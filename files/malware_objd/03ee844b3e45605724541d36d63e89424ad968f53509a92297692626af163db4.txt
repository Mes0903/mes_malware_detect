
03ee844b3e45605724541d36d63e89424ad968f53509a92297692626af163db4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    0x10
  401007:	int3   
  401008:	int3   
  401009:	int3   
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	pop    ebp
  401014:	ret    0x10
  401017:	int3   
  401018:	int3   
  401019:	int3   
  40101a:	int3   
  40101b:	int3   
  40101c:	int3   
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401680
  401028:	mov    eax,ds:0x422204
  40102d:	push   eax
  40102e:	call   0x402370
  401033:	add    esp,0x4
  401036:	mov    ds:0x422208,eax
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	push   ecx
  401044:	mov    DWORD PTR [ebp-0x4],0x4
  40104b:	mov    eax,DWORD PTR [ebp-0x4]
  40104e:	add    eax,0x4027f4
  401053:	mov    ds:0x42220c,eax
  401058:	mov    esp,ebp
  40105a:	pop    ebp
  40105b:	ret    
  40105c:	int3   
  40105d:	int3   
  40105e:	int3   
  40105f:	int3   
  401060:	push   ebp
  401061:	mov    ebp,esp
  401063:	mov    eax,DWORD PTR [ebp+0x8]
  401066:	mov    ecx,DWORD PTR [ebp+0x8]
  401069:	add    ecx,DWORD PTR [eax+0x4]
  40106c:	mov    eax,ecx
  40106e:	pop    ebp
  40106f:	ret    
  401070:	push   ebp
  401071:	mov    ebp,esp
  401073:	mov    eax,DWORD PTR [ebp+0x8]
  401076:	mov    eax,DWORD PTR [eax-0x4]
  401079:	pop    ebp
  40107a:	ret    
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	sub    esp,0x18
  401086:	mov    eax,DWORD PTR [ebp+0x8]
  401089:	mov    DWORD PTR [ebp-0x8],eax
  40108c:	mov    ecx,DWORD PTR [ebp+0xc]
  40108f:	mov    DWORD PTR [ebp-0x4],ecx
  401092:	mov    DWORD PTR [ebp-0x10],0x19c
  401099:	mov    edx,DWORD PTR [ebp-0x8]
  40109c:	mov    DWORD PTR ds:0x422210,edx
  4010a2:	mov    eax,DWORD PTR [ebp-0x4]
  4010a5:	mov    ds:0x422214,eax
  4010aa:	mov    ecx,DWORD PTR ds:0x422210
  4010b0:	mov    DWORD PTR [ebp-0x14],ecx
  4010b3:	mov    edx,DWORD PTR ds:0x422214
  4010b9:	mov    DWORD PTR [ebp-0xc],edx
  4010bc:	mov    eax,DWORD PTR [ebp-0xc]
  4010bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4010c2:	lea    edx,[ecx+eax*2]
  4010c5:	mov    DWORD PTR [ebp-0x18],edx
  4010c8:	mov    eax,DWORD PTR [ebp-0x18]
  4010cb:	mov    DWORD PTR [ebp-0x14],eax
  4010ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4010d1:	movzx  edx,WORD PTR [ecx]
  4010d4:	mov    DWORD PTR [ebp-0xc],edx
  4010d7:	mov    eax,DWORD PTR [ebp-0xc]
  4010da:	mov    esp,ebp
  4010dc:	pop    ebp
  4010dd:	ret    
  4010de:	int3   
  4010df:	int3   
  4010e0:	push   ebp
  4010e1:	mov    ebp,esp
  4010e3:	sub    esp,0xc
  4010e6:	mov    eax,DWORD PTR [ebp+0x8]
  4010e9:	mov    DWORD PTR [ebp-0x8],eax
  4010ec:	mov    ecx,DWORD PTR [ebp+0xc]
  4010ef:	mov    DWORD PTR [ebp-0xc],ecx
  4010f2:	mov    DWORD PTR [ebp-0x4],0x11afc
  4010f9:	mov    edx,DWORD PTR [ebp-0x8]
  4010fc:	cmp    edx,DWORD PTR [ebp-0xc]
  4010ff:	jae    0x40110f
  401101:	mov    DWORD PTR [ebp-0x4],0x11afc
  401108:	mov    eax,DWORD PTR [ebp-0x8]
  40110b:	jmp    0x401119
  40110d:	jmp    0x401119
  40110f:	mov    DWORD PTR [ebp-0x4],0x11afc
  401116:	mov    eax,DWORD PTR [ebp-0xc]
  401119:	mov    esp,ebp
  40111b:	pop    ebp
  40111c:	ret    
  40111d:	int3   
  40111e:	int3   
  40111f:	int3   
  401120:	push   ebp
  401121:	mov    ebp,esp
  401123:	push   ecx
  401124:	mov    DWORD PTR [ebp-0x4],0x3085
  40112b:	mov    DWORD PTR [ebp-0x4],0x3085
  401132:	mov    DWORD PTR [ebp-0x4],0x3085
  401139:	mov    DWORD PTR [ebp-0x4],0x3085
  401140:	mov    DWORD PTR [ebp-0x4],0x3085
  401147:	mov    DWORD PTR [ebp-0x4],0x3085
  40114e:	mov    DWORD PTR [ebp-0x4],0x3085
  401155:	mov    DWORD PTR [ebp-0x4],0x3085
  40115c:	mov    DWORD PTR [ebp-0x4],0x3085
  401163:	mov    DWORD PTR [ebp-0x4],0x3085
  40116a:	mov    DWORD PTR [ebp-0x4],0x3085
  401171:	mov    DWORD PTR [ebp-0x4],0x3085
  401178:	mov    DWORD PTR [ebp-0x4],0x3085
  40117f:	mov    DWORD PTR [ebp-0x4],0x3085
  401186:	mov    DWORD PTR [ebp-0x4],0x3085
  40118d:	mov    DWORD PTR [ebp-0x4],0x3085
  401194:	mov    DWORD PTR [ebp-0x4],0x3085
  40119b:	mov    DWORD PTR [ebp-0x4],0x3085
  4011a2:	mov    DWORD PTR [ebp-0x4],0x3085
  4011a9:	mov    DWORD PTR [ebp-0x4],0x3085
  4011b0:	mov    DWORD PTR [ebp-0x4],0x3085
  4011b7:	mov    DWORD PTR [ebp-0x4],0x3085
  4011be:	mov    DWORD PTR [ebp-0x4],0x3085
  4011c5:	mov    DWORD PTR [ebp-0x4],0x3085
  4011cc:	mov    DWORD PTR [ebp-0x4],0x3085
  4011d3:	mov    DWORD PTR [ebp-0x4],0x3085
  4011da:	mov    DWORD PTR [ebp-0x4],0x3085
  4011e1:	mov    DWORD PTR [ebp-0x4],0x3085
  4011e8:	mov    DWORD PTR [ebp-0x4],0x3085
  4011ef:	mov    DWORD PTR [ebp-0x4],0x3085
  4011f6:	mov    DWORD PTR [ebp-0x4],0x3085
  4011fd:	mov    DWORD PTR [ebp-0x4],0x3085
  401204:	mov    DWORD PTR [ebp-0x4],0x3085
  40120b:	mov    DWORD PTR [ebp-0x4],0x3085
  401212:	mov    DWORD PTR [ebp-0x4],0x3085
  401219:	mov    DWORD PTR [ebp-0x4],0x3085
  401220:	mov    DWORD PTR [ebp-0x4],0x3085
  401227:	mov    DWORD PTR [ebp-0x4],0x3085
  40122e:	mov    DWORD PTR [ebp-0x4],0x3085
  401235:	mov    DWORD PTR [ebp-0x4],0x3085
  40123c:	mov    DWORD PTR [ebp-0x4],0x3085
  401243:	cmp    DWORD PTR [ebp+0x8],0x1
  401247:	jne    0x401251
  401249:	mov    eax,ds:0x422218
  40124e:	mov    DWORD PTR [ebp+0x8],eax
  401251:	mov    ecx,DWORD PTR [ebp+0x10]
  401254:	push   ecx
  401255:	mov    edx,DWORD PTR [ebp+0xc]
  401258:	push   edx
  401259:	mov    eax,DWORD PTR [ebp+0x8]
  40125c:	push   eax
  40125d:	call   0x4023f0
  401262:	add    esp,0xc
  401265:	mov    ecx,DWORD PTR [ebp+0x8]
  401268:	push   ecx
  401269:	call   0x401060
  40126e:	add    esp,0x4
  401271:	mov    DWORD PTR [ebp+0x8],eax
  401274:	mov    eax,DWORD PTR [ebp+0x8]
  401277:	mov    esp,ebp
  401279:	pop    ebp
  40127a:	ret    
  40127b:	int3   
  40127c:	int3   
  40127d:	int3   
  40127e:	int3   
  40127f:	int3   
  401280:	push   ebp
  401281:	mov    ebp,esp
  401283:	push   ecx
  401284:	mov    DWORD PTR [ebp-0x4],0x22a7
  40128b:	mov    DWORD PTR [ebp-0x4],0x22a7
  401292:	mov    DWORD PTR [ebp-0x4],0x22a7
  401299:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012a0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012a7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012ae:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012b5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012bc:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012c3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012ca:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012d1:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012d8:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012df:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012e6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012ed:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012f4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4012fb:	mov    DWORD PTR [ebp-0x4],0x22a7
  401302:	mov    DWORD PTR [ebp-0x4],0x22a7
  401309:	mov    DWORD PTR [ebp-0x4],0x22a7
  401310:	mov    DWORD PTR [ebp-0x4],0x22a7
  401317:	mov    DWORD PTR [ebp-0x4],0x22a7
  40131e:	mov    DWORD PTR [ebp-0x4],0x22a7
  401325:	mov    DWORD PTR [ebp-0x4],0x22a7
  40132c:	mov    DWORD PTR [ebp-0x4],0x22a7
  401333:	mov    DWORD PTR [ebp-0x4],0x22a7
  40133a:	mov    DWORD PTR [ebp-0x4],0x22a7
  401341:	mov    DWORD PTR [ebp-0x4],0x22a7
  401348:	mov    DWORD PTR [ebp-0x4],0x22a7
  40134f:	mov    DWORD PTR [ebp-0x4],0x22a7
  401356:	mov    DWORD PTR [ebp-0x4],0x22a7
  40135d:	mov    DWORD PTR [ebp-0x4],0x22a7
  401364:	mov    DWORD PTR [ebp-0x4],0x22a7
  40136b:	mov    DWORD PTR [ebp-0x4],0x22a7
  401372:	mov    DWORD PTR [ebp-0x4],0x22a7
  401379:	mov    DWORD PTR [ebp-0x4],0x22a7
  401380:	mov    DWORD PTR [ebp-0x4],0x22a7
  401387:	mov    DWORD PTR [ebp-0x4],0x22a7
  40138e:	mov    DWORD PTR [ebp-0x4],0x22a7
  401395:	mov    DWORD PTR [ebp-0x4],0x22a7
  40139c:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013a3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013aa:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013b1:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013b8:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013bf:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013c6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013cd:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013d4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013db:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013e2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013e9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013f0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013f7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4013fe:	mov    DWORD PTR [ebp-0x4],0x22a7
  401405:	mov    DWORD PTR [ebp-0x4],0x22a7
  40140c:	mov    DWORD PTR [ebp-0x4],0x22a7
  401413:	mov    DWORD PTR [ebp-0x4],0x22a7
  40141a:	mov    DWORD PTR [ebp-0x4],0x22a7
  401421:	mov    DWORD PTR [ebp-0x4],0x22a7
  401428:	mov    DWORD PTR [ebp-0x4],0x22a7
  40142f:	mov    DWORD PTR [ebp-0x4],0x22a7
  401436:	mov    DWORD PTR [ebp-0x4],0x22a7
  40143d:	mov    DWORD PTR [ebp-0x4],0x22a7
  401444:	mov    DWORD PTR [ebp-0x4],0x22a7
  40144b:	mov    DWORD PTR [ebp-0x4],0x22a7
  401452:	mov    DWORD PTR [ebp-0x4],0x22a7
  401459:	mov    DWORD PTR [ebp-0x4],0x22a7
  401460:	mov    DWORD PTR [ebp-0x4],0x22a7
  401467:	mov    DWORD PTR [ebp-0x4],0x22a7
  40146e:	mov    DWORD PTR [ebp-0x4],0x22a7
  401475:	mov    DWORD PTR [ebp-0x4],0x22a7
  40147c:	mov    DWORD PTR [ebp-0x4],0x22a7
  401483:	mov    DWORD PTR [ebp-0x4],0x22a7
  40148a:	mov    DWORD PTR [ebp-0x4],0x22a7
  401491:	mov    DWORD PTR [ebp-0x4],0x22a7
  401498:	mov    DWORD PTR [ebp-0x4],0x22a7
  40149f:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014a6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014ad:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014b4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014bb:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014c2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014c9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014d0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014d7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014de:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014e5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014ec:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014f3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4014fa:	mov    DWORD PTR [ebp-0x4],0x22a7
  401501:	mov    DWORD PTR [ebp-0x4],0x22a7
  401508:	mov    DWORD PTR [ebp-0x4],0x22a7
  40150f:	mov    DWORD PTR [ebp-0x4],0x22a7
  401516:	mov    DWORD PTR [ebp-0x4],0x22a7
  40151d:	mov    DWORD PTR [ebp-0x4],0x22a7
  401524:	mov    DWORD PTR [ebp-0x4],0x22a7
  40152b:	mov    DWORD PTR [ebp-0x4],0x22a7
  401532:	mov    DWORD PTR [ebp-0x4],0x22a7
  401539:	mov    DWORD PTR [ebp-0x4],0x22a7
  401540:	mov    DWORD PTR [ebp-0x4],0x22a7
  401547:	mov    DWORD PTR [ebp-0x4],0x22a7
  40154e:	mov    DWORD PTR [ebp-0x4],0x22a7
  401555:	mov    DWORD PTR [ebp-0x4],0x22a7
  40155c:	mov    DWORD PTR [ebp-0x4],0x22a7
  401563:	mov    DWORD PTR [ebp-0x4],0x22a7
  40156a:	mov    DWORD PTR [ebp-0x4],0x22a7
  401571:	mov    DWORD PTR [ebp-0x4],0x22a7
  401578:	mov    DWORD PTR [ebp-0x4],0x22a7
  40157f:	mov    DWORD PTR [ebp-0x4],0x22a7
  401586:	mov    DWORD PTR [ebp-0x4],0x22a7
  40158d:	mov    DWORD PTR [ebp-0x4],0x22a7
  401594:	mov    DWORD PTR [ebp-0x4],0x22a7
  40159b:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015a2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015a9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015b0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015b7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015be:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015c5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015cc:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015d3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015da:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015e1:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015e8:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015ef:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015f6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4015fd:	mov    DWORD PTR [ebp-0x4],0x22a7
  401604:	mov    DWORD PTR [ebp-0x4],0x22a7
  40160b:	mov    DWORD PTR [ebp-0x4],0x22a7
  401612:	mov    DWORD PTR [ebp-0x4],0x22a7
  401619:	mov    DWORD PTR [ebp-0x4],0x22a7
  401620:	mov    DWORD PTR [ebp-0x4],0x22a7
  401627:	mov    eax,ds:0x42221c
  40162c:	sub    eax,0x8
  40162f:	mov    ds:0x42221c,eax
  401634:	mov    ecx,DWORD PTR ds:0x42221c
  40163a:	mov    DWORD PTR [ebp-0x4],ecx
  40163d:	mov    edx,DWORD PTR [ebp-0x4]
  401640:	shr    edx,1
  401642:	mov    DWORD PTR [ebp-0x4],edx
  401645:	mov    eax,DWORD PTR [ebp-0x4]
  401648:	mov    ds:0x42221c,eax
  40164d:	mov    esp,ebp
  40164f:	pop    ebp
  401650:	ret    
  401651:	int3   
  401652:	int3   
  401653:	int3   
  401654:	int3   
  401655:	int3   
  401656:	int3   
  401657:	int3   
  401658:	int3   
  401659:	int3   
  40165a:	int3   
  40165b:	int3   
  40165c:	int3   
  40165d:	int3   
  40165e:	int3   
  40165f:	int3   
  401660:	push   ebp
  401661:	mov    ebp,esp
  401663:	mov    edx,edx
  401665:	mov    esp,DWORD PTR ds:0x422220
  40166b:	mov    edx,edx
  40166d:	add    esp,0x4
  401670:	mov    edx,edx
  401672:	mov    ecx,DWORD PTR ds:0x422224
  401678:	mov    edx,edx
  40167a:	jmp    ecx
  40167c:	mov    edx,edx
  40167e:	pop    ebp
  40167f:	ret    
  401680:	push   ebp
  401681:	mov    ebp,esp
  401683:	call   0x401040
  401688:	mov    eax,ds:0x42220c
  40168d:	push   eax
  40168e:	call   0x401070
  401693:	add    esp,0x4
  401696:	mov    ds:0x422204,eax
  40169b:	pop    ebp
  40169c:	ret    
  40169d:	int3   
  40169e:	int3   
  40169f:	int3   
  4016a0:	push   ebp
  4016a1:	mov    ebp,esp
  4016a3:	sub    esp,0x28
  4016a6:	mov    DWORD PTR [ebp-0x28],0x402a5c
  4016ad:	mov    DWORD PTR [ebp-0x24],0x1027
  4016b4:	mov    DWORD PTR [ebp-0x18],0x4
  4016bb:	mov    eax,DWORD PTR [ebp-0x18]
  4016be:	mov    ecx,DWORD PTR [ebp-0x28]
  4016c1:	lea    edx,[ecx+eax*1+0x29]
  4016c5:	mov    DWORD PTR [ebp-0x20],edx
  4016c8:	mov    eax,DWORD PTR [ebp-0x20]
  4016cb:	mov    DWORD PTR [ebp-0x1c],eax
  4016ce:	mov    DWORD PTR [ebp-0x14],0x0
  4016d5:	lea    ecx,[ebp-0x14]
  4016d8:	push   ecx
  4016d9:	push   0x0
  4016db:	call   DWORD PTR ds:0x42139c
  4016e1:	cmp    DWORD PTR [ebp-0x14],0x0
  4016e5:	jne    0x4016eb
  4016e7:	xor    eax,eax
  4016e9:	jmp    0x4016f7
  4016eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4016ee:	sub    edx,0x29
  4016f1:	mov    DWORD PTR ds:0x42220c,edx
  4016f7:	mov    esp,ebp
  4016f9:	pop    ebp
  4016fa:	ret    
  4016fb:	int3   
  4016fc:	int3   
  4016fd:	int3   
  4016fe:	int3   
  4016ff:	int3   
  401700:	push   ebp
  401701:	mov    ebp,esp
  401703:	sub    esp,0xc
  401706:	mov    DWORD PTR [ebp-0xc],0x1024a
  40170d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401714:	mov    DWORD PTR [ebp-0xc],0x1024a
  40171b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401722:	mov    DWORD PTR [ebp-0xc],0x1024a
  401729:	mov    DWORD PTR [ebp-0xc],0x1024a
  401730:	mov    DWORD PTR [ebp-0xc],0x1024a
  401737:	mov    DWORD PTR [ebp-0xc],0x1024a
  40173e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401745:	mov    DWORD PTR [ebp-0xc],0x1024a
  40174c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401753:	mov    DWORD PTR [ebp-0xc],0x1024a
  40175a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401761:	mov    DWORD PTR [ebp-0xc],0x1024a
  401768:	mov    DWORD PTR [ebp-0xc],0x1024a
  40176f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401776:	mov    DWORD PTR [ebp-0xc],0x1024a
  40177d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401784:	mov    DWORD PTR [ebp-0xc],0x1024a
  40178b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401792:	mov    DWORD PTR [ebp-0xc],0x1024a
  401799:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017a0:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017a7:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017ae:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017b5:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017bc:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017c3:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017ca:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017d1:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017d8:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017df:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017e6:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017ed:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017f4:	mov    DWORD PTR [ebp-0xc],0x1024a
  4017fb:	mov    DWORD PTR [ebp-0xc],0x1024a
  401802:	mov    DWORD PTR [ebp-0xc],0x1024a
  401809:	mov    DWORD PTR [ebp-0xc],0x1024a
  401810:	mov    DWORD PTR [ebp-0xc],0x1024a
  401817:	mov    DWORD PTR [ebp-0xc],0x1024a
  40181e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401825:	mov    DWORD PTR [ebp-0xc],0x1024a
  40182c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401833:	mov    DWORD PTR [ebp-0xc],0x1024a
  40183a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401841:	mov    DWORD PTR [ebp-0xc],0x1024a
  401848:	mov    DWORD PTR [ebp-0xc],0x1024a
  40184f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401856:	mov    DWORD PTR [ebp-0xc],0x1024a
  40185d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401864:	mov    DWORD PTR [ebp-0xc],0x1024a
  40186b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401872:	mov    DWORD PTR [ebp-0xc],0x1024a
  401879:	mov    DWORD PTR [ebp-0xc],0x1024a
  401880:	mov    DWORD PTR [ebp-0xc],0x1024a
  401887:	mov    DWORD PTR [ebp-0xc],0x1024a
  40188e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401895:	mov    DWORD PTR [ebp-0xc],0x1024a
  40189c:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018a3:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018aa:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018b1:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018b8:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018bf:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018c6:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018cd:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018d4:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018db:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018e2:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018e9:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018f0:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018f7:	mov    DWORD PTR [ebp-0xc],0x1024a
  4018fe:	mov    DWORD PTR [ebp-0xc],0x1024a
  401905:	mov    DWORD PTR [ebp-0xc],0x1024a
  40190c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401913:	mov    DWORD PTR [ebp-0xc],0x1024a
  40191a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401921:	mov    DWORD PTR [ebp-0xc],0x1024a
  401928:	mov    DWORD PTR [ebp-0xc],0x1024a
  40192f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401936:	mov    DWORD PTR [ebp-0xc],0x1024a
  40193d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401944:	mov    DWORD PTR [ebp-0xc],0x1024a
  40194b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401952:	mov    DWORD PTR [ebp-0xc],0x1024a
  401959:	mov    DWORD PTR [ebp-0xc],0x1024a
  401960:	mov    DWORD PTR [ebp-0xc],0x1024a
  401967:	mov    DWORD PTR [ebp-0xc],0x1024a
  40196e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401975:	mov    DWORD PTR [ebp-0xc],0x1024a
  40197c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401983:	mov    DWORD PTR [ebp-0xc],0x1024a
  40198a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401991:	mov    DWORD PTR [ebp-0xc],0x1024a
  401998:	mov    DWORD PTR [ebp-0xc],0x1024a
  40199f:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019a6:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019ad:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019b4:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019bb:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019c2:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019c9:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019d0:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019d7:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019de:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019e5:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019ec:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019f3:	mov    DWORD PTR [ebp-0xc],0x1024a
  4019fa:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a01:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a08:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a0f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a16:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a1d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a24:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a2b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a32:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a39:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a40:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a47:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a4e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a55:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a5c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a63:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a6a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a71:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a78:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a7f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a86:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a8d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a94:	mov    DWORD PTR [ebp-0xc],0x1024a
  401a9b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401aa2:	mov    DWORD PTR [ebp-0xc],0x1024a
  401aa9:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ab0:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ab7:	mov    DWORD PTR [ebp-0xc],0x1024a
  401abe:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ac5:	mov    eax,DWORD PTR [ebp+0x8]
  401ac8:	cmp    DWORD PTR [eax+0x4],0x0
  401acc:	je     0x401ec9
  401ad2:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ad9:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ae0:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ae7:	mov    DWORD PTR [ebp-0xc],0x1024a
  401aee:	mov    DWORD PTR [ebp-0xc],0x1024a
  401af5:	mov    DWORD PTR [ebp-0xc],0x1024a
  401afc:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b03:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b0a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b11:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b18:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b1f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b26:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b2d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b34:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b3b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b42:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b49:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b50:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b57:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b5e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b65:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b6c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b73:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b7a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b81:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b88:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b8f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b96:	mov    DWORD PTR [ebp-0xc],0x1024a
  401b9d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ba4:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bab:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bb2:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bb9:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bc0:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bc7:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bce:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bd5:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bdc:	mov    DWORD PTR [ebp-0xc],0x1024a
  401be3:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bea:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bf1:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bf8:	mov    DWORD PTR [ebp-0xc],0x1024a
  401bff:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c06:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c0d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c14:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c1b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c22:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c29:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c30:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c37:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c3e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c45:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c4c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c53:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c5a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c61:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c68:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c6f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c76:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c7d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c84:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c8b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c92:	mov    DWORD PTR [ebp-0xc],0x1024a
  401c99:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ca0:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ca7:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cae:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cb5:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cbc:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cc3:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cca:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cd1:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cd8:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cdf:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ce6:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ced:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cf4:	mov    DWORD PTR [ebp-0xc],0x1024a
  401cfb:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d02:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d09:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d10:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d17:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d1e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d25:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d2c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d33:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d3a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d41:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d48:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d4f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d56:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d5d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d64:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d6b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d72:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d79:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d80:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d87:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d8e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d95:	mov    DWORD PTR [ebp-0xc],0x1024a
  401d9c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401da3:	mov    DWORD PTR [ebp-0xc],0x1024a
  401daa:	mov    DWORD PTR [ebp-0xc],0x1024a
  401db1:	mov    DWORD PTR [ebp-0xc],0x1024a
  401db8:	mov    DWORD PTR [ebp-0xc],0x1024a
  401dbf:	mov    DWORD PTR [ebp-0xc],0x1024a
  401dc6:	mov    DWORD PTR [ebp-0xc],0x1024a
  401dcd:	mov    DWORD PTR [ebp-0xc],0x1024a
  401dd4:	mov    DWORD PTR [ebp-0xc],0x1024a
  401ddb:	mov    DWORD PTR [ebp-0xc],0x1024a
  401de2:	mov    DWORD PTR [ebp-0xc],0x1024a
  401de9:	mov    DWORD PTR [ebp-0xc],0x1024a
  401df0:	mov    DWORD PTR [ebp-0xc],0x1024a
  401df7:	mov    DWORD PTR [ebp-0xc],0x1024a
  401dfe:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e05:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e0c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e13:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e1a:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e21:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e28:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e2f:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e36:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e3d:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e44:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e4b:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e52:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e59:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e60:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e67:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e6e:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e75:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e7c:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e83:	mov    DWORD PTR [ebp-0xc],0x1024a
  401e8a:	mov    ecx,DWORD PTR [ebp+0x8]
  401e8d:	add    ecx,0x8
  401e90:	mov    DWORD PTR ds:0x422228,ecx
  401e96:	mov    edx,DWORD PTR [ebp+0x8]
  401e99:	mov    eax,DWORD PTR [edx+0x4]
  401e9c:	mov    ds:0x42221c,eax
  401ea1:	call   0x401280
  401ea6:	mov    ecx,DWORD PTR [ebp+0x8]
  401ea9:	mov    DWORD PTR ds:0x422218,ecx
  401eaf:	mov    edx,DWORD PTR [ebp+0x10]
  401eb2:	push   edx
  401eb3:	mov    eax,DWORD PTR [ebp+0xc]
  401eb6:	push   eax
  401eb7:	push   0x1
  401eb9:	call   0x401120
  401ebe:	add    esp,0xc
  401ec1:	mov    DWORD PTR [ebp+0x8],eax
  401ec4:	jmp    0x401ac5
  401ec9:	mov    esp,ebp
  401ecb:	pop    ebp
  401ecc:	ret    
  401ecd:	int3   
  401ece:	int3   
  401ecf:	int3   
  401ed0:	push   ebp
  401ed1:	mov    ebp,esp
  401ed3:	sub    esp,0x7c
  401ed6:	push   ebx
  401ed7:	push   esi
  401ed8:	push   edi
  401ed9:	mov    DWORD PTR [ebp-0x28],0x401660
  401ee0:	mov    DWORD PTR ds:0x422220,ebp
  401ee6:	mov    DWORD PTR [ebp-0x2c],0x0
  401eed:	mov    DWORD PTR [ebp-0x3c],0x80000002
  401ef4:	mov    DWORD PTR [ebp-0x6c],0x421000
  401efb:	mov    eax,ds:0x4213a0
  401f00:	mov    DWORD PTR [ebp-0x64],eax
  401f03:	mov    DWORD PTR [ebp-0xc],0x1471
  401f0a:	mov    DWORD PTR [ebp-0xc],0x1471
  401f11:	mov    ecx,DWORD PTR ds:0x42162c
  401f17:	mov    DWORD PTR [ebp-0x60],ecx
  401f1a:	lea    edx,[ebp-0x68]
  401f1d:	push   edx
  401f1e:	push   0x20019
  401f23:	push   0x0
  401f25:	push   0x421030
  401f2a:	push   0x80000002
  401f2f:	call   DWORD PTR [ebp-0x60]
  401f32:	test   eax,eax
  401f34:	jne    0x401f45
  401f36:	push   0x0
  401f38:	call   DWORD PTR ds:0x4213a4
  401f3e:	xor    eax,eax
  401f40:	jmp    0x402180
  401f45:	lea    eax,[ebp-0x68]
  401f48:	push   eax
  401f49:	push   0x20019
  401f4e:	push   0x0
  401f50:	mov    ecx,DWORD PTR [ebp-0x6c]
  401f53:	push   ecx
  401f54:	push   0x80000002
  401f59:	call   DWORD PTR [ebp-0x60]
  401f5c:	test   eax,eax
  401f5e:	je     0x401f6f
  401f60:	push   0x0
  401f62:	call   DWORD PTR ds:0x4213a4
  401f68:	xor    eax,eax
  401f6a:	jmp    0x402180
  401f6f:	call   0x4016a0
  401f74:	mov    edx,DWORD PTR ds:0x42220c
  401f7a:	push   edx
  401f7b:	call   0x401070
  401f80:	add    esp,0x4
  401f83:	mov    ds:0x422204,eax
  401f88:	mov    eax,ds:0x422204
  401f8d:	push   eax
  401f8e:	call   0x402370
  401f93:	add    esp,0x4
  401f96:	mov    ds:0x42222c,eax
  401f9b:	mov    ecx,DWORD PTR ds:0x422204
  401fa1:	mov    DWORD PTR [ebp-0x34],ecx
  401fa4:	mov    DWORD PTR [ebp-0x24],0x64
  401fab:	mov    DWORD PTR [ebp-0x14],0x14
  401fb2:	mov    DWORD PTR [ebp-0x2c],0x0
  401fb9:	mov    DWORD PTR [ebp-0x18],0x0
  401fc0:	mov    DWORD PTR [ebp-0x20],0x1
  401fc7:	mov    DWORD PTR [ebp-0xc],0x0
  401fce:	mov    edx,DWORD PTR [ebp-0x2c]
  401fd1:	cmp    edx,DWORD PTR ds:0x422204
  401fd7:	jae    0x40202b
  401fd9:	mov    eax,DWORD PTR [ebp-0x34]
  401fdc:	push   eax
  401fdd:	mov    ecx,DWORD PTR [ebp-0x24]
  401fe0:	push   ecx
  401fe1:	call   0x4010e0
  401fe6:	add    esp,0x8
  401fe9:	mov    DWORD PTR [ebp-0x38],eax
  401fec:	mov    edx,DWORD PTR [ebp-0x38]
  401fef:	push   edx
  401ff0:	mov    eax,ds:0x42220c
  401ff5:	add    eax,DWORD PTR [ebp-0x18]
  401ff8:	push   eax
  401ff9:	mov    ecx,DWORD PTR ds:0x42222c
  401fff:	add    ecx,DWORD PTR [ebp-0x2c]
  402002:	push   ecx
  402003:	call   0x4022c0
  402008:	add    esp,0xc
  40200b:	mov    edx,DWORD PTR [ebp-0x14]
  40200e:	add    edx,DWORD PTR [ebp-0x24]
  402011:	add    edx,DWORD PTR [ebp-0x18]
  402014:	mov    DWORD PTR [ebp-0x18],edx
  402017:	mov    eax,DWORD PTR [ebp-0x2c]
  40201a:	add    eax,DWORD PTR [ebp-0x24]
  40201d:	mov    DWORD PTR [ebp-0x2c],eax
  402020:	mov    ecx,DWORD PTR [ebp-0x34]
  402023:	sub    ecx,DWORD PTR [ebp-0x38]
  402026:	mov    DWORD PTR [ebp-0x34],ecx
  402029:	jmp    0x401fce
  40202b:	mov    edx,DWORD PTR ds:0x422204
  402031:	push   edx
  402032:	mov    eax,ds:0x42222c
  402037:	push   eax
  402038:	call   0x402190
  40203d:	add    esp,0x8
  402040:	pusha  
  402041:	mov    DWORD PTR [ebp-0x18],0x0
  402048:	mov    DWORD PTR [ebp-0x70],0x0
  40204f:	mov    ecx,DWORD PTR ds:0x422204
  402055:	push   ecx
  402056:	push   0x0
  402058:	mov    edx,DWORD PTR ds:0x422208
  40205e:	push   edx
  40205f:	call   0x401020
  402064:	add    esp,0xc
  402067:	mov    eax,ds:0x422204
  40206c:	mov    DWORD PTR [ebp-0x78],eax
  40206f:	mov    ecx,DWORD PTR [ebp-0x70]
  402072:	cmp    ecx,DWORD PTR ds:0x422204
  402078:	jae    0x4020cc
  40207a:	mov    edx,DWORD PTR [ebp-0x78]
  40207d:	push   edx
  40207e:	mov    eax,DWORD PTR [ebp-0x24]
  402081:	push   eax
  402082:	call   0x4010e0
  402087:	add    esp,0x8
  40208a:	mov    DWORD PTR [ebp-0x7c],eax
  40208d:	mov    ecx,DWORD PTR [ebp-0x7c]
  402090:	push   ecx
  402091:	mov    edx,DWORD PTR ds:0x42220c
  402097:	add    edx,DWORD PTR [ebp-0x18]
  40209a:	push   edx
  40209b:	mov    eax,ds:0x422208
  4020a0:	add    eax,DWORD PTR [ebp-0x70]
  4020a3:	push   eax
  4020a4:	call   0x4022c0
  4020a9:	add    esp,0xc
  4020ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4020af:	add    ecx,DWORD PTR [ebp-0x24]
  4020b2:	add    ecx,DWORD PTR [ebp-0x18]
  4020b5:	mov    DWORD PTR [ebp-0x18],ecx
  4020b8:	mov    edx,DWORD PTR [ebp-0x70]
  4020bb:	add    edx,DWORD PTR [ebp-0x24]
  4020be:	mov    DWORD PTR [ebp-0x70],edx
  4020c1:	mov    eax,DWORD PTR [ebp-0x78]
  4020c4:	sub    eax,DWORD PTR [ebp-0x7c]
  4020c7:	mov    DWORD PTR [ebp-0x78],eax
  4020ca:	jmp    0x40206f
  4020cc:	mov    ecx,DWORD PTR ds:0x422204
  4020d2:	push   ecx
  4020d3:	mov    edx,DWORD PTR ds:0x422208
  4020d9:	push   edx
  4020da:	call   0x402190
  4020df:	add    esp,0x8
  4020e2:	mov    DWORD PTR [ebp-0x28],0x401660
  4020e9:	mov    eax,ds:0x42222c
  4020ee:	mov    ecx,DWORD PTR ds:0x422208
  4020f4:	mov    DWORD PTR [eax],ecx
  4020f6:	push   0x19000
  4020fb:	call   0x402370
  402100:	add    esp,0x4
  402103:	mov    ds:0x422230,eax
  402108:	mov    edx,DWORD PTR ds:0x422230
  40210e:	add    edx,0x200
  402114:	mov    DWORD PTR ds:0x422234,edx
  40211a:	push   0x17600
  40211f:	mov    eax,ds:0x42222c
  402124:	push   eax
  402125:	mov    ecx,DWORD PTR ds:0x422234
  40212b:	push   ecx
  40212c:	call   0x4022c0
  402131:	add    esp,0xc
  402134:	mov    edx,DWORD PTR ds:0x422230
  40213a:	add    edx,0x174c0
  402140:	mov    DWORD PTR ds:0x422224,edx
  402146:	mov    ecx,ecx
  402148:	mov    ecx,ecx
  40214a:	mov    ecx,ecx
  40214c:	popa   
  40214d:	mov    ecx,ecx
  40214f:	mov    ecx,ecx
  402151:	mov    ecx,ecx
  402153:	mov    ecx,ecx
  402155:	push   0xde9b
  40215a:	mov    eax,DWORD PTR [ebp-0x28]
  40215d:	mov    ecx,ecx
  40215f:	mov    ecx,ecx
  402161:	mov    ecx,esp
  402163:	push   edx
  402164:	mov    edx,ecx
  402166:	sub    edx,0x26
  402169:	mov    ecx,edx
  40216b:	pop    edx
  40216c:	add    ecx,0x22
  40216f:	mov    ecx,ecx
  402171:	mov    DWORD PTR [ecx+0x4],0x0
  402178:	mov    ecx,ecx
  40217a:	add    DWORD PTR [ecx+0x4],eax
  40217d:	ret    
  40217e:	xor    eax,eax
  402180:	pop    edi
  402181:	pop    esi
  402182:	pop    ebx
  402183:	mov    esp,ebp
  402185:	pop    ebp
  402186:	ret    
  402187:	int3   
  402188:	int3   
  402189:	int3   
  40218a:	int3   
  40218b:	int3   
  40218c:	int3   
  40218d:	int3   
  40218e:	int3   
  40218f:	int3   
  402190:	push   ebp
  402191:	mov    ebp,esp
  402193:	sub    esp,0x10
  402196:	mov    DWORD PTR [ebp-0x4],0x0
  40219d:	jmp    0x4021a8
  40219f:	mov    eax,DWORD PTR [ebp-0x4]
  4021a2:	add    eax,0x4
  4021a5:	mov    DWORD PTR [ebp-0x4],eax
  4021a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4021ab:	cmp    ecx,DWORD PTR [ebp+0xc]
  4021ae:	jae    0x40224b
  4021b4:	mov    DWORD PTR [ebp-0x8],0xc842
  4021bb:	mov    DWORD PTR [ebp-0x8],0xc842
  4021c2:	mov    DWORD PTR [ebp-0x8],0xc842
  4021c9:	mov    edx,DWORD PTR [ebp-0x4]
  4021cc:	add    edx,0x8948c
  4021d2:	mov    DWORD PTR ds:0x422238,edx
  4021d8:	mov    DWORD PTR [ebp-0x8],0xc842
  4021df:	mov    eax,DWORD PTR [ebp+0x8]
  4021e2:	add    eax,DWORD PTR [ebp-0x4]
  4021e5:	mov    DWORD PTR [ebp-0x10],eax
  4021e8:	mov    DWORD PTR [ebp-0x8],0xc842
  4021ef:	mov    DWORD PTR [ebp-0x8],0xc842
  4021f6:	mov    DWORD PTR [ebp-0x8],0xc842
  4021fd:	mov    ecx,DWORD PTR [ebp-0x10]
  402200:	mov    DWORD PTR [ebp-0xc],ecx
  402203:	mov    edx,DWORD PTR ds:0x422238
  402209:	mov    DWORD PTR [ebp-0x8],edx
  40220c:	mov    DWORD PTR [ebp-0x8],0xc842
  402213:	mov    eax,DWORD PTR [ebp-0x10]
  402216:	mov    ecx,DWORD PTR [eax]
  402218:	add    ecx,DWORD PTR [ebp-0x4]
  40221b:	mov    edx,DWORD PTR [ebp-0x10]
  40221e:	mov    DWORD PTR [edx],ecx
  402220:	mov    eax,DWORD PTR [ebp-0xc]
  402223:	mov    ecx,DWORD PTR [eax]
  402225:	mov    DWORD PTR [ebp-0x8],ecx
  402228:	mov    edx,DWORD PTR ds:0x422238
  40222e:	push   edx
  40222f:	mov    eax,DWORD PTR [ebp-0x8]
  402232:	push   eax
  402233:	call   0x402250
  402238:	add    esp,0x8
  40223b:	mov    DWORD PTR [ebp-0x8],eax
  40223e:	mov    ecx,DWORD PTR [ebp-0xc]
  402241:	mov    edx,DWORD PTR [ebp-0x8]
  402244:	mov    DWORD PTR [ecx],edx
  402246:	jmp    0x40219f
  40224b:	mov    esp,ebp
  40224d:	pop    ebp
  40224e:	ret    
  40224f:	int3   
  402250:	push   ebp
  402251:	mov    ebp,esp
  402253:	sub    esp,0x14
  402256:	mov    DWORD PTR [ebp-0x8],0xdd7
  40225d:	mov    DWORD PTR [ebp-0x8],0xdd7
  402264:	mov    DWORD PTR [ebp-0x8],0xdd7
  40226b:	mov    eax,DWORD PTR [ebp+0x8]
  40226e:	xor    eax,DWORD PTR [ebp+0xc]
  402271:	mov    DWORD PTR [ebp-0x10],eax
  402274:	mov    DWORD PTR [ebp-0x8],0xdd7
  40227b:	mov    DWORD PTR [ebp-0x8],0xdd7
  402282:	mov    ecx,DWORD PTR [ebp+0xc]
  402285:	mov    DWORD PTR [ebp-0x4],ecx
  402288:	mov    DWORD PTR [ebp-0x8],0xdd7
  40228f:	mov    DWORD PTR [ebp-0x8],0xdd7
  402296:	mov    edx,DWORD PTR [ebp+0x8]
  402299:	mov    DWORD PTR [ebp-0xc],edx
  40229c:	mov    DWORD PTR [ebp-0x8],0xdd7
  4022a3:	mov    DWORD PTR [ebp-0x8],0xdd7
  4022aa:	mov    eax,DWORD PTR [ebp-0x10]
  4022ad:	mov    DWORD PTR [ebp-0x14],eax
  4022b0:	mov    eax,DWORD PTR [ebp-0x14]
  4022b3:	mov    esp,ebp
  4022b5:	pop    ebp
  4022b6:	ret    
  4022b7:	int3   
  4022b8:	int3   
  4022b9:	int3   
  4022ba:	int3   
  4022bb:	int3   
  4022bc:	int3   
  4022bd:	int3   
  4022be:	int3   
  4022bf:	int3   
  4022c0:	push   ebp
  4022c1:	mov    ebp,esp
  4022c3:	sub    esp,0x8
  4022c6:	mov    DWORD PTR [ebp-0x4],0x0
  4022cd:	jmp    0x4022d8
  4022cf:	mov    eax,DWORD PTR [ebp-0x4]
  4022d2:	add    eax,0x1
  4022d5:	mov    DWORD PTR [ebp-0x4],eax
  4022d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4022db:	cmp    ecx,DWORD PTR [ebp+0x10]
  4022de:	jge    0x40233f
  4022e0:	mov    DWORD PTR [ebp-0x8],0x889bb
  4022e7:	mov    DWORD PTR [ebp-0x8],0x889bb
  4022ee:	mov    DWORD PTR [ebp-0x8],0x889bb
  4022f5:	mov    DWORD PTR [ebp-0x8],0x889bb
  4022fc:	mov    DWORD PTR [ebp-0x8],0x889bb
  402303:	mov    DWORD PTR [ebp-0x8],0x889bb
  40230a:	mov    DWORD PTR [ebp-0x8],0x889bb
  402311:	mov    DWORD PTR [ebp-0x8],0x889bb
  402318:	mov    DWORD PTR [ebp-0x8],0x889bb
  40231f:	mov    DWORD PTR [ebp-0x8],0x889bb
  402326:	mov    DWORD PTR [ebp-0x8],0x889bb
  40232d:	mov    edx,DWORD PTR [ebp+0x8]
  402330:	add    edx,DWORD PTR [ebp-0x4]
  402333:	mov    eax,DWORD PTR [ebp+0xc]
  402336:	add    eax,DWORD PTR [ebp-0x4]
  402339:	mov    cl,BYTE PTR [eax]
  40233b:	mov    BYTE PTR [edx],cl
  40233d:	jmp    0x4022cf
  40233f:	mov    edx,DWORD PTR [ebp+0x8]
  402342:	cmp    edx,DWORD PTR ds:0x422234
  402348:	jne    0x40236b
  40234a:	mov    eax,ds:0x422230
  40234f:	sub    eax,0x400000
  402354:	push   eax
  402355:	mov    ecx,DWORD PTR ds:0x422230
  40235b:	push   ecx
  40235c:	mov    edx,DWORD PTR ds:0x422208
  402362:	push   edx
  402363:	call   0x401700
  402368:	add    esp,0xc
  40236b:	mov    esp,ebp
  40236d:	pop    ebp
  40236e:	ret    
  40236f:	int3   
  402370:	push   ebp
  402371:	mov    ebp,esp
  402373:	sub    esp,0x238
  402379:	mov    DWORD PTR [ebp-0x1c],0x307c
  402380:	mov    DWORD PTR [ebp-0x238],0x3000
  40238a:	mov    DWORD PTR [ebp-0x18],0x40
  402391:	mov    DWORD PTR [ebp-0x22c],0x0
  40239b:	mov    DWORD PTR [ebp-0x230],0x0
  4023a5:	mov    DWORD PTR [ebp-0x14],0x0
  4023ac:	lea    eax,[ebp-0x14]
  4023af:	push   eax
  4023b0:	push   0x0
  4023b2:	call   DWORD PTR ds:0x42139c
  4023b8:	cmp    DWORD PTR [ebp-0x14],0x0
  4023bc:	jne    0x4023c2
  4023be:	xor    eax,eax
  4023c0:	jmp    0x4023de
  4023c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4023c5:	push   ecx
  4023c6:	mov    edx,DWORD PTR [ebp-0x238]
  4023cc:	push   edx
  4023cd:	mov    eax,DWORD PTR [ebp+0x8]
  4023d0:	push   eax
  4023d1:	mov    ecx,DWORD PTR [ebp-0x22c]
  4023d7:	push   ecx
  4023d8:	call   DWORD PTR ds:0x4213a8
  4023de:	mov    esp,ebp
  4023e0:	pop    ebp
  4023e1:	ret    
  4023e2:	int3   
  4023e3:	int3   
  4023e4:	int3   
  4023e5:	int3   
  4023e6:	int3   
  4023e7:	int3   
  4023e8:	int3   
  4023e9:	int3   
  4023ea:	int3   
  4023eb:	int3   
  4023ec:	int3   
  4023ed:	int3   
  4023ee:	int3   
  4023ef:	int3   
  4023f0:	push   ebp
  4023f1:	mov    ebp,esp
  4023f3:	sub    esp,0xc
  4023f6:	mov    DWORD PTR [ebp-0xc],0x889bb
  4023fd:	mov    DWORD PTR [ebp-0xc],0x889bb
  402404:	mov    DWORD PTR [ebp-0xc],0x889bb
  40240b:	mov    DWORD PTR [ebp-0xc],0x889bb
  402412:	mov    DWORD PTR [ebp-0xc],0x889bb
  402419:	mov    DWORD PTR [ebp-0xc],0x889bb
  402420:	mov    DWORD PTR [ebp-0xc],0x889bb
  402427:	mov    DWORD PTR [ebp-0xc],0x889bb
  40242e:	mov    DWORD PTR [ebp-0xc],0x889bb
  402435:	mov    DWORD PTR [ebp-0xc],0x889bb
  40243c:	mov    DWORD PTR [ebp-0xc],0x889bb
  402443:	mov    DWORD PTR [ebp-0x4],0x0
  40244a:	jmp    0x402455
  40244c:	mov    eax,DWORD PTR [ebp-0x4]
  40244f:	add    eax,0x1
  402452:	mov    DWORD PTR [ebp-0x4],eax
  402455:	mov    ecx,DWORD PTR [ebp-0x4]
  402458:	cmp    ecx,DWORD PTR ds:0x42221c
  40245e:	jae    0x40254c
  402464:	mov    DWORD PTR [ebp-0xc],0x889bb
  40246b:	mov    DWORD PTR [ebp-0xc],0x889bb
  402472:	mov    DWORD PTR [ebp-0xc],0x889bb
  402479:	mov    DWORD PTR [ebp-0xc],0x889bb
  402480:	mov    DWORD PTR [ebp-0xc],0x889bb
  402487:	mov    DWORD PTR [ebp-0xc],0x889bb
  40248e:	mov    DWORD PTR [ebp-0xc],0x889bb
  402495:	mov    DWORD PTR [ebp-0xc],0x889bb
  40249c:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024a3:	mov    edx,DWORD PTR [ebp-0x4]
  4024a6:	push   edx
  4024a7:	mov    eax,ds:0x422228
  4024ac:	push   eax
  4024ad:	call   0x401080
  4024b2:	add    esp,0x8
  4024b5:	sar    eax,0xc
  4024b8:	cmp    eax,0x3
  4024bb:	jne    0x402547
  4024c1:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024c8:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024cf:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024d6:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024dd:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024e4:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024eb:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024f2:	mov    DWORD PTR [ebp-0xc],0x889bb
  4024f9:	mov    DWORD PTR [ebp-0xc],0x889bb
  402500:	mov    ecx,DWORD PTR [ebp-0x4]
  402503:	push   ecx
  402504:	mov    edx,DWORD PTR ds:0x422228
  40250a:	push   edx
  40250b:	call   0x401080
  402510:	add    esp,0x8
  402513:	and    eax,0xfff
  402518:	add    eax,0xa124
  40251d:	mov    DWORD PTR [ebp-0x8],eax
  402520:	mov    eax,DWORD PTR [ebp+0x8]
  402523:	mov    ecx,DWORD PTR [ebp+0xc]
  402526:	add    ecx,DWORD PTR [eax]
  402528:	mov    edx,DWORD PTR [ebp-0x8]
  40252b:	mov    eax,DWORD PTR [ecx+edx*1-0xa124]
  402532:	add    eax,DWORD PTR [ebp+0x10]
  402535:	mov    ecx,DWORD PTR [ebp+0x8]
  402538:	mov    edx,DWORD PTR [ebp+0xc]
  40253b:	add    edx,DWORD PTR [ecx]
  40253d:	mov    ecx,DWORD PTR [ebp-0x8]
  402540:	mov    DWORD PTR [edx+ecx*1-0xa124],eax
  402547:	jmp    0x40244c
  40254c:	mov    esp,ebp
  40254e:	pop    ebp
  40254f:	ret    
  402550:	and    BYTE PTR [esi],dl
  402552:	inc    edx
  402553:	add    BYTE PTR [esi+edx*1],ah
  402556:	inc    edx
  402557:	add    BYTE PTR [esi+edx*1+0x42],cl
  40255b:	add    BYTE PTR [esi+edx*1+0x42],dl
  40255f:	add    BYTE PTR [eax+0x16],bl
  402562:	inc    edx
  402563:	add    BYTE PTR [eax],dh
  402565:	push   ss
  402566:	inc    edx
  402567:	add    BYTE PTR [esi+edx*1],dh
  40256a:	inc    edx
  40256b:	add    BYTE PTR [esi+edx*1],ch
  40256e:	inc    edx
  40256f:	add    BYTE PTR [eax],bh
  402571:	push   ss
  402572:	inc    edx
  402573:	add    BYTE PTR [esi+edx*1],bh
  402576:	inc    edx
  402577:	add    BYTE PTR [eax+0x16],al
  40257a:	inc    edx
  40257b:	add    BYTE PTR [esi+edx*1+0x42],al
  40257f:	add    BYTE PTR [ebx+edx*1+0x13b00042],ch
  402586:	inc    edx
  402587:	add    BYTE PTR [ebx+edx*1+0x13b80042],dh
  40258e:	inc    edx
  40258f:	add    BYTE PTR [ebx+edx*1+0x13c00042],bh
  402596:	inc    edx
  402597:	add    ah,al
  402599:	adc    eax,DWORD PTR [edx+0x0]
  40259c:	enter  0x4213,0x0
  4025a0:	int3   
  4025a1:	adc    eax,DWORD PTR [edx+0x0]
  4025a4:	rcl    BYTE PTR [ebx],1
  4025a6:	inc    edx
  4025a7:	add    ah,dl
  4025a9:	adc    eax,DWORD PTR [edx+0x0]
  4025ac:	fcom   DWORD PTR [ebx]
  4025ae:	inc    edx
  4025af:	add    ah,bl
  4025b1:	adc    eax,DWORD PTR [edx+0x0]
  4025b4:	loopne 0x4025c9
  4025b6:	inc    edx
  4025b7:	add    ah,ah
  4025b9:	adc    eax,DWORD PTR [edx+0x0]
  4025bc:	call   0xec4067d4
  4025c1:	adc    eax,DWORD PTR [edx+0x0]
  4025c4:	lock adc eax,DWORD PTR [edx+0x0]
  4025c8:	hlt    
  4025c9:	adc    eax,DWORD PTR [edx+0x0]
  4025cc:	clc    
  4025cd:	adc    eax,DWORD PTR [edx+0x0]
  4025d0:	cld    
  4025d1:	adc    eax,DWORD PTR [edx+0x0]
  4025d4:	add    BYTE PTR [edx+eax*2],dl
  4025d7:	add    BYTE PTR [esp+edx*1],al
  4025da:	inc    edx
  4025db:	add    BYTE PTR [eax],cl
  4025dd:	adc    al,0x42
  4025df:	add    BYTE PTR [esp+edx*1],cl
  4025e2:	inc    edx
  4025e3:	add    BYTE PTR [eax],dl
  4025e5:	adc    al,0x42
  4025e7:	add    BYTE PTR [esp+edx*1],dl
  4025ea:	inc    edx
  4025eb:	add    BYTE PTR [eax],bl
  4025ed:	adc    al,0x42
  4025ef:	add    BYTE PTR [esp+edx*1],bl
  4025f2:	inc    edx
  4025f3:	add    BYTE PTR [eax],ah
  4025f5:	adc    al,0x42
  4025f7:	add    BYTE PTR [esp+edx*1],ah
  4025fa:	inc    edx
  4025fb:	add    BYTE PTR [eax],ch
  4025fd:	adc    al,0x42
  4025ff:	add    BYTE PTR [esp+edx*1],ch
  402602:	inc    edx
  402603:	add    BYTE PTR [eax],dh
  402605:	adc    al,0x42
  402607:	add    BYTE PTR [esp+edx*1],dh
  40260a:	inc    edx
  40260b:	add    BYTE PTR [eax],bh
  40260d:	adc    al,0x42
  40260f:	add    BYTE PTR [esp+edx*1],bh
  402612:	inc    edx
  402613:	add    BYTE PTR [eax+0x14],al
  402616:	inc    edx
  402617:	add    BYTE PTR [esp+edx*1+0x42],al
  40261b:	add    BYTE PTR [ebx+edx*1+0x14480042],bl
  402622:	inc    edx
  402623:	add    BYTE PTR [esp+edx*1+0x42],cl
  402627:	add    BYTE PTR [eax+0x14],dl
  40262a:	inc    edx
  40262b:	add    BYTE PTR [esp+edx*1+0x42],dl
  40262f:	add    BYTE PTR [eax+0x14],bl
  402632:	inc    edx
  402633:	add    BYTE PTR [esp+edx*1+0x42],bl
  402637:	add    BYTE PTR [eax+0x14],ah
  40263a:	inc    edx
  40263b:	add    BYTE PTR [esp+edx*1+0x42],ah
  40263f:	add    BYTE PTR [eax+0x14],ch
  402642:	inc    edx
  402643:	add    BYTE PTR [esp+edx*1+0x42],ch
  402647:	add    BYTE PTR [eax+0x14],dh
  40264a:	inc    edx
  40264b:	add    BYTE PTR [esp+edx*1+0x42],dh
  40264f:	add    BYTE PTR [eax+0x14],bh
  402652:	inc    edx
  402653:	add    BYTE PTR [esp+edx*1+0x42],bh
  402657:	add    BYTE PTR [eax-0x57ffbdec],al
  40265d:	adc    eax,DWORD PTR [edx+0x0]
  402660:	test   BYTE PTR [edx+eax*2],dl
  402663:	add    BYTE PTR [eax-0x73ffbdec],cl
  402669:	adc    al,0x42
  40266b:	add    BYTE PTR [eax-0x6bffbdec],dl
  402671:	adc    al,0x42
  402673:	add    BYTE PTR [ebx+edx*1+0x14980042],ah
  40267a:	inc    edx
  40267b:	add    BYTE PTR [esp+edx*1+0x15e00042],bl
  402682:	inc    edx
  402683:	add    ah,ah
  402685:	adc    eax,0x15e80042
  40268a:	inc    edx
  40268b:	add    ah,ch
  40268d:	adc    eax,0x15f00042
  402692:	inc    edx
  402693:	add    ah,dh
  402695:	adc    eax,0x15f80042
  40269a:	inc    edx
  40269b:	add    ah,bh
  40269d:	adc    eax,0x16000042
  4026a2:	inc    edx
  4026a3:	add    BYTE PTR [esi+edx*1],al
  4026a6:	inc    edx
  4026a7:	add    BYTE PTR [eax],cl
  4026a9:	push   ss
  4026aa:	inc    edx
  4026ab:	add    BYTE PTR [esi+edx*1],cl
  4026ae:	inc    edx
  4026af:	add    BYTE PTR [eax],dl
  4026b1:	push   ss
  4026b2:	inc    edx
  4026b3:	add    BYTE PTR [esi+edx*1],dl
  4026b6:	inc    edx
  4026b7:	add    BYTE PTR [eax],bl
  4026b9:	push   ss
  4026ba:	inc    edx
  4026bb:	add    BYTE PTR [esp+edx*1+0x14a80042],ah
  4026c2:	inc    edx
  4026c3:	add    BYTE PTR [esp+edx*1+0x14b00042],ch
  4026ca:	inc    edx
  4026cb:	add    BYTE PTR [esp+edx*1+0x14b80042],dh
  4026d2:	inc    edx
  4026d3:	add    BYTE PTR [esp+edx*1+0x14c00042],bh
  4026da:	inc    edx
  4026db:	add    ah,al
  4026dd:	adc    al,0x42
  4026df:	add    al,cl
  4026e1:	adc    al,0x42
  4026e3:	add    ah,cl
  4026e5:	adc    al,0x42
  4026e7:	add    al,dl
  4026e9:	adc    al,0x42
  4026eb:	add    ah,dl
  4026ed:	adc    al,0x42
  4026ef:	add    al,bl
  4026f1:	adc    al,0x42
  4026f3:	add    ah,bl
  4026f5:	adc    al,0x42
  4026f7:	add    al,ah
  4026f9:	adc    al,0x42
  4026fb:	add    ah,ah
  4026fd:	adc    al,0x42
  4026ff:	add    al,ch
  402701:	adc    al,0x42
  402703:	add    ah,ch
  402705:	adc    al,0x42
  402707:	add    al,dh
  402709:	adc    al,0x42
  40270b:	add    ah,dh
  40270d:	adc    al,0x42
  40270f:	add    al,bh
  402711:	adc    al,0x42
  402713:	add    ah,bh
  402715:	adc    al,0x42
  402717:	add    BYTE PTR [eax],al
  402719:	adc    eax,0x15040042
  40271e:	inc    edx
  40271f:	add    BYTE PTR [eax],cl
  402721:	adc    eax,0x150c0042
  402726:	inc    edx
  402727:	add    BYTE PTR [eax],dl
  402729:	adc    eax,0x15140042
  40272e:	inc    edx
  40272f:	add    BYTE PTR [eax],bl
  402731:	adc    eax,0x151c0042
  402736:	inc    edx
  402737:	add    BYTE PTR [eax],ah
  402739:	adc    eax,0x15240042
  40273e:	inc    edx
  40273f:	add    BYTE PTR [eax],ch
  402741:	adc    eax,0x152c0042
  402746:	inc    edx
  402747:	add    BYTE PTR [eax],dh
  402749:	adc    eax,0x15340042
  40274e:	inc    edx
  40274f:	add    BYTE PTR [eax],bh
  402751:	adc    eax,0x153c0042
  402756:	inc    edx
  402757:	add    BYTE PTR [eax+0x15],al
  40275a:	inc    edx
  40275b:	add    BYTE PTR [ebp+edx*1+0x42],al
  40275f:	add    BYTE PTR [eax+0x15],cl
  402762:	inc    edx
  402763:	add    BYTE PTR [ebp+edx*1+0x42],cl
  402767:	add    BYTE PTR [eax+0x15],dl
  40276a:	inc    edx
  40276b:	add    BYTE PTR [ebp+edx*1+0x42],dl
  40276f:	add    BYTE PTR [eax+0x15],bl
  402772:	inc    edx
  402773:	add    BYTE PTR [ebp+edx*1+0x42],bl
  402777:	add    BYTE PTR [eax+0x15],ah
  40277a:	inc    edx
  40277b:	add    BYTE PTR [ebp+edx*1+0x42],ah
  40277f:	add    BYTE PTR [eax+0x15],ch
  402782:	inc    edx
  402783:	add    BYTE PTR [ebp+edx*1+0x42],ch
  402787:	add    BYTE PTR [eax+0x15],dh
  40278a:	inc    edx
  40278b:	add    BYTE PTR [ebp+edx*1+0x42],dh
  40278f:	add    BYTE PTR [eax+0x15],bh
  402792:	inc    edx
  402793:	add    BYTE PTR [ebp+edx*1+0x42],bh
  402797:	add    BYTE PTR [eax-0x7bffbdeb],al
  40279d:	adc    eax,0x15880042
  4027a2:	inc    edx
  4027a3:	add    BYTE PTR [ebp+edx*1+0x15900042],cl
  4027aa:	inc    edx
  4027ab:	add    BYTE PTR [ebp+edx*1+0x15980042],dl
  4027b2:	inc    edx
  4027b3:	add    BYTE PTR [ebp+edx*1+0x15a00042],bl
  4027ba:	inc    edx
  4027bb:	add    BYTE PTR [ebp+edx*1+0x15a80042],ah
  4027c2:	inc    edx
  4027c3:	add    BYTE PTR [ebp+edx*1+0x15b00042],ch
  4027ca:	inc    edx
  4027cb:	add    BYTE PTR [ebp+edx*1+0x15b80042],dh
  4027d2:	inc    edx
  4027d3:	add    BYTE PTR [ebp+edx*1+0x15c00042],bh
  4027da:	inc    edx
  4027db:	add    ah,al
  4027dd:	adc    eax,0x15c80042
  4027e2:	inc    edx
  4027e3:	add    ah,cl
  4027e5:	adc    eax,0x15d00042
  4027ea:	inc    edx
  4027eb:	add    ah,dl
  4027ed:	adc    eax,0x15d80042
  4027f2:	inc    edx
  4027f3:	add    BYTE PTR [eax],al
  4027f5:	add    al,BYTE PTR [eax]
  4027f7:	add    BYTE PTR [esp+edx*4-0x6b7bfff8],cl
  4027fe:	or     BYTE PTR [eax],al
  402800:	adc    BYTE PTR [esi-0x59ffcd68],ah
  402806:	nop
  402807:	xor    dh,al
  402809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40280a:	test   al,0x32
  40280c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40280e:	mov    al,ds:0x9f48c32
  402813:	add    BYTE PTR [eax-0x6c],ch
  402816:	or     BYTE PTR [eax],al
  402818:	lahf   
  402819:	test   eax,0xa90c3d73
  40281e:	cmp    BYTE PTR ds:0x3d90a913,0xfa
  402825:	test   al,0xcb
  402827:	cmp    eax,0x3dd0a942
  40282c:	add    BYTE PTR [ecx-0x5538c1eb],ch
  402832:	dec    ecx
  402833:	ds inc ebp
  402835:	stos   BYTE PTR es:[edi],al
  402836:	lds    edi,FWORD PTR [esi]
  402838:	fsubr  DWORD PTR [edx-0x1b73fff8]
  40283e:	or     DWORD PTR [eax],eax
  402840:	sbb    BYTE PTR [eax+ecx*1-0x4a5bdd00],dl
  402847:	xor    cl,cl
  402849:	mov    ds:0xa3c930fc,eax
  40284e:	pop    ds
  40284f:	xor    DWORD PTR [ebp+0x231ffa4],edi
  402855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402856:	mov    bl,0x32
  402858:	shl    DWORD PTR [ebp+0x32de],0x0
	...
  40286f:	add    BYTE PTR [ebp+eiz*4-0x5887cd0b],ch
  402876:	adc    dh,BYTE PTR [ebx]
  402878:	pop    esi
  402879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40287a:	pop    ebp
  40287b:	xor    ecx,DWORD PTR ds:0x1b3381a7
  402881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402882:	sahf   
  402883:	xor    esi,DWORD PTR [eax]
  402885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402886:	mov    ebp,0xcba63733
  40288b:	xor    eax,DWORD PTR [esi-0x5a]
  40288e:	fnstenv [ebx]
  402890:	dec    ebx
  402891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402892:	out    0x33,eax
  402894:	pop    ecx
  402895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402896:	sysenter 
  402898:	jge    0x40283a
  40289a:	adc    esi,DWORD PTR [eiz*4-0x32cbc460]
  4028a1:	mov    al,ds:0xa0c23470
  4028a6:	mov    WORD PTR [ecx+eiz*1],?
  4028a9:	mov    eax,ds:0xa0fe3492
  4028ae:	out    0x34,al
  4028b0:	and    al,0xa1
  4028b2:	or     eax,0x139f7d35
  4028b7:	xor    eax,0x35269f70
  4028bc:	push   ebp
  4028bd:	lahf   
  4028be:	ss xor eax,0x35459f50
  4028c4:	arpl   WORD PTR [edi-0x6099ca94],bx
  4028ca:	addr16 xor eax,0x35719f79
  4028d0:	push   0xffffff9f
  4028d2:	mov    WORD PTR ds:0x0,?
	...
  4028e8:	(bad)  
  4028e9:	lahf   
  4028ea:	nop
  4028eb:	xor    eax,0x35aa9ff9
  4028f0:	adc    esp,DWORD PTR [eax-0x603dca3e]
  4028f6:	hlt    
  4028f7:	xor    eax,0x3604a28e
  4028fc:	and    BYTE PTR [edx-0x5ddbc9ad],0x74
  402903:	adc    ah,BYTE PTR ss:[ebx-0x5cfac965]
  40290a:	test   eax,0xbca2e536
  40290f:	les    esp,FWORD PTR ss:[edx-0x5d9ac927]
  402916:	loopne 0x40294e
  402918:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40291f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402926:	or     BYTE PTR [eax],al
  402928:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40292f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402936:	or     BYTE PTR [eax],al
  402938:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40293f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402946:	or     BYTE PTR [eax],al
  402948:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  40295f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402966:	or     BYTE PTR [eax],al
  402968:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40296f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402976:	or     BYTE PTR [eax],al
  402978:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40297f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402986:	or     BYTE PTR [eax],al
  402988:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40298f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402996:	or     BYTE PTR [eax],al
  402998:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40299f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4029a6:	or     BYTE PTR [eax],al
  4029a8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4029af:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4029b6:	or     BYTE PTR [eax],al
  4029b8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4029bf:	add    BYTE PTR [esp+edx*4+0x8],cl
	...
  4029d6:	add    BYTE PTR [eax],al
  4029d8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4029df:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4029e6:	or     BYTE PTR [eax],al
  4029e8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4029ef:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4029f6:	or     BYTE PTR [eax],al
  4029f8:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4029ff:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402a06:	or     BYTE PTR [eax],al
  402a08:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  402a0f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402a16:	or     BYTE PTR [eax],al
  402a18:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  402a1f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402a26:	or     BYTE PTR [eax],al
  402a28:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  402a2f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402a36:	or     BYTE PTR [eax],al
  402a38:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  402a4f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  402a56:	or     BYTE PTR [eax],al
  402a58:	mov    WORD PTR [eax+ecx*1+0x1760000],ss
  402a5f:	add    BYTE PTR [esp+ebp*8-0xe2cffb7],cl
  402a66:	jl     0x402ab8
  402a68:	fdivp  st(3),st
  402a6a:	imul   eax,DWORD PTR [ecx-0x10],0xfffffff0
  402a6e:	jp     0x402ad5
  402a70:	(bad)  
  402a72:	or     BYTE PTR [eax],al
  402a74:	fdivr  st,st(3)
  402a76:	imul   esp,DWORD PTR [eax+edx*8-0x3],0xe6ad726a
  402a7e:	jno    0x402ac5
  402a80:	mov    ah,0xd5
  402a82:	or     BYTE PTR [eax],al
  402a84:	fdivr  st,st(3)
  402a86:	imul   esp,DWORD PTR [eax+edx*8-0x3],0xe6ad726a
  402a8e:	jno    0x402ad5
  402a90:	xchg   esp,eax
  402a91:	ret    
  402a92:	or     BYTE PTR [eax],al
  402a94:	push   ebx
  402a95:	icebp  
  402a96:	jl     0x402ae5
  402a98:	jae    0x402a8a
  402a9a:	jge    0x402b08
  402a9c:	jno    0x402a7a
  402a9e:	imul   ebp,DWORD PTR [esi+0x68],0x8c416df8
  402aa5:	xchg   esp,eax
  402aa6:	or     BYTE PTR [eax],al
  402aa8:	dec    edi
  402aa9:	out    0x6d,al
  402aab:	popa   
  402aac:	pusha  
  402aad:	icebp  
  402aae:	dec    esi
  402aaf:	imul   esp,DWORD PTR [eax-0xf],0xe7380049
  402ab6:	jl     0x402b2a
  402ab8:	das    
  402ab9:	cmc    
  402aba:	jl     0x402afd
  402abc:	mov    WORD PTR [eax+ecx*1+0x7cf14b00],ss
  402ac3:	push   edi
	...
  402ad8:	xor    eax,0x1b6f6cfa
  402add:	out    0x4c,eax
  402adf:	imul   ebx,DWORD PTR [esi],0x23746bf1
  402ae5:	out    0x71,al
  402ae7:	inc    ecx
  402ae8:	mov    WORD PTR [eax+ecx*1+0x7cefcb00],ss
  402aef:	dec    ebp
  402af0:	jmp    0x402ae2
  402af2:	jge    0x402b60
  402af4:	jmp    0xf0ae94d5
  402af9:	clc    
  402afa:	ins    DWORD PTR es:[edi],dx
  402afb:	push   edi
  402afc:	mov    WORD PTR [eax+ecx*1+0x48969000],ss
  402b03:	add    BYTE PTR [eax-0x6a],bh
  402b06:	dec    eax
  402b07:	add    BYTE PTR [eax-0x6a],dh
  402b0a:	dec    eax
  402b0b:	add    BYTE PTR [eax-0x6a],bh
  402b0e:	dec    eax
  402b0f:	add    ah,al
  402b11:	xchg   esi,eax
  402b12:	dec    eax
  402b13:	add    al,bl
  402b15:	xchg   esi,eax
  402b16:	dec    eax
  402b17:	add    BYTE PTR [esi+edx*4-0x695bffb8],ch
  402b1e:	dec    eax
  402b1f:	add    bl,dl
  402b21:	out    dx,eax
  402b22:	jl     0x402b74
  402b24:	sahf   
  402b25:	stc    
  402b26:	imul   eax,DWORD PTR [ecx+0x70],0xfffffff0
  402b2a:	jp     0x402b91
  402b2c:	jg     0x402b13
  402b2e:	or     BYTE PTR [eax],al
  402b30:	dec    eax
  402b31:	stc    
  402b32:	imul   esp,DWORD PTR [eax+eax*2-0x5],0xe66d726a
  402b3a:	jno    0x402b81
	...
  402b50:	ror    DWORD PTR fs:[eax],cl
  402b53:	add    BYTE PTR [edi-0x11],ah
  402b56:	jp     0x402bc6
  402b58:	imul   edi,eax,0xf07a323b
  402b5e:	fs ins BYTE PTR es:[edi],dx
  402b60:	mov    WORD PTR [eax+ecx*1+0x7ee52900],ss
  402b67:	arpl   WORD PTR [esi],di
  402b69:	loopne 0x402b91
  402b6b:	fs cmp al,bh
  402b6e:	or     BYTE PTR [eax],al
  402b70:	xor    edi,ebp
  402b72:	gs jae 0x402ba6
  402b75:	loopne 0x402b7f
  402b77:	add    BYTE PTR [ecx],ah
  402b79:	in     eax,0x7e
  402b7b:	arpl   si,di
  402b7d:	loopne 0x402ba5
  402b7f:	fs lock clc 
  402b82:	or     BYTE PTR [eax],al
  402b84:	jmp    0xfca39178
  402b89:	jmp    0x402b93
  402b8b:	add    dl,al
  402b8d:	sti    
  402b8e:	jp     0x402c04
  402b90:	fpatan 
  402b92:	fs inc ecx
  402b94:	call   0x8ca39391
  402b99:	xchg   esp,eax
  402b9a:	or     BYTE PTR [eax],al
  402b9c:	loope  0x402b98
  402b9e:	gs popa 
  402ba0:	mov    esp,0xc36561c2
  402ba5:	fldcw  WORD PTR [esi+0x46]
  402ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ba9:	clc    
  402baa:	ins    DWORD PTR es:[edi],dx
  402bab:	add    dl,al
  402bad:	sti    
  402bae:	jp     0x402c24
  402bb0:	cdq    
  402bb1:	repz fs push eax
	...
  402bc8:	sahf   
  402bc9:	stc    
  402bca:	jl     0x402c31
  402bcc:	scas   eax,DWORD PTR es:[edi]
  402bcd:	loopne 0x402bd7
  402bcf:	add    BYTE PTR [edi+ebp*8+0x69],dl
  402bd3:	jo     0x402c22
  402bd5:	clc    
  402bd6:	outs   dx,DWORD PTR fs:[esi]
  402bd8:	outs   dx,DWORD PTR ds:[esi]
  402bd9:	xchg   esp,eax
  402bda:	or     BYTE PTR [eax],al
  402bdc:	addr16 out dx,eax
  402bde:	jp     0x402c4e
  402be0:	jno    0x402bda
  402be2:	cmp    esi,DWORD PTR [edx]
  402be4:	mov    dl,0xf0
  402be6:	fs ins BYTE PTR es:[edi],dx
  402be8:	mov    WORD PTR [eax+ecx*1+0x7cef4b00],ss
  402bef:	push   eax
  402bf0:	ds stc 
  402bf2:	imul   esp,DWORD PTR [ebp+0x3f],0xffffffe5
  402bf6:	inc    eax
  402bf7:	gs sub eax,0x8c0008e4
  402bfd:	xchg   esp,eax
  402bfe:	outs   dx,BYTE PTR ds:[esi]
  402bff:	add    DWORD PTR [eax+esi*1+0x7e8c9051],ecx
  402c06:	or     eax,DWORD PTR [eax]
  402c08:	mov    WORD PTR [edi+0xb],?
  402c0b:	add    BYTE PTR [edx+ebp*2-0x5a73ff0d],cl
  402c12:	or     eax,DWORD PTR [eax]
  402c14:	mov    WORD PTR [ebp+0xb],?
  402c17:	add    BYTE PTR [ebp+edi*4+0x7d8c000c],cl
  402c1e:	or     eax,DWORD PTR [eax]
  402c20:	mov    WORD PTR [ebp+0xb],?
  402c23:	add    BYTE PTR [ebp+edi*2+0x7d8c000b],cl
  402c2a:	or     eax,DWORD PTR [eax]
	...
  402c40:	mov    WORD PTR [ebp+0xb],?
  402c43:	add    BYTE PTR [ebp+edi*2+0x7d8c000b],cl
  402c4a:	or     eax,DWORD PTR [eax]
  402c4c:	mov    WORD PTR [ebp+0xb],?
  402c4f:	add    BYTE PTR [ebp+edi*8+0x6f8c000c],cl
  402c56:	adc    bh,BYTE PTR [edx+0x9a77d92]
  402c5c:	dec    ecx
  402c5d:	pop    ebp
  402c5e:	mov    bl,0x1
  402c60:	sar    BYTE PTR [eax],0x2d
  402c63:	push   esp
  402c64:	je     0x402bfa
  402c66:	jg     0x402c88
  402c68:	jl     0x402cd5
  402c6a:	bound  esp,QWORD PTR [edi+0x7e]
  402c6d:	pop    esp
  402c6e:	pusha  
  402c6f:	and    BYTE PTR [edi+0x5c],ch
  402c72:	popa   
  402c73:	outs   dx,BYTE PTR ds:[esi]
  402c74:	jnp    0x402cbf
  402c76:	sub    esp,DWORD PTR [edx+0x69]
  402c79:	popf   
  402c7a:	jle    0x402cf1
  402c7c:	push   0xffffff9d
  402c7e:	outs   dx,BYTE PTR gs:[esi]
  402c80:	lods   al,BYTE PTR ds:[esi]
  402c81:	xor    DWORD PTR [edx+0x53],eax
  402c84:	ins    BYTE PTR es:[edi],dx
  402c85:	push   eax
  402c86:	bound  esp,QWORD PTR [ecx+ebp*1+0x67]
  402c8a:	add    BYTE PTR ds:0x3c59486,cl
  402c90:	mov    WORD PTR [ecx+eiz*8-0x4e6b73fd],ss
  402c97:	inc    eax
  402c98:	mov    WORD PTR [ebp+edx*4+0x19948f04],ss
  402c9f:	cmp    ch,dh
  402ca1:	(bad)
	...
  402cb5:	add    BYTE PTR [eax],al
  402cb7:	add    BYTE PTR [esp+edx*4-0x6b73fc1f],cl
  402cbe:	add    DWORD PTR [ebx+ecx*4],eax
  402cc1:	xchg   ebp,eax
  402cc2:	cli    
  402cc3:	add    al,0x8e
  402cc5:	mov    ds:0x948d1be1,al
  402cca:	loope  0x402d21
  402ccc:	mov    WORD PTR [ecx+eiz*8+0x18948c03],ss
  402cd3:	pop    es
  402cd4:	lea    edx,[ecx+eiz*8-0x1e6b73ed]
  402cdb:	xor    ecx,DWORD PTR [ebp-0x33fc1e6c]
  402ce1:	xchg   esp,eax
  402ce2:	loope  0x402cf7
  402ce4:	mov    WORD PTR [ecx+eiz*8-0x1a6b73fb],ss
  402ceb:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc1f]
  402cf2:	in     eax,0x3
  402cf4:	mov    WORD PTR [ecx+eiz*8-0x1e6b73fd],ss
  402cfb:	xchg   ebx,eax
  402cfc:	lea    edx,[ecx+eiz*8-0x356b73fb]
  402d03:	clc    
  402d04:	lea    edx,[ebx+eiz*8-0x1e6b73fd]
  402d0b:	add    edi,DWORD PTR [esp+edx*4-0x1f]
  402d0f:	adc    ecx,DWORD PTR [esp+edx*4-0x6b83fc1f]
  402d16:	loope  0x402d2b
  402d18:	mov    WORD PTR [eax+ecx*1+0xe9],ss
	...
  402d2f:	add    BYTE PTR [edi-0x7026f76c],cl
  402d35:	xchg   esp,eax
  402d36:	or     cl,ch
  402d38:	(bad)  
  402d39:	xchg   esp,eax
  402d3a:	or     cl,ch
  402d3c:	(bad)  
  402d3d:	xchg   esp,eax
  402d3e:	or     BYTE PTR [ebp+0x21089526],dh
  402d44:	(bad)  
  402d45:	xchg   esp,eax
  402d46:	or     cl,ch
  402d48:	(bad)  
  402d49:	xchg   esp,eax
  402d4a:	or     cl,ch
  402d4c:	(bad)  
  402d4d:	xchg   esp,eax
  402d4e:	or     cl,ch
  402d50:	(bad)  
  402d51:	xchg   esp,eax
  402d52:	or     cl,ch
  402d54:	(bad)  
  402d55:	xchg   esp,eax
  402d56:	or     cl,ch
  402d58:	(bad)  
  402d59:	xchg   esp,eax
  402d5a:	or     cl,ch
  402d5c:	(bad)  
  402d5d:	xchg   esp,eax
  402d5e:	or     cl,ch
  402d60:	(bad)  
  402d61:	xchg   esp,eax
  402d62:	or     cl,ch
  402d64:	(bad)  
  402d65:	xchg   esp,eax
  402d66:	or     cl,ch
  402d68:	(bad)  
  402d69:	xchg   esp,eax
  402d6a:	or     cl,ch
  402d6c:	(bad)  
  402d6d:	xchg   esp,eax
  402d6e:	or     cl,ch
  402d70:	(bad)  
  402d71:	xchg   esp,eax
  402d72:	or     cl,ch
  402d74:	(bad)  
  402d75:	xchg   esp,eax
  402d76:	or     cl,ch
  402d78:	(bad)  
  402d79:	xchg   esp,eax
  402d7a:	or     cl,ch
  402d7c:	(bad)  
  402d7d:	xchg   esp,eax
  402d7e:	or     cl,ch
  402d80:	(bad)  
  402d81:	xchg   esp,eax
  402d82:	or     cl,ch
  402d84:	(bad)  
  402d85:	xchg   esp,eax
  402d86:	or     cl,ch
  402d88:	(bad)  
  402d89:	xchg   esp,eax
  402d8a:	or     cl,ch
  402d8c:	(bad)  
  402d8d:	xchg   esp,eax
  402d8e:	or     cl,ch
  402d90:	(bad)  
  402d91:	xchg   esp,eax
  402d92:	or     cl,ch
	...
  402da8:	(bad)  
  402da9:	xchg   esp,eax
  402daa:	or     BYTE PTR [ebp+0x7908940f],bl
  402db0:	(bad)  
  402db1:	xchg   esp,eax
  402db2:	or     cl,ch
  402db4:	(bad)  
  402db5:	xchg   esp,eax
  402db6:	or     cl,ch
  402db8:	(bad)  
  402db9:	xchg   esp,eax
  402dba:	or     BYTE PTR [eax],al
  402dbc:	in     eax,0x91
  402dbe:	or     BYTE PTR [eax],al
  402dc0:	mov    ch,0x91
  402dc2:	or     BYTE PTR [eax],al
  402dc4:	mov    ch,0x91
  402dc6:	or     BYTE PTR [eax],al
  402dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dc9:	xchg   ecx,eax
  402dca:	or     BYTE PTR [eax],al
  402dcc:	fcomi  st,st(5)
  402dce:	ins    DWORD PTR es:[edi],dx
  402dcf:	js     0x402dd2
  402dd1:	xchg   edx,eax
  402dd2:	or     BYTE PTR [eax],al
  402dd4:	out    dx,al
  402dd5:	test   BYTE PTR [ecx],cl
  402dd7:	add    BYTE PTR [ebp-0x5afff77f],ah
  402ddd:	mov    DWORD PTR [ecx],ecx
  402ddf:	add    BYTE PTR [ebp-0x71],dh
  402de2:	or     BYTE PTR [eax],al
  402de4:	jne    0x402d77
  402de6:	or     BYTE PTR [eax],al
  402de8:	gs xchg ecx,eax
  402dea:	or     BYTE PTR [eax],al
  402dec:	gs xchg ecx,eax
  402dee:	or     BYTE PTR [eax],al
  402df0:	xchg   ebp,eax
  402df1:	nop
  402df2:	or     BYTE PTR [eax-0x75],ah
  402df5:	fisubr WORD PTR [ecx+eiz*2-0x3f]
  402df9:	icebp  
  402dfa:	or     BYTE PTR [eax],al
  402dfc:	gs xchg edx,eax
  402dfe:	or     BYTE PTR [eax],al
  402e00:	xor    eax,0x350009a1
  402e05:	(bad)
  402e09:	xchg   DWORD PTR [ecx],ecx
	...
  402e1f:	add    BYTE PTR ds:0x35000891,ah
  402e25:	xchg   ecx,eax
  402e26:	or     BYTE PTR [eax],al
  402e28:	xor    eax,0x65000891
  402e2d:	nop
  402e2e:	or     BYTE PTR [eax+0x3b],al
  402e31:	lds    ebp,FWORD PTR [ecx+0x74]
  402e34:	xchg   esp,eax
  402e35:	nop
  402e36:	or     BYTE PTR [eax],al
  402e38:	in     eax,dx
  402e39:	fisttp DWORD PTR [eax]
  402e3b:	add    ch,ah
  402e3d:	ror    BYTE PTR [ecx],1
  402e3f:	add    ch,ah
  402e41:	(bad)  
  402e42:	or     BYTE PTR [eax],al
  402e44:	cmc    
  402e45:	jl     0x402e50
  402e47:	add    BYTE PTR [ebx+edi*2+0x7b8c000b],cl
  402e4e:	or     eax,DWORD PTR [eax]
  402e50:	mov    WORD PTR [ebx+0xb],?
  402e53:	add    BYTE PTR [ebx+edi*1+0x7acc000b],cl
  402e5a:	or     eax,DWORD PTR [eax]
  402e5c:	mov    WORD PTR [ebx+0xb],?
  402e5f:	add    BYTE PTR [ebx+edi*2+0x7b8c000b],cl
  402e66:	or     eax,DWORD PTR [eax]
  402e68:	mov    WORD PTR [eax],gs
  402e6a:	test   ah,ch
  402e6c:	cmp    al,0x23
  402e6e:	arpl   WORD PTR [edi],cx
  402e70:	jl     0x402ead
  402e72:	or     edi,eax
  402e74:	(bad)  
  402e75:	ins    BYTE PTR es:[edi],dx
  402e76:	int3   
  402e77:	inc    DWORD PTR [ebx-0x7295fc1f]
  402e7d:	pop    ss
  402e7e:	or     ebp,eax
  402e80:	test   DWORD PTR [ecx+0xc],0x0
	...
  402e97:	add    BYTE PTR [ebp+0x30],dl
  402e9a:	or     BYTE PTR [eax],al
  402e9c:	mov    ecx,0xb450e0f6
  402ea1:	aad    0x2e
  402ea3:	adc    ah,cl
  402ea5:	ins    DWORD PTR es:[edi],dx
  402ea6:	repz jb 0x402e36
  402ea9:	inc    DWORD PTR cs:[ebx+0x740b75c1]
  402eb0:	xchg   esi,esi
  402eb2:	pop    ecx
  402eb3:	or     BYTE PTR [edi],al
  402eb5:	pusha  
  402eb6:	(bad)  
  402eb7:	jne    0x402e4d
  402eb9:	add    bl,BYTE PTR [edx+0x8]
  402ebc:	push   ebp
  402ebd:	xor    BYTE PTR [eax],cl
  402ebf:	add    cl,al
  402ec1:	mul    al
  402ec3:	or     DWORD PTR [eax+0x16],0x5c
  402ec7:	pop    eax
  402ec8:	je     0x402e52
  402eca:	sbb    al,0x40
  402ecc:	mov    ebp,fs
  402ece:	jp     0x402ed1
  402ed0:	iret   
  402ed1:	repnz push DWORD PTR [ebp-0x80]
  402ed5:	xchg   esp,eax
  402ed6:	jle    0x402f19
  402ed8:	in     al,0x5b
  402eda:	lods   al,BYTE PTR ds:[esi]
  402edb:	test   DWORD PTR [esp+edx*4-0x35f8fc1f],0xee7e8ae9
  402ee6:	loope  0x402ede
  402ee8:	inc    ecx
  402ee9:	test   BYTE PTR [esi],dh
  402eeb:	jno    0x402ead
  402eed:	arpl   WORD PTR [ebx+edi*8-0x9161645],si
  402ef4:	pop    esi
  402ef5:	mov    BYTE PTR [eax],bh
  402ef7:	ret    0x9498
  402efa:	mov    esp,0x8a
	...
  402f0f:	add    BYTE PTR [eax+0x3cfc2517],dh
  402f15:	mov    esp,0xd47c8589
  402f1a:	loope  0x402f17
  402f1c:	(bad)  
  402f1d:	xchg   ebp,eax
  402f1e:	and    dh,bh
  402f20:	dec    ebx
  402f21:	fyl2xp1 
  402f23:	add    ecx,DWORD PTR [esp+edx*4+0x60c9bee1]
  402f2a:	loope  0x402f2f
  402f2c:	mov    WORD PTR [edx+edi*2-0xcf06bb0],ss
  402f33:	mov    cl,dl
  402f35:	pop    esp
  402f36:	xor    DWORD PTR [edx-0x72],ebp
  402f39:	arpl   WORD PTR [eax+edi*8],si
  402f3c:	dec    ebx
  402f3d:	jmp    0x8cfa260b
  402f42:	mov    esi,0x2c0fa051
  402f47:	cld    
  402f48:	inc    ebp
  402f49:	push   esi
  402f4a:	in     eax,0x3
  402f4c:	ror    DWORD PTR [edi],0x85
  402f4f:	or     BYTE PTR [eax+0x5c],0x31
  402f53:	pop    esp
  402f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f55:	push   eax
  402f56:	icebp  
  402f57:	inc    ebx
  402f58:	mov    WORD PTR [ebx+esi*8+0x4],ds
  402f5c:	iret   
  402f5d:	bound  ebp,QWORD PTR [esi+0x8940440]
  402f63:	jmp    0x250fc3f7
  402f68:	hlt    
  402f69:	xchg   ebx,eax
  402f6a:	or     cl,ch
  402f6c:	(bad)  
  402f6d:	minps  xmm6,xmm1
  402f70:	push   ss
  402f71:	xchg   BYTE PTR [ebp+0xac],al
	...
  402f87:	add    bh,dl
  402f89:	ret    
  402f8a:	(bad)  
  402f8b:	call   0x4735186a
  402f90:	cmp    al,0x5c
  402f92:	div    DWORD PTR [edi+edx*4-0x3d22a59d]
  402f99:	call   0x634e709e
  402f9e:	mul    DWORD PTR [esi]
  402fa0:	aas    
  402fa1:	minps  xmm6,xmm1
  402fa4:	push   ss
  402fa5:	xchg   BYTE PTR [edx-0x17],ah
  402fa8:	and    eax,0x9b94f794
  402fad:	bound  edi,QWORD PTR [ebp+0x1]
  402fb0:	sub    al,0x0
  402fb3:	(bad)  
  402fb4:	fmul   QWORD PTR [eax+0x5cdc6250]
  402fba:	or     edx,DWORD PTR [ebx+ecx*4+0x6a5fd89d]
  402fc1:	scas   eax,DWORD PTR es:[edi]
  402fc2:	enter  0x4eb0,0x8d
  402fc6:	or     BYTE PTR [ecx-0x16f76b71],dl
  402fcc:	inc    esi
  402fcd:	push   edi
  402fce:	add    cl,ch
  402fd0:	fimul  DWORD PTR ds:0x614c6ae4
  402fd6:	pop    eax
  402fd7:	adc    DWORD PTR [eax-0x77d6e663],ebp
  402fdd:	pop    esp
  402fde:	jp     0x402fc8
  402fe0:	dec    esp
  402fe1:	(bad)  
  402fe2:	not    DWORD PTR [eax+edi*2]
  402fe5:	popa   
  402fe6:	jge    0x402fc9
  402fe8:	daa    
  402fe9:	jmp    0x40bee5
	...
  402ffe:	add    BYTE PTR [eax],al
  403000:	sbb    DWORD PTR [esi+0x620800c8],ecx
  403006:	rol    dl,0xf1
  403009:	xchg   ebp,eax
  40300a:	adc    DWORD PTR [ebp-0x13],0xc
  40300e:	sbb    cl,BYTE PTR [ebp-0xa7a358]
  403014:	enter  0xf785,0x75
  403018:	icebp  
  403019:	push   0xc642087d
  40301e:	add    al,0x85
  403020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403021:	loopne 0x40303e
  403023:	mov    edi,eax
  403025:	imul   esi,DWORD PTR [ebx],0xff2e545
  40302b:	mov    eax,0x895a4
  403030:	dec    esi
  403031:	bound  esp,QWORD PTR [edx]
  403033:	sar    BYTE PTR [esi-0x6a],0x23
  403037:	rcr    BYTE PTR [esi+edx*2+0x4],0x0
  40303c:	fmul   DWORD PTR [esp+eiz*8]
  40303f:	sub    DWORD PTR [ecx+0x5c],0x5e
  403043:	push   eax
  403044:	sub    eax,0x35119bed
  403049:	xchg   ebp,eax
  40304a:	lock jb 0x4030b1
  40304d:	push   esp
  40304e:	test   DWORD PTR [ebx+0x740899e0],0x875147b
  403058:	jne    0x40304c
  40305a:	movntps XMMWORD PTR ds:0x31c2c1c7,xmm4
  403061:	xchg   ebp,eax
  403062:	mov    edi,DWORD PTR [ebp+0x0]
	...
  403075:	add    BYTE PTR [eax],al
  403077:	add    BYTE PTR [ebp-0x6b],ah
  40307a:	jge    0x403086
  40307c:	or     eax,0x25000896
  403081:	mov    ecx,0x839551c2
  403087:	jne    0x4030aa
  403089:	and    BYTE PTR [ebp-0x4],cl
  40308c:	xor    eax,0x8c000895
  403091:	test   BYTE PTR [esi+0x8],0x7
  403095:	pop    ebp
  403096:	mov    es,WORD PTR [ebp+0x8]
  403099:	jnp    0x403098
  40309b:	jne    0x403039
  40309d:	mov    ebp,edi
  40309f:	jne    0x403025
  4030a1:	jmp    0x772:0x2b091059
  4030a8:	mov    bh,0xab
  4030aa:	pop    ebp
  4030ab:	leave  
  4030ac:	into   
  4030ad:	outs   dx,BYTE PTR ds:[esi]
  4030ae:	or     eax,DWORD PTR [ebx+0x750bc759]
  4030b4:	mov    edx,DWORD PTR [esi-0x532aa134]
  4030ba:	lldt   WORD PTR [edi]
  4030bd:	cmp    bh,bh
  4030bf:	add    edi,DWORD PTR [ebx+edx*4-0x48c6efc9]
  4030c6:	mov    bl,0x1
  4030c8:	mov    WORD PTR [ebx+0xb],gs
  4030cb:	pop    esi
  4030cc:	aad    0xac
  4030ce:	sldt   WORD PTR [ecx-0xa]
  4030d2:	out    dx,eax
  4030d3:	or     eax,0x8bffec82
  4030d9:	(bad)  
  4030da:	push   edx
  4030db:	push   0x0
	...
  4030f0:	cwde   
  4030f1:	cmp    ecx,DWORD PTR [ebx+0x0]
  4030f4:	je     0x4030d2
  4030f6:	or     al,bl
  4030f8:	jae    0x40310e
  4030fa:	or     ebp,DWORD PTR [edx-0x74]
  4030fd:	ret    
  4030fe:	punpckhdq mm1,QWORD PTR [ebx+eax*8+0x6d8c680f]
  403106:	or     eax,DWORD PTR [eax-0x180b36ad]
  40310c:	jg     0x40312a
  40310e:	or     al,0x0
  403110:	adc    eax,0xc140f8b9
  403115:	jno    0x4030cb
  403117:	ret    0x6d84
  40311a:	push   ebp
  40311b:	add    BYTE PTR [ecx],bl
  40311d:	xchg   ebp,eax
  40311e:	and    al,0xec
  403120:	mov    esp,0x8c13e1ec
  403125:	xchg   esp,eax
  403126:	ins    BYTE PTR es:[edi],dx
  403127:	mov    DWORD PTR [eax+esi*2],edx
  40312a:	xchg   bl,dh
  40312c:	pop    esp
  40312d:	pop    edi
  40312e:	hlt    
  40312f:	out    dx,eax
  403130:	hlt    
  403131:	mov    DWORD PTR [eax+0x4],esi
  403134:	mov    WORD PTR [ebx+0x5f8279a1],cs
  40313a:	cld    
  40313b:	out    dx,eax
  40313c:	hlt    
  40313d:	(bad)  
  40313e:	push   eax
  40313f:	add    al,0x8c
  403141:	stos   DWORD PTR es:[edi],eax
  403142:	and    DWORD PTR [ebp-0xd1e7332],edi
  403148:	pop    ecx
  403149:	pop    esp
  40314a:	push   esp
  40314b:	mov    esp,eax
  40314d:	outs   dx,DWORD PTR ds:[esi]
  40314e:	dec    esi
  40314f:	repz pop esp
  403151:	pop    edi
  403152:	mov    esp,0xff
	...
  403167:	add    BYTE PTR [ebx-0x4c0cc16f],dh
  40316d:	adc    esp,DWORD PTR [ebx+ebp*8-0xc921674]
  403174:	sbb    DWORD PTR [eax+0x19],esp
  403177:	fstp   QWORD PTR [esp+edx*4-0x6b72541f]
  40317e:	loope  0x403183
  403180:	push   ebp
  403181:	push   edx
  403182:	stc    
  403183:	add    ebx,ecx
  403185:	or     eax,DWORD PTR ds:0x58ecd454
  40318b:	push   ss
  40318c:	int3   
  40318d:	xchg   esp,eax
  40318e:	stc    
  40318f:	jne    0x40311e
  403191:	push   ebx
  403192:	out    dx,al
  403193:	pop    ebp
  403194:	mov    gs,edx
  403196:	loope  0x40318a
  403198:	loope  0x403126
  40319a:	leave  
  40319b:	xchg   ecx,eax
  40319c:	push   ecx
  40319d:	pop    edi
  40319e:	(bad)  
  40319f:	mov    esp,0x58e1984e
  4031a4:	pop    ss
  4031a5:	jo     0x4031b8
  4031a7:	dec    esp
  4031a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031a9:	sbb    al,0x8
  4031ab:	fcmovne st,st(7)
  4031ad:	xchg   esp,eax
  4031ae:	lock cmp edx,DWORD PTR [ecx-0x77ec08ad]
  4031b5:	jmp    0x16e0:0x8c949e08
  4031bc:	sbb    eax,0xd1a0f75f
  4031c1:	xchg   edi,eax
  4031c2:	or     BYTE PTR [ebx+eax*4],bl
  4031c5:	jo     0x403152
  4031c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031c8:	out    0xc3,eax
  4031ca:	push   eax
  4031cb:	add    DWORD PTR [eax],eax
	...
  4031dd:	add    BYTE PTR [eax],al
  4031df:	add    dl,al
  4031e1:	or     DWORD PTR [eax-0x17],0x2a09e1f7
  4031e8:	ficomp WORD PTR [esi+0x7d]
  4031eb:	in     eax,dx
  4031ec:	push   cs
  4031ed:	f2xm1  
  4031ef:	cs inc esp
  4031f1:	pusha  
  4031f2:	or     cl,ch
  4031f4:	(bad)  
  4031f5:	xchg   esp,eax
  4031f6:	(bad)  
  4031f7:	jmp    0x3e451aba
  4031fc:	xor    al,0x8c
  4031fe:	loopne 0x4031a6
  403200:	mov    esp,0x4462f75e
  403205:	mov    WORD PTR [ebx-0xb176105],es
  40320b:	push   ds
  40320c:	adc    al,0x5c
  40320e:	neg    DWORD PTR [edi+edx*4+0x48f15a5d]
  403215:	push   ebx
  403216:	add    cl,ch
  403218:	in     al,0x9
  40321a:	in     al,0x99
  40321c:	(bad)  
  40321d:	in     al,dx
  40321e:	adc    dl,bl
  403220:	iret   
  403221:	xchg   esp,eax
  403222:	lock jnp 0x4031b5
  403225:	push   ecx
  403226:	not    DWORD PTR [ebx-0x78]
  403229:	pop    ebp
  40322a:	jge    0x40321d
  40322c:	aaa    
  40322d:	aaa    
  40322e:	not    esi
  403230:	pop    ebp
  403231:	dec    esp
  403232:	retf   0x8fe5
  403235:	mov    DWORD PTR [ebx+0x5de05900],0x8aea614
  40323f:	jne    0x403262
  403241:	sbb    ecx,edx
  403243:	adc    BYTE PTR [eax],al
	...
  403255:	add    BYTE PTR [eax],al
  403257:	add    BYTE PTR ds:0xea107d65,dh
  40325d:	in     eax,0x4
  40325f:	inc    DWORD PTR [eax-0x71910a0]
  403265:	arpl   di,si
  403267:	mov    eax,eax
  403269:	jl     0x403294
  40326b:	add    bh,BYTE PTR [edi+edx*2]
  40326e:	sbb    BYTE PTR [eax],al
  403270:	mov    al,ds:0x2183e4df
  403275:	div    DWORD PTR gs:[ebp-0x37]
  403279:	mov    edi,0x6e308d0c
  40327e:	pop    eax
  40327f:	inc    eax
  403281:	pop    ecx
  403282:	out    dx,eax
  403283:	ret    
  403284:	cmp    ah,BYTE PTR [ebx-0x9]
  403287:	mov    esi,eax
  403289:	pop    ebp
  40328a:	mov    bh,BYTE PTR [eax]
  40328c:	mov    ch,0xe5
  40328e:	jnp    0xc847a084
  403294:	dec    esi
  403295:	xchg   esi,eax
  403296:	and    eax,eax
  403298:	ins    BYTE PTR es:[edi],dx
  403299:	push   esi
  40329a:	add    BYTE PTR [eax],al
  40329c:	loopne 0x40327e
  40329e:	in     al,0x83
  4032a0:	jno    0x403306
  4032a2:	div    DWORD PTR [ebp-0x57]
  4032a5:	mov    edi,0x63308d0a
  4032aa:	pop    eax
  4032ab:	inc    DWORD PTR [eax]
  4032ad:	pop    edx
  4032ae:	out    dx,eax
  4032af:	xchg   edi,eax
  4032b0:	jp     0x403316
  4032b2:	test   DWORD PTR [ebx+0x388a5d20],0xf00e575
	...
  4032d0:	add    dl,dh
  4032d2:	test   BYTE PTR [esi+0x2b0a4031],0x8c
  4032d9:	sub    esi,DWORD PTR [edx+0x5e6b94c2]
  4032df:	mov    esi,DWORD PTR [eax]
  4032e1:	jmp    0x6a08:0xa83bfccf
  4032e8:	(bad)  
  4032e9:	clc    
  4032ea:	dec    esi
  4032eb:	(bad)  
  4032ec:	mov    esp,0x34087e2e
  4032f1:	cmp    ecx,0x4ee21bff
  4032f7:	or     al,0xf
  4032f9:	inc    ebx
  4032fa:	or     esi,DWORD PTR [edx+edx*4+0x3e]
  4032fe:	mov    cl,0x45
  403300:	add    eax,DWORD PTR [edx]
  403302:	or     eax,0xcd23cc2b
  403307:	or     BYTE PTR [eax+eax*4-0x77e8138b],cl
  40330e:	sbb    al,0x83
  403310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403311:	imul   edi,DWORD PTR [esi+0x4],0xffffffc5
  403315:	test   al,0xf7
  403317:	call   edx
  403319:	aas    
  40331a:	idiv   esi
  40331c:	inc    ecx
  40331d:	jae    0x4032f2
  40331f:	rol    al,1
  403321:	aad    0xf8
  403323:	or     ecx,esp
  403325:	daa    
  403326:	hlt    
  403327:	mov    bl,BYTE PTR [ecx+0x3b]
  40332a:	rol    BYTE PTR [edx],0x8c
  40332d:	imul   ecx,DWORD PTR [ebx],0x0
  403330:	mov    bh,0x67
  403332:	push   ebp
  403333:	add    DWORD PTR [eax],eax
	...
  403345:	add    BYTE PTR [eax],al
  403347:	add    BYTE PTR [ebx+0x19fef707],bl
  40334d:	jae    0x403322
  40334f:	cmp    eax,0xc9f88b88
  403354:	dec    esi
  403355:	bound  ecx,QWORD PTR [ebx]
  403357:	push   ebp
  403358:	pop    es
  403359:	mov    cl,BYTE PTR [esp+eax*8+0x7573fc70]
  403360:	cwde   
  403361:	pop    ss
  403362:	or     ecx,DWORD PTR [ebp+0x54ed94c9]
  403368:	pop    ebx
  403369:	loop   0x40335c
  40336b:	push   ebp
  40336c:	push   ebx
  40336d:	loop   0x403358
  40336f:	fcmovnbe st,st(6)
  403371:	imul   esp,ecx,0x3
  403374:	xchg   edi,eax
  403375:	push   esp
  403376:	xor    eax,0xb5da0f06
  40337b:	add    al,0xb9
  40337d:	xchg   ebx,eax
  40337e:	or     al,ah
  403380:	retf   0xa34d
  403383:	add    BYTE PTR [edi+ecx*1+0x648ff024],cl
  40338a:	fmul   DWORD PTR [eax+0x7c]
  40338d:	loope  0x403341
  40338f:	lods   al,BYTE PTR ds:[esi]
  403390:	lea    edx,[ecx+eiz*8-0x5cb29dfd]
  403397:	add    BYTE PTR [ecx+eax*8+0x510de07a],cl
  40339e:	stc    
  40339f:	out    dx,al
  4033a0:	jmp    0x4033fd
  4033a2:	adc    bl,BYTE PTR [ebx]
  4033a4:	(bad)  
  4033a5:	out    dx,al
  4033a6:	loope  0x403401
  4033a8:	mov    esi,gs
  4033aa:	jecxz  0x403405
	...
  4033c0:	mov    esi,gs
  4033c2:	loop   0x40341f
  4033c4:	mov    WORD PTR [ecx+eiz*8-0x21e3c3d],ss
  4033cb:	fstp   TBYTE PTR [edx+ebp*2-0x2dfafc1f]
  4033d2:	cmp    eax,0x26c72044
  4033d7:	jns    0x40336d
  4033d9:	ins    BYTE PTR es:[edi],dx
  4033da:	fsub   st(5),st
  4033dc:	fwait
  4033dd:	pop    ebx
  4033de:	cs dec ecx
  4033e0:	xchg   esp,eax
  4033e1:	xchg   esp,eax
  4033e2:	loope  0x4033e7
  4033e4:	mov    WORD PTR [edi],cs
  4033e6:	mov    esp,0x7c8616fb
  4033eb:	dec    ecx
  4033ec:	je     0x4033b2
  4033ee:	cdq    
  4033ef:	or     DWORD PTR [esp+edx*4+0x110ce908],0x70
  4033f7:	out    dx,al
  4033f8:	jb     0x403455
  4033fa:	pop    eax
  4033fb:	out    0xd4,al
  4033fd:	mov    edi,?
  4033ff:	cmp    ecx,DWORD PTR [edi+edx*1-0x1e702e8b]
  403406:	or     ebp,DWORD PTR [edx]
  403408:	addr16 jl 0x403402
  40340b:	cmp    al,0x28
  40340d:	or     DWORD PTR [ebp-0x8a4dcbf],ecx
  403413:	sbb    DWORD PTR [ebx],edi
  403415:	loope  0x40340b
  403417:	sar    DWORD PTR [eax+0x16a6f75b],0x1b
  40341e:	jl     0x40340b
  403420:	ss sbb edi,esi
  403423:	sbb    al,0x0
	...
  403435:	add    BYTE PTR [eax],al
  403437:	add    ah,bh
  403439:	imul   ebp,DWORD PTR [ebx-0x7c6b7081],0xffffffaa
  403440:	inc    esi
  403441:	dec    ebp
  403442:	retf   0x8ff1
  403445:	rol    DWORD PTR [ebx-0xfaff17b],0x6e
  40344c:	fs mov al,ah
  40344f:	mov    esi,esp
  403451:	pop    edx
  403452:	div    DWORD PTR [eax+0x44]
  403455:	pop    esp
  403456:	iret   
  403457:	lods   al,BYTE PTR ds:[esi]
  403458:	mov    ebx,0x8fe90893
  40345d:	pop    ebx
  40345e:	jge    0x403455
  403460:	xlat   BYTE PTR ds:[ebx]
  403461:	push   ds
  403462:	cmc    
  403463:	mov    ds:0x26e55d0e,al
  403469:	xchg   BYTE PTR [edx-0x17],ah
  40346c:	inc    ebp
  40346d:	xchg   esp,eax
  40346e:	neg    DWORD PTR [ebx+ebp*4-0x5dde82a6]
  403475:	loopne 0x403477
  403477:	push   ss
  403478:	add    al,0x89
  40347a:	idiv   DWORD PTR [ebx+0xca4b93]
  403480:	jge    0x403418
  403482:	pop    ebp
  403483:	mov    eax,DWORD PTR [ecx-0x450733ea]
  403489:	int3   
  40348a:	lock add BYTE PTR [ebp-0x6a],dh
  40348e:	or     bh,al
  403490:	test   al,0x64
  403492:	or     BYTE PTR [eax],al
  403494:	gs xchg esi,eax
  403496:	adc    DWORD PTR [ebp+0x2d],0xffffffdd
  40349a:	sbb    cl,BYTE PTR [ebp+0x0]
	...
  4034b0:	push   0x246a5868
  4034b5:	imul   edi,DWORD PTR [ebp-0x4],0xfff0e1f2
  4034bc:	push   0x3952f658
  4034c1:	fisttp QWORD PTR [ebp-0x8]
  4034c4:	fcom   QWORD PTR [esi+0xc]
  4034c7:	add    BYTE PTR [eax-0x25],bl
  4034ca:	in     al,0x6a
  4034cc:	hlt    
  4034cd:	fimul  DWORD PTR [ebp+0xc]
  4034d0:	lds    esp,FWORD PTR [edi+0x7d]
  4034d3:	or     BYTE PTR ds:0x72fff4a4,bl
  4034d9:	sbb    eax,0xc2f508ca
  4034de:	sub    esp,0xffffff8f
  4034e1:	mov    WORD PTR [ebp-0x83a1ebb],es
  4034e7:	jne    0x4034c6
  4034e9:	cmp    eax,0x6762fc16
  4034ee:	rol    edx,0xad
  4034f1:	xchg   ebp,eax
  4034f2:	pop    ebp
  4034f3:	mov    esp,DWORD PTR [ecx+0x13]
  4034f6:	jne    0x403504
  4034f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f9:	loope  0x403517
  4034fb:	and    eax,0xffffff85
  4034fe:	or     BYTE PTR [ebx+eax*8+0x68],dh
  403502:	jge    0x403514
  403504:	jb     0x4034e7
  403506:	add    al,0xff
  403508:	clc    
  403509:	pop    ebp
  40350a:	out    dx,eax
  40350b:	std    
  40350c:	mov    WORD PTR [esi-0x52aa001b],es
  403512:	or     BYTE PTR [eax],al
	...
  403528:	loope  0x403510
  40352a:	call   0xe47c2f2e
  40352f:	jne    0x4034c5
  403531:	xchg   ebx,eax
  403532:	mov    eax,0x886a63ff
  403537:	jge    0x4035b5
  403539:	imul   edi,DWORD PTR [edi+0x14],0xf
  40353d:	mov    eax,0x71c00008
  403542:	in     al,0x75
  403544:	pushf  
  403545:	dec    edx
  403546:	jle    0x403554
  403548:	cmp    ebx,DWORD PTR [eax+0x19fbe7f4]
  40354e:	in     al,0xff
  403550:	push   ebp
  403551:	sub    eax,0xf6b8fff7
  403556:	xlat   BYTE PTR ds:[ebx]
  403557:	sbb    DWORD PTR [ecx-0x798bf4a1],0xfffffffa
  40355e:	jge    0x40356c
  403560:	hlt    
  403561:	mov    esp,0x168c00d6
  403566:	or     DWORD PTR [ebx],ebp
  403568:	int3   
  403569:	jp     0x403550
  40356b:	jne    0x4034ed
  40356d:	fidivr DWORD PTR [esi+0x8]
  403570:	hlt    
  403571:	popf   
  403572:	in     al,0xff
  403574:	jecxz  0x4035a9
  403576:	leave  
  403577:	or     BYTE PTR [eax+ebx*1+0x3fd3ec70],cl
  40357e:	repz out 0x73,eax
  403581:	ret    0xffe4
  403584:	pop    esp
  403585:	push   ebp
  403586:	repz add ah,BYTE PTR [bp+di]
  40358a:	dec    edx
	...
  40359f:	add    BYTE PTR [ebx+0x1fe7f31f],dh
  4035a5:	mov    ds:0x6b36ffe4,al
  4035aa:	in     al,0x75
  4035ac:	test   BYTE PTR [ecx+ebx*1+0x16589357],dl
  4035b3:	pop    ecx
  4035b4:	mov    cs,WORD PTR [ecx]
  4035b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b7:	call   ebx
  4035b9:	push   edi
  4035ba:	pushf  
  4035bb:	sti    
  4035bc:	jae    0x40357a
  4035be:	push   cs
  4035bf:	in     al,dx
  4035c0:	jae    0x4035ad
  4035c2:	jecxz  0x403642
  4035c4:	rol    DWORD PTR [ecx+edx*4+0x98cd9ec],1
  4035cb:	ds pop ebx
  4035cd:	pop    eax
  4035ce:	out    dx,al
  4035cf:	dec    esp
  4035d0:	inc    ebp
  4035d1:	push   ebx
  4035d2:	in     eax,0x3
  4035d4:	loope  0x4035e1
  4035d6:	int    0x87
  4035d8:	dec    eax
  4035d9:	pop    ecx
  4035da:	(bad)  
  4035db:	jno    0x403561
  4035dd:	ins    BYTE PTR es:[edi],dx
  4035de:	adc    esi,ebp
  4035e0:	xor    ebx,DWORD PTR [eax+0x1a]
  4035e3:	inc    ecx
  4035e4:	cwde   
  4035e5:	or     eax,0xd20fe824
  4035ea:	aad    0xfb
  4035ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ed:	xchg   esp,eax
  4035ee:	scas   al,BYTE PTR es:[edi]
  4035ef:	jno    0x403571
  4035f1:	push   edi
  4035f2:	sbb    al,0xfc
  4035f4:	repz xchg esp,eax
  4035f6:	fwait
  4035f7:	jmp    0x4035fc
  4035f9:	pop    eax
  4035fa:	sbb    al,0xe8
  4035fc:	sti    
  4035fd:	loope  0x4035f8
  4035ff:	fisttp DWORD PTR [edi+0xeb7657]
	...
  403615:	add    BYTE PTR [eax],al
  403617:	add    bl,ch
  403619:	loope  0x403604
  40361b:	fistp  DWORD PTR [eax+0x7eb6658]
  403621:	shr    BYTE PTR [ebp-0x43],cl
  403624:	into   
  403625:	mov    ecx,fs
  403627:	push   eax
  403628:	pop    ss
  403629:	imul   esp,DWORD PTR [edx-0x40],0xefac4fb8
  403630:	mov    WORD PTR [ecx+eiz*8+0x35d20103],ss
  403637:	push   esp
  403638:	stos   DWORD PTR es:[edi],eax
  403639:	loope  0x403643
  40363b:	loope  0x403604
  40363d:	scas   al,BYTE PTR es:[edi]
  40363e:	out    0xe9,al
  403640:	(bad)  
  403641:	adc    eax,ecx
  403643:	mov    eax,ds:0xf17d5774
  403648:	addr16 pop edx
  40364a:	icebp  
  40364b:	push   ss
  40364c:	ja     0x40365b
  40364e:	dec    ebp
  40364f:	adc    DWORD PTR [edi-0x1f],esp
  403652:	hlt    
  403653:	adc    DWORD PTR [edi+0x68],edx
  403656:	or     cl,ch
  403658:	push   0x17
  40365a:	jl     0x40363b
  40365c:	jbe    0x40363f
  40365e:	lock cdq 
  403660:	mov    ecx,0x8d58e094
  403665:	xchg   esp,eax
  403666:	or     BYTE PTR [eax-0x34],dh
  403669:	pusha  
  40366a:	neg    DWORD PTR [esp+esi*1+0x6c]
  40366e:	sar    DWORD PTR [ebp+0x3cf7948f],cl
  403674:	xor    BYTE PTR [edi-0x2d],ch
  403677:	ret    0x5736
  40367a:	sub    DWORD PTR [eax+eax*1],0x0
	...
  40368e:	add    BYTE PTR [eax],al
  403690:	sbb    al,0x87
  403692:	shl    BYTE PTR [esi+0x1cf7c43f],0x10
  403699:	outs   dx,DWORD PTR ds:[esi]
  40369a:	call   0x3ab:0xc156f69f
  4036a1:	push   edi
  4036a2:	pop    esp
  4036a3:	(bad)  
  4036a5:	adc    cl,ah
  4036a7:	jns    0x403677
  4036a9:	sar    ah,1
  4036ab:	jmp    0x6448cb3f
  4036b0:	dec    esp
  4036b1:	pop    eax
  4036b2:	pop    eax
  4036b3:	outs   dx,BYTE PTR ds:[esi]
  4036b4:	pop    esp
  4036b5:	mov    eax,fs
  4036b7:	sub    DWORD PTR [ebx+edx*4-0x24309bf8],esi
  4036be:	inc    ebp
  4036bf:	push   esi
  4036c0:	cmp    al,0x8c
  4036c2:	loopne 0x403739
  4036c4:	test   al,0x56
  4036c6:	test   DWORD PTR [eax],0x83f0d43c
  4036cc:	call   0x89b2433b
  4036d1:	pcmpgtw mm7,mm0
  4036d4:	mov    cl,0x69
  4036d6:	jge    0x4036d4
  4036d8:	jge    0x4036c4
  4036da:	in     al,0x0
  4036dc:	jne    0x403735
  4036de:	mov    bh,0x74
  4036e0:	imul   edi,DWORD PTR [di-0x8],0x35
  4036e5:	mov    eax,0x9564e808
  4036ea:	or     BYTE PTR [eax],al
  4036ec:	jp     0x403708
  4036ee:	call   eax
  4036f0:	in     al,dx
  4036f1:	aam    0xfc
  4036f3:	inc    DWORD PTR [eax]
	...
  403705:	add    BYTE PTR [eax],al
  403707:	add    al,ah
  403709:	ins    DWORD PTR es:[edi],dx
  40370a:	loopne 0x403773
  40370c:	cmp    DWORD PTR [ecx+0x6d43eb08],edx
  403712:	jge    0x40371c
  403714:	dec    ebp
  403715:	mov    dh,0xf3
  403717:	dec    DWORD PTR [edx+0x78]
  40371a:	enter  0xe7c9,0x94
  40371e:	or     bl,ch
  403720:	xor    edi,DWORD PTR [ecx-0x38]
  403723:	leave  
  403724:	not    DWORD PTR [eax+ecx*1-0xb47d896]
  40372b:	push   DWORD PTR [eax+0x58]
  40372e:	out    dx,eax
  40372f:	add    al,0x2c
  403731:	ins    BYTE PTR es:[edi],dx
  403732:	test   edi,0x960b0
  403738:	in     eax,0x91
  40373a:	test   DWORD PTR [ebp+0x75],eax
  40373d:	shl    bh,0x75
  403740:	fnstsw WORD PTR [ecx]
  403742:	repnz sti 
  403744:	pop    edx
  403745:	imul   ecx,DWORD PTR [ebx+0x7c90557d],0x12
  40374c:	ficomp DWORD PTR [ecx]
  40374e:	xor    eax,DWORD PTR [ebp+0x61]
  403751:	in     eax,0xf
  403753:	mov    eax,0xb6c8c
  403758:	mov    edx,ss
  40375a:	or     ch,BYTE PTR [ebx]
  40375c:	int3   
  40375d:	ret    0x2b0e
  403760:	int3   
  403761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403762:	into   
  403763:	add    al,0x8c
  403765:	clc    
  403766:	jae    0x403754
  403768:	cmpxchg ah,ah
  40376b:	lea    eax,[eax]
	...
  40377d:	add    BYTE PTR [eax],al
  40377f:	add    BYTE PTR [ecx-0x51],cl
  403782:	pop    esp
  403783:	inc    DWORD PTR [ecx]
  403785:	rcr    DWORD PTR fs:[edx],cl
  403788:	jno    0x4037f5
  40378a:	or     eax,DWORD PTR [ebp-0xebfcb4]
  403790:	stc    
  403791:	arpl   bx,dx
  403793:	out    dx,al
  403794:	fs push esi
  403796:	loopne 0x403721
  403798:	leave  
  403799:	arpl   ax,sp
  40379b:	jne    0x4037f5
  40379d:	xchg   ebx,eax
  40379e:	in     eax,dx
  40379f:	jmp    0x40372d
  4037a1:	imul   esi,esp,0xffffffbf
  4037a4:	rcr    BYTE PTR [edi-0x20],0x75
  4037a8:	nop
  4037a9:	ds data16 clc 
  4037ac:	fcom   QWORD PTR [ebx+0x26]
  4037af:	or     ecx,DWORD PTR [ebx+ebp*2+0x432875e0]
  4037b6:	(bad)  
  4037b8:	mov    WORD PTR [ebx-0x20],gs
  4037bb:	jne    0x403741
  4037bd:	push   ebx
  4037be:	(bad)  
  4037c0:	adc    ebp,DWORD PTR [esi]
  4037c2:	mov    dl,0xc2
  4037c4:	xchg   esp,eax
  4037c5:	imul   eax,DWORD PTR [esi-0x75],0xfffffff0
  4037c9:	jmp    0x52a02085
  4037ce:	les    ecx,FWORD PTR [ebp-0xa4f0b7]
  4037d4:	popa   
  4037d5:	arpl   bx,dx
  4037d7:	retf   0x6af0
  4037da:	or     eax,DWORD PTR [ebp-0x488cca34]
  4037e0:	mov    WORD PTR [ecx+eiz*8+0x3],ss
	...
  4037f7:	add    bl,cl
  4037f9:	fdivp  st(1),st
  4037fb:	(bad)  [esi]
  4037fd:	pop    esp
  4037fe:	pop    esi
  4037ff:	call   0xe89e0709
  403804:	cmp    DWORD PTR [eax+0x59],ebx
  403807:	js     0x4037c0
  403809:	xchg   ebx,eax
  40380a:	loope  0x403808
  40380c:	jecxz  0x403792
  40380e:	xchg   DWORD PTR gs:[esp+edx*4+0x64497ae1],ecx
  403816:	outs   dx,BYTE PTR cs:[esi]
  403818:	cmp    BYTE PTR ds:0x948d0473,0x62
  40381f:	mov    edi,0x3e19990
  403824:	fcom   QWORD PTR [ecx+edx*4-0x1e6aca25]
  40382b:	add    edx,DWORD PTR ds:0xe1e80dda
  403831:	dec    eax
  403832:	or     DWORD PTR [eax-0x71],ebp
  403835:	xchg   ebp,eax
  403836:	loope  0x4037ba
  403838:	push   eax
  403839:	cdq    
  40383a:	in     al,dx
  40383b:	add    ecx,DWORD PTR [esp+eiz*4+0x252453e1]
  403842:	loope  0x403847
  403844:	mov    WORD PTR ds:0x94b6dc24,ds
  40384a:	mov    dh,0x71
  40384c:	xor    BYTE PTR [esp+esi*1-0x10],dl
  403850:	sbb    ecx,edx
  403852:	leave  
  403853:	out    0x99,eax
  403855:	inc    esp
  403856:	cdq    
  403857:	pop    ebp
  403858:	(bad)  
  403859:	xchg   ebp,eax
  40385a:	loope  0x4037de
	...
  403870:	enter  0x68a8,0x41
  403874:	hlt    
  403875:	push   ebx
  403876:	sbb    al,0xe8
  403878:	in     al,0x8b
  40387a:	call   0xebfb:0xfc538c04
  403881:	or     cl,BYTE PTR [eax]
  403883:	jae    0x403878
  403885:	push   ebx
  403886:	(bad)
  40388b:	test   al,0x8f
  40388d:	push   ebx
  40388e:	jge    0x403881
  403890:	out    0x98,eax
  403892:	cmc    
  403893:	push   esi
  403894:	mov    bl,0x9f
  403896:	ror    BYTE PTR [esi+0x3d],1
  403899:	dec    eax
  40389a:	idiv   DWORD PTR [edi+eiz*4-0x54c215c5]
  4038a1:	push   ebx
  4038a2:	sub    edx,DWORD PTR [ecx]
  4038a4:	mov    bl,0xc9
  4038a6:	lock cs sbb eax,0x879cf73c
  4038ad:	cmp    eax,DWORD PTR [eax]
  4038af:	sbb    al,0x6b
  4038b1:	push   ebx
  4038b2:	sub    esi,DWORD PTR [ecx]
  4038b4:	jae    0x40387f
  4038b6:	in     al,0x1
  4038b8:	adc    DWORD PTR [eax+ecx*1-0x1f368d17],0x11
  4038c0:	pop    ebx
  4038c1:	push   ebx
  4038c2:	imul   ecx
  4038c4:	jb     0x40388f
  4038c6:	add    BYTE PTR [ecx],al
  4038c8:	pop    ecx
  4038c9:	dec    ebp
  4038ca:	mul    esi
  4038cc:	(bad)  
  4038cd:	push   edi
  4038ce:	push   ebx
  4038cf:	mov    al,0x4d
  4038d1:	cwde   
  4038d2:	or     BYTE PTR [eax+eax*1],bh
	...
  4038e5:	add    BYTE PTR [eax],al
  4038e7:	add    BYTE PTR [edi+0x304c8b40],dh
  4038ed:	push   ebx
  4038ee:	jnp    0x4038e1
  4038f0:	xor    cl,cl
  4038f2:	add    cl,dl
  4038f4:	push   edx
  4038f5:	ds or  cl,ch
  4038f8:	jbe    0x40394e
  4038fa:	shr    DWORD PTR [ebx+0x725c5313],0xe3
  403901:	push   ds
  403902:	dec    ebp
  403903:	icebp  
  403904:	mov    WORD PTR [eax+ecx*1],ss
  403907:	jmp    0x29a31d9b
  40390c:	rcl    BYTE PTR [edi-0x1e],1
  40390f:	add    ch,dh
  403911:	xchg   esi,eax
  403912:	rol    edx,0xe9
  403915:	xchg   esi,eax
  403916:	pop    ebp
  403917:	mov    edx,DWORD PTR [ecx]
  403919:	loop   0x40390f
  40391b:	mov    esp,eax
  40391d:	dec    esi
  40391e:	or     BYTE PTR [ebp-0x3f],0x35
  403922:	push   es
  403923:	push   ecx
  403924:	je     0x403996
  403926:	or     ch,BYTE PTR [ebx]
  403928:	gs inc esi
  40392a:	mov    ds:0xb382659,eax
  40392f:	repz (bad) 
  403931:	fld    st(1)
  403933:	ret    0x969d
  403936:	pop    ebp
  403937:	mov    edx,DWORD PTR [ecx-0x1f]
  40393a:	pop    edi
  40393b:	mov    esp,eax
  40393d:	dec    edx
  40393e:	repz mov ebp,DWORD PTR [eax]
  403941:	dec    esi
  403942:	or     BYTE PTR [ebp-0x7b],0x37
  403946:	or     dh,bl
  403948:	leave  
  403949:	ficom  DWORD PTR [esi-0x37]
	...
  403960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403961:	dec    ecx
  403962:	not    DWORD PTR [esi+ebx*8+0x69]
  403966:	pop    esi
  403967:	push   edi
  403968:	faddp  st(4),st
  40396a:	add    ah,bh
  40396c:	out    dx,al
  40396d:	mov    WORD PTR [eax],ds
  40396f:	sub    esp,DWORD PTR [ebp+0x560c75ce]
  403975:	xchg   edi,eax
  403976:	sti    
  403977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403978:	ds (bad) 
  40397b:	add    DWORD PTR [ebp-0x29],esp
  40397e:	push   esi
  40397f:	leave  
  403980:	out    0x4c,eax
  403982:	not    DWORD PTR [esi+ebx*4+0x6c]
  403986:	mov    eax,esp
  403988:	loope  0x40396c
  40398a:	pop    edi
  40398b:	push   ebx
  40398c:	int    0x96
  40398e:	or     DWORD PTR [eax],eax
  403990:	and    eax,0x1d087d39
  403995:	es idiv edi
  403998:	and    cl,ah
  40399a:	jne    0x4039a4
  40399c:	mov    WORD PTR [edx-0x1b21d4cb],es
  4039a2:	or     al,0x1
  4039a4:	mov    WORD PTR [ebx],?
  4039a6:	jae    0x4039bc
  4039a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039a9:	ror    edx,1
  4039ab:	loop   0x403982
  4039ad:	mov    dh,0x6f
  4039af:	or     BYTE PTR [ebx+0x7a],cl
  4039b2:	jno    0x403a29
  4039b4:	cwde   
  4039b5:	xor    DWORD PTR [edi],0xb3a68cfe
  4039bb:	sub    edx,edi
  4039bd:	mov    ch,0x8
  4039bf:	cmp    eax,DWORD PTR [ecx+edi*8]
  4039c2:	jmp    0x4039c4
	...
  4039d8:	push   ecx
  4039d9:	fnstenv [edx+0x4]
  4039dc:	pop    ebp
  4039dd:	cmp    esi,DWORD PTR [esi]
  4039df:	dec    BYTE PTR [ebx+0x6fe47d1]
  4039e5:	cmp    BYTE PTR [ecx],ah
  4039e7:	mov    BYTE PTR [eax-0x7cba8eca],dl
  4039ed:	ret    
  4039ee:	or     BYTE PTR [edx],bh
  4039f0:	int    0x66
  4039f2:	ds adc dh,bh
  4039f5:	cmp    eax,0x7e6ac910
  4039fa:	addr16 aad 0xc7
  4039fd:	xor    cl,BYTE PTR [ebp-0x37]
  403a00:	dec    esi
  403a01:	aaa    
  403a02:	or     edx,DWORD PTR [ebp+0x7]
  403a05:	dec    edi
  403a06:	mov    ah,al
  403a08:	inc    esp
  403a09:	mov    es,WORD PTR [esi+0x57]
  403a0c:	inc    ebx
  403a0d:	call   0x3e469506
  403a12:	jae    0x403a59
  403a14:	xor    DWORD PTR [ebp-0x7febfeb8],esi
  403a1a:	loopne 0x4039a7
  403a1c:	daa    
  403a1d:	jp     0x403a54
  403a1f:	mov    esp,DWORD PTR [ecx+0x1445b437]
  403a25:	cmp    ecx,DWORD PTR [ebx]
  403a27:	add    BYTE PTR [esp+edx*4+0x359c367a],cl
  403a2e:	and    esi,esp
  403a30:	push   ecx
  403a31:	dec    edi
  403a32:	out    dx,al
  403a33:	lods   eax,DWORD PTR ds:[esi]
  403a34:	dec    ecx
  403a35:	dec    edi
  403a36:	(bad)  
  403a37:	lods   eax,DWORD PTR ds:[esi]
  403a38:	or     BYTE PTR [ecx+edi*2+0x4e],0x0
	...
  403a50:	jecxz  0x4039e5
  403a52:	sbb    al,0xe8
  403a54:	mov    ecx,DWORD PTR [edx]
  403a56:	and    al,0xe8
  403a58:	push   es
  403a59:	test   al,0xb9
  403a5b:	jnp    0x403abe
  403a5d:	push   edx
  403a5e:	(bad)  
  403a5f:	lods   eax,DWORD PTR ds:[esi]
  403a60:	dec    ecx
  403a61:	dec    edi
  403a62:	jns    0x403a73
  403a64:	je     0x403a07
  403a66:	xchg   edi,eax
  403a67:	ds mov al,0x1d
  403a6a:	mov    esp,0x9a814e4
  403a6f:	jp     0x403aaa
  403a71:	push   ecx
  403a72:	jecxz  0x403ac2
  403a74:	call   0x39d7:0x729d51d
  403a7b:	xor    esp,DWORD PTR [eax-0x7bc1d17c]
  403a81:	xor    esp,DWORD PTR [ecx]
  403a83:	jns    0x403a56
  403a85:	push   ecx
  403a86:	imul   eax,DWORD PTR [eax],0x7b05da06
  403a8c:	iret   
  403a8d:	xchg   ebp,eax
  403a8e:	scas   al,BYTE PTR es:[edi]
  403a8f:	inc    ebp
  403a90:	(bad)  
  403a91:	pop    ebp
  403a92:	and    esi,edi
  403a94:	pop    ebx
  403a95:	jmp    0x594e1204
  403a9a:	cmc    
  403a9b:	in     al,0x4b
  403a9d:	push   eax
  403a9e:	xor    ch,BYTE PTR [edi]
  403aa0:	and    ch,BYTE PTR [si]
  403aa3:	loopne 0x403a81
  403aa5:	dec    edi
  403aa6:	push   esp
  403aa7:	or     al,0x24
  403aa9:	retf   0x4cb
  403aac:	mov    WORD PTR [ecx],ds
  403aae:	mov    eax,ds:0xe1271413
  403ab3:	add    eax,DWORD PTR [eax]
	...
  403ac5:	add    BYTE PTR [eax],al
  403ac7:	add    BYTE PTR [edi+ecx*2+0x3c803c08],cl
  403ace:	dec    ebp
  403acf:	mov    bh,0xef
  403ad1:	dec    edi
  403ad2:	sub    DWORD PTR [esp+eiz*8],0xe89d7d4f
  403ad9:	mov    ah,cl
  403adb:	jmp    0x1608d66f
  403ae0:	outs   dx,DWORD PTR ds:[esi]
  403ae1:	sbb    eax,0xc9ef794d
  403ae6:	cld    
  403ae7:	xchg   ecx,eax
  403ae8:	dec    si
  403aea:	div    DWORD PTR [esi+0x1]
  403aed:	(bad)  
  403aef:	outs   dx,BYTE PTR ds:[esi]
  403af0:	gs dec eax
  403af2:	neg    esp
  403af4:	out    0x4f,eax
  403af6:	jge    0x403b51
  403af8:	test   al,0x20
  403afa:	not    BYTE PTR [esi-0x51]
  403afd:	dec    edi
  403afe:	jge    0x403b4d
  403b00:	mov    eax,0x8fe9e1ac
  403b05:	dec    edi
  403b06:	jge    0x403af5
  403b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b09:	cwde   
  403b0a:	loope  0x403af5
  403b0c:	(bad)  
  403b0d:	in     al,0xf7
  403b0f:	mov    ah,0x9b
  403b11:	and    DWORD PTR [ebp-0x8b091e9],ecx
  403b17:	mov    ecx,0x16f5f967
  403b1c:	outs   dx,DWORD PTR ds:[esi]
  403b1d:	dec    edi
  403b1e:	jge    0x403b35
  403b20:	outs   dx,DWORD PTR ds:[esi]
  403b21:	leave  
  403b22:	lock je 0x403b3a
  403b25:	ds idiv dh
  403b28:	outs   dx,BYTE PTR ds:[esi]
  403b29:	in     al,0xe0
  403b2b:	test   DWORD PTR [eax],0x0
	...
  403b3d:	add    BYTE PTR [eax],al
  403b3f:	add    BYTE PTR [ebp+0x4f],ch
  403b42:	imul   esi
  403b44:	in     al,0x9c
  403b46:	loopne 0x403b9c
  403b48:	pusha  
  403b49:	dec    edi
  403b4a:	not    DWORD PTR [ebx-0x78]
  403b4d:	mov    esp,0x94c921ab
  403b52:	not    DWORD PTR [eax+ebx*4+0x3c]
  403b56:	mov    bl,0x0
  403b58:	dec    edi
  403b59:	xor    dh,bh
  403b5b:	or     ebp,ebp
  403b5d:	xor    DWORD PTR [ebp-0xc],edi
  403b60:	(bad)  
  403b62:	lock inc eax
  403b65:	mov    al,ds:0x322fabe0
  403b6a:	mul    DWORD PTR [ebx]
  403b6c:	int    0x31
  403b6e:	jge    0x403b68
  403b70:	or     eax,0x1afff50e
  403b75:	xor    bh,BYTE PTR [ebp+0x8]
  403b78:	std    
  403b79:	repz (bad) 
  403b7b:	call   FWORD PTR [edx+0x1e]
  403b7e:	retf   
  403b7f:	pop    ebx
  403b80:	sub    al,0x59
  403b82:	add    BYTE PTR [eax],al
  403b84:	mov    al,ds:0x7183e41f
  403b89:	addr16 pop edi
  403b8b:	mov    esi,eax
  403b8d:	inc    esi
  403b8e:	add    al,al
  403b90:	rcr    DWORD PTR [edi+ecx*8+0x892b500],1
  403b97:	add    BYTE PTR [esi+0x33],bh
  403b9a:	mov    edi,DWORD PTR [ebp-0x53]
  403b9d:	xchg   edi,eax
  403b9e:	jge    0x403ba7
  403ba0:	pop    ds
  403ba1:	xchg   ebx,eax
  403ba2:	or     al,BYTE PTR [eax]
	...
  403bb8:	jne    0x403bf9
  403bba:	pop    es
  403bbb:	sub    DWORD PTR [eax],0x4a
  403bbe:	or     DWORD PTR [ebp+0x72],esi
  403bc1:	xor    BYTE PTR [eax],cl
  403bc3:	add    DWORD PTR [ebp-0x6e],esp
  403bc6:	jecxz  0x403bca
  403bc8:	dec    esi
  403bc9:	or     BYTE PTR [ecx+0xa926cca],cl
  403bcf:	add    al,ch
  403bd1:	fdivr  st(4),st
  403bd3:	push   eax
  403bd4:	idiv   DWORD PTR [edi-0x623f00f8]
  403bda:	div    DWORD PTR [ebp+0x3d]
  403bdd:	cmp    ch,BYTE PTR [edx+0x39225e9]
  403be3:	ror    BYTE PTR [eax+esi*8+0x63d18d79],0x3c
  403beb:	push   0xffffff8c
  403bed:	enter  0xf44f,0xbc
  403bf1:	loope  0x403bff
  403bf3:	call   FWORD PTR [ecx+0x875e86b]
  403bf9:	push   esp
  403bfa:	xchg   ecx,ebp
  403bfc:	mov    WORD PTR [ebx],?
  403bfe:	add    al,0xc0
  403c00:	cmp    DWORD PTR [edi-0x73],0x5f3bf47d
  403c07:	inc    esi
  403c08:	pop    fs
  403c0a:	rol    BYTE PTR [ecx],1
  403c0c:	pop    ecx
  403c0d:	cmp    eax,0x3cd47d8c
  403c12:	pop    edi
  403c13:	cmp    al,BYTE PTR [edi]
  403c15:	adc    esp,0x4a135c40
  403c1b:	std    
	...
  403c30:	ret    
  403c31:	mov    dh,0x85
  403c33:	clc    
  403c34:	or     ecx,edi
  403c36:	rcl    BYTE PTR [eax+0x5b],cl
  403c39:	push   ecx
  403c3a:	or     ebp,DWORD PTR [edx-0x74]
  403c3d:	ficomp WORD PTR [edi+0x10]
  403c40:	mov    ds:0x43e8d710,eax
  403c45:	in     al,0xc
  403c47:	add    BYTE PTR [edi-0x1cf5af85],al
  403c4d:	shl    DWORD PTR [ecx],cl
  403c4f:	std    
  403c50:	xor    DWORD PTR [esi+0x25],0xffffffff
  403c54:	addr16 aas 
  403c56:	test   BYTE PTR [ebp-0x68],al
  403c59:	xor    cl,bl
  403c5b:	je     0x403bee
  403c5d:	sahf   
  403c5e:	pop    edi
  403c5f:	clc    
  403c60:	adc    edi,DWORD PTR [ebx]
  403c62:	call   0x15e394dc
  403c67:	jmp    0xc7c477f8
  403c6c:	xchg   edi,eax
  403c6d:	jnp    0x403cce
  403c6f:	sbb    al,0xf
  403c71:	xchg   esp,eax
  403c72:	ins    BYTE PTR es:[edi],dx
  403c73:	cld    
  403c74:	(bad)  
  403c75:	sar    edi,0x8c
  403c78:	leave  
  403c79:	lods   al,BYTE PTR ds:[esi]
  403c7a:	and    DWORD PTR [ebx+ebp*1],esi
  403c7d:	(bad)  
  403c7e:	std    
  403c7f:	loopne 0x403c1a
  403c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c82:	into   
  403c83:	push   esi
  403c84:	mov    BYTE PTR [ebp+0x3c],cl
  403c87:	or     al,0x24
  403c89:	jae    0x403c49
  403c8b:	loopne 0x403c98
  403c8d:	in     eax,dx
  403c8e:	test   al,0xc5
  403c90:	cwde   
  403c91:	xchg   esp,eax
  403c92:	xor    al,0x8d
	...
  403ca8:	call   0x8d4c50bf
  403cad:	xchg   esp,eax
  403cae:	loope  0x403c33
  403cb0:	popa   
  403cb1:	fwait
  403cb2:	xchg   BYTE PTR [esi],dl
  403cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cb5:	(bad)  [eax]
  403cb7:	add    al,0xb
  403cb9:	xlat   BYTE PTR ds:[ebx]
  403cba:	stc    
  403cbb:	ins    DWORD PTR es:[edi],dx
  403cbc:	mov    WORD PTR [ebp-0xc],cs
  403cbf:	test   edx,0x39e0d1c6
  403cc5:	mov    al,ds:0x3c84566e
  403cca:	pop    ebp
  403ccb:	loope  0x403c80
  403ccd:	dec    esp
  403cce:	sub    ch,al
  403cd0:	jl     0x403c66
  403cd2:	or     al,ah
  403cd4:	pop    ss
  403cd5:	fs adc ch,ah
  403cd8:	aad    0x9a
  403cda:	loope  0x403cdf
  403cdc:	mov    WORD PTR [ebx+0x4b],fs
  403cdf:	push   esp
  403ce0:	cwde   
  403ce1:	adc    eax,0xfe1e1233
  403ce6:	sub    al,0x82
  403ce8:	jle    0x403c90
  403cea:	lock repnz pushf 
  403ced:	ss jp  0x8a814e74
  403cf4:	int    0x94
  403cf6:	(bad)  
  403cf8:	loope  0x403d68
  403cfa:	and    dh,BYTE PTR [esi]
  403cfc:	pop    es
  403cfd:	cmp    DWORD PTR [eax],ecx
  403cff:	sahf   
  403d00:	sbb    dl,dl
  403d02:	add    dh,dh
  403d04:	(bad)  
  403d05:	pop    ds
  403d06:	jne    0x403cfd
  403d08:	push   es
  403d09:	ficomp DWORD PTR [eax]
  403d0b:	repnz add BYTE PTR [eax],al
	...
  403d1e:	add    BYTE PTR [eax],al
  403d20:	inc    eax
  403d21:	rcl    DWORD PTR [eax],0x62
  403d24:	loopne 0x403d7b
  403d26:	loop   0x403d09
  403d28:	jge    0x403cbd
  403d2a:	sub    eax,0x89490c6
  403d2f:	jb     0x403cb5
  403d31:	adc    DWORD PTR [eax+0x3b945160],ebp
  403d37:	stos   DWORD PTR es:[edi],eax
  403d38:	dec    ebx
  403d39:	ss loopne 0x403cda
  403d3c:	inc    eax
  403d3d:	in     al,dx
  403d3e:	shr    DWORD PTR [ebx+0x625d949c],0xdc
  403d45:	out    0x8b,eax
  403d47:	or     al,0x90
  403d49:	xchg   esp,eax
  403d4a:	jge    0x403d3a
  403d4c:	rcl    cl,cl
  403d4e:	add    cl,ah
  403d50:	inc    eax
  403d51:	aad    0x8
  403d53:	push   0x2d
  403d55:	cwde   
  403d56:	or     ah,dh
  403d58:	mov    dl,BYTE PTR [ebx+0x4d]
  403d5b:	cmc    
  403d5c:	mov    bh,0xdc
  403d5e:	dec    ecx
  403d5f:	jmp    0x4140ff36
  403d64:	mov    eax,ds:0x16e90832
  403d69:	ins    DWORD PTR es:[edi],dx
  403d6a:	idiv   DWORD PTR [ebx+ecx*4-0x77b9f0c4]
  403d71:	xchg   esp,eax
  403d72:	or     edx,DWORD PTR [ecx]
  403d74:	iret   
  403d75:	out    0xe0,eax
  403d77:	out    dx,al
  403d78:	arpl   WORD PTR [ebx-0x9],cx
  403d7b:	jb     0x403db5
  403d7d:	dec    ebx
  403d7e:	jge    0x403d71
  403d80:	mov    esi,0xe193c
	...
  403d95:	add    BYTE PTR [eax],al
  403d97:	add    BYTE PTR [eax-0x6c6b086c],dl
  403d9d:	out    0xe0,eax
  403d9f:	add    BYTE PTR [ebx+0x32],ah
  403da2:	or     BYTE PTR [eax],al
  403da4:	ficom  WORD PTR [edi+0x53]
  403da7:	leave  
  403da8:	ja     0x403d42
  403daa:	or     BYTE PTR [ebp-0x52],dl
  403dad:	inc    esp
  403dae:	pop    ebx
  403daf:	xor    DWORD PTR [eax+0x2a750898],0x52
  403db6:	dec    ebp
  403db7:	or     BYTE PTR ds:0xb60049d8,bl
  403dbd:	mov    ah,0x4
  403dbf:	add    BYTE PTR [eax-0x6d],bl
  403dc2:	iret   
  403dc3:	inc    ebp
  403dc4:	and    DWORD PTR [edi+0x40],ecx
  403dc7:	inc    ecx
  403dc8:	cmc    
  403dc9:	imul   edi,DWORD PTR [ebp+0x8],0xedf3cd
  403dd0:	in     eax,0x1d
  403dd2:	sar    bh,1
  403dd4:	cwde   
  403dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd6:	loopne 0x403d8b
  403dd8:	sbb    edx,DWORD PTR [edi-0x29e2fcf8]
  403dde:	pop    ebx
  403ddf:	call   0x37abe2
  403de4:	pop    esi
  403de5:	maskmovq mm6,(bad)
  403de6:	div    DWORD PTR [ebp-0x53]
  403de9:	test   eax,esp
  403deb:	mov    ebp,0xff08970b
  403df0:	fcomp  DWORD PTR [edx+0x30efe85b]
  403df6:	or     BYTE PTR [eax],al
  403df8:	xor    al,0xb4
  403dfa:	add    BYTE PTR [eax],bl
	...
  403e10:	in     al,dx
  403e11:	iret   
  403e12:	or     BYTE PTR [ebp+ebx*4+0x69],dh
  403e16:	jge    0x403e20
  403e18:	cmp    eax,0xc2fff2fa
  403e1d:	push   ds
  403e1e:	retf   
  403e1f:	pop    ebx
  403e20:	lods   al,BYTE PTR ds:[esi]
  403e21:	push   ebx
  403e22:	add    BYTE PTR [eax],al
  403e24:	cmp    BYTE PTR [edi],bl
  403e26:	in     al,0x83
  403e28:	test   eax,0x8c685f69
  403e2d:	cmp    BYTE PTR [eax+eax*1],cl
  403e30:	mov    WORD PTR [ebx-0x6ca4045b],ss
  403e36:	test   BYTE PTR [ebp+0x50],al
  403e39:	mov    edi,0xfcd84e28
  403e3e:	or     al,BYTE PTR [eax]
  403e40:	mov    ecx,0x3b16e23d
  403e45:	jmp    0xe5cca932
  403e4a:	or     al,0xff
  403e4c:	mov    eax,ds:0x23006133
  403e51:	inc    ecx
  403e52:	inc    ebp
  403e53:	dec    esp
  403e54:	int    0x3b
  403e56:	mov    es,eax
  403e58:	xchg   ebp,eax
  403e59:	adc    ebp,0x75
  403e5c:	or     BYTE PTR [ecx+eiz*2-0x5],dl
  403e60:	add    edi,ebx
  403e62:	int3   
  403e63:	inc    ebp
  403e64:	clc    
  403e65:	cmp    ecx,DWORD PTR [ebx]
  403e67:	add    BYTE PTR [edx+ebp*8+0x3b4d4c3a],cl
  403e6e:	loopne 0x403e9d
  403e70:	pop    ss
  403e71:	inc    ebx
  403e72:	add    BYTE PTR [ebp+0x0],0x0
	...
  403e86:	add    BYTE PTR [eax],al
  403e88:	test   BYTE PTR [eax-0x2c],bl
  403e8b:	jg     0x403e60
  403e8d:	retf   0x4213
  403e90:	nop
  403e91:	dec    eax
  403e92:	lock imul ecx,DWORD PTR [eax+ebp*8+0x635c084a],0x3b4d4d75
  403e9e:	aam    0x32
  403ea0:	mov    ah,0x7
  403ea2:	aad    0xff
  403ea4:	mov    ds:0x9174cb36,eax
  403ea9:	les    ecx,FWORD PTR [edi-0x4]
  403eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ead:	inc    ebx
  403eae:	mov    bh,al
  403eb0:	nop
  403eb1:	mov    esi,0xa9f90015
  403eb6:	add    DWORD PTR [ebp+0x78],0x4ecace94
  403ebd:	nop
  403ebe:	loope  0x403ef6
  403ec0:	pop    ss
  403ec1:	cmp    BYTE PTR [edx-0x15633678],dh
  403ec7:	ret    
  403ec8:	loopne 0x403e59
  403eca:	popa   
  403ecb:	sbb    al,0x8c
  403ecd:	mov    edi,0x948c9bfb
  403ed2:	loope  0x403ed7
  403ed4:	out    0x5b,eax
  403ed6:	and    ecx,DWORD PTR [eax]
  403ed8:	mov    WORD PTR [esi-0x4173961f],?
  403ede:	loop   0x403f49
  403ee0:	mov    WORD PTR [esi-0x6bf3941f],?
  403ee6:	loope  0x403eeb
  403ee8:	sbb    edi,DWORD PTR [edi+0xebf9]
	...
  403efe:	add    BYTE PTR [eax],al
  403f00:	fsubr  QWORD PTR [esi]
  403f02:	loope  0x403f07
  403f04:	pop    ss
  403f05:	ins    BYTE PTR es:[edi],dx
  403f06:	or     al,ah
  403f08:	dec    edi
  403f09:	shr    dl,0x30
  403f0c:	in     al,0xf8
  403f0e:	add    DWORD PTR [ebx],0xffffff8c
  403f11:	or     al,0xe0
  403f13:	add    ecx,DWORD PTR [esp+edx*4-0x703134c6]
  403f1a:	loope  0x403f52
  403f1c:	pop    es
  403f1d:	cmp    BYTE PTR [edx+0x46],bh
  403f20:	test   BYTE PTR [ebp+0x149157a1],bl
  403f26:	mov    ecx,0x399b3903
  403f2b:	add    ecx,DWORD PTR [esp+edx*4-0x7031351f]
  403f32:	loope  0x403f10
  403f34:	and    DWORD PTR [ecx+ecx*2-0x1e6c5668],ebx
  403f3b:	adc    BYTE PTR [eax+ecx*2-0x5c1af14b],0xe1
  403f43:	add    ecx,DWORD PTR [edi+edx*4-0x67b0a3f8]
  403f4a:	mov    esi,0xb0926429
  403f4f:	jmp    0x3048d3e3
  403f54:	dec    ebp
  403f55:	xchg   ecx,eax
  403f56:	or     BYTE PTR [esp+edx*1+0x3b258b39],bh
  403f5d:	mov    ebx,0x478f9308
  403f62:	jge    0x403f55
	...
  403f78:	aaa    
  403f79:	and    ebp,ebp
  403f7b:	jmp    0x7608db0f
  403f80:	gs in  al,0x58
  403f83:	shl    DWORD PTR [edx+0x19def74a],1
  403f89:	shl    ah,cl
  403f8b:	xor    DWORD PTR [eax+0x47],ebx
  403f8e:	jge    0x403f5d
  403f90:	aaa    
  403f91:	ret    0xd100
  403f94:	mov    cl,0x31
  403f96:	or     cl,ch
  403f98:	call   0xf4c1:0xe6e57d54
  403f9f:	shr    DWORD PTR [edi+0x4a],0xf7
  403fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa4:	mov    ds:0x1aeae354,eax
  403fa9:	shl    ah,cl
  403fab:	mov    al,ds:0x340890ca
  403fb0:	or     edi,DWORD PTR [ecx]
  403fb2:	pop    ebx
  403fb3:	jb     0x403f4a
  403fb5:	cwde   
  403fb6:	(bad)  
  403fb7:	fld    DWORD PTR [edx-0x188c8cc4]
  403fbd:	inc    edi
  403fbe:	(bad)  
  403fbf:	jmp    0xeaa2d3ed
  403fc4:	and    DWORD PTR [edx+eiz*2+0x89437ea],edx
  403fcb:	jmp    0xe1bd87df
  403fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fd1:	inc    eax
  403fd2:	in     al,dx
  403fd3:	add    BYTE PTR [ebp+0x35038193],ah
  403fd9:	xlat   BYTE PTR ds:[ebx]
  403fda:	push   esp
  403fdb:	push   0x0
	...
  403fed:	add    BYTE PTR [eax],al
  403fef:	add    BYTE PTR [ebp-0x7d],dh
  403ff2:	loopne 0x404029
  403ff4:	rcl    BYTE PTR [eax-0x70d976f8],1
  403ffa:	bound  eax,QWORD PTR [eax]
  403ffc:	call   DWORD PTR [edx-0x6ef0ff9e]
  404002:	bound  eax,QWORD PTR [eax]
  404004:	mov    bl,BYTE PTR [edi-0x6f7fd820]
  40400a:	or     BYTE PTR [ebx],cl
  40400c:	jne    0x403ff2
  40400e:	daa    
  40400f:	mov    esi,esi
  404011:	inc    esi
  404012:	popa   
  404013:	add    BYTE PTR [edi],cl
  404015:	xchg   ebx,eax
  404016:	bound  eax,QWORD PTR [eax]
  404018:	fist   WORD PTR [eax+ebx*2+0x8358de8]
  40401f:	add    BYTE PTR [esi+ecx*8-0x1c1af500],ch
  404026:	sub    al,0xff
  404028:	push   esi
  404029:	xchg   esp,eax
  40402a:	loopne 0x403fe7
  40402c:	rcl    DWORD PTR [edx+0x3b06ff08],1
  404032:	mov    esp,0xcf92e5e4
  404037:	add    ebp,DWORD PTR [edx]
  404039:	push   0xfffffff7
  40403b:	(bad)  
  40403c:	(bad)  
  40403d:	fwait
  40403e:	div    DWORD PTR [ebx]
  404040:	or     eax,0xe500ebf4
  404045:	push   ecx
  404046:	or     edi,edi
  404048:	or     ch,BYTE PTR [edx-0x9]
  40404b:	sub    esi,ebp
  40404d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404e:	dec    ebx
  40404f:	or     BYTE PTR [edx+0x5bc8c3],ch
	...
  404065:	add    BYTE PTR [eax],al
  404067:	add    ah,ch
  404069:	push   eax
  40406a:	add    BYTE PTR [eax],al
  40406c:	lock adc eax,0x8c1e53e4
  404072:	add    BYTE PTR [ebx+0x74d3a28c],al
  404078:	adc    esi,0x5e
  40407b:	or     BYTE PTR [edx+ebp*4-0x7973ff29],ah
  404082:	pop    esi
  404083:	add    al,0x74
  404085:	push   es
  404086:	xlat   BYTE PTR ds:[ebx]
  404087:	add    BYTE PTR [esi+esi*2-0x681c17e2],cl
  40408e:	or     eax,DWORD PTR [eax]
  404090:	mov    DWORD PTR [ebp+ecx*8-0x79f773fc],0xeb700dec
  40409b:	out    dx,eax
  40409c:	push   ebx
  40409d:	(bad)  
  40409e:	cmp    DWORD PTR [edi+0xf],edx
  4040a1:	or     DWORD PTR [ecx+0xb3bcd48],edx
  4040a7:	je     0x40404a
  4040a9:	ss pop es
  4040ab:	mov    esi,0xe80c7cc4
  4040b0:	or     eax,0x4bffd135
  4040b5:	cmp    DWORD PTR [ecx+0xb3bcd48],edx
  4040bb:	add    BYTE PTR [ebx+edi*1-0x7c31c274],cl
  4040c2:	dec    ebx
  4040c3:	add    BYTE PTR [edi+eax*4-0x63e0119],cl
  4040ca:	inc    ebx
  4040cb:	inc    ecx
	...
  4040e0:	mov    WORD PTR [ebx],fs
  4040e2:	ins    DWORD PTR es:[edi],dx
  4040e3:	stc    
  4040e4:	jmp    0x40410c
  4040e6:	leave  
  4040e7:	add    eax,0x4b73ce
  4040ec:	mov    WORD PTR [ebx],?
  4040ee:	or     eax,DWORD PTR [eax]
  4040f0:	add    DWORD PTR [ecx-0x39341024],edi
  4040f6:	cmp    al,0xe8
  4040f8:	icebp  
  4040f9:	retf   
  4040fa:	sar    edi,1
  4040fc:	or     DWORD PTR [ecx-0x6b4c1020],esi
  404102:	outs   dx,BYTE PTR ds:[esi]
  404103:	xor    al,0xb4
  404105:	repz push eax
  404107:	fldenv [ebx+0x3cd7a417]
  40410d:	mov    esp,0x944d4c2f
  404112:	fld    DWORD PTR ds:0xec61948c
  404118:	in     al,dx
  404119:	das    
  40411a:	loope  0x40411f
  40411c:	xchg   DWORD PTR [esi+edx*8+0x7e],edx
  404120:	xlat   BYTE PTR ds:[ebx]
  404121:	xchg   ebx,eax
  404122:	loope  0x404127
  404124:	push   ebx
  404125:	nop    ecx
  404128:	arpl   WORD PTR [ebp-0x1f],ax
  40412b:	add    ecx,DWORD PTR [esp+edx*4+0x35547f2e]
  404132:	push   cs
  404133:	(bad)  [ebx-0x6b]
  404136:	loope  0x40413b
  404138:	mov    dh,0x94
  40413a:	mov    eax,DWORD PTR [ebx]
  40413c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40413d:	xchg   esp,eax
  40413e:	mov    eax,DWORD PTR [ebx]
  404140:	add    DWORD PTR [edi],ecx
  404142:	jmp    0x40422f
	...
  404157:	add    BYTE PTR [ebx],ch
  404159:	inc    ebp
  40415a:	xor    DWORD PTR [edi-0x2731b7f7],eax
  404160:	sbb    esp,esp
  404162:	(bad)  
  404163:	mov    ds,WORD PTR [eax]
  404165:	xor    eax,0xbf0bd8ce
  40416a:	mov    ch,0xeb
  40416c:	stos   BYTE PTR es:[edi],al
  40416d:	das    
  40416e:	loope  0x404173
  404170:	xchg   DWORD PTR [esi+edx*8+0x7e],edx
  404174:	lahf   
  404175:	xchg   ebx,eax
  404176:	loope  0x40417b
  404178:	je     0x404118
  40417a:	cmp    BYTE PTR [ebx-0x74],al
  40417d:	mov    esp,0x944d4ba7
  404182:	mov    DWORD PTR [ecx-0x30],edx
  404185:	inc    esp
  404186:	mov    cs,WORD PTR [esp+ecx*8]
  404189:	xchg   esp,eax
  40418a:	ins    DWORD PTR es:[edi],dx
  40418b:	ror    BYTE PTR [esp+edx*4+0x6408e908],cl
  404192:	test   DWORD PTR [ebx+ebx*8+0x34],esp
  404196:	mul    DWORD PTR [esi+0x5f]
  404199:	loop   0x40417b
  40419b:	call   0x94cf:0xe2f744bb
  4041a2:	mov    WORD PTR [ebx],?
  4041a4:	(bad)  
  4041a5:	xchg   esp,eax
  4041a6:	or     BYTE PTR [eax+0xa],dh
  4041a9:	xor    eax,0x12643ee7
  4041ae:	lea    eax,[ecx+0x64]
  4041b1:	inc    esp
  4041b2:	neg    DWORD PTR [ecx-0x57bfc119]
  4041b8:	pop    DWORD PTR [ebx-0x43]
  4041bb:	or     DWORD PTR [eax],eax
	...
  4041cd:	add    BYTE PTR [eax],al
  4041cf:	add    BYTE PTR [esp+eax*2-0x9],dh
  4041d3:	adc    DWORD PTR [ecx+0x67690894],0x6406f2f3
  4041dd:	nop
  4041de:	enter  0xc3ee,0xf9
  4041e2:	pop    es
  4041e3:	jmp    0xe9305977
  4041e8:	test   BYTE PTR [edx],bl
  4041ea:	xchg   esp,eax
  4041eb:	jmp    0xde98d67f
  4041f0:	std    
  4041f1:	sub    al,0xe7
  4041f3:	(bad)  
  4041f4:	inc    ebx
  4041f5:	in     eax,0xf7
  4041f7:	xchg   esp,eax
  4041f8:	cmp    BYTE PTR [edi+esi*8],dh
  4041fb:	xabort 0x7c
  4041fe:	std    
  4041ff:	mov    esi,0xc18d11db
  404204:	repz inc ebx
  404206:	neg    DWORD PTR [ecx]
  404208:	pusha  
  404209:	mov    es,WORD PTR [ecx+0x28]
  40420c:	nop
  40420d:	inc    ebx
  40420e:	mov    ebp,0xf743eb89
  404213:	add    DWORD PTR [esi-0x1f96f76c],ecx
  404219:	mov    dl,0xf3
  40421b:	add    BYTE PTR [edx],dl
  40421d:	ins    BYTE PTR es:[edi],dx
  40421e:	add    eax,eax
  404220:	mov    ecx,0xdbd8b83
  404225:	cmp    al,0xf7
  404227:	jmp    DWORD PTR [ecx+edx*8+0xce55033]
  40422e:	(bad)  
  40422f:	cld    
  404230:	push   edx
  404231:	imul   esi,edi,0x50
	...
  404248:	dec    ebp
  404249:	dec    ecx
  40424a:	jmp    0xd185:0x8587a500
  404251:	cmp    esi,edi
  404253:	jmp    DWORD PTR ds:0xd2ecbd6a
  404259:	imul   esi,edi,0xffffffe8
  40425c:	mov    bl,0x64
  40425e:	idiv   edi
  404260:	dec    ebp
  404261:	push   0xffffffbd
  404263:	call   0x5137adfa
  404268:	and    BYTE PTR ds:0x6b82efe4,0xe0
  40426f:	fisttp DWORD PTR [ecx+0x6a]
  404272:	imul   eax
  404274:	gs pop edi
  404276:	idiv   edi
  404278:	mov    ?,WORD PTR [eax-0x7b]
  40427b:	test   DWORD PTR [ecx],esp
  40427d:	cmp    dh,bh
  40427f:	jmp    DWORD PTR [ebp+0x30]
  404282:	shl    dl,1
  404284:	xor    eax,0xb0504897
  404289:	adc    al,0xf4
  40428b:	out    dx,eax
  40428c:	inc    edx
  40428d:	push   0x58
  40428f:	dec    DWORD PTR [eax+0x42ffe73b]
  404295:	das    
  404296:	mov    esp,0xe06a42f4
  40429b:	jmp    0x37acda
  4042a0:	dec    eax
  4042a1:	aaa    
  4042a2:	out    0xff,eax
  4042a4:	add    ch,BYTE PTR [edi]
  4042a6:	(bad)  
  4042a7:	test   DWORD PTR [edx+ebp*1+0xffde],0x0
	...
  4042be:	add    BYTE PTR [eax],al
  4042c0:	or     DWORD PTR [ecx],ebp
  4042c2:	out    dx,al
  4042c3:	dec    ebx
  4042c5:	and    eax,DWORD PTR [esi-0x213e3c02]
  4042cb:	jne    0x404285
  4042cd:	adc    al,0xc6
  4042cf:	jecxz  0x40425d
  4042d1:	sub    eax,0x1fab0061
  4042d6:	fucomi st,st(7)
  4042d8:	mov    ds:0xa06fe3e1,eax
  4042dd:	jmp    0xd2ccadc0
  4042e2:	cwde   
  4042e3:	in     al,dx
  4042e4:	jnp    0x4042c1
  4042e6:	fsubp  st(0),st
  4042e8:	out    dx,al
  4042e9:	xchg   esi,ebx
  4042eb:	dec    DWORD PTR [ecx]
  4042ed:	mov    cl,0xd7
  4042ef:	out    dx,eax
  4042f0:	jae    0x404365
  4042f2:	cmp    edi,edi
  4042f4:	and    DWORD PTR [esi+ebp*8+0x72a463ff],ebx
  4042fb:	jecxz  0x404289
  4042fd:	sub    ecx,DWORD PTR [eax-0x22092b40]
  404303:	mov    ch,0x3c
  404305:	stos   DWORD PTR es:[edi],eax
  404306:	fdivp  st(7),st
  404308:	xor    al,0x10
  40430a:	out    dx,al
  40430b:	(bad)  
  40430c:	cmp    esi,DWORD PTR [ebp+0x3323e888]
  404312:	(bad)  
  404314:	loope  0x404379
  404316:	in     eax,dx
  404317:	jmp    DWORD PTR [ebx]
  404319:	neg    WORD PTR fs:[ebx]
  40431d:	imul   ebp,DWORD PTR [ecx+0xc6cc4be],0xffffffff
	...
  404338:	inc    ecx
  404339:	push   eax
  40433a:	in     eax,dx
  40433b:	inc    DWORD PTR [ebx]
  40433d:	fs inc ecx
  40433f:	loop   0x4042cd
  404341:	sub    eax,DWORD PTR [eax]
  404343:	sar    BYTE PTR [eax+0x66],0x80
  404347:	(bad)  
  404348:	hlt    
  404349:	xchg   esp,eax
  40434a:	sahf   
  40434b:	aad    0xe3
  40434d:	or     eax,0x2998991
  404352:	sub    DWORD PTR [ebx-0x74],eax
  404355:	inc    ebp
  404356:	dec    ebp
  404357:	aad    0x1
  404359:	cmp    DWORD PTR [esi-0x4cd33c2b],ebx
  40435f:	loope  0x4042ed
  404361:	xchg   esp,eax
  404362:	ins    BYTE PTR es:[edi],dx
  404363:	jg     0x40430d
  404365:	xor    DWORD PTR [esi-0x2b],esp
  404368:	cmp    al,0x41
  40436a:	xchg   esp,eax
  40436b:	call   0xec968523
  404370:	push   esi
  404371:	xor    eax,0x550903e1
  404376:	(bad)  [eax-0x75]
  404379:	pop    es
  40437a:	pop    ebp
  40437b:	in     eax,0x83
  40437d:	inc    ecx
  40437e:	pop    ecx
  40437f:	or     DWORD PTR [ebx+0x41],ebp
  404382:	mov    ecx,DWORD PTR ds:[ecx]
  404385:	sub    al,0x36
  404387:	aad    0x6b
  404389:	inc    ecx
  40438a:	push   esp
  40438b:	in     al,dx
  40438c:	jae    0x4043cf
  40438e:	push   ss
  40438f:	in     al,dx
  404390:	mov    eax,ds:0x2fd51e49
  404395:	push   esi
  404396:	test   eax,0x34418c42
  40439b:	loopne 0x40439d
	...
  4043ad:	add    BYTE PTR [eax],al
  4043af:	add    BYTE PTR [ebx],dh
  4043b1:	inc    ecx
  4043b2:	imul   bl
  4043b4:	es xor esp,ecx
  4043b7:	add    eax,DWORD PTR [edi+0x16f87d54]
  4043bd:	psubusw mm4,mm4
  4043c0:	and    eax,DWORD PTR [ecx+0x7a]
  4043c3:	rol    DWORD PTR [edi],cl
  4043c5:	jg     0x40436a
  4043c7:	dec    ebx
  4043c8:	int    0x94
  4043ca:	rcr    BYTE PTR [edi-0x1b3af8f5],cl
  4043d0:	add    eax,DWORD PTR [ecx-0x27]
  4043d3:	mov    dl,0xed
  4043d5:	xchg   ebx,eax
  4043d6:	or     cl,ch
  4043d8:	fadd   DWORD PTR [esi]
  4043da:	clc    
  4043db:	mov    esi,0xae040c0
  4043e0:	jmp    0xe730:0xa9ef740
  4043e7:	xchg   esi,eax
  4043e8:	mov    eax,0xe07f502b
  4043ed:	inc    eax
  4043ee:	push   edi
  4043ef:	daa    
  4043f0:	xlat   BYTE PTR ds:[ebx]
  4043f1:	push   esp
  4043f2:	pop    ebp
  4043f3:	jb     0x4043a8
  4043f5:	lods   eax,DWORD PTR ds:[esi]
  4043f6:	add    BYTE PTR [ecx+0x6ef749ad],al
  4043fc:	adc    al,0x64
  4043fe:	neg    DWORD PTR [esp+eiz*4]
  404401:	retf   
  404402:	dec    ecx
  404403:	jmp    0xdd37da18
  404408:	xchg   DWORD PTR [ecx],edx
  40440a:	dec    edx
  40440b:	in     eax,0x16
  40440d:	stos   BYTE PTR es:[edi],al
  40440e:	adc    al,0xb0
  404410:	into   
  404411:	xchg   esp,eax
  404412:	shr    DWORD PTR [ebx],0x0
	...
  404425:	add    BYTE PTR [eax],al
  404427:	add    BYTE PTR [ebx+0x40],bh
  40442a:	pop    esp
  40442b:	bound  ebp,QWORD PTR [ebx+0x14]
  40442e:	int3   
  40442f:	xor    DWORD PTR [eax-0x70deb2a9],edi
  404435:	xchg   esp,eax
  404436:	or     cl,ch
  404438:	or     al,0xc2
  40443a:	add    cl,ch
  40443c:	ret    
  40443d:	mov    ds:0x3f9394f7,al
  404442:	jge    0x404435
  404444:	mov    ch,0x94
  404446:	loopne 0x404444
  404448:	push   ebp
  404449:	inc    eax
  40444a:	mul    DWORD PTR [eax+0x72]
  40444d:	inc    eax
  40444e:	jecxz  0x404436
  404450:	call   0x902a392e
  404455:	xchg   esp,eax
  404456:	or     BYTE PTR [edx+0x7d],dh
  404459:	mov    al,ds:0x2b882841
  40445e:	sbb    esp,DWORD PTR [edx+0x55]
  404461:	inc    eax
  404462:	xor    eax,DWORD PTR [eax]
  404464:	mov    dl,0x8c
  404466:	jge    0x404471
  404468:	xor    cl,dh
  40446a:	lock add ebp,esp
  40446d:	xchg   ebx,eax
  40446e:	or     bl,ch
  404470:	repz mov esi,0xde2a0b37
  404476:	loope  0x4043fb
  404478:	js     0x4044ca
  40447a:	or     BYTE PTR [ebp-0x13],dh
  40447d:	bound  edi,QWORD PTR [ebp-0x4]
  404480:	or     eax,0xafff717
  404485:	ror    BYTE PTR [ebp-0x8],0x9a
  404489:	add    edx,ecx
  40448b:	or     BYTE PTR [eax],al
	...
  40449d:	add    BYTE PTR [eax],al
  40449f:	add    BYTE PTR [ebp-0x26c27c86],ah
  4044a5:	or     BYTE PTR [ecx+0x0],0x3e
  4044a9:	inc    eax
  4044aa:	pop    esi
  4044ab:	mov    edi,DWORD PTR [edx+0x60]
  4044ae:	idiv   BYTE PTR ss:[edx]
  4044b1:	arpl   WORD PTR [ebx],ax
  4044b3:	jmp    DWORD PTR [eax+0x67]
  4044b6:	iret   
  4044b7:	add    eax,0x498069
  4044bc:	gs xchg ebx,eax
  4044be:	or     BYTE PTR [eax],al
  4044c0:	sbb    dl,BYTE PTR [esi+0x5d]
  4044c3:	mov    ebp,DWORD PTR [ecx+0x756a5e7b]
  4044c9:	bound  edi,QWORD PTR [ebp+0x8]
  4044cc:	jge    0x4044f0
  4044ce:	icebp  
  4044cf:	(bad)  
  4044d0:	jp     0x404491
  4044d2:	lock jmp DWORD PTR [eax]
  4044d5:	cmp    ebp,edi
  4044d7:	jmp    0x40446e
  4044d9:	cwde   
  4044da:	or     BYTE PTR [ebx+0xf7e998d],al
  4044e0:	adc    dl,BYTE PTR [ebx]
  4044e2:	aaa    
  4044e3:	and    ah,BYTE PTR [eax-0x3d720cc5]
  4044e9:	cdq    
  4044ea:	or     eax,0x36
  4044ed:	not    DWORD PTR [esi+0x68]
  4044f0:	mov    WORD PTR [ebp-0x7973becb],cs
  4044f6:	aam    0x6a
  4044f8:	out    dx,al
  4044f9:	sub    al,0xb
  4044fb:	or     ecx,esp
  4044fd:	mov    BYTE PTR [eax],al
  4044ff:	(bad)  
  404500:	dec    esp
  404501:	xor    DWORD PTR [ebx],ecx
  404503:	push   0x0
	...
  404515:	add    BYTE PTR [eax],al
  404517:	add    BYTE PTR [eax-0x2d],cl
  40451a:	or     al,0x57
  40451c:	hlt    
  40451d:	(bad)  
  40451e:	out    dx,al
  40451f:	add    BYTE PTR [edx+eax*2-0x10768b35],cl
  404526:	or     al,BYTE PTR [eax]
  404528:	mov    bh,0x29
  40452a:	rol    DWORD PTR [edi],0x8c
  40452d:	sahf   
  40452e:	aam    0xa8
  404530:	lods   al,BYTE PTR ds:[esi]
  404531:	sub    al,0xb
  404533:	xor    DWORD PTR [ecx+ebp*1+0x35d20352],0xb
  40453b:	mov    ecx,ebx
  40453d:	push   esi
  40453e:	cmp    cl,cl
  404540:	into   
  404541:	cmp    BYTE PTR [ebx],cl
  404543:	push   ebp
  404544:	pop    es
  404545:	(bad)  [esi+0x40b388c4]
  40454b:	or     al,0x89
  40454d:	sub    edi,ebx
  40454f:	(bad)  
  404550:	jnp    0x40456e
  404552:	rol    ebp,cl
  404554:	jns    0x4044dd
  404556:	fimul  DWORD PTR [ecx+0x75da6fd1]
  40455c:	nop
  40455d:	jbe    0x4045af
  40455f:	cld    
  404560:	pop    ebx
  404561:	sub    ebx,esi
  404563:	out    0x67,eax
  404565:	mov    eax,ds:0x294bffda
  40456a:	sti    
  40456b:	(bad)  
  40456c:	mov    ecx,0x3875da47
  404571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404572:	lods   eax,DWORD PTR ds:[esi]
  404573:	or     DWORD PTR [ebx+ebp*1-0x6bd78a26],ecx
  40457a:	xor    ch,0x0
	...
  40458d:	add    BYTE PTR [eax],al
  40458f:	add    BYTE PTR [ebx],ah
  404591:	xchg   ebp,eax
  404592:	out    dx,al
  404593:	mov    ebx,0x36e1914e
  404598:	pop    es
  404599:	xor    DWORD PTR [edi],esi
  40459b:	xor    eax,0xfc5c3d63
  4045a0:	jmp    0x4045bd
  4045a2:	rol    DWORD PTR [esp+ecx*4],0x24
  4045a6:	cli    
  4045a7:	ret    
  4045a8:	jns    0x40453f
  4045aa:	push   ds
  4045ab:	sub    eax,0xfca34b4a
  4045b0:	jecxz  0x4045bc
  4045b2:	sub    al,0xfc
  4045b4:	or     ecx,DWORD PTR [edx]
  4045b6:	leave  
  4045b7:	je     0x4045c0
  4045b9:	enter  0x1ced,0xcc
  4045bd:	inc    eax
  4045be:	pop    eax
  4045bf:	rol    ebx,1
  4045c1:	cmp    eax,0xeebe748e
  4045c6:	push   eax
  4045c7:	test   BYTE PTR [ebx-0x6c],dh
  4045ca:	cmc    
  4045cb:	jmp    0x94ac:0x5389e142
  4045d2:	loope  0x4045d0
  4045d4:	fcmovnb st,st(7)
  4045d6:	out    dx,al
  4045d7:	xor    BYTE PTR [edi],dh
  4045d9:	fisubr WORD PTR [eax]
  4045db:	(bad)  
  4045dc:	xchg   esp,eax
  4045dd:	xchg   esp,eax
  4045de:	push   0xe5560f0a
  4045e3:	fsub   QWORD PTR [edx-0x4]
  4045e6:	fild   WORD PTR [ebx]
  4045e8:	mov    WORD PTR [esi+ebx*4+0x234bca2c],ss
  4045ef:	cld    
  4045f0:	arpl   WORD PTR [ebp+0x3d3d],si
	...
  404606:	add    BYTE PTR [eax],al
  404608:	int    0x94
  40460a:	cdq    
  40460b:	call   0x3d23:0xdbe1d3c5
  404612:	push   es
  404613:	shl    DWORD PTR [eax+ebp*4-0x5373bd43],1
  40461a:	or     edi,DWORD PTR [esi]
  40461c:	int    0x94
  40461e:	or     BYTE PTR [ecx],al
  404620:	test   al,0x3d
  404622:	imul   esi
  404624:	(bad)  
  404625:	fs inc ebx
  404627:	sub    BYTE PTR [eax-0x30cf3454],dl
  40462d:	xchg   esp,eax
  40462e:	loopne 0x404680
  404630:	fnstsw WORD PTR [edi+esi*8]
  404633:	inc    ecx
  404634:	dec    esi
  404635:	ror    BYTE PTR [ecx-0x17],1
  404638:	push   edi
  404639:	test   BYTE PTR [eax+ebp*1-0x78],al
  40463d:	sub    al,0x62
  40463f:	mov    dh,0xbc
  404641:	cmp    al,0x60
  404643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404644:	mov    al,ds:0x3e1108d3
  404649:	retf   
  40464a:	dec    ecx
  40464b:	jmp    0x97381f07
  404650:	fsubr  QWORD PTR [ebx-0x6bb0dd4c]
  404656:	pusha  
  404657:	(bad)  
  404658:	jbe    0x40462d
  40465a:	or     BYTE PTR [ecx+0x76f73d73],dl
  404660:	inc    edi
  404661:	ins    BYTE PTR es:[edi],dx
  404662:	inc    esp
  404663:	sub    BYTE PTR [eax+0x4eb274ac],cl
  404669:	xchg   esp,eax
  40466a:	loopne 0x404688
	...
  404680:	mov    ebp,0xabc1f73c
  404685:	enter  0xe949,0xe7
  404689:	push   ds
  40468a:	inc    ebx
  40468b:	test   al,0x8f
  40468d:	sub    al,0x26
  40468f:	ds pop esp
  404691:	cmp    al,0xcb
  404693:	pushf  
  404694:	call   0x67e4c9c1
  404699:	(bad)
  40469d:	adc    al,0x30
  40469f:	jmp    0xe9f0d45e
  4046a4:	(bad)  
  4046a5:	xchg   esp,eax
  4046a6:	or     BYTE PTR [eax],ah
  4046a8:	dec    ecx
  4046a9:	xchg   ecx,eax
  4046aa:	or     BYTE PTR [eax],al
  4046ac:	pop    esi
  4046ad:	add    ah,bl
  4046af:	pop    ss
  4046b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b1:	(bad)  
  4046b2:	push   esp
  4046b3:	je     0x4046ed
  4046b5:	sbb    BYTE PTR [eax],dh
  4046b7:	das    
  4046b8:	cwde   
  4046b9:	mov    WORD PTR [edx+0x8982501],?
  4046bf:	jmp    0x4046e9
  4046c1:	push   cs
  4046c2:	or     BYTE PTR [eax],al
  4046c4:	cmc    
  4046c5:	xchg   edi,eax
  4046c6:	dec    eax
  4046c7:	sbb    BYTE PTR [ebp+0x7ee47d90],0x56
  4046ce:	rol    edx,0xe9
  4046d1:	xchg   edi,eax
  4046d2:	pop    ebp
  4046d3:	mov    edx,ecx
  4046d5:	sbb    DWORD PTR [esi+0x53],0x6e
  4046d9:	int    0x4
  4046db:	add    eax,0x893e5
  4046e0:	adc    al,0x31
  4046e2:	pop    eax
  4046e3:	call   0x4046e8
	...
  4046f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f9:	pop    esp
  4046fa:	idiv   edi
  4046fc:	cs dec eax
  4046fe:	sbb    eax,0x3e
  404701:	fld    QWORD PTR [eax]
  404703:	mov    esp,DWORD PTR [eax-0x6c]
  404706:	jecxz  0x40470a
  404708:	pop    ecx
  404709:	jns    0x40470e
  40470b:	leave  
  40470c:	cdq    
  40470d:	mov    WORD PTR [eax-0x22360c2],cs
  404713:	or     ebx,DWORD PTR [esp+ebx*8+0xa]
  404717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404718:	sub    al,0x9e
  40471a:	enter  0xe8aa,0xf9
  40471e:	jl     0x404706
  404720:	(bad)  
  404721:	push   edi
  404722:	push   ebx
  404723:	pop    esi
  404724:	adc    bh,al
  404726:	leave  
  404727:	or     BYTE PTR [ebp-0x7a],dh
  40472a:	pop    esi
  40472b:	mov    ecx,0x89769
  404730:	aad    0xa7
  404732:	ficom  DWORD PTR [eax-0x536811ca]
  404738:	mov    WORD PTR [ebp-0x42b34a09],?
  40473e:	sbb    BYTE PTR [ebx],ch
  404740:	sbb    al,0xb8
  404742:	or     eax,0x66f0f90
  404747:	nop
  404748:	iret   
  404749:	add    DWORD PTR [esi],edx
  40474b:	nop
  40474c:	cdq    
  40474d:	xor    edi,DWORD PTR [ebx-0x7d]
  404750:	dec    esi
  404751:	jb     0x4047cf
  404753:	inc    ebx
  404754:	push   eax
  404755:	popf   
  404756:	jl     0x4047d4
  404758:	xchg   esi,eax
  404759:	mov    eax,ds:0x9005
	...
  40476e:	add    BYTE PTR [eax],al
  404770:	xor    DWORD PTR [eax],0xf
  404773:	add    al,0x8f
  404775:	sbb    eax,0xdd4d3c4a
  40477a:	inc    edi
  40477b:	or     ebp,DWORD PTR [eax-0x75808359]
  404781:	cmp    DWORD PTR [eax+edx*4-0x71],ecx
  404785:	std    
  404786:	dec    ecx
  404787:	cmp    al,0x6d
  404789:	mov    ebp,0xa7880a47
  40478e:	jl     0x40480f
  404790:	mov    ecx,edi
  404792:	dec    ebp
  404793:	add    ebx,esp
  404795:	ins    DWORD PTR es:[edi],dx
  404796:	int    0xc2
  404798:	mov    cl,BYTE PTR [edi]
  40479a:	pushf  
  40479b:	rcl    esi,0x2a
  40479e:	jb     0x404762
  4047a0:	xchg   ebx,eax
  4047a1:	cmc    
  4047a2:	retf   
  4047a3:	call   0x8bbb4e2c
  4047a8:	(bad)  
  4047a9:	mov    esp,0xf94f5b25
  4047ae:	jno    0x40479c
  4047b0:	fild   WORD PTR [edx]
  4047b2:	cmp    eax,0xf2f907fc
  4047b7:	pop    DWORD PTR [edi]
  4047b9:	stc    
  4047ba:	cli    
  4047bb:	(bad)  
  4047bc:	pop    ss
  4047bd:	icebp  
  4047be:	test   BYTE PTR [edi+0x22eaa69f],0xfc
  4047c5:	xchg   esp,eax
  4047c6:	mov    al,0x73
  4047c8:	fs (bad) 
  4047ca:	push   ss
  4047cb:	into   
  4047cc:	dec    ebx
  4047cd:	and    eax,0x8cc2bc64
  4047d2:	dec    ebx
  4047d3:	les    eax,FWORD PTR [eax]
	...
  4047e5:	add    BYTE PTR [eax],al
  4047e7:	add    BYTE PTR [ecx*4+0x3d2e4251],ah
  4047ee:	push   ecx
  4047ef:	sub    al,0xfc
  4047f1:	adc    eax,0x15fc0727
  4047f6:	or     BYTE PTR [edi],al
  4047f8:	cld    
  4047f9:	mov    ecx,0x560774cf
  4047fe:	jno    0x40482e
  404800:	imul   ebx,ebp,0xffffffa8
  404803:	ret    0x9490
  404806:	cmp    al,0x79
  404808:	call   0xf320ed20
  40480d:	cmp    DWORD PTR [esi+0x6c5db731],esi
  404813:	inc    edi
  404814:	loopne 0x4047fa
  404816:	dec    ecx
  404817:	daa    
  404818:	inc    ebp
  404819:	shl    ecx,cl
  40481b:	int3   
  40481c:	cdq    
  40481d:	jle    0x404857
  40481f:	inc    ebx
  404820:	mov    WORD PTR [ebx+edi*2],gs
  404823:	lods   eax,DWORD PTR ds:[esi]
  404824:	mov    WORD PTR [edx+ebp*8-0x7189be3d],ss
  40482b:	push   edi
  40482c:	pushf  
  40482d:	cmp    esp,edi
  40482f:	push   DWORD PTR ds:0xa3040b95
  404835:	mov    edi,0x3821cce9
  40483a:	pop    ecx
  40483b:	test   DWORD PTR [ebx+0x4bf8e194],esi
  404841:	mov    edi,0xbf8340e0
  404846:	inc    ebp
  404847:	fsub   st(6),st
  404849:	pop    ecx
  40484a:	loope  0x40484f
	...
  404860:	xchg   DWORD PTR [ebp-0x1a],ebx
  404863:	xchg   BYTE PTR [ecx-0x6c],dl
  404866:	or     cl,ch
  404868:	pop    DWORD PTR [edi]
  40486a:	lea    edi,[edx]
  40486c:	dec    edx
  40486d:	cmp    edi,esi
  40486f:	mov    ecx,0xe90990b7
  404874:	(bad)  
  404875:	sub    al,0x45
  404877:	aaa    
  404878:	mov    BYTE PTR [ebx+eax*1-0x5beac6d7],dl
  40487f:	jmp    0xe575dd13
  404884:	mov    ss,WORD PTR [eax+ecx*1+0x7f308e6]
  40488b:	jmp    0x7448f71f
  404890:	or     al,BYTE PTR [ebp-0xa]
  404893:	(bad)  
  404895:	jecxz  0x404877
  404897:	sbb    esi,DWORD PTR [edx]
  404899:	xchg   esp,eax
  40489a:	or     BYTE PTR [edx+edx*1+0x45],bl
  40489e:	test   dh,0xc0
  4048a1:	jecxz  0x404883
  4048a3:	sub    edx,ebx
  4048a5:	cmp    bh,dh
  4048a7:	loop   0x404878
  4048a9:	mov    esi,0xcbe24114
  4048ae:	dec    ecx
  4048af:	jmp    0xa03b5806
  4048b4:	fdivr  DWORD PTR [eax]
  4048b6:	pop    eax
  4048b7:	adc    DWORD PTR [ebp+0x42],0xbec88ef7
  4048be:	add    BYTE PTR [ecx],bl
  4048c0:	ror    BYTE PTR [esi-0x2],1
  4048c3:	jle    0x4048c5
	...
  4048d5:	add    BYTE PTR [eax],al
  4048d7:	add    al,bl
  4048d9:	sub    al,0x7
  4048db:	jbe    0x404917
  4048dd:	mov    WORD PTR [ebp-0x8c6439c],es
  4048e3:	pop    di
  4048e5:	sub    al,0x68
  4048e7:	push   edi
  4048e8:	pop    eax
  4048e9:	cmp    BYTE PTR [ecx-0x8c89c94],al
  4048ef:	dec    esi
  4048f0:	aad    0x94
  4048f2:	bound  eax,QWORD PTR [eax]
  4048f4:	fimul  WORD PTR gs:[edx]
  4048f7:	push   0x75
  4048f9:	fimul  WORD PTR [ebx]
  4048fb:	push   0xc0089475
  404900:	stos   BYTE PTR es:[edi],al
  404901:	push   ds
  404902:	in     al,0xfe
  404904:	stos   BYTE PTR es:[edi],al
  404905:	dec    eax
  404906:	loopne 0x404967
  404908:	mov    BYTE PTR [ebx+0x4bf08908],dl
  40490e:	dec    eax
  40490f:	je     0x40494e
  404911:	dec    ecx
  404912:	jge    0x404924
  404914:	mov    bl,dh
  404916:	add    al,0xff
  404918:	mov    al,ds:0x88f7e04b
  40491d:	dec    eax
  40491e:	test   DWORD PTR [ebx-0x782b783],0xd57e3d
  404928:	cmc    
  404929:	shl    BYTE PTR ss:[ebp-0x12],cl
  40492d:	dec    edx
  40492e:	mov    ebp,0xf74bcbec
  404933:	call   0x4836ad
  404938:	sub    ah,BYTE PTR [esi]
  40493a:	in     al,0xfe
	...
  404950:	sbb    cl,BYTE PTR [eax+eiz*8+0x69]
  404954:	pop    ss
  404955:	dec    esp
  404956:	test   DWORD PTR [ebx-0x3d3e97da],0x8b5d93b9
  404960:	or     DWORD PTR [edx],edx
  404962:	int3   
  404963:	in     al,dx
  404964:	or     ecx,DWORD PTR [edi+esi*8+0x53]
  404968:	or     ah,dh
  40496a:	add    al,0xff
  40496c:	mov    al,ds:0x6c256f3b
  404971:	ror    DWORD PTR [eax],1
  404973:	jmp    eax
  404975:	mov    DWORD PTR [ecx+0x41],eax
  404978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404979:	pop    ebx
  40497a:	push   edx
  40497b:	cmc    
  40497c:	jmp    0x882e:0x8cc0034b
  404983:	fimul  DWORD PTR [ebp+ebp*1-0x3fa8d4f5]
  40498a:	mov    edi,ebp
  40498c:	push   0x76
  40498e:	ret    
  40498f:	push   eax
  404990:	hlt    
  404991:	sub    DWORD PTR [eax+eax*1],ecx
  404994:	mov    ebp,ss
  404996:	cmp    ebx,ebp
  404998:	mov    WORD PTR ds:0xb19bbff6,gs
  40499e:	add    DWORD PTR [eax],0x4002d8c
  4049a4:	lea    ebp,ds:0x7b0b0f0b
  4049aa:	or     al,0x0
  4049ac:	mov    WORD PTR [eax-0x6a4303b7],gs
  4049b2:	push   edi
  4049b3:	jmp    0x4049b8
	...
  4049c8:	sbb    esp,DWORD PTR [esi]
  4049ca:	jo     0x404951
  4049cc:	and    ebp,DWORD PTR [edi]
  4049ce:	ret    0x5cff
  4049d1:	gs xor bh,ch
  4049d4:	add    ebx,DWORD PTR [esi-0xa]
  4049d7:	mov    edi,0x16532981
  4049dc:	inc    ebp
  4049dd:	ins    BYTE PTR es:[edi],dx
  4049de:	or     al,0x8d
  4049e0:	adc    DWORD PTR [esi-0x3f],eax
  4049e3:	jmp    ebx
  4049e5:	pushf  
  4049e6:	aam    0x89
  4049e8:	loope  0x4049cf
  4049ea:	sar    edi,0x59
  4049ed:	inc    ebp
  4049ee:	cmp    ebp,eax
  4049f0:	loopne 0x404a11
  4049f2:	ret    0xb7ff
  4049f5:	sub    eax,0xd88475c2
  4049fa:	mov    bh,ch
  4049fc:	mov    dl,0xd
  4049fe:	ret    0xb450
  404a01:	test   ecx,ebx
  404a03:	jmp    DWORD PTR [ebx-0x678a3c64]
  404a09:	pushf  
  404a0a:	aam    0x25
  404a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a0d:	xchg   ebx,eax
  404a0e:	outs   dx,BYTE PTR ds:[esi]
  404a0f:	retf   0x5497
  404a12:	fnsave [esi]
  404a14:	add    eax,0x5d
  404a17:	(bad)  [edx]
  404a19:	sub    al,0x46
  404a1b:	retf   0xd005
  404a1e:	dec    ecx
  404a1f:	xchg   cl,ch
  404a21:	cmp    al,0xe1
  404a23:	dec    edi
  404a24:	into   
  404a25:	pop    es
  404a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a27:	iret   
  404a28:	mov    esp,0xc7bc35
	...
  404a3d:	add    BYTE PTR [eax],al
  404a3f:	add    BYTE PTR [esp+esi*8+0x4b],ah
  404a43:	add    ecx,DWORD PTR [edi+ecx*1+0x357e4b21]
  404a4a:	xchg   esp,eax
  404a4b:	iret   
  404a4c:	and    al,0xc0
  404a4e:	and    eax,0x21898c03
  404a53:	dec    edi
  404a54:	jb     0x404a3a
  404a56:	test   BYTE PTR [edi+0x24],0x2d
  404a5a:	inc    edx
  404a5b:	aam    0x1b
  404a5d:	ss push 0xffffffab
  404a60:	mov    ah,0x35
  404a62:	push   esp
  404a63:	int3   
  404a64:	pop    edi
  404a65:	in     al,0xd9
  404a67:	mov    bh,0xfd
  404a69:	xor    eax,0x4081c9de
  404a6e:	leave  
  404a6f:	sub    edx,eax
  404a71:	xchg   esp,eax
  404a72:	loope  0x404af0
  404a74:	push   ecx
  404a75:	mov    BYTE PTR [esi-0x1efa1bb1],dh
  404a7b:	(bad)  [esi+0x43]
  404a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a7f:	leave  
  404a80:	sar    DWORD PTR [edi+0x2caddcad],cl
  404a86:	xchg   esi,eax
  404a87:	leave  
  404a88:	pop    ss
  404a89:	push   edx
  404a8a:	cmp    bh,BYTE PTR [ebx+0x2ee18cce]
  404a90:	pop    es
  404a91:	sub    DWORD PTR [esi],edx
  404a93:	jge    0x404abe
  404a95:	mov    WORD PTR [edx+0x8293af3],ds
  404a9b:	out    dx,eax
  404a9c:	sbb    ebp,ecx
  404a9e:	or     DWORD PTR [ecx-0x73],esp
  404aa1:	int    0x88
  404aa3:	add    BYTE PTR es:[eax],al
	...
  404ab6:	add    BYTE PTR [eax],al
  404ab8:	nop
  404ab9:	mov    edi,0xcdc4befd
  404abe:	mov    BYTE PTR [esi],dl
  404ac0:	mov    al,0xc0
  404ac2:	loop   0x404b2d
  404ac4:	test   DWORD PTR [edi+0x75104c7c],eax
  404aca:	add    dh,BYTE PTR [ebp-0x1fc8eb91]
  404ad0:	retf   
  404ad1:	pop    ecx
  404ad2:	sub    DWORD PTR [edi+edx*2+0x67f17d36],0x3c
  404ada:	shr    ecx,cl
  404adc:	(bad)  
  404add:	adc    eax,esi
  404adf:	jmp    0x8dc8b8c1
  404ae4:	xchg   DWORD PTR ds:0xb53a7d28,esi
  404aea:	je     0x404aad
  404aec:	push   esp
  404aed:	xchg   DWORD PTR [edi+eiz*8+0xf],edi
  404af1:	mov    eax,0xc111ee30
  404af6:	punpckhwd mm2,QWORD PTR [ebx+0x7c]
  404afa:	div    eax
  404afc:	push   edx
  404afd:	(bad)  
  404afe:	into   
  404aff:	sub    eax,0xc2083588
  404b04:	mov    DWORD PTR [ecx],ebp
  404b06:	or     dl,dl
  404b08:	and    edx,ebp
  404b0a:	shr    DWORD PTR [ebx+0x625c34e3],0xc3
  404b11:	adc    ah,cl
  404b13:	lds    ebx,FWORD PTR [eax-0x7c0acaef]
  404b19:	ror    DWORD PTR [eax],cl
  404b1b:	jmp    0x404b20
	...
  404b30:	push   ebx
  404b31:	mov    ds:0xc8bfd48b,al
  404b36:	dec    ecx
  404b37:	jmp    0x420bcb
  404b3c:	ss mov ?,eax
  404b3f:	dec    ebx
  404b40:	je     0x404ad2
  404b42:	or     BYTE PTR [ebp-0x56],dh
  404b45:	xchg   edi,eax
  404b46:	enter  0xec5b,0x4e
  404b4a:	add    BYTE PTR [eax],al
  404b4c:	sahf   
  404b4d:	add    edi,ecx
  404b4f:	inc    ebp
  404b50:	fst    DWORD PTR [edi-0x549afff8]
  404b56:	dec    ebp
  404b57:	clc    
  404b58:	xor    eax,0x3f087d5d
  404b5d:	cwde   
  404b5e:	not    DWORD PTR ds:0x496c71
  404b64:	outs   dx,BYTE PTR ds:[esi]
  404b65:	pop    eax
  404b66:	jl     0x404bc3
  404b68:	int    0x4e
  404b6a:	rol    DWORD PTR [eax],cl
  404b6c:	xor    eax,0xe88dd8b1
  404b71:	arpl   WORD PTR [eax+0x6a],bx
  404b74:	inc    ebp
  404b75:	push   0xfffffff7
  404b77:	adc    eax,0x49709d
  404b7c:	push   ds
  404b7d:	pop    eax
  404b7e:	jl     0x404ba9
  404b80:	push   0x72
  404b82:	in     al,dx
  404b83:	add    DWORD PTR ds:0x98ff0898,esp
  404b89:	pop    edi
  404b8a:	xchg   DWORD PTR [ebp-0x23],eax
  404b8d:	pop    ebx
  404b8e:	jge    0x404b8c
  404b90:	jb     0x404b67
  404b92:	in     al,0x83
	...
  404ba8:	pusha  
  404ba9:	sub    al,0xf7
  404bab:	jae    0x404b99
  404bad:	repnz dec esp
  404baf:	lock not DWORD PTR [edi+0x33be0008]
  404bb6:	into   
  404bb7:	inc    ebp
  404bb8:	adc    eax,0xe5000899
  404bbd:	int    0x8
  404bbf:	push   0xffffffb5
  404bc1:	int    0x18
  404bc3:	lea    ebp,[eax+0x34]
  404bc6:	pop    eax
  404bc7:	push   0xffffff8c
  404bc9:	cmp    eax,0x22b875ce
  404bce:	stc    
  404bcf:	addps  xmm7,XMMWORD PTR [esp+ecx*1+0xb]
  404bd4:	int3   
  404bd5:	sub    DWORD PTR [ebx+eax*2],ecx
  404bd8:	movaps xmm7,xmm0
  404bdb:	add    BYTE PTR [eax],bl
  404bdd:	xor    eax,0xc58075ce
  404be2:	icebp  
  404be3:	fimul  DWORD PTR [ebp+edi*1+0x74d7c372]
  404bea:	retf   0x8c08
  404bed:	call   0xf0ac3863
  404bf2:	repnz out 0x8b,eax
  404bf5:	jbe    0x404c03
  404bf7:	add    ah,cl
  404bf9:	or     eax,0x825c41d3
  404bfe:	iret   
  404bff:	push   eax
  404c00:	dec    ebx
  404c01:	adc    bl,dh
  404c03:	dec    edi
  404c04:	xor    al,0x29
  404c06:	mov    ds:0xb3e58c00,al
  404c0b:	ret    0x0
	...
  404c1e:	add    BYTE PTR [eax],al
  404c20:	mov    BYTE PTR ds:0xbe388b38,bh
  404c26:	enter  0xbffc,0xbe
  404c2a:	inc    ecx
  404c2b:	or     BYTE PTR [eax+esi*4+0x64c2af6],cl
  404c32:	mov    ah,0xc2
  404c34:	xchg   esp,eax
  404c35:	cmp    eax,0x3d76db12
  404c3a:	push   ecx
  404c3b:	add    BYTE PTR [esi+0x3d],ah
  404c3e:	push   ecx
  404c3f:	add    bl,dh
  404c41:	(bad)  
  404c42:	lock (bad) 
  404c44:	popa   
  404c45:	and    eax,0x3d760051
  404c4a:	shl    DWORD PTR [esi],cl
  404c4c:	mov    bh,0x3c
  404c4e:	or     ecx,DWORD PTR [ebx]
  404c50:	int3   
  404c51:	push   0x94518918
  404c56:	lods   eax,DWORD PTR ds:[esi]
  404c57:	(bad)  
  404c58:	cmp    DWORD PTR [eax],esi
  404c5a:	cdq    
  404c5b:	int    0xab
  404c5d:	xor    bl,BYTE PTR [esi-0x33580c06]
  404c63:	jp     0x404c29
  404c65:	mov    ebp,0x338c59e1
  404c6a:	cld    
  404c6b:	(bad)  
  404c6c:	aas    
  404c6d:	xor    esi,esp
  404c6f:	not    DWORD PTR [edx-0x73a61658]
  404c75:	mov    esi,0x4d96dbe1
  404c7a:	loope  0x404c7f
  404c7c:	xchg   DWORD PTR [esp+edx*8-0x5],edx
  404c80:	fidivr WORD PTR [ecx+ebx*4]
  404c83:	(bad)  
	...
  404c98:	imul   esi,DWORD PTR [edx],0x1a
  404c9b:	stos   DWORD PTR es:[edi],eax
  404c9c:	pop    ss
  404c9d:	push   esi
  404c9e:	stos   BYTE PTR es:[edi],al
  404c9f:	mov    esp,0x30e19d4e
  404ca4:	pop    es
  404ca5:	inc    ecx
  404ca6:	retf   
  404ca7:	(bad)  
  404ca8:	dec    ebx
  404ca9:	test   al,0xf9
  404cab:	fisttp DWORD PTR [ebx]
  404cad:	xor    dl,BYTE PTR [esi]
  404caf:	mov    BYTE PTR [ebp+0x57],0xe5
  404cb3:	add    ebx,ecx
  404cb5:	sbb    eax,0xa0a981f5
  404cba:	loope  0x404d0b
  404cbc:	mov    dl,BYTE PTR ds:0xa91bfb74
  404cc2:	out    0x1a,eax
  404cc4:	dec    esp
  404cc5:	pop    esp
  404cc6:	and    edi,ebx
  404cc8:	or     edi,DWORD PTR [ecx+eiz*8-0x295f863c]
  404ccf:	dec    edi
  404cd0:	test   BYTE PTR [edi+eiz*4],bh
  404cd3:	test   eax,0xc3ea948c
  404cd8:	pusha  
  404cd9:	test   BYTE PTR [eax+0x3c319057],dl
  404cdf:	clc    
  404ce0:	fisub  DWORD PTR [edi-0x1e481ef8]
  404ce6:	imul   DWORD PTR [esi+0x72103dd1]
  404cec:	and    DWORD PTR [eax-0x5827c6b8],0xffffffe7
  404cf3:	xchg   esi,eax
  404cf4:	leave  
  404cf5:	(bad)  
  404cf6:	not    DWORD PTR [esp+eiz*4]
  404cf9:	loope  0x404cf2
  404cfb:	cld    
	...
  404d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d11:	cmp    DWORD PTR [edi+0x5031d18e],edx
  404d17:	mov    al,ds:0x14089cce
  404d1c:	add    eax,0xbcbe5e41
  404d21:	adc    eax,0xa78ff175
  404d26:	add    DWORD PTR [edx],eax
  404d28:	dec    eax
  404d29:	int    0x57
  404d2b:	scas   eax,DWORD PTR es:[edi]
  404d2c:	es push esi
  404d2e:	add    cl,ch
  404d30:	in     al,0xd7
  404d32:	add    al,0x6a
  404d34:	jo     0x404cc9
  404d36:	add    ebp,DWORD PTR [ecx]
  404d38:	mov    esp,0x7529239b
  404d3d:	rcl    DWORD PTR [esi+0x30],1
  404d40:	dec    esi
  404d41:	pushf  
  404d42:	or     BYTE PTR [edx+0x73],dh
  404d45:	mov    al,ds:0x1e379c83
  404d4a:	test   BYTE PTR [edx],0xd5
  404d4d:	mov    edx,0x300fef83
  404d52:	cmp    BYTE PTR [ebx+0x15],bh
  404d55:	mov    cl,0xf4
  404d57:	mov    al,0xc0
  404d59:	xchg   edi,eax
  404d5a:	mov    ch,bh
  404d5c:	lahf   
  404d5d:	cmp    eax,0xd2cb6925
  404d62:	jp     0x404d50
  404d64:	wrmsr  
  404d66:	dec    esi
  404d67:	pop    esi
  404d68:	lock mov al,0xe4
  404d6b:	sub    BYTE PTR [eax],dl
  404d6d:	pop    eax
  404d6e:	add    al,BYTE PTR [eax]
  404d70:	mov    esi,0xfc773b
	...
  404d85:	add    BYTE PTR [eax],al
  404d87:	add    BYTE PTR [esi+eax*8+0x5],al
  404d8b:	sbb    BYTE PTR [ecx],0xcf
  404d8e:	jg     0x404d98
  404d90:	xor    eax,0xf1806949
  404d95:	sub    ah,dl
  404d97:	or     esi,ebx
  404d99:	push   esp
  404d9a:	push   ebx
  404d9b:	pop    edi
  404d9c:	jnp    0x404d8b
  404d9e:	leave  
  404d9f:	or     BYTE PTR [ebp-0x628dc768],dh
  404da5:	cwde   
  404da6:	xor    DWORD PTR [edi-0x4f],esi
  404da9:	mov    BYTE PTR [eax],bh
  404dab:	jmp    0x404d6d
  404dad:	cwde   
  404dae:	dec    ecx
  404daf:	jb     0x404e20
  404db1:	cwde   
  404db2:	dec    esi
  404db3:	ja     0x404e28
  404db5:	mov    BYTE PTR [ecx+0x4],cl
  404db8:	jg     0x404e07
  404dba:	pop    ds
  404dbb:	cmp    al,0x44
  404dbd:	mov    BYTE PTR [edx],0x3c
  404dc0:	push   ebx
  404dc1:	loope  0x404dd1
  404dc3:	sub    al,0x54
  404dc5:	xor    BYTE PTR [ecx],al
  404dc7:	jmp    0x404e25
  404dc9:	(bad)  
  404dca:	enter  0xfa5b,0x79
  404dce:	rol    edx,0x2d
  404dd1:	xchg   esp,eax
  404dd2:	enter  0x31e0,0x2e
  404dd6:	retf   
  404dd7:	stos   BYTE PTR es:[edi],al
  404dd8:	(bad)  
  404dd9:	ins    BYTE PTR es:[edi],dx
  404dda:	mov    eax,esi
  404ddc:	daa    
  404ddd:	sub    eax,0x1bb475d2
  404de2:	or     DWORD PTR [eax],eax
  404de4:	xor    eax,0xfb5f5394
  404de9:	jmp    0x0:0x8c9
	...
  404e00:	and    eax,0x1d505b81
  404e05:	int3   
  404e06:	pop    ss
  404e07:	sub    dh,BYTE PTR [ebp-0x1b8d0f68]
  404e0d:	push   esi
  404e0e:	idiv   DWORD PTR [ebx+0xb3c8c]
  404e14:	mov    WORD PTR [esi],ds
  404e16:	mov    ch,0x4d
  404e18:	dec    ebp
  404e19:	cmp    eax,0x45430125
  404e1e:	dec    edx
  404e1f:	std    
  404e20:	shl    esi,cl
  404e22:	out    dx,al
  404e23:	xlat   BYTE PTR ds:[ebx]
  404e24:	enter  0xcb2a,0xb9
  404e28:	ret    
  404e29:	test   dl,0xff
  404e2c:	mov    esi,0x3906f4df
  404e31:	adc    eax,0x7e47c387
  404e36:	iret   
  404e37:	push   ebp
  404e38:	pop    ss
  404e39:	or     cl,BYTE PTR [edi+0x5c8a9cc4]
  404e3f:	pop    eax
  404e40:	and    al,0x84
  404e42:	out    0x3f,al
  404e44:	mov    WORD PTR [ebp-0x49b0fec2],fs
  404e4a:	(bad)  
  404e4b:	cmp    eax,0x4be274
  404e50:	mov    WORD PTR [ecx+0x1d],ss
  404e53:	sub    DWORD PTR [ecx-0x73beb8c3],0x3d
  404e5a:	aas    
  404e5b:	or     DWORD PTR [edi],ecx
  404e5d:	xor    BYTE PTR [edi],cl
  404e5f:	dec    esp
  404e60:	int    0x3d
  404e62:	or     esi,DWORD PTR [ebp+0x0]
	...
  404e75:	add    BYTE PTR [eax],al
  404e77:	add    BYTE PTR [ecx+0x555bcc92],dl
  404e7d:	jp     0x404e66
  404e7f:	fisub  DWORD PTR [ebx+ebx*1]
  404e82:	aam    0x0
  404e84:	mov    WORD PTR [eax+0x13befc51],?
  404e8a:	add    edx,DWORD PTR [eax+0x23]
  404e8d:	push   eax
  404e8e:	mov    bl,0x4b
  404e90:	int    0x3d
  404e92:	push   es
  404e93:	rol    BYTE PTR [ebx-0x73ff633f],0x3d
  404e9a:	ret    0x445
  404e9d:	xchg   esp,eax
  404e9e:	loope  0x404ea3
  404ea0:	mov    WORD PTR [esp+eiz*2+0x4bc3f448],ss
  404ea7:	add    al,0x76
  404ea9:	xchg   esp,eax
  404eaa:	dec    ebx
  404eab:	add    eax,0xc2cda8e3
  404eb0:	adc    DWORD PTR [ebp+eiz*1-0x5e6473bb],0xff3c3638
  404ebb:	fmul   QWORD PTR [esp+edx*4-0x56c9449e]
  404ec2:	add    DWORD PTR [edi+0x37e12c31],eax
  404ec8:	inc    esi
  404ec9:	das    
  404eca:	sbb    al,0xbc
  404ecc:	mov    ah,0x3f
  404ece:	pushf  
  404ecf:	ret    0x1c9b
  404ed2:	sub    al,0xb8
  404ed4:	add    ecx,ebx
  404ed6:	jns    0x404f2b
  404ed8:	mov    ebp,DWORD PTR [eax+0xc279]
	...
  404eee:	add    BYTE PTR [eax],al
  404ef0:	stc    
  404ef1:	sub    bl,bl
  404ef3:	add    al,0x7b
  404ef5:	test   al,0x55
  404ef7:	ret    0x9499
  404efa:	lods   eax,DWORD PTR ds:[esi]
  404efb:	inc    esp
  404efc:	mov    WORD PTR [ecx+0x19b23721],ds
  404f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f03:	mov    bh,0x7
  404f05:	test   DWORD PTR [eax+ecx*2+0x5c],esp
  404f09:	lds    edx,FWORD PTR [ebx-0x6a675e3e]
  404f0f:	inc    esp
  404f10:	mov    WORD PTR [ecx-0x4369c8df],ds
  404f16:	add    eax,0x1e94cd50
  404f1b:	cmp    BYTE PTR [edi*1-0x6b73250b],bl
  404f22:	cli    
  404f23:	ret    
  404f24:	mov    eax,ds:0x99c2a293
  404f29:	and    al,0x8
  404f2b:	add    edx,eax
  404f2d:	dec    esp
  404f2e:	or     cl,ch
  404f30:	into   
  404f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f32:	cld    
  404f33:	rcl    DWORD PTR [ecx],1
  404f35:	inc    eax
  404f36:	neg    esi
  404f38:	int    0xa7
  404f3a:	hlt    
  404f3b:	rcl    DWORD PTR [ebx+0x4c],0x8
  404f3f:	jmp    0xb093a154
  404f44:	rol    edi,1
  404f46:	or     ebp,0xf
  404f49:	pop    ecx
  404f4a:	enter  0xcdb7,0x2d
  404f4e:	pop    ebx
  404f4f:	sbb    DWORD PTR [eax-0x44],esp
  404f52:	dec    eax
  404f53:	rol    BYTE PTR [eax],cl
	...
  404f65:	add    BYTE PTR [eax],al
  404f67:	add    BYTE PTR [edi-0x6c],cl
  404f6a:	lock sbb ecx,DWORD PTR [edi-0x549508af]
  404f71:	jmp    0x94c877b8
  404f76:	jl     0x404f5a
  404f78:	adc    BYTE PTR [eax-0x38],dh
  404f7b:	xor    cl,BYTE PTR [edi-0x6c]
  404f7e:	or     ch,bh
  404f80:	mov    eax,ds:0xd1713511
  404f85:	ror    DWORD PTR [eax],cl
  404f87:	jmp    0x1ccbeb4f
  404f8c:	dec    esp
  404f8d:	(bad)  [ecx-0x17]
  404f90:	(bad)  
  404f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f92:	or     eax,0xc1c94802
  404f97:	sub    ch,BYTE PTR [ecx+0x4a]
  404f9a:	not    esp
  404f9c:	rcr    ecx,cl
  404f9e:	dec    ecx
  404f9f:	jmp    0x273d26ba
  404fa4:	or     esp,DWORD PTR [eax-0xa]
  404fa7:	es dec ebp
  404fa9:	jl     0x404fb4
  404fab:	jmp    0x83490a3f
  404fb0:	xchg   ecx,eax
  404fb1:	cmp    al,0x7b
  404fb3:	xor    DWORD PTR [eax-0x72ff746c],ecx
  404fb9:	push   ebx
  404fba:	pop    es
  404fbb:	test   BYTE PTR [ebx],dh
  404fbd:	xchg   edx,eax
  404fbe:	or     BYTE PTR [eax],al
  404fc0:	ins    BYTE PTR es:[edi],dx
  404fc1:	adc    eax,0x53f2fec0
  404fc6:	test   DWORD PTR [ebp-0x8acbf],eax
	...
  404fe0:	mov    ch,0x53
  404fe2:	mov    ebp,0xf753c3c8
  404fe7:	call   0x48a089
  404fec:	ficom  WORD PTR [eax+0x7]
  404fef:	test   BYTE PTR [esi],dl
  404ff1:	xchg   ecx,eax
  404ff2:	or     BYTE PTR [eax],al
  404ff4:	dec    ebp
  404ff5:	xor    eax,DWORD PTR [ebp+0x41]
  404ff8:	mov    ch,0x1d
  404ffa:	(bad)  
  404ffb:	lock repz push ebx
  404ffe:	not    DWORD PTR [eax+0x1d]
  405001:	enter  0xd1,0xb5
  405005:	lahf   
  405006:	enter  0x290f,0x58
  40500a:	or     BYTE PTR [eax],al
  40500c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40500d:	pop    ebx
  40500e:	(bad)  
  40500f:	les    edx,FWORD PTR [ebx]
  405011:	push   esp
  405012:	test   DWORD PTR [eax],0x8d089875
  405018:	call   0xf3404670
  40501d:	(bad)  
  40501e:	div    DWORD PTR [ebp-0x8aa47]
  405024:	ret    0xc882
  405027:	dec    ebx
  405028:	xor    al,0x98
  40502a:	adc    DWORD PTR [ebp-0x8aa57],0x5e
  405031:	pop    eax
  405032:	pop    es
  405033:	test   ch,bl
  405035:	xchg   edi,eax
  405036:	or     BYTE PTR [eax],al
  405038:	ds ret 
  40503a:	cld    
  40503b:	push   gs
  40503d:	add    al,0x8
  40503f:	add    BYTE PTR ds:0xd4bd55,ah
	...
  405055:	add    BYTE PTR [eax],al
  405057:	add    BYTE PTR [ebx+eax*4+0x3db6ffc8],cl
  40505e:	and    eax,DWORD PTR [eax]
  405060:	mov    WORD PTR ds:0x831be80d,?
  405066:	or     eax,DWORD PTR [eax]
  405068:	xchg   edi,eax
  405069:	jge    0x4050aa
  40506b:	jns    0x405082
  40506d:	icebp  
  40506e:	mov    dl,0x8d
  405070:	push   ecx
  405071:	xor    DWORD PTR [eax+ebp*2-0x19],ebx
  405075:	cmp    al,0x9
  405077:	add    bl,ch
  405079:	enter  0xffb4,0x79
  40507d:	inc    ebp
  40507e:	inc    ebx
  40507f:	inc    ecx
  405080:	mov    WORD PTR [esi],fs
  405082:	retf   
  405083:	je     0x4050b9
  405085:	jmp    0x4bb7:0x48cbfc30
  40508c:	dec    ebp
  40508d:	cmp    eax,0x3440c002
  405092:	dec    edx
  405093:	(bad)  
  405094:	or     esi,edi
  405096:	mov    ch,0xff
  405098:	stos   DWORD PTR es:[edi],eax
  405099:	cmp    eax,0xc88c000b
  40509e:	add    eax,0x50b7129a
  4050a4:	and    al,0xea
  4050a6:	or     cl,BYTE PTR [edi]
  4050a8:	mov    WORD PTR ds:0x3d8cd893,ss
  4050ae:	add    al,al
  4050b0:	add    DWORD PTR [ecx],ebp
  4050b2:	mov    bh,BYTE PTR [ebp-0x4834b4]
  4050b8:	mov    WORD PTR [ecx+0x7],cs
  4050bb:	inc    DWORD PTR [eax]
	...
  4050cd:	add    BYTE PTR [eax],al
  4050cf:	add    BYTE PTR [ecx],bl
  4050d1:	jge    0x405089
  4050d3:	call   FWORD PTR [ebx-0x5e]
  4050d6:	add    DWORD PTR [edx],edi
  4050d8:	(bad)  
  4050db:	jmp    0x40515c
  4050dd:	(bad)  
  4050de:	adc    bh,bh
  4050e0:	mov    ecx,0x62f0a479
  4050e5:	xchg   esp,eax
  4050e6:	loope  0x4050eb
  4050e8:	xor    esp,DWORD PTR [ecx+0x4234ac29]
  4050ee:	loope  0x4050f3
  4050f0:	aaa    
  4050f1:	pushf  
  4050f2:	push   es
  4050f3:	cmp    DWORD PTR [esp+edi*1],edx
  4050f6:	das    
  4050f7:	(bad)  
  4050f8:	mov    WORD PTR [esp+eiz*2-0x1d62777],ss
  4050ff:	mov    esi,0xcc3c2b5c
  405104:	cli    
  405105:	sub    ch,dh
  405107:	stos   DWORD PTR es:[edi],eax
  405108:	bound  eax,QWORD PTR [ebx-0x1f]
  40510b:	add    esi,ebp
  40510d:	nop
  40510e:	fidivr WORD PTR [esi-0x3463d51d]
  405114:	fisubr DWORD PTR [edx]
  405116:	into   
  405117:	stos   DWORD PTR es:[edi],eax
  405118:	adc    BYTE PTR [edx-0x1f],al
  40511b:	add    edx,DWORD PTR [edi]
  40511d:	push   edi
  40511e:	sbb    cl,ch
  405120:	iret   
  405121:	shr    BYTE PTR [edx-0x51],0xf
  405125:	push   eax
  405126:	popf   
  405127:	push   ebx
  405128:	pop    edi
  405129:	lds    esi,FWORD PTR [ebx]
  40512b:	push   edi
  40512c:	inc    edx
  40512d:	pop    ds
  40512e:	and    al,0x10
  405130:	adc    DWORD PTR [ecx+eiz*2],ebx
  405133:	add    eax,DWORD PTR [eax]
	...
  405145:	add    BYTE PTR [eax],al
  405147:	add    BYTE PTR [esp+edx*4-0x6c36e884],cl
  40514e:	loope  0x405153
  405150:	mov    WORD PTR ds:0x54548a99,ds
  405156:	mov    DWORD PTR ds:0x8a5dd005,eax
  40515c:	icebp  
  40515d:	pushf  
  40515e:	loop   0x40511c
  405160:	push   edx
  405161:	xchg   edx,eax
  405162:	popa   
  405163:	sub    BYTE PTR [edi+0x6a],0xa
  405167:	mov    ebx,0x32092e0f
  40516c:	adc    BYTE PTR [ebp-0x6b3384b6],0x8
  405173:	jmp    0xeb0bcf07
  405178:	imul   DWORD PTR [ecx]
  40517a:	dec    ebp
  40517b:	adc    eax,0x6c30c200
  405180:	fs and al,0xcf
  405183:	out    dx,eax
  405184:	mov    BYTE PTR [ebp+0x4d],dh
  405187:	xchg   BYTE PTR [edx-0x2d],dl
  40518a:	or     al,0x70
  40518c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40518d:	push   edi
  40518e:	out    0x26,eax
  405190:	push   ecx
  405191:	pushf  
  405192:	not    BYTE PTR ds:0xa7cf0c85
  405198:	mov    esp,DWORD PTR [edx+0x29981b5c]
  40519e:	jge    0x40516d
  4051a0:	sub    DWORD PTR [eax+0x244b6400],esp
  4051a6:	pop    eax
  4051a7:	rol    DWORD PTR [ebx+0xe90894],0x0
	...
  4051be:	add    BYTE PTR [eax],al
  4051c0:	adc    ebp,esp
  4051c2:	or     ebp,ecx
  4051c4:	(bad)  
  4051c5:	xchg   esp,eax
  4051c6:	xor    DWORD PTR [eax+ebx*4],0x25
  4051ca:	lods   eax,DWORD PTR ds:[esi]
  4051cb:	mulps  xmm1,xmm6
  4051ce:	push   ecx
  4051cf:	inc    edx
  4051d0:	push   eax
  4051d1:	pop    ebx
  4051d2:	retf   0x8fed
  4051d5:	mov    edi,0x510d8583
  4051da:	hlt    
  4051db:	aaa    
  4051dc:	inc    ecx
  4051dd:	les    ebx,FWORD PTR [ebx+0x18]
  4051e0:	ds sbb eax,0xa714ed7d
  4051e6:	add    BYTE PTR [edx-0x35],ah
  4051e9:	test   BYTE PTR [ecx+0xf1d4c24],al
  4051ef:	jb     0x4051c2
  4051f1:	nop
  4051f2:	sub    DWORD PTR [esi-0x1aa0e269],0x14
  4051f9:	sub    edi,DWORD PTR [ebx]
  4051fb:	push   ebx
  4051fc:	ins    DWORD PTR es:[edi],dx
  4051fd:	cmp    eax,DWORD PTR cs:[eax]
  405200:	iret   
  405201:	sbb    DWORD PTR [edi+eax*1-0x289d4eb3],ecx
  405208:	(bad)
  40520d:	xchg   esp,eax
  40520e:	retf   
  40520f:	mov    ebp,DWORD PTR [esi+0x23]
  405212:	lock and ebp,DWORD PTR [ebp+0x23]
  405216:	lock lea esp,[ecx+0x72b75e7f]
  40521d:	clc    
  40521e:	or     dl,BYTE PTR [esi+0x21]
  405221:	push   esi
  405222:	retf   0xc
	...
  405235:	add    BYTE PTR [eax],al
  405237:	add    dh,dh
  405239:	inc    esp
  40523a:	cmp    eax,0x46
  40523d:	in     al,dx
  40523e:	sub    bh,dl
  405240:	ss in  al,dx
  405242:	test   BYTE PTR [edx+edi*8-0x6edf87b5],cl
  405249:	xchg   ebx,eax
  40524a:	inc    esi
  40524b:	or     BYTE PTR [esi+edx*2],dh
  40524e:	sbb    DWORD PTR [ebx],eax
  405250:	das    
  405251:	sbb    al,0xf2
  405253:	xor    ecx,ebp
  405255:	xor    esi,eax
  405257:	xor    ecx,ebp
  405259:	sbb    DWORD PTR [edi+ebx*1-0x3e4aa935],edx
  405260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405261:	mov    BYTE PTR [ecx+eax*8],0xe6
  405265:	jle    0x405272
  405267:	fstp   DWORD PTR [esi]
  405269:	out    dx,al
  40526a:	cmp    bh,dl
  40526c:	(bad)  
  40526d:	jmp    0x4052a9
  40526f:	cli    
  405270:	cmp    BYTE PTR [ecx],dl
  405272:	imul   ebx,DWORD PTR [edx-0x4cfc0298]
  405279:	or     cl,0xc0
  40527c:	jb     0x405213
  40527e:	retf   
  40527f:	mov    edi,esi
  405281:	and    al,0xf0
  405283:	and    ebp,ebp
  405285:	and    al,0xf0
  405287:	(bad)  
  405288:	loope  0x40520a
  40528a:	and    al,dh
  40528c:	mov    WORD PTR [esi+0x21c2034c],?
  405292:	retf   0x80c2
  405295:	cmp    bl,bl
  405297:	mov    eax,DWORD PTR [ebx+ebp*1-0x50]
  40529b:	and    eax,DWORD PTR [eax]
	...
  4052ad:	add    BYTE PTR [eax],al
  4052af:	add    BYTE PTR [esi+0x2b],al
  4052b2:	mov    al,0x8d
  4052b4:	or     BYTE PTR [edi+0x18],al
  4052b7:	inc    esi
  4052b8:	jl     0x40527f
  4052ba:	or     BYTE PTR [esi-0x7c],cl
  4052bd:	jl     0x405289
  4052bf:	adc    DWORD PTR [edi+0x5ffa8073],ecx
  4052c5:	test   eax,ebp
  4052c7:	clc    
  4052c8:	pop    edi
  4052c9:	xchg   ebp,eax
  4052ca:	xchg   BYTE PTR [ebx+ebp*4+0x1469e3c],bl
  4052d1:	cmp    edx,DWORD PTR [ebp+0x1c]
  4052d4:	int    0x7a
  4052d6:	sbb    eax,0xb5a2d503
  4052db:	xor    esp,esi
  4052dd:	call   0x788:0xb0e633b7
  4052e4:	mov    ah,0xa5
  4052e6:	mov    WORD PTR [ecx-0x71],gs
  4052e9:	ja     0x4052d7
  4052eb:	ror    ah,0x2e
  4052ee:	push   cs
  4052ef:	ret    
  4052f0:	pop    ss
  4052f1:	jecxz  0x4052f1
  4052f3:	clc    
  4052f4:	outs   dx,DWORD PTR ds:[esi]
  4052f5:	in     eax,0xfe
  4052f7:	clc    
  4052f8:	add    DWORD PTR [edx+0x71a3af1b],ebp
  4052fe:	xchg   DWORD PTR [ebx],eax
  405300:	cmp    bl,BYTE PTR [ecx-0x34]
  405303:	ret    0x3a88
  405306:	fisttp DWORD PTR [ebx+0x23b5ea94]
  40530c:	xchg   dl,ch
  40530e:	mov    ch,0x8d
  405310:	adc    BYTE PTR [esi],ch
  405312:	jl     0x40536f
	...
  405328:	jnp    0x4052e0
  40532a:	cmovle esp,DWORD PTR [esp+edx*4-0x6c823ae0]
  405332:	cmp    ecx,DWORD PTR [edi-0x18a69c9a]
  405338:	push   esp
  405339:	arpl   WORD PTR [ecx-0x77],bx
  40533c:	lock xchg BYTE PTR [edi-0x1de2172d],cl
  405343:	pop    ecx
  405344:	jo     0x40539b
  405346:	and    dl,BYTE PTR [edx]
  405348:	(bad)  
  405349:	dec    ebp
  40534a:	push   0xffffffbd
  40534c:	jg     0x405378
  40534e:	ret    0x5fbe
  405351:	sub    ah,BYTE PTR [eax+eax*4-0x75]
  405355:	jb     0x405347
  405357:	xchg   ebx,eax
  405358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405359:	xchg   ebx,eax
  40535a:	scas   eax,DWORD PTR es:[edi]
  40535b:	repz dec esp
  40535d:	push   esp
  40535e:	out    0x6,al
  405360:	iret   
  405361:	sbb    cl,BYTE PTR [edx]
  405363:	test   DWORD PTR [ebx+esi*2],0x18f4f6f9
  40536a:	pop    ebp
  40536b:	adc    ebx,DWORD PTR [edi]
  40536d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40536e:	mov    DWORD PTR [eax-0x3ae24171],edi
  405374:	into   
  405375:	xchg   edi,eax
  405376:	loop   0x40534b
  405378:	pop    es
  405379:	sub    al,0x12
  40537b:	mov    edi,0xbef22aaf
  405380:	sbb    DWORD PTR [eax],ebx
  405382:	out    0x89,al
  405384:	dec    edi
  405385:	lods   eax,DWORD PTR ds:[esi]
  405386:	xchg   DWORD PTR [esi],eax
  405388:	dec    edx
  405389:	ins    BYTE PTR es:[edi],dx
  40538a:	mov    al,ds:0xc4
	...
  40539f:	add    BYTE PTR [ebp-0x5971446d],bl
  4053a5:	bound  ebp,QWORD PTR [ecx-0x669d5b1a]
  4053ab:	mov    al,bh
  4053ad:	xchg   al,al
  4053af:	or     ebx,eax
  4053b1:	fsubr  st(2),st
  4053b3:	pop    ecx
  4053b4:	enter  0xa253,0x11
  4053b8:	(bad)  
  4053b9:	dec    ebx
  4053ba:	or     BYTE PTR [edx+0x38],ah
  4053bd:	(bad)  
  4053bf:	retf   0x6231
  4053c2:	icebp  
  4053c3:	je     0x4053b0
  4053c5:	lea    ebp,[edx+0x4]
  4053c8:	xchg   BYTE PTR [esi],bl
  4053ca:	or     ebp,DWORD PTR [edi-0x1b37aaa5]
  4053d0:	mov    dl,BYTE PTR [ecx-0x7d]
  4053d3:	inc    edx
  4053d4:	inc    edx
  4053d5:	push   ds
  4053d6:	sub    eax,DWORD PTR [eax+0x3a]
  4053d9:	sub    eax,DWORD PTR [ebp-0x442b61a3]
  4053df:	test   eax,0x15e924f
  4053e4:	push   ecx
  4053e5:	push   ebx
  4053e6:	add    edx,ebp
  4053e8:	aas    
  4053e9:	sbb    dh,al
  4053eb:	fcmovu st,st(1)
  4053ed:	jno    0x4053e2
  4053ef:	fcmovbe st,st(7)
  4053f1:	pop    ss
  4053f2:	test   dh,dh
  4053f4:	pusha  
  4053f5:	retf   0xc756
  4053f8:	mov    dl,dh
  4053fa:	and    al,0x28
  4053fc:	rcl    BYTE PTR [esi+0x2b02230b],1
  405402:	cmp    esp,eax
	...
  405418:	icebp  
  405419:	sbb    eax,0x90be33b
  40541e:	pop    ss
  40541f:	or     ebp,0xffffffde
  405422:	loopne 0x40540e
  405424:	jne    0x405479
  405426:	retf   
  405427:	fst    QWORD PTR [eax-0x463f7cb5]
  40542d:	sub    ch,BYTE PTR [ebx]
  40542f:	mov    bl,0xc1
  405431:	sub    al,0x85
  405433:	gs (bad) 
  405435:	(bad)  
  405436:	sbb    dh,dl
  405438:	mov    ebp,0xcef54e91
  40543d:	push   esp
  40543e:	or     eax,0xf319d0ea
  405443:	fcmovbe st,st(7)
  405445:	jno    0x405438
  405447:	add    BYTE PTR [esi-0x18],al
  40544a:	test   BYTE PTR [edx+ebx*2+0x67441cc0],dl
  405451:	nop
  405452:	pop    esi
  405453:	sub    BYTE PTR [esi+ecx*2],ah
  405456:	add    DWORD PTR [ebx],eax
  405458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405459:	pop    ss
  40545a:	lock xor ebp,edi
  40545d:	das    
  40545e:	repnz xor edi,DWORD PTR [ebp-0x1bf07bf3]
  405465:	repnz test al,0xd8
  405468:	(bad)  ss:[ecx+eax*8]
  40546c:	je     0x405408
  40546e:	or     ecx,edx
  405470:	scas   al,BYTE PTR es:[edi]
  405471:	out    0x3a,al
  405473:	stc    
  405474:	xchg   al,ch
  405476:	cmp    bh,dl
  405478:	mov    al,ds:0xc8170c
	...
  40548d:	add    BYTE PTR [eax],al
  40548f:	add    BYTE PTR [esi+0x3f],ch
  405492:	out    dx,eax
  405493:	add    esp,ebx
  405495:	or     cl,0xc3
  405498:	sbb    DWORD PTR [eax+0x1f8c8bd1],edx
  40549e:	repnz and ecx,DWORD PTR [edi+0x698df01f]
  4054a5:	xchg   ebx,eax
  4054a6:	out    dx,al
  4054a7:	int    0x84
  4054a9:	xor    DWORD PTR [edx],ecx
  4054ab:	inc    esi
  4054ac:	cdq    
  4054ad:	push   ecx
  4054ae:	enter  0xf605,0x4f
  4054b2:	cmp    ebx,0x76
  4054b5:	call   0xe7b74de4
  4054ba:	test   BYTE PTR [edx+ebp*8-0x9c8f0be],dl
  4054c1:	(bad)  
  4054c2:	pop    esi
  4054c3:	cmp    ah,ah
  4054c5:	dec    esi
  4054c6:	add    DWORD PTR [ebx],eax
  4054c8:	adc    eax,0xef33f018
  4054cd:	das    
  4054ce:	repnz xor ebp,ebp
  4054d1:	or     eax,0xb68c0f84
  4054d6:	push   cs
  4054d7:	aad    0x98
  4054d9:	cmp    DWORD PTR [ecx+0xc],eax
  4054dc:	dec    ebp
  4054dd:	in     eax,dx
  4054de:	add    BYTE PTR [ebx],al
  4054e0:	push   esi
  4054e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e2:	mov    ch,0x33
  4054e4:	jne    0x405535
  4054e6:	mov    bl,0x33
  4054e8:	jbe    0x4054ab
  4054ea:	lahf   
  4054eb:	pop    ds
  4054ec:	jns    0x405510
  4054ee:	push   ebp
  4054ef:	inc    ebp
  4054f0:	(bad)  
  4054f1:	jecxz  0x4054dd
  4054f3:	rol    BYTE PTR [eax],0x0
	...
  405506:	add    BYTE PTR [eax],al
  405508:	dec    edi
  405509:	and    cl,BYTE PTR [ecx+ebx*8]
  40550c:	pop    es
  40550d:	(bad)  
  405510:	outs   dx,DWORD PTR ds:[esi]
  405511:	xlat   BYTE PTR ds:[ebx]
  405512:	cld    
  405513:	clc    
  405514:	adc    DWORD PTR [edx-0x30dafaf8],edi
  40551a:	bound  eax,QWORD PTR [ebx]
  40551c:	retf   0xca29
  40551f:	rcl    BYTE PTR [ecx+0x278bcc2e],0x3f
  405526:	mov    bl,0x23
  405528:	adc    eax,0xf88db43f
  40552d:	sub    dh,BYTE PTR [ebx+0xc99fba3]
  405533:	push   esi
  405534:	xchg   esp,eax
  405535:	ins    BYTE PTR es:[edi],dx
  405536:	int    0x9
  405538:	(bad)  
  405539:	jge    0x4054bf
  40553b:	clc    
  40553c:	mov    edi,0x9ffaeb27
  405541:	xor    eax,0x54938c81
  405546:	or     ch,BYTE PTR [edi+0x73]
  405549:	cs dec ebp
  40554b:	sbb    al,0xcd
  40554d:	in     al,dx
  40554e:	or     eax,0xb2a6d603
  405553:	xor    eax,ebp
  405555:	mov    ?,WORD PTR [ebx+esi*1+0x1f90b8b6]
  40555c:	push   es
  40555d:	and    dl,0x8c
  405560:	(bad)  
  405561:	xchg   esp,eax
  405562:	dec    edi
  405563:	hlt    
  405564:	int3   
  405565:	push   edi
  405566:	std    
  405567:	add    dh,BYTE PTR [ebp+0xf3980f]
	...
  40557d:	add    BYTE PTR [eax],al
  40557f:	add    BYTE PTR [ebp+0x10899a67],dl
  405585:	fwait
  405586:	and    edi,ebp
  405588:	test   DWORD PTR [ebx],esp
  40558a:	loop   0x4055c9
  40558c:	mov    al,ds:0x8f00a155
  405591:	push   edi
  405592:	push   0xffffffbb
  405594:	lahf   
  405595:	sbb    eax,0x811bc12
  40559a:	inc    BYTE PTR [edx+eiz*2-0x45fc995b]
  4055a1:	je     0x4055c3
  4055a3:	ret    0x9797
  4055a6:	adc    DWORD PTR [ebx-0xcb598bc],ecx
  4055ac:	xor    eax,0x6e076d11
  4055b1:	mov    ch,0x44
  4055b3:	sub    DWORD PTR [edi+0x4dc4ddd2],ecx
  4055b9:	test   dl,ah
  4055bb:	leave  
  4055bc:	pop    es
  4055bd:	push   ds
  4055be:	sar    BYTE PTR [ebx-0x67abe2a1],cl
  4055c4:	stos   DWORD PTR es:[edi],eax
  4055c5:	nop
  4055c6:	leave  
  4055c7:	mov    al,ds:0xfb979701
  4055cc:	int3   
  4055cd:	push   esi
  4055ce:	(bad)  
  4055cf:	add    dl,ch
  4055d1:	push   cs
  4055d2:	clc    
  4055d3:	repnz in eax,0x66
  4055d6:	jmp    0x1aaa:0x2d9b0888
  4055dd:	clc    
  4055de:	loope  0x40561d
  4055e0:	mov    BYTE PTR [ebp-0x5f],dl
  4055e3:	inc    DWORD PTR [eax]
	...
  4055f5:	add    BYTE PTR [eax],al
  4055f7:	add    BYTE PTR [esi+0x7fba7a57],cl
  4055fd:	sbb    eax,0x809bbf2
  405602:	or     dh,bl
  405604:	and    BYTE PTR [ebx-0x2a],dl
  405607:	and    cl,BYTE PTR [edi-0x3257e736]
  40560d:	mov    cs,WORD PTR [ebx]
  40560f:	mov    ecx,0x923b1c06
  405614:	sahf   
  405615:	sbb    al,0x85
  405617:	pop    ebp
  405618:	xchg   edx,eax
  405619:	mov    ah,0x43
  40561b:	inc    edx
  40561c:	xor    DWORD PTR [esi+0x5450dd46],edx
  405622:	sbb    dl,ch
  405624:	inc    ebp
  405625:	push   cs
  405626:	repnz mov edx,0x74f16627
  40562c:	sti    
  40562d:	cmp    DWORD PTR [eax-0x63],0xb70ae2e2
  405634:	addr16 push ebp
  405636:	retf   
  405637:	test   BYTE PTR [esi+0x3e40833b],0x1c
  40563e:	cmp    eax,DWORD PTR [edx+0x4]
  405641:	sbb    DWORD PTR [edi],ecx
  405643:	das    
  405644:	jns    0x405643
  405646:	pop    ds
  405647:	jmp    0x9723:0x29c96869
  40564e:	retf   
  40564f:	jb     0x405627
  405651:	gs icebp 
  405653:	fcmovbe st,st(7)
  405655:	setl   dh
  405658:	inc    ebp
  405659:	jp     0x405604
  40565b:	adc    eax,DWORD PTR [eax]
	...
  40566d:	add    BYTE PTR [eax],al
  40566f:	add    BYTE PTR [esi-0x79d43676],cl
  405675:	xchg   ebp,eax
  405676:	fsub   DWORD PTR [edx+0x37]
  405679:	repz mov dx,0x1025
  40567e:	test   dh,dh
  405680:	bound  esp,QWORD PTR [edi+eiz*8-0x4b]
  405684:	(bad)  
  405685:	rol    BYTE PTR [eax+ebp*4],cl
  405688:	iret   
  405689:	test   BYTE PTR [ebx],cl
  40568b:	mov    ds:0x3b1f15,eax
  405690:	int    0x23
  405692:	lock lea ebx,[ecx-0x79]
  405696:	or     eax,0xb942d1d
  40569b:	pop    esi
  40569c:	mov    ebp,0xb617cb56
  4056a1:	ds cmp ecx,0xffffffb6
  4056a5:	fstp   TBYTE PTR [edx]
  4056a7:	sti    
  4056a8:	sub    BYTE PTR [edi+ecx*1],dl
  4056ab:	cmp    DWORD PTR [ebp+0x44],eax
  4056ae:	rol    DWORD PTR [ebx],1
  4056b0:	mov    bl,0x34
  4056b2:	enter  0x71c0,0x94
  4056b6:	retf   
  4056b7:	mov    edi,esi
  4056b9:	and    esi,eax
  4056bb:	xor    ebx,ebp
  4056bd:	sbb    DWORD PTR [edi+edx*1-0x192d0230],ebx
  4056c4:	iretw  
  4056c6:	cmp    cl,al
  4056c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c9:	mov    ecx,DWORD PTR [ebx]
  4056cb:	shr    BYTE PTR [esi+0x46fb3ae0],1
  4056d1:	fild   DWORD PTR [esp+ecx*4+0x0]
	...
  4056e8:	sub    bl,ch
  4056ea:	jae    0x40568e
  4056ec:	pop    edx
  4056ed:	xchg   esp,eax
  4056ee:	inc    esi
  4056ef:	cmp    al,0x74
  4056f1:	push   ebp
  4056f2:	sbb    BYTE PTR [ebx],al
  4056f4:	pop    edi
  4056f5:	or     esi,edx
  4056f7:	xor    ebp,DWORD PTR [ebp+0x23]
  4056fa:	lock lea ebx,[ecx-0x36a99279]
  405701:	push   esp
  405702:	or     ebx,DWORD PTR [esi-0x3]
  405705:	push   ebp
  405706:	retf   
  405707:	pop    ss
  405708:	out    0x3d,al
  40570a:	mov    bh,0xff
  40570c:	cli    
  40570d:	out    0xf6,eax
  40570f:	xor    ebx,edi
  405711:	mov    esi,ebx
  405713:	xor    ebp,esp
  405715:	sbb    DWORD PTR [edi+eax*1-0xbdfc94f],ecx
  40571c:	mov    WORD PTR [esi],gs
  40571e:	cmc    
  40571f:	ror    ah,0x38
  405722:	or     bl,al
  405724:	add    ebx,DWORD PTR [edx-0x44]
  405727:	(bad)  
  405728:	mov    ebx,0xb40bb21d
  40572d:	sbb    eax,0x4a008db0
  405732:	test   bh,bh
  405734:	jbe    0x4057a4
  405736:	or     DWORD PTR [esi+0x78],edx
  405739:	in     al,dx
  40573a:	enter  0x8f0a,0xdb
  40573e:	jnp    0x40573f
  405740:	mov    ecx,DWORD PTR [edi]
  405742:	mov    esp,0xb1238733
  405747:	xor    esi,DWORD PTR [ecx+esi*4-0x71]
  40574b:	sldt   WORD PTR [eax]
	...
  40575e:	add    BYTE PTR [eax],al
  405760:	sub    ecx,DWORD PTR [ebx-0x79]
  405763:	stos   DWORD PTR es:[edi],eax
  405764:	(bad)  
  405765:	jg     0x40575b
  405767:	ror    BYTE PTR [ebp+0x27],0x8
  40576b:	retf   0xbf1b
  40576e:	mov    esp,0xb47b53ff
  405773:	or     eax,DWORD PTR [ebp+0x7b]
  405776:	mov    dl,0x8d
  405778:	and    BYTE PTR [edi],dh
  40577a:	repnz lahf 
  40577c:	pop    ds
  40577d:	bound  ecx,QWORD PTR [eax]
  40577f:	pop    esi
  405780:	cwde   
  405781:	ins    BYTE PTR es:[edi],dx
  405782:	enter  0x8f15,0x84
  405786:	jl     0x405787
  405788:	and    esi,DWORD PTR [edi-0x44]
  40578b:	xor    edx,DWORD PTR [esi]
  40578d:	and    esi,DWORD PTR [eax+0x77b91533]
  405793:	pop    es
  405794:	iret   
  405795:	in     al,0x4f
  405797:	gs (bad) 
  405799:	out    dx,eax
  40579a:	cli    
  40579b:	ror    ah,0x37
  40579e:	or     bl,al
  4057a0:	xor    esp,DWORD PTR [edi]
  4057a2:	mov    ebx,0xb1daebff
  4057a7:	or     esp,esp
  4057a9:	xchg   esp,eax
  4057aa:	adc    ch,BYTE PTR [edi-0x6a01f6f7]
  4057b0:	rcl    BYTE PTR [eax-0x6f9df892],0xa0
  4057b7:	(bad)  
  4057b8:	xchg   esi,eax
  4057b9:	xchg   ebx,eax
  4057ba:	xchg   ecx,eax
  4057bb:	jae    0x405778
  4057bd:	pop    ds
  4057be:	mov    dh,0xb3
  4057c0:	jg     0x4057dd
  4057c2:	jmp    0x0:0xad
	...
  4057d5:	add    BYTE PTR [eax],al
  4057d7:	add    BYTE PTR [edi+0x1c],bl
  4057da:	push   esp
  4057db:	adc    BYTE PTR [ebx-0x645c6a5f],0x93
  4057e2:	daa    
  4057e3:	fmul   st(4),st
  4057e5:	push   ebp
  4057e6:	out    dx,al
  4057e7:	push   es
  4057e8:	push   esi
  4057e9:	fild   WORD PTR [ebp-0x4de07c4d]
  4057ef:	stos   DWORD PTR es:[edi],eax
  4057f0:	xchg   DWORD PTR ds:0x1adb2,ebx
  4057f6:	(bad)  
  4057f8:	leave  
  4057f9:	sbb    BYTE PTR [edi+eax*1-0x3e],ch
  4057fd:	cwde   
  4057fe:	and    bh,al
  405800:	adc    DWORD PTR [ebx+0x1f537348],0x1a7fb35e
  40580a:	jmp    0x9388:0x7c1d7fae
  405811:	iret   
  405812:	mov    bh,0x5b
  405814:	mov    ds:0x4ce3a793,eax
  405819:	push   esp
  40581a:	out    dx,eax
  40581b:	push   es
  40581c:	dec    edi
  40581d:	fild   QWORD PTR ds:0xd21f1bb3
  405823:	lods   al,BYTE PTR ds:[esi]
  405824:	xchg   DWORD PTR [edx+edx*8],ebx
  405827:	scas   al,BYTE PTR es:[edi]
  405828:	sbb    DWORD PTR [eax],ecx
  40582a:	(bad)  
  40582b:	mov    ds:0x70f6fea,eax
  405830:	bound  esp,QWORD PTR [eax+0x20]
  405833:	mov    BYTE PTR [esi+0x5f190893],0x1f
  40583a:	imul   esi
	...
  405850:	push   ds
  405851:	arpl   bx,si
  405853:	repnz sub DWORD PTR [ebx-0x10],esp
  405857:	ins    BYTE PTR es:[edi],dx
  405858:	push   ebx
  405859:	(bad)  
  40585a:	sbb    al,0x2a
  40585c:	xchg   ecx,eax
  40585d:	repz or bl,BYTE PTR [edi]
  405860:	nop
  405861:	push   ebp
  405862:	leave  
  405863:	not    BYTE PTR [edx-0x14148b6]
  405869:	push   ds
  40586a:	idiv   edx
  40586c:	test   DWORD PTR [edx+0x10f1faf1],0x85310694
  405876:	add    BYTE PTR [edi],ch
  405878:	mov    edi,DWORD PTR [esi-0x77ad57c4]
  40587e:	or     esi,DWORD PTR [eax-0x7908e202]
  405884:	ds (bad) 
  405887:	repnz and ah,BYTE PTR [edx-0xf]
  40588b:	adc    edx,DWORD PTR fs:[esi+0x25baef8a]
  405892:	or     ebp,DWORD PTR [edi-0x1837ac81]
  405898:	mov    dl,BYTE PTR [ecx-0x49]
  40589b:	push   esi
  40589c:	(bad)  
  40589d:	sbb    eax,0x89f11af7
  4058a2:	lock cli 
  4058a4:	jmp    0x3224:0x34d69c0f
  4058ab:	je     0x40583f
  4058ad:	(bad)  
  4058ae:	and    al,0x28
  4058b0:	dec    ecx
  4058b1:	mov    ecx,DWORD PTR [ebx]
  4058b3:	cmp    DWORD PTR [eax],eax
	...
  4058c5:	add    BYTE PTR [eax],al
  4058c7:	add    BYTE PTR [esi-0x21e108e3],bl
  4058cd:	popa   
  4058ce:	repz loop 0x40590a
  4058d1:	(bad)  
  4058d2:	lock pop esp
  4058d4:	or     DWORD PTR [ebp+0x3a9700b3],0x22
  4058db:	add    esp,DWORD PTR [ebx]
  4058dd:	sbb    cl,al
  4058df:	shl    edx,0x96
  4058e2:	ret    0xf2bf
  4058e5:	jecxz  0x4058dd
  4058e7:	push   DWORD PTR [esi-0x10]
  4058ea:	add    bh,cl
  4058ec:	jbe    0x4058dc
  4058ee:	test   BYTE PTR [edx+eax*8-0x317924fe],bl
  4058f5:	xchg   edi,eax
  4058f6:	push   esi
  4058f7:	and    al,0xe4
  4058f9:	push   edi
  4058fa:	sbb    eax,0x759fec03
  4058ff:	or     BYTE PTR [esp+ecx*4-0x6d56a0f7],dh
  405906:	inc    edi
  405907:	or     BYTE PTR [esp+edi*4-0x1b9f00fc],ah
  40590e:	test   BYTE PTR [esi-0x4b],dh
  405911:	xchg   ebx,eax
  405912:	or     DWORD PTR [edi],0x5af6e31f
  405918:	lods   al,BYTE PTR ds:[esi]
  405919:	iret   
  40591a:	push   eax
  40591b:	pop    edi
  40591c:	xchg   ebx,eax
  40591d:	fxch   st(1)
  40591f:	or     al,0x75
  405921:	mov    BYTE PTR [ebx-0xfb30914],0x57
  405928:	sbb    ecx,eax
  40592a:	iret   
  40592b:	inc    ebp
	...
  405940:	mov    cl,0x98
  405942:	or     BYTE PTR [eax],al
  405944:	xor    eax,0xe20c7ce4
  405949:	aad    0xf0
  40594b:	(bad)  
  40594c:	sub    BYTE PTR [ecx-0x6ddabe7b],dh
  405952:	sub    eax,DWORD PTR [ebp+0x5a]
  405955:	dec    esp
  405956:	or     eax,0x8d1c0a4
  40595b:	mov    DWORD PTR [esi+0x28c7e6dd],edi
  405961:	mov    ecx,0x2b8c4185
  405966:	mov    ecx,0xc1a346dc
  40596b:	add    eax,0x4ba828
  405970:	jp     0x405979
  405972:	std    
  405973:	psrlq  mm5,QWORD PTR [edi]
  405976:	jnp    0x405905
  405978:	dec    ebp
  405979:	sub    edi,DWORD PTR [ebx-0x6c16411f]
  40597f:	sbb    al,0x7
  405981:	js     0x405977
  405983:	add    dl,BYTE PTR [ecx+0x47]
  405986:	adc    eax,0x76073440
  40598b:	inc    ecx
  40598c:	mov    WORD PTR [ebx-0x6c],?
  40598f:	inc    eax
  405990:	test   eax,0x5183b7dd
  405995:	out    0x4a,eax
  405997:	call   0x4b846c
  40599c:	js     0xdd5f9a46
  4059a2:	jae    0x405a01
	...
  4059b8:	test   BYTE PTR [edi+0x711740cc],ch
  4059be:	hlt    
  4059bf:	add    dl,cl
  4059c1:	adc    DWORD PTR [eax+ebp*2+0x38],ebx
  4059c5:	test   eax,0x15bc004a
  4059ca:	add    ah,ch
  4059cc:	arpl   WORD PTR [ebx+0x6c585d0a],bp
  4059d2:	mov    WORD PTR [ecx+eax*1+0xf800aed],?
  4059d9:	xlat   BYTE PTR ds:[ebx]
  4059da:	lock jne 0x405984
  4059dd:	scas   al,BYTE PTR es:[edi]
  4059de:	xchg   esp,eax
  4059df:	or     al,al
  4059e1:	daa    
  4059e2:	mov    esp,DWORD PTR [ebx+0x4aa938]
  4059e8:	mov    esi,gs
  4059ea:	and    dh,dh
  4059ec:	xor    al,0xb7
  4059ee:	or     eax,DWORD PTR [eax]
  4059f0:	mov    WORD PTR [edx+ebp*2+0x161c13bb],ss
  4059f7:	pushf  
  4059f8:	mov    fs,WORD PTR [eax+0x292f83eb]
  4059fe:	push   esp
  4059ff:	inc    edx
  405a00:	mov    WORD PTR [edx+eiz*4-0x53f005d5],ss
  405a07:	jmp    DWORD PTR [ecx*4+0x678c03e1]
  405a0e:	adc    edi,DWORD PTR [eax-0x467413]
  405a14:	vaddsubps ymm0,ymm1,YMMWORD PTR [ecx+0x1968944d]
	...
  405a30:	mov    al,0x9
  405a32:	and    BYTE PTR [esp+eiz*4],al
  405a35:	mov    esp,0xf58c03e1
  405a3a:	add    BYTE PTR [ecx+0x196a944d],0xe8
  405a41:	or     DWORD PTR [eax],esp
  405a43:	add    al,0x7
  405a45:	mov    bl,BYTE PTR [ecx-0x7f]
  405a48:	dec    ebp
  405a49:	xchg   esp,eax
  405a4a:	out    0xbb,al
  405a4c:	fwait
  405a4d:	dec    esi
  405a4e:	out    dx,al
  405a4f:	mov    esp,0x4553f42f
  405a54:	mov    WORD PTR ds:0xd50167d4,cs
  405a5a:	loope  0x405ad8
  405a5c:	cdq    
  405a5d:	in     al,dx
  405a5e:	imul   eax,DWORD PTR [ebp-0x74],0xfffffff5
  405a62:	xor    al,0x81
  405a64:	int    0x94
  405a66:	jp     0x405a81
  405a68:	sbb    al,0x9
  405a6a:	mov    al,ds:0xee4c9b03
  405a6f:	mov    ecx,0x4553e7ef
  405a74:	mov    WORD PTR ds:0xd50173d4,cs
  405a7a:	loope  0x405a95
  405a7c:	sbb    BYTE PTR [ebx],0x8
  405a7f:	mov    esp,0x5ca8ac7f
  405a84:	rcl    DWORD PTR [eax+eiz*8-0x8e51465],1
  405a8b:	ret    0xbb59
  405a8e:	shr    DWORD PTR [ebx],0x8c
  405a91:	xchg   esp,eax
  405a92:	pop    ebp
  405a93:	bound  eax,QWORD PTR [eax]
	...
  405aa5:	add    BYTE PTR [eax],al
  405aa7:	add    BYTE PTR [edi+edx*1],ch
  405aaa:	int3   
  405aab:	add    DWORD PTR [ecx+0x1c],esp
  405aae:	idiv   esi
  405ab0:	cmp    cl,BYTE PTR [edi]
  405ab2:	or     al,0x24
  405ab4:	and    al,0x9
  405ab6:	dec    ecx
  405ab7:	jmp    0xe205db12
  405abc:	or     al,0xd5
  405abe:	or     dh,ch
  405ac0:	pop    es
  405ac1:	mov    eax,edx
  405ac3:	pusha  
  405ac4:	mov    ecx,DWORD PTR [ecx-0x4]
  405ac7:	pop    esp
  405ac8:	push   eax
  405ac9:	xchg   esp,eax
  405aca:	sbb    ebp,0x28851bcc
  405ad0:	nop
  405ad1:	aad    0x7d
  405ad3:	xchg   esp,eax
  405ad4:	xor    BYTE PTR [edi+esi*8-0x52],dl
  405ad8:	jmp    0x4909:0xf7740c0e
  405adf:	jmp    0xbdc5dbea
  405ae4:	add    esp,edx
  405ae6:	or     dl,bl
  405ae8:	xchg   ebx,eax
  405ae9:	pop    es
  405aea:	mov    ah,0x77
  405aec:	enter  0x3b94,0xd5
  405af0:	or     al,0xe1
  405af2:	test   DWORD PTR [eax],ebp
  405af4:	mov    BYTE PTR [ebp-0x36],ah
  405af7:	cwde   
  405af8:	dec    edi
  405af9:	or     al,0xc
  405afb:	je     0x405b18
  405afd:	or     ecx,DWORD PTR [ecx-0x17]
  405b00:	rcr    BYTE PTR [edi-0xb639d22],1
  405b06:	test   BYTE PTR [eax+0x3d0d8f],ch
	...
  405b20:	add    DWORD PTR ds:0x249e0049,edx
  405b26:	scas   eax,DWORD PTR es:[edi]
  405b27:	(bad)  
  405b28:	hlt    
  405b29:	xchg   ebp,eax
  405b2a:	div    DWORD PTR ds:0x491499
  405b30:	call   0x85a5:0xe0fff4cc
  405b37:	inc    ecx
  405b38:	cmc    
  405b39:	call   0xfff6:0xf95cf84d
  405b40:	mov    bl,BYTE PTR [esi-0x1d4d7422]
  405b46:	fldenv [ebx]
  405b48:	mov    bl,0x36
  405b4a:	pop    esp
  405b4b:	cld    
  405b4c:	out    dx,al
  405b4d:	push   ebx
  405b4e:	or     eax,DWORD PTR [eax+ebx*2]
  405b51:	mov    WORD PTR [esi+0x4d94b541],es
  405b57:	clc    
  405b58:	mov    al,0xe
  405b5a:	jno    0x405ade
  405b5c:	jg     0x405b45
  405b5e:	jl     0x405b5c
  405b60:	cmp    dl,cl
  405b62:	lock mov DWORD PTR [eax-0x1c],ebp
  405b66:	enter  0xbbc6,0x9c
  405b6a:	test   BYTE PTR [ebx+0x5cb55d6],0xa6
  405b71:	dec    ebp
  405b72:	dec    ecx
  405b73:	jne    0x405bae
  405b75:	lods   eax,DWORD PTR ds:[esi]
  405b76:	in     al,0xff
  405b78:	sbb    ah,bh
  405b7a:	add    dh,0xee
  405b7d:	aas    
  405b7e:	cmp    eax,DWORD PTR [ebp+0x9]
  405b81:	and    ecx,ecx
  405b83:	add    eax,DWORD PTR [eax]
	...
  405b95:	add    BYTE PTR [eax],al
  405b97:	add    BYTE PTR [ecx-0x66],dh
  405b9a:	pop    esp
  405b9b:	mov    ?,WORD PTR [eax+edx*4-0x6e22baf5]
  405ba2:	test   eax,0xf77acceb
  405ba7:	jne    0x405b92
  405ba9:	xchg   edi,eax
  405baa:	dec    ebp
  405bab:	clc    
  405bac:	mov    WORD PTR [edi+eiz*1+0x6714dfc],?
  405bb3:	mov    esi,DWORD PTR [edx]
  405bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb6:	mov    ecx,0x8304fc1
  405bbb:	fmul   st,st(5)
  405bbd:	fcomp  st(2)
  405bbf:	mov    ecx,0xffa56a28
  405bc4:	pop    es
  405bc5:	push   0x71
  405bc7:	push   ebp
  405bc8:	or     BYTE PTR [esi],ah
  405bca:	dec    esi
  405bcb:	cld    
  405bcc:	scas   eax,DWORD PTR es:[edi]
  405bcd:	pop    edx
  405bce:	jmp    0x9ade398
  405bd3:	add    al,0x1
  405bd5:	(bad)  
  405bd6:	jbe    0x405c19
  405bd8:	mov    WORD PTR [esi],gs
  405bda:	dec    esi
  405bdb:	clc    
  405bdc:	mov    DWORD PTR [edi+0x78],edi
  405bdf:	sbb    ecx,DWORD PTR [ebx]
  405be1:	sub    bh,BYTE PTR [esi]
  405be3:	cld    
  405be4:	add    ebp,DWORD PTR [eax-0x5c]
  405be7:	mov    DWORD PTR [ecx+0x37],ecx
  405bea:	retf   0xa2c6
  405bed:	mov    dh,0xa5
  405bef:	mov    edi,DWORD PTR [edi-0x70fa3815]
  405bf5:	repz dec ecx
  405bf7:	jne    0x405bd0
  405bf9:	adc    edx,DWORD PTR [edi+0xff]
	...
  405c0f:	add    BYTE PTR [ebx+0x7c66fe1],ah
  405c15:	add    bh,al
  405c17:	inc    esp
  405c18:	nop
  405c19:	cmp    eax,0xa89003c9
  405c1e:	mov    edi,0x82dcd8e
  405c23:	inc    ebp
  405c24:	je     0x405c57
  405c26:	ffree  st(1)
  405c28:	out    dx,al
  405c29:	jecxz  0x405bce
  405c2b:	jne    0x405c95
  405c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c2e:	dec    esi
  405c2f:	clc    
  405c30:	adc    eax,0x52c1a721
  405c35:	dec    eax
  405c36:	jo     0x405c36
  405c38:	pop    es
  405c39:	xchg   ebp,eax
  405c3a:	push   edx
  405c3b:	ret    0x924f
  405c3e:	loop   0x405c0b
  405c40:	int    0xa1
  405c42:	xor    DWORD PTR [edx],eax
  405c44:	cdq    
  405c45:	hlt    
  405c46:	push   ebx
  405c47:	inc    edx
  405c48:	mov    WORD PTR [ebp-0x29e6980c],ss
  405c4e:	loope  0x405c52
  405c50:	popa   
  405c51:	in     al,dx
  405c52:	imul   eax,DWORD PTR [edx-0x74],0xb
  405c56:	lods   al,BYTE PTR ds:[esi]
  405c57:	scas   eax,DWORD PTR es:[edi]
  405c58:	lea    edx,[ecx-0x6bb281a3]
  405c5e:	jp     0x405ca6
  405c60:	add    al,0x96
  405c62:	in     al,0x73
  405c64:	or     esi,edx
  405c66:	loope  0x405c22
  405c68:	iret   
  405c69:	sar    DWORD PTR [edx-0x61],0xeb
  405c6d:	mov    eax,ds:0x47aa9bf9
  405c72:	loope  0x405c77
	...
  405c88:	nop    esi
  405c8b:	xor    eax,0xfc5417aa
  405c90:	mov    bl,0x77
  405c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c93:	add    al,0x8c
  405c95:	mov    esp,DWORD PTR [ecx-0x3a236ccf]
  405c9b:	stos   DWORD PTR es:[edi],eax
  405c9c:	mov    bl,0x17
  405c9e:	ficom  DWORD PTR [edi]
  405ca0:	pop    ss
  405ca1:	aad    0xe5
  405ca3:	xchg   ebx,eax
  405ca4:	xchg   edi,eax
  405ca5:	push   esp
  405ca6:	xor    al,0x3
  405ca8:	aam    0x17
  405caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cab:	stos   DWORD PTR es:[edi],eax
  405cac:	xchg   ebx,eax
  405cad:	sub    esp,ebp
  405caf:	jle    0x405c3d
  405cb1:	or     esp,ecx
  405cb3:	mov    esp,0x50e1904e
  405cb8:	pop    es
  405cb9:	sub    BYTE PTR [edx-0x40],ah
  405cbc:	jl     0x405c81
  405cbe:	mov    dl,0xce
  405cc0:	test   BYTE PTR [esi-0x6d09fae5],0x8
  405cc7:	xor    edi,0xae90845
  405ccd:	sbb    al,0xf7
  405ccf:	fcom   QWORD PTR [ecx+0x50726a2b]
  405cd5:	stos   BYTE PTR es:[edi],al
  405cd6:	sbb    BYTE PTR [ebp+ecx*8+0x24],ah
  405cda:	pop    eax
  405cdb:	inc    ecx
  405cdc:	ins    DWORD PTR es:[edi],dx
  405cdd:	xor    dh,bh
  405cdf:	inc    esi
  405ce0:	outs   dx,BYTE PTR ds:[esi]
  405ce1:	dec    edi
  405ce2:	dec    ebp
  405ce3:	cmp    DWORD PTR [edx+0x7fa48394],ecx
  405ce9:	push   cs
  405cea:	(bad)
	...
  405cfd:	add    BYTE PTR [eax],al
  405cff:	add    BYTE PTR [eax-0x4a950537],dl
  405d05:	mov    BYTE PTR [eax],cl
  405d07:	xchg   ebp,eax
  405d08:	mov    WORD PTR [ebx],cs
  405d0a:	dec    ebp
  405d0b:	in     eax,0x1a
  405d0d:	ja     0x405c9a
  405d0f:	mov    ebx,?
  405d11:	push   ss
  405d12:	jl     0x405d07
  405d14:	adc    bl,BYTE PTR [ecx-0x6f631700]
  405d1a:	jecxz  0x405ce8
  405d1c:	cli    
  405d1d:	xchg   bh,dh
  405d1f:	je     0x405cf8
  405d21:	cs fs out 0xf6,al
  405d25:	push   ss
  405d26:	mov    esp,ecx
  405d28:	mul    BYTE PTR [eax+0xd8bc20a]
  405d2e:	dec    ebp
  405d2f:	aad    0x91
  405d31:	test   BYTE PTR [ebp+0x5bc3e02c],al
  405d37:	rcl    DWORD PTR [eax],1
  405d39:	inc    esi
  405d3a:	or     cl,ch
  405d3c:	adc    bl,BYTE PTR [edi+esi*8]
  405d3f:	xor    al,0x90
  405d41:	shl    eax,0x7d
  405d44:	inc    ebp
  405d45:	xchg   ebp,eax
  405d46:	or     dl,bl
  405d48:	push   edx
  405d49:	or     cl,bl
  405d4b:	xor    bh,BYTE PTR [ecx]
  405d4d:	push   ebx
  405d4e:	add    al,0xe9
  405d50:	fmul   QWORD PTR [ecx]
  405d52:	in     al,0x0
  405d54:	xchg   cl,al
  405d56:	mov    edi,DWORD PTR [ebp+0x45]
  405d59:	xchg   edx,eax
  405d5a:	jge    0x405d67
  405d5c:	popf   
  405d5d:	nop
  405d5e:	or     BYTE PTR [eax],al
  405d60:	gs retf 
  405d62:	push   ebx
  405d63:	leave  
	...
  405d78:	ja     0x405d97
  405d7a:	test   DWORD PTR [edx+0xb21e60],0x6a089225
  405d84:	and    eax,0xa107ceb
  405d89:	jmp    0x405e07
  405d8b:	or     BYTE PTR [ebp+0x2500c674],bh
  405d91:	adc    eax,0x8f397ec8
  405d96:	lock sub DWORD PTR [eax],edi
  405d99:	or     BYTE PTR [ebx+0x7d92057d],0x7
  405da0:	pop    esi
  405da1:	nop
  405da2:	or     BYTE PTR [eax],al
  405da4:	in     eax,0xf6
  405da6:	or     ebx,ebp
  405da8:	scas   eax,DWORD PTR es:[edi]
  405da9:	xchg   esi,eax
  405daa:	retf   
  405dab:	pop    edi
  405dac:	cs fxch st(1)
  405daf:	or     al,0xe5
  405db1:	les    eax,FWORD PTR [ebx-0x42a9b14]
  405db7:	(bad)  
  405db8:	mov    dl,0xeb
  405dba:	div    BYTE PTR [ebp-0x4f]
  405dbd:	pushf  
  405dbe:	(bad)  
  405dbf:	hlt    
  405dc0:	jecxz  0x405dad
  405dc2:	test   bh,0x28
  405dc5:	call   0x91135dbf
  405dca:	or     BYTE PTR [eax],al
  405dcc:	mov    ch,0x54
  405dce:	(bad)  
  405dcf:	cld    
  405dd0:	jecxz  0x405dbd
  405dd2:	test   BYTE PTR [ecx],0xa5
  405dd5:	xchg   ecx,eax
  405dd6:	or     BYTE PTR [ebp-0x86f08],cl
	...
  405df0:	and    ch,bl
  405df2:	jl     0x405dfc
  405df4:	mov    WORD PTR [esi-0xf672f4],gs
  405dfa:	mov    eax,ds:0x167b6bff
  405dff:	add    dh,dh
  405e01:	sub    edi,DWORD PTR [esi-0x7b]
  405e04:	pop    eax
  405e05:	popf   
  405e06:	mov    eax,ds:0xc91bcff
  405e0b:	call   0x4cbb9d
  405e10:	btr    DWORD PTR [ecx-0x34cd6f8c],esp
  405e17:	jne    0x405da1
  405e19:	jp     0x405de7
  405e1b:	jmp    0x405dae
  405e1d:	adc    ecx,DWORD PTR [ebx]
  405e1f:	add    BYTE PTR [ebx+ebp*1+0x2b84c2b2],cl
  405e26:	inc    esi
  405e27:	mov    esp,DWORD PTR [eax]
  405e29:	stos   BYTE PTR es:[edi],al
  405e2a:	enter  0x5ffc,0x42
  405e2e:	les    ebp,FWORD PTR [edx+0x66]
  405e31:	jbe    0x405e5a
  405e33:	or     ah,ah
  405e35:	scas   eax,DWORD PTR es:[edi]
  405e36:	mov    eax,ds:0xcb31f3ff
  405e3b:	je     0x405e7d
  405e3d:	add    DWORD PTR [ebp-0x1],eax
  405e40:	pop    ecx
  405e41:	and    edx,DWORD PTR [ebx-0x5fe22481]
  405e47:	or     ecx,esp
  405e49:	lahf   
  405e4a:	or     eax,0xcc150eb
  405e4f:	push   0xffffff8d
  405e51:	test   al,0x36
  405e53:	inc    DWORD PTR [eax]
	...
  405e65:	add    BYTE PTR [eax],al
  405e67:	add    BYTE PTR [esi+edi*1+0x26],bl
  405e6b:	or     BYTE PTR [eax+eax*1-0x5773ff42],ah
  405e72:	retf   
  405e73:	jle    0x405ed1
  405e75:	mov    ds:0x68541436,al
  405e7a:	mov    eax,ds:0xa9a8e75
  405e7f:	mov    esp,ecx
  405e81:	xchg   esp,eax
  405e82:	std    
  405e83:	jl     0x405e23
  405e85:	jle    0x405e68
  405e87:	sbb    eax,0xa924218d
  405e8c:	fcom   QWORD PTR [ebx]
  405e8e:	sbb    al,0xf8
  405e90:	push   0x67
  405e92:	shr    DWORD PTR [eax+0x5c99a0d9],1
  405e98:	xor    al,0x14
  405e9a:	jle    0x405e88
  405e9c:	enter  0xf3a4,0x5
  405ea0:	aaa    
  405ea1:	cdq    
  405ea2:	fs int3 
  405ea4:	mov    eax,0xd7c47a40
  405ea9:	frstor [edx]
  405eab:	jl     0xdd7c91a
  405eb1:	fchs   
  405eb3:	stos   DWORD PTR es:[edi],eax
  405eb4:	and    edx,DWORD PTR [edx+edx*4]
  405eb7:	fdiv   QWORD PTR [esi]
  405eb9:	jg     0x405e56
  405ebb:	test   al,0x99
  405ebd:	pushf  
  405ebe:	dec    ecx
  405ebf:	or     ecx,DWORD PTR [ebx]
  405ec1:	adc    al,0x2e
  405ec3:	cld    
  405ec4:	inc    ebx
  405ec5:	mov    DWORD PTR [esi-0x6beca9e3],ecx
  405ecb:	sti    
	...
  405ee0:	jmp    0x405e80
  405ee2:	push   es
  405ee3:	test   al,0xeb
  405ee5:	lahf   
  405ee6:	and    DWORD PTR [esi],ebp
  405ee8:	mov    ?,edi
  405eea:	popf   
  405eeb:	sbb    BYTE PTR [ecx-0x5c],0xe1
  405eef:	sti    
  405ef0:	rcl    DWORD PTR [ebx],cl
  405ef2:	jg     0x405ef4
  405ef4:	add    al,0x95
  405ef6:	stc    
  405ef7:	add    ecx,DWORD PTR [edi+edi*8-0x5bae851f]
  405efe:	dec    ebx
  405eff:	add    al,0x5c
  405f01:	and    DWORD PTR [esp+eax*1-0x5c],ebp
  405f05:	adc    ecx,esi
  405f07:	push   esp
  405f08:	mov    ds:0x5c9bf989,eax
  405f0d:	loope  0x405f16
  405f0f:	jmp    0x310878a3
  405f14:	mov    ?,edi
  405f16:	and    ebx,DWORD PTR [edi+ecx*4]
  405f19:	push   edi
  405f1a:	jecxz  0x405ee2
  405f1c:	fistp  WORD PTR [edi]
  405f1e:	pop    ebp
  405f1f:	in     eax,0xf6
  405f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f22:	(bad)  
  405f23:	jmp    0xe9cd80e7
  405f28:	aaa    
  405f29:	adc    esi,edi
  405f2b:	sbb    DWORD PTR [ebx],esi
  405f2d:	mov    DWORD PTR [esi+esi*2],eax
  405f30:	mov    esi,0xccc050a4
  405f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f36:	mov    esp,esp
  405f38:	lahf   
  405f39:	xchg   esp,eax
  405f3a:	jge    0x405f26
  405f3c:	into   
  405f3d:	dec    DWORD PTR [ebx]
  405f3f:	ins    BYTE PTR es:[edi],dx
  405f40:	inc    edi
  405f41:	mov    BYTE PTR [ecx+0x62],dl
	...
  405f57:	add    BYTE PTR [edi+0x6f],cl
  405f5a:	shr    DWORD PTR [ebx],0x24
  405f5d:	adc    ebx,DWORD PTR [edx+esi*2-0xc]
  405f61:	push   ss
  405f62:	int3   
  405f63:	xor    ebx,eax
  405f65:	(bad)  
  405f66:	test   ebx,0x9cf76b8f
  405f6c:	pop    es
  405f6d:	sti    
  405f6e:	retf   
  405f6f:	xor    edx,DWORD PTR ss:[ebx]
  405f72:	iret   
  405f73:	lods   al,BYTE PTR ds:[esi]
  405f74:	sub    edx,DWORD PTR [eax+ecx*1+0x5d1f8fe9]
  405f7b:	icebp  
  405f7c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f7e:	test   DWORD PTR [edi+eiz*1+0x54ed6264],esp
  405f85:	pop    ecx
  405f86:	hlt    
  405f87:	cdq    
  405f88:	repnz mov BYTE PTR [eax],al
  405f8b:	out    0x5d,al
  405f8d:	mov    al,ds:0x1064684f
  405f92:	add    eax,0x7c9cb4e3
  405f97:	jecxz  0x405fa7
  405f99:	xchg   ecx,eax
  405f9a:	lock add BYTE PTR [ebp-0x1acc3e3d],dh
  405fa1:	sub    eax,0x15e28b0d
  405fa6:	enter  0x9a03,0x4f
  405faa:	retf   0x7504
  405fad:	gs sub esp,0xffffffe6
  405fb1:	push   ecx
  405fb2:	cld    
  405fb3:	push   ebx
  405fb4:	mov    dl,0xb0
  405fb6:	nop
  405fb7:	cmp    dh,BYTE PTR [ebp-0x6a]
  405fba:	loopne 0x405fa8
	...
  405fd0:	sub    bh,BYTE PTR [ebx]
  405fd2:	test   DWORD PTR [ecx+0x45853cb0],0x29e065d1
  405fdc:	and    bh,BYTE PTR [ebx]
  405fde:	div    DWORD PTR [ebx]
  405fe0:	into   
  405fe1:	stos   DWORD PTR es:[edi],eax
  405fe2:	push   ss
  405fe3:	push   0x3f
  405fe5:	scas   al,BYTE PTR es:[edi]
  405fe6:	or     dl,bh
  405fe8:	and    eax,0xc175f796
  405fed:	cmp    bh,BYTE PTR [ebp+0x8]
  405ff0:	mov    ebp,0x5afff691
  405ff5:	adc    al,0xc8
  405ff7:	pop    fs
  405ff9:	add    eax,0x3af50008
  405ffe:	jge    0x405ff4
  406000:	popf   
  406001:	mov    edx,0xfc9affdf
  406006:	idiv   cl
  406008:	in     eax,0x95
  40600a:	jle    0x406011
  40600c:	mov    WORD PTR [ecx+0x3af50009],ds
  406012:	jge    0x406008
  406014:	jge    0x406071
  406016:	idiv   edi
  406018:	ficom  DWORD PTR [ecx+0x3a7174c8]
  40601e:	jge    0x406014
  406020:	fisttp QWORD PTR [ecx+edx*8+0x5d8bdaff]
  406027:	hlt    
  406028:	mov    WORD PTR [esi+0x1a],?
  40602b:	push   0xffffff8c
  40602d:	push   ebx
  40602e:	clc    
  40602f:	and    BYTE PTR [ebx+edi*8+0x75ab],cl
	...
  406046:	add    BYTE PTR [eax],al
  406048:	cwde   
  406049:	push   edx
  40604a:	daa    
  40604b:	hlt    
  40604c:	xchg   ebx,eax
  40604d:	lods   eax,DWORD PTR ds:[esi]
  40604e:	lock (bad) 
  406050:	rol    DWORD PTR [ebx+0xc],1
  406053:	add    BYTE PTR [ebx+edi*8-0x433460ee],cl
  40605a:	or     al,0xff
  40605c:	stc    
  40605d:	daa    
  40605e:	xchg   esp,eax
  40605f:	into   
  406060:	push   edi
  406061:	sti    
  406062:	or     dl,BYTE PTR [ebx-0x69]
  406065:	cmp    edi,DWORD PTR [eax]
  406067:	ss pop es
  406069:	adc    edx,DWORD PTR [edi+ebx*4]
  40606c:	ret    
  40606d:	mov    esp,0x35abe80c
  406072:	or     al,0x0
  406074:	(bad)  
  406075:	jae    0x4060bc
  406077:	inc    edi
  406078:	pop    es
  406079:	shl    BYTE PTR [ebx-0x6c],cl
  40607c:	popf   
  40607d:	sti    
  40607e:	or     dh,BYTE PTR [eax-0x47a19267]
  406084:	clc    
  406085:	jmp    0x406091
  406087:	add    BYTE PTR [edi-0x44],ah
  40608a:	mov    dh,0x47
  40608c:	adc    edi,ebx
  40608e:	inc    ebx
  40608f:	push   ebx
  406090:	hlt    
  406091:	adc    dh,BYTE PTR [ecx+0x37848c00]
  406097:	clc    
  406098:	pop    ebx
  406099:	mov    ecx,0x4a81ff35
  40609e:	inc    eax
  40609f:	push   0x4a323b
  4060a4:	jecxz  0x406035
  4060a6:	scas   eax,DWORD PTR es:[edi]
  4060a7:	call   0x4d26bd
	...
  4060c0:	aas    
  4060c1:	test   dl,0x74
  4060c4:	push   eax
  4060c5:	jbe    0x40606b
  4060c7:	push   0x433e93f3
  4060cc:	mov    esp,?
  4060ce:	mov    esi,0xe2948cba
  4060d3:	stos   DWORD PTR es:[edi],eax
  4060d4:	inc    ebx
  4060d5:	pop    ecx
  4060d6:	push   0xffffffc4
  4060d8:	in     eax,0x27
  4060da:	rol    BYTE PTR [ebx],1
  4060dc:	mov    WORD PTR [esp+eiz*8-0x4f],es
  4060e0:	loop   0x40612d
  4060e2:	push   ebp
  4060e3:	adc    cl,BYTE PTR [esp+edx*4+0x584ac30a]
  4060ea:	scas   al,BYTE PTR es:[edi]
  4060eb:	add    esp,ebx
  4060ed:	arpl   WORD PTR [ecx-0x61ef9da0],bx
  4060f3:	js     0x4060b6
  4060f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f6:	jmp    0x6701:0x7898d8d1
  4060fd:	xchg   edi,eax
  4060fe:	adc    DWORD PTR [edx+eax*2-0x145b8211],ebx
  406105:	(bad)  
  406106:	sub    eax,0xca6f91a5
  40610b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40610c:	ror    DWORD PTR [eax],0x59
  40610f:	fist   DWORD PTR [eax+edx*1+0x5e]
  406113:	sub    BYTE PTR [ecx-0x74d31ef4],0xd7
  40611a:	mov    ds:0x81948cab,eax
  40611f:	add    edx,DWORD PTR [ebx]
  406121:	mov    bh,BYTE PTR [ecx]
  406123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  406138:	or     DWORD PTR [eax],0xfc942e26
  40613e:	add    eax,0x160ffba6
  406143:	cs clc 
  406145:	cld    
  406146:	cwde   
  406147:	int    0xeb
  406149:	pminsw mm0,mm3
  40614c:	pop    ecx
  40614d:	xchg   edx,eax
  40614e:	sbb    cl,BYTE PTR [eax]
  406150:	xchg   esp,edx
  406152:	jl     0x406160
  406154:	pop    es
  406155:	push   0x8
  406157:	std    
  406158:	inc    ebx
  406159:	mov    ds:0xebb74f7,al
  40615e:	jge    0x40613d
  406160:	out    dx,eax
  406161:	bound  edi,QWORD PTR [esp+eiz*2]
  406164:	enter  0xd8c,0x92
  406168:	xchg   ecx,eax
  406169:	xchg   esp,eax
  40616a:	or     cl,ch
  40616c:	adc    ch,BYTE PTR [edx-0x4]
  40616f:	jb     0x406113
  406171:	push   cs
  406172:	jge    0x406129
  406174:	out    dx,eax
  406175:	bound  eax,QWORD PTR [eax]
  406177:	mov    dh,0xa5
  406179:	adc    al,ah
  40617b:	inc    ecx
  40617c:	dec    esi
  40617d:	maskmovq mm6,(bad)
  40617e:	div    DWORD PTR [edx+0x53]
  406181:	outs   dx,DWORD PTR ds:[esi]
  406182:	push   ebx
  406183:	mov    al,0x4a
  406185:	mov    al,ds:0x1b3c08
  40618a:	mov    esp,DWORD PTR [ebp-0x2da49848]
  406190:	sbb    bh,BYTE PTR [eax+ecx*1-0x37]
  406194:	(bad)  
  406195:	xchg   esp,eax
  406196:	loopne 0x4061a2
  406198:	dec    esi
  406199:	maskmovq mm4,(bad)
  40619a:	mul    DWORD PTR [eax+0x0]
	...
  4061ad:	add    BYTE PTR [eax],al
  4061af:	add    ch,dl
  4061b1:	adc    BYTE PTR [eax-0x17],ah
  4061b4:	das    
  4061b5:	maskmovq mm2,(bad)
  4061b6:	not    DWORD PTR [ecx+0x76]
  4061b9:	out    dx,al
  4061ba:	not    BYTE PTR [esi+0x19]
  4061bd:	pop    ecx
  4061be:	mov    esp,0x8b48fc1
  4061c3:	jmp    0x3f16beaf
  4061c8:	out    dx,eax
  4061c9:	sbb    al,0x4d
  4061cb:	jne    0x4061ea
  4061cd:	xchg   ecx,eax
  4061ce:	enter  0xec70,0xe
  4061d2:	imul   ecx
  4061d4:	loop   0x406224
  4061d6:	sti    
  4061d7:	push   ebx
  4061d8:	(bad)  
  4061d9:	pop    eax
  4061da:	enter  0x8fd5,0x94
  4061de:	or     BYTE PTR [esi],ah
  4061e0:	push   ebp
  4061e1:	call   0x933262dc
  4061e6:	or     bh,al
  4061e8:	sub    BYTE PTR [ebx],ah
  4061ea:	neg    DWORD PTR [edi]
  4061ec:	mov    ch,0x92
  4061ee:	div    DWORD PTR [ebp-0x4f]
  4061f1:	and    DWORD PTR [ebp-0x30],ecx
  4061f4:	mov    dl,0xab
  4061f6:	mov    esp,0x8544688f
  4061fb:	inc    ebp
  4061fc:	cmc    
  4061fd:	ret    0x60
  406200:	mov    ch,0x92
  406202:	mov    BYTE PTR [edx-0x5b],ch
  406205:	xor    DWORD PTR [ebp+0x8],edi
  406208:	mov    ebp,0x7500c2c9
  40620d:	lahf   
  40620e:	enter  0x6b74,0x17
  406212:	jne    0x4061e4
	...
  406228:	lods   eax,DWORD PTR gs:[esi]
  40622a:	or     eax,0x89223e9
  40622f:	add    BYTE PTR [edx],bh
  406231:	pop    ebp
  406232:	mov    eax,0x89272ff
  406237:	lea    ebp,[eax+0x58ff5868]
  40623d:	outs   dx,BYTE PTR ds:[esi]
  40623e:	pusha  
  40623f:	add    BYTE PTR ds:0x688d8892,dh
  406245:	fcom   DWORD PTR [edi-0x18]
  406248:	xchg   edi,eax
  406249:	fiadd  WORD PTR [edi]
  40624b:	add    BYTE PTR [esi],bh
  40624d:	sar    BYTE PTR [ebp+eax*1-0x34],cl
  406251:	or     BYTE PTR [eax],0x0
  406254:	xor    eax,0x6bb44d1f
  406259:	xchg   ecx,eax
  40625a:	or     BYTE PTR [ebp+0x3cb0d1d0],cl
  406260:	cmc    
  406261:	xchg   ecx,eax
  406262:	or     BYTE PTR [ebx],dh
  406264:	mov    ch,0x26
  406266:	mov    ds:0x33d228c7,al
  40626b:	add    ch,ah
  40626d:	xchg   ecx,eax
  40626e:	div    DWORD PTR [ebp-0x74]
  406271:	outs   dx,DWORD PTR ds:[esi]
  406272:	call   0xdbd4:0x40b6f045
  406279:	test   BYTE PTR [edx],0x0
  40627c:	retf   
  40627d:	cmp    BYTE PTR [ebx+0xafbabff],bl
  406283:	lea    ecx,[ecx-0x45]
  406286:	cmp    ebp,DWORD PTR [edx-0x74]
  406289:	popa   
  40628a:	or     al,0xff
	...
  4062a0:	cmp    DWORD PTR [edi],ebp
  4062a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062a3:	out    0xd5,al
  4062a5:	sti    
  4062a6:	or     cl,BYTE PTR [ebx]
  4062a8:	int3   
  4062a9:	add    al,BYTE PTR [bp+di+0x2b19]
  4062ae:	or     al,0x75
  4062b0:	mov    fs,edx
  4062b2:	sub    edi,edi
  4062b4:	add    DWORD PTR [eax-0x57],ecx
  4062b7:	jne    0x4062f1
  4062b9:	push   ebx
  4062ba:	push   ebx
  4062bb:	dec    edi
  4062bc:	int    0xfb
  4062be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062bf:	jne    0x4062f1
  4062c1:	and    edx,DWORD PTR [ebx]
  4062c3:	leave  
  4062c4:	mov    ebx,?
  4062c6:	mov    eax,esp
  4062c8:	jl     0x4062b8
  4062ca:	dec    edi
  4062cb:	inc    ebp
  4062cc:	xor    al,0xab
  4062ce:	add    BYTE PTR es:[ebx+0x8],dl
  4062d2:	xchg   edi,eax
  4062d3:	call   0xffe9e412
  4062d8:	xchg   edi,eax
  4062d9:	cmp    ebx,DWORD PTR [edi]
  4062db:	add    ah,BYTE PTR [edi]
  4062dd:	mov    al,0x83
  4062df:	inc    ebp
  4062e0:	hlt    
  4062e1:	ins    DWORD PTR es:[edi],dx
  4062e2:	pop    ds
  4062e3:	mov    esp,0xc30934
  4062e8:	mov    WORD PTR [ebx-0x58],cs
  4062eb:	jne    0x4062c5
  4062ed:	push   ebp
  4062ee:	pop    ds
  4062ef:	mov    eax,0xff942824
  4062f4:	or     esi,edx
  4062f6:	retf   0x8e75
  4062f9:	push   edx
  4062fa:	cld    
  4062fb:	inc    BYTE PTR [ecx+0x79a0f194]
  406301:	mov    al,ds:0x1716
	...
  406316:	add    BYTE PTR [eax],al
  406318:	and    al,0xfc
  40631a:	rcr    DWORD PTR [esi-0x4395f31d],cl
  406320:	fild   DWORD PTR [esi-0x253153b7]
  406326:	loopne 0x40632b
  406328:	retf   
  406329:	xchg   BYTE PTR ds:0xe5ef96ac,dh
  40632f:	mov    al,ds:0xabad86bb
  406334:	mov    gs,edi
  406336:	aad    0xa0
  406338:	stos   DWORD PTR es:[edi],eax
  406339:	xchg   ch,bl
  40633b:	stos   DWORD PTR es:[edi],eax
  40633c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40633d:	out    dx,eax
  40633e:	lds    esp,FWORD PTR [eax+0x4129d107]
  406344:	vpmulhuw xmm0,xmm5,XMMWORD PTR [ebx]
  406348:	loope  0x406369
  40634a:	int    0x84
  40634c:	dec    eax
  40634d:	or     DWORD PTR [edx+0x46],ebp
  406350:	mov    BYTE PTR [edi-0x2c75e85f],bl
  406356:	loopne 0x40635b
  406358:	mov    WORD PTR [ecx+eiz*8-0x1ef73638],ss
  40635f:	add    ecx,DWORD PTR [esp+edx*4+0x6550467c]
  406366:	jbe    0x40637e
  406368:	cwde   
  406369:	or     esi,esp
  40636b:	or     esi,DWORD PTR [esi+edi*2]
  40636e:	addr16 mov al,ds:0x183b
  406372:	in     al,dx
  406373:	lahf   
  406374:	mov    WORD PTR [eax+0xb8c2dfe],es
  40637a:	aam    0xf
	...
  406390:	and    eax,DWORD PTR [edx+0xac2ab45]
  406396:	dec    esi
  406397:	mov    al,ds:0x9fbc0bbc
  40639c:	hlt    
  40639d:	cmp    DWORD PTR [eax],ecx
  40639f:	adc    eax,0x20500c2c
  4063a4:	rcr    DWORD PTR [eax+ecx*1-0x7506ff44],1
  4063ab:	and    eax,0xaccf730b
  4063b0:	add    edx,DWORD PTR [esi+0x51c48708]
  4063b6:	mul    bh
  4063b8:	(bad)  
  4063b9:	jle    0x4063c7
  4063bb:	ins    BYTE PTR es:[edi],dx
  4063bc:	push   edx
  4063bd:	or     BYTE PTR [eax-0x7f],bl
  4063c0:	setne  BYTE PTR [eax]
  4063c3:	jmp    0xea376f2f
  4063c8:	(bad)  
  4063c9:	or     edi,DWORD PTR [ebp-0xf]
  4063cc:	not    DWORD PTR [edx-0x3f]
  4063cf:	jmp    0xe60a4163
  4063d4:	(bad)  
  4063d5:	popa   
  4063d6:	adc    ebp,0xf
  4063d9:	shl    DWORD PTR [ebx+0x4cd3bf16],1
  4063df:	test   DWORD PTR [eax+0x5ee90894],ecx
  4063e5:	out    dx,al
  4063e6:	pop    edi
  4063e7:	jmp    0x92376f6b
  4063ec:	sub    al,0xf6
  4063ef:	xchg   esi,eax
  4063f0:	adc    DWORD PTR [ecx-0x38],edx
  4063f3:	add    DWORD PTR [eax],eax
	...
  406405:	add    BYTE PTR [eax],al
  406407:	add    BYTE PTR [eax+0x27e908a4],dl
  40640d:	jge    0x4063e3
  40640f:	jle    0x40643c
  406411:	sbb    eax,0x9470314d
  406416:	sbb    cl,ch
  406418:	(bad)  
  406419:	cld    
  40641a:	push   ebx
  40641b:	inc    ebp
  40641c:	adc    ecx,DWORD PTR [ebx]
  40641e:	and    DWORD PTR [ebx+ecx*8-0x3ed28ae7],0x8fe908c8
  406429:	(bad)  
  40642a:	enter  0x5600,0x7e
  40642e:	iret   
  40642f:	inc    ebp
  406430:	mov    cl,0xf4
  406432:	idiv   bh
  406434:	cmc    
  406435:	sub    DWORD PTR [ebp-0x40],edi
  406438:	pop    edx
  406439:	pop    ebp
  40643a:	fdiv   st(7),st
  40643c:	adc    BYTE PTR [edi-0x79],ch
  40643f:	inc    ebp
  406440:	test   ebx,edx
  406442:	dec    esp
  406443:	fdivr  DWORD PTR [edx-0x65]
  406446:	or     BYTE PTR [eax],al
  406448:	mov    dl,0x5d
  40644a:	cld    
  40644b:	(bad)  
  40644c:	ficom  DWORD PTR [esi-0x2d0f72f8]
  406452:	push   edi
  406453:	push   0x800896b5
  406458:	seta   bh
  40645b:	jne    0x40641a
  40645d:	ds (bad) 
  40645f:	enter  0x96b5,0x3
  406463:	rol    BYTE PTR [ecx-0x6e],0x8b
  406467:	jge    0x40644a
  406469:	xchg   esi,eax
  40646a:	jge    0x406471
	...
  406480:	mov    esp,0x75000833
  406485:	ror    DWORD PTR [eax+esi*4+0x3a],cl
  406489:	fwait
  40648a:	or     BYTE PTR [eax],al
  40648c:	fcomp  DWORD PTR [eax+edi*4+0x50]
  406490:	sub    ch,BYTE PTR [ebp-0x698a974c]
  406496:	or     BYTE PTR [eax+0x50cc5ce8],al
  40649c:	or     eax,0x6500c05d
  4064a1:	lahf   
  4064a2:	enter  0x3075,0x39
  4064a6:	rol    BYTE PTR [eax],1
  4064a8:	xor    eax,0x7d458396
  4064ad:	iret   
  4064ae:	pop    es
  4064af:	add    BYTE PTR [eax-0x7646334c],bh
  4064b5:	nop
  4064b6:	or     BYTE PTR [eax],al
  4064b8:	mov    WORD PTR [esi-0x4d190c34],gs
  4064be:	inc    eax
  4064bf:	les    edx,FWORD PTR [eax-0x5]
  4064c2:	or     al,BYTE PTR [eax]
  4064c4:	or     eax,DWORD PTR [ecx+0x53]
  4064c7:	(bad)
  4064cb:	inc    ebp
  4064cc:	aam    0xba
  4064ce:	push   es
  4064cf:	add    BYTE PTR [edx+edi*4-0x5140bc0],cl
  4064d6:	or     al,BYTE PTR [eax]
  4064d8:	adc    DWORD PTR [ecx],edi
  4064da:	iret   
  4064db:	push   eax
  4064dc:	data16 sti 
  4064de:	and    BYTE PTR [eax],al
  4064e0:	ror    DWORD PTR [eax+0xe857],cl
	...
  4064f6:	add    BYTE PTR [eax],al
  4064f8:	lds    esi,FWORD PTR [edx-0x4468fff5]
  4064fe:	pop    ds
  4064ff:	push   es
  406500:	vmwrite edi,DWORD PTR [edi-0x5e07c700]
  406507:	mov    WORD PTR [ebx+edi*8+0xb19ff0a],cs
  40650e:	xchg   esp,eax
  40650f:	jne    0x4064dd
  406511:	ficomp DWORD PTR [esi]
  406513:	mov    eax,0x41462624
  406518:	mov    WORD PTR [edx+0x1f],cs
  40651b:	mov    esp,0xcd7974
  406520:	mov    WORD PTR [esi-0x40],?
  406523:	adc    al,0x83
  406525:	push   0x4f
  406527:	fdivr  QWORD PTR [ebp+eiz*4+0x3bd9ff0c]
  40652e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40652f:	sti    
  406530:	push   esp
  406531:	sbb    dl,BYTE PTR [ebp+0x9084c0b]
  406537:	jmp    0x406523
  406539:	test   BYTE PTR [edi-0x4c],cl
  40653c:	inc    ebx
  40653d:	or     BYTE PTR [edi-0x18],bl
  406540:	in     eax,dx
  406541:	js     0x4064d8
  406543:	push   DWORD PTR [ebx]
  406545:	xchg   esp,eax
  406546:	aam    0x5f
  406548:	xor    al,0xa1
  40654a:	das    
  40654b:	add    al,0x8c
  40654d:	fs pop esi
  40654f:	pop    ss
  406550:	fmul   DWORD PTR [eax]
  406552:	fcom   QWORD PTR [edi+0x24]
  406555:	outs   dx,BYTE PTR ds:[esi]
  406556:	dec    eax
  406557:	popf   
  406558:	or     ebx,DWORD PTR [ebp+0x1721]
	...
  40656e:	add    BYTE PTR [eax],al
  406570:	mov    ?,ebp
  406572:	out    dx,eax
  406573:	cmp    BYTE PTR [ecx-0x5c],0xe1
  406577:	pop    ss
  406578:	cwde   
  406579:	or     DWORD PTR [ebx+esi*8-0x631a8116],edx
  406580:	pop    ecx
  406581:	inc    eax
  406582:	or     DWORD PTR [ebp+edx*8+0x8],eax
  406586:	push   es
  406587:	or     esp,ecx
  406589:	jle    0x40656e
  40658b:	test   al,0xa3
  40658d:	sbb    eax,0x7fe70929
  406592:	ror    BYTE PTR [esi-0x636ec7af],1
  406598:	cmp    DWORD PTR [eax-0x41fe912],esp
  40659e:	pop    es
  40659f:	cdq    
  4065a0:	mov    ds:0x9bbb6a08,eax
  4065a5:	jle    0x406544
  4065a7:	stos   DWORD PTR es:[edi],eax
  4065a8:	jmp    0xa182:0x8b03e0d0
  4065af:	stos   DWORD PTR es:[edi],eax
  4065b0:	jb     0x40659d
  4065b2:	mov    ebp,0x65827b9c
  4065b7:	stos   DWORD PTR es:[edi],eax
  4065b8:	push   0xffffffeb
  4065ba:	lods   eax,DWORD PTR ds:[esi]
  4065bb:	pushf  
  4065bc:	imul   eax,DWORD PTR [edx-0x14bd5497],0xffffff9d
  4065c3:	pushf  
  4065c4:	jp     0x9d1868ff
  4065ca:	mov    ss,WORD PTR [esi]
  4065cc:	clc    
  4065cd:	cld    
  4065ce:	nop
  4065cf:	mov    ecx,0x62080843
	...
  4065e8:	dec    esp
  4065e9:	ins    BYTE PTR es:[edi],dx
  4065ea:	push   edi
  4065eb:	mov    al,ds:0xbc08a54d
  4065f0:	adc    al,0xf9
  4065f2:	mov    ah,BYTE PTR ds:0x32236407
  4065f8:	or     al,0x8a
  4065fa:	add    al,0xe9
  4065fc:	jnp    0x406654
  4065fe:	mov    eax,esp
  406600:	inc    DWORD PTR [edi]
  406602:	jnp    0x4065b5
  406604:	adc    dl,BYTE PTR [edx-0xc]
  406607:	cdq    
  406608:	sbb    BYTE PTR [edx-0x3193befc],al
  40660e:	pop    es
  40660f:	jmp    0xd9b03b26
  406614:	add    BYTE PTR [edx-0x1d7ffefc],al
  40661a:	test   BYTE PTR [esi],0x6
  40661d:	push   edx
  40661e:	lock push es
  406620:	mov    ds:0xca8de008,al
  406625:	xchg   esp,eax
  406626:	or     dl,ah
  406628:	iret   
  406629:	adc    BYTE PTR [ecx],0xee
  40662c:	cdq    
  40662d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40662e:	neg    DWORD PTR [eax+ecx*1+0x65]
  406632:	not    DWORD PTR [eax+edx*4-0x4]
  406636:	or     dl,bh
  406638:	test   DWORD PTR [edi],0x81f7b183
  40663e:	hlt    
  40663f:	sar    DWORD PTR [ebp+0x26e907d1],1
  406645:	add    DWORD PTR [ecx+eax*8],0xaef6e0bd
	...
  406660:	add    edx,ebx
  406662:	push   edx
  406663:	mov    al,0x52
  406665:	cwde   
  406666:	or     BYTE PTR [ebx+edx*1],dh
  406669:	clc    
  40666a:	mov    BYTE PTR [ebp-0x7108f980],ch
  406670:	add    eax,0x13007a11
  406675:	sub    esi,edi
  406677:	push   eax
  406678:	popf   
  406679:	xchg   ecx,eax
  40667a:	or     DWORD PTR [eax],eax
  40667c:	and    eax,0x25c7103b
  406681:	xchg   ebx,eax
  406682:	rol    ebx,0xe8
  406685:	adc    eax,0x9b4083e4
  40668a:	or     BYTE PTR [edx+eiz*1+0xe],dh
  40668e:	jne    0x4066a0
  406690:	and    eax,0x48ff1197
  406695:	div    ebp
  406697:	jne    0x406696
  406699:	cmp    dl,bh
  40669b:	(bad)  
  40669c:	ret    0xf72b
  40669f:	jne    0x406676
  4066a1:	sub    DWORD PTR [ebp+0xc],edi
  4066a4:	mov    dl,0xa5
  4066a6:	add    al,ch
  4066a8:	jmp    0x17ce:0xacfff741
  4066af:	add    BYTE PTR [eax],bl
  4066b1:	push   ss
  4066b2:	in     al,0x83
  4066b4:	adc    BYTE PTR [ebx+0xde17408],bl
  4066ba:	jne    0x4066c8
  4066bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066bd:	xchg   esi,eax
  4066be:	push   ds
  4066bf:	(bad)  
  4066c0:	cmp    BYTE PTR [ebx],al
  4066c2:	div    BYTE PTR [ebp+0x0]
	...
  4066d5:	add    BYTE PTR [eax],al
  4066d7:	add    BYTE PTR [ebp-0x3d2944c6],bl
  4066dd:	sub    edi,esi
  4066df:	jne    0x406692
  4066e1:	sub    DWORD PTR [ebp+0x8],edi
  4066e4:	int    0x98
  4066e6:	(bad)  
  4066e8:	push   edx
  4066e9:	fxch   st(1)
  4066eb:	or     al,0x75
  4066ed:	lds    eax,FWORD PTR [ebx-0x7ba1914]
  4066f3:	(bad)  
  4066f4:	mov    eax,0x5245e09c
  4066f9:	sub    esi,edi
  4066fb:	mov    DWORD PTR [eax-0x73827464],ebp
  406701:	out    dx,eax
  406702:	or     dh,BYTE PTR [edx+edi*4+0x16]
  406706:	sbb    BYTE PTR [esp+esi*1],cl
  406709:	int    0xb1
  40670b:	inc    DWORD PTR [ebx+0x3]
  40670e:	retf   
  40670f:	je     0x4066df
  406711:	jo     0x40675b
  406713:	lock fdiv QWORD PTR [esi+0x18]
  406717:	or     al,0x34
  406719:	in     al,0xb1
  40671b:	jmp    DWORD PTR [ebx]
  40671d:	add    ecx,ebx
  40671f:	je     0x40677f
  406721:	jl     0x406733
  406723:	cld    
  406724:	mov    ebx,?
  406726:	cli    
  406727:	(bad)  
  406728:	jle    0x4066c5
  40672a:	xchg   ebx,eax
  40672b:	jne    0x40672d
  40672d:	(bad)  
  40672e:	sbb    al,bh
  406730:	in     al,0xc2
  406732:	lods   eax,DWORD PTR ds:[esi]
  406733:	push   ebx
  406735:	repnz retf 0x7d75
  406739:	scas   al,BYTE PTR es:[edi]
  40673a:	sbb    BYTE PTR [eax],dl
	...
  406750:	jecxz  0x406772
  406752:	lahf   
  406753:	jmp    DWORD PTR [ecx-0x5d]
  406756:	xchg   edx,eax
  406757:	jne    0x4066dd
  406759:	xchg   ebx,eax
  40675a:	inc    edx
  40675b:	dec    ebx
  40675d:	mov    es,WORD PTR [eax-0x5cd443bb]
  406763:	(bad)  
  406764:	(bad)  
  406766:	nop
  406767:	(bad)  
  406768:	cmp    edi,esp
  40676a:	mov    ds:0x90eec586,al
  40676f:	leave  
  406770:	into   
  406771:	test   DWORD PTR [edx],0x8cd00755
  406777:	les    ebx,FWORD PTR [esi+edx*8+0x27740c06]
  40677e:	mov    dl,0xff
  406780:	add    DWORD PTR [edi+esi*1+0xc00f0c],0x0
  406788:	clc    
  406789:	scas   al,BYTE PTR es:[edi]
  40678a:	xchg   ecx,eax
  40678b:	jne    0x406725
  40678d:	xchg   esp,eax
  40678e:	cdq    
  40678f:	inc    esp
  406790:	inc    edx
  406791:	add    eax,0x804c0d96
  406796:	rol    BYTE PTR [esi-0x66cefb37],cl
  40679c:	rcr    DWORD PTR [eax+0x5629199],0x76
  4067a3:	or     eax,0x82c2804c
  4067a8:	mov    cl,0x8
  4067aa:	loope  0x4067af
  4067ac:	jl     0x406742
  4067ae:	shl    dl,cl
  4067b0:	and    bh,BYTE PTR [edi-0xf]
  4067b3:	cwde   
	...
  4067c8:	mov    eax,ds:0x140f5e08
  4067cd:	add    eax,0xf6f40bdc
  4067d2:	dec    esi
  4067d3:	cdq    
  4067d4:	add    edx,DWORD PTR [edi]
  4067d6:	lods   al,BYTE PTR ds:[esi]
  4067d7:	xchg   ebx,eax
  4067d8:	pop    esp
  4067d9:	cld    
  4067da:	les    edi,FWORD PTR [eax+0xf2604f3]
  4067e0:	cwde   
  4067e1:	cld    
  4067e2:	les    edi,FWORD PTR [edx-0x39c7fb1d]
  4067e8:	mov    BYTE PTR [esp+esi*4+0x2d10e08c],dl
  4067ef:	xchg   esp,eax
  4067f0:	pop    edi
  4067f1:	mov    ecx,0x9c39992a
  4067f6:	sbb    DWORD PTR [ecx],ebp
  4067f8:	fiadd  DWORD PTR [esi+edi*8]
  4067fb:	mov    cl,BYTE PTR [ecx-0x64]
  4067fe:	bound  edx,QWORD PTR [edi]
  406800:	xchg   esp,eax
  406801:	xchg   esp,eax
  406802:	push   ebp
  406803:	inc    edx
  406804:	mov    ds:0xb7abf97e,eax
  406809:	out    0xdd,al
  40680b:	cwde   
  40680c:	xchg   esp,edx
  40680e:	pop    esp
  40680f:	(bad)  
  406810:	sbb    BYTE PTR [edx-0x4f],bl
  406813:	xor    eax,DWORD PTR [ebx+0x1eabf98a]
  406819:	jecxz  0x406822
  40681b:	mov    dh,0x14
  40681d:	nop
  40681e:	enter  0x7235,0x15
  406822:	jne    0x4067c9
  406824:	(bad)  
  406825:	xchg   esp,eax
  406826:	sbb    cl,ch
  406828:	and    BYTE PTR [edi+esi*8+0x1c],0x0
	...
  406840:	hlt    
  406841:	add    edi,DWORD PTR [ebp-0x6f]
  406844:	idiv   DWORD PTR [ecx-0x6fdb7916]
  40684a:	enter  0x8ef5,0x57
  40684e:	test   DWORD PTR [eax+ebx*1],ebp
  406851:	gs loopne 0x40683d
  406854:	in     al,0x3
  406856:	mul    DWORD PTR [esi-0x6e]
  406859:	mov    eax,fs
  40685b:	sub    edi,edx
  40685d:	add    esi,edi
  40685f:	bound  ecx,QWORD PTR [eax+0x60]
  406862:	shr    DWORD PTR [ebx],0xb
  406865:	add    al,0x5c
  406867:	jb     0x406894
  406869:	push   ss
  40686a:	int3   
  40686b:	jne    0x406882
  40686d:	add    al,0xf7
  40686f:	cs jb  0x4068ae
  406872:	imul   BYTE PTR [esi]
  406874:	add    al,0x95
  406876:	or     cl,ch
  406878:	(bad)  
  406879:	cmovge ebp,ebp
  40687c:	mov    ah,dl
  40687e:	jnp    0x40686c
  406880:	bsr    ecx,DWORD PTR [eax]
  406883:	xchg   esp,eax
  406884:	retf   0x6fec
  406887:	call   0x7537fd1b
  40688c:	xchg   ebx,eax
  40688d:	in     al,dx
  40688e:	aam    0xa
  406890:	adc    al,0x4
  406892:	add    ebp,DWORD PTR [ecx]
  406894:	call   0x855:0x58436093
  40689b:	fidivr WORD PTR [ebp-0x70]
  40689e:	loopne 0x406892
  4068a0:	fild   DWORD PTR [ebx]
  4068a2:	test   edx,0x0
	...
  4068b8:	xchg   ebp,eax
  4068b9:	ins    BYTE PTR es:[edi],dx
  4068ba:	push   edi
  4068bb:	add    BYTE PTR [ebp-0x3f00f7a7],ah
  4068c1:	mov    eax,fs
  4068c3:	or     al,0x19
  4068c5:	sub    esi,edi
  4068c7:	mov    eax,esi
  4068c9:	pusha  
  4068ca:	idiv   bh
  4068cc:	sub    dh,BYTE PTR [eax-0x689afeca]
  4068d2:	test   DWORD PTR [ebp-0x8d5d9],eax
  4068d8:	test   DWORD PTR [eax],esi
  4068da:	mov    eax,ds
  4068dc:	or     ch,BYTE PTR [ebx]
  4068de:	test   DWORD PTR [ebp-0x8d619],eax
  4068e4:	xchg   ebp,eax
  4068e5:	sub    edi,DWORD PTR [ebp-0x8d44448]
  4068eb:	call   0x483ff3
  4068f0:	pushf  
  4068f1:	adc    eax,0x2bbafeb4
  4068f6:	dec    eax
  4068f7:	(bad)  
  4068f9:	inc    BYTE PTR [edi]
  4068fb:	add    ch,dh
  4068fd:	or     ebx,DWORD PTR [ebp-0x8d4443e]
  406903:	mul    edi
  406905:	push   es
  406906:	idiv   edi
  406908:	cmc    
  406909:	cdq    
  40690a:	mov    WORD PTR [ebx-0x72f7690b],es
  406910:	daa    
  406911:	sti    
  406912:	inc    esi
  406913:	push   0x49c710
  406918:	lea    ebx,[ebx]
  40691a:	retf   
	...
  40692f:	add    BYTE PTR [ebp-0x4f8a3773],dh
  406935:	das    
  406936:	les    eax,FWORD PTR [eax]
  406938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406939:	xchg   esi,eax
  40693a:	test   DWORD PTR [ebp-0x8d589],edx
  406940:	sbb    BYTE PTR [ebp+0x24],dl
  406943:	push   eax
  406944:	cmp    eax,0x8c4158b3
  406949:	in     eax,dx
  40694a:	mov    ds:0xaec4f72,al
  40694f:	or     ecx,DWORD PTR [ecx+eax*8+0x9]
  406953:	jmp    0x4b5583
  406958:	jae    0x40691b
  40695a:	add    al,ch
  40695c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40695d:	into   
  40695e:	popf   
  40695f:	call   DWORD PTR [edi-0x1bf0e7d5]
  406965:	or     DWORD PTR [ecx+eax*2-0x74],eax
  406969:	sub    bl,BYTE PTR [eax]
  40696b:	or     al,0x34
  40696d:	stos   DWORD PTR es:[edi],eax
  40696e:	mov    bl,0xff
  406970:	inc    ebx
  406971:	daa    
  406972:	add    DWORD PTR [edx-0x74],ebp
  406975:	sbb    BYTE PTR [eax],0xc
  406978:	and    al,0x97
  40697a:	mov    bl,0xff
  40697c:	sub    esp,DWORD PTR [ecx+0x78]
  40697f:	ret    0x7b22
  406982:	sahf   
  406983:	lea    edi,[esi+0x24503a8f]
  406989:	sbb    esi,DWORD PTR [edx-0x61c3f401]
  40698f:	jne    0x406935
  406991:	pop    edx
  406992:	sbb    BYTE PTR [eax+eax*1],dl
	...
  4069a5:	add    BYTE PTR [eax],al
  4069a7:	add    bl,bh
  4069a9:	dec    eax
  4069aa:	sti    
  4069ab:	dec    edi
  4069ac:	repz inc eax
  4069ae:	add    ebp,eax
  4069b0:	fdiv   QWORD PTR [ecx+0x4ff4ff9e]
  4069b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b7:	(bad)  
  4069b8:	(bad)  [esi-0x28b172d5]
  4069be:	add    DWORD PTR [ebp-0x616e00],0xf
  4069c5:	sbb    ebx,edi
  4069c7:	inc    DWORD PTR [eax-0x13]
  4069ca:	mov    eax,ds:0xfb80b312
  4069cf:	(bad)  
  4069d0:	loope  0x406999
  4069d2:	popf   
  4069d3:	jmp    DWORD PTR [ebx-0x3072266c]
  4069d9:	xchg   esp,eax
  4069da:	loope  0x4069e4
  4069dc:	int3   
  4069dd:	mov    BYTE PTR [esp+ebp*1],bl
  4069e0:	mov    ds:0x8304204b,al
  4069e5:	xchg   ebp,edi
  4069e7:	stos   DWORD PTR es:[edi],eax
  4069e8:	popf   
  4069e9:	fnsave [ebp+0x75477395]
  4069ef:	xchg   esi,eax
  4069f0:	imul   eax,DWORD PTR [ecx],0x11
  4069f3:	lods   al,BYTE PTR ds:[esi]
  4069f4:	(bad)
  4069f7:	xchg   ebp,eax
  4069f8:	mov    esp,0x53fc1415
  4069fd:	test   ebp,ebp
  4069ff:	xchg   esp,eax
  406a00:	shr    DWORD PTR [eax-0x73466acf],0x8e
  406a07:	das    
  406a08:	xchg   esp,eax
  406a09:	in     eax,dx
  406a0a:	in     al,0x94
	...
  406a20:	mov    ecx,0xa19511a8
  406a25:	mov    WORD PTR [ecx+0x6e012130],cs
  406a2b:	lods   al,BYTE PTR ds:[esi]
  406a2c:	into   
  406a2d:	jmp    0x1741ff87
  406a32:	and    edx,DWORD PTR [esi-0x6b4efef5]
  406a38:	cmp    DWORD PTR [eax+0x4f],eax
  406a3b:	xchg   ebp,eax
  406a3c:	sti    
  406a3d:	jmp    0x4069c5
  406a3f:	ret    0x948c
  406a42:	les    ebx,FWORD PTR fs:[ebx-0x1c69cfe9]
  406a49:	add    BYTE PTR [esi],ch
  406a4b:	dec    edi
  406a4c:	sbb    BYTE PTR [edx],al
  406a4e:	push   ss
  406a4f:	xchg   ebp,eax
  406a50:	in     al,0x32
  406a52:	and    eax,DWORD PTR [esp+ecx*4]
  406a55:	add    DWORD PTR [esp+ebx*2-0x3e],ebx
  406a59:	add    BYTE PTR [esi],cl
  406a5b:	lods   al,BYTE PTR ds:[esi]
  406a5c:	sahf   
  406a5d:	jmp    0xd605ff57
  406a62:	pop    es
  406a63:	fisttp QWORD PTR [edi+0x75fd8367]
  406a69:	xchg   esp,eax
  406a6a:	neg    DWORD PTR [esp+ebx*4+0x1]
  406a6e:	jge    0x406a69
  406a70:	clc    
  406a71:	xchg   BYTE PTR [esi+edx*8],al
  406a74:	call   0xf700:0x1a0ee08c
  406a7b:	mov    al,0x4d
  406a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7e:	or     BYTE PTR [eax*1+0x3cf6f1],dl
	...
  406a95:	add    BYTE PTR [eax],al
  406a97:	add    BYTE PTR [esp+ebp*8-0x76db8],dl
  406a9e:	add    ch,BYTE PTR [ecx+0x14f79e8b]
  406aa4:	pop    eax
  406aa5:	push   eax
  406aa6:	loopne 0x406a4e
  406aa8:	add    eax,0x1939f700
  406aad:	mov    dl,BYTE PTR [eax]
  406aaf:	xchg   BYTE PTR [edx-0x7d81a758],cl
  406ab5:	mov    eax,fs
  406ab7:	aaa    
  406ab8:	add    BYTE PTR [eax],al
  406aba:	test   DWORD PTR [ecx+0x66f6e6e0],0xe91bd346
  406ac4:	bound  ecx,QWORD PTR [ebx]
  406ac6:	in     al,0x56
  406ac8:	call   0x7cfe:0xffd4f7a8
  406acf:	cmc    
  406ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ad1:	call   0x36b0:0xec87b4f7
  406ad8:	add    BYTE PTR [eax],al
  406ada:	div    DWORD PTR [ebx+esi*8+0xf97cfe]
  406ae1:	mov    al,BYTE PTR [ebx+edx*4]
  406ae4:	in     al,dx
  406ae5:	(bad)  
  406ae6:	jl     0x406ac9
  406ae8:	div    DWORD PTR [esi]
  406aea:	test   DWORD PTR [esi],0x7d0018
  406af0:	fldcw  WORD PTR [eax]
  406af2:	jge    0x406b04
  406af4:	mov    dl,0x91
  406af6:	add    al,0x6a
  406af8:	shr    DWORD PTR [eax],0x7d
  406afb:	or     BYTE PTR [eax],al
	...
  406b0d:	add    BYTE PTR [eax],al
  406b0f:	add    BYTE PTR [ebp-0x4d00087c],cl
  406b15:	inc    ecx
  406b16:	retf   0xa510
  406b19:	mov    esp,0xccf6ec83
  406b1e:	not    DWORD PTR [ebx-0x45]
  406b21:	mov    ebx,0x4dfedb23
  406b26:	add    al,0xff
  406b28:	jne    0x406b3c
  406b2a:	dec    ebp
  406b2b:	clc    
  406b2c:	and    bl,BYTE PTR [ebp+0x24a88f00]
  406b32:	iret   
  406b33:	inc    ebp
  406b34:	stc    
  406b35:	xchg   edi,eax
  406b36:	or     BYTE PTR [eax],al
  406b38:	gs push ss
  406b3a:	xor    eax,0x8597114
  406b3f:	add    BYTE PTR [ecx+0x3d7d8bc4],bl
  406b45:	xchg   ebx,eax
  406b46:	jl     0x406b9e
  406b48:	mov    al,ds:0x8f50f84d
  406b4d:	cdq    
  406b4e:	bound  eax,QWORD PTR [eax]
  406b50:	(bad)  
  406b51:	cwde   
  406b52:	mov    edi,DWORD PTR [ebp+0x15]
  406b55:	xchg   ebx,eax
  406b56:	jl     0x406b5d
  406b58:	mov    dl,0x9d
  406b5a:	sbb    bl,ch
  406b5c:	mul    DWORD PTR [eax+0x13f56a08]
  406b62:	dec    ebp
  406b63:	clc    
  406b64:	adc    eax,0x21141d22
  406b69:	pop    eax
  406b6a:	or     BYTE PTR [ebx],cl
  406b6c:	mov    ch,0x9c
  406b6e:	daa    
  406b6f:	xor    DWORD PTR [eax],0x27
  406b72:	or     BYTE PTR [eax+eax*1+0x0],dh
	...
  406b86:	add    BYTE PTR [eax],al
  406b88:	mov    esp,0x5e0c4d7d
  406b8d:	push   ebp
  406b8e:	clc    
  406b8f:	cmp    ecx,DWORD PTR [ebp+esi*8-0x6eb0e8ef]
  406b96:	ja     0x406c0d
  406b98:	rol    BYTE PTR [ecx+0x30070819],0x9b
  406b9f:	jecxz  0x406b2f
  406ba1:	cli    
  406ba2:	outs   dx,BYTE PTR ds:[esi]
  406ba3:	mov    ecx,DWORD PTR [ecx-0x1f]
  406ba6:	cdq    
  406ba7:	jne    0x406b45
  406ba9:	test   DWORD PTR [ebx],ecx
  406bab:	call   FWORD PTR [ecx]
  406bad:	jmp    0xec8d5244
  406bb2:	or     cl,BYTE PTR [ebx+0x5b3aaf4f]
  406bb8:	inc    ebp
  406bb9:	sub    dh,bh
  406bbb:	(bad)  
  406bbc:	fadd   DWORD PTR [edx+0x48508397]
  406bc2:	ds push esi
  406bc4:	mov    ebx,0xcd506b53
  406bc9:	jmp    0x406b5d
  406bcb:	ins    BYTE PTR es:[edi],dx
  406bcc:	dec    ebp
  406bcd:	in     al,dx
  406bce:	or     cl,BYTE PTR [ebx-0x3bfd09c]
  406bd4:	mov    ebx,gs
  406bd6:	or     al,BYTE PTR [eax]
  406bd8:	xchg   DWORD PTR [ebx],ebp
  406bda:	pop    ds
  406bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bdd:	jb     0x406c1a
  406bdf:	inc    ecx
  406be0:	mov    WORD PTR [edx-0x13b30b6c],ds
  406be6:	or     cl,BYTE PTR [ebx]
  406be8:	dec    esp
  406be9:	loopne 0x406bd4
  406beb:	mov    al,BYTE PTR [eax]
	...
  406bfd:	add    BYTE PTR [eax],al
  406bff:	add    BYTE PTR [esp+eiz*8],bl
  406c02:	inc    esi
  406c03:	push   eax
  406c04:	dec    ebp
  406c05:	jmp    0x406c44
  406c07:	call   0x4c17fb
  406c0c:	xchg   DWORD PTR [ebx+0x54071e1f],ebp
  406c12:	mov    BYTE PTR [ebp-0x18],al
  406c15:	sbb    edx,DWORD PTR [ebx+0xaebccec]
  406c1b:	push   eax
  406c1c:	fist   DWORD PTR [esi+esi*1-0x1effae7a]
  406c23:	pop    ss
  406c24:	xchg   esi,eax
  406c25:	cmp    al,0xe0
  406c27:	add    ecx,DWORD PTR [esp+edx*4-0x34a8ce5a]
  406c2e:	and    DWORD PTR [ebx-0x74],ecx
  406c31:	xchg   esp,eax
  406c32:	loope  0x406c37
  406c34:	dec    ebx
  406c35:	pop    esi
  406c36:	call   0xf9f:0x6a67cfbc
  406c3d:	fnop   
  406c3f:	test   DWORD PTR [ecx-0x1c],edx
  406c42:	cmp    DWORD PTR [ebx-0x74],eax
  406c45:	xchg   esp,eax
  406c46:	push   ebp
  406c47:	test   BYTE PTR [esi],0xbf
  406c4a:	mov    ebp,0xe194cd3d
  406c4f:	pop    ss
  406c50:	test   DWORD PTR [ecx],edx
  406c52:	hlt    
  406c53:	stos   DWORD PTR es:[edi],eax
  406c54:	xlat   BYTE PTR ds:[ebx]
  406c55:	push   ebx
  406c56:	loope  0x406c5b
  406c58:	fst    DWORD PTR [ebp-0x6b73fc87]
  406c5e:	loope  0x406c1a
  406c60:	dec    edi
  406c61:	cvttps2pi mm1,QWORD PTR [esi+0x0]
	...
  406c78:	push   edx
  406c79:	xchg   esp,eax
  406c7a:	loope  0x406c45
  406c7c:	int3   
  406c7d:	xchg   ebx,eax
  406c7e:	loope  0x406c49
  406c80:	int3   
  406c81:	xchg   edx,eax
  406c82:	loope  0x406c4d
  406c84:	int3   
  406c85:	xchg   ecx,eax
  406c86:	loope  0x406c51
  406c88:	int3   
  406c89:	cwde   
  406c8a:	loope  0x406c55
  406c8c:	int3   
  406c8d:	xchg   edi,eax
  406c8e:	in     al,dx
  406c8f:	jle    0x406c62
  406c91:	or     BYTE PTR [ecx-0x1e9573e3],dh
  406c97:	sbb    eax,0x1de16a8c
  406c9c:	mov    WORD PTR [edx-0x1f],gs
  406c9f:	sbb    ebp,DWORD PTR [edx+edx*4-0x4b99fc1f]
  406ca6:	fild   DWORD PTR ds:0x33085719
  406cac:	cwde   
  406cad:	std    
  406cae:	sbb    al,0x19
  406cb0:	cdq    
  406cb1:	push   ebx
  406cb2:	or     dl,dh
  406cb4:	iret   
  406cb5:	xchg   BYTE PTR [edx],cl
  406cb7:	xor    cl,dl
  406cb9:	aam    0x4c
  406cbb:	sbb    DWORD PTR [eax+0x3ae90894],ecx
  406cc1:	push   edi
  406cc2:	clc    
  406cc3:	cdq    
  406cc4:	sbb    al,0x87
  406cc6:	cld    
  406cc7:	xchg   ebx,eax
  406cc8:	(bad)  
  406cc9:	std    
  406cca:	sbb    al,0x1d
  406ccc:	popa   
  406ccd:	push   ebx
  406cce:	or     dl,ah
  406cd0:	iret   
  406cd1:	xchg   BYTE PTR [edi],cl
  406cd3:	scas   al,BYTE PTR es:[edi]
  406cd4:	dec    edx
  406cd5:	add    al,0x8
  406cd7:	jmp    0x5d38016b
	...
  406cf0:	and    al,0xfc
  406cf2:	sbb    al,0xb1
  406cf4:	mov    eax,0xca720855
  406cf9:	add    al,0xc1
  406cfb:	stos   BYTE PTR es:[edi],al
  406cfc:	mov    ds:0x4b6ae40f,al
  406d01:	or     eax,0x64d82485
  406d06:	pusha  
  406d07:	or     bl,BYTE PTR [eax-0x656ef7ab]
  406d0d:	div    dh
  406d0f:	xchg   esi,eax
  406d10:	jg     0x406ca1
  406d12:	enter  0x8615,0x17
  406d16:	jne    0x406d89
  406d18:	cmp    eax,DWORD PTR [ebx+0x4d26c63]
  406d1e:	pop    eax
  406d1f:	and    edx,0x12e907d4
  406d25:	aad    0x6f
  406d27:	(bad)  
  406d28:	mov    WORD PTR [edx+0x4d],es
  406d2b:	pop    esi
  406d2c:	mov    edi,0x1dacbe8b
  406d31:	gs pop es
  406d33:	xchg   edi,eax
  406d34:	push   edx
  406d35:	stc    
  406d36:	push   edi
  406d37:	add    dl,bh
  406d39:	pop    ebp
  406d3a:	dec    ebp
  406d3b:	cld    
  406d3c:	add    eax,0x9e45be95
  406d41:	mov    DWORD PTR [edi],0x580a30b6
  406d47:	rdpmc  
  406d49:	push   edx
  406d4a:	icebp  
  406d4b:	push   eax
  406d4c:	mov    edx,0x5f84d5d
  406d51:	xchg   ebp,eax
  406d52:	mov    edi,0x45
	...
  406d67:	add    BYTE PTR [ebx-0x1f48f839],ah
  406d6d:	and    ebx,DWORD PTR [eax-0x1]
  406d70:	and    BYTE PTR [edi],ah
  406d72:	pusha  
  406d73:	push   0x8d085705
  406d78:	lock jnp 0x406dd3
  406d7b:	call   0x483e8b
  406d80:	test   ah,0x3b
  406d83:	lea    esi,[eax-0x6417a7ec]
  406d89:	dec    ebx
  406d8a:	or     BYTE PTR [eax],al
  406d8c:	xchg   ebp,eax
  406d8d:	adc    eax,0x98858c4d
  406d92:	imul   edx,DWORD PTR [eax-0x4c],0xffffff90
  406d96:	loopne 0x406d85
  406d98:	inc    ebp
  406d99:	or     esi,edi
  406d9b:	call   0x37aa21
  406da0:	cld    
  406da1:	(bad)  
  406da2:	pop    esp
  406da3:	mov    ecx,DWORD PTR [ecx]
  406da5:	adc    esp,ecx
  406da7:	sub    al,0xa
  406da9:	or     esi,edi
  406dab:	push   ebx
  406dac:	xchg   edx,eax
  406dad:	sahf   
  406dae:	or     BYTE PTR [edx+0x35],ch
  406db1:	or     bh,BYTE PTR [ebp+0x8]
  406db4:	or     eax,0xaaffd917
  406db9:	jns    0x406e08
  406dbb:	cld    
  406dbc:	cmp    eax,0x2bef0890
  406dc1:	or     edi,DWORD PTR [ebp+0x8]
  406dc4:	mov    WORD PTR [ebp-0x58],ss
  406dc7:	sar    bl,1
  406dc9:	dec    ecx
  406dca:	adc    al,0x9c
	...
  406de0:	mov    ebp,gs
  406de2:	or     cl,BYTE PTR [ebp-0x7a32ef]
  406de8:	jecxz  0x406e06
  406dea:	xchg   ebx,eax
  406deb:	pop    eax
  406dec:	shr    BYTE PTR [ecx+0xd09c787],0x86
  406df3:	dec    ebx
  406df5:	js     0x406e03
  406df7:	add    BYTE PTR [eax+esi*2-0x76449f7f],cl
  406dfe:	xchg   DWORD PTR [eax-0x5c],edx
  406e01:	dec    eax
  406e02:	inc    edi
  406e03:	add    BYTE PTR [esi+eiz*8+0x6fbe2bb3],cl
  406e0a:	pop    ecx
  406e0b:	je     0x406da8
  406e0d:	jmp    0x6dc05997
  406e12:	(bad)  
  406e13:	inc    DWORD PTR [eax]
  406e15:	icebp  
  406e16:	inc    eax
  406e17:	add    DWORD PTR [ebx+ebp*8+0x605e0b0a],ecx
  406e1e:	or     eax,esi
  406e20:	mov    ebp,ebx
  406e22:	dec    ebp
  406e23:	inc    ecx
  406e24:	or     eax,0x8c008ad5
  406e29:	jmp    0x406e43
  406e2b:	in     eax,0x87
  406e2d:	sub    ebx,DWORD PTR [edi]
  406e2f:	push   ss
  406e30:	in     al,0xf
  406e32:	or     eax,DWORD PTR [eax]
  406e34:	mov    WORD PTR [eax-0x80],gs
  406e37:	pusha  
  406e38:	inc    ebx
  406e39:	and    eax,DWORD PTR [esi-0xb5ec4b0]
  406e3f:	out    0xf0,eax
  406e41:	sbb    eax,DWORD PTR [esi+0xff]
	...
  406e57:	add    BYTE PTR [edi],dh
  406e59:	call   0xebf66e6e
  406e5e:	test   DWORD PTR [ebp-0x7c],esi
  406e61:	adc    edx,DWORD PTR [ebp-0x30]
  406e64:	adc    edx,DWORD PTR [ebp-0x8266492]
  406e6a:	push   ebp
  406e6b:	mov    ds,WORD PTR [ecx+edi*8-0x2d]
  406e6f:	sti    
  406e70:	rep outs dx,BYTE PTR ds:[esi]
  406e72:	xor    DWORD PTR [esi+0x7e16cf3],ecx
  406e78:	mov    WORD PTR [ecx+ebx*2+0x3df9bfc5],ss
  406e7f:	jl     0x406e92
  406e81:	pop    ecx
  406e82:	es mov ss,ebx
  406e85:	ins    BYTE PTR es:[edi],dx
  406e86:	add    cl,BYTE PTR cs:[esp+edx*4-0x69fa7ea]
  406e8e:	sbb    eax,0xf196248e
  406e93:	add    ecx,DWORD PTR [esp+ebp*2-0x6b73f81f]
  406e9a:	sbb    eax,ebp
  406e9c:	loop   0x406e32
  406e9e:	loope  0x406ed3
  406ea0:	fwait
  406ea1:	aas    
  406ea2:	test   DWORD PTR [esi+0x17edf993],ecx
  406ea8:	xchg   esp,eax
  406ea9:	in     al,dx
  406eaa:	dec    ebp
  406eab:	mov    ah,0x83
  406ead:	stc    
  406eae:	dec    eax
  406eaf:	lea    ecx,[edi+0x398ce194]
  406eb5:	pop    eax
  406eb6:	into   
  406eb7:	lea    ebp,[ebx+0x6c]
  406eba:	loopne 0x406eaf
	...
  406ed0:	arpl   cx,di
  406ed2:	dec    eax
  406ed3:	add    al,0x90
  406ed5:	xchg   esp,eax
  406ed6:	loope  0x406e73
  406ed8:	push   eax
  406ed9:	cmp    ah,cl
  406edb:	add    ebx,esp
  406edd:	stc    
  406ede:	pop    ebx
  406edf:	xor    BYTE PTR [ebx-0x7],al
  406ee2:	popf   
  406ee3:	(bad)  
  406ee4:	ror    DWORD PTR [ecx+ecx*4-0x7206bc32],0x9c
  406eec:	push   ecx
  406eed:	div    DWORD PTR [ebp-0x73]
  406ef0:	mov    esp,0x17fc07f9
  406ef5:	icebp  
  406ef6:	icebp  
  406ef7:	sahf   
  406ef8:	add    ecx,edi
  406efa:	fistp  QWORD PTR [eax+0x6cf6f919]
  406f00:	or     ebx,DWORD PTR [edi+esi*8+0x56]
  406f04:	or     DWORD PTR [eax+eiz*2-0x36],esp
  406f08:	mov    edi,0x1f510853
  406f0d:	hlt    
  406f0e:	idiv   BYTE PTR [esi]
  406f10:	subps  xmm6,XMMWORD PTR ds:0xf909
  406f16:	mov    ch,BYTE PTR [esp+edx*4-0x7]
  406f1a:	mul    BYTE PTR [esi]
  406f1c:	nop
  406f1d:	or     BYTE PTR [ebp+0x6a],0x53
  406f21:	pop    esp
  406f22:	not    DWORD PTR [esi]
  406f24:	or     DWORD PTR [eax+0xf0ccd7a],esp
  406f2a:	push   eax
  406f2b:	push   es
  406f2c:	sbb    ecx,edi
  406f2e:	or     edi,esi
  406f30:	cmp    bl,BYTE PTR [edi+esi*8-0xa]
	...
  406f48:	or     cl,bh
  406f4a:	jl     0x406f2d
  406f4c:	test   DWORD PTR [eax-0x39],0xa51418e6
  406f53:	inc    ecx
  406f54:	adc    eax,edi
  406f56:	imul   ch
  406f58:	xchg   ebp,eax
  406f59:	div    esi
  406f5b:	push   esp
  406f5c:	jo     0x406f4e
  406f5e:	lods   eax,DWORD PTR ds:[esi]
  406f5f:	mov    dh,0x18
  406f61:	clc    
  406f62:	div    BYTE PTR [edi+esi*4-0x9]
  406f66:	div    BYTE PTR [esi-0x51a3bdf8]
  406f6c:	add    al,bh
  406f6e:	neg    BYTE PTR [eax+ecx*2]
  406f71:	lock scas al,BYTE PTR es:[edi]
  406f73:	scas   al,BYTE PTR es:[edi]
  406f74:	adc    al,bh
  406f76:	loop   0x406f5d
  406f78:	xchg   ebp,eax
  406f79:	xchg   esp,eax
  406f7a:	(bad)  
  406f7b:	jmp    0x40f180
  406f80:	std    
  406f81:	dec    ebp
  406f82:	(bad)  
  406f83:	jmp    DWORD PTR [edx-0x5dab42f8]
  406f89:	or     bh,dh
  406f8b:	call   0x37b57d
  406f90:	jb     0x406ff0
  406f92:	push   esp
  406f93:	jmp    DWORD PTR [edx+0x8]
  406f96:	loopne 0x406f55
  406f98:	mov    bh,0x8
  406f9a:	imul   DWORD PTR [ebx]
  406f9c:	mov    esi,0x3450a79b
  406fa1:	xchg   esp,eax
  406fa2:	loopne 0x406fdf
  406fa4:	arpl   WORD PTR [ebx-0x289776f8],dx
  406faa:	cmc    
  406fab:	inc    DWORD PTR [eax]
	...
  406fbd:	add    BYTE PTR [eax],al
  406fbf:	add    BYTE PTR [edx+0x722cb514],ah
  406fc5:	or     bh,dh
  406fc7:	add    BYTE PTR [ecx],bl
  406fc9:	jmp    0xff08:0x52f59b6e
  406fd0:	pop    eax
  406fd1:	xlat   BYTE PTR ds:[ebx]
  406fd2:	cmc    
  406fd3:	call   DWORD PTR [edx-0x4a424be5]
  406fd9:	xchg   ebx,eax
  406fda:	add    eax,eax
  406fdc:	sbb    ebp,edi
  406fde:	adc    DWORD PTR [ebp-0x8f72b],0xffffffc7
  406fe5:	or     ebx,eax
  406fe7:	inc    ebx
  406fe8:	jle    0x407010
  406fea:	jge    0x406ff8
  406fec:	lock adc eax,0xb42ff38
  406ff2:	pop    eax
  406ff3:	call   0x48bd3d
  406ff8:	mov    edi,0x558583f4
  406ffd:	or     dh,bh
  406fff:	push   DWORD PTR [ebp+0xb]
  407002:	jge    0x40700c
  407004:	sbb    eax,0x22ffc7b6
  407009:	or     edi,DWORD PTR [ebp-0x4]
  40700c:	mov    WORD PTR [esi],ds
  40700e:	sbb    DWORD PTR [eax],ecx
  407010:	and    al,0x3f
  407012:	mov    bl,0xff
  407014:	sub    ebp,DWORD PTR [esi-0xeb136d9]
  40701a:	or     dl,BYTE PTR [ebp+0x7]
  40701d:	adc    DWORD PTR [ebp-0x7c81db3c],ecx
  407023:	inc    DWORD PTR [eax]
	...
  407035:	add    BYTE PTR [eax],al
  407037:	add    BYTE PTR [ecx],bl
  407039:	sub    BYTE PTR [edi-0x11ffcb0],cl
  40703f:	inc    cl
  407041:	mov    ds:0x558c4135,eax
  407046:	adc    eax,0xf5ed8cbe
  40704b:	mov    edi,0xab7093
  407050:	mov    ebp,gs
  407052:	leave  
  407053:	inc    ebp
  407054:	aam    0xec
  407056:	or     al,BYTE PTR [eax]
  407058:	mov    WORD PTR [esi-0x123c0bb7],fs
  40705e:	or     al,BYTE PTR [eax]
  407060:	es in  eax,dx
  407062:	adc    al,0x0
  407064:	add    DWORD PTR [eax-0x70],esi
  407067:	imul   DWORD PTR [ebx-0x7395c373]
  40706d:	push   0x703cf449
  407072:	mov    esp,esi
  407074:	fwait
  407075:	in     eax,0x81
  407077:	push   eax
  407078:	mov    ebx,DWORD PTR [ecx-0x7c]
  40707b:	(bad)  
  40707c:	stc    
  40707d:	xlat   BYTE PTR ds:[ebx]
  40707e:	xchg   edx,eax
  40707f:	push   esp
  407080:	cmp    ch,ah
  407082:	or     cl,BYTE PTR [ebx]
  407084:	dec    esp
  407085:	pusha  
  407086:	or     ecx,ebp
  407088:	xor    esp,ebp
  40708a:	or     al,BYTE PTR [eax]
  40708c:	vmwrite ebx,DWORD PTR [edi+0xc3f5bf7]
  407093:	je     0x407017
  407095:	push   0x40
  407097:	in     al,dx
  407098:	inc    ebx
  407099:	xchg   ebp,eax
  40709a:	scas   al,BYTE PTR es:[edi]
  40709b:	mov    al,BYTE PTR [eax]
	...
  4070ad:	add    BYTE PTR [eax],al
  4070af:	add    BYTE PTR [ebx-0x2e751380],cl
  4070b5:	cld    
  4070b6:	mov    DWORD PTR [ecx-0x5c],edx
  4070b9:	retf   
  4070ba:	das    
  4070bb:	inc    ebp
  4070bc:	mov    WORD PTR [edi],es
  4070be:	fs (bad) 
  4070c0:	sbb    esi,esi
  4070c2:	jne    0x4070f7
  4070c4:	and    al,0x54
  4070c6:	aas    
  4070c7:	add    ecx,DWORD PTR [ecx+ecx*4+0x77d0fa1]
  4070ce:	fs fwait
  4070d0:	sti    
  4070d1:	cmc    
  4070d2:	push   ebp
  4070d3:	xor    ecx,DWORD PTR [ecx]
  4070d5:	adc    BYTE PTR [ebp-0x6e],dl
  4070d8:	repz cmc 
  4070da:	mov    al,0x8a
  4070dc:	popa   
  4070dd:	mov    BYTE PTR [esi-0x30],cl
  4070e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e1:	dec    ebx
  4070e2:	mov    al,ds:0x14cfe403
  4070e7:	mov    dl,bl
  4070e9:	mov    DWORD PTR [ecx],esp
  4070eb:	minps  xmm1,XMMWORD PTR [ebx]
  4070ee:	fs xchg ebx,eax
  4070f0:	mov    ebx,0x8d1b15f5
  4070f5:	xchg   esp,eax
  4070f6:	push   cs
  4070f7:	dec    ecx
  4070f8:	mov    bl,0x7f
  4070fa:	jmp    0xe06c49a
  4070ff:	mov    cl,BYTE PTR [edi]
  407101:	cmp    BYTE PTR ds:0xdff59b92,al
  407107:	adc    BYTE PTR [eax+0x18ae16a],al
  40710d:	(bad)  
  40710e:	fnop   
  407110:	push   ecx
  407111:	cmc    
  407112:	aad    0x9d
	...
  407128:	xchg   BYTE PTR [edx-0x20],ch
  40712b:	mov    cl,bh
  40712d:	mov    ecx,cs
  40712f:	fcomp  QWORD PTR [ecx-0xb]
  407132:	int    0x89
  407134:	sbb    esp,ebp
  407136:	mov    ebp,0x7f55b89
  40713b:	jl     0x407135
  40713d:	cld    
  40713e:	imul   BYTE PTR [esi-0x6eff80eb]
  407144:	add    dh,0xf6
  407147:	sahf   
  407148:	add    eax,0x59ef83f
  40714d:	cmc    
  40714e:	fbstp  TBYTE PTR [ecx]
  407150:	fcomip st,st(4)
  407152:	test   BYTE PTR [esi-0x2e1f039d],0x4
  407159:	cmc    
  40715a:	div    BYTE PTR [esi-0x7d]
  40715d:	clc    
  40715e:	fcomip st,st(5)
  407160:	push   edx
  407161:	xchg   esp,eax
  407162:	or     BYTE PTR [eax],dh
  407164:	retf   0x88b
  407167:	mov    ah,0x78
  407169:	call   0xfd6c9ef6
  40716e:	test   BYTE PTR [esi+0x63],0x4f
  407172:	hlt    
  407173:	cdq    
  407174:	adc    al,0x7f
  407176:	add    al,0x3e
  407178:	retf   
  407179:	mov    edx,0xec8fa841
  40717e:	push   edx
  40717f:	ins    BYTE PTR es:[edi],dx
  407180:	nop
  407181:	xchg   esp,eax
  407182:	add    ebp,DWORD PTR [ecx]
  407184:	lds    ecx,FWORD PTR [edi]
  407186:	pop    ebx
  407187:	call   0xad10061b
	...
  4071a0:	pop    es
  4071a1:	xchg   esp,eax
  4071a2:	or     cl,ch
  4071a4:	(bad)  
  4071a5:	int    0x4c
  4071a7:	std    
  4071a8:	adc    al,0x8d
  4071aa:	or     cl,ch
  4071ac:	jns    0x407142
  4071ae:	(bad)  
  4071af:	jmp    0xe9a30625
  4071b4:	add    bl,BYTE PTR [edx-0x4]
  4071b7:	cmp    ebx,edi
  4071b9:	sbb    esp,edi
  4071bb:	(bad)  
  4071bc:	add    al,0xf4
  4071be:	push   edi
  4071bf:	(bad)  
  4071c0:	sub    ah,0xf6
  4071c3:	push   esp
  4071c4:	adc    al,0xfd
  4071c6:	and    al,0x0
  4071c8:	or     BYTE PTR [eax-0x5bdaf4f8],bl
  4071ce:	or     eax,0x89733e9
  4071d3:	add    ch,cl
  4071d5:	out    0x3f,al
  4071d7:	inc    ecx
  4071d8:	xor    eax,0x1d0c7d1d
  4071dd:	sahf   
  4071de:	fdiv   st(7),st
  4071e0:	sbb    ch,BYTE PTR [eax+0x72c8d083]
  4071e6:	cld    
  4071e7:	test   DWORD PTR [edx],0xfd52581d
  4071ed:	(bad)  
  4071ee:	fdiv   st(7),st
  4071f0:	call   0xf71c:0x82f08d6e
  4071f7:	call   0x3799ad
  4071fc:	fist   WORD PTR [edi+0x5734b260]
  407202:	or     bh,bh
	...
  407218:	add    BYTE PTR [eax],cl
  40721a:	(bad)  
  40721b:	dec    DWORD PTR [edx+0x1c]
  40721e:	cmp    eax,0x8571c3a
  407223:	call   0x379ac9
  407228:	sub    al,0x72
  40722a:	in     al,dx
  40722b:	imul   DWORD PTR [edx+0x1c]
  40722e:	bound  eax,QWORD PTR [eax]
  407230:	sbb    eax,0xa5415961
  407235:	sbb    al,0xbd
  407237:	lock sbb BYTE PTR [edi+esi*8],0xff
  40723c:	loopne 0x40721f
  40723e:	aas    
  40723f:	inc    ecx
  407240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407241:	(bad)  
  407243:	rcr    DWORD PTR [edx-0x767a7ee5],cl
  407249:	and    esi,edi
  40724b:	(bad)  
  40724c:	fistp  WORD PTR [eax+0x59b4c460]
  407252:	or     bh,bh
  407254:	mov    WORD PTR [eax],ss
  407256:	pushf  
  407257:	imul   DWORD PTR [ebx-0x1e]
  40725a:	mov    ?,WORD PTR ds:0x4da4a6
  407260:	fs gs mov ebx,0x897453ff
  407267:	call   0x83cfb4af
  40726c:	add    DWORD PTR [ecx],esp
  40726e:	xchg   edi,edi
  407270:	cmp    edi,ebp
  407272:	push   es
  407273:	dec    ecx
  407274:	cmovs  edx,DWORD PTR [eax+0xc222bf7]
  40727b:	je     0x40727d
	...
  40728d:	add    BYTE PTR [eax],al
  40728f:	add    ah,cl
  407291:	jle    0x4072d4
  407293:	call   0xcfe4bb
  407298:	cwde   
  407299:	xor    dl,BYTE PTR [ebx]
  40729b:	add    BYTE PTR [edx+esi*2-0x1a8600b2],cl
  4072a2:	xchg   edx,eax
  4072a3:	repz enter 0x8f51,0xff
  4072a8:	cmp    DWORD PTR [ecx-0x79],ebx
  4072ab:	(bad)  
  4072ac:	jmp    0x40730f
  4072ae:	sbb    DWORD PTR [eax],ecx
  4072b0:	hlt    
  4072b1:	inc    ecx
  4072b2:	mov    al,0xff
  4072b4:	(bad)  [ecx-0x562417a7]
  4072ba:	(bad)  
  4072bb:	inc    DWORD PTR [ecx-0xb]
  4072be:	xchg   edx,eax
  4072bf:	cmp    ecx,edx
  4072c1:	mov    ecx,0x9901ff8f
  4072c6:	xchg   edi,edi
  4072c8:	mov    bl,0x89
  4072ca:	sbb    DWORD PTR [eax],ecx
  4072cc:	mov    ah,0xd5
  4072ce:	scas   eax,DWORD PTR es:[edi]
  4072cf:	jmp    DWORD PTR [ebx-0x5c1ba667]
  4072d5:	icebp  
  4072d6:	(bad)  
  4072d7:	call   0xffd0005d
  4072dc:	mov    ebp,DWORD PTR [ecx-0x6a7c0870]
  4072e2:	out    dx,al
  4072e3:	fwait
  4072e4:	mov    es,esp
  4072e6:	aad    0x86
  4072e8:	jae    0x407312
  4072ea:	leave  
  4072eb:	mov    gs,WORD PTR [ebx-0xe]
  4072ee:	enter  0x538e,0xf2
  4072f2:	int    0x86
	...
  407308:	and    ebp,esp
  40730a:	mov    ebp,0x33f25386
  40730f:	cld    
  407310:	xor    edi,DWORD PTR [eax]
  407312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407313:	xchg   BYTE PTR [ebx-0xe],al
  407316:	push   ebx
  407317:	xchg   ebx,eax
  407318:	inc    ebx
  407319:	repnz xchg ebp,eax
  40731b:	fwait
  40731c:	push   edx
  40731d:	loop   0x4072bc
  40731f:	xchg   BYTE PTR [ebx],ch
  407321:	pop    eax
  407322:	cdq    
  407323:	pushf  
  407324:	loopne 0x407318
  407326:	lea    eax,[esi-0x648a97e5]
  40732c:	push   ss
  40732d:	cs loope 0x407333
  407330:	aad    0xd6
  407332:	call   0x5d5dcc3a
  407337:	adc    al,0xf0
  40733a:	fiadd  DWORD PTR [ebx]
  40733c:	xchg   bx,ax
  40733e:	pop    esi
  40733f:	adc    BYTE PTR [esp+edi*8-0xe1c48b0],dl
  407346:	ja     0x407388
  407348:	fdivr  DWORD PTR [edx+edi*1+0x33]
  40734c:	dec    ebp
  40734d:	xchg   esp,eax
  40734e:	adc    BYTE PTR ds:[esp+edi*8-0xe3c7a34],dl
  407356:	cwde   
  407357:	cdq    
  407358:	pop    esp
  407359:	push   ebx
  40735a:	loope  0x4072e2
  40735c:	cmp    DWORD PTR [ecx+ecx*1+0x5f1aa2e],ebx
  407363:	sbb    edx,DWORD PTR [esi-0x64fc5fbd]
  407369:	addr16 stc 
  40736b:	fwait
	...
  407380:	inc    esi
  407381:	repnz pop es
  407383:	not    BYTE PTR [ecx]
  407385:	jl     0x4073c0
  407387:	cwde   
  407388:	enter  0xf794,0x5c
  40738c:	js     0x407387
  40738e:	fmul   QWORD PTR es:[ecx]
  407391:	icebp  
  407392:	pop    edi
  407393:	xor    BYTE PTR [edi-0x6c31f7ad],bl
  407399:	pushf  
  40739a:	loopne 0x4073a7
  40739c:	adc    esi,ecx
  40739e:	not    BYTE PTR [ecx+0xe]
  4073a1:	inc    ebx
  4073a2:	dec    ecx
  4073a3:	jmp    0xc140dab8
  4073a8:	xor    esi,eax
  4073aa:	mul    BYTE PTR [esi-0x610b98ef]
  4073b0:	sbb    DWORD PTR [eax+eiz*8-0x90f1b4d],0xffffffa0
  4073b8:	dec    esi
  4073b9:	cwde   
  4073ba:	or     BYTE PTR [edx*4-0x7016a000],bl
  4073c1:	add    DWORD PTR [esi-0x85f648a],esi
  4073c7:	hlt    
  4073c8:	pop    es
  4073c9:	stc    
  4073ca:	pop    ecx
  4073cb:	pop    esp
  4073cc:	adc    ecx,esi
  4073ce:	shr    BYTE PTR [ebx],0xf0
  4073d1:	lock pop ebx
  4073d3:	bound  eax,QWORD PTR [edx*1-0x5e70228b]
  4073da:	mov    WORD PTR [ebx],cs
  4073dc:	(bad)  
  4073dd:	xchg   esp,eax
  4073de:	or     BYTE PTR [esi],bh
  4073e0:	and    DWORD PTR [eax+0xb5e0],0x0
	...
  4073f7:	add    ch,dh
  4073f9:	lock mul dl
  4073fc:	iret   
  4073fd:	data16 sbb BYTE PTR [ecx-0x16b6a457],dl
  407404:	or     BYTE PTR [edi+0x4],ah
  407407:	add    DWORD PTR [edx+0x270ef6c5],esp
  40740d:	push   edi
  40740e:	add    al,0x0
  407410:	call   DWORD PTR [eax+eiz*2+0x855f4ee]
  407417:	push   0x49a37c
  40741c:	jb     0x4073fd
  40741e:	xor    BYTE PTR [ecx-0x5c],cl
  407421:	cwde   
  407422:	loopne 0x40743d
  407424:	aaa    
  407425:	sbb    edi,esi
  407427:	or     esi,DWORD PTR ds:0xa55016a0
  40742d:	sbb    DWORD PTR [ebp+0xc],edi
  407430:	cmp    eax,0x12ffda66
  407435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407436:	pop    eax
  407437:	dec    DWORD PTR [eax-0xd6e1110]
  40743d:	sbb    bh,dh
  40743f:	call   0x379e4d
  407444:	sbb    eax,0x2ffc639
  407449:	mov    cs,WORD PTR [eax]
  40744b:	push   0x49a2a3
  407450:	jge    0x40746d
  407452:	pop    ecx
  407453:	inc    ecx
  407454:	and    eax,0xf5000a8c
  407459:	adc    esp,eax
  40745b:	loope  0x40745d
	...
  40746d:	add    BYTE PTR [eax],al
  40746f:	add    BYTE PTR [ecx+ebx*1],ah
  407472:	test   DWORD PTR [ebx],0x50169fa5
  407478:	xor    eax,0x4d0c7d19
  40747d:	mov    ebp,0xa352ffda
  407482:	pop    eax
  407483:	call   FWORD PTR [eax]
  407485:	in     al,dx
  407486:	out    dx,al
  407487:	pop    ecx
  407488:	xchg   edx,eax
  407489:	sbb    bh,dh
  40748b:	call   0x379ea1
  407490:	dec    ebp
  407491:	push   eax
  407492:	(bad)  
  407493:	push   DWORD PTR [edx-0x73]
  407496:	or     BYTE PTR [eax-0x7d],ch
  407499:	mov    ds:0x158c0049,al
  40749e:	out    dx,eax
  40749f:	push   ecx
  4074a0:	dec    ebp
  4074a1:	std    
  4074a2:	mov    esi,DWORD PTR ds:0x4a2456
  4074a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a9:	inc    ebp
  4074aa:	mov    edx,0xcaf28bff
  4074af:	je     0x407453
  4074b1:	or     eax,0xea01ff3b
  4074b6:	bound  esp,QWORD PTR [ecx]
  4074b8:	pop    esi
  4074b9:	into   
  4074ba:	mov    dl,BYTE PTR [eax-0x44]
  4074bd:	(bad)  
  4074be:	lock pop es
  4074c0:	je     0x40745f
  4074c2:	mov    edi,edi
  4074c4:	pop    ebx
  4074c5:	(bad)  
  4074c8:	push   ebx
  4074c9:	cs outs dx,BYTE PTR fs:[esi]
  4074cc:	pop    edx
  4074cd:	mov    ebp,DWORD PTR es:[edx-0x74]
  4074d1:	push   ebp
  4074d2:	jp     0x407525
	...
  4074e8:	int    0xfd
  4074ea:	loop   0x407507
  4074ec:	fidivr WORD PTR [esp+ecx*1+0xafd8e68]
  4074f3:	xor    BYTE PTR [ecx*4-0x1de400a3],0x4a
  4074fb:	je     0x40756f
  4074fd:	(bad)  
  4074fe:	fdiv   st(6),st
  407500:	cmp    ecx,0x7ddde962
  407506:	mov    edx,DWORD PTR [eax+0x5c]
  407509:	jbe    0x4074fc
  40750b:	pop    es
  40750c:	in     al,0x44
  40750e:	mov    bh,bh
  407510:	jmp    0x407566
  407512:	aaa    
  407513:	into   
  407514:	jecxz  0x407573
  407516:	fs ss retf 0x8b55
  40751b:	push   0xffcc0bc2
  407520:	retf   0x72f
  407523:	call   0xffcc00fc
  407528:	pop    esp
  407529:	xchg   esp,eax
  40752a:	mov    cl,0x82
  40752c:	cmp    DWORD PTR [ecx+ebx*1+0x1deeaa4b],ebx
  407533:	ins    BYTE PTR es:[edi],dx
  407534:	xchg   dh,bl
  407536:	add    eax,0xfd689b83
  40753b:	imul   edi,DWORD PTR [esi-0x22],0xfffffff5
  40753f:	adc    BYTE PTR [ebp-0x2d],0xe8
  407543:	add    ebx,ecx
  407545:	sbb    ebp,esi
  407547:	xchg   BYTE PTR [eax-0x17],dl
  40754a:	pop    edx
  40754b:	add    al,0x0
	...
  40755d:	add    BYTE PTR [eax],al
  40755f:	add    dh,ah
  407561:	xchg   edx,eax
  407562:	(bad)  
  407563:	clc    
  407564:	xchg   ebx,eax
  407565:	cld    
  407566:	adc    al,0x4f
  407568:	arpl   si,bp
  40756a:	addr16 enter 0x7d57,0xe4
  40756f:	add    al,0x8c
  407571:	xchg   esp,eax
  407572:	(bad)  [ecx]
  407574:	pop    edx
  407575:	out    dx,al
  407576:	mov    ebp,0x48ecc98c
  40757b:	or     BYTE PTR [ebp-0x467d1e6c],cl
  407581:	in     al,dx
  407582:	cwde   
  407583:	test   ch,ah
  407585:	xchg   esp,eax
  407586:	loope  0x407596
  407588:	dec    esp
  407589:	imul   edi,ebp,0xe1939040
  40758f:	add    ebx,DWORD PTR [ebx+0x3f8769f]
  407595:	out    dx,al
  407596:	repz or esi,esp
  407599:	sbb    al,0x67
  40759b:	cmp    bl,0xf9
  40759e:	clc    
  40759f:	cmp    BYTE PTR [ecx-0x14],0x58
  4075a3:	ret    0xedd9
  4075a6:	pop    ebp
  4075a7:	in     eax,dx
  4075a8:	stos   DWORD PTR es:[edi],eax
  4075a9:	cld    
  4075aa:	lock push ebp
  4075ac:	fucomi st,st(5)
  4075ae:	nop
  4075af:	sbb    BYTE PTR [ecx-0x64],0x59
  4075b3:	icebp  
  4075b4:	leave  
  4075b5:	in     eax,dx
  4075b6:	pop    es
  4075b7:	ss mov cl,0x8b
  4075ba:	loopne 0x4075a5
  4075bc:	popa   
  4075bd:	in     eax,dx
  4075be:	div    dl
  4075c0:	dec    edi
  4075c1:	push   0x911c
	...
  4075d6:	add    BYTE PTR [eax],al
  4075d8:	dec    ecx
  4075d9:	inc    ebx
  4075da:	dec    ecx
  4075db:	jmp    0x38c46b9f
  4075e0:	push   cs
  4075e1:	out    dx,al
  4075e2:	push   edi
  4075e3:	push   es
  4075e4:	xchg   esp,eax
  4075e5:	xchg   ebp,eax
  4075e6:	loopne 0x407596
  4075e8:	or     eax,0xaa83f6ed
  4075ed:	cld    
  4075ee:	call   0x32d840b
  4075f3:	test   eax,0xc3608174
  4075f8:	aas    
  4075f9:	push   esp
  4075fa:	or     BYTE PTR [ecx],bh
  4075fc:	lock jg 0x4075d8
  4075ff:	into   
  407600:	or     eax,0x803cf744
  407605:	cld    
  407606:	aaa    
  407607:	mov    edi,0xd561ed0d
  40760c:	mov    bh,0xd2
  40760e:	fsubr  DWORD PTR [esi+0x1dc8990d]
  407614:	xchg   esp,eax
  407615:	jl     0x4075e9
  407617:	cmp    BYTE PTR [edi-0x13],cl
  40761a:	inc    esi
  40761b:	cmp    DWORD PTR [esi],0x408ef6c4
  407621:	out    dx,al
  407622:	jl     0x407615
  407624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407625:	xor    esi,0x7e
  407628:	or     eax,0x6901087a
  40762d:	inc    ebx
  40762e:	dec    ecx
  40762f:	jmp    0xa899621b
  407634:	(bad)  
  407635:	in     eax,dx
  407636:	cmp    al,0x23
  407638:	xlat   BYTE PTR ds:[ebx]
  407639:	push   ebx
  40763a:	or     BYTE PTR [ecx+0x0],al
	...
  40764d:	add    BYTE PTR [eax],al
  40764f:	add    BYTE PTR [ecx-0x3fb10924],bh
  407655:	in     eax,dx
  407656:	jl     0x407658
  407658:	fnstsw WORD PTR [eax-0x7]
  40765b:	std    
  40765c:	mov    dl,BYTE PTR [ebx]
  40765e:	bound  eax,QWORD PTR [eax]
  407660:	int    0x62
  407662:	pop    ecx
  407663:	inc    ecx
  407664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407665:	clc    
  407666:	out    dx,eax
  407667:	push   ecx
  407668:	in     al,0x90
  40766a:	div    DWORD PTR ds:0x47d9af
  407670:	lea    esp,[edi-0x60750028]
  407676:	enter  0xb374,0x19
  40767a:	dec    ebp
  40767b:	hlt    
  40767c:	mov    ah,bl
  40767e:	cli    
  40767f:	inc    DWORD PTR [eax]
  407681:	mov    al,ds:0x1568b1e0
  407686:	idiv   edi
  407688:	shr    BYTE PTR [eax+eiz*8+0x1],1
  40768c:	cmp    BYTE PTR ds:0x756af7,dl
  407692:	jmp    0x771c:0x6090a451
  407699:	xlat   BYTE PTR ds:[ebx]
  40769a:	idiv   dh
  40769c:	inc    eax
  40769d:	stos   BYTE PTR es:[edi],al
  40769e:	inc    ecx
  40769f:	inc    ecx
  4076a0:	xor    eax,0xead00a80
  4076a5:	adc    al,0x58
  4076a7:	call   DWORD PTR [eax+0x8a0e098]
  4076ad:	adc    eax,0x356af7
  4076b2:	in     eax,0x51
	...
  4076c8:	fs nop
  4076ca:	pusha  
  4076cb:	sbb    al,0x77
  4076cd:	xlat   BYTE PTR ds:[ebx]
  4076ce:	idiv   dh
  4076d0:	inc    eax
  4076d1:	stos   BYTE PTR es:[edi],al
  4076d2:	inc    ecx
  4076d3:	inc    ecx
  4076d4:	cmc    
  4076d5:	jg     0x4076c1
  4076d7:	iret   
  4076d8:	push   0x14
  4076da:	add    eax,eax
  4076dc:	ror    DWORD PTR [ebp+0x14414581],1
  4076e2:	jge    0x4076d8
  4076e4:	mov    WORD PTR [edx-0x2],es
  4076e7:	pop    es
  4076e8:	in     al,0xdd
  4076ea:	jne    0x4076eb
  4076ec:	rcl    DWORD PTR [edx-0x2],cl
  4076ef:	repz mov ah,0x6d
  4076f2:	inc    edi
  4076f3:	inc    ebx
  4076f5:	xlat   BYTE PTR ds:[ebx]
  4076f6:	or     ch,BYTE PTR [eax-0x51]
  4076f9:	or     al,0xca
  4076fb:	jmp    FWORD PTR [ebx]
  4076fd:	mov    ah,0xda
  4076ff:	inc    eax
  407700:	mov    WORD PTR ds:0x7d8c000d,es
  407706:	arpl   WORD PTR [edx+0x50889acb],si
  40770c:	xchg   ebx,eax
  40770d:	push   0xe8dce803
  407712:	jbe    0x407713
  407714:	idiv   ch
  407716:	loop   0x407705
  407718:	fnstsw WORD PTR [ebx+ecx*1]
  40771b:	push   0xffcdac75
  407720:	repz dec DWORD PTR [edx]
  407723:	add    BYTE PTR [edx*8-0x25a43066],cl
  40772a:	add    al,al
	...
  407740:	fmul   st,st(3)
  407742:	add    DWORD PTR [ebp+0x40],0x2a
  407746:	icebp  
  407747:	repz inc ebx
  407749:	test   al,0x4
  40774b:	call   0xffb7afed
  407750:	xor    ecx,DWORD PTR [eax+0x39ade870]
  407756:	ja     0x407757
  407758:	mov    dh,0xfd
  40775a:	loop   0x40773e
  40775c:	mov    ebp,0x70680cbc
  407761:	(bad)  
  407762:	int    0xff
  407764:	jae    0x407765
  407766:	or     al,BYTE PTR [eax]
  407768:	or     al,0x15
  40776a:	jmp    0x40773a
  40776c:	sti    
  40776d:	jns    0x40774b
  40776f:	(bad)  
  407770:	jns    0x407706
  407772:	stc    
  407773:	imul   ecx,DWORD PTR [ebp+0x767f55e9],0xffffff94
  40777a:	leave  
  40777b:	ins    DWORD PTR es:[edi],dx
  40777c:	cmp    eax,0x77ebe155
  407781:	inc    esi
  407782:	mov    al,ds:0xe1963403
  407787:	add    ecx,DWORD PTR [esp+edi*8]
  40778a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40778b:	dec    esi
  40778c:	mov    ebx,0x3843e9ea
  407791:	cmp    BYTE PTR [eax-0x37],0x9f
  407795:	jmp    0x6be9:0x60a3779b
  40779c:	into   
  40779d:	out    0x5,eax
  40779f:	jg     0x407734
  4077a1:	pusha  
  4077a2:	cmc    
  4077a3:	imul   eax,DWORD PTR [eax],0x0
	...
  4077b6:	add    BYTE PTR [eax],al
  4077b8:	sahf   
  4077b9:	fdiv   st,st(5)
  4077bb:	jle    0x407740
  4077bd:	pusha  
  4077be:	std    
  4077bf:	jle    0x4077c2
  4077c1:	popf   
  4077c2:	or     DWORD PTR [ecx+0x4cedea45],ecx
  4077c8:	dec    esi
  4077c9:	xchg   ecx,eax
  4077ca:	loope  0x4077a4
  4077cc:	push   ss
  4077cd:	stc    
  4077ce:	dec    eax
  4077cf:	add    al,0x8c
  4077d1:	stc    
  4077d2:	xchg   BYTE PTR [esi-0x27],bh
  4077d5:	cwde   
  4077d6:	into   
  4077d7:	clc    
  4077d8:	xchg   ebx,eax
  4077d9:	cld    
  4077da:	mov    bl,0x74
  4077dc:	inc    ebx
  4077dd:	jmp    0x8b1c:0x948441a7
  4077e4:	and    BYTE PTR [eiz*4-0x6a15d549],dl
  4077eb:	inc    esi
  4077ec:	or     DWORD PTR ds:0x951b7e9f,ebp
  4077f2:	loope  0x4077f7
  4077f4:	mov    WORD PTR ds:0xd4971024,ds
  4077fa:	cld    
  4077fb:	or     BYTE PTR [ebp*4-0x6f0b16f8],cl
  407802:	loope  0x407814
  407804:	mov    DWORD PTR [eax+ecx*1-0x1f621b9a],edx
  40780b:	stc    
  40780c:	cmp    ch,cl
  40780e:	mul    dl
  407810:	dec    edi
  407811:	pop    edi
  407812:	pop    es
  407813:	shl    DWORD PTR [ebp+0x4ae94959],0x5f
  40781a:	add    al,0x51
	...
  407830:	rcr    edx,1
  407832:	div    BYTE PTR [esi]
  407834:	es xchg edi,eax
  407836:	pusha  
  407837:	mov    ds,edi
  407839:	push   esp
  40783a:	or     BYTE PTR [esi],ah
  40783c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40783d:	popf   
  40783e:	loopne 0x40781e
  407840:	push   edx
  407841:	jmp    0x2d44d93c
  407846:	test   BYTE PTR [esi],0x12
  407849:	jl     0x407881
  40784b:	call   0x64c60cdf
  407850:	int    0xea
  407852:	div    dh
  407854:	pop    esi
  407855:	icebp  
  407856:	mov    esi,0x84e9f222
  40785b:	ins    BYTE PTR es:[edi],dx
  40785c:	into   
  40785d:	jmp    0x91bc:0xea38def6
  407864:	fucompp 
  407866:	test   cl,0xe7
  407869:	and    cl,BYTE PTR [eax]
  40786b:	jmp    0xbff48786
  407870:	shr    ecx,0x47
  407873:	out    0x13,al
  407875:	in     eax,dx
  407876:	pop    es
  407877:	jmp    0xabdd900b
  40787c:	stos   BYTE PTR es:[edi],al
  40787d:	jmp    0x84cf0f78
  407882:	or     cl,ch
  407884:	(bad)  
  407885:	pusha  
  407886:	ins    DWORD PTR es:[edi],dx
  407887:	pop    esp
  407888:	dec    esi
  407889:	mov    ebp,0xc19d0058
  40788e:	inc    esi
  40788f:	inc    ecx
  407890:	cmc    
  407891:	jl     0x407861
  407893:	mov    dh,0x0
	...
  4078a5:	add    BYTE PTR [eax],al
  4078a7:	add    ch,ah
  4078a9:	xchg   esp,eax
  4078aa:	add    eax,eax
  4078ac:	clc    
  4078ad:	xchg   ecx,eax
  4078ae:	loope  0x407861
  4078b0:	cmc    
  4078b1:	xchg   esp,eax
  4078b2:	or     BYTE PTR [ebp-0x9a9a8],cl
  4078b8:	inc    edx
  4078b9:	sbb    DWORD PTR [edx+0x2c],ecx
  4078bc:	adc    eax,0xf4505dfd
  4078c1:	xchg   esp,eax
  4078c2:	loopne 0x40786d
  4078c4:	cmp    edx,DWORD PTR [eax-0x1e9af4f8]
  4078ca:	or     ebp,ecx
  4078cc:	pop    ecx
  4078cd:	nop
  4078ce:	or     BYTE PTR [eax],al
  4078d0:	std    
  4078d1:	jle    0x407914
  4078d3:	inc    ecx
  4078d4:	mov    ch,0x67
  4078d6:	jge    0x4078e4
  4078d8:	lea    ebp,[esi]
  4078da:	(bad)  
  4078db:	inc    DWORD PTR [edx-0x6c3d62e7]
  4078e1:	imul   esi,edi,0x5ab8278d
  4078e7:	push   eax
  4078e8:	lea    esp,[esi-0x3a]
  4078eb:	jmp    DWORD PTR [edx-0x3c]
  4078ee:	cmc    
  4078ef:	jne    0x407956
  4078f1:	(bad)  
  4078f2:	cmc    
  4078f3:	jne    0x407952
  4078f5:	jl     0x407911
  4078f7:	inc    DWORD PTR [edx+0x69]
  4078fa:	loopne 0x4078f5
  4078fc:	das    
  4078fd:	imul   esi,edi,0x4a17d6eb
  407903:	sub    al,0xbc
  407905:	push   cs
  407906:	mov    esp,0x606902fe
  40790b:	push   0x0
	...
  407920:	xchg   edi,eax
  407921:	shl    esi,cl
  407923:	dec    al
  407925:	pop    ds
  407926:	idiv   bh
  407928:	add    bh,BYTE PTR [edx+ebx*2-0x49]
  40792c:	mov    ebp,?
  40792e:	or     cl,BYTE PTR [ebx]
  407930:	dec    esp
  407931:	or     dh,0x67
  407934:	mov    ds:0x2ffcba4,al
  407939:	loope  0x407941
  40793b:	call   0xffb4a8a8
  407940:	repz mov al,ds:0x6eebfebf
  407946:	(bad)  
  407948:	sbb    BYTE PTR [eax+0x2d3cff74],bh
  40794e:	mov    BYTE PTR [ebp+0x7c],bh
  407951:	std    
  407952:	dec    BYTE PTR [esp+esi*1]
  407955:	fld    DWORD PTR ss:[eax-0x74]
  407959:	or     eax,0xfe032263
  40795e:	or     ch,bl
  407960:	mov    DWORD PTR [ebp+0xa],esp
  407963:	add    BYTE PTR [ebp+edi*8+0x1cc0ad0],cl
  40796a:	add    dl,BYTE PTR [edx-0x65]
  40796d:	or     BYTE PTR [ebx],al
  40796f:	call   0xffb5116e
  407974:	je     0x4079bf
  407976:	inc    ecx
  407977:	inc    DWORD PTR [ebx+0x7ac28e78]
  40797d:	fidiv  WORD PTR [edx+0x50]
  407980:	jae    0x407922
  407982:	mov    bh,0xfe
	...
  407998:	imul   ebp,esi,0x63
  40799b:	add    BYTE PTR [edx],bl
  40799d:	std    
  40799e:	or     al,BYTE PTR [ebp+0x1087ee4c]
  4079a4:	push   ebx
  4079a5:	(bad)  
  4079a6:	jb     0x4079a7
  4079a8:	add    DWORD PTR [ecx],edx
  4079aa:	jb     0x4079ab
  4079ac:	inc    ebx
  4079ad:	lds    edi,FWORD PTR [esi-0x4b]
  4079b0:	mov    ebp,?
  4079b2:	jno    0x407969
  4079b4:	hlt    
  4079b5:	ss jae 0x4079b7
  4079b8:	xor    al,0x94
  4079ba:	add    eax,0xb7e7234e
  4079bf:	inc    esi
  4079c0:	mov    BYTE PTR [esp+esi*1-0x52ecdf71],dl
  4079c7:	js     0x40799c
  4079c9:	push   eax
  4079ca:	lea    eax,[esp+ecx*4]
  4079cd:	xchg   esp,eax
  4079ce:	loope  0x407a4a
  4079d0:	sbb    DWORD PTR [eax-0x193d5877],0x5fcc0f65
  4079da:	or     ecx,DWORD PTR [ebp-0xeaa17b7]
  4079e0:	mov    esp,edi
  4079e2:	shl    DWORD PTR [edi-0x1c],cl
  4079e5:	retf   
  4079e6:	adc    edi,DWORD PTR [ebx-0x35]
  4079e9:	inc    ebx
  4079ea:	dec    esi
  4079eb:	icebp  
  4079ec:	(bad)  
  4079ed:	sti    
  4079ee:	lock dec ebp
  4079f0:	mov    ebx,0xb7c16de6
  4079f5:	jns    0x4079d7
  4079f7:	jp     0x407a1a
  4079f9:	call   0x416b2b
	...
  407a0e:	add    BYTE PTR [eax],al
  407a10:	mov    edi,esp
  407a12:	fdivr  QWORD PTR [ecx-0x65]
  407a15:	out    0x1d,al
  407a17:	icebp  
  407a18:	xchg   edi,eax
  407a19:	sti    
  407a1a:	clc    
  407a1b:	dec    ebp
  407a1c:	mov    esp,esi
  407a1e:	aaa    
  407a1f:	inc    esi
  407a20:	nop
  407a21:	xchg   esp,eax
  407a22:	pushf  
  407a23:	mov    gs,WORD PTR [eax+0x14]
  407a26:	and    eax,0xe5e67274
  407a2b:	in     eax,dx
  407a2c:	imul   edi,DWORD PTR [edx+eiz*8+0x7a],0xffffffd9
  407a31:	pushf  
  407a32:	fnstenv [edx]
  407a34:	push   ebx
  407a35:	out    0xdd,al
  407a37:	mov    ecx,cs
  407a39:	call   0x94cd7a86
  407a3e:	loope  0x4079c8
  407a40:	or     esi,ebx
  407a42:	mov    dh,0x7a
  407a44:	cmp    eax,DWORD PTR [ebp+0x8]
  407a47:	rol    DWORD PTR [eax+eiz*1],0x8
  407a4b:	jmp    0x6d474eea
  407a50:	jmp    0x990:0x54e90894
  407a57:	jmp    0x71d00feb
  407a5c:	(bad)  
  407a5d:	xchg   esp,eax
  407a5e:	or     BYTE PTR [ecx],dl
  407a60:	out    0x43,eax
  407a62:	dec    ecx
  407a63:	jmp    0x783f8a6c
  407a68:	jbe    0x407a4f
  407a6a:	push   edi
  407a6b:	sub    ebp,0x1066f6d8
  407a71:	adc    al,bh
  407a73:	pop    edi
	...
  407a88:	push   esi
  407a89:	in     eax,0xf6
  407a8b:	pushf  
  407a8c:	pop    edi
  407a8d:	out    0xf6,al
  407a8f:	dec    esi
  407a90:	mov    bh,0x91
  407a92:	or     ecx,ebp
  407a94:	(bad)  
  407a95:	pop    ss
  407a96:	lea    esi,[esi]
  407a98:	xor    eax,0xa799f6e5
  407a9d:	jge    0x407ae0
  407a9f:	test   al,0x8f
  407aa1:	jl     0x407b1f
  407aa3:	mov    ebx,0x8c6ee5c8
  407aa8:	rcl    DWORD PTR [eax+ecx*1+0x1],0xca
  407aad:	and    BYTE PTR [eax],cl
  407aaf:	jmp    0xd8bc4f4e
  407ab4:	jno    0x407a9b
  407ab6:	and    DWORD PTR [esi+edi*8-0x1a],0xfffffff6
  407abb:	neg    BYTE PTR [esi-0x1a]
  407abe:	jl     0x407aa1
  407ac0:	test   DWORD PTR [edx],0xe5e5e6f5
  407ac6:	mov    esp,0xf6e5d6d9
  407acb:	inc    ecx
  407acc:	mov    WORD PTR [ebx+0xf12e908],ss
  407ad2:	inc    DWORD PTR [eax]
  407ad4:	dec    ebx
  407ad5:	imul   esi,edi,0x50
  407ad8:	fisttp QWORD PTR [eax-0x6dabebf]
  407ade:	jle    0x407b32
  407ae0:	je     0x407a72
  407ae2:	pusha  
  407ae3:	ins    DWORD PTR es:[edi],dx
  407ae4:	addr16 shl esi,1
  407ae7:	out    0x1d,eax
  407ae9:	or     BYTE PTR ss:[eax],al
	...
  407b00:	cs push ecx
  407b02:	jl     0x407b15
  407b04:	(bad)  
  407b05:	nop
  407b06:	test   DWORD PTR [ebp-0x8957e],eax
  407b0c:	xchg   ebp,eax
  407b0d:	imul   edi,DWORD PTR [ebp+0x8],0xd
  407b11:	retf   
  407b12:	repz (bad) 
  407b14:	jp     0x407b81
  407b16:	mov    ebp,0xf76b6bf0
  407b1b:	call   0x37d545
  407b20:	iret   
  407b21:	mov    bh,0xe0
  407b23:	xchg   ecx,eax
  407b24:	test   al,0x6b
  407b26:	test   DWORD PTR [ebx],0x6812e475
  407b2c:	jmp    0x407aec
  407b2e:	inc    edi
  407b2f:	add    BYTE PTR ds:0x7acd1579,dl
  407b35:	imul   ebx,DWORD PTR [eax+0x6a],0xffffffb5
  407b39:	shl    ch,0x75
  407b3c:	popf   
  407b3d:	js     0x407b79
  407b3f:	std    
  407b40:	jp     0x407bad
  407b42:	loopne 0x407b5d
  407b44:	lods   al,BYTE PTR ds:[esi]
  407b45:	pop    ebp
  407b46:	imul   DWORD PTR [eax+0x48]
  407b49:	retf   0x47
  407b4c:	pop    ds
  407b4d:	xor    bh,0x75
  407b50:	ins    DWORD PTR es:[edi],dx
  407b51:	jo     0x407af5
  407b53:	(bad)  
  407b54:	jp     0x407bb3
  407b56:	pusha  
  407b57:	cmp    eax,0x69f6d7a7
  407b5c:	xchg   BYTE PTR [ebp+0x7d],bl
  407b5f:	or     BYTE PTR [ebp+edx*8+0xfe93],cl
	...
  407b76:	add    BYTE PTR [eax],al
  407b78:	dec    ebx
  407b79:	shl    edx,cl
  407b7b:	cmp    al,0xde
  407b7d:	lods   al,BYTE PTR ds:[esi]
  407b7e:	or     al,0x6a
  407b80:	cwde   
  407b81:	and    ah,dh
  407b83:	pop    es
  407b84:	and    al,0x7a
  407b86:	jno    0x407b87
  407b88:	sub    esi,DWORD PTR [ebx]
  407b8a:	out    0xfb,al
  407b8c:	and    eax,DWORD PTR [ecx+0x3bbbe804]
  407b92:	jo     0x407b93
  407b94:	inc    ebp
  407b95:	xor    bh,dh
  407b97:	jmp    DWORD PTR [eax+0x76]
  407b9a:	outs   dx,DWORD PTR ds:[esi]
  407b9b:	push   0xbe5fed8c
  407ba0:	sti    
  407ba1:	call   0xf5ba7ab4
  407ba6:	(bad)  
  407ba7:	xlat   BYTE PTR ds:[ebx]
  407ba8:	cli    
  407ba9:	jb     0x407c1b
  407bab:	leave  
  407bac:	into   
  407bad:	in     eax,0xa
  407baf:	push   ebp
  407bb0:	pop    es
  407bb1:	push   edx
  407bb2:	mov    esp,es
  407bb4:	aam    0xb2
  407bb6:	mov    dh,0xfb
  407bb8:	mov    ebp,gs
  407bba:	or     al,BYTE PTR [eax]
  407bbc:	adc    DWORD PTR [ecx],esi
  407bbe:	jg     0x407c10
  407bc0:	and    al,0x7a
  407bc2:	fld    QWORD PTR [eax-0x74]
  407bc5:	stos   BYTE PTR es:[edi],al
  407bc6:	out    0xb,al
  407bc8:	stos   DWORD PTR es:[edi],eax
  407bc9:	call   0xed8dc502
  407bce:	bound  edi,QWORD PTR [edx+0xb7082c7]
  407bd4:	int3   
  407bd5:	add    DWORD PTR [ecx],edx
  407bd7:	mov    ecx,edx
  407bd9:	test   ebx,esp
	...
  407bef:	add    BYTE PTR [edx+ecx*4-0x1dfe004f],cl
  407bf6:	jle    0x407c6d
  407bf8:	je     0x407be4
  407bfa:	in     al,0x7
  407bfc:	je     0x407c2b
  407bfe:	popa   
  407bff:	jmp    DWORD PTR [ebx-0x6c]
  407c02:	out    dx,al
  407c03:	icebp  
  407c04:	arpl   sp,bp
  407c06:	pusha  
  407c07:	dec    esp
  407c08:	push   ebx
  407c09:	jecxz  0x407bb2
  407c0b:	inc    edx
  407c0c:	xchg   esp,eax
  407c0d:	xchg   esp,eax
  407c0e:	cmp    al,0x8b
  407c10:	xor    BYTE PTR ds:0xe33ab0a5,dl
  407c16:	mov    ch,0x3f
  407c18:	or     DWORD PTR [edi+edi*4],ebx
  407c1b:	ja     0x407c48
  407c1d:	xchg   esp,eax
  407c1e:	loope  0x407c23
  407c20:	mov    WORD PTR [edi],cs
  407c22:	and    al,0x8
  407c24:	xchg   esp,edx
  407c26:	sbb    al,0x1
  407c28:	or     al,0x9c
  407c2a:	loope  0x407c1c
  407c2c:	nop
  407c2d:	in     eax,dx
  407c2e:	in     al,dx
  407c2f:	add    al,0x8c
  407c31:	xchg   esp,eax
  407c32:	mov    ?,ecx
  407c34:	mov    esp,ebx
  407c36:	sti    
  407c37:	pop    es
  407c38:	in     al,0xef
  407c3a:	test   eax,0x1143eb77
  407c3f:	ja     0x407c9a
  407c41:	mov    WORD PTR [ecx-0x22],ds
  407c44:	(bad)  
  407c46:	push   ebp
  407c47:	ins    BYTE PTR es:[edi],dx
  407c48:	xchg   edx,eax
  407c49:	int3   
  407c4a:	pop    ebp
  407c4b:	ja     0x407c81
  407c4d:	ds mov cl,0xc4
  407c50:	ret    
  407c51:	loope  0x407c06
  407c53:	pop    es
	...
  407c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c69:	ret    
  407c6a:	cmp    DWORD PTR [edi-0x4d],esi
  407c6d:	or     al,0x64
  407c6f:	mov    esp,0xec25e2aa
  407c74:	popa   
  407c75:	xchg   ebp,eax
  407c76:	loope  0x407c7b
  407c78:	or     DWORD PTR [ecx],ebx
  407c7a:	and    esi,DWORD PTR [esi-0x6d]
  407c7d:	loop   0x407c2f
  407c7f:	imul   edx,esp,0xffffffcc
  407c82:	add    eax,0x23181177
  407c87:	jbe    0x407d04
  407c89:	loop   0x407c1b
  407c8b:	jbe    0x407cc6
  407c8d:	sbb    eax,0xe1e2f708
  407c92:	fbstp  TBYTE PTR [ebx+0x1e]
  407c95:	xchg   ebp,eax
  407c96:	or     BYTE PTR [eax+0xc],dh
  407c99:	and    esi,esi
  407c9b:	(bad)  
  407c9d:	push   esp
  407c9e:	pop    es
  407c9f:	ins    DWORD PTR es:[edi],dx
  407ca0:	sub    dl,BYTE PTR [ebp+0x814e908]
  407ca6:	retf   0xc2c7
  407ca9:	loope  0x407ca9
  407cab:	jmp    0x407c4c
  407cad:	xchg   esp,eax
  407cae:	or     cl,ch
  407cb0:	cmp    esp,DWORD PTR [esi-0x7b]
  407cb3:	push   esp
  407cb4:	int    0xe2
  407cb6:	mul    BYTE PTR [esi+0x39245704]
  407cbc:	and    BYTE PTR [ecx+0x58],cl
  407cbf:	sub    BYTE PTR [eax-0x70a5a714],dl
  407cc5:	xchg   esp,eax
  407cc6:	add    ebp,DWORD PTR [ecx+0x23e393fc]
	...
  407ce0:	add    eax,0x6277ca08
  407ce5:	loope  0x407c6b
  407ce7:	sub    esi,DWORD PTR [esp+eax*2+0x54bfbe60]
  407cee:	or     BYTE PTR [ecx-0x5e],dl
  407cf1:	and    eax,0xd496e908
  407cf6:	jl     0x407ce3
  407cf8:	ss push esp
  407cfa:	test   DWORD PTR [ebp+ecx*2-0x1e],ebx
  407cfe:	idiv   BYTE PTR [esi]
  407d00:	add    al,0x57
  407d02:	and    al,0x60
  407d04:	or     al,0x29
  407d06:	imul   BYTE PTR [esi]
  407d08:	sbb    ch,BYTE PTR [esi+ebx*1-0x50]
  407d0c:	shl    cl,1
  407d0e:	cmc    
  407d0f:	xchg   esp,eax
  407d10:	mov    ebp,esp
  407d12:	xor    esp,DWORD PTR [edx]
  407d14:	add    ah,dl
  407d16:	not    BYTE PTR [ebx+esi*1-0x1e]
  407d1a:	test   BYTE PTR [eax],0x92
  407d1d:	(bad)
  407d20:	mov    esi,0xe8fff76a
  407d25:	test   DWORD PTR [eax-0x18],ebx
  407d28:	fimul  WORD PTR [esi-0x9]
  407d2b:	call   DWORD PTR [ebp+0x5d75f5c8]
  407d31:	ins    DWORD PTR es:[edi],dx
  407d32:	test   eax,0xe06762fe
  407d37:	jns    0x407d23
  407d39:	test   WORD PTR [ebp-0x9a958],0xc7f2
  407d42:	cmc    
  407d43:	mov    ch,0x0
	...
  407d55:	add    BYTE PTR [eax],al
  407d57:	add    BYTE PTR [ecx+0x4dfff76a],ah
  407d5d:	inc    ecx
  407d5e:	mov    edx,0xc8622500
  407d63:	push   gs
  407d65:	hlt    
  407d66:	cmc    
  407d67:	jmp    DWORD PTR [edx]
  407d69:	addr16 mov ebp,0xf76713bc
  407d6f:	call   0x48a3a1
  407d74:	jb     0x407da7
  407d76:	mov    al,0xfe
  407d78:	bound  esp,QWORD PTR [edi-0x20]
  407d7b:	dec    ecx
  407d7c:	sub    ah,BYTE PTR [edi-0x9]
  407d7f:	leave  
  407d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d81:	mov    WORD PTR [eax],cs
  407d83:	push   ebp
  407d84:	pop    esi
  407d85:	ins    BYTE PTR es:[edi],dx
  407d86:	mov    eax,esp
  407d88:	popa   
  407d89:	addr16 jge 0x407d98
  407d8c:	dec    ebp
  407d8d:	pop    ss
  407d8e:	ret    
  407d8f:	call   DWORD PTR [edx+0xd]
  407d92:	dec    ebp
  407d93:	cld    
  407d94:	mov    esi,0x31840754
  407d99:	cwde   
  407d9a:	or     BYTE PTR [eax],al
  407d9c:	int    0x29
  407d9e:	pop    ebx
  407d9f:	inc    ecx
  407da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da1:	addr16 jge 0x407da0
  407da4:	jge    0x407dd0
  407da6:	ret    0x8cff
  407da9:	xchg   ah,bl
  407dab:	addr16 xchg edx,eax
  407dad:	sub    edx,ecx
  407daf:	dec    ebx
  407db1:	xchg   esi,eax
  407db2:	out    0x7,eax
  407db4:	fs dec edx
  407db6:	jle    0x407db7
  407db8:	imul   edx,DWORD PTR [esi+0xc701],0x0
	...
  407dcf:	add    BYTE PTR [ebx-0x11],ah
  407dd2:	loop   0x407da5
  407dd4:	mov    edi,0xd9ff0cac
  407dd9:	shl    DWORD PTR [edx-0x63],0x56
  407ddd:	(bad)  
  407dde:	jnp    0x407e30
  407de0:	mov    ah,0xbf
  407de2:	mov    BYTE PTR [eax-0x74],0x7d
  407de6:	jge    0x407e5d
  407de8:	test   ch,al
  407dea:	idiv   ebp
  407dec:	sub    esp,DWORD PTR [edi]
  407dee:	arpl   dx,bp
  407df0:	dec    edx
  407df1:	das    
  407df2:	jl     0x407e5c
  407df4:	daa    
  407df5:	fwait
  407df6:	retf   
  407df7:	call   DWORD PTR [edx]
  407df9:	mov    DWORD PTR [eax-0x18],esi
  407dfc:	mov    BYTE PTR [ebx],dh
  407dfe:	jl     0x407dff
  407e00:	pop    esp
  407e01:	xchg   ebp,eax
  407e02:	push   cs
  407e03:	push   esp
  407e04:	dec    ebp
  407e05:	in     eax,dx
  407e06:	(bad)  
  407e08:	jns    0x407def
  407e0a:	bound  edx,QWORD PTR [edx-0x16]
  407e0d:	data16 jl 0x407df8
  407e10:	aad    0x37
  407e12:	jl     0x407e13
  407e14:	lock mov BYTE PTR fs:[eax-0x74],0x3e
  407e1a:	out    0xfb,al
  407e1c:	mov    ah,0x22
  407e1e:	inc    ecx
  407e1f:	inc    ebx
  407e21:	sbb    eax,0x2c600de3
  407e26:	or     edx,DWORD PTR [eax-0x4d]
  407e29:	sub    BYTE PTR [ebx],al
  407e2b:	call   0xffbd258d
  407e30:	mov    ah,0x15
  407e32:	xor    eax,0xff
	...
  407e47:	add    BYTE PTR [ebx-0x6811d16c],bl
  407e4d:	in     al,dx
  407e4e:	inc    eax
  407e4f:	cmp    eax,0x4127df8b
  407e54:	xchg   esp,eax
  407e55:	xchg   esp,eax
  407e56:	mov    esp,0x25136888
  407e5b:	ja     0x407e38
  407e5d:	push   0xffffffe1
  407e5f:	jmp    0xbb45df3
  407e64:	je     0x407e3b
  407e66:	and    DWORD PTR [ebx+ebx*2+0xd],esi
  407e6a:	and    al,0x70
  407e6c:	pop    es
  407e6d:	mov    eax,ds:0x94ccbc97
  407e72:	popa   
  407e73:	xor    ecx,DWORD PTR [eax+ebp*2+0x42badc1a]
  407e7a:	and    BYTE PTR [ebx+ebx*8],al
  407e7d:	in     al,dx
  407e7e:	int3   
  407e7f:	mov    dh,0x8c
  407e81:	xchg   esp,eax
  407e82:	jmp    0x545c:0x1e7e9843
  407e89:	les    ebp,FWORD PTR [ebp+0x1cd48773]
  407e8f:	sbb    BYTE PTR [esp+ebp*2-0x11],bl
  407e93:	xlat   BYTE PTR ds:[ebx]
  407e94:	dec    esp
  407e95:	xchg   esp,eax
  407e96:	xor    DWORD PTR [ebx-0x7f],esi
  407e99:	mov    WORD PTR [ecx+0x75def15b],ds
  407e9f:	pop    esp
  407ea0:	pop    edx
  407ea1:	(bad)  
  407ea2:	jge    0x407f17
  407ea4:	loopne 0x407e48
  407ea6:	mov    eax,ds:0x6ddedbad
  407eab:	jae    0x407ead
	...
  407ebd:	add    BYTE PTR [eax],al
  407ebf:	add    dh,bl
  407ec1:	sub    eax,0xd9410b29
  407ec6:	retf   0xc30d
  407ec9:	push   0xddbd5be9
  407ece:	dec    ebp
  407ecf:	jae    0x407ef7
  407ed1:	mov    bl,0x36
  407ed3:	stc    
  407ed4:	xchg   ebx,eax
  407ed5:	in     al,dx
  407ed6:	pop    es
  407ed7:	dec    esi
  407ed8:	push   ds
  407ed9:	fcomip st,st(6)
  407edb:	ret    
  407edc:	mov    ebx,edi
  407ede:	jl     0x407ed1
  407ee0:	aaa    
  407ee1:	shl    ebp,0x1e
  407ee4:	jmp    FWORD PTR [edx+0x2e]
  407ee7:	push   ss
  407ee8:	test   DWORD PTR [esi-0x2201c520],edx
  407eee:	not    BYTE PTR [ecx-0x16b6bce8]
  407ef4:	fisub  WORD PTR [edi+0x0]
  407ef7:	add    DWORD PTR [ebp-0x1f],edx
  407efa:	imul   dh
  407efc:	aaa    
  407efd:	pop    ds
  407efe:	pop    edx
  407eff:	sub    BYTE PTR [eax-0x180e8323],cl
  407f05:	pushf  
  407f06:	cmc    
  407f07:	(bad)  
  407f08:	mov    esi,0x513bfd6c
  407f0d:	fdivrp st(5),st
  407f0f:	cmp    al,0x30
  407f11:	mul    BYTE PTR [edx]
  407f13:	mov    esp,0xa5fdd9e
  407f18:	cmp    edx,DWORD PTR [ebp+0x8]
  407f1b:	scas   al,BYTE PTR es:[edi]
  407f1c:	adc    al,0x96
  407f1e:	loopne 0x407f27
  407f20:	popf   
  407f21:	(bad)  
  407f23:	adc    DWORD PTR [eax],eax
	...
  407f35:	add    BYTE PTR [eax],al
  407f37:	add    cl,bl
  407f39:	inc    edx
  407f3a:	dec    ecx
  407f3b:	jmp    0x8140e6be
  407f40:	mov    al,ds:0xd786f6df
  407f45:	push   ss
  407f46:	pop    ebx
  407f47:	sub    BYTE PTR [eax+0x47e17cdd],dl
  407f4d:	cwde   
  407f4e:	cmc    
  407f4f:	outs   dx,BYTE PTR ds:[esi]
  407f50:	pop    esi
  407f51:	fnstsw WORD PTR [ebp+eiz*2+0x5e]
  407f55:	add    BYTE PTR [bx+di+0x7c],dl
  407f59:	shl    esi,1
  407f5b:	push   esi
  407f5c:	fmulp  st(4),st
  407f5e:	leave  
  407f5f:	in     eax,0x8f
  407f61:	inc    edi
  407f62:	add    DWORD PTR [eax],0x59
  407f65:	push   ss
  407f66:	jne    0x407f74
  407f68:	mov    ch,0xe5
  407f6a:	sbb    al,0xff
  407f6c:	loopne 0x407eef
  407f6e:	div    DWORD PTR [ebp-0x47]
  407f71:	bound  edi,QWORD PTR [ebp+0x8]
  407f74:	jge    0x407f97
  407f76:	jecxz  0x407f77
  407f78:	stos   BYTE PTR es:[edi],al
  407f79:	bound  edi,QWORD PTR [ebp+0xc]
  407f7c:	lea    ecx,[esi]
  407f7e:	int    0xff
  407f80:	mov    ah,BYTE PTR [eax-0x439af336]
  407f86:	sub    esp,0x6af455f6
  407f8c:	jne    0x407ff0
  407f8e:	jge    0x407fa4
  407f90:	push   0xffffffe5
  407f92:	push   es
  407f93:	push   DWORD PTR [eax-0x2661f6c]
  407f99:	(bad)  
  407f9a:	test   DWORD PTR [ebx],0x0
	...
  407fb0:	cmc    
  407fb1:	fist   DWORD PTR [edx-0x77]
  407fb4:	jo     0x40801a
  407fb6:	pusha  
  407fb7:	jg     0x407f4a
  407fb9:	shl    esi,1
  407fbb:	(bad)  
  407fbc:	pusha  
  407fbd:	fs loopne 0x407fcc
  407fc0:	in     al,dx
  407fc1:	(bad)  
  407fc2:	imul   DWORD PTR [eax+0x25]
  407fc5:	xchg   ecx,eax
  407fc6:	out    0xbe,eax
  407fc8:	push   ebp
  407fc9:	arpl   WORD PTR [ebp+0x8],di
  407fcc:	sbb    eax,0x1afff735
  407fd1:	rol    BYTE PTR [eax-0x8675bac],0x75
  407fd8:	or     DWORD PTR [eax-0x7],eax
  407fdb:	enter  0x636a,0x60
  407fdf:	add    ebp,esi
  407fe1:	jae    0x407f99
  407fe3:	push   eax
  407fe4:	push   0xffffffe5
  407fe6:	push   cs
  407fe7:	call   0x37e34b
  407fec:	fld    QWORD PTR ds:0xeb8c415c
  407ff2:	ja     0x408069
  407ff4:	mov    eax,0xb3c85252
  407ff9:	push   ebp
  407ffa:	aam    0x1
  407ffc:	mov    WORD PTR [esi-0x46],cs
  407fff:	push   eax
  408000:	mov    ds:0x2be7f31f,eax
  408005:	scas   al,BYTE PTR es:[edi]
  408006:	jns    0x408007
  408008:	xchg   ebx,eax
  408009:	jmp    DWORD PTR [esi-0x18]
  40800c:	lods   eax,DWORD PTR ds:[esi]
  40800d:	mov    al,0x79
  40800f:	call   DWORD PTR [ebp-0x50]
  408012:	sbb    al,0x0
	...
  408028:	loope  0x4080a0
  40802a:	push   0xc9fa2e68
  40802f:	jmp    FWORD PTR [edx+0x61]
  408032:	mul    edi
  408034:	xor    BYTE PTR [esi+0x615bff79],dh
  40803a:	sbb    edx,DWORD PTR [eax+0x64]
  40803d:	mov    ebx,0xbb4bff32
  408042:	std    
  408043:	adc    ebx,esp
  408045:	ret    0x7fd
  408048:	and    al,0x8c
  40804a:	jns    0x40804b
  40804c:	xor    eax,DWORD PTR [esi-0x56]
  40804f:	push   esp
  408050:	int    0xed
  408052:	ja     0x4080c9
  408054:	nop
  408055:	aad    0x74
  408057:	enter  0x2b1b,0x78
  40805b:	jne    0x4080d9
  40805d:	popf   
  40805e:	push   esp
  40805f:	aad    0xd4
  408061:	cli    
  408062:	ja     0x408063
  408064:	jns    0x40803f
  408066:	(bad)  
  408068:	xor    ebp,0x12f31c52
  40806e:	js     0x408039
  408070:	into   
  408071:	mov    ebp,0x1217550a
  408076:	mov    esp,es
  408078:	fsubr  DWORD PTR [edx-0x2]
  40807b:	or     esp,esp
  40807d:	xchg   esp,eax
  40807e:	or     eax,0xf9dbcb3b
  408083:	inc    ebx
  408084:	cmp    BYTE PTR [esi+0x68],cl
  408087:	(bad)  
  408088:	mov    bh,0x6c
  40808a:	loope  0x40808f
	...
  4080a0:	mov    ds:0x3ff0d91a,eax
  4080a5:	push   ebp
  4080a6:	loope  0x408118
  4080a8:	sbb    eax,ebx
  4080aa:	cmp    eax,0x69ec93f6
  4080af:	jo     0x408044
  4080b1:	fistp  DWORD PTR [eax+0x56eb8c02]
  4080b7:	fist   DWORD PTR ds:0x7b03a040
  4080bd:	popa   
  4080be:	add    eax,0x198cf970
  4080c3:	stc    
  4080c4:	push   0xffffffdb
  4080c6:	cmc    
  4080c7:	fimul  DWORD PTR [ebp-0x1b4ef16c]
  4080cd:	add    DWORD PTR [ebp+0x53da53c2],ebx
  4080d3:	jo     0x408120
  4080d5:	popa   
  4080d6:	stc    
  4080d7:	pop    ebx
  4080d8:	lods   eax,DWORD PTR ds:[esi]
  4080d9:	fcmovnu st,st(5)
  4080db:	outs   dx,DWORD PTR ds:[esi]
  4080dc:	cmp    esp,DWORD PTR [ecx-0x3b]
  4080df:	pop    esp
  4080e0:	mov    edx,0x556fcdd0
  4080e5:	(bad)  
  4080e6:	clc    
  4080e7:	add    edi,DWORD PTR [ecx+0x5083cd0f]
  4080ed:	fmul   DWORD PTR [edx+0x4]
  4080f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f1:	xchg   ecx,eax
  4080f2:	scas   al,BYTE PTR es:[edi]
  4080f3:	stc    
  4080f4:	xchg   ebx,eax
  4080f5:	in     al,dx
  4080f6:	mov    BYTE PTR [ebp+0x3],al
  4080f9:	(bad)  [edi-0x37]
  4080fc:	imul   DWORD PTR [ebx+0x31]
  4080ff:	fmul   DWORD PTR [esp+edx*4+0x19]
  408103:	push   ss
	...
  408118:	inc    eax
  408119:	push   ebp
  40811a:	loope  0x40818a
  40811c:	cdq    
  40811d:	sahf   
  40811e:	or     BYTE PTR [eax],ah
  408120:	rcr    edx,1
  408122:	cmc    
  408123:	hlt    
  408124:	xlat   BYTE PTR ds:[ebx]
  408125:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408127:	addr16 cmp ebx,ebx
  40812a:	pop    edi
  40812b:	retf   
  40812c:	fist   DWORD PTR [ebx+0x8]
  40812f:	rcl    DWORD PTR [ebp+0x22e94940],0xa1
  408136:	xor    dh,BYTE PTR [eax-0x4b0a2530]
  40813c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40813d:	repnz popf 
  40813f:	aaa    
  408140:	sub    ebx,ebx
  408142:	pop    edi
  408143:	(bad)  
  408144:	mov    ebx,0xa1910853
  408149:	inc    eax
  40814a:	dec    ecx
  40814b:	jmp    0xa0732142
  408150:	push   eax
  408151:	(bad)  
  408153:	xchg   esp,eax
  408154:	ja     0x408148
  408156:	jne    0x40815f
  408158:	sti    
  408159:	fstp   DWORD PTR [edi+0x75]
  40815c:	cmp    edx,DWORD PTR [ebp+0x8]
  40815f:	add    DWORD PTR [ecx-0x1d16b6c0],0x5130329f
  408169:	(bad)  
  40816b:	push   esp
  40816c:	inc    eax
  40816d:	repnz ins DWORD PTR es:[edi],dx
  40816f:	xlat   BYTE PTR ds:[ebx]
  408170:	stos   BYTE PTR es:[edi],al
  408171:	fstp   DWORD PTR [edi+0x39]
  408174:	push   esp
  408175:	push   ebp
  408176:	or     BYTE PTR [ecx+0x5c],dl
  408179:	inc    eax
  40817a:	dec    ecx
  40817b:	jmp    0x408180
	...
  408190:	mov    dl,0x9f
  408192:	xor    ah,BYTE PTR [eax]
  408194:	push   ecx
  408195:	(bad)  
  408197:	xor    al,0x10
  408199:	repnz inc ebp
  40819b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40819c:	jp     0x408177
  40819e:	pop    edi
  40819f:	or     esp,esp
  4081a1:	push   esp
  4081a2:	or     BYTE PTR [ecx],al
  4081a4:	mov    esp,0x62e94940
  4081a9:	lahf   
  4081aa:	xor    al,BYTE PTR [eax]
  4081ac:	pushf  
  4081ad:	iret   
  4081ae:	idiv   dh
  4081b0:	fcomp  st(5)
  4081b2:	out    dx,al
  4081b3:	arpl   WORD PTR ss:[edx-0x9],bp
  4081b7:	push   0x47bc8a
  4081bc:	(bad)  [ecx+0x6ab5415c]
  4081c2:	cmp    eax,0xf6d0ec3a
  4081c7:	(bad)  
  4081c8:	fcomp  st(5)
  4081ca:	out    dx,al
  4081cb:	push   ds
  4081cc:	push   ebx
  4081cd:	push   0xfffffff7
  4081cf:	push   0x47c1d9
  4081d4:	int    0xa9
  4081d6:	pop    esp
  4081d7:	inc    ecx
  4081d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d9:	push   0x3d
  4081db:	cmp    bh,BYTE PTR [eax+edx*8]
  4081de:	idiv   dh
  4081e0:	sbb    ch,bl
  4081e2:	out    dx,al
  4081e3:	push   es
  4081e4:	mov    ds:0x3568f76a,eax
  4081e9:	rol    DWORD PTR [edi+0x0],0xfd
  4081ed:	jle    0x40824b
  4081ef:	inc    ecx
  4081f0:	jne    0x4081af
  4081f2:	or     BYTE PTR [eax],al
	...
  408208:	gs adc eax,0x3d6d75f7
  40820e:	out    0xfd,eax
  408210:	xor    ah,BYTE PTR [edi+0x60]
  408213:	bound  edi,QWORD PTR [ecx-0x2b]
  408216:	mul    BYTE PTR [edi-0x71]
  408219:	mov    esp,0x96cd0047
  40821e:	or     BYTE PTR [eax],al
  408220:	mov    ch,0x67
  408222:	jge    0x40822c
  408224:	cmp    eax,0xe2fff548
  408229:	mov    bh,0x6d
  40822b:	push   esp
  40822c:	fs nop
  40822e:	pusha  
  40822f:	push   ss
  408230:	leave  
  408231:	aad    0xf6
  408233:	not    DWORD PTR [si-0x7ff8]
  408238:	mov    WORD PTR [edx],es
  40823a:	inc    DWORD PTR [edi]
  40823c:	in     al,0x2b
  40823e:	addr16 (bad) 
  408240:	jmp    0x4081c4
  408242:	lock push ebx
  408244:	dec    ebp
  408245:	jmp    0x408219
  408247:	adc    eax,0x680cac40
  40824c:	mov    gs,ebx
  40824e:	or     al,BYTE PTR [eax-0x180d4835]
  408254:	div    BYTE PTR [edi]
  408256:	jmp    DWORD PTR gs:[ebx+ebx*1]
  40825a:	fild   WORD PTR [eax-0x74]
  40825d:	shl    DWORD PTR [esi],cl
  40825f:	push   esp
  408260:	dec    ebp
  408261:	jmp    0x408235
  408263:	add    DWORD PTR [ebx+ebp*8-0xcde0076],ecx
  40826a:	push   edx
  40826b:	xchg   ebx,eax
	...
  408280:	xchg   ecx,eax
  408281:	test   eax,0x19ee6865
  408286:	retf   0xebff
  408289:	mov    ecx,0x158c40de
  40828e:	or     DWORD PTR [eax],eax
  408290:	mov    WORD PTR [ebp+0x65],gs
  408293:	jne    0x408229
  408295:	test   eax,edi
  408297:	cld    
  408298:	arpl   di,dx
  40829a:	shl    BYTE PTR [esi-0x40],cl
  40829d:	sub    al,0xb
  40829f:	push   0xffca0190
  4082a4:	mov    bl,0xeb
  4082a6:	or     al,BYTE PTR [eax]
  4082a8:	or     al,0xb7
  4082aa:	std    
  4082ab:	pop    es
  4082ac:	and    al,0x49
  4082ae:	push   DWORD PTR [bp+di]
  4082b1:	push   esi
  4082b2:	lock push ebx
  4082b4:	int    0xed
  4082b6:	sar    BYTE PTR [ebx],cl
  4082b8:	mov    eax,0x8e680cac
  4082bd:	in     eax,dx
  4082be:	or     al,BYTE PTR [eax-0x180b5eed]
  4082c4:	pop    edx
  4082c5:	xchg   esp,eax
  4082c6:	lods   al,BYTE PTR ds:[esi]
  4082c7:	ins    BYTE PTR es:[edi],dx
  4082c8:	add    ebp,DWORD PTR [ebx+0xb]
  4082cb:	ins    DWORD PTR es:[edi],dx
  4082cc:	or     DWORD PTR [ecx+ecx*4-0x7a280e06],0xf3d7aed9
  4082d7:	sti    
  4082d8:	jmp    0x4082b1
  4082da:	jae    0x408348
  4082dc:	fld    TBYTE PTR [edx-0x23]
  4082df:	ins    BYTE PTR es:[edi],dx
  4082e0:	pop    ecx
  4082e1:	mov    WORD PTR [ecx+0x76],cs
	...
  4082f7:	add    cl,cl
  4082f9:	xlat   BYTE PTR ds:[ebx]
  4082fa:	ins    DWORD PTR es:[edi],dx
  4082fb:	ins    BYTE PTR es:[edi],dx
  4082fc:	cmp    eax,ebx
  4082fe:	push   ebp
  4082ff:	not    BYTE PTR [ebx-0x4cbbe514]
  408305:	xlat   BYTE PTR ds:[ebx]
  408306:	daa    
  408307:	inc    ecx
  408308:	nop
  408309:	xchg   esp,eax
  40830a:	xchg   esp,eax
  40830b:	js     0x4082bd
  40830d:	adc    esi,DWORD PTR [edi+edi*8-0x243d9c65]
  408314:	enter  0xa040,0x3
  408318:	mov    esp,DWORD PTR [ecx-0x3]
  40831b:	pop    ebx
  40831c:	int    0xce
  40831e:	adc    eax,0xe16cdc6c
  408323:	add    esp,DWORD PTR [ebx+0x16]
  408326:	mov    cl,0x6c
  408328:	loope  0x4082b6
  40832a:	sbb    DWORD PTR [ebx+0x5af5d774],esp
  408330:	or     dl,dl
  408332:	std    
  408333:	imul   esp,esp,0xffffffbe
  408336:	pushf  
  408337:	ret    0xd64b
  40833a:	push   ebx
  40833b:	clc    
  40833c:	sub    esi,DWORD PTR [edi+ebp*4+0x49443b6b]
  408343:	add    eax,0xd486e78c
  408348:	sub    ah,BYTE PTR [ecx-0x7]
  40834b:	pop    ebx
  40834c:	mov    ds:0x246bb5ec,eax
  408351:	imul   ecx,DWORD PTR [eax],0x5fd7a7ab
  408357:	rcr    ah,0x53
  40835a:	or     BYTE PTR [esi+0x0],ah
	...
  408370:	std    
  408371:	mov    ah,al
  408373:	sahf   
  408374:	dec    ebp
  408375:	xlat   BYTE PTR ds:[ebx]
  408376:	idiv   BYTE PTR [ecx]
  408378:	rcl    BYTE PTR [eax+ecx*1-0x8bbc982],1
  40837f:	cld    
  408380:	out    0xee,eax
  408382:	push   ebp
  408383:	xchg   ecx,eax
  408384:	xlat   BYTE PTR ds:[bx]
  408386:	fbld   TBYTE PTR ds:0xa0f6d74a
  40838c:	push   edx
  40838d:	mov    WORD PTR [eax],cs
  40838f:	mov    esp,0xd4f6e842
  408394:	ret    
  408395:	out    dx,al
  408396:	pushf  
  408397:	das    
  408398:	daa    
  408399:	xlat   BYTE PTR ds:[ebx]
  40839a:	add    ch,BYTE PTR [ecx]
  40839c:	pushf  
  40839d:	jl     0x4083ff
  40839f:	cmp    DWORD PTR [ebx+edx*2-0x4ac866f8],0xffffffce
  4083a7:	ss daa 
  4083a9:	inc    esp
  4083aa:	pop    eax
  4083ab:	cs jge 0x40833c
  4083ae:	loopne 0x408345
  4083b0:	not    ch
  4083b2:	not    BYTE PTR [ecx]
  4083b4:	xchg   edx,edx
  4083b6:	not    BYTE PTR [esi]
  4083b8:	mov    cl,0xd2
  4083ba:	(bad)  
  4083bb:	call   0x6b248efc
  4083c0:	int3   
  4083c1:	hlt    
  4083c2:	popa   
  4083c3:	jmp    0xf658e3ae
  4083c8:	pop    esp
  4083c9:	mov    dh,bh
  4083cb:	mov    ah,0x79
  4083cd:	dec    ebx
  4083ce:	dec    ecx
  4083cf:	jmp    0xdf0dfebb
	...
  4083e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e9:	or     ecx,DWORD PTR [ebp-0x23]
  4083ec:	push   ecx
  4083ed:	(bad)  
  4083ee:	cmc    
  4083ef:	push   esp
  4083f0:	jl     0x4083c7
  4083f2:	jl     0x4083f4
  4083f4:	sbb    DWORD PTR [ebx+0x3d],ebp
  4083f7:	cmp    bl,BYTE PTR [edi+ecx*8-0xa]
  4083fb:	out    0x21,eax
  4083fd:	push   ebp
  4083fe:	idiv   edi
  408400:	ins    BYTE PTR es:[edi],dx
  408401:	aam    0xf2
  408403:	push   0xfffffff5
  408405:	push   0x7d
  408407:	sbb    BYTE PTR [edx],bl
  408409:	in     eax,0x2
  40840b:	call   eax
  40840d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40840e:	inc    ecx
  40840f:	inc    ecx
  408410:	cmc    
  408411:	cmp    esi,esp
  408413:	les    ecx,FWORD PTR [edx]
  408415:	imul   eax,DWORD PTR [ecx+0x4d5d0d45],0xffffffe8
  40841c:	jne    0x408487
  40841e:	jge    0x40843c
  408420:	cmp    ah,ah
  408422:	add    bh,bh
  408424:	mov    al,ds:0xa54141a6
  408429:	cmp    esi,ebx
  40842b:	les    ebx,FWORD PTR [edx+0x6a]
  40842e:	add    DWORD PTR [ebp+0x45],0xe0fef6b7
  408435:	mov    cl,0xf7
  408437:	jne    0x4083e2
  408439:	push   0x3d
  40843b:	cmp    ch,ah
  40843d:	shl    dh,1
  40843f:	out    0xb5,eax
  408441:	xchg   ebp,eax
  408442:	idiv   edi
  408444:	cld    
  408445:	aam    0xe2
  408447:	lea    esi,[eax]
  408449:	jno    0x4084a3
  40844b:	inc    DWORD PTR [eax]
	...
  40845d:	add    BYTE PTR [eax],al
  40845f:	add    BYTE PTR [eax],dl
  408461:	jne    0x40845a
  408463:	jne    0x4084ae
  408465:	push   0x3d
  408467:	cmp    bl,BYTE PTR [eax+edx*8]
  40846a:	mul    bh
  40846c:	mov    ebp,0xecfff795
  408471:	aam    0xea
  408473:	cmp    DWORD PTR [eax-0x4ef0f793],0x4
  40847a:	or     BYTE PTR [eax],al
  40847c:	and    eax,0x8cf87510
  408481:	jmp    0x408472
  408483:	adc    DWORD PTR [esi],0xffffffeb
  408486:	or     al,BYTE PTR [eax]
  408488:	(bad)  
  40848a:	js     0x40848c
  40848c:	mov    ebp,DWORD PTR [edi-0x74]
  40848f:	add    BYTE PTR [ebx+ebp*8+0x26b4755f],cl
  408496:	out    0x7,eax
  408498:	hlt    
  408499:	xlat   BYTE PTR ds:[ebx]
  40849a:	mov    al,ds:0xe6f5fbff
  40849f:	sti    
  4084a0:	repz ja 0x408497
  4084a3:	out    0x78,eax
  4084a5:	inc    ebp
  4084a6:	popa   
  4084a7:	jmp    ebx
  4084a9:	xlat   BYTE PTR ds:[ebx]
  4084aa:	(bad)  
  4084ab:	jmp    DWORD PTR [ecx-0x1d]
  4084ae:	push   edx
  4084af:	popa   
  4084b0:	adc    bl,BYTE PTR [esi+0x61]
  4084b3:	inc    DWORD PTR [ecx+0x5f]
  4084b6:	popa   
  4084b7:	jne    0x40844d
  4084b9:	inc    ebx
  4084ba:	fidivr DWORD PTR [ebp+0x7d8b35bb]
  4084c0:	fimul  DWORD PTR fs:[edx]
  4084c3:	out    dx,eax
	...
  4084d8:	jmp    0x619b:0x19fefdbf
  4084df:	jne    0x408465
  4084e1:	inc    ebx
  4084e2:	into   
  4084e3:	mov    ebp,0xe559d93
  4084e8:	mov    ecx,DWORD PTR [ecx]
  4084ea:	push   ebx
  4084eb:	(bad)  
  4084ec:	stc    
  4084ed:	lods   eax,DWORD PTR ds:[esi]
  4084ee:	popa   
  4084ef:	jne    0x408475
  4084f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f2:	or     bh,BYTE PTR [esi+0x7561ab73]
  4084f8:	js     0x40849d
  4084fa:	out    0x7,eax
  4084fc:	je     0x4084e1
  4084fe:	mov    al,ds:0xef3f5bff
  408503:	jecxz  0x408491
  408505:	push   ecx
  408506:	push   es
  408507:	or     ecx,0xffffff9d
  40850a:	or     BYTE PTR [ebp-0x6d],dh
  40850d:	xchg   esp,eax
  40850e:	jp     0x4084ce
  408510:	das    
  408511:	aam    0x10
  408513:	imul   edi,DWORD PTR [ecx-0x16683664],0x965cc5d3
  40851d:	ds loope 0x408588
  408520:	mov    eax,ds:0xd1a3d99c
  408525:	sar    DWORD PTR [ebp-0x37377e98],cl
  40852b:	pusha  
  40852c:	int3   
  40852d:	shr    DWORD PTR [ebp-0x672f7e98],cl
  408533:	dec    eax
  408534:	int3   
  408535:	rcr    DWORD PTR [ebp-0x77339e98],cl
  40853b:	push   eax
	...
  408550:	int3   
  408551:	ror    DWORD PTR [ebp-0x673b9e98],cl
  408557:	cmp    ah,cl
  408559:	sar    DWORD PTR [ebp+0x68],cl
  40855c:	inc    ecx
  40855d:	ror    BYTE PTR [eax+0x6dd3cc40],0x68
  408564:	inc    ecx
  408565:	mov    eax,0xd3cca858
  40856a:	pop    ebp
  40856b:	cmp    cl,dh
  40856d:	js     0x408550
  40856f:	into   
  408570:	push   ss
  408571:	rcr    DWORD PTR [edi+0x3f],0x9c
  408575:	retf   
  408576:	xor    eax,0xe1a72468
  40857b:	pop    eax
  40857c:	dec    edx
  40857d:	cmp    al,0x91
  40857f:	into   
  408580:	int3   
  408581:	xchg   esp,eax
  408582:	cdq    
  408583:	mov    esi,0xdbe155e0
  408588:	mov    bl,0x69
  40858a:	mov    al,ds:0xbc8af403
  40858f:	ret    0x3b63
  408592:	mov    al,0xce
  408594:	int3   
  408595:	xchg   esp,eax
  408596:	cdq    
  408597:	sub    al,0xb9
  408599:	push   ebp
  40859a:	or     cl,ch
  40859c:	mov    ah,0x49
  40859e:	add    al,0xee
  4085a0:	xor    DWORD PTR [ebx-0x2c4daf20],ebx
  4085a6:	not    BYTE PTR [ecx-0x61]
  4085a9:	xchg   esp,eax
  4085aa:	out    0x97,eax
  4085ac:	dec    eax
  4085ad:	and    al,0x5d
  4085af:	sub    BYTE PTR [eax+0x1c843c],cl
	...
  4085c5:	add    BYTE PTR [eax],al
  4085c7:	add    BYTE PTR [ecx-0x2d],dl
  4085ca:	outs   dx,BYTE PTR ds:[esi]
  4085cb:	imul   edi,DWORD PTR ds:0xe8410854,0xe7e94967
  4085d5:	outs   dx,BYTE PTR ds:[esi]
  4085d6:	pop    ebp
  4085d7:	sub    BYTE PTR [eax-0x36cb83c4],dl
  4085dd:	shl    ch,cl
  4085df:	sbb    al,0xe4
  4085e1:	sar    DWORD PTR [ecx+eiz*8+0x47],1
  4085e5:	(bad)  
  4085e6:	test   BYTE PTR [esi-0x16e3c38d],0x3a
  4085ed:	adc    ah,BYTE PTR [eax+0x78]
  4085f0:	fst    QWORD PTR [ebx+0x8]
  4085f3:	add    DWORD PTR [eax],ebp
  4085f5:	imul   ecx,DWORD PTR [ecx-0x17],0xa85ce1d7
  4085fc:	(bad)  
  4085fd:	cmp    al,0xa5
  4085ff:	mov    esp,0x6d6ed2d0
  408604:	mov    ebp,0xf1d10853
  408609:	push   0x492ae949
  40860e:	add    al,0x36
  408610:	jge    0x4085ac
  408612:	loopne 0x4085f0
  408614:	jmp    0x4db57cea
  408619:	into   
  40861a:	push   edi
  40861b:	push   ds
  40861c:	jge    0x4085bc
  40861e:	neg    esp
  408620:	mov    ch,0x5b
  408622:	dec    ecx
  408623:	jmp    0xe4e2ef
  408628:	gs xchg esi,eax
  40862a:	add    eax,eax
	...
  408640:	fdivr  DWORD PTR [ebx-0x69c2ba33]
  408646:	or     BYTE PTR [eax],al
  408648:	xor    eax,0x32f44d93
  40864d:	shl    esi,cl
  40864f:	(bad)  
  408650:	fistp  WORD PTR [eax-0x6730ff9e]
  408656:	bound  eax,QWORD PTR [eax]
  408658:	rcl    ah,0xfa
  40865b:	push   eax
  40865c:	mov    al,ds:0xd2f7fc14
  408661:	cmp    bl,BYTE PTR [eax-0x1]
  408664:	enter  0xf740,0x75
  408668:	xor    DWORD PTR [esi+0x16],ebp
  40866b:	lods   al,BYTE PTR ds:[esi]
  40866c:	in     eax,0x95
  40866e:	add    eax,eax
  408670:	cdq    
  408671:	xchg   esi,eax
  408672:	jecxz  0x4086b4
  408674:	lea    esp,[edx+0x3af54141]
  40867a:	jge    0x408688
  40867c:	std    
  40867d:	ret    
  40867e:	leave  
  40867f:	call   DWORD PTR [edx+0x4e]
  408682:	fmul   DWORD PTR [ebp-0xbec8]
  408688:	xor    ah,ch
  40868a:	pop    eax
  40868b:	call   0x37ddaa
  408690:	cmp    al,0x14
  408692:	clc    
  408693:	test   DWORD PTR [edx+0x3a],0x4245b5f7
  40869a:	idiv   edi
  40869c:	push   edx
  40869d:	les    ecx,FWORD PTR [esi]
  40869f:	call   0x37bdfc
	...
  4086b8:	ret    0xf804
  4086bb:	div    DWORD PTR [edx-0xd5a1fc6]
  4086c1:	cmp    dh,bh
  4086c3:	jmp    FWORD PTR [eax]
  4086c5:	cmp    eax,0xaa8c95e3
  4086ca:	clc    
  4086cb:	sti    
  4086cc:	je     0x408745
  4086ce:	xchg   edx,eax
  4086cf:	add    BYTE PTR [esp+eax*4+0x288c0849],cl
  4086d6:	jb     0x4086c4
  4086d8:	movq   QWORD PTR [edi+0x6a],mm5
  4086dc:	mov    WORD PTR ds:0xc3c1fef5,ss
  4086e2:	push   edx
  4086e3:	mov    edx,0x896cf1f0
  4086e8:	shl    edi,1
  4086ea:	shl    edi,cl
  4086ec:	mov    eax,0xa1ff0c7c
  4086f1:	ret    
  4086f2:	push   edx
  4086f3:	mov    bh,0x12
  4086f5:	adc    ch,BYTE PTR [ebp+0x6a]
  4086f8:	mov    WORD PTR [ebx+0x17],ss
  4086fb:	push   ebp
  4086fc:	dec    ebp
  4086fd:	mov    ebx,0x7c60f7d2
  408702:	or     al,0xff
  408704:	mov    ecx,0x8c40b1b5
  408709:	adc    edi,ecx
  40870b:	shl    ebx,0x21
  40870e:	icebp  
  40870f:	mov    edi,0x4fdaca60
  408714:	rol    edi,cl
  408716:	repnz out 0x21,eax
  408719:	inc    edi
  40871a:	ins    DWORD PTR es:[edi],dx
  40871b:	inc    DWORD PTR [eax]
	...
  40872d:	add    BYTE PTR [eax],al
  40872f:	add    BYTE PTR [edx+esi*2-0x1b440053],dh
  408736:	or     ch,BYTE PTR [eax-0x6c]
  408739:	add    al,0xca
  40873b:	push   DWORD PTR [ebx]
  40873d:	mov    dh,0xc5
  40873f:	inc    eax
  408740:	mov    WORD PTR [edx+0x27],fs
  408743:	cmp    al,BYTE PTR [ebp-0x4]
  408746:	or     ch,al
  408748:	inc    ebp
  408749:	jge    0x4087b8
  40874b:	call   DWORD PTR [edi-0x23f10783]
  408751:	sub    eax,0x9484756c
  408756:	sbb    ecx,ebx
  408758:	ja     0x40872a
  40875a:	adc    eax,0x1e0f8a5c
  40875f:	not    BYTE PTR gs:[ecx+ecx*4-0x1eaa3ee2]
  408767:	fistp  DWORD PTR [ebx+0x69]
  40876a:	mov    al,ds:0xe192b403
  40876f:	add    ecx,DWORD PTR [edi*4-0x2fc4be40]
  408776:	stc    
  408777:	inc    ebx
  408778:	mov    eax,0x2ad4319f
  40877d:	dec    edx
  40877e:	jmp    0xc61155de
  408783:	fs and al,0xca
  408786:	mov    fs,WORD PTR [ebx+edx*1+0x3b]
  40878a:	loope  0x408767
  40878c:	mov    ds:0x7404205d,eax
  408791:	fwait
  408792:	sbb    al,0xc3
	...
  4087a8:	sti    
  4087a9:	aaa    
  4087aa:	jecxz  0x4087af
  4087ac:	mov    WORD PTR [ecx+ebx*4],ss
  4087af:	ins    BYTE PTR es:[edi],dx
  4087b0:	int    0xcf
  4087b2:	popf   
  4087b3:	clc    
  4087b4:	and    ecx,DWORD PTR [ecx-0x2a]
  4087b7:	ror    DWORD PTR [ebx-0x31],cl
  4087ba:	repz sti 
  4087bc:	jmp    0x40876b
  4087be:	jne    0x408824
  4087c0:	retf   
  4087c1:	mov    esp,0xcfc3a5ac
  4087c6:	or     cl,BYTE PTR [edx]
  4087c8:	mov    ebx,0x365bf949
  4087cd:	rcl    BYTE PTR [ebp+0x64],1
  4087d0:	ss jae 0x408831
  4087d3:	out    dx,al
  4087d4:	mov    edi,DWORD PTR [eax+edx*8-0x25306499]
  4087db:	pop    es
  4087dc:	xchg   ebx,eax
  4087dd:	dec    ecx
  4087de:	stc    
  4087df:	pop    ebx
  4087e0:	repnz rol BYTE PTR [edi],1
  4087e3:	ss call 0xf06e04b8
  4087e9:	dec    ecx
  4087ea:	add    BYTE PTR [ecx],dl
  4087ec:	scas   al,BYTE PTR es:[edi]
  4087ed:	adc    bh,dh
  4087ef:	push   ds
  4087f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087f1:	ror    BYTE PTR [ebx],cl
  4087f3:	jmp    0x6b24a24a
  4087f8:	fwait
  4087f9:	rcr    BYTE PTR [ebp-0x62],1
  4087fc:	xor    eax,0xb0e660cf
  408801:	dec    ecx
  408802:	add    BYTE PTR [ecx],al
  408804:	int3   
  408805:	or     esi,edi
  408807:	out    dx,al
  408808:	mov    ch,0x59
  40880a:	hlt    
  40880b:	jb     0x40880d
	...
  40881d:	add    BYTE PTR [eax],al
  40881f:	add    BYTE PTR [ebp-0x6fd7bff2],dl
  408825:	sbb    esi,DWORD PTR ds:0x85450ab
  40882b:	imul   ebp,DWORD PTR [edi-0x6c],0x95203a7c
  408832:	pop    esi
  408833:	sub    BYTE PTR [eax+0x32c9e067],dl
  408839:	xchg   esp,eax
  40883a:	or     dl,ah
  40883c:	dec    edi
  40883d:	dec    eax
  40883e:	pop    ss
  40883f:	aas    
  408840:	pusha  
  408841:	mov    al,al
  408843:	sahf   
  408844:	outs   dx,DWORD PTR ds:[esi]
  408845:	fs pusha 
  408847:	jmp    0x1f647db
  40884c:	mov    fs,WORD PTR [esi+0x49]
  40884f:	jmp    0xf1bd5673
  408854:	aaa    
  408855:	push   esp
  408856:	out    dx,eax
  408857:	jbe    0x408888
  408859:	mov    esp,0xcf2f2f40
  40885e:	pop    edi
  40885f:	stc    
  408860:	cmc    
  408861:	push   ebx
  408862:	or     BYTE PTR [esi-0x165dfdc9],dh
  408868:	(bad)  
  408869:	fwait
  40886a:	enter  0x8ed5,0x66
  40886e:	loopne 0x408870
  408870:	mov    ds:0x25fff75a,eax
  408875:	mov    edx,0xf2cafff6
  40887a:	pop    edi
  40887b:	push   ds
  40887c:	and    ebx,ecx
  40887e:	test   BYTE PTR [edi-0x56],0xeb
  408882:	push   cs
  408883:	call   0x408888
	...
  408898:	addr16 cmp esi,edi
  40889b:	dec    DWORD PTR [ebp-0x75004b33]
  4088a1:	cmp    eax,0x72e54609
  4088a6:	or     BYTE PTR [ebp-0x71],dh
  4088a9:	(bad)  
  4088ab:	xor    esi,DWORD PTR [ebp+0x2f]
  4088ae:	idiv   edi
  4088b0:	sub    dh,BYTE PTR [ebx]
  4088b2:	cli    
  4088b3:	scas   al,BYTE PTR es:[edi]
  4088b4:	ins    DWORD PTR es:[edi],dx
  4088b5:	cdq    
  4088b6:	jge    0x408845
  4088b8:	dec    edx
  4088b9:	in     eax,dx
  4088ba:	repnz inc eax
  4088bd:	mov    al,ds:0x32fe77e0
  4088c2:	neg    DWORD PTR [edi+0x6b]
  4088c5:	pop    edi
  4088c6:	retf   0xf504
  4088c9:	or     al,0x82
  4088cb:	in     al,dx
  4088cc:	dec    ebp
  4088cd:	cwde   
  4088ce:	or     bh,ch
  4088d0:	imul   edi,DWORD PTR [ecx-0x675ba9ca],0xfffffff7
  4088d7:	jne    0x4088d2
  4088d9:	xor    bh,BYTE PTR [ebp+0x8]
  4088dc:	or     eax,0xaffee65
  4088e1:	mov    edx,0xf3fa0007
  4088e6:	pop    edi
  4088e7:	inc    ebp
  4088e8:	mov    ds:0xc0fef6d7,eax
  4088ed:	popf   
  4088ee:	div    DWORD PTR [ebp-0x53]
  4088f1:	cmp    DWORD PTR [eax-0x3ecdd51a],esi
  4088f7:	ret    0x919d
  4088fa:	pop    ebp
  4088fb:	mov    eax,DWORD PTR [eax]
	...
  40890d:	add    BYTE PTR [eax],al
  40890f:	add    BYTE PTR [edi+edx*2+0x5388756a],cl
  408916:	sbb    al,dl
  408918:	xchg   ebx,eax
  408919:	push   esi
  40891a:	push   es
  40891b:	rol    BYTE PTR [eax],0xb2
  40891e:	loop   0x408949
  408920:	(bad)  
  408922:	or     dl,BYTE PTR [eax+0x64]
  408925:	bound  ecx,QWORD PTR [edi+edi*8+0x73]
  408929:	or     edi,DWORD PTR [ebx+0x62c3e1fe]
  40892f:	stos   DWORD PTR es:[edi],eax
  408930:	arpl   WORD PTR [esi+0x5ff5e86a],sp
  408936:	push   0xffffffff
  408938:	inc    ebp
  408939:	jns    0x40893e
  40893b:	add    cl,ah
  40893d:	inc    edx
  40893e:	or     DWORD PTR [bx+si-0x39],0xffffffe3
  408943:	jmp    DWORD PTR [ebp-0x7b8a964d]
  408949:	jecxz  0x4088df
  40894b:	mov    edx,0x4582ee2b
  408950:	and    BYTE PTR [ecx+0xc],dl
  408953:	push   0xffcb8679
  408958:	stos   DWORD PTR es:[edi],eax
  408959:	xor    DWORD PTR [edx+0x1f0e8c40],0xc7c553a
  408963:	call   0xffa98475
  408968:	xchg   ebx,edi
  40896a:	iret   
  40896b:	adc    edi,DWORD PTR [ebx+eiz*4]
  40896e:	or     eax,DWORD PTR [eax]
  408970:	repz fs mov esp,0xfe
	...
  408987:	add    BYTE PTR [ecx-0x4d],ah
  40898a:	bound  esp,QWORD PTR [ebx-0x11]
  40898d:	adc    eax,0x905de869
  408992:	imul   edi,edi,0x1ce2bb36
  408998:	arpl   WORD PTR [esp+ecx*1+0x68],di
  40899c:	and    edx,DWORD PTR [edi+esi*4+0x1bcdabc2]
  4089a3:	push   ds
  4089a4:	push   ebp
  4089a5:	push   ebx
  4089a6:	loope  0x408a13
  4089a8:	ds aam 0x45
  4089ab:	popa   
  4089ac:	xchg   esp,edx
  4089ae:	mov    ah,0xf7
  4089b0:	fstp   TBYTE PTR [eax+eiz*8]
  4089b3:	add    esi,DWORD PTR [ebx+0xb]
  4089b6:	xchg   ecx,eax
  4089b7:	pusha  
  4089b8:	add    DWORD PTR [ebp-0x3390e7b7],ebx
  4089be:	sub    eax,0x1609ae6c
  4089c3:	popa   
  4089c4:	not    BYTE PTR [ecx+ecx*4-0x1eaa3cd2]
  4089cb:	jmp    0x4089f1
  4089cd:	arpl   WORD PTR [eax-0x347db4fd],sp
  4089d3:	retf   0x94cc
  4089d6:	or     DWORD PTR ds:0xce5cc4c,esp
  4089dc:	dec    esp
  4089dd:	inc    ecx
  4089de:	(bad)  
  4089df:	mov    bl,0xdb
  4089e1:	retf   
  4089e2:	pop    ebx
  4089e3:	or     al,0x34
  4089e5:	lahf   
  4089e6:	fisub  WORD PTR [eax+0x1b]
  4089e9:	mov    ebp,0x9fd8
	...
  4089fe:	add    BYTE PTR [eax],al
  408a00:	adc    ecx,esp
  408a02:	pop    edx
  408a03:	add    al,0x74
  408a05:	jns    0x408a25
  408a07:	ret    
  408a08:	add    esi,DWORD PTR [eax+edx*4]
  408a0b:	mov    ecx,0x16a6944c
  408a10:	mov    dh,0x5d
  408a12:	and    BYTE PTR [esp+esi*8],al
  408a15:	int    0x55
  408a17:	pusha  
  408a18:	jecxz  0x4089b9
  408a1a:	mov    eax,ds:0x31648ad7
  408a1f:	popa   
  408a20:	pop    ecx
  408a21:	pushf  
  408a22:	cdq    
  408a23:	arpl   dx,cx
  408a25:	retf   
  408a26:	jne    0x408a93
  408a28:	ror    BYTE PTR [eax],cl
  408a2a:	or     BYTE PTR [esi+0x2c],dh
  408a2d:	or     BYTE PTR ds:[ecx],al
  408a30:	xchg   esi,eax
  408a31:	arpl   WORD PTR [ecx-0x17],cx
  408a34:	mov    bh,0x99
  408a36:	pop    edi
  408a37:	test   al,0x8f
  408a39:	retf   
  408a3a:	cmp    al,0x13
  408a3c:	(bad)  
  408a3d:	push   esp
  408a3e:	or     BYTE PTR [ecx+0x3c],al
  408a41:	or     esi,edi
  408a43:	inc    esi
  408a44:	cwde   
  408a45:	aam    0x7b
  408a47:	out    dx,al
  408a48:	aas    
  408a49:	pop    ebx
  408a4a:	idiv   DWORD PTR [edi+eax*4-0x13d04244]
  408a51:	retf   
  408a52:	fisttp WORD PTR [ebp+0xb]
  408a55:	retf   
  408a56:	not    BYTE PTR [ebx-0x1e83359d]
  408a5c:	out    0xec,eax
  408a5e:	cmc    
  408a5f:	push   cs
  408a60:	in     al,dx
  408a61:	adc    al,BYTE PTR ds:[esi]
	...
  408a78:	bound  edx,QWORD PTR [ebx-0x3452d020]
  408a7e:	test   BYTE PTR [ebx-0x1e833490],0xa7
  408a85:	shl    ch,1
  408a87:	out    0xcb,al
  408a89:	retf   
  408a8a:	jl     0x408a69
  408a8c:	ret    
  408a8d:	inc    ecx
  408a8e:	add    cl,al
  408a90:	mov    ecx,0xc1cef70d
  408a95:	(bad)  
  408a96:	or     ebp,ecx
  408a98:	inc    esp
  408a99:	push   ds
  408a9a:	in     al,0xbe
  408a9c:	in     eax,0x9e
  408a9e:	loopne 0x408a4d
  408aa0:	push   eax
  408aa1:	retf   
  408aa2:	mul    dl
  408aa4:	dec    edi
  408aa5:	inc    eax
  408aa6:	inc    esi
  408aa7:	adc    ebx,edx
  408aa9:	popa   
  408aaa:	dec    ecx
  408aab:	jmp    0xa9983dcf
  408ab0:	cmp    ecx,ebx
  408ab2:	push   edi
  408ab3:	cmp    DWORD PTR [eax],ebx
  408ab5:	xor    ecx,DWORD PTR [eax]
  408ab7:	add    BYTE PTR [ebp+0x7768b639],dh
  408abd:	add    ecx,DWORD PTR [eax+0x0]
  408ac0:	xchg   ebp,eax
  408ac1:	imul   edi,DWORD PTR [ebp+0x8],0xd
  408ac5:	test   eax,0x832ffed
  408aca:	outs   dx,DWORD PTR ds:[esi]
  408acb:	add    DWORD PTR [ebp-0x2b9749c7],esi
  408ad1:	add    DWORD PTR [eax+0x0],ecx
  408ad4:	aad    0x69
  408ad6:	jge    0x408ae0
  408ad8:	fnstsw WORD PTR [ebx-0x13]
  408adb:	inc    DWORD PTR [eax]
	...
  408aed:	add    BYTE PTR [eax],al
  408aef:	add    dl,al
  408af1:	or     BYTE PTR [edi+0x2],ch
  408af4:	cmp    esi,DWORD PTR gs:[esi+0x48030268]
  408afb:	add    BYTE PTR ds:0x7d087d6b,ah
  408b01:	mov    edi,0x3882ffeb
  408b06:	adc    bh,BYTE PTR [edx+eax*4+0x3dc2c169]
  408b0d:	xchg   esi,eax
  408b0e:	pop    ebp
  408b0f:	mov    edx,DWORD PTR [ecx+0xffccc15]
  408b15:	xchg   esi,eax
  408b16:	bound  ecx,QWORD PTR [ecx]
  408b18:	and    ch,ch
  408b1a:	push   cs
  408b1b:	call   0x37b291
  408b20:	pushf  
  408b21:	fdivr  st(2),st
  408b23:	push   0x1f
  408b25:	imul   edi,DWORD PTR [ebp+0x8],0x4d
  408b29:	push   ss
  408b2a:	idiv   edi
  408b2c:	sar    BYTE PTR [ebx-0x674700d7],cl
  408b32:	loopne 0x408baa
  408b34:	inc    edx
  408b35:	imul   esi,edi,0x6a
  408b38:	shr    DWORD PTR [edx+0x7d],0x8
  408b3c:	std    
  408b3d:	mov    ecx,0x6b02fff5
  408b42:	jge    0x408b40
  408b44:	mov    WORD PTR [edx],fs
  408b46:	rol    BYTE PTR [edi],1
  408b48:	in     al,0x81
  408b4a:	xchg   ebp,eax
  408b4b:	dec    ebx
  408b4d:	add    al,0x49
  408b4f:	add    al,0x8c
  408b51:	mov    al,ds:0xec83
	...
  408b66:	add    BYTE PTR [eax],al
  408b68:	es mov ebx,0x7c5b9be2
  408b6e:	or     al,0x68
  408b70:	push   ss
  408b71:	or     ecx,esp
  408b73:	jmp    DWORD PTR [edx+0x4d4912a0]
  408b79:	mov    ebx,0x5ad2d262
  408b7e:	push   esi
  408b7f:	or     ecx,DWORD PTR [edi+eax*1-0x10]
  408b83:	dec    edi
  408b84:	add    DWORD PTR [eax],0xfffffffb
  408b87:	inc    BYTE PTR [ecx]
  408b89:	mov    al,0xba
  408b8b:	(bad)  
  408b8c:	stc    
  408b8d:	mov    bl,0x62
  408b8f:	cwde   
  408b90:	jo     0x408c04
  408b92:	push   esi
  408b93:	call   0xff96c1c5
  408b98:	out    0xbb,al
  408b9a:	loop   0x408b37
  408b9c:	mov    ebx,0x16680afc
  408ba1:	sub    cl,ah
  408ba3:	jmp    FWORD PTR [ebx+0xc000abd]
  408ba9:	xchg   ebx,eax
  408baa:	stos   BYTE PTR es:[edi],al
  408bab:	mov    esi,0xc000ba33
  408bb0:	mov    al,ds:0x99febac8
  408bb5:	retf   
  408bb6:	push   ebx
  408bb7:	jne    0x408b41
  408bb9:	mov    edx,DWORD PTR [ebp+0x75]
  408bbc:	test   bl,dl
  408bbe:	loop   0x408ba3
  408bc0:	or     edx,edx
  408bc2:	arpl   WORD PTR [edx+0x47],si
  408bc5:	or     dl,BYTE PTR [ebp-0x1]
  408bc8:	sub    ebx,0x7553
	...
  408bde:	add    BYTE PTR [eax],al
  408be0:	adc    BYTE PTR [ebx-0x74],0x57
  408be4:	dec    ebp
  408be5:	xchg   esp,eax
  408be6:	loope  0x408c44
  408be8:	pop    ecx
  408be9:	pushf  
  408bea:	cdq    
  408beb:	xor    al,0xc8
  408bee:	popf   
  408bef:	dec    ebx
  408bf0:	into   
  408bf1:	xchg   edi,eax
  408bf2:	loope  0x408baa
  408bf4:	push   ss
  408bf5:	mov    eax,0x3dc04861
  408bfa:	loope  0x408be5
  408bfc:	test   ecx,ecx
  408bfe:	repz or esp,DWORD PTR [edx+edx*1+0x1aab5d39]
  408c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c07:	pop    edi
  408c08:	xor    al,0x94
  408c0a:	loope  0x408c78
  408c0c:	fidivr DWORD PTR [ebx]
  408c0e:	retf   0x4cb4
  408c11:	xchg   esp,eax
  408c12:	inc    esi
  408c13:	xlat   BYTE PTR ds:[ebx]
  408c14:	xchg   ebx,eax
  408c15:	mov    esp,0xc8835cc0
  408c1a:	fadd   DWORD PTR [edx]
  408c1c:	mov    WORD PTR [edi+0x5ff9ec7e],?
  408c22:	mov    al,ds:0xf9426b03
  408c27:	imul   edx,edx,0xffffffc7
  408c2a:	adc    eax,0x1d425b5d
  408c2f:	pop    ebp
  408c30:	fstp   DWORD PTR [ecx+ecx*1+0xdc80477]
  408c37:	dec    ebx
  408c38:	dec    esi
  408c39:	xchg   ecx,eax
  408c3a:	loope  0x408bf2
  408c3c:	push   es
  408c3d:	mov    ecx,0xc054485f
  408c42:	in     eax,0x5c
	...
  408c58:	sbb    DWORD PTR [edx-0x13],edx
  408c5b:	mov    bl,0x22
  408c5d:	inc    edx
  408c5e:	in     eax,0x5c
  408c60:	popa   
  408c61:	mov    ch,BYTE PTR [eax]
  408c63:	ret    
  408c64:	adc    esi,DWORD PTR [eax-0x6b735af6]
  408c6a:	cli    
  408c6b:	inc    ebx
  408c6c:	xchg   ebx,eax
  408c6d:	adc    DWORD PTR [ecx+0x8948c02],ebp
  408c73:	scas   al,BYTE PTR es:[edi]
  408c74:	retf   0x7bf
  408c77:	jmp    0x2d10210b
  408c7c:	inc    esp
  408c7d:	(bad)  
  408c7e:	push   cs
  408c7f:	jmp    0x348c713
  408c84:	mov    BYTE PTR [edx],bh
  408c86:	or     BYTE PTR [ebx],al
  408c88:	nop
  408c89:	sbb    DWORD PTR [ebp+0x7d],ecx
  408c8c:	call   FWORD PTR [eax]
  408c8e:	lea    esi,[ebp+0x60]
  408c91:	(bad)  
  408c92:	neg    BYTE PTR [ecx]
  408c94:	push   ecx
  408c95:	inc    ecx
  408c96:	lock outs dx,BYTE PTR ds:[esi]
  408c98:	ret    0xdfcb
  408c9b:	gs jmp 0x50329535
  408ca1:	inc    eax
  408ca2:	or     eax,0x8951440
  408ca7:	jmp    0xa8822e23
  408cac:	pop    edi
  408cae:	jl     0x408c9d
  408cb0:	out    0x59,eax
  408cb2:	mov    dh,0x36
  408cb4:	shl    BYTE PTR [ebx+eax*4+0x19],1
  408cb8:	sbb    dl,BYTE PTR [ecx]
  408cba:	cld    
  408cbb:	push   ds
	...
  408cd0:	rol    bh,0x57
  408cd3:	mov    ebx,0x16b689e7
  408cd8:	mov    al,0x1d
  408cda:	lea    ebx,[ecx]
  408cdc:	loopne 0x408ca5
  408cde:	not    BYTE PTR [ecx]
  408ce0:	mov    esp,0x24fef70a
  408ce5:	(bad)  
  408ce6:	outs   dx,BYTE PTR ds:[esi]
  408ce7:	(bad)  
  408ce8:	call   DWORD PTR [ebx+0x8]
  408ceb:	out    dx,al
  408cec:	add    esp,eax
  408cee:	(bad)  
  408cef:	out    0xc7,al
  408cf1:	(bad)  
  408cf2:	cmp    al,0x23
  408cf4:	dec    ecx
  408cf5:	push   esp
  408cf6:	or     cl,al
  408cf8:	fwait
  408cf9:	or     edi,esi
  408cfb:	into   
  408cfc:	sbb    DWORD PTR [ecx],edx
  408cfe:	in     al,dx
  408cff:	add    BYTE PTR [edx+0x6b],al
  408d02:	imul   DWORD PTR [edx-0x1b]
  408d05:	mov    edx,0x90a457ff
  408d0a:	div    DWORD PTR [ebp-0x89cdb]
  408d10:	sub    ah,BYTE PTR [ebp-0x6f5bb6ce]
  408d16:	loopne 0x408d8d
  408d18:	cmp    BYTE PTR [ebx-0x9],ch
  408d1b:	mov    DWORD PTR [eax],esi
  408d1d:	cmp    al,0xff
  408d1f:	dec    DWORD PTR [edx]
  408d21:	mov    dh,0xf6
  408d23:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  408d25:	or     cl,BYTE PTR [eax+0x0]
  408d28:	cmp    ah,BYTE PTR ds:0x6b3af7f8
  408d2e:	div    DWORD PTR ds:0x47d96f
	...
  408d48:	cmp    eax,0x3affb403
  408d4d:	sbb    DWORD PTR [ebp-0x8961d18],ecx
  408d53:	push   0x75
  408d55:	mov    edx,0x92245818
  408d5a:	div    DWORD PTR [ebp-0x89e4b]
  408d60:	mov    edx,0x344932a3
  408d65:	xchg   edx,eax
  408d66:	loopne 0x408da1
  408d68:	mov    eax,0xe089f769
  408d6d:	xor    bh,bh
  408d6f:	call   FWORD PTR [edx+0x42d88d1b]
  408d75:	imul   esi,edi,0x50
  408d78:	sbb    eax,0x25415ebe
  408d7d:	imul   edi,DWORD PTR [ebp-0x894dd10],0xffffffff
  408d84:	and    BYTE PTR [esi+0x3a254141],0x1e
  408d8b:	mov    ebp,0xb51de8c
  408d90:	int3   
  408d91:	pop    edi
  408d92:	cmc    
  408d93:	add    BYTE PTR [ecx-0xc],0x59
  408d97:	(bad)  
  408d98:	sti    
  408d99:	scas   eax,DWORD PTR es:[edi]
  408d9a:	xlat   BYTE PTR ds:[ebx]
  408d9b:	psllq  mm1,mm3
  408d9e:	add    DWORD PTR [ebp-0xae0138],0xb96e233c
  408da8:	(bad)  [esi]
  408daa:	data16 adc al,0x0
	...
  408dbd:	add    BYTE PTR [eax],al
  408dbf:	add    BYTE PTR [edi+0x5c05c6fb],al
  408dc5:	adc    edi,DWORD PTR [edx]
  408dc7:	mov    ecx,0x854a0ec3
  408dcc:	fdivr  DWORD PTR [esi]
  408dce:	push   edx
  408dcf:	call   FWORD PTR [ecx+0xf000abb]
  408dd5:	jns    0x408e2e
  408dd7:	mul    DWORD PTR [ebx+0x31740b2e]
  408ddd:	cmp    dl,BYTE PTR [eax+0x525e9bec]
  408de3:	add    BYTE PTR [eax],al
  408de5:	clc    
  408de6:	lea    edi,[ebp-0xad798c]
  408dec:	mov    edi,?
  408dee:	mov    ebp,0x61bb8c67
  408df3:	mov    esi,0xe803006b
  408df8:	mov    edx,0x5bff5265
  408dfd:	pusha  
  408dfe:	outs   dx,DWORD PTR ds:[esi]
  408dff:	not    DWORD PTR [ebx-0x62]
  408e02:	push   edx
  408e03:	jne    0x408d99
  408e05:	xchg   ebx,eax
  408e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e07:	mov    dh,0x43
  408e09:	mov    ss,WORD PTR [edx-0x4b]
  408e0c:	and    al,0xbe
  408e0e:	push   eax
  408e0f:	push   DWORD PTR [ebx]
  408e11:	dec    eax
  408e12:	add    ebp,eax
  408e14:	or     BYTE PTR [ebp+0x52],bh
  408e17:	jmp    DWORD PTR [ebx]
  408e19:	xchg   esp,eax
  408e1a:	xchg   esp,eax
  408e1b:	pusha  
  408e1c:	and    eax,ebp
  408e1e:	aad    0x59
  408e20:	cdq    
  408e21:	pushf  
  408e22:	leave  
  408e23:	mov    al,BYTE PTR [eax]
	...
  408e35:	add    BYTE PTR [eax],al
  408e37:	add    BYTE PTR [edx-0x3b],al
  408e3a:	lds    ebx,FWORD PTR [ecx+0x39]
  408e3d:	mov    ah,0xb5
  408e3f:	pop    ecx
  408e40:	sti    
  408e41:	les    edi,FWORD PTR [ebx]
  408e43:	or     al,0xe4
  408e45:	adc    esi,DWORD PTR [edi+0x59]
  408e48:	jmp    0x408e0e
  408e4a:	jnp    0x408e84
  408e4c:	fcmovnb st,st(4)
  408e4e:	lods   eax,DWORD PTR ds:[esi]
  408e4f:	pop    ecx
  408e50:	popa   
  408e51:	pushf  
  408e52:	cdq    
  408e53:	hlt    
  408e54:	sbb    ebp,eax
  408e56:	popf   
  408e57:	pop    ecx
  408e58:	add    DWORD PTR [eax-0x443ca663],esi
  408e5e:	adc    al,0x9b
  408e60:	mov    ebx,0xa08f75c4
  408e65:	mov    esp,0x5ab4597d
  408e6a:	cmp    BYTE PTR [ecx-0x5d],bl
  408e6d:	les    edx,FWORD PTR [ebx+0x55c4a36c]
  408e73:	ins    BYTE PTR es:[edi],dx
  408e74:	push   edx
  408e75:	or     ebx,DWORD PTR [esi+0x59]
  408e78:	mov    ecx,DWORD PTR [edx]
  408e7a:	inc    ecx
  408e7b:	push   ecx
  408e7c:	add    esp,0x58
  408e7f:	adc    eax,0x5935c435
  408e84:	cmp    ebp,eax
  408e86:	xor    eax,0x8ad6b59
  408e8b:	fwait
  408e8c:	arpl   sp,ax
  408e8e:	sub    eax,0xddae63bf
  408e93:	pop    ecx
  408e94:	push   ebx
  408e95:	les    ebx,FWORD PTR ds:0xacad47cf
  408e9b:	sahf   
	...
  408eb0:	mov    WORD PTR [eax+edi*1-0x636b7bba],ss
  408eb7:	mov    WORD PTR [eax],fs
  408eb9:	sbb    BYTE PTR [eax],cl
  408ebb:	sub    eax,0x83082ec8
  408ec0:	nop
  408ec1:	ret    
  408ec2:	jl     0x408eb5
  408ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec5:	jle    0x408e85
  408ec7:	fidiv  WORD PTR [ebp+ecx*1+0x5a12d54d]
  408ece:	lock cmp eax,esi
  408ed1:	call   FWORD PTR [esi+0x28]
  408ed4:	nop
  408ed5:	sub    al,0xa0
  408ed7:	push   ss
  408ed8:	iret   
  408ed9:	ret    
  408eda:	cmc    
  408edb:	cld    
  408edc:	mov    DWORD PTR [ebp+0x49],ecx
  408edf:	jmp    0xa6f3515b
  408ee4:	xor    al,0x8f
  408ee6:	enter  0xdd15,0x53
  408eea:	pusha  
  408eeb:	call   0x8ef6427f
  408ef0:	ror    bl,cl
  408ef2:	push   edi
  408ef3:	xchg   dl,cl
  408ef5:	fwait
  408ef6:	loopne 0x408f69
  408ef8:	jne    0x408ebd
  408efa:	test   BYTE PTR [ecx+0x6ef6fc58],0xa
  408f01:	pop    edx
  408f02:	lock mov ecx,0xa85ecea7
  408f08:	(bad)  
  408f09:	sub    al,0xa0
  408f0b:	mov    esi,0x14f5c34e
  408f10:	mov    ds:0xe9494d,al
	...
  408f25:	add    BYTE PTR [eax],al
  408f27:	add    bh,ah
  408f29:	into   
  408f2a:	mov    dl,0x3e
  408f2c:	aam    0x8f
  408f2e:	enter  0x5cbd,0x53
  408f32:	pusha  
  408f33:	jmp    0x408ec4
  408f35:	mov    bl,0xb5
  408f37:	es dec edx
  408f39:	retf   
  408f3a:	push   edi
  408f3b:	push   ds
  408f3c:	inc    edx
  408f3d:	fwait
  408f3e:	loopne 0x408efd
  408f40:	test   ebx,eax
  408f42:	test   BYTE PTR [ecx],0xbc
  408f45:	cld    
  408f46:	test   BYTE PTR [eax],0x92
  408f49:	scas   eax,DWORD PTR es:[edi]
  408f4a:	rcl    DWORD PTR [edi-0x1c],1
  408f4d:	xchg   esi,eax
  408f4e:	div    DWORD PTR [ebp+0x2d]
  408f51:	das    
  408f52:	jg     0x408f51
  408f54:	xor    ch,BYTE PTR [ebx-0x9]
  408f57:	jne    0x408f8a
  408f59:	imul   edi,DWORD PTR [ebp+0x8],0x3d
  408f5d:	pop    ebp
  408f5e:	mov    ebp,0xca50e2ff
  408f63:	add    al,0xf5
  408f65:	add    eax,DWORD PTR [edx-0x2bab9b14]
  408f6b:	div    DWORD PTR [edx]
  408f6d:	imul   eax,DWORD PTR [ebp-0x9f7debb],0x75
  408f74:	shr    DWORD PTR [ecx+0x3d],0x3a
  408f78:	pushf  
  408f79:	fdecstp 
  408f7b:	out    0x57,eax
  408f7d:	hlt    
  408f7e:	pop    es
  408f7f:	add    BYTE PTR [esi-0xb7af8aa],ch
  408f85:	cwde   
  408f86:	or     BYTE PTR [eax],al
  408f88:	jmp    0x0:0xfed4
	...
  408f9f:	add    BYTE PTR [ebp+0x78c70896],ah
  408fa5:	test   DWORD PTR fs:[edi],0x6296b5
  408fac:	mov    edi,0xbf006296
  408fb1:	xchg   esi,eax
  408fb2:	test   DWORD PTR [ebp-0x17],eax
  408fb5:	or     BYTE PTR [ebp+eax*4-0x8ae27],al
  408fbc:	adc    eax,0xb2f87d6b
  408fc1:	jecxz  0x408fb5
  408fc3:	call   0x48b221
  408fc8:	outs   dx,BYTE PTR ds:[esi]
  408fc9:	push   esi
  408fca:	jl     0x408fd1
  408fcc:	jl     0x408fe2
  408fce:	or     DWORD PTR [eax],eax
  408fd0:	gs scas al,BYTE PTR es:[edi]
  408fd2:	sbb    al,0x49
  408fd4:	mov    esp,gs
  408fd6:	or     bh,bh
  408fd8:	mov    ecx,0xf7b562df
  408fdd:	call   0x8581:0x9c07505f
  408fe4:	and    bl,al
  408fe6:	pop    ebp
  408fe7:	(bad)  
  408fe8:	mov    esp,0xd7a5631d
  408fed:	mov    edx,0xdc09895d
  408ff2:	inc    ebp
  408ff3:	dec    DWORD PTR [ebx]
  408ff5:	aam    0x51
  408ff7:	mov    bh,0x3
  408ff9:	shl    eax,cl
  408ffb:	push   DWORD PTR [ebx-0x6d]
  408ffe:	mov    ah,0x40
  409000:	mov    WORD PTR [edx],es
  409002:	cwde   
  409003:	lock add BYTE PTR [eax],al
	...
  409016:	add    BYTE PTR [eax],al
  409018:	jecxz  0x409024
  40901a:	pop    esi
  40901b:	call   FWORD PTR [ecx-0x73bf3c3b]
  409021:	and    edx,DWORD PTR [edx-0x46]
  409024:	shl    DWORD PTR [edx],cl
  409026:	test   BYTE PTR [ebp-0xa1dd50],al
  40902c:	ss stos DWORD PTR es:[edi],eax
  40902e:	loop   0x409050
  409030:	push   esp
  409031:	ins    BYTE PTR es:[edi],dx
  409032:	or     al,0xff
  409034:	stc    
  409035:	cmp    eax,DWORD PTR [esi-0x1]
  409038:	stos   DWORD PTR es:[edi],eax
  409039:	dec    edx
  40903a:	sbb    BYTE PTR [edx],bh
  40903c:	push   ebp
  40903d:	ins    BYTE PTR es:[edi],dx
  40903e:	or     al,0xe8
  409040:	mov    ecx,0x5ff5df5
  409045:	cmp    DWORD PTR [edi-0x9],ebp
  409048:	mov    ebp,DWORD PTR [edx-0x1f]
  40904b:	(bad)  
  40904c:	jmp    0x408fe3
  40904e:	mov    ah,0x40
  409050:	mov    WORD PTR [edx-0x68],ds
  409053:	lock jnp 0x408fd8
  409056:	pop    esi
  409057:	jmp    DWORD PTR [ecx-0x73bf3c3b]
  40905d:	push   ebx
  40905e:	sahf   
  40905f:	mov    edx,0x8c2e945b
  409064:	or     DWORD PTR [ebp+ebx*1-0x1ed1b4aa],esi
  40906b:	jmp    0x4090df
  40906d:	pop    esp
  40906e:	mov    al,ds:0xf1073b03
  409073:	dec    ebp
  409074:	xor    eax,ecx
  409076:	cmc    
  409077:	pcmpgtd mm1,QWORD PTR [ebx-0x60]
  40907b:	add    eax,DWORD PTR [eax]
	...
  40908d:	add    BYTE PTR [eax],al
  40908f:	add    BYTE PTR [ebx+esi*8],dh
  409092:	cmp    dl,BYTE PTR [esi+0x1b]
  409095:	or     esp,DWORD PTR [esp+ebp*2+0x1b]
  409099:	rcl    ebp,0xea
  40909c:	or     edi,DWORD PTR [ecx]
  40909e:	and    BYTE PTR [esp+ecx*2-0x370396c],bh
  4090a5:	enter  0x55cd,0xf3
  4090a9:	xchg   BYTE PTR [ebx],cl
  4090ab:	retf   
  4090ac:	dec    esp
  4090ad:	xchg   esp,eax
  4090ae:	leave  
  4090af:	and    DWORD PTR [esi],0x118ba5c1
  4090b5:	loopne 0x40904c
  4090b7:	push   ebp
  4090b8:	rcl    DWORD PTR [esp+edx*2],cl
  4090bb:	pusha  
  4090bc:	ret    
  4090bd:	rcr    BYTE PTR [ebp+0x62373804],0x97
  4090c4:	test   al,0xc8
  4090c6:	lea    edx,[ebp-0x74]
  4090c9:	dec    eax
  4090ca:	adc    eax,0x75abe981
  4090cf:	push   ebp
  4090d0:	mov    ds:0x33b0fd93,eax
  4090d5:	xchg   esp,eax
  4090d6:	loope  0x40913c
  4090d8:	rol    al,cl
  4090da:	fisttp DWORD PTR [ebx]
  4090dc:	je     0x40908d
  4090de:	xchg   ecx,eax
  4090df:	push   ebp
  4090e0:	add    eax,0xffffff9b
  4090e3:	push   0x554dc083
  4090e8:	stc    
  4090e9:	mov    WORD PTR [ecx-0x3e],ds
  4090ec:	pop    ds
  4090ed:	rol    BYTE PTR [edi],0x36
  4090f0:	mov    ecx,0x36e009
	...
  409105:	add    BYTE PTR [eax],al
  409107:	add    cl,al
  409109:	mov    edi,0xac879cf6
  40910e:	cmp    edx,DWORD PTR [ebp-0x1f]
  409111:	mov    edi,0xc7ac5cf6
  409116:	test   BYTE PTR [esi],0xe1
  409119:	dec    ecx
  40911a:	add    BYTE PTR [ecx],dl
  40911c:	xchg   edx,eax
  40911d:	or     bh,dh
  40911f:	inc    al
  409121:	or     eax,ebp
  409123:	(bad)  
  409124:	mov    eax,0x8774f6bf
  409129:	lods   al,BYTE PTR ds:[esi]
  40912a:	setge  BYTE PTR [eax-0x3c6b0941]
  409131:	(bad)  
  409132:	not    dh
  409134:	pop    eax
  409135:	dec    ecx
  409136:	add    cl,al
  409138:	test   DWORD PTR [eax],ecx
  40913a:	test   esi,0xb6ec0958
  409140:	inc    eax
  409141:	mov    edi,0xc011c5df
  409146:	imul   BYTE PTR [esi-0x59014ef6]
  40914c:	cmp    BYTE PTR [eax+ebp*8-0x9409fa9],ch
  409153:	pop    esp
  409154:	aaa    
  409155:	(bad)  
  409156:	test   BYTE PTR [esi-0x794219d9],0x58
  40915d:	mov    edi,0xbf5889bc
  409162:	test   BYTE PTR [ecx+0x6ef70654],0x40
  409169:	or     esp,edx
  40916b:	pop    esi
	...
  409180:	cmp    BYTE PTR [edi-0x40e6d621],bh
  409186:	not    BYTE PTR [esi+0x12]
  409189:	(bad)  
  40918a:	dec    BYTE PTR [esi-0x20]
  40918d:	mov    edi,0x2b7d007c
  409192:	aas    
  409193:	(bad)  
  409194:	stos   BYTE PTR es:[edi],al
  409195:	push   0x50a5b5f7
  40919a:	idiv   edi
  40919c:	int    0x20
  40919e:	mov    esi,0x4d68aaff
  4091a3:	clc    
  4091a4:	pushf  
  4091a5:	fxtract 
  4091a7:	call   FWORD PTR [edx-0x72038298]
  4091ad:	push   esp
  4091ae:	stos   BYTE PTR es:[edi],al
  4091af:	add    BYTE PTR ds:0x3508ca4a,ah
  4091b5:	out    dx,al
  4091b6:	sub    esp,0x6af47fb6
  4091bc:	and    eax,0xb0ff02ad
  4091c1:	shr    dh,0xb9
  4091c4:	es arpl di,si
  4091c7:	mov    DWORD PTR [eax-0x42b29f9c],esi
  4091cd:	fdecstp 
  4091cf:	(bad)  
  4091d0:	mov    al,0xc0
  4091d2:	out    dx,al
  4091d3:	imul   BYTE PTR [eax]
  4091d5:	arpl   di,si
  4091d7:	jmp    DWORD PTR [eax-0x128a089c]
  4091dd:	pop    edx
  4091de:	in     al,dx
  4091df:	mov    bl,0x2a
  4091e1:	arpl   cx,ax
  4091e3:	ret    0x0
	...
  4091f6:	add    BYTE PTR [eax],al
  4091f8:	mov    cl,0x92
  4091fa:	pop    ebp
  4091fb:	mov    ecx,DWORD PTR [ecx]
  4091fd:	sbb    esp,ecx
  4091ff:	shl    BYTE PTR [edx],1
  409201:	arpl   di,si
  409203:	lea    esp,[eax+0x64]
  409206:	pop    eax
  409207:	jmp    DWORD PTR [eax-0x20ca0a42]
  40920d:	inc    DWORD PTR [edi+0x0]
  409210:	or     eax,0xa500a8d1
  409215:	mov    ebp,0x8ef00fb6
  40921a:	or     al,BYTE PTR [eax]
  40921c:	mov    WORD PTR [ebx-0x538bbabf],gs
  409222:	or     al,BYTE PTR [eax]
  409224:	mov    WORD PTR [esi-0x3f],gs
  409227:	repz imul esi,DWORD PTR [edi-0x5409fff6],0xffffffd4
  40922f:	jmp    ebp
  409231:	stos   DWORD PTR es:[edi],eax
  409232:	aam    0xff
  409234:	add    cl,dh
  409236:	pop    esi
  409237:	push   eax
  409238:	sbb    DWORD PTR [ecx],edi
  40923a:	push   eax
  40923b:	test   DWORD PTR [ebx-0x59],0xa3c1febc
  409242:	pop    ebx
  409243:	jne    0x409275
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	mov    bh,0xa1
  409248:	mov    WORD PTR [ebx-0x4f67400b],gs
  40924e:	push   ebx
  40924f:	std    
  409250:	lea    ebp,[ebx-0x7b8597f6]
  409256:	int    0xff
  409258:	or     ch,BYTE PTR [ecx+0x8]
  40925b:	call   0x409260
	...
  409270:	and    BYTE PTR ds:0xfc07ff5a,ah
  409276:	xchg   DWORD PTR [ebp-0xa60108],eax
  40927c:	cmp    al,0x99
  40927e:	push   esp
  40927f:	loope  0x4092a6
  409281:	pop    es
  409282:	pop    edx
  409283:	mov    DWORD PTR [ecx],edx
  409285:	cld    
  409286:	push   ecx
  409287:	call   ebx
  409289:	mov    eax,ds:0x53f5680c
  40928e:	int    0xff
  409290:	ret    0x5b60
  409293:	idiv   DWORD PTR [ebx+0x76355a0e]
  409299:	test   ch,cl
  40929b:	push   DWORD PTR [ebx-0x5c007cdd]
  4092a1:	xor    al,0x80
  4092a3:	in     al,0xa3
  4092a5:	cs pop edx
  4092a7:	push   0xffffff8c
  4092a9:	xchg   esp,eax
  4092aa:	fldcw  WORD PTR [ebp-0x1c]
  4092ad:	push   ebx
  4092ae:	loope  0x409302
  4092b0:	cmp    esp,eax
  4092b2:	push   ebp
  4092b3:	push   edx
  4092b4:	jnp    0x409273
  4092b6:	sbb    ecx,DWORD PTR [esi]
  4092b8:	lds    edx,FWORD PTR [ebx-0x1f]
  4092bb:	pop    ebx
  4092bc:	push   esi
  4092bd:	cld    
  4092be:	xor    eax,0x4d171552
  4092c3:	pop    edx
  4092c4:	pop    ebx
  4092c5:	mov    ebp,0x1de403ca
  4092ca:	leave  
  4092cb:	les    ecx,FWORD PTR [ebx-0x42]
  4092ce:	pop    ebx
  4092cf:	push   ebx
  4092d0:	cmp    edi,DWORD PTR [ebp+0x521d]
	...
  4092e6:	add    BYTE PTR [eax],al
  4092e8:	cmp    DWORD PTR [edx-0x58],0x5cb533c4
  4092ef:	mov    ebp,DWORD PTR [ebx]
  4092f1:	mov    ebp,0xc5348877
  4092f6:	std    
  4092f7:	push   ecx
  4092f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f9:	xchg   esp,eax
  4092fa:	mov    DWORD PTR [edi+0x50e153b4],ebx
  409300:	inc    ecx
  409301:	(bad)  
  409302:	fst    QWORD PTR [ecx+0x3]
  409305:	mov    ebp,0x53450e13
  40930a:	loope  0x409367
  40930c:	add    bh,ah
  40930e:	int    0x51
  409310:	adc    eax,0xe359c117
  409315:	mov    esp,0xc4c0876b
  40931a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40931b:	push   ecx
  40931c:	cmp    al,0x2c
  40931e:	inc    ebp
  40931f:	lods   al,BYTE PTR ds:[esi]
  409320:	dec    esp
  409321:	xchg   esp,eax
  409322:	xchg   esi,eax
  409323:	xchg   edi,eax
  409324:	mov    esp,0xbb519dc4
  409329:	xchg   bl,bl
  40932b:	mov    edx,0xdd99944c
  409330:	jecxz  0x4092ee
  409332:	jne    0x409331
  409334:	jecxz  0x40937d
  409336:	or     al,dl
  409338:	adc    bh,bh
  40933a:	(bad)  [esi+0x3d]
  40933d:	mov    ebp,0xbb7fdc0b
  409342:	aaa    
  409343:	outs   dx,BYTE PTR ds:[esi]
  409344:	or     ebx,ecx
  409346:	(bad)  
  409347:	push   esi
  409348:	frstor [eax+eiz*8+0x11]
	...
  409360:	sbb    edi,DWORD PTR [esi+esi*8-0x37709bae]
  409367:	mov    ch,0x95
  409369:	fs loopne 0x409371
  40936c:	add    edi,DWORD PTR [esi+esi*8-0x126f4da]
  409373:	frstor es:[ecx+0x98fe908]
  40937a:	lea    edi,[ecx]
  40937c:	aad    0xbb
  40937e:	idiv   BYTE PTR [ecx-0x57affaa9]
  409384:	(bad)  
  409385:	mov    ebx,0xbbc4f9bc
  40938a:	div    dh
  40938c:	cmp    BYTE PTR [esi+0x41],0xa8
  409390:	(bad)  
  409391:	lods   al,BYTE PTR ds:[esi]
  409392:	adc    al,0xa1
  409394:	pop    esp
  409395:	mov    ebx,0xc3b76480
  40939a:	not    dh
  40939c:	adc    dl,bh
  40939e:	jmp    0x409376
  4093a0:	pop    esp
  4093a1:	mov    ebx,0x2013f607
  4093a6:	or     cl,ch
  4093a8:	(bad)  
  4093a9:	pop    ss
  4093aa:	mov    ch,0xc5
  4093ac:	xor    al,0xbb
  4093ae:	imul   cl
  4093b0:	mov    WORD PTR [eax],ss
  4093b2:	xchg   cl,ch
  4093b4:	(bad)  
  4093b5:	xchg   esp,eax
  4093b6:	mov    ebx,DWORD PTR [edi+eiz*2-0x3d]
  4093ba:	not    BYTE PTR [esi+0x688c8b8f]
  4093c0:	(bad)  
  4093c1:	xchg   esp,eax
  4093c2:	or     BYTE PTR [eax],al
	...
  4093d8:	jge    0x40939a
  4093da:	imul   dh
  4093dc:	arpl   WORD PTR [ebp+edi*2+0x8],sp
  4093e0:	or     eax,0x22ffb7cc
  4093e5:	fs mov ebp,0xf764eaec
  4093eb:	call   FWORD PTR [eax-0x41]
  4093ee:	out    dx,al
  4093ef:	rcl    BYTE PTR [esp+eiz*2],1
  4093f2:	idiv   edi
  4093f4:	sbb    BYTE PTR [edi-0x1],bl
  4093f7:	call   edx
  4093f9:	fs jge 0x409404
  4093fc:	mov    ebp,0xa2ffb951
  409401:	fs mov ebp,0xf7649ae4
  409407:	jmp    FWORD PTR [eax]
  409409:	mov    edi,0x64e4b4ee
  40940e:	idiv   edi
  409410:	fsubr  DWORD PTR [ebx-0x1]
  409413:	inc    DWORD PTR [edx+0x7d087d64]
  409419:	shl    DWORD PTR [edi-0x42b4dd01],cl
  40941f:	loopne 0x40943b
  409421:	dec    ebx
  409422:	idiv   edi
  409424:	cwde   
  409425:	mov    edi,0x4b2498ee
  40942a:	test   DWORD PTR [ebx-0x97e0],0x1b7c8fe2
  409434:	and    ax,0xf7d8
  409438:	ror    BYTE PTR [edx+0xc],cl
  40943b:	jne    0x40943d
	...
  40944d:	add    BYTE PTR [eax],al
  40944f:	add    bh,al
  409451:	cmp    eax,0x4b1ad88d
  409456:	idiv   edi
  409458:	aad    0x49
  40945a:	jge    0x409464
  40945c:	sbb    eax,0x22ffb7bc
  409461:	pop    edi
  409462:	add    ch,BYTE PTR [edx-0x74]
  409465:	lods   eax,DWORD PTR ds:[esi]
  409466:	inc    ebp
  409467:	jne    0x4093ed
  409469:	adc    eax,0x11abb0f4
  40946e:	inc    edi
  40946f:	mov    ch,0xa8
  409471:	inc    ecx
  409472:	inc    edi
  409473:	jmp    DWORD PTR [eax+esi*2+0x2993ff90]
  40947a:	xchg   ecx,eax
  40947b:	in     al,dx
  40947c:	xor    DWORD PTR [ebx],0x47
  40947f:	call   0xff87b451
  409484:	jnp    0x40949f
  409486:	push   esp
  409487:	div    DWORD PTR [ebx+0x4b]
  40948a:	push   esp
  40948b:	and    BYTE PTR ss:[ebx+0x47],dl
  40948f:	call   FWORD PTR [ecx]
  409491:	dec    esp
  409492:	pop    edi
  409493:	call   FWORD PTR [ebx+0x54]
  409496:	adc    esi,DWORD PTR [ebx+edx*2+0x64b5476b]
  40949d:	fwait
  40949e:	inc    edi
  40949f:	push   DWORD PTR [esp+ecx*8]
  4094a2:	sahf   
  4094a3:	(bad)  
  4094a4:	cmp    esp,DWORD PTR [ebx-0x74c40f6f]
  4094aa:	inc    edi
  4094ab:	call   0xff880c31
  4094b0:	and    esi,ecx
  4094b2:	inc    edx
  4094b3:	jmp    0x4094b8
	...
  4094c8:	inc    ecx
  4094c9:	rol    DWORD PTR [ebp-0x1],0x13
  4094cd:	inc    ecx
  4094ce:	inc    edi
  4094cf:	call   0x4ba091
  4094d4:	aad    0xed
  4094d6:	bnd jmp DWORD PTR [eax+0x36]
  4094da:	push   edi
  4094db:	or     eax,0xffffffc7
  4094de:	sar    bh,1
  4094e0:	jne    0x4094a2
  4094e2:	inc    ebp
  4094e3:	jne    0x409479
  4094e5:	jecxz  0x409514
  4094e7:	mov    cl,0xdb
  4094e9:	add    dh,BYTE PTR [ebp+eax*2-0x30]
  4094ed:	push   ebx
  4094ee:	ret    
  4094ef:	push   edi
  4094f0:	dec    ebp
  4094f1:	xchg   esp,eax
  4094f2:	loope  0x409542
  4094f4:	cmp    DWORD PTR [ecx+ebx*4-0x62464730],ecx
  4094fb:	dec    esi
  4094fc:	cmp    DWORD PTR [eax-0x536c277b],edi
  409502:	adc    dl,BYTE PTR [ebp+0x41b7b9a3]
  409508:	nop
  409509:	xchg   esp,eax
  40950a:	adc    al,0x7b
  40950c:	mov    al,ds:0x833fad13
  409511:	mov    ecx,0xb8c9806d
  409516:	mov    al,0x4e
  409518:	add    DWORD PTR [ecx+0x4bb6185e],ecx
  40951e:	mov    al,ds:0x6db17403
  409523:	add    ecx,DWORD PTR [ebp+ecx*4+0x5910fe21]
  40952a:	jecxz  0x40952f
	...
  409540:	mov    ecx,ss
  409542:	stos   DWORD PTR es:[edi],eax
  409543:	dec    ebx
  409544:	mov    WORD PTR [ecx+eiz*8+0x1d4f4b03],ss
  40954b:	dec    esi
  40954c:	xchg   ebx,eax
  40954d:	xchg   esp,eax
  40954e:	loope  0x409529
  409550:	xor    ebp,DWORD PTR [ebx]
  409552:	loope  0x40952d
  409554:	sub    ebp,DWORD PTR [ebx]
  409556:	loope  0x4094d8
  409558:	leave  
  409559:	rcl    BYTE PTR [eax-0xa3fee80],0x4d
  409560:	adc    esp,DWORD PTR [esi+eiz*8-0x29]
  409564:	add    edi,DWORD PTR [ecx-0x50bafad]
  40956a:	jne    0x409570
  40956c:	mov    WORD PTR [ebp-0x5477275f],cs
  409572:	add    al,BYTE PTR [edx]
  409574:	mov    WORD PTR [ecx+ebx*2-0x1eacab0a],ss
  40957b:	dec    esp
  40957c:	popa   
  40957d:	mov    BYTE PTR [eax],cl
  40957f:	rcl    esi,0x1
  409582:	imul   DWORD PTR [esi+0x6c84e445]
  409588:	fs shl esi,0x9e
  40958c:	add    BYTE PTR [ebx-0x20],ah
  40958f:	sbb    DWORD PTR es:[ecx-0x3bec9f0a],edi
  409596:	inc    BYTE PTR [esi-0x5272f8af]
  40959c:	inc    ecx
  40959d:	mov    ecx,0x85b019f6
  4095a2:	push   ecx
  4095a3:	sub    BYTE PTR [eax],al
	...
  4095b5:	add    BYTE PTR [eax],al
  4095b7:	add    BYTE PTR [eax-0x26a64349],dl
  4095bd:	mov    bh,0xf6
  4095bf:	pop    esi
  4095c0:	mov    ds:0x8fa8417a,eax
  4095c5:	lods   al,BYTE PTR ds:[esi]
  4095c6:	pop    eax
  4095c7:	xchg   edi,eax
  4095c8:	fnstenv [edi-0x400b9380]
  4095ce:	idiv   BYTE PTR [esi]
  4095d0:	ss mov eax,0x5526a06e
  4095d6:	or     BYTE PTR [esi],ch
  4095d8:	and    eax,ebp
  4095da:	(bad)  
  4095db:	shl    DWORD PTR es:[edi+0x54f6e33c],1
  4095e2:	or     BYTE PTR [ecx],al
  4095e4:	popf   
  4095e5:	(bad)  
  4095e6:	test   BYTE PTR [esi],0xa7
  4095e9:	adc    esp,esp
  4095eb:	(bad)  
  4095ec:	shl    BYTE PTR [edi+0x4a37e961],1
  4095f2:	push   ecx
  4095f3:	test   al,0x8f
  4095f5:	mov    bh,0xbc
  4095f7:	stc    
  4095f8:	pusha  
  4095f9:	mov    bh,0xf6
  4095fb:	out    0x9a,al
  4095fd:	jp     0x409640
  4095ff:	sub    BYTE PTR [eax+0x409f1cac],dl
  409605:	mov    bh,0x80
  409607:	fs inc edi
  409609:	mov    edi,0xddca00f6
  40960e:	mul    BYTE PTR [edi-0x54]
  409611:	jmp    0x40965a
  409613:	add    BYTE PTR [edx],bl
  409615:	pop    ds
  409616:	clc    
  409617:	idiv   edx
  409619:	dec    eax
  40961a:	div    DWORD PTR ds:0x0
	...
  409630:	scas   eax,DWORD PTR es:[edi]
  409631:	cli    
  409632:	inc    edi
  409633:	add    BYTE PTR ds:0x1affbd61,bl
  409639:	cmp    ecx,DWORD PTR [ebp-0x8b6fd20]
  40963f:	lea    esi,[eax]
  409641:	imul   edi,edi,0xffffffff
  409644:	sbb    al,BYTE PTR [ebx]
  409646:	outs   dx,DWORD PTR ds:[esi]
  409647:	push   esp
  409648:	jl     0x40961d
  40964a:	idiv   dh
  40964c:	shl    BYTE PTR [ebx-0x1],0xff
  409650:	jmp    0xf6d2:0x3c3a3d48
  409657:	out    0xb1,eax
  409659:	push   ds
  40965a:	idiv   edi
  40965c:	outs   dx,BYTE PTR ds:[esi]
  40965d:	push   ebx
  40965e:	jl     0x409673
  409660:	test   BYTE PTR [esi],0xd0
  409663:	neg    DWORD PTR [edx+0x6f750c48]
  409669:	dec    eax
  40966a:	cmp    BYTE PTR [edi-0x9850],cl
  409670:	push   0x5c
  409672:	add    al,bh
  409674:	mov    al,0x67
  409676:	(bad)  
  409677:	call   FWORD PTR [edx+0x35fff6be]
  40967d:	add    ebp,edi
  40967f:	xchg   ebp,eax
  409680:	addr16 dec eax
  409682:	test   DWORD PTR [ebp-0x7c50],0x3c6f021a
  40968c:	sbb    al,0xd2
  40968e:	idiv   dh
  409690:	and    BYTE PTR [eax-0x1],ah
  409693:	inc    DWORD PTR [eax]
	...
  4096a5:	add    BYTE PTR [eax],al
  4096a7:	add    dl,bl
  4096a9:	dec    edx
  4096aa:	cmp    eax,0xcd748c3a
  4096af:	push   ebx
  4096b1:	cmp    al,0x99
  4096b3:	jmp    ebx
  4096b5:	ror    DWORD PTR [edx+0x74],0x7f
  4096b9:	sub    al,BYTE PTR [ecx+0x42fddbd0]
  4096bf:	add    al,0x41
  4096c1:	mov    bl,0x41
  4096c3:	xor    BYTE PTR [ebx],dl
  4096c5:	sub    BYTE PTR [eax],bh
  4096c7:	idiv   DWORD PTR [ebx-0x34f5a8eb]
  4096cd:	daa    
  4096ce:	cmp    bh,dh
  4096d0:	stos   DWORD PTR es:[edi],eax
  4096d1:	add    eax,0xad8c000c
  4096d6:	mov    edx,0x437b3de7
  4096db:	dec    DWORD PTR [edi]
  4096dd:	sub    BYTE PTR [eax-0x9],0x8b
  4096e1:	daa    
  4096e2:	or     al,0x74
  4096e4:	ret    
  4096e5:	sub    al,BYTE PTR [ecx+0x435783d4]
  4096eb:	add    bh,cl
  4096ed:	xchg   ebp,eax
  4096ee:	(bad)  
  4096ef:	call   FWORD PTR [eax]
  4096f1:	xor    DWORD PTR [eax],esi
  4096f3:	mul    DWORD PTR [ebx+0x4f]
  4096f6:	mov    esp,0x5b5021fe
  4096fb:	call   DWORD PTR [ebx+0x54]
  4096fe:	xchg   esp,eax
  4096ff:	fisttp DWORD PTR [ebx+0x67]
  409702:	idiv   DWORD PTR [edi-0x42723b48]
  409708:	dec    eax
  409709:	lahf   
  40970a:	inc    ebx
  40970b:	inc    DWORD PTR [eax]
	...
  40971d:	add    BYTE PTR [eax],al
  40971f:	add    BYTE PTR [eax+ebx*1-0x701e0108],cl
  409726:	pop    ebx
  409727:	jmp    DWORD PTR [ebx]
  409729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40972a:	push   DWORD PTR [ecx-0x7ab648e5]
  409730:	sub    BYTE PTR [edi-0x547300bf],dh
  409736:	or     al,BYTE PTR [eax]
  409738:	setne  BYTE PTR [edi+ebx*2+0x3d5b603]
  409740:	js     0x40976b
  409742:	bound  ecx,QWORD PTR [eax+0x4ac5bdf8]
  409748:	mov    WORD PTR [eax+0x43],es
  40974b:	xchg   DWORD PTR [ecx],ebx
  40974d:	lods   eax,DWORD PTR ds:[esi]
  40974e:	mov    ebp,0x3594d34a
  409753:	lods   eax,DWORD PTR ds:[esi]
  409754:	xor    edx,DWORD PTR [edx-0x49fda51f]
  40975a:	adc    edi,esp
  40975c:	mov    bl,0x22
  40975e:	inc    edi
  40975f:	dec    edx
  409760:	mov    bl,0xb5
  409762:	push   ebx
  409763:	push   edi
  409764:	mov    ds:0x194a85b5,eax
  409769:	mov    WORD PTR [ecx+0x75b5ea61],ds
  40976f:	dec    edx
  409770:	fldcw  WORD PTR [ebp+esi*2-0x44a74b6]
  409777:	sti    
  409778:	imul   ebx,esp,0xffffff9e
  40977b:	dec    edx
  40977c:	jnp    0x409733
  40977e:	fwait
  40977f:	aaa    
  409780:	jnp    0x409737
  409782:	pop    ebp
  409783:	dec    edx
	...
  409798:	and    DWORD PTR [eax-0x4a9cb5a3],esi
  40979e:	mov    bl,0xfb
  4097a0:	jae    0x4097be
  4097a2:	xchg   DWORD PTR [edx+0x53],ecx
  4097a5:	mov    ch,0x73
  4097a7:	daa    
  4097a8:	inc    ebx
  4097a9:	mov    ch,0x25
  4097ab:	dec    edx
  4097ac:	mov    ecx,0xe9af198c
  4097b1:	mov    ah,0x15
  4097b3:	dec    edx
  4097b4:	stc    
  4097b5:	mov    bl,0x15
  4097b7:	dec    edx
  4097b8:	sub    esi,DWORD PTR [ebp-0x13d40465]
  4097be:	pop    esi
  4097bf:	dec    edx
  4097c0:	sbb    esi,DWORD PTR [ebp-0x4ae4a0c5]
  4097c6:	pop    es
  4097c7:	mul    BYTE PTR [esi+0xa]
  4097ca:	mov    ecx,0xbcb555ee
  4097cf:	aad    0x5d
  4097d1:	mov    ch,0xf6
  4097d3:	rol    ebp,1
  4097d5:	add    esi,edi
  4097d7:	(bad)  
  4097d8:	push   ebp
  4097d9:	(bad)  
  4097da:	(bad)  
  4097dc:	push   ebp
  4097dd:	mov    ch,0xdf
  4097df:	cmp    eax,0xbef6b4ff
  4097e4:	add    esi,DWORD PTR [esi+edi*8+0x60ac55b6]
  4097eb:	js     0x409842
  4097ed:	mov    ch,0xf6
  4097ef:	pop    esp
  4097f0:	pusha  
  4097f1:	mov    ebp,0x56509ef6
  4097f6:	mov    ecx,0x4cb55596
  4097fb:	xchg   ecx,eax
	...
  409810:	inc    edi
  409811:	add    al,0xf5
  409813:	xchg   BYTE PTR [ebp-0x4b],al
  409816:	jl     0x409895
  409818:	xor    BYTE PTR [edx],bh
  40981a:	xchg   ebp,eax
  40981b:	jmp    0xe20a75af
  409820:	(bad)
  409824:	adc    ecx,ebx
  409826:	sti    
  409827:	ror    DWORD PTR [edi+0x5b56063e],cl
  40982d:	pushf  
  40982e:	loopne 0x409809
  409830:	add    eax,0x1b70f6b4
  409835:	mov    al,0x5f
  409837:	jmp    0xc1f65bcb
  40983c:	sbb    cl,BYTE PTR [ebp+0x49]
  40983f:	jmp    0xa8906eab
  409844:	(bad)  
  409845:	mov    bl,0x7c
  409847:	icebp  
  409848:	xlat   BYTE PTR ds:[ebx]
  409849:	dec    edi
  40984a:	rcl    BYTE PTR [esi],cl
  40984c:	aad    0x21
  40984e:	dec    ebp
  40984f:	adc    eax,ebx
  409851:	cmp    eax,DWORD PTR [eax+eax*1]
  409854:	in     al,dx
  409855:	(bad)  
  409856:	mul    BYTE PTR [edi+0x75]
  409859:	add    BYTE PTR [eax+0x0],cl
  40985c:	add    ah,BYTE PTR [ebx-0x67cbb6ce]
  409862:	loopne 0x409881
  409864:	sbb    DWORD PTR [ebp-0x9],ebx
  409867:	or     esp,DWORD PTR ds:0xb8892ce4
  40986d:	inc    esp
  40986e:	pusha  
  40986f:	add    ebp,esi
  409871:	dec    esp
  409872:	mov    dh,0xff
	...
  409888:	cwde   
  409889:	mov    al,0xee
  40988b:	mov    ds:0xfff75d00,al
  409890:	mov    BYTE PTR [eax-0x9],ah
  409893:	jne    0x40988e
  409895:	pop    esp
  409896:	jge    0x4098a0
  409898:	sbb    eax,0x12ffa572
  40989d:	pop    ebp
  40989e:	jge    0x409894
  4098a0:	or     eax,0x12ffb881
  4098a5:	rcr    BYTE PTR [edx],1
  4098a7:	pop    ecx
  4098a8:	fs cwde 
  4098aa:	div    DWORD PTR [ebp-0x63]
  4098ad:	dec    edi
  4098ae:	idiv   ah
  4098b0:	add    bl,BYTE PTR [ebp-0x9]
  4098b3:	jne    0x4098a6
  4098b5:	pop    esp
  4098b6:	jge    0x4098c0
  4098b8:	fst    st(6)
  4098ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098bb:	call   edx
  4098bd:	outs   dx,BYTE PTR ds:[esi]
  4098be:	retf   0x7504
  4098c1:	add    al,BYTE PTR [edx-0xb8c0914]
  4098c7:	push   0x65
  4098c9:	rol    DWORD PTR ds:0xeeaf18ff,1
  4098cf:	in     eax,0x10
  4098d1:	pop    esp
  4098d2:	test   DWORD PTR [ecx+0x605ae8],0x68b64c25
  4098dc:	or     dh,bh
  4098de:	inc    edi
  4098df:	add    BYTE PTR [ebp+edx*1-0x4232a726],cl
  4098e6:	aas    
  4098e7:	jne    0x40986d
  4098e9:	test   DWORD PTR [ebx],edi
  4098eb:	fld    DWORD PTR [eax]
	...
  4098fd:	add    BYTE PTR [eax],al
  4098ff:	add    BYTE PTR [ebx],dl
  409901:	mov    dl,0x4e
  409903:	jne    0x40990d
  409905:	stos   BYTE PTR es:[edi],al
  409906:	les    eax,FWORD PTR [edi]
  409908:	hlt    
  409909:	mov    edx,0xe3fbff90
  40990e:	dec    ecx
  40990f:	add    al,0x8c
  409911:	push   0x10fec73
  409916:	inc    eax
  409917:	push   0xffffff8c
  409919:	push   edi
  40991a:	cld    
  40991b:	(bad)  
  40991c:	popa   
  40991d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40991e:	push   edx
  40991f:	stos   BYTE PTR es:[edi],al
  409920:	and    edx,esi
  409922:	dec    esi
  409923:	mov    DWORD PTR [ecx-0x17],edx
  409926:	sar    edi,cl
  409928:	ret    
  409929:	icebp  
  40992a:	lea    ebp,[eax+0x37]
  40992d:	push   esp
  40992e:	int    0xff
  409930:	sub    edi,DWORD PTR ds:0xa8c40a5
  409936:	fld    DWORD PTR [edi]
  409938:	mov    ah,0x27
  40993a:	and    eax,0xc869bff
  40993f:	push   0xffcd73d1
  409944:	repz pop esi
  409946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409947:	inc    eax
  409948:	mov    WORD PTR [edx+0x19],es
  40994b:	cmp    al,ch
  40994d:	cld    
  40994e:	or     ch,al
  409950:	aad    0xe
  409952:	dec    edi
  409953:	call   DWORD PTR [edi-0xbdc2785]
  409959:	and    al,0xa5
  40995b:	inc    eax
  40995c:	mov    WORD PTR [ebx],cs
  40995e:	push   ebx
  40995f:	and    eax,0x504f7318
	...
  409978:	mov    ah,0xbb
  40997a:	or     ch,bh
  40997c:	add    dl,ah
  40997e:	rcr    DWORD PTR [eax-0x33],0x94
  409982:	loope  0x409937
  409984:	xor    ch,BYTE PTR [eax]
  409986:	stc    
  409987:	pop    ebx
  409988:	jl     0x409955
  40998a:	sbb    eax,0x518c3447
  40998f:	inc    edi
  409990:	sbb    esi,DWORD PTR [edx+0x28134773]
  409996:	stc    
  409997:	pop    ebx
  409998:	sbb    BYTE PTR [eax],al
  40999a:	inc    BYTE PTR [esi-0x2b]
  40999d:	(bad)  
  40999e:	in     al,dx
  40999f:	add    esp,DWORD PTR [ecx+0x1d]
  4099a2:	fld    QWORD PTR [edx-0x50c14f38]
  4099a8:	jne    0x40993e
  4099aa:	dec    ebx
  4099ab:	cmc    
  4099ac:	loop   0x4099d5
  4099ae:	jmp    0xce40440e
  4099b3:	inc    esi
  4099b4:	add    eax,0x817ab558
  4099b9:	repnz sub ch,al
  4099bc:	ret    
  4099bd:	push   ds
  4099be:	in     al,0x41
  4099c0:	inc    esp
  4099c1:	push   ebx
  4099c2:	loope  0x409947
  4099c4:	jae    0x40995a
  4099c6:	sbb    eax,0x37db33bb
  4099cb:	lds    esp,FWORD PTR [ebx-0x84576b6]
  4099d1:	xchg   esp,eax
  4099d2:	loope  0x4099ce
  4099d4:	shr    DWORD PTR [eax],cl
  4099d6:	int3   
  4099d7:	lods   eax,DWORD PTR ds:[esi]
  4099d8:	jae    0x4099eb
  4099da:	cmp    BYTE PTR [esi+0x0],al
	...
  4099ed:	add    BYTE PTR [eax],al
  4099ef:	add    BYTE PTR [ebx-0x33536cc4],al
  4099f5:	xchg   esp,eax
  4099f6:	mov    cl,0x5b
  4099f8:	cmp    ebp,esp
  4099fa:	push   ebp
  4099fb:	inc    esi
  4099fc:	mov    esp,0x7303e13c
  409a01:	repnz mov al,0x46
  409a04:	loope  0x4099a2
  409a06:	pop    ecx
  409a07:	inc    ebx
  409a08:	cmp    DWORD PTR [ecx+0xfa5b35],esi
  409a0e:	or     BYTE PTR [esi],dh
  409a10:	retf   0x8bd
  409a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a14:	(bad)  
  409a16:	or     BYTE PTR [ebp+eax*8-0x30250ba6],bl
  409a1d:	jmp    0x409a15
  409a1f:	push   ss
  409a20:	retf   0xf9b1
  409a23:	aas    
  409a24:	xchg   DWORD PTR [ecx+0x27ca3c7d],ebx
  409a2a:	hlt    
  409a2b:	(bad)  
  409a2c:	fistp  DWORD PTR [eax-0x4edb1c20]
  409a32:	test   BYTE PTR [esi-0x123623cf],0x8f
  409a39:	inc    edi
  409a3a:	or     ebp,0xd
  409a3d:	fdiv   st,st(3)
  409a3f:	inc    ebx
  409a40:	mov    BYTE PTR [esi],bh
  409a42:	sbb    cl,dh
  409a44:	retf   
  409a45:	cwde   
  409a46:	loopne 0x4099dd
  409a48:	hlt    
  409a49:	mov    al,0xf6
  409a4b:	jo     0x409a58
  409a4d:	lods   eax,DWORD PTR ds:[esi]
  409a4e:	pop    edi
  409a4f:	jmp    0x41f65be3
	...
  409a68:	pop    edx
  409a69:	dec    ebx
  409a6a:	dec    ecx
  409a6b:	jmp    0x28916a47
  409a70:	nop
  409a71:	mov    cl,0x7c
  409a73:	loope  0x409abc
  409a75:	or     eax,edx
  409a77:	mov    ss,WORD PTR [ecx-0x4f]
  409a7a:	jl     0x409a01
  409a7c:	dec    ecx
  409a7d:	daa    
  409a7e:	add    BYTE PTR [ecx+0x76f700c3],dl
  409a84:	(bad)  
  409a85:	ror    BYTE PTR [ebx],cl
  409a87:	jmp    0x6924b5b6
  409a8c:	int3   
  409a8d:	sar    dh,1
  409a8f:	pop    esi
  409a90:	shl    DWORD PTR [ecx],1
  409a92:	dec    ebp
  409a93:	push   ebp
  409a94:	sbb    BYTE PTR [edi+0x69d0dd7c],ch
  409a9a:	xor    al,BYTE PTR [eax]
  409a9c:	sbb    al,0xd3
  409a9e:	mul    bh
  409aa0:	push   edi
  409aa1:	cmp    eax,0x542e0008
  409aa6:	pop    es
  409aa7:	test   DWORD PTR [esp+edx*4],eax
  409aaa:	or     BYTE PTR [eax],al
  409aac:	(bad)  
  409aad:	out    dx,eax
  409aae:	inc    BYTE PTR [eax]
  409ab0:	xor    eax,0xf0c70894
  409ab5:	pop    edi
  409ab6:	test   DWORD PTR [edi],0x629425
  409abc:	call   DWORD PTR [ebx-0x6be0ff9e]
  409ac2:	test   DWORD PTR [ebp+0x1],eax
  409ac5:	in     al,0x83
  409ac7:	test   DWORD PTR [ecx],eax
  409ac9:	popa   
  409aca:	idiv   edi
	...
  409ae0:	mov    ch,0x59
  409ae2:	jge    0x409adc
  409ae4:	retf   0xf2de
  409ae7:	call   0x48d86d
  409aec:	out    dx,al
  409aed:	push   ebx
  409aee:	jl     0x409af5
  409af0:	mov    esp,0xb50007cf
  409af5:	retf   
  409af6:	sbb    al,0x49
  409af8:	je     0x409a92
  409afa:	div    DWORD PTR [ebp-0x27]
  409afd:	dec    ebx
  409afe:	lea    esi,[edx-0x74a7a716]
  409b04:	in     eax,0x26
  409b06:	(bad)  
  409b07:	hlt    
  409b08:	add    bl,BYTE PTR [ecx-0x9]
  409b0b:	push   eax
  409b0c:	push   edi
  409b0d:	push   eax
  409b0e:	jge    0x409ac2
  409b10:	or     bl,BYTE PTR [ecx-0x7f]
  409b13:	test   DWORD PTR ds:0xdfff761,eax
  409b19:	ins    BYTE PTR es:[edi],dx
  409b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b1b:	(bad)  
  409b1c:	jmp    0x47fd:0x6667f6cd
  409b23:	add    dl,cl
  409b25:	push   ds
  409b26:	clc    
  409b27:	test   DWORD PTR [esi+eax*2-0x7c5e00b4],0x458c40b3
  409b32:	xor    BYTE PTR [ecx-0x7a8d91b5],dh
  409b38:	sub    BYTE PTR [esi+0x4c],ch
  409b3b:	jmp    DWORD PTR [esi-0x2a0d2d43]
  409b41:	cld    
  409b42:	or     bh,bh
	...
  409b58:	loope  0x409ae6
  409b5a:	inc    esp
  409b5b:	jmp    DWORD PTR [ebx]
  409b5d:	xchg   BYTE PTR [esi],al
  409b5f:	cmp    al,ch
  409b61:	cld    
  409b62:	or     ch,al
  409b64:	loope  0x409bd1
  409b66:	dec    esp
  409b67:	call   DWORD PTR ds:0x3f75f38
  409b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b6e:	iret   
  409b6f:	push   DWORD PTR [ebx-0x5d]
  409b72:	mov    al,ds:0x70b68c40
  409b77:	lock jecxz 0x409b47
  409b7a:	dec    edx
  409b7b:	call   FWORD PTR [ecx-0x73bf3a7d]
  409b81:	aad    0x9a
  409b83:	mov    cl,0xd3
  409b85:	aad    0x84
  409b87:	test   DWORD PTR [ebp+eiz*8+0x4011ff4a],esi
  409b8e:	push   0xdbfdbbf7
  409b93:	adc    BYTE PTR [bp+di-0x33],0xff
  409b98:	stos   BYTE PTR es:[edi],al
  409b99:	inc    edi
  409b9a:	cmp    al,0xf7
  409b9c:	mov    ds:0x56354b05,eax
  409ba1:	je     0x409b70
  409ba3:	jmp    FWORD PTR [ebx-0x74008278]
  409ba9:	mov    ds:0x3aa5744a,eax
  409bae:	mov    esp,ebx
  409bb0:	cmp    DWORD PTR [edi],0x4b
  409bb3:	add    al,0xf9
  409bb5:	xchg   esp,eax
  409bb6:	icebp  
  409bb7:	inc    edx
  409bb8:	pushf  
  409bb9:	sbb    eax,0x246c
	...
  409bce:	add    BYTE PTR [eax],al
  409bd0:	pop    ebx
  409bd1:	scas   al,BYTE PTR es:[edi]
  409bd2:	pop    ebp
  409bd3:	aam    0x73
  409bd5:	ins    BYTE PTR es:[edi],dx
  409bd6:	ja     0x409c1b
  409bd8:	push   ebx
  409bd9:	mov    edx,0x294c0ed4
  409bde:	out    dx,eax
  409bdf:	shr    DWORD PTR [ebx],cl
  409be1:	or     BYTE PTR [edi+0x6bd63b43],0x24
  409be8:	cmp    ebp,DWORD PTR [esi-0x6b73e6d3]
  409bee:	loope  0x409b76
  409bf0:	loope  0x409baa
  409bf2:	adc    eax,0x9d951b43
  409bf7:	fimul  DWORD PTR [esi]
  409bf9:	lock sbb al,0x3b
  409bfc:	or     ebp,DWORD PTR [esi+0x1151b7e0]
  409c02:	cmp    al,0x2c
  409c04:	add    ebp,DWORD PTR [esi+0x577803e5]
  409c0a:	pop    ecx
  409c0b:	add    al,0x8c
  409c0d:	mov    ebp,0x9c594296
  409c12:	leave  
  409c13:	outs   dx,DWORD PTR ds:[esi]
  409c14:	es scas al,BYTE PTR es:[edi]
  409c16:	lds    eax,FWORD PTR [edx+0x19]
  409c19:	shl    DWORD PTR [ebp+0x3badcb42],0xc
  409c20:	mov    ah,0x94
  409c22:	mov    al,BYTE PTR [edx-0x45]
  409c25:	lods   eax,DWORD PTR ds:[esi]
  409c26:	jnp    0x409c53
  409c28:	mov    ebx,0x2142adad
  409c2d:	pushf  
  409c2e:	cdq    
  409c2f:	xor    eax,0x429dadf6
	...
  409c48:	loope  0x409c02
  409c4a:	popf   
  409c4b:	inc    edx
  409c4c:	xchg   ebx,eax
  409c4d:	lods   eax,DWORD PTR ds:[esi]
  409c4e:	repz or esi,DWORD PTR [eax+edi*4+0x5a]
  409c53:	inc    edx
  409c54:	sub    DWORD PTR [ebp-0x5a50c3f9],0xfffffff6
  409c5b:	outs   dx,BYTE PTR ds:[esi]
  409c5c:	into   
  409c5d:	daa    
  409c5e:	add    BYTE PTR [ecx+0x23],dl
  409c61:	sti    
  409c62:	neg    BYTE PTR [esi-0x32]
  409c65:	out    0xeb,eax
  409c67:	pop    esi
  409c68:	into   
  409c69:	lods   eax,DWORD PTR ds:[esi]
  409c6a:	fist   WORD PTR [ecx+0x46f6addc]
  409c70:	(bad)  
  409c71:	sar    dh,0x3e
  409c74:	into   
  409c75:	mov    esp,0xadce84a4
  409c7a:	div    BYTE PTR [edi+eiz*2-0x5b]
  409c7e:	mul    BYTE PTR [esi]
  409c80:	ja     0x409c74
  409c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c83:	push   ds
  409c84:	into   
  409c85:	lods   eax,DWORD PTR ds:[esi]
  409c86:	mov    esp,0xf6ad5619
  409c8b:	add    esi,esi
  409c8d:	(bad)  
  409c8e:	test   BYTE PTR [esi],0x4e
  409c91:	push   edi
  409c92:	lock adc BYTE PTR ds:0x4df6f6af,bh
  409c99:	daa    
  409c9a:	hlt    
  409c9b:	add    DWORD PTR [edx+0xb],edi
  409c9e:	or     cl,ch
  409ca0:	push   esi
  409ca1:	sar    bh,cl
  409ca3:	call   0x6b24b662
  409ca8:	inc    esp
  409ca9:	mov    al,0x61
  409cab:	jmp    0x409cb0
	...
  409cc0:	and    DWORD PTR [edx-0x4367c309],eax
  409cc6:	mov    al,ds:0x80ad4d93
  409ccb:	sub    al,0x4c
  409ccd:	cmp    al,0x1c
  409ccf:	adc    ecx,edi
  409cd1:	lods   al,BYTE PTR ds:[esi]
  409cd2:	cmc    
  409cd3:	sbb    al,0x98
  409cd5:	mov    esp,0xad4d9f1d
  409cda:	neg    BYTE PTR [esp+ecx*2]
  409cdd:	lods   eax,DWORD PTR ds:[esi]
  409cde:	jl     0x409cc1
  409ce0:	addr16 enter 0xa1,0x12
  409ce5:	push   esi
  409ce6:	rol    edx,0x69
  409ce9:	cwde   
  409cea:	pop    ebp
  409ceb:	mov    edx,DWORD PTR [ecx]
  409ced:	adc    cl,ah
  409cef:	cld    
  409cf0:	(bad)  
  409cf1:	nop
  409cf2:	bound  edx,QWORD PTR [edx+esi*8]
  409cf5:	jecxz  0x409d05
  409cf7:	call   0x37d769
  409cfc:	in     al,dx
  409cfd:	shl    edx,cl
  409cff:	push   0xbee79865
  409d04:	pop    ebp
  409d05:	xchg   esi,eax
  409d06:	push   edx
  409d07:	inc    ecx
  409d08:	xor    eax,0xe45a3b00
  409d0d:	xchg   edi,eax
  409d0e:	div    DWORD PTR [ebp+0x2d]
  409d11:	sub    BYTE PTR [ebx-0x2a],0x72
  409d15:	push   ebp
  409d16:	div    DWORD PTR [ebp-0x7f]
  409d19:	push   ebp
  409d1a:	jge    0x409d24
  409d1c:	lea    ecx,[edi]
  409d1e:	mov    ds:0xca5f82ff,al
  409d23:	add    al,0x0
	...
  409d35:	add    BYTE PTR [eax],al
  409d37:	add    ch,dh
  409d39:	ret    0xec81
  409d3c:	je     0x409d9a
  409d3e:	shl    bh,1
  409d40:	add    dl,BYTE PTR [ebp-0x7b]
  409d43:	inc    ebp
  409d44:	loope  0x409d0d
  409d46:	cmc    
  409d47:	jne    0x409d2a
  409d49:	push   esp
  409d4a:	cmp    eax,0xf6d79c3a
  409d4f:	out    0x93,eax
  409d51:	invd   
  409d53:	add    dh,ch
  409d55:	push   edi
  409d56:	pop    es
  409d57:	test   DWORD PTR [eax],eax
  409d59:	xchg   edi,eax
  409d5a:	or     BYTE PTR [eax],al
  409d5c:	jmp    0x897:0xa500fed2
  409d63:	(bad)  
  409d64:	push   0xb507f76c
  409d69:	xchg   edi,eax
  409d6a:	bound  eax,QWORD PTR [eax]
  409d6c:	jg     0x409cfe
  409d6e:	bound  eax,QWORD PTR [eax]
  409d70:	mov    WORD PTR [edi+0x1498d0c],ss
  409d76:	fisttp DWORD PTR [ecx+edx*1-0x7c00cfd7]
  409d7d:	lea    ecx,[ecx+0x75]
  409d80:	je     0x409da4
  409d82:	mov    esi,0x91bd64fb
  409d87:	add    BYTE PTR [esi+eiz*4+0x4489744a],cl
  409d8e:	fwait
  409d8f:	add    DWORD PTR [ebp+edi*4-0x33aea5e],ecx
  409d96:	or     bh,bh
  409d98:	shl    DWORD PTR [ecx+0x5122],0x0
	...
  409daf:	add    ah,bh
  409db1:	imul   ecx,DWORD PTR [eax+0x50],0x85868d07
  409db8:	cmp    BYTE PTR [edx+0x48],ah
  409dbb:	(bad)  
  409dbc:	mov    esp,0xdc4122ef
  409dc1:	mov    DWORD PTR [eax-0x77],ecx
  409dc4:	adc    DWORD PTR [ebp-0x6aec00d0],ecx
  409dca:	nop
  409dcb:	lods   al,BYTE PTR ds:[esi]
  409dcc:	or     edx,DWORD PTR [edx-0x5e1b7a7a]
  409dd2:	call   FWORD PTR ss:[ebp+edx*1-0x29]
  409dd7:	pop    ecx
  409dd8:	dec    ebp
  409dd9:	mov    ebp,0xc9dcb547
  409dde:	ss jmp ebx
  409de1:	jg     0x409dd5
  409de3:	dec    eax
  409de4:	dec    ebp
  409de5:	mov    ebp,0xda239222
  409dea:	mov    DWORD PTR ss:[ecx],edx
  409ded:	fnstcw WORD PTR [esi]
  409def:	inc    ebx
  409df1:	inc    esi
  409df2:	or     al,0x68
  409df4:	inc    esi
  409df5:	xchg   ebp,ecx
  409df7:	push   DWORD PTR [edx-0x5408c3e1]
  409dfd:	xchg   ebx,eax
  409dfe:	scas   al,BYTE PTR es:[edi]
  409dff:	aas    
  409e00:	pop    ecx
  409e01:	outs   dx,BYTE PTR ds:[esi]
  409e02:	cmp    ch,al
  409e04:	fwait
  409e05:	mov    dl,0x14
  409e07:	outs   dx,DWORD PTR ds:[esi]
  409e08:	xchg   ebx,eax
  409e09:	stos   BYTE PTR es:[edi],al
  409e0a:	mov    DWORD PTR [bx+si-0x5e],edi
  409e0e:	lea    edi,[edi]
  409e10:	not    BYTE PTR [ecx+ebx*1+0xd3]
	...
  409e27:	add    ch,dl
  409e29:	push   ebx
  409e2a:	loope  0x409e6a
  409e2c:	cmp    DWORD PTR [ebp-0x5594c083],esp
  409e32:	adc    edi,edx
  409e34:	aam    0x53
  409e36:	loope  0x409e63
  409e38:	ret    0x5df9
  409e3b:	aas    
  409e3c:	add    eax,0x4b374910
  409e41:	stos   BYTE PTR es:[edi],al
  409e42:	jnp    0x409dcd
  409e44:	pusha  
  409e45:	mov    ds:0x3cdc3f35,al
  409e4a:	(bad)  
  409e4b:	fxch   st(4)
  409e4d:	xchg   esp,eax
  409e4e:	es jns 0x409e6d
  409e51:	mov    ds:0x60233f2d,al
  409e56:	jmp    0x409e24
  409e58:	int3   
  409e59:	xchg   esp,eax
  409e5a:	or     ebx,esi
  409e5c:	loop   0x409e07
  409e5e:	add    eax,0xe820cc0b
  409e63:	add    BYTE PTR [ecx-0x37],0xfd
  409e67:	ds sti 
  409e69:	nop
  409e6a:	je     0x409e7f
  409e6c:	repz fs push esi
  409e6f:	mov    esp,ebp
  409e71:	mov    eax,ds:0xbc3c3eed
  409e76:	loopne 0x409ee7
  409e78:	fld    TBYTE PTR [ecx-0x2b78e837]
  409e7e:	pop    esp
  409e7f:	push   es
  409e80:	pop    esp
  409e81:	mov    esp,0xa9c36ab4
  409e86:	lods   eax,DWORD PTR ds:[esi]
  409e87:	mov    BYTE PTR [ecx+eiz*4+0xb607],ch
	...
  409e9e:	add    BYTE PTR [eax],al
  409ea0:	jb     0x409f21
  409ea2:	or     cl,ch
  409ea4:	(bad)  
  409ea5:	adc    eax,0xa95a8db5
  409eaa:	imul   cl
  409eac:	jecxz  0x409ed5
  409eae:	mov    edx,DWORD PTR [ebx+eiz*2-0x5f]
  409eb2:	test   BYTE PTR [esi+0x6a7d208f],0xc
  409eb9:	mov    esp,0x94ba7efe
  409ebe:	jl     0x409ec5
  409ec0:	es test eax,0xa1c76483
  409ec6:	mul    BYTE PTR [esi+0x3f]
  409ec9:	stos   BYTE PTR es:[edi],al
  409eca:	mov    esp,0xf6a9a245
  409ecf:	inc    ecx
  409ed0:	push   edi
  409ed1:	shl    dh,0x4e
  409ed4:	xchg   esi,eax
  409ed5:	aam    0x7b
  409ed7:	popf   
  409ed8:	push   cs
  409ed9:	out    0xcf,eax
  409edb:	ss jp  0x409e87
  409ede:	pop    es
  409edf:	mov    ebp,0xe9083146
  409ee4:	jp     0x409ed0
  409ee6:	neg    BYTE PTR [edi+edx*4+0x5a5159bc]
  409eed:	test   eax,0xa1635cf6
  409ef2:	test   BYTE PTR [esi],0xca
  409ef5:	pop    ds
  409ef6:	add    BYTE PTR [ecx],dl
  409ef8:	imul   edi,esp,0xdfb9fef6
  409efe:	(bad)  
  409f00:	mov    cl,0xa9
  409f02:	div    BYTE PTR [eax+eax*1+0x0]
	...
  409f16:	add    BYTE PTR [eax],al
  409f18:	xchg   edi,eax
  409f19:	mov    esp,0xa9a1918f
  409f1e:	not    BYTE PTR [eax+edi*1-0x6e29095f]
  409f25:	fucomip st,st(3)
  409f27:	(bad)  
  409f28:	mov    DWORD PTR [ecx-0x677fff0a],ebp
  409f2e:	loopne 0x409f88
  409f30:	sbb    eax,0x30fff767
  409f35:	jo     0x409f36
  409f37:	(bad)  
  409f38:	cli    
  409f39:	data16 jge 0x409f44
  409f3c:	std    
  409f3d:	mov    esp,DWORD PTR [eax-0x42990501]
  409f43:	in     al,0xf2
  409f45:	imul   ax
  409f48:	mov    ebp,0xafff73d
  409f4d:	and    ah,ah
  409f4f:	idiv   edx
  409f51:	imul   esp,eax,0xf769ce4d
  409f57:	jmp    DWORD PTR [eax-0x15000088]
  409f5d:	js     0x409fa9
  409f5f:	stos   DWORD PTR es:[edi],eax
  409f60:	mov    edx,0xb5b5f769
  409f65:	popa   
  409f66:	idiv   edi
  409f68:	int    0xa1
  409f6a:	mov    eax,ds:0x4d69caff
  409f6f:	clc    
  409f70:	(bad)  
  409f72:	hlt    
  409f73:	(bad)  
  409f74:	jp     0x409fdf
  409f76:	jge    0x409f74
  409f78:	int    0xc5
  409f7a:	popf   
	...
  409f8f:	add    BYTE PTR ds:0x2508ca5b,dh
  409f95:	mov    edi,0x5ca6ec81
  409f9a:	cld    
  409f9b:	jmp    DWORD PTR [eax]
  409f9d:	cwde   
  409f9e:	loopne 0x409f8b
  409fa0:	pusha  
  409fa1:	nop
  409fa2:	or     BYTE PTR [ecx+0x75f76c30],cl
  409fa8:	std    
  409fa9:	jnp    0x409fd4
  409fab:	stos   DWORD PTR es:[edi],eax
  409fac:	cli    
  409fad:	push   0x68e94581
  409fb2:	jge    0x409fb0
  409fb4:	mov    edx,0x8cfffede
  409fb9:	dec    eax
  409fba:	sbb    al,ch
  409fbc:	test   esi,edi
  409fbe:	xor    edi,edi
  409fc0:	xchg   edi,eax
  409fc1:	std    
  409fc2:	mov    esi,0x3071053d
  409fc7:	push   0xffffff8c
  409fc9:	xor    dh,cl
  409fcb:	repz cmp al,0xf6
  409fce:	mov    ebp,0x509cb4fb
  409fd3:	call   FWORD PTR [ebx+0x65744aa2]
  409fd9:	xchg   ebp,eax
  409fda:	or     al,0x10
  409fdc:	jnp    0x40a035
  409fde:	xor    al,0x75
  409fe0:	xchg   esp,eax
  409fe1:	add    eax,0x267ba78f
  409fe6:	xor    al,0x75
  409fe8:	je     0x40a008
  409fea:	mov    esi,0x2a06b0b
  409fef:	call   0xff74b624
	...
  40a008:	pop    ebx
  40a009:	sar    BYTE PTR [esi],0xff
  40a00c:	fld    DWORD PTR [ecx+0x34]
  40a00f:	jne    0x409fa5
  40a011:	push   ebp
  40a012:	xchg   ebp,eax
  40a013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a014:	inc    ebx
  40a015:	dec    esi
  40a016:	xor    al,0x75
  40a018:	cmp    BYTE PTR [ebp+0x64],al
  40a01b:	stos   BYTE PTR es:[edi],al
  40a01c:	xor    ebx,DWORD PTR [esi+0x42]
  40a01f:	ret    0xbd94
  40a022:	fisttp QWORD PTR [edx-0x17b0c5d0]
  40a028:	ret    0xbe86
  40a02b:	or     esp,DWORD PTR [esp+eax*1]
  40a02e:	dec    DWORD PTR fs:[ebx]
  40a031:	mov    dl,0x4a
  40a033:	jne    0x409fbe
  40a035:	out    dx,eax
  40a036:	inc    ecx
  40a037:	ret    0xbd84
  40a03a:	test   DWORD PTR [ebp-0x4],eax
  40a03d:	or     al,0x34
  40a03f:	jne    0x409fd9
  40a041:	xchg   ebp,eax
  40a042:	loopne 0x409ff3
  40a044:	jecxz  0x409fd9
  40a046:	out    dx,al
  40a047:	bswap  esp
  40a049:	xchg   esi,eax
  40a04a:	ins    DWORD PTR es:[edi],dx
  40a04b:	sahf   
  40a04c:	mov    WORD PTR [ecx+eiz*8-0x3757bec6],ss
  40a053:	mov    dh,dh
  40a055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a056:	int    0x8d
  40a058:	push   ecx
  40a059:	mov    eax,0xa6b7b1b5
  40a05e:	xor    ebp,DWORD PTR [eax]
  40a060:	stos   DWORD PTR es:[edi],eax
  40a061:	and    BYTE PTR [ecx-0x520627d4],bh
  40a067:	cmp    eax,DWORD PTR [edi]
  40a069:	and    DWORD PTR [ebp+0x2f],eax
	...
  40a07f:	add    BYTE PTR [ebp+0x3c],al
  40a082:	jg     0x40a062
  40a084:	int3   
  40a085:	xchg   esp,eax
  40a086:	aas    
  40a087:	sub    al,0x60
  40a089:	jmp    eax
  40a08b:	add    eax,DWORD PTR [edi+0x6705fbd4]
  40a091:	push   0x6f4346a
  40a096:	sbb    eax,ebp
  40a098:	arpl   WORD PTR [esi-0x6b736ef6],bp
  40a09e:	loop   0x40a0d3
  40a0a0:	add    eax,0xf8ac4920
  40a0a5:	dec    edx
  40a0a6:	mov    al,ds:0x8abcda03
  40a0ab:	xchg   edx,eax
  40a0ac:	mov    WORD PTR [edx+edi*8+0x4a92b943],ss
  40a0b3:	pop    ds
  40a0b4:	push   ss
  40a0b5:	test   DWORD PTR [edi],ebp
  40a0b7:	add    al,0x8c
  40a0b9:	inc    esp
  40a0ba:	mov    bl,0x3a
  40a0bc:	mov    eax,ds:0x8bb115bc
  40a0c1:	mov    esp,0xa60b3a17
  40a0c6:	mov    edx,0x61850bdb
  40a0cb:	cli    
  40a0cc:	sti    
  40a0cd:	and    BYTE PTR [ebx],dh
  40a0cf:	lods   al,BYTE PTR ds:[esi]
  40a0d0:	mov    WORD PTR [eax+ecx*1+0x7ca56606],es
  40a0d7:	loope  0x40a090
  40a0d9:	(bad)  [ebp+0x7ca596e6]
  40a0df:	fst    QWORD PTR [esi+0xd6e41f]
	...
  40a0f5:	add    BYTE PTR [eax],al
  40a0f7:	add    ah,bh
  40a0f9:	(bad)  
  40a0fa:	loopne 0x40a0aa
  40a0fc:	sub    eax,0xfcc6f6a5
  40a101:	mov    ecx,0xa520b9df
  40a106:	mul    BYTE PTR [esp+ecx*8-0x4b]
  40a10a:	push   edi
  40a10b:	rol    DWORD PTR [esi+0x6aa6f6e4],0x94
  40a112:	push   esi
  40a113:	mov    al,0x49
  40a115:	pushf  
  40a116:	or     BYTE PTR [ebx+ebx*1],bh
  40a119:	mov    eax,0x3abba58a
  40a11e:	or     BYTE PTR [ebx],dl
  40a120:	popf   
  40a121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a122:	jl     0x40a115
  40a124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a125:	mov    gs,WORD PTR [edi+0x4d1ba676]
  40a12b:	ins    DWORD PTR es:[edi],dx
  40a12c:	aaa    
  40a12d:	cmp    edx,DWORD PTR [edx-0x58]
  40a130:	(bad)  
  40a131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a132:	jl     0x40a125
  40a134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a135:	in     eax,dx
  40a136:	repz push esi
  40a138:	xchg   BYTE PTR [edx],bh
  40a13a:	or     cl,al
  40a13c:	or     DWORD PTR [edx+0x49],0xffffffe9
  40a140:	out    0xf4,eax
  40a142:	push   ecx
  40a143:	test   al,0x8f
  40a145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a146:	cmp    al,0xf3
  40a148:	pop    eax
  40a149:	push   esp
  40a14a:	or     BYTE PTR [ecx-0x5a],al
  40a14d:	clc    
  40a14e:	mul    BYTE PTR [esi]
  40a150:	mov    dl,ah
  40a152:	jnp    0x40a157
  40a154:	loopne 0x40a157
  40a156:	push   edx
  40a157:	test   al,0x8f
  40a159:	inc    esp
  40a15a:	loopne 0x40a1be
	...
  40a170:	je     0x40a117
  40a172:	test   BYTE PTR [eax],0x15
  40a175:	shl    ebp,0x75
  40a178:	std    
  40a179:	js     0x40a166
  40a17b:	(bad)  
  40a17c:	loop   0x40a1e8
  40a17e:	loopne 0x40a109
  40a180:	dec    esp
  40a181:	push   0xfffffff7
  40a183:	push   0xffffff8f
  40a185:	js     0x40a159
  40a187:	lods   eax,DWORD PTR ds:[esi]
  40a188:	mov    dl,0x6a
  40a18a:	add    eax,eax
  40a18c:	imul   eax,ebp,0xd17f876e
  40a192:	test   BYTE PTR [edi-0x23],0xf1
  40a196:	mov    ds:0x99f7f2ff,eax
  40a19b:	pop    edx
  40a19c:	je     0x40a12e
  40a19e:	pop    eax
  40a19f:	call   0x37cf22
  40a1a4:	push   ebp
  40a1a5:	shl    ch,0x75
  40a1a8:	popf   
  40a1a9:	js     0x40a166
  40a1ab:	(bad)  
  40a1ac:	and    bl,BYTE PTR [esi-0x20]
  40a1af:	pop    ecx
  40a1b0:	int3   
  40a1b1:	pop    ebp
  40a1b2:	imul   DWORD PTR [edx+0x71]
  40a1b5:	jo     0x40a159
  40a1b7:	lods   eax,DWORD PTR ds:[esi]
  40a1b8:	repnz pop ebp
  40a1ba:	add    eax,eax
  40a1bc:	imul   eax,ebx,0xd77f876e
  40a1c2:	test   BYTE PTR [edi-0x43],0xa6
  40a1c6:	mov    ds:0x99f0b2ff,eax
  40a1cb:	pop    edx
  40a1cc:	hlt    
  40a1cd:	xchg   edi,eax
  40a1ce:	pop    eax
  40a1cf:	call   0x37dd62
	...
  40a1e8:	adc    eax,0x3d75f5c8
  40a1ed:	jo     0x40a17a
  40a1ef:	(bad)  
  40a1f0:	bound  ebx,QWORD PTR [ebp-0x20]
  40a1f3:	sub    DWORD PTR [esi+ebx*2],ecx
  40a1f6:	imul   DWORD PTR [edx+0x46]
  40a1f9:	jo     0x40a26d
  40a1fb:	lods   eax,DWORD PTR ds:[esi]
  40a1fc:	jb     0x40a25b
  40a1fe:	add    eax,eax
  40a200:	mov    WORD PTR [ecx],es
  40a202:	(bad)  
  40a203:	addr16 or ebp,eax
  40a206:	leave  
  40a207:	dec    DWORD PTR [ebx-0x7b]
  40a20a:	or     ch,BYTE PTR [ebp-0x6d5d5d0d]
  40a210:	inc    esi
  40a211:	in     al,dx
  40a212:	or     dl,BYTE PTR [eax-0xc]
  40a215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a216:	outs   dx,BYTE PTR ds:[esi]
  40a217:	(bad)  
  40a218:	fistp  DWORD PTR [ebp-0x24]
  40a21b:	(bad)  
  40a21c:	pop    ecx
  40a21d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a21e:	and    dl,BYTE PTR [ebx-0x36]
  40a221:	retf   0xe82f
  40a224:	lds    edx,FWORD PTR ds:0x60bbff30
  40a22a:	xor    bh,bh
  40a22c:	cmp    DWORD PTR [ebp-0x150d93de],esp
  40a232:	das    
  40a233:	leave  
  40a234:	into   
  40a235:	mov    ecx,0xa07550a
  40a23a:	mov    al,ah
  40a23c:	mov    al,0xa
  40a23e:	xor    bh,bh
  40a240:	sbb    DWORD PTR [eax+0x30],esi
  40a243:	push   eax
  40a244:	or     DWORD PTR [eax-0x55fe00e4],0x22
  40a24b:	add    al,0x0
	...
  40a25d:	add    BYTE PTR [eax],al
  40a25f:	add    BYTE PTR [ecx],bl
  40a261:	lods   eax,DWORD PTR ds:[esi]
  40a262:	or     cl,BYTE PTR [ebx]
  40a264:	dec    esp
  40a265:	mov    edx,0xad8dbe75
  40a26a:	or     al,bh
  40a26c:	shl    DWORD PTR ds:0xad8c000b,1
  40a272:	inc    edi
  40a273:	inc    ebp
  40a274:	inc    eax
  40a275:	dec    edx
  40a276:	or     BYTE PTR [eax],al
  40a278:	mov    edi,ss
  40a27a:	or     ch,BYTE PTR [edx-0x74]
  40a27d:	(bad)  
  40a27e:	or     ch,BYTE PTR [edx-0x74]
  40a281:	xor    BYTE PTR [esi+0x7638bcf3],dh
  40a287:	hlt    
  40a288:	sbb    esi,DWORD PTR [edx+0x30]
  40a28b:	push   eax
  40a28c:	sbb    edx,DWORD PTR [esp+edx*4+0x1529133b]
  40a293:	sub    esp,edx
  40a295:	pop    es
  40a296:	loope  0x40a29b
  40a298:	xchg   edi,eax
  40a299:	aam    0x9c
  40a29b:	(bad)  
  40a29c:	in     al,0x14
  40a29e:	loopne 0x40a2a3
  40a2a0:	mov    WORD PTR [edi+ebx*8],gs
  40a2a3:	retf   0x944c
  40a2a6:	(bad)  
  40a2a7:	lods   eax,DWORD PTR ds:[esi]
  40a2a8:	xchg   ebx,eax
  40a2a9:	lods   al,BYTE PTR ds:[esi]
  40a2aa:	int    0x67
  40a2ac:	(bad)  [edx+0x10bc8b30]
  40a2b2:	ins    BYTE PTR es:[edi],dx
  40a2b3:	xor    bl,al
  40a2b5:	mov    ds:0xac5dd4dd,al
  40a2ba:	std    
  40a2bb:	addr16 mov ebx,0xbc8177a2
  40a2c1:	stos   BYTE PTR es:[edi],al
  40a2c2:	mov    ch,0x37
	...
  40a2d8:	mov    ah,0x30
  40a2da:	mov    DWORD PTR [edi],esi
  40a2dc:	mov    ds:0xafabe12d,eax
  40a2e1:	cmp    eax,0xe8930420
  40a2e6:	nop
  40a2e7:	das    
  40a2e8:	mov    esp,DWORD PTR [edx-0x53684e63]
  40a2ee:	adc    BYTE PTR [ebx+0x7b],ch
  40a2f1:	mov    ds:0xaa688177,al
  40a2f6:	jne    0x40a32f
  40a2f8:	not    BYTE PTR [ecx+ecx*1-0x1eac39d7]
  40a2ff:	and    DWORD PTR ss:[ebp-0x5dacc8ab],esp
  40a306:	fild   DWORD PTR [edi]
  40a308:	xor    al,0x48
  40a30a:	mov    dh,BYTE PTR [edi]
  40a30c:	inc    ebx
  40a30d:	or     al,0x6c
  40a30f:	and    al,0x43
  40a311:	mov    ds:0x3a33aa4d,al
  40a316:	sbb    eax,0x894ccda
  40a31b:	ss popf 
  40a31d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a31e:	(bad)  
  40a31f:	arpl   WORD PTR cs:[ecx+0x5e67f57c],sp
  40a326:	mov    ds:0x8d0bc31e,eax
  40a32b:	add    eax,0x83f6a1b3
  40a330:	(bad)  
  40a331:	sub    al,0xd3
  40a333:	mov    ds:0x34f5a1c8,eax
  40a338:	mov    al,ds:0xf6f6a9
	...
  40a34d:	add    BYTE PTR [eax],al
  40a34f:	add    BYTE PTR [edx-0x7cfefbd9],bl
  40a355:	in     eax,dx
  40a356:	mul    dh
  40a358:	add    BYTE PTR [eax],bl
  40a35a:	loopne 0x40a332
  40a35c:	and    BYTE PTR [ecx-0x5508169f],0x51
  40a363:	sub    BYTE PTR [eax+0x62b9bca1],dl
  40a369:	mov    eax,ds:0x8ddcbef6
  40a36e:	loopne 0x40a35d
  40a370:	mov    eax,ss:0xc10c60f6
  40a376:	(bad)  
  40a377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a378:	pop    edx
  40a379:	adc    eax,0xa1ba85b5
  40a37e:	imul   cl
  40a380:	cmp    al,0x8c
  40a382:	mov    ecx,DWORD PTR [edi+ebp*4-0x57]
  40a386:	test   BYTE PTR [esi+0x6a6d288f],0xe4
  40a38d:	mov    al,0xfe
  40a38f:	jbe    0x40a32b
  40a391:	xchg   esp,eax
  40a392:	jl     0x40a3a1
  40a394:	pandn  mm3,mm7
  40a397:	pop    esi
  40a398:	call   0x839:0x5ed507a1
  40a39f:	jmp    0xd537860e
  40a3a4:	xchg   DWORD PTR [ebp+ebp*2-0x895ff00],ebp
  40a3ab:	jmp    DWORD PTR [eax+0x5affff79]
  40a3b1:	push   0x7d
  40a3b3:	or     BYTE PTR [eax],al
	...
  40a3c5:	add    BYTE PTR [eax],al
  40a3c7:	add    ch,cl
  40a3c9:	sbb    ebp,DWORD PTR [edi+edi*8-0x17429596]
  40a3d0:	mov    ds:0x20fff76a,al
  40a3d5:	(bad)  
  40a3d6:	loopne 0x40a384
  40a3d8:	push   ecx
  40a3d9:	push   0xfffffff7
  40a3db:	push   DWORD PTR [eax-0x1500007f]
  40a3e1:	data16 jge 0x40a3ec
  40a3e4:	lea    eax,[edi]
  40a3e6:	lods   al,BYTE PTR ds:[esi]
  40a3e7:	(bad)  
  40a3e8:	jmp    0xf766:0xb2e0bd66
  40a3ef:	jmp    DWORD PTR [eax-0x70]
  40a3f2:	loopne 0x40a384
  40a3f4:	adc    DWORD PTR [edi-0x9],esp
  40a3f7:	jmp    DWORD PTR [eax]
  40a3f9:	cmp    al,0xff
  40a3fb:	dec    edx
  40a3fd:	data16 jge 0x40a408
  40a400:	mov    ebp,0xdaffac15
  40a405:	mov    bp,0xe2e4
  40a409:	imul   ax
  40a40c:	cmp    DWORD PTR [edi],0x302afff7
  40a412:	call   0xe0aabf0e
  40a417:	pop    ecx
  40a418:	shr    BYTE PTR [ecx-0x9],cl
  40a41b:	push   DWORD PTR [eax-0x15000094]
  40a421:	jo     0x40a469
  40a423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a424:	fisubr DWORD PTR [ecx-0x9]
  40a427:	mov    ch,0xd
  40a429:	jb     0x40a422
  40a42b:	inc    DWORD PTR [eax]
	...
  40a43d:	add    BYTE PTR [eax],al
  40a43f:	add    BYTE PTR [ebp-0x1500522b],bh
  40a445:	imul   edi,DWORD PTR [ebp+0x3d3e8cdc],0x558624ff
  40a44f:	push   DWORD PTR [ebx]
  40a451:	push   edi
  40a452:	lock and ebx,DWORD PTR [bx+0x3d]
  40a457:	call   FWORD PTR [ecx-0x7b8ac447]
  40a45d:	push   ebp
  40a45e:	(bad)  
  40a45f:	std    
  40a460:	adc    esi,DWORD PTR [edi+0x3d]
  40a463:	mov    ch,0xfc
  40a465:	xchg   BYTE PTR ds:0x53a9f4ff,bh
  40a46b:	(bad)  
  40a46c:	sti    
  40a46d:	mov    ?,WORD PTR [edi+0x3cfce5f7]
  40a473:	(bad)  
  40a474:	jmp    0x40a414
  40a476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a477:	sti    
  40a478:	hlt    
  40a479:	in     eax,0x97
  40a47b:	add    BYTE PTR [esp+esi*2+0x608c0c4a],cl
  40a482:	sub    esp,0x6a3efa0f
  40a488:	mov    WORD PTR [ebx+0x6],ss
  40a48b:	inc    DWORD PTR [ecx-0x4b]
  40a48e:	and    ch,BYTE PTR [esi]
  40a490:	call   0x51c9e06b
  40a495:	loope  0x40a439
  40a497:	add    BYTE PTR [edi+0x6c],al
  40a49a:	or     al,0x68
  40a49c:	mov    gs,WORD PTR [ebp-0x7f6c7ff6]
  40a4a2:	add    al,0xe8
	...
  40a4b8:	add    DWORD PTR [eax],0x3c
  40a4bb:	push   esp
  40a4bd:	lods   al,BYTE PTR ds:[esi]
  40a4be:	iret   
  40a4bf:	inc    eax
  40a4c0:	mov    WORD PTR [esi],cs
  40a4c2:	out    0x39,al
  40a4c4:	lds    ebp,FWORD PTR [esp+ecx*1-0x1]
  40a4c8:	loope  0x40a46f
  40a4ca:	and    ah,ah
  40a4cc:	popa   
  40a4cd:	es cmp al,0xff
  40a4d0:	loope  0x40a503
  40a4d2:	cmp    al,0x75
  40a4d4:	test   BYTE PTR [ecx+ebx*2+0x559eefc2],dl
  40a4db:	dec    edx
  40a4dc:	dec    esi
  40a4dd:	cwde   
  40a4de:	loope  0x40a4ae
  40a4e0:	push   es
  40a4e1:	mov    al,0x5f
  40a4e3:	aas    
  40a4e4:	push   eax
  40a4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4e6:	dec    ebp
  40a4e7:	xor    al,0x19
  40a4e9:	pop    ecx
  40a4ea:	xor    eax,0xd12922d3
  40a4ef:	xor    al,0xa1
  40a4f1:	nop
  40a4f2:	dec    ecx
  40a4f3:	pop    edx
  40a4f4:	(bad)  
  40a4f5:	xchg   ebx,eax
  40a4f6:	loope  0x40a500
  40a4f8:	int3   
  40a4f9:	mov    gs,WORD PTR [ebp+esi*2-0x73]
  40a4fd:	xchg   esp,eax
  40a4fe:	loope  0x40a53c
  40a500:	push   ecx
  40a501:	pushf  
  40a502:	loopne 0x40a507
  40a504:	mov    WORD PTR [esi+eiz*1-0x12612042],ss
  40a50b:	add    ecx,DWORD PTR [edx+ebp*1+0x2cdba9e1]
  40a512:	loope  0x40a4bd
  40a514:	ror    DWORD PTR [edi],cl
  40a516:	and    al,0x38
  40a518:	pop    esp
  40a519:	adc    DWORD PTR [eax+edi*1+0x0],ebp
	...
  40a52d:	add    BYTE PTR [eax],al
  40a52f:	add    BYTE PTR [ebx-0x452b2262],bh
  40a535:	sub    cl,bl
  40a537:	xor    edi,DWORD PTR [ecx]
  40a539:	mov    al,ds:0x93fe5fd8
  40a53e:	loope  0x40a53e
  40a540:	jecxz  0x40a569
  40a542:	in     al,0x1c
  40a544:	or     eax,0x2403e195
  40a549:	xchg   BYTE PTR [eax],bh
  40a54b:	lds    ecx,FWORD PTR [ebx+0x74141b9f]
  40a551:	mov    eax,ds:0x457b3347
  40a556:	push   0x54
  40a558:	add    DWORD PTR [eax],ebx
  40a55a:	jne    0x40a597
  40a55c:	imul   ebx,DWORD PTR [esi-0x4e9429f0],0x7
  40a563:	inc    eax
  40a564:	lahf   
  40a565:	popf   
  40a566:	and    BYTE PTR [eax+ebx*4-0x5b],0xf6
  40a56b:	data16 test al,0x52
  40a56e:	scas   al,BYTE PTR es:[edi]
  40a56f:	pop    esi
  40a570:	jg     0x40a59c
  40a572:	or     cl,al
  40a574:	push   ebx
  40a575:	cmp    ecx,DWORD PTR [ecx-0x17]
  40a578:	jle    0x40a561
  40a57a:	idiv   DWORD PTR [esi]
  40a57c:	pop    edi
  40a57d:	popf   
  40a57e:	div    BYTE PTR [ebx+eiz*1+0x5f804cb6]
  40a585:	popf   
  40a586:	and    BYTE PTR [esp+eiz*2-0x5b],0xf6
  40a58b:	sub    bl,BYTE PTR es:[esi+0x54d2b96e]
  40a592:	or     BYTE PTR [esi],dl
	...
  40a5a8:	jne    0x40a54e
  40a5aa:	dec    BYTE PTR [esi]
  40a5ac:	mov    edi,0x87f57c9d
  40a5b1:	push   0xffffffa1
  40a5b3:	(bad)  
  40a5b4:	sahf   
  40a5b5:	or     ecx,DWORD PTR [ebp-0x96268f7]
  40a5bb:	or     DWORD PTR [edi-0x2ebdd9d4],0xffffff9d
  40a5c2:	cmc    
  40a5c3:	xchg   esp,eax
  40a5c4:	jg     0x40a56b
  40a5c6:	not    dh
  40a5c8:	jle    0x40a5f1
  40a5ca:	add    al,0xc1
  40a5cc:	mov    gs,ebx
  40a5ce:	test   dh,0x28
  40a5d1:	pop    ss
  40a5d2:	in     al,0xb6
  40a5d4:	pop    esi
  40a5d5:	popf   
  40a5d6:	popa   
  40a5d7:	jmp    0x28940bd3
  40a5dc:	mov    BYTE PTR [ebp-0x62396644],bl
  40a5e2:	neg    BYTE PTR [esi-0x621f76bc]
  40a5e8:	xlat   BYTE PTR ds:[ebx]
  40a5e9:	popf   
  40a5ea:	mul    BYTE PTR [eax+0x4]
  40a5ed:	lods   al,BYTE PTR ds:[esi]
  40a5ee:	inc    BYTE PTR [eax]
  40a5f0:	adc    ah,BYTE PTR [edx+0x62]
  40a5f3:	add    BYTE PTR [ebp-0x3d],bh
  40a5f6:	push   ecx
  40a5f7:	inc    ecx
  40a5f8:	bound  edi,QWORD PTR gs:[ebp-0x89d2510]
  40a5ff:	jmp    FWORD PTR [eax-0x63]
  40a602:	out    dx,al
  40a603:	fstp   DWORD PTR ds:0xa889f762
  40a609:	dec    ebp
  40a60a:	(bad)  
  40a60b:	inc    DWORD PTR [eax]
	...
  40a61d:	add    BYTE PTR [eax],al
  40a61f:	add    dl,al
  40a621:	push   ss
  40a622:	mov    ch,0xe4
  40a624:	push   0x62
  40a626:	test   DWORD PTR [eax],0xbd899fd8
  40a62c:	lds    ebx,FWORD PTR [edx-0x9]
  40a62f:	jmp    DWORD PTR ds:0x70836be5
  40a635:	jge    0x40a636
  40a637:	jmp    DWORD PTR [edx+0x665c7c91]
  40a63d:	and    al,0xe0
  40a63f:	test   DWORD PTR [edx+0x6740862],0x92fff6f9
  40a649:	and    esi,edi
  40a64b:	jne    0x40a63a
  40a64d:	js     0x40a682
  40a64f:	mov    ds:0xb5f762e2,al
  40a654:	loope  0x40a6b0
  40a656:	idiv   edi
  40a658:	loop   0x40a63e
  40a65a:	push   cs
  40a65b:	call   0x37dc92
  40a660:	ret    0xe024
  40a663:	not    edx
  40a665:	(bad)  
  40a666:	div    DWORD PTR [ebp-0x63]
  40a669:	js     0x40a5f4
  40a66b:	mov    ds:0xb5f762e2,al
  40a670:	leave  
  40a671:	pop    edx
  40a672:	idiv   edi
  40a674:	xor    ah,ah
  40a676:	push   cs
  40a677:	call   0x37d922
  40a67c:	mov    WORD PTR [edx],es
  40a67e:	jg     0x40a660
  40a680:	jnp    0x40a68d
  40a682:	cmp    edi,edi
	...
  40a698:	loope  0x40a63f
  40a69a:	adc    ah,BYTE PTR [ebp+0x2e]
  40a69d:	sbb    edi,DWORD PTR [ecx]
  40a69f:	jmp    DWORD PTR [ecx]
  40a6a1:	add    dh,BYTE PTR [ecx]
  40a6a3:	call   DWORD PTR [ebx+0x2b]
  40a6a6:	mov    edi,0x6cdb3407
  40a6ab:	inc    DWORD PTR [ebx+0x3b]
  40a6ae:	jg     0x40a694
  40a6b0:	inc    ebx
  40a6b1:	inc    ebx
  40a6b2:	cmp    eax,ebp
  40a6b4:	jne    0x40a6c6
  40a6b6:	cmp    edi,edi
  40a6b8:	sub    ebx,DWORD PTR [ecx]
  40a6ba:	sub    al,0xf7
  40a6bc:	and    ebx,DWORD PTR [ebx+0x14]
  40a6bf:	cs icebp 
  40a6c1:	bound  edi,QWORD PTR [ecx]
  40a6c3:	(bad)  
  40a6c4:	fstp   DWORD PTR [ecx+0x31]
  40a6c7:	dec    DWORD PTR [ebx]
  40a6c9:	xchg   ch,ch
  40a6cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6cc:	add    edi,DWORD PTR [ebx+0x39]
  40a6cf:	mov    ch,0xe4
  40a6d1:	jp     0x40a70c
  40a6d3:	jmp    esp
  40a6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d6:	ins    DWORD PTR es:[edi],dx
  40a6d7:	(bad)  
  40a6d8:	jmp    0x40a66c
  40a6da:	jg     0x40a6b8
  40a6dc:	fistp  DWORD PTR [edx+0x4889e837]
  40a6e2:	cmp    edi,edi
  40a6e4:	shl    DWORD PTR [eax+0x3c],cl
  40a6e7:	test   ebx,0x907537b2
  40a6ed:	mov    edx,0x80a407bd
  40a6f2:	cmp    bh,bh
  40a6f4:	mov    bl,0xca
  40a6f6:	jge    0x40a6e8
  40a6f8:	mov    ds:0xe837d2,eax
	...
  40a70d:	add    BYTE PTR [eax],al
  40a70f:	add    BYTE PTR [ebp-0x6400c7ef],bl
  40a715:	push   0xeb3de924
  40a71a:	aaa    
  40a71b:	dec    DWORD PTR [ebx+0x74301494]
  40a721:	mov    DWORD PTR [eax+0x3],esi
  40a724:	mov    ebp,cs
  40a726:	mov    ds:0x6a4073ff,al
  40a72b:	pop    ds
  40a72c:	(bad)  
  40a72e:	mov    WORD PTR [ebp+0x30de2d63],ds
  40a734:	loope  0x40a6c2
  40a736:	mov    DWORD PTR [esi+ebp*1],eax
  40a739:	fwait
  40a73a:	gs jp  0x40a70e
  40a73d:	cwde   
  40a73e:	fcomp  DWORD PTR [ebp+0x30e155e6]
  40a744:	sbb    DWORD PTR [esi-0x58],0xdb9a33c2
  40a74b:	sti    
  40a74c:	xor    esp,DWORD PTR [edx+0x2c23304b]
  40a752:	fcmovne st,st(4)
  40a754:	int3   
  40a755:	xchg   esp,eax
  40a756:	leave  
  40a757:	add    eax,0x3061948c
  40a75c:	or     DWORD PTR [ecx+ebx*1+0x159b0127],0x1d988130
  40a767:	mov    dh,0x8b
  40a769:	lods   al,BYTE PTR ds:[esi]
  40a76a:	(bad)  
  40a76b:	gs jmp 0x40a708
  40a76e:	aaa    
  40a76f:	inc    ebp
  40a770:	mov    BYTE PTR [esp+ebx*4+0x7c],dl
	...
  40a787:	add    al,ch
  40a789:	adc    al,0x25
  40a78b:	pop    ds
  40a78c:	fistp  DWORD PTR [edx-0x67ae821b]
  40a792:	xor    BYTE PTR [edi],ch
  40a794:	cmp    DWORD PTR [esi+edx*8-0x71537847],eax
  40a79b:	xchg   esp,eax
  40a79c:	mov    WORD PTR [edx+ebp*8+0x7e119b43],ss
  40a7a3:	add    al,0x8c
  40a7a5:	xchg   esp,eax
  40a7a6:	scas   al,BYTE PTR es:[edi]
  40a7a7:	leave  
  40a7a8:	mov    ds:0x8fe90893,eax
  40a7ad:	xchg   esp,eax
  40a7ae:	iret   
  40a7af:	and    al,0xc4
  40a7b1:	cdq    
  40a7b2:	push   cs
  40a7b3:	jmp    0x1348d647
  40a7b8:	nop
  40a7b9:	or     BYTE PTR cs:[ebx],al
  40a7bc:	mov    BYTE PTR [edi],al
  40a7be:	dec    ebp
  40a7bf:	xchg   ebp,eax
  40a7c0:	inc    eax
  40a7c1:	or     DWORD PTR [ebp-0x9666483],ecx
  40a7c7:	sbb    DWORD PTR [ebx+0x1576f01f],ebp
  40a7cd:	sahf   
  40a7ce:	fisttp WORD PTR [edi+0x20]
  40a7d1:	xchg   ebp,eax
  40a7d2:	or     dl,dh
  40a7d4:	iret   
  40a7d5:	and    BYTE PTR [edx],cl
  40a7d7:	push   edx
  40a7d8:	push   ebp
  40a7d9:	or     DWORD PTR [ebp-0x96684bb],ecx
  40a7df:	mov    ecx,0x3efc100c
  40a7e4:	jae    0x40a77f
  40a7e6:	push   edi
  40a7e7:	ds aad 0x89
  40a7ea:	idiv   DWORD PTR [eax+eax*1+0x0]
	...
  40a7fd:	add    BYTE PTR [eax],al
  40a7ff:	add    BYTE PTR [ebx],dl
  40a801:	mov    dl,0x48
  40a803:	xchg   BYTE PTR [ebx-0x47937f67],bh
  40a809:	mov    eax,ds:0xd9f71ef6
  40a80e:	jnp    0x40a7db
  40a810:	push   cs
  40a811:	fsub   st,st(3)
  40a813:	push   ss
  40a814:	mov    ebx,0x907d0799
  40a819:	sub    al,0x8
  40a81b:	jmp    0x3d37829a
  40a820:	lods   al,BYTE PTR ds:[esi]
  40a821:	mov    eax,ds:0xdf7aeef6
  40a826:	neg    esi
  40a828:	jb     0x40a7c3
  40a82a:	not    BYTE PTR [eax+edi*4-0x4f]
  40a82e:	mov    esp,0xf69962a0
  40a833:	xchg   esp,eax
  40a834:	pop    edi
  40a835:	mov    eax,ds:0x7dca00f6
  40a83a:	cli    
  40a83b:	mov    ds:0x45f76ada,eax
  40a840:	fnstsw WORD PTR [esi-0x78]
  40a843:	inc    eax
  40a845:	fs loopne 0x40a859
  40a848:	add    eax,0x27c90896
  40a84d:	cdq    
  40a84e:	not    BYTE PTR [esi+ebp*8+0x79]
  40a852:	mov    eax,esp
  40a854:	sbb    ebx,edi
  40a856:	imul   BYTE PTR [ecx+0x6d]
  40a859:	push   0x7d
  40a85b:	or     ch,bh
  40a85d:	xchg   ecx,eax
  40a85e:	test   eax,0x4d18daff
  40a863:	cld    
	...
  40a878:	lea    ebx,[ecx]
  40a87a:	push   ebx
  40a87b:	inc    ecx
  40a87c:	xor    eax,0xfc3a3d6a
  40a881:	iret   
  40a882:	idiv   dh
  40a884:	push   eax
  40a885:	popf   
  40a886:	out    dx,al
  40a887:	and    eax,0x68f76ada
  40a88c:	call   0x893:0x3d0047ce
  40a893:	add    BYTE PTR [ebp+0x4d087d6a],ah
  40a899:	xchg   bh,dh
  40a89b:	jmp    FWORD PTR [edx+0x245baefd]
  40a8a1:	xchg   ebp,eax
  40a8a2:	div    DWORD PTR ds:0x47d7df
  40a8a8:	call   0xf769:0xf5e80edc
  40a8af:	(bad)  
  40a8b0:	std    
  40a8b1:	cmp    al,0x53
  40a8b3:	inc    ecx
  40a8b4:	in     eax,0xfc
  40a8b6:	or     BYTE PTR [eax],al
  40a8b8:	mov    ch,0x14
  40a8ba:	div    DWORD PTR [ebp-0x43]
  40a8bd:	jl     0x40a8a5
  40a8bf:	(bad)  
  40a8c0:	fisub  DWORD PTR [esi-0x9]
  40a8c3:	jne    0x40a851
  40a8c5:	mov    edi,0xd3947524
  40a8ca:	mov    al,ds:0xc232d1a3
  40a8d0:	nop
  40a8d1:	stos   DWORD PTR es:[edi],eax
  40a8d2:	fisttp QWORD PTR [edx+0xbbee1a0]
  40a8d8:	je     0x40a8c8
  40a8da:	ins    BYTE PTR es:[edi],dx
  40a8db:	inc    DWORD PTR [eax]
	...
  40a8ed:	add    BYTE PTR [eax],al
  40a8ef:	add    BYTE PTR [ebx-0x358bb55d],al
  40a8f5:	test   DWORD PTR [ebx],ebp
  40a8f7:	pop    ebx
  40a8f8:	int    0xad
  40a8fa:	(bad)  
  40a8fc:	fmul   DWORD PTR [esi+0x25]
  40a8ff:	(bad)  
  40a900:	mov    esp,0x8c67dc7d
  40a905:	lods   eax,DWORD PTR ds:[esi]
  40a906:	adc    edi,DWORD PTR [esi+0x40c0f2e4]
  40a90c:	mov    WORD PTR [ebp+0x25],?
  40a90f:	jne    0x40a8a5
  40a911:	inc    ebp
  40a912:	dec    ebx
  40a914:	cmp    esi,DWORD PTR [edi]
  40a916:	les    esp,FWORD PTR [edi-0x73]
  40a919:	lods   eax,DWORD PTR ds:[esi]
  40a91a:	adc    edi,DWORD PTR [esi+0x40c15db4]
  40a920:	mov    ebp,?
  40a922:	and    esi,DWORD PTR [ebp-0x7c]
  40a925:	inc    ebp
  40a926:	jmp    0x40a8f3
  40a928:	adc    ebx,DWORD PTR [edi-0x3c]
  40a92b:	mov    gs,WORD PTR [di-0x41ed]
  40a930:	je     0x40a98a
  40a932:	rol    DWORD PTR [eax-0x74],0xdd
  40a936:	and    esi,DWORD PTR [ebp-0x7c]
  40a939:	xchg   ebp,eax
  40a93a:	test   ebx,0x161486eb
  40a940:	das    
  40a941:	(bad)  
  40a942:	and    eax,0xaa5cec9
  40a947:	push   ebp
  40a948:	pop    es
  40a949:	xchg   edx,eax
  40a94a:	mov    esp,eax
  40a94c:	enter  0xb13,0x6a
  40a950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a951:	xchg   esp,eax
  40a952:	out    dx,al
  40a953:	mov    dh,0x0
	...
  40a965:	add    BYTE PTR [eax],al
  40a967:	add    BYTE PTR [ebx-0x4c9bd754],dl
  40a96d:	xchg   edi,eax
  40a96e:	addr16 (bad) 
  40a970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a971:	sub    bh,bl
  40a973:	sub    al,0x19
  40a975:	mov    ecx,ds
  40a977:	sbb    DWORD PTR [ebx+0x6e99b597],0xffffff97
  40a97e:	xor    edi,esp
  40a980:	jae    0x40a9a0
  40a982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a983:	sub    al,0x83
  40a985:	sub    cl,BYTE PTR ds:0x998d012d
  40a98b:	lahf   
  40a98c:	jb     0x40a925
  40a98e:	popf   
  40a98f:	sub    al,0xe1
  40a991:	cwde   
  40a992:	test   DWORD PTR [esi+0x6412ac8b],esi
  40a998:	pop    ebx
  40a999:	xchg   edi,eax
  40a99a:	mov    bh,0x41
  40a99c:	mov    BYTE PTR [esp+edx*1-0x52ecc787],dl
  40a9a3:	das    
  40a9a4:	inc    ebx
  40a9a5:	and    ebp,edi
  40a9a7:	sbb    edx,DWORD PTR [esi-0x78d3aa11]
  40a9ad:	aam    0xed
  40a9af:	xchg   edi,ebp
  40a9b1:	xchg   ebx,eax
  40a9b2:	loope  0x40a9b7
  40a9b4:	adc    eax,0x99804d51
  40a9b9:	test   cl,ah
  40a9bb:	mov    bh,0x81
  40a9bd:	xchg   edi,eax
  40a9be:	mov    bl,0x13
  40a9c0:	or     esp,DWORD PTR [ecx]
  40a9c2:	and    eax,0x2dee251b
  40a9c7:	sub    al,0x5
  40a9c9:	push   ecx
  40a9ca:	adc    eax,0x9b
	...
  40a9df:	add    bh,dh
  40a9e1:	cmp    ah,BYTE PTR [eax+0x520eb03]
  40a9e7:	sbb    ebx,DWORD PTR [ecx+0x3c2c0dee]
  40a9ed:	sub    al,0xe1
  40a9ef:	add    esp,ebx
  40a9f1:	aad    0x7
  40a9f3:	cdq    
  40a9f4:	js     0x40aa17
  40a9f6:	add    BYTE PTR [ecx],al
  40a9f8:	sbb    ecx,esp
  40a9fa:	mul    dh
  40a9fc:	cwde   
  40a9fd:	adc    ch,BYTE PTR [edx+0x222c67de]
  40aa03:	xor    eax,0x54f596d1
  40aa08:	je     0x40a9b6
  40aa0a:	sbb    ecx,DWORD PTR [edi+0x51579767]
  40aa10:	mov    DWORD PTR [edi+eiz*8+0x7c976077],edx
  40aa17:	loope  0x40a9c0
  40aa19:	and    eax,eax
  40aa1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa1d:	lods   al,BYTE PTR ds:[esi]
  40aa1e:	push   0x5f95a74b
  40aa23:	stc    
  40aa24:	push   ebx
  40aa25:	push   ebp
  40aa26:	or     BYTE PTR [esi+0x7adf9a1d],cl
  40aa2c:	in     eax,dx
  40aa2d:	xchg   ebp,eax
  40aa2e:	neg    BYTE PTR [ecx]
  40aa30:	lock xchg ebp,eax
  40aa32:	test   BYTE PTR [esi-0xb08bb4a],0x47
  40aa39:	scas   al,BYTE PTR es:[edi]
  40aa3a:	pop    ecx
  40aa3b:	xor    DWORD PTR [edi-0x6b],esp
  40aa3e:	fild   QWORD PTR [ecx-0x3e096a57]
	...
  40aa58:	push   eax
  40aa59:	cmp    cl,BYTE PTR [ecx-0x17]
  40aa5c:	jbe    0x40aa7d
  40aa5e:	hlt    
  40aa5f:	push   ecx
  40aa60:	ret    0xf6ef
  40aa63:	cmp    BYTE PTR ds:[esi],ch
  40aa66:	or     ecx,ebp
  40aa68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa69:	(bad)  
  40aa6a:	push   edi
  40aa6b:	cs cmp eax,0xb7d8e08e
  40aa71:	xchg   ebp,eax
  40aa72:	not    BYTE PTR [ecx]
  40aa74:	xchg   edx,esi
  40aa76:	not    BYTE PTR [esi]
  40aa78:	mov    bh,0x1f
  40aa7a:	hlt    
  40aa7b:	add    DWORD PTR [edi-0xe],edi
  40aa7e:	test   BYTE PTR [eax],0x92
  40aa81:	push   edi
  40aa82:	retf   0xe50c
  40aa85:	les    eax,FWORD PTR [ecx-0xbabc914]
  40aa8b:	push   0xffffffb5
  40aa8d:	not    DWORD PTR [eax]
  40aa8f:	call   FWORD PTR [eax-0x68]
  40aa92:	out    dx,al
  40aa93:	cmp    DWORD PTR [edx],esi
  40aa95:	push   0xfffffff7
  40aa97:	mov    DWORD PTR [eax+0x6c],edi
  40aa9a:	bound  eax,QWORD PTR [eax]
  40aa9c:	dec    edi
  40aa9d:	xchg   bh,dh
  40aa9f:	jne    0x40aa3e
  40aaa1:	jns    0x40aacd
  40aaa3:	call   edx
  40aaa5:	push   0x62
  40aaa7:	add    bh,cl
  40aaa9:	lods   eax,DWORD PTR ds:[esi]
  40aaaa:	cmc    
  40aaab:	jne    0x40ab1a
  40aaad:	jns    0x40aacd
  40aaaf:	push   DWORD PTR [edx]
  40aab1:	push   0x62
  40aab3:	add    BYTE PTR [edi+0x6d75f78c],bl
  40aab9:	jns    0x40aabd
  40aabb:	inc    DWORD PTR [eax]
	...
  40aacd:	add    BYTE PTR [eax],al
  40aacf:	add    BYTE PTR [edx],dl
  40aad1:	push   0x60
  40aad3:	pop    esi
  40aad4:	mov    cl,0xcf
  40aad6:	imul   BYTE PTR [ecx+0x6f]
  40aad9:	push   0x7d
  40aadb:	or     BYTE PTR ds:0xb2fff666,cl
  40aae1:	stc    
  40aae2:	push   esp
  40aae3:	pop    esp
  40aae4:	in     al,0x90
  40aae6:	bound  esp,QWORD PTR [ebx]
  40aae8:	shl    ah,cl
  40aaea:	push   cs
  40aaeb:	call   0x3816c1
  40aaf0:	dec    ebp
  40aaf1:	retf   
  40aaf2:	push   edx
  40aaf3:	inc    ecx
  40aaf4:	and    eax,0xd8ff12f7
  40aaf9:	cwde   
  40aafa:	out    dx,al
  40aafb:	ffree  st(3)
  40aafd:	push   0xfffffff7
  40aaff:	(bad)  
  40ab00:	cmp    BYTE PTR [ebp-0x9],ch
  40ab03:	jne    0x40ab02
  40ab05:	js     0x40ab2f
  40ab07:	lahf   
  40ab08:	xchg   edx,eax
  40ab09:	push   0xffffffc1
  40ab0b:	ret    0xa78c
  40ab0e:	or     dl,BYTE PTR [ebp+0x17]
  40ab11:	xchg   edi,eax
  40ab12:	mov    al,ah
  40ab14:	in     al,0x95
  40ab16:	and    bh,bh
  40ab18:	add    eax,esi
  40ab1a:	cs push eax
  40ab1c:	retf   
  40ab1d:	pop    ss
  40ab1e:	sbb    edi,edi
  40ab20:	cmp    DWORD PTR [edi-0x54f647ee],esi
  40ab26:	or     cl,BYTE PTR [ebx]
  40ab28:	int3   
  40ab29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab2a:	jne    0x40ab73
  40ab2c:	lea    ebp,[ebx-0x3cb638f6]
  40ab32:	or     eax,DWORD PTR [eax]
	...
  40ab48:	mov    WORD PTR [ebx-0x2a67bab9],gs
  40ab4e:	or     BYTE PTR [eax],al
  40ab50:	mov    edi,ss
  40ab52:	or     al,0x6a
  40ab54:	mov    edi,ss
  40ab56:	or     al,0x6a
  40ab58:	mov    WORD PTR [eax],cs
  40ab5a:	mov    dh,0xf3
  40ab5c:	fadd   QWORD PTR [eax]
  40ab5e:	jbe    0x40ab54
  40ab60:	arpl   WORD PTR [ebx],bp
  40ab62:	and    BYTE PTR [eax+0x63],dl
  40ab65:	test   eax,0x19e1ff24
  40ab6a:	adc    eax,0xa7e018a
  40ab6f:	or     ecx,DWORD PTR [edx+edx*4-0x9]
  40ab73:	call   0x4b280e
  40ab78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab79:	xchg   ebx,eax
  40ab7a:	mov    bl,0x40
  40ab7c:	mov    edx,?
  40ab7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab7f:	sysenter 
  40ab81:	(bad)  
  40ab82:	push   0x754e23ff
  40ab87:	ror    BYTE PTR [ecx],1
  40ab89:	add    DWORD PTR [ecx],edi
  40ab8b:	not    DWORD PTR [ebx]
  40ab8d:	rcr    esp,cl
  40ab8f:	push   ecx
  40ab90:	hlt    
  40ab91:	mov    dh,0x68
  40ab93:	inc    DWORD PTR [ebx]
  40ab95:	cmc    
  40ab96:	jne    0x40ab88
  40ab98:	add    edx,DWORD PTR [ebp-0x4a1bd6d2]
  40ab9e:	inc    eax
  40ab9f:	sub    ebx,ebp
  40aba1:	(bad)  
  40aba2:	fistp  WORD PTR [ebx+0x3a0f120]
  40aba8:	fisttp DWORD PTR [ecx-0x10]
  40abab:	xor    BYTE PTR [eax],al
	...
  40abbd:	add    BYTE PTR [eax],al
  40abbf:	add    bl,dl
  40abc1:	xchg   ebx,eax
  40abc2:	imul   DWORD PTR [esi+0x5fc47c97]
  40abc8:	ret    
  40abc9:	xchg   ebx,eax
  40abca:	imul   edi,DWORD PTR [edi-0x58],0x2628ef8b
  40abd1:	xchg   esp,eax
  40abd2:	push   edi
  40abd3:	cmp    ecx,DWORD PTR [eax-0x2b]
  40abd6:	fild   QWORD PTR [eax]
  40abd8:	fld    DWORD PTR [edi+ebx*8+0x35939b28]
  40abdf:	clc    
  40abe0:	stos   DWORD PTR es:[edi],eax
  40abe1:	popf   
  40abe2:	mov    ebp,DWORD PTR [eax]
  40abe4:	mov    ebx,DWORD PTR ds:0x937b1b65
  40abea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abeb:	test   BYTE PTR [ecx],bh
  40abed:	adc    BYTE PTR [edi+0x1b947328],0xf4
  40abf4:	repz xchg esp,eax
  40abf6:	fistp  WORD PTR [eax]
  40abf8:	and    bh,ah
  40abfa:	ins    BYTE PTR es:[edi],dx
  40abfb:	(bad)  
  40abfc:	int3   
  40abfd:	xchg   esp,eax
  40abfe:	mov    gs,WORD PTR [esi+0x60]
  40ac01:	mov    esi,DWORD PTR [edi+0x28]
  40ac04:	dec    ebx
  40ac05:	or     eax,ebp
  40ac07:	sbb    eax,DWORD PTR [eax]
  40ac09:	pop    ebp
  40ac0a:	sub    BYTE PTR [si-0x206b],ah
  40ac0f:	sbb    dl,dh
  40ac11:	sti    
  40ac12:	data16 (bad) 
  40ac14:	int3   
  40ac15:	xchg   esp,eax
  40ac16:	pop    esi
  40ac17:	outs   dx,BYTE PTR ds:[esi]
  40ac18:	xor    BYTE PTR [ebx+0x91b2847],cl
  40ac1e:	clc    
  40ac1f:	sbb    ebp,eax
  40ac21:	pop    esp
  40ac22:	aaa    
  40ac23:	sub    BYTE PTR [eax],al
	...
  40ac35:	add    BYTE PTR [eax],al
  40ac37:	add    BYTE PTR [edi],cl
  40ac39:	push   ecx
  40ac3a:	or     DWORD PTR [ecx-0x44],eax
  40ac3d:	xchg   ebx,eax
  40ac3e:	imul   cl
  40ac40:	sub    eax,ebx
  40ac42:	pusha  
  40ac43:	jmp    0x91f82fd7
  40ac48:	push   0xfffffff0
  40ac4a:	inc    edi
  40ac4b:	jmp    0x1721f604
  40ac50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac51:	xchg   ebx,eax
  40ac52:	idiv   BYTE PTR [edi+edx*8+0x7a]
  40ac56:	mov    dh,BYTE PTR [eax]
  40ac58:	je     0x40abed
  40ac5a:	popa   
  40ac5b:	call   0x81f82fef
  40ac60:	xor    al,0xf0
  40ac62:	inc    edi
  40ac63:	jmp    0xd721f5d2
  40ac68:	jae    0x40abfd
  40ac6a:	neg    BYTE PTR [eax+eiz*4+0x7a]
  40ac6e:	bound  esp,QWORD PTR [eax+0x7cf69373]
  40ac74:	je     0x40ac01
  40ac76:	idiv   BYTE PTR [esi-0x4956fd58]
  40ac7c:	stos   DWORD PTR es:[edi],eax
  40ac7d:	xchg   ecx,eax
  40ac7e:	mov    esp,0xf691abc1
  40ac83:	xchg   ecx,eax
  40ac84:	das    
  40ac85:	xor    dh,dh
  40ac87:	sahf   
  40ac88:	mov    bl,0x47
  40ac8a:	stc    
  40ac8b:	sahf   
  40ac8c:	stos   DWORD PTR es:[edi],eax
  40ac8d:	xchg   ecx,eax
  40ac8e:	not    BYTE PTR [esp+edx*2]
  40ac91:	xchg   ebx,eax
  40ac92:	jl     0x40ac85
  40ac94:	ja     0x40acde
  40ac96:	idiv   DWORD PTR [esi+0x73]
  40ac99:	xchg   ecx,eax
  40ac9a:	mov    esp,0x79
	...
  40acaf:	add    BYTE PTR [ebx-0x6f],dh
  40acb2:	test   BYTE PTR [ecx+0x66f631fb],0x6b
  40acb9:	xlat   BYTE PTR ds:[ebx]
  40acba:	lock push eax
  40acbc:	push   0x6b56f692
  40acc1:	pop    es
  40acc2:	cmc    
  40acc3:	inc    ecx
  40acc4:	out    dx,eax
  40acc5:	sbb    eax,0xd1250009
  40acca:	retf   0xf50c
  40accd:	fs sub esp,0xffffffba
  40acd1:	inc    ebx
  40acd2:	add    ch,al
  40acd4:	gs hlt 
  40acd6:	cmc    
  40acd7:	(bad)  
  40acd8:	(bad)  
  40acd9:	aad    0x7c
  40acdb:	cmp    ebp,edi
  40acdd:	and    BYTE PTR [ebp+0x41],dl
  40ace0:	cmc    
  40ace1:	gs out dx,al
  40ace3:	or     al,0x51
  40ace5:	mov    ecx,0x2df550f5
  40acea:	idiv   bh
  40acec:	call   0xf659:0x198560fa
  40acf3:	dec    edi
  40acf4:	stos   BYTE PTR es:[edi],al
  40acf5:	inc    esp
  40acf6:	push   cs
  40acf7:	call   0x367acf
  40acfc:	dec    ebp
  40acfd:	xor    BYTE PTR [ecx],cl
  40acff:	add    dl,cl
  40ad01:	mul    DWORD PTR [eax-0x71]
  40ad04:	imul   edx,DWORD PTR [edi-0xa],0xe44ca4f
  40ad0b:	call   0x367a67
  40ad10:	dec    ebp
  40ad11:	scas   al,BYTE PTR es:[edi]
  40ad12:	xchg   ebp,eax
  40ad13:	inc    DWORD PTR [eax]
	...
  40ad25:	add    BYTE PTR [eax],al
  40ad27:	add    BYTE PTR [edx],ch
  40ad29:	ror    dl,1
  40ad2b:	or     BYTE PTR [ebp+0x64],ah
  40ad2e:	sub    esp,0xfffffff6
  40ad31:	shl    esp,1
  40ad33:	push   esi
  40ad34:	mov    ds:0x5e69f62e,al
  40ad39:	mov    edx,0x8dfd087b
  40ad3e:	xchg   ebp,eax
  40ad3f:	dec    edx
  40ad41:	adc    BYTE PTR [esp+edi*8-0x52],cl
  40ad45:	test   BYTE PTR [eax+ecx*2+0x3d819864],dh
  40ad4c:	addr16 dec ebp
  40ad4e:	dec    ecx
  40ad4f:	add    BYTE PTR [ebp-0x73f10986],dh
  40ad55:	jmp    DWORD PTR [edx+0x0]
  40ad58:	mov    WORD PTR [ebx-0x6e],?
  40ad5b:	jns    0x40ad0d
  40ad5d:	cmp    al,0xa
  40ad5f:	push   esi
  40ad60:	hlt    
  40ad61:	mov    BYTE PTR [esi+0x0],bh
  40ad64:	mov    WORD PTR [esi+0x4a],?
  40ad67:	je     0x40adb3
  40ad69:	cmp    ecx,DWORD PTR [edx+0x768a8c38]
  40ad6f:	xchg   DWORD PTR [ebx+edi*2+0x2574500a],ecx
  40ad76:	into   
  40ad77:	inc    eax
  40ad78:	mov    WORD PTR [ebx+0x7b8c8990],ss
  40ad7e:	rol    BYTE PTR [edx],0xce
  40ad81:	sub    dl,BYTE PTR [edx]
  40ad83:	pusha  
  40ad84:	cmc    
  40ad85:	mov    DWORD PTR [eax+edx*2],ebp
  40ad88:	pop    esp
  40ad89:	adc    ecx,DWORD PTR [edx]
	...
  40ad9f:	add    BYTE PTR [ebx+0x48849538],ah
  40ada5:	mov    esp,0xefa3500c
  40adaa:	hlt    
  40adab:	out    0x27,eax
  40adad:	xor    ebp,DWORD PTR [edi+edi*8]
  40adb0:	xor    al,0xe3
  40adb2:	or     DWORD PTR [eax],eax
  40adb4:	jnp    0x40adc6
  40adb6:	xchg   ebp,eax
  40adb7:	mov    fs,eax
  40adb9:	mov    esp,0xc97b500c
  40adbe:	hlt    
  40adbf:	out    0xdb,eax
  40adc1:	inc    ebp
  40adc2:	sub    al,0xff
  40adc4:	je     0x40ad64
  40adc6:	mov    edi,edi
  40adc8:	arpl   WORD PTR [ebx],dx
  40adca:	enter  0xde67,0xc1
  40adce:	leave  
  40adcf:	(bad)  
  40add0:	mov    edx,0x8c8b3425
  40add5:	jge    0x40adc8
  40add7:	mov    edi,0xe7c451b8
  40addc:	xchg   edi,eax
  40addd:	aam    0x2b
  40addf:	(bad)  
  40ade0:	fcom   QWORD PTR [edi+ebp*4+0x47902b9b]
  40ade7:	data16 mov ah,0x19
  40adea:	mov    esp,0x46e01bc2
  40adef:	scas   eax,DWORD PTR es:[edi]
  40adf0:	mov    edi,DWORD PTR [esi+eax*1+0x3c]
  40adf4:	or     edx,DWORD PTR [eax-0x6b736458]
  40adfa:	dec    esi
  40adfb:	fs popw ds
  40adfe:	test   dl,al
  40ae00:	repz fild QWORD PTR [esi]
  40ae03:	scas   eax,DWORD PTR es:[edi]
	...
  40ae18:	xchg   ebx,eax
  40ae19:	jl     0x40ae0d
  40ae1b:	cmp    esp,ebx
  40ae1d:	(bad)
  40ae21:	pop    DWORD PTR [edi]
  40ae23:	sbb    DWORD PTR [ebp-0x3419a02a],ecx
  40ae29:	or     BYTE PTR [edx],cl
  40ae2b:	mov    esi,0x6b1fc3c7
  40ae30:	mov    ebx,0xbe24e78f
  40ae35:	ds sub ch,bh
  40ae38:	call   0x4a8f:0xa3252d19
  40ae3f:	or     bl,BYTE PTR [ebx-0x30e417f7]
  40ae45:	mov    cs,edi
  40ae47:	and    al,0xf6
  40ae49:	mov    bl,0xb6
  40ae4b:	scas   al,BYTE PTR es:[edi]
  40ae4c:	mov    edi,DWORD PTR [ecx+edi*2+0x25]
  40ae50:	jnp    0x40ade1
  40ae52:	dec    edx
  40ae53:	or     BYTE PTR [ebx+0x9],dh
  40ae56:	clc    
  40ae57:	sbb    edi,DWORD PTR [ebx]
  40ae59:	mov    ss,WORD PTR [edi+0x3c3bf424]
  40ae5f:	ret    
  40ae60:	pop    ebx
  40ae61:	mov    ds,ebp
  40ae63:	jmp    0x2520842c
  40ae68:	rcr    DWORD PTR [edi+edx*4+0x98f40f2],0x76
  40ae70:	pop    ss
  40ae71:	cmp    dl,BYTE PTR [ebp+0x28]
  40ae74:	mov    ah,bh
  40ae76:	or     ch,cl
  40ae78:	(bad)  
  40ae79:	adc    al,0xf6
  40ae7b:	aam    0x0
	...
  40ae8d:	add    BYTE PTR [eax],al
  40ae8f:	add    BYTE PTR [edi],ah
  40ae91:	ja     0x40aea9
  40ae93:	push   esp
  40ae94:	jo     0x40ae25
  40ae96:	not    ah
  40ae98:	imul   ecx,DWORD PTR [edi-0x3b580e84],0xffffff94
  40ae9f:	ds test al,0xef
  40aea2:	push   esi
  40aea3:	and    BYTE PTR [ebp-0x68],cl
  40aea6:	or     BYTE PTR [esp+esi*2+0x3f2d8880],dl
  40aead:	xchg   esi,esi
  40aeaf:	push   ds
  40aeb0:	pop    edx
  40aeb1:	fxtract 
  40aeb3:	mov    ecx,0xe1909b0
  40aeb8:	and    bl,BYTE PTR [ebx-0x6bbad020]
  40aebe:	or     dl,dh
  40aec0:	dec    edi
  40aec1:	lahf   
  40aec2:	mov    ebp,DWORD PTR [ebx+0x2608948d]
  40aec8:	xacquire xchg BYTE PTR [ecx],cl
  40aecb:	jmp    0x250e435f
  40aed0:	test   BYTE PTR [edi-0x57016f2],cl
  40aed6:	or     BYTE PTR [ebx-0x78],al
  40aed9:	cli    
  40aeda:	or     BYTE PTR [ebx-0x70],dl
  40aedd:	pop    ds
  40aede:	dec    esp
  40aedf:	mov    ch,0x38
  40aee1:	and    DWORD PTR [ebp+edi*4+0x19f68d97],ecx
  40aee8:	scas   eax,DWORD PTR es:[edi]
  40aee9:	pop    es
  40aeea:	icebp  
  40aeeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeec:	add    eax,0x1281e18a
  40aef1:	xchg   ebp,eax
  40aef2:	or     dl,ah
	...
  40af08:	iret   
  40af09:	or     BYTE PTR [eax+eax*4],cl
  40af0c:	test   DWORD PTR [edx+0x3a350008],edx
  40af12:	sbb    al,0x49
  40af14:	je     0x40aeae
  40af16:	cmc    
  40af17:	jne    0x40af6e
  40af19:	mov    edx,0xb1a2a1df
  40af1e:	pop    eax
  40af1f:	mov    esp,DWORD PTR [ebp+0x23]
  40af22:	mov    esp,?
  40af24:	mov    edx,0xd750f5b1
  40af29:	mov    ecx,0xb1c2a1cf
  40af2e:	jg     0x40aeb5
  40af30:	lds    ebp,FWORD PTR [ecx-0x7ea2000b]
  40af36:	xchg   esp,eax
  40af37:	inc    edx
  40af39:	mul    BYTE PTR ds:[edi-0x6c]
  40af3d:	push   esp
  40af3e:	dec    ecx
  40af3f:	add    BYTE PTR [edx-0x7d080715],dh
  40af45:	mov    cl,0xf5
  40af47:	jne    0x40af3a
  40af49:	mov    ecx,0xb182a13a
  40af4e:	jg     0x40aed5
  40af50:	cdq    
  40af51:	test   eax,0x921ffff5
  40af56:	pusha  
  40af57:	fisub  DWORD PTR [ecx]
  40af59:	pop    ecx
  40af5a:	idiv   dh
  40af5c:	js     0x40af06
  40af5e:	std    
  40af5f:	push   DWORD PTR [edx-0x42f3844e]
  40af65:	mov    ch,BYTE PTR [ecx-0x73df3d01]
  40af6b:	in     al,dx
	...
  40af80:	mov    edx,0x756af5b2
  40af85:	cmp    ebx,ebp
  40af87:	pop    esp
  40af88:	mov    ah,0x98
  40af8a:	cmc    
  40af8b:	mov    ch,0x35
  40af8d:	stos   BYTE PTR es:[edi],al
  40af8e:	cmc    
  40af8f:	jmp    DWORD PTR [edx]
  40af91:	sub    al,0x2
  40af93:	call   0x36a0c9
  40af98:	fcomp  QWORD PTR [ecx+eiz*8]
  40af9b:	test   DWORD PTR [esi+eiz*1-0x6c7395d5],0x7bcd5c38
  40afa6:	sub    esi,DWORD PTR [ebp-0xd4f9c4]
  40afac:	cmp    edx,DWORD PTR [eax-0x24d217fa]
  40afb2:	sub    bh,bh
  40afb4:	adc    eax,0x23f73600
  40afb9:	out    dx,al
  40afba:	cwde   
  40afbb:	test   DWORD PTR [esi+ebp*8],ebp
  40afbe:	sub    bh,bh
  40afc0:	mov    esp,0x4d5c1653
  40afc5:	jnp    0x40aff2
  40afc7:	mov    ch,0xfc
  40afc9:	lds    ebp,FWORD PTR [edx]
  40afcb:	(bad)  
  40afcc:	sti    
  40afcd:	(bad)  
  40afce:	aam    0x48
  40afd0:	dec    ebp
  40afd1:	jnp    0x40aff5
  40afd3:	mov    esi,0xb2ab62c
  40afd8:	int3   
  40afd9:	es cmc 
  40afdb:	sbb    BYTE PTR [ecx],0x9b
  40afde:	adc    bh,bh
  40afe0:	shl    DWORD PTR [esi-0x6f],cl
  40afe3:	sldt   WORD PTR [eax]
	...
  40aff6:	add    BYTE PTR [eax],al
  40aff8:	retf   
  40aff9:	dec    edx
  40affa:	fwait
  40affb:	test   esp,esp
  40affd:	test   DWORD PTR [eax],ebp
  40afff:	call   FWORD PTR [ebx+edx*4-0x7a]
  40b003:	popf   
  40b004:	mov    bl,0x7d
  40b006:	and    al,0x14
  40b008:	xchg   edi,eax
  40b009:	cmp    edx,DWORD PTR [ecx-0x579cc3fb]
  40b00f:	pushf  
  40b010:	fwait
  40b011:	gs inc eax
  40b013:	test   DWORD PTR [ebp+eiz*2+0x7da1ff28],esi
  40b01a:	or     al,BYTE PTR [eax]
  40b01c:	adc    ecx,esi
  40b01e:	cmp    al,0xf7
  40b020:	jnp    0x40b065
  40b022:	mov    ebp,0xc9988b67
  40b027:	jmp    FWORD PTR [edx-0x6b]
  40b02a:	push   esp
  40b02b:	adc    al,0x5b
  40b02d:	mov    WORD PTR [edi-0x78671edf],ss
  40b033:	xchg   ebp,eax
  40b034:	repz mov eax,DWORD PTR [edi+0x7761118b]
  40b03b:	and    DWORD PTR [ebx+0x18],eax
  40b03e:	xor    eax,0x7f8c4328
  40b043:	add    al,0x83
  40b045:	adc    BYTE PTR [ebx+0x4],bl
  40b048:	mov    WORD PTR [edx+eiz*2+0x5784305f],ss
  40b04f:	and    DWORD PTR [ebx+ebx*4-0x6b736d9d],ecx
  40b056:	fild   WORD PTR [ecx+ecx*2+0x21377d]
	...
  40b06d:	add    BYTE PTR [eax],al
  40b06f:	add    BYTE PTR [ebx],al
  40b071:	xchg   ebp,eax
  40b072:	out    0x87,al
  40b074:	or     eax,0x6403df95
  40b079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b07a:	fbstp  TBYTE PTR [eax]
  40b07c:	sub    cl,BYTE PTR [ebp+edx*4-0x76990bf5]
  40b083:	and    ebx,ebx
  40b085:	mov    edx,DWORD PTR [ebp+0x30]
  40b088:	fisttp DWORD PTR [ebx-0x63bedef9]
  40b08e:	pop    ss
  40b08f:	jmp    0x7d01:0x20f78c25
  40b096:	mul    DWORD PTR [eax]
  40b098:	mov    bl,0x8b
  40b09a:	jge    0x40b0a7
  40b09c:	mov    ah,0xac
  40b09e:	mov    DWORD PTR [eax],esp
  40b0a0:	mov    ds:0xa3279d8b,eax
  40b0a5:	mov    ebx,edi
  40b0a7:	and    BYTE PTR [ecx],bl
  40b0a9:	pushf  
  40b0aa:	(bad)  
  40b0ab:	or     eax,0x20cf8b26
  40b0b0:	cmp    DWORD PTR [edi+edi*4+0x20],ebp
  40b0b4:	jnp    0x40b041
  40b0b6:	or     DWORD PTR [eax+eax*4],edi
  40b0b9:	jl     0x40b04e
  40b0bb:	push   eax
  40b0bc:	lods   al,BYTE PTR ds:[esi]
  40b0bd:	mov    esi,esi
  40b0bf:	pop    esp
  40b0c0:	mov    ds:0xac9ef683,eax
  40b0c5:	add    DWORD PTR [ecx],eax
  40b0c7:	sbb    DWORD PTR [ebp+0x108ef62d],0x6c7edd49
  40b0d1:	mov    ecx,DWORD PTR [ecx]
  40b0d3:	cmc    
	...
  40b0e8:	cmp    BYTE PTR [esi],dl
  40b0ea:	mov    ah,0x99
  40b0ec:	xchg   esp,eax
  40b0ed:	mov    esi,esi
  40b0ef:	in     eax,0x2
  40b0f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f2:	sub    DWORD PTR [ebx+ebx*2-0x7d],0xc46c5ef6
  40b0fa:	cmc    
  40b0fb:	fadd   QWORD PTR [edi-0x538f9c84]
  40b101:	mov    esp,edx
  40b103:	repz xor DWORD PTR [ebx+0x7c87b4f7],ecx
  40b10a:	push   edi
  40b10b:	push   eax
  40b10c:	lods   al,BYTE PTR ds:[esi]
  40b10d:	mov    esi,esi
  40b10f:	je     0x40b0c4
  40b111:	xor    esi,0x26
  40b114:	mov    bh,0x36
  40b116:	xchg   ebp,eax
  40b117:	push   ds
  40b118:	lods   al,BYTE PTR ds:[esi]
  40b119:	mov    edi,DWORD PTR [ebp+eax*1+0x1f68b74]
  40b120:	inc    esp
  40b121:	sub    dh,dh
  40b123:	push   es
  40b124:	ins    BYTE PTR es:[edi],dx
  40b125:	inc    ecx
  40b126:	loope  0x40b11e
  40b128:	fwait
  40b129:	mov    esp,ecx
  40b12b:	xor    ecx,DWORD PTR gs:[ebx+0x6841eef6]
  40b132:	(bad)  
  40b133:	out    0x83,al
  40b135:	jl     0x40b0bf
  40b137:	jge    0x40b1b4
  40b139:	mov    esi,esi
  40b13b:	pushf  
  40b13c:	push   esp
  40b13d:	xor    esi,0xffffffce
  40b140:	mov    eax,0x4a009502
  40b145:	stos   BYTE PTR es:[edi],al
  40b146:	cmc    
  40b147:	mov    ch,0x35
  40b149:	mov    ds:0xfff5,al
	...
  40b15e:	add    BYTE PTR [eax],al
  40b160:	cmp    ch,BYTE PTR [edx+eax*1]
  40b163:	jmp    DWORD PTR [eax+0x28b9e098]
  40b169:	stos   BYTE PTR es:[edi],al
  40b16a:	cmc    
  40b16b:	inc    eax
  40b16d:	mov    al,ds:0xb8fafffd
  40b172:	push   edx
  40b173:	pushf  
  40b174:	sbb    ch,BYTE PTR [edx-0x47f2ba0b]
  40b17a:	ret    
  40b17b:	std    
  40b17c:	mov    edx,0xb975f5a9
  40b181:	mov    eax,0x9635887e
  40b186:	mov    edi,0x5b9619c2
  40b18b:	mov    ecx,ecx
  40b18d:	adc    eax,0x964ffccd
  40b192:	bound  ebx,QWORD PTR [edx+ebx*2]
  40b195:	sub    ecx,DWORD PTR [esi]
  40b197:	call   0x36ba75
  40b19c:	jl     0x40b1f9
  40b19e:	repnz push 0x4954d7
  40b1a4:	mov    edx,0x3449306b
  40b1a9:	xchg   esi,eax
  40b1aa:	cmc    
  40b1ab:	jne    0x40b18a
  40b1ad:	mov    ebp,0xa97afd7a
  40b1b2:	pusha  
  40b1b3:	adc    bh,al
  40b1b5:	push   eax
  40b1b6:	mul    BYTE PTR [edi-0x49]
  40b1b9:	xchg   ebp,eax
  40b1ba:	or     BYTE PTR [eax-0x17f1d346],al
  40b1c0:	add    eax,0xfff5b5
	...
  40b1d5:	add    BYTE PTR [eax],al
  40b1d7:	add    BYTE PTR [edx+0x40fff22c],bh
  40b1dd:	cwde   
  40b1de:	loopne 0x40b25f
  40b1e0:	or     al,0xab
  40b1e2:	cmc    
  40b1e3:	leave  
  40b1e4:	mov    WORD PTR ds:0xf6e1000e,?
  40b1ea:	and    eax,0x14474881
  40b1ef:	(bad)  
  40b1f0:	jnp    0x40b1d7
  40b1f2:	or     al,0x6a
  40b1f4:	xchg   ecx,eax
  40b1f5:	inc    edx
  40b1f6:	xchg   ecx,eax
  40b1f7:	pop    es
  40b1f8:	je     0x40b195
  40b1fa:	jae    0x40b1fb
  40b1fc:	arpl   WORD PTR [ecx+eax*8],ax
  40b1ff:	sti    
  40b200:	in     al,0x6f
  40b202:	or     eax,0x80f08c00
  40b207:	test   DWORD PTR [edx+0x1a],0x89345017
  40b20e:	pop    DWORD PTR [eax]
  40b210:	mov    WORD PTR [esi+0x4060744a],es
  40b216:	push   cs
  40b217:	add    DWORD PTR [ebx+edi*2-0x5a4bdb61],ecx
  40b21e:	mov    DWORD PTR [eax-0x74],0x12f780f8
  40b225:	loop   0x40b23d
  40b227:	push   eax
  40b228:	hlt    
  40b229:	inc    ecx
  40b22a:	ja     0x40b22b
  40b22c:	add    ebp,DWORD PTR [ebx]
  40b22e:	mov    ds:0x53d9fbff,al
  40b233:	push   eax
  40b234:	repz inc edi
  40b236:	add    ch,al
  40b238:	and    bh,BYTE PTR [esi+edx*1+0xff]
	...
  40b24f:	add    ah,dh
  40b251:	(bad)  
  40b252:	jb     0x40b253
  40b254:	fld    TBYTE PTR [ecx+0x27d3fb90]
  40b25a:	add    ch,al
  40b25c:	mov    ds:0xd5ff1704,eax
  40b261:	mov    esp,0x661000d
  40b266:	es or  eax,0x7e
  40b26a:	mov    eax,ds:0x175935ff
  40b26f:	jne    0x40b205
  40b271:	xchg   esp,eax
  40b272:	xlat   BYTE PTR ds:[ebx]
  40b273:	pop    ecx
  40b274:	hlt    
  40b275:	mov    bh,dl
  40b277:	mov    ecx,DWORD PTR [ecx-0x78]
  40b27a:	dec    eax
  40b27b:	add    al,0x8c
  40b27d:	ja     0x40b205
  40b27f:	lods   al,BYTE PTR ds:[esi]
  40b280:	mov    ebx,0xe40420e9
  40b285:	rcl    BYTE PTR [ebx+eax*8],1
  40b288:	jae    0x40b211
  40b28a:	xor    eax,0xac2f740c
  40b28f:	sbb    eax,0x20158863
  40b294:	pop    ebx
  40b295:	add    bh,al
  40b297:	sub    esi,DWORD PTR [eax]
  40b299:	sub    eax,0x53551d9f
  40b29e:	in     al,dx
  40b29f:	add    ebx,ecx
  40b2a1:	sbb    ebx,DWORD PTR [ebx+eax*4+0x1d7f6150]
  40b2a8:	xor    ebx,DWORD PTR [edx]
  40b2aa:	and    eax,0xfd87bc20
  40b2af:	repz and al,BYTE PTR [edx]
  40b2b2:	cld    
  40b2b3:	sub    eax,DWORD PTR [eax]
	...
  40b2c5:	add    BYTE PTR [eax],al
  40b2c7:	add    BYTE PTR [eax-0x78fc1ff1],ah
  40b2cd:	push   esp
  40b2ce:	out    dx,eax
  40b2cf:	xchg   BYTE PTR [eax],al
  40b2d1:	xchg   esi,eax
  40b2d2:	fild   WORD PTR [ebx]
  40b2d4:	retf   
  40b2d5:	rol    DWORD PTR [edi+0x4],1
  40b2d8:	mov    WORD PTR [edi+ebx*8+0x3f804944],ss
  40b2df:	add    eax,0x3c9948c
  40b2e4:	jbe    0x40b27a
  40b2e6:	cdq    
  40b2e7:	add    esp,DWORD PTR [esi-0x6c]
  40b2ea:	fs (bad) 
  40b2ec:	(bad)  
  40b2ee:	ins    BYTE PTR es:[edi],dx
  40b2ef:	xchg   eax,eax
  40b2f1:	jg     0x40b2fa
  40b2f3:	sbb    eax,0x1b75875c
  40b2f8:	mov    ebx,0x4a2bf401
  40b2fd:	wbinvd 
  40b2ff:	jmp    0x76094e93
  40b304:	mov    bh,BYTE PTR [ebp-0x42]
  40b307:	call   0xf7a1479b
  40b30c:	(bad)  
  40b30d:	aam    0x8
  40b30f:	(bad)  
  40b310:	and    dl,BYTE PTR [edi-0x77fe8920]
  40b316:	neg    BYTE PTR [ecx]
  40b318:	add    eax,0x9b648464
  40b31d:	jg     0x40b315
  40b31f:	mov    dh,0x1f
  40b321:	in     eax,0xe0
  40b323:	data16 loope 0x40b2ad
  40b326:	div    BYTE PTR [eax+0x12]
  40b329:	test   dh,bh
  40b32b:	sahf   
	...
  40b340:	jo     0x40b3be
  40b342:	aam    0x73
  40b344:	test   al,0x87
  40b346:	test   BYTE PTR [edi+ebp*2+0x7f],ah
  40b34a:	test   BYTE PTR [esi+0x1c46eeff],0x4f
  40b351:	xchg   edi,esi
  40b353:	cmp    al,0x7f
  40b355:	jg     0x40b34d
  40b357:	outs   dx,BYTE PTR ds:[esi]
  40b358:	add    BYTE PTR [ecx],0x5
  40b35b:	push   ecx
  40b35c:	push   esp
  40b35d:	sub    esi,esi
  40b35f:	pop    esi
  40b360:	push   es
  40b361:	adc    ebp,ebp
  40b363:	pop    esi
  40b364:	test   al,0x87
  40b366:	arpl   cx,bp
  40b368:	aaa    
  40b369:	ficom  WORD PTR [ebx-0x58]
  40b36c:	pop    DWORD PTR [edi-0x7867c644]
  40b372:	div    BYTE PTR [esi]
  40b374:	add    bl,BYTE PTR [ebx-0x789dd620]
  40b37a:	div    BYTE PTR [eax+0x12]
  40b37d:	js     0x40b37d
  40b37f:	push   ds
  40b380:	jo     0x40b37c
  40b382:	or     BYTE PTR [ecx-0x16b817fc],al
  40b388:	mov    al,ds:0xba00f941
  40b38d:	stos   BYTE PTR es:[edi],al
  40b38e:	cmc    
  40b38f:	(bad)  
  40b390:	cmp    BYTE PTR [edi-0x57bf5a20],dl
  40b396:	cmc    
  40b397:	mov    DWORD PTR [eax],ebp
  40b399:	mov    ebx,0x35b2fffd
  40b39e:	mul    BYTE PTR [edi+0x49]
  40b3a1:	dec    ebp
  40b3a2:	dec    ecx
	...
  40b3b7:	add    BYTE PTR [edx-0x1c],ah
  40b3ba:	clc    
  40b3bb:	not    DWORD PTR [edx-0x56]
  40b3be:	cmc    
  40b3bf:	jne    0x40b342
  40b3c1:	mov    edx,0xaa329d82
  40b3c6:	jg     0x40b34d
  40b3c8:	add    DWORD PTR [edx-0x6f30000b],esp
  40b3ce:	pusha  
  40b3cf:	jb     0x40b3a1
  40b3d1:	dec    edi
  40b3d2:	idiv   dh
  40b3d4:	mov    eax,0x22fffda0
  40b3d9:	stos   BYTE PTR es:[edi],al
  40b3da:	jnp    0x40b3e8
  40b3dc:	or     eax,0x12ff953a
  40b3e1:	sbb    BYTE PTR [eax+ebx*8+0x6af5a9ba],cl
  40b3e8:	xor    eax,0x745da43a
  40b3ed:	nop
  40b3ee:	cmc    
  40b3ef:	mov    ch,0xb5
  40b3f1:	mov    eax,ds:0x23b2fff5
  40b3f6:	add    ch,al
  40b3f8:	dec    ecx
  40b3f9:	or     eax,0x136cfff6
  40b3fe:	(bad)  
  40b400:	push   edx
  40b401:	test   eax,0xa149bd89
  40b406:	cmc    
  40b407:	push   ebp
  40b409:	adc    eax,0xbc708371
  40b40e:	std    
  40b40f:	push   DWORD PTR [edx+0x66707c90]
  40b415:	jmp    0x40b3f7
  40b417:	test   DWORD PTR [esi+ebx*4+0x11],0x0
	...
  40b42e:	add    BYTE PTR [eax],al
  40b430:	cmp    BYTE PTR [esi],cl
  40b432:	mov    ds:0x529e8c0f,al
  40b437:	(bad)  
  40b438:	cmp    DWORD PTR [ebx+0x7f02bf22],eax
  40b43e:	adc    edi,edi
  40b440:	fld    DWORD PTR [edi+0x6e9bff1b]
  40b446:	cdq    
  40b447:	pop    es
  40b448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b449:	mov    bh,BYTE PTR [ebx-0x1]
  40b44c:	mov    ebx,DWORD PTR [esi+0x59]
  40b44f:	call   0xff540acf
  40b454:	add    DWORD PTR [edx+eiz*1+0x13461b05],eax
  40b45b:	jmp    DWORD PTR [ecx]
  40b45d:	pop    ebx
  40b45e:	sbb    edi,edi
  40b460:	arpl   WORD PTR [esi],si
  40b462:	pop    ecx
  40b463:	in     al,0x63
  40b465:	cs adc edi,edi
  40b468:	fld    DWORD PTR [ebx+0x1e22c522]
  40b46e:	adc    edi,edi
  40b470:	stc    
  40b471:	inc    edx
  40b472:	sbb    edi,edi
  40b474:	cmp    ecx,DWORD PTR [esi]
  40b476:	cdq    
  40b477:	pop    es
  40b478:	and    al,0x1a
  40b47a:	js     0x40b47b
  40b47c:	sub    edi,esi
  40b47e:	pop    eax
  40b47f:	fcomp  QWORD PTR [ebx]
  40b481:	not    BYTE PTR [edx]
  40b483:	jmp    DWORD PTR [ecx-0x52add7d]
  40b489:	in     eax,0x12
  40b48b:	inc    DWORD PTR [ecx-0x39]
  40b48e:	sbb    bh,bh
  40b490:	add    edx,esi
  40b492:	cwde   
  40b493:	pop    es
	...
  40b4a8:	in     al,0xb5
  40b4aa:	ja     0x40b4ab
  40b4ac:	repz lds ebx,FWORD PTR [eax-0x1c]
  40b4b0:	jecxz  0x40b46f
  40b4b2:	adc    ch,al
  40b4b4:	xor    eax,0xdbff12e4
  40b4b9:	xchg   ebx,eax
  40b4ba:	push   esp
  40b4bb:	daa    
  40b4bc:	fild   DWORD PTR [edi+edx*1+0x1f2b2a2b]
  40b4c3:	sbb    al,bl
  40b4c5:	or     BYTE PTR ds:[edx],dl
  40b4c8:	mov    ebx,0x15761884
  40b4cd:	test   edi,esi
  40b4cf:	sbb    ecx,esp
  40b4d1:	neg    DWORD PTR [bx+di]
  40b4d4:	mov    ds:0x9b7c687b,eax
  40b4d9:	test   bh,ch
  40b4db:	dec    edi
  40b4dc:	mov    ah,0x7c
  40b4de:	xlat   BYTE PTR ds:[ebx]
  40b4df:	sbb    DWORD PTR [edx+eax*1+0x79],esi
  40b4e3:	sbb    DWORD PTR [ebx-0x7ccf627c],eax
  40b4e9:	test   bh,cl
  40b4eb:	sub    al,0xfe
  40b4ed:	sbb    eax,0x4a6b19b7
  40b4f2:	mov    al,0x11
  40b4f4:	arpl   WORD PTR [edi+eiz*4+0x1583878f],ax
  40b4fb:	or     al,0x64
  40b4fd:	pushf  
  40b4fe:	xchg   ebp,eax
  40b4ff:	sbb    DWORD PTR [ebx-0x7c],ecx
  40b502:	push   ebp
  40b503:	adc    al,0x3b
  40b505:	test   BYTE PTR [edi-0x70e21dd4],al
  40b50b:	sbb    DWORD PTR [eax],eax
	...
  40b51d:	add    BYTE PTR [eax],al
  40b51f:	add    BYTE PTR [ebx],dh
  40b521:	fiadd  DWORD PTR [edi+0x7f82872b]
  40b527:	sbb    DWORD PTR [ebx],esp
  40b529:	or     ah,BYTE PTR [esp+ebp*1-0x62]
  40b52d:	sbb    eax,esp
  40b52f:	add    eax,DWORD PTR [ebp+0x57]
  40b532:	in     al,0x3
  40b534:	popa   
  40b535:	cmovl  eax,DWORD PTR [ebp+0x3ca80c8]
  40b53c:	mov    ds:0x6c8b8f4e,ax
  40b542:	fdiv   DWORD PTR [ecx-0x15]
  40b545:	or     DWORD PTR [ecx],0x60
  40b548:	and    eax,DWORD PTR [eax-0x2add499f]
  40b54e:	or     BYTE PTR [esi],ah
  40b550:	ret    
  40b551:	mov    ebp,0x838fa83f
  40b556:	jl     0x40b539
  40b558:	ja     0x40b5ae
  40b55a:	hlt    
  40b55b:	push   cs
  40b55c:	xchg   ebp,eax
  40b55d:	in     al,dx
  40b55e:	jge    0x40b504
  40b560:	into   
  40b561:	sub    DWORD PTR [esi-0x15],0xffffff8f
  40b565:	xchg   esp,eax
  40b566:	mov    dh,dh
  40b568:	adc    bl,BYTE PTR [eax+eiz*8-0x97c7cc1]
  40b56f:	out    0x2,al
  40b571:	xor    dh,0x54
  40b574:	cwde   
  40b575:	ins    BYTE PTR es:[edi],dx
  40b576:	jb     0x40b5f7
  40b578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b579:	add    eax,0xffffffab
  40b57c:	jnp    0x40b501
  40b57e:	pop    ebp
  40b57f:	jb     0x40b52c
  40b581:	pop    ss
  40b582:	int    0xbd
	...
  40b598:	sbb    eax,0x31e962ea
  40b59d:	mov    ds:0x6c8834f5,eax
  40b5a2:	adc    al,0x7f
  40b5a4:	je     0x40b529
  40b5a6:	and    BYTE PTR [esp+eiz*4],0xf
  40b5aa:	cmp    al,0x57
  40b5ac:	push   edi
  40b5ad:	aam    0x8
  40b5af:	bound  esp,QWORD PTR [edx+0x55]
  40b5b2:	inc    ecx
  40b5b3:	sub    BYTE PTR [eax+0x1be93614],cl
  40b5b9:	hlt    
  40b5ba:	pusha  
  40b5bb:	lods   al,BYTE PTR ds:[esi]
  40b5bc:	fcmovbe st,st(3)
  40b5be:	or     BYTE PTR [edi],dl
  40b5c0:	push   0x8fe98bbe
  40b5c5:	in     al,0x60
  40b5c7:	mov    al,ds:0xbe08d442
  40b5cc:	mov    bh,0xb2
  40b5ce:	mov    ebp,ecx
  40b5d0:	(bad)  
  40b5d1:	fiadd  WORD PTR [ecx]
  40b5d3:	add    BYTE PTR [ebp-0x78f4f5ee],ah
  40b5d9:	adc    esp,DWORD PTR [eax]
  40b5db:	push   esi
  40b5dc:	dec    ebp
  40b5dd:	sub    ch,BYTE PTR [eax-0x26d05501]
  40b5e3:	pop    ebp
  40b5e4:	and    al,0x97
  40b5e6:	pop    eax
  40b5e7:	call   0x36c132
  40b5ec:	add    eax,0xbafff62f
  40b5f1:	(bad)  [eax-0x34]
  40b5f4:	call   0xaa90ac4e
  40b5f9:	adc    BYTE PTR [esi],cl
  40b5fb:	call   0x40b600
	...
  40b610:	sbb    edx,esi
  40b612:	cmc    
  40b613:	dec    DWORD PTR [ebp-0x55006eec]
  40b619:	scas   al,BYTE PTR es:[edi]
  40b61a:	pop    es
  40b61b:	inc    esi
  40b61c:	cmc    
  40b61d:	push   0xfffffff6
  40b61f:	je     0x40b680
  40b621:	inc    ebx
  40b622:	repnz xor esp,DWORD PTR ds:0x4afff5e0
  40b629:	stos   BYTE PTR es:[edi],al
  40b62a:	cli    
  40b62b:	scas   al,BYTE PTR es:[edi]
  40b62c:	lea    eax,[ecx+0x241a9f7d]
  40b632:	bnd jmp DWORD PTR [eax-0x2f1c1f70]
  40b639:	test   eax,0xcf8b5ff5
  40b63e:	retf   0x3504
  40b641:	inc    ebp
  40b642:	sub    esp,0xffffffa6
  40b645:	aam    0xf4
  40b647:	push   DWORD PTR [eax]
  40b649:	call   0x92f2:0xae1d75f5
  40b650:	call   0x7ba9:0xa9457fa9
  40b657:	cld    
  40b658:	stos   BYTE PTR es:[edi],al
  40b659:	and    ecx,DWORD PTR [esi]
  40b65b:	call   0x36bc2f
  40b660:	mov    esi,?
  40b662:	mov    edi,0x98ab870b
  40b667:	inc    ecx
  40b668:	setne  BYTE PTR [esp+esi*2]
  40b66c:	test   eax,0xf4fb97c2
  40b671:	cs jb  0x40b673
	...
  40b688:	fistp  DWORD PTR [ebx]
  40b68a:	pop    ds
  40b68b:	jne    0x40b60d
  40b68d:	mov    edx,0xa25cfb97
  40b692:	xchg   edi,eax
  40b693:	pop    es
  40b694:	mov    ah,0xcd
  40b696:	jp     0x40b697
  40b698:	mov    ebx,0x804d8345
  40b69d:	out    dx,al
  40b69e:	sar    edi,cl
  40b6a0:	and    BYTE PTR [ebp-0x1c6e1848],al
  40b6a6:	sbb    eax,0x21ab67ff
  40b6ab:	adc    al,0xf
  40b6ad:	stc    
  40b6ae:	cld    
  40b6af:	(bad)  
  40b6b0:	inc    DWORD PTR [ebx+0x6a9c4583]
  40b6b6:	cdq    
  40b6b7:	sti    
  40b6b8:	or     ebp,DWORD PTR [ebx-0x7d]
  40b6bb:	ret    0x6d67
  40b6be:	jecxz  0x40b67f
  40b6c0:	push   ebp
  40b6c1:	sub    eax,0xf6b9000e
  40b6c6:	sub    eax,0x1f5fe1ff
  40b6cb:	jne    0x40b651
  40b6cd:	and    ecx,DWORD PTR [edi+0x1f224b92]
  40b6d3:	jne    0x40b665
  40b6d5:	mov    ebx,0x1384751d
  40b6da:	not    DWORD PTR [edx-0x3dbae5cd]
  40b6e0:	xchg   esp,eax
  40b6e1:	imul   edi,DWORD PTR [ecx+0x35ee308a],0xffffffc0
  40b6e8:	ret    0xb9aa
  40b6eb:	add    BYTE PTR [eax],0x0
	...
  40b6fe:	add    BYTE PTR [eax],al
  40b700:	xchg   ecx,eax
  40b701:	xchg   esp,eax
  40b702:	test   DWORD PTR [ebx],0x9862a680
  40b708:	xchg   edi,eax
  40b709:	xchg   esp,eax
  40b70a:	rol    DWORD PTR [edi],cl
  40b70c:	ud0    ebp,edi
  40b70f:	add    edi,DWORD PTR [eax-0x66]
  40b712:	bound  ebx,QWORD PTR [eax+0xcbc947f]
  40b718:	mov    bh,0x54
  40b71a:	fwait
  40b71b:	mov    dh,0x39
  40b71d:	dec    ebx
  40b71e:	and    dh,bl
  40b720:	ror    DWORD PTR ds:0x740f07a5,cl
  40b726:	out    dx,eax
  40b727:	add    BYTE PTR [ecx-0x70],0xdf
  40b72b:	(bad)  
  40b72c:	(bad)  
  40b72d:	lea    ebx,[edi]
  40b72f:	pop    DWORD PTR [ebp+ebp*4-0x1db545e1]
  40b736:	cmp    BYTE PTR [ecx+0x7c],al
  40b739:	xchg   esp,eax
  40b73a:	push   0xffffffc0
  40b73c:	jg     0x40b753
  40b73e:	add    dh,bh
  40b740:	push   cs
  40b741:	push   ebx
  40b743:	add    eax,DWORD PTR [eax]
  40b745:	cdq    
  40b746:	cli    
  40b747:	inc    ebx
  40b748:	clc    
  40b749:	lea    ecx,[edx]
  40b74b:	inc    esp
  40b74c:	xlat   BYTE PTR ds:[ebx]
  40b74d:	fbld   TBYTE PTR ds:0xdfa54e4b
  40b753:	call   0x87e379e
  40b758:	adc    ebx,edx
  40b75a:	lahf   
  40b75b:	adc    ecx,0xd914eb54
  40b761:	push   esp
  40b762:	cwde   
  40b763:	call   0x0:0x0
	...
  40b776:	add    BYTE PTR [eax],al
  40b778:	and    al,BYTE PTR [eax-0x25eae769]
  40b77e:	mov    ds:0x4658b989,eax
  40b783:	cmp    ecx,edx
  40b785:	aad    0xdf
  40b787:	pop    edx
  40b788:	xchg   edi,eax
  40b789:	xchg   esp,eax
  40b78a:	fild   WORD PTR [ebx]
  40b78c:	pop    ds
  40b78d:	cmp    DWORD PTR [ecx],ecx
  40b78f:	bound  ecx,QWORD PTR [ebx]
  40b791:	cwde   
  40b792:	sbb    DWORD PTR [esp+eax*4],0x4b74ad83
  40b799:	jo     0x40b7f4
  40b79b:	pop    esi
  40b79c:	adc    eax,DWORD PTR [eax-0xa]
  40b79f:	fdivr  QWORD PTR [ebx-0x66778194]
  40b7a5:	jg     0x40b79d
  40b7a7:	mov    esp,0x56386cab
  40b7ac:	jns    0x40b82d
  40b7ae:	idiv   BYTE PTR [ebx+edx*4+0xd294c0f]
  40b7b5:	fcmove st,st(0)
  40b7b7:	add    ah,BYTE PTR [ecx-0x2dee36f7]
  40b7bd:	not    BYTE PTR es:[esi]
  40b7c0:	pop    es
  40b7c1:	fcmove st,st(4)
  40b7c3:	or     eax,0x74ccda07
  40b7c8:	sbb    esi,DWORD PTR [eax-0x7e]
  40b7cb:	jl     0x40b830
  40b7cd:	cmp    eax,0x948fe919
  40b7d2:	stc    
  40b7d3:	inc    ebp
  40b7d4:	cmp    bl,BYTE PTR [ebx+0x54]
  40b7d7:	sub    BYTE PTR [eax+0xe9023d],dl
	...
  40b7ed:	add    BYTE PTR [eax],al
  40b7ef:	add    BYTE PTR [edi+0x48df994],cl
  40b7f5:	or     DWORD PTR [ecx],eax
  40b7f7:	bound  ecx,QWORD PTR [edx-0x75]
  40b7fa:	stc    
  40b7fb:	lea    edx,[edx]
  40b7fd:	fld1   
  40b7ff:	sbb    DWORD PTR [ecx+0x9],edi
  40b802:	leave  
  40b803:	mov    dh,0xa
  40b805:	push   ebx
  40b806:	loope  0x40b80f
  40b808:	out    dx,eax
  40b809:	jg     0x40b801
  40b80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b80c:	sbb    dl,BYTE PTR [ebx-0x1f]
  40b80f:	mov    DWORD PTR [ecx+0x1295f67f],esi
  40b815:	or     ecx,edi
  40b817:	pop    esp
  40b818:	sbb    dl,BYTE PTR [edi-0x50]
  40b81b:	add    BYTE PTR [ebp-0x6d],al
  40b81e:	or     BYTE PTR [eax],al
  40b820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b821:	fild   WORD PTR [ebx+0xda0575]
  40b827:	add    BYTE PTR ds:0xdfa4f993,ah
  40b82d:	xchg   ecx,eax
  40b82e:	add    DWORD PTR [ebp-0x43],0x43
  40b832:	out    dx,al
  40b833:	push   0x8b089307
  40b838:	fadd   DWORD PTR [edx-0x2e36827d]
  40b83e:	in     eax,0x3
  40b840:	fisub  WORD PTR [edi-0x67b19884]
  40b846:	add    DWORD PTR [ebp+0x4d],0x43
  40b84a:	pop    esp
  40b84b:	push   esi
  40b84c:	popf   
  40b84d:	call   0x8cf:0x13b500ac
	...
  40b868:	repnz mov esi,ebp
  40b86b:	jne    0x40b81d
  40b86d:	xchg   edx,eax
  40b86e:	mov    esi,0xf1149246
  40b873:	or     BYTE PTR [edx],bl
  40b875:	xchg   ebp,eax
  40b876:	and    eax,esi
  40b878:	into   
  40b879:	or     eax,0x2b93d106
  40b87e:	imul   BYTE PTR [ecx+0x75]
  40b881:	and    dh,dh
  40b883:	imul   esi,DWORD PTR [ebp+0x3c],0x207575f7
  40b88a:	imul   BYTE PTR [ecx+0x65]
  40b88d:	call   0xc001:0x927581b6
  40b894:	cdq    
  40b895:	pop    edi
  40b896:	inc    esi
  40b897:	push   eax
  40b898:	dec    ebp
  40b899:	pop    ss
  40b89a:	lahf   
  40b89b:	jmp    DWORD PTR [edx]
  40b89d:	(bad)  
  40b89e:	rcr    BYTE PTR [ecx-0x61],1
  40b8a1:	cwde   
  40b8a2:	bound  eax,QWORD PTR [eax]
  40b8a4:	test   BYTE PTR [ebp+0x5c],al
  40b8a7:	dec    DWORD PTR [eax+eiz*4-0x6e739604]
  40b8ae:	or     al,0xe8
  40b8b0:	or     ebp,ebp
  40b8b2:	or     al,0x0
  40b8b4:	xchg   edi,eax
  40b8b5:	sub    edx,DWORD PTR [eax-0x49ec40f9]
  40b8bb:	xchg   ebp,eax
  40b8bc:	adc    ebp,edi
  40b8be:	aad    0xda
  40b8c0:	pop    ss
  40b8c1:	stos   DWORD PTR es:[edi],eax
  40b8c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c3:	pop    esi
  40b8c4:	(bad)  
  40b8c5:	les    ecx,FWORD PTR [esi+0x10]
  40b8c8:	mov    WORD PTR [eax+0x77],es
  40b8cb:	in     al,dx
	...
  40b8e0:	(bad)  
  40b8e2:	sbb    al,0x57
  40b8e4:	aas    
  40b8e5:	mov    ds:0x6f59ff25,al
  40b8ea:	sbb    esi,DWORD PTR [ebp-0x7c]
  40b8ed:	shl    DWORD PTR [ecx],cl
  40b8ef:	nop
  40b8f0:	shr    DWORD PTR [esi-0x7cbe0144],cl
  40b8f6:	adc    cl,BYTE PTR [esi+ebx*1-0x4b74e661]
  40b8fd:	inc    ebx
  40b8fe:	psubb  mm0,QWORD PTR [edi+0x194690ab]
  40b905:	xor    DWORD PTR [esi],ebx
  40b907:	push   eax
  40b908:	mov    ds:0x21fef608,eax
  40b90d:	jae    0x40b921
  40b90f:	stos   DWORD PTR es:[edi],eax
  40b910:	xchg   ecx,eax
  40b911:	outs   dx,BYTE PTR ds:[esi]
  40b912:	sbb    ecx,DWORD PTR [ecx+0x458977d1]
  40b918:	jl     0x40b8d5
  40b91a:	sbb    DWORD PTR [ebp-0x78],esi
  40b91d:	xchg   cx,ax
  40b91f:	pop    es
  40b920:	fs add al,0x19
  40b923:	jmp    FWORD PTR [ebx+0x4]
  40b926:	shl    edi,0x63
  40b929:	enter  0xff1c,0xe1
  40b92d:	inc    ebx
  40b92e:	sbb    esi,DWORD PTR [ebp+0x58]
  40b931:	cs xchg ecx,eax
  40b933:	sti    
  40b934:	xor    al,0x94
  40b936:	lock adc DWORD PTR [ebx+0x7d],eax
  40b93a:	jnp    0x40b967
  40b93c:	cmp    eax,DWORD PTR [edi]
  40b93e:	pushf  
  40b93f:	sbb    edx,DWORD PTR [esi+0x27]
  40b942:	xchg   DWORD PTR [edx],edx
	...
  40b958:	sub    eax,DWORD PTR [edi]
  40b95a:	mov    BYTE PTR [ebx],bl
  40b95c:	ds daa 
  40b95e:	ja     0x40b972
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	xchg   esp,eax
  40b962:	push   ss
  40b963:	adc    ebx,DWORD PTR [ecx+0x189d878c]
  40b969:	jge    0x40b9da
  40b96b:	jle    0x40b93c
  40b96d:	fdiv   DWORD PTR [esi-0x207431c4]
  40b973:	mov    eax,0x90637006
  40b978:	xchg   edi,eax
  40b979:	xchg   esi,eax
  40b97a:	mov    cl,0xe4
  40b97c:	loop   0x40b984
  40b97e:	rcl    BYTE PTR [edx],1
  40b980:	popa   
  40b981:	mov    WORD PTR [edi-0x46],es
  40b984:	add    edi,DWORD PTR [ebp+0x27]
  40b987:	adc    al,BYTE PTR [ecx-0x5c]
  40b98a:	cs cwde 
  40b98c:	mov    ebp,DWORD PTR [edi+eax*2+0x10]
  40b990:	mov    ebx,0x83981f7c
  40b995:	jge    0x40b934
  40b997:	sti    
  40b998:	mov    bl,0x37
  40b99a:	or     eax,0x7d7ca312
  40b99f:	repz call 0xe77d:0x461be806
  40b9a7:	adc    DWORD PTR [edi],edx
  40b9a9:	loop   0x40b99e
  40b9ab:	jp     0x40b93b
  40b9ad:	jnp    0x40ba0c
  40b9af:	hlt    
  40b9b0:	jp     0x40b9b4
  40b9b2:	call   0xc7babed2
  40b9b7:	adc    DWORD PTR [edi],ecx
  40b9b9:	cli    
  40b9ba:	sti    
  40b9bb:	add    al,0x0
	...
  40b9cd:	add    BYTE PTR [eax],al
  40b9cf:	add    dl,bl
  40b9d1:	mov    ds:0x7b8b97b6,al
  40b9d6:	or     DWORD PTR [eax+edx*2],edi
  40b9d9:	je     0x40ba4c
  40b9db:	lods   al,BYTE PTR ds:[esi]
  40b9dc:	popf   
  40b9dd:	jnp    0x40b9d5
  40b9df:	sbb    al,0x38
  40b9e1:	jnp    0x40ba5f
  40b9e3:	icebp  
  40b9e4:	xchg   edi,eax
  40b9e5:	jmp    0x7bde50dd
  40b9ea:	jl     0x40b9e5
  40b9ec:	or     DWORD PTR [ebp+esi*8-0x778bd804],esp
  40b9f3:	pop    ecx
  40b9f4:	jge    0x40ba71
  40b9f6:	idiv   ah
  40b9f8:	pop    ds
  40b9f9:	jnp    0x40ba77
  40b9fb:	loope  0x40b9a4
  40b9fd:	xchg   BYTE PTR [esi-0x34b2629a],al
  40ba03:	stc    
  40ba04:	(bad)  
  40ba05:	loope  0x40b988
  40ba07:	inc    ebp
  40ba08:	popf   
  40ba09:	add    DWORD PTR ds:0x7c7b8ec3,eax
  40ba0f:	icebp  
  40ba10:	xchg   esi,esi
  40ba12:	cwde   
  40ba13:	ds jge 0x40ba91
  40ba16:	jl     0x40b9fd
  40ba18:	jl     0x40ba1b
  40ba1a:	add    DWORD PTR [ecx+0x75],eax
  40ba1d:	jp     0x40ba15
  40ba1f:	es inc ecx
  40ba21:	loope  0x40ba3b
  40ba23:	jo     0x40b9b7
  40ba25:	jnp    0x40baa3
  40ba27:	in     eax,0x9c
  40ba29:	add    DWORD PTR [ecx],eax
  40ba2b:	add    DWORD PTR [ebp+0x7a],esp
  40ba2e:	test   BYTE PTR [esi],0x21
  40ba31:	loope  0x40ba4f
  40ba33:	jo     0x40ba35
	...
  40ba45:	add    BYTE PTR [eax],al
  40ba47:	add    BYTE PTR [edx+0x7ce57c7b],dl
  40ba4d:	add    DWORD PTR [ecx],eax
  40ba4f:	add    ebp,edx
  40ba51:	jp     0x40ba49
  40ba53:	out    0x0,al
  40ba55:	loop   0x40ba67
  40ba57:	jo     0x40b9ea
  40ba59:	dec    ebp
  40ba5a:	retf   
  40ba5b:	std    
  40ba5c:	(bad)  
  40ba5d:	loope  0x40b9e0
  40ba5f:	mov    ebp,0xe55010
  40ba64:	cmp    DWORD PTR ds:0x194175f7,0x9
  40ba6b:	call   DWORD PTR [eax-0x1ae61188]
  40ba71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba72:	cmc    
  40ba73:	jmp    DWORD PTR [eax+0x3d75f77c]
  40ba79:	lahf   
  40ba7a:	or     BYTE PTR [edi-0xf7e5be6],0xc
  40ba81:	dec    eax
  40ba82:	or     DWORD PTR [eax],eax
  40ba84:	xor    eax,0xa6144bf8
  40ba89:	dec    edi
  40ba8a:	div    BYTE PTR [eax+eiz*1-0x62]
  40ba8e:	ds add ebp,esi
  40ba91:	xchg   esi,eax
  40ba92:	int    0x45
  40ba94:	imul   edx,DWORD PTR [edi-0x61afff8],0xa435fc4b
  40ba9e:	jnp    0x40bab4
  40baa0:	pop    edx
  40baa1:	and    al,BYTE PTR [esi]
  40baa3:	jmp    DWORD PTR [eax]
  40baa5:	jg     0x40ba95
  40baa7:	repnz fwait
  40baa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baaa:	cmc    
  40baab:	mov    eax,DWORD PTR [eax]
	...
  40babd:	add    BYTE PTR [eax],al
  40babf:	add    BYTE PTR [ebp-0x4a038bf0],bl
  40bac5:	and    ch,BYTE PTR [ebx]
  40bac7:	push   0x492a93
  40bacc:	call   0x915:0xb5e8f222
  40bad3:	add    BYTE PTR [esi-0x2f2842a],ch
  40bad9:	mov    ah,0x53
  40badb:	inc    ecx
  40badc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40badd:	mov    ds:0xa48dfc7b,eax
  40bae2:	mov    BYTE PTR [eax],al
  40bae4:	jne    0x40bae5
  40bae6:	dec    ebx
  40bae7:	in     al,dx
  40bae8:	pop    esi
  40bae9:	xchg   edx,eax
  40baea:	int    0x45
  40baec:	dec    ecx
  40baed:	xchg   ecx,eax
  40baee:	or     BYTE PTR [eax],al
  40baf0:	mov    WORD PTR [ebx-0x75],gs
  40baf3:	jge    0x40bb6d
  40baf5:	ins    BYTE PTR es:[edi],dx
  40baf6:	sahf   
  40baf7:	pop    ss
  40baf8:	hlt    
  40baf9:	ins    BYTE PTR es:[edi],dx
  40bafa:	or     ch,bh
  40bafc:	sbb    bh,BYTE PTR [ebx]
  40bafe:	nop
  40baff:	or     esp,DWORD PTR [ecx+eiz*2+0x7d]
  40bb03:	dec    DWORD PTR [ebx+0x2b]
  40bb06:	nop
  40bb07:	sti    
  40bb08:	inc    ebx
  40bb09:	cdq    
  40bb0a:	or     al,ch
  40bb0c:	sar    ah,0x5
  40bb0f:	jmp    DWORD PTR ds:0x8c000cf7
  40bb15:	idiv   BYTE PTR [edi+0xa540f13]
  40bb1b:	jne    0x40baae
  40bb1d:	and    al,0x8f
  40bb1f:	add    BYTE PTR [ebx+ebp*2+0x454f],cl
	...
  40bb36:	add    BYTE PTR [eax],al
  40bb38:	add    al,0x6c
  40bb3a:	or     al,BYTE PTR [eax]
  40bb3c:	mov    WORD PTR [edx+0x6b8cf3bf],gs
  40bb42:	or     al,BYTE PTR [eax]
  40bb44:	retf   
  40bb45:	sub    BYTE PTR [edx],bl
  40bb47:	add    BYTE PTR [ebx+ebp*2-0x44b672f6],cl
  40bb4e:	mov    esp,0xbcbf518c
  40bb53:	mov    WORD PTR [ecx-0x3d],cs
  40bb56:	mov    esp,0x75f41fe
  40bb5b:	jne    0x40baf1
  40bb5d:	mov    ds:0x9abbfe2b,eax
  40bb62:	mov    DWORD PTR [ebp-0x60],edi
  40bb65:	imul   ebx,DWORD PTR [esi+0x2090f32],0x0
  40bb6c:	sbb    BYTE PTR [eax-0x75],ah
  40bb6f:	jge    0x40bb11
  40bb71:	imul   edx,DWORD PTR [ecx+0x1a010f05],0x0
  40bb78:	add    BYTE PTR [ebp+0x7],cl
  40bb7b:	jne    0x40bb01
  40bb7d:	xchg   esp,eax
  40bb7e:	out    dx,al
  40bb7f:	cwde   
  40bb80:	xchg   DWORD PTR [ebx+esi*8+0x74],ebp
  40bb84:	jae    0x40bbff
  40bb86:	fistp  WORD PTR [eax+0x5d795f]
  40bb8c:	je     0x40bb1a
  40bb8e:	push   eax
  40bb8f:	push   cs
  40bb90:	pop    ebx
  40bb91:	jns    0x40bbd0
  40bb93:	adc    al,0x53
  40bb95:	(bad)  
  40bb96:	jmp    0x40bbb3
  40bb98:	dec    ecx
  40bb99:	and    al,0xa7
  40bb9b:	push   cs
	...
  40bbb0:	inc    ebx
  40bbb1:	jmp    DWORD PTR [edi-0x68dad1e5]
  40bbb7:	push   cs
  40bbb8:	xor    edi,edi
  40bbba:	xchg   ebx,eax
  40bbbb:	sbb    eax,DWORD PTR [esi+0x25]
  40bbbe:	xchg   DWORD PTR [esi],ecx
  40bbc0:	and    edi,edi
  40bbc2:	outs   dx,DWORD PTR ds:[esi]
  40bbc3:	sbb    edi,DWORD PTR [esi]
  40bbc5:	and    eax,0x8dc30e77
  40bbca:	jle    0x40bbca
  40bbcc:	adc    bh,ah
  40bbce:	pushw  cs
  40bbd0:	add    edx,DWORD PTR ds:0x8c1fed
  40bbd6:	neg    BYTE PTR [ecx-0x2a860d]
  40bbdc:	repz in eax,dx
  40bbde:	outs   dx,DWORD PTR ds:[esi]
  40bbdf:	push   cs
  40bbe0:	jecxz  0x40bbcf
  40bbe2:	fisttp WORD PTR [esi]
  40bbe4:	popa   
  40bbe5:	mov    BYTE PTR [edi-0x5d],dl
  40bbe8:	add    edi,DWORD PTR [ecx+0x3f]
  40bbeb:	cdq    
  40bbec:	retf   
  40bbed:	jns    0x40bbac
  40bbef:	jmp    FWORD PTR [ebx-0x44f1901f]
  40bbf5:	js     0x40bb94
  40bbf7:	shld   DWORD PTR [esi],edx,0x73
  40bbfb:	push   cs
  40bbfc:	stos   DWORD PTR es:[edi],eax
  40bbfd:	leave  
  40bbfe:	jmp    0x9b0d:0x4d0f9315
  40bc05:	js     0x40bb9e
  40bc07:	lods   eax,DWORD PTR ds:[esi]
  40bc08:	les    edx,FWORD PTR [ebp+0x9]
  40bc0b:	(bad)  [edi+0xdfd81e1]
  40bc11:	push   ecx
  40bc12:	in     eax,dx
  40bc13:	aas    
	...
  40bc28:	mov    DWORD PTR [ecx],eax
  40bc2a:	add    ecx,edx
  40bc2c:	and    eax,0xe7d6f60b
  40bc31:	sar    esp,1
  40bc33:	push   0x13
  40bc35:	test   BYTE PTR [ecx],bl
  40bc37:	cmp    dl,BYTE PTR [esi+0x40]
  40bc3a:	or     cl,ch
  40bc3c:	(bad)  
  40bc3d:	xchg   esp,eax
  40bc3e:	push   esi
  40bc3f:	mov    al,ds:0xae088cce
  40bc44:	sbb    edx,DWORD PTR [eax+0x77bb14e0]
  40bc4a:	mul    BYTE PTR [esi-0x16f77fb5]
  40bc50:	(bad)  
  40bc51:	xchg   esp,eax
  40bc52:	and    DWORD PTR [eax+edx*4],0xffffffe4
  40bc56:	cmc    
  40bc57:	cld    
  40bc58:	pop    ss
  40bc59:	jo     0x40bc4f
  40bc5b:	ins    BYTE PTR es:[edi],dx
  40bc5c:	xor    DWORD PTR [edi-0x80],0x74139c2c
  40bc63:	jno    0x40bbed
  40bc65:	add    BYTE PTR ds:0xb7c0b6a,al
  40bc6b:	fisttp DWORD PTR [ecx-0x6daa8bed]
  40bc71:	inc    BYTE PTR [edx]
  40bc73:	xchg   ecx,eax
  40bc74:	(bad)  
  40bc75:	xchg   esp,eax
  40bc76:	or     cl,ch
  40bc78:	sub    DWORD PTR [ebp-0x35],ecx
  40bc7b:	icebp  
  40bc7c:	(bad)
  40bc80:	add    BYTE PTR [edi+0x7c],dh
  40bc83:	loope  0x40bc2c
  40bc85:	bound  eax,QWORD PTR [esi+eiz*1+0x21741389]
	...
  40bca0:	mov    BYTE PTR [eax],al
  40bca2:	or     eax,0x3004fe2
  40bca7:	push   ecx
  40bca8:	(bad)  
  40bca9:	xchg   esp,eax
  40bcaa:	or     BYTE PTR [eax],al
  40bcac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcad:	sub    ecx,eax
  40bcaf:	ret    0x939d
  40bcb2:	mov    DWORD PTR [ebp-0x7f],edi
  40bcb5:	mov    ?,WORD PTR [edx+0x1f]
  40bcb8:	loopne 0x40bd09
  40bcba:	(bad)  
  40bcbb:	push   eax
  40bcbc:	fild   QWORD PTR [eax-0x9]
  40bcbf:	jne    0x40bd3e
  40bcc1:	fwait
  40bcc2:	mov    es,WORD PTR es:[edx-0x78]
  40bcc6:	add    DWORD PTR [ebp+0x3d],0x43
  40bcca:	div    DWORD PTR [ebp+0x5d]
  40bccd:	fwait
  40bcce:	xchg   esi,eax
  40bccf:	lea    edx,[edx]
  40bcd1:	mov    BYTE PTR [edi+0x45],bh
  40bcd4:	pop    ecx
  40bcd5:	pushf  
  40bcd6:	adc    ecx,DWORD PTR [ebp-0xa77798]
  40bcdc:	cwde   
  40bcdd:	js     0x40bccd
  40bcdf:	lea    esp,[eax+0x7889f588]
  40bce5:	lods   al,BYTE PTR ds:[esi]
  40bce6:	add    DWORD PTR [ebp-0x3],0x42
  40bcea:	pusha  
  40bceb:	add    al,0x12
  40bced:	push   ds
  40bcee:	push   cs
  40bcef:	call   0x36b619
  40bcf4:	jo     0x40bd44
  40bcf6:	(bad)  
  40bcf7:	push   eax
  40bcf8:	jb     0x40bd18
  40bcfa:	push   cs
  40bcfb:	call   0x364ab6
  40bd00:	pushw  es
  40bd02:	jmp    0x0:0x1
	...
  40bd15:	add    BYTE PTR [eax],al
  40bd17:	add    al,cl
  40bd19:	push   0x433d4585
  40bd1e:	div    DWORD PTR [ebp+0x51]
  40bd21:	mov    BYTE PTR [ebx+0xc],bh
  40bd24:	xchg   edx,eax
  40bd25:	push   ds
  40bd26:	push   cs
  40bd27:	call   0x36433f
  40bd2c:	pusha  
  40bd2d:	dec    esi
  40bd2e:	(bad)  
  40bd2f:	push   eax
  40bd30:	jb     0x40bd50
  40bd32:	push   cs
  40bd33:	call   0x364a7a
  40bd38:	mov    edx,gs
  40bd3a:	xchg   bh,dh
  40bd3c:	mov    WORD PTR [eax],fs
  40bd3e:	lock mov bh,0x8c
  40bd41:	ins    DWORD PTR es:[edi],dx
  40bd42:	or     al,BYTE PTR [eax]
  40bd44:	xor    al,ah
  40bd46:	inc    edi
  40bd47:	or     BYTE PTR [eax+esi*8+0x66dcf7ce],cl
  40bd4e:	pushf  
  40bd4f:	sti    
  40bd50:	jnp    0x40bd2b
  40bd52:	lock (bad) 
  40bd54:	stc    
  40bd55:	adc    DWORD PTR [edx],0xffffff80
  40bd58:	imul   ebx,DWORD PTR [edi+0x2],0xd63e183
  40bd5f:	jne    0x40bce7
  40bd61:	adc    ecx,DWORD PTR ds:0xa06b8c00
  40bd67:	enter  0x744e,0xa
  40bd6b:	(bad)  
  40bd6c:	leave  
  40bd6d:	inc    ebx
  40bd6e:	mov    ebp,0x1283c1fe
  40bd73:	push   cs
  40bd74:	add    DWORD PTR [edi],edx
  40bd76:	add    cl,BYTE PTR [ebx+0x6151c]
	...
  40bd90:	mov    WORD PTR [ebx+0x3],gs
  40bd93:	jne    0x40bd19
  40bd95:	and    eax,DWORD PTR [eax-0x72]
  40bd98:	adc    esi,edi
  40bd9a:	lds    eax,FWORD PTR [eax+eax*1+0x79]
  40bd9e:	or     ecx,ebp
  40bda0:	sti    
  40bda1:	imul   ecx,DWORD PTR [edx],0x0
  40bda4:	(bad)  
  40bda6:	push   cs
  40bda7:	push   es
  40bda8:	jle    0x40bd39
  40bdaa:	outs   dx,DWORD PTR ds:[esi]
  40bdab:	inc    ebp
  40bdac:	in     al,0x3b
  40bdae:	add    esi,DWORD PTR [ebp-0x6c]
  40bdb1:	shr    DWORD PTR ds:0x6fcedb8c,cl
  40bdb7:	inc    ebp
  40bdb8:	aam    0x1b
  40bdba:	add    esi,DWORD PTR [ebp-0x6c]
  40bdbd:	rol    esi,cl
  40bdbf:	stc    
  40bdc0:	ret    
  40bdc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc2:	outs   dx,DWORD PTR ds:[esi]
  40bdc3:	inc    ebp
  40bdc4:	mov    ah,0x94
  40bdc6:	scas   eax,DWORD PTR es:[edi]
  40bdc7:	or     bh,BYTE PTR [ecx]
  40bdc9:	mov    WORD PTR [edi],ss
  40bdcb:	fisub  DWORD PTR [ebp+0x49791f75]
  40bdd1:	jl     0x40bd83
  40bdd3:	or     ah,BYTE PTR [ecx]
  40bdd5:	mov    WORD PTR [edi],ss
  40bdd7:	aaa    
  40bdd8:	xchg   edi,eax
  40bdd9:	jne    0x40bdd2
  40bddb:	jl     0x40bdae
  40bddd:	test   BYTE PTR [ebp-0x3f],ch
  40bde0:	jnp    0x40bdc6
  40bde2:	out    0x90,al
  40bde4:	xchg   ebx,eax
  40bde5:	ins    BYTE PTR es:[edi],dx
  40bde6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bde7:	push   cs
  40bde8:	jae    0x40be5f
  40bdea:	jns    0x40bdac
  40bdec:	ja     0x40bdf5
  40bdee:	and    eax,0x5d75bc0c
  40bdf3:	cld    
	...
  40be08:	jae    0x40be49
  40be0a:	retf   
  40be0b:	or     dl,BYTE PTR [ebx+0xb]
  40be0e:	sub    eax,0xaff70f1c
  40be13:	add    edi,DWORD PTR [eax+0x27886301]
  40be19:	xchg   esp,eax
  40be1a:	adc    ebx,DWORD PTR [ecx+0x397f70e]
  40be20:	mov    al,ds:0x1b8862ed
  40be25:	xchg   esp,eax
  40be26:	sbb    esp,DWORD PTR [ebp-0x3ad2824d]
  40be2c:	adc    esi,DWORD PTR [esi-0x3]
  40be2f:	adc    esi,esp
  40be31:	sar    ch,cl
  40be33:	add    ecx,DWORD PTR [ecx+ecx*4-0x13666f61]
  40be3a:	inc    ebp
  40be3b:	test   al,0x4c
  40be3d:	xchg   esp,eax
  40be3e:	push   esi
  40be3f:	nop
  40be40:	sti    
  40be41:	imul   edx,DWORD PTR [eax],0xffffff8a
  40be44:	jecxz  0x40beba
  40be46:	jmp    0x40be8b
  40be48:	popa   
  40be49:	xchg   edi,edx
  40be4b:	sbb    DWORD PTR [ecx],esi
  40be4d:	rcr    edi,cl
  40be4f:	or     al,BYTE PTR [ecx-0x7c]
  40be52:	or     DWORD PTR [ecx-0x4a],eax
  40be55:	test   BYTE PTR [eax],0xe9
  40be58:	mov    edx,0x17d77d34
  40be5d:	jne    0x40be55
  40be5f:	push   cs
  40be60:	push   ebp
  40be61:	jne    0x40bedf
  40be63:	in     eax,0x87
  40be65:	leave  
  40be66:	xchg   BYTE PTR [esi],cl
  40be68:	xchg   BYTE PTR [ebp+0x7c],dh
  40be6b:	stc    
	...
  40be80:	test   edi,edi
  40be82:	add    al,0x11
  40be84:	icebp  
  40be85:	and    dh,dh
  40be87:	not    BYTE PTR [ebp+0xbeee4e9]
  40be8d:	mov    al,ds:0x73f67ee0
  40be92:	neg    dh
  40be94:	sbb    edi,DWORD PTR [esi+esi*8+0x5c]
  40be98:	fs jl  0x40be20
  40be9b:	pop    edi
  40be9c:	test   DWORD PTR [ebx-0xa],esi
  40be9f:	cmp    al,0x78
  40bea1:	jl     0x40bf1b
  40bea3:	pop    eax
  40bea4:	xchg   ebp,eax
  40bea5:	jae    0x40be9d
  40bea7:	cmp    al,0xa4
  40bea9:	jl     0x40bf0b
  40beab:	pop    eax
  40beac:	test   DWORD PTR [ebx-0xa],esi
  40beaf:	sbb    al,0x90
  40beb1:	jl     0x40bf1b
  40beb3:	js     0x40be4a
  40beb5:	jae    0x40befe
  40beb7:	push   0xb
  40beb9:	ins    BYTE PTR es:[edi],dx
  40beba:	or     DWORD PTR ds:0xf6fe9f18,edx
  40bec0:	xchg   edx,eax
  40bec1:	imul   esi,edi,0x7e
  40bec4:	xchg   ebp,eax
  40bec5:	pop    ds
  40bec6:	dec    esp
  40bec7:	jno    0x40beff
  40bec9:	pop    ebp
  40beca:	retf   
  40becb:	loope  0x40be5c
  40becd:	leave  
  40bece:	adc    DWORD PTR [ebp+0x9],0x1b5ef559
  40bed5:	mov    al,ds:0x7357f5e0
  40beda:	mul    dl
  40bedc:	dec    edi
  40bedd:	jmp    0x3398bf07
  40bee2:	repnz push eax
	...
  40bef8:	pop    ebp
  40bef9:	in     eax,dx
  40befa:	cmp    bh,0x7a
  40befd:	popf   
  40befe:	jnp    0x40befc
  40bf00:	push   0x23
  40bf02:	add    ch,al
  40bf04:	es repnz cmc 
  40bf07:	call   FWORD PTR [esi+0x7a0f7cd7]
  40bf0d:	and    ecx,DWORD PTR [esi]
  40bf0f:	inc    DWORD PTR [eax]
  40bf11:	pushf  
  40bf12:	loopne 0x40be9b
  40bf14:	mov    BYTE PTR [ebp+0x23b50bf5],bl
  40bf1a:	idiv   dh
  40bf1c:	add    BYTE PTR [eax+eiz*8-0xa621278],bl
  40bf23:	leave  
  40bf24:	daa    
  40bf25:	outs   dx,DWORD PTR ds:[esi]
  40bf26:	not    BYTE PTR [esi+ebx*8-0x75]
  40bf2a:	xchg   esp,eax
  40bf2c:	add    DWORD PTR [ebp-0xdcd000b],ebx
  40bf32:	mov    al,0xfe
  40bf34:	dec    edx
  40bf35:	pushf  
  40bf36:	or     BYTE PTR [eax],al
  40bf38:	xor    eax,0x29458197
  40bf3d:	jo     0x40bef5
  40bf3f:	je     0x40bf71
  40bf41:	pop    ss
  40bf42:	xor    DWORD PTR [eax],eax
  40bf44:	nop
  40bf45:	jae    0x40bf28
  40bf47:	push   ecx
  40bf48:	xor    al,0x97
  40bf4a:	or     bh,bh
  40bf4c:	sub    BYTE PTR [esi+ebp*8+0x29],0xa9
  40bf51:	pushf  
  40bf52:	cmc    
  40bf53:	or     esp,ebp
  40bf55:	and    DWORD PTR [edi],eax
  40bf57:	push   0x4928af
	...
  40bf70:	jp     0x40bf94
  40bf72:	add    ch,al
  40bf74:	xchg   edx,eax
  40bf75:	in     al,0xf5
  40bf77:	call   FWORD PTR [esi+0x6a]
  40bf7a:	outs   dx,BYTE PTR ds:[esi]
  40bf7b:	pop    edi
  40bf7c:	and    eax,0x8cfef656
  40bf81:	push   eax
  40bf82:	(bad)  
  40bf83:	out    0x34,eax
  40bf85:	jmp    0x46be8a
  40bf8a:	inc    edx
  40bf8b:	dec    bl
  40bf8d:	mov    cl,0x91
  40bf8f:	cmp    eax,0x8d0a7d8d
  40bf94:	adc    DWORD PTR [edi+0x2cb3feff],edi
  40bf9a:	adc    dl,al
  40bf9c:	cld    
  40bf9d:	xchg   ecx,eax
  40bf9e:	add    BYTE PTR [ebp-0x10040f7],cl
  40bfa4:	fwait
  40bfa5:	sub    al,0x1
  40bfa7:	mov    ch,0xd4
  40bfa9:	call   0xff8e:0x7e74ff00
  40bfb0:	xor    ebp,0x76
  40bfb3:	mov    esp,0x400e837a
  40bfb8:	cmp    edi,0x19
  40bfbb:	add    BYTE PTR [ebx+edi*2+0x4a4e9571],cl
  40bfc2:	push   cs
  40bfc3:	jmp    DWORD PTR [ebx+0x7e]
  40bfc6:	cli    
  40bfc7:	call   DWORD PTR [ebx+0x7c]
  40bfca:	xchg   BYTE PTR [ecx+ebx*1-0x42],bh
  40bfce:	ror    BYTE PTR [edi-0x4c],1
  40bfd1:	nop
  40bfd2:	mov    esp,0x40
	...
  40bfe7:	add    BYTE PTR [ebx+edx*2+0x7b8c7b2e],cl
  40bfee:	repz mov edi,0xa91578a1
  40bff4:	mov    WORD PTR [ebx+0xa],?
  40bff7:	lea    eax,[ecx]
  40bff9:	ud0    edx,DWORD PTR ds:[ebx]
  40bffd:	jmp    0x839cebcc
  40c002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c003:	dec    edi
  40c004:	dec    ebp
  40c005:	jnp    0x40c019
  40c007:	ret    0x7b77
  40c00a:	or     cl,BYTE PTR [ebx]
  40c00c:	int3   
  40c00d:	xchg   esp,eax
  40c00e:	aam    0x0
  40c010:	cmc    
  40c011:	and    al,ah
  40c013:	add    ecx,DWORD PTR [ecx+esi*2+0x1bf3f7d5]
  40c01a:	jnp    0x40c023
  40c01c:	rcr    DWORD PTR [ebp-0x3656ee1],cl
  40c022:	fnstsw WORD PTR [esp+ecx*2-0x786ec16c]
  40c029:	jl     0x40c05a
  40c02b:	jae    0x40bfe0
  40c02d:	jno    0x40c04a
  40c02f:	cli    
  40c030:	xor    eax,0x97911694
  40c035:	jl     0x40c092
  40c037:	jae    0x40bfd4
  40c039:	jno    0x40c090
  40c03b:	jno    0x40c00b
  40c03d:	jb     0x40c04e
  40c03f:	pop    es
  40c040:	sbb    esi,eax
  40c042:	ret    
  40c043:	mov    cl,0xd3
  40c045:	jl     0x40c046
  40c047:	jb     0x40c0c4
  40c049:	jno    0x40bfdb
  40c04b:	push   es
	...
  40c060:	stc    
  40c061:	test   BYTE PTR [edi],ch
  40c063:	pop    es
  40c064:	loope  0x40c002
  40c066:	xlat   BYTE PTR ds:[ebx]
  40c067:	or     DWORD PTR [edx+0x71],esp
  40c06a:	fistp  WORD PTR [ebx]
  40c06c:	push   esi
  40c06d:	and    edi,eax
  40c06f:	push   es
  40c070:	addr16 aad 0x7c
  40c073:	shl    DWORD PTR [edi+0x1b],0x6d
  40c077:	dec    edi
  40c078:	inc    edx
  40c079:	jno    0x40c03a
  40c07b:	push   es
  40c07c:	rol    DWORD PTR [esi+eiz*4-0x508e07b0],0x6
  40c084:	xor    al,0xc7
  40c086:	adc    eax,DWORD PTR [esp+ecx*4]
  40c089:	popf   
  40c08a:	lahf   
  40c08b:	(bad)  
  40c08c:	jae    0x40c08a
  40c08e:	std    
  40c08f:	mov    esp,0x908e94cc
  40c094:	xchg   edi,eax
  40c095:	jl     0x40c09e
  40c097:	jae    0x40c09c
  40c099:	jno    0x40c0a4
  40c09b:	jbe    0x40c0f9
  40c09d:	sub    bh,dh
  40c09f:	outs   dx,BYTE PTR ds:[esi]
  40c0a0:	mov    al,ah
  40c0a2:	loopne 0x40c042
  40c0a4:	pop    esi
  40c0a5:	jno    0x40c09d
  40c0a7:	mov    ecx,0xe17c721f
  40c0ac:	ja     0x40c092
  40c0ae:	test   BYTE PTR [esi-0x76],0x7c
  40c0b2:	mov    esp,0x84719276
  40c0b7:	fs dec ebp
  40c0b9:	jb     0x40c0b1
  40c0bb:	push   DWORD PTR ss:[ecx-0x44]
  40c0bf:	ins    DWORD PTR es:[edi],dx
  40c0c0:	mov    DWORD PTR [ecx-0xa],esi
  40c0c3:	adc    DWORD PTR [eax],eax
	...
  40c0d5:	add    BYTE PTR [eax],al
  40c0d7:	add    BYTE PTR [eax+0xce908ed],dh
  40c0dd:	push   esp
  40c0de:	push   es
  40c0df:	ins    BYTE PTR es:[edi],dx
  40c0e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e1:	jno    0x40c0d9
  40c0e3:	push   cs
  40c0e4:	mov    ah,BYTE PTR [edi]
  40c0e6:	mov    ch,0x7
  40c0e8:	xchg   edx,eax
  40c0e9:	outs   dx,DWORD PTR ds:[esi]
  40c0ea:	loope  0x40c0c1
  40c0ec:	push   ss
  40c0ed:	jo     0x40c0e5
  40c0ef:	test   bl,0x2c
  40c0f2:	imul   esi
  40c0f4:	mov    DWORD PTR [esp+ecx*4+0x76],edi
  40c0f8:	xchg   ecx,eax
  40c0f9:	outs   dx,DWORD PTR ds:[esi]
  40c0fa:	shr    BYTE PTR [ebx+0x625d7064],0x74
  40c101:	adc    eax,0x6f8a99cd
  40c106:	imul   BYTE PTR [esi-0x4108d335]
  40c10c:	mov    DWORD PTR [eax+ecx*1+0x4c1b8fe9],edx
  40c113:	fnsave [eax+esi*1]
  40c116:	jge    0x40c104
  40c118:	shrd   DWORD PTR [eax],ecx,cl
  40c11b:	adc    al,0x23
  40c11d:	jge    0x40c11f
  40c11f:	call   0x33a155b3
  40c124:	fcom   st(4)
  40c126:	or     BYTE PTR [eax],al
  40c128:	adc    ah,BYTE PTR [eax]
  40c12a:	add    ch,al
  40c12c:	adc    ah,bl
  40c12e:	cmc    
  40c12f:	jmp    FWORD PTR [edi+ebp*8-0x50]
  40c133:	(bad)  
  40c134:	bound  ebx,QWORD PTR [ecx-0x6c0bc1a0]
  40c13a:	or     BYTE PTR [ebp+0x0],cl
	...
  40c150:	push   0x42fff6d2
  40c155:	sub    dh,ch
  40c157:	xor    bl,BYTE PTR [bx+di-0x720b]
  40c15c:	cmp    dl,dl
  40c15e:	idiv   bh
  40c160:	sub    BYTE PTR [eax],0xf7
  40c163:	mov    ch,0x3d
  40c165:	xchg   esi,eax
  40c166:	cmc    
  40c167:	dec    DWORD PTR [ebp-0x5]
  40c16a:	jb     0x40c16c
  40c16c:	mov    ch,0xea
  40c16e:	mov    edi,DWORD PTR [ebx+eax*4-0x4dbf0a67]
  40c175:	out    dx,eax
  40c176:	into   
  40c177:	add    BYTE PTR [ebp-0x486a7c6d],ah
  40c17d:	xchg   esi,eax
  40c17e:	cmc    
  40c17f:	(bad)  
  40c180:	jp     0x40c117
  40c182:	sbb    BYTE PTR [eax],al
  40c184:	gs xchg ebx,eax
  40c186:	add    eax,0x898d284
  40c18b:	add    al,ah
  40c18d:	dec    dl
  40c18f:	inc    BYTE PTR [edx-0x68]
  40c192:	add    DWORD PTR [edx-0x6f],0x28
  40c196:	outs   dx,BYTE PTR ds:[esi]
  40c197:	push   ebp
  40c198:	xchg   ebp,eax
  40c199:	push   ebx
  40c19a:	mul    bh
  40c19c:	loope  0x40c1b8
  40c19e:	idiv   bh
  40c1a0:	sar    DWORD PTR ds:[ebx+0x2],cl
  40c1a4:	dec    esi
  40c1a5:	push   ds
  40c1a6:	test   DWORD PTR [ebp-0xa6719],edx
  40c1ac:	mov    al,ds:0x7d502255
  40c1b1:	inc    ecx
  40c1b2:	inc    esi
  40c1b3:	inc    ecx
	...
  40c1c8:	mov    WORD PTR [ebp+0x12],?
  40c1cb:	push   edx
  40c1cc:	xchg   esi,eax
  40c1cd:	jge    0x40c1d9
  40c1cf:	or     ecx,esp
  40c1d1:	outs   dx,DWORD PTR ds:[esi]
  40c1d2:	or     bl,ch
  40c1d4:	add    BYTE PTR [bx-0x3e],ah
  40c1d8:	cli    
  40c1d9:	in     eax,0xc
  40c1db:	lea    ecx,[esi+0x31]
  40c1de:	jae    0x40c165
  40c1e0:	and    bh,dh
  40c1e2:	or     al,0xff
  40c1e4:	je     0x40c24d
  40c1e6:	mov    bl,0x40
  40c1e8:	mov    esi,es
  40c1ea:	xchg   BYTE PTR [ebx],cl
  40c1ec:	in     al,0x25
  40c1ee:	js     0x40c1ef
  40c1f0:	retf   
  40c1f1:	aad    0x46
  40c1f3:	mov    ah,0xc2
  40c1f5:	lods   eax,DWORD PTR ds:[esi]
  40c1f6:	or     al,0x50
  40c1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f9:	lds    esi,FWORD PTR [edi-0x1]
  40c1fc:	mov    bl,0xf3
  40c1fe:	jbe    0x40c1b0
  40c200:	stos   BYTE PTR es:[edi],al
  40c201:	mov    ch,0xc
  40c203:	push   eax
  40c204:	xor    al,0x8f
  40c206:	scas   al,BYTE PTR es:[edi]
  40c207:	inc    eax
  40c208:	mov    WORD PTR [esi-0x626d4fba],es
  40c20e:	or     al,0xe8
  40c210:	xchg   ebp,eax
  40c211:	adc    cl,BYTE PTR [edx]
  40c213:	add    BYTE PTR [edi-0x1bed7a45],dl
  40c219:	jg     0x40c1c7
  40c21b:	inc    eax
  40c21c:	mov    WORD PTR [esi+0x44],?
  40c21f:	mov    al,0x6a
  40c221:	ja     0x40c22d
  40c223:	(bad)  
  40c224:	fldenv [ebx-0x1e]
  40c227:	js     0x40c282
  40c229:	inc    edi
  40c22a:	or     ch,al
	...
  40c240:	aad    0xcd
  40c242:	or     edi,edi
  40c244:	sbb    DWORD PTR [ecx],eax
  40c246:	iret   
  40c247:	std    
  40c248:	inc    ebx
  40c249:	das    
  40c24a:	pop    ebp
  40c24b:	inc    DWORD PTR [ecx]
  40c24d:	call   0x5474c15c
  40c252:	loopne 0x40c2cc
  40c254:	mov    WORD PTR [edi+ebx*8+0x6c9de388],ss
  40c25b:	dec    ecx
  40c25c:	sbb    ebp,DWORD PTR [esi-0x61]
  40c25f:	add    ebx,ecx
  40c261:	xor    BYTE PTR [esi-0x5782f4fd],al
  40c267:	jge    0x40c1f5
  40c269:	xchg   esp,eax
  40c26a:	jbe    0x40c225
  40c26c:	inc    ebx
  40c26d:	outs   dx,DWORD PTR ds:[esi]
  40c26e:	jg     0x40c273
  40c270:	in     al,0xdb
  40c272:	push   ebp
  40c273:	add    ebp,ebx
  40c275:	pop    ebx
  40c276:	and    cl,BYTE PTR [esp+ecx*4]
  40c279:	(bad)  
  40c27a:	jp     0x40c26c
  40c27c:	(bad)  
  40c27e:	jmp    0x40c26b
  40c280:	std    
  40c281:	add    al,BYTE PTR [edi+0x3]
  40c284:	xchg   edi,eax
  40c285:	push   esp
  40c286:	mov    ah,0x12
  40c288:	pop    esp
  40c289:	les    esi,FWORD PTR [esi]
  40c28b:	jns    0x40c211
  40c28d:	jl     0x40c21a
  40c28f:	add    dh,BYTE PTR [ebx+0x1a2b486d]
  40c295:	outs   dx,BYTE PTR ds:[esi]
  40c296:	das    
  40c297:	int    0xcd
  40c299:	pushf  
  40c29a:	fistp  WORD PTR [eax+0x7]
  40c29d:	and    DWORD PTR [ebx-0x38],0x6ddffa97
	...
  40c2b8:	lods   eax,DWORD PTR ds:[esi]
  40c2b9:	ins    DWORD PTR es:[edi],dx
  40c2ba:	jne    0x40c2c7
  40c2bc:	je     0x40c299
  40c2be:	jp     0x40c2c3
  40c2c0:	jnp    0x40c2dd
  40c2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c3:	jmp    ebp
  40c2c5:	mov    ah,dh
  40c2c7:	js     0x40c25d
  40c2c9:	jl     0x40c27a
  40c2cb:	add    ah,BYTE PTR [ebx+0x6d]
  40c2ce:	pop    edx
  40c2cf:	daa    
  40c2d0:	pop    ebx
  40c2d1:	out    0xe7,eax
  40c2d3:	jmp    0x40c2ed
  40c2d5:	ins    DWORD PTR es:[edi],dx
  40c2d6:	mov    DWORD PTR [edx],0x78ce90b6
  40c2dc:	xchg   esp,eax
  40c2dd:	jl     0x40c27a
  40c2df:	add    bh,BYTE PTR [ebx]
  40c2e1:	ins    DWORD PTR es:[edi],dx
  40c2e2:	or     DWORD PTR [ebx-0x78],eax
  40c2e5:	cld    
  40c2e6:	psrlw  mm2,QWORD PTR cs:[eax+eiz*2+0x8d3adf7]
  40c2ef:	sahf   
  40c2f0:	push   esp
  40c2f1:	stos   BYTE PTR es:[edi],al
  40c2f2:	aas    
  40c2f3:	sub    BYTE PTR [eax-0x71860784],cl
  40c2f9:	ins    DWORD PTR es:[edi],dx
  40c2fa:	add    ch,BYTE PTR [ecx+0x1158887b]
  40c300:	test   dh,cl
  40c302:	inc    edi
  40c303:	jmp    0xe1bd3067
  40c308:	not    DWORD PTR [ebx-0xb]
  40c30b:	data16 mov ?,WORD PTR [eax+ecx*8+0x6c]
  40c310:	mov    gs,WORD PTR [ebp+0x63]
  40c313:	jmp    0xa897697f
  40c318:	(bad)  
  40c319:	cld    
  40c31a:	push   es
  40c31b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  40c330:	dec    eax
  40c331:	xchg   esp,eax
  40c332:	cmc    
  40c333:	hlt    
  40c334:	jns    0x40c311
  40c336:	inc    edi
  40c337:	jmp    0x2eda15e3
  40c33c:	mov    ds,WORD PTR [ecx-0x3b846238]
  40c342:	pusha  
  40c343:	in     eax,0x2d
  40c345:	ror    DWORD PTR [eax],cl
  40c347:	mov    ecx,0x100e78e
  40c34c:	and    DWORD PTR [eax-0xa],esi
  40c34f:	push   es
  40c350:	ja     0x40c358
  40c352:	test   dh,bh
  40c354:	(bad)  
  40c355:	dec    BYTE PTR [eax]
  40c357:	or     DWORD PTR [edi-0x2f70bf04],0xffffff94
  40c35e:	pusha  
  40c35f:	jmp    0xd1c957f3
  40c364:	cmc    
  40c365:	sbb    esi,esi
  40c367:	(bad)  
  40c368:	adc    DWORD PTR [ebp+edi*2+0x5],0xe0c4e0
  40c370:	jae    0x40c37f
  40c372:	idiv   edi
  40c374:	ds pop eax
  40c376:	jp     0x40c38c
  40c378:	xchg   ebp,eax
  40c379:	clc    
  40c37a:	or     al,0x5e
  40c37c:	je     0x40c30e
  40c37e:	pop    eax
  40c37f:	inc    DWORD PTR [eax-0x6a31f68]
  40c385:	xchg   ebp,eax
  40c386:	cmc    
  40c387:	call   0x37dee5
  40c38c:	or     eax,0xaff83ce
  40c391:	xchg   esi,eax
  40c392:	jnp    0x40c390
	...
  40c3a8:	jp     0x40c38d
  40c3aa:	add    al,ch
  40c3ac:	das    
  40c3ad:	sbb    esi,edi
  40c3af:	jmp    FWORD PTR [ebx+edx*2]
  40c3b2:	or     al,BYTE PTR [eax]
  40c3b4:	and    BYTE PTR [ecx],bl
  40c3b6:	loop   0x40c339
  40c3b8:	mov    cl,0x64
  40c3ba:	(bad)  
  40c3bb:	(bad)  
  40c3bc:	cmp    bl,BYTE PTR [ebx]
  40c3be:	dec    ebp
  40c3bf:	cld    
  40c3c0:	add    eax,0x4a107b95
  40c3c5:	jecxz  0x40c3cb
  40c3c7:	call   0x49b293
  40c3cc:	scas   al,BYTE PTR es:[edi]
  40c3cd:	push   edi
  40c3ce:	pop    es
  40c3cf:	test   DWORD PTR [esi-0x70],ebp
  40c3d2:	or     BYTE PTR [eax],al
  40c3d4:	jb     0x40c3a9
  40c3d6:	lock add BYTE PTR [ebp-0x1f38f769],ah
  40c3dd:	arpl   di,si
  40c3df:	pop    es
  40c3e0:	jne    0x40c379
  40c3e2:	bound  eax,QWORD PTR [eax]
  40c3e4:	pop    ds
  40c3e5:	xchg   edi,eax
  40c3e6:	bound  eax,QWORD PTR [eax]
  40c3e8:	pop    ds
  40c3e9:	xchg   edi,eax
  40c3ea:	add    DWORD PTR [ebp+0x71],0xffffffc7
  40c3ee:	add    DWORD PTR [ebp-0x8939f],0xffffffa5
  40c3f5:	xchg   ebp,eax
  40c3f6:	jnp    0x40c3f0
  40c3f8:	cmp    ah,dl
  40c3fa:	hlt    
  40c3fb:	call   0xb24d8c
  40c400:	mov    WORD PTR [esi-0x36],?
  40c403:	jae    0x40c38e
  40c405:	inc    esp
  40c406:	cwde   
  40c407:	(bad)  
  40c408:	cmp    edi,DWORD PTR [ebp+0x62]
  40c40b:	push   ss
	...
  40c420:	lds    edi,FWORD PTR [esp+ecx*1-0x1db25e01]
  40c427:	test   ah,bh
  40c429:	xor    DWORD PTR [ecx],ecx
  40c42b:	push   eax
  40c42c:	pop    es
  40c42d:	sub    eax,0xa188487
  40c432:	or     edi,edi
  40c434:	pop    esp
  40c435:	scas   eax,DWORD PTR es:[edi]
  40c436:	in     al,0x74
  40c438:	sbb    al,0x12
  40c43a:	or     DWORD PTR [ecx-0x10f12ef],ecx
  40c440:	repz adc al,0xc5
  40c443:	mov    ebp,ebx
  40c445:	stc    
  40c446:	arpl   WORD PTR [eax],ax
  40c448:	je     0x40c42d
  40c44a:	addr16 inc ecx
  40c44c:	mov    edx,cs
  40c44e:	mov    esi,0x8c1dbef
  40c453:	inc    DWORD PTR [ecx+0x49]
  40c456:	loop   0x40c425
  40c458:	adc    edx,edx
  40c45a:	or     BYTE PTR [ecx-0x10f26ef],cl
  40c460:	mov    bl,0xfd
  40c462:	mov    dh,0xeb
  40c464:	mov    ds:0x180008b9,eax
  40c469:	outs   dx,BYTE PTR ds:[esi]
  40c46a:	bound  eax,QWORD PTR [ecx]
  40c46c:	mov    WORD PTR [edx-0x6f260139],ds
  40c472:	lock dec BYTE PTR [ebx+0x74087e9b]
  40c479:	adc    al,0xbc
  40c47b:	(bad)  
  40c47c:	jnp    0x40c4e9
  40c47e:	mov    esp,0xf6637beb
  40c483:	out    0x0,eax
	...
  40c495:	add    BYTE PTR [eax],al
  40c497:	add    BYTE PTR ds:0x63ff08c8,dl
  40c49d:	xchg   ebp,eax
  40c49e:	xchg   esp,eax
  40c49f:	hlt    
  40c4a0:	bound  ebp,QWORD PTR [edx-0x29]
  40c4a3:	(bad)  
  40c4a4:	fcomp  DWORD PTR [eax+0x7c9479de]
  40c4aa:	adc    bh,bh
  40c4ac:	inc    edx
  40c4ad:	push   0xffffffcf
  40c4af:	mov    ecx,0xffb7622b
  40c4b4:	sub    edi,eax
  40c4b6:	imul   edi,edi,0x2a
  40c4b9:	push   0x2d
  40c4bb:	cld    
  40c4bc:	xor    al,0xd1
  40c4be:	scas   al,BYTE PTR es:[edi]
  40c4bf:	call   FWORD PTR [edx]
  40c4c1:	push   0x1d
  40c4c3:	add    BYTE PTR [esp+ebx*1],ah
  40c4c6:	sbb    BYTE PTR [esp+ecx*4],al
  40c4c9:	pop    ebx
  40c4ca:	mov    ds:0x7abf8c10,al
  40c4cf:	lock or al,0x51
  40c4d2:	cwde   
  40c4d3:	div    edx
  40c4d5:	imul   ebp,DWORD PTR [ebp+0x49],0x7966c4e8
  40c4dc:	jl     0x40c547
  40c4de:	aad    0xf
  40c4e0:	in     al,0xe5
  40c4e2:	out    0x3,eax
  40c4e4:	mov    WORD PTR [ebp-0x74eef0e1],ds
  40c4ea:	loopne 0x40c4ef
  40c4ec:	mov    WORD PTR [ecx-0x5b],ss
  40c4ef:	sti    
  40c4f0:	mov    ebx,0xcb03e069
  40c4f5:	iret   
  40c4f6:	xor    edi,edi
  40c4f8:	xchg   edx,eax
  40c4f9:	xchg   esp,eax
  40c4fa:	fild   QWORD PTR [ecx+0x0]
	...
  40c50d:	add    BYTE PTR [eax],al
  40c50f:	add    BYTE PTR [esi+edi*8-0x1739621],cl
  40c516:	fist   WORD PTR [eax-0x6f4f9fb8]
  40c51c:	adc    BYTE PTR [eax+0x1f],ah
  40c51f:	inc    DWORD PTR [edx+0x74790ec4]
  40c525:	imul   edi,DWORD PTR [ebp-0x1],0x7108cf6b
  40c52c:	(bad)  
  40c52d:	xchg   esp,eax
  40c52e:	add    DWORD PTR [ecx],ebp
  40c530:	in     al,0x8f
  40c532:	(bad)  
  40c534:	(bad)  
  40c535:	xchg   esp,eax
  40c536:	or     BYTE PTR [ecx+0x7a],dl
  40c539:	fild   DWORD PTR [edi-0x17]
  40c53c:	dec    edx
  40c53d:	loopne 0x40c557
  40c53f:	rcr    DWORD PTR [ecx],0x1a
  40c542:	test   dh,0xdf
  40c545:	sbb    eax,0x65046cd9
  40c54a:	(bad)  
  40c54b:	mov    dh,0x2a
  40c54d:	fstp   DWORD PTR [edx-0x3f]
  40c550:	or     DWORD PTR [edx],ebx
  40c552:	mul    BYTE PTR [esi-0x6906eff8]
  40c558:	adc    ch,BYTE PTR [edx-0x1f]
  40c55b:	mov    ch,0x16
  40c55d:	push   0xfffffff6
  40c55f:	add    ecx,DWORD PTR [eax+0x348608fe]
  40c565:	jns    0x40c565
  40c567:	jle    0x40c55b
  40c569:	imul   edi,DWORD PTR [ebp+eiz*8-0x9],0xe26e8772
  40c571:	sbb    ecx,DWORD PTR [ebp+edx*2+0x0]
	...
  40c588:	loop   0x40c5f3
  40c58a:	neg    BYTE PTR [esi+0x14]
  40c58d:	jge    0x40c58d
  40c58f:	push   esi
  40c590:	retf   0x8270
  40c593:	je     0x40c557
  40c595:	imul   eax,DWORD PTR [edx],0x58f54329
  40c59b:	jo     0x40c5a1
  40c59d:	jno    0x40c59d
  40c59f:	ss stos BYTE PTR es:[edi],al
  40c5a1:	imul   edi,DWORD PTR [ecx+eax*2+0x11f6699a],0x1ef618c7
  40c5ac:	xchg   BYTE PTR [ebp+edi*2-0x5f],dl
  40c5b0:	not    DWORD PTR [edx-0xfbf01f8]
  40c5b6:	sbb    al,BYTE PTR [eax]
  40c5b8:	xor    dl,cl
  40c5ba:	or     bh,bh
  40c5bc:	mov    eax,0x62ffff7b
  40c5c1:	push   0x7d
  40c5c3:	or     BYTE PTR [ebp+0x72ffbce8],cl
  40c5c9:	stc    
  40c5ca:	or     al,BYTE PTR [eax]
  40c5cc:	inc    edx
  40c5cd:	daa    
  40c5ce:	outs   dx,BYTE PTR ds:[esi]
  40c5cf:	and    al,BYTE PTR [edx+0x18ff08d3]
  40c5d5:	jns    0x40c5d6
  40c5d7:	call   DWORD PTR [edx+0x6a]
  40c5da:	jge    0x40c5e4
  40c5dc:	pop    ebp
  40c5dd:	hlt    
  40c5de:	mov    esp,0x8f8e2ff
  40c5e3:	add    dl,ah
  40c5e5:	outs   dx,BYTE PTR es:[esi]
  40c5e7:	rcl    bx,cl
  40c5ea:	or     bh,bh
	...
  40c600:	mov    eax,0x22ffff78
  40c605:	push   0x7d
  40c607:	or     BYTE PTR ds:0x12ffbcdc,cl
  40c60d:	jns    0x40c667
  40c60f:	mov    esi,DWORD PTR [edx+0x69]
  40c612:	div    DWORD PTR [ebp-0x89def]
  40c618:	or     eax,0x72ff81d2
  40c61d:	imul   edi,DWORD PTR [ebp-0x896c510],0xf597e8ff
  40c627:	jne    0x40c5d6
  40c629:	jnp    0x40c600
  40c62b:	(bad)  
  40c62c:	push   edx
  40c62d:	imul   esi,edi,0xf76175b5
  40c633:	dec    DWORD PTR [ebp-0x43]
  40c636:	cmp    edi,0xf84d6972
  40c63c:	jl     0x40c6a1
  40c63e:	hlt    
  40c63f:	push   DWORD PTR [edx+0x69]
  40c642:	jge    0x40c640
  40c644:	mov    WORD PTR [ebp+0x7d8c774b],ss
  40c64a:	ret    
  40c64b:	ror    DWORD PTR [eax+0x608b5f7d],0xfa
  40c652:	sar    bl,0xf6
  40c655:	jge    0x40c6b7
  40c657:	and    ah,BYTE PTR [ebx-0x20]
  40c65a:	add    eax,ebp
  40c65c:	cdq    
  40c65d:	in     eax,0xf4
  40c65f:	inc    BYTE PTR ds:0x6808b0
	...
  40c675:	add    BYTE PTR [eax],al
  40c677:	add    BYTE PTR [ebp+edi*2-0x304b421b],cl
  40c67e:	push   esi
  40c67f:	inc    ecx
  40c680:	mov    ebp,es
  40c682:	jle    0x40c6e2
  40c684:	int    0x7d
  40c686:	cmc    
  40c687:	je     0x40c61d
  40c689:	push   ebp
  40c68a:	and    dh,BYTE PTR [ebx+eiz*1-0x45819dca]
  40c691:	mov    esp,0x7359ff0c
  40c696:	inc    ebx
  40c697:	inc    ecx
  40c698:	mov    esi,?
  40c69a:	jle    0x40c6a4
  40c69c:	hlt    
  40c69d:	in     al,dx
  40c69e:	idiv   dh
  40c6a0:	sti    
  40c6a1:	test   BYTE PTR [esi+0x5e],dh
  40c6a4:	dec    ebp
  40c6a5:	jge    0x40c709
  40c6a7:	add    cl,BYTE PTR [ebp+edi*2+0x7559fe8a]
  40c6ae:	loop   0x40c72d
  40c6b0:	fldln2 
  40c6b2:	hlt    
  40c6b3:	addr16 (bad) 
  40c6b5:	es dec ebx
  40c6b7:	add    BYTE PTR [ebx+edi*2],dh
  40c6ba:	or     al,BYTE PTR [eax]
  40c6bc:	or     al,0xd6
  40c6be:	jle    0x40c6c8
  40c6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c1:	xor    esp,esi
  40c6c3:	(bad)  
  40c6c4:	mov    bl,0x44
  40c6c6:	fcomp  DWORD PTR [ebp+0x4d]
  40c6c9:	jge    0x40c72d
  40c6cb:	add    cl,BYTE PTR [ebp+edi*2-0x6bde0176]
  40c6d2:	imul   ebx
  40c6d4:	inc    esp
  40c6d5:	popw   ss
  40c6d7:	cld    
  40c6d8:	mov    ah,al
  40c6da:	sbb    edi,esp
	...
  40c6f0:	clc    
  40c6f1:	pushf  
  40c6f2:	pop    es
  40c6f3:	push   ss
  40c6f4:	add    al,0x66
  40c6f6:	bswap  edx
  40c6f8:	dec    ebp
  40c6f9:	xchg   ecx,eax
  40c6fa:	fist   WORD PTR [esi+0x17]
  40c6fd:	jns    0x40c6fe
  40c6ff:	jne    0x40c691
  40c701:	jl     0x40c703
  40c703:	lea    ebx,[edx+0x66]
  40c706:	sti    
  40c707:	ret    
  40c708:	fild   QWORD PTR [ebx-0x2c14b0a9]
  40c70e:	fist   WORD PTR [ebx+0x34]
  40c711:	stc    
  40c712:	push   ebp
  40c713:	sti    
  40c714:	cmp    al,ch
  40c716:	(bad)  
  40c718:	mov    WORD PTR [esi+eax*8+0x1eb6b3ba],ss
  40c71f:	inc    ebp
  40c720:	mov    esp,es
  40c722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c723:	jno    0x40c6a9
  40c725:	jl     0x40c75d
  40c727:	mov    bh,0x12
  40c729:	dec    ax
  40c72b:	ins    BYTE PTR es:[edi],dx
  40c72c:	lea    edx,[esi+ecx*4+0x26a76bba]
  40c733:	inc    ebp
  40c734:	mov    esp,es
  40c736:	mov    ?,WORD PTR [ecx-0x7c]
  40c739:	jl     0x40c75d
  40c73b:	mov    bh,0xea
  40c73d:	mov    BYTE PTR gs:[edi+0x16],cl
  40c741:	data16 addr16 int 0xcd
  40c745:	pushf  
  40c746:	fist   WORD PTR [eax+0x7]
  40c749:	jns    0x40c7ae
  40c74b:	rol    bh,0xfa
  40c74e:	fild   QWORD PTR [ebp+0x6f]
  40c751:	fisttp QWORD PTR gs:[ebx]
	...
  40c768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c769:	mul    DWORD PTR [esi-0x5]
  40c76c:	mov    dl,0x1b
  40c76e:	lods   eax,DWORD PTR ds:[esi]
  40c76f:	div    DWORD PTR ds:0x1d36088a
  40c775:	pushf  
  40c776:	loopne 0x40c7cc
  40c778:	xchg   edi,eax
  40c779:	data16 not BYTE PTR [ebx-0xe839a96]
  40c780:	ja     0x40c79c
  40c782:	not    BYTE PTR [esi]
  40c784:	xchg   ebx,edi
  40c786:	adc    al,0xe
  40c788:	std    
  40c789:	pushf  
  40c78a:	loopne 0x40c7f4
  40c78c:	ja     0x40c7f4
  40c78e:	idiv   dh
  40c790:	fsubr  QWORD PTR [eax-0xa]
  40c793:	jl     0x40c72c
  40c795:	jl     0x40c725
  40c797:	push   di
  40c799:	data16 shr BYTE PTR [ebx+0x725d6553],0x33
  40c7a1:	ret    0xeccd
  40c7a4:	mov    ebx,?
  40c7a6:	inc    edi
  40c7a7:	jmp    0xe9495c3b
  40c7ac:	bound  ecx,QWORD PTR [ecx-0xa]
  40c7af:	xor    al,0x98
  40c7b1:	jl     0x40c77d
  40c7b3:	cmp    eax,0x14819488
  40c7b8:	mov    BYTE PTR [ecx],dl
  40c7ba:	icebp  
  40c7bb:	jmp    0x40c75a
  40c7bd:	or     DWORD PTR [ecx],0xffffffb9
  40c7c0:	adc    bh,BYTE PTR [ebx+0xb]
  40c7c3:	wbinvd 
  40c7c5:	stos   DWORD PTR es:[edi],eax
  40c7c6:	push   esp
  40c7c7:	sub    eax,0xae6e8f7d
	...
  40c7e0:	mov    eax,ecx
  40c7e2:	or     BYTE PTR [esi+0x5c],bh
  40c7e5:	cwde   
  40c7e6:	loopne 0x40c7db
  40c7e8:	pop    esp
  40c7e9:	xchg   esp,eax
  40c7ea:	or     BYTE PTR [ecx],al
  40c7ec:	jmp    0x55ca:0x67e947c5
  40c7f3:	test   al,0x8f
  40c7f5:	jl     0x40c82a
  40c7f7:	jge    0x40c7bf
  40c7f9:	add    ch,BYTE PTR gs:[ecx]
  40c7fc:	sub    ebp,edi
  40c7fe:	cmc    
  40c7ff:	add    al,dh
  40c801:	cwde   
  40c802:	cmc    
  40c803:	adc    eax,0x47ca3f
  40c808:	ss and eax,0xe4650b0a
  40c80e:	pop    ebx
  40c80f:	call   DWORD PTR [eax+0x75415766]
  40c815:	cmp    ecx,DWORD PTR ds:0x89983461
  40c81b:	cmp    eax,0x47f970
  40c820:	gs in  eax,0x0
  40c823:	inc    DWORD PTR [eax+0x6e]
  40c826:	push   edi
  40c827:	inc    ecx
  40c828:	jne    0x40c89d
  40c82a:	xor    DWORD PTR [edx+0x65],ebp
  40c82d:	repnz pop es
  40c82f:	push   DWORD PTR [eax+0x63]
  40c832:	imul   eax,DWORD PTR [ecx+0x35],0x7afe1d5d
  40c839:	xlat   BYTE PTR ds:[ebx]
  40c83a:	or     BYTE PTR [ebx-0x3ffe730f],al
  40c840:	jno    0x40c7f9
  40c842:	cmc    
  40c843:	xor    eax,0x0
	...
  40c858:	xor    bh,dh
  40c85a:	inc    edi
  40c85b:	add    dl,bl
  40c85d:	xchg   ebx,eax
  40c85e:	push   cs
  40c85f:	pusha  
  40c860:	fs cwde 
  40c862:	mov    esp,eax
  40c864:	and    DWORD PTR [ebp+0x1d],ebx
  40c867:	out    dx,al
  40c868:	retf   0x8d7
  40c86b:	(bad)  
  40c86c:	lock bound ebp,QWORD PTR [ecx+0x41]
  40c870:	in     eax,0x97
  40c872:	or     BYTE PTR [eax],al
  40c874:	in     eax,0x70
  40c876:	or     DWORD PTR [ebx+0x5e],eax
  40c879:	pop    ecx
  40c87a:	push   ebx
  40c87b:	leave  
  40c87c:	aaa    
  40c87d:	xchg   ecx,eax
  40c87e:	or     BYTE PTR [ebx+0x41696328],al
  40c884:	in     eax,0x97
  40c886:	jl     0x40c8a7
  40c888:	push   0xffffffb3
  40c88a:	or     esp,DWORD PTR [ecx-0x74]
  40c88d:	sub    al,0xa
  40c88f:	jmp    DWORD PTR [ecx-0x73be9585]
  40c895:	out    dx,al
  40c896:	enter  0xab03,0x48
  40c89a:	loopne 0x40c8fa
  40c89c:	dec    ebp
  40c89d:	ins    DWORD PTR es:[edi],dx
  40c89e:	leave  
  40c89f:	add    al,0x91
  40c8a1:	dec    esp
  40c8a2:	dec    ebx
  40c8a3:	add    BYTE PTR [ebp+ebp*2+0x284f000a],cl
  40c8aa:	test   ebx,ebp
  40c8ac:	cmpxchg esp,edi
  40c8af:	push   edx
  40c8b0:	pop    es
  40c8b1:	cmp    BYTE PTR [edx],al
  40c8b3:	or     ecx,DWORD PTR [ecx+eiz*8+0x4]
  40c8b7:	sub    ecx,0x71
  40c8ba:	or     dh,BYTE PTR [eax+eax*1+0x0]
	...
  40c8ce:	add    BYTE PTR [eax],al
  40c8d0:	mov    ebp,ebp
  40c8d2:	xor    al,0x0
  40c8d4:	loope  0x40c950
  40c8d6:	and    eax,0xcc24b7c0
  40c8db:	pop    es
  40c8dc:	mov    ebp,gs
  40c8de:	xor    DWORD PTR [esi-0x48],edi
  40c8e1:	pop    ebp
  40c8e2:	lea    edi,[ecx+edx*4]
  40c8e5:	int3   
  40c8e6:	dec    ecx
  40c8e7:	add    BYTE PTR [eax+eiz*4-0x49b3d4f9],cl
  40c8ee:	rol    ecx,0x94
  40c8f1:	ins    DWORD PTR es:[edi],dx
  40c8f2:	mov    dh,BYTE PTR [edi]
  40c8f4:	call   0x4469:0xb98b32a8
  40c8fb:	sub    esi,0x6d
  40c8fe:	add    eax,0x8d7379d2
  40c903:	jl     0x40c88d
  40c905:	ins    BYTE PTR es:[edi],dx
  40c906:	addr16 add al,0xa7
  40c909:	sub    eax,0xafeb23e5
  40c90e:	add    BYTE PTR [ebx-0x886b7],cl
  40c914:	(bad)  
  40c915:	ins    DWORD PTR es:[edi],dx
  40c916:	or     al,cl
  40c918:	in     al,dx
  40c919:	xchg   ebx,eax
  40c91a:	loope  0x40c96f
  40c91c:	mov    ah,0x3b
  40c91e:	js     0x40c918
  40c920:	ret    0x6ac3
  40c923:	dec    esi
  40c924:	test   dh,dl
  40c926:	scas   eax,DWORD PTR es:[edi]
  40c927:	clc    
  40c928:	cmp    BYTE PTR [eax+0x79deb91],dl
  40c92e:	aaa    
  40c92f:	clc    
  40c930:	cmp    edi,DWORD PTR [edi+0xc528]
	...
  40c946:	add    BYTE PTR [eax],al
  40c948:	xchg   ebx,eax
  40c949:	xchg   esp,eax
  40c94a:	or     bl,ch
  40c94c:	xchg   edx,eax
  40c94d:	call   0x8d41c24d
  40c952:	cdq    
  40c953:	add    esi,esi
  40c955:	xchg   esp,eax
  40c956:	push   ds
  40c957:	push   cs
  40c958:	jle    0x40c91c
  40c95a:	mov    al,ds:0xd0590f03
  40c95f:	or     al,0x4c
  40c961:	jmp    0x610953f2
  40c966:	mov    al,BYTE PTR [edi]
  40c968:	or     eax,ebx
  40c96a:	out    dx,eax
  40c96b:	push   edx
  40c96c:	fs es js 0x40c967
  40c970:	dec    edx
  40c971:	out    dx,eax
  40c972:	fisttp WORD PTR [eax-0x8cf9b38]
  40c978:	shl    BYTE PTR [eax-0x39],0x11
  40c97c:	mov    ?,esp
  40c97e:	and    BYTE PTR [edi+ecx*1],al
  40c981:	pop    ecx
  40c982:	in     al,0xa
  40c984:	dec    esp
  40c985:	call   0x6511527c
  40c98a:	arpl   WORD PTR [eax+ecx*4-0x6c],di
  40c98e:	adc    ebx,DWORD PTR [ebx]
  40c990:	pop    ss
  40c991:	aad    0xf7
  40c993:	inc    ebx
  40c994:	pop    esp
  40c995:	ins    BYTE PTR es:[edi],dx
  40c996:	adc    ecx,DWORD PTR [edx+edi*8+0xdc6b61]
  40c99d:	fsubr  DWORD PTR [edi-0x9]
  40c9a0:	jnp    0x40c92e
  40c9a2:	adc    dh,bh
  40c9a4:	jae    0x40c93e
  40c9a6:	or     BYTE PTR [ecx+0x6ef619f9],al
	...
  40c9c0:	xchg   sp,ax
  40c9c2:	sub    DWORD PTR [edi+edi*4-0x4e0b0a2f],0xffffffc2
  40c9ca:	inc    edi
  40c9cb:	jmp    0xc3421fde
  40c9d0:	mov    BYTE PTR [ecx+0x7c],ah
  40c9d3:	inc    ebp
  40c9d4:	mov    ds:0x489efe88,eax
  40c9d9:	xchg   esp,eax
  40c9da:	mov    DWORD PTR ds:0x92ca0d88,ebp
  40c9e0:	rcl    BYTE PTR [ebx+0x1],0xe9
  40c9e4:	fmul   QWORD PTR ds:0x90fd1ee5
  40c9ea:	cmc    
  40c9eb:	pushf  
  40c9ec:	xchg   DWORD PTR [ecx+0x1c],esp
  40c9ef:	or     al,0xe8
  40c9f1:	ror    DWORD PTR [eax],cl
  40c9f3:	push   0x4c
  40c9f5:	cdq    
  40c9f6:	pop    eax
  40c9f7:	(bad)  
  40c9f8:	fcom   QWORD PTR [eax+0x61877cf5]
  40c9fe:	sbb    al,0xf0
  40ca00:	out    dx,eax
  40ca01:	ror    DWORD PTR [eax],cl
  40ca03:	push   0xb
  40ca05:	cdq    
  40ca06:	xor    DWORD PTR [eax+ebx*4],0x49310b0b
  40ca0d:	push   ebx
  40ca0e:	add    eax,0xe50ddce9
  40ca13:	push   0xffffffeb
  40ca15:	js     0x40ca0d
  40ca17:	xor    al,0x94
  40ca19:	ins    BYTE PTR es:[edi],dx
  40ca1a:	ret    
  40ca1b:	and    ah,BYTE PTR gs:[edx+0x2]
  40ca1f:	test   eax,0xabbf989c
	...
  40ca38:	lahf   
  40ca39:	xchg   esp,eax
  40ca3a:	cmc    
  40ca3b:	adc    al,0x94
  40ca3d:	ins    BYTE PTR es:[edi],dx
  40ca3e:	mov    ah,0x47
  40ca40:	add    ah,BYTE PTR [edx+0x2]
  40ca43:	test   eax,0xbf9863
  40ca48:	aaa    
  40ca49:	test   DWORD PTR [eax],ecx
  40ca4b:	(bad)  
  40ca4c:	fcom   DWORD PTR [eax+0x6cb575f5]
  40ca52:	int    0xfd
  40ca54:	bound  ebp,QWORD PTR [edx+0x3]
  40ca57:	shr    al,0x60
  40ca5a:	rol    edx,0xc5
  40ca5d:	xchg   esp,eax
  40ca5e:	pusha  
  40ca5f:	jmp    0x6849a229
  40ca64:	(bad)  
  40ca66:	inc    edi
  40ca67:	add    BYTE PTR ds:0x62ff9aa5,bh
  40ca6d:	mov    cs,eax
  40ca6f:	jne    0x40ca23
  40ca71:	in     al,dx
  40ca72:	fbld   TBYTE PTR [eax-0x1c]
  40ca75:	xchg   esp,eax
  40ca76:	pusha  
  40ca77:	or     dl,BYTE PTR ds:0x80e808d9
  40ca7d:	push   es
  40ca7e:	idiv   edi
  40ca80:	outs   dx,BYTE PTR ds:[esi]
  40ca81:	push   esp
  40ca82:	pop    es
  40ca83:	test   BYTE PTR [eax-0x1ffff768],ch
  40ca89:	aam    0xf4
  40ca8b:	push   eax
  40ca8c:	(bad)  
  40ca8d:	lock add al,0xff
  40ca90:	cmp    BYTE PTR [ecx+0x56],dh
  40ca93:	inc    ecx
  40ca94:	gs adc ecx,edx
  40ca97:	or     BYTE PTR [esi],bh
  40ca99:	push   esp
  40ca9a:	pop    es
  40ca9b:	test   DWORD PTR [eax],eax
	...
  40caad:	add    BYTE PTR [eax],al
  40caaf:	add    BYTE PTR [eax],dl
  40cab1:	xchg   esp,eax
  40cab2:	or     BYTE PTR [eax],al
  40cab4:	iret   
  40cab5:	cwde   
  40cab6:	add    DWORD PTR [ebp+0x5d],0xffffffc9
  40caba:	(bad)  
  40cabb:	(bad)  
  40cabc:	mov    ebp,0x35416912
  40cac1:	imul   edi,DWORD PTR [ebp-0x4],0x60f78fe2
  40cac8:	fs cwde 
  40caca:	mov    esp,eax
  40cacc:	or     DWORD PTR [ebp+0x18680fc8],ecx
  40cad2:	or     DWORD PTR [eax],eax
  40cad4:	mov    WORD PTR [ebp-0x3],gs
  40cad7:	je     0x40cacd
  40cad9:	push   cs
  40cada:	push   es
  40cadb:	cmc    
  40cadc:	ins    BYTE PTR es:[edi],dx
  40cadd:	lods   al,BYTE PTR ds:[esi]
  40cade:	or     al,0x83
  40cae0:	enter  0x8979,0xf7
  40cae4:	jo     0x40cb47
  40cae6:	imul   eax
  40cae8:	data16 ins BYTE PTR es:[edi],dx
  40caea:	or     al,BYTE PTR [eax]
  40caec:	sbb    DWORD PTR [ecx],esi
  40caee:	out    0x4f,al
  40caf0:	ss ins DWORD PTR es:[edi],dx
  40caf2:	std    
  40caf3:	je     0x40caa9
  40caf5:	aad    0x18
  40caf7:	push   DWORD PTR [ebx-0x64400032]
  40cafd:	icebp  
  40cafe:	dec    ebx
  40caff:	add    DWORD PTR [ebp+ebp*2+0x6da07c89],ecx
  40cb06:	or     eax,0xa6c4984
  40cb0b:	add    BYTE PTR [esi*2+0x41080f0a],cl
  40cb12:	or     eax,DWORD PTR [eax]
	...
  40cb28:	mov    WORD PTR ds:0x2b785481,ds
  40cb2e:	pop    eax
  40cb2f:	call   0xff3cb9ec
  40cb34:	(bad)  
  40cb35:	in     al,0x35
  40cb37:	call   0xff26ab97
  40cb3c:	fst    DWORD PTR [ebp-0x112017a6]
  40cb42:	cld    
  40cb43:	dec    BYTE PTR [ebx-0x48]
  40cb46:	cld    
  40cb47:	(bad)  
  40cb48:	cmp    ebp,DWORD PTR [ebp+0xa]
  40cb4b:	(bad)  
  40cb4c:	leave  
  40cb4d:	and    DWORD PTR [edx],ecx
  40cb4f:	add    BYTE PTR [ebp+ebp*2-0x3372c377],cl
  40cb56:	dec    ecx
  40cb57:	add    BYTE PTR [eax+eiz*4-0x33e497a6],cl
  40cb5e:	dec    ecx
  40cb5f:	add    ah,dh
  40cb61:	xchg   ebx,eax
  40cb62:	imul   esi,DWORD PTR [edx-0x74],0x36c2f94
  40cb69:	cmc    
  40cb6a:	and    BYTE PTR [ebx+esi*8],al
  40cb6d:	call   0xe3aeb6f9
  40cb72:	fild   WORD PTR [ebx]
  40cb74:	xchg   edi,eax
  40cb75:	push   esp
  40cb76:	cld    
  40cb77:	sbb    esp,DWORD PTR [esi+ebx*2+0x1]
  40cb7b:	inc    ebx
  40cb7c:	mov    WORD PTR [esi+eax*2+0x72],gs
  40cb80:	mov    WORD PTR [edi+ebp*4-0x5f0b3d95],ss
  40cb87:	add    edi,DWORD PTR [ebx+0xeb47e8]
	...
  40cb9d:	add    BYTE PTR [eax],al
  40cb9f:	add    BYTE PTR [ecx-0x1d],cl
  40cba2:	fild   WORD PTR [ebx]
  40cba4:	xchg   edi,eax
  40cba5:	push   esp
  40cba6:	mov    ah,0x4b
  40cba8:	xor    al,0x96
  40cbaa:	rol    DWORD PTR [edx-0x74],0x6c
  40cbae:	bound  esi,QWORD PTR [edx-0x74]
  40cbb1:	xchg   esp,eax
  40cbb2:	(bad)  
  40cbb3:	imul   edx,DWORD PTR [edx-0x7cfc5f0e],0xffffffe8
  40cbba:	pop    ss
  40cbbb:	jmp    0x40cb62
  40cbbd:	loope  0x40cb9e
  40cbbf:	add    esp,DWORD PTR [edi-0x51]
  40cbc2:	bound  esi,QWORD PTR [esi]
  40cbc4:	(bad)  
  40cbc5:	repz mov al,ds:0xe9e78d03
  40cbcb:	imul   ecx,DWORD PTR [ebx+0x6403a0f2],0xffffffbe
  40cbd2:	jo     0x40cbd7
  40cbd4:	mov    esp,es
  40cbd6:	push   edi
  40cbd7:	add    ebp,DWORD PTR [esi-0x3f0d202d]
  40cbdd:	ins    BYTE PTR es:[edi],dx
  40cbde:	enter  0xbf0b,0x94
  40cbe2:	(bad)  
  40cbe4:	xchg   esi,eax
  40cbe5:	adc    DWORD PTR ds:0xdfd3ad05,ecx
  40cbeb:	add    eax,0x20892a1
  40cbf0:	dec    eax
  40cbf1:	mov    ecx,eax
  40cbf3:	xor    al,0x6e
  40cbf5:	cmovl  ebx,DWORD PTR [ebp-0x61f815a8]
  40cbfc:	jne    0x40cc5a
  40cbfe:	loope  0x40cbdc
  40cc00:	std    
  40cc01:	pop    esi
  40cc02:	test   BYTE PTR [esi+0x0],0x0
	...
  40cc15:	add    BYTE PTR [eax],al
  40cc17:	add    BYTE PTR [ebp+0x68],ah
  40cc1a:	pop    ecx
  40cc1b:	xchg   ecx,eax
  40cc1c:	scas   eax,DWORD PTR es:[edi]
  40cc1d:	pop    edi
  40cc1e:	idiv   BYTE PTR [esi+0x59]
  40cc21:	fdivr  st,st(0)
  40cc23:	fs inc ebp
  40cc25:	push   0x5d920359
  40cc2a:	jl     0x40cc8d
  40cc2c:	loopne 0x40cca8
  40cc2e:	neg    BYTE PTR [esi-0x41]
  40cc31:	pop    esi
  40cc32:	jl     0x40cc91
  40cc34:	pop    eax
  40cc35:	ins    BYTE PTR es:[edi],dx
  40cc36:	sbb    al,0x4c
  40cc38:	lahf   
  40cc39:	pop    esi
  40cc3a:	sub    BYTE PTR [ebx+eax*8-0x6fae8bee],0xe8
  40cc42:	cmp    al,0x6a
  40cc44:	sbb    eax,0xadb50970
  40cc49:	in     al,dx
  40cc4a:	or     cl,ch
  40cc4c:	outs   dx,BYTE PTR ds:[esi]
  40cc4d:	pop    ds
  40cc4e:	not    BYTE PTR [edi+esi*2+0x7f6bc775]
  40cc55:	pop    esi
  40cc56:	not    BYTE PTR [edi+eax*2+0x47f17c5e]
  40cc5d:	mov    eax,0x5e5efe89
  40cc62:	jl     0x40cc5d
  40cc64:	pop    esi
  40cc65:	call   0x11dacd6a
  40cc6a:	mul    dh
  40cc6c:	ds call 0x8cf5ab56
  40cc72:	loopne 0x40cc5a
  40cc74:	or     bl,BYTE PTR [esi-0xa]
  40cc77:	into   
  40cc78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc79:	fs loope 0x40cc7c
	...
  40cc90:	loope  0x40cc9d
  40cc92:	idiv   edi
  40cc94:	fcmovu st,st(3)
  40cc96:	in     al,0xe8
  40cc98:	dec    ecx
  40cc99:	or     al,0xf7
  40cc9b:	(bad)  
  40cc9c:	cmp    bl,ah
  40cc9e:	loopne 0x40cc88
  40cca0:	adc    DWORD PTR [edi+esi*8],ecx
  40cca3:	call   FWORD PTR [ecx+edx*1]
  40cca6:	hlt    
  40cca7:	call   FWORD PTR [edx]
  40cca9:	bound  edi,QWORD PTR [ebp-0x4]
  40ccac:	sbb    bh,BYTE PTR [ebx+eiz*8+0x60]
  40ccb0:	mov    ah,0x98
  40ccb2:	mov    esp,eax
  40ccb4:	icebp  
  40ccb5:	cmp    BYTE PTR [ecx-0x3e9da504],cl
  40ccbb:	ret    0x90e5
  40ccbe:	pop    ebx
  40ccbf:	mov    ebx,DWORD PTR [ecx-0x3a]
  40ccc2:	bound  eax,QWORD PTR [eax]
  40ccc4:	pop    edx
  40ccc5:	fadd   QWORD PTR [eax]
  40ccc7:	call   0x37acca
  40cccc:	cs dec ecx
  40ccce:	pop    ebx
  40cccf:	call   0x49adf3
  40ccd4:	sahf   
  40ccd5:	push   eax
  40ccd6:	jp     0x40ccf3
  40ccd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd9:	push   ebp
  40ccda:	dec    esi
  40ccdb:	jmp    0x40cd44
  40ccdd:	sbb    BYTE PTR [esi],bh
  40ccdf:	or     eax,0x38888d21
  40cce4:	jg     0x40ccc3
  40cce6:	or     eax,esi
  40cce8:	gs cwde 
  40ccea:	loope  0x40ccee
  40ccec:	mov    cs,WORD PTR [eax+eax*2-0x1d1d49c5]
  40ccf3:	mov    eax,DWORD PTR [eax]
	...
  40cd05:	add    BYTE PTR [eax],al
  40cd07:	add    BYTE PTR [esi+0x61c2bfca],ah
  40cd0d:	cwde   
  40cd0e:	pop    ebx
  40cd0f:	mov    ecx,DWORD PTR [ecx+0x12]
  40cd12:	retf   0x82b4
  40cd15:	gs jge 0x40cd24
  40cd18:	pop    ebp
  40cd19:	lds    eax,FWORD PTR [edx-0xbbd7301]
  40cd1f:	mov    edi,0xc95970a1
  40cd24:	dec    esi
  40cd25:	ds or  bh,bh
  40cd28:	mov    eax,ds:0xe04dd269
  40cd2d:	and    bh,al
  40cd2f:	or     cl,ah
  40cd31:	mov    eax,ds:0x2fd55f0d
  40cd36:	sbb    eax,0x1080fb00
  40cd3b:	(bad)  
  40cd3c:	jns    0x40cd9b
  40cd3e:	rcl    BYTE PTR [edi+eiz*8+0xa],cl
  40cd42:	clc    
  40cd43:	mov    WORD PTR [ecx-0x23],cs
  40cd46:	pop    esp
  40cd47:	jmp    DWORD PTR [ecx+0x69]
  40cd4a:	shl    cl,cl
  40cd4c:	push   es
  40cd4d:	jecxz  0x40cd46
  40cd4f:	or     cl,ah
  40cd51:	cmp    cl,BYTE PTR [esi+0xa6d8f07]
  40cd57:	inc    DWORD PTR [ecx-0x47]
  40cd5a:	div    DWORD PTR [esp+esi*4-0x2b]
  40cd5e:	mov    cl,0x8f
  40cd60:	stos   DWORD PTR es:[edi],eax
  40cd61:	retf   0xbff3
  40cd64:	xchg   ebx,eax
  40cd65:	jmp    0x6dcccf52
  40cd6a:	jae    0x40cdb0
	...
  40cd80:	mov    al,ds:0xcb7fe4f6
  40cd85:	ins    DWORD PTR es:[edi],dx
  40cd86:	or     DWORD PTR [edx+ebx*2-0x1cfff591],eax
  40cd8d:	test   DWORD PTR [ebp-0x1],ebx
  40cd90:	jae    0x40cd14
  40cd92:	jno    0x40cdd8
  40cd94:	cmp    al,0x8a
  40cd96:	jge    0x40cd68
  40cd98:	hlt    
  40cd99:	fld    TBYTE PTR [edx+0x41]
  40cd9c:	mov    WORD PTR [ebp+0x6d8c706b],es
  40cda2:	pop    edx
  40cda3:	inc    ecx
  40cda5:	jge    0x40cdfb
  40cda7:	jp     0x40cd56
  40cda9:	xchg   esp,eax
  40cdaa:	and    BYTE PTR [esp],al
  40cdad:	ror    DWORD PTR [edi+0x4],0x8c
  40cdb1:	(bad)  
  40cdb2:	fidiv  WORD PTR [esi+0x3c]
  40cdb5:	in     al,dx
  40cdb6:	inc    ebp
  40cdb7:	arpl   bp,cx
  40cdb9:	xchg   esp,eax
  40cdba:	xlat   BYTE PTR ds:[ebx]
  40cdbb:	dec    eax
  40cdbc:	pushf  
  40cdbd:	xchg   esp,eax
  40cdbe:	fisttp WORD PTR [ebp-0x4b]
  40cdc1:	(bad)  
  40cdc2:	lahf   
  40cdc3:	ja     0x40cd5d
  40cdc5:	(bad)  
  40cdc6:	xchg   ecx,eax
  40cdc7:	ja     0x40cd5d
  40cdc9:	(bad)  
  40cdca:	mov    eax,0xe20e1100
  40cdcf:	add    ecx,DWORD PTR [edi+ecx*4+0x539576a8]
  40cdd6:	sub    eax,0xdf948cb8
  40cddb:	add    esp,edi
  40cddd:	xchg   edx,eax
  40cdde:	scas   al,BYTE PTR es:[edi]
  40cddf:	inc    esi
  40cde0:	sbb    BYTE PTR [edi+ebx*8+0x3],dl
	...
  40cdf7:	add    BYTE PTR [eax+ebx*2+0x5b04c3b3],cl
  40cdfe:	outs   dx,DWORD PTR ds:[esi]
  40cdff:	lock mov edx,0x8b2b8665
  40ce05:	loope  0x40cde6
  40ce07:	enter  0x6c50,0xe0
  40ce0b:	add    ecx,DWORD PTR [esp+edx*4-0x7473cfa1]
  40ce12:	imul   ecx,DWORD PTR [ebx-0x72],0xffffff94
  40ce16:	fistp  WORD PTR [eax+0x74]
  40ce19:	cmp    ah,BYTE PTR [esi]
  40ce1b:	lock or BYTE PTR [eiz*4+0x17d80ebf],0x3
  40ce24:	stc    
  40ce25:	mov    bl,0x87
  40ce27:	push   esi
  40ce28:	mov    esp,0xd8f0dfd3
  40ce2d:	dec    eax
  40ce2e:	sbb    al,ch
  40ce30:	jmp    0x88a:0x13fcdf94
  40ce37:	ins    BYTE PTR es:[edi],dx
  40ce38:	cdq    
  40ce39:	xchg   esi,eax
  40ce3a:	or     cl,ch
  40ce3c:	push   esp
  40ce3d:	shl    eax,1
  40ce3f:	call   0xd04962d3
  40ce44:	xor    dl,BYTE PTR [eax+ecx*1-0x1f26f117]
  40ce4b:	call   0x44c057f4
  40ce50:	and    al,0x53
  40ce52:	dec    esp
  40ce53:	ror    DWORD PTR [esi-0x1716f76c],1
  40ce59:	push   esi
  40ce5a:	or     cl,ch
	...
  40ce70:	(bad)  
  40ce71:	adc    eax,0xdf8e9174
  40ce76:	add    eax,0xce747d70
  40ce7b:	sub    al,0xc8
  40ce7d:	xchg   esi,eax
  40ce7e:	or     cl,ch
  40ce80:	(bad)  
  40ce81:	imul   esp,DWORD PTR [edi-0x766b7018],0xfffffffc
  40ce88:	mov    bh,0x96
  40ce8a:	jnp    0x40ce72
  40ce8c:	dec    eax
  40ce8d:	fcom   st(4)
  40ce8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce90:	push   ebp
  40ce91:	ins    BYTE PTR es:[edi],dx
  40ce92:	or     eax,0xdf948fe9
  40ce97:	or     BYTE PTR [ecx+0x1d6a0894],0x6c
  40ce9e:	or     eax,0x740ca2d4
  40cea3:	and    ebx,edx
  40cea5:	shl    al,1
  40cea7:	in     al,0x8f
  40cea9:	xchg   esp,eax
  40ceaa:	or     BYTE PTR [eax+0x14],al
  40cead:	xchg   esp,eax
  40ceae:	or     cl,ch
  40ceb0:	push   cs
  40ceb1:	fsub   st,st(0)
  40ceb3:	in     al,dx
  40ceb4:	jp     0x40cec6
  40ceb6:	fs call 0x94c0634b
  40cebc:	inc    ebx
  40cebd:	push   ss
  40cebe:	je     0x40cf15
  40cec0:	mov    al,ah
  40cec2:	(bad)  
  40cec3:	jmp    FWORD PTR [edx+0x6502e0cb]
  40cec9:	xchg   ebp,eax
  40ceca:	or     bl,ch
  40cecc:	cmp    dl,BYTE PTR [edx+0x4d]
  40cecf:	call   0x4963ff
	...
  40cee8:	jmp    0x895:0x2500c8cb
  40ceef:	(bad)  
  40cef0:	js     0x40cf0a
  40cef2:	idiv   bh
  40cef4:	xor    eax,0xe945cd95
  40cef9:	xchg   esp,eax
  40cefa:	or     BYTE PTR [eax],al
  40cefc:	and    eax,0xf5bc4d52
  40cf01:	xchg   esp,eax
  40cf02:	or     BYTE PTR [eax],al
  40cf04:	sub    cl,ah
  40cf06:	mov    al,0x0
  40cf08:	in     eax,0x94
  40cf0a:	or     bh,bh
  40cf0c:	cwde   
  40cf0d:	ins    BYTE PTR es:[edi],dx
  40cf0e:	out    dx,al
  40cf0f:	adc    eax,DWORD PTR [ebx]
  40cf11:	push   0xfffffff7
  40cf13:	mov    DWORD PTR [eax+0x3175f750],ebp
  40cf19:	cmp    eax,0x6a52fe0e
  40cf1e:	add    DWORD PTR [ebp-0x13],0xdd47d69
  40cf25:	fs cmc 
  40cf27:	push   DWORD PTR [edx]
  40cf29:	fmul   DWORD PTR [esp+eax*8+0x26]
  40cf2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf2e:	pop    es
  40cf2f:	popa   
  40cf30:	hlt    
  40cf31:	xchg   esp,eax
  40cf32:	or     BYTE PTR [ebp-0x19],dh
  40cf35:	mov    esp,0x94e461fd
  40cf3a:	loopne 0x40cec3
  40cf3c:	ret    
  40cf3d:	xchg   esp,eax
  40cf3e:	or     BYTE PTR [eax+0x4d],dl
  40cf41:	pop    edi
  40cf42:	imul   eax,DWORD PTR [ecx+0x75],0x9dc07d67
  40cf49:	jbe    0x40cfc3
	...
  40cf5f:	add    BYTE PTR [ebp+0x5b],ah
  40cf62:	mov    dh,0x74
  40cf64:	mov    WORD PTR [ebp+0x52],fs
  40cf67:	(bad)  
  40cf68:	in     eax,dx
  40cf69:	sub    al,0xa
  40cf6b:	call   0x4acf57
  40cf70:	mov    esp,0xcd60e405
  40cf75:	ins    DWORD PTR es:[edi],dx
  40cf76:	out    0x74,eax
  40cf78:	dec    esp
  40cf79:	xchg   esi,eax
  40cf7a:	sbb    dh,BYTE PTR [eax-0x74]
  40cf7d:	ins    DWORD PTR es:[edi],dx
  40cf7e:	icebp  
  40cf7f:	mov    edi,0x65476b8
  40cf84:	scas   al,BYTE PTR es:[edi]
  40cf85:	lods   al,BYTE PTR ds:[esi]
  40cf86:	or     al,0xe8
  40cf88:	rcl    DWORD PTR [edi-0x3a43fff4],cl
  40cf8e:	push   cs
  40cf8f:	(bad)  
  40cf90:	int    0x6d
  40cf92:	in     eax,0x74
  40cf94:	int3   
  40cf95:	push   ebp
  40cf96:	cld    
  40cf97:	outs   dx,BYTE PTR ds:[esi]
  40cf98:	mov    WORD PTR [ebp-0x2f],gs
  40cf9b:	and    al,0xf
  40cf9d:	jno    0x40cfaa
  40cf9f:	popa   
  40cfa0:	dec    ebp
  40cfa1:	ins    DWORD PTR es:[edi],dx
  40cfa2:	or     esi,DWORD PTR [ebp-0x7a]
  40cfa5:	xchg   ebp,eax
  40cfa6:	repz popa 
  40cfa8:	dec    ebp
  40cfa9:	ins    DWORD PTR es:[edi],dx
  40cfaa:	shr    BYTE PTR [ebx],cl
  40cfac:	push   0x6d
  40cfae:	or     dl,BYTE PTR [eax+0x64]
  40cfb1:	pushw  0x8c41
  40cfb5:	fidivr WORD PTR [ebp-0x40]
  40cfb8:	mov    ah,0x1
  40cfba:	push   esp
  40cfbb:	add    BYTE PTR [edx+eax*8+0x62cc2b0a],cl
  40cfc2:	retf   0x74
	...
  40cfd5:	add    BYTE PTR [eax],al
  40cfd7:	add    BYTE PTR [esi],ch
  40cfd9:	mov    esi,0x37b4c87d
  40cfde:	push   esp
  40cfdf:	add    BYTE PTR [ebp+edi*8-0x3a3b8b1c],cl
  40cfe6:	out    dx,eax
  40cfe7:	stc    
  40cfe8:	mov    ebx,DWORD PTR [esi-0x59bfbb8f]
  40cfee:	jge    0x40cfb4
  40cff0:	fs xchg esp,eax
  40cff2:	sub    DWORD PTR [edi-0x74],ebx
  40cff5:	xchg   esp,eax
  40cff6:	scas   eax,DWORD PTR es:[edi]
  40cff7:	in     al,dx
  40cff8:	loopne 0x40d04a
  40cffa:	or     ch,dh
  40cffc:	fs push edi
  40cffe:	pop    es
  40cfff:	jnp    0x40cfd1
  40d001:	sbb    al,0x63
  40d003:	outs   dx,DWORD PTR ds:[esi]
  40d004:	dec    esp
  40d005:	xchg   esp,eax
  40d006:	jnp    0x40d03f
  40d008:	psubusw mm6,QWORD PTR [edi]
  40d00b:	add    al,0xb8
  40d00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d00e:	xchg   DWORD PTR [ebx],eax
  40d010:	mov    WORD PTR [edi-0x52],fs
  40d013:	in     al,dx
  40d014:	mov    eax,0xaab3d78c
  40d019:	push   edi
  40d01a:	fucomip st,st(4)
  40d01c:	cwde   
  40d01d:	push   esp
  40d01e:	(bad)  
  40d01f:	jbe    0x40cfa5
  40d021:	ins    BYTE PTR es:[edi],dx
  40d022:	out    0x83,eax
  40d024:	adc    dl,BYTE PTR [edi-0x49]
  40d027:	jbe    0x40d071
  40d029:	push   edi
  40d02a:	xor    eax,0x2757ebfc
  40d02f:	in     eax,dx
  40d030:	cli    
  40d031:	push   esi
  40d032:	adc    eax,0xf7e0f2ac
  40d037:	fcmovnu st,st(4)
  40d039:	(bad)  
  40d03a:	sahf   
  40d03b:	in     al,dx
	...
  40d050:	loop   0x40d032
  40d052:	lahf   
  40d053:	fcmovnb st,st(1)
  40d055:	adc    DWORD PTR [edi-0x481f2d14],ecx
  40d05b:	fcmovnu st,st(1)
  40d05d:	adc    DWORD PTR [edi-0x14],edi
  40d060:	ret    0xabe0
  40d063:	fcmovnbe st,st(1)
  40d065:	adc    DWORD PTR [edi-0x14],ebp
  40d068:	mov    dl,0xe0
  40d06a:	xchg   ebx,eax
  40d06b:	fucomi st,st(1)
  40d06d:	adc    DWORD PTR [edi-0x14],ebx
  40d070:	mov    ds:0xe1db97e0,al
  40d075:	adc    DWORD PTR [edi-0x14],ecx
  40d078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d079:	mov    BYTE PTR [edx+0x6e],ah
  40d07c:	je     0x40d00d
  40d07e:	or     BYTE PTR [eax+ecx*4-0x72beb3b3],bh
  40d085:	xchg   esp,eax
  40d086:	or     cl,ch
  40d088:	or     al,0xd9
  40d08a:	loopne 0x40d075
  40d08c:	jecxz  0x40d032
  40d08e:	pusha  
  40d08f:	mov    esp,0xe08d3bf
  40d094:	loop   0x40d0de
  40d096:	loope  0x40d0a9
  40d098:	mov    dl,0x94
  40d09a:	or     dl,dh
  40d09c:	dec    edi
  40d09d:	loope  0x40d0ac
  40d09f:	cs retf 0x86c
  40d0a3:	jmp    0xdaa16537
  40d0a8:	test   eax,0x9dde08d3
  40d0ad:	dec    eax
  40d0ae:	loope  0x40d069
  40d0b0:	lds    edx,FWORD PTR [eax+ecx*1+0xe2]
	...
  40d0c7:	add    BYTE PTR [edi-0x1f],cl
  40d0ca:	or     eax,0xb6ccdae
  40d0cf:	jmp    0x3d366563
  40d0d4:	inc    esp
  40d0d5:	outs   dx,BYTE PTR ds:[esi]
  40d0d6:	pusha  
  40d0d7:	imul   esp,edi,0x56
  40d0da:	cmc    
  40d0db:	fcmove st,st(7)
  40d0dd:	sbb    al,0xf6
  40d0df:	sahf   
  40d0e0:	not    DWORD PTR [esi-0x5]
  40d0e3:	inc    edi
  40d0e4:	mov    al,0x8d
  40d0e6:	add    eax,0xf6590764
  40d0eb:	xchg   bh,ah
  40d0ed:	loopne 0x40d0c7
  40d0ef:	xchg   ecx,eax
  40d0f0:	xchg   DWORD PTR [edx],edx
  40d0f2:	div    BYTE PTR [esi-0x49]
  40d0f5:	loopne 0x40d0db
  40d0f7:	or     DWORD PTR [edi+0x12],0xd03566f6
  40d0fe:	clc    
  40d0ff:	mov    ecx,0x5680dfc7
  40d104:	mov    bh,0x6d
  40d106:	in     eax,0x51
  40d108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d109:	push   esi
  40d10a:	push   esi
  40d10b:	add    BYTE PTR [esi+ecx*2+0x6],bl
  40d10f:	add    BYTE PTR [eax],ah
  40d111:	(bad)  
  40d112:	loope  0x40d095
  40d114:	mov    cl,0x24
  40d116:	hlt    
  40d117:	jmp    FWORD PTR [edx-0x544772af]
  40d11d:	imul   esi,edi,0x8917500
  40d123:	mov    esi,DWORD PTR [eax]
  40d125:	test   DWORD PTR [ecx],eax
  40d127:	rol    BYTE PTR [ecx],0x94
  40d12a:	mov    BYTE PTR [eax],bh
	...
  40d140:	gs in  al,0xb
  40d143:	jmp    0x496039
  40d148:	cmp    ah,ah
  40d14a:	sbb    al,0xe8
  40d14c:	sbb    eax,0x3efff6dc
  40d151:	push   ecx
  40d152:	jge    0x40d163
  40d154:	mov    ebp,0x354158c6
  40d159:	push   0x7d
  40d15b:	adc    al,0x4d
  40d15d:	add    ecx,DWORD PTR [ebp+0x5364aff]
  40d163:	push   0x47c0aa
  40d168:	cmp    ah,ah
  40d16a:	sbb    al,0xe8
  40d16c:	jb     0x40d182
  40d16e:	idiv   edi
  40d170:	jl     0x40d186
  40d172:	mov    esi,0x6e6a0afe
  40d177:	ds hlt 
  40d179:	nop
  40d17a:	or     BYTE PTR [ebp-0xbb090],cl
  40d180:	or     al,cl
  40d182:	loopne 0x40d183
  40d184:	xor    al,0x6a
  40d186:	test   DWORD PTR [ebp-0xbb0d0],0xb5f5c12a
  40d190:	in     eax,dx
  40d191:	push   0xfffffff7
  40d193:	(bad)  
  40d194:	cmp    eax,0x8c0063a0
  40d199:	imul   esi,DWORD PTR [ebp-0x7c],0xffffffd8
  40d19d:	(bad)  
  40d1a1:	pop    esi
  40d1a2:	jbe    0x40d189
	...
  40d1b8:	lea    edi,ds:0x80198d0a
  40d1be:	(bad)  
  40d1c0:	jnp    0x40d14d
  40d1c2:	or     edx,DWORD PTR [eax]
  40d1c4:	mov    WORD PTR ds:0xbf100f0a,?
  40d1ca:	or     DWORD PTR [eax],eax
  40d1cc:	mov    WORD PTR [eax+0x15bc2c4b],?
  40d1d2:	pop    ecx
  40d1d3:	push   eax
  40d1d4:	int    0x3d
  40d1d6:	ror    BYTE PTR [ecx],cl
  40d1d8:	mov    ecx,0x4c0b0a3d
  40d1dd:	ror    DWORD PTR [eax],1
  40d1df:	jmp    0x4b0ef8
  40d1e4:	add    ecx,edx
  40d1e6:	into   
  40d1e7:	std    
  40d1e8:	sub    esi,DWORD PTR [ebx+0x7e]
  40d1eb:	inc    ecx
  40d1ec:	jo     0x40d17b
  40d1ee:	push   esp
  40d1ef:	push   edi
  40d1f0:	mov    esp,0x21e80c7c
  40d1f5:	jmp    0x565:0xfd97000c
  40d1fc:	cmc    
  40d1fd:	xchg   BYTE PTR [ecx],cl
  40d1ff:	add    BYTE PTR [edx+eax*1-0xe1beb9a],cl
  40d206:	jo     0x40d206
  40d208:	jmp    0x40d250
  40d20a:	retf   0x9374
  40d20d:	xchg   ebp,eax
  40d20e:	sbb    cl,BYTE PTR [ecx+0x4d]
  40d211:	cmp    eax,0x257874e1
  40d216:	inc    DWORD PTR [ebx+0x9d3d2cb]
	...
  40d230:	ss cmp eax,0x15a074e1
  40d236:	jmp    0x40d1bb
  40d238:	mov    bl,0x94
  40d23a:	outs   dx,BYTE PTR ds:[esi]
  40d23b:	ja     0x40d23d
  40d23d:	push   edi
  40d23e:	push   esi
  40d23f:	jmp    0x17f2f3e6
  40d244:	ds in  al,0x47
  40d247:	push   ds
  40d248:	or     DWORD PTR [edi+ecx*2+0x54],edx
  40d24c:	fcom   QWORD PTR [ebx-0x43]
  40d24f:	adc    eax,DWORD PTR [ebx+0xe8ebc9]
  40d255:	popf   
  40d256:	inc    edi
  40d257:	cmc    
  40d258:	jno    0x40d2ad
  40d25a:	das    
  40d25b:	fsubr  QWORD PTR [ebp+0x74e91715]
  40d261:	and    al,0x3
  40d264:	mov    WORD PTR [ecx],fs
  40d266:	mov    ds:0x34190517,al
  40d26b:	jmp    0xb58d:0x2763534a
  40d272:	mov    al,ds:0xadc98f03
  40d277:	pop    ebx
  40d278:	je     0x40d22f
  40d27a:	and    BYTE PTR [ebx+ebp*1],al
  40d27d:	or     DWORD PTR [ecx+ebp*8+0x58c85322],ebx
  40d284:	test   eax,0xd3fcdf94
  40d289:	(bad)  
  40d28a:	sbb    al,0x5c
  40d28c:	mov    ds:0x30420dd,al
  40d291:	leave  
  40d292:	rcr    ebx,cl
	...
  40d2a8:	add    al,0x18
  40d2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ab:	call   0xe994dba2
  40d2b0:	jmp    0x9f17:0xbcdc3052
  40d2b7:	call   0x4218f07
  40d2bc:	jecxz  0x40d2cf
  40d2be:	adc    cl,ch
  40d2c0:	inc    eax
  40d2c1:	pushf  
  40d2c2:	xchg   edi,eax
  40d2c3:	(bad)  
  40d2c4:	jmp    0xd7b6dc1b
  40d2c9:	pop    esp
  40d2ca:	mov    DWORD PTR [esi-0x5c],ebp
  40d2cd:	cmp    ebx,ebp
  40d2cf:	jmp    0xa8a16763
  40d2d4:	cs aad 0x8
  40d2d7:	push   esi
  40d2d8:	jmp    0x203a:0xa44ef706
  40d2df:	aam    0x8f
  40d2e1:	xchg   esp,eax
  40d2e2:	add    DWORD PTR [ecx],ebp
  40d2e4:	repz and BYTE PTR [eax-0x21],0xb6
  40d2e9:	ror    DWORD PTR [eax],cl
  40d2eb:	cs loop 0x40d296
  40d2ee:	loopne 0x40d29a
  40d2f0:	jmp    0x40d344
  40d2f2:	neg    BYTE PTR [esi]
  40d2f4:	xor    al,BYTE PTR [esi]
  40d2f6:	not    DWORD PTR [esi]
  40d2f8:	fs loop 0x40d2db
  40d2fb:	(bad)  
  40d2fd:	push   edx
  40d2fe:	neg    BYTE PTR [ecx-0x1e736cc]
  40d304:	mov    cl,0xa0
  40d306:	pop    eax
  40d307:	imul   BYTE PTR [ecx+0x5ce09c]
	...
  40d31d:	add    BYTE PTR [eax],al
  40d31f:	add    BYTE PTR [edi],ah
  40d321:	push   ebx
  40d322:	not    cl
  40d324:	psrld  mm6,mm5
  40d327:	fisubr WORD PTR [ebx]
  40d329:	or     DWORD PTR [ebp-0x1eaccc29],edi
  40d32f:	pop    ds
  40d330:	mov    bh,0x94
  40d332:	or     BYTE PTR [edx-0x8],ch
  40d335:	xchg   ebx,eax
  40d336:	jp     0x40d30d
  40d338:	xchg   BYTE PTR [eax],ch
  40d33a:	mov    ebp,0xa52f3b7
  40d33f:	cdq    
  40d340:	(bad)  
  40d342:	or     ecx,DWORD PTR [edi]
  40d344:	adc    DWORD PTR [esi+eiz*1-0x1e69a2e6],ecx
  40d34b:	sub    DWORD PTR [eax],edi
  40d34d:	in     al,0x67
  40d34f:	sub    BYTE PTR [eax-0x76ff43af],cl
  40d355:	cmp    dh,bh
  40d357:	call   FWORD PTR ds:0xa5006256
  40d35d:	in     eax,0x60
  40d35f:	pop    esp
  40d360:	test   bh,dl
  40d362:	or     bh,bh
  40d364:	or     BYTE PTR ds:0x7042fff4,al
  40d36a:	mov    eax,0x5895a56c
  40d36f:	push   0x47b8cc
  40d374:	rol    BYTE PTR [ebx],cl
  40d376:	mov    edx,0xee39c2fe
  40d37b:	mov    eax,ds:0x5a089551
  40d380:	sbb    al,0x4e
  40d382:	mov    dh,0x75
	...
  40d398:	pop    ebp
  40d399:	dec    esi
  40d39a:	fdiv   DWORD PTR [ebp+0x69]
  40d39d:	dec    esi
  40d39e:	shl    DWORD PTR [ebx+edx*2-0x13],0x1e
  40d3a3:	dec    ecx
  40d3a4:	and    al,0x95
  40d3a6:	cmc    
  40d3a7:	jne    0x40d412
  40d3a9:	ins    DWORD PTR es:[edi],dx
  40d3aa:	mov    ecx,0xf73a4283
  40d3af:	mov    ch,0x79
  40d3b1:	cmp    dh,bh
  40d3b3:	call   DWORD PTR ds:0x3283f16d
  40d3b9:	cmp    al,BYTE PTR [esi-0x1]
  40d3bc:	mov    eax,0x3175f5a8
  40d3c1:	in     eax,0xf5
  40d3c3:	jne    0x40d3f2
  40d3c5:	ins    DWORD PTR es:[edi],dx
  40d3c6:	outs   dx,BYTE PTR ds:[esi]
  40d3c7:	cli    
  40d3c8:	sar    BYTE PTR [ecx],cl
  40d3ca:	out    dx,al
  40d3cb:	icebp  
  40d3cc:	ret    0xf739
  40d3cf:	lea    ebp,[eax+0x53]
  40d3d2:	hlt    
  40d3d3:	jmp    DWORD PTR [edx]
  40d3d5:	in     eax,0xf5
  40d3d7:	mov    ch,0x71
  40d3d9:	aaa    
  40d3da:	idiv   edi
  40d3dc:	std    
  40d3dd:	(bad)  [ecx+0x0]
  40d3e0:	mov    WORD PTR [ebx],?
  40d3e2:	mov    DWORD PTR [edi-0x1d7477d],edi
  40d3e8:	retf   
  40d3e9:	sbb    edi,ebp
  40d3eb:	mov    ah,0x0
  40d3ed:	shr    esi,1
  40d3ef:	(bad)  
  40d3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3f1:	stos   BYTE PTR es:[edi],al
  40d3f2:	push   ecx
  40d3f3:	add    BYTE PTR [edx+eax*8-0x46554848],cl
  40d3fa:	out    dx,al
  40d3fb:	out    0x0,eax
	...
  40d40d:	add    BYTE PTR [eax],al
  40d40f:	add    ch,cl
  40d411:	jno    0x40d402
  40d413:	inc    ch
  40d415:	jl     0x40d430
  40d417:	add    BYTE PTR [ecx],bh
  40d419:	mov    dh,0xdd
  40d41b:	inc    BYTE PTR [ecx]
  40d41d:	dec    edx
  40d41e:	out    dx,eax
  40d41f:	je     0x40d3bd
  40d421:	mov    ?,WORD PTR [eax+0xc]
  40d424:	jnp    0x40d437
  40d426:	repnz out 0xf9,eax
  40d429:	sub    dh,0xfe
  40d42c:	push   ebp
  40d42d:	jl     0x40d42c
  40d42f:	(bad)  
  40d430:	mov    eax,0x5082ddc2
  40d435:	scas   al,BYTE PTR es:[edi]
  40d436:	inc    esi
  40d437:	(bad)  
  40d438:	fnstenv [ecx-0x2e]
  40d43b:	mov    edx,0xaee9710
  40d440:	dec    esp
  40d441:	leave  
  40d442:	or     BYTE PTR [edi+0x45],bl
  40d445:	jl     0x40d444
  40d447:	push   DWORD PTR [edx]
  40d449:	leave  
  40d44a:	sbb    eax,ebp
  40d44c:	test   cl,0xeb
  40d44f:	(bad)  
  40d450:	xchg   edi,eax
  40d451:	std    
  40d452:	gs add eax,0xbcaf4bb
  40d458:	mov    WORD PTR [esi+0x66],ds
  40d45b:	or     al,0xf4
  40d45d:	add    DWORD PTR [ebx-0x2],esi
  40d460:	add    eax,DWORD PTR [ebx-0x36]
  40d463:	je     0x40d3f0
  40d465:	aad    0x6
  40d467:	dec    ecx
  40d468:	dec    ebp
  40d469:	cmp    eax,0x949874ed
  40d46e:	xchg   edi,eax
  40d46f:	add    cl,BYTE PTR [edi]
  40d471:	push   eax
  40d472:	xchg   edi,eax
  40d473:	fld    DWORD PTR [eax]
	...
  40d485:	add    BYTE PTR [eax],al
  40d487:	add    BYTE PTR [ebp+0x58e4dfba],al
  40d48d:	mov    al,ds:0x500dee87
  40d492:	(bad)  
  40d493:	jnp    0x40d4dd
  40d495:	dec    eax
  40d496:	sbb    bl,bh
  40d498:	sub    al,0xd5
  40d49a:	(bad)  
  40d49c:	cmp    BYTE PTR [eax-0x78],cl
  40d49f:	fimul  WORD PTR ds:0x487b6f50
  40d4a5:	dec    esp
  40d4a6:	fcomp  st(1)
  40d4a8:	cwde   
  40d4a9:	xchg   esp,eax
  40d4aa:	(bad)  
  40d4ac:	cmp    al,0xcf
  40d4ae:	inc    esi
  40d4af:	in     eax,0x14
  40d4b1:	(bad)  [ebx+0x5c]
  40d4b4:	mov    WORD PTR [edi+ebx*8-0x41279bfd],fs
  40d4bb:	in     al,0x72
  40d4bd:	sbb    eax,0xc96af3ad
  40d4c2:	daa    
  40d4c3:	fsub   QWORD PTR [edx+0x13]
  40d4c6:	pop    ss
  40d4c7:	in     eax,0x86
  40d4c9:	push   esp
  40d4ca:	out    dx,eax
  40d4cb:	jg     0x40d4dd
  40d4cd:	xchg   esp,eax
  40d4ce:	fild   WORD PTR [ebx]
  40d4d0:	dec    ebx
  40d4d1:	leave  
  40d4d2:	pop    es
  40d4d3:	pop    esp
  40d4d4:	xor    al,0x51
  40d4d6:	loopne 0x40d4db
  40d4d8:	cmp    ecx,ecx
  40d4da:	sti    
  40d4db:	fcomi  st,st(1)
  40d4dd:	mov    ecx,0x4c0f03df
  40d4e2:	loop   0x40d4d8
  40d4e4:	or     eax,edi
  40d4e6:	fild   WORD PTR [ebx]
  40d4e8:	mov    WORD PTR [ebx],ds
  40d4ea:	pop    ebp
  40d4eb:	call   0x40d4f0
	...
  40d500:	xchg   ebx,eax
  40d501:	(bad)  
  40d502:	fcomip st,st(4)
  40d504:	cvttps2pi mm4,xmm0
  40d507:	add    ecx,DWORD PTR [esp+edi*4-0x6bb29d23]
  40d50e:	or     BYTE PTR [esi],bl
  40d510:	shl    al,1
  40d512:	popa   
  40d513:	jmp    0x1e0970a7
  40d518:	jno    0x40d569
  40d51a:	jl     0x40d4bd
  40d51c:	aaa    
  40d51d:	dec    edi
  40d51e:	push   es
  40d51f:	jmp    0x99bd24b3
  40d524:	lods   al,BYTE PTR ds:[si]
  40d526:	aas    
  40d527:	sub    BYTE PTR [eax+0x4f081fbc],cl
  40d52d:	xchg   esp,eax
  40d52e:	pop    ebp
  40d52f:	cmp    DWORD PTR [edx+edi*4],0xea4e908
  40d536:	jge    0x40d4f9
  40d538:	test   al,0xc7
  40d53a:	lock ror DWORD PTR [esi+0x4ec816bc],cl
  40d541:	xchg   esp,eax
  40d542:	pop    ebp
  40d543:	inc    ecx
  40d544:	(bad)  
  40d545:	mov    edx,0x460ce908
  40d54a:	or     BYTE PTR [edx+ebp*4+0x68397c4d],dh
  40d551:	leave  
  40d552:	cld    
  40d553:	inc    ecx
  40d554:	test   eax,0xbf26f612
  40d559:	sbb    ecx,ebx
  40d55b:	adc    dl,BYTE PTR [esi-0x32]
  40d55e:	xor    al,dh
  40d560:	loop   0x40d4f3
  40d562:	into   
  40d563:	jmp    0x40d565
	...
  40d575:	add    BYTE PTR [eax],al
  40d577:	add    bl,dl
  40d579:	rol    BYTE PTR [ecx],cl
  40d57b:	sbb    esi,DWORD PTR [ebx-0x703c7769]
  40d581:	(bad)  
  40d582:	out    0xf6,al
  40d584:	mov    eax,ds:0xb9ee58a4
  40d589:	pushf  
  40d58a:	loopne 0x40d53a
  40d58c:	cs dec edi
  40d58e:	not    cl
  40d590:	scas   eax,DWORD PTR es:[edi]
  40d591:	into   
  40d592:	cmc    
  40d593:	(bad)  
  40d594:	and    esp,DWORD PTR [eax+0x4f0054f5]
  40d59a:	jl     0x40d59c
  40d59c:	inc    ebp
  40d59d:	xor    bh,BYTE PTR [ebp+0x8]
  40d5a0:	frstor [esi]
  40d5a2:	hlt    
  40d5a3:	(bad)  
  40d5a4:	cmp    dh,BYTE PTR ds:0x315cc03b
  40d5aa:	idiv   edi
  40d5ac:	sub    ah,BYTE PTR [edi-0x5c]
  40d5af:	cmp    dl,dh
  40d5b1:	mov    ds:0x31fa688b,al
  40d5b6:	idiv   edi
  40d5b8:	mov    al,ds:0x8b55ee6c
  40d5bd:	xor    edi,esi
  40d5bf:	inc    eax
  40d5c1:	popa   
  40d5c2:	out    dx,al
  40d5c3:	dec    ebp
  40d5c4:	mov    ebx,0xa0fff732
  40d5c9:	imul   ebp,esi,0xf732ab45
  40d5cf:	inc    eax
  40d5d1:	ins    DWORD PTR es:[edi],dx
  40d5d2:	out    dx,al
  40d5d3:	cmp    eax,0xfff732bb
  40d5d8:	pusha  
  40d5d9:	inc    ecx
  40d5da:	div    DWORD PTR [ebp+0x0]
	...
  40d5ed:	add    BYTE PTR [eax],al
  40d5ef:	add    BYTE PTR [ecx+0x32],bh
  40d5f2:	jge    0x40d5fc
  40d5f4:	fucom  st(6)
  40d5f6:	idiv   bh
  40d5f8:	mov    edx,0x49c2bfd1
  40d5fd:	xchg   ecx,eax
  40d5fe:	pop    ebx
  40d5ff:	mov    edi,DWORD PTR [ecx+0x15]
  40d602:	retf   0x7ae8
  40d605:	jmp    0x40d623
  40d607:	push   eax
  40d609:	inc    eax
  40d60a:	out    dx,al
  40d60b:	lea    ecx,[edi]
  40d60d:	xchg   ecx,eax
  40d60e:	or     BYTE PTR [ebx],cl
  40d610:	jne    0x40d5fe
  40d612:	pop    ebp
  40d613:	push   0x25
  40d615:	mov    ecx,0x90e46126
  40d61a:	cmc    
  40d61b:	jne    0x40d662
  40d61d:	xor    bh,BYTE PTR [ebp+0xc]
  40d620:	cmp    eax,0x3aff894e
  40d625:	sahf   
  40d626:	enter  0x8c74,0x7c
  40d62a:	cmp    al,0x50
  40d62c:	hlt    
  40d62d:	lock cmp dh,0x3
  40d631:	inc    edx
  40d632:	retf   0xbd73
  40d635:	les    eax,FWORD PTR [eax-0x18]
  40d638:	popaw  
  40d63a:	loop   0x40d67d
  40d63c:	push   cs
  40d63d:	(bad)  
  40d63e:	jmp    0x61fe:0xf5aecc0a
  40d645:	xchg   ebx,eax
  40d646:	cmp    al,0xe8
  40d648:	mov    esp,0x5cfeeabb
  40d64d:	push   ds
  40d64e:	push   ecx
  40d64f:	call   0x891ecb0
	...
  40d668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d669:	popa   
  40d66a:	call   0xc7538a6d
  40d66f:	jl     0x40d61c
  40d671:	mov    ebp,0xe2b474ea
  40d676:	into   
  40d677:	jl     0x40d614
  40d679:	in     eax,dx
  40d67a:	loope  0x40d639
  40d67c:	adc    esi,esp
  40d67e:	jmp    0x7400:0xa358c67
  40d685:	xchg   DWORD PTR [eax-0x1],ebp
  40d688:	jnp    0x40d64f
  40d68a:	inc    eax
  40d68b:	clc    
  40d68c:	add    ecx,edi
  40d68e:	aad    0x4f
  40d690:	imul   eax,DWORD PTR [ecx],0xfffffffa
  40d693:	(bad)  
  40d694:	fld    DWORD PTR [ecx-0x1e]
  40d697:	shl    ebp,cl
  40d699:	cmp    eax,0x294c0b0a
  40d69e:	pop    edx
  40d69f:	(bad)  
  40d6a0:	shr    DWORD PTR [ebp+0x3d8c0009],1
  40d6a6:	ret    
  40d6a7:	inc    esp
  40d6a8:	inc    eax
  40d6a9:	dec    ebx
  40d6aa:	add    BYTE PTR [eax],al
  40d6ac:	mov    WORD PTR [edi],ss
  40d6ae:	or     ch,BYTE PTR [edx-0x74]
  40d6b1:	pop    ss
  40d6b2:	or     ch,BYTE PTR [edx-0x74]
  40d6b5:	xchg   esp,eax
  40d6b6:	jl     0x40d6ff
  40d6b8:	and    ch,ah
  40d6ba:	(bad)  
  40d6bb:	push   edi
  40d6bc:	adc    al,0x4c
  40d6be:	push   ebp
  40d6bf:	aam    0xa
  40d6c1:	ret    0xecc3
  40d6c4:	xor    DWORD PTR [esi+0x548703df],edi
  40d6ca:	cmp    al,0x6
	...
  40d6e0:	out    0x8e,eax
  40d6e2:	inc    edi
  40d6e3:	cli    
  40d6e4:	push   esp
  40d6e5:	aad    0xdf
  40d6e7:	loopne 0x40d741
  40d6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ea:	xchg   edi,eax
  40d6eb:	push   es
  40d6ec:	or     eax,0x58e1974c
  40d6f1:	dec    esp
  40d6f2:	xor    ah,ch
  40d6f4:	pop    eax
  40d6f5:	adc    eax,0xd214e187
  40d6fa:	fwait
  40d6fb:	loope  0x40d73d
  40d6fd:	lods   al,BYTE PTR ds:[esi]
  40d6fe:	jbe    0x40d757
  40d700:	cwde   
  40d701:	dec    ebx
  40d702:	cmc    
  40d703:	out    dx,eax
  40d704:	stos   BYTE PTR es:[edi],al
  40d705:	rcl    ebx,0xe0
  40d708:	sbb    BYTE PTR [edi+edx*2+0x574b9afb],bl
  40d70f:	loope  0x40d729
  40d711:	cmp    BYTE PTR [eax+0x1d],cl
  40d714:	or     DWORD PTR [edi+eax*2-0x1f],ecx
  40d718:	enter  0x5b44,0x81
  40d71c:	jp     0x40d6df
  40d71e:	xor    ebp,esp
  40d720:	aad    0xbd
  40d722:	fild   WORD PTR [ebx]
  40d724:	imul   eax,ecx,0x37
  40d727:	in     al,dx
  40d728:	test   eax,0x44e12ec9
  40d72d:	push   esi
  40d72e:	cld    
  40d72f:	add    edi,DWORD PTR [ecx+0x4f830c1f]
  40d735:	inc    eax
  40d736:	push   es
  40d737:	loope  0x40d77b
  40d739:	mov    esi,0x4b706ddf
  40d73e:	jge    0x40d74b
  40d740:	and    al,0xd1
  40d742:	or     BYTE PTR [ebx+0x0],dh
	...
  40d755:	add    BYTE PTR [eax],al
  40d757:	add    BYTE PTR [edx+ecx*2],ch
  40d75a:	and    BYTE PTR [ebx+eax*2-0x5117f3ae],0xd5
  40d762:	or     cl,ch
  40d764:	(bad)  
  40d765:	xchg   esp,eax
  40d766:	or     BYTE PTR [edx+edx*1+0x42],ah
  40d76a:	test   esi,0xed60daec
  40d770:	mov    ss,WORD PTR [eax+ecx*1+0x8b33cd1]
  40d777:	jmp    0x28a93bf3
  40d77c:	mov    BYTE PTR [eax+eax*8+0x60944f08],bh
  40d783:	mov    ebp,DWORD PTR [esi-0x2b]
  40d786:	or     BYTE PTR [esi+0x283f8ea2],dl
  40d78c:	mov    BYTE PTR [ebx+0x7c],cl
  40d78f:	icebp  
  40d790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d791:	repnz idiv BYTE PTR [esi-0x54]
  40d795:	mov    dl,0xd8
  40d797:	or     BYTE PTR [edi-0x6c],cl
  40d79a:	pusha  
  40d79b:	mov    eax,ds:0xd108d52e
  40d7a0:	mov    cl,0xb3
  40d7a2:	inc    edi
  40d7a3:	jmp    0xe9496dcf
  40d7a8:	cmovnp edi,DWORD PTR [ecx+eiz*8+0x77]
  40d7ad:	push   ds
  40d7ae:	test   DWORD PTR [esi+0x6c],0x6d368c19
  40d7b5:	dec    ebx
  40d7b6:	neg    BYTE PTR [ecx-0x169f1d89]
	...
  40d7d0:	(bad)  
  40d7d4:	ins    BYTE PTR es:[edi],dx
  40d7d5:	rol    DWORD PTR [eax],0x11
  40d7d8:	push   edx
  40d7d9:	int3   
  40d7da:	cmc    
  40d7db:	push   ss
  40d7dc:	push   esi
  40d7dd:	push   esp
  40d7de:	or     eax,0xe51d7ae9
  40d7e3:	add    BYTE PTR [ecx+edx*2+0x6a32fefa],ah
  40d7ea:	pusha  
  40d7eb:	add    BYTE PTR [edi],cl
  40d7ed:	jae    0x40d7e4
  40d7ef:	jne    0x40d81e
  40d7f1:	ds mov ah,0x79
  40d7f4:	xor    ch,BYTE PTR [edx-0x7f]
  40d7f7:	inc    ebp
  40d7f8:	xor    DWORD PTR [edi+0x1149e812],edi
  40d7fe:	idiv   edi
  40d800:	out    dx,al
  40d801:	push   ebp
  40d802:	jp     0x40d828
  40d804:	pop    ebp
  40d805:	add    BYTE PTR [ecx+0x41],ch
  40d808:	in     eax,0x85
  40d80a:	loopne 0x40d86c
  40d80c:	jne    0x40d877
  40d80e:	not    DWORD PTR [eax+0x4d]
  40d811:	nop
  40d812:	sbb    bh,ch
  40d814:	jae    0x40d7ce
  40d816:	sbb    al,0x62
  40d818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d819:	nop
  40d81a:	pop    eax
  40d81b:	jmp    FWORD PTR [eax+0x484be098]
  40d821:	imul   esi,edi,0xf5b499e8
  40d827:	(bad)  
  40d828:	jmp    0x790:0x7461079b
  40d82f:	add    BYTE PTR [ebp+0x858395],dh
	...
  40d845:	add    BYTE PTR [eax],al
  40d847:	add    BYTE PTR [edx],bh
  40d849:	push   0xfffffff7
  40d84b:	call   ebp
  40d84d:	mov    ebp,0x9575010c
  40d852:	loopne 0x40d84d
  40d854:	dec    edx
  40d855:	xchg   ebp,eax
  40d856:	or     BYTE PTR [eax-0x6b],ch
  40d859:	scas   eax,DWORD PTR es:[edi]
  40d85a:	inc    edi
  40d85b:	add    BYTE PTR [ebp+0x5d],bl
  40d85e:	imul   eax,DWORD PTR [ecx+0x75],0x3461eabd
  40d865:	xchg   ebp,eax
  40d866:	cmc    
  40d867:	xor    eax,0x47d86f
  40d86c:	jb     0x40d859
  40d86e:	add    al,ch
  40d870:	mov    WORD PTR [ebp+0x1343fee7],gs
  40d876:	mov    edx,0x623bcd60
  40d87b:	enter  0xfcad,0x9
  40d87f:	push   0x4d1c2e
  40d884:	mov    ah,0x3d
  40d886:	or     al,BYTE PTR [eax]
  40d888:	or     al,0x32
  40d88a:	push   ecx
  40d88b:	or     BYTE PTR [ecx+eax*1],ah
  40d88e:	jmp    0x80f0e491
  40d893:	test   BYTE PTR [edx],0x5a
  40d896:	xlat   BYTE PTR ds:[ebx]
  40d897:	dec    edi
  40d898:	in     al,0x1c
  40d89a:	outs   dx,DWORD PTR ds:[esi]
  40d89b:	add    BYTE PTR [edx+ecx*1-0x781403af],cl
  40d8a2:	add    al,0xe8
  40d8a4:	imul   eax,DWORD PTR [ebp+edx*8+0xdfcc5fe],0x0
	...
  40d8c0:	cmp    esi,eax
  40d8c2:	in     eax,0x80
  40d8c4:	shl    BYTE PTR [esi],1
  40d8c6:	aam    0xfe
  40d8c8:	ret    
  40d8c9:	xchg   esp,eax
  40d8ca:	or     al,0x6a
  40d8cc:	jb     0x40d8e0
  40d8ce:	push   ecx
  40d8cf:	or     BYTE PTR [edx+eax*2-0x4c5400ab],ah
  40d8d6:	inc    eax
  40d8d7:	cld    
  40d8d8:	retf   
  40d8d9:	das    
  40d8da:	or     eax,0xa3b4d61
  40d8df:	add    BYTE PTR [ebx+edi*1-0x1f7c7b67],cl
  40d8e6:	(bad)  
  40d8e7:	(bad)  
  40d8e8:	fcom   QWORD PTR [ebp+0xe]
  40d8eb:	add    DWORD PTR [ebp+edi*1+0x3deb71e2],ecx
  40d8f2:	or     ch,BYTE PTR [eax-0x45]
  40d8f5:	pop    ebx
  40d8f6:	dec    ebp
  40d8f7:	add    ah,dh
  40d8f9:	nop
  40d8fa:	push   0x41
  40d8fc:	mov    WORD PTR [edi+edx*4-0x202a131f],ss
  40d903:	fiadd  WORD PTR [eax-0x73bb5776]
  40d909:	inc    edi
  40d90a:	popf   
  40d90b:	or     esp,DWORD PTR [esp+edi*4]
  40d90e:	or     al,0xde
  40d910:	xor    bh,BYTE PTR [ebp-0x6b329e3a]
  40d916:	xchg   DWORD PTR [eax],ebp
  40d918:	scas   al,BYTE PTR es:[edi]
  40d919:	aad    0xdf
  40d91b:	imul   ebp,DWORD PTR [esi],0xffffffb6
  40d91e:	and    BYTE PTR [esp+eiz*4],al
  40d921:	xchg   edx,eax
  40d922:	fild   WORD PTR [ebx]
	...
  40d938:	or     al,0x48
  40d93a:	push   ebp
  40d93b:	or     al,0xf4
  40d93d:	xlat   BYTE PTR ds:[ebx]
  40d93e:	(bad)  
  40d93f:	(bad)  
  40d941:	sbb    DWORD PTR [ebp-0x2b],esp
  40d944:	icebp  
  40d945:	inc    edi
  40d946:	mov    bh,0x34
  40d948:	hlt    
  40d949:	stos   DWORD PTR es:[edi],eax
  40d94a:	inc    esi
  40d94b:	add    al,0x8c
  40d94d:	inc    edi
  40d94e:	cmp    eax,0xf7c1dae0
  40d953:	jmp    0x40d908
  40d955:	int3   
  40d956:	xchg   esi,eax
  40d957:	fst    st(4)
  40d959:	push   edx
  40d95a:	in     al,0x3
  40d95c:	pop    ecx
  40d95d:	sbb    esi,DWORD PTR [ebx+eax*4-0x31]
  40d961:	inc    eax
  40d962:	mov    ds,ebp
  40d964:	mov    dl,0xba
  40d966:	fild   QWORD PTR [ecx+0x73]
  40d969:	inc    edi
  40d96a:	cmc    
  40d96b:	or     esi,DWORD PTR [ebp+edx*1+0x1d9adcf8]
  40d972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d973:	(bad)  
  40d975:	xchg   ecx,eax
  40d976:	loopne 0x40d9da
  40d978:	int    0x94
  40d97a:	fild   WORD PTR [ebx]
  40d97c:	mov    WORD PTR [esp+edx*2+0x4f468287],ss
  40d983:	ffree  st(3)
  40d985:	mov    esp,0x948c02eb
  40d98a:	or     BYTE PTR [ecx+0x75],al
  40d98d:	mov    cl,0x8
  40d98f:	jmp    0xa8abb77b
  40d994:	(bad)  
  40d995:	mov    esp,0x94ce8b49
  40d99a:	pusha  
  40d99b:	or     eax,DWORD PTR [eax]
	...
  40d9ad:	add    BYTE PTR [eax],al
  40d9af:	add    BYTE PTR [edi-0x5cf1f72b],ch
  40d9b5:	mov    bh,BYTE PTR [edi]
  40d9b7:	test   al,0x8f
  40d9b9:	inc    edi
  40d9ba:	jl     0x40d9ad
  40d9bc:	aaa    
  40d9bd:	xor    esi,ebp
  40d9bf:	test   BYTE PTR [eax-0x51],0x3f
  40d9c3:	mov    ecx,esi
  40d9c5:	xchg   esp,eax
  40d9c6:	pusha  
  40d9c7:	sub    ch,BYTE PTR [esi-0x11aef72b]
  40d9cd:	mov    bl,0x47
  40d9cf:	jmp    0xe9496c4b
  40d9d4:	cmovbe edi,DWORD PTR [ecx+esi*8-0x19]
  40d9d9:	dec    esi
  40d9da:	cmc    
  40d9db:	mov    esi,0xbe8c17c8
  40d9e0:	rol    DWORD PTR [ebp-0xa],0x19
  40d9e4:	call   0x902a490b
  40d9e9:	inc    edi
  40d9ea:	jl     0x40d989
  40d9ec:	call   0x86c1dab0
  40d9f1:	int3   
  40d9f2:	cmc    
  40d9f3:	mov    es,esi
  40d9f5:	push   esp
  40d9f6:	or     eax,0xe51b7ae9
  40d9fb:	push   0x76f742d3
  40da00:	sar    BYTE PTR [eax+ecx*1+0x7c476803],0xf1
  40da08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da09:	dec    esp
  40da0a:	jle    0x40da6a
  40da0c:	push   0x48554c1d
  40da11:	xchg   ecx,eax
  40da12:	pop    es
  40da13:	enter  0x0,0x0
	...
  40da27:	add    dh,cl
  40da29:	xchg   esp,eax
  40da2a:	or     BYTE PTR [eax],al
  40da2c:	gs xchg edx,eax
  40da2e:	or     BYTE PTR [ebp-0xb9f10],cl
  40da34:	call   0x892:0x64046081
  40da3b:	call   0x498a41
  40da40:	sbb    eax,0x35416ab3
  40da45:	mov    edx,0x91e4624f
  40da4a:	pusha  
  40da4b:	loop   0x40da51
  40da4d:	ror    DWORD PTR [eax],cl
  40da4f:	jmp    eax
  40da51:	stos   DWORD PTR es:[edi],eax
  40da52:	aas    
  40da53:	inc    ecx
  40da54:	xor    eax,0x8d087d69
  40da59:	xchg   ah,dh
  40da5b:	jmp    FWORD PTR [edx]
  40da5d:	mov    ecx,0x90b46267
  40da62:	pusha  
  40da63:	pop    ecx
  40da64:	push   edi
  40da65:	iret   
  40da66:	or     BYTE PTR [eax-0x39],ch
  40da69:	scas   eax,DWORD PTR es:[edi]
  40da6a:	inc    edi
  40da6b:	add    BYTE PTR [ebp-0x72],bl
  40da6e:	or     BYTE PTR [eax],al
  40da70:	jne    0x40dadb
  40da72:	jge    0x40da7c
  40da74:	int    0xcf
  40da76:	hlt    
  40da77:	jmp    FWORD PTR [edx]
  40da79:	sbb    al,0x8d
  40da7b:	imul   DWORD PTR [ebx]
  40da7d:	push   0xfffffff7
  40da7f:	push   eax
  40da80:	sbb    eax,0xb5006e9c
  40da85:	push   0x7d
  40da87:	cld    
  40da88:	or     ah,ah
  40da8a:	add    al,ch
	...
  40daa0:	pop    ss
  40daa1:	loop   0x40da98
  40daa3:	(bad)  
  40daa4:	fmul   QWORD PTR [esi+0xa]
  40daa7:	add    BYTE PTR [eax-0xe7c1deb],al
  40daad:	ins    BYTE PTR es:[edi],dx
  40daae:	pusha  
  40daaf:	add    BYTE PTR [edi+0x7d75f578],bh
  40dab5:	cmp    DWORD PTR [edi+esi*2-0x74],edi
  40dab9:	(bad)  
  40dabb:	mov    cl,dl
  40dabd:	xlat   BYTE PTR ds:[ebx]
  40dabe:	data16 add ah,ah
  40dac1:	mov    ch,0x6e
  40dac3:	inc    ecx
  40dac4:	mov    WORD PTR [ebx+0x46],fs
  40dac7:	(bad)  
  40dac8:	int    0x3b
  40daca:	shl    DWORD PTR [esi+edx*4],cl
  40dacd:	hlt    
  40dace:	dec    esp
  40dacf:	add    BYTE PTR [edi+ebp*1+0x51],ah
  40dad3:	dec    DWORD PTR [ebx+0x42]
  40dad6:	retf   0xa573
  40dad9:	or     esp,DWORD PTR [edx+0x0]
  40dadc:	mov    WORD PTR [esi-0x70],es
  40dadf:	sbb    bl,BYTE PTR [bx+di]
  40dae2:	dec    ebp
  40dae3:	add    BYTE PTR [esi+eax*2+0x3d340859],bh
  40daea:	lods   al,BYTE PTR ds:[esi]
  40daeb:	(bad)  
  40daec:	sbb    edx,DWORD PTR [ebx+0x2e137a09]
  40daf2:	add    BYTE PTR fs:[eax+edi*4+0x6b],dh
  40daf7:	inc    ecx
  40daf8:	mov    ebx,ss
  40dafa:	pop    eax
  40dafb:	bound  ecx,QWORD PTR [ebp+0x3b]
  40dafe:	shl    DWORD PTR [esi+esi*4],cl
  40db01:	test   BYTE PTR [ebx+0x0],cl
	...
  40db18:	hlt    
  40db19:	inc    edx
  40db1a:	push   ecx
  40db1b:	jmp    ebx
  40db1d:	xor    edx,ecx
  40db1f:	jae    0x40db96
  40db21:	stos   DWORD PTR es:[edi],eax
  40db22:	add    BYTE PTR fs:[esi+ebx*1-0x66dd9870],cl
  40db2a:	dec    ebx
  40db2b:	add    BYTE PTR [esi+ebx*1+0x59],bl
  40db2f:	or     BYTE PTR [eax+esi*8+0x22b3feab],ah
  40db36:	mov    edi,0xd2c5ab78
  40db3b:	je     0x40dadd
  40db3d:	mov    ebp,0x6ca40858
  40db42:	pop    ecx
  40db43:	call   DWORD PTR [ebx-0x703ac76d]
  40db49:	xchg   esp,eax
  40db4a:	mov    esp,0x2418778e
  40db4f:	xlat   BYTE PTR ds:[ebx]
  40db50:	loope  0x40db3d
  40db52:	leave  
  40db53:	add    esp,esi
  40db55:	outs   dx,BYTE PTR ds:[esi]
  40db56:	dec    esi
  40db57:	push   eax
  40db58:	xchg   esp,eax
  40db59:	sub    al,0x58
  40db5b:	push   ecx
  40db5c:	arpl   WORD PTR [ecx+ebp*2+0x40],ax
  40db60:	pop    eax
  40db61:	scas   eax,DWORD PTR es:[edi]
  40db62:	fucomip st,st(3)
  40db64:	push   ecx
  40db65:	ret    0xda2e
  40db68:	xchg   esi,eax
  40db69:	push   esp
  40db6a:	pushf  
  40db6b:	cld    
  40db6c:	shr    DWORD PTR [edi+ebx*8-0x77fcd4fd],cl
  40db73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db74:	lods   eax,DWORD PTR ds:[esi]
  40db75:	aad    0xdf
  40db77:	xor    ebp,DWORD PTR [ebx]
  40db79:	retf   0xebf7
	...
  40db90:	mov    ds:0x33d9fef6,eax
  40db95:	push   cs
  40db96:	jns    0x40db72
  40db98:	adc    dl,BYTE PTR [eax]
  40db9a:	adc    eax,0xdfd5539a
  40db9f:	mov    eax,es
  40dba1:	push   esi
  40dba2:	sub    BYTE PTR [ebx-0x74],al
  40dba5:	adc    al,0x7
  40dba7:	add    al,0x78
  40dba9:	fst    DWORD PTR [edi-0x6c]
  40dbac:	ins    DWORD PTR es:[edi],dx
  40dbad:	aad    0xdf
  40dbaf:	xor    ah,dh
  40dbb1:	xor    eax,0x8f8c0445
  40dbb6:	lahf   
  40dbb7:	push   eax
  40dbb8:	jae    0x40dba4
  40dbba:	xchg   edi,eax
  40dbbb:	(bad)  
  40dbbc:	cmove  edx,DWORD PTR [edi-0x206bcbcc]
  40dbc3:	call   0x668388c1
  40dbc8:	dec    ebp
  40dbc9:	xchg   esp,eax
  40dbca:	psubusw mm4,QWORD PTR [eax]
  40dbcd:	mov    WORD PTR [edi+0x943ee43],ss
  40dbd3:	jbe    0x40db7d
  40dbd5:	int    0x6f
  40dbd7:	outs   dx,BYTE PTR ds:[esi]
  40dbd8:	mov    ch,0x2e
  40dbda:	or     BYTE PTR [edi-0x2bf77ef1],ch
  40dbe0:	popa   
  40dbe1:	fxtract 
  40dbe3:	sbb    dl,BYTE PTR [eax-0x4]
  40dbe6:	cmc    
  40dbe7:	dec    esi
  40dbe8:	push   ebp
  40dbe9:	inc    edx
  40dbea:	sti    
  40dbeb:	xchg   edi,eax
  40dbec:	mov    BYTE PTR [ebx-0x37ba7d85],bl
  40dbf2:	hlt    
  40dbf3:	add    BYTE PTR ss:[eax],al
	...
  40dc06:	add    BYTE PTR [eax],al
  40dc08:	retf   
  40dc09:	mov    eax,fs
  40dc0b:	xchg   DWORD PTR [esi-0x7a3909bd],edi
  40dc11:	dec    ebp
  40dc12:	retf   
  40dc13:	in     eax,0x8f
  40dc15:	jmp    0x5751e19b
  40dc1a:	cmc    
  40dc1b:	mov    bh,0x7c
  40dc1d:	scas   al,BYTE PTR es:[edi]
  40dc1e:	or     BYTE PTR [ebx-0xe83bc88],dl
  40dc24:	aaa    
  40dc25:	fnstcw WORD PTR [esi-0xa]
  40dc28:	xor    al,0xc
  40dc2a:	dec    esp
  40dc2b:	in     eax,dx
  40dc2c:	add    BYTE PTR [eax-0x6bb0ce4a],cl
  40dc32:	sbb    DWORD PTR [edx+ecx*8],0xfe947da
  40dc39:	or     BYTE PTR [eax],0x55
  40dc3c:	mov    bl,0xac
  40dc3e:	leave  
  40dc3f:	dec    ebx
  40dc40:	dec    edi
  40dc41:	xchg   esp,eax
  40dc42:	pop    ebp
  40dc43:	shr    DWORD PTR [eax-0x47],1
  40dc46:	or     cl,ch
  40dc48:	mov    BYTE PTR [ebp+edi*2-0x32],dl
  40dc4c:	popf   
  40dc4d:	sub    al,0xbe
  40dc4f:	imul   esp,esp,0x41
  40dc52:	pop    ecx
  40dc53:	adc    DWORD PTR [eax+0x2757e594],ecx
  40dc59:	or     DWORD PTR [ebx+0x28],ebp
  40dc5c:	mov    ah,ah
  40dc5e:	cmc    
  40dc5f:	add    BYTE PTR [eax+0x54c3e08e],ch
  40dc65:	pop    esp
  40dc66:	imul   eax
  40dc68:	icebp  
  40dc69:	fdivrp st(5),st
  40dc6b:	inc    DWORD PTR [eax]
	...
  40dc7d:	add    BYTE PTR [eax],al
  40dc7f:	add    BYTE PTR [esi],cl
  40dc81:	xchg   esi,eax
  40dc82:	dec    esi
  40dc83:	xor    BYTE PTR [ebx+0x2bfa7b98],0x6a
  40dc8a:	cmp    eax,eax
  40dc8c:	sbb    al,0x5d
  40dc8e:	idiv   edi
  40dc90:	ret    0xa467
  40dc93:	cmp    BYTE PTR [edx-0x2d],bh
  40dc96:	mov    cl,0xff
  40dc98:	sbb    BYTE PTR [edx-0x9],ch
  40dc9b:	jne    0x40dd0a
  40dc9d:	cs cs jbe 0x40dc43
  40dca1:	pop    esp
  40dca2:	push   edi
  40dca3:	pop    esi
  40dca4:	jl     0x40dcfd
  40dca6:	or     al,BYTE PTR [eax]
  40dca8:	clc    
  40dca9:	adc    dl,ah
  40dcab:	sub    DWORD PTR [ecx+0x69],0x60
  40dcaf:	add    BYTE PTR [edi],cl
  40dcb1:	jp     0x40dca8
  40dcb3:	jne    0x40dcd2
  40dcb5:	shl    BYTE PTR cs:[ebp+0x22],0x6a
  40dcba:	add    DWORD PTR [ebp+0x21],0x256a08b1
  40dcc1:	scas   al,BYTE PTR es:[edi]
  40dcc2:	fldenv [edx-0x4c]
  40dcc5:	cwde   
  40dcc6:	pusha  
  40dcc7:	add    ch,dh
  40dcc9:	xchg   ebp,eax
  40dcca:	mov    al,ch
  40dccc:	jns    0x40dcab
  40dcce:	cmc    
  40dccf:	(bad)  
  40dcd0:	out    dx,al
  40dcd1:	push   ebp
  40dcd2:	jp     0x40dcf3
  40dcd4:	test   DWORD PTR [eax],esi
  40dcd6:	dec    edx
  40dcd7:	and    BYTE PTR [edx],0x6a
  40dcda:	inc    esi
  40dcdb:	push   0xbee595e5
  40dce0:	dec    ebp
  40dce1:	dec    esi
  40dce2:	push   0x41
	...
  40dcf7:	add    BYTE PTR [ebp-0x428a0a7b],dh
  40dcfd:	sub    eax,0x2a8ca146
  40dd02:	fsubrp st(7),st
  40dd04:	push   ebp
  40dd05:	mov    ds:0x40abfedd,eax
  40dd0a:	fdivp  st(6),st
  40dd0c:	sbb    DWORD PTR [ebx-0x1e],eax
  40dd0f:	retf   
  40dd10:	and    edx,ecx
  40dd12:	(bad)  
  40dd14:	into   
  40dd15:	aaa    
  40dd16:	or     dl,BYTE PTR [ebp+0x17]
  40dd19:	out    0x89,eax
  40dd1b:	ret    
  40dd1c:	and    BYTE PTR [ebp+0xa],0x6a
  40dd20:	test   eax,0x640857ea
  40dd25:	pop    ebx
  40dd26:	pop    ecx
  40dd27:	jmp    FWORD PTR [ebx-0x3c]
  40dd2a:	inc    edi
  40dd2b:	cld    
  40dd2c:	hlt    
  40dd2d:	sub    ecx,DWORD PTR [edx]
  40dd2f:	out    dx,eax
  40dd30:	sbb    dl,BYTE PTR [ebx+0xf]
  40dd33:	arpl   bp,cx
  40dd35:	sub    esp,DWORD PTR [edx+0x1b]
  40dd38:	scas   eax,DWORD PTR es:[edi]
  40dd39:	in     al,dx
  40dd3a:	or     edi,edi
  40dd3c:	mov    ecx,0xed5ae243
  40dd41:	test   eax,0x8fb9fedd
  40dd46:	fnsave [esp+edx*4-0x5d]
  40dd4a:	jnp    0x40ddc0
  40dd4c:	and    eax,DWORD PTR [edx-0x3b]
  40dd4f:	rcl    DWORD PTR [eax+0x208b392b],0xae
  40dd56:	enter  0x76fb,0x2b
  40dd5a:	pusha  
  40dd5b:	add    BYTE PTR cs:[eax],al
	...
  40dd6e:	add    BYTE PTR [eax],al
  40dd70:	add    ebp,eax
  40dd72:	add    al,0xe8
  40dd74:	shl    eax,0xdd
  40dd77:	inc    BYTE PTR ds:0x8c67d078
  40dd7d:	sub    ebp,edi
  40dd7f:	mov    ebp,0x41699974
  40dd84:	mov    ebx,ss
  40dd86:	adc    DWORD PTR [ebx+0x4d],esp
  40dd89:	sub    ebx,edi
  40dd8b:	je     0x40dd21
  40dd8d:	xchg   esp,eax
  40dd8e:	xchg   edi,eax
  40dd8f:	and    ebp,ebp
  40dd91:	inc    eax
  40dd92:	xchg   edi,eax
  40dd93:	imul   ecx,DWORD PTR [esp+edx*4-0x7cd46a72],0x2
  40dd9b:	inc    ebp
  40dd9c:	mov    WORD PTR [edx+ecx*8+0x76944d62],gs
  40dda3:	push   eax
  40dda4:	test   BYTE PTR [ecx+ebp*8],ch
  40dda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dda8:	xchg   edx,eax
  40dda9:	inc    eax
  40ddaa:	addr16 push eax
  40ddac:	mov    BYTE PTR [eax-0x2b],al
  40ddaf:	or     esi,DWORD PTR [eax+eax*4-0x24]
  40ddb3:	(bad)  
  40ddb4:	jp     0x40de04
  40ddb6:	and    bh,bh
  40ddb8:	jae    0x40dda3
  40ddba:	push   0xffffffe7
  40ddbc:	push   cs
  40ddbd:	pop    ecx
  40ddbe:	dec    esp
  40ddbf:	mov    bh,BYTE PTR [eax-0x1a0e855c]
  40ddc5:	xchg   esp,eax
  40ddc6:	ins    BYTE PTR es:[edi],dx
  40ddc7:	inc    eax
  40ddc8:	push   eax
  40ddc9:	in     eax,0x26
  40ddcb:	push   eax
  40ddcc:	xchg   esp,eax
  40ddcd:	stos   BYTE PTR es:[edi],al
  40ddce:	(bad)  
  40ddd0:	mov    eax,0x3116a4
	...
  40dde5:	add    BYTE PTR [eax],al
  40dde7:	add    BYTE PTR [eax+0x6b502019],bl
  40dded:	or     edi,DWORD PTR [ebp-0x2054e429]
  40ddf3:	imul   ecx,DWORD PTR [esp+ebp*4-0x6b73fe0a],0xaa804ffe
  40ddfe:	out    0xd5,al
  40de00:	jge    0x40dd9a
  40de02:	pop    ecx
  40de03:	add    al,0x76
  40de05:	xchg   esp,eax
  40de06:	xlat   BYTE PTR ds:[ebx]
  40de07:	mov    ebp,0x73df946d
  40de0c:	repnz leave 
  40de0e:	ret    
  40de0f:	in     al,dx
  40de10:	imul   esi,DWORD PTR [ebx+0x52d503df],0xb4103e4
  40de1a:	or     ebp,eax
  40de1c:	or     eax,0x7b62f554
  40de21:	test   al,0x81
  40de23:	sti    
  40de24:	xor    eax,0xd4248394
  40de29:	iret   
  40de2a:	cmc    
  40de2b:	sbb    al,0x84
  40de2d:	aas    
  40de2e:	jl     0x40de11
  40de30:	xor    eax,0xb3fcf594
  40de35:	ds pop ebx
  40de37:	rcr    DWORD PTR [edx],1
  40de39:	(bad)  
  40de3a:	jnp    0x40de0a
  40de3c:	add    al,0xe9
  40de3e:	hlt    
  40de3f:	pop    ecx
  40de40:	not    BYTE PTR [edx+eiz*2+0xa3ff7e9]
  40de47:	jmp    0xf9bd1ddb
	...
  40de60:	in     eax,0x3f
  40de62:	neg    bl
  40de64:	imul   ebp,DWORD PTR [ebp+0x2c8fd308],0x70
  40de6b:	retf   
  40de6c:	(bad)  
  40de6d:	xchg   esp,eax
  40de6e:	cwde   
  40de6f:	ss ret 
  40de71:	inc    eax
  40de72:	loope  0x40de6d
  40de74:	lods   al,BYTE PTR ds:[esi]
  40de75:	xchg   esp,eax
  40de76:	or     BYTE PTR [eax],dh
  40de78:	dec    esi
  40de79:	(bad)
  40de7d:	sub    ecx,DWORD PTR [edx-0x7619efd3]
  40de83:	mov    WORD PTR [edi],fs
  40de85:	aas    
  40de86:	jge    0x40de74
  40de88:	pop    eax
  40de89:	dec    ebp
  40de8a:	retf   
  40de8b:	aad    0x8f
  40de8d:	or     ebx,DWORD PTR [ebp+ebx*8+0x4]
  40de91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de92:	and    DWORD PTR [edi+eiz*1-0x27169d31],0xffffffc7
  40de9a:	add    al,0xde
  40de9c:	dec    edx
  40de9d:	mov    WORD PTR [edx-0x17],fs
  40dea0:	fadd   st,st(7)
  40dea2:	sbb    al,0xce
  40dea4:	popf   
  40dea5:	call   0xce75df35
  40deaa:	pop    edx
  40deab:	(bad)  
  40deac:	mov    al,0x1c
  40deae:	idiv   bh
  40deb0:	in     eax,0x92
  40deb2:	adc    DWORD PTR [ebp+0x3d],0x708d180c
  40deb9:	sbb    al,0x46
  40debb:	lea    esi,[eax+0x58]
  40debe:	inc    esi
  40debf:	push   0xffffffb5
  40dec1:	addr16 jge 0x40de7c
	...
  40ded8:	sbb    al,BYTE PTR [ebp+0x1c888304]
  40dede:	div    BYTE PTR [ebx-0x30]
  40dee1:	adc    eax,0xce1ac075
  40dee6:	sbb    al,0xff
  40dee8:	add    BYTE PTR [edx-0x9],0x37
  40deec:	jmp    0xf58a:0x60ff04ce
  40def3:	push   ebp
  40def4:	jge    0x40df5f
  40def6:	aas    
  40def7:	call   0x4992b1
  40defc:	test   BYTE PTR [eax],0xa
  40deff:	jmp    FWORD PTR [eax]
  40df01:	es jge 0x40dee4
  40df04:	into   
  40df05:	sbb    al,BYTE PTR [ebx+0x180cbd55]
  40df0b:	jmp    DWORD PTR [eax]
  40df0d:	sbb    dh,bh
  40df0f:	push   edx
  40df10:	cmp    eax,0x31c2bf89
  40df15:	xchg   edx,eax
  40df16:	pop    ebx
  40df17:	mov    ebp,DWORD PTR [ecx]
  40df19:	adc    al,0xca
  40df1b:	clc    
  40df1c:	mov    ebp,DWORD PTR [eax-0x9]
  40df1f:	push   edi
  40df20:	sahf   
  40df21:	outs   dx,BYTE PTR ds:[esi]
  40df22:	sbb    BYTE PTR [ebx-0x772e8c9],cl
  40df28:	sti    
  40df29:	popa   
  40df2a:	not    DWORD PTR [eax+0x5f]
  40df2d:	cwde   
  40df2e:	cmc    
  40df2f:	jne    0x40df2e
  40df31:	fisttp WORD PTR [eax]
  40df33:	dec    DWORD PTR [eax+eiz*8-0x70c10104]
  40df3a:	jg     0x40defb
	...
  40df50:	pop    ecx
  40df51:	loope  0x40df14
  40df53:	test   al,bl
  40df55:	std    
  40df56:	fsin   
  40df58:	mov    WORD PTR [ebx],gs
  40df5a:	or     al,BYTE PTR [eax]
  40df5c:	pop    ss
  40df5d:	jmp    0xf704dd26
  40df62:	jne    0x40df75
  40df64:	or     DWORD PTR [ecx+0x26b3fdd8],edi
  40df6a:	cmp    eax,0xdb2c118d
  40df6f:	(bad)  
  40df70:	mov    ds:0x9b10569b,eax
  40df75:	mov    ah,al
  40df77:	std    
  40df78:	xchg   ebx,eax
  40df79:	(bad)  
  40df7a:	fst    DWORD PTR [ecx-0x68]
  40df7d:	stos   BYTE PTR es:[edi],al
  40df7e:	xchg   edi,eax
  40df7f:	sti    
  40df80:	xor    BYTE PTR [esi-0x67000027],0x87
  40df87:	mov    esp,0xfed9e68c
  40df8c:	imul   ebp,DWORD PTR [eax-0x2],0xfffffffe
  40df90:	fstp   DWORD PTR [ebx-0x25]
  40df93:	je     0x40df1d
  40df95:	(bad)  es:[esp+eax*4-0x2d]
  40df9a:	add    edi,edi
  40df9c:	dec    ebx
  40df9d:	outs   dx,BYTE PTR ds:[esi]
  40df9e:	(bad)  
  40df9f:	(bad)  
  40dfa0:	pushf  
  40dfa1:	jbe    0x40df2a
  40dfa3:	sti    
  40dfa4:	cmp    bl,BYTE PTR [esi-0x6dd08b27]
  40dfaa:	mov    eax,ds:0xdaa3018a
  40dfaf:	(bad)  
  40dfb0:	and    eax,edx
  40dfb2:	(bad)  
  40dfb3:	inc    BYTE PTR [eax]
	...
  40dfc5:	add    BYTE PTR [eax],al
  40dfc7:	add    cl,ah
  40dfc9:	xchg   edx,eax
  40dfca:	(bad)  
  40dfcc:	adc    eax,DWORD PTR [esi+0x3c]
  40dfcf:	or     BYTE PTR [ebx+0x74],ch
  40dfd2:	into   
  40dfd3:	jl     0xe7c0146d
  40dfd9:	adc    ch,BYTE PTR [ebx+ecx*8+0x3adf3cf1]
  40dfe0:	pop    ss
  40dfe1:	out    0xd3,eax
  40dfe3:	jle    0x40e062
  40dfe5:	pcmpgtw mm1,mm3
  40dfe8:	fnstcw WORD PTR [edi+esi*4]
  40dfeb:	xor    esp,DWORD PTR [esi-0x6c]
  40dfee:	dec    ecx
  40dfef:	add    al,0xcb
  40dff1:	(bad)  
  40dff2:	rcl    edx,cl
  40dff4:	pop    ebp
  40dff5:	jl     0x40e05b
  40dff7:	ret    
  40dff8:	inc    eax
  40dff9:	mov    dl,0xae
  40dffb:	dec    eax
  40dffc:	mov    al,0x93
  40dffe:	fild   WORD PTR [ebx]
  40e000:	mov    WORD PTR [ebx+ebp*2],fs
  40e003:	js     0x40dfa0
  40e005:	cmp    eax,0xa206d28f
  40e00a:	fs dec eax
  40e00c:	nop
  40e00d:	jecxz  0x40e07b
  40e00f:	mov    BYTE PTR [edi-0x2c2d98c5],al
  40e015:	scas   al,BYTE PTR es:[edi]
  40e016:	out    dx,eax
  40e017:	rol    BYTE PTR [eax+0x3d],cl
  40e01a:	push   esi
  40e01b:	shl    BYTE PTR [edx+0x3c],cl
  40e01e:	mov    dl,0xff
  40e020:	sbb    ebx,DWORD PTR [eax]
  40e022:	(bad)
  40e025:	or     al,0xb4
  40e027:	es or  edx,edi
  40e02a:	xor    edx,ecx
	...
  40e040:	push   edx
  40e041:	cmp    al,0x50
  40e043:	rol    al,cl
  40e045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e046:	es pop eax
  40e048:	nop
  40e049:	cmp    edx,DWORD PTR [ebp-0x1dd31d05]
  40e04f:	shl    BYTE PTR [edx],cl
  40e051:	cmp    al,0x63
  40e053:	retf   0x249b
  40e056:	pop    es
  40e057:	inc    eax
  40e058:	and    BYTE PTR ds:0x300be975,ah
  40e05e:	inc    edi
  40e05f:	jle    0x40e059
  40e061:	cmp    al,0x9
  40e063:	neg    ebp
  40e065:	cmp    al,BYTE PTR [edx-0xeff2125]
  40e06b:	out    0xdd,eax
  40e06d:	cmp    dh,dh
  40e06f:	cmp    esi,eax
  40e071:	fidivr DWORD PTR [edi+0x5b948cab]
  40e077:	(bad)  
  40e078:	in     al,dx
  40e079:	cmp    bh,BYTE PTR [ecx+esi*8-0x44]
  40e07d:	rcl    BYTE PTR [eax],0xd1
  40e080:	test   al,0xc6
  40e082:	cmc    
  40e083:	mov    dh,0xdd
  40e085:	rol    BYTE PTR [ecx+eax*8],0xa3
  40e089:	mov    ch,0x8
  40e08b:	jmp    0xa9cb3c8e
  40e090:	mov    ah,ah
  40e092:	cmc    
  40e093:	sbb    al,0x8c
  40e095:	cmp    edi,DWORD PTR [ecx+esi*8-0x39]
  40e099:	js     0x40e115
  40e09b:	xchg   BYTE PTR [ebp-0x432a83c6],bh
  40e0a1:	rcr    BYTE PTR [eax],0x76
	...
  40e0b8:	jecxz  0x40e056
  40e0ba:	loopne 0x40e07a
  40e0bc:	fnstcw WORD PTR [ebx]
  40e0be:	div    BYTE PTR [eax]
  40e0c0:	push   edx
  40e0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0c2:	or     BYTE PTR [eax+esi*8+0x67dcf62f],dh
  40e0c9:	cmp    bh,BYTE PTR [ecx+esi*8+0x47]
  40e0cd:	xor    bh,BYTE PTR [eax+0x46]
  40e0d0:	cmp    eax,0x37ed7c3a
  40e0d5:	xchg   edi,eax
  40e0d6:	push   0x58d48fe9
  40e0db:	fisttp DWORD PTR cs:[eax+0x33279cf5]
  40e0e2:	add    DWORD PTR [ebx-0x6309c5a4],ebx
  40e0e8:	and    edi,DWORD PTR [edx]
  40e0ea:	jl     0x40e0e5
  40e0ec:	cmp    al,0xc0
  40e0ee:	adc    BYTE PTR [eax],al
  40e0f0:	jge    0x40e13c
  40e0f2:	jns    0x40e0f3
  40e0f4:	adc    bh,dh
  40e0f6:	(bad)  
  40e0f7:	adc    al,0xf5
  40e0f9:	add    DWORD PTR [ecx-0x25b38b14],0xf763f2f7
  40e103:	jne    0x40e092
  40e105:	mov    ebx,0x63c1008c
  40e10a:	not    DWORD PTR [eax-0x2e]
  40e10d:	loope  0x40e10f
  40e10f:	call   0x382aee
  40e114:	aas    
  40e115:	nop
  40e116:	bound  eax,QWORD PTR [eax]
  40e118:	dec    ebp
  40e119:	or     eax,DWORD PTR gs:[eax]
	...
  40e130:	mov    ch,0xb9
  40e132:	mov    WORD PTR [eax],es
  40e134:	in     eax,dx
  40e135:	arpl   di,si
  40e137:	push   eax
  40e138:	lahf   
  40e139:	div    DWORD PTR gs:[ebp-0x5b]
  40e13d:	fmul   DWORD PTR [eax]
  40e13f:	push   0xffffffb5
  40e141:	pop    esi
  40e142:	adc    al,0x60
  40e144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e145:	xchg   esi,eax
  40e146:	int    0x85
  40e148:	adc    eax,0x65fff75c
  40e14d:	xchg   esi,eax
  40e14e:	or     BYTE PTR [eax],al
  40e150:	sub    dl,BYTE PTR [ebx]
  40e152:	cli    
  40e153:	div    edx
  40e155:	or     BYTE PTR fs:[eax],al
  40e158:	gs xchg esi,eax
  40e15a:	int    0x85
  40e15c:	mov    ebp,0x75fff75c
  40e161:	xchg   esi,eax
  40e162:	or     BYTE PTR [eax],al
  40e164:	stos   BYTE PTR es:[edi],al
  40e165:	adc    dh,dl
  40e167:	not    DWORD PTR [edx+0x35fff664]
  40e16d:	xchg   esi,eax
  40e16e:	adc    DWORD PTR [ebp+0x5d],0x256a17b9
  40e175:	mov    ebx,0x649af08c
  40e17a:	not    DWORD PTR [eax-0x74]
  40e17d:	mov    al,0x8e
  40e17f:	jmp    0x40e19c
  40e181:	mov    ebx,eax
  40e183:	dec    edi
  40e184:	or     DWORD PTR [ecx+0x3b13f6d1],ebp
  40e18a:	cmp    edi,edi
  40e18c:	sbb    DWORD PTR [ebx-0x27],0x5c2a9074
  40e193:	or     BYTE PTR [eax],al
	...
  40e1a5:	add    BYTE PTR [eax],al
  40e1a7:	add    BYTE PTR [esi+0x2b],ah
  40e1aa:	(bad)  
  40e1ab:	je     0x40e141
  40e1ad:	pop    edx
  40e1ae:	cmp    eax,DWORD PTR [edi+ecx*1+0x21]
  40e1b2:	aad    0xf6
  40e1b4:	jecxz  0x40e200
  40e1b6:	or     eax,0xd30100f
  40e1bb:	add    BYTE PTR [esi+ebp*4+0x2c3eb97],cl
  40e1c2:	(bad)  
  40e1c3:	call   DWORD PTR [edx-0x73ff0a51]
  40e1c9:	sub    ecx,edi
  40e1cb:	test   al,bl
  40e1cd:	and    al,dh
  40e1cf:	dec    BYTE PTR [ebx+ebp*1+0x7534bdd7]
  40e1d6:	imul   eax,DWORD PTR [ecx-0x74],0x97ff7fc0
  40e1dd:	mov    edx,0xe7744fc5
  40e1e2:	and    eax,0xccb08c00
  40e1e7:	jae    0x40e1b7
  40e1e9:	push   0x7f
  40e1eb:	sar    DWORD PTR [ebx-0x26],cl
  40e1ee:	lds    eax,FWORD PTR [eax]
  40e1f0:	mov    edx,ss
  40e1f2:	xchg   BYTE PTR [edi-0x40],ah
  40e1f5:	dec    esi
  40e1f6:	dec    ebp
  40e1f7:	add    BYTE PTR [ecx],cl
  40e1f9:	test   al,0xc
  40e1fb:	cld    
  40e1fc:	push   ebx
  40e1fd:	jp     0x40e23b
  40e1ff:	call   0x4b03f5
  40e204:	or     DWORD PTR [ebx+0x50],ebp
  40e207:	and    edx,DWORD PTR [ebx-0x6c]
  40e20a:	fs mov eax,0x0
	...
  40e220:	cmp    bh,BYTE PTR [ecx]
  40e222:	pop    ss
  40e223:	add    cl,BYTE PTR [ecx+ebp*1-0x4a67a3a2]
  40e22a:	mov    al,ds:0xe00f0903
  40e22f:	iret   
  40e230:	adc    bh,BYTE PTR [ecx]
  40e232:	nop
  40e233:	fist   DWORD PTR [ecx]
  40e235:	(bad)  
  40e237:	add    ecx,DWORD PTR [ecx]
  40e239:	push   esp
  40e23a:	xlat   BYTE PTR ds:[ebx]
  40e23b:	mov    BYTE PTR [esi],ch
  40e23d:	xchg   esp,eax
  40e23e:	fild   WORD PTR [ebx]
  40e240:	fs or  al,0x43
  40e243:	inc    ebp
  40e244:	mov    WORD PTR [edi],es
  40e246:	gs add esp,esp
  40e249:	cmp    bh,al
  40e24b:	xor    esp,esp
  40e24d:	stos   BYTE PTR es:[edi],al
  40e24e:	aas    
  40e24f:	add    al,0x8c
  40e251:	lea    ebx,[edi-0x2eac2a9]
  40e257:	not    DWORD PTR [edi-0x2d]
  40e25a:	fild   WORD PTR [ebx]
  40e25c:	mov    edx,DWORD PTR [eax]
  40e25e:	popa   
  40e25f:	add    ecx,DWORD PTR [esp+edx*4+0x40b39896]
  40e266:	lahf   
  40e267:	into   
  40e268:	adc    cl,BYTE PTR [edi]
  40e26a:	adc    dh,0x9a
  40e26d:	cmp    BYTE PTR [edi+0x7740a798],cl
  40e273:	into   
  40e274:	sbb    dl,BYTE PTR [edx]
  40e276:	test   dh,dl
  40e278:	cmp    BYTE PTR [eax],0x55
  40e27b:	mov    BYTE PTR [ebx+0x40],ah
  40e27e:	outs   dx,DWORD PTR ds:[esi]
  40e27f:	into   
  40e280:	ret    
  40e281:	stos   BYTE PTR es:[edi],al
  40e282:	loopne 0x40e2dd
	...
  40e298:	mov    WORD PTR [edx-0x5573a621],gs
  40e29e:	fild   WORD PTR [eax-0x31c8caf0]
  40e2a4:	push   edx
  40e2a5:	in     eax,0x36
  40e2a7:	clc    
  40e2a8:	lahf   
  40e2a9:	enter  0xa808,0x8f
  40e2ad:	mov    ecx,eax
  40e2af:	mov    ch,0xd2
  40e2b1:	aaa    
  40e2b2:	jl     0x40e2b1
  40e2b4:	inc    edx
  40e2b5:	add    ecx,edx
  40e2b7:	push   ss
  40e2b8:	pop    edx
  40e2b9:	aaa    
  40e2ba:	neg    BYTE PTR [ebx+esi*8+0x3e]
  40e2be:	test   BYTE PTR [esi],0x4a
  40e2c1:	rcr    DWORD PTR [eax],0x6
  40e2c4:	hlt    
  40e2c5:	arpl   si,di
  40e2c7:	(bad)  
  40e2c8:	fldcw  WORD PTR [edi]
  40e2ca:	sbb    edi,esi
  40e2cc:	shl    DWORD PTR [esi],1
  40e2ce:	div    BYTE PTR [ebx+ebp*1]
  40e2d1:	aas    
  40e2d2:	mul    dh
  40e2d4:	shr    BYTE PTR [ebp+0x2b8fe956],1
  40e2da:	adc    al,0xd6
  40e2dc:	cmp    esp,DWORD PTR [eax+0x3eb894f5]
  40e2e2:	test   dh,0xc1
  40e2e5:	add    ch,ah
  40e2e7:	mov    dh,0xd9
  40e2e9:	idiv   BYTE PTR ss:[eax+edi*4]
  40e2ed:	ss mov esp,0xf636e195
  40e2f3:	xchg   ecx,eax
  40e2f4:	stos   BYTE PTR es:[edi],al
  40e2f5:	cmp    dh,dh
  40e2f7:	sahf   
  40e2f8:	fld    DWORD PTR [eax]
  40e2fa:	in     eax,0x9e
	...
  40e310:	shl    DWORD PTR [esi],1
  40e312:	loope  0x40e31d
  40e314:	imul   edx,DWORD PTR [eax+ecx*1+0x8a3ceb0],0x8a2c0514
  40e31f:	lods   eax,DWORD PTR ds:[esi]
  40e320:	sbb    cl,ah
  40e322:	cmc    
  40e323:	hlt    
  40e324:	jnp    0x40e355
  40e326:	add    al,dh
  40e328:	(bad)  
  40e329:	xchg   esp,eax
  40e32a:	add    DWORD PTR [ecx],ebp
  40e32c:	ret    
  40e32d:	xchg   ecx,eax
  40e32e:	push   esi
  40e32f:	and    BYTE PTR [esi-0x75],cl
  40e332:	or     BYTE PTR [eax],bh
  40e334:	jo     0x40e348
  40e336:	leave  
  40e337:	add    BYTE PTR [edi-0x44],ah
  40e33a:	lds    ecx,FWORD PTR [ebp+0x524656f0]
  40e340:	jp     0x40e321
  40e342:	add    al,0xe8
  40e344:	pushf  
  40e345:	mov    bh,0xf6
  40e347:	call   FWORD PTR [esi-0x6]
  40e34a:	or     BYTE PTR [ebp+0x61],0x5d
  40e34e:	add    BYTE PTR [esi],dh
  40e350:	sub    ah,BYTE PTR [ecx]
  40e352:	dec    edx
  40e353:	sub    DWORD PTR [ecx],ebx
  40e355:	xchg   edx,eax
  40e356:	dec    ebx
  40e357:	aam    0xe4
  40e359:	adc    esi,ecx
  40e35b:	adc    al,0x87
  40e35d:	bound  esp,QWORD PTR [ebx]
  40e35f:	imul   BYTE PTR [edi+ebx*8-0x28]
  40e363:	jmp    0x40e332
  40e365:	mov    al,ds:0x96a1b605
  40e36a:	in     al,0x50
  40e36c:	cmp    eax,0xf5416b4c
  40e371:	mov    ch,0x4c
  40e373:	fadd   DWORD PTR [eax]
	...
  40e385:	add    BYTE PTR [eax],al
  40e387:	add    BYTE PTR [ebp-0x1aa0f9a8],dl
  40e38d:	xchg   edx,eax
  40e38e:	mov    esp,eax
  40e390:	mov    ecx,0xa5d84cb5
  40e395:	dec    ecx
  40e396:	jge    0x40e368
  40e398:	int    0xec
  40e39a:	jnp    0x40e39b
  40e39c:	jmp    0xf415:0x73d04cb9
  40e3a3:	adc    al,0x87
  40e3a5:	add    eax,0x47e16589
  40e3aa:	idiv   bh
  40e3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3ad:	inc    edi
  40e3ae:	jge    0x40e384
  40e3b0:	popf   
  40e3b1:	dec    esp
  40e3b2:	imul   eax,DWORD PTR [ecx+0x75],0xffffffb7
  40e3b6:	dec    esp
  40e3b7:	fcom   DWORD PTR [ebp+0x655ed658]
  40e3bd:	xchg   edx,eax
  40e3be:	mov    esp,eax
  40e3c0:	jns    0x40e379
  40e3c2:	dec    esp
  40e3c3:	fmul   DWORD PTR [ebx+edi*8-0x2bc38b3c]
  40e3ca:	(bad)  
  40e3cb:	jne    0x40e420
  40e3cd:	iret   
  40e3ce:	jb     0x40e414
  40e3d0:	pop    esp
  40e3d1:	test   eax,0x7edccc4e
  40e3d6:	pop    esi
  40e3d7:	shl    BYTE PTR [esp+esi*2+0x6e8c4168],1
  40e3de:	push   ds
  40e3df:	cmp    dl,ch
  40e3e1:	in     al,dx
  40e3e2:	or     eax,ebp
  40e3e4:	fstp   DWORD PTR [eax]
  40e3e6:	(bad)  
  40e3e9:	imul   esi,esp,0xffffff83
	...
  40e400:	sti    
  40e401:	sub    ecx,DWORD PTR [edx]
  40e403:	add    BYTE PTR ds:0x8182b1f1,dl
  40e409:	outs   dx,DWORD PTR ds:[esi]
  40e40a:	or     DWORD PTR [edi],ecx
  40e40c:	adc    BYTE PTR [edx+0x2e8c0009],ch
  40e412:	pop    eax
  40e413:	or     al,0xf4
  40e415:	ins    DWORD PTR es:[edi],dx
  40e416:	and    al,BYTE PTR [eax]
  40e418:	mov    esp,?
  40e41a:	in     al,dx
  40e41b:	or     ah,0x29
  40e41e:	jne    0x40e464
  40e420:	sbb    al,0x4f
  40e422:	pop    eax
  40e423:	or     al,0x1b
  40e425:	jno    0x40e3bf
  40e427:	(bad)  
  40e428:	cmp    edi,ebp
  40e42a:	jno    0x40e470
  40e42c:	int3   
  40e42d:	out    0x57,al
  40e42f:	enter  0x6903,0xc8
  40e433:	(bad)  
  40e434:	push   ecx
  40e435:	xlat   BYTE PTR ds:[ebx]
  40e436:	or     al,0x0
  40e438:	mov    WORD PTR [ebx],gs
  40e43a:	(bad)  
  40e43b:	cmp    al,0x80
  40e43d:	xchg   edi,eax
  40e43e:	dec    ebx
  40e43f:	add    BYTE PTR [edi+esi*1-0x2c2e72c6],cl
  40e446:	cmp    al,0x6a
  40e448:	lea    edx,[ecx-0x277395f4]
  40e44e:	inc    edi
  40e44f:	mov    al,0xdc
  40e451:	xchg   esp,eax
  40e452:	fld    DWORD PTR [ebx]
  40e454:	sbb    edi,ecx
  40e456:	pop    ds
  40e457:	xor    al,0x63
  40e459:	lahf   
  40e45a:	repz aaa 
  40e45c:	int    0x94
  40e45e:	jmp    0x49:0x6282dfc3
	...
  40e475:	add    BYTE PTR [eax],al
  40e477:	add    BYTE PTR [eax],cl
  40e479:	xchg   esp,eax
  40e47a:	mov    ebx,0xcfb70f17
  40e47f:	add    eax,eax
  40e481:	mov    WORD PTR [edx+0x31],gs
  40e484:	pushf  
  40e485:	scas   al,BYTE PTR es:[edi]
  40e486:	es push es
  40e488:	imul   edx,DWORD PTR [esi+edx*1-0x6aca6baf],0xffffff8b
  40e490:	sbb    bh,BYTE PTR [edi-0x776734bd]
  40e496:	xchg   edi,eax
  40e497:	push   es
  40e498:	mov    WORD PTR ds:0x381cdc36,fs
  40e49e:	dec    edx
  40e4a0:	cli    
  40e4a1:	mov    esi,0xd7e1dc23
  40e4a6:	fild   WORD PTR [ebx]
  40e4a8:	jmp    0x40e468
  40e4aa:	mov    bh,0xdb
  40e4ac:	loope  0x40e470
  40e4ae:	fmulp  st(2),st
  40e4b0:	fidivr DWORD PTR [esi-0x3d262451]
  40e4b6:	into   
  40e4b7:	retf   0x4b69
  40e4ba:	mov    ds:0x6adfc3f7,al
  40e4bf:	xlat   BYTE PTR ds:[ebx]
  40e4c0:	push   cs
  40e4c1:	push   eax
  40e4c2:	test   al,0x78
  40e4c4:	dec    eax
  40e4c5:	cmp    BYTE PTR [eax],dh
  40e4c7:	pop    esp
  40e4c8:	in     al,dx
  40e4c9:	mov    al,0x20
  40e4cb:	add    al,0x36
  40e4cd:	(bad)
  40e4d1:	and    al,0x3
  40e4d3:	inc    ebp
  40e4d4:	mov    WORD PTR [edx+eax*4],gs
  40e4d7:	sub    BYTE PTR [esp+edx*4+0xc36c],cl
	...
  40e4ee:	add    BYTE PTR [eax],al
  40e4f0:	xchg   edx,eax
  40e4f1:	sbb    al,0x9
  40e4f3:	test   eax,0x6208948f
  40e4f8:	mov    esp,0xe4fb8230
  40e4fd:	fdiv   st,st(0)
  40e4ff:	mov    ecx,0x56f4a956
  40e504:	mov    eax,ds:0x56298b90
  40e509:	sbb    al,0x97
  40e50b:	jmp    0xbcca799f
  40e510:	push   edi
  40e511:	xor    al,0x7
  40e513:	ins    DWORD PTR es:[edi],dx
  40e514:	stos   DWORD PTR es:[edi],eax
  40e515:	xor    esi,esi
  40e517:	jmp    0xea1dbe6a
  40e51c:	(bad)  
  40e51d:	xchg   esp,eax
  40e51e:	or     BYTE PTR [esi],ah
  40e520:	int3   
  40e521:	dec    esp
  40e522:	or     ecx,ebp
  40e524:	(bad)  
  40e525:	xchg   esp,eax
  40e526:	int    0xa4
  40e528:	fistp  QWORD PTR [ebx+0x8]
  40e52b:	jmp    0x2d8d40bf
  40e530:	(bad)  
  40e531:	xchg   esp,eax
  40e532:	or     cl,ch
  40e534:	jp     0x40e4fe
  40e536:	lock (bad) 
  40e538:	stc    
  40e539:	and    BYTE PTR [ebp+esi*4-0x60],cl
  40e53d:	and    DWORD PTR [ecx+edi*4-0x68],ecx
  40e541:	mov    esi,0x2c4bd607
  40e546:	idiv   BYTE PTR [ebx]
  40e548:	aam    0x9e
  40e54a:	enter  0x7c3c,0x17
  40e54e:	je     0x40e4fd
  40e550:	(bad)
	...
  40e568:	push   ebx
  40e569:	dec    eax
  40e56a:	or     DWORD PTR ds:0xac8bc4e,esi
  40e570:	dec    edi
  40e571:	xchg   esp,eax
  40e572:	cmc    
  40e573:	adc    al,0xdc
  40e575:	cmp    esp,esi
  40e577:	xor    al,0x90
  40e579:	xchg   esp,eax
  40e57a:	add    DWORD PTR [ecx+0x6e9e3c],ebp
  40e580:	cmp    bl,BYTE PTR [eax+0x73fc0008]
  40e586:	shr    bl,0x6a
  40e589:	push   esp
  40e58a:	dec    ebp
  40e58b:	enter  0x9765,0x8
  40e58f:	add    dl,dh
  40e591:	jecxz  0x40e553
  40e593:	(bad)  
  40e594:	cmp    BYTE PTR [ebx],al
  40e596:	div    DWORD PTR [ebp+0x6d]
  40e599:	dec    edi
  40e59a:	in     al,dx
  40e59b:	std    
  40e59c:	ret    0xf75d
  40e59f:	jne    0x40e54a
  40e5a1:	push   eax
  40e5a2:	xor    BYTE PTR [ebp+0x35],bl
  40e5a5:	xchg   edi,eax
  40e5a6:	mov    DWORD PTR [ebp-0x63],edi
  40e5a9:	cwde   
  40e5aa:	jl     0x40e5b4
  40e5ac:	(bad)  
  40e5ae:	shr    al,1
  40e5b0:	inc    ecx
  40e5b1:	jp     0x40e5bb
  40e5b3:	add    BYTE PTR [esi-0x54],bh
  40e5b6:	adc    BYTE PTR [ebp+0x7d],0xb1
  40e5ba:	pop    ss
  40e5bb:	(bad)  
  40e5bc:	clc    
  40e5bd:	pop    esi
  40e5be:	not    DWORD PTR [edx-0x3]
  40e5c1:	scas   eax,DWORD PTR es:[edi]
  40e5c2:	pop    esp
  40e5c3:	cld    
  40e5c4:	jle    0x40e5f0
  40e5c6:	div    DWORD PTR [ebp+0x1]
  40e5c9:	pop    esp
  40e5ca:	pop    eax
  40e5cb:	or     BYTE PTR [eax],al
	...
  40e5dd:	add    BYTE PTR [eax],al
  40e5df:	add    BYTE PTR [edx+ebx*2-0x4e57fff6],ch
  40e5e6:	loope  0x40e56b
  40e5e8:	sub    DWORD PTR [edi],esi
  40e5ea:	pop    esp
  40e5eb:	add    DWORD PTR [eax-0x1abe936c],0xffffff96
  40e5f2:	jnp    0x40e612
  40e5f4:	cli    
  40e5f5:	xor    DWORD PTR [edx],ecx
  40e5f7:	fs je  0x40e592
  40e5fa:	pop    es
  40e5fb:	add    BYTE PTR [ebp+0x4908b696],ah
  40e601:	xlat   BYTE PTR ds:[ebx]
  40e602:	or     bl,ch
  40e604:	mov    edx,0xb726c7b4
  40e609:	pop    ss
  40e60a:	int3   
  40e60b:	add    cl,BYTE PTR [ebx+eiz*4-0x7773c275]
  40e612:	fild   DWORD PTR [edx+0x41351bc9]
  40e618:	mov    WORD PTR [ebx],?
  40e61a:	icebp  
  40e61b:	xor    DWORD PTR [edi+0x3c],0xa
  40e61f:	add    BYTE PTR [edi],cl
  40e621:	add    DWORD PTR [esi+0xa3bcd4a],ebp
  40e627:	invd   
  40e629:	loop   0x40e634
  40e62b:	add    BYTE PTR [esi+edi*4-0x33febf2],cl
  40e632:	or     DWORD PTR [eax],eax
  40e634:	fwait
  40e635:	mov    edi,0x3c43ffea
  40e63a:	leave  
  40e63b:	inc    esp
  40e63c:	cmp    BYTE PTR [edx+ecx*1],bh
  40e63f:	add    BYTE PTR [edx+edi*2+0xf836],cl
	...
  40e656:	add    BYTE PTR [eax],al
  40e658:	mov    WORD PTR [ebx],?
  40e65a:	or     al,BYTE PTR [eax]
  40e65c:	adc    ecx,edi
  40e65e:	int    0x4f
  40e660:	or     DWORD PTR [ecx],eax
  40e662:	ret    0xa64f
  40e665:	cmp    edx,DWORD PTR [edx+0x52]
  40e668:	jo     0x40e666
  40e66a:	or     edi,edi
  40e66c:	cdq    
  40e66d:	(bad)  
  40e66e:	xor    al,0x41
  40e670:	mov    WORD PTR [esi],?
  40e672:	retf   0x80e
  40e675:	push   0x9
  40e677:	add    BYTE PTR [esi+edi*4+0x428cf83f],cl
  40e67e:	jbe    0x40e62b
  40e680:	mov    WORD PTR [ebx],?
  40e682:	or     al,BYTE PTR [ebx+0xf0d5f51]
  40e688:	adc    BYTE PTR [esi],bl
  40e68a:	or     eax,0x57a68c00
  40e68f:	cld    
  40e690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e691:	mov    ebp,0x898c000c
  40e696:	jno    0x40e6cd
  40e698:	stos   DWORD PTR es:[edi],eax
  40e699:	xchg   esp,eax
  40e69a:	adc    eax,0x8fd812ec
  40e69f:	(bad)  
  40e6a0:	and    DWORD PTR [eax-0x4367be92],edx
  40e6a6:	out    0x5f,eax
  40e6a8:	int    0x94
  40e6aa:	xchg   edi,eax
  40e6ab:	in     eax,dx
  40e6ac:	out    0x94,eax
  40e6ae:	fbstp  TBYTE PTR [ebx+ebx*2+0x502a015]
  40e6b5:	xlat   BYTE PTR ds:[ebx]
  40e6b6:	jg     0x40e714
  40e6b8:	xchg   esp,eax
  40e6b9:	mov    eax,0x3a0
	...
  40e6ce:	add    BYTE PTR [eax],al
  40e6d0:	adc    edx,edi
  40e6d2:	dec    ebx
  40e6d3:	mov    edi,0x3e040d0
  40e6d8:	mov    WORD PTR [esp+edx*2-0x263bcbbf],ss
  40e6df:	add    al,0xb6
  40e6e1:	xchg   esp,eax
  40e6e2:	fld    DWORD PTR [ebx]
  40e6e4:	or     edi,edx
  40e6e6:	aas    
  40e6e7:	xor    al,0xa6
  40e6e9:	xchg   esp,eax
  40e6ea:	push   esp
  40e6eb:	inc    ecx
  40e6ec:	sbb    al,0xc4
  40e6ee:	cs icebp 
  40e6f0:	jg     0x40e6d2
  40e6f2:	mov    al,ds:0x94548703
  40e6f7:	sbb    BYTE PTR [edi],cl
  40e6f9:	scas   eax,DWORD PTR es:[edi]
  40e6fa:	repz add eax,DWORD PTR [eax-0x73fab887]
  40e701:	xchg   esp,eax
  40e702:	(bad)  
  40e704:	cmp    ebp,DWORD PTR [eax-0x6387392b]
  40e70a:	out    0x50,al
  40e70c:	hlt    
  40e70d:	xor    BYTE PTR [ebp-0x28],dl
  40e710:	loop   0x40e6bb
  40e712:	neg    DWORD PTR [ebx-0x70]
  40e715:	xchg   esp,eax
  40e716:	into   
  40e717:	test   ebx,ebp
  40e719:	out    0xd9,al
  40e71b:	(bad)  
  40e71c:	retf   0x3530
  40e71f:	fsubr  DWORD PTR [ebx-0x73fbd5b6]
  40e725:	ror    BYTE PTR [eax],cl
  40e727:	mov    dh,0x74
  40e729:	sub    al,0x8a
  40e72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e72c:	stos   DWORD PTR es:[edi],eax
  40e72d:	adc    eax,0xa88fa174
  40e732:	jmp    FWORD PTR [ecx+0x0]
	...
  40e745:	add    BYTE PTR [eax],al
  40e747:	add    BYTE PTR [ecx+0x3a6c0594],dl
  40e74d:	xor    esi,esi
  40e74f:	mov    ss,WORD PTR [edx-0x57]
  40e752:	hlt    
  40e753:	xchg   BYTE PTR [eax+edx*2+0x42],bh
  40e757:	sub    BYTE PTR [eax+0x73abbfce],dl
  40e75d:	xor    BYTE PTR [ebp+0x62],bl
  40e760:	inc    ebx
  40e761:	adc    ecx,ebp
  40e763:	popa   
  40e764:	lds    edx,FWORD PTR [edx+eiz*2+0xa9530e]
  40e76b:	inc    ecx
  40e76c:	ds mov esp,0xd8c84ef5
  40e772:	hlt    
  40e773:	push   0xffffff94
  40e775:	add    BYTE PTR [eax+ebp*4-0x71],0x94
  40e77a:	jl     0x40e772
  40e77c:	repnz fdiv st,st(0)
  40e77f:	jmp    0xd2497c13
  40e784:	dec    edi
  40e785:	loopne 0x40e7df
  40e787:	mov    ecx,0xbbf0c894
  40e78c:	dec    edx
  40e78d:	mov    DWORD PTR [ebx*4+0x298b9450],esp
  40e794:	push   eax
  40e795:	xchg   edx,eax
  40e796:	loope  0x40e762
  40e798:	push   cs
  40e799:	mov    cl,0xf0
  40e79b:	jmp    0xd32279fc
  40e7a0:	inc    edi
  40e7a1:	add    eax,0x2f8829aa
  40e7a6:	jl     0x40e789
  40e7a8:	shr    DWORD PTR [eax+0xc100],1
	...
  40e7be:	add    BYTE PTR [eax],al
  40e7c0:	cmp    eax,0x45cef62d
  40e7c5:	enter  0xf0,0x3e
  40e7c9:	and    dh,bh
  40e7cb:	jne    0x40e79a
  40e7cd:	pop    ecx
  40e7ce:	pop    eax
  40e7cf:	or     dl,bh
  40e7d1:	fild   WORD PTR [eax]
  40e7d3:	call   0x383f3a
  40e7d8:	jmp    0xf756:0x4de800df
  40e7df:	(bad)  
  40e7e0:	cli    
  40e7e1:	fcomip st,st(4)
  40e7e3:	jmp    DWORD PTR [eax-0x662c11d0]
  40e7e9:	pop    ecx
  40e7ea:	test   ecx,0x55089427
  40e7f0:	out    dx,al
  40e7f1:	dec    esp
  40e7f2:	mov    eax,esp
  40e7f4:	in     eax,0x7e
  40e7f6:	pop    ebp
  40e7f7:	push   ebx
  40e7f8:	fidivr WORD PTR [edi+0x4]
  40e7fb:	(bad)  
  40e7fc:	addr16 xchg ebx,eax
  40e7fe:	or     BYTE PTR [eax],al
  40e800:	gs pop eax
  40e802:	jge    0x40e80c
  40e804:	int    0x27
  40e806:	push   eax
  40e807:	add    BYTE PTR ds:0x201fe14,dh
  40e80d:	sub    ah,BYTE PTR [ebx]
  40e80f:	rcr    BYTE PTR [esi],0x78
  40e812:	push   esi
  40e813:	leave  
  40e814:	ja     0x40e846
  40e816:	not    al
  40e818:	jge    0x40e7c7
  40e81a:	pop    esp
  40e81b:	or     al,0x9c
  40e81d:	xchg   edx,eax
  40e81e:	sbb    eax,0xd0152a
	...
  40e838:	cmc    
  40e839:	xchg   edx,eax
  40e83a:	xor    DWORD PTR [ebp-0x3],0x9e0874ab
  40e841:	jp     0x40e8b1
  40e843:	mov    esp,ebx
  40e845:	adc    dh,dl
  40e847:	xor    BYTE PTR [edi+0x2d],ah
  40e84a:	jbe    0x40e848
  40e84c:	lods   al,BYTE PTR ds:[esi]
  40e84d:	loope  0x40e85a
  40e84f:	or     cl,0x82
  40e852:	loope  0x40e86f
  40e854:	mov    WORD PTR [ebp+0x503e40cd],?
  40e85a:	mov    bh,bl
  40e85c:	dec    edx
  40e85d:	outs   dx,BYTE PTR ds:[esi]
  40e85e:	hlt    
  40e85f:	jg     0x40e809
  40e861:	jnp    0x40e7ef
  40e863:	ret    
  40e864:	xchg   BYTE PTR [edx-0xd],dl
  40e867:	sub    cl,ah
  40e869:	sub    DWORD PTR [ebx],0xf1fad55e
  40e86f:	call   DWORD PTR [edi+0x4d]
  40e872:	pop    eax
  40e873:	or     BYTE PTR [eax+0x44],dl
  40e876:	inc    ebp
  40e877:	add    al,0xb8
  40e879:	dec    ebx
  40e87a:	rcl    DWORD PTR [esi],1
  40e87c:	sar    BYTE PTR [edx+ebx*2+0xa],0xb8
  40e881:	jne    0x40e8c6
  40e883:	push   es
  40e884:	mov    al,ds:0x770a087c
  40e889:	xor    eax,0x56c7c011
  40e88e:	sub    al,0xc9
  40e890:	dec    esi
  40e891:	and    al,0xa
  40e893:	shr    BYTE PTR [eax+eax*2-0x10],0xc3
  40e898:	div    dl
  40e89a:	mov    ch,al
	...
  40e8b0:	mov    fs,WORD PTR [edx]
  40e8b2:	mov    eax,ds:0x36a2ee74
  40e8b7:	or     al,0x33
  40e8b9:	sub    al,0x7d
  40e8bb:	inc    esp
  40e8bc:	and    al,0x7f
  40e8be:	inc    esi
  40e8bf:	or     BYTE PTR [ebx],dl
  40e8c1:	add    esi,ecx
  40e8c3:	(bad)  
  40e8c4:	rol    DWORD PTR [edi+0x3b8c0009],1
  40e8ca:	mov    DWORD PTR [eax+eiz*4],edi
  40e8cd:	cmovnp eax,DWORD PTR [eax]
  40e8d0:	mov    WORD PTR [edi+0x2b518d23],gs
  40e8d6:	cmp    ebp,DWORD PTR [edx-0x73]
  40e8d9:	adc    DWORD PTR [edx],ecx
  40e8db:	push   0xffffff8c
  40e8dd:	adc    DWORD PTR [edx],ecx
  40e8df:	push   0xffffff8c
  40e8e1:	xchg   esp,eax
  40e8e2:	jl     0x40e92d
  40e8e4:	aam    0xc4
  40e8e6:	(bad)  
  40e8e7:	sbb    DWORD PTR [eax-0x20],edi
  40e8ea:	and    BYTE PTR [edi+edx*4],al
  40e8ed:	push   esp
  40e8ee:	pop    esp
  40e8ef:	dec    BYTE PTR [esi]
  40e8f1:	mov    al,0xb3
  40e8f3:	add    al,0x40
  40e8f5:	push   0x1980497a
  40e8fa:	sub    eax,0x3e9c66b4
  40e8ff:	out    dx,al
  40e900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e901:	sbb    DWORD PTR ds:0xf7b006b8,edx
  40e907:	mov    es,WORD PTR [eax+0x24]
  40e90a:	add    DWORD PTR [esi],0x7f
  40e90d:	clc    
  40e90e:	push   0x49
  40e910:	nop
  40e911:	sub    eax,0xb3f5
	...
  40e926:	add    BYTE PTR [eax],al
  40e928:	or     dl,BYTE PTR [esi+esi*2-0x4bc387c7]
  40e92f:	pop    esp
  40e930:	mov    WORD PTR [edi+esi*1-0x206b73fb],ss
  40e937:	pop    esi
  40e938:	mov    ebx,0x8bc638ce
  40e93d:	xchg   esp,eax
  40e93e:	or     al,ah
  40e940:	out    0xcd,al
  40e942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e943:	int3   
  40e944:	dec    ebp
  40e945:	pushf  
  40e946:	fistp  WORD PTR [eax+0x7]
  40e949:	inc    eax
  40e94a:	arpl   ax,cx
  40e94c:	repz mov ebx,0x2d2be3df
  40e952:	dec    eax
  40e953:	add    dh,BYTE PTR [edx-0x2f72d0d3]
  40e959:	xor    BYTE PTR [eax-0x206b93fd],bl
  40e95f:	stos   DWORD PTR es:[edi],eax
  40e960:	mov    esp,0x14c306be
  40e965:	xlat   BYTE PTR ds:[ebx]
  40e966:	pop    es
  40e967:	sub    al,0x8c
  40e969:	je     0x40e94a
  40e96b:	add    esp,esp
  40e96d:	ja     0x40e977
  40e96f:	xchg   esi,ecx
  40e971:	sub    eax,0xb51ba480
  40e976:	or     BYTE PTR [ecx],cl
  40e978:	nop
  40e979:	xchg   esp,eax
  40e97a:	loopne 0x40e972
  40e97c:	popf   
  40e97d:	sub    eax,0x245460f6
  40e982:	popa   
  40e983:	jmp    0xd2371637
  40e988:	mov    DWORD PTR [esi+0xbef5],edi
	...
  40e99e:	add    BYTE PTR [eax],al
  40e9a0:	add    al,bl
  40e9a2:	in     al,0x41
  40e9a4:	nop
  40e9a5:	je     0x40e9af
  40e9a7:	jmp    0xa6a519a3
  40e9ac:	into   
  40e9ad:	sbb    ecx,DWORD PTR [ecx+edx*4+0x67]
  40e9b1:	xchg   esp,eax
  40e9b2:	sub    cl,ch
  40e9b4:	(bad)  
  40e9b5:	cmp    al,0xf9
  40e9b7:	cld    
  40e9b8:	dec    esi
  40e9b9:	sub    eax,DWORD PTR [eax+0x7c2b242c]
  40e9bf:	fldenv [edi-0x6fd792e5]
  40e9c5:	sub    edi,DWORD PTR [ebp+ebp*2+0x37]
  40e9c9:	dec    esp
  40e9ca:	push   eax
  40e9cb:	jmp    0xee0e015f
  40e9d0:	dec    esi
  40e9d1:	mov    eax,ds:0xb7b1c118
  40e9d6:	inc    edi
  40e9d7:	jmp    0x52318b2a
  40e9dc:	pop    esp
  40e9dd:	int    0x8
  40e9df:	jmp    0x364641ee
  40e9e4:	test   BYTE PTR fs:[eax+0x76],ah
  40e9e8:	imul   edx,ebp,0x8
  40e9eb:	es push esp
  40e9ed:	and    cl,ah
  40e9ef:	arpl   WORD PTR [eax-0x2c95f76c],si
  40e9f5:	lahf   
  40e9f6:	cmc    
  40e9f7:	xchg   esp,eax
  40e9f8:	lahf   
  40e9f9:	mov    esp,0xd10900de
  40e9fe:	or     bh,bh
  40ea00:	js     0x40e9e9
  40ea02:	in     eax,dx
  40ea03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  40ea18:	cld    
  40ea19:	xchg   edi,eax
  40ea1a:	or     BYTE PTR [ebx+0x75f59ba9],al
  40ea20:	aad    0x7f
  40ea22:	fbld   TBYTE PTR [esp+eiz*4-0x70]
  40ea26:	cmc    
  40ea27:	jne    0x40e9fa
  40ea29:	clc    
  40ea2a:	cdq    
  40ea2b:	pop    ecx
  40ea2c:	mov    ch,0x97
  40ea2e:	mov    esp,eax
  40ea30:	rcl    DWORD PTR [ebp+edi*2+0xc],0x5d
  40ea35:	push   ebp
  40ea36:	push   0x41
  40ea38:	mov    ch,0x54
  40ea3a:	jge    0x40ea24
  40ea3c:	int    0x17
  40ea3e:	push   ecx
  40ea3f:	add    BYTE PTR [ebp-0xdf335f0],ah
  40ea45:	arpl   WORD PTR [eax],bx
  40ea47:	push   0x47726e
  40ea4c:	adc    ah,BYTE PTR [ebx-0x14]
  40ea4f:	call   0x49b9f7
  40ea54:	out    0x5c,al
  40ea56:	add    ch,BYTE PTR [edx+0x75]
  40ea59:	push   esp
  40ea5a:	jge    0x40ea58
  40ea5c:	repnz arpl WORD PTR [edi+edi*8],ax
  40ea60:	js     0x40ea8c
  40ea62:	inc    ecx
  40ea63:	inc    ecx
  40ea64:	call   FWORD PTR gs:[ebx+0x70]
  40ea68:	loop   0x40eabf
  40ea6a:	add    DWORD PTR [ebp-0x2b],0xf8ff087a
  40ea71:	out    dx,al
  40ea72:	div    BYTE PTR [ebp+0x21]
  40ea75:	push   esp
  40ea76:	cmp    eax,0x8d5ec3a
  40ea7b:	call   0x40ea80
	...
  40ea90:	cmc    
  40ea91:	data16 cmc 
  40ea93:	call   FWORD PTR [ebx+edx*8+0x54256ad4]
  40ea9a:	jge    0x40ea90
  40ea9c:	mov    WORD PTR [edx+0x40030c3d],es
  40eaa2:	hlt    
  40eaa3:	dec    eax
  40eaa4:	dec    ebp
  40eaa5:	cmp    eax,0x2a7c29a2
  40eaaa:	leave  
  40eaab:	mov    BYTE PTR [ecx-0x7b],dl
  40eaae:	es add bl,ah
  40eab1:	lahf   
  40eab2:	mov    ecx,0xc94561fe
  40eab7:	xor    al,0x96
  40eab9:	fs dec ecx
  40eabb:	add    BYTE PTR [eax+ebp*1-0x4c3c00c6],dh
  40eac2:	dec    esi
  40eac3:	aam    0x26
  40eac5:	cmp    eax,0xe9a074c9
  40eaca:	ds call 0x4935127b
  40ead0:	dec    ebp
  40ead1:	cmp    eax,0xf22bfda2
  40ead6:	enter  0x4988,0xed
  40eada:	xchg   BYTE PTR [esp+ecx*2+0x6c],al
  40eade:	(bad)  
  40eadf:	je     0x40eb49
  40eae1:	sbb    edi,DWORD PTR [edi]
  40eae3:	or     al,0x7b
  40eae5:	jmp    0x3c0e33dd
  40eaea:	mov    ds:0xc8a2fbe5,al
  40eaef:	mov    cl,cl
  40eaf1:	pop    es
  40eaf2:	lea    edi,[eax+eax*1+0x0]
	...
  40eb06:	add    BYTE PTR [eax],al
  40eb08:	ins    BYTE PTR es:[edi],dx
  40eb09:	cmp    al,0x19
  40eb0b:	test   BYTE PTR [ebx],bl
  40eb0d:	cmp    al,0xa
  40eb0f:	add    BYTE PTR [edi],cl
  40eb11:	inc    ecx
  40eb12:	fdivp  st(7),st
  40eb14:	xchg   edx,eax
  40eb15:	scas   eax,DWORD PTR es:[edi]
  40eb16:	data16 (bad) 
  40eb18:	cmp    edi,DWORD PTR [ecx*4+0x193c5c7c]
  40eb1f:	test   bh,ch
  40eb21:	cmp    ecx,DWORD PTR [edx]
  40eb23:	add    BYTE PTR [ecx],dl
  40eb25:	icebp  
  40eb26:	int    0x4f
  40eb28:	sbb    edx,DWORD PTR [ebp-0x3ad4286c]
  40eb2e:	adc    al,0xc0
  40eb30:	or     bl,BYTE PTR [esi+0x1a08101f]
  40eb36:	loopne 0x40eb3b
  40eb38:	mov    WORD PTR ds:0x9af3c78d,ss
  40eb3e:	imul   eax,DWORD PTR [esi-0x711fd615],0x48
  40eb45:	pop    esp
  40eb46:	nop
  40eb47:	shl    BYTE PTR [eax+0x44],0xd8
  40eb4b:	repnz shr BYTE PTR [ecx],1
  40eb4e:	xlat   BYTE PTR ds:[ebx]
  40eb4f:	or     ecx,esp
  40eb51:	mov    al,ds:0x5c408354
  40eb56:	loopne 0x40eb8f
  40eb58:	sub    edi,DWORD PTR [edi+ecx*8-0x49155cfd]
  40eb5f:	cmp    DWORD PTR [esp+edi*1+0x29a32cdd],edx
  40eb66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb67:	cmp    DWORD PTR [ecx+ebp*1+0xc15],ebp
	...
  40eb7e:	add    BYTE PTR [eax],al
  40eb80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb81:	mov    al,ds:0x298abf18
  40eb86:	adc    eax,0xe79f82e0
  40eb8b:	stos   DWORD PTR es:[edi],eax
  40eb8c:	in     al,0xbb
  40eb8e:	mov    ?,WORD PTR [edi-0x4058608e]
  40eb94:	loopne 0x40eb32
  40eb96:	xchg   DWORD PTR [esi-0xb],ebx
  40eb99:	sub    DWORD PTR [edi-0x41],esp
  40eb9c:	loopne 0x40ebee
  40eb9e:	outs   dx,DWORD PTR ds:[esi]
  40eb9f:	cmp    DWORD PTR [eax],edi
  40eba1:	sub    ebp,ebx
  40eba3:	or     esi,DWORD PTR [eax+esi*2]
  40eba6:	enter  0x42be,0x29
  40ebaa:	(bad)  
  40ebac:	cmp    bl,BYTE PTR [edi-0x634740f1]
  40ebb2:	push   edi
  40ebb3:	push   ss
  40ebb4:	mov    ch,0x29
  40ebb6:	or     DWORD PTR [esi],esi
  40ebb8:	push   gs
  40ebba:	(bad)  
  40ebbb:	jmp    0xa4ca6b23
  40ebc0:	dec    edi
  40ebc1:	xchg   ebp,eax
  40ebc2:	jnp    0x40ebb2
  40ebc4:	push   ss
  40ebc5:	rol    ah,1
  40ebc7:	push   ss
  40ebc8:	clc    
  40ebc9:	sub    DWORD PTR [ecx+eiz*8+0x27],edi
  40ebcd:	push   edx
  40ebce:	popa   
  40ebcf:	push   es
  40ebd0:	xor    edi,DWORD PTR [esi]
  40ebd2:	add    edx,DWORD PTR [ebx-0x1e83d671]
  40ebd8:	aaa    
  40ebd9:	out    dx,al
  40ebda:	pusha  
  40ebdb:	out    dx,al
  40ebdc:	sbb    ch,BYTE PTR [edx]
  40ebde:	jl     0x40ebc5
  40ebe0:	daa    
  40ebe1:	xchg   ebx,eax
  40ebe2:	fiadd  WORD PTR fs:[eax]
	...
  40ebf5:	add    BYTE PTR [eax],al
  40ebf7:	add    BYTE PTR [edx],cl
  40ebf9:	sub    bh,BYTE PTR [ecx+edx*8-0x9]
  40ebfd:	sub    ah,BYTE PTR [edx-0x32]
  40ec00:	cli    
  40ec01:	sub    DWORD PTR [ebp+edi*4-0x19],edi
  40ec05:	and    ah,BYTE PTR [edx-0x42]
  40ec08:	jmp    0x623a:0xf7b97c29
  40ec0f:	scas   al,BYTE PTR es:[edi]
  40ec10:	fisubr DWORD PTR [ecx]
  40ec12:	jl     0x40eba9
  40ec14:	out    0x32,eax
  40ec16:	bound  ebx,QWORD PTR [esi-0x7e83d8b6]
  40ec1c:	aaa    
  40ec1d:	dec    esi
  40ec1e:	bound  ecx,QWORD PTR [esi-0x7283d8c6]
  40ec24:	daa    
  40ec25:	inc    esi
  40ec26:	bound  edi,QWORD PTR [esi+0x2a]
  40ec29:	daa    
  40ec2a:	jl     0x40ebb5
  40ec2c:	aaa    
  40ec2d:	pop    esi
  40ec2e:	bound  ebp,QWORD PTR [esi+0x1a]
  40ec31:	daa    
  40ec32:	jl     0x40ec79
  40ec34:	daa    
  40ec35:	push   esi
  40ec36:	bound  ebx,QWORD PTR [esi+0xa]
  40ec39:	daa    
  40ec3a:	jl     0x40ec6d
  40ec3c:	imul   ebp
  40ec3e:	popa   
  40ec3f:	dec    esi
  40ec40:	cli    
  40ec41:	es jl  0x40ec44
  40ec44:	xchg   ecx,eax
  40ec45:	sti    
  40ec46:	mov    bh,0x6b
  40ec48:	push   0xffffffe6
  40ec4a:	div    BYTE PTR [ebp-0x7b]
  40ec4d:	sti    
  40ec4e:	lahf   
  40ec4f:	imul   ebp,DWORD PTR [edx-0x1a],0xfffffff6
  40ec53:	jne    0x40ecae
  40ec55:	sti    
  40ec56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec57:	imul   ebp,DWORD PTR [edx+0xc2c0e6],0x0
	...
  40ec6e:	add    BYTE PTR [eax],al
  40ec70:	jmp    0xf9cc4808
  40ec75:	adc    ecx,edx
  40ec77:	call   0x8e37d66e
  40ec7c:	xor    al,ch
  40ec7e:	inc    ebp
  40ec7f:	jmp    DWORD PTR [eax-0x69]
  40ec82:	cmc    
  40ec83:	xor    eax,0x47d91f
  40ec88:	mov    ebp,0xb5005e9f
  40ec8d:	pushf  
  40ec8e:	enter  0x300f,0x8c
  40ec92:	pop    es
  40ec93:	add    BYTE PTR [ebp-0x5a07b2b0],ah
  40ec99:	xchg   ebx,eax
  40ec9a:	or     BYTE PTR [eax],al
  40ec9c:	repnz iret 
  40ec9e:	cld    
  40ec9f:	push   DWORD PTR [edx-0x5a95f76d]
  40eca5:	jge    0x40ecaf
  40eca7:	push   0xffffffa5
  40eca9:	jge    0x40ecb3
  40ecab:	lea    esi,[eax-0xf72ba14]
  40ecb1:	loopne 0x40ecb1
  40ecb3:	dec    DWORD PTR [edx]
  40ecb5:	shl    ch,0x75
  40ecb8:	or     eax,0xfdfc7ce9
  40ecbd:	adc    BYTE PTR [edi+0x0],bl
  40ecc0:	jne    0x40ec5e
  40ecc2:	enter  0x7074,0xfa
  40ecc6:	fiadd  WORD PTR [eax]
  40ecc8:	gs xchg ebx,eax
  40ecca:	pusha  
  40eccb:	push   ss
  40eccc:	cld    
  40eccd:	ror    DWORD PTR [eax],1
  40eccf:	dec    DWORD PTR [eax+ecx*2+0xe806]
	...
  40ece6:	add    BYTE PTR [eax],al
  40ece8:	push   esp
  40ece9:	out    0xb4,eax
  40eceb:	(bad)  
  40ecec:	fsub   QWORD PTR [edx+0x6d118cdc]
  40ecf2:	mov    ebx,0x580d23fe
  40ecf7:	call   0xfef5d440
  40ecfc:	add    eax,0xbf6a4b8
  40ed01:	xchg   BYTE PTR [ebp+ebx*1-0x734c8189],ah
  40ed08:	push   ecx
  40ed09:	lea    ebx,[eax+ebp*2+0xf]
  40ed0d:	sbb    DWORD PTR [ebx+0x0],ecx
  40ed10:	jmp    0x40ed71
  40ed12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed13:	mul    bl
  40ed15:	sbb    eax,0xf49634b5
  40ed1a:	dec    edx
  40ed1b:	add    ah,ah
  40ed1d:	nop
  40ed1e:	es dec ebx
  40ed21:	mov    ds:0x3dbbeb8e,eax
  40ed26:	mov    ch,0x82
  40ed28:	stc    
  40ed29:	call   0x3cf4ebea
  40ed2e:	ds pop edx
  40ed30:	punpckhbw mm7,QWORD PTR [ebx+eax*1-0x7b808be7]
  40ed38:	test   al,0xdd
  40ed3a:	mov    ah,0xfe
  40ed3c:	xchg   ebx,eax
  40ed3d:	dec    esp
  40ed3e:	test   DWORD PTR [eax+edi*2+0xdfeb4ff],eax
  40ed45:	shl    DWORD PTR [ebp-0x5de8840a],0x2
	...
  40ed60:	mov    WORD PTR [ebx],?
  40ed62:	cmp    al,0xa
  40ed64:	push   ebx
  40ed65:	mov    cl,0xa5
  40ed67:	mul    BYTE PTR [ebx-0x61]
  40ed6a:	mov    eax,ds:0xa13b8c02
  40ed6f:	sbb    DWORD PTR [ebx-0x6b],edx
  40ed72:	jl     0x40ed23
  40ed74:	inc    edx
  40ed75:	es push edi
  40ed77:	mov    esp,0xbc5738f8
  40ed7c:	cmp    ah,BYTE PTR [esi]
  40ed7e:	popf   
  40ed7f:	stos   DWORD PTR es:[edi],eax
  40ed80:	cmp    ah,BYTE PTR [esi]
  40ed82:	dec    edi
  40ed83:	mov    esp,0x3b579ca0
  40ed88:	and    BYTE PTR [esi],ah
  40ed8a:	aas    
  40ed8b:	sbb    al,0x38
  40ed8e:	aas    
  40ed8f:	mov    esp,0xde949512
  40ed94:	or     ah,al
  40ed96:	add    esi,DWORD PTR [edx+eax*1+0x65980826]
  40ed9d:	and    eax,0x3938bc07
  40eda2:	idiv   DWORD PTR [ebx+0x29503cea]
  40eda8:	jecxz  0x40edcf
  40edaa:	push   DWORD PTR [ebp-0xd]
  40edad:	sbb    eax,0x9fd2bbe7
  40edb2:	imul   DWORD PTR [ebx-0x4428d951]
  40edb8:	ret    0xc7df
  40edbb:	mov    bl,0xba
  40edbd:	and    eax,0x252633c8
  40edc2:	iret   
  40edc3:	mov    ebx,0x0
	...
  40edd8:	push   eax
  40edd9:	sub    al,0xd9
  40eddb:	mov    edi,0xbbbf25a1
  40ede0:	and    BYTE PTR [eax],ch
  40ede2:	enter  0x3997,0x94
  40ede6:	(bad)  
  40ede8:	dec    ebp
  40ede9:	pushf  
  40edea:	fist   WORD PTR [eax+0x17]
  40eded:	cmp    BYTE PTR [ebx-0x40],ah
  40edf0:	ja     0x40edac
  40edf2:	fild   QWORD PTR ds:0xbf525bc
  40edf8:	je     0x40ee15
  40edfa:	btc    DWORD PTR [edx+0x1b],esp
  40edfe:	or     DWORD PTR [esp+edx*1],ebp
  40ee01:	lods   eax,DWORD PTR ds:[esi]
  40ee02:	arpl   WORD PTR ds:0xdcf594c9,ax
  40ee08:	xchg   edi,eax
  40ee09:	cmp    al,0xaa
  40ee0b:	pop    edi
  40ee0c:	pop    es
  40ee0d:	es neg ah
  40ee10:	add    esp,DWORD PTR [esi]
  40ee12:	jl     0x40edf5
  40ee14:	out    0xe0,eax
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	inc    esi
  40ee18:	out    0x5b,eax
  40ee1a:	retf   
  40ee1b:	in     eax,0x8f
  40ee1d:	mov    edi,0x51134581
  40ee22:	cmc    
  40ee23:	xchg   edi,eax
  40ee24:	mov    esi,0x9308ba
  40ee29:	es jl  0x40ee1d
  40ee2c:	aaa    
  40ee2d:	mov    edi,0x1c37166d
  40ee32:	dec    esp
  40ee33:	or     eax,0xb1b66003
  40ee38:	push   eax
  40ee39:	xchg   esp,eax
  40ee3a:	cmp    DWORD PTR [eax+eax*1+0x0],0x0
	...
  40ee4d:	add    BYTE PTR [eax],al
  40ee4f:	add    cl,cl
  40ee51:	int3   
  40ee52:	inc    edi
  40ee53:	jmp    0x75495467
  40ee58:	dec    esp
  40ee59:	mov    esp,0x94514c16
  40ee5e:	pop    ebp
  40ee5f:	sar    DWORD PTR [edx-0x42],1
  40ee62:	or     cl,ch
  40ee64:	mov    dl,BYTE PTR [ebp+edi*2-0x12]
  40ee68:	pop    ebp
  40ee69:	cmp    al,0xce
  40ee6b:	cmp    ah,bh
  40ee6d:	and    eax,0x94885159
  40ee72:	in     eax,0x77
  40ee74:	addr16 jl 0x40eee2
  40ee77:	sub    BYTE PTR [eax-0x67e30a3c],cl
  40ee7d:	sub    al,0xda
  40ee7f:	jnp    0x40eec7
  40ee81:	and    esp,ecx
  40ee83:	mov    ch,0xa8
  40ee85:	and    esi,esi
  40ee87:	or     BYTE PTR [eax+0x530088da],0x98
  40ee8e:	jnp    0x40ee8a
  40ee90:	stos   DWORD PTR es:[edi],eax
  40ee91:	fdivr  QWORD PTR [edx]
  40ee93:	rcr    BYTE PTR [esi+ebx*8-0x161d000a],0xa3
  40ee9b:	cmp    BYTE PTR [edx],bh
  40ee9d:	gs mov cl,0xff
  40eea0:	pop    eax
  40eea1:	in     al,dx
  40eea2:	div    BYTE PTR [ebp+0x2d]
  40eea5:	lock cmp eax,0x56dec267
  40eeab:	pop    esi
  40eeac:	pop    esp
  40eead:	pop    ecx
  40eeae:	or     al,BYTE PTR [eax]
  40eeb0:	clc    
  40eeb1:	adc    ah,dl
  40eeb3:	add    DWORD PTR [eax],0x0
	...
  40eec6:	add    BYTE PTR [eax],al
  40eec8:	imul   ebx,edi,0xdfe8c75a
  40eece:	cmc    
  40eecf:	push   ebp
  40eed1:	xchg   edi,eax
  40eed2:	int    0x45
  40eed4:	mov    eax,ds:0xe5000897
  40eed9:	adc    cl,BYTE PTR [ebp+0xc]
  40eedc:	popw   ds
  40eede:	div    BYTE PTR [esp+ebx*8+0x32]
  40eee2:	mov    dh,0x2b
  40eee4:	xchg   edx,eax
  40eee6:	mov    edi,0xb197f1c2
  40eeeb:	add    ebp,esp
  40eeed:	xchg   edi,eax
  40eeee:	or     bl,ch
  40eef0:	push   esp
  40eef1:	sbb    DWORD PTR [ebp+0x10],esi
  40eef4:	mov    ch,0x73
  40eef6:	or     ecx,DWORD PTR [ebx+0x187f8868]
  40eefc:	ret    0x473
  40eeff:	jmp    FWORD PTR [eax-0x70]
  40ef02:	loopne 0x40ef7a
  40ef04:	dec    ecx
  40ef05:	(bad)  
  40ef07:	sbb    esi,0xffffff8f
  40ef0a:	jnp    0x40ef11
  40ef0c:	lods   al,BYTE PTR ds:[esi]
  40ef0d:	(bad)  
  40ef0e:	lock jmp 0x40eecc
  40ef11:	enter  0x7f2b,0x22
  40ef15:	(bad)  
  40ef17:	or     DWORD PTR [eax+esi*2-0x52daa84c],ecx
  40ef1e:	or     al,0x0
  40ef20:	mov    WORD PTR [eax],fs
  40ef22:	or     al,0xeb
  40ef24:	lahf   
  40ef25:	scas   al,BYTE PTR es:[edi]
  40ef26:	mov    bl,0x7
  40ef28:	loope  0x40ef6a
  40ef2a:	test   DWORD PTR [eax+eax*1+0x0],eax
	...
  40ef3e:	add    BYTE PTR [eax],al
  40ef40:	push   esp
  40ef41:	mov    dh,0x45
  40ef43:	cld    
  40ef44:	fwait
  40ef45:	adc    edi,ecx
  40ef47:	pop    es
  40ef48:	dec    ebp
  40ef49:	int    0x4
  40ef4b:	mov    ecx,edx
  40ef4d:	lds    eax,FWORD PTR [ecx+0x1bd63054]
  40ef53:	mov    edx,ecx
  40ef55:	aad    0x83
  40ef57:	push   esp
  40ef58:	and    BYTE PTR [edx],dh
  40ef5a:	push   esi
  40ef5b:	rcl    DWORD PTR [ebx+0x506ac6c],0xf8
  40ef62:	mov    cl,0x88
  40ef64:	popa   
  40ef65:	jns    0x40efb2
  40ef67:	add    DWORD PTR [edi],0x24
  40ef6a:	cmp    BYTE PTR [edx-0x7cf20ff9],bl
  40ef70:	mov    ah,0x2d
  40ef72:	daa    
  40ef73:	push   es
  40ef74:	mov    bh,0x6d
  40ef76:	jecxz  0x40ef49
  40ef78:	idiv   DWORD PTR [edx]
  40ef7a:	test   DWORD PTR [esp+edx*8-0x4b],eax
  40ef7e:	inc    ebp
  40ef7f:	cld    
  40ef80:	aaa    
  40ef81:	je     0x40ef51
  40ef83:	or     ecx,DWORD PTR [eax+eiz*2-0x6f0147d]
  40ef8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef8b:	mov    al,ds:0x4abac0
  40ef90:	jne    0x40f00a
  40ef92:	add    BYTE PTR [esi-0x6e],dh
  40ef95:	xchg   ah,cl
  40ef97:	enter  0x3cce,0xa
  40ef9b:	jmp    DWORD PTR [ecx-0x1f]
  40ef9e:	jg     0x40efe0
  40efa0:	mov    WORD PTR [ebp-0x50],ss
  40efa3:	add    BYTE PTR [bx+si],al
	...
  40efb6:	add    BYTE PTR [eax],al
  40efb8:	mov    edx,DWORD PTR [ebp+0x1cc88aae]
  40efbe:	gs ds js 0x40ef87
  40efc2:	xchg   esp,edi
  40efc4:	shl    DWORD PTR [ecx],cl
  40efc6:	xchg   DWORD PTR [eax+0x2e8e88e0],edi
  40efcc:	nop
  40efcd:	and    ebp,edi
  40efcf:	mov    ebx,0xabe7a85a
  40efd4:	ret    
  40efd5:	mov    ch,0x66
  40efd7:	mov    eax,0x7fff5496
  40efdc:	jmp    0x3b44cf75
  40efe1:	test   al,0xeb
  40efe3:	mov    eax,0x2e471cb8
  40efe8:	sub    BYTE PTR ds:0x22232254,ch
  40efee:	jnp    0x40f02e
  40eff0:	mov    BYTE PTR [ebp-0x5c],bl
  40eff3:	adc    eax,DWORD PTR [ebx-0x73fc73eb]
  40eff9:	xchg   esp,eax
  40effa:	cs cs cwde 
  40effd:	and    DWORD PTR [ebp-0x7d341bf5],ebx
  40f003:	mov    eax,0xafad0bf2
  40f008:	imul   BYTE PTR [eax+0x6dd8460e]
  40f00e:	adc    DWORD PTR [eax+edx*2-0x202208d8],ecx
  40f015:	adc    ah,BYTE PTR [ecx+0x54469703]
  40f01b:	add    al,BYTE PTR [eax]
	...
  40f02d:	add    BYTE PTR [eax],al
  40f02f:	add    BYTE PTR [edi+0x5c0459ac],dh
  40f035:	and    DWORD PTR [ebp+0xc],edx
  40f038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f039:	cmp    BYTE PTR [edi],0xb7
  40f03c:	stos   BYTE PTR es:[edi],al
  40f03d:	and    DWORD PTR ds:0xf7a7a310,esi
  40f043:	stos   DWORD PTR es:[edi],eax
  40f044:	jne    0x40effb
  40f046:	or     BYTE PTR [esi-0x2aa3f125],dh
  40f04c:	push   cs
  40f04d:	pop    ebx
  40f04e:	or     BYTE PTR [esi+ecx*4],bl
  40f051:	sub    eax,0x28cd7041
  40f056:	and    ah,0x23
  40f059:	cmovs  ebp,ecx
  40f05c:	push   cs
  40f05d:	sub    al,0xd
  40f05f:	sbb    BYTE PTR [ebx],bl
  40f061:	test   al,0x1c
  40f063:	sbb    BYTE PTR [ebx],ah
  40f065:	test   al,0xf0
  40f067:	jbe    0x40f006
  40f069:	mov    eax,fs
  40f06b:	lahf   
  40f06c:	outs   dx,BYTE PTR ds:[esi]
  40f06d:	and    esi,esi
  40f06f:	rcl    BYTE PTR [esi-0x191483ac],0x77
  40f076:	push   edi
  40f077:	push   esi
  40f078:	jge    0x40f096
  40f07a:	not    ah
  40f07c:	jecxz  0x40f0b6
  40f07e:	sbb    al,0xc8
  40f080:	fisub  DWORD PTR [ecx]
  40f082:	div    BYTE PTR [ebx+eiz*8-0x2536ffc8]
  40f089:	and    DWORD PTR [ecx+ebp*8],esi
  40f08c:	(bad)  
  40f08d:	aam    0xe
  40f08f:	lahf   
  40f090:	lea    ebp,ds:0x6a01
	...
  40f0a6:	add    BYTE PTR [eax],al
  40f0a8:	mov    ch,0x28
  40f0aa:	or     DWORD PTR [ecx+esi*2-0x62f1eed2],ebx
  40f0b1:	and    cl,ah
  40f0b3:	pop    edx
  40f0b4:	cmp    esp,DWORD PTR [ecx]
  40f0b6:	mul    BYTE PTR [esi]
  40f0b8:	dec    ebp
  40f0b9:	and    BYTE PTR [ecx],cl
  40f0bb:	jmp    0xa4c2854f
  40f0c0:	fwait
  40f0c1:	pop    ecx
  40f0c2:	or     ecx,ebp
  40f0c4:	(bad)  
  40f0c5:	xchg   esp,eax
  40f0c6:	or     dh,bl
  40f0c8:	jl     0x40f0e6
  40f0ca:	loope  0x40f0a1
  40f0cc:	xchg   edx,eax
  40f0cd:	and    esi,esi
  40f0cf:	bound  ecx,QWORD PTR [eax+eiz*1-0x40]
  40f0d3:	add    bh,dh
  40f0d5:	test   BYTE PTR [eax],cl
  40f0d7:	push   ebp
  40f0d8:	push   ds
  40f0d9:	stc    
  40f0da:	pop    esi
  40f0db:	mov    esp,DWORD PTR [eax-0x74]
  40f0de:	mov    eax,eax
  40f0e0:	ins    DWORD PTR es:[edi],dx
  40f0e1:	(bad)  
  40f0e2:	loopne 0x40f0e0
  40f0e4:	xchg   edx,eax
  40f0e5:	out    0xf6,eax
  40f0e7:	mov    ebp,DWORD PTR ds:0xea0c7ce7
  40f0ed:	push   ds
  40f0ee:	div    DWORD PTR [ebp+0x65]
  40f0f1:	pop    ss
  40f0f2:	dec    edi
  40f0f3:	add    al,0xf6
  40f0f5:	pop    esp
  40f0f6:	add    al,0x0
  40f0f8:	popa   
  40f0f9:	xchg   edi,eax
  40f0fa:	cmc    
  40f0fb:	jne    0x40f166
  40f0fd:	or     eax,0xe7a5084f
  40f102:	jl     0x40f10c
  40f104:	fisttp QWORD PTR [eax+0xadaff60]
  40f10a:	dec    ebp
  40f10b:	adc    al,0x0
	...
  40f11d:	add    BYTE PTR [eax],al
  40f11f:	add    BYTE PTR [ebx+ebx*1-0x6bcafe42],ch
  40f126:	or     BYTE PTR [edi+0x5c],bl
  40f129:	push   ebp
  40f12a:	push   es
  40f12b:	add    BYTE PTR [eax],al
  40f12d:	or     esp,edx
  40f12f:	and    DWORD PTR [ecx-0x11],0xffffff82
  40f133:	push   ebp
  40f134:	loope  0x40f114
  40f136:	pop    es
  40f137:	add    ch,dh
  40f139:	xchg   ebx,eax
  40f13a:	or     BYTE PTR [ebx],ch
  40f13c:	mov    bh,0xee
  40f13e:	dec    esp
  40f13f:	or     al,0xe4
  40f141:	xchg   ebx,eax
  40f142:	or     BYTE PTR [eax],al
  40f144:	retf   0xc80f
  40f147:	or     DWORD PTR [eax],0xffffff98
  40f14a:	or     BYTE PTR [ebp-0x4a],dh
  40f14d:	out    0x7c,al
  40f14f:	adc    al,0xf
  40f151:	xchg   ebx,eax
  40f152:	bound  eax,QWORD PTR [eax]
  40f154:	sete   al
  40f157:	nop
  40f158:	stos   BYTE PTR es:[edi],al
  40f159:	jmp    0x92dddb54
  40f15e:	or     BYTE PTR [eax],al
  40f160:	mov    WORD PTR [edx-0x3772f3c3],gs
  40f166:	out    0xfe,eax
  40f168:	sbb    DWORD PTR ds:0x458474bd,edi
  40f16e:	cmp    DWORD PTR [edx-0x6d],esp
  40f171:	out    0x81,al
  40f173:	inc    esp
  40f174:	mov    dh,ch
  40f176:	and    eax,0x202df614
  40f17b:	add    al,0x9
  40f17d:	js     0x40f12f
  40f17f:	dec    edi
  40f180:	mov    ?,WORD PTR fs:[ebx+0xfe]
	...
  40f197:	add    BYTE PTR [ebx+0x14],ch
  40f19a:	or     eax,0x892d8c02
  40f19f:	jl     0x40f129
  40f1a1:	sub    esp,DWORD PTR [edi]
  40f1a3:	and    edx,DWORD PTR [ebx+0x20]
  40f1a6:	sbb    bh,bh
  40f1a8:	shl    DWORD PTR ds:0xb6ae1da2,0xbb
  40f1af:	mov    cl,dl
  40f1b1:	sar    DWORD PTR [ebx+0xa539874],0x6a
  40f1b8:	nop
  40f1b9:	shl    BYTE PTR ds:0xfec5bcfc,0xfe
  40f1c0:	sbb    ebx,DWORD PTR [esi-0x5f]
  40f1c3:	(bad)  
  40f1c4:	lea    ebp,ds:0x4189830a
  40f1ca:	or     DWORD PTR [ebp-0x54],esi
  40f1cd:	jbe    0x40f1f4
  40f1cf:	adc    BYTE PTR [esi+0x2a],ah
  40f1d2:	mov    ebp,0x3f958474
  40f1d7:	(bad)  
  40f1d8:	jmp    0x40f167
  40f1da:	mov    ebx,0x9037874
  40f1df:	push   0xffffff8c
  40f1e1:	add    ecx,DWORD PTR [edx]
  40f1e3:	call   0xfefe185c
  40f1e8:	mov    ch,0x5b
  40f1ea:	or     DWORD PTR [eax],eax
  40f1ec:	mov    WORD PTR [edx+eiz*2+0x5c988836],ss
  40f1f3:	loope  0x40f1a7
  40f1f5:	test   al,0xef
  40f1f7:	mov    ah,0x20
  40f1f9:	mov    edi,es
  40f1fb:	pusha  
	...
  40f210:	sub    al,0x1f
  40f212:	iret   
  40f213:	mov    dl,BYTE PTR [eax+0x20]
  40f216:	mov    bh,0x2e
  40f218:	js     0x40f1c4
  40f21a:	fild   QWORD PTR [ecx]
  40f21c:	nop
  40f21d:	cvtps2pi mm7,QWORD PTR [eax-0x4a60d32d]
  40f224:	jp     0x40f244
  40f226:	cdq    
  40f227:	mov    ecx,DWORD PTR [esp+edx*4-0x6f177f21]
  40f22e:	in     al,dx
  40f22f:	cs jnp 0x40f24f
  40f232:	cmc    
  40f233:	adc    esp,esi
  40f235:	xchg   esi,eax
  40f236:	jbe    0x40f266
  40f238:	test   BYTE PTR [esp+edi*2],ch
  40f23b:	and    cl,BYTE PTR [ebx+0x1e]
  40f23e:	cmp    BYTE PTR [edx],al
  40f240:	mov    WORD PTR [edi+ebx*8-0x206c5956],ss
  40f247:	add    ecx,DWORD PTR [edi]
  40f249:	mov    al,ds:0x74a0fdeb
  40f24e:	inc    esi
  40f24f:	cs jl  0x40f1fc
  40f252:	div    DWORD PTR [eax+eiz*4-0x532ba874]
  40f259:	sbb    eax,0x8880b43f
  40f25e:	leave  
  40f25f:	add    BYTE PTR [esi-0x6c],dh
  40f262:	cdq    
  40f263:	add    esp,esp
  40f265:	lock adc eax,0xa52bf2b4
  40f26b:	add    cl,BYTE PTR [esp+edx*4-0x6a6fc99e]
  40f272:	je     0x40f257
	...
  40f288:	fisub  DWORD PTR [edi+0x1d8429cf]
  40f28e:	or     DWORD PTR [edi+edx*4+0x2c],edi
  40f292:	mov    al,0x88
  40f294:	clc    
  40f295:	push   ds
  40f296:	neg    BYTE PTR [esp+edx*4-0x56]
  40f29a:	or     DWORD PTR [ebx-0x78],edx
  40f29d:	stos   BYTE PTR es:[edi],al
  40f29e:	or     cl,al
  40f2a0:	push   ss
  40f2a1:	and    dh,dh
  40f2a3:	into   
  40f2a4:	add    DWORD PTR [edi+0x7],edi
  40f2a7:	jmp    0xedb5043b
  40f2ac:	xchg   edi,eax
  40f2ad:	test   al,0x14
  40f2af:	scas   al,BYTE PTR es:[edi]
  40f2b0:	aad    0x20
  40f2b2:	or     ecx,ebp
  40f2b4:	(bad)  
  40f2b5:	xchg   esp,eax
  40f2b6:	cmc    
  40f2b7:	sbb    al,0x94
  40f2b9:	stos   BYTE PTR es:[edi],al
  40f2ba:	or     BYTE PTR [ebx],dl
  40f2bc:	test   BYTE PTR [edi],cl
  40f2be:	dec    esp
  40f2bf:	xchg   ebp,eax
  40f2c0:	shr    BYTE PTR [ebp*2-0x1fe1e071],0x84
  40f2c8:	nop
  40f2c9:	xchg   esp,eax
  40f2ca:	or     BYTE PTR [edx-0x63],ch
  40f2cd:	nop
  40f2ce:	(bad)  
  40f2cf:	sti    
  40f2d0:	fwait
  40f2d1:	push   ebp
  40f2d2:	dec    esp
  40f2d3:	ins    DWORD PTR es:[edi],dx
  40f2d4:	mov    DWORD PTR [eax+ecx*1+0x1ca7fee9],edx
  40f2db:	ror    DWORD PTR [edi-0x2a9bf356],cl
  40f2e1:	and    BYTE PTR [ecx+0x41],bl
  40f2e4:	retf   0xf61e
  40f2e7:	inc    esi
  40f2e8:	stc    
  40f2e9:	cmp    DWORD PTR [ecx],ecx
  40f2eb:	jmp    0x40f2f0
	...
  40f300:	(bad)  
  40f301:	adc    DWORD PTR [ebp+eiz*8+0x9],esi
  40f305:	test   al,0x2
  40f307:	jno    0x40f291
  40f309:	xchg   esp,eax
  40f30a:	or     cl,ch
  40f30c:	sbb    BYTE PTR [edx+0x9],cl
  40f30f:	jmp    0xe5b504a3
  40f314:	jmp    0x894:0x885102a7
  40f31b:	add    ch,ah
  40f31d:	push   DWORD PTR [edx-0x766f1b00]
  40f323:	jge    0x40f2d6
  40f325:	sbb    al,0x78
  40f327:	push   ebp
  40f328:	scas   al,BYTE PTR es:[edi]
  40f329:	inc    esi
  40f32a:	jp     0x40f37d
  40f32c:	and    al,0x64
  40f32e:	add    al,0x0
  40f330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f331:	ror    BYTE PTR [esi],1
  40f333:	jae    0x40f3a2
  40f335:	loope  0x40f3b3
  40f337:	or     al,0x42
  40f339:	int3   
  40f33a:	cld    
  40f33b:	add    DWORD PTR [eax-0x24],0x1
  40f33f:	rol    DWORD PTR [eax-0x24],1
  40f342:	div    BYTE PTR [ebp+0x49]
  40f345:	add    BYTE PTR [ecx],cl
  40f347:	data16 xor ah,bh
  40f34a:	add    BYTE PTR [ebp+0x2d],0xe7
  40f34e:	jl     0x40f360
  40f350:	adc    bl,BYTE PTR [ebp-0x4]
  40f353:	dec    DWORD PTR [eax+0x6d75f6e8]
  40f359:	add    BYTE PTR [edx+0x60],dl
  40f35c:	adc    ah,bh
  40f35e:	div    BYTE PTR [ebp+0x39]
  40f361:	jp     0x40f36d
  40f363:	inc    DWORD PTR [eax]
	...
  40f375:	add    BYTE PTR [eax],al
  40f377:	add    BYTE PTR [eax-0x1c],cl
  40f37a:	div    BYTE PTR [ebp-0x43]
  40f37d:	(bad)  
  40f37e:	fdivr  st,st(5)
  40f380:	mov    dl,0xe6
  40f382:	div    BYTE PTR [ebp-0x53]
  40f385:	push   DWORD PTR [ebx-0x42193d9b]
  40f38b:	add    DWORD PTR ds:0x45eb0898,esi
  40f391:	adc    esi,DWORD PTR [ebp+0xc]
  40f394:	and    BYTE PTR [edx+0x5b],ah
  40f397:	or     esp,DWORD PTR [edi+0x3081575c]
  40f39d:	sbb    al,0xf6
  40f39f:	jmp    DWORD PTR ds:0x9248798e
  40f3a5:	pop    esp
  40f3a6:	add    al,0x8f
  40f3a8:	mov    eax,gs
  40f3aa:	mov    ebp,0x8817182
  40f3af:	shr    DWORD PTR [ecx+0x19],1
  40f3b2:	mov    eax,0x5f85d874
  40f3b7:	fs retf 
  40f3b9:	and    dh,BYTE PTR [edx+0x44]
  40f3bc:	les    ebp,FWORD PTR [edx]
  40f3be:	adc    BYTE PTR ds:[ebx+0x39feb0b8],bh
  40f3c5:	xor    eax,0x559474b8
  40f3ca:	or     ah,BYTE PTR [eax-0x5d]
  40f3cd:	dec    edx
  40f3ce:	mov    eax,0x9c78074
  40f3d3:	call   FWORD PTR [ecx]
  40f3d5:	loope  0x40f38e
  40f3d7:	je     0x40f35d
  40f3d9:	push   ebp
  40f3da:	xor    edi,ebp
	...
  40f3f0:	sub    edx,0xffffffb7
  40f3f3:	je     0x40f469
  40f3f5:	add    eax,0xfa73652c
  40f3fa:	add    BYTE PTR fs:[ebp+ebp*1-0x3a7614f6],cl
  40f402:	or     al,0x0
  40f404:	mov    WORD PTR ds:0x2d7cc1b3,gs
  40f40a:	pop    edi
  40f40b:	mov    edi,DWORD PTR [eax]
  40f40d:	jnp    0x40f39a
  40f40f:	jl     0x40f3a5
  40f411:	sub    eax,0x64da053f
  40f416:	into   
  40f417:	add    ecx,DWORD PTR [esi+eiz*4+0x3737083d]
  40f41e:	mov    ecx,0x2d853435
  40f423:	call   FWORD PTR [ebx]
  40f425:	scas   al,BYTE PTR es:[edi]
  40f426:	ret    0xf03
  40f429:	sbb    ecx,DWORD PTR [edx]
  40f42b:	jne    0x40f42a
  40f42d:	popa   
  40f42e:	cmp    eax,0x2d94f408
  40f433:	(bad)  
  40f434:	sti    
  40f435:	xchg   ebx,eax
  40f436:	int    0xba
  40f438:	int    0x8f
  40f43a:	fist   WORD PTR [esi+0x17]
  40f43d:	sub    BYTE PTR [ebx+0x47],ch
  40f440:	xchg   esp,eax
  40f441:	bsr    edi,edi
  40f444:	push   es
  40f445:	nop
  40f446:	dec    edi
  40f447:	test   DWORD PTR [eax-0x7c],edx
  40f44a:	fbstp  TBYTE PTR [edi]
  40f44c:	xchg   ebx,eax
  40f44d:	setne  BYTE PTR [ebx]
  40f450:	ret    
  40f451:	arpl   WORD PTR [esi+0x6],dx
	...
  40f468:	setns  bl
  40f46b:	add    edi,DWORD PTR [eax]
  40f46d:	mov    WORD PTR [edx+0x56],?
  40f470:	sbb    BYTE PTR [ebx],0x50
  40f473:	or     BYTE PTR [ebx],dl
  40f475:	xchg   esi,eax
  40f476:	bound  ebp,QWORD PTR [esi]
  40f478:	je     0x40f40e
  40f47a:	xor    edi,ebx
  40f47c:	push   es
  40f47d:	shl    edi,0x53
  40f480:	sbb    edx,DWORD PTR [edi+0x4b940562]
  40f486:	mov    ds:0x7abf8c17,al
  40f48b:	lahf   
  40f48c:	push   cs
  40f48d:	push   ecx
  40f48e:	mov    ah,0x58
  40f490:	ret    0x250d
  40f493:	adc    al,0x4b
  40f495:	xchg   ebp,eax
  40f496:	fild   WORD PTR [ebx]
  40f498:	mov    WORD PTR [edx+edi*2-0x1fae7fba],ss
  40f49f:	add    ecx,DWORD PTR [esp+edx*4-0x733f7b21]
  40f4a6:	fbstp  TBYTE PTR [esi]
  40f4a8:	test   BYTE PTR [ebp+0x1f],ch
  40f4ab:	push   ecx
  40f4ac:	ror    DWORD PTR [ebx+0x22],cl
  40f4af:	jmp    FWORD PTR [ebx]
  40f4b1:	sbb    edx,ebp
  40f4b3:	sti    
  40f4b4:	sub    eax,DWORD PTR [eax]
  40f4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b7:	mov    al,0x1a
  40f4b9:	mov    ds,WORD PTR [edi]
  40f4bb:	test   BYTE PTR ss:[ebp+0x1f],ch
  40f4bf:	push   ecx
  40f4c0:	imul   ecx,DWORD PTR [ebx+0x9],0x2b
  40f4c4:	add    ebx,DWORD PTR [edx]
  40f4c6:	and    DWORD PTR [edi+eiz*1+0xf17c1b],0x0
	...
  40f4dd:	add    BYTE PTR [eax],al
  40f4df:	add    BYTE PTR [edi],dl
  40f4e1:	out    dx,eax
  40f4e2:	push   esi
  40f4e3:	push   ds
  40f4e4:	sbb    al,0x53
  40f4e6:	dec    esp
  40f4e7:	sbb    eax,0xe908948e
  40f4ec:	pop    edx
  40f4ed:	shl    ah,1
  40f4ef:	cdq    
  40f4f0:	push   edx
  40f4f1:	sar    ah,1
  40f4f3:	cdq    
  40f4f4:	cld    
  40f4f5:	mov    al,ds:0x1be40100
  40f4fa:	imul   dh
  40f4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4fd:	shl    ah,1
  40f4ff:	pop    esi
  40f500:	mov    dh,0x16
  40f502:	je     0x40f4d9
  40f504:	nop
  40f505:	mov    al,ds:0xa5bde20c
  40f50a:	add    BYTE PTR [edx],al
  40f50c:	shl    BYTE PTR [edi-0x72314fab],1
  40f512:	or     BYTE PTR [edx],dl
  40f514:	aad    0x28
  40f516:	sub    BYTE PTR [eax+eiz*1],0x14
  40f51a:	je     0x40f4dd
  40f51c:	nop
  40f51d:	xchg   esp,eax
  40f51e:	test   al,0xe9
  40f520:	mov    ecx,0xdaa9218c
  40f525:	mov    ecx,0x948cabbf
  40f52a:	and    DWORD PTR [eax+edi*8],0xbfebe953
  40f531:	sub    al,0x61
  40f533:	add    eax,0x2c8019fb
  40f538:	cld    
  40f539:	or     eax,0x30c5a6f1
  40f53e:	or     ecx,ebp
  40f540:	(bad)  
  40f541:	xchg   esp,eax
  40f542:	loope  0x40f55e
	...
  40f558:	or     eax,0xcb9f8d0
  40f55d:	sar    ah,1
  40f55f:	mov    ecx,0x9fea
  40f564:	mov    ebp,0xcafff269
  40f569:	popf   
  40f56a:	inc    esp
  40f56b:	lock (bad) 
  40f56d:	shl    eax,cl
  40f56f:	ja     0x40f562
  40f571:	sbb    eax,0xe9f574d8
  40f576:	jl     0x40f574
  40f578:	jge    0x40f503
  40f57a:	ins    BYTE PTR es:[edi],dx
  40f57b:	(bad)  
  40f57c:	jp     0x40f5bb
  40f57e:	mov    dh,0x5e
  40f580:	sub    bl,al
  40f582:	(bad)  
  40f583:	or     al,0xe5
  40f585:	aaa    
  40f586:	inc    ebp
  40f587:	call   0xac2dc156
  40f58c:	ss arpl ax,sp
  40f58f:	add    BYTE PTR [ebx-0x71],al
  40f592:	mov    DWORD PTR [ebp-0x2f],edi
  40f595:	xchg   esp,eax
  40f596:	jnp    0x40f559
  40f598:	ss fs loopne 0x40f59c
  40f59c:	inc    eax
  40f59d:	xchg   edx,eax
  40f59e:	mov    DWORD PTR [ebp-0x3f],edi
  40f5a1:	xchg   esp,eax
  40f5a2:	jnp    0x40f5b4
  40f5a4:	retf   0xf45b
  40f5a7:	call   0x3668f1
  40f5ac:	mov    ss,WORD PTR [eax+0x54]
  40f5af:	pop    edi
  40f5b0:	sub    al,0x56
  40f5b2:	add    al,BYTE PTR [eax]
  40f5b4:	out    0x64,al
  40f5b6:	in     al,dx
  40f5b7:	add    BYTE PTR [eax+0x8bdf8d],al
	...
  40f5cd:	add    BYTE PTR [eax],al
  40f5cf:	add    BYTE PTR [ebp-0x6c],dh
  40f5d2:	or     BYTE PTR [ebx+0x75f580b0],cl
  40f5d8:	add    DWORD PTR [edi-0x138f750b],edx
  40f5de:	enter  0x37e0,0xc4
  40f5e2:	loopne 0x40f5c4
  40f5e4:	xchg   bh,ah
  40f5e6:	test   BYTE PTR [ecx+0x7d8347e0],0x69
  40f5ed:	call   0xad41:0xd28cfc7c
  40f5f4:	pop    es
  40f5f5:	pop    esi
  40f5f6:	into   
  40f5f7:	inc    esp
  40f5f8:	sub    al,0x2e
  40f5fa:	or     al,BYTE PTR [eax]
  40f5fc:	mov    WORD PTR [eax-0x4fa31fc0],gs
  40f602:	inc    eax
  40f603:	hlt    
  40f604:	pop    esp
  40f605:	sti    
  40f606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f607:	je     0x40f58d
  40f609:	test   DWORD PTR [esi-0xd891406],edx
  40f60f:	mov    edi,0x7c8b3158
  40f614:	loopne 0x40f643
  40f616:	ds push es
  40f618:	movups XMMWORD PTR [edx-0x74b0bf01],xmm5
  40f61f:	jl     0x40f5cd
  40f621:	sub    eax,0xa0bb083e
  40f626:	test   eax,0xa3cb09e7
  40f62b:	(bad)  
  40f62c:	stos   DWORD PTR es:[edi],eax
  40f62d:	rcr    al,0xe7
  40f630:	jbe    0x40f671
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	inc    BYTE PTR [eax]
	...
  40f645:	add    BYTE PTR [eax],al
  40f647:	add    BYTE PTR [ebx+0x19e7b8c0],bl
  40f64d:	retf   0xfea3
  40f650:	mov    bh,0xed
  40f652:	inc    esi
  40f653:	pop    edi
  40f654:	push   ebp
  40f655:	jmp    0x40f65f
  40f657:	add    BYTE PTR [edi],al
  40f659:	jo     0x40f607
  40f65b:	stos   BYTE PTR es:[edi],al
  40f65c:	jae    0x40f6be
  40f65e:	mov    al,ds:0xd11e982
  40f663:	je     0x40f5ef
  40f665:	stos   BYTE PTR es:[edi],al
  40f666:	and    eax,0x98808cf4
  40f66b:	mov    cl,cl
  40f66d:	and    DWORD PTR [ebp+0xca66874],esp
  40f673:	(bad)  
  40f674:	mov    ecx,0xaf4994a1
  40f679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f67a:	mov    ds:0xdf948db7,eax
  40f67f:	add    ecx,DWORD PTR [esi+esi*4-0x77b2454a]
  40f686:	fist   WORD PTR [esi+0x7]
  40f689:	sub    BYTE PTR [ebx-0x38],ah
  40f68c:	dec    ebx
  40f68d:	mov    edi,0x949c2f62
  40f692:	mov    esp,0xdf953bf9
  40f697:	add    ecx,DWORD PTR [edi+esi*4-0x6b603dd8]
  40f69e:	cs aas 
  40f6a0:	jl     0x40f70d
  40f6a2:	xor    DWORD PTR [ecx+0x48],edi
  40f6a5:	test   BYTE PTR [esi],dl
  40f6a7:	out    0xdf,eax
  40f6a9:	add    eax,0x3a1
	...
  40f6be:	add    BYTE PTR [eax],al
  40f6c0:	add    eax,0x8c19efd1
  40f6c5:	pop    ss
  40f6c6:	jge    0x40f67b
  40f6c8:	ret    0xe7a0
  40f6cb:	fwait
  40f6cc:	call   0xeeddd8a
  40f6d1:	cdq    
  40f6d2:	out    dx,eax
  40f6d3:	add    esp,DWORD PTR [ecx]
  40f6d5:	mov    BYTE PTR [ecx+0x3],bl
  40f6d8:	ss mov al,0xde
  40f6db:	test   BYTE PTR ss:[ebx+edi*2],ch
  40f6df:	dec    ecx
  40f6e0:	xchg   ebx,eax
  40f6e1:	push   ss
  40f6e2:	iret   
  40f6e3:	mov    al,ss:0x6bfc3d15
  40f6e9:	and    ebx,DWORD PTR ds:0x2d0c7aad
  40f6ef:	mov    al,0x72
  40f6f1:	mov    al,ds:0x8ce0acf3
  40f6f6:	xchg   edi,eax
  40f6f7:	je     0x40f6b9
  40f6f9:	adc    eax,0x80e0ac9f
  40f6fe:	xchg   BYTE PTR [esi],dh
  40f700:	test   BYTE PTR [esp+ebx*2],ch
  40f703:	dec    esi
  40f704:	dec    ebx
  40f705:	push   ss
  40f706:	jns    0x40f74e
  40f708:	inc    esp
  40f709:	push   ss
  40f70a:	or     esp,edi
  40f70c:	mov    ds:0x17e17c15,eax
  40f711:	clc    
  40f712:	push   ebx
  40f713:	data16 clc 
  40f715:	push   ss
  40f716:	jl     0x40f70d
  40f718:	lock mov al,ds:0xb94f4100
  40f71e:	cmc    
  40f71f:	dec    esi
  40f720:	xchg   esp,eax
  40f721:	rcr    BYTE PTR [edx+ebp*2],1
	...
  40f738:	not    DWORD PTR ds:0x990ced7a
  40f73e:	hlt    
  40f73f:	in     al,0xc3
  40f741:	xchg   DWORD PTR [ecx+0x7c9123ac],ecx
  40f747:	out    dx,al
  40f748:	(bad)  
  40f749:	aad    0x55
  40f74b:	xor    ch,cl
  40f74d:	or     DWORD PTR [eax],0x48082348
  40f753:	jmp    0xac712516
  40f758:	neg    DWORD PTR [edi-0x49302df3]
  40f75e:	mov    edi,0x8994a32b
  40f763:	ins    BYTE PTR es:[edi],dx
  40f764:	jecxz  0x40f6f6
  40f766:	jnp    0x40f75f
  40f768:	mul    BYTE PTR [eax-0x73a221e4]
  40f76e:	loopne 0x40f771
  40f770:	inc    ebp
  40f771:	adc    eax,0x4c4d60f6
  40f776:	popa   
  40f777:	jmp    0xd1498b0b
  40f77c:	push   cs
  40f77d:	mov    bl,0xf5
  40f77f:	mov    dh,0xf9
  40f781:	sar    ah,1
  40f783:	add    ah,BYTE PTR [edi]
  40f785:	sub    bl,BYTE PTR [ebx]
  40f787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f788:	popf   
  40f789:	xor    ch,0x14
  40f78c:	pusha  
  40f78d:	sub    eax,0x1627343c
  40f792:	xor    BYTE PTR [esp+ebx*1],0xc
  40f796:	or     eax,0x31d1cf00
  40f79b:	jge    0x40f79d
	...
  40f7ad:	add    BYTE PTR [eax],al
  40f7af:	add    BYTE PTR ds:0x688bdf5e,cl
  40f7b5:	test   BYTE PTR [ecx+0x5642538],cl
  40f7bb:	dec    DWORD PTR [eax-0x1b]
  40f7be:	in     eax,dx
  40f7bf:	inc    ecx
  40f7c0:	push   edi
  40f7c1:	jmp    0xc2bf:0xc9652bf6
  40f7c8:	sbb    DWORD PTR [ecx-0x6cae8277],edx
  40f7ce:	add    eax,0x8900a85
  40f7d3:	add    BYTE PTR [esi+0x6e6ee2e9],cl
  40f7d9:	ret    
  40f7da:	cld    
  40f7db:	mov    edi,ecx
  40f7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7de:	or     al,BYTE PTR [ebp-0x7b]
  40f7e1:	jbe    0x40f7eb
  40f7e3:	push   eax
  40f7e4:	and    BYTE PTR [ebx+0x0],0xe8
  40f7e8:	ds (bad) 
  40f7ea:	cmc    
  40f7eb:	call   DWORD PTR [edx+0x38ff1c63]
  40f7f1:	sbb    esi,ebp
  40f7f3:	mov    ecx,0x89f6ea21
  40f7f8:	call   0xb24157d9
  40f7fd:	arpl   WORD PTR [edi+edi*8],bx
  40f800:	cmp    BYTE PTR [eax],bl
  40f802:	out    dx,al
  40f803:	dec    ecx
  40f804:	mov    ebp,0x708bf6e9
  40f809:	test   BYTE PTR [ecx+0x5c57539],cl
  40f80f:	(bad)  
  40f810:	mov    eax,0xedee44
	...
  40f825:	add    BYTE PTR [eax],al
  40f827:	add    ah,al
  40f829:	aas    
  40f82a:	imul   DWORD PTR [ebx]
  40f82c:	and    eax,0x69c2bf5f
  40f831:	cwde   
  40f832:	cmc    
  40f833:	jne    0x40f7c2
  40f835:	aas    
  40f836:	jge    0x40f84c
  40f838:	mov    WORD PTR [edx],gs
  40f83a:	cmp    esp,ecx
  40f83c:	push   ebx
  40f83d:	test   eax,0x5c1fef0
  40f842:	xchg   edx,eax
  40f843:	xchg   edx,eax
  40f844:	inc    edx
  40f845:	xchg   ebx,eax
  40f846:	mov    ds:0xf3114c0a,al
  40f84b:	(bad)  
  40f84c:	mov    ecx,0xadc59189
  40f851:	jp     0x40f7f5
  40f853:	sub    cl,BYTE PTR [ebx+edx*2-0x4b]
  40f857:	rol    DWORD PTR [eax-0x6ec4b503],0x65
  40f85e:	cmp    ecx,DWORD PTR [ebp-0xfdaef5]
  40f864:	jns    0x40f84f
  40f866:	mov    ds:0x38cac474,al
  40f86b:	or     al,0xf3
  40f86d:	dec    eax
  40f86e:	repnz out 0x72,eax
  40f871:	mov    ebx,0xbd97fea2
  40f876:	repnz test BYTE PTR [esi],bh
  40f879:	cld    
  40f87a:	or     DWORD PTR [eax],eax
  40f87c:	shr    DWORD PTR [eax],cl
  40f87e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f87f:	out    0x21,eax
  40f881:	sbb    eax,0xbd77fea3
  40f886:	inc    edx
  40f887:	leave  
  40f888:	into   
  40f889:	icebp  
  40f88a:	or     ecx,ebp
	...
  40f8a0:	jb     0x40f89e
  40f8a2:	or     DWORD PTR [eax],eax
  40f8a4:	vmwrite esp,DWORD PTR [eax-0x7876cf4]
  40f8ab:	add    BYTE PTR [ebp+edi*8-0x665a012c],cl
  40f8b2:	or     DWORD PTR [eax],eax
  40f8b4:	mov    WORD PTR [esi-0x6e80bbb],es
  40f8ba:	arpl   WORD PTR [edx],ax
  40f8bc:	ror    DWORD PTR [ebp+0x17],1
  40f8bf:	add    ah,bl
  40f8c1:	inc    edx
  40f8c2:	or     BYTE PTR es:[esp+edx*4-0x1a],dh
  40f8c7:	dec    edx
  40f8c8:	arpl   WORD PTR [ebx],dx
  40f8ca:	sbb    al,BYTE PTR [ebx+ebx*2]
  40f8cd:	mov    ebx,esi
  40f8cf:	test   al,0xd8
  40f8d1:	pushf  
  40f8d2:	xchg   DWORD PTR [ebp+0x42],esp
  40f8d5:	adc    ecx,DWORD PTR [edi+0x62a8d07d]
  40f8db:	jmp    0x40f918
  40f8dd:	mov    dh,ch
  40f8df:	test   al,0xb8
  40f8e1:	or     BYTE PTR [eax+0x6f13ad41],cl
  40f8e7:	fucom  st(3)
  40f8e9:	jb     0x40f923
  40f8eb:	(bad)  
  40f8ec:	jg     0x40f882
  40f8ee:	jmp    0xb98:0x48999fd5
  40f8f5:	adc    esp,eax
  40f8f7:	jp     0x40f941
  40f8f9:	add    dl,bl
  40f8fb:	add    edi,ebx
  40f8fd:	mov    bl,dl
  40f8ff:	test   al,0x78
  40f901:	pushf  
  40f902:	inc    edi
  40f903:	xor    eax,0x0
	...
  40f918:	jecxz  0x40f92c
  40f91a:	das    
  40f91b:	jge    0x40f96d
  40f91d:	test   al,0x62
  40f91f:	jmp    0x40f8fc
  40f921:	xchg   esi,ebp
  40f923:	test   al,0x58
  40f925:	or     BYTE PTR [eax],cl
  40f927:	adc    DWORD PTR ds:0x3dd0f13,ebp
  40f92d:	jae    0x40f967
  40f92f:	(bad)  
  40f930:	lahf   
  40f931:	xchg   esp,eax
  40f932:	(bad)  
  40f933:	out    dx,al
  40f934:	mov    edi,0x1b03a121
  40f939:	pop    ecx
  40f93a:	xlat   BYTE PTR ds:[ebx]
  40f93b:	jl     0x40f985
  40f93d:	cld    
  40f93e:	bound  ebx,QWORD PTR [ebx-0x1402a79]
  40f944:	data16 out 0x98,al
  40f947:	test   al,0x8b
  40f949:	adc    ah,al
  40f94b:	mov    al,0x7c
  40f94d:	push   ss
  40f94e:	fcom   DWORD PTR [eax]
  40f950:	add    eax,0x8c90858
  40f955:	and    eax,0xe458e90a
  40f95b:	loop   0x40f8ff
  40f95d:	cld    
  40f95e:	jge    0x40f94b
  40f960:	clc    
  40f961:	mov    esp,0x58d0bb21
  40f966:	in     al,0xc2
  40f968:	mov    dh,ah
  40f96a:	xor    DWORD PTR [eax+eiz*1],0x10cac817
  40f971:	std    
  40f972:	or     al,0x7e
  40f974:	(bad)  
  40f975:	xchg   esi,eax
  40f976:	pop    ebx
  40f977:	mov    DWORD PTR [esi+0x72ec68],esp
	...
  40f98d:	add    BYTE PTR [eax],al
  40f98f:	add    BYTE PTR [edx-0x4],ah
  40f992:	xor    DWORD PTR [ebx+edi*8+0x52620b86],esp
  40f999:	hlt    
  40f99a:	loope  0x40f986
  40f99c:	mov    BYTE PTR [eax-0x14],bl
  40f99f:	inc    esi
  40f9a0:	mov    dl,0xa8
  40f9a2:	cmc    
  40f9a3:	mov    ah,0x23
  40f9a5:	(bad)  
  40f9a6:	cmc    
  40f9a7:	mov    esp,0x36a7f9f7
  40f9ac:	xor    al,0x13
  40f9ae:	add    ch,BYTE PTR [ecx]
  40f9b0:	mov    dl,0xa1
  40f9b2:	cmc    
  40f9b3:	xchg   esp,eax
  40f9b4:	sub    edi,edx
  40f9b6:	xchg   ebx,eax
  40f9b7:	mov    DWORD PTR [ebx+edx*1],esp
  40f9ba:	and    ch,BYTE PTR [ecx]
  40f9bc:	push   esp
  40f9bd:	fcmovne st,st(2)
  40f9bf:	fisttp QWORD PTR [edi+0x381d4c1b]
  40f9c5:	loope  0x40f94a
  40f9c7:	lods   al,BYTE PTR ds:[esi]
  40f9c8:	ret    
  40f9c9:	popa   
  40f9ca:	and    DWORD PTR [edi+edx*8+0x16d15a61],0xf
  40f9d2:	neg    dh
  40f9d4:	sbb    DWORD PTR [eax-0x28],ebx
  40f9d7:	(bad)  
  40f9d8:	pop    ebp
  40f9d9:	lock loopne 0x40f9b2
  40f9dc:	fist   DWORD PTR [ecx]
  40f9de:	test   BYTE PTR [eax],0xf6
  40f9e1:	mov    ebx,0x9bc100d8
  40f9e6:	mov    DWORD PTR [ebp+0x1d],edi
  40f9e9:	cwde   
  40f9ea:	jl     0x40fa03
  40f9ec:	cmp    al,bl
  40f9ee:	fdiv   st(7),st
  40f9f0:	and    al,0xf6
  40f9f3:	jne    0x40f9f5
	...
  40fa05:	add    BYTE PTR [eax],al
  40fa07:	add    BYTE PTR [ecx+0x3a],ch
  40fa0a:	jge    0x40fa14
  40fa0c:	cli    
  40fa0d:	bound  edx,QWORD PTR [eax]
  40fa0f:	jmp    DWORD PTR [eax+0xe02ede0]
  40fa15:	cmp    edi,esi
  40fa17:	inc    edi
  40fa18:	dec    esi
  40fa19:	mov    esp,0xe5a70ff0
  40fa1e:	repz (bad) 
  40fa20:	mov    edx,0xbdf47d39
  40fa25:	push   ebp
  40fa26:	push   0x880baff
  40fa2b:	add    BYTE PTR ds:0xb7c95595,ah
  40fa31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa32:	or     BYTE PTR [ebp+0x7e],dl
  40fa35:	sub    al,0x5f
  40fa37:	inc    DWORD PTR [eax+0xd]
  40fa3a:	out    dx,al
  40fa3b:	ror    bl,cl
  40fa3d:	cmp    edi,esi
  40fa3f:	push   0x47b3d5
  40fa44:	stos   BYTE PTR es:[edi],al
  40fa45:	ret    
  40fa46:	add    al,ch
  40fa48:	popa   
  40fa49:	int3   
  40fa4a:	or     BYTE PTR [eax],al
  40fa4c:	out    dx,al
  40fa4d:	aam    0x7c
  40fa4f:	add    eax,0x8c84ffa
  40fa54:	mov    ch,0x4e
  40fa56:	idiv   bh
  40fa58:	mov    edx,0x74e800c3
  40fa5d:	stos   BYTE PTR es:[edi],al
  40fa5e:	cmc    
  40fa5f:	(bad)  
  40fa60:	jp     0x40fa18
  40fa62:	imul   eax,DWORD PTR [ecx-0x4b],0x39
  40fa66:	jge    0x40fa70
  40fa68:	bound  esi,QWORD PTR [eax]
  40fa6a:	jl     0x40fab7
	...
  40fa80:	mov    ebx,?
  40fa82:	or     DWORD PTR [ebx],ecx
  40fa84:	dec    esp
  40fa85:	imul   eax,DWORD PTR [edi],0xf23c555f
  40fa8b:	push   DWORD PTR [edi+0xb]
  40fa8e:	retf   0x73b8
  40fa91:	inc    edi
  40fa92:	scas   eax,DWORD PTR es:[edi]
  40fa93:	(bad)  
  40fa94:	pop    esi
  40fa95:	nop
  40fa96:	loope  0x40fa9e
  40fa98:	fstp   DWORD PTR ds:0x258474af
  40fa9e:	jns    0x40fae9
  40faa0:	mov    ebp,?
  40faa2:	repnz mov edi,0xc94ef8c1
  40faa8:	dec    esi
  40faa9:	push   es
  40faaa:	or     ch,BYTE PTR [eax+0x1e]
  40faad:	cdq    
  40faae:	dec    ebx
  40faaf:	add    BYTE PTR [ebx],dh
  40fab1:	adc    edx,esi
  40fab3:	out    0xcd,eax
  40fab5:	mov    dl,0xc
  40fab7:	add    BYTE PTR [edi+0x1b0938bd],dl
  40fabd:	jmp    0x69ca89bf
  40fac2:	jnp    0x40fb04
  40fac4:	mov    ebp,ss
  40fac6:	and    BYTE PTR [ebp+ecx*2-0x3],0xae
  40facb:	je     0x40fa51
  40facd:	gs (bad) 
  40facf:	dec    edx
  40fad0:	mov    ebp,?
  40fad2:	repnz mov edi,0x74aef461
  40fad8:	nop
  40fad9:	xchg   BYTE PTR [eax],cl
  40fadb:	add    BYTE PTR [ebx],cl
  40fadd:	cmp    eax,0x2120680a
  40fae2:	dec    ebp
	...
  40faf7:	add    bl,cl
  40faf9:	sub    dl,dh
  40fafb:	out    0x91,eax
  40fafd:	inc    edx
  40fafe:	or     al,BYTE PTR [eax]
  40fb00:	xchg   DWORD PTR [ebp-0x6f4cf6c8],edi
  40fb06:	std    
  40fb07:	mov    ss,WORD PTR [ecx-0x73bf8107]
  40fb0d:	xchg   esp,eax
  40fb0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb0f:	add    ecx,DWORD PTR [esp+edx*4-0x2d3abb21]
  40fb16:	out    0x3,eax
  40fb18:	loope  0x40fb35
  40fb1a:	mov    ah,0x81
  40fb1c:	dec    edi
  40fb1d:	or     BYTE PTR [esi],dl
  40fb1f:	dec    ebp
  40fb20:	in     al,0x70
  40fb22:	dec    esp
  40fb23:	inc    ebx
  40fb24:	mov    WORD PTR [edi],cs
  40fb26:	xor    eax,0x2af173fc
  40fb2b:	add    al,0x8c
  40fb2d:	fwait
  40fb2e:	lahf   
  40fb2f:	das    
  40fb30:	xchg   edx,eax
  40fb31:	outs   dx,DWORD PTR ds:[esi]
  40fb32:	xor    eax,0xdf984dbb
  40fb37:	inc    ebx
  40fb38:	pop    ss
  40fb39:	add    al,0x6b
  40fb3b:	daa    
  40fb3c:	xchg   esp,eax
  40fb3d:	sti    
  40fb3e:	loopne 0x40fb9f
  40fb40:	mov    ebx,0x362edfce
  40fb45:	cmp    BYTE PTR [eax],cl
  40fb47:	inc    esi
  40fb48:	mov    cl,0x55
  40fb4a:	fbld   TBYTE PTR [eax+ebx*4-0x3992a864]
  40fb51:	xchg   esp,eax
  40fb52:	(bad)  
  40fb54:	ror    DWORD PTR [eax-0x2295bb1b],cl
  40fb5a:	and    DWORD PTR [eax],eax
	...
  40fb70:	mov    WORD PTR [ebx],ds
  40fb72:	int    0xfb
  40fb74:	out    0xb1,al
  40fb76:	pop    edi
  40fb77:	in     eax,0x84
  40fb79:	mov    al,bl
  40fb7b:	sub    DWORD PTR [edx+0xc0fbba1],0xffffffcf
  40fb82:	stc    
  40fb83:	das    
  40fb84:	mov    edx,DWORD PTR [edi+edx*8]
  40fb87:	dec    eax
  40fb88:	pop    eax
  40fb89:	call   0x83ec:0x8868e55f
  40fb90:	xor    BYTE PTR [esp+esi*2+0x0],0xd2
  40fb95:	xchg   esi,eax
  40fb96:	mov    edi,0x8cf0c3c
  40fb9b:	jmp    0xa50ee91a
  40fba0:	jmp    0x40fbb0
  40fba2:	imul   cl
  40fba4:	(bad)  
  40fba5:	xlat   BYTE PTR ds:[ebx]
  40fba6:	dec    ebx
  40fba7:	loope  0x40fb38
  40fba9:	xchg   esp,eax
  40fbaa:	or     cl,ch
  40fbac:	add    al,0x91
  40fbae:	add    dl,al
  40fbb0:	les    edx,FWORD PTR [esi+esi*1]
  40fbb3:	push   cs
  40fbb4:	stos   DWORD PTR es:[edi],eax
  40fbb5:	mov    ecx,0xe243c89
  40fbba:	jge    0x40fb97
  40fbbc:	cmp    BYTE PTR [ecx-0x10],bl
  40fbbf:	call   0x1c499053
  40fbc4:	test   ch,dl
  40fbc6:	dec    ebx
  40fbc7:	popf   
  40fbc8:	mov    ss,WORD PTR [eax+ecx*1-0x25cdb17]
  40fbcf:	and    al,0xf0
  40fbd1:	xchg   esp,eax
  40fbd2:	or     cl,ch
	...
  40fbe8:	pop    DWORD PTR [edi-0x51cf58fe]
  40fbee:	int    0x2c
  40fbf0:	hlt    
  40fbf1:	or     eax,0x148fe9f6
  40fbf6:	lds    ebp,FWORD PTR ss:[edx-0x69]
  40fbfa:	cmc    
  40fbfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbfc:	out    0xfa,eax
  40fbfe:	or     eax,0x90cca2e
  40fc03:	jmp    0xc4ca9097
  40fc08:	xor    edx,DWORD PTR [ebp-0x68ce1585]
  40fc0e:	sub    BYTE PTR [esi-0x4bf730f1],ch
  40fc14:	pop    edi
  40fc15:	sbb    dh,BYTE PTR [ecx+esi*8-0xc]
  40fc19:	test   eax,0x88efde88
  40fc1e:	push   ds
  40fc1f:	imul   esi,DWORD PTR [eax-0x6d],0x659f9428
  40fc26:	loope  0x40fc28
  40fc28:	stos   DWORD PTR es:[edi],eax
  40fc29:	mov    ecx,DWORD PTR [esi+0x1]
  40fc2c:	cmp    eax,0xe2804f10
  40fc31:	xchg   ecx,eax
  40fc32:	jnp    0x40fc29
  40fc34:	adc    cl,cl
  40fc36:	dec    ebp
  40fc37:	xor    BYTE PTR [edx-0x68],0x7b
  40fc3b:	fucomip st,st(2)
  40fc3d:	pop    ebx
  40fc3e:	cld    
  40fc3f:	add    BYTE PTR [ebp-0x6f],dh
  40fc42:	or     BYTE PTR [ebx+0x7d81a0d8],cl
  40fc48:	jge    0x40fc88
  40fc4a:	sub    BYTE PTR [eax+0x0],al
	...
  40fc60:	jb     0x40fc5f
  40fc62:	jl     0x40fc80
  40fc64:	cmp    ebx,DWORD PTR [ecx+0x2c98ff08]
  40fc6a:	pop    esp
  40fc6b:	call   0x382fae
  40fc70:	pop    esi
  40fc71:	sar    DWORD PTR [esi+eax*1-0x7e],1
  40fc75:	push   edx
  40fc76:	mov    edi,0x819129c2
  40fc7b:	imul   DWORD PTR [ebx+0x31]
  40fc7e:	dec    ebp
  40fc7f:	hlt    
  40fc80:	push   0x18
  40fc82:	aaa    
  40fc83:	add    BYTE PTR [eax],ch
  40fc85:	push   eax
  40fc86:	div    DWORD PTR [ebp-0x67]
  40fc89:	retf   0xce0
  40fc8c:	mov    bl,0x31
  40fc8e:	neg    DWORD PTR [edi-0x2d]
  40fc91:	ffreep st(7)
  40fc93:	add    al,0xf5
  40fc95:	retf   
  40fc96:	sub    esp,0x56cddc76
  40fc9c:	sbb    dl,BYTE PTR [esi]
  40fc9e:	jne    0x40fcb4
  40fca0:	in     eax,0xa4
  40fca2:	inc    DWORD PTR [edx+0x414204e0]
  40fca8:	cmc    
  40fca9:	nop
  40fcaa:	jnp    0x40fcb2
  40fcac:	rcl    BYTE PTR [edx-0x41],cl
  40fcaf:	ret    0x90d5
  40fcb2:	add    DWORD PTR [ebp-0x74],0xc004d50f
  40fcb9:	ins    BYTE PTR es:[edi],dx
  40fcba:	dec    ebx
  40fcbb:	add    BYTE PTR [ebx-0x73ff9286],cl
  40fcc1:	sti    
  40fcc2:	aam    0x4
	...
  40fcd8:	mov    WORD PTR [esi+0x4b],?
  40fcdb:	add    BYTE PTR [ebx-0x73ff8e86],dl
  40fce1:	sti    
  40fce2:	aam    0x4
  40fce4:	mov    BYTE PTR [esi+0x4c],bh
  40fce7:	add    BYTE PTR [ebx-0x73ff7982],bl
  40fced:	std    
  40fcee:	cwde   
  40fcef:	inc    esp
  40fcf0:	sub    BYTE PTR [esi-0x518bbb69],0x97
  40fcf7:	inc    esp
  40fcf8:	push   0x6034a9ae
  40fcfd:	ins    BYTE PTR es:[edi],dx
  40fcfe:	dec    esp
  40fcff:	add    BYTE PTR [ebx-0x57],bl
  40fd02:	cld    
  40fd03:	out    0x12,eax
  40fd05:	ss stos DWORD PTR es:[edi],eax
  40fd07:	(bad)  
  40fd08:	sbb    DWORD PTR [ecx-0x4eeeb05c],edi
  40fd0e:	mov    eax,0x9cb9094f
  40fd13:	dec    edi
  40fd14:	xor    eax,DWORD PTR [ecx+0xe]
  40fd17:	(bad)  
  40fd18:	int    0xfd
  40fd1a:	stos   BYTE PTR es:[edi],al
  40fd1b:	je     0x40fd99
  40fd1d:	adc    eax,0x731bf76e
  40fd22:	cwde   
  40fd23:	inc    esp
  40fd24:	xor    BYTE PTR [esi-0x67],cl
  40fd27:	inc    esp
  40fd28:	in     al,dx
  40fd29:	dec    ebp
  40fd2a:	cdq    
  40fd2b:	inc    esp
  40fd2c:	call   0x8c75a87e
  40fd31:	or     BYTE PTR [eax+eax*1-0xd],0x40
  40fd36:	cli    
  40fd37:	out    0x16,eax
  40fd39:	(bad)  
  40fd3a:	stos   BYTE PTR es:[edi],al
  40fd3b:	inc    BYTE PTR [eax]
	...
  40fd4d:	add    BYTE PTR [eax],al
  40fd4f:	add    bl,ah
  40fd51:	inc    eax
  40fd52:	scas   al,BYTE PTR es:[edi]
  40fd53:	mov    ss,WORD PTR [ecx-0x6c]
  40fd56:	xor    esp,DWORD PTR [edx+0x4866e858]
  40fd5c:	in     al,0xd3
  40fd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd5f:	mov    bl,0xc3
  40fd61:	or     esp,eax
  40fd63:	add    ecx,DWORD PTR [ecx]
  40fd65:	push   edx
  40fd66:	cmp    esi,DWORD PTR [ebx]
  40fd68:	es xchg ebp,eax
  40fd6a:	cdq    
  40fd6b:	add    esi,DWORD PTR [esi]
  40fd6d:	xchg   esp,eax
  40fd6e:	mov    DWORD PTR [ebx],eax
  40fd70:	ss xchg esp,eax
  40fd72:	push   esp
  40fd73:	dec    eax
  40fd74:	shl    BYTE PTR [esi+ebp*8-0x9],0x7f
  40fd79:	pop    eax
  40fd7a:	and    BYTE PTR [edi+edx*4],al
  40fd7d:	aam    0xee
  40fd7f:	xchg   DWORD PTR [ebp+0xf03df95],edx
  40fd85:	mov    DWORD PTR [edi-0x1fef7cfc],ecx
  40fd8b:	add    cl,BYTE PTR [esp+edx*4-0x30afb096]
  40fd92:	adc    al,0xa8
  40fd94:	mov    dl,BYTE PTR [ebx]
  40fd96:	xchg   esp,eax
  40fd97:	add    al,0x8c
  40fd99:	xchg   esp,eax
  40fd9a:	xchg   ebx,eax
  40fd9b:	(bad)  
  40fd9c:	shl    ah,0x6a
  40fd9f:	pop    ds
  40fda0:	pusha  
  40fda1:	pop    ds
  40fda2:	adc    eax,0x72962ed0
  40fda7:	push   0x91a38132
  40fdac:	shl    al,1
  40fdae:	jle    0x40fdc7
  40fdb0:	cmp    al,0xfc
  40fdb2:	scas   eax,DWORD PTR es:[edi]
  40fdb3:	dec    ebx
	...
  40fdc8:	mov    WORD PTR [edx+eiz*2-0x196befe1],ss
  40fdcf:	xchg   ecx,ebx
  40fdd1:	xchg   ebx,eax
  40fdd2:	fild   WORD PTR [ebx]
  40fdd4:	jns    0x10cc0229
  40fdda:	and    al,0x4
  40fddc:	mov    WORD PTR [edx+eiz*2+0x893f01f],ss
  40fde3:	out    0xb,al
  40fde5:	dec    ebp
  40fde6:	or     ecx,ebp
  40fde8:	(bad)  
  40fde9:	or     edi,DWORD PTR [ebp+eiz*1+0x20]
  40fded:	int3   
  40fdee:	push   ebx
  40fdef:	push   ds
  40fdf0:	in     eax,dx
  40fdf1:	sbb    ecx,DWORD PTR [ecx+eiz*1-0x13]
  40fdf5:	jg     0x40fdeb
  40fdf7:	push   cs
  40fdf8:	mov    ds:0x1b7cf5dc,eax
  40fdfd:	repz push ebp
  40fdff:	pushf  
  40fe00:	in     al,dx
  40fe01:	or     DWORD PTR [ecx+0x32],esp
  40fe04:	imul   edx,DWORD PTR [ebp+0x8],0x1
  40fe08:	fist   DWORD PTR [ecx+0x8]
  40fe0b:	jmp    0x44f27a6f
  40fe10:	iret   
  40fe11:	xchg   esp,eax
  40fe12:	cmc    
  40fe13:	pop    esp
  40fe14:	push   eax
  40fe15:	repnz mov esp,DWORD PTR [eax]
  40fe18:	nop
  40fe19:	xchg   esp,eax
  40fe1a:	add    DWORD PTR [ecx-0x549f5365],ebp
  40fe20:	mov    dl,0x53
  40fe22:	or     cl,al
  40fe24:	dec    esi
  40fe25:	push   ebx
  40fe26:	or     cl,ch
  40fe28:	lahf   
  40fe29:	jl     0x40fdf5
  40fe2b:	or     al,0x0
	...
  40fe3d:	add    BYTE PTR [eax],al
  40fe3f:	add    bh,cl
  40fe41:	xchg   esp,eax
  40fe42:	cmc    
  40fe43:	adc    al,0x58
  40fe45:	repnz pop edi
  40fe47:	and    BYTE PTR [eax-0x5c56fe6c],cl
  40fe4d:	lods   al,BYTE PTR ds:[esi]
  40fe4e:	pusha  
  40fe4f:	mov    bl,0x6a
  40fe51:	push   ebx
  40fe52:	or     BYTE PTR [ecx-0x16f7ad4e],dl
  40fe58:	pop    edi
  40fe59:	jl     0x40fe1d
  40fe5b:	add    al,0xcf
  40fe5d:	xchg   esp,eax
  40fe5e:	cmc    
  40fe5f:	fadd   QWORD PTR [edi-0xe]
  40fe62:	inc    ebx
  40fe63:	mov    al,0x8f
  40fe65:	xchg   esp,eax
  40fe66:	add    DWORD PTR [ecx],ebp
  40fe68:	call   0xb6f9:0x8fe9604f
  40fe6f:	add    BYTE PTR [edx-0x5e],cl
  40fe72:	add    al,0xe8
  40fe74:	aam    0xce
  40fe76:	cmc    
  40fe77:	call   FWORD PTR [edx+0x248efde2]
  40fe7d:	xchg   esi,eax
  40fe7e:	cmc    
  40fe7f:	jne    0x40fe5a
  40fe81:	cmp    eax,0x34aa595b
  40fe86:	div    DWORD PTR [ebp-0x67]
  40fe89:	xor    al,0x7d
  40fe8b:	hlt    
  40fe8c:	mov    ah,BYTE PTR [edx-0x30f117fc]
  40fe92:	cmc    
  40fe93:	jmp    FWORD PTR [edx+0x20fff89f]
  40fe99:	cmp    eax,0x3db975f7
  40fe9e:	gs pop ecx
  40fea0:	stos   BYTE PTR es:[edi],al
  40fea1:	sub    edi,esi
  40fea3:	jne    0x40fea5
	...
  40feb5:	add    BYTE PTR [eax],al
  40feb7:	add    BYTE PTR [ecx+0x29],dl
  40feba:	jge    0x40fe98
  40febc:	pop    edx
  40febd:	stos   DWORD PTR es:[edi],eax
  40febe:	add    al,0xe8
  40fec0:	stos   BYTE PTR es:[edi],al
  40fec1:	(bad)  
  40fec2:	cmc    
  40fec3:	dec    DWORD PTR [edx-0x55]
  40fec6:	shr    al,0xa5
  40fec9:	push   esp
  40feca:	cmc    
  40fecb:	(bad)  
  40fecc:	jp     0x40fe98
  40fece:	mov    edi,0x5b9535c2
  40fed3:	mov    edi,ecx
  40fed5:	adc    al,0xca
  40fed7:	call   0x55db292
  40fedc:	sub    bl,BYTE PTR [ebx+ebx*1]
  40fedf:	add    DWORD PTR ds:0xb1458395,esp
  40fee5:	rol    BYTE PTR [ebx-0x7c3ff2bb],0x45
  40feec:	cdq    
  40feed:	shl    BYTE PTR [edx+0x2],0xaa
  40fef1:	stos   DWORD PTR es:[edi],eax
  40fef2:	sbb    al,ch
  40fef4:	test   BYTE PTR [ecx],ah
  40fef6:	idiv   edi
  40fef8:	jbe    0x40fead
  40fefa:	lock add DWORD PTR [edx+esi*8-0x4730d80],ecx
  40ff02:	or     edi,edi
  40ff04:	jns    0x40fecd
  40ff06:	test   DWORD PTR [esp+ebx*8-0x1e],eax
  40ff0a:	and    BYTE PTR [ebp+ecx*2-0x5],0x96
  40ff0f:	je     0x40feed
  40ff11:	push   edx
  40ff12:	jne    0x40ff5a
  40ff14:	mov    ebx,?
  40ff16:	add    al,al
  40ff18:	fwait
  40ff19:	jo     0x40fecf
  40ff1b:	inc    DWORD PTR [eax]
	...
  40ff2d:	add    BYTE PTR [eax],al
  40ff2f:	add    bl,al
  40ff31:	cli    
  40ff32:	cwde   
  40ff33:	inc    esp
  40ff34:	ror    BYTE PTR [edx-0x67],0x44
  40ff38:	mov    ah,0x2a
  40ff3a:	cdq    
  40ff3b:	inc    esp
  40ff3c:	test   al,0x2a
  40ff3e:	and    BYTE PTR [eax],al
  40ff40:	mov    ds:0xb2e7f987,eax
  40ff45:	add    BYTE PTR [edi-0x6b8ff002],dl
  40ff4b:	add    BYTE PTR [ebx-0x7c00ae90],bl
  40ff51:	(bad)  
  40ff52:	xchg   esi,eax
  40ff53:	je     0x40fed5
  40ff55:	push   esi
  40ff56:	ds gs int 0xfd
  40ff5a:	mov    eax,ds:0x9fdd345
  40ff5f:	or     ecx,DWORD PTR [edi+ebp*8-0x80]
  40ff63:	mov    ds:0x8d09fd8c,al
  40ff68:	leave  
  40ff69:	sub    DWORD PTR [edx],edi
  40ff6b:	(bad)  
  40ff6c:	shl    DWORD PTR ds:0x21c98d3a,1
  40ff72:	cmp    ch,BYTE PTR [edx-0x71]
  40ff75:	push   ss
  40ff76:	adc    DWORD PTR [eax],edx
  40ff78:	and    al,0xcd
  40ff7a:	fwait
  40ff7b:	(bad)  
  40ff7c:	sub    edi,DWORD PTR [ebx+0x28]
  40ff7f:	clc    
  40ff80:	mov    esi,gs
  40ff82:	add    BYTE PTR [edx-0x74f60274],0xc9
  40ff89:	xchg   esp,eax
  40ff8a:	push   ebx
  40ff8b:	sahf   
  40ff8c:	mov    ebx,0x10afad17
  40ff91:	push   edx
  40ff92:	push   ebx
  40ff93:	xor    eax,DWORD PTR [eax]
	...
  40ffa5:	add    BYTE PTR [eax],al
  40ffa7:	add    BYTE PTR [ecx],cl
  40ffa9:	push   edx
  40ffaa:	push   edi
  40ffab:	xor    eax,DWORD PTR [ecx]
  40ffad:	push   edx
  40ffae:	dec    ebx
  40ffaf:	xor    esi,DWORD PTR [esi-0x70]
  40ffb2:	sbb    BYTE PTR ss:[esp+edi*8+0x68],bh
  40ffb7:	xchg   ebp,eax
  40ffb8:	fiadd  DWORD PTR [edi]
  40ffba:	arpl   WORD PTR [eax],sp
  40ffbc:	aam    0x95
  40ffbe:	xchg   esp,eax
  40ffbf:	rcl    DWORD PTR ds:[ecx-0x6bb372ed],cl
  40ffc6:	push   ds
  40ffc7:	sahf   
  40ffc8:	mov    edx,0x8c082f07
  40ffcd:	pop    ss
  40ffce:	mov    eax,ds:0xf707ab03
  40ffd3:	popf   
  40ffd4:	retf   0xe391
  40ffd7:	mov    cs,WORD PTR [esp+edx*4-0x1a]
  40ffdb:	popf   
  40ffdc:	xchg   edx,eax
  40ffdd:	pop    es
  40ffde:	out    dx,eax
  40ffdf:	pop    ss
  40ffe0:	cmp    ah,0xe1
  40ffe3:	lahf   
  40ffe4:	add    BYTE PTR [edi],0xa7
  40ffe7:	inc    edi
  40ffe8:	fs xchg ebp,eax
  40ffea:	fild   WORD PTR [ebx]
  40ffec:	mov    WORD PTR [ebx],ss
  40ffee:	or     eax,0xdf5519a0
  40fff3:	pushf  
  40fff4:	fistp  QWORD PTR [ebp+0x165bdf62]
  40fffa:	and    DWORD PTR [ebx+edx*2],eax
  40fffd:	cmp    BYTE PTR [edi+0x66908880],0x43
  410004:	mov    WORD PTR [edi],es
  410006:	adc    al,0xf5
  410008:	mov    bl,0x75
  41000a:	pop    ecx
  41000b:	inc    esp
	...
  410020:	mov    WORD PTR [ecx],ds
  410022:	and    eax,0xfd07dbac
  410027:	scas   eax,DWORD PTR es:[edi]
  410028:	and    al,BYTE PTR [ecx+0x7ff8e508]
  41002e:	add    BYTE PTR [ecx+0x66f60c80],al
  410034:	xlat   BYTE PTR ds:[ebx]
  410035:	aam    0x18
  410037:	jmp    0x6b261bf6
  41003c:	(bad)  
  41003d:	cli    
  41003e:	cmc    
  41003f:	aam    0x87
  410041:	cld    
  410042:	ss pushf 
  410044:	or     BYTE PTR [esi],al
  410046:	arpl   cx,bx
  410048:	adc    dl,BYTE PTR [eax-0x8]
  41004b:	cdq    
  41004c:	clc    
  41004d:	jg     0x41004f
  41004f:	inc    ecx
  410050:	cmp    BYTE PTR [edx-0xb],ah
  410053:	es xchg ebp,eax
  410055:	aam    0x7b
  410057:	in     eax,0xd6
  410059:	aam    0x0
  41005b:	jmp    0xa7a1a4c5
  410060:	push   0x55
  410062:	or     BYTE PTR [ebx+edx*2+0x4],dh
  410066:	pop    ecx
  410067:	adc    DWORD PTR [edx+0x6b],edi
  41006a:	cmc    
  41006b:	test   BYTE PTR [esp+edx*8-0x2b391a85],0x0
  410073:	jmp    0xe92551c8
  410078:	(bad)  
  410079:	xchg   esp,eax
  41007a:	or     BYTE PTR [edx+edx*8-0x8],ah
  41007e:	pop    eax
  41007f:	into   
  410080:	call   0x0:0xb5e09c
	...
  410097:	add    BYTE PTR [edx+0x4ff2f605],ah
  41009d:	or     BYTE PTR [esi],0x6a
  4100a0:	jp     0x41009a
  4100a2:	or     BYTE PTR [edx+ecx*4],dh
  4100a5:	mov    ecx,0x8e4db0c8
  4100aa:	or     BYTE PTR [ecx],bh
  4100ac:	xor    eax,0xfeece1dd
  4100b1:	in     eax,dx
  4100b2:	jns    0x41009c
  4100b4:	into   
  4100b5:	cdq    
  4100b6:	enter  0x2800,0x21
  4100ba:	pop    esi
  4100bb:	or     DWORD PTR ds:0x5d057b93,0xffffff91
  4100c2:	or     BYTE PTR [ecx],al
  4100c4:	and    eax,0xe901f115
  4100c9:	(bad)  
  4100ca:	and    eax,eax
  4100cc:	mov    esp,0x6000dd3
  4100d1:	push   ds
  4100d2:	test   BYTE PTR [ecx-0x1b],al
  4100d5:	push   ss
  4100d6:	dec    ebp
  4100d7:	in     al,dx
  4100d8:	add    eax,0x3d087d29
  4100dd:	pop    ebp
  4100de:	pop    esp
  4100df:	jmp    DWORD PTR [edx+0x1901fe14]
  4100e5:	(bad)  
  4100e9:	sahf   
  4100ea:	push   cs
  4100eb:	and    DWORD PTR [eax],0x36
  4100ee:	div    BYTE PTR [ebx+ebp*4-0x4]
  4100f2:	mov    ch,0xc9
  4100f4:	addr16 cdq 
  4100f6:	or     BYTE PTR [ebp-0xb9ca08],cl
	...
  410110:	sbb    BYTE PTR [ecx+0x28f892e0],bl
  410116:	test   DWORD PTR [ebx+0x57c939d],0x750828f6
  410120:	imul   ecx,DWORD PTR [esi],0x75
  410123:	in     al,dx
  410124:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410126:	push   cs
  410127:	sub    esp,DWORD PTR ds:0x7508c7d7
  41012d:	sbb    al,0x4d
  41012f:	in     al,dx
  410130:	test   DWORD PTR [ecx],ebp
  410132:	jge    0x41013c
  410134:	dec    ebp
  410135:	mov    al,ds:0x9522ff5b
  41013a:	enter  0x3b75,0xe
  41013e:	jne    0x41012c
  410140:	xor    eax,0x8c2b0ea4
  410145:	cmp    eax,esp
  410147:	rol    DWORD PTR [ebx+edi*8-0x54c7bb80],0x91
  41014f:	je     0x4100e5
  410151:	and    edi,DWORD PTR [ecx]
  410153:	push   ebp
  410154:	sbb    edi,DWORD PTR [esi-0x73]
  410157:	test   esp,0x89830800
  41015d:	pop    edi
  41015e:	or     al,0x75
  410160:	mov    ah,BYTE PTR [edx-0xd313734]
  410166:	or     DWORD PTR [ebp-0xc338b7],ecx
  41016c:	popa   
  41016d:	add    esp,DWORD PTR [edx-0x6e39c6ca]
  410173:	add    BYTE PTR [eax],0x0
	...
  410186:	add    BYTE PTR [eax],al
  410188:	aam    0x9a
  41018a:	pop    ss
  41018b:	push   es
  41018c:	(bad)  
  41018f:	inc    DWORD PTR [eax-0xb]
  410192:	out    0xbf,al
  410194:	aad    0xb8
  410196:	add    al,0x0
  410198:	or     DWORD PTR [eax],edi
  41019a:	scas   al,BYTE PTR es:[edi]
  41019b:	dec    edi
  41019c:	mov    bl,0x1f
  41019e:	add    ch,al
  4101a0:	xchg   BYTE PTR [eax],ch
  4101a2:	xchg   ebx,eax
  4101a3:	dec    BYTE PTR [edi]
  4101a5:	xchg   ebx,eax
  4101a6:	in     al,dx
  4101a7:	je     0x41013b
  4101a9:	jp     0x4101ba
  4101ab:	in     al,dx
  4101ac:	mov    WORD PTR [eax+0x454c2b07],es
  4101b2:	int3   
  4101b3:	pop    es
  4101b4:	mov    WORD PTR [eax+0x48],?
  4101b7:	in     al,dx
  4101b8:	fcom   QWORD PTR [edi-0x14]
  4101bb:	(bad)  
  4101bc:	stc    
  4101bd:	cmc    
  4101be:	mov    eax,ds:0x92dac125
  4101c3:	mov    ecx,cs
  4101c5:	sar    DWORD PTR [ecx],1
  4101c7:	jmp    ecx
  4101c9:	cmc    
  4101ca:	mov    eax,ds:0x9332b895
  4101cf:	add    BYTE PTR [ebp+edx*4-0x20],0x15
  4101d4:	xchg   edi,eax
  4101d5:	pop    ss
  4101d6:	test   al,0x6
  4101d8:	ret    
  4101d9:	call   0x21c:0x95201862
  4101e0:	ja     0x4101b6
  4101e2:	mov    eax,0x42948bc5
  4101e7:	fwait
  4101e8:	or     DWORD PTR [esi-0x21],edx
  4101eb:	mov    BYTE PTR [eax],al
	...
  4101fd:	add    BYTE PTR [eax],al
  4101ff:	add    al,cl
  410201:	lock ucomiss xmm6,DWORD PTR [ebx+eax*1+0x5f40bd5]
  41020a:	mov    esp,0x156cfa9a
  41020f:	pop    eax
  410210:	mov    bl,0x94
  410212:	push   esp
  410213:	inc    eax
  410214:	clc    
  410215:	fld    DWORD PTR fs:[ebx+eiz*8]
  410219:	mov    ebx,esp
  41021b:	call   0x3da:0x27478c60
  410222:	daa    
  410223:	int3   
  410224:	int    0x8c
  410226:	fbstp  TBYTE PTR [eax]
  410228:	pop    ss
  410229:	icebp  
  41022a:	bound  edi,QWORD PTR [edi-0x685aee49]
  410230:	inc    ebx
  410231:	in     al,dx
  410232:	pop    ss
  410233:	xor    ebp,DWORD PTR [ebx-0x5feff0fd]
  410239:	add    edi,DWORD PTR [ebp+0x7]
  41023c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41023d:	lock xchg ecx,eax
  41023f:	call   0x39b:0xf1f8f92
  410246:	push   ebp
  410247:	or     al,0x83
  410249:	mov    ebx,edx
  41024b:	lods   al,BYTE PTR ds:[esi]
  41024c:	mov    dh,0x2
  41024e:	fistp  WORD PTR [ecx+0x45cd486]
  410254:	imul   ecx,DWORD PTR [ecx+0x645caccb],0xffffffb6
  41025b:	cdq    
  41025c:	inc    esp
  41025d:	(bad)  
  41025e:	or     ch,ah
  410260:	(bad)
	...
  410278:	and    eax,0xe1910488
  41027d:	pusha  
  41027e:	cmc    
  41027f:	sahf   
  410280:	mov    esp,edx
  410282:	jl     0x41024e
  410284:	adc    al,0x88
  410286:	sbb    BYTE PTR [ecx],bh
  410288:	clc    
  410289:	dec    ebx
  41028a:	push   ebx
  41028b:	xchg   BYTE PTR ds:0xb6806053,al
  410291:	ret    
  410292:	or     BYTE PTR [esi-0x7d],dh
  410295:	pushf  
  410296:	cmc    
  410297:	hlt    
  410298:	sti    
  410299:	push   edx
  41029a:	cmc    
  41029b:	fcom   QWORD PTR [edi+0x156980ec]
  4102a1:	add    ah,cl
  4102a3:	adc    eax,0x20f603b7
  4102a8:	shl    BYTE PTR [esi-0x10ef63f8],cl
  4102ae:	pusha  
  4102af:	jmp    0xc1f7f643
  4102b4:	mov    ecx,0x24e94777
  4102b9:	mov    BYTE PTR [ebx+edx*4],al
  4102bc:	rol    DWORD PTR [ecx],0x7c
  4102bf:	icebp  
  4102c0:	out    0x32,eax
  4102c2:	not    BYTE PTR [esi]
  4102c4:	adc    eax,0xf4e9087b
  4102c9:	inc    eax
  4102ca:	popa   
  4102cb:	ret    0x5582
  4102ce:	or     dh,bh
  4102d0:	mov    dl,BYTE PTR [eax-0x780b2c9e]
  4102d6:	add    BYTE PTR [ecx],al
  4102d8:	pop    es
  4102d9:	add    esi,esi
  4102db:	out    0x0,al
	...
  4102ed:	add    BYTE PTR [eax],al
  4102ef:	add    BYTE PTR [edi-0x2a31f76c],dh
  4102f5:	jns    0x410331
  4102f7:	dec    esp
  4102f8:	iret   
  4102f9:	xchg   esp,eax
  4102fa:	cmc    
  4102fb:	push   esp
  4102fc:	xchg   esp,eax
  4102fd:	outs   dx,BYTE PTR ds:[esi]
  4102fe:	adc    al,0x0
  410300:	dec    edx
  410301:	xchg   ebx,eax
  410302:	add    al,ch
  410304:	out    0x1c,eax
  410306:	idiv   edi
  410308:	int    0x98
  41030a:	or     bh,ch
  41030c:	mov    ebx,0x746531ad
  410311:	cwde   
  410312:	cmc    
  410313:	jne    0x41033e
  410315:	mov    al,0x14
  410317:	call   DWORD PTR [eax+0x1a6be090]
  41031d:	sbb    eax,0x963568f7
  410322:	in     eax,0xbe
  410324:	jge    0x410310
  410326:	ins    BYTE PTR es:[edi],dx
  410327:	inc    ecx
  410328:	and    eax,0x8f0c7d1d
  41032d:	div    esi
  41032f:	jne    0x41032e
  410331:	sub    eax,0x1c5aff5a
  410336:	outs   dx,BYTE PTR ds:[esi]
  410337:	add    ch,ah
  410339:	sub    al,0xb4
  41033b:	push   0x47a17e
  410340:	dec    edx
  410341:	xchg   edx,eax
  410342:	add    al,0x6a
  410344:	xchg   BYTE PTR [ebx],bl
  410346:	jge    0x410350
  410348:	dec    ebp
  410349:	jmp    0x8c7:0xce7afff6
  410350:	mov    ch,0xb2
  410352:	sub    esp,0x0
	...
  410368:	es inc ecx
  41036a:	repnz push 0xffffffa5
  41036d:	scas   eax,DWORD PTR es:[edi]
  41036e:	cmp    bh,bh
  410370:	add    BYTE PTR [esi+0x1d00cde0],cl
  410376:	test   DWORD PTR [ecx-0x2c91d610],0xff085700
  410380:	add    BYTE PTR [esi+0x296a4de0],cl
  410386:	idiv   edi
  410388:	loopne 0x4103a6
  41038a:	div    DWORD PTR [ebp-0x74]
  41038d:	repz mov eax,ds:0x9dd2c1f7
  410393:	enter  0xef4e,0x9
  410397:	push   ebp
  410398:	pop    es
  410399:	iret   
  41039a:	mov    ebx,eax
  41039c:	push   eax
  41039d:	push   ebp
  41039e:	or     al,0x6a
  4103a0:	jg     0x4103d4
  4103a2:	sbb    BYTE PTR [eax],cl
  4103a4:	xor    al,0x17
  4103a6:	cmp    bh,bh
  4103a8:	cmp    eax,DWORD PTR [edi+eax*2+0x280da4fc]
  4103af:	inc    ecx
  4103b0:	mov    WORD PTR [edx],ss
  4103b2:	sbb    BYTE PTR [eax],cl
  4103b4:	xor    al,0xf7
  4103b6:	sahf   
  4103b7:	(bad)  
  4103b8:	sbb    eax,DWORD PTR [edx+0x13fc17]
  4103be:	add    ch,al
  4103c0:	shl    DWORD PTR [edi-0x532a0163],cl
  4103c6:	or     BYTE PTR [eax],al
  4103c8:	popa   
  4103c9:	xchg   BYTE PTR [eax+0x82],ah
	...
  4103df:	add    al,cl
  4103e1:	bound  esp,QWORD PTR [edx]
  4103e3:	add    BYTE PTR [esi-0x59],dh
  4103e6:	popf   
  4103e7:	je     0x41037d
  4103e9:	arpl   WORD PTR [ecx],sp
  4103eb:	push   ebp
  4103ec:	fcmovnb st,st(1)
  4103ee:	add    DWORD PTR [eax+edx*8-0x2e],0xffffffad
  4103f3:	fs dec ebp
  4103f5:	jmp    0x410395
  4103f7:	je     0x41038d
  4103f9:	mov    ds:0xa1bbfda1,eax
  4103fe:	and    al,BYTE PTR [eax]
  410400:	and    al,0xf7
  410402:	adc    eax,DWORD PTR [ecx-0x74]
  410405:	adc    edx,DWORD PTR [edx-0x6114b29c]
  41040b:	xor    al,0x56
  41040d:	inc    esp
  41040e:	dec    ebp
  41040f:	add    BYTE PTR [esi+ecx*8-0xc7400ce],ah
  410416:	leave  
  410417:	jae    0x4103dc
  410419:	xchg   esp,eax
  41041a:	js     0x41045c
  41041c:	je     0x41048b
  41041e:	call   0x47d5b778
  410423:	add    al,0x8c
  410425:	out    dx,eax
  410426:	test   DWORD PTR [ebx],ebp
  410428:	sahf   
  410429:	jns    0x41044b
  41042b:	add    al,0x5b
  41042d:	mov    al,bh
  41042f:	xchg   esi,eax
  410430:	fmul   DWORD PTR [edi+eax*8-0x5900352f]
  410437:	sub    eax,DWORD PTR [ebp+0x3f]
  41043a:	and    BYTE PTR [esp+eiz*4],al
  41043d:	xchg   esp,eax
  41043e:	fbld   TBYTE PTR [esi+0x20da6cf1]
	...
  410458:	int    0x94
  41045a:	xchg   BYTE PTR [eax],dl
  41045c:	and    al,0x0
  41045e:	cmc    
  41045f:	or     esp,DWORD PTR [ebx*4+0x1296f6]
  410466:	cmc    
  410467:	fwait
  410468:	repz int 0x1e
  41046b:	xchg   edi,eax
  41046c:	add    al,BYTE PTR [eax]
  41046e:	aad    0x97
  410470:	cli    
  410471:	mov    edi,esi
  410473:	stos   DWORD PTR es:[edi],eax
  410474:	mov    bh,0x69
  410476:	pop    esi
  410477:	xchg   esi,eax
  410478:	aam    0xd2
  41047a:	jmp    0x41047f
  41047c:	cmp    DWORD PTR [ebx],ecx
  41047e:	pop    esp
  41047f:	or     bh,0x0
  410482:	fiadd  DWORD PTR [ebx]
  410484:	leavew 
  410486:	adc    BYTE PTR ds:[esp+ebp*8-0x3cd0c1],dl
  41048e:	js     0x4104d0
  410490:	mov    eax,0x4d1e076c
  410495:	xchg   esp,eax
  410496:	push   ds
  410497:	adc    BYTE PTR [esp+ebp*8-0x5d6a81],dl
  41049e:	push   cs
  41049f:	adc    BYTE PTR [eax-0x5bf48301],bl
  4104a5:	mov    ecx,DWORD PTR [eax]
  4104a7:	pushf  
  4104a8:	and    bh,dh
  4104aa:	mov    edi,0x5cff832b
  4104af:	jb     0x4104d5
  4104b1:	adc    cl,ch
  4104b3:	frstor [esi+0x11f6294]
  4104b9:	mov    BYTE PTR [eax],al
  4104bb:	rol    DWORD PTR [eax],0x0
	...
  4104ce:	add    BYTE PTR [eax],al
  4104d0:	jmp    0x807fa38
  4104d5:	pop    eax
  4104d6:	hlt    
  4104d7:	push   ecx
  4104d8:	outs   dx,DWORD PTR ds:[esi]
  4104d9:	jns    0x410522
  4104db:	jmp    0xc1418d00
  4104e0:	sub    DWORD PTR [ecx],eax
  4104e2:	mul    BYTE PTR [esi-0x610b77df]
  4104e8:	or     DWORD PTR [eax+eiz*8-0xa00a34d],0xffffffa0
  4104f0:	dec    esi
  4104f1:	xchg   ebx,eax
  4104f2:	or     BYTE PTR [eax*1-0xb5a7615],bl
  4104f9:	ins    BYTE PTR es:[edi],dx
  4104fa:	or     BYTE PTR [ebx],al
  4104fc:	fscale 
  4104fe:	jnp    0x4104e1
  410500:	aaa    
  410501:	sbb    DWORD PTR [esi+eiz*2+0x21],0xa05d4c0c
  410509:	stos   DWORD PTR es:[edi],eax
  41050a:	outs   dx,BYTE PTR ds:[esi]
  41050b:	test   al,0x8f
  41050d:	(bad)  
  41050e:	jnp    0x4104f1
  410510:	aaa    
  410511:	add    esp,esi
  410513:	inc    esi
  410514:	add    esi,edi
  410516:	jnp    0x410555
  410518:	stc    
  410519:	xchg   DWORD PTR [eax],eax
  41051b:	inc    ecx
  41051c:	aaa    
  41051d:	arpl   bp,si
  41051f:	xlat   BYTE PTR cs:[ebx]
  410521:	aam    0xc
  410523:	jmp    0x6b261092
  410528:	int3   
  410529:	cli    
  41052a:	(bad)  
  41052b:	jmp    0x9536c1a5
  410530:	xchg   edi,eax
  410531:	in     al,dx
  410532:	inc    ebx
	...
  410547:	add    cl,bh
  410549:	daa    
  41054a:	test   DWORD PTR [ecx+0x336e26e8],0xff08531b
  410554:	clc    
  410555:	mov    eax,esp
  410557:	int    0x70
  410559:	sub    edi,esi
  41055b:	(bad)  
  41055c:	fcomp  DWORD PTR [edi+esi*8]
  41055f:	jne    0x4105ce
  410561:	sub    bh,BYTE PTR [esi+0x54]
  410564:	push   edx
  410565:	sub    ecx,eax
  410567:	ret    0x9269
  41056a:	pop    ebx
  41056b:	mov    eax,DWORD PTR [ecx+0x29]
  41056e:	jge    0x41057c
  410570:	dec    ebp
  410571:	push   ebp
  410572:	push   ecx
  410573:	push   edx
  410575:	mov    eax,cs
  410577:	je     0x410509
  410579:	mov    al,0x4e
  41057b:	fs cbw 
  41057e:	pop    eax
  41057f:	call   0x36c176
  410584:	gs daa 
  410586:	jge    0x410598
  410588:	jne    0x4105b1
  41058a:	jge    0x410594
  41058c:	std    
  41058d:	jmp    0x41056d
  41058f:	inc    DWORD PTR [edx+0x7256c029]
  410595:	sub    cl,al
  410597:	ret    0x9201
  41059a:	pop    ebx
  41059b:	mov    eax,DWORD PTR [ecx+0x14]
  41059e:	retf   0x2af8
  4105a1:	lods   al,BYTE PTR ds:[esi]
  4105a2:	or     BYTE PTR [edx+0x7c],ch
  4105a5:	daa    
  4105a6:	jge    0x4105b0
  4105a8:	cmp    eax,0xff5b2c
	...
  4105bd:	add    BYTE PTR [eax],al
  4105bf:	add    BYTE PTR [edx+0x2efc4d0a],dl
  4105c5:	out    0xb3,al
  4105c7:	dec    eax
  4105c8:	hlt    
  4105c9:	xchg   ecx,eax
  4105ca:	mov    BYTE PTR [edi],bh
  4105cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105cd:	lea    esi,[eax+ebp*2-0x30]
  4105d1:	lahf   
  4105d2:	inc    edi
  4105d3:	add    BYTE PTR [esi+edi*1-0x14b0f25e],cl
  4105da:	or     DWORD PTR [ebx],ecx
  4105dc:	int3   
  4105dd:	jg     0x41061b
  4105df:	push   edi
  4105e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105e1:	or     DWORD PTR [edx],ebp
  4105e3:	dec    DWORD PTR [ebx-0x268c360e]
  4105e9:	je     0x410621
  4105eb:	clc    
  4105ec:	jnp    0x41064e
  4105ee:	test   BYTE PTR [ecx-0x6a],ch
  4105f1:	fimul  WORD PTR [edi]
  4105f3:	or     BYTE PTR [ebp+ebp*2-0x67],dh
  4105f7:	(bad)  
  4105f8:	arpl   si,cx
  4105fa:	psubb  mm4,mm6
  4105fd:	neg    DWORD PTR [edx+0x3e38474]
  410603:	dec    DWORD PTR [ebx+0x46]
  410606:	call   0xc1fe:0xed514474
  41060d:	add    edx,DWORD PTR [edx-0x65e1cc95]
  410613:	addr16 mov esp,0x23004b8d
  410619:	test   al,0x84
  41061b:	out    0x20,eax
  41061d:	mov    ah,0x99
  41061f:	inc    BYTE PTR [edi+0x12112b]
	...
  410635:	add    BYTE PTR [eax],al
  410637:	add    BYTE PTR [esi+eax*4+0xf],bl
  41063b:	clc    
  41063c:	pop    esp
  41063d:	outs   dx,BYTE PTR ds:[esi]
  41063e:	invd   
  410640:	in     al,0x15
  410642:	mov    bl,0xfe
  410644:	repz (bad) 
  410646:	fst    DWORD PTR [ebp-0x15]
  410649:	gs cdq 
  41064b:	je     0x410631
  41064d:	push   edx
  41064e:	rcl    DWORD PTR [ebp-0x25],1
  410651:	push   ebp
  410652:	cwde   
  410653:	xor    cl,ah
  410655:	adc    ebx,DWORD PTR [edx-0x613a3402]
  41065b:	lods   eax,DWORD PTR ds:[esi]
  41065c:	test   dh,dh
  41065e:	adc    BYTE PTR [ebx+edi*4-0x4d706b6d],al
  410665:	xchg   bh,dh
  410667:	fwait
  410668:	pop    es
  410669:	popa   
  41066a:	push   ds
  41066b:	xchg   ebx,eax
  41066c:	inc    edx
  41066d:	retf   
  41066e:	and    DWORD PTR [eax],ecx
  410670:	mov    WORD PTR [edi+0x7a],fs
  410673:	mov    al,ds:0x9be38692
  410678:	icebp  
  410679:	pop    esi
  41067a:	(bad)  
  41067b:	xchg   edx,eax
  41067c:	xchg   esi,eax
  41067d:	aam    0x7b
  41067f:	lock repz pop ebx
  410682:	inc    ebp
  410683:	inc    ebp
  410684:	mov    WORD PTR [edi+edx*8-0x6b],fs
  410688:	(bad)  
  410689:	sti    
  41068a:	fidiv  WORD PTR [ebx]
  41068c:	arpl   WORD PTR [edx-0x7da4cc11],ax
  410692:	neg    DWORD PTR [ebx-0x6d491d40]
  410698:	xor    ebp,edx
  41069a:	adc    al,0x93
	...
  4106b0:	inc    edx
  4106b1:	into   
  4106b2:	mov    eax,ds:0x7a613bff
  4106b7:	lahf   
  4106b8:	push   cs
  4106b9:	shl    DWORD PTR [edi+0x994b63a],1
  4106bf:	into   
  4106c0:	and    al,BYTE PTR [edx+0x67899be7]
  4106c6:	mov    ss,WORD PTR [edx+0x7e735204]
  4106cc:	enter  0x283a,0x45
  4106d0:	mov    WORD PTR [edi+eiz*4],ss
  4106d3:	add    eax,DWORD PTR [eax+0x6a2dd75d]
  4106d9:	push   ebp
  4106da:	fistp  QWORD PTR [edx]
  4106dc:	hlt    
  4106dd:	lds    esp,FWORD PTR [ecx+0x1f8f8c03]
  4106e3:	pop    ss
  4106e4:	cwde   
  4106e5:	arpl   WORD PTR [edi-0x78],dx
  4106e8:	xor    bh,bl
  4106ea:	dec    BYTE PTR ss:[ebx]
  4106ed:	or     DWORD PTR [eax],0xf05040fb
  4106f3:	cs xchg esp,eax
  4106f5:	cld    
  4106f6:	bound  eax,QWORD PTR [ebx]
  4106f8:	pop    ds
  4106f9:	add    DWORD PTR [eax],0xf5fb1511
  4106ff:	push   ss
  410700:	inc    BYTE PTR [eax-0x5547c10]
  410706:	jnp    0x4106f9
  410708:	idiv   DWORD PTR [ebp+esi*8-0x2]
  41070c:	sbb    eax,0xa0f17bfa
  410711:	mov    bh,0xf5
  410713:	je     0x410715
	...
  410725:	add    BYTE PTR [eax],al
  410727:	add    BYTE PTR [edi-0xd],dh
  41072a:	fs out 0x1d,al
  41072d:	cli    
  41072e:	cmc    
  41072f:	push   esp
  410730:	sbb    bl,dh
  410732:	jae    0x410770
  410734:	std    
  410735:	stc    
  410736:	hlt    
  410737:	sbb    dl,BYTE PTR [eax+0x3c]
  41073a:	test   dh,0xfd
  41073d:	stc    
  41073e:	cli    
  41073f:	(bad)  
  410740:	pop    eax
  410741:	xchg   edx,eax
  410742:	jnp    0x4106d2
  410744:	sbb    eax,0xa3aef480
  410749:	mov    eax,fs
  41074b:	mov    edi,DWORD PTR [edx-0x5]
  41074e:	cmc    
  41074f:	ds out 0xd4,eax
  410752:	or     al,0xe9
  410754:	pop    edx
  410755:	pmulhw mm5,QWORD PTR [edx+0x44]
  410759:	call   FWORD PTR [ebp+0x13]
  41075c:	mov    BYTE PTR [esi+0x31],ch
  41075f:	jle    0x410704
  410761:	mov    eax,fs
  410763:	ins    DWORD PTR es:[edi],dx
  410764:	mov    edx,0x5360f5fb
  410769:	clc    
  41076a:	and    DWORD PTR [esi+ebx*2],0xfe94753
  410771:	mov    edx,0x6c4fdd08
  410776:	(bad)  
  410777:	(bad)  
  410778:	dec    esi
  410779:	xchg   esp,eax
  41077a:	pop    ebp
  41077b:	add    BYTE PTR ds:0xb500486d,bh
  410781:	div    DWORD PTR [ebp-0x1f42698c]
  410787:	sti    
  410788:	or     esp,DWORD PTR [edi+esi*8]
  41078b:	or     eax,DWORD PTR [eax]
	...
  41079d:	add    BYTE PTR [eax],al
  41079f:	add    BYTE PTR [ebp-0x64],ah
  4107a2:	movmskps edi,xmm5
  4107a5:	xchg   esi,eax
  4107a6:	or     bh,ch
  4107a8:	cmp    ebx,DWORD PTR [eax-0x691b9984]
  4107ae:	pop    eax
  4107af:	call   DWORD PTR [eax]
  4107b1:	(bad)  
  4107b2:	in     eax,dx
  4107b3:	add    ecx,DWORD PTR [ebx]
  4107b5:	and    eax,0xc369e8f7
  4107ba:	cmc    
  4107bb:	jmp    FWORD PTR [ecx-0x1f]
  4107be:	mov    ch,0xb9
  4107c0:	push   0x25
  4107c2:	idiv   edi
  4107c4:	inc    edi
  4107c5:	je     0x410804
  4107c7:	pop    es
  4107c8:	rcl    al,0xf6
  4107cb:	jne    0x410816
  4107cd:	and    eax,0xa73d087d
  4107d2:	pop    edx
  4107d3:	dec    DWORD PTR [edx]
  4107d5:	lds    edi,FWORD PTR [edi+0x5b9631c2]
  4107db:	mov    edi,ecx
  4107dd:	adc    dl,cl
  4107df:	call   0x4c02d28a
  4107e4:	je     0x410776
  4107e6:	or     BYTE PTR [ebp+0x31],dh
  4107e9:	aas    
  4107ea:	enter  0x250c,0x98
  4107ee:	or     BYTE PTR [edx+0x25],ch
  4107f1:	cwde   
  4107f2:	cmc    
  4107f3:	inc    DWORD PTR [eax]
  4107f5:	cli    
  4107f6:	pop    edi
  4107f7:	add    BYTE PTR [edi-0x5a6a1f70],cl
  4107fd:	nop
  4107fe:	or     BYTE PTR [ecx+0x75f70e20],cl
	...
  410818:	ins    DWORD PTR es:[edi],dx
  410819:	sbb    eax,0x628c54dd
  41081e:	cwde   
  41081f:	mov    BYTE PTR [ecx+0x47],dl
  410822:	cwde   
  410823:	je     0x4107f9
  410825:	push   edx
  410826:	push   ds
  410827:	cld    
  410828:	ss mov edx,0xd5907498
  41082e:	or     DWORD PTR [edx-0x74],ebp
  410831:	push   ebx
  410832:	sbb    al,0x40
  410834:	mov    ebx,gs
  410836:	jbe    0x41087c
  410838:	mov    al,ds:0x3600143b
  41083d:	jmp    0x410852
  41083f:	adc    ah,BYTE PTR [esi]
  410841:	jmp    0x4107db
  410843:	je     0x4107d5
  410845:	xchg   edx,eax
  410846:	dec    bl
  410848:	xlat   BYTE PTR ds:[ebx]
  410849:	sub    al,0xa
  41084b:	test   DWORD PTR [edx+esi*8+0x71],ecx
  41084f:	xchg   DWORD PTR [ebx+ebp*8-0x282674f7],ecx
  410856:	jno    0x410869
  410858:	sbb    DWORD PTR [eax-0x1409b064],esi
  41085e:	movhlps xmm4,xmm6
  410861:	jmp    0x410874
  410863:	cdq    
  410864:	jmp    0x863f:0xc1ff0cac
  41086b:	push   ecx
  41086c:	pushf  
  41086d:	push   0x2adb77cc
  410872:	adc    al,dh
  410874:	and    al,0xab
  410876:	dec    eax
  410877:	jmp    FWORD PTR [ebx]
  410879:	test   BYTE PTR [edi],bh
  41087b:	call   0x410880
	...
  410890:	xchg   edi,eax
  410891:	sub    edx,DWORD PTR [ecx]
  410893:	dec    eax
  410894:	sbb    esp,DWORD PTR [eax-0x685f186c]
  41089a:	test   esi,edi
  41089c:	adc    eax,0x79fea8b0
  4108a1:	jnp    0x410837
  4108a3:	push   edx
  4108a4:	dec    edx
  4108a5:	push   0xffffff85
  4108a7:	(bad)  
  4108a8:	jns    0x41083e
  4108aa:	push   edi
  4108ab:	(bad)  
  4108ac:	pusha  
  4108ad:	call   0xec1d2208
  4108b2:	and    al,0x40
  4108b4:	(bad)  
  4108b6:	jmp    0x8c03:0xd79d5fc3
  4108bd:	jmp    0x8c799837
  4108c2:	inc    edi
  4108c3:	mov    al,0x4b
  4108c5:	stc    
  4108c6:	es (bad) 
  4108c8:	cmp    ah,ch
  4108ca:	sbb    DWORD PTR cs:[eax-0x54046308],edi
  4108d1:	(bad)  
  4108d2:	mov    al,0x8e
  4108d4:	call   0x939e:0xab9f9cf8
  4108db:	mov    cs,WORD PTR [edx+0x6b937cf8]
  4108e1:	or     DWORD PTR [ebx-0x62f38572],ebp
  4108e7:	xchg   edi,eax
  4108e8:	push   es
  4108e9:	mov    ds:0xf86018ee,eax
  4108ee:	xor    esp,edi
  4108f0:	bound  eax,QWORD PTR [edx+0x9bdb]
	...
  410906:	add    BYTE PTR [eax],al
  410908:	push   ebp
  410909:	fs (bad) 
  41090b:	mov    es,WORD PTR [ebx+edx*8-0x5]
  41090f:	add    esp,ecx
  410911:	or     eax,esp
  410913:	mov    ?,WORD PTR [eax-0x2bbd3878]
  410919:	mul    DWORD PTR [esi-0x277f0c06]
  41091f:	sbb    ebp,DWORD PTR [edx-0x43fbdf92]
  410925:	in     al,dx
  410926:	scas   al,BYTE PTR es:[edi]
  410927:	ss sbb edi,eax
  41092a:	das    
  41092b:	sbb    al,0xde
  41092d:	rcr    DWORD PTR [edi],cl
  41092f:	add    al,0x74
  410931:	xchg   esp,eax
  410932:	fistp  WORD PTR [esi+0x5d086d41]
  410938:	mov    cl,0x55
  41093a:	or     BYTE PTR [ecx],bl
  41093c:	add    eax,DWORD PTR [ecx+0x7ae55100]
  410942:	cmc    
  410943:	pop    esi
  410944:	pop    es
  410945:	cmp    bl,BYTE PTR [edx+0x56]
  410948:	or     dh,bh
  41094a:	jnp    0x410929
  41094c:	test   DWORD PTR [ecx-0x74e5b9b0],0x6fe0b5c8
  410956:	mov    ecx,edi
  410958:	push   eax
  410959:	xchg   esp,eax
  41095a:	pop    eax
  41095b:	inc    ecx
  41095c:	and    eax,0x5f26f55e
  410961:	ins    BYTE PTR es:[edi],dx
  410962:	mov    edx,0x60944f2a
  410967:	jmp    0x81f7f0fb
	...
  410980:	sbb    esi,DWORD PTR [ecx+0x47]
  410983:	jmp    0xf1bd0147
  410988:	daa    
  410989:	loopne 0x4109fd
  41098b:	test   BYTE PTR [ecx],0xef
  41098e:	jg     0x41092a
  410990:	add    dh,dh
  410992:	mov    edi,0x5cf768ab
  410997:	jb     0x4109c5
  410999:	adc    cl,ch
  41099b:	aad    0x76
  41099d:	xchg   esp,eax
  41099e:	bound  ecx,QWORD PTR ds:0xd1008001
  4109a4:	in     eax,0x47
  4109a6:	cmc    
  4109a7:	mov    esi,0x43f450c7
  4109ac:	idiv   BYTE PTR es:[ebx-0x1f]
  4109b0:	pop    ss
  4109b1:	addr16 cmc 
  4109b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109b4:	sbb    DWORD PTR [ebp+0x29],ebp
  4109b7:	sahf   
  4109b8:	jnp    0x410946
  4109ba:	loopne 0x4109cb
  4109bc:	or     esi,esi
  4109be:	cmc    
  4109bf:	add    ebx,DWORD PTR [esi+esi*8]
  4109c2:	jnp    0x4109c4
  4109c4:	std    
  4109c5:	sbb    dl,BYTE PTR [edx-0x1]
  4109c8:	or     BYTE PTR [ecx],0xf7
  4109cb:	jne    0x41094e
  4109cd:	or     DWORD PTR [ebp+0x8],edi
  4109d0:	or     eax,0x72ff45cf
  4109d5:	cmp    ecx,eax
  4109d7:	add    al,0xf5
  4109d9:	mov    ebp,0x9f42ec81
  4109de:	add    al,0xe8
  4109e0:	push   ebp
  4109e1:	shl    ebp,0xff
	...
  4109f8:	mov    esi,0xdd2479d2
  4109fd:	pop    ebx
  4109fe:	imul   eax,DWORD PTR [ecx-0x5b],0xffffffc2
  410a02:	loopne 0x410a20
  410a04:	sbb    cl,BYTE PTR [eax]
  410a06:	not    DWORD PTR [eax-0x3]
  410a09:	xchg   edx,eax
  410a0a:	or     bh,ch
  410a0c:	inc    ebx
  410a0d:	cwde   
  410a0e:	mov    dh,0x66
  410a10:	in     al,0x92
  410a12:	pop    eax
  410a13:	(bad)  
  410a14:	clc    
  410a15:	cli    
  410a16:	in     eax,dx
  410a17:	pop    es
  410a18:	adc    DWORD PTR [ecx],ecx
  410a1a:	imul   eax
  410a1c:	(bad)
  410a20:	lods   al,BYTE PTR ds:[esi]
  410a21:	ror    BYTE PTR ds:0xe17d1800,cl
  410a27:	cmp    DWORD PTR [ecx],0x6
  410a2a:	pusha  
  410a2b:	add    BYTE PTR [edi+0x6d75f6c5],bh
  410a31:	sbb    bh,BYTE PTR [eax]
  410a33:	push   eax
  410a34:	inc    edx
  410a35:	or     DWORD PTR [ecx+0x129c5145],eax
  410a3b:	(bad)  
  410a3c:	js     0x410a36
  410a3e:	in     eax,dx
  410a3f:	stos   BYTE PTR es:[edi],al
  410a40:	add    cl,BYTE PTR [ecx]
  410a42:	imul   DWORD PTR [edx-0x7a]
  410a45:	pop    es
  410a46:	jge    0x410a50
  410a48:	std    
  410a49:	jno    0x410a41
  410a4b:	inc    DWORD PTR [edx]
  410a4d:	pushf  
  410a4e:	adc    al,0xff
  410a50:	mov    WORD PTR [eax+0x6fae7f4],ds
  410a56:	test   esi,edi
  410a58:	or     edi,ecx
  410a5a:	test   esi,edi
	...
  410a70:	jns    0x410a75
  410a72:	xchg   edx,eax
  410a73:	dec    ebx
  410a74:	pop    esp
  410a75:	jle    0x4109fb
  410a77:	enter  0xefce,0x9
  410a7b:	push   ebp
  410a7c:	pop    ss
  410a7d:	pusha  
  410a7e:	mov    bl,al
  410a80:	in     al,0x3e
  410a82:	adc    BYTE PTR [eax],al
  410a84:	popfw  
  410a86:	xor    DWORD PTR [esp+eax*4+0x53],0xffffff94
  410a8b:	dec    esi
  410a8c:	retf   
  410a8d:	dec    esi
  410a8e:	jb     0x410ad4
  410a90:	rol    BYTE PTR [edx+0x2c44bdc6],0xa
  410a97:	xor    BYTE PTR [ebx-0x15],0x1d
  410a9b:	inc    edi
  410a9c:	xor    al,0xa5
  410a9e:	sub    eax,DWORD PTR [ecx-0x74]
  410aa1:	ds xchg edx,eax
  410aa3:	adc    DWORD PTR [ebx-0x15],ebx
  410aa6:	or     DWORD PTR [ebx],ecx
  410aa8:	int3   
  410aa9:	pop    ds
  410aaa:	rcl    BYTE PTR [esi+0x74],1
  410aad:	add    eax,0x283ff26
  410ab2:	retf   0xac73
  410ab5:	je     0x410b05
  410ab7:	clc    
  410ab8:	in     al,0xeb
  410aba:	or     edi,ebp
  410abc:	sub    ah,BYTE PTR [ebx-0x4f]
  410abf:	gs int 0xeb
  410ac2:	xor    BYTE PTR [esp+edx*2-0x22],0x17
  410ac7:	or     BYTE PTR [ecx+edx*2+0x5],ah
  410acb:	dec    DWORD PTR [ebx-0x32]
  410ace:	pop    ss
  410acf:	clc    
  410ad0:	xor    al,0xbb
  410ad2:	inc    DWORD PTR ds:[eax]
	...
  410ae5:	add    BYTE PTR [eax],al
  410ae7:	add    BYTE PTR [ebx],bh
  410ae9:	aas    
  410aea:	fidivr WORD PTR [edi-0x17dda0b]
  410af0:	sub    edx,DWORD PTR [ecx+edx*4+0x1c8d5b5a]
  410af7:	dec    ebp
  410af8:	sbb    bh,BYTE PTR [edi-0x65]
  410afb:	mov    ebx,DWORD PTR [eax+0x5ab1878c]
  410b01:	cmc    
  410b02:	mov    gs,WORD PTR [ebx]
  410b04:	aad    0xd1
  410b06:	jmp    0x410b0b
  410b08:	popa   
  410b09:	or     DWORD PTR [edi+eax*4+0x1e1eefcf],ecx
  410b10:	mov    WORD PTR [edx+0x2e],gs
  410b13:	mov    ebx,DWORD PTR [eax-0x74]
  410b16:	push   edi
  410b17:	adc    ecx,DWORD PTR [ebx-0xb]
  410b1a:	pop    esi
  410b1b:	jge    0x410b65
  410b1d:	clc    
  410b1e:	push   0xffffffc9
  410b20:	or     DWORD PTR [eax+eiz*4+0x3],ecx
  410b24:	or     al,0xb5
  410b26:	fisttp WORD PTR [edi]
  410b28:	push   ebx
  410b29:	ins    BYTE PTR es:[edi],dx
  410b2a:	adc    esp,DWORD PTR [edx]
  410b2c:	dec    ebp
  410b2d:	xchg   esp,eax
  410b2e:	sahf   
  410b2f:	fwait
  410b30:	add    eax,0x9703dfb6
  410b35:	aam    0x9b
  410b37:	fld    QWORD PTR [edx-0x14]
  410b3a:	or     eax,0xeaf4932f
  410b3f:	ret    
  410b40:	push   DWORD PTR [eax+edi*2-0x20827bbf]
  410b47:	add    ebp,DWORD PTR [ebx+0x33]
  410b4a:	mov    BYTE PTR [eax+0x0],ch
	...
  410b60:	jmp    0xe0cbeaba
  410b65:	in     al,dx
  410b66:	out    dx,al
  410b67:	adc    BYTE PTR [esp+edi*8-0xba4f22f],dl
  410b6e:	ficom  WORD PTR [eax]
  410b70:	push   esp
  410b71:	std    
  410b72:	xlat   BYTE PTR ds:[ebx]
  410b73:	xor    al,0x4b
  410b75:	hlt    
  410b76:	retf   
  410b77:	(bad)  
  410b78:	add    ebp,DWORD PTR [esi]
  410b7a:	mov    bh,0x8a
  410b7c:	cmp    dh,ah
  410b7e:	or     BYTE PTR [ebx+0x340dabd5],bh
  410b84:	fnstcw WORD PTR [ebx+0x8]
  410b87:	jmp    0xbca23d92
  410b8c:	ins    DWORD PTR es:[edi],dx
  410b8d:	push   ebp
  410b8e:	or     BYTE PTR [ecx],al
  410b90:	ds jnp 0x410bda
  410b93:	jmp    0x914174ae
  410b98:	jmp    FWORD PTR [esi-0xb]
  410b9b:	jle    0x410b36
  410b9d:	xchg   esp,eax
  410b9e:	pusha  
  410b9f:	(bad)  
  410ba0:	lods   eax,DWORD PTR ds:[esi]
  410ba1:	push   ebp
  410ba2:	or     BYTE PTR [ecx],al
  410ba4:	loope  0x410c20
  410ba6:	inc    edi
  410ba7:	jmp    0xb073b4c2
  410bac:	push   eax
  410bad:	xchg   esp,eax
  410bae:	loopne 0x410bed
  410bb0:	mov    ds:0x4c60f5f3,eax
  410bb5:	add    BYTE PTR [ebx-0x17],ah
  410bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb9:	out    0x6e,eax
  410bbb:	test   al,0x8f
  410bbd:	jl     0x410bd6
  410bbf:	into   
  410bc0:	dec    eax
  410bc1:	xchg   esp,eax
  410bc2:	cmc    
  410bc3:	hlt    
	...
  410bd8:	fstp   DWORD PTR [edi+eax*2-0x17]
  410bdc:	pop    es
  410bdd:	cs pop ebp
  410bdf:	push   ds
  410be0:	push   es
  410be1:	sbb    eax,0x94711d4c
  410be6:	pusha  
  410be7:	push   cs
  410be8:	lods   eax,DWORD PTR ds:[esi]
  410be9:	push   ebp
  410bea:	or     BYTE PTR [ecx-0x16b88588],dl
  410bf0:	push   es
  410bf1:	test   al,0x32
  410bf3:	mov    al,ds:0x49e094c8
  410bf8:	mov    ebx,0xa370f5f3
  410bfd:	in     al,0x83
  410bff:	and    al,0x2c
  410c01:	arpl   WORD PTR [eax-0x1f],sp
  410c04:	lods   al,BYTE PTR ds:[esi]
  410c05:	push   ebp
  410c06:	or     BYTE PTR [ecx+0x3f],al
  410c09:	jp     0x410c52
  410c0b:	add    BYTE PTR ds:0x7c3a3d1c,dh
  410c11:	push   edi
  410c12:	or     al,ch
  410c14:	mov    eax,ds:0xacfff5a4
  410c19:	mov    bl,0xe0
  410c1b:	sub    DWORD PTR [eax+0x4],0xfffffff6
  410c1f:	jae    0x410c7e
  410c21:	sbb    DWORD PTR [ebp-0x10],esi
  410c24:	and    eax,0x98834aa3
  410c29:	or     al,0xf6
  410c2b:	jae    0x410bf6
  410c2d:	mov    es,WORD PTR [edi]
  410c2f:	add    BYTE PTR [edx],cl
  410c31:	pop    esi
  410c32:	div    BYTE PTR [ebp-0x13]
  410c35:	push   cs
  410c36:	repz dec ebp
  410c38:	jp     0x410c57
  410c3a:	div    DWORD PTR [ebp+0x0]
	...
  410c4d:	add    BYTE PTR [eax],al
  410c4f:	add    BYTE PTR [ecx+0x1d],al
  410c52:	jge    0x410c5c
  410c54:	cmp    eax,0x3aff46aa
  410c59:	sbb    eax,0xa35af07d
  410c5e:	add    al,ch
  410c60:	repnz lods al,BYTE PTR ds:[esi]
  410c62:	cmc    
  410c63:	(bad)  
  410c64:	jp     0x410c09
  410c66:	in     al,0xff
  410c68:	lock out dx,al
  410c6a:	in     eax,dx
  410c6b:	cmp    al,0xb
  410c6d:	sbb    al,0xf7
  410c6f:	inc    DWORD PTR [eax]
  410c71:	adc    esi,edi
  410c73:	jne    0x410cf2
  410c75:	sbb    eax,0x9a8d087d
  410c7a:	inc    esi
  410c7b:	call   FWORD PTR [edx-0x621382e5]
  410c81:	out    0x58,eax
  410c83:	(bad)  
  410c84:	jp     0x410ca3
  410c86:	jge    0x410c7c
  410c88:	(bad)  
  410c89:	out    dx,eax
  410c8a:	pop    eax
  410c8b:	(bad)  
  410c8c:	jp     0x410cab
  410c8e:	jge    0x410c80
  410c90:	cmp    eax,0x3aff5799
  410c95:	sbb    eax,0xd38ce87d
  410c9a:	test   BYTE PTR [edi+0x4b],cl
  410c9d:	jecxz  0x410c1f
  410c9f:	je     0x410ce1
  410ca1:	fild   DWORD PTR [esi]
  410ca3:	or     BYTE PTR [edx+eiz*2],ah
  410ca6:	xor    bh,bh
  410ca8:	xor    ecx,DWORD PTR [ebx-0x46f3e4f]
  410cae:	mov    esi,DWORD PTR es:[eax]
  410cb1:	jg     0x410c68
  410cb3:	sti    
	...
  410cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cc9:	sti    
  410cca:	adc    eax,DWORD PTR [eax+0x13]
  410ccd:	xchg   ecx,eax
  410cce:	hlt    
  410ccf:	out    0x9d,eax
  410cd1:	xchg   ecx,eax
  410cd2:	jg     0x410cd2
  410cd4:	adc    eax,0x8c6980c1
  410cd9:	test   DWORD PTR [eax+ebp*2],ecx
  410cdc:	dec    ecx
  410cdd:	mov    ds:0xfb740049,al
  410ce2:	or     DWORD PTR [eax],eax
  410ce4:	or     al,0x44
  410ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ce7:	push   edx
  410ce8:	fist   DWORD PTR [edx-0xc]
  410ceb:	mov    edi,0xe83c9e58
  410cf0:	pop    ss
  410cf1:	es cmp esi,0x1905bb97
  410cf8:	pop    esp
  410cf9:	ret    
  410cfa:	or     DWORD PTR [eax],eax
  410cfc:	mov    ds:0x33401169,eax
  410d01:	cmp    al,0xa
  410d03:	push   eax
  410d04:	mov    ds:0xffe7f210,eax
  410d09:	xor    al,0x81
  410d0b:	(bad)  
  410d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d0d:	addr16 cmp edi,edi
  410d10:	mov    esp,DWORD PTR [edx+0x7083fc06]
  410d16:	icebp  
  410d17:	out    0x8b,eax
  410d19:	inc    ecx
  410d1a:	cmp    esi,0xfff5bd45
  410d20:	shl    BYTE PTR [esi-0x63],0x82
  410d24:	dec    eax
  410d25:	xchg   esp,eax
  410d26:	jmp    0x410d57
  410d28:	out    0x94,al
  410d2a:	pop    ecx
  410d2b:	inc    ebp
	...
  410d40:	push   ebx
  410d41:	addr16 out 0x9b,eax
  410d44:	std    
  410d45:	pop    esi
  410d46:	mov    BYTE PTR [edi+0x7bcb5714],0x78
  410d4d:	xor    bh,BYTE PTR [eax]
  410d4f:	inc    ebp
  410d50:	mov    WORD PTR [edi+edi*8],ss
  410d53:	add    esp,DWORD PTR [eax-0x54dcb8ac]
  410d59:	push   ebx
  410d5a:	fild   QWORD PTR [esi]
  410d5c:	and    al,0xc7
  410d5e:	rol    DWORD PTR [ebx],cl
  410d60:	mov    WORD PTR [ebp+0x49af109f],ds
  410d66:	xchg   ebp,ebx
  410d68:	gs icebp 
  410d6a:	mov    ?,ebx
  410d6c:	cmp    ebp,DWORD PTR [eax-0x18]
  410d6f:	xor    esp,DWORD PTR [esp+edx*4-0x21]
  410d73:	xchg   esi,eax
  410d74:	sub    DWORD PTR [eax+ecx*1+0x1f],edi
  410d78:	dec    ebp
  410d79:	xchg   esp,eax
  410d7a:	scas   eax,DWORD PTR es:[edi]
  410d7b:	xchg   BYTE PTR [eax-0x64],ah
  410d7e:	push   edi
  410d7f:	aad    0x54
  410d81:	icebp  
  410d82:	pop    esi
  410d83:	pushf  
  410d84:	test   DWORD PTR [esi+eax*2-0x79],eax
  410d88:	(bad)  
  410d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d8a:	pop    ds
  410d8b:	dec    ebp
  410d8c:	mov    edx,0xbd8736f0
  410d91:	inc    ecx
  410d92:	clc    
  410d93:	(bad)  
  410d94:	and    ah,dl
  410d96:	adc    DWORD PTR es:[eax-0x4c046b10],esp
  410d9d:	adc    BYTE PTR [ebp+0x28509286],ah
  410da3:	ret    0x0
	...
  410db6:	add    BYTE PTR [eax],al
  410db8:	(bad)  
  410db9:	xchg   esp,eax
  410dba:	mov    esp,0x2414777a
  410dbf:	mov    dl,ah
  410dc1:	jp     0x410da2
  410dc3:	sbb    esi,ecx
  410dc5:	out    dx,eax
  410dc6:	or     BYTE PTR [edi+eiz*2-0x8],bh
  410dca:	inc    edi
  410dcb:	pushf  
  410dcc:	or     ch,bh
  410dce:	jg     0x410dfc
  410dd0:	add    al,0x1b
  410dd2:	xor    al,0x9f
  410dd4:	xchg   edi,eax
  410dd5:	push   ebp
  410dd6:	or     BYTE PTR [ecx+0x52],ch
  410dd9:	lock jns 0x410e05
  410ddc:	mov    al,ds:0x90286d6d
  410de1:	inc    edi
  410de2:	loopne 0x410e29
  410de4:	inc    esp
  410de5:	lock cmc 
  410de7:	loop   0x410e38
  410de9:	sub    DWORD PTR fs:[esi],edx
  410dec:	add    BYTE PTR [eax],ch
  410dee:	push   eax
  410def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df0:	adc    bl,BYTE PTR [ebx+0x602115c8]
  410df6:	pusha  
  410df7:	jmp    0x1f80d8b
  410dfc:	or     BYTE PTR [edi+0x47],dh
  410dff:	jmp    0xf1bcfdc3
  410e04:	pop    ss
  410e05:	xor    BYTE PTR [ecx+0x76],dh
  410e08:	adc    bh,al
  410e0a:	mov    edi,0xf4ef0b1e
  410e0f:	sbb    dl,al
  410e11:	sub    al,0xf6
  410e13:	pop    esi
  410e14:	or     ch,bh
  410e16:	cli    
  410e17:	xchg   edi,edx
  410e19:	xchg   esi,eax
  410e1a:	jnp    0x410e45
	...
  410e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e31:	mov    bl,0xe0
  410e33:	cmc    
  410e34:	imul   ebp,edi,0xfffffff5
  410e37:	repnz iret 
  410e39:	arpl   WORD PTR [ecx+eax*8],bp
  410e3c:	and    eax,0x5fe94776
  410e41:	cld    
  410e42:	nop
  410e43:	mov    edx,0x9158ef12
  410e48:	(bad)  
  410e49:	xchg   esp,eax
  410e4a:	in     eax,0x57
  410e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e4d:	adc    al,0x6e
  410e4f:	test   al,0x8f
  410e51:	inc    esp
  410e52:	cmc    
  410e53:	add    al,bh
  410e55:	jmp    0x410e44
  410e57:	or     DWORD PTR ds:0xf1e8f716,0xffffffa6
  410e5e:	cmc    
  410e5f:	dec    DWORD PTR [edi]
  410e61:	repnz in eax,dx
  410e63:	fst    QWORD PTR [esi+0x250bf719]
  410e69:	test   BYTE PTR [eax+ebp*2],ch
  410e6c:	(bad)  
  410e6d:	xchg   ecx,eax
  410e6e:	inc    edi
  410e6f:	add    BYTE PTR [ebp+0x52536110],al
  410e75:	sbb    DWORD PTR [esi+0x68],eax
  410e78:	and    eax,0xcdbee593
  410e7d:	sbb    BYTE PTR [edi+0x41],ch
  410e80:	xor    eax,0x1d75f5a3
  410e85:	or     ebx,DWORD PTR [edx+0x78]
  410e88:	repnz sbb dh,ch
  410e8b:	pop    ebp
  410e8c:	mov    dl,0x19
  410e8e:	idiv   edi
  410e90:	cwde   
  410e91:	sbb    al,0xf7
  410e93:	jne    0x410e95
	...
  410ea5:	add    BYTE PTR [eax],al
  410ea7:	add    ch,bh
  410ea9:	or     al,dh
  410eab:	dec    esp
  410eac:	jb     0x410ec7
  410eae:	push   edi
  410eaf:	leave  
  410eb0:	aaa    
  410eb1:	xchg   esp,eax
  410eb2:	or     BYTE PTR [ebp+0x6e],dl
  410eb5:	or     al,0x8b
  410eb7:	les    esi,FWORD PTR ds:0x15f04c67
  410ebd:	sbb    BYTE PTR [ebp+0xc],bh
  410ec0:	dec    ebp
  410ec1:	cmp    DWORD PTR [edx-0x1],ebx
  410ec4:	push   edx
  410ec5:	in     eax,dx
  410ec6:	mov    ch,0x74
  410ec8:	mov    bh,0x13
  410eca:	jne    0x410ec8
  410ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ecd:	mov    al,ds:0x1af88b29
  410ed2:	ins    BYTE PTR es:[edi],dx
  410ed3:	sbb    DWORD PTR [ebp-0x738ad83a],0x72107d19
  410edd:	lahf   
  410ede:	add    al,ch
  410ee0:	mov    WORD PTR [eax-0x607c00d1],?
  410ee6:	add    eax,0x81717bfc
  410eeb:	(bad)  
  410eec:	stc    
  410eed:	jecxz  0x410e80
  410eef:	hlt    
  410ef0:	xlat   BYTE PTR ds:[ebx]
  410ef1:	out    0x8c,al
  410ef3:	mov    ecx,cs
  410ef5:	jmp    0x410f30
  410ef7:	call   0xfeccbf95
  410efc:	inc    ebp
  410efd:	cmp    bh,dh
  410eff:	jmp    eax
  410f01:	jb     0x410ea0
  410f03:	or     BYTE PTR [eax-0x3c],0xf
  410f07:	add    BYTE PTR [esi+0x748bba],ah
	...
  410f1d:	add    BYTE PTR [eax],al
  410f1f:	add    BYTE PTR [ebx+eax*8+0x272b4bd4],al
  410f26:	jae    0x410f6c
  410f28:	and    BYTE PTR [edx+0xc],dl
  410f2b:	push   0xffffff8c
  410f2d:	sub    DWORD PTR [esi+eiz*2-0x33],0xfffffffb
  410f32:	adc    DWORD PTR [edx],eax
  410f34:	mov    ebx,?
  410f36:	mov    edi,esp
  410f38:	std    
  410f39:	lods   al,BYTE PTR ds:[esi]
  410f3a:	mov    edi,esi
  410f3c:	xchg   DWORD PTR [ebx],edi
  410f3e:	push   es
  410f3f:	aas    
  410f40:	add    eax,0xf86784b9
  410f45:	sahf   
  410f46:	dec    ecx
  410f47:	add    bl,ah
  410f49:	call   0xb2d6f6cf
  410f4e:	or     al,0x0
  410f50:	xchg   DWORD PTR [ebx-0x2f34dcfb],edi
  410f56:	and    edi,0xfe8d2417
  410f5c:	pop    esp
  410f5d:	ret    
  410f5e:	cmp    cl,cl
  410f60:	dec    esp
  410f61:	sti    
  410f62:	adc    DWORD PTR [eax],eax
  410f64:	mov    WORD PTR [esi+0x4b],ss
  410f67:	imul   ecx,DWORD PTR [ebx+ecx*1-0x6b7b8b73],0xed189917
  410f72:	push   ss
  410f73:	fwait
  410f74:	sub    DWORD PTR [esi+0x1e],ebx
  410f77:	test   BYTE PTR [edx+0x219b1767],al
  410f7d:	pop    esi
  410f7e:	push   cs
  410f7f:	test   BYTE PTR [edx+0x67],dh
  410f82:	repz add DWORD PTR [eax],0x0
	...
  410f96:	add    BYTE PTR [eax],al
  410f98:	loopne 0x410f36
  410f9a:	pop    es
  410f9b:	cli    
  410f9c:	xlat   BYTE PTR ds:[ebx]
  410f9d:	in     eax,dx
  410f9e:	out    0xb9,al
  410fa0:	dec    ebp
  410fa1:	cwde   
  410fa2:	(bad)  
  410fa4:	push   es
  410fa5:	add    BYTE PTR [ebx+0x48],ah
  410fa8:	inc    edi
  410fa9:	jp     0x410f8a
  410fab:	in     eax,dx
  410fac:	iret   
  410fad:	in     eax,dx
  410fae:	pop    esp
  410faf:	or     al,0x24
  410fb1:	aas    
  410fb2:	cmp    eax,DWORD PTR [ebx-0x7fd2e4ce]
  410fb8:	mov    bl,0x94
  410fba:	fbstp  TBYTE PTR [edx-0x1f]
  410fbd:	jnp    0x410f65
  410fbf:	jmp    0x410f8d
  410fc1:	xchg   esp,eax
  410fc2:	pop    ss
  410fc3:	js     0x410f6f
  410fc5:	push   ebx
  410fc6:	fild   WORD PTR [edx-0x63786380]
  410fcc:	jp     0x410fbb
  410fce:	xchg   BYTE PTR [ebx-0x6710f80],al
  410fd4:	mov    edi,esp
  410fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fd7:	iret   
  410fd8:	jmp    0x1c94:0x8f46a8ec
  410fdf:	(bad)  
  410fe0:	out    0x10,eax
  410fe2:	and    al,0x7c
  410fe4:	imul   edx,DWORD PTR [edi+ebx*8-0x2b12f68e],0xb
  410fec:	mov    ah,0xf9
  410fee:	test   eax,0xb4ecba82
  410ff3:	btr    DWORD PTR [esi-0x9],esp
  410ff7:	imul   ecx,DWORD PTR [ecx+ebx*2+0x8],0x36
	...
  411010:	pmaxsw mm7,QWORD PTR [ebx-0x27]
  411014:	push   cs
  411015:	push   0x59561100
  41101a:	cmc    
  41101b:	push   ds
  41101c:	punpcklwd mm2,DWORD PTR [eax]
  41101f:	push   ss
  411020:	test   DWORD PTR [eax-0x3786b0b],ecx
  411026:	hlt    
  411027:	mov    bl,0xe
  411029:	jmp    0x41108b
  41102b:	mov    edi,0xf6085577
  411030:	fs pushf 
  411032:	loopne 0x4110a1
  411034:	cdq    
  411035:	xchg   esp,eax
  411036:	or     dl,dh
  411038:	iret   
  411039:	pusha  
  41103a:	imul   edx,DWORD PTR [ecx+0x50],0x74
  41103e:	inc    edi
  41103f:	jmp    0xe971ebfb
  411044:	(bad)  
  411045:	sbb    eax,0xac27c14c
  41104a:	pusha  
  41104b:	sub    BYTE PTR [eax-0x48268415],dl
  411051:	dec    ecx
  411052:	xor    ch,cl
  411054:	(bad)  
  411055:	lahf   
  411056:	enter  0x861d,0x97
  41105a:	dec    ebx
  41105b:	mov    eax,ds:0x96185118
  411060:	add    al,0x9c
  411062:	loopne 0x411032
  411064:	jmp    0x7cea:0x776af5ea
  41106b:	mov    ch,0x18
  41106d:	push   ecx
  41106e:	hlt    
  41106f:	add    DWORD PTR [ecx+0x2fe594],ecx
	...
  411085:	add    BYTE PTR [eax],al
  411087:	add    BYTE PTR [esi],cl
  411089:	popa   
  41108a:	add    BYTE PTR [ecx-0x25],dl
  41108d:	pop    ebp
  41108e:	cmc    
  41108f:	pop    esi
  411090:	push   cs
  411091:	popa   
  411092:	add    al,0x56
  411094:	les    edx,FWORD PTR [ebx-0x1536dd20]
  41109a:	cmc    
  41109b:	add    BYTE PTR [edx-0x14],cl
  41109e:	icebp  
  41109f:	jmp    eax
  4110a1:	lahf   
  4110a2:	loopne 0x411102
  4110a4:	out    dx,eax
  4110a5:	push   ss
  4110a6:	idiv   edi
  4110a8:	loopne 0x411039
  4110aa:	cmc    
  4110ab:	jne    0x41103e
  4110ad:	push   ss
  4110ae:	jge    0x4110b8
  4110b0:	popf   
  4110b1:	sbb    eax,0x589aff40
  4110b6:	(bad)  
  4110b7:	adc    al,0x65
  4110b9:	int3   
  4110ba:	sub    ah,0xe6
  4110bd:	push   ebx
  4110be:	std    
  4110bf:	push   esi
  4110c0:	not    BYTE PTR [eax+ebp*8+0x4b]
  4110c4:	xor    al,0x97
  4110c6:	or     BYTE PTR [ecx+ebp*8+0x12],dh
  4110ca:	xor    eax,0xf5d79edc
  4110cf:	jmp    ecx
  4110d1:	loope  0x41105d
  4110d3:	cmp    eax,0x48db41
  4110d8:	and    eax,0x60c75fe3
  4110dd:	adc    al,0xf6
  4110df:	push   DWORD PTR ds:0xdd45cd97
  4110e5:	(bad)
  4110e9:	sbb    cl,BYTE PTR [ebp-0x4]
	...
  411100:	push   ebp
  411101:	sbb    ecx,DWORD PTR [ebp-0x8]
  411104:	(bad)  
  411107:	addr16 in al,dx
  411109:	dec    BYTE PTR [eax+0x0]
  41110c:	or     al,BYTE PTR [ebx-0x6f5bb42c]
  411112:	add    eax,eax
  411114:	loope  0x4110e5
  411116:	mov    bh,BYTE PTR [ebp+0x5d]
  411119:	nop
  41111a:	jl     0x411159
  41111c:	data16 jmp 0x411110
  41111f:	add    BYTE PTR [ecx+0x697581ab],dh
  411125:	jns    0x41113a
  411127:	push   esi
  411128:	mov    WORD PTR [esi+0x32],?
  41112b:	inc    DWORD PTR [edx-0x1b]
  41112e:	mov    BYTE PTR [ebp-0x70],dh
  411131:	push   edx
  411132:	repnz pop es
  411134:	stos   DWORD PTR es:[edi],eax
  411135:	and    bh,BYTE PTR [edx]
  411137:	call   FWORD PTR [ecx]
  411139:	cmc    
  41113a:	popa   
  41113b:	fstp   QWORD PTR [edx-0x6ca27847]
  411141:	pop    ds
  411142:	jb     0x4110c6
  411144:	push   edx
  411145:	lock mov WORD PTR [esp+eax*4-0x4],?
  41114a:	std    
  41114b:	add    al,0xf
  41114d:	fimul  DWORD PTR [ecx]
  41114f:	jne    0x4111ac
  411151:	xchg   ebx,eax
  411152:	std    
  411153:	sti    
  411154:	imul   eax,ecx,0x69
  411157:	dec    edx
  411158:	int    0xfb
  41115a:	out    0xc8,eax
  41115c:	dec    esi
  41115d:	lock or DWORD PTR [ebp+0x7],edx
  411161:	ror    BYTE PTR [ebx+eax*8+0x0],0x0
	...
  411175:	add    BYTE PTR [eax],al
  411177:	add    BYTE PTR [eax-0x51],al
  41117a:	aas    
  41117b:	inc    esp
  41117c:	inc    esp
  41117d:	cld    
  41117e:	or     DWORD PTR [eax],eax
  411180:	mov    WORD PTR [edx],?
  411182:	iret   
  411183:	repz mov ebx,?
  411186:	or     DWORD PTR [eax],eax
  411188:	sub    esp,DWORD PTR [ecx+0x1fc98f1c]
  41118e:	pop    ebx
  41118f:	ins    BYTE PTR es:[edi],dx
  411190:	sbb    BYTE PTR [esi+0xc],dl
  411193:	push   0xffffff8c
  411195:	test   DWORD PTR [edx+ebp*2],ecx
  411198:	mov    WORD PTR [edx],cs
  41119a:	(bad)  
  41119b:	sti    
  41119c:	add    ecx,DWORD PTR [ecx-0x6a7395e8]
  4111a2:	or     al,0xe8
  4111a4:	xchg   ecx,eax
  4111a5:	ror    DWORD PTR [ecx],cl
  4111a7:	add    BYTE PTR [edi+0x3c34fe3b],dl
  4111ad:	mov    esp,DWORD PTR [eax+eiz*8+0x48]
  4111b1:	jp     0x41113b
  4111b3:	mov    BYTE PTR [ecx-0x6c],cl
  4111b6:	fidiv  DWORD PTR [di]
  4111b9:	xchg   esp,eax
  4111ba:	fld    DWORD PTR [ebx]
  4111bc:	pop    ebp
  4111bd:	jmp    0x5ffb8d96
  4111c2:	inc    ebx
  4111c3:	cmp    BYTE PTR [eax],0x98
  4111c6:	fld    DWORD PTR [ebx]
  4111c8:	ss xchg esp,eax
  4111ca:	push   edi
  4111cb:	js     0x411227
  4111cd:	xchg   esp,eax
  4111ce:	fisttp WORD PTR [esp+ecx*8]
  4111d1:	pop    edi
  4111d2:	(bad)  
  4111d3:	sbb    BYTE PTR [eax],0xec
  4111d6:	pop    ss
  4111d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d8:	xlat   BYTE PTR ds:[ebx]
  4111d9:	jmp    0x4159f4
	...
  4111ee:	add    BYTE PTR [eax],al
  4111f0:	enter  0xdfec,0x3
  4111f4:	mov    WORD PTR [edx+eiz*2+0x73947bfe],ss
  4111fb:	shr    DWORD PTR [edx+0x5f],1
  4111fe:	test   DWORD PTR [eax-0x7ff81328],0xcdf94a3
  411208:	dec    esp
  411209:	pusha  
  41120a:	cs aam 0x4a
  41120d:	pop    edi
  41120e:	imul   DWORD PTR [ebx-0x21]
  411211:	mov    eax,ds:0x95d503df
  411216:	mov    al,ds:0x19fd5b8b
  41121b:	test   BYTE PTR [ebx-0x69],ah
  41121e:	cmp    al,0x28
  411220:	dec    edx
  411221:	xchg   esp,eax
  411222:	(bad)  
  411224:	xor    ebp,DWORD PTR [ecx-0x6273fc02]
  41122a:	lahf   
  41122b:	clc    
  41122c:	mov    al,ds:0x786c2f44
  411231:	pop    eax
  411232:	sahf   
  411233:	jg     0x411239
  411235:	dec    edi
  411236:	fstp   QWORD PTR [ecx+ebp*8-0xc]
  41123b:	ja     0x41127b
  41123d:	cld    
  41123e:	push   ebp
  41123f:	shl    dl,1
  411241:	call   0x54d3944e
  411246:	mov    BYTE PTR [ecx+0x66d75f8f],dh
  41124c:	(bad)
  41124f:	test   eax,0x62f5e9d3
	...
  411268:	(bad)
  41126b:	and    BYTE PTR [esi-0x63],cl
  41126e:	or     BYTE PTR [esi+edx*1+0x442589fd],bl
  411275:	aas    
  411276:	pop    ebp
  411277:	push   0x4d
  411279:	add    BYTE PTR [eax+ebp*4-0x71],0x94
  41127e:	jnp    0x41126f
  411280:	push   0x4a
  411282:	mov    edi,0x83949c2b
  411287:	lods   al,BYTE PTR ds:[esi]
  411288:	call   DWORD PTR [edi-0xb]
  41128b:	xchg   esp,eax
  41128c:	cmp    esp,0xffffffaf
  41128f:	cwde   
  411290:	jmp    0x2410:0x932901e6
  411297:	call   0x6cc8a72b
  41129c:	shl    edi,cl
  41129e:	cmc    
  41129f:	stc    
  4112a0:	(bad)  
  4112a1:	xchg   edi,eax
  4112a2:	mov    esi,esi
  4112a4:	mov    BYTE PTR [eax+ecx*1-0xa13cb2a],dl
  4112ab:	push   esp
  4112ac:	mov    al,0xef
  4112ae:	dec    esp
  4112af:	sbb    al,0xab
  4112b1:	out    0x1,al
  4112b3:	test   eax,0xe80d1192
  4112b8:	(bad)  
  4112b9:	xchg   esp,eax
  4112ba:	cmc    
  4112bb:	xor    al,0xc
  4112bd:	out    0x7b,eax
  4112bf:	mov    eax,ds:0x2860b5f7
  4112c4:	mov    ah,bh
  4112c6:	fst    DWORD PTR [edi+0x247fe67a]
	...
  4112e0:	jl     0x4112c8
  4112e2:	jnp    0x4112e4
  4112e4:	adc    DWORD PTR [edi+0x7c],esp
  4112e7:	clc    
  4112e8:	jge    0x41126d
  4112ea:	pusha  
  4112eb:	inc    ecx
  4112ec:	in     eax,0x7b
  4112ee:	mov    ch,0xfe
  4112f0:	bound  esp,QWORD PTR [esi-0x80]
  4112f3:	inc    ebp
  4112f4:	pop    ebp
  4112f5:	data16 jl 0x4112f4
  4112f8:	(bad)  
  4112f9:	in     al,dx
  4112fa:	std    
  4112fb:	push   0x48f893
  411300:	dec    ebp
  411301:	and    al,0xf4
  411303:	call   DWORD PTR [edx+0x18]
  411306:	dec    ebp
  411307:	in     al,0x36
  411309:	xchg   esp,eax
  41130a:	in     al,0x0
  41130c:	mov    dl,0xf
  41130e:	mov    eax,ds:0x8993a500
  411313:	jge    0x4112b2
  411315:	xchg   ebx,eax
  411316:	add    eax,0x8940284
  41131b:	add    dh,ah
  41131d:	xchg   esp,eax
  41131e:	in     al,dx
  41131f:	add    BYTE PTR [edx+0xf],dl
  411322:	popf   
  411323:	add    BYTE PTR [ebp-0x6d],dh
  411326:	cmc    
  411327:	jne    0x4113a6
  411329:	jnp    0x411394
  41132b:	ss gs xchg ebx,eax
  41132e:	xor    DWORD PTR [ebp-0x73],0xfd8bf41a
  411335:	inc    edx
  411336:	loopne 0x411389
  411338:	pop    esi
  411339:	mov    dh,0x6e
  41133b:	lods   eax,DWORD PTR ds:[esi]
  41133c:	mov    eax,ds:0x81087aa0
  411341:	stos   DWORD PTR es:[edi],eax
  411342:	jge    0x411348
	...
  411358:	and    DWORD PTR [eax-0x2c6efb1f],0x14a50a09
  411362:	es jb  0x411394
  411365:	adc    esi,edx
  411367:	cmp    DWORD PTR [edx-0x1a137771],ebp
  41136d:	jnp    0x41137a
  41136f:	or     BYTE PTR [ecx+edx*1-0xd378036],0x49
  411377:	fist   WORD PTR [eax+0x55a94de3]
  41137d:	loop   0x4113c1
  41137f:	je     0x41134b
  411381:	add    DWORD PTR [ecx-0x28a4fb4],0xffffffe7
  411388:	sbb    edi,DWORD PTR [eax]
  41138a:	push   0xffffffc6
  41138c:	dec    ecx
  41138d:	push   ebp
  41138e:	or     al,0x0
  411390:	mov    ebp,?
  411392:	xchg   BYTE PTR [eax+ebx*8+0x2c],al
  411396:	loopne 0x411398
  411398:	ss std 
  41139a:	(bad)  
  41139c:	xor    eax,0x8ffdffd
  4113a1:	cmp    BYTE PTR [esi+0x4f],dl
  4113a4:	xchg   ebx,eax
  4113a5:	mov    edi,0xfbcd4c1d
  4113aa:	add    al,al
  4113ac:	clc    
  4113ad:	(bad)  [eax-0x203ab84]
  4113b3:	sbb    esi,DWORD PTR [ebx+0x1]
  4113b6:	pop    esi
  4113b7:	(bad)  
  4113b8:	loope  0x41136d
  4113ba:	jae    0x411430
	...
  4113d0:	push   0x5bebfee7
  4113d5:	imul   eax,DWORD PTR [ecx],0x74f811e8
  4113db:	dec    BYTE PTR [ebx+0x49]
  4113de:	push   esp
  4113df:	out    0x35,eax
  4113e1:	or     DWORD PTR [eax+eax*1],0xe778493b
  4113e8:	xor    eax,0x2bfe73b2
  4113ed:	test   eax,0xa21de764
  4113f2:	jae    0x4113f2
  4113f4:	sbb    ebp,DWORD PTR [ecx-0x4dda18a0]
  4113fa:	jae    0x4113fa
  4113fc:	sbb    DWORD PTR [ebp-0x3ac8bdc],edx
  411402:	pop    es
  411403:	sar    edx,cl
  411405:	in     eax,0x3e
  411407:	faddp  st(4),st
  411409:	rcl    bl,cl
  41140b:	add    eax,DWORD PTR [ecx+0x19]
  41140e:	pushf  
  41140f:	or     bh,0xe8
  411412:	sbb    DWORD PTR [esi+eiz*2],eax
  411415:	dec    edi
  411416:	jle    0x41140e
  411418:	mov    edi,esp
  41141a:	(bad)  
  41141c:	retf   0x78e5
  41141f:	mov    bh,0xe5
  411422:	fmul   QWORD PTR [ebx]
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    dl,0x5c
  411427:	jl     0x4113db
  411429:	jp     0x411417
  41142b:	imul   ebx,DWORD PTR [ecx-0x6983b1ab],0xffffffd4
  411432:	mov    ebx,0x1d
	...
  411447:	add    BYTE PTR [esp+edi*2],bh
  41144a:	(bad)  
  41144b:	dec    edi
  41144c:	push   ebx
  41144d:	xchg   esp,eax
  41144e:	mov    DWORD PTR [ebx],0xeb6df58c
  411454:	(bad)  
  411455:	jl     0x4113f7
  411457:	add    ebx,esp
  411459:	in     eax,0x94
  41145b:	or     esp,DWORD PTR [esp+esi*8-0x70]
  41145f:	jl     0x4114cb
  411461:	cld    
  411462:	push   ebx
  411463:	leave  
  411464:	(bad)  
  411465:	in     eax,0xf6
  411467:	cmc    
  411468:	push   edi
  411469:	in     eax,0x74
  41146b:	or     esp,DWORD PTR [ebp+ecx*4-0x59]
  41146f:	jl     0x4114bb
  411471:	(bad)  [ecx+0x7a3f8c00]
  411477:	push   0xd3dbd00e
  41147c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147d:	xchg   esp,eax
  41147e:	dec    ecx
  41147f:	ret    0x5f2a
  411482:	imul   DWORD PTR [ebx-0xb]
  411485:	dec    esp
  411486:	mov    dh,0x7b
  411488:	add    al,0x4f
  41148a:	or     BYTE PTR [ebp+0x21b6a803],dh
  411490:	shl    esp,1
  411492:	jne    0x41147a
  411494:	(bad)  
  411495:	pusha  
  411496:	push   edi
  411497:	adc    ecx,esp
  411499:	ins    BYTE PTR es:[edi],dx
  41149a:	inc    edi
  41149b:	jmp    0xd805017e
  4114a0:	(bad)  
  4114a1:	xchg   esp,eax
  4114a2:	add    DWORD PTR [ecx-0x111e6d24],ebp
  4114a8:	out    0x5b,eax
  4114aa:	pusha  
  4114ab:	sub    BYTE PTR [eax],al
	...
  4114bd:	add    BYTE PTR [eax],al
  4114bf:	add    BYTE PTR [eax+0x7e2de03d],cl
  4114c5:	xchg   esp,eax
  4114c6:	or     dl,dh
  4114c8:	dec    edi
  4114c9:	popa   
  4114ca:	sub    DWORD PTR [esi+0x565c9527],esi
  4114d0:	aaa    
  4114d1:	call   0xe960:0x4488d5c8
  4114d8:	(bad)  
  4114d9:	cmc    
  4114da:	mov    dh,0xd1
  4114dc:	mov    bh,0x6c
  4114de:	inc    edi
  4114df:	jmp    0xe1bcfaa3
  4114e4:	test   DWORD PTR [ebx-0x3f8d987],0xe2f6b327
  4114ee:	hlt    
  4114ef:	fcmove st,st(7)
  4114f1:	sbb    al,0xf6
  4114f3:	push   cs
  4114f4:	out    0xe2,eax
  4114f6:	cli    
  4114f7:	push   edi
  4114f8:	mov    al,ds:0xd74e7b9b
  4114fd:	push   0x9c5cf6f4
  411502:	loopne 0x41156b
  411504:	dec    edi
  411505:	jecxz  0x4114fc
  411507:	inc    esi
  411508:	rcl    ebp,1
  41150a:	or     al,0xe9
  41150c:	pop    esp
  41150d:	pmulhw mm5,QWORD PTR [eax+0x73]
  411511:	sar    ebp,cl
  411513:	into   
  411514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411515:	adc    BYTE PTR [eax+eax*1+0x49],cl
  411519:	enter  0x75f6,0x35
  41151d:	pop    edi
  41151e:	jl     0x41152c
  411520:	dec    ebp
  411521:	jge    0x411561
	...
  411537:	add    ch,dh
  411539:	xchg   edx,eax
  41153a:	enter  0x700f,0xa4
  41153e:	or     al,BYTE PTR [eax]
  411540:	in     eax,0x56
  411542:	dec    esp
  411543:	clc    
  411544:	in     eax,0x97
  411546:	or     BYTE PTR [eax],al
  411548:	xor    dl,ch
  41154a:	in     eax,0xff
  41154c:	repnz xchg edi,eax
  41154e:	or     BYTE PTR [edx-0x1b],ch
  411551:	icebp  
  411552:	cmc    
  411553:	imul   esp,ebp,0x708cf5f1
  411559:	push   0x67308d45
  41155e:	(bad)  
  41155f:	call   FWORD PTR [edx-0x39]
  411562:	div    BYTE PTR [ebp+0x5d]
  411565:	pop    esi
  411566:	jl     0x411564
  411568:	dec    ebp
  411569:	outs   dx,BYTE PTR ds:[esi]
  41156a:	cmp    al,0x0
  41156c:	mov    ch,0x92
  41156e:	enter  0xb074,0x70
  411572:	std    
  411573:	add    DWORD PTR [ebp+0x2c166097],esp
  411579:	fdiv   st,st(5)
  41157b:	(bad)  
  41157c:	and    BYTE PTR [edi+0x5e2840e0],al
  411582:	not    BYTE PTR [eax-0x12]
  411585:	inc    edi
  411586:	test   BYTE PTR [ebp-0x9997b],al
  41158c:	add    eax,0x2830edc9
  411591:	pop    esi
  411592:	test   BYTE PTR [ecx-0x18420],0x3a
  411599:	outs   dx,BYTE PTR ds:[esi]
  41159a:	mov    ecx,DWORD PTR [ecx+0x0]
	...
  4115ad:	add    BYTE PTR [eax],al
  4115af:	add    BYTE PTR [edx],ch
  4115b1:	pop    ebp
  4115b2:	test   BYTE PTR [ebp+0x61],al
  4115b5:	enter  0xb66d,0x8c
  4115b9:	push   ebp
  4115ba:	leave  
  4115bb:	jmp    FWORD PTR [edx]
  4115bd:	or     BYTE PTR [ecx-0xa],ah
  4115c0:	and    ebx,edx
  4115c2:	outs   dx,DWORD PTR ds:[esi]
  4115c3:	je     0x41154d
  4115c5:	lds    eax,FWORD PTR [edi-0x7dd5ecb5]
  4115cb:	test   ah,ah
  4115cd:	sub    DWORD PTR [eax-0x2],esi
  4115d0:	jbe    0x4115bf
  4115d2:	loope  0x411592
  4115d4:	lods   al,BYTE PTR fs:[esi]
  4115d6:	or     al,0xff
  4115d8:	cmp    DWORD PTR [ecx],ebx
  4115da:	js     0x4115da
  4115dc:	jmp    0x4115ef
  4115de:	out    0xb,al
  4115e0:	hlt    
  4115e1:	mov    al,al
  4115e3:	(bad)  
  4115e4:	(bad)  [ebx+0x75]
  4115e7:	out    0xdb,eax
  4115e9:	imul   ebp,DWORD PTR [edi+0x69],0x6746958c
  4115f0:	dec    ebp
  4115f1:	in     eax,dx
  4115f2:	jo     0x4115a8
  4115f4:	test   al,0x49
  4115f6:	outs   dx,DWORD PTR ds:[esi]
  4115f7:	(bad)  
  4115f8:	mov    bl,0xbf
  4115fa:	or     eax,0x71013de8
  4115ff:	(bad)  
  411600:	adc    eax,0x9bf66870
  411605:	mov    eax,ds:0xa1b8848d
  41160a:	outs   dx,DWORD PTR ds:[esi]
  41160b:	(bad)  
  41160c:	(bad)  
  41160e:	imul   esp,DWORD PTR [edi-0x33],0xffffffeb
  411612:	jo     0x4115c8
	...
  411628:	push   0x73fe6f8b
  41162d:	add    DWORD PTR [esi],ecx
  41162f:	call   0xfeb215d1
  411634:	xchg   edi,eax
  411635:	stos   DWORD PTR es:[edi],eax
  411636:	clc    
  411637:	sbb    BYTE PTR [edi],cl
  411639:	mov    eax,ds:0xeb53f658
  41163e:	cmc    
  41163f:	je     0x4115dd
  411641:	repnz cmp DWORD PTR [edi+0x70bf9509],ecx
  411648:	cmp    ah,dl
  41164a:	das    
  41164b:	ins    BYTE PTR es:[edi],dx
  41164c:	xor    DWORD PTR [ebp-0x22],ecx
  41164f:	js     0x411687
  411651:	mov    edx,ebp
  411653:	inc    ebx
  411654:	lahf   
  411655:	call   0x78b6:0x4d1d6c0f
  41165c:	dec    edx
  41165d:	sbb    al,al
  41165f:	jo     0x41166b
  411661:	loop   0x41163f
  411663:	add    ecx,DWORD PTR [esp+edx*4-0x3c9bfbe7]
  41166a:	pop    ss
  41166b:	ret    
  41166c:	repz loop 0x4116c3
  41166f:	addr16 loop 0x411653
  411672:	xchg   BYTE PTR [eax+0x58],bh
  411675:	nop
  411676:	xchg   edi,eax
  411677:	ins    BYTE PTR es:[edi],dx
  411678:	inc    esi
  411679:	loope  0x4116f1
  41167b:	mov    cl,BYTE PTR [eax]
  41167d:	shl    DWORD PTR [esi+0x78],0xca
  411681:	outs   dx,BYTE PTR ds:[esi]
  411682:	fucomip st,st(3)
  411684:	mov    al,0x6c
  411686:	mov    al,ds:0x4427bb03
  41168b:	jo     0x41168d
	...
  41169d:	add    BYTE PTR [eax],al
  41169f:	add    BYTE PTR [edx-0x6811a11f],dh
  4116a5:	in     al,dx
  4116a6:	das    
  4116a7:	int3   
  4116a8:	mov    ds:0xcb7e78e1,al
  4116ad:	jmp    0x204f8ee8
  4116b2:	sbb    BYTE PTR [eax-0x76],dh
  4116b5:	loope  0x411696
  4116b7:	or     BYTE PTR [eax],cl
  4116b9:	or     al,ah
  4116bb:	add    ecx,DWORD PTR [esp+ebp*2-0x6b3314d9]
  4116c2:	ins    BYTE PTR es:[edi],dx
  4116c3:	mov    esi,0xae06445f
  4116c8:	cmp    ebp,ecx
  4116ca:	push   cs
  4116cb:	js     0x411740
  4116cd:	xchg   edx,eax
  4116ce:	jno    0x411748
  4116d0:	push   edx
  4116d1:	lea    ecx,[eax]
  4116d3:	sub    DWORD PTR [ebx],edi
  4116d5:	pop    ebp
  4116d6:	mov    DWORD PTR [ebx+esi*4-0x1f],ebp
  4116da:	jns    0x41173b
  4116dc:	mov    ebp,cr5
  4116df:	(bad)  
  4116e0:	mov    ebx,0x355d08e2
  4116e5:	push   ss
  4116e6:	mov    ah,0xc1
  4116e8:	mov    bl,0xe2
  4116ea:	cmc    
  4116eb:	jmp    0xd9a18c1b
  4116f0:	(bad)  
  4116f1:	icebp  
  4116f2:	mov    dh,0xb6
  4116f4:	std    
  4116f5:	cwde   
  4116f6:	loopne 0x4116c8
  4116f8:	int3   
  4116f9:	loope  0x4116f0
  4116fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116fc:	cmp    eax,0x7b9efdf9
  411701:	loop   0x41177e
  411703:	loope  0x411705
	...
  411715:	add    BYTE PTR [eax],al
  411717:	add    BYTE PTR [edi+0x70],dh
  41171a:	dec    ebx
  41171b:	mov    ds,WORD PTR [ebx-0x1e]
  41171e:	mov    ebx,0xf5e26b8d
  411723:	jle    0x411702
  411725:	cwde   
  411726:	loopne 0x41173e
  411728:	int    0xe1
  41172a:	cmc    
  41172b:	outs   dx,BYTE PTR ds:[esi]
  41172c:	mov    ebp,0x589cf5e4
  411731:	jmp    0x4100:0x683b5ef5
  411738:	outs   dx,BYTE PTR ds:[esi]
  411739:	push   edi
  41173a:	cmc    
  41173b:	dec    esi
  41173c:	sbb    ebp,DWORD PTR [eax]
  41173e:	jmp    0xf6233a81
  411743:	mov    ah,0x87
  411745:	in     al,dx
  411746:	(bad)  
  411747:	lods   eax,DWORD PTR ds:[esi]
  411748:	add    bl,bh
  41174a:	cmc    
  41174b:	je     0x411731
  41174d:	out    0xf5,al
  41174f:	add    ebp,DWORD PTR es:[ecx+0x0]
  411753:	adc    DWORD PTR [esi-0x1ce90aa7],edi
  411759:	sub    cl,bl
  41175b:	push   ss
  41175c:	fcmovnu st,st(6)
  41175e:	cmc    
  41175f:	add    al,bl
  411761:	mov    esp,eax
  411763:	and    al,0x28
  411765:	addr16 idiv bh
  411768:	mov    BYTE PTR [eax-0x2],al
  41176b:	push   DWORD PTR [edx]
  41176d:	ins    BYTE PTR es:[edi],dx
  41176e:	or     ecx,DWORD PTR [eax+0x32]
  411771:	div    BYTE PTR [di+0x6f5d]
  411776:	idiv   bh
  411778:	dec    ebp
  411779:	pop    ebx
  41177a:	dec    esi
  41177b:	inc    DWORD PTR [eax]
	...
  41178d:	add    BYTE PTR [eax],al
  41178f:	add    BYTE PTR [edx+0x67],dl
  411792:	mov    esp,0xf666dadc
  411797:	call   0x383671
  41179c:	inc    edx
  41179d:	and    eax,0x6732f7ea
  4117a2:	in     eax,dx
  4117a3:	in     eax,0xaa
  4117a5:	addr16 idiv bh
  4117a8:	pop    eax
  4117a9:	inc    ebx
  4117aa:	(bad)  
  4117ab:	inc    DWORD PTR [edx]
  4117ad:	ins    BYTE PTR es:[edi],dx
  4117ae:	iret   
  4117af:	inc    edi
  4117b0:	adc    ah,BYTE PTR [edi-0xa]
  4117b3:	mov    ch,0x1
  4117b5:	outs   dx,DWORD PTR ds:[esi]
  4117b6:	idiv   bh
  4117b8:	push   edx
  4117b9:	in     al,0x1
  4117bb:	dec    eax
  4117bd:	mov    esp,eax
  4117bf:	(bad)  
  4117c0:	xor    BYTE PTR [esi-0xa],ah
  4117c3:	call   FWORD PTR [eax]
  4117c5:	js     0x4117c5
  4117c7:	call   DWORD PTR [edx+0x6b]
  4117ca:	mov    bl,0x47
  4117cc:	inc    edx
  4117cd:	data16 test BYTE PTR [ebp+0x3d],0x70
  4117d2:	iret   
  4117d3:	std    
  4117d4:	push   edx
  4117d5:	data16 div BYTE PTR [ebp+0x51]
  4117d9:	imul   ecx,edi,0x33
  4117dc:	jne    0x411771
  4117de:	mov    edi,0x5b9361c2
  4117e3:	mov    esp,DWORD PTR [ecx-0x1f1b35ee]
  4117e9:	aam    0xf1
  4117eb:	push   eax
  4117ec:	mov    WORD PTR ds:0xedcd67ad,ss
  4117f2:	loope  0x411855
	...
  411808:	in     al,0x2c
  41180a:	or     bh,bh
  41180c:	fyl2x  
  41180e:	popa   
  41180f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411810:	(bad)  
  411811:	out    0x7b,al
  411813:	or     cl,BYTE PTR [ecx+ebp*2-0x1e]
  411817:	dec    edi
  411818:	vmread DWORD PTR [eax+0x3],esi
  41181c:	mov    ecx,0x1b2f7b9e
  411821:	mov    al,0x74
  411823:	and    BYTE PTR [ecx-0x73ff873b],0xed
  41182a:	jecxz  0x411832
  41182c:	dec    ebx
  41182d:	mov    eax,0xed8df374
  411832:	or     ebx,ebp
  411834:	dec    esi
  411835:	cs out 0xf7,al
  411838:	fs inc edx
  41183a:	in     al,0x40
  41183c:	mov    WORD PTR [eax-0x4b],?
  41183f:	jecxz  0x41187d
  411841:	adc    eax,0xed8c32e6
  411846:	mov    bl,al
  411848:	mov    BYTE PTR [ebx+0x19498d0c],al
  41184e:	frstor [edi+0x2e]
  411851:	xchg   ebp,eax
  411852:	leave  
  411853:	inc    edx
  411855:	out    0xd,eax
  411857:	call   0xfebe3bb5
  41185c:	xchg   DWORD PTR [ebp-0x2ac3ec08],ebp
  411862:	or     al,BYTE PTR [eax]
  411864:	mov    bl,0xe
  411866:	(bad)  
  411868:	and    ebp,esp
  41186a:	popa   
  41186b:	add    BYTE PTR ds:[eax],al
	...
  41187e:	add    BYTE PTR [eax],al
  411880:	and    DWORD PTR [esi+0x2eb9e77b],ebx
  411886:	jge    0x411886
  411888:	add    DWORD PTR [ecx],0x72
  41188b:	cmp    cl,0x94
  41188e:	daa    
  41188f:	add    al,0xf9
  411891:	sbb    al,0x18
  411893:	adc    eax,0x4b1eddd3
  411898:	dec    ebp
  411899:	(bad)  
  41189a:	(bad)  
  41189c:	push   es
  41189d:	icebp  
  41189e:	bound  eax,QWORD PTR [eax+0x57]
  4118a1:	imul   ebx,edi,0xffffffe9
  4118a4:	rcr    ch,cl
  4118a6:	je     0x4118b3
  4118a8:	xor    al,0x54
  4118aa:	stos   DWORD PTR es:[edi],eax
  4118ab:	je     0x4118e7
  4118ad:	or     al,0x25
  4118af:	js     0x41185c
  4118b1:	adc    al,0x58
  4118b3:	ret    
  4118b4:	sub    ebx,edi
  4118b6:	adc    al,0x3a
  4118b8:	aad    0x53
  4118ba:	fbstp  TBYTE PTR [eax+eiz*4-0x74]
  4118be:	xlat   BYTE PTR ds:[ebx]
  4118bf:	jae    0x4118d8
  4118c1:	fidiv  WORD PTR [esi+0x206c8beb]
  4118c7:	add    al,0x74
  4118c9:	xchg   edx,eax
  4118ca:	fild   WORD PTR [ebx]
  4118cc:	or     al,0xde
  4118ce:	adc    al,0xc
  4118d0:	in     al,0xbe
  4118d2:	xchg   ebx,eax
  4118d3:	je     0x4118bf
  4118d5:	fst    st(4)
  4118d7:	cmp    DWORD PTR [ebp+0x53],edx
  4118da:	fbstp  TBYTE PTR [eax+eiz*2-0x74]
  4118de:	xchg   edi,eax
  4118df:	sub    dl,bl
  4118e1:	fnsave [esi-0x15]
	...
  4118f8:	lea    edx,[edi+ebx*8-0x18983d7d]
  4118ff:	imul   edx,DWORD PTR [edi-0x4d8b9123],0x67
  411906:	push   ebx
  411907:	je     0x411929
  411909:	mov    WORD PTR [edi+0x3a],es
  41190c:	dec    eax
  41190d:	fld    QWORD PTR [esi+0x4a]
  411910:	int    0x98
  411912:	(bad)  
  411914:	push   es
  411915:	icebp  
  411916:	bound  edi,QWORD PTR [edi]
  411918:	addr16 inc esi
  41191a:	or     BYTE PTR [esi-0x5ea0228b],bl
  411920:	add    BYTE PTR [ecx+0x0],ch
  411923:	adc    esp,edx
  411925:	push   edx
  411926:	cmc    
  411927:	push   ds
  411928:	push   ss
  411929:	pop    eax
  41192a:	hlt    
  41192b:	push   0xffffff9a
  41192d:	jl     0x411973
  41192f:	test   al,0x8f
  411931:	xchg   esp,eax
  411932:	add    eax,0x894ca6d
  411937:	jmp    0xa555b948
  41193c:	dec    esi
  41193d:	(bad)  
  41193f:	fidivr WORD PTR [ebx-0x7016f7e3]
  411945:	adc    DWORD PTR [eax*1-0x16f7abb4],esi
  41194c:	mov    ds,WORD PTR [eax]
  41194e:	mov    edx,0x89948fe8
  411953:	add    al,0xa4
  411955:	dec    edx
  411956:	inc    edi
  411957:	jmp    0x8fcda6eb
	...
  411970:	mov    DWORD PTR [eax+ecx*1+0x41ecbd6a],edx
  411977:	sub    BYTE PTR [eax+0x19650594],cl
  41197d:	xchg   esp,eax
  41197e:	or     cl,ch
  411980:	or     ah,BYTE PTR [eax-0x232edd1c]
  411986:	cmc    
  411987:	test   BYTE PTR [ebx],0x9
  41198a:	or     cl,ch
  41198c:	(bad)  
  41198d:	adc    DWORD PTR [ecx+edi*2],esi
  411990:	add    edx,DWORD PTR [eax+ecx*1-0x17]
  411994:	mov    ds,WORD PTR [eax]
  411996:	jbe    0x411980
  411998:	(bad)  
  411999:	xchg   esp,eax
  41199a:	mov    DWORD PTR [eax+esi*2],ebx
  41199d:	push   eax
  41199e:	inc    edi
  41199f:	jmp    0xdbcda733
  4119a4:	nop
  4119a5:	xchg   esp,eax
  4119a6:	or     BYTE PTR [eax],al
  4119a8:	mov    ebp,0x75415f80
  4119ad:	mov    edx,0x9060fef5
  4119b2:	inc    esp
  4119b3:	inc    ecx
  4119b4:	gs pop ecx
  4119b6:	dec    esp
  4119b7:	clc    
  4119b8:	out    0xe5,al
  4119ba:	std    
  4119bb:	add    BYTE PTR [edx+0x14],bh
  4119be:	pop    esi
  4119bf:	add    DWORD PTR [ebp-0x68],esi
  4119c2:	and    esi,esi
  4119c4:	and    esp,DWORD PTR [edi+0x7c]
  4119c7:	clc    
  4119c8:	mov    bh,BYTE PTR [ebp+0x14]
  4119cb:	dec    esp
  4119cc:	hlt    
  4119cd:	xchg   edi,eax
  4119ce:	xor    eax,0x57c5e2e
	...
  4119e8:	mov    WORD PTR [esi+0x5b250007],ds
  4119ee:	pop    ebx
  4119ef:	or     al,0x9e
  4119f1:	sbb    DWORD PTR [esi-0x75],ebp
  4119f4:	mov    edi,0x414d80f4
  4119f9:	fcomi  st,st(6)
  4119fb:	pop    fs
  4119fd:	test   BYTE PTR [edi],al
  4119ff:	add    ch,dh
  411a01:	cmp    BYTE PTR [ebx],al
  411a03:	add    ebp,esi
  411a05:	xchg   edi,eax
  411a06:	pusha  
  411a07:	adc    ecx,DWORD PTR [ecx+edx*8-0xb]
  411a0b:	(bad)  
  411a0c:	sar    BYTE PTR [edi],cl
  411a0e:	cmp    esi,DWORD PTR [ecx]
  411a10:	cmc    
  411a11:	xchg   edi,eax
  411a12:	add    eax,eax
  411a14:	jmp    0x8997:0xe500fa0c
  411a1b:	jg     0x4119fa
  411a1d:	xchg   edi,eax
  411a1e:	add    eax,0x8981f84
  411a23:	add    BYTE PTR [edx],bh
  411a25:	fimul  WORD PTR ds:0xf6cd0ae8
  411a2b:	(bad)  
  411a2c:	cmp    al,0xcc
  411a2e:	in     eax,0xff
  411a30:	ret    0xf6df
  411a33:	jne    0x4119c1
  411a35:	cmp    eax,0x5588767a
  411a3a:	add    BYTE PTR [esi-0x6d],al
  411a3d:	push   edx
  411a3e:	rcr    DWORD PTR [esi*8-0x600f5d4],1
  411a45:	popf   
  411a46:	push   ecx
  411a47:	std    
  411a48:	mov    esp,0xb09ed
	...
  411a5d:	add    BYTE PTR [eax],al
  411a5f:	add    BYTE PTR [edx+eiz*8-0x80],cl
  411a63:	mov    bl,0x8c
  411a65:	in     eax,dx
  411a66:	or     DWORD PTR [edx-0x74],ebp
  411a69:	jo     0x411a2b
  411a6b:	out    0xbc,eax
  411a6d:	cmp    al,al
  411a6f:	jmp    0x411a2d
  411a71:	pop    es
  411a72:	or     ch,BYTE PTR [edx-0x74]
  411a75:	add    edi,DWORD PTR [ebx+0x14]
  411a78:	push   0x86ffcd31
  411a7d:	lods   eax,DWORD PTR ds:[esi]
  411a7e:	or     al,BYTE PTR [ebx+ebx*1+0x190009ed]
  411a85:	mov    al,0x60
  411a87:	dec    edi
  411a88:	and    edi,DWORD PTR [eax]
  411a8a:	push   esp
  411a8b:	(bad)  
  411a8c:	mov    eax,ds:0x28147819
  411a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a92:	leave  
  411a93:	call   DWORD PTR [esi+0x1177f12d]
  411a99:	test   al,0x6c
  411a9b:	dec    edi
  411a9c:	in     ax,dx
  411a9e:	sar    edi,cl
  411aa0:	gs jmp 0xfe60:0x7feaffd3
  411aa8:	jns    0x411abf
  411aaa:	mov    ah,0x40
  411aac:	mov    esi,?
  411aae:	dec    ecx
  411aaf:	jae    0x411aeb
  411ab1:	adc    bh,dh
  411ab3:	fbstp  TBYTE PTR [ecx+edx*4+0x73c3fecd]
  411aba:	int    0xdb
  411abc:	or     DWORD PTR [eax-0x6c4cb094],esi
  411ac2:	aam    0x4f
	...
  411ad8:	xor    eax,0x3608d994
  411add:	xchg   esp,eax
  411ade:	pop    esi
  411adf:	imul   DWORD PTR [edi+0x465bfcda]
  411ae5:	push   ebp
  411ae6:	(bad)  
  411ae8:	dec    ebx
  411ae9:	popa   
  411aea:	sbb    ah,bl
  411aec:	sbb    edx,0x4e
  411aef:	mov    dl,0x7a
  411af1:	pusha  
  411af2:	out    0x5b,eax
  411af4:	pop    edx
  411af5:	push   esp
  411af6:	cs jno 0x411b63
  411af9:	arpl   di,si
  411afb:	jo     0x411ad6
  411afd:	nop
  411afe:	push   ds
  411aff:	not    DWORD PTR [ebx+0x52c306ec]
  411b05:	fimul  DWORD PTR [esi]
  411b07:	imul   DWORD PTR [ebx-0x26]
  411b0a:	jl     0x411b5b
  411b0c:	inc    edx
  411b0d:	pusha  
  411b0e:	out    0x5b,eax
  411b10:	cmp    al,0x54
  411b12:	out    0x70,al
  411b14:	xor    ah,BYTE PTR [eax-0x35]
  411b17:	pop    ebx
  411b18:	lea    ecx,[edi-0x2a]
  411b1b:	jo     0x411b3f
  411b1d:	pusha  
  411b1e:	ret    
  411b1f:	jo     0x411aa1
  411b21:	call   0x6c54de50
  411b26:	fbstp  TBYTE PTR [eax-0x80]
  411b29:	call   0x4e3d31e4
  411b2e:	and    BYTE PTR [ebx+edi*8],al
  411b31:	pop    edi
  411b32:	scas   eax,DWORD PTR es:[edi]
  411b33:	pop    ebx
  411b34:	jmp    0xeb1c989
  411b39:	shr    bh,cl
  411b3b:	jo     0x411b3d
	...
  411b4d:	add    BYTE PTR [eax],al
  411b4f:	add    BYTE PTR [eax-0x20],dl
  411b52:	(bad)  
  411b53:	out    dx,al
  411b54:	fist   WORD PTR [esi+edx*8-0x7125147a]
  411b5b:	jo     0x411b11
  411b5d:	pop    ds
  411b5e:	jbe    0x411bd0
  411b60:	ret    0x86e
  411b63:	jmp    0x6f317ba4
  411b68:	call   0x7bd9:0x8fa844b4
  411b6f:	pop    ebp
  411b70:	sbb    al,0x60
  411b72:	add    BYTE PTR [ecx+0x66],al
  411b75:	push   esi
  411b76:	cmc    
  411b77:	dec    esi
  411b78:	mov    esp,0x932bbf37
  411b7d:	xchg   esp,eax
  411b7e:	pop    ebx
  411b7f:	jb     0x411b64
  411b81:	adc    al,0xcd
  411b83:	adc    eax,0x5cf5daf4
  411b88:	dec    edx
  411b89:	fstp   QWORD PTR [eax+0x26]
  411b8c:	bound  ecx,QWORD PTR [ebp+0x4bb1d4f5]
  411b92:	inc    edi
  411b93:	jmp    0xe979e94f
  411b98:	(bad)  
  411b99:	(bad)  
  411b9a:	enter  0x12f6,0x2a
  411b9e:	or     cl,ch
  411ba0:	(bad)  
  411ba1:	ror    DWORD PTR [ebx-0xf],1
  411ba4:	mov    ss,WORD PTR [eax+ecx*1-0x3af3b17]
  411bab:	out    0x93,al
  411bad:	xchg   esp,eax
  411bae:	or     BYTE PTR [ebx-0x78],dl
  411bb1:	outs   dx,BYTE PTR ds:[esi]
  411bb2:	or     BYTE PTR [ebx+0x0],al
	...
  411bc5:	add    BYTE PTR [eax],al
  411bc7:	add    BYTE PTR [eax+0x455c086e],dl
  411bcd:	in     eax,0x58
  411bcf:	je     0x411be6
  411bd1:	in     eax,0xfd
  411bd3:	mov    esi,0x3cf54973
  411bd8:	push   0x50ad7bda
  411bdd:	idiv   DWORD PTR [eax]
  411bdf:	jmp    0x1609a973
  411be4:	xchg   ebp,eax
  411be5:	jmp    0x411c61
  411be7:	call   0xf7a1b07b
  411bec:	adc    BYTE PTR [eax+ecx*1+0x0],dl
  411bf0:	adc    bl,bl
  411bf2:	add    eax,ebp
  411bf4:	adc    dl,cl
  411bf6:	idiv   bh
  411bf8:	xchg   ebp,eax
  411bf9:	pop    ebp
  411bfa:	lds    ecx,FWORD PTR [ebp-0x1a3d8]
  411c00:	xor    al,al
  411c02:	push   edi
  411c03:	call   0x37ed6a
  411c08:	sub    al,0xb
  411c0a:	shl    bh,cl
  411c0c:	inc    edx
  411c0d:	imul   ebp,ebp,0xf6673935
  411c13:	push   0x75
  411c15:	mov    esp,0x94246940
  411c1a:	cmc    
  411c1b:	mov    ch,0x81
  411c1d:	pop    edi
  411c1e:	idiv   bh
  411c20:	mov    dl,0x9d
  411c22:	xor    cl,BYTE PTR [ecx+0x34]
  411c25:	xchg   esp,eax
  411c26:	loopne 0x411c5d
  411c28:	sub    ah,BYTE PTR [edi-0xa]
  411c2b:	mov    DWORD PTR [eax],eax
	...
  411c3d:	add    BYTE PTR [eax],al
  411c3f:	add    al,ch
  411c41:	pusha  
  411c42:	(bad)  
  411c43:	call   DWORD PTR [edx-0xc980a46]
  411c49:	mov    eax,0x1d420048
  411c4e:	shl    bh,cl
  411c50:	and    ah,BYTE PTR [edi-0xa]
  411c53:	xor    eax,0x49196f
  411c58:	cmp    eax,0x42ff4d7f
  411c5d:	pop    ecx
  411c5e:	mov    esp,gs
  411c60:	cmp    ah,BYTE PTR [edi-0xa]
  411c63:	push   0xfffffff5
  411c65:	mov    ebx,0x90b4695a
  411c6a:	cmc    
  411c6b:	mov    ch,0x21
  411c6d:	pop    edi
  411c6e:	idiv   bh
  411c70:	and    bl,BYTE PTR [ebp-0x6f4bb6ce]
  411c76:	loopne 0x411c71
  411c78:	stos   DWORD PTR es:[edi],eax
  411c79:	test   BYTE PTR [bx+di+0x688c],0x51
  411c7f:	not    bl
  411c81:	push   es
  411c82:	sar    bh,1
  411c84:	xor    esi,DWORD PTR [ebp+0x568c40d3]
  411c8a:	mov    al,0xdb
  411c8c:	ret    
  411c8d:	pop    esi
  411c8e:	data16 (bad) 
  411c90:	jns    0x411cb5
  411c92:	mov    ch,0x40
  411c94:	mov    WORD PTR [ebp+0x42],es
  411c97:	inc    ebp
  411c98:	mov    ds:0xb0847436,eax
  411c9d:	ss data16 (bad) 
  411ca0:	es in  eax,dx
  411ca2:	rcr    DWORD PTR [eax+eax*1+0x0],1
	...
  411cb6:	add    BYTE PTR [eax],al
  411cb8:	cmc    
  411cb9:	sub    al,0xa
  411cbb:	(bad)  
  411cbc:	cmp    DWORD PTR [ecx+0x7e],edi
  411cbf:	(bad)  
  411cc0:	jnp    0x411c60
  411cc2:	xor    BYTE PTR [edx],bh
  411cc4:	lds    ebp,FWORD PTR [edx+ecx*1]
  411cc7:	call   0xfea843f5
  411ccc:	adc    eax,0x5bf66970
  411cd1:	jle    0x411c5d
  411cd3:	mov    esp,0xfe667e60
  411cd8:	mov    WORD PTR [ecx-0x26],ds
  411cdb:	addr16 mov ebp,gs
  411cde:	push   esi
  411cdf:	mov    ebp,0xe7f1583b
  411ce4:	jbe    0x411d13
  411ce6:	addr16 (bad) 
  411ce8:	sub    edi,eax
  411cea:	jl     0x411ce2
  411cec:	and    esi,DWORD PTR [esi-0x2a7b8b9d]
  411cf2:	jbe    0x411d33
  411cf4:	adc    eax,esi
  411cf6:	arpl   WORD PTR [eax+edi*8+0x3fe6415],si
  411cfd:	mov    al,ds:0xad0ce7f4
  411d02:	arpl   si,di
  411d04:	repz pop edi
  411d06:	push   esp
  411d07:	imul   bl
  411d09:	xchg   ebx,eax
  411d0a:	scas   al,BYTE PTR es:[edi]
  411d0b:	ins    DWORD PTR es:[edi],dx
  411d0c:	pop    eax
  411d0d:	mov    WORD PTR [edi-0x6128640e],ss
  411d13:	ins    DWORD PTR es:[edi],dx
  411d14:	sbb    al,dh
  411d16:	sahf   
  411d17:	ins    DWORD PTR es:[edi],dx
  411d18:	retf   0xf4d6
  411d1b:	sti    
	...
  411d30:	stos   DWORD PTR es:[edi],eax
  411d31:	outs   dx,DWORD PTR ds:[esi]
  411d32:	pop    ds
  411d33:	ins    DWORD PTR es:[edi],dx
  411d34:	mov    edx,0xba6434d6
  411d39:	(bad)  
  411d3a:	ins    WORD PTR es:[edi],dx
  411d3c:	and    BYTE PTR [edi+edx*2+0x56d763d6],cl
  411d43:	ins    DWORD PTR es:[edi],dx
  411d44:	loopne 0x411cfd
  411d46:	push   esi
  411d47:	ins    DWORD PTR es:[edi],dx
  411d48:	xchg   edx,eax
  411d49:	(bad)  
  411d4a:	fdiv   st(3),st
  411d4c:	jae    0x411d63
  411d4e:	dec    esi
  411d4f:	ins    DWORD PTR es:[edi],dx
  411d50:	adc    dh,0x7c
  411d53:	push   eax
  411d54:	adc    dh,0x3e
  411d57:	pop    esp
  411d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d59:	push   ecx
  411d5a:	es ins DWORD PTR es:[edi],dx
  411d5c:	push   0x20
  411d5e:	adc    BYTE PTR [ebp+0x62],dh
  411d61:	(bad)  
  411d62:	pop    ss
  411d63:	or     eax,0x6d1ed5cf
  411d68:	sbb    cl,ch
  411d6a:	push   ds
  411d6b:	ins    DWORD PTR es:[edi],dx
  411d6c:	dec    edx
  411d6d:	in     eax,dx
  411d6e:	rol    eax,cl
  411d70:	inc    edx
  411d71:	(bad)  
  411d72:	div    BYTE PTR [esi+0x6cfede33]
  411d78:	sub    ecx,DWORD PTR [edx+eiz*4-0x6b29d594]
  411d7f:	addr16 sbb dl,dh
  411d82:	(bad)  
  411d83:	pop    ebx
  411d84:	sbb    DWORD PTR [ebx-0x22],edx
  411d87:	ins    BYTE PTR es:[edi],dx
  411d88:	adc    ah,BYTE PTR [eax]
  411d8a:	shl    BYTE PTR [edx+ecx*1-0x2a],0xd7
  411d8f:	jo     0x411dde
  411d91:	aad    0xb6
  411d93:	ins    BYTE PTR es:[edi],dx
	...
  411da8:	push   eax
  411da9:	fmul   QWORD PTR [eax]
  411dab:	shr    bh,0xd7
  411dae:	cmc    
  411daf:	scas   al,BYTE PTR es:[edi]
  411db0:	js     0x411e12
  411db2:	hlt    
  411db3:	xchg   ecx,eax
  411db4:	loopne 0x411d5c
  411db6:	or     cl,ch
  411db8:	xchg   esi,eax
  411db9:	rol    DWORD PTR [eax],cl
  411dbb:	jmp    0x6b26287a
  411dc0:	push   ebx
  411dc1:	fldenv [edx-0x17]
  411dc4:	in     eax,0x4c
  411dc6:	cmc    
  411dc7:	hlt    
  411dc8:	mov    bh,0xed
  411dca:	or     ebp,DWORD PTR [ecx]
  411dcc:	and    esi,edx
  411dce:	jg     0x411df4
  411dd0:	sbb    al,0x6d
  411dd2:	and    dl,al
  411dd4:	into   
  411dd5:	aad    0xf6
  411dd7:	aam    0x97
  411dd9:	in     eax,dx
  411dda:	add    BYTE PTR [edi+0x20],dl
  411ddd:	(bad)  
  411dde:	cmc    
  411ddf:	aam    0xfb
  411de1:	(bad)  
  411de2:	jnp    0x411dd5
  411de4:	out    0xa5,eax
  411de6:	dec    eax
  411de7:	ds call 0x902ee8b9
  411ded:	aas    
  411dee:	cmp    DWORD PTR ds:0x26fcd10c,0x97e0895a
  411df8:	jp     0x411d8e
  411dfa:	or     dl,ah
  411dfc:	iret   
  411dfd:	pusha  
  411dfe:	or     al,0x20
  411e00:	int    0x89
  411e02:	or     BYTE PTR [esi],al
  411e04:	cmp    al,BYTE PTR [ebp-0x6b657820]
  411e0a:	or     dl,ah
	...
  411e20:	iret   
  411e21:	pusha  
  411e22:	or     al,0x20
  411e24:	int    0x89
  411e26:	or     BYTE PTR [eax+0x4d],dh
  411e29:	(bad)  
  411e2b:	push   esp
  411e2c:	test   al,0xed
  411e2e:	pushf  
  411e2f:	sub    esp,DWORD PTR [edi+0x74247fd6]
  411e35:	(bad)  
  411e36:	jnp    0x411e38
  411e38:	leave  
  411e39:	push   0xe33af87c
  411e3e:	add    eax,0xf71a09e8
  411e43:	(bad)  
  411e44:	out    dx,al
  411e45:	push   eax
  411e46:	jns    0x411e83
  411e48:	pop    esp
  411e49:	sar    ecx,cl
  411e4b:	push   0xffffffe5
  411e4d:	pop    ebx
  411e4e:	dec    esp
  411e4f:	hlt    
  411e50:	xchg   ebp,eax
  411e51:	imul   edi,DWORD PTR [esp+edi*8+0xd],0xaff6244
  411e59:	aad    0xb5
  411e5b:	je     0x411e30
  411e5d:	mov    eax,0x2a0a0ff5
  411e62:	div    DWORD PTR [ebp-0x53]
  411e65:	cmp    dh,bh
  411e67:	sub    ch,BYTE PTR ds:[ecx-0xa]
  411e6b:	jne    0x411e16
  411e6d:	imul   edi,DWORD PTR [eax+ecx*1+0x4d],0xdaff371a
  411e75:	aas    
  411e76:	jl     0x411e6c
  411e78:	retf   0xf1c5
  411e7b:	inc    DWORD PTR [eax-0x30]
  411e7e:	in     eax,dx
  411e7f:	adc    al,0x7a
  411e81:	aas    
  411e82:	idiv   bh
	...
  411e98:	and    BYTE PTR [ebp*8-0x9c0c8db],bh
  411e9f:	leave  
  411ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ea1:	int3   
  411ea2:	cmc    
  411ea3:	push   esp
  411ea4:	out    dx,al
  411ea5:	ins    BYTE PTR es:[edi],dx
  411ea6:	mov    al,ah
  411ea8:	and    esi,0x703975f6
  411eae:	out    0x46,al
  411eb0:	cmp    bh,BYTE PTR [edi]
  411eb2:	add    al,al
  411eb4:	mov    al,0x94
  411eb6:	push   esi
  411eb7:	leave  
  411eb8:	ja     0x411e86
  411eba:	cmc    
  411ebb:	mov    WORD PTR [eax+0x48],?
  411ebe:	inc    ebp
  411ebf:	inc    eax
  411ec1:	int3   
  411ec2:	in     eax,dx
  411ec3:	mov    eax,ds:0xfe61828c
  411ec8:	xchg   edi,eax
  411ec9:	std    
  411eca:	repnz sub esp,0xffffffbd
  411ece:	or     DWORD PTR [eax],eax
  411ed0:	sti    
  411ed1:	mov    BYTE PTR [eax-0x19],ah
  411ed4:	mov    BYTE PTR [edi+0x61],bh
  411ed7:	(bad)  
  411ed8:	adc    eax,0x59fe5079
  411edd:	stc    
  411ede:	bound  esi,QWORD PTR [eax+ebp*8+0x32]
  411ee2:	stc    
  411ee3:	mul    esp
  411ee5:	xlat   BYTE PTR ds:[ebx]
  411ee6:	retf   
  411ee7:	dec    bl
  411ee9:	ss clc 
  411eeb:	jmp    0x411ea2
  411eed:	pop    esi
  411eee:	or     DWORD PTR [eax],eax
  411ef0:	mov    WORD PTR [ebp-0x42b29779],fs
  411ef6:	xlat   BYTE PTR ds:[ebx]
  411ef7:	out    0x5b,eax
  411ef9:	adc    ecx,DWORD PTR [edx]
	...
  411f0f:	add    BYTE PTR [edi-0x5afb0783],dl
  411f15:	adc    eax,0x368c000a
  411f1a:	jns    0x411f83
  411f1c:	adc    esp,edx
  411f1e:	int3   
  411f1f:	jmp    FWORD PTR [ebx+0x47]
  411f22:	sbb    eax,0x79be8c00
  411f27:	mov    cl,bh
  411f29:	push   ebp
  411f2a:	rcl    DWORD PTR [ebp+esi*8+0x745609fc],1
  411f31:	out    0xf,eax
  411f33:	add    BYTE PTR [esi+eax*8-0x69718bb7],cl
  411f3a:	test   DWORD PTR [ecx-0x1d27ca64],0x67560015
  411f44:	and    esp,DWORD PTR [ecx*8+0x1c95d9ff]
  411f4b:	mov    WORD PTR cs:[ebp-0x6b66400a],?
  411f52:	loope  0x411fb0
  411f54:	mov    eax,0xfadcd01f
  411f59:	cmp    al,0x20
  411f5b:	add    al,0xf4
  411f5d:	(bad)  
  411f5f:	add    ecx,DWORD PTR [edi+edx*4-0xf7f8451]
  411f66:	push   edi
  411f67:	(bad)  
  411f68:	fs push ebp
  411f6a:	(bad)  
  411f6c:	repz ret 0x3f4
  411f70:	mov    WORD PTR [edi+0xef9f],ds
	...
  411f86:	add    BYTE PTR [eax],al
  411f88:	lea    edi,[edi+0x1c837dea]
  411f8e:	xor    eax,0xb7591451
  411f93:	jge    0x411fdd
  411f95:	mov    eax,0x1f8c04a5
  411f9a:	sub    eax,0xdf93c94c
  411f9f:	push   0xef66f020
  411fa4:	stos   DWORD PTR es:[edi],eax
  411fa5:	rcl    ah,cl
  411fa7:	sti    
  411fa8:	mov    bl,0x26
  411faa:	push   esi
  411fab:	imul   edx,DWORD PTR [edx+0x1664b51d],0x937c4b58
  411fb5:	push   ds
  411fb6:	xchg   ebp,eax
  411fb7:	push   eax
  411fb8:	push   es
  411fb9:	pop    eax
  411fba:	daa    
  411fbb:	jl     0x411f40
  411fbd:	adc    al,0xfe
  411fbf:	add    ebx,DWORD PTR [ebx+0x62689c17]
  411fc5:	shr    BYTE PTR [esi],cl
  411fc7:	out    dx,eax
  411fc8:	addr16 mov ebp,0xd252c2bf
  411fce:	ins    BYTE PTR es:[edi],dx
  411fcf:	mov    edi,0xb907653b
  411fd4:	retf   0xed1
  411fd7:	pop    ebp
  411fd8:	cmp    esi,DWORD PTR [eax+0x38]
  411fdb:	inc    esi
  411fdc:	xchg   DWORD PTR [eax+ecx*1-0xa425764],edx
  411fe3:	je     0x412000
  411fe5:	mov    edx,0xd2a52c53
  411fea:	add    DWORD PTR [ecx+0x0],ebp
	...
  412000:	and    edi,DWORD PTR [ebp+0x60]
  412003:	inc    ecx
  412004:	out    0x54,eax
  412006:	or     BYTE PTR [ecx],bh
  412008:	pusha  
  412009:	mov    esp,0x6164c64c
  41200e:	pusha  
  41200f:	ds pop esi
  412011:	xchg   ecx,eax
  412012:	or     BYTE PTR [ecx-0x70],al
  412015:	xchg   esp,eax
  412016:	in     eax,0x6f
  412018:	(bad)  
  412019:	dec    esp
  41201a:	pop    edi
  41201b:	sub    BYTE PTR [eax-0x2feb0a9c],dl
  412021:	mov    ecx,0xd235012c
  412026:	loopne 0x411fd9
  412028:	iret   
  412029:	shl    ch,cl
  41202b:	mov    al,0x51
  41202d:	cdq    
  41202e:	or     BYTE PTR [ecx+esi*1],dl
  412031:	mov    ebp,0x3b33ad89
  412036:	or     BYTE PTR [ebx],al
  412038:	loop   0x41200c
  41203a:	jnp    0x41202d
  41203c:	aaa    
  41203d:	retf   
  41203e:	xor    ebx,DWORD PTR [esi+0x24]
  412041:	sbb    al,0x4c
  412043:	push   ebp
  412044:	imul   ebp,DWORD PTR [ebx-0x46782b0b],0xd2e446ab
  41204e:	bound  ecx,QWORD PTR [edx]
  412050:	in     eax,0x48
  412052:	add    BYTE PTR [ecx+0x18],al
  412055:	shl    ch,cl
  412057:	cs inc ecx
  412059:	lods   eax,DWORD PTR ds:[esi]
  41205a:	cmc    
  41205b:	pushf  
  41205c:	push   edi
  41205d:	mov    ecx,0xd2e41e97
  412062:	pusha  
  412063:	jmp    0x412068
	...
  412078:	pop    ecx
  41207a:	mov    dh,0x81
  41207c:	cmp    BYTE PTR [edi+eax*2],bh
  41207f:	add    BYTE PTR ds:0xe4696ded,ah
  412085:	xchg   esp,eax
  412086:	cmc    
  412087:	jne    0x4120b6
  412089:	ins    DWORD PTR es:[edi],dx
  41208a:	into   
  41208b:	imul   esi,DWORD PTR [edx],0x3175f639
  412091:	cmp    DWORD PTR [eax+ecx*1+0x3d],edi
  412095:	cmp    esi,DWORD PTR [edi+edi*8]
  412098:	loop   0x412028
  41209a:	mov    DWORD PTR [esi*8+0x64ec82e3],0x32f7dd54
  4120a5:	cmp    DWORD PTR [ebp+eax*2+0x75f6e821],eax
  4120ac:	sar    DWORD PTR [ecx],0x7c
  4120af:	or     ch,bh
  4120b1:	and    ah,BYTE PTR [edx]
  4120b3:	add    ch,ah
  4120b5:	int    0xb5
  4120b7:	(bad)  
  4120ba:	or     BYTE PTR [eax],al
  4120bc:	mov    ch,0x91
  4120be:	dec    esp
  4120bf:	clc    
  4120c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c1:	xchg   esp,eax
  4120c2:	or     BYTE PTR [eax],al
  4120c4:	jmp    0x894:0xbafff9d2
  4120cb:	push   0xffffffb5
  4120cd:	jmp    0x8cf5:0xeaa569f5
  4120d4:	call   0xf8ce6619
  4120d9:	inc    esp
  4120da:	(bad)  
  4120db:	inc    DWORD PTR [eax]
	...
  4120ed:	add    BYTE PTR [eax],al
  4120ef:	add    dl,dl
  4120f1:	call   0x380e96ec
  4120f6:	jl     0x4120f4
  4120f8:	fucomp st(7)
  4120fa:	and    DWORD PTR [eax],eax
  4120fc:	jne    0x4120c9
  4120fe:	mov    ch,0x74
  412100:	push   0x65018a71
  412105:	xchg   esp,eax
  412106:	pusha  
  412107:	push   ss
  412108:	sbb    al,0xd9
  41210a:	cmc    
  41210b:	dec    BYTE PTR [eax+esi*1-0x4fb1802]
  412112:	outs   dx,BYTE PTR ds:[esi]
  412113:	(bad)  
  412114:	fadd   QWORD PTR [edx+0x5c]
  412117:	mov    WORD PTR [ecx],cs
  412119:	retf   0xfe66
  41211c:	sub    ebp,DWORD PTR [esi]
  41211e:	fsub   st,st(7)
  412120:	hlt    
  412121:	cli    
  412122:	outs   dx,BYTE PTR ds:[esi]
  412123:	inc    BYTE PTR ds:0x13f64141
  412129:	out    dx,eax
  41212a:	push   ecx
  41212b:	std    
  41212c:	retf   
  41212d:	out    0x6e,al
  41212f:	imul   ecx,DWORD PTR [ebp+edx*2-0x42b297b7],0x6d4b46e
  41213a:	outs   dx,DWORD PTR ds:[esi]
  41213b:	(bad)  
  41213c:	jmp    0x4120ce
  41213e:	hlt    
  41213f:	out    0x8d,eax
  412141:	jp     0x4121b0
  412143:	inc    BYTE PTR ds:0xd3f67941
  412149:	cs sar bh,1
  41214c:	xor    edi,ecx
  41214e:	aam    0x40
  412150:	mov    WORD PTR [esi],ds
  412152:	mov    ecx,0xd7
	...
  412167:	add    bl,al
  412169:	push   ss
  41216a:	outs   dx,DWORD PTR ds:[esi]
  41216b:	(bad)  
  41216c:	cmp    ebp,eax
  41216e:	push   ecx
  41216f:	in     eax,0x4e
  412171:	inc    esi
  412172:	outs   dx,BYTE PTR ds:[esi]
  412173:	mov    BYTE PTR [ecx],cl
  412175:	push   edx
  412176:	data16 (bad) 
  412178:	fwait
  412179:	jecxz  0x412184
  41217b:	push   0xffcce4b9
  412180:	mov    dh,BYTE PTR [eax]
  412182:	inc    edx
  412183:	test   BYTE PTR [ebx-0x7b8b91a2],0x65
  41218a:	xor    al,BYTE PTR [ecx+0x73]
  41218d:	mov    ?,WORD PTR [esp+eax*4+0x74]
  412191:	mov    gs,WORD PTR [esi-0x2]
  412194:	adc    DWORD PTR [eax],edi
  412196:	dec    ebp
  412197:	neg    BYTE PTR [ebx-0x6c]
  41219a:	cs shr ebx,cl
  41219d:	out    dx,al
  41219e:	cwde   
  41219f:	les    ecx,FWORD PTR [ebx-0x32]
  4121a2:	push   esp
  4121a3:	dec    ebx
  4121a4:	cmp    cl,bh
  4121a6:	push   es
  4121a7:	data16 rcr BYTE PTR [edi+edx*1-0x9303266],0x7b
  4121b0:	adc    BYTE PTR [eax+0x3a2265f6],bh
  4121b6:	(bad)  
  4121b8:	and    al,0x3d
  4121ba:	and    BYTE PTR [ebx+edx*1],al
  4121bd:	or     eax,ecx
  4121bf:	ins    DWORD PTR es:[edi],dx
  4121c0:	or     cl,bh
  4121c2:	fsubp  st(7),st
  4121c4:	mov    edi,DWORD PTR [edi+ebp*2+0x78cefac2]
  4121cb:	jg     0x4121cd
	...
  4121dd:	add    BYTE PTR [eax],al
  4121df:	add    bl,dl
  4121e1:	(bad)  
  4121e2:	mov    dh,0x65
  4121e4:	push   cs
  4121e5:	adc    DWORD PTR [eax-0x20311d93],esi
  4121eb:	out    dx,eax
  4121ec:	adc    bp,WORD PTR [ebp+0x58]
  4121f0:	fcmove st,st(6)
  4121f2:	xchg   esi,eax
  4121f3:	add    al,0x40
  4121f5:	xor    ah,BYTE PTR [edx-0x59]
  4121f8:	stos   DWORD PTR es:[edi],eax
  4121f9:	mov    BYTE PTR [esi+0x2842bb65],0xdc
  412200:	mov    bl,0xce
  412202:	xchg   BYTE PTR [esi+0x5bcf48aa],ah
  412208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412209:	mov    ah,BYTE PTR [esi+0x65]
  41220c:	call   0x56ce:0x926d5008
  412213:	out    dx,eax
  412214:	fwait
  412215:	mov    esp,0xce8327ae
  41221a:	inc    esi
  41221b:	scas   eax,DWORD PTR es:[edi]
  41221c:	addr16 (bad) 
  41221e:	dec    esi
  41221f:	gs jb  0x41226a
  412222:	iret   
  412223:	pop    ebx
  412224:	int3   
  412225:	nop
  412226:	or     BYTE PTR [esi],dh
  412228:	jmp    0xe982ddfb
  41222d:	into   
  41222e:	cmc    
  41222f:	arpl   WORD PTR es:[esi-0x328c2520],bx
  412236:	cmc    
  412237:	push   ss
  412238:	repz jmp 0xcef2313b
  41223e:	mov    ebx,0xf5cea10d
  412243:	inc    BYTE PTR [eax]
	...
  412255:	add    BYTE PTR [eax],al
  412257:	add    BYTE PTR [edx],bh
  412259:	sahf   
  41225a:	loopne 0x412256
  41225c:	je     0x41222b
  41225e:	cmc    
  41225f:	out    dx,al
  412260:	jmp    0x7bce:0xa8e6fded
  412267:	stc    
  412268:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41226a:	xor    al,0xd6
  41226c:	push   0x70f97bce
  412271:	or     cl,dl
  412273:	mov    esi,0x34f5ce68
  412278:	call   0x68f89d32
  41227d:	into   
  41227e:	cmc    
  41227f:	je     0x4122c8
  412281:	(bad)  
  412282:	cmc    
  412283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412284:	aaa    
  412285:	mov    bl,0x36
  412287:	sahf   
  412288:	xor    dh,cl
  41228a:	mov    ebx,0xf5ce3099
  41228f:	or     DWORD PTR [eax-0x71],0x82886f5
  412296:	in     eax,0x76
  412298:	xor    dh,cl
  41229a:	loopne 0x412241
  41229c:	imul   ecx,ebp,0xb5ea6ef5
  4122a2:	std    
  4122a3:	data16 sub BYTE PTR [ebp-0x310ee039],dh
  4122aa:	cmc    
  4122ab:	pushf  
  4122ac:	jecxz  0x412274
  4122ae:	cmc    
  4122af:	dec    esi
  4122b0:	xlat   BYTE PTR ds:[ebx]
  4122b1:	pop    es
  4122b2:	aaa    
  4122b3:	add    dl,cl
  4122b5:	cmp    dh,dh
  4122b7:	mov    ch,0xd5
  4122b9:	inc    eax
  4122ba:	idiv   bh
	...
  4122d0:	int    0x2c
  4122d2:	xor    al,0xff
  4122d4:	stos   BYTE PTR es:[edi],al
  4122d5:	cmp    BYTE PTR [eax+edi*8+0x7c],cl
  4122d9:	or     ah,dh
  4122db:	jmp    FWORD PTR [edx-0x720383c8]
  4122e1:	nop
  4122e2:	pop    ds
  4122e3:	add    BYTE PTR ds:0x250cc78a,ah
  4122e9:	fiadd  WORD PTR [edx-0xe724914]
  4122ef:	push   0x35
  4122f1:	jmp    0x412335
  4122f3:	jmp    DWORD PTR [eax+0x6ebdedc9]
  4122f9:	xor    esi,esi
  4122fb:	mov    DWORD PTR [eax-0x128a09cc],esi
  412301:	mov    eax,0x98a46996
  412306:	cmc    
  412307:	xor    eax,0x48df8f
  41230c:	mov    ebp,0x1afff46b
  412311:	xor    DWORD PTR [eax+ecx*1+0x4d],edi
  412315:	adc    DWORD PTR [ecx+0x41],esp
  412318:	in     eax,0xb8
  41231a:	pop    es
  41231b:	add    BYTE PTR [ebp+0x18e2ee10],dh
  412321:	xor    esi,esi
  412323:	jmp    DWORD PTR [eax-0x428a09cc]
  412329:	cmp    ch,al
  41232b:	cmp    ebp,DWORD PTR [edx]
  41232d:	xor    eax,eax
  41232f:	ret    0x90b1
  412332:	pop    ebx
  412333:	mov    eax,DWORD PTR [eax]
	...
  412345:	add    BYTE PTR [eax],al
  412347:	add    BYTE PTR [ecx],bl
  412349:	adc    eax,0x90bffcca
  41234e:	bound  ecx,QWORD PTR [edx+ebp*8-0x13]
  412352:	or     eax,0x16e98ce8
  412357:	(bad)  
  412358:	jnp    0x41238f
  41235a:	mov    edi,0x9bde4fb
  41235f:	out    dx,eax
  412360:	sub    ah,dh
  412362:	dec    edi
  412363:	push   0xe1bdcd
  412368:	out    0xfc,al
  41236a:	or     edi,edi
  41236c:	fld    st(5)
  41236e:	popa   
  41236f:	pop    esi
  412370:	mov    bl,0xaa
  412372:	imul   edi,esi,0x7469a1b9
  412378:	test   BYTE PTR [ebp-0x6cccc591],dl
  41237e:	inc    ebx
  41237f:	rcl    DWORD PTR [eax+0x308ab0bd],0x3d
  412386:	inc    eax
  412387:	iret   
  412388:	and    edi,DWORD PTR [ebx-0x4e367396]
  41238e:	mov    ecx,0x6ab981fe
  412393:	je     0x412329
  412395:	aad    0x38
  412397:	sub    cl,BYTE PTR [ebp+edi*4+0x3883c006]
  41239e:	lock add DWORD PTR [ebp+edi*4-0x421bbbbe],ecx
  4123a6:	or     DWORD PTR [eax],eax
  4123a8:	mov    edx,?
  4123aa:	shl    bl,0x0
	...
  4123bd:	add    BYTE PTR [eax],al
  4123bf:	add    bl,dl
  4123c1:	mov    edx,0xbd360009
  4123c6:	jecxz  0x4123c7
  4123c8:	xor    eax,0x8ffe3bd
  4123cd:	jno    0x41241f
  4123cf:	dec    edi
  4123d0:	add    DWORD PTR [ecx],edi
  4123d2:	pop    ebp
  4123d3:	imul   BYTE PTR [ebx+0x19feb94a]
  4123d9:	inc    ebp
  4123da:	push   0x74
  4123dc:	cwde   
  4123dd:	adc    eax,0x948c286b
  4123e2:	fisttp WORD PTR [esi]
  4123e4:	dec    esp
  4123e5:	inc    eax
  4123e6:	in     al,dx
  4123e7:	ins    BYTE PTR es:[edi],dx
  4123e8:	pop    ebx
  4123e9:	xchg   ebp,eax
  4123ea:	fild   WORD PTR [ebx]
  4123ec:	in     al,0xa2
  4123ee:	test   al,0xc4
  4123f0:	jae    0x4123bc
  4123f2:	mov    ah,0xf
  4123f4:	je     0x41245a
  4123f6:	mov    al,ds:0x6a646262
  4123fb:	xor    ecx,DWORD PTR [eax]
  4123fd:	adc    DWORD PTR [edx+ebx*2],edi
  412400:	push   edx
  412401:	retf   
  412402:	scas   eax,DWORD PTR es:[edi]
  412403:	mov    ch,0x33
  412405:	push   esp
  412406:	mov    al,ds:0x651d4262
  41240b:	cmp    eax,DWORD PTR [edx-0x35]
  41240e:	push   es
  41240f:	imul   ebx,DWORD PTR [ecx],0xffffff89
  412412:	push   cs
  412413:	bound  esi,QWORD PTR [ebp-0x49d4686c]
  412419:	push   ebp
  41241a:	fbld   TBYTE PTR [edx-0x20]
  41241d:	jmp    0x41241d
  41241f:	popa   
  412420:	adc    cl,bl
  412422:	push   esp
  412423:	or     al,0x0
	...
  412435:	add    BYTE PTR [eax],al
  412437:	add    ah,dh
  412439:	sub    al,0x20
  41243b:	popa   
  41243c:	add    bl,BYTE PTR ds:0xcb025465
  412442:	(bad)  
  412443:	out    dx,al
  412444:	repz xor cl,BYTE PTR [esi]
  412447:	out    dx,al
  412448:	dec    esp
  412449:	xchg   esp,eax
  41244a:	mov    dh,0x97
  41244c:	mov    ebx,0xda61bec2
  412451:	inc    eax
  412452:	out    0x6b,eax
  412454:	push   ecx
  412455:	push   esp
  412456:	scas   al,BYTE PTR es:[edi]
  412457:	popa   
  412458:	adc    al,0x11
  41245a:	test   BYTE PTR [ecx-0x3e],bl
  41245d:	retf   0x409
  412460:	and    al,0x60
  412462:	or     ebx,eax
  412464:	mov    bl,0xc9
  412466:	xor    al,0x3c
  412468:	mov    ds:0x186176ca,al
  41246d:	pushf  
  41246e:	or     BYTE PTR [ecx+0x6ef58ab1],al
  412474:	pop    es
  412475:	adc    cl,ah
  412477:	pop    esi
  412478:	in     eax,dx
  412479:	retf   0x6483
  41247c:	int3   
  41247d:	ret    0x56f5
  412480:	inc    eax
  412481:	xor    ah,BYTE PTR [ebx-0x3d]
  412484:	dec    esi
  412485:	retf   0x7cf6
  412488:	test   al,0xc2
  41248a:	cmc    
  41248b:	ds in  eax,dx
  41248d:	inc    eax
  41248e:	add    BYTE PTR [ecx+0x51],al
  412491:	mov    dh,ch
  412493:	cs pop es
  412495:	adc    ebp,ebp
  412497:	push   ds
  412498:	lods   eax,DWORD PTR ds:[esi]
  412499:	retf   0xe962
	...
  4124b0:	aaa    
  4124b1:	adc    al,0x63
  4124b3:	test   al,0x8f
  4124b5:	leave  
  4124b6:	mov    ebx,0xf5cad531
  4124bb:	push   es
  4124bc:	inc    ebx
  4124bd:	xchg   edx,eax
  4124be:	loopne 0x412491
  4124c0:	dec    edi
  4124c1:	retf   
  4124c2:	cmc    
  4124c3:	pusha  
  4124c4:	adc    ebp,edx
  4124c6:	std    
  4124c7:	out    dx,al
  4124c8:	lods   al,BYTE PTR ds:[esi]
  4124c9:	sbb    BYTE PTR [ecx+edi*4+0x39f5ca64],cl
  4124d0:	lock sub esp,DWORD PTR [ebx+0x28]
  4124d4:	nop
  4124d5:	leave  
  4124d6:	mov    ebx,0xf5ca54b1
  4124db:	mov    dl,0x91
  4124de:	loopne 0x4124d1
  4124e0:	iret   
  4124e1:	retf   0x60f5
  4124e4:	adc    ah,dh
  4124e6:	std    
  4124e7:	scas   al,BYTE PTR es:[edi]
  4124e8:	ins    BYTE PTR es:[edi],dx
  4124e9:	push   ss
  4124ea:	mov    ah,0x99
  4124ec:	fs retf 0xe9f5
  4124f0:	fstp   TBYTE PTR [esi]
  4124f2:	mov    DWORD PTR [ebx+ebp*1-0x3e],edx
  4124f6:	cmc    
  4124f7:	mov    cs,WORD PTR [edi+0x36006a40]
  4124fd:	sub    ch,dh
  4124ff:	mul    DWORD PTR [edx]
  412501:	xor    al,0xf5
  412503:	jae    0x412581
  412505:	mov    eax,0xf312fff5
  41250a:	div    BYTE PTR [ebp-0x7b]
  41250d:	cmp    eax,0x34e2397a
  412512:	div    BYTE PTR [ebp+0x0]
	...
  412528:	aad    0x6c
  41252a:	idiv   bh
  41252c:	ret    0x5e2
  41252f:	call   0x36d3ee
  412534:	mov    ds:0xa2f7e222,al
  412539:	xor    al,0xf6
  41253b:	jne    0x412572
  41253d:	cmp    eax,0x347239b0
  412542:	div    BYTE PTR [ebp-0x99363]
  412548:	mov    ds:0xcee805e2,al
  41254d:	scas   al,BYTE PTR es:[edi]
  41254e:	cmc    
  41254f:	call   DWORD PTR [edx+0x22f7d222]
  412555:	imul   esi,esi,0xf66c89b5
  41255b:	jmp    DWORD PTR [edx]
  41255d:	fild   WORD PTR ds:0xf5a75ee8
  412563:	jmp    edx
  412565:	sub    dl,dh
  412567:	mul    edx
  412569:	push   0x3cf575f6
  41256e:	cmp    BYTE PTR [ecx],0xd2
  412571:	push   0x6105bd8a
  412576:	idiv   bh
  412578:	in     eax,0xe0
  41257a:	sub    BYTE PTR [eax-0x1c],ch
  41257d:	xchg   esp,eax
  41257e:	in     eax,0xbe
  412580:	repnz jmp 0xfff5:0xa7c4e805
  412588:	mov    WORD PTR [edx],fs
  41258a:	nop
  41258b:	iret   
	...
  4125a0:	mov    ebx,0xe1fe5619
  4125a5:	es pop esi
  4125a7:	(bad)  
  4125a8:	mov    ds:0xa40fcf49,eax
  4125ad:	or     eax,0x3993ff15
  4125b2:	iret   
  4125b3:	jnp    0x84375ae2
  4125b9:	addr16 push ebp
  4125bb:	je     0x412541
  4125bd:	push   ebp
  4125be:	and    al,0xfe
  4125c0:	jae    0x412619
  4125c2:	push   ebp
  4125c3:	mov    ah,0x44
  4125c5:	xchg   DWORD PTR [ebp-0x2],edx
  4125c8:	je     0x412598
  4125ca:	adc    eax,0x8f7f5bff
  4125cf:	out    dx,eax
  4125d0:	pop    ebx
  4125d1:	ja     0x412628
  4125d3:	out    0x71,eax
  4125d5:	mov    cl,0x56
  4125d7:	inc    BYTE PTR [ebx+0x61]
  4125da:	js     0x4125d2
  4125dc:	cmp    ebx,DWORD PTR [edi-0x698fe69c]
  4125e2:	push   ebp
  4125e3:	(bad)  
  4125e4:	loope  0x41258b
  4125e6:	pop    ebp
  4125e7:	(bad)  
  4125e8:	and    esp,DWORD PTR [esi-0x40e4c3fb]
  4125ee:	push   esi
  4125ef:	mov    ah,0x28
  4125f1:	mov    edi,0xb9f4fe56
  4125f6:	adc    eax,0x90e703ff
  4125fb:	fild   WORD PTR [ebx]
  4125fd:	fist   WORD PTR [esi-0x19]
  412600:	cmc    
  412601:	mov    ds:0xfe55,al
	...
  412616:	add    BYTE PTR [eax],al
  412618:	jmp    0x412662
  41261a:	cmp    eax,0x6206e3f6
  41261f:	in     eax,dx
  412620:	xchg   edi,eax
  412621:	(bad)  
  412622:	push   esi
  412623:	dec    BYTE PTR [ecx+0x5]
  412626:	gs stc 
  412628:	leave  
  412629:	xchg   esp,eax
  41262a:	scas   al,BYTE PTR es:[edi]
  41262b:	pop    esi
  41262c:	ret    0x9341
  41262f:	imul   eax,DWORD PTR [ebp-0x3afc2084],0xffffffd2
  412636:	rol    DWORD PTR [ebx],cl
  412638:	inc    ecx
  412639:	sbb    ebx,DWORD PTR [edx+eax*4+0x419c8cf]
  412640:	es pop ecx
  412642:	jle    0x41261c
  412644:	mov    edi,DWORD PTR [edi+ebx*8+0x78c78b1c]
  41264b:	enter  0xc787,0xdc
  41264f:	or     esp,esp
  412651:	cwde   
  412652:	leave  
  412653:	les    esi,FWORD PTR [ebx-0x3a]
  412656:	sbb    al,0x1a
  412658:	aad    0x55
  41265a:	fild   QWORD PTR [ebx+0x2]
  41265d:	leave  
  41265e:	ss pop esi
  412660:	pop    edx
  412661:	inc    ecx
  412662:	out    0xeb,eax
  412664:	xchg   DWORD PTR [edx],edi
  412666:	mov    al,ds:0xdf92b403
  41266b:	add    ecx,DWORD PTR [esp+edi*4]
  41266e:	fs pusha 
  412670:	cmp    al,bh
  412672:	push   ds
  412673:	fdiv   DWORD PTR [edi]
  412675:	(bad)  
  412676:	pushf  
  412677:	or     esi,DWORD PTR [ebx+eiz*4]
  41267a:	enter  0x5e,0x0
	...
  41268e:	add    BYTE PTR [eax],al
  412690:	and    bl,ch
  412692:	and    DWORD PTR [edi],eax
  412694:	mov    WORD PTR [ecx+0x6a],fs
  412697:	outs   dx,DWORD PTR ds:[esi]
  412698:	push   cs
  412699:	shl    bl,1
  41269b:	mov    ah,0x62
  41269d:	cmp    bl,bh
  41269f:	jmp    0xc9dedf5
  4126a4:	in     al,0x0
  4126a6:	sbb    BYTE PTR [ebp-0xe],bl
  4126a9:	sbb    al,0x2d
  4126ab:	pusha  
  4126ac:	push   ss
  4126ad:	or     DWORD PTR [ebp+0x7a944ccc],0x85bce1f
  4126b7:	sub    BYTE PTR [eax-0x1c16c9ec],cl
  4126bd:	dec    edi
  4126be:	pusha  
  4126bf:	dec    esi
  4126c0:	mov    dh,0x53
  4126c2:	or     BYTE PTR [esi],dh
  4126c4:	sub    ch,ah
  4126c6:	sub    eax,0xc89b8fe9
  4126cb:	adc    eax,0xcfe060a9
  4126d0:	retf   0xf5c5
  4126d3:	sbb    DWORD PTR [eax-0xd790a3a],ebp
  4126d9:	cs mov eax,0x45c64f03
  4126df:	pop    bx
  4126e1:	mov    fs,eax
  4126e3:	sbb    esp,DWORD PTR [edi+eax*8-0xb]
  4126e7:	inc    ecx
  4126e8:	xchg   ebp,eax
  4126e9:	mov    ebp,esi
  4126eb:	dec    esi
  4126ec:	cmc    
  4126ed:	xchg   esp,eax
  4126ee:	dec    esi
  4126ef:	imul   eax,DWORD PTR [edx+0x437b94],0x0
	...
  412705:	add    BYTE PTR [eax],al
  412707:	add    BYTE PTR [edx-0x36],dl
  41270a:	cmp    DWORD PTR [ecx],ebp
  41270c:	test   esi,0xc3e92ef5
  412712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412713:	loope  0x41269d
  412715:	aas    
  412716:	mov    cl,0x1e
  412718:	arpl   dx,cx
  41271a:	cmc    
  41271b:	pushf  
  41271c:	xchg   DWORD PTR [ebp+ebx*4+0x55c6c8d1],edi
  412723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412724:	(bad)  
  412725:	ror    DWORD PTR [ecx+ebp*8],cl
  412728:	loop   0x412744
  41272a:	in     eax,0x6a
  41272c:	(bad)  
  41272d:	leave  
  41272e:	(bad)  
  41272f:	jmp    0x5d367e29
  412734:	nop
  412735:	mov    esp,0xc659212f
  41273a:	jg     0x412768
  41273c:	ins    BYTE PTR es:[edi],dx
  41273d:	cmp    ecx,DWORD PTR [eax]
  41273f:	inc    ecx
  412740:	stos   DWORD PTR es:[edi],eax
  412741:	cmp    eax,DWORD PTR [edi+0x0]
  412744:	cmc    
  412745:	mov    ecx,0x90a46ab4
  41274a:	cmc    
  41274b:	xor    eax,0x48dadf
  412750:	int    0x68
  412752:	xor    al,0xff
  412754:	jmp    0x6e00:0x8c74c89c
  41275b:	add    BYTE PTR [ebp+0x2b68b338],ah
  412761:	mov    ebx,0x67850048
  412766:	jl     0x412770
  412768:	std    
  412769:	push   edx
  41276a:	push   0xffffffff
	...
  412780:	sbb    bh,BYTE PTR [ecx]
  412782:	mov    edi,0x6d68fa3a
  412787:	add    BYTE PTR [ebp+0x38],dh
  41278a:	mov    bl,0x68
  41278c:	retf   
  41278d:	mov    ebx,0x2e4d0048
  412792:	pop    edi
  412793:	inc    ecx
  412794:	jne    0x4127fe
  412796:	jl     0x4127a0
  412798:	mov    ebp,0x9aff6a61
  41279d:	push   0xde9afc7c
  4127a2:	or     eax,0xf5a893e8
  4127a7:	(bad)  
  4127a8:	jl     0x4127fd
  4127aa:	or     DWORD PTR [eax],eax
  4127ac:	add    BYTE PTR [edx+eiz*8],bl
  4127af:	and    DWORD PTR [ecx+0x65],0x5b
  4127b3:	push   edi
  4127b4:	setno  BYTE PTR [edx+0x50]
  4127b8:	mov    bl,dh
  4127ba:	or     eax,0xf5a05de8
  4127bf:	jmp    FWORD PTR [esi+ecx*8+0x27408bf1]
  4127c6:	dec    esi
  4127c7:	inc    ecx
  4127c8:	cmc    
  4127c9:	adc    eax,0xcfbdc235
  4127ce:	cmc    
  4127cf:	jg     0x41275d
  4127d1:	sahf   
  4127d2:	or     al,0x74
  4127d4:	push   ecx
  4127d5:	push   ebx
  4127d6:	dec    edi
  4127d7:	imul   ecx,DWORD PTR [ebp-0x45],0x8cf1e7ba
  4127de:	or     al,0x0
  4127e0:	xchg   ebx,edi
  4127e2:	fcomp  DWORD PTR [esi]
	...
  4127f8:	(bad)  
  4127fa:	adc    eax,DWORD PTR [ebx+eax*8-0x13]
  4127fe:	mov    esp,0x62bb8c67
  412803:	mov    ebp,0x40e6b624
  412808:	mov    WORD PTR [ebx+0x23947451],cs
  41280e:	enter  0x9b62,0x45
  412812:	fs dec ebp
  412814:	push   esi
  412815:	ds push ecx
  412817:	jmp    0xe08c:0x3d8c7b8d
  41281e:	push   ebx
  41281f:	inc    ebp
  412820:	js     0x4127c1
  412822:	dec    esp
  412823:	mov    eax,0xfe516b73
  412828:	pop    esi
  412829:	inc    esp
  41282a:	adc    al,0x7
  41282c:	fst    DWORD PTR [esi]
  41282e:	push   edx
  41282f:	je     0x412889
  412831:	adc    edi,0x7
  412834:	sbb    BYTE PTR fs:[edx],bl
  412837:	dec    DWORD PTR [ebx+0x13]
  41283a:	mov    al,0xc8
  41283c:	dec    esi
  41283d:	mov    dl,0x9
  41283f:	push   ebp
  412840:	pop    es
  412841:	xchg   edx,eax
  412842:	(bad)  
  412843:	ret    
  412844:	xor    BYTE PTR [ebx+edi*4],al
  412847:	imul   ecx,DWORD PTR [edi+edx*1-0x3a660143],0xc2634961
  412852:	push   edx
  412853:	mov    cl,cl
  412855:	leave  
  412856:	xchg   BYTE PTR [edx+ecx*2],dh
  412859:	test   ah,0xff
	...
  412870:	push   ss
  412871:	xchg   ebp,eax
  412872:	sub    al,0x46
  412874:	push   ebx
  412875:	push   ebp
  412876:	fild   WORD PTR [ebx-0x3eac6b4e]
  41287c:	jae    0x412825
  41287e:	dec    edx
  41287f:	(bad)
  412882:	xlat   BYTE PTR ds:[ebx]
  412883:	loop   0x412836
  412885:	xchg   esp,eax
  412886:	fisttp WORD PTR [esi]
  412888:	int3   
  412889:	dec    eax
  41288a:	fidiv  WORD PTR [ecx+0x5b22ffb3]
  412890:	ret    0x1764
  412893:	add    al,0x8c
  412895:	mov    bl,0x55
  412897:	jmp    0x412901
  412899:	das    
  41289a:	and    BYTE PTR [esp+edi*1],al
  41289d:	ret    
  41289e:	sbb    al,0xc
  4128a0:	mov    ah,0xdb
  4128a2:	add    DWORD PTR [ebx-0x66],ebx
  4128a5:	lods   al,BYTE PTR ds:[esi]
  4128a6:	(bad)  
  4128a7:	sbb    al,0x93
  4128a9:	ret    
  4128aa:	mov    al,BYTE PTR [edx+edx*8]
  4128ad:	adc    al,0xa6
  4128af:	add    edi,ecx
  4128b1:	mov    esi,0xd4be57a5
  4128b6:	test   al,0x5a
  4128b8:	jb     0x41287d
  4128ba:	pop    esi
  4128bb:	push   ebp
  4128bc:	cmp    DWORD PTR [esi+ebp*8-0x30],edi
  4128c0:	es ret 
  4128c2:	mov    ah,0x57
  4128c4:	pop    edx
  4128c5:	dec    ecx
  4128c6:	imul   DWORD PTR [ebx-0x59]
  4128c9:	mov    edi,DWORD PTR [esi]
  4128cb:	pop    edx
  4128cc:	jmp    0xb494:0x8f452862
  4128d3:	mov    es,WORD PTR [eax]
	...
  4128e5:	add    BYTE PTR [eax],al
  4128e7:	add    BYTE PTR [edi],ah
  4128e9:	pop    ss
  4128ea:	sub    al,0x57
  4128ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128ed:	xchg   esp,eax
  4128ee:	mov    DWORD PTR [ebp+0x6be7492a],esi
  4128f4:	push   ecx
  4128f5:	mov    cl,BYTE PTR [esi]
  4128f7:	pop    edx
  4128f8:	add    al,0x59
  4128fa:	repz jmp 0xc38f:0xa8082f63
  412902:	jnp    0x4128e5
  412904:	ja     0x412957
  412906:	call   0x7c037ef1
  41290b:	fst    QWORD PTR [ebp+0x48]
  41290e:	add    cl,al
  412910:	inc    edi
  412911:	mov    ebp,esi
  412913:	into   
  412914:	push   edi
  412915:	aad    0xc
  412917:	jmp    0x6b263746
  41291c:	dec    esp
  41291d:	jecxz  0x41297d
  41291f:	mov    dh,0xdb
  412921:	mov    fs,eax
  412923:	and    al,0xa6
  412925:	ret    
  412926:	cmc    
  412927:	repnz dec edi
  412929:	dec    eax
  41292a:	or     edi,DWORD PTR [edi]
  41292c:	inc    edi
  41292d:	aad    0x0
  41292f:	jmp    0x3a398146
  412934:	inc    ebp
  412935:	dec    eax
  412936:	add    al,0x91
  412938:	cmp    eax,0x817ef581
  41293d:	aam    0x5
  41293f:	ins    DWORD PTR es:[edi],dx
  412940:	cwde   
  412941:	xchg   ebx,eax
  412942:	or     cl,ch
  412944:	in     al,0x48
  412946:	hlt    
  412947:	push   ecx
  412948:	cmp    bh,BYTE PTR [ebp-0xb]
  41294b:	pop    esi
	...
  412960:	pop    es
  412961:	pop    ecx
  412962:	in     al,0x56
  412964:	pop    ebx
  412965:	mov    esi,0xc2ebd4f5
  41296a:	jnp    0x4129ad
  41296c:	call   0xb57f58b2
  412971:	push   cs
  412972:	jl     0x4129b9
  412974:	mov    bh,0xf1
  412976:	or     cl,ch
  412978:	(bad)  
  412979:	sub    al,0xb5
  41297b:	xchg   edx,eax
  41297c:	dec    esi
  41297d:	ret    0x115b
  412980:	adc    edi,DWORD PTR [ecx+0x8]
  412983:	jmp    0xe4bcfe20
  412988:	mov    dh,0xf8
  41298a:	or     BYTE PTR [eax],al
  41298c:	and    eax,0xfdf08196
  412991:	sbb    al,0x63
  412993:	inc    ecx
  412994:	cmc    
  412995:	sub    eax,0x95f523d5
  41299a:	or     eax,esi
  41299c:	jl     0x412970
  41299e:	in     eax,dx
  41299f:	push   0x48b12a
  4129a4:	stos   DWORD PTR es:[edi],eax
  4129a5:	xor    BYTE PTR [ebp+0x25],dh
  4129a8:	cmc    
  4129a9:	xchg   ebp,eax
  4129aa:	add    eax,eax
  4129ac:	cwde   
  4129ad:	shl    eax,0x80
  4129b0:	in     eax,0x95
  4129b2:	or     BYTE PTR [edx-0xaac1b],cl
  4129b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b9:	or     dh,bh
  4129bb:	jne    0x4129da
  4129bd:	cs mov ebp,0x195a523
  4129c3:	rol    BYTE PTR [eax],0x0
	...
  4129d6:	add    BYTE PTR [eax],al
  4129d8:	mov    DWORD PTR [eax+0x5d094580],edi
  4129de:	jl     0x4129c8
  4129e0:	std    
  4129e1:	inc    esp
  4129e2:	dec    ebp
  4129e3:	call   DWORD PTR [edx]
  4129e5:	push   cs
  4129e6:	dec    ebp
  4129e7:	loopne 0x4129eb
  4129e9:	shr    ecx,cl
  4129eb:	(bad)  
  4129ec:	js     0x412a23
  4129ee:	in     eax,dx
  4129ef:	jns    0x412a2d
  4129f1:	pop    esp
  4129f2:	test   BYTE PTR [ebx],0xa5
  4129f5:	shl    DWORD PTR [edx],1
  4129f7:	rcl    DWORD PTR [eax+0x61],1
  4129fa:	pop    edi
  4129fb:	add    al,al
  4129fd:	add    ch,dl
  4129ff:	push   eax
  412a00:	rcl    dl,cl
  412a02:	aad    0xe8
  412a04:	cmp    BYTE PTR [edx+0x552efff6],0x79
  412a0b:	es dec ebp
  412a0d:	xchg   esi,eax
  412a0e:	or     bh,ch
  412a10:	mov    bl,0x5c
  412a12:	jl     0x412a1c
  412a14:	popf   
  412a15:	add    eax,0xaa8cff3d
  412a1a:	push   eax
  412a1b:	je     0x412a51
  412a1d:	xchg   edx,eax
  412a1e:	mov    BYTE PTR [edi],0x24
  412a21:	push   edx
  412a22:	push   es
  412a23:	call   DWORD PTR [ebx]
  412a25:	ret    0xe3c3
  412a28:	or     eax,DWORD PTR [eax+0x69]
  412a2b:	(bad)  
  412a2c:	jns    0x4129e1
  412a2e:	popa   
  412a2f:	ins    BYTE PTR es:[edi],dx
  412a30:	sar    DWORD PTR [edx-0x348601a3],0x64
  412a37:	jge    0x4129dd
  412a39:	jmp    0x0:0x595d
	...
  412a50:	inc    esp
  412a51:	xor    edi,esp
  412a53:	jg     0x4129ef
  412a55:	stos   DWORD PTR es:[edi],eax
  412a56:	push   cs
  412a57:	test   DWORD PTR [ebx+0x2],ecx
  412a5a:	pop    esi
  412a5b:	(bad)  
  412a5c:	xor    al,0xad
  412a5e:	or     edi,ebp
  412a60:	add    dh,dl
  412a62:	xlat   BYTE PTR ds:[ebx]
  412a63:	pop    es
  412a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a65:	mov    edi,0x21b3ff18
  412a6a:	fdivr  st,st(3)
  412a6c:	stos   DWORD PTR es:[edi],eax
  412a6d:	lahf   
  412a6e:	pusha  
  412a6f:	(bad)  
  412a70:	sbb    DWORD PTR [ebx+0x1a613c61],esi
  412a76:	pop    esi
  412a77:	(bad)  
  412a78:	sbb    DWORD PTR [edi],ecx
  412a7a:	gs dec ebp
  412a7c:	les    eax,FWORD PTR [esi+0x5d]
  412a7f:	mov    ecx,cs
  412a81:	cmp    eax,0x77f9e7bc
  412a86:	pop    ebp
  412a87:	(bad)  
  412a88:	scas   al,BYTE PTR es:[di]
  412a8a:	mov    ebx,0x9b64ec8
  412a8f:	push   ebp
  412a90:	pop    ss
  412a91:	or     BYTE PTR [ecx-0x38b68f3d],0xfb
  412a98:	mov    esp,0x4b0bd77e
  412a9d:	add    DWORD PTR [edx],eax
  412a9f:	call   0x4dc48b
  412aa4:	xchg   DWORD PTR [edi+ebx*1-0x1f92f6f9],edx
  412aab:	add    ecx,DWORD PTR [edx+ebp*1+0x2c06ebdf]
  412ab2:	mov    al,ds:0x3
	...
  412ac7:	add    BYTE PTR [ebx],bl
  412ac9:	dec    edx
  412aca:	sti    
  412acb:	push   esi
  412acc:	cwde   
  412acd:	mov    WORD PTR [edi],ss
  412acf:	pop    ds
  412ad0:	(bad)  
  412ad1:	mov    edi,0xbc488cfe
  412ad6:	mov    DWORD PTR [ebx],eax
  412ad8:	fs hlt 
  412ada:	pop    edx
  412adb:	(bad)
  412ade:	pop    esp
  412adf:	or     bl,ch
  412ae1:	dec    ecx
  412ae2:	out    0x6b,eax
  412ae4:	jge    0x412b61
  412ae6:	(bad)  
  412ae7:	push   esi
  412ae8:	add    al,0x5a
  412aea:	mov    bl,0x88
  412aec:	dec    eax
  412aed:	mov    eax,0x2bf2ec0f
  412af2:	and    BYTE PTR [ebx+eax*8],al
  412af5:	dec    ecx
  412af6:	rcl    DWORD PTR [esi+0x40],cl
  412af9:	mov    WORD PTR [edi-0x69408aa6],ss
  412aff:	mov    WORD PTR [eax-0x3c],ss
  412b02:	or     DWORD PTR [esp+esi*1],eax
  412b05:	out    dx,al
  412b06:	or     al,ch
  412b08:	fwait
  412b09:	mov    esi,0x499307f4
  412b0e:	imul   DWORD PTR [ebx+0x71]
  412b11:	jp     0x412b91
  412b13:	push   esi
  412b14:	adc    al,0x59
  412b16:	jae    0x412b01
  412b18:	jnp    0x412b51
  412b1a:	xchg   edx,eax
  412b1b:	jmp    0xbf97:0xd05694cc
  412b22:	aam    0xb
  412b24:	je     0x412b0b
  412b26:	sbb    DWORD PTR [edi+0x5a],edx
  412b29:	or     eax,0x6ba5
	...
  412b3e:	add    BYTE PTR [eax],al
  412b40:	push   cs
  412b41:	inc    ecx
  412b42:	das    
  412b43:	add    ebx,DWORD PTR [ebx-0x7095f6e8]
  412b49:	xchg   esp,eax
  412b4a:	or     BYTE PTR [edx+0x54],ch
  412b4d:	mov    bl,0x8
  412b4f:	popf   
  412b50:	push   esp
  412b51:	mov    esi,0x48c2057b
  412b56:	clc    
  412b57:	add    DWORD PTR [edx+0x57],ecx
  412b5a:	cmc    
  412b5b:	push   cs
  412b5c:	xchg   ah,dl
  412b5e:	jl     0x412af7
  412b60:	pop    eax
  412b61:	xor    ah,ch
  412b63:	xchg   ebx,eax
  412b64:	(bad)  
  412b65:	adc    DWORD PTR [ebp+ecx*1+0x3f],ecx
  412b69:	mov    esi,0x9266f97b
  412b6e:	addr16 out 0x59,al
  412b71:	mov    cl,al
  412b73:	push   ebp
  412b74:	daa    
  412b75:	adc    dh,BYTE PTR [ecx+edx*8-0x78]
  412b79:	dec    eax
  412b7a:	pop    ecx
  412b7b:	push   0xffffffc3
  412b7d:	ret    0x3d08
  412b80:	retf   
  412b81:	adc    DWORD PTR [ecx+edi*4-0x70],esi
  412b85:	dec    eax
  412b86:	dec    ebp
  412b87:	inc    ecx
  412b88:	mov    BYTE PTR [ebp+eiz*8+0x1848616f],dl
  412b8f:	xchg   ecx,eax
  412b90:	mov    esp,0x419ef582
  412b95:	dec    eax
  412b96:	lock xchg esi,eax
  412b98:	ror    DWORD PTR [esi-0x4083fd20],cl
  412b9e:	cmc    
  412b9f:	xchg   bl,al
  412ba1:	ret    0xf4f5
	...
  412bb8:	jg     0x412b70
  412bba:	push   0xf5bed8bd
  412bbf:	hlt    
  412bc0:	fstp   TBYTE PTR [esi+0x48d9597b]
  412bc6:	sbb    BYTE PTR [ecx-0x76],dl
  412bc9:	mov    ch,dh
  412bcb:	push   esi
  412bcc:	mov    ecx,0x4b4ee448
  412bd1:	mov    fs,eax
  412bd3:	add    BYTE PTR [edx],ah
  412bd5:	mov    ?,ebp
  412bd7:	dec    DWORD PTR [edx+0xffedcd]
  412bdd:	ret    0x3ced
  412be0:	inc    ecx
  412be1:	imul   esi,esi,0xed5a10ff
  412be7:	and    DWORD PTR [edx+0x69],eax
  412bea:	idiv   bh
  412bec:	add    BYTE PTR [esi-0x13],cl
  412bef:	sbb    DWORD PTR [edx+0x69],eax
  412bf2:	idiv   bh
  412bf4:	nop
  412bf5:	popa   
  412bf6:	in     eax,dx
  412bf7:	adc    DWORD PTR [edx+0x69],eax
  412bfa:	idiv   bh
  412bfc:	xor    BYTE PTR ds:0x694209ed,0xf6
  412c03:	call   DWORD PTR [eax+0x30]
  412c06:	in     eax,dx
  412c07:	add    DWORD PTR [edx+0x40fff667],eax
  412c0d:	pop    esp
  412c0e:	in     eax,dx
  412c0f:	and    eax,0xc9089886
  412c14:	daa    
  412c15:	xchg   esi,eax
  412c16:	or     BYTE PTR [ebp+0x3e],dl
  412c19:	xor    eax,0xc488
	...
  412c2e:	add    BYTE PTR [eax],al
  412c30:	int    0x50
  412c32:	idiv   bh
  412c34:	pop    eax
  412c35:	(bad)  
  412c36:	icebp  
  412c37:	push   eax
  412c38:	jmp    0xe090:0x80ff01ce
  412c3f:	(bad)  
  412c41:	xchg   ecx,eax
  412c42:	or     BYTE PTR [ebx],cl
  412c44:	in     eax,0x98
  412c46:	mov    esp,DWORD PTR [ebp-0x38f76e5b]
  412c4c:	mov    al,0x60
  412c4e:	cmc    
  412c4f:	push   DWORD PTR [ebp-0x6f]
  412c52:	int    0x45
  412c54:	add    DWORD PTR [ecx+0xe],ebp
  412c57:	add    BYTE PTR [ebp-0x55],ah
  412c5a:	cmc    
  412c5b:	imul   esi,DWORD PTR [ebp+0x16],0x5e8cec8d
  412c62:	pop    esp
  412c63:	(bad)  
  412c64:	mov    esp,0xc98d09d1
  412c69:	jg     0x412c24
  412c6b:	mov    WORD PTR [ecx],ss
  412c6d:	xchg   DWORD PTR [esi+edi*8+0x43],eax
  412c71:	sbb    ebx,DWORD PTR [ebp+0x74]
  412c74:	xor    al,0x6e
  412c76:	(bad)  
  412c77:	sti    
  412c78:	and    al,0x71
  412c7a:	daa    
  412c7b:	add    BYTE PTR [edx+eax*8-0x6d718cb7],cl
  412c82:	rol    DWORD PTR [edx-0x1be4127],cl
  412c88:	adc    ebp,DWORD PTR [ebp+eax*8+0x51f80b04]
  412c8f:	jmp    0x0:0xe77637ce
	...
  412ca6:	add    BYTE PTR [eax],al
  412ca8:	add    ebp,DWORD PTR [esi+0x30014f59]
  412cae:	push   eax
  412caf:	imul   bl
  412cb1:	fnstsw WORD PTR [esi+edi*8+0x745ab759]
  412cb8:	test   bl,dl
  412cba:	mov    DWORD PTR [eax],edi
  412cbc:	rcl    ebp,cl
  412cbe:	cmc    
  412cbf:	mov    edi,0x8474ba40
  412cc4:	mov    esp,0x24fe59fd
  412cc9:	inc    ecx
  412cca:	aad    0x40
  412ccc:	mov    esi,?
  412cce:	(bad)  
  412ccf:	out    dx,eax
  412cd0:	mov    ds:0xbde75a1d,eax
  412cd5:	enter  0x9,0x87
  412cd9:	jmp    0x412cab
  412cdb:	or     eax,0xf65c7f93
  412ce0:	mov    edi,DWORD PTR [ebx]
  412ce2:	pop    ecx
  412ce3:	je     0x412c81
  412ce5:	adc    eax,0x2b7bfb31
  412cea:	pop    ecx
  412ceb:	mov    ah,0x7c
  412ced:	xchg   ebp,eax
  412cee:	push   esi
  412cef:	push   ebx
  412cf0:	push   0xffffffad
  412cf2:	lahf   
  412cf3:	sbb    DWORD PTR [ebx-0x44],esp
  412cf6:	pop    esi
  412cf7:	leave  
  412cf8:	arpl   WORD PTR [esi-0x43adad37],bp
  412cfe:	dec    esi
  412cff:	fld    DWORD PTR [edi-0x53]
  412d02:	xchg   ebx,eax
  412d03:	and    eax,0x4628948c
  412d08:	xchg   DWORD PTR [esp+ebx*4+0x7e],edx
	...
  412d1f:	add    BYTE PTR [edi],ah
  412d21:	sbb    BYTE PTR [eax+edx*2],ah
  412d24:	mov    ch,0x94
  412d26:	cdq    
  412d27:	mov    dh,0x22
  412d29:	inc    edx
  412d2a:	out    0x5b,eax
  412d2c:	mov    ebp,0x4530687
  412d31:	push   edx
  412d32:	or     edx,DWORD PTR [ebx-0x80]
  412d35:	mov    WORD PTR [edi-0x20aa8945],ss
  412d3b:	push   edx
  412d3c:	sar    BYTE PTR [esi-0x58],0xc4
  412d40:	repz mov bl,0xa5
  412d43:	push   eax
  412d44:	jmp    0x272c:0x8bd8d6bb
  412d4b:	fisttp WORD PTR [esp+edx*4+0x47]
  412d4f:	push   es
  412d50:	mov    WORD PTR [edi+ebx*2-0x494600a5],ss
  412d57:	push   edx
  412d58:	ret    0xe741
  412d5b:	fld    TBYTE PTR [edx]
  412d5d:	das    
  412d5e:	and    BYTE PTR [ebx+esi*4],al
  412d61:	sub    ecx,0x97944cbc
  412d67:	pop    ebp
  412d68:	mov    eax,ds:0x20529ebb
  412d6d:	mov    WORD PTR [edi],es
  412d6f:	jecxz  0x412d97
  412d71:	push   ebp
  412d72:	(bad)  
  412d74:	lea    edx,[edi+ebx*8+0x8dc6b83]
  412d7b:	ja     0x412d5b
  412d7d:	mov    edx,0xbac3f4f5
  412d82:	jnp    0x412d75
	...
  412d98:	(bad)  
  412d99:	jnp    0x412dd4
  412d9b:	pop    esi
  412d9c:	mov    esi,0x8fedcacc
  412da1:	popa   
  412da2:	cmp    DWORD PTR ds:0xd3f4d70a,0x3e5c2e8f
  412dac:	fs xchg ebx,eax
  412dae:	loopne 0x412dfd
  412db0:	mov    eax,ds:0x4460f5bb
  412db5:	mov    edi,0x544a3260
  412dba:	or     BYTE PTR [esi],bl
  412dbc:	inc    esp
  412dbd:	xchg   ebx,eax
  412dbe:	loopne 0x412d4d
  412dc0:	imul   edi,DWORD PTR [edx-0x40cbf10b],0xfffffff5
  412dc7:	jl     0x412dd0
  412dc9:	mov    bl,0x5
  412dcb:	mov    edx,0x2bbfba5e
  412dd0:	xchg   ebx,eax
  412dd1:	xchg   esp,eax
  412dd2:	pop    ebx
  412dd3:	bound  edx,QWORD PTR [ebx+0x16]
  412dd6:	int    0xe5
  412dd8:	bound  esp,QWORD PTR es:[edx-0x17]
  412ddc:	rcr    DWORD PTR [edi-0xb],0x5c
  412de0:	fdiv   DWORD PTR [edx-0x45c2e449]
  412de6:	jg     0x412e14
  412de8:	pop    esp
  412de9:	push   cs
  412dea:	cmp    al,0x7f
  412dec:	add    BYTE PTR [eax+ecx*1+0x62],dl
  412df0:	mov    edx,esi
  412df2:	inc    eax
  412df3:	sub    BYTE PTR [eax-0x3c16c9ec],cl
  412df9:	dec    edi
  412dfa:	pusha  
  412dfb:	mov    edx,0x0
	...
  412e10:	rcl    DWORD PTR [ebx+0x8],0x3e
  412e14:	cmp    cl,cl
  412e16:	daa    
  412e17:	jmp    0x109bdab
  412e1c:	mov    ebp,eax
  412e1e:	pop    ebx
  412e1f:	call   0x36d37b
  412e24:	xchg   ebp,eax
  412e25:	fdiv   st,st(5)
  412e27:	push   edx
  412e29:	outs   dx,BYTE PTR es:[esi]
  412e2b:	fidivr DWORD PTR [esi]
  412e2d:	xlat   BYTE PTR ds:[ebx]
  412e2e:	cmc    
  412e2f:	dec    edi
  412e30:	ret    0xde1
  412e33:	call   0x3834cb
  412e38:	int    0x9b
  412e3a:	cmp    edi,edi
  412e3c:	rcl    BYTE PTR [edi+0x8],cl
  412e3f:	inc    esi
  412e40:	mov    ch,0xa6
  412e42:	or     BYTE PTR [ebp+0x7f],dh
  412e45:	into   
  412e46:	icebp  
  412e47:	xor    esp,DWORD PTR [ebp+0xd]
  412e4a:	idiv   edi
  412e4c:	jb     0x412eb1
  412e4e:	imul   DWORD PTR [esi-0x448472d3]
  412e54:	and    cl,0xf1
  412e57:	(bad)  
  412e58:	clc    
  412e59:	mov    ebp,0x654793ed
  412e5e:	neg    BYTE PTR [edi+0x23]
  412e61:	jg     0x412e2a
  412e63:	add    al,0xe5
  412e65:	add    al,BYTE PTR [ebx-0x2b39914]
  412e6b:	xor    DWORD PTR [eax-0xabebb68],0xffffff95
  412e72:	jnp    0x412e78
	...
  412e88:	sub    al,0x50
  412e8a:	or     eax,0x7914d00
  412e8f:	add    BYTE PTR [ebp+0x235005d],dh
  412e95:	add    BYTE PTR gs:[ebp+0x1],0x4d
  412e9a:	dec    esp
  412e9b:	clc    
  412e9c:	test   eax,0x20000896
  412ea1:	sar    ch,cl
  412ea3:	push   eax
  412ea4:	add    ah,bl
  412ea6:	icebp  
  412ea7:	dec    DWORD PTR [eax+ebx*4-0x28e600f8]
  412eae:	pop    eax
  412eaf:	adc    al,0xb4
  412eb1:	jg     0x412e7c
  412eb3:	inc    DWORD PTR [edx+0x2fe745c0]
  412eb9:	loop   0x412ec4
  412ebb:	add    BYTE PTR [edi],cl
  412ebd:	inc    ebx
  412ebe:	or     al,0x76
  412ec0:	and    ebx,0x19730009
  412ec6:	shl    ch,cl
  412ec8:	out    0xec,eax
  412eca:	or     edi,edi
  412ecc:	fld    DWORD PTR [edi+0x58]
  412ecf:	je     0x412e65
  412ed1:	arpl   WORD PTR [esi+0x587a435c],bp
  412ed7:	je     0x412f11
  412ed9:	push   ebx
  412eda:	xchg   esp,eax
  412edb:	xor    esi,DWORD PTR [ebx]
  412edd:	push   0x32
  412edf:	rcl    DWORD PTR [ebx+ebp*4+0x2e308abe],0x4d
  412ee7:	sti    
  412ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee9:	stos   DWORD PTR es:[edi],eax
  412eea:	rcl    DWORD PTR [ebp+0x0],cl
	...
  412efd:	add    BYTE PTR [eax],al
  412eff:	add    BYTE PTR [ebx],dl
  412f01:	and    dl,dh
  412f03:	out    0xd9,eax
  412f05:	sti    
  412f06:	pop    eax
  412f07:	(bad)  
  412f08:	adc    eax,0xe76745f0
  412f0d:	adc    eax,0x3ff2ffcb
  412f12:	icebp  
  412f13:	out    0x62,eax
  412f15:	mov    dl,0x45
  412f17:	(bad)  
  412f18:	jecxz  0x412f79
  412f1a:	pop    eax
  412f1b:	(bad)  
  412f1c:	popa   
  412f1d:	mov    bl,0x51
  412f1f:	neg    DWORD PTR [ebp-0x3137ba36]
  412f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f26:	or     DWORD PTR [ebp+0x17],edx
  412f29:	(bad)  
  412f2a:	mov    ebx,eax
  412f2c:	mov    eax,0x5b6a0c54
  412f31:	jmp    0x158b:0x93b407cf
  412f38:	mov    ds:0x97c978b8,eax
  412f3d:	sub    ebx,edi
  412f3f:	add    esp,DWORD PTR [ebx-0x80df807]
  412f45:	push   ebp
  412f46:	(bad)  
  412f48:	mov    al,ds:0x7b042028
  412f4d:	inc    edx
  412f4e:	out    0x5b,eax
  412f50:	or     bl,BYTE PTR [edx+0x66]
  412f53:	dec    edi
  412f54:	push   0x42
  412f56:	imul   ecx,DWORD PTR [edi-0x28],0xffffff8c
  412f5a:	push   edi
  412f5b:	xchg   ecx,eax
  412f5c:	pushf  
  412f5d:	mov    bh,0x5e
  412f5f:	cmp    eax,0xb8df914d
	...
  412f78:	push   ss
  412f79:	test   eax,0x5f5f4862
  412f7e:	sahf   
  412f7f:	dec    esi
  412f80:	ror    BYTE PTR [eax-0x488b03b9],0x26
  412f87:	sti    
  412f88:	jmp    0x412fcb
  412f8a:	in     eax,0xae
  412f8c:	ror    ebp,0x21
  412f8f:	cld    
  412f90:	sbb    ecx,DWORD PTR [ecx]
  412f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f93:	push   ebx
  412f94:	ret    
  412f95:	mov    bh,0x9c
  412f97:	push   ebx
  412f99:	std    
  412f9a:	enter  0x24e,0x8c
  412f9e:	pop    ds
  412f9f:	dec    DWORD PTR [edi]
  412fa1:	pop    esp
  412fa2:	loopne 0x412fa7
  412fa4:	mov    WORD PTR [edi+0x521a4f7c],?
  412faa:	retf   
  412fab:	xor    al,0x70
  412fad:	fcom   st(6)
  412faf:	fdiv   DWORD PTR [edi-0x14b3ab49]
  412fb5:	(bad)  
  412fb6:	and    cl,BYTE PTR [edi-0x36]
  412fb9:	mov    ebx,DWORD PTR [edi+0x2d0d8ad7]
  412fbf:	pusha  
  412fc0:	push   es
  412fc1:	lds    ecx,FWORD PTR [eax]
  412fc3:	ret    0xb6a3
  412fc6:	jnp    0x412f75
  412fc8:	inc    edi
  412fc9:	mov    eax,0xc52a639
  412fce:	dec    esp
  412fcf:	lea    ecx,[edx+0x40]
  412fd2:	hlt    
  412fd3:	xchg   esi,eax
  412fd4:	mov    ah,0xab
  412fd6:	cmc    
  412fd7:	adc    al,0xd8
  412fd9:	scas   eax,DWORD PTR es:[edi]
  412fda:	sub    DWORD PTR [ebp+0x0],edi
	...
  412ff0:	shl    BYTE PTR [esi-0x53240b7f],cl
  412ff6:	call   0xb5d5bfe4
  412ffb:	pop    ds
  412ffc:	ins    BYTE PTR es:[edi],dx
  412ffd:	push   esp
  412ffe:	or     BYTE PTR [esi+0x94daf19],bh
  413004:	nop
  413005:	xchg   esp,eax
  413006:	add    DWORD PTR [ecx],ebp
  413008:	cmp    edx,DWORD PTR [ebp-0x7d24051f]
  41300e:	enter  0xd280,0xb6
  413012:	cmc    
  413013:	ds fucomp st(1)
  413016:	xor    dh,ch
  413018:	push   esp
  413019:	mov    al,0xdf
  41301b:	and    DWORD PTR [edi-0x408df76c],ecx
  413021:	das    
  413022:	aas    
  413023:	lea    edx,[eax-0x49]
  413026:	pop    ebx
  413027:	add    DWORD PTR [edx],edx
  413029:	xchg   edi,eax
  41302a:	or     cl,ch
  41302c:	push   es
  41302d:	idiv   DWORD PTR [ebx-0x14]
  413030:	pusha  
  413031:	add    eax,0x548fe909
  413036:	cmp    ecx,0x81e04077
  41303c:	sub    eax,DWORD PTR es:[edi-0x17]
  413040:	sbb    DWORD PTR [edi-0x6b6ff6f3],ebp
  413046:	add    DWORD PTR [ecx+0x71df8fbb],ebp
  41304c:	nop
  41304d:	xchg   esp,eax
  41304e:	or     BYTE PTR [eax],al
  413050:	aas    
  413051:	ror    bl,0x0
	...
  413068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413069:	add    bl,BYTE PTR [eax-0x1]
  41306c:	jo     0x4130c6
  41306e:	in     eax,dx
  41306f:	aas    
  413070:	fist   DWORD PTR [edx-0x240af4f8]
  413076:	jns    0x413001
  413078:	jo     0x4130a6
  41307a:	div    BYTE PTR [ebp+0xd]
  41307d:	pop    eax
  41307e:	adc    eax,DWORD PTR [ebx+0x1a]
  413081:	dec    eax
  413082:	add    BYTE PTR [ebp+0x15],0x48
  413086:	jl     0x41306c
  413088:	cli    
  413089:	fst    st(5)
  41308b:	call   0x37fef5
  413090:	outs   dx,BYTE PTR ds:[esi]
  413091:	push   edx
  413092:	jns    0x4130e3
  413094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413095:	aad    0xe9
  413097:	inc    DWORD PTR [eax+0x654161d1]
  41309d:	cmp    DWORD PTR [eax+ebx*8-0x26],ecx
  4130a1:	popf   
  4130a2:	dec    ebx
  4130a3:	ins    BYTE PTR es:[edi],dx
  4130a4:	hlt    
  4130a5:	xchg   ecx,eax
  4130a6:	test   DWORD PTR [ebp-0x5f],eax
  4130a9:	xor    eax,0x3715d44c
  4130ae:	dec    esp
  4130af:	in     al,0x5
  4130b1:	dec    ecx
  4130b2:	jl     0x413094
  4130b4:	jge    0x4130a6
  4130b6:	push   ecx
  4130b7:	(bad)  
  4130b8:	jp     0x413075
  4130ba:	mov    ch,0x74
  4130bc:	inc    ebx
  4130bd:	fimul  DWORD PTR [eax]
  4130bf:	add    BYTE PTR [edx],cl
  4130c1:	or     bh,dh
  4130c3:	jne    0x4130c2
  4130c5:	pop    ecx
  4130c6:	retf   0xfa2f
  4130c9:	dec    eax
  4130ca:	div    BYTE PTR [ebp+0x0]
	...
  4130dd:	add    BYTE PTR [eax],al
  4130df:	add    BYTE PTR [ebp-0x72f783b9],cl
  4130e5:	stos   BYTE PTR es:[edi],al
  4130e6:	and    eax,0x7c48eaff
  4130eb:	in     al,0xba
  4130ed:	(bad)  
  4130ef:	dec    DWORD PTR [eax+ebx*2-0x4953180c]
  4130f6:	inc    esp
  4130f7:	inc    bl
  4130f9:	js     0x413167
  4130fb:	out    0xbd,eax
  4130fd:	mov    ecx,0xa356fe44
  413102:	je     0x413113
  413104:	xchg   edi,eax
  413105:	std    
  413106:	fisttp QWORD PTR [eax]
  413108:	or     al,0xae
  41310a:	or     DWORD PTR [edi],ecx
  41310c:	adc    DWORD PTR [ebx-0x6c6c01bc],edi
  413112:	or     al,BYTE PTR [eax]
  413114:	jnp    0x41315b
  413116:	inc    esp
  413117:	je     0x4130ad
  413119:	and    ecx,DWORD PTR [esi+0x44367b2e]
  41311f:	je     0x413191
  413121:	ds fdivrp st(7),st
  413124:	imul   eax,eax,0xfffffff1
  413127:	out    0x30,eax
  413129:	sahf   
  41312a:	inc    ebx
  41312b:	(bad)  
  41312c:	pop    ebx
  41312d:	loopne 0x413184
  41312f:	out    0x11,eax
  413131:	cdq    
  413132:	inc    ebx
  413133:	(bad)  
  413134:	sbb    eax,esi
  413136:	pop    ecx
  413137:	dec    edi
  413138:	xor    al,0x5f
  41313a:	add    edi,edi
  41313c:	cmp    esp,DWORD PTR [edx+0x9]
  41313f:	pop    edi
  413140:	shl    BYTE PTR [edi+eax*2+0x7],cl
	...
  413158:	mov    WORD PTR [eax],fs
  41315a:	jno    0x413147
  41315c:	and    ebx,DWORD PTR [eax]
  41315e:	idiv   dh
  413160:	mov    eax,ds:0x126251c3
  413165:	sahf   
  413166:	inc    esp
  413167:	enter  0xd6ce,0x9
  41316b:	push   ebp
  41316c:	pop    ss
  41316d:	lahf   
  41316e:	inc    esp
  41316f:	je     0x4130f9
  413171:	mov    ds:0xbdf3356c,eax
  413176:	std    
  413177:	mov    edi,0x7444ca60
  41317c:	jl     0x413112
  41317e:	das    
  41317f:	pop    esp
  413180:	pusha  
  413181:	jle    0x413159
  413183:	dec    ebx
  413184:	inc    ebx
  413185:	sub    al,0xd3
  413187:	popa   
  413188:	mov    edx,DWORD PTR [esi+eax*8+0x34b59bd1]
  41318f:	lock dec ebx
  413191:	mov    ch,0x3c
  413193:	cld    
  413194:	stos   DWORD PTR es:[edi],eax
  413195:	call   FWORD PTR [eax]
  413197:	dec    ebx
  413198:	stos   BYTE PTR es:[edi],al
  413199:	stos   DWORD PTR es:[edi],eax
  41319a:	inc    edi
  41319b:	push   ss
  41319c:	mov    ds:0x7f46b8b4,eax
  4131a1:	xchg   esp,eax
  4131a2:	cmp    al,0x7f
  4131a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a5:	sub    ebx,edi
  4131a7:	add    edi,DWORD PTR [ebx-0xd]
  4131aa:	pop    es
  4131ab:	adc    eax,0x4adf55f0
  4131b0:	add    BYTE PTR [ecx+0x2a72ee19],ah
  4131b6:	out    0x5b,eax
  4131b8:	cmp    esi,DWORD PTR [esi+eiz*2+0x4b]
	...
  4131cf:	add    bl,ch
  4131d1:	xchg   esp,eax
  4131d2:	fistp  WORD PTR [edx+0x19]
  4131d5:	cmp    eax,0x94ccd810
  4131da:	pop    esi
  4131db:	rcl    DWORD PTR [edi-0x47b51cc2],1
  4131e1:	pushf  
  4131e2:	push   edi
  4131e3:	ins    DWORD PTR es:[edi],dx
  4131e4:	cmp    dh,BYTE PTR [esi+esi*1+0x4eb433dc]
  4131eb:	mov    dh,BYTE PTR [ebx+0x23c4b365]
  4131f1:	mov    bl,0x94
  4131f3:	mul    DWORD PTR [ebp-0x742ee989]
  4131f9:	mov    esp,0xb40a4b61
  4131fe:	sub    BYTE PTR [esi-0x75],al
  413201:	xchg   esp,eax
  413202:	xchg   esp,eax
  413203:	jle    0x4131ec
  413205:	cmp    al,0xac
  413207:	xlat   BYTE PTR ds:[ebx]
  413208:	dec    esp
  413209:	xchg   esp,eax
  41320a:	or     BYTE PTR [ecx-0x16b8bf6d],al
  413210:	push   esi
  413211:	sub    BYTE PTR [eax],bl
  413213:	out    0x7c,al
  413215:	outs   dx,BYTE PTR ds:[esi]
  413216:	aas    
  413217:	sub    BYTE PTR [eax+0x571c1bbc],cl
  41321d:	mov    dl,0x1
  41321f:	test   eax,0x28a98ed3
  413224:	aam    0x54
  413226:	or     BYTE PTR [esi+0x3cf59fdc],bh
  41322c:	test   al,0xbb
  41322e:	mov    ebp,DWORD PTR [esi-0x230a4daa]
	...
  413248:	sar    BYTE PTR [edi],1
  41324a:	inc    edi
  41324b:	jmp    0x96790387
  413250:	(bad)  
  413251:	fmul   st(2),st
  413253:	fisttp QWORD PTR [edi+0x12958149]
  413259:	xlat   BYTE PTR ds:[ebx]
  41325a:	hlt    
  41325b:	adc    ecx,DWORD PTR [eax+0x3c764f3e]
  413261:	fwait
  413262:	loopne 0x41324d
  413264:	xchg   BYTE PTR [ebx-0x50b38f0b],dh
  41326a:	pusha  
  41326b:	cdq    
  41326c:	cmp    edx,DWORD PTR [eax+ecx*1-0x3f]
  413270:	ret    0x473f
  413273:	jmp    0x51415b4e
  413278:	stos   BYTE PTR es:[edi],al
  413279:	mov    dl,0xf5
  41327b:	ds (bad) 
  41327d:	sub    ah,dh
  41327f:	ss cmp al,0x9b
  413282:	loopne 0x41328b
  413284:	xchg   DWORD PTR [ebx-0x682ecf0b],esi
  41328a:	or     BYTE PTR [edx+edx*4+0x532d89bf],dh
  413291:	cmp    eax,0xb2378308
  413296:	jnp    0x413298
  413298:	std    
  413299:	dec    esi
  41329a:	mov    edi,0x805cf22e
  41329f:	inc    ebp
  4132a0:	loope  0x41326f
  4132a2:	in     al,0x6c
  4132a4:	xor    al,0x97
  4132a6:	pusha  
  4132a7:	aad    0x41
  4132a9:	xlat   BYTE PTR ds:[ebx]
  4132aa:	cmc    
  4132ab:	inc    BYTE PTR [eax]
	...
  4132bd:	add    BYTE PTR [eax],al
  4132bf:	add    BYTE PTR [eax],bh
  4132c1:	mov    al,0xed
  4132c3:	gs loop 0x413322
  4132c6:	idiv   bh
  4132c8:	pop    eax
  4132c9:	pop    esp
  4132ca:	div    BYTE PTR [ebp-0x43]
  4132cd:	dec    esi
  4132ce:	in     eax,0x2e
  4132d0:	repnz pop esp
  4132d2:	rol    dl,0xb9
  4132d5:	xchg   esi,eax
  4132d6:	pop    ebx
  4132d7:	mov    esp,ecx
  4132d9:	sbb    dl,cl
  4132db:	cld    
  4132dc:	jg     0x413276
  4132de:	bound  ebx,QWORD PTR [edx-0xe]
  4132e1:	loop   0x4132f0
  4132e3:	call   0x36c1f1
  4132e8:	in     al,dx
  4132e9:	icebp  
  4132ea:	icebp  
  4132eb:	push   0x65
  4132ed:	into   
  4132ee:	pop    ds
  4132ef:	ins    DWORD PTR es:[edi],dx
  4132f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132f1:	cwde   
  4132f2:	pusha  
  4132f3:	or     eax,0xfef5d590
  4132f8:	sbb    BYTE PTR [eax+0x4e65413f],ah
  4132fe:	dec    edi
  4132ff:	xor    al,0xb2
  413301:	pop    ebx
  413302:	add    al,al
  413304:	imul   edi,DWORD PTR [edi-0x69ca97bb],0x9b5dbee5
  41330e:	arpl   WORD PTR [ecx+0x25],ax
  413311:	out    0xf6,al
  413313:	jne    0x413342
  413315:	dec    esi
  413316:	adc    DWORD PTR [edx+0x72],ebx
  413319:	pop    ebx
  41331a:	in     eax,dx
  41331b:	and    eax,0x6af65d34
  413320:	and    eax,0x6d1fce
	...
  413335:	add    BYTE PTR [eax],al
  413337:	add    BYTE PTR [esp+edi*8+0x30916809],cl
  41333e:	retf   0x73ff
  413341:	mov    ebp,0x840c0009
  413346:	daa    
  413347:	xor    al,0xeb
  413349:	stos   BYTE PTR es:[edi],al
  41334a:	hlt    
  41334b:	mov    edi,0x67b9c458
  413350:	mov    WORD PTR [ebx-0x6f9b42b0],?
  413356:	fld    QWORD PTR [eax-0x74]
  413359:	imul   edi,DWORD PTR [edi],0x74
  41335c:	xchg   esp,eax
  41335d:	rcl    DWORD PTR [edx+0x58],cl
  413360:	mov    ebx,0x7cf151da
  413365:	repnz inc eax
  413367:	imul   ecx,DWORD PTR [ebx+edx*2-0x44b292e2],0x7c290cd1
  413372:	or     al,0xff
  413374:	pop    ecx
  413375:	mov    ch,0xb2
  413377:	inc    eax
  413378:	mov    WORD PTR [ebx],ss
  41337a:	pop    ebp
  41337b:	xor    al,BYTE PTR [ebx+0xbff522]
  413381:	mov    ch,0xb9
  413383:	mov    WORD PTR [bp+di-0x42b0],?
  413388:	hlt    
  413389:	call   0x8bcd746c
  41338e:	aas    
  41338f:	je     0x413315
  413391:	inc    ebx
  413392:	xchg   BYTE PTR [eax+0x53],bl
  413395:	push   edx
  413396:	push   ecx
  413397:	mov    ebp,0x69404a7c
	...
  4133b0:	mov    ebx,ss
  4133b2:	sbb    ebp,DWORD PTR [ebp-0x33]
  4133b5:	mov    ebx,0xfca10cd1
  4133ba:	or     DWORD PTR [eax-0x72],ebp
  4133bd:	mov    ebx,0x7b348009
  4133c2:	sbb    al,0xff
  4133c4:	sbb    edx,DWORD PTR [edx+edi*8-0x507460bd]
  4133cb:	fisttp DWORD PTR [ebx]
  4133cd:	mov    cl,0xe
  4133cf:	mov    DWORD PTR [ebx+0x6f],ebp
  4133d2:	je     0x413396
  4133d4:	sti    
  4133d5:	pusha  
  4133d6:	push   cs
  4133d7:	into   
  4133d8:	mov    edi,DWORD PTR [ecx+eiz*2+0x7b0eaaa]
  4133df:	jl     0x413394
  4133e1:	mov    cl,0xe6
  4133e3:	inc    edi
  4133e4:	pusha  
  4133e5:	mov    al,0xee
  4133e7:	ror    DWORD PTR [ebx-0x34e62a44],1
  4133ed:	mov    al,0xa8
  4133ef:	inc    edx
  4133f0:	(bad)  
  4133f1:	xchg   esp,eax
  4133f2:	cmp    al,0x7b
  4133f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133f5:	adc    ah,BYTE PTR [esp+ebx*2-0x23494f46]
  4133fc:	nop
  4133fd:	xchg   ebx,eax
  4133fe:	fild   WORD PTR [ebx]
  413400:	mov    ah,0x13
  413402:	lock inc esi
  413404:	call   0x96b0:0x9a5c651a
  41340b:	jns    0x4133dd
  41340d:	mov    al,0x2f
  41340f:	inc    edi
  413410:	clc    
  413411:	mov    al,ds:0xd186
	...
  413426:	add    BYTE PTR [eax],al
  413428:	xchg   ebx,eax
  413429:	mov    esp,0xb073e865
  41342e:	cli    
  41342f:	inc    ebx
  413430:	call   0xae94:0x8c04eb19
  413437:	shl    DWORD PTR [ebx-0x6b],0xdf
  41343b:	add    ecx,DWORD PTR [edi+edx*8-0x67b5b054]
  413442:	fild   WORD PTR [ebx]
  413444:	mov    dh,0x94
  413446:	leave  
  413447:	add    esp,DWORD PTR [esi+0x103d994]
  41344d:	pop    edx
  41344e:	cmp    esi,DWORD PTR [eax+ebx*1-0x2cc2f6e6]
  413455:	scas   al,BYTE PTR es:[edi]
  413456:	cmc    
  413457:	cdq    
  413458:	shr    BYTE PTR [eax],cl
  41345a:	lock es cmp eax,0xf3c1e0ac
  413461:	scas   eax,DWORD PTR es:[edi]
  413462:	cmc    
  413463:	loop   0x4134b4
  413465:	and    ecx,DWORD PTR [ebx]
  413467:	add    dl,al
  413469:	scas   eax,DWORD PTR es:[edi]
  41346a:	cmc    
  41346b:	jmp    0xa880be47
  413470:	(bad)  
  413471:	scas   eax,DWORD PTR es:[edi]
  413472:	jnp    0x413459
  413474:	inc    edi
  413475:	cld    
  413476:	cmp    esi,ebp
  413478:	push   edx
  413479:	pop    edi
  41347a:	cmp    DWORD PTR [ecx-0x2902e7ac],0x3b58ae52
  413484:	pusha  
  413485:	or     al,0x3a
  413487:	into   
  413488:	push   edx
  413489:	sbb    al,0x8c
  41348b:	mov    ecx,0x0
	...
  4134a0:	inc    edx
  4134a1:	scas   al,BYTE PTR es:[edi]
  4134a2:	cmc    
  4134a3:	rol    DWORD PTR [edx+0x7e],1
  4134a6:	cmc    
  4134a7:	mov    dh,0xc5
  4134a9:	scas   eax,DWORD PTR es:[edi]
  4134aa:	ins    DWORD PTR es:[edi],dx
  4134ab:	dec    edx
  4134ac:	mov    ch,0x54
  4134ae:	or     BYTE PTR [esi-0x61024004],ah
  4134b4:	shr    BYTE PTR [esi-0x5a181e85],cl
  4134ba:	cmp    cl,BYTE PTR [esi-0x6a73e32e]
  4134c0:	ret    0xf5ae
  4134c3:	push   0x14
  4134c5:	mov    ebx,0xafca76fd
  4134ca:	jns    0x4134e6
  4134cc:	cmp    BYTE PTR [edi],dh
  4134ce:	arpl   WORD PTR [eax+0x4dbbaf8f],bp
  4134d4:	fisubr DWORD PTR [esi+0x61f541f5]
  4134da:	cmc    
  4134db:	dec    esi
  4134dc:	call   FWORD PTR [esi+0x60]
  4134df:	add    BYTE PTR [ecx],ah
  4134e1:	cwde   
  4134e2:	or     BYTE PTR [eax],al
  4134e4:	push   0x4
  4134e6:	out    dx,al
  4134e7:	neg    DWORD PTR [edx+0x56]
  4134ea:	ins    DWORD PTR es:[edi],dx
  4134eb:	sbb    ah,ch
  4134ed:	xlat   BYTE PTR ds:[ebx]
  4134ee:	cmc    
  4134ef:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4134f1:	int3   
  4134f2:	dec    eax
  4134f3:	add    BYTE PTR ds:0xf54164db,bl
  4134f9:	dec    edx
  4134fa:	inc    edi
  4134fb:	sbb    esp,ebp
  4134fd:	xchg   edx,eax
  4134fe:	mov    eax,edi
  413500:	out    0xe0,al
  413502:	sbb    eax,0x68
	...
  413517:	add    ch,dh
  413519:	xchg   edx,eax
  41351a:	in     eax,0xbe
  41351c:	or     eax,0xe5416430
  413521:	push   ebp
  413522:	mov    esp,0xf658b2e8
  413527:	jmp    DWORD PTR [eax-0x58]
  41352a:	in     eax,dx
  41352b:	outs   dx,DWORD PTR ds:[esi]
  41352c:	jge    0x413587
  41352e:	imul   al
  413530:	pop    ebp
  413531:	mov    ebp,esi
  413533:	dec    edx
  413535:	fiadd  WORD PTR ds:0xfe4820ff
  41353b:	(bad)  
  41353c:	ficomp DWORD PTR [eax+0x7c]
  41353f:	or     ch,cl
  413541:	dec    esp
  413542:	repz (bad) 
  413544:	jmp    0xf658:0x22f0bc58
  41354b:	call   0x36bd09
  413550:	or     bl,BYTE PTR [esi]
  413552:	loop   0x41354b
  413554:	or     bl,BYTE PTR [eax-0x13]
  413557:	push   ecx
  413558:	pop    edx
  413559:	pop    ecx
  41355a:	idiv   bh
  41355c:	mov    al,0x60
  41355e:	loopne 0x413564
  413560:	jmp    0xed56:0x30fff657
  413567:	ins    DWORD PTR es:[edi],dx
  413568:	mov    ds,WORD PTR [eax+0x108cff08]
  41356e:	push   ebp
  41356f:	idiv   BYTE PTR [ebx]
  413571:	pop    edi
  413572:	push   esp
  413573:	xor    eax,0xc84b5663
  413578:	dec    esi
  413579:	ror    BYTE PTR [ecx],0x55
	...
  413590:	pop    ss
  413591:	pop    eax
  413592:	xchg   ebx,eax
  413594:	sbb    dl,dl
  413596:	or     DWORD PTR [edx-0x49],ebp
  413599:	jbe    0x413560
  41359b:	pop    es
  41359c:	hlt    
  41359d:	rcr    DWORD PTR ds:0xb53503ff,cl
  4135a3:	sti    
  4135a4:	sti    
  4135a5:	or     dl,dh
  4135a7:	addr16 inc ebp
  4135a9:	or     bl,cl
  4135ab:	(bad)  
  4135ac:	jmp    0x51bb:0x4d48ffe8
  4135b3:	(bad)  
  4135b4:	fidivr DWORD PTR [esi-0x5ca601b4]
  4135ba:	ror    DWORD PTR [eax+0x39],1
  4135bd:	jl     0x4135cb
  4135bf:	push   0x8009bb8e
  4135c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c5:	pop    edi
  4135c6:	dec    esi
  4135c7:	(bad)  
  4135c8:	mov    bl,0x43
  4135ca:	or     al,0x0
  4135cc:	mov    ebx,0x3188d12d
  4135d1:	jl     0x4135df
  4135d3:	push   0xffc97102
  4135d8:	xchg   edx,eax
  4135d9:	nop
  4135da:	hlt    
  4135db:	out    0xaa,eax
  4135dd:	push   ebx
  4135de:	dec    ebx
  4135df:	inc    BYTE PTR [ebx+0x1fe4090]
  4135e5:	mov    ah,0x51
  4135e7:	push   ebx
  4135e8:	mov    al,ds:0x4ec84d16
  4135ed:	mov    bh,0x9
  4135ef:	push   ebp
  4135f0:	pop    ss
  4135f1:	pop    ss
  4135f2:	mov    eax,ebx
	...
  413608:	adc    al,0x26
  41360a:	dec    esp
  41360b:	inc    BYTE PTR [ecx]
  41360d:	xchg   esp,eax
  41360e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41360f:	inc    edi
  413610:	fld    TBYTE PTR [ebp+0x2742f7dc]
  413616:	out    0x5b,eax
  413618:	daa    
  413619:	mov    bl,bh
  41361b:	add    eax,DWORD PTR [edi+0x327efed4]
  413621:	xchg   edx,eax
  413622:	fild   WORD PTR [ebx]
  413624:	dec    ebx
  413625:	push   edi
  413626:	aaa    
  413627:	add    ecx,DWORD PTR [esp+edx*4-0x5737c321]
  41362e:	cs cld 
  413630:	or     ebp,DWORD PTR [ebp-0x6b89fc67]
  413636:	mov    DWORD PTR [ebx],eax
  413638:	xchg   sp,ax
  41363a:	push   esp
  41363b:	mov    esi,0x7e7c43ff
  413640:	fbld   TBYTE PTR [esi+esi*8+0x74ad5343]
  413647:	dec    ebx
  413648:	fisub  DWORD PTR [esi]
  41364a:	jecxz  0x4136a6
  41364c:	adc    DWORD PTR [edx-0x2b68fc21],ecx
  413652:	pop    ebx
  413653:	or     DWORD PTR [ebp-0x73fc1e07],esi
  413659:	cmp    al,0xfd
  41365b:	int3   
  41365c:	dec    esp
  41365d:	xchg   esp,eax
  41365e:	into   
  41365f:	mov    ecx,0xf5e6bc97
  413664:	mov    ds:0x8546aac,al
  413669:	pop    ss
  41366a:	mov    esp,0x3b
	...
  41367f:	add    BYTE PTR [edx+0x73d62fac],dl
  413685:	inc    ecx
  413686:	rol    DWORD PTR [edx-0x7e],1
  413689:	push   ds
  41368a:	gs xor al,0x82
  41368d:	lods   al,BYTE PTR ds:[esi]
  41368e:	xchg   BYTE PTR [esi-0x4ecbcb8d],ch
  413694:	int3   
  413695:	xchg   esp,eax
  413696:	jbe    0x413711
  413698:	jae    0x41363e
  41369a:	or     BYTE PTR [esi-0x31],dh
  41369d:	stos   BYTE PTR es:[edi],al
  41369e:	jnp    0x413681
  4136a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136a1:	dec    ecx
  4136a2:	aaa    
  4136a3:	iretw  
  4136a5:	sbb    al,0x8c
  4136a7:	dec    ebp
  4136a8:	xchg   DWORD PTR [edx+0x3c8fc3f5],ebp
  4136ae:	retf   0x48bc
  4136b1:	lods   al,BYTE PTR ds:[esi]
  4136b2:	idiv   BYTE PTR [eax+eiz*2-0x5e]
  4136b6:	cmc    
  4136b7:	ds iret 
  4136b9:	and    BYTE PTR [eax],al
  4136bb:	inc    ecx
  4136bc:	push   ebx
  4136bd:	gs cmc 
  4136bf:	add    DWORD PTR cs:[ecx],edx
  4136c2:	loope  0x4136e2
  4136c4:	dec    edi
  4136c5:	stos   BYTE PTR es:[edi],al
  4136c6:	(bad)  
  4136c7:	jmp    0xa8a51003
  4136cc:	(bad)  
  4136cd:	stos   DWORD PTR es:[edi],eax
  4136ce:	mov    ebx,0xf5aab719
  4136d3:	push   es
  4136d4:	and    eax,0xd8d1e094
  4136d9:	stos   BYTE PTR es:[edi],al
  4136da:	cmc    
  4136db:	pusha  
  4136dc:	add    eax,0x4eeefdb8
  4136e1:	sbb    BYTE PTR [ebp+eax*8+0x0],cl
	...
  4136f8:	xchg   BYTE PTR [edx-0x3d0fc60b],ch
  4136fe:	arpl   WORD PTR [eax],bp
  413700:	nop
  413701:	stos   DWORD PTR es:[edi],eax
  413702:	mov    ebx,0xf5aa76d9
  413707:	(bad)  
  413708:	in     al,0x93
  41370a:	loopne 0x4136fd
  41370c:	cwde   
  41370d:	stos   BYTE PTR es:[edi],al
  41370e:	cmc    
  41370f:	pusha  
  413710:	add    al,0xcc
  413712:	std    
  413713:	scas   al,BYTE PTR es:[edi]
  413714:	dec    esi
  413715:	cmp    eax,0x38ef1108
  41371a:	inc    edi
  41371b:	jmp    0x9f3a17ee
  413720:	into   
  413721:	stos   BYTE PTR es:[edi],al
  413722:	cmc    
  413723:	adc    al,0x80
  413725:	mov    esp,0x562500e3
  41372a:	test   BYTE PTR [ecx-0x1b018],0xe2
  413731:	add    al,0x8d
  413733:	rcr    dl,1
  413735:	push   esi
  413736:	not    BYTE PTR [eax+0x5d]
  413739:	jns    0x41379f
  41373b:	inc    ecx
  41373c:	xor    eax,0xdaf0bc56
  413741:	push   esi
  413742:	idiv   bh
  413744:	pop    eax
  413745:	lahf   
  413746:	loopne 0x413715
  413748:	and    eax,0xa889f656
  41374d:	inc    ebx
  41374e:	(bad)  
  41374f:	jmp    DWORD PTR [edx-0x7]
  413752:	cmc    
  413753:	addr16 pop ebx
  413755:	in     al,0x48
  413757:	add    BYTE PTR [edx+0xf7e52c],dh
	...
  41376d:	add    BYTE PTR [eax],al
  41376f:	add    BYTE PTR [edx-0x128a09aa],ah
  413775:	jle    0x41372e
  413777:	xor    BYTE PTR [edx-0x5e7a7faa],al
  41377d:	outs   dx,BYTE PTR ds:[esi]
  41377e:	idiv   bh
  413780:	jo     0x41379e
  413782:	retf   0xe2f7
  413785:	push   esp
  413786:	inc    ebp
  413787:	push   0x48e4e4
  41378c:	mov    dl,0x22
  41378e:	in     eax,0xf7
  413790:	loop   0x4137e6
  413792:	div    BYTE PTR [ebp-0x53]
  413795:	jle    0x41372e
  413797:	xor    dl,al
  413799:	push   esp
  41379a:	add    BYTE PTR [ebp-0x99323],0x3f
  4137a1:	nop
  4137a2:	pusha  
  4137a3:	or     dl,BYTE PTR [ebx-0x29]
  4137a6:	cmc    
  4137a7:	(bad)  
  4137a8:	sbb    BYTE PTR [eax-0x2],ah
  4137ab:	push   DWORD PTR [edx]
  4137ad:	push   esp
  4137ae:	jl     0x4137b8
  4137b0:	sbb    eax,0x8cff25ec
  4137b5:	add    al,BYTE PTR [edx+0x48034c84]
  4137bb:	(bad)  
  4137bc:	sbb    DWORD PTR [ecx],edi
  4137be:	je     0x4137b6
  4137c0:	arpl   WORD PTR [ebx],bp
  4137c2:	fsub   QWORD PTR [edi-0x7e]
  4137c5:	xchg   ecx,eax
  4137c6:	leave  
  4137c7:	call   DWORD PTR [edx+0x61]
  4137ca:	cmp    al,0xf6
  4137cc:	dec    ebx
  4137cd:	xor    eax,DWORD PTR [edi+0x74]
  4137d0:	xchg   esp,eax
  4137d1:	inc    ebx
  4137d2:	iret   
  4137d3:	das    
	...
  4137e8:	cmp    eax,DWORD PTR [ebx-0x7f]
  4137eb:	test   al,dh
  4137ed:	inc    edx
  4137ee:	inc    edi
  4137ef:	dec    BYTE PTR [edi]
  4137f1:	adc    DWORD PTR [ecx],edi
  4137f3:	mul    BYTE PTR [ebx]
  4137f5:	imul   ecx,DWORD PTR [edi+ecx*1],0x10
  4137f9:	jnp    0x413807
  4137fb:	add    BYTE PTR [esi+edi*1+0x7303cf75],cl
  413802:	inc    edi
  413803:	(bad)  
  413804:	js     0x4137be
  413806:	mov    WORD PTR [esp+esi*1-0x7301b875],?
  41380d:	retf   0xb08d
  413810:	mov    WORD PTR [ebx-0x447397f7],?
  413816:	cmp    BYTE PTR [ebp-0x17e6d725],bh
  41381c:	push   ss
  41381d:	aad    0x48
  41381f:	dec    bl
  413821:	or     BYTE PTR [esi],ah
  413823:	test   bl,0xca
  413826:	dec    eax
  413827:	je     0x4137c5
  413829:	rcl    DWORD PTR [edi],cl
  41382b:	sub    dh,BYTE PTR [ebx-0x4b4bb726]
  413831:	jmp    0xe81c:0x60a3fe48
  413838:	mov    WORD PTR [ebp+0x2093fe47],ss
  41383e:	sub    eax,0xae948bf6
  413843:	inc    eax
  413844:	clc    
  413845:	test   BYTE PTR [edi-0x61565bcb],dl
  41384b:	inc    eax
	...
  413860:	cmp    al,cl
  413862:	sahf   
  413863:	inc    eax
  413864:	push   0xffffffa9
  413866:	xor    al,0x23
  413868:	pop    edx
  413869:	test   eax,0x84e04076
  41386e:	xchg   DWORD PTR [ebp-0x5c],esi
  413871:	test   eax,0xcc004066
  413876:	push   esi
  413877:	inc    eax
  413878:	inc    edx
  413879:	test   eax,0xc42413dc
  41387e:	or     BYTE PTR [ecx+0x32],al
  413881:	test   eax,0xa922539c
  413886:	dec    esi
  413887:	inc    eax
  413888:	fdivr  DWORD PTR [edi-0x56e5bfc2]
  41388e:	mov    ah,0x13
  413890:	and    al,0x4
  413892:	or     DWORD PTR [ecx+0xa],eax
  413895:	test   eax,0xa8fa4f54
  41389a:	push   ss
  41389b:	inc    eax
  41389c:	add    BYTE PTR [edi+eax*1+0x6a9a471],0x40
  4138a4:	and    al,dl
  4138a6:	idiv   BYTE PTR [edi]
  4138a8:	loop   0x413852
  4138aa:	cmp    al,0x4b
  4138ac:	loop   0x413856
  4138ae:	(bad)  
  4138af:	aas    
  4138b0:	pop    eax
  4138b1:	test   BYTE PTR [edi],al
  4138b3:	mov    cl,0x74
  4138b5:	test   eax,0xd3f83fee
  4138ba:	fidivr WORD PTR [edi]
  4138bc:	mov    edx,0xa41454a8
  4138c1:	pop    ss
  4138c2:	or     DWORD PTR [edi],edi
	...
  4138d8:	stos   BYTE PTR es:[edi],al
  4138d9:	test   al,0x74
  4138db:	jl     0x413877
  4138dd:	test   al,0xb6
  4138df:	aas    
  4138e0:	loopne 0x4138c9
  4138e2:	or     BYTE PTR [esi+0x34f5aa53],bh
  4138e8:	mov    al,ds:0xc2d044bc
  4138ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ee:	cmc    
  4138ef:	adc    al,0xa0
  4138f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138f2:	mov    ebx,0xf5a6bb99
  4138f7:	mov    fs,WORD PTR ds:0xcd6be090
  4138fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138fe:	cmc    
  4138ff:	jle    0x4138d6
  413901:	mov    bh,0xfd
  413903:	jbe    0x413898
  413905:	scas   eax,DWORD PTR es:[edi]
  413906:	aas    
  413907:	mov    ebp,0x9cf5a68a
  41390c:	jl     0x4138ac
  41390e:	cmc    
  41390f:	pop    esi
  413910:	push   0x73562469
  413915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413916:	mov    ebx,0xf5a66341
  41391b:	push   ecx
  41391c:	pop    ds
  41391d:	jl     0x413914
  41391f:	ds pop ebx
  413921:	loopne 0x41390f
  413923:	ds push ebx
  413925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413926:	loopne 0x413929
  413928:	cld    
  413929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41392a:	cmc    
  41392b:	es test edi,eax
  41392e:	std    
  41392f:	push   ds
  413930:	mov    ebx,0xb2c513af
  413935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413936:	cmc    
  413937:	push   esp
  413938:	dec    eax
  413939:	sahf   
  41393a:	cmc    
  41393b:	push   es
	...
  413950:	mov    al,0x85
  413952:	and    al,0xfe
  413954:	call   0xf5a6:0x9b1dbba6
  41395b:	add    DWORD PTR [ebx-0x7d190a88],edx
  413961:	loopne 0x413927
  413963:	(bad)  
  413964:	jp     0x41390c
  413966:	loopne 0x41393d
  413968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41396a:	cmc    
  41396b:	into   
  41396c:	and    al,0xcf
  41396e:	std    
  41396f:	add    dl,cl
  413971:	in     ax,dx
  413973:	icebp  
  413974:	jle    0x4139dd
  413976:	idiv   bh
  413978:	adc    BYTE PTR [ebx-0x2],dl
  41397b:	(bad)  
  41397c:	cmp    bh,BYTE PTR [ebx-0x15]
  41397f:	sub    ebp,DWORD PTR [edx]
  413981:	data16 div BYTE PTR [ebp-0x9a127]
  413988:	or     eax,0x1aff224a
  41398d:	dec    sp
  41398f:	clc    
  413990:	cld    
  413991:	mov    edx,0x66dafff4
  413996:	jl     0x413994
  413998:	or     eax,0x35001e5e
  41399d:	pop    eax
  41399e:	(bad)  
  41399f:	or     al,0x35
  4139a1:	int3   
  4139a2:	sub    ah,0xa6
  4139a5:	dec    edi
  4139a6:	icebp  
  4139a7:	push   0x25
  4139a9:	std    
  4139aa:	push   ecx
  4139ab:	inc    DWORD PTR [eax-0x65]
  4139ae:	loopne 0x41399d
  4139b0:	jge    0x413a19
  4139b2:	test   BYTE PTR [ecx+0x0],0x0
	...
  4139c5:	add    BYTE PTR [eax],al
  4139c7:	add    al,dh
  4139c9:	data16 div BYTE PTR [ebp+0x2d]
  4139cd:	sti    
  4139ce:	xchg   ebp,eax
  4139cf:	ins    DWORD PTR es:[edi],dx
  4139d0:	xor    al,0x93
  4139d2:	cmc    
  4139d3:	xor    eax,0x48d7ef
  4139d8:	popf   
  4139d9:	inc    esp
  4139da:	icebp  
  4139db:	call   FWORD PTR [edx+0xd087c66]
  4139e1:	xor    esp,DWORD PTR [ecx+eax*2-0xb]
  4139e5:	cli    
  4139e6:	pop    es
  4139e7:	add    ch,ah
  4139e9:	adc    ch,dh
  4139eb:	mov    ebx,0xfff668d9
  4139f0:	inc    eax
  4139f1:	div    BYTE PTR [di-0x43]
  4139f5:	jp     0x4139ec
  4139f7:	sub    dl,bl
  4139f9:	push   0xb98cc2c0
  4139fe:	or     DWORD PTR [ebp+0x17],edx
  413a01:	jmp    0x44e1fd8d
  413a06:	or     al,0x0
  413a08:	stos   DWORD PTR es:[edi],eax
  413a09:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  413a0b:	and    ah,BYTE PTR [edx]
  413a0d:	jl     0x413a1b
  413a0f:	inc    DWORD PTR [ecx]
  413a11:	enter  0x7434,0x94
  413a15:	add    ebx,esi
  413a17:	push   ebx
  413a18:	jnp    0x413a21
  413a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a1b:	add    BYTE PTR [esi+ecx*1-0x5a449889],cl
  413a22:	retf   0x62ff
  413a25:	test   eax,0xa3e1ff05
  413a2a:	and    DWORD PTR [edi],edi
	...
  413a40:	mov    eax,0xc1fe331e
  413a45:	(bad)  
  413a46:	and    DWORD PTR [ebp+0xa332e7c],esp
  413a4c:	dec    esp
  413a4d:	sar    dh,0x88
  413a50:	leave  
  413a51:	aas    
  413a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a53:	jmp    FWORD PTR [ebx]
  413a55:	addr16 jbe 0x413abf
  413a58:	outs   dx,DWORD PTR ds:[esi]
  413a59:	mov    ebp,0xe11affca
  413a5e:	xor    eax,0x21b399fe
  413a63:	sbb    esp,DWORD PTR [eax+0x76]
  413a66:	xor    esp,DWORD PTR [edi-0x73]
  413a69:	mov    ebx,0xd664bd24
  413a6e:	mov    ds:0xbd7e8c40,eax
  413a73:	sti    
  413a74:	jmp    0x413a76
  413a76:	add    ch,al
  413a78:	mov    eax,DWORD PTR [edi]
  413a7a:	xor    eax,0x3520dbfe
  413a7f:	out    0x81,eax
  413a81:	shl    BYTE PTR [esi+edi*8],cl
  413a84:	aad    0x79
  413a86:	add    al,0x0
  413a88:	pop    ecx
  413a89:	xchg   esp,eax
  413a8a:	jp     0x413abb
  413a8c:	push   cs
  413a8d:	shr    DWORD PTR [ebx+0x652db3a9],1
  413a93:	lods   eax,DWORD PTR ds:[esi]
  413a94:	dec    esp
  413a95:	xchg   esp,eax
  413a96:	inc    edi
  413a97:	into   
  413a98:	xor    DWORD PTR [ebx-0x21],edx
  413a9b:	cmp    al,0x20
  413a9d:	cwde   
  413a9e:	xlat   BYTE PTR ds:[ebx]
  413a9f:	add    al,0x62
  413aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aa2:	mov    esi,0x8
	...
  413ab7:	add    BYTE PTR [eax+eiz*1-0x23],cl
  413abb:	mov    cl,al
  413abd:	test   al,0xae
  413abf:	mov    dh,0x77
  413ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac2:	sbb    al,0xc
  413ac4:	fs inc ebp
  413ac6:	sahf   
  413ac7:	cmp    al,0x6a
  413ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aca:	sbb    al,0x40
  413acc:	imul   edi,DWORD PTR [edi+0x3a5a3cd9],0xffffffdf
  413ad3:	stos   DWORD PTR es:[edi],eax
  413ad4:	sti    
  413ad5:	xor    eax,0x56b40420
  413ada:	cmc    
  413adb:	ret    0xa643
  413ade:	aam    0xf
  413ae0:	and    al,0xcb
  413ae2:	add    al,0x3d
  413ae4:	xor    bl,BYTE PTR [ecx+0x1b81b71f]
  413aea:	lods   eax,DWORD PTR ds:[esi]
  413aeb:	aas    
  413aec:	and    bl,BYTE PTR [edi]
  413aee:	dec    ebx
  413aef:	cmp    al,0xa0
  413af1:	pushf  
  413af2:	push   edi
  413af3:	repnz adc ah,BYTE PTR [ebp-0x577fc3c2]
  413afa:	inc    edi
  413afb:	fs mov ch,0xa5
  413afe:	cs test eax,0xad582cfb
  413b04:	dec    esp
  413b05:	xchg   esp,eax
  413b06:	xchg   DWORD PTR [edi+0x3cdf5379],esp
  413b0c:	pop    eax
  413b0d:	cwde   
  413b0e:	pop    ss
  413b0f:	push   0x7f6a5a8
  413b14:	int3   
  413b15:	pop    ds
  413b16:	or     bh,bl
  413b18:	push   ss
  413b19:	push   eax
  413b1a:	hlt    
  413b1b:	out    dx,al
	...
  413b30:	stc    
  413b31:	test   al,0xf5
  413b33:	pop    esp
  413b34:	mov    BYTE PTR [ecx+ecx*1-0xa598822],bh
  413b3b:	pop    esp
  413b3c:	lods   eax,DWORD PTR fs:[esi]
  413b3e:	outs   dx,DWORD PTR ds:[esi]
  413b3f:	add    esp,DWORD PTR [edi-0x5a]
  413b42:	sub    DWORD PTR [esp+ebx*2],0x55
  413b46:	pusha  
  413b47:	mov    ah,dh
  413b49:	push   ebx
  413b4a:	or     BYTE PTR [ecx+0x2c],al
  413b4d:	xor    al,BYTE PTR [edi-0x17]
  413b50:	(bad)  
  413b51:	sub    BYTE PTR [ecx+edx*4],al
  413b54:	cmp    esi,DWORD PTR [ecx-0xb]
  413b57:	sahf   
  413b58:	adc    esp,0x7c
  413b5b:	adc    BYTE PTR [ecx],bl
  413b5d:	pop    ecx
  413b5e:	lock push 0x25
  413b61:	test   al,0xc
  413b63:	cld    
  413b64:	daa    
  413b65:	cmovl  eax,DWORD PTR [ecx-0x26cb5bfd]
  413b6c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  413b6e:	cmc    
  413b6f:	test   DWORD PTR [esp+ebx*8-0x6b6ff1e8],0xae7fa47f
  413b7a:	inc    esp
  413b7b:	push   esi
  413b7c:	fnsave [ebx+0x54f69860]
  413b82:	or     BYTE PTR [ebp+ecx*2-0x24],dh
  413b86:	pop    eax
  413b87:	push   ecx
  413b88:	inc    ecx
  413b89:	mov    cl,BYTE PTR [eax]
  413b8b:	jmp    0x5c4613a2
  413b90:	int    0xd7
  413b92:	pop    eax
  413b93:	je     0x413b95
	...
  413ba5:	add    BYTE PTR [eax],al
  413ba7:	add    ch,cl
  413ba9:	fistp  DWORD PTR [eax-0x6f]
  413bac:	adc    esi,DWORD PTR [edx]
  413bae:	inc    edi
  413baf:	jmp    0x145645a
  413bb4:	div    DWORD PTR [eax-0xb]
  413bb7:	add    BYTE PTR [edx-0x4e8b376d],dl
  413bbd:	adc    BYTE PTR [ebp-0x4],cl
  413bc0:	ss (bad) 
  413bc3:	add    edi,DWORD PTR [ebx]
  413bc5:	xchg   edx,eax
  413bc6:	cmc    
  413bc7:	jne    0x413b7a
  413bc9:	pop    esi
  413bca:	jl     0x413bd4
  413bcc:	fstp   QWORD PTR [eax]
  413bce:	hlt    
  413bcf:	inc    edx
  413bd1:	pop    esi
  413bd2:	jl     0x413bd0
  413bd4:	int    0x66
  413bd6:	and    bh,bh
  413bd8:	rcr    BYTE PTR [esi+0x44],cl
  413bdb:	lock es fsubr st(5),st
  413bdf:	add    al,cl
  413be1:	div    BYTE PTR cs:[ebp+0x3d]
  413be5:	outs   dx,DWORD PTR ds:[esi]
  413be6:	jmp    0x413c11
  413be8:	xor    bl,BYTE PTR [esi-0x40]
  413beb:	ret    0x977d
  413bee:	pop    ebx
  413bef:	mov    edx,DWORD PTR [ecx]
  413bf1:	sbb    cl,dl
  413bf3:	cld    
  413bf4:	(bad)  
  413bf5:	cwde   
  413bf6:	bound  ebx,QWORD PTR [ebp+0x12]
  413bf9:	in     al,0xd
  413bfb:	call   0x37f25d
  413c00:	lods   al,BYTE PTR ds:[esi]
  413c01:	aam    0xf1
  413c03:	push   0xbee59735
  413c08:	pop    ebp
  413c09:	mov    edx,0x4163
	...
  413c1e:	add    BYTE PTR [eax],al
  413c20:	and    eax,0xf46e32ef
  413c25:	xchg   esi,eax
  413c26:	cmc    
  413c27:	jne    0x413c56
  413c29:	outs   dx,DWORD PTR ds:[esi]
  413c2a:	cli    
  413c2b:	push   edx
  413c2c:	rcr    BYTE PTR [esi+0x6d],cl
  413c2f:	add    DWORD PTR ds:0x9268b36e,esp
  413c35:	out    dx,al
  413c36:	dec    eax
  413c37:	add    ch,cl
  413c39:	mov    eax,ds:0x5de54163
  413c3e:	jl     0x413c48
  413c40:	popf   
  413c41:	dec    ebx
  413c42:	push   edi
  413c43:	dec    DWORD PTR [edx+ecx*4-0x5e1c005f]
  413c4a:	jo     0x413cb3
  413c4c:	scas   eax,DWORD PTR es:[edi]
  413c4d:	or     ecx,ebp
  413c4f:	jmp    FWORD PTR [ebx-0x7]
  413c52:	lahf   
  413c53:	inc    eax
  413c54:	mov    WORD PTR [edx+0x77b407a5],gs
  413c5a:	(bad)  
  413c5c:	mov    ebx,0xa3000944
  413c61:	add    ah,BYTE PTR [ebp+0xc6c3a2e]
  413c67:	push   0xffc96348
  413c6c:	call   0x2f7e:0xe2e8045f
  413c73:	dec    BYTE PTR [ebx-0x32b70c5f]
  413c79:	stos   DWORD PTR es:[edi],eax
  413c7a:	xor    BYTE PTR [esp+eax*4+0x3],dh
  413c7e:	xlat   BYTE PTR ds:[ebx]
  413c7f:	std    
  413c80:	jae    0x413c85
  413c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c83:	add    DWORD PTR [eax],eax
	...
  413c95:	add    BYTE PTR [eax],al
  413c97:	add    BYTE PTR [ebx+ebp*4-0x4c260177],cl
  413c9e:	and    DWORD PTR [edx+ebx*2+0x1b],ecx
  413ca2:	xor    dh,bh
  413ca4:	fstp   DWORD PTR [edi]
  413ca6:	das    
  413ca7:	je     0x413c3d
  413ca9:	adc    eax,DWORD PTR [edx+0x25]
  413cac:	inc    ebx
  413cad:	xor    eax,DWORD PTR [ecx-0x3f]
  413cb0:	nop
  413cb1:	stos   DWORD PTR es:[edi],eax
  413cb2:	(bad)  
  413cb3:	mov    ah,BYTE PTR [eax]
  413cb5:	das    
  413cb6:	dec    eax
  413cb7:	sti    
  413cb8:	sub    eax,ecx
  413cba:	add    eax,0x219b99ff
  413cbf:	xchg   edi,eax
  413cc0:	push   ebp
  413cc1:	pop    edx
  413cc2:	das    
  413cc3:	or     cl,BYTE PTR [eax+ebp*8-0x6]
  413cc7:	mov    BYTE PTR [ecx+0x67],dl
  413cca:	das    
  413ccb:	je     0x413c71
  413ccd:	jb     0x413c74
  413ccf:	pop    es
  413cd0:	in     al,0x94
  413cd2:	xor    al,0xdf
  413cd4:	repnz mov eax,ds:0xa197af16
  413cda:	xchg   esp,eax
  413cdb:	or     esi,esp
  413cdd:	jo     0x413cac
  413cdf:	cmp    dl,bl
  413ce1:	mov    eax,ds:0x27d23774
  413ce6:	imul   DWORD PTR [ebx]
  413ce8:	ins    BYTE PTR es:[edi],dx
  413ce9:	jp     0x413ce9
  413ceb:	cmp    dl,al
  413ced:	daa    
  413cee:	jecxz  0x413d1b
  413cf0:	xchg   ecx,eax
  413cf1:	imul   ebp,esi,0x38
  413cf4:	sti    
  413cf5:	xchg   ebx,eax
  413cf6:	fild   WORD PTR [ebx]
  413cf8:	mov    ebx,cs
  413cfa:	mov    eax,ds:0xf
	...
  413d0f:	add    BYTE PTR [edi+eax*2-0x26f1d896],cl
  413d16:	(bad)  
  413d17:	sar    BYTE PTR [ecx],1
  413d19:	inc    ebp
  413d1a:	sbb    bl,BYTE PTR [ebp+0x4a]
  413d1d:	fisttp DWORD PTR [ebp-0x3d]
  413d20:	adc    DWORD PTR [eax],0x2d
  413d23:	cmp    bl,cl
  413d25:	dec    ecx
  413d26:	scas   al,BYTE PTR es:[edi]
  413d27:	scas   al,BYTE PTR es:[edi]
  413d28:	and    DWORD PTR [ecx-0x588bf7e4],0xffffffca
  413d2f:	cmp    BYTE PTR [edx-0x73],ah
  413d32:	lahf   
  413d33:	scas   eax,DWORD PTR es:[edi]
  413d34:	jne    0x413d7a
  413d36:	pop    ss
  413d37:	add    al,0x8c
  413d39:	mov    cl,0x35
  413d3b:	cmp    al,al
  413d3d:	mov    al,ds:0x2742d10f
  413d42:	out    0x2b,eax
  413d44:	mov    edx,0x86386ea1
  413d49:	mov    esp,0xa1737857
  413d4e:	pop    esi
  413d4f:	aaa    
  413d50:	pop    esi
  413d51:	aam    0x98
  413d53:	cmp    BYTE PTR [edx],bl
  413d55:	mov    eax,ds:0x5be1354e
  413d5a:	out    dx,al
  413d5b:	scas   al,BYTE PTR es:[edi]
  413d5c:	iret   
  413d5d:	loopne 0x413d67
  413d5f:	and    eax,0x5c085434
  413d64:	cmp    bl,BYTE PTR [ebp+0x28b4be58]
  413d6a:	sbb    BYTE PTR [esi],bl
  413d6c:	cmp    cl,BYTE PTR [ebp-0x5e0fa220]
  413d72:	cmc    
  413d73:	loop   0x413d75
	...
  413d85:	add    BYTE PTR [eax],al
  413d87:	add    BYTE PTR [edi+0x25],cl
  413d8a:	cmp    BYTE PTR [ecx-0x6e0fa7fa],bl
  413d90:	nop
  413d91:	xchg   esp,eax
  413d92:	in     eax,0x37
  413d94:	test   BYTE PTR [eax],ch
  413d96:	add    BYTE PTR [ecx],al
  413d98:	mov    bh,0x77
  413d9a:	cmc    
  413d9b:	out    0xc3,al
  413d9d:	mov    eax,ds:0x477f17b
  413da2:	sub    al,0xd6
  413da4:	pop    ebx
  413da5:	mov    ds:0x2863cd7b,al
  413daa:	lock (bad) 
  413dac:	fstp   QWORD PTR [eax-0x6092e920]
  413db2:	cmc    
  413db3:	shl    DWORD PTR [edi],0x78
  413db6:	cmc    
  413db7:	scas   al,BYTE PTR es:[edi]
  413db8:	bswap  ebx
  413dba:	pop    es
  413dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dbc:	jg     0x413d9e
  413dbe:	scas   eax,DWORD PTR es:[edi]
  413dbf:	sahf   
  413dc0:	mov    ds:0xea9bf59e,eax
  413dc5:	addr16 or eax,0x14def214
  413dcb:	stc    
  413dcc:	dec    eax
  413dcd:	mov    al,ds:0x4f842484
  413dd2:	pop    ebp
  413dd3:	jbe    0x413dd2
  413dd5:	(bad)  
  413dd6:	cmc    
  413dd7:	hlt    
  413dd8:	xchg   ebx,eax
  413dd9:	lods   al,BYTE PTR ds:[esi]
  413dda:	push   ebx
  413ddb:	adc    bh,BYTE PTR [ebx-0x62]
  413dde:	add    DWORD PTR [ecx],ebp
  413de0:	fdivr  QWORD PTR ds:0x12586258
  413de6:	je     0x413e35
  413de8:	xchg   ecx,eax
  413de9:	es inc esp
	...
  413dff:	add    BYTE PTR [ebp-0x108af75a],ah
  413e05:	loope  0x413dfd
  413e07:	dec    ebp
  413e08:	mov    ecx,0xba0008f0
  413e0d:	div    BYTE PTR es:[ebp-0x57]
  413e11:	into   
  413e12:	pop    esi
  413e13:	inc    DWORD PTR [eax]
  413e15:	mov    eax,fs
  413e17:	(bad)  
  413e18:	jnp    0x413e81
  413e1a:	test   BYTE PTR [ebx],0x9d
  413e1d:	imul   esp,DWORD PTR [eax+eax*4],0xffffffcb
  413e21:	xchg   ebp,eax
  413e22:	jnp    0x413e4c
  413e24:	repz inc sp
  413e27:	cld    
  413e28:	sete   BYTE PTR [ebx+0x5bc3a945]
  413e2f:	call   0x380658
  413e34:	sahf   
  413e35:	push   ebx
  413e36:	jns    0x413e4c
  413e38:	dec    ebp
  413e39:	xchg   edx,eax
  413e3a:	or     bh,ch
  413e3c:	or     esp,DWORD PTR [edi+0x7c]
  413e3f:	cld    
  413e40:	jae    0x413e11
  413e42:	div    BYTE PTR [ebp+0x7d]
  413e45:	imul   ebp,DWORD PTR [esi+0x2663afe],0xffffffd8
  413e4c:	dec    ebp
  413e4d:	jle    0x413e7d
  413e4f:	jmp    FWORD PTR [edx]
  413e51:	addr16 cmp al,al
  413e54:	in     al,dx
  413e55:	data16 idiv bh
  413e58:	cli    
  413e59:	mov    fs:0x89e47238,eax
  413e5f:	mov    edi,0x48f6b8
	...
  413e78:	mov    eax,0xa250f1d4
  413e7d:	addr16 jl 0x413e90
  413e80:	stos   BYTE PTR es:[edi],al
  413e81:	in     al,0x1
  413e83:	call   0x37ec51
  413e88:	push   ds
  413e89:	push   ebx
  413e8a:	jns    0x413ebc
  413e8c:	mov    ebp,ds
  413e8e:	test   BYTE PTR [esp+edx*1-0x2b],al
  413e92:	cmc    
  413e93:	jmp    DWORD PTR [edx]
  413e95:	pop    ss
  413e96:	aas    
  413e97:	je     0x413e2d
  413e99:	inc    ebp
  413e9a:	test   eax,0xc6660323
  413e9f:	inc    BYTE PTR [ecx-0x5747de4b]
  413ea5:	jbe    0x413ee5
  413ea7:	(bad)  
  413ea8:	popa   
  413ea9:	cmp    DWORD PTR [esi],0xb885e474
  413eaf:	pop    es
  413eb0:	in     al,0xd
  413eb2:	(bad)  
  413eb3:	(bad)  
  413eb4:	rol    DWORD PTR [edx+ebx*4-0x786234da],cl
  413ebb:	retf   0xa98d
  413ebe:	idiv   DWORD PTR [edi-0x1c4520b]
  413ec4:	mov    bl,0xba
  413ec6:	outs   dx,BYTE PTR ds:[esi]
  413ec7:	aaa    
  413ec8:	xchg   ebx,eax
  413ec9:	dec    eax
  413eca:	outs   dx,BYTE PTR ds:[esi]
  413ecb:	or     al,bh
  413ecd:	inc    eax
  413ece:	or     eax,0x2cad7c68
  413ed3:	mov    ebp,0xe8045f93
  413ed8:	scas   al,BYTE PTR es:[edi]
  413ed9:	xchg   edi,eax
  413eda:	cmp    edi,esi
	...
  413ef0:	pop    ss
  413ef1:	jmp    0x413ec2
  413ef3:	pop    ebp
  413ef4:	fcomi  st,st(4)
  413ef6:	dec    edx
  413ef7:	jl     0xe2cbe5d
  413efd:	clc    
  413efe:	cmp    al,0xf6
  413f00:	arpl   WORD PTR [edi],ax
  413f02:	mov    es,WORD PTR [eax+ebx*2+0x5c]
  413f06:	cmp    esi,DWORD PTR [esp+edi*2+0x16]
  413f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f0b:	or     esi,DWORD PTR [edx+ebp*1]
  413f0e:	pop    ss
  413f0f:	add    BYTE PTR [edx+esi*4-0x9448bb7],cl
  413f16:	mov    ch,0xf7
  413f18:	mov    WORD PTR [edi+ebx*8-0x532a73fd],ss
  413f1f:	das    
  413f20:	and    dl,BYTE PTR [esi-0x6b59fc21]
  413f26:	leave  
  413f27:	add    esp,DWORD PTR [esi+0x1903d994]
  413f2d:	pop    eax
  413f2e:	cmp    edx,esp
  413f30:	adc    BYTE PTR [eax],bl
  413f32:	xor    al,0x2d
  413f34:	cli    
  413f35:	popf   
  413f36:	(bad)  
  413f37:	xor    al,0x78
  413f39:	pushf  
  413f3a:	cs scas eax,DWORD PTR es:[edi]
  413f3c:	out    0xac,eax
  413f3e:	(bad)  
  413f3f:	adc    BYTE PTR [esp+edx*4-0x6da0bc16],cl
  413f46:	or     bh,BYTE PTR [edi-0x3d477995]
  413f4c:	retf   
  413f4d:	sahf   
  413f4e:	jl     0x413f63
  413f50:	mov    ah,0xf0
  413f52:	leave  
  413f53:	xor    al,0x0
	...
  413f65:	add    BYTE PTR [eax],al
  413f67:	add    BYTE PTR [edx+0x8871009],bh
  413f6d:	test   eax,0x44aa34d6
  413f72:	xor    DWORD PTR [esp+ebx*4],ebp
  413f75:	push   0xffffffde
  413f77:	xor    al,0x4
  413f79:	sbb    al,dl
  413f7b:	sub    al,0x92
  413f7d:	popf   
  413f7e:	pop    ecx
  413f7f:	add    al,0x8b
  413f81:	out    0xaf,eax
  413f83:	sub    al,0x82
  413f85:	popf   
  413f86:	mov    esi,0x3c9d87ae
  413f8b:	or     al,0x64
  413f8d:	lods   al,BYTE PTR ds:[esi]
  413f8e:	lods   al,BYTE PTR ds:[esi]
  413f8f:	xor    al,0x6a
  413f91:	popf   
  413f92:	pop    esp
  413f93:	xor    ebx,DWORD PTR [edx-0x63]
  413f96:	sahf   
  413f97:	sub    esi,DWORD PTR ds:0x52348676
  413f9d:	push   edi
  413f9e:	xchg   DWORD PTR [eax],ebp
  413fa0:	sbb    ebx,DWORD PTR [ebp-0x64d4c804]
  413fa6:	or     bl,bl
  413fa8:	(bad)  
  413fa9:	xchg   esp,eax
  413faa:	mov    edi,0x5b948bab
  413faf:	jb     0x414024
  413fb1:	adc    al,0xcd
  413fb3:	pop    ecx
  413fb4:	jo     0x413f54
  413fb6:	cmc    
  413fb7:	ficomp DWORD PTR fs:[eax-0x731db1a8]
  413fbe:	cmc    
  413fbf:	mov    esp,0xdbe9ac93
  413fc4:	(bad)  
  413fc5:	xchg   esp,eax
  413fc6:	add    DWORD PTR [ecx],ebp
  413fc8:	nop
  413fc9:	pop    ss
  413fca:	(bad)
	...
  413fde:	add    BYTE PTR [eax],al
  413fe0:	(bad)  
  413fe1:	xchg   esp,eax
  413fe2:	int    0xac
  413fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe5:	popf   
  413fe6:	cmc    
  413fe7:	jmp    0x1d8d157b
  413fec:	mov    al,ds:0x25e90896
  413ff1:	popf   
  413ff2:	pop    edi
  413ff3:	jmp    0xe9a0dced
  413ff8:	or     bl,BYTE PTR [eax-0x4]
  413ffb:	cdq    
  413ffc:	adc    bl,BYTE PTR [eax]
  413ffe:	std    
  413fff:	idiv   BYTE PTR [edi-0x62]
  414002:	pop    eax
  414003:	out    0xe5,al
  414005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414006:	cmc    
  414007:	push   esp
  414008:	pop    esp
  414009:	mov    ch,0xbb
  41400b:	sti    
  41400c:	(bad)  
  41400d:	xchg   esp,eax
  41400e:	add    DWORD PTR [ecx+0x35e192d4],ebp
  414014:	sub    BYTE PTR [edx-0x6477d7c1],al
  41401a:	jnp    0x413ff5
  41401c:	xchg   edi,eax
  41401d:	mov    WORD PTR [edx],fs
  41401f:	scas   al,BYTE PTR es:[edi]
  414020:	mov    edi,0x1574d90e
  414025:	test   al,0xfd
  414027:	sahf   
  414028:	lahf   
  414029:	dec    ebx
  41402a:	pop    edx
  41402b:	or     DWORD PTR [esi+0x6e],0x209f8ef5
  414032:	sbb    al,0x0
  414034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414035:	js     0x414083
  414037:	sub    al,dl
  414039:	add    BYTE PTR [di+0x5fb5],0xf6
  41403f:	jmp    DWORD PTR [edx+0xf7e51d]
	...
  414055:	add    BYTE PTR [eax],al
  414057:	add    BYTE PTR [edx+0x3175f667],dh
  41405d:	addr16 jl 0x414068
  414060:	int    0x43
  414062:	repz inc edx
  414065:	addr16 mov esp,0xf667caf0
  41406b:	call   0x37ee75
  414070:	ret    0xfdcd
  414073:	jmp    0x4140e1
  414075:	addr16 jl 0x414074
  414078:	jge    0x414051
  41407a:	pop    ss
  41407b:	add    ch,dh
  41407d:	pop    eax
  41407e:	(bad)  
  41407f:	adc    ch,ah
  414081:	mov    esp,0x4c66ec82
  414086:	cdq    
  414087:	push   edi
  414088:	xchg   edx,eax
  414089:	fld    QWORD PTR [ecx]
  41408b:	call   0x37dea4
  414090:	scas   al,BYTE PTR es:[edi]
  414091:	push   edi
  414092:	jl     0x414099
  414094:	add    bl,BYTE PTR [ecx-0x39]
  414097:	sbb    al,0xb5
  414099:	sbb    BYTE PTR [esp+edx*4+0x1e],cl
  41409d:	in     al,0x11
  41409f:	psubq  mm1,mm6
  4140a2:	push   es
  4140a3:	push   eax
  4140a4:	mov    dl,0x1d
  4140a6:	dec    esi
  4140a7:	push   cs
  4140a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a9:	xchg   edi,eax
  4140aa:	mov    esi,0x6c77047
  4140af:	mov    dh,0xaa
  4140b1:	xchg   esp,eax
  4140b2:	pop    eax
  4140b3:	psubq  mm1,mm6
  4140b6:	add    dl,BYTE PTR [eax+0x62]
  4140b9:	sbb    eax,0xa4e
	...
  4140ce:	add    BYTE PTR [eax],al
  4140d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140d1:	xchg   edi,eax
  4140d2:	mov    esi,0xd9b48c47
  4140d7:	push   cs
  4140d8:	sbb    dh,BYTE PTR [edx-0xc]
  4140db:	dec    edi
  4140dc:	fwait
  4140dd:	pop    edx
  4140de:	ret    0xdc05
  4140e1:	stos   BYTE PTR es:[edi],al
  4140e2:	jb     0x41412a
  4140e4:	nop
  4140e5:	jge    0x414120
  4140e7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4140e9:	jg     0x4140a9
  4140eb:	inc    eax
  4140ec:	mov    WORD PTR [eax],fs
  4140ee:	rcr    BYTE PTR [ebx+0x104445bc],0x8c
  4140f5:	lods   eax,DWORD PTR ds:[esi]
  4140f6:	mov    es,ebx
  4140f8:	pop    eax
  4140f9:	cs mov eax,0xb4d98c1f
  4140ff:	(bad)  
  414100:	jns    0x4140c3
  414102:	cmp    dh,BYTE PTR [esp+ebx*4+0x55]
  414106:	or     BYTE PTR [esi],dh
  414108:	repz imul esi,esi,0x750760bf
  41410f:	inc    esp
  414110:	add    al,0x7a
  414112:	mov    al,0x7
  414114:	fcomi  st,st(7)
  414116:	add    eax,ebp
  414118:	inc    esi
  414119:	iret   
  41411a:	cmp    bh,dh
  41411c:	retf   
  41411d:	pop    ss
  41411e:	popf   
  41411f:	(bad)  
  414120:	cmp    DWORD PTR [ebp-0x5d915fef],esi
  414126:	aaa    
  414127:	mov    WORD PTR [ecx+0x49],cs
  41412a:	fsin   
  41412c:	and    DWORD PTR [ebp-0x45916bec],edx
  414132:	aaa    
  414133:	inc    BYTE PTR [eax]
	...
  414145:	add    BYTE PTR [eax],al
  414147:	add    BYTE PTR [ecx],ah
  414149:	and    eax,0xd5747437
  41414e:	jbe    0x414171
  414150:	mov    edx,ebx
  414152:	aaa    
  414153:	je     0x414179
  414155:	les    esp,FWORD PTR [edi+0x13e37b24]
  41415b:	das    
  41415c:	jae    0x4141bf
  41415e:	hlt    
  41415f:	(bad)  
  414160:	loope  0x4140f6
  414162:	pop    es
  414163:	sbb    al,0x7e
  414165:	jbe    0x4140fd
  414167:	xor    DWORD PTR [edx+0x20],ebx
  41416a:	jae    0x41419d
  41416c:	fdivr  DWORD PTR [edi+eax*4-0x62]
  414170:	ins    DWORD PTR es:[edi],dx
  414171:	cdq    
  414172:	mov    ?,WORD PTR [edi-0x38]
  414175:	clc    
  414176:	rdtsc  
  414178:	sar    BYTE PTR [edi+eax*4-0x2e],0x6d
  41417d:	cdq    
  41417e:	xor    WORD PTR [eax-0x6c489180],sp
  414185:	cdq    
  414186:	fmul   QWORD PTR [ebx]
  414188:	and    al,0x71
  41418a:	add    DWORD PTR [ecx],esi
  41418c:	adc    bl,BYTE PTR [edx+0x5ff397dc]
  414192:	add    al,0x31
  414194:	add    bh,BYTE PTR [edx]
  414196:	cmp    BYTE PTR [esi-0x69],al
  414199:	xchg   esp,eax
  41419a:	xchg   esp,eax
  41419b:	jl     0x414184
  41419d:	adc    ebp,DWORD PTR [eax+ebp*1]
  4141a0:	ficomp WORD PTR [ecx+0x7c58312e]
  4141a6:	fs xchg ebx,ebx
  4141a9:	popf   
  4141aa:	push   ds
  4141ab:	xor    DWORD PTR [eax],eax
	...
  4141bd:	add    BYTE PTR [eax],al
  4141bf:	add    BYTE PTR [ebx-0x67],al
  4141c2:	pushf  
  4141c3:	sti    
  4141c4:	mov    bl,0x3c
  4141c6:	pop    esp
  4141c7:	xor    edx,eax
  4141c9:	cdq    
  4141ca:	jl     0x4141d7
  4141cc:	or     DWORD PTR [eax],edx
  4141ce:	loopne 0x4141fb
  4141d0:	mov    dl,0x99
  4141d2:	(bad)  
  4141d3:	xor    BYTE PTR [eax],ah
  4141d5:	mov    dh,ch
  4141d7:	mov    dh,0x8b
  4141d9:	lods   al,BYTE PTR ds:[esi]
  4141da:	gs pop esi
  4141dc:	call   0x4794:0x26044999
  4141e3:	xor    DWORD PTR [esi+0x87edf94],ecx
  4141e9:	xchg   esp,eax
  4141ea:	mov    ebx,0x8447a30
  4141ef:	inc    ebx
  4141f0:	mov    ebp,0x9d97b9a
  4141f5:	cdq    
  4141f6:	pop    edi
  4141f7:	jmp    0xe959ad83
  4141fc:	(bad)  
  4141fd:	ror    DWORD PTR [ebx-0xa656767],1
  414203:	stc    
  414204:	(bad)  
  414205:	xchg   esp,eax
  414206:	or     BYTE PTR [esi+0x7ef9a50a],ch
  41420c:	jl     0x4141a1
  41420e:	or     cl,ch
  414210:	(bad)  
  414211:	ror    DWORD PTR [ebx-0xa659f8f],1
  414217:	jmp    0x2649d6ab
  41421c:	adc    bl,BYTE PTR [ebp-0x66a3a907]
  414222:	cmc    
  414223:	jmp    0x414228
	...
  414238:	(bad)  
  414239:	or     eax,0x8380e15c
  41423e:	(bad)  
  41423f:	jmp    0x3b3a52be
  414244:	mov    esp,0x125c589a
  414249:	lods   eax,DWORD PTR ds:[esi]
  41424a:	stc    
  41424b:	es pushf 
  41424d:	dec    ecx
  41424e:	and    DWORD PTR [edi+esi*2-0x5a],0xfffffff5
  414253:	push   ss
  414254:	mov    edi,0x7cf97b99
  414259:	and    BYTE PTR [esi+eax*1],al
  41425c:	cli    
  41425d:	nop
  41425e:	(bad)  
  41425f:	jmp    0xf65162e0
  414264:	fcom   DWORD PTR [ecx+ecx*4+0x2c]
  414268:	xchg   DWORD PTR [esi-0x7677190b],esp
  41426e:	mov    esp,ss
  414270:	nop
  414271:	xchg   esp,eax
  414272:	or     BYTE PTR [edx+0x1d],ch
  414275:	lods   eax,DWORD PTR ds:[esi]
  414276:	stc    
  414277:	into   
  414278:	mov    ebx,0xf1000697
  41427d:	js     0x414274
  41427f:	jmp    DWORD PTR [ebp-0x4]
  414282:	in     eax,0x71
  414284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414285:	nop
  414286:	add    DWORD PTR [ebp-0x9978b],0xffffffa5
  41428d:	js     0x41425e
  41428f:	pcmpgtw mm2,QWORD PTR [ebx+ecx*4+0x608971c0]
  414297:	jmp    DWORD PTR [ecx+edx*8+0x8cf5]
	...
  4142ae:	add    BYTE PTR [eax],al
  4142b0:	mov    al,0x90
  4142b2:	hlt    
  4142b3:	(bad)  
  4142b4:	mov    edx,0x2ac5edc0
  4142b9:	xchg   esp,eax
  4142ba:	or     BYTE PTR [ebp-0x5073680b],al
  4142c0:	xor    eax,0xb0c70894
  4142c5:	ins    BYTE PTR es:[edi],dx
  4142c6:	cli    
  4142c7:	(bad)  
  4142c8:	mov    edx,0x1bef088d
  4142cd:	stc    
  4142ce:	add    dh,BYTE PTR [edx+0x34]
  4142d1:	xchg   esp,eax
  4142d2:	add    DWORD PTR [ebp-0x9941b],0x15
  4142d9:	jl     0x414282
  4142db:	pmaddwd mm2,QWORD PTR [ebx-0x55fe3f75]
  4142e2:	into   
  4142e3:	test   DWORD PTR [ecx-0x1c00099d],edx
  4142e9:	xchg   ebx,eax
  4142ea:	in     eax,0xbe
  4142ec:	or     eax,0xb54177ad
  4142f1:	adc    al,0x8d
  4142f3:	add    BYTE PTR [ebp-0x72af0999],cl
  4142f9:	adc    eax,DWORD PTR [edi]
  4142fb:	add    BYTE PTR [ebp-0x758b49f4],dh
  414301:	dec    edi
  414302:	mov    esp,fs
  414304:	mov    dh,0x66
  414306:	test   BYTE PTR [edi],0x8c
  414309:	lods   eax,DWORD PTR ds:[esi]
  41430a:	push   ss
  41430b:	mov    ebp,0x40ba6ef4
  414310:	mov    WORD PTR [eax],fs
  414312:	cmp    bh,0x0
	...
  414325:	add    BYTE PTR [eax],al
  414327:	add    BYTE PTR [ebx+0x644f26d6],al
  41432d:	dec    ecx
  41432e:	cmc    
  41432f:	jmp    FWORD PTR [ebx+0x30]
  414332:	dec    ecx
  414333:	je     0x4142f3
  414335:	sub    al,0x78
  414337:	jecxz  0x414398
  414339:	mul    BYTE PTR [esi]
  41433b:	push   es
  41433c:	mov    WORD PTR [esi],cs
  41433e:	fs je  0x4143b1
  414341:	xchg   ebx,eax
  414342:	or     al,0xff
  414344:	mov    ecx,0xa07426a1
  414349:	push   ss
  41434a:	jo     0x414333
  41434c:	aas    
  41434d:	push   ds
  41434e:	es (bad) 
  414350:	loope  0x41436a
  414352:	cmp    bh,dh
  414354:	and    ebp,DWORD PTR [esi]
  414356:	mov    al,0xf
  414358:	sbb    eax,DWORD PTR [eax]
  41435a:	repnz adc edi,DWORD PTR cs:[esi]
  41435e:	adc    DWORD PTR [edx-0x15d9b9f7],ebx
  414364:	scas   al,BYTE PTR es:[edi]
  414365:	ret    
  414366:	or     al,0xff
  414368:	sub    DWORD PTR [ecx+0x5e987426],0x65dfe770
  414372:	es (bad) 
  414374:	sbb    DWORD PTR [ecx+0x75dbfe3a],eax
  41437a:	mov    al,0xf
  41437c:	shl    DWORD PTR [edi],cl
  41437e:	sub    eax,0x1185cbf2
  414383:	jbe    0x414346
  414385:	lea    esp,[esi]
  414387:	inc    BYTE PTR [ecx]
  414389:	mov    DWORD PTR [edx],edi
  41438b:	inc    BYTE PTR [eax]
	...
  41439d:	add    BYTE PTR [eax],al
  41439f:	add    BYTE PTR [ebx-0x73f1656c],dh
  4143a5:	lods   eax,DWORD PTR ds:[esi]
  4143a6:	xor    al,0xc1
  4143a8:	js     0x41433e
  4143aa:	(bad)  
  4143ac:	push   es
  4143ad:	test   al,0x62
  4143af:	dec    eax
  4143b0:	xchg   edi,eax
  4143b1:	adc    bl,BYTE PTR ds:0xdf53d7e0
  4143b7:	add    edi,eax
  4143b9:	push   ebp
  4143ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143bb:	(bad)  
  4143bc:	ja     0x414353
  4143be:	fild   WORD PTR [ebx]
  4143c0:	mov    WORD PTR [ecx-0x61],gs
  4143c3:	aam    0xdb
  4143c5:	inc    esp
  4143c6:	push   esp
  4143c7:	xlat   BYTE PTR ds:[ebx]
  4143c8:	addr16 inc ebx
  4143ca:	scas   al,BYTE PTR es:[edi]
  4143cb:	pop    ss
  4143cc:	test   al,0x48
  4143ce:	and    BYTE PTR [ecx+ecx*1],al
  4143d1:	aad    0x18
  4143d3:	add    dh,BYTE PTR [edi]
  4143d5:	jb     0x414439
  4143d7:	scas   eax,DWORD PTR es:[edi]
  4143d8:	inc    edi
  4143d9:	xchg   ebp,eax
  4143da:	hlt    
  4143db:	add    DWORD PTR [edi],esp
  4143dd:	jp     0x4143f6
  4143df:	mov    ah,0x3e
  4143e1:	push   ebp
  4143e2:	fild   QWORD PTR [eax+eiz*4]
  4143e5:	cwde   
  4143e6:	data16 mov bh,0x8b
  4143e9:	lods   al,BYTE PTR ds:[esi]
  4143ea:	sub    ebx,DWORD PTR [edi+0x1a]
  4143ed:	xchg   esi,eax
  4143ee:	jp     0x4143c7
  4143f0:	pop    ss
  4143f1:	or     dh,dl
  4143f3:	sub    al,0x80
  4143f5:	cwde   
  4143f6:	inc    esi
  4143f7:	ror    BYTE PTR [ebx-0x73f7de35],cl
  4143fd:	aas    
  4143fe:	jp     0x414420
  414400:	push   cs
  414401:	sar    DWORD PTR [ebx],1
  414403:	call   0x0:0x0
	...
  414416:	add    BYTE PTR [eax],al
  414418:	jmp    0x414445
  41441a:	test   DWORD PTR [eax+ebx*2],ebp
  41441d:	mov    WORD PTR [edi],ss
  41441f:	leave  
  414420:	jnp    0x4143b7
  414422:	push   ss
  414423:	jnp    0x41446d
  414425:	cwde   
  414426:	push   ds
  414427:	mov    bh,0x93
  414429:	lods   al,BYTE PTR ds:[esi]
  41442a:	jo     0x414459
  41442c:	ret    0x9795
  41442f:	mov    al,ds:0x2cdf532b
  414434:	js     0x414490
  414436:	or     BYTE PTR [eax+0x74f695ce],ah
  41443c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41443d:	lods   eax,DWORD PTR ds:[esi]
  41443e:	xchg   ebx,eax
  41443f:	loop   0x4144a9
  414441:	xchg   esi,eax
  414442:	pusha  
  414443:	dec    edx
  414444:	fcom   DWORD PTR [eax+ecx*1+0x41]
  414448:	mov    ds:0xa7e9474b,al
  41444d:	add    BYTE PTR [edi],ch
  41444f:	(bad)  
  414450:	test   al,0x45
  414452:	pop    eax
  414453:	push   ecx
  414454:	add    BYTE PTR ds:0x60b8e947,ah
  41445a:	xor    ah,BYTE PTR [eax]
  41445c:	dec    edi
  41445d:	xchg   ebp,eax
  41445e:	neg    BYTE PTR [eax+ebx*2]
  414461:	lods   eax,DWORD PTR ds:[esi]
  414462:	adc    BYTE PTR [ebp-0x4a1f6960],bl
  414468:	sub    eax,0x8803f596
  41446d:	sub    al,0xd6
  41446f:	clc    
  414470:	dec    esi
  414471:	xchg   ebp,eax
  414472:	ins    DWORD PTR es:[edi],dx
  414473:	cmp    edi,esi
  414475:	push   ebx
  414476:	or     BYTE PTR [ecx],al
  414478:	mov    ss,WORD PTR [eax+ecx*1+0x69]
	...
  41448f:	add    BYTE PTR [edi+0x68662bb7],al
  414495:	mov    cl,al
  414497:	aad    0x2f
  414499:	sub    eax,0x94ced8ee
  41449e:	inc    ebp
  41449f:	inc    ecx
  4144a0:	outs   dx,DWORD PTR gs:[esi]
  4144a2:	cmc    
  4144a3:	inc    esi
  4144a4:	fild   WORD PTR [ebp+esi*8-0xc]
  4144a8:	in     eax,0x4b
  4144aa:	inc    edi
  4144ab:	jmp    0x41416568
  4144b0:	lock cdq 
  4144b2:	cmc    
  4144b3:	es ja  0x4144a9
  4144b6:	sub    bl,BYTE PTR [esi]
  4144b8:	mov    al,ds:0xce99a92d
  4144bd:	xchg   esp,eax
  4144be:	not    ah
  4144c0:	mov    ch,0x4b
  4144c2:	inc    edi
  4144c3:	add    BYTE PTR [ebp-0x62f78399],ah
  4144c9:	mov    al,0xf2
  4144cb:	jmp    DWORD PTR [edx-0x68980a05]
  4144d1:	loope  0x41451b
  4144d3:	add    BYTE PTR [edx+0x64492fa2],dh
  4144d9:	nop
  4144da:	cmc    
  4144db:	jne    0x41454a
  4144dd:	mov    al,0xb8
  4144df:	sti    
  4144e0:	push   edx
  4144e1:	rcr    BYTE PTR [edi+0x0],0xdd
  4144e5:	pusha  
  4144e6:	js     0x414529
  4144e8:	gs mov edi,0x59ac3a3c
  4144ee:	cmc    
  4144ef:	(bad)  
  4144f0:	cwde   
  4144f1:	nop
  4144f2:	in     eax,dx
  4144f3:	pushf  
	...
  414508:	cs shl dh,0xff
  41450c:	js     0x4144ca
  41450e:	div    BYTE PTR [ebp+0x2d]
  414511:	mov    al,0xdd
  414513:	pop    ds
  414514:	adc    al,al
  414516:	rol    dl,0x29
  414519:	cwde   
  41451a:	pop    ebx
  41451b:	mov    eax,DWORD PTR [ecx]
  41451d:	sbb    cl,cl
  41451f:	hlt    
  414520:	mov    ds:0x356af6bf,eax
  414525:	xor    dl,BYTE PTR [esi-0x1]
  414528:	cmp    BYTE PTR [eax-0x40ed8613],dl
  41452e:	test   BYTE PTR [ecx+0x5cebc38],0xf4
  414535:	cmp    BYTE PTR [eax+0x0],cl
  414538:	out    0x97,eax
  41453a:	or     BYTE PTR [eax],al
  41453c:	pusha  
  41453d:	adc    eax,0xbfa2fefe
  414542:	inc    ebp
  414543:	push   0x898e9
  414548:	jge    0x414505
  41454a:	add    al,0x0
  41454c:	in     eax,0x2f
  41454e:	cwde   
  41454f:	jb     0x4144dd
  414551:	cmp    al,0x9
  414553:	push   0xffcc3009
  414558:	xor    ebx,DWORD PTR [edi-0x6d73bf55]
  41455e:	clc    
  41455f:	cmp    DWORD PTR [ebp+0x3c],edx
  414562:	or     edi,edi
  414564:	sbb    DWORD PTR [ebp+0x11],esi
  414567:	fucomi st,st(7)
  414569:	jp     0x41458d
  41456b:	add    BYTE PTR [bx+si],al
	...
  41457e:	add    BYTE PTR [eax],al
  414580:	std    
  414581:	out    dx,eax
  414582:	retf   
  414583:	push   ebx
  414585:	add    BYTE PTR [eax+eax*2+0x602ed58c],bh
  41458c:	int    0x7d
  41458e:	xchg   ecx,eax
  41458f:	add    DWORD PTR [ebp+edi*2+0x75e1fe89],ecx
  414596:	adc    DWORD PTR [edi-0x73ddbdd1],edi
  41459c:	adc    DWORD PTR [edx],esi
  41459e:	pop    ds
  41459f:	(bad)  
  4145a0:	push   ebx
  4145a1:	int    0x14
  4145a3:	mov    ebx,DWORD PTR [ecx-0x7638f683]
  4145a9:	jl     0x414557
  4145ab:	inc    eax
  4145ac:	mov    WORD PTR [esi+0x9],?
  4145af:	add    BYTE PTR [eax+eax*1+0xa2af689],cl
  4145b6:	and    ecx,DWORD PTR [edi-0x4c]
  4145b9:	jns    0x4145c7
  4145bb:	add    BYTE PTR [ebp+eiz*8+0x7d8c0c8e],cl
  4145c2:	xchg   ecx,eax
  4145c3:	nop
  4145c4:	jle    0x414602
  4145c6:	or     DWORD PTR [eax+0x9],ebp
  4145c9:	outs   dx,DWORD PTR ds:[esi]
  4145ca:	int3   
  4145cb:	push   DWORD PTR [ebx-0x21]
  4145ce:	lods   al,BYTE PTR ds:[esi]
  4145cf:	inc    eax
  4145d0:	mov    edx,ss
  4145d2:	clc    
  4145d3:	cmp    DWORD PTR [ebp+0x3c],edx
  4145d6:	or     edi,edi
  4145d8:	pop    ecx
  4145d9:	jne    0x4145ec
  4145db:	jnp    0x41460c
  4145dd:	xchg   esp,eax
  4145de:	sub    ch,BYTE PTR cs:[ebx+0x25]
  4145e2:	xchg   ecx,eax
  4145e3:	les    eax,FWORD PTR [eax]
	...
  4145f5:	add    BYTE PTR [eax],al
  4145f7:	add    bl,cl
  4145f9:	cli    
  4145fa:	fs mov ch,0x4c
  4145fd:	xchg   esp,eax
  4145fe:	xchg   DWORD PTR ds:0x9bdfd52c,esp
  414604:	lea    edx,[edi+ebx*8-0x17f7557d]
  41460b:	sbb    eax,DWORD PTR [ebx+0x37]
  41460e:	out    0x29,al
  414610:	or     BYTE PTR [ecx],bl
  414612:	(bad)  
  414613:	sub    dl,BYTE PTR [edx-0x48e3d06e]
  414619:	lahf   
  41461a:	fild   WORD PTR [ebx]
  41461c:	or     DWORD PTR [eax],0xffffffc4
  41461f:	sub    DWORD PTR [eax],eax
  414621:	popf   
  414622:	xlat   BYTE PTR ds:[ebx]
  414623:	xor    edx,DWORD PTR [ecx+0x4d3bb691]
  414629:	cdq    
  41462a:	(bad)  
  41462c:	push   ss
  41462d:	and    DWORD PTR [edx+0x40],0xcc2fea57
  414634:	jmp    0x41460e
  414636:	sahf   
  414637:	les    ecx,FWORD PTR [ebx-0x76]
  41463a:	adc    DWORD PTR [ebx],eax
  41463c:	dec    edi
  41463d:	xchg   edx,eax
  41463e:	scas   al,BYTE PTR es:[edi]
  41463f:	mov    edi,0x3df9537
  414644:	mov    WORD PTR [ecx+0x55],ss
  414647:	mov    dh,0xcc
  414649:	xchg   esp,eax
  41464a:	jle    0x4145fb
  41464c:	mov    esp,DWORD PTR [ecx]
  41464e:	in     al,dx
  41464f:	loope  0x4145f0
  414651:	rcr    edi,cl
  414653:	lahf   
  414654:	in     al,dx
  414655:	(bad)  
  414656:	fild   WORD PTR [ebx]
  414658:	mov    WORD PTR [edi+edx*8],ss
  41465b:	add    eax,0x0
	...
  414670:	mov    WORD PTR [eax],cs
  414672:	call   0x57ddc69f
  414677:	jbe    0x414614
  414679:	xchg   ecx,eax
  41467a:	sbb    esp,DWORD PTR ss:[ebx]
  41467d:	xchg   ebp,eax
  41467e:	or     cl,ch
  414680:	(bad)  
  414681:	jl     0x414655
  414683:	add    esp,DWORD PTR [ebp-0x28630a6e]
  414689:	jns    0x41460c
  41468b:	cld    
  41468c:	je     0x414620
  41468e:	test   eax,0x8d4f3cb
  414693:	test   DWORD PTR [eax+ecx*8+0x8],esp
  414697:	jmp    0x25c2db2b
  41469c:	in     al,dx
  41469d:	xchg   edx,eax
  41469e:	cmp    ebp,ecx
  4146a0:	(bad)  
  4146a1:	xchg   esp,eax
  4146a2:	or     BYTE PTR [edi+edi*4-0x301ed707],dl
  4146a9:	xchg   ecx,eax
  4146aa:	ins    DWORD PTR es:[edi],dx
  4146ab:	sar    BYTE PTR [ecx+edx*8+0x1c2c3908],0x2b
  4146b3:	jmp    0xc649db47
  4146b8:	and    bl,BYTE PTR [ecx-0x2df1290b]
  4146be:	ss sub eax,0xce799148
  4146c4:	adc    BYTE PTR [ecx+0x5a571d18],cl
  4146ca:	dec    ebx
  4146cb:	popf   
  4146cc:	mov    ss,WORD PTR [eax+ecx*1-0xa5b5f17]
  4146d3:	aam    0x0
	...
  4146e5:	add    BYTE PTR [eax],al
  4146e7:	add    BYTE PTR [ecx],dh
  4146e9:	add    eax,0xc864e948
  4146ee:	cs cmc 
  4146f0:	dec    esi
  4146f1:	xchg   ecx,eax
  4146f2:	in     eax,dx
  4146f3:	jge    0x414686
  4146f5:	xchg   ecx,eax
  4146f6:	cmc    
  4146f7:	push   0x5b
  4146f9:	test   eax,0x1e42aee1
  4146fe:	in     al,0x72
  414700:	ficomp DWORD PTR [ecx+eax*4+0x7a919fac]
  414707:	loope  0x41477d
  414709:	adc    DWORD PTR [ecx+0x894e500],esi
  41470f:	jmp    DWORD PTR [edi]
  414711:	mov    DWORD PTR [esi+0x895b180],eax
  414717:	add    BYTE PTR [edx+0x658f0547],ch
  41471d:	add    esi,esi
  41471f:	push   DWORD PTR [ebp+0x21263417]
  414725:	push   esi
  414726:	cmc    
  414727:	jmp    DWORD PTR [ecx]
  414729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41472a:	cmc    
  41472b:	xor    eax,0x4840c7
  414730:	stos   BYTE PTR es:[edi],al
  414731:	jle    0x41475e
  414733:	je     0x414729
  414735:	xchg   esp,eax
  414736:	loopne 0x4146e9
  414738:	mov    edi,0xa5b8f6bb
  41473d:	xchg   esp,eax
  41473e:	or     BYTE PTR [eax],al
  414740:	enter  0x29d2,0x0
  414744:	rol    DWORD PTR [edi],1
  414746:	or     eax,0x8946500
  41474b:	add    DWORD PTR [eax],0x0
	...
  41475e:	add    BYTE PTR [eax],al
  414760:	and    dl,BYTE PTR [ebp-0x788ac077]
  414766:	mov    WORD PTR [edi],?
  414768:	sbb    bh,BYTE PTR [eax-0x434f740a]
  41476e:	push   esi
  41476f:	leave  
  414770:	daa    
  414771:	xchg   ebp,eax
  414772:	or     BYTE PTR [ebp-0x42],dl
  414775:	lods   al,BYTE PTR ds:[esi]
  414776:	mov    al,ah
  414778:	sbb    DWORD PTR [edi+0x45],ebx
  41477b:	pop    eax
  41477c:	lea    eax,[esi-0x3]
  41477f:	inc    eax
  414780:	and    eax,0xf60177bc
  414785:	mov    bh,0x82
  414787:	leave  
  414788:	scas   al,BYTE PTR es:[edi]
  414789:	shl    DWORD PTR [edx],1
  41478b:	imul   BYTE PTR [esi+0x4afa6dd1]
  414791:	jbe    0x41479b
  414793:	mov    edi,DWORD PTR [edi+eax*1-0xd7303b3]
  41479a:	xor    ebp,edx
  41479c:	xchg   esi,eax
  41479d:	repnz xor eax,DWORD PTR [edx]
  4147a0:	retf   0x3402
  4147a3:	dec    edi
  4147a4:	pop    ss
  4147a5:	lds    edx,FWORD PTR [edi+edi*8]
  4147a8:	xchg   edi,eax
  4147a9:	jge    0x4147b4
  4147ab:	mov    eax,ebp
  4147ad:	and    eax,0xbb8fc872
  4147b2:	jno    0x41477c
  4147b4:	retf   
  4147b5:	inc    eax
  4147b6:	sub    eax,0xca94182
  4147bb:	jne    0x414769
  4147bd:	aas    
  4147be:	xor    al,0xc2
  4147c0:	pop    ecx
  4147c1:	add    dl,BYTE PTR [ecx]
  4147c3:	dec    edi
	...
  4147d8:	inc    esp
  4147d9:	and    eax,0x7d4cf783
  4147de:	and    DWORD PTR [ecx-0x73],esi
  4147e1:	mov    edx,0x85498a2d
  4147e6:	repnz mov edi,0x4128200
  4147ec:	xor    BYTE PTR [ebp+0x2b],0x7
  4147f0:	int3   
  4147f1:	std    
  4147f2:	loope  0x4147f3
  4147f4:	clc    
  4147f5:	dec    edi
  4147f6:	xor    al,0xc1
  4147f8:	nop
  4147f9:	jge    0x4147d3
  4147fb:	mov    dh,BYTE PTR [eax-0x6]
  4147fe:	xor    eax,0xc4adbff3
  414803:	addr16 dec esp
  414805:	xor    eax,0xab43ffc9
  41480a:	or     eax,ebx
  41480c:	inc    ebx
  41480d:	ds enter 0x8cf3,0x7d
  414812:	or     DWORD PTR [eax],eax
  414814:	xor    dh,BYTE PTR [bx+si+0x44]
  414818:	sub    BYTE PTR [ebp+0x1594742d],ch
  41481e:	or     cl,BYTE PTR ss:[ebp+edi*2-0x6b6b4078]
  414826:	adc    al,0x27
  414828:	sbb    BYTE PTR [edi+edx*2+0x5e8f9a8a],0x7c
  414830:	push   eax
  414831:	mov    WORD PTR [edi-0x11a0142d],ds
  414837:	es jmp 0x0:0x2fac1c
	...
  41484f:	add    dl,ah
  414851:	or     BYTE PTR [ebx+ebx*1],bh
  414854:	adc    DWORD PTR [edx+0x548703df],ebx
  41485a:	xchg   ebx,eax
  41485b:	bswap  ebx
  41485d:	or     BYTE PTR [eax],ch
  41485f:	cmp    BYTE PTR es:[eax-0x514ce451],cl
  414866:	push   es
  414867:	es mov dl,0x8
  41486a:	or     al,0x1b
  41486c:	pop    ds
  41486d:	call   0x1be8:0x8a303df
  414874:	pop    ds
  414875:	lods   eax,DWORD PTR ds:[esi]
  414876:	out    0x25,al
  414878:	push   cs
  414879:	adc    esp,edx
  41487b:	add    al,0x0
  41487d:	scas   eax,DWORD PTR es:[edi]
  41487e:	push   edi
  41487f:	out    0xff,al
  414881:	rcr    edi,cl
  414883:	and    al,0x0
  414885:	mov    edi,eax
  414887:	sbb    DWORD PTR [esi+0x2bf8df94],eax
  41488d:	or     ebp,ebp
  41488f:	push   0x3df948c
  414894:	pop    ebx
  414895:	or     BYTE PTR [esp+ebx*1+0x25aeade9],bh
  41489c:	push   ss
  41489d:	push   edx
  41489e:	dec    edx
  41489f:	cmp    ecx,DWORD PTR [ebp-0x67]
  4148a2:	(bad)  
  4148a4:	push   es
  4148a5:	sub    DWORD PTR [edi],0x88e4abcc
  4148ab:	les    ebp,FWORD PTR [ebx]
  4148ad:	xchg   cl,dh
  4148af:	add    cl,BYTE PTR [edi-0x72]
  4148b2:	or     BYTE PTR [esi+0x0],dh
	...
  4148c5:	add    BYTE PTR [eax],al
  4148c7:	add    bl,ch
  4148c9:	xchg   ebp,eax
  4148ca:	loopne 0x414904
  4148cc:	xchg   DWORD PTR [ebp-0x9f82c0b],ecx
  4148d2:	xor    DWORD PTR [ecx-0x23097232],0xfffffff7
  4148d9:	jne    0x4148d0
  4148db:	repnz test al,0x8e
  4148de:	(bad)
  4148e3:	test   al,0x8f
  4148e5:	lea    edi,[ebx-0x1f]
  4148e8:	ja     0x414967
  4148ea:	adc    DWORD PTR [esi],ebp
  4148ec:	test   eax,0xa7f17b8e
  4148f1:	inc    edx
  4148f2:	repz push ds
  4148f4:	imul   eax,DWORD PTR [ebp+0x7],0xbf948fe9
  4148fb:	sub    ecx,DWORD PTR [esp+edx*4+0x1284725b]
  414902:	int3   
  414903:	add    DWORD PTR [eax+0x675060e5],edi
  414909:	int    0x8
  41490b:	icebp  
  41490c:	fst    QWORD PTR [ecx+ecx*8+0x508b0e6]
  414913:	fidiv  WORD PTR [edx]
  414915:	xchg   ebp,eax
  414916:	loopne 0x4148bd
  414918:	xchg   edx,eax
  414919:	(bad)  
  41491a:	cmc    
  41491b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41491c:	xor    cl,BYTE PTR [ecx-0x6b7016f9]
  414922:	and    DWORD PTR [eax+esi*4],0xffffffdd
  414926:	pusha  
  414927:	sti    
  414928:	sub    edx,esp
  41492a:	or     cl,al
	...
  414940:	sar    BYTE PTR [ecx+0x4d44a6f5],cl
  414946:	jl     0x414913
  414948:	pop    edi
  414949:	adc    dh,BYTE PTR [ebx-0x6f]
  41494c:	lahf   
  41494d:	pop    es
  41494e:	pop    ds
  41494f:	add    ebx,DWORD PTR [eax+0x2800f5e4]
  414955:	test   ebp,ebp
  414957:	cmp    BYTE PTR [edx-0x48],al
  41495a:	test   BYTE PTR [ebx],0xe5
  41495d:	cmp    al,0xe
  41495f:	(bad)  
  414960:	push   0xf5fff5bc
  414965:	nop
  414966:	loopne 0x414929
  414968:	add    edi,DWORD PTR [eax-0x4ad7740a]
  41496e:	rol    dl,0xed
  414971:	nop
  414972:	pop    ebx
  414973:	mov    eax,DWORD PTR [ecx+0x64]
  414976:	inc    ebp
  414977:	pop    eax
  414978:	mov    ebp,0xe540f0be
  41497d:	mov    eax,0xb8a60177
  414982:	and    bl,bl
  414984:	jb     0x4149c4
  414986:	or     eax,0xf6b7f4e8
  41498b:	jmp    FWORD PTR [esi+0x3b8406d0]
  414991:	xchg   ecx,eax
  414992:	or     BYTE PTR [eax],al
  414994:	xchg   edx,eax
  414995:	ds or  eax,0xf59f11e8
  41499b:	jmp    FWORD PTR [esi-0x73fa8330]
  4149a1:	or     esi,esi
  4149a3:	inc    DWORD PTR [eax]
	...
  4149b5:	add    BYTE PTR [eax],al
  4149b7:	add    BYTE PTR [ebp-0x49],dh
  4149ba:	jl     0x4149c8
  4149bc:	bound  ebp,QWORD PTR [esi]
  4149be:	or     eax,0xf6b7c6e8
  4149c3:	inc    DWORD PTR [edx+0x2e]
  4149c6:	or     eax,0xf595c4e8
  4149cb:	call   FWORD PTR [esi-0x28]
  4149ce:	jl     0x4149d2
  4149d0:	dec    esi
  4149d1:	and    dh,dh
  4149d3:	jne    0x414a42
  4149d5:	shr    BYTE PTR [edx],0x1c
  4149d8:	repnz mov bh,0x2
  4149db:	rcr    BYTE PTR [eax-0x739c1e6e],0x22
  4149e2:	pop    DWORD PTR [edi]
  4149e4:	and    al,0xa7
  4149e6:	or     bh,bh
  4149e8:	sub    eax,DWORD PTR [edi+0x268e7449]
  4149ee:	scas   eax,DWORD PTR es:[edi]
  4149ef:	addr16 ret 0xcbba
  4149f3:	call   DWORD PTR [edx]
  4149f5:	add    DWORD PTR [ecx],0x299340e8
  4149fb:	(bad)  
  4149fc:	xchg   edi,eax
  4149fd:	mov    ebp,0x3fe7018f
  414a02:	sub    dh,BYTE PTR [esp+eax*4-0x2b]
  414a06:	adc    BYTE PTR [edx],bl
  414a08:	jmp    0x4149dc
  414a0a:	add    eax,0x267f59c0
  414a0f:	xor    ebx,ebx
  414a11:	dec    eax
  414a12:	add    eax,ebp
  414a14:	inc    eax
  414a15:	pop    ecx
  414a16:	sub    bh,dh
  414a18:	xchg   edi,eax
  414a19:	mov    ebp,0x18f
	...
  414a2e:	add    BYTE PTR [eax],al
  414a30:	mov    bh,0x53
  414a32:	sub    dh,BYTE PTR [esp+eax*4-0x6b]
  414a36:	adc    DWORD PTR [ebx+esi*4],edx
  414a39:	call   0x2b0c:0xa6cf78d
  414a40:	int3   
  414a41:	xchg   BYTE PTR [ecx+0x73],cl
  414a44:	jg     0x414a86
  414a46:	or     DWORD PTR [eax],eax
  414a48:	jl     0x414ac7
  414a4a:	sahf   
  414a4b:	or     eax,DWORD PTR [edi+0x7c]
  414a4e:	or     DWORD PTR [eax],eax
  414a50:	mov    WORD PTR [esi+0x0],fs
  414a53:	mov    ebx,0x97d8f
  414a58:	pop    es
  414a59:	ds mov dh,0xc8
  414a5c:	dec    esi
  414a5d:	test   DWORD PTR [ecx],ecx
  414a5f:	push   ebp
  414a60:	pop    ss
  414a61:	pop    ecx
  414a62:	mov    ecx,0x1404e457
  414a67:	aas    
  414a68:	mov    WORD PTR [ebp-0x65],es
  414a6b:	add    BYTE PTR [edi-0x6c],cl
  414a6e:	scas   al,BYTE PTR es:[edi]
  414a6f:	and    bh,BYTE PTR [eax-0x6c676968]
  414a75:	jl     0x414a38
  414a77:	and    dh,BYTE PTR [edx]
  414a79:	mov    ebp,edx
  414a7b:	inc    ebx
  414a7c:	mov    al,ds:0x97988eae
  414a81:	mov    edi,esp
  414a83:	or     esp,DWORD PTR [edi+eiz*4]
  414a86:	jle    0x414aaa
  414a88:	adc    bl,BYTE PTR [edi-0x74696761]
  414a8e:	aam    0xf
  414a90:	add    eax,DWORD PTR [ecx]
  414a92:	clc    
  414a93:	sub    eax,DWORD PTR [eax]
	...
  414aa5:	add    BYTE PTR [eax],al
  414aa7:	add    BYTE PTR [edi-0x3bdda175],cl
  414aad:	push   ebp
  414aae:	out    0x3,eax
  414ab0:	inc    ecx
  414ab1:	pop    ds
  414ab2:	pop    ebx
  414ab3:	xchg   bh,cl
  414ab5:	outs   dx,DWORD PTR ds:[esi]
  414ab6:	xchg   edx,eax
  414ab7:	mov    edx,0x1dc7ec4b
  414abc:	aad    0xd3
  414abe:	fistp  WORD PTR [ebx]
  414ac0:	cmp    eax,0x76222295
  414ac5:	outs   dx,DWORD PTR ds:[esi]
  414ac6:	pop    ss
  414ac7:	fimul  WORD PTR [esi-0x75]
  414aca:	push   ds
  414acb:	dec    edx
  414acc:	dec    eax
  414acd:	js     0x414aae
  414acf:	add    ecx,DWORD PTR [esp+edx*4-0x1c483784]
  414ad6:	pop    ss
  414ad7:	xor    bh,BYTE PTR [edi-0x75]
  414ada:	inc    BYTE PTR [ebp-0x672087f0]
  414ae0:	mov    ds:0xd3302417,eax
  414ae5:	jl     0x414aa6
  414ae7:	clc    
  414ae8:	jp     0x414a74
  414aea:	bound  ebx,QWORD PTR [edi+0xb5c9567]
  414af0:	sbb    eax,edx
  414af2:	(bad)  [ebx+ebp*2+0x5a20db64]
  414af9:	push   ss
  414afa:	or     BYTE PTR [esp+ebx*4],dh
  414afd:	mov    DWORD PTR [esi],eax
  414aff:	gs push ds
  414b01:	mov    dh,ch
  414b03:	jmp    0x3a3a1c1a
  414b08:	ins    DWORD PTR es:[edi],dx
  414b09:	add    ch,ah
  414b0b:	add    DWORD PTR [eax],0x0
	...
  414b1d:	add    BYTE PTR [eax],al
  414b1f:	add    bl,ch
  414b21:	mov    dh,ch
  414b23:	mov    ss,WORD PTR [ecx]
  414b25:	add    BYTE PTR [edi],0xfc
  414b28:	add    cl,BYTE PTR [ebx+0x6a]
  414b2b:	es dec edi
  414b2d:	mov    ah,dl
  414b2f:	adc    ch,al
  414b31:	shr    ah,1
  414b33:	jecxz  0x414ac4
  414b35:	xchg   esp,eax
  414b36:	or     BYTE PTR [esi],ch
  414b38:	retf   
  414b39:	jno    0x414b43
  414b3b:	jmp    0xacc4dfcf
  414b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b41:	fprem1 
  414b43:	aam    0xbb
  414b45:	loop   0x414b27
  414b47:	aad    0xc9
  414b49:	mov    dh,ch
  414b4b:	repnz dec edi
  414b4d:	add    eax,0x71f36a19
  414b52:	or     BYTE PTR [ebp+0x117b8999],dh
  414b58:	jo     0x414b14
  414b5a:	repz push ds
  414b5c:	ins    DWORD PTR es:[edi],dx
  414b5d:	push   ds
  414b5e:	rcl    BYTE PTR [esi],1
  414b60:	sbb    esi,DWORD PTR [edx-0x20]
  414b63:	jbe    0x414b09
  414b65:	mov    dh,ch
  414b67:	repnz pusha 
  414b69:	add    BYTE PTR [edx+ebp*2],bl
  414b6c:	sti    
  414b6d:	jne    0x414b77
  414b6f:	jge    0x414bed
  414b71:	mov    DWORD PTR [ebx+0x5],eax
  414b74:	cmp    BYTE PTR [ecx],dl
  414b76:	sbb    ecx,ebp
  414b78:	(bad)  
  414b79:	jl     0x414b4a
  414b7b:	icebp  
  414b7c:	(bad)  
  414b7d:	xchg   esp,eax
  414b7e:	loope  0x414b1e
  414b80:	mov    al,ds:0x694d94
	...
  414b95:	add    BYTE PTR [eax],al
  414b97:	add    BYTE PTR [ecx+ecx*4+0x7c],ch
  414b9b:	add    BYTE PTR [edi+0x5c],cl
  414b9e:	jne    0x414bdf
  414ba0:	and    DWORD PTR gs:[ecx],ecx
  414ba3:	or     edi,esi
  414ba5:	and    BYTE PTR [ebx+0x5211e0b],dl
  414bab:	push   0x45
  414bad:	sbb    cl,BYTE PTR [eax+esi*8+0x75]
  414bb1:	cmp    BYTE PTR [edi],dh
  414bb3:	je     0x414c19
  414bb5:	nop
  414bb6:	loopne 0x414c15
  414bb8:	dec    esp
  414bb9:	mov    ah,0xf6
  414bbb:	jmp    DWORD PTR [eax]
  414bbd:	mov    ecx,0xb44150ed
  414bc2:	test   BYTE PTR [ebx-0x36adac1a],0x36
  414bc9:	inc    edx
  414bca:	sub    ah,0x74
  414bcd:	rcl    DWORD PTR [ebp+0x5eb45afe],1
  414bd3:	push   esi
  414bd4:	xor    eax,0x3eec6d4d
  414bd9:	push   ebp
  414bda:	cmc    
  414bdb:	mul    DWORD PTR [edi]
  414bdd:	xchg   esi,eax
  414bde:	leave  
  414bdf:	call   FWORD PTR [edx-0x24]
  414be2:	dec    esi
  414be3:	inc    ecx
  414be4:	in     eax,0x14
  414be6:	ss add dl,ch
  414be9:	adc    dl,al
  414beb:	add    DWORD PTR [ebp-0x5e7a7c6c],esi
  414bf1:	mov    bl,0xf6
  414bf3:	push   ebp
  414bf5:	dec    ebx
  414bf6:	in     eax,dx
  414bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf8:	fidiv  DWORD PTR [ebx+0xbf6]
	...
  414c0e:	add    BYTE PTR [eax],al
  414c10:	jne    0x414bb6
  414c12:	mov    WORD PTR [esp+eiz*4+0x58830894],fs
  414c19:	mov    eax,ds:0x937afff3
  414c1e:	add    eax,0x8920284
  414c23:	add    al,ch
  414c25:	sbb    eax,0x5e8cfead
  414c2a:	adc    eax,0x10216b4f
  414c2f:	std    
  414c30:	arpl   WORD PTR [edi+0x24],cx
  414c33:	inc    ecx
  414c34:	ja     0x414c7c
  414c36:	adc    eax,0x4ff55a2a
  414c3b:	mov    ds:0xea15374a,eax
  414c40:	jnp    0x414ca9
  414c42:	push   es
  414c43:	mov    dh,0x10
  414c45:	pop    eax
  414c46:	popa   
  414c47:	std    
  414c48:	xor    ebx,DWORD PTR [edi]
  414c4a:	mov    esp,0xcba1c267
  414c4f:	call   DWORD PTR [eax]
  414c51:	stc    
  414c52:	dec    edx
  414c53:	std    
  414c54:	sbb    eax,DWORD PTR [edi]
  414c56:	mov    ebp,0x975abe7
  414c5b:	add    BYTE PTR [edi],cl
  414c5d:	xor    bl,BYTE PTR [eax]
  414c5f:	lea    ecx,[ecx]
  414c61:	mov    esp,0x4dfbfe16
  414c66:	push   ss
  414c67:	mov    ah,0x28
  414c69:	loopne 0x414c80
  414c6b:	(bad)  
  414c6c:	hlt    
  414c6d:	xchg   edx,eax
  414c6e:	in     al,dx
  414c6f:	(bad)  
  414c70:	jecxz  0x414c76
  414c72:	and    BYTE PTR [ebx+0x0],0x0
	...
  414c85:	add    BYTE PTR [eax],al
  414c87:	add    dl,bl
  414c89:	(bad)  
  414c8a:	adc    eax,0xfcc00f45
  414c8f:	jno    0x414c61
  414c91:	mov    dh,0x4f
  414c93:	repz ret 0x15ae
  414c97:	out    0x66,eax
  414c99:	jg     0x414cb1
  414c9b:	dec    bl
  414c9d:	clc    
  414c9e:	push   esp
  414c9f:	std    
  414ca0:	stos   DWORD PTR es:[edi],eax
  414ca1:	xchg   esi,eax
  414ca2:	or     al,0x0
  414ca4:	mov    WORD PTR [ebp-0x61],?
  414ca7:	add    DWORD PTR [ecx],ecx
  414ca9:	icebp  
  414caa:	push   esp
  414cab:	std    
  414cac:	xchg   ebx,eax
  414cad:	jle    0x414c68
  414caf:	inc    BYTE PTR [ecx-0x7f]
  414cb2:	adc    edi,esi
  414cb4:	adc    DWORD PTR [edi+edx*8-0x29786071],0xa
  414cbc:	dec    esp
  414cbd:	xchg   edi,eax
  414cbe:	arpl   WORD PTR [ebx],bx
  414cc0:	imul   eax,DWORD PTR [edi+0x4c2084df],0xffffffcd
  414cc7:	push   ds
  414cc8:	pop    edx
  414cc9:	fldcw  WORD PTR [ecx]
  414ccb:	add    al,0x8c
  414ccd:	xchg   edi,eax
  414cce:	sub    ecx,DWORD PTR fs:[ebx-0x79]
  414cd2:	fist   WORD PTR [eax+0x1ead8b08]
  414cd8:	cmp    ah,ah
  414cda:	pop    ss
  414cdb:	or     BYTE PTR [ebp-0x6ad4206c],cl
  414ce1:	(bad)  
  414ce2:	fild   WORD PTR [ebx]
  414ce4:	xchg   edi,eax
  414ce5:	push   esp
  414ce6:	inc    BYTE PTR [edi+0x3df944a]
	...
  414d00:	push   ecx
  414d01:	nop
  414d02:	loopne 0x414d07
  414d04:	mov    WORD PTR [edi-0x78fcb892],ss
  414d0a:	fild   QWORD PTR [ebx]
  414d0c:	pop    ds
  414d0d:	(bad)  
  414d0e:	fild   WORD PTR [ebx]
  414d10:	pop    esp
  414d11:	cld    
  414d12:	scas   al,BYTE PTR es:[edi]
  414d13:	xchg   edi,eax
  414d14:	dec    esp
  414d15:	xchg   esp,eax
  414d16:	push   esp
  414d17:	mov    ch,cl
  414d19:	test   DWORD PTR [esi+0x1e],ecx
  414d1c:	dec    ebx
  414d1d:	jl     0x414d58
  414d1f:	push   es
  414d20:	mov    WORD PTR [edx+eiz*2-0x200568b9],ss
  414d27:	nop
  414d28:	or     BYTE PTR [ebx-0x1c45e1d3],cl
  414d2e:	pop    ss
  414d2f:	cmp    BYTE PTR [ecx+0x1090df94],cl
  414d35:	mov    eax,DWORD PTR ds:0x17e3a21e
  414d3b:	and    dh,BYTE PTR [ecx-0x79]
  414d3e:	test   BYTE PTR [ecx],0xcc
  414d41:	add    BYTE PTR [ecx],cl
  414d43:	leave  
  414d44:	aaa    
  414d45:	mov    al,ds:0x178fa83f
  414d4a:	mov    esp,edx
  414d4c:	call   0x15a8:0xa039f586
  414d53:	(bad)  
  414d54:	mov    DWORD PTR [eax],ebx
  414d56:	fwait
  414d57:	stos   DWORD PTR es:[edi],eax
  414d58:	add    BYTE PTR [esi+0x6e201bf5],0x6c
  414d5f:	fidiv  WORD PTR [eax-0x7a]
  414d62:	loope  0x414d3e
	...
  414d78:	sbb    dl,BYTE PTR [ecx]
  414d7a:	retf   0xa1af
  414d7d:	xchg   BYTE PTR [eax+0x74],bl
  414d80:	adc    ecx,DWORD PTR [ebx-0x2a6e610a]
  414d86:	loopne 0x414d1a
  414d88:	sub    al,BYTE PTR [edi+0x4a0b60f5]
  414d8e:	test   BYTE PTR [esi+0x3dbb8679],0x72
  414d95:	xchg   ch,dh
  414d97:	jbe    0x414dfc
  414d99:	xor    esi,0xf86da16e
  414d9f:	call   FWORD PTR [eax+0x14290186]
  414da5:	ret    
  414da6:	pusha  
  414da7:	mov    dl,0x3
  414da9:	aad    0x8
  414dab:	inc    ecx
  414dac:	xchg   ebx,eax
  414dad:	mov    cs,WORD PTR [eax]
  414daf:	jmp    0xb5933bd3
  414db4:	into   
  414db5:	test   esi,esi
  414db7:	jl     0x414ded
  414db9:	xchg   ebp,esi
  414dbb:	cs jo  0x414df9
  414dbe:	sub    eax,0x7fb9926
  414dc3:	xchg   ebx,eax
  414dc4:	(bad)  
  414dc5:	cli    
  414dc6:	or     BYTE PTR [esi],dl
  414dc8:	inc    ebx
  414dc9:	dec    ecx
  414dca:	test   BYTE PTR [esi],0x81
  414dcd:	in     eax,dx
  414dce:	cmp    eax,DWORD PTR [eax]
  414dd0:	fcom   QWORD PTR [edx-0xb]
  414dd3:	imul   esp,DWORD PTR [ebp+0x750765b9],0xb5f591
	...
  414ded:	add    BYTE PTR [eax],al
  414def:	add    BYTE PTR [ecx+0x5dfff6a6],dh
  414df5:	xchg   esp,eax
  414df6:	adc    edi,edi
  414df8:	push   edx
  414df9:	test   al,0xbc
  414dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dfc:	inc    ebx
  414dfd:	test   al,0xf6
  414dff:	call   0x37d941
  414e04:	push   edx
  414e05:	fdivp  st(1),st
  414e07:	(bad)  
  414e08:	adc    ch,BYTE PTR [eax-0x57989313]
  414e0e:	idiv   ah
  414e10:	inc    esi
  414e11:	shl    DWORD PTR [eax-0x9580d01],1
  414e17:	bnd ret 
  414e19:	imul   ecx,DWORD PTR [esi],0xf35eb80f
  414e1f:	call   DWORD PTR [edx]
  414e21:	inc    edi
  414e22:	push   esi
  414e23:	leave  
  414e24:	out    0x3d,al
  414e26:	sub    ah,0xa6
  414e29:	int    0xe5
  414e2b:	push   eax
  414e2c:	popf   
  414e2d:	cmp    dl,dl
  414e2f:	std    
  414e30:	mov    ch,0x90
  414e32:	lock jb 0x414e19
  414e35:	shl    esi,cl
  414e37:	mov    esi,DWORD PTR [edi-0xbfa91ff]
  414e3d:	nop
  414e3e:	or     al,ch
  414e40:	or     BYTE PTR [ebx+0x1c35fff6],0xd7
  414e47:	nop
  414e48:	pop    esp
  414e49:	dec    esi
  414e4a:	icebp  
  414e4b:	nop
  414e4c:	cs ret 
  414e4e:	test   DWORD PTR [eax-0x58],ebp
  414e51:	xchg   ecx,eax
  414e52:	or     BYTE PTR [eax],al
	...
  414e68:	popf   
  414e69:	jmp    0x414e7a
  414e6b:	call   DWORD PTR [edx-0x732d7cff]
  414e71:	hlt    
  414e72:	into   
  414e73:	out    dx,eax
  414e74:	cld    
  414e75:	adc    cl,BYTE PTR [esi]
  414e77:	add    DWORD PTR [ebx+edi*2-0x798957df],ecx
  414e7e:	adc    DWORD PTR [edx-0x2e7f21a2],ecx
  414e84:	adc    eax,0x5e8a1139
  414e89:	pop    es
  414e8a:	aas    
  414e8b:	(bad)  
  414e8c:	in     al,0x79
  414e8e:	or     al,0x0
  414e90:	mov    WORD PTR [edx-0x69],gs
  414e93:	sti    
  414e94:	imul   BYTE PTR [ebp+0x21]
  414e97:	push   ebx
  414e98:	xchg   edx,eax
  414e99:	ins    DWORD PTR es:[edi],dx
  414e9a:	or     DWORD PTR [eax-0x2e7adff9],edx
  414ea0:	dec    ebx
  414ea1:	rcr    DWORD PTR [edi+eiz*2],0x88
  414ea5:	ins    BYTE PTR es:[edi],dx
  414ea6:	or     DWORD PTR [eax],eax
  414ea8:	and    al,0x2
  414eaa:	or     BYTE PTR [eax],al
  414eac:	mov    WORD PTR [esi-0x9838cb7],es
  414eb2:	ds (bad) 
  414eb4:	mov    ah,0x83
  414eb6:	test   DWORD PTR [eax-0x74],eax
  414eb9:	sbb    dl,BYTE PTR [edi+0x7c824ef]
  414ebf:	add    BYTE PTR [esi+esi*8-0x687396c2],cl
  414ec6:	or     al,0x6a
  414ec8:	mov    fs,WORD PTR [edi+0x9]
  414ecb:	push   0x0
	...
  414edd:	add    BYTE PTR [eax],al
  414edf:	add    BYTE PTR [edi-0x73fff69b],cl
  414ee5:	lods   eax,DWORD PTR ds:[esi]
  414ee6:	adc    DWORD PTR [esp+ebx*8-0x2b],esi
  414eea:	pop    ss
  414eeb:	add    ecx,DWORD PTR [ebp+ebp*2+0x2dd84484]
  414ef2:	push   es
  414ef3:	rol    BYTE PTR [ecx+0x31],0x12
  414ef7:	je     0x414eb9
  414ef9:	mov    dl,0x97
  414efb:	out    dx,eax
  414efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414efd:	xchg   esp,eax
  414efe:	pop    es
  414eff:	add    DWORD PTR [esp+edx*4-0x6bca4867],ecx
  414f06:	push   ds
  414f07:	xchg   ecx,eax
  414f08:	mov    bl,0x6c
  414f0a:	jno    0x414f0e
  414f0c:	mov    WORD PTR [edx+edi*8-0x606fe0bd],ss
  414f13:	stos   DWORD PTR es:[edi],eax
  414f14:	stc    
  414f15:	or     BYTE PTR [ecx-0x1c9323fd],ah
  414f1b:	(bad)  
  414f1c:	jnp    0x414ea1
  414f1e:	pop    ecx
  414f1f:	add    al,0xe6
  414f21:	xchg   esp,eax
  414f22:	pop    ecx
  414f23:	push   es
  414f24:	not    BYTE PTR [ecx+ecx*2-0x206b0bf9]
  414f2b:	add    ecx,DWORD PTR [ebx+eax*4+0x34]
  414f2f:	adc    al,0x6b
  414f31:	xor    ebp,ebx
  414f33:	add    ecx,DWORD PTR [ebp+ecx*1+0x8831024]
  414f3a:	dec    ebx
  414f3b:	lods   al,BYTE PTR ds:[esi]
  414f3c:	ret    0x2108
  414f3f:	add    al,0x24
  414f41:	dec    ebx
  414f42:	jmp    0x414f47
	...
  414f58:	mov    esp,fs
  414f5a:	pop    es
  414f5b:	xchg   ebx,eax
  414f5c:	lahf   
  414f5d:	aad    0xdf
  414f5f:	sbb    ah,BYTE PTR [eax+0x78d89788]
  414f65:	xor    DWORD PTR [esi-0x4d],0xa
  414f69:	or     DWORD PTR [ebx+ebp*1+0x1f],esi
  414f6d:	cwde   
  414f6e:	fild   WORD PTR [ebx]
  414f70:	push   esp
  414f71:	(bad)  
  414f72:	pop    ds
  414f73:	nop
  414f74:	lea    ebp,[edi-0x5e]
  414f77:	sbb    ah,BYTE PTR [eax-0x80]
  414f7a:	mov    DWORD PTR [esi+0x5f],0x601adfd5
  414f81:	jl     0x414fda
  414f83:	dec    eax
  414f84:	mov    BYTE PTR [edi+ebx*8+0x88fcf86],dl
  414f8b:	rcl    DWORD PTR [esi+0x7],0x48
  414f8f:	jmp    0xe94d9cfb
  414f94:	(bad)  
  414f95:	(bad)
  414f99:	cli    
  414f9a:	push   0x4582c89d
  414f9f:	add    DWORD PTR [eax-0x69],edx
  414fa2:	or     cl,ch
  414fa4:	adc    BYTE PTR [esp+edi*2-0x26],0x39
  414fa9:	sbb    BYTE PTR [edi-0x17],0xa6
  414fad:	or     cl,dh
  414faf:	out    dx,al
  414fb0:	or     esi,DWORD PTR [edx+0x60]
  414fb3:	sbb    al,0x47
  414fb5:	aad    0x8
  414fb7:	push   ebx
  414fb8:	nop
  414fb9:	sbb    eax,0xd6
	...
  414fcf:	add    BYTE PTR [ebx],dl
  414fd1:	jle    0x414fb3
  414fd3:	push   ecx
  414fd4:	push   edi
  414fd5:	xor    ebp,0xffffffc6
  414fd8:	add    esi,DWORD PTR [edx-0x20]
  414fdb:	cmp    DWORD PTR [edi-0x7d],eax
  414fde:	cmc    
  414fdf:	mov    dh,0x13
  414fe1:	mov    ah,al
  414fe3:	inc    ecx
  414fe4:	aaa    
  414fe5:	xor    ebp,0xffffffb0
  414fe8:	leave  
  414fe9:	call   0x5652dd6f
  414fee:	call   0x612b282d
  414ff3:	sbb    al,0x75
  414ff5:	ror    DWORD PTR [eax],0x81
  414ff8:	cli    
  414ff9:	xchg   esp,eax
  414ffa:	leave  
  414ffb:	jle    0x41500e
  414ffd:	rol    eax,0x22
  415000:	iret   
  415001:	xor    ebp,0x331586f5
  415007:	sub    eax,0xe908d4c1
  41500c:	sbb    bl,BYTE PTR [ecx+0x4d212921]
  415012:	leave  
  415013:	sbb    edi,DWORD PTR es:[esi+0x8]
  415017:	add    ch,ah
  415019:	xchg   ebp,eax
  41501a:	or     bh,al
  41501c:	lock popf 
  41501e:	cmc    
  41501f:	push   DWORD PTR [ebp+0x7945cd95]
  415025:	cwde   
  415026:	or     BYTE PTR [eax],al
  415028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415029:	aam    0x4c
  41502b:	hlt    
  41502c:	mov    ch,0x95
  41502e:	or     BYTE PTR [eax],al
  415030:	jb     0x415073
  415032:	in     eax,0x0
	...
  415048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415049:	xchg   ebp,eax
  41504a:	or     BYTE PTR [ebp-0x72ba5a20],cl
  415050:	xor    BYTE PTR [ecx-0x46cf72bb],dl
  415056:	inc    ebp
  415057:	push   0x6a
  415059:	sbb    cl,BYTE PTR [esp+edi*8-0x4b]
  41505d:	xor    al,BYTE PTR [edi]
  41505f:	push   0x76
  415061:	das    
  415062:	cmc    
  415063:	(bad)  
  415064:	pusha  
  415065:	int    0x42
  415067:	inc    ecx
  415068:	gs push cs
  41506a:	dec    esp
  41506b:	call   0x12e7b56
  415070:	or     DWORD PTR [ebp-0x50b28279],0x1225fff5
  41507a:	jns    0x41507b
  41507c:	nop
  41507d:	pushf  
  41507e:	xchg   BYTE PTR [ebp-0x13],al
  415081:	pop    ss
  415082:	je     0x41507c
  415084:	xor    eax,0x688b4f11
  415089:	mov    al,ds:0x280a3fe2
  41508e:	ins    DWORD PTR es:[edi],dx
  41508f:	call   0x37be68
  415094:	ins    BYTE PTR es:[edi],dx
  415095:	inc    edx
  415096:	aad    0xff
  415098:	lods   eax,DWORD PTR ss:[esi]
  41509a:	push   ds
  41509b:	sub    DWORD PTR [edx-0x64],ebp
  41509e:	add    al,al
  4150a0:	shl    DWORD PTR [edi-0x80],0x45
  4150a4:	mov    edi,cs
  4150a6:	mov    ds:0xf1a1e40b,eax
  4150ab:	inc    BYTE PTR [eax]
	...
  4150bd:	add    BYTE PTR [eax],al
  4150bf:	add    bl,dl
  4150c1:	fld    DWORD PTR [esi+0x12b1bdf]
  4150c7:	(bad)  
  4150c8:	cmp    edi,ecx
  4150ca:	cmp    BYTE PTR [edi],0x90
  4150cd:	mov    dl,0xc6
  4150cf:	sub    DWORD PTR [eax],edi
  4150d1:	sub    al,0x9
  4150d3:	(bad)  
  4150d4:	mov    esi,cs
  4150d6:	jecxz  0x41514b
  4150d8:	dec    ebp
  4150d9:	imul   ecx,DWORD PTR [edx+eax*8-0x14316de0],0xf
  4150e1:	sbb    BYTE PTR ds:0x10d300ff,ch
  4150e7:	je     0x415069
  4150e9:	xchg   ebx,esp
  4150eb:	ret    
  4150ec:	(bad)  
  4150ed:	sub    al,0x9
  4150ef:	(bad)  
  4150f0:	leave  
  4150f1:	jns    0x4150ff
  4150f3:	add    BYTE PTR [ebp+ebp*2+0x54747c8c],cl
  4150fa:	or     al,0x0
  4150fc:	mov    eax,gs
  4150fe:	pop    es
  4150ff:	jmp    0xfe5ea7b4
  415104:	xadd   DWORD PTR [eax],edx
  415107:	(bad)  
  415108:	mov    edi,0x38741e74
  41510d:	das    
  41510e:	test   ebx,0xb80cacc7
  415114:	lea    ebp,[ebp+0x9]
  415117:	add    bh,al
  415119:	xor    al,0x49
  41511b:	push   esp
  41511c:	pop    es
  41511d:	add    cl,BYTE PTR [edx-0x5a64c73d]
  415123:	dec    edi
	...
  415138:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41513a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513b:	dec    DWORD PTR [ebp+ebp*2+0x11]
  41513f:	jno    0x4150ce
  415141:	sub    bl,BYTE PTR ds:0x6b94b182
  415147:	retf   
  415148:	dec    esp
  415149:	xchg   esp,eax
  41514a:	fisttp WORD PTR [edi+0xc1c1394]
  415150:	dec    eax
  415151:	aad    0xdf
  415153:	add    ebx,DWORD PTR [ecx-0x6a]
  415156:	sbb    al,BYTE PTR [edx+ebp*2-0x25]
  41515a:	cmp    BYTE PTR [ebx+0x16],al
  41515d:	mov    ds:0x944c9009,al
  415162:	dec    eax
  415163:	jne    0x4150f1
  415165:	xchg   esp,eax
  415166:	fild   QWORD PTR [ebx]
  415168:	(bad)  
  415169:	lods   eax,DWORD PTR ds:[esi]
  41516a:	push   ss
  41516b:	pop    ss
  41516c:	push   cs
  41516d:	ret    0x8fcd
  415170:	dec    esp
  415171:	xchg   esp,eax
  415172:	fisttp WORD PTR [edi-0x8d8086]
  415178:	mov    cl,cl
  41517a:	lds    ecx,FWORD PTR [edi-0x7cf86b34]
  415180:	mov    ss,WORD PTR [edi+ebx*8-0x1af6b3f6]
  415187:	sub    al,0xf5
  415189:	xchg   ebp,eax
  41518a:	fild   WORD PTR [ebx]
  41518c:	dec    ebx
  41518d:	(bad)  
  41518f:	add    ecx,DWORD PTR [esp+edx*4-0x7f377721]
  415196:	rsm    
  415198:	dec    ebx
  415199:	in     eax,dx
  41519a:	loope  0x4151b2
	...
  4151b0:	mov    esi,0x3b044998
  4151b5:	add    ebp,esp
  4151b7:	push   ss
  4151b8:	cwde   
  4151b9:	mov    WORD PTR [ebx],?
  4151bb:	lds    ebp,FWORD PTR [ebx]
  4151bd:	mov    bl,BYTE PTR [edi+0x686d888f]
  4151c3:	add    ecx,DWORD PTR [esp+edx*4+0x6c8f9286]
  4151ca:	fimul  WORD PTR [bp+si]
  4151cd:	jg     0x415247
  4151cf:	sar    bl,0x7e
  4151d2:	or     dl,bh
  4151d4:	sti    
  4151d5:	jbe    0x41516c
  4151d7:	jmp    0x415168
  4151d9:	xchg   esp,eax
  4151da:	pop    eax
  4151db:	data16 cld 
  4151dd:	xchg   BYTE PTR [eax+0x5e],bl
  4151e0:	(bad)  
  4151e1:	xchg   edx,eax
  4151e2:	pusha  
  4151e3:	jmp    0xc149e678
  4151e8:	(bad)  
  4151e9:	cwde   
  4151ea:	or     cl,ch
  4151ec:	ja     0x415217
  4151ee:	or     ecx,ebp
  4151f0:	(bad)  
  4151f1:	mov    ecx,eax
  4151f3:	mov    ebp,0x2d4b55a6
  4151f8:	(bad)  
  4151f9:	xchg   esp,eax
  4151fa:	or     cl,ch
  4151fc:	adc    al,0xd8
  4151fe:	hlt    
  4151ff:	mov    ecx,0xeb5f7ef5
  415204:	or     BYTE PTR [eax],0xf1
  415207:	or     DWORD PTR [edi-0x5d128681],0xffffffa8
  41520e:	add    BYTE PTR [ebp+0x29027e48],ch
	...
  415228:	or     ecx,DWORD PTR [ebp+esi*8-0x748a688c]
  41522f:	inc    BYTE PTR [eax+0x7919e17e]
  415235:	or     cl,dh
  415237:	shl    ebp,0xa6
  41523a:	cmc    
  41523b:	into   
  41523c:	mov    ecx,0x9028357d
  415241:	push   ebp
  415242:	dec    ebx
  415243:	mov    ebp,0xe9089488
  415248:	adc    bl,cl
  41524a:	hlt    
  41524b:	sbb    esi,esp
  41524d:	jge    0x4152ae
  41524f:	jmp    0x415249
  415251:	jmp    0x41525b
  415253:	sahf   
  415254:	std    
  415255:	xchg   ecx,eax
  415256:	cmc    
  415257:	cld    
  415258:	xchg   eax,edx
  41525a:	inc    edi
  41525b:	jmp    0x46a6e4
  415260:	jns    0x41524b
  415262:	cmc    
  415263:	push   ebp
  415265:	ror    BYTE PTR [eax+ebx*8-0x3b],0x91
  41526a:	or     BYTE PTR [eax],al
  41526c:	sub    bh,BYTE PTR [esi]
  41526e:	rol    DWORD PTR [ecx],1
  415270:	cmc    
  415271:	xchg   ecx,eax
  415272:	or     bh,bh
  415274:	(bad)  
  415275:	jge    0x4151fd
  415277:	inc    ebp
  415278:	inc    ebp
  415279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527a:	jp     0x415284
  41527c:	xor    bh,BYTE PTR ds:0xa9f8c7e9
  415282:	cmc    
  415283:	push   DWORD PTR [ebp+0x5145cd91]
  415289:	cwde   
  41528a:	or     BYTE PTR [eax],al
	...
  4152a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a1:	ror    BYTE PTR [eax+esi*8-0x4b],0x91
  4152a6:	or     BYTE PTR [eax],al
  4152a8:	push   0x3d
  4152aa:	stc    
  4152ab:	add    BYTE PTR [ebp-0x1772f76f],ah
  4152b1:	mov    ecx,0xa608ff45
  4152b6:	in     eax,dx
  4152b7:	in     eax,0x76
  4152b9:	xchg   ecx,eax
  4152ba:	or     BYTE PTR [ebx],cl
  4152bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152bd:	and    al,0x1d
  4152bf:	and    eax,0xffffff8d
  4152c2:	cmc    
  4152c3:	jae    0x415321
  4152c5:	test   al,0x7c
  4152c7:	hlt    
  4152c8:	bnd jle 0x4152fa
  4152cb:	dec    ecx
  4152cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152cd:	cwde   
  4152ce:	int    0x45
  4152d0:	sbb    DWORD PTR [edx-0x53cafff8],edx
  4152d6:	push   cs
  4152d7:	(bad)  
  4152d8:	push   0x25fff5c4
  4152dd:	xchg   ecx,eax
  4152de:	cmc    
  4152df:	jne    0x4152c2
  4152e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152e2:	sbb    al,0xfc
  4152e4:	pop    esi
  4152e5:	push   ecx
  4152e6:	cmc    
  4152e7:	or     dh,ch
  4152e9:	or     al,0x13
  4152eb:	call   0xfe539c7c
  4152f0:	adc    ebp,edx
  4152f2:	fdivrp st(3),st
  4152f4:	push   edi
  4152f5:	lods   al,BYTE PTR ds:[esi]
  4152f6:	or     al,0x0
  4152f8:	js     0x41536f
  4152fa:	sbb    al,0x14
  4152fc:	add    BYTE PTR [edx+0x77caffc9],dh
  415302:	iret   
  415303:	dec    eax
	...
  415318:	dec    ebp
  415319:	imul   ecx,DWORD PTR [edx],0x0
  41531c:	mov    ebx,gs
  41531e:	mov    BYTE PTR [eax+eax*8+0x6a],bh
  415322:	test   DWORD PTR [edx],ecx
  415324:	shl    DWORD PTR [edi+0x5],cl
  415327:	inc    BYTE PTR [ecx-0x29]
  41532a:	and    DWORD PTR [ebx-0xf69471],ecx
  415330:	inc    ecx
  415331:	(bad)  
  415332:	and    DWORD PTR [ebx-0x73],esi
  415335:	imul   ecx,DWORD PTR [ecx],0xfffffffc
  415338:	pop    edi
  415339:	stos   DWORD PTR es:[edi],eax
  41533a:	push   edx
  41533b:	(bad)  
  41533c:	mov    ds:0xeaf11c9d,eax
  415341:	(bad)  
  415342:	hlt    
  415343:	push   cs
  415344:	or     DWORD PTR [ecx+0x1c],ecx
  415347:	dec    BYTE PTR [ebx+0x670af107]
  41534d:	imul   esi,DWORD PTR [esi+0x66],0x7a
  415351:	sbb    DWORD PTR [ecx],0xffffffb7
  415354:	lea    ebp,[ebp+0x9]
  415357:	add    bl,cl
  415359:	(bad)  
  41535a:	xor    eax,edx
  41535c:	mov    ecx,0x50822906
  415361:	bound  edi,QWORD PTR [edi+edx*2+0x410b78e4]
  415368:	mov    WORD PTR [ebp-0x62],ss
  41536b:	add    BYTE PTR [edi+0x3b],cl
  41536e:	xchg   esi,eax
  41536f:	push   DWORD PTR [ebx]
  415371:	out    dx,al
  415372:	push   cs
  415373:	add    BYTE PTR [ebp+edx*2-0x6ad4df26],cl
  41537a:	scas   al,BYTE PTR es:[edi]
  41537b:	sbb    al,0x0
	...
  41538d:	add    BYTE PTR [eax],al
  41538f:	add    BYTE PTR [eax],ah
  415391:	adc    BYTE PTR [esi-0x39b4cced],0x12
  415398:	adc    ch,BYTE PTR [ebp-0x7b]
  41539b:	jmp    0x4153a7
  41539d:	jl     0x415399
  41539f:	inc    ebx
  4153a0:	jg     0x415349
  4153a2:	xchg   edi,eax
  4153a3:	sub    eax,0xff7e7bb3
  4153a8:	xor    eax,DWORD PTR [ecx]
  4153aa:	jmp    0xe3c4:0xbc81904a
  4153b1:	xchg   esp,eax
  4153b2:	fild   WORD PTR [ebx]
  4153b4:	mov    esp,gs
  4153b6:	loopne 0x4153bc
  4153b8:	mov    WORD PTR [edi+eax*2+0x4e7ba1c2],ss
  4153bf:	addr16 jno 0x4153c2
  4153c2:	mov    eax,ds:0x3bd1d303
  4153c7:	add    eax,0x80df948d
  4153cc:	push   eax
  4153cd:	js     0x41537e
  4153cf:	adc    bl,BYTE PTR [eax-0x56]
  4153d2:	fwait
  4153d3:	les    ebx,FWORD PTR [ebx-0x73fa688d]
  4153d9:	xchg   esp,eax
  4153da:	jmp    0xb1d9:0xea20043
  4153e1:	add    BYTE PTR [ecx-0x2a769bfd],ah
  4153e7:	adc    dh,BYTE PTR [edx+0x53]
  4153ea:	in     al,dx
  4153eb:	loope  0x4153cc
  4153ed:	aad    0xdf
  4153ef:	add    ecx,DWORD PTR [esp+edx*4+0x1bdf]
	...
  415406:	add    BYTE PTR [eax],al
  415408:	mov    ecx,0x6b12de98
  41540d:	mov    ecx,0xec4a12f8
  415412:	adc    eax,0xd794cccb
  415417:	cmp    DWORD PTR [eax+0x7b],eax
  41541a:	or     BYTE PTR [esi+0x625b5670],dh
  415420:	mov    ecx,ebx
  415422:	push   eax
  415423:	adc    edx,ecx
  415425:	xchg   ebp,eax
  415426:	inc    edi
  415427:	jmp    0xaa4959b3
  41542c:	jle    0x41541b
  41542e:	or     BYTE PTR [ecx-0x16f76bb0],al
  415434:	push   edi
  415435:	jnp    0x41542c
  415437:	jmp    0xee0ba1cb
  41543c:	(bad)  
  41543d:	in     al,0x50
  41543f:	add    DWORD PTR [esi-0x6816b86b],ebx
  415445:	add    eax,0xf37e2a08
  41544a:	mov    ecx,0xed7ac8eb
  41544f:	adc    DWORD PTR [eax-0x52aef76c],0x973ef579
  415459:	int3   
  41545a:	sti    
  41545b:	ss sahf 
  41545d:	jae    0x415444
  41545f:	ss jle 0x4154dc
  415462:	loopne 0x4154a4
  415464:	xchg   edi,eax
  415465:	jp     0x41545c
  415467:	push   0xffffffbc
  415469:	jg     0x4154ae
  41546b:	test   al,0x0
	...
  41547d:	add    BYTE PTR [eax],al
  41547f:	add    BYTE PTR [edi+0x12f07c94],cl
  415485:	mov    ecx,0x7a48b2fc
  41548a:	cmc    
  41548b:	jne    0x415412
  41548d:	jns    0x4154aa
  41548f:	std    
  415490:	xor    ebp,edx
  415492:	or     BYTE PTR [esi],ah
  415494:	xchg   esp,eax
  415495:	mov    esi,0x9388283f
  41549a:	or     cl,ch
  41549c:	(bad)  
  41549e:	sbb    eax,0xe07a7dd5
  4154a3:	repz call 0x5d40:0xf600f57a
  4154ab:	push   0x479140
  4154b0:	std    
  4154b1:	and    cl,BYTE PTR [eax]
  4154b3:	ret    
  4154b4:	cli    
  4154b5:	cwde   
  4154b6:	cmp    eax,0xaf963501
  4154bb:	pop    es
  4154bc:	and    eax,0xd7330896
  4154c1:	fwait
  4154c2:	clc    
  4154c3:	sbb    DWORD PTR [edi],0xffffff92
  4154c6:	jnp    0x4154ca
  4154c8:	push   ds
  4154c9:	xchg   ebx,eax
  4154ca:	loope  0x4154b5
  4154cc:	sbb    eax,0x7afff616
  4154d1:	cwde   
  4154d2:	jp     0x4154ce
  4154d4:	jp     0x415479
  4154d6:	pop    edi
  4154d7:	add    BYTE PTR ds:0xe5000859,bh
  4154dd:	mov    ecx,0x15f125f6
  4154e2:	dec    eax
	...
  4154f7:	add    BYTE PTR [edx+0x71],bl
  4154fa:	mov    ebp,0xf595f481
  4154ff:	and    eax,0x481539
  415504:	jp     0x415577
  415506:	mov    ch,0x81
  415508:	hlt    
  415509:	xchg   ebp,eax
  41550a:	cmc    
  41550b:	and    eax,0x481571
  415510:	jp     0x415583
  415512:	int    0x81
  415514:	in     al,0x95
  415516:	cmc    
  415517:	and    eax,0x4815a9
  41551c:	mov    dh,BYTE PTR [ecx-0x3b]
  41551f:	and    DWORD PTR [edx*4+0x159125f5],0x727a0048
  41552a:	fld    QWORD PTR [ecx+0x25f590b4]
  415530:	sbb    DWORD PTR [esi],edx
  415532:	dec    eax
  415533:	add    BYTE PTR [edx+eiz*2-0x53f22012],cl
  41553a:	or     al,0xff
  41553c:	imul   eax,DWORD PTR [edi-0x76],0xee3a8c40
  415543:	out    0xd,eax
  415545:	lods   al,BYTE PTR ds:[esi]
  415546:	or     al,0xff
  415548:	jno    0x415581
  41554a:	mov    al,BYTE PTR [eax-0x74]
  41554d:	xor    ch,dh
  41554f:	out    dx,eax
  415550:	or     eax,0x69ff0cac
  415555:	pop    ss
  415556:	mov    al,BYTE PTR [eax-0x74]
  415559:	or     ch,dh
  41555b:	test   DWORD PTR [eax],0x0
	...
  41556d:	add    BYTE PTR [eax],al
  41556f:	add    BYTE PTR ds:0xb1ff0cac,cl
  415575:	test   DWORD PTR [edx-0x10fd73c0],0xcac0dff
  41557f:	jmp    FWORD PTR [ecx-0x73bf7499]
  415585:	(bad)  
  415587:	pop    es
  415588:	push   cs
  415589:	sub    al,0x9
  41558b:	push   DWORD PTR [ecx+0x57]
  41558e:	mov    eax,DWORD PTR [eax-0x74]
  415591:	shr    dh,cl
  415593:	femms  
  415595:	sub    al,0x9
  415597:	jmp    FWORD PTR [ecx+0x57]
  41559a:	mov    eax,DWORD PTR [eax-0x74]
  41559d:	stos   BYTE PTR es:[edi],al
  41559e:	out    dx,al
  41559f:	pop    ss
  4155a0:	push   cs
  4155a1:	sub    al,0x9
  4155a3:	push   DWORD PTR [ecx+0x77]
  4155a6:	mov    eax,DWORD PTR [eax-0x74]
  4155a9:	mov    ds:0x2d0e1fee,al
  4155ae:	or     edi,edi
  4155b0:	test   eax,0x8c408b49
  4155b5:	jbe    0x4155a2
  4155b7:	daa    
  4155b8:	push   cs
  4155b9:	sub    eax,0x39b1ff09
  4155be:	mov    eax,DWORD PTR [eax-0x74]
  4155c1:	xchg   esp,eax
  4155c2:	out    dx,al
  4155c3:	jmp    0x4616873
  4155c8:	push   ebx
  4155c9:	mov    dl,0x13
  4155cb:	or     ah,0x94
  4155ce:	(bad)  
  4155cf:	jmp    0x461684f
	...
  4155e8:	cmp    esi,DWORD PTR [edx-0x6b337e0d]
  4155ee:	mov    esi,0x20126be9
  4155f3:	add    al,0x23
  4155f5:	mov    dl,0x23
  4155f7:	or     ah,0x94
  4155fa:	xchg   esi,eax
  4155fb:	jmp    0x46168cb
  415600:	or     esi,DWORD PTR [edx-0x6bb37ded]
  415606:	mov    gs,ecx
  415608:	dec    ebx
  415609:	adc    ah,BYTE PTR [eax]
  41560b:	add    al,0xf3
  41560d:	mov    cl,0x13
  41560f:	or     BYTE PTR [esp+edx*4+0x66],0xe9
  415614:	cmp    edx,DWORD PTR [edx]
  415616:	mov    al,ds:0xb3b1db03
  41561b:	or     DWORD PTR [esp+edx*4+0x5e],0xa0126be9
  415623:	add    eax,ebx
  415625:	mov    cl,0xc3
  415627:	or     DWORD PTR [esp+edx*4+0x36],0xa0122be9
  41562f:	add    ebp,DWORD PTR [ebx+0x4c81b3b1]
  415635:	xchg   esp,eax
  415636:	cs jmp 0x3e16867
  41563c:	xchg   ebx,eax
  41563d:	mov    cl,0x93
  41563f:	or     esp,0xfbe90694
  415645:	adc    ah,BYTE PTR [eax+0x73b17b03]
  41564b:	add    DWORD PTR [eax],0x0
	...
  41565d:	add    BYTE PTR [eax],al
  41565f:	add    ah,cl
  415661:	xchg   esp,eax
  415662:	or     dh,dh
  415664:	je     0x41565d
  415666:	mov    ch,BYTE PTR [eax+0x712b778f]
  41566c:	or     eax,0x64de08d4
  415671:	or     ecx,DWORD PTR [edx+0x2b779028]
  415677:	jns    0x415686
  415679:	aam    0x8
  41567b:	(bad)  
  41567c:	and    al,0x23
  41567e:	mov    ch,BYTE PTR [eax]
  415680:	mov    BYTE PTR [edi+0x2b],dh
  415683:	push   ecx
  415684:	or     eax,0x34ae08d4
  415689:	sbb    ecx,DWORD PTR [edx+0x2b779028]
  41568f:	inc    ebp
  415690:	or     eax,0xf49608d4
  415695:	sub    cl,BYTE PTR [edx+0x2b778828]
  41569b:	cmp    DWORD PTR ds:0xe47e08d4,ecx
  4156a1:	inc    edx
  4156a2:	mov    ch,BYTE PTR [eax]
  4156a4:	nop
  4156a5:	ja     0x4156d2
  4156a7:	xor    DWORD PTR ds:0xe46608d4,ecx
  4156ad:	cmp    cl,BYTE PTR [edx+0x2b778fa8]
  4156b3:	sub    DWORD PTR ds:0xb44e08d4,ecx
  4156b9:	push   edx
  4156ba:	mov    ch,BYTE PTR [eax+0x312b778f]
  4156c0:	or     eax,0x3608d4
	...
  4156d5:	add    BYTE PTR [eax],al
  4156d7:	add    BYTE PTR [edx+ecx*2+0x778fa88a],dh
  4156de:	sub    edi,DWORD PTR [ecx]
  4156e0:	or     eax,0xa41e08d4
  4156e5:	bound  ecx,QWORD PTR [edx+0x2b758fa8]
  4156eb:	sub    eax,0x8d50d
  4156f0:	xchg   edx,eax
  4156f1:	ins    BYTE PTR es:[edi],dx
  4156f2:	jmp    0xf5d37b79
  4156f7:	and    eax,0x48138d
  4156fc:	jb     0x41576c
  4156fe:	in     eax,0x82
  415700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415701:	nop
  415702:	cmc    
  415703:	and    eax,0x481339
  415708:	bound  ebp,QWORD PTR [esi-0x3]
  41570b:	xor    BYTE PTR [eax+edx*4-0xb],0x25
  415710:	push   ecx
  415711:	adc    ecx,DWORD PTR [eax+0x0]
  415714:	repnz ins DWORD PTR es:[edi],dx
  415716:	cmc    
  415717:	xor    BYTE PTR [eax+edx*4-0xb],0x25
  41571c:	sub    DWORD PTR ds:0x6df20048,edx
  415722:	add    DWORD PTR [ebx+0x25f59064],eax
  415728:	add    eax,0x12004815
  41572d:	outs   dx,BYTE PTR ds:[esi]
  41572e:	sbb    DWORD PTR [ebx+0x25f590a4],eax
  415734:	in     eax,dx
  415735:	adc    al,0x48
  415737:	add    BYTE PTR [edx+0x6d],ah
  41573a:	adc    DWORD PTR [ebx+0x0],eax
	...
  415750:	mov    ah,0x90
  415752:	cmc    
  415753:	and    eax,0x481385
  415758:	xor    ch,BYTE PTR [ebp+0x29]
  41575b:	xor    esp,0xffffff91
  41575e:	cmc    
  41575f:	and    eax,0x48138d
  415764:	push   edx
  415765:	ins    DWORD PTR es:[edi],dx
  415766:	and    DWORD PTR [ebx+0x25f591e4],eax
  41576c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41576d:	adc    al,0x48
  41576f:	add    BYTE PTR [edx+0x6d],dh
  415772:	cmp    eax,0xf591e483
  415777:	and    eax,0x4814b1
  41577c:	mov    edx,?
  41577e:	shl    BYTE PTR [ebx],0x88
  415781:	jmp    0x6341:0x83f90104
  415788:	mov    WORD PTR [ebx+0x9],gs
  41578b:	ret    0x6b90
  41578e:	mov    bh,dh
  415790:	mov    al,ch
  415792:	icebp  
  415793:	mov    bh,0x8e
  415795:	imul   ecx,DWORD PTR [ecx],0x0
  415798:	dec    esi
  415799:	outs   dx,DWORD PTR ds:[esi]
  41579a:	or     DWORD PTR [ebx+0x7867344],eax
  4157a0:	add    al,0x6f
  4157a2:	or     DWORD PTR [eax],eax
  4157a4:	mov    WORD PTR [ecx],gs
  4157a6:	or     eax,0xf9530f00
  4157ab:	jl     0x415741
  4157ad:	add    ecx,DWORD PTR [eax+eax*1]
  4157b0:	mov    WORD PTR [ebx+0x47],gs
  4157b3:	add    eax,DWORD PTR [eax]
	...
  4157c5:	add    BYTE PTR [eax],al
  4157c7:	add    BYTE PTR [edx+ebp*8-0x7c6ee0ff],cl
  4157ce:	inc    ecx
  4157cf:	pop    es
  4157d0:	mov    WORD PTR [ebx+0x9],gs
  4157d3:	ret    0x6b88
  4157d6:	mov    bh,dh
  4157d8:	dec    esp
  4157d9:	nop
  4157da:	hlt    
  4157db:	mov    bh,0x86
  4157dd:	imul   ecx,DWORD PTR [ecx],0x0
  4157e0:	into   
  4157e1:	or     WORD PTR ds:0x96b0c,di
  4157e8:	pop    ecx
  4157e9:	add    DWORD PTR [ecx+0xb],0xffffff8c
  4157ed:	imul   ecx,DWORD PTR [ecx],0xffffffc2
  4157f0:	nop
  4157f1:	imul   eax,esi,0xffffffff
  4157f4:	mov    WORD PTR [ebx+0x9],gs
  4157f7:	jge    0x41577d
  4157f9:	adc    esi,ebx
  4157fb:	push   DWORD PTR [ebx-0x73fcb896]
  415801:	or     BYTE PTR [ecx],0x2
  415804:	mov    WORD PTR [ebx-0x7a],gs
  415807:	pop    es
  415808:	aam    0x93
  41580a:	out    dx,eax
  41580b:	add    ecx,DWORD PTR [esp+edx*4-0x4e73f8df]
  415812:	fild   WORD PTR [edi]
  415814:	mov    WORD PTR [esp+eax*4-0x2078bc05],ss
  41581b:	add    ecx,DWORD PTR [esi+edx*2-0x6b56fc15]
  415822:	out    0x3,eax
  415824:	mov    ecx,?
  415826:	out    0x4b,eax
  415828:	jg     0x4157be
  41582a:	fild   WORD PTR [ebx]
	...
  415840:	dec    esi
  415841:	cdq    
  415842:	(bad)  
  415844:	dec    ebx
  415845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415846:	fild   WORD PTR [ebx]
  415848:	rcr    DWORD PTR [edi+edx*4-0x208bc40e],0x45
  415850:	(bad)  
  415851:	xchg   esp,eax
  415852:	hlt    
  415853:	add    ebp,DWORD PTR [esp+edx*4-0x21]
  415857:	mov    BYTE PTR [ebx-0x73fc28d4],cl
  41585d:	xchg   esp,eax
  41585e:	mov    eax,ds:0xdfb18c00
  415863:	ret    
  415864:	or     esi,DWORD PTR [esp+ebx*1-0x4]
  415868:	cmp    ecx,DWORD PTR [edi+0x568c03df]
  41586e:	jecxz  0x415873
  415870:	mov    cl,0x94
  415872:	pop    edi
  415873:	add    al,0x8c
  415875:	icebp  
  415876:	out    0x4b,eax
  415878:	xchg   DWORD PTR [edi+ebx*8-0x206731fd],edx
  41587f:	(bad)  
  415880:	les    esi,FWORD PTR [ecx-0x6b72fc21]
  415886:	out    dx,al
  415887:	push   0xfc9321cc
  41588c:	cdq    
  41588d:	pop    ds
  41588e:	and    BYTE PTR [esi-0x71],al
  415891:	xchg   esp,eax
  415892:	bound  eax,QWORD PTR [ebp-0x16f76779]
  415898:	(bad)  
  415899:	jae    0x415916
  41589b:	int3   
  41589c:	sbb    dl,BYTE PTR [eax+ebx*1]
  41589f:	in     eax,dx
  4158a0:	(bad)  
  4158a1:	xchg   esp,eax
  4158a2:	jg     0x41590c
	...
  4158b8:	js     0x415851
  4158ba:	or     cl,ch
  4158bc:	dec    edi
  4158bd:	pop    edx
  4158be:	xchg   ebp,ebp
  4158c0:	jnp    0x415935
  4158c2:	cmc    
  4158c3:	icebp  
  4158c4:	(bad)  
  4158c5:	xchg   esp,eax
  4158c6:	or     BYTE PTR [eax+0x11],dh
  4158c9:	mov    ds:0x178fe90c,eax
  4158ce:	je     0x415895
  4158d0:	pop    ebx
  4158d1:	jae    0x415855
  4158d3:	jo     0x41593c
  4158d5:	xchg   edi,eax
  4158d6:	or     cl,ch
  4158d8:	sbb    ebx,DWORD PTR [esi+0x5489e882]
  4158de:	imul   BYTE PTR [ecx-0x12356b49]
  4158e4:	pop    DWORD PTR [edi+eiz*1-0x55]
  4158e8:	sub    esi,DWORD PTR [ebx-0x76]
  4158eb:	push   0xe908972b
  4158f0:	xchg   al,ch
  4158f2:	adc    esi,DWORD PTR [edx+0x8]
  4158f5:	mov    ds:0x1d8fe90c,eax
  4158fa:	xchg   ecx,esi
  4158fc:	add    esi,DWORD PTR [ebx-0xb]
  4158ff:	sub    DWORD PTR [edi+0x14],ecx
  415902:	adc    al,0xed
  415904:	(bad)  
  415905:	xchg   esp,eax
  415906:	add    cl,ch
  415908:	(bad)  
  415909:	xchg   esp,eax
  41590a:	jg     0x415974
  41590c:	fist   WORD PTR [esi+0x1c5ae908]
  415912:	adc    ch,ch
  415914:	(bad)  
  415915:	xchg   esp,eax
  415916:	fmul   DWORD PTR [eax]
  415918:	push   ebx
  415919:	push   ss
  41591a:	xchg   ebp,esi
	...
  415930:	ret    
  415931:	jb     0x415928
  415933:	dec    esi
  415934:	sbb    al,0x90
  415936:	add    DWORD PTR [eax],0x96724
  41593c:	mov    ch,0xef
  41593e:	mov    BYTE PTR [eax],bl
  415940:	mov    cl,0x96
  415942:	or     BYTE PTR [eax+0x72],al
  415945:	sbb    BYTE PTR [ecx],dl
  415947:	add    al,0xa5
  415949:	xchg   esi,eax
  41594a:	add    BYTE PTR [eax],al
  41594c:	jne    0x4158e4
  41594e:	jg     0x4158d1
  415950:	test   DWORD PTR [edx-0xb],esi
  415953:	(bad)  
  415954:	out    dx,al
  415955:	lock sbb eax,0x82966504
  41595b:	add    DWORD PTR [edi-0x2a],esi
  41595e:	repz shr ch,0x98
  415962:	leave  
  415963:	mov    esi,DWORD PTR [ecx]
  415965:	push   edx
  415966:	or     DWORD PTR [ebx+0x55097491],ecx
  41596c:	and    DWORD PTR [ebx],0x3a
  41596f:	imul   BYTE PTR [eax+0x5d8af52d]
  415975:	sbb    dh,ch
  415977:	add    DWORD PTR [ecx+edx*4],edx
  41597a:	dec    ebx
  41597b:	lea    eax,[ecx+0x25]
  41597e:	mov    bh,al
  415980:	xor    al,0x5
  415982:	in     eax,0x83
  415984:	fist   DWORD PTR [ebp-0x6415004d]
  41598a:	test   BYTE PTR [ebp+0x72796da8],0xc6
  415991:	out    dx,eax
  415992:	test   BYTE PTR [ecx],0x0
	...
  4159a5:	add    BYTE PTR [eax],al
  4159a7:	add    BYTE PTR [esp+edi*2+0x9],cl
  4159ab:	add    ch,ah
  4159ad:	and    dl,BYTE PTR [eax]
  4159af:	mov    esi,DWORD PTR [eax+ebp*2+0x9]
  4159b3:	add    ch,dh
  4159b5:	out    dx,al
  4159b6:	mov    BYTE PTR [eax],bl
  4159b8:	icebp  
  4159b9:	xchg   ebp,eax
  4159ba:	or     BYTE PTR [eax+0x5c],al
  4159bd:	fst    QWORD PTR [ecx]
  4159bf:	add    al,0xb5
  4159c1:	xchg   ebp,eax
  4159c2:	jg     0x415945
  4159c4:	mov    WORD PTR [ebx-0xb],gs
  4159c7:	(bad)  
  4159c8:	mov    ebx,0x881789f6
  4159cd:	jnp    0x4159d8
  4159cf:	test   dh,0x7c
  4159d2:	test   DWORD PTR [ecx],ecx
  4159d4:	push   ss
  4159d5:	inc    esp
  4159d6:	or     ebx,ebx
  4159d8:	call   0x397d:0xa71774be
  4159df:	pop    ds
  4159e0:	(bad)  
  4159e1:	(bad)  
  4159e2:	loopne 0x4159e7
  4159e4:	mov    WORD PTR [ebx-0x7a],?
  4159e7:	sbb    BYTE PTR [edi],al
  4159e9:	cld    
  4159ea:	cld    
  4159eb:	add    ecx,DWORD PTR [ebx+edi*2+0x77848072]
  4159f2:	or     DWORD PTR [eax],eax
  4159f4:	int3   
  4159f5:	hlt    
  4159f6:	inc    ecx
  4159f7:	sbb    edx,DWORD PTR [eax+0xd89097b]
  4159fd:	imul   esi,ebp,0xffffffff
  415a00:	dec    ebx
  415a01:	out    0x8a,al
  415a03:	pop    ss
  415a04:	mov    BYTE PTR [ebx+0x9],bh
  415a07:	mov    dl,BYTE PTR [ebp+edi*2+0xfd24]
	...
  415a1e:	add    BYTE PTR [eax],al
  415a20:	dec    edi
  415a21:	or     al,0x13
  415a23:	cmp    BYTE PTR [edx],0x7c
  415a26:	jno    0x415a3f
  415a28:	cdq    
  415a29:	int    0xa4
  415a2b:	add    ch,ah
  415a2d:	pop    esi
  415a2e:	cmc    
  415a2f:	call   DWORD PTR [ebx]
  415a31:	nop
  415a32:	loope  0x4159be
  415a34:	or     eax,0x3fff56b
  415a39:	hlt    
  415a3a:	mov    dl,BYTE PTR [edi]
  415a3c:	nop
  415a3d:	jnp    0x415a48
  415a3f:	inc    eax
  415a40:	add    eax,0x8c03edd4
  415a45:	jnp    0x415ab9
  415a47:	cmp    BYTE PTR [edi+edi*2+0x9],0x0
  415a4c:	pop    es
  415a4d:	cld    
  415a4e:	loope  0x415a53
  415a50:	mov    WORD PTR [edi+ebx*8-0x246d32ef],ss
  415a57:	std    
  415a58:	adc    eax,0xb935e184
  415a5d:	push   ebp
  415a5e:	repz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  415a61:	xchg   ebp,eax
  415a62:	pavgw  mm1,QWORD PTR [ebx+edi*1+0x70a3ffd3]
  415a6a:	mov    ah,0xea
  415a6c:	push   es
  415a6d:	adc    ecx,edi
  415a6f:	call   DWORD PTR [ebx-0x5c7d8790]
  415a75:	cwde   
  415a76:	fild   WORD PTR [ebx]
  415a78:	int3   
  415a79:	sbb    eax,0x948fe758
  415a7e:	fistp  QWORD PTR [edx+0xc]
  415a81:	test   ebx,esp
  415a83:	add    eax,DWORD PTR [eax]
	...
  415a95:	add    BYTE PTR [eax],al
  415a97:	add    BYTE PTR [ebx+ebx*1-0x6b701488],cl
  415a9e:	fbstp  TBYTE PTR [ebx]
  415aa0:	lods   al,BYTE PTR ds:[esi]
  415aa1:	iret   
  415aa2:	test   DWORD PTR [esi-0x4d2066b3],esp
  415aa8:	loopne 0x415ac5
  415aaa:	inc    ebx
  415aab:	loopne 0x415a40
  415aad:	(bad)  
  415aae:	adc    al,BYTE PTR [edx+eiz*8+0x13]
  415ab2:	(bad)  
  415ab3:	idiv   DWORD PTR [ecx+0x2bf78c99]
  415ab9:	jo     0x415a9a
  415abb:	jp     0x415a64
  415abd:	mov    eax,0xbc227ad3
  415ac2:	mov    esp,0xdfb8af79
  415ac7:	jns    0x415a73
  415ac9:	sbb    dl,cl
  415acb:	nop
  415acc:	mov    ds:0xe17bac1b,eax
  415ad1:	and    DWORD PTR [edx+0x4],edi
  415ad4:	mov    WORD PTR [edi+ebx*8-0x12177a37],ss
  415adb:	mov    esp,0xa008194d
  415ae0:	std    
  415ae1:	imul   ecx,DWORD PTR [ecx-0x40e72c57],0xc812c7dc
  415aeb:	jmp    0x415a93
  415aed:	xchg   edx,eax
  415aee:	mov    DWORD PTR [ecx],ebp
  415af0:	mov    ebx,0x146a4ed6
  415af5:	mov    ah,0x14
  415af7:	call   0x9f96bcf8
	...
  415b10:	hlt    
  415b11:	retf   0xe5ca
  415b14:	(bad)  
  415b15:	sbb    ebx,DWORD PTR [ebp+eax*1-0x74]
  415b19:	leave  
  415b1a:	pop    esi
  415b1b:	jb     0x415abe
  415b1d:	push   esi
  415b1e:	mov    ss,ecx
  415b20:	sub    DWORD PTR [edi-0xb],0xffffffe9
  415b24:	(bad)  
  415b25:	xchg   esp,eax
  415b26:	or     BYTE PTR [ebx+0x76],ah
  415b29:	adc    edi,DWORD PTR [edi+0x7bfebf6]
  415b2f:	jmp    0x75c322c3
  415b34:	cmp    eax,DWORD PTR [ebx-0x16a51177]
  415b3a:	or     esp,DWORD PTR [esi-0x160a90be]
  415b40:	(bad)  
  415b41:	push   ebp
  415b42:	and    DWORD PTR [esi+0x5500adbf],ebp
  415b48:	neg    ch
  415b4a:	dec    eax
  415b4b:	ins    BYTE PTR es:[edi],dx
  415b4c:	xchg   edx,eax
  415b4d:	call   0x8be2c650
  415b52:	or     al,0xe9
  415b54:	(bad)  
  415b55:	outs   dx,DWORD PTR ds:[esi]
  415b56:	jnp    0x415b24
  415b58:	xchg   esi,eax
  415b59:	sbb    DWORD PTR [eax],ebx
  415b5b:	in     eax,dx
  415b5c:	(bad)  
  415b5d:	xchg   esp,eax
  415b5e:	jg     0x415bc7
  415b60:	not    DWORD PTR [edx+0x55cfe908]
  415b66:	mov    gs,ebp
  415b68:	rep outs dx,BYTE PTR ds:[esi]
  415b6a:	cmc    
  415b6b:	add    ch,bl
  415b6d:	xchg   edx,eax
  415b6e:	or     BYTE PTR [eax],al
  415b70:	pop    esp
  415b71:	icebp  
  415b72:	add    eax,0x4
	...
  415b87:	add    ch,ah
  415b89:	xchg   edx,eax
  415b8a:	add    DWORD PTR [esi-0xa9143],0x86827385
  415b94:	lds    ebp,FWORD PTR [esi-0xb]
  415b97:	jmp    FWORD PTR [edi]
  415b99:	ins    DWORD PTR es:[edi],dx
  415b9a:	push   esi
  415b9b:	mov    BYTE PTR [ebp-0x46ef746b],ch
  415ba1:	xchg   edx,eax
  415ba2:	or     BYTE PTR [esi+0x0],bl
  415ba5:	aad    0xd
  415ba7:	add    BYTE PTR [eax],ch
  415ba9:	xchg   esi,eax
  415baa:	jns    0x415b64
  415bac:	es mov al,0xf6
  415baf:	add    DWORD PTR [ebx],eax
  415bb1:	jbe    0x415bbc
  415bb3:	add    BYTE PTR [ebp-0x13],dh
  415bb6:	pusha  
  415bb7:	or     DWORD PTR [eax],ebx
  415bb9:	add    DWORD PTR [edx-0xa918a7a],0x1defdcff
  415bc3:	add    al,0x75
  415bc5:	xchg   edx,eax
  415bc6:	dec    eax
  415bc7:	mov    ebx,edx
  415bc9:	jne    0x415bd4
  415bcb:	add    BYTE PTR [ebp-0xf],ah
  415bce:	mov    edx,DWORD PTR [eax]
  415bd0:	cmp    DWORD PTR [edx-0x7f5474f8],edx
  415bd6:	or     DWORD PTR [eax],eax
  415bd8:	and    eax,0xf70205ec
  415bdd:	xchg   esi,eax
  415bde:	(bad)  
  415bdf:	mov    BYTE PTR [ebp-0x6d],al
  415be2:	xchg   BYTE PTR [ecx+ebp*1],bl
  415be5:	xchg   edx,eax
  415be6:	or     BYTE PTR [ebp+0x3c],dh
  415be9:	in     eax,dx
  415bea:	mov    edx,DWORD PTR [eax]
	...
  415c00:	sub    DWORD PTR [edx-0x7f8476f8],edx
  415c06:	or     DWORD PTR [eax],eax
  415c08:	cmc    
  415c09:	push   ecx
  415c0a:	sub    BYTE PTR [esi-0xa9874],0xf3
  415c11:	hlt    
  415c12:	jbe    0x415c23
  415c14:	nop
  415c15:	jnp    0x415c20
  415c17:	mov    ecx,DWORD PTR [edx]
  415c19:	je     0x415c10
  415c1b:	(bad)  
  415c1c:	fcomi  st,st(1)
  415c1e:	cld    
  415c1f:	add    DWORD PTR [esi-0x6378b503],edi
  415c25:	jl     0x415ca2
  415c27:	sbb    ecx,DWORD PTR [eax-0x6a8af685]
  415c2d:	bnd jbe 0x415c3f
  415c30:	mov    BYTE PTR [ebx+0x9],bh
  415c33:	mov    DWORD PTR [edx],edx
  415c35:	je     0x415c2c
  415c37:	jmp    DWORD PTR [ebx+0x78ad723b]
  415c3d:	jg     0x415c48
  415c3f:	add    BYTE PTR ds:0x8c03fcf6,al
  415c45:	jnp    0x415cb7
  415c47:	test   DWORD PTR [edi+esi*2+0x73060009],esp
  415c4e:	pop    es
  415c4f:	leave  
  415c50:	jb     0x415c0e
  415c52:	outs   dx,DWORD PTR ds:[esi]
  415c53:	(bad)  
  415c54:	scas   eax,DWORD PTR es:[edi]
  415c55:	nop
  415c56:	je     0x415c5f
  415c58:	mov    esi,0x35e73ee2
  415c5d:	addr16 or al,0xfe
  415c60:	pop    es
  415c61:	mov    dh,0x87
  415c63:	fild   WORD PTR [eax]
	...
  415c75:	add    BYTE PTR [eax],al
  415c77:	add    BYTE PTR [eax+0x34cd6fab],dl
  415c7d:	aas    
  415c7e:	or     eax,0x3cf23bfe
  415c83:	sub    BYTE PTR ds:0x5a8aba79,0x43
  415c8a:	dec    esp
  415c8b:	sti    
  415c8c:	and    ebp,DWORD PTR [esi]
  415c8e:	mov    dh,ah
  415c90:	lea    ecx,[esi-0x18db3291]
  415c96:	or     eax,0x4e940bfe
  415c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c9c:	pusha  
  415c9d:	push   edx
  415c9e:	test   DWORD PTR [ebx],0x29e5b0f
  415ca4:	add    dl,BYTE PTR [eax+0x1f8c03eb]
  415caa:	sbb    bl,bh
  415cac:	pop    eax
  415cad:	mov    edi,DWORD PTR [edx+0x7d]
  415cb0:	mov    ebx,DWORD PTR [eax+0x160503df]
  415cb6:	xlat   BYTE PTR ds:[ebx]
  415cb7:	dec    ebx
  415cb9:	ins    BYTE PTR es:[edi],dx
  415cba:	lahf   
  415cbb:	jp     0x415cae
  415cbd:	(bad)  
  415cbe:	jmp    0x415cc3
  415cc0:	mov    WORD PTR [ebx],ds
  415cc2:	gs repz (bad) 
  415cc5:	xchg   esp,eax
  415cc6:	fistp  QWORD PTR [eax+0x11]
  415cc9:	mov    ebx,fs
  415ccb:	add    ecx,DWORD PTR [edx+ebx*1+0x6dbe01cf]
  415cd2:	and    DWORD PTR [ebx-0x7d],edi
  415cd5:	xchg   ebx,eax
  415cd6:	push   ebp
  415cd7:	out    0x8f,eax
  415cd9:	xchg   esp,eax
  415cda:	fisttp WORD PTR [esi+0x0]
	...
  415cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf1:	pop    ds
  415cf2:	ins    DWORD PTR es:[edi],dx
  415cf3:	repz (bad) 
  415cf5:	xchg   esp,eax
  415cf6:	fistp  QWORD PTR [edx+0x9]
  415cf9:	(bad)  
  415cfa:	jmp    0x415cff
  415cfc:	mov    esp,ss
  415cfe:	js     0x415d55
  415d00:	xchg   DWORD PTR [eax+0x130503df],edx
  415d06:	iret   
  415d07:	call   DWORD PTR [ebx+0x6c]
  415d0a:	push   0x7d
  415d0c:	mov    ds:0x1603df90,eax
  415d11:	test   ecx,esp
  415d13:	aad    0x3a
  415d15:	push   edi
  415d16:	addr16 adc al,0x33
  415d19:	sbb    ah,bl
  415d1b:	pop    es
  415d1c:	mov    WORD PTR [esp+esi*1-0x30eceae3],ss
  415d23:	pop    es
  415d24:	mov    WORD PTR [eax+ecx*1+0xc8d0660],ss
  415d2b:	jmp    0x57c131bf
  415d30:	lods   al,BYTE PTR ds:[esi]
  415d31:	nop
  415d32:	or     cl,ch
  415d34:	or     BYTE PTR [ebx],dl
  415d36:	sbb    ch,ch
  415d38:	(bad)  
  415d39:	xchg   esp,eax
  415d3a:	and    DWORD PTR [edi-0x78],0x11e90890
  415d41:	test   DWORD PTR [edx],ecx
  415d43:	fwait
  415d44:	mov    ss,WORD PTR [edi-0x80]
  415d47:	(bad)  [eax-0x701aebe6]
  415d4d:	xchg   esp,eax
  415d4e:	jnp    0x415d50
  415d50:	adc    edx,DWORD PTR [ebx]
  415d52:	sbb    ch,ah
	...
  415d68:	(bad)  
  415d69:	xchg   esp,eax
  415d6a:	jg     0x415ddb
  415d6c:	nop
  415d6d:	nop
  415d6e:	or     cl,ch
  415d70:	dec    edi
  415d71:	adc    esp,DWORD PTR [esi+0x8948be5]
  415d77:	jo     0x415d7f
  415d79:	test   DWORD PTR [ecx+ebp*8],ecx
  415d7c:	(bad)  
  415d7d:	sbb    eax,0x9493d18e
  415d82:	or     BYTE PTR [ecx],bh
  415d84:	test   al,0x6b
  415d86:	cmp    ebp,0xffffff93
  415d89:	xchg   esp,eax
  415d8a:	or     BYTE PTR [eax+edx*4-0x6c0671e3],bl
  415d91:	xchg   esp,eax
  415d92:	or     BYTE PTR [eax+0x16],dh
  415d95:	mov    WORD PTR [ecx+ebp*8],cs
  415d98:	(bad)  
  415d99:	aam    0x7f
  415d9b:	inc    edi
  415d9c:	lods   al,BYTE PTR ds:[esi]
  415d9d:	nop
  415d9e:	or     cl,ch
  415da0:	sbb    BYTE PTR [edx],dl
  415da2:	sbb    ch,ch
  415da4:	(bad)  
  415da5:	xchg   esp,eax
  415da6:	and    DWORD PTR [edi-0x69],0x5fe90890
  415dad:	mov    ah,0x7
  415daf:	pop    edi
  415db0:	mov    edx,DWORD PTR [eax-0x13cafff8]
  415db6:	sbb    eax,0xc87b38b
  415dbb:	add    BYTE PTR ds:0xf1188e18,ah
  415dc1:	xchg   esi,eax
  415dc2:	or     BYTE PTR [eax+0x7c],al
  415dc5:	and    eax,0x96e50414
  415dca:	lea    eax,[esi+0x0]
	...
  415de0:	cmc    
  415de1:	xchg   edx,eax
  415de2:	or     BYTE PTR [eax],al
  415de4:	outs   dx,BYTE PTR ds:[esi]
  415de5:	sbb    eax,0x96f50410
  415dea:	fsub   DWORD PTR [eax]
  415dec:	in     al,0x4
  415dee:	adc    al,0x4
  415df0:	in     eax,0x96
  415df2:	jns    0x415e0d
  415df4:	cs sbb eax,0x96b50418
  415dfa:	lea    eax,[esi+0x89c8d]
  415e00:	in     eax,0x17
  415e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e03:	sbb    al,0xb1
  415e05:	xchg   esi,eax
  415e06:	or     BYTE PTR [ecx+0xc8733],cl
  415e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e0d:	sbb    DWORD PTR [esi+0x896a118],edi
  415e13:	rcl    BYTE PTR [ebx+0x7dc251f6],1
  415e19:	xchg   esi,eax
  415e1a:	jg     0x415e60
  415e1c:	push   ecx
  415e1d:	xchg   edx,eax
  415e1e:	pop    esi
  415e1f:	push   edi
  415e20:	out    dx,al
  415e21:	jmp    0x612f6e52
  415e26:	xor    DWORD PTR [eax+0x73089675],eax
  415e2c:	cmp    DWORD PTR [ebx],edx
  415e2e:	repz add al,0xd6
  415e31:	mov    gs,WORD PTR [edi]
  415e33:	xchg   BYTE PTR [ecx-0x6e],dl
  415e36:	or     BYTE PTR [eax],al
  415e38:	loope  0x415e06
  415e3a:	sti    
  415e3b:	fmul   DWORD PTR [esi-0x731f78b0]
  415e41:	jns    0x415eab
  415e43:	add    DWORD PTR [eax],0x0
	...
  415e55:	add    BYTE PTR [eax],al
  415e57:	add    BYTE PTR [ecx+esi*2+0x67],cl
  415e5b:	ret    0x7b94
  415e5e:	xor    al,0x86
  415e60:	jo     0x415ed1
  415e62:	or     DWORD PTR [eax],eax
  415e64:	cwde   
  415e65:	pusha  
  415e66:	or     BYTE PTR ss:[ebx+edi*2-0x1768ef7],0xf7
  415e6f:	add    ah,bh
  415e71:	imul   esi,DWORD PTR [esi],0x0
  415e74:	mov    DWORD PTR [ebx+0x9],edi
  415e77:	jb     0x415e06
  415e79:	mov    dh,BYTE PTR ds:0x97b6100
  415e7f:	jb     0x415e0e
  415e81:	mov    edx,0x8e84e8c9
  415e86:	mov    eax,eax
  415e88:	(bad)  
  415e89:	mov    esp,esp
  415e8b:	es (bad) 
  415e8d:	repnz pop es
  415e8f:	push   esi
  415e90:	pop    es
  415e91:	mov    edx,0x5fa4d883
  415e96:	repz std 
  415e98:	stos   DWORD PTR es:[edi],eax
  415e99:	enter  0x1840,0x96
  415e9d:	ss push 0x963ce5e
  415ea3:	push   ebp
  415ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ea5:	outs   dx,DWORD PTR ds:[esi]
  415ea6:	repz std 
  415ea8:	mov    ebx,DWORD PTR [edx]
  415eaa:	mov    eax,es
  415eac:	mov    BYTE PTR [ecx-0x35],dl
  415eaf:	or     BYTE PTR [esi+ebp*1+0x73a85c84],cl
  415eb6:	pop    esi
  415eb7:	push   esi
  415eb8:	pop    ss
  415eb9:	mov    WORD PTR [ebx+0xbe],cs
	...
  415ecf:	add    BYTE PTR [edi+esi*2+0x28c0009],dh
  415ed6:	sbb    BYTE PTR [edi+esi*2+0xd00097c],al
  415edd:	mov    WORD PTR [eax],ax
  415ee0:	mov    WORD PTR [edi+ebx*8+0x53157b74],ss
  415ee7:	sub    BYTE PTR [eax+edx*4-0x5ecbc1ae],dl
  415eee:	fiadd  DWORD PTR [eax]
  415ef0:	and    bl,BYTE PTR ds:0x6d5cebbd
  415ef6:	mov    dh,0x0
  415ef8:	push   es
  415ef9:	pop    edx
  415efa:	(bad)  
  415efb:	std    
  415efc:	push   es
  415efd:	imul   esp,DWORD PTR [esi+0x7b0488d],0xeb84228d
  415f07:	add    ecx,DWORD PTR [esi+ebx*1-0x6d14d856]
  415f0e:	test   al,0x5
  415f10:	and    ecx,ecx
  415f12:	ja     0x415f19
  415f14:	fst    DWORD PTR [ecx]
  415f16:	iret   
  415f17:	pop    es
  415f18:	mov    WORD PTR [eax+ebp*2-0x206f8f5f],ss
  415f1f:	add    esp,DWORD PTR [edx-0x39]
  415f22:	retf   0x84c5
  415f25:	xchg   esp,eax
  415f26:	(bad)  
  415f27:	shl    BYTE PTR [ecx-0x6fe0626e],1
  415f2d:	xchg   esp,eax
  415f2e:	fisttp WORD PTR [esi+0x1ab49b31]
	...
  415f48:	add    eax,0x8c07cf12
  415f4d:	xchg   esp,eax
  415f4e:	push   0xdf90a489
  415f53:	add    ecx,esp
  415f55:	sbb    eax,0x94901f5d
  415f5a:	fisttp WORD PTR [edx+0x3e3850a]
  415f60:	mov    WORD PTR [ebx],ds
  415f62:	ins    DWORD PTR es:[edi],dx
  415f63:	sbb    ecx,DWORD PTR [eax-0x7b72206c]
  415f69:	xchg   edx,eax
  415f6a:	cmp    BYTE PTR [ecx],al
  415f6c:	dec    esp
  415f6d:	sbb    eax,0x268ee108
  415f72:	adc    al,0xe5
  415f74:	(bad)  
  415f75:	xchg   esp,eax
  415f76:	jnp    0x415f78
  415f78:	pop    es
  415f79:	(bad)  
  415f7b:	in     eax,0x8f
  415f7d:	xchg   esp,eax
  415f7e:	jg     0x415fef
  415f80:	mov    BYTE PTR [eax+0xfcfe908],dl
  415f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f87:	in     eax,0x93
  415f89:	xchg   esp,eax
  415f8a:	or     BYTE PTR [eax+0xa],dh
  415f8d:	test   DWORD PTR [ecx+ebp*8],ecx
  415f90:	(bad)  
  415f91:	sbb    eax,0x948bd18e
  415f96:	or     BYTE PTR [ecx-0x5726e250],bh
  415f9c:	out    0x9c,al
  415f9e:	mov    DWORD PTR [ebx-0x607e3d72],ebp
  415fa4:	lock dec edi
  415fa6:	repnz xchg bl,bl
  415fa9:	sbb    eax,0xd98e
	...
  415fbe:	add    BYTE PTR [eax],al
  415fc0:	mov    edx,DWORD PTR [eax+ecx*1+0x72ca861]
  415fc7:	jmp    0x6f48f45b
  415fcc:	mov    al,ds:0xe90890
  415fd1:	pop    es
  415fd2:	sub    al,0xed
  415fd4:	(bad)  
  415fd5:	xchg   esp,eax
  415fd6:	xchg   DWORD PTR [edx+0x8],edx
  415fd9:	xchg   ebp,eax
  415fda:	or     cl,ch
  415fdc:	push   ds
  415fdd:	mov    WORD PTR [ecx+0xa8c6bcd],cs
  415fe3:	(bad)  
  415fe4:	fdiv   QWORD PTR [eax+0x56169810]
  415fea:	loopne 0x41606a
  415fec:	jbe    0x416057
  415fee:	cmc    
  415fef:	mov    esi,0x2b51cbd1
  415ff4:	cwde   
  415ff5:	xchg   esp,eax
  415ff6:	xchg   DWORD PTR [edx],edx
  415ff8:	mov    BYTE PTR [ebx-0x1a9afff8],dl
  415ffe:	or     al,0x29
  416000:	sub    DWORD PTR [edi-0x6cc17ef0],ebp
  416006:	jno    0x416008
  416008:	xor    eax,0x69290ce5
  41600d:	mov    esp,0xbc618b10
  416012:	adc    BYTE PTR [ecx-0x52],dl
  416015:	pop    ecx
  416016:	loopne 0x416084
  416018:	aas    
  416019:	repz pop di
  41601c:	jae    0x416013
  41601e:	dec    edi
  41601f:	ret    0x931d
  416022:	retf   
  416023:	xchg   BYTE PTR [eax],al
	...
  416035:	add    BYTE PTR [eax],al
  416037:	add    BYTE PTR [ebp-0xbfff764],cl
  41603d:	xchg   edx,eax
  41603e:	or     BYTE PTR [eax],al
  416040:	fs push 0xffffff88
  416043:	add    ch,ah
  416045:	xchg   edx,eax
  416046:	ja     0x416091
  416048:	jbe    0x416031
  41604a:	sub    al,0x18
  41604c:	jmp    0x737cab32
  416051:	scas   eax,DWORD PTR es:[edi]
  416052:	or     al,0x0
  416054:	in     eax,0xde
  416056:	xor    ch,al
  416058:	scas   eax,DWORD PTR es:[edi]
  416059:	ins    BYTE PTR es:[edi],dx
  41605a:	repz jmp FWORD PTR [esi]
  41605d:	pop    ecx
  41605e:	loopne 0x416063
  416060:	das    
  416061:	repz mov sp,WORD PTR [ebx+0x7b]
  416066:	sar    ecx,0x42
  416069:	data16 add BYTE PTR [ecx+ecx*4-0x78],0x7f
  41606f:	mov    ?,WORD PTR [ebp+0x1f00088e]
  416075:	inc    edx
  416076:	sub    al,0x1
  416078:	ja     0x4160be
  41607a:	or     al,dl
  41607c:	adc    bl,BYTE PTR [edx]
  41607e:	cmc    
  41607f:	(bad)  
  416080:	jmp    0x416003
  416082:	or     al,0x0
  416084:	sbb    DWORD PTR gs:[esi+0x9778c24],edx
  41608b:	add    dl,al
  41608d:	cmp    BYTE PTR [edx-0x3e],dl
  416090:	test   BYTE PTR [ebx-0x76],bh
  416093:	int    0x53
  416095:	jge    0x41604a
  416097:	sbb    al,0x90
  416099:	jnp    0x4160a4
  41609b:	mov    eax,DWORD PTR [eax]
	...
  4160ad:	add    BYTE PTR [eax],al
  4160af:	add    BYTE PTR [ebx+0x7177074],dh
  4160b5:	neg    BYTE PTR [esp+eax*1]
  4160b8:	mov    WORD PTR [ebx-0x7e],?
  4160bb:	xchg   BYTE PTR [edi+esi*2-0xb33fff7],al
  4160c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160c3:	sbb    al,0x90
  4160c5:	jnp    0x4160d0
  4160c7:	xchg   DWORD PTR [edx],ecx
  4160c9:	dec    esp
  4160ca:	or     eax,0x8ef28c00
  4160cf:	sbb    BYTE PTR [eax-0x6375f685],cl
  4160d5:	jns    0x4160ae
  4160d7:	dec    dh
  4160d9:	jecxz  0x4160f7
  4160db:	jmp    FWORD PTR [ecx]
  4160dd:	pusha  
  4160de:	or     eax,0x11808c00
  4160e3:	mov    DWORD PTR [edx],edx
  4160e5:	dec    esp
  4160e6:	or     eax,0x8ee48c00
  4160eb:	sbb    BYTE PTR [eax+0x1540097b],dl
  4160f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f2:	sub    BYTE PTR [esp+ecx*4],al
  4160f5:	jnp    0x416079
  4160f7:	xchg   BYTE PTR [edi+ebp*2-0x9e8fff7],bl
  4160fe:	adc    al,0x4
  416100:	mov    WORD PTR [ebx-0x27],?
  416103:	and    BYTE PTR [edi-0x13],dl
  416106:	and    BYTE PTR [esp+ecx*4],al
  416109:	jnp    0x416188
  41610b:	jb     0x416124
  41610d:	mov    edx,0xfa94e8c9
  416112:	int3   
  416113:	add    DWORD PTR [eax],eax
	...
  416125:	add    BYTE PTR [eax],al
  416127:	add    ah,bl
  416129:	xchg   esp,eax
  41612a:	pop    ss
  41612b:	xchg   esi,eax
  41612c:	jnp    0x416193
  41612e:	push   ss
  41612f:	mov    DWORD PTR [edx],ebx
  416131:	test   bl,ah
  416133:	add    ecx,DWORD PTR [esp+ebx*1+0x655bbbf8]
  41613a:	fild   WORD PTR [ebx]
  41613c:	push   ebx
  41613d:	bswap  edi
  41613f:	pop    es
  416140:	mov    WORD PTR [eax+ebp*2-0x206f9762],ss
  416147:	add    edi,DWORD PTR [ebx-0x73fca097]
  41614d:	xchg   esp,eax
  41614e:	push   edx
  41614f:	sbb    al,0xd
  416151:	clc    
  416152:	add    ebx,DWORD PTR [esi+ecx*4]
  416155:	sbb    DWORD PTR [ebx],edi
  416157:	sub    BYTE PTR [edx+eax*8+0x7a],dh
  41615b:	int    0x24
  41615d:	lock enter 0x9fc,0xc5
  416162:	sbb    eax,0xe752655f
  416167:	add    edi,DWORD PTR [ebx+0x69]
  41616a:	fild   WORD PTR [esi]
  41616c:	mov    WORD PTR [ecx+edx*1-0x3c2f4cf8],ss
  416173:	sbb    esp,DWORD PTR [ebx+0x69]
  416176:	fistp  QWORD PTR [esi-0x74]
  416179:	xchg   esp,eax
  41617a:	icebp  
  41617b:	push   0xffffffab
  41617d:	ror    bl,1
  41617f:	sbb    edx,DWORD PTR ds:0x5e1bc3c0
  416185:	sbb    DWORD PTR [ebp+0x6e6b83eb],edx
  41618b:	cld    
	...
  4161a0:	push   ecx
  4161a1:	(bad)  
  4161a2:	mov    ah,0x58
  4161a4:	into   
  4161a5:	fild   WORD PTR [edx]
  4161a8:	loop   0x416131
  4161aa:	jmp    0x4161af
  4161ac:	mov    edi,ds
  4161ae:	call   0xebc56c3b
  4161b3:	add    ecx,DWORD PTR [ebp+ecx*1-0x675890f8]
  4161ba:	or     cl,ch
  4161bc:	iret   
  4161bd:	sbb    esp,DWORD PTR [esi+0x8948405]
  4161c3:	jo     0x4161d6
  4161c5:	test   DWORD PTR [ecx+ebp*8],ecx
  4161c8:	(bad)  
  4161c9:	or     eax,0x9493f18e
  4161ce:	or     BYTE PTR [ecx],bl
  4161d0:	scas   eax,DWORD PTR es:[edi]
  4161d1:	arpl   WORD PTR [ebx+0x89493dd],si
  4161d7:	jl     0x41617f
  4161d9:	or     eax,0x9493d98e
  4161de:	or     BYTE PTR [eax+0xe],dh
  4161e1:	jge    0x4161ef
  4161e3:	jmp    0x87c13677
  4161e8:	test   BYTE PTR [eax+0x1b08e908],bl
  4161ee:	sbb    ch,ch
  4161f0:	(bad)  
  4161f1:	xchg   esp,eax
  4161f2:	and    DWORD PTR [edi-0x58],0xdfe90898
  4161f9:	mov    ah,0x81
  4161fb:	adc    eax,0x725a7cac
  416200:	(bad)  
  416201:	ins    BYTE PTR es:[edi],dx
  416202:	fsub   QWORD PTR [ecx+0x0]
	...
  416218:	out    0x61,eax
  41621a:	push   ebp
  41621b:	aaa    
  41621c:	inc    ebp
  41621d:	mov    ebp,0xd8fe1ca
  416222:	dec    esp
  416223:	int    0xd3
  416225:	push   cs
  416226:	cwde   
  416227:	jmp    0xb336c563
  41622c:	sbb    BYTE PTR [ecx-0x157016f4],bl
  416232:	(bad)  
  416234:	add    DWORD PTR [ecx-0x627016f4],edx
  41623a:	(bad)  
  41623b:	fisttp WORD PTR [ebp+ebp*4-0x6b73d439]
  416242:	and    DWORD PTR [eax],eax
  416244:	fs xchg ebp,eax
  416246:	or     BYTE PTR [eax+0x74],ch
  416249:	xchg   edi,eax
  41624a:	retf   0x7504
  41624d:	stos   BYTE PTR es:[edi],al
  41624e:	enter  0x71c2,0x97
  416252:	xchg   esp,ebp
  416254:	jne    0x416220
  416256:	pop    ecx
  416257:	mov    ebx,DWORD PTR [ecx]
  416259:	sub    DWORD PTR [eax],0x56
  41625c:	inc    esi
  41625d:	inc    edx
  41625e:	jg     0x416251
  416260:	and    dl,BYTE PTR [eax]
  416262:	push   esp
  416263:	and    al,0x35
  416265:	adc    BYTE PTR [esp+0x2d],dl
  416269:	mov    al,ds:0x973108a6
  41626e:	or     BYTE PTR [edi],cl
  416270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416271:	cmp    ecx,DWORD PTR [eax]
  416273:	add    BYTE PTR ds:0x118cff72,ah
  416279:	or     DWORD PTR [eax],0x0
	...
  416290:	xor    eax,0x91648197
  416295:	cwde   
  416296:	jg     0x41621e
  416298:	and    DWORD PTR [ebx-0xb],esp
  41629b:	(bad)  
  41629c:	js     0x4162ad
  41629e:	or     BYTE PTR [eax-0xc],ch
  4162a1:	xchg   esi,eax
  4162a2:	das    
  4162a3:	enter  0x87c3,0x7f
  4162a7:	mov    ?,ecx
  4162a9:	(bad)  
  4162aa:	cmc    
  4162ab:	(bad)  
  4162ac:	out    dx,al
  4162ad:	push   edi
  4162ae:	jle    0x4162b4
  4162b0:	into   
  4162b1:	push   edi
  4162b2:	fisttp WORD PTR [ebx]
  4162b4:	into   
  4162b5:	push   edi
  4162b6:	or     DWORD PTR [eax],eax
  4162b8:	jge    0x416253
  4162ba:	or     bl,ch
  4162bc:	mov    bh,0xa9
  4162be:	enter  0x2b8b,0x8f
  4162c2:	or     al,0x0
  4162c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162c5:	lea    edi,[esi+0x4d24ba11]
  4162cb:	add    DWORD PTR [esi],ebx
  4162cd:	rcr    DWORD PTR [esi+0xdf68c04],cl
  4162d3:	mov    al,BYTE PTR [edi]
  4162d5:	xchg   ebx,eax
  4162d6:	or     DWORD PTR [ebx+ecx*1],0xffffffe6
  4162da:	xchg   DWORD PTR [eax],ecx
  4162dc:	nop
  4162dd:	imul   ecx,DWORD PTR [ecx],0xd
  4162e0:	cmp    bh,BYTE PTR [edx+eax*1]
  4162e3:	mov    dh,0xcc
  4162e5:	ins    BYTE PTR es:[edi],dx
  4162e6:	xchg   BYTE PTR [edx+ebx*1+0x70],cl
  4162ea:	xchg   BYTE PTR [esi+0x97790],dl
  4162f0:	adc    eax,0xb78c60
	...
  416305:	add    BYTE PTR [eax],al
  416307:	add    BYTE PTR [ebp-0x72fff695],cl
  41630d:	jmp    0x6bcd6707
  416312:	or     al,0x8e
  416314:	xchg   esp,eax
  416315:	outs   dx,DWORD PTR ds:[esi]
  416316:	or     DWORD PTR [eax],eax
  416318:	pop    es
  416319:	cli    
  41631a:	cmc    
  41631b:	add    ecx,DWORD PTR [ebx+ebp*2-0xe88377c]
  416322:	add    BYTE PTR [esp+ecx*4],al
  416325:	imul   ecx,DWORD PTR [edx+0x9d38cf7],0x0
  41632c:	call   0xf570:0x12874172
  416333:	inc    DWORD PTR [ebx]
  416335:	gs lahf 
  416337:	or     BYTE PTR [eax+0xe0d096b],dl
  41633d:	xchg   bh,ch
  41633f:	std    
  416340:	jmp    0x416328
  416342:	dec    eax
  416343:	and    al,0x9c
  416345:	lds    ecx,FWORD PTR [eiz*2-0x3dcb9473]
  41634c:	pop    edx
  41634d:	jno    0x4162d1
  41634f:	push   esp
  416350:	jo     0x41636d
  416352:	in     al,0x7
  416354:	pmulhuw mm1,QWORD PTR [ecx]
  416357:	or     eax,0x93612
  41635c:	mov    WORD PTR [esi+edi*8-0x196bb04f],ss
  416363:	mov    cl,0x57
  416365:	xchg   ebx,eax
  416366:	push   0x40
  416368:	adc    bl,BYTE PTR [ecx+0x386a]
	...
  41637e:	add    BYTE PTR [eax],al
  416380:	add    al,0x9e
  416382:	dec    edx
  416383:	or     DWORD PTR [eax],edx
  416385:	and    eax,0xd8c03e0
  41638a:	ins    DWORD PTR es:[edi],dx
  41638b:	and    al,0x90
  41638d:	xchg   esp,eax
  41638e:	fild   WORD PTR [esi+0x40269188]
  416394:	mov    al,0x80
  416396:	fisttp WORD PTR [ebx]
  416398:	mov    WORD PTR [edx+ebx*8+0x6a9edebe],ss
  41639f:	stc    
  4163a0:	xchg   ebp,eax
  4163a1:	pop    ebp
  4163a2:	jae    0x4163d3
  4163a4:	pop    ss
  4163a5:	sbb    edi,ebx
  4163a7:	imul   eax,DWORD PTR [ebx+0x61],0xffffffba
  4163ab:	adc    DWORD PTR [eax-0x45fc2068],0x98817a7c
  4163b5:	cwde   
  4163b6:	fild   WORD PTR [ebx]
  4163b8:	gs pop esp
  4163ba:	push   ebp
  4163bb:	add    BYTE PTR [ebp+0x5c],ah
  4163be:	retf   0x6507
  4163c1:	pop    esp
  4163c2:	pusha  
  4163c3:	ror    BYTE PTR [esp+ebp*8-0x6a0afc20],0xf2
  4163cb:	clc    
  4163cc:	add    eax,0x34376a9a
  4163d1:	pavgw  mm1,QWORD PTR [eax]
  4163d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d5:	push   edi
  4163d6:	adc    cl,ah
  4163d8:	fwait
  4163d9:	enter  0x27c3,0x62
  4163dd:	cwde   
  4163de:	push   0xcab0a84f
  4163e3:	cld    
	...
  4163f8:	cdq    
  4163f9:	sbb    BYTE PTR [ecx],dl
  4163fb:	add    ecx,DWORD PTR [esp+edx*4-0x6be79bf8]
  416402:	or     cl,ch
  416404:	(bad)  
  416405:	or     eax,ebx
  416407:	adc    bl,al
  416409:	sbb    BYTE PTR [ebp+eax*1+0x7c],al
  41640d:	fwait
  41640e:	inc    esp
  41640f:	or     eax,0x138d8f64
  416414:	(bad)  
  416415:	xchg   esp,eax
  416416:	or     BYTE PTR [edx-0x2d],dh
  416419:	mov    eax,0x5f937318
  41641e:	das    
  41641f:	popf   
  416420:	xchg   edx,eax
  416421:	xchg   esp,eax
  416422:	sbb    DWORD PTR [ebp-0x144e776d],0x9508948f
  41642c:	mov    ebx,DWORD PTR [ebp+0x605bcd86]
  416432:	cmc    
  416433:	(bad)  
  416435:	dec    edx
  416436:	or     cl,ch
  416438:	(bad)  
  416439:	or     eax,0x9d7fc55c
  41643e:	sar    BYTE PTR [edx+0x6e],cl
  416441:	or     eax,DWORD PTR [ebx-0x15]
  416444:	add    BYTE PTR [ebp+0x21],ch
  416447:	push   ebp
  416448:	ins    BYTE PTR es:[edi],dx
  416449:	lods   al,BYTE PTR ds:[esi]
  41644a:	and    BYTE PTR ds:0xe8329495,0x9c
  416451:	xchg   esi,eax
  416452:	dec    ecx
  416453:	sub    BYTE PTR [edi+0x3a],dl
  416456:	jp     0x416413
  416458:	pop    ss
  416459:	shr    DWORD PTR [edx*8+0x0],1
	...
  416470:	push   ss
  416471:	icebp  
  416472:	sub    al,0x1
  416474:	mov    bh,0x3a
  416476:	add    eax,0x894e965
  41647b:	jmp    0xf96e2526
  416480:	jno    0x41645b
  416482:	pop    ecx
  416483:	cmp    BYTE PTR [edi],al
  416485:	dec    edi
  416486:	loopne 0x4164e3
  416488:	(bad)  
  416489:	popa   
  41648a:	cmc    
  41648b:	add    BYTE PTR [esi],bh
  41648d:	int3   
  41648e:	sub    al,0x10
  416490:	les    ebp,FWORD PTR ds:[eax+ebx*1]
  416494:	xchg   esp,eax
  416495:	ret    0xce7f
  416498:	cs jo  0x41647b
  41649b:	lahf   
  41649c:	das    
  41649d:	repz sub edi,DWORD PTR [di]
  4164a1:	or     eax,DWORD PTR [esp-0x67]
  4164a5:	xchg   edx,eax
  4164a6:	loope  0x416460
  4164a8:	bnd ja 0x416477
  4164ab:	dec    esi
  4164ac:	retf   0x7f6d
  4164af:	ins    BYTE PTR es:[edi],dx
  4164b0:	mov    DWORD PTR [eax+0xa67fab5],esi
  4164b6:	retf   0xcdc1
  4164b9:	xchg   DWORD PTR [edi],eax
  4164bb:	ret    0x9f76
  4164be:	sub    al,0x10
  4164c0:	outs   dx,BYTE PTR ds:[esi]
  4164c1:	cmp    edi,DWORD PTR [esi+0x6]
  4164c4:	in     al,dx
  4164c5:	int3   
  4164c6:	sub    al,0x18
  4164c8:	mov    cs,edx
  4164ca:	das    
  4164cb:	mov    ds,WORD PTR [ecx+0x5f]
  4164ce:	cmc    
  4164cf:	(bad)  
  4164d0:	mov    eax,0x5157a1
	...
  4164e5:	add    BYTE PTR [eax],al
  4164e7:	add    BYTE PTR [esi+0x3f63e056],ch
  4164ed:	repz mov bp,WORD PTR [ecx-0x4c]
  4164f2:	sbb    BYTE PTR [ebx+0x244c0a3d],cl
  4164f8:	sbb    eax,0xf38b58c5
  4164fd:	push   0x58
  4164ff:	cli    
  416500:	shl    BYTE PTR [ebp+0x7f],cl
  416503:	enter  0x4d9e,0x7f
  416507:	ins    BYTE PTR es:[edi],dx
  416508:	mov    DWORD PTR [eax+0x2d0fabb0],esi
  41650e:	and    dh,bh
  416510:	cld    
  416511:	or     edx,eax
  416513:	sar    esp,0x85
  416516:	pop    es
  416517:	retf   0x6a8c
  41651a:	ret    0x4039
  41651d:	pop    ecx
  41651e:	sbb    DWORD PTR [edx-0x68],esi
  416521:	loop   0x416568
  416523:	and    al,0x98
  416525:	in     al,0x45
  416527:	and    al,0x94
  416529:	hlt    
  41652a:	pop    ebp
  41652b:	and    al,0x9c
  41652d:	shl    BYTE PTR [esi+0x0],0x34
  416531:	ins    BYTE PTR es:[edi],dx
  416532:	or     DWORD PTR [ecx],edi
  416534:	or     bh,BYTE PTR [ecx-0xb]
  416537:	call   FWORD PTR [ebx+0xa89113e]
  41653d:	inc    ecx
  41653e:	cmc    
  41653f:	dec    DWORD PTR [ebx-0x77890b6d]
  416545:	xor    ah,0xe9
  416548:	mov    BYTE PTR [edx+0x7ff4],dl
	...
  41655e:	add    BYTE PTR [eax],al
  416560:	dec    ebx
  416561:	ins    BYTE PTR es:[edi],dx
  416562:	popa   
  416563:	jmp    FWORD PTR [ebx-0x7d]
  416566:	pop    es
  416567:	xor    DWORD PTR [ebx-0x1d],esp
  41656a:	or     ecx,DWORD PTR [ecx-0x797d3b68]
  416570:	lods   al,BYTE PTR ds:[esi]
  416571:	ja     0x41657c
  416573:	add    BYTE PTR [edi+0x686c8aae],cl
  416579:	aas    
  41657a:	or     al,0x74
  41657c:	sahf   
  41657d:	lock dec BYTE PTR ds:0xfdfbae09
  416584:	sub    eax,DWORD PTR [ebx+0x4]
  416587:	xchg   eax,edx
  416589:	xchg   edi,eax
  41658a:	adc    al,0x87
  41658c:	mov    eax,0xc8891c8f
  416591:	xchg   edi,eax
  416592:	sub    BYTE PTR [ecx-0x76e370a0],cl
  416598:	push   eax
  416599:	xchg   edi,eax
  41659a:	adc    al,0x5d
  41659c:	pop    edx
  41659d:	mov    BYTE PTR [ecx+0x4f48850],al
  4165a3:	pop    ecx
  4165a4:	setne  BYTE PTR [ebx-0x207b31ec]
  4165ab:	sub    al,0x9c
  4165ae:	bound  edi,QWORD PTR [eax-0x58]
  4165b1:	fcomp  st(7)
  4165b3:	dec    ebp
  4165b4:	adc    eax,0x7d0af464
  4165b9:	push   esp
  4165ba:	adc    eax,0xa19cd081
  4165bf:	sbb    al,0x8c
  4165c1:	or     DWORD PTR [ebx],ebp
  4165c3:	and    BYTE PTR [eax],al
	...
  4165d5:	add    BYTE PTR [eax],al
  4165d7:	add    BYTE PTR [edi+edx*1+0x1f],cl
  4165db:	outs   dx,DWORD PTR ds:[esi]
  4165dc:	xchg   esi,eax
  4165dd:	adc    DWORD PTR [edi],esi
  4165df:	cmc    
  4165e0:	cmp    dl,BYTE PTR [ecx]
  4165e2:	and    edi,DWORD PTR [esi+ecx*8]
  4165e5:	jl     0x4165c6
  4165e7:	mov    al,bl
  4165e9:	mov    eax,0xe84b7ea3
  4165ee:	inc    ebp
  4165ef:	mov    eax,esp
  4165f1:	mov    eax,0xe85e7eab
  4165f6:	dec    ebp
  4165f7:	mov    edx,DWORD PTR [edx]
  4165f9:	mov    bl,ah
  4165fb:	add    ecx,DWORD PTR [esp+ecx*8-0x67538188]
  416602:	fild   WORD PTR [ebx]
  416604:	or     ecx,DWORD PTR [esi]
  416606:	out    dx,eax
  416607:	dec    DWORD PTR [ebx+0x5d]
  41660a:	inc    edi
  41660b:	out    0x45,al
  41660d:	outs   dx,BYTE PTR ds:[esi]
  41660e:	pop    edx
  41660f:	xor    DWORD PTR [ebx-0x3b],edx
  416612:	out    dx,al
  416613:	lods   eax,DWORD PTR ds:[esi]
  416614:	sti    
  416615:	xchg   ebx,eax
  416616:	scas   eax,DWORD PTR es:[edi]
  416617:	inc    edx
  416618:	mov    WORD PTR [ebx-0x61],es
  41661b:	xor    BYTE PTR [ecx-0x73],cl
  41661e:	popf   
  41661f:	mov    edx,0x420ad1b
  416624:	inc    ebx
  416625:	push   esp
  416626:	adc    bh,BYTE PTR [ebp+0x1882699]
  41662c:	mov    esp,0xccd2dfd3
  416631:	mov    al,ds:0x2688ae08
  416636:	scas   eax,DWORD PTR es:[edi]
  416637:	jmp    0x0:0xb8089d9f
	...
  41664e:	add    BYTE PTR [eax],al
  416650:	iret   
  416651:	adc    al,bh
  416653:	in     eax,0x9c
  416655:	push   edi
  416656:	xchg   DWORD PTR [eax-0x160aa271],edx
  41665c:	cmp    eax,0x88a98b55
  416661:	adc    DWORD PTR [ecx+0x59948ff0],esi
  416667:	pusha  
  416668:	or     DWORD PTR [ecx],0x520ee546
  41666e:	adc    BYTE PTR [ecx-0x1649a35e],cl
  416674:	mov    ss,WORD PTR [eax+ecx*1+0x5c5d3764]
  41667b:	pusha  
  41667c:	sahf   
  41667d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41667e:	enter  0x8fec,0x94
  416682:	or     cl,ch
  416684:	add    al,0xb4
  416686:	int    0xad
  416688:	jb     0x4166e6
  41668a:	cmc    
  41668b:	jmp    0x29cafb1f
  416690:	arpl   WORD PTR [edi-0x6b701af8],bx
  416696:	jp     0x41669d
  416698:	push   cs
  416699:	push   edi
  41669a:	or     ch,ah
  41669c:	(bad)  
  41669d:	xchg   esp,eax
  41669e:	mov    DWORD PTR [eax],ebp
  4166a0:	inc    ebx
  4166a1:	lods   eax,DWORD PTR ds:[esi]
  4166a2:	icebp  
  4166a3:	je     0x4166ee
  4166a5:	push   cs
  4166a6:	xchg   ch,bl
  4166a8:	xor    ebx,DWORD PTR [ebp+esi*8+0x62]
  4166ac:	cdq    
  4166ad:	adc    eax,0x12a1e6c0
  4166b2:	sub    al,0xe5
	...
  4166c8:	(bad)  
  4166c9:	xchg   esp,eax
  4166ca:	jg     0x416733
  4166cc:	adc    BYTE PTR [eax-0x57716f8],bl
  4166d2:	or     eax,DWORD PTR [eax]
  4166d4:	icebp  
  4166d5:	xchg   edi,eax
  4166d6:	or     BYTE PTR [ecx+0xc947b],cl
  4166dc:	in     eax,0xd8
  4166de:	xor    cl,BYTE PTR [ebx+0xc7c4b]
  4166e4:	cmc    
  4166e5:	ficomp DWORD PTR [esi+0x897f110]
  4166eb:	mov    DWORD PTR [ebx],edi
  4166ed:	js     0x4166fb
  4166ef:	add    BYTE PTR [ebp+0x71890dd9],dh
  4166f5:	lods   al,BYTE PTR ds:[esi]
  4166f6:	adc    al,0x8b
  4166f8:	jno    0x4166a6
  4166fa:	pop    esp
  4166fb:	mov    BYTE PTR [edi-0x4eeb6970],ch
  416701:	xchg   edi,eax
  416702:	or     BYTE PTR [ecx],al
  416704:	or     eax,DWORD PTR [ecx-0x605afff4]
  41670a:	lea    edi,[ecx+eax*4-0x80]
  41670e:	lea    edi,[ecx+edx*4-0x78]
  416712:	lea    ebx,[esi+0x89369]
  416718:	cld    
  416719:	les    ebp,FWORD PTR [eax+ebx*2]
  41671c:	jle    0x416770
  41671e:	add    eax,DWORD PTR [esi+0x88fa6]
  416724:	fmul   DWORD PTR [ebx]
  416726:	or     BYTE PTR [eax],al
  416728:	gs xchg edi,eax
  41672a:	jg     0x416770
	...
  416740:	inc    ecx
  416741:	retf   
  416742:	mov    eax,eax
  416744:	and    DWORD PTR [ecx-0x70aeb381],ebp
  41674a:	xor    eax,0x10b2e989
  41674f:	test   BYTE PTR [ebp+ebx*8+0x21],ch
  416753:	mov    eax,DWORD PTR [ecx]
  416755:	mov    bl,0x68
  416757:	mov    ebx,DWORD PTR [ebx+0x25000c87]
  41675d:	jp     0x4167a3
  41675f:	and    al,0x8c
  416761:	popf   
  416762:	pop    esi
  416763:	mov    DWORD PTR [edx],esp
  416765:	popa   
  416766:	or     eax,0x50868c00
  41676b:	and    al,0x5c
  41676d:	jl     0x4167e4
  41676f:	dec    esp
  416770:	test   al,0x81
  416772:	pop    esi
  416773:	dec    edi
  416774:	jmp    0x416772
  416776:	(bad)  
  416777:	les    edi,FWORD PTR [eax+ebp*8-0x37]
  41677b:	or     eax,0x18010
  416780:	mov    WORD PTR [esi+0x45],es
  416783:	and    al,0xa8
  416785:	sbb    BYTE PTR [esi],0x89
  416788:	xor    BYTE PTR [ecx+0x4d],cl
  41678b:	mov    DWORD PTR [eax+0x51],esp
  41678e:	dec    ecx
  41678f:	xchg   DWORD PTR [eax],esp
  416791:	dec    ecx
  416792:	adc    eax,0x11514087
  416797:	jmp    0x248f4e1f
  41679c:	inc    eax
  41679d:	out    0x87,al
  41679f:	adc    al,0x88
  4167a1:	ins    DWORD PTR es:[edi],dx
  4167a2:	or     DWORD PTR [ecx],ebp
	...
  4167b8:	dec    edi
  4167b9:	sbb    al,0x5e
  4167bb:	dec    edi
  4167bc:	adc    eax,edi
  4167be:	sub    al,0x34
  4167c0:	fsubrp st(6),st
  4167c2:	(bad)  
  4167c3:	call   0xfe3c0ed7
  4167c8:	pop    ss
  4167c9:	sbb    BYTE PTR ds:0xbb10f2c,ch
  4167cf:	or     eax,0xd208
  4167d4:	mov    esi,?
  4167d6:	jg     0x4167fc
  4167d8:	nop
  4167d9:	imul   ecx,DWORD PTR [ecx],0xffffffc5
  4167dc:	enter  0x1d47,0x0
  4167e0:	mov    WORD PTR [ebx+0x9],gs
  4167e3:	aaa    
  4167e4:	enter  0x1147,0x73
  4167e8:	scas   al,BYTE PTR es:[edi]
  4167e9:	out    dx,al
  4167ea:	cli    
  4167eb:	call   DWORD PTR [edx-0x72a99a6c]
  4167f1:	xchg   esp,eax
  4167f2:	fild   QWORD PTR [edx]
  4167f4:	enter  0x17b0,0x1
  4167f8:	adc    ch,cl
  4167fa:	loop   0x4167ff
  4167fc:	mov    WORD PTR ds:0xc19c2823,cs
  416802:	sbb    dl,cl
  416804:	pop    ebp
  416805:	les    ebp,FWORD PTR [edx-0x3e]
  416808:	hlt    
  416809:	jbe    0x4167c6
  41680b:	icebp  
  41680c:	loope  0x41681b
  41680e:	cmp    ebp,DWORD PTR [eax]
  416810:	xchg   esp,eax
  416811:	shl    DWORD PTR [eax],0x7d
  416814:	ret    0xb70d
  416817:	fadd   QWORD PTR [eax]
  416819:	bound  eax,QWORD PTR [esi+0xf1]
	...
  41682f:	add    BYTE PTR [ebp-0x688101ab],al
  416835:	xchg   ebp,eax
  416836:	fild   WORD PTR [ebx]
  416838:	add    eax,0x672bc3d1
  41683d:	xchg   esp,eax
  41683e:	in     al,dx
  41683f:	add    ecx,DWORD PTR [eax+ebx*8-0x69667b08]
  416846:	out    0x87,al
  416848:	mov    edx,DWORD PTR [ebp-0x6b38fc21]
  41684e:	les    eax,FWORD PTR [ebx]
  416850:	mov    eax,ds
  416852:	clc    
  416853:	test   BYTE PTR [ecx-0x6b],bh
  416856:	out    0x87,al
  416858:	jnp    0x4167f0
  41685a:	fild   WORD PTR [ebx]
  41685c:	adc    eax,0x154c0bb8
  416861:	rol    bl,1
  416863:	push   edi
  416864:	add    eax,0x8c07fb02
  416869:	xchg   esp,eax
  41686a:	retf   0x13c4
  41686d:	ror    bl,1
  41686f:	and    edx,esp
  416871:	les    edi,FWORD PTR [ebp+edi*1+0x3b]
  416875:	les    esp,FWORD PTR [ecx+0x8d00755]
  41687b:	int    0x6b
  41687d:	les    eax,FWORD PTR [ecx-0xdc7bfe1]
  416883:	out    0x1c,al
  416885:	or     eax,DWORD PTR [ebp+eax*1+0x70]
  416889:	mov    eax,ds:0xd500d44
  41688e:	dec    ecx
  41688f:	call   0xe56e391a
	...
  4168a8:	(bad)  
  4168a9:	fsubr  DWORD PTR [edi]
  4168ab:	jb     0x41688b
  4168ad:	lds    eax,FWORD PTR [ecx-0x2303859]
  4168b3:	scas   al,BYTE PTR es:[edi]
  4168b4:	fmul   QWORD PTR [edx]
  4168b6:	inc    esp
  4168b7:	int    0x4f
  4168b9:	adc    DWORD PTR [ebp+eax*8-0x55],ecx
  4168bd:	or     ecx,DWORD PTR [ebp+ecx*8+0x53]
  4168c1:	les    edx,FWORD PTR [edi+0x62]
  4168c4:	int    0x6b
  4168c6:	and    eax,0x8156bc7e
  4168cb:	sub    eax,0xa121b064
  4168d0:	nop
  4168d1:	push   ecx
  4168d2:	mov    al,0xb0
  4168d4:	or     eax,0xb65e3073
  4168d9:	dec    eax
  4168da:	bnd jb 0x4168a6
  4168dd:	sbb    al,ah
  4168df:	not    BYTE PTR [eax+0x119e152]
  4168e5:	leave  
  4168e6:	sub    al,0x15
  4168e8:	fisttp WORD PTR ds:0x617651c6
  4168ee:	cmc    
  4168ef:	ss call 0xe0e695b5
  4168f5:	cmp    al,0x81
  4168f7:	lods   eax,DWORD PTR ds:[esi]
  4168f8:	mov    bl,0xd4
  4168fa:	pop    edx
  4168fb:	mov    ecx,0x1fe046d0
  416900:	inc    ebp
  416901:	pop    edx
  416902:	cmc    
  416903:	ret    0xe57
  416906:	leave  
  416907:	add    BYTE PTR [esi+0x582cc7],bh
	...
  41691d:	add    BYTE PTR [eax],al
  41691f:	add    BYTE PTR [eax+edx*1+0x523603ea],ch
  416926:	mov    ch,0xf8
  416928:	aaa    
  416929:	xchg   ecx,eax
  41692a:	dec    esp
  41692b:	and    al,0x69
  41692d:	stos   DWORD PTR es:[edi],eax
  41692e:	loopne 0x4169ad
  416930:	sbb    eax,0x9244c4f
  416935:	xchg   ecx,eax
  416936:	or     BYTE PTR [eax],al
  416938:	cmc    
  416939:	or     al,0xf3
  41693b:	jbe    0x4168ca
  41693d:	test   eax,0xe4a92464
  416942:	cmp    BYTE PTR [ebx+0x5520acb1],cl
  416948:	test   bl,bl
  41694a:	(bad)  
  41694b:	call   0x34c7c3
  416950:	pop    esi
  416951:	mov    esp,0x482e442c
  416956:	jg     0x41699c
  416958:	leave  
  416959:	rcr    DWORD PTR [edx+0x50],cl
  41695c:	ds push ss
  41695e:	loopne 0x41690b
  416960:	cmp    esp,DWORD PTR [edi-0xd]
  416963:	cmp    esi,esi
  416965:	fist   DWORD PTR [esp+0x7d]
  416969:	in     eax,0x0
  41696b:	(bad)  
  41696c:	jmp    0xa5428620
  416971:	xchg   ebx,eax
  416972:	or     BYTE PTR [ebp+0x3941dde2],al
  416978:	inc    ecx
  416979:	scas   eax,DWORD PTR es:[edi]
  41697a:	dec    esp
  41697b:	jge    0x4169a7
  41697d:	fiadd  DWORD PTR [esi+0x8936914]
  416983:	push   0x0
	...
  416995:	add    BYTE PTR [eax],al
  416997:	add    BYTE PTR [edx+eax*8+0x45],dh
  41699b:	mov    eax,DWORD PTR [ebx-0x4d0c6cc8]
  4169a1:	addr16 jg 0x4169f8
  4169a4:	dec    ecx
  4169a5:	iret   
  4169a6:	jg     0x416980
  4169a8:	mov    edx,?
  4169aa:	inc    eax
  4169ab:	and    al,0xcc
  4169ad:	sbb    ebx,DWORD PTR [ecx-0x77]
  4169b0:	dec    edx
  4169b1:	test   DWORD PTR [edi-0xa],esp
  4169b4:	xor    edx,DWORD PTR [esi+0x72]
  4169b7:	dec    esp
  4169b8:	jo     0x416a0f
  4169ba:	push   eax
  4169bb:	dec    edi
  4169bc:	pop    ss
  4169bd:	ja     0x416946
  4169bf:	pop    esp
  4169c0:	je     0x416a2e
  4169c2:	rcr    DWORD PTR [edx+ebx*1+0x36],1
  4169c6:	out    0x39,al
  4169c8:	in     al,0xf1
  4169ca:	inc    ebp
  4169cb:	and    al,0x64
  4169cd:	(bad)  
  4169ce:	repnz les edx,FWORD PTR [eax-0x77]
  4169d2:	adc    BYTE PTR [eax],al
  4169d4:	mov    WORD PTR [ebp+0x9],gs
  4169d7:	jmp    0x24a75473
  4169dc:	js     0x416a4b
  4169de:	test   BYTE PTR [edx+0x969ca],0xf
  4169e5:	clc    
  4169e6:	push   es
  4169e7:	or     eax,0xcd21a
  4169ec:	mov    edx,?
  4169ee:	pop    ebp
  4169ef:	and    al,0x6c
  4169f1:	loop   0x41697e
  4169f3:	adc    al,0x88
  4169f5:	ins    DWORD PTR es:[edi],dx
  4169f6:	or     DWORD PTR [ecx-0x7ea82132],eax
	...
  416a10:	iret   
  416a11:	push   0x5a
  416a13:	or     esp,0x408b596a
  416a19:	xchg   ecx,eax
  416a1a:	cmp    BYTE PTR [edi+0x17],cl
  416a1d:	scas   al,BYTE PTR es:[edi]
  416a1e:	rcl    DWORD PTR [eax-0x7619387b],1
  416a24:	rol    BYTE PTR [edi-0x7037c6c4],1
  416a2a:	adc    al,0x89
  416a2c:	rol    BYTE PTR [edi+0x76175230],0x59
  416a33:	jl     0x4169e4
  416a35:	xchg   esp,eax
  416a36:	pop    ss
  416a37:	lock pop edi
  416a39:	push   esi
  416a3a:	push   ss
  416a3b:	jp     0x416aa1
  416a3d:	or     ah,BYTE PTR [ebx-0x50408bd9]
  416a43:	jp     0x416a8f
  416a45:	ins    DWORD PTR es:[edi],dx
  416a46:	sbb    eax,0xda5631f8
  416a4b:	ret    0x1203
  416a4e:	add    DWORD PTR [edx],eax
  416a50:	lea    edx,[edx+0x6a]
  416a53:	mov    ebx,0xd8e15bdb
  416a58:	data16 ins BYTE PTR es:[edi],dx
  416a5a:	leave  
  416a5b:	test   DWORD PTR [ecx],0x15cc6a56
  416a61:	ror    DWORD PTR [ebx],1
  416a63:	sbb    al,0x5f
  416a65:	les    edi,FWORD PTR [edx-0x42]
  416a68:	in     al,0x49
  416a6a:	mov    esp,0xa709e9ed
  416a6f:	sbb    ebp,edx
  416a71:	xchg   ecx,eax
  416a72:	test   al,0xac
	...
  416a88:	repz xor bh,BYTE PTR [edx+0x1e]
  416a8c:	fldcw  WORD PTR [ebx-0x50]
  416a8f:	jmp    0x91a1:0xdba04b15
  416a96:	test   eax,0xb3b05079
  416a9b:	add    ah,al
  416a9d:	cdq    
  416a9e:	cwde   
  416a9f:	outs   dx,DWORD PTR ds:[esi]
  416aa0:	xchg   esp,eax
  416aa1:	dec    ebp
  416aa2:	and    ebp,DWORD PTR [eax]
  416aa4:	js     0x416a39
  416aa6:	fild   WORD PTR [ebx]
  416aa8:	mov    WORD PTR [edi],cs
  416aaa:	outs   dx,BYTE PTR ds:[esi]
  416aab:	jbe    0x416b11
  416aad:	cdq    
  416aae:	sub    al,0x70
  416ab0:	mov    al,0x9
  416ab2:	mov    bl,0x27
  416ab4:	mov    esp,0x4a78b1c4
  416ab9:	ins    BYTE PTR es:[edi],dx
  416aba:	jge    0x416ab3
  416abc:	jno    0x416b13
  416abe:	jp     0x416a8c
  416ac0:	adc    eax,0x800d08d0
  416ac5:	rcr    DWORD PTR [eax+0x62],0x1a
  416ac9:	ins    BYTE PTR es:[edi],dx
  416aca:	jne    0x416ae8
  416acc:	popa   
  416acd:	push   edi
  416ace:	xor    DWORD PTR [ecx+0x49],eax
  416ad1:	or     DWORD PTR [edx],ecx
  416ad3:	jmp    0x8073:0x8d89948f
  416ada:	or     dh,dh
  416adc:	or     bl,BYTE PTR [edi+0xa]
  416adf:	jmp    0xeb347e73
  416ae4:	and    BYTE PTR [edi],al
  416ae6:	fsub   st(1),st
  416ae8:	(bad)  
  416ae9:	xchg   esp,eax
  416aea:	xor    DWORD PTR ds:0x0,0x0
	...
  416b00:	fs mov ah,0x81
  416b03:	xor    eax,0x6f81bcb4
  416b08:	fwait
  416b09:	nop
  416b0a:	or     cl,ch
  416b0c:	or     al,0x15
  416b0e:	repz sbb BYTE PTR ds:0xd1b0952,cl
  416b15:	push   esp
  416b16:	or     DWORD PTR [ecx],ebx
  416b18:	arpl   ax,cx
  416b1a:	sub    al,0xed
  416b1c:	ds or  eax,esi
  416b1f:	xchg   ecx,eax
  416b20:	es pop esp
  416b22:	cmc    
  416b23:	sahf   
  416b24:	inc    esp
  416b25:	shr    BYTE PTR [ecx+ebx*8],1
  416b28:	inc    esp
  416b29:	shr    BYTE PTR [edx*8-0x2ed347cc],0x64
  416b31:	push   ebx
  416b32:	pop    edx
  416b33:	jb     0x416b1e
  416b35:	ret    
  416b36:	je     0x416b04
  416b38:	(bad)  
  416b39:	scas   eax,DWORD PTR es:[edi]
  416b3a:	sti    
  416b3b:	outs   dx,BYTE PTR ds:[esi]
  416b3c:	test   al,0xc0
  416b3e:	pop    ecx
  416b3f:	jb     0x416b12
  416b41:	or     al,0x4c
  416b43:	add    eax,0x5c1d3cac
  416b48:	jo     0x416b9c
  416b4a:	sbb    DWORD PTR [ebp+0x2178b3],0xe2871ea4
  416b54:	jbe    0x416aeb
  416b56:	retf   0xad8b
  416b59:	push   esi
  416b5a:	std    
  416b5b:	add    cl,dh
  416b5d:	mov    bl,0xe0
  416b5f:	push   DWORD PTR [ecx+0x40]
  416b62:	repz push ebp
	...
  416b78:	push   es
  416b79:	int    0xc6
  416b7b:	mov    ecx,esi
  416b7d:	jnp    0x416ba3
  416b7f:	call   0x34b71b
  416b84:	mov    esi,0x51447f0f
  416b89:	jl     0x416baa
  416b8b:	enter  0xf36,0xb0
  416b8f:	jmp    0xf768385b
  416b94:	cmp    al,0x6a
  416b96:	repnz mov edi,DWORD PTR [edi]
  416b99:	pop    edx
  416b9a:	in     eax,dx
  416b9b:	pop    ds
  416b9c:	not    BYTE PTR [ecx]
  416b9e:	jg     0x416be4
  416ba0:	xchg   ecx,eax
  416ba1:	test   BYTE PTR [edi],al
  416ba3:	enter  0x718e,0x71
  416ba7:	or     BYTE PTR [edx],dh
  416ba9:	aad    0x2c
  416bab:	adc    al,0xf4
  416bad:	xchg   edi,eax
  416bae:	or     BYTE PTR [eax],al
  416bb0:	jo     0x416bf1
  416bb2:	jle    0x416bdc
  416bb4:	out    dx,al
  416bb5:	push   esp
  416bb6:	je     0x416bdc
  416bb8:	ds in  al,0x2c
  416bbb:	xor    BYTE PTR [ebp+0xdce7fea],al
  416bc1:	or     bh,ah
  416bc3:	dec    DWORD PTR [edx]
  416bc5:	aam    0xd0
  416bc7:	mov    esi,DWORD PTR [ecx+0x74]
  416bca:	and    BYTE PTR [ebp-0x7b],dl
  416bcd:	rol    esi,cl
  416bcf:	call   0x34b01b
  416bd4:	outs   dx,BYTE PTR ds:[esi]
  416bd5:	pusha  
  416bd6:	add    ecx,DWORD PTR [eax+edx*4+0x89a]
	...
  416bed:	add    BYTE PTR [eax],al
  416bef:	add    BYTE PTR [esi+edi*4+0x3da02460],cl
  416bf6:	repnz adc BYTE PTR [esi+0x1700093f],0x31
  416bfe:	adc    eax,0xf18a0958
  416c03:	and    edi,0x3c
  416c06:	or     DWORD PTR [eax],eax
  416c08:	(bad)  
  416c0a:	or     ecx,DWORD PTR ds:0xc0d12
  416c10:	mov    WORD PTR [esi-0x491fdba8],?
  416c16:	mov    cl,0x29
  416c18:	inc    edi
  416c19:	enter  0xa08,0x67
  416c1d:	jp     0x416c99
  416c1f:	add    dl,BYTE PTR [edi]
  416c21:	sbb    BYTE PTR [ecx+ecx*4-0x30],0x59
  416c26:	add    eax,0x5c8e3329
  416c2b:	mov    ebx,DWORD PTR [eax-0x67]
  416c2e:	and    BYTE PTR [edi+0x17],cl
  416c31:	sti    
  416c32:	jae    0x416c90
  416c34:	mov    al,0x99
  416c36:	aam    0xcc
  416c38:	sti    
  416c39:	pop    ecx
  416c3a:	loop   0x416c73
  416c3c:	push   0x98723899
  416c41:	mov    dh,0x45
  416c43:	and    al,0x9c
  416c45:	stos   BYTE PTR es:[edi],al
  416c46:	pop    esi
  416c47:	mov    edx,eax
  416c49:	and    al,0x20
  416c4b:	hlt    
  416c4c:	retf   
  416c4d:	xor    DWORD PTR [esi-0x28],esi
  416c50:	pop    ss
  416c51:	sub    DWORD PTR [eax],0x38
	...
  416c67:	add    BYTE PTR [ebx-0x73],ah
  416c6a:	jne    0x416c3a
  416c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c6d:	push   0xffffffe5
  416c6f:	std    
  416c70:	stos   DWORD PTR es:[edi],eax
  416c71:	push   ebp
  416c72:	into   
  416c73:	mov    DWORD PTR [eax+0x61],eax
  416c76:	add    eax,0x3db67c7e
  416c7b:	and    al,0x5c
  416c7d:	xchg   esp,eax
  416c7e:	jp     0x416ccf
  416c80:	mov    al,0x88
  416c82:	js     0x416cbb
  416c84:	test   al,0x8c
  416c86:	push   0x6a90b04f
  416c8b:	aas    
  416c8c:	test   al,0xa4
  416c8e:	xchg   esi,eax
  416c8f:	push   esi
  416c90:	mov    esp,0xa9db251d
  416c95:	inc    ebx
  416c96:	ds jmp 0xe3b9:0x2c0be105
  416c9e:	jp     0x416c59
  416ca0:	adc    eax,0x3dec176d
  416ca5:	push   edx
  416ca6:	push   ds
  416ca7:	cs dec ebp
  416ca9:	mov    ds:0x948ca254,al
  416cae:	fistp  QWORD PTR [esi-0x38]
  416cb1:	js     0x416c8a
  416cb3:	add    bh,BYTE PTR cs:[ecx-0x1d]
  416cb7:	add    ecx,DWORD PTR [edi+eax*8+0x78b87e97]
  416cbe:	repz jl 0x416d11
  416cc1:	js     0x416cb2
  416cc3:	push   eax
  416cc4:	pop    esi
  416cc5:	in     al,0x6a
  416cc7:	mov    edx,0xe9cf46e4
	...
  416ce0:	icebp  
  416ce1:	out    0x12,eax
  416ce3:	jge    0x416cbf
  416ce5:	sbb    ebp,DWORD PTR [ebx]
  416ce7:	and    BYTE PTR [eax-0x260a5ac4],dh
  416ced:	push   ecx
  416cee:	push   0x38
  416cf0:	test   al,0x78
  416cf2:	loop   0x416caf
  416cf4:	adc    eax,0xb463c66
  416cf9:	loope  0x416cbe
  416cfb:	sbb    ebx,DWORD PTR [esi+0x1d]
  416cfe:	xchg   ebp,eax
  416cff:	fdiv   st(4),st
  416d01:	inc    ebp
  416d02:	mov    gs,ecx
  416d04:	adc    eax,0x68407a6d
  416d09:	mov    WORD PTR [eax],cs
  416d0b:	push   ds
  416d0c:	inc    eax
  416d0d:	sbb    eax,esi
  416d0f:	sub    edi,0x966f543
  416d15:	shr    DWORD PTR [ecx*1-0x527e9377],0x9b
  416d1d:	js     0x416d50
  416d1f:	sub    dh,cl
  416d21:	lock sub al,0xa1
  416d24:	cmc    
  416d25:	fabs   
  416d27:	in     eax,0xe0
  416d29:	lock sub al,0x91
  416d2c:	fcomp  st(0)
  416d2e:	sub    al,0xf1
  416d30:	mov    al,ds:0x8fed2c1a
  416d35:	xchg   esp,eax
  416d36:	jnp    0x416d28
  416d38:	or     BYTE PTR [edx],dl
  416d3a:	and    ch,ch
  416d3c:	(bad)  
  416d3d:	xchg   esp,eax
  416d3e:	or     BYTE PTR [ebp-0x13f77280],dl
	...
  416d58:	(bad)  
  416d59:	xchg   esp,eax
  416d5a:	je     0x416d40
  416d5c:	or     BYTE PTR [edi+0xa],cl
  416d5f:	jge    0x416dd2
  416d61:	shl    DWORD PTR [ebp+eax*8+0x67],1
  416d65:	xchg   esp,eax
  416d66:	jae    0x416d51
  416d68:	(bad)  
  416d69:	ror    BYTE PTR [ebx],1
  416d6b:	push   0xfffffff4
  416d6d:	xchg   edx,eax
  416d6e:	jl     0x416d6a
  416d70:	js     0x416d52
  416d72:	sub    al,0x11
  416d74:	pop    ebp
  416d75:	loope  0x416cf8
  416d77:	mov    bh,0xc7
  416d79:	popa   
  416d7a:	stc    
  416d7b:	mov    esi,0x62383af4
  416d80:	push   ebx
  416d81:	js     0x416dd3
  416d83:	bound  edx,QWORD PTR [ebx-0x1f8de788]
  416d89:	jp     0x416d68
  416d8b:	cmp    ebx,DWORD PTR [eax+0x1b]
  416d8e:	mov    BYTE PTR [ecx-0x710abbde],0xa4
  416d95:	xlat   BYTE PTR ds:[ebx]
  416d96:	sub    al,0x0
  416d98:	lds    edx,FWORD PTR [edi]
  416d9a:	jecxz  0x416d9d
  416d9c:	cwde   
  416d9d:	xor    bl,bh
  416d9f:	adc    ch,BYTE PTR [esi]
  416da1:	loope  0x416dcf
  416da3:	adc    BYTE PTR [eax],dh
  416da5:	nop
  416da6:	repz push ecx
  416da8:	inc    edi
  416da9:	rol    esi,1
  416dab:	call   0x34b1b7
  416db0:	xchg   esi,eax
  416db1:	cmp    eax,0x4d66fd87
  416db6:	test   BYTE PTR [ecx-0x74f76b8b],al
	...
  416dd0:	jmp    0x416d71
  416dd2:	or     al,0x0
  416dd4:	fist   WORD PTR gs:[edi+0x50]
  416dd8:	out    dx,al
  416dd9:	or     eax,0x3ca51ee0
  416dde:	repz mov esi,ecx
  416de1:	scas   eax,DWORD PTR es:[edi]
  416de2:	and    BYTE PTR [ebp-0xc],dl
  416de5:	rol    dh,1
  416de7:	mov    edi,DWORD PTR [ebp+0x6b]
  416dea:	clc    
  416deb:	repnz xchg edx,eax
  416ded:	cmp    al,0x2f
  416def:	ret    
  416df0:	mov    ds:0x49447fab,al
  416df5:	lods   al,BYTE PTR ds:[esi]
  416df6:	das    
  416df7:	xchg   BYTE PTR [ecx+0x50],cl
  416dfa:	cmc    
  416dfb:	jmp    FWORD PTR [eax+0x51]
  416dfe:	mov    BYTE PTR [esi+0x8949d],bh
  416e04:	in     eax,0xbf
  416e06:	dec    ecx
  416e07:	cmp    eax,0x894e5
  416e0c:	push   ecx
  416e0d:	xchg   ebp,eax
  416e0e:	xchg   ebp,edi
  416e10:	idiv   DWORD PTR [edi-0x431ac2f5]
  416e16:	or     BYTE PTR [eax],al
  416e18:	mov    eax,ds:0xd95c7f82
  416e1d:	fisttp DWORD PTR [ebp-0x76603694]
  416e23:	in     eax,dx
  416e24:	mov    WORD PTR [ecx+0x4a1a892c],?
  416e2a:	cmc    
  416e2b:	jmp    FWORD PTR [ebx-0x2d76a556]
  416e31:	and    eax,0xf02b
	...
  416e46:	add    BYTE PTR [eax],al
  416e48:	fwait
  416e49:	(bad)  
  416e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e4b:	call   DWORD PTR [ebx+0x11ff093d]
  416e51:	push   ecx
  416e52:	cmc    
  416e53:	inc    DWORD PTR [ebx-0x5fdbb75c]
  416e59:	jo     0x416e44
  416e5b:	mov    edx,eax
  416e5d:	inc    eax
  416e5e:	out    dx,al
  416e5f:	jmp    0x2482312a
  416e64:	(bad)
  416e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e69:	xor    BYTE PTR [ecx-0x77],bl
  416e6c:	inc    edx
  416e6d:	aad    0x9
  416e6f:	icebp  
  416e70:	dec    ebx
  416e71:	jbe    0x416e7e
  416e73:	scas   al,BYTE PTR es:[edi]
  416e74:	cwde   
  416e75:	cmp    DWORD PTR [ecx],ecx
  416e77:	add    BYTE PTR [ecx],cl
  416e79:	or     DWORD PTR [eax],eax
  416e7b:	std    
  416e7c:	daa    
  416e7d:	pusha  
  416e7e:	jb     0x416edc
  416e80:	jo     0x416e77
  416e82:	xchg   ebp,edi
  416e84:	cdq    
  416e85:	addr16 jb 0x416ed4
  416e88:	jo     0x416edf
  416e8a:	jb     0x416e22
  416e8c:	js     0x416ec7
  416e8e:	or     DWORD PTR [eax],eax
  416e90:	adc    eax,0x153c28e9
  416e95:	sub    DWORD PTR [eax],0x28910538
  416e9b:	adc    BYTE PTR [ebx+0x52],cl
  416e9e:	add    eax,DWORD PTR [ebx+0x450990eb]
  416ea4:	idiv   DWORD PTR ds:0x41808672
  416eaa:	or     DWORD PTR [eax],eax
	...
  416ec0:	aas    
  416ec1:	lods   eax,DWORD PTR ds:[esi]
  416ec2:	jno    0x416e92
  416ec4:	mov    ah,0x93
  416ec6:	push   ebp
  416ec7:	(bad)  
  416ec8:	ror    DWORD PTR [esi-0x6a],0x7d
  416ecc:	mov    al,ds:0xf03df98
  416ed1:	dec    edi
  416ed2:	(bad)  
  416ed3:	jg     0x416e8a
  416ed5:	xchg   ebx,eax
  416ed6:	fild   WORD PTR [ebx]
  416ed8:	gs ror bl,1
  416edb:	daa    
  416edc:	mov    DWORD PTR [ecx],ebx
  416ede:	add    BYTE PTR [ebx],0x8c
  416ee1:	xchg   esp,eax
  416ee2:	push   0x4f
  416ee4:	mov    al,0xe8
  416ee6:	jp     0x416e9e
  416ee8:	mov    ch,0x59
  416eea:	inc    DWORD PTR fs:[ebp-0x7192d977]
  416ef1:	sbb    DWORD PTR [esi],ebp
  416ef3:	push   ebx
  416ef4:	adc    eax,0x151003d9
  416ef9:	cmp    bl,BYTE PTR [edx]
  416efb:	xlat   BYTE PTR ds:[ebx]
  416efc:	mov    edi,0xa8376ce4
  416f01:	nop
  416f02:	nop
  416f03:	jp     0x416f5f
  416f05:	sbb    al,0x9b
  416f07:	pop    ds
  416f08:	push   0x39f09d3c
  416f0d:	dec    esi
  416f0e:	fsub   DWORD PTR [edi+0x68]
  416f11:	mov    BYTE PTR [ecx-0x3c16ead1],dl
  416f17:	xor    edi,DWORD PTR [ecx+0x24b57ae2]
  416f1d:	ss lock in eax,0x11
  416f21:	sbb    al,BYTE PTR [edi]
  416f23:	jp     0x416f25
	...
  416f35:	add    BYTE PTR [eax],al
  416f37:	add    BYTE PTR [eax+0x78],dl
  416f3a:	daa    
  416f3b:	dec    ebp
  416f3c:	pop    esp
  416f3d:	sbb    DWORD PTR [ebp-0x21bc2b24],esp
  416f43:	in     eax,0xb5
  416f45:	push   edi
  416f46:	push   0x58
  416f48:	mov    al,0xa8
  416f4a:	dec    ebp
  416f4b:	adc    al,0x15
  416f4d:	loope  0x416f5a
  416f4f:	xor    al,0x5
  416f51:	jmp    0x15dd7c5e
  416f56:	inc    esp
  416f57:	add    eax,0xcd5c1578
  416f5c:	imul   ebx,DWORD PTR [ebx],0x4c
  416f5f:	lds    ebx,FWORD PTR [edi+0x35395be7]
  416f65:	pop    esi
  416f66:	loopne 0x416f20
  416f68:	ret    0xf54f
  416f6b:	jb     0x416fd1
  416f6d:	js     0x416f9f
  416f6f:	push   ss
  416f70:	aas    
  416f71:	sbb    eax,esi
  416f73:	bound  esi,QWORD PTR [eax+0x7178a93c]
  416f79:	dec    edi
  416f7a:	xor    DWORD PTR [ebx+ebp*8],ebp
  416f7d:	mov    al,BYTE PTR [ecx+0x318c9ba5]
  416f83:	outs   dx,DWORD PTR ds:[esi]
  416f84:	lods   al,BYTE PTR ds:[esi]
  416f85:	cwde   
  416f86:	or     cl,ch
  416f88:	cli    
  416f89:	xchg   ebp,eax
  416f8a:	mov    DWORD PTR [edi-0x16f76780],eax
  416f90:	(bad)
  416f94:	(bad)  
  416f95:	xchg   ecx,eax
  416f96:	or     cl,ch
  416f98:	mov    bl,0x91
  416f9a:	mov    DWORD PTR [esi],esp
	...
  416fb0:	mov    cs,eax
  416fb2:	paddusb mm1,QWORD PTR [edi-0x5416f737]
  416fb9:	xchg   ecx,eax
  416fba:	mov    DWORD PTR [esi],ecx
  416fbc:	(bad)  
  416fbd:	enter  0x9e03,0xbf
  416fc1:	sbb    eax,esi
  416fc3:	adc    DWORD PTR ds:0x5cf6f53d,esi
  416fc9:	dec    edi
  416fca:	loope  0x416f95
  416fcc:	test   al,al
  416fce:	sub    al,0xf9
  416fd0:	add    cl,BYTE PTR [ebp-0xb]
  416fd3:	jmp    0x31a8b67
  416fd8:	shl    ecx,0x5b
  416fdb:	bound  esp,QWORD PTR [ecx]
  416fdd:	cmp    al,0xcd
  416fdf:	add    BYTE PTR [ebx+0x6645f337],bh
  416fe5:	push   0xc9c874f5
  416fea:	fs and al,0xe5
  416fed:	retf   
  416fee:	dec    esp
  416fef:	and    al,0x81
  416ff1:	rol    DWORD PTR [eax-0x77],cl
  416ff4:	jns    0x41706a
  416ff6:	push   eax
  416ff7:	cmp    edi,ebp
  416ff9:	inc    edi
  416ffa:	xchg   DWORD PTR [edi-0x7a0cc803],esi
  417000:	or     cl,BYTE PTR [eax-0x77]
  417003:	pushf  
  417004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417005:	nop
  417006:	or     BYTE PTR [ebx-0x79fc6de6],al
  41700c:	not    BYTE PTR [edi-0x7c01fff8]
  417012:	sub    al,0x10
	...
  417028:	inc    edx
  417029:	int    0xc7
  41702b:	sub    esp,DWORD PTR [edx-0x7474ba19]
  417031:	outs   dx,DWORD PTR ds:[esi]
  417032:	and    ebp,esi
  417034:	retf   0x7f30
  417037:	push   esp
  417038:	xchg   ecx,eax
  417039:	js     0x417096
  41703b:	push   edx
  41703c:	out    dx,al
  41703d:	add    DWORD PTR [edi-0x18],edi
  417040:	int    0x96
  417042:	in     eax,0xff
  417044:	push   0x7c
  417046:	leave  
  417047:	jg     0x417039
  417049:	int3   
  41704a:	dec    esp
  41704b:	and    al,0x5d
  41704d:	jge    0x416fdd
  41704f:	and    al,0x31
  417051:	cwde   
  417052:	or     BYTE PTR [ebp+0x1c],dh
  417055:	adc    eax,0x983128b6
  41705a:	or     BYTE PTR [eax],al
  41705c:	xchg   ecx,eax
  41705d:	lahf   
  41705e:	xor    DWORD PTR [eax],eax
  417060:	lock xchg edi,eax
  417062:	or     BYTE PTR [eax+esi*8+0x12],bh
  417066:	repz add ah,BYTE PTR [ecx+0x7c]
  41706a:	xor    DWORD PTR [eax],eax
  41706c:	mov    eax,fs
  41706e:	or     al,0x0
  417070:	push   0x8ffd8e30
  417075:	mov    esp,esi
  417077:	push   esp
  417078:	cmp    al,0xc6
  41707a:	(bad)  
  41707c:	inc    ebp
  41707d:	or     al,0xe9
  41707f:	std    
  417080:	mov    bh,0x43
  417082:	dec    eax
  417083:	pop    ecx
  417084:	arpl   WORD PTR [esi-0x41a5023c],di
  41708a:	sar    BYTE PTR [eax],0x0
	...
  41709d:	add    BYTE PTR [eax],al
  41709f:	add    dh,cl
  4170a1:	inc    ebp
  4170a2:	or     DWORD PTR [ecx-0x7706aec8],ecx
  4170a8:	iret   
  4170a9:	retw   0x4150
  4170ad:	(bad)  
  4170ae:	(bad)  
  4170b0:	jae    0x4170c5
  4170b2:	jmp    0xfa0042b4
  4170b7:	(bad)  
  4170b8:	clc    
  4170b9:	loopne 0x4170a0
  4170bb:	adc    BYTE PTR [edi],al
  4170bd:	add    DWORD PTR ds:0xe9f60110,ebp
  4170c3:	dec    edi
  4170c4:	mov    esi,0x8be8dab6
  4170c9:	jecxz  0x4170b4
  4170cb:	std    
  4170cc:	pop    es
  4170cd:	or     DWORD PTR ds:0x93c1154,ebp
  4170d3:	add    BYTE PTR [esi+eax*2-0x3f928e36],cl
  4170da:	jne    0x4170dc
  4170dc:	mov    WORD PTR ds:0x490a8909,?
  4170e2:	or     eax,0x390e8c00
  4170e7:	mov    DWORD PTR [edx-0x5b],edx
  4170ea:	fucomip st,st(3)
  4170ec:	sbb    ecx,DWORD PTR [edx+0xc]
  4170ef:	scas   al,BYTE PTR es:[edi]
  4170f0:	js     0x41712b
  4170f2:	or     DWORD PTR [eax],eax
  4170f4:	(bad)  
  4170f5:	cwde   
  4170f6:	adc    eax,0xc4947edd
  4170fb:	xchg   ch,al
  4170fd:	dec    edx
  4170fe:	loopne 0x417081
  417100:	nop
  417101:	nop
  417102:	fild   WORD PTR [ebx]
	...
  417118:	pop    ss
  417119:	fucomip st,st(0)
  41711b:	pop    eax
  41711c:	jnp    0x41713d
  41711e:	gs repz (bad) 
  417121:	xchg   esp,eax
  417122:	fisttp WORD PTR [edx+ecx*1-0x73fc1c54]
  417129:	aam    0x68
  41712b:	xchg   ecx,eax
  41712c:	mov    al,ds:0x1303df90
  417131:	adc    ch,bh
  417133:	pop    es
  417134:	mov    WORD PTR [edx+ebp*2-0x206f7b77],ss
  41713b:	add    edx,DWORD PTR [esi]
  41713d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41713e:	loope  0x4170f5
  417140:	call   0xdb28:0x92f37755
  417147:	pop    es
  417148:	mov    WORD PTR [esp+edi*8-0x10eceb04],ss
  41714f:	pop    es
  417150:	mov    WORD PTR [eax+edi*2-0x206f6b77],ss
  417157:	add    ecx,esp
  417159:	sbb    edx,DWORD PTR [ebp-0x1]
  41715c:	(bad)  
  41715d:	xchg   esp,eax
  41715e:	fisttp WORD PTR [edx+edx*1-0x73fc145b]
  417165:	sbb    eax,0x948ffb65
  41716a:	fisttp WORD PTR [ebp-0x1ece6964]
  417170:	dec    esi
  417171:	sbb    eax,0xa91204ef
  417176:	jecxz  0x41717b
  417178:	mov    WORD PTR [edi+0x8ef8],?
	...
  41718e:	add    BYTE PTR [eax],al
  417190:	or     ah,BYTE PTR [ebp+0x1b8c03e3]
  417196:	ins    DWORD PTR es:[edi],dx
  417197:	sti    
  417198:	(bad)  
  417199:	xchg   esp,eax
  41719a:	or     cl,ch
  41719c:	dec    edi
  41719d:	adc    DWORD PTR [esi+0x8948bcd],eax
  4171a3:	jo     0x4171ab
  4171a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a6:	or     al,0xe9
  4171a8:	(bad)  
  4171a9:	sbb    ecx,DWORD PTR [esi+0x89493f1]
  4171af:	mov    ecx,0xd98e1ba8
  4171b4:	xchg   ebx,eax
  4171b5:	xchg   esp,eax
  4171b6:	or     BYTE PTR [edi+0x67819488],ah
  4171bc:	mov    WORD PTR [eax+0x1310e908],ss
  4171c2:	adc    ch,ch
  4171c4:	(bad)  
  4171c5:	xchg   esp,eax
  4171c6:	pop    es
  4171c7:	dec    edi
  4171c8:	mov    eax,0x78e90895
  4171cd:	pop    ebp
  4171ce:	fcmove st,st(1)
  4171d0:	adc    cl,dl
  4171d2:	sub    al,0x25
  4171d4:	adc    edx,DWORD PTR [ebp+0x7c]
  4171d7:	mov    eax,0x92cd900
  4171dc:	sbb    DWORD PTR [edx],esp
  4171de:	sbb    ch,ah
  4171e0:	(bad)  
  4171e1:	xchg   esp,eax
  4171e2:	and    DWORD PTR [ebp+0x7257e4b3],edi
  4171e8:	push   ds
  4171e9:	mov    al,ds:0x7b8fe90c
  4171ee:	inc    esp
  4171ef:	add    eax,0x9e57e698
	...
  417208:	ins    BYTE PTR es:[edi],dx
  417209:	mov    DWORD PTR fs:0xbcc81658,esp
  417210:	fwait
  417211:	in     eax,dx
  417212:	sub    DWORD PTR [edx],0x6a56e781
  417218:	inc    esp
  417219:	mov    edx,cs
  41721b:	add    DWORD PTR [eax-0x6c0671e5],ecx
  417221:	xchg   esp,eax
  417222:	or     dl,al
  417224:	retf   
  417225:	jo     0x41727f
  417227:	add    al,dh
  417229:	xchg   DWORD PTR [ebx+0x5e],edx
  41722c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41722d:	pop    esp
  41722e:	xor    dl,al
  417230:	fst    QWORD PTR [eax+esi*4+0x896f500]
  417237:	ret    
  417238:	jle    0x41720b
  41723a:	sub    al,0x4
  41723c:	jle    0x41729b
  41723e:	mov    ch,0xe9
  417240:	neg    BYTE PTR [ecx]
  417242:	dec    esp
  417243:	or     BYTE PTR [ebp-0x76bb80b1],dh
  417249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41724a:	jne    0x417238
  41724c:	sbb    DWORD PTR [eax+ecx*1+0x79553800],0x24513407
  417257:	add    al,0xa5
  417259:	xchg   esp,eax
  41725a:	(bad)  
  41725b:	mov    esp,DWORD PTR [ecx]
  41725d:	jno    0x4172ab
  41725f:	add    al,0xb5
  417261:	xchg   esp,eax
  417262:	jg     0x4171f8
  417264:	leave  
  417265:	aam    0xc
  417267:	add    BYTE PTR [ebp+0x8c7f85],ah
	...
  41727d:	add    BYTE PTR [eax],al
  41727f:	add    cl,cl
  417281:	aam    0xc
  417283:	add    BYTE PTR [ebp-0x7e],dh
  417286:	jg     0x41721c
  417288:	dec    ecx
  417289:	test   al,0xc
  41728b:	add    BYTE PTR [ebp-0x7d],ah
  41728e:	pop    eax
  41728f:	mov    ebp,ecx
  417291:	outs   dx,DWORD PTR ds:[esi]
  417292:	dec    eax
  417293:	add    al,0x75
  417295:	xchg   esp,eax
  417296:	pop    edx
  417297:	push   eax
  417298:	rcl    bh,0x2c
  41729b:	sbb    BYTE PTR [ebp-0x6d00067d],bh
  4172a1:	adc    cl,ah
  4172a3:	sub    al,0x39
  4172a5:	xchg   esp,eax
  4172a6:	or     bl,al
  4172a8:	mov    eax,ds:0x81ccc457
  4172ad:	push   edi
  4172ae:	(bad)  
  4172af:	int3   
  4172b0:	popa   
  4172b1:	push   edi
  4172b2:	(bad)  
  4172b3:	int3   
  4172b4:	mov    WORD PTR [eax],cs
  4172b6:	and    bl,0xd
  4172b9:	dec    edx
  4172ba:	fiadd  DWORD PTR [eax]
  4172bc:	mov    WORD PTR ds:0xc2bb563c,?
  4172c2:	or     BYTE PTR ds:[ebp+0x3fb618a2],bh
  4172c9:	xchg   edx,eax
  4172ca:	dec    edi
  4172cb:	aas    
  4172cc:	mov    esp,es
  4172ce:	fdivr  QWORD PTR [edi-0x49f9c50c]
  4172d4:	nop
  4172d5:	dec    ebp
  4172d6:	test   bh,ch
  4172d8:	minps  xmm1,XMMWORD PTR ds:0x3c2230d
  4172df:	je     0x41733b
  4172e1:	jl     0x4172ef
  4172e3:	add    DWORD PTR [eax],0x0
	...
  4172f6:	add    BYTE PTR [eax],al
  4172f8:	aam    0x2e
  4172fa:	jo     0x4172cb
  4172fc:	xchg   ebx,eax
  4172fd:	mov    edi,0x905088cb
  417302:	les    eax,FWORD PTR [ecx+0xf]
  417305:	repz adc edi,DWORD PTR [ebp+edi*4+0x6c]
  41730a:	mov    bh,0x66
  41730c:	setns  BYTE PTR [eax]
  41730f:	jmp    DWORD PTR [eax]
  417311:	inc    ebx
  417312:	test   al,dl
  417314:	fwait
  417315:	cmc    
  417316:	xchg   esi,eax
  417317:	dec    esp
  417318:	mov    WORD PTR [edi-0x1e],ds
  41731b:	add    DWORD PTR [ecx],edx
  41731d:	imul   esi,edi,0x8a3cf58a
  417323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417324:	xor    DWORD PTR [ebp-0x2a],ecx
  417327:	std    
  417328:	imul   edi,DWORD PTR ds:0x4d11a48a,0xffffffd6
  41732f:	std    
  417330:	pop    ebx
  417331:	cmp    eax,0xbf83d91c
  417336:	mov    bl,BYTE PTR [ebx+eax*8]
  417339:	cld    
  41733a:	or     BYTE PTR [ebx-0x1759a88],cl
  417340:	cwde   
  417341:	xchg   esp,eax
  417342:	lods   al,BYTE PTR ds:[esi]
  417343:	or     DWORD PTR [esi],eax
  417345:	rcr    ah,1
  417347:	retf   
  417348:	adc    al,0xd0
  41734a:	cld    
  41734b:	jae    0x417382
  41734d:	pushf  
  41734e:	imul   ecx,DWORD PTR [eax+0x5f],0x774876f8
  417355:	and    al,0xa2
  417357:	add    BYTE PTR ds:0xbc7ba8,0x0
	...
  41736e:	add    BYTE PTR [eax],al
  417370:	inc    ebp
  417371:	test   al,0xdf
  417373:	add    ecx,DWORD PTR [edi+edx*4-0x406f7e6b]
  41737a:	and    BYTE PTR [edi+edx*1],al
  41737d:	xor    bh,0x82
  417380:	loop   0x41730d
  417382:	inc    esp
  417383:	or     al,BYTE PTR [esi]
  417385:	shl    ah,1
  417387:	retf   
  417388:	add    al,0xd0
  41738a:	aam    0x73
  41738c:	mov    ch,0x9b
  41738e:	imul   eax,DWORD PTR [edi+0x7f],0x974766f8
  417395:	and    al,0x22
  417397:	xor    DWORD PTR [ebp+0x7bbd138b],0x6b
  41739e:	out    dx,al
  41739f:	xchg   ebp,eax
  4173a0:	or     eax,0x8c451e78
  4173a5:	adc    al,0xb
  4173a7:	or     esp,edi
  4173a9:	xchg   ebx,eax
  4173aa:	sti    
  4173ab:	or     eax,0x875c9115
  4173b0:	cli    
  4173b1:	rcr    edi,cl
  4173b3:	or     al,0x10
  4173b5:	sbb    bh,ch
  4173b7:	fidiv  WORD PTR [ecx+0x46]
  4173ba:	out    0x95,al
  4173bc:	or     eax,0x8c44d6d1
  4173c1:	adc    al,0xc3
  4173c3:	or     ah,bh
  4173c5:	xchg   esp,eax
  4173c6:	mov    bl,0xd
  4173c8:	add    eax,0xc2875491
  4173cd:	ror    DWORD PTR [eax],cl
  4173cf:	jmp    0xd9f48464
	...
  4173e8:	pop    edx
  4173e9:	dec    eax
  4173ea:	cmc    
  4173eb:	stos   BYTE PTR es:[edi],al
  4173ec:	push   cs
  4173ed:	dec    esp
  4173ee:	adc    BYTE PTR [ebp+0x1389d34d],bl
  4173f4:	pop    ds
  4173f5:	cdq    
  4173f6:	test   bl,dl
  4173f8:	cmp    cl,BYTE PTR [eax-0xb]
  4173fb:	je     0x417401
  4173fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173fe:	cmc    
  4173ff:	(bad)  
  417400:	jmp    0x902254e9
  417405:	xchg   esp,eax
  417406:	or     BYTE PTR [esi-0x2a801447],cl
  41740c:	mov    bl,0x52
  41740e:	add    cl,ch
  417410:	mov    ds:0xdc68eb0d,al
  417415:	adc    al,0x8
  417417:	jmp    0x1ea057ab
  41741c:	add    eax,0x836c00d2
  417421:	adc    al,0xaf
  417423:	(bad)  [edi-0x329ff76c]
  417429:	adc    ecx,eax
  41742b:	in     eax,dx
  41742c:	add    al,0x84
  41742e:	xchg   DWORD PTR [edi-0x160b6b70],eax
  417434:	into   
  417435:	cs push cs
  417437:	bound  esi,QWORD PTR [ebp-0x3b]
  41743a:	in     eax,dx
  41743b:	test   eax,0xa8089481
  417440:	jno    0x4173dc
  417442:	push   DWORD PTR [esi+0x15]
  417445:	mov    WORD PTR [edi-0xb6b6f7a],es
  41744b:	jmp    0x417450
	...
  417460:	dec    esi
  417461:	aaa    
  417462:	add    dh,al
  417464:	dec    ecx
  417465:	or     eax,0x131a603a
  41746a:	retf   0x4e5
  41746d:	mov    WORD PTR [edi+0x350c200],es
  417473:	add    BYTE PTR ds:0x2e06e352,dh
  417479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747a:	lea    edi,[esi]
  41747c:	scas   al,BYTE PTR es:[edi]
  41747d:	mov    ds:0x6125e675,eax
  417482:	pop    es
  417483:	add    BYTE PTR [esi+ebp*1+0x4],dh
  417487:	mov    ebx,DWORD PTR [esi]
  417489:	adc    al,0xe7
  41748b:	aas    
  41748c:	xor    ebx,DWORD PTR fs:[eax]
  41748f:	or     DWORD PTR [ebx+0x1b],ebp
  417492:	adc    BYTE PTR [ecx+0x3f89096],al
  417498:	cmc    
  417499:	push   ecx
  41749a:	fild   WORD PTR [esp+ebp*8]
  41749d:	push   es
  41749e:	lea    esi,[edx]
  4174a0:	jl     0x4174a6
  4174a2:	xchg   edx,eax
  4174a4:	icebp  
  4174a5:	sbb    edi,DWORD PTR [eax]
  4174a7:	adc    ebx,0xffffffa7
  4174aa:	push   DWORD PTR [edx]
  4174ac:	ins    BYTE PTR es:[edi],dx
  4174ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ae:	dec    ebp
  4174af:	and    DWORD PTR ds:0x80c9898d,0xe
  4174b6:	add    DWORD PTR [ebp+0x35],0xa527e081
  4174bd:	nop
  4174be:	or     BYTE PTR [edi+0x4b],bl
  4174c1:	mov    ecx,DWORD PTR [ebp+0xec]
	...
  4174d7:	add    BYTE PTR [eax+0x52],ch
  4174da:	or     al,0x0
  4174dc:	cs int 0x2c
  4174df:	add    al,0x3f
  4174e1:	add    eax,0x1ba5417c
  4174e6:	add    cl,BYTE PTR [ecx+0x4ca157d]
  4174ec:	not    BYTE PTR [edi+0xc]
  4174ef:	cmp    edi,0x65417983
  4174f5:	out    0xe6,al
  4174f7:	ret    0x9871
  4174fa:	jg     0x417540
  4174fc:	mov    WORD PTR [ecx+0x6a38ba00],ss
  417502:	dec    edx
  417503:	add    BYTE PTR [edi],al
  417505:	inc    esi
  417506:	or     BYTE PTR [edx],0xf
  417509:	outs   dx,BYTE PTR ds:[esi]
  41750a:	or     eax,0x8a324e81
  41750f:	cli    
  417510:	fmul   DWORD PTR [eax]
  417512:	dec    edx
  417513:	add    BYTE PTR [esi-0x73fb3855],bh
  417519:	or     BYTE PTR [edx+0x37fdbce3],al
  41751f:	mov    ecx,edx
  417521:	xor    eax,0xc8805b80
  417526:	ds clc 
  417528:	pop    esi
  417529:	sbb    eax,0x2d8c1de1
  41752e:	or     DWORD PTR [eax-0x28],ebp
  417531:	leave  
  417532:	dec    edx
  417533:	add    BYTE PTR [ecx],al
  417535:	jno    0x41750b
  417537:	push   eax
  417538:	hlt    
  417539:	add    al,0xc
	...
  41754f:	add    BYTE PTR [esi+edi*2+0x7dd4437f],cl
  417556:	in     al,0x70
  417558:	mov    WORD PTR ds:0x52155909,gs
  41755e:	das    
  41755f:	ret    0x2d94
  417562:	mov    DWORD PTR ds:[eax-0x67],edx
  417566:	add    al,0x89
  417568:	pop    eax
  417569:	push   ecx
  41756a:	or     eax,0x16dcd87
  41756f:	mov    dh,0x95
  417571:	in     al,dx
  417572:	jmp    0x4cbf:0x84380518
  417579:	dec    edx
  41757a:	xchg   edi,eax
  41757b:	pop    es
  41757c:	dec    ebp
  41757d:	or     al,0xfc
  41757f:	or     BYTE PTR [esi+0x4d8706b4],dl
  417585:	ins    DWORD PTR es:[edi],dx
  417586:	add    DWORD PTR [esi-0x1adf6b7b],esi
  41758c:	xchg   esp,eax
  41758d:	(bad)  
  41758e:	stc    
  41758f:	mov    WORD PTR [esi+0x4e87300d],ss
  417595:	cwde   
  417596:	push   0x7593ccc7
  41759b:	call   DWORD PTR [edx-0x333a8763]
  4175a1:	xchg   ebx,eax
  4175a2:	jne    0x4175b1
  4175a4:	sti    
  4175a5:	xor    al,0xd7
  4175a7:	mov    WORD PTR [esi-0x66bbdff3],es
  4175ad:	or     bh,al
  4175af:	les    eax,FWORD PTR [ebx-0x5c]
  4175b2:	jmp    0x0:0xd
	...
  4175c5:	add    BYTE PTR [eax],al
  4175c7:	add    BYTE PTR [ebx],dl
  4175c9:	mov    gs,WORD PTR [eax-0x3b]
  4175cc:	int3   
  4175cd:	xchg   ebx,eax
  4175ce:	xor    eax,0xf7354b0d
  4175d3:	push   cs
  4175d4:	xchg   esi,eax
  4175d5:	xchg   ebx,eax
  4175d6:	xor    eax,0x68559304
  4175db:	push   cs
  4175dc:	push   ebp
  4175dd:	push   esi
  4175de:	test   DWORD PTR [ebx],0x203b0f3d
  4175e4:	xchg   esp,eax
  4175e5:	movntps XMMWORD PTR [eax],xmm4
  4175e8:	mov    BYTE PTR [edi],cl
  4175ea:	loope  0x4175b0
  4175ec:	in     al,0x9b
  4175ee:	ja     0x4175f4
  4175f0:	mov    ecx,DWORD PTR [edi]
  4175f2:	loope  0x4175b8
  4175f4:	mov    ah,0xa3
  4175f6:	addr16 add al,0x7b
  4175f9:	psraw  mm0,mm4
  4175fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175fd:	mov    esi,DWORD PTR [edi+0x4]
  417600:	imul   ecx,DWORD PTR ds:0x640b44ba,0x62
  417607:	lds    edx,FWORD PTR [eax-0x727420f1]
  41760d:	psraw  mm0,mm4
  417610:	je     0x4175af
  417612:	ja     0x417618
  417614:	ret    
  417615:	or     eax,0x2d50eb08
  41761a:	sbb    BYTE PTR [ecx-0x78],ah
  41761d:	add    DWORD PTR [ecx+0x2d50eb],0x81818871
  417627:	sti    
  417628:	pop    es
  417629:	gs sub al,0x0
	...
  41763d:	add    BYTE PTR [eax],al
  41763f:	add    BYTE PTR [edx+0x7ce90056],dl
  417645:	sbb    ebx,ebp
  417647:	push   0x2b
  417649:	xchg   ecx,eax
  41764a:	pop    ecx
  41764b:	lahf   
  41764c:	jle    0x417659
  41764e:	dec    ebx
  41764f:	fld    QWORD PTR [edx]
  417651:	out    0x0,al
  417653:	jb     0x417676
  417655:	or     eax,0xda12f143
  41765a:	or     al,0x60
  41765c:	loop   0x41765f
  41765e:	loope  0x417645
  417660:	js     0x4176ad
  417662:	xchg   DWORD PTR [edx],ecx
  417664:	xchg   esi,eax
  417665:	pop    DWORD PTR ds:0x7f6998ee
  41766b:	pop    ss
  41766c:	sar    BYTE PTR [edx],1
  41766e:	or     al,0xb8
  417670:	fstp   DWORD PTR [ecx]
  417672:	fisubr WORD PTR [eax-0x50c85b0a]
  417678:	pop    ss
  417679:	inc    esp
  41767a:	xchg   edx,ecx
  41767c:	mov    ch,0x3f
  41767e:	or     cl,ch
  417680:	jle    0x4176eb
  417682:	jg     0x41762b
  417684:	iret   
  417685:	cmp    bl,BYTE PTR [eax]
  417687:	clc    
  417688:	fstp   DWORD PTR [ecx]
  41768a:	(bad)  
  41768b:	test   al,0xa6
  41768d:	xchg   esi,eax
  41768e:	aaa    
  41768f:	xchg   edi,eax
  417690:	pop    es
  417691:	inc    esp
  417692:	xchg   DWORD PTR [edx-0x25c67c7f],ecx
  417698:	jle    0x4176f8
  41769a:	jg     0x417653
  41769c:	iret   
  41769d:	cmp    cl,BYTE PTR [edx]
  41769f:	fdivr  DWORD PTR [esi+0xc619]
	...
  4176b5:	add    BYTE PTR [eax],al
  4176b7:	add    BYTE PTR [esi+ebp*1],dh
  4176ba:	add    BYTE PTR [ecx],dh
  4176bc:	sbb    ecx,DWORD PTR ds:0x5b0681f7
  4176c2:	or     bh,bh
  4176c4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4176c6:	ror    BYTE PTR [ecx+0x8ee55d3],cl
  4176cc:	test   BYTE PTR [esi-0x73],cl
  4176cf:	jne    0x417692
  4176d1:	xchg   ebp,eax
  4176d2:	dec    BYTE PTR [ebx-0x104a96c0]
  4176d8:	xor    bl,BYTE PTR [eax]
  4176da:	jmp    0x4176dd
  4176dc:	mov    esp,0xacf90d65
  4176e1:	push   es
  4176e2:	and    eax,0x7567acce
  4176e7:	jecxz  0x4176a8
  4176e9:	repnz mov eax,ds:0x24ff44aa
  4176ef:	fnstenv [eax+0x5a891aa4]
  4176f5:	push   ebp
  4176f6:	jecxz  0x417717
  4176f8:	jbe    0x41772d
  4176fa:	cmc    
  4176fb:	mov    BYTE PTR [edi],al
  4176fd:	mov    ?,edx
  4176ff:	(bad)  
  417700:	sub    BYTE PTR [ebp+0x0],bl
  417703:	add    ch,ah
  417705:	xchg   esp,eax
  417706:	(bad)  
  417707:	into   
  417708:	xor    al,0x33
  41770a:	adc    al,0x89
  41770c:	xor    dl,BYTE PTR [esi-0x1d]
  41770f:	add    al,0x6c
  417711:	push   0x536cfb0d
  417716:	xchg   eax,eax
  417718:	mov    ecx,0x8916a7
	...
  41772d:	add    BYTE PTR [eax],al
  41772f:	add    BYTE PTR [ebx],ah
  417731:	sbb    dh,ch
  417733:	aas    
  417734:	cs xchg ecx,eax
  417736:	mov    ecx,0x8d5605c
  41773b:	mov    edx,edx
  41773d:	push   ebp
  41773e:	jecxz  0x417746
  417740:	xor    al,0x34
  417742:	hlt    
  417743:	add    BYTE PTR [ebx+ebp*1+0x6edb0909],cl
  41774a:	push   ebx
  41774b:	aas    
  41774c:	mov    esp,es
  41774e:	mov    al,0xbf
  417750:	jae    0x417782
  417752:	mov    ah,ch
  417754:	js     0x417784
  417756:	or     DWORD PTR [eax],eax
  417758:	xchg   DWORD PTR [esi+0x2dcd773d],eax
  41775e:	sbb    ch,0x4d
  417761:	iret   
  417762:	idiv   DWORD PTR [esi+0x73]
  417765:	jmp    0x5c98:0x328c0009
  41776c:	ret    
  41776d:	in     al,dx
  41776e:	or     BYTE PTR [edi-0x397d7647],al
  417774:	movd   mm6,ebp
  417777:	xchg   BYTE PTR [edi+0x3b],al
  41777a:	out    dx,eax
  41777b:	xchg   BYTE PTR [edx-0x55],cl
  41777e:	out    0x3d,eax
  417780:	pop    ss
  417781:	push   0xffffff86
  417783:	pop    esp
  417784:	call   0x82a9:0x990908ec
  41778b:	(bad)  
  41778d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41778e:	pop    es
  41778f:	jg     0x41777c
  417791:	inc    ecx
  417792:	or     al,BYTE PTR [eax]
	...
  4177a8:	mov    WORD PTR [edx],?
  4177aa:	cwde   
  4177ab:	pop    esp
  4177ac:	jo     0x41779a
  4177ae:	or     BYTE PTR [edi+0xeececcb],al
  4177b4:	or     eax,0x8c00d057
  4177b9:	sub    eax,0xe330b502
  4177be:	dec    ebx
  4177bf:	add    BYTE PTR ds:0x9aedcaf7,dl
  4177c5:	lods   al,BYTE PTR ds:[esi]
  4177c6:	aad    0xfc
  4177c8:	mov    WORD PTR ds:0x91fb0909,gs
  4177ce:	push   esp
  4177cf:	aas    
  4177d0:	mov    WORD PTR [eax+edx*8-0x5f98f42f],ss
  4177d7:	fidivr WORD PTR [eax+0xd]
  4177da:	mov    dh,0xc5
  4177dc:	mov    eax,ds:0x93d36898
  4177e1:	cmp    edi,DWORD PTR [eax-0x42]
  4177e4:	or     eax,0x9a12eb54
  4177e9:	or     eax,0x7f6a839d
  4177ee:	push   0x10
  4177f0:	pop    ds
  4177f1:	loopne 0x4177df
  4177f3:	inc    esp
  4177f4:	mov    WORD PTR ds:0x9669c536,cs
  4177fa:	pusha  
  4177fb:	fist   WORD PTR [eax-0x6c]
  4177fe:	fild   WORD PTR [ebx]
  417800:	xchg   ebp,eax
  417801:	pop    es
  417802:	stos   DWORD PTR es:[edi],eax
  417803:	pop    edx
  417804:	adc    DWORD PTR [eax+edi*2-0x12d10449],0xffffff84
	...
  417820:	sub    DWORD PTR [eax-0x21],eax
  417823:	add    ecx,DWORD PTR [ebx+ecx*4-0x2a64c7aa]
  41782a:	fisttp WORD PTR [ecx+edi*1-0x6d11f1ab]
  417831:	aaa    
  417832:	add    eax,DWORD PTR [esp+ecx*4]
  417835:	xchg   esp,eax
  417836:	cli    
  417837:	mov    fs,WORD PTR [eax-0x39]
  41783a:	mov    al,ds:0xf3c91303
  41783f:	mov    edx,cs
  417841:	adc    bl,BYTE PTR [edi]
  417843:	add    BYTE PTR [ebx],dl
  417845:	arpl   WORD PTR [edx],dx
  417847:	test   BYTE PTR [edx],0x5e
  41784a:	(bad)  
  41784b:	fstp   QWORD PTR [ecx+0x3091130b]
  417851:	mov    esi,0xc9950420
  417856:	mov    bl,0x8c
  417858:	loope  0x4178ae
  41785a:	(bad)  
  41785b:	std    
  41785c:	cmp    dh,BYTE PTR [edi]
  41785e:	or     BYTE PTR [ebp-0x1df76b71],dh
  417864:	sbb    ah,al
  417866:	je     0x417890
  417868:	mov    BYTE PTR [edi],dl
  41786a:	aad    0xa8
  41786c:	mov    dl,0x8d
  41786e:	xchg   DWORD PTR [esi-0x16f76c45],ecx
  417874:	xchg   esi,eax
  417875:	pop    es
  417876:	push   esp
  417877:	add    ecx,ecx
  417879:	xchg   esp,eax
  41787a:	jg     0x41781a
  41787c:	push   eax
  41787d:	xor    BYTE PTR [esi],bl
  41787f:	push   0xe9084152
	...
  417898:	(bad)  
  417899:	mov    edi,DWORD PTR [ebp+0x87dc7c5]
  41789f:	sbb    BYTE PTR [ecx+0x40],al
  4178a2:	inc    ebx
  4178a3:	push   ecx
  4178a4:	push   cs
  4178a5:	mov    edx,0x1192e9f0
  4178aa:	mov    eax,ds:0x7f405a47
  4178af:	xor    DWORD PTR [eax+0x35],edx
  4178b2:	adc    eax,0xe64e4960
  4178b7:	pusha  
  4178b8:	push   eax
  4178b9:	xchg   esi,eax
  4178ba:	div    DWORD PTR [eax-0x21]
  4178bd:	ins    DWORD PTR es:[edi],dx
  4178be:	shl    BYTE PTR [eax+0x4e],0xbe
  4178c2:	jmp    0xa22c5e0a
  4178c7:	fadd   DWORD PTR [ebp+0x6e]
  4178ca:	iret   
  4178cb:	jo     0x41790c
  4178cd:	(bad)  
  4178ce:	out    0xde,eax
  4178d0:	or     BYTE PTR [edi-0x29],ah
  4178d3:	pop    es
  4178d4:	add    BYTE PTR [ebx-0x1],dl
  4178d7:	cli    
  4178d8:	pop    ss
  4178d9:	gs (bad) 
  4178db:	rcl    DWORD PTR [eax-0x328f3f93],1
  4178e1:	mov    ebp,0x3f88d6e9
  4178e6:	or     BYTE PTR [eax],bl
  4178e8:	pop    es
  4178e9:	push   ss
  4178ea:	rol    BYTE PTR [eax],1
  4178ec:	hlt    
  4178ed:	cmp    BYTE PTR [eax],al
  4178ef:	xor    edi,esp
  4178f1:	or     eax,ebx
  4178f3:	ror    ebp,0x92
  4178f6:	and    eax,0x75532cc8
  4178fb:	jecxz  0x4178fd
	...
  41790d:	add    BYTE PTR [eax],al
  41790f:	add    dh,al
  417911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417912:	aaa    
  417913:	xor    esi,DWORD PTR [edx+edi*8+0x38e4d88c]
  41791a:	or     dh,BYTE PTR [ecx]
  41791c:	aaa    
  41791d:	or     eax,eax
  41791f:	rcr    DWORD PTR ds:0xfcd02648,0x53
  417926:	jne    0x41790b
  417928:	cli    
  417929:	or     BYTE PTR [bx+si],al
  41792c:	and    al,0xfb
  41792e:	mov    eax,ds
  417930:	mov    ah,0x38
  417932:	sbb    BYTE PTR [ecx],dh
  417934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417935:	or     eax,eax
  417937:	ror    ebp,0x94
  41793a:	and    eax,0x7553acd0
  41793f:	jecxz  0x41797b
  417941:	cwde   
  417942:	add    ecx,DWORD PTR [edi]
  417944:	xor    al,0xfb
  417946:	jle    0x41798d
  417948:	sub    eax,0x2404e752
  41794d:	dec    esp
  41794e:	lea    ebx,[eax]
  417950:	mov    dh,0x7d
  417952:	add    BYTE PTR [esi+ebx*4],al
  417955:	jge    0x417957
  417957:	mov    DWORD PTR ds:0x6c5b5688,edx
  41795d:	sub    al,0x51
  41795f:	ret    0x90fd
  417962:	push   edi
  417963:	push   esi
  417964:	jle    0x4179e2
  417966:	sub    al,0xc
  417968:	add    ecx,DWORD PTR [esp+edi*2]
  41796b:	and    al,0xc5
  41796d:	fimul  WORD PTR [ecx-0x3a53250a]
  417973:	sldt   WORD PTR [eax]
	...
  417986:	add    BYTE PTR [eax],al
  417988:	add    edx,DWORD PTR [edx+0x3]
  41798b:	mov    bh,0x8c
  41798d:	jmp    0x4179c7
  41798f:	mov    ecx,DWORD PTR [edi+0x33]
  417992:	cmp    eax,ebp
  417994:	pop    ecx
  417995:	push   ecx
  417996:	fdiv   st(5),st
  417998:	and    al,0x9f
  41799a:	inc    ebp
  41799b:	aas    
  41799c:	mov    WORD PTR [ebx+0x0],ss
  41799f:	cld    
  4179a0:	stos   DWORD PTR es:[edi],eax
  4179a1:	in     eax,dx
  4179a2:	or     esi,DWORD PTR [ebp-0x17c88366]
  4179a8:	dec    ebp
  4179a9:	icebp  
  4179aa:	(bad)  
  4179ac:	and    al,0x7
  4179ae:	inc    esi
  4179af:	aas    
  4179b0:	mov    WORD PTR ds:0x1383f9c4,ss
  4179b6:	cmp    ebx,DWORD PTR [ecx+0x4e]
  4179b9:	inc    esi
  4179ba:	or     DWORD PTR [ebx+0x5],edx
  4179bd:	or     DWORD PTR [ecx],edi
  4179bf:	push   eax
  4179c0:	mov    edi,0x170836b6
  4179c5:	push   ecx
  4179c6:	or     eax,0x37b5c18b
  4179cb:	push   eax
  4179cc:	fs icebp 
  4179ce:	fdiv   st(5),st
  4179d0:	dec    ebx
  4179d1:	push   esi
  4179d2:	mov    ebp,0x8e2dcd74
  4179d7:	inc    ebx
  4179d8:	xor    al,0x1e
  4179da:	loope  0x4179d1
  4179dc:	xor    BYTE PTR [ebx+0xc868dc],al
  4179e2:	dec    edx
  4179e3:	add    BYTE PTR [ecx],dl
  4179e5:	jmp    0xa565caba
  4179ea:	(bad)  
	...
  417a00:	adc    edx,DWORD PTR [esi]
  417a02:	mov    ebp,0x8e2d4d73
  417a07:	inc    ebx
  417a08:	add    al,0x1e
  417a0a:	loope  0x4179e5
  417a0c:	clc    
  417a0d:	cmp    bl,cl
  417a0f:	push   ecx
  417a10:	add    ecx,ebp
  417a12:	rcl    BYTE PTR [eax-0xc],1
  417a15:	scas   eax,DWORD PTR es:[edi]
  417a16:	(bad)  
  417a18:	jecxz  0x4179ae
  417a1a:	dec    edx
  417a1b:	jge    0x417a05
  417a1d:	fldenv [ecx+0x68e0d3fc]
  417a23:	jmp    0x3730a335
  417a28:	pop    edx
  417a29:	cvttps2pi mm7,xmm4
  417a2c:	add    al,0xc2
  417a2e:	jecxz  0x4179b0
  417a30:	dec    edi
  417a31:	cmp    al,0xf
  417a33:	aaa    
  417a34:	mov    ah,0x3e
  417a36:	mov    edx,0x2409a1d3
  417a3b:	aam    0x3c
  417a3d:	pop    ss
  417a3e:	mov    ds:0x8c2c3cfc,al
  417a43:	iret   
  417a44:	mov    DWORD PTR [ebx],edi
  417a46:	pop    es
  417a47:	mov    al,0xf8
  417a49:	aad    0xdf
  417a4b:	or     bh,0x3c
  417a4e:	paddusb mm3,QWORD PTR [ecx]
  417a51:	cmp    BYTE PTR [esi-0x2d],bh
  417a54:	hlt    
  417a55:	pop    eax
  417a56:	sti    
  417a57:	inc    esp
  417a58:	mov    WORD PTR [ecx],cs
  417a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a5b:	sar    DWORD PTR [esp+ebp*1+0x3b51d078],cl
  417a62:	push   0x31
	...
  417a78:	dec    eax
  417a79:	shrd   ebx,edx,0xb
  417a7d:	ror    DWORD PTR [ebx+0x7d],1
  417a80:	xlat   BYTE PTR ds:[ebx]
  417a81:	inc    esp
  417a82:	xlat   BYTE PTR ds:[ebx]
  417a83:	das    
  417a84:	mov    edi,0xcf80dfd5
  417a89:	cmp    al,0x8f
  417a8b:	(bad)  [ecx-0x5b2cd1c8]
  417a91:	fcomp  DWORD PTR [esp+eax*2-0x2c5bf674]
  417a98:	pop    esp
  417a99:	sub    al,0x80
  417a9b:	iret   
  417a9c:	add    DWORD PTR [ebx],edi
  417a9e:	jp     0x417ad1
  417aa0:	clc    
  417aa1:	push   cs
  417aa2:	lods   al,BYTE PTR ds:[esi]
  417aa3:	ror    DWORD PTR [ebx],cl
  417aa5:	ror    DWORD PTR [eax],1
  417aa7:	cmc    
  417aa8:	push   0x3381f8df
  417aad:	mov    DWORD PTR [edi-0x17],0x39f0d70c
  417ab4:	mov    al,0xd0
  417ab6:	hlt    
  417ab7:	(bad)  
  417ab8:	fisubr WORD PTR [ebx-0x6bb6ab2c]
  417abe:	sub    DWORD PTR [eax+eiz*8],0xffffffe3
  417ac2:	loopne 0x417ac4
  417ac4:	fdivr  QWORD PTR [eax]
  417ac6:	cmc    
  417ac7:	pop    ds
  417ac8:	or     eax,0xc019f0d7
  417acd:	xor    esi,ecx
  417acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ad0:	mov    esi,0x55f1ce14
  417ad5:	cmovnp ebx,DWORD PTR [ecx-0x6d26d341]
	...
  417af0:	pop    esi
  417af1:	cmp    BYTE PTR [esi+0x22],dl
  417af4:	stc    
  417af5:	sub    BYTE PTR [ebx-0x55],dl
  417af8:	ja     0x417b34
  417afa:	pop    esp
  417afb:	pusha  
  417afc:	je     0x417ab8
  417afe:	in     al,0x5d
  417b00:	mov    BYTE PTR [eax+ecx*1-0x7e206a46],dl
  417b07:	mov    esp,0xe57b0d57
  417b0c:	or     al,0x16
  417b0e:	mov    BYTE PTR [edi+0x5e],cl
  417b11:	cmp    BYTE PTR [eax+0x51],bl
  417b14:	sbb    al,0x3a
  417b16:	cmc    
  417b17:	jmp    0x95a20fed
  417b1c:	lds    edi,FWORD PTR [ecx+0x8]
  417b1f:	inc    ecx
  417b20:	cwde   
  417b21:	cmp    dh,ch
  417b23:	and    BYTE PTR es:[esi-0x7e],0x6b
  417b28:	arpl   dx,ax
  417b2a:	inc    edi
  417b2b:	jmp    0xab7c0bb7
  417b30:	or     bh,BYTE PTR [edi]
  417b32:	add    BYTE PTR [eax],al
  417b34:	adc    DWORD PTR [ecx-0x35],esp
  417b37:	test   DWORD PTR ds:0xf4fff364,ecx
  417b3d:	xchg   ebp,eax
  417b3e:	or     BYTE PTR [eax],al
  417b40:	mov    es,WORD PTR [ecx+0x115cf08d]
  417b46:	jl     0x417b46
  417b48:	mov    dl,0x63
  417b4a:	and    eax,0x7fa0ced2
  417b4f:	test   DWORD PTR [ecx+0x66],ebx
  417b52:	repz inc DWORD PTR [eax]
	...
  417b65:	add    BYTE PTR [eax],al
  417b67:	add    BYTE PTR [ecx+edx*1],bh
  417b6a:	je     0x417b6a
  417b6c:	repnz arpl bx,si
  417b6f:	test   DWORD PTR [ecx+0x66],ebp
  417b72:	repz jmp FWORD PTR [esi]
  417b75:	mov    ecx,0x63f2fe74
  417b7a:	add    edi,DWORD PTR [esi+0x7fe810a6]
  417b80:	out    dx,al
  417b81:	or     DWORD PTR [esi+edi*8+0x12],esi
  417b85:	arpl   WORD PTR [ebx],ax
  417b87:	mov    dh,0x52
  417b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b8a:	lock mov BYTE PTR [ebx+ecx*2+0x7],ah
  417b8f:	add    BYTE PTR [esi+0x6dfa87d2],dh
  417b95:	retf   0x8009
  417b98:	scas   al,BYTE PTR es:[edi]
  417b99:	nop
  417b9a:	jns    0x417b62
  417b9c:	sbb    edi,DWORD PTR [ebx-0x20]
  417b9f:	imul   esp,ebx,0x63
  417ba2:	repz or DWORD PTR [eax],0xffffffc8
  417ba6:	idiv   bh
  417ba8:	rcl    BYTE PTR [eax-0x1ddac478],cl
  417bae:	stos   DWORD PTR es:[edi],eax
  417baf:	and    DWORD PTR [eax+0x72fff6c8],0xffffff90
  417bb6:	jns    0x417b56
  417bb8:	mov    al,ds:0x72fe8811
  417bbd:	arpl   WORD PTR [eax-0x18],bx
  417bc0:	mov    WORD PTR [edx],cs
  417bc2:	or     al,BYTE PTR [eax]
  417bc4:	mov    edx,gs
  417bc6:	ss pop ecx
  417bc8:	add    eax,0xc2259f
	...
  417bdd:	add    BYTE PTR [eax],al
  417bdf:	add    BYTE PTR [ebx+ebp*1-0x540e78c2],al
  417be6:	call   0x96d0977
  417beb:	push   ecx
  417bec:	inc    edx
  417bed:	jp     0x417c62
  417bef:	pop    ebx
  417bf0:	test   dh,al
  417bf2:	pop    esi
  417bf3:	or     al,0x19
  417bf5:	test   al,0x89
  417bf7:	inc    bl
  417bf9:	dec    ecx
  417bfa:	cmp    eax,ebp
  417bfc:	mov    ebx,0x2600092a
  417c01:	sub    edx,DWORD PTR [ecx+0x5c]
  417c04:	and    ch,BYTE PTR [esp+ecx*1-0x18]
  417c08:	mov    edi,0x5dfdd7e7
  417c0d:	std    
  417c0e:	jb     0x417b92
  417c10:	xor    BYTE PTR [ecx+0x2a140049],ah
  417c16:	sbb    eax,DWORD PTR [edx+0xf]
  417c19:	and    al,0xf9
  417c1b:	jnp    0x417c9a
  417c1d:	out    0x8d,eax
  417c1f:	js     0x417c93
  417c21:	mov    bh,0xd8
  417c23:	jmp    FWORD PTR [ebx+0x2e]
  417c26:	or     ecx,ebp
  417c28:	mov    eax,0x1187d9b4
  417c2d:	pop    edx
  417c2e:	xlat   BYTE PTR ds:[ebx]
  417c2f:	std    
  417c30:	push   ebx
  417c31:	popf   
  417c32:	mov    esi,0x8eb27ce9
  417c37:	je     0x417c7b
  417c39:	(bad)  
  417c3a:	fadd   DWORD PTR [edi-0x228adef]
  417c40:	xor    esi,DWORD PTR [edi-0x72]
  417c43:	je     0x417c45
	...
  417c55:	add    BYTE PTR [eax],al
  417c57:	add    BYTE PTR [edx],ch
  417c59:	jg     0x417c33
  417c5b:	mov    DWORD PTR [ecx],edx
  417c5d:	jmp    0x91fe:0x951bfdd6
  417c64:	lea    edx,[ebx]
  417c66:	dec    DWORD PTR [edi+0x15]
  417c69:	cli    
  417c6a:	call   0xb999:0xd63801d1
  417c71:	test   DWORD PTR [edi],eax
  417c73:	jnp    0x417c68
  417c75:	push   ecx
  417c76:	loop   0x417c7b
  417c78:	dec    ebp
  417c79:	shl    BYTE PTR [edx-0x33],cl
  417c7c:	jl     0x417c37
  417c7e:	in     al,dx
  417c7f:	adc    DWORD PTR [ebp+0x3ac65494],0xffffffde
  417c86:	xlat   BYTE PTR ds:[ebx]
  417c87:	into   
  417c88:	(bad)  
  417c89:	aaa    
  417c8a:	fiadd  WORD PTR [ebx-0x303a4311]
  417c90:	mov    ecx,0x8c0b5f94
  417c95:	ror    DWORD PTR [esi-0x4243187d],0xcf
  417c9c:	mov    eax,ds:0x76e3c94
  417ca1:	adc    bl,BYTE PTR [edi-0x32]
  417ca4:	xchg   ecx,eax
  417ca5:	aaa    
  417ca6:	das    
  417ca7:	fdiv   QWORD PTR [ebx]
  417ca9:	xchg   esp,eax
  417caa:	fild   WORD PTR [ebx]
  417cac:	loope  0x417c84
  417cae:	cmp    bh,BYTE PTR [ebp+0x68]
  417cb1:	fldenv [ecx+0x1de273fc]
  417cb7:	aaa    
  417cb8:	adc    eax,0xf3c3d0
	...
  417ccd:	add    BYTE PTR [eax],al
  417ccf:	add    cl,ch
  417cd1:	or     eax,DWORD PTR [ebx]
  417cd3:	sub    BYTE PTR [eax-0x20549b52],al
  417cd9:	mov    edi,DWORD PTR [eax-0x3a]
  417cdc:	pop    ss
  417cdd:	mov    esp,0x950665ef
  417ce2:	(bad)  
  417ce4:	test   BYTE PTR [ecx],cl
  417ce6:	scas   eax,DWORD PTR es:[edi]
  417ce7:	repz or cl,BYTE PTR [edi-0x33]
  417ceb:	adc    al,0x3e
  417ced:	xchg   DWORD PTR [eax],ecx
  417cef:	jle    0x417ccf
  417cf1:	loope  0x417c7c
  417cf3:	sub    DWORD PTR [eax],ebx
  417cf5:	(bad)  
  417cf6:	loopne 0x417d65
  417cf8:	cmp    edi,DWORD PTR [ecx]
  417cfa:	cmc    
  417cfb:	xchg   ecx,eax
  417cfc:	mov    ebx,0xe7e947c3
  417d01:	jns    0x417cf2
  417d03:	push   cs
  417d04:	retf   
  417d05:	mov    BYTE PTR [ebp-0x1f1e40de],bh
  417d0b:	jns    0x417ccf
  417d0d:	cmp    ch,dh
  417d0f:	xor    DWORD PTR [ebx],0xb7e947c3
  417d15:	ins    DWORD PTR es:[edi],dx
  417d16:	out    dx,eax
  417d17:	out    0xc2,al
  417d19:	mov    BYTE PTR [ebp-0x1f21813e],bh
  417d1f:	xor    eax,0x2ef538db
  417d24:	push   0xffffffdd
  417d26:	retf   0x8ff1
  417d29:	in     eax,0x81
  417d2b:	sbb    eax,0xc1598c74
  417d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d31:	cmp    eax,0xaef5
	...
  417d46:	add    BYTE PTR [eax],al
  417d48:	adc    BYTE PTR [ebp-0x78],dl
  417d4b:	jmp    0x3df211df
  417d50:	in     eax,0x75
  417d52:	or     BYTE PTR [edx+0x7f],ah
  417d55:	nop    DWORD PTR [edx+0x4f]
  417d59:	xchg   ecx,eax
  417d5a:	mov    DWORD PTR [edx-0xb2b8675],ebp
  417d60:	rcl    BYTE PTR [edx+edi*2+0x7b591786],1
  417d67:	sub    BYTE PTR [eax+0x5e70180b],dl
  417d6d:	adc    eax,0x540ee5c8
  417d72:	or     al,0x14
  417d74:	jl     0x417d34
  417d76:	inc    edi
  417d77:	jmp    0x92a559
  417d7c:	lea    ecx,[bx+si]
  417d7f:	push   ebx
  417d80:	sahf   
  417d81:	gs sub al,0x8
  417d84:	push   es
  417d85:	pop    edx
  417d86:	loopne 0x417d80
  417d88:	push   0x46
  417d8a:	jne    0x417d4f
  417d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d8d:	xchg   ecx,eax
  417d8e:	or     BYTE PTR [eax],al
  417d90:	ins    DWORD PTR es:[edi],dx
  417d91:	gs jns 0x417dd5
  417d94:	cmc    
  417d95:	mov    edx,0x12f58917
  417d9a:	mov    DWORD PTR [esi+eiz*2],0x893d0c51
  417da1:	fdiv   QWORD PTR ds:0xb0566700
  417da7:	fsub   QWORD PTR [eax-0x30]
  417daa:	or     BYTE PTR [ebx+0x0],cl
	...
  417dc0:	(bad)  
  417dc1:	mov    edx,0x8cf68318
  417dc6:	xchg   eax,eax
  417dc8:	mov    cl,0x86
  417dca:	push   esp
  417dcb:	jbe    0x417e31
  417dcd:	nop
  417dce:	jp     0x417dbf
  417dd0:	outs   dx,BYTE PTR ds:[esi]
  417dd1:	push   edx
  417dd2:	or     al,0x0
  417dd4:	cmp    BYTE PTR [ecx+0x28c983e9],0x58
  417ddb:	push   esi
  417ddc:	cs add BYTE PTR gs:[ebx+0x45819470],cl
  417de4:	sub    eax,0x8e85780
  417de9:	dec    eax
  417dea:	repz (bad) 
  417dec:	fmul   st,st(5)
  417dee:	clc    
  417def:	push   eax
  417df0:	clc    
  417df1:	rol    DWORD PTR [eax],cl
  417df3:	push   eax
  417df4:	std    
  417df5:	das    
  417df6:	lock (bad) 
  417df8:	fidiv  DWORD PTR [ebp+0x1375e849]
  417dfe:	(bad)  
  417dff:	adc    BYTE PTR [esi],dl
  417e01:	pop    ecx
  417e02:	xlat   BYTE PTR ds:[ebx]
  417e03:	clc    
  417e04:	jmp    0x4a57:0x8cdc6047
  417e0b:	add    BYTE PTR [ecx],cl
  417e0d:	lock rcl BYTE PTR [eax+0x24],0x50
  417e12:	ret    0x2bfd
  417e15:	arpl   WORD PTR [ebp+0x762bcd74],sp
  417e1b:	inc    ebx
  417e1c:	sbb    al,0x1b
  417e1e:	shr    DWORD PTR [ebp+0x15],1
  417e21:	outs   dx,BYTE PTR ds:[esi]
  417e22:	ret    
  417e23:	push   0x0
	...
  417e38:	call   0x1141c85b
  417e3d:	call   0xc25cf12
  417e42:	ret    0xf3fd
  417e45:	shl    DWORD PTR ds:0xd8f017fc,0x87
  417e4c:	dec    ecx
  417e4d:	aas    
  417e4e:	jb     0x417eab
  417e50:	fdiv   QWORD PTR [ecx+0x6807f425]
  417e56:	aam    0x87
  417e58:	push   ecx
  417e59:	pop    edi
  417e5a:	jb     0x417eb7
  417e5c:	mov    ah,0xd2
  417e5e:	cmp    BYTE PTR [ebx+0x4d],dh
  417e61:	sub    esi,DWORD PTR [esi+0x43]
  417e64:	mov    ah,0x9a
  417e66:	aam    0x39
  417e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e69:	cmc    
  417e6a:	ret    
  417e6b:	push   0x497840
  417e70:	or     DWORD PTR [eax-0x24],esi
  417e73:	push   eax
  417e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e75:	pop    edi
  417e76:	ret    0x8bfd
  417e79:	xchg   BYTE PTR [eax],bh
  417e7b:	jae    0x417e4a
  417e7d:	cmp    eax,0x6e644376
  417e82:	aam    0x1d
  417e84:	jne    0x417ea1
  417e86:	les    ecx,FWORD PTR [ecx+0x4370b1c9]
  417e8c:	pop    esp
  417e8d:	mov    ch,0x4e
  417e8f:	cld    
  417e90:	add    eax,0xb189dca1
  417e95:	xchg   esp,eax
  417e96:	push   ebx
  417e97:	js     0x417e68
  417e99:	cmp    al,0x78
  417e9b:	inc    esi
	...
  417eb0:	cmp    BYTE PTR [esi],bl
  417eb2:	mov    esp,0xdc50a4db
  417eb7:	inc    edx
  417eb8:	mov    WORD PTR [ecx],fs
  417eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ebb:	retf   
  417ebc:	mov    esp,0x21cb483c
  417ec1:	xor    al,0xc7
  417ec3:	scas   eax,DWORD PTR es:[edi]
  417ec4:	lahf   
  417ec5:	aad    0xdf
  417ec7:	jle    0x417e98
  417ec9:	and    al,0xaf
  417ecb:	fcomi  st,st(5)
  417ecd:	sub    al,0x16
  417ecf:	int3   
  417ed0:	je     0x417f22
  417ed2:	xchg   esp,eax
  417ed3:	inc    edx
  417ed4:	mov    WORD PTR [ecx],fs
  417ed6:	lods   al,BYTE PTR ds:[esi]
  417ed7:	fistp  DWORD PTR [esp+edi*1+0x2c]
  417edb:	retf   
  417edc:	jmp    0x4fc01c14
  417ee1:	sub    al,0x8f
  417ee3:	fist   DWORD PTR [eax]
  417ee5:	sub    eax,0xdb07cbe6
  417eea:	div    DWORD PTR [ebx]
  417eec:	pop    ss
  417eed:	fcmove st,st(7)
  417eef:	xor    al,0xb4
  417ef1:	stos   DWORD PTR es:[edi],eax
  417ef2:	xlat   BYTE PTR ds:[ebx]
  417ef3:	retf   
  417ef4:	mov    ecx,0x59f4ad17
  417ef9:	and    DWORD PTR [esp+ebx*8],esp
  417efc:	cmp    al,0x3c
  417efe:	pop    ecx
  417eff:	int3   
  417f00:	mov    eax,ds:0x132f1d33
  417f05:	inc    ecx
  417f06:	add    al,0xc6
  417f08:	test   BYTE PTR [esp+esi*1-0x7cea9083],dl
  417f0f:	js     0x417e94
  417f11:	xor    ebx,edi
  417f13:	add    BYTE PTR ss:[eax],al
	...
  417f26:	add    BYTE PTR [eax],al
  417f28:	loop   0x417ef5
  417f2a:	push   0x29
  417f2c:	test   BYTE PTR [edi],bl
  417f2e:	hlt    
  417f2f:	not    DWORD PTR [esi]
  417f31:	sbb    DWORD PTR [edi-0x36],ebx
  417f34:	popa   
  417f35:	xor    ecx,DWORD PTR [eax]
  417f37:	sbb    DWORD PTR [eax],edi
  417f39:	enter  0x6ef6,0x47
  417f3d:	mov    esi,0xaa73d108
  417f42:	inc    edi
  417f43:	jmp    0x5734baaf
  417f48:	inc    edi
  417f49:	sbb    edx,0x63
  417f4c:	or     dl,al
  417f4e:	jle    0x417ef8
  417f50:	(bad)  
  417f51:	sbb    al,0xc
  417f53:	sti    
  417f54:	leave  
  417f55:	adc    eax,0x43d3d1f2
  417f5a:	int    0x64
  417f5c:	shl    BYTE PTR [edx],0xf5
  417f5f:	es xchg ecx,eax
  417f61:	xchg   esp,eax
  417f62:	or     cl,ch
  417f64:	loop   0x417f2d
  417f66:	jg     0x417f81
  417f68:	jns    0x417f81
  417f6a:	jl     0x417f7b
  417f6c:	(bad)  
  417f6d:	xor    BYTE PTR [edi],dh
  417f6f:	sbb    ecx,ebx
  417f71:	arpl   WORD PTR [ecx-0xacdc39c],ax
  417f77:	neg    BYTE PTR [eax+0x17]
  417f7a:	je     0x417f6b
  417f7c:	(bad)  
  417f7d:	xor    ch,dh
  417f7f:	ins    BYTE PTR es:[edi],dx
  417f80:	pop    ebx
  417f81:	xor    dh,ch
  417f83:	fiadd  WORD PTR [edx+0x1f]
  417f86:	je     0x417f5f
  417f88:	(bad)  
  417f89:	xor    BYTE PTR ds:0x8f,al
	...
  417f9f:	add    BYTE PTR [edx+0x2b46e815],cl
  417fa5:	out    dx,eax
  417fa6:	jae    0x417f67
  417fa8:	(bad)  
  417fa9:	xor    BYTE PTR ds:0xf083867f,al
  417faf:	popa   
  417fb0:	mov    BYTE PTR [edx+0x9],bl
  417fb3:	jmp    0xa3cb568a
  417fb8:	ja     0x417f69
  417fba:	or     ebp,DWORD PTR [ecx-0x76]
  417fbd:	xchg   esp,eax
  417fbe:	jnp    0x417f67
  417fc0:	mov    ebp,0x9500e0ca
  417fc5:	pop    esi
  417fc6:	repz push esi
  417fc9:	hlt    
  417fca:	outs   dx,DWORD PTR ds:[esi]
  417fcb:	(bad)  
  417fcc:	loop   0x41802c
  417fce:	or     BYTE PTR [eax-0x588669e2],al
  417fd4:	mov    dh,0x1c
  417fd6:	jo     0x417fd6
  417fd8:	loop   0x418038
  417fda:	or     BYTE PTR [ebp-0x3d],dh
  417fdd:	lods   al,BYTE PTR ds:[esi]
  417fde:	mov    DWORD PTR [eax+0x50f35ec3],eax
  417fe4:	mov    ebp,0x62fff15b
  417fe9:	jle    0x418041
  417feb:	pop    ebx
  417fec:	lods   al,BYTE PTR ds:[esi]
  417fed:	dec    ecx
  417fee:	push   ecx
  417fef:	ret    0x962d
  417ff2:	pop    ecx
  417ff3:	mov    DWORD PTR [eax+0x3b535865],ebx
  417ff9:	mov    bl,0x59
  417ffb:	or     BYTE PTR [esi+0x7c],ch
  417ffe:	add    al,0x8b
  418000:	sbb    BYTE PTR [esi],ah
  418002:	es leave 
	...
  418018:	pop    edi
  418019:	xor    DWORD PTR [esi],eax
  41801b:	mov    BYTE PTR [ecx],ch
  41801d:	sub    eax,0x28e98afd
  418022:	lea    eax,[esp+edi*4]
  418025:	fadd   DWORD PTR [edi-0x1e264207]
  41802b:	push   ebx
  41802c:	xchg   DWORD PTR [eax-0x5c],edx
  41802f:	cli    
  418030:	loop   0x41808d
  418032:	and    eax,0xf2c50d2
  418037:	mov    bh,BYTE PTR [ecx+0x1d013a87]
  41803d:	xchg   ebp,eax
  41803e:	dec    edx
  41803f:	sbb    edi,0x30
  418042:	jno    0x418034
  418044:	xchg   esp,eax
  418045:	out    0x81,eax
  418047:	inc    esp
  418048:	mov    BYTE PTR [ebp-0x80],bl
  41804b:	add    al,0x67
  41804d:	xlat   BYTE PTR ds:[ebx]
  41804e:	xchg   edx,edi
  418050:	mov    WORD PTR [ebx],?
  418052:	dec    ebp
  418053:	icebp  
  418054:	shl    BYTE PTR [esi+0x71],cl
  418057:	in     al,dx
  418058:	leave  
  418059:	std    
  41805a:	out    dx,eax
  41805b:	jmp    DWORD PTR [ebx+0x3b]
  41805e:	or     DWORD PTR [eax],eax
  418060:	mov    WORD PTR [ebx],?
  418062:	or     DWORD PTR [eax],eax
  418064:	mov    WORD PTR [ebx],?
  418066:	or     DWORD PTR [eax],eax
  418068:	mov    WORD PTR [ebx],?
  41806a:	or     DWORD PTR [eax],eax
  41806c:	mov    WORD PTR [ebx],?
  41806e:	or     DWORD PTR [eax],eax
  418070:	mov    WORD PTR [ebx],?
  418072:	or     DWORD PTR [eax],eax
  418074:	mov    WORD PTR [ebx],?
  418076:	or     DWORD PTR [eax],eax
  418078:	mov    WORD PTR [ebx],?
  41807a:	or     DWORD PTR [eax],eax
	...
  418090:	mov    WORD PTR [ebx],?
  418092:	or     DWORD PTR [eax],eax
  418094:	mov    WORD PTR [ebx],?
  418096:	or     DWORD PTR [eax],eax
  418098:	mov    WORD PTR [ebx],?
  41809a:	or     DWORD PTR [eax],eax
  41809c:	mov    WORD PTR [ebx],?
  41809e:	or     DWORD PTR [eax],eax
  4180a0:	mov    WORD PTR [ebx],?
  4180a2:	or     DWORD PTR [eax],eax
  4180a4:	mov    WORD PTR [ebx],?
  4180a6:	or     DWORD PTR [eax],eax
  4180a8:	mov    WORD PTR [ebx],?
  4180aa:	or     DWORD PTR [eax],eax
  4180ac:	mov    WORD PTR [ebx],?
  4180ae:	or     DWORD PTR [eax],eax
  4180b0:	mov    WORD PTR [ebx],?
  4180b2:	or     DWORD PTR [eax],eax
  4180b4:	mov    WORD PTR [ebx],?
  4180b6:	or     DWORD PTR [eax],eax
  4180b8:	mov    WORD PTR [ebx],?
  4180ba:	or     DWORD PTR [eax],eax
  4180bc:	mov    WORD PTR [ebx],?
  4180be:	or     DWORD PTR [eax],eax
  4180c0:	mov    WORD PTR [ebx],?
  4180c2:	or     DWORD PTR [eax],eax
  4180c4:	mov    WORD PTR [ebx],?
  4180c6:	or     DWORD PTR [eax],eax
  4180c8:	mov    WORD PTR [ebx],?
  4180ca:	or     DWORD PTR [eax],eax
  4180cc:	mov    WORD PTR [ebx],?
  4180ce:	or     DWORD PTR [eax],eax
  4180d0:	mov    WORD PTR [ebx],?
  4180d2:	or     DWORD PTR [eax],eax
  4180d4:	mov    WORD PTR [ebx],?
  4180d6:	or     DWORD PTR [eax],eax
  4180d8:	mov    WORD PTR [ebx],?
  4180da:	or     DWORD PTR [eax],eax
  4180dc:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  4180e3:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  4180ea:	fild   WORD PTR [ebx]
  4180ec:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  4180f3:	add    eax,DWORD PTR [eax]
	...
  418105:	add    BYTE PTR [eax],al
  418107:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  41810e:	fild   WORD PTR [ebx]
  418110:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  418117:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41811e:	fild   WORD PTR [ebx]
  418120:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  418127:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41812e:	fild   WORD PTR [ebx]
  418130:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  418137:	add    ecx,DWORD PTR [esp+edx*4-0x65790214]
  41813e:	xor    BYTE PTR [ebx],0x58
  418141:	mov    ebp,0x655a2381
  418146:	lds    edx,FWORD PTR [ebx]
  418148:	stos   DWORD PTR es:[edi],eax
  418149:	je     0x41810a
  41814b:	push   ss
  41814c:	lods   al,BYTE PTR ds:[esi]
  41814d:	je     0x4181ca
  41814f:	pop    ebx
  418150:	das    
  418151:	je     0x4181a5
  418153:	pop    ecx
  418154:	arpl   ax,ax
  418156:	inc    ebx
  418157:	popa   
  418158:	ds je  0x4181ae
  41815b:	pop    esp
  41815c:	das    
  41815d:	je     0x4181a0
  41815f:	popa   
  418160:	and    BYTE PTR [eax+0x6a6c5244],ch
  418166:	sbb    cl,bh
  418168:	test   ebx,edx
  41816a:	or     BYTE PTR [esi+0x0],al
	...
  41817d:	add    BYTE PTR [eax],al
  41817f:	add    BYTE PTR [eax],bh
  418181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418182:	jp     0x4181c4
  418184:	jmp    0x418142
  418186:	jl     0x418151
  418188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418189:	mov    ch,0x1f
  41818b:	leave  
  41818c:	mov    al,ds:0x94d12f67
  418191:	bound  edi,QWORD PTR [eax]
  418193:	fstp   DWORD PTR [eax-0x57ff958c]
  418199:	fisub  DWORD PTR [ebp+0x4]
  41819c:	mov    esi,0xa8076bb9
  4181a1:	xlat   BYTE PTR ds:[ebx]
  4181a2:	push   0xfffffffa
  4181a4:	lods   al,BYTE PTR ds:[esi]
  4181a5:	mov    esi,0xc0c90924
  4181aa:	or     DWORD PTR fs:[esi-0x49],edi
  4181ae:	ins    DWORD PTR es:[edi],dx
  4181af:	rol    ebx,0xa5
  4181b2:	sub    BYTE PTR [ebx-0x44945a54],bh
  4181b8:	shl    DWORD PTR [ebx-0x62eaf094],1
  4181be:	add    esp,ebx
  4181c0:	push   esp
  4181c1:	sar    DWORD PTR [edx-0x3c],0xaf
  4181c5:	mov    bh,0x66
  4181c7:	(bad)  
  4181c8:	pop    edx
  4181c9:	mov    ds:0xb74b8863,al
  4181ce:	xchg   DWORD PTR gs:[ebp+0x5b956074],eax
  4181d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d6:	xor    dl,dh
  4181d8:	jp     0x418183
  4181da:	jge    0x418252
  4181dc:	xor    DWORD PTR [edi-0x41938596],0x7e79
	...
  4181f6:	add    BYTE PTR [eax],al
  4181f8:	imul   ebp,DWORD PTR [eax-0x4ca1b783],0xbb634a26
  418202:	and    eax,0x299b5e4
  418207:	jmp    0x4a169b
  41820c:	mov    ch,0x92
  41820e:	or     BYTE PTR [eax],al
  418210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418211:	xchg   edx,eax
  418212:	or     BYTE PTR [eax],al
  418214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418215:	xchg   edx,eax
  418216:	or     BYTE PTR [eax],al
  418218:	jne    0x4181ac
  41821a:	or     BYTE PTR [eax],al
  41821c:	jne    0x4181b0
  41821e:	or     BYTE PTR [eax],al
  418220:	gs xchg edx,eax
  418222:	or     BYTE PTR [eax],al
  418224:	gs xchg edx,eax
  418226:	or     BYTE PTR [eax],al
  418228:	jne    0x4181bc
  41822a:	or     BYTE PTR [eax],al
  41822c:	jne    0x4181c0
  41822e:	or     BYTE PTR [eax],al
  418230:	gs xchg edx,eax
  418232:	or     BYTE PTR [eax],al
  418234:	gs xchg edx,eax
  418236:	or     BYTE PTR [eax],al
  418238:	xor    eax,0x35000892
  41823d:	xchg   edx,eax
  41823e:	or     BYTE PTR [eax],al
  418240:	and    eax,0x18000892
  418245:	pop    ds
  418246:	inc    esi
  418247:	imul   esi,DWORD PTR [esp+esi*2+0x21],0x4
  41824c:	arpl   di,di
  41824e:	pop    ebx
  41824f:	in     al,dx
  418250:	js     0x418245
  418252:	imul   ebp,DWORD PTR ds:0x56ff154a,0x110d2c08
	...
  418270:	xor    DWORD PTR [edi],esp
  418272:	ins    DWORD PTR es:[edi],dx
  418273:	in     al,0x3d
  418275:	fcom   QWORD PTR [edi-0x72]
  418278:	in     eax,0x91
  41827a:	or     BYTE PTR [eax],al
  41827c:	cmc    
  41827d:	xchg   ecx,eax
  41827e:	or     BYTE PTR [eax],al
  418280:	cmc    
  418281:	xchg   ecx,eax
  418282:	or     BYTE PTR [eax],al
  418284:	in     eax,0x91
  418286:	or     BYTE PTR [eax],al
  418288:	in     eax,0x91
  41828a:	or     BYTE PTR [eax],al
  41828c:	mov    ch,0x91
  41828e:	or     BYTE PTR [eax],al
  418290:	mov    ch,0x91
  418292:	or     BYTE PTR [eax],al
  418294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418295:	xchg   ecx,eax
  418296:	or     BYTE PTR [eax],al
  418298:	mov    WORD PTR [ebx],?
  41829a:	or     DWORD PTR [eax],eax
  41829c:	mov    WORD PTR [ebx],?
  41829e:	or     DWORD PTR [eax],eax
  4182a0:	mov    WORD PTR [ebx],?
  4182a2:	or     DWORD PTR [eax],eax
  4182a4:	mov    WORD PTR [ebx],?
  4182a6:	or     DWORD PTR [eax],eax
  4182a8:	mov    WORD PTR [ebx],?
  4182aa:	or     DWORD PTR [eax],eax
  4182ac:	mov    WORD PTR [ebx],?
  4182ae:	or     DWORD PTR [eax],eax
  4182b0:	mov    WORD PTR [ebx],?
  4182b2:	or     DWORD PTR [eax],eax
  4182b4:	mov    WORD PTR [ebx],?
  4182b6:	or     DWORD PTR [eax],eax
  4182b8:	mov    WORD PTR [ebx],?
  4182ba:	or     DWORD PTR [eax],eax
  4182bc:	mov    WORD PTR [ebx],?
  4182be:	or     DWORD PTR [eax],eax
  4182c0:	mov    WORD PTR [ebx],?
  4182c2:	or     DWORD PTR [eax],eax
  4182c4:	mov    WORD PTR [ebx],?
  4182c6:	or     DWORD PTR [eax],eax
  4182c8:	mov    WORD PTR [ebx],?
  4182ca:	or     DWORD PTR [eax],eax
  4182cc:	mov    WORD PTR [ebx],?
  4182ce:	or     DWORD PTR [eax],eax
  4182d0:	mov    WORD PTR [ebx],?
  4182d2:	or     DWORD PTR [eax],eax
	...
  4182e8:	mov    WORD PTR [ebx],?
  4182ea:	or     DWORD PTR [eax],eax
  4182ec:	mov    WORD PTR [ebx],?
  4182ee:	or     DWORD PTR [eax],eax
  4182f0:	mov    WORD PTR [ebx],?
  4182f2:	or     DWORD PTR [eax],eax
  4182f4:	mov    WORD PTR [ebx],?
  4182f6:	or     DWORD PTR [eax],eax
  4182f8:	mov    WORD PTR [ebx],?
  4182fa:	or     DWORD PTR [eax],eax
  4182fc:	mov    WORD PTR [ebx],?
  4182fe:	or     DWORD PTR [eax],eax
  418300:	mov    WORD PTR [ebx],?
  418302:	or     DWORD PTR [eax],eax
  418304:	mov    WORD PTR [ebx],?
  418306:	or     DWORD PTR [eax],eax
  418308:	mov    WORD PTR [ebx],?
  41830a:	or     DWORD PTR [eax],eax
  41830c:	mov    WORD PTR [ebx],?
  41830e:	or     DWORD PTR [eax],eax
  418310:	mov    WORD PTR [ebx],?
  418312:	or     DWORD PTR [eax],eax
  418314:	mov    WORD PTR [ebx],?
  418316:	or     DWORD PTR [eax],eax
  418318:	mov    WORD PTR [ebx],?
  41831a:	or     DWORD PTR [eax],eax
  41831c:	mov    WORD PTR [ebx],?
  41831e:	or     DWORD PTR [eax],eax
  418320:	mov    WORD PTR [ebx],?
  418322:	or     DWORD PTR [eax],eax
  418324:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41832b:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  418332:	fild   WORD PTR [ebx]
  418334:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41833b:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  418342:	fild   WORD PTR [ebx]
  418344:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41834b:	add    eax,DWORD PTR [eax]
	...
  41835d:	add    BYTE PTR [eax],al
  41835f:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  418366:	fild   WORD PTR [ebx]
  418368:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41836f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  418376:	fild   WORD PTR [ebx]
  418378:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41837f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  418386:	fild   WORD PTR [ebx]
  418388:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41838f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  418396:	fild   WORD PTR [ebx]
  418398:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41839f:	add    ecx,DWORD PTR [esp+edx*4+0x609d11d0]
  4183a6:	fmul   QWORD PTR ds:0x5080a48c
  4183ac:	pop    ebp
  4183ad:	mov    ds:0x94685186,eax
  4183b2:	or     BYTE PTR [ecx+0x67],bh
  4183b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b6:	push   0xffffff8b
  4183b8:	(bad)  
  4183b9:	mov    ebx,0xa0824c7d
  4183be:	outs   dx,DWORD PTR ds:[esi]
  4183bf:	jmp    0x1d7ae97c
	...
  4183d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d9:	sub    ebx,DWORD PTR [edi+0x44]
  4183dc:	pop    ebx
  4183dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183de:	jns    0x4183c9
  4183e0:	mov    al,ds:0x94f53965
  4183e5:	popa   
  4183e6:	cmp    eax,0x3a7b8ff1
  4183eb:	cli    
  4183ec:	jnp    0x418419
  4183ee:	push   0x3a7bb30b
  4183f3:	fimul  DWORD PTR [edi-0x62e29448]
  4183f9:	mov    bh,0x5f
  4183fb:	dec    DWORD PTR [edi-0x5c059460]
  418401:	xchg   esp,eax
  418402:	fs push cs
  418404:	xchg   esi,eax
  418405:	mov    bh,0x8
  418407:	mov    eax,0xf9086441
  41840c:	push   0x7ede79a5
  418411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418412:	ins    BYTE PTR es:[edi],dx
  418413:	sbb    BYTE PTR [eax+0x7bc56bbc],cl
  418419:	mov    ecx,0xba5ebc08
  41841e:	popa   
  41841f:	int3   
  418420:	pop    eax
  418421:	xchg   esp,eax
  418422:	ins    BYTE PTR es:[edi],dx
  418423:	mov    ebx,0xc765b168
  418428:	(bad)  
  418429:	mov    al,ds:0xa0bab47a
  41842e:	xchg   si,ax
  418430:	add    BYTE PTR [ebx],ch
  418432:	cmp    al,bl
  418434:	clc    
  418435:	jns    0x41846e
  418437:	fmul   DWORD PTR [edi+0x7e64b3]
	...
  41844d:	add    BYTE PTR [eax],al
  41844f:	add    BYTE PTR [ebp+0x2006fb7],ah
  418455:	ins    BYTE PTR es:[edi],dx
  418456:	or     BYTE PTR [ecx],dh
  418458:	pop    ss
  418459:	and    bh,BYTE PTR [ecx]
  41845b:	xor    eax,0x72f52e0b
  418460:	or     eax,0x5a6f6c70
  418465:	nop
  418466:	and    eax,0x3a2c9632
  41846b:	mov    ch,BYTE PTR ss:[eax]
  41846e:	add    BYTE PTR ds:[esi+0x78],dl
  418472:	jp     0x4184dd
  418474:	push   esi
  418475:	ins    BYTE PTR es:[edi],dx
  418476:	or     BYTE PTR [ebx+0x58],dh
  418479:	data16 ja 0x4184e4
  41847c:	int3   
  41847d:	imul   ax,WORD PTR [eax],0x6fc0
  418482:	ja     0x4184f8
  418484:	mov    BYTE PTR [edx+0x8],ah
  418487:	arpl   WORD PTR [edx-0x768a879d],ax
  41848d:	jnp    0x418509
  41848f:	add    BYTE PTR [ebp-0x7991929e],al
  418495:	jnp    0x41850e
  418497:	jae    0x4184fe
  418499:	bound  ebp,QWORD PTR [ebp+0x67]
  41849c:	call   0x6365:0x8b007a7b
  4184a3:	je     0x4184ec
  4184a5:	jno    0x41850b
  4184a7:	ins    BYTE PTR es:[edi],dx
  4184a8:	and    eax,0x58676671
  4184ad:	jp     0x4184b7
  4184af:	push   0x48
  4184b1:	arpl   WORD PTR [ecx+0x73],di
	...
  4184c8:	adc    al,0x96
  4184ca:	and    eax,0x37211632
  4184cf:	xor    esi,ebp
  4184d1:	outs   dx,BYTE PTR ds:[esi]
  4184d2:	pusha  
  4184d3:	popa   
  4184d4:	cmp    DWORD PTR [ebp+0x7e],edi
  4184d7:	gs pop ss
  4184d9:	xchg   esi,eax
  4184da:	outs   dx,BYTE PTR ds:[esi]
  4184db:	jb     0x4184e5
  4184dd:	jge    0x41854b
  4184df:	outs   dx,DWORD PTR ds:[esi]
  4184e0:	mov    WORD PTR [eax],ss
  4184e2:	or     DWORD PTR [ecx+0x75],ebp
  4184e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e6:	and    eax,0x2c3b5e63
  4184eb:	jno    0x418555
  4184ed:	adc    DWORD PTR [ecx],ecx
  4184ef:	jno    0x41852c
  4184f1:	push   ds
  4184f2:	arpl   WORD PTR cs:[esi],di
  4184f5:	cmp    edi,DWORD PTR [esi]
  4184f7:	jae    0x418535
  4184f9:	fdivr  DWORD PTR [esi]
  4184fb:	imul   ebp,DWORD PTR ds:0x356b0cd9,0xffffffde
  418502:	and    al,0x5f
  418504:	sub    DWORD PTR [edi+0xc],esp
  418507:	popa   
  418508:	and    al,0xd8
  41850a:	sub    eax,0x223b2971
  41850f:	outs   dx,BYTE PTR ds:[esi]
  418510:	add    cl,bl
  418512:	outs   dx,BYTE PTR ds:[esi]
  418514:	jmp    0xebab9178
  418519:	mov    fs,WORD PTR [ebx+esi*2]
  41851c:	in     eax,dx
  41851d:	cmp    ebx,DWORD PTR [edi]
  41851f:	jae    0x418510
  418521:	xchg   esi,eax
  418522:	xor    DWORD PTR [ebp-0x27],ebp
  418525:	cmp    ebp,DWORD PTR [ebx]
  418527:	ins    BYTE PTR es:[edi],dx
  418528:	icebp  
  418529:	cs cmp al,0x63
	...
  418540:	call   0xbfa0b080
  418545:	cwde   
  418546:	cs pop edi
  418548:	mov    al,0x27
  41854a:	or     DWORD PTR [ecx-0x40],esi
  41854d:	pop    esp
  41854e:	cmp    esi,DWORD PTR [ebp-0x53]
  418551:	dec    ebp
  418552:	cmp    al,0x0
  418554:	pop    esp
  418555:	mov    edi,esp
  418557:	das    
  418558:	pop    esp
  418559:	mov    ecx,DWORD PTR [eax+esi*2]
  41855c:	mov    eax,ds:0xa96c38ed
  418561:	cmp    esp,DWORD PTR [ebx]
  418563:	ins    DWORD PTR es:[edi],dx
  418564:	jle    0x4185bd
  418566:	sub    ch,BYTE PTR [esi-0x74]
  418569:	push   ecx
  41856a:	sub    ah,BYTE PTR [edi-0x80]
  41856d:	xchg   esp,eax
  41856e:	xchg   edi,eax
  41856f:	add    edi,DWORD PTR [ebp-0x61]
  418572:	test   BYTE PTR [esi],ch
  418574:	outs   dx,DWORD PTR ds:[esi]
  418575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418576:	fbld   TBYTE PTR [edx]
  418578:	pop    ebp
  418579:	mov    esp,0x94632673
  41857e:	xor    DWORD PTR [esi],0x358ca05d
  418584:	mov    WORD PTR [esp+eax*4+0x75af3a22],?
  41858b:	add    edi,DWORD PTR [edi+ebp*4]
  41858e:	dec    edi
  41858f:	xor    al,0x2f
  418591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418592:	(bad)  
  418594:	pusha  
  418595:	popa   
  418596:	push   ss
  418597:	stc    
  418598:	pop    eax
  418599:	popa   
  41859a:	fild   QWORD PTR [ebx]
  41859c:	pop    ds
  41859d:	mov    edx,0x941e2733
  4185a2:	inc    ebx
  4185a3:	xor    DWORD PTR [eax],eax
	...
  4185b5:	add    BYTE PTR [eax],al
  4185b7:	add    BYTE PTR [edx],al
  4185b9:	mov    dl,0x4b
  4185bb:	cmp    ecx,DWORD PTR [ebp+esi*4-0x4e01d7cb]
  4185c2:	push   ss
  4185c3:	add    al,0xf8
  4185c5:	mov    esp,0xa3cb2f06
  4185ca:	fbld   TBYTE PTR [edx]
  4185cc:	repnz scas eax,DWORD PTR es:[edi]
  4185ce:	or     al,0x30
  4185d0:	fst    QWORD PTR [edx+eax*1+0x3a2b32c]
  4185d7:	sub    ebp,DWORD PTR [edi-0x4ddcfc6c]
  4185dd:	mov    ebp,0x658c300c
  4185e2:	adc    bl,dh
  4185e4:	bound  edx,QWORD PTR [ecx+ebx*8-0x374945da]
  4185eb:	sub    DWORD PTR [edi-0x4ccb205e],ebp
  4185f1:	mov    dh,0xc6
  4185f3:	das    
  4185f4:	scas   eax,DWORD PTR es:[edi]
  4185f5:	xchg   esp,eax
  4185f6:	xlat   BYTE PTR ds:[ebx]
  4185f7:	and    bh,BYTE PTR [edx-0x4a]
  4185fa:	or     al,cl
  4185fc:	mov    bh,0x94
  4185fe:	ja     0x4185c8
  418600:	mov    ecx,0x8fa179a1
  418605:	mov    esp,0x9f9f9967
  41860a:	or     BYTE PTR [esi+ebp*4-0x687f8560],al
  418611:	xchg   esp,eax
  418612:	js     0x41859c
  418614:	cwde   
  418615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418616:	or     BYTE PTR [eax-0x77983892],cl
	...
  418630:	outs   dx,BYTE PTR ds:[esi]
  418631:	xchg   esp,eax
  418632:	ds mov ah,0xc3
  418635:	cmp    bl,BYTE PTR fs:[eax]
  418638:	mov    bh,al
  41863a:	arpl   WORD PTR [eax+0x7a],cx
  41863d:	mov    al,0x67
  41863f:	jmp    0x41be3fb5
  418644:	imul   esi,DWORD PTR [esi-0x50951693],0xa2b54666
  41864e:	or     BYTE PTR [ebx+esi*4-0x60],al
  418652:	pusha  
  418653:	inc    esp
  418654:	mov    esi,0xa3177994
  418659:	mov    ecx,0xba902078
  41865e:	imul   ebx,DWORD PTR [edx],0xffffff9f
  418661:	scas   eax,DWORD PTR es:[edi]
  418662:	imul   ecx,DWORD PTR [eax],0x156ba190
  418668:	scas   eax,DWORD PTR es:[edi]
  418669:	mov    ecx,0xa4900463
  41866e:	add    dh,BYTE PTR gs:[ebp-0x45]
  418672:	dec    DWORD PTR gs:[edi+0x79d664af]
  418679:	mov    bl,0x6f
  41867b:	into   
  41867c:	fs ja  0x418687
  41867f:	sbb    BYTE PTR [ecx],bl
  418681:	jbe    0x4186ba
  418683:	sbb    BYTE PTR [eax-0x29ff8445],dl
  418689:	pop    esi
  41868a:	push   ebp
  41868b:	outs   dx,BYTE PTR ds:[esi]
  41868c:	rcl    BYTE PTR [edx+0x62c96560],cl
  418692:	popa   
  418693:	add    BYTE PTR gs:[eax],al
	...
  4186a6:	add    BYTE PTR [eax],al
  4186a8:	in     eax,0x7c
  4186aa:	jns    0x41871f
  4186ac:	adc    DWORD PTR [eax+0x66],edi
  4186af:	add    bh,bh
  4186b1:	outs   dx,DWORD PTR ds:[esi]
  4186b2:	ja     0x418721
  4186b4:	or     al,0x79
  4186b6:	imul   eax,DWORD PTR [eax],0x6e55655a
  4186bc:	add    bh,BYTE PTR [eax+ecx*1+0x74]
  4186c0:	adc    BYTE PTR [edx+0x7c],ah
  4186c3:	imul   ecx,DWORD PTR [ebx],0x3561086e
  4186c9:	arpl   WORD PTR [ebp+eiz*2-0x5b],sp
  4186cd:	arpl   WORD PTR [ebp+0x63],bp
  4186d0:	cmp    eax,0x506c647d
  4186d5:	nop
  4186d6:	js     0x41873d
  4186d8:	inc    esp
  4186d9:	jae    0x418744
  4186db:	add    BYTE PTR [esi+0x7d],dl
  4186de:	addr16 jb 0x4186b1
  4186e1:	ins    BYTE PTR es:[edi],dx
  4186e2:	or     BYTE PTR [ecx],dh
  4186e4:	jne    0x418755
  4186e6:	jp     0x418749
  4186e8:	(bad)  
  4186e9:	jnp    0x4186f3
  4186eb:	ja     0x418689
  4186ed:	fs imul edx,DWORD PTR fs:[ebx+eiz*2+0x75896908],0x757c657e
  4186fa:	jns    0x41872e
  4186fc:	gs js  0x41876c
  4186ff:	arpl   WORD PTR [edx+0x3006964],bx
  418705:	and    BYTE PTR [ebx],bh
  418707:	add    esp,DWORD PTR ss:[eax]
  41870a:	cmc    
  41870b:	ins    BYTE PTR es:[edi],dx
	...
  418720:	push   eax
  418721:	jo     0x418791
  418723:	imul   ebx,DWORD PTR [ebx-0x6e],0x478c616b
  41872a:	and    BYTE PTR [ebp-0x53],dh
  41872d:	inc    esp
  41872e:	or     DWORD PTR [esi-0x67],esp
  418731:	pop    edx
  418732:	and    dh,BYTE PTR [edi+0x7b]
  418735:	loopne 0x418732
  418737:	jmp    FWORD PTR [edx+ebp*8+0x39]
  41873b:	push   0x1fe76b
  418740:	fs sbb al,0x21
  418743:	pop    edi
  418744:	je     0x418762
  418746:	or     DWORD PTR [eax+0x73],esi
  418749:	push   cs
  41874a:	cmp    DWORD PTR [eax],eax
  41874c:	outs   dx,BYTE PTR ds:[esi]
  41874d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41874e:	and    BYTE PTR [ecx+0x5f],dh
  418751:	add    al,0x23
  418753:	mov    WORD PTR gs:[ecx],ds
  418756:	and    eax,0x2519345f
  41875b:	pop    edi
  41875c:	and    al,0x3b
  41875e:	cmp    BYTE PTR [edi+0x3f],dh
  418761:	retf   
  418762:	sub    DWORD PTR [ecx+0x31],esp
  418765:	mov    WORD PTR [ebx+ebp*2],cs
  418768:	sub    eax,0x316830c7
  41876d:	mov    esi,0xbd2d610c
  418772:	sub    DWORD PTR [ebp+ebp*8+0x3b],esp
  418776:	cmp    BYTE PTR [edi-0x10],ah
  418779:	gs sub eax,0x23698c72
  41877f:	(bad)  
  418780:	jmp    0x41b80e
	...
  418795:	add    BYTE PTR [eax],al
  418797:	add    dl,dh
  418799:	xchg   esi,eax
  41879a:	cmp    ah,BYTE PTR [ebx-0x26]
  41879d:	cwde   
  41879e:	cmp    al,BYTE PTR [eax]
  4187a0:	in     eax,dx
  4187a1:	mov    ah,BYTE PTR [eax]
  4187a3:	data16 jmp 0x418729
  4187a6:	or     al,0x72
  4187a8:	lods   eax,DWORD PTR ds:[esi]
  4187a9:	call   0x5f37:0x3bb06324
  4187b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b1:	and    eax,0x94bb6d27
  4187b6:	fbld   TBYTE PTR [edi+ebx*4]
  4187b9:	mov    ebx,0x949e22db
  4187be:	iret   
  4187bf:	es mov ebx,0x8c37dcb6
  4187c5:	mov    dl,0xc0
  4187c7:	aaa    
  4187c8:	ja     0x41877d
  4187ca:	lds    eax,FWORD PTR [ebx]
  4187cc:	ins    DWORD PTR es:[edi],dx
  4187cd:	mov    ch,0xce
  4187cf:	sub    BYTE PTR [ebx-0x51],dh
  4187d2:	fbld   TBYTE PTR [ecx]
  4187d4:	push   ebx
  4187d5:	mov    ebx,0x9463269b
  4187da:	xchg   edx,eax
  4187db:	sub    al,0x6d
  4187dd:	mov    cl,0x84
  4187df:	xor    DWORD PTR [ebx+0x6d2a7494],ebp
  4187e5:	mov    ecx,0xb28c3a84
  4187ea:	cwde   
  4187eb:	aaa    
  4187ec:	das    
  4187ed:	mov    bh,0x84
  4187ef:	add    esp,DWORD PTR [edi+ebp*4]
  4187f2:	jae    0x418823
  4187f4:	and    DWORD PTR [ebx-0x21],esp
  4187f7:	es aaa 
  4187f9:	mov    ebx,0x2745
	...
  41880e:	add    BYTE PTR [eax],al
  418810:	aaa    
  418811:	xchg   esp,eax
  418812:	inc    ebx
  418813:	and    esp,DWORD PTR ds:0x8c235bb5
  418819:	mov    eax,ds:0xb2eb2f40
  41881e:	cmp    ebp,DWORD PTR [ebx+eiz*8]
  418821:	xchg   esp,eax
  418822:	inc    edx
  418823:	sub    eax,0x3340a4e7
  418828:	mov    WORD PTR [eax-0x4c08dce8],?
  41882e:	add    eax,0xa88c28
  418833:	cmp    ebp,eax
  418835:	mov    bl,0x11
  418837:	add    al,0xea
  418839:	mov    bl,0xf1
  41883b:	ss mov bh,0x94
  41883e:	sbb    DWORD PTR ds:0xba08b2b4,ebp
  418844:	ds push 0x8
  418847:	sti    
  418848:	data16 mov ch,0x60
  41884b:	enter  0xb85d,0x8
  41884f:	retf   
  418850:	jae    0x41880d
  418852:	retw   0x6c1e
  418856:	cmp    ch,cl
  418858:	pop    edi
  418859:	mov    bh,0x67
  41885b:	retf   0xb7b7
  41885e:	jns    0x418849
  418860:	lods   al,BYTE PTR ds:[esi]
  418861:	mov    cl,0x65
  418863:	lds    ecx,FWORD PTR [edi-0x47419b46]
  418869:	mov    bh,0x7a
  41886b:	jmp    0x8ea73e0c
  418870:	fwait
  418871:	mov    bh,0x7a
  418873:	jmp    0x418878
	...
  418888:	lods   eax,DWORD PTR ds:[esi]
  418889:	ret    
  41888a:	data16 mov BYTE PTR [ecx+0x6e9308c3],ah
  418891:	scas   eax,DWORD PTR es:[edi]
  418892:	imul   edi,DWORD PTR [edx-0x71],0xffffffc3
  418896:	jns    0x418825
  418898:	jno    0x41885d
  41889a:	jns    0x418821
  41889c:	imul   edx,DWORD PTR [esi+edi*2+0x65a87350],0x6494615b
  4188a7:	inc    esi
  4188a8:	mov    ax,0x3f65
  4188ac:	mov    BYTE PTR [ebx+0x3a],dh
  4188af:	cli    
  4188b0:	shr    BYTE PTR [ecx+0x6578e96b],0x39
  4188b7:	cli    
  4188b8:	xor    DWORD PTR [edx+0x8],0x7ac3bc3a
  4188bf:	sbb    eax,0xe961b7a2
  4188c4:	scas   al,BYTE PTR es:[edi]
  4188c5:	mov    bh,0x65
  4188c7:	sbb    ebp,DWORD PTR [edi-0x5ee9f749]
  4188cd:	mov    dl,0x66
  4188cf:	add    BYTE PTR [eax-0x6b92f796],bl
  4188d5:	ja     0x418942
  4188d7:	imul   ecx,DWORD PTR [eax-0x738d8368],0x2c746d6e
  4188e1:	xchg   edi,eax
  4188e2:	arpl   WORD PTR [esi+0x51],bp
  4188e5:	jo     0x41894d
  4188e7:	gs and eax,0x333728
	...
  4188fd:	add    BYTE PTR [eax],al
  4188ff:	add    BYTE PTR [ecx+edi*2+0x67],al
  418903:	add    dh,dl
  418905:	outs   dx,BYTE PTR ds:[esi]
  418906:	ins    DWORD PTR es:[edi],dx
  418907:	arpl   si,bx
  418909:	jae    0x418971
  41890b:	add    bh,cl
  41890d:	arpl   WORD PTR [esi+0x69],sp
  418910:	xor    ch,BYTE PTR [ecx+0x8]
  418913:	arpl   bp,di
  418915:	push   0x66f5736d
  41891a:	push   ebp
  41891b:	jae    0x418913
  41891d:	cmp    BYTE PTR gs:[edx+0x9],dh
  418921:	xchg   edi,eax
  418922:	push   ebp
  418923:	jne    0x41896b
  418925:	jae    0x418994
  418927:	outs   dx,BYTE PTR ds:[esi]
  418928:	mov    ch,0x69
  41892a:	js     0x41898d
  41892c:	aaa    
  41892d:	jb     0x4189ac
  41892f:	add    BYTE PTR [ebx+eax*4],al
  418932:	popa   
  418933:	imul   eax,DWORD PTR [ebx-0x68],0x6c476561
  41893a:	ins    DWORD PTR es:[edi],dx
  41893b:	outs   dx,BYTE PTR ds:[esi]
  41893c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41893d:	jne    0x4189a2
  41893f:	outs   dx,DWORD PTR ds:[esi]
  418940:	dec    edx
  418941:	ins    BYTE PTR es:[edi],dx
  418942:	imul   eax,DWORD PTR [eax],0x656d6adb
  418948:	shl    DWORD PTR [edi+esi*2+0x0],cl
  41894c:	int    0x6d
  41894e:	js     0x4189b5
  418950:	imul   esp,DWORD PTR gs:[eax+0x61],0xffffff81
  418955:	ins    DWORD PTR es:[edi],dx
  418956:	popa   
  418957:	add    BYTE PTR [ebx-0x738b9991],dl
  41895d:	nop
  41895e:	and    ah,BYTE PTR [ebx+eiz*8+0x2b]
  418962:	sub    eax,0x6d
	...
  418977:	add    BYTE PTR [ebx-0x5491dc7a],bh
  41897d:	sub    esp,DWORD PTR [ecx]
  41897f:	pop    edi
  418980:	mov    esi,0x8c772797
  418985:	push   ds
  418986:	and    BYTE PTR [ebp-0x49],ch
  418989:	push   eax
  41898a:	xor    al,0x0
  41898c:	pop    ebx
  41898d:	mov    bh,cl
  41898f:	xor    al,0x8c
  418991:	push   ebp
  418992:	and    dh,BYTE PTR [ecx-0x57]
  418995:	cmp    esp,DWORD PTR [ecx]
  418997:	add    BYTE PTR [eax-0x20],bh
  41899a:	sub    eax,0x152b8569
  41899f:	addr16 jae 0x4189f6
  4189a2:	and    eax,0x2c2b605f
  4189a7:	add    BYTE PTR [eax+0x3],ah
  4189aa:	cmp    BYTE PTR [esi+0x68],ch
  4189ad:	sbb    BYTE PTR [ebx],bh
  4189af:	add    BYTE PTR [edi-0x5],bl
  4189b2:	and    esi,DWORD PTR [edx+0x65]
  4189b5:	pop    es
  4189b6:	or     DWORD PTR [edx+0x2d],esp
  4189b9:	or     DWORD PTR ds:0x282b3867,edx
  4189bf:	outs   dx,BYTE PTR ds:[esi]
  4189c0:	inc    eax
  4189c1:	adc    BYTE PTR [ebx],bh
  4189c3:	add    BYTE PTR ds:0x3b6825a1,ch
  4189c9:	leave  
  4189ca:	xor    DWORD PTR [eax],eax
  4189cc:	das    
  4189cd:	sar    BYTE PTR [esi],cl
  4189cf:	jbe    0x418a02
  4189d1:	mov    edi,0xd38c6338
  4189d6:	pop    ds
  4189d7:	popa   
  4189d8:	not    eax
  4189da:	xor    DWORD PTR [eax],eax
	...
  4189f0:	cld    
  4189f1:	shl    BYTE PTR [edi],cl
  4189f3:	arpl   si,di
  4189f5:	sub    ebp,DWORD PTR [ebx]
  4189f7:	arpl   dx,sp
  4189f9:	aad    0x29
  4189fb:	imul   esi,ebp,0xffffff94
  4189fe:	sbb    eax,0x6b0eb04
  418a03:	xor    ch,bh
  418a05:	fwait
  418a06:	push   cs
  418a07:	das    
  418a08:	jae    0x41899e
  418a0a:	shl    BYTE PTR [edx],1
  418a0c:	jle    0x4189b7
  418a0e:	mov    dl,0x1e
  418a10:	mov    WORD PTR [edx-0x5950cbe8],gs
  418a16:	fbld   TBYTE PTR [eax]
  418a18:	scas   eax,DWORD PTR es:[edi]
  418a19:	mov    dl,0xc
  418a1b:	xor    eax,0x2cdfa5b3
  418a20:	mov    dl,0xab
  418a22:	into   
  418a23:	sub    esp,DWORD PTR [eax-0x50cf2f6c]
  418a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a2a:	fstp   TBYTE PTR [edx]
  418a2c:	mov    ebx,0x6f35c294
  418a31:	mov    bl,0xbb
  418a33:	sub    al,BYTE PTR [edx+0x6121dfb7]
  418a39:	mov    cl,0xc1
  418a3b:	and    bl,BYTE PTR [esi-0x6c]
  418a3e:	sbb    BYTE PTR [edi],0x6b
  418a41:	mov    eax,0xa68c3480
  418a46:	mov    gs,WORD PTR [edi]
  418a48:	imul   ebp,DWORD PTR [edi-0x4fc2fc78],0xffffff80
  418a4f:	cmp    ch,BYTE PTR [edi]
  418a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a52:	fbstp  TBYTE PTR [eax]
	...
  418a68:	xor    esp,DWORD PTR [ebp-0x6bd8d77d]
  418a6e:	outs   dx,DWORD PTR ds:[esi]
  418a6f:	xor    eax,0x1f52ab4b
  418a74:	mov    WORD PTR [esi-0x49ddda99],ds
  418a7a:	dec    ebp
  418a7b:	daa    
  418a7c:	mov    WORD PTR [ebp-0x4600d8c0],fs
  418a82:	pop    ebx
  418a83:	add    al,0xf7
  418a85:	lods   eax,DWORD PTR ds:[esi]
  418a86:	pop    edx
  418a87:	pop    ds
  418a88:	mov    WORD PTR [eax-0x4f5bb7f8],?
  418a8e:	cmp    dl,BYTE PTR [bx+si+0x7ab9]
  418a93:	or     al,0x83
  418a95:	scas   al,BYTE PTR es:[edi]
  418a96:	or     BYTE PTR ds:0x1d7ca57b,dl
  418a9c:	jae    0x418a43
  418a9e:	jl     0x418a89
  418aa0:	jb     0x418a61
  418aa2:	jle    0x418ab0
  418aa4:	jp     0x418a5d
  418aa6:	imul   edx,DWORD PTR [edx],0xc66b190
  418aac:	fs mov cl,0x7e
  418aaf:	add    al,0x90
  418ab1:	mov    eax,0xb876df67
  418ab6:	or     ah,cl
  418ab8:	push   esi
  418ab9:	mov    al,0x65
  418abb:	fbstp  TBYTE PTR [edx-0x6c]
  418abe:	imul   eax,ecx,0xd169a2ba
  418ac4:	(bad)  
  418ac5:	mov    dh,0x7a
  418ac7:	rcr    BYTE PTR [edx+0xe96cae],1
	...
  418add:	add    BYTE PTR [eax],al
  418adf:	add    BYTE PTR [ecx+esi*4-0x4c741694],ch
  418ae6:	jns    0x418a85
  418ae8:	mov    dh,0xae
  418aea:	outs   dx,DWORD PTR ds:[esi]
  418aeb:	jmp    0x8ca83c95
  418af0:	(bad)  
  418af1:	stos   DWORD PTR es:[edi],eax
  418af2:	pop    edi
  418af3:	mov    al,BYTE PTR [ecx+0x6d9679b1]
  418af9:	test   al,0x8
  418afb:	mov    ebx,0xbb3a65c1
  418b00:	mov    ecx,0x7174671f
  418b05:	mov    dl,0x64
  418b07:	dec    esp
  418b08:	pop    edi
  418b09:	xchg   esp,eax
  418b0a:	aaa    
  418b0b:	sbb    BYTE PTR [ecx-0x66e7c892],ah
  418b11:	outs   dx,BYTE PTR ds:[esi]
  418b12:	or     BYTE PTR [edx-0x4d],cl
  418b15:	mov    ch,0x67
  418b17:	add    dh,dl
  418b19:	ja     0x418b7f
  418b1b:	popa   
  418b1c:	gs ins DWORD PTR es:[edi],dx
  418b1e:	arpl   WORD PTR [edx-0x3f],si
  418b21:	jns    0x418b89
  418b23:	xor    ah,BYTE PTR [esi-0x6d]
  418b26:	ins    DWORD PTR es:[edi],dx
  418b27:	ins    BYTE PTR es:[edi],dx
  418b28:	jp     0x418b98
  418b2a:	imul   esp,DWORD PTR [edi-0x76],0x8a660874
  418b31:	ja     0x418baf
  418b33:	bound  edx,QWORD PTR [esp+ebp*2+0x77353164]
  418b3a:	arpl   WORD PTR [esi-0x64],si
  418b3d:	jbe    0x418baa
  418b3f:	add    BYTE PTR [ebx+0x687c79],cl
	...
  418b55:	add    BYTE PTR [eax],al
  418b57:	add    BYTE PTR [esi+esi*2+0x6c386508],dl
  418b5e:	push   ebp
  418b5f:	outs   dx,BYTE PTR ds:[esi]
  418b60:	inc    eax
  418b61:	je     0x418bc7
  418b63:	add    BYTE PTR [esi],dh
  418b65:	jb     0x418bca
  418b67:	outs   dx,DWORD PTR ds:[esi]
  418b68:	xlat   BYTE PTR ds:[ebx]
  418b69:	pop    edi
  418b6a:	or     BYTE PTR [esi+0x40],ah
  418b6d:	jb     0x418bce
  418b6f:	outs   dx,DWORD PTR ds:[esi]
  418b70:	rol    DWORD PTR [eax+0x6bc47308],cl
  418b76:	popa   
  418b77:	jns    0x418b6e
  418b79:	imul   edx,DWORD PTR [ebp+0x78],0x2
  418b7d:	je     0x418be3
  418b7f:	ins    BYTE PTR es:[edi],dx
  418b80:	in     eax,0x6c
  418b82:	push   ebp
  418b83:	jae    0x418b8f
  418b85:	jns    0x418b8f
  418b87:	push   0x4a
  418b89:	imul   esp,DWORD PTR [esi+0x0],0x4
  418b8d:	push   0x73f6773a
  418b92:	cmp    al,0x72
  418b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b95:	je     0x418bec
  418b97:	bound  ebx,QWORD PTR [ebx+edx*4]
  418b9a:	jp     0x418c01
  418b9c:	push   ecx
  418b9d:	sub    DWORD PTR [edi],esi
  418b9f:	xor    esp,DWORD PTR [ebp-0x739e9b8c]
  418ba5:	retf   
  418ba6:	and    BYTE PTR [edi-0x74],bl
  418ba9:	mov    ebx,0xcaf2673a
  418bae:	daa    
  418baf:	add    ch,bh
  418bb1:	data16 daa 
  418bb3:	jb     0x418bad
  418bb5:	sub    ebp,DWORD PTR [edx]
  418bb7:	push   0x63395ff1
	...
  418bd0:	in     eax,dx
  418bd1:	sub    edi,eax
  418bd3:	xor    ah,BYTE PTR [ecx-0x130007b8]
  418bd9:	xchg   ebp,eax
  418bda:	adc    eax,0x93cb863
  418bdf:	push   0x611519ad
  418be4:	stos   DWORD PTR es:[edi],eax
  418be5:	sbb    DWORD PTR [eax],ebp
  418be7:	add    BYTE PTR [eax-0x4e8bcb70],ch
  418bed:	sbb    DWORD PTR [ecx],ecx
  418bef:	jno    0x418b9e
  418bf1:	cmp    eax,0x7c8c6428
  418bf6:	sti    
  418bf7:	xor    DWORD PTR [esi+0x7a],ebx
  418bfa:	stc    
  418bfb:	push   DWORD PTR [ebx+0x4c]
  418bfe:	sub    eax,0x1f2b736c
  418c03:	pop    edi
  418c04:	jg     0x418be1
  418c06:	daa    
  418c07:	jb     0x418b95
  418c09:	dec    edi
  418c0a:	sub    al,0x6e
  418c0c:	jne    0x418c66
  418c0e:	sub    eax,0x222b696c
  418c13:	addr16 pusha 
  418c15:	pop    es
  418c16:	sub    BYTE PTR [esi-0x74],ch
  418c19:	or     ch,BYTE PTR [ecx+esi*2]
  418c1c:	aas    
  418c1d:	adc    al,0x28
  418c1f:	add    BYTE PTR [edi],bh
  418c21:	lahf   
  418c22:	sub    BYTE PTR [eax+ebp*1+0xc],ch
  418c26:	or     DWORD PTR [eax+0x3e],esi
  418c29:	or     al,0x34
  418c2b:	arpl   WORD PTR [esi],bx
  418c2d:	sub    esp,DWORD PTR [ecx]
  418c2f:	ins    DWORD PTR es:[edi],dx
  418c30:	sbb    BYTE PTR [ebx+eax*2+0x25],dl
	...
  418c47:	add    BYTE PTR [ecx],dh
  418c49:	xchg   esp,eax
  418c4a:	pop    esi
  418c4b:	sub    esp,DWORD PTR [edx]
  418c4d:	mov    eax,0x94fd2d4e
  418c52:	xor    al,0x2f
  418c54:	std    
  418c55:	test   al,0x43
  418c57:	sub    ebp,edi
  418c59:	xchg   esp,eax
  418c5a:	dec    esi
  418c5b:	and    edi,eax
  418c5d:	mov    bh,0x32
  418c5f:	add    al,0xee
  418c61:	stos   DWORD PTR es:[edi],eax
  418c62:	xor    ebp,DWORD PTR [eax]
  418c64:	jmp    0xdd60a01c
  418c69:	xchg   esp,eax
  418c6a:	push   cs
  418c6b:	sub    al,0xee
  418c6d:	mov    eax,0xb58c2613
  418c72:	or     eax,0x1ca9b62c
  418c77:	add    al,0x6b
  418c79:	bound  esi,QWORD PTR [edx-0x49998111]
  418c7f:	sti    
  418c80:	bound  esp,QWORD PTR [edi+ebx*8+0x3]
  418c84:	scas   eax,DWORD PTR es:[edi]
  418c85:	test   al,0xea
  418c87:	xor    DWORD PTR [edx-0x5dce3957],esp
  418c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c8e:	aam    0x3
  418c90:	je     0x418c3a
  418c92:	(bad)  [ebx]
  418c94:	(bad)  
  418c95:	ins    DWORD PTR es:[edi],dx
  418c96:	push   ds
  418c97:	xor    ebp,DWORD PTR [edx+0x6f3004b7]
  418c9d:	mov    cl,0xc8
  418c9f:	and    eax,0x22bdad7a
  418ca4:	pop    eax
  418ca5:	stos   DWORD PTR es:[edi],eax
  418ca6:	sahf   
  418ca7:	and    eax,0xe586b1aa
	...
  418cc0:	pop    esi
  418cc1:	test   eax,0xa2391dce
  418cc6:	pushf  
  418cc7:	es jno 0x418c70
  418cca:	cwde   
  418ccb:	push   ds
  418ccc:	inc    ecx
  418ccd:	test   al,0x86
  418ccf:	xor    ebp,DWORD PTR [ebx]
  418cd1:	mov    cl,0x8
  418cd3:	(bad)  
  418cd4:	pop    edi
  418cd5:	lods   al,BYTE PTR ds:[esi]
  418cd6:	js     0x418cc1
  418cd8:	ja     0x418c82
  418cda:	jl     0x418d35
  418cdc:	xchg   esi,eax
  418cdd:	outs   dx,DWORD PTR ds:[esi]
  418cde:	and    eax,0x23b1aa58
  418ce3:	pop    ebp
  418ce4:	stos   DWORD PTR es:[edi],eax
  418ce5:	mov    ch,0x5f
  418ce7:	aas    
  418ce8:	stos   BYTE PTR es:[edi],al
  418ce9:	test   eax,0xb3bc487e
  418cee:	gs dec edi
  418cf0:	push   0xffffffb5
  418cf2:	gs inc esp
  418cf4:	jno    0x418ca8
  418cf6:	cmp    esi,DWORD PTR gs:[ebx-0x58e0da51]
  418cfd:	mov    bh,0x7d
  418cff:	adc    eax,0xa5fa4a9
  418d04:	xor    ch,BYTE PTR [eax+eiz*2+0x60948819]
  418d0b:	std    
  418d0c:	imul   esp,DWORD PTR [edx+esi*1+0x7da128ce],0xfffffffe
  418d14:	xor    DWORD PTR [ecx-0x488dff9c],ebp
  418d1a:	jl     0x418ce7
  418d1c:	ins    BYTE PTR es:[edi],dx
  418d1d:	push   0x66
  418d1f:	les    esp,FWORD PTR [ebx+0x69]
  418d22:	dec    ebp
  418d23:	sbb    DWORD PTR [eax],eax
	...
  418d35:	add    BYTE PTR [eax],al
  418d37:	add    BYTE PTR [esi+0x6a],dl
  418d3a:	imul   edx,ecx,0xffffffa2
  418d3d:	xchg   esp,eax
  418d3e:	pusha  
  418d3f:	mov    ebp,0xe32a4ab
  418d44:	jmp    0xf2000ae9
  418d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d4a:	jge    0x418d12
  418d4c:	jmp    0x676f:0xae9b6bb0
  418d53:	xchg   cl,ch
  418d55:	mov    bh,0x6b
  418d57:	(bad)  
  418d58:	mov    esi,0x50d45d6a
  418d5d:	pusha  
  418d5e:	inc    esi
  418d5f:	add    bl,ah
  418d61:	jp     0x418dd3
  418d63:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418d65:	outs   dx,DWORD PTR ds:[esi]
  418d66:	jl     0x418ddc
  418d68:	and    eax,0xfa2f241d
  418d6d:	enter  0x2e5b,0x49
  418d71:	imul   ebp,DWORD PTR [ecx+ebp*2+0x43],0xd072636e
  418d79:	jno    0x418df7
  418d7b:	imul   edx,esi,0xe2632671
  418d81:	jne    0x418da6
  418d83:	dec    ebx
  418d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d85:	shl    DWORD PTR [ecx+0x2e],cl
  418d88:	fsubr  DWORD PTR [eax+0x69]
  418d8b:	add    ch,cl
  418d8d:	pop    esp
  418d8e:	jl     0x418e00
  418d90:	outs   dx,DWORD PTR ds:[esi]
  418d91:	ss and al,0x69
  418d94:	mov    dh,BYTE PTR [ecx+ebp*2+0x73]
  418d98:	mov    WORD PTR [ecx+0x79],?
  418d9b:	outs   dx,BYTE PTR ds:[esi]
	...
  418db0:	mov    WORD PTR [esi+0x69],ds
  418db3:	jb     0x418deb
  418db5:	jo     0x418e1b
  418db7:	mov    BYTE PTR fs:[ebx+0x7a],dh
  418dbb:	imul   esp,DWORD PTR [esi],0x18706363
  418dc1:	ins    BYTE PTR es:[edi],dx
  418dc2:	data16 je 0x418e0d
  418dc5:	jo     0x418e2b
  418dc7:	je     0x418e0b
  418dc9:	xor    eax,0xc2926c68
  418dce:	xor    eax,0x6a34e562
  418dd3:	js     0x418d9d
  418dd5:	xchg   esi,eax
  418dd6:	pusha  
  418dd7:	je     0x418e12
  418dd9:	xor    ch,BYTE PTR [bx]
  418ddc:	xchg   edx,eax
  418ddd:	pop    esi
  418dde:	ins    DWORD PTR es:[edi],dx
  418ddf:	jp     0x418da9
  418de1:	popa   
  418de2:	data16 gs stc 
  418de5:	xor    al,0x6d
  418de7:	jne    0x418dab
  418de9:	daa    
  418dea:	jnp    0x418e46
  418dec:	mov    ebx,gs
  418dee:	sti    
  418def:	dec    edi
  418df0:	js     0x418dcd
  418df2:	pop    ds
  418df3:	js     0x418e26
  418df5:	sub    eax,0xe4595709
  418dfa:	pop    eax
  418dfb:	push   ebp
  418dfc:	push   eax
  418dfd:	jmp    0x418e32
  418dff:	dec    esp
  418e00:	dec    ecx
  418e01:	fld    QWORD PTR [ebx+0x53]
  418e04:	inc    ebp
  418e05:	pop    ebp
  418e06:	xor    eax,0x48644a44
  418e0b:	inc    ebx
  418e0c:	mov    esp,0xcf474f64
  418e11:	pop    ebp
  418e12:	inc    ebx
  418e13:	push   eax
	...
  418e28:	loopne 0x418e92
  418e2a:	inc    eax
  418e2b:	xor    ch,dl
  418e2d:	xor    BYTE PTR [ebx],0x2f
  418e30:	mov    edx,0x8c00091b
  418e35:	sub    ecx,DWORD PTR [ecx]
  418e37:	add    cl,BYTE PTR [eax+eiz*2+0x2cb94449]
  418e3e:	or     al,0x0
  418e40:	mov    WORD PTR [ebx],gs
  418e42:	or     DWORD PTR [eax],eax
  418e44:	mov    WORD PTR [ebx],gs
  418e46:	or     DWORD PTR [ecx-0x35],edx
  418e49:	imul   edx,DWORD PTR [eax+0x55],0x5c3f7dcd
  418e50:	fst    DWORD PTR [ebp+ebp*1+0x2a1eb372]
  418e57:	data16 mov al,ds:0xa267524f
  418e5d:	dec    edi
  418e5e:	sub    dh,BYTE PTR [ebp+0x7f]
  418e61:	fisttp WORD PTR [ebp+0x73]
  418e64:	jle    0x418ea3
  418e66:	and    BYTE PTR [esi-0x80],ch
  418e69:	stc    
  418e6a:	pop    ds
  418e6b:	jb     0x418eec
  418e6d:	inc    esp
  418e6e:	sub    ch,BYTE PTR [esi+0x48]
  418e71:	clc    
  418e72:	es addr16 jb 0x418e54
  418e76:	cmp    al,0x5f
  418e78:	push   0x3f039b94
  418e7d:	stos   BYTE PTR es:[edi],al
  418e7e:	cwde   
  418e7f:	and    DWORD PTR ds:0x301f80a0,edi
  418e85:	lds    ebx,FWORD PTR [ebx-0x7955cccb]
  418e8b:	add    eax,DWORD PTR [eax]
	...
  418e9d:	add    BYTE PTR [eax],al
  418e9f:	add    BYTE PTR [eax-0x55],cl
  418ea2:	jb     0x418ed7
  418ea4:	cmp    BYTE PTR [ebx-0x58bcbe88],dh
  418eaa:	mov    WORD PTR [ebx],es
  418eac:	cmp    BYTE PTR [edi+ebx*8-0x206b73fd],dl
  418eb3:	add    ecx,DWORD PTR [esp+edx*4-0x4ffbd8f3]
  418eba:	fist   WORD PTR [ecx+ebp*8-0x4e]
  418ebe:	xor    edi,DWORD PTR [ecx]
  418ec0:	shl    DWORD PTR [esi-0x543eafb4],cl
  418ec6:	dec    ebp
  418ec7:	push   esi
  418ec8:	mov    ds:0xdc20dfc6,eax
  418ecd:	scas   eax,DWORD PTR es:[edi]
  418ece:	sbb    eax,0xdf195304
  418ed3:	xor    DWORD PTR [ebp-0x50ddee51],0xffffffa8
  418eda:	shl    ch,cl
  418edc:	imul   esi,DWORD PTR [eax-0x3e73dfe5],0xafd1551b
  418ee6:	repz inc edx
  418ee8:	lods   eax,DWORD PTR ds:[esi]
  418ee9:	mov    al,ds:0xd5af3a08
  418eee:	fisub  WORD PTR [ecx]
  418ef0:	popf   
  418ef1:	test   eax,0xaf5d26c3
  418ef6:	shl    BYTE PTR [ebx+ebp*2],cl
  418ef9:	test   eax,0x94703ab5
  418efe:	(bad)  
  418eff:	xor    eax,0x34ccb561
	...
  418f18:	pop    ebp
  418f19:	retf   
  418f1a:	or     ch,cl
  418f1c:	cmp    esp,DWORD PTR [edi-0x5c5f3ba7]
  418f22:	pop    edi
  418f23:	xchg   esi,eax
  418f24:	lods   eax,DWORD PTR ds:[esi]
  418f25:	shr    DWORD PTR [ecx+ebp*8-0x71],1
  418f29:	stos   BYTE PTR es:[edi],al
  418f2a:	imul   ebx,DWORD PTR [ebp-0x25a05b92],0xffffffc1
  418f31:	data16 ins BYTE PTR es:[edi],dx
  418f33:	xchg   ebp,eax
  418f34:	xchg   ebx,eax
  418f35:	xchg   esp,eax
  418f36:	inc    esi
  418f37:	test   BYTE PTR [ebx+0x59],ah
  418f3a:	js     0x418ebc
  418f3c:	dec    ecx
  418f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f3e:	outs   dx,BYTE PTR ds:[esi]
  418f3f:	xchg   DWORD PTR [edx-0x5a],esi
  418f42:	dec    esi
  418f43:	pop    ebx
  418f44:	imul   esi,DWORD PTR [ebp-0x5f4cd0f8],0x5b
  418f4b:	pop    edx
  418f4c:	stos   DWORD PTR es:[edi],eax
  418f4d:	mov    ds:0xabc33f4b,al
  418f52:	or     cl,ch
  418f54:	lods   al,BYTE PTR ds:[esi]
  418f55:	test   al,0x6b
  418f57:	cli    
  418f58:	popa   
  418f59:	push   0x6c
  418f5b:	inc    ebp
  418f5c:	lods   al,BYTE PTR ds:[esi]
  418f5d:	xchg   esp,eax
  418f5e:	pop    ecx
  418f5f:	xor    eax,0xc78c9a5
  418f64:	scas   al,BYTE PTR es:[edi]
  418f65:	lds    edi,FWORD PTR [esi+ecx*1-0x7e]
  418f69:	mov    bh,0x6d
  418f6b:	or     al,0x88
  418f6d:	xchg   esp,eax
  418f6e:	addr16 add eax,0x1078b776
  418f74:	cmp    DWORD PTR [esi+0x26],esp
  418f77:	add    eax,0x2808a86c
	...
  418f90:	ins    BYTE PTR es:[edi],dx
  418f91:	test   al,0x65
  418f93:	or     ch,BYTE PTR [edi-0x60]
  418f96:	imul   ebp,DWORD PTR [eax-0x30c04f93],0xffffffa6
  418f9d:	mov    al,ds:0xafa3c85f
  418fa2:	jb     0x418f68
  418fa4:	pusha  
  418fa5:	scas   eax,DWORD PTR es:[edi]
  418fa6:	ins    BYTE PTR es:[edi],dx
  418fa7:	add    ch,ah
  418fa9:	shl    BYTE PTR [eax+0x65],1
  418fac:	(bad)  
  418fad:	js     0x41900b
  418faf:	outs   dx,DWORD PTR ds:[esi]
  418fb0:	into   
  418fb1:	outs   dx,BYTE PTR ds:[esi]
  418fb2:	dec    bp
  418fb4:	shl    BYTE PTR [esi+0x6a],1
  418fb7:	mul    DWORD PTR gs:[eax+0x60]
  418fbb:	imul   esp,DWORD PTR ds:0x10724e94,0x1169576f
  418fc5:	xchg   esp,eax
  418fc6:	inc    edi
  418fc7:	jb     0x418fc9
  418fc9:	jo     0x419014
  418fcb:	outs   dx,BYTE PTR ds:[esi]
  418fcc:	and    BYTE PTR [esi+0x69],dh
  418fcf:	jb     0x418fe5
  418fd1:	pusha  
  418fd2:	imul   eax,DWORD PTR [ecx-0x5b],0x41657ad0
  418fd9:	into   
  418fda:	jp     0x419041
  418fdc:	rcl    BYTE PTR [eax+0x60dc7247],1
  418fe2:	jl     0x41902b
  418fe4:	rcr    BYTE PTR [ecx+ebx*2+0x73],1
  418fe8:	shl    BYTE PTR [edx+0x3f],0x65
  418fec:	int3   
  418fed:	nop
  418fee:	inc    edi
  418fef:	jb     0x418f8d
  418ff1:	pusha  
  418ff2:	jl     0x419039
	...
  419008:	popf   
  419009:	pusha  
  41900a:	arpl   WORD PTR [edx+0x71],si
  41900d:	pop    ebx
  41900e:	imul   edi,DWORD PTR [ecx+0x35],0xa5797ad2
  419015:	pop    esp
  419016:	dec    esp
  419017:	gs xchg esi,eax
  419019:	pop    esp
  41901a:	jp     0x41908b
  41901c:	mov    WORD PTR [ebx+0x69],ds
  41901f:	jns    0x419056
  419021:	sar    BYTE PTR [edx+0x79],cl
  419024:	and    eax,0x19655a5f
  419029:	ins    BYTE PTR es:[edi],dx
  41902a:	push   ebp
  41902b:	jae    0x41906d
  41902d:	shl    BYTE PTR [ebx+0x6e],cl
  419030:	loope  0x41909d
  419032:	jo     0x4190a8
  419034:	mov    WORD PTR ds:0x50826357,gs
  41903a:	aaa    
  41903b:	je     0x419095
  41903d:	ds pop edx
  41903f:	arpl   WORD PTR [eax+0x4f],di
  419042:	or     DWORD PTR [ebp+0x5c],ecx
  419045:	dec    eax
  419046:	adc    edx,DWORD PTR [eax+0x5e]
  419049:	(bad)  
  41904a:	sub    DWORD PTR [ebx+0x5f],esp
  41904d:	cli    
  41904e:	pop    esp
  41904f:	ins    DWORD PTR es:[edi],dx
  419050:	aaa    
  419051:	adc    BYTE PTR [ebx],dl
  419053:	add    BYTE PTR [ebp+0x10],dl
  419056:	cmp    DWORD PTR [ebx+0x3e],esp
  419059:	cli    
  41905a:	adc    eax,0x20992d6e
  41905f:	dec    esp
  419060:	cmp    ecx,DWORD PTR [esi]
  419062:	arpl   WORD PTR cs:[eax],bp
  419065:	out    dx,al
  419066:	adc    dl,BYTE PTR [ebx+0x1f]
  419069:	adc    BYTE PTR [edi],dh
	...
  41907f:	add    BYTE PTR [ebx-0x38],cl
  419082:	xor    BYTE PTR [ebx+edi*8-0x3e],dl
  419086:	pop    ds
  419087:	outs   dx,BYTE PTR ds:[esi]
  419088:	aad    0xcd
  41908a:	cs ins DWORD PTR es:[edi],dx
  41908c:	(bad)  
  41908d:	pop    eax
  41908e:	sub    esi,DWORD PTR [ebp+eiz*8-0x42]
  419092:	push   ss
  419093:	add    bh,cl
  419095:	(bad)  
  419096:	push   ss
  419097:	jbe    0x419082
  419099:	pop    ecx
  41909a:	xor    BYTE PTR [ecx-0x1b],dl
  41909d:	iret   
  41909e:	push   eax
  41909f:	ins    DWORD PTR es:[edi],dx
  4190a0:	mov    edi,0xba673a77
  4190a5:	mov    ds,WORD PTR [ecx+0x67]
  4190a8:	test   al,0x6c
  4190aa:	or     al,0x4c
  4190ac:	stos   DWORD PTR es:[edi],eax
  4190ad:	mov    ss,WORD PTR ds:0x201ad96e
  4190b3:	jb     0x419082
  4190b5:	sub    esi,DWORD PTR ds:0x2f92b36d
  4190bb:	jo     0x419079
  4190bd:	sbb    DWORD PTR [esi+esi*2],edx
  4190c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190c1:	xchg   esp,eax
  4190c2:	fld    TBYTE PTR [eax]
  4190c4:	jno    0x419075
  4190c6:	mov    ebp,0xc49f7024
  4190cb:	inc    esp
  4190cc:	mov    ebx,ss
  4190ce:	retf   
  4190cf:	sbb    DWORD PTR [edi-0x5f],edi
  4190d2:	mov    bl,0x57
  4190d4:	jns    0x41907f
  4190d6:	int3   
  4190d7:	sbb    eax,0x35c8a23c
  4190dc:	jae    0x419086
  4190de:	int3   
  4190df:	outs   dx,DWORD PTR es:[esi]
  4190e1:	mov    eax,ds:0x3df
	...
  4190f6:	add    BYTE PTR [eax],al
  4190f8:	sub    eax,0x3833a8a2
  4190fd:	popa   
  4190fe:	rcr    ebp,1
  419100:	das    
  419101:	test   al,0x73
  419103:	add    ecx,DWORD PTR [ebp-0x5e]
  419106:	mov    BYTE PTR [ebx],dh
  419108:	and    BYTE PTR [edi-0x5ae1cc7b],bh
  41910e:	jae    0x419138
  419110:	sub    eax,0x1824aba0
  419115:	mov    bl,0xdf
  419117:	inc    eax
  419118:	out    dx,eax
  419119:	mov    ds:0xaffc3d5b,al
  41911e:	dec    ebp
  41911f:	push   ecx
  419120:	add    esp,DWORD PTR [edx-0x3e18d8a5]
  419126:	xor    ebx,DWORD PTR ds:0x420afde
  41912c:	int    0xaf
  41912e:	xor    DWORD PTR [eax],edi
  419130:	iret   
  419131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419132:	cmp    al,0x1f
  419134:	int    0xaf
  419136:	adc    DWORD PTR [eax],edi
  419138:	mov    bl,0xae
  41913a:	sbb    BYTE PTR [ecx],ah
  41913c:	jecxz  0x4190de
  41913e:	add    al,0x31
  419140:	shl    DWORD PTR [esi-0x5d5ec7ce],cl
  419146:	add    al,0x4
  419148:	int    0xaf
  41914a:	icebp  
  41914b:	aaa    
  41914c:	int    0xa8
  41914e:	or     BYTE PTR [esi],al
  419150:	pop    ebp
  419151:	mov    cl,0x59
  419153:	cmc    
  419154:	jo     0x4190f8
  419156:	imul   ebp,ecx,0x4c
  419159:	mov    ds:0xd96f,al
	...
  41916e:	add    BYTE PTR [eax],al
  419170:	mov    ebx,0xc2d86955
  419175:	lods   eax,DWORD PTR ds:[esi]
  419176:	jp     0x41913c
  419178:	dec    esp
  419179:	mov    cl,0x7a
  41917b:	mov    ebp,0xca5fae86
  419180:	scas   al,BYTE PTR es:[edi]
  419181:	mov    al,ds:0xad9d996b
  419186:	jle    0x419150
  419188:	fwait
  419189:	mov    cl,0x41
  41918b:	mov    WORD PTR [esi-0x6c],?
  41918e:	or     BYTE PTR [esp+edi*2-0x6472d953],cl
  419195:	test   al,0x8
  419197:	pushf  
  419198:	jl     0x419147
  41919a:	dec    ebp
  41919b:	mov    WORD PTR [ebx-0x2d],fs
  41919e:	mov    WORD PTR gs:[edi-0x59],ds
  4191a2:	data16 mov WORD PTR [ecx-0x60],?
  4191a6:	pop    eax
  4191a7:	mov    BYTE PTR [ebx-0x54],bl
  4191aa:	inc    edi
  4191ab:	jmp    0x55bb163f
  4191b0:	mov    eax,ds:0x5a4a6b86
  4191b5:	js     0x41921b
  4191b7:	cmp    eax,0x3d596488
  4191bc:	mov    DWORD PTR [esi+0x779e2a6b],eax
  4191c2:	addr16 cmp eax,0x3a665bb3
  4191c8:	xchg   esp,eax
  4191c9:	jae    0x419231
  4191cb:	or     dh,BYTE PTR [ebx-0x6c]
  4191ce:	or     cl,ch
  4191d0:	(bad)  
  4191d1:	xchg   esp,eax
  4191d2:	or     cl,ch
	...
  4191e8:	(bad)  
  4191e9:	xchg   esp,eax
  4191ea:	or     cl,ch
  4191ec:	(bad)  
  4191ed:	xchg   esp,eax
  4191ee:	or     BYTE PTR [eax],al
  4191f0:	xor    eax,0x35000898
  4191f5:	cwde   
  4191f6:	or     BYTE PTR [eax],al
  4191f8:	and    eax,0x25000898
  4191fd:	cwde   
  4191fe:	or     BYTE PTR [eax],al
  419200:	cmc    
  419201:	xchg   edi,eax
  419202:	or     BYTE PTR [eax],al
  419204:	cmc    
  419205:	xchg   edi,eax
  419206:	or     BYTE PTR [eax],al
  419208:	in     eax,0x97
  41920a:	or     BYTE PTR [eax],al
  41920c:	in     eax,0x97
  41920e:	or     BYTE PTR [eax],al
  419210:	cmc    
  419211:	xchg   edi,eax
  419212:	or     BYTE PTR [eax],al
  419214:	cmc    
  419215:	xchg   edi,eax
  419216:	or     BYTE PTR [eax],al
  419218:	in     eax,0x97
  41921a:	or     BYTE PTR [eax],al
  41921c:	in     eax,0x97
  41921e:	or     BYTE PTR [eax],al
  419220:	mov    ch,0x97
  419222:	or     BYTE PTR [eax],al
  419224:	mov    ch,0x97
  419226:	or     BYTE PTR [eax],al
  419228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419229:	xchg   edi,eax
  41922a:	or     BYTE PTR [eax],al
  41922c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41922d:	xchg   edi,eax
  41922e:	or     BYTE PTR [eax],al
  419230:	mov    ch,0x97
  419232:	or     BYTE PTR [eax],al
  419234:	mov    ch,0x97
  419236:	or     BYTE PTR [eax],al
  419238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419239:	xchg   edi,eax
  41923a:	or     BYTE PTR [eax],al
  41923c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41923d:	xchg   edi,eax
  41923e:	or     BYTE PTR [eax],al
  419240:	jne    0x4191d9
  419242:	or     BYTE PTR [eax],al
  419244:	jne    0x4191dd
  419246:	or     BYTE PTR [eax],al
  419248:	gs xchg edi,eax
  41924a:	or     BYTE PTR [eax],al
	...
  419260:	gs xchg edi,eax
  419262:	or     BYTE PTR [eax],al
  419264:	jne    0x4191fd
  419266:	or     BYTE PTR [eax],al
  419268:	jne    0x419201
  41926a:	or     BYTE PTR [eax],al
  41926c:	xchg   esi,eax
  41926d:	mov    al,0x69
  41926f:	ins    BYTE PTR es:[edi],dx
  419270:	xchg   ecx,eax
  419271:	or     esi,DWORD PTR [edi]
  419273:	cs cdq 
  419275:	lods   al,BYTE PTR ds:[esi]
  419276:	add    BYTE PTR fs:[esi-0x739ab430],al
  41927d:	mov    cl,0x4a
  41927f:	ins    DWORD PTR es:[edi],dx
  419280:	mov    al,ds:0xbc722799
  419285:	pushf  
  419286:	cmp    BYTE PTR [eax-0x33],ch
  419289:	std    
  41928a:	or     BYTE PTR [eax],al
  41928c:	mov    ebp,?
  41928e:	or     BYTE PTR [edx-0x62f34340],cl
  419294:	pop    eax
  419295:	cmp    al,0x9
  419297:	lods   eax,DWORD PTR ds:[esi]
  419298:	push   eax
  419299:	cmp    al,0x9
  41929b:	ret    
  41929c:	dec    eax
  41929d:	cmp    al,0x9
  41929f:	rol    DWORD PTR [eax+0x3c],1
  4192a2:	or     ecx,esp
  4192a4:	pop    eax
  4192a5:	cmp    al,0x9
  4192a7:	icebp  
  4192a8:	push   eax
  4192a9:	cmp    al,0x9
  4192ab:	or     BYTE PTR [ecx+0x3c],cl
  4192ae:	or     DWORD PTR ds:0x31093c41,ebx
  4192b4:	pop    ecx
  4192b5:	cmp    al,0x9
  4192b7:	dec    esp
  4192b8:	push   ecx
  4192b9:	cmp    al,0x9
  4192bb:	jo     0x419306
  4192bd:	cmp    al,0x9
  4192bf:	mov    eax,DWORD PTR [ecx+0x3c]
  4192c2:	or     DWORD PTR [eax],eax
	...
  4192d8:	mov    ebp,?
  4192da:	or     bh,bh
  4192dc:	mov    ds:0x8c0388fc,eax
  4192e1:	std    
  4192e2:	or     BYTE PTR [ebx+0x15],cl
  4192e5:	fnsave [ebp*2+0x630f70ef]
  4192ec:	repnz addr16 cmp eax,0x8fb8d00
  4192f3:	adc    BYTE PTR [esi-0x32fff705],0xcb
  4192fa:	cmp    al,0x44
  4192fc:	in     eax,dx
  4192fd:	(bad)  
  4192fe:	sub    eax,DWORD PTR [eax]
  419300:	(bad)  
  419301:	sti    
  419302:	or     BYTE PTR [eax+0x8fb70],al
  419308:	fcom   DWORD PTR [esi+ebx*1-0x407f1cd9]
  41930f:	inc    esp
  419310:	mov    esp,0xb8252384
  419315:	jae    0x4192f6
  419317:	add    al,0x8c
  419319:	xchg   esp,eax
  41931a:	pop    edi
  41931b:	jecxz  0x419340
  41931d:	adc    bl,bh
  41931f:	inc    esi
  419320:	mov    ebx,0x8c210775
  419325:	xchg   ebx,eax
  419326:	fild   WORD PTR [ebx]
  419328:	or     al,0xb4
  41932a:	fild   WORD PTR [ebx]
  41932c:	mov    WORD PTR [ebp-0x3a],ss
  41932f:	sbb    ah,BYTE PTR [ebp+0x7b]
  419332:	les    esi,FWORD PTR [esi]
  419334:	mov    WORD PTR [ebx-0x48f3fc21],ss
  41933a:	fild   WORD PTR [ebx]
	...
  419350:	mov    WORD PTR [eax+ebx*8+0x36],ds
  419354:	pusha  
  419355:	xor    DWORD PTR [ecx-0x206973d4],0xdf980c03
  41935f:	add    ecx,DWORD PTR [edi+ebx*2-0x7eb01c58]
  419366:	xor    BYTE PTR [eax],0x27
  419369:	ja     0x4193e0
  41936b:	das    
  41936c:	sbb    eax,0x8c03e194
  419371:	adc    al,0xc2
  419373:	add    ecx,DWORD PTR [esp+edx*4+0x7f271aa2]
  41937a:	jbe    0x419395
  41937c:	lods   al,BYTE PTR ds:[esi]
  41937d:	push   ebx
  41937e:	dec    edi
  41937f:	xor    al,0xc8
  419381:	jae    0x4193de
  419383:	and    ecx,DWORD PTR [ebx+edx*4-0x46f3fc21]
  41938a:	fild   WORD PTR [ebx]
  41938c:	mov    WORD PTR [edi+0x48],ds
  41938f:	in     al,0xd3
  419391:	jnp    0x4193d5
  419393:	xor    bh,bl
  419395:	xchg   BYTE PTR [eax],cl
  419397:	dec    esp
  419398:	cdq    
  419399:	xchg   esp,eax
  41939a:	or     ch,cl
  41939c:	(bad)  
  41939d:	adc    al,0x26
  41939f:	jmp    0xe8b2833
  4193a4:	mov    ds:0x2807657d,eax
  4193a9:	push   ebp
  4193aa:	or     bh,BYTE PTR gs:[ebx+0x7d]
  4193ae:	imul   edx,DWORD PTR [edi],0x5c
  4193b1:	or     DWORD PTR [eax],0xffffffeb
	...
  4193c8:	(bad)  
  4193c9:	xchg   esp,eax
  4193ca:	mov    dh,al
  4193cc:	(bad)  
  4193cd:	xchg   esp,eax
  4193ce:	or     BYTE PTR [edx],ch
  4193d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d1:	jge    0x419436
  4193d3:	(bad)  
  4193d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d5:	mov    ah,0x47
  4193d7:	lds    esp,FWORD PTR [edx-0x473f9987]
  4193dd:	mov    BYTE PTR [edx-0x38],bh
  4193e0:	mov    ebx,0xefcc7e79
  4193e5:	fs gs into 
  4193e8:	add    DWORD PTR [ebx-0x6b7017f8],0xffffff88
  4193ef:	stc    
  4193f0:	(bad)  
  4193f1:	xchg   esp,eax
  4193f2:	or     BYTE PTR [eax-0x70a0825d],ch
  4193f8:	xchg   esi,eax
  4193f9:	cmp    DWORD PTR [ebx+ebx*4+0x6e],0xffffff88
  4193fe:	pop    edi
  4193ff:	xchg   edi,eax
  419400:	mov    dh,BYTE PTR [esp+ebx*2+0x79808496]
  419407:	jmp    0x694a289a
  41940c:	xchg   ebx,eax
  41940d:	adc    ch,dh
  41940f:	jmp    0x5abc07f3
  419414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419415:	jle    0x41947e
  419417:	dec    ebp
  419418:	nop
  419419:	gs gs dec edi
  41941c:	mov    esp,0x8b5b6789
  419421:	jo     0x419466
  419423:	add    BYTE PTR [ecx+edi*4-0x52699086],bh
  41942a:	outs   dx,BYTE PTR ds:[esi]
  41942b:	je     0x41942d
	...
  41943d:	add    BYTE PTR [eax],al
  41943f:	add    BYTE PTR [ecx+0x65],bh
  419442:	ins    DWORD PTR es:[edi],dx
  419443:	outs   dx,BYTE PTR ds:[esi]
  419444:	shr    DWORD PTR [ebp+0x59c9737b],1
  41944a:	jns    0x4194be
  41944c:	xchg   edi,eax
  41944d:	scas   eax,DWORD PTR es:[edi]
  41944e:	data16 je 0x4194c4
  419451:	scas   eax,DWORD PTR es:[edi]
  419452:	jp     0x4194c7
  419454:	mov    WORD PTR [ebp-0x3f8fa39a],gs
  41945a:	js     0x4194c8
  41945c:	mov    al,dh
  41945e:	imul   esi,DWORD PTR [edx+0x79],0x9656069
  419465:	test   al,0x28
  419467:	inc    esi
  419468:	fisub  DWORD PTR [edi-0x37289a94]
  41946e:	or     BYTE PTR [ebp-0x23],ah
  419471:	ret    
  419472:	outs   dx,DWORD PTR fs:[esi]
  419474:	(bad)  
  419475:	scas   al,BYTE PTR es:[edi]
  419476:	jp     0x4194a6
  419478:	sar    BYTE PTR [ebx-0x1909ff97],1
  41947e:	and    eax,0x25e6d02d
  419483:	cmp    BYTE PTR [ebp-0x4afff76d],dh
  419489:	push   0xc4084969
  41948e:	imul   esi,DWORD PTR [edx+0x16],0x16166ad
  419495:	scas   eax,DWORD PTR es:[edi]
  419496:	pop    eax
  419497:	jb     0x419495
  419499:	lds    ebp,FWORD PTR [ebp+0x6c]
  41949c:	adc    BYTE PTR [ebp-0x5109ff97],dh
  4194a2:	pop    esp
  4194a3:	arpl   WORD PTR [eax],ax
	...
  4194b5:	add    BYTE PTR [eax],al
  4194b7:	add    BYTE PTR [edi],dl
  4194b9:	arpl   WORD PTR [edx+0x69],di
  4194bc:	jecxz  0x41946f
  4194be:	fs shl BYTE PTR gs:[ebp+0x608c5308],cl
  4194c6:	dec    ecx
  4194c7:	push   0x6315cfed
  4194cc:	shl    BYTE PTR [esi+0x38],cl
  4194cf:	addr16 repnz push esp
  4194d2:	pop    esp
  4194d3:	jb     0x4194ba
  4194d5:	iret   
  4194d6:	adc    ebp,DWORD PTR [ecx+esi*4+0x56]
  4194da:	daa    
  4194db:	add    bh,bl
  4194dd:	mov    al,ds:0x9cb17249
  4194e2:	cmp    BYTE PTR [ebx-0x28],ah
  4194e5:	xchg   esi,eax
  4194e6:	adc    DWORD PTR [ebx-0x46],esp
  4194e9:	int    0x3a
  4194eb:	addr16 call 0xc98:0xb36310a4
  4194f3:	push   ecx
  4194f4:	test   eax,0x77612bbb
  4194f9:	or     BYTE PTR [ecx],bh
  4194fb:	push   eax
  4194fc:	jle    0x4194e2
  4194fe:	and    ah,BYTE PTR [edi+0x68]
  419501:	fcom   DWORD PTR ds:0x284a8c63
  419507:	push   edx
  419508:	jno    0x4194f4
  41950a:	and    al,0x6d
  41950c:	pop    esi
  41950d:	loopne 0x419567
  41950f:	jb     0x419576
  419511:	inc    edi
  419512:	adc    al,0x6c
  419514:	imul   ebx,esi,0xd85f0027
  41951a:	xor    ebp,DWORD PTR [esi+0x0]
	...
  41952d:	add    BYTE PTR [eax],al
  41952f:	add    BYTE PTR [edi],ch
  419531:	sub    ebp,DWORD PTR [eax]
  419533:	pop    edi
  419534:	aas    
  419535:	sbb    BYTE PTR [ebx+esi*2+0x23],bl
  419539:	xor    DWORD PTR [eax+edx*2],ebp
  41953c:	push   ds
  41953d:	adc    al,0x23
  41953f:	xor    BYTE PTR [bx+si],ah
  419542:	push   ss
  419543:	arpl   WORD PTR [edx+ebp*1-0x75e0c0d8],cx
  41954a:	adc    al,0x65
  41954c:	cli    
  41954d:	sub    esi,DWORD PTR [edi]
  41954f:	addr16 icebp 
  419551:	xchg   esp,eax
  419552:	inc    eax
  419553:	xor    al,BYTE PTR [ebx]
  419555:	imul   eax,DWORD PTR [esi+0x1b],0x322f7eef
  41955c:	xrelease xchg BYTE PTR [eax+0x18],cl
  419560:	out    dx,eax
  419561:	jne    0x4195a7
  419563:	add    al,0x8c
  419565:	fs es push ebx
  419568:	mov    eax,0x6c3304b4
  41956d:	pop    esp
  41956e:	sbb    edx,DWORD PTR [eax-0x24]
  419571:	mov    ebp,0x9f6bd5d0
  419576:	stc    
  419577:	cmp    esp,DWORD PTR [ecx-0x7415ec7f]
  41957d:	mov    bh,0x12
  41957f:	stc    
  419580:	xchg   ebp,eax
  419581:	push   ebx
  419582:	add    ah,BYTE PTR [ebx]
  419584:	scas   eax,DWORD PTR es:[edi]
  419585:	test   bl,bh
  419587:	jmp    0xda104fff
  41958c:	xchg   esi,eax
  41958d:	call   0x2fcf:0x776d2320
	...
  4195a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195a9:	push   edi
  4195aa:	lds    esp,FWORD PTR [edx]
  4195ac:	popa   
  4195ad:	js     0x419577
  4195af:	adc    eax,0x1cffca71
  4195b4:	push   0x732fdd77
  4195b9:	mov    al,cl
  4195bb:	xlat   BYTE PTR ds:[ebx]
  4195bc:	jae    0x419578
  4195be:	cli    
  4195bf:	xor    al,0x87
  4195c1:	(bad)  
  4195c2:	aam    0xf9
  4195c4:	dec    esp
  4195c5:	jge    0x419564
  4195c7:	das    
  4195c8:	das    
  4195c9:	jle    0x419566
  4195cb:	fadd   DWORD PTR [edi+0x77]
  4195ce:	lea    ebx,[esi]
  4195d0:	and    BYTE PTR [ecx+ebx*8-0x1d],bh
  4195d4:	outs   dx,BYTE PTR ds:[esi]
  4195d5:	xor    BYTE PTR [eax+edi*8-0x7b],0x51
  4195da:	xchg   BYTE PTR ds:0x8a087722,dl
  4195e0:	mov    ebx,0x757f6575
  4195e5:	lods   eax,DWORD PTR ds:[esi]
  4195e6:	imul   edx,DWORD PTR [ebp-0x5f],0x75ec6b83
  4195ed:	push   esp
  4195ee:	gs inc edi
  4195f0:	pushf  
  4195f1:	jno    0x419659
  4195f3:	push   ebp
  4195f4:	cmp    esp,DWORD PTR [ecx+0x6f]
  4195f7:	cmp    DWORD PTR [ebx-0x36],edi
  4195fa:	sub    BYTE PTR [eax-0x68],cl
  4195fd:	test   BYTE PTR [eax+eax*2+0x6d],ah
  419601:	ins    DWORD PTR es:[edi],dx
  419602:	jl     0x419644
  419604:	cdq    
  419605:	jle    0x41962c
  419607:	push   ss
  419608:	ins    DWORD PTR es:[edi],dx
  419609:	mov    BYTE PTR [ebx+0x15],ch
	...
  419620:	pop    ebx
  419621:	test   BYTE PTR [ebx+ebx*1-0x75],bh
  419625:	ins    DWORD PTR es:[edi],dx
  419626:	arpl   sp,bx
  419628:	and    eax,0x5c176554
  41962d:	jno    0x419695
  41962f:	cmc    
  419630:	cmp    dl,BYTE PTR [edx+0x66]
  419633:	or     ah,BYTE PTR [ecx-0x5f00a088]
  419639:	retf   0xcb28
  41963c:	xchg   esi,eax
  41963d:	jle    0x4196a6
  41963f:	(bad)  [esi-0x6343fd67]
  419645:	jno    0x4196c1
  419647:	cld    
  419648:	dec    esi
  419649:	ja     0x4196b6
  41964b:	xlat   BYTE PTR ds:[ebx]
  41964c:	stos   DWORD PTR es:[edi],eax
  41964d:	retf   0xac28
  419650:	js     0x4195dc
  419652:	pop    edi
  419653:	lds    esp,FWORD PTR [ebx-0x260ada93]
  419659:	mov    esp,0x7f6cd128
  41965e:	arpl   WORD PTR [ecx-0x74a07792],bx
  419664:	xor    DWORD PTR [ecx+0x31],0xffffffc9
  419668:	pop    edx
  419669:	arpl   WORD PTR [edi],di
  41966b:	add    al,ch
  41966d:	lock cmp DWORD PTR [esi],ebp
  419670:	aad    0xfb
  419672:	adc    al,0x57
  419674:	or     al,0xa2
  419676:	ins    BYTE PTR es:[edi],dx
  419677:	outs   dx,DWORD PTR ds:[esi]
  419678:	cli    
  419679:	les    ebp,FWORD PTR [eax]
  41967b:	cmp    DWORD PTR [ebp+0x600a01ef],ebp
  419681:	push   cs
  419682:	cmc    
  419683:	inc    edx
	...
  419698:	shl    BYTE PTR [edx-0x3b5c9a84],cl
  41969e:	and    DWORD PTR [eax+ecx*8-0x5e],ecx
  4196a2:	imul   esi,DWORD PTR [ebp+edi*4-0x2],0xfffffff4
  4196a7:	dec    ebx
  4196a8:	shl    BYTE PTR [ebp-0x5e338bab],cl
  4196ae:	data16 cmp ah,BYTE PTR ds:0x455449c9
  4196b5:	jmp    0x41972e
  4196b7:	and    BYTE PTR [ebp+0x64],ch
  4196ba:	pop    esp
  4196bb:	push   eax
  4196bc:	loop   0x4196c4
  4196be:	and    esi,DWORD PTR [eax]
  4196c0:	and    BYTE PTR [esi],cl
  4196c2:	dec    ebp
  4196c3:	outs   dx,DWORD PTR ds:[esi]
  4196c4:	push   ss
  4196c5:	mov    esp,0xc4d82032
  4196ca:	add    DWORD PTR [edx],ecx
  4196cc:	mov    ah,0xb5
  4196ce:	addr16 gs aad 0xbb
  4196d2:	xor    ah,BYTE PTR [eax]
  4196d4:	lahf   
  4196d5:	loope  0x4196f5
  4196d7:	or     eax,0x636756ef
  4196dc:	enter  0x7cc7,0x2d
  4196e0:	sub    BYTE PTR [edx-0x51369099],ah
  4196e6:	addr16 mov di,0x6df7
  4196eb:	fs enter 0x7ca1,0x69
  4196f0:	sbb    DWORD PTR [edi-0x320dfdc],edi
  4196f6:	gs cmp eax,0x9fded8c
	...
  419710:	dec    edi
  419711:	mov    bl,BYTE PTR [ebx]
  419713:	outs   dx,BYTE PTR ds:[esi]
  419714:	xor    DWORD PTR [esi],ebx
  419716:	and    eax,0xdf1b2367
  41971b:	pop    ds
  41971c:	out    dx,eax
  41971d:	adc    DWORD PTR [ecx+esi*2],ebx
  419720:	jmp    0xff94860d
  419725:	pop    eax
  419726:	push   ds
  419727:	sub    ecx,ebp
  419729:	push   edx
  41972a:	pop    ds
  41972b:	outs   dx,BYTE PTR ds:[esi]
  41972c:	loopne 0x4196d5
  41972e:	in     al,dx
  41972f:	dec    edx
  419730:	repz and ebp,DWORD PTR [si-0x18]
  419735:	pop    esp
  419736:	stc    
  419737:	xor    esp,DWORD PTR [edx-0x50d816f3]
  41973d:	push   edx
  41973e:	aaa    
  41973f:	jo     0x4196ee
  419741:	shl    DWORD PTR [ebx],0x62
  419744:	test   al,0x98
  419746:	aad    0x1f
  419748:	ror    esi,0x43
  41974b:	inc    ebx
  41974c:	ins    BYTE PTR es:[edi],dx
  41974d:	call   0xdda8c748
  419752:	xor    DWORD PTR [edi-0x56],esp
  419755:	cdq    
  419756:	cmp    DWORD PTR [ebp-0x61],esi
  419759:	fst    st(3)
  41975b:	aaa    
  41975c:	mov    ch,0xf0
  41975e:	add    cl,BYTE PTR [ebx]
  419760:	xchg   esi,eax
  419761:	std    
  419762:	idiv   bh
  419764:	test   eax,0xa65c0ca3
  419769:	fwait
  41976a:	out    0xff,al
  41976c:	mov    ch,0x93
  41976e:	out    0xff,al
  419770:	dec    ebx
  419771:	inc    edx
  419772:	inc    esp
  419773:	inc    esp
	...
  419788:	mov    esi,ss
  41978a:	fild   QWORD PTR [edi]
  41978c:	xchg   esp,eax
  41978d:	xor    eax,0x97c22f8
  419792:	xor    DWORD PTR [ebx],ebp
  419794:	imul   ecx,DWORD PTR ds:0x946957dd,0x6c7dd3c4
  41979e:	int3   
  41979f:	rcr    DWORD PTR [ebp+0x6c],cl
  4197a2:	int3   
  4197a3:	call   0xe8f95e1b
  4197a8:	imul   eax,esi,0xffffffa7
  4197ab:	call   0xe8e95e13
  4197b0:	mov    ebx,0xb3e897c6
  4197b5:	(bad)  
  4197b6:	xchg   edi,eax
  4197b7:	call   0x21895e67
  4197bc:	mov    WORD PTR [ecx+0x4c],ss
  4197bf:	sbb    dl,bl
  4197c1:	jae    0x419816
  4197c3:	sub    eax,0x1d326fda
  4197c8:	fld    QWORD PTR [eax+0x7acb3144]
  4197ce:	dec    ebp
  4197cf:	xor    ecx,DWORD PTR [ebp+edi*2+0x6fb21644]
  4197d6:	xor    edx,edi
  4197d8:	jge    0x419794
  4197da:	add    esi,DWORD PTR [eax]
  4197dc:	mov    al,ds:0xc1173894
  4197e1:	jns    0x4197f9
  4197e3:	ficomp DWORD PTR [edi+0x64]
  4197e6:	adc    DWORD PTR [ebx],esi
  4197e8:	lods   eax,DWORD PTR ds:[esi]
  4197e9:	outs   dx,DWORD PTR ds:[esi]
  4197ea:	repnz push ss
	...
  419800:	mov    WORD PTR [ebp+0x6],fs
  419803:	sub    al,BYTE PTR [eax+0x6f160081]
  419809:	push   0x687e252d
  41980e:	scas   eax,DWORD PTR es:[edi]
  41980f:	das    
  419810:	jg     0x419883
  419812:	fdiv   DWORD PTR [ecx]
  419814:	pop    ebp
  419815:	push   0x683c37a5
  41981a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41981b:	xor    bl,BYTE PTR [ebp-0x80]
  41981e:	mov    dl,0x3
  419820:	cmp    eax,0x4117cd79
  419825:	jae    0x41982f
  419827:	mov    ebx,0xc84e6874
  41982c:	mov    eax,ds:0x63b954c6
  419831:	test   DWORD PTR [ebp-0x70],ebp
  419834:	pop    ebp
  419835:	adc    DWORD PTR [edi+ebp*4+0x5b],0x64
  41983a:	push   esp
  41983b:	mov    eax,ds:0x7a7c835e
  419840:	(bad)  
  419841:	arpl   WORD PTR [ebp-0x79],sp
  419844:	mov    ds:0xb47b677f,eax
  419849:	push   0xb4a1884e
  41984e:	inc    ebx
  41984f:	dec    eax
  419850:	mov    esi,0x82446d69
  419855:	push   0x6f7b4558
  41985a:	pop    edi
  41985b:	aas    
  41985c:	sub    DWORD PTR [eax+0x4e],0x4068981d
  419863:	dec    esi
	...
  419878:	mov    eax,ds:0x78e97980
  41987d:	ja     0x4198ed
  41987f:	xor    eax,0xc7a6995
  419884:	int3   
  419885:	push   edx
  419886:	addr16 sbb ecx,esp
  419889:	arpl   WORD PTR [edi+0x1f],sp
  41988c:	imul   esi,DWORD PTR [eax+0x4c],0x0
  419890:	outs   dx,DWORD PTR ds:[esi]
  419891:	js     0x4198f8
  419893:	push   cs
  419894:	shl    BYTE PTR [ecx+0x79],0xf5
  419898:	mov    esp,0x56156f86
  41989d:	pusha  
  41989e:	pop    eax
  41989f:	and    DWORD PTR [ebp-0x4716837d],edi
  4198a5:	ja     0x419915
  4198a7:	aad    0x84
  4198a9:	imul   edi,DWORD PTR [edx-0x34],0xdb6752a3
  4198b0:	shr    DWORD PTR [ecx+ebx*2+0x0],0xc4
  4198b5:	stos   BYTE PTR es:[edi],al
  4198b6:	imul   esp,DWORD PTR [ecx+esi*8-0x43],0xbbca6c55
  4198be:	inc    eax
  4198bf:	imul   esi,esi,0xec7263a0
  4198c5:	enter  0x544e,0xe5
  4198c9:	pop    esp
  4198ca:	arpl   WORD PTR [ebx+0x1],si
  4198cd:	xchg   ebp,eax
  4198ce:	push   edi
  4198cf:	outs   dx,DWORD PTR ds:[esi]
  4198d0:	adc    esp,DWORD PTR [ecx-0x4de89e85]
  4198d6:	push   esp
  4198d7:	inc    esi
  4198d8:	adc    al,0xa2
  4198da:	sub    BYTE PTR [ebp+0x0],cl
	...
  4198ed:	add    BYTE PTR [eax],al
  4198ef:	add    BYTE PTR [esi+eax*8],dl
  4198f2:	push   ebp
  4198f3:	adc    BYTE PTR [bp+si+0x5354],ah
  4198f8:	les    ebp,FWORD PTR [edx-0x444e9b97]
  4198fe:	push   ebp
  4198ff:	ins    BYTE PTR es:[edi],dx
  419900:	retf   0x40bd
  419903:	imul   esi,DWORD PTR [esi-0x338d9c54],0xa5544e54
  41990d:	pop    eax
  41990e:	arpl   WORD PTR [ebx-0x7f],si
  419911:	nop
  419912:	pop    eax
  419913:	popa   
  419914:	jbe    0x4198b7
  419916:	jnp    0x419987
  419918:	xchg   edi,eax
  419919:	mov    esp,0xa19a4808
  41991e:	jl     0x41996e
  419920:	xchg   esp,eax
  419921:	mov    bh,0x69
  419923:	add    BYTE PTR [eax-0x5f],ah
  419926:	imul   esi,DWORD PTR [edx+0x25],0x906e6d58
  41992d:	nop
  41992e:	jnp    0x419993
  419930:	std    
  419931:	push   esp
  419932:	outs   dx,BYTE PTR ds:[esi]
  419933:	je     0x41992a
  419935:	add    eax,0x93dc6e6e
  41993a:	push   esp
  41993b:	inc    edi
  41993c:	sbb    eax,0x8c4c575b
  419941:	cmp    BYTE PTR [ebx],bh
  419943:	add    BYTE PTR [ebp+0x47],al
  419946:	sbb    al,0x74
  419948:	ins    DWORD PTR es:[edi],dx
  419949:	loope  0x41996f
  41994b:	inc    esp
  41994c:	xor    eax,0x3846094b
  419951:	dec    ebp
  419952:	inc    edx
  419953:	outs   dx,BYTE PTR ds:[esi]
	...
  419968:	and    eax,0x296b2a27
  41996d:	std    
  41996e:	cmp    ebp,DWORD PTR [ebp+0x32]
  419971:	and    DWORD PTR [eax],edx
  419973:	pop    edi
  419974:	push   ds
  419975:	sbb    BYTE PTR ds:0x1c142445,dh
  41997b:	ins    BYTE PTR es:[edi],dx
  41997c:	sub    DWORD PTR [ebx+0x17f55535],ecx
  419982:	sub    eax,0xe98afb6d
  419987:	inc    eax
  419988:	jmp    0x419912
  41998a:	es pop edi
  41998c:	loop   0x4199e7
  41998e:	pop    ds
  41998f:	jb     0x41991d
  419991:	retf   0x6625
  419994:	fsub   DWORD PTR [esi+0x2b]
  419997:	jb     0x41998a
  419999:	mov    ecx,0xcae5684d
  41999e:	cmp    BYTE PTR [ebx-0x42],ah
  4199a1:	test   eax,0x5cb86d30
  4199a6:	cmp    BYTE PTR [eax],ah
  4199a8:	iret   
  4199a9:	(bad)  
  4199aa:	aaa    
  4199ab:	imul   ebp,DWORD PTR [ebp-0x619cdf61],0xfffffffd
  4199b2:	xor    al,0x47
  4199b4:	pushf  
  4199b5:	stos   BYTE PTR es:[edi],al
  4199b6:	sbb    eax,0x249aa067
  4199bb:	add    BYTE PTR [edi+0x7f6310a4],bh
  4199c1:	test   eax,0xd555c0c
  4199c6:	sbb    dh,BYTE PTR [ebp+0x65]
  4199c9:	add    DWORD PTR [edx],ebp
  4199cb:	push   0x0
	...
  4199e0:	push   eax
  4199e1:	xchg   esp,eax
  4199e2:	mov    dh,0x32
  4199e4:	dec    ecx
  4199e5:	dec    esi
  4199e6:	mov    ebx,0xd6688c33
  4199eb:	sub    al,0x6a
  4199ed:	mov    dh,0xc8
  4199ef:	sub    eax,0x2d1d946b
  4199f4:	cmp    bh,BYTE PTR [ebp-0x21]
  4199f7:	ss pop ebp
  4199f9:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4199fb:	aaa    
  4199fc:	pop    esp
  4199fd:	xchg   esp,eax
  4199fe:	stos   DWORD PTR es:[edi],eax
  4199ff:	dec    esp
  419a00:	pop    esi
  419a01:	xchg   esp,eax
  419a02:	mov    ds:0xb8505248,eax
  419a07:	xor    DWORD PTR [ebx+edx*2+0x4e4f37b4],ecx
  419a0e:	mov    ebx,0xa2658c33
  419a13:	dec    ebx
  419a14:	repz cmp DWORD PTR [ebx+0x2e],0x32df8bfe
  419a1c:	jmp    0xd358158f
  419a21:	add    BYTE PTR [eax+eax*2-0x2f],0x78
  419a26:	inc    esi
  419a27:	and    al,bl
  419a29:	js     0x419a5d
  419a2b:	inc    ebx
  419a2c:	fwait
  419a2d:	fs sub al,0x40
  419a30:	int    0x7f
  419a32:	xor    ebp,DWORD PTR [ecx]
  419a34:	shl    BYTE PTR [eax+0xf],cl
  419a37:	in     al,0x79
  419a39:	mov    ah,0x27
  419a3b:	das    
  419a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a3d:	outs   dx,DWORD PTR ds:[esi]
  419a3e:	add    esi,DWORD PTR ds:0x2f1e60cd
	...
  419a58:	mov    eax,0x8c120072
  419a5d:	popa   
  419a5e:	push   cs
  419a5f:	mov    al,es:0xaf12007d
  419a65:	push   0x72793026
  419a6a:	add    BYTE PTR [eax],dh
  419a6c:	pop    ebp
  419a6d:	push   ecx
  419a6e:	or     BYTE PTR [eax],ch
  419a70:	rcl    BYTE PTR [ecx+0x54],0x2a
  419a74:	xchg   ebp,eax
  419a75:	sub    BYTE PTR [ebx-0x51],0xa3
  419a79:	sub    BYTE PTR fs:[edi],dl
  419a7c:	call   0xb20814d6
  419a81:	jno    0x419afc
  419a83:	fisub  DWORD PTR [eax+0x7bc86677]
  419a89:	push   0x777baa57
  419a8e:	lds    ebp,FWORD PTR gs:[ebp+0x65]
  419a92:	jp     0x419a7d
  419a94:	jle    0x419b0d
  419a96:	outs   dx,BYTE PTR ds:[esi]
  419a97:	popf   
  419a98:	and    BYTE PTR [ebp+0x7a],0x84
  419a9c:	arpl   WORD PTR [edi+0x64],cx
  419a9f:	xchg   BYTE PTR [ebp+0x65],ch
  419aa2:	fs mov edx,0xac58c54e
  419aa8:	retf   
  419aa9:	push   ebx
  419aaa:	jnp    0x419b21
  419aac:	mov    ah,0x4e
  419aae:	pop    esp
  419aaf:	cdq    
  419ab0:	outs   dx,DWORD PTR ds:[esi]
  419ab1:	shr    BYTE PTR [eax],0xa1
  419ab4:	mov    ds:0x9f456b79,al
  419ab9:	push   ebx
  419aba:	pop    esp
  419abb:	dec    esi
	...
  419ad0:	mov    cl,0x78
  419ad2:	push   0x48
  419ad4:	jle    0x419a6a
  419ad6:	pop    ecx
  419ad7:	ds stos BYTE PTR es:[edi],al
  419ad9:	cmp    BYTE PTR [ebp+0x48],0x9e
  419add:	jno    0x419b33
  419adf:	es jl  0x419b59
  419ae2:	push   0x48
  419ae4:	jl     0x419b49
  419ae6:	dec    ecx
  419ae7:	sub    BYTE PTR [eax+0x51],bh
  419aea:	push   esp
  419aeb:	sub    al,BYTE PTR [ebx+0x64276b80]
  419af1:	fs sub dh,bl
  419af4:	das    
  419af5:	push   ebp
  419af6:	jp     0x419af6
  419af8:	imul   esi,DWORD PTR [ecx+0x79],0x63ba0600
  419aff:	outs   dx,BYTE PTR ds:[esi]
  419b00:	xchg   esp,eax
  419b01:	les    edx,FWORD PTR [ecx+edx*2-0x5a]
  419b05:	int3   
  419b06:	arpl   WORD PTR [edi-0xf],bp
  419b09:	mov    dl,0x55
  419b0b:	jb     0x419b02
  419b0d:	ret    
  419b0e:	arpl   WORD PTR [esi-0x47],sp
  419b11:	lahf   
  419b12:	push   ebp
  419b13:	jb     0x419add
  419b15:	les    ecx,FWORD PTR [ebx+0x6c]
  419b18:	adc    dh,BYTE PTR [ebx+0x54266c55]
  419b1e:	xor    eax,0x47c4e850
  419b23:	jne    0x419b1e
  419b25:	lods   eax,DWORD PTR ds:[esi]
  419b26:	dec    esi
  419b27:	push   esp
  419b28:	adc    eax,0xdd203cf1
  419b2d:	mov    bh,0x61
  419b2f:	gs loope 0x419af3
  419b32:	inc    edi
  419b33:	push   esp
	...
  419b48:	adc    bh,BYTE PTR [eax-0x5cfb9d9c]
  419b4e:	or     BYTE PTR [ebx+0x22],dl
  419b51:	mov    edx,0xa614777c
  419b56:	imul   ebx,DWORD PTR [edx+ebp*1-0x4c],0xb4046263
  419b5e:	push   edi
  419b5f:	inc    ebx
  419b60:	mov    ah,0xc8
  419b62:	dec    ecx
  419b63:	pop    esp
  419b64:	mov    dh,0xab
  419b66:	jl     0x419bcd
  419b68:	stos   DWORD PTR es:[edi],eax
  419b69:	mov    esp,0xf87d2058
  419b6e:	inc    esp
  419b6f:	jb     0x419b53
  419b71:	mov    edx,0xaf867369
  419b76:	arpl   WORD PTR [esi-0x3c],bp
  419b79:	les    edx,FWORD PTR [ecx+edx*2+0x66]
  419b7d:	mov    esp,0xb6816f63
  419b82:	push   ebp
  419b83:	jb     0x419bba
  419b85:	les    ecx,FWORD PTR [ebx+0x6c]
  419b88:	mov    WORD PTR [edx-0x415fa0d6],ds
  419b8e:	inc    edi
  419b8f:	aas    
  419b90:	pop    esp
  419b91:	mov    al,0x48
  419b93:	inc    ecx
  419b94:	jns    0x419b9f
  419b96:	cs inc esi
  419b98:	pusha  
  419b99:	popf   
  419b9a:	or     al,0x5c
  419b9c:	dec    ebx
  419b9d:	add    DWORD PTR [edx+eiz*2],esp
  419ba0:	ins    DWORD PTR es:[edi],dx
  419ba1:	jmp    0x3d8edcdd
  419ba6:	dec    esi
  419ba7:	pop    esp
  419ba8:	dec    edi
  419ba9:	loopne 0x419bc7
  419bab:	arpl   WORD PTR [eax],ax
	...
  419bbd:	add    BYTE PTR [eax],al
  419bbf:	add    BYTE PTR [edx+0x49],cl
  419bc2:	cmp    DWORD PTR [eax],esp
  419bc4:	pop    esp
  419bc5:	aas    
  419bc6:	and    al,0x0
  419bc8:	pusha  
  419bc9:	cmp    ah,BYTE PTR ds:0x24cc2e6d
  419bcf:	push   ecx
  419bd0:	dec    edi
  419bd1:	sub    al,0x39
  419bd3:	inc    ebx
  419bd4:	dec    eax
  419bd5:	cs push ds
  419bd7:	je     0x419c02
  419bd9:	cmp    edi,DWORD PTR ds:0x22396c50
  419bdf:	je     0x419c0a
  419be1:	in     eax,dx
  419be2:	xor    al,0x41
  419be4:	add    DWORD PTR [edx+0x1dd8462e],eax
  419bea:	or     DWORD PTR [edi+edi*8+0x18],ebx
  419bee:	jecxz  0x419c53
  419bf0:	in     eax,dx
  419bf1:	mov    DWORD PTR [ecx],ecx
  419bf3:	push   ecx
  419bf4:	sti    
  419bf5:	push   ebx
  419bf6:	sbb    BYTE PTR [ebp-0x13],dh
  419bf9:	pop    edi
  419bfa:	daa    
  419bfb:	pop    esp
  419bfc:	rcr    BYTE PTR [ecx+0x2b],cl
  419bff:	jno    0x419be5
  419c01:	mov    ebx,0xfee85034
  419c06:	or     BYTE PTR [ecx-0x4d],dl
  419c09:	pop    ebx
  419c0a:	sbb    BYTE PTR [ebp-0x53],dh
  419c0d:	mov    edi,0xc1ca5c27
  419c12:	sub    esi,DWORD PTR [ecx-0x4c]
  419c15:	xchg   esp,eax
  419c16:	and    eax,0x3294bc3c
  419c1b:	sub    esi,DWORD PTR [edx-0x61dae978]
  419c21:	jns    0x419c46
  419c23:	inc    edx
	...
  419c38:	js     0x419caf
  419c3a:	repnz sub ecx,DWORD PTR [edx+0x5c]
  419c3e:	(bad)  
  419c41:	xchg   esp,eax
  419c42:	sub    BYTE PTR [edx],ch
  419c44:	jge    0x419bce
  419c46:	add    BYTE PTR [eax],ch
  419c48:	js     0x419cc3
  419c4a:	sar    DWORD PTR [edi],1
  419c4c:	inc    ebx
  419c4d:	mov    bh,dl
  419c4f:	xor    edi,DWORD PTR [ebx]
  419c51:	mov    bh,al
  419c53:	add    ebx,DWORD PTR [ebp+esi*2-0x25]
  419c57:	sub    ecx,DWORD PTR [ebp+ecx*2+0x753816dd]
  419c5e:	ret    
  419c5f:	daa    
  419c60:	ins    BYTE PTR es:[edi],dx
  419c61:	ror    BYTE PTR fs:[edi],0x24
  419c65:	xchg   esp,eax
  419c66:	stos   DWORD PTR es:[edi],eax
  419c67:	and    al,0x20
  419c69:	jne    0x419c10
  419c6b:	sub    dh,BYTE PTR [eax]
  419c6d:	js     0x419bfb
  419c6f:	adc    eax,0x2cb2608c
  419c74:	sbb    BYTE PTR [ecx-0x6e],bh
  419c77:	jmp    0x3b5106b
  419c7c:	loopne 0x419ce1
  419c7e:	jl     0x419cac
  419c80:	in     eax,dx
  419c81:	ins    DWORD PTR es:[edi],dx
  419c82:	int    0x1f
  419c84:	ror    DWORD PTR [eax+0x6bd437df],cl
  419c8a:	push   edx
  419c8b:	adc    cl,dh
  419c8d:	xchg   BYTE PTR [eax-0x16],ch
  419c90:	out    dx,eax
  419c91:	jae    0x419ce6
  419c93:	add    al,0xb0
  419c95:	pop    edx
  419c96:	xor    esp,DWORD PTR ds:0x3c256cbd
	...
  419cb0:	fsub   QWORD PTR [eax-0xe]
  419cb3:	add    ebx,eax
  419cb5:	pop    edx
  419cb6:	or     BYTE PTR [ebp+0x69],al
  419cb9:	and    DWORD PTR [eax+0x27],0x68
  419cbd:	fs push esp
  419cbf:	fisttp QWORD PTR [edi+0x64104e60]
  419cc5:	jne    0x419d19
  419cc7:	add    BYTE PTR [eax+esi*2+0x67],ah
  419ccb:	jmp    0xfda12093
  419cd0:	lods   al,BYTE PTR ds:[esi]
  419cd1:	ins    DWORD PTR es:[edi],dx
  419cd2:	cmpxchg DWORD PTR [bx+0x6b],esi
  419cd7:	sti    
  419cd8:	in     eax,0x89
  419cda:	arpl   bp,di
  419cdc:	(bad)  
  419cdd:	pusha  
  419cde:	jp     0x419cac
  419ce0:	stos   BYTE PTR es:[edi],al
  419ce1:	jne    0x419d49
  419ce3:	aad    0x82
  419ce5:	jne    0x419d61
  419ce7:	fild   QWORD PTR [esi+eax*4+0x6da7ff79]
  419cee:	fs jmp 0xcda1176f
  419cf4:	ins    BYTE PTR es:[edi],dx
  419cf5:	jle    0x419d56
  419cf7:	lds    ebp,FWORD PTR [ebx+0x61]
  419cfa:	es mov cl,0x74
  419cfd:	jo     0x419d07
  419cff:	mov    edx,0x967c7a76
  419d04:	jo     0x419c8c
  419d06:	imul   esi,DWORD PTR [ebp-0x7b9b86b3],0xffffffc9
  419d0d:	jns    0x419d73
  419d0f:	xchg   ebp,eax
  419d10:	test   al,0x94
  419d12:	pop    ecx
  419d13:	mov    es,WORD PTR [eax]
	...
  419d25:	add    BYTE PTR [eax],al
  419d27:	add    BYTE PTR [ebp-0x66778278],ch
  419d2d:	jne    0x419d83
  419d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d30:	mov    eax,0xb7436b70
  419d35:	jo     0x419d9b
  419d37:	dec    eax
  419d38:	jo     0x419d8e
  419d3a:	fs inc eax
  419d3c:	jae    0x419db0
  419d3e:	jl     0x419d29
  419d40:	(bad)  
  419d41:	jb     0x419dbc
  419d43:	add    BYTE PTR [ecx-0x65939b4b],al
  419d49:	push   esp
  419d4a:	ins    DWORD PTR es:[edi],dx
  419d4b:	jb     0x419d72
  419d4d:	dec    ebp
  419d4e:	arpl   WORD PTR [ebx+0x61],si
  419d51:	cwde   
  419d52:	pop    ecx
  419d53:	jae    0x419ce5
  419d55:	stos   BYTE PTR es:[edi],al
  419d56:	or     BYTE PTR [eax-0x7c],dl
  419d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d5a:	ja     0x419d5c
  419d5c:	push   ebp
  419d5d:	stos   DWORD PTR es:[edi],eax
  419d5e:	jp     0x419dd4
  419d60:	cmc    
  419d61:	(bad)  
  419d62:	imul   ebp,DWORD PTR [ebp-0x66],0xb12069a4
  419d69:	lods   eax,DWORD PTR ds:[esi]
  419d6a:	jp     0x419d6c
  419d6c:	xchg   esi,eax
  419d6d:	mov    eax,ds:0xaa90767a
  419d72:	sub    BYTE PTR [esp+ebp*8-0x5c],dl
  419d76:	imul   eax,DWORD PTR [eax],0x767aa216
  419d7c:	shl    BYTE PTR [esi-0x57f5b7da],0x7c
  419d83:	add    BYTE PTR [esi],ah
  419d85:	mov    ds:0xa6d0767a,al
  419d8a:	es push ebp
	...
  419da0:	mul    BYTE PTR [ecx-0x5df9ff86]
  419da6:	jp     0x419e1e
  419da8:	adc    BYTE PTR [edi-0x57fbafda],ah
  419dae:	ja     0x419db0
  419db0:	(bad)  
  419db1:	mov    eax,ds:0xaa10767a
  419db6:	es push eax
  419db8:	sbb    ch,BYTE PTR [edx-0x4ceaff84]
  419dbe:	jl     0x419e28
  419dc0:	gs leave 
  419dc2:	imul   esi,DWORD PTR [edx-0x1d],0xec547a9e
  419dc9:	test   al,0x69
  419dcb:	add    BYTE PTR [ecx-0x738b884d],ch
  419dd1:	lea    edi,[ebx]
  419dd3:	arpl   WORD PTR [esi+0x6c721567],di
  419dd9:	lds    ebx,FWORD PTR [edi]
  419ddb:	jno    0x419d9d
  419ddd:	in     eax,dx
  419dde:	dec    esp
  419ddf:	pop    edi
  419de0:	mov    edi,0xb150ecc1
  419de5:	mov    ebx,0xcd9e631a
  419dea:	and    eax,0xc9bb171
  419def:	dec    esp
  419df0:	lods   eax,DWORD PTR ds:[esi]
  419df1:	call   0x761e:0x985f2018
  419df8:	imul   edi,ebx,0xfa6d4fe8
  419dfe:	sbb    eax,DWORD PTR [eax]
  419e00:	inc    eax
  419e01:	mov    WORD PTR [ebx],ds
  419e03:	je     0x419e05
	...
  419e15:	add    BYTE PTR [eax],al
  419e17:	add    BYTE PTR [edx+ebx*4-0x2fa58deb],ch
  419e1e:	sbb    ah,BYTE PTR [eax]
  419e20:	cmp    al,0xce
  419e22:	sbb    dh,BYTE PTR [esp+ecx*4+0x39]
  419e26:	sub    dh,BYTE PTR [ecx+0x40]
  419e29:	lea    edi,[ebx]
  419e2b:	arpl   WORD PTR [esi],di
  419e2d:	aas    
  419e2e:	push   ss
  419e2f:	jb     0x419e9d
  419e31:	sbb    eax,0xed24742a
  419e36:	dec    esp
  419e37:	pop    edi
  419e38:	pop    ds
  419e39:	dec    ecx
  419e3a:	jmp    0x175cc78f
  419e3f:	arpl   WORD PTR [esi],bx
  419e41:	int    0x24
  419e43:	ja     0x419e61
  419e45:	adc    BYTE PTR [ecx],cl
  419e47:	inc    esi
  419e48:	loopne 0x419e87
  419e4a:	jmp    0x22c18b9c
  419e4f:	gs in  eax,dx
  419e51:	mov    DWORD PTR [eax],esp
  419e53:	jb     0x419de1
  419e55:	das    
  419e56:	and    eax,0x202aac50
  419e5b:	imul   esi,ecx,0xffffff94
  419e5e:	inc    eax
  419e5f:	es lock jns 0x419eb4
  419e63:	add    al,0xea
  419e65:	mov    BYTE PTR [edi+0x28],cl
  419e68:	mov    bl,0x83
  419e6a:	pop    ebx
  419e6b:	out    0xbf,al
  419e6d:	jl     0x419ea2
  419e6f:	add    al,0xd8
  419e71:	push   edx
  419e72:	cmp    al,0x28
  419e74:	mov    al,ds:0x9e343379
  419e79:	outs   dx,DWORD PTR ds:[esi]
  419e7a:	ss push ds
	...
  419e90:	ins    BYTE PTR es:[edi],dx
  419e91:	arpl   WORD PTR [esi],bx
  419e93:	push   ds
  419e94:	mov    al,ds:0xaf120087
  419e99:	xchg   esp,eax
  419e9a:	int    0x1f
  419e9c:	imul   ecx,DWORD PTR [eax-0x7b921a21],0xfffffff2
  419ea3:	add    ebx,DWORD PTR [ebp+0x6f]
  419ea6:	or     eax,0xf1757910
  419eab:	and    BYTE PTR [eax+0x52],cl
  419eae:	(bad)  
  419eb0:	cmp    BYTE PTR [ebx+ecx*8+0x41],ah
  419eb4:	pop    edi
  419eb5:	jo     0x419e7a
  419eb7:	and    BYTE PTR [eax-0x4c],bl
  419eba:	scas   eax,DWORD PTR es:[edi]
  419ebb:	adc    DWORD PTR [ecx],edi
  419ebd:	outs   dx,DWORD PTR ds:[esi]
  419ebe:	int    0xe3
  419ec0:	dec    ecx
  419ec1:	push   0x7547378f
  419ec6:	fsub   DWORD PTR ds:0x1dce638c
  419ecc:	and    BYTE PTR [edi+0x602f11c0],al
  419ed2:	mov    eax,ds:0x8c702810
  419ed7:	(bad)  
  419ed9:	or     BYTE PTR [esi-0x4d4b0dda],0x26
  419ee0:	jmp    0x9377:0xfe247688
  419ee7:	inc    ecx
  419ee8:	push   DWORD PTR [eax+0x8]
  419eeb:	test   DWORD PTR [eax+ecx*4+0x6faa7b58],ebp
  419ef2:	outs   dx,BYTE PTR ds:[esi]
  419ef3:	or     DWORD PTR [eax],eax
	...
  419f05:	add    BYTE PTR [eax],al
  419f07:	add    BYTE PTR [edx-0x30f6a798],bl
  419f0d:	jo     0x419f6e
  419f0f:	dec    esp
  419f10:	jb     0x419e9a
  419f12:	push   esp
  419f13:	sbb    al,0x69
  419f15:	jne    0x419f7d
  419f17:	jmp    0x35b00e9a
  419f1c:	sbb    DWORD PTR [ebp+0x7a],0x4c
  419f20:	fs push edx
  419f22:	pop    eax
  419f23:	daa    
  419f24:	pop    esp
  419f25:	fs push esp
  419f27:	sub    edi,DWORD PTR [ebp+0x70]
  419f2a:	fs add al,0x7c
  419f2d:	mov    ah,0x58
  419f2f:	sbb    esi,DWORD PTR [ebx-0x3e369191]
  419f35:	push   0x84532558
  419f3a:	jl     0x419f4c
  419f3c:	stos   DWORD PTR es:[edi],eax
  419f3d:	outs   dx,BYTE PTR ds:[esi]
  419f3e:	jns    0x419f29
  419f40:	sahf   
  419f41:	outs   dx,DWORD PTR ds:[esi]
  419f42:	outs   dx,BYTE PTR ds:[esi]
  419f43:	cmc    
  419f44:	xchg   edx,eax
  419f45:	pop    ebp
  419f46:	jp     0x419f14
  419f48:	mov    ds:0xabcd7b52,eax
  419f4d:	jno    0x419fcb
  419f4f:	mov    ecx,0xc7656f9d
  419f54:	scas   eax,DWORD PTR es:[edi]
  419f55:	fs gs iret 
  419f58:	mov    eax,DWORD PTR [edi+0x606cbb67]
  419f5e:	dec    edx
  419f5f:	mov    esp,0xb56b7073
  419f64:	pop    edi
  419f65:	and    BYTE PTR [ebp-0x6a],0x79
  419f69:	mov    ah,0x4e
  419f6b:	mov    ch,0x0
	...
  419f7d:	add    BYTE PTR [eax],al
  419f7f:	add    BYTE PTR [edi-0x4c],bl
  419f82:	dec    ecx
  419f83:	test   DWORD PTR [eax-0x446a998f],edi
  419f89:	dec    edi
  419f8a:	js     0x419f8c
  419f8c:	stc    
  419f8d:	mov    al,0x63
  419f8f:	outs   dx,BYTE PTR ds:[esi]
  419f90:	not    BYTE PTR [ecx-0x72e490a9]
  419f96:	jnp    0x419ff9
  419f98:	out    0xb4,eax
  419f9a:	push   esp
  419f9b:	inc    edx
  419f9c:	xchg   ebp,eax
  419f9d:	mov    esi,0x5565505c
  419fa2:	push   ebp
  419fa3:	jae    0x419f8e
  419fa5:	ret    
  419fa6:	imul   esi,DWORD PTR [ebx-0x1a],0x6b6e63a9
  419fad:	test   eax,0xc4256564
  419fb2:	ins    DWORD PTR es:[edi],dx
  419fb3:	je     0x419f8d
  419fb5:	mov    ds:0x9867694c,eax
  419fba:	dec    ebp
  419fbb:	outs   dx,BYTE PTR ds:[esi]
  419fbc:	jbe    0x419f62
  419fbe:	push   ebp
  419fbf:	ins    BYTE PTR es:[edi],dx
  419fc0:	adc    DWORD PTR [ebp+ebp*2+0x72],0x782690e4
  419fc8:	add    BYTE PTR [ebp-0x4a69a3f8],dh
  419fce:	push   ebp
  419fcf:	jb     0x419fca
  419fd1:	mov    esi,0xbef5505c
  419fd6:	push   ebp
  419fd7:	jbe    0x419fbb
  419fd9:	mov    ds:0xa3c8746d,al
  419fde:	es les ecx,FWORD PTR fs:[eax+ecx*1+0x48]
	...
  419ff7:	add    ah,cl
  419ff9:	mov    ds:0x99e76f7c,eax
  419ffe:	es les ecx,FWORD PTR fs:[eax+ecx*1+0x7a9cc961]
  41a007:	(bad)  
  41a008:	into   
  41a009:	imul   BYTE PTR [eax+0x61]
  41a00c:	fst    DWORD PTR [eax-0x4c038a9b]
  41a012:	pop    edi
  41a013:	or     DWORD PTR cs:[edx+0x418c007c],esi
  41a01a:	and    eax,0x2c0ffe73
  41a01f:	inc    esi
  41a020:	loopne 0x41a03f
  41a022:	or     DWORD PTR [ecx-0x1d],edx
  41a025:	adc    eax,DWORD PTR ds:0x167fed75
  41a02b:	pop    esp
  41a02c:	mov    eax,0xeb621780
  41a031:	stos   DWORD PTR es:[edi],eax
  41a032:	cmp    BYTE PTR [eax-0x74],dl
  41a035:	fs cs jno 0x419ff9
  41a039:	dec    esp
  41a03a:	and    BYTE PTR [esp+edi*4+0x4c],ch
  41a03e:	sbb    BYTE PTR [eax-0x74],ch
  41a041:	sahf   
  41a042:	sub    esp,DWORD PTR [esi-0x48]
  41a045:	ret    0x7229
  41a048:	mov    cl,0xa1
  41a04a:	aaa    
  41a04b:	ins    DWORD PTR es:[edi],dx
  41a04c:	cwde   
  41a04d:	dec    esp
  41a04e:	xor    BYTE PTR [esi-0x2e],al
  41a051:	stos   DWORD PTR es:[edi],eax
  41a052:	cmp    BYTE PTR [eax-0x74],dl
  41a055:	scas   al,BYTE PTR es:[edi]
  41a056:	sbb    ah,BYTE PTR [ebx+0x70]
  41a059:	mov    BYTE PTR [esi],ch
  41a05b:	je     0x41a05d
	...
  41a06d:	add    BYTE PTR [eax],al
  41a06f:	add    BYTE PTR [ebp-0x74],dh
  41a072:	and    BYTE PTR [ecx+0x6d],dl
  41a075:	mov    eax,ds:0xff4f0018
  41a07a:	adc    eax,0x18937164
  41a07f:	ins    DWORD PTR es:[di],dx
  41a081:	stc    
  41a082:	inc    edi
  41a083:	push   0x1fce71
  41a088:	aas    
  41a089:	retf   0x7412
  41a08c:	inc    ebx
  41a08d:	int3   
  41a08e:	push   ss
  41a08f:	arpl   WORD PTR [eax+0x3e],sp
  41a092:	sub    al,0x74
  41a094:	sub    eax,0x4a463331
  41a099:	and    DWORD PTR [ecx],edi
  41a09b:	pop    esp
  41a09c:	pop    ebx
  41a09d:	cmp    eax,0x3b336705
  41a0a2:	sbb    BYTE PTR [eax],al
  41a0a4:	cmp    al,0x94
  41a0a6:	adc    BYTE PTR [eax],0x1d
  41a0a9:	add    DWORD PTR [esi-0x4b6b0fef],0x10
  41a0b0:	out    dx,eax
  41a0b1:	xchg   BYTE PTR [ebp-0x208e18de],dl
  41a0b7:	dec    ebx
  41a0b8:	loope  0x41a041
  41a0ba:	jnp    0x41a0fe
  41a0bc:	lock xchg BYTE PTR [edx+0x3],dh
  41a0c0:	mov    esi,0xe0247471
  41a0c5:	jno    0x41a0ea
  41a0c7:	sbb    eax,0x232f94de
  41a0cc:	mov    esi,0xb13bdf80
  41a0d1:	xchg   DWORD PTR [ebx+0x42],ebx
	...
  41a0e8:	fld    TBYTE PTR [ecx+0x44]
  41a0eb:	add    al,0xdc
  41a0ed:	imul   esi,DWORD PTR [ecx],0x18
  41a0f0:	mov    WORD PTR [ecx+0x32],fs
  41a0f3:	sub    DWORD PTR [esi-0x50debf96],ebx
  41a0f9:	xchg   esp,eax
  41a0fa:	das    
  41a0fb:	and    eax,0x231e879d
  41a100:	jle    0x41a172
  41a102:	fistp  QWORD PTR [ebx]
  41a104:	jno    0x41a08d
  41a106:	sbb    ecx,DWORD PTR [eax+0x73]
  41a109:	xchg   BYTE PTR ds:0xdf716725,bh
  41a10f:	ss jns 0x41a184
  41a112:	repz sbb al,BYTE PTR [ebx-0x7a]
  41a116:	or     al,0x30
  41a118:	dec    ebp
  41a119:	imul   eax,ebp,0x29
  41a11c:	outs   dx,DWORD PTR ds:[esi]
  41a11d:	jno    0x41a0c1
  41a11f:	sbb    BYTE PTR [esp+esi*4],bh
  41a122:	mov    dl,0x22
  41a124:	sub    al,BYTE PTR [eax+0x713e24de]
  41a12a:	stos   DWORD PTR es:[edi],eax
  41a12b:	cmp    al,0x22
  41a12d:	or     ah,0x15
  41a130:	cmp    dh,BYTE PTR [ecx+0x8]
  41a133:	mov    ebp,0xbe7a6473
  41a138:	gs jae 0x41a19f
  41a13b:	mov    WORD PTR [edx-0x6c],?
  41a13e:	pop    ecx
  41a13f:	mov    ?,WORD PTR [ebp-0x66778280]
  41a145:	jne    0x41a19b
  41a147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a148:	ret    
  41a149:	fs pop ebp
  41a14b:	mov    BYTE PTR [eax],al
	...
  41a15d:	add    BYTE PTR [eax],al
  41a15f:	add    BYTE PTR [ecx-0x3155ab8b],bl
  41a165:	dec    bx
  41a167:	scas   eax,DWORD PTR es:[edi]
  41a168:	fwait
  41a169:	fs push esp
  41a16b:	call   0x4c88:0x5a6b8078
  41a172:	gs pop edx
  41a174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a175:	xchg   esp,eax
  41a176:	pop    ebx
  41a177:	pop    edx
  41a178:	jne    0x41a100
  41a17a:	or     BYTE PTR [ecx],bh
  41a17c:	outs   dx,DWORD PTR ds:[esi]
  41a17d:	xchg   BYTE PTR [ecx+ebp*8+0x7f],bh
  41a181:	pop    edi
  41a182:	or     BYTE PTR [ecx],bl
  41a184:	test   BYTE PTR [edx+ebx*2-0x17],ch
  41a188:	pop    edx
  41a189:	arpl   WORD PTR [eax-0x17],ax
  41a18c:	jg     0x41a114
  41a18e:	gs (bad) 
  41a191:	push   0x81ee1a6b
  41a196:	arpl   WORD PTR ds:0x354e5888,ax
  41a19c:	shl    BYTE PTR [ebx+ecx*2+0x65689801],0xfb
  41a1a4:	mov    ah,0x86
  41a1a6:	or     BYTE PTR [edx],bl
  41a1a8:	scas   eax,DWORD PTR es:[edi]
  41a1a9:	jb     0x41a227
  41a1ab:	div    BYTE PTR [eax+0x45c56b86]
  41a1b1:	pusha  
  41a1b2:	pop    eax
  41a1b3:	or     DWORD PTR [ebp+0x7c],edx
  41a1b6:	js     0x41a17d
  41a1b8:	outs   dx,BYTE PTR ds:[esi]
  41a1b9:	xchg   BYTE PTR [ebx-0x25],ch
  41a1bc:	imul   edx,DWORD PTR [edx+0x5c],0x0
  41a1c0:	adc    eax,0x7849f6
	...
  41a1d5:	add    BYTE PTR [eax],al
  41a1d7:	add    ch,ah
  41a1d9:	cdq    
  41a1da:	arpl   WORD PTR [edx-0x30],si
  41a1dd:	lahf   
  41a1de:	push   esp
  41a1df:	push   edi
  41a1e0:	ficomp DWORD PTR [edi-0x4f0a8ca1]
  41a1e6:	addr16 gs dec ecx
  41a1e9:	push   esp
  41a1ea:	dec    esi
  41a1eb:	inc    ebx
  41a1ec:	inc    ecx
  41a1ed:	mov    dh,0x63
  41a1ef:	ins    BYTE PTR es:[edi],dx
  41a1f0:	daa    
  41a1f1:	mov    al,0x7a
  41a1f3:	sub    eax,0x38df37
  41a1f8:	aaa    
  41a1f9:	pushf  
  41a1fa:	jl     0x41a270
  41a1fc:	or     dh,BYTE PTR [ebx-0x4a09ff89]
  41a202:	outs   dx,BYTE PTR ds:[esi]
  41a203:	je     0x41a1b7
  41a205:	mov    ch,0x7a
  41a207:	mov    DWORD PTR gs:[esi+0x5c],ecx
  41a20b:	push   eax
  41a20c:	xchg   ebp,eax
  41a20d:	push   ecx
  41a20e:	jo     0x41a280
  41a210:	jns    0x41a1c5
  41a212:	jp     0x41a279
  41a214:	ja     0x41a1da
  41a216:	pop    eax
  41a217:	jb     0x41a1f3
  41a219:	scas   al,BYTE PTR es:[edi]
  41a21a:	ins    DWORD PTR es:[edi],dx
  41a21b:	ins    BYTE PTR es:[edi],dx
  41a21c:	rcr    BYTE PTR [edi-0x603baff8],1
  41a222:	ja     0x41a29b
  41a224:	jp     0x41a1c8
  41a226:	ins    BYTE PTR es:[edi],dx
  41a227:	add    ch,al
  41a229:	mov    ch,0x77
  41a22b:	jae    0x41a1cf
  41a22d:	mov    bl,0x7a
  41a22f:	ror    DWORD PTR fs:[ebp-0x431a9a88],0x63
  41a237:	jae    0x41a21a
  41a239:	xchg   esp,eax
  41a23a:	inc    esp
  41a23b:	outs   dx,DWORD PTR ds:[esi]
	...
  41a250:	xchg   edx,eax
  41a251:	popf   
  41a252:	data16 add BYTE PTR [ebp-0x4d],dh
  41a256:	jp     0x41a2cc
  41a258:	in     eax,0xbd
  41a25a:	imul   sp,cx,0x559d
  41a25f:	ins    BYTE PTR es:[edi],dx
  41a260:	mov    WORD PTR [ebx],?
  41a262:	sub    dh,BYTE PTR [esp-0x15]
  41a266:	ds je  0x41a2a5
  41a269:	push   ds
  41a26a:	adc    dh,BYTE PTR [ecx+esi*1-0x77]
  41a26e:	add    al,0x6b
  41a270:	xor    bl,ch
  41a272:	and    al,0x46
  41a274:	push   ds
  41a275:	aam    0x1f
  41a277:	pop    edi
  41a278:	sbb    BYTE PTR [eax],cl
  41a27a:	fdiv   st(7),st
  41a27c:	mov    ecx,0x8c672724
  41a281:	inc    ecx
  41a282:	das    
  41a283:	pop    edi
  41a284:	jmp    0x4c31:0xe9690231
  41a28b:	ins    DWORD PTR es:[edi],dx
  41a28c:	cli    
  41a28d:	movlps xmm4,QWORD PTR [ebp-0x40]
  41a291:	sbb    ch,BYTE PTR [esi]
  41a293:	jno    0x41a274
  41a295:	adc    al,0x28
  41a297:	outs   dx,BYTE PTR ds:[esi]
  41a298:	fucomip st,st(5)
  41a29a:	and    al,0x51
  41a29c:	mov    cl,0x5a
  41a29e:	sbb    esp,DWORD PTR [edi-0x4d]
  41a2a1:	dec    edi
  41a2a2:	sbb    eax,DWORD PTR [eax]
  41a2a4:	fbstp  TBYTE PTR [esi+0x4cbb7422]
  41a2aa:	push   ds
  41a2ab:	arpl   ax,cx
  41a2ad:	lahf   
  41a2ae:	sub    DWORD PTR [esi-0x38],ebp
  41a2b1:	les    edx,FWORD PTR [ebx]
  41a2b3:	arpl   WORD PTR [eax],ax
	...
  41a2c5:	add    BYTE PTR [eax],al
  41a2c7:	add    BYTE PTR [eax-0x669ed266],bh
  41a2cd:	fwait
  41a2ce:	sub    eax,0x4bed6446
  41a2d3:	ins    DWORD PTR es:[edi],dx
  41a2d4:	jb     0x41a25d
  41a2d6:	adc    DWORD PTR [ebp-0x54],esp
  41a2d9:	mov    ebp,0xed647429
  41a2de:	cmp    eax,0x29fb606c
  41a2e3:	inc    esi
  41a2e4:	inc    esp
  41a2e5:	popf   
  41a2e6:	or     al,0x5c
  41a2e8:	pop    edi
  41a2e9:	xchg   esp,eax
  41a2ea:	adc    BYTE PTR [ebx+0x5f],ah
  41a2ed:	xchg   esp,eax
  41a2ee:	sbb    eax,0xdf68370c
  41a2f3:	das    
  41a2f4:	dec    edx
  41a2f5:	pusha  
  41a2f6:	scas   eax,DWORD PTR es:[edi]
  41a2f7:	xor    eax,0x3c7833f
  41a2fc:	pop    esi
  41a2fd:	xor    DWORD PTR [edx-0x4492c2e5],0xcc7c7226
  41a307:	pop    ds
  41a308:	mov    WORD PTR [ebx-0x34],fs
  41a30b:	adc    eax,0x391711a
  41a310:	fild   WORD PTR [ebx+0x75f2158c]
  41a316:	mov    WORD PTR [esi],fs
  41a318:	mov    WORD PTR [eax+eax*4+0x14],fs
  41a31c:	std    
  41a31d:	jg     0x41a2bd
  41a31f:	adc    eax,0x17ad94f0
  41a324:	fsub   QWORD PTR [esi+ecx*4+0x15]
  41a328:	loopne 0x41a2be
  41a32a:	xchg   edx,eax
  41a32b:	and    BYTE PTR [eax],al
	...
  41a33d:	add    BYTE PTR [eax],al
  41a33f:	add    dl,ch
  41a341:	adc    BYTE PTR [esi+0x25],0xbe
  41a345:	jno    0x41a37a
  41a347:	inc    ebx
  41a348:	mov    esi,0xd812447d
  41a34d:	pop    edi
  41a34e:	dec    esp
  41a34f:	and    bl,ch
  41a351:	ins    DWORD PTR es:[edi],dx
  41a352:	xor    ebp,DWORD PTR [ecx]
  41a354:	mov    esp,0xab204181
  41a359:	add    DWORD PTR [edi+0x29],0xffffff9e
  41a35d:	xchg   esp,eax
  41a35e:	add    eax,DWORD PTR [edx-0x55]
  41a361:	cmp    BYTE PTR [edx],0x1d
  41a364:	jp     0x41a3d7
  41a366:	daa    
  41a367:	add    al,0x6e
  41a369:	ins    DWORD PTR es:[edi],dx
  41a36a:	adc    ebx,DWORD PTR [ebx]
  41a36c:	jae    0x41a3d4
  41a36e:	or     al,0xc
  41a370:	mov    ds:0x5403f270,al
  41a375:	addr16 repnz pop ss
  41a378:	jb     0x41a3ef
  41a37a:	or     BYTE PTR [eiz*4-0x5b05a46c],al
  41a381:	and    BYTE PTR [esi-0x38],0x6c
  41a385:	jae    0x41a38f
  41a387:	mov    ecx,0xde798568
  41a38c:	call   0x7a69:0x7fe96c82
  41a393:	mov    ebp,0xc765658f
  41a398:	jnp    0x41a31b
  41a39a:	addr16 mov ebx,0xb14b5864
  41a3a0:	jg     0x41a3f9
  41a3a2:	lods   ax,WORD PTR ds:[esi]
	...
  41a3b8:	popf   
  41a3b9:	ins    DWORD PTR es:[edi],dx
  41a3ba:	jle    0x41a340
  41a3bc:	mov    bl,0x63
  41a3be:	imul   ebx,DWORD PTR [edx+0x7f656d9e],0xffffff9e
  41a3c5:	xchg   esp,eax
  41a3c6:	push   esp
  41a3c7:	lods   al,BYTE PTR ds:[esi]
  41a3c8:	xchg   edi,eax
  41a3c9:	test   BYTE PTR [edi-0x71],ah
  41a3cc:	retf   
  41a3cd:	sbb    BYTE PTR [edi+0x7f],0xa4
  41a3d1:	xchg   esp,eax
  41a3d2:	push   esp
  41a3d3:	test   DWORD PTR [ebp+0x6d],edi
  41a3d6:	jle    0x41a424
  41a3d8:	lahf   
  41a3d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3da:	bound  ebx,QWORD PTR [edx-0x78]
  41a3dd:	mov    dl,0x78
  41a3df:	dec    eax
  41a3e0:	lahf   
  41a3e1:	cmp    DWORD PTR [ebp+0x3e],0xffffff9e
  41a3e5:	jo     0x41a411
  41a3e7:	or     DWORD PTR [esi-0x6a],edx
  41a3ea:	sub    ch,cl
  41a3ec:	sub    eax,0x7b1a08aa
  41a3f1:	outs   dx,BYTE PTR ds:[esi]
  41a3f2:	jl     0x41a42a
  41a3f4:	imul   eax,DWORD PTR [edx+0x7c55456b],0x50a20878
  41a3fe:	jp     0x41a400
  41a400:	mov    ds:0x80240871,al
  41a405:	test   BYTE PTR [edi+0x0],ah
  41a408:	or     DWORD PTR [edx+edi*2+0x69],0xffffffdb
  41a40d:	lods   al,BYTE PTR ds:[esi]
  41a40e:	push   ebx
  41a40f:	dec    eax
  41a410:	xchg   edx,eax
  41a411:	mov    bl,0x69
  41a413:	add    BYTE PTR [esi-0x55],dh
  41a416:	jp     0x41a48e
  41a418:	fsub   DWORD PTR [ebx+0x5508]
	...
  41a42e:	add    BYTE PTR [eax],al
  41a430:	out    0xac,al
  41a432:	jp     0x41a482
  41a434:	les    esi,FWORD PTR [ecx+ebp*2+0x77b0f500]
  41a43b:	jae    0x41a427
  41a43d:	xchg   esi,eax
  41a43e:	jp     0x41a4a4
  41a440:	mov    ch,0xa6
  41a442:	pop    eax
  41a443:	popa   
  41a444:	(bad)  
  41a445:	mov    ds:0xadd76f7b,al
  41a44a:	or     BYTE PTR [esp+ebx*1-0x5d],al
  41a44e:	imul   esp,DWORD PTR [ebx+0x19],0x65797a96
  41a455:	ret    0x6663
  41a458:	sbb    DWORD PTR [esi-0x5ae78dab],ebx
  41a45e:	inc    esi
  41a45f:	inc    ebx
  41a460:	sbb    eax,0xb6f57f1
  41a465:	popf   
  41a466:	jnp    0x41a4c9
  41a468:	xlat   BYTE PTR ds:[ebx]
  41a469:	lods   al,BYTE PTR ds:[esi]
  41a46a:	push   esp
  41a46b:	inc    ebx
  41a46c:	loope  0x41a41f
  41a46e:	ja     0x41a4e3
  41a470:	fdiv   QWORD PTR [ebx-0x3b8aabb2]
  41a476:	dec    esi
  41a477:	push   esp
  41a478:	jne    0x41a4cb
  41a47a:	addr16 arpl dx,ax
  41a47d:	popf   
  41a47e:	data16 je 0x41a4e7
  41a481:	nop
  41a482:	dec    esi
  41a483:	je     0x41a4da
  41a485:	ret    
  41a486:	imul   esi,DWORD PTR [edx+0x5b],0xbb007aad
  41a48d:	pushf  
  41a48e:	js     0x41a4e5
  41a490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a491:	lods   eax,DWORD PTR ds:[esi]
  41a492:	jp     0x41a4e2
	...
  41a4a8:	mov    WORD PTR [ebp+edx*1+0x10ad8c63],cs
  41a4af:	jo     0x41a4ed
  41a4b1:	mov    WORD PTR [edi],ss
  41a4b3:	jno    0x41a510
  41a4b5:	xchg   BYTE PTR [edx],bl
  41a4b7:	mov    WORD PTR fs:[esi-0x64a38bb2],ds
  41a4be:	sub    DWORD PTR [ecx+0x3f],esi
  41a4c1:	(bad)  
  41a4c2:	adc    esi,DWORD PTR [edx+0x28]
  41a4c5:	jmp    0x41a511
  41a4c7:	je     0x41a505
  41a4c9:	daa    
  41a4ca:	adc    dh,BYTE PTR [edx+0x29]
  41a4cd:	retf   0x6d1c
  41a4d0:	push   ds
  41a4d1:	aam    0x8
  41a4d3:	push   ecx
  41a4d4:	push   ebx
  41a4d5:	sub    eax,0x194d553d
  41a4da:	dec    esi
  41a4db:	pop    esp
  41a4dc:	inc    edx
  41a4dd:	sub    dh,BYTE PTR [ecx]
  41a4df:	and    bh,bl
  41a4e1:	or     ch,BYTE PTR [ebx]
  41a4e3:	je     0x41a4e0
  41a4e5:	sbb    al,0x17
  41a4e7:	arpl   ax,bx
  41a4e9:	inc    ebx
  41a4ea:	adc    eax,0x251ae267
  41a4ef:	aas    
  41a4f0:	out    dx,eax
  41a4f1:	push   ds
  41a4f2:	adc    al,0x73
  41a4f4:	repnz imul ebx,DWORD PTR [eax],0x2b1abf00
  41a4fb:	je     0x41a4d8
  41a4fd:	sbb    al,0x17
  41a4ff:	arpl   ax,bp
  41a501:	ret    
  41a502:	xor    BYTE PTR [eax-0x31],dl
  41a505:	popa   
  41a506:	adc    DWORD PTR [ebx-0x56],esp
  41a509:	push   ecx
  41a50a:	cmp    BYTE PTR [ecx+0x0],dl
	...
  41a51d:	add    BYTE PTR [eax],al
  41a51f:	add    BYTE PTR [ebp-0x738ed2b7],ah
  41a525:	mov    ss,WORD PTR [ebx]
  41a527:	cbw    
  41a529:	stos   BYTE PTR es:[edi],al
  41a52a:	sub    DWORD PTR [edx-0x4f],esi
  41a52d:	mov    DWORD PTR [edi],esi
  41a52f:	ins    DWORD PTR es:[edi],dx
  41a530:	stos   BYTE PTR es:[edi],al
  41a531:	test   eax,0x947b2e24
  41a536:	adc    DWORD PTR ds:0x343b5a60,esp
  41a53c:	dec    ebp
  41a53d:	or     BYTE PTR [eax],0x27
  41a540:	bound  ebp,QWORD PTR [eax+0x23]
  41a543:	xor    DWORD PTR [ebx+0x68],esi
  41a546:	add    al,0x11
  41a548:	mov    edx,es
  41a54a:	push   es
  41a54b:	or     al,0x6d
  41a54d:	xchg   esp,eax
  41a54e:	int    0x1c
  41a550:	pusha  
  41a551:	sbb    bh,0x25
  41a554:	inc    eax
  41a555:	(bad)  fs:[edx]
  41a558:	cmp    eax,0x3d1d0568
  41a55d:	js     0x41a53e
  41a55f:	das    
  41a560:	dec    ecx
  41a561:	inc    esp
  41a562:	mov    dl,0x1c
  41a564:	xor    ch,BYTE PTR [eax-0x4a]
  41a567:	and    bl,BYTE PTR [esi]
  41a569:	jns    0x41a4fe
  41a56b:	inc    edi
  41a56c:	xor    esp,DWORD PTR [esi-0x3c]
  41a56f:	and    BYTE PTR [eax],bl
  41a571:	xor    DWORD PTR [ecx-0x709c53f6],0x16
  41a578:	std    
  41a579:	xchg   esp,eax
  41a57a:	mov    bl,0x30
  41a57c:	in     al,0x75
  41a57e:	xchg   ecx,eax
  41a57f:	es call 0x5931cc
	...
  41a595:	add    BYTE PTR [eax],al
  41a597:	add    al,ah
  41a599:	jge    0x41a538
  41a59b:	and    al,0xdd
  41a59d:	ret    0x2082
  41a5a0:	fst    QWORD PTR [ebx+ebx*4+0x7175e430]
  41a5a7:	es mov al,0x47
  41a5aa:	inc    esp
  41a5ab:	adc    BYTE PTR [eax-0x42dcba83],bh
  41a5b1:	push   ebx
  41a5b2:	adc    BYTE PTR [ebx],ch
  41a5b4:	jl     0x41a609
  41a5b6:	sbb    al,0xda
  41a5b8:	lods   al,BYTE PTR ds:[esi]
  41a5b9:	ja     0x41a5ed
  41a5bb:	add    al,0xc0
  41a5bd:	inc    edi
  41a5be:	push   edi
  41a5bf:	and    eax,0x4d08799e
  41a5c4:	pop    ebx
  41a5c5:	ja     0x41a643
  41a5c7:	xor    eax,0x1a6d82a9
  41a5cc:	out    0x63,al
  41a5ce:	ja     0x41a5dd
  41a5d0:	cdq    
  41a5d1:	push   0x45abe96b
  41a5d6:	pusha  
  41a5d7:	or     BYTE PTR [edx-0x52e59389],al
  41a5dd:	push   0x7976107c
  41a5e2:	jns    0x41a5fa
  41a5e4:	mov    ecx,0xdd0e384f
  41a5e9:	sar    BYTE PTR [ecx-0x28],0x9b
  41a5ed:	jnp    0x41a66b
  41a5ef:	les    ecx,FWORD PTR [edi+0x6dc64950]
  41a5f5:	jp     0x41a662
  41a5f7:	les    edx,FWORD PTR [edx+0x67]
  41a5fa:	js     0x41a605
	...
  41a610:	pop    ebx
  41a611:	sub    DWORD PTR [esi-0x4b],0xcc7a537e
  41a618:	pop    DWORD PTR [eax+0x7a9fc86b]
  41a61e:	jl     0x41a5b9
  41a620:	(bad)  
  41a621:	lea    bp,gs:[ecx+edx*2+0x6cacc778]
  41a62a:	imul   ebp,ecx,0xffffff82
  41a62d:	jns    0x41a6ab
  41a62f:	mov    WORD PTR [edx-0x3e],?
  41a632:	ins    BYTE PTR es:[edi],dx
  41a633:	mov    BYTE PTR [ebx-0x7c7f866c],cl
  41a639:	jne    0x41a6b4
  41a63b:	mov    edi,0xe95f82a8
  41a640:	imul   esp,DWORD PTR [eax+0x6b],0x48
  41a644:	mov    al,ds:0x6d5b6747
  41a649:	push   eax
  41a64a:	inc    esp
  41a64b:	inc    esp
  41a64c:	jno    0x41a6b2
  41a64e:	dec    esi
  41a64f:	add    BYTE PTR [ecx+0x6a5308a8],al
  41a655:	push   esi
  41a656:	pop    esp
  41a657:	push   edi
  41a658:	fs stos BYTE PTR es:[edi],al
  41a65a:	dec    ecx
  41a65b:	pop    esp
  41a65c:	test   eax,0xc27055b3
  41a661:	mov    bh,0x7a
  41a663:	gs in  eax,0xb0
  41a666:	data16 jae 0x41a5fa
  41a669:	mov    bh,0x64
  41a66b:	ins    BYTE PTR es:[edi],dx
  41a66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a66d:	mov    bh,0x7c
  41a66f:	push   0x7455b1f5
	...
  41a688:	test   BYTE PTR [ebp+ebp*2+0x72],dl
  41a68c:	in     eax,0xa5
  41a68e:	push   ebp
  41a68f:	jae    0x41a657
  41a691:	xchg   BYTE PTR [ebx+0x72],ah
  41a694:	rcl    DWORD PTR [ebp-0x5e2990c0],1
  41a69a:	inc    esi
  41a69b:	popa   
  41a69c:	enter  0x8b4,0x55
  41a6a0:	(bad)  
  41a6a1:	mov    ah,0x7a
  41a6a3:	dec    esi
  41a6a4:	aam    0x8c
  41a6a6:	imul   eax,DWORD PTR [eax],0x6f61b4f7
  41a6ac:	shl    DWORD PTR [esp+ecx*2+0x67b44769],1
  41a6b3:	je     0x41a6cf
  41a6b5:	xchg   DWORD PTR [ebp+0x0],edi
  41a6b8:	xor    eax,0x2b747a8e
  41a6bd:	test   BYTE PTR [ecx+0x62],ah
  41a6c0:	adc    BYTE PTR [edi-0x5af9b9f8],al
  41a6c6:	jp     0x41a737
  41a6c8:	loope  0x41a658
  41a6ca:	outs   dx,DWORD PTR ds:[si]
  41a6cc:	or     DWORD PTR [ebp-0x5eec90a9],edx
  41a6d2:	jnp    0x41a735
  41a6d4:	out    0x91,eax
  41a6d6:	push   esp
  41a6d7:	dec    ebp
  41a6d8:	les    ecx,FWORD PTR [edx+0x598c697c]
  41a6de:	in     al,dx
  41a6df:	dec    edi
  41a6e0:	sahf   
  41a6e1:	push   esp
  41a6e2:	adc    esi,DWORD PTR [edx-0x5b]
  41a6e5:	inc    edi
  41a6e6:	or     al,0x5c
  41a6e8:	pop    edi
  41a6e9:	in     eax,dx
  41a6ea:	dec    edx
  41a6eb:	add    BYTE PTR [bx+si],al
	...
  41a6fe:	add    BYTE PTR [eax],al
  41a700:	cwde   
  41a701:	rcr    DWORD PTR [eax],0x70
  41a704:	mov    edx,0x8c671254
  41a709:	test   eax,0x87655148
  41a70e:	adc    eax,0x1294a271
  41a713:	mov    WORD PTR [bx+0x6332],?
  41a718:	pop    eax
  41a719:	mov    edi,0x9862671e
  41a71e:	or     al,0x50
  41a720:	ins    DWORD PTR es:[edi],dx
  41a721:	out    dx,al
  41a722:	sbb    edx,DWORD PTR [ebp+0x3b]
  41a725:	in     eax,dx
  41a726:	adc    al,0x0
  41a728:	pop    ecx
  41a729:	int    0x1c
  41a72b:	add    BYTE PTR [ecx-0x32],ah
  41a72e:	adc    eax,0x1ddc4272
  41a733:	arpl   WORD PTR [ebp+ebp*1+0x3f186d10],cx
  41a73a:	adc    dh,BYTE PTR [edx+0x31]
  41a73d:	fiadd  WORD PTR [ebp*2+0x5009241e]
  41a744:	sti    
  41a745:	sub    eax,DWORD PTR ds:0x2706df00
  41a74b:	je     0x41a750
  41a74d:	sbb    eax,0x2ad0631b
  41a752:	adc    BYTE PTR [ebx-0x20],dh
  41a755:	adc    eax,0x6ff551e9
  41a75a:	push   ss
  41a75b:	jb     0x41a709
  41a75d:	or     DWORD PTR [esi],edx
  41a75f:	popa   
  41a760:	in     al,0x17
  41a762:	adc    BYTE PTR [eax+eax*1+0x0],ch
	...
  41a776:	add    BYTE PTR [eax],al
  41a778:	mov    ebx,0xbf631216
  41a77d:	xchg   esp,eax
  41a77e:	dec    ebx
  41a77f:	xor    DWORD PTR [edi-0x54e9d48e],ebp
  41a785:	inc    sp
  41a787:	sub    ch,cl
  41a789:	jg     0x41a7c0
  41a78b:	sbb    ch,BYTE PTR [edi-0x56e4cc8d]
  41a791:	jle    0x41a7c5
  41a793:	add    al,0xbd
  41a795:	jns    0x41a7c8
  41a797:	adc    ch,BYTE PTR [edi+0x62]
  41a79a:	sbb    ecx,DWORD PTR [ebx]
  41a79c:	jl     0x41a817
  41a79e:	fild   WORD PTR [ecx+0x60]
  41a7a1:	inc    esp
  41a7a2:	mov    edi,0x335e4144
  41a7a7:	ss pop ecx
  41a7a9:	pusha  
  41a7aa:	fild   WORD PTR [ecx+0x38]
  41a7ad:	inc    esp
  41a7ae:	and    bh,BYTE PTR [ecx]
  41a7b0:	dec    edx
  41a7b1:	xchg   esp,eax
  41a7b2:	lds    edx,FWORD PTR [ebx]
  41a7b4:	pop    esi
  41a7b5:	jbe    0x41a796
  41a7b7:	daa    
  41a7b8:	pop    esp
  41a7b9:	(bad)  
  41a7ba:	mul    BYTE PTR [ecx]
  41a7bc:	sub    eax,DWORD PTR [eax+0x138c14c4]
  41a7c2:	aam    0x87
  41a7c4:	sbb    DWORD PTR [esi],0x63339b92
  41a7ca:	jbe    0x41a754
  41a7cc:	xor    al,0x68
  41a7ce:	mov    bl,0x13
  41a7d0:	push   esi
  41a7d1:	mov    edi,0x68240406
  41a7d6:	mov    bl,0x13
  41a7d8:	std    
  41a7d9:	stos   BYTE PTR es:[edi],al
  41a7da:	neg    al
	...
  41a7f0:	cmp    DWORD PTR [ecx-0x6d],0x13
  41a7f4:	mov    dh,0xbf
  41a7f6:	mov    BYTE PTR [ebx],0xe1
  41a7f9:	test   BYTE PTR fs:0x229e94cb,dl
  41a800:	bnd js 0x41a7e0
  41a803:	pop    ds
  41a804:	mov    ebx,0xbd28df68
  41a809:	jg     0x41a813
  41a80b:	(bad)  
  41a80c:	fwait
  41a80d:	imul   esp,DWORD PTR [edi+0x7b],0x594550a2
  41a814:	ins    DWORD PTR es:[edi],dx
  41a815:	bound  esp,QWORD PTR [edi+0x9]
  41a818:	jg     0x41a79b
  41a81a:	outs   dx,BYTE PTR ds:[esi]
  41a81b:	pop    ebp
  41a81c:	fwait
  41a81d:	dec    edi
  41a81e:	jp     0x41a864
  41a820:	mov    BYTE PTR [eax+0x67],ah
  41a823:	cmp    bh,BYTE PTR [esp+esi*4+0x4c]
  41a827:	push   eax
  41a828:	jle    0x41a89d
  41a82a:	imul   edi,DWORD PTR ds:0xfa6f62a3,0x1a67608f
  41a834:	pushf  
  41a835:	mov    ah,0x3f
  41a837:	setg   BYTE PTR [eax+0x67]
  41a83b:	add    eax,0x858b484
  41a840:	jl     0x41a8be
  41a842:	or     BYTE PTR [esi],dh
  41a844:	xor    BYTE PTR [ebx+0x7a],0x8
  41a848:	mov    edx,0x84245c56
  41a84d:	push   eax
  41a84e:	jns    0x41a851
  41a850:	ins    DWORD PTR es:[edi],dx
  41a851:	and    BYTE PTR [ebp+eax*8+0x0],0x0
	...
  41a866:	add    BYTE PTR [eax],al
  41a868:	mov    ds:0x6bcf6b64,al
  41a86d:	jne    0x41a8d4
  41a86f:	les    eax,FWORD PTR [edi+ecx*2+0x698fc566]
  41a876:	pop    edi
  41a877:	mov    edx,0xb97c766c
  41a87c:	jle    0x41a8e0
  41a87e:	jle    0x41a83a
  41a880:	popa   
  41a881:	je     0x41a8e2
  41a883:	mov    edi,0x8a47508f
  41a888:	lods   al,BYTE PTR ds:[esi]
  41a889:	push   edx
  41a88a:	aas    
  41a88b:	mov    ch,0x8f
  41a88d:	inc    ebx
  41a88e:	gs (bad) 
  41a890:	addr16 addr16 fwait
  41a893:	fwait
  41a894:	lods   al,BYTE PTR ds:[esi]
  41a895:	push   eax
  41a896:	inc    edi
  41a897:	add    BYTE PTR [esi],al
  41a899:	mov    ch,0x4a
  41a89b:	dec    ecx
  41a89c:	stc    
  41a89d:	xchg   ecx,eax
  41a89e:	inc    ecx
  41a89f:	push   edx
  41a8a0:	sub    BYTE PTR [edx-0x4214b0a9],dl
  41a8a6:	pop    ebx
  41a8a7:	inc    ecx
  41a8a8:	ja     0x41a8fd
  41a8aa:	push   esp
  41a8ab:	inc    ebx
  41a8ac:	shl    DWORD PTR [edi-0x7e278c89],0x54
  41a8b3:	push   esp
  41a8b4:	mov    esp,0xbc4c6988
  41a8b9:	mov    dl,0x54
  41a8bb:	jnp    0x41a923
  41a8bd:	push   edx
  41a8be:	and    eax,0x38530746
  41a8c3:	inc    esi
  41a8c4:	add    dl,bl
  41a8c6:	and    al,0x39
  41a8c8:	fxch   st(4)
  41a8ca:	cmp    BYTE PTR [ecx+0x0],al
	...
  41a8dd:	add    BYTE PTR [eax],al
  41a8df:	add    BYTE PTR [ecx+edx*2-0x5149bddf],ah
  41a8e6:	cmp    DWORD PTR ds:0x3635c8b9,ebp
  41a8ec:	sbb    DWORD PTR [ebp+0x3a],edx
  41a8ef:	aaa    
  41a8f0:	stos   DWORD PTR es:[edi],eax
  41a8f1:	fnstsw WORD PTR [ebx]
  41a8f3:	aaa    
  41a8f4:	rcl    BYTE PTR [ecx-0x5b94b0a9],0x5b
  41a8fb:	inc    ecx
  41a8fc:	not    DWORD PTR [esp+edx*2+0x43]
  41a900:	sar    DWORD PTR [eax-0x7d278c89],0x54
  41a907:	push   esp
  41a908:	mov    esp,0xbc4c6981
  41a90d:	mov    bl,0x54
  41a90f:	jnp    0x41a89d
  41a911:	push   ebx
  41a912:	xor    eax,0x36c48835
  41a917:	cmp    DWORD PTR [eax+0x57322554],eax
  41a91d:	int3   
  41a91e:	cmp    BYTE PTR [edi],dh
  41a920:	pop    eax
  41a921:	fisub  WORD PTR [ecx]
  41a923:	inc    edx
  41a924:	mov    WORD PTR [edx],?
  41a926:	(bad)  
  41a927:	ss mov cl,0x38
  41a92a:	lds    esi,FWORD PTR [edi]
  41a92c:	sahf   
  41a92d:	xor    BYTE PTR [ebx],dh
  41a92f:	cmp    BYTE PTR [esi+eiz*1+0x68cf31da],bl
  41a936:	or     DWORD PTR [ebp-0x4b],esi
  41a939:	push   0x28
  41a93b:	data16 ror BYTE PTR [ebx+0x17],0x72
  41a940:	mov    edx,0x66de4a
	...
  41a955:	add    BYTE PTR [eax],al
  41a957:	add    BYTE PTR [edx-0x4a8af3ac],bh
  41a95d:	dec    edx
  41a95e:	adc    eax,0xdeaba066
  41a963:	data16 mov ds:0x60460c44,al
  41a969:	mov    esp,DWORD PTR [esi]
  41a96b:	ins    DWORD PTR es:[edi],dx
  41a96c:	test   DWORD PTR [ebx+edx*1+0x63],ebx
  41a970:	jle    0x41a937
  41a972:	adc    dh,BYTE PTR [esp+edi*2-0x5]
  41a976:	xor    dl,BYTE PTR [esp+edi*1-0x53]
  41a97a:	sbb    esi,DWORD PTR [edi+0x6d]
  41a97d:	xchg   esi,eax
  41a97e:	adc    eax,0x27ecaa72
  41a983:	add    BYTE PTR [eax],dh
  41a985:	mov    DWORD PTR [edi+eiz*2],edx
  41a988:	cmp    dl,BYTE PTR [esi-0x18d592c9]
  41a98e:	fisub  DWORD PTR [eax+0x2b]
  41a991:	enter  0x6e08,0x3f
  41a995:	retf   0x2dd7
  41a998:	xor    bh,dl
  41a99a:	sbb    al,0x0
  41a99c:	push   edx
  41a99d:	sub    bh,BYTE PTR [eax]
  41a99f:	pop    ebp
  41a9a0:	inc    ebp
  41a9a1:	lds    edx,FWORD PTR [ecx]
  41a9a3:	je     0x41a931
  41a9a5:	cmp    eax,0xeeb5138
  41a9aa:	adc    DWORD PTR [ebx-0x8],esi
  41a9ad:	rcr    DWORD PTR [ebx],1
  41a9af:	jne    0x41a99b
  41a9b1:	xchg   esp,eax
  41a9b2:	fbstp  TBYTE PTR ds:0x22a147dd
  41a9b8:	fnsave [ecx-0x2b]
  41a9bb:	iret   
	...
  41a9d0:	rcl    BYTE PTR [eax-0x74],0x20
  41a9d4:	jmp    0xdf832e49
  41a9d9:	jb     0x41a968
  41a9db:	push   ds
  41a9dc:	mov    esi,0xcd3e9294
  41a9e1:	pop    ebp
  41a9e2:	fwait
  41a9e3:	ds (bad) 
  41a9e5:	dec    ebx
  41a9e6:	and    eax,0x3871af12
  41a9eb:	adc    BYTE PTR [edi-0x2acc2087],ch
  41a9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9f2:	adc    BYTE PTR ds:0x3b3371d1,ah
  41a9f8:	mov    ds:0x7a124c60,al
  41a9fd:	jne    0x41aa4a
  41a9ff:	cmp    DWORD PTR [edi+0x6d],ebp
  41aa02:	adc    bl,BYTE PTR [eax]
  41aa04:	imul   esp,DWORD PTR [eax-0x21],0xd0a54533
  41aa0b:	and    al,0xab
  41aa0d:	popa   
  41aa0e:	adc    ebx,DWORD PTR [edi+ebp*2]
  41aa11:	jp     0x41aa2e
  41aa13:	sbb    ebp,DWORD PTR [ebp+0x75]
  41aa16:	repz push ds
  41aa18:	mov    WORD PTR [edx+edi*1-0x2d],es
  41aa1c:	jp     0x41aa65
  41aa1e:	and    esi,DWORD PTR [edx]
  41aa20:	popa   
  41aa21:	push   eax
  41aa22:	or     al,0x21
  41aa24:	ds ins DWORD PTR es:[edi],dx
  41aa26:	iret   
  41aa27:	jl     0x7b146471
  41aa2d:	dec    ebx
  41aa2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa2f:	adc    DWORD PTR [edi],ebp
  41aa31:	jno    0x41a9e5
  41aa33:	pop    ss
	...
  41aa48:	sub    DWORD PTR [eax-0x21],esp
  41aa4b:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41aa52:	or     cl,ch
  41aa54:	(bad)  
  41aa55:	xchg   esp,eax
  41aa56:	or     cl,ch
  41aa58:	(bad)  
  41aa59:	xchg   esp,eax
  41aa5a:	or     cl,ch
  41aa5c:	(bad)  
  41aa5d:	xchg   esp,eax
  41aa5e:	or     cl,ch
  41aa60:	(bad)  
  41aa61:	xchg   esp,eax
  41aa62:	or     cl,ch
  41aa64:	(bad)  
  41aa65:	xchg   esp,eax
  41aa66:	or     cl,ch
  41aa68:	(bad)  
  41aa69:	xchg   esp,eax
  41aa6a:	or     cl,ch
  41aa6c:	(bad)  
  41aa6d:	gs ja  0x41a9fd
  41aa70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa71:	pusha  
  41aa72:	imul   edi,DWORD PTR [edx+0x7d647759],0xffffff8f
  41aa79:	gs ja  0x41aad1
  41aa7c:	and    DWORD PTR [edi+0x6b],esp
  41aa7f:	sbb    ch,BYTE PTR [edi]
  41aa81:	js     0x41aafb
  41aa83:	dec    esp
  41aa84:	push   ds
  41aa85:	jmp    0x41ab00
  41aa87:	pop    eax
  41aa88:	sbb    al,0x72
  41aa8a:	jl     0x41aad8
  41aa8c:	pop    ebx
  41aa8d:	dec    ecx
  41aa8e:	imul   ecx,DWORD PTR [ebp-0x1],0xfae96b63
  41aa95:	jns    0x41aafb
  41aa97:	inc    eax
  41aa98:	hlt    
  41aa99:	jne    0x41aad4
  41aa9b:	inc    esi
  41aa9c:	clc    
  41aa9d:	imul   ebx,DWORD PTR fs:[ecx],0xfffffff1
  41aaa1:	fs imul ebp,ecx,0xffffffda
  41aaa5:	jns    0x41ab0b
  41aaa7:	add    ah,dl
  41aaa9:	jne    0x41aae4
  41aaab:	add    BYTE PTR es:[eax],al
	...
  41aabe:	add    BYTE PTR [eax],al
  41aac0:	(bad)  [esi+0x6b]
  41aac3:	stc    
  41aac4:	(bad)  
  41aac5:	gs ja  0x41aacd
  41aac8:	mov    cl,0x66
  41aaca:	imul   edi,DWORD PTR [edx-0x2a9a8c52],0xffffffb4
  41aad1:	jge    0x41ab39
  41aad3:	mov    esi,0xcc7c61b1
  41aad8:	call   0x7c71:0xabd879ea
  41aadf:	add    al,al
  41aae1:	mov    eax,ds:0xfa5a6353
  41aae6:	jns    0x41ab55
  41aae8:	dec    ebx
  41aae9:	mul    DWORD PTR [esi+0x6c]
  41aaec:	cmp    dh,al
  41aaee:	hlt    
  41aaef:	call   FWORD PTR [eax]
  41aaf1:	out    0x6e,eax
  41aaf3:	jae    0x41aaf9
  41aaf5:	cli    
  41aaf6:	ins    DWORD PTR es:[edi],dx
  41aaf7:	je     0x41ab09
  41aaf9:	mov    ds:0xf9d96426,eax
  41aafe:	hlt    
  41aaff:	jb     0x41aad5
  41ab01:	stc    
  41ab02:	ins    DWORD PTR es:[edi],dx
  41ab03:	je     0x41ab15
  41ab05:	mov    ds:0xfcc56f53,eax
  41ab0a:	bound  eax,QWORD PTR [eax]
  41ab0c:	mov    dh,0xe0
  41ab0e:	pusha  
  41ab0f:	imul   edx,ecx,0xd65f37fb
  41ab15:	in     al,0x63
  41ab17:	jae    0x41aae9
  41ab19:	nop
  41ab1a:	ja     0x41ab8d
  41ab1c:	pop    ecx
  41ab1d:	idiv   DWORD PTR [eax+0x65]
  41ab20:	push   ss
  41ab21:	mul    DWORD PTR [edx+esi*2+0x0]
	...
  41ab35:	add    BYTE PTR [eax],al
  41ab37:	add    BYTE PTR [eax-0x20],dl
  41ab3a:	push   ebp
  41ab3b:	jb     0x41ab8d
  41ab3d:	nop
  41ab3e:	ja     0x41abb1
  41ab40:	mov    ecx,0xd66578f7
  41ab45:	div    BYTE PTR [edi+0x74]
  41ab48:	nop
  41ab49:	loopne 0x41ab3f
  41ab4b:	jb     0x41aad1
  41ab4d:	in     al,0x6d
  41ab4f:	je     0x41aae1
  41ab51:	mov    eax,ds:0xe47a6353
  41ab56:	jns    0x41abc5
  41ab58:	fwait
  41ab59:	cmc    
  41ab5a:	data16 jns 0x41ab1e
  41ab5d:	cld    
  41ab5e:	ja     0x41ab60
  41ab60:	mov    dh,0xe0
  41ab62:	pusha  
  41ab63:	imul   edx,ecx,0xd65f37fc
  41ab69:	out    0x60,al
  41ab6b:	jne    0x41aaf9
  41ab6d:	shl    dh,1
  41ab6f:	pop    esp
  41ab70:	cs daa 
  41ab72:	cli    
  41ab73:	popa   
  41ab74:	mov    ebx,?
  41ab76:	or     BYTE PTR [eax],al
  41ab78:	mov    ebx,?
  41ab7a:	or     BYTE PTR [eax],al
  41ab7c:	mov    ebx,?
  41ab7e:	or     BYTE PTR [eax],al
  41ab80:	mov    ebx,?
  41ab82:	or     BYTE PTR [eax],al
  41ab84:	mov    ebx,?
  41ab86:	or     BYTE PTR [eax],al
  41ab88:	mov    ebx,?
  41ab8a:	or     BYTE PTR [eax],al
  41ab8c:	mov    ebx,?
  41ab8e:	or     BYTE PTR [eax],al
  41ab90:	mov    ebx,?
  41ab92:	or     BYTE PTR [eax],al
  41ab94:	mov    ebx,?
  41ab96:	clc    
  41ab97:	jno    0x41ab54
  41ab99:	adc    esp,esp
  41ab9b:	imul   eax,DWORD PTR [eax],0x0
	...
  41abae:	add    BYTE PTR [eax],al
  41abb0:	test   eax,0xaa67376e
  41abb5:	adc    al,0x9
  41abb7:	push   eax
  41abb8:	mov    esi,0xb866e242
  41abbd:	push   eax
  41abbe:	or     al,0x47
  41abc0:	lahf   
  41abc1:	lods   eax,DWORD PTR ds:[esi]
  41abc2:	in     eax,dx
  41abc3:	imul   ebp,DWORD PTR [ebp-0x568a1ec1],0xfffffffb
  41abca:	fcomp  DWORD PTR [esi-0x80]
  41abcd:	inc    ebx
  41abce:	or     al,0x50
  41abd0:	ins    DWORD PTR es:[edi],dx
  41abd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd2:	in     al,0x53
  41abd4:	imul   esi,DWORD PTR [eax-0x74739d0c],0xfffffffe
  41abdb:	bound  esi,QWORD PTR [edx-0x72]
  41abde:	cmp    ch,BYTE PTR [edx+0x5f]
  41abe1:	sti    
  41abe2:	sti    
  41abe3:	data16 jae 0x41abcf
  41abe6:	imul   DWORD PTR [ebp+0x5f]
  41abe9:	sar    ebx,0x6e
  41abec:	cmp    BYTE PTR [eax+esi*8-0x1e11739e],al
  41abf3:	fs sub ch,dl
  41abf6:	div    BYTE PTR [eax+0x62]
  41abf9:	xchg   esp,eax
  41abfa:	sar    ebx,cl
  41abfc:	pop    ds
  41abfd:	xchg   esp,eax
  41abfe:	shr    dl,cl
  41ac00:	sub    BYTE PTR [edx-0x32],bh
  41ac03:	icebp  
  41ac04:	sbb    al,0xa6
  41ac06:	cmc    
  41ac07:	neg    DWORD PTR [ebx]
  41ac09:	pusha  
  41ac0a:	fcomip st,st(4)
  41ac0c:	repnz outs dx,DWORD PTR ds:[esi]
  41ac0e:	(bad)
  41ac11:	arpl   dx,si
  41ac13:	xor    DWORD PTR [eax],eax
	...
  41ac29:	ins    DWORD PTR es:[edi],dx
  41ac2a:	mov    ebx,0x82a2ad03
  41ac2f:	add    ebp,DWORD PTR [ebp-0x52fc745e]
  41ac35:	mov    ds:0x51bd0384,al
  41ac3a:	xchg   ebx,eax
  41ac3b:	(bad)  
  41ac3c:	int3   
  41ac3d:	inc    eax
  41ac3e:	mov    edi,0x7b63b8eb
  41ac43:	icebp  
  41ac44:	loop   0x41acbf
  41ac46:	test   BYTE PTR [edi],ch
  41ac48:	ins    BYTE PTR es:[edi],dx
  41ac49:	jno    0x41acc0
  41ac4b:	in     al,0xbd
  41ac4d:	ins    DWORD PTR es:[edi],dx
  41ac4e:	dec    edi
  41ac4f:	clc    
  41ac50:	scas   al,BYTE PTR es:[edi]
  41ac51:	jo     0x41ac8f
  41ac53:	cmc    
  41ac54:	scas   al,BYTE PTR es:[edi]
  41ac55:	bound  ecx,QWORD PTR [ebp-0x1d]
  41ac58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac59:	jno    0x41ac4e
  41ac5b:	and    ebp,DWORD PTR [edi-0x7d09bd8a]
  41ac61:	fs cmp esp,edi
  41ac64:	outs   dx,DWORD PTR ds:[esi]
  41ac65:	inc    esp
  41ac66:	inc    eax
  41ac67:	cmc    
  41ac68:	jl     0x41acc9
  41ac6a:	imul   BYTE PTR ss:[edi-0x4c]
  41ac6e:	and    eax,0xbf5958d6
  41ac73:	out    dx,al
  41ac74:	jo     0x41ace0
  41ac76:	ds lock push 0x5cf2086f
  41ac7d:	xchg   esp,eax
  41ac7e:	and    eax,0xd713deb
  41ac83:	icebp  
  41ac84:	cmp    edx,DWORD PTR [eax+ecx*1+0x7278cb15]
	...
  41ac9f:	add    BYTE PTR [ebx+edi*2+0x6ed5c567],bh
  41aca6:	jp     0x41ac6c
  41aca8:	mov    ch,0x78
  41acaa:	jo     0x41ac61
  41acac:	pop    DWORD PTR [ebp+0x65]
  41acaf:	(bad)  
  41acb0:	fwait
  41acb1:	pusha  
  41acb2:	addr16 mov ebx,0xce434b72
  41acb8:	sub    DWORD PTR [esi+0x64],0x23e76ec5
  41acbf:	cld    
  41acc0:	mov    ds:0x5f9d6e94,al
  41acc5:	lods   eax,DWORD PTR ds:[esi]
  41acc6:	and    eax,0x7c7c8fce
  41accb:	popf   
  41accc:	pop    edi
  41accd:	lods   eax,DWORD PTR ds:[esi]
  41acce:	and    eax,0x7c7c8fbe
  41acd3:	jge    0x41ad14
  41acd5:	fs xor cl,dh
  41acd8:	jl     0x41ac6e
  41acda:	outs   dx,BYTE PTR ds:[esi]
  41acdb:	jge    0x41ad1c
  41acdd:	mov    ecx,0x65268708
  41ace2:	imul   ebp,DWORD PTR [edi],0x44
  41ace5:	push   edi
  41ace6:	jns    0x41ad38
  41ace8:	and    al,0x72
  41acea:	jns    0x41acf3
  41acec:	and    al,0x46
  41acee:	jl     0x41acd9
  41acf0:	ds jb  0x41ad5a
  41acf3:	xor    al,0xfb
  41acf5:	js     0x41ad58
  41acf7:	inc    esp
  41acf8:	add    edi,esp
  41acfa:	push   eax
  41acfb:	and    al,0xeb
  41acfd:	ins    BYTE PTR es:[edi],dx
  41acfe:	pop    edi
  41acff:	cmp    eax,0x3a5445fc
	...
  41ad18:	cmc    
  41ad19:	inc    ebp
  41ad1a:	inc    ebx
  41ad1b:	push   cs
  41ad1c:	bnd jnp 0x41ad8a
  41ad1f:	adc    ah,ch
  41ad21:	out    0x4a,al
  41ad23:	std    
  41ad24:	loop   0x41ad99
  41ad26:	popa   
  41ad27:	add    BYTE PTR [ebp-0x6d93b53a],dh
  41ad2d:	repz pop edi
  41ad2f:	pop    esp
  41ad30:	addr16 loop 0x41ad96
  41ad33:	ja     0x41aceb
  41ad35:	sti    
  41ad36:	jbe    0x41ad94
  41ad38:	mov    ch,0xc3
  41ad3a:	arpl   WORD PTR [edx-0x44],di
  41ad3d:	mul    BYTE PTR [eax+0x61]
  41ad40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad41:	mov    BYTE PTR [ecx+0x6f],0xbf
  41ad45:	mul    DWORD PTR [eax+0x6c]
  41ad48:	push   esp
  41ad49:	mov    BYTE PTR [edx+esi*2+0x52],0xf0
  41ad4e:	ins    DWORD PTR es:[edi],dx
  41ad4f:	ins    BYTE PTR es:[edi],dx
  41ad50:	dec    eax
  41ad51:	jecxz  0x41ada3
  41ad53:	add    BYTE PTR [esi],dl
  41ad55:	imul   DWORD PTR [edx+0x74]
  41ad58:	or     dh,cl
  41ad5a:	jbe    0x41adc1
  41ad5c:	and    esi,edx
  41ad5e:	imul   esp,DWORD PTR [ebp+0x6],0x15544afa
  41ad65:	xchg   edx,eax
  41ad66:	xor    eax,0x6dcdc570
  41ad6b:	jb     0x41ada2
  41ad6d:	(bad)  
  41ad6e:	arpl   WORD PTR [ebx+0x4],sp
  41ad71:	test   BYTE PTR [eax+0x69],0xb7
  41ad75:	xchg   ecx,eax
  41ad76:	push   0x6f
  41ad78:	ret    0x61f9
  41ad7b:	popa   
	...
  41ad90:	(bad)  
  41ad91:	stc    
  41ad92:	and    ah,BYTE PTR [esp+eax*8-0x14]
  41ad96:	hlt    
  41ad97:	push   edx
  41ad98:	int3   
  41ad99:	in     al,dx
  41ad9a:	imul   ecx,DWORD PTR [ecx+0x63],0xa42e63ee
  41ada1:	into   
  41ada2:	inc    esp
  41ada3:	add    BYTE PTR [edx-0x1a919204],dh
  41ada9:	iret   
  41adaa:	push   ebp
  41adab:	jbe    0x41ad2f
  41adad:	loop   0x41ae1c
  41adaf:	je     0x41ad39
  41adb1:	loope  0x41add5
  41adb3:	mov    WORD PTR fs:[eax+esi*8-0x196bc501],ds
  41adbb:	inc    ebp
  41adbc:	pusha  
  41adbd:	mov    ecx,DWORD PTR [ecx+esi*2]
  41adc0:	xor    eax,0x6a70dfdf
  41adc5:	xchg   edi,eax
  41adc6:	jmp    0x5046:0xd9874eff
  41adcd:	iret   
  41adce:	icebp  
  41adcf:	cs pop ebp
  41add1:	cmp    bh,BYTE PTR [esp+eax*2]
  41add4:	arpl   WORD PTR [edi-0x7bb2d4c5],ax
  41adda:	das    
  41addb:	inc    edx
  41addc:	mov    ecx,0xbe643bec
  41ade1:	cwde   
  41ade2:	xor    al,0x3f
  41ade4:	mov    ah,0xeb
  41ade6:	aaa    
  41ade7:	xor    BYTE PTR [ebx+eiz*8+0x39d03f38],bh
  41adee:	cmp    dh,BYTE PTR [edx]
  41adf0:	retf   0x3d2d
  41adf3:	jnp    0x41adf5
	...
  41ae05:	add    BYTE PTR [eax],al
  41ae07:	add    BYTE PTR [eax-0x21b01ccc],bh
  41ae0d:	jmp    0xfb69:0xb150
  41ae13:	bound  edi,QWORD PTR [esi-0x40ffc8d6]
  41ae19:	sbb    bh,dh
  41ae1b:	jne    0x41adc6
  41ae1d:	imul   edi,edx,0xf840a42d
  41ae23:	inc    edi
  41ae25:	lods   eax,DWORD PTR ds:[esi]
  41ae26:	ror    BYTE PTR [edi-0x2d],1
  41ae29:	pop    eax
  41ae2a:	lock jae 0x41add6
  41ae2d:	dec    ecx
  41ae2e:	or     al,0x43
  41ae30:	pop    edi
  41ae31:	xchg   eax,esp
  41ae33:	popa   
  41ae34:	mov    esi,0x805ee095
  41ae39:	sti    
  41ae3a:	fld    DWORD PTR [ebx+0x6d]
  41ae3d:	lahf   
  41ae3e:	jmp    0xd61e70
  41ae43:	clc    
  41ae44:	jecxz  0x41ae8e
  41ae46:	sub    al,0xf1
  41ae48:	pop    edi
  41ae49:	popa   
  41ae4a:	push   cs
  41ae4b:	out    0x5f,al
  41ae4d:	dec    eax
  41ae4e:	and    al,dl
  41ae50:	push   ecx
  41ae51:	inc    eax
  41ae52:	(bad)  
  41ae54:	dec    ebx
  41ae55:	jbe    0x41ae52
  41ae57:	out    0x3d,al
  41ae59:	jbe    0x41ae5f
  41ae5b:	clc    
  41ae5c:	xchg   ebx,eax
  41ae5d:	dec    edi
  41ae5e:	div    ebx
  41ae60:	aaa    
  41ae61:	jne    0x41ae34
  41ae63:	out    0x1d,al
  41ae65:	xchg   esp,eax
  41ae66:	mov    esi,0xcd7b29ea
  41ae6b:	out    0x0,al
	...
  41ae7d:	add    BYTE PTR [eax],al
  41ae7f:	add    BYTE PTR [edi],bl
  41ae81:	push   ecx
  41ae82:	shl    al,0xf3
  41ae85:	jns    0x41ae29
  41ae87:	icebp  
  41ae88:	out    dx,al
  41ae89:	js     0x41ae57
  41ae8b:	in     eax,dx
  41ae8c:	jmp    FWORD PTR [ebp-0x40]
  41ae8f:	out    dx,eax
  41ae90:	cld    
  41ae91:	xchg   esp,eax
  41ae92:	xchg   esp,eax
  41ae93:	ror    BYTE PTR [ebx-0x35dc5bb3],1
  41ae99:	dec    eax
  41ae9a:	scas   eax,DWORD PTR es:[edi]
  41ae9b:	and    edi,DWORD PTR [ebp+esi*2+0x73d8f092]
  41aea2:	xchg   ecx,eax
  41aea3:	out    0xbc,eax
  41aea5:	xchg   esp,eax
  41aea6:	mov    ds:0xb84482d3,eax
  41aeab:	cmp    DWORD PTR [esp+edx*4-0x61],ebp
  41aeaf:	leave  
  41aeb0:	js     0x41ae52
  41aeb2:	or     edi,DWORD PTR [edx-0x15179a7]
  41aeb8:	and    ebp,DWORD PTR [esi]
  41aeba:	fucomip st,st(2)
  41aebc:	shl    edx,1
  41aebe:	pop    ds
  41aebf:	retf   0xa058
  41aec2:	retf   
  41aec3:	mov    ecx,0xfe8e85d9
  41aec8:	add    ebp,DWORD PTR [esi]
  41aeca:	fucomip st,st(2)
  41aecc:	push   ecx
  41aecd:	repnz pop es
  41aecf:	sub    eax,esi
  41aed1:	test   al,0x34
  41aed3:	lds    esp,FWORD PTR ds:0xe26616d2
  41aed9:	jecxz  0x41ae79
  41aedb:	jmp    0xd72808c6
  41aee0:	(bad)  
  41aee1:	xchg   esp,eax
  41aee2:	or     ah,al
	...
  41aef8:	jg     0x41aea0
  41aefa:	push   eax
  41aefb:	jmp    0xf5b01fdc
  41af00:	rol    BYTE PTR [edx+0x7a],0xc
  41af04:	lods   al,BYTE PTR ds:[esi]
  41af05:	dec    esi
  41af06:	pop    edi
  41af07:	or     bl,BYTE PTR [esi-0x56298690]
  41af0d:	addr16 push esp
  41af0f:	mov    al,0xa9
  41af11:	addr16 imul ebx,ebx,0xffffffa1
  41af15:	jbe    0x41af93
  41af17:	or     DWORD PTR [ebx+0x6b],edx
  41af1a:	js     0x41aef1
  41af1c:	jo     0x41af83
  41af1e:	imul   edi,DWORD PTR [ebx-0x4299a5a5],0x6a
  41af25:	outs   dx,DWORD PTR ds:[esi]
  41af26:	rcl    BYTE PTR fs:[ecx+0x70],0x7a
  41af2b:	xchg   esp,eax
  41af2c:	pop    esp
  41af2d:	aas    
  41af2e:	pop    ecx
  41af2f:	xchg   ebp,eax
  41af30:	push   0x6a8e6765
  41af35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af36:	or     cl,ch
  41af38:	(bad)  
  41af39:	xchg   esp,eax
  41af3a:	or     BYTE PTR [eax-0x7bf78971],cl
  41af40:	(bad)  
  41af41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af42:	or     BYTE PTR [ecx-0x4ff75571],dh
  41af48:	(bad)  
  41af49:	jp     0x41af53
  41af4b:	adc    al,0x88
  41af4d:	stos   DWORD PTR es:[edi],eax
  41af4e:	or     BYTE PTR [ebx-0x70],cl
  41af51:	test   al,0x8
  41af53:	push   ds
  41af54:	mov    BYTE PTR [edi+0x75901508],ch
  41af5a:	or     BYTE PTR [eax],al
	...
  41af70:	push   ecx
  41af71:	cwde   
  41af72:	cmp    eax,0x55988800
  41af77:	add    dh,dh
  41af79:	xchg   esi,eax
  41af7a:	cmp    DWORD PTR [eax],eax
  41af7c:	fst    QWORD PTR [esi-0x6769ffdf]
  41af82:	cmp    al,BYTE PTR [eax]
  41af84:	mov    bh,0x96
  41af86:	cmp    eax,0x3c96b500
  41af8b:	add    BYTE PTR [ecx-0x6bff9568],dl
  41af91:	cwde   
  41af92:	cmp    eax,DWORD PTR [eax]
  41af94:	xchg   ebx,eax
  41af95:	cwde   
  41af96:	cmp    eax,DWORD PTR [eax]
  41af98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af99:	xchg   esi,eax
  41af9a:	inc    ecx
  41af9b:	imul   edx,DWORD PTR [esi-0x458c9c16],0xe25f78f4
  41afa5:	out    dx,eax
  41afa6:	bound  ecx,QWORD PTR [ecx-0x35]
  41afa9:	repz js 0x41b00b
  41afac:	(bad)  
  41afad:	cwde   
  41afae:	outs   dx,BYTE PTR ds:[esi]
  41afaf:	je     0x41aff6
  41afb1:	mov    al,ds:0xcb652f23
  41afb6:	arpl   WORD PTR [esi+0x31],sp
  41afb9:	out    0x55,eax
  41afbb:	jb     0x41b00d
  41afbd:	retf   0x6435
  41afc0:	cli    
  41afc1:	imul   DWORD PTR [ecx+0x5c]
  41afc4:	es out dx,eax
  41afc6:	popa   
  41afc7:	ins    DWORD PTR es:[edi],dx
  41afc8:	or     ch,ah
  41afca:	hlt    
  41afcb:	push   edx
  41afcc:	or     al,0xf2
  41afce:	imul   edx,DWORD PTR [ebx+0x10],0x657ae8
	...
  41afe5:	add    BYTE PTR [eax],al
  41afe7:	add    BYTE PTR [edi+0xc52f4ea],dh
  41afed:	repnz imul edx,DWORD PTR [ebx+0x10],0xc7657ae8
  41aff5:	mov    eax,0xd0596429
  41affa:	arpl   WORD PTR [ebx-0x74],si
  41affd:	aas    
  41affe:	or     al,0x51
  41b000:	jne    0x41b049
  41b002:	out    0x50,eax
  41b004:	imul   ebx,DWORD PTR [ebp-0x74819d06],0x82506427
  41b00e:	out    0x61,eax
  41b010:	inc    ecx
  41b011:	popf   
  41b012:	loopne 0x41b013
  41b014:	ds test al,bh
  41b017:	bound  edi,QWORD PTR [edi]
  41b019:	cwde   
  41b01a:	(bad)  
  41b01b:	jne    0x41b086
  41b01d:	jge    0x41b04b
  41b01f:	and    esi,DWORD PTR [eax]
  41b021:	scas   eax,DWORD PTR es:[edi]
  41b022:	fisub  WORD PTR [edx+0x31]
  41b025:	mov    bh,al
  41b027:	bound  ebp,QWORD PTR [edi+esi*4-0x1d]
  41b02b:	jno    0x41b056
  41b02d:	mov    ?,eax
  41b02f:	ins    BYTE PTR es:[edi],dx
  41b030:	push   ds
  41b031:	in     al,0x8
  41b033:	push   ecx
  41b034:	xor    eax,0x3150e7bf
  41b039:	mov    ebp,0x8b1e62f6
  41b03e:	daa    
  41b03f:	fs mov ecx,0xfe62fe28
  41b045:	jmp    0x41b024
  41b047:	data16 add cl,bl
  41b04a:	frstor [edx+0x0]
	...
  41b05d:	add    BYTE PTR [eax],al
  41b05f:	add    dh,bh
  41b061:	and    eax,ebp
  41b063:	jno    0x41b011
  41b065:	cwde   
  41b066:	call   0xe8406995
  41b06b:	jno    0x41b019
  41b06d:	sbb    ebx,edx
  41b06f:	jmp    FWORD PTR [eax-0x4eb72302]
  41b075:	add    al,0xee
  41b077:	lods   eax,DWORD PTR ds:[si]
  41b079:	add    al,0xdf
  41b07b:	(bad)  
  41b07c:	fiadd  WORD PTR [eiz*8-0x4ef209e]
  41b083:	jne    0x41b036
  41b085:	pop    ebp
  41b086:	sub    DWORD PTR [ebx],esp
  41b088:	test   al,0x94
  41b08a:	dec    ebx
  41b08b:	aad    0xd1
  41b08d:	dec    eax
  41b08e:	das    
  41b08f:	add    al,0xc8
  41b091:	ja     0x41b0de
  41b093:	out    dx,eax
  41b094:	xor    DWORD PTR [edi+0x2d],0xffffffd0
  41b098:	push   ebx
  41b099:	xchg   esp,eax
  41b09a:	xor    ch,bl
  41b09c:	jg     0x41b115
  41b09e:	xor    ch,BYTE PTR [edx]
  41b0a0:	je     0x41b111
  41b0a2:	dec    ebx
  41b0a3:	add    al,0x41
  41b0a5:	ja     0x41b0e8
  41b0a7:	and    al,0x48
  41b0a9:	jae    0x41b0be
  41b0ab:	jecxz  0x41b088
  41b0ad:	dec    esp
  41b0ae:	push   es
  41b0af:	loope  0x41b11b
  41b0b1:	jb     0x41b072
  41b0b3:	mov    edi,0x400686a
  41b0b8:	pop    ebp
  41b0b9:	inc    ebx
  41b0ba:	cmp    ebp,ebx
  41b0bc:	aas    
  41b0bd:	ja     0x41b07e
  41b0bf:	loope  0x41b0e1
  41b0c1:	data16 or al,0xe3
	...
  41b0d8:	pop    ds
  41b0d9:	mov    ah,0xb2
  41b0db:	add    ebx,DWORD PTR [eax]
  41b0dd:	jae    0x41b0a0
  41b0df:	out    0x2e,eax
  41b0e1:	xchg   esp,eax
  41b0e2:	pop    ss
  41b0e3:	add    al,0x6b
  41b0e5:	xchg   esp,eax
  41b0e6:	inc    DWORD PTR [ebx]
  41b0e8:	int    0x4f
  41b0ea:	xchg   ebp,eax
  41b0eb:	aam    0xdf
  41b0ed:	inc    edx
  41b0ee:	mov    al,ds:0xdf48c9ca
  41b0f3:	rcr    ebp,cl
  41b0f5:	dec    ebp
  41b0f6:	lods   al,BYTE PTR ds:[esi]
  41b0f7:	ret    0x3dbd
  41b0fa:	(bad)  
  41b0fc:	ror    DWORD PTR [ebp-0x50],1
  41b0ff:	into   
  41b100:	into   
  41b101:	xchg   esp,eax
  41b102:	mov    ds:0xaa53cecb,al
  41b107:	add    edx,edx
  41b109:	dec    edi
  41b10a:	mov    cl,0xbe
  41b10c:	retf   0xbd57
  41b10f:	add    ecx,DWORD PTR [eax+esi*2+0x6eaae086]
  41b116:	or     BYTE PTR [edx-0x71],bh
  41b119:	jno    0x41b195
  41b11b:	sub    BYTE PTR [edi+esi*2],0x66
  41b11f:	inc    esi
  41b120:	sub    esp,DWORD PTR [esi+0x64]
  41b123:	jmp    0x5abaf047
  41b128:	std    
  41b129:	jo     0x41b1a5
  41b12b:	inc    ebp
  41b12c:	in     eax,0x69
  41b12e:	addr16 push ebp
  41b130:	jmp    0x41b1a4
  41b132:	or     BYTE PTR [ecx+edi*8],dh
  41b135:	jb     0x41b1b1
  41b137:	inc    edi
  41b138:	out    dx,eax
  41b139:	push   0x6b
  41b13b:	push   cs
	...
  41b150:	fidivr WORD PTR [esi]
  41b152:	fs sbb al,0xbb
  41b155:	fild   QWORD PTR [edx+0x15]
  41b158:	fcomp  DWORD PTR [ebp+0x6c8fc625]
  41b15e:	jl     0x41b175
  41b160:	mov    eax,0x8fd6259d
  41b165:	ins    BYTE PTR es:[edi],dx
  41b166:	jl     0x41b15d
  41b168:	mov    edi,0x74c63264
  41b16d:	xchg   esp,eax
  41b16e:	push   esp
  41b16f:	es mov ch,0x70
  41b172:	ins    DWORD PTR es:[edi],dx
  41b173:	aad    0xba
  41b175:	cmp    ecx,DWORD PTR [ecx-0x2f]
  41b178:	cdq    
  41b179:	jo     0x41b1de
  41b17b:	int3   
  41b17c:	pop    DWORD PTR [eax+0x49]
  41b17f:	sar    DWORD PTR [ecx+0x70],0x63
  41b183:	shr    BYTE PTR [edx+0x6a],1
  41b186:	or     BYTE PTR [ebp-0x398588b8],bl
  41b18c:	jb     0x41b200
  41b18e:	pop    eax
  41b18f:	mov    ebp,0xba086472
  41b194:	fs jns 0x41b213
  41b197:	xchg   esi,eax
  41b198:	outs   dx,BYTE PTR ds:[esi]
  41b199:	imul   esi,DWORD PTR gs:[ebp+0x7e7a7750],0x2a
  41b1a1:	jb     0x41b1fb
  41b1a3:	add    BYTE PTR [ecx],ah
  41b1a5:	out    dx,al
  41b1a6:	ja     0x41b1a8
  41b1a8:	cld    
  41b1a9:	in     al,dx
  41b1aa:	ja     0x41b220
  41b1ac:	adc    al,0xf7
  41b1ae:	pusha  
  41b1af:	pop    edi
  41b1b0:	jmp    0x42289e
	...
  41b1c5:	add    BYTE PTR [eax],al
  41b1c7:	add    cl,dl
  41b1c9:	shl    BYTE PTR [esi+0x6f],cl
  41b1cc:	shl    cl,0x79
  41b1cf:	ins    DWORD PTR es:[edi],dx
  41b1d0:	cmc    
  41b1d1:	mov    BYTE PTR [edx+0x69],0x56
  41b1d5:	lock jbe 0x41b247
  41b1d8:	pusha  
  41b1d9:	cmc    
  41b1da:	hlt    
  41b1db:	pop    ebx
  41b1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1dd:	mul    DWORD PTR [ecx+0x6f]
  41b1e0:	pop    ecx
  41b1e1:	div    esp
  41b1e3:	pop    ebx
  41b1e4:	xchg   edi,esi
  41b1e6:	imul   esp,DWORD PTR [bx+si+0x60f5],0x74
  41b1ec:	in     eax,0xc9
  41b1ee:	and    DWORD PTR [ebp-0x68],ecx
  41b1f1:	in     al,dx
  41b1f2:	imul   ebp,DWORD PTR [edi-0x3d],0xe04b5492
  41b1f9:	retf   
  41b1fa:	imul   ebp,DWORD PTR [eax+ecx*4-0x9],0xc8810062
  41b202:	jbe    0x41b273
  41b204:	mov    esi,ecx
  41b206:	pusha  
  41b207:	gs mov dh,0x92
  41b20a:	dec    ecx
  41b20b:	jo     0x41b1c9
  41b20d:	icebp  
  41b20e:	hlt    
  41b20f:	pop    ebx
  41b210:	cmp    dl,ah
  41b212:	ins    DWORD PTR es:[edi],dx
  41b213:	arpl   WORD PTR [ecx],si
  41b215:	aad    0x64
  41b217:	imul   eax,DWORD PTR [esi-0x6e],0xc0447457
  41b21e:	push   0x2d
  41b220:	cmp    ecx,esi
  41b222:	inc    esp
  41b223:	add    BYTE PTR [esi],ah
  41b225:	icebp  
  41b226:	js     0x41b28d
  41b228:	div    BYTE PTR [edi+0x6e6d]
	...
  41b23e:	add    BYTE PTR [eax],al
  41b240:	cld    
  41b241:	xchg   ecx,eax
  41b242:	push   esp
  41b243:	push   ebx
  41b244:	mov    WORD PTR [eiz*8-0x2314409e],ss
  41b24b:	push   ebp
  41b24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b24d:	pop    edx
  41b24e:	in     al,0x60
  41b250:	mov    ds:0xb14b2910,eax
  41b255:	pmulhuw mm3,QWORD PTR [esi-0x74]
  41b259:	sbb    eax,0xeb9c73d3
  41b25e:	fcos   
  41b260:	test   al,0xeb
  41b262:	in     al,0xff
  41b264:	jg     0x41b251
  41b266:	jecxz  0x41b267
  41b268:	jno    0x41b255
  41b26a:	aad    0xff
  41b26c:	jle    0x41b259
  41b26e:	or     BYTE PTR [eax],al
  41b270:	push   eax
  41b271:	mov    dh,0xe0
  41b273:	ins    BYTE PTR es:[edi],dx
  41b274:	outs   dx,BYTE PTR ds:[esi]
  41b275:	dec    esp
  41b276:	loopne 0x41b297
  41b278:	dec    eax
  41b279:	sahf   
  41b27a:	in     eax,0x6d
  41b27c:	push   0x6963eb86
  41b281:	jns    0x41b28f
  41b283:	push   ecx
  41b284:	pop    ecx
  41b285:	aad    0xeb
  41b287:	jno    0x41b2b8
  41b289:	xchg   ebx,eax
  41b28a:	or     al,0x46
  41b28c:	ds nop
  41b28e:	stc    
  41b28f:	addr16 dec edx
  41b291:	xchg   esp,ebx
  41b293:	(bad)  
  41b294:	jns    0x41b310
  41b296:	mov    edi,0xe0a98c45
  41b29b:	pop    esi
  41b29c:	push   ss
  41b29d:	shl    BYTE PTR [edx-0x614e38d],1
  41b2a3:	data16 add BYTE PTR [eax],al
	...
  41b2b6:	add    BYTE PTR [eax],al
  41b2b8:	add    cl,dl
  41b2ba:	sub    ah,BYTE PTR [ebp+ebp*8-0x39]
  41b2be:	or     BYTE PTR [ebp+ebp*8+0x1a],cl
  41b2c2:	in     eax,0x4f
  41b2c4:	in     eax,dx
  41b2c5:	sbb    bh,dl
  41b2c7:	je     0x41b2c4
  41b2c9:	sbb    ebp,edx
  41b2cb:	call   edi
  41b2cd:	int3   
  41b2ce:	stc    
  41b2cf:	jae    0x41b29e
  41b2d1:	xchg   esp,eax
  41b2d2:	sbb    edi,0xffffffdd
  41b2d5:	ja     0x41b269
  41b2d7:	repnz dec ebx
  41b2d9:	dec    ecx
  41b2da:	xor    dl,0xbf
  41b2dd:	inc    edi
  41b2de:	xchg   edx,eax
  41b2df:	loopne 0x41b29e
  41b2e1:	xchg   esp,eax
  41b2e2:	mov    ebx,0x8f68bce4
  41b2e7:	out    0x9d,al
  41b2e9:	push   0x76b0d2df
  41b2ee:	jnp    0x41b2de
  41b2f0:	mov    edx,0xc9d84462
  41b2f5:	jo     0x41b337
  41b2f7:	icebp  
  41b2f8:	jae    0x41b33e
  41b2fa:	inc    esp
  41b2fb:	jecxz  0x41b371
  41b2fd:	inc    eax
  41b2fe:	and    eax,ebp
  41b300:	pop    edx
  41b301:	pop    edx
  41b302:	inc    esp
  41b303:	mov    esi,0xd113647f
  41b308:	outs   dx,BYTE PTR ds:[esi]
  41b309:	push   0x7571eb33
  41b30e:	xor    al,BYTE PTR [eax+edi*1]
  41b311:	push   edx
  41b312:	sbb    esp,ebx
  41b314:	push   ebp
  41b315:	ja     0x41b344
  41b317:	lock cmp edx,DWORD PTR [ebp+ecx*8+0xdd]
	...
  41b32f:	add    BYTE PTR [ebx],dh
  41b331:	jo     0x41b312
  41b333:	mov    ebp,0x28da445f
  41b338:	bound  edx,QWORD PTR [eax+0x18]
  41b33b:	out    0x34,al
  41b33d:	inc    eax
  41b33e:	bnd jmp 0x41b36f
  41b341:	jo     0x41b336
  41b343:	xlat   BYTE PTR ds:[ebx]
  41b344:	sub    BYTE PTR [esp+eax*8-0x1b],ah
  41b348:	aaa    
  41b349:	jno    0x41b311
  41b34b:	out    0xf6,al
  41b34d:	jne    0x41b31c
  41b34f:	fild   WORD PTR [ebx-0x204249ad]
  41b355:	inc    esp
  41b356:	ffreep st(0)
  41b358:	loopne 0x41b3c4
  41b35a:	(bad)
  41b35d:	pusha  
  41b35e:	or     al,al
  41b360:	push   0x6bff796a
  41b365:	fs jl  0x41b351
  41b368:	pushf  
  41b369:	push   eax
  41b36a:	and    esp,DWORD PTR [edi-0x65f7b3a5]
  41b370:	ss push 0x73719a6b
  41b376:	xchg   ax,ax
  41b378:	(bad)  
  41b379:	cmp    BYTE PTR [ecx],bh
  41b37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b37c:	jb     0x41b3d0
  41b37e:	pop    esp
  41b37f:	cdq    
  41b380:	(bad)  
  41b381:	cmp    BYTE PTR [ecx-0x80],bl
  41b384:	sub    esi,DWORD PTR [edi+0x4c]
  41b387:	dec    esp
  41b388:	sbb    eax,0xeb4f6d73
  41b38d:	or     BYTE PTR gs:[edx],bh
  41b390:	leave  
  41b391:	push   ecx
  41b392:	pop    esp
  41b393:	add    BYTE PTR ss:[eax],al
	...
  41b3a6:	add    BYTE PTR [eax],al
  41b3a8:	iret   
  41b3a9:	inc    ebp
  41b3aa:	dec    ebx
  41b3ab:	and    eax,0x3a676fcd
  41b3b0:	fnsave [esi+0x79]
  41b3b3:	adc    eax,0x447862bc
  41b3b8:	les    esi,FWORD PTR [edx+0x6a]
  41b3bb:	inc    ebp
  41b3bc:	aad    0x51
  41b3be:	das    
  41b3bf:	fnstcw WORD PTR [ebx-0x5b]
  41b3c2:	dec    ecx
  41b3c3:	rol    DWORD PTR [edi-0x628b151],1
  41b3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ca:	and    edi,DWORD PTR [eax-0x33b85481]
  41b3d0:	into   
  41b3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3d2:	dec    ecx
  41b3d3:	mov    al,0x6a
  41b3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3d6:	xor    BYTE PTR [ecx+0x1b4aa65f],bh
  41b3dc:	shl    BYTE PTR [edi+0x5e4da72f],cl
  41b3e2:	push   esp
  41b3e3:	sbb    BYTE PTR [edx+0x541954a6],ch
  41b3e9:	pusha  
  41b3ea:	pop    edi
  41b3eb:	add    BYTE PTR [ebx-0x5c],bl
  41b3ee:	cmp    al,BYTE PTR [eax]
  41b3f0:	xor    dh,dh
  41b3f2:	ja     0x41b46d
  41b3f4:	xor    ecx,ebx
  41b3f6:	inc    esp
  41b3f7:	add    BYTE PTR [ecx],cl
  41b3f9:	shr    DWORD PTR [ecx+0x74],1
  41b3fc:	push   ss
  41b3fd:	div    BYTE PTR [esi+0x61]
  41b400:	sbb    edi,DWORD PTR [eax-0x46e2d20c]
  41b406:	fs add bl,bh
  41b409:	in     al,0x68
  41b40b:	jo     0x41b40d
	...
  41b41d:	add    BYTE PTR [eax],al
  41b41f:	add    BYTE PTR ds:0xf85249cb,ah
  41b425:	ret    
  41b426:	push   esi
  41b427:	push   esi
  41b428:	dec    edx
  41b429:	lods   eax,DWORD PTR ds:[esi]
  41b42a:	or     BYTE PTR [eax+0x4],dh
  41b42d:	in     al,0x77
  41b42f:	ja     0x41b3eb
  41b431:	loop   0x41b49b
  41b433:	and    BYTE PTR [eax-0x609dcd5f],ah
  41b439:	nop
  41b43a:	jns    0x41b4af
  41b43c:	push   eax
  41b43d:	loop   0x41b4a1
  41b43f:	popa   
  41b440:	pop    eax
  41b441:	in     eax,dx
  41b442:	cs jae 0x41b3d4
  41b445:	nop
  41b446:	outs   dx,BYTE PTR ds:[esi]
  41b447:	jne    0x41b492
  41b449:	hlt    
  41b44a:	adc    al,0x61
  41b44c:	push   ecx
  41b44d:	in     al,dx
  41b44e:	jbe    0x41b4b5
  41b450:	jbe    0x41b435
  41b452:	cs jae 0x41b404
  41b455:	xchg   esi,eax
  41b456:	add    BYTE PTR es:[ecx+0x764d56cd],al
  41b45d:	ret    0x2f5a
  41b460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b461:	int3   
  41b462:	pop    eax
  41b463:	push   eax
  41b464:	aad    0xd4
  41b466:	arpl   WORD PTR [edi-0x4b],si
  41b469:	int3   
  41b46a:	pop    eax
  41b46b:	push   eax
  41b46c:	jnp    0x41b465
  41b46e:	jnp    0x41b470
  41b470:	mov    dh,0xb7
  41b472:	js     0x41b4d9
  41b474:	data16 mov ah,0x70
  41b477:	ins    DWORD PTR es:[edi],dx
  41b478:	mov    edi,cs
  41b47a:	or     BYTE PTR [ecx-0x35],dl
  41b47d:	xor    ebp,ebx
  41b47f:	push   esp
  41b480:	int    0xfd
  41b482:	mov    edi,0x5b
	...
  41b497:	add    BYTE PTR [esi-0x4e931536],bh
  41b49d:	sub    ebp,ebx
  41b49f:	dec    edi
  41b4a0:	lods   al,BYTE PTR ds:[esi]
  41b4a1:	fisub  WORD PTR [esi]
  41b4a3:	xor    eax,0x71ee1eb0
  41b4a8:	mov    ch,0xfb
  41b4aa:	cld    
  41b4ab:	jo     0x41b439
  41b4ad:	push   ds
  41b4ae:	retf   0xe045
  41b4b1:	and    cl,ah
  41b4b3:	push   ecx
  41b4b4:	leave  
  41b4b5:	das    
  41b4b6:	fld    TBYTE PTR [esi+ebp*4+0xa]
  41b4ba:	sub    BYTE PTR [esi-0x48],al
  41b4bd:	sti    
  41b4be:	sub    BYTE PTR [ecx],dh
  41b4c0:	push   0x22
  41b4c2:	lds    eax,FWORD PTR [ebp-0x48]
  41b4c5:	frstor [edx+0x7e]
  41b4c9:	inc    ecx
  41b4ca:	fbstp  TBYTE PTR [ecx+0x7f]
  41b4cd:	jmp    0x41b48d
  41b4cf:	push   ebx
  41b4d0:	pop    esp
  41b4d1:	mov    ecx,ebp
  41b4d3:	ins    BYTE PTR es:[edi],dx
  41b4d4:	jns    0x41b517
  41b4d6:	lock call DWORD PTR [ecx+0x7f]
  41b4da:	fcomp  QWORD PTR [edi]
  41b4dc:	dec    edx
  41b4dd:	push   esp
  41b4de:	call   0xc916645
  41b4e3:	push   eax
  41b4e4:	ins    DWORD PTR es:[edi],dx
  41b4e5:	jle    0x41b4e4
  41b4e7:	je     0x41b524
  41b4e9:	jge    0x41b4cb
  41b4eb:	call   FWORD PTR [esi-0x78]
  41b4ee:	(bad)  
  41b4ef:	jne    0x41b522
  41b4f1:	jge    0x41b4bd
  41b4f3:	pop    esi
  41b4f4:	and    DWORD PTR [eax-0x6fe0acf4],ecx
  41b4fa:	inc    BYTE PTR [esi+0x0]
	...
  41b50d:	add    BYTE PTR [eax],al
  41b50f:	add    BYTE PTR [eax-0x15],cl
  41b512:	mov    bl,0x6d
  41b514:	and    eax,0x205ed3df
  41b519:	xchg   esp,eax
  41b51a:	mov    ds:0xc26ffddc,eax
  41b51f:	div    eax
  41b521:	data16 fadd DWORD PTR [ebx]
  41b524:	fsubr  QWORD PTR [ecx-0x2f]
  41b527:	test   ecx,0xeee5dc5f
  41b52d:	data16 (bad) 
  41b530:	out    dx,al
  41b531:	data16 mov ch,0xe8
  41b534:	fld    QWORD PTR [eax-0x48]
  41b537:	repz out dx,al
  41b539:	xchg   esp,eax
  41b53a:	out    dx,eax
  41b53b:	add    ecx,DWORD PTR [esp+edx*4-0x6b7d2321]
  41b542:	mov    eax,ebp
  41b544:	or     dl,BYTE PTR [edi+0x60]
  41b547:	retf   0xa9c7
  41b54a:	xor    eax,0x734914c
  41b54f:	push   0xccac723d
  41b554:	sbb    esp,DWORD PTR [ebx-0x599dc74b]
  41b55a:	sub    BYTE PTR [edx],ah
  41b55c:	mov    ebp,0x9633dfa1
  41b561:	xchg   edx,eax
  41b562:	out    0x1c,eax
  41b564:	xchg   edx,eax
  41b565:	xchg   ebx,eax
  41b566:	in     al,dx
  41b567:	push   es
  41b568:	mov    DWORD PTR [ebp+0x693d03e2],edx
  41b56e:	dec    ebp
  41b56f:	clc    
  41b570:	pop    eax
  41b571:	jae    0x41b5a4
  41b573:	out    0x0,eax
	...
  41b585:	add    BYTE PTR [eax],al
  41b587:	add    BYTE PTR [edi],dh
  41b589:	dec    eax
  41b58a:	dec    eax
  41b58b:	loop   0x41b5bf
  41b58d:	gs and eax,0x32385bd8
  41b593:	fstp   TBYTE PTR [edi]
  41b595:	outs   dx,DWORD PTR ds:[esi]
  41b596:	mov    edi,0x6a5abe
  41b59b:	jmp    0xbc211bce
  41b5a0:	cmp    BYTE PTR [ebp-0x5],ah
  41b5a3:	add    edi,DWORD PTR [edi]
  41b5a5:	or     BYTE PTR gs:[edx+eiz*4],cl
  41b5a9:	fadd   DWORD PTR [eax+ecx*1-0x67]
  41b5ad:	arpl   WORD PTR [eax],cx
  41b5af:	mov    ecx,0xe97c666c
  41b5b4:	pop    ecx
  41b5b5:	jae    0x41b61a
  41b5b7:	mov    BYTE PTR [ebx+0x56a52873],0x66
  41b5be:	or     BYTE PTR [ebp-0x3b95a0b0],ah
  41b5c4:	pop    ecx
  41b5c5:	je     0x41b642
  41b5c7:	retf   0xd838
  41b5ca:	and    al,ch
  41b5cc:	pop    edx
  41b5cd:	jne    0x41b630
  41b5cf:	jmp    0x9bad1b16
  41b5d4:	ins    DWORD PTR es:[edi],dx
  41b5d5:	jne    0x41b63c
  41b5d7:	xchg   DWORD PTR ds:0x63e96d6f,esp
  41b5dd:	imul   edi,DWORD PTR gs:[ebp+0x23],0x6f
  41b5e2:	data16 xchg BYTE PTR [edi+0x66],ch
  41b5e6:	test   BYTE PTR [bp+si],dh
  41b5e9:	fwait
  41b5ea:	sub    ch,cl
	...
  41b600:	imul   edx,DWORD PTR [esi+edi*2+0x6b62ec48],0x5994aa1c
  41b60b:	inc    esi
  41b60c:	out    0x63,al
  41b60e:	jge    0x41b658
  41b610:	cli    
  41b611:	jb     0x41b667
  41b613:	sbb    al,bh
  41b615:	push   0x65
  41b617:	dec    edi
  41b618:	les    esi,FWORD PTR [esi]
  41b61a:	jl     0x41b65d
  41b61c:	out    dx,eax
  41b61d:	push   0x54
  41b61f:	sbb    ebx,ebx
  41b621:	inc    ebx
  41b622:	pop    esp
  41b623:	inc    eax
  41b624:	fadd   QWORD PTR [ebx+ebp*2+0x1a]
  41b628:	mov    ecx,0xc107656e
  41b62d:	xlat   BYTE PTR ds:[ebx]
  41b62e:	dec    esp
  41b62f:	(bad)  
  41b630:	mov    eax,0x94004663
  41b635:	mov    bh,0x69
  41b637:	add    BYTE PTR [eax-0x1f],bh
  41b63a:	imul   esi,DWORD PTR [edx+0x73],0xa56561f3
  41b641:	ret    
  41b642:	push   ebp
  41b643:	jae    0x41b6ab
  41b645:	fsub   QWORD PTR [ebx+0x72]
  41b648:	dec    ecx
  41b649:	xchg   ebx,eax
  41b64a:	pop    eax
  41b64b:	outs   dx,DWORD PTR ds:[esi]
  41b64c:	push   edi
  41b64d:	fild   WORD PTR [edx+0x75]
  41b650:	xor    cl,dh
  41b652:	imul   esi,DWORD PTR [edx+0x75],0x507269bf
  41b659:	mov    edx,0xbf516162
  41b65e:	jge    0x41b6d0
  41b660:	dec    eax
  41b661:	xchg   ebx,eax
  41b662:	inc    esi
  41b663:	jo     0x41b665
	...
  41b675:	add    BYTE PTR [eax],al
  41b677:	add    BYTE PTR ds:0x535058cd,ah
  41b67d:	jmp    0x41b6e0
  41b67f:	ins    BYTE PTR es:[edi],dx
  41b680:	and    eax,0x196f42c7
  41b685:	out    dx,al
  41b686:	fs popa 
  41b688:	sbb    DWORD PTR [eax+0x1f],edi
  41b68b:	add    BYTE PTR [esi],al
  41b68d:	hlt    
  41b68e:	push   0x74
  41b690:	call   0x63d0:0x16576f2
  41b697:	pop    bx
  41b699:	in     eax,dx
  41b69a:	imul   eax,DWORD PTR [ebx+0x58],0x525314e0
  41b6a1:	out    dx,al
  41b6a2:	js     0x41b71b
  41b6a4:	inc    esp
  41b6a5:	loop   0x41b710
  41b6a7:	add    BYTE PTR [ebx+0x492044bc],bh
  41b6ad:	in     eax,dx
  41b6ae:	ja     0x41b724
  41b6b0:	dec    esp
  41b6b1:	mov    dh,0x55
  41b6b3:	je     0x41b701
  41b6b5:	mov    bh,0x62
  41b6b7:	and    BYTE PTR [esi-0x77898913],ah
  41b6bd:	loop   0x41b6b3
  41b6bf:	inc    ebp
  41b6c0:	mov    WORD PTR [ecx-0x6fd7e024],ds
  41b6c6:	stc    
  41b6c7:	jae    0x41b6fe
  41b6c9:	jg     0x41b6b6
  41b6cb:	jae    0x41b702
  41b6cd:	xchg   dh,dl
  41b6cf:	pop    ds
  41b6d0:	and    edx,ebx
  41b6d2:	fbstp  TBYTE PTR [ecx-0x74]
  41b6d5:	scas   eax,DWORD PTR es:[edi]
  41b6d6:	ror    BYTE PTR [edi-0x54],1
  41b6d9:	(bad)  
  41b6da:	fbstp  TBYTE PTR [eax+0x0]
	...
  41b6ed:	add    BYTE PTR [eax],al
  41b6ef:	add    al,bh
  41b6f1:	(bad)  
  41b6f2:	rcr    BYTE PTR [esi+0x0],cl
  41b6f5:	aad    0xd5
  41b6f7:	ins    DWORD PTR es:[edi],dx
  41b6f8:	lods   al,BYTE PTR ds:[esi]
  41b6f9:	mov    ebx,0x16df70eb
  41b6fe:	(bad)  
  41b6ff:	jno    0x41b6e9
  41b701:	jmp    0x41b6cd
  41b703:	push   ebx
  41b704:	mov    esp,0xdf62e08b
  41b709:	pop    ds
  41b70a:	aam    0x6d
  41b70c:	lods   eax,DWORD PTR ds:[esi]
  41b70d:	not    ebx
  41b70f:	ins    BYTE PTR es:[edi],dx
  41b710:	mov    dl,0xcb
  41b712:	clc    
  41b713:	ins    BYTE PTR es:[edi],dx
  41b714:	mov    esi,0xd84608f7
  41b719:	sbb    ebp,DWORD PTR [ecx]
  41b71b:	fs mov cl,0x5a
  41b71e:	std    
  41b71f:	data16 mov dl,0xc
  41b722:	std    
  41b723:	stos   WORD PTR es:[edi],ax
  41b725:	or     eax,0x5fad6129
  41b72a:	in     al,dx
  41b72b:	imul   edi,DWORD PTR [ebx+0x46],0xc
  41b72f:	inc    esi
  41b730:	pop    eax
  41b731:	fwait
  41b732:	sub    al,0x70
  41b734:	jle    0x41b784
  41b736:	out    dx,al
  41b737:	pushaw 
  41b739:	push   eax
  41b73a:	stc    
  41b73b:	call   DWORD PTR [ecx+0x77]
  41b73e:	fcom   QWORD PTR [eax+0x74]
  41b741:	push   eax
  41b742:	call   0xf08743b2
  41b747:	outs   dx,DWORD PTR ds:[esi]
  41b748:	pop    edi
  41b749:	push   ebx
  41b74a:	fild   QWORD PTR [ebx+0x38]
  41b74d:	xchg   esp,eax
  41b74e:	fucom  st(5)
  41b750:	cmp    al,0x6b
  41b752:	(bad)  
	...
  41b768:	sub    BYTE PTR [esi+0x13],ch
  41b76b:	not    DWORD PTR [edx+0x62]
  41b76e:	or     al,0xd0
  41b770:	push   esi
  41b771:	push   ebx
  41b772:	adc    ah,BYTE PTR [ecx]
  41b774:	cmp    eax,0x37f80d65
  41b779:	dec    esi
  41b77a:	adc    edx,esp
  41b77c:	dec    edx
  41b77d:	or     ax,0xe7df
  41b781:	inc    ecx
  41b782:	(bad)  
  41b783:	idiv   esi
  41b785:	fs ffreep st(7)
  41b788:	fisub  DWORD PTR [eax-0x40]
  41b78b:	(bad)  
  41b78c:	jmp    0x8f40:0xd1cfdf62
  41b793:	mov    esp,0x3c66ef1
  41b798:	mov    ebp,0xeef5b16f
  41b79d:	bound  edx,QWORD PTR [ebx-0x229f4324]
  41b7a3:	jmp    0x41b75b
  41b7a5:	push   0x5caebddf
  41b7aa:	xchg   esp,eax
  41b7ab:	repnz leave 
  41b7ad:	imul   esi,DWORD PTR [ebx-0x18],0x2b
  41b7b1:	outs   dx,DWORD PTR ds:[esi]
  41b7b2:	jae    0x41b7a7
  41b7b4:	pushf  
  41b7b5:	imul   edi,DWORD PTR [ebx-0x18],0x69
  41b7b9:	imul   ecx,DWORD PTR [ebp-0x7fb0ec24],0xfffffff2
  41b7c0:	jg     0x41b803
  41b7c2:	push   ebx
  41b7c3:	fnsave [ecx+0x6f]
  41b7c6:	inc    ecx
  41b7c8:	jge    0x41b82f
  41b7ca:	push   esi
  41b7cb:	icebp  
	...
  41b7e0:	outs   dx,BYTE PTR ds:[esi]
  41b7e1:	(bad)  
  41b7e2:	ffreep st(5)
  41b7e4:	aas    
  41b7e5:	inc    esp
  41b7e6:	cmp    ebx,ebx
  41b7e8:	pop    esp
  41b7e9:	pusha  
  41b7ea:	add    eax,0x8946de8
  41b7ef:	adc    eax,0x3d783613
  41b7f4:	mov    bl,0x43
  41b7f6:	jl     0x41b814
  41b7f8:	mov    ah,0x6d
  41b7fa:	gs cmp eax,0x67a6ccd
  41b800:	shl    DWORD PTR [ecx+0x58],cl
  41b803:	std    
  41b804:	mov    ds:0xc11a0863,al
  41b809:	outs   dx,BYTE PTR ds:[esi]
  41b80a:	jl     0x41b802
  41b80c:	scas   al,BYTE PTR es:[edi]
  41b80d:	bound  ebp,QWORD PTR [ebx+0x15]
  41b810:	shr    BYTE PTR [ebp+0x69],cl
  41b813:	(bad)  
  41b814:	scas   eax,DWORD PTR es:[edi]
  41b815:	pop    edi
  41b816:	shr    BYTE PTR [bx+0x6555],cl
  41b81b:	int3   
  41b81c:	jg     0x41b865
  41b81e:	jl     0x41b7e0
  41b820:	push   ecx
  41b821:	cmp    DWORD PTR [esi+esi*4+0x46],edx
  41b825:	inc    edx
  41b826:	push   edx
  41b827:	rcr    BYTE PTR [edi+0x70],1
  41b82a:	dec    esi
  41b82b:	xchg   ebp,eax
  41b82c:	aas    
  41b82d:	aam    0x59
  41b82f:	(bad)  
  41b830:	imul   ecx,DWORD PTR [eax+0x7d],0x54373dc8
  41b837:	mov    bh,0x66
  41b839:	xor    eax,0x72fac965
  41b83e:	popa   
  41b83f:	leave  
  41b840:	dec    esp
  41b841:	inc    ecx
  41b842:	arpl   WORD PTR [ecx+0x0],bx
	...
  41b858:	and    cl,BYTE PTR [eax+0x5f]
  41b85b:	xchg   edi,eax
  41b85c:	sub    BYTE PTR [eax+0x5d],dh
  41b85f:	nop
  41b860:	cmp    DWORD PTR [esi+0x5f],ebp
  41b863:	jns    0x41b8a8
  41b865:	aas    
  41b866:	jp     0x41b8dc
  41b868:	fstp   TBYTE PTR ds:0xd3fd4b65
  41b86e:	pop    ecx
  41b86f:	push   eax
  41b870:	hlt    
  41b871:	or     BYTE PTR ss:[edi*8-0x2bdf85ca],bh
  41b879:	sar    DWORD PTR [eax+eax*1+0x53],cl
  41b87d:	mov    ah,0x55
  41b87f:	addr16 xchg esi,eax
  41b881:	cwde   
  41b882:	pop    eax
  41b883:	outs   dx,DWORD PTR ds:[esi]
  41b884:	xchg   edi,eax
  41b885:	int3   
  41b886:	hlt    
  41b887:	inc    ebp
  41b888:	mov    dh,BYTE PTR [eax+ebp*2+0x2698a765]
  41b88f:	ja     0x41b830
  41b891:	mov    edx,0xf28c76f4
  41b896:	imul   edi,DWORD PTR [eax-0x28],0xba220875
  41b89d:	or     DWORD PTR [eax],0x62b76c5c
  41b8a3:	fs add al,0xf4
  41b8a7:	dec    esp
  41b8a8:	jl     0x41b921
  41b8aa:	dec    esi
  41b8ab:	push   esp
  41b8ac:	inc    ebp
  41b8ad:	xchg   edi,eax
  41b8ae:	js     0x41b922
  41b8b0:	dec    edx
  41b8b1:	in     eax,dx
  41b8b2:	imul   esp,DWORD PTR [ebx+0x51],0x4c6e6db1
  41b8b9:	xchg   edi,eax
  41b8ba:	es js  0x41b8bd
	...
  41b8cd:	add    BYTE PTR [eax],al
  41b8cf:	add    BYTE PTR [eax],bh
  41b8d1:	repz hlt 
  41b8d3:	jp     0x41b937
  41b8d5:	mov    ecx,DWORD PTR [esi+0x46]
  41b8d8:	push   esp
  41b8d9:	mov    BYTE PTR [edi],dh
  41b8db:	xor    BYTE PTR [eax-0x2b],cl
  41b8de:	and    eax,0x3cb26746
  41b8e3:	inc    esp
  41b8e4:	sub    eax,0x5739217f
  41b8e9:	mov    DWORD PTR [edx+0x2d],ecx
  41b8ec:	inc    esp
  41b8ed:	mov    bh,BYTE PTR [esi]
  41b8ef:	cmp    bl,dh
  41b8f1:	aad    0x49
  41b8f3:	ss aam 0xda
  41b8f6:	inc    esi
  41b8f7:	aaa    
  41b8f8:	cwde   
  41b8f9:	xchg   edi,eax
  41b8fa:	inc    esi
  41b8fb:	outs   dx,DWORD PTR ds:[esi]
  41b8fc:	xor    DWORD PTR [esi-0x513aabb6],0x6c
  41b903:	(bad)  
  41b904:	in     eax,0xda
  41b906:	dec    ebp
  41b907:	dec    esi
  41b908:	mov    WORD PTR [esi+0x6a6065d1],cs
  41b90e:	jmp    0x41b981
  41b910:	imul   edi,DWORD PTR [ecx-0x4e],0xca5c626c
  41b917:	push   ebx
  41b918:	cmp    al,0xbd
  41b91a:	push   cs
  41b91b:	ins    DWORD PTR es:[edi],dx
  41b91c:	xor    DWORD PTR [ebp+ebp*8+0x60],ebx
  41b920:	xor    esi,DWORD PTR [eax-0x71738c2e]
  41b926:	jmp    0x41b993
  41b928:	cmp    BYTE PTR [ebp-0x4273fff8],bh
  41b92e:	or     BYTE PTR [eax],al
  41b930:	mov    WORD PTR [ebp+0x1e],?
	...
  41b946:	add    BYTE PTR [eax],al
  41b948:	pop    eax
  41b949:	loop   0x41b953
  41b94b:	cmp    al,0x3c
  41b94d:	jp     0x41b92b
  41b94f:	xor    bl,ch
  41b951:	stos   DWORD PTR es:[edi],eax
  41b952:	jmp    0x41b9c4
  41b954:	push   edx
  41b956:	shl    DWORD PTR [ecx-0x10],1
  41b959:	lods   eax,DWORD PTR ds:[esi]
  41b95a:	or     al,0x3c
  41b95c:	(bad)  
  41b95e:	les    ecx,FWORD PTR [edi-0x35]
  41b961:	or     ebp,esp
  41b963:	jo     0x41b944
  41b965:	adc    dl,dl
  41b967:	jno    0x41b959
  41b969:	int    0x8
  41b96b:	cmp    al,0xc5
  41b96d:	clc    
  41b96e:	retf   
  41b96f:	dec    edi
  41b970:	jmp    0x41b99d
  41b972:	in     al,dx
  41b973:	jo     0x41b934
  41b975:	xor    dl,dl
  41b977:	jno    0x41b929
  41b979:	in     eax,dx
  41b97a:	or     BYTE PTR [esp+eax*8],bh
  41b97d:	pextrw ecx,(bad),0xc5
  41b97f:	dec    edi
  41b980:	fstp   DWORD PTR [esp+edx*8]
  41b983:	imul   eax,ebx,0x2b
  41b986:	in     al,dx
  41b987:	jo     0x41b928
  41b989:	dec    edx
  41b98a:	shl    BYTE PTR [ecx-0x58],cl
  41b98d:	or     eax,0x30680009
  41b992:	aam    0x60
  41b994:	jle    0x41b92a
  41b996:	pop    esi
  41b997:	imul   DWORD PTR [eax+0x3a]
  41b99a:	pop    ebx
  41b99b:	enter  0x3b58,0x4d
  41b99f:	loopne 0x41ba19
  41b9a1:	dec    ecx
  41b9a2:	push   edx
  41b9a3:	and    al,0x50
  41b9a5:	cmp    esi,DWORD PTR ds:0x405f7be1
  41b9ab:	fld    QWORD PTR [eax]
	...
  41b9bd:	add    BYTE PTR [eax],al
  41b9bf:	add    BYTE PTR [edi-0x6c],ah
  41b9c2:	adc    bl,bl
  41b9c4:	xor    DWORD PTR [eax+0x3e],ecx
  41b9c7:	in     eax,0x3d
  41b9c9:	aaa    
  41b9ca:	dec    ebx
  41b9cb:	mov    ecx,0xdb113532
  41b9d0:	cmp    al,0x41
  41b9d2:	add    eax,0x86947f0
  41b9d7:	fisubr DWORD PTR [edi]
  41b9d9:	inc    ecx
  41b9da:	div    dh
  41b9dc:	jnp    0x41ba3e
  41b9de:	sbb    dl,dh
  41b9e0:	cs je  0x41ba0f
  41b9e3:	in     eax,0xf2
  41b9e5:	inc    eax
  41b9e6:	ffreep st(7)
  41b9e8:	(bad)  
  41b9e9:	cmp    eax,edx
  41b9eb:	cmc    
  41b9ec:	call   0x238036
  41b9f1:	jo     0x41b9a9
  41b9f3:	fdiv   st(1),st
  41b9f5:	cmp    BYTE PTR [esi-0x438b230e],dh
  41b9fb:	in     al,0xf2
  41b9fd:	inc    eax
  41b9fe:	(bad)  
  41ba00:	loopne 0x41ba3c
  41ba02:	mov    bl,0xf2
  41ba04:	jmp    0x823b:0xd6c7cc46
  41ba0b:	cmc    
  41ba0c:	test   al,0x45
  41ba0e:	xchg   cl,ah
  41ba10:	mov    edi,0xb9dcb670
  41ba15:	cmp    BYTE PTR [esi-0xe],dh
  41ba18:	pushf  
  41ba19:	je     0x41b9d7
  41ba1b:	in     al,0xb2
  41ba1d:	inc    eax
  41ba1e:	(bad)  
  41ba20:	mov    al,ds:0x7d083a
	...
  41ba35:	add    BYTE PTR [eax],al
  41ba37:	add    dh,bh
  41ba39:	jno    0x41bab5
  41ba3b:	test   bl,cl
  41ba3d:	bound  ebx,QWORD PTR [edi+0x54]
  41ba40:	iret   
  41ba41:	inc    edx
  41ba42:	jl     0x41ba9e
  41ba44:	les    edx,FWORD PTR [edx+0x3a]
  41ba47:	xor    eax,0x557c35c1
  41ba4c:	(bad)  
  41ba4d:	ds ins DWORD PTR es:[edi],dx
  41ba4f:	cmp    dl,BYTE PTR [eax-0x10ca98a8]
  41ba55:	push   esp
  41ba56:	pop    edi
  41ba57:	cmp    edx,DWORD PTR [eax-0x50ca98a8]
  41ba5d:	push   esp
  41ba5e:	pop    edi
  41ba5f:	sbb    edx,edx
  41ba61:	jno    0x41bac4
  41ba63:	jmp    0x5a12c62
  41ba68:	mov    dl,0x3f
  41ba6a:	jo     0x41ba2b
  41ba6c:	(bad)  
  41ba6d:	ds pop edi
  41ba6f:	jmp    0xf5affa34
  41ba74:	pushf  
  41ba75:	jno    0x41baf1
  41ba77:	or     al,0x54
  41ba79:	pusha  
  41ba7a:	or     ah,BYTE PTR gs:[ebp-0x50]
  41ba7e:	pop    ecx
  41ba7f:	loopne 0x41ba01
  41ba81:	inc    esp
  41ba82:	imul   ecx,esp,0x78
  41ba85:	mov    al,0x3f
  41ba87:	(bad)  
  41ba88:	jo     0x41ba5a
  41ba8a:	inc    esp
  41ba8b:	enter  0x3873,0x8
  41ba8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba90:	aas    
  41ba91:	inc    ecx
  41ba92:	imul   ecx,esi,0xbd794738
  41ba98:	push   0x3b
  41ba9a:	rol    BYTE PTR es:[eax],0x0
	...
  41baae:	add    BYTE PTR [eax],al
  41bab0:	gs aaa 
  41bab2:	or     BYTE PTR [ecx-0x6492bebf],bh
  41bab8:	cmp    ecx,DWORD PTR cs:[eax]
  41babb:	lods   eax,DWORD PTR ds:[esi]
  41babc:	cs inc esp
  41babe:	addr16 mov ecx,0x60442e
  41bac4:	and    eax,0x26367b3
  41bac9:	mov    edi,0xad867462
  41bace:	ins    DWORD PTR es:[edi],dx
  41bacf:	outs   dx,BYTE PTR ds:[esi]
  41bad0:	or     al,0x94
  41bad2:	push   esp
  41bad3:	push   eax
  41bad4:	bound  edi,QWORD PTR [ecx-0x14bb929d]
  41bada:	pusha  
  41badb:	add    BYTE PTR [esi+0x3a746aed],ah
  41bae1:	mov    bl,0x76
  41bae3:	gs mov cl,0xb
  41bae6:	arpl   WORD PTR [ebx-0x69],sp
  41bae9:	out    dx,eax
  41baea:	push   0x6db37069
  41baef:	ins    BYTE PTR es:[edi],dx
  41baf0:	mov    ch,0xe
  41baf2:	bound  esp,QWORD PTR [ecx-0x64]
  41baf5:	in     al,dx
  41baf6:	xor    eax,0x69c68964
  41bafb:	jae    0x41ba83
  41bafd:	cwde   
  41bafe:	pop    esp
  41baff:	gs xchg esi,eax
  41bb01:	lock bound ebp,QWORD PTR [edi-0x7f]
  41bb05:	in     eax,dx
  41bb06:	imul   edi,DWORD PTR [ecx-0x5b],0xffffffe3
  41bb0a:	arpl   WORD PTR [eax-0x5a],si
  41bb0d:	out    dx,eax
  41bb0e:	jbe    0x41bb86
  41bb10:	mov    dh,al
  41bb12:	hlt    
  41bb13:	dec    edi
	...
  41bb28:	(bad)
  41bb2d:	mov    edi,0xc3524ff4
  41bb32:	xor    eax,0x79ec5663
  41bb37:	outs   dx,BYTE PTR ds:[esi]
  41bb38:	sbb    DWORD PTR [ebx-0x1cea90a8],edx
  41bb3e:	push   ebp
  41bb3f:	jae    0x41bb47
  41bb41:	les    esp,FWORD PTR [ebx+0x72]
  41bb44:	dec    ecx
  41bb45:	xchg   ebx,eax
  41bb46:	push   edi
  41bb47:	ins    DWORD PTR es:[edi],dx
  41bb48:	sbb    ebx,eax
  41bb4a:	push   edi
  41bb4b:	gs pop ss
  41bb4d:	lds    ebp,FWORD PTR [ecx+0x72]
  41bb50:	mov    WORD PTR [ebp+0x2d986adb],?
  41bb56:	fldcw  WORD PTR [esi+ebx*4+0x51]
  41bb5a:	or     DWORD PTR [ecx-0x5f],edx
  41bb5d:	dec    ecx
  41bb5e:	stc    
  41bb5f:	outs   dx,DWORD PTR ds:[esi]
  41bb61:	sbb    dl,al
  41bb63:	jb     0x41bbd7
  41bb65:	dec    ecx
  41bb66:	or     DWORD PTR [ecx+0x69],edx
  41bb69:	jno    0x41bb67
  41bb6b:	dec    edi
  41bb6c:	ins    DWORD PTR es:[edi],dx
  41bb6d:	push   0xfffffff9
  41bb6f:	je     0x41bbec
  41bb71:	imul   ebp,eax,0xffffffff
  41bb74:	ins    BYTE PTR es:[edi],dx
  41bb75:	pop    edx
  41bb76:	jmp    0xf8a91ce7
  41bb7b:	sub    eax,0xffd5576f
  41bb80:	sub    al,0x5a
  41bb82:	jmp    0xf8d0f4f3
  41bb87:	sub    eax,0xffde9f2f
	...
  41bba0:	push   edi
  41bba1:	jnp    0x41bb8e
  41bba3:	jae    0x41bbfe
  41bba5:	pushf  
  41bba6:	shr    DWORD PTR [ebx-0x74],cl
  41bba9:	sbb    eax,0xc6dd3167
  41bbaf:	pop    esi
  41bbb0:	sbb    ah,bl
  41bbb2:	or     BYTE PTR [ecx-0x5],dl
  41bbb5:	popf   
  41bbb6:	clc    
  41bbb7:	je     0x41bba6
  41bbb9:	leave  
  41bbba:	out    0x5b,eax
  41bbbc:	fiadd  WORD PTR [eax*8-0x181c27a5]
  41bbc3:	pop    ds
  41bbc4:	into   
  41bbc5:	fsubr  st(4),st
  41bbc7:	push   ds
  41bbc8:	mov    WORD PTR [edx],cs
  41bbca:	fisub  WORD PTR [ebp-0x20]
  41bbcd:	push   cs
  41bbce:	in     al,dx
  41bbcf:	jno    0x41bbba
  41bbd1:	das    
  41bbd2:	xlat   BYTE PTR ds:[ebx]
  41bbd3:	inc    esi
  41bbd4:	loopne 0x41bbfd
  41bbd6:	lds    esp,FWORD PTR [edi-0x57]
  41bbd9:	fwait
  41bbda:	retf   0xc05e
  41bbdd:	xchg   esp,eax
  41bbde:	rol    bh,0xde
  41bbe1:	inc    ecx
  41bbe2:	mov    ecx,?
  41bbe4:	pushf  
  41bbe5:	je     0x41bb6a
  41bbe7:	loopne 0x41bb9c
  41bbe9:	cmp    eax,0x3dc1039b
  41bbee:	jno    0x41bbca
  41bbf0:	stos   BYTE PTR es:[edi],al
  41bbf1:	mov    fs,WORD PTR ds:[ebx]
  41bbf4:	push   eax
  41bbf5:	cmp    esi,DWORD PTR [ecx-0x20]
  41bbf8:	ins    BYTE PTR es:[edi],dx
  41bbf9:	dec    eax
  41bbfa:	jbe    0x41bbed
  41bbfc:	adc    BYTE PTR [edi+ebp*1+0x513560f2],0xe5
	...
  41bc18:	jbe    0x41bc72
  41bc1a:	dec    eax
  41bc1b:	repnz jecxz 0x41bc70
  41bc1e:	ss icebp 
  41bc20:	imul   ecx,DWORD PTR [eax-0x21],0x40366ebf
  41bc27:	icebp  
  41bc28:	aaa    
  41bc29:	dec    eax
  41bc2a:	fistp  QWORD PTR [edi+0x22ff422a]
  41bc30:	outs   dx,DWORD PTR ds:[esi]
  41bc31:	cmp    bh,bl
  41bc33:	rol    BYTE PTR [esi+0x68],cl
  41bc36:	das    
  41bc37:	and    al,0x4f
  41bc39:	aas    
  41bc3a:	add    ch,bl
  41bc3c:	aaa    
  41bc3d:	je     0x41bc5f
  41bc3f:	loopne 0x41bc70
  41bc41:	inc    edx
  41bc42:	add    al,0xf3
  41bc44:	sbb    al,0x94
  41bc46:	adc    bh,BYTE PTR [ecx-0x2d409b21]
  41bc4c:	out    dx,al
  41bc4d:	inc    edx
  41bc4e:	std    
  41bc4f:	loopne 0x41bc4e
  41bc51:	xchg   esp,eax
  41bc52:	scas   eax,DWORD PTR es:[edi]
  41bc53:	mov    dh,0xc3
  41bc55:	cmp    edi,0xd542eed2
  41bc5b:	loopne 0x41bc3a
  41bc5d:	xchg   esp,eax
  41bc5e:	scas   eax,DWORD PTR es:[edi]
  41bc5f:	mov    dh,0xcb
  41bc61:	cmp    edi,0xb137dcd0
  41bc67:	and    ebx,edx
  41bc69:	xor    ecx,DWORD PTR [eax]
  41bc6b:	les    ebp,FWORD PTR [ecx*8+0x5d4b9c59]
  41bc72:	sub    BYTE PTR [esi+edi*1-0x1e3685ce],bh
  41bc79:	ins    DWORD PTR es:[edi],dx
  41bc7a:	arpl   WORD PTR [eax+eax*1+0x0],cx
	...
  41bc8d:	add    BYTE PTR [eax],al
  41bc8f:	add    BYTE PTR [edi+0x3fb5465e],cl
  41bc95:	lods   eax,DWORD PTR ds:[esi]
  41bc96:	dec    ebx
  41bc97:	xchg   esp,eax
  41bc98:	sub    BYTE PTR [esi],dh
  41bc9a:	fs leave 
  41bc9c:	shl    BYTE PTR [eax],1
  41bc9e:	ins    BYTE PTR es:[edi],dx
  41bc9f:	jnp    0x41bc8d
  41bca1:	inc    ebx
  41bca2:	jns    0x41bc8d
  41bca4:	inc    ecx
  41bca5:	pop    edi
  41bca6:	pop    esp
  41bca7:	cmp    DWORD PTR [eax-0x21bb869f],ebp
  41bcad:	lods   al,BYTE PTR ds:[esi]
  41bcae:	inc    esi
  41bcaf:	dec    eax
  41bcb0:	mov    ebx,0x221f0831
  41bcb5:	popa   
  41bcb6:	pop    eax
  41bcb7:	or     DWORD PTR [ebp-0x14c885cf],edi
  41bcbd:	inc    edx
  41bcbe:	or     BYTE PTR [eax],ah
  41bcc0:	sti    
  41bcc1:	lea    ebx,[eax+0x9]
  41bcc4:	fnsave [ecx]
  41bcc6:	jp     0x41bce7
  41bcc8:	rol    DWORD PTR [edx+0x8],cl
  41bccb:	xor    bl,ah
  41bccd:	lea    ebx,[eax-0x37]
  41bcd0:	rol    BYTE PTR [ebx+0x6b],cl
  41bcd3:	sbb    esi,DWORD PTR [eax+0x5e]
  41bcd6:	addr16 adc al,0xb3
  41bcd9:	int3   
  41bcda:	dec    ebx
  41bcdb:	or     al,0x6f
  41bcdd:	xor    esp,DWORD PTR [ecx+ebp*8+0x47]
  41bce1:	push   0x67b0195c
  41bce6:	jns    0x41bcb4
  41bce8:	jge    0x41bcb6
  41bcea:	dec    esp
  41bceb:	mov    ch,0x5b
  41bced:	pop    esp
  41bcee:	sub    BYTE PTR [edx-0x3b81b9be],bh
	...
  41bd08:	pop    ebp
  41bd09:	lods   al,BYTE PTR ds:[esi]
  41bd0a:	pop    ebx
  41bd0b:	add    bh,dh
  41bd0d:	add    esi,ebp
  41bd0f:	dec    edi
  41bd10:	cli    
  41bd11:	out    0x37,eax
  41bd13:	and    BYTE PTR [eax],ah
  41bd15:	lds    ebp,FWORD PTR [ecx+0x72]
  41bd18:	and    eax,0xf541420f
  41bd1d:	ja     0x41bd78
  41bd1f:	jae    0x41bd31
  41bd21:	(bad)  
  41bd22:	hlt    
  41bd23:	inc    edi
  41bd24:	loope  0x41bd01
  41bd26:	inc    esp
  41bd27:	dec    ebp
  41bd28:	add    al,0xef
  41bd2a:	pusha  
  41bd2b:	and    al,dh
  41bd2d:	les    ebp,FWORD PTR [ecx+0x72]
  41bd30:	aad    0x1
  41bd32:	push   esi
  41bd33:	ins    DWORD PTR es:[edi],dx
  41bd34:	adc    BYTE PTR [eax-0x17deabc0],bl
  41bd3a:	inc    ecx
  41bd3b:	popa   
  41bd3c:	pop    esp
  41bd3d:	in     al,dx
  41bd3e:	adc    al,0x53
  41bd40:	push   eax
  41bd41:	(bad)  
  41bd42:	jp     0x41bda9
  41bd44:	inc    edi
  41bd45:	nop
  41bd46:	push   edi
  41bd47:	dec    ebp
  41bd48:	mov    eax,ds:0x965514e0
  41bd4d:	jmp    0x41bdc5
  41bd4f:	add    BYTE PTR [ebp-0x39afbc19],dh
  41bd55:	ja     0x41bdaf
  41bd57:	outs   dx,DWORD PTR ds:[esi]
  41bd58:	ja     0x41bd1e
  41bd5a:	hlt    
  41bd5b:	push   edx
  41bd5c:	js     0x41bd42
  41bd5e:	inc    esp
  41bd5f:	and    BYTE PTR [ebp-0x1f],ah
  41bd62:	jbe    0x41bdd8
  41bd64:	mov    ch,0xe
  41bd66:	inc    edx
  41bd67:	inc    ecx
  41bd68:	push   ebp
  41bd69:	jo     0x41bdc3
  41bd6b:	outs   dx,DWORD PTR ds:[esi]
	...
  41bd80:	xchg   edi,eax
  41bd81:	mov    ebx,0x1a5fff4
  41bd86:	inc    ebp
  41bd87:	xor    edx,DWORD PTR [ebp-0x19]
  41bd8a:	push   ebp
  41bd8b:	jae    0x41be03
  41bd8d:	mov    eax,0x85417263
  41bd92:	or     BYTE PTR [ecx+0x38],cl
  41bd95:	(bad)  
  41bd96:	inc    esp
  41bd97:	and    BYTE PTR [ebp+ecx*1-0x1d208f16],cl
  41bd9e:	(bad)  [ecx-0x18]
  41bda1:	iret   
  41bda2:	or     BYTE PTR [esi-0x26],cl
  41bda5:	and    ecx,ebx
  41bda7:	pop    ds
  41bda8:	(bad)  
  41bdaa:	div    DWORD PTR [eax-0x3d]
  41bdad:	or     dh,bh
  41bdaf:	arpl   WORD PTR [esi-0x43],di
  41bdb2:	mov    al,0x53
  41bdb4:	ror    BYTE PTR ds:0x11b55ebe,0x29
  41bdbb:	push   eax
  41bdbc:	lods   eax,DWORD PTR ds:[esi]
  41bdbd:	cs clc 
  41bdbf:	je     0x41bd64
  41bdc1:	dec    edi
  41bdc2:	aad    0x31
  41bdc4:	mov    WORD PTR [esi],gs
  41bdc6:	mov    esi,0xd8dd5c53
  41bdcb:	pop    esi
  41bdcc:	jg     0x41be1c
  41bdce:	in     al,0x6c
  41bdd0:	jle    0x41be2b
  41bdd2:	push   ds
  41bdd3:	add    BYTE PTR [ebp+ecx*4-0x6260b027],cl
  41bdda:	mov    esp,0xd16e5f5e
  41bddf:	ins    BYTE PTR es:[edi],dx
  41bde0:	pop    esi
  41bde1:	pop    ecx
  41bde2:	or     al,0x47
	...
  41bdf8:	pop    ecx
  41bdf9:	jl     0x41bdb7
  41bdfb:	pop    ds
  41bdfc:	pop    esp
  41bdfd:	pop    esp
  41bdfe:	fnsave [eax+0x43]
  41be01:	mov    bl,dh
  41be03:	arpl   WORD PTR [ebx+eax*4-0x22c3ac26],cx
  41be0a:	mov    eax,0xd1ae1f5e
  41be0f:	ins    BYTE PTR es:[edi],dx
  41be10:	push   ds
  41be11:	xchg   ecx,eax
  41be12:	or     al,0x48
  41be14:	cmp    BYTE PTR [ecx-0x6323e044],ch
  41be1a:	fnsave [eax-0x5]
  41be1d:	xchg   edx,eax
  41be1e:	fisub  WORD PTR [ebx-0x74]
  41be21:	scas   al,BYTE PTR es:[edi]
  41be22:	xlat   BYTE PTR ds:[ebx]
  41be23:	push   ebx
  41be24:	fcom   QWORD PTR [edi+edi*8-0x2dba354d]
  41be2b:	(bad)  
  41be2d:	inc    esi
  41be2e:	ret    
  41be2f:	add    ecx,DWORD PTR [ebp+eiz*2+0x41dfe9b6]
  41be36:	rcl    ch,0xae
  41be39:	push   0x46aceca4
  41be3e:	into   
  41be3f:	(bad)  
  41be40:	test   al,0x32
  41be42:	mov    ebx,0x933acabf
  41be47:	call   0xd7cdf8e9
  41be4c:	adc    DWORD PTR [ebx-0x7e],0xffffffe6
  41be50:	test   al,0x3f
  41be52:	jne    0x41be2b
  41be54:	jae    0x41bead
  41be56:	xor    cl,0x6a
  41be59:	xor    DWORD PTR [ebp+edx*8+0x0],ecx
	...
  41be70:	addr16 push ebx
  41be72:	and    dh,0x68
  41be75:	aas    
  41be76:	jne    0x41be4f
  41be78:	jl     0x41be0e
  41be7a:	cmp    al,ch
  41be7c:	outs   dx,BYTE PTR ds:[esi]
  41be7d:	cmp    bl,BYTE PTR [ebx-0x13]
  41be80:	pop    edi
  41be81:	cmp    eax,DWORD PTR [edi+edx*8-0x25]
  41be85:	ss jmp 0xd640:0x415f
  41be8c:	cs push 0x462ced24
  41be92:	dec    esi
  41be93:	xlat   BYTE PTR ds:[ebx]
  41be94:	sub    BYTE PTR [edx],dh
  41be96:	cmp    eax,eax
  41be98:	inc    eax
  41be99:	xor    al,BYTE PTR ds:0x332f2ced
  41be9f:	rcr    DWORD PTR [esi],cl
  41bea1:	inc    eax
  41bea2:	or     esi,ebx
  41bea4:	sub    BYTE PTR ds:0x5b46d323,bh
  41beaa:	mov    edi,0x635ecc4
  41beaf:	fyl2x  
  41beb1:	inc    eax
  41beb2:	or     cl,cl
  41beb4:	pop    esp
  41beb5:	push   0x66
  41beb7:	or     BYTE PTR [edi+0x36],ah
  41beba:	jp     0x41be81
  41bebc:	push   eax
  41bebd:	xor    al,0x69
  41bebf:	into   
  41bec0:	inc    esp
  41bec1:	aaa    
  41bec2:	jl     0x41be9e
  41bec4:	(bad)  
  41bec5:	arpl   WORD PTR [ebp-0x39],sp
  41bec8:	cmp    eax,DWORD PTR [eax+0x67]
  41becb:	mov    ebx,0xd0436d34
  41bed0:	sub    al,BYTE PTR [ebx+0x65]
  41bed3:	mov    edx,0x0
	...
  41bee8:	ds das 
  41beea:	jl     0x41be79
  41beec:	div    BYTE PTR [ecx]
  41beee:	lea    bx,[esi]
  41bef1:	inc    eax
  41bef2:	jns    0x41bebd
  41bef4:	cmp    eax,0x34aa5465
  41bef9:	inc    ebx
  41befa:	jp     0x41be80
  41befc:	sbb    eax,0xe18c5e45
  41bf01:	inc    ebx
  41bf02:	pop    edi
  41bf03:	mov    ?,ebp
  41bf05:	ins    BYTE PTR es:[edi],dx
  41bf06:	pop    ebp
  41bf07:	cmp    ch,0x34
  41bf0a:	gs jbe 0x41bee7
  41bf0d:	test   al,0x43
  41bf0f:	dec    esp
  41bf10:	rol    DWORD PTR [ebx+0x67],0x46
  41bf14:	div    DWORD PTR [esi]
  41bf16:	ins    DWORD PTR es:[edi],dx
  41bf17:	or     DWORD PTR [ecx],esp
  41bf19:	inc    esi
  41bf1a:	push   0x5a
  41bf1c:	mov    bh,0x43
  41bf1e:	jl     0x41bf6c
  41bf20:	mov    ebx,0xbd3b586c
  41bf25:	cs pop edi
  41bf27:	inc    ebp
  41bf28:	mov    bl,0x43
  41bf2a:	push   esp
  41bf2b:	sbb    al,0xa7
  41bf2d:	xor    edi,DWORD PTR [edx+0x16]
  41bf30:	shl    DWORD PTR [edi],0x6e
  41bf33:	adc    eax,0x1d7b5768
  41bf38:	pushf  
  41bf39:	aaa    
  41bf3a:	add    ch,BYTE PTR gs:[eax+0x51]
  41bf3e:	data16 add BYTE PTR [ecx-0x77918951],cl
  41bf45:	in     al,dx
  41bf46:	adc    al,0x53
  41bf48:	mov    ah,ch
  41bf4a:	js     0x41bfb5
	...
  41bf60:	jae    0x41bf1f
  41bf62:	ja     0x41bf64
  41bf64:	lds    ebp,FWORD PTR es:[edx+0x74]
  41bf68:	cmp    dh,BYTE PTR [ebx-0x28de9a8a]
  41bf6e:	ins    DWORD PTR es:[edi],dx
  41bf6f:	arpl   WORD PTR [edi],si
  41bf71:	lds    esi,FWORD PTR [edi+0x6f]
  41bf74:	pop    ebx
  41bf75:	loopne 0x41bfc7
  41bf77:	push   edi
  41bf78:	pop    esp
  41bf79:	(bad)  
  41bf7a:	push   0x14e0fa6f
  41bf7f:	dec    esi
  41bf80:	sbb    DWORD PTR [eax],ecx
  41bf82:	dec    eax
  41bf83:	jne    0x41bf8c
  41bf85:	loop   0x41bff0
  41bf87:	outs   dx,BYTE PTR ds:[esi]
  41bf88:	stc    
  41bf89:	or     eax,0xbaf6726a
  41bf8e:	arpl   WORD PTR [esi-0x1f],bp
  41bf91:	or     al,0x6e
  41bf93:	outs   dx,BYTE PTR ds:[esi]
  41bf94:	sbb    ebp,eax
  41bf96:	jnp    0x41c00b
  41bf98:	aad    0xd6
  41bf9a:	imul   esi,DWORD PTR [ebx+0x76],0x73696bb2
  41bfa1:	mov    esp,0xae485314
  41bfa6:	ja     0x41c021
  41bfa8:	inc    esi
  41bfa9:	in     al,dx
  41bfaa:	imul   ebp,DWORD PTR [ebp-0x5f],0x4b6f7700
  41bfb1:	mov    ebx,0xd4866560
  41bfb6:	inc    ebx
  41bfb7:	jne    0x41c032
  41bfb9:	les    esp,FWORD PTR [ebx+0x6f]
  41bfbc:	dec    esi
  41bfbd:	nop
  41bfbe:	push   edi
  41bfbf:	outs   dx,DWORD PTR ds:[esi]
  41bfc0:	dec    ebx
  41bfc1:	in     al,dx
  41bfc2:	jnp    0x41c025
	...
  41bfd8:	xchg   DWORD PTR [edi-0x4e83b2b0],ebp
  41bfde:	jbe    0x41c04f
  41bfe0:	mov    WORD PTR [edx+0x791865f7],gs
  41bfe6:	shr    DWORD PTR [ebp+0x0],0x99
  41bfea:	fisubr WORD PTR [ebp-0x17]
  41bfed:	shr    DWORD PTR [eax],0x3f
  41bff0:	out    dx,eax
  41bff1:	call   0x4b28:0xc1e272f7
  41bff8:	in     eax,dx
  41bff9:	fucomip st,st(1)
  41bffb:	fs jmp 0xe18ec8ec
  41c001:	jmp    0xd3252cea
  41c006:	or     BYTE PTR [ebp+ecx*8-0x26],bl
  41c00a:	jmp    0x41c078
  41c00c:	mov    ecx,0x8c70dcd7
  41c011:	aam    0xec
  41c013:	bound  esp,QWORD PTR [edx-0x4a9a1dff]
  41c019:	sbb    ch,dl
  41c01b:	jae    0x41bfd2
  41c01d:	push   ss
  41c01e:	idiv   edi
  41c020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c021:	sbb    esi,ebp
  41c023:	ins    DWORD PTR es:[edi],dx
  41c024:	cwde   
  41c025:	adc    al,0xdd
  41c027:	jbe    0x41c0a2
  41c029:	push   ss
  41c02a:	(bad)  
  41c02c:	je     0x41c045
  41c02e:	out    dx,al
  41c02f:	jae    0x41c0a0
  41c031:	push   cs
  41c032:	out    0x6a,al
  41c034:	lods   al,BYTE PTR ds:[esi]
  41c035:	dec    edx
  41c036:	out    dx,al
  41c037:	jno    0x41c09b
  41c039:	pop    eax
  41c03a:	ficomp DWORD PTR [edi]
	...
  41c050:	pop    esp
  41c051:	pop    esp
  41c052:	fnstenv [eax+0x63]
  41c055:	dec    esi
  41c056:	fisub  DWORD PTR [ebx+0x5f]
  41c059:	mov    ebp,0x614072e5
  41c05e:	in     eax,0x6c
  41c060:	aaa    
  41c061:	popf   
  41c062:	jmp    0x41c0c4
  41c064:	das    
  41c065:	dec    esi
  41c066:	iret   
  41c067:	ins    DWORD PTR es:[edi],dx
  41c068:	cmp    BYTE PTR [ebp-0x6bc5a109],bl
  41c06e:	add    bh,ah
  41c070:	cs inc edx
  41c072:	mov    edi,0x12433ad3
  41c077:	xlat   BYTE PTR ds:[ebx]
  41c078:	and    BYTE PTR [edx+0xb],al
  41c07b:	ror    DWORD PTR [ebx-0xe16fcc3],cl
  41c081:	inc    eax
  41c082:	sbb    al,bl
  41c084:	repnz das 
  41c086:	repnz add esi,ebp
  41c089:	outs   dx,DWORD PTR ds:[esi]
  41c08a:	scas   eax,DWORD PTR es:[edi]
  41c08b:	sbb    eax,esp
  41c08d:	ja     0x41c093
  41c08f:	adc    al,0x98
  41c091:	ins    BYTE PTR es:[edi],dx
  41c092:	add    al,0x29
  41c094:	pushf  
  41c095:	xor    BYTE PTR [edi+0x1184af30],0xbc
  41c09c:	outs   dx,BYTE PTR ds:[esi]
  41c09d:	test   cl,dh
  41c09f:	mov    ebx,0x11ef6f76
  41c0a4:	aam    0x6f
  41c0a6:	out    dx,eax
  41c0a7:	adc    esp,edx
  41c0a9:	outs   dx,DWORD PTR ds:[esi]
  41c0aa:	out    dx,eax
  41c0ab:	adc    esp,eax
  41c0ad:	outs   dx,DWORD PTR ds:[esi]
  41c0ae:	iret   
  41c0af:	adc    esp,eax
  41c0b1:	outs   dx,DWORD PTR ds:[esi]
  41c0b2:	iret   
  41c0b3:	adc    DWORD PTR [eax],eax
	...
  41c0c5:	add    BYTE PTR [eax],al
  41c0c7:	add    BYTE PTR [edi+ebp*2+0x47b411cf],dh
  41c0ce:	fbstp  TBYTE PTR [edi-0x1862c08d]
  41c0d4:	outs   dx,BYTE PTR ds:[esi]
  41c0d5:	inc    edx
  41c0d6:	sub    esp,0xbfdf307d
  41c0dc:	pop    edi
  41c0dd:	cmp    al,0x7c
  41c0df:	in     eax,dx
  41c0e0:	outs   dx,DWORD PTR ds:[esi]
  41c0e1:	das    
  41c0e2:	push   ecx
  41c0e3:	loop   0x41c14f
  41c0e5:	inc    edx
  41c0e6:	dec    ebx
  41c0e7:	add    al,0x9a
  41c0e9:	push   eax
  41c0ea:	pop    ds
  41c0eb:	add    al,0xba
  41c0ed:	pop    esp
  41c0ee:	pop    ds
  41c0ef:	add    al,0x1e
  41c0f1:	pop    ebx
  41c0f2:	pop    ds
  41c0f3:	add    al,0x10
  41c0f5:	push   edi
  41c0f6:	pop    ds
  41c0f7:	add    al,0x90
  41c0f9:	bound  ecx,QWORD PTR [eax]
  41c0fb:	sub    DWORD PTR [eax-0x6fd6a38a],ecx
  41c101:	cwde   
  41c102:	dec    edi
  41c103:	sub    DWORD PTR [eax-0x6fd6b13b],ecx
  41c109:	fwait
  41c10a:	push   ecx
  41c10b:	sub    DWORD PTR [eax-0x6fd6abe6],ecx
  41c111:	push   ecx
  41c112:	push   ebx
  41c113:	sub    DWORD PTR [eax-0x6fd6aae8],ecx
  41c119:	cdq    
  41c11a:	push   0x29
  41c11c:	mov    BYTE PTR [edi],ah
  41c11e:	ins    BYTE PTR es:[edi],dx
  41c11f:	sub    DWORD PTR [eax-0x705692a2],edx
  41c125:	in     eax,0x6c
  41c127:	test   eax,0xa960a88f
	...
  41c140:	(bad)  
  41c141:	push   ds
  41c142:	pusha  
  41c143:	test   eax,0xa95faa8f
  41c148:	(bad)
  41c14c:	(bad)  
  41c14d:	push   esi
  41c14e:	popa   
  41c14f:	test   eax,0xa965d48f
  41c154:	(bad)  
  41c155:	sub    al,0x77
  41c157:	test   eax,0xa978d38f
  41c15c:	pop    DWORD PTR [edi]
  41c15e:	jl     0x41c109
  41c160:	(bad)  
  41c161:	push   ss
  41c162:	jnp    0x41c10d
  41c164:	(bad)  
  41c165:	sbb    DWORD PTR [esi-0x57],edi
  41c168:	(bad)  
  41c169:	std    
  41c16a:	outs   dx,DWORD PTR ds:[esi]
  41c16b:	test   eax,0xa9746a8f
  41c170:	(bad)  
  41c171:	repz jae 0x41c11d
  41c174:	(bad)  
  41c175:	fwait
  41c176:	jae    0x41c1a1
  41c178:	mov    BYTE PTR [esi+0x75],ah
  41c17b:	sub    DWORD PTR [eax-0x77d68b11],edx
  41c181:	dec    ecx
  41c182:	sub    BYTE PTR [ecx],0x90
  41c185:	or     eax,0x90750083
  41c18a:	pop    ebp
  41c18b:	mov    fs,WORD PTR [ebp-0x70]
  41c18e:	jbe    0x41c12b
  41c190:	gs nop
  41c192:	or     DWORD PTR [ebp+esi*2+0x759caf90],ebx
  41c199:	nop
  41c19a:	dec    edx
  41c19b:	popf   
  41c19c:	gs nop
  41c19e:	int    0x9d
  41c1a0:	gs nop
  41c1a2:	pop    eax
  41c1a3:	sahf   
	...
  41c1b8:	mov    ch,0x98
  41c1ba:	aam    0x9e
  41c1bc:	mov    ch,0x98
  41c1be:	jbe    0x41c15f
  41c1c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c1:	cwde   
  41c1c2:	hlt    
  41c1c3:	lahf   
  41c1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c5:	cwde   
  41c1c6:	pop    esi
  41c1c7:	mov    al,ds:0xa08598b5
  41c1cc:	xor    eax,0x25a8d798
  41c1d1:	cwde   
  41c1d2:	xor    DWORD PTR [esi-0x519967db],ebp
  41c1d8:	cmc    
  41c1d9:	xchg   edi,eax
  41c1da:	std    
  41c1db:	mov    edi,0xc02297f5
  41c1e0:	in     eax,0x97
  41c1e2:	dec    edi
  41c1e3:	shl    ch,0x97
  41c1e6:	out    dx,al
  41c1e7:	shl    ch,0x97
  41c1ea:	sbb    eax,ecx
  41c1ec:	cmc    
  41c1ed:	xchg   edi,eax
  41c1ee:	inc    eax
  41c1ef:	shl    ebp,0x97
  41c1f2:	jge    0x41c1b5
  41c1f4:	in     eax,0x97
  41c1f6:	rol    cl,cl
  41c1f8:	xor    eax,0x35c2bb98
  41c1fd:	cwde   
  41c1fe:	xor    eax,0xf9825c3
  41c203:	lds    esp,FWORD PTR ds:0x35c59c98
  41c209:	cwde   
  41c20a:	faddp  st(5),st
  41c20c:	mov    ch,0x98
  41c20e:	inc    esi
  41c20f:	(bad)  
  41c210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c211:	cwde   
  41c212:	mov    ecx,0xc6d8cc7
  41c217:	adc    esp,edx
  41c219:	ins    DWORD PTR es:[edi],dx
  41c21a:	or     al,0x84
	...
  41c230:	aam    0x6d
  41c232:	or     al,0x9d
  41c234:	lds    ebp,FWORD PTR [ebp+0xc]
  41c237:	pop    ss
  41c238:	(bad)  
  41c239:	ins    DWORD PTR es:[edi],dx
  41c23a:	or     al,0xc6
  41c23c:	fldcw  WORD PTR [ebp+0xc]
  41c23f:	sbb    edx,edx
  41c241:	ins    DWORD PTR es:[edi],dx
  41c242:	or     al,0x83
  41c244:	mov    ebp,0xbde70c6d
  41c249:	ins    DWORD PTR es:[edi],dx
  41c24a:	or     al,0xbf
  41c24c:	popa   
  41c24d:	ins    DWORD PTR es:[edi],dx
  41c24e:	or     al,0xcc
  41c250:	pop    ebx
  41c251:	ins    DWORD PTR es:[edi],dx
  41c252:	or     al,0x7
  41c254:	push   esi
  41c255:	ins    DWORD PTR es:[edi],dx
  41c256:	or     al,0x52
  41c258:	push   esi
  41c259:	ins    DWORD PTR es:[edi],dx
  41c25a:	or     al,0xc6
  41c25c:	dec    eax
  41c25d:	ins    DWORD PTR es:[edi],dx
  41c25e:	or     al,0xd
  41c260:	inc    ecx
  41c261:	in     eax,dx
  41c262:	or     BYTE PTR [ebx-0x3f712c7],cl
  41c268:	xor    ebp,ebp
  41c26a:	or     BYTE PTR [edx+0x6a],bh
  41c26d:	in     eax,dx
  41c26e:	or     al,bh
  41c270:	(bad)  
  41c271:	in     eax,dx
  41c272:	or     BYTE PTR [esi+ebp*1-0x13],dh
  41c276:	or     dl,ah
  41c278:	cs in  eax,dx
  41c27a:	or     BYTE PTR [ecx],dl
  41c27c:	das    
  41c27d:	in     eax,dx
  41c27e:	or     bh,dh
  41c280:	das    
  41c281:	in     eax,dx
  41c282:	or     BYTE PTR [edx],ch
  41c284:	xor    ch,ch
  41c286:	or     dh,al
  41c288:	sub    ch,ch
  41c28a:	or     ah,bh
  41c28c:	repnz in al,dx
  41c28e:	or     BYTE PTR [edx],dh
  41c290:	jmp    0x41c27e
  41c292:	or     BYTE PTR [esi+0x0],ch
	...
  41c2a5:	add    BYTE PTR [eax],al
  41c2a7:	add    ch,ah
  41c2a9:	in     al,dx
  41c2aa:	or     bh,dl
  41c2ac:	loopne 0x41c29a
  41c2ae:	or     BYTE PTR [esi+0x6908ecfa],bh
  41c2b4:	fst    DWORD PTR [ebx-0x35b9fbe1]
  41c2ba:	push   ds
  41c2bb:	add    al,0x8c
  41c2bd:	xchg   esp,eax
  41c2be:	fild   WORD PTR [ebx]
  41c2c0:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41c2c7:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41c2ce:	fild   WORD PTR [ebx]
  41c2d0:	dec    ebp
  41c2d1:	xor    BYTE PTR [eax-0x1f],cl
  41c2d4:	xor    DWORD PTR [eax-0x41],ecx
  41c2d7:	retf   
  41c2d8:	cmp    al,BYTE PTR [edi+0x17]
  41c2db:	add    al,0x3d
  41c2dd:	push   0x65deb020
  41c2e2:	mov    ah,0xcc
  41c2e4:	(bad)  
  41c2e5:	fs ds mov dh,0xdf
  41c2e9:	outs   dx,DWORD PTR ds:[esi]
  41c2ea:	es iret 
  41c2ec:	jae    0x41c367
  41c2ee:	add    ebp,DWORD PTR [edx]
  41c2f0:	out    dx,eax
  41c2f1:	cmp    al,0xc
  41c2f3:	add    al,0xaf
  41c2f5:	test   BYTE PTR [ecx],dl
  41c2f7:	mov    esp,0xd0d1465b
  41c2fc:	out    dx,al
  41c2fd:	xchg   esp,eax
  41c2fe:	mov    dl,0xeb
  41c300:	scas   al,BYTE PTR es:[edi]
  41c301:	xor    BYTE PTR [ebx-0x3dc84440],dh
  41c307:	sar    BYTE PTR [edi+0x3a037],1
	...
  41c31d:	add    BYTE PTR [eax],al
  41c31f:	add    bl,dl
  41c321:	ss ret 0x79df
  41c325:	ss ror bh,0x23
  41c329:	(bad)  
  41c32a:	clc    
  41c32b:	or     BYTE PTR [esi+0x6c0cf98f],al
  41c331:	jle    0x41c2bb
  41c333:	in     eax,dx
  41c334:	je     0x41c3aa
  41c336:	aam    0xd
  41c338:	lods   al,BYTE PTR ds:[esi]
  41c339:	cmp    BYTE PTR [edi+eiz*8+0x14cc8b9b],al
  41c340:	lods   al,BYTE PTR ds:[esi]
  41c341:	je     0x41c34b
  41c343:	in     al,0x99
  41c345:	cdq    
  41c346:	pop    edi
  41c347:	xchg   DWORD PTR [edi-0x12f70067],ebp
  41c34d:	dec    ecx
  41c34e:	pop    edi
  41c34f:	pop    edx
  41c350:	mov    esp,0x7008ffa1
  41c355:	je     0x41c382
  41c357:	sbb    BYTE PTR [eax+0x74],ch
  41c35a:	dec    DWORD PTR [eax]
  41c35c:	jo     0x41c395
  41c35e:	gs xor eax,0xe3ffa1a7
  41c364:	outs   dx,DWORD PTR ds:[esi]
  41c365:	cmp    DWORD PTR [edx+0x42],esp
  41c368:	xchg   ebp,eax
  41c369:	mov    gs,WORD PTR [eax]
  41c36b:	or     eax,0xf0282dad
  41c370:	outs   dx,DWORD PTR ds:[esi]
  41c371:	je     0x41c39e
  41c373:	fldcw  WORD PTR [edi-0x5036d76c]
  41c379:	je     0x41c3a5
  41c37b:	int3   
  41c37c:	bound  esi,QWORD PTR [ebx+0x28]
  41c37f:	leave  
  41c380:	scas   eax,DWORD PTR es:[edi]
  41c381:	xchg   esp,eax
  41c382:	jns    0x41c385
	...
  41c398:	ins    DWORD PTR es:[edi],dx
  41c399:	sub    eax,0x7279ba64
  41c39e:	ins    BYTE PTR es:[edi],dx
  41c39f:	aad    0x73
  41c3a1:	shl    esp,0xe9
  41c3a4:	(bad)  
  41c3a5:	xchg   esp,eax
  41c3a6:	or     cl,ch
  41c3a8:	(bad)  
  41c3a9:	xchg   esp,eax
  41c3aa:	or     cl,ch
  41c3ac:	(bad)  
  41c3ad:	xchg   esp,eax
  41c3ae:	or     cl,ch
  41c3b0:	(bad)  
  41c3b1:	xchg   esp,eax
  41c3b2:	or     cl,ch
  41c3b4:	(bad)  
  41c3b5:	xchg   esp,eax
  41c3b6:	or     cl,ch
  41c3b8:	(bad)  
  41c3b9:	xchg   esp,eax
  41c3ba:	or     cl,ch
  41c3bc:	(bad)  
  41c3bd:	xchg   esp,eax
  41c3be:	or     cl,ch
  41c3c0:	(bad)  
  41c3c1:	xchg   esp,eax
  41c3c2:	or     cl,ch
  41c3c4:	(bad)  
  41c3c5:	xchg   esp,eax
  41c3c6:	or     cl,ch
  41c3c8:	(bad)  
  41c3c9:	xchg   esp,eax
  41c3ca:	or     cl,ch
  41c3cc:	(bad)  
  41c3cd:	xchg   esp,eax
  41c3ce:	or     BYTE PTR [eax],al
  41c3d0:	in     eax,0x94
  41c3d2:	or     BYTE PTR [eax],al
  41c3d4:	in     eax,0x94
  41c3d6:	or     BYTE PTR [eax],al
  41c3d8:	cmc    
  41c3d9:	xchg   esp,eax
  41c3da:	or     BYTE PTR [eax],al
  41c3dc:	cmc    
  41c3dd:	xchg   esp,eax
  41c3de:	or     BYTE PTR [eax],al
  41c3e0:	in     eax,0x94
  41c3e2:	or     BYTE PTR [eax],al
  41c3e4:	in     eax,0x94
  41c3e6:	or     BYTE PTR [eax],al
  41c3e8:	mov    ch,0x94
  41c3ea:	or     BYTE PTR [eax],al
  41c3ec:	mov    ch,0x94
  41c3ee:	or     BYTE PTR [eax],al
  41c3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f1:	xchg   esp,eax
  41c3f2:	or     BYTE PTR [eax],al
  41c3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f5:	xchg   esp,eax
  41c3f6:	or     BYTE PTR [eax],al
  41c3f8:	mov    ch,0x94
  41c3fa:	or     BYTE PTR [eax],al
	...
  41c410:	mov    ch,0x94
  41c412:	or     BYTE PTR [eax],al
  41c414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c415:	xchg   esp,eax
  41c416:	or     BYTE PTR [eax],al
  41c418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c419:	xchg   esp,eax
  41c41a:	or     BYTE PTR [eax],al
  41c41c:	jne    0x41c3b2
  41c41e:	or     BYTE PTR [eax],al
  41c420:	jne    0x41c3b6
  41c422:	or     BYTE PTR [eax],al
  41c424:	gs xchg esp,eax
  41c426:	or     BYTE PTR [eax],al
  41c428:	gs xchg esp,eax
  41c42a:	or     BYTE PTR [eax],al
  41c42c:	jne    0x41c3c2
  41c42e:	or     BYTE PTR [eax],al
  41c430:	jne    0x41c3c6
  41c432:	or     BYTE PTR [eax],al
  41c434:	gs xchg esp,eax
  41c436:	or     BYTE PTR [eax],al
  41c438:	gs xchg esp,eax
  41c43a:	or     BYTE PTR [eax],al
  41c43c:	xor    eax,0x35000894
  41c441:	xchg   esp,eax
  41c442:	or     BYTE PTR [eax],al
  41c444:	and    eax,0x25000894
  41c449:	xchg   esp,eax
  41c44a:	or     BYTE PTR [eax],al
  41c44c:	xor    eax,0x35000894
  41c451:	xchg   esp,eax
  41c452:	or     BYTE PTR [eax],al
  41c454:	and    eax,0x25000894
  41c459:	xchg   esp,eax
  41c45a:	or     BYTE PTR [eax],al
  41c45c:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c462:	or     BYTE PTR [eax],al
  41c464:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c46a:	or     BYTE PTR [eax],al
  41c46c:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c472:	or     BYTE PTR [eax],al
	...
  41c488:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c48e:	or     BYTE PTR [eax],al
  41c490:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c496:	or     BYTE PTR [eax],al
  41c498:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c49e:	or     BYTE PTR [eax],al
  41c4a0:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4a6:	or     BYTE PTR [eax],al
  41c4a8:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4ae:	or     BYTE PTR [eax],al
  41c4b0:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4b6:	or     BYTE PTR [eax],al
  41c4b8:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4be:	or     BYTE PTR [eax],al
  41c4c0:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4c6:	or     BYTE PTR [eax],al
  41c4c8:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4ce:	or     BYTE PTR [eax],al
  41c4d0:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4d6:	or     BYTE PTR [eax],al
  41c4d8:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4de:	or     BYTE PTR [eax],al
  41c4e0:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c4e6:	or     BYTE PTR [eax],al
  41c4e8:	mov    WORD PTR [edi+ebx*8+0x3],ss
	...
  41c4ff:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  41c506:	fild   WORD PTR [ebx]
  41c508:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41c50f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41c516:	fild   WORD PTR [ebx]
  41c518:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41c51f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41c526:	fild   WORD PTR [ebx]
  41c528:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41c52f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41c536:	fild   WORD PTR [ebx]
  41c538:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41c53f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41c546:	fild   WORD PTR [ebx]
  41c548:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41c54f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41c556:	fild   WORD PTR [ebx]
  41c558:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41c55f:	add    ecx,DWORD PTR [esp+edx*4+0x22e0]
	...
  41c576:	add    BYTE PTR [eax],al
  41c578:	iret   
  41c579:	xor    eax,0xae57ab68
  41c57e:	inc    esp
  41c57f:	cmp    dh,dh
  41c581:	sbb    al,0xb5
  41c583:	scas   eax,DWORD PTR es:[edi]
  41c584:	jge    0x41c52a
  41c586:	js     0x41c533
  41c588:	push   edi
  41c589:	scas   al,BYTE PTR es:[edi]
  41c58a:	pop    es
  41c58b:	call   0x69af16fe
  41c590:	nop
  41c591:	push   esp
  41c592:	or     cl,cl
  41c594:	(bad)  
  41c595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c596:	or     cl,dh
  41c598:	(bad)  
  41c599:	cwde   
  41c59a:	or     bl,ch
  41c59c:	(bad)  
  41c59d:	mov    ebp,0x148fe9f4
  41c5a2:	or     cl,ch
  41c5a4:	(bad)  
  41c5a5:	push   esp
  41c5a6:	or     cl,ch
  41c5a8:	(bad)  
  41c5a9:	je     0x41c5b3
  41c5ab:	jmp    0xe94a6a3f
  41c5b0:	(bad)  
  41c5b1:	mov    WORD PTR [eax],cs
  41c5b3:	jmp    0xe94a5e47
  41c5b8:	(bad)  
  41c5b9:	xchg   edx,eax
  41c5ba:	or     cl,ch
  41c5bc:	(bad)  
  41c5bd:	mov    ebp,0x950fe9f4
  41c5c2:	or     cl,ch
  41c5c4:	iret   
  41c5c5:	mov    ebp,0x946fe9f4
  41c5ca:	or     cl,ch
  41c5cc:	lahf   
  41c5cd:	mov    ebp,0x9487e9f4
  41c5d2:	or     cl,ch
  41c5d4:	xchg   ebx,eax
  41c5d5:	mov    ebp,0x948de9f4
  41c5da:	or     cl,ch
	...
  41c5f0:	mov    BYTE PTR [eax+ecx*1+0x8948f69],dl
  41c5f7:	sub    DWORD PTR [eax-0x7036f76c],ecx
  41c5fd:	xchg   esp,eax
  41c5fe:	or     cl,bl
  41c600:	(bad)  
  41c601:	xchg   esp,eax
  41c602:	or     cl,ah
  41c604:	(bad)  
  41c605:	xchg   esp,eax
  41c606:	or     ch,ch
  41c608:	(bad)  
  41c609:	xchg   esp,eax
  41c60a:	or     bl,ch
  41c60c:	(bad)  
  41c60d:	xchg   esp,eax
  41c60e:	or     al,ch
  41c610:	(bad)  
  41c611:	xchg   esp,eax
  41c612:	or     BYTE PTR [ecx],dl
  41c614:	mov    al,ds:0x2d00286c
  41c619:	ror    DWORD PTR [eax+eax*1],0x8c
  41c61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c61e:	sub    eax,0xdc83c21
  41c623:	add    DWORD PTR [edi],ebx
  41c625:	mov    ds:0xc28f2222,eax
  41c62a:	inc    BYTE PTR [ecx]
  41c62c:	out    dx,al
  41c62d:	mov    eax,ds:0x8edb231f
  41c632:	es es jmp 0x41c5e4
  41c636:	add    al,BYTE PTR [esi]
  41c638:	enter  0x21a3,0x25
  41c63c:	enter  0x1c3,0x5
  41c640:	sbb    DWORD PTR [ebp-0x5336dbdc],ecx
  41c646:	add    BYTE PTR [esi+ecx*4],al
  41c649:	ret    
  41c64a:	inc    DWORD PTR [edx]
  41c64c:	mov    ah,0x92
  41c64e:	or     al,0x6
  41c650:	lods   eax,DWORD PTR ds:[esi]
  41c651:	mov    al,BYTE PTR [esi+ecx*1]
	...
  41c668:	fcmovb st,st(1)
  41c66a:	pop    ss
  41c66b:	adc    eax,0x1c0fb9d2
  41c670:	mov    eax,0xb516fec0
  41c675:	mov    esp,0xbdbb1b06
  41c67a:	sbb    BYTE PTR [ecx],cl
  41c67c:	xchg   ebx,eax
  41c67d:	ret    0x2ff
  41c680:	mov    WORD PTR [ecx-0x3a80f9fd],?
  41c686:	add    BYTE PTR [ecx],al
  41c688:	dec    ebp
  41c689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c68a:	push   ss
  41c68b:	and    al,0x5b
  41c68d:	mov    dl,BYTE PTR [ecx]
  41c68f:	daa    
  41c690:	daa    
  41c691:	je     0x41c6bb
  41c693:	das    
  41c694:	dec    esi
  41c695:	test   al,0x2e
  41c697:	aaa    
  41c698:	inc    esp
  41c699:	mov    WORD PTR [ecx],fs
  41c69b:	sub    DWORD PTR [ebp+esi*2+0x14],esi
  41c69f:	pop    ds
  41c6a0:	xor    eax,0x8c00f5bc
  41c6a5:	lods   eax,DWORD PTR ds:[esi]
  41c6a6:	or     BYTE PTR [eax],al
  41c6a8:	mov    WORD PTR [ebp-0x55cc00f8],gs
  41c6ae:	hlt    
  41c6af:	dec    BYTE PTR [ecx+esi*4-0x567300f8]
  41c6b6:	hlt    
  41c6b7:	(bad)  
  41c6b8:	sbb    esi,DWORD PTR [edx-0x5273fff8]
  41c6be:	or     bh,bh
  41c6c0:	or     ebp,DWORD PTR [esi-0x51fc000c]
  41c6c6:	hlt    
  41c6c7:	dec    BYTE PTR [ecx+esi*4+0xfef4]
	...
  41c6de:	add    BYTE PTR [eax],al
  41c6e0:	mov    WORD PTR [ebp-0x4e14000c],gs
  41c6e6:	hlt    
  41c6e7:	dec    DWORD PTR [ecx+ebp*4-0x527300f8]
  41c6ee:	or     BYTE PTR [eax],al
  41c6f0:	lea    ebp,[ecx-0x4e73fff8]
  41c6f6:	hlt    
  41c6f7:	inc    ebx
  41c6f9:	lods   eax,DWORD PTR ds:[esi]
  41c6fa:	hlt    
  41c6fb:	dec    DWORD PTR [ebp+ebp*4-0x5273000c]
  41c702:	hlt    
  41c703:	(bad)  
  41c704:	stos   DWORD PTR es:[edi],eax
  41c705:	lods   eax,DWORD PTR ds:[esi]
  41c706:	hlt    
  41c707:	(bad)  
  41c708:	mov    ds:0x8cff08ad,eax
  41c70d:	lods   eax,DWORD PTR ds:[esi]
  41c70e:	or     bh,bh
  41c710:	mov    WORD PTR [ecx-0x4e73000c],gs
  41c716:	or     bh,bh
  41c718:	sub    DWORD PTR [ecx-0x4e72fff8],0x8
  41c71f:	add    BYTE PTR [ebp+0x6bff08a9],cl
  41c725:	lods   eax,DWORD PTR ds:[esi]
  41c726:	or     BYTE PTR [eax],al
  41c728:	mov    WORD PTR [ecx-0x4ea4000c],gs
  41c72e:	hlt    
  41c72f:	(bad)  
  41c730:	push   ebx
  41c731:	xchg   esp,eax
  41c732:	fild   WORD PTR [ebx]
  41c734:	mov    WORD PTR [ebp-0x44bcfc21],ss
  41c73a:	loop   0x41c73b
  41c73c:	cmp    dl,BYTE PTR [ebx+ebp*8-0x206b73fd]
  41c743:	add    eax,DWORD PTR [eax]
	...
  41c755:	add    BYTE PTR [eax],al
  41c757:	add    BYTE PTR [ebx],ch
  41c759:	xchg   esp,eax
  41c75a:	(bad)  
  41c75c:	and    dl,BYTE PTR [edi+ebx*8-0x206a73fd]
  41c763:	add    ecx,DWORD PTR [ebp+edx*4-0x44f40021]
  41c76a:	jmp    0xfb03:0xdf940303
  41c771:	mov    edx,0xbaf2ffde
  41c776:	loop   0x41c77b
  41c778:	mov    WORD PTR [ebp-0x451c0021],ss
  41c77e:	loop   0x41c783
  41c780:	mov    WORD PTR [ebx+ebp*8-0x1c6c2c01],ss
  41c787:	pop    es
  41c788:	retf   
  41c789:	mov    edx,0x93c307ea
  41c78e:	jecxz  0x41c793
  41c790:	mov    ebx,0xb303deba
  41c795:	xchg   ebx,eax
  41c796:	jecxz  0x41c79f
  41c798:	mov    WORD PTR [ebp-0x6a73fc15],ss
  41c79e:	jecxz  0x41c7a7
  41c7a0:	mov    WORD PTR [ebx+ebp*8-0x21456cf9],ss
  41c7a7:	pop    es
  41c7a8:	mov    edx,DWORD PTR [ebp-0x6b73f815]
  41c7ae:	fild   WORD PTR [edi]
  41c7b0:	mov    WORD PTR [ebx-0x6c73f821],ss
  41c7b6:	fild   WORD PTR [ebx]
  41c7b8:	mov    WORD PTR [ebx+ebp*8+0x3],ss
	...
  41c7cf:	add    BYTE PTR [ebx-0x46],ah
  41c7d2:	pop    es
  41c7d3:	jmp    0xea36816b
  41c7d8:	(bad)  
  41c7d9:	xchg   esp,eax
  41c7da:	or     ch,ch
  41c7dc:	(bad)  
  41c7dd:	mov    ecx,0xa5080907
  41c7e2:	mov    cl,ch
  41c7e4:	setne  BYTE PTR [eax+0x8950fe9]
  41c7eb:	or     DWORD PTR [eax],edx
  41c7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ee:	or     cl,ch
  41c7f0:	(bad)  
  41c7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7f2:	or     BYTE PTR [ecx],cl
  41c7f4:	nop
  41c7f5:	xchg   esp,eax
  41c7f6:	or     BYTE PTR [ecx],cl
  41c7f8:	mov    BYTE PTR [eax+ecx*4-0x776af037],ah
  41c7ff:	leave  
  41c800:	(bad)  
  41c801:	xchg   esp,eax
  41c802:	mov    cl,cl
  41c804:	shld   DWORD PTR [eax-0x775af017],ecx,cl
  41c80b:	jmp    0xe9ca5c9f
  41c810:	setne  BYTE PTR [eax+0x8a48fe9]
  41c817:	leave  
  41c818:	(bad)  
  41c819:	xchg   esp,eax
  41c81a:	or     BYTE PTR [ecx],cl
  41c81c:	nop
  41c81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c81e:	mov    cl,ch
  41c820:	shld   DWORD PTR [eax],ecx,cl
  41c823:	or     DWORD PTR [eax+0x80908a4],edx
  41c829:	xchg   ebp,eax
  41c82a:	mov    cl,ch
  41c82c:	(bad)  
  41c82d:	xchg   esp,eax
  41c82e:	or     cl,ch
  41c830:	(bad)  
  41c831:	xchg   esp,eax
  41c832:	mov    cl,ch
	...
  41c848:	setne  BYTE PTR [eax]
  41c84b:	or     DWORD PTR [eax],ecx
  41c84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c84e:	or     cl,ch
  41c850:	(bad)  
  41c851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c852:	mov    cl,cl
  41c854:	(bad)  
  41c855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c856:	or     cl,cl
  41c858:	(bad)  
  41c859:	xchg   esp,eax
  41c85a:	mov    cl,ch
  41c85c:	(bad)  
  41c85d:	xchg   esp,eax
  41c85e:	or     BYTE PTR [eax],al
  41c860:	jne    0x41c877
  41c862:	sbb    BYTE PTR [eax],al
  41c864:	push   ebp
  41c865:	adc    eax,0x15650008
  41c86a:	sbb    BYTE PTR [eax-0x7fe76a9b],al
  41c870:	xchg   ebp,eax
  41c871:	adc    BYTE PTR [eax],cl
  41c873:	add    BYTE PTR ds:0x85000895,dh
  41c879:	adc    BYTE PTR [eax],bl
  41c87b:	add    BYTE PTR [ebp+0x35801890],al
  41c881:	xchg   ebp,eax
  41c882:	sbb    BYTE PTR [eax],al
  41c884:	xchg   ebp,eax
  41c885:	adc    BYTE PTR [eax],cl
  41c887:	and    BYTE PTR ds:0x25801895,0x15
  41c88e:	sbb    BYTE PTR [eax+0x814f5],al
  41c894:	cmc    
  41c895:	xchg   esp,eax
  41c896:	sbb    BYTE PTR [eax-0x7ff7eb1b],al
  41c89c:	lds    edx,FWORD PTR [eax+ecx*1+0x1814d500]
  41c8a3:	adc    ch,0x14
  41c8a6:	sbb    BYTE PTR [eax],al
  41c8a8:	lds    edx,FWORD PTR [eax+ecx*1+0x0]
	...
  41c8bf:	add    ch,ah
  41c8c1:	adc    al,0x8
  41c8c3:	add    BYTE PTR [ebp-0x6a7ff76c],dh
  41c8c9:	adc    BYTE PTR [eax],cl
  41c8cb:	add    BYTE PTR [ebp-0x5a7fe7ec],ah
  41c8d1:	xchg   esp,eax
  41c8d2:	sbb    BYTE PTR [eax],al
  41c8d4:	xchg   ebp,eax
  41c8d5:	nop
  41c8d6:	or     BYTE PTR [eax+0x189095],al
  41c8dc:	test   DWORD PTR [eax],edx
  41c8de:	or     BYTE PTR [eax-0x7ff76f7b],al
  41c8e4:	push   ebp
  41c8e5:	xchg   esp,eax
  41c8e6:	sbb    BYTE PTR [eax],al
  41c8e8:	jne    0x41c8fe
  41c8ea:	sbb    BYTE PTR [eax],al
  41c8ec:	mov    WORD PTR [ebp-0x5273fff8],gs
  41c8f2:	mov    BYTE PTR [eax],al
  41c8f4:	or     al,0xce
  41c8f6:	mov    BYTE PTR [eax],al
  41c8f8:	mov    WORD PTR [ebp-0x31f3fff8],gs
  41c8fe:	or     BYTE PTR [eax],dl
  41c900:	or     al,0xce
  41c902:	mov    BYTE PTR [eax],dl
  41c904:	or     al,0xae
  41c906:	mov    BYTE PTR [eax],dl
  41c908:	mov    ebp,es
  41c90a:	or     al,BYTE PTR [eax]
  41c90c:	mov    WORD PTR [ebp-0x527bfdf6],gs
  41c912:	or     BYTE PTR [eax],al
  41c914:	mov    ebp,es
  41c916:	or     BYTE PTR [edx],al
  41c918:	xchg   esp,eax
  41c919:	lods   eax,DWORD PTR ds:[esi]
  41c91a:	or     al,BYTE PTR [eax]
  41c91c:	test   BYTE PTR [ebp-0x4a73fff8],ch
  41c922:	or     al,BYTE PTR [edx]
	...
  41c938:	mov    WORD PTR [ebp-0x3a6bfff6],gs
  41c93e:	or     BYTE PTR [edx],al
  41c940:	mov    WORD PTR [ebp-0x4a7bfff8],?
  41c946:	or     BYTE PTR [eax],al
  41c948:	xchg   esp,eax
  41c949:	lods   eax,DWORD PTR ds:[esi]
  41c94a:	or     BYTE PTR [edx],al
  41c94c:	mov    ebp,es
  41c94e:	or     al,BYTE PTR [edx]
  41c950:	test   BYTE PTR [ebp-0x5273fdf8],dh
  41c956:	or     BYTE PTR [edx],al
  41c958:	xchg   esp,eax
  41c959:	lds    ecx,FWORD PTR [edx]
  41c95b:	add    BYTE PTR [ebp+ebp*4-0x4a7bfff8],cl
  41c962:	or     BYTE PTR [eax],al
  41c964:	mov    WORD PTR [ebp-0x526bfdf6],gs
  41c96a:	or     al,BYTE PTR [eax]
  41c96c:	mov    WORD PTR [ebp-0x5273fdf6],gs
  41c972:	or     BYTE PTR [edx],al
  41c974:	test   BYTE PTR [ebp-0x6b6bfdf8],dh
  41c97a:	test   DWORD PTR ds:0x5f7948e,0x5df8c8c
  41c984:	mov    ss,WORD PTR [edi+ebx*8-0x86b71fd]
  41c98b:	add    eax,0x3f78c8c
  41c990:	mov    WORD PTR [edi+eiz*8-0x207371fb],ss
  41c997:	add    eax,0x3df948c
	...
  41c9b0:	mov    WORD PTR [edi+ebx*8-0x207371fb],cs
  41c9b7:	add    ecx,DWORD PTR [esp+ecx*4-0x6b71fc19]
  41c9be:	test   DWORD PTR ds:0x3df948c,0x5df948e
  41c9c8:	mov    cs,WORD PTR [edi+ebx*8-0x207373fb]
  41c9cf:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fa21]
  41c9d6:	out    0x3,eax
  41c9d8:	mov    ss,WORD PTR [edi+eiz*8-0x207371fb]
  41c9df:	add    eax,0x3f78c8c
  41c9e4:	mov    WORD PTR [edi+ebx*8-0x206b73fb],cs
  41c9eb:	add    ecx,DWORD PTR [esp+edx*4-0x7371fc09]
  41c9f2:	test   DWORD PTR [ecx],0x3df8c8c
  41c9f8:	mov    ss,WORD PTR [edi+ebx*8-0x87373fd]
  41c9ff:	add    DWORD PTR [esi-0x73fc0874],ecx
  41ca05:	xchg   esp,eax
  41ca06:	or     cl,ah
  41ca08:	lea    edx,[edx-0x6d7216f8]
  41ca0e:	or     cl,dh
  41ca10:	(bad)  
  41ca11:	xchg   esp,eax
  41ca12:	add    cl,ch
	...
  41ca28:	(bad)  
  41ca29:	xchg   edx,eax
  41ca2a:	add    cl,ah
  41ca2c:	lea    edx,[eax+eax*1+0x8948de1]
  41ca33:	jmp    0xf1425cc7
  41ca38:	lea    edx,[edx-0x6b701ef8]
  41ca3e:	or     cl,ah
  41ca40:	(bad)  
  41ca41:	xchg   edx,eax
  41ca42:	add    cl,ch
  41ca44:	lea    edx,[edx+0x146fe808]
  41ca4a:	or     BYTE PTR [eax+0x68],ch
  41ca4d:	xchg   esp,eax
  41ca4e:	or     BYTE PTR [eax+0x70],ch
  41ca51:	xchg   esp,eax
  41ca52:	or     BYTE PTR [ecx-0x78],ch
  41ca55:	xchg   esp,eax
  41ca56:	or     BYTE PTR [ecx+0x70],ch
  41ca59:	adc    al,0x8
  41ca5b:	push   0xe8081488
  41ca60:	(bad)  
  41ca61:	adc    al,0x8
  41ca63:	call   0xe94a5f17
  41ca68:	(bad)  
  41ca69:	xchg   esp,eax
  41ca6a:	or     cl,ch
  41ca6c:	scas   eax,DWORD PTR es:[edi]
  41ca6d:	adc    al,0x8
  41ca6f:	jmp    0x6849df23
  41ca74:	test   al,0x14
  41ca76:	or     BYTE PTR [eax-0x70],ch
  41ca79:	xchg   esp,eax
  41ca7a:	or     cl,ch
  41ca7c:	(bad)  
  41ca7d:	xchg   esp,eax
  41ca7e:	or     BYTE PTR [ecx-0x70],ch
  41ca81:	adc    al,0x8
  41ca83:	call   0xe849df17
  41ca88:	(bad)  
  41ca89:	xchg   esp,eax
  41ca8a:	or     cl,ch
	...
  41caa0:	outs   dx,DWORD PTR ds:[esi]
  41caa1:	xchg   esp,eax
  41caa2:	or     cl,ch
  41caa4:	(bad)  
  41caa5:	adc    al,0x8
  41caa7:	add    BYTE PTR [ecx+esi*2-0x6edaff78],dh
  41caae:	or     BYTE PTR [eax],al
  41cab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cab1:	xchg   ecx,eax
  41cab2:	mov    BYTE PTR [eax],al
  41cab4:	je     0x41cb27
  41cab6:	or     BYTE PTR [eax],al
  41cab8:	cmc    
  41cab9:	jno    0x41cac3
  41cabb:	add    ah,ah
  41cabd:	xchg   ecx,eax
  41cabe:	mov    BYTE PTR [eax],al
  41cac0:	fs xchg ecx,eax
  41cac2:	or     BYTE PTR [eax],al
  41cac4:	cmc    
  41cac5:	jno    0x41cacf
  41cac7:	add    ch,dh
  41cac9:	xchg   ecx,eax
  41caca:	mov    BYTE PTR [eax],al
  41cacc:	gs jno 0x41cad7
  41cacf:	add    ch,ah
  41cad1:	jno    0x41ca5b
  41cad3:	add    BYTE PTR [ecx+esi*2-0x6e4bff78],dh
  41cada:	or     BYTE PTR [eax],al
  41cadc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cadd:	xchg   ecx,eax
  41cade:	mov    BYTE PTR [eax],al
  41cae0:	and    al,0x91
  41cae2:	mov    BYTE PTR [eax],al
  41cae4:	xor    eax,0xb4008871
  41cae9:	jno    0x41ca73
  41caeb:	add    BYTE PTR [ecx+edx*4-0x6edafff8],ah
  41caf2:	or     BYTE PTR [eax],al
  41caf4:	cmc    
  41caf5:	nop
  41caf6:	or     BYTE PTR [eax],al
  41caf8:	cmc    
  41caf9:	jo     0x41ca83
  41cafb:	add    BYTE PTR [ebp+0x71],ah
  41cafe:	or     BYTE PTR [eax],al
  41cb00:	gs xchg ecx,eax
  41cb02:	mov    BYTE PTR [eax],al
	...
  41cb18:	je     0x41caab
  41cb1a:	mov    BYTE PTR [eax],al
  41cb1c:	hlt    
  41cb1d:	nop
  41cb1e:	or     BYTE PTR [eax],al
  41cb20:	in     al,0x70
  41cb22:	mov    BYTE PTR [eax],al
  41cb24:	fs jno 0x41cb2f
  41cb27:	add    BYTE PTR [ecx+esi*2],dh
  41cb2a:	or     BYTE PTR [eax],al
  41cb2c:	xor    eax,0x24000890
  41cb31:	jo     0x41cabb
  41cb33:	add    BYTE PTR [esp+ebp*1-0x5373fff4],cl
  41cb3a:	or     BYTE PTR [eax],al
  41cb3c:	mov    WORD PTR [ebx-0x5373ffd8],gs
  41cb42:	or     BYTE PTR [eax+0x28ac8c],al
  41cb48:	mov    WORD PTR ds:0x3c8c802c,?
  41cb4e:	or     al,0x80
  41cb50:	mov    WORD PTR [eax+ebp*1+0x2c3d8c00],?
  41cb57:	add    BYTE PTR [ebp+edi*4-0x43737ff8],cl
  41cb5e:	sub    BYTE PTR [eax+0xc3d8c],al
  41cb64:	mov    WORD PTR [ebp-0x42737ff8],?
  41cb6a:	sub    BYTE PTR [eax],al
  41cb6c:	mov    WORD PTR ds:0xbd8c802c,?
  41cb72:	or     DWORD PTR [eax],eax
  41cb74:	mov    WORD PTR [ebp-0x4271f7f7],?
  41cb7a:	or     BYTE PTR [eax],cl
	...
  41cb90:	mov    ?,WORD PTR [ebp-0x4231fff7]
  41cb96:	or     BYTE PTR [eax],cl
  41cb98:	mov    WORD PTR [ebp-0x4273fff7],?
  41cb9e:	or     BYTE PTR [eax],al
  41cba0:	dec    esp
  41cba1:	mov    ebp,0xbd8e0808
  41cba6:	or     DWORD PTR [eax],ecx
  41cba8:	dec    esp
  41cba9:	mov    ebp,0xbd8c0808
  41cbae:	or     DWORD PTR [eax],eax
  41cbb0:	mov    ?,WORD PTR [ebp-0x42b3f7f7]
  41cbb6:	or     DWORD PTR [eax],eax
  41cbb8:	dec    esi
  41cbb9:	mov    ebp,0xbd4e0808
  41cbbe:	or     DWORD PTR [eax],ecx
  41cbc0:	mov    WORD PTR [edi+ebx*8-0x20ab73fd],ss
  41cbc7:	add    ecx,DWORD PTR [esi+edx*4+0x549403df]
  41cbce:	fild   WORD PTR [ebx]
  41cbd0:	xchg   esp,eax
  41cbd1:	push   esp
  41cbd2:	fild   WORD PTR [ebx]
  41cbd4:	mov    WORD PTR [edi+ebx*8-0x20ab73fe],ss
  41cbdb:	add    dl,BYTE PTR [esi+edx*2+0x569402df]
  41cbe2:	fild   WORD PTR [edx]
  41cbe4:	mov    WORD PTR [esi+0x568403df],ss
  41cbea:	fild   WORD PTR [edx]
  41cbec:	mov    WORD PTR [edi+ebx*8+0x3],ss
  41cbf0:	mov    WORD PTR [edi+ebx*8+0x3],ss
	...
  41cc07:	add    BYTE PTR [esi+edx*2-0x697bfd21],cl
  41cc0e:	fild   WORD PTR [ebx]
  41cc10:	mov    WORD PTR [esi+0x568c03df],ss
  41cc16:	fild   WORD PTR [edx]
  41cc18:	test   BYTE PTR [edi+ebx*8-0x206b7bfd],dl
  41cc1f:	add    cl,BYTE PTR [esi+edx*2-0x6b73fd21]
  41cc26:	fild   WORD PTR [ebx]
  41cc28:	mov    WORD PTR [esi+0x548c03df],ss
  41cc2e:	fild   WORD PTR [ebx]
  41cc30:	xchg   esp,eax
  41cc31:	xchg   esi,eax
  41cc32:	fild   WORD PTR [edx]
  41cc34:	mov    WORD PTR [esi-0x21],ss
  41cc37:	add    al,BYTE PTR [esp+edx*2-0x6973fd21]
  41cc3e:	fild   WORD PTR [ebx]
  41cc40:	mov    WORD PTR [edi+ebx*8+0x3],ss
  41cc44:	xchg   esp,eax
  41cc45:	push   esi
  41cc46:	fild   WORD PTR [edx]
  41cc48:	test   BYTE PTR [esi+0x548402df],dl
  41cc4e:	or     cl,ch
  41cc50:	mov    ss,WORD PTR [eax+ecx*1+0xa948fe9]
  41cc57:	jmp    0xe98c68eb
  41cc5c:	mov    BYTE PTR [edx+ecx*2+0x89c90e9],bl
  41cc63:	jmp    0xe98c60f7
  41cc68:	nop
  41cc69:	pushf  
  41cc6a:	dec    edx
  41cc6b:	jmp    0x41cc70
	...
  41cc80:	(bad)  
  41cc81:	pushf  
  41cc82:	or     ch,cl
  41cc84:	(bad)  
  41cc85:	xchg   esp,eax
  41cc86:	or     cl,ch
  41cc88:	(bad)  
  41cc89:	pushf  
  41cc8a:	dec    eax
  41cc8b:	jmp    0xe98c611f
  41cc90:	mov    BYTE PTR [eax+ecx*1+0xa9490e9],bl
  41cc97:	jmp    0xe98a6124
  41cc9c:	(bad)  
  41cc9d:	pushf  
  41cc9e:	or     cl,ch
  41cca0:	(bad)  
  41cca1:	xchg   esp,eax
  41cca2:	or     cl,ch
  41cca4:	(bad)  
  41cca5:	pushf  
  41cca6:	dec    eax
  41cca7:	jmp    0xe94c6934
  41ccac:	nop
  41ccad:	xchg   esp,eax
  41ccae:	dec    eax
  41ccaf:	stc    
  41ccb0:	(bad)  
  41ccb1:	xchg   esp,eax
  41ccb2:	sub    cl,ch
  41ccb4:	(bad)  
  41ccb5:	push   esp
  41ccb6:	sub    cl,ch
  41ccb8:	dec    edi
  41ccb9:	mov    dl,0xf4
  41ccbb:	(bad)  [edi+0x72]
  41ccbe:	sub    cl,ch
  41ccc0:	(bad)  
  41ccc1:	push   esp
  41ccc2:	sub    cl,bl
  41ccc4:	(bad)  
  41ccc5:	xchg   esp,eax
  41ccc6:	or     cl,bl
  41ccc8:	iret   
  41ccc9:	jno    0x41ccf3
  41cccb:	jmp    0xe94a215f
  41ccd0:	iret   
  41ccd1:	mov    cl,0x14
  41ccd3:	stc    
  41ccd4:	iret   
  41ccd5:	jno    0x41ccdf
  41ccd7:	jmp    0x4a216b
  41ccdc:	mov    ch,0x95
  41ccde:	or     BYTE PTR [eax],ah
  41cce0:	mov    ch,0x95
  41cce2:	dec    eax
	...
  41ccf7:	add    BYTE PTR [ebp-0x4ae00b2b],dh
  41ccfd:	xchg   ebp,eax
  41ccfe:	or     BYTE PTR [eax],ah
  41cd00:	mov    ch,0xd5
  41cd02:	hlt    
  41cd03:	jmp    DWORD PTR [ebp-0x5afff76b]
  41cd09:	xchg   ebp,eax
  41cd0a:	dec    eax
  41cd0b:	add    BYTE PTR [ebp-0x5ae00b2b],ah
  41cd11:	aad    0xf4
  41cd13:	jmp    DWORD PTR [ebp+0x650034d5]
  41cd19:	aad    0xf4
  41cd1b:	pop    ds
  41cd1c:	gs xchg ebp,eax
  41cd1e:	or     BYTE PTR [eax],al
  41cd20:	jne    0x41ccb7
  41cd22:	dec    eax
  41cd23:	and    BYTE PTR [ebp-0x6b],dh
  41cd26:	dec    eax
  41cd27:	and    BYTE PTR [ebp-0x6b],dh
  41cd2a:	or     BYTE PTR [eax],al
  41cd2c:	gs aad 0x34
  41cd2f:	add    BYTE PTR [ebp-0x2b],ah
  41cd32:	xor    al,0x20
  41cd34:	xor    eax,0x35fff4d5
  41cd39:	aad    0x34
  41cd3b:	add    BYTE PTR ds:0x252034d5,dh
  41cd41:	xchg   ebp,eax
  41cd42:	or     BYTE PTR [eax],ah
  41cd44:	and    eax,0x251ff4d5
  41cd49:	xchg   ebp,eax
  41cd4a:	or     BYTE PTR [eax],al
  41cd4c:	and    eax,0x25204895
  41cd51:	aad    0x34
  41cd53:	add    BYTE PTR ds:0xf52034d5,dh
  41cd59:	xchg   esp,eax
  41cd5a:	dec    eax
	...
  41cd6f:	add    ch,ah
  41cd71:	aam    0xf4
  41cd73:	push   ebp
  41cd75:	xchg   esp,eax
  41cd76:	or     BYTE PTR [eax],ah
  41cd78:	in     eax,0x94
  41cd7a:	dec    eax
  41cd7b:	add    BYTE PTR [ebx+edi*4-0x447c0038],cl
  41cd82:	or     BYTE PTR [eax],al
  41cd84:	lods   al,BYTE PTR ds:[esi]
  41cd85:	retf   
  41cd86:	enter  0xd3ff,0xca
  41cd8a:	or     BYTE PTR [eax],al
  41cd8c:	ins    BYTE PTR es:[edi],dx
  41cd8d:	retf   
  41cd8e:	enter  0x6c3f,0xbb
  41cd92:	enter  0x8c3f,0xbb
  41cd96:	or     BYTE PTR [eax+0x6c],al
  41cd99:	stos   DWORD PTR es:[edi],eax
  41cd9a:	enter  0x8c3f,0xbb
  41cd9e:	enter  0x6c3f,0xbb
  41cda2:	or     BYTE PTR [eax],al
  41cda4:	mov    ebx,cs
  41cda6:	or     BYTE PTR [eax+0x6c],al
  41cda9:	retf   
  41cdaa:	or     BYTE PTR [eax],al
  41cdac:	mov    WORD PTR [ebp-0x417c0038],?
  41cdb2:	or     BYTE PTR [eax-0x54],al
  41cdb5:	lods   eax,DWORD PTR ds:[esi]
  41cdb6:	enter  0x8c3f,0xbd
  41cdba:	enter  0x6bff,0xae
  41cdbe:	or     BYTE PTR [eax-0x74],al
  41cdc1:	lods   eax,DWORD PTR ds:[esi]
  41cdc2:	enter  0x7bff,0xbd
  41cdc6:	or     BYTE PTR [eax],al
  41cdc8:	mov    WORD PTR [ebp-0x4293c038],?
  41cdce:	or     BYTE PTR [eax],al
  41cdd0:	ins    BYTE PTR es:[edi],dx
  41cdd1:	int    0x8
  41cdd3:	inc    eax
	...
  41cde8:	mov    WORD PTR [ebp-0x426c0038],gs
  41cdee:	or     BYTE PTR [eax],ah
  41cdf0:	mov    WORD PTR [ebx-0x4477dff8],?
  41cdf6:	lock dec DWORD PTR [edi-0x73fff743]
  41cdfd:	mov    ebp,0xbc0bfff0
  41ce02:	lock dec DWORD PTR [edi-0x73e00f45]
  41ce09:	xchg   esp,eax
  41ce0a:	(bad)  
  41ce0c:	xchg   ebx,eax
  41ce0d:	cwde   
  41ce0e:	loope  0x41ce0b
  41ce10:	mov    ebx,DWORD PTR [eax-0x6b53fc21]
  41ce16:	fild   WORD PTR [ebx]
  41ce18:	mov    WORD PTR [ecx+eiz*8-0x1e6773fd],ss
  41ce1f:	add    ecx,DWORD PTR [esp+edx*4-0x6773fc21]
  41ce26:	loope  0x41ce2b
  41ce28:	ins    BYTE PTR es:[edi],dx
  41ce29:	cwde   
  41ce2a:	loope  0x41ce27
  41ce2c:	mov    bl,0xaf
  41ce2e:	fdivp  st(3),st
  41ce30:	stos   DWORD PTR es:[edi],eax
  41ce31:	xchg   ebx,eax
  41ce32:	loope  0x41ce2f
  41ce34:	adc    DWORD PTR [ecx+eiz*8-0x206b93fd],0xfffffffb
  41ce3c:	xchg   ebx,eax
  41ce3d:	xchg   ebx,eax
  41ce3e:	loope  0x41ce43
  41ce40:	mov    WORD PTR [eax-0x6753fc21],ds
  41ce46:	(bad)  
  41ce48:	fwait
  41ce49:	cwde   
  41ce4a:	loope  0x41ce4f
	...
  41ce60:	lods   al,BYTE PTR ds:[esi]
  41ce61:	xchg   esp,eax
  41ce62:	fild   WORD PTR [ebx]
  41ce64:	lods   al,BYTE PTR ds:[esi]
  41ce65:	cwde   
  41ce66:	(bad)  
  41ce68:	arpl   WORD PTR [edi-0x50a40420],bp
  41ce6e:	loopne 0x41ce6b
  41ce70:	jae    0x41ce0a
  41ce72:	(bad)  
  41ce74:	stos   DWORD PTR es:[edi],eax
  41ce75:	xchg   esp,eax
  41ce76:	loope  0x41ce7b
  41ce78:	mov    WORD PTR [edi+ebx*8-0x206773fd],ss
  41ce7f:	sti    
  41ce80:	xchg   ebx,eax
  41ce81:	xchg   esp,eax
  41ce82:	fild   WORD PTR [ebx]
  41ce84:	mov    WORD PTR [eax-0x6b7c0421],ds
  41ce8a:	fild   WORD PTR [ebx]
  41ce8c:	ins    BYTE PTR es:[edi],dx
  41ce8d:	xchg   esp,eax
  41ce8e:	loope  0x41ce8b
  41ce90:	adc    edx,DWORD PTR [ebx-0x6cf4041f]
  41ce96:	or     bl,ch
  41ce98:	(bad)  
  41ce99:	je     0x41cea7
  41ce9b:	jmp    0x41ce2c
  41ce9d:	je     0x41ceab
  41ce9f:	jmp    0x41ce30
  41cea1:	xchg   esp,eax
  41cea2:	or     bl,ch
  41cea4:	(bad)  
  41cea5:	je     0x41ceaf
  41cea7:	jmp    0xe94e633b
  41ceac:	xlat   BYTE PTR ds:[ebx]
  41cead:	scas   al,BYTE PTR es:[edi]
  41ceae:	or     cl,ch
  41ceb0:	(bad)  
  41ceb1:	je     0x41cebb
  41ceb3:	jmp    0xeb4e5d7f
  41ceb8:	(bad)  
  41ceb9:	scas   al,BYTE PTR es:[edi]
  41ceba:	hlt    
  41cebb:	jmp    0x41ce74
  41cebd:	mov    cs,WORD PTR [eax]
  41cebf:	jmp    0xeb4e5d7b
	...
  41ced8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ced9:	scas   al,BYTE PTR es:[edi]
  41ceda:	hlt    
  41cedb:	jmp    0x41ce6c
  41cedd:	xchg   esp,eax
  41cede:	or     al,0xeb
  41cee0:	xchg   edi,eax
  41cee1:	mov    cs,WORD PTR [ecx+ebp*8]
  41cee4:	(bad)  
  41cee5:	je     0x41cef3
  41cee7:	jmp    0xe94a5d73
  41ceec:	(bad)  
  41ceed:	xchg   esp,eax
  41ceee:	or     bl,ch
  41cef0:	(bad)  
  41cef1:	xchg   esp,eax
  41cef2:	or     bl,ch
  41cef4:	ja     0x41ce84
  41cef6:	or     al,0xe9
  41cef8:	(bad)  
  41cef9:	xchg   esp,eax
  41cefa:	or     bl,ch
  41cefc:	mov    cs,WORD PTR [bx+si]
  41ceff:	jmp    0xe94e4393
  41cf04:	push   edi
  41cf05:	scas   al,BYTE PTR es:[edi]
  41cf06:	hlt    
  41cf07:	jmp    0x41ce98
  41cf09:	xchg   esp,eax
  41cf0a:	or     al,0xe9
  41cf0c:	inc    edi
  41cf0d:	scas   al,BYTE PTR es:[edi]
  41cf0e:	or     cl,ch
  41cf10:	aaa    
  41cf11:	scas   al,BYTE PTR es:[edi]
  41cf12:	hlt    
  41cf13:	jmp    0x41cea4
  41cf15:	je     0x41cf1f
  41cf17:	test   eax,0xe904ae1f
  41cf1c:	pop    ds
  41cf1d:	scas   al,BYTE PTR es:[edi]
  41cf1e:	hlt    
  41cf1f:	jmp    0x4a67b3
  41cf24:	in     eax,0xa1
  41cf26:	or     BYTE PTR [eax],dl
  41cf28:	cmc    
  41cf29:	xchg   ecx,eax
  41cf2a:	or     BYTE PTR [eax],dl
  41cf2c:	xor    eax,0x250ff4a2
  41cf31:	xchg   edx,eax
  41cf32:	or     BYTE PTR [eax],al
  41cf34:	in     eax,0x91
  41cf36:	or     BYTE PTR [eax],dl
  41cf38:	xor    eax,0xc92
	...
  41cf4d:	add    BYTE PTR [eax],al
  41cf4f:	add    ch,dh
  41cf51:	xchg   ecx,eax
  41cf52:	or     al,0x10
  41cf54:	and    eax,0xe51008a2
  41cf59:	mov    eax,ds:0xa1b50008
  41cf5e:	or     BYTE PTR [eax],dl
  41cf60:	cmc    
  41cf61:	mov    eax,ds:0xa1a50008
  41cf66:	hlt    
  41cf67:	jmp    DWORD PTR [ebp-0x68]
  41cf6a:	or     BYTE PTR [eax],al
  41cf6c:	mov    ch,0x91
  41cf6e:	or     al,0x10
  41cf70:	jne    0x41cf0a
  41cf72:	or     BYTE PTR [eax],dl
  41cf74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf75:	mov    eax,ds:0xa8650ff4
  41cf7a:	hlt    
  41cf7b:	push   DWORD PTR [ebp-0x5f]
  41cf7e:	or     BYTE PTR [eax],al
  41cf80:	mov    ch,0x98
  41cf82:	or     al,0x0
  41cf84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf85:	cwde   
  41cf86:	or     al,0x10
  41cf88:	mov    eax,gs:0xa8b51008
  41cf8e:	hlt    
  41cf8f:	push   DWORD PTR [ebp-0x6f]
  41cf92:	or     BYTE PTR [eax],al
  41cf94:	gs xchg ecx,eax
  41cf96:	or     BYTE PTR [eax],al
  41cf98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf99:	cwde   
  41cf9a:	or     al,0x10
  41cf9c:	jne    0x41cf36
  41cf9e:	or     BYTE PTR [eax],dl
  41cfa0:	xor    eax,0x650ff4a1
  41cfa5:	test   al,0x8
  41cfa7:	add    BYTE PTR ds:0xf5000c91,ah
  41cfad:	mov    al,ds:0xbb8c0008
  41cfb2:	or     BYTE PTR [eax+eax*1],al
	...
  41cfc5:	add    BYTE PTR [eax],al
  41cfc7:	add    BYTE PTR [ebx+edi*4-0x4483fc08],cl
  41cfce:	clc    
  41cfcf:	dec    DWORD PTR [ebx]
  41cfd1:	sti    
  41cfd2:	or     BYTE PTR [eax],al
  41cfd4:	mov    ebx,?
  41cfd6:	or     BYTE PTR [esp+ebx*4],al
  41cfd9:	mov    ebx,0xfaf3fff8
  41cfde:	clc    
  41cfdf:	add    ecx,DWORD PTR [ebx+edi*4-0x46c0008]
  41cfe6:	or     BYTE PTR [eax],al
  41cfe8:	mov    ebx,?
  41cfea:	or     BYTE PTR [eax],al
  41cfec:	jl     0x41cfa9
  41cfee:	or     BYTE PTR [esp+ebx*4],al
  41cff1:	sti    
  41cff2:	or     BYTE PTR [esp+ebx*4],al
  41cff5:	mov    ebx,0xbb9c0008
  41cffa:	or     BYTE PTR [esp+ecx*4],al
  41cffd:	jnp    0x41cffb
  41cfff:	call   FWORD PTR [ebx-0x73fff745]
  41d005:	jnp    0x41d003
  41d007:	add    edi,DWORD PTR [ebx+edi*2+0xc]
  41d00b:	add    al,0x8c
  41d00d:	jnp    0x41d01b
  41d00f:	add    BYTE PTR [ebp+edi*4-0x4263fbf8],bl
  41d016:	clc    
  41d017:	dec    DWORD PTR [ebx-0x7c000383]
  41d01d:	mov    ebp,0x7d8c0008
  41d022:	cld    
  41d023:	add    edi,DWORD PTR [ebp+edi*4-0x8]
  41d027:	add    ecx,DWORD PTR [ebp+edi*4+0x3f8]
	...
  41d03e:	add    BYTE PTR [eax],al
  41d040:	mov    WORD PTR [ebp-0x4],?
  41d043:	dec    DWORD PTR [ebx+0x7e]
  41d046:	cld    
  41d047:	inc    DWORD PTR [ebx+0x7e]
  41d04a:	or     al,0x4
  41d04c:	mov    WORD PTR [ebp-0x6b63fff8],?
  41d052:	fcomip st,st(3)
  41d054:	pop    DWORD PTR [ebx+ecx*1-0x2153dc7c]
  41d05b:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41d062:	sub    edi,DWORD PTR [esi+0xb]
  41d065:	lods   al,BYTE PTR ds:[esi]
  41d066:	jp     0x41cfeb
  41d068:	add    ebp,DWORD PTR [esi+esi*1-0x2154047c]
  41d06f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41d076:	mov    ch,0x7c
  41d078:	jecxz  0x41d025
  41d07a:	data16 sbb bl,0xab
  41d07e:	cli    
  41d07f:	adc    bl,0xab
  41d082:	fiadd  WORD PTR [ebx]
  41d084:	mov    WORD PTR [edi+ebx*8+0x73948c03],ss
  41d08b:	jl     0x41d048
  41d08d:	stos   DWORD PTR es:[edi],eax
  41d08e:	dec    edx
  41d08f:	xor    BYTE PTR [ebx-0x547cf555],0xab
  41d096:	fiadd  WORD PTR [ebx]
  41d098:	mov    WORD PTR [edi+ebx*8+0x17948c03],ss
  41d09f:	jl     0x41d034
  41d0a1:	stos   DWORD PTR es:[edi],eax
  41d0a2:	call   0x0:0x81
	...
  41d0b5:	add    BYTE PTR [eax],al
  41d0b7:	add    BYTE PTR [ebx-0x7c7cdd55],cl
  41d0bd:	stos   DWORD PTR es:[edi],eax
  41d0be:	fiadd  WORD PTR [ebx]
  41d0c0:	mov    WORD PTR [edi+ebx*8+0x35948c03],ss
  41d0c7:	jl     0x41d134
  41d0c9:	stos   DWORD PTR es:[edi],eax
  41d0ca:	mov    dl,0x81
  41d0cc:	arpl   WORD PTR [ebx-0x54a47cce],bp
  41d0d2:	fiadd  WORD PTR [ebx]
  41d0d4:	mov    WORD PTR [edi+ebx*8+0x63948c03],ss
  41d0db:	jnp    0x41d120
  41d0dd:	stos   DWORD PTR es:[edi],eax
  41d0de:	pop    es
  41d0df:	lea    ecx,ds:0xf09f4ab
  41d0e5:	stos   DWORD PTR es:[edi],eax
  41d0e6:	hlt    
  41d0e7:	jmp    0xe94a657b
  41d0ec:	(bad)  
  41d0ed:	xchg   esp,eax
  41d0ee:	or     BYTE PTR [edi],dh
  41d0f0:	xchg   edi,eax
  41d0f1:	stos   DWORD PTR es:[edi],eax
  41d0f2:	hlt    
  41d0f3:	pop    ecx
  41d0f4:	or     eax,0xec5f4ab
  41d0f9:	stos   DWORD PTR es:[edi],eax
  41d0fa:	hlt    
  41d0fb:	jmp    0xe94a658f
  41d100:	(bad)  
  41d101:	xchg   esp,eax
  41d102:	or     BYTE PTR [edi-0xa0b548a],cl
  41d108:	or     al,0xab
  41d10a:	hlt    
  41d10b:	push   ecx
  41d10c:	push   cs
  41d10d:	stos   DWORD PTR es:[edi],eax
  41d10e:	hlt    
  41d10f:	jmp    0xe94a65a3
  41d114:	(bad)  
  41d115:	xchg   esp,eax
  41d116:	or     BYTE PTR [ebx+0x46],bl
  41d119:	stos   DWORD PTR es:[edi],eax
  41d11a:	hlt    
  41d11b:	rol    DWORD PTR [eax],0x0
	...
  41d12e:	add    BYTE PTR [eax],al
  41d130:	or     al,0xab
  41d132:	hlt    
  41d133:	jmp    0xe94a65c7
  41d138:	(bad)  
  41d139:	xchg   esp,eax
  41d13a:	or     cl,ch
  41d13c:	(bad)  
  41d13d:	xchg   esp,eax
  41d13e:	or     cl,ch
  41d140:	(bad)  
  41d141:	xchg   esp,eax
  41d142:	or     cl,ch
  41d144:	(bad)  
  41d145:	xchg   esp,eax
  41d146:	or     BYTE PTR ds:0x1bf4ab0b,ah
  41d14c:	adc    ebp,DWORD PTR [edx-0x55f4e00c]
  41d152:	hlt    
  41d153:	inc    ebp
  41d154:	adc    ebp,DWORD PTR [edx-0x55f4ce0c]
  41d15a:	hlt    
  41d15b:	ins    DWORD PTR es:[edi],dx
  41d15c:	adc    ebp,DWORD PTR [edx-0x55f4840c]
  41d162:	hlt    
  41d163:	dec    ebx
  41d164:	adc    ebp,DWORD PTR [edx-0x55f4c00c]
  41d16a:	hlt    
  41d16b:	add    cl,dl
  41d16d:	adc    ebp,esi
  41d16f:	(bad)  
  41d170:	std    
  41d171:	adc    ebp,esi
  41d173:	call   FWORD PTR [ecx]
  41d175:	adc    dh,ch
  41d177:	dec    DWORD PTR [edi]
  41d179:	adc    dh,ch
  41d17b:	(bad)  
  41d17c:	cmp    edx,DWORD PTR [edx]
  41d17e:	cmc    
  41d17f:	call   FWORD PTR [ecx]
  41d181:	adc    dh,ch
  41d183:	dec    DWORD PTR [edi+0x7ffff51c]
  41d189:	sbb    al,0xf5
  41d18b:	inc    DWORD PTR [ecx+0x12]
  41d18e:	cmc    
  41d18f:	jmp    DWORD PTR [ecx]
  41d191:	adc    dh,ch
  41d193:	inc    DWORD PTR [eax]
	...
  41d1a5:	add    BYTE PTR [eax],al
  41d1a7:	add    bl,dl
  41d1a9:	adc    ebp,esi
  41d1ab:	jmp    DWORD PTR [ebx]
  41d1ad:	adc    dh,ch
  41d1af:	jmp    DWORD PTR [edi+0x1c]
  41d1b2:	cmc    
  41d1b3:	call   DWORD PTR [ebp+0x1c]
  41d1b6:	cmc    
  41d1b7:	(bad)  
  41d1b8:	cmp    DWORD PTR [esi*8-0xae35001],ebx
  41d1bf:	jmp    FWORD PTR [edi+0x1c]
  41d1c2:	cmc    
  41d1c3:	dec    DWORD PTR [ebx-0x58000ae4]
  41d1c9:	sbb    al,0xf5
  41d1cb:	(bad)  
  41d1cc:	fstp   DWORD PTR [esi*8-0xae46801]
  41d1d3:	inc    DWORD PTR [edi+0x69fff51b]
  41d1d9:	sbb    esi,ebp
  41d1db:	call   DWORD PTR [ebp+0x1b]
  41d1de:	cmc    
  41d1df:	call   ebp
  41d1e1:	sbb    esi,ebp
  41d1e3:	call   ecx
  41d1e5:	sbb    esi,ebp
  41d1e7:	jmp    ebp
  41d1e9:	sbb    al,0xf5
  41d1eb:	call   ebp
  41d1ed:	sbb    al,0xf5
  41d1ef:	call   edi
  41d1f1:	sbb    al,0xf5
  41d1f3:	inc    edi
  41d1f5:	sbb    al,0xf5
  41d1f7:	dec    DWORD PTR [ebp+esi*8+0x1153ff7f]
  41d1fe:	cmp    bh,0x4b
  41d201:	adc    DWORD PTR [eax+0x7edb43ff],eax
  41d207:	(bad)  
  41d208:	cmp    esp,ebx
  41d20a:	jle    0x41d20b
	...
  41d220:	xor    ecx,DWORD PTR [ebx-0x30d4007e]
  41d226:	jle    0x41d227
  41d228:	and    ecx,ebp
  41d22a:	jle    0x41d22b
  41d22c:	sbb    edi,DWORD PTR ds:0x3513ff7f
  41d232:	jg     0x41d233
  41d234:	or     ebx,DWORD PTR [ebx]
  41d236:	jg     0x41d237
  41d238:	add    ebp,DWORD PTR [ebx]
  41d23a:	jg     0x41d23b
  41d23c:	sti    
  41d23d:	and    BYTE PTR [edi-0x1],bh
  41d240:	repz mov edx,0x858c0008
  41d246:	jg     0x41d247
  41d248:	jecxz  0x41d206
  41d24a:	cmp    edi,0xff81a4db
  41d250:	rcl    esp,cl
  41d252:	cmp    edi,0xff81d4cb
  41d258:	ret    
  41d259:	clc    
  41d25a:	cmp    edi,0x8babb
  41d260:	mov    WORD PTR [ebx],ss
  41d262:	cmp    bh,0xab
  41d265:	mov    edx,0x3b8c0008
  41d26a:	jg     0x41d26b
  41d26c:	fwait
  41d26d:	sub    bh,BYTE PTR [edi-0x1]
  41d270:	xchg   ebx,eax
  41d271:	push   cs
  41d272:	jg     0x41d273
  41d274:	mov    ebp,DWORD PTR [edi+edi*2]
  41d277:	inc    DWORD PTR [ebx+0x7bff7efe]
  41d27d:	push   cs
  41d27e:	jg     0x41d27f
  41d280:	jae    0x41d260
  41d282:	jle    0x41d283
	...
  41d298:	imul   edx,DWORD PTR [ebp-0x579c766f],0xffffffe0
  41d29f:	mov    ebx,DWORD PTR [ebx-0x58]
  41d2a2:	test   BYTE PTR [ebx-0x743957ad],0x4b
  41d2a9:	test   al,0xde
  41d2ab:	add    ecx,DWORD PTR [esp+edx*4-0x57c473d3]
  41d2b2:	fiadd  WORD PTR [ebx]
  41d2b4:	mov    WORD PTR [ecx+eax*1-0x2b57d474],ss
  41d2bb:	mov    esp,DWORD PTR [ebx]
  41d2bd:	test   al,0xde
  41d2bf:	add    ecx,DWORD PTR [esp+edx*4-0x57ec7389]
  41d2c6:	mov    cl,BYTE PTR [ebx+ecx*1+0x38c6ea8]
  41d2cd:	test   al,0x72
  41d2cf:	mov    ebx,?
  41d2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d2:	and    al,0x8c
  41d2d4:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d6:	adc    BYTE PTR [ebx+ebp*8-0x73fc2159],cl
  41d2dd:	xchg   esp,eax
  41d2de:	sbb    DWORD PTR [ebx+ebx*8-0x2c73eb59],ecx
  41d2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e6:	in     al,dx
  41d2e7:	mov    cl,bl
  41d2e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ea:	into   
  41d2eb:	mov    al,bl
  41d2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ee:	call   0xc6e98e7d
  41d2f3:	mov    dh,BYTE PTR [ebx-0x54755159]
  41d2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2fa:	sub    BYTE PTR [ebx+0x0],cl
	...
  41d310:	mov    ds:0x9b8b20a7,eax
  41d315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d316:	mov    edx,DWORD PTR cs:[ebx-0x73fc2159]
  41d31d:	xchg   esp,eax
  41d31e:	pop    ecx
  41d31f:	mov    eax,DWORD PTR [ebx+0x7b8b34a7]
  41d325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d326:	pop    es
  41d327:	jmp    0x254a67bb
  41d32c:	adc    DWORD PTR [edi-0x58f6c40c],esp
  41d332:	hlt    
  41d333:	aas    
  41d334:	adc    DWORD PTR [edi-0x58f6fa0c],esp
  41d33a:	hlt    
  41d33b:	adc    DWORD PTR [ecx],edx
  41d33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d33e:	hlt    
  41d33f:	ins    DWORD PTR es:[edi],dx
  41d340:	or     BYTE PTR [edi-0x58efa40c],ah
  41d346:	hlt    
  41d347:	dec    ebx
  41d348:	or     BYTE PTR [edi-0x58efc00c],ah
  41d34e:	hlt    
  41d34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d350:	or     BYTE PTR [edi-0x58efce0c],ah
  41d356:	hlt    
  41d357:	cmp    eax,0x43f4a708
  41d35c:	adc    BYTE PTR [edi-0x58f4100c],ah
  41d362:	hlt    
  41d363:	aad    0x13
  41d365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d366:	hlt    
  41d367:	add    eax,DWORD PTR [edi+eiz*4]
  41d36a:	hlt    
  41d36b:	repz adc esp,DWORD PTR [edi-0x58f44a0c]
  41d372:	hlt    
  41d373:	mov    ebp,0x0
	...
  41d388:	adc    esp,DWORD PTR [edi-0x58f4780c]
  41d38e:	hlt    
  41d38f:	(bad)  
  41d390:	adc    esp,DWORD PTR [edi-0x58f4a40c]
  41d396:	hlt    
  41d397:	dec    ecx
  41d398:	adc    esp,DWORD PTR [edi-0x58f4c20c]
  41d39e:	hlt    
  41d39f:	and    edx,DWORD PTR [ebx]
  41d3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3a2:	hlt    
  41d3a3:	ret    
  41d3a4:	adc    al,0xa7
  41d3a6:	hlt    
  41d3a7:	mov    DWORD PTR [edi+eiz*4],0xa704ebf4
  41d3ae:	hlt    
  41d3af:	cmc    
  41d3b0:	adc    al,0xa6
  41d3b2:	hlt    
  41d3b3:	add    BYTE PTR [edi+0x77fff51b],dl
  41d3b9:	sbb    eax,0x1ba1fff5
  41d3be:	cmc    
  41d3bf:	inc    DWORD PTR [ebp-0x6a000ae5]
  41d3c5:	sbb    esi,ebp
  41d3c7:	dec    DWORD PTR [ecx-0x1a000ae5]
  41d3cd:	sbb    esi,ebp
  41d3cf:	inc    ebp
  41d3d1:	sbb    esi,ebp
  41d3d3:	call   edi
  41d3d5:	sbb    esi,ebp
  41d3d7:	push   DWORD PTR [edi+0x1b]
  41d3da:	cmc    
  41d3db:	(bad)  
  41d3dc:	out    dx,eax
  41d3dd:	sbb    esi,ebp
  41d3df:	call   DWORD PTR [ebx]
  41d3e1:	sbb    al,0xf5
  41d3e3:	jmp    FWORD PTR [ebx-0x7a000ae5]
  41d3e9:	push   cs
  41d3ea:	cmc    
  41d3eb:	inc    DWORD PTR [eax]
	...
  41d3fd:	add    BYTE PTR [eax],al
  41d3ff:	add    BYTE PTR [ebp+0xe],bh
  41d402:	cmc    
  41d403:	inc    DWORD PTR [ebp+0x10]
  41d406:	cmc    
  41d407:	jmp    FWORD PTR [ecx]
  41d409:	adc    ch,dh
  41d40b:	push   DWORD PTR [edi]
  41d40d:	adc    ch,dh
  41d40f:	jmp    DWORD PTR [edi+0xe]
  41d412:	cmc    
  41d413:	jmp    FWORD PTR [edi+0xe]
  41d416:	cmc    
  41d417:	call   DWORD PTR [ebp+0xe]
  41d41a:	cmc    
  41d41b:	push   DWORD PTR ds:0x3bfff50e
  41d421:	push   cs
  41d422:	cmc    
  41d423:	push   DWORD PTR [ebp-0x60fff76f]
  41d429:	push   cs
  41d42a:	cmc    
  41d42b:	jmp    DWORD PTR [edi-0x20000af2]
  41d431:	push   cs
  41d432:	cmc    
  41d433:	dec    edi
  41d435:	push   cs
  41d436:	cmc    
  41d437:	jmp    FWORD PTR [edi+0xd]
  41d43a:	cmc    
  41d43b:	jmp    FWORD PTR [ebx+0xd]
  41d43e:	cmc    
  41d43f:	dec    DWORD PTR [ebx+edi*4+0x538c0008]
  41d446:	(bad)  
  41d447:	inc    DWORD PTR [ebx-0x73fff745]
  41d44d:	cmp    ecx,DWORD PTR [esi-0x71b48c01]
  41d453:	jmp    FWORD PTR [ebx+0xf]
  41d456:	mov    ?,edi
  41d458:	arpl   WORD PTR [ecx-0x72],cx
  41d45b:	call   FWORD PTR [ebx-0x5]
  41d45e:	(bad)  
  41d45f:	call   DWORD PTR [ebx-0x15]
  41d462:	(bad)  
  41d463:	inc    DWORD PTR [eax]
	...
  41d475:	add    BYTE PTR [eax],al
  41d477:	add    BYTE PTR [ebx+0x1b],cl
  41d47a:	mov    ?,edi
  41d47c:	inc    ebx
  41d47d:	sub    DWORD PTR [esi-0x7f46c401],ecx
  41d483:	push   DWORD PTR [ebx]
  41d485:	ret    
  41d486:	cmp    bh,0x2b
  41d489:	rol    DWORD PTR [eax+0x8bb23ff],cl
  41d48f:	add    BYTE PTR [ebp+ebp*8-0x44ec0080],cl
  41d496:	or     BYTE PTR [eax],al
  41d498:	mov    ecx,ds
  41d49a:	cmp    bh,0x3
  41d49d:	in     eax,0x80
  41d49f:	(bad)  
  41d4a0:	sti    
  41d4a1:	mov    edx,0x438c0008
  41d4a6:	cmp    edi,0xff810eeb
  41d4ac:	jecxz  0x41d4f8
  41d4ae:	cmp    edi,0xff8146db
  41d4b4:	shl    DWORD PTR [ecx+eax*4-0x1],cl
  41d4b8:	retf   
  41d4b9:	push   0xbac3ff81
  41d4be:	or     BYTE PTR [eax],al
  41d4c0:	mov    WORD PTR [ecx-0x5b4c007f],es
  41d4c6:	cmp    edi,0xff83acab
  41d4cc:	mov    ds:0x9b8aef93,eax
  41d4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4d2:	or     BYTE PTR [ebx-0x74f95b6d],cl
  41d4d8:	mov    esp,DWORD PTR [esi+ecx*1+0x8b]
	...
  41d4ef:	add    BYTE PTR [ebx+0x7b8b08a4],al
  41d4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4f6:	and    BYTE PTR [ebx-0x74f15b8d],cl
  41d4fc:	imul   esp,DWORD PTR [esi+ebx*8+0x19948c03],0xffffff8b
  41d504:	pop    ebx
  41d505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d506:	adc    al,0x8b
  41d508:	push   ebx
  41d509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d50a:	fiadd  WORD PTR [ebx]
  41d50c:	mov    WORD PTR [esp+eax*8+0x426cd03],ss
  41d513:	mov    ds:0xab2d39bf,eax
  41d518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d519:	cmp    DWORD PTR [eax],esp
  41d51b:	add    al,0x6b
  41d51d:	xchg   esi,eax
  41d51e:	adc    DWORD PTR [edi-0x555ac73e],esp
  41d524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d525:	cmp    edi,ebx
  41d527:	add    ebp,DWORD PTR [ebp-0x6c]
  41d52a:	mov    ds:0xcc2778af,al
  41d52f:	retf   
  41d530:	bound  esi,QWORD PTR [edx]
  41d532:	ret    
  41d533:	scas   eax,DWORD PTR es:[edi]
  41d534:	outs   dx,BYTE PTR ds:[esi]
  41d535:	xchg   esp,eax
  41d536:	dec    edx
  41d537:	add    bl,BYTE PTR [ecx+0x26]
  41d53a:	enter  0x6eb7,0x5a
  41d53e:	enter  0x6eaf,0x94
  41d542:	or     al,0x1
  41d544:	push   0x67b19b27
  41d549:	cmp    DWORD PTR [ebp+0x4ea3cbc2],ecx
  41d54f:	add    ecx,DWORD PTR [ecx+0x30]
  41d552:	sahf   
  41d553:	mov    eax,ds:0x0
	...
  41d568:	pop    edx
  41d569:	xor    BYTE PTR [ebx+0x82f2cac],ah
  41d56f:	jmp    0xa648bf03
  41d574:	repz xor BYTE PTR [edx+0x48],ch
  41d578:	fadd   QWORD PTR [esi+0x66]
  41d57b:	dec    ebp
  41d57c:	loope  0x41d5b2
  41d57e:	popa   
  41d57f:	jmp    0x1d487e13
  41d584:	xor    DWORD PTR [edi+eiz*2],esi
  41d587:	push   ebp
  41d588:	push   edx
  41d589:	and    eax,0xa488446b
  41d58e:	push   es
  41d58f:	and    eax,0x3d673439
  41d594:	dec    edi
  41d595:	das    
  41d596:	fs push ss
  41d598:	sub    eax,0x8d00f4a3
  41d59d:	xor    BYTE PTR [ecx+0x1d],bh
  41d5a0:	(bad)  
  41d5a1:	xor    edi,DWORD PTR [eax+0x10]
  41d5a4:	dec    edi
  41d5a5:	mov    ds:0x308cdaf4,eax
  41d5aa:	jns    0x41d5a1
  41d5ac:	std    
  41d5ad:	xor    esp,DWORD PTR [edi-0x3]
  41d5b0:	dec    esi
  41d5b1:	mov    ds:0x598ed6f4,eax
  41d5b6:	imul   ebx,ebp,0x51
  41d5b9:	cmp    ah,BYTE PTR [esp+eax*8+0x4e]
  41d5bd:	daa    
  41d5be:	jl     0x41d59b
  41d5c0:	ss xor eax,0x242ad57b
  41d5c6:	inc    edi
  41d5c7:	jmp    0xa449d55b
	...
  41d5e0:	aaa    
  41d5e1:	xor    esp,DWORD PTR [edi-0x39]
  41d5e4:	xor    edx,DWORD PTR [esi+0x66]
  41d5e7:	mov    bh,0x36
  41d5e9:	and    eax,0x362a9765
  41d5ee:	xchg   bp,ax
  41d5f0:	mov    esp,0xf9807a26
  41d5f5:	aaa    
  41d5f6:	jns    0x41d5a0
  41d5f8:	pop    DWORD PTR [eax-0x615fff9]
  41d5fe:	js     0x41d646
  41d600:	sbb    al,0xf3
  41d602:	imul   edx,DWORD PTR [ebx+0xc],0xf30069dd
  41d609:	xchg   esi,eax
  41d60a:	inc    edi
  41d60b:	jb     0x41d655
  41d60d:	stc    
  41d60e:	js     0x41d675
  41d610:	imul   esi,ecx,0x60
  41d613:	gs mov al,0xf7
  41d616:	fs jo  0x41d5e5
  41d619:	out    dx,al
  41d61a:	imul   eax,DWORD PTR [ecx+0x65],0xffffff96
  41d61e:	or     BYTE PTR [edx],al
  41d620:	mov    al,ds:0xcc5664f7
  41d625:	repz jnp 0x41d677
  41d628:	retf   
  41d629:	(bad)  
  41d62a:	ins    DWORD PTR es:[edi],dx
  41d62b:	ins    BYTE PTR es:[edi],dx
  41d62c:	mov    BYTE PTR [eax-0x1167fd29],bl
  41d632:	popa   
  41d633:	popa   
  41d634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d635:	(bad)  
  41d636:	ins    DWORD PTR es:[edi],dx
  41d637:	gs call 0x69ec:0x9c466acd
  41d63f:	add    BYTE PTR [edi],bl
  41d641:	cwde   
  41d642:	inc    esp
  41d643:	outs   dx,DWORD PTR ds:[esi]
	...
  41d658:	xchg   esp,eax
  41d659:	hlt    
  41d65a:	inc    eax
  41d65b:	imul   edx,DWORD PTR [edi+0x2c7255ea],0xd6fff4d9
  41d665:	cwde   
  41d666:	dec    ebx
  41d667:	gs jmp 0xd6b14d32
  41d66d:	fsubr  DWORD PTR [eax+0x64]
  41d670:	aaa    
  41d671:	cmc    
  41d672:	ja     0x41d6e7
  41d674:	in     eax,0x95
  41d676:	mov    WORD PTR [ecx],es
  41d678:	cmp    dh,ch
  41d67a:	js     0x41d6d0
  41d67c:	enter  0x64ec,0x50
  41d680:	add    al,0xf2
  41d682:	ins    BYTE PTR es:[edi],dx
  41d683:	inc    ecx
  41d684:	in     eax,0x95
  41d686:	cmp    DWORD PTR [eax],eax
  41d688:	mov    esi,gs
  41d68a:	mov    edx,0xa8072d62
  41d68f:	inc    ebx
  41d690:	and    eax,0x3860a81d
  41d695:	adc    bh,BYTE PTR [ebx+0x8ab4d76]
  41d69b:	addr16 mov edi,?
  41d69e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d69f:	imul   esi,DWORD PTR [ecx],0x3f
  41d6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6a3:	inc    ebp
  41d6a4:	and    eax,0x8c3ea74f
  41d6a9:	stos   DWORD PTR es:[edi],eax
  41d6aa:	or     eax,DWORD PTR [ebp-0x17]
  41d6ad:	inc    edi
  41d6ae:	int    0x72
  41d6b0:	(bad)  
  41d6b1:	pop    ebp
  41d6b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6b3:	ins    DWORD PTR es:[edi],dx
  41d6b4:	clc    
  41d6b5:	jnp    0x41d675
  41d6b7:	ins    BYTE PTR es:[edi],dx
  41d6b8:	out    dx,eax
  41d6b9:	push   eax
  41d6ba:	mov    ebp,0x70
	...
  41d6cf:	add    BYTE PTR [ebx+ebx*8-0x701aaaf6],cl
  41d6d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d7:	inc    eax
  41d6d8:	in     al,0x8c
  41d6da:	mov    esi,0xb778bb53
  41d6df:	imul   edi,DWORD PTR [eax-0x3f89316c],0xffffff90
  41d6e6:	or     al,0x28
  41d6e8:	lea    edi,[edx-0x59]
  41d6eb:	jae    0x41d6c5
  41d6ed:	mov    WORD PTR [ebp-0x4562368d],?
  41d6f3:	ins    BYTE PTR es:[edi],dx
  41d6f4:	sahf   
  41d6f5:	stos   DWORD PTR es:[edi],eax
  41d6f6:	or     BYTE PTR [ebx],dl
  41d6f8:	(bad)  
  41d6f9:	iret   
  41d6fa:	mov    ebp,0x9fce7e73
  41d6ff:	outs   dx,DWORD PTR ds:[esi]
  41d700:	dec    ebp
  41d701:	stos   DWORD PTR es:[edi],eax
  41d702:	or     BYTE PTR [edi-0x74],dl
  41d705:	out    dx,al
  41d706:	mov    edx,0xa7e76d62
  41d70b:	push   ebx
  41d70c:	jnp    0x41d6e8
  41d70e:	lods   al,BYTE PTR ds:[esi]
  41d70f:	addr16 imul ebx,edi,0x949e30b8
  41d716:	mov    dl,0xa9
  41d718:	xor    ah,BYTE PTR [edx+edx*4]
  41d71b:	stos   DWORD PTR es:[edi],eax
  41d71c:	cmp    BYTE PTR [eax],ch
  41d71e:	fild   WORD PTR [ebx]
  41d720:	outs   dx,DWORD PTR ds:[esi]
  41d721:	xchg   esi,eax
  41d722:	scas   eax,DWORD PTR es:[edi]
  41d723:	mov    ch,0x28
  41d725:	xor    eax,0x653cb684
  41d72a:	mov    cl,0xc1
  41d72c:	xor    ah,BYTE PTR [esi]
  41d72e:	jb     0x41d6df
  41d730:	mov    ds:0x5d6a0,eax
	...
  41d745:	add    BYTE PTR [eax],al
  41d747:	add    BYTE PTR [ecx+0x24],cl
  41d74a:	inc    esp
  41d74b:	stos   BYTE PTR es:[edi],al
  41d74c:	inc    ebx
  41d74d:	es inc esi
  41d74f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d750:	out    dx,al
  41d751:	and    edx,DWORD PTR [edx+0x4]
  41d754:	test   eax,0xe8b62f92
  41d759:	xor    eax,DWORD PTR [ebp+esi*4-0x4]
  41d75d:	arpl   cx,si
  41d75f:	leave  
  41d760:	out    dx,al
  41d761:	sbb    al,0x33
  41d763:	add    al,0x33
  41d765:	xchg   ebp,eax
  41d766:	sub    eax,0x2538e9ab
  41d76b:	stos   DWORD PTR es:[edi],eax
  41d76c:	frstor [ebx]
  41d76e:	sbb    eax,edx
  41d770:	mov    dl,0x30
  41d772:	add    al,0xc3
  41d774:	inc    ebx
  41d775:	mov    al,ds:0x23a804fd
  41d77a:	repz mov ch,0xac
  41d77d:	xor    edi,ebp
  41d77f:	stos   BYTE PTR es:[edi],al
  41d780:	push   0xffffff94
  41d782:	cmp    DWORD PTR [edx+ecx*8],eax
  41d785:	sub    eax,0x39c99ff5
  41d78a:	out    0xaf,eax
  41d78c:	leave  
  41d78d:	sub    eax,0x94ca9ec3
  41d792:	mov    WORD PTR [edx+ecx*2],es
  41d795:	sub    eax,0x304c9fb5
  41d79a:	fidiv  WORD PTR [esi+ebp*2+0x5102fb94]
  41d7a1:	cmp    DWORD PTR [eax],ecx
  41d7a3:	mov    ebp,0xb46c30ca
  41d7a8:	xor    esi,DWORD PTR [ebx]
  41d7aa:	inc    eax
  41d7ab:	mov    BYTE PTR [eax],al
	...
  41d7bd:	add    BYTE PTR [eax],al
  41d7bf:	add    BYTE PTR ds:0xce846434,ah
  41d7c5:	lahf   
  41d7c6:	hlt    
  41d7c7:	jg     0x41d758
  41d7c9:	pop    ecx
  41d7ca:	imul   edx,DWORD PTR [ebp+0x7a7a32dd],0xffffffe6
  41d7d1:	xor    BYTE PTR [esi-0x5c],ah
  41d7d4:	out    0x5e,eax
  41d7d6:	or     bl,al
  41d7d8:	mov    ds,WORD PTR [ecx+0x6b]
  41d7db:	jne    0x41d7b0
  41d7dd:	xor    BYTE PTR [ecx+0x48],ch
  41d7e0:	in     al,0x32
  41d7e2:	aas    
  41d7e3:	dec    edi
  41d7e4:	xor    BYTE PTR cs:[edi-0x17],al
  41d7e8:	(bad)
  41d7ec:	sbb    esp,DWORD PTR [ebx]
  41d7ee:	pop    ecx
  41d7ef:	inc    eax
  41d7f0:	cmp    DWORD PTR [ebx],esp
  41d7f2:	imul   ecx,DWORD PTR [edi+edx*2+0x31],0x6e
  41d7f7:	inc    esi
  41d7f8:	mov    ah,dh
  41d7fa:	push   es
  41d7fb:	es sti 
  41d7fd:	and    bl,BYTE PTR [ebp+0x10]
  41d800:	xor    esp,DWORD PTR es:[ebp+0x16]
  41d804:	add    DWORD PTR [ebx+0x5f],edx
  41d807:	sbb    esp,DWORD PTR [ebx]
  41d809:	xor    al,0x7c
  41d80b:	inc    BYTE PTR [ecx]
  41d80d:	es inc edi
  41d80f:	jmp    0x264929a3
  41d814:	or     esp,DWORD PTR [ebx]
  41d816:	pop    eax
  41d817:	sti    
  41d818:	imul   BYTE PTR [eax]
  41d81a:	addr16 cmc 
  41d81c:	cli    
  41d81d:	dec    esi
  41d81e:	jp     0x41d7f6
  41d820:	in     eax,dx
  41d821:	xor    eax,0xc464
	...
  41d836:	add    BYTE PTR [eax],al
  41d838:	loopne 0x41d85c
  41d83a:	jp     0x41d7fc
  41d83c:	xor    eax,0x8fe94738
  41d841:	sbb    cl,BYTE PTR [edx]
  41d843:	add    BYTE PTR [esi],dl
  41d845:	(bad)  
  41d846:	js     0x41d88b
  41d848:	and    cl,ch
  41d84a:	jbe    0x41d8b1
  41d84c:	retf   
  41d84d:	out    dx,al
  41d84e:	dec    eax
  41d84f:	imul   edx,DWORD PTR [edi],0xfa7467fe
  41d855:	call   0x92f719d7
  41d85a:	inc    esp
  41d85b:	add    edx,esi
  41d85d:	std    
  41d85e:	js     0x41d8b0
  41d860:	pop    ss
  41d861:	jmp    0x7244:0xfe31617a
  41d868:	sbb    dh,ch
  41d86a:	ins    DWORD PTR es:[edi],dx
  41d86b:	ins    BYTE PTR es:[edi],dx
  41d86c:	adc    al,cl
  41d86e:	imul   esp,DWORD PTR [ebx+0x21],0x5b6e63ea
  41d875:	stc    
  41d876:	popa   
  41d877:	gs out 0xd7,al
  41d87a:	hlt    
  41d87b:	jmp    FWORD PTR [edi+edx*4-0x371e9ab5]
  41d882:	jbe    0x41d8ed
  41d884:	mov    bl,0xf7
  41d886:	js     0x41d8ed
  41d888:	test   edx,esp
  41d88a:	arpl   WORD PTR [esi-0x34],sp
  41d88d:	in     al,dx
  41d88e:	imul   ecx,DWORD PTR [ecx-0x65],0x2b0035e4
  41d895:	cdq    
  41d896:	dec    ebx
  41d897:	mov    eax,gs:0x7279d1
	...
  41d8ad:	add    BYTE PTR [eax],al
  41d8af:	add    BYTE PTR [edi+0x717462f3],ah
  41d8b5:	out    dx,eax
  41d8b6:	jbe    0x41d91d
  41d8b8:	xchg   ah,ah
  41d8ba:	arpl   WORD PTR [edx-0x74],si
  41d8bd:	xlat   BYTE PTR ds:[ebx]
  41d8be:	hlt    
  41d8bf:	(bad)  
  41d8c0:	cmp    edx,DWORD PTR [ebx-0x1bde8c9c]
  41d8c6:	pusha  
  41d8c7:	gs cmp ecx,edi
  41d8ca:	hlt    
  41d8cb:	(bad)  
  41d8cc:	clc    
  41d8cd:	xchg   ebx,eax
  41d8ce:	inc    ecx
  41d8cf:	jne    0x41d85d
  41d8d1:	xlat   BYTE PTR ds:[ebx]
  41d8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8d3:	dec    si
  41d8d5:	les    esp,FWORD PTR [edx+eiz*2+0x66c5c658]
  41d8dc:	jo     0x41d8b6
  41d8de:	leave  
  41d8df:	ins    DWORD PTR es:[di],dx
  41d8e1:	(bad)  [eax]
  41d8e3:	mov    ecx,DWORD PTR [ebp+0x3873a7f6]
  41d8e9:	add    al,0xaa
  41d8eb:	push   0x6db80e4f
  41d8f0:	cmp    BYTE PTR [ebx-0x257146f8],ch
  41d8f6:	lods   al,BYTE PTR ds:[esi]
  41d8f7:	bound  ebp,QWORD PTR [ecx]
  41d8f9:	sbb    ecx,DWORD PTR [ecx]
  41d8fb:	xor    cl,BYTE PTR [ebp+0x5173a7f6]
  41d901:	push   ss
  41d902:	xchg   ebp,eax
  41d903:	jb     0x41d92d
  41d905:	sbb    BYTE PTR [ebx-0x31afdf9a],dh
  41d90b:	pop    esi
  41d90c:	stc    
  41d90d:	pop    eax
  41d90e:	retf   
  41d90f:	inc    DWORD PTR [ebx+0x4c0bce]
	...
  41d925:	add    BYTE PTR [eax],al
  41d927:	add    bh,cl
  41d929:	sub    BYTE PTR [ebx-0x45a02091],0x66
  41d930:	cli    
  41d931:	push   esi
  41d932:	retf   
  41d933:	jmp    DWORD PTR [ebx+0x42]
  41d936:	or     DWORD PTR [ebx-0x2c],eax
  41d939:	push   esp
  41d93a:	mov    eax,0xa986de4f
  41d93f:	bound  edi,QWORD PTR [edi-0x7150f386]
  41d945:	pop    edx
  41d946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d947:	jae    0x41d92a
  41d949:	popf   
  41d94a:	mov    al,ds:0xa08fa25e
  41d94f:	bound  esi,QWORD PTR [eax-0x569f4b88]
  41d955:	fwait
  41d956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d957:	stos   WORD PTR es:[edi],ax
  41d959:	popf   
  41d95a:	mov    dl,0x66
  41d95c:	mov    al,ds:0x7da0d394
  41d961:	xchg   esp,eax
  41d962:	fisub  DWORD PTR [eax-0x583bd183]
  41d968:	mov    esp,0x679ff562
  41d96d:	xor    bh,bl
  41d96f:	add    edx,DWORD PTR ds:0x6eb1a294
  41d975:	xor    esi,DWORD PTR [ebx-0x4ed7c360]
  41d97b:	mov    al,ds:0xa5be2f32
  41d980:	push   ebx
  41d981:	push   ebp
  41d982:	and    DWORD PTR [esi+0x38b332d],0x21
  41d989:	xchg   esp,eax
  41d98a:	scas   al,BYTE PTR es:[edi]
  41d98b:	mov    al,ds:0x0
	...
  41d9a0:	aas    
  41d9a1:	dec    esp
  41d9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a4:	cmp    BYTE PTR [edx],dh
  41d9a6:	and    BYTE PTR [edi-0x5771ddb7],0x3c
  41d9ad:	sub    BYTE PTR [ecx-0x60],dh
  41d9b0:	xor    ch,BYTE PTR [edi]
  41d9b2:	fild   WORD PTR [ebx]
  41d9b4:	call   0x4426:0xcca52294
  41d9bb:	mov    ds:0xaf2e31ff,eax
  41d9c0:	jmp    0x2294:0xec03df30
  41d9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9c8:	mov    edi,0xc6a93235
  41d9cd:	xor    DWORD PTR [esi+edi*4],esi
  41d9d0:	fnsave [ecx]
  41d9d2:	add    al,0x4
  41d9d4:	cdq    
  41d9d5:	xchg   esp,eax
  41d9d6:	and    ah,BYTE PTR [ebp-0x5cfbd934]
  41d9dc:	mov    edi,0xbca62831
  41d9e1:	and    BYTE PTR [eax],al
  41d9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9e4:	lods   al,BYTE PTR ds:[esi]
  41d9e5:	xor    edi,ebx
  41d9e7:	add    ebx,DWORD PTR ds:0xe4260895
  41d9ed:	ss aas 
  41d9ef:	jmp    esi
  41d9f1:	daa    
  41d9f2:	pop    edi
  41d9f3:	enter  0x3333,0x72
  41d9f7:	les    ecx,FWORD PTR [edi-0x3339bd7]
  41d9fd:	gs lds ebp,FWORD PTR es:[ebx]
  41da01:	xor    BYTE PTR [eax],cl
  41da03:	les    eax,FWORD PTR [eax]
	...
  41da15:	add    BYTE PTR [eax],al
  41da17:	add    BYTE PTR [ebp+0x1db97921],cl
  41da1d:	xor    esp,DWORD PTR [esi-0x43]
  41da20:	stc    
  41da21:	pop    edx
  41da22:	or     BYTE PTR [esp+ebx*1-0x422585c9],dh
  41da29:	imul   ebp,DWORD PTR [ebp+ecx*4-0x15],0x8f39f49b
  41da31:	inc    esi
  41da32:	imul   eax,DWORD PTR [esi-0x6894d438],0xffffffd4
  41da39:	outs   dx,DWORD PTR ss:[esi]
  41da3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da3c:	out    0x5a,eax
  41da3e:	or     BYTE PTR [ebx],dl
  41da40:	pop    DWORD PTR [esi+0x6b]
  41da43:	xchg   BYTE PTR [esi+0x475b6b26],bh
  41da49:	inc    ecx
  41da4a:	addr16 dec ebp
  41da4c:	xor    esi,DWORD PTR [esi]
  41da4e:	dec    ebx
  41da4f:	push   ecx
  41da50:	dec    edi
  41da51:	fwait
  41da52:	hlt    
  41da53:	xchg   esi,eax
  41da54:	mov    es,WORD PTR [esi+0x6b]
  41da57:	dec    esi
  41da58:	dec    ebp
  41da59:	das    
  41da5a:	cmp    al,BYTE PTR gs:[ebx]
  41da5d:	dec    esp
  41da5e:	imul   esi,DWORD PTR [eax],0xffffff90
  41da61:	leave  
  41da62:	push   es
  41da63:	sbb    esi,ebx
  41da65:	das    
  41da66:	inc    ebp
  41da67:	sbb    DWORD PTR [ebx],ebp
  41da69:	sub    DWORD PTR [ecx+0x4],eax
  41da6c:	pop    es
  41da6d:	pop    edx
  41da6e:	or     BYTE PTR [ebp+0x66b468e],ch
  41da74:	repz sub BYTE PTR [ebx+0x0],bh
  41da78:	or     ch,0x69
  41da7b:	jns    0x41da7d
	...
  41da8d:	add    BYTE PTR [eax],al
  41da8f:	add    BYTE PTR [eax-0x28],ch
  41da92:	xor    eax,0x5a965f00
  41da97:	gs mov dl,ch
  41da9a:	jbe    0x41db01
  41da9c:	aam    0xea
  41da9e:	imul   ecx,DWORD PTR [ebx-0x38],0x4a0035dd
  41daa5:	xchg   esi,eax
  41daa6:	pop    edx
  41daa7:	gs retf 0x69c3
  41daab:	je     0x41dab8
  41daad:	mul    BYTE PTR [eax+0x75]
  41dab0:	enter  0x7cd9,0x41
  41dab4:	in     eax,0x96
  41dab6:	and    DWORD PTR [ecx],eax
  41dab8:	sub    al,0xe4
  41daba:	pop    eax
  41dabb:	gs in  eax,dx
  41dabd:	jmp    0x6463:0xf41c6e59
  41dac4:	or     BYTE PTR [edi-0x608fe3a],dl
  41daca:	imul   ecx,DWORD PTR [edi+0x25],0xfffffffa
  41dace:	bound  eax,QWORD PTR [ebx+0x18]
  41dad1:	in     eax,0x76
  41dad3:	gs adc ebp,ebx
  41dad6:	pop    ecx
  41dad7:	jae    0x41dae1
  41dad9:	in     eax,0xf4
  41dadb:	(bad)  
  41dadc:	cmp    dl,BYTE PTR [eax-0x34359aa6]
  41dae2:	bound  esi,QWORD PTR [ebp-0x30]
  41dae5:	mov    esi,0xebd86c55
  41daea:	xor    eax,0x4b916e00
  41daef:	gs cdq 
  41daf1:	mov    ebx,0x6577
	...
  41db06:	add    BYTE PTR [eax],al
  41db08:	xchg   edi,eax
  41db09:	(bad)  
  41db0a:	push   ebp
  41db0b:	ins    DWORD PTR es:[edi],dx
  41db0c:	enter  0xf4cf,0xff
  41db10:	xchg   esp,eax
  41db11:	in     al,dx
  41db12:	jp     0x41db75
  41db14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db15:	div    DWORD PTR [edi]
  41db17:	xor    cl,BYTE PTR [ecx+edx*8-0x545f9454]
  41db1e:	or     bh,dl
  41db20:	mov    WORD PTR [esi-0x6c],?
  41db23:	bound  esi,QWORD PTR [eax-0x4e884079]
  41db29:	mov    gs,WORD PTR [edi+0xc6ca973]
  41db2f:	jno    0x41dba5
  41db31:	enter  0x6b94,0xbf
  41db35:	jge    0x41db21
  41db37:	arpl   WORD PTR [eax-0x31],bp
  41db3a:	or     BYTE PTR [edi-0x74],dh
  41db3d:	hlt    
  41db3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db3f:	jae    0x41dbb2
  41db41:	frstor [esi-0x4511a79e]
  41db47:	pop    esi
  41db48:	outs   dx,DWORD PTR ds:[esi]
  41db49:	(bad)  
  41db4a:	iret   
  41db4b:	jno    0x41dbad
  41db4d:	in     al,dx
  41db4e:	or     BYTE PTR [ecx-0x74],bh
  41db51:	in     al,0xa6
  41db53:	jae    0x41db7e
  41db55:	std    
  41db56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db57:	bound  eax,QWORD PTR [eax-0x12]
  41db5a:	mov    edx,0x9fff2d62
  41db5f:	push   edx
  41db60:	push   ds
  41db61:	dec    ebx
  41db63:	jmp    DWORD PTR [ebx+0x256d9422]
  41db69:	adc    DWORD PTR [eax+0x73],esp
	...
  41db7f:	add    BYTE PTR [edx+0xf],ah
  41db82:	xchg   ebp,eax
  41db83:	imul   ecx,DWORD PTR [eax+eiz*4+0x3df8510b],0xffffffdd
  41db8b:	jae    0x41db8b
  41db8d:	je     0x41db5a
  41db8f:	push   DWORD PTR [ebx-0x55]
  41db92:	or     edx,DWORD PTR [ecx-0x20]
  41db95:	pop    ebp
  41db96:	fiadd  WORD PTR [eax-0xc]
  41db99:	pop    ebp
  41db9a:	mov    bl,0x3e
  41db9c:	mov    WORD PTR [edi+0x5dd8510b],?
  41dba2:	shr    BYTE PTR [ebp+edx*8-0x6c],1
  41dba6:	sbb    eax,0xe39482b8
  41dbab:	add    al,0xdd
  41dbad:	and    BYTE PTR [ecx],dl
  41dbaf:	xlat   BYTE PTR ds:[ebx]
  41dbb0:	mov    edi,0x36042026
  41dbb5:	xchg   esp,eax
  41dbb6:	adc    bh,BYTE PTR [eax-0x4bfbaa63]
  41dbbc:	leave  
  41dbbd:	dec    ebx
  41dbbe:	and    BYTE PTR [edx+eax*4],al
  41dbc1:	xchg   ebx,eax
  41dbc2:	adc    bh,BYTE PTR [eax-0x4a2cba83]
  41dbc8:	dec    edx
  41dbc9:	inc    ecx
  41dbca:	fild   WORD PTR [ebx]
  41dbcc:	jge    0x41dbfa
  41dbce:	retf   
  41dbcf:	mov    edx,0xe1c82452
  41dbd4:	outs   dx,DWORD PTR ds:[esi]
  41dbd5:	sub    bl,bl
  41dbd7:	add    ebx,DWORD PTR [edx+0x6ea1d894]
  41dbdd:	and    BYTE PTR [esi-0x4ecf905c],bl
  41dbe3:	add    eax,DWORD PTR [eax]
	...
  41dbf5:	add    BYTE PTR [eax],al
  41dbf7:	add    BYTE PTR [esi-0x6c],dh
  41dbfa:	xchg   BYTE PTR [eax-0x4979d3c1],ch
  41dc00:	aas    
  41dc01:	ss cwde 
  41dc03:	mov    eax,ds:0x38c2752
  41dc08:	push   ebx
  41dc09:	xchg   esp,eax
  41dc0a:	jb     0x41dbae
  41dc0c:	sub    al,0x2d
  41dc0e:	mov    WORD PTR [edi+0x3c5989b],?
  41dc14:	sub    eax,0xeea17529
  41dc19:	xor    edx,DWORD PTR [ebx+0x4]
  41dc1c:	stos   BYTE PTR es:[edi],al
  41dc1d:	xchg   esp,eax
  41dc1e:	inc    edx
  41dc1f:	mov    al,ds:0xb54423e8
  41dc24:	loopne 0x41dc59
  41dc26:	dec    edx
  41dc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc28:	fist   WORD PTR [ebx+eiz*1+0x4531dd04]
  41dc2f:	test   al,0x5b
  41dc31:	cwde   
  41dc32:	pop    es
  41dc33:	sub    cl,BYTE PTR [eax-0xcc294db]
  41dc39:	xor    al,0x7c
  41dc3b:	jmp    0x1b4a32cf
  41dc40:	repz xor al,0x7e
  41dc43:	jmp    0x1a4a2dd7
  41dc48:	repz and edi,DWORD PTR [ecx+0x16]
  41dc4c:	jmp    0xe43b417d
  41dc51:	xchg   edi,eax
  41dc52:	hlt    
  41dc53:	enter  0x418f,0x59
  41dc57:	sub    cl,ah
  41dc59:	and    esp,DWORD PTR [edi-0x25]
	...
  41dc70:	cmp    esp,DWORD PTR [ebx]
  41dc72:	js     0x41dc5d
  41dc74:	(bad)  
  41dc75:	and    DWORD PTR [ecx-0x3a],edi
  41dc78:	sub    BYTE PTR ds:0x33ee1b39,ch
  41dc7e:	fs aad 0x8f
  41dc81:	dec    ebx
  41dc82:	or     BYTE PTR [ebp-0x6393c8d4],ch
  41dc88:	sbb    BYTE PTR [ebx],dh
  41dc8a:	jp     0x41dc25
  41dc8c:	add    DWORD PTR [ecx],ebp
  41dc8e:	outs   dx,BYTE PTR ds:[esi]
  41dc8f:	nop
  41dc90:	and    esi,DWORD PTR [ebx]
  41dc92:	inc    edi
  41dc93:	jmp    0xbc4a1427
  41dc98:	in     eax,dx
  41dc99:	sub    esp,DWORD PTR [ebp-0x78]
  41dc9c:	repz inc edx
  41dc9e:	jns    0x41dc2c
  41dca0:	fld    DWORD PTR [edi+0x7a]
  41dca3:	mov    fs,ebp
  41dca5:	cs mov WORD PTR fs:[edi+0x41847923],cs
  41dcad:	xor    ah,BYTE PTR [esi+0x5f]
  41dcb0:	outs   dx,BYTE PTR ds:[esi]
  41dcb1:	xor    esp,DWORD PTR [ebp+ecx*2-0x70]
  41dcb5:	xchg   esp,eax
  41dcb6:	or     cl,ch
  41dcb8:	(bad)  
  41dcb9:	xchg   esp,eax
  41dcba:	or     cl,ch
  41dcbc:	(bad)  
  41dcbd:	xchg   esp,eax
  41dcbe:	or     BYTE PTR [eax],al
  41dcc0:	jne    0x41dc55
  41dcc2:	or     BYTE PTR [eax],al
  41dcc4:	gs xchg ebx,eax
  41dcc6:	or     BYTE PTR [eax],al
  41dcc8:	gs xchg ebx,eax
  41dcca:	or     BYTE PTR [eax],al
  41dccc:	xor    eax,0x35000893
  41dcd1:	xchg   ebx,eax
  41dcd2:	or     BYTE PTR [eax],al
	...
  41dce8:	and    eax,0x25000893
  41dced:	xchg   ebx,eax
  41dcee:	or     BYTE PTR [eax],al
  41dcf0:	xor    eax,0x35000893
  41dcf5:	xchg   ebx,eax
  41dcf6:	or     BYTE PTR [eax],al
  41dcf8:	and    eax,0x25000893
  41dcfd:	xchg   ebx,eax
  41dcfe:	or     BYTE PTR [eax],al
  41dd00:	cmc    
  41dd01:	xchg   edx,eax
  41dd02:	or     BYTE PTR [eax],al
  41dd04:	cmc    
  41dd05:	xchg   edx,eax
  41dd06:	or     BYTE PTR [eax],al
  41dd08:	in     eax,0x92
  41dd0a:	or     BYTE PTR [eax],al
  41dd0c:	in     eax,0x92
  41dd0e:	or     BYTE PTR [eax],al
  41dd10:	cmc    
  41dd11:	xchg   edx,eax
  41dd12:	or     BYTE PTR [eax],al
  41dd14:	cmc    
  41dd15:	xchg   edx,eax
  41dd16:	or     BYTE PTR [eax],al
  41dd18:	in     eax,0x92
  41dd1a:	or     BYTE PTR [eax],al
  41dd1c:	in     eax,0x92
  41dd1e:	or     BYTE PTR [eax],al
  41dd20:	mov    ch,0x92
  41dd22:	or     BYTE PTR [eax],al
  41dd24:	mov    ch,0x92
  41dd26:	or     BYTE PTR [eax],al
  41dd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd29:	xchg   edx,eax
  41dd2a:	or     BYTE PTR [eax],al
  41dd2c:	pop    ecx
  41dd2d:	or     esp,esp
  41dd2f:	push   ecx
  41dd30:	pop    ss
  41dd31:	push   ecx
  41dd32:	add    BYTE PTR [edx-0xbcf36c],cl
  41dd38:	pop    es
  41dd39:	mov    cl,0x52
  41dd3b:	ret    
  41dd3c:	cmp    DWORD PTR [ebx],ecx
  41dd3e:	in     al,0x51
  41dd40:	loop   0x41dd7f
  41dd42:	cmp    ecx,ecx
  41dd44:	call   0x7725452
  41dd49:	pop    ds
  41dd4a:	add    al,0x8b
	...
  41dd60:	cli    
  41dd61:	js     0x41dce4
  41dd63:	inc    esi
  41dd64:	xchg   esp,eax
  41dd65:	or     ecx,DWORD PTR [ebx-0x4]
  41dd68:	pop    ss
  41dd69:	pop    ss
  41dd6a:	sub    BYTE PTR [ebx+0x6b3514a2],cl
  41dd70:	fmul   DWORD PTR [ebp+0x20d73f88]
  41dd76:	or     ch,bl
  41dd78:	xor    eax,0x318b5636
  41dd7d:	cmp    cl,cl
  41dd7f:	int3   
  41dd80:	(bad)  [ecx]
  41dd82:	in     al,0x83
  41dd84:	cmp    BYTE PTR [ecx-0x7f],dh
  41dd87:	inc    ebp
  41dd88:	xchg   esp,eax
  41dd89:	or     ecx,DWORD PTR [ebx-0x20]
  41dd8c:	pop    es
  41dd8d:	dec    eax
  41dd8e:	call   0x8f6971e
  41dd93:	push   ecx
  41dd94:	enter  0x5b0b,0xe4
  41dd98:	pop    ss
  41dd99:	push   eax
  41dd9a:	in     al,dx
  41dd9b:	mov    eax,DWORD PTR [esp+ebx*1+0x9]
  41dd9f:	dec    ebp
  41dda0:	test   BYTE PTR [ebx],cl
  41dda2:	inc    ebx
  41dda3:	clc    
  41dda4:	pop    ss
  41dda5:	inc    eax
  41dda6:	lock mov ecx,DWORD PTR [esi+0x70]
  41ddaa:	or     DWORD PTR [ebp-0x7c],eax
  41ddad:	or     ecx,DWORD PTR [ebx-0x18]
  41ddb0:	pop    es
  41ddb1:	dec    eax
  41ddb2:	lock mov ebx,DWORD PTR [ebp+0x74]
  41ddb6:	or     DWORD PTR [ebp-0x6c],edx
  41ddb9:	or     ebx,DWORD PTR [ebx-0x10]
  41ddbc:	pop    es
  41ddbd:	push   eax
  41ddbe:	lock mov eax,DWORD PTR [eax+edi*2+0x9]
  41ddc3:	dec    ebp
	...
  41ddd8:	xchg   esp,eax
  41ddd9:	or     eax,DWORD PTR [ebx-0x4]
  41dddc:	retf   
  41dddd:	dec    edi
  41ddde:	cld    
  41dddf:	add    BYTE PTR [esp+edx*4+0x985eb08],cl
  41dde6:	pop    ebx
  41dde7:	hlt    
  41dde8:	psrld  mm0,QWORD PTR [esi]
  41ddeb:	mov    ecx,ebx
  41dded:	mov    al,ds:0x9744580
  41ddf2:	inc    ebx
  41ddf3:	hlt    
  41ddf4:	mov    bh,0x4c
  41ddf6:	adc    BYTE PTR [ebx-0x2c],dh
  41ddf9:	or     DWORD PTR [ebx-0x10],ebx
  41ddfc:	pop    ss
  41ddfd:	xchg   edx,eax
  41ddfe:	or     DWORD PTR [ebp-0x7c],eax
  41de01:	or     ecx,DWORD PTR [ebx-0x24]
  41de04:	out    0x86,al
  41de06:	pusha  
  41de07:	lods   al,BYTE PTR ds:[esi]
  41de08:	mov    ss,WORD PTR [eax+ecx*1-0x75]
  41de0c:	sar    DWORD PTR [eax-0x6c2317aa],1
  41de12:	or     BYTE PTR [eax],al
  41de14:	(bad)  
  41de16:	add    eax,DWORD PTR [ebp-0x74eee0b4]
  41de1c:	mov    ecx,0x244580a0
  41de21:	test   DWORD PTR [ebp+0x430bbc0c],edi
  41de27:	in     al,dx
  41de28:	pop    ss
  41de29:	aas    
  41de2a:	in     al,0x8b
  41de2c:	dec    ecx
  41de2d:	cwde   
  41de2e:	add    BYTE PTR [esp+ebx*1],0x91
  41de32:	dec    ebx
  41de33:	or     bh,ah
  41de35:	xchg   BYTE PTR [ecx-0x38ef23b3],al
  41de3b:	add    al,0x0
	...
  41de4d:	add    BYTE PTR [eax],al
  41de4f:	add    BYTE PTR ds:0x30ebf847,dl
  41de55:	popa   
  41de56:	enter  0xe98b,0x36
  41de5a:	leave  
  41de5b:	int3   
  41de5c:	fadd   st,st(7)
  41de5e:	ret    
  41de5f:	int3   
  41de60:	rol    bh,1
  41de62:	ret    
  41de63:	int3   
  41de64:	enter  0xc3c7,0xcc
  41de68:	pop    ecx
  41de69:	or     esp,esp
  41de6b:	cmp    DWORD PTR [eax-0x5cfa1f85],0xffffff94
  41de72:	hlt    
  41de73:	mov    DWORD PTR [ecx-0x54],edx
  41de76:	add    BYTE PTR [ebp-0x5c],0x43
  41de7a:	loopne 0x41dea5
  41de7c:	mov    edx,DWORD PTR [esp+esi*8-0x5866b77d]
  41de83:	hlt    
  41de84:	add    dl,dh
  41de86:	or     BYTE PTR [eax+0x30],ch
  41de89:	xchg   edi,eax
  41de8a:	dec    eax
  41de8b:	add    BYTE PTR [edi],dl
  41de8d:	loop   0x41de6f
  41de8f:	push   ecx
  41de90:	arpl   WORD PTR [edx-0x6b328904],bp
  41de96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de97:	clc    
  41de98:	fcmovbe st,st(5)
  41de9a:	or     BYTE PTR [edx-0x74],ch
  41de9d:	dec    BYTE PTR [eax]
  41de9f:	push   0x489750
  41dea4:	cmp    ebp,DWORD PTR [edx-0x6b328910]
  41deaa:	add    DWORD PTR [ebp+0x34],0x8cfc4e5c
  41deb1:	xchg   esp,eax
  41deb2:	or     BYTE PTR [eax],al
	...
  41dec8:	daa    
  41dec9:	sahf   
  41deca:	jg     0x41df21
  41decc:	adc    BYTE PTR [eax],bl
  41dece:	mov    DWORD PTR [ecx],0x83f4ea15
  41ded4:	adc    DWORD PTR [eax+0x1fad7301],0xa107fc4e
  41dede:	lea    ecx,[esi+ecx*4+0x175108d4]
  41dee5:	jmp    0x76fc:0xa9db52e0
  41deec:	dec    ebp
  41deed:	xchg   esp,eax
  41deee:	jg     0x41df3d
  41def0:	enter  0xd1d,0x8d
  41def4:	mov    eax,0xa7004a0a
  41def9:	fs and ch,0x51
  41defd:	push   edi
  41defe:	(bad)
  41df01:	pusha  
  41df02:	(bad)
  41df05:	pusha  
  41df06:	(bad)
  41df09:	pusha  
  41df0a:	(bad)
  41df0d:	pop    ds
  41df0e:	in     eax,0xa1
  41df10:	fmul   DWORD PTR [ebx]
  41df12:	dec    edx
  41df13:	add    dl,al
  41df15:	pop    ds
  41df16:	dec    ecx
  41df17:	xor    BYTE PTR [edi],al
  41df19:	loope  0x41df1b
  41df1b:	ds add eax,0x4f5d00dc
  41df21:	pusha  
  41df22:	(bad)
  41df25:	pusha  
  41df26:	(bad)
  41df29:	pusha  
  41df2a:	(bad)
	...
  41df3d:	add    BYTE PTR [eax],al
  41df3f:	add    BYTE PTR [ecx-0x2e741ae1],bh
  41df45:	mov    al,ds:0x9cd18b58
  41df4a:	pop    ecx
  41df4b:	jmp    DWORD PTR [ecx-0x73be8478]
  41df51:	icebp  
  41df52:	(bad)  
  41df53:	int3   
  41df54:	pop    eax
  41df55:	pusha  
  41df56:	(bad)
  41df59:	pusha  
  41df5a:	(bad)
  41df5d:	pusha  
  41df5e:	(bad)
  41df61:	pop    ds
  41df62:	in     eax,0x83
  41df64:	clc    
  41df65:	fwait
  41df66:	pop    esi
  41df67:	add    BYTE PTR [esi-0x6c],dh
  41df6a:	pusha  
  41df6b:	fmul   QWORD PTR [esi-0x6600f72c]
  41df71:	mov    WORD PTR [ebx+0x41],?
  41df74:	mov    WORD PTR ds:0x7c74f84e,ds
  41df7a:	pop    es
  41df7b:	inc    eax
  41df7c:	mov    WORD PTR [edi],ds
  41df7e:	dec    esi
  41df7f:	clc    
  41df80:	cmp    al,0x7c
  41df82:	scas   eax,DWORD PTR es:[edi]
  41df83:	dec    ebx
  41df85:	xchg   edx,eax
  41df86:	mov    ah,al
  41df88:	xchg   esp,eax
  41df89:	sbb    eax,0xe107fc4e
  41df8e:	sbb    BYTE PTR [ecx+0x7],dl
  41df91:	jmp    0xd959319a
  41df96:	add    BYTE PTR [eax-0x5d],dl
  41df99:	call   0xf0f36b92
  41df9e:	(bad)  
  41df9f:	int3   
  41dfa0:	cmp    DWORD PTR [edi],ebx
  41dfa2:	in     eax,0x51
	...
  41dfb8:	push   ebx
  41dfb9:	fdiv   st,st(4)
  41dfbb:	add    BYTE PTR [esp+edx*4+0x1d85eb08],cl
  41dfc2:	dec    esi
  41dfc3:	cld    
  41dfc4:	andnps xmm1,XMMWORD PTR [edx]
  41dfc7:	mov    ecx,edx
  41dfc9:	nop
  41dfca:	or     BYTE PTR [ebp+0x60],0xce
  41dfce:	inc    ebp
  41dfcf:	adc    bh,bl
  41dfd1:	mov    cl,0x7f
  41dfd3:	push   ebp
  41dfd4:	test   BYTE PTR [ebp+0x4a9bfc5d],dl
  41dfda:	pop    es
  41dfdb:	mov    edx,ecx
  41dfdd:	mov    al,ds:0xa2384d07
  41dfe2:	mov    edx,0x7d567711
  41dfe7:	pop    es
  41dfe8:	in     al,0x93
  41dfea:	or     BYTE PTR [eax],al
  41dfec:	mov    WORD PTR [ebp+0xd],?
  41dfef:	jmp    0x41e02d
  41dff1:	(bad)  
  41dff2:	enter  0x298b,0xf0
  41dff6:	(bad)  
  41dff7:	int3   
  41dff8:	fsub   DWORD PTR [eax-0x3b]
  41dffb:	int3   
  41dffc:	shl    BYTE PTR [eax-0x3b],1
  41dfff:	int3   
  41e000:	enter  0xc560,0xcc
  41e004:	pop    ecx
  41e005:	sbb    eax,0x9484b9e5
  41e00a:	or     BYTE PTR [eax],al
  41e00c:	push   0x8989021d
  41e011:	loopne 0x41e08e
  41e013:	inc    ecx
  41e014:	mov    edi,gs
  41e016:	(bad)  
  41e017:	int3   
  41e018:	fsub   DWORD PTR [eax-0x3b]
  41e01b:	int3   
	...
  41e030:	shl    BYTE PTR [eax-0x3b],1
  41e033:	int3   
  41e034:	enter  0xc560,0xcc
  41e038:	pop    ecx
  41e039:	sbb    eax,0xa4b883e5
  41e03e:	jg     0x41e085
  41e040:	xchg   esp,eax
  41e041:	adc    eax,0xa18c0471
  41e046:	mov    WORD PTR [eax-0x74f76b74],cs
  41e04c:	fstp   DWORD PTR [edi+edi*2-0x20ea77af]
  41e053:	or     BYTE PTR [ebp+0x7e],bl
  41e056:	adc    BYTE PTR [ebp+0x78],0x1d
  41e05a:	dec    esi
  41e05b:	or     BYTE PTR [edi],cl
  41e05d:	push   esp
  41e05e:	add    DWORD PTR [ecx+0x45cc84c9],ecx
  41e064:	pop    eax
  41e065:	xchg   esp,eax
  41e066:	or     BYTE PTR [eax],al
  41e068:	mov    WORD PTR [ebp+0x2],?
  41e06b:	mov    ebx,ecx
  41e06d:	nop
  41e06e:	mov    cl,al
  41e070:	lea    ebx,[ebx]
  41e072:	inc    esi
  41e073:	cld    
  41e074:	pop    es
  41e075:	out    0xf4,eax
  41e077:	cmp    ebx,ecx
  41e079:	mov    BYTE PTR [eax+0x46],bh
  41e07c:	pop    ss
  41e07d:	xlat   BYTE PTR ds:[ebx]
  41e07e:	hlt    
  41e07f:	mov    edx,ecx
  41e081:	test   BYTE PTR [edi+esi*4],al
  41e084:	adc    bl,0xc9
  41e087:	cli    
  41e088:	adc    BYTE PTR ds:0xc68103ef,0x7f
  41e08f:	inc    ebp
  41e090:	add    BYTE PTR ds:0xf046,bl
	...
  41e0a6:	add    BYTE PTR [eax],al
  41e0a8:	mov    ecx,DWORD PTR [ecx+0x1d]
  41e0ab:	inc    ecx
  41e0ac:	or     eax,0x8c0ff476
  41e0b1:	xchg   esp,eax
  41e0b2:	adc    DWORD PTR [ebp-0x1c],0x7084e1c
  41e0b9:	fild   WORD PTR [ebx+eax*1]
  41e0bc:	test   BYTE PTR ds:0x9817f85e,bl
  41e0c2:	sbb    DWORD PTR [ebx],eax
  41e0c4:	dec    ecx
  41e0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0c6:	jg     0x41e115
  41e0c8:	test   BYTE PTR ds:0xa38f0c5e,bl
  41e0ce:	jg     0x41e11d
  41e0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0d1:	sbb    cl,BYTE PTR ds:0x803ab70a
  41e0d7:	push   ebp
  41e0d8:	test   BYTE PTR ds:0xd68f084e,bl
  41e0de:	or     al,0x89
  41e0e0:	rcr    DWORD PTR [ecx+eiz*8-0xb6f7c95],1
  41e0e7:	mov    esi,DWORD PTR [ecx-0xe]
  41e0ea:	(bad)  
  41e0eb:	int3   
  41e0ec:	fstp   DWORD PTR [ebx]
  41e0ee:	in     eax,0x83
  41e0f0:	js     0x41e0ab
  41e0f2:	jg     0x41e139
  41e0f4:	xchg   esp,eax
  41e0f5:	sbb    eax,0xe207e44e
  41e0fa:	in     al,dx
  41e0fb:	mov    edi,DWORD PTR [ecx-0x77aef788]
  41e101:	sbb    eax,0xda17e85e
  41e106:	loopne 0x41e093
  41e108:	add    al,0x15
  41e10a:	or     DWORD PTR [eax],eax
	...
  41e120:	mov    WORD PTR ds:0x120ff046,ds
  41e126:	stc    
  41e127:	add    BYTE PTR [ebx-0x73ff0fe8],dl
  41e12d:	xchg   esp,eax
  41e12e:	jg     0x41e185
  41e130:	test   BYTE PTR [ebx-0x15ea0fa3],dl
  41e136:	call   0x88b62ac6
  41e13b:	js     0x41e0d9
  41e13d:	xchg   esp,eax
  41e13e:	add    eax,DWORD PTR [ecx+ebp*8+0x76000894]
  41e145:	xchg   esp,eax
  41e146:	pop    esi
  41e147:	add    BYTE PTR [edi],dl
  41e149:	loop   0x41e133
  41e14b:	mov    eax,DWORD PTR [ecx-0x64]
  41e14e:	pop    es
  41e14f:	push   ecx
  41e150:	and    dl,0xf3
  41e153:	adc    eax,0x4a06c4
  41e158:	adc    eax,0x518bf4da
  41e15d:	je     0x41e0e7
  41e15f:	cmp    BYTE PTR [eax+ecx*1+0x74598b12],cl
  41e166:	adc    BYTE PTR [ebp-0x6c],0x93
  41e16a:	sbb    DWORD PTR [ecx+0x45808841],ecx
  41e170:	lods   al,BYTE PTR ds:[esi]
  41e171:	sbb    eax,DWORD PTR [esi+0x8]
  41e174:	(bad)  
  41e175:	fcomp  QWORD PTR [eax]
  41e177:	mov    ecx,edx
  41e179:	and    al,0x17
  41e17c:	pop    es
  41e17d:	jmp    0x9d0b6d6a
  41e182:	pop    es
  41e183:	inc    edx
	...
  41e198:	jl     0x41e1b7
  41e19a:	dec    esi
  41e19b:	hlt    
  41e19c:	pop    ss
  41e19d:	loope  0x41e187
  41e19f:	mov    eax,ecx
  41e1a1:	pushf  
  41e1a2:	pop    es
  41e1a3:	adc    DWORD PTR ds:0xd1c7e4e9,eax
  41e1a9:	mov    WORD PTR [ecx],cs
  41e1ab:	add    BYTE PTR [esp+edx*4+0x132c457f],cl
  41e1b2:	jno    0x41e1c4
  41e1b4:	mov    WORD PTR [eax],cs
  41e1b6:	add    al,0x8b
  41e1b8:	fnstenv [eax+ecx*4+0x39]
  41e1bc:	mov    WORD PTR [eax],cs
  41e1be:	or     al,0xc7
  41e1c0:	ror    DWORD PTR [edx+ecx*1+0x7f948c00],1
  41e1c7:	push   ebp
  41e1c8:	add    BYTE PTR [ebx],dl
  41e1ca:	das    
  41e1cb:	add    BYTE PTR [eax-0xb],bh
  41e1ce:	jg     0x41e215
  41e1d0:	add    BYTE PTR [ebx],bl
  41e1d2:	add    DWORD PTR [ecx+0x893ed],eax
  41e1d8:	or     al,0x8
  41e1da:	adc    eax,0x8088398b
  41e1df:	add    dh,BYTE PTR [ecx+0x53fff48f]
  41e1e5:	in     al,0x7f
  41e1e7:	dec    ebp
  41e1e8:	enter  0xe0e4,0xb5
  41e1ec:	ror    DWORD PTR [esi-0x642f7c0c],0x81
  41e1f3:	inc    ebp
  41e1f4:	sar    BYTE PTR [edx+0x15],1
  41e1f7:	mov    eax,DWORD PTR [ecx-0x78]
  41e1fa:	add    BYTE PTR [edx],0x0
	...
  41e20d:	add    BYTE PTR [eax],al
  41e20f:	add    BYTE PTR [edi],dl
  41e211:	loope  0x41e213
  41e213:	lea    eax,[eax-0x64]
  41e216:	push   es
  41e217:	push   edx
  41e218:	pop    es
  41e219:	fxtract 
  41e21b:	push   eax
  41e21c:	je     0x41e244
  41e21e:	idiv   bh
  41e220:	adc    DWORD PTR [edx],0xffffffcd
  41e223:	or     BYTE PTR ds:0xc18bd4d8,al
  41e229:	add    BYTE PTR [eax+0x1a1c4855],0x8b
  41e230:	leave  
  41e231:	mov    BYTE PTR [eax+0x4e1b90c0],cl
  41e237:	hlt    
  41e238:	pop    es
  41e239:	loopne 0x41e21f
  41e23b:	or     DWORD PTR [ebp-0x67],0xffffff81
  41e23f:	dec    ebp
  41e240:	xor    BYTE PTR [edx-0x64],bh
  41e243:	mov    esp,ecx
  41e245:	je     0x41e1cf
  41e247:	ret    0x1b98
  41e24a:	pop    esi
  41e24b:	loopne 0x41e282
  41e24d:	lahf   
  41e24e:	repz jmp DWORD PTR [ebx]
  41e251:	sbb    ch,dh
  41e253:	pop    ebp
  41e254:	dec    edi
  41e255:	popa   
  41e256:	(bad)
  41e259:	sbb    ebp,esp
  41e25b:	cmp    eax,0xffffff9c
  41e25e:	pusha  
  41e25f:	lock mov ss,esp
  41e262:	or     bh,bh
  41e264:	mov    eax,ds:0x8c417b94
  41e269:	sbb    ecx,DWORD PTR [esi-0x8]
  41e26c:	je     0x41e1fe
  41e26e:	pop    es
  41e26f:	inc    eax
  41e270:	mov    WORD PTR [ecx],ds
  41e272:	dec    esi
  41e273:	clc    
	...
  41e288:	cmp    al,0x7c
  41e28a:	xor    edi,ebp
  41e28c:	ror    DWORD PTR [ebp+0x1b94c488],cl
  41e292:	dec    esi
  41e293:	cld    
  41e294:	pop    ss
  41e295:	loopne 0x41e2af
  41e297:	push   ecx
  41e298:	pop    es
  41e299:	call   0xd84934a2
  41e29e:	add    BYTE PTR [eax-0x55],dl
  41e2a1:	out    0xf4,eax
  41e2a3:	mov    ebp,DWORD PTR [ecx-0x37333811]
  41e2a9:	pusha  
  41e2aa:	(bad)
  41e2ad:	sbb    ebp,esp
  41e2af:	mov    eax,ds:0x4a05e4
  41e2b4:	dec    edx
  41e2b5:	xchg   esp,eax
  41e2b6:	pusha  
  41e2b7:	mov    esp,DWORD PTR [ecx-0x73be841c]
  41e2bd:	sbb    ebx,DWORD PTR [ecx+0x1]
  41e2c0:	push   ds
  41e2c1:	push   ecx
  41e2c2:	adc    DWORD PTR [eax-0x77],0x48ccc7ef
  41e2c9:	pusha  
  41e2ca:	(bad)
  41e2cd:	sbb    ebp,esp
  41e2cf:	cmp    DWORD PTR [eax],0xffffffa0
  41e2d2:	test   eax,0x8d3bb4c
  41e2d7:	mov    ebx,DWORD PTR [esi-0x3f]
  41e2da:	sar    DWORD PTR [esi],0x7
  41e2dd:	aam    0x38
  41e2df:	mov    edi,DWORD PTR [esi]
  41e2e1:	sbb    edi,edx
  41e2e3:	ds pop ss
  41e2e5:	fadd   QWORD PTR [ebx+ecx*4]
  41e2e8:	sbb    eax,DWORD PTR ds:[esi-0xc]
	...
  41e300:	pop    es
  41e301:	xlat   BYTE PTR ds:[ebx]
  41e302:	cld    
  41e303:	mov    edx,DWORD PTR [eax+eiz*4-0x7f]
  41e307:	dec    ebp
  41e308:	add    al,0x19
  41e30a:	pop    esi
  41e30b:	clc    
  41e30c:	add    eax,0x8db8f4e7
  41e311:	xchg   esp,eax
  41e312:	or     BYTE PTR [eax],al
  41e314:	adc    DWORD PTR [ebp+edi*2+0x44],edx
  41e318:	(bad)  
  41e319:	psllw  mm0,QWORD PTR [eax]
  41e31c:	popa   
  41e31d:	cwde   
  41e31e:	aaa    
  41e31f:	shl    bh,0xcf
  41e322:	jg     0x41e371
  41e324:	les    ebx,FWORD PTR [eax]
  41e326:	pop    edx
  41e327:	sbb    BYTE PTR [edi-0x6a8aff19],al
  41e32d:	sbb    DWORD PTR [esi-0x8],ecx
  41e330:	pop    es
  41e331:	fild   WORD PTR [ecx+ecx*4]
  41e334:	push   esp
  41e335:	mov    al,0x7f
  41e337:	push   ebp
  41e338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e339:	sbb    BYTE PTR [esi+0x10],cl
  41e33c:	add    eax,0x8db810d2
  41e341:	xchg   esp,eax
  41e342:	or     BYTE PTR [eax],al
  41e344:	ja     0x41e2f3
  41e346:	jg     0x41e395
  41e348:	test   BYTE PTR [eax],ah
  41e34a:	sbb    cl,BYTE PTR [ecx+0x45808ce1]
  41e350:	je     0x41e322
  41e352:	dec    ebp
  41e353:	cld    
  41e354:	loope  0x41e2e6
  41e356:	aaa    
  41e357:	shl    BYTE PTR [edi-0x6f],0xdf
  41e35b:	mov    bl,0x9f
  41e35d:	push   esp
  41e35e:	and    ch,0xb1
  41e361:	push   edi
  41e362:	(bad)
	...
  41e375:	add    BYTE PTR [eax],al
  41e377:	add    BYTE PTR [eax+0x59],bl
  41e37a:	(bad)
  41e37d:	pop    ecx
  41e37e:	(bad)
  41e381:	pop    ecx
  41e382:	(bad)
  41e385:	pop    ds
  41e386:	in     eax,0x8b
  41e388:	rcr    DWORD PTR [edi+ebp*1+0xc079045],1
  41e38f:	mov    edx,ecx
  41e391:	pushf  
  41e392:	fild   WORD PTR ds:0x457f9827
  41e398:	cwde   
  41e399:	jmp    0x5912b065
  41e39e:	(bad)
  41e3a1:	pop    eax
  41e3a2:	vmulps ymm3,ymm6,YMMWORD PTR [edi]
  41e3a6:	in     eax,0x83
  41e3a8:	clc    
  41e3a9:	mov    eax,0x94e045cb
  41e3ae:	cwde   
  41e3af:	add    DWORD PTR [edi+ebx*1-0x2dfaf7b2],ecx
  41e3b6:	ror    BYTE PTR [ebx+0x55806c59],1
  41e3bc:	xchg   esp,eax
  41e3bd:	xchg   edi,eax
  41e3be:	pop    ecx
  41e3bf:	cmp    al,0x5
  41e3c1:	loop   0x41e3ab
  41e3c3:	mov    ecx,DWORD PTR [ecx+0x74]
  41e3c6:	add    al,0xb7
  41e3c8:	push   esp
  41e3c9:	mov    al,ds:0x19ac557f
  41e3ce:	dec    ebp
  41e3cf:	or     dh,BYTE PTR [ebp+ebx*1+0x4e]
  41e3d3:	call   0x404973fc
  41e3d8:	mov    WORD PTR [edi],ds
  41e3da:	push   es
  41e3db:	cmp    BYTE PTR [eax],al
	...
  41e3ed:	add    BYTE PTR [eax],al
  41e3ef:	add    bl,bh
  41e3f1:	aad    0x8
  41e3f3:	push   ecx
  41e3f4:	fs fwait
  41e3f6:	hlt    
  41e3f7:	push   DWORD PTR [ebx+0x17]
  41e3fa:	int    0x8
  41e3fc:	adc    eax,0xcc6af8d1
  41e401:	cld    
  41e402:	or     BYTE PTR [eax],dh
  41e404:	mov    WORD PTR [eax+eiz*2+0x894fc00],ss
  41e40b:	push   0xffffff8c
  41e40d:	mov    ebx,DWORD PTR [esi-0x10]
  41e410:	adc    eax,0xe18becd1
  41e415:	je     0x41e397
  41e417:	inc    edx
  41e418:	fsub   st,st(4)
  41e41a:	jg     0x41e469
  41e41c:	xchg   esp,eax
  41e41d:	in     eax,0x7f
  41e41f:	push   ebp
  41e420:	sub    dh,ah
  41e422:	loopne 0x41e3a5
  41e424:	sbb    cl,BYTE PTR [ebx-0x67b77c0c]
  41e42a:	retf   
  41e42b:	inc    ebp
  41e42c:	add    BYTE PTR [eax+ecx*1+0x27f8c00],dl
  41e433:	mov    edx,DWORD PTR [ecx-0x80]
  41e436:	mov    al,al
  41e438:	lea    ebx,ds:0xd917f44e
  41e43e:	call   0xb26ff52
  41e443:	cmp    DWORD PTR [ecx-0x80],eax
  41e446:	js     0x41e4a1
  41e448:	pop    es
  41e449:	shl    eax,1
  41e44b:	add    DWORD PTR [eax+eiz*4+0x8],0x74
  41e450:	dec    ecx
  41e451:	pop    ds
  41e452:	inc    esi
  41e453:	call   0x41e458
	...
  41e468:	prefetch BYTE PTR [ecx]
  41e46b:	add    BYTE PTR [eax],bh
  41e46d:	enter  0x557f,0xb4
  41e471:	push   ds
  41e472:	inc    edi
  41e473:	adc    BYTE PTR [edi],dl
  41e475:	fld1   
  41e477:	mov    edi,DWORD PTR ds:0x7c4485c8
  41e47d:	mov    eax,DWORD PTR [eax-0x293993b3]
  41e483:	idiv   ebp
  41e485:	enter  0x557f,0x6c
  41e489:	call   0x457f:0xe4b042a3
  41e490:	je     0x41e4b0
  41e492:	inc    esi
  41e493:	or     BYTE PTR [edi+0x7511cdc],cl
  41e499:	loopne 0x41e47b
  41e49b:	mov    ecx,ecx
  41e49d:	jo     0x41e4a7
  41e49f:	inc    edx
  41e4a0:	cwde   
  41e4a1:	in     al,0xe0
  41e4a3:	adc    eax,0x83f48a42
  41e4a8:	push   eax
  41e4a9:	cdq    
  41e4aa:	jg     0x41e4f9
  41e4ac:	and    al,0x16
  41e4ae:	retf   0x1528
  41e4b1:	fsub   st,st(0)
  41e4b3:	jmp    0x41e4b3
  41e4b5:	sbb    eax,0x7cbee45e
  41e4ba:	ret    
  41e4bb:	cld    
  41e4bc:	adc    ecx,DWORD PTR [edx-0x36f3b78]
  41e4c2:	sbb    al,0x3
  41e4c4:	dec    esp
  41e4c5:	xchg   esp,eax
  41e4c6:	test   eax,0x8d38338
  41e4cb:	push   eax
	...
  41e4e0:	in     al,0xdd
  41e4e2:	out    dx,eax
  41e4e3:	(bad)  
  41e4e4:	jmp    0x41e4fb
  41e4e6:	int    0x8
  41e4e8:	adc    eax,0x9983d4d0
  41e4ed:	sar    BYTE PTR [ebx+0x41],0x8c
  41e4f1:	xchg   esp,eax
  41e4f2:	jge    0x41e4fe
  41e4f4:	pop    ss
  41e4f5:	cwde   
  41e4f6:	and    al,0x77
  41e4f8:	dec    ebp
  41e4f9:	xchg   esp,eax
  41e4fa:	pop    ecx
  41e4fb:	jmp    DWORD PTR [ecx+0x68]
  41e4fe:	mov    BYTE PTR ds:0x4a0178,bh
  41e504:	mov    edi,?
  41e506:	adc    al,0x6a
  41e508:	dec    esp
  41e509:	cld    
  41e50a:	or     BYTE PTR [eax],dh
  41e50c:	mov    WORD PTR [edi+edi*2+0x7fe69055],ss
  41e513:	inc    ebp
  41e514:	ins    BYTE PTR es:[edi],dx
  41e515:	sbb    eax,0x89dd3441
  41e51a:	pop    esi
  41e51b:	lock das 
  41e51d:	mov    al,ds:0x7d8c417b
  41e522:	push   ds
  41e523:	push   0xffffffcc
  41e525:	cld    
  41e526:	or     BYTE PTR [eax],dh
  41e528:	mov    WORD PTR [edi+edi*2+0x5ee65855],ss
  41e52f:	add    BYTE PTR [ebx-0x21],dl
  41e532:	clc    
  41e533:	mov    ds:0x4a01a0,eax
  41e538:	xrstors [edi+esi*2]
  41e53c:	int    0x94
  41e53e:	or     BYTE PTR [ebp-0x67],dh
  41e541:	dec    BYTE PTR [eax+0x68]
	...
  41e558:	mov    esp,es
  41e55a:	or     BYTE PTR [eax],al
  41e55c:	pop    ss
  41e55d:	iret   
  41e55e:	hlt    
  41e55f:	push   eax
  41e560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e561:	xchg   esp,eax
  41e562:	repz push ebp
  41e564:	sbb    al,0x35
  41e566:	sbb    eax,0x7f944d77
  41e56b:	dec    ebp
  41e56c:	call   0x81a2b8b
  41e571:	(bad)  
  41e573:	mov    ecx,DWORD PTR [ecx+0x6c]
  41e576:	or     BYTE PTR [edx-0x58],al
  41e579:	sbb    ecx,DWORD PTR [esi-0x20]
  41e57c:	pop    ss
  41e57d:	xlat   BYTE PTR ds:[ebx]
  41e57e:	call   0x5726230e
  41e583:	mov    ecx,DWORD PTR [ecx+0x70]
  41e586:	pop    ecx
  41e587:	mov    ebx,DWORD PTR [ecx-0x73be8460]
  41e58d:	jecxz  0x41e56f
  41e58f:	push   ecx
  41e590:	mov    ecx,0xc883f488
  41e595:	xchg   edi,eax
  41e596:	jg     0x41e5ed
  41e598:	lods   al,BYTE PTR ds:[esi]
  41e599:	adc    al,0xaf
  41e59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e59c:	mov    WORD PTR [eax+ecx*1+0x7fcb2000],ss
  41e5a3:	inc    ebp
  41e5a4:	lods   al,BYTE PTR ds:[esi]
  41e5a5:	sbb    al,0x46
  41e5a7:	fmul   DWORD PTR [edi-0x73ff56e4]
  41e5ad:	xchg   esp,eax
  41e5ae:	or     DWORD PTR [ebp+0x68],0x2de05e1c
  41e5b5:	mov    eax,ds:0xbb8c417b
  41e5ba:	inc    esi
  41e5bb:	xor    al,0x0
	...
  41e5cd:	add    BYTE PTR [eax],al
  41e5cf:	add    BYTE PTR [edi],ch
  41e5d1:	aad    0x7b
  41e5d3:	inc    ecx
  41e5d4:	mov    WORD PTR [ebx],ds
  41e5d6:	push   es
  41e5d7:	inc    eax
  41e5d8:	fcmovnbe st,st(5)
  41e5da:	or     BYTE PTR [ecx+0x17],dl
  41e5dd:	mov    ds:0x94cd771c,al
  41e5e2:	push   esi
  41e5e3:	mov    edx,ecx
  41e5e5:	js     0x41e640
  41e5e7:	call   0x36715c
  41e5ec:	sqrtps xmm0,XMMWORD PTR ds:0x8074d18b
  41e5f3:	adc    eax,0x49ff80
  41e5f8:	(bad)  
  41e5f9:	in     eax,0x20
  41e5fb:	mov    DWORD PTR [ecx-0x73be841c],esp
  41e601:	adc    esi,DWORD PTR [esi]
  41e603:	xor    al,0x83
  41e605:	aad    0x8
  41e607:	add    BYTE PTR [ecx-0x48],bh
  41e60a:	test   eax,0x8d56314
  41e60f:	push   eax
  41e610:	pop    ss
  41e611:	call   0x8b59:0x944d7758
  41e618:	jns    0x41e5d2
  41e61a:	jnp    0x41e65d
  41e61c:	mov    edx,fs
  41e61e:	loopne 0x41e655
  41e620:	rol    DWORD PTR [edi-0x672f7c0c],0xa9
  41e627:	adc    al,0x3b
  41e629:	aad    0x8
  41e62b:	push   eax
  41e62c:	mov    ah,0x8f
  41e62e:	out    dx,al
  41e62f:	jmp    DWORD PTR [ebx+0x4cd13]
	...
  41e645:	add    BYTE PTR [eax],al
  41e647:	add    BYTE PTR [edi-0x70db9f0c],ah
  41e64d:	aam    0x8
  41e64f:	mov    ebx,DWORD PTR [ecx-0x73be8434]
  41e655:	in     eax,0xe0
  41e657:	adc    DWORD PTR [esi-0x79],esi
  41e65a:	hlt    
  41e65b:	or     DWORD PTR [eax-0x64],0xffffff81
  41e65f:	inc    ebp
  41e660:	inc    eax
  41e661:	sbb    ebx,DWORD PTR [esi]
  41e663:	adc    al,0xdb
  41e665:	aad    0x8
  41e667:	push   edx
  41e668:	pop    es
  41e669:	shr    eax,1
  41e66b:	mov    eax,DWORD PTR [ecx-0x73be8460]
  41e671:	xchg   ebx,eax
  41e672:	inc    eax
  41e673:	sub    ch,bl
  41e675:	sbb    ebx,DWORD PTR [esi]
  41e677:	sub    al,0xc3
  41e679:	aad    0x8
  41e67b:	push   edx
  41e67c:	and    al,0x7b
  41e67e:	cmc    
  41e67f:	jmp    FWORD PTR [ebx]
  41e681:	adc    ecx,ebp
  41e683:	or     al,0xed
  41e685:	mov    bh,0x7b
  41e687:	inc    ecx
  41e688:	mov    WORD PTR [ecx-0x6b728b38],ss
  41e68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e68f:	pop    eax
  41e690:	adc    ebp,0x8
  41e693:	lea    edx,[ecx-0x74]
  41e696:	pop    edx
  41e697:	push   0x4c
  41e699:	cli    
  41e69a:	or     cl,BYTE PTR [ebx+0x417bec99]
  41e6a0:	mov    edx,fs
  41e6a2:	repz push ebp
  41e6a4:	mov    eax,0xdbfca77b
  41e6a9:	xchg   BYTE PTR [ecx+0x1],dh
	...
  41e6bf:	add    BYTE PTR [esp+edx*4-0x174e74f8],cl
  41e6c6:	mov    BYTE PTR [esp+ecx*4],0x58
  41e6ca:	(bad)
  41e6cd:	push   edi
  41e6ce:	vmulps ymm3,ymm6,YMMWORD PTR [ebx]
  41e6d2:	in     eax,0x8b
  41e6d4:	push   ecx
  41e6d5:	pushf  
  41e6d6:	jg     0x41e718
  41e6d8:	mov    al,ds:0xc8ccc7e8
  41e6dd:	push   edi
  41e6de:	(bad)
  41e6e1:	sbb    esp,ebp
  41e6e3:	push   ebx
  41e6e4:	loop   0x41e6c3
  41e6e6:	jg     0x41e725
  41e6e8:	lods   al,BYTE PTR ds:[esi]
  41e6e9:	std    
  41e6ea:	dec    ecx
  41e6eb:	add    BYTE PTR [edi],al
  41e6ed:	test   al,0x20
  41e6ef:	ja     0x41e6be
  41e6f1:	xchg   esp,eax
  41e6f2:	jg     0x41e729
  41e6f4:	test   ch,bh
  41e6f6:	dec    ecx
  41e6f7:	add    bl,al
  41e6f9:	out    0x4f,al
  41e6fb:	pop    ebp
  41e6fc:	dec    edi
  41e6fd:	pop    ecx
  41e6fe:	(bad)
  41e701:	sbb    ebp,esp
  41e703:	push   ecx
  41e704:	mov    ah,0xc0
  41e706:	pop    es
  41e707:	inc    eax
  41e708:	mov    WORD PTR [ebx],?
  41e70a:	xor    DWORD PTR [edi-0x33],esi
  41e70d:	xchg   esp,eax
  41e70e:	pop    eax
  41e70f:	call   0x3672b4
  41e714:	sqrtps xmm0,XMMWORD PTR [ecx]
  41e717:	mov    ecx,ecx
  41e719:	mov    BYTE PTR [eax+0x5ee3844d],al
  41e71f:	add    BYTE PTR [edi],al
  41e721:	mov    al,ds:0x775c
	...
  41e736:	add    BYTE PTR [eax],al
  41e738:	dec    ebp
  41e739:	xchg   esp,eax
  41e73a:	push   esi
  41e73b:	call   FWORD PTR [ecx-0x78]
  41e73e:	and    ch,0x59
  41e741:	push   ecx
  41e742:	vmulps ymm3,ymm6,YMMWORD PTR [ecx]
  41e746:	in     eax,0x83
  41e748:	clc    
  41e749:	mov    al,0xcb
  41e74b:	inc    ebp
  41e74c:	in     al,0x94
  41e74e:	or     BYTE PTR [eax],al
  41e750:	mov    WORD PTR [ebp+0x4e],cs
  41e753:	fcom   QWORD PTR [esp+edx*4+0x8]
  41e757:	add    bl,dl
  41e759:	iret   
  41e75a:	cld    
  41e75b:	add    DWORD PTR [esp+edx*4-0x77ae38f8],ecx
  41e762:	or     DWORD PTR [eax],eax
  41e764:	mov    WORD PTR [ebx+ecx*8+0x894b045],ss
  41e76b:	add    BYTE PTR [ecx+ebx*1-0x67faf7ba],cl
  41e772:	and    al,0x77
  41e774:	dec    ebp
  41e775:	xchg   esp,eax
  41e776:	loopne 0x41e7e1
  41e778:	test   BYTE PTR [ebp-0x24f5e0c],al
  41e77e:	dec    ecx
  41e77f:	add    BYTE PTR [ecx-0x73ff0b7b],dh
  41e785:	add    BYTE PTR ds:0x7bc091c7,al
  41e78b:	inc    ecx
  41e78c:	mov    WORD PTR [eax+ecx*1-0x867400],ss
  41e793:	(bad)  
  41e794:	mov    eax,eax
  41e796:	jnp    0x41e7d9
  41e798:	mov    WORD PTR [ebx+0x8],ss
	...
  41e7ae:	add    BYTE PTR [eax],al
  41e7b0:	mov    WORD PTR [ecx],ss
  41e7b2:	ss sub al,0xc3
  41e7b5:	ror    DWORD PTR [eax],cl
  41e7b7:	add    BYTE PTR [ecx+0x6005cb9a],bh
  41e7bd:	std    
  41e7be:	dec    ecx
  41e7bf:	add    BYTE PTR [esp+edx*4-0x38f0fff8],cl
  41e7c6:	cmp    al,0x77
  41e7c8:	int    0x94
  41e7ca:	or     BYTE PTR [ebp-0x67],dh
  41e7cd:	cli    
  41e7ce:	or     bh,bh
  41e7d0:	cdq    
  41e7d1:	xchg   esp,eax
  41e7d2:	jnp    0x41e815
  41e7d4:	mov    WORD PTR [ecx],?
  41e7d6:	and    eax,0x7f944d77
  41e7db:	or     eax,0x49fdb8
  41e7e0:	adc    eax,0x818be0d7
  41e7e5:	mov    eax,0x198c417b
  41e7ea:	dec    esi
  41e7eb:	call   0x8976ba7f
  41e7f0:	dec    ecx
  41e7f1:	jl     0x41e773
  41e7f3:	dec    ebp
  41e7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7f5:	sbb    al,BYTE PTR [esi]
  41e7f7:	sbb    al,0x3b
  41e7f9:	ror    DWORD PTR [eax],cl
  41e7fb:	push   0x48914c
  41e800:	mov    ds:0x4d77089e,eax
  41e805:	xchg   esp,eax
  41e806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e807:	cmp    BYTE PTR [ebx],bl
  41e809:	ror    DWORD PTR [eax],cl
  41e80b:	(bad)  
  41e80c:	xchg   ecx,eax
  41e80d:	int3   
  41e80e:	jnp    0x41e851
  41e810:	mov    ecx,?
  41e812:	pop    es
  41e813:	inc    eax
	...
  41e828:	mov    esp,gs
  41e82a:	pop    eax
  41e82b:	add    ecx,esp
  41e82d:	xchg   esp,eax
  41e82e:	jg     0x41e845
  41e830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e831:	or     ecx,DWORD PTR [edx+0x0]
  41e834:	mov    esi,0x5bf8876c
  41e839:	test   BYTE PTR [eax+0x4d3784c4],cl
  41e83f:	ja     0x41e80e
  41e841:	xchg   esp,eax
  41e842:	repz adc eax,0x4a0bc8
  41e848:	out    dx,eax
  41e849:	call   0x35ce29c9
  41e84e:	inc    ecx
  41e84f:	ja     0x41e81e
  41e851:	xchg   esp,eax
  41e852:	pop    eax
  41e853:	call   0x366b30
  41e858:	mulps  xmm1,XMMWORD PTR ds:0x8084c989
  41e85f:	dec    ebp
  41e860:	cld    
  41e861:	in     eax,0xe0
  41e863:	aad    0x2
  41e865:	test   ah,dh
  41e867:	adc    eax,0xffffff98
  41e86a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e86b:	xor    BYTE PTR [ebx-0x2b],bh
  41e86e:	or     BYTE PTR [ebx+0x6a578441],cl
  41e874:	mov    WORD PTR ds:0x944d7739,?
  41e87a:	pop    eax
  41e87b:	call   0x3664b0
  41e880:	mulps  xmm0,XMMWORD PTR ds:0x8284518b
  41e887:	dec    ebp
  41e888:	lods   al,BYTE PTR ds:[esi]
  41e889:	divps  xmm7,xmm4
	...
  41e8a0:	ja     0x41e88b
  41e8a2:	clc    
  41e8a3:	jae    0x41e8eb
  41e8a5:	cmovle esp,eax
  41e8a8:	cmp    al,0xf
  41e8aa:	inc    esi
  41e8ab:	fdivr  QWORD PTR ds:0x93fba36c
  41e8b1:	or     DWORD PTR [eax+0x353794c4],0x77
  41e8b8:	int    0x94
  41e8ba:	jg     0x41e8d1
  41e8bc:	mov    eax,0xde004a0b
  41e8c1:	xor    eax,0x94cd7741
  41e8c6:	pop    es
  41e8c7:	inc    ebp
  41e8c8:	push   0x9c0d7fe4
  41e8cd:	or     ecx,DWORD PTR [edx+0x0]
  41e8d0:	(bad)  
  41e8d1:	shl    esp,1
  41e8d3:	push   ecx
  41e8d4:	xor    al,0x2b
  41e8d6:	out    dx,eax
  41e8d7:	inc    DWORD PTR [ebx+0x17]
  41e8da:	int    0xc
  41e8dc:	pop    es
  41e8dd:	jmp    0x611aecde
  41e8e2:	or     BYTE PTR [ebp+0x30],dl
  41e8e5:	or     eax,0xd917e45e
  41e8ea:	hlt    
  41e8eb:	add    edx,ecx
  41e8ed:	pusha  
  41e8ee:	add    BYTE PTR [ebp+0x10],0xf
  41e8f2:	inc    esi
  41e8f3:	loopne 0x41e8ac
  41e8f5:	xchg   ecx,eax
  41e8f6:	xor    al,0x77
  41e8f8:	dec    ebp
  41e8f9:	xchg   esp,eax
  41e8fa:	or     DWORD PTR [ebp-0x14],0x49c7936e
  41e901:	jl     0x41e90c
	...
  41e917:	add    BYTE PTR [esp+edx*4-0x16e8f621],cl
  41e91e:	lock or esi,0xffffff97
  41e922:	adc    DWORD PTR [ebp-0x2c],0x87f84e0e
  41e929:	fprem  
  41e92b:	jae    0x41e8b1
  41e92d:	clts   
  41e92f:	xor    BYTE PTR [ebx-0x2b],al
  41e932:	or     BYTE PTR [ebx],al
  41e934:	inc    ecx
  41e935:	jl     0x41e8b7
  41e937:	adc    DWORD PTR [edi+0x5ca1f0e9],ecx
  41e93d:	or     ecx,DWORD PTR [edx+0x0]
  41e940:	(bad)  
  41e941:	f2xm1  
  41e943:	mov    DWORD PTR [edi+ecx*1+0x46],edi
  41e947:	clc    
  41e948:	or     eax,0x8c03e254
  41e94d:	xchg   esp,eax
  41e94e:	jg     0x41e965
  41e950:	mov    esp,0x8f004a09
  41e955:	out    0xf0,eax
  41e957:	xor    edx,DWORD PTR [esi-0x3288c6cd]
  41e95d:	xchg   esp,eax
  41e95e:	pop    es
  41e95f:	inc    ebp
  41e960:	push   esp
  41e961:	or     al,0x1
  41e963:	jmp    0x41e980
  41e965:	or     al,0x26
  41e967:	and    al,0xc3
  41e969:	ror    DWORD PTR [eax],cl
  41e96b:	mov    DWORD PTR [ecx-0x73be844c],eax
  41e971:	(bad)
  41e974:	jns    0x41e912
  41e976:	jnp    0x41e9b9
  41e978:	mov    ebp,es
  41e97a:	ror    DWORD PTR [ecx+0x0],0x0
	...
  41e98d:	add    BYTE PTR [eax],al
  41e98f:	add    BYTE PTR [ecx-0x73be8454],al
  41e995:	ins    BYTE PTR es:[edi],dx
  41e996:	add    edi,eax
  41e998:	adc    eax,DWORD PTR [edx+0x9bc0d80]
  41e99e:	dec    edx
  41e99f:	add    BYTE PTR [ebp+0x6c],bl
  41e9a2:	pop    es
  41e9a3:	sti    
  41e9a4:	sti    
  41e9a5:	or     DWORD PTR [esi+0x379879c0],0x7faef7c0
  41e9af:	and    eax,0x4a09a8
  41e9b4:	mulps  xmm1,XMMWORD PTR ds:0x7bc89183
  41e9bb:	inc    ecx
  41e9bc:	mov    WORD PTR [esp+edi*2+0x7ba8ed09],ss
  41e9c3:	inc    ecx
  41e9c4:	mov    WORD PTR [ebx],cs
  41e9c6:	dec    ebp
  41e9c7:	and    al,0x88
  41e9c9:	ins    BYTE PTR es:[edi],dx
  41e9ca:	jg     0x41e9c9
  41e9cc:	stos   DWORD PTR es:[edi],eax
  41e9cd:	add    DWORD PTR [eax+0x4a093c15],0x38553e00
  41e9d7:	rol    BYTE PTR [edi],0x78
  41e9da:	push   esi
  41e9db:	ret    
  41e9dc:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41e9e3:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41e9ea:	or     BYTE PTR [eax],al
  41e9ec:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
	...
  41ea07:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41ea0e:	or     BYTE PTR [eax],al
  41ea10:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ea17:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41ea1e:	or     BYTE PTR [eax],al
  41ea20:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ea27:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41ea2e:	or     BYTE PTR [eax],al
  41ea30:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ea37:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41ea3e:	or     BYTE PTR [eax],al
  41ea40:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ea47:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41ea4e:	or     BYTE PTR [eax],al
  41ea50:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ea57:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41ea5e:	or     BYTE PTR [eax],al
  41ea60:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ea67:	add    BYTE PTR [esp+edx*4+0x8],cl
	...
  41ea7e:	add    BYTE PTR [eax],al
  41ea80:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ea87:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41ea8e:	or     BYTE PTR [eax],al
  41ea90:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ea97:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41ea9e:	or     BYTE PTR [eax],al
  41eaa0:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41eaa7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41eaae:	or     BYTE PTR [eax],al
  41eab0:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41eab7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41eabe:	or     BYTE PTR [eax],al
  41eac0:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41eac7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41eace:	or     BYTE PTR [eax],al
  41ead0:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41ead7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41eade:	or     BYTE PTR [eax],al
  41eae0:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  41eaf7:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41eafe:	or     BYTE PTR [eax],al
  41eb00:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41eb07:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41eb0e:	or     BYTE PTR [eax],al
  41eb10:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41eb17:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41eb1e:	or     BYTE PTR [eax],al
  41eb20:	mov    WORD PTR [eax+ecx*1-0x63da0100],ss
  41eb27:	adc    eax,DWORD PTR [edx+0x0]
  41eb2a:	jmp    DWORD PTR ds:0x4213a0
  41eb30:	jmp    DWORD PTR ds:0x4213a4
  41eb36:	jmp    DWORD PTR ds:0x4213a8
  41eb3c:	jmp    DWORD PTR ds:0x4213ac
  41eb42:	jmp    DWORD PTR ds:0x4213b0
  41eb48:	jmp    DWORD PTR ds:0x4213b4
  41eb4e:	jmp    DWORD PTR ds:0x4213b8
  41eb54:	jmp    DWORD PTR ds:0x4213bc
  41eb5a:	jmp    DWORD PTR ds:0x4213c0
  41eb60:	jmp    DWORD PTR ds:0x4213c4
  41eb66:	jmp    DWORD PTR ds:0x4213c8
  41eb6c:	jmp    DWORD PTR ds:0x4213cc
  41eb72:	jmp    DWORD PTR ds:0x4213d0
  41eb78:	jmp    DWORD PTR ds:0x4213d4
  41eb7e:	jmp    DWORD PTR ds:0x4213d8
  41eb84:	jmp    DWORD PTR ds:0x4213dc
  41eb8a:	jmp    DWORD PTR ds:0x4213e0
  41eb90:	jmp    DWORD PTR ds:0x4213e4
  41eb96:	jmp    DWORD PTR ds:0x4213e8
  41eb9c:	jmp    DWORD PTR ds:0x4213ec
  41eba2:	jmp    DWORD PTR ds:0x4213f0
  41eba8:	jmp    DWORD PTR ds:0x4213f4
  41ebae:	jmp    DWORD PTR ds:0x4213f8
  41ebb4:	jmp    DWORD PTR ds:0x4213fc
  41ebba:	jmp    DWORD PTR ds:0x421400
  41ebc0:	jmp    DWORD PTR ds:0x421404
  41ebc6:	jmp    DWORD PTR ds:0x421408
  41ebcc:	jmp    DWORD PTR ds:0x42140c
  41ebd2:	jmp    DWORD PTR ds:0x421410
  41ebd8:	jmp    DWORD PTR ds:0x421414
  41ebde:	jmp    DWORD PTR ds:0x421418
  41ebe4:	jmp    DWORD PTR ds:0x42141c
  41ebea:	jmp    DWORD PTR ds:0x421420
  41ebf0:	jmp    DWORD PTR ds:0x421424
  41ebf6:	jmp    DWORD PTR ds:0x421428
  41ebfc:	jmp    DWORD PTR ds:0x42142c
  41ec02:	jmp    DWORD PTR ds:0x421430
  41ec08:	jmp    DWORD PTR ds:0x421434
  41ec0e:	jmp    DWORD PTR ds:0x421438
  41ec14:	jmp    DWORD PTR ds:0x42143c
  41ec1a:	jmp    DWORD PTR ds:0x421440
  41ec20:	jmp    DWORD PTR ds:0x421444
  41ec26:	jmp    DWORD PTR ds:0x421448
  41ec2c:	jmp    DWORD PTR ds:0x42144c
  41ec32:	jmp    DWORD PTR ds:0x421450
  41ec38:	jmp    DWORD PTR ds:0x421454
  41ec3e:	jmp    DWORD PTR ds:0x421458
  41ec44:	jmp    DWORD PTR ds:0x42145c
  41ec4a:	jmp    DWORD PTR ds:0x421460
  41ec50:	jmp    DWORD PTR ds:0x421464
  41ec56:	jmp    DWORD PTR ds:0x421468
  41ec5c:	jmp    DWORD PTR ds:0x42146c
  41ec62:	jmp    DWORD PTR ds:0x421470
  41ec68:	jmp    DWORD PTR ds:0x421474
  41ec6e:	jmp    DWORD PTR ds:0x421478
  41ec74:	jmp    DWORD PTR ds:0x42147c
  41ec7a:	jmp    DWORD PTR ds:0x421480
  41ec80:	jmp    DWORD PTR ds:0x421484
  41ec86:	jmp    DWORD PTR ds:0x421488
  41ec8c:	jmp    DWORD PTR ds:0x42148c
  41ec92:	jmp    DWORD PTR ds:0x421490
  41ec98:	jmp    DWORD PTR ds:0x421494
  41ec9e:	jmp    DWORD PTR ds:0x421498
  41eca4:	jmp    DWORD PTR ds:0x42149c
  41ecaa:	jmp    DWORD PTR ds:0x4214a4
  41ecb0:	jmp    DWORD PTR ds:0x4214a8
  41ecb6:	jmp    DWORD PTR ds:0x4214ac
  41ecbc:	jmp    DWORD PTR ds:0x4214b0
  41ecc2:	jmp    DWORD PTR ds:0x4214b4
  41ecc8:	jmp    DWORD PTR ds:0x4214b8
  41ecce:	jmp    DWORD PTR ds:0x4214bc
  41ecd4:	jmp    DWORD PTR ds:0x4214c0
  41ecda:	jmp    DWORD PTR ds:0x4214c4
  41ece0:	jmp    DWORD PTR ds:0x4214c8
  41ece6:	jmp    DWORD PTR ds:0x4214cc
  41ecec:	jmp    DWORD PTR ds:0x4214d0
  41ecf2:	jmp    DWORD PTR ds:0x4214d4
  41ecf8:	jmp    DWORD PTR ds:0x4214d8
  41ecfe:	jmp    DWORD PTR ds:0x4214dc
  41ed04:	jmp    DWORD PTR ds:0x4214e0
  41ed0a:	jmp    DWORD PTR ds:0x4214e4
  41ed10:	jmp    DWORD PTR ds:0x4214e8
  41ed16:	jmp    DWORD PTR ds:0x4214ec
  41ed1c:	jmp    DWORD PTR ds:0x4214f0
  41ed22:	jmp    DWORD PTR ds:0x4214f4
  41ed28:	jmp    DWORD PTR ds:0x4214f8
  41ed2e:	jmp    DWORD PTR ds:0x4214fc
  41ed34:	jmp    DWORD PTR ds:0x421500
  41ed3a:	jmp    DWORD PTR ds:0x421504
  41ed40:	jmp    DWORD PTR ds:0x421508
  41ed46:	jmp    DWORD PTR ds:0x42150c
  41ed4c:	jmp    DWORD PTR ds:0x421510
  41ed52:	jmp    DWORD PTR ds:0x421514
  41ed58:	jmp    DWORD PTR ds:0x421518
  41ed5e:	jmp    DWORD PTR ds:0x42151c
  41ed64:	jmp    DWORD PTR ds:0x421520
  41ed6a:	jmp    DWORD PTR ds:0x421524
  41ed70:	jmp    DWORD PTR ds:0x421528
  41ed76:	jmp    DWORD PTR ds:0x42152c
  41ed7c:	jmp    DWORD PTR ds:0x421530
  41ed82:	jmp    DWORD PTR ds:0x421534
  41ed88:	jmp    DWORD PTR ds:0x421538
  41ed8e:	jmp    DWORD PTR ds:0x42153c
  41ed94:	jmp    DWORD PTR ds:0x421540
  41ed9a:	jmp    DWORD PTR ds:0x421544
  41eda0:	jmp    DWORD PTR ds:0x421548
  41eda6:	jmp    DWORD PTR ds:0x42154c
  41edac:	jmp    DWORD PTR ds:0x421550
  41edb2:	jmp    DWORD PTR ds:0x421554
  41edb8:	jmp    DWORD PTR ds:0x421558
  41edbe:	jmp    DWORD PTR ds:0x42155c
  41edc4:	jmp    DWORD PTR ds:0x421560
  41edca:	jmp    DWORD PTR ds:0x421564
  41edd0:	jmp    DWORD PTR ds:0x421568
  41edd6:	jmp    DWORD PTR ds:0x42156c
  41eddc:	jmp    DWORD PTR ds:0x421570
  41ede2:	jmp    DWORD PTR ds:0x421574
  41ede8:	jmp    DWORD PTR ds:0x421578
  41edee:	jmp    DWORD PTR ds:0x42157c
  41edf4:	jmp    DWORD PTR ds:0x421580
  41edfa:	jmp    DWORD PTR ds:0x421584
  41ee00:	jmp    DWORD PTR ds:0x421588
  41ee06:	jmp    DWORD PTR ds:0x42158c
  41ee0c:	jmp    DWORD PTR ds:0x421590
  41ee12:	jmp    DWORD PTR ds:0x421594
  41ee18:	jmp    DWORD PTR ds:0x421598
  41ee1e:	jmp    DWORD PTR ds:0x42159c
  41ee24:	jmp    DWORD PTR ds:0x4215a0
  41ee2a:	jmp    DWORD PTR ds:0x4215a4
  41ee30:	jmp    DWORD PTR ds:0x4215a8
  41ee36:	jmp    DWORD PTR ds:0x4215ac
  41ee3c:	jmp    DWORD PTR ds:0x4215b0
  41ee42:	jmp    DWORD PTR ds:0x4215b4
  41ee48:	jmp    DWORD PTR ds:0x4215b8
  41ee4e:	jmp    DWORD PTR ds:0x4215bc
  41ee54:	jmp    DWORD PTR ds:0x4215c0
  41ee5a:	jmp    DWORD PTR ds:0x4215c4
  41ee60:	jmp    DWORD PTR ds:0x4215c8
  41ee66:	jmp    DWORD PTR ds:0x4215cc
  41ee6c:	jmp    DWORD PTR ds:0x4215d0
  41ee72:	jmp    DWORD PTR ds:0x4215d4
  41ee78:	jmp    DWORD PTR ds:0x4215d8
  41ee7e:	jmp    DWORD PTR ds:0x4215e0
  41ee84:	jmp    DWORD PTR ds:0x4215e4
  41ee8a:	jmp    DWORD PTR ds:0x4215e8
  41ee90:	jmp    DWORD PTR ds:0x4215ec
  41ee96:	jmp    DWORD PTR ds:0x4215f0
  41ee9c:	jmp    DWORD PTR ds:0x4215f4
  41eea2:	jmp    DWORD PTR ds:0x4215f8
  41eea8:	jmp    DWORD PTR ds:0x4215fc
  41eeae:	jmp    DWORD PTR ds:0x421600
  41eeb4:	jmp    DWORD PTR ds:0x421604
  41eeba:	jmp    DWORD PTR ds:0x421608
  41eec0:	jmp    DWORD PTR ds:0x42160c
  41eec6:	jmp    DWORD PTR ds:0x421610
  41eecc:	jmp    DWORD PTR ds:0x421614
  41eed2:	jmp    DWORD PTR ds:0x421618
  41eed8:	jmp    DWORD PTR ds:0x421620
  41eede:	jmp    DWORD PTR ds:0x421624
  41eee4:	jmp    DWORD PTR ds:0x42162c
  41eeea:	jmp    DWORD PTR ds:0x421630
  41eef0:	jmp    DWORD PTR ds:0x421634
  41eef6:	jmp    DWORD PTR ds:0x421638
  41eefc:	jmp    DWORD PTR ds:0x42163c
  41ef02:	jmp    DWORD PTR ds:0x421640
  41ef08:	jmp    DWORD PTR ds:0x421644
  41ef0e:	jmp    DWORD PTR ds:0x42164c
  41ef14:	jmp    DWORD PTR ds:0x421654
  41ef1a:	jmp    DWORD PTR ds:0x421658
